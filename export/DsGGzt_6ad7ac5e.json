{"ver":"0.1","info":{"id":"DsGGzt","date":"1678907218","viewed":51,"name":"The Sun - By Bing","username":"typeofprototype","description":"A test using microsoft bing chat to produce a glsl shader. \nfirst successful compile from output without changes. \nBy: Bing\nDirected by: TypeOfPrototype","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sun","noob","bing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Centered coordinates (-1 to 1)\n    vec2 c = uv * 2.0 - 1.0;\n\n    // Distance from the center\n    float d = length(c);\n\n    // Sun color\n    vec3 sun = vec3(1.0, 0.8, 0.6);\n\n    // Sky color\n    vec3 sky = vec3(0.2, 0.4, 0.8);\n\n    // Mix sun and sky colors based on distance\n    vec3 col = mix(sun, sky, smoothstep(0.1, 0.2, d));\n\n    // Get a value between -1 and 1 based on time\n    float t = sin(iTime * 2.0);\n\n    // Add some red and blue colors to the sun based on t\n    col += t * vec3(0.2, -0.1, 0.2);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}