{"ver":"0.1","info":{"id":"ddVSRz","date":"1713966113","viewed":94,"name":"2D Simplex","username":"polaroid","description":"Shaders to draw a 2D simplex","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["simplex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    /*\n    Linear Equation to define the simplex\n    2u + 3v <= 2.5\n    u <= 0.75\n    v <= 0.75\n    u >= 0\n    v >= 0\n    */\n    \n    \n    // Output to screen\n    float u = uv.x ;\n    float v = uv.y ;\n    float l1 = 2.*u + 3.*v ;\n    float l2 = u ;\n    float l3 = v ;\n    float l4 = u ;\n    float l5 = v ;\n    \n    bool b = \n        l1 <= 2.5 &&\n        l2 <= 0.75 &&\n        l3 <= 0.75 &&\n        l4 >= 0. &&\n        l5 >= 0.; \n    \n    fragColor = vec4(0,0,0, 1.0);\n    if (b) {\n        fragColor = vec4(255, 255, 255,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}