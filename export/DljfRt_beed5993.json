{"ver":"0.1","info":{"id":"DljfRt","date":"1694462076","viewed":101,"name":"First shader(GDSMBCZY)","username":"GDSMBCZY","description":"This is the first shader I have made.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["gdsmbczy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.806, 0.333, 0.292);\n    vec3 b = vec3(0.167, 0.751, -3.204);\n    vec3 c = vec3(0.988, 0.522, 1.255);\n    vec3 d = vec3(0.578, 1.648, -0.652);\n\n    return a + b * cos(6.28318*(c*t*d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.x;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 3.0; i++){\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i * 0.5 + iTime * 0.5);\n\n        d = sin(d * 8.0 + iTime*5.)/8.0;\n        d = abs(d);\n\n        d = pow(0.02/d, 2.0);\n\n        finalColor = col * d;\n        }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}