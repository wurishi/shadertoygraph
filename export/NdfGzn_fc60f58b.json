{"ver":"0.1","info":{"id":"NdfGzn","date":"1615356961","viewed":141,"name":"Simple Gradient Mapping","username":"elindie","description":"Reduce a color image to grayscale and re-apply color.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["gradientmapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float computeMaskValue (in sampler2D img, in vec2 uv) {\n    vec4 rgb = texture(img, uv);\n    return dot(rgb.rgb, vec3(0.3, 0.59, 0.11));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 tileUv = fract(uv*vec2(1.0, 1.0));\n    \n    float maskVal = computeMaskValue(iChannel0, tileUv);\n \n    vec4 colorSample = texture(iChannel0, tileUv);\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.2 * cos(iTime+uv.xyx+vec3(0,2,4));\n \n     // Swap these to produce a negative like effect.\n    col = mix(colorSample.rgb * 0.1, col, maskVal);\n    \n    fragColor = vec4( uv.x > 0.5 ? col : colorSample.rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}