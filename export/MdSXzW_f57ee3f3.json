{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"cubemap","id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define MAX_STEPS 70\n#define R 0.5\n\nfloat max_distance = 60.0;\nfloat epsilon = 0.01;\nfloat bump_factor = 0.025;\n\nvec3 diff_color;\n\n\nfloat getDistance(vec3 p)\n{\n    vec3 ctr = vec3(-.2,-.2,1.);\n\n    float rep = 5.;\n    rep = 1000./((80.+40.)*5.);\n    vec3 q = p-ctr;\n    q.xz = mod(q.xz,rep)-.5*rep;\n    float twist=.4;\n    float c = cos(twist*q.y);\n    float s = sin(twist*q.y);\n    mat2 m = mat2(c,-s,s,c);\n    q.xz = m * q.xz;\n    \n    diff_color = texture(iChannel1,vec2(q.x+q.z,q.y)).rgb;\n\n    vec3 b=vec3(.3,10.9,.2);\n    float r = .03;\n    return length(max(abs(q)-b,0.0))-r-diff_color.g*.045;\n    \n}\n\nfloat march(vec3 start_pos, vec3 ray_dir)\n{\n\tfloat d = 0.0;\n\t\n\tfor (int i = 0; i < MAX_STEPS; i++)\n\t{\n\t\tvec3 ray_pos = start_pos + ray_dir*d;\n\t\tfloat s = getDistance(ray_pos);\n\t\t\n\t\td += .9*s;\n\t\t if (s < epsilon)\n\t\t\treturn d;\t\n\t\t\n\t\t\n\t\tif (d > max_distance)\n\t\t\tbreak;\n\t\t\n\t}\n\t\n\treturn max_distance;\n}\n\nvec3 getNormal(vec3 point)\n{\n float d0 = getDistance(point);\n  float dX = getDistance(point - vec3(epsilon, 0.0, 0.0));\n  float dY = getDistance(point - vec3(0.0, epsilon, 0.0));\n  float dZ = getDistance(point - vec3(0.0, 0.0, epsilon));\n\t\n\tvec3 r = vec3(dX-d0, dY-d0, dZ-d0);\n  return normalize(r);\n}\n\nvoid mainImage( out vec4 o, in vec2 I )\n{\n\tvec2 uv = 2.0*I.xy / iResolution.xy - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n\t\n\tfloat dist = 3.0-iTime;\n\n\tvec3 eye_pos = vec3(0.,0., dist);\n\tvec3 ray_dir = normalize(vec3(uv,-1.));\n\n\tfloat d = march(eye_pos, ray_dir);\n\tvec3 point = eye_pos + ray_dir*d;\n\tif (d < max_distance)\n\t{\n\t\tvec3 normal = getNormal(point);\n\n\t\tvec3 light = vec3(0.707, .707, .0);\n\t\t\t\t\n\t\tfloat diffuse = max(0.0, dot(-light, normal));\n\t\tvec3 eye_vec = ray_dir;\n\n        vec3 color =  (diffuse*diff_color);\n        color = mix(color,vec3(.3),1.-exp(-(.006)*d*d*1.44));\n        \n\t\to = vec4(color, 1.0);\n\t}\n\telse\n\t{\n        o = vec4(0.3);\n\t}\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdSXzW","date":"1415939290","viewed":246,"name":"Twisty Towers","username":"dirkadirkadan","description":"yay","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["twistytowers"],"hasliked":0,"parentid":"","parentname":""}}