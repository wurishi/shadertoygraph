{"ver":"0.1","info":{"id":"wdBfzD","date":"1589617161","viewed":217,"name":"Green Lichens","username":"OskarElek","description":"Seasonal growth. It's hard to get rid of them once they take roots.\n\nAll logic is implemented in Buffer A, which addresses itself in a loop.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["automata","cellular","conway","rip","growth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Buffer A does all the work - here we just read it...\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    // ...and make everything look like algae\n    fragColor *= vec4(.8, .95, .2, 1.);\n    fragColor.b += .1;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.141592\n#define PERIOD 1\n#define LOW_LIMIT 2.5\n#define HI_LIMIT 5.5\n\n// periodically tiled noise texture\nfloat noise(vec2 fragCoord)\n{\n    return texelFetch(iChannel0, ivec2(fragCoord) % ivec2(textureSize(iChannel0, 0)), 0).r;\n}\n\n// stochastic cellular automaton using 8-neighborhoods\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float color = .0;\n    \n    // initialize the colonies\n    if (iTime < .777) {\n        color = cos(6.*PI*uv.x) * cos(4.*PI*uv.y) * noise(fragCoord);\n        color = color > .777 ? 1. : 0.;\n    }\n    // grow, grow, grow!\n    else if (iFrame % PERIOD == 0)\n    {\n        // accumulate the local lichen conentration\n        float concentration = 0.;\n        concentration += texelFetch(iChannel1, ivec2(fragCoord)+ivec2(1 , 0), 0).r > .5 ? 1. : 0.;\n        concentration += texelFetch(iChannel1, ivec2(fragCoord)+ivec2(0 , 1), 0).r > .5 ? 1. : 0.;\n        concentration += texelFetch(iChannel1, ivec2(fragCoord)+ivec2(-1, 0), 0).r > .5 ? 1. : 0.;\n        concentration += texelFetch(iChannel1, ivec2(fragCoord)+ivec2(0 ,-1), 0).r > .5 ? 1. : 0.;\n        concentration += texelFetch(iChannel1, ivec2(fragCoord)+ivec2(1 , 1), 0).r > .5 ? .71: 0.;\n        concentration += texelFetch(iChannel1, ivec2(fragCoord)+ivec2(-1, 1), 0).r > .5 ? .71: 0.;\n        concentration += texelFetch(iChannel1, ivec2(fragCoord)+ivec2(1 ,-1), 0).r > .5 ? .71: 0.;\n        concentration += texelFetch(iChannel1, ivec2(fragCoord)+ivec2(-1,-1), 0).r > .5 ? .71: 0.;\n        \n        // vary it with season\n        float seasonal_factor = 1.666 * (1.666+sin(iTime)) * noise(fragCoord);\n        concentration *= seasonal_factor;\n        \n        // measure if the concentration is in the right range\n        if (concentration > LOW_LIMIT && concentration < HI_LIMIT)\n            color = seasonal_factor;\n        else\n            color = 0.;\n    }\n    // just pause the growth this frame\n    else {\n        color = texelFetch(iChannel1, ivec2(fragCoord), 0).r;\n    }\n    \n    fragColor = vec4(color);\n}","name":"Buffer A","description":"","type":"buffer"}]}