{"ver":"0.1","info":{"id":"lt2XDz","date":"1443036195","viewed":529,"name":"cravo-CamMultiply","username":"cravo","description":"webcam experiment","likes":9,"published":1,"flags":2,"usePreview":0,"tags":["webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x = 1.0 - uv.x;\n    \n    vec3 col = texture(iChannel0,uv).xyz;\n    vec3 greyMul = vec3(0.2989, 0.5870, 0.1140);\n    vec3 greyCol = col * greyMul;\n    float grey = greyCol.x + greyCol.y + greyCol.z;\n    float threshold = 0.5 + 0.5 * sin(iTime * 2.0);\n    if ( grey > threshold - 0.2 && grey < threshold + 0.2 )\n    {\n        float u = mod(uv.x * 4.0, 1.0);\n        float v = mod(uv.y * 4.0, 1.0);\n        col = texture(iChannel0,vec2(u,v)).xyz * vec3(uv,0.5+0.5*sin(iTime * 4.0));\n    }\n        \n    fragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}