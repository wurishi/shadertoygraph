{"ver":"0.1","info":{"id":"4tGfzG","date":"1542857947","viewed":91,"name":"x(x+a) in the complex plane","username":"BanditCat","description":"step 1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// First\n\nconst float bailout = 10.0;\nconst int iter = 16;\n\nvec2 imul( in vec2 x, in vec2 y ){\n    return vec2(x.x*y.x - x.y*y.y,x.x*y.y+x.y*y.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy + vec2(-0.5,-0.5))*vec2(4,4);\n    vec2 c = uv;\n    int count = iter;\n      \n    vec2 pet = vec2(cos(iTime*4.0),sin(iTime));\n    uv += pet;\n    \n    for( int i = 0; i < iter; i++ ){\n        vec2 nuv = uv + c;\n\t\tuv = imul( uv, nuv);\n        if( length(uv) > bailout ){\n            count = i;\n            break;\n        }\n    }\n   uv -= pet;\n    \n    \n    vec3 col = vec3( 0.0,  1.0/length(uv), 0 );\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}