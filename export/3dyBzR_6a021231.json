{"ver":"0.1","info":{"id":"3dyBzR","date":"1606345435","viewed":165,"name":"Colorblind","username":"dimonoid","description":"Inspired by user tinoover\nFree to use with credit\nIf you are colorblind, please leave a feedback if this helped you and its efficiency.\nI have no ideas if this even works since I see colors, but tried my best to help colorblind people","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["simulation","experiment","color","colorblind"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = texture(iChannel0, uv);\n\tfloat average;\n        if(cos(iTime*30.0)>0.8){//short red, and long green\n            average = \t(col.r*0.2126 + \n        \t\t\t\t//col.g*0.7152 * NotMeandr + \n        \t\t\t\tcol.b*0.0722)/(0.2126+0.0722);\n        }else{\n            average = \t(//col.r*0.2126 * Meandr + \n        \t\t\t\tcol.g*0.7152 + \n        \t\t\t\tcol.b*0.0722)/(0.7152+0.0722);\n        }\n    \n    vec4 greycol=vec4(average,average,min(col.b*1.2,1.0), 0.0);//simulate daltonism\n    fragColor = vec4(greycol);\n}","name":"Image","description":"","type":"image"}]}