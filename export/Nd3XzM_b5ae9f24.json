{"ver":"0.1","info":{"id":"Nd3XzM","date":"1632820542","viewed":196,"name":"point-in-triangle","username":"Arthas_me","description":"Determine if a point is in a triangle.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat sdLine(in vec2 p, in vec2 a, in vec2 n) {\n    return length((p - a) - dot((p - a), n) * n);\n}\n\n\nbool pointInTriangle(in vec3 p, in vec3 a, in vec3 b, in vec3 c) {\n    return cross(b - a, p - a).z > 0. &&\n        cross(c - b, p - b).z > 0. &&\n        cross(a - c, p - c).z > 0.;\n}\n\n\nvec2 lineIntersection(in vec2 p1, in vec2 n1, in vec2 p2, in vec2 n2) {\n  float a = n1[1] / (n1[0] + 1e-10);\n  float c = p1[1] - a * p1[0];\n\n  float b = n2[1] / (n2[0] + 1e-10);\n  float d = p2[1] - b * p2[0];\n\n  float x = (d - c) / (a - b);\n  float y = a * x + c;\n\n  return vec2(x, y);\n}\n\n\nfloat N = sqrt(0.5);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (-iResolution.xy + 2. * fragCoord) / iResolution.y; // -1 <> 1 by height\n\n    float r = 0.01;\n\n    vec2 a1 = vec2(0.7, 0.), n1 = vec2(N, N);\n    vec2 a2 = vec2(0.7, 0.), n2 = vec2(-N, N);\n    vec2 a3 = vec2(0., 0.), n3 = vec2(sin(iTime) , cos(iTime));\n    \n\n    float c = sdLine(p, a1, n1) - r;\n    c = min(c, sdLine(p, a2, n2) - r);\n    c = min(c, sdLine(p, a3, n3) - r);\n    \n    \n    vec3 A = vec3(lineIntersection(a3, n3, a1, n1), 0.);\n    vec3 B = vec3(lineIntersection(a1, n1, a2, n2), 0.);\n    vec3 C = vec3(lineIntersection(a3, n3, a2, n2), 0.);\n\n    float x = pointInTriangle(vec3(p, 0.), A, B, C) && c > 0.08 ? 1. : 0.;\n    c = step(c, 0.02);\n    c = max(c, x);\n    c *= (1. - pow(length(p), 2.));\n\n    fragColor = vec4(vec3(c),1.0);\n}","name":"Image","description":"","type":"image"}]}