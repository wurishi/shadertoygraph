{"ver":"0.1","info":{"id":"Dt23WK","date":"1673940670","viewed":110,"name":"Square tile mosaic 2","username":"jarble","description":"A mosaic pattern made of square and triangular tiles.","likes":1,"published":3,"flags":8,"usePreview":0,"tags":["music","mosaic"],"hasliked":0,"parentid":"cdXXRB","parentname":"Square tile mosaic"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec2 uv = (fragCoord)/iResolution.y*4.;\n    uv.y += iTime;\n    vec3 col = vec3(0);\n    vec2 offset = vec2(0.),\n    uv1 = uv;\n    for(int k = 0; k < 6; k++){\n        //uv.y += abs(fmod(uv.y+floor(uv1.y*16.)/16.,16.))/16.;\n        uv =\n            abs(fract(uv.yx+(fract(.5-(floor(uv.y)-floor(uv1.y*8.))/8.)))-.5)\n        ;\n        if(uv.y < uv.x) col =\n            vec3(col.yz,abs(max(uv.x,uv.y)))\n        ;\n    }\n    fragColor = vec4(min(col*2.,vec3(1.)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n\nvec2 mainSound(int samp, float time){\n //time /= 1.5;\n float s1 =\n      8.;\n  \n  time += floor(time*s1)/s1;\n  \n  float\n  m4 =\n      sqmod(time,2.)\n  ,\n  s2 =\n      8.\n      //4.*(1.+m4)\n  ,\n  t=\n      time/(1.+m4)\n  ,\n  m1 =\n      sqmod(floor(t*s1)/s1,s2-m4)\n      //fmod(floor(t/(1.+m4))*floor(t*s1),s2)\n      //fmod(floor(t/s1)*(floor(t*s1)+floor(t)),s2)\n  ,\n  m3 =\n      sqmod(floor(t*s1+m1),s2-m1);\n  t /=\n      (1.+sqmod(t/s1,2.))\n      //(1.+fmod(t/(1.+m1),2.))\n  ;\n  t *=\n      s1*s1\n  ;\n  //t /= (1.+m4);\n\n    float m2 =\n      1. + sqmod(t/s1,s1)\n  ;\n  \n  float a=sqrt((1.-sqrt(max(fract(t/s1/s1),fract(t/s1)))))*.2,\n\n  nb = pow(2.,(m3+m2)/5.+6.5);\n\n  return vec2(fract(time*nb*.998)\n   ,fract(time*nb))*a;\n\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"#define fmod(x,y) mod(floor(x),y)\n#define smod(x,y) floor(mod(floor(x)*floor(x),y))\n#define sqmod(x,y) floor(mod(floor(x)/4.,y*y)/y)\n#define floor1(x) floor(x)*floor(mod((x)/4.,2.))\n#define floor2(x) floor(x)*pow(floor(mod((x)/4.,3.)),2.)","name":"Common","description":"","type":"common"}]}