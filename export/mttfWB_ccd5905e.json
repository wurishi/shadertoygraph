{"ver":"0.1","info":{"id":"mttfWB","date":"1701566993","viewed":27,"name":"Manderbrot Set Zoom In","username":"ZeroreZ","description":"Mandelbrot set zoom in using glsl . Its not in so high quality as you may see on internet but it was made at 2:27 am and its my first try to this kind of stuff. Enjoy :)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","zoom","manderbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Created by ZeroreZ\n//Mandelbrot Set Zooming in\nuniform float time;\nconst float MAX_ITER = 120.;\n\nfloat mandebrot(vec2 uv) //Function Zn+1=Zn^2+c\n{   //Getting complex numbers z and c\n    vec2 c = 2.* uv - vec2(0.7,0.); //making fractal fit in screen resolution\n    c = c/pow(iTime,4.) - vec2(0.65,0.45);\n    vec2 z = vec2(0.,0.);\n    float iter = 0.;\n    \n    for(float i; i < MAX_ITER; i++) //Checking if dot product of z is > than 4 untill iter =  128\n    {\n        z = vec2(z.x*z.x - z.y*z.y,\n        2.*z.x*z.y) + c;\n        \n        if(dot(z, z) > 4.)\n        {\n            return iter / MAX_ITER;\n        }\n        iter++;\n    }\n    return 0.;\n}\n\nvec3 randomGen(float m) //Pseudorandom generator\n{\n    float x = fract(sin(m)* 4954.246);\n    float y = fract(sin(m + x)* 2852.389);\n    float z = fract(sin(m + y)* 8268.365);\n    return vec3(x, y, z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) \n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 col = vec3(0.0);\n    \n    float m = mandebrot(uv);\n    col.xyz += m; //Just adding m to color on x, y and z axis for visualization\n    col += randomGen(m);\n    //col = pow(col, vec3(0.45)); //Gamma correction\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}