{"ver":"0.1","info":{"id":"7dfGRB","date":"1616146951","viewed":69,"name":"Liquid reverse","username":"rmdms","description":"Hope this will inspires someone","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["liquid","white","black"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n|--------------------------------------------------------------------------\n| RÃ©my Dumas\n|--------------------------------------------------------------------------\n|\n| Twitter: @remsdms\n| Portfolio: remydumas.fr\n|\n*/\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n/*\n|--------------------------------------------------------------------------\n| Noise\n|--------------------------------------------------------------------------\n|\n| ...\n|\n*/\n\nfloat noise(vec2 p) {\n    p=(p);\n    return fract(sin(p.x*45.11+p.y*97.23)*878.73+733.17)*2.-1.0;\n}  \n\n/*\n|--------------------------------------------------------------------------\n| Map\n|--------------------------------------------------------------------------\n|\n| ...\n|\n*/\n\nfloat map(vec2 p) {\n    return length(p) - 0.2;\n}\n\n\n/*\n|--------------------------------------------------------------------------\n| Main\n|--------------------------------------------------------------------------\n|\n| Sandbox and sometimes something good\n|\n*/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n  vec3 color = vec3(1.,1.,1.);\n\n  for(float i = 1.; i < 12.0; i++){\n      uv.x -= uv.y * sin(uv.x) * sin(iTime);\n  }\n  \n  color = vec3(smoothstep(1.0,0.9,map(uv)));   \n\n  fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}