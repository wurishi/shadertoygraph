{"ver":"0.1","info":{"id":"dlGXDV","date":"1686361479","viewed":35,"name":"Moire Cossines","username":"davidmachadosf","description":"First shader, studing...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math","cos","trigonometry","moirepatterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float border   = .04;\nconst float speed    = 2.;\nconst float colSpeed = .2;\nconst float nb       = 11.;\nconst float exponant = 19.;\n\nconst vec2  s = vec2(1, 1.7320508);\n\n//Set mouseControl to true to enable mouse control (duh)\nconst bool mouseControl = true;\n\nvec3 palette(float t) {\n\n    vec3 a = vec3( .5,  .5,     .5    );\n    vec3 b = vec3( .5,  .5,     .5    );\n    vec3 c = vec3(1. , 2.,     1.     );\n    vec3 d = vec3( .0,  .33333, .66666);\n    \n    return a + b*cos(6.28318*(c*t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    \n    float t = iTime;\n      \n    if(mouseControl) {\n        vec2 mouse = (iMouse.xy/iResolution.xy) - .5;\n        uv = abs(uv - 2.*mouse);\n    }\n    else {\n        uv = abs(uv);\n    }\n    \n    float m = exp(length(uv)*exponant);\n    m = sin(m*nb + t*speed)/nb;\n    m = abs(m);\n    m = step(border,m);     \n\n    vec3 finalCol = m * palette(length(uv) + t*colSpeed);\n    fragColor = vec4(finalCol,1.0);\n}","name":"Image","description":"","type":"image"}]}