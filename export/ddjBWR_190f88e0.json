{"ver":"0.1","info":{"id":"ddjBWR","date":"1691832367","viewed":31,"name":"Beating shattered heart","username":"ricvolpe","description":"A beating heart with a broken wing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["heart","beating"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate (float angle)\n{\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\nvec2 legsPlane( in vec2 p )\n{\n    // create two planes horizontally\n    p.x = abs(p.x);\n    \n    // titlt planes diagonally \n    p *= rotate(0.8);\n    \n    // squish planes and moves them away from the centre\n    p = p * vec2(1.5, 0.7) - vec2(0.5, 0.1);\n    \n    return p;\n}\n\nfloat waves(in float d, in float i)\n{\n    return sin(d * 50. + iTime * i);\n}\n\nfloat feelLegs( in vec2 p )\n{\n    // parameters\n    float ints = 0.5;\n    \n    // get distance from center\n    float d = length(p);\n    \n    // create hard spatial boundary of the shape\n    if (d > 1.0)\n        return 0.0;\n    \n    // create inward slow-frequency waves\n    return waves(d, ints);\n}\n\nfloat painSource( in vec2 lp, in vec2 p )\n{   \n    // parameters\n    float ints = 6.0;\n    \n    // get distance from center\n    float d = length(lp);\n    \n    // create hard spatial boundary of the shape\n    if (d > 1.0)\n        return 0.0;\n    \n    if (p.x > -0.3 + 0.35 * p.y)\n        return 0.0;\n        \n    return waves(d, ints);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    // Create background\n    vec3 col = vec3(1.0);\n    \n    \n    // Create legs field that contains feelings\n    vec2 pl = legsPlane(uv);\n    \n    // Slow frequency background feeling of having legs\n    float l = feelLegs(pl);\n    float pn = painSource(pl, uv);\n    \n    // Render feelings on background color;\n    col -= l;\n    col -= pn;\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}