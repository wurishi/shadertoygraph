{"ver":"0.1","info":{"id":"MllcDs","date":"1507305042","viewed":77,"name":"Reveal_","username":"bstrong43","description":"Reveals image behind based on mouse position","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["reveal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 blur = mat3(\n 0.111, 0.111, 0.111,\n 0.111, 0.111, 0.111,\n 0.111, 0.111, 0.111\n);\n\nmat3 sharpen = mat3(\n 0.0, -1, 0.0, \n -1,   5, -1, \n 0.0, -1, 0.0\n);\n\nmat3 edge = mat3(\n -1,  -1, -1, \n -1,   8, -1, \n -1,  -1, -1\n);\n\nmat3 emboss = mat3(\n -2, -1, 0, \n -1,  1, 1, \n  0,  1, 2\n);\n\nmat3 tsobel = mat3(\n  1,  2, 1, \n  0,  0, 0, \n  -1, -2, -1\n);\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord, in sampler2D tex){\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n\treturn texture(tex, uv).xyz;\n}\n\nvec3 aFilter(in vec2 fragCoord, in sampler2D tex, mat3 kernel)\n{\n\tvec3 sum = vec3(0.0,0.0,0.0);\n\tint row=-1, col=-1;\n\n\tfor(int i=0 ; i<3; i++){\n\t\tfor(int j=0; j<3; j++){\n\n\t\t\tsum += aSample (row, col, fragCoord, tex) * kernel[i][j];\n\t\t\tcol++;\n\t\t}\n\t\trow++;\n\t}\n\treturn sum;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspectRatio = iResolution.y/iResolution.x;\n    uv.y *= aspectRatio;\n    \n    float radius = 0.1;//Change to set size of circle\n    vec2 m = iMouse.xy/iResolution.xy;\n    m.y*=aspectRatio;\n    //Set Colors from channels\n    vec3 BG = texture(iChannel0,uv).xyz;\n    vec3 FG = texture(iChannel1, uv).xyz;\n    \n    //Apply effects\n    BG = aFilter(fragCoord.xy, iChannel0,blur);\n    FG = aFilter(fragCoord.xy, iChannel1, sharpen);\n    //Other effects include emboss, edge detection, and top sobel\n    \n    if(length(m-uv)<radius){\n        fragColor = vec4(FG,1.0);\n    }\n    else \n        fragColor = vec4(BG,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}