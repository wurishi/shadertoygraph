{"ver":"0.1","info":{"id":"XddyRX","date":"1519676095","viewed":223,"name":"keep making fractals","username":"wyatt","description":"just keep playin'","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["fractal","complex","inversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 mul (vec2 a, vec2 b) {\n\treturn vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (5.+2.*sin(iTime))*(fragCoord/iResolution.xy*2.-1.);\n    uv.x *= iResolution.x/iResolution.y;\n    float t = 0.1*iTime;\n    mat2 m = mat2 (sin(t),cos(t),-cos(t),sin(t));\n    vec3 col = vec3(0);\n    for (int x = 0; x < 2; x++)\n        for (int y = 0; y < 2; y++) {\n        vec2 v = uv+vec2(x,y)/iResolution.xy;\n        for (int i = 0; i < 50; i++){\n            v = v/dot(v,v);\n            v = mul(v,v)-vec2(2./3.,.11*sin(iTime));\n        }\n        col += 1./4.*clamp(abs(v.xyy),0.,1.);\n    }\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}