{"ver":"0.1","info":{"id":"lXtXR8","date":"1718638169","viewed":46,"name":"Cell Lab devorocyte shader code","username":"labyrinth","description":"The shader code for a devorocyte cell in the mobile game Cell Lab","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["celllab","devorocyte"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nconst vec4 bgcol = vec4(217./255., 217./255., 253./255., 1.);\nconst vec4 col = vec4(0.439, 1., 0.086, 1.);\n\nfloat radius = 100.;\n\nconst float scale = 5000.;\n\nconst float NR = 0.005*scale;\nconst float EW = 0.002*scale;\n\nconst float N = 19.;\nconst float Nhat = N/(2.*M_PI);\nconst float MAX_R = 0.03*scale;\nconst float R = MAX_R*0.04;\nconst float H = MAX_R*0.3;\nconst float HW = MAX_R*0.1/2.;\nconst float X = HW+R*0.84712708838;\nconst float x1 = X-R*0.98639392383;\n\nvec4 spikes(vec2 p){\n    vec4 fragColor = bgcol;\n\n\tfloat d = length(p)-radius;\n    float a = 2.*fract(Nhat*atan(p.y, p.x));\n    if(a > 1.) a = 2.-a;\n\tfloat x = (1.-a)*radius*M_PI/N;\n\tfloat h;\n\tif(x < x1 || x > X){\n\t\th = H*(1.-x/HW);\n\t}else{\n\t\th = R-sqrt(R*R-(x-X)*(x-X));\n\t}\n    if(d < h){\n\t\tfragColor = vec4(0.5*col.rgb, 1.);\n\t}\n    \n    return fragColor;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    fragColor = bgcol;\n    vec2 p = fragCoord-iResolution.xy/2.;\n    vec2 tp = fragCoord-iResolution.xy/2.;\n\n    float ds = dot(p, p);\n\n    float srr = ds/((radius-EW)*(radius-EW));\n\n    if(ds > radius*radius){\n        fragColor = spikes(p);\n        return;\n    }\n\n    if(ds > NR*NR && srr < 1.){\n        // Used the mix function because transparency won't work\n        fragColor = mix(bgcol, col, .5);\n    }else{\n        fragColor = vec4(0.5*col.rgb, 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}