{"ver":"0.1","info":{"id":"X3KSD1","date":"1719903762","viewed":28,"name":"HW2-Hzzzch","username":"Hzzzch","description":"Turner","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Copyright Hzzzch, 2024\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n\n// based on https:www.shadertoy.com/view/l3jXDV\n\n#define PI 3.14159265359\n\nvec3 colorA = vec3(0.306,0.445,0.912);\nvec3 colorB = vec3(1.000,0.508,0.224);\nvec3 colorC = vec3(0.007,0.115,0.300);\n\nvec3 colorD = vec3(0.231,0.359,0.625);\nvec3 colorE = vec3(0.003,0.011,0.180);\nvec3 colorF = vec3(0.098,0.172,0.345);\nvec3 colorG = vec3(0.388,0.360,0.685);\n\nvec3 colorSun = vec3(0.985,0.478,0.544);\nvec3 colorMoon = vec3(0.628,0.711,0.912);\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.1, pct, st.y) -\n          smoothstep( pct, pct+0.1, st.y);\n}\n\nfloat easeOutHalfQuart(float x) {\n\treturn 1.0 - pow(1.0 - x, 2.0);\n}\n\nfloat halfQuad(float x) {\n    return pow(cos(x * PI / 2.0), 2.5);\n}\n\nfloat easeInSine(float x) {\n\treturn 1.0 - cos((x * PI) / 2.0);\n}\n\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\treturn vec4(color*(1.0-clamp(length(pos - uv) - rad, 0.0, 1.0)), 1.0);\n}\n\nvec4 outofcircle(vec2 uv, vec2 pos, float rad){\n    float d = length(pos - uv) - rad;\n    float t = clamp(d, 0.0, 1.0);\n    return vec4(vec3(0.0)*t,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 colorday = vec3(0.0);\n    vec3 colornight = vec3(0.0);\n    vec3 pct = vec3(st.y);\n\tvec2 uv = fragCoord.xy;\n    \n    //让圆周期性运动\n\tvec2 center = vec2(iResolution.x * (2.5+cos(iTime))/4.0  , iResolution.y * 0.35 + 0.15*sin(iTime)*iResolution.y);\n\tfloat radius = 0.02 * iResolution.y;\n    \n    //配置白天颜色\n    pct.r = easeOutHalfQuart(0.5-st.x) * smoothstep(0.8, 1.0, st.y);\n    pct.b = easeInSine(st.y);\n    pct.g = 0.0;\n    colorday = mix(colorB, colorA, pct);\n\n    pct = vec3(halfQuad(st.y)) * smoothstep(0.0, 0.4, st.y);\n    colorday = mix(colorday, colorA, pct);\n\n    pct = vec3(halfQuad(st.y)) * smoothstep(0., 0.2, st.y) * smoothstep(1.5, 0.0, st.x);\n    colorday = mix(colorday, colorC, pct);\n    \n    pct = vec3(plot(st, 0.25) * 0.3);\n    colorday = mix(colorday, colorC/2.0, pct);\n    \n    //配置夜晚颜色\n    pct = vec3(st.y);\n    colornight = mix(colorD , colorE, pct);\n    \n    pct = vec3(halfQuad(st.y)) * smoothstep(0.0, 0.4, st.y);\n    colornight = mix(colornight, vec3(1.0), pct);\n\n    pct = vec3(halfQuad(st.y)) * smoothstep(0., 0.2, st.y) * smoothstep(1.5, 0.0, st.x);\n    colornight = mix(colornight, colorF, pct);\n    \n    pct = vec3(plot(st, 0.25) * 0.3);\n    colornight = mix(colornight, colorG/2.0, pct);\n    \n    //颜色合并\n    vec3 background = colorday*(1.0+sin(iTime))/2.0+colornight*(1.0-sin(iTime))/2.0;\n    \n    //把圆的位置留出来 防止前面的颜色对圆产生干扰\n    vec4 layer1 = vec4(background*clamp(length(center - uv) - radius, 0.0, 1.0),1.0);\n    \n    vec4 layer2 = circle(uv, center, radius, colorSun*(1.0+sin(iTime))/2.0 );\n    vec4 layer3 = circle(uv, center, radius, colorMoon*(1.0-sin(iTime))/2.0 );\n    \n    vec4 layer = layer1 + layer2 + layer3 ;\n    fragColor = layer;\n    \n}","name":"Image","description":"","type":"image"}]}