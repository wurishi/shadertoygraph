{"ver":"0.1","info":{"id":"DlyyDW","date":"1700205901","viewed":22,"name":"旋转移动","username":"JesseZhuang","description":"旋转移动案例","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0 * (fragCoord.xy - 0.5 * iResolution.xy)/min(iResolution.x, iResolution.y);\n\n    uv = rotate2d(sin(iTime)*PI) * uv;\n    uv = scale(vec2(sin(iTime)+1.0)) * uv;\n    // Time varying pixel color\n    vec3 col = vec3(.0,.0,.0); \n    \n    col = ((step(abs(uv.x), .5) == 1.0) && (step(abs(uv.y), .5) == 1.0))? vec3(uv.x,uv.y,.5):vec3(.0,.0,.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}