{"ver":"0.1","info":{"id":"WdcSRr","date":"1595439634","viewed":268,"name":"Kaleidoscope Tutorial","username":"deliaev","description":"followed this tutorial on 10/16/19","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["triangle","kaleidoscope","koch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N (float angle) {\n \treturn vec2(sin(angle), cos(angle));   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    uv *= 1.25;\n\n    vec3 col = vec3(0);\n    \n    //float angle = (2./3.)*3.14159;\n    uv.x = abs(uv.x);\n    uv.y += tan((5./6.)*3.14159)*.5;\n    // y = tan(a)*0.5\n    vec2 n = N((5./6.)*3.14159);\n    float d = dot(uv-vec2(.5,0), n);\n    uv -= n*max(0.,d)*2.;\n    \n    //col += smoothstep(.01, .0, abs(d));\n    \n    /*float d = dot(uv, n);\n    \n    uv -= n*min(0., dot(uv, n);)*2.;\n    \n    col.rg += uv;\n    col += smoothstep(.01, .0, abs(d));*/\n    \n    n = N((2./3.)*3.14159);\n    float scale = 1.;\n    uv.x += .5;\n    for (int i=0; i<4; i++) {\n        uv *= 3.;\n        scale *= 3.;\n    \tuv.x -= 1.5;\n    \n    \tuv.x = abs(uv.x);\n    \tuv.x -= .5;\n    \tuv -= n*min(0., dot(uv, n))*2.;\n    }\n    \n    \n    d = length(uv - vec2(clamp(uv.x, -1., 1.),0));\n    col += smoothstep(1./iResolution.y,.0, d/scale);\n    uv /= scale;\n    col += texture(iChannel0, uv*2.+iTime*.03).rgb;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}