{"ver":"0.1","info":{"id":"wllSR7","date":"1562599493","viewed":89,"name":"Normalized square template","username":"tgsstdio","description":"Centre of screen is 0,0\n\nStarting point to working on an template where x,y values are square","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["screen","template","square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float UNIT_SCALE = 4.0;\n\n// INTO CORNERS \nconst vec2 corners_0 = vec2(1, 1);\nconst vec2 corners_1 = vec2(-1, 1);\nconst vec2 corners_2 = vec2(-1, -1);\nconst vec2 corners_3 = vec2(1, -1);\n\n// https://www.shadertoy.com/view/XsXSz4\n// signed distance to a 2D triangle\nfloat sdTriangle( in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p )\n{\n\tvec2 e0 = p1 - p0;\n\tvec2 e1 = p2 - p1;\n\tvec2 e2 = p0 - p2;\n\n\tvec2 v0 = p - p0;\n\tvec2 v1 = p - p1;\n\tvec2 v2 = p - p2;\n\n\tvec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n\tvec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n\tvec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    \n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min( min( vec2( dot( pq0, pq0 ), s*(v0.x*e0.y-v0.y*e0.x) ),\n                       vec2( dot( pq1, pq1 ), s*(v1.x*e1.y-v1.y*e1.x) )),\n                       vec2( dot( pq2, pq2 ), s*(v2.x*e2.y-v2.y*e2.x) ));\n\n\treturn -sqrt(d.x)*sign(d.y);\n}\n\nbool isTriangle2(vec2 point, vec2 c0, vec2 c1, vec2 c2)\n{\n    return (sdTriangle(c0, c1, c2, point) <= 0.);        \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    // SCREEN CORRECTION TO SQUARE\n    float fov = (iResolution.y / iResolution.x);\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    uv -= 0.5;\n    uv.y *= fov;\n    \n    // SCALE \n    uv *= UNIT_SCALE;   \t     \n    \n \t// DRAW SQUARE WITH 2 TRIANGLES\n    if (isTriangle2(uv, corners_0, corners_1, corners_2))\n \t\tfragColor += vec4(1,1,0,1);\n\tif (isTriangle2(uv, corners_0, corners_2, corners_3))\n        fragColor += vec4(1,0,1,1);\n\n}","name":"Image","description":"","type":"image"}]}