{"ver":"0.1","info":{"id":"DtdGRr","date":"1681883081","viewed":102,"name":"Lyapunov Fractal","username":"Jinkweiq","description":"Lyapunov Fractal - https://www.youtube.com/watch?v=yGwy2WyQCQE. Not super pretty but was done in maybe 5 mins.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iterations 1000\n#define pattern_length 6\n#define patterns 10\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 4. * (fragCoord/iResolution.y) - vec2(2., 0.);\n    float a = uv.x;\n    float b = uv.y;\n    \n    float pattern[pattern_length * patterns] = float[pattern_length * patterns](\n        a,b,a,b,a,b,\n        a,b,a,a,a,a,\n        a,a,a,b,b,b,\n        a,a,b,b,a,a,\n        b,a,a,b,a,a,\n        b,a,b,b,b,b,\n        b,a,a,a,b,b,\n        a,b,a,a,b,b,\n        b,b,a,a,b,a,\n        a,b,b,b,a,b\n    );\n    \n    float lambda = 0.;\n    float xn = 0.5;\n    int p = 0;\n    for (int i=0;i<iterations;i++) {\n        int pi = int(iTime/3.) % patterns;\n        float r = pattern[p+pi*pattern_length];\n        xn = r*xn*(1.-xn);\n        lambda += log(abs(r*(1.-2.*xn)));\n        p = ++p % pattern_length;\n        \n    }\n    lambda /= float(iterations);\n    \n    vec3 col = vec3(0.188,0.278,0.733) * smoothstep(1., -.2, lambda);\n    if (lambda < 0.) {\n        col = vec3(1.000,0.835,0.000) *  smoothstep(-6., 2., lambda);\n    }\n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}