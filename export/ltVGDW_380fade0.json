{"ver":"0.1","info":{"id":"ltVGDW","date":"1474746235","viewed":164,"name":"- Figuras -","username":"FranciscoGarcia","description":"Funciones para crear figuras básicas.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangulo","curculo","rectangulo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n#define DPI 6.2831853\n\nfloat circulo(float r, in vec2 uv, in vec2 pos){\n\t\n    uv = uv-pos;\n    return 1.0-step(r,length(uv));\n        \n}\n\nfloat rect(in vec2 uv, float a, float b, float c, float d, in vec2 pos){\n\t\n    uv = (uv+vec2(0.5,0.5))-pos;\n    float xy = step(a,uv.x);\n    xy *= step(b,uv.y);\n    xy *= step(c,1.-uv.x);\n    xy *= step(d,1.-uv.y);\n    return xy;\n}\n\nfloat xFigura(in vec2 uv, float n, float tam, in vec2 pos ){\n    \n    uv = uv-pos;\n    float a = atan(uv.x, uv.y) - PI;\n    float r = DPI/n;\n    float d = cos(floor(0.5+a/r)*r-a)*length(uv);\n    d = 1.0-step(tam,d); \n    return d;\n}\t\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    // coordenadas de -1.0 a 1.0\n    vec2 p = -1.0 + 2.0*uv;\n    p.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    \n    //circulo(radio, coor, posición)\n    float c0 = circulo(0.41, p, vec2(-1.2, 0.));\n    \n    //rect(coor, a,b,c,d, posición)\n    float r0 = rect(p,-0.2,0.1,0.2,0.2, vec2(0.2,0.0));\n    \n    //xFigura(coor, nLados, tamaño, posición)\n    float x0 = xFigura(p, 3.0, 0.30, vec2(1.2,-0.1));\n    \n    col += vec3(c0)*vec3(0.0,0.3,0.6);\n    col += vec3(r0)*vec3(1.0,0.8,0.0);\n    col += vec3(x0)*vec3(0.6,0.0,0.0);\n\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}