{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float thresh = 2.0;\nconst float lowThresh = 0.25;\n\n// effect ringblobs\n// Just tried to recreate an effect I did years ago in Quickbasic.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 p = ( fragCoord.xy / iResolution.x ) - vec2(0.5, 0.5 * (iResolution.y / iResolution.x));\n    float time = iTime;\n\n\tvec3 rgb = vec3(0.0);\n\tfloat c = 0.0;\n\tfor (int i=0; i<16; i++)\n\t{\n\t\tvec2 pos = p + vec2(sin(float(i*i) + 0.5 * time) * 0.4, sin(float(i*i*i) + 0.7 * time) * 0.2);\n\t\tc += pow(0.08 / length(pos), 8.0);\n\t}\n\tif (c > 1.0 && c < thresh) c = (thresh - c) / (thresh - 1.0);\n\tif (c >= thresh)\n\t{\n\t\t// do effect\n\t\tc = mod(sin(p.x * 80.0) + sin(p.y * 50.0) + sin(p.x * 16.0 + sin(p.y * 32.0 + 4.0 * time)) + sin(p.y * 24.0 + 3.0 * time + sin(p.x * 56.0 + p.y * 48.0)) + 4.0, 2.0);\n\t\tif (c > 1.0) c = 2.0 - c;\n\t\trgb = vec3(c, c * 2.0, c * 4.0);\n\t}\n\telse if (c > lowThresh)\n\t{\n\t\trgb = vec3(c);\n\t}\n\telse\n\t{\n\t\tfloat gr = p.x + p.y;\n\t\tfloat rx = floor(sin(gr * 15.0) + sin(gr * 25.0 - 3.0 * time) * 4.0);\n\t\tfloat ry = floor(sin(gr * 25.0 + time) + sin(gr * 35.0 + 4.0 * time) * 4.0);\n\t\tfloat rz = floor(sin(gr * 45.0) + sin(gr * 20.0 + sin(gr * 30.0 + 2.0 * time)) * 4.0);\n\t\tvec3 raster = vec3(rx, ry, rz) * 0.25;\n\t\tfloat d = c / lowThresh;\n\t\trgb = d * vec3(c) + (1.0 - d) * raster;\n\t}\n\t\n\tfragColor = vec4(rgb, 1.0);\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dBXRt","date":"1414671040","viewed":275,"name":"Effect Ringblobs","username":"Optimus","description":"Just tried to recreate an effect I did several years ago in Quickbasic.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","blobs","metaballs","plasma","oldskool","rasterbars"],"hasliked":0,"parentid":"","parentname":""}}