{"ver":"0.1","info":{"id":"mdfcD4","date":"1686812669","viewed":74,"name":"RoundedProgressBar","username":"beetom","description":"An examlpe of rouned progress bar","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["progressbar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535;\n\n\nfloat sdArc(vec2 p, vec2 o, float iner, float outer, float angle)\n{\n    vec2 c = p - o;\n    float n = length(c);\n    float d0 = n - iner;\n    float d1 = outer - n;\n    \n    p = p + vec2(.01, 0);\n    float rad = mod(abs(acos((p.x * o.x + p.y * o.y) / (length(p) * length(o)))), PI);\n    rad = (o.y - p.y) < 0. ? rad : 2. * PI - rad;\n    float t = (angle + .5f) / 180.f * PI;\n    float d2 = t - rad;\n    float d = min(d0, d1);\n    d = min(d, d2);\n    \n    return smoothstep(0.0, 0.01, d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = (vec2(.5) - uv) / vec2(.5);\n    uv.x *= (iResolution.x  / iResolution.y);\n    \n    // Time varying pixel color\n    //float d = sdSpot(vec2(.0, .0), uv, 0.3);\n    float d = 0.f;\n    vec3 col = vec3(.0f);\n    if(d > 0.f)\n        col += vec3(d);\n    d = sdArc(vec2(.0, .0), uv, 0.35, 0.45, 360.);\n    vec3 colorIndicator = vec3(1., .4, .7);\n    vec3 colorBg = vec3(.3, .3, .3);\n    if(d > 0.f)\n        col += (colorBg * d);\n        \n    d = sdArc(vec2(.0, .0), uv, 0.375, 0.425, mod(iTime * 100., 360.));\n    if(d > 0.f)\n        col += (colorIndicator * d);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}