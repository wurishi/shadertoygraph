{"ver":"0.1","info":{"id":"mdGXDd","date":"1681798216","viewed":40,"name":"mix2","username":"jsweetpotato","description":"dddsa","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["sasdsad"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 base = texture(iChannel0, uv);\n    vec3 video = texture(iChannel1, uv).rgb;\n    \n    vec3 blendclr = vec3(0.);\n    blendclr.rgb = mix(video.rrr, base.rgb, base.a);\n    \n    vec4 hardMixColor = vec4(0.0);\n    hardMixColor.rgb = smoothstep(0.3, .7,  blendclr.rgb); // apply hard mix\n    \n\n    // Output to screen\n    \n    vec3 col = vec3(0.1,0.8,0.2)*hardMixColor.rgb;\n    fragColor = vec4(col, hardMixColor.a);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rect(vec2 size, vec2 uv, vec2 pos, float blur){\n    size *= 0.5 ;\n    vec2 sw = smoothstep(pos+size, pos+size-blur, uv);\n    vec2 ne = smoothstep(pos-size, pos-size+blur, uv);\n\n    float result = ne.x*ne.y*sw.x*sw.y;\n   \n    return result;\n}\n\nfloat hrect(float f, vec2 uv, vec2 pos,float blur, float opacity){\n    float th = rect(vec2(1.1,0.3), uv-vec2(0.0,0.4),pos,blur)*opacity;  \n    float mh = rect(vec2(1.1,0.4), uv-vec2(0.0,0.1),pos,blur)*opacity;\n    float bh = rect(vec2(1.1,0.5), uv+vec2(0.0,0.3),pos,blur)*opacity;  \n\n    return  mh*f + th*f + bh*f;\n}\n\n\nfloat boxes(vec2 uv, vec2 size, float blur){\n\n    vec2 pos = vec2(0.5);\n    vec2 offset = vec2(0.35,0.0);\n    \n    float mv = rect(size, uv,pos,blur);\n    float lv = rect(size, uv+offset,pos,blur);  \n    float rv = rect(size, uv-offset,pos,blur);  \n    \n    float left = hrect(lv, uv, pos, blur, 0.5);\n    float middle = hrect(mv, uv, pos, blur, .9);\n    float right = hrect(rv, uv, pos, blur, .4);\n    \n    float bg = smoothstep(0.3,0.3+blur, uv.x);\n    \n    return mix(left+middle+right,bg, 0.6);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv*= 60.;\n    uv = fract(uv);\n    //uv = uv*2.-1.;\n    \n    float alpha = 1.-boxes(uv, vec2(0.4, 1.1), 0.12);\n    vec3 color = vec3(0.);\n\n    fragColor = vec4(color,alpha);\n}","name":"Buffer A","description":"","type":"buffer"}]}