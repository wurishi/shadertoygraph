{"ver":"0.1","info":{"id":"XflXzn","date":"1704901116","viewed":141,"name":"Colorful spirals","username":"IanDotVos","description":"uncommented","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["simple","colorful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ray_length = 0.25; //SHOULD be less than ray_rate\nfloat ray_rate = 1.0;\nfloat ray_width = 0.4; //Depends on s\nfloat s = 3.1415926535 / 2.5; //pie slice angle\nfloat acceleration_effect = 0.3; //Setting to 0 and changing saw_function for exp can be interesting\nfloat time_multiplier = 1.0; //FOR THOSE WHO WANT IT SLOWER!!\n\n\nfloat saw_function(float x)\n{\n    float t = mod(x, 1.0);  \n    //You can try these too!!\n    //float t = mod(exp(x), 1.0); //Needs acceleration_effect = 0.0\n    //float t = mod(sin(x + iTime * 0.15), 1.0); \n    return max(min(1.0, min(2.0*t, -2.0*t + 2.0)), 0.0) * 2.0 - 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 colors[5];\n    colors[0] = vec4(0.396, 0.294, 0.737, 1.0);\n    colors[1] = vec4(0.1411, 0.8156, 0.6823, 1.0);\n    colors[2] = vec4(0.8, 0.2, 0.4, 1.0);\n    colors[3] = vec4(0.5, 0.23, 0.8, 1.0);\n    colors[4] = vec4(0.6, 0.3, 0.6, 1.0); //Changing this color to white is interesting\n    \n    vec2 center = (iResolution.xy / 2.0) / iResolution.y;\n \n    vec2 centers[5];\n    centers[0] = center;\n    centers[1] = center + vec2(0.2, 0.4);\n    centers[2] = center - vec2(-0.6, 0.2);\n    centers[3] = center + vec2(-0.2, -0.45);\n    centers[4] = vec2(0.3, 0.7);\n    \n    float offsets[5]; //I don't anime!\n    offsets[0] = 0.0;\n    offsets[1] = 0.6;\n    offsets[2] = -0.4;\n    offsets[3] = 1.2;\n    offsets[4] = -0.9;\n   \n    vec2 uv = fragCoord / iResolution.y;\n    fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    \n    for (int i = 0; i < 5; i++)\n    {\n        float magnitude = distance(uv, centers[i]);\n    \n        vec2 from_center = (centers[i] - uv) / magnitude;\n        float angle = atan(from_center.y, from_center.x) + 3.14159 +\n            saw_function(pow(2.0 * magnitude, 0.5) * 2.0 - time_multiplier * iTime * acceleration_effect + offsets[i]);\n\n        float mod_angle = mod(angle, s);\n\n        float x = mod_angle / (s * ray_width);\n        float g = pow(magnitude, 0.75);\n        \n        float t = max(0.0,\n        \n        min(40.0 * x * g, //for antialiasing (angular antialiasing)\n       \n        min(float(mod_angle < s * ray_width),\n       \n        40.0 * (1.0 - x) * g))); //for antialiasing\n        \n        \n        //TODO: radial antialiasing\n        t *= float(mod(magnitude - time_multiplier * iTime * 0.7 - float(i) * 0.2, ray_rate) < ray_length);\n\n\n        fragColor = mix(fragColor, colors[i], t);\n    }\n}","name":"Image","description":"","type":"image"}]}