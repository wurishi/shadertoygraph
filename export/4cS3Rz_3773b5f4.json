{"ver":"0.1","info":{"id":"4cS3Rz","date":"1703714955","viewed":20,"name":"testw2","username":"CSV","description":"jhvjh","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"4fX3DB","parentname":"testw1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n     vec2 uv = fragCoord/iResolution.y;\n     uv = (uv-vec2(5.0))*(abs(sin(iTime*0.1)));\n     //uv.xy += iTime*0.1;\n    \n    \n    vec2 tilingResolution = vec2(6.0, 9.0);\n   \n    vec2 tileCoordinates = floor(uv * tilingResolution);\n    vec2 blockCoordinates = fract(uv * tilingResolution);\n\n\n    vec2 randomizedBlockCenter = vec2(mix(0.1, 0.9, rand(tileCoordinates / tilingResolution)));\n    \n    float distanceFromCenter = distance(randomizedBlockCenter, blockCoordinates);\n    \n    float centreFactor = 1.0 - distanceFromCenter;\n    \n    float fragmentColor = pow(centreFactor, 2.0);\n\n    \n    // Output to screen\n  fragColor = vec4(fragmentColor);\n}","name":"Image","description":"","type":"image"}]}