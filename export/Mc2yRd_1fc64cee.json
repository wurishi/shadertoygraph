{"ver":"0.1","info":{"id":"Mc2yRd","date":"1722873676","viewed":22,"name":"Osciladores 2.1","username":"jpupper","description":"2.1\nUso de la funcion sin para generar ondas\nTaller de Livecoding con visuales en GLSL \n","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["tutorial","sin","cos","shaders","shaders","livecoding","functions","taller","tutoriales","osciladores"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//2.1\n//Uso de la funcion sin para generar ondas\n//Taller de Livecoding con visuales en GLSL \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 uv = gl_FragCoord.xy / iResolution.xy; //Obtengo las coordenadas UV(coordenadas cartesianas.\n   \n    //La funcion sin (seno) me sirve para crear osciladores.\n    //devuelve un valor entre -1 y 1. \n    //Entonces para que oscile constantemente debo multiplicarla por 0.5. \n    //una vez multiplicada devolvera un valor entre -0.5+0.5. \n    //Si a ese resultado le sumo 0.5.\n    //Obtengo que va a ir entre 0 y 1.\n    \n    //Utilizo time para que mi onda sinusoide suba y baje constantemente. De esta manera le doy movimiento.\n    \n    float forma = sin(iTime)*0.5+0.5;\n     \n    fragColor = vec4(vec3(forma),1.0); \n}","name":"Image","description":"","type":"image"}]}