{"ver":"0.1","info":{"id":"dsjSzR","date":"1669842757","viewed":177,"name":"The 2D wave equation","username":"zenzicubic","description":"The 2D wave equation, using Verlet integration. Drag the source","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["wave","physics","pde"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3[5] colors = vec3[](vec3(0.992,0.906,0.145), vec3(0.369,0.788,0.384), vec3(0.129,0.569,0.549), vec3(0.231,0.322,0.545), vec3(0.267,0.004,0.329));\n// Laplacian is in Common\n// Buffers A-D are extra rendering passes\n// Main image applies color map\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = 0.5 * (texelFetch(iChannel0, ivec2(fragCoord), 0).x + 1.);\n    \n    // The Viridis color map\n    vec3 c;\n    float v;\n    if (t < 0.2)\n    {\n        c = colors[4];\n    } \n    else if (t < 0.4)\n    {\n        v = (t - 0.2) * 5.;\n        c = mix(colors[4], colors[3], v);\n    }\n    else if (t < 0.6)\n    {\n        v = (t - 0.4) * 5.;\n        c = mix(colors[3], colors[2], v);\n    }\n    else if (t < 0.8)\n    {\n        v = (t - 0.6) * 5.;\n        c = mix(colors[2], colors[1], v);\n    }\n    else\n    {\n        v = (t - 0.8) * 5.;\n        c = mix(colors[1], colors[0], v);\n    }\n    \n    fragColor = vec4(c, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define RADIUS 15.\n\nvoid mainImage( out vec4 v, in vec2 p )\n{\n    v = vec4(0.);\n    \n    if (distance(p, iMouse.xy) < RADIUS && iMouse.z > 0.)\n    {\n        v.x = v.y = 1.;\n    }\n    else \n    {\n        vec2 s = texelFetch(iChannel0, ivec2(p), 0).xy;\n        float a = C * C * laplace(p, iChannel0);\n  \n        v.x = 2. * s.x - s.y + DT * DT * a;\n        v.y = s.x;\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define DT 0.1\n#define C 0.7\n\nfloat laplace(vec2 p, sampler2D sam)\n{\n    float s = -texelFetch(sam, ivec2(p), 0).x;\n    \n    s += 0.2 * texelFetch(sam, ivec2(p + vec2(0., -1.)), 0).x;\n    s += 0.2 * texelFetch(sam, ivec2(p + vec2(0., 1.)), 0).x;\n    s += 0.2 * texelFetch(sam, ivec2(p + vec2(-1., 0.)), 0).x;\n    s += 0.2 * texelFetch(sam, ivec2(p + vec2(1., 0.)), 0).x;\n    s += 0.05 * texelFetch(sam, ivec2(p + vec2(1., -1.)), 0).x;\n    s += 0.05 * texelFetch(sam, ivec2(p + vec2(1., 1.)), 0).x;\n    s += 0.05 * texelFetch(sam, ivec2(p + vec2(-1., 1.)), 0).x;\n    s += 0.05 * texelFetch(sam, ivec2(p + vec2(-1., -1.)), 0).x;\n    \n    return s;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 v, in vec2 p )\n{\n    vec2 s = texelFetch(iChannel0, ivec2(p), 0).xy;\n    float a = C * C * laplace(p, iChannel0);\n  \n    v.x = 2. * s.x - s.y + DT * DT * a;\n    v.y = s.x;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 v, in vec2 p )\n{\n    vec2 s = texelFetch(iChannel0, ivec2(p), 0).xy;\n    float a = C * C * laplace(p, iChannel0);\n  \n    v.x = 2. * s.x - s.y + DT * DT * a;\n    v.y = s.x;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 v, in vec2 p )\n{\n    vec2 s = texelFetch(iChannel0, ivec2(p), 0).xy;\n    float a = C * C * laplace(p, iChannel0);\n  \n    v.x = 2. * s.x - s.y + DT * DT * a;\n    v.y = s.x;\n}","name":"Buffer D","description":"","type":"buffer"}]}