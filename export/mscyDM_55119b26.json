{"ver":"0.1","info":{"id":"mscyDM","date":"1695128263","viewed":85,"name":"slice transition","username":"artrointel","description":"MIT License","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["transition","slice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// MIT License\n\nconst float sliceAngle = -10.0;\nconst float sliceCount = 10.0;\n\nfloat random (vec2 st) { \n    return fract(sin(dot(st.xy, vec2(12.9798,78.323))) * 43758.5453234);\n}\n\nvec2 rotate(vec2 p, float angle) {\n    float r = radians(angle);\n\tfloat s = sin(r);\n\tfloat c = cos(r);\n\treturn mat2(c, -s, s, c) * p;\n}\n\nvec2 sliceData(vec2 p, float count, float angle, float seed) {\n\tp = rotate(p, angle);\n    float sliceId = floor(p.x * count);\n\treturn vec2(random(vec2(sliceId) + seed), sliceId);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float progress = mod(iTime*0.5, 1.0);\n    \n    vec2 data = sliceData(uv, sliceCount, sliceAngle, 20030.0);\n    float r = clamp(data.x, 0.2, 1.0); // random value for each slice\n    float id = data.y;\n    \n    progress = smoothstep(0.0, r, progress);\n    vec2 dir = rotate(vec2(1.0), -45.0 - sliceAngle);\n    vec2 offset = vec2(1.0 - progress);\n    vec2 offset2 = -vec2(1.0) + offset;\n    offset = rotate(offset, -45.0 - sliceAngle);\n    offset2 = rotate(offset2, -45.0 - sliceAngle)+normalize(dir)*0.398;\n    offset2 = clamp(offset2, offset2, vec2(0.0));\n    \n    uv += offset2;\n    vec4 color = vec4(0.0);\n    color = texture(iChannel0, uv);\n    uv += offset - offset2;\n    if (0.0 <= uv.x && uv.x <= 1.0 && 0.0 <= uv.y && uv.y <= 1.0) {\n        color = texture(iChannel1, uv);\n    }\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}