{"ver":"0.1","info":{"id":"wdfczN","date":"1592334501","viewed":157,"name":"rubik","username":"6502","description":"A rubik cube...","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["rubik"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 sdf1(vec3 p, float id, float spacing, float side, float offset,\n          vec2 xclip,\n          vec2 yclip,\n          vec2 zclip) {\n    float dx = abs((p.x - clamp(floor(p.x/spacing+0.5), xclip.x, xclip.y)*spacing)) - side;\n    float dy = abs((p.y - clamp(floor(p.y/spacing+0.5), yclip.x, yclip.y)*spacing)) - side;\n    float dz = abs((p.z - clamp(floor(p.z/spacing+0.5), zclip.x, zclip.y)*spacing)) - side;\n    if (dx < 0. && dy < 0. && dz < 0.) return vec2(max(dx, max(dy, dz)) - offset, id);\n    dx = max(dx, 0.); dy = max(dy, 0.); dz = max(dz, 0.);\n    return vec2(sqrt(dx*dx + dy*dy + dz*dz) - offset, id);\n}\n\nfloat pi4 = 3.14159265359*2.;\n\nvec2 sdf(vec3 p) {\n    float t = iTime*0.337;\n    if ((int(t) & 1) == 0) {\n        if (p.x < -35.) {\n            float c = cos(-t*pi4), s = sin(-t*pi4);\n            p = vec3(p.x, p.y*c + p.z*s, p.z*c - p.y*s);\n        }\n    } else {\n        if (p.y > 35.) {\n            float c = cos(t*pi4), s = sin(t*pi4);\n            p = vec3(p.x*c + p.z*s, p.y, p.z*c - p.x*s);\n        }\n    }\n    vec2 full=vec2(-1., 1.);\n    vec2 neg=vec2(-1., -1.);\n    vec2 pos=vec2(1., 1.);\n\tvec2 a = sdf1(p, 0., 70., 30., 5., full, full, full);\n    vec2 b = sdf1(p + vec3(0., -8., 0.), 1., 70., 25., 5., full, pos, full); if (b.x < a.x) a = b;\n    b = sdf1(p + vec3(0., 8., 0.), 6., 70., 25., 5., full, neg, full); if (b.x < a.x) a = b;\n    b = sdf1(p + vec3(-8., 0., 0.), 2., 70., 25., 5., pos, full, full);  if (b.x < a.x) a = b;\n    b = sdf1(p + vec3(8., 0., 0.), 3., 70., 25., 5., neg, full, full);  if (b.x < a.x) a = b;\n    b = sdf1(p + vec3(0., 0., -8.), 4., 70., 25., 5., full, full, pos);  if (b.x < a.x) a = b;\n    b = sdf1(p + vec3(0., 0., 8.), 5., 70., 25., 5., full, full, neg);  if (b.x < a.x) a = b;\n    return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = 450., h = r*0.6, dist = r*1.5;\n\tvec3 p = vec3(r*cos(iTime), h, r*sin(iTime));\n    vec3 w = normalize(-p);\n    vec3 u = normalize(cross(w, vec3(0., 1., 0.)));\n    vec3 v = cross(u, w);\n    vec3 d = normalize(w*dist + (fragCoord.x - iResolution.x*0.5)*u + (fragCoord.y - iResolution.y*0.5)*v);\n    vec4 col = vec4(0., 0., 0., 1.);\n    vec3 pp;\n    float t = 0.;\n    vec2 fv;\n    for (int i=0; i<1000; i++) {\n        pp = p + t*d;\n        fv = sdf(pp);\n        if (abs(fv.x) < 0.1 || t > 1000.) break;\n        t += fv.x * 0.25;\n    }\n    if (t > 1000.) {\n        col = abs(d.y) * vec4(1.0, 1.0, 1.0, 1.0);\n    } else {\n        vec3 n = normalize(vec3(sdf(vec3(pp.x+.1, pp.y, pp.z)).x - fv.x,\n    \t\t\t\t\t\t\tsdf(vec3(pp.x, pp.y+.1, pp.z)).x - fv.x,\n    \t\t\t\t\t\t\tsdf(vec3(pp.x, pp.y, pp.z+.1)).x - fv.x));\n        float L = 0.5 - 0.5*dot(n, d);\n        if (fv.y == 0.) {\n            col = L * vec4(0.2, 0.2, 0.2, 1.0);\n        //*\n        } else if (fv.y == 1.) {\n            col = L * vec4(1.0, 1.0, 1.0, 1.0);\n        } else if (fv.y == 2.) {\n            col = L * vec4(1.0, 0.2, 0.2, 1.0);\n        } else if (fv.y == 3.) {\n            col = L * vec4(1.0, 0.5, 0.2, 1.0);\n        } else if (fv.y == 4.) {\n            col = L * vec4(0.2, 1.0, 0.2, 1.0);\n        } else if (fv.y == 5.) {\n            col = L * vec4(0.2, 0.2, 1.0, 1.0);\n        //*/\n        } else {\n            col = L * vec4(1.0, 1.0, 0.2, 1.0);\n        }\n    }\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}