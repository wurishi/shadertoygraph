{"ver":"0.1","info":{"id":"XcBGWV","date":"1704622739","viewed":29,"name":"Playing with Mandelbrot","username":"Lomei","description":"Just playing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 square(vec2 i){return vec2(i.x*i.x-i.y*i.y, 2.*i.x*i.y);}\n\nmat2 Rot(float rad) {\n    float s = sin(rad);\n    float c = cos(rad);\n\n    return mat2(c,s,-s,c);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int steps = 200;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 3.;\n    uv.x -= 2.;\n    uv.y -= 1.5;\n    uv.x *= iResolution.x/iResolution.y;\n    float t_rot = iTime*6.;\n    float t_move = sin(iTime/4.);\n    uv *= Rot(t_rot);\n    uv += vec2(2.*sin(t_move), 1.1*cos(t_move));\n    float t_zoom = 7.+6.*sin(iTime*.7)+(.5+sin(iTime)/2.)*8.*sin(iTime*2.);\n    uv = uv/pow(2.,t_zoom);\n\n    vec2 z = vec2(0.);\n    float depth = 0.;\n    for(int i = 0; i<steps; i++){\n        z = square(z) + uv - vec2(1.4,0.001);\n        if(length(z)>2000.){break;}\n        depth++;\n    }\n    depth = float(steps) - depth;\n    float color_time = fract(iTime/52.)*52.;\n    float r = fract(depth/(70.+color_time));\n    float g = fract(depth/(50.+color_time));\n    float b = fract(depth/(30.+color_time));\n    \n    vec3 col = vec3(r,g,b);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}