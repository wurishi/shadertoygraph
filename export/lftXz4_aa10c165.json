{"ver":"0.1","info":{"id":"lftXz4","date":"1713685384","viewed":50,"name":"sdf arc ","username":"letbonsaibe","description":"sdf arc","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AQUA vec3(0.0, 1.0, 1.0)\n#define SILVER vec3(0.75, 0.75, 0.75)\n#define GRAY vec3(0.5, 0.5, 0.5)\n#define MAROON vec3(0.5, 0.0, 0.0)\n#define OLIVE vec3(0.5, 0.5, 0.0)\n#define PURPLE vec3(0.5, 0.0, 0.5)\n#define TEAL vec3(0.0, 0.5, 0.5)\n#define NAVY vec3(0.0, 0.0, 0.5)\n#define LIME vec3(0.0, 1.0, 0.0)\n#define ORANGE vec3(1.0, 0.65, 0.0)\n#define CHOCOLATE vec3(0.82, 0.41, 0.12)\n#define GOLD vec3(1.0, 0.84, 0.0)\n#define INDIGO vec3(0.29, 0.0, 0.51)\n#define VIOLET vec3(0.93, 0.51, 0.93)\n#define PINK vec3(1.0, 0.75, 0.8)\n#define IVORY vec3(1.0, 1.0, 0.94)\n#define BEIGE vec3(0.96, 0.96, 0.86)\n#define RED vec3(1.0, 0.0, 0.0)\n#define GREEN vec3(0.0, 1.0, 0.0)\n#define BLUE vec3(0.0, 0.0, 1.0)\n#define BLACK vec3(0.0, 0.0, 0.0)\n#define WHITE vec3(1.0, 1.0, 1.0)\n#define YELLOW vec3(1.0, 1.0, 0.0)\n#define CYAN vec3(0.0, 1.0, 1.0)\n#define MAGENTA vec3(1.0, 0.0, 1.0)\n#define OCOLOR vec3(0.9,0.6,0.3) \n#define ICOLOR vec3(0.65,0.85,1.0)\n\n#define PI    3.141592653\n#define PI2   6.283185306 \n\n\n\nvoid wave(float dist, inout vec3 color) {\n    color *= .8  + 0.2 * sin(dist * 50.0 - iTime * 5.0);\n}\n\nvoid border(float dist, inout vec3 color) {\n    color *= 1.0 - exp(-40.0 * abs(dist));\n    \n}\n\nvoid lighter(float dist, inout vec3 color) {\n    color = exp(-abs(dist-.15) * vec3(4,10,14));\n}\n\n\n\nfloat sd_arc( vec2 p,  vec2 sc,  float r )\n{\n    p.x = abs(p.x);\n    float crossValue = p.x*sc.y - p.y*sc.x;\n    bool isRight = crossValue > 0.0;\n    \n    if (isRight) {\n        return distance(p, sc*r);\n    } else {\n        return length(p) - r;\n    }\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n        \n    \n    \n    float theta = PI * (0.5+0.5*cos(iTime+2.0));\n    vec2 sc = vec2(sin(theta), cos(theta));\n  \n    // rotation\n    uv *= mat2(\n        cos(iTime), -sin(iTime), \n        sin(iTime), cos(iTime)\n\n    ); \n    // translation\n    uv += vec2(cos(iTime), sin(iTime)) * .5;\n    \n    float dist = sd_arc(uv, sc, 0.8);\n \n \n    vec3 finalColor = dist > 0.0 ? OCOLOR: ICOLOR;\n    border(dist, finalColor);\n    wave(dist, finalColor);\n\n   \n    fragColor = vec4(finalColor, 0.);\n    \n}","name":"Image","description":"","type":"image"}]}