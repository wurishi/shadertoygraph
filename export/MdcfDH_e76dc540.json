{"ver":"0.1","info":{"id":"MdcfDH","date":"1524885927","viewed":480,"name":"16 Rule Cellular Automata","username":"timeiskey","description":"supports GOL and entire family","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["automata","cellular","gol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define HOOD_WIDTH 1\n#define HOOD_HEIGHT 1\n\n#define MOUSE_SIZE 0.1\n\n#define RD0N 0.0\n#define RD1N 0.0\n#define RD2N 0.0\n#define RD3N 1.0\n#define RD4N 0.0\n#define RD5N 0.0\n#define RD6N 0.0\n#define RD7N 0.0\n#define RD8N 0.0\n\n#define RA0N 0.0\n#define RA1N 0.0\n#define RA2N 1.0\n#define RA3N 1.0\n#define RA4N 0.0\n#define RA5N 0.0\n#define RA6N 0.0\n#define RA7N 0.0\n#define RA8N 0.0\n\n#define DENSITY 0.5\nfloat rand(vec2 co){\n  \treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * length(iDate));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cellWidth = 1.0/iResolution.xy;\n   \tvec2 uv = fragCoord.xy / iResolution.xy;\n\n\t//\tsample yourself\n    float centerCell = texture(iChannel0, uv).r;\n    \n    //\ttotal your neighbors\n    float hoodTotal = 0.0;\n    for( int yi = -HOOD_HEIGHT; yi <= HOOD_HEIGHT; yi++ )\n    {\n    \tfor( int xi = -HOOD_WIDTH; xi <= HOOD_WIDTH; xi++ )\n        {\n\t\t\tvec2 xy = vec2(xi,yi) * cellWidth + uv;\n            xy = vec2(mod(xy.x, 1.0), mod(xy.y, 1.0) );\n            hoodTotal += texture(iChannel0, xy).r;\n        }\n    }\n    \n    //\tdont count yourself\n    hoodTotal -= centerCell;\n    \n    //\tsample the rule\n    float c = 0.0;\n    if( centerCell == 0.0 )\n    {\n        if( hoodTotal == 0.0 )\n        {\n            c = RD0N;\n        }\n        else if( hoodTotal == 1.0 )\n        {\n            c = RD1N;\n        }\n        else if( hoodTotal == 2.0 )\n        {\n            c = RD2N;\n        }\n        else if( hoodTotal == 3.0 )\n        {\n            c = RD3N;\n        }\n        else if( hoodTotal == 4.0 )\n        {\n            c = RD4N;\n        }\n        else if( hoodTotal == 5.0 )\n        {\n            c = RD5N;\n        }\n        else if( hoodTotal == 6.0 )\n        {\n            c = RD6N;\n        }\n        else if( hoodTotal == 7.0 )\n        {\n            c = RD7N;\n        }\n        else if( hoodTotal == 8.0 )\n        {\n            c = RD8N;\n        }\n    }\n    else\n    {\n        if( hoodTotal == 0.0 )\n        {\n            c = RA0N;\n        }\n        else if( hoodTotal == 1.0 )\n        {\n            c = RA1N;\n        }\n        else if( hoodTotal == 2.0 )\n        {\n            c = RA2N;\n        }\n        else if( hoodTotal == 3.0 )\n        {\n            c = RA3N;\n        }\n        else if( hoodTotal == 4.0 )\n        {\n            c = RA4N;\n        }\n        else if( hoodTotal == 5.0 )\n        {\n            c = RA5N;\n        }\n        else if( hoodTotal == 6.0 )\n        {\n            c = RA6N;\n        }\n        else if( hoodTotal == 7.0 )\n        {\n            c = RA7N;\n        }\n        else if( hoodTotal == 8.0 )\n        {\n            c = RA8N;\n        }\n    }\n    \n    fragColor = vec4(vec3(c),1.0);\n    if (iMouse.z >=0.0)\n    {\n        float mc = step( distance(uv,(iMouse.xy/iResolution.xy)), MOUSE_SIZE ) ;\n        //fragColor = vec4(step(rand(uv),DENSITY));\n    \tfragColor = min( vec4(vec3(mc),1.0) * vec4(step(rand(uv),DENSITY)) + fragColor, 1.0);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}