{"ver":"0.1","info":{"id":"wlsSW4","date":"1563021740","viewed":367,"name":"noise vs aliasing","username":"FabriceNeyret2","description":"jittering allows to replace aliasing by noise: human visual system sometimes prefer.\nHere, amount of jittering goes from 0 to 100% along the clock.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["noise","aliasing","tuto","jittering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy,\n         D = texelFetch(iChannel0, ivec2(U)%256, 0).rg - .5,\n         P = ( 2.*U - R ) / R.y;\n\n    float v = fract( atan(P.y,P.x)/6.283 - .1*iTime ); // amount (0..1)\n\n    U +=  v * D;                                       // jittering\n    P = ( 2.*U - R ) / R.y;\n   \n    O = vec4( .5 + .5* sin( R.y * atan(P.y,P.x)) );\n}","name":"Image","description":"","type":"image"}]}