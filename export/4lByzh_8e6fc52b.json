{"ver":"0.1","info":{"id":"4lByzh","date":"1507398018","viewed":117,"name":"Reveal2","username":"Chazix","description":"reveals a second texture when you hold your mouse over","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mouse","blur","graphics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Originally by Nikos Papadopoulos, 4rknova / 2015\n// Heavily modified by Dr. Sajid Farooq, 2016\n//The blur matrix. Since there are 9 pixels, each weight is 1/9 = 0.111 \n// to ensure that each pixel is averaged properly\nmat3 blur = mat3(\n0.111, 0.111, 0.111, // first column (not row!)\n0.111, 0.111, 0.111, // second column\n0.111, 0.111, 0.111 // third column\n);\n\nmat3 sharpen = mat3(\n0., -1, 0.0, // first column (not row!)\n-1, 5, -1, // second column\n0., -1, 0.0 // third column\n);\n\nmat3 emboss = mat3(\n-2.0, -1.0, 0.0,\n-1.0, 1.0, 1.0,\n0.0, 1.0, 2.0\n);\nmat3 outline = mat3(\n-1.0, -1.0,-1.0,\n-1.0, 8.0, -1.0,\n-1.0, -1.0, -1.0\n);\n\nmat3 topSobel = mat3(\n1.0, 2.0, 1.0,\n0.0, 0.0, 0.0,\n-1.0, -2.0, -1.0\n);\n\n\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord, in sampler2D channel)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n\treturn texture(channel, uv).xyz;\n}\n\nvec3 aFilter(in vec2 fragCoord, mat3 kernel, in sampler2D channel)\n{\t\n\tvec3 sum;\n\tfor(int i = 0; i < 3; i++)\n\t{\n\t\tfor(int j = 0; j < 3; j++)\n\t\t{\n\t\tsum += aSample(i-1, j-1, fragCoord, channel) * kernel[i][j];\n\t\t}\n\t}\n\n\treturn sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 fc = fragCoord.xy;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float aspect = iResolution.y/iResolution.x;\n    uv.y *= aspect;\n    \n    float radius = 0.1;\n    \n    vec2 circlePos = iMouse.xy / iResolution.xy;\n    circlePos.y *= aspect;\n    \n\tvec3 bg = aFilter(fc, blur, iChannel0);\n    vec3 circle = aFilter(fc, sharpen, iChannel0);\n\tvec4 layer1 = vec4(bg, 1);\n\tvec4 layer2 = vec4(circle, 1.0 - step(radius, length(circlePos- uv)));\n    \n    vec4 composite = mix(layer1, layer1, layer1.a);\n    composite = mix(composite, layer2, layer2.a);\n    \n\tfragColor = composite;\n}","name":"Image","description":"","type":"image"}]}