{"ver":"0.1","info":{"id":"Mscyzl","date":"1519785566","viewed":134,"name":"Torii Gate","username":"Azunyan_Taichou","description":"Rising sun with torii gate","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["toriigate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 colorA= vec3(0,0,0); // Black\nvec3 colorB= vec3(0.65,0,0); // Red\nvec3 colorC= vec3(1,1,1); // White\n\nfloat circle(vec2 uv, vec2 pos, float radius)\n{\n    float dist = distance(pos, uv);\n    float value = 1.0-smoothstep(radius,radius + 0.01, dist);\n    //float value = 1.0-step(radius, dist);\n    \n    return value;\n}\n\nfloat rect(vec2 uv, vec2 pos, vec2 size)\n{\n\n    float value = step(pos.x,uv.x);\n    value = (step(pos.x,uv.x) - step(pos.x+size.x,uv.x)); \n    value *= (step(pos.y, uv.y) - step(pos.y+size.y,uv.y));\n   \n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    \n    // Sun\n    vec2 pos = vec2(0.28 *ratio, 0.69);\n    float radius = abs(0.30);\n    float value = circle(uv, pos, radius);\n    vec3 color = mix(colorC, colorB, value);\n    \n    // Rising Sun Rays\n    pos = vec2(0.28 *ratio, 0.69);\n    float dist = distance(pos, uv) * .011; \n    dist -= 0.13;\n    uv -= pos;  \n    float angle = atan(uv.y, uv.x);\n    radius = floor(cos(16. * angle +iTime));\n    value = 1.0-step(radius, dist);\n   \tcolor = mix(color, colorB, value);\n    uv += pos;  \n    \n    // Kasagi\n    pos = vec2(.14 * ratio, .75);\n    vec2 size = vec2(1.2,0.08);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    // Shimaki\n    pos = vec2(.21 * ratio, .7);\n    size = vec2(0.96,0.08);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    // Left Daiwa\n    pos = vec2(.285 * ratio, .65);\n    size = vec2(0.15,0.08);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    // Right Daiwa\n    pos = vec2(.585 * ratio, .65);\n    size = vec2(0.15,0.08);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    // Gakuzuka\n    pos = vec2(.46 * ratio, .5);\n    size = vec2(0.09,0.2);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    // Nuki\n    pos = vec2(.2 * ratio, .5);\n    size = vec2(1.0,0.1);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n\n    // Left Hashira\n    pos = vec2(.3 * ratio, .2);\n    size = vec2(0.1,0.5);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n \t// Right Hashira\n    pos = vec2(.6 * ratio, .2);\n    size = vec2(0.1,0.5);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    // Left Nemaki\n    pos = vec2(.28 * ratio, .1);\n    size = vec2(0.18,0.15);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    // Right Nemaki\n    pos = vec2(.58 * ratio, .1);\n    size = vec2(0.18,0.15);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n     \n    // Platform 1\n    pos = vec2(.15 * ratio, .04);\n    size = vec2(1.24,0.06);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    // Platform 2\n    pos = vec2(.1 * ratio, .001);\n    size = vec2(1.4,0.06);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    \n//Left\n    pos = vec2(.17 * ratio, .1);\n    size = vec2(0.06,0.3);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    pos = vec2(.15 * ratio, .33);\n    size = vec2(0.3,0.05);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n   \n    pos = vec2(.15 * ratio, .26);\n    size = vec2(0.3,0.05);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n//Right\n    pos = vec2(.77 * ratio, .1);\n    size = vec2(0.06,0.3);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    pos = vec2(.65 * ratio, .33);\n    size = vec2(0.3,0.05);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n   \n    pos = vec2(.65 * ratio, .26);\n    size = vec2(0.3,0.05);\n    value = rect(uv, pos, size);\n    color = mix(color, colorA, value);\n    \n    fragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}