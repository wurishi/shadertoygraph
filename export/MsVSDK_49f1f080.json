{"ver":"0.1","info":{"id":"MsVSDK","date":"1538168580","viewed":149,"name":"Nice carpet, bro","username":"dedmoros","description":"It's a carpet made out of fractals, yo.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fold = vec2(0.5, -0.5);\nvec2 translate = vec2(1.5);\nfloat scale = 1.3;\n\nvec3 hsv(float h,float s,float v) {\n\treturn mix(vec3(1.),clamp((abs(fract(h+vec3(3.,2.,1.)/3.)*6.-3.)-1.),0.,1.),s)*v;\n}\n\nvec2 rotate(vec2 p, float a){\n\treturn vec2(p.x*cos(a)-p.y*sin(a), p.x*sin(a)+p.y*cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 p = -1.0 + 2.0*fragCoord.xy/iResolution.xy;\n    \n    fragCoord.xy -= iResolution.xy/2.;\n    fragCoord *= 1.+ cos((iTime)*.0000005644887)*.99;\n\tfloat f = tan(dot(fragCoord,fragCoord)*(1.+sin((iTime)*.000000861741164752781)*.9)+sin(iTime*.06917481283157));\n    \n\tp.x *= iResolution.x/iResolution.y;\n\tp *= 0.003;\n\tfloat x = p.y;\n\tp = abs(mod(p, 8.0) - 4.0);\n\tfor(int i = 0; i < 36; i++){\n\t\tp = abs(p - fold) + fold;\n\t\tp = p*scale - translate;\n\t\tp = rotate(p, 3.14159/(8.0+sin(iTime*0.00001+float(i)*0.1)*0.5+0.5));\n\t}\n\tfloat i = x*10.0 + atan(p.y, p.x) + iTime*0.5;\n\tfloat h = floor(i*6.0)/5.0 + 0.07;\n\th += smoothstep(0.0, 0.4, mod(i*6.0/5.0, 1.0/5.0)*5.0)/5.0 - 0.5;\n\tfragColor=vec4(hsv(h, f, smoothstep(-1.0, 3.0, length(p))), 1.0);\n}","name":"Image","description":"","type":"image"}]}