{"ver":"0.1","info":{"id":"Wls3RN","date":"1555776822","viewed":735,"name":"Simple lens ","username":"xavierseb","description":"Simple lens distortion effect, convex, concave and uniform flat","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["lens","magnify"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// simple lens effects\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n\tvec2 uvLens = fragCoord.xy / iResolution.x;\n    vec2 mouseLens = iMouse.xy / iResolution.x;\n    float r=.25;\n    \n    // if no mouse movement is detected do something\n    if( mouseLens.x <= 0. ) {\n        mouseLens = vec2((.5+sin(iTime*8.)/20.),(.38+cos(iTime*8.)/12.));\n        mouse=mouseLens*iResolution.x/iResolution.xy;\n    }\n\t\t\n    \t//--------------------\n    \t//  convex distortion\n        //\n        //\tfloat mag = pow( clamp(.5 - distance(mouseLens, uvLens)*2. , 0., 1.), .5);\n        \tfloat mag = pow( clamp(.5 - pow(3.*distance(mouseLens, uvLens),5.) , 0., 1.), .5); r=.35;\n    \n    \t//--------------------    \n    \t//  concave distortion\n    \t//\n\t\t//  float mag = -.5 + distance(mouseLens, uvLens)*2.;\n        //\tfloat mag = pow(distance(mouseLens, uvLens)+.5,5.);\n    \n    \t//--------------------\n    \t//  uniform lens 0 to 1 (1=infinite magnification)\n        //\n\t\t//  float mag = .5; r=.3;\n    \n    \n    if (distance(mouseLens , uvLens) < r)  uv = uv + mag* (mouse - uv);\n\t\n\tfragColor = texture(iChannel0, uv); \t\t\n}","name":"Image","description":"","type":"image"}]}