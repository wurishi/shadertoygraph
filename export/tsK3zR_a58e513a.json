{"ver":"0.1","info":{"id":"tsK3zR","date":"1569620584","viewed":77,"name":"faz_hexmap","username":"fazouane_marouane","description":"fiddling with webgl","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on https://github.com/fazouane-marouane/fiddling-with-webgl\n#define PI 3.1415926538\n\nprecision mediump float;\n\n\nmat2 mInv = mat2(\n  1.0, 0.0,\n  0.577, 1.154\n);\n\nvec4 hsv2rgb(vec4 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return vec4(c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y), c.w);\n}\n\nvec2 updateCenter(vec2 c, vec2 acc, vec2 p) {\n  if (mod(c.x + c.y, 3.0) == 0.0 && (acc == p || distance(acc, p) > distance(c, p))) {\n    return c;\n  }\n  return acc;\n}\n\nvec2 getPosition(vec2 p, float angle) {\n  float radianAngle = -2.0 * PI * angle;\n  mat2 rotation = mat2(\n    cos(radianAngle), sin(radianAngle),\n    -sin(radianAngle), cos(radianAngle)\n  );\n  vec2 shift = vec2(iResolution.x, iResolution.y) / min(iResolution.x, iResolution.y);\n  vec2 clipPos = 2.0*p/min(iResolution.x, iResolution.y) - shift;\n  vec2 position = 10.0 * mInv * rotation * clipPos;\n  return position;\n}\n\nvec2 getCenter(vec2 position) {\n  vec2 c1 = floor(position);\n  vec2 c2 = ceil(position);\n  vec2 c3 = vec2(c1.x, c2.y);\n  vec2 c4 = vec2(c2.x, c1.y);\n  vec2 center = updateCenter(c1,\n    updateCenter(c2,\n        updateCenter(c3,\n            updateCenter(c4, position, position),\n            position),\n        position),\n    position);\n  return center;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  float progress = mod(iTime, 10.0) / 10.0;\n  float angle = progress;  \n  vec2 mouse = iMouse.xy;\n  vec4 color = vec4(progress, 1.0, 1.0, 1.0);\n    \n  vec2 position = getPosition(fragCoord, angle);\n  vec2 center = getCenter(position);\n  vec2 mouseCenter = getCenter(getPosition(mouse, angle));\n  vec2 pos = position - center;\n  float cc = fract(angle);\n  float d = 2.0 * (cc <= 0.5 ? cc: 1.0-cc);\n  float delta = 0.05 * d;\n  if ( abs(pos.x) <= 1.0 - delta && abs(pos.y) <= 1.0 - delta &&\n       abs(pos.x-pos.y) <= 1.0 - delta) {\n    if (center.x == 0.0 && center.y == 0.0 &&\n    abs(pos.x) <= 1.0 - 2.0*delta && abs(pos.y) <= 1.0 - 2.0*delta &&\n       abs(pos.x-pos.y) <= 1.0 - 2.0*delta) {\n      fragColor = hsv2rgb(color);//vec4(0.0, 0.0, 0.0, 1.0);\n    } else {\n      if (mouseCenter.x == center.x && mouseCenter.y == center.y) {\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n      } else {\n        float c = fract(angle);\n        c = 2.0 * (c <= 0.5 ? c: 1.0 - c);\n        fragColor = vec4(c, c, c, 1.0);//vec4((1.0+ cos(center.x))/2.0, (1.0+ sin(center.y))/2.0, (1.0-cos(center.y)*sin(center.x))/2.0, 1.0);\n      }\n    }\n  } else {\n    fragColor = hsv2rgb(color);\n  }\n}\n","name":"Image","description":"","type":"image"}]}