{"ver":"0.1","info":{"id":"flyfRt","date":"1677672475","viewed":107,"name":"Mac Genie Effect","username":"altaha","description":"MacOS Genie minimising and maximising animation.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["animation","minimise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 remap(vec2 uv, vec2 inputLow, vec2 inputHigh, vec2 outputLow, vec2 outputHigh){\n    vec2 t = (uv - inputLow)/(inputHigh - inputLow);\n    vec2 final = mix(outputLow,outputHigh,t);\n    return final;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float f = abs(cos(iTime*2.0));\n    \n    float t = uv.y;\n    float bias = sin(t*3.14)*0.1;\n    bias = pow(bias,0.9);\n    \n    float BOTTOM_POS = 0.25;\n    float BOTTOM_THICKNESS = 0.1;\n    float MINI_FRAME_THICKNESS = 0.1;\n    vec2 MINI_FRAME_POS = vec2(0.1,0.1);\n    \n    float min_x_curve = mix((BOTTOM_POS-BOTTOM_THICKNESS/2.0)+bias,0.0,t);\n    float max_x_curve = mix((BOTTOM_POS+BOTTOM_THICKNESS/2.0)-bias,1.0,t);\n    float min_x = mix(min_x_curve,MINI_FRAME_POS.x,f);\n    float max_x = mix(max_x_curve,MINI_FRAME_POS.x+MINI_FRAME_THICKNESS,f);\n    float min_y = mix(0.0,MINI_FRAME_POS.y,f);\n    float max_y = mix(1.0,MINI_FRAME_POS.y+MINI_FRAME_THICKNESS,f);\n    //float min_y = 0.0;\n    //float max_y = f;\n    vec2 modUV = remap(uv, vec2(min_x,min_y), vec2(max_x,max_y), vec2(0.0), vec2(1.0));\n    vec2 finalUV = mix(uv,modUV,1.0*f);\n    \n    vec3 tex = texture(iChannel0, finalUV).rgb;\n    tex = finalUV.x>1.0||finalUV.x<0.0?vec3(0.0):tex;\n    tex = finalUV.y>1.0||finalUV.y<0.0?vec3(0.0):tex;\n    // Time varying pixel color\n    vec3 col = tex;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}