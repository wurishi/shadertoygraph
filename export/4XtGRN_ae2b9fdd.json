{"ver":"0.1","info":{"id":"4XtGRN","date":"1716193808","viewed":55,"name":"bookOfShader-04-Patten_TickTaToo","username":"doolhong","description":"TickTatoo \nhttps://thebookofshaders.com/09/?lan=kr","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["study","thebookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ZEROvec2 vec2(0.0, 0.0)\n#define ONEvec2 vec2(1.0,1.0)\n\nfloat circle(in vec2 _st, in float _radius)\n{\n    vec2 l =_st-0.5;\n    float thickness = 0.31; //0.01\n    float _smooth = 0.015; //0.01\n    float d = dot(l,l)*4.0;\n    return (1.0 - smoothstep(_radius-_smooth, _radius+_smooth,d))\n              * (smoothstep( _radius-thickness-_smooth, _radius-thickness+_smooth, d) );\n}\n\n//https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\nfloat ShapeX(in vec2 _st)\n{\n    float _smooth = 0.005; //0.012\n    \n    float Xpos = 0.2;\n    \n    float f1 = sdSegment(_st, vec2(Xpos), vec2(1.0-Xpos));\n    float f2 = sdSegment(_st, vec2(Xpos,1.0-Xpos), vec2(1.0-Xpos,Xpos));\n    \n    float d = min(f1 , f2);\n\n    return smoothstep(d-_smooth,d+_smooth,0.07);\n}\n\nvec2 getUVNum(vec2 uv, float i)\n{\n    float cntX = mod((i-1.0),3.0);\n    float cntY = floor((i-1.0)/3.0);\n    vec2 st = uv;\n        st -=vec2(cntX,cntY);\n    float m = step( 0.0, st.x * (1.0-st.x)) * step( 0.0, st.y * (1.0-st.y));\n    \n    return st;//* m ;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec3 col = vec3(0.0,0.0,0.0);\n    \n    //--UV=========================\n    vec2 uv = (fragCoord/iResolution.xy);\n            uv.x = ((uv.x - 0.5) *(iResolution.x / iResolution.y)) + 0.5;\n    float uvMask = step(0.0, uv.x * (1.0-uv.x));\n    vec2 maskUV = uv * uvMask;\n    \n    \n    //\n    int gameboard[9] = int[9] \n    (\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n    );\n    vec2 st = uv*3.0;\n    \n\n    //-- OX pin===============================\n    for(int i = 0; i <9; i++)\n    {\n        vec2 t = getUVNum(st,float(i+1));\n        if(gameboard[i] == 0)            \n            col += vec3(circle(t,0.5));\n        else\n            col += vec3(ShapeX(t));\n    }\n    //end-Ox pin==============================\n\n\n\n\n\n\n    //-- gameBoardLine========================\n    float o = 1.0;\n    for(int i = 1; i<3; i++)\n    {\n        float linePnt = 0.1;\n        float f1 = sdSegment(st, vec2(float(i), linePnt), vec2(float(i), 3.0 -linePnt));\n        float f2 = sdSegment(st, vec2(linePnt, float(i)), vec2( 3.0 -linePnt, float(i)));\n        o = min(min(f1, f2),o);\n    }\n    o = step(o, 0.04);\n    col += vec3(o,o,o);\n    //end-gameBoardLine=======================\n    \n\n    \n    //col+=  + vec3(fract(st)* uvMask *0.4,0.0);  //UV debug\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}