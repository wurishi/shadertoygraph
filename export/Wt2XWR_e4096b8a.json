{"ver":"0.1","info":{"id":"Wt2XWR","date":"1565590732","viewed":148,"name":"clearwater revival","username":"foran","description":"clearwater revival","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["clearwaterrevival"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nconst float PI = 3.14159265;\n\n//speed\nconst float speed = 0.2;\nconst float speed_x = 0.3;\nconst float speed_y = 0.3;\n\n// geometry\nconst float intensity = 3.;\nconst int steps = 3;\nconst float frequency = 3.0;\nconst int angle = 3; // better when a prime\n\n// reflection and emboss\nconst float delta = 20.;\nconst float intence = 500.;\nconst float emboss = .3;\n\n//---------- crystals effect\n\n  float col(vec2 coord)\n  {\n    float delta_theta = 2.0 * PI / float(angle);\n    float col = 0.0;\n    float theta = 0.0;\n    for (int i = 0; i < steps; i++)\n    {\n      vec2 adjc = coord;\n      theta = delta_theta*float(i);\n      adjc.x += cos(theta)*iTime*speed + iTime * speed_x;\n      adjc.y -= sin(theta)*iTime*speed - iTime * speed_y;\n      col = col + cos( (adjc.x*cos(theta) - adjc.y*sin(theta))*frequency)*intensity;\n    }\n\n    return cos(col);\n    //return tan(col);\n    //return abs(col);\n    //return log(col);\n    //return sign(col);\n    //return step(5.0,col);\n    //return normalize(col);\n    //return dot(col,col);\n    //return mod(col,2.95);\n    //return mod(col,col);\n    //return mix(col,delta_theta,0.1);\n    //return min(col,0.091);\n    //return max(col,.091);\n    //return clamp(col,col,col);\n  }\n\n//---------- main\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\nvec2 p=(fragCoord/iResolution.xy)/.93+.01;\nfloat aspect=iResolution.x/iResolution.y;//aspect\np.x*=aspect;\nvec2 c1=p;\nvec2 c2=p;\nfloat cc1 = col(c1);\n\nc2.x += iResolution.x/delta;\nfloat dx = emboss*(cc1-col(c2))/delta;\n\nc2.x = p.x;\nc2.y += iResolution.y/delta;\nfloat dy = emboss*(cc1-col(c2))/delta;\n\nc1.x += dx;\nc1.y = -(c1.y+dy);\n\nfloat alpha = 1.+dot(dx,dy)*intence;\nfragColor = texture(iChannel0,c1)*(alpha);\n}","name":"Image","description":"","type":"image"}]}