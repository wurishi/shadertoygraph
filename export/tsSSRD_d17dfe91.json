{"ver":"0.1","info":{"id":"tsSSRD","date":"1553050129","viewed":227,"name":"iq Tutorial @ ShaderToy Party SF","username":"starea","description":"ShaderToy onsite practice at San Francisco, March 19, 2019.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["shadertoy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(in vec3 p) {\n    // Gets a sphere.\n    // return length(p) - 1.0;\n    \n    //float r = 1.0 + 0.1 * sin(10.0, p.x);\n    // float r = 1.0 + 0.1 * sin(10.0 * p.x) * sin(10.0 * p.y) + sin(10.0 * p.z);\n    \n    /* good one\n    p.xyz += 0.5 * sin(3.0 * p.yxx) * cos(iTime);\n    float r = 0.8;\n    float d = length(p) - r;\n    return d;\n\t*/\n    \n    \n    float s = 5.0;\n    p.xyz += 0.05 * sin(2.0 * p.yxx + iTime) * s;\n    p.xyz += 0.025 * cos(4.0 * p.yxx + iTime) * s;\n    p.xyz += 0.0125 * cos(8.0 * p.yxx + iTime) * s;\n    p.xyz += 0.00625 * sin(16.0 * p.yxx + iTime) * s;\n    float r = 0.8;\n    float d = length(p) - r;\n    return d;\n    \n}\n\nvec3 calcNormal( in vec3 p) {\n    vec2 e = vec2(0.001, 0.);\n    return normalize( vec3(map(p + e.xyy) - map(p - e.xyy),\n                           map(p + e.yxy) - map(p - e.yxy),\n                           map(p + e.yyx) - map(p - e.yyx)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    // vec2 uv = fragCoord/iResolution.xy;\n    //vec3 rd = normalize( vec3(-1.0 + 2.0 * vec3(uv, 1.0) ) );\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec3 rd = normalize( vec3(uv, -1.0) );\n\n    vec3 col = vec3(0.0);\n    float t = 0.0;\n    \n    vec3 ro = vec3(0.0, 0.0, 2.0);\n    const float tmax = 20.0;\n    \n    for (int i = 0; i < 100; ++i) {\n        float h = map( ro + t * rd ) ;\n        if (h < 0.001 || t > tmax)\n            break;\n        t += h;\n    }\n    \n    if (t < tmax) {\n        vec3 pos = ro + rd * t;\n        vec3 nor = calcNormal(pos);\n        col = vec3(1.0);\n        col = nor.xxx;\n        \n        float df = clamp( dot( nor, vec3(0.5773)), 0.0, 1.0 );\n        col *= df;\n        \n        col = vec3(0.2, 0.3, 0.4) ;\n        col += vec3(1.0, 0.8, 0.7) * df;\n        \n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}