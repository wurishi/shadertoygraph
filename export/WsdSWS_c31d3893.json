{"ver":"0.1","info":{"id":"WsdSWS","date":"1572786354","viewed":230,"name":"No Title 01","username":"gaz","description":"music","likes":11,"published":1,"flags":8,"usePreview":0,"tags":["music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// soundin shader by FabriceNeyret2\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110); // message \"Sound in\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n} // EOL soundin shader\n\n\nfloat noise( in vec2 x )\n{\n    x-=iTime*0.2;\n    vec2 p = floor(x);\n    return fract(sin(dot(p,vec2(1,99))));\n}\n\nfloat fbm( vec2 p)\n{\n    float n=0.0;\n    for (int i=0;i<5;i++){\n        n += 0.3*noise(p)/exp2(float(i)); p *= 2.0; \n    }\n    return n*n*0.5+0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // call soundin shader \n\tif (iResolution.y<2000.) {float c=message((fragCoord/iResolution.y-vec2(0.05,0.1))*10.0);if(c>=0.){fragColor=vec4(c);return;}}\n\n    vec2 q = fragCoord.xy / iResolution.xy;\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy) / iResolution.y;\n    float t = floor(iTime*0.01);\n    vec3 col = vec3(0.15);\n\tcol += smoothstep(0.5, 0.8, fbm(2.0*p));\n    col += vec3(0.9,0.8,0.3)*min(1.0,fwidth(col.x*5.0));\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define BPM 95.\n#define tick (15./BPM)\n#define bar (tick*16.0)\n\nfloat note2freq(int n){\n\treturn 440.0*exp2((float(n)-69.0)/12.0);\n}\n\nint major(int n)\n{\n    return n/7*12+int[](0,2,4,5,7,9,11)[n%7];\n}\n\nint seqOrder(int s,float t)\n{\n    int n =-1;\n    for(int i=0;i<=(int(t/tick)&15);i++)\n    {\n        if((s>>i&1)==1)n++;\n    }\n    return n;\n}\n\nfloat seqTime(int s,float t)\n{\n  float n = mod(t,tick);\n  int it = int(t/tick)&15;\n  for(int i=0;i<16;i++){\n    if((s>>(it-i)&1)==1)break;\n    n+=tick;\n  }\n  return n;\n}\n\nfloat R(float n){\n\treturn fract(sin(n)*7777.);\n}\n\nfloat noise(float t)\n{\n    return fract(sin(t*45678.0)*1234.5)*2.0-1.0;\n}\n\nfloat kick(float t)\n{\n    //return cos(pow(1.0-min(1.0,t*3.5),15.)*48.0+1.3)*exp(-t*2.0);\n\treturn cos(315.0*t-10.0*exp(-70.0*t)+1.3)*exp(-t*1.6);\n}\n\nfloat snare(float t)\n{\n    return noise(t)* max(0.0,1.0-min(0.5,t*5000.0)-max(0.0, t-0.05)*10.0);\n}\n\nfloat hat(float t)\n{\n\treturn noise(t)*exp(-t*150.0);\n}\n\nfloat piano(float f, float t)\n{\n  float g = 0.0, a, b = 0.0;\n  for(float j = 1.0; j < 8.0; j++){\n      b += a = exp(-j *0.5);\n      g +=  a * sin(6.283*f*j*t ) * exp(-t*1.5/(1.0-j*0.1));\n  }\n  g *= 1.0 + 1.5*exp(-5.0*t);\n  return g / b;\n}\n\nfloat base(float f, float t)\n{\n\tf *= t;\n  \treturn clamp((\n        5.0 * sin(6.283 * f)\n        + 2.0 * sin(6.283 * f * 2.0)\n        + sin(6.283 * f * 3.0)\n    \t)/4.0,-1.0,1.0)*exp(-5.0 * t);\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    time = mod(time, bar * 16.0);\n    int b = int(time / bar);\n    int key = 57;\n\tvec2 gain = vec2(0);\n\tfloat t;\n\tint o,n,s;\n\t//kick\n\ts = 0x0581;\n\tt = seqTime(s, time); \n\tgain += 0.4 * kick(t);\n\t// snare\n\ts = 0x1101;\n\tt = seqTime(s, time); \n\tgain += 0.1 * snare(t);\n\t// hat\n\ts = 0x5555;\n\tt = seqTime(s, time); \n\tgain += 0.1 * hat(t);\n\t// chord\n\ts = 0x1215;\n\tt = seqTime(s, time);\n\tint chord=int[](1,5,6,3,4,1,4,5)[b]-1;\n    float c=0.0;\n    for(int i=0;i<4;i++)\n    {\n        c+=piano(note2freq(key -12 + chord + major(2*i)), t);\n    }\n    c/=4.0;\n    gain += 0.4 * c;\n    // base\n\ts = 0x1111;\n\tt = seqTime(s, time);\n\to = seqOrder(s, time);\n\ts = int[](0,2,4,2,0)[o];\n\tgain += 0.2 * base(note2freq(key - 24 + chord + major(s)), t);\n\t// random melody\n\tt=time;    \n\tfloat i;\n\tfor(i=0.0;i<2000.0;i++){\n\t\tfloat g = floor(R(i*545456.0+\n                  dot(iDate.xyz,vec3(1,999,99)*0.11235))*4.0)*tick;\n\t\tif(t<g)break;\n\t\tt-=g;\n\t}\n    // random beat\n    s = 0;\n    int shift = 0;\n    float g = float(b)+123.456;\n    for(int i=0;i<32;i++)\n    {\n        s += 1<<shift;\n        shift += int[](1,2,3,4)[int(fract(sin(g)*43578.123\n                 +dot(iDate.xyz,vec3(1,99,999)*0.12356)) * 4.0)];\n        if (shift>31) break;\n        g += 1234.1234;\n    }    \n    s = s & 0xFFFF;\n    \n\tt = seqTime(s, time);\n\tn = key + int[](0,2,4,7,9,12,14)[int(R(i*1282236.0)*7.0)];\n\tgain += 0.3*piano(note2freq(n), t);\n\n\tgain *= 0.8;\n\treturn clamp(gain,-1.0,1.0);\n}","name":"Sound","description":"","type":"sound"}]}