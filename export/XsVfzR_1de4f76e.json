{"ver":"0.1","info":{"id":"XsVfzR","date":"1527466360","viewed":199,"name":"Shitty image reconstruction","username":"Loeizd","description":"stretching bands of pixels around a square to fill it and \"reconstruct\" what the square is hiding. The variable z controls the size of the square (from 0. to .5)\nI think it could analyze a larger band of pixels to determinde the wheight of the stretch.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["image"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0, uv);\n    float z = 0.30;\n\n    float square = (uv.x > z && uv.x < 1.-z) && (uv.y > z && uv.y < 1.-z)? 0. : 1. ;\n    \n    vec4 h1 = texture(iChannel0, vec2(z, uv.y));\n    vec4 h2 = texture(iChannel0, vec2(1.-z, uv.y));\n    vec4 v1 = texture(iChannel0, vec2(uv.x, z));\n    vec4 v2 = texture(iChannel0, vec2(uv.x, 1.-z));\n    \n    vec2 newuv = (uv-vec2(z))*1./(1.-(z+z));\n    \n    vec4 blur = mix( mix(h1, h2, newuv.x), mix(v1, v2, newuv.y), .5);\n    \n    fragColor = vec4(mix(blur, col, square));\n}","name":"Image","description":"","type":"image"}]}