{"ver":"0.1","info":{"id":"3llXDS","date":"1564111457","viewed":104,"name":"ParallelHole","username":"Hirai_worthless","description":"transporter","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nfloat time(){\n\treturn iTime;\n}\n\nfloat map(vec3 p){\n    p.y = -abs(p.y);\n    p.xz *= mat2(cos(time()),-sin(time())\n         ,sin(time()),cos(time()));\n\tfloat fl = p.y + 0.5;\n    float bigHole = length(p.xz) - 1.0;\n    float holes = 1000000.0;\n    for(float i = 0.0; i < 6.0; i += 1.0){\n    \tholes = min(holes,length(p.xz - vec2(cos(i * PI / 3.0),sin(i * PI / 3.0)) * 1.5) - 0.3);\n    }\n    float h = min(bigHole,holes);\n    return max(fl,sin(time() * 2.0)*h);\n    \n\n\n}\n\nconst float EPS = 0.001;\nvec3 getNormal(vec3 p) {\n    return normalize(vec3(\n        map(p + vec3(EPS, 0.0, 0.0)) - map(p + vec3(-EPS,  0.0,  0.0)),\n        map(p + vec3(0.0, EPS, 0.0)) - map(p + vec3( 0.0, -EPS,  0.0)),\n        map(p + vec3(0.0, 0.0, EPS)) - map(p + vec3( 0.0,  0.0, -EPS))\n    ));\n}\n\nvec4 trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p = vec3(0.0,0.0,0.0);\n    \n    for(int i = 0; i < 64; ++i){\n        p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return vec4(getNormal(p),t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.2));\n    \n    vec3 o = vec3(0,0,-2.5);\n    vec4 data = trace(o,r);\n    float t = data.w;\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 fc = mix(vec3(0.5 - data.x,0.5 -data.y,0.5-data.z),vec3(1.0),1.0 - fog);\n\tfc = vec3(fog);\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}