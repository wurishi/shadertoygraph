{"ver":"0.1","info":{"id":"XtsXDM","date":"1437149349","viewed":133,"name":"Funky Mandelbrot","username":"Wicpar","description":"a Mandelbrot shader, if you zoom enough, you may visualize floating point errors, and what it is like to be under LSD","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","mandelbrot","funky","lsd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const int iter = 1000;\nfloat scale = 3.;\nvec2 center = vec2(1.001105,0.300717);\n\nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    scale = 1./(pow(iTime,iTime/20.));\n    vec2 z, c;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    c.x = 1.3333 * (uv.x - 0.5) * scale - center.x;\n    c.y = (uv.y - 0.5) * scale - center.y;\n    z = c;\n    int it;\n    for(int i = 0; i<iter; i++) {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.y * z.x + z.x * z.y) + c.y;\n\n        if((x * x + y * y) > 4.0) break;\n        z.x = x;\n        z.y = y;\n        it = i;\n    }\n\t fragColor = vec4(hsv2rgb_smooth(vec3( float(it)/10., 1.0,1. )),1.);\n}","name":"","description":"","type":"image"}]}