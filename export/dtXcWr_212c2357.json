{"ver":"0.1","info":{"id":"dtXcWr","date":"1690586436","viewed":75,"name":"Neon Rings Shader","username":"Abysscharlie","description":"Inspired by kishimisu\nhttps://www.youtube.com/watch?v=f4s1h2YETNY","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.698407346410207,0.668407346410207,0.468407346410207);\n    vec3 b = vec3(-0.431592653589793,0.618407346410207,-0.421592653589793);\n    vec3 c = vec3(0.438407346410207,0.418407346410207,0.608407346410207);\n    vec3 d = vec3(1.97840734641021,2.28840734641021,-0.491592653589793);\n    \n    t = abs(fract(t/8.5)*2.0-1.0);\n    return a + b*cos(6.28318*(c*t+d));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 uv0 = vec2(uv);\n\n    float ringScale = 14.0;\n\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 2.0; i++){    \n        float fmod = abs(.5 - fract(iTime/20.0));\n        uv = fract(uv*exp(fmod)) - 0.5;\n        vec3 color = palette(length(uv0) + iTime*.7);\n        float d = length(uv);\n        d = sin(ringScale * d + iTime)/ringScale;\n        d = abs(d);\n        d = pow(0.08/d,(i+1.0));\n        finalColor += color * d * exp(-length(uv0))* log(i+2.0); //length(uv);\n\n    }\n    \n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}