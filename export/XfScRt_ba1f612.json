{"ver":"0.1","info":{"id":"XfScRt","date":"1722787455","viewed":19,"name":"Mandelbrot zoomie6","username":"fthr","description":"this is a mandelbrot zoomer i've been working on with ChatGPT","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n{\n  \"DESCRIPTION\": \"Animated Mandelbrot Fractal Zoom with Spiral Animation and Color Variation\",\n  \"CATEGORIES\": [\n    \"Fractals\",\n    \"Mandelbrot\",\n    \"Animation\"\n  ],\n  \"INPUTS\": [],\n  \"PRESERVES_MOTION\": true\n}\n*/\n\n// Function to generate a color palette\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 0.7, 0.4);\n    vec3 d = vec3(0.00, 0.15, 0.20);\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Center the fractal in the screen\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Animation parameters\n    float time = iTime * 1.0;  // Adjust the zoom speed\n    float zoom = pow(1.03, time); // Exponential zoom for deeper dives\n\n    // Mandelbrot parameters with animation in the spirals\n    vec2 center = vec2(-0.743643887037151, 0.13182590420533); // Center on an interesting part of the Mandelbrot set\n    vec2 p = uv / zoom + center;\n\n    // Add animation to the 'c' parameter\n    vec2 anim = vec2(sin(time * 0.3) * 0.01, cos(time * 0.3) * 0.01);\n    vec2 c = p + anim;\n\n    int maxIterations = 1000;  // Increase the number of iterations\n    int i;\n    \n    for(i = 0; i < maxIterations; i++)\n    {\n        float x = (p.x * p.x - p.y * p.y) + c.x;\n        float y = (p.y * p.x + p.x * p.y) + c.y;\n\n        if((x * x + y * y) > 4.0)\n            break;\n\n        p.x = x;\n        p.y = y;\n    }\n\n    // Color based on the number of iterations with palette function\n    float color = float(i) / float(maxIterations);\n    vec3 col = palette(color);\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}