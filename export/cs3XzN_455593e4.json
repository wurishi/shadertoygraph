{"ver":"0.1","info":{"id":"cs3XzN","date":"1679434524","viewed":90,"name":"TV deformation shader","username":"jcksmssng","description":"Simple RGB split with deformation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["displacement","tv","rgb","split"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle( vec2 p, float r , float s)\n{\n    return smoothstep(r - s, r, length(p));\n}\n\n#define PI 3.14159265359\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pointer = iMouse.xy/iResolution.xy;\n    vec2 point = uv - pointer.xy;\n    vec2 dir = vec2(0.5, 0.1);\n    \n    float theta = acos(\n     dot(point, dir)/(length(point)*length(dir))\n    );\n    \n    theta /= PI;\n    theta = 1.0 - theta;\n    float arc = smoothstep(0.7, 1.0, theta);\n    \n    float c1 = 1.0-sdCircle(point, 0.5, 0.5);\n    float c2 = sdCircle(point, 0.4, 0.05);\n    \n    float c = c1*c2*arc;\n    \n    vec2 posVideo = uv;\n    posVideo -= 0.5;\n    posVideo *= 1.0 + .1 * c1; \n    posVideo += 0.5;\n    \n    vec3 texel = texture(iChannel0, vec2(posVideo.x - 0.2 * cos(c1)*c1, posVideo.y - 0.2 * sin(c1)*c1)).rgb;\n    float r = texture(iChannel0, vec2(posVideo.x + 0.02 * cos(c1)*c1, posVideo.y + 0.02 * sin(c1)*c1)).r;\n    float g = texture(iChannel0, posVideo).g;\n    float b = texture(iChannel0, posVideo).b;\n    vec3 col = vec3(r, g, b);\n    \n    vec3 col1 = vec3(c1);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}