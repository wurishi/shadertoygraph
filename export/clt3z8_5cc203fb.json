{"ver":"0.1","info":{"id":"clt3z8","date":"1681971572","viewed":48,"name":"circular gyroid","username":"kmarchais","description":"Gyroid gradient","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gyroid"],"hasliked":0,"parentid":"Dtt3z8","parentname":"gyroid gradient"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.14159265\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 colorA = vec3(141.0, 153.0, 174.0) / 255.0;\n    vec3 colorB = vec3(13.0, 27.0, 42.0) / 255.0;\n    \n    vec2 vUv = fragCoord/iResolution.yy;\n    vec2 center = 0.5 * iResolution.xy / iResolution.yy;\n\n    vec3 p = 2.0 * PI * vec3(15.0 * vUv, 0.1 * iTime);\n    float d = dot(sin(p), cos(p.yzx)) / 3.0;\n    \n    float radius = 0.75;\n    float thickness = 0.5 - pow(length(vUv - center) / radius, 2.0); \n    \n    colorA = vec3(1.0) - vec3(length(vUv - center) / pow(radius, 2.0));\n    fragColor.rgb = mix(colorA, colorB, smoothstep(-.5, .5, ( abs(d) - thickness ) / fwidth(d)  ) );\n}","name":"Image","description":"","type":"image"}]}