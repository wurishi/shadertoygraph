{"ver":"0.1","info":{"id":"XsBfz3","date":"1501346902","viewed":133,"name":"sorta understanding matrices","username":"BigotedSJW","description":"extension of https://www.shadertoy.com/view/4dfXDS & XslXDS based on my rough understanding of this video by 3Blue1Brown https://youtu.be/kYB8IZa5AuE I was expecting the X axis to follow the mouse vec, not the y axis to be perpendicular to it; hmmm","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float width=0.02;\nfloat Grid(vec2 uv)\n{\tfloat grid;\n\tgrid = \t   step(abs(uv.x), width*0.5)*.8;\n\tgrid = max(step(abs(uv.y), width*0.5)*.8, grid);\n\tgrid = max(step(fract(uv.x), width*1.2)*.2, grid);\n\tgrid = max(step(fract(uv.y), width*1.2)*.2, grid);\n\treturn grid;\n}\n\nvec3 absGrid(vec2 uv) \n{\treturn vec3(step(uv.x,0.0),\n                0.0,\n                step(uv.y,0.0));\n}\n\nfloat lineOverVec(vec2 screenCoords, vec2 vector, float width) //actually half-width, but whatevs\n{ \tvec2 norm = normalize(vector);\n\tvec2 perp = vec2( -norm.y, norm.x );\n \tfloat dist = length( dot(screenCoords,perp) * norm);\n \treturn 1.0 - step(width,dist);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = 0.5* iResolution.xy/iResolution.yy;\n\tvec2 uv = fragCoord.xy / iResolution.y - center;\n    \n    vec2 normal = normalize(iMouse.xy/iResolution.yy - center); //vector @ angle of mouse\n    \n    vec2 halfnormal =  vec2(sqrt( 0.5*(1.0 - normal.x) ),    //vector @ half angle of mouse\n                            sqrt( 0.5*(1.0 + normal.x) ) ) ; \n    /*edit: I flipped the half angle indentities; will leave in because of a nice side effect */\n \t   \n    mat2 skew = mat2(normal,      //i basis?\n\t\t\t\t\t halfnormal); //j basis?\n\n    vec2 coord = skew * uv; //experiment with order <--\n    /*matrix on the left does not preserve the y axis staying perpendicular to the mouse normal\n\t between 2/3rds pi and 2*pi */\n    \n    float tex = Grid(coord*5.0);\n\t\n    //add reference lines\n    float linewidth = 1.0/iResolution.y; \n    float onNormal = lineOverVec(uv,normal,linewidth);\n    float onHalfNormal = lineOverVec(uv,halfnormal,linewidth);\n    vec4 fragGreen = vec4(0.0,onNormal + 0.5*onHalfNormal,0.0,1.0);\n    //boolean operations with floats, because reasons\n    float notOnNormalOrHalf = 1.0- clamp(onNormal+onHalfNormal,0.0,1.0);\n    \n    fragColor = vec4(vec3(tex)+absGrid(coord),1.0) + 0.5*(vec4(Grid(5.0*uv)));\n    fragColor *= notOnNormalOrHalf;\n\tfragColor += fragGreen;\n}","name":"Image","description":"","type":"image"}]}