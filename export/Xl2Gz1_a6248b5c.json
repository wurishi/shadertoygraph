{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"const float c     = 8.;\n\nvec2 Scale(vec2 p){\n    return (p*2.-iResolution.xy)/iResolution.y;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 scaledp = Scale(fragCoord);\n    \n    \n    vec2 MinPole  = Scale(abs(iMouse.zw)) * float(iMouse.z != 0.0);\n    vec2 PlusPole = Scale(iMouse.xy);\n    \n    //debug standard color\n    vec3 col = vec3(abs(scaledp.x),abs(scaledp.y),1.);\n    \n    //Compass drawing\n    \t//Compass position and scaling etc..\n        vec2 blocked = mod(scaledp*c+.5,1.)*2.-1.;//position of the pixel within the compass\n        vec2 middle  = floor(scaledp*c+.5)/c;//middle of compass in the field\n\n    \t//forces\n        vec2 delta1 = PlusPole-middle;\n        vec2 force1 =  delta1/dot(delta1,delta1);\n        vec2 delta2 = MinPole-middle;\n        vec2 force2 = -delta2/dot(delta2,delta2);\n        vec2 forcer = force1+force2;\n\n    \t//distances to use for drawing\n        float d = abs(-blocked.x*forcer.y+blocked.y*forcer.x)/length(forcer);//distance from compass-point to force-direction-ray\n        float bd = length(blocked);//distance from compass-point to the middle of the compass;\n\n    \t//colouring\n        if(bd<.95){//inside of compass\n            if(d<.1&&d>0.){//compasss needle\n                if(dot(forcer,blocked)>0.){//compass point is on the force's direction side\n                    col = vec3(.8,.3,.3);//red\n                }else{\n                    col = vec3(.9);//white\n                }\n            }else{\n                col = vec3(.2);\n            }\n        }else if(bd>1.){//outside of compasses\n            col = vec3(.1);\n        }else{//compass border\n            col = vec3(0.);\n        }\n    \n    //magnet drawing\n    \t//calculating the distance from a point to the magnet\n        vec2 delta = PlusPole-MinPole;\n        float dotdelta = dot(delta,delta);     \n        float t3 =  clamp(dot(scaledp-MinPole,delta)/dotdelta,0.,1.);\n        float dm =  distance(MinPole + delta*t3, scaledp); \n    \t//colouring\n        if(dm<.02){//inside magnet\n            if(distance(scaledp,PlusPole)>distance(scaledp,MinPole)){//on which side of the magnet\n                col = vec3(.8,.3,.3);\n            }else{\n                col = vec3(.9);\n            }\n        }else if(abs(dm-.02)<.02){\n            col = vec3(0);\n        }\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xl2Gz1","date":"1426933355","viewed":2397,"name":"Toy : Compasses","username":"Gijs","description":"Because it's cool (change the magnet with your mouse) You now have full control of the magnet thanks to @P_Malin!","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["field","magnetic","compass"],"hasliked":0,"parentid":"","parentname":""}}