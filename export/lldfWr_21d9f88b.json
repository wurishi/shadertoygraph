{"ver":"0.1","info":{"id":"lldfWr","date":"1575245717","viewed":71,"name":"Basics smoothstep","username":"danamuise","description":"tutorial from \"Art of code\" ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle( vec2 uv, float radius, float edgeThickness){\n    float d = length(uv);\n    float c = smoothstep(radius, radius - edgeThickness, d);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    vec2 uv = fragCoord.xy/ iResolution.xy; // normalize 0.0 <> 1.0\n    uv -= .5; //remap from -0.5<>0.5\n    \n    //compensate for x ratio too wide by x*x/y\n    uv.x *= iResolution.x / iResolution.y;\n    \n\n    \n    //if(d<.3) c= 1.0; else c= 0.;\n    float c = circle(uv, 0.3, 0.1);\n    fragColor = vec4(uv.y, c, uv.x, 1.0);\n}","name":"Image","description":"","type":"image"}]}