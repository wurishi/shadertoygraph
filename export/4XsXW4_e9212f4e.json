{"ver":"0.1","info":{"id":"4XsXW4","date":"1709530525","viewed":93,"name":"Bulge Texture","username":"mehow_one","description":"Surely one of the many things we all have to build one day or another.","likes":5,"published":1,"flags":0,"usePreview":1,"tags":["bulge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize coordinates to [-1, 1] and adjust for aspect ratio\n    vec2 uv = fragCoord.xy / iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Parameters for the bulge effect\n    float bulgeRadius = 0.75; // Radius of the bulge\n    float bulgeHeight = 0.5;  // Height of the bulge effect\n\n    // Calculate the distance from the center\n    float dist = length(uv);\n\n    if (dist < bulgeRadius)\n    {\n        // Adjust the texture coordinates based on the bulge effect\n        float theta = dist / bulgeRadius;\n        float phi = atan(uv.y, uv.x);\n        float r = bulgeHeight * sqrt(1.0 - theta * theta);\n        vec2 bulgedUV = uv * mix(1.0, r / dist, theta);\n\n        // Sample the texture with the adjusted coordinates\n        vec3 color = texture(iChannel0, fract(bulgedUV * 0.5 + 0.5 + vec2(iTime * .1,0.))).rgb;\n        fragColor = vec4(color, 1.0);\n    }\n    else\n    {\n        // Outside the bulge radius, use the original texture coordinates\n        vec3 color = texture(iChannel0, uv * 0.5 + 0.5).rgb;\n        fragColor = vec4(color, 1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}