{"ver":"0.1","info":{"id":"ttKczG","date":"1611266719","viewed":96,"name":"Face - shader practice","username":"Many","description":"a creepy face ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["face"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n#define f(w) sin(3. * w) * pow(abs(sin(w)), 6.)\n\nvec4 _MainTex_ST;\nfloat _Size;\n\nfloat N21(vec2 p){\n    p = fract(p * vec2(123.24,345.45));\n    p += dot(p,p + 34.345);\n    return fract(p.x * p.y);\n}\n\nfloat Circle(vec2 uv, vec2 p, float r, float blur){\n    float d = length(uv - p);\n    float c = S(r,r-blur,d);\n    \n    return c;\n}\n\nfloat Drop(vec2 UV, float t){\n    vec2 aspect = vec2(2,1);\n    vec2 uv = UV * 1. * aspect;\n    uv.y += t * .25;\n    vec2 gv = fract(uv) - .5;\n    vec2 id = floor(uv);\n    \n    float n = N21(id);\n    t += n * 6.2831;\n    \n    float w = UV.y * 10.;\n    float x = (n - .5) * .8;\n    x += (.4 - abs(x)) * f(w) * .45;\n    float y = -sin(t + sin(t + sin(t) * .5));\n\ty -= (gv.x - x)* (gv.x - x);\n    \n    vec2 dropPos = (gv - vec2(x ,y))/aspect;\n\tfloat drop = S(.05,.03,length(dropPos));\n\n\tvec2 trailPos = (gv - vec2(x, t * .25)) / aspect;\n\ttrailPos.y = (fract(trailPos.y * 8.) - .5) / 8.;\n\tfloat trail = S(.03,.01,length(trailPos));\n\tfloat fogTrail = 0.;\n\tfogTrail = S(-.05,.05,dropPos.y);\n\tfogTrail *= S(.5,y,gv.y);\n\ttrail *= fogTrail;\n\tfloat m = drop + trail;\n\n\t//if(gv.x > .48 || gv.y > .49) m = 1.0;\n\treturn m;\n}\n\nfloat Face(vec2 uv, float t) {\n\tvec2 gv = uv;\n\tfloat x = 0.;\n\tfloat y = 0.;\n\tfloat w = gv.y * 10. * sin(t);\n\tx += (.5 - abs(x)) * f(w) * .2;\n\tw = gv.x * 10. * cos(t);\n\ty += (.5 - abs(y)) * f(w) * .1;\n\t\t\t\t\n\tfloat mask = Circle(gv,vec2(x,y), .4, .05);\n\tmask -= Circle(uv, vec2(-.13 + x , .2 + y), .07, .01);\n\tmask -= Circle(uv, vec2(.13 + x, .2 + y), .07, .01);\n\n\tfloat mouth = Circle(uv, vec2(x, y), .3, .02);\n\tmouth -= Circle(uv, vec2(0. +x, 0.1 + y), .3, .02);\n\tmask -= mouth;\n\n\t//float drops = Drop(uv, t);\n\t//drops += Drop(uv * 1.45 + 8.11, t);\n\t//drops += Drop(uv * 1.08 - 5.83,t);\n\t//mask -= drops;\n\tvec2 id = floor(uv);\n\n\tfloat n = N21(id) * 6.2813;\n\tvec2 dropPos1 = vec2(x, .2+ y - .45 * fract(N21(uv) + .65 * (sin(t) * sin(t) + t)));\n\t//n = N21(id * id) * 6.2813;\n\tvec2 dropPos2 = vec2( x, .2+ y - .45 * fract(N21(uv) + .65 * (sin(t) * sin(t) + t)));\n\tfloat drop = Circle(uv,dropPos1, .5, .3); //sin(t + sin(t + sin(t) * .5)))\n\t//drop += Circle(uv, dropPos2, .4, .3);\n\t/*for (int i = 0; i < 5; i ++) {\n\t\tdrop += Circle(uv, float2(dropPos1.x + .15 * i, -.28 + y - .45 * frac(i + .65 * (sin(t) * sin(t) + t))), .03, .04);\n\t\t}\n\t*/\n\tfloat trail = 0.;\n\n\t//vec2 trailPos = vec2(dropPos1.x, dropPos1.y + frac(t * .01));\n\t//trail += Circle(uv, trailPos, .02, .01);\n\t\t\t\t\n\t\t\t\t\n\tmask += drop;\n\t//mask -= trail;\n\n\treturn mask;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = mod(iTime,7200.);\n    uv -= .5;\n\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    float face = Face(uv, t);\n    col += vec3(1.,0.,0.) * face;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}