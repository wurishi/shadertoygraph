{"ver":"0.1","info":{"id":"XlsBWf","date":"1513676702","viewed":223,"name":"Mix colors in HSV space","username":"unycone","description":"Those two functions (rgb to/from hsv) are cited from stackoverflow.\nhttps://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorblending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat mixHue(float a, float b, float t)\n{\n    vec2 array[3];\n    array[0] = vec2(a, b);\n    array[1] = vec2(a + 1.0, b);\n    array[2] = vec2(a, b + 1.0);\n    \n    float closestDistance = 1000.0; // something big\n    float result = 0.0;\n    for (int i = 0; i < 3; i++) {\n        float distance = abs(array[i].x - array[i].y);\n        if (distance < closestDistance) {\n            result = mod(mix(array[i].x, array[i].y, t), 1.0);\n            closestDistance = distance;\n        }\n    }\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec4 ca = texture(iChannel0, uv);\n    vec4 cb = vec4(hsv2rgb(vec3(1.0, 1.0, 1.0)), 1.0); // red\n\n    vec3 ha = rgb2hsv(ca.xyz);\n    vec3 hb = rgb2hsv(cb.xyz);\n    \n    float t = uv.y;\n    float mixedHue   = mixHue(ha.x, hb.x, t);\n    vec2  mixedSV    = ha.yz; // preserve original\n    float mixedAlpha = ca.w;  // preserve original\n\n    fragColor = vec4(hsv2rgb(vec3(mixedHue, mixedSV.xy)), mixedAlpha);\n}","name":"Image","description":"","type":"image"}]}