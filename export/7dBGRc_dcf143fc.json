{"ver":"0.1","info":{"id":"7dBGRc","date":"1617729305","viewed":419,"name":"Pyramidal shake","username":"evvvvil","description":"Winning shader made at Revision 2021 Shader Showdown quarter-final\nLive coded on stage in 25 minutes.  Designed beforehand in several hours.\n","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["reflection","demoscene","glow","city","scifi","cut","architecture","pyramid","electricity","structure","industrial","building","extrusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Winning shader made at Revision 2021 Shader Showdown Quarter-Final\n\n// The \"Shader Showdown\" is a demoscene live-coding shader battle competition.\n// 2 coders battle for 25 minutes making a shader on stage. No google, no cheat sheets.\n// The audience votes for the winner by making noise or by voting on their phone.\n\n// This shader was coded live on stage in 25 minutes. Designed beforehand in several hours.\n\nvec2 z,v,e=vec2(.00035,-.00035);float t,tt,I,b,bb,g=0.,tnoi,a,la,wa;vec3 np,pp,po,no,al,ld,cp;\nfloat bo(vec3 p, vec3 b ){ p= abs(p)-b;return max(max(p.x,p.y),p.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nfloat ex(vec3 p,float sdf,float h){vec2 w=vec2(sdf,abs(p.y)-h);return min(max(w.x,w.y),0.0)+length(max(w,0.0));}\nfloat oc(vec3 p,float s){p=abs(p);return (p.x+p.y+p.z-s)*0.57735;}\nvec4 texNoise(vec2 uv,sampler2D tex ){ float f = 0.; f+=texture(tex, uv*.125).r*.5; f+=texture(tex,uv*.25).r*.25;\n                       f+=texture(tex,uv*.5).r*.125; f+=texture(tex,uv*1.).r*.125; f=pow(f,1.2);return vec4(f*.45+.05);}\nvec2 mp( vec3 p)\n{\n  vec2 h=vec2(1000,3),t=vec2(1000,5);  \n  np=vec3(p.xz*.3,.5); \n  wa=(1.-b)*sin(3.*length(p.xz*.1)-tt*5.);\n  for(int i=0;i<4;i++){    I=float(i);\n    np.xy=abs(np.xy)-2.4;    \n    np.xy*=r2(.785*(I+1.));\n    np*=1.6;\n    np.y=abs(np.y)-1.;  \n    bb=i==3?9.:6.;        \n    a=ex(p,bo(np.xyx,vec3(6.5,(.14-clamp(sin(np.x*2.),-.2,.2)*.2)*(I+1.),6.5))/np.z,bb-I*.5);\n    a=max(abs(a)-.05,abs(p.y)-(bb-.5)+I*.5);    \n    if(i>2) a=max(a,-(length(p.xy-vec2(0,10))-4.));\n    t.x=min(t.x,a);   \n    a=ex(p,bo(np.xyx,vec3(6.5,0,6.5))/np.z,bb-I*.5);\n    a=max(a,abs(p.y)-(bb-.5)+I*.5+.5-wa);\n    if(i>2) a=max(a,-(length(p.xy-vec2(0,10.+wa))-4.));\n    g+=0.1/(0.1+a*a*(400.-wa*399.));\n    t.x=min(t.x,a);    \n    a=ex(p,bo(np.xyx,vec3(6.5,.15*(I+1.),6.5))/np.z,bb-I*.5);    \n    a=max(abs(a)-.1,abs(p.y)-(bb-1.)+I*.5);\n    if(i>2) a=max(a,-(length(p.xy-vec2(0,10))-4.));\n    h.x=min(h.x,a);        \n  } \n  bb=sin(p.y-b*3.)*b;\n  h.x=min(h.x,bo(p,vec3(1.-bb,6.+5.*b,1.0-bb)));\n  t=t.x<h.x?t:h;    \n  tnoi=texNoise(p.xz*.05,iChannel0).r*1.5;  \n  h=vec2(p.y-4.5+cos(p.x*.2)*5.+cos(p.z*.5)-tnoi,7);  //terrain:  \n  t=t.x<h.x?t:h;  \n  h=vec2(max(oc(p,10.4),-6.0+p.y),6);  \n  pp=p;  \n  pp.xz*=r2(-b*3.14);\n  pp.y-=b*5.;  \n  h.x=min(h.x,max(oc(pp,10.4),6.1-pp.y));  \n  t=t.x<h.x?t:h;\n  cp=vec3(np.xy,p.y*2.);\n  return t;\n}\nvec2 tr( vec3 ro, vec3 rd,  int it)\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<it;i++){\n    h=mp(ro+rd*t.x);\n    if(t.x<.0001||t.x>40.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>40.) t.y=0.;\n  return t;\n}\n#define a(d) clamp(mp(po+no*d).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);\n  tt=mod(iTime,62.82)+6.5;\n  b=smoothstep(0.,1.,(clamp(sin(tt),-.2,.2)*2.5+.5));\n  vec3 ro=mix(vec3(sin(tt*.5),11.-cos(tt)*5.,cos(tt*.5)*20.),\n          vec3(sin(tt*.5)*7.,10.-cos(tt),cos(tt*.5)*7.),ceil(sin(tt*.5)));\n  ro.xy-=sin(smoothstep(0.,1.,(clamp(cos(tt*.5-.25),-.2,.2)*2.5+.5))*16.)*.4;\n  vec3 cw=normalize(vec3(0,5,0)-ro),cu=normalize(cross(cw,vec3(0,1,0))),\n  cv=normalize(cross(cu,cw)),rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo,rco;    \n  co=fo=vec3(.18,.16,.2)-length(uv)*.25;\n  ld=normalize(vec3(.1,.3,-.3));  \n  z=tr(ro,rd,128);t=z.x;\n  if(z.y>0.){   \n    v=cp.xz*.075;float d=1.;\n    for(int i=0;i<4;i++){\n        v=abs(v)-1.;\n        v*=r2(.785); v*=1.5;\n        d=min(d,ceil(abs(sin(v.x))-.05-clamp(sin(v.y*2.),-.1,.1)*.4));\n    }      \n    po=ro+rd*z.x;\n    no=normalize(e.xyy*mp(po+e.xyy).x+\n    e.yyx*mp(po+e.yyx).x+\n    e.yxy*mp(po+e.yxy).x+\n    e.xxx*mp(po+e.xxx).x);\n    al=mix(vec3(0.3,0.16,0.3),vec3(0.5),cp.y);\n    if(z.y<5.) al=vec3(0.);    \n    if(z.y>5.) al=vec3(0.5); \n    if(z.y>6.) al=mix(vec3(.5,.4,.3),vec3(.2,.2,.2),3.-tnoi*5.0);\n    float dif=max(0.,dot(no,ld)),\n    fr=pow(1.-abs(dot(no,rd)),4.),\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),40.);\n    co=mix(sp+al*(a(.1)+.2)*(dif+s(4.0)),fo,0.);    \n    co=mix(fo,co,exp(-.0002*t*t*t));\n    if(z.y==3.||z.y==6.){           \n        rd=reflect(rd,no);\n        z=tr(po+rd*0.01,rd,60);\n        \n        po=po+rd*z.x;\n            no=normalize(e.xyy*mp(po+e.xyy).x+\n            e.yyx*mp(po+e.yyx).x+\n            e.yxy*mp(po+e.yxy).x+\n            e.xxx*mp(po+e.xxx).x);\n            al=mix(vec3(0.3,0.16,0.3),vec3(0.5),cp.y);\n            if(z.y<5.) al=vec3(0.);    \n            if(z.y>5.) al=vec3(0.5); \n            if(z.y>6.) al=mix(vec3(.5,.4,.3),vec3(.2,.2,.2),3.-tnoi*5.0);\n            float dif=max(0.,dot(no,ld)),\n            sp=pow(max(dot(reflect(-ld,no),-rd),0.),40.);\n            rco=sp+al*(a(.1)+.2)*(dif+s(4.));    \n            rco=mix(fo,rco,exp(-.0002*z.x*z.x*z.x));\n        co+=(rco*(0.5+fr*.5)*d);\n        \n    }    \n  }\n  uv/=(1.-b)*fract(tt/(acos(-1.)*2.));\n  uv*=r2(-tt);\n  co*=min(1.,ceil(abs(bo(uv.xyx,vec3(.5)))-.1));\n  fragColor = vec4(pow(co+g*.1*vec3(.1,.2,.7),vec3(.55)),1);\n}","name":"Image","description":"","type":"image"}]}