{"ver":"0.1","info":{"id":"clXyD2","date":"1691167629","viewed":37,"name":"0001 Simple Moving Object","username":"francislarge","description":"s","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bouncingball","bouncingbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DrawBox(vec2 Pos, vec2 Size, vec2 Graph, float Thickness);\nfloat DrawCircle(vec2 Pos, float Radius, vec2 Graph);\n\n#define AR (iResolution.x/iResolution.y)\n\n#define COLORS_NUM 5\nconst vec3 Colors[] = vec3[COLORS_NUM]\n( \n    vec3(0.949, 0.059, 0.059),\n    vec3(0.902, 0.898, 0.051),\n    vec3(0.059, 1, 0),\n    vec3(0.051, 0.933, 0.941),\n    vec3(0.02, 0.035, 0.961)\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 Uv = fragCoord/iResolution.xy;\n    \n    const float GraphSize = 1000.;\n    \n    vec2 Graph = fragCoord/iResolution.xy;\n    Graph -= 0.5;\n    Graph *= vec2(2.* AR, 2.) * GraphSize;\n    \n    \n    vec2  ObjectPos    = vec2(0.);\n    vec2  Velocity     = vec2(.86, .5)*1000.0;\n    const float Radius = 200.;\n    \n    // displacement as time moves = velocity*time\n    ObjectPos += Velocity*iTime;\n    \n    \n    vec2 MaxBounds = vec2(AR*GraphSize-Radius, GraphSize-Radius);\n    vec2 MinBounds = -MaxBounds;\n    \n    ivec2 HitCount = ivec2( (abs(ObjectPos)+MaxBounds)/(MaxBounds*2.) );\n\n    \n    //(1)Check bounds\n        //Upper positive bounds\n    ObjectPos = mod(ObjectPos, MaxBounds * 4.); \n    ObjectPos = MaxBounds - ( abs(MaxBounds-ObjectPos) ); \n    \n        //Lower negative bounds\n    ObjectPos = MinBounds + ( abs(MinBounds-ObjectPos) );\n    \n    vec3 BackgroundTint = Colors[ (HitCount.x+HitCount.y) % COLORS_NUM];\n    \n    //Final color\n    vec3 Final = vec3(1., 0., 0.) *\n                 DrawBox(ObjectPos, vec2(Radius), Graph, 5.); \n                 //DrawCircle(ObjectPos, Radius, Graph);\n                    \n    Final = mix(texture(iChannel0,Uv).rgb*BackgroundTint, Final, .9);\n    \n    // Some exposure and gamma correction ?\n    Final = vec3(1.0) - exp(-Final*1.5);    \n    Final = pow(Final, vec3(1./2.2) );\n    fragColor.rgb  = Final;\n}\n\n\nfloat DrawBox(vec2 Pos, vec2 Size, vec2 Graph, float Thickness)\n{\n    vec2 ToBox = Graph - Pos;\n    float d = length( max( abs(ToBox) - (Size-Thickness), vec2(0.) ) );\n    \n    return 1. - smoothstep(0.,Thickness, d);\n}\n\nfloat DrawCircle(vec2 Pos, float Radius, vec2 Graph)\n{\n    vec2 ToCircle = Pos - Graph;\n    ToCircle *= ToCircle;\n    \n    return 1.0 - pow( min((ToCircle.x+ToCircle.y)/(Radius*Radius), 1.), 5.);\n        \n    //return 1. - smoothstep(0., Radius*Radius, ToCircle.x+ToCircle.y);\n}\n","name":"Image","description":"","type":"image"}]}