{"ver":"0.1","info":{"id":"MdXBzH","date":"1494825223","viewed":99,"name":"everyday 006/100","username":"kalin","description":"everyday 6/100","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["everyday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.1415926535;\n\nfloat sdsphere(vec3 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat sdtorus(vec3 p, vec2 t)\n{\n  vec2 q = vec2(length(p.xz) - t.x, p.y);\n  return length(q) - t.y;\n}\n\nfloat displacement(vec3 p, float c)\n{\n\treturn sin(c * p.x) * sin(c * p.y) * sin(c * p.z);\n}\n\nfloat sdspheredisplace(vec3 p, float r, float c)\n{\n    float d1 = sdsphere(p, r);\n    float d2 = displacement(p, c);\n    return d1 + d2;\n}\n\nfloat map(vec3 p)\n{\n    float a = sdtorus(p + vec3(-0.25, 0.0, 0.0), vec2(0.1, 0.01));\n    float b = sdtorus(p + vec3(+0.25, 0.0, 0.0), vec2(0.1, 0.01));\n    \n\treturn min(a, b);\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n\tfloat t = 0.0;\n    for(int i = 0; i < 64; ++i)\n    {\n        vec3 p = ro + rd * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 nuv = uv * 2.0 - 1.0;\n    nuv.x *= iResolution.x / iResolution.y;\n\n    vec2 rot = vec2(iTime * 1.0, iTime * 1.0);\n    mat2 rotm = mat2(cos(rot.y), -sin(rot.x), sin(rot.x), cos(rot.y));\n    \n    float tt0 = texture(iChannel0, vec2(0.0, 0.0)).x;\n    float tts = \n        texture(iChannel0, vec2(0.1, 0.0)).x +\n        texture(iChannel0, vec2(0.2, 0.0)).x +\n        texture(iChannel0, vec2(0.3, 0.0)).x +\n        texture(iChannel0, vec2(0.4, 0.0)).x +\n        texture(iChannel0, vec2(0.5, 0.0)).x +\n        texture(iChannel0, vec2(0.6, 0.0)).x +\n        texture(iChannel0, vec2(0.7, 0.0)).x +\n        texture(iChannel0, vec2(0.8, 0.0)).x +\n        texture(iChannel0, vec2(0.9, 0.0)).x;\n    \n    tts /= 9.0;\n\n    \n    vec3 ro = vec3(cos(iTime) * 0.0, sin(iTime) * 0.0, -0.5 + sin(iTime) * 0.4 * tt0);\n    vec3 rd = normalize(vec3(nuv, 1.0));\n    \n    rd.xy = rd.xy * rotm;\n    \n    float d = march(ro, rd);\n    float r = step(d, 0.99);\n    \n    vec4 bbg = vec4(0.1, 0.4, 0.5, 1.0);\n    vec4 bg = vec4(0.0, 0.2, 0.7, 1.0);\n    vec4 fg = vec4(0.2, 1.5, 0.0, 1.0);\n    \n    fragColor = bbg + bg * pow(tts * .25, 0.4) + fg * r * d;\n\n    float c0 = sin(d);\n    float c1 = sin(d);\n    float c2 = abs(sin(uv.x - 0.5)) + abs(sin(uv.y - 0.5));\n   \n    fragColor.xy += tts * tt0 * (2.5 + tts * 0.3) * c0 * fragColor.y;\n    fragColor.z *= c2 * fragColor.y * 3.0 * (1.0 + tts);\n    \n    float t = iTime;\n}","name":"Image","description":"","type":"image"}]}