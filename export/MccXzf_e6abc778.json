{"ver":"0.1","info":{"id":"MccXzf","date":"1714246696","viewed":50,"name":"Screen Split Tecnique","username":"sergiorugani","description":"Dynamic texture blending shader using split screen technique based on time intervals. Features line segment thickness adjustment, and responsive texture mapping for creative video effects.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["line","textureblending","split","linesegment","remap","videoeffects","dynamictexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPLIT_PERIOD 5.0\n\nvec2 Remap(vec2 p, float b, float l, float t, float r)\n{\n    return vec2((p.x - l) / (r - l), (p.y - b) / (t - b));\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b) \n{\n    float thickness = 0.1 / 100.0;\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    float l = length(pa - ba * h);\n\n    return step(thickness, l);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(uv.x, 0, uv.y);\n    vec2 startPoint = vec2(0.5, 1);\n    vec2 endPoint = vec2(startPoint.x, 0);\n    vec4 out1 = texture(iChannel0, Remap(uv, 0.0, -0.5, 1.0, 0.5)); \n    vec4 out2 = texture(iChannel1, Remap(uv, 0.0, 0.5, 1.0, 1.5)); \n    \n    float sp = round(mod(iTime, SPLIT_PERIOD) / SPLIT_PERIOD);\n    \n    if (sp == .0)  {\n        if (uv.x < startPoint.x) color = out1.rgb; \n        if (uv.x > startPoint.x) color = out2.rgb;\n    } else {\n        startPoint = vec2(1, 0.5);\n        endPoint = vec2(0, startPoint.y);\n        out1 = texture(iChannel0, Remap(uv, -0.5, 0.0, 0.5, 1.0)); \n        out2 = texture(iChannel1, Remap(uv, 0.0, 0.0, 1.0, 1.0));\n        if (uv.y < startPoint.y) color = out1.rgb; \n        if (uv.y > startPoint.y) color = out2.rbb;\n    }\n        \n    color = min(color, lineSegment(uv, startPoint, endPoint));\n   \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}