{"ver":"0.1","info":{"id":"4ddGWl","date":"1452759826","viewed":550,"name":"Bubbles blob!","username":"Emil","description":"A simple pattern that looks like a blob of bubbles!","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","voronoi","bubbles","cells"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float gradient = (0.7-float(fragCoord.y / iResolution.x))*1.4;\n    float cellSize = 32.0;\n    vec2 currentOffset = vec2(0.0,0.0);\n    float pi = 3.141592653;\n    \n    float magrand = 0.0, timeStep = 0.0;\n    \n    float d1 = 0.0,d2 = 0.0,d3 = 0.0,d4 = 0.0,d5 = 0.0,d6 = 0.0,d7 = 0.0,d8 = 0.0,d9 = 0.0;\n    int index = 0;\n    float d = 1.0, e = 0.0, f = 0.0, g = 0.0;\n    \n    vec2 uv = vec2(0.0,0.0), uvStep = vec2(0.0,0.0), newPosition = vec2(0.0,0.0);\n    float y = 0.0, x = 0.0, rm1 = 0.0, rm2 = 0.0;\n    \n    float sintime = clamp(sin(iTime),0.0,1.0);\n    timeStep = ceil(0.1+(iTime/(2.0*pi)));\n    magrand = fract(sin(dot(vec2(timeStep,0.4),vec2(1461.6184,26968.346)))*69184.361);\n    \n    uv = (fragCoord.xy / iResolution.x);\n    \n    for(int xpos = -1;xpos<=1;xpos++){\n        for(int ypos = -1;ypos<=1;ypos++){\n            index++;\n            currentOffset = vec2(xpos,ypos);\n            \n            uvStep = (ceil((uv)*cellSize-vec2(0.5,0.5)+currentOffset)/cellSize);\n            y = fract(sin(dot(uvStep.xy,vec2(8616.1566,26968.489)))*968423.156)-0.5;\n            x = fract(sin(dot(uvStep.xy,vec2(1242.9898,42678.233)))*33758.5453)-0.5;\n            \n            rm1 = 0.02*sin(iTime*12.0*x);\n            rm2 = 0.02*cos(iTime*12.0*x);\n    \n    \t\tnewPosition = vec2(uvStep.x + x*rm1, uvStep.y + y*rm2);\n    \t\t//d = 1.0-d;\n\t\t\td = (distance(newPosition.xy,uv.xy)*cellSize);\n            d += (x*0.7);\n            d += 0.2;\n            d = distance(uvStep.xy,vec2(0.5,0.275))<(0.2+0.05*y)*abs(sin(iTime*0.3))?d:1.0;\n            \n            if(index==1){\n                d1 = d;\n            } else if (index==2){\n                d2 = d;\n            } else if (index==3){\n                d3 = d;\n            } else if (index==4){\n                d4 = d;\n            } else if (index==5){\n                d5 = d;\n            } else if (index==6){\n                d6 = d;\n            } else if (index==7){\n                d7 = d;\n            } else if (index==8){\n                d8 = d;\n            } else if (index==9){\n                d9 = d;\n            }\n            \n        }\n    }\n    // finding smallest\n    d = d1<d2?d1:d2;\n    d = d<d3?d:d3;\n    d = d<d4?d:d4;\n    d = d<d5?d:d5;\n    d = d<d6?d:d6;\n    d = d<d7?d:d7;\n    d = d<d8?d:d8;\n    d = d<d9?d:d9;\n    \n    // finding second smallest\n    if(d==d1){\n        e = d2<d3?d2:d3;\n        e = e<d4?e:d4;\n        e = e<d5?e:d5;\n        e = e<d6?e:d6;\n        e = e<d7?e:d7;\n        e = e<d8?e:d8;\n        e = e<d9?e:d9;\n    } else if(d==d2){\n        e = d1<d3?d1:d3;\n        e = e<d4?e:d4;\n        e = e<d5?e:d5;\n        e = e<d6?e:d6;\n        e = e<d7?e:d7;\n        e = e<d8?e:d8;\n        e = e<d9?e:d9;\n    } else if(d==d3){\n        e = d1<d2?d1:d2;\n        e = e<d4?e:d4;\n        e = e<d5?e:d5;\n        e = e<d6?e:d6;\n        e = e<d7?e:d7;\n        e = e<d8?e:d8;\n        e = e<d9?e:d9;\n\t} else if(d==d4){\n        e = d1<d2?d1:d2;\n        e = e<d3?e:d3;\n        e = e<d5?e:d5;\n        e = e<d6?e:d6;\n        e = e<d7?e:d7;\n        e = e<d8?e:d8;\n        e = e<d9?e:d9;\n    } else if(d==d5){\n        e = d1<d2?d1:d2;\n        e = e<d3?e:d3;\n        e = e<d4?e:d4;\n        e = e<d6?e:d6;\n        e = e<d7?e:d7;\n        e = e<d8?e:d8;\n        e = e<d9?e:d9;\n    } else if(d==d6){\n        e = d1<d2?d1:d2;\n        e = e<d3?e:d3;\n        e = e<d4?e:d4;\n        e = e<d5?e:d5;\n        e = e<d7?e:d7;\n        e = e<d8?e:d8;\n        e = e<d9?e:d9;\n    } else if(d==d7){\n        e = d1<d2?d1:d2;\n        e = e<d3?e:d3;\n        e = e<d4?e:d4;\n        e = e<d5?e:d5;\n        e = e<d6?e:d6;\n        e = e<d8?e:d8;\n        e = e<d9?e:d9;\n    } else if(d==d8){\n        e = d1<d2?d1:d2;\n        e = e<d3?e:d3;\n        e = e<d4?e:d4;\n        e = e<d5?e:d5;\n        e = e<d6?e:d6;\n        e = e<d7?e:d7;\n        e = e<d9?e:d9;\n    } else if(d==d9){\n        e = d1<d2?d1:d2;\n        e = e<d3?e:d3;\n        e = e<d4?e:d4;\n        e = e<d5?e:d5;\n        e = e<d6?e:d6;\n        e = e<d7?e:d7;\n        e = e<d8?e:d8;\n    }\n    fragColor = vec4(1.0)-vec4(smoothstep(-0.4, 0.0, d-e*1.1)*gradient*vec4(1.6,0.6,0.3,0.0)+(1.0-gradient)*vec4(0.6,0.2,0.3,0.0));\n\n}","name":"Image","description":"","type":"image"}]}