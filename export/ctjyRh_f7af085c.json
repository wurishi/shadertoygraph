{"ver":"0.1","info":{"id":"ctjyRh","date":"1691466924","viewed":18,"name":"checkerboard with dots","username":"zetahhh","description":"assisted by chat gpt","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["time","checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // 计算每个格子的宽度\n    float cellWidth = 108.0;\n    \n    // 计算当前片元所在格子的索引\n    int cellX = int(fragCoord.x / cellWidth);\n    int cellY = int(fragCoord.y / cellWidth);\n    \n    // 根据格子索引判断当前片元是黑色还是白色\n    bool isBlack = (cellX + cellY) % 2 == 0;\n    \n    // 设置片元颜色\n    vec3 color = isBlack ? vec3(0.600,0.200,1.000) : vec3(0.259,0.290,0.322);\n    \n    // 计算圆点的半径\n    float radius = 25.0;\n    \n    // 计算圆点的中心位置\n    vec2 center = vec2(float(cellX) * cellWidth + cellWidth / 2.0, float(cellY) * cellWidth + cellWidth / 2.0);\n    \n    // 计算圆点的数量\n    float dotCount = mod(iTime, 2.0) < 1.0 ? 1.0 : 0.0;\n    \n    // 判断当前片元是否在圆点内\n    float distance = length(fragCoord - center);\n    if (distance < radius && dotCount > 0.0) {\n        color = vec3(0.306,0.831,0.937);\n    }\n    \n    fragColor = vec4(color, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}