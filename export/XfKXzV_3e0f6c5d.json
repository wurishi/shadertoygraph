{"ver":"0.1","info":{"id":"XfKXzV","date":"1715486531","viewed":46,"name":"Ray Voxel 2D  ","username":"vec2","description":"just Voxel Ray","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","ray","voxel","dy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define InvVoxelSize 0.08\n\n// 2D voxel bitmap\nbool map(ivec2 p)\n{\n    float d=0.0;\n    int maxmapstep=9;\n    for(int i= maxmapstep;i-->0;)\n    {\n    d+= textureLod(iChannel0,vec2(p+ivec2(-50,0))*vec2(0.02/float(1<<i)),0.0).x /float(maxmapstep)  ;\n    }\n    return d<0.4;\n}\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\nstruct RayVoxReturn\n{\n    float Direction;\n    ivec2 RayPos;\n    vec2 RayNor;\n    vec4 DebugVoxel;\n};\n\nRayVoxReturn RayVox(vec2 start, vec2 end, /* Debug */ vec2 debugPoint)\n{\n    RayVoxReturn ray; \n    ivec2 startPixel = ivec2(start );\n    ivec2 endPixel = ivec2(end );\n    vec2 rayDirection = end - start;\n    ray.Direction=length(rayDirection);\n    float dy = (rayDirection.x == 0.0) ? float(1 << 30) : abs(rayDirection.y / rayDirection.x);\n    vec2 delta = start  - vec2(startPixel);\n    ivec2 signv = ivec2(sign(rayDirection));\n    float dd = delta.y - delta.x * dy * float(signv.y * signv.x);\n    if (signv.y < 0) dd = 1.0 - dd;\n    if (signv.x < 0) dd = dd - dy;\n    if (signv.x == 0) signv.x = 1;\n    if (signv.y == 0) signv.y = 1;\n\n    for (ivec2 pixel = startPixel; pixel.x != endPixel.x + signv.x; pixel.x += signv.x)\n    {\n        dd += dy;\n              \n\n        /* Debug */if (ivec2(debugPoint) == pixel) ray.DebugVoxel.x += 0.7;\n          if(map(pixel))\n          {\n          ray.RayPos=pixel;\n          ray.RayNor.x=float(signv.x);\n          ray.Direction=dot(-ray.RayNor,start- (vec2(ray.RayPos) + step(vec2(signv),vec2(0.0,0.0))))/dot(ray.RayNor,normalize(rayDirection));\n\n          break;\n          }\n        \n        /* Safe */int maxIterations = 0;\n        while (dd >= 1.0)\n        {\n            dd--;pixel.y += signv.y;\n            if (maxIterations > 100000 || pixel.y == endPixel.y + signv.y ) break;                        \n            /* Debug */if (ivec2(debugPoint) == pixel) ray.DebugVoxel.y += 0.7;  \n            \n            if(map(pixel))\n            {\n            ray.RayPos=pixel;\n            ray.RayNor.y=float(signv.y);\n            ray.Direction=dot(-ray.RayNor,start- (vec2(ray.RayPos) + step(vec2(signv),vec2(0.0,0.0))))/dot(ray.RayNor,normalize(rayDirection));\n\n            pixel.x=endPixel.x  ;break;}\n        }\n    }\n\n\n    return ray;\n}\n\nvoid mainImage(out vec4 R, in vec2 P)\n{\n    R = vec4(step(mod(P * InvVoxelSize, 1.0), vec2(InvVoxelSize)), 0., 1.0)*0.3;\n    vec2 p1 = (iMouse.z>0.0 ? abs(iMouse.zw) :  vec2(cos(iTime*0.2362)+1.0,sin(iTime*0.75683)+1.0)*0.5*iResolution.xy) ;\n    vec2 p2 = (iMouse.z>0.0 ? iMouse.xy      : vec2(cos(iTime)+0.3123,sin(iTime*0.2623)+1.0)*0.5*iResolution.xy) ;\n    \n    R = max(R, vec4(5.0 - length(P - iMouse.zw * vec2(1.0, -1.0))));\n    vec2 cell = step( mod(P * InvVoxelSize, 1.0), vec2(InvVoxelSize));\n    R =  mix(R,vec4(cell,0.0,1.0), cell.x+cell.y);\n\n    R = max(R, 0.4-vec4(map(ivec2(P * InvVoxelSize))) * 0.6);\n    \n    RayVoxReturn RayVoxel = RayVox(p1* InvVoxelSize,p2* InvVoxelSize, P*InvVoxelSize);\n    R = max(R, vec4(RayVoxel.DebugVoxel));\n    R = max(R,2.0-sdSegment(P,p1,p1+normalize(p2-p1)* RayVoxel.Direction/InvVoxelSize  ) );\n    R = max(R, vec4(abs(RayVoxel.RayNor),0.0,1.0)*((5.0 - length(P - (vec2(RayVoxel.RayPos)+vec2(0.5))/InvVoxelSize))) );\n}\n","name":"Image","description":"","type":"image"}]}