{"ver":"0.1","info":{"id":"Ms2fDy","date":"1502918635","viewed":417,"name":"2D shadows","username":"bytearray","description":"test","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define epsilon 1e-4\n#define mint .001\n\n#define sphere( p,r)  ( length(p) - r )\n\nfloat box( vec2 p, vec2 b )\n{\n  vec2 d = abs(p) - b;\n  return min(max(d.x,d.y),0.) + length(max(d,0.));\n}\n\nfloat sdf(vec2 pos)\n{\n    return min(\n        box(   pos,vec2( .1,  .2 ) ),\n    min(\n        sphere(pos-vec2( .5,  0.), .1),\n        sphere(pos-vec2(-.3, -.3), .1)\n    ));\n}\n\nfloat shadow(vec2 light, vec2 pos, float hard)\n{\n    vec2  d = light - pos;\n\tfloat l = length(d),\n        res = 1.;\n    \n    for( float t=mint, h; t < l; t+= h)\n    {\n        h = sdf(pos + d/l*t);\n        if( h < epsilon ) return 0.;\n        res = min( res, hard*h/t );\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2  R = iResolution.xy,\n         uv = (    U      -.5* R ) / R.y,\n       mpos = ( iMouse.xy -.5* R ) / R.y;\n\t\n    O = sdf(uv) > 0. ? vec4(0) : vec4(1, 0, 0, 1);\n    \n    float shad1 = shadow(vec2(3.*sin(iTime), -4.), uv, 30.),\n          shad2 = shadow(mpos, uv, 30.);\n  \n    O += (shad1+shad2)/2.;\n}","name":"Image","description":"","type":"image"}]}