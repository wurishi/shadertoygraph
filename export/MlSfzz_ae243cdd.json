{"ver":"0.1","info":{"id":"MlSfzz","date":"1514290278","viewed":1936,"name":"Starry sky","username":"luluco250","description":"Test to get blinking stars and a pseudo aurora","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["procedural","2d","random","sky","stars","aurora"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 uv) {\n    const highp float a = 12.9898;\n    const highp float b = 78.233;\n    const highp float c = 43758.5453;\n    highp float dt = dot(uv, vec2(a, b));\n    highp float sn = mod(dt, 3.1415);\n    return fract(sin(sn) * c);\n}\n\nvoid draw_stars(inout vec4 color, vec2 uv) {\n    float t = sin(iTime * 2.0 * rand(-uv)) * 0.5 + 0.5;\n    //color += step(0.99, stars) * t;\n    color += smoothstep(0.975, 1.0, rand(uv)) * t;\n}\n\n#define nsin(x) (sin(x) * 0.5 + 0.5)\n\nvoid draw_auroras(inout vec4 color, vec2 uv) {\n    const vec4 aurora_color_a = vec4(0.0, 1.2, 0.5, 1.0);\n    const vec4 aurora_color_b = vec4(0.0, 0.4, 0.6, 1.0);\n    \n    float t = nsin(-iTime + uv.x * 100.0) * 0.075 + nsin(iTime + uv.x * distance(uv.x, 0.5) * 100.0) * 0.1 - 0.5;\n    t = 1.0 - smoothstep(uv.y - 4.0, uv.y * 2.0, t);\n    \n    vec4 final_color = mix(aurora_color_a, aurora_color_b, clamp(1.0 - uv.y * t, 0.0, 1.0));\n    final_color += final_color * final_color;\n    color += final_color * t * (t + 0.5) * 0.75;\n}\n\nvoid mainImage(out vec4 color, vec2 coord) {\n    vec2 ps = vec2(1.0) / iResolution.xy;\n    vec2 uv = coord * ps;\n    color = vec4(0.0);\n    \n    draw_stars(color, uv);\n    draw_auroras(color, uv);\n}\n","name":"Image","description":"","type":"image"}]}