{"ver":"0.1","info":{"id":"4flSR4","date":"1705080936","viewed":64,"name":"ini78Y_ball","username":"alesteba","description":"interpolant","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["interpolant"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat circle(vec2 st, vec2 center, float radius) {\n    return smoothstep(1., 1.-0.05, distance(st, center) / radius);\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n\nfloat noise (in vec2 st) {\n\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm ( in vec2 _st) {\n\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    \n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n                    \n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n    \n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    \n    return v;\n}\n\nfloat rand(float x)\n{\n    return fract(sin(x)*1.0);\n}\n\n// Basic noise\n\nfloat bnoise( in float x )\n{\n    float i = floor(x);\n    float f = fract(x);\n    float s = sign(fract(x/2.0)-0.5);\n    \n    // smoothstep -> hermite interpolation:\n    \n    return mix(rand(i), rand(i + 1.0), smoothstep(0.,1.,f));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n\n    vec2 st = (2.*fragCoord.xy - iResolution.xy)/iResolution.y;\n\n    vec3 color = vec3(0.0);\n    \n    vec2 q = vec2(0.);\n    \n    q.x = fbm( st + 0.00*iTime);\n    q.y = fbm( st + vec2(1.0));\n    \n    vec2 r = vec2(0.);\n    \n    r.x = fbm( st + 0.75*q + vec2(1.7,9.2)+ 0.15*iTime );\n    r.y = fbm( st + 0.55*q + vec2(8.3,2.8)+ 0.126*iTime);\n\n    float f = fbm(st+r);\n\n    color = mix(vec3(0.25,0.619608,0.8),\n                vec3(0.1,0.78,0.98),\n                clamp((f)*1.0,0.0,1.0));\n                \n    color = mix(color,\n                vec3(0,0.25,0.164706),\n                clamp(length(q),0.0,1.0));\n                 \n    float r1 = 0.75,\n        a = atan(st.y, st.x),\n        noiseA = a + iTime;\n    \n    vec2 nPos = vec2(cos(noiseA), sin(noiseA));\n    \n    float n = bnoise(nPos.x);\n    \n    float n2 = bnoise(nPos.x + iTime);\n    \n    r1 += n2*.025;\n    \n    float shape = circle(st,vec2(0.), r1);\n    \n    vec3 fbmColor = (f*f*f+.6*f*f+.5*f)*color;\n\n    color = mix(vec3(0.9), color,shape);\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}