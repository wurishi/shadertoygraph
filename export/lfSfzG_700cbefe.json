{"ver":"0.1","info":{"id":"lfSfzG","date":"1725077198","viewed":26,"name":"Blindsight in Slime","username":"DoctorBirdy","description":"By Haiku","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["eyes","green","slime"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Original Shader by Haiku\n#define PI 3.14159265359\n\nvec3 col1 = vec3(0.2, 0.8, 0.3);  // Bright green\nvec3 col2 = vec3(0.1, 0.5, 0.2);  // Dark green\nvec3 col3 = vec3(0.9, 1.0, 0.4);  // Yellow-green\n\nfloat disk(vec2 r, vec2 center, float radius) {\n    return 1.0 - smoothstep(radius - 0.008, radius + 0.008, length(r - center));\n}\n\nfloat drip(vec2 uv, float speed, float frequency, float amplitude) {\n    return amplitude * sin(uv.x * frequency + iTime * speed) * smoothstep(0.0, 0.5, uv.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float t = iTime * 1.5;\n    vec2 r = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n    // Wavy distortion\n    r += vec2(\n        drip(r, 0.5, 5.0, 0.05),\n        drip(r, 0.7, 3.0, 0.05)\n    );\n    \n    // Psychedelic warping\n    r *= 1.0 + 0.1 * sin(r.x * 5. + t) + 0.1 * sin(r.y * 3. + t);\n    r *= 1.0 + 0.3 * length(r);\n    \n    float side = 0.4;\n    vec2 r2 = mod(r, side);\n    vec2 r3 = r2 - side / 2.;\n    float i = floor(r.x / side) + 2.;\n    float j = floor(r.y / side) + 4.;\n    float ii = r.x / side + 2.;\n    float jj = r.y / side + 4.;\n\n    vec3 pix = col2; // Start with dark green background\n    \n    float rad, disks;\n    \n    // Main circles\n    rad = 0.15 + 0.05 * sin(t + ii * jj);\n    disks = disk(r3, vec2(0., 0.), rad);\n    pix = mix(pix, col1, disks);\n    \n    // Dripping effect\n    float drip_amount = drip(r, 1.0, 10.0, 0.2);\n    pix = mix(pix, col3, smoothstep(0.1, 0.2, drip_amount));\n    \n    // Moving circles\n    float speed = 1.5;\n    float tt = t * speed + 0.1 * i + 0.08 * j;\n    float stopEveryAngle = PI / 2.0;\n    float stopRatio = 0.7;\n    float t1 = (floor(tt) + smoothstep(0.0, 1.0 - stopRatio, fract(tt))) * stopEveryAngle;\n    \n    float x = -0.07 * cos(t1 + i);\n    float y = 0.055 * (sin(t1 + j) + cos(t1 + i));\n    rad = 0.1 + 0.05 * sin(t + i + j);\n    disks = disk(r3, vec2(x, y), rad);\n    pix = mix(pix, col3, disks);\n    \n    // Pulsating overlay\n    rad = 0.2 + 0.05 * sin(t * (1.0 + 0.01 * i));\n    disks = disk(r3, vec2(0., 0.), rad);\n    pix += 0.2 * col1 * disks * sin(t + i * j + i);\n    \n    // Edge darkening and color shifting\n    float edge = smoothstep(0.3, 2.0, length(r));\n    pix = mix(pix, col2, edge);\n    pix += 0.1 * sin(r.x * 10. + t) * sin(r.y * 10. + t);\n    \n    // Color pulsing\n    pix *= 1.0 + 0.1 * sin(t);\n    \n    fragColor = vec4(pix, 1.0);\n}","name":"Image","description":"","type":"image"}]}