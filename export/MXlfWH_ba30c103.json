{"ver":"0.1","info":{"id":"MXlfWH","date":"1728346142","viewed":39,"name":"Fork Numerator  Thewseph 040","username":"Thewseph","description":"Numerator is in the shape, denominator is in the color distribution, which is reversed if you comment out line 17 (buffer a).  See specific fraction using line 16.  I've made a bunch of these already but I really like how the colors flow in this one.","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["blur","spiral","radial","buffer","point","fraction"],"hasliked":0,"parentid":"4X2cDd","parentname":"Numerator / denominator spiral"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// blend\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec4 a = texture(iChannel0, U/iResolution.xy)*.8,\n         b = texture(iChannel1, U/iResolution.xy)*.1;\n    C = a+b - a*b;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 C, in vec2 U)\n{\n    vec3 c = vec3(0), k;\n    vec2 R = iResolution.xy, u, w, p, v;\n    \n    R -= mod(R, 4.);  // prevent seam from polar transform\n    u = (U - R/2.)/R.y;\n    \n    float s = 2e3,  // scale\n          f = 2.5,  // frame scale (warp radius)\n          l = 25.,  // detail loop\n          t = 1.2 + iTime/1800.,\n          n = 5. - 10.*iMouse.y/R.y,  // exponent\n          i = 0., x, a;\n    \n    //t = 3./4.;   // displays denominator\n    t = 1./t;  // flip to numerator\n    \n    u *= pow(s, n)*f;  // apply zoom\n    u = vec2( atan(u.y, u.x)/6.2832, length(u) );  // polar\n    u.y = pow(u.y, 1./n);  // stretch y (radial)\n    \n    w = fwidth(u)*max(R.y/5e2, .5);  // point size\n    a = t*s-.25;  // counter rotation\n    \n    for (; i++<l;)  // detail loop\n        p.y = round((u.y-i)/l)*l+i,  // segment y & skip rows\n        x = p.y*t-a,                 // x speed (angular)\n        k = cos(radians(vec3(-20, 0, 20)) + p.y/t*6.2832)*.5+.5,  // color\n        p.x = round(u.x-x)+x,        // segment x\n        c = max(c, exp(-length((u-p)/w)) * k);  // add points to scene\n    \n    u = U/R;\n    v = fwidth(u)/abs(u-round(u));  // vignette\n    c -= max(v.x, v.y);  // darken edges to prevent inner radial blur artifacts\n    \n    C = vec4(max(c, 0.), 1);  // export without negatives\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// radial blur\n\n// jitter method from https://www.shadertoy.com/view/MXlyW8\nfloat hash12(vec2 u)\n{\n\tvec3 p = fract(u.xyx * .1031);\n    p += dot(p, p.yzx + 33.33);\n    return fract((p.x + p.y) * p.z);\n}\n\n#define H(a) (cos(radians(vec3(0, 60, 120))+(a)*6.2832)*.5+.5)  // hue\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 R = iResolution.xy,\n         u = U/R;\n    \n    vec3 c = texture(iChannel0, u).rgb * 1.5;\n    \n    float l = 25.,  // scale loop\n          s = .5,   // step size\n          j = hash12(U + iTime),  // jitter\n          p = -sign(iMouse.y/R.y - .5),  // polarity\n          i = 0., v = i, d;\n    \n    for (i; i<l; i++)\n        d = 1.-i/l,\n        c = max(c, texture(iChannel0, mix(u, vec2(.5), (v+j)/l*p)).rgb * d * H(iTime/12. - d)),\n        v += s;\n    \n    C = vec4(tanh(c + c*c*2.), 1);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// frame blur (TAA)\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    C = texture(iChannel1, U/iResolution.xy)*.9 + texture(iChannel0, U/iResolution.xy);\n}","name":"Buffer C","description":"","type":"buffer"}]}