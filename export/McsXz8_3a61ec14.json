{"ver":"0.1","info":{"id":"McsXz8","date":"1704948145","viewed":387,"name":"Dodeca, icosa & stellations","username":"ChunderFPV","description":"Left:   stella icosa to dodeca\nRight: stella dodeca to icosa\nP key: ortho/perspective toggle","likes":37,"published":1,"flags":16,"usePreview":0,"tags":["wireframe","lines","icosahedron","dodecahedron","stellation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// wireframe code from FabriceNeyret2: https://www.shadertoy.com/view/XfS3DK\n\n#define O(x,a,b) smoothstep(0., 1., cos(x*6.2832)*.5+.5)*(a-b)+b  // oscillate between a & b\n#define A(v) mat2(cos((v*3.1416) + vec4(0, -1.5708, 1.5708, 0)))  // rotate\n#define s(p1, p2) c += .02/abs(L( u, K(p1, v, h), K(p2, v, h) )+.01)*k;  // segment\n\n// line\nfloat L(vec2 p, vec3 A, vec3 B)\n{\n    vec2 a = A.xy, \n         b = B.xy - a;\n         p -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n    return length(p - b*h) + .01*mix(A.z, B.z, h);\n}\n\n// cam\nvec3 K(vec3 p, mat2 v, mat2 h)\n{\n    p.zy *= v; // pitch\n    p.zx *= h; // yaw\n    if (texelFetch(iChannel0, ivec2(80, 2), 0).x < 1.) // P key\n        p *= 6. / (p.z+6.); // perspective view\n    return p;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 R = iResolution.xy,\n         u = (U+U-R)/R.y*2.,\n         m = (iMouse.xy*2.-R)/R.y;\n    \n    float t = iTime/60.,\n          o = t*6.,\n          j = (u.x > 0.) ? 1.: -1.; // screen side\n    \n    if (iMouse.z < 1.) // not clicking\n        m = vec2(sin(t*6.2832)*2., sin(t*6.2832*2.)); // fig-8 movement\n    \n    mat2 v = A(m.y), // pitch\n         h = A(m.x); // yaw\n    \n    vec3 c = vec3(0), p, \n         k = vec3(2,1,4)/40. + .05;\n    \n    u.x -= j + j*.7; // split screen\n    \n    if (j < 0.)\n    {\n        k = k.brg; // shift color\n        //p = vec3(1, .618, .382);  // stellated icosahedron\n        //p = vec3(.382, -.618, 1); // dodecahedron\n        \n        // stella icosa to dodeca\n        p = vec3(\n            O(o,   1.,  .382), \n            O(o, .618, -.618), \n            O(o, .382,    1.));\n        s( vec3(-p.z,  p.x,    0), vec3(-p.z, -p.x,    0) )\n        s( vec3(-p.z,  p.x,    0), vec3( p.y, -p.y, -p.y) )\n        s( vec3(-p.z,  p.x,    0), vec3( p.y, -p.y,  p.y) )\n        s( vec3(-p.z, -p.x,    0), vec3( p.y,  p.y, -p.y) )\n        s( vec3(-p.z, -p.x,    0), vec3( p.y,  p.y,  p.y) )\n        s( vec3( p.z,  p.x,    0), vec3( p.z, -p.x,    0) )\n        s( vec3( p.z,  p.x,    0), vec3(-p.y, -p.y,  p.y) )\n        s( vec3( p.z,  p.x,    0), vec3(-p.y, -p.y, -p.y) )\n        s( vec3( p.z, -p.x,    0), vec3(-p.y,  p.y,  p.y) )\n        s( vec3( p.z, -p.x,    0), vec3(-p.y,  p.y, -p.y) )\n        s( vec3( p.x,    0, -p.z), vec3(-p.x,    0, -p.z) )\n        s( vec3( p.x,    0, -p.z), vec3(-p.y,  p.y,  p.y) )\n        s( vec3( p.x,    0, -p.z), vec3(-p.y, -p.y,  p.y) )\n        s( vec3(-p.x,    0, -p.z), vec3( p.y, -p.y,  p.y) )\n        s( vec3(-p.x,    0, -p.z), vec3( p.y,  p.y,  p.y) )\n        s( vec3( p.x,    0,  p.z), vec3(-p.x,    0,  p.z) )\n        s( vec3( p.x,    0,  p.z), vec3(-p.y,  p.y, -p.y) )\n        s( vec3( p.x,    0,  p.z), vec3(-p.y, -p.y, -p.y) )\n        s( vec3(-p.x,    0,  p.z), vec3( p.y,  p.y, -p.y) )\n        s( vec3(-p.x,    0,  p.z), vec3( p.y, -p.y, -p.y) )\n        s( vec3(   0,  p.z,  p.x), vec3(   0,  p.z, -p.x) )\n        s( vec3(   0,  p.z,  p.x), vec3( p.y, -p.y, -p.y) )\n        s( vec3(   0,  p.z,  p.x), vec3(-p.y, -p.y, -p.y) )\n        s( vec3(   0,  p.z, -p.x), vec3( p.y, -p.y,  p.y) )\n        s( vec3(   0,  p.z, -p.x), vec3(-p.y, -p.y,  p.y) )\n        s( vec3(   0, -p.z,  p.x), vec3(   0, -p.z, -p.x) )\n        s( vec3(   0, -p.z,  p.x), vec3( p.y,  p.y, -p.y) )\n        s( vec3(   0, -p.z,  p.x), vec3(-p.y,  p.y, -p.y) )\n        s( vec3(   0, -p.z, -p.x), vec3(-p.y,  p.y,  p.y) )\n        s( vec3(   0, -p.z, -p.x), vec3( p.y,  p.y,  p.y) )\n    }\n    else\n    {\n        //p = vec3(0, .618, 1);  // stellated dodecahedron\n        //p = vec3(0, 1, -.618); // icosahedron\n        \n        // stella dodeca to icosa\n        p = vec3(0, O(o, .618, 1.), O(o, 1., -.618));\n        s( vec3(-p.y,  p.z,    0), vec3(   0, -p.y, -p.z) )\n        s( vec3(-p.y,  p.z,    0), vec3(   0, -p.y,  p.z) )\n        s( vec3(-p.y,  p.z,    0), vec3( p.z,    0, -p.y) )\n        s( vec3(-p.y,  p.z,    0), vec3( p.z,    0,  p.y) )\n        s( vec3( p.y,  p.z,    0), vec3( p.y, -p.z,    0) )\n        s( vec3( p.y,  p.z,    0), vec3(   0, -p.y, -p.z) )\n        s( vec3( p.y,  p.z,    0), vec3(   0, -p.y,  p.z) )\n        s( vec3( p.y,  p.z,    0), vec3(-p.z,    0, -p.y) )\n        s( vec3( p.y,  p.z,    0), vec3(-p.z,    0,  p.y) )\n        s( vec3(-p.y, -p.z,    0), vec3(-p.y,  p.z,    0) )\n        s( vec3(-p.y, -p.z,    0), vec3(   0,  p.y, -p.z) )\n        s( vec3(-p.y, -p.z,    0), vec3(   0,  p.y,  p.z) )\n        s( vec3(-p.y, -p.z,    0), vec3( p.z,    0, -p.y) )\n        s( vec3(-p.y, -p.z,    0), vec3( p.z,    0,  p.y) )\n        s( vec3( p.y, -p.z,    0), vec3(   0,  p.y, -p.z) )\n        s( vec3( p.y, -p.z,    0), vec3(   0,  p.y,  p.z) )\n        s( vec3( p.y, -p.z,    0), vec3(-p.z,    0, -p.y) )\n        s( vec3( p.y, -p.z,    0), vec3(-p.z,    0,  p.y) )\n        s( vec3(   0,  p.y, -p.z), vec3(   0,  p.y,  p.z) )\n        s( vec3(   0,  p.y, -p.z), vec3( p.z,    0,  p.y) )\n        s( vec3(   0,  p.y, -p.z), vec3(-p.z,    0,  p.y) )\n        s( vec3(   0, -p.y, -p.z), vec3(   0, -p.y,  p.z) )\n        s( vec3(   0, -p.y, -p.z), vec3( p.z,    0,  p.y) )\n        s( vec3(   0, -p.y, -p.z), vec3(-p.z,    0,  p.y) )\n        s( vec3(-p.z,    0, -p.y), vec3( p.z,    0, -p.y) )\n        s( vec3(-p.z,    0,  p.y), vec3( p.z,    0,  p.y) )\n        s( vec3(-p.z,    0, -p.y), vec3(   0,  p.y,  p.z) )\n        s( vec3(-p.z,    0, -p.y), vec3(   0, -p.y,  p.z) )\n        s( vec3( p.z,    0, -p.y), vec3(   0,  p.y,  p.z) )\n        s( vec3( p.z,    0, -p.y), vec3(   0, -p.y,  p.z) )\n    }\n    \n    C = vec4(c + c*c, 1);\n}","name":"Image","description":"","type":"image"}]}