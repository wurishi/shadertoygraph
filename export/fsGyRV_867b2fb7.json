{"ver":"0.1","info":{"id":"fsGyRV","date":"1655242380","viewed":117,"name":"Particles Voronoi","username":"nikitakrutoy","description":"particles","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHOW_PARTICLES 0\n\nvec3 rand3( vec2 p ) { return textureLod( iChannel2, (p*8.0+0.5)/256.0, 0.0 ).xyw; }\n\nfloat rand2(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nuint mod_i32( int i32_bas , int i32_div ){\n\n    float   flt_res =  mod( float(i32_bas), float(i32_div));\n    uint    i32_res = uint( flt_res );\n    return( i32_res );\n}\n\nvec4 randomColor(int i) {\n    float r = rand2(vec2(i, mod_i32(i, 7))) * 0.3;\n    float g = rand2(vec2(mod_i32(i, 19), i)) * 0.8;\n    float b = rand2(vec2(mod_i32(i, 6), mod_i32(i, 13))) * 0.8;\n    return vec4(r, g, b, 1.0f);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float minDist = 1000.0f;\n    int minDistParticle = -1;\n    \n    float border = 0.3;\n    float border1 = 0.15;\n    #if SHOW_PARTICLES\n    bool doVoronoi = uv.x > border && uv.x < 1.0f - border && uv.y > border && uv.y < 1.0f - border;\n    doVoronoi = doVoronoi || uv.x < border1 || uv.x > 1.0f - border1 || uv.y < border1 || uv.y > 1.0f - border1;\n    #else\n    bool doVoronoi = true;\n    #endif\n    \n    for (int i = 0; i < 800; ++i) {\n        float radius = 0.01;\n        vec4 particleData = texelFetch(iChannel0, ivec2(i, 0), 0);\n        if (particleData.w == 0.0) {\n            continue;\n        }\n        vec2 pos = decode_vec2(particleData.x);\n        float dist = length(pos - uv);\n        if (dist < minDist) {\n            minDist = dist;\n            minDistParticle = i;\n        }\n        if (dist < radius)\n            fragColor = randomColor(i);\n    }\n    if (doVoronoi) {\n        fragColor = randomColor(minDistParticle);\n    }\n   \n    //fragColor = vec4(1.0f - clamp( 0.01, 1.0, minDist));\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 particleData = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    vec2 pos = decode_vec2(particleData.x);\n    vec2 vel = decode_vec2(particleData.y);\n    if (pos.y < 0.0 || pos.y > 1.0) {\n        vel.y = -vel.y;\n    }\n    if (pos.x < 0.0 || pos.x > 1.0) {\n        vel.x = -vel.x;\n    }\n    \n    pos += vel * iTimeDelta * 0.2;\n    // vel.y -= iTimeDelta * 2.0;\n    particleData.x = encode_vec2(pos);\n    particleData.y = encode_vec2(vel);\n    uint bufferBegin = uint(texelFetch(iChannel0, ivec2(0, 0), 0));\n    uint bufferEnd = uint(texelFetch(iChannel0, ivec2(1, 0), 0));\n    uint idx = uint(fragCoord.x);\n    bool commonFill = idx >= bufferBegin && idx < bufferEnd;\n    bool overflowFill = bufferBegin > bufferEnd && (idx >= bufferBegin || idx < bufferEnd);\n    if (idx >= bufferBegin && idx <= bufferEnd) {\n        particleData = vec4(0, 0, 0, 1);\n        particleData.x = encode_vec2(iMouse.xy / iResolution.xy);\n        particleData.y = encode_vec2(vec2(random(vec2(fragCoord.x, 5.0)), random(fragCoord)) * 2.0 - 1.0);\n        //particleData = vec4(1.0f);\n    }\n    fragColor = particleData;\n    // fragColor = vec4(sin(iTime * 2.0 + fragCoord.x) * 0.1 + 0.5, cos(iTime * 2.0 + fragCoord.x) * 0.1 + 0.5, 1.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uvec2 coords = uvec2(fragCoord);\n    if (coords.y == 0u && coords.x < 2u) {\n        if (iMouse.z > 0.0) {\n            float spawnCount = 5.0;\n            fragColor.x = float(int(texelFetch(iChannel0, ivec2(0, 0), 0).x + spawnCount) % 800);\n        } else {\n            fragColor.x = texelFetch(iChannel0, ivec2(1, 0), 0).x;\n        }\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float QUANT_COUNT = 65536.0 - 1.0;\n\nfloat encode_vec2(vec2 v) {\n    v = clamp(v, vec2(-3.0), vec2(3.0));\n    v /= 3.0;\n    v *= 0.5;\n    v += 0.5;\n    v *= QUANT_COUNT;\n    return uintBitsToFloat(uint(v.x) << 16 | uint(v.y));\n}\n\nvec2 decode_vec2(float vi) {\n    vec2 v = vec2(floatBitsToUint(vi) >> 16u, floatBitsToUint(vi) & 0xFFFFu);\n    v /= QUANT_COUNT;\n    v -= 0.5;\n    v *= 2.0;\n    v *= 3.0;\n    return v;\n}\n\nfloat random(vec2 uv)\n{\n    return fract(sin(dot(uv,vec2(12.9898,78.233)))*43758.5453123);\n}\n\n","name":"Common","description":"","type":"common"}]}