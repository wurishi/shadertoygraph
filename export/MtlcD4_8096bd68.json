{"ver":"0.1","info":{"id":"MtlcD4","date":"1506817298","viewed":390,"name":"Raymarch fake light","username":"FranciscoGarcia","description":"Fake light representation, based on the WbGl Paris 2015, i played with some primitive shapes.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","fakeligth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPS 0.001\nvec2 rot(in vec2 pos, float angle) {\n\tfloat c = cos(angle);\n    float s = sin(angle);\n    return mat2(c, -s, s, c) * pos;\n}\n\nfloat plane(in vec3 p) {\n\treturn p.y;\n}\n\nfloat sph(in vec3 p, float rad) {\n    p -= vec3(-4.0, 2.3, 8.0);\n    p.xy = rot(p.xy, iTime);\n    p.xz = rot(p.xz, iTime);\n\treturn length(p) - rad;\n}\n\nfloat box(in vec3 p,in vec3 dim) {\n    p -= vec3(-3.5, 1.3, -2.0);\n    p.yz = rot(p.yz, iTime);\n    p.xy = rot(p.xy, iTime);\n\tfloat d3 = length(max(abs(p)-dim, 0.0)) ;\n    return d3;\n}\n\nfloat torus(in vec3 pos, in vec2 t) {\n    pos -= vec3(3.0, 1.0, 0.3);\n    pos.yz = rot(pos.yz, 0.1*iTime);\n    pos.xy = rot(pos.xy, 0.5*iTime);\n\tvec2 q = vec2(length(pos.xz) - t.x, pos.y);\n    return length(q) - t.y;\n}\n\nfloat map(in vec3 pos) {\n   float d1 = min(plane(pos), sph(pos, 2.0)); \n   float du1 = min(d1,  box(pos, vec3(0.5)));\n   float du2 = min(du1,torus(pos, vec2(1.0, 0.5)));\n   return du2;\n}\n\nvec3 material(in vec3 p) {\n\tp *= 0.6;\n    float f = smoothstep(0.5, 0.51, fract(p.x - sin(p.z) + cos(p.z)));\n    return f*vec3(1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv = 2.0*uv -1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\tvec3 ro = vec3(0.0 + 0.8*sin(iTime), 3.0 + 0.5*cos(iTime), -6.0);\n\tvec3 rd = normalize(vec3(uv, 1.0));\n\tvec3 col = vec3(0.0);\n    float t = 0.0;\n    \n\tfor(int i=0; i<100; i++){\n        vec3 pos = ro + t*rd;\n\t\tfloat d = map(pos);\n\t\tif( d < EPS ) {\n            float ligthD = sph(pos, 1.0);\n            float ligthT = torus(pos, vec2(1.5, 0.8));\n            float ligthB = box(pos, vec3(0.9));\n\t\t\tcol  = 2.4 / (ligthD*ligthD)*vec3(1.6,0.7,0.0)*material(pos);\n            col += 0.4 / (ligthT*ligthT)*vec3(1.6,0.0,1.0)*material(pos);\n            col += 0.4 / (ligthB*ligthB)*vec3(1.0)*material(pos);\n\t\t\tbreak;\n\t\t}\n\t\tro += d*rd;\n\t}\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}