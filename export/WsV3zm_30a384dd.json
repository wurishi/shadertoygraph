{"ver":"0.1","info":{"id":"WsV3zm","date":"1569931226","viewed":603,"name":"Test Raindrops","username":"LucasWilson","description":"ripples test","likes":6,"published":1,"flags":96,"usePreview":1,"tags":["rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Mlf3Wj","filepath":"https://soundcloud.com/rob-beckwith/soft-rain-loop","previewfilepath":"https://soundcloud.com/rob-beckwith/soft-rain-loop","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 displacement = texture(iChannel0, uv).xyz;\n    vec3 col = texture(iChannel1, uv - displacement.xy*displacement.z).xyz;\n    //vec3 col = vec3(displacement.z);\n\t//vec3 col = texture(iChannel2, uv).xyz;\n    \n    //col += texture(iChannel3, vec2(uv.x,0)).x;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define pi 3.1415926535\n#define e 2.718281828\n\nfloat r21(vec2 p) {\n\treturn fract(sin(dot(p.xy ,vec2(12.9898,78.233))) * 4558.5453);\n}\n\nvec2 r22(vec2 p) {\n    float f = r21(p);\n    return (fract(vec2( f, floor(f)+fract(fract(f)*100.) ))-.5);\n}\n\nfloat powx = (e / (.1 * sqrt(2.*pi)));\n\n\nfloat NormalCurve(float Mean, float Dist) {\n    float sigmoid = .1;\n    float z = (3.3-Mean) * .005 * pow(powx, -1.*( pow(Dist-Mean,2.) / (2. * sigmoid * sigmoid)  ) );\n    \n    return z;\n}\n\nvec3 Ripple(float Mean, float Dist, vec2 vec) {\n    return vec3(normalize(vec), NormalCurve(Mean*3., Dist) - NormalCurve(Mean*3.1, Dist+.1) + NormalCurve(Mean*3.,Dist+.5)*.25 - NormalCurve(Mean*3., Dist+.7)*.25);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float resFactor  = iResolution.y/iResolution.x;\n    float dropCount = 90.;\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    vec3 col;\n    \n    for (float i=1.; i<=dropCount; i+=1.) {\n        float t = iTime + i/dropCount;\n        vec2 p = r22(vec2(i, floor(t)));\n        //col += smoothstep(.01,.005,distance(uv,p));\n        \n        col += Ripple(fract(t), length( (uv-p)*vec2(1./resFactor,1.))*30., uv-p);\n    }\n    \n    //col  += FuckMyShitUp(fract(iTime/10.), distance(uv,vec2(0.))*5., (uv-vec2(0.)));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}