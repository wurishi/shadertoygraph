{"ver":"0.1","info":{"id":"4XBBW3","date":"1729967999","viewed":31,"name":"simple digit shader ","username":"Kolya142","description":".","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["simpletext"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float digit(vec2 uv, int digit, vec2 p) { \n    uv -= p;\n    if (uv.x > 1. || uv.y > 1. || uv.x < .0 || uv.y < .0) return .0;\n    int char = 0xc0+int(mod(float(digit), 10.));\n    uv /= 16.;\n    float d = mod(float(char)/16., 1.);\n    uv.x += d;\n    uv.y += (float(char)/16.-d)/16.;\n    return texture(iChannel0, uv).r;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy, m = iMouse.xy/iResolution.xy;\n    uv *= 10.;\n    float t = iTime * 100.;\n    vec3 col = vec3(digit(uv, int(t/1000.), vec2(0)));\n    col += vec3(digit(uv, int(t/100.), vec2(1., 0)));\n    col += vec3(digit(uv, int(t/10.), vec2(2., 0)));\n    col += vec3(digit(uv, int(t), vec2(3., 0)));\n    /*\n    if (uv1.x < .4 && uv1.y < .4) col += texture(iChannel0, uv1/.4).r;\n    if (distance(uv1/.4, uv+vec2(.02, .02)) < .01) col += .9;\n    */\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}