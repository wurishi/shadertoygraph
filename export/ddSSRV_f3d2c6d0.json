{"ver":"0.1","info":{"id":"ddSSRV","date":"1670523779","viewed":55,"name":"gold filter thing","username":"ianertson","description":"gold filter thing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GOLD 1.618034005\n\n\nfloat gold(float x) {\n    float diff = abs(x - GOLD);\n    \n    return clamp(1.0 - diff / GOLD, 0.0, 1.0);\n}\n\nfloat gold_r(float x, float y) {\n    float ma = max(x, y);\n    float mi = min(x, y);\n    float r = (ma + mi) / ma;  //min(x, y) / max(x, y);\n    return gold(r);\n}\n\nfloat gold_r(vec3 a, vec3 b) {\n    float gx = gold_r(a.x, b.x);\n    float gy = gold_r(a.y, b.y);\n    float gz = gold_r(a.z, b.z);\n    \n    return (gx + gy + gz) / 3.0;\n}\n\nvec3 gold_color(vec3 col, sampler2D tex, vec2 coord) {\n\n    vec3 left = texture(tex, (coord + vec2(-1, 0)) / iResolution.xy).rgb;\n    vec3 right = texture(tex, (coord + vec2(1, 0))  / iResolution.xy).rgb;\n    vec3 up = texture(tex, (coord + vec2(0, 1))  / iResolution.xy).rgb;\n    vec3 down = texture(tex, (coord + vec2(0, -1))  / iResolution.xy).rgb;\n    \n    vec3 avg = (col + left + right + up + down) / 5.0;\n\n    float gleft = gold_r(col, left);\n    float gright = gold_r(col, right);\n    float gup = gold_r(col, up);\n    float gdown = gold_r(col, down);\n\n\n    vec3 G = pow(vec3(gleft + gright + gup + gdown) / 4.0, vec3(6.1));\n    \n    return max(avg, G) + min(avg, G) / max(avg, G);\n\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n    vec3 gold_col = gold_color(col, iChannel0, fragCoord).rgb;\n    \n    col = gold_col;\n  \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}