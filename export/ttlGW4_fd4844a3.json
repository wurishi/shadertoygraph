{"ver":"0.1","info":{"id":"ttlGW4","date":"1556982334","viewed":189,"name":"Magnetic Atome","username":"Gijlf","description":"rework of a early shader, wip","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["geometryfold"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat box(vec3 p, vec3 b) {\n\tvec3 d = abs(p)-b;\n    return max(d.x,max(d.y,d.z));//+length(max(vec3(0.),d));\n}\n\nfloat portal(vec3 p, float a) {\n    p = abs(p);\n    p.x -= 2.5;\n    p.xy *= rot(a);\n    return box(p, vec3(.25,4.,.25));\n}\n\nfloat map(vec3 p) {\n    vec3 sp = p;\n    float pl = p.y + 0.5;\n \tfloat s = 7.;\n    float r = length(p)*.07;//*(1.0+.5*sin(cos(iTime*.8)));\n    float rr = pow(r, 2.5 + cos(sin(iTime)) * 0.4);\n    for(int i=0; i<3; i++) {\n        p.xz *= rot(float(i)*.7);\n        p.yz *= rot(float(i)*.3*iTime*.3);\n        p = abs(p) - s * rr;\n        s *= .65;\n    }\n    float b = portal(p, .8*rr)/(r*1.6);\n    float c = length(p)-.4/r * (0.2 + abs(sin(iTime*4.0)) * 0.8);\n    return min(c, b);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 col = vec3(0);\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    float time = iTime;\n    vec3 s = vec3(0.,0.,-60.), t = vec3(0);\n    vec3 cz = normalize(t-s);\n    vec3 cx = normalize(cross(cz, vec3(0,1,0)));\n    vec3 cy = normalize(cross(cz, cx));\n    vec3 rd = normalize(uv.x * cx + uv.y * cy + cz);\n\n    float td = 0.0;\n    const float md = 100.0;\n    int i = 0; for(; i<100; i++) {\n        float d = map(s + rd * td);\n        if (d < 1e-3 || td >= md) break;\n        td += d;\n    }\n    td = min(td, md);\n    vec3 p = s + rd * td;\n    float fog = 1.0 - (td/md);\n    vec3 ld = normalize(vec3(1,0,1) * sin(time*2.0));\n    const vec2 o = vec2(1e-3, 0);\n    vec3 n = normalize(map(p)-vec3(map(p-o.xyy),map(p-o.yxy),map(p-o.yyx)));\n    float lum = dot(n,ld); lum = mix(0.5+lum*0.5, max(0.0, lum), 0.6);    \n    \n    col += (fog+lum*0.2);\n    \n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}