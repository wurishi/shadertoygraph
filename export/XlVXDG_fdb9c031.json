{"ver":"0.1","info":{"id":"XlVXDG","date":"1485726641","viewed":192,"name":"CGOL","username":"Yevano","description":"Conway's game of life implemented in shadertoy. ","likes":5,"published":1,"flags":48,"usePreview":0,"tags":["buffer","gameoflife","cellularautomaton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 back = texture(iChannel0, uv);\n    float grad = 0.0;\n    if(back.r == 1.0) {\n        grad = 1.0;\n    } else {\n        grad = back.g;\n    }\n\tfragColor = vec4(0.0, grad, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 epsx = vec2(1.0/iResolution.x, 0.0);\n    vec2 epsy = vec2(0.0, 1.0/iResolution.y);\n    \n    vec4 self = texture(iChannel0, uv);\n    \n    if(iFrame == 0) {\n        fragColor = vec4(rand(uv * iDate.w) > 0.5 ? 1.0 : 0.0, 0.0, 0.0, 1.0);\n    } else {        \n        float state00 = texture(iChannel0, uv - epsx - epsy).r;\n        float state10 = texture(iChannel0, uv        - epsy).r;\n        float state20 = texture(iChannel0, uv + epsx - epsy).r;\n        float state01 = texture(iChannel0, uv - epsx       ).r;\n        float state11 = texture(iChannel0, uv              ).r;\n        float state21 = texture(iChannel0, uv + epsx       ).r;\n        float state02 = texture(iChannel0, uv - epsx + epsy).r;\n        float state12 = texture(iChannel0, uv        + epsy).r;\n        float state22 = texture(iChannel0, uv + epsx + epsy).r;\n        \n        float neighbors = state00 + state10 + state20 + state01\n                        + state21 + state02 + state12 + state22;\n        \n        float nextState = 0.0;\n        \n        if(state11 == 1.0) {\n            if(neighbors < 2.0) {\n                nextState = 0.0;\n            } else if(neighbors < 4.0) {\n                nextState = 1.0;\n            } else {\n                nextState = 0.0;\n            }\n        } else {\n            if(neighbors == 3.0) {\n                nextState = 1.0;\n            }\n        }\n        \n        float time = nextState == 1.0 ? 1.0 : self.g - 0.01;\n        \n        fragColor = vec4(nextState, time, 0.0, 1.0);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}