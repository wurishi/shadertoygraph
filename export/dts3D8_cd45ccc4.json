{"ver":"0.1","info":{"id":"dts3D8","date":"1671766562","viewed":98,"name":"2D SDF Study","username":"Trospy_Study","description":"2D SDF Study\nreference from : https://www.shadertoy.com/view/3ltSW2\n                        https://www.youtube.com/watch?v=BNZtUB7yhX4\n                        https://iquilezles.org/art\nInteract with mouse!!\nBlend Rectangle and circle shape using 2d sdf!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2dsdfstudy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 point, float radius)\n{\n    return length(point) - radius;\n}\n\nfloat rectangle(vec2 point, vec2 offset)\n{\n    vec2 d = abs(point) - offset;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\nfloat smoothMax(float a, float b, float k)\n{\n    return log(exp(k*a) + exp(k*b))/k;\n}\n\nfloat smoothMin(float a, float b , float k)\n{\n    return -smoothMax(-a, -b, k);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv *= 2.0;\n    uv -= 1.0;\n    uv.y *= iResolution.y/iResolution.x;\n    \n    float radius = 0.15;\n    vec2 offset = vec2(0.25,0.25);\n    vec2 c_point = vec2(-1.f,-1.f) + -2.0f*(iMouse.xy - iResolution.xy)/iResolution.xy;\n    vec2 r_point = vec2(0.0,0.0);\n    vec3 col = vec3(0.0,0.0,0.0);\n    \n    float a = circle(uv + c_point, radius);\n    float b = rectangle(uv,offset);\n    //circle term\n    if(a < 0.0f)\n    {    // Time varying pixel color\n       // col += 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    }\n    \n    // rectangel term\n    if(b < 0.0f)\n    {\n         //col += 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    }\n    // Output to screen\n    \n    float c = smoothMin(a,b, 50.f);\n    \n    if(c < 0.0f)\n    {\n        col += 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}