{"ver":"0.1","info":{"id":"lt2GWc","date":"1433276244","viewed":790,"name":"Filter: Inversion","username":"4rknova","description":"A simple inversion filter","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["inversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by Nikos Papadopoulos, 4rknova / 2015\n// WTFPL\n\nvec3 texsample(in vec2 uv)\n{\n    return texture(iChannel0, uv).xyz;\n}\n\nvec3 texfilter(in vec2 uv)\n{\n\treturn 1. - texsample(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y = 1. - uv.y;\n    \n    float m = iMouse.x / iResolution.x;\n    \n    float l = smoothstep(0., 1. / iResolution.y, abs(m - uv.x));\n    \n    vec3 cf = texfilter(uv);\n    vec3 cl = texsample(uv);\n    vec3 cr = (uv.x < m ? cl : cf) * l;\n    \n    fragColor = vec4(cr, 1);\n}","name":"Image","description":"","type":"image"}]}