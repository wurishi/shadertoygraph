{"ver":"0.1","info":{"id":"ltsBzX","date":"1512753454","viewed":186,"name":"Interference orbit","username":"jakerr","description":"Wat.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["interference"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float graph(vec2 center, vec2 coord) {\n    float time = iTime + max(iResolution.x, iResolution.y);\n    float rad = iResolution.x/1.9;\n    vec2 interference = mod(vec2(time), coord);\n    return smoothstep(0.0, 1.0, rad * sin(interference.x * interference.y) - distance(coord, center));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float time = iTime / 8.0;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 grad = vec4(uv, sin(time/4.)/2. + 0.5, 1.0);\n    vec4 color1 = mix(vec4(0.0), grad, graph(iResolution.xy/2.0 + iResolution.xy/2.0*vec2(sin(time), cos(time)), fragCoord));\n\tvec4 color2 = mix(color1, grad, graph(iResolution.xy/2.0 - iResolution.xy/2.0*vec2(sin(time), cos(time)), fragCoord));\n    fragColor = color2;\n}","name":"Image","description":"","type":"image"}]}