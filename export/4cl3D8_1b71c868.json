{"ver":"0.1","info":{"id":"4cl3D8","date":"1703011151","viewed":148,"name":"stars meet in space","username":"nayk","description":"colorful, stars, space, loveandpeace","likes":8,"published":1,"flags":1,"usePreview":0,"tags":["colorful","space","galaxy","stars","loveandpeace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*// https://www.shadertoy.com/view/MdXSzS https://www.shadertoy.com/view/4tyfWy /*originals https://www.shadertoy.com/view/7dVGDd https://www.shadertoy.com/view/lslyRn https://www.shadertoy.com/view/DtGyWh  */\n#define iterations 17\n#define formuparam 0.53\n\n#define volsteps 20\n#define stepsize 0.1\n\n#define zoom   0.800\n#define tile   0.850\n#define speed  0.000\n\n#define brightness 0.0015\n#define darkmatter 0.300\n#define distfading 0.730\n#define saturation 0.850\n#define NUM_PARTICLES 50.\n#define TIME_LOWERING .2\n#define BRIGHTNESS .0004\n\nvec2 Hash12(float t){\n    float x = fract(sin(t*748.32)*367.34);\n    float y = fract(sin((t+x)*623.785)*292.45);\n   \n    return vec2(x,y)-.5;\n}\n\nvec2 Hash12Polar(float t){\n    float a = fract(sin(t*748.31)*367.34)*6.2832;\n    float d = fract(sin((t+a)*623.785)*292.45);\n   \n    return vec2(cos(a),sin(a))*d;\n}\n\n\nvoid mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 ro, in vec3 rd )\n{\n//get coords and direction\nvec3 dir=rd;\nvec3 from=ro;\n\n//volumetric rendering\nfloat s=0.1,fade=1.;\nvec3 v=vec3(0.);\nfor (int r=0; r<volsteps; r++) {\nvec3 p=from+s*dir*.5;\np = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold\nfloat pa,a=pa=0.;\nfor (int i=0; i<iterations; i++) {\np=abs(p)/dot(p,p)-formuparam;\n            p.xy*=mat2(cos(iTime*0.02),sin(iTime*0.02),-sin(iTime*0.02),cos(iTime*0.02));// the magic formula\na+=abs(length(p)-pa); // absolute sum of average change\npa=length(p);\n}\nfloat dm=max(0.,darkmatter-a*a*.001); //dark matter\na*=a*a; // add contrast\nif (r>6) fade*=1.4-dm; // dark matter, don't render near\n//v+=vec3(dm,dm*.5,0.);\nv+=fade;\nv+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance\nfade*=distfading; // distance fading\ns+=stepsize;\n}\nv=mix(vec3(length(v)),v,saturation); //color adjust\nfragColor = vec4(v*.06,1.);\n}\nfloat nice_lovely_beautiful_glory_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//get coords and direction\nvec2 uv=fragCoord.xy/iResolution.xy-.5;\nvec2 uv2=fragCoord.xy/iResolution.xy-.5;\nuv.y*=iResolution.y/iResolution.x;\nvec3 dir=vec3(uv*zoom,1.);\nfloat time=iTime*speed+.25;\n\n  vec2 st = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n\n    vec3 color = vec3(0.);\n    float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(st.xy) + .17)) * 2.2;\nfloat si = sin(t);\nfloat co = cos(t);\n   uv2+=0.1; \n      uv2.x+=0.1*cos(iTime); \n        uv2.y+=0.1*sin(iTime); \nmat2 ma = mat2(co, si, -si, co);\n    st*=ma;\n    for(float j = 0.; j < 3.; j++){\n        for(float i = 0.; i < NUM_PARTICLES; i++){\n\n            float t = 0.1+0.8*cos(iTime*0.1);\n            float bright = mix(BRIGHTNESS, 0.001, smoothstep(0.225, 0., t) );\n            //bright *= abs(sin(t*20.+i));\n            bright *= smoothstep(1., .95, t);\n            vec2 dir = Hash12Polar(i+1.);\n            float dist = distance(st-dir*t, vec2(.0, 0)+(Hash12Polar(j*i)/2.));\n\n            color += vec3(bright/dist*0.1, bright/dist/1.*0.3, bright/dist);\n        }\n    }\n   \nfloat v1, v2, v3;\nv1 = v2 = v3 = 0.0;\n\nfloat s = 0.0;\nfor (int i = 0; i < 90; i++)\n{\nvec3 p = s * vec3(uv, 0.0);\np.xy *= ma;  \n        ;\np += vec3(.22, .3, s - 1.5 - sin(iTime * .13) * .1);\nfor (int i = 0; i < 8; i++) p = abs(p) / dot(p,p) - 0.659;\nv1 += dot(p,p) * .0015 * (1.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\nv2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\nv3 += length(p.xy*10.) * .0003;\ns  += .035;\n}\n\nfloat len = length(uv);\nv1 *= smoothstep(.7, .0, len);\nv2 *= smoothstep(.5, .0, len);\nv3 *= smoothstep(.9, .0, len);\n\nvec3 col = vec3( v3 * (1.5 + sin(iTime * .2) * .4),\n(v1 + v3) * .3,\nv2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3) * .3;\nvec3 from=vec3(1.,.5,0.5);\nfrom+=vec3(time*2.,time,-2.)+col;\n  uv *= 2.0 * ( cos(iTime * 2.0) -2.5);\n   \n    // anim between 0.9 - 1.1\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;    \n\n\n\nmainVR(fragColor, fragCoord, from, dir);\n    fragColor*=vec4(color,1.);\n      fragColor+= vec4(nice_lovely_beautiful_glory_star(uv,anim) * vec3(0.55,0.5,0.55)*0.012, 1.0);\n      fragColor+= vec4(nice_lovely_beautiful_glory_star(uv2,anim) * vec3(0.15,0.1,0.55)*0.112, 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}