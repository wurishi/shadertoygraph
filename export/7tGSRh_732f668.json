{"ver":"0.1","info":{"id":"7tGSRh","date":"1640144791","viewed":95,"name":"Raymarchstudy12","username":"photonic","description":"Raymarchstudy12","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarchstudy12"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 200.0\n\nfloat Sphere(vec3 p, float txt) {\n    return length(p);\n}\n\nfloat map(vec3 p) {\n    p += vec3(0., -2.0, 0.);\n    float txt = texture(iChannel0, p.xy).r * 0.03;\n    float sp = Sphere(p + vec3(sin(iTime - 1.), 0.4,cos(iTime)), txt)  - 0.3;\n    float sphrs = min(sp, sp);\n    for (float i = 0.0;i<20.0;i++) {\n        float sph = Sphere(p + vec3(sin(iTime + i) *4.0,i * 0.4 + 1.0,cos(iTime * i * 0.1)), txt) - fract(i*213.123) * 0.3;\n        sphrs = min(sphrs, sph);\n    }\n\n    return sphrs; \n}\n\nfloat rayMarch(vec3 ro, vec3 rd) {\n    float dO = 0.0;\n    for (float i = 0.0;i<MAX_STEPS;i++) {\n        vec3 p = ro + dO * rd;\n        float dist = map(p);\n        if (dist < 0.0001) break;\n        dO += dist;\n        if (dO > MAX_STEPS) break;\n    \n    }\n    if (dO > 200.0 ) dO = -1.0;\n    return dO;\n}\n\n\nvec3 getNormal(vec3 p) {\n    vec2 e = vec2(0.001, 0.0);\n    return normalize(vec3(map(p+e.xyy)-map(p-e.xyy),\n                          map(p+e.yxy)-map(p-e.yxy),\n                          map(p+e.yyx)-map(p-e.yyx)));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    vec3 ro = vec3(0.0, -2.9, -8.0);\n    vec3 rd = normalize(vec3(uv, 1.0));\n\n    float dist = rayMarch(ro, rd);\n    \n    if (dist > 0.0 && dist < MAX_STEPS) {\n        vec3 norm = getNormal(ro + dist * rd);\n        vec3 sunDir = normalize(vec3(-3., 3.0, 0.0));\n        float sun = clamp(dot(norm, sunDir), .0, 1.0);\n        \n        vec3 lDir = normalize(vec3(3.0, -3.0, 3.0));\n        float l = clamp(dot(norm, lDir), 0.0, 1.0);\n        \n        //col = vec3(0.0, 1.0, 1.0);\n        //col = vec3(1.0);\n        col += sun * vec3(1.0, 1.0, 1.0) * 0.9;\n        //col += l * vec3(0.6, 0.2, 0.9);\n        col += vec3(0.05, 0.2,0.9) * 0.2;\n    }\n    \n    col = pow(col, vec3(0.4545));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}