{"ver":"0.1","info":{"id":"4fVyzD","date":"1731673579","viewed":77,"name":"Feathers tutorial :)","username":"vanshika","description":"Attempt#3. (the sphere doesn't count). The warping effect on this one is annoying but whatever. ","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","practice","feathers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define S smoothstep\n# define T (iTime)\n\nmat2 Rot(float a) {\n float s = sin(a), c = cos(a);\n return mat2(c, -s, s, c);\n}\n\nfloat Feather(vec2 p) {\n    float d = length(p - vec2(0, clamp(p.y, -.3, .3))); \n    float r = mix(.1, .01, S(-.3, .3, p.y));\n    float m = S(.01, .0, d-r);\n    \n    float side = sign(p.x); \n    float x = .9*abs(p.x)/r;\n    float wave = (1.-x)*sqrt(x) + x*(1.-sqrt(1.-x));\n    float y = (p.y-wave*.2)*80.+side*56.;\n    \n    float id = floor(y+20.);\n    float n = fract(sin(id*564.32)*749.); //random number per strand\n    float shade = mix(.5, 1., n);\n    float strandLength = mix(.7, 1., fract(n*34.));\n    \n    float strand = S(.4, 0., abs(fract(y)-.5)-.35);\n    strand *= S(.1, -.2, x-strandLength);\n    \n    d = length(p - vec2(0, clamp(p.y, -.45, .1)));\n    float stem = S(.01, .0, d+p.y*.015);\n    \n    return max(strand*m*shade, stem);\n}\n\nvec3 Transform(vec3 p, float angle) {\n    p.xz *= Rot(angle);\n    p.xy *= Rot(angle*.7);\n    return p;\n}\n\nvec4 FeatherBall(vec3 ro, vec3 rd, vec3 pos, float angle){\n\n    vec4 col = vec4(0);\n    float t = dot(pos-ro, rd);\n    vec3 p = ro + rd*t;\n    float y = length(pos-p);\n\n    if(y<1.) {\n        float x = sqrt(1.-y);\n        vec3 pF = ro + rd*(t-x) - pos; //front intersection\n        pF = Transform(pF, angle);\n        vec2 uvF = vec2(atan(pF.x, pF.z), pF.y); // polar coordinates\n        uvF *= vec2(.3, .5);\n        float f = Feather(uvF);\n        vec4 front = vec4(vec3(f), S(0., .1, f));\n        \n        vec3 pB = ro + rd*(t+x) - pos; //back intersection\n        pB = Transform(pB, angle);\n        vec2 uvB = vec2(atan(pB.x, pB.z), pF.y);\n        uvB *= vec2(.3, .5);\n        float b = Feather(uvB);\n        vec4 back = vec4(vec3(b), S(0., .1, b));\n        \n        col = mix(back, front, front.a);\n    }\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 bg = vec3(.2,.2,.7)*(uv.y+.5);\n    bg += vec3(1., .3, .1)*(-uv.y+.5);\n    vec4 col = vec4(bg,0);\n    \n    vec3 ro = vec3(0, 0, -3.);\n    vec3 rd = normalize(vec3(uv, 1));\n    \n    for(float i=0.; i<1.; i+=1./50.){\n        float x = mix(-8., 8., fract(i+T*.1));\n        float y = mix(-2., 2., fract(sin(i*672.23)*6289.));\n        float z = mix(5., 0., i);\n        float a = T+i*637.34;\n        \n        vec4 feather = FeatherBall(ro, rd, vec3(x, y, z), a);\n        \n        feather.rgb = mix(bg, feather.rgb, mix(.3, 1., i));\n        feather.rgb = sqrt(feather.rgb);\n        col = mix(col, feather, feather.a);\n    }\n    \n    col = pow(col, vec4(.4545));\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}