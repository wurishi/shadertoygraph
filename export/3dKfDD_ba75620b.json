{"ver":"0.1","info":{"id":"3dKfDD","date":"1607178510","viewed":172,"name":"Eccentric shape SDF","username":"LifeIsGoodMI","description":"Eccentric shape distance relative to the right focal point. This distance is often used in physics where a heavy mass will be placed in the right focal point.\nModify eps to change the shape.\nUsed Inigo Quilez's method for displaying the distance field.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","distance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// p := \"half-parameter\"\n// eps := \"numerical eccentricity\" where\n// eps = 0 => Circle\n// eps = (0,1) => Ellipse\n// eps = 1 => Parabola\n// eps > 1 => hyperbola\nfloat EccentricShape(in vec2 pos, in float p, in float eps)\n{\n    float angle = atan(pos.y, pos.x);\n    float r = p / (1.0 + eps * cos(angle));\n    \n    vec2 point = vec2(cos(angle), sin(angle)) * r;\n    float dist = length(pos - point);\n    dist = (length(pos) > r) ? dist : -dist;\n    \n    return dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n\t\n    vec2 m = iMouse.xy/iResolution.xy;\n\tm.x *= iResolution.x/iResolution.y;\n    \n\tfloat eps = mix(0.0, 1.2, abs(sin(iTime * 0.25)));\n    float d = EccentricShape(uv, 0.2 * length(m), eps);\n    \n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(120.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n\n\tfragColor = vec4( col, 1.0 );;\n}","name":"Image","description":"","type":"image"}]}