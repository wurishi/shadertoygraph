{"ver":"0.1","info":{"id":"Xl3yRr","date":"1531196136","viewed":159,"name":"Egg rolls","username":"therealbnut","description":"Concentric eggs rolling around, kinda looks like a 3d nozzle. I saw this online somewhere, and decided to replicate it in a shader. I can't remember where I first saw it, the most recent time was this:\nhttps://twitter.com/DennysDiner/status/1008785199818","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["egg","roll"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float K = 7.0;\nconst float L = 1.4;\nconst float M = 1.5;\n\nfloat egg(vec2 pos) {\n\tvec2 p = pos * vec2(pow(pos.y/(L*K)+1.0,M), 1.0/L);\n\treturn length(2.0 * p) - 1.0;\n}\nfloat transformedEgg(vec2 pos, vec3 t) {\n\treturn egg(pos / t.z - t.xy) * t.z;\n}\nvec2 eggOffset(float t) {\n    float s = sin(t);\n    float c = cos(t);\n    return vec2(c * pow(K / (s + K), M), s * L);\n}\n\nfloat fill(float x, float f) {\n    return clamp(x/f, 0.0, 1.0);\n}\nfloat stroke(float x, float f, float p) {\n    return fill(x + f * p, p) - fill(x - f * p, p);\n}\n\n// TODO: Egg distance function without axis bias\n// TODO: Precision offsets to take into account line width\n// TODO: Create the number of eggs in a loop.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * fragCoord/iResolution.xy - 1.0;\n    vec2 sc = max(vec2(iResolution.x / iResolution.y,\n                       iResolution.y / iResolution.x),1.0);\n    uv *= sc;\n    vec2 df = 2.0 * sc / iResolution.xy;\n    float pw = length(df);\n    \n    float t = iTime * 4.0;\n    \n    vec3 a = vec3(0.0, 0.0, 1.0);\n    vec3 d = vec3(a.xy + eggOffset(t) * (0.240 * a.z), 0.65);\n    vec3 g = vec3(0.0, 0.0, 0.30);\n\n    vec3 b = mix(a, d, 0.33333);\n    vec3 c = mix(a, d, 0.66666);\n    vec3 e = mix(d, g, 0.33333);\n    vec3 f = mix(d, g, 0.66666);;\n\n    \n    float intensity = 0.0;\n    \n    intensity = max(intensity, stroke(transformedEgg(uv, a), 2.0, pw));\n    intensity = max(intensity, stroke(transformedEgg(uv, b), 2.0, pw));\n    intensity = max(intensity, stroke(transformedEgg(uv, c), 2.0, pw));\n    intensity = max(intensity, stroke(transformedEgg(uv, d), 2.0, pw));\n    intensity = max(intensity, stroke(transformedEgg(uv, e), 2.0, pw));\n    intensity = max(intensity, stroke(transformedEgg(uv, f), 2.0, pw));\n    intensity = max(intensity, stroke(transformedEgg(uv, g), 2.0, pw));\n\n    // Output to screen\n    fragColor = vec4(vec3(1) * (1.0 - intensity),1.0);\n}\n","name":"Image","description":"","type":"image"}]}