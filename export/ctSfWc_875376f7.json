{"ver":"0.1","info":{"id":"ctSfWc","date":"1694542445","viewed":59,"name":"Очень большая проблема","username":"Paul_g","description":"Algoritm","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["12"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 crossproduct(vec3 a, vec3 b){\n    return vec3(a.y*b.z - a.z*b.y, b.x*a.z - a.x*b.z, a.x*b.y - a.y*b.x);\n}\n\nfloat kitecat(vec2 a, vec2 b){\n    return a.x*b.y - b.x*a.y;\n}\n\nbool fig1(float R, vec3 r0, vec2 xy){\n    if ((xy.x - r0.x)*(xy.x - r0.x) +(xy.y - r0.y)*(xy.y - r0.y) <= R*R){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nbool fig2(vec3 m[3], vec2 xy){\n\n    vec2 md = xy - m[0].xy;\n    vec2 mn = m[1].xy - m[0].xy;\n    int i = 0;\n    while(kitecat(mn,md) < 0.0 && i < 2){\n        i++;\n        md = xy.xy - m[i].xy;\n        mn = m[i+1].xy-m[i].xy;\n    }\n     md = xy - m[2].xy;\n     mn = m[0].xy - m[2].xy;\n    if(kitecat(mn,md) < 0.0){i++;}\n    \n    if(i==3){return true;}\n    else{return false;}\n}\n\nbool fig3(vec3 m[5], vec2 xy){\n\n    vec2 md = xy - m[0].xy;\n    vec2 mn = m[1].xy - m[0].xy;\n    int i = 0;\n    while(kitecat(mn,md) > 0.0 && i < 4){\n        i++;\n        md = xy - m[i].xy;\n        mn = m[i+1].xy-m[i].xy;\n    }\n     md = xy - m[4].xy;\n     mn = m[0].xy - m[4].xy;\n    if(kitecat(mn,md) > 0.0){i++;}\n    \n    if(i==5){return true;}\n    else{return false;}\n}\n\nfloat getZ_pol1(vec3 n[3], vec2 xy){\n    vec3 N1 = crossproduct(n[1]-n[0], n[2]-n[0]);\n    float D = N1.x * n[0].x + N1.y * n[0].y + N1.z * n[0].z;\n    D = -D;\n\n    return (-(N1.x * xy.x + N1.y*xy.y + D)/N1.z);\n}\nfloat getZ_pol2(vec3 n[5], vec2 xy){\n    vec3 N1 = crossproduct(n[1]-n[0], n[2]-n[0]);\n    float D = N1.x * n[0].x + N1.y * n[0].y + N1.z * n[0].z;\n    D = -D;\n\n    return (-(N1.x * xy.x + N1.y*xy.y + D)/N1.z);\n}\n\nfloat getZ_sph(float R, vec3 r0, vec2 xy){\n    return (sqrt(R*R - (xy.x-r0.x)*(xy.x-r0.x) - (xy.y-r0.y)*(xy.y-r0.y)) + r0.z);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    float z = -1000000.0;\n    float z_tmp;\n    vec3 bg = vec3(0.0, 0.1, 0.2);\n    vec2 xy = fragCoord/iResolution.xy*1000.0;\n    vec3 col = bg;\n    vec3 circle = vec3(0.1,0.4,0.6);\n    vec3 triangle1 = vec3(1.0,1.0,0.3);\n    vec3 triangle2 = vec3(xy.x/10.0,xy.x/1000.0,0.5);\n    \n    vec3 circle1 = vec3(1.0,0.0,0.0);\n    vec3 nangle = vec3(0.0, 1.0, 0.0);\n    mat3 M = mat3(vec3(1.0, 0.0, 0.0),\n    vec3(0.0, abs(cos(iTime)), -abs(sin(iTime))),\n    vec3(0, abs(sin(iTime)), abs(cos(iTime))));\n    float R = 70.0*(2.0+sin(0.5*iTime));\n    float R1 = 20.0;\n    vec3 r0 = vec3(500.0 + 500.0*cos(iTime),400.0+100.0*sin(iTime), -400.0);\n    vec3 r = vec3(500.0 + 500.0*cos(iTime),400.0+100.0*sin(iTime), -400.0);\n    \n    vec3 m1[3];\n    m1[0] = (M * vec3(200.0  ,0.0, 200.0)) ;\n    m1[1] = M * vec3 (-100.0 , -200.0 ,200.0);\n    m1[2] = M * vec3 (0.0 , 200.0 ,200.0);\n    m1[0] = m1[0] + vec3(400.0 + 200.0*cos(iTime), 300.0+150.0*cos(iTime),-200.0);\n    m1[1] = m1[1] + vec3(400.0 + 200.0*cos(iTime), 300.0+150.0*cos(iTime),-300.0);\n    m1[2] = m1[2] + vec3(400.0 + 200.0*cos(iTime), 300.0+150.0*cos(iTime),-400.0);\n    \n    vec3 n[5];\n    n[0] = vec3(300.0 + 400.0*sin(iTime)*cos(iTime), 150.0 + 500.0*cos(-iTime)*cos(-iTime),-300.0);\n    n[1] = vec3(250.0 + 400.0*sin(iTime)*cos(iTime), 200.0 + 500.0*cos(-iTime)*cos(-iTime),-300.0);\n    n[2] = vec3(200.0 + 400.0*sin(iTime)*cos(iTime), 120.0 + 500.0*cos(-iTime)*cos(-iTime),-300.0);\n    n[3] = vec3(250.0 + 400.0*sin(iTime)*cos(iTime), 100.0 + 500.0*cos(-iTime)*cos(-iTime),-300.0);\n    n[4] = vec3(270.0 + 400.0*sin(iTime)*cos(iTime), 70.0 + 500.0*cos(-iTime)*cos(-iTime), -300.0);vec3 m2[3];\n    m2[0] = vec3(400.0, 500.0, -200.0);\n    m2[2] = vec3(300.0, 200.0, -300.0);\n    m2[1] = vec3(700.0, 400.0, -400.0);\n    \n    vec3 m3[3];\n    m3[0] = vec3(200.0 + 150.0*sin(0.3*iTime), 500.0 + 150.0*cos(0.3*iTime) , -100.0);\n    m3[2] = vec3(150.0 + 150.0*sin(0.3*iTime), 200.0 + 150.0*cos(0.3*iTime), -300.0);\n    m3[1] = vec3(300.0 + 150.0*sin(0.3*iTime), 400.0 + 150.0*cos(0.3*iTime), -400.0);\n    \n    \n    vec3 triangle3 = vec3(2.*cos((xy.x - m3[0].x)/5.),2.*cos((xy.y - m3[0].y)/5.),1.0);\n    \n    \n    if(fig2(m1, xy)){\n        if((z_tmp = getZ_pol1(m1, xy)) > z ){\n            z = z_tmp;\n            col = triangle1;\n        }\n    }\n    \n    if(fig2(m2, xy)){\n        if((z_tmp = getZ_pol1(m2, xy)) > z ){\n            z = z_tmp;\n            col = triangle2;\n        }\n    }\n    \n    if(fig2(m3, xy)){\n        if((z_tmp = getZ_pol1(m3, xy)) > z ){\n            z = z_tmp;\n            col.y = 20.0*cos(45.0*fragCoord.y) + 20.0*sin(45.0*fragCoord.x);\n            col.z = 0.0;\n            col.x = 0.0;\n        }\n    }\n    \n    if(fig3(n, xy)){\n        if((z_tmp = getZ_pol2(n, xy)) > z ){\n            z = z_tmp;\n            col = nangle;\n        }\n    }\n\n    if(fig1(R, r0, xy)){\n        if((z_tmp = getZ_sph(R,r0,xy)) > z ){\n            z = z_tmp;\n            col = circle;\n        }\n    }\n    fragColor = vec4(col,1.0);\n    \n   \n    \n}","name":"Image","description":"","type":"image"}]}