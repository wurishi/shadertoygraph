{"ver":"0.1","info":{"id":"sscGW8","date":"1629660020","viewed":104,"name":"Frilly Vision Circle","username":"ZeroPlayer","description":"Vision circle that fades into nothing using voronoi circles.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float cellSize = 10.0;\nconst float circleRadius = 50.0;\nconst float frillRadius = 150.0;\nconst float noiseRadius = 14.0;\nconst float minNoiseRadius = 0.0;\n\nvec3 hash3( vec2 p )\n{\n    vec3 q = vec3( dot(p,vec2(127.1,311.7)), \n\t\t\t\t   dot(p,vec2(269.5,183.3)), \n\t\t\t\t   dot(p,vec2(419.2,371.9)) );\n\treturn fract(sin(q)*43758.5453);\n}\n\nfloat circleValue(vec2 center, vec2 point) {\n    float d = distance(center, point);\n    float f = clamp((d - circleRadius) / frillRadius, 0.0, 1.0);\n    f = 1.0 - f;\n    return sqrt(f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord / cellSize;\n    \n    vec2 c = floor(p);\n    vec2 off = fract(p);\n    \n    float dist = 2.0;\n    float vis = 0.0;\n\n    for (int i = -1; i <= +1; ++i)\n    for (int j = -1; j <= +1; ++j) {\n        vec2 g = vec2(i, j);\n        vec3 h = hash3(g + c);\n        vec2 tgt = c + g + h.xy;\n        float val = circleValue(iMouse.xy, tgt * cellSize);\n        if (val > 0.0) {\n            float noiseCirc = mix(minNoiseRadius, noiseRadius, val);\n            float dtov = length(g + h.xy - off);\n            float inside = smoothstep(noiseCirc - 0.5, noiseCirc + 0.5, dtov * cellSize);\n\n            vis = max(vis, 1.0 - inside);\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(vis, vis, vis, 1.0);\n}","name":"Image","description":"","type":"image"}]}