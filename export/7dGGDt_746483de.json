{"ver":"0.1","info":{"id":"7dGGDt","date":"1632389419","viewed":181,"name":"uv映射","username":"Jatpeng","description":"屏幕上下左右映射","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["uv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nint num_blocks = 3;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 texcoord =(fragCoord/iResolution.xy);;\n    \n       // 计算每个块的大小\n    float block_size = 1.0 / float(num_blocks);\n    \n    // 计算当前时间对应的块的位置\n    int block_index = int(iTime)%num_blocks;\n    \n    // 计算当前块的纹理坐标范围\n    vec2 block_min = vec2(float(block_index) * block_size, 0.0);\n    vec2 block_max = vec2(float(block_index + 1) * block_size, 1.0);\n    \n    // 计算当前块的纹理坐标\n    vec2 texcoord_block = mix(block_min, block_max, vec2(texcoord.x*num_blocks,texcoord.y));\n    \n    // 从纹理中获取颜色并输出\n    fragColor = texture(iChannel0, texcoord_block);\n}","name":"Image","description":"","type":"image"}]}