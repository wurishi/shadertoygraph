{"ver":"0.1","info":{"id":"wtjyz1","date":"1593782050","viewed":319,"name":"Moebius Lizard","username":"iapafoto","description":"Inspired by [FabriceNeyret2] Logarithmic Moebius Transform\nShading mainly from [Shane] Bumped Sinusoidal Warp\n\n\n","likes":16,"published":1,"flags":32,"usePreview":0,"tags":["2d","escher","lizard","moebus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by sebastien durand - 07/2020\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//------------------------------------- \n// [FabriceNeyret2] Logarithmic Moebius Transform 12 - https://www.shadertoy.com/view/wtSyzh\n// [Shane] Bumped Sinusoidal Warp - https://www.shadertoy.com/view/4l2XWK\n//------------------------------------- \n#define BF(p) texture(iChannel0, p)\n#define S(A,B,C,D) c = mix(c, vec3(A), smoothstep(B,C,D.y))\n\nvoid mainImage2( out vec4 O, in vec2 u ){\n\tvec2 R = iResolution.xy, \n         uv = u/R,\n         ep = vec2(3./R.y, 0.),\n      \t U = (u - .5*R)/R.y + .3*vec2(cos(.1*iTime), sin(.11*iTime));\n    vec3 sn, sp = vec3(uv, 0),\n         rd = normalize(vec3(uv, 1.)),\n         ld = vec3(cos(iTime)*0.4, sin(iTime)*0.7, -.5) - sp,\n    \t f = BF(sp.xy).xyz;          \n\tfloat k = min(length(U+vec2(.6,.2)), length(U)),\n\t\t  ln = max(length(ld), 0.001);\n    \n    sn = normalize(vec3(0.1*(vec2(BF(sp.xy-ep).x, BF(sp.xy-ep.yx))-f.x)/ep.x, -1));           \n\tld /= ln;\n    \n    float at = k/(1. + ln*ln*.15)*(f.x*.9 + .1),\n          sc = 9.* pow(max(dot( reflect(-ld, sn), -rd), 0.), 12.),\n          df = max(dot(sn, ld), 0.); \n    df = pow(df, 4.)*.66 + pow(df, 8.)*.34; \n\n    // color\n    vec3 c = vec3(.1,.3,1);\n    c = (c - c*exp(-.4*abs(f.x))) * (.8 + .2*cos(6.*f.x));\n    c = S(0,.5,.4, f); \n    c = S(1,.4,.0, f); \n    c = S(0,-.2,-.4, BF(sp.xy+1.5*cos(2.*iTime)/R));\n\tc = mix(c, exp(-5.*abs(cos(iTime)-smoothstep(-.1,.5,k)))*vec3(1,1,0)*10., smoothstep(.3,0.,abs(f.x)) );\n    c = (c * (df*vec3(1, .97, .92)*2. + .5) + vec3(1., .6, .2)*sc*2.)*at;\n    \n\tO = vec4(pow(clamp(c, 0., 1.),vec3(.3)), 1.);\n}\n\nvoid mainImage( out vec4 O, in vec2 U )  {\n    vec4 T;      \n    O -= O;\n    for (int k=0; k<9; k++, O+=T) // AA             \n        mainImage2(T, U+.33*vec2(k%3-1,k/3-1)); \n    O /= 9.;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Created by sebastien durand - 07/2020\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//------------------------------------- \n// [FabriceNeyret2] Logarithmic Moebius Transform 12 - https://www.shadertoy.com/view/wtSyzh\n// [Shane] Bumped Sinusoidal Warp - https://www.shadertoy.com/view/4l2XWK\n//------------------------------------- \n\nint[] T=int[](6,0,9,2,12,5,6,10,0,20,6,26,12,20,11,17,14,17,17,18,15,22,11,26,16,26,22,18,22,27,25,28,28,30,30,26);\n\nvoid mainImage(out vec4 O, vec2 u ) {\n    \n    vec2 R = iResolution.xy,\n         m = 2.*iMouse.xy/R,\n         U = (u - .5*R) / R.y + .3*vec2(cos(.1*iTime), sin(.11*iTime)),\n\t \t z = U + vec2(1,0), \n         g = vec2(30,26);     \n\n\t// space transform\n    U *= mat2(z,-z.y,z) / dot(U,U);             \n\tU = 48.*fract(m+log(length(U+=.5))*vec2(.5,-1.) + iTime/20. + atan(U.y, U.x)/6.283*vec2(6,2))-g;\n    \n    // distance to lizard\n    float d = 1e3, d2=d;\n    for (int r=0; r<4; r++) {\n        U = vec2(-U.y,U); \n        m = mod(U+g+12.,48.)-12.;\n        d2 = min(d2, min(length(m-vec2(7.8,20)),length(m-vec2(4.5,20)))-.8);  // eyes\n        for (int i=0; i<34; i+=2) {\n            vec2 a = vec2(T[i],T[i+1]), b = vec2(T[i+2],T[i+3])-a;\n            d = min(d, length(m-a-b*clamp(dot(m-a,b)/dot(b,b),0.,1.)));\n        }\n    }\n    // play with shape\n   // d = smoothstep(0.,.5,d) +2.*smoothstep(.5,1.,d) + max(0.,d);\n    O = vec4(d,d2,0,0);\n}","name":"Buffer A","description":"","type":"buffer"}]}