{"ver":"0.1","info":{"id":"DdXcRN","date":"1686605896","viewed":122,"name":"Edge Detection in Webcam","username":"DaCuteRaccoon","description":"Detect edges in a webcam","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["webcam","cam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define edge true\n\n\nprecision highp float;\n\n\n\nvec4 tex(vec2 pos) {\n    return texture(iChannel0, pos);\n}\n\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Front-facing mirror\n    uv.x = 1.0 - uv.x;\n    \n    // Output webcam buffer\n    if (edge == true) {\n        (fragColor =  (tex(fragCoord/iResolution.xy)) - tex((fragCoord+vec2(1., 1.))/iResolution.xy));\n    } else {\n        fragColor = vec4(texture(iChannel0, uv).xyz, 1.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}