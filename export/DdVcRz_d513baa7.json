{"ver":"0.1","info":{"id":"DdVcRz","date":"1695731929","viewed":19,"name":"Red Pulsar","username":"hydrolox","description":"Pulsing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, float r, vec2 p, float blur) {\n    float d = length(uv - p);\n    // Output to screen\n    float c = 1.-smoothstep(r-blur,r,d);\n    return c;\n}\n\nfloat rnd(vec2 seed) {\n    float x = seed.x;\n    float y = seed.y;\n    float num = mod(x, y) * mod(x, y*x + x / y);\n    return (fract(num));\n\n}\n\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    float c = Circle(uv, 0.4,vec2(0.0,0.0), 0.05);\n    vec3 col = pal( uv.y, vec3(0.5+sin(iTime),0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67) );\n    vec3 col_x = pal( uv.x, vec3(0.5+sin(iTime),0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67) );\n    float ring = Circle(uv, .4, vec2(0.0,0.0), .2);\n    vec2 idx = floor(uv);\n    float offset = sin(rnd(idx));\n    float beam = Circle(fract(uv), 0.02,vec2(mod(iTime,2.),mod(iTime,2.)), 0.02) * clamp(sin(iTime),0.5, 9.0);\n    \n    vec3 finalColor = col*col_x*vec3(ring);\n    finalColor += beam;\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}