{"ver":"0.1","info":{"id":"cslSD8","date":"1668803204","viewed":180,"name":"Sphere unwrapping with texture","username":"artrointel","description":"Inspired by https://www.shadertoy.com/view/XsyfDt","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sphere","transition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n\n#define CAMERA_DIST 1.5\n\n#define LOD_BLUR 4.0\n\n//https://www.shadertoy.com/view/3s3GDn\nfloat getGlow(float dist, float radius, float intensity){\n    return pow(radius/dist, intensity);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 centerPoint = iMouse.xy / iResolution.xy - 0.5;\n    vec2 p = (2. * fragCoord.xy - iResolution.xy) / iResolution.xy;\n    p *= 0.5;\n    float displayRatio = iResolution.x / iResolution.y;\n    p -= centerPoint;\n    p.x *= displayRatio;\n    \n    float t = mod(iTime, 2.);\n    \n    if (t < 1.) {\n        float zoom = pow(2. * t, 5.) + 1.;\n        vec3 dir = normalize(vec3(PI * p, -zoom * (CAMERA_DIST - 1.)));\n        float b = CAMERA_DIST * dir.z;\n        float h = b*b - CAMERA_DIST*CAMERA_DIST + 1.;\n        if (h >= 0.) {\n            vec3 q = vec3(0., 0.0, CAMERA_DIST) - dir * (b + sqrt(h));\n            p = zoom * vec2(atan(q.x, q.z) / PI, 0.5 - acos(q.y / length(q)) / PI);\n        } else {\n            // glow\n            vec2 p2 = p;\n            p2.x /= displayRatio;\n            vec2 duv = p2*clamp(t, 0.5, 1.0) + 0.5;\n            duv += centerPoint;\n            vec4 glowColor = texture(iChannel0, duv, LOD_BLUR);\n            fragColor = glowColor*vec4(vec3(getGlow(length(p)*iResolution.x, zoom*iResolution.y*0.25, 8.0)), 1.);\n            // non-glow version\n            //fragColor = vec4(0., 0., 0., 1.);\n            return;\n        }\n    }\n    p.x /= displayRatio;\n    vec2 uv = p*clamp(t, 0.5, 1.0) + 0.5;\n    uv += centerPoint;\n    // uv.x += clamp(mod(iTime, 2.), 0.0, 1.0);\n    fragColor = texture(iChannel0, uv, LOD_BLUR*(1. - t));\n}","name":"Image","description":"","type":"image"}]}