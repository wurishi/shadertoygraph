{"ver":"0.1","info":{"id":"XlKXDm","date":"1484649471","viewed":752,"name":"simple reaction diffusion","username":"balkhan","description":"based on : http://www.karlsims.com/rd.html\n\nclick mouse to draw (add b reactive to the mix)\nswitch the macros used in buffA for mitosis effect\n","likes":16,"published":1,"flags":32,"usePreview":0,"tags":["2d","automata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 ret = texture(iChannel0, uv);\n    \n\tfragColor = vec4(ret.xy, 0.,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define FEED_DEFAULT .0550\n#define KILL_DEFAULT .0620\n\n#define FEED_MITOSIS .0367\n#define KILL_MITOSIS .0649\n\nvec2 texsize;\nvec2\tlaplacian_convolution(vec2 uv)\n{\n\tvec2\tret = vec2(0.);\n    \n    if (uv.x == 0. || uv.y == 0. || uv.x== 1. || uv.y ==1.)\n        return (ret);\n    ret += texture(iChannel0, vec2(uv.x , uv.y) ).xy * -1.;\n    \n    ret += texture(iChannel0, vec2(uv.x -texsize.x, uv.y) ).xy * (.2);\n    ret += texture(iChannel0, vec2(uv.x +texsize.x, uv.y) ).xy * (.2);\n    ret += texture(iChannel0, vec2(uv.x , uv.y -texsize.y) ).xy * (.2);\n    ret += texture(iChannel0, vec2(uv.x , uv.y +texsize.y) ).xy * (.2);\n    \n    ret += texture(iChannel0, vec2(uv.x -texsize.x, uv.y -texsize.y) ).xy * (.05);\n    ret += texture(iChannel0, vec2(uv.x +texsize.x, uv.y -texsize.y) ).xy * (.05);\n    ret += texture(iChannel0, vec2(uv.x +texsize.x, uv.y +texsize.y) ).xy * (.05);\n    ret += texture(iChannel0, vec2(uv.x -texsize.x, uv.y +texsize.y) ).xy * (.05);\n    return (ret);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy) / iResolution.xy;\n    texsize = 1./iResolution.xy;\n    vec4\tret = texture(iChannel0, uv);\n    vec2\tab = ret.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    if (  iMouse.z > 0.0 &&\n        mouse.x <= abs(uv.x+.005) && mouse.x >= abs(uv.x-.005) &&\n        mouse.y <= abs(uv.y+.005) && mouse.y >= abs(uv.y-.005) )\n\t    ab.y = 1.;\n    if (abs(iTime) <= .5)\n    {\n        fragColor.x = 1.;fragColor.y =0.;\n        if (sin(uv.x) <0.5 && sin(uv.y) < .5 && sin(uv.x) > .45 && sin(uv.y) > .45)\n            fragColor += vec4(0., 1., 0., 1.);\n    }\n    else\n    {\n     fragColor.x = clamp(ab.x + (1. * (laplacian_convolution(uv).x) - ab.x * ab.y * ab.y + FEED_DEFAULT * (1. - ab.x) ) ,-1.,1.);\n     fragColor.y = clamp(ab.y + (.5 * (laplacian_convolution(uv).y) + ab.x * ab.y * ab.y - (FEED_DEFAULT + KILL_DEFAULT) * ab.y ),-1.,1.);\n    }\n}\n","name":"Buf A","description":"","type":"buffer"}]}