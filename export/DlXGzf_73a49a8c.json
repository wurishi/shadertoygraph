{"ver":"0.1","info":{"id":"DlXGzf","date":"1672112923","viewed":94,"name":"pixelizing shader","username":"KaneraZh","description":"shader for displaying the floored pixel of the desired subdivided image\nthanks to MysteryPankake for the cleaning up of the final image","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.yy;\n    \n    // resolution\n    float res   = floor(iTime*1.0);\n    //float res   = iTime;\n    \n    // resolution step\n    float rstep = 1.0/res;\n    \n    // half resolution step\n    float rhstep= rstep/2.0;\n    \n    uv*= res;\n    uv = floor(uv)*rstep;\n    uv+= rhstep;\n    \n    \n    \n    vec3 col = vec3(0.0);\n    col = textureLod(iChannel0, uv, 0.0).rgb;\n    \n    //while(uv.x>1.0) uv.x-=1.0;\n    //while(uv.y>1.0) uv.y-=1.0;\n    //while(uv.x<0.0) uv.x+=1.0;\n    //while(uv.y<0.0) uv.y+=1.0;\n    //col = vec3(uv.xy,1.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}