{"ver":"0.1","info":{"id":"fdtGDj","date":"1687770574","viewed":91,"name":"StarsAgain","username":"cedricl","description":"test","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["beautiful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FAR 800.0\n#define GRAN 4.0\n#define GRAN2 (GRAN*0.5)\n#define GLOW 0.186\n#define GLOW_POW 2.3\n#define AADelta 0.0005\n#define CHROMA 0.005\n\nvec2 Rot(vec2 p, float th) { return vec2(p.x*cos(th)-p.y*sin(th), p.x*sin(th)+p.y*cos(th)); }\n\nfloat map(vec3 p) \n{\n    float l = length(vec2(p.x, p.y));\n    vec2 r = Rot(vec2(p.x, p.y), p.z/100.5);\n    vec3 p2 = vec3(r.x, r.y, p.z);\n    return length(mod(p2, GRAN) - GRAN2); \n}\n\nvec3 doColor(in vec2 t) { return vec3(pow(16.8*t.y, 4.5)); }\n\nvec2 trace(in vec3 o, in vec3 rd)\n{\n    float t = 0.;\n    float glow = 0.;\n    for(int i = 0; i < 100; i++)\n    {\n        float d = map(o);\n        if(d < 0.0001 || t > FAR)\n\t\t    return vec2(t, glow);\n        \n        o += rd * d;\n        t += d;\n       glow += GLOW / (pow(d*t, GLOW_POW));\n    }\n    \n    return vec2(FAR, glow);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - iResolution.xy*.5) / iResolution.y;\n    float Time = iTime * .8;\n    \n\tvec3 ro = vec3(0.7, 0., 0.+10.5*sin(Time*0.24) - 5.*Time);   \n    ro += vec3(0., 0., -20.0);\n\tvec3 lk = vec3(.5*sin(Time*0.24), 0.065*sin(Time*0.097), -1.0);\n\n    float FOV = 3.14159/8.0;\n    vec3 forward = normalize(lk);\n    vec3 right = normalize(vec3(forward.z, 0.15*sin(Time*0.13), -forward.x )); \n    vec3 up = cross(forward, right);\n\n    vec3 rd = normalize(forward + FOV*uv.x*right + FOV*uv.y*up);\n    vec2 t = trace(ro, rd);\n    fragColor = vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n\n    fragColor += vec4(18,0.0,0.,1.) * pow(max(-rd.y, 0.), 2.8);\n    fragColor += vec4(7.9,1.7,0,1.) * pow(max(-rd.y, 0.), 0.6);\n    fragColor += vec4(0.0,1.0,1,1.) * pow(max(rd.y, 0.), 2.5);\n    fragColor += vec4(0.0,.0,.9,1.) * pow(max(rd.y, 0.), 0.8);\n    fragColor += vec4(5.5,5.5,5.5,1.) * pow(1.-abs(rd.y), 20.);\n/*\n    float Chroma = pow(abs(uv.x)+abs(uv.y), 3.0)*CHROMA;\n    rd = normalize(forward + FOV*(uv.x+Chroma)*right + FOV*uv.y*up);\n    t = trace(ro, rd);\n    fragColor += 8.0*vec4(1,0,0,1) * vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n    \n    rd = normalize(forward + FOV*(uv.x-Chroma)*right + FOV*uv.y*up);\n    t = trace(ro, rd);\n    fragColor += 8.0*vec4(0,1,1,1) * vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n  */  \n    rd = normalize(forward + FOV*(uv.x+AADelta)*right + FOV*uv.y*up);\n    t = trace(ro, rd);\n    fragColor += vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n    \n    rd = normalize(forward + FOV*(uv.x-AADelta)*right + FOV*uv.y*up);\n    t = trace(ro, rd);\n    fragColor += vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n    \n    rd = normalize(forward + FOV*uv.x*right + FOV*(uv.y+AADelta)*up);\n    t = trace(ro, rd);\n    fragColor += vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n    \n    rd = normalize(forward + FOV*uv.x*right + FOV*(uv.y-AADelta)*up);\n    t = trace(ro, rd);\n    fragColor += vec4(sqrt(clamp(doColor(t), 0.0, 1.0)), 1.0);\n    fragColor *= vec4(0.22, 0.22, 0.22, 1.0);\n    \n}\n\n","name":"Image","description":"","type":"image"}]}