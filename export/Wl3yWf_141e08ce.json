{"ver":"0.1","info":{"id":"Wl3yWf","date":"1609978611","viewed":104,"name":"[Genuary] #6 Triangle Subdiv","username":"oneshade","description":"Triangle tiled with triangles.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["triangle","subdivision","genuary2021"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdEquiTri(in vec2 p) {\n    const float k = 1.73205080757; // sqrt(3)\n    p.x = abs(p.x) - 1.0;\n    p.y += 1.0 / k;\n    if (p.x + k * p.y > 0.0) p = vec2(p.x - k * p.y, -k * p.x - p.y) / 2.0;\n    p.x -= clamp(p.x, -2.0, 0.0);\n    return -length(p) * sign(p.y);\n}\n\nfloat triWave(in float x) {\n    float frac = fract(x);\n    return abs(round(frac) - frac);\n}\n\nfloat map(in vec2 p) {\n    float div = 1.0 + floor(triWave(iTime / 6.0) * 12.0) * 3.0; // Divisions along edges\n    float rep = 0.2; // Size of the grid\n\n    float hrep = 0.5 * rep;\n    float hrepDiv = div * 0.1;\n\n    float btri = sdEquiTri(p / hrepDiv) * hrepDiv;\n\n    p.y -= 0.55 * rep;\n    p.x += mod(fract(p.y / hrep / 1.75), 2.0) * hrep - 0.5 * p.y / 0.875;\n    p = mod(p, vec2(rep, rep * 0.875)) - vec2(hrep, hrep * 0.875);\n    p.y += 0.125 * rep;\n\n    return max(abs(sdEquiTri(p / hrep) * hrep), btri);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    fragColor = vec4(smoothstep(0.0, unit, map(uv + vec2(0.0, 0.4))));\n}","name":"Image","description":"","type":"image"}]}