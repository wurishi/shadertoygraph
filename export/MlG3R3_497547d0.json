{"ver":"0.1","info":{"id":"MlG3R3","date":"1475776075","viewed":2733,"name":"fire particles - PSF+saturation","username":"FabriceNeyret2","description":"Accounting for blooming+saturation effect","likes":38,"published":3,"flags":0,"usePreview":0,"tags":["psf","sensor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// clamp( I0/dist^2*Bessel(r) ) ; Bessel ~ 1/r^3 \n// ->   pix=1 => r = I0^1/3 / dist^2/3\n// graph: see https://www.desmos.com/calculator/6m7cebockb\n// from star shader https://www.shadertoy.com/view/Xty3zc\n\n\n#define rnd(x)  fract( 4356.17 * sin( 1e4*x ) )\n#define srnd(x) ( 2.* rnd(x) -1. )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float r, t = iTime,t1,v;\n    vec2 R = iResolution.xy, P;\n    U =  (2.*U-R) / R.y;\n\n    O -= O;\n    \n  if (abs(U.x)<1.25*cos(1.2*(.5+.5*U.y))) // clamp out of the flame profile\n    for(float i=0.; i<3.*256.; i++) {\n       t1 = t + 6.28*rnd(i);\n        v = 2.+srnd(i+.7);\n        r = cos(1.4*fract(t1)) * (.2+rnd(i+.1));    \n        P = vec2(   cos(t1*v)*r ,          // particle location\n                 .2*sin (t1*v)*r + 2.*pow(fract(t1),1.5)-1.   ), \n        r = length(P-U),\n\t    O += U.x<0. \n             ? 1e-4 / pow(r,3.)            // pix = clamp ( Emit/dist^2 * Bessel )\n             : smoothstep(1.,.8, r*20.);   // pix = disk ( R/dist )\n    }\n    \n    O *= vec4(1,.5,.2,1);                  // color  \n    \n  //O += .3*texture(iChannel0,vec3(-U,-1));\n}","name":"Image","description":"","type":"image"}]}