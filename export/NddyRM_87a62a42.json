{"ver":"0.1","info":{"id":"NddyRM","date":"1653255803","viewed":238,"name":"Pixel Fun","username":"SnoopethDuckDuck","description":"Just messing around","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["pixelart"],"hasliked":0,"parentid":"NdtyRM","parentname":"Pixel Line Equation"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float sc = 0.15;mix(0.25, 0.1, tanh(iTime));\n    vec3 col = texelFetch(iChannel0, ivec2(sc *fragCoord), 0).rgb;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define pi 3.14159\n\nfloat h21(vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat pxLine(vec2 f, vec2 p, vec2 q) {\n    f -= p;\n    vec2 dir = .5 * (q - p),\n         v = step(abs(f - round(dir/dir.yx * f.yx)), vec2(0)),\n         a = step(abs(f - dir), abs(dir));  \n    return max(v.x, v.y) * a.x * a.y ;           \n}\n\nvec2 point(float i) {\n    float h = h21(vec2(i, i + 103.));\n    float h2 = h21(vec2(i + 53., i - 41.));\n    return round(40. * vec2(h,h2) - 20.);\n}\n\nvec3 pal(in float t, in vec3 d) {\n    return 0.5 + 0.5*cos( 6.28318*(0.5*t+d) );\n}\n\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n#define ths(a,b) tanh(a*sin(b))/tanh(a)\n\nvoid mainImage( out vec4 fragColor, in vec2 f )\n{\n    vec3 col = vec3(0);\n   // vec3 col2 = \n   \n    f -= vec2(40,30) - 0.5;\n\n    float n = 200.;\n    for (float i = 0.; i < n; i++) {\n        //i += 0.001 * floor(iTime);\n        float io = 2. * pi * i / n;\n        \n        float a = 1.5 + 0.5 * thc(12., 0.25 * io + 0.5 * iTime);\n        float b = 1.5 + 0.5 * ths(12., 0.25 * io + 0.5 * iTime);\n\n        \n        vec2 p = round(20. * vec2(cos(0.5 * io + iTime), sin(0.5 * io + iTime)));\n        vec2 q = round(20. * vec2(1. * cos(a * io + 2. * iTime), sin(b * io + 1. * iTime)));\n        col += 16./n * step(length(f-q), 0.);\n        \n        col += 8./n * pxLine(f, p, q) * pal(i / n + cos(0.5 * io + iTime), 0.5* vec3(0,1,2)/3.);\n    }     \n    col += 0.04;\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}