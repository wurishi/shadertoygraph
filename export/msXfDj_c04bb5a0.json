{"ver":"0.1","info":{"id":"msXfDj","date":"1689166075","viewed":64,"name":"Lightning Test2","username":"GBA","description":"a","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lightning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float width = 0.01;\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat plot(vec2 p, float val) {\n    return smoothstep(val - width, val, p.x) - smoothstep(val, val + width, p.x);\n}\n\nfloat noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 d = vec2(1.0, 0.0); \n    \n    float x1 = rand(i);\n    float x2 = rand(i + d.xy);\n    float x3 = rand(i + d.yx);\n    float x4 = rand(i + d.xx);\n    \n    float mix1 = mix(x1, x2, f.x);\n    float mix2 = mix(x3, x4, f.x);\n    \n    return mix(mix1, mix2, f.y);\n    \n}\n\nfloat fbm(vec2 p) {\n    return 0.5 * noise(p) + 0.25 * noise(2.0 * p) + 0.125 * noise(4.0 * p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x/iResolution.y;\n    uv.y /= ar;\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    float val = plot(uv + 0.1 * fbm(10. * (uv + 0.25 * iTime)), 0.5);\n    fragColor = vec4(vec3(0.0f, 0.5f * val, val),1.0);\n}","name":"Image","description":"","type":"image"}]}