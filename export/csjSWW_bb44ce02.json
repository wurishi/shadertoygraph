{"ver":"0.1","info":{"id":"csjSWW","date":"1670311422","viewed":72,"name":"Night Clock","username":"supergamebug","description":"A basic Clock shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["time","clock","shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float LineSDF(vec2 Space, vec2 a, vec2 b)\n{\n    vec2 ba = b-(a);\n    vec2 pa = Space-a;\n\n    float k = clamp(dot(pa,ba)/dot(ba,ba),0.,1.);\n\n    return length(pa-ba*k);\n\n}\n\n\nvec2 lerp(vec2 a, vec2 b, float t)\n{\n    return a + (b-a) * t;\n}\n\nfloat Flerp(float a, float b, float t)\n{\n    return a + (b-a) * t;\n}\n\n\n/*float CircleShape(vec2 Space, float Radius, vec2 Centre)\n{\n    UV = (UV-vec2(0.5)-(Centre))/Radius;\n    float Circ;\n    Circ = length(UV);\n    return Circ;\n}  \n\npreviously used for Circular Shape\nThanks to Envy24*/\n\n//DiskSDF\nfloat DiskSDF(vec2 Space, vec2 Centre, float Radius)\n{\n    return length(Centre-Space)-Radius;\n}\n\n\nfloat ClockDigits(float Time)\n{\n    float Digits = (15./3.)*Time;\n    float Custom = ((3.14)*(Digits/30.));\n    return Custom;\n}\n\n#define Sec 1.\n#define Mnt 360.\n#define Hr 129600.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy);\n    float ScreenRatio = iResolution.x/iResolution.y;\n    // float ScreenRatio = 1.;\n    uv.x *= ScreenRatio;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse.x *= ScreenRatio;\n\n    float HourPos = ClockDigits(5.);\n    float MinPos = ClockDigits(12.);\n\n    \n\n    vec3 col;\n    float FractTime = (floor(iTime))/36.;\n    float r;\n    vec2 p1 = vec2(.5,.5);\n    // p1.x *= ScreenRatio;\n\n    // Needles\n    vec2 Seconds = (vec2(sin((FractTime)/Sec),cos((FractTime)/Sec))/vec2(6.,6.)+vec2(0.5));\n    vec2 Minutes = vec2(sin((FractTime)/Mnt+MinPos),cos((FractTime)/Mnt+MinPos))/vec2(5.,5.)+vec2(0.5);\n    vec2 Hours = vec2(sin((FractTime)/Hr+HourPos),cos((FractTime)/Hr+HourPos))/vec2(8.,8.)+vec2(0.5);\n    \n    //float HourNeedle = step(LineSDF(uv,p1,Hours),0.015);\n    //float SecondsNeedle = step(LineSDF(uv,p1,Seconds),(0.005));    \n    //float MinNeedle = step(LineSDF(uv,p1,Minutes),(0.01));\n\n    float HourNeedle = smoothstep(0.017,0.,LineSDF(uv,p1,Hours));\n    float SecondsNeedle = smoothstep(0.01,0.,LineSDF(uv,p1,Seconds));\n    float MinNeedle = smoothstep(0.012,0.,LineSDF(uv,p1,Minutes));\n\n    \n\n    vec3 Needles = vec3(HourNeedle,(SecondsNeedle-MinNeedle)-HourNeedle,(MinNeedle-SecondsNeedle)-HourNeedle);\n\n\n\n    // Digits\n    float Shape = 0.;\n    vec2 Cust;\n    for(int i = 0; i<12; i++)\n    {\n        float D = float(i);\n        float TimeFrac = ClockDigits(D);\n        Cust = vec2(sin(TimeFrac),cos(TimeFrac));\n        float TestCirc = step((DiskSDF(uv,0.5+(Cust*.36),0.)),0.005);\n        Shape += TestCirc;\n    }\n \n    float Digit = Shape;\n\n    // Dial\n    float Dial = step(DiskSDF(uv,vec2(0.5),.01),.4)\n                    -step(DiskSDF(uv,vec2(0.5),.0),.4);\n                   \n\n    // Composite\n    col = vec3(Dial+Digit)+Needles;\n\n\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}