{"ver":"0.1","info":{"id":"3tV3DR","date":"1578698456","viewed":214,"name":"cube raytrace debug","username":"nabr","description":"just playing around\n\nmouse = everything","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["cube","raytrace","box","debug","idontdodrugs","wuerfel","quader","wannabebox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","previewfilepath":"/media/ap/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// -----------------------------------------------------\n// cube raytrace debug by nabr\n// https://www.shadertoy.com/view/3tV3DR\n// License Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)\n// https://creativecommons.org/licenses/by-nc/4.0/\n// -----------------------------------------------------\n\n\n// -------- texture\nfloat f(vec2 pp)\n{\n    vec3 ht = smoothstep(0., 12., 1. - dot(pp, pp)) * vec3(pp, 10. * exp(1.25 * sin(.5 * iTime))),\n         n = 100. * normalize(-abs(ht) - vec3(0, 0, .91)), p = vec3(0);\n    float tm = .35 * iTime;\n    for (float i = 0.; i <= 7.; i++)\n    {\n        p = 20. * n + vec3(cos(tm + i - p.x) + cos(tm + i - p.y), sin(i - p.y) + cos(i + p.x), 1);\n        p.xy = n.yz + (cos(i) * p.xy + sin(i) * abs(vec2(p.y, -p.x)));\n    }\n    return dot(vec3(4, 6, -10), -p);\n}\nfloat tex(in vec2 p)\n{\n    float m = .5 / texture(iChannel0, vec2(0.3)).x; // music\n    // -------- kinda bump\n    const vec2 e = vec2(.0009, 0);\n    vec3 sn = normalize(vec3(f(p + e) - f(p - e), f(p + e.yx) - f(p - e.yx), -.25));\n    return clamp(dot(normalize(vec3(2. * p, m)), -sn), .05, .85);\n}\n\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    vec2 R = iResolution.xy;\n    float _asp = ((min(iResolution.x/iResolution.y,iResolution.y/iResolution.x)));\n    float dc = max(0.,(abs(fract(U.x/_asp)-.5)-abs(fract(U.y/_asp)-.5))); //backtothe70seffect\n\n    O.xyz = dc + vec3(.2, 0.2, 0.25);\n    vec2 M = .2 * iTime + (6. * atan(iMouse.xy / R));\n    #define R3d(_a)(mat3(1,0,0,0,cos(_a.y),-sin(_a.y),0,sin(_a.y),cos(_a.y))*mat3(cos(_a.x),0,sin(_a.x),0,1,0,-sin(_a.x),0,cos(_a.x)))\n    vec3 o = R3d(M) * vec3(.001, .001, float( (fract(.1*iTime)<.5)?1.:-.25));\n    vec3 d = R3d(M) * vec3((U - .5 * R) / R.y, 1);\n    \n    // -------- box\n    // https://iquilezles.org/articles/boxfunctions\n    vec3 no = o * 1. / d;\n    vec3 k = .25 * abs(1. / d);\n    vec3 pin = (-k) - no, pot = k - no;\n    float tN = max(pin.x, max(pin.y, pin.z));\n    float tF = min(pot.x, min(pot.y, pot.z));\n    if (tN < tF)\n    {\n        vec3 pos = (o + tF * d);\n        vec3 n = /*sign(d) */ step(pot, pot.zxy) * step(pot, pot.yzx);\n        float tx = (abs(n.x * tex(pos.zy) + n.y * tex(pos.zx) + n.z * tex(pos.xy)));\n        // -------- shader box\n        O.xyz = sin(vec3(1.8, 2.4, 2.7) * tx * 2.25 + 2.) * 0.35 + 0.53;\n        O.xyz =(vec3(.7, .1, 0) * pow(dot(pos, vec3(-2, 1, -2)), 2.))//red lines\n            \t+ mix(O.xyz, vec3(.24, .36, .4), tx - 1.);\n    };\n}","name":"Image","description":"","type":"image"}]}