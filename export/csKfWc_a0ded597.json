{"ver":"0.1","info":{"id":"csKfWc","date":"1698725428","viewed":42,"name":"Rand: Old-Style stdlib rand()","username":"foodini","description":"An algorithm very similar to this (the constants in the generator were different primes, but similar starting points generated similar values.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Just a quick way to visually show the ouch-factor of an old RNG mechanism.\n// The standard library uses something similar now, but with a rotating set\n// of seeds.\n\nint old_style_stdlib_seed;\nvoid old_style_stdlib_srand(int seed) {\n    old_style_stdlib_seed = seed;\n}\nfloat old_style_stdlib() {\n    old_style_stdlib_seed = old_style_stdlib_seed * 1500450271 + 98746321;\n    return float(old_style_stdlib_seed) / float(0x7fffffff);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    old_style_stdlib_srand(int(fragCoord.y*iResolution.x + fragCoord.x + iResolution.x*iResolution.y)*iFrame);\n    fragColor = vec4(old_style_stdlib());\n}","name":"Image","description":"","type":"image"}]}