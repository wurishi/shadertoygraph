{"ver":"0.1","info":{"id":"sljGzh","date":"1708923380","viewed":60,"name":"Black-Hole","username":"Handolf","description":"A simple black hole shader (not physically accurate)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["distortion","blackhole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.*fragCoord/iResolution.x;\n    \n    vec2 pos = fragCoord/iResolution.x - vec2(0.5, 0.28);\n    float r = length(pos);\n    \n    vec2 disp = normalize(pos)*(-0.05/(r));\n\n    fragColor = vec4(texture(iChannel0, uv + disp).rgb * smoothstep(0.1, 0.11, 2.*r), 1.);\n}","name":"Image","description":"","type":"image"}]}