{"ver":"0.1","info":{"id":"XX2Bzh","date":"1729195904","viewed":56,"name":"Dolphins","username":"ulyana","description":"sunnyday","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sunny"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float waveHeight = 0.05;  // Высота волны\n    float waveSpeed = 5.0;\n    float frequency = 10.0;\n    float time = iTime * waveSpeed;\n\n    // Положение корабля по X (плавает слева направо и обратно)\n    float shipX = 0.5 + sin(iTime * 0.2) * 0.4;\n\n    // Волны на воде (весь экран)\n    float wave = cos(uv.x * frequency + time) * waveHeight;\n    \n    // Положение корабля по Y с учётом волны (привязано к волнам)\n    float boatY = 0.15 + cos(shipX * frequency + time) * waveHeight;\n\n    // Цвет воды\n    vec3 waterColor = vec3(0.2, 0.7, 1.0);\n    fragColor = vec4(waterColor, 1.0);\n\n    // Корпус корабля (прямоугольная форма)\n    vec3 boatHullColor = vec3(0.4, 0.1, 0.0);  // Коричневый цвет корпуса\n    float boatWidth = 0.15;\n    float boatHeight = 0.07;\n    if (uv.y < boatY && uv.y > boatY - boatHeight && uv.x > shipX - boatWidth && uv.x < shipX + boatWidth) {\n        fragColor = vec4(boatHullColor, 1.0);  // Прямоугольный корпус\n    }\n\n    // Мачта корабля\n    vec3 mastColor = vec3(0.7, 0.7, 0.7);  // Серый цвет мачты\n    float mastWidth = 0.02;\n    float mastHeight = 0.15;\n    if (uv.y < boatY + mastHeight && uv.y > boatY && uv.x > shipX - mastWidth && uv.x < shipX + mastWidth) {\n        fragColor = vec4(mastColor, 1.0);\n    }\n\n    // Парус корабля (сделан более заметным)\n    vec3 sailColor = vec3(1.0, 1.0, 1.0);  // Белый парус\n    float sailHeight = 0.12;\n    float sailWidth = 0.08;\n    if (uv.y < boatY + sailHeight && uv.y > boatY && uv.x > shipX && uv.x < shipX + sailWidth) {\n        fragColor = vec4(sailColor, 1.0);\n    }\n\n    // Дельфины, которые прыгают рядом с кораблем (в виде эллипсов)\n    for (int i = -1; i <= 1; i += 2) {\n        // Смещение дельфинов по X относительно корабля\n        float dolphinX = shipX + 0.25 * float(i);  // Дельфины расположены слева и справа от корабля\n        float dolphinY = 0.1 + abs(sin(iTime * 3.0 + float(i) * 1.5)) * 0.1;  // Прыжки дельфинов вверх и вниз\n\n        vec3 dolphinColor = vec3(0.0, 0.4, 0.8);  // Цвет дельфинов (синий)\n        float dolphinRadiusX = 0.06;  // Радиус по оси X (ширина эллипса)\n        float dolphinRadiusY = 0.03;  // Радиус по оси Y (высота эллипса)\n\n        // Для эллипса нужно нормализовать расстояние по осям X и Y\n        vec2 distanceToDolphin = (uv - vec2(dolphinX, dolphinY)) / vec2(dolphinRadiusX, dolphinRadiusY);\n        if (dot(distanceToDolphin, distanceToDolphin) < 1.0) {\n            fragColor = vec4(dolphinColor, 1.0);  // Отображение дельфинов в виде эллипсов\n        }\n    }\n\n    // Солнце и лучи\n    uv = fragCoord.xy / iResolution.y;\n    float sunRadius = 0.2;\n    float sunX = 0.2;\n    float sunY = 0.8;\n    vec2 sunCenter = vec2(sunX, sunY);\n\n    // Солнечные лучи\n    float numRays = 15.0;  // Количество лучей\n    float rayWidth = 0.1; // Ширина лучей\n    float rayIntensity = 0.1;  // Интенсивность лучей\n\n    // Рассчитываем угол для каждой точки\n    vec2 toSun = uv - sunCenter;\n    float angle = atan(toSun.y, toSun.x);\n    \n    // Создаем лучи, использую синус для чередования \"светлого и темного\" в виде лучей\n    float rayEffect = abs(sin(angle * numRays)) * rayIntensity;\n\n    // Если точка находится внутри радиуса луча, применяем лучевой эффект\n    if (distance(uv, sunCenter) < sunRadius + rayEffect) {\n        fragColor.rgb += vec3(1.0, 1.0, 0.0) * rayEffect;  // Применяем желтый цвет для лучей\n    }\n\n    // Рисуем само солнце\n    if (distance(uv, sunCenter) < sunRadius) {\n        fragColor = vec4(1.0, 1.0, 0.0, 1.0);  // Желтое солнце\n    }\n\n    // Волны (общие, для воды)\n    uv = fragCoord.xy / iResolution.xy;\n    boatY = 0.127 + wave;\n    if (uv.y < boatY) {\n        vec3 boatColor = vec3(0.0, 0.3, 1.0);\n        float boatWidth = 1.0;\n        if (uv.x > 0.5 - boatWidth && uv.x < 0.5 + boatWidth) {\n            fragColor = vec4(boatColor, 1.0);\n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}