{"ver":"0.1","info":{"id":"clsyz8","date":"1690400861","viewed":88,"name":"galaxy stars light","username":"nayk","description":"galaxy stars light","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["galaxystarslight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float RETICULATION = 3.;  // strenght of dust texture\nconst float NB_ARMS = 5.;       // number of arms\n//const float ARM = 3.;         // contrast in/out arms\nconst float COMPR = .1;         // compression in arms\nconst float SPEED = .1;\nconst float GALAXY_R = 1./2.;\nconst float BULB_R = 1./4.;\nconst vec3 GALAXY_COL = vec3(.9,.9,1.); //(1.,.8,.5);\nconst vec3 BULB_COL   = vec3(1.,.8,.8);\nconst vec3 SKY_COL    = .5*vec3(.1,.3,.5);\n\t\t\n#define t iTime\nconst float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, s, -s, c );\n}\n\n// --- base noise\nfloat tex(vec2 uv) \n{\n\tfloat n = texture(iChannel0,uv, 0.).r;\n\t\n#define MODE 3  // kind of noise texture\n#if MODE==0         // unsigned\n\t#define A 2.\n\treturn n;\n#elif MODE==1       // signed\n\t#define A 3.\n\treturn 2.*n-1.;\n#elif MODE==2       // bulbs\n\t#define A 3.\n\treturn abs(2.*n-1.);\n#elif MODE==3       // wires\n\t#define A 1.5\n\treturn 1.-abs(2.*n-1.);\n#endif\n}\n\n\n// --- perlin turbulent noise + rotation\nfloat noise(vec2 uv)\n{\n\tfloat v=0.;\n\tfloat a=-SPEED*t,\tco=cos(a),si=sin(a); \n\tmat2 M = mat2(co,-si,si,co);\n\tconst int L = 70;\n\tfloat s=1.;\n\tfor (int i=0; i<L; i++)\n\t{\n\t\tuv = M*uv;\n\t\tfloat b = tex(uv*s);\n\t\tv += 0.1/s* pow(b,RETICULATION); \n\t\ts *= s*12.0;\n\t}\n\t\n    return v/2.;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy/iResolution.y-vec2(0.8,.5);\n\tvec3 col;\n\t uv*= rotationMatrix( 100.0 * -iTime );\n\t// spiral stretching with distance\n\tfloat rho = length(uv); // polar coords\n\tfloat ang = atan(uv.y,uv.x);\n\tfloat shear = 2.*log(rho); // logarythmic spiral\n\tfloat c = cos(shear), s=sin(shear);\n\tmat2 R = mat2(c,-s,s,c);\n\n\t// galaxy profile\n\tfloat r; // disk\n\tr = rho/GALAXY_R; float dens = exp(-r*r);\n\tr = rho/BULB_R;\t  float bulb = exp(-r*r);\n\tfloat phase = NB_ARMS*(ang-shear);\n\t// arms = spirals compression\n\tang = ang-COMPR*cos(phase)+SPEED*t;\n\tuv = rho*vec2(cos(ang),sin(ang));\n\t// stretched texture must be darken by d(new_ang)/d(ang)\n\tfloat spires = 1.+NB_ARMS*COMPR*sin(phase);\n\t// pires = mix(1.,sin(phase),ARM);\n\tdens *= .7*spires;\t\n\t\n\t// gaz texture\n\tfloat gaz = noise(1.09*1.2*R*uv);\n\tfloat gaz_trsp = pow((1.-gaz*dens),2.);\n\n\t// stars\n\tfloat a=SPEED*t, co=cos(a),si=sin(a); \n\tmat2 M = mat2(co,-si,si,co);\n\t// adapt stars size to display resolution\n\tfloat ratio = .8*iResolution.y/iChannelResolution[0].y;\n\tfloat stars1 = texture(iChannel1,ratio*uv+.5, 0.).r, // M*uv\n\t      stars2 = texture(iChannel0,ratio*uv+.5, 10.*iTime).r,\n\t\t  stars = pow(1.-(1.-stars1)*(1.-stars2),5.);\n\t\n\tstars = pow(stars,5.);\n\t\n\n\t\n\t// mix all\t\n\tcol = mix(SKY_COL,\n\t\t\t  gaz_trsp*(0.2*GALAXY_COL) + 1.2*stars*iTime, \n\t\t\t  dens);\n\tcol = mix(col, 3.5*BULB_COL, bulb);\n\t\t\n\tfragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}