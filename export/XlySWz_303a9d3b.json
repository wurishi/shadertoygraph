{"ver":"0.1","info":{"id":"XlySWz","date":"1483743155","viewed":224,"name":"Twisted Box Intersecting Sphere","username":"sea","description":"Experiement","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","sphere","intersection","box","twisting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 spin (vec3 p, float r)\n{\n    r *= 3.1415926 / 180.0;\n    float x = p.x * cos(r) - p.z * sin(r);\n    float z = p.x * sin(r) + p.z * cos(r);\n    return vec3(x, p.y, z);\n}\n\nfloat sphere (vec3 p, float r)\n{\n    return (p.x * p.x + p.y * p.y + p.z * p.z) * r;\n}\n\nfloat box (vec3 p)\n{\n    p = spin(p, p.y * 360.0 * iTime * 0.1);\n    // p.xz += p.y + 0.5;\n    return length(max((abs(p) * 4.0) - 2.0, 0.0));\n}\n\nfloat ren (vec3 p)\n{\n    float b = box(p);\n    float s = sphere(p, 1.25);\n    return s > 1.0 ? b < 1.0 ? 0.0 : 1.0 : 1.0;\n}\n\nvec3 normal (vec3 p)\n{\n    return normalize(vec3(\n        ren(vec3(p.x - 0.1, p.y, p.z)) - ren(vec3(p.x + 0.1, p.y, p.z)),\n        ren(vec3(p.x, p.y - 0.1, p.z)) - ren(vec3(p.x, p.y + 0.1, p.z)),\n        ren(vec3(p.x, p.y, p.z - 0.1)) - ren(vec3(p.x, p.y, p.z + 0.1))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 ws = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    ws.x *= iResolution.x / iResolution.y;\n    vec3 ro = vec3(0.0, 0.0, -1.5);\n    vec3 rd = normalize(vec3(ws * 1.0, 1.0));\n    \n    vec3 color = vec3(0.0);\n    vec3 light = vec3(0.0, 0.0, 0.0);\n    for (float i = 0.0; i < 2.8; i += 0.01)\n    {\n        vec3 p = ro + rd * i;\n        p = spin(p, iTime * 200.0);\n        if (ren(p) < 1.0)\n        {\n            color = vec3(dot(normalize(p - light), normal(p)));\n            break;\n        }\n    }\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}