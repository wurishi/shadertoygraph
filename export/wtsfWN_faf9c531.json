{"ver":"0.1","info":{"id":"wtsfWN","date":"1596804915","viewed":167,"name":"Feeding material for shells","username":"gaz","description":"fractal","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p)\n{\n\tfloat s=3.;\n\tfor(float i=0.;i++<4.;)\n    {\n        p=mod(p-1.,2.)-1.;\n        p=abs(p);\n\t\tfloat r2=1.4/dot(p,p);\n\t\tp*=r2;\n\t\ts*=r2;\n\t}\n\treturn dot(p,normalize(vec3(-1,5,2.+1.5*sin(iTime+.5*sin(.3*iTime)))))/s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=(2.*fragCoord-iResolution.xy)/iResolution.y;\n\tvec3 p,\n  \t\tro=vec3(1.5,1.5,iTime*1.2),\n  \t\tw=normalize(vec3(.3*sin(iTime*.5),.5,1)),\n  \t\tu=normalize(cross(w,vec3(cos(-iTime*.16),sin(-iTime*.16),0))),\n  \t\trd=mat3(u,cross(u,w),w)*normalize(vec3(uv,2));\n\tfloat h=0.8,d,i;\n\tfor(i=1.;i<150.;i++)\n    {\n    \tp=ro+rd*h;\n\t\td=map(p);\n    \tif(d<.001)break;\n    \th+=d;\n\t}\n    vec3 col=30.*vec3(cos(p.yxx*1.2)*.5+.5)/i;\n    if(i<3.)col*=.1; \n    else if(i<7.)col=vec3(1,.25,0); \n\tfragColor.xyz=pow(col,vec3(1.5,.8,1.3));\n    \n}\n","name":"Image","description":"","type":"image"}]}