{"ver":"0.1","info":{"id":"ltyczD","date":"1535320110","viewed":334,"name":"webcam kaleidoscope","username":"XIX","description":"kaleidoscope","likes":8,"published":1,"flags":2,"usePreview":0,"tags":["kaleidoscope","outlands"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\n\nvec4 show_debug(vec2 po,float f,float s) \n{\n    if(mod((2.0*PI)+po.x+(iTime*s),(2.0*PI))>f/2.0)\n    {\n\t    return vec4(0.0);\n    }\n    else\n    {\n\t    vec2 cc= vec2(sin(po.x),cos(po.x))*po.y;\n\t    return texture( iChannel0, cc+vec2(0.5,0.5) ).rgba;\n   \t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n// speed of constant rotation, radians per second\n    float s=(PI/8.0);\n\n// Number of mirror segments\n    float n=16.0;\n\n// image zoom\n    float z=1.5;\n\n    \n    \n// Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n// the center of the screen\n    vec2 cc = uv - vec2(0.5,0.5);\n// convert to polar coordinates\n    vec2 po = vec2( atan(cc.x,cc.y) , length(cc) );\n\n// perform mirror on angle part\n    float f=(2.0*PI/n);    \n    float m=mod((2.0*PI)+po.x,f);\n    if(m>f/2.0){ m=f-m; }\n    \n//fragColor=show_debug(po,f,s); return;\n    \n       \n// include constant rotation\n    po.x = m+(iTime*s);\n// include zoom\n    po.y /=z;\n    \n// convert back from polar coords\n    cc= vec2(sin(po.x),cos(po.x))*po.y;\n\n\n// fetch color from webcam\n    fragColor  = texture( iChannel0, cc+vec2(0.5,0.5) ).rgba;\n\n// adjust contrast\n    fragColor=fragColor*2.0-0.5;\n    \n}","name":"Image","description":"","type":"image"}]}