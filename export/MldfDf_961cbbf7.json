{"ver":"0.1","info":{"id":"MldfDf","date":"1541426612","viewed":265,"name":"Typographic empire","username":"kesson","description":"Based on Basic raymarcher by Robobo1221\nhttps://www.shadertoy.com/view/XtdBDX","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["raymarching","noise","texture","landscape","geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Film grain based on https://www.shadertoy.com/view/4sXSWs\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 color = texture(iChannel1, uv);\n    \n    float strength = 16.0;\n    \n    float x = (uv.x + 4.0 ) * (uv.y + 4.0 ) * (iTime * 10.0);\n\tvec4 grain = vec4(mod((mod(x, 13.0) + 1.0) * (mod(x, 123.0) + 1.0), 0.01)-0.005) * strength;\n    \n    grain = 1.0 - grain;\n\tfragColor = color * grain;\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Based on https://www.shadertoy.com/view/XtdBDX\n\nconst int marchSteps = 512;\nconst float farPlane = 10.0;\n\nvec3 transform(vec3 p){\n\tvec3 tp = p;\n    \n    tp.y += 3.0 + abs(sin(iTime*.1)*.5);\n    tp.z += iTime*.5;\n    \n    return tp;\n}\n\nvoid calculateShape(vec3 p, out float os){\n    p = transform(p);\n    \n    float noise = texture(iChannel0, p.xz * 0.01).x * (1.0 / 2.0);\n    \t  noise += texture(iChannel0, p.xy * 0.02).x * (1.0 / 4.0);\n    \t  noise += texture(iChannel0, p.xz * 0.04).x * (1.0 / 8.0);\n    \t  //noise += texture(iChannel0, p.xz * 0.08).x * (1.0 / 16.0);\n    \t  //noise += texture(iChannel0, p.yz * 0.1).x * (1.0 / 8.0);\n   \t\n\tos = p.y - noise * 3.5;\n    //os = p.y;\n}\n\nbool calculateRayHit(float os, float rayLength){\n\treturn rayLength > os * rayLength;\n}\n\nvoid rayMarch(vec3 worldVector, out float depth, out vec3 rayPosition){\n    const float rMarchSteps = 1. / float(marchSteps);\n    \n    const float startDepth = 0.;\n    const float endDepth = farPlane;\n    \n    vec3 increment = (endDepth - startDepth) * worldVector * rMarchSteps;\n    // increment is 10 * pixelPos * 0.001953125\n    rayPosition = increment + startDepth * worldVector;    \n    // rayposition is increment (-0.0195325 <> 0.0195325) + 0 * -1<>1\n        \n    float os = 0.0;\n    \n    depth = 0.0;\n    \n    for (int i = 0; i < marchSteps; ++i, rayPosition += increment){\n        float rayLength = length(rayPosition);\n        calculateShape(rayPosition, os);\n        \n        depth = rayLength;\n        \n        if (calculateRayHit(os, rayLength)) break;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float depth;\n    \n    vec2 texcoord = fragCoord/iResolution.xy;\n    vec3 worldVector = normalize(vec3(texcoord * (2.0+cos(iTime*.1)*.5) - 1., 1.));\n    \n    vec3 color = vec3(0.0);\n    vec3 rayPosition;\n    \n    rayMarch(worldVector, depth, rayPosition);\n   \tvec3 transformed = transform(rayPosition);\n    \n    color = vec3(0.1 + exp2(-transformed.y + 0.75)) * (1. - exp2(-length(rayPosition)));\n\n    fragColor = vec4(color,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}