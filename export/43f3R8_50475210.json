{"ver":"0.1","info":{"id":"43f3R8","date":"1707099105","viewed":207,"name":"A-Ha--test-piano","username":"jorge2017a2","description":"//a-ha - Take On Me - EASY Piano Tutorial by PlutaX\n///https://www.youtube.com/watch?v=xcBpGXEvA70","likes":11,"published":1,"flags":8,"usePreview":0,"tags":["test","sound","piano","aha"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define D3(a,b,c) n3=(s>=a && s<=c)? vec3(a,b,c):n3;\n\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj-0.05,0.0)); return colOut;}\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\n\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\n\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\nvec3 soloLinea(vec2 p, vec3 col)\n{   float d1=p.y-0.8;\n    col= DrawFigSolo(vec3(1.0,0.0,0.0), col, abs(d1)-0.001);\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n  vec2 uv = fragCoord/iResolution.xy;\n    float tam=7.0*4.0;\n    uv*=tam;\n    vec2 iuv=floor(uv*5.0);\n    vec2 fuv=fract(uv)-0.5;\n    vec3 col=vec3(1.0);\n    \n    \n    //linea horizontales\n    float d1=uv.y-1.0;\n    d1=abs(d1)-0.125;\n    col= DrawFigDelgado(vec3(0.0),col, d1 );\n    \n    \n    //lineas verticales\n    float pos=mod(uv.x,0.5);\n    float d2=pos;\n    d2=abs(d2)-0.01;\n    col= DrawFigDelgado(vec3(0.0),col, d2 );\n   \n  \n  \n\n  float t = mod( iTime+1.0, ttotal);\n // tune\n  float tempo = 0.6;\n  float s = t*tempo;\n // vec2 n = vec2(0);\n vec3 n3=vec3(0.0);\n \n  \n D3(0.,42.,0.125) D3(0.125,42.,0.25) D3(0.25,38.,0.375) D3(0.375,35.,0.5) D3(0.625,35.,0.75) D3(0.875,40.,1.)\n D3(1.125,40.,1.25) D3(1.375,40.,1.5) D3(1.5,44.,1.625) D3(1.625,44.,1.75) D3(1.75,45.,1.875) D3(1.875,47.,2.)\n D3(2.,45.,2.125) D3(2.125,45.,2.25) D3(2.25,45.,2.375) D3(2.375,40.,2.5) D3(2.625,38.,2.75) D3(2.875,42.,3.)\n D3(3.125,42.,3.25) D3(3.375,42.,3.5) D3(3.5,40.,3.625) D3(3.625,40.,3.75) D3(3.75,42.,3.875) D3(3.875,40.,4.)\n D3(4.,42.,4.125) D3(4.125,42.,4.25) D3(4.25,38.,4.375) D3(4.375,35.,4.5) D3(4.625,35.,4.75) D3(4.875,40.,5.)\n D3(5.125,40.,5.25) D3(5.375,40.,5.5) D3(5.5,44.,5.625) D3(5.625,44.,5.75) D3(5.75,45.,5.875) D3(5.875,47.,6.)\n D3(6.,45.,6.125) D3(6.125,45.,6.25) D3(6.25,45.,6.375) D3(6.375,40.,6.5) D3(6.625,38.,6.75) D3(6.875,42.,7.)\n D3(7.125,42.,7.25) D3(7.375,42.,7.5) D3(7.5,40.,7.625) D3(7.625,40.,7.75) D3(7.75,42.,7.875) D3(7.875,40.,8.)\n D3(8.,42.,8.125) D3(8.125,42.,8.25) D3(8.25,38.,8.375) D3(8.375,35.,8.5) D3(8.625,35.,8.75) D3(8.875,40.,9.)\n D3(9.,28.,10.) D3(9.125,40.,9.25) D3(9.375,40.,9.5) D3(9.5,44.,9.625) D3(9.625,44.,9.75) D3(9.75,45.,9.875)\n D3(9.875,47.,10.) D3(10.,45.,10.125) D3(10.125,45.,10.25) D3(10.25,45.,10.375) D3(10.375,40.,10.5) D3(10.625,38.,10.75)\n D3(10.875,42.,11.) D3(11.,26.,12.) D3(11.125,42.,11.25) D3(11.375,42.,11.5) D3(11.5,40.,12.) D3(12.,23.,13.)\n D3(12.,50.,12.375) D3(12.375,50.,12.625) D3(12.625,49.,12.75) D3(12.75,47.,13.875) D3(12.875,35.,13.875) D3(14.,21.,15.)\n D3(14.,49.,14.125) D3(14.125,49.,14.375) D3(14.438,49.,14.688) D3(14.75,45.,15.)\n \n   \n   float d3;\n  \n   \n  \n   const int tamm=85;\n    \n    float times[85] = float[85](\n    0.125,0.25,0.375,0.125,0.25,0.375,0.5,\n    0.75,1.,1.25,1.5,1.625,1.75,1.875,2.0,2.125,\n    2.25,2.375,2.5,2.75,3.,3.25,3.5,3.625,3.75,\n    3.875,4.0,4.125,4.25,4.375,4.5,4.75,5.0,5.25, \n    5.5,5.625,5.75,5.875,6.0,6.125,6.25,6.375,\n    6.5,6.75,7.0,7.25,7.5,7.625,7.75,7.875,8.0,  \n    8.125,8.25,8.375,8.5,8.75,9.0,10.0,9.25,9.5,\n    9.625,9.75,9.875,10.0,10.125,10.25,10.375,   \n    10.5,10.75,11.,12.,11.25,11.5,12.0,13.0,12.375,\n    12.625,12.75,13.875,13.875,15.0,14.125,\n    14.375,14.6875,15.0);  //86\n\n\n    \n    float notes[85] = float[85](\n    42.,42.,38.,42.,42.,38.,35.,35.,40.,40.,40.,44.,44.,45.,47.,45.,\n    45.,45.,40.,38.,42.,42.,42.,40.,40.,42.,40.,42.,42.,38.,35.,35.,\n    40.,40.,40.,44.,44.,45.,47.,45.,45.,45.,40.,38.,42.,42.,42.,40.,\n    40.,42.,40.,42.,42.,38.,35.,35.,40.,28.,40.,40.,44.,44.,45.,47.,\n    45.,45.,45.,40.,38.,42.,26.,42.,42.,40.,23.,50.,50.,49.,47.,35.,\n    21.,49.,49.,49.,45.);\n\n    \n    //float tt=iTime*0.25;\n    float tt=s;\n    \n    float df=9999.9;\n    //dibujar diagrama\n    for (int i=tamm; i>1; --i)\n    {        float ypos=tam-1.5+times[i]+s;\n        float xpos=notes[i]+0.25;\n        \n        float dt=sdBox(uv-vec2(xpos*0.25,ypos-0.625*float(i)),vec2(0.25,0.5) );\n        df=min(df,dt);\n    }\n\n    col= DrawFigSolo(vec3(0.0),col, df );\n   \n   \n   if(n3.y>0.0)\n   {\n    d3=sdBox(uv-vec2(n3.y*0.25,tam-t),vec2(0.25,0.5) );\n    col= DrawFigSolo(vec3(1.0,0.0,0.),col, d3 );\n   }\n    \n  \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float ttotal=27.0;","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"//Referencia de sonido IQ y Gaz\n//Modificado por Jorge2017a2---jorgefp\n\n//referencia video\n//a-ha - Take On Me - EASY Piano Tutorial by PlutaX\n///https://www.youtube.com/watch?v=xcBpGXEvA70\n\n#define PI acos(-1.)\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n#define TWO_PI 6.2831\n\n//const float PI = 3.1415926;\n\n#define DD(a,b) n=(s>=a)? vec2(a,b):n;\n#define D3(a,b,c) n3=(s>=a && s<=c)? vec3(a,b,c):n3;\n\n\nconst float pi = 3.1415927;\nconst float tau = 6.283185;\n//const float ttotal=40.0;\n\n//gaz\n#define osc_sin(x)sin((x)*TAU)\n#define osc_saw(x)(1.-fract(x)*2.)\n#define osc_sqr(x)sign(0.5-fract(x))\n#define osc_tri(x)(asin(sin((x)*PI))/PIH)\n\n\n\nfloat wave( float x, float dxdt, in vec2 v )\n{   //referencia Inigo Quilez 2019\n    float f2;\n    f2=osc_sin(x);\n    float fx=f2;\n    return fx;\n}\n\nfloat SoundIq(float time)\n{ ///referencia de notas musicales... iq \n  time = mod( time+1.0, ttotal);\n // tune\n  float tempo = 0.6;\n  float s = time*tempo;\n // vec2 n = vec2(0);\n vec3 n3=vec3(0.0);\n  \n \n D3(0.,42.,0.125) D3(0.125,42.,0.25) D3(0.25,38.,0.375) D3(0.375,35.,0.5) D3(0.625,35.,0.75) D3(0.875,40.,1.)\n D3(1.125,40.,1.25) D3(1.375,40.,1.5) D3(1.5,44.,1.625) D3(1.625,44.,1.75) D3(1.75,45.,1.875) D3(1.875,47.,2.)\n D3(2.,45.,2.125) D3(2.125,45.,2.25) D3(2.25,45.,2.375) D3(2.375,40.,2.5) D3(2.625,38.,2.75) D3(2.875,42.,3.)\n D3(3.125,42.,3.25) D3(3.375,42.,3.5) D3(3.5,40.,3.625) D3(3.625,40.,3.75) D3(3.75,42.,3.875) D3(3.875,40.,4.)\n D3(4.,42.,4.125) D3(4.125,42.,4.25) D3(4.25,38.,4.375) D3(4.375,35.,4.5) D3(4.625,35.,4.75) D3(4.875,40.,5.)\n D3(5.125,40.,5.25) D3(5.375,40.,5.5) D3(5.5,44.,5.625) D3(5.625,44.,5.75) D3(5.75,45.,5.875) D3(5.875,47.,6.)\n D3(6.,45.,6.125) D3(6.125,45.,6.25) D3(6.25,45.,6.375) D3(6.375,40.,6.5) D3(6.625,38.,6.75) D3(6.875,42.,7.)\n D3(7.125,42.,7.25) D3(7.375,42.,7.5) D3(7.5,40.,7.625) D3(7.625,40.,7.75) D3(7.75,42.,7.875) D3(7.875,40.,8.)\n D3(8.,42.,8.125) D3(8.125,42.,8.25) D3(8.25,38.,8.375) D3(8.375,35.,8.5) D3(8.625,35.,8.75) D3(8.875,40.,9.)\n D3(9.,28.,10.) D3(9.125,40.,9.25) D3(9.375,40.,9.5) D3(9.5,44.,9.625) D3(9.625,44.,9.75) D3(9.75,45.,9.875)\n D3(9.875,47.,10.) D3(10.,45.,10.125) D3(10.125,45.,10.25) D3(10.25,45.,10.375) D3(10.375,40.,10.5) D3(10.625,38.,10.75)\n D3(10.875,42.,11.) D3(11.,26.,12.) D3(11.125,42.,11.25) D3(11.375,42.,11.5) D3(11.5,40.,12.) D3(12.,23.,13.)\n D3(12.,50.,12.375) D3(12.375,50.,12.625) D3(12.625,49.,12.75) D3(12.75,47.,13.875) D3(12.875,35.,13.875) D3(14.,21.,15.)\n D3(14.,49.,14.125) D3(14.125,49.,14.375) D3(14.438,49.,14.688) D3(14.75,45.,15.)\n \n \n  \n  // lower one octave\n  n3.y -=12.; //12 notas\n      \n  // compute note frequency and time  \n  float f = 440.0*pow( 2.0, float(n3.y-69.)/12.0 );\n  float t = time - float(n3.x)/tempo;\n  if( n3.x==0.0 ) return 0.0;\n\n  // prepare wave parameters\n  float w = tau*f;\n  float dwdt = w/iSampleRate; // derivative\n    \n  // mix between bandlimited and raw saw waves  \n  vec2 v = smoothstep(-0.2,0.2,sin(t*vec2(1.0,0.5)) );\n  // build instrument\n  \n  float f1,y;\n  f1=wave(w*t,1.00*dwdt,v);\n  float wf  = 0.4*f1;\n  y=f1*wf;\n  float offset=n3.x+n3.z;\n   y*=exp(-1.0/n3.z * (t -offset) );\nreturn y;\n}\n\n\nvec2 mainSound( in int samp, float time )\n{ float t1=mod(time, ttotal);\n    float y;\n    y= SoundIq(t1);\n  return vec2(y);\n}   \n","name":"Sound","description":"","type":"sound"}]}