{"ver":"0.1","info":{"id":"dlGGW1","date":"1683904545","viewed":168,"name":"Simple Color Film Grain","username":"yosoymin","description":"Generates simple film grain and overlays it over a texture.","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["noise","texture","filmgrain"],"hasliked":0,"parentid":"NlXfD8","parentname":"Simple Film Grain Shader practic"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 filmPixel(vec2 uv)\n{\n    mat2x3 uvs = mat2x3(uv.xxx, uv.yyy) + mat2x3(vec3(0, 0.1, 0.2), vec3(0, 0.3, 0.4));\n    return fract(sin(uvs * vec2(12.9898, 78.233) * iTime) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // simulate fixed resolution (ex: 720p)\n    vec2 filmRes = vec2(1280, 720);\n    vec2 coord;\n    vec2 rest = modf(uv * filmRes, coord);\n\n    // Calculate noise\n    vec3 noise00 = filmPixel(coord / filmRes);\n    vec3 noise01 = filmPixel((coord + vec2(0, 1)) / filmRes);\n    vec3 noise10 = filmPixel((coord + vec2(1, 0)) / filmRes);\n    vec3 noise11 = filmPixel((coord + vec2(1, 1)) / filmRes);\n    \n    // bilinear\n    vec3 noise = mix(mix(noise00, noise01, rest.y), mix(noise10, noise11, rest.y), rest.x) * vec3(0.7, 0.6, 0.8);\n    \n    //vec3 col = noise;\n    \n    float mdf = 0.3; // increase for noise amount \n    vec3 tex = texture(iChannel0, uv).rgb;\n    vec3 col = tex + noise * mdf;\n\n    // Output to screen\n    fragColor.rgb = col;\n}","name":"Image","description":"","type":"image"}]}