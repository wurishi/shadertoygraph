{"ver":"0.1","info":{"id":"tt3cDf","date":"1610029508","viewed":67,"name":"Testing Grids","username":"Brofesor","description":"Trying to learn grids.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grids"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 Rot(float a) {\n float s = sin(a), c = cos(a) ;\n return mat2(c, -s, s, c) ;\n\n }\n\nfloat Cube(vec2 gv,float scale)\n{\nfloat a = smoothstep(scale,scale-0.01,abs(gv.x));\n    a *= smoothstep(scale,scale-0.01,abs(gv.y));\n    return a;\n\n}\nfloat currentTime(float time,vec2 id)\n{\n    float ttime3 = (sin(iTime  + id.y * 0.4)); // Line\n    float ttime2 = (sin(iTime  + length(id)/3.141)); //Circle\n    float ttime = (sin(iTime + distance(id.y,0.)/3.141 + distance(id.x,0.)/3.141));// Square\n    float t = 0.;\n  if(mod(time,30.) < 10.) t = ttime;\n  else if(mod(time,30.) < 20.) t = ttime2;\n  else if(mod(time,30.) < 30.) t = ttime3;\nreturn t;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 25.;\n   // uv *= Rot(iTime* 0.1);\n\n    \n    vec2 gv = fract(uv) -0.5;\n    vec2 id = floor(uv);\n    \n    \n    float current = currentTime(iTime*2.,id);\n    \n    vec3 col = vec3(Cube(gv* Rot(iTime),current)) * (vec3(0.1,0.6,0.9)* current);\n    \n    //if(gv.y > .40 || gv.x > .40) col = vec3(0.1,0.6,0.9);\n    \n    \n    \n\n\n\n\n\n\n\n    \n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}