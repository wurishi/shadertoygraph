{"ver":"0.1","info":{"id":"lXXGWM","date":"1707863690","viewed":67,"name":"Flower_tiles","username":"RashiSinha","description":"tiled flowers made from 2d shapes\n\nCreated By:\nSakshi Rathore and Rashi Sinha","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2dshapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n\nvec2 rotate(vec2 uv, float th) {\n  return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nvec2 tile (vec2 _st, float _zoom)\n{\n    _st*=_zoom;\n    return fract(_st);\n}\n\nfloat sdfCircle(vec2 uv, float r, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n\n  return length(vec2(x, y)) - r;\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n  vec2 pa = p-a, ba = b-a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h );\n}\n\nfloat sdEllipsoid( in vec3 p, in vec3 r , vec2 offset) {\n\n    p.xy -= offset;\n    float k0 = length(p/r);\n    float k1 = length(p/(r*r));\n    return k0*(k0-1.0)/k1;\n}\n\nfloat sdEgg( in vec2 p, in float ra, in float rb, vec2 offset )\n{\n    p -= offset;\n    p = rotate(p,0.79);\n    const float k = sqrt(3.0);\n    \n    p.x = abs(p.x);\n    \n    float r = ra - rb;\n\n    return ((p.y<0.0)       ? length(vec2(p.x,  p.y    )) - r :\n            (k*(p.x+r)<p.y) ? length(vec2(p.x,  p.y-k*r)) :\n                              length(vec2(p.x+r,p.y    )) - 2.0*r) - rb;\n}\n\nvec3 drawScene(vec2 uv) {\n  vec3 col = vec3(1.,0.964,0.914);\n  \n  //color palette\n  vec3 dark_green = vec3(0.09020, 0.40784, 0.42353);\n  vec3 light_green = vec3(0.51765, 0.85882, 0.79608);\n  vec3 light_pink = vec3(1.0, 0.57647, 0.51765);\n  vec3 med_pink = vec3(0.86275, 0.32549, 0.14510);\n  vec3 dark_pink = vec3(0.72157, 0.11765, 0.14902);\n  \n  float ra = 0.25;\n  float rb = ra*(0.55+0.45*cos(3.0));\n  float circle = sdEgg(uv+vec2(0.,0.3), ra, rb, vec2(0.,0.3));\n  \n  float circle1 = sdfCircle(rotate(uv,0.79), 0.113, vec2(0., 0.));\n  circle1 += sin(0.55 * (rotate(uv,0.79)).y);\n  float circle2 = sdfCircle(uv, 0.05, vec2(-0.14, -0.14));\n  \n   \n  float segment = sdSegment(uv, vec2(-0.5, -0.5), vec2(0, 0));\n \n  float leaf1 = sdEllipsoid( vec3(uv,0), vec3( 0.41, 0.2, 1.0 ), vec2(-0.085,-0.545));\n  float leaf1_2 = sdEllipsoid( vec3(uv,0), vec3( 0.35, 0.1, 1.0 ), vec2(-0.155,-0.515));\n  float leaf2 = sdEllipsoid( vec3(uv.yx,0), vec3( 0.41, 0.2, 1.0 ), vec2(-0.09,-0.545));\n  float leaf2_2 = sdEllipsoid( vec3(uv.yx,0), vec3( 0.35, 0.1, 1.0 ), vec2(-0.155,-0.515));\n  \n  col = mix(dark_green, col, step(0., segment - 0.005));\n  col = mix(dark_green, col, step(0., leaf1));\n  col = mix(light_green, col, step(0., leaf1_2));\n  col = mix(dark_green, col, step(0., leaf2));\n  col = mix(light_green, col, step(0., leaf2_2));\n  col = mix(light_pink, col, step(0., circle));\n  col = mix(med_pink, col, step(0., circle1));\n  col = mix(dark_pink, col, step(0., circle2));\n  \n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 st = fragCoord/iResolution.xy; // <0, 1>\n  st -= 0.5; // <-0.5,0.5>\n  st.x *= iResolution.x/iResolution.y; // fix aspect ratio\n\n  st = rotate(st,-0.79);\n  st = tile(st, (sin(iTime)*0.5+1.2)*3.5) - 0.5;\n  \n  vec3 col = drawScene(st);\n\n  // Output to screen\n  fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}