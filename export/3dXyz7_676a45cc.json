{"ver":"0.1","info":{"id":"3dXyz7","date":"1584353872","viewed":58,"name":"??? 2D Wave","username":"rockyvon","description":"a 2d wave shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Strength = .3,\n    Period = 0.;\n\nfloat A = 2.,\n    b = .4,\n    r = .4,\n    PI = 3.1415927;\n\nfloat scale(float x)\n{\n    return x * 5.;\n}\n\nfloat tilt(float x)\n{\n    return pow(x / (2. * PI), r) * 2. * PI;\n}\n\nfloat extrusion(float x)\n{\n    return x + b * sin(x);\n}\n\nfloat cutout(float x)\n{\n    float period = (Period + 1.) * 2. * PI;\n    x = fract(x / period) * period;\n    if(x > PI / 4. && x < period - PI * 7. / 4.)\n    {\n        x =  PI / 4.;\n    }else if(x >= period - PI * 7. / 4.)\n    {\n        x = 2. * PI - (period - x) ;\n    }\n    return x;\n}\n\nfloat wave(float x)\n{\n    x = cutout(x);\n    x = extrusion(x);\n    x = tilt(x);\n    return (A * cos(x) + A) / 2.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\n    float x = scale(uv.x) - iTime * 5.;\n    float w = wave(x);\n    w = w / A * Strength;\n    \n    vec3 color = vec3((uv.y - w) * 100.);\n    fragColor = vec4(color, 1.);\n\n}","name":"Image","description":"","type":"image"}]}