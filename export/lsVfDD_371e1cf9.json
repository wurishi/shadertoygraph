{"ver":"0.1","info":{"id":"lsVfDD","date":"1528948119","viewed":129,"name":"moving rectangle by fract iTime","username":"guowei","description":"moving rectangle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rectangle","moving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float inGap(float a, float b, float t) {\n\tif(t >= a && t <= b) return 1.0;\n    return 0.0;\n}\n\nfloat rect(vec2 uv, vec2 startPosition, vec2 widthHeight) {\n    vec2 endPosition = startPosition + widthHeight;\n\tfloat inX = inGap(startPosition.x, endPosition.x, uv.x);\n    float inY = inGap(startPosition.y, endPosition.y, uv.y);\n    \n    return inX * inY;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 startPosition = vec2(0.0, 0.1);\n    vec2 widthHeight = vec2(0.1, 0.15);\n    \n    //startPosition.x += abs(sin(iTime)) / 5.0;\n    startPosition.x += fract(iTime / 10.0);\n    if(startPosition.x + widthHeight.x > 1.0) {\n    \tstartPosition.x = 0.0;\n    }\n    \n    float rectColor = rect(uv, startPosition, widthHeight);\n\n    // Time varying pixel color\n    vec3 col = vec3(rectColor);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}