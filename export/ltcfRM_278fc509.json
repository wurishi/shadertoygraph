{"ver":"0.1","info":{"id":"ltcfRM","date":"1538995856","viewed":301,"name":"Interactive heat diffusion","username":"vchizhov","description":"Heat diffusion through finite differences. LMB to to add heat.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["pde","heatdiffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 HSVToRGB(in vec3 c)\n{\n    float angle = c.x/60.0;\n    int k = int(floor(angle));\n    float f = angle - float(k);\n    float p = c.z*(1.0-c.y);\n    float q = c.z*(1.0-c.y*f);\n    float t = c.z*(1.0-c.y*(1.0-f));\n    \n    vec3 col;\n    if(k==0)\n    {\n        col = vec3(c.b, t, p);\n    }\n    else if(k==1)\n    {\n        col = vec3(q, c.b, p);\n    }\n    else if(k==2)\n    {\n        col = vec3(p, c.b, t);\n    }\n    else if(k==3)\n    {\n        col = vec3(p, q, c.b);\n    }\n    else if(k==4)\n    {\n       col = vec3(t, p, c.b);\n    }\n    else //if(k==5)\n    {\n        col = vec3(c.b, p, q);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).xyz;\n    \n    // bs heuristic\n    col = HSVToRGB(vec3(360.0*(1.0-min(1.0,col.x)), 2.0-clamp(col.x,1.0, 2.0), min(1.0,col.x*col.x)));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define P(X,Y) texture(iChannel3, (fragCoord+vec2(X,Y))/iResolution.xy).xyz\n\n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // u1 - u-1 / 2\n    // du/dt = div(grad(u))\n    float tau = 0.25;\n    \n    vec3 col = (1.0-4.0*tau)*P(0,0) + tau*( P(1,0) + P(-1,0) + P(0,1) + P(0,-1));\n    // percent of heat lost per frame\n    float extinguishSpeed = 0.0005;\n    col *= 1.0 - extinguishSpeed;\n    \n    // how much heat to add per frame\n    float heatAmount = 0.03;\n    // brush radius in pixels\n    float brushRadius = 50.0;\n    if(iMouse.z>0.0)\n    {\n        vec2 diff = fragCoord - iMouse.xy;\n        col += length(diff)<brushRadius ? vec3(heatAmount) : vec3(0.0);\n    }\n    \n    fragColor = vec4(col,0.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}