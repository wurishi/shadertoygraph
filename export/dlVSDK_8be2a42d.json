{"ver":"0.1","info":{"id":"dlVSDK","date":"1686884378","viewed":33,"name":"fosfenos palete","username":"davidmachadosf","description":"exp","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pot  =   2.;\nconst float freq =   .5;\nconst float scale =  20.;\n\n\nvec3 palette(float t) {\n\n    vec3 a = vec3( .2,  .7,     .4    );\n    vec3 b = vec3( .5,  .8,     .5    );\n    vec3 c = vec3(1. , 2.,     1.     );\n    vec3 d = vec3( .0,  .33333, .66666);\n    \n    return a + b*cos(6.28318*(c*t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = scale*(fragCoord/iResolution.xy - .5);\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    \n    //float xtemp = x/y;\n    //float ytemp = y/x;\n    \n    //float xtemp = pow(abs(x/y),y);\n    //float ytemp = pow(abs(y),x/y);\n    \n    //float xtemp = pow(abs(x),y/x);\n    //float ytemp = pow(abs(y),x/y);\n    \n    //float xtemp = pow(abs(x*y),y/x);\n    //float ytemp = pow(abs(y/x),x*y);\n    \n    \n    //float xtemp = pow(abs(x*y),y*x);\n    //float ytemp = pow(abs(y/x),x/y);\n    \n    \n    //float xtemp = pow(abs(x*y),y/x);\n    //float ytemp = pow(abs(y*x),x/y);\n    \n    //float xtemp = pow(abs(x/y),y);\n    //float ytemp = pow(abs(y*x),x*y);\n    \n    \n    float xtemp = pow(abs(cos(x/y)),y*x);\n    float ytemp = pow(abs(sin(y/x)),x/y);\n    \n    x = xtemp;\n    y = ytemp;\n    \n\n    // Time varying pixel color\n    //vec3 col = vec3(.5,.2,.8);\n    \n    //plot (1-(1-sin( 10*(x+y) * x)^100) * (1-sin(10* (x+y) * y)^100))\n    \n    //float valxy = \n    //    1. -\n    //     pow(1.-cos( freq* (uv.x+uv.y) * uv.x),pot) * \n    //     pow(1.-cos( freq* (uv.x+uv.y) * uv.y),pot);\n         \n         \n    // plot (1-(1-sin( 1/(x+y) * x)^100) * (1-sin(1/ (x+y) * y)^100))  \n    //float valxy = \n    //    1. -\n    //     pow(1.-sin( freq/(uv.x+uv.y) * uv.x),pot) * \n    //     pow(1.-sin( freq/(uv.x+uv.y) * uv.y),pot);\n    \n    \n    // (1-(1-sin( (3/((x^2+y^2)^.5)) * x)^10) * \n    //    (1-sin( (3/((x^2+y^2)^.5)) * y)^10))\n    \n    \n    float valxy = \n        1. -\n         (1.-pow(abs(sin(freq*iTime*x)),pot)) * \n         (1.-pow(abs(sin(freq*iTime*y)),pot));\n    \n    \n    \n    \n    //vec3 col = vec3(valxy);\n    vec3 col = palette(valxy);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}