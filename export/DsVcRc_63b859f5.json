{"ver":"0.1","info":{"id":"DsVcRc","date":"1696406711","viewed":78,"name":"Centred Hatch","username":"spit1ire","description":"Hatch","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["hatch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform bool showBrandIcon;\n\nconst float PI = 3.1415926535;\n\nconst float count = 4.0;\nconst float offset = 1.0 / count / 2.;\nconst float multiple = count * PI;\n\nfloat tWave(float x) {\n\treturn 1./PI*asin(sin(PI*x+PI/2.0))+.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float angleRad = iTime/50.;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord * 2.0 /iResolution.xy - 1.0;\n    \n    vec4 pixel = texture(iChannel0, uv);\n\n\tfloat rotatedX = sin(angleRad)*uv.x + cos(angleRad)*uv.y;\n\t//float wave = sin(rotatedX * multiple);\n    float wave = tWave(rotatedX * count);\n    \n    float animateWeight = sin(iTime/2.)/2.0+0.5;\n\n\tfloat hatch = step(0.3, wave);\n\n    // Output to screen\n    fragColor = vec4(vec3(hatch),1.0);\n    //fragColor = pixel;\n}","name":"Image","description":"","type":"image"}]}