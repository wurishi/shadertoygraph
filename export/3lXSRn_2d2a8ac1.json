{"ver":"0.1","info":{"id":"3lXSRn","date":"1564325860","viewed":714,"name":"odd-poly-new","username":"dubu","description":"just a thing, remember to stop and restart the time to get the music going","likes":8,"published":3,"flags":96,"usePreview":0,"tags":["2d","music","remix","lights","orbs","kpop","loona"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MtsGRf","filepath":"https://soundcloud.com/husenap/odd-poly-new","previewfilepath":"https://soundcloud.com/husenap/odd-poly-new","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.xx;\n\n    uv *= 1.;\n    \n    vec3 col = vec3(0.03);\n    \n    float fft_low = 0.;\n    for(int i = 400; i < 512; ++i){\n        fft_low += texelFetch(iChannel3, ivec2(i, 0), 0).x;\n    }\n    \n    float fft_high = 0.;\n    for(int i = 0; i < 256; ++i){\n        fft_high += texelFetch(iChannel3, ivec2(i, 0), 0).x;\n    }\n    \n    \n    for(float i = 0.; i < 500.; ++i){\n        vec2 p = uv;\n        \n        float t = time+i*0.05*i;\n        float a = smoothstep(0., 1., fract(t)) + floor(t);\n        a *= 0.5+0.000001*fft_high;\n        \n        p = uv - (fract(i*0.01))*vec2(cos(a), sin(a));\n        \n        float att = (0.00001 + fft_low*0.000003*(1.-i/250.)) / dot(p, p);\n\t    \n        col += abs(att * vec3(mod(i,2.)*0.7+0.3, 0.2+fft_low*0.01, 1.-mod(i,2.)*0.7+0.3))*0.5;\n    }\n    \n    vec3 oldColor = texture(iChannel0, fragCoord.xy/iResolution.xy).rgb;\n    vec3 color = max(vec3(0.0), col);\n    \n    fragColor = vec4(mix(color, oldColor, pow(0.1, 10.*iTimeDelta)),1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}