{"ver":"0.1","info":{"id":"MfjfR3","date":"1725292584","viewed":25,"name":"Simple Radial blur","username":"Kutory","description":"Radial blur to simulate volumetric light","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv1 = 2. * (uv - 0.5);\n    \n    vec4 color =vec4(vec3(0.),1.);\n    //Sample counts\n    int stepNum = 20;\n    //Decay\n    float decay = 0.9;\n    //Weight\n    float weight = 1.;\n    //UV(-1,1) is direction\n    vec2 direction = uv1;\n    vec4 sourceColor = texture(iChannel0, uv);\n    for(int i=0; i < stepNum ; i++)\n    {\n        //Move UV\n        uv1 -= direction/float(stepNum) ;\n        vec4 sampleColor = texture(iChannel0, (uv1 + 1.) * 0.5);\n        sampleColor *=weight ;\n        color += sampleColor;\n        weight *= decay;\n    }\n    vec4 testColor = texture(iChannel0, (uv1 + 1.) * 0.5);\n\n    // Output to screen\n    fragColor = vec4(sourceColor + color * 0.0825);\n   \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float sphere(vec2 pos, float radius, vec2 center)\n{\n    return length(pos - center) - radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord.xy - iResolution.xy ) / iResolution.x;\n    float posx = sin(iTime) * 0.25;\n    float posy = cos(iTime) * 0.25;\n    float sdf = sphere(uv, 0.15, vec2(posx,-posy)) * 20.;\n    float sdf_smt = smoothstep(0.,1.,sdf);\n    vec4 color = vec4(vec3(sdf_smt),1);\n    fragColor = 1.-color;\n}","name":"Buffer A","description":"","type":"buffer"}]}