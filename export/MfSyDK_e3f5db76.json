{"ver":"0.1","info":{"id":"MfSyDK","date":"1722974607","viewed":31,"name":"god's endgame","username":"gabl","description":"test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define pi 3.14159265\n#define e 2.718281828459045\nfloat tear(vec2 pos, float size,vec2 pixel){\n    if(lengthresize(pixel-pos)<size){\n        return 1.0;\n     }\n     if(pass(pos.y,pos.y+2.0*size, pixel.y) * pass(pos.x-size*((2.0*size+pos.y-pixel.y)/(4.0*size)),pos.x+size*((2.0*size+pos.y-pixel.y)/(4.0*size)), pixel.x)==1.0){\n         return 1.0;\n     }\n     return 0.0;\n}\n\nfloat ring(vec2 pos, float size,vec2 pixel){\n    float dist=sqrt(square(pixel.x-pos.x)+square(pixel.y-pos.y));\n    if(dist<size && dist>size*0.6*(1.0+(pos.y-pixel.y)/size/2.0)){\n        return 1.0;\n        }\n     return 0.0;\n}\n\nfloat planet(vec2 pos,float rayon, float size, vec2 pixel){\n    \n    vec2 centersphere=rayon*vec2(sin(2.0*iTime), cos(2.0*iTime))+pos;\n    if(lengthresize(centersphere-pixel)<size*(1.0+0.1*cos(2.0*iTime))){\n        return 1.0;\n     }\n     return 0.0;\n}\n\nfloat flower(vec2 pos, float rayon_min, float taillepetale, float nbrpetale, vec2 pixel, float rot){\n    float angle=atan((pos.y-pixel.y),(pos.x-pixel.x))+rot;\n\n    if(lengthresize(pos-pixel)<(cos(angle*nbrpetale)+1.0)*taillepetale+rayon_min){\n        return 1.0;\n    }\n    return 0.0;\n}\n\nfloat eye(vec2 pos,float rayon, vec2 p){\n    return max(pass(0.0,rayon,lengthresize(p-pos))-pass(0.0,rayon,lengthresize(p-pos+vec2(0.0,-0.04*(1.0-10.0*max(cos(exp(1.0)*0.1*iTime)-0.90, 0.0))))), 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n    {\n    //iTime\n    // Normalized pixel coordinates (from 0 to 1) (0,0 is on the bottom left)\n    float proproadclair=0.5;\n    float horizon=0.715;\n    float startsun=0.75;\n    float freq=17.0;\n    vec2 p = fragCoord/iResolution.xy;\n    \n    float largeur=0.3*(1.0-smoothstep(0.0,horizon,p.y))*pass(0.0,horizon,p.y);\n    float diff=0.1*sin(freq*exp(p.y)+iTime)*(1.0-square(smoothstep(0.0,startsun,p.y)));\n    \n    float road=pass(0.5+diff-proproadclair*largeur,0.5+diff+proproadclair*largeur,p.x)+smoothstep(0.5+diff-largeur,0.5+diff-proproadclair*largeur, p.x)*pass(0.5+diff-largeur,0.5+diff-proproadclair*largeur, p.x)+((1.0-smoothstep(0.5+diff+proproadclair*largeur,0.5+diff+largeur,p.x))*pass(0.5+diff+proproadclair*largeur,0.5+diff+largeur,p.x));\n    float eyes=eye(vec2(0.525,startsun+0.025), 0.02, p)+eye(vec2(0.475,startsun+0.025), 0.02, p);\n    float sun=pass(0.0,0.1,lengthresize(p-vec2(0.5,startsun)))*pass(horizon,1.0,p.y);\n    float tears=tear(vec2(0.475,0.76-mod(exp(1.0)*0.1*iTime/Pi/2.0*0.06,0.06)),0.007,p)+tear(vec2(0.525,0.76-mod(exp(1.0)*0.1*iTime/Pi/2.0*0.06,0.06)),0.007,p);\n    tears=tears*pass(0.0,0.76,p.y);\n    float mouth=pass(0.0,0.02,lengthresize(p-vec2(0.5,startsun-0.025)));\n    vec3 col = vec3(1,1,0)*road+vec3(0,1.0,0.0)*sun;\n    col+=vec3(1.0,cos(iTime*2.0),0.0)*planet(vec2(0.5,0.65),0.3,0.02,p)*pass(horizon,1.0, p.y);\n    if(col==vec3(0.0,0.0,0.0)){\n        if(pass(horizon, 1.0, p.y)==1.0){\n            col=vec3(cos(iTime*2.0)*0.2,0.0,0.5+cos(iTime*2.0)*0.5);\n        }\n        else{\n            col=vec3(0.0,0.0,0.0);\n        }\n    }\n    if((tears==1.0||eyes==1.0||mouth==1.0)&&p.y>horizon){\n        col=vec3(0.0,0.0,0.0);\n    }\n    freq=0.8;\n    vec3 test=vec3(0.0,0.0,0.0);\n    float nbr=50.0;\n    for(float i=0.0;i<nbr;i=i+1.0){\n        float advance=mod(iTime+i, freq);\n        float advance2=freq/2.0-abs(advance-freq/2.0);\n        float num=(iTime+i-advance)/freq*nbr+i;\n        float posx=(rando(num+e)+1.0)/2.0*(1.0-0.08)+0.04;\n        float posy=(rando(num)+1.0)/2.0*(horizon-0.12)+0.06;\n        vec2 pos=vec2(0.0,0.0);\n        if(true){\n            pos=vec2(posx,posy);\n        }\n        if(rando(num-pi)>0.3){\n            test=test+vec3((rando(num-2.0*pi)+1.0)/2.0,0.0,0.0)*flower(pos, 0.03*advance2/freq,0.05*advance2/freq,(advance2+1.0)*5.0,p, 8.0*rando(num+Pi)*advance);\n        }\n        else if(rando(num-pi)>-0.3){\n            test=test+vec3(0.0,(rando(num-2.0*pi)+1.0)/2.0,(rando(num+2.0*e)+1.0)/2.0)*flower(pos, 0.03*advance2/freq,0.05*advance2/freq,(advance2+1.0)*5.0,p, 8.0*rando(num+Pi)*advance);\n        }\n        else{\n            test=test+vec3((rando(num-2.0*pi)+1.0)/2.0,0.0,(rando(num+2.0*e)+1.0)/2.0)*flower(pos, 0.03*advance2/freq,0.05*advance2/freq,(advance2+1.0)*5.0,p, 8.0*rando(num+Pi)*advance);\n        }\n    }\n    fragColor = vec4(test+col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define Pi     3.14159265\n#define e 2.718281828459045\nfloat pass(highp float min, highp float max, highp float value){\n    if(value>= min && value < max){\n        return 1.0;\n        }\n    return 0.0;\n}\nfloat square(highp float a){\n    return a*a;\n}\nfloat lengthresize(vec2 a){\n    return sqrt(square(a.x*800.0/450.0)+square(a.y));\n}\n\nfloat rando(float key){\n    return cos(exp(mod(key,70.0+e)));\n}\n","name":"Common","description":"","type":"common"}]}