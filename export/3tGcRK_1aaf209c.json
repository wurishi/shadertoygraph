{"ver":"0.1","info":{"id":"3tGcRK","date":"1611285660","viewed":209,"name":"Pixelating uv coordiates ","username":"mmahir","description":"its my first shader code \nyou can use this simple code for pixelating image. channelstep function creates gaps between values.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["pixelateuvcorrdinate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Steps between values\n\nfloat channelstep (out float r, in float pstep ){\nr = floor(pstep*r)/pstep;\nreturn r;\n}\n\n//pixelating image\nvec3 pixelateimage(out vec3 img,float pixelstep )\n{\nfloat r = img.x;\nfloat g = img.y;\nfloat b = img.z;\nimg = vec3(channelstep(r,pixelstep),channelstep(g,pixelstep),channelstep(b,pixelstep));\nreturn img;\n}\n\n//main function \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float pixelstep = 8.0f;    \n    vec3 col = vec3 (uv, 0.0f);\n    col = pixelateimage(col,pixelstep);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}