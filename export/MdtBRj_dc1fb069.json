{"ver":"0.1","info":{"id":"MdtBRj","date":"1525976046","viewed":187,"name":"Hypnoradiance","username":"hu9o","description":"from https://www.shadertoy.com/view/4scBz2","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["ray","sun","hypnotic","radiance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int rayCount = 12;\n    vec3 color1 = vec3(1.,1.,0.);\n    vec3 color2 = vec3(.8,0.45,.65);\n    \n    // center\n    vec2 c = (fragCoord - vec2(iResolution) * .5) / iResolution.y;\n    \n    // cartesian to polar\n\tfloat angle = atan(c.y, c.x);\n    float dist = length(c);\n    \n    // normalize angle\n    angle /= (2.*PI);\n    \n    // wave\n    float time = mod(iTime * 5., 2.*PI);\n    float aaa = angle + (1. + sin(dist*40. - time)) * (1.-dist) * .01;\n    \n    // fraction angle\n    float mask = fract(aaa * float(rayCount));\n    \n    // smooth fract output\n    mask = min(1. - mask, mask) * 2.;\n    mask = smoothstep(.45, .55, mask);\n    \n    // radial gradient\n    float circlesCount = 10.;\n    float time2 = fract(dist*circlesCount*.5) > 0.5 ? -iTime : iTime; // cw/ccw alternatively\n    float ngfract = fract(angle * 35. + time2 * .6);\n    ngfract = abs(ngfract * 2. - 1.);\n    mask -= ceil(dist*circlesCount + .25 + ngfract*.5) / circlesCount;\n    \n    // output\n    fragColor = vec4(mix(color2, color1, mask),1.0);\n}","name":"Image","description":"","type":"image"}]}