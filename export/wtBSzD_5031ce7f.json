{"ver":"0.1","info":{"id":"wtBSzD","date":"1565200591","viewed":122,"name":"_Examples","username":"tsuhre","description":"_Examples","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["examples"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform vec2 test;\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvec3 colorA = vec3(0.149,0.141,0.912);\nvec3 colorB = vec3(.1, .1, 0.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = vec4(0);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //drawing a circle\n    /*\n    vec2 center = iResolution.xy/2.0; //xyzw //rgba\n    \n    float len = length(fragCoord - center);\n    \n    if (len < 50.){\n        if (len > 45.){\n        \tfloat gray = len-45.;\n            float i = 1. - gray/5.;\n            col = vec4(smoothstep(0., 1., i));\n        }\n        else col = vec4(1);\n    }\n\t*/\n    \n    //sine functions\n    //col = vec4((sin(fragCoord.x/10.)+1.)/2.);\n    \n    //color mixing\n    /*\n    vec3 color = vec3(0.);\n    \n    float pct = fragCoord.x/iResolution.x;\n    \n    vec3 colATemp = rgb2hsb(colorA);\n    vec3 colBTemp = rgb2hsb(colorB);\n    \n    color = mix(colATemp, colBTemp, pct);\n    \n    color = hsb2rgb(color);\n    fragColor = vec4(color, 1.);\n\t*/    \n\n\n    //checkerboard\n    /*\n    float cellSize = iMouse.x;\n    \n    vec2 coord = floor(fragCoord/cellSize);\n    \n    if (mod(coord.x + coord.y, 2.) == 1.) col = vec4(1.);\n    \n    //if (mod(fragCoord.x, cellSize) < cellSize/2. ^^ mod(fragCoord.y, cellSize) < cellSize/2.) col = vec4(1);\n    \n\tfragColor = col;\n\t*/\n    \n    //texture color shifting\n    /*\n    \n    col = texture(iChannel0, uv);\n    \n    vec3 col2 = rgb2hsb(col.rgb);\n    col2.x += iTime/10.;\n    \n    col2 = hsb2rgb(col2);\n    \n    fragColor = vec4(col2, 1.0);\n\t*/\n    \n    float offset = .005;\n    \n    float xDiff = texture(iChannel0, uv+vec2(-offset, 0.)).r - texture(iChannel0, uv+vec2(offset, 0.)).r;\n    float yDiff = texture(iChannel0, uv+vec2(0., -offset)).r - texture(iChannel0, uv+vec2(0., offset)).r;\n    \n    fragColor = vec4(abs(xDiff) + abs(yDiff));\n}","name":"Image","description":"","type":"image"}]}