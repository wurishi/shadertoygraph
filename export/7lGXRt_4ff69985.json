{"ver":"0.1","info":{"id":"7lGXRt","date":"1641219637","viewed":190,"name":"Mundi Extimi (Genuary - Day 3)","username":"villedieumorgan","description":"Day 3 of the Genuary artificially generated month https://genuary.art.\nPrompt of the day: Space","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["space","universe","world","planets","generativeart","genuary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n * GLSL Piece for day 3 of Genuary \n * Prompt: \"Space\"\n * by @VilledieuMorgan\n */\n\nfloat map(in vec3 pos)\n{\n  float s = length(pos + vec3(0., -0.37, 0.5) + texture(iChannel0, pos.xy * 0.9 + vec2(iTime * 0.03, 1.)).r * 0.01) - texture(iChannel0, 1.-pos.xy + vec2(-iTime * 0.025, 1.)).r * 0.005 - 0.25;\n  float p = pos.y + 0.5;\n  p += texture(iChannel1, pos.xz + vec2(0., -iTime * 0.08)).r * .1;\n  p += abs(pos.x);\n  return min(s, p);\n}\n\nvec3 calcNormal(in vec3 pos)\n{\n  vec2 e = vec2(0.0001, 0.0);\n  return normalize(\n    vec3(map(pos + e.xyy) - map(pos - e.xyy),\n      map(pos + e.yxy) - map(pos - e.yxy),\n      map(pos + e.yyx) - map(pos - e.yyx))\n  );\n}\n\nfloat castRay(in vec3 ro, vec3 rd)\n{\n  float t = 0.0;\n  for (int i = 0; i < 40; i++)\n  {\n    vec3 pos = ro + t * rd;\n\n    float h = map(pos);\n    if (h < 0.001) break;\n    t += h;\n    if (t > 20.0) break;\n  }\n  if (t > 20.0) t = -1.0;\n  return t;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n  vec3 ro = vec3(0.0, 0.0, 1.0);\n  vec3 rd = normalize(vec3(p, -2.));\n  vec3 col = vec3(0.02);\n  // Ray Marching based on ig's live demo\n  float t = castRay(ro, rd);\n  if (t > 0.0)\n  {\n    vec3 pos = ro + t * rd;\n    vec3 nor = calcNormal(pos);\n    vec3 mate = vec3(0.1, 0.1, 0.1);\n    vec3 sun_dir = normalize(vec3(1., .1, -1.1));\n    float sun_dif = clamp(dot(nor, sun_dir), 0.0, 1.0);\n    float sun_sha = step(castRay(pos + nor * 0.001, sun_dir), 0.0);\n    float sky_dif = clamp(0.5 + 0.5 * dot(nor, vec3(0.0, 1.0, 0.0)), 0.0, 1.0);\n    float bou_dif = clamp(0.5 + 0.5 * dot(nor, vec3(0.0, -1.0, 0.0)), 0.0, 1.0);\n    col = mate * vec3(15.0, 15.0, 15.0) * sun_dif;\n    col += mate * vec3(0.0, 0.0, 0.0) * sky_dif;\n    col += mate * vec3(7.0, 7.0, 7.0) * bou_dif;\n  }\n  col = pow(col, vec3(0.545));\n  fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}