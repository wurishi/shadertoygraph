{"ver":"0.1","info":{"id":"XldBzj","date":"1540291168","viewed":880,"name":"Newsprint webcam","username":"BenWheatley","description":"Old-style low-resolution newsprint effect for webcam input","likes":4,"published":3,"flags":2,"usePreview":0,"tags":["webcam","newsprint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * Webcam 'Newsprint' effect by Ben Wheatley - 2018\n * License MIT License\n * Contact: github.com/BenWheatley\n */\n\nconst float ROOT_3 = sqrt(3.);\nconst float BLOCK = 75.;\nconst vec2 OFFSET = vec2(0.5/BLOCK, 0.5/BLOCK);\nconst vec3 PAPER = vec3(250.0, 242.0, 228.0)/256.0;\n\nfloat avgGrey(vec2 uv, out vec2 begin, out vec2 end) {\n    vec2 scaled_uv = uv*BLOCK;\n    begin = floor(scaled_uv)/BLOCK;\n    end = ceil(scaled_uv)/BLOCK;\n    \n    return length(texture(iChannel0, begin).rgb) / ROOT_3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 pixelSize = vec2(1,1) / iResolution.xy;\n    \n    vec2 begin, end;\n    float grey = pow(avgGrey(uv, begin, end), 0.66);\n    \n    grey = 1.0-grey;\n    \n    grey = BLOCK*distance(uv, begin+OFFSET)>grey? 1.0: 0.0;\n    \n    fragColor = vec4(PAPER*grey, 1.);\n}","name":"Image","description":"","type":"image"}]}