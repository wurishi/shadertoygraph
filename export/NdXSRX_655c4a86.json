{"ver":"0.1","info":{"id":"NdXSRX","date":"1619105592","viewed":160,"name":"triangles_slide","username":"skaplun","description":"Abstract geometric scene.\nTriangle pattern by Shane","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangle","random","animation","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415;\n\nvec3 hash( vec3 p ) // replace this by something better\n{\n\tp = vec3( dot(p,vec3(127.1,311.7, 74.7)),\n\t\t\t  dot(p,vec3(269.5,183.3,246.1)),\n\t\t\t  dot(p,vec3(113.5,271.9,124.6)));\n\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec3 p )\n{\n    vec3 i = floor( p );\n    vec3 f = fract( p );\n\t\n\tvec3 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( mix( dot( hash( i + vec3(0.0,0.0,0.0) ), f - vec3(0.0,0.0,0.0) ), \n                          dot( hash( i + vec3(1.0,0.0,0.0) ), f - vec3(1.0,0.0,0.0) ), u.x),\n                     mix( dot( hash( i + vec3(0.0,1.0,0.0) ), f - vec3(0.0,1.0,0.0) ), \n                          dot( hash( i + vec3(1.0,1.0,0.0) ), f - vec3(1.0,1.0,0.0) ), u.x), u.y),\n                mix( mix( dot( hash( i + vec3(0.0,0.0,1.0) ), f - vec3(0.0,0.0,1.0) ), \n                          dot( hash( i + vec3(1.0,0.0,1.0) ), f - vec3(1.0,0.0,1.0) ), u.x),\n                     mix( dot( hash( i + vec3(0.0,1.0,1.0) ), f - vec3(0.0,1.0,1.0) ), \n                          dot( hash( i + vec3(1.0,1.0,1.0) ), f - vec3(1.0,1.0,1.0) ), u.x), u.y), u.z );\n}\n\nfloat smin( float a, float b, float k ){\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\n// Unsigned distance to the segment joining \"a\" and \"b\".\nfloat distLine(vec2 a, vec2 b){\n    \n     \n\tb = a - b;\n\tfloat h = clamp(dot(a, b)/dot(b, b), 0., 1.);\n    return length(a - b*h);\n}\n\n//based on Shane's 'Triangle Grid Contouring'\nvec3 triangle(vec2 p)\n{\n    vec2 op = p;\n    vec2 s = floor(p + (p.x + p.y)*.36602540378);\n    p -= s - (s.x + s.y)*.211324865;\n    float i = p.x < p.y? 1. : 0.;\n    vec2 ioffs = vec2(1. - i, i);\n    vec2 ip0 = vec2(0), ip1 = ioffs - .2113248654, ip2 = vec2(.577350269); \n    vec2 ctr = (ip0 + ip1 + ip2)/3.;\n    ip0 -= ctr; ip1 -= ctr; ip2 -= ctr; p -= ctr;\n    float tri = smin(smin(distLine(p - ip0, p - ip1), distLine(p - ip1, p - ip2), .15), \n                  distLine(p - ip2, p - ip0), .15);\n    return vec3(op - p, tri);\n}\n\nvec3 hsv2rgb(vec3 c) {\n  // Íñigo Quílez\n  // https://www.shadertoy.com/view/MsS3Wc\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\n  rgb = rgb * rgb * (3. - 2. * rgb);\n  return c.z * mix(vec3(1.), rgb, c.y);\n}\n\nvec4 pattern(vec2 p, float speed, float colorShift, float val, float density)\n{\n    vec3 tri = triangle(p);\n    \n    \n    float a = -PI/4.;\n    vec2 suv = (((tri.xy * .5 * mat2(cos(a), -sin(a), sin(a), cos(a)) + vec2(iTime * speed, 0.)))/vec2(5., 1.));\n    float n = noise(vec3(suv, iTime * .5));\n    \n    float n2 = noise(vec3(triangle(p * .5).xy * .1 * mat2(cos(a), -sin(a), sin(a), cos(a)), iTime + colorShift));\n    float n3 = noise(vec3(triangle(p * .25).xy * .4 * mat2(cos(a), -sin(a), sin(a), cos(a)), iTime + colorShift));\n    \n    \n    float v = smoothstep(.01, .05, tri.z) * (step(.25 + density, n));\n    return vec4(v * hsv2rgb(vec3(n2, .5 + n * .25, val)), v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy)/iResolution.y;\n    vec2 mouse = (2. * iMouse.xy - iResolution.xy)/iResolution.y;\n    \n    vec4 clr1 = pattern(uv * 4., 4., 0., 1., -.05);\n    vec4 clr2 = pattern(uv * 7., 12., 97.13, .25, .15);\n    \n    fragColor = mix(clr2, clr1, clr1.a);\n}","name":"Image","description":"","type":"image"}]}