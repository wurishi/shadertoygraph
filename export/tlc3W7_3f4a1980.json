{"ver":"0.1","info":{"id":"tlc3W7","date":"1576514560","viewed":118,"name":"Polar shape (eight curve)","username":"kow","description":"Playing with polar curve plotting. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["curve","shape","ppolar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415927\n\nstruct polar {\n    float a;\n\tfloat r;\n}\n\nc2p(vec2 pos)\n{\n    float r = length(pos);\n    float a = atan(pos.y, pos.x);\n    return polar(a, r);\n}\n\nfloat curve(polar c) {\n\tfloat b = .5;\n    //c.a += sin(iTime) * 1.58; // rotate\n    return c.r - (b * b) * cos(c.a * 2.) / pow(abs(cos(c.a)), 4.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    float plot = curve(c2p(uv));\n    vec3 col = vec3(smoothstep(0., min(fwidth(plot),1.), plot - .5) );\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}