{"ver":"0.1","info":{"id":"Dl3cWj","date":"1699711669","viewed":60,"name":"Mandelbrot_me","username":"MathEnthusiast314","description":"mandelbrot","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    vec2 uv = 1.5*(2.0*fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n\n    vec2 append = vec2(-0.774,0.1248)+vec2(-0.00003,0.000004);\n    uv=uv/pow(2.0,time)+append;\n\n    vec2 c = uv;\n    vec2 z = vec2(0.0, 0.0);\n    \n    int iterations = 400+105*int(time);\n    int i;\n    \n    for (i = 0; i < iterations; i++) {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (length(z) > 4.0) break; // Escape condition\n    }\n    int depleat=100*int(time);\n    float colRatio=((float(i) )/ (float(iterations-depleat)));\n    fragColor = vec4(vec3(pow(colRatio,0.8)), 1.0); // Color based on iterations\n}\n","name":"Image","description":"","type":"image"}]}