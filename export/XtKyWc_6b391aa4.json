{"ver":"0.1","info":{"id":"XtKyWc","date":"1537978615","viewed":106,"name":"sketchfab logo noise","username":"gabwoot","description":"do you like us?","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","sketchfab"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size * 0.5;\n    \n    vec2 uv = smoothstep(\n        _size,\n        _size + vec2(0.001),\n        _st\n    );\n\n    uv *= smoothstep(\n        _size,\n        _size + vec2(0.001),\n        vec2(1.0) - _st\n    );\n    \n    return uv.x * uv.y;\n}\n\nfloat random (in vec2 st) {\n    return fract(\n        sin(\n            dot(st.xy, vec2(12.9898,78.233))\n        ) * 43758.5453123\n    );\n}\n\nfloat map(float x, float a1, float a2, float b1, float b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n}\n\nvec2 rotate2d(vec2 st, float angle) {\n    return (\n        (st - vec2(.5)) *\n        mat2(\n            cos(angle), -sin(angle),\n            sin(angle), cos(angle)\n        ) +\n        vec2(.5)\n    );\n}\n\nvec2 scale(vec2 st, vec2 s) {\n    return st * s;\n}\n\nvec2 translate(vec2 st, vec2 t) {\n    return st + t;\n}\n\nvec2 skewY(vec2 st, float angle) {\n    return (\n        (st - vec2(.5)) *\n        mat2(\n            1., 0.,\n            tan(angle), 1.\n        ) +\n        vec2(.5)\n    );\n}\n\n\nfloat sketchfabLogo(vec2 st) {\n    return max(\n        box(\n            skewY(\n                translate(\n                    st,\n                    vec2(-.17, 0.25)\n                ),\n                -.5\n            ),\n            vec2(.27)\n        ),\n        max(\n            box(\n                skewY(\n                    translate(\n                        st,\n                        vec2(.17, 0.25)\n                    ),\n                    .5\n                ),\n                vec2(.27)\n            ),\n            box(\n                rotate2d(\n                    translate(\n                        scale(st, vec2(1., 1.9)),\n                        vec2(0., -.5)\n                    ),\n                    PI / 4.\n                ),\n                vec2(.4)\n            )\n        )\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.y *= iResolution.y/iResolution.x;\n\n    vec2 m = iMouse.xy/iResolution.xy;\n    m.y *= iResolution.y/iResolution.x;\n\n    float speed =\n        random(floor((st.yy - vec2(.5) * 2.) * 250. ) * vec2(1., 10)) * 10.;\n    \n    float size = random(st.yy * 1.);\n\n    float randc =\n        random(floor(st.xx * (10. * size) + iTime * speed));\n\n    vec3 color = vec3(st.x, 0., st.y);\n\n    color = mix(\n        color, \n        vec3(st.y, 0, st.x),\n        sketchfabLogo(\n            translate(\n                scale(st, vec2(1.5, 1.3)),\n                vec2(-.25, 0.)\n            )\n        )\n    );\n\n    fragColor = vec4(color * randc,1.0);\n}\n","name":"Image","description":"","type":"image"}]}