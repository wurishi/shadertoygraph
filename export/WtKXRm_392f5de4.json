{"ver":"0.1","info":{"id":"WtKXRm","date":"1582430283","viewed":65,"name":"diffraction visualization","username":"theinventor13","description":"just a quickie","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["thing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = (iResolution.x/iResolution.y);\n    vec2 uv = fragCoord/iResolution.y;\n    float spread = iMouse.x / (2.0f * iResolution.x);\n    vec2 p1 = vec2(spread * scale, 0.5f);\n    vec2 p2 = vec2((1.0f-spread) * scale, 0.5f);\n    float dist = 100.0f * (iMouse.y / iResolution.y);\n    if(iMouse.xy == vec2(0)){\n        dist = 100.0f;\n    }\n    float d1 = length(uv - p1) * dist;\n    float d2 = length(uv - p2) * dist;\n    float freq = 10.0f;\n    float phase = 0.0f;\n    float sum = sin(-freq*iTime + phase + d1) + sin(-freq*iTime + phase + d2);\n    sum = sum + 2.0f;\n    sum = sum / 4.0f;\n    sum *= sum;\n    vec3 col;\n    col.r = sum;\n    \n\t\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}