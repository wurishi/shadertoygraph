{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"/*\n * Gardner Cos Clouds\n *\n * Translated/adapted from the RenderMan implementation in\n * Texturing & Modeling; a Procedural Approach (3rd ed, p. 50)\n *\n * This technique seeks to avoid visible pattern redundancy\n * by shifting the frequencies and phase several times while\n * computing the cloud density component. It fails somewhat\n * miserably as soon as you zoom out; set the ZOOM param to 0.1\n * and see for yourself.\n *\n */\n\n#define PI 3.16\n#define NTERMS 3.0\n#define ZOOM 1.0\n\nvec3 getLightPosition(){\n\treturn vec3(5.0*sin(iTime), 3, -5);    \n}\n\nvec3 getEyePosition(){\n    return vec3(0,0,-5);\n}\n\nvec4 shadePoint(vec3 pointPosition, vec4 textureColour){\n    return textureColour;\n}\n\n\nvec4 getTextureColour(vec2 fragCoord, vec2 uv){\n    float cloudDensity = 0.0;\n    float amplitude = 0.45;\n    float xphase = 0.9*iTime;\n    float yphase = 0.7;\n    float xfreq = 2.0*PI*0.023;\n    float yfreq = 2.0*PI*0.021;\n    \n    float offset = 0.5;\n    float xoffset = 37.0;\n    float yoffzet = 523.0;\n    \n    float x = fragCoord.x;\n    float y = fragCoord.y;\n    \n    float scale = 1.0/iResolution.x * 60.0 * 1.0/ZOOM;\n    x = x*scale + offset + iTime;\n    y = y*scale + offset - iTime/2.3;\n    \n    for(float i = 0.0; i < NTERMS; i++){\n        float fx = amplitude * (offset + cos(xfreq * (x + xphase)));\n        float fy = amplitude * (offset + cos(yfreq * (y + yphase)));\n        cloudDensity += fx * fy;\n        xphase = PI/2.0 * 0.9 * cos(yfreq * y);\n        yphase = PI/2.0 * 1.1 * cos(xfreq * x);\n        amplitude *= 0.602;\n        xfreq *= 1.9 + i * .01;\n        yfreq *= 2.2 - i * 0.08;\n    }\n    \n    return mix(vec4(0.5, 0.55, 0.96, 1.0), vec4(1.0, 1.0, 1.0, 1.0), cloudDensity);   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 point = vec3(fragCoord.xy, 0.0);\n\tfragColor = shadePoint(point, getTextureColour(fragCoord,uv));\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lll3z4","date":"1419443093","viewed":499,"name":"Gardner Cos Clouds","username":"fab","description":"A simple 2D cloud pattern algorithm. Poorly suited for large sky textures, but does a fair job if seen through a small enough aperture.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","clouds"],"hasliked":0,"parentid":"","parentname":""}}