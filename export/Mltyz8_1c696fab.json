{"ver":"0.1","info":{"id":"Mltyz8","date":"1531594152","viewed":465,"name":"Expanding Dot Grid","username":"momoro","description":"Practice #3","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float u_time = iTime;\n    \n    vec2 st = fragCoord.xy/iResolution.xy;\n\tst.x *= iResolution.x/iResolution.y;\n\tst.x -= .3;\n    \n        \n    // UNDULATING RING\n\t\n    // Coords to center\n    vec2 rst = st - vec2(.5);\n    \n    // Displace with sin to get blobby\n    rst += sin(u_time + atan(sin(u_time/2.), cos(u_time))) / 20.;\n\n\n    float ringRadius = sin(u_time)/10. + .4;\n    \n    // Black circle where outer is white\n    float outerWhite = distance(rst, vec2(0));\n\t// outerWhite -= .3*sin(atan(rst.x,rst.y)*.2);\n    \n    outerWhite = smoothstep(ringRadius-.4, ringRadius-.3, outerWhite);\n    float rc = outerWhite;\n    \n    // White circle where outer is black\n    float outerBlack = distance(rst, vec2(0)); // TODO don't replicate this \n    outerBlack = smoothstep(ringRadius,ringRadius-0.788,outerBlack);\n    //outerBlack -= sin(rst.y+.1);\n\n    \n    // Multiply to get a ring\n    rc = outerBlack * outerWhite;\n    \n    \n    \n\n    // INITIAL DOTS\n    float divisions = 30.;\n\n    // Create grid\n    vec2 dst = st * divisions;\n    \n    // Divide into squares\n    dst = mod(dst,1.);\n    \n    // Create circles\n    float c;\n    c = distance(dst, vec2(.5));\n\n    \n    // Use ring to size dots.\n    float rcClamped = clamp(rc, .01, .6);\n\tc = smoothstep(rcClamped, rcClamped+.1, c);\n    \n        \n    // COLOR\n    float inverted  = 1.0-c;\n    \n    vec3 colorA = vec3(1.000,0.082,0.621);\n    vec3 colorB = vec3(1.000,0.152,0.009);\n    vec3 cPos = mix(colorA, colorB, st.x);\n    \n    vec3 color = cPos * inverted;\n    \n    vec3 colored = color + vec3(c);\n    colored = vec3(1.) - colored;\n    \n    colored = colored * clamp(rc*2.5, .4, 1.);\n\n    fragColor = vec4(vec3(colored),1.0);\n}","name":"Image","description":"","type":"image"}]}