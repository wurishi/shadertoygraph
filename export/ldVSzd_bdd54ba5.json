{"ver":"0.1","info":{"id":"ldVSzd","date":"1466137661","viewed":763,"name":"Karplus-Strong w/ pluck point","username":"hatsunearu","description":"Change the coefficient inside the pluckPoint variable to hear the timbre change.\nFork of https://www.shadertoy.com/view/MdyXRd","likes":11,"published":1,"flags":8,"usePreview":0,"tags":["audio","string","synthesis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) {float c=message(fragCoord.xy/8.);if(c>=0.){fragColor=vec4(c);return;}}\n\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"//============================================================\n// Hash Without Sine taken from https://www.shadertoy.com/view/4djSRW\n#define HASHSCALE1 .1031\nfloat hash11(float p)\n{\n\tvec3 p3  = fract(vec3(p) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n//============================================================\n\nconst float c_pi = 3.14159265359;\nconst float c_twoPi = 6.28318530718;\n\n#define START_NOISE 0  // 1 = start with static, 0 = start with saw wave\n\nfloat NoteToFrequency (float octave,float note)\n/*\n\tCalculate the frequency of any note!\n\tfrequency = 440Ã—(2^(n/12))\n\n\tN=0 is A4\n\tN=1 is A#4\n\tetc...\n\n\tnotes go like so...\n\t0  = A\n\t1  = A#\n\t2  = B\n\t3  = C\n\t4  = C#\n\t5  = D\n\t6  = D#\n\t7  = E\n\t8  = F\n\t9  = F#\n\t10 = G\n\t11 = G#\n*/\n{\n\treturn 440.0*pow(2.0,((octave-4.0)*12.0+note)/12.0);\n}\n\nfloat KarplusStrongSample (float time, float frequency)\n{\n    // setup\n    float numSamples = floor(iSampleRate / frequency);\n    float bufferLoopCount = floor(time * iSampleRate / numSamples);\n    float sampleIndex = mod(floor(time * iSampleRate), numSamples);\n    float pluckPoint = floor(0.01 * numSamples);\n    \n    // piecewise linear, increase up to 1 at pluckPoint and decrease to 0 at numSamples\n   \tfloat sample1;\n    if (sampleIndex <= pluckPoint) {\n        sample1 = sampleIndex / pluckPoint;\n    }\n    else {\n        sample1 = 1.0 - (sampleIndex - pluckPoint) / (numSamples - pluckPoint);\n    }\n    \n    \n    float sample2 = sin(time * frequency * c_twoPi);\n        \n    // calculate our interpolation values\n    float percentTime = pow(0.98, bufferLoopCount);    \n    float amplitude = percentTime;\n    float lerp = pow(1.0 - percentTime, 0.25) * 0.125 + 0.875;\n    \n    // lerp from static to sine wave over time\n    return mix(sample1, sample2, lerp) * amplitude;    \n}\n\nfloat MakeNote (float time, float noteLen, float frequency, inout float timeCheck)\n{\n    float ret = 0.0;\n    \n    const float c_ringTime = 0.25;\n\n    if (time >= timeCheck && time < timeCheck + c_ringTime + noteLen)\n        ret += KarplusStrongSample(time - timeCheck, frequency);\n    \n\ttimeCheck += noteLen;\n        \n\treturn ret;\n}\n\nvec2 mainSound( in int samp, float time )\n{   \n    float timeCheck = 0.0;   \n    float sample = 0.0;\n    \n    time = mod(time, 10.0);\n\n    if (time < 7.5) {\n        time = mod(time, 2.5);\n\n        sample += MakeNote(time, 1.0/4.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/2.0, NoteToFrequency(3.0, 0.0), timeCheck);\n\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0,-2.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 0.0), timeCheck);\n\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 1.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 0.0), timeCheck);\n\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0,-2.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 0.0), timeCheck);\n\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0,-4.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0,-2.0), timeCheck);\n    }\n    else {\n        time -= 7.5;\n        \n        sample += MakeNote(time, 1.0/4.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/2.0, NoteToFrequency(3.0, 0.0), timeCheck);\n\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0,-2.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 0.0), timeCheck);\n\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 1.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 0.0), timeCheck);\n\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 5.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 4.0), timeCheck);\n\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(2.0, 0.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 1.0), timeCheck);\n        sample += MakeNote(time, 1.0/8.0, NoteToFrequency(3.0, 0.0), timeCheck);        \n    }\n    \n    \n\treturn vec2(sample / 3.0);\n}\n","name":"Sound","description":"","type":"sound"}]}