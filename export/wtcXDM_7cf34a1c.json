{"ver":"0.1","info":{"id":"wtcXDM","date":"1581075018","viewed":135,"name":"Bolt action","username":"gaz","description":"used mat4","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sequence","mat4"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define MIN(d) if(de>d*SCL[idx]){de=d*SCL[idx];ID_OBJ=idx;}idx++;\n#define CO (MAT[idx]*vec4(p,1)).xyz/SCL[idx]\n\nbool BBflag=true;\n#define BB(bb,off,e)if (BBflag&&any(greaterThan(abs(p), bb)))\\\n\treturn length(max(abs(p-off)-bb,0.0))+float[](0.2,0.0005)[e];\n\nint ID_OBJ;  \nconst int NUM=11;\nmat4 MAT[NUM];\nfloat SCL[NUM];\nvec3  COL[NUM];\n\n// https://neort.io/art/bj2225k3p9f9psc9ovf0\nfloat ease_in_out_back(float x)\n{\n\tfloat t=x; float b=0.; float c=1.; float d=1.;\n\tfloat s = 1.70158;\n\tif ((t/=d/2.) < 1.) return c/2.*(t*t*(((s*=(1.525))+1.)*t - s)) + b;\n\treturn c/2.*((t-=2.)*t*(((s*=(1.525))+1.)*t + s) + 2.) + b;\n}\n\nfloat ease(float x)\n{\n \treturn ease_in_out_back(x);\n}\n\nvoid property()\n{    \n    // https://www.shadertoy.com/view/wdKXDy\n    float TIME = mod(iTime,20.0);\n    float T=0.0,SAM=0.0;\n\t#define Q(a) T=clamp((TIME-SAM)/a, 0.0, 1.0);SAM+=a;\n    \n    for(int i=0;i<10;i++)\n    {\n        float fi=float(i);\n        SCL[i]=1.2;\n    \tCOL[i]=hsv(fi*0.2, 0.7, 0.4);\n   \t\tMAT[i]=mat4(1);\n    }\n    \n    for(int i=5;i<10;i++)\n    {\n        float off=sin(iTime);\n     \tMAT[i]=move(vec3(0,0,2.5+off))*rotZ(off*2.2);   \n    }\n    \n    vec3[5] v;\n    for(int i=0;i<5;i++)\n    {\n        v[i]=vec3(cos(float(i)*0.2*TAU),0,sin(float(i)*0.2*TAU));\n    }\n    \n    for(int i=0;i<10;i++)\n    {\n        MAT[i] *= move(vec3(0,0,-1))*rotX(iTime*2.0)*rotY(iTime*1.2);\n        MAT[i] *= pointAtZ(-v[i%5]);\n    }\n\n    for(int i=0;i<5;i++)\n    {\n        Q(2.0)\n        int idx = (i*3)%5;\n        mat4 m = move(-ease(T)*v[idx]*20.0);\n    \tMAT[idx] *= m;\n    \tMAT[5+idx] *= m;           \n    }\n    \n    for(int i=0;i<5;i++)\n    {\n        Q(2.0)\n        int idx = (i*3)%5;\n        mat4 m = move(ease(T)*v[idx]*20.0);\n    \tMAT[idx] *= m;\n    \tMAT[5+idx] *= m;    \n    }\n    \n    for(int i=0;i<10;i++)\n    {\n\t    MAT[i] *= move(v[i%5]*10.0);\n        MAT[i] *= move(vec3(0,abs(sin(iTime*1.5)),0)*3.0);\n        MAT[i] *= rotY(iTime*0.5);\n    }\n    \n    MAT[10]=mat4(1);\n    SCL[10]=1.0;\n    COL[10]=vec3(0.5,0.6,1.0);\n    \n}\n\nfloat deDisk(vec3 p)\n{\n    float h=length(p.xz)-18.0;\n    return length(max(vec2(h,abs(p.y-clamp(p.y,-2.5,-0.5))),0.0))-0.2;\n}\n\n\nfloat deBolt(vec3 p,float h)\n{\n    BB(vec3(1.3,1.3,h+0.3),vec3(0,0,h/2.0),0)\n    float d2=dot(pFold(p.xy,6.0),vec2(0,1))-1.0;\n    float de= length(max(vec2(d2,abs(p.z)-0.35),0.0))-0.07;\n    // https://www.shadertoy.com/view/ttB3DV\n    float r=0.35;\n    float coils=16.0;\n    float x = distance(p, vec3(normalize(p.xy)*r, clamp(p.z, 0.0, h)));\n\tfloat y = asin(sin(p.z*coils - 0.5*atan(p.x,p.y)))/coils;\n    de = min(de,dot(abs(vec2(x, y)),normalize(vec2(1)))-0.2);\n    de=max(de,-(length(max(vec2(length(p.xy)-1.0,abs(p.z-clamp(p.z,h+0.2,h+2.0))),0.0))-0.02));    \n    de=min(de,length(max(vec2(length(p.xy)-0.5,abs(p.z-clamp(p.z,h+0.1,h+0.15))),0.0))-0.05);\n    return de;\n}\n\nfloat deNut(vec3 p)\n{\n    BB(vec3(1.3,1.3,0.6),vec3(0),0)\n    float d2=dot(pFold(p.xy,6.0),vec2(0,1))-1.0;\n    float de= length(max(vec2(d2,abs(p.z)-0.35),0.0))-0.07;\n    de=smax(de,-(length(max(vec2(length(p.xy)-0.38,abs(p.z-clamp(p.z,-1.0,1.0))),0.0))-0.05),8.0);\n    float r=0.35;\n    float h=2.2;\n    float coils=16.0;\n    float x = distance(p, vec3(normalize(p.xy)*r, clamp(p.z, -h, h)));\n\tfloat y = asin(sin(p.z*coils - 0.5*atan(p.x,p.y)))/coils;\n    return max(de,-(dot(abs(vec2(x, y)),normalize(vec2(1)))-0.2));\n}\n\nfloat map(vec3 p)\n{\n    float de=1e9;\n    int idx=0;\n    for(int i=0;i<5;i++){\n    \tMIN(deBolt(CO,3.5))\n    }\n    for(int i=0;i<5;i++){\n    \tMIN(deNut(CO))\n    }\n \tMIN(deDisk(CO))\n    return de;\n}\n\nvec3 doColor(vec3 p)\n{\n    if (ID_OBJ==10) return mix(0.6*texture(iChannel0, p.xz*0.1).xxx,\n    \t\tCOL[ID_OBJ], 0.3);\n\treturn COL[ID_OBJ];   \n}\n\nvec3 calcNormal(vec3 p )\n{\n    vec3 n = vec3(0.0);\n    for(int i = 0; i < 4; i++)\n    {\n        vec3 e = 0.001*(vec3(9>>i&1, i>>1&1, i&1)*2.0-1.0);\n        n += e * map(p + e);\n    }\n    return normalize(n);\n}\n\nfloat softshadow(in vec3 ro, in vec3 rd)\n{\n\tfloat res = 1.0;\n    float t = 0.05;\n    for(int i = 0; i < 32; i++)\n    {\n\t\tfloat h = map(ro + rd * t);\n        res = min(res, 8.0 * h / t);\n        t += clamp(h, 0.02, 0.1);\n        if(h < 0.001 || t > 5.0) break;\n    }\n    return clamp(res, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    property();\n    vec2 uv = (fragCoord*2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0.0, 4.0,20);\n    ro= vec3(\n        cos(iTime*0.5+0.5*cos(iTime*.3))*20.0,\n        sin(iTime*0.8+0.5*sin(iTime*0.3))*2.0+8.0,\n        sin(iTime*0.3+1.2*sin(iTime*0.3))*15.0+5.0\n    );\n\tvec3 ta = vec3(0,3,1);\n    vec3 w = normalize(ta-ro);\n\tvec3 u = normalize(cross(w,vec3(0.0,1.0,0.0)));\n\tvec3 rd = mat3(u,cross(u,w),w)*normalize(vec3(uv, 2.0));\n    vec3 col = (1.0-texture(iChannel1, rd).xyz)*0.4;\n    float t = 0.0, h, maxd = 50.0;\n    for(int i = 0; i < 64; i++)\n    {\n        t += h = map(ro+rd*t);\n        if(h<0.001 || t>maxd) break;\n    }\n    if(t<maxd)\n    {\n        BBflag=false;\n        vec3 p = ro+t*rd;\n        vec3 n = calcNormal(p);\n\t\tcol = doColor(p);\n        vec3 li = normalize(vec3(2.0, 3.0, 3.0));\n        float dif = clamp(dot(n, li), 0.0, 1.0);\n        dif *= softshadow(p, li);\n        col *= max(dif, 0.3);\n        float rimd = pow(clamp(1.0 - dot(reflect(-li, n), -rd), 0.0, 1.0), 2.5);\n\t\tfloat frn = rimd + 2.2 * (1.0 - rimd);\n    \tcol *= frn*0.8;\n        col *= max(0.5+0.5*n.y, 0.0);\n        col *= exp2(-2.*pow(max(0.0, 1.0-map(p+n*0.3)/0.3),2.0));\n        col += pow(clamp(dot(reflect(rd, n), li), 0.0, 1.0), 60.0);\n        col = mix( col, vec3(0.0), 1.0-exp( -0.0005*t*t ) );\n    }\n\tcol = pow(col, vec3(0.7));\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define ZERO min(iFrame, 0)\n#define PI acos(-1.0)\n#define PIH PI*0.5\n#define TAU PI*2.0\n\nmat2 rot(float a)\n{\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nmat4 move(vec3 p){    \n\tmat4 m= mat4(1);\n\tm[3].xyz=-p;\n\treturn m;\n}\n\nmat4 rotX(float a)\n{\n    vec2 p=vec2(cos(a),sin(a));\n    mat4 m=mat4(1);\n    m[1].yz=p;\n    m[2].yz=vec2(-p.y,p.x);\n    return m;\n}\nmat4 rotY(float a)\n{\n    vec2 p=vec2(cos(a),sin(a));\n    mat4 m=mat4(1);\n    m[0].xz=p;\n    m[2].xz=vec2(-p.y,p.x);\n    return m;\n}\n\nmat4 rotZ(float a)\n{\n    vec2 p=vec2(cos(a),sin(a));\n    mat4 m=mat4(1);\n    m[0].xy=p;\n    m[1].xy=vec2(-p.y,p.x);\n    return m;\n}\n\nmat4 pointAtX(vec3 d)\n{\n    vec3 up=vec3(0,1,0);\n    vec3 side = normalize(cross(d,up));\n    mat4 m=mat4(1);\n    m[0].xyz=d;\n    m[1].xyz=cross(side,d);\n    m[2].xyz=side;\n    return inverse(m);\n}\n\nmat4 pointAtY(vec3 d)\n{\n    vec3 up=vec3(0,0,1);\n    vec3 side = normalize(cross(d,up));\n    mat4 m=mat4(1);\n    m[0].xyz=side;\n    m[1].xyz=d;\n    m[2].xyz=cross(side,d);\n    return inverse(m);\n}\n\nmat4 pointAtZ(vec3 d)\n{\n    vec3 up=vec3(0,1,0);\n    vec3 side = normalize(cross(d,up));\n    mat4 m=mat4(1);\n    m[0].xyz=side;\n    m[1].xyz=cross(side,d);\n    m[2].xyz=d;\n    return inverse(m);\n}\n\n\nvec3 hsv(float h,float s,float v)\n{\n    return ((clamp(abs(fract(h+vec3(0,2,1)/3.0)*6.0-3.0)-1.0,0.0,1.0)-1.0)*s+1.0)*v;\n}\n\nfloat smax(float a, float b, float k)\n{\n    return log(exp(k * a) + exp(k * b)) / k;\n}\n\nfloat smin( float a, float b, float k )\n{\n\tfloat h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvec2 pFold(vec2 p,float n)\n{\n    float h=floor(log2(n));\n    float a =TAU*exp2(h)/n;\n    for(int i=0;i<int(h)+2;i++)\n    {\n        vec2 v = vec2(-cos(a),sin(a));  \n        p-=2.0*smin(0.0,dot(p,v),0.05)*v;\n        a*=0.5;\n    }\n    return p;\n}\n","name":"Common","description":"","type":"common"}]}