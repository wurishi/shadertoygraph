{"ver":"0.1","info":{"id":"WljyRz","date":"1593595588","viewed":254,"name":"Stretching noise","username":"Leria","description":"Stretching the noise becomes faster than browsing it","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["noise","stretch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Based on this https://www.shadertoy.com/view/wtfcz2 by FabriceNeyret2\n\nvoid mainImage(  out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy,\n         uv = fragCoord / R.y /16. + vec2(.02*iTime,0),\n         stretching, T = vec2(.01*iTime,0);\n    mat2 rot = mat2(cos( 2. + vec4(0,1.5708,-1.5708,0))), M = rot;\n\n    int y = int(3.*fragCoord.y/R.y);                // panel id\n    float N = 7.,                           // amount of details\n          k = exp2(-N), e, v = 0.;\n    float w = -.2*sign(iMouse.z-1.) ;\n    \n    for (float i=0.; i<N; i++, k*=2.)       // Perlin fractal cascade\n    {\n        stretching = vec2( pow( 1.4, -(2.+iTime/10.) ) ,1 );       // stretching\n        v += abs(2.* texture(iChannel0, (uv/k-T) *stretching *M ).x -1. ) * k; // base noise\n        M *= rot;                           // to avoid grid-aligned artifacts\n    }\n    \n    v = smoothstep(-w,w, v-.37);            // shaping function\n    fragColor = vec4( pow(v,2./2.2) );              // to sRGB\n}","name":"Image","description":"","type":"image"}]}