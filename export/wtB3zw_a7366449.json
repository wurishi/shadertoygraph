{"ver":"0.1","info":{"id":"wtB3zw","date":"1558854002","viewed":155,"name":"computer grid","username":"tristanwhitehill","description":"grid","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash( vec2 x ) \n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*tan( (iTime*.004)*130.0 * k*fract( cos (x.x/x.y/(x.x*x.y))) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p*  floor(iTime*.4)*10. );\n\t\n\tvec2 u = f*f*floor(1.0-8.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n\tvec2 r = vec2( fragCoord.xy / iResolution.xy );\n\n    float mathy =cos(iTime*.07)*mod(r.y,iTime);\n     float n= floor(noise(10.*r));\n\tvec3 backgroundColor = vec3(0.0);\n\tvec3 axesColor = vec3(0.0, 0.0, 1.0);\n\tvec3 gridColor = vec3(0.0,1.0,.3);\n    \n\n\tvec3 pixel = backgroundColor;\n\t\n\n\tconst float tickWidth = .005;\n\tfor(float i=0.0; i<1.0; i+=tickWidth) {\n\t\n\t\tif(fract(sin((iTime+.05)+r.x + i))<0.002) pixel = gridColor;\n\t\tif(fract(cos((iTime+.03)+r.y - i))<0.002) pixel = gridColor;\n    }\n  \n\tfragColor = vec4(pixel/(n/r.x), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}