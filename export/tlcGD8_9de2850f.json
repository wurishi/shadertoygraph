{"ver":"0.1","info":{"id":"tlcGD8","date":"1576153084","viewed":295,"name":"Smiley first shader","username":"Matties","description":"First Shader","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["firstshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Circle(vec2 uv, vec2 p, float r, float blur) {\n    \n    float d = length(uv-p);\n    \n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n    \n    \n}\n\n\n//float Band(float t, float start, float end, float blur)\n//{float step1 = smoothstep(start-blur, start+blur, t);\n    \n    //return step1;\n    \n//}\n\nfloat Smiley (vec2 uv, vec2 p, float size){\n    \n    uv -= p; //translaten coordinate system\n    uv/= size; // scaling cordinate system\n    \n     float mask = Circle(uv, vec2(.2, -.1), .4, .01);\n    mask -= Circle(uv, vec2(-.0, -.0), .1, .01);\n    mask -= Circle(uv, vec2(.4, -.0), .1, .01);\n    \n    float mouth = Circle(uv, vec2(.2, -.1), .32, .01);\n    mouth -= Circle(uv, vec2(.2, -.05), .33, .01);\n    \n    mask -= mouth;\n   \n    \n    return mask;\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n uv -= 0.5;\n  uv.x *= iResolution.x/iResolution.y;\n    \n\n    vec3 col = vec3(1.);\n    \n    float mask = Smiley(uv, vec2 (-0., 0.), 0.5);\n   \n    \n  //  float mask = 0.;\n   // mask = Band(uv.x, -2., .2, 0.1);\n    \n    //col = vec3(mouth);\n    col = vec3 (1., 1., 1.) *mask;\n    \n         // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}