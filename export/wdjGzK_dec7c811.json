{"ver":"0.1","info":{"id":"wdjGzK","date":"1549488266","viewed":510,"name":"Fluid Velvet","username":"kubamaruszczyk1604","description":" Fluid mixing effect based on shifted periodic functions weighted with asymptotically decreasing coefficients. \n\n Effect similar to:\n http://glslsandbox.com/e#50602.1","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["simulation","fluid","effect","mixing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fluid mixing effect based on shifted periodic functions\n// weighted with asymptotically decreasing coefficients.\n// Use the mouse to interact with the shader\n\n//directive only for NVidia compilers\n//#pragma optionNV (unroll all)\n\n\n//Parameters\n#define SPEED 0.1\n#define RANGE_LOW 2\n#define RANGE_HI 40\n#define STEP 1\n\nvec3 Effect(float speed, vec2 uv, float time)\n{\n\n    float t = time*speed;\n    float rt = (t*0.45);\n    float irt = (t*0.005);\n    mat2 m1 = mat2(sin(rt),cos(rt),-cos(rt),sin(rt));\n    vec2 uva=m1*uv;\n    mat2 m2 = mat2(sin(irt),cos(irt),-cos(irt),sin(irt));\n\tfor(int i=RANGE_LOW;i<RANGE_HI;i+=STEP)\n\t{\t\n\t\tfloat it = float(i);\n        //uva*=(m2);\n        uva.y+=-it+(0.75/it) * cos(t + it*uva.x + 0.5*it)\n           *float(mod(it,2.0)==0.0);\n\t\tuva.x+=it+(0.5/it) * cos(t + it*uva.y + 0.5*(it+25.0));\n            // *float(mod(it,2.0)!=0.0);\n      \n        \n\t}\n    //Intensity range from 0 to n;\n    float n = 0.5;\n    float gb = n + n * sin(4.0*uva.x+t);\n    float r = n + n * sin(3.0*uva.y);\n    vec3 fc = vec3(gb-(0.3*uv.x),r*0.1,r);\n    vec3 gs = vec3(fc.x*0.33 *fc.y*0.33 + fc.z*0.33)*0.56;\n\treturn mix(fc,gs,pow(min(length(uv)*0.65,1.0),0.75));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse = 2.0 * mouse - 1.0;\n    mouse.x *= iResolution.x/iResolution.y;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \n    float l = length(uv-mouse);\n    //sigmoid fx\n    uv *= abs(uv)/(abs(uv)+exp(-l*8.0));//*cos(uv);\n    //uv.y -= 0.1*iTime;\n\tvec3 col = Effect(SPEED,uv,iTime);\n    //col*= Effect(SPEED,uv,iTime+10.0);\n    //col = float(l>=0.01) *col + \n       // float(l<0.01)*mix(vec3(0.0),col,l*8.0);\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}