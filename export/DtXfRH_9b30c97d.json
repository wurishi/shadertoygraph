{"ver":"0.1","info":{"id":"DtXfRH","date":"1692567446","viewed":99,"name":"Reverie","username":"funkymed","description":"neon kaleidoscope","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(0.50, 0.20, 0.25);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdOctogon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.9238795325, 0.3826834323, 0.4142135623 );\n    p = abs(p);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\n\nvec2 rotateUv(vec2 uv, vec2 pivot, float rotation) {\n    float cosa = cos(rotation);\n    float sina = sin(rotation);\n    uv -= pivot;\n    return vec2(\n        cosa * uv.x - sina * uv.y,\n        cosa * uv.y + sina * uv.x \n    ) + pivot;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finaleColor = vec3(0.0);\n    \n    uv = rotateUv(uv, vec2(0.), -iTime*0.3);\n    uv0 = rotateUv(uv0, vec2(0.), -iTime*0.3);\n\n     for(float i = 0.0; i < 6.0; i++){\n        \n        float x = 1.5+sin(iTime/2.)*.5;\n        uv = fract(uv*x) - 0.5;\n\n        float d = sdCircle(uv, 1.0) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i * .5 + iTime * .5);\n\n        d = sin(d * 8. - iTime) / 2.2;\n        d = abs(d);\n        d = pow(0.03 / d, 1.2);\n\n        finaleColor += col * d; \n        \n     }\n        \n    \n\n    fragColor = vec4(finaleColor, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}