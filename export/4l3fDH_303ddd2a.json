{"ver":"0.1","info":{"id":"4l3fDH","date":"1539327914","viewed":117,"name":"Gamma Demo","username":"futzer","description":"Drag the cursor to try different gamma correction values.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gamma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Gamma Demo - @futzer\n// Creative Commons CC0 1.0 Universal (CC-0)\n//\n// Print functionality from here:\n// https://www.shadertoy.com/view/4sBSWW\n\nfloat DigitBin( const int x )\n{\n    return x==0?480599.0:x==1?139810.0:x==2?476951.0:x==3?476999.0:x==4?350020.0:x==5?464711.0:x==6?464727.0:x==7?476228.0:x==8?481111.0:x==9?481095.0:0.0;\n}\n\nfloat PrintValue( vec2 vStringCoords, float fValue, float fMaxDigits, float fDecimalPlaces )\n{       \n    if ((vStringCoords.y < 0.0) || (vStringCoords.y >= 1.0)) return 0.0;\n    \n    bool bNeg = ( fValue < 0.0 );\n\tfValue = abs(fValue);\n    \n\tfloat fLog10Value = log2(abs(fValue)) / log2(10.0);\n\tfloat fBiggestIndex = max(floor(fLog10Value), 0.0);\n\tfloat fDigitIndex = fMaxDigits - floor(vStringCoords.x);\n\tfloat fCharBin = 0.0;\n\tif(fDigitIndex > (-fDecimalPlaces - 1.01)) {\n\t\tif(fDigitIndex > fBiggestIndex) {\n\t\t\tif((bNeg) && (fDigitIndex < (fBiggestIndex+1.5))) fCharBin = 1792.0;\n\t\t} else {\t\t\n\t\t\tif(fDigitIndex == -1.0) {\n\t\t\t\tif(fDecimalPlaces > 0.0) fCharBin = 2.0;\n\t\t\t} else {\n                float fReducedRangeValue = fValue;\n                if(fDigitIndex < 0.0) { fReducedRangeValue = fract( fValue ); fDigitIndex += 1.0; }\n\t\t\t\tfloat fDigitValue = (abs(fReducedRangeValue / (pow(10.0, fDigitIndex))));\n                fCharBin = DigitBin(int(floor(mod(fDigitValue, 10.0))));\n\t\t\t}\n        }\n\t}\n    return floor(mod((fCharBin / pow(2.0, floor(fract(vStringCoords.x) * 4.0) + (floor(vStringCoords.y * 5.0) * 4.0))), 2.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Time varying pixel color\n    float gamma = 5.f * iMouse.x/iResolution.x;\n    float isDebugText = PrintValue( (fragCoord - 10.f) / 10.f, gamma, 2.f, 2.f);\n    \n    vec3 col;\n    col.x = pow(fragCoord.x/iResolution.x, gamma);\n    col.y = pow(fragCoord.x/iResolution.x, gamma);\n    col.z = pow(fragCoord.x/iResolution.x, gamma);\n    \n    vec3 final = mix( col, vec3(0.0, 1.0, 0.0), isDebugText);\n\n    // Output to screen\n    fragColor = vec4(final,1.0);\n}","name":"Image","description":"","type":"image"}]}