{"ver":"0.1","info":{"id":"XtdcR7","date":"1533702804","viewed":900,"name":"Gold Stars","username":"ChrisK","description":"Like the classic starfield screensaver, but cuter.","likes":14,"published":3,"flags":0,"usePreview":0,"tags":["cute","stars","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//each loop uses one texture lookup to draw two stars (up to 256 loops)\n#define STARLOOPS 128\n\n\nfloat star( vec2 uv, vec2 p, float r, float spin ) {\n    vec2 o = uv-p;\n    float theta = atan(o.y/o.x) + (iTime*spin) + 3.14159265*float(o.x<0.0);\n    r *= 1.0 + sin(theta*5.0)*0.2;\n    float d = r-distance(uv,p);\n    return clamp(d*iResolution.y, 0.0, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.y - vec2(0.5*(iResolution.x/iResolution.y), 0.5);\n    \n    float starmask = 0.0;\n    for (int i=0; i<STARLOOPS; i++ ) {\n        float t = iTime/1.5 + float(i)/float(STARLOOPS);\n        float z = fract(t);\n    \tvec4 tex = texelFetch( iChannel0, ivec2(i,mod(floor(t),256.0)), 0 );\n        starmask += star( uv, ((tex.rg*2.0)-1.0)/(1.0-z), z*0.025, (tex.b-0.5)*10.0 );\n        starmask += star( uv, ((tex.ba*2.0)-1.0)/(1.0-z), z*0.025, (tex.r-0.5)*10.0 );\n    }\n    starmask = min(starmask, 1.0);\n    \n    vec3 col = vec3(0.05,0.1,0.5);\n    \n    //col = mix( col, vec3(0.75,0.05,0.05), clamp( (sin(length(uv)-iTime)-0.999)*10000.0, 0.0, 1.0 ) );\t//red rings\n    \n    col /= pow(1.0+length(uv), 2.0);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//vignette\n    \n    //filmic tonemapping -- http://filmicworlds.com/blog/filmic-tonemapping-operators/\n    col = max(col-0.004, 0.0);\n    col = col*(6.2*col+0.5)/(col*(6.2*col+1.7)+0.06);\n    \n    col = mix( col, vec3(1.0,0.9,0.05), starmask );\t\t\t\t\t\t\t\t\t\t\t\t\t\t//add stars\n    col += 0.01*(texelFetch(iChannel0, ivec2(mod(fragCoord+float(iFrame)*30.0,256.0)), 0).rgb-0.5);\t\t//add noise\n    \n    fragColor = vec4(col,1.0);\n}\n\n\n/*\n//Just playing a bit of golf. 581 characters.\n#define F float\n#define R iResolution\n#define I texelFetch(iChannel0,ivec2(\n\nF s(vec2 o, F r, F s) {\n    return clamp(R.y * (r*.025*(1.+\n                        sin( atan(o.y/o.x)*5. + iTime*(s-.5)*50. + 15.708*F(o.x<0.) )\n                        *.2)-length(o)),\n                 0., 1.);\n}\n\nvoid mainImage(out vec4 o, vec2 f) {\n    vec2 p = f/R.y - vec2(R.x/R.y, 1)*.5;\n    F m, i;\n    for(;i<128.;i++) {\n        F t = iTime/1.5 + i/128.,\n          z = fract(t);\n    \tvec4 h = I i,mod(t-z,256.)), 0 ),\n             j = (h*2.-1.)/(1.-z);\n        m += s( p-j.rg, z, h.b )\n           + s( p-j.ba, z, h.r );\n    }\n    vec3 c = max( vec3(.05,.1,.5) / pow(1.+length(p),2.) -.004, 0. );\n    o = vec4( mix( (6.2*c+.5)/(6.2*c+1.7+.06/c),\n                   vec3(1,.9,.05),\n                   min(m,1.) )\n    \t\t  +.01*( I mod(f+F(iFrame)*30.,256.)),0).rgb-.5),\n              1);\n}\n*/","name":"Image","description":"","type":"image"}]}