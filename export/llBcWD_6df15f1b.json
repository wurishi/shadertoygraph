{"ver":"0.1","info":{"id":"llBcWD","date":"1508590007","viewed":129,"name":"Multiple windows","username":"ishiyama","description":"Multiple windows","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["windows"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_WINDOWS 4\n\nvoid DrawWindow(inout vec4 ioFragColor, in vec2 inFragCoord, in vec2 inResolution, in int inID) \n{\n\tvec2 uv = inFragCoord / inResolution;\n\tif (inID == 0)\n\t{\n\t\tioFragColor = vec4(uv, 0.5 + 0.5 * sin(iTime), 1.0);\n\t}\n\telse if (inID == 1)\n\t{\n        ivec2 size = textureSize(iChannel0, 0);\n\t\tfloat lod = sqrt(float(size.x * size.y) / (inResolution.x * inResolution.y)) - 1.0;\n\t\tioFragColor = textureLod(iChannel1, uv, lod);\n\t}\n\telse if (inID == 2)\n\t{\n        ivec2 size = textureSize(iChannel1, 0);\n\t\tfloat lod = sqrt(float(size.x * size.y) / (inResolution.x * inResolution.y)) - 1.0;\n\t\tioFragColor = textureLod(iChannel2, uv, lod);\n\t}\n\telse\n\t{\n        ivec2 size = textureSize(iChannel1, 0);\n\t\tfloat lod = sqrt(float(size.x * size.y) / (inResolution.x * inResolution.y)) - 1.0;\n\t\tioFragColor = textureLod(iChannel0, uv, lod);\n\t}\n}\n\n\nbool CalcWindowCoordinate(\n\tin vec2 inFragCoord,\n\tin vec2 inResolution,\n\tin vec2 inUVPosition,\n\tin vec2 inUVSize,\n\tout vec2 outWndFragCoord,\n\tout vec2 outWndResolution\n\t)\n{\n\toutWndFragCoord\t= inFragCoord - inUVPosition * inResolution;\n\toutWndResolution= inUVSize * inResolution;\n\treturn all(bvec4(lessThanEqual(vec2(0.0), outWndFragCoord), lessThanEqual(outWndFragCoord, outWndResolution)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(0.0);\n    \n\tvec2 wnd_pos[NUM_WINDOWS];\n\tfor (int i = 0; i < NUM_WINDOWS; ++i)\n\t{\n\t\tfloat r = float(i);\n\t\tfloat s = r + 0.1 * iTime;\n\t\tfloat t = sqrt(2.0) * (r * r + 0.1 * iTime); \n\t\tfloat u = sqrt(3.0) * (r * r * r + 0.1 * iTime);\n\t\tfloat v = sqrt(4.0) * (r * r * r * r + 0.1 * iTime);\n\t\tvec2 wnd_pos = vec2(0.25 + 0.25 * sin(s) * cos(t), 0.25 + 0.25 * sin(u) * sin(v));\n\t\tvec2 wnd_size = vec2(0.3) + 0.2 * vec2(sin(s), cos(u));\n        wnd_size.y *= iResolution.x / iResolution.y;\n        \n\t\tvec2 wnd_frag_coord;\n\t\tvec2 wnd_resolution;\n\t\tbool is_valid = CalcWindowCoordinate(fragCoord, iResolution.xy, wnd_pos, wnd_size, wnd_frag_coord, wnd_resolution);\n\t\tif(!is_valid) continue;\n\t\t\n        DrawWindow(fragColor, wnd_frag_coord.xy, wnd_resolution.xy, i);\n\t}\n}\n","name":"Image","description":"","type":"image"}]}