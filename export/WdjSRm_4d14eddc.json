{"ver":"0.1","info":{"id":"WdjSRm","date":"1553262252","viewed":96,"name":"Prism Logo Test 2","username":"cabbibo","description":"Logo for prismatic simulations","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["logo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvec3 hsv(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\n// Optimised by Alan Zucconi\nvec3 bump3y (vec3 x, vec3 yoffset)\n{\n vec3 y = vec3( 1. - x * x );\n y = clamp(y-yoffset,0.,1.);\n return y;\n}\nvec3 spectral (float w)\n{\n    // w: [400, 700]\n // x: [0,   1]\n float x = w;// clamp((w - 400.0)/ 300.0,0.,1.);\n \n const vec3 cs = vec3(3.54541723, 2.86670055, 2.29421995);\n const vec3 xs = vec3(0.69548916, 0.49416934, 0.28269708);\n const vec3 ys = vec3(0.02320775, 0.15936245, 0.53520021);\n \n return bump3y ( cs * (x - xs), ys);\n}\n\nvec3 sat(vec3 rgb, float adjustment)\n{\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    vec3 intensity = vec3(dot(rgb, W));\n    return mix(intensity, rgb, adjustment);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n\tfloat ratio = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= ratio * 1.4;\n    uv.x += 0.;\n   \n   \tuv.y = 1.-uv.y;\n    \n    vec2 xy = normalize(rotate( uv , .23));\n    \n    \n    \n    float v = abs(xy.y  - .5);// * abs(xy.y);\n    \n    float sVal = xy.y * 2. - .5;\n    \n    float bands = 8.;\n    \n        // Time varying pixel color\n    vec3 col = spectral(floor(sVal * bands) / bands);//texture( iChannel0 , vec2( sVal,0.)).xyz;\n   // col = hsv(vec3(length(col),.5,1.));\n\tcol += .2 * length(col);\n    col = sat( col , 2.);\n  //  col = comix( vec3(1.),col,clamp(length(col) * length(col) * 10.,0.,1.));\n   // if( v >  0.24){ col = vec3( 0. );}\n    if( abs(uv.x-.5) > .49 ){ col = vec3(.3); }\n    if( abs(uv.y-.5) > .485 ){ col = vec3(.3); }\n    if( uv.x + uv.y * 1.4 < .3 ){ col = vec3(.3); }\n    \n    \n    fragColor = vec4(col,1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}