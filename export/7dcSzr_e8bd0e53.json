{"ver":"0.1","info":{"id":"7dcSzr","date":"1632491766","viewed":107,"name":"Lava in Julia lowlands","username":"jin_x","description":"Fractal in 3D","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","raycasting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_ITER = 64;\nconst int Z_STEP = 256 / MAX_ITER;\n\nconst float PARAM = 0.387;\nconst float ZOOM_COEF = 0.9;\n\nconst float ROT = 5.0;\n\nconst float PRE = 15.0;\nconst float DUR = 60.0;\n\nconst float PI = 3.14159265358979;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float t = iTime - PRE;\n    if (t > 0.0) {\n        t = mod(t, DUR);\n    \tif (t >= DUR / 2.0) { t = DUR - t; }\n    }\n    float zoom = pow(ZOOM_COEF, t + PRE) * 0.667;\n    \n    float mxy = min(iResolution.x, iResolution.y);\n    vec2 cxy = iResolution.xy / mxy;\n    vec2 uv = (fragCoord / mxy - 0.5 * cxy) * 75.0 * zoom;\n    \n    // Rotate : x' = x*cos(a) - y*sin(a), y' = x*sin(a) + y*cos(a)\n    \n    float sa = sin(iTime/ROT), ca = cos(iTime/ROT);\n    uv *= mat2(ca, -sa, sa, ca);\n    \n    // Julia : x = x^2 - y^2 + x, y = 2 * x * y + y\n    \n    int iter;\n    fragColor = vec4(1.0, 0.25, 0, 0);\n    float x_param = cos(PI*1.5 - (t + PRE) / DUR * 4.3) * 0.8;\n    float y_param = sin(PI*1.5 - (t + PRE) / DUR * 4.3) * 0.8;\n    for (int z = MAX_ITER*2; z < MAX_ITER*3-1; ++z) {\n        vec2 xy = uv * float(z) / float(MAX_ITER*5);\n        for (iter = 0; iter <= z-MAX_ITER*2; ++iter) {\n            vec2 xy2 = xy * xy;\n            if (xy2.x + xy2.y > 4.0) { break; }\n            xy = vec2(xy2.x - xy2.y + x_param, 2.0 * xy.x * xy.y + y_param);\n        }\n        if (iter <= z-MAX_ITER*2) {\n            float c = float(MAX_ITER*3-1-z)/float(MAX_ITER);\n            fragColor = vec4(0.75-c/1.333, 1.0-c, c/2.0, 1.0);\n            break;\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}