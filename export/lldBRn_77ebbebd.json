{"ver":"0.1","info":{"id":"lldBRn","date":"1538490506","viewed":1640,"name":"Noise Functions","username":"sujay","description":"collection of noise functions","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise1d(float n){\n    return fract(cos(n*89.42)*343.42);\n}\nfloat noise2d(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(1.0,73))) * 43758.5453);\n}\n\nvec2 hash2( vec2 p )\n{\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv*sin(iTime);\n\n    vec3 col = vec3(noise2d(uv));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}