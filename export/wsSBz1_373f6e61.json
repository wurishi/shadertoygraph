{"ver":"0.1","info":{"id":"wsSBz1","date":"1589476078","viewed":299,"name":"Into Red Ashes","username":"Leria","description":"Cool stuff, wanted to share ;)\nI use noise to make this effect. ","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise","red","particle","ashes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI \t\t\t\t\t3.1415926\n#define RADIUS\t\t\t\t21.\n#define RAY_TRACING 0\nstruct Ray\n{\n    vec3 origin; //origin\n    vec3 dir; //direction of the ray\n};\n\nstruct Camera\n{\n    mat4 projection;\n \tvec3 pos; //position\n    vec3 focal_point; //focal point = target point\n    float vfov; //vertical fov\n};\n\n///////////////////////////////////////////////\nCamera cam;\n///////////////////////////////////////////////\n\nvec3 I = vec3(1., 0., 0.);\nvec3 J = vec3(0., 1., 0.);\nvec3 K = vec3(0., 0., 1.);\n\nvec3 ray_interpolation(Ray r, float t) \n{\n \treturn (r.origin + r.dir*t);   \n}\n\nvoid set_camera(vec3 pos, vec3 target, float theta /*degree*/)\n{\n    cam = Camera(mat4(1), pos, target, theta);\n}\n\nvoid init_camera(void)\n{\n    set_camera(vec3(.05, 2.8, 25.), vec3(0., 0., -10.), 60.); \n}\n\n\nfloat sdf_plane(vec3 pXp0, vec3 n)\n{\n\treturn dot(pXp0,n.xyz);   \n}\n\nfloat sdf_circle(vec3 pXp0, float radius)\n{\n    return (length(pXp0) - (radius));\n}\n\nvoid ray_march_scene(Ray r, float k, inout vec3 c)\n{\n    vec3 p = ray_interpolation(r, k);\n    for(float s = k; s < 16.; s+=k)\n    {              \n        if( sdf_circle(p-vec3(0., 0., -15.), RADIUS) >= 0. && sdf_plane(vec3(0., 0., -15.), vec3(-.25, 1., 0.)) == 0.)\n        {\n        \tvec4 tex = texture(iChannel0, p/4.+0.1*(iTime));\n        \tc = max(c, tex.rrr*vec3(0.9, 0.5, 0.4));\n        }\n        \n        p += r.dir * s;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    init_camera();\n    \n    vec2 uv = -(2.0*(fragCoord)-iResolution.xy)/iResolution.y;\n    \n    vec3 color = vec3(0.);\n\n    ray_march_scene(Ray(cam.pos, vec3(uv, -1.)), .5, color);\n    \n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}