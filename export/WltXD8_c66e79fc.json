{"ver":"0.1","info":{"id":"WltXD8","date":"1603328412","viewed":326,"name":"Slit-scan","username":"tomorrowevening","description":"Based on: https://www.shadertoy.com/view/Wt2GRw","likes":2,"published":3,"flags":34,"usePreview":0,"tags":["slitscan","dithered"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec4 ch0 = texture(iChannel0, uv);\n    fragColor = mix( ch0 , vec4(ch0.w), saturate(iMouse.z)); \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//slit-mask settings\nfloat pxwidth = 5.;\nfloat ditherstrength = 0.2;\n\nfloat saturate (float x){\n\treturn min(max(x,0.),1.);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float dither (vec2 fragCoord){\n    return texture(iChannel2, fragCoord / 1024.).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Mouse-Driven slit mask values\n    float mouse = max(0.1, iMouse.x / iResolution.x);\n    pxwidth = mouse * 20.;\n\tditherstrength = (iMouse.y / iResolution.y) * 20.; \n    //\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\tvec4 video = texture(iChannel0, uv);    \n\tvec4 buffer = texture(iChannel1, uv);\n    \n    float fr = float(iFrame);   // this drives the animation of the mask \n    float pxdither = pxwidth * (dither(fragCoord) - 0.5) * ditherstrength; // dither setup\n    \n    float mask = saturate( (fract( (fragCoord.x + pxdither + fr * pxwidth) / iResolution.x ) * iResolution.x / pxwidth) );\n    mask = ceil(1. - mask);\n\n    fragColor = mix(buffer, video, mask); // mix each masked frame to buffer\n    fragColor.w = mask; // for debug\n}","name":"Buffer A","description":"","type":"buffer"}]}