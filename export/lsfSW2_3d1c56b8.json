{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord.xy / iResolution.x;\n    float ring = 0.0;\n    for (float i=0.0; i<1.0; i+=0.001) {\n        float seed = floor((iTime-i)/0.07);\n        vec2 point = vec2(rand(vec2(seed, 0.5)), rand(vec2(0.5, seed)));\n        if (abs(sqrt(pow(pos.x-point.x,2.0)+pow(pos.y-point.y,2.0))-i/20.0) < 0.001) {\n            ring += 0.002/i;\n        }\n    }\n    fragColor = vec4(vec3(ring),1.0);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"// Code modified from \"Music - Pirates\" by Inigo Quilez\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//----------------------------------------------------------------------------------------\n\n#define PI2 6.2831\n\n// main instrument\nfloat music_box ( float freq, float time )\n{\n    float y = 0.0;\n    y += 0.35*sin(1.00*PI2*freq*time);\n    y += 0.22*sin(3.00*PI2*freq*time);\n    y += 0.14*sin(5.00*PI2*freq*time);\n    y += 0.07*sin(7.00*PI2*freq*time);\n    y += 0.03*sin(9.00*PI2*freq*time);\n    y *= exp(-2.3*time);\n\treturn y;\t\n}\n\n\n// music data\nfloat notes( float soundTime );\n\n//----------------------------------------------------------------------------------------\n// sound shader entrypoint\n//\n// input: time in seconds\n// ouput: stereo wave value at \"time\"\n//----------------------------------------------------------------------------------------\n\nvec2 mainSound( in int samp, float time )\n{\t\n    vec2 y = vec2(0.0);\n    y += vec2(0.7,0.3)*notes( (time)*1000.0 );\n    y *= 0.3;\n\treturn y;\n}\n\n//----------------------------------------------------------------------------------------\n  #define D(a) x=(t>float(a))?t-float(a):x;\n//----------------------------------------------------------------------------------------\n\nfloat notes( float t )\n{\n  float x = 0.0;\n  float y = 0.0;\n\n  // Ab3\n  x = 0.0;\n  D(23850) D(27010) D(36700)\n  y += music_box( 208.0, x/1000.0 );\n\n  // Bb3\n  x = 0.0;\n  D(29995)\n  y += music_box( 233.0, x/1000.0 );\n\n  // Db4\n  x = 0.0;\n  D(37995)\n  y += music_box( 277.0, x/1000.0 );\n\n  // Eb4\n  x = 0.0;\n  D(20980) D(33000) D(35502)\n  y += music_box( 311.0, x/1000.0 );\n\n  // F4\n  x = 0.0;\n  D(  850) D( 6880) D(37990) D(43950)\n  y += music_box( 349.0, x/1000.0 );\n\n  // Gb4\n  x = 0.0;\n  D(21020) D(23930) D(26995) D(35495) D(36695) D(42595)\n  y += music_box( 370.0, x/1000.0 );\n    \n  // G4\n  x = 0.0;\n  D( 6980) D(34200) D(41895)\n  y += music_box( 391.0, x/1000.0 );\n  \n  // Ab4\n  x = 0.0;\n  D(41195)\n  y += music_box( 415.0, x/1000.0);\n  \n  // A4\n  x = 0.0;\n  D( 4000) D( 9995) D(23980) D(29980) D(33000) D(40495) D(47095)\n  y += music_box( 440.0, x/1000.0 );\n\n  // Bb4\n  x = 0.0;\n  D(  990) D( 6990) D(12930) D(15950) D(35500) D(38000) D(42600) D(44040) D(50700)\n  y += music_box( 466.0, x/1000.0 );\n\n  // B4\n  x = 0.0;\n  D(26960) D(41900)\n  y += music_box( 494.0, x/1000.0 );\n  \n  // C5\n  x = 0.0;\n  D(24005) D(36705) D(41200)\n  y += music_box( 523.0, x/1000.0 );\n\n  // Db5\n  x = 0.0;\n  D(12960) D(15980) D(21040) D(22500) D(33000) D(35505) D(38004) D(40500)\n  y += music_box( 554.0, x/1000.0 );\n\n  // D5\n  x = 0.0;\n  D(30000)\n  y += music_box( 587.0, x/1000.0 );\n\n  // Eb5\n  x = 0.0;\n  D( 1000) D( 4005) D( 7000) D(10000) D(23000) D(37050) D(44090) D(47090) D(50800)\n  y += music_box( 622.0, x/1000.0 );\n  \n  // E5 (Fb5)\n  x = 0.0;\n  D(30005) D(36702) D(42607)\n  y += music_box( 659.0, x/1000.0 );\n\n  // F5\n  x = 0.0;\n  D( 3995) D(13000) D(21030) D(24000) D(28000) D(30800) D(33000) D(41907) D(47100)\n  y += music_box( 698.0, x/1000.0 );\n\n  // Gb5\n  x = 0.0;\n  D(15000) D(41207)\n  y += music_box( 740.0, x/1000.0 );\n\n  //G5\n  x = 0.0;\n  D(16000) D(40507) D(41903)\n  y += music_box( 784.0, x/1000.0 );\n  \n  //Ab5\n  x = 0.0;\n  D(17977) D(28650) D(42603)\n  y += music_box( 831.0, x/1000.0 );\n  \n  // A5\n  x = 0.0;\n  D(10010) D(40503)\n  y += music_box( 880.0, x/1000.0 );\n\n  // Bb5\n  x = 0.0;\n  D(17350) D(19810) D(29100) D(30800) D(32100) D(34800) D(41203)\n  y += music_box( 932.0, x/1000.0 );\n  \n  // B5\n  x = 0.0;\n  D(30009)\n  y += music_box( 988.0, x/1000.0 );\n\n  // C6\n  x = 0.0;\n  D(13005) D(16450) D(16900) D(17980) D(18820)\n  y += music_box(1046.0, x/1000.0 );\n  \n  // Db6\n  x = 0.0;\n  D( 9990) D(11860) D(18400) D(30400) D(33000)\n  y += music_box(1109.0, x/1000.0 );\n    \n  // D6\n  x = 0.0;\n  D(    0) D( 3000) D( 6100) D( 9000) D(43200) D(46100) D(49250)\n  y += music_box(1174.0, x/1000.0 );\n  \n  // E6\n  x = 0.0;\n  \n  y += music_box(1318.0, x/1000.0 );\n  \n  // F6\n  x = 0.0;\n  D( 1005) D( 7020) D(10000) D(10800) D(44100) D(50860)\n  y += music_box(1396.0, x/1000.0 );\n  \n  // Ab6\n  x = 0.0;\n  D(10400)\n  y += music_box(1661.0, x/1000.0 );\n  return y;\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsfSW2","date":"1407333460","viewed":903,"name":"Memory","username":"robalan","description":"\"Memory\" by Yoko Kanno","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["cowboybebop","musicbox"],"hasliked":0,"parentid":"","parentname":""}}