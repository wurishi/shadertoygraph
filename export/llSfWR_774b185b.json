{"ver":"0.1","info":{"id":"llSfWR","date":"1515312357","viewed":233,"name":"MAGFest18 Wrkshp Ex 1 - freakout","username":"asharp","description":"The first exercise from workshop","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["magfest2018"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float modI(float a,float b) {\n    float m=a-floor((a+0.5)/b)*b;\n    return floor(m+0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // #3 change color w/ x position\n    //vec2 p = fragCoord.xy / iResolution.xy;\n    \n    // #7 correct aspect ratio\n    vec2 q = fragCoord.xy / iResolution.xy;\n\tvec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    vec2 p_2 = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,0.0);\n    \n    // #4 change color w/ radius\n    //float d = length(p - vec2(0.5,0.5));\n    \n    // #8 move circle to center\n    float d = length(p - vec2(0.0,0.0));\n    float d_2 = length(p_2 - vec2(0.0,0.0));\n    \n    // #6 inversion\n    d = 1.0-d;\n    float d_circle = d;\n    d_2 = 1.0-d_2;\n    \n    //if (float(iTime) > 1,0)\n    //{\n    //    d = d;\n    //}\n    //else {\n    //    d = d*.25;\n    //}\n    //d = d + (float(iTime) % 1.0);\n    //d = d+clamp(sin(iTime*5.0), 0.0, 0.5);\n    d= sin(d*iTime*5.0);\n    d_2 = sin(d_2*iTime*5.0);\n    \n    // #10 \n    float phi = atan(p.y/p.x)+iTime*2.0;\n    float dd = 2.9*sin(phi*10.0);\n    float phi_2 = atan(p_2.y/p_2.x)+iTime*2.0;\n    float dd_2 = 2.9*sin(phi_2*10.0);\n    \n    // #9 smooth edges of circle\n    d=smoothstep(0.1,0.2,d) + dd;\n    d_2=smoothstep(0.1,0.2,d) + dd_2;\n    \n    \n    vec3 col_circle = vec3(0.0*d_circle,1.0*d_circle,0.0*d_circle);\n    vec3 col = vec3(255.0/255.0*d,105.0/255.0*d,180.0/255.0*d);\n    \n    col = col * d_circle;\n    \n    vec3 col_2 = vec3(255.0/255.0*d_2,105.0/255.0*d_2,180.0/255.0*d_2);\n    col_2 = col_2 * d_circle;\n    \n    \n\t//vec3 col = vec3(0.0, 1.0*p.x, 0.0);\n    fragColor = (vec4(col_circle, 1.0) - vec4( col, 1.0));\n    \n    float frameCnt = 3.0;\n    //float cond = float(iTime) % frameCnt;\n    float cond = mod(iTime, frameCnt);\n    if(cond <= frameCnt/3.0)\n    {\n        fragColor = vec4( col_2/col_circle, 1.0);\n    }\n    else if(cond <= frameCnt*2.0/3.0)\n    {\n        fragColor = vec4( (col_2-col_circle)*10.0, 1.0);\n    }\n    else\n    {\n        fragColor = vec4( col_2*col_circle *10.0, 1.0);\n    }\n}\n\n","name":"Image","description":"","type":"image"}]}