{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"//\"Glass Field\" by Kali\n// From https://www.shadertoy.com/view/4ssGWr\n\n// boxplorer i/o\nvec3 eye, dir;\nuniform float xres, yres, speed, time;\n\n#define lightcol1 vec3(1.,.95,.85)\n#define lightcol2 vec3(.85,.95,1.)\n\n\n//Rotation matrix by Syntopia\nmat3 rotmat(vec3 v, float angle)\n{\n\tfloat c = cos(angle);\n\tfloat s = sin(angle);\n\t\n\treturn mat3(c + (1.0 - c) * v.x * v.x, (1.0 - c) * v.x * v.y - s * v.z, (1.0 - c) * v.x * v.z + s * v.y,\n\t\t(1.0 - c) * v.x * v.y + s * v.z, c + (1.0 - c) * v.y * v.y, (1.0 - c) * v.y * v.z - s * v.x,\n\t\t(1.0 - c) * v.x * v.z - s * v.y, (1.0 - c) * v.y * v.z + s * v.x, c + (1.0 - c) * v.z * v.z\n\t\t);\n}\n\n//Smooth min by IQ\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\n//Distance Field\nfloat de(vec3 pos) {\n\tvec3 A=vec3(5.);\n\tvec3 p = abs(A-mod(pos,2.0*A)); //tiling fold by Syntopia\n\tfloat sph=length(p)-2.5;\n\tfloat cyl=length(p.xy)-.4;\n\tcyl=min(cyl,length(p.xz))-.4;\n\tcyl=min(cyl,length(p.yz))-.4;\n\t//cyl=min(cyl,length(p.yz-(cyl*.5)))-.4;\n    return smin(cyl,sph,1.5);\n}\n\n// finite difference normal\nvec3 normal(vec3 pos) {\n\tvec3 e = vec3(0.0,0.01,0.0);\n\t\n\treturn normalize(vec3(\n\t\t\tde(pos+e.yxx)-de(pos-e.yxx),\n\t\t\tde(pos+e.xyx)-de(pos-e.xyx),\n\t\t\tde(pos+e.xxy)-de(pos-e.xxy)\n\t\t\t)\n\t\t);\t\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = iTime*.6; \n\n\t//camera\n\tmat3 rotview=rotmat(normalize(vec3(1.)),sin(time*.6));\n\tvec2 coord = gl_FragCoord.xy / iResolution.xy *2. - vec2(1.);\n\tcoord.y *= iResolution.y / iResolution.x;\n\tfloat fov=min((time*.2+.05),0.8); //animate fov at start\n\tvec3 from = vec3(cos(time)*2.,sin(time*.5)*10.,time*5.);\n\n\t//raymarch\n\tfloat totdist=0.;\n\tfloat distfade=1.;\n\tfloat glassfade=1.;\n\tfloat intens=1.;\n\tfloat maxdist=50.;\n\tfloat vol=0.;\n\tvec3 spec=vec3(0.);\n\tvec3 raydir=normalize(vec3(coord.xy*fov,1.))*rotview; \n\tfloat ref=0.;\n\tvec3 light1=normalize(vec3(cos(time),sin(time*3.)*.5,sin(time)));\n\tvec3 light2=normalize(vec3(cos(time),sin(time*3.)*.5,-sin(time)));\n\n\n\tfor (int r=0; r<70; r++) {\n\t\tvec3 p=from+totdist*raydir;\n\t\tfloat d=de(p);\n\t\tfloat distfade=exp(-1.*pow(totdist/maxdist,2.));\n\t\tintens=min(distfade,glassfade);\n\t\tvec3 n=normal(p);\n\t\t// refraction\n\t\tif (d>0.0 && ref>.5) {\n\t\t\tref=0.;\n\t\t\tif (dot(raydir,n)<-.5) raydir=normalize(refract(raydir,n,1./.88));\n\t\t\tvec3 refl=reflect(raydir,n);\n\t\t\tspec+=lightcol1*pow(max(dot(refl,light1),0.0),40.)*intens*.75;\n\t\t\tspec+=lightcol2*pow(max(dot(refl,light2),0.0),40.)*intens*.75;\n\n\t\t}\n\t\tif (d<0.0 && ref<.05) {\n\t\t\tref=1.;\n\t\t\tif (dot(raydir,n)<-.05) raydir=normalize(refract(raydir,n,.88));\n\t\t\tvec3 refl=reflect(raydir,n);\n\t\t\tglassfade*=.6;\n\t\t\tspec+=lightcol1*pow(max(dot(refl,light1),0.0),40.)*intens;\n\t\t\tspec+=lightcol2*pow(max(dot(refl,light2),0.0),40.)*intens;\n\t\t}\n\t\t\n\t\ttotdist+=max(0.01,abs(d)); //advance ray \n\n\t\tvol+=intens; //accumulate current intensity\n\t}\n\ttotdist=min(maxdist,totdist);\n\tvol=pow(vol,1.5)*.0007;\n\tvec3 col=vec3(vol)+vec3(spec)*.4+vec3(.05);\n\n\t//lights\n\tcol*=min(1.5,time); //fade in\n\n  fragColor=vec4(col,1.);  // boxplorify write\n}\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XlsGWl","date":"1426157781","viewed":981,"name":"Fragile","username":"Kali","description":"Raymarching glass","likes":45,"published":1,"flags":0,"usePreview":1,"tags":["raymarching","refraction","glass"],"hasliked":0,"parentid":"","parentname":""}}