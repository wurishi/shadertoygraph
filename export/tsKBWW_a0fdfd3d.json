{"ver":"0.1","info":{"id":"tsKBWW","date":"1607181127","viewed":97,"name":"Landscape_01_lopo","username":"lopoisaac","description":"Just some practice with sin waves and color gradations...","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["landscape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec4 crea_fondo(vec2 uv)\n  {\n    vec3 color_arriba = vec3(0.8, 0.3, 0.4);\n    vec3 color_abajo = vec3(1., 0.7, 0.6);\n    return vec4(mix(color_abajo, color_arriba, uv.y * 2. - 1.), 1.);\n  }\n\nvec4 crea_montana(vec2 uv, float pos)\n  {\n    // alpha\n    float amplitud = .04;\n    float freq = 10.;\n    float desfase = pos * 11.;\n    uv.y = -uv.y + pos;\n    float alpha = uv.y +\n      amplitud /1. * sin((uv.x + desfase) * freq * 1.) +\n      amplitud /8. * sin((uv.x + desfase) * freq * 5.) +\n      amplitud /32. * sin((uv.x + desfase) * freq * 32.);\n\n    // color\n    vec3 color;\n    vec3 color_arriba = vec3(1., 0.3, 0.4);\n    vec3 color_abajo = vec3(1., 0.8, 1.);\n    color = mix(color_arriba, color_abajo, clamp(uv.y * 5. -.5, 0., 1.));\n    color = color * pos;\n    //alpha = step(0.1, alpha);\n    alpha = smoothstep(.0, 2./iResolution.y, alpha-.1); \n    return vec4(color, alpha);\n  }\n\nvec4 crea_planeta(vec2 uv, vec2 planeta_posicion, float escala)\n  {\n    //ratio: los planetas permanecen redondos aunque cambie la ventana\n    vec2 ratio = vec2(iResolution.x/iResolution.y, 1.);\n    planeta_posicion *= ratio;\n    // colores \n    vec4 planeta;\n      \n    //planeta.a = step(length(planeta_posicion), escala);\n    planeta.a = smoothstep(2./iResolution.y, 0.001, length(planeta_posicion)-escala); \t\n    float sombra = length(planeta_posicion - vec2(-.1, .1));\n    planeta.xyz = mix(vec3(1., 0.3, 0.5), vec3(0.5, 0.22, .4), sombra * 3.);\n    return planeta;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord / iResolution.xy;\n  vec2 ratio = vec2(iResolution.x/iResolution.y, 1.);\n  // crea fondo\n  vec4 fondo = crea_fondo(uv);\n\n  // crea montañas\n  float horizonte = 0.8;\n  float num_montanas = 5.;\n  vec4 color = vec4(vec3(0.), 1.);\n\n  // crea planetas\n\n  // crea planeta grande:\n  vec4 planetas = vec4(0.);\n  vec4 planeta1 = crea_planeta(uv, uv -.8, .2);\n  // crea planeta pequeño\n  float sombra_planeta2 = smoothstep(0., .12, length((uv - vec2(0.74, 0.7)) * ratio));\n  planeta1.xyz *= sombra_planeta2;\n  vec4 planeta2 = crea_planeta(uv, uv -.7, .1);\n \n  planetas = mix(planetas, planeta1, planeta1.a);\n  planetas = mix(planetas, planeta2, planeta2.a);\n\n  // mezcla fondo y montañas\n  color = fondo;\n  color = mix(color, planetas, planetas.a);\n\n  for (float i = 1.; i < num_montanas + 1.; i ++)\n    {\n       vec4 montana = crea_montana(uv, horizonte - 0.1 * i);\n       color = mix(color, montana, montana.a);\n    }\n  \n  fragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}