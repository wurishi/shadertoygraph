{"ver":"0.1","info":{"id":"stSGRV","date":"1624246958","viewed":192,"name":"20210620_SPACE_GARDEN","username":"FMS_Cat","description":"live coded in Bonzomatic, 45 minutes\n\nhttps://twitter.com/urrativ/status/1403290917898010625","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["3d","fractal","raymarcher","livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define fs(i) (fract(sin(i*114.514)*1919.810))\n#define lofi(i,j) (floor((i)/(j))*(j))\n\nfloat time;\nfloat seed;\n\nconst float PI=acos(-1.);\nconst float TAU=PI*2.;\n\n// Pinieon !!!!!!!!\n\nfloat random(){\n  seed=fs(seed+1.);\n  return seed;\n}\n\nvec3 randomSphere(){\n  float phi=TAU*random();\n  float theta=acos(random()*2.-1.);\n  return vec3(cos(phi)*sin(theta),sin(phi)*sin(theta),cos(theta));\n}\n\nvec3 randomHemisphere(vec3 n){\n  vec3 d=randomSphere();\n  return dot(d,n)<0.0?-d:d;\n}\n\nmat2 r2d(float t){\n  return mat2(cos(t),sin(t),-sin(t),cos(t));\n}\n\nfloat sdbox(vec3 p,vec3 s){\n  vec3 d=abs(p)-s;\n  return min(0.,max(d.x,max(d.y,d.z)))+length(max(d,vec3(0.0)));\n}\n\nfloat ease(float t){\n  return 0.5+0.5*cos(PI*exp(-t*5.));\n}\n\nmat3 orthBas(vec3 z){\n  z=normalize(z);\n  vec3 up=abs(z.y)>.99?vec3(0,0,1):vec3(0,1,0);\n  vec3 x=normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\nvec3 ifs(vec3 p,vec3 rot,vec3 s){\n  mat3 b=orthBas(rot);\n  for(int i=0;i<6;i++){\n    s*=b;\n    s*=0.56;\n    p=abs(p)-abs(s);\n    p.xy=p.x<p.y?p.yx:p.xy;\n    p.yz=p.y<p.z?p.zy:p.yz;\n  }\n  return p;\n}\n\nvec3 noise(vec3 p,vec3 bas,float pump){\n  mat3 b=orthBas(bas);\n  vec4 sum=vec4(0);\n  float warp=1.1;\n  for(int i=0;i<5;i++){\n    p*=b;\n    p*=2.0;\n    p+=sin(p.yzx);\n    sum+=vec4(cross(sin(p.zxy),cos(p)),1);\n    sum*=pump;\n    warp*=1.3;\n  }\n  return sum.xyz/sum.w;\n}\n\nvec4 map(vec3 p){\n  vec3 pt=p;\n  pt.zx=r2d(time*.1)*pt.zx;\n  pt.z-=.1*time;\n  vec3 cell=lofi(pt,2.0)+1.0;\n  pt-=cell;\n  float heck=abs(pt.x)+abs(pt.y)+abs(pt.z);\n  float clampbox=sdbox(pt,vec3(0.8));\n  float ph=0.5*time+0.2*(cell.x+cell.y+cell.z);\n  vec3 rot=mix(\n    fs(vec3(1.4,2.1,3.5)+floor(ph)),\n    fs(vec3(1.4,2.1,3.5)+floor(ph+1.)),\n    ease(fract(ph))\n  );\n  vec3 sh=1.0+0.2*mix(\n    fs(vec3(2.4,3.1,1.5)+floor(ph)),\n    fs(vec3(2.4,3.1,1.5)+floor(ph+1.)),\n    ease(fract(ph))\n  );\n  pt=ifs(pt,rot,sh);\n  float d=sdbox(pt,vec3(.04));\n  d=max(d,clampbox);\n  //d+=0.002*noise(2.0*p,vec3(1),2.0).x;\n\n  return vec4(d,1,min(abs(pt.x),abs(pt.z)),0);\n}\n\nvec3 nmap(vec3 p,vec2 d){\n  return normalize(vec3(\n    map(p+d.yxx).x-map(p-d.yxx).x,\n    map(p+d.xyx).x-map(p-d.xyx).x,\n    map(p+d.xxy).x-map(p-d.xxy).x\n  ));\n}\n\nfloat aomap(vec3 p,vec3 n){\n  float accum=0.0;\n  for(int i=0;i<30;i++){\n    vec3 pt=p+n*random()*randomHemisphere(n);\n    float d=map(pt).x;\n    accum+=smoothstep(0.0,-0.02,d)/30.0;\n  }\n  return 1.0-sqrt(accum);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vec2 p=uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n  \n  time=iTime;\n  seed+=texture(iChannel0,8.0*uv).x;\n  seed+=fract(time);\n  \n  time+=0.02*random();\n\n  vec3 ro=vec3(0,0,2);\n  vec3 rd=normalize(vec3(p,-1.+.4*length(p)));\n  rd.xy=r2d(time*.1)*rd.xy;\n  \n  vec3 col=vec3(0);\n  vec3 colRem=vec3(1);\n\n  for(int iR=0;iR<2;iR++){\n    float rl=1E-2;\n    vec3 rp=ro+rd*rl;\n    vec4 isect;\n    \n    for(int i=0;i<128;i++){\n      isect=map(rp);\n      rl+=isect.x*.6;\n      rp=ro+rd*rl;\n      \n      if(abs(isect.x)<1E-3){break;}\n    }\n    \n    float fog=exp(-0.04*rl);\n    vec3 haha=0.5+0.5*sin(-2.0+3.0*exp(-rl)+vec3(0,2,4));\n    haha+=vec3(0.2,0.5,1.1);\n    col+=colRem*(1.0-fog)*4.0*haha;\n    vec3 n=nmap(rp,vec2(0,1E-3));\n    float f=1.0-clamp(dot(-rd,n),0.,1.);\n    f=f*f*f*f*f;\n    col+=colRem*f*4.0*haha;\n    \n    if(abs(isect.x)<1E-3){\n      float ao=aomap(rp,n);\n      col+=0.2*colRem*fog*vec3(ao);\n      col+=vec3(0.1,1.0,0.2)*colRem*fog*smoothstep(0.001,0.0005,isect.z);\n      colRem*=0.1+0.9*f;\n      \n      ro=rp+n*1E-2;\n      rd=reflect(rd,n);\n    }else{\n      break;\n    }\n  }\n  \n  col=pow(col,vec3(.4545));\n  col*=1.-length(p)*.3;\n  col=vec3(\n    smoothstep(0.04,0.92,col.x),\n    smoothstep(-0.08,0.97,col.y),\n    smoothstep(-0.2,1.03,col.z)\n  );\n\n  fragColor = vec4(col,1);\n}\n","name":"Image","description":"","type":"image"}]}