{"ver":"0.1","info":{"id":"slcfzs","date":"1722705632","viewed":17,"name":"TBOS_Noise2","username":"nako","description":"The Book of Shades\nhttps://thebookofshaders.com/11/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat noise(vec2 st, float d){\n    \n    vec2 fract_st = fract(st);\n    vec2 p0 = floor(st);\n    vec2 p1 = p0 + vec2(1., 0.);\n    vec2 p2 = p0 + vec2(1., 1.);\n    vec2 p3 = p0 + vec2(0., 1.);\n    \n    float rand0 = random(p0)+d*.2;\n    float rand1 = random(p1)+d*.2;\n    float rand2 = random(p2)+d*.2;\n    float rand3 = random(p3)+d*.2;\n    \n    float mixed;\n    vec2 u;\n    //1\n    u = fract_st;\n    //2\n    u = smoothstep(0., 1., fract_st);\n    //3\n    u = fract_st * fract_st * (3. - 2. * fract_st);\n    u = fract_st * fract_st * (sin(iTime)*3. - (sin(iTime)*3.-1.) * fract_st);\n    \n    mixed = mix(rand0, rand1, u.x) \n            + (rand2-rand1)*u.x* u.y\n            + (rand3-rand0)*(1.-u.x)* u.y;\n    \n    //4\n    \n    mixed = rand0 + fract_st.x*(rand1-rand0) + sin(fract_st.x*2.*PI)*0.2\n            + (1.-fract_st.x)*(fract_st.y*(rand3-rand0) + sin(fract_st.y*2.*PI)*0.2)\n            + fract_st.x*(fract_st.y*(rand2-rand1) + sin(fract_st.y*2.*PI)*0.2);\n           \n    return mixed;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    float blue = st.y;\n    st *= 5.0; //sin(iTime)*3.0 + 3.0;\n    \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse.x *= iResolution.x/iResolution.y;\n    mouse *= 5.0;\n    \n    float d = distance(mouse, st);\n    \n    float col = noise(st, d);\n    \n    col = smoothstep(0.2, 0.3, sin(col*3.));\n    //col = smoothstep(0.2, 0.3, sin(col*6.)) - smoothstep(0.3, 0.4, sin(col*6.));\n    \n    fragColor = vec4(vec3(col*(1.-blue), col, blue),1.0);\n}","name":"Image","description":"","type":"image"}]}