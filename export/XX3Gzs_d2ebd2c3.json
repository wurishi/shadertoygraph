{"ver":"0.1","info":{"id":"XX3Gzs","date":"1717462614","viewed":45,"name":"Texture/Shader Assignment","username":"Mako1688","description":"This shader is a rainbow pool where a ripple is created where the mouse clicks. The shader also takes in any input in the iChannel0 on ShaderToy and displays it mixed with the shader.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ShaderToy shader\n\n// Convert HSV to RGB\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n// Generate ripple effect\nfloat ripple(vec2 uv, vec2 center, float time) {\n    float dist = distance(uv, center);\n    float ripple = sin(20.0 * dist - time * 5.0);\n    ripple *= exp(-2.0 * dist);\n    return ripple;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Center of the screen\n    vec2 center = vec2(0.5, 0.5);\n    \n    // Create a time-based color\n    float hue = mod(iTime * 0.1, 1.0); // Slowly change hue over time\n    vec3 color = hsv2rgb(vec3(hue, 1.0, 1.0));\n    \n    // Create a base liquidy effect using a sine function\n    float liquid = sin(uv.x * 10.0 + iTime * 2.0) * 0.05 +\n                   sin(uv.y * 10.0 + iTime * 2.0) * 0.05;\n    \n    // Apply liquid effect to color\n    color = hsv2rgb(vec3(hue + liquid, 1.0, 1.0));\n    \n    // Sample input (texture video, or anything) and blend it with the liquid effect color\n    vec3 videoColor = texture(iChannel0, uv).rgb;\n    color = mix(color, videoColor, 0.5);\n    \n    // Check for mouse clicks and create ripple effect\n    if (iMouse.z > 0.0) { // iMouse.z is non-zero when the mouse is pressed\n        vec2 mousePos = iMouse.xy / iResolution.xy;\n        float rippleEffect = ripple(uv, mousePos, iTime);\n        color += vec3(rippleEffect);\n    }\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}