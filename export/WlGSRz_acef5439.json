{"ver":"0.1","info":{"id":"WlGSRz","date":"1582022215","viewed":142,"name":"Smooth gradientyness","username":"Bupeldox","description":"It uses 3 points to get the colour and smoothes the gradients betweeen","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["smooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\n\nfloat counter = 0.0;\nvec2 grain(vec2 inp){\n    float fuzzSize = 0.02;\n    float offsetTime = iTime+20.0;\n    counter+=(((inp.x*offsetTime*iResolution.x)-100.0)*(inp.y*offsetTime*iResolution.y));\n    inp.x+= sin(mod(counter,6.2436346))*fuzzSize;\n    counter+=(((inp.x*offsetTime*iResolution.x)-100.0)*(inp.y*offsetTime*iResolution.y));\n    inp.y+=sin(mod(counter,6.2436346))*fuzzSize;\n    return inp;\n}\n\n\nfloat isin(float inp){\n    return ((sin(inp)+1.0)*0.5);\n}\n\nfloat icos(float inp){\n    return ((cos(inp)+1.0)*0.5);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = grain(uv);\n    \n    vec2[] points = vec2[](\n        vec2(isin(iTime),0.5),\n        vec2(icos(iTime*0.25),icos(iTime*0.5)),\n        vec2(0.9,icos(iTime*0.25))\n    );\n    \n     vec3 color = vec3(10);\n    \n    color.x = length(points[0]-uv);\n    color.y = length(points[1]-uv);\n    color.z = length(points[2]-uv);\n   \t\n    \n    \n    \n    \n    fragColor = vec4(color,1);\n    \n}\n\n","name":"Image","description":"","type":"image"}]}