{"ver":"0.1","info":{"id":"WtccRN","date":"1608523646","viewed":120,"name":"Linear Array Factor","username":"Diapsid","description":"Displays the log of the array factor of a linear array. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["array"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float log10(float n){\nreturn log(n)/log(10.);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float PI = 3.14159263;\n    float freq;\n    float dist;\n    float t;\n    int numEl;\n    float phaseDif;\n    \n    freq = 100.; //busyness of screen\n    t = iTime*0.1*60.; //a timing constant\n    dist =PI/freq; //inter-element distance. Set to PI/freq \n    //for max directivity without additional grating lobes\n    numEl = 5; //number of radiators\n    phaseDif = radians(0.); //set this to double the desired beam angle\n    \n    \n    float col = 0.; //color variable\n\n    for(int i = 0; i<numEl; i++){\n    uv = fragCoord/iResolution.xy; //reset coordinate plane\n    uv.y-=0.5; //move up on the screen\n    uv.x-=0.5-dist*(float(i)+1.)+float(numEl)*dist/2.; \n    col+=(5./float(numEl))*cos(freq*length(uv)-t-phaseDif*float(i));\n\n    }\n    col=abs(col);\n    uv = fragCoord/iResolution.xy;\n    uv-=0.5;\n    uv.x+=0.0053*(300./freq); //idk why I need this offset, but without it the pattern is very slightly assymetrical\n    col=log10(col/(20.*pow(length(uv), 2.)));//magnitude should \n    //fall off as distance squared. Then lake the logarithm for display purposes\n    \n    \n    vec3 c = vec3(col*0.4, 0.997, col*100.); //the constants here were found by experimentation\n    //play around with them if you want different colors.\n    c = hsv2rgb(c);\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}