{"ver":"0.1","info":{"id":"4tKSRV","date":"1485052836","viewed":400,"name":"Swinning Pendulums","username":"n1kk","description":"some pendulums in motion with slightly different phase shift making nice patterns","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["circles","patterns","lines","motion","pendulum","swing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getLineThickness(float thickness) {\n    // thickness optimized for resolution\n    return thickness * 400. / max(iResolution.x, iResolution.y); \n}\n\nfloat circle(vec2 origin, vec2 pos, float radius)\n{\n    float n = 100.0 / getLineThickness(1.0);\n    return clamp(((1.0-abs(length(origin + pos)-radius))-(1.0 - 1.0/n)) * n, 0.0, 1.0);\n}\n\nfloat circleFill(vec2 origin, vec2 pos, float radius)\n{\n    return clamp(((1.0-(length(origin+pos)-radius))-0.99)*150.0, 0.0, 1.0);   \n}\n\nfloat circleGlow(vec2 origin, vec2 pos, float radius, float len, float str)\n{\n    float inCircle = ((1.0-(length(origin + pos)-(radius + len)))-0.99) * str;\n    return clamp(inCircle, 0.0, 1.0);   \n}\n\n\n// courtesy of Inigo Quilez\nfloat line( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = -p - a;\n    vec2 ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float d = length( pa - ba*h );\n    //return clamp(((1.0 - d)-0.99)* 100.0 , 0.0, 1.0);\n\tfloat n = 100.0 / getLineThickness(1.5);\n    return clamp(((1.0 - d) - (1.0 - 1.0/n)) * n , 0.0, 1.0);\n}\n\nfloat lineGlow(in vec2 p, in vec2 a, in vec2 b, float str )\n{\n    vec2 pa = -p - a;\n    vec2 ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float d = length( pa - ba*h );\n    float n = 10.0;\n    return 0.1 * str * clamp(((1.0 - d) - (1.0 - 1.0/n)) * n , 0.0, 1.0);\n}\n\nvec2 pointOnACircle(vec2 pos, float r, float a) {\n \treturn vec2(pos.x + r * sin(a),  pos.y + r * cos(a));\n}\n\n//////////////////////////////////////////////\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    // origin\n    vec2 p = -1.0 + 2.0 * uv;\n    p.x *= iResolution.x / iResolution.y;\n    \n    vec3 colour = vec3(0);\n    vec3 white = vec3(1);\n    \n    vec3 c = vec3(0);\n    \n    #define SWING_RADIUS 1.7\n    #define SWING_ANGLE 0.1\n    #define SWING_SPEED 5.5\n    #define PHASE_SHIFT_RATE 0.015\n    \n    #define SHIFT_X 0.0\n    #define SHIFT_Y -0.85\n    \n    #define BALL_COUNT 18.0\n    #define BALL_SIZE 0.045\n    #define BALL_GLOW_SIZE 0.4\n    #define BALL_GLOW_STR 0.09\n   \t\n    #define STRING_ALPHA 0.3\n    #define STRING_GLOW 0.25\n    #define SWING_ALPHA 0.05\n    \n    #define STRING_COLOR 0.8*vec3(1.0, 0.85, 0.0)\n    #define BALL_COLOR vec3(0.0, 0.4, 0.9)\n\n    #define START_FRAME_SHIFT 18.78\n\n    \n    for(float i = 1.0; i <= BALL_COUNT; i++) {\n    \tvec2 fixed_point = vec2(SHIFT_X, -SWING_RADIUS + SHIFT_Y);\n        float curr_phase = 1.0 - i * PHASE_SHIFT_RATE;\n        float ang_vel = cos(SWING_SPEED * (iTime + START_FRAME_SHIFT) * curr_phase);\n        float curr_raduis = SWING_RADIUS + i * 0.09;\n        float curr_swing = SWING_ANGLE  * ang_vel;\n        float curr_ball_radius = BALL_SIZE + i * 0.001;\n        vec2 ball_pos = pointOnACircle(fixed_point, curr_raduis, curr_swing);\n        //curr_ball_radius = curr_ball_radius + curr_ball_radius * (ang_vel > 0. ? 1. : -1.) * 0.1;\n        // ball\n        c += circleFill(p, ball_pos, curr_ball_radius);// * BALL_COLOR;        \n        c += circleGlow(p, ball_pos, curr_ball_radius, BALL_GLOW_SIZE, BALL_GLOW_STR);\n        // string\n        c += line(p, fixed_point, ball_pos) * STRING_ALPHA * STRING_COLOR;\n        c += lineGlow(p, fixed_point, ball_pos, STRING_GLOW) * STRING_COLOR;\n        // curve\n        c += circle(p, fixed_point, curr_raduis) * SWING_ALPHA;\n    }\n    \n    c = clamp(c, 0.0, 1.0);\n   \tcolour = white * c;\n    fragColor = vec4(colour, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}