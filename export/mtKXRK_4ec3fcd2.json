{"ver":"0.1","info":{"id":"mtKXRK","date":"1686223138","viewed":58,"name":"Fork Combination","username":"williammanco","description":"The three basic boolean operations that help combine shape, in discrete and smooth form. BEWARE these operators produce a bound to the real SDF of the final shape, so they will slow down your raymarcher.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","distancefield","sdf"],"hasliked":0,"parentid":"lt3BW2","parentname":"Combination SDF"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float RadiusPx = 4.0;\nconst float SpacePx = 25.0;\n\n// Distance in pixels\nfloat circleDist(vec2 p, vec2 center) {\n    return distance(center, p) - RadiusPx;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // uv Oâ€¦1\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n   \n    // Find the nearest center\n    vec2 center = SpacePx*floor(fragCoord.xy/SpacePx)+SpacePx/2.0;\n\tvec4 dotColor = mix(vec4(1.), vec4(0.), clamp(circleDist(fragCoord.xy, center), 0.0, 1.0));\n    \n    // Vignetting\n    fragColor = dotColor;\n}","name":"Image","description":"","type":"image"}]}