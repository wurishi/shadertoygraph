{"ver":"0.1","info":{"id":"3lBBzK","date":"1599283714","viewed":85,"name":"b spline matrices","username":"casty","description":"drawing uniform cuadratic splines with de casteljau, textbook Matrix and the Matrix from wikipedia here\n\nhttps://es.wikipedia.org/wiki/B-spline\n\nThe one in wikipedia does not achieve the same result\n\nWhere is this matrix from? Am I interpreting it wrong?","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spline","matrix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst mat3 wikipediaMatrix = 0.5 * mat3( 1, 0, 0,\n    \t\t\t\t\t\t\t\t\t-2, 2, 1,\n    \t\t\t\t\t \t\t\t\t1, -2, 1);\n\n\nconst mat3 textbookMatrix = mat3( 1, 0, 0,\n\t\t\t\t \t\t   \t\t -2, 2, 0,\n\t\t\t\t   \t\t\t\t  1,-2, 1);\n\n\nfloat decasteljau(vec3 cf, float t) {\n    vec2 p = vec2(mix(cf[2], cf[1],t), mix(cf[1], cf[0], t));\n    return  mix(p.x, p.y, t);\n}\n\nfloat parabolic(vec3 cf, float t) {\n     return (1.-t)*(1.-t)*cf[2] + 2.*(1.-t)*t*cf[1] + t*t*cf[0];\n}\n\nfloat normalMat(vec3 cf, float t) {\n    vec3 monomials = vec3( t * t, t, 1. );\n    return dot( monomials, ( textbookMatrix * cf));\n    \n}\n\nfloat wikiMat(vec3 cf, float t){    \n    vec3 monomials = vec3( t * t, t, 1. );\n    return dot( monomials, ( wikipediaMatrix * cf));    \n}\n\nfloat line(vec2 uv, float v){\n    return -step(uv.y +.01, v) + step(uv.y -.01, v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 cf = vec3(0.25, 1.0, 0.5);\n    float t = uv.x;\n    \n\tfloat dcj = decasteljau(cf, t);\n    float par = parabolic(cf, t);\n    float nm = normalMat(cf, t);\n    float wi = wikiMat(cf, t);\n    \n    \n    fragColor = vec4(line(uv, wi),\n                     line(uv, dcj),\n                     line(uv, nm),\n                    1);\n}","name":"Image","description":"","type":"image"}]}