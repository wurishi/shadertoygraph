{"ver":"0.1","info":{"id":"lclSWH","date":"1707819352","viewed":155,"name":"Sun and Moon with glow","username":"MonadoMaster0","description":"Sun and Moon with shaders","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["sun","moon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI atan(1.0)*4.0\n\nfloat sign0(float x) {\n    return max(0.0,x)/x;\n}\n\nfloat Circle(vec2 p, float R) {\n    return step(1.0-R/2.0,1.0-length(p));\n}\n\nmat2 rot(float t) {\n    return mat2(cos(t),-sin(t),sin(t),cos(t));\n    }\n\nfloat rand(vec2 p) {\n    float r = dot(p,vec2(48.53,72.96));\n    r += mod(r,PI/2.);\n    return(fract(sin(r)*45315.6327));\n    }\n\nfloat perlin(vec2 p) {\n    float re = 0.0;\n\n    vec2 f = fract(p);\n    f = f*f*(3.0-2.0*f);\n    vec2 id = floor(p);\n    float topL = rand(id+vec2(-0.5,0.5)),\n          topR = rand(id+vec2(0.5,0.5)),\n          botL = rand(id+vec2(-0.5,-0.5)),\n          botR = rand(id+vec2(0.5,-0.5));\n    float top = mix(topL,topR,f.x);\n    float bot = mix(botL,botR,f.x);\n    re += mix(bot,top,f.y);\n    return re;\n    }\n    \nfloat fbm(vec2 p, int oct) {\n    p-=30.0;\n    float val = 0.0;\n    \n    float amp = 0.5;\n    float freq = 0.9;\n    \n    float lacuranity = 1.7;\n    float gain = 0.5;\n    \n    for (int i=0;i<oct;i++) {\n        val += amp*perlin(p*freq+float(i));\n        amp *= gain;\n        freq *= lacuranity;\n        p *= rot(1.0);\n    }\n    \n    return val;\n}\n\nfloat pattern(vec2 p, int oct) {\n    float z = fbm(p,oct);\n    float a = max(0.0,sign(z-0.7))*0.3,\n          b = max(0.0,sign(z-0.60))*0.3,\n          c = max(0.0,sign(z-0.50))*0.3;\n    return a+b+c;\n}\n\n\nfloat moon(vec2 p, vec2 pos, float size) {\n    p*=2.0;\n    float L = 0.0;\n    float n = pattern(p*15.0+2.0, 10);\n\n    n = mix(0.0,0.4,n);\n    float c = Circle(p, size);\n    float s = 0.24/length(p);\n    s = clamp(s,0.0,1.0);\n    float vib = (fbm(vec2(iTime,1.0),3)*0.2+0.9);\n    if (length(p)<size/2.0) {\n        L += s-n*(1.0-length(p*4.0));\n    } else {\n        L+=s*vib;\n        }\n    return L;\n    \n}\n\nfloat sun(vec2 uv) {\n    vec2 av = vec2(atan(uv.x,uv.y),1.0);\n    float sc = 1.0-Circle(uv, 0.1);\n    float s = 0.1/(length(uv)*fbm(av*10.+iTime*0.2,5))*0.1+0.1/length(uv);\n    return s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    //creating celestials\n    float m = moon(uv-vec2(0.6,0.3), vec2(0), 0.5);\n    float s = sun(uv-vec2(-0.6, 0.3));\n    \n    //coloring and smoothing\n    vec3 mm = vec3(m-0.19,m-0.16,m-0.1);\n    vec3 ss = vec3(s,s-0.3,0);\n    ss = smoothstep(0.0,1.0,ss);\n    \n    col+= max(mm,ss);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}