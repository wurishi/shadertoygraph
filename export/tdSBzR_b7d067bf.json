{"ver":"0.1","info":{"id":"tdSBzR","date":"1589344425","viewed":50,"name":"CMPM163 Lab 6 Xuqi","username":"flemington123","description":"Lab6 Assignment of CMPM163","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["assignment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Distline(vec3 camera, vec3 rd, vec3 p){\n\treturn length(cross(p - camera, rd))/length(rd);\n    //get the length from 3D point to 3D line\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    // Normalized pixel coordinates (from 0 to 1)\n    uv -= .5; \n    // put origin in the middle of the screen\n    uv.x *= iResolution.x/iResolution.y; \n    // adjust the resolution to fit the screen\n    vec4 sampledColor = texture(iChannel0, uv);\n    // set up camera away from the canvas\n    vec3 camera = vec3(0., 0., -2.); \n    // set up the distance from the point to this camera\n    vec3 rd = vec3(uv.x, uv.y, 0.) - camera;\n    \n    float t = iTime; \n    // get a change number\n\tvec3 p  = vec3(sin(t), 0., 1.+cos(t));\n    // set the dot and move it by t\n    float d = Distline(camera, rd, p); \n    // get distance from function\n    vec3 c = smoothstep(.1, .09, d) * sampledColor.rgb;\n    // set the texture out of the circle\n    \n\td = smoothstep(.1, .09, d);\n    // set up the circle\n\tfragColor = vec4(c, d);\n    // shows both circle and texture\n\t\n}","name":"Image","description":"","type":"image"}]}