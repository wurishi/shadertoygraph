{"ver":"0.1","info":{"id":"4fscDl","date":"1721813262","viewed":36,"name":"Sketch London","username":"mike2367","description":"image processing using the Sobel edge detector","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","imageprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ref:https://www.shadertoy.com/view/MlSBzc\n// ref:https://www.shadertoy.com/view/Nljfzy\n#define PERIOD 6.0 // in seconds\nconst int mSize = 90;\nvec2 random2(vec2 p)\n{\n    return texture(iChannel1, p / vec2(1024.0)).xy; \n}\nfloat grey(in vec3 col) \n{\n    //return dot(col, vec3(0.3, 0.59, 0.11));\n    return dot(col, vec3(0.2126, 0.7152, 0.07)); //sRGB\n}\nvec3 colorDodge(in vec3 src, in vec3 dst)\n{\n    return step(0.0, dst) * mix(min(vec3(1.0), dst/ (1.0 - src)), vec3(1.0), step(1.0, src)); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 r = random2(uv);\n    r.x *= 6.18;\n    vec2 cr = vec2(sin(r.x),cos(r.x))*sqrt(r.y);\n    \n     vec3 blurred = texture(iChannel0, uv + cr * (vec2(mSize) / iResolution.xy) ).rgb;\n    float wave = 2.75 + 0.75*sin(1.0/PERIOD * iTime * 6.28);\n    vec4 pixel00 = texture(iChannel0, uv.xy + (vec2(0, 0)/ iResolution.xy)) ;\n    vec4 pixeln1n1 = texture(iChannel0, uv.xy + (vec2(-1, -1)/ iResolution.xy))* -wave;\n    vec4 pixeln10 = texture(iChannel0, uv.xy + (vec2(-1, 0)/ iResolution.xy));\n    vec4 pixeln11 = texture(iChannel0, uv.xy + (vec2(-1, 1)/ iResolution.xy));\n    vec4 pixel0n1 = texture(iChannel0, uv.xy + (vec2(0, -1)/ iResolution.xy));\n    vec4 pixel01 = texture(iChannel0, uv.xy + (vec2(0, 1)/ iResolution.xy));\n    vec4 pixel1n1 = texture(iChannel0, uv.xy + (vec2(1, -1)/ iResolution.xy));\n    vec4 pixel10 = texture(iChannel0, uv.xy + (vec2(1, 0)/ iResolution.xy));\n    vec4 pixel11 = texture(iChannel0, uv.xy + (vec2(1, 1)/ iResolution.xy))* -wave;\n\n    // (-1,-1)  (-1,0)  (-1,1)\n    // (0, -1)  (0, 0)  (0, 1)\n    // (1, -1)  (1, 0)  (1, 1)\n    vec3 Gx =  (((pixel00.xyz * vec3(0)) + \n    (pixel01.xyz * vec3(-3)) + \n    (pixel0n1.xyz * vec3(3)) + \n    (pixel11.xyz * vec3(-1.5)) + \n    (pixel10.xyz * vec3(0))  + \n    (pixel1n1.xyz * vec3(1.5)) + \n    (pixeln10.xyz * vec3(0)) + \n    (pixeln11.xyz * vec3(-1.5)) + \n    (pixeln1n1.xyz * vec3(1.5))));\n    vec3 Gy =  (((pixel00.xyz * vec3(0)) + \n    (pixel01.xyz * vec3(0)) + \n    (pixel0n1.xyz * vec3(0)) + \n    (pixel11.xyz * vec3(-1.5)) + \n    (pixel10.xyz * vec3(-3)) + \n    (pixel1n1.xyz * vec3(-1.5)) + \n    (pixeln10.xyz * vec3(3)) + \n    (pixeln11.xyz * vec3(1.5)) + \n    (pixeln1n1.xyz * vec3(1.5))));\n    \n    vec3 Gx2 = vec3(pow(Gx.x, 2.0), pow(Gx.y, 2.0),pow(Gx.z, 2.0));\n    vec3 Gy2 = vec3(pow(Gy.x, 2.0), pow(Gy.y, 2.0),pow(Gy.z, 2.0));\n    vec3 tot = Gx2 + Gy2;\n    vec3 G = vec3(sqrt(tot.x), sqrt(tot.y), sqrt(tot.z));\n    vec3 inv = vec3(1.0) - blurred; \n    vec3 lighten = colorDodge((1.2-G), inv);\n    vec3 res = vec3(grey(lighten));\n    // more contrast\n    res = vec3(pow(res.x, 5.0)); \n    vec3 col = mix(res, pixel00.xyz, sin(iTime * 6.28 / PERIOD));\n    \n    fragColor = vec4(col, 1);\n    //fragColor = pixel00;\n}","name":"Image","description":"","type":"image"}]}