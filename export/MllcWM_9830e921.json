{"ver":"0.1","info":{"id":"MllcWM","date":"1505126253","viewed":176,"name":"Thin Line","username":"isak","description":"Rotating thin line","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["distancefunction","line","aa","thine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define d_pix (1.0/iResolution.y)\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define pi 3.1415926535897932384626433832795\n\n\nfloat thin_line(vec2 uv, float a, float w){\n\n    vec2 direction = rot(a)*uv;\n    float d = abs(direction.x);\n    return smoothstep(1.0 + w, w - 1.0, d/d_pix);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 uv = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n     \n    vec4 red = vec4(1, 0, 0, 1);\n    vec4 bg_color = 0.0*vec4(1, 1, 1, 1);\n\t\n    fragColor = bg_color;\n    \n    for (float i = -5.0; i < 6.0; i++)\n    \tfragColor += (red - bg_color)*thin_line(uv, (pi/4.)*sin(0.03*i*iTime), 1.0);\n}\n\n\n\n\n","name":"Image","description":"","type":"image"}]}