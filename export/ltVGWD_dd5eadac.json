{"ver":"0.1","info":{"id":"ltVGWD","date":"1474849942","viewed":186,"name":"Primal Sludge","username":"public_int_i","description":"2d effect, best in fullscreen","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["2d","effect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Ethan Alexander Shulman 2016\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = vec4(pow(texture(iChannel0, uv).xyz,vec3(1./1.5))*0.8, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Ethan Alexander Shulman 2016\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 p = vec3(uv,.3945);\n    \n    for (int i = 0; i < 6; i++) {\n        float e = pow(float(i+1),2.);\n    \tfloat a = iDate.w*0.1/e+cos(e)*0.5+0.5;\n        vec3 sp = p*e;\n        p = abs(p-0.5)+vec3(p.x*sin(a-sp.y)+p.y*cos(sp.y-a),\n                 p.y*sin(a-sp.z)+p.z*cos(sp.z-a),\n                 p.z*sin(a-sp.x)+p.x*cos(sp.x-a))*(0.3+cos(iTime*0.04)*0.25);\n    }\n                  \n    uv = abs(p.xy+p.z)*5.0;\n    \n\tfragColor = vec4(pow(vec3(sin(uv.y)*0.5+0.5,cos(uv.x+0.2948)*0.5+0.5,-cos(uv.x+1.893)*0.5+0.5), vec3(2.2)), 1.);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//Ethan Alexander Shulman 2016\n\n\nfloat rand(float s) {\n    \n    //Thanks to Shane for the improved random function\n    return fract(fract(abs(s)*157.)*43758.5453);\n}\nfloat rand(vec3 s) {\n    \n    //Thanks to Shane for the improved random function\n    return fract(abs(cos(dot(s, vec3(7, 157, 113)))*43758.5453));\n\n    /* old\n    return fract( (fract(s.x*32.924)*8. + fract(s.x*296.234) +\n                 fract(s.y*32.924)*8. + fract(s.y*296.234) +\n                 fract(s.z*32.924)*8. + fract(s.z*296.234))*98.397 );*/\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 uv = fragCoord/iResolution.xy;\n    \n    int frame = int(mod(float(iFrame),300.));\n    float fframe = iTime;\n    \n    //random shifting/scaling\n    vec2 rshift = vec2(rand(fframe-3.8234),rand(fframe+9.2348)),\n         rscale = vec2(0.25+rand(fframe)*1.75,0.25+rand(fframe+1.2348)*1.75);\n\n        //shift towards target texture depending on difference & mask\n        vec4 orig = texture(iChannel3, uv)*0.95+texture(iChannel0,uv)*0.05,\n            \ttarg;\n        float rtex = rand(fframe+12.9923)*2.;\n        if (rtex < 1.) {\n            targ = texture(iChannel1, uv*rscale+rshift);\n        } else {\n            targ = texture(iChannel2, uv*rscale+rshift);\n        }\n        fragColor = vec4(orig.xyz*mix(vec3(1.),targ.xyz,clamp(pow(clamp(1.0-length(orig.xyz-targ.xyz),0.,1.),3.4)*0.25,0.0,1.0)),1.);\n}","name":"Buf B","description":"","type":"buffer"}]}