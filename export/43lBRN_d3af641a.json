{"ver":"0.1","info":{"id":"43lBRN","date":"1728232161","viewed":39,"name":"Nebula tube, don't use lube.","username":"DerShade","description":"Discrete tube nebula blocks. Minecraftizer can be removed from code, to get the continuum tube.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","noise","tube","flight","minecraftized"],"hasliked":0,"parentid":"43sfz4","parentname":"the Aerogel Explorer"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// super cheap volumetric display based on density continuum.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{    \n    float att,a,r,e,p,g,b,z,x,mx,mz,my,yy,xx,zz,y,rr,sy,tr,cl,l=342.; // l >= 2 quality iter.\n    e  = 80.;                                                         // visibility depth\n    a  = iTime/5.;                                                    // y rot\n    mz = cos(a+3.14)*15.+(sin(iTime/4.)*12.);                         // z movement\n    mx = sin(a+3.14)*15.+iTime*20.;                                   // x movement\n    my = (sin(iTime/3.)*12.);                                         // y movement\n    \n    for(float f=0.;f<l;f+=1.){                                        // iterations loop     \n    zz = (1.+sin(xx*917.))+(sin(yy*516.))*e+e;                        // akward noise of z         \n                    \n    xx = (fragCoord.x/iResolution.x-0.5)*                             // coords -0.5 to 0.5\n         (iResolution.x/iResolution.y)*zz;                            // aspect r.   \n    yy = (fragCoord.y/iResolution.y-0.5)*zz;\n      \n    // y rot\n    z =  cos(a)*(zz)-sin(a)*(xx);\n    x =  sin(a)*(zz)+cos(a)*(xx); \n    y =  yy;\n        \n    x+=mx;y+=my;z+=mz;                                                // add movements\n    \n    // world minecraftizer WM #32768 v.12.9 beta. (c)1973\n    x=floor(x);\n    y=floor(y);\n    z=floor(z);\n    \n    // (tube gen. by x) * (thickness fluctuations)\n    sy = (y*y+z*z)*(0.05+(sin(z/5.+x/15.+(sin(z/1120.*x/815.))))*0.03);  \n    \n    // color distrib.\n    g += float(sy>1.&&sy<3.&&f>0.);  \n    r += float(sy>2.&&sy<4.&&f>0.);\n    b += float(sy>3.&&sy<5.&&f>0.);\n    }\n    \n    // Out\n    fragColor = vec4(r/l,g/l,b/l,1.0);   \n}","name":"Image","description":"","type":"image"}]}