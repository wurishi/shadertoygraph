{"ver":"0.1","info":{"id":"ltcfR7","date":"1539029460","viewed":97,"name":"krlozadan_animating_circles","username":"krlozadan","description":"Created a circle grid and animated it","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Defines the grid and circle size\n    float gridGranularity = 12.0;    \n    float radius = 6.0;\n    \n    // Defines how many \"Big Pixels\" are on the screen\n    vec2 gridRes = iResolution.xy / gridGranularity;\n    \n    // We calculate the big pixel coord and the circle center for that coord\n    vec2 gridCoord = floor(fragCoord / gridGranularity);\n    vec2 circleCenter = gridCoord * gridGranularity + radius;\n\t\n\t// This will create a cool effect of animating a circle\n    vec2 bigCircleCoord = vec2((iResolution.x * 0.5) + sin(iTime) * iResolution.x * 0.5, 0.0);\n    float diameter_scale = sin( distance( circleCenter, bigCircleCoord) * 0.03) * (sin(iTime) + 3.5) + 2.5; \n    \n    // Add color of we're inside the circle\n    if (distance(fragCoord, circleCenter) < diameter_scale)\n        fragColor = vec4(0.0, 0.0, 1.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}