{"ver":"0.1","info":{"id":"4sBcRK","date":"1492701643","viewed":584,"name":"dual coloring of 2-adic number","username":"phi16","description":"[url]https://commons.wikimedia.org/wiki/File:2-adic_integers_with_dual_colorings.svg[/url]\nTODO : vizualize connection to [url]https://www.shadertoy.com/view/XdBcRK[/url] (and make an animation!)","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["2adic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float shape(vec2 p, float r){\n    p *= mat2(cos(r),sin(r),-sin(r),cos(r));\n    if(p.x < 0. || p.x > 1.)return 1.;\n    float f = p.y / pow(abs(p.x),0.5);\n    float d = abs(f)*1.7+p.x-1.;\n    return d/(1.-p.x);\n}\n\nint imod(int x,int y){\n    return int(mod(float(x),float(y)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy, \n\tuv = (2.*fragCoord.xy - R)/R.y;\n    \n    int nume = 1;\n    int deno = 7;\n    \n    if(imod(deno,2)==0)nume = 0; // NOT a 2-adic integer : cannot visualize\n    vec2 pos = uv;\n    float rot = 0.;\n    float dif = 3.1415926535;\n    float dep = 1.;\n    vec3 color = vec3(1);\n    float alpha = 1.;\n    float orig = 0.;\n    float pp = 1.;\n    for(int i=0;i<10;i++){\n        float d = shape(pos,rot);\n        if(d < 0.03){\n            \n            float rotVal = rot;\n            rotVal /= 3.1415926535*2.;\n            rotVal = fract(rotVal*orig);\n            rotVal *= 3.1415926535*2.;\n                \n            dep = max(smoothstep(-0.14,-0.11,d),1.-alpha);\n    \t\tvec3 cc = mix(cos(vec3(0,1,-1)*3.141592*2./3.-rotVal)*0.5+0.5,vec3(1),dep);\n            if(d < 0.){\n                color = cc;\n\t            break;\n            }else{\n                alpha = smoothstep(0.,0.03,d);\n            }\n        }\n        if(dot(vec2(sin(rot),-cos(rot)),pos) < 0.){\n            rot += dif;\n        }else{\n        \trot -= dif;\n        }\n        dif /= 2.;\n        bool oneBit = false;\n        if(imod(nume,2)==0){\n            nume /= 2;\n        }else{\n            nume -= deno;\n            nume /= 2;\n            oneBit = true;\n        }\n        if(oneBit)orig += pp;\n        pp *= 2.;\n    }\n\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}