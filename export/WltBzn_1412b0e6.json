{"ver":"0.1","info":{"id":"WltBzn","date":"1612107997","viewed":254,"name":"milky way","username":"YitingLiu","description":"Composed a galaxy milky way. ","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["time","blur","sin","rotate","cos","mask","rect","twist","band","tan","range","remap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Band (float t, float start, float end, float blur){\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n\n    return step1*step2;\n}\n\n// rectangle based on center, width, and height \nfloat Rect(vec2 uv, float center, float width, float height, float blur){\n    \n    float left = center-width/2.;\n    float right = center+ width/2.;\n    float top = center + height/2.;\n    float bottom = center - height/2.;\n    \n    float band1 = Band(uv.x,left, right, blur);\n    float band2 = Band(uv.y,bottom, top, blur);\n    return band1*band2;\n}\n\nfloat remap01(float a, float b, float t){\n    return (t-a)/(b-a);\n}\nfloat remap(float a, float b, float c, float d, float t){\n    return remap01(a,b,t)*(d-c)+c;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=0.5;// -0.5 <> 0.5\n    uv.x*=iResolution.x/iResolution.y;\n    uv*=1.5;\n    // center\n    uv*=rotate2d(3.1415*iTime*0.22);\n\n    float mask = 0.;\n    float m = sin(iTime+uv.x*10.)*0.8;\n    float blur = remap(-0.5,0.5,0.01,0.25,uv.x);\n    \n    //uv.x/=m;\n    uv.y-=m;\n    \n    mask = Rect(uv,0.,0.9,0.8,blur/2.);\n    \n    uv*=rotate2d(100.+iTime/3.14);\n    mask += Rect(uv/2.,0.,0.6,0.2,blur/5.);\n    \n    uv*=rotate2d(100.+iTime/200.);\n    mask -= Rect(uv,0.,0.5,0.8,blur/5.);\n    \n    uv*=rotate2d(iTime/100.);\n    mask *= Rect(uv,0.,0.2,0.4,blur/5.);\n    \n    uv*=rotate2d(3.14*iTime);\n    mask -= Rect(uv,0.,0.2,0.8,blur/2.);\n\n    vec3 col = vec3(blur-abs(tan(iTime*0.8)),abs(iTime),cos(iTime))*mask;\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}