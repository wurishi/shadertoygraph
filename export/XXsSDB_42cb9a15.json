{"ver":"0.1","info":{"id":"XXsSDB","date":"1709923984","viewed":69,"name":"fbm domain warping testing","username":"int_45h","description":"playing around with fbm domain warping ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define UIF (1./float(0xFFFFFFFFU))\nfloat hash12(vec2 p)\n{\n\tuvec2 q = uvec2(ivec2(p)) * uvec2(1597334673U, 3812015801U);\n\tuint n = (q.x ^ q.y) * 1597334673U;\n\treturn float(n) * UIF;\n}\n\nfloat value2d(vec2 p)\n{\n    vec2 p_grid = floor(p);\n    vec2 p_cell = fract(p);\n\n    p_cell *= p_cell*(3.-2.*p_cell);\n\n    return mix(\n        mix(hash12(p_grid+vec2(0,0)),hash12(p_grid+vec2(1,0)),p_cell.x),\n        mix(hash12(p_grid+vec2(0,1)),hash12(p_grid+vec2(1,1)),p_cell.x),\n        p_cell.y\n    );\n}\n\n#define OCTAVES 5\nfloat fbm(vec2 p)\n{\n    float a = 1.;\n    float s = 1.;\n    mat2 r = mat2(cos(.5), -sin(.5), sin(.5), cos(.5));\n    float n = 0.;\n    int i = OCTAVES;\n    \n    for (;i>=0;i--)\n    {\n        n += value2d(p*s)*a;\n        a *= .5;\n        s *= 2.;\n        p *= r;\n    }\n    \n    return n*.6;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.x*.5)/iResolution.y;\n    uv *= 8.;\n    vec2 q = vec2(\n        fbm(uv+iTime*.12)\n    );\n    vec2 r = vec2(\n        fbm(uv+q+iTime*.26)\n    );\n    \n    float f = fbm(uv+r);\n    \n    vec4 bg = vec4(.1, .1, .26, 1.);\n    vec4 fg1 = vec4(116, 171, 155, 255)/255.99;\n    vec4 fg2 = vec4(9, 26, 20, 255)/255.99;\n    vec4 fg3 = vec4(163, 208, 247, 255)/255.99;\n    vec4 col = mix(bg,fg1,clamp(f,0.,1.));\n    col = mix(col,fg2,clamp(length(q),0.,1.));\n    col = mix(col,fg3,clamp(r.x,0.,1.));\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}