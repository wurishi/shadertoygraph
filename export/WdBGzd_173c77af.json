{"ver":"0.1","info":{"id":"WdBGzd","date":"1549651042","viewed":461,"name":"CheckerBoard Smooth","username":"RV","description":"Compute a checkerboard, with 2 colors smoothly mixing","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["blur","checkerboard","checker","smooth","soften"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// By Herv√© Bonafos\n// v1.0 - 2019 02 08\n// v1.1 - 2019 02 08 - horizontal scan\n// v1.2 - 2019 02 11 - FabriceNeyret2 recommandations\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 UV = 3.0 * fragCoord/iResolution.y;\n        \n    // Time varying Soften :\n    float Soften = fract(iTime/2.0 + UV.x*0.01); // <- For demo\n\t//float Soften = 0.1; // <- Real case use\n    \n    vec2 PartieNegative = abs(fract((2.0*UV-Soften)/2.0)-0.5);\n    vec2 PartiePositive = abs(fract((2.0*UV+Soften)/2.0)-0.5);\n    vec2 Pente = (PartieNegative-PartiePositive) / Soften;\n    \n    // Output to screen\n    vec4 Color1 = vec4(1,1,0,1);\n    vec4 Color2 = vec4(0,0.5,1,1);\n    fragColor = mix(Color1, Color2, 0.5 - 0.5*Pente.x*Pente.y);\n}","name":"Image","description":"","type":"image"}]}