{"ver":"0.1","info":{"id":"lflXWM","date":"1705350442","viewed":79,"name":"Interesting Noise Wave","username":"sampajama","description":"the wave moves up","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["noise","math","random","hash","whitenoise","rng","chacha"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"ChaCha20 High Quality Noise\" by sampajama. https://shadertoy.com/view/lfS3zd\n// 2024-01-15 20:25:14\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float m = 1.0 / 16.0;\n    vec4 c2 = m*vec4(texelFetch(iChannel0, ivec2(fragCoord), 0).rgb, 1.0);\n    \n    fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0) - c2;\n    fragColor /= fragColor.a;\n    fragColor *= 64.0;\n    fragColor += 0.5;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define ROUNDS 20\n#define ROTL(a,b) (((a) << (b)) | ((a) >> (32 - (b))))\n#define QUARTER_ROUND(a, b, c, d) \\\n    a += b; d ^= a; d = ROTL(d,16); \\\n    c += d; b ^= c; b = ROTL(b,12); \\\n    a += b; d ^= a; d = ROTL(d, 8); \\\n    c += d; b ^= c; b = ROTL(b, 7);\n\n#define uintBitsToUnorm(b) (float(int(b)) / 2147483648.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uint m11 = 0x65787061u; // \"expa\"\n    uint m12 = 0x6E642033u; // \"nd 3\"\n    uint m13 = 0x322D6279u; // \"2-by\"\n    uint m14 = 0x7465206Bu; // \"te k\n\n    uint m21 = floatBitsToUint(iResolution.x);\n    uint m22 = floatBitsToUint(iResolution.y);\n    uint m23 = floatBitsToUint(iMouse.x);\n    uint m24 = floatBitsToUint(iMouse.y);\n    \n    vec4 pre = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    uint m31 = floatBitsToUint(pre.x);\n    uint m32 = floatBitsToUint(pre.y);\n    uint m33 = floatBitsToUint(pre.z);\n    uint m34 = floatBitsToUint(pre.w);\n    \n    uint m41 = floatBitsToUint(fragCoord.x);\n    uint m42 = floatBitsToUint(iTime);\n    uint m43 = floatBitsToUint(fragCoord.y);\n    uint m44 = uint(iFrame);\n\n    for (int r = 0; r < ROUNDS; r += 2) \n    {\n        // EVEN ROUND\n        QUARTER_ROUND(m11, m12, m13, m14);\n        QUARTER_ROUND(m21, m22, m23, m24);\n        QUARTER_ROUND(m31, m32, m33, m34);\n        QUARTER_ROUND(m41, m42, m43, m44);\n        \n        // ODD ROUND\n        QUARTER_ROUND(m11, m22, m33, m44);\n        QUARTER_ROUND(m21, m32, m43, m14);\n        QUARTER_ROUND(m31, m42, m13, m24);\n        QUARTER_ROUND(m41, m12, m23, m34);\n    }\n\n    fragColor = vec4(\n        uintBitsToUnorm(m11 ^ m21 ^ m31 ^ m41),\n        uintBitsToUnorm(m12 ^ m22 ^ m32 ^ m42),\n        uintBitsToUnorm(m13 ^ m23 ^ m33 ^ m43),\n        uintBitsToUnorm(m14 ^ m24 ^ m34 ^ m44)\n    );\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"ivec2 loopi(ivec2 i) {\n    i += 2 * ivec2(iResolution.xy);\n    i %= ivec2(iResolution.xy);\n    return i;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float m = 1.0 / 16.0;\n    vec4 c2 = m * vec4(texelFetch(iChannel0, ivec2(fragCoord), 0).rgb, 1.0);\n    \n    for(int x = -4; x <= -1; ++x) {\n    for(int y = -2; y <= +1; ++y) {\n        vec4 c4 = texelFetch(iChannel1, loopi(ivec2(fragCoord) + ivec2(x,y)), 0);\n        c4 /= max(1.0, c4.a);\n        c2 += vec4(c4.rgb, 1.0);\n    }\n    }\n    \n    fragColor = c2;\n}","name":"Buffer B","description":"","type":"buffer"}]}