{"ver":"0.1","info":{"id":"tdtyRl","date":"1601562039","viewed":192,"name":"Kaleido KIFS","username":"liamail","description":"KIFS and kaleidoscope","likes":12,"published":1,"flags":0,"usePreview":1,"tags":["kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// credit:\n//The_ArtOfCode\n//https://www.youtube.com/watch?v=il_Qg9AqQkE&t=1778s&ab_channel=TheArtofCode\n\n\nvec2 N(float angle) {\n \t\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    uv *= 1.25;\n\n\tvec3 col = vec3(0);\n    \n    uv.x = abs(uv.x);\n    uv.y += tan((5./6.)*3.1415)*.5;\n    vec2 n = N((5./6.)*3.1415);\n    float d = dot(uv - vec2(.5, 0), n);\n    uv -= n*max(0., d)*2.;\n    \n    \n    //col+= smoothstep(.01, .0, abs(d));\n    n = N((2./3.)*3.1415);\n    float scale = 1.;\n    uv.x += .5;\n    for(int i=0; i<4; i++) {\n        \n        uv *= 3.;\n        scale *=3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n*min(0., dot(uv, n))*2.;\n\n\n        \n    }\n\n       \n\td = length(uv - vec2(clamp(uv.x,-1.,1.),0));\n    //col+= smoothstep(1./iResolution.y, .0, d/scale);\n\tuv /= scale;    \n    col += texture(iChannel0, vec2(uv.x *2. + iTime*0.03, uv.y *2. + iTime*0.0023)).rgb;\n\t\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}