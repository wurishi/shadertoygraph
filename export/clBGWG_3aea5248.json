{"ver":"0.1","info":{"id":"clBGWG","date":"1673807413","viewed":96,"name":"Collatz+cantor ripples","username":"ianertson","description":"Using collatz and cantor to produce some kind of ripple effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ripples","water","collatz","cantor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED 0.3\n#define SCALAR 1.0\n#define FREQ 1.2\n#define SEED 3.398218\n\n// https://en.wikipedia.org/wiki/Collatz_conjecture\nfloat collatz(float v) { return int(v) % 2 != 0 ? ((3. * v) + 1.) : (v / 2.); }\n\n//https://en.wikipedia.org/wiki/Pairing_function\nfloat cantor(float k1, float k2) { return ((k1 + k2) * (k1 + k2 + 1.0)) / 2.0 + k2; }\nvec2 decant(float c) {\n  float w = floor((sqrt(c * 8. + 1.) - 1.) / 2.);\n  float y = float(c - (w * (w + 1.)) / 2.);\n  return vec2(float(w - y), y);\n}\nfloat idx(vec2 v, float r) { return v.x * r + v.y; }\nfloat idxcant(vec2 v, float r) { return fract(collatz(idx(decant(idx(v, r)), r))); }\nfloat rand0(vec2 uv, float r, float seed) {\n    vec2 cant = decant(sin(seed*3.14*2.0)*(1.0+idxcant(uv, r)));\n    return fract(dot(uv, vec2(cos(cant.x), sin(cant.y))));\n}\nvec3 shade(in vec2 fc) {\n   float ripple = rand0(fc, SCALAR, SEED);\n   float ripple0 = rand0((fc*ripple)+(vec2(0.0, 1.0)*SCALAR*1.01*ripple), SCALAR, SEED*ripple);\n   float ripple1 = rand0((fc*ripple0)+(vec2(1.0, 0.0)*SCALAR*1.001*ripple), SCALAR, SEED*ripple);\n   float ripple2 = rand0((vec2(ripple0, ripple1)*fc)*0.5, SCALAR*0.5, ripple*ripple0*ripple1);\n   vec3 blue = mix(vec3(0.0, 0.4, 1.0), vec3(0.0, 0.5, 1.0), smoothstep(0.0, 1.0, pow(ripple0, 2.6)));\n   blue = mix(blue, vec3(0.0, 0.6, 0.9), smoothstep(0.0, 1.0, pow(ripple1, 2.6)));\n   blue = mix(blue, vec3(0.8, 0.8, 0.9), 0.8*smoothstep(0.0, 1.0, ripple2*1.6));   \n   return max(ripple, max(ripple0, ripple1))*blue;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fc )\n{\n    float T = iTime*SPEED;\n    vec2 move = iMouse.z > 0.001 ? iMouse.xy : vec2(cos(T), sin(T))*3.14;\n    fragColor = vec4(shade((fc+move)*((fc/iResolution.xy) + 0.5)*FREQ),1.0);\n}","name":"Image","description":"","type":"image"}]}