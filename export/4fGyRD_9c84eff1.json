{"ver":"0.1","info":{"id":"4fGyRD","date":"1731528166","viewed":66,"name":"Chunky Video","username":"1nsignia","description":"updates only a rectangular portion of the video that is randomized at 30fps","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// https://thebookofshaders.com/10/\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float speed = 30.0;\n    // speed = 2.0;\n    float t = floor(iTime * speed);\n    \n    vec2 a = vec2(random(vec2(t, 0.12)), random(vec2(t, 3.54)));\n    vec2 b = vec2(random(vec2(t, 1.76)), random(vec2(t, 2.99)));\n    b = fract(a + 0.2 + b * 0.8);\n    \n    vec2 minbox = min(a, b);\n    vec2 maxbox = max(a, b);\n    \n    vec2 x = step(minbox, uv) * step(uv, maxbox);\n    \n    if (abs(minbox.x - maxbox.x) > 0.5) x.x = 1.0 - x.x;\n    if (abs(minbox.y - maxbox.y) > 0.5) x.y = 1.0 - x.y;\n    \n    float blend = x.x * x.y;\n    \n    vec4 old = texture(iChannel0, fragCoord/iResolution.xy);\n    vec4 new = texture(iChannel1, fragCoord/iResolution.xy);\n    \n    fragColor = mix(old, new, blend);\n    \n    // fragColor.r += step(distance(a, uv), 0.01);\n    // fragColor.r += step(distance(b, uv), 0.01);\n}","name":"Buffer A","description":"","type":"buffer"}]}