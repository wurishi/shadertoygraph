{"ver":"0.1","info":{"id":"DlGBDm","date":"1702127558","viewed":50,"name":"rotating_squares","username":"anmol","description":"rotating squares","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["sdboxrotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Ref - https://www.shadertoy.com/view/3lVGWt\nconst float PI = 3.14;\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, \n                 s,  c );\n}\n\n// Red - https://www.shadertoy.com/view/4llXD7\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Using improvements suggested by - https://www.shadertoy.com/user/FabriceNeyret2\n    \n    vec2 uv = ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n    uv *= rotationMatrix(iTime*20.0);\n    uv = fract(uv*3.0) - 0.5;\n    float d =  smoothstep(9./iResolution.y,0.0,sdBox(uv, vec2(abs(sin(iTime))* 0.4)));\n    fragColor = vec4(d);\n    \n\n    /*\n    vec2 uv = (fragCoord/iResolution.xy * 2.0) - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n     \n    uv *= rotationMatrix(iTime*20.0);\n    uv = fract(uv*3.0) - 0.5;\n\n    //float d = smoothstep(0.0,0.01,sdBox(uv, vec2(0.5,0.5)));\n    float d =  smoothstep(-0.1,0.0,sdBox(uv, vec2(abs(sin(iTime))* 0.4, abs(sin(iTime)) * 0.4)));\n    vec3 col = (d <= 0.5 ? vec3(1.0,1.0,1.0) :vec3(0.0,0.0,0.0)) ;\n\n    fragColor = vec4(col,1.0);\n   \n    */\n    \n}","name":"Image","description":"","type":"image"}]}