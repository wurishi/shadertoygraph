{"ver":"0.1","info":{"id":"NdjfWm","date":"1681866164","viewed":75,"name":"currents ","username":"Angramme","description":"based on: https://www.robertbeattyart.com/Tame-Impala-Currents","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["albumcover"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BALL_R .3\n#define BALL_X .2\n#define BALL_Y -.3\n#define BALL_P vec2(BALL_X,BALL_Y)\n\n#define STRIPE_P .038\n\nvec3 ball(vec2 uv){\n    float height = BALL_R*cos(distance(uv, BALL_P)/BALL_R*3.1415*.5);\n    vec3 N = normalize(vec3(uv, height) - vec3(BALL_P, 0));\n    \n    const vec3 C = vec3(0, 0, 1.);\n    const vec3 L = normalize(vec3(-1., 1, 0.5));\n    \n    float diffuse = .6*max(0., dot(N, L));\n    float specular = 1.5*pow(max(0., dot(C, reflect(-L, N))), 8.5);\n    \n    vec3 col = vec3(0);\n    col += diffuse;\n    col += specular;\n    \n    col += .25*pow(max(0., dot(N, normalize(vec3(1, -1, -.5)))), .7);\n    \n    return col;\n}\n\nvec3 lava(vec2 uv){\n    float npink = clamp(abs(uv.y+.22)*1., 0., 1.);\n    return \n        npink*mix(vec3(1, .15, .08), vec3(.95, 0, 0), uv.y)\n        + (1.-npink) * vec3(255./255., 99./255., 169./255.);\n}\n\nvec3 stripes(vec2 uv){\n    vec3 col = vec3(0);\n    uv.x = mod(uv.x, STRIPE_P);\n    uv.x -= STRIPE_P*.5;\n    uv.x *= 2.;\n    uv.x = abs(uv.x);\n    float m = smoothstep(STRIPE_P*.4, STRIPE_P*.6, uv.x);\n    \n    col += m*.8*vec3(47./255., 8./255., 120./255.);\n    col += (1.-m)*mix(\n        .8*vec3(119./255., 90./255., 191./255.), \n        vec3(180./255., 121./255., 252./255.), \n        cos(uv.x/STRIPE_P*4.));\n    \n    return col;\n}\n\nvec3 currents(vec2 UV){\n    vec2 uv = UV;\n    float Y = uv.y;\n    const float ang = -.75;\n    uv *= mat2(cos(ang), -sin(ang), sin(ang), cos(ang));\n    uv.x *= mix(.6, 1., Y*.5+.5);\n    \n    float distort = clamp(.3-5.*(exp(abs(uv.x+.05))-1.)-1.3*uv.y, 0., 1.);\n    uv.x *= .6;\n    uv.x *= log(exp(1.)+clamp(uv.y, 0., 1.));\n    //return vec3(abs(uv.x));\n    //return vec3(.5*log(exp(1.)+clamp(uv.y-abs(uv.x), 0., 1.)));\n    uv.x += distort*.1*(cos(10.*uv.x + 8.*uv.y+iTime) + sin(3.93*cos(7.13*uv.y+iTime*2.)+7.*uv.y));\n    \n    vec3 col = vec3(0.);\n    if(abs(uv.x) < .02)\n        col = lava(uv);\n    else{\n        col = mix(\n            stripes(uv), \n            .6*vec3(vec3(47./255., 8./255., 120./255.)), \n            clamp(Y*.65, 0., 1.));\n            \n        col *= clamp(-Y+1.3+.3*(.5+.5*sin(uv.x*5.-7.)), 0., 1.);\n    }\n    if(uv.x > -.02 && dot(BALL_P-UV, BALL_P-UV) < BALL_R*BALL_R) col = ball(UV);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y*2.;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    \n    if(abs(uv.x) > 1. || abs(uv.y) > 1.) col = vec3(0.); \n    else col = currents(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}