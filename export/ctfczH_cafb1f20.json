{"ver":"0.1","info":{"id":"ctfczH","date":"1715831731","viewed":40,"name":"Smooth shadow raymarching","username":"Assossa","description":"Simple raymarcher with smooth shadows","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPSILON 0.01\n\n// https://www.shadertoy.com/view/Ms2SD1\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.);\n    return vec3(pow(.9-e.y,4.), .9-e.y, .6+(.9-e.y)*.4);\n}\n\nfloat sdSphere(vec3 p, vec3 c, float r) {\n    return length(p - c) - r;\n}\n\nfloat sdPlane(vec3 p, float h) {\n    return p.y - h;\n}\n\nfloat sdScene(vec3 p) {\n    return min(\n        sdPlane(p, -1.0),\n        sdSphere(p, vec3(0.0, sin(iTime * 2.0) * 0.5 + 0.5, 0.0), 1.0)\n    );\n}\n\nvec3 sceneNormal(vec3 p) {\n    return clamp(normalize(vec3(\n        sdScene(vec3(p.x + EPSILON, p.y, p.z)) - sdScene(vec3(p.x - EPSILON, p.y, p.z)),\n        sdScene(vec3(p.x, p.y + EPSILON, p.z)) - sdScene(vec3(p.x, p.y - EPSILON, p.z)),\n        sdScene(vec3(p.x, p.y, p.z  + EPSILON)) - sdScene(vec3(p.x, p.y, p.z - EPSILON))\n    )), vec3(-1), vec3(1));\n}\n\nvec3 sceneColor(vec3 p) {\n    return mix(\n        vec3(0.3, 0.8, 0.3),\n        vec3(0.9, 0.2, 0.2),\n        step(-0.95, p.y)\n    );\n}\n\nvec2 raymarch(vec3 p, vec3 d) {\n    float dist = 0.0;\n    float minDist = 1000.0;\n    \n    for(int i = 0; i < 64; i++) {\n        float tempDist = sdScene(p + d * dist);\n        \n        minDist = min(minDist, tempDist / dist);\n        dist += tempDist;\n    }\n    \n    return vec2(dist, minDist);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    vec3 camPos = vec3(0, 0, -3);\n    vec3 camDir = normalize(vec3(uv, 1));\n    \n    vec3 sunDir = normalize(vec3(1, 1, -0.5));\n\n    vec2 result = raymarch(camPos, camDir);\n    float dist = result.x;\n    \n    vec3 hitPos = camPos + camDir * dist;\n    vec3 nml = sceneNormal(hitPos);\n    \n    vec2 shadowResult = raymarch(hitPos + nml * 0.02, sunDir);\n    float shadowMinDist = shadowResult.y;\n    \n    float shadowFactor = clamp(shadowMinDist * 4.0, 0.0, 1.0);\n    float diffuseFactor = clamp(dot(nml, sunDir), 0.0, 1.0) * shadowFactor;\n    \n    vec3 ambientColor = getSkyColor(vec3(0, -1, 0)) * 0.05;\n    vec3 surfaceColor = sceneColor(hitPos) * diffuseFactor + ambientColor;\n    vec3 skyColor = getSkyColor(camDir);\n    \n    vec3 color = mix(surfaceColor, skyColor, smoothstep(10.0, 20.0, dist));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}