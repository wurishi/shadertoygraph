{"ver":"0.1","info":{"id":"Ds3GWs","date":"1732053770","viewed":17,"name":"radar_zzz","username":"fishbrains","description":"trying to combine all my power from the book of shaders so far zzzz","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["zz"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RADAR(pct) (circle(pct, .5)) + vec3(circle(pct, .4)) + vec3(circle(pct, .3)) + vec3(circle(pct, .2));\n#define ROTATE(_angle) (mat2(cos(_angle),-sin(_angle), sin(_angle),cos(_angle)));\n#define SCALE(_scale) (mat2(_scale.x,0.0, 0.0,_scale.y));\n#define GRID() (1.-drawLine(.5, st.x, .002) * drawLine(.5, st.y, .002));\n#define OBJECT(pos, r) (1.-vec3(step(distance(pos,vec2(0.5)), r)));\n\nfloat circle( float pos, float radius )\n{\n    return step(pos, radius) - step(pos, radius-.003);\n}\n\nfloat drawLine( float a, float b, float w ) {\n    return step(a, b) + step(b, a-w);\n}\n\nfloat sweeperLine(vec2 st) {\n    vec2 pos = vec2(0.5)-st;\n    float r = length(pos)*2.0;\n    float a = atan(pos.y,pos.x);\n    return step(0.184,0.200)+cos((a+iTime)) * step(r,1.);\n}\n\n// thanks book of shaders\nfloat smoothedge(float v) {\n    return smoothstep(0.0, 1.0 / iResolution.x, v);\n}\n\n// thanks book of shaders\nfloat ring(vec2 p, float radius) {\n  return abs(length(p) - radius * 0.5) - 0.0005;\n}\n\n\nfloat blips( vec2 pos ) {\n    float flashes =  ring(pos, clamp(tan(iTime)/2., 0., .2));\n    flashes = min(flashes, ring(pos,clamp(tan(iTime+.35)/2., 0., .2)));\n    flashes =  min(flashes, ring(pos, clamp(tan(iTime+.7)/2., 0., 0.2)));\n    return flashes;\n}\n\nvec3 randomDots(vec2 st) {\n    float r = .005;\n    vec2 translate = vec2(cos(iTime)*2.5, cos(iTime)*2.-2.); \n    vec2 st2 = st + translate*.1;\n    vec3 guys = OBJECT(st2, r);\n    \n    translate = vec2(pow(sin(iTime)*1.1, 3.), cos(iTime));\n    st2 = st + translate*.3;\n    guys *= OBJECT(st2, r);\n    \n    translate = vec2(abs(sin(iTime)), cos(iTime));\n    st2 = st + translate*.3;\n    guys *= OBJECT(st2, r);\n    \n    return guys;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st = (fragCoord/iResolution.yy) - vec2(16./9.,0.)/4.;\n    vec3 color = vec3(0,0,1.);\n    float pct = distance(st,vec2(0.5));\n    \n    //draw radar and grid\n    color *= RADAR(pct);\n    float grid = 1.-GRID();\n    color = mix(vec3(0,0,1.), color, grid);\n    \n    // draw sweeper line\n\tfloat sweeper = drawLine(.5, st.x, 0.005)+drawLine(.5,st.y,1.);\n    sweeper = sweeperLine(st);\n    color = mix(vec3(0.000,1.000,0.116), color, sweeper);\n    \n    vec3 guys = randomDots(st);\n    color = mix(vec3(1.,1.,1.), color, guys);\n    \n    // draw target\n    vec2 translate = vec2(pow(cos(iTime/3.), 2.), pow(sin(iTime/5.), 2.));\n    st += translate*.3;\n    vec3 target = OBJECT(st, .01);\n    color = mix(vec3(1.,0,0), color, target);\n    \n    vec3 blips = vec3(smoothedge(blips(st - vec2(0.5))));\n    color = mix(vec3(1.,0,0), color, blips);\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}