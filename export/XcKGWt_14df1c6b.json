{"ver":"0.1","info":{"id":"XcKGWt","date":"1713431249","viewed":35,"name":"弹弹弹","username":"lbl","description":"弹弹弹","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["1111"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//uniform float height;//@1\nfloat time = 0.;//@0\n//uniform float time//@1\nfloat duration = 40.;//@0\n//uniform float duration;\n//uniform vec4 iResolution;//@1\n//uniform vec2 gl_FragCoord;//@1\nconst float PI = 3.14159;\n\nfloat Round(float x) {\n    float r = 1.;\n    return abs( fract(x/2.)-.5)*2. ;// mod(x,r)  *  sign(sin(x*PI / r)) + r * ( 1. - sign(sin(x*PI / r)))/2.;\n}\n\nvec2 Round2(vec2 x) {\n    return vec2(Round(x.x),Round(x.y));\n}\n\nfloat random21(vec2 par) {\n   return fract(sin(dot(par.xy,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 random22(vec2 par) {\n\tfloat rand = random21(par);\n\treturn vec2(rand, random21(par + rand));\n}\n\nvec3 random23(vec2 par) {\n  float rand = random21(par);\n  float r2 = random21(par+rand);\n  return vec3(rand, r2, random21(par + r2));\n}\n\nfloat circle(vec2 uv, vec2 pos,float r) {\n    return length(pos - uv) - r;\n}\n\nvec4 filte(vec2 uv) {\n  vec2 UV = uv;\n  vec3 dir = normalize( random23(vec2(11.)) ) ;\n  vec2 pos = vec2(.2,.2) + dir.xy * dir.z * time;\n  pos = Round2(pos);\n  float l = circle(UV,pos,.15);\n  l = 1. - smoothstep(0.,0.03,l);\n vec3 col = texture(iChannel0,uv-pos).xyz;\n  return  vec4(col * l,1.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    time = fract(iTime/duration) * duration; \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = filte(uv );\n}\n \n","name":"Image","description":"","type":"image"}]}