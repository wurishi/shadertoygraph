{"ver":"0.1","info":{"id":"4fcfzj","date":"1733252246","viewed":194,"name":"Chrome effect","username":"nemerovchenko","description":"test chrome effect","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash(vec2 p) {\n    p = vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)));\n    return -1.0 + 2.0 * fract(sin(p) * 43758.5453123);\n}\n\nfloat noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    \n    float n00 = dot(hash(i), f);\n    float n10 = dot(hash(i + vec2(1.0, 0.0)), f - vec2(1.0, 0.0));\n    float n01 = dot(hash(i + vec2(0.0, 1.0)), f - vec2(0.0, 1.0));\n    float n11 = dot(hash(i + vec2(1.0, 1.0)), f - vec2(1.0, 1.0));\n    \n    return mix(mix(n00, n10, u.x), mix(n01, n11, u.x), u.y);\n}\n\nvec3 chromeEffect(vec2 uv, float time) {\n    vec3 rainbow = 0.5 + 0.5 * cos(time * 0.2 + uv.xyx * 3.0 + vec3(0.0, 2.0, 4.0));\n    float n1 = noise(uv * 3.0 + time * 0.2);\n    float n2 = noise(uv * 5.0 - time * 0.3);\n    float n3 = noise(uv * 7.0 + time * 0.1);\n    float metallic = (n1 * 0.5 + n2 * 0.3 + n3 * 0.2) * 0.8 + 0.2;\n    return mix(rainbow, vec3(metallic), 0.3);\n}\n\nvec2 getDisplacement(vec2 uv, float time) {\n    float noise1 = noise(uv * 3.0 + time * 0.8);\n    float noise2 = noise(uv * 4.0 - time * 0.8);\n    return vec2(noise1, noise2) * 0.1;\n}\n\nvec3 chromaticAberration(vec2 uv, float time) {\n    float strength = 0.02;\n    vec2 dispR = getDisplacement(uv + strength, time);\n    vec2 dispG = getDisplacement(uv, time);\n    vec2 dispB = getDisplacement(uv - strength, time);\n    \n    float r = smoothstep(0.3, 0.28, length(uv + dispR));\n    float g = smoothstep(0.3, 0.28, length(uv + dispG));\n    float b = smoothstep(0.3, 0.28, length(uv + dispB));\n    \n    vec3 chrome = chromeEffect(uv, time);\n    vec3 baseColor = vec3(r, g, b) * chrome;\n    return baseColor;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n    \n    vec3 bgColor = mix(vec3(0.5, 0.0, 0.5), vec3(0.8, 0.0, 0.0), uv.y + 0.5);\n    vec3 color = chromaticAberration(uv, iTime);\n    \n    float glow = smoothstep(0.35, 0.0, length(uv)) * 1.5;\n    vec3 glowColor = mix(vec3(1.0, 0.3, 0.1), vec3(1.0, 0.1, 0.3), glow);\n    color += glowColor * glow;\n    \n    color = pow(color, vec3(0.8));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}