{"ver":"0.1","info":{"id":"clsBzj","date":"1693187443","viewed":33,"name":"rayMarch_test0","username":"Leslie","description":"rayMarch","likes":1,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define MIN_DIST 0.001\n\nfloat getDist(vec3 p){\n    vec4 ball = vec4(0., 0., 6., 1.);\n\n    float dBall = length(p-ball.xyz)-ball.w;\n    float dFloor = p.y+1.;\n    return min(dBall, dFloor);\n}\n\nvec3 getNormal(vec3 p){\n    float d = getDist(p);\n    vec2 e = vec2(0.01, 0);\n\n    vec3 n = d-vec3(\n        getDist(p-e.xyy),\n        getDist(p-e.yxy),\n        getDist(p-e.yyx)\n        );\n    return normalize(n);\n}\n\nfloat rayMarch(vec3 ro, vec3 rd){\n    float dr = 0.;\n    for(int i = 0; i<MAX_STEPS; i++){\n        vec3 p = ro+rd*dr;\n        float ds = getDist(p);\n        dr+=ds;\n        if(ds<MIN_DIST || dr>MAX_DIST) break;\n    }\n    return dr;\n}\n\n\nvec3 getLit(vec3 n, vec3 p){\n    vec3 lPos = vec3(0.+sin(iTime)*5., 5., 6.+cos(iTime)*5.);\n    vec3 l = normalize(lPos-p);\n    float diff = max(0., dot(n, l));\n    float d = rayMarch(p+MIN_DIST*1.01*n, l);\n    if (d<length(lPos-p)) diff=0.;\n    vec3 clr = vec3(diff);\n    return clr;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv, 1.));\n\n    float d = rayMarch(ro, rd);\n    vec3 p = ro+rd*d;\n    vec3 n = getNormal(p);\n    vec3 lit;\n    if(d>MAX_DIST){\n        lit = vec3(0);\n    }else{\n        lit = getLit(n, p);\n    }\n\n    fragColor = vec4(lit, 1.);\n}\n","name":"Image","description":"","type":"image"}]}