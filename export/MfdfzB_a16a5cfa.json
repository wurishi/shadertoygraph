{"ver":"0.1","info":{"id":"MfdfzB","date":"1733250657","viewed":45,"name":"intento1An","username":"cirkusAnette","description":"kdmsgensfg","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practica"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float t){\n\n    vec3 a = vec3(0.398, 0.748, 1.328);\n    vec3 b = vec3(-0.822, -0.692, 0.791);\n    vec3 c = vec3(2.238, 1.000, 1.000);\n    vec3 d = vec3(-1.782, 0.333, 0.668); // estos vectores serán los colores de la paleta\n    \n    \n    return a + b*cos(6.28318*(c*t+d)); // esta ecuación hace magia y los va transicionando \n   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/ iResolution.xy;\n  uv = (uv-0.5)*2.0;\n  uv.x *= iResolution.x / iResolution.y;\n  vec2 uv0 = uv;\n  vec3 colorFinal;\n  \n  for( float i=0.0; i<2.0; i++){\n        uv = fract((uv * 1.2));\n        uv -= 0.5;\n\n        float d = length(uv)*log2(length(uv))*exp2(length(uv0))*inversesqrt (length(uv0));\n\n        d = sin(d*8.0 + iTime*0.85)/0.8;\n        d= 0.13/d;\n        vec3 color = palette(length(uv0) + iTime*0.4);\n        color = \n      color += color*d;\n      colorFinal += color*d;\n  }\n  \n  \n  fragColor = vec4(colorFinal,1.0);\n}","name":"Image","description":"","type":"image"}]}