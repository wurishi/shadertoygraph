{"ver":"0.1","info":{"id":"ddySWh","date":"1681009420","viewed":343,"name":"Gotta Leave","username":"Kali","description":"Coded at Revision 2023 shader jam. Music by h0ffman","likes":23,"published":1,"flags":96,"usePreview":0,"tags":["demoscene","shaderjam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Mdt3Rn","filepath":"https://soundcloud.com/h0ffman/hoffman-and-ferris-bros-before-foes?si=e90d73a04dd244efa8e91e59c86893e5&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/h0ffman/hoffman-and-ferris-bros-before-foes?si=e90d73a04dd244efa8e91e59c86893e5&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define time iTime\n\nfloat det=.001, it;\nfloat cyl;\nfloat so=0.;\nfloat id=0.;\n\nmat2 rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat hash(vec2 p)\n{\n  p*=1000.;\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nvec3 path(float t) {\n  float s=sin(t*.1+cos(t*.05)*2.);\n  float c=cos(t*.3);\n  return vec3(s*s*s,c*c,t);\n}\n\nfloat de(vec3 p) {\n  id=0.;\n  p.xy-=path(p.z).xy;\n  p.xy*=rot(p.z*1.+time*.7+so*50.);\n  vec3 p2=p+sin(p.z)*.2;\n  float m=1000., sc=1.;\n  float s=sin(p.z*.7)*.7;\n  float sph=length(p.xy)-1.3-s;\n  //p2.xy*=rot(time);\n  cyl=length(p2.xy+.5*s+.1)-.05-fract(-p.z+time*3.)*.05;\n  cyl*=.7;\n  for (int i=0; i<8; i++) {\n    float s=2.;\n    p.xy=sin(p.xy);\n    p.xy*=rot(1.);\n    p.xz*=rot(1.6);\n    p=p*s;\n    sc*=s;\n    float l=length(p.xy)-.2;\n    m=min(m,l);\n    if (m==l) it=float(i);\n  }\n  float d=m/sc*2.;\n  d=max(d,-sph);\n  d=min(d,cyl);\n  if (d==cyl) id=1.;\n  return d;\n}\n\nvec3 normal(vec3 p) {\n    vec2 e=vec2(0.,det);\n    return normalize(vec3(de(p+e.yxx),de(p+e.xyx),de(p+e.xxy))-de(p));\n}\n\nvec3 march(vec3 from, vec3 dir) {\n    vec3 p, col=vec3(0.);\n    float d, td=0., maxdist=8.;\n    float g=0.;\n    float r=hash(dir.xy+time);\n    for (int i=0; i<200; i++) {\n        p=from+dir*td;\n        d=de(p)*(1.-r*.2);\n        if (d<det || td>maxdist) break;\n        td+=d;\n        g+=.1/(.1+cyl*5.);\n    }\n    if (d<det) {\n        vec3 n=normal(p);\n        col=normalize(1.+dir)*.3*max(0.,-n.z);\n        if(mod(floor(-time*4.+p.z*1.5),8.)==it) col+=1.; \n        if (id==1.) col=vec3(1.,.5,.3)*max(0.,n.x);\n    } else td=maxdist;\n    col.rb*=rot(dir.y*1.5);\n    col=mix(col,vec3(1.,.7,.5)*exp((-1.5+so*150.)*length(p.xy-path(p.z).xy))*(1.5+so*70.),pow(td/maxdist,1.5));\n    col+=g*.05*vec3(1.,0.5,.3);\n    return col;\n}\n\nmat3 lookat(vec3 dir) {\n    vec3 up=vec3(0.,1.,0.);\n    vec3 rt=cross(up,dir);\n    return mat3(rt,cross(dir,rt),dir);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  so=texture(iChannel1,vec2(.3)).x*.01;\n  vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n  uv*=1.5+sin(length(uv)*10.+time)*.1;\n  float t=time*1.5;\n  vec3 from = vec3(0.,0.,time*20.);\n  from=path(t);\n  from.x+=.5;\n  vec3 adv=path(t+1.);\n  vec3 rdir=normalize(adv-from);\n  vec3 dir = normalize(vec3(uv,1.));\n  dir=lookat(rdir)*dir;\n  dir*=1.+tan(t*.2)*.2;\n  \n  vec3 col = march(from, dir);\n  vec3 fback=texture(iChannel0,gl_FragCoord.xy/iResolution.xy).rgb;\n  col=mix(pow(abs(col),vec3(1.3)),fback,.6);\n  fragColor = vec4(col,1.);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}