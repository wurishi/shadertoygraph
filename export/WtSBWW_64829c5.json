{"ver":"0.1","info":{"id":"WtSBWW","date":"1598889288","viewed":336,"name":"shell parameterization push hole","username":"FabriceNeyret2","description":"Insert (push) hole in parameterization.\nmouse.y tunes hole radius\nMouse.x tunes post-hole distance back to normal\n","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["blackhole","short","parameterization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"push hole in parameterization\"  https://shadertoy.com/view/ltcBRj\n\n\n//#define S(x) clamp(1.2-abs(fract(x)-.5)/fwidth(x) , 0., 1. )\n#define S(x) smoothstep(1.5, 0., abs(fract(x)-.5)/fwidth(x) )\n//#define S(x) smoothstep(1.5, 0., abs(fract(x)-.5)/length(vec2(dFdx(x),dFdy(x))) )\n\nfloat D = .5,     // push distance\n      n = 3.;     // slope after push: \"back to normal\" invdistance\n      \nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, M = iMouse.xy;\n    U = ( U+U - R ) / R.y;\n    \n    if (M!=vec2(0)) M /= R, D = M.y, n = 1./(.01+M.x); // mouse control\n    \n                  // --- pull original parameterization falling in this pixel\n    float l = length(U), c, l0=l;\n    U /= l;\n    // d' = f(d)        f(x) = (x^n+D^n)^(1/n)  \n    // d = f^-1(d')  f^-1(x) = (x^n-D^n)^(1/n)\n    l *= c = pow( abs(1.-pow(D/l,n)), 1./n );   // c = concentration\n    U *= l; \n\n                  // --- apply\n    vec4 T = 2.*texture(iChannel0, .5+.5*U*8.*R.y/R);\n\n    U *= 8.;     // draw grid parameterization\n    O = vec4( max( S(U.x) , S(U.y) ) , 0,0,0);\n    \n    O += T;\n    \n  //O *= max(0.,1.-1.*c); // green: concentration\n    O *= smoothstep( 1.5, 0., abs(l0-D)*6. );\n\n}","name":"Image","description":"","type":"image"}]}