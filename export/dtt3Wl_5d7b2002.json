{"ver":"0.1","info":{"id":"dtt3Wl","date":"1683359482","viewed":197,"name":"xor smooth","username":"Carandiru","description":"interpolation/smooth variant of xor's xor towers shader\nit gets really weird as more time goes on","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Wait for it ...\n// Amazing how much variation there is in an XOR!!\nvoid mainImage(out vec4 o, vec2 u){\n    \n    o = mix(texture(iChannel0, u/iResolution.xy), texture(iChannel1, u/iResolution.xy), fract(iTime));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 o, vec2 u){\n    o *= 0.;\n    \n    u = mix(u-0.5,u+0.5,float(iFrame&1));\n    \n    float i = floor(iTime) * SPEED + 0.0f * SPEED + fract(iTime);\n        \n    for (ivec4 b; (b.x^b.y^b.z)%99 > b.z-1; ) {\n        b = ivec4( vec2(99.+i,300.+float(b.w)*sqrt(i)) + (u/iResolution.x-.5)/.1*o.w, o.z, o.w + i );\n        o+=.075;\n        o.w = o.w * exp(-o.w * (DRAW_DISTANCE-pow(i*DRAW_DISTANCE, 2.0)));\n    }\n    o.xyz /= 56.18;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 o, vec2 u){\n    o *= 0.;\n    \n    u = mix(u+0.5,u-0.5,float(iFrame&1));\n    \n    float i = floor(iTime) * SPEED + 1.0f * SPEED - (1.0f - fract(iTime));\n          \n    for (ivec4 b; (b.x^b.y^b.z)%99 > b.z-1; ) {\n        b = ivec4( vec2(99.+i,300.+float(b.w)*sqrt(i)) + (u/iResolution.x-.5)/.1*o.w, o.z, o.w + i );\n        o+=.075;\n        o.w = o.w * exp(-o.w * (DRAW_DISTANCE-pow(i*DRAW_DISTANCE, 2.0)));\n    }\n    o.xyz /= 56.18;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define SPEED 1.0f\n#define DRAW_DISTANCE 1e-3f   // lower number = farther  or  higher number = closer","name":"Common","description":"","type":"common"}]}