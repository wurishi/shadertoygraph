{"ver":"0.1","info":{"id":"MtjGRK","date":"1430509350","viewed":536,"name":"Rainbow of N00bs","username":"anastadunbar","description":"Was very bored and had to do this.","likes":26,"published":1,"flags":0,"usePreview":0,"tags":["2d","test","noise","perlin","noob","rainbow","hue","hsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define PI 3.14159265358979323\n\n//Random\nfloat rand(vec2 uv)\n{\n    float dt = dot(uv, vec2(12.9898, 78.233));\n\treturn fract(sin(mod(dt, PI / 2.0)) * 43758.5453);\n}\n\n\n//HSL\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\n//My function for rainbow\nfloat grid(float val, float scale)\n{\n    return mix(floor(val*scale)/scale,val,0.2);\n}\n\n//Clouds from (https://www.shadertoy.com/view/MlS3z1)\nconst int iter = 8;\n   \nfloat turbulence(vec2 fragCoord, float octave, int id)\n{\n    float col = 0.0;\n    vec2 xy;\n    vec2 frac;\n    vec2 tmp1;\n    vec2 tmp2;\n    float i2;\n    float amp;\n    float maxOct = octave;\n    for (int i = 0; i < iter; i++)\n    {\n        amp = maxOct / octave;\n        i2 = float(i);\n        xy = id == 1 || id == 4? (fragCoord + 50.0 * float(id) * iTime / (4.0 + i2)) / octave : fragCoord / octave;\n        frac = fract(xy);\n        tmp1 = mod(floor(xy) + iResolution.xy, iResolution.xy);\n        tmp2 = mod(tmp1 + iResolution.xy - 1.0, iResolution.xy);\n        col += frac.x * frac.y * rand(tmp1) / amp;\n        col += frac.x * (1.0 - frac.y) * rand(vec2(tmp1.x, tmp2.y)) / amp;\n        col += (1.0 - frac.x) * frac.y * rand(vec2(tmp2.x, tmp1.y)) / amp;\n        col += (1.0 - frac.x) * (1.0 - frac.y) * rand(tmp2) / amp;\n        octave /= 2.0;\n    }\n    return (col);\n}\n//____________________________________________________\n\n//Draw on screen\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float time = iTime;\n    //Rainbow's positions\n    vec2 rainbowuv = vec2(((uv.x*4.)-1.5)+(sin((time*1.0)+uv.y*PI)/3.),0.);\n    //Make a rainbow\n    vec3 rainbow = clamp(hsl2rgb(vec3(grid(rainbowuv.x+rainbowuv.y,8.)-0.05,1.,0.5))*vec3(1.7,1.4,1.2),0.,1.);\n    //Make a rainbow mask\n    float rainbowmask = 1.-(float((rainbowuv.x+rainbowuv.y) < 0.)+float((rainbowuv.x+rainbowuv.y) > 1.));\n    \n    //Sky\n    vec3 sky = clamp(vec3(0.2,sin(uv.y),1.)+0.3,0.,1.);\n    \n    //Sky+Rainbow\n    vec3 skyandrainbow = (mix(sky,rainbow,rainbowmask));\n    \n    //Clouds\n    float cloud1 = turbulence(fragCoord, 128.0, 1);\n    float cloud2 = turbulence(fragCoord+2000., 128.0, 1);\n    float cloudss = clamp(pow(mix(cloud1,cloud2,0.5),30.)/9.,0.,1.);\n    \n    //Output\n\tfragColor = vec4(skyandrainbow+cloudss,1.0);\n}","name":"","description":"","type":"image"}]}