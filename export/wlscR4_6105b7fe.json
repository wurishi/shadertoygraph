{"ver":"0.1","info":{"id":"wlscR4","date":"1591578129","viewed":50,"name":"colorful scale","username":"darkfox","description":"blue skyblue and red orange.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// colorful scale.\n// https://www.openprocessing.org/sketch/869086\n\nconst float pi = 3.14159;\nconst float SCALE = 5.0;\nconst float ROTATION_SPEED = 0.05;\nconst float BASEHUE1 = 0.05;\nconst float BASEHUE2 = 0.55;\n// hsb to rgb.\nvec3 getRGB(float r, float g, float b){\n    vec3 c = vec3(r, g, b);\n    vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n    rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n  vec2 st = (gl_FragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n  st *= SCALE;\n  float angle = iTime * pi * ROTATION_SPEED;\n  st *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n  vec3 q = vec3(st.x, st.y, iTime * 0.5);\n  vec3 p = q + (q.x + q.y + q.z) / 3.0;\n  vec3 f = fract(p);\n  vec3 i = floor(p);\n  float hue = (mod(iTime, 10.0) < 5.0 ? BASEHUE1 : BASEHUE2);\n  if(f.x > f.y && f.x > f.z){\n    hue += (f.y > f.z ? 0.0 : 0.06);\n  }else if(f.y > f.x && f.y > f.z){\n    hue += (f.x > f.z ? 0.02 : 0.08);\n  }else{\n    hue += (f.x > f.y ? 0.04 : 0.1);\n  }\n  fragColor = vec4(getRGB(hue, (f.x + f.y + f.z) * 0.5, 0.9), 1.0);\n}","name":"Image","description":"","type":"image"}]}