{"ver":"0.1","info":{"id":"XdfcDH","date":"1487974083","viewed":440,"name":"blood on water","username":"afl_ext","description":"use mouse to add blood","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["water","blood"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4( mix(vec3(0.0), vec3(0.7, 0.0, 0.0), texture(iChannel2, uv).r), 1.0);\n\t//fragColor = vec4(vec3(  texture(iChannel0, uv).b), 1.0);\n//\tfragColor = vec4(texture(iChannel1, uv).rg * 0.5 + 0.5, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// wind buffer\n\nfloat hash( float n ){\n    return fract(sin(n)*758.5453);\n    //return fract(mod(n * 2310.7566730, 21.120312534));\n}\n\nfloat noise3d( in vec3 x ){\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\tf       = f*f*(3.0-2.0*f);\n\tfloat n = p.x + p.y*157.0 + 113.0*p.z;\n\n\treturn mix(mix(\tmix( hash(n+0.0), hash(n+1.0),f.x),\n\t\t\tmix( hash(n+157.0), hash(n+158.0),f.x),f.y),\n\t\t   mix(\tmix( hash(n+113.0), hash(n+114.0),f.x),\n\t\t\tmix( hash(n+270.0), hash(n+271.0),f.x),f.y),f.z);\n}\n\nfloat noise2d( in vec2 x ){\n    vec2 p = floor(x);\n    vec2 f = smoothstep(0.0, 1.0, fract(x));\n    float n = p.x + p.y*57.0;\n    return mix(mix(hash(n+0.0),hash(n+1.0),f.x),mix(hash(n+57.0),hash(n+58.0),f.x),f.y);\n}\n\n float configurablenoise(vec3 x, float c1, float c2) {\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\tf       = f*f*(3.0-2.0*f);\n\n\tfloat h2 = c1;\n\t float h1 = c2;\n\t#define h3 (h2 + h1)\n\n\t float n = p.x + p.y*h1+ h2*p.z;\n\treturn mix(mix(\tmix( hash(n+0.0), hash(n+1.0),f.x),\n\t\t\tmix( hash(n+h1), hash(n+h1+1.0),f.x),f.y),\n\t\t   mix(\tmix( hash(n+h2), hash(n+h2+1.0),f.x),\n\t\t\tmix( hash(n+h3), hash(n+h3+1.0),f.x),f.y),f.z);\n\n}\n\nfloat supernoise3d(vec3 p){\n\n\tfloat a =  configurablenoise(p, 883.0, 971.0);\n\tfloat b =  configurablenoise(p + 0.5, 113.0, 157.0);\n\treturn (a + b) * 0.5;\n}\nfloat supernoise3dX(vec3 p){\n\n\tfloat a =  configurablenoise(p, 883.0, 971.0);\n\tfloat b =  configurablenoise(p + 0.5, 113.0, 157.0);\n\treturn (a * b);\n}\n\nfloat fbmHI(vec3 p){\n   // p *= 0.1;\n\t//p += getWind(p * 0.2) * 6.0;\n\tfloat a = 0.0;\n    float w = 1.0;\n    float wc = 0.0;\n\tfor(int i=0;i<9;i++){\n        //p += noise(vec3(a));\n\t\ta += supernoise3d(p) * w;\n\t\twc += w;\n        w *= 0.6;\n\t\tp = p * 3.0;\n\t}\n\treturn a / wc;// + noise(p * 100.0) * 11;\n}\n\nvec3 pixelz = vec3(0.0);\n\nvec2 getWind(vec2 uv){\n    vec2 mousenow = iMouse.xy / iResolution.xy;\n    vec2 mouselast = texture(iChannel1, uv).ba;\n    float dst = distance(mousenow, uv);\n    vec2 dir = distance(mousenow, mouselast) == 0.0 ? vec2(0.0) : normalize(mousenow - mouselast);\n    float magn = max(0.0, iMouse.z) * distance(mousenow, mouselast);\n    float power = 1.0 - smoothstep(0.0, pixelz.x * 100.0, dst);\n\n    #define fbmd(a) fbmHI((a) )\n    return  \n        2.0 * (vec2(fbmd(vec3(uv.x, uv.y, iTime * 0.25) * 1.5), fbmd(vec3(-uv.x, -uv.y, iTime * 0.25) * 1.5)))+\n        -2.0 * (vec2(fbmd(vec3(uv.x, -uv.y, iTime * 0.25) * 1.5), fbmd(vec3(-uv.x, uv.y, iTime * 0.25) * 1.5)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    pixelz.xy = 1.0 / iResolution.xy;\n    vec2 mousep = iMouse.xy / iResolution.xy;\n    vec2 wind = texture(iChannel1, uv).rg;\n    vec2 mouselast = texture(iChannel1, uv).ba;\n    fragColor = vec4(mix(texture(iChannel1, uv + wind * pixelz.xy * 11.0).rg, clamp(getWind(uv), -15.0, 15.0), 0.847), \n                     mix(mousep.x, mouselast.x, 0.9), mix(mousep.y, mouselast.y, 0.9));\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// wetness buffer\n\nvec3 pixelz = vec3(0.0);\n\nfloat hash( float n ){\n    return fract(sin(n)*758.5453);\n    //return fract(mod(n * 2310.7566730, 21.120312534));\n}\n\nfloat noise3d( in vec3 x ){\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\tf       = f*f*(3.0-2.0*f);\n\tfloat n = p.x + p.y*157.0 + 113.0*p.z;\n\n\treturn mix(mix(\tmix( hash(n+0.0), hash(n+1.0),f.x),\n\t\t\tmix( hash(n+157.0), hash(n+158.0),f.x),f.y),\n\t\t   mix(\tmix( hash(n+113.0), hash(n+114.0),f.x),\n\t\t\tmix( hash(n+270.0), hash(n+271.0),f.x),f.y),f.z);\n}\n\nfloat noise2d( in vec2 x ){\n    vec2 p = floor(x);\n    vec2 f = smoothstep(0.0, 1.0, fract(x));\n    float n = p.x + p.y*57.0;\n    return mix(mix(hash(n+0.0),hash(n+1.0),f.x),mix(hash(n+57.0),hash(n+58.0),f.x),f.y);\n}\n\n float configurablenoise(vec3 x, float c1, float c2) {\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\tf       = f*f*(3.0-2.0*f);\n\n\tfloat h2 = c1;\n\t float h1 = c2;\n\t#define h3 (h2 + h1)\n\n\t float n = p.x + p.y*h1+ h2*p.z;\n\treturn mix(mix(\tmix( hash(n+0.0), hash(n+1.0),f.x),\n\t\t\tmix( hash(n+h1), hash(n+h1+1.0),f.x),f.y),\n\t\t   mix(\tmix( hash(n+h2), hash(n+h2+1.0),f.x),\n\t\t\tmix( hash(n+h3), hash(n+h3+1.0),f.x),f.y),f.z);\n\n}\n\nfloat supernoise3d(vec3 p){\n\n\tfloat a =  configurablenoise(p, 883.0, 971.0);\n\tfloat b =  configurablenoise(p + 0.5, 113.0, 157.0);\n\treturn (a + b) * 0.5;\n}\nfloat supernoise3dX(vec3 p){\n\n\tfloat a =  configurablenoise(p, 883.0, 971.0);\n\tfloat b =  configurablenoise(p + 0.5, 113.0, 157.0);\n\treturn (a * b);\n}\n\nfloat fbmHI(vec3 p){\n   // p *= 0.1;\n\t//p += getWind(p * 0.2) * 6.0;\n\tfloat a = 0.0;\n    float w = 1.0;\n    float wc = 0.0;\n\tfor(int i=0;i<9;i++){\n        //p += noise(vec3(a));\n\t\ta += supernoise3d(p) * w;\n\t\twc += w;\n        w *= 0.8;\n\t\tp = p * 2.0;\n\t}\n\treturn a / wc;// + noise(p * 100.0) * 11;\n}\nvec2 mirrored_repeat(vec2 uv){\n\tuv.x += 1.0 * step(0.0, -uv.x);\n\tuv.y += 1.0 * step(0.0, -uv.y);\n\tuv.x -= 1.0 * step(1.0, uv.x);\n\tuv.y -= 1.0 * step(1.0, uv.y);\n    return uv;\n}\n\nfloat getWet(vec2 uv){\n \tfloat drying = 1.0 - texture(iChannel0, uv).r;\n \tfloat ocean = texture(iChannel0, uv).g;\n    float pressure = texture(iChannel0, uv).b;;\n    float pressuredx = texture(iChannel0, uv + pixelz.xz).b;\n    float pressuredy = texture(iChannel0, uv + pixelz.zy).b;\n    vec2 pressured = vec2(pressure - pressuredx, pressure - pressuredy);\n    vec2 wind = texture(iChannel1, uv).rg;\n    float wetness = texture(iChannel2, uv).r;\n    \n    \n    float target = texture(iChannel2, mirrored_repeat(uv + wind * pixelz.xy * 1.0)).r;\n    target += texture(iChannel2, mirrored_repeat(uv + wind * pixelz.xy * 2.0)).r;\n    target += texture(iChannel2, mirrored_repeat(uv + wind * pixelz.xy * 3.0)).r;\n    target += texture(iChannel2, mirrored_repeat(uv + wind * pixelz.xy * 4.0)).r;\n    target *= 0.25;\n    target += max(0.0, iMouse.z) * (1.0 - smoothstep(0.028, 0.029, distance(iMouse.xy/iResolution.xy, uv))) \n        * (smoothstep(0.027, 0.028, distance(iMouse.xy/iResolution.xy, uv))) * 0.1;\n    \n    return (fbmHI(vec3(uv.x, uv.y, iTime)) * 0.001 + 0.999) * clamp(target, 0.0, 1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    pixelz.xy = 1.0 / iResolution.xy;\n    fragColor = vec4(getWet(uv),0.0,0.0,1.0);\n}","name":"Buf C","description":"","type":"buffer"}]}