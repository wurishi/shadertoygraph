{"ver":"0.1","info":{"id":"Xc3BWB","date":"1733419135","viewed":472,"name":"Micro Structure","username":"wyatt","description":"zoom in on woven fabric.","likes":25,"published":3,"flags":40,"usePreview":0,"tags":["weave","fabric","yarn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"Main {\n\n    Q = A(U)/float(iFrame);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\nvec2 mainSound( int samp, float time)\n{\n    float o = 0.;\n    for (float j = 0.; j < 10.; j++) {\n        time += .01*sin(time);\n        time += 1./10.;\n        for (float i = -3.; i <= 15.; i++) {\n            \n            float x = (-i+round(time*72.))/72.;\n            x += sin(x)/72.;\n            o += exp2(-.5*j)*.1*random_chord(x,time-x)*exp(-20.*max(time-x,0.))*smoothstep(0.,exp(-10.*(.5-.5*sin(.56*x))),time-x);\n\n        }\n    }\n    return vec2( o );\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"#define pi 3.141592659\n#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U) \n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat ln (vec3 u, vec3 a, vec3 b) {\n\n    return length(u-a-(b-a)*clamp(dot(u-a,b-a)/dot(b-a,b-a),0.,1.));\n\n}\nfloat map (vec3 p) {\n    float d = 1e9;\n    {\n        vec3 q = p;\n        float n = 10.;\n        float s = sign(mod(floor(n*q.y*.5+.5),2.)-.5);\n        q.y = 1./n*(fract((n*q.y*0.5+0.5))*2.-1.);\n        q.z -= s*.08*cos(3.14159*5.*p.x);\n        vec3 q1 = p;\n        float s1 = sign(mod(floor(n*q1.x*.5+.5),2.)-.5);\n        q1.x = 1./n*(fract((n*q1.x*0.5+0.5))*2.-1.);\n        q1.z += s1*.08*cos(3.14159*5.*q1.y);\n        for (float i = 0.; i < 5.; i++) {\n            q.zy *= ei(exp2(i)*25.*q.x*sign(fract(i/2.)-.5));\n            q.zy = abs(q.zy)-.03*exp2(-i);\n            q1.zx *= ei(exp2(i)*25.*q1.y*sign(fract(i/2.)-.5));\n            q1.zx = abs(q1.zx)-.03*exp2(-i);\n        }\n        d = min(d,length(q.zy)-.001);\n        d = min(d,length(q1.zx)-.001);\n    }\n    return d;\n\n}\nvec3 normal (vec3 p) {\n    vec2 e = vec2(1e-3,0);\n    float m = map(p);\n    return normalize(vec3(\n        map(p+e.xyy)-m,\n        map(p+e.yxy)-m,\n        map(p+e.yyx)-m\n    ));\n\n}\n\nfloat note (float n,float t) {\n    return sin(261.63*2.*pi*t*pow(2.,n*1./12.));\n}\n\nvec4 hash(vec4 p4)\n{\n    p4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nfloat major_7(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 4.0, t) + // Major 3rd\n            note(n + 7.0, t) + // Perfect 5th\n            note(n + 11.0, t)) // Major 7th\n            / 4.0; // Average\n}\n\nfloat minor_7(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 3.0, t) + // Minor 3rd\n            note(n + 7.0, t) + // Perfect 5th\n            note(n + 10.0, t)) // Minor 7th\n            / 4.0; // Average\n}\n\nfloat diminished_7(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 3.0, t) + // Minor 3rd\n            note(n + 6.0, t) + // Diminished 5th\n            note(n + 9.0, t)) // Diminished 7th\n            / 4.0; // Average\n}\n\nfloat major(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 4.0, t) + // Major 3rd\n            note(n + 7.0, t)) // Perfect 5th\n            / 3.0; // Average\n}\n\nfloat minor(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 3.0, t) + // Minor 3rd\n            note(n + 7.0, t)) // Perfect 5th\n            / 3.0; // Average\n}\n\nfloat diminished(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 3.0, t) + // Minor 3rd\n            note(n + 6.0, t)) // Diminished 5th\n            / 3.0; // Average\n}\n\nfloat augmented(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 4.0, t) + // Major 3rd\n            note(n + 8.0, t)) // Augmented 5th\n            / 3.0; // Average\n}\n\nfloat sus2(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 2.0, t) + // Major 2nd\n            note(n + 7.0, t)) // Perfect 5th\n            / 3.0; // Average\n}\n\nfloat sus4(float n, float t) {\n    return (note(n + 0.0, t) + // Root\n            note(n + 5.0, t) + // Perfect 4th\n            note(n + 7.0, t)) // Perfect 5th\n            / 3.0; // Average\n}\nfloat random_chord(float seed, float t) {\n    vec4 h = hash(vec4(seed, 1.0, 1.0, 1.0)); // Generate a hash based on the seed\n    float n = floor(h.y * 36.0)-12.; // Root note in MIDI scale (e.g., C = 0, C# = 1, ..., B = 11)\n    int chordType = int(floor(h.x * 9.0)); // Randomly choose one of 9 chord types\n\n    switch (chordType) {\n        case 0: return major(n, t);\n        case 1: return minor(n, t);\n        case 2: return diminished(n, t);\n        case 3: return augmented(n, t);\n        case 4: return major_7(n, t);      // Major 7th\n        case 5: return minor_7(n, t);      // Minor 7th\n        case 6: return diminished_7(n, t); // Diminished 7th\n        case 7: return sus2(n, t);         // Suspended 2nd\n        case 8: return sus4(n, t);         // Suspended 4th\n        default: return major(n, t);       // Fallback chord (e.g., Major)\n    }\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nMain {\n    Q = A(U);\n    vec4 h = hash(vec4(U,iFrame,iTime));\n    U = 2.*(U+h.xy-.5*R)/R.y;\n    vec3 p = vec3(0,0,-.75);\n    vec3 d = normalize(vec3(U,1.5));\n    p.yz *= ei(.9);\n    d.yz *= ei(.9);\n    p.xy *= ei(.2);\n    d.xy *= ei(.2);\n    for (float i = 0.; i < 200.; i++) {\n        float m = map(p);\n        p += .6*d*m;\n        if (m < 1e-4) {\n            d = normalize(reflect(d,normal(p))+normalize(hash(vec4(U,iFrame,i)).xyz*2.-1.));\n            p += d*1e-3;\n        }\n        if ((p.z)<-4.) {\n            p += d*(-6.0-p.z)/d.z;\n            Q += 25.*exp(-1.*length(p.xy));\n            break;\n        }\n        if (p.z > 3.) break;\n    \n    }\n\n}","name":"Buffer A","description":"","type":"buffer"}]}