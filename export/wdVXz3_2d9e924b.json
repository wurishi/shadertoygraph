{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// license: CC BY-NC https://creativecommons.org/licenses/by-nc/4.0/\n\nvec2 r(vec2 p, float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return vec2(c * p.x - s * p.y, s * p.x + c * p.y);\n}\n\nconst float twoPi = 6.283;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - iResolution.xy / 2.) / iResolution.y;\n    uv.x += 0.2 * sin(uv.y * 3.0 + iTime * 0.23) * uv.y; // slight distortion of the overall space\n\n    float angle = atan(uv.y, uv.x);\n    float normalizedAngle = angle / twoPi;\n    \n    float baseRadius = length(uv);\n    \n    float radius1 = baseRadius + sin(angle * 3.0 + iTime) * 0.01 + sin(angle * 4.0) * 0.01;\n    float radius2 = baseRadius + sin(angle * 4.0 + iTime * 1.1 + 1.7) * 0.02 + sin(angle * 4.0 + 1.3 + iTime * -0.9) * 0.01;\n    \n    float mask1 = texture(iChannel0, vec2(normalizedAngle + sin(radius1 * 4.0) * 0.03, pow(max(1.0 - (radius1 - 0.4), 0.0), 0.5) * 0.8 + iTime * 0.2)).r;\n    float mask2 = texture(iChannel0, vec2(normalizedAngle * 2.0 + 2. + sin(radius2 * 3.0) * 0.05 + sin(radius1 * 4.3) * 0.02, (radius2 - 0.4) * 0.2 - iTime * 0.1)).g;\n    \n    float mainMask = mask1 * mask2 * 2.2; // arbitrary scaling factor, brighten things up a bit\n    \n    // fade out the center\n    mainMask *= smoothstep(0.05, 0.2, radius1 + 0.005 * sin(angle * 5.0 - iTime * 0.4));\n\n    float outerMask = texture(iChannel0, vec2(normalizedAngle + iTime * -0.02, baseRadius * 0.05 - iTime * 0.1)).b;\n    outerMask *= texture(iChannel0, vec2(normalizedAngle + 1.3 + iTime * 0.03, baseRadius * 0.4 + iTime * -0.05)).b * 2.0;\n    \n    // adjust the amount of masking applied based on the distance from center\n    outerMask = smoothstep(1.4 - baseRadius, 0.7 - baseRadius, outerMask);\n    \n    mainMask *= outerMask;\n    \n    float colorMask = texture(iChannel0, vec2(normalizedAngle * 2.0 + iTime * 0.11, baseRadius - iTime * 0.3 + sin(baseRadius * 0.6) * 0.4)).r;\n    \n    const vec3 mainColor1 = vec3(1.2,0.3,0.7);\n    const vec3 mainColor2 = vec3(0.3,1.0,1.0);\n    \n    vec3 color = mix(mainColor2, mainColor1, colorMask);\n    \n    // hide the color pattern a bit\n    color -= vec3(0.4,0.2,0.2) * texture(iChannel0, vec2(normalizedAngle * 3.0 - iTime * 0.13, baseRadius - iTime * 0.23)).g;\n    \n    color = pow(color * mainMask, vec3(2.0)) * 3.0;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"wdVXz3","date":"1574651377","viewed":677,"name":"nebula flow","username":"mahalis","description":"Project for Nodevember day 24, “Nebula”.","likes":19,"published":3,"flags":0,"usePreview":0,"tags":["space","nebula","nodevember"],"hasliked":0,"parentid":"","parentname":""}}