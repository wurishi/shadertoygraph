{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define MAX_STEPS 150\n#define MAX_DIST 100.0\n#define SURF_DIST 0.01\n\n// Rotate function\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\n// Signed distance for glowing flower\nfloat flower(vec3 p) {\n    float d = length(p.xz) - 0.5;       // Circle shape in XZ plane\n    d += sin(p.y * 10.0 + iTime) * 0.1; // Glow effect\n    return d;\n}\n\n// Scene map: array of flowers\nfloat map(vec3 pos) {\n    vec3 p = pos;\n\n    // Repeat flowers in space\n    p.xz = mod(p.xz, 2.0) - 1.0;\n\n    return flower(p);\n}\n\n// Raymarching\nfloat rayMarch(vec3 ro, vec3 rd) {\n    float t = 0.0;\n    for (int i = 0; i < MAX_STEPS; i++) {\n        vec3 p = ro + rd * t;\n        float d = map(p);\n        if (d < SURF_DIST || t > MAX_DIST) break;\n        t += d * 0.5;\n    }\n    return t;\n}\n\n// Color function with glowing effect\nvec3 glowColor(float t) {\n    return vec3(0.7, 0.2, 0.9) + 0.2 * sin(t + iTime); // Purple glow\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    // Camera setup with mouse interactivity\n    float camAngle = iMouse.x / iResolution.x * 2.0 - 1.0;\n    vec3 ro = vec3(0.0, 1.0, -5.0);\n    vec3 rd = normalize(vec3(uv, 1.0));\n    rd.xz *= rot(camAngle);\n\n    // Raymarching\n    float t = rayMarch(ro, rd);\n    vec3 col = glowColor(t) * exp(-t * 0.05); // Add glow and fog\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4cVfDK","date":"1734461698","viewed":65,"name":"purplecorridor","username":"profmitchell","description":"purple corridor","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["purple"],"hasliked":0,"parentid":"","parentname":""}}