{"ver":"0.1","info":{"id":"WsS3zR","date":"1547888355","viewed":398,"name":"Slack's new logo","username":"tatsunoru","description":"Say hello, new logo","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["logo","new","slack"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst vec3 white = vec3(1.0, 1.0, 1.0);\nconst vec3 red = vec3(205.0, 50.0, 100.0) / 255.0;\nconst vec3 yellow = vec3(224.0, 172.0, 67.0) / 255.0;\nconst vec3 green = vec3(103.0, 185.0, 155.0) / 255.0;\nconst vec3 blue = vec3(144.0, 206.0, 224.0) / 255.0;\n\nconst vec3 red2 = vec3(225.0,29.0,91.0) / 255.0;\nconst vec3 yellow2 = vec3(236.0,178.0,45.0) / 255.0;\nconst vec3 green2 = vec3(41.0,183.0,125.0) / 255.0;\nconst vec3 blue2 = vec3(50.0,202.0,241.0) / 255.0;\n\n#define M_PI 3.1415926535897932384626433832795\n#define M_PI05 (M_PI * 0.5)\n\nvec2 rotate(vec2 v, float c, float s){\n\treturn vec2(v.x*c - v.y*s, v.x*s + v.y*c);\n}\n\nvec2 rotate(vec2 v, float r){\n\treturn rotate(v, cos(r), sin(r));\n}\n\nfloat boxLength(vec2 pos) {\n\tvec2 q = abs(pos);\n\treturn max(q.x, q.y);\n}\n\nfloat capsuleLength(vec2 pos, vec2 dir) {\n\tvec2 ba = -dir;\n\tvec2 pa = pos + ba;\n\tba *= 2.0;\n\treturn length(pa - ba * clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0));\n}\n\nfloat circleRectLength(vec2 pos) {\n    return mix(length(pos), boxLength(pos), step(pos.x, 0.0) * step(pos.y, 0.0));\n}\n\nfloat partsLength(vec2 pos, float t){\n    return min(capsuleLength(pos + mix(vec2(0.0, -1.0), vec2(-0.5, -1.0), t), mix(vec2(2.0, 0.0), vec2(0.0, 0.5), t)), mix(4.0, circleRectLength(pos + vec2(-1.5, -0.5)), t));\n}\n\nvec2 fracOrigin(vec2 v){\n\treturn (fract(v) - 0.5) * 2.0;\n}\n\nvec3 slack(vec2 uv, float t, out float alpha){\n    vec3 col = vec3(1.0, 1.0, 1.0);\n    \n    float greenCapsule =  partsLength(rotate(uv, mix(M_PI05 * -1.0, M_PI05 * 0.0, t)), t);\n    float yellowCapsule = partsLength(rotate(uv, mix(M_PI05 * 1.0, M_PI05 * 1.0, t)), t);\n    float redCapsule =    partsLength(rotate(uv, mix(M_PI05 * 2.0, M_PI05 * 2.0, t)), t);\n    float blueCapsule =   partsLength(rotate(uv, mix(M_PI05 * 0.0, M_PI05 * -1.0, t)), t);\n    \n    float threshold = mix(0.5, 0.4, t);\n    alpha = min(min(min(redCapsule, yellowCapsule), greenCapsule), blueCapsule);\n    float astep = fwidth(alpha) * 0.5;\n    float minv = threshold - astep;\n    float maxv = threshold + astep;\n   \n    col *= mix(mix(red, red2, t), white, smoothstep(minv, maxv, redCapsule));\n    col *= mix(mix(yellow, yellow2, t), white, smoothstep(minv, maxv, yellowCapsule));\n    col *= mix(mix(green, green2, t),white, smoothstep(minv, maxv, greenCapsule));\n    col *= mix(mix(blue, blue2, t), white, smoothstep(minv, maxv, blueCapsule));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.yy * 2.0;     \n    float t = smoothstep(0.1, 0.9, (sin(iTime * 1.5) + 1.0) * 0.5);   \n    vec2 uv2 = rotate(uv, mix(-0.15, M_PI * 4.0, t));\n    float alpha = 0.0;\n    vec3 col = slack(rotate(fracOrigin(uv * 5.0) * mix(4.5, 2.5, t), mix(-0.15, 0.0, t)), t, alpha);\n    vec3 col2 = slack(uv2 * mix(5.0, 2.5, t), t, alpha);\n    col = mix(col2, col, smoothstep(0.8, 0.82, alpha));    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}