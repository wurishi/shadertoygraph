{"ver":"0.1","info":{"id":"mddczs","date":"1695379978","viewed":77,"name":"Color Assimilation Grid","username":"paperjack","description":"a fun experiment","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","opticalillusion","colorassimilation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    \n    vec2 gridscale = vec2(60.0);\n    float gridsize = 0.2;\n    float gridangle = 3.14159265359 * 0.25;\n    \n    // square up the grid\n    gridscale.y *= iResolution.y/iResolution.x;\n    \n    vec2 griduv = rotateUV(uv*gridscale, gridangle);\n    float gridPointX = step(float(mod(griduv.x, 1.0)), gridsize);\n    float gridPointY = step(float(mod(griduv.y, 1.0)), gridsize);\n    float gridPoint = min(1.0, gridPointX + gridPointY);\n    vec4 grid = vec4(gridPoint, gridPoint, gridPoint, 1.0);\n    vec4 gridCol = col * grid;\n    \n    float colgrey = 0.21 * col.r + 0.71 * col.g + 0.07 * col.b;\n    \n    vec4 final = mix(vec4(colgrey, colgrey, colgrey, 1.0), gridCol, grid.r);\n    \n    fragColor = final;\n}","name":"Image","description":"","type":"image"}]}