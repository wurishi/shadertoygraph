{"ver":"0.1","info":{"id":"XlcXWs","date":"1482042536","viewed":138,"name":"Tiley Distortion","username":"CyanSprite","description":"Tile Distortion I made, just having fun honestly.\nGave four different bools to play around with.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","distortion","layer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//speed\nfloat speed = .05;\n//how many tiles do you want? \nfloat tiles = 9.0;\n//the vers I did first versus second\nbool vers1 = true;\n//render simplish\nbool simple = true;\n//don't flood through X\nbool noFloodX = true;\n//don't flood through Y\nbool noFloodY = true;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = 2.0 * fragCoord.xy / iResolution.xy - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    float m1 = 1.0;\n    float m2 = 1.0;\n    float m3 = uv.x;\n    float m4 = uv.y;\n    float m5 = 1.0;\n    \n    if(!simple){\n    \tm1 = uv.y;\n        m2 = uv.x;\n    }\n    if(vers1){\n    \tm3 = uv.y;\n        m4 = uv.x;\n    }\n        \n    \n    uv.x = cos(uv.x * tiles) * m3 * m1;\n    if(noFloodX)\n    \tm5 = uv.x;\n    uv.y = sin(uv.y * tiles) * m4 * m2 * m5;\n    if(noFloodY)\n        uv.x*=uv.y;\n    vec4 col = texture(iChannel0,uv+iTime*speed);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}