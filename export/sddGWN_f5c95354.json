{"ver":"0.1","info":{"id":"sddGWN","date":"1629898951","viewed":189,"name":"Corona Pirates Pissed 24/7","username":"j3553","description":"Again an adaptation made back in 2016...forgot to post though. All credits go to @iq...right now cannot retrace origine. My goodness...the bar has raised another mile, last lustrum...anyways...it took a while to recove the pirates. Due to covid I guess...","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["iqmusicpirates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float period = 48.0;\nconst float dX = 4.8;\nconst float offsetMoonY = 0.5;\nconst float dY = 0.2;\n\nconst vec3 offset=vec3(1.5,2.,-2.5);\n\n#define PI 3.14159265358979\n\n// Origin (https://www.shadertoy.com/view/ldXXDj) created by inigo quilez - iq/2014\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat fbm( vec2 p )\n{\n    return 0.5000*texture( iChannel1, p*1.00 ).x + \n           0.2500*texture( iChannel1, p*2.02 ).x + \n           0.1250*texture( iChannel1, p*4.03 ).x + \n           0.0625*texture( iChannel1, p*8.04 ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n{\tfloat generalTime = iTime / 54.35;\n\tvec2 p = (-iResolution.xy+2.0*gl_FragCoord.xy) / iResolution.y;\n    vec2 i = p;\n\n    // camera\n    p += vec2(1.0,3.0)*0.001*2.0*cos( generalTime*5.0 + vec2(0.0,1.5) );    \n    p += vec2(1.0,3.0)*0.001*1.0*cos( generalTime*9.0 + vec2(1.0,4.5) );    \n    p *= 0.85 + 0.05*length(p);\n    \n    // water\n    vec2 q = vec2(p.x,1.0)/p.y;\n    q.y -= 0.9*generalTime;    \n        vec2 off = texture( iChannel0, 0.1*q*vec2(1.0,2.0) - vec2(0.0,0.007*iTime) ).xy;\n    q += 0.4*(-1.0 + 2.0*off);\n    vec3 col = 0.2*sqrt(texture( iChannel0, 0.05*q *vec2(1.0,4.0) + vec2(0.0,0.01*iTime) ).zyx);\n    col *= 0.4;\n    \n    float dLight = dX - 0.6;\n    float lightReflect = (dLight/period)*(mod(iTime,period))-(dLight/2.0);\n    \n    float re = 1.0-smoothstep( 0.0, 0.7, abs(p.x-lightReflect) - abs(p.y)*0.5+0.2 );\n    col += 1.0*vec3(1.0,0.9,0.73)*re*0.2*off.y*5.0*(1.0-col.x);\n    float re2 = 1.0-smoothstep( 0.0, 2.0, abs(p.x-0.6) - abs(p.y)*0.85 );\n    col += 0.7*re2*smoothstep(0.35,1.0,texture( iChannel1, 0.075*q *vec2(1.0,4.0) ).x);\n    \n    // sky\n    vec3 sky = vec3(0.01, 0.01, 0.1) * 1.4;\n    \n    // stars    \n    sky += 0.5*smoothstep( 0.95,1.00,texture( iChannel1, 0.25*p ).x);\n    sky += 0.5*smoothstep( 0.85,1.0,texture( iChannel1, 0.25*p ).x);\n    sky += 0.2*pow(1.0-max(0.0,p.y),2.0);\n    \n    // clouds    \n    float f = fbm( 0.002*vec2(p.x,1.0)/p.y );\n    vec3 cloud = vec3(0.3,0.4,0.5)*0.7*(1.0-0.85*sqrt(smoothstep(0.4,1.0,f)));\n    sky = mix( sky, cloud, 0.95*smoothstep( 0.4, 0.6, f ) );\n    sky = mix( sky, vec3(0.33,0.34,0.35), pow(1.0-max(0.0,p.y),2.0) );\n    col = mix( col, sky, smoothstep(0.0,0.1,p.y) );\n    \n    // horizon\n    col += 0.1*pow(clamp(1.0-abs(p.y),0.0,1.0),9.0);\n\n    // moon\n    \n    float moonPositionX = (dX / period) * mod(iTime, period) - ( dX / 2.);\n    float moonPositionY = dY * cos( iTime / ( period / (2.0*PI))  + PI ) + offsetMoonY;\n    \n    float d = length(p-vec2(moonPositionX,moonPositionY));\n    \n    float g = 1.0 - smoothstep( 0.2, 0.22, d );\n    \n    float moontex = 0.82+0.1*smoothstep(0.25,0.7,fbm(0.06*p));\n    \n    vec3 moon = vec3(1.0,0.97,0.9)*(1.0-0.1*smoothstep(0.2,0.5,f));\n    \n    \tmoon = abs(fract((moon+offset/1.15)*.17)-.5);  // tile folding from Hot Shower by Kali\n\t\n\tfor (int i=0; i<11; i++) {  moon = abs(moon)/dot(moon,moon)-.319; } // the magic formula for the hot flow\n\n    col += 0.8*moon*exp(-4.0*d)*vec3(1.1,1.0,0.8);\n    col += 0.2*moon*exp(-2.0*d);\n    col = mix( col, moon*moontex, g );\n    \n    // postprocess\n    col *= 1.4;\n    col = pow( col, vec3(1.5,1.2,1.0) );    \n    col *= clamp(1.0-0.3*length(i), 0.0, 1.0 );\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}