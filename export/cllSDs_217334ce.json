{"ver":"0.1","info":{"id":"cllSDs","date":"1675495668","viewed":53,"name":"The Simplest Mandelbrot","username":"patrickhartono","description":"The Simplest Mandelbrot","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nThe MIT License\n\nCopyright Â© 2023 Patrick Hartono\n\nPermission is hereby granted, free of charge, to any person obtaining \na copy of this software and associated documentation files (the \"Software\"), \nto deal in the Software without restriction, including without limitation \nthe rights to use, copy, modify, merge, publish, distribute, sublicense, \nand/or sell copies of the Software, and to permit persons to whom the Software \nis furnished to do so, subject to the following conditions: \nThe above copyright notice and this permission notice shall be included in \nall copies or substantial portions of the Software. \nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF \nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH \nTHE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n\n#define MAX_ITER 10\n#define SCALE 0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 c = vec2(uv.x, uv.y);\n    int i;\n    for (i = 0; i < MAX_ITER; i++)\n    {\n        float x = c.x;\n        float y = c.y;\n        float r2 = x * x + y * y;\n        if (r2 > 4.0) break;\n        float new_x = x * x - y * y + uv.x;\n        float new_y = 2.0 * x * y + uv.y;\n        c = vec2(new_x, new_y);\n    }\n    fragColor = vec4(vec3(float(i) / float(MAX_ITER)), 1.0);\n}\n\n\n//This code implements a simple fractal known as the Mandelbrot set. \n//The uv variable is used to store the position of the current pixel in a normalized coordinate space,\n//with the origin at the center of the screen. The code then performs a series of iterations of \n//the Mandelbrot formula, checking at each step whether the result is greater than 4. \n//If the result is greater than 4, the loop is exited and the number of iterations is \n//used to determine the color of the pixel. The final step sets the alpha channel to fully opaque.\n\n","name":"Image","description":"","type":"image"}]}