{"ver":"0.1","info":{"id":"ftcfzl","date":"1663471966","viewed":150,"name":"012 - ShaderToy App State","username":"PiGIon","description":"I wanted to test application state in ShaderToy, control the circle with arrow keys.","likes":1,"published":3,"flags":48,"usePreview":0,"tags":["keyboard","state","buffer","begginer","ichannel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2022.09.17\n\nfloat antiAlias;\n\nvec4 circle(vec2 uv, vec2 origin, float size, vec3 col) {\n    return vec4(col, smoothstep(size + antiAlias, size - antiAlias, length(uv - origin)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    antiAlias = 1.5/iResolution.y;\n    \n    vec3 col;\n    \n    vec4 s = texture(iChannel0, vec2(0.));\n\n    vec3 bg = vec3(1.);\n    vec4 c = circle(uv, s.xy, 0.25, s.rgr);\n    \n    col = mix(bg, c.rgb, c.a);\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEY_LEFT 37\n#define KEY_UP 38\n#define KEY_RIGHT 39\n#define KEY_DOWN 40\n\n#define SPEED 1.\n\nfloat key(int keyCode) {\n    return texelFetch(iChannel1, ivec2(keyCode, 0), 0).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 O;\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    if (iFrame == 0) {\n        O = vec4(0.0);\n    } else {\n        vec4 s = vec4(\n            key(KEY_RIGHT) - key(KEY_LEFT),\n            key(KEY_UP) - key(KEY_DOWN),\n            0., 0.\n        ) * SPEED * iTimeDelta;\n        \n        O = texture(iChannel0, vec2(0.)) + s;\n    }\n    \n    fragColor = O;\n}","name":"Buffer A","description":"","type":"buffer"}]}