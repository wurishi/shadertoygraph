{"ver":"0.1","info":{"id":"Ds3Bzn","date":"1696770702","viewed":30,"name":"Fork luco-frac1 animaratio 661","username":"animaratio","description":"fractal, symmetry","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","symmetry"],"hasliked":0,"parentid":"DtVXDc","parentname":"luco-frac1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t )\n{\n    vec3 a = vec3(0.5,0.5,0.4);\n    vec3 b = vec3(0.1,0.4,0.5);\n    vec3 c = vec3(1.0,1.0,1.0);\n    vec3 d = vec3(0.25,0.45,0.6);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y; \n   \n     \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3 (0.0);\n    \n  \n        for (float i = 0.0; i < 2.0 ; i++)\n    {\n    uv = fract (uv * 1.5) - 0.5;\n    \n    float d = length (uv) * exp (-length (uv0));\n    \n    vec3 col = palette(length(uv0) + i*4.0 +  iTime* .4);\n    \n    d = sin (d*8. + iTime) /8.;\n    d = abs(d);\n    \n    d = pow (0.01 / d, 1.2);\n    \n    finalColor  += col * d;\n    \n    }\n    \n    fragColor = vec4(finalColor ,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}