{"ver":"0.1","info":{"id":"ll2BDt","date":"1517635637","viewed":92,"name":"Spiral Experiment","username":"shemit","description":"Messing with spirals","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n//x²+y² = a²[arc tan (y/x)]². \nvec3 spiralize(vec2 uv, float a) {\n    float xsq = uv.x * uv.x ;\n    float ysq = uv.y * uv.y;\n    \n    float rs = a * a * (PI + atan(uv.y / uv.x)) * (2.5 * PI + atan(uv.y / uv.x));\n    float rs2 = a * a * \n        (PI / 2.0 + atan(uv.y / uv.x)) * (PI / 2.0 + atan(uv.y / uv.x));\n    float val = xsq + ysq - rs;\n    float val2 = xsq + ysq - rs2;\n    \n    if (abs(val) < 0.005) {\n    \treturn vec3(rs, 1.0, 1.0);\n    } else if (abs(val2) < 0.005) {\n    \treturn vec3(1.0, 1.0, rs);               \n    } else {\n     \treturn vec3(0.0, 0.0, 0.0);   \n    }\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    uv.x = (uv.x - 0.5 * iResolution.x / iResolution.y) * 0.9;\n\tuv.y = (uv.y - 0.5) * 0.9;\n    \n    \n    \n    vec3 spiral = spiralize(uv, 0.05);\n\n    \n    \n    // Output to screen\n    fragColor = vec4(spiral,1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}