{"ver":"0.1","info":{"id":"cltcRM","date":"1699007088","viewed":56,"name":"Sun Without Boundary","username":"g1mishra","description":"A bright sun which is boundaryless","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sun","flare","glare","boundary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 sun_dir = vec3(0.0, 0.0, 1.0);\nfloat theta = 3.2;\n\nvec3 perspective_camera(vec3 lookfrom, vec3 lookat, float tilt, float vfov, vec2 uv) {\n  vec2 sc = vec2(sin(tilt), cos(tilt));\n  vec3 vup = normalize(vec3(sc.x, sc.y, 0.0));\n  vec3 w = normalize((lookat - lookfrom));\n  vec3 u = cross(w, vup);\n  vec3 v = cross(u, w);\n  float wf = (1.0 / tan(((vfov * 3.14159265) / 360.0)));\n  return normalize((((uv.x * u) + (uv.y * v)) + (wf * w)));\n}\n\nfloat expstep(float x, float k) {\n  return exp(((k * x) - k));\n}\n\nvec3 get_background(vec3 rd) {\n  float sun_dif = dot(rd, sun_dir);\n  vec3 col = (vec3(1.0, 0.9, 0.9) * expstep(sun_dif, 600.0));\n  col = (col + (vec3(1.0, 0.7, 0.7) * expstep(sun_dif, 50.0)));\n  col = (col + (vec3(1.0, 0.6, 0.05) * expstep(sun_dif, 10.0)));\n  return col;\n}\n\nvec3 color_tonemap_aces(vec3 col) {\n  return clamp(((col * ((2.51 * col) + 0.03)) / ((col * ((2.43 * col) + 0.59)) + 0.14)), 0.0, 1.0);\n}\n\nvec3 color_tone_1(vec3 col, float gain, float lift, float invgamma) {\n  col = pow(col, vec3(invgamma));\n  return (((gain - lift) * col) + lift);\n}\n\nvec3 color_gamma_correction(vec3 col) {\n  return pow(col, vec3(0.454545455));\n}\n\nvec3 vignette(vec3 col, vec2 coord, float strength, float amount) {\n  return (col * ((1.0 - amount) + (amount * pow(((((16.0 * coord.x) * coord.y) * (1.0 - coord.x)) * (1.0 - coord.y)), strength))));\n}\n\n\nvec3 sun_glare(vec3 rd) {\n  vec3 glare_col = vec3(1.0, 0.6, 0.2);\n  return (glare_col * pow(max(dot(sun_dir, rd), 0.0), 4.0));\n}\n\nvoid mainImage(out vec4 frag_col, in vec2 frag_coord) {\n  vec2 res = vec2(iResolution.x, iResolution.y);\n  vec2 coord = ((5. * (frag_coord - (res * 0.5))) / iResolution.y);\n  vec3 lookat = vec3(0.0, 0.0, 0.0);\n  vec2 sc = (vec2(sin(theta), cos(theta)) * 4.0);\n  vec3 ro = vec3(sc.x, 0.5, sc.y);\n  vec3 rd = perspective_camera(ro, lookat, 0.0, 50.0, coord);\n  vec3 p = (ro + (rd ));\n  vec3 col = get_background(rd);\n  col = (col + (0.9 * sun_glare(rd)));\n  col = color_tonemap_aces(col);\n  col = color_tone_1(col, 1.3, 0.002, 1.);\n  col = color_gamma_correction(col);\n  col = vignette(col, (frag_coord / res), 0.25, 0.7);\n  frag_col = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}