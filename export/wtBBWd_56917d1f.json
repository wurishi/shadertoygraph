{"ver":"0.1","info":{"id":"wtBBWd","date":"1600532218","viewed":592,"name":"Mandelbrot/Julia Set","username":"Dogemaster09","description":"This is my first time playing around with fractals in shadertoy. If anybody has a good way to add color that would be great! I was thinking HSV to RGB but the algorithms are really complicated and I don't want to deal with them.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Setting up pixel coordinates from -2 to 2 and correcting for aspect ratio on the X axis\n    \n    vec2 c = (fragCoord.xy-.5*iResolution.xy) / iResolution.y * 3.;\n    \n    //All of these following commented out bits were just for testing\n    \n    //vec2 mouse = iMouse.xy/iResolution.xy;\n    //float rotTime = iTime/1.5;\n    //float zoom = 90.;\n    //c = vec2(cos(rotTime)*c.x-sin(rotTime)*c.y, sin(rotTime)*c.x + cos(rotTime)*c.y);\n    //c /= sin(iTime/3.)*70.+71.;\n    //c /= iTime*iTime*iTime;\n    //c /= (mouse.y*zoom+.5)*(mouse.y*zoom+.5);\n    //c /= iTime*iTime*iTime;\n    \n    //This is where the actual set is generated\n    \n    vec2 z = vec2(0.0);\n    \n    //Uncomment these two lines to get the Julia set\n    //z = vec2(c);\n    //c = vec2(iMouse.xy/iResolution.xy*4.-2.);\n    \n    const int maxSteps = 256;\n    \n    float iter = 0.;\n    \n    for (int i = 0; i < maxSteps; i++) {\n        z = vec2(z.x*z.x - z.y*z.y + c.x, 2.*z.x*z.y + c.y);\n        //z = z * z + c;\n        if(length(z)>2.) break;\n        iter++;\n    }\n    \n    float bw = float(iter/float(maxSteps));\n    vec3 col = vec3(bw);\n\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}