{"ver":"0.1","info":{"id":"XcdSz8","date":"1713567778","viewed":18,"name":"Grid Test matheus","username":"matheusfs2","description":"Test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    \n    //float circle = mix(0.0, 1.0, length(uv) < 0.3);\n    \n    //float squareX = smoothstep(0.0, 0.005, mod(uv.x, 0.1)) * (1.0 - smoothstep(0.005, 0.01, mod(uv.x, 0.1)));\n    //float squareY = smoothstep(0.0, 0.005, mod(uv.y, 0.1)) * (1.0 - smoothstep(0.005, 0.01, mod(uv.y, 0.1)));\n    //float square = squareX + squareY;\n    //col += vec3(square);\n    \n    //float line = mix(0.0, 1.0, uv.x > -0.55 && uv.x < 0.55 && uv.y >-0.35 && uv.y < -0.34);\n    //col += vec3(line);\n    \n        \n    // Linear\n    //uv -= vec2(fract(iTime*0.5)); \n    \n    // Senoidal\n    uv -= vec2(sin(iTime*0.5)); \n    \n    uv.x = mod(uv.x, 0.2);\n    uv.y = mod(uv.y, 0.2);\n    \n    float square = mix(0.0, 1.0, uv.x > 0.0 && uv.x < 0.01 && uv.y > 0.0 && uv.y < 0.01);\n    \n    col += vec3(square);\n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}