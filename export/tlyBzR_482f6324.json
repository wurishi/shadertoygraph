{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define pi 3.14159265359\n\n#define ITER 50.\n#define STRENGTH 0.5\n\n#define thickness vec2(0.005, 0.008)\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ratio = STRENGTH * (sin(iTime-pi/2.)*0.5+0.5);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.); // * texture(iChannel0, uv).rgb;\n    \n    vec2 direction = 0.5 - uv;\n        \n    for (float i=ITER; i >= 0.; --i)\n    {   \n        vec2 hold_uv = uv + direction * ratio * i / ITER;\n        vec2 _mod = mod(hold_uv, thickness);\n        hold_uv = hold_uv - _mod;\n    \n        vec3 hold_col = texture(iChannel0, hold_uv).rgb;\n        if (length(hold_col)/sqrt(3.) >= (i / ITER) &&\n            length(hold_col)/sqrt(3.) <= ((i + 1.) / ITER) &&\n            _mod.x < 0.002 && _mod.y < 0.003)\n        {            \n            col = 1.2 * hold_col;\n            break;\n        }\n    }\n    \n    fragColor = vec4(col,1.0);\n}\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"tlyBzR","date":"1734268192","viewed":62,"name":"Image3D.No.9","username":"avartation","description":"sdfgh","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["sdfgv"],"hasliked":0,"parentid":"","parentname":""}}