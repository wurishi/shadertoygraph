{"ver":"0.1","info":{"id":"4fVGDK","date":"1713287019","viewed":326,"name":"2024-04-13 h_junction","username":"FoRenard","description":"https://x.com/killu0_/status/1774732748609175759\ndj Pinieon\nbonzomatic","likes":17,"published":1,"flags":32,"usePreview":1,"tags":["livecoding","vj"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0,fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// for shadertoy\n#define backbuffer iChannel0\n#define resolution (iResolution.xy)\n#define time iTime\n#define saturate(x) clamp(x,.0,1.)\n#define linearstep(edge0, edge1, x) saturate(((x) - (edge0)) / ((edge1) - (edge0)))\n#define remap(x, a, b, c, d) mix(c, d, ((x) - (a)) / ((b) - (a)))\n#define remapc(x, a, b, c, d) mix(c, d, linearstep(a, b, x))\nfloat font(vec2 uv,vec2 id)\n{\n  uv=remapc(uv,vec2(0),vec2(1),id,id+1.)/16.;\n  const float w=0.2;\n  return smoothstep(.55,.45,textureGrad(iChannel1,uv,dFdx(uv),dFdy(uv)).a);\n}\n\nfloat pinieon(vec2 uv)\n{\n  uv=fract(uv);\n  uv=.5+(uv-.5)*.8;\n  vec2 ruv=uv*5.,fuv=fract(ruv),iuv=floor(ruv);\n  vec2 id=vec2[3](vec2(1,12),vec2(15,13),vec2(2,12))[int(ruv.x+2.)%3];\n  return font(.5+(fuv-.5)*.7,id)*float(iuv.y==2.)*step(0.5,iuv.x)*step(iuv.x,3.5);\n}\nfloat hjct(vec2 uv)\n{\n  uv=fract(uv);\n  uv=.5+(uv-.5)*.8;\n  vec2 ruv=uv*5.,fuv=fract(ruv),iuv=floor(ruv);\n  vec2 id=vec2[3](vec2(1,12),vec2(15,13),vec2(2,12))[int(ruv.x+2.)%3];\n  return font(.5+(fuv-.5)*.7,id)*float(iuv.y==2.)*step(0.5,iuv.x)*step(iuv.x,3.5);\n}\n////////////////////////////\n//........................//\n//...%%........%%...%%%%..//\n//..%%%.......%%.......%%.//\n//...%%......%%.....%%%%..//\n//...%%.....%%.....%%.....//\n//.%%%%%%..%%......%%%%%%.//\n//........................//\n// DJ: Pinieon            //\n// VJ: Renard             //\n////////////////////////////\n#define sat(x) clamp(x,0,1)\n#define norm(x) normalize(x)\n#define rep(i,n) for(int i=0;i<n;i++)\nconst float pi=acos(-1.);\nconst float tau=2.*pi;\nvec3 hash(vec3 x){uvec3 v=floatBitsToUint(x);v=v*20240413u+1212121212u;v.x+=v.y*v.z;v.y+=v.z*v.x;v.z+=v.x*v.y;v^=v>>16u;v.x+=v.y*v.z;v.y+=v.z*v.x;v.z+=v.x*v.y;return vec3(v)/float(-1u);}// i don't wanna write\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}// i don't wanna write\nmat3 bnt(vec3 T){T=norm(T);vec3 N=vec3(0,1,0);vec3 B=norm(cross(N,T));N=norm(cross(T,B));return mat3(B,N,T);}// i don't wanna write\nfloat iplane(vec3 ro,vec3 rd,vec3 pd,float w){pd=norm(pd);float l=-(dot(ro,pd)+w)/dot(rd,pd);return (l<0.?1e5:l);}// i don't wanna write\n////////////////////////////\nfloat bpm=125.;\nfloat alt,lt,tr,bt;\n#define sc(x) hash(vec3(1.2,x,bt))\n\nfloat fui(vec2 suv,float s)\n{\n  // disable s\n  s=1.2;\n  suv-=alt*0.1;\n  suv*=rot(floor(sc(3).x*4.)*pi/2.0);\n  vec2 ruv=suv;\n  rep(i,4)\n  {\n    if(hash(vec3(floor(ruv)+s,i)).x<0.5)ruv*=2.;\n    else break;\n  }\n  \n  vec3 h=hash(vec3(floor(ruv)+1.2,s));\n  vec2 fuv=fract(ruv);\n  float c=0.;\n  float b=sc(0).x;\n  vec2 au=abs((fuv*2.-1.)*rot(floor(h.z*4.)*pi/4.0));\n  if(b<.2)\n  c=pinieon(suv);\n  else if(b<.4)\n    c=step(fract(dot(vec2(1),suv)),.1);\n  else\n     c=step(max(au.x,au.y),.4)*step(min(au.x,au.y),.05)*step(h.x,.5);\n  return c;\n}\n\nfloat march(vec3 ro,vec3 rd)\n{\n  int n=16;\n  float l=1e9;\n  rep(i,n)\n  {\n    float fi=(float(i)+.5)/float(n);\n    vec3 pd=norm(tan(hash(vec3(bt,i,1.2))*2.-1.));\n    if(sc(0).z<.3)\n    {\n      pd=vec3(0,0,1);\n    }\n    float w=mix(-5.,5.,fi);\n    float d=iplane(ro,rd,pd,w);\n    vec3 rp=rd*d+ro;\n    vec2 uv=(rp.x*pd.zy+rp.y*pd.xz+rp.z*pd.xy)*0.5;\n    float s=fui(uv,w);\n    if(0.<s)l=min(l,d);\n  }\n  \n  return l;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 fc=gl_FragCoord.xy,res=resolution;\n  vec2 uv=fc/res,asp=res/min(res.x,res.y),asp2=res/max(res.x,res.y);\n  // :1\n  alt=lt=time*bpm/60.0;\n  tr=1.-exp(-3.*fract(lt));\n  bt=floor(lt);\n  lt=tr+bt;\n  \n  bool tomaru=int(bt/4.)%2==0;\n  if(tomaru)\n  {\n    alt=lt=time*bpm/60.0/4.0;\n    tr=fract(lt);bt=floor(lt);\n  }\n  \n  vec2 suv=(uv*2.-1.)*asp;\n  \n  //float c=fui(suv,bt);\n  vec3 ro=vec3(0,0,-3),dir,rd;\n  dir=-ro;\n  float sc1y=sc(1).y;\n  if(sc1y<.3)\n  {\n    ro=vec3(mix(-1.,1.,fract(alt)),0,-3);\n    dir=vec3(0,0,1);\n  }\n  else if(sc1y<.6)\n  {\n    ro=vec3(0,0,mix(-5.,-3.,tr));\n    dir=vec3(0,0,1);\n  }\n  else\n  {\n    float a=alt*.5;\n    ro=vec3(cos(a),0,sin(a))*2.;\n    dir=-ro;\n  }\n  float z=.5;\n  if(sc(1).x<.3)z=mix(.3,1.7,tr);\n  rd=norm(bnt(dir)*vec3(suv,z));\n  float l=march(ro,rd);\n  float c=exp(-0.2*l);\n  \n  if(sc(0).y<.2){\n    //c+=texture(hjct,suv*0.5+.5+vec2(alt*0.5,0)).r*step(fract(alt*4),.5);\n    c+=hjct(suv*0.5+.5+vec2(alt*0.5,0))*step(fract(alt*4.),.5);\n    c*=step(abs(suv.y),.5);\n  }\n  // nori\n  if(sc(1).z<.3)\n  {\n    vec2 ruv=suv*4.;\n    vec3 h=hash(vec3(floor(ruv),floor(alt*4.)));\n    //vec2 fuv=fract(ruv),au=abs(fuv*2-1)*rot(floor(h.z*4)*pi/2.0);// good but\n    vec2 fuv=fract(ruv),au=abs((fuv*2.-1.)*rot(floor(h.z*4.)*pi/4.0));\n    c+=step(max(au.x,au.y),.3)*step(min(au.x,au.y),.05)*step(h.x,.1);\n  }\n  if(tomaru)\n  {\n    float len=length(suv)-mix(.2,.8,tr);\n    float nya=step(abs(len),.005);\n    if(len<0.0)c=1.-c*1.5;\n    c+=nya;\n  }\n  // :3\n  float ema=0.7;\n  vec3 back=texture(backbuffer,uv).rgb;\n  vec3 col=mix(vec3(c,back.rg*1.5),back,ema);\n  // :2\n  // col*=step(fract(time*8.),.5);\n  fragColor=vec4(col,1);\n}","name":"Buffer A","description":"","type":"buffer"}]}