{"ver":"0.1","info":{"id":"WtBXDz","date":"1565726506","viewed":146,"name":"Glitch#02","username":"104","description":"Something glitchy anyone?","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float complexity = 5.;\nconst float speed = .5;\nconst float density = .5; // 0-1\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nmat2 rot2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\n#define q(x,p) (floor((x)/(p))*(p))\n\nvoid mainImage( out vec4 o, vec2 C)\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = C/R.xy;\n    vec2 N = uv;\n    uv.x *= R.x/R.y;\n    const float z = 10.;\n    uv *= z;\n    uv += floor(iTime*speed)*z*1.618;\n    o = vec4(0);\n\n    for (float i = 1.;i <= complexity; ++ i) {\n        vec4 h = hash42(floor(uv+i));\n        vec2 p = fract(uv+i);\n       \tp-=.5;\n        uv += p * (h.y-.2)*2.;// skew\n\n        h = hash42(floor(uv));\n        if (h.w < density) {\n        \th = hash42(h.rg);\n            h = fract(h + q(iTime*.3,.05)*.2); // animate\n            o +=h/i;\n        }\n    }\n    o = clamp(o,.0,1.) * mod(C.y,3.)/3.;\n  \to=step(.5,o) * mod(C.y,3.)/2.;\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}