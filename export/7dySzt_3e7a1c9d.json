{"ver":"0.1","info":{"id":"7dySzt","date":"1636377246","viewed":134,"name":"Eye eye","username":"trinketMage","description":"Eye trigonometric functions practice","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["eye","trigonometry","trigonometricfunctions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(float size, vec2 st, vec2 center) {\n    float theta = distance(st, center );\n    return smoothstep(size - fwidth(theta), size, theta);\n}\n\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\nfloat rand(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    uv.x -= (iResolution.x / iResolution.y - 1.0) * 0.5;\n    float count = 9.0;\n    vec2 cell = floor((uv) * count) / count - 0.5 + 1.0 / count * 0.5;\n\n    float scale = rand(cell) * 0.25 + 0.25;\n    vec2 fuv = fract(uv * count) * (1.0 + scale)  - scale * 0.5;\n        \n    float bruit = rand(uv - sin(floor(iTime * 4.0)));\n\n    \n    vec2 uPosition = (iMouse.xy / iResolution.y) - 0.5;\n    uPosition.x -= (iResolution.x / iResolution.y - 1.0) * 0.5;\n    \n    \n    float variance = min(0.25, length(uPosition - cell));\n    vec2 angleUV = uPosition - cell;\n    float angle = atan(angleUV.y, angleUV.x);\n    float retina = circle(0.215, fuv, (vec2(cos(angle), sin(angle)) * variance+ 0.5) );\n\n    vec3 bg = vec3(bruit * 0.25);\n    vec3 red = rgb(225.0, 95.0, 60.0) + (bruit - 0.5) * 0.5 + 0.25 * variance;\n    float top = circle(0.6, fuv, vec2(0.5, 0.1));\n    float bot = circle(0.6, fuv, vec2(0.5, 0.9));\n    vec3 beige = vec3(0.96, 0.94, 0.91);\n    vec3 col =  mix(red, beige, retina);\n\n    fragColor = vec4(mix(col,bg, max(bot, top)),1.0);\n}","name":"Image","description":"","type":"image"}]}