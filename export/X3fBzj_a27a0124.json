{"ver":"0.1","info":{"id":"X3fBzj","date":"1728583768","viewed":25,"name":"Green-yellow","username":"listik12345","description":"green-yellow shader for practical work.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["green"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 10.0 - 5.0; \n    uv.x *= iResolution.x / iResolution.y;\n\n    float time = iTime * 0.5; \n\n    float freq = 10.0 + sin(time) * 5.0; \n    float amp = 0.5 + 0.25 * sin(time * 2.0); \n\n    float value = 0.0;\n    for (float i = 0.0; i < 10.0; i++) {\n        float angle = i * 0.62831853;\n        vec2 circleCenter = vec2(cos(angle + time), sin(angle + time));\n        float dist = length(uv - circleCenter); \n        value += amp * sin(freq * (dist - 0.3)); \n    }\n\n    float t = smoothstep(0.0, 0.5, value); \n\n    vec3 col = mix(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), t); \n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}