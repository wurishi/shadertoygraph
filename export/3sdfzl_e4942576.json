{"ver":"0.1","info":{"id":"3sdfzl","date":"1605790153","viewed":80,"name":"Never ending gradient scroll","username":"farious","description":"A simple dual tone gradient shader that scrolls with time.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient","scroll","perpetual","dualtone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec4 colorLow = vec4(1., 0.3, 0., 0.);\nvec4 colorHigh = vec4(1., 0.8, 0., 0.);\nfloat spacingLow = 1.76;\nfloat spacingHigh = 2.;\n\nfloat gradient(float dir, float time, float spacing) {\n    float g = fract((dir + time * 0.1) * 3.);\n\tfloat left = step(0.5, g);\n    g = left * ((g - 0.5) * spacing) + (1. - left) * ((1. - g) - 0.5) * spacing;\n    return g;\n}\n\nvec4 dualTone(vec4 low, vec4 high, float gradient, float power) {\n    return mix(low, high, pow(gradient, power));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float gradient = gradient(uv.x, iTime, spacingHigh);\n    vec4 tone = dualTone(colorLow, colorHigh, gradient, spacingLow);\n    \n    // Output to screen\n    fragColor = tone;\n}","name":"Image","description":"","type":"image"}]}