{"ver":"0.1","info":{"id":"wlS3Rz","date":"1558259195","viewed":58,"name":"WIP: ray sphere","username":"takahiroando","description":"no meaning","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_MARCH = 30;\nconst float EPSILON = 0.000001f;\n\nfloat sdsphere(vec3 pos, vec3 center, float radius) {\n    return length(pos - center) - radius;\n}\n\nfloat sdscene(vec3 pos) {\n    return sdsphere(pos, vec3(.0, .0, .0), 1.0);\n}\n\nfloat raymarch(vec3 pos, vec3 dir) {\n    float res = .0;\n    for (int i = 0; i < MAX_MARCH; ++i) {\n        float r = sdscene(pos);\n        if (r <= EPSILON) {\n            return res;\n        }\n        res += r;\n        pos += dir * r;\n    }\n    return -1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    vec3 cd = normalize(vec3(uv, -1.0));\n    vec3 cr = normalize(cross(cd, vec3(0.0, 1.0, 0.0)));\n    vec3 cu = cross(cr, cd);\n    vec3 cp = vec3(.0, .0, 10.0);\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float c = raymarch(cp, cd) >= 0.0f ? 1.0 : 0.0;\n\n    // Output to screen\n    fragColor = vec4(c, c, c, 1.0);\n}","name":"Image","description":"","type":"image"}]}