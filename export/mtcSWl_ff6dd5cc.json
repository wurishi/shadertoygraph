{"ver":"0.1","info":{"id":"mtcSWl","date":"1685854775","viewed":73,"name":"Wall72","username":"Redsun","description":"a turning wall","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["wall","purple","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float d){\n\treturn mix(vec3(0.2,0.7,0.9),vec3(1.,0.,1.),d);\n}\n\nvec2 rotate(vec2 p,float a){\n\tfloat c = cos(a);\n    float s = sin(a);\n    return p*mat2(c,s,-s,c);\n}\n\nfloat map(vec3 p){\n    for(int i = 0; i < 8; ++i){\n        float t = iTime * 0.2 + float(i) * 0.1;\n        p.xz = rotate(p.xz, t);\n        p.yz = abs(p.yz);\n        p.yz -= vec2(0.8 - float(i) * 0.1); // changed structure\n    }\n    return length(p) / 5.; // changed from dot product to length\n}\n\nvec4 rm (vec3 ro, vec3 rd){\n    float t = 0.;\n    vec3 col = vec3(0.);\n    float d;\n    for(float i =0.; i<64.; i++){\n\t\tvec3 p = ro + rd*t;\n        d = map(p)*.5;\n        if(d<0.02){\n            break;\n        }\n        if(d>100.){\n        \tbreak;\n        }\n        col += palette(length(p)*.1) / (400. * (d));\n        t += d;\n    }\n    return vec4(col,1./(d*100.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord-(iResolution.xy/2.))/iResolution.x;\n\tvec3 ro = vec3(0.,0.,-50.);\n    ro.xz = rotate(ro.xz,iTime);\n    vec3 cf = normalize(-ro);\n    vec3 cs = normalize(cross(cf,vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cf,cs));\n    \n    vec3 uuv = ro + cf * 3. + uv.x * cs + uv.y * cu;\n    \n    vec3 rd = normalize(uuv-ro);\n    \n    vec4 col = rm(ro,rd);\n    \n    fragColor = col;\n}\n\n/** SHADERDATA\n{\n\t\"title\": \"fractal pyramid - new variation\",\n\t\"description\": \"A new variation of the original fractal pyramid shader\",\n\t\"model\": \"car\"\n}\n*/\n","name":"Image","description":"","type":"image"}]}