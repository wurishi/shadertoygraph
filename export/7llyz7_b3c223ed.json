{"ver":"0.1","info":{"id":"7llyz7","date":"1647725050","viewed":163,"name":"BACKGROUND - Coloured Halftones","username":"HenriPK","description":"A cool abstract background made of balls growing and shrinking in a cool shape.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 vfract(vec2 v)\n{\n    return vec2(fract(v.x), fract(v.y));\n}\n\nvec2 vfloor(vec2 v)\n{\n    return vec2(floor(v.x), floor(v.y));\n}\n\n#define TAU 6.28\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float mtime = 0.5 + 0.5 * sin(0.5*iTime+1.0*(uv.x-uv.y));\n    \n    vec3 colz = mix(vec3(0.3, 1.0, 1.0), vec3(0.5, 1.0, 0.4), mtime);\n    vec3 cola = mix(vec3(0.2, 0.8, 1.0), vec3(0.3, 1.0, 0.7), mtime);\n    vec3 colb = mix(vec3(0.6, 0.5, 1.0), vec3(0.9, 0.5, 1.0), mtime);\n    vec3 colc = mix(vec3(0.9, 0.5, 1.0), vec3(1.0, 0.7, 0.7), mtime);\n   \n    vec3 col = cola;\n    \n    if (\n        distance(\n            // Create repeated circles that are round and fill the space\n            vfract(uv * vec2(iResolution.x/iResolution.y, 1)*10.),vec2(0.5)) <\n            // Make them grow and shrink depending on TIME and their positions\n            0.0+0.5*sin(TAU/2.0+2.0*iTime+3.0*(-uv.x+uv.y)))\n    {\n        col = colz;\n    }\n    \n    if (\n        distance(\n            // Create repeated circles that are round and fill the space\n            vfract(uv * vec2(iResolution.x/iResolution.y, 1)*10.),vec2(0.5)) <\n            // Make them grow and shrink depending on TIME and their positions\n            0.5+0.5*sin(2.0*iTime+3.0*(-uv.x+uv.y)))\n    {\n        col = colb;\n    }\n    \n    if (\n        distance(\n            // Create repeated circles that are round and fill the space\n            vfract(uv * vec2(iResolution.x/iResolution.y, 1)*10.),vec2(0.5)) <\n            // Make them grow and shrink depending on TIME and their positions\n            0.0+0.5*sin(2.0*iTime+3.0*(-uv.x+uv.y)))\n    {\n        col = colc;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}