{"ver":"0.1","info":{"id":"mtVfWm","date":"1702169945","viewed":38,"name":"1 more glass cylinder rep shader","username":"Elsio","description":"tentando...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["glass","refract","object","vidro","chanfro"],"hasliked":0,"parentid":"dl3fWS","parentname":"baleia"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define wmod(p, w) (mod(p + w/2., w) - w/2.)\n#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define discret(s, w) floor(s / w) * w\n#define t (iTime * .5)\n#define PI     3.1415\n#define cor    (cos(id * 4. + vec4(0, 23, 21, 0)) + (i/5.)) / 90.\n#define PI 3.1415\n#define v PI / 3.\n\nfloat id;\nfloat tambor(vec3 p){\n    float s,\n        nd = 7.,\n        slice = 2. * PI / nd,\n        rad = atan(p.x, p.y),\n        m = wmod(rad, slice);\n        id = discret(rad + t, slice);\n    \n    p.xy = length(p.xy) * cos(m + vec2(11, 0));\n    p.y = wmod(p.y, .5);\n    \n    return max(                      // cyl\n               length(p.xy) - .01, \n               abs(p.z) - 1.2); \n}\n\n\nfloat map(vec3 p) {\n    vec3 q;\n    float s = 1., d, l;\n\n    p.z -= 4.;\n    p.zy *= rot(sin(t * 3.) * .4);\n    p.xz *= rot(cos(t * 2.) * .3);\n    \n    s = tambor(p);\n\n    return abs(s * .7 - .07) - .004;\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    float j, d = 1., s, i; o *= 0.;\n          \n    vec3 R = iResolution, \n         rd = vec3((u.xy - R.xy * .5) / R.y, 1), p;\n\n    while(i++ < 34.) \n        s = map(p),\n        d += max(s, 3e-3),\n        p = d * rd,\n        \n        s < .003 \n            ? o += cor\n            : o;\n            \n}","name":"Image","description":"","type":"image"}]}