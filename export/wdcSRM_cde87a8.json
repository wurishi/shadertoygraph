{"ver":"0.1","info":{"id":"wdcSRM","date":"1571655490","viewed":290,"name":"coral automaton","username":"jt","description":"A simple cellular automaton creating coral-like structures by simulating falling pixels that stop when they touch other pixels.","likes":19,"published":1,"flags":32,"usePreview":0,"tags":["pixel","sandbox","falling","cellular","automaton","coral","aggregation","corals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(texelFetch(iChannel0, ivec2(fragCoord), 0));\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool cell(vec2 fragCoord, int j, int i)\n{\n    return texelFetch(iChannel0, ivec2(fragCoord) + ivec2(j, i), 0).b > 0.5;\n}\n\nbool coral(vec2 fragCoord)\n{\n    bool G = cell(fragCoord, 0, 1);\n    bool D = cell(fragCoord,-1, 0);\n    bool E = cell(fragCoord, 0, 0);\n    bool F = cell(fragCoord, 1, 0);\n    bool A = cell(fragCoord,-1,-1);\n    bool B = cell(fragCoord, 0,-1);\n    bool C = cell(fragCoord, 1,-1);\n    if(E && (A || B || C)) return true;\n    if(G && !(D || E || F)) return true;\n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(coral(fragCoord)) fragColor = vec4(1.0); else fragColor = vec4(0.0);          \n    if(length(iMouse.xy - fragCoord) < 2.0)\n        fragColor = vec4(1.0);\n    //if(length(vec2((0.5 + 0.5 * sin(iTime)) * iResolution.x, iResolution.y - 1.0) - fragCoord) < 2.0)\n    //    fragColor = vec4(1.0);\n    if(iResolution.y - 2.0 <= fragCoord.y)\n        fragColor = texture(iChannel1, fragCoord/iResolution.xy + vec2(float(iFrame)/60.0) * vec2(1000.123, 2000.345));\n    if(iTime < 0.1)\n        fragColor = texture(iChannel1, fragCoord/iResolution.xy);\n    if(ivec2(fragCoord).y == 0) fragColor = vec4(1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}