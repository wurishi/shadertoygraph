{"ver":"0.1","info":{"id":"dst3RB","date":"1677492578","viewed":177,"name":"Radial Checkerboard","username":"Borthralla","description":"Radial Checkerboard Zooming In and Rotating","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = (2.*fragCoord-iResolution.xy) / max(iResolution.x, iResolution.y);\n    \n    \n    float theta = atan(p.y, p.x);\n    float len = length(p);\n    int x_index = int(mod(theta * 12. / PI + iTime, 2.));\n    int y_index = int(mod(log(len) * 4. + iTime, 2.));\n    \n    // Time varying pixel color\n    //int x_index = int(mod(p.x * 10., 2.));\n    //int y_index = int(mod(p.y * 10., 2.));\n    bool black = x_index != y_index;\n\n    // Output to screen\n    if (black) {\n        fragColor = vec4(0., 0., 0., 1.);\n    } else{\n        fragColor = vec4(1., 1., 1., 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}