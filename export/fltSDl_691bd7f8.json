{"ver":"0.1","info":{"id":"fltSDl","date":"1654669121","viewed":93,"name":"Fork Confusion sleeplessm 225","username":"sleeplessmonk","description":"wip","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"WlByDW","parentname":"Confusion"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n// Convert the fragment coordinate to a position in the scene\nvec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y * 0.02;\n\n// Apply a scaling factor to the position to squash it\nfloat dp = dot(uv, uv);\nuv /= dp;\n\n// Apply a sine function to the x coordinate to give it some curvature\nuv.x = sin(uv.x - 1021.5);\n\n// Scale the position down and get the angle in radians\nuv *= 0.35;\nfloat a = atan(uv.y, uv.x);\n\n// Calculate the time and use it to animate the scene\nfloat t = iTime * 0.01;\nfloat r2 = max(5.0, abs(sin(t * 0.5)) * 0.05 - length(uv));\nt += r2 * r2 * cos(r2 + t) + a * 1.0;\n\n// Rotate the position based on the time and calculate the final color\nuv *= mat2(cos(t), sin(t), cos(t), cos(t));\nvec3 col = 0.1 + cos(uv.y * (cos(t) * 1.5 + 1.05) + t) * sin(iTime + uv.yxy);\n\n// Output the final color\nfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}