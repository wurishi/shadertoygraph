{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"cubemap","id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"/*2014 Passion*/\nvec2 resolution;\nfloat time;\n \nfloat pi = 3.14159265359;\n\nfloat radian;\n\nmat3 ry;\nmat3 ry2;\n \n    \nmat3 rz;\n     \nmat3 rx;\n\n\nfloat sdTorus( vec3 p )\n{\n  vec2 t = vec2(1.9,.6);  \n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat distanceFunction(vec3 p)\n{\n   p.y-=sin(time)*.2; \n   p.z-=sin(time)*.3;\n   p.x-=sin(time)*.4; \n\n   p*=ry*rz*rx;\n    \n  float torus = sdTorus(p);  \n  float disp = sin(p.x*8.-sin(time))*sin(p.y*8.)*sin(p.z*8.);\n    \n  float sphere = length(p) - 1.0;\n  disp*=.1;  \n  return torus+disp;\n}\n \nvec3 getNormal(vec3 p)\n{\n  const float d = 0.0001;\n  return\n    normalize\n    (\n      vec3\n      (\n        distanceFunction(p+vec3(d,0.0,0.0))-distanceFunction(p+vec3(-d,0.0,0.0)),\n        distanceFunction(p+vec3(0.0,d,0.0))-distanceFunction(p+vec3(0.0,-d,0.0)),\n        distanceFunction(p+vec3(0.0,0.0,d))-distanceFunction(p+vec3(0.0,0.0,-d))\n      )\n    );\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    resolution = iResolution.xy;\n    time = iTime*1.6;\n    radian = (time*pi)/180.0; \n\n    ry = mat3(cos(radian*12.), 0.0,-sin(radian*12.),\n                   0.0, 1.0, 0.0, \n                   sin(radian*12.), 0.0, cos(radian*12.)  );\n    ry2 = mat3(cos(-radian*12.), 0.0,-sin(-radian*12.),\n                   0.0, 1.0, 0.0, \n                   sin(-radian*12.), 0.0, cos(-radian*12.)  );\n\n\n    rz = mat3(cos(radian*15.),-sin(radian*15.), 0.0,\n                   sin(radian*15.), cos(radian*15.), 0.0,\n                   0.0, 0.0, 1.0 );\n\n     rx = mat3(1.0, 0.0, 0.0,\n                   0.0, cos(radian*33.), sin(radian*33.), \n                   0.0,-sin(radian*33.), cos(radian*33.) );\n\n  vec2 pos = (fragCoord.xy*2.0 -resolution) / resolution.y;\n \n  vec3 camPos = vec3(0.0, 0.0, 4.5);\n  vec3 camDir = vec3(0.0, 0.0, -1.0);\n  vec3 camUp = vec3(0.0, 1.0, 0.0);\n  vec3 camSide = cross(camDir, camUp);\n  float focus = 1.8;\n \n  vec3 rayDir = normalize(camSide*pos.x + camUp*pos.y + camDir*focus);\n \n  float t = 0.0, d;\n  vec3 posOnRay = camPos;\n \n  for(int i=0; i<32; ++i)\n  {\n    d = distanceFunction(posOnRay);\n    t += d;\n    posOnRay = camPos + t*rayDir;\n  }\n  \n  vec3 incident = normalize(posOnRay - camPos);  \n  vec4 cubeM = texture(iChannel0,posOnRay*ry);  \n  vec3 normal = getNormal(posOnRay);\n  vec3 reflected = normalize(reflect(incident,normal));  \n  float diffuse = clamp(dot(normal,vec3(.2,.1,.7)),0.,1.);\n  if(abs(d) < 0.01)\n  {\n    fragColor = texture(iChannel0,reflected*ry2)*1.8*diffuse;\n  }else\n  {\n    fragColor = vec4(cubeM);\n  }\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XllGRM","date":"1420027903","viewed":354,"name":"ShinyTreat","username":"Passion","description":"enjoy","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","reflect","texturecube"],"hasliked":0,"parentid":"","parentname":""}}