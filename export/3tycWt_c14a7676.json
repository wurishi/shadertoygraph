{"ver":"0.1","info":{"id":"3tycWt","date":"1611955409","viewed":72,"name":"Vorono√Ø 22222222222","username":"regis","description":"Voronoi","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N22(vec2 p){\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34, 345.65));\n    a+=dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n   \n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    float m = 0.;//N22(uv).x;\n    float t = iTime;\n    \n    float minDist = 100.;\n    float cellIndex = 0.;\n    \n\n        uv *= 3.;\n        vec2 gv = fract(uv)-.5;\n        vec2 id = floor(uv);\n        vec2 cid = vec2(0);\n        vec2 mo = vec2(0.0);\n        vec2 mp = vec2(0.0);\n        for (float y=-1.; y <= 1.;y++){\n            for (float x=-1.; x <= 1.;x++){\n                vec2 offset = vec2(x, y);\n                vec2 n = N22(id+offset);\n                vec2 p = offset+sin(n*t)*.5;\n                p -= gv;\n                float d = length(p);\n                if(d < minDist){\n                    minDist = d;\n                    cid = id+offset;\n                    mo = offset;\n                    mp = p;\n                }\n            }\n        }\n     \n        for (float y=-2.; y <= 2.;y++){\n            for (float x=-2.; x <= 2.;x++){\n                vec2 offset = vec2(x, y);\n                vec2 n = N22(id+offset);\n                vec2 p = offset+sin(n*t)*.5;\n                p -= gv;\n                float d = length(mp-p);\n                if(d > 0.01){\n                    minDist = min(minDist, dot((p+mp), normalize(p-mp)) );\n                   \n                }\n            }\n        }\n        \n          if (minDist<.07) {minDist = smoothstep(0.7, 1., 1.-minDist)*.2; }\n            vec3 col = minDist*(exp(minDist*2.0))*vec3(1.0, 0.5, 0.0);\n            \n           // col = mix(col, vec3(1.0, 0.0, 0.0), smoothstep(0.07, 0.01, minDist));\n           \n        \n    \n       \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}