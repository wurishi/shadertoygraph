{"ver":"0.1","info":{"id":"csKSzm","date":"1680884617","viewed":42,"name":"Breathing Continental Plates","username":"izutionix","description":"works with mouse\nbase: [url=https://www.youtube.com/watch?v=xh61Ol2X4GA]\nCoding the Game of Life by The Art of Code[/url]","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["interactive","automata"],"hasliked":0,"parentid":"cdKXRm","parentname":"Game of Life upward growth"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float value = texture(iChannel0, uv).r;\n    vec3 col = vec3(value);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define brushSize 50.0\n\nint GetNeighbors(ivec2 P, ivec2 bias) {\n    int num = 0;\n    \n    for (int y=-1; y<=1; y+=2) {\n        for (int x=-1; x<=1; x+=2) {\n            if (x==0 && y==0) continue; // ignore current pixel\n            num += texelFetch(iChannel0, P + ivec2(x, y) + bias, 0).r > 0.5 ? 1 : 0; // increment if this neighbor is alive\n        }\n    }\n    return num;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 UV = ivec2(fragCoord);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = vec4(0);\n    \n    if(iFrame<10)\n        col = texture(iChannel1, uv);//vec2(UV)-iResolution.xy/2.);\n    else {\n        bool alive = texelFetch(iChannel0, UV, 0).r > 0.5; // is current pixel alive?\n        int num = GetNeighbors(UV, ivec2(0,0)); // get the number of alive neighbors\n        \n        int next = 0;\n        \n        bool condition = !alive && num>=1;\n        int R = 60;\n        if (float(iFrame%R)>=float(R)*0.6)\n            condition = !alive && num>=3;\n        \n        if (condition)\n            next = 1;\n        \n        // draw a circle if the mouse is clicked\n        if(distance(iMouse.xy, fragCoord) < brushSize && iMouse.z > .0)\n        {\n        \tnext = 1;\n        }\n        \n        /*if (alive && (num==2 || num==3))\n            next = 1;\n        else if (!alive && num==3)\n            next = 1;\n        else\n            next = 0;*/\n        \n        col = vec4(next);\n    }\n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}