{"ver":"0.1","info":{"id":"3lB3RW","date":"1558598563","viewed":313,"name":"Kaleidoscope of rotating squares","username":"jblanper","description":"Kaleidoscope of rotating squares with ripple in the background.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","pattern","squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 p, float a) {\n  return p * mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n\n  vec2 gv = fract(abs(uv) * 2.) - .5;\n  vec2 id = floor(abs(uv) * 2.);\n  float t = ((mod(id.x, 2.) == 0.) ? -1. : 1.) * iTime * .1;\n  gv = rotate(gv, t);\n\n  vec3 color = vec3(0.);\n\n  float m = smoothstep(.34, .32, max(abs(gv.x), abs(gv.y))) +\n    (smoothstep(.5, 0., length(gv))*1.1);\n\n  float squares = cos(max(abs(gv.x), abs(gv.y)) * (80. * (sin(iTime * .2) * .4 + 1.)));\n  float diamonds = cos(max(abs(gv.x+gv.y), abs(gv.y-gv.x)) * 50. - iTime);\n\n  color += smoothstep(.1, .9, diamonds)*vec3(.35);\n  color += mix(vec3(.2), vec3(.5), cos(length(uv)*150.*cos(gv.y) - iTime * 2.)) * .01;\n\n  color = mix(color, vec3(.3, .4, .5), squares * m) * 1.2;\n  color *= mix(color, vec3(.8, .4, .2), diamonds / m) * 2.;\n\n  color += smoothstep(.1, .2, squares) * vec3(.3, .2, .8);\n  color -= mix(vec3(0.), vec3(.8, .2, .3), smoothstep(.1, .12, diamonds * m)) * .5;\n\n  color *= 1.-length(uv)*.6;\n\n  fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}