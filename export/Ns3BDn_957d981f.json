{"ver":"0.1","info":{"id":"Ns3BDn","date":"1656308889","viewed":389,"name":"Led lights","username":"Peace","description":"Grid of old school Leds for personal project","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["led","lights","bulb","lightbulb","ledlights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 uv;\nvec3 col = vec3(1);\nvec3 color;\nint ind = 0;\n\nvoid rect(float x, float y, float w, float h)\n{\n    if(uv.x >= x && uv.x <= x + w && uv.y >= y && uv.y <= y + h)\n        color = col;\n}\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat noise(float p){\n\tfloat fl = floor(p);\n  float fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nvoid circle(float x, float y, float size, float smoothing)\n{\n    color = mix(color, col, pow(1.0 - smoothstep(size * (1.0 - smoothing), size * (1.0 + smoothing), distance(uv, vec2(x, y))), 2.0));\n}\n\nvoid bulb(float x, float y, float s, float brightness)\n{\n    brightness *= brightness * brightness;\n    \n    col = color * (0.85 + brightness * 0.2);\n    circle(x, y, s * 2.0, 1.0);\n    \n    col = color * 0.9;\n    circle(x, y, s * 1.25, 0.1);\n    \n    vec3 off = mix(color, vec3(0.6 + noise(uv * 32.0) * 0.3), 0.8);\n    vec3 on = vec3(1.4, 1.3, 1.15);\n    col = mix(off, on, brightness);\n    circle(x, y, s + s * brightness * 0.2, brightness * 1.0 + 0.03);\n}\n\nvoid grid()\n{\n    float s = 0.04;\n    float a = iResolution.x / iResolution.y;\n    for(float x = -a + s * a; x <= a + s * a; x += s * 4.0)\n    {\n        for(float y = -1.0 + s * 2.0; y <= 1.0 + s; y += s * 5.0)\n        {\n            float brightness = noise((x * (a + s * a) + y) * 617.2 + iTime);\n            bulb(x, y, s, brightness);\n        }\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y ;\n\n    color = vec3(0.84, 0.81, 0.80);\n    color += (noise(uv * 16.0) * 0.5 + noise(uv * 32.0) * 0.3 + noise(uv * 64.0) * 0.2) * 0.12 - 0.06;\n    \n    grid();\n\n    color = pow(color, vec3(1.5));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}