{"ver":"0.1","info":{"id":"M323D1","date":"1708440080","viewed":44,"name":"felixandreas/raymarching","username":"felixandreas","description":"foo bar baz","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on: https://www.youtube.com/watch?v=khblXafu7iA\n\nvec3 rot3d(vec3 p, vec3 axis, float angle) {\n    return mix(dot(axis, p) * axis, p, cos(angle)) + cross(axis, p) * sin(angle);\n}\n\nmat2 rot2d(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\n\nfloat sdSphere(vec3 p, float s) {\n    return length(p) - s;\n}\n\nfloat sdBox(vec3 p, vec3 b) {\n    vec3 q = abs(p) - b;\n    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\n}\n\nfloat smin(float a, float b, float k) {\n    float h = max(k - abs(a - b), 0.0) / k;\n    return min(a, b) - h * h * h * k * (1.0 / 6.0);\n}\n\nfloat map(vec3 p) {    \n    vec3 sphere = vec3(sin(iTime) * 3.0, 0.0, 0.0);\n    vec3 box = vec3(0.1);\n    \n    vec3 q = p;\n    // q.xy *= rot2d(iTime);\n    \n    q = fract(q) - 0.5;\n    \n    float sphereDis = sdSphere(p - sphere, 1.0);\n    float boxDis = sdBox(q * 2.0, box) / 2.0;\n    \n    float ground = p.y + .75;\n    \n    return smin(ground, smin(boxDis, sphereDis, 3.0), 0.2);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 mouse = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n\n    vec3 ray_origin = vec3(0, 0, -3);\n    vec3 ray_direction = normalize(vec3(uv * 1.4, 1));\n    \n    ray_origin.yz *= rot2d(-0.5 * mouse.y + 0.3);\n    ray_direction.yz *= rot2d(-0.5 * mouse.y + 0.3);\n    \n    ray_origin.xz *= rot2d(-mouse.x);\n    ray_direction.xz *= rot2d(-mouse.x);\n\n    \n    vec3 color = vec3(0);\n    \n    float t = 0.0;\n    \n    for (int i = 0; i < 80; i++) {\n        vec3 p = ray_origin + ray_direction * t;\n\n        float dis = map(p);\n        \n        if (dis < 0.001 || t > 100.) {\n            break;\n        }\n        \n        t += dis;\n    }\n    \n    color = vec3(t * 0.2);\n    \n    fragColor = vec4(color, 1);\n}\n\n","name":"Image","description":"","type":"image"}]}