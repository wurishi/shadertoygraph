{"ver":"0.1","info":{"id":"7lBSRh","date":"1627065711","viewed":53,"name":"Mandelbrot Zoom #2","username":"kowalski_analytics","description":"Mandelbrot Zoom","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITERATIONS 1000\n\nvec2 zoomC = vec2(-0.745428, 0.113009);\nfloat zoomrate = 1.2;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    float zoom = exp(-zoomrate * iTime);\n    \n    fragCoord -= iResolution.xy/2.;\n    fragCoord /= iResolution.y;\n    fragCoord *= 2.;\n    \n    vec2 c = fragCoord;\n    c *= zoom;\n    c += zoomC * (1. - zoom);\n    \n    \n    vec2 z = c;\n    \n    int i = 0;\n    while (i < ITERATIONS) {\n        z = vec2(z.x*z.x - z.y*z.y + c.x, 2. * z.x * z.y + c.y);\n        i++;\n        if (length(z) > 2.) break;\n    }\n    \n    float t = float(i)/float(ITERATIONS);\n    \n    if (i == ITERATIONS) {\n        fragColor = vec4(0., 0., 0., 0.);\n    }\n    else {\n        fragColor = \n      vec4(0., 0., 2., 0.) / (1.0 + pow(2.0, pow(2.0 - 100.0* t, 2.0)))\n    + vec4(10., 20., 10., 1.) * (t * pow(1. - t, 9.0)) \n    + vec4(20., 0., 0., 1.) * (t * t * (1. - t)) \n    + vec4(1., 1., 1., 1.)  * t;\n    }\n}","name":"Image","description":"","type":"image"}]}