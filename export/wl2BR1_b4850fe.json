{"ver":"0.1","info":{"id":"wl2BR1","date":"1598352792","viewed":182,"name":"audio visualizer with added wave","username":"TrevallionJ","description":"An audio visualiser using both the spectrum analyzer and wave textures.\nIf you recognise some of the code its because the average function is the main function for audio visualisers (at least for me) so feel free to copy it and reuse it.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["music","audio","visualiser"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\tGets average of frequency spectrum range\nfloat average(float start, float end)\n{\n    float total = 0.0;\n    for(float i = start; i < end; i++){\n        total += texture(iChannel0, vec2(i / 512.0, 0.0))[0];\n    }\n    return total / (end - start);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.y;\n    uv.x = uv.x - ((iResolution.x / 2.0) / iResolution.y);\n    uv.y = uv.y - 0.5;\n    \n    float bass = (average(0.0, 16.0) - 0.5) * 2.0;\n    fragColor = vec4(bass * (2.0 - length(uv) * 1.5), 0.0, bass * (length(uv) * 2.0), 1.0);\n    \n    uv = fragCoord / iResolution.xy;\n    if (distance(uv, vec2(uv.x, texture(iChannel0, vec2(uv.x, 1.0)))) < bass*0.2){\n        fragColor = vec4(0.0, (average(0.0, 512.0) - 0.5) * 5.0, 0.0, 1.0);\n    }\n}\n\n//\tIf your interested in making audio visualizers I recomend looking at this https://www.shadertoy.com/view/tljczR\n//\tas it shows you what the audio textures actualy look like and i also recomend taking the average function (which\n//\taverages the volumes of a range of spectrums which as shown with my bass value can be used as an input for drums\n//\t, feel free to link bass directly to fragColor to see it).\n//\tFinally while this code may look heavily thought out I honestly have no clue what half ive written does since\n//\tI tried things that might work and if they looked good I kept them so remember that its alot of trial and error.","name":"Image","description":"","type":"image"}]}