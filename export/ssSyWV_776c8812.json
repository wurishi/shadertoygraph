{"ver":"0.1","info":{"id":"ssSyWV","date":"1644096452","viewed":101,"name":"fork FM Sin waves ","username":"jorge2017a2","description":"fork FM Sin waves ","likes":3,"published":1,"flags":40,"usePreview":0,"tags":["forkfmsinwaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///https://www.shadertoy.com/view/sltXDN\n\n#define RULE 534\n\nint next_state(int sum, int rule){\n\n    int i = 0;\n    \n    while(i < sum){\n        int mr=rule % 3;\n        rule -= mr;\n        rule /= 3+mr*4/3;\n        \n        \n        float op=mod(float(rule),3.0);\n        \n        if( op==2.0)\n           rule-=1;\n        else if(op==3.0)\n          rule+=1;\n        else\n        rule-=3;\n        i++;\n    }\n    \n    return rule % 3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    if(fragCoord.y < 1.0){\n        if(int(fragCoord.x) == int(iResolution.x/2.0)){\n            fragColor = vec4(1.0);\n        } else {\n            fragColor = vec4(0.0);\n        }\n    } else if(iTime > 0.1){\n        ivec2 p1 = ivec2(fragCoord.xy - vec2(1.0,1.0));\n        ivec2 p2 = ivec2(fragCoord.xy - vec2(0.0,1.0));\n        //ivec2 p3 = ivec2(fragCoord.xy - vec2(-1.0,1.0));\n        ivec2 p3 = ivec2(fragCoord.xy - vec2(-1.0,1.0));\n        float sum = texelFetch(iChannel0,p1,0).r + texelFetch(iChannel0,p2,0).r + texelFetch(iChannel0,p3,0).r;\n    \n        float col = float(next_state(int(sum),RULE));\n\n        fragColor = vec4(col);\n    \n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//https://www.shadertoy.com/view/sltXDN\n\n#define RULE 534\n\nint next_state(int sum, int rule){\n\n    int i = 0;\n    \n    while(i < sum){\n        int mr=rule % 3;\n        rule -= mr;\n        rule /= 3+mr*4/3;\n        \n        \n        float op=mod(float(rule),3.0);\n        \n        if( op==2.0)\n           rule-=1;\n        else if(op==3.0)\n          rule+=1;\n        else\n        rule-=3;\n        i++;\n    }\n    \n    return rule % 3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    if(fragCoord.y < 1.0){\n        if(int(fragCoord.x) == int(iResolution.x/2.0)){\n            fragColor = vec4(1.0);\n        } else {\n            fragColor = vec4(0.0);\n        }\n    } else if(iTime > 0.1){\n        ivec2 p1 = ivec2(fragCoord.xy - vec2(1.0,1.0));\n        ivec2 p2 = ivec2(fragCoord.xy - vec2(0.0,1.0));\n        ivec2 p3 = ivec2(fragCoord.xy - vec2(-1.0,1.0));\n        float sum = texelFetch(iChannel0,p1,0).r + texelFetch(iChannel0,p2,0).r + texelFetch(iChannel0,p3,0).r;\n    \n        float col = float(next_state(int(sum),RULE));\n\n        fragColor = vec4(col);\n    \n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//,modificado por jorge2017a2\n//https://www.shadertoy.com/view/NdSyDy\n\n#define PI 3.1415926536\n\nfloat SinMod(float x, float b, float c, float d)\n{  float p = (2. * PI) / b; return sin(p * (x + c)) + d; }\n\n\nfloat Amp(float a)\n{ return a * 0.1;}\n\nfloat SinWave(float f, float a, float t)\n{ return Amp(a) * sin(2. * PI * f * t); }\n\nvec2 mainSound(in int samp, float t)\n{   float f1,cf1,p1,s1;\n    float t0=t;\n    float f2,cf2,p2,s2,s3;\n    \n     f1 = 40.;\n     cf1 = 1. / f1;\n    \n     p1 = SinMod(t, cf1, 0., 1.);\n     s1 = SinWave(p1, 0.3, t);\n   \n    if (t>5.0 && t<30.0)\n    {\n     t=t-5.0;\n     f2 = 60.;\n     cf2 = 1. / f2;\n    \n     p2 = SinMod(t, cf2, 0., 1.);\n     s2 = SinWave(p2, 0.3, t);\n    }    \n    \n     if (t>10.0 && t<80.0)\n    {\n     t=mod(t,10.0);\n     f2 = 60.;\n     cf2 = 1.0/(f2+5.0*sin(t));\n    \n     p2 = SinMod(t, cf2, 0., 1.);\n     s2+= SinWave(p2, 0.3, t);\n    }    \n    \n    t=mod(t0,65.0);\n     if (t>0.0 && t<60.0)\n    {\n     t=t0;\n     t=t*2.0; \n     t=mod(t+abs(3.0*sin(t0)),3.0);\n     f2 = 60.;\n     cf2 = 1.0/(f2+5.0*sin(t));\n    \n     p2 = SinMod(t, cf2, 0., 1.);\n     s2+= SinWave(p2, 0.3, t);\n    } \n    \n    \n     if (t>8.0 && t<60.0)\n    {\n     t=mod(t0,20.0);\n     f2 = 160.;\n     cf2 = 1.0/(f2);\n    \n     p2 = SinMod(t, cf2, 0., 1.);\n     float f1= SinWave(p2, 0.3, t);\n     s3= SinWave(f1, 0.3, t);\n    }    \n\n    return vec2(s1+s2+s3);\n}","name":"Sound","description":"","type":"sound"}]}