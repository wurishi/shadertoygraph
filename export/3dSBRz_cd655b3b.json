{"ver":"0.1","info":{"id":"3dSBRz","date":"1621956500","viewed":52,"name":"DumbColorCube","username":"webbgamers","description":"dumb cube thing that i made to start learning graphical programming","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["dumb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p) {\n    return length(cross(p-ro, rd)) / length(rd);\n}\n\nvec3 DrawPoint(vec3 ro, vec3 rd, vec3 p, vec3 col) {\n    float d = DistLine(ro, rd, p);\n    d = smoothstep(.08, .07, d);\n    return d * col;\n}    \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float t = iTime;\n    \n    vec3 ro = vec3(3.*sin(t)+.5, 2., -3.*cos(t)+.5);\n    \n    vec3 lookat = vec3(.5);\n    \n    float zoom = 1.;\n    vec3 f = normalize(lookat - ro);\n    vec3 r = normalize(cross(vec3(0, 1, 0), f));\n    vec3 u = cross(f, r);\n    \n    vec3 c = ro + f * zoom;\n    vec3 i = c + uv.x*r + uv.y*u;\n    vec3 rd = i - ro;\n    \n    vec3 d = vec3(.0);\n    d += DrawPoint(ro, rd, vec3(0., 0., 0.), vec3(0.2, 0.2, 0.2));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.), vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 0.), vec3(0., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 1.), vec3(0., 1., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 0.), vec3(1., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 1.), vec3(1., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 0.), vec3(1., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 1.), vec3(1., 1., 1.));\n    \n    fragColor = vec4(d, 0);\n}","name":"Image","description":"","type":"image"}]}