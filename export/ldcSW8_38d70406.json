{"ver":"0.1","info":{"id":"ldcSW8","date":"1458957175","viewed":963,"name":"inception zoom","username":"FabriceNeyret2","description":"Have you ever inspected what was it texture pixels ? :-)\n\n( mouse move )","likes":17,"published":3,"flags":0,"usePreview":0,"tags":["zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S 1.7  // speed of zoom\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    float t = iTime, \n          Z = iChannelResolution[0].x, // ./4. to cycle sooner: smaller pseudo-resolution\n          T =  log(Z)/log(S);\n  // t = mod(t,T); // cycling cause a slight normalization glitch at T (i.e. 11')\n                   // since I didn't faded the normalization with zoom.\n                   // But not cycling reach precision issues at 2'36 ( ~ 14T)\n    t = pow(S,t);\n\n    vec2 R = iResolution.xy;\n    U = ( U/R-.5 ) / t;\n    if (length(iMouse.xy)>0.) U -= (iMouse.xy/R -.5)/t;\n    \n    vec4 M = O = vec4(1);\n    for (int i=0; i<15; i++) {\n\t    O *= texture(iChannel0,U+.5)/ M; M = texture(iChannel0,U+.5,10.); // normalization\n        U *= Z;\n    }\n}","name":"Image","description":"","type":"image"}]}