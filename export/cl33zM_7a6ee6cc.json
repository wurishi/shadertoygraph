{"ver":"0.1","info":{"id":"cl33zM","date":"1682072215","viewed":399,"name":"Neon weave","username":"vegardno","description":"asdf","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/wlsSRB\nvec3 hsv2rgb2(vec3 c, float k) {\n    vec4 K = vec4(3. / 3., 2. / 3., 1. / 3., 3.);\n    vec3 p = smoothstep(0. + k, 1. - k,\n        .5 + .5 * cos((c.xxx + K.xyz) * radians(360.)));\n    return c.z * mix(K.xxx, p, c.y);\n}\n\nvec3 tonemap(vec3 v)\n{\n    return mix(v, vec3(1.), smoothstep(1., 4., dot(v, vec3(1.))));\n}\n\nfloat f1(float x, float offset, float freq)\n{\n    return .4 * sin(radians(30.) * x + offset) + .1 * sin(freq * x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = iResolution.y;\n    vec2 uv = (2. * fragCoord - iResolution.xy) / scale;\n\n    vec3 col = vec3(0);\n\n    float offsets[3] = float[3](\n        0. * radians(360.) / 3.,\n        1. * radians(360.) / 3.,\n        2. * radians(360.) / 3.\n    );\n    \n    float freqs[3] = float[3](\n        radians(160.),\n        radians(213.),\n        radians(186.)\n    );\n\n    float colorfreqs[3] = float[3](\n        .317,\n        .210,\n        .401\n    );\n\n    for (int i = 0; i < 3; ++i) {\n        float x = uv.x + 4. * iTime;\n        float y = f1(x, offsets[i], freqs[i]);\n        float uv_x = min(uv.x, 1. + .4 * sin(radians(210.) * iTime + radians(360.) * float(i) / 3.));\n        \n        float r = uv.x / 40.;\n        //float r = exp(uv.x + 1.) / 100. - .05;\n        float d1 = length(vec2(uv_x, y) - uv) - r;\n\n        col += 1. / pow(max(1., d1 * scale), .8 + .1 * sin(radians(245.) * iTime + radians(360.) * float(i) / 3.))\n            * (vec3(1.) + hsv2rgb2(vec3(colorfreqs[i] * x, 1., 1.), .07));\n    }\n\n    fragColor = vec4(tonemap(col), 1.);\n}","name":"Image","description":"","type":"image"}]}