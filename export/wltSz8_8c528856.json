{"ver":"0.1","info":{"id":"wltSz8","date":"1595439648","viewed":97,"name":"Raindow Starfield Tutorial","username":"deliaev","description":"made while following this tutorial: https://www.youtube.com/watch?v=rvDo9LvfoVE","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_LAYERS 20.\n\nmat2 Rot(float a) {\n \tfloat s = sin(a), c = cos(a);\n    return mat2( c, -s, s, c);\n}\n\nfloat Star(vec2 uv, float flare) {\n \tfloat d = length(uv);\n    float m = .04/d; //smoothstep(.2, 0.5, d);\n    \n    float rays = max(0., 1. - abs(uv.x*uv.y*0.));\n    m += rays*flare;\n    uv *= Rot(3.1415/4.);\n    rays = max(0., 1. - abs(uv.x*uv.y*1000.));\n    m += rays*.3*flare;\n    \n    m*=smoothstep(1., .2, d);\n    return m;\n}\n\nfloat Hash21(vec2 p) {\n \tp = fract(p*vec2(1223.34, 16312.21));  \n    p += dot(p, p+45.85);\n    return fract(p.x*p.y);\n}\n\nvec3 StarLayer(vec2 uv) {\n \tvec3 col = vec3(0);\n    \n    vec2 gv = fract(uv) -.5;\n    vec2 id = floor(uv);\n    \n    for (int y=-1;y<=1;y++) {\n        for (int x=-1;x<=1;x++) {\n            vec2 offs = vec2(x, y);\n            \n            float n = Hash21(id+offs);\n            float size = fract(n*345.29);\n    \t\tfloat star = Star(gv-offs-vec2(n,fract(n*34.))+.5, smoothstep(.6,.9,size));\n            \n            vec3 color = sin(vec3(.2,.3,.9)*fract(n*678.3)*19.37)*.5;\n            \n           \tstar *= sin(iTime*.03*n*7.);\n            col += star*size*color;\n        }\n    }\n    \n    // col.rg = gv;\n    \n    // if (gv.x > .48 || gv.y>.48) col.r=1.;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float t = iTime*.1;\n    vec3 col = vec3(0);\n    vec2 M = (iMouse.xy-iResolution.xy*.5)/iResolution.y;\n    uv *= (sin(iTime)+1.0)*.4 + .1;\n    // uv += M*4.;\n    uv *= Rot(t*.8);\n        \n    \n    for (float i=0.; i<1.; i+=1./NUM_LAYERS) {\n        float depth = fract(i+t);\n        float scale = mix(20., .5, depth);\n        float fade = depth*smoothstep(1.,.9,depth);\n    \tcol += StarLayer(uv*scale+i*453.2-M)*fade;\n    }\n    col *= -1.;\n    col += vec3(1.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}