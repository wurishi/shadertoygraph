{"ver":"0.1","info":{"id":"sdBfWG","date":"1647008735","viewed":148,"name":"Red Glowing Blob","username":"RedShip","description":"Glowing blob","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["circle","blob","bloom","glow","liquid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int n = 8;\nvec2 points[8];\n\nvec3 littleCircle(vec2 uv, vec2 pos, float radius, float bright){\n    vec2 uvpos = vec2(uv.x-pos.x, uv.y-pos.y);\n    return vec3(bright/distance(normalize( uvpos )*radius, uvpos));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.);\n    \n    for(int i=0; i<n;i++){\n        \n        float fi = float(i+1);\n        float x = cos(iTime+fi*0.3)*0.5;\n        float y = sin(iTime+fi*0.5)*0.2;\n        points[i] = vec2(x,y);\n    }\n    \n    for(int i=0; i<n;i++){\n        col+= 0.05/distance(uv, points[i]);\n    }\n    \n    \n    col = smoothstep(0.889, 0.9, col);\n    col *= vec3(0.682, 0.125, 0.);\n    \n    float sma = 10.;\n    float sme = 0.;\n\n    for(int i=0;i <n;i++){\n        vec3 color = vec3(0.733, 0.243, 0.);\n \n        col += littleCircle(uv, points[i], 0.1, 0.015)*color;\n        \n        sme += exp(-sma * distance(uv, points[i]));\n    }\n    vec3 color1 = vec3(0.733, 0.243, 0.);\n\n    float sm = -log(sme)/sma;\n    float rg = 2. - 100. * abs(sm - 0.05);\n    col.rg += (rg)*color1.rg;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}