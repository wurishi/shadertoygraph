{"ver":"0.1","info":{"id":"ctdczf","date":"1716215990","viewed":52,"name":"wavyfire","username":"aconn69","description":"it draws  the fire wavy","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Get base image\n    vec4 image = texture(iChannel0, uv);\n    vec4 color = image; //output color\n    float intensity = 5.0; //wave intensity\n    float speed = 3.0; //wave speed\n    float height = 16.0; //wave height\n    color += texture(iChannel0, vec2(uv.x+(1.0/iResolution.x)*sin(iTime*speed + fragCoord.y/height)*intensity, uv.y+(1.0/iResolution.y))); //gets the color of the pixel next to it, offset by its y position and following a sin wave to get a wavy effect\n    color.rgb /= 2.0; //makes  the output not so bright \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}