{"ver":"0.1","info":{"id":"XlSXRG","date":"1447444950","viewed":456,"name":"Tyndall effect","username":"gongenhao","description":"Tyndall effect","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["opticaleffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// A simplified version of: https://www.shadertoy.com/view/4sfGRn\n#define FLIP_IMAGE\n\nconst float amount = 80.0;\nconst vec2 start_pos = vec2(-0.5, 2.0); // -1.0 to 1.0 for x, y\n\nvec3 deform( in vec2 p )\n{\n    vec2 uv;\n    uv.x = sin( 0.0 + 1.0 ) + p.x;\n    uv.y = sin( 0.0 + 1.0 ) + p.y;\n    #ifdef FLIP_IMAGE\n    \tuv *= vec2(1., -1.);\n    #endif\n    return texture( iChannel0, uv * 0.5 ).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 position = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    vec2 current_step = position;\n    \n    vec2 direction = ( start_pos - position ) / amount; \n    \n    vec3 total = vec3( 0.0 );\n    for( int i = 0; i < int( amount ); i++ )\n    {\n        vec3 result = deform( current_step );\n        result = smoothstep( 0.0, 1.0, result );\n        total += result;\n        current_step += direction;\n    }\n    \n    total /= amount;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    #ifdef FLIP_IMAGE\n    \tuv *= vec2(1., -1.);\n    #endif    \n    vec3 original=texture( iChannel0, uv).xyz;\n    vec3 over=vec3(pow(original.r,0.5),pow(original.g,0.5),pow(original.b,0.5));\n    total=mix(original,over,total*2.);\n\tfragColor = vec4( total, 1.0 );\n}","name":"","description":"","type":"image"}]}