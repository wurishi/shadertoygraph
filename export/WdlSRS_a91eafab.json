{"ver":"0.1","info":{"id":"WdlSRS","date":"1551543735","viewed":59,"name":"midterm2","username":"jojo169","description":"2 ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat quad(vec2 uv,float posX, float posY)\n{\n    float quad = step(posX,uv.x)-step(posY,uv.x);\n\tquad = quad + step(posX,uv.y)-step(0.,uv.y)-step(posY,uv.y);\n    return quad;\n}\n\nfloat shape(vec2 uv,float pos1,float pos2,float hands,float size)\n{\n    float ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    \n    vec2 shapePos = vec2(pos1*ratio,pos2);\n    float dist = distance(shapePos,uv)*2.;\n    \n    uv -=shapePos;\n    float angle= atan(uv.y,uv.x);\n    float radius = tan(2.*angle);\n    radius = abs(cos(quad(uv,.5,.5)*(hands/2.)+iTime));\n    \n    float value = 1.-step(radius/size,dist);\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 bgcolor = vec3((cos(iTime)+1.)/3.,1.,0);\n    vec3 red = vec3(1.,0,0);\n\n\tvec3 val = mix(bgcolor+.2,red, shape(uv,.5,.5,5.,5.));\n\n    // Output to screen\n    fragColor = vec4(val,uv);\n}","name":"Image","description":"","type":"image"}]}