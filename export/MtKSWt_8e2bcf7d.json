{"ver":"0.1","info":{"id":"MtKSWt","date":"1486549740","viewed":174,"name":"Bezier curve 2D","username":"Nesvi7","description":"A quick test for 2D bezier curves. Use mouse to deform.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","bezier","curvers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 BezierPoint(vec2 p0, vec2 p1, vec2 p2, float t){\n\tvec2 v1 = p1-p0;\n    vec2 v2 = p2-p1;\n    vec2 o0 = p0+v1*t;\n    vec2 o1 = p1+v2*t;\n    vec2 v3 = o1-o0;\n   \treturn o0+v3*t;\n}\n\nfloat BezierLine(vec2 p){\n\t\n    vec2 p0 = vec2(0.1,0.1);\n    vec2 p1 = vec2(0.5,0.5);\n    vec2 p2 = vec2(0.9,0.1);\n\t\n    p1 = iMouse.xy/iResolution.xy;\n    float minDist = 9999999.0;\n    \n    const float points = 200.0;\n    for( float i = 1.0; i <= points; i++){\n   \t\tminDist = min(minDist,length(p-BezierPoint(p0,p1,p2,i/points)));\n    }\n    \n    return step(0.01,minDist);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y/iResolution.x;\n\tfragColor = vec4(BezierLine(uv),0.0,0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}