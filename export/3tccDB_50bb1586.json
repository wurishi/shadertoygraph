{"ver":"0.1","info":{"id":"3tccDB","date":"1609790699","viewed":90,"name":"Nrohraw","username":"izutionix","description":"experimenting with [url=https://www.shadertoy.com/view/3lcyDS]Polyrhythm Tester[/url] \nbased on [url]https://www.shadertoy.com/view/3l23Rc[/url]","likes":5,"published":1,"flags":8,"usePreview":0,"tags":["beat","rhythm","chase"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//fork of https://www.shadertoy.com/view/3l23Rc\n// (wave visualiser)\n// (use mouse to scale and offset)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float scale = ceil(max((iMouse.y / iResolution.y) * 4., 1.)) / 16.;\n    scale = pow(scale, 2.);\n    float offset = iMouse.x / iResolution.x;\n  \tvec2 t = wave(uv.x * scale + offset + iTime) * .5 + .5;\n    \n    vec2 l = vec2(uv.y) - t;\n    l /= fwidth(l);\n    l = abs(l);\n    \n    vec3 col = vec3(l.x, l.y, l.x);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp, float time )\n{\n    return wave(time);\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"//fork of https://www.shadertoy.com/view/3l23Rc\n// https://www.shadertoy.com/view/WlSGWw\n\n#define PI 3.14159\n\n#define a 2.\n#define b 6.\n#define c 53.\n#define d 1.\n#define e 2.1\n#define f 105.\n//#define f 119.\n#define g 107.\n\nvec2 kick(float time, float bps) { // https://www.shadertoy.com/view/3l23Rc\n\n    // loop time\n    float tm = mod(time, 1./bps);\n\n    // adjusts frequency\n    float finetune = 1.8;\n\n    // KICK\n    \n    // sine that drops to 0 freq\n\tfloat k = sin(80. * exp(-tm * finetune * 10.));\n    //return vec2(k) * .5;\n\n\t// ramp up start, fixes glitch\n    k *= min(1., tm * 500.) * max(0., 1. - tm);\n    //return vec2(k) * .5;\n\n    // fade out the end\n    k *= exp(-tm * 10.);\n    //return vec2(k) * .5;\n    \n    // add a little more bass complexity \n    k *= cos(120.0 * exp(-tm * 2.));\n\t//return vec2(k) * .5;\n    \n    // SUB\n\n    // low freq\n\tfloat s = sin(tm * 380.);\n    //return vec2(s) * .5;\n    \n    // fade out\n    s *= exp(-tm * 1.5);\n    //return vec2(s) * .5;\n    \n    // ramp up start (fixes glitch) and fade to 0\n    s *= min(1., tm * 100.) * max(0., .5 - tm);\n    //return vec2(s) * .5;\n    \n    // add kick\n    s += k;\n    //return vec2(s) * .5;\n    \n    // incrase volume at the end\n\ts *= mix(1., 7., tm * 2.);\n\t//return vec2(s) * .5;\n    \n    // add more kick\n    return vec2(s + k) * .5;\n}\n\nvec2 wave(float time) {\n    time *= 1.;\n    return .75*kick(time, a) \n    + kick(time, b) \n    + kick(time, c + .125*exp(-.25*time)*sin(.5*PI*time)) \n    + kick(time, d) \n    + .75*kick(time, e + .125*cos(.5*PI*time)*exp(-.25*time)) \n    + .75*kick(time, f) \n    + sin(time*.1*PI)*exp(-.25*time)*.375*kick(time, g);\n}","name":"Common","description":"","type":"common"}]}