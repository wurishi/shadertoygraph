{"ver":"0.1","info":{"id":"ctcyzB","date":"1699342687","viewed":35,"name":"polar_shape","username":"yufengjie","description":"polar coordinate system draw shape","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["polar","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat pix;\nfloat PI = 3.141592653589793;\n\nfloat SMOOTH(float D, float d, float pixNum) {\n  return smoothstep(D - pixNum * pix, D + pixNum * pix, d);\n}\n\nfloat easeOutQuart(float x) {\n  return 1. - pow(1. - x, 4.);\n}\n\nvec2 toPolar(vec2 st) {\n  float r = length(st);\n  float theta = mod(atan(st.y, st.x), 2. * PI);\n\n  return vec2(r, theta);\n}\n\n// See https://iquilezles.org/articles/palettes for more information\nvec3 palette(float t) {\n  vec3 a = vec3(0.610, 0.498, 0.650);\n  vec3 b = vec3(0.388, 0.498, 0.350);\n  vec3 c = vec3(0.530, 0.498, 0.620);\n  vec3 d = vec3(3.438, 3.012, 4.025);\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  pix = 1.0 / iResolution.y;\n\n  vec2 st = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n  st = toPolar(st);\n\n  vec3 c_fin = vec3(0.0);\n\n  st.x *= 8.;\n\n  vec3 c1 = palette(abs(sin(st.y - iTime)));\n  float roateSpeed = PI * easeOutQuart(abs(sin(iTime)));\n  float scale = 10. * clamp(abs(sin(iTime)), 0.1, 1.0);\n  float v = st.x - abs(scale * sin(4. * (st.y + roateSpeed)));\n  float s = smoothstep(0.,1.,v);\n  c_fin = mix(c1, c_fin, s);\n\n  fragColor = vec4(c_fin, 1.0);\n }","name":"Image","description":"","type":"image"}]}