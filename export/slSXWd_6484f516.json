{"ver":"0.1","info":{"id":"slSXWd","date":"1628859413","viewed":260,"name":"particle test 111","username":"lasoy","description":"particle","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM 20.0\n#define PI 3.1415926\nvec3 color(float t) {\n    // from IQ's color pattern\n    return .3 + .7 * cos(6.283 * (vec3(1., .5, .0) * (1. - t) + vec3(.7, .75, .3)));\n}\nfloat hash11(float p) {\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv.y += .4;\n    vec3 col = vec3(0, 0, 0);\n    for(float i = 0.;i < NUM; i ++) {\n        float id = i;\n        float h0 = hash11(id);\n        float h1 = hash11(h0);\n        float h2 = hash11(h1);\n        float h3 = hash11(h2);\n        vec2 pos = uv;\n        pos.x += cos(iTime * 3. * h0 + h0 * PI * 2.) * .2 * (.5 + h0 * 2.) * (.2 + pow(pos.y, .8));\n        pos.y -= fract(iTime * .3 + h1) * .8 * (.5 + h1);\n        vec3 c =  color(h3);\n        col += 0.012 * h2 /length(pos) * c;\n    }\n        \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}