{"ver":"0.1","info":{"id":"ldSfz3","date":"1501403902","viewed":142,"name":"Fire Test Eddie","username":"eddietree","description":"fire","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*float random(in vec2 st)\n{\n    vec4 noiseVal = texture(iChannel0, st * 700485.233);\n    return noiseVal.x*2.0-1.0;\n}\n*/\n\nfloat random (in vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))* \n        43758.5453123) * 2.0 - 1.0;\n}\n\n\nfloat noise(in vec2 st)\n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    \n    float uvDelta = 1.0;// / 64.0;\n    \n    float a = random(i);\n    float b = random(i + vec2(uvDelta,0.0));\n    float c = random(i + vec2(0.0,uvDelta));\n    float d = random(i + vec2(uvDelta,uvDelta));\n    \n    vec2 u = smoothstep(vec2(0.0), vec2(1.0), f);\n    \n   return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\n// from bookofshaders\n#define OCTAVES 7\nfloat fbm(in vec2 st)\n{\n    float value = 0.0;\n    float amp = 0.6;\n    float freq = 0.0;\n    \n    for(int i = 0; i < OCTAVES; ++i)\n    {\n        value += amp * abs(noise(st));\n        st *= 2.0;\n        amp *= 0.5;\n    }\n    \n    return value;\n}\n\nfloat pattern(in vec2 st)\n{\n    // f(p) = fbm(p + fmb(p))\n    \n    vec2 q = vec2(fbm(st + vec2(iTime*0.3, -iTime*0.4333)), fbm(st+vec2(70442.3, 1042.9423+iTime*-0.1)));\n    return fbm(st+q) * 1.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uvOrigin = fragCoord.xy / iResolution.xy;\n    vec2 uv = uvOrigin;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float patVal = pattern(uv*vec2(2.0,1.0) + vec2(0.0, iTime*-0.5));\n    \n    patVal *= smoothstep(0.2, 0.4, 1.2-uvOrigin.y - fbm(uv*1.0 + vec2(0.0,-iTime)));\n    patVal *= 1.0-smoothstep(0.1, 0.2, abs(uvOrigin.x-0.5) +fbm(uv*0.4 + vec2(0.0,-iTime*0.4))*0.1);\n    \n    vec3 color = vec3(0.0);\n    \n    color.xyz = mix( vec3(0.0,0.0,0.0), vec3(1.0,0.0,0.0), smoothstep(0.0,0.7,patVal));\n    color.xyz = mix( color.xyz, vec3(1.0,1.0,0.1), smoothstep(0.4,0.9,patVal));\n    color.xyz = mix( color.xyz, vec3(1.0,1.0,1.0), smoothstep(0.7,1.0,patVal));\n    \n    fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}]}