{"ver":"0.1","info":{"id":"lllyDs","date":"1507040980","viewed":110,"name":"Reveal Assignment Week 6","username":"LittleBritain97","description":"Reveal one texture under a blurred texture","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["reveal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Radius = 0.1;\n\n// rows go down, columns go across\nconst mat3 Blur = mat3(\n\t0.111, 0.111, 0.111,\n    0.111, 0.111, 0.111,\n    0.111, 0.111, 0.111\n);\n  \nconst mat3 Sharpen = mat3(\n\t0., -1, 0.0,\n\t-1, 5, -1, \n\t0., -1, 0.0 \n);\n\nconst mat3 Outline = mat3(\n    -1.0, -1.0, -1.0,\n    -1.0, 8.0, -1.0,\n    -1.0, -1.0, -1.0\n);\n\nconst mat3 Emboss = mat3(\n    -2.0, -1.0, 0.0,\n    -1.0, 1.0, 1.0,\n    0.0, 1.0, 2.0\n);\n\nconst mat3 NoFilter = mat3(\n    0.0, 0.0, 0.0,\n    0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0\n);\n\nmat3 FrontFilter = Blur;\nmat3 BackFilter = Sharpen;\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord, in sampler2D channel)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n\treturn texture(channel, uv).xyz;\n}\n\nvec3 aFilter(in vec2 fragCoord, mat3 kernel, in sampler2D channel)\n{\n\tvec3 sum = vec3(0.0);\n\t\n\tfor(int i = 0; i < 3; i++)\n\t{\n\t\tfor(int j = 0; j < 3; j++)\n\t\t{\n\t\t\tsum += aSample(i - 1, j - 1, fragCoord, channel) * kernel[i][j];\n\t\t}\n\t}\n\treturn sum;\n}\n\n// use layers to create the two textures one on top of the other\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n    \n    // Find mouse position\n\tvec2 MousePosition = iMouse.xy / iResolution.xy;\n    MousePosition.y = MousePosition.y * (iResolution.y / iResolution.x);\n    \n    vec2 fc = fragCoord.xy;\n\n    vec3 sf = aFilter(fc, BackFilter, iChannel1);\n\tvec3 cf = aFilter(fc, FrontFilter, iChannel0); \n \n    \n    vec4 Layer = vec4(cf, 1.0);\n    vec4 Layer2;\n    \n    Layer2 = vec4(sf, 1.0 - step(Radius, length(uv - MousePosition)));\n   \tvec4 Composite = mix(Layer, Layer2, Layer2.a);\n    \n \tfragColor = Composite;\n\n}","name":"Image","description":"","type":"image"}]}