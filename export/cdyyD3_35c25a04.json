{"ver":"0.1","info":{"id":"cdyyD3","date":"1696668024","viewed":84,"name":"GaussianBlur-test","username":"nomkcode","description":"test","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // 通过鼠标点击设定模糊边界\n    vec3 col = texture(iChannel0, uv).rgb;\n    if(uv.x > iMouse.x / iResolution.x){\n        col = texture(iChannel1, uv).rgb;\n    }\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float weight[5] = float[5](70.0/256.0, 56.0/256.0, 28.0/256.0, 8.0/256.0, 1.0/256.0);\nfloat offset[5] = float[5](0.0, 1.0, 2.0, 3.0, 4.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n   \tvec3 sum_color = texture(iChannel0, uv).rgb * weight[0];\n    for(int i = 1; i < 5; ++i){\n    \tsum_color += texture(iChannel0, uv + vec2(offset[i] / iResolution.x, 0.0)).rgb * weight[i];\n        sum_color += texture(iChannel0, uv - vec2(offset[i] / iResolution.x, 0.0)).rgb * weight[i];\n    }\n    fragColor = vec4(sum_color, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float weight[5] = float[5](70.0/256.0, 56.0/256.0, 28.0/256.0, 8.0/256.0, 1.0/256.0);\nfloat offset[5] = float[5](0.0, 1.0, 2.0, 3.0, 4.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 sum_color = texture(iChannel0, uv).rgb * weight[0];\n    for(int i = 1; i < 5; ++i){\n        sum_color += texture(iChannel0, uv + vec2(0.0, offset[i] / iResolution.y)).rgb * weight[i];\n        sum_color += texture(iChannel0, uv - vec2(0.0, offset[i] / iResolution.x)).rgb * weight[i];\n    }\n    fragColor = vec4(sum_color, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}