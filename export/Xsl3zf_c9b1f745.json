{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// by Nikos Papadopoulos, 4rknova / 2013\n// WTFPL\n\nfloat hash(in float n) { return fract(sin(n)*43758.5453123); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\t\n\tvec2 u = p * 2. - 1.;\n\tvec2 n = u * vec2(iResolution.x / iResolution.y, 1.0);\n\tvec3 c = texture(iChannel0, p).xyz;\n    \n    \n\t// flicker, grain, vignette, fade in\n\tc += sin(hash(iTime)) * 0.01;\n\tc += hash((hash(n.x) + n.y) * iTime) * 0.5;\n\tc *= smoothstep(length(n * n * n * vec2(0.075, 0.4)), 1.0, 0.4);\n    c *= smoothstep(0.001, 3.5, iTime) * 1.5;\n\t\n\tc = dot(c, vec3(0.2126, 0.7152, 0.0722)) \n\t  * vec3(0.2, 1.5 - hash(iTime) * 0.1,0.4);\n\t\n\tfragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xsl3zf","date":"1376016119","viewed":2410,"name":"Night vision","username":"4rknova","description":"A simple night vision effect.","likes":23,"published":3,"flags":0,"usePreview":0,"tags":["filter","nightvision"],"hasliked":0,"parentid":"","parentname":""}}