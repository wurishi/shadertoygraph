{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"/*\nSmooth Moving Circle Tunnel -- Svenofnine / Erfurt 2024\nhttps://www.shadertoy.com/view/M3tcR7\n*/\n\n#define ar float(iResolution.x/iResolution.y)            // aspect ratio\n#define unit float(ar/iResolution.x)                     // the smallest unit at current resolution \n#define center vec2(0.5)                                 // coordinates of the center\n// #define sincos(alpha) vec2(cos(alpha),sin(alpha))\n#define sincos(alpha) vec2(cos(alpha - vec2(0.,1.57) ))  // gives a point on unit circle, 1.57 is ~ pi/2, see comment from pyBlob\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;                // normalize coordinates\n    vec2 mouse = iMouse.xy / iResolution.xy;             // normalized mouse pos\n    float col = 0.;\n    \n    float twist = mouse.y-0.5;\n    float excentricity = mouse.x-0.5;  \n    \n    for( float i = fract(iTime); i<230.; i++ ) {\n        float radius = 0.0028*exp(i*0.1);\n        vec2 out_of_center = radius * excentricity * sincos(i*twist);\n        float circle = smoothstep(                      // if uv is on a circle give 1.\n            unit,     // here return 0.\n            0.,       // here return 1.\n            abs( \n                distance( \n                    vec2( uv.x * ar - 0.5 * ar + 0.5, uv.y ), \n                    center + out_of_center\n                ) - radius \n            )   // abs\n        ); // smoothstep\n        col = max(col, clamp(radius, 0., 1.) * circle );\n    }\n    // Output to screen\n    fragColor = vec4(vec3(col),1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"M3tcR7","date":"1734908039","viewed":188,"name":"Smooth Moving Circle Tunnel","username":"Svenofnine","description":"It's a pseudo tunnel (2D) made out of circles which will continuously and slowly zoom in. You can control both twist and eccentricity with the mouse.\nEnjoy!","likes":14,"published":3,"flags":0,"usePreview":0,"tags":["2d","circles","lines"],"hasliked":0,"parentid":"","parentname":""}}