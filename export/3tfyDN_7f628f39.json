{"ver":"0.1","info":{"id":"3tfyDN","date":"1592233615","viewed":127,"name":"line_Munix","username":"TRASHTRASH","description":"Another one of my old VJing patterns.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","lines","design","techno","vj"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//created by TRASHTRASH\n//trying to do one of these a day this is another of my simple QC designs \n//converted to GLSL please let me know more effecient ways!\n\n\n//dave hoskins\nfloat N2(vec2 p) {\t\n\tvec3 p3  = fract(vec3(p.xyx) * vec3(443.897, 441.423, 437.195));\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    //vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv.y *= 40.;\n    uv.y = mod((iTime*8.0)+uv.y, 40.0);\n    vec2 gv = fract(uv)-0.5;\n    vec2 id = floor(uv)-0.5;\n    float of = N2(id);\n    float r1 = N2(id+.983);\n    \n    vec2 d = abs(gv) - vec2(abs(sin(iTime*of))*0.45,0.1);\n    float rt = min(max(d.x,d.y),0.0) + length(max(d, 0.0));\n    float r = smoothstep(-0.1,0.1, rt)*2.;\n    \n    \n\tvec3 c = vec3(1.0-r);\n    c *= vec3(1.,0.,0.)*2.0;\n    \n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}