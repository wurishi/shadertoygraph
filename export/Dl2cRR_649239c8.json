{"ver":"0.1","info":{"id":"Dl2cRR","date":"1691407341","viewed":47,"name":"Ray Tracing -th","username":"ShadowedNinja","description":"a little port of my python ray tracer","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","sphere","raytraced","rt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nstruct camera{\n    vec3 pos;\n    vec3 dir;\n};\n\nstruct ray{\n    vec3 origin;\n    vec3 direction;\n};\n\nfloat sphereIntersect(vec3 ro, vec3 rd, vec3 p, float r){\n    float dist = -1.;\n\tvec3 v = ro-p;\n\tfloat b = dot(v,rd);\n\tfloat c = dot(v,v) - r*r;\n\tfloat d = b*b-c;\n\tif (d>0.)\n\t{\n\t\tfloat t1 = (-b-sqrt(d));\n\t\tfloat t2 = (-b+sqrt(d));\n\t\tif (t2>0.)\n\t\t\tdist = t1>0.?t1:t2;\n\t}\n\treturn dist;\n}\n\nvec3 screenDirection(vec2 fragCoord){\n    float FOV = 90.;\n    vec2 xy = (fragCoord - (iResolution.xy / 2.));\n\tfloat z = iResolution.y / tan(radians(FOV) / 2.);\n\treturn normalize(vec3(xy.x, xy.y, -z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col = vec3(0.);\n    \n    camera cam = camera(vec3(0.), vec3(0.));\n    \n    vec3 direction = screenDirection(fragCoord);\n    \n    for (int i=0 ; i<2; i++){\n        ray r = ray(cam.pos, direction);\n        vec3 pos = vec3(2., 1.2, -8.) * vec3(cos(iTime), sin(iTime), 1.);\n        vec3 light = normalize(vec3(1., 1., 1.));\n        light = (pos) - vec3(2., 1.2, -8.);\n        light = normalize(light);\n        pos = vec3(2., 1.2, -8.);\n        \n        float inter = sphereIntersect(r.origin, r.direction, pos,1.1);\n        if (inter != -1.){\n            vec3 inpos = r.origin + r.direction * inter;\n            vec3 normal = normalize(inpos - pos);\n            col = vec3(1.,0.,0.);\n            col *= dot(normal, light);\n            \n        }\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}