{"ver":"0.1","info":{"id":"XfsXzl","date":"1705596004","viewed":100,"name":"Dynamic circle gradient","username":"gkadam","description":"Circle gradient that starts at an inner radius of the circle and ends at edge","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAIN_IMAGE\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    // Calculate the distance from the center\n    float distance = length(uv);\n\n    // Define the inner and outer radii\n    float innerRadius = (2.0*iMouse.x-iResolution.x)/iResolution.x;\n    float outerRadius =1.0;\n\n    // Use step and smoothstep to create the gradient\n    float gradient = smoothstep(innerRadius, outerRadius, distance);\n    \n    // Interpolate between two colors based on the gradient\n    vec3 color1 = vec3(0.0, 0.0, 0.0); // Inner color\n    vec3 color2 = vec3(1.0, 1.0, 1.0); // Outer color\n\n    vec3 finalColor = mix(color1, color2, gradient);\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}