{"ver":"0.1","info":{"id":"wl2BDt","date":"1600449340","viewed":421,"name":"jh0ker_boxblur","username":"jh0ker","description":"simple box blur","likes":2,"published":3,"flags":2,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = vec4(0.);\n    \n    int box = 10;\n    \n    for (int i = -box; i <= box; i++) {\n    \tfor (int k = -box; k <= box; k++) {\n            \n       \t\tcol += texture(\n                iChannel0,\n                uv + vec2(i, k) / iChannelResolution[0].xy\n            );\n\t\t}\n\t}\n    \n    col /= float(box * 2 * box * 2);\n\n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}