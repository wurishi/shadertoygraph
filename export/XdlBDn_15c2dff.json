{"ver":"0.1","info":{"id":"XdlBDn","date":"1495691007","viewed":538,"name":"15/100","username":"yahe","description":"15/100","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["square","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on https://www.shadertoy.com/view/ldfSD2\n\nvec2 rotate(vec2 v, float alpha)\n{\n\tfloat vx = v.x*cos(alpha)-v.y*sin(alpha);\n\tfloat vy = v.x*sin(alpha)+v.y*cos(alpha);\n\tv.x = vx;\n\tv.y = vy;\n\treturn v;\n}\n\nfloat F(vec2 p, float s)\n{\n\tfloat x = abs(p.x);\n    float y = abs(p.y);\n    \n    x *= s;\n    y *= s;\n    \n    float ScaleX = (1.0 - sqrt(abs(1.0 - x)))/(x);\n    float ScaleY = (1.0 - sqrt(abs(1.0 - y)))/(y);\n    \n    float brightness = 1.1;\n    \n    return ScaleX * ScaleY * brightness;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    uv.x = uv.x * aspect;\n    vec2 p = uv - vec2(0.5 * aspect, 0.5);\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    float scale = 0.;\n    \n    for (float i=0.; i<20.; i++) {\n    \tscale += F(rotate(p,(i+1.)*iTime/10.), (i*(sin(iTime/2.)/5.+.5)+1.));\n    }\n    \n    vec3 Color = vec3(0.5);\n    col = Color * scale / 4.;\n    \n    \n\tfragColor = vec4(col,scale);\n}","name":"Image","description":"","type":"image"}]}