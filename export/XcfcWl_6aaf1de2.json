{"ver":"0.1","info":{"id":"XcfcWl","date":"1721733825","viewed":36,"name":"Glowing warping fractal","username":"ReasonMaster","description":"Big glowing fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n    vec2 mousePos = (vec2(iMouse) * 2. - iResolution.xy) / iResolution.y;\n    float md = length(uv - mousePos);\n    \n    md -= .2;\n    md = abs(md);\n    md = .01 / md;\n    \n    \n    for (float i = 0.; i < 7.; i++) {\n        uv = abs(uv);\n        uv.x -= .6f;\n        uv *= 1.4;\n        float angle = (iTime + (i * radians(45.))) * .5;\n        uv *= mat2(\n            cos(angle + (i * .2)), -sin(angle),\n            sin(angle), cos(angle)\n        );\n    }\n    \n    float d = length(uv);\n    d -= .05;\n    d = abs(d);\n    d = .5 / d;\n\n    // Time varying pixel color\n    vec3 col = vec3(((sin(iTime) + 1.5) * d) * .5, ((sin(iTime * 1.8) + .7) * d) * .5, d * .1);\n    //vec3 col = vec3(md);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}