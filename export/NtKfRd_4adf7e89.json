{"ver":"0.1","info":{"id":"NtKfRd","date":"1665072987","viewed":34,"name":"Eye wall prototype 1","username":"Balocre","description":"it's watching you","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["eye","noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141593\n#define N 2.\n\n// from : https://thebookofshaders.com/08/\nmat2 scale(vec2 _scale)\n{\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nfloat eye(in vec2 uv, in vec2 lookDir, in float opening)\n{\n    float eyeArea = step(0.0001, abs(uv.y-.5) - opening * sin(uv.x*PI)/2.);\n    vec2 pupCenterPos = uv-.5 - clamp(.1*(lookDir-.5), -0.2, .2);\n    float pupArea = 1.-step(.02, dot(pupCenterPos,pupCenterPos));\n    return eyeArea + pupArea;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n    \n    p *= N; m *= N;\n    \n    vec2 i_uv = floor(p); vec2 f_uv = fract(p);\n\n    // scale the eye\n    f_uv -= .5;\n    f_uv *= scale(vec2(1.5));\n    f_uv += .5;\n    \n    \n    float t = abs(sin(.5*iTime));\n\n    fragColor = vec4(vec3(eye(f_uv, m-i_uv, t)),1.0);\n}","name":"Image","description":"","type":"image"}]}