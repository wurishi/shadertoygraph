{"ver":"0.1","info":{"id":"lc3BR4","date":"1732758350","viewed":27,"name":"SDF of Circle","username":"jttninjacode","description":"SDF of Circle.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cheatsheet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf_of_circle(vec2 point, vec2 center, float radius) {\n    return abs(length(point - center)) - radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Adaptively select the shortest axis's bounds as -0.5 to 0.5.\n    float min_axis = min(iResolution.x, iResolution.y);\n    vec2 coord = (fragCoord - iResolution.xy / 2.0) / min_axis;\n    \n    vec2 center = vec2(0);\n    float radius = 0.3;\n    float len = sdf_of_circle(coord, center, radius);\n    vec3 color = len > 0.0 ? vec3(1.0) : vec3(0.0);\n\n    // Output to screen\n    fragColor = vec4(color ,1.0);\n}","name":"Image","description":"","type":"image"}]}