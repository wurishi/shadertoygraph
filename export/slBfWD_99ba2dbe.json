{"ver":"0.1","info":{"id":"slBfWD","date":"1652204090","viewed":318,"name":"Sine Dunes","username":"VPaltoDance","description":"Dune-like waves (i believe)","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["wave","sine","dune"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COORDS_SCALE 10.0\n\n#define OFFSET 0.7\n#define WAVE_OFFSET 0.6\n#define SCALE 0.3\n#define WAVE_SCALE 0.4\n\n#define WAVE_FREQ 2.0\n#define WAVE_SPEED 0.5\n\n#define NEAR_COLOR vec3(0.75, 0.65, 0.3)\n#define FAR_COLOR vec3(0.55, 0.33, 0.1)\n#define TIME_SCALE 0.05\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 coords = uv * COORDS_SCALE;\n    float var = coords.x + coords.y + WAVE_SPEED * iTime + WAVE_OFFSET + WAVE_SCALE * sin(coords.x + WAVE_FREQ * iTime);\n    \n    float coeff = OFFSET + SCALE * smoothstep(0.0, 1.0, fract(var)) \n                         - SCALE * smoothstep(0.97, 1.0, fract(var)); // anti-aliasing\n    \n    vec3 res = mix(NEAR_COLOR, FAR_COLOR, uv.x + uv.y) * coeff;\n    \n    fragColor = vec4(res, 1.0);\n}","name":"Image","description":"","type":"image"}]}