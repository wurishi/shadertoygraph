{"ver":"0.1","info":{"id":"NdKcDc","date":"1655742616","viewed":168,"name":"Knitted pattern","username":"henrmota","description":"Learning shaders","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["knittedpattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pingpong(float a, float b) {\n\tif (b == 0.0) {\n\t\treturn 0.0f;\n\t} else {\n\t\treturn abs(fract((a - b) / (b * 2.0)) * b * 2.0 - b);\n\t}\n}   \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    vec2 st = uv * 30.;\n    st.x *= 1.5;\n    st.y += pingpong(st.x, 1.);\n    st = fract(st);\n    \n    st -= 0.5;\n    \n    float d = 1. - length(st);\n    \n    col += mix(sin((uv.x + uv.y) * 100.), d, 0.9);\n    col = mix(vec3(0.), vec3(1., 0., 1.), col);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}