{"ver":"0.1","info":{"id":"MtGfWm","date":"1542830914","viewed":165,"name":"Necromurlok - Particles","username":"Necromurlok","description":"particles","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// BlobNoise (superposition of blobs in displaced-grid voronoi-cells) by Jakob Thomsen\n// Thanks to FabriceNeyret2 for simplifying the program.\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define PARTICLES\n\n#define pi 3.1415926\n#define iterations 1\n\nfloat T;\n\nvec2 hash( vec2 p ) {\n    p = vec2(dot(p, vec2(167.41344,341.7222)), dot(p, vec2(69.5126,83.3375)));\n//    return fract(sin(p) * 210.1333);\n    return fract(p);\n\n//    return fract(vec2(sin(p.x) * 110.10, cos(p.y) * 210.510));\n\n}\n\nfloat simplegridnoise(vec2 v)\n{\n    vec2 fl = floor(v), fr = fract(v);\n    float mindist = 1.0;\n    for(int y = -iterations; y <= iterations; y++)\n        for(int x = -iterations; x <= iterations; x++)\n        {\n            vec2 offset = vec2(x, y);\n//            vec2 pos = .5 + .5 * cos( pi * (T*.7 + hash(fl+offset)));\n            vec2 pos = .5 + .5 * cos( 8541.02374 * pi * hash(fl + offset) + T);\n            mindist = min(mindist, length(pos + offset - fr));\n        }\n    \n    return mindist;\n}\n\n\n\nvoid mainImage( out vec4 o, in vec2 U )\n{\n    T = iTime * 3.0;\n    vec2 uv = U/iResolution.x;\n\n    float n = simplegridnoise(uv * 16.0);\n#ifdef PARTICLES\n    float t = 1.0 - step(0.1, n);\n    o += vec4(t);\n#else\n    o += vec4(n);\n#endif    \n}\n","name":"Image","description":"","type":"image"}]}