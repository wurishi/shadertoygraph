{"ver":"0.1","info":{"id":"lssfWB","date":"1498006511","viewed":2104,"name":"Strangler Fig","username":"leon","description":"Raymarching sketch about a plant named [b]Strangler Fig[/b] that grows around a tree host.  \nRecently saw in real life while traveling with friends in Thailand.  \nLook for pictures on internet, it does really amazing shapes.  \n","likes":71,"published":1,"flags":0,"usePreview":1,"tags":["raymarching","tree","wood","roots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Raymarching sketch about a plant named Strangler Fig that grows around a tree host.\n// Recently saw in real life while traveling with friends in Thailand.\n// Look for pictures on internet, it does really amazing shapes.\n// Leon 21 / 06 / 2017\n\n// using codes from iq, mercury, lj, koltes\n\n#define PI 3.14159\n#define TAU 2.*PI\n#define t iTime*.3\n#define wood1 vec3(0.658, 0.592, 0.529)\n#define wood2 vec3(0.415, 0.352, 0.290)\nstruct Infos { vec3 color; vec3 pos; float blend; };\nInfos infos;\nmat2 rot (float a) { float c=cos(a),s=sin(a);return mat2(c,-s,s,c); }\nfloat sphere (vec3 p, float r) { return length(p)-r; }\nfloat cyl (vec2 p, float r) { return length(p)-r; }\nfloat iso (vec3 p, float r) { return dot(p,normalize(sign(p)))-r; }\nfloat smin (float a, float b, float r) {\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b,a,h)-r*h*(1.-h);\n}\nfloat scolor (float a, float b, float r) {\n    return clamp(.5+.5*(b-a)/r,0.,1.);\n}\nvec3 moda (vec2 p, float count) {\n    float an = TAU/count;\n    float a = atan(p.y,p.x)+an*.5;\n    float c = floor(a/an);\n    a = mod(a,an)-an*.5;\n    c = mix(c,abs(c),step(count*.5,abs(c)));\n    return vec3(vec2(cos(a),sin(a))*length(p),c);\n}\n\n// Martin Palko http://www.martinpalko.com/triplanar-mapping/\nvec3 triplanar(vec3 pos, vec3 normal, sampler2D channel, float uvscale) {\n    vec2 uvx = pos.yz*uvscale;\n    vec2 uvy = pos.xz*uvscale;\n    vec2 uvz = pos.xy*uvscale;\n    vec3 texx = texture(channel,uvx).rgb;\n    vec3 texy = texture(channel,uvy).rgb;\n    vec3 texz = texture(channel,uvz).rgb;\n    vec3 blends = abs(normal);\n    return texx*blends.x+texy*blends.y+texz*blends.z;\n}\n\nfloat map (vec3 p);\nvec3 normal (vec3 p) {\n    float e = .01;\n    return normalize(vec3(map(p+vec3(e,0,0))-map(p+vec3(-e,0,0)),\n                          map(p+vec3(0,e,0))-map(p+vec3(0,-e,0)),\n                          map(p+vec3(0,0,e))-map(p+vec3(0,0,-e))));\n}\nfloat luminance (vec3 c) { return (c.r+c.g+c.b)/3.; }\nvec3 camera (vec3 p) {\n    //p.xz *= rot(t);\n    //p.yz *= rot(t*1.5);\n    p.yz *= rot((PI*(iMouse.y/iResolution.y-.5)*step(0.5,iMouse.z)));\n    p.xz *= rot((PI*(iMouse.x/iResolution.x-.5)*step(0.5,iMouse.z)));\n    p.xz *= rot(0.5);\n    p.z += t;\n    return p;\n}\n\nfloat root (vec3 p, float count, float torsade, float width, float scale) {\n    p.xz *= rot(torsade);\n    vec3 p1 = moda(p.xz, count);\n    p1.x -= width+.2*sin(p1.z);\n    p.xz = p1.xy;\n    return cyl(p.xz, scale);\n}\n\nfloat map (vec3 p) {\n    \n    p = camera(p);\n    float treespace = 8.;\n    float treeindex = abs(floor(p.x/treespace)+floor(p.z/treespace));\n    p.xz = mod(p.xz,treespace)-treespace*.5;\n    \n    float blendRoots = .2;\n    float blendTrunk = .02;\n    float trunkWidth = 1.+.25*(.5+.5*sin(-p.y*.5+t*2.+treeindex*3.));\n    float hostTrunk = cyl(p.xz, trunkWidth);\n    \n    // fat\n    float seed1 = treeindex*4.+t+p.y*.25+sin(p.y*.2+t);\n    float seed2 = treeindex*3.+t+p.y*-.1+sin(p.y*.2+t);\n    float roots = root(p, 2.+mod(treeindex,6.), seed1, trunkWidth, .2);\n    roots = smin(roots, root(p, 2.+mod(treeindex,6.), seed2, trunkWidth+.1+sin(p.y*.3+t*3.+treeindex)*.3, .3), blendRoots);\n    // middle\n    float seed3 = treeindex*2.+3.*p.y*-.1+sin(-p.y*.2+t*2.);\n    float seed3b = treeindex*2.+.1*p.y+sin(-p.y*.2+t*2.);\n    roots = smin(roots, root(p, 3., seed3, trunkWidth+.1, .2), blendRoots);\n    roots = smin(roots, root(p, 6.+mod(treeindex,6.), seed3b, trunkWidth+.1, .2), blendRoots);\n    // thin\n    float seed4 = treeindex*8.+p.y*.5+sin(p.y*2.5+t*3.)*.2;\n    float seed5 = treeindex*4.+p.y*-.5+sin(p.y*1.5+t*5.)*.2;\n    roots = smin(roots, root(p, 8., seed4, trunkWidth+.1, .09), blendRoots);\n    roots = smin(roots, root(p, 6., seed5, trunkWidth+.2, .08), blendRoots);\n    \n    float scene = smin(roots, hostTrunk, blendTrunk);\n    infos.pos = p;\n    infos.blend = scolor(hostTrunk, roots, blendTrunk);\n    return scene;\n}\n\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n\tvec2 uv = (coord.xy-.5*iResolution.xy)/iResolution.y;\n    vec3 eye = vec3(uv,0.), ray = normalize(vec3(uv,.5)), pos = eye;\n    int ri = 0;\n    for (int i = 0; i < 50; ++i) {\n        float dist = map(pos);\n        if (dist < 0.001) {\n            break;\n        }\n        pos += ray*dist;\n        ri = i;\n    }\n    float ratio = float(ri)/50.;\n    color.rgb = mix(wood1, wood2, infos.blend);\n    \n    vec3 n = normal(pos);\n    \n    vec3 tex = triplanar(pos, n, iChannel1,.09);\n    tex = mix(tex, triplanar(pos, n, iChannel0,0.5), infos.blend);\n    float lum = luminance(tex);\n    color.rgb *= smoothstep(-.5,1.,lum)*2.;\n    //color.rgb *= dot(-ray,n)*.5+.5;\n    //color.rgb = n*.5+.5;\n    color.rgb *= 1.-ratio;\n}","name":"Image","description":"","type":"image"}]}