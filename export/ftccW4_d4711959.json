{"ver":"0.1","info":{"id":"ftccW4","date":"1659768802","viewed":98,"name":"06/08/22","username":"lechuga","description":"don't lose practice ! thx everyone for share knowledge ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lines","cubes","spheres","repetition","patrons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define pi acos(-1.)\nfloat t;\nvec3 s = vec3(0.01,20.01,-10.);\nvec3 l = normalize(vec3(0.01,1.,-1.));\nfloat h(vec2 uv){\n  return fract(sin(dot(uv,vec2(34.45))*20.34));\n} // nusan\nfloat hh(float a){\n  return fract(sin(a*64.)*34.5);\n}\nfloat cc(float a){\n  return mix(floor(a), floor(a)+1., pow(smoothstep(0., 1.,fract(a)), 50.));\n}\nfloat ccr(float a){\n  return mix(hh(floor(a)), hh(floor(a)+1.), pow(smoothstep(0., 1., fract(a)), 30.));\n}\nfloat smin(float a, float b, float k){\n  float h = max(0., k-abs(a-b))/k;\n  return min(a,b)-h*h*k*.25; // iq\n}\nfloat box(vec3 p, vec3 s){\n  p = abs(p)-s;\n  return min(max(max(p.x, p.y), p.z), 0.) + length(max(vec3(0.), p)); // iq\n}\nfloat bb;\nvec2 m(vec3 p){\n  //p.xy += sin(abs(p.x*.5+t)-2.);\n  vec3 p11=p;\n  float scene_aa = mod(t, 8.);\n  p.xz *= rot(scene_aa > 4. ? pi : 0.);\n  vec3 p0 = p;\n  //p.xy *= rot(sin(t*.1+p.y*.01*sin(t))*.5-.5);\n  p.xz *= rot(cc(sin(t*.0024)*pi));\n  p.xz *=rot(sin(t*.055+p.x*.01));\n  p.yz *= rot(cos(t*.00134+p.y*.05)*.5-.5);\n  //p.y = smin(p.y, 8.-p.y*.1,.66);\n  \n  p.y = abs(p.y)-30.;\n  //p.y += sin(t+p.x*.465)*4.-4.;\n  p.zx += t*20.;\n  float re = 8.;\n  float id;\n  id = h((floor(p.xz/re-.5))+t*.001);\n  p.xz = (fract(p.xz/re-.5)-.5)*re;\n  float d = length(p)-3.;\n  p0 -= vec3(0., 20., 0.);\n  \n  float aa = cc(t*2.)*(pi*(scene_aa > 4. ? .5:.1));\n  p0.xy = abs(p0.xy)-mod(t+1., 4.);\n  p0.z += t*8.+aa;\n  //p11.z += t*78.+aa;\n  p0.z = (fract(p0.z/re-.5)-.5)*re;\n  p0.xy *= rot(aa);\n\n  float b = box(p0, vec3(.015,p.y, 0.));\n  b = min(b, box(p0, vec3(abs(p0.x), .015,0.)));\n  bb += .01/(.01+b);\n  d = min(b,d);\n  \n  return vec2(d, id);\n}\nvec3 nm(vec3 p){\n  vec2 e = vec2(0.1,-0.1);\n  return normalize(m(p).x-vec3(m(p-e.xyy).x, m(p-e.yxy).x, m(p-e.yyx)));\n}\nvoid ray(in vec3 r, inout vec2 uv, inout vec3 p, inout vec3 co){\n  float id;\n  for(float i = 0.; i < 64.; i++){ // TODO DENTRO DEL LOOP\n    vec2 e = m(p);\n    float d = e.x;\n    id = e.y;\n    if(d < .01){\n      vec3 n = nm(p);\n      float dif = max(0., dot(l,n));\n      float esp = max(0., pow(dot(reflect(-l, r), n), 30.)); // kinda evvvvil\n      float fr = max(0., pow(1.+dot(l,n), 3.));\n      co = vec3(dif+esp*fr);\n      //co += (vec3(vec2(.34,.32)*rot(pi+t+punchi), .75));\n      co += bb*vec3(0.1,0.1,0.25);\n      // colors\n      float tt = t;\n      co *= .77-length(uv)*.65; // NuSan\n      co = 1.-exp(-co);\n      co = pow(co, vec3(1.76));\n    }\n    p+=d*r;\n    \n  }\n  \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nt = mod(iTime, 100.)*.666; // :p\n\tvec2 uv = vec2(fragCoord / iResolution.xy);\n\tuv -= 0.5;\n\tuv.x /= iResolution.y / iResolution.x;\n  vec3 p = s;\n  vec3 co = vec3(0.);\n  t += h(t+uv*vec2(1.634,1.545))*.015;\n  uv *= rot(sin(abs(uv.x*.14+uv.y*.125))*pi-pi);\n  vec3 r = normalize(vec3(-uv, 1.+ccr(t+length(uv)*.4)));\n  ray(r,uv,p,co);\n  \n\tfragColor = vec4(co, 1.);\n}","name":"Image","description":"","type":"image"}]}