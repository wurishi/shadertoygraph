{"ver":"0.1","info":{"id":"sd3fD7","date":"1656674679","viewed":106,"name":"smiley try","username":"alal111","description":"my try of smiley form this video\nhttps://www.youtube.com/watch?v=ZlNnrpM0TRg","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["smile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n#define rbg(r, g, b) vec3(r/255., g/255., b/255.)\n#define sat(a) clamp(a, .0, 1.)\n\nfloat remap01(float a, float b, float t){\n    return sat((t - a) / (b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t){\n    return remap01(a, b, t) * (d - c) + c;\n}\n\nvec2 mapVec( vec2 a, vec2 b, vec2 value){\n    return (value - a) / (b - a);\n}\n\nvec4 Brow(vec2 uv, float state){\n    vec4 col = vec4(1.);\n    \n    uv -= .5;\n    \n    uv.y += uv.x*(.8-(1.5 - state*1.5))-(.2 + (.5 -state));\n    \n    float d = length(uv);\n    \n    float s1 = S(.5, .47, d);\n    \n    s1 -= S(.5, .47, length(uv - vec2(-.1, .25)));\n    \n    float mask1 = sat(s1);\n    \n    \n    vec3 browCol = vec3(.5, .3, .1);\n    \n    browCol += S(.48,.31, d)*.5 - S(.47, .21, length(uv - vec2(-.1, .02)));\n    \n    col.rgb = mix(col.rgb, browCol, col.a);\n    \n    \n    uv.y -= .3;\n    d = length(uv);\n    float s2 = S(.5, .27, d);\n    \n    s2 -= S(.5, .27, length(uv - vec2(-.1, .25)*.7));\n    float mask2 = sat(s2*.4);\n    \n    col.a = sat(mask1 + mask2);\n    col.rgb = mix(col.rgb, vec3(.3), mask2);\n    \n    return col;\n}\n\nvec4 Mouth(vec2 uv, float state){\n    uv -= .5;\n    vec4 col = vec4(.0);\n    \n    //uv.y -= (uv.x*uv.x)*2.;\n    \n    uv.y -= ((uv.x*uv.x)*remap(.0, 1., -1., 2., state));\n    uv.y *= mix(1.8, 1., state);\n    float d = length(uv);\n    \n    col.a = S(.5, .49, d);\n    \n     col.rbg = mix(col.rbg, vec3(1., .1, .1), -uv.y+.15);\n    \n   //teeth\n   vec3 teethCol = vec3(1.) * S(.61, .35,d);\n   \n    col.rbg = mix(col.rbg, teethCol, S(.3, .31, uv.y+.03));\n    \n    //tounge\n    vec3 toungeCol = vec3(1., .5, .5)* S(.61, .35,d);\n    col.rbg = mix(col.rbg, toungeCol, S(.21, .2, length(vec2(uv.x, uv.y-(abs(uv.x)*((.2 - abs(uv.x))/.2))) + vec2(.0, .5))));\n    \n    //outline\n    col.rbg = mix(col.rbg, vec3(.9, .3, .5), S(.46, .48, d));\n    return col;\n    \n}\n\nvec4 Eye(vec2 uv, vec2 mouse, float side, float state){\n    \n    uv -= .5;\n    uv.x *= side;\n    vec4 col = vec4(1.);\n    \n    float d = length(uv);\n    \n    \n    col.a = S(.5, .49, d);\n    \n    \n    \n    float edgeShadow = S(.25, .5, d)*.5;\n    edgeShadow *= edgeShadow;\n    col.rgb = mix(col.rgb, vec3(.3, .3, .9), edgeShadow);\n    \n    //outline\n    col.rbg = mix(col.rbg, vec3(.9, .3, .5), S(.46, .49, d));\n    \n    //top yellow part\n    float yellowShadow = S(.5, .49, d) * S(.47, .48, length(vec2(uv.x+.02, uv.y+.08)));\n    \n  \n    \n    col.rbg = mix(col.rbg, rbg(250.,70.,160.), yellowShadow);\n    \n     //top black part\n    float blackShadow = S(.49, .48, length(vec2(uv.x+.01, uv.y+.04))) * S(.47, .48, length(vec2(uv.x+.02, uv.y+.08)));\n    col.rbg = mix(col.rbg, vec3(0), blackShadow);\n    \n    \n    \n    \n    \n    //inside eye\n     vec2 cMouse = mouse;\n     cMouse.y = clamp(cMouse.y, -.18, .13);\n     cMouse.x *= .25;\n     \n     d = length(uv - cMouse);   \n    \n     vec3 irisColor = vec3(.4, .8, 1.);\n    \n     col.rgb = mix(col.rgb, vec3(.0), S(.3, .29, d));\n     \n     irisColor *= S(.6, .1, d);\n     irisColor *= irisColor;\n    \n     col.rgb = mix(col.rgb, irisColor, S(.28, .26, d));\n     \n     float pupilSize = S(mix(.15, .28, state), mix(.12, .26, state), d);\n     col.rgb = mix(col.rgb, vec3(0), pupilSize);\n     \n     //blicks on eyes\n     uv.x *= side;\n     vec2 blickUv = uv;\n     blickUv.x += (sin(iTime+blickUv.y*15.)*.02)*state;\n     blickUv.y += (sin(iTime+blickUv.x*15.)*.02)*state;\n     col.rgb = mix(col.rgb, vec3(1), S(.15, .09, length(blickUv - vec2(.13, .12))));\n     col.rgb = mix(col.rgb, vec3(1), S(.1, .03, length(blickUv + vec2(.13, .12))));\n   \n    \n    \n     //lash part\n     d = length(uv);\n    float lash = S(.5, .49, d) * (S(.5, .48, -uv.y+uv.x*.3+(state+.5)));\n    col.rbg = mix(col.rbg, rbg(250.,70.,160.), lash);\n    \n    return col;\n}\n\nvec4 Head(vec2 uv){\n    vec4 col = vec4(rbg(250.,172.,14.), 1.0);\n    \n    float d = length(uv);\n    \n    col.a = S(.49, .48, d);\n    \n    float edgeShadow = remap01(.35, .5, d);\n    edgeShadow *= edgeShadow;\n    col.rbg *= 1. - edgeShadow*.5;\n    \n    //outline\n    col.rbg = mix(col.rbg, vec3(.9, .3, .5), S(.47, .48, d));\n    \n    //inside highlight\n    float highlight = S(.41, .40, d)*.5;\n    \n    highlight *= remap(.41, .0, .75, .0, uv.y);\n    \n    col.rbg = mix(col.rbg, vec3(1.), highlight);\n    \n    //cheek color\n    d = length(vec2(uv.x-.23, uv.y+.15));\n    float cheek = .2*(S(.20, .05, d) + .1*S(.19, .18, d));\n    col.rbg = mix(col.rbg, vec3(1., .1, .1), cheek);\n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv, vec2 mouse){\n    vec4 col = vec4(.0);\n    \n    float state = sin(iTime)*.5 + .5;\n    \n    float side = sign(uv.x);\n    \n    vec4 head = Head(vec2(abs(uv.x), uv.y));\n    \n    col = mix(col, head, head.a);\n    \n    vec4 eyes = Eye(mapVec(vec2(.03, -.05), vec2(.37, .3), vec2(abs(uv.x), uv.y)), mouse, side, state);\n    \n    col = mix(col, eyes, eyes.a);\n    \n    vec4 mouth = Mouth(mapVec(vec2(-.35, -.4), vec2(.35, -.1), uv), state);\n    \n    col = mix(col, mouth, mouth.a);\n    \n    vec4 brow = Brow(mapVec(vec2(.3, .4), vec2(.02, .3), vec2(abs(uv.x), uv.y)), state);\n    \n    col = mix(col, brow, brow.a);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //mouse\n    vec2 m = iMouse.xy/iResolution.xy;\n    m -= .5;\n    \n    uv -= m*(.25 - dot(uv, uv));\n    \n    // Time varying pixel color\n    vec4 smiley = Smiley(uv, m);\n\n    // Output to screen\n    fragColor = smiley;\n}","name":"Image","description":"","type":"image"}]}