{"ver":"0.1","info":{"id":"ttcSR8","date":"1580355049","viewed":305,"name":"Shitty Heat Distortion","username":"gigaherz","description":"Distorts an image to make it appear like there's heat in the air","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["heateffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\nfloat snoise_octaves(vec2 uv, int octaves, float alpha, float beta, vec2 gamma, float delta) {\n    vec2 pos = uv;\n    float t = 1.0;\n    float s = 1.0;\n    vec2 q = gamma;\n    float r = 0.0;\n    for(int i=0;i<octaves;i++) {\n        r += s * snoise(pos + q);\n        pos += t * uv;\n        t *= beta;\n        s *= alpha;\n        q *= delta;\n    }\n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float dx = 0.0033*snoise_octaves(uv*2.0+iTime*vec2(0.00323,0.00345),9,0.85,-3.0,iTime*vec2(-0.0323,-0.345),1.203);\n    float dy = 0.0023*snoise_octaves(uv*2.0+3.0+iTime*vec2(-0.00323,0.00345),9,0.85,-3.0,iTime*vec2(-0.0323,-0.345),1.203);\n        \n    vec2 uv1 = uv + vec2(dx,dy);\n    \n    vec3 col = texture(iChannel0, uv1).rgb;\n    \n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}