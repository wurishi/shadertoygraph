{"ver":"0.1","info":{"id":"WdSBDm","date":"1590135511","viewed":141,"name":"waterCaustics","username":"mailko","description":"water caustics","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","water","caustics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIZE 8.0\nvec2 hash22(vec2 p)\n{\n    p = vec2 (\n        dot(p, vec2(127.1, 311.7)),\n        dot(p, vec2(269.5, 183.3))\n    );\n    return -1.0 + 2.0 * fract(sin(p) * 43758.5453123);\n}\n\nfloat wnoise(vec2 p, float time)\n{\n    vec2 pi = floor(p);\n    vec2 pf = p - pi;\n    float minDistance = 5.0;\n    \n    //九宫格中取最小距离\n    for(int i = -1; i <= 1; i++)\n    {\n    \tfor(int j = -1; j <=1; j++)\n        {\n            vec2 offset = vec2(i, j);\n            vec2 rand = hash22(pi + offset);\n           \tvec2 move = 0.5 + 0.5 * sin(rand * time);\n            move = pi + offset + move - p;\n            float distance = dot(move, move) * 1.0;\n            if(distance < minDistance)\n            {\n                minDistance = distance;\n            }\n        }\n    }\n    return minDistance;\n}\n\nfloat noise_sum(vec2 p)\n{\n    float f = 0.0;\n    p = p / 2.0;\n    f += 1.0000 * wnoise(p, iTime); p = 2.0 * p;\n    //f += 0.5000 * wnoise(p, iTime); \n    p = 2.0 * p;\n    f += 0.2500 * wnoise(p, iTime); p = 2.0 * p;\n    //f += 0.1250 * wnoise(p, iTime); \n    p = 2.0 * p;\n    f += 0.0625 * wnoise(p, iTime); p = 2.0 * p;\n\n   return f;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * SIZE;\n    float val = noise_sum(uv);\n    fragColor = vec4(0.2, 0.6, 1, 1) * vec4(val, val, val, 1.0);\n}","name":"Image","description":"","type":"image"}]}