{"ver":"0.1","info":{"id":"lcS3zz","date":"1703747563","viewed":19,"name":"Antialiased Checkerboard","username":"x5lcfd","description":"Antialiased checkerboard, from OpenGL Shading Languages (orange book).","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ENABLE_FUZZ\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mpos = (iMouse.xy/iResolution.xy);\n    \n    vec2 lines = round(clamp(1.0-abs(uv-mpos)*iResolution.xy/2.0,0.0,1.0));\n    vec2 split = round(clamp(1.0-(uv-mpos)*iResolution.x/2.0,0.0,1.0));\n    \n    float freq = 12.0;\n    \n    vec3 color1 = vec3(.8);\n    vec3 color2 = vec3(.2);\n    vec3 avg_col = vec3(.5);\n\n    vec2 fw = mix(vec2(.0), fwidth(uv), split.x);\n    \n    vec2 fuzz = fw * freq * 1.0;\n    float fuzz_max = max(fuzz.s, fuzz.t);\n\n    vec2 check_pos = fract(uv * freq);\n    \n    vec3 color = vec3(.0);\n\n    vec2 p = vec2(.0);\n    if (fuzz_max < 0.5) {\n        p = smoothstep(vec2(.5), fuzz+vec2(.5), check_pos) + \n            1.0 - smoothstep(vec2(.0), fuzz, check_pos);\n        \n        color = mix(color1, color2, p.x * p.y + (1.0-p.x)*(1.0-p.y));\n        color = mix(color, avg_col, smoothstep(.125, .5, fuzz_max));\n    } else {\n        color = avg_col;\n    }\n    \n    color = mix(color, vec3(lines.x, .0, .0), lines.x);\n    // color = vec3(uv+fuzz, 0.);\n    \n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}