{"ver":"0.1","info":{"id":"M3lfDs","date":"1729092768","viewed":30,"name":"Fork Damaged VC micklemack 775","username":"micklemacklemore","description":"Simulating a damaged VCR playing a video","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float time = iTime / 10.;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    warpedUv.y = tan(0.0001*uv.y + iTime); \n    \n    // not for hw but i kind of like it, it looks like a hydraulic press\n    float distort = 2. * smoothstep(0.,1.,sin(uv.y+iTime)); \\\n    \n    warpedUv = mix(uv, warpedUv, distort); \n    \n    vec2 offset1 = vec2(0.000, 0.);\n    vec2 offset2 = vec2(0.012, 0.);\n    vec2 offset3 = vec2(0.024, 0.);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}