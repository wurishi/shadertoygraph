{"ver":"0.1","info":{"id":"WdSXzh","date":"1552836008","viewed":60,"name":"Another Mandelbrot dfhshf","username":"AndyDS","description":"meme","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI = 3.1415926\n\nint iterations( in vec2 coords ) {\n\tint iters = 21;\n    vec2 iter = coords;\n    for (int i = 0; i < 20; i++) {\n        if (length(iter) > 2.) iters = min(iters,i);\n    \titer = vec2(iter.x*iter.x - iter.y*iter.y, 2.*iter.x*iter.y) + coords;\n    }\n    return iters;\n}\n\nvec3 iterToColour( in int iters ) {\n    vec3 r = vec3(0.);\n    r.x = sin( float(iters)+(1.5*iTime) )/2. + 1.;\n    r.y = cos( float(iters)+(1.3*iTime) )/2. + 1.;\n    r.z = -1.*sin( float(iters)+(.9*iTime) )/2. + 1.;\n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y*1.3;\n\n    uv = uv*2. - vec2(2.3,1.3);\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(vec3(iterToColour(iterations(uv))),1.0);\n}","name":"Image","description":"","type":"image"}]}