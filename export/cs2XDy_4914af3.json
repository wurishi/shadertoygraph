{"ver":"0.1","info":{"id":"cs2XDy","date":"1670837622","viewed":299,"name":"Live Code at Le Sample 18/11/22","username":"NuSan","description":"Shader coded live during a performance at Le Sample (18 november 2022)\nOnly parts in map and march function where coded live, the rest was a pre-made template","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","live"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Shader coded live during a performance at Le Sample (18 november 2022)\n// Only parts in map and march function where coded live, the rest was a pre-made template\n\nfloat time;\n\n//////// FUNCTIONS ////////\nmat2 rot(float a) {float ca=cos(a); float sa=sin(a); return mat2(ca,sa,-sa,ca);}\nfloat box(vec3 p, vec3 s) {p=abs(p)-s; return max(p.x,max(p.y,p.z));}\nfloat cyl(vec3 p, float r, float h) {return max(abs(p.y)-h,length(p.xz)-r);}\nfloat rep(float p, float s) {return (fract(p/s+0.5)-0.5)*s;}\nvec2 rep(vec2 p, vec2 s) {return (fract(p/s+0.5)-0.5)*s;}\nvec3 rep(vec3 p, vec3 s) {return (fract(p/s+0.5)-0.5)*s;}\nfloat rnd(float t) {return fract(sin(t*452.714)*352.654);}\nvec3 rnd3(vec3 t) {return fract(sin(t.xyz*452.714+t.yzx*741.969+t.zxy*264.878)*352.654);}\nfloat curve(float t, float d) {t/=d; return mix(rnd(floor(t)), rnd(floor(t)+1.0), pow(smoothstep(0.0,1.0,fract(t)),10.0));}\nfloat curvetime(float t, float d) {t/=d; return mix(floor(t)+rnd(floor(t)), floor(t)+1.0+rnd(floor(t)+1.0), pow(smoothstep(0.0,1.0,fract(t)),10.0));}\n\nfloat map(vec3 p) {\n  p.xz *= rot(time*0.3);\n  p.yz *= rot(sin(time*0.4)*1.2);\n  \n  vec3 bp=p;\n  \n  p.xz =abs(p.xz)-sin(time-p.y*0.1)-1.2-curve(time, 0.9)*10.0;\n  float d=cyl(p, 0.3, 40.0);\n  \n  vec3 p2=p;\n  p2.y=rep(p2.y-curvetime(time, 0.5)*20.0, 0.7);\n  p2.xz *= rot(curvetime(time-p.y*0.1, 1.3));\n  d=max(d, box(p2, vec3(0.5,0.3,0.5)));\n  d=min(d, box(p2, vec3(0.353,0.1,0.35)));\n  d=min(d, length(p.xz)-0.2);\n  \n  p.y=rep(p.y-curvetime(time-length(bp.xz)*0.3, 1.2)*30.0, 10.0);\n  p.y=abs(p.y);\n  float d2=length(p)-0.8;\n  float t=time*0.3;\n  for(float i=0.0; i<3.0; ++i) {\n     p.xz *= rot(p.y*0.01+curvetime(t+i*.3,1.2));\n    p.yz *= rot(p.x*0.03+sin(time*0.4+curve(t+i*.1, 1.3))*1.2);\n    p=abs(p)-0.7 - sin(time*0.2+bp.y*0.14)-0.7 - pow(curve(time, 0.4),5.0);\n  }\n  d2=min(d2, box(p,vec3(0.1,0.3,0.4)));\n  d2=min(d2, length(p.xz)-0.1);\n  d2=min(d2, length(p.yz)-0.1);\n  d2=min(d2, length(p.xy)-0.1);\n  d2=max(abs(d2), 0.01);\n  d=min(d, d2);\n  return d;\n}\n\n//////// MAP ////////\nvec3 norm(vec3 p, float o) {vec2 off=vec2(o,0); return normalize(map(p)-vec3(map(p-off.xyy), map(p-off.yxy), map(p-off.yyx)));}\nfloat gao(vec3 p, vec3 n, float d) {return smoothstep(0.0,1.0,map(p+n*d)/d)*0.5+0.5;}\nfloat tao(vec3 p, vec3 n) {return gao(p,n,0.25)*gao(p,n,0.5)*gao(p,n,1.0);}\nfloat fog(vec3 p, vec3 s) {return 1.0-clamp(length(p-s)/100.0,0.0,1.0);}\nvec2 grid(vec2 uv, vec2 s) {return floor(uv*s)/s;}\nfloat lamb(vec3 n, vec3 l) {return max(0.0, dot(n,l));}\nfloat spec(vec3 n, vec3 r, vec3 l) {return max(0.0, dot(n,normalize(l-r)));}\nfloat fre(vec3 n, vec3 r, float po) {return pow(1.0-abs(dot(n,r)),po);}\n\n//////// LIGHTING ////////\nvec3 lum(vec3 p, vec3 s, vec3 r) {\n  vec3 col=vec3(0);\n  float ff=fog(p,s);\n  vec3 n=norm(p,0.01);\n  vec3 l=normalize(vec3(-1,3,-2));\n  float ao=tao(p,n);\n  col += lamb(n,l) * ff * ao * (0.5 + pow(spec(n,r,l),10.0));\n  col += fre(n,r,3.0) * vec3(0.3,0.5,1) * ff * ao;\n  return col;\n}\n\nvec4 march(vec2 uv) {\n  vec3 col=vec3(0);\n  \n  time=mod(iTime*0.7, 300.0);\n  \n  uv.y -= curve(time, 0.2)*0.2;\n  if(curve(time*2.0-abs(uv.y), 0.3)<0.3) uv=grid(uv, vec2(60.0));\n  if(rnd(floor(time*0.8))<0.4) uv.x=abs(uv.x);\n  \n  \n  time += rnd(floor((time-length(uv))*0.1))*300.0;\n  time += rnd(7.3+floor(0.5+(time-abs(uv.x))*0.1))*300.0;\n  \n  vec3 s=vec3(curve(time,1.2)*10.0-5.0,0,-20);\n  vec3 r=normalize(vec3(uv, curve(time, 0.7)+0.5));\n  \n  vec3 p=s;\n  for(int i=0; i<200; ++i) {\n    float d=map(p);\n    if(d<0.001) {\n      break;\n    }\n    if(d>100.0) break;\n    p+=r*d;\n    col += vec3(1.0+sin(time*.2+p.y*0.1),.5,0.3)*0.05/(0.01+length(p));\n  }\n  \n  col += lum(p,s,r);\n  \n  col.xz *= rot(time*.3+abs(uv.x));\n  col.yz *= rot(time*.4);\n  col=abs(col);\n  \n  col *= 1.0+curve(time, 0.1)*0.3,\n  col *= 1.2-length(uv);\n  col = mix(col, vec3(dot(col, vec3(0.333))), curve(abs(uv.x)-length(p-s)*0.02, 0.3)*2.0);\n  col = smoothstep(0.0,1.0,col);\n  col = pow(col, vec3(0.4545));\n  \n  return vec4(col, 1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n  \n  \n  fragColor = march(uv);\n}","name":"Image","description":"","type":"image"}]}