{"ver":"0.1","info":{"id":"WtdSzr","date":"1580306279","viewed":366,"name":"geometry mixes","username":"lojkofob","description":"some experiments with simple geometries and image mixing transitions","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float kx = 1.5;\nfloat ky = 0.5;\n\nfloat q = 3.0;\nfloat part = 0.0;\n\nint geomType =4;\nint inv = 0;\nvec2 scfix;\n\nfloat scratio;\nvec2 uv;\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\n\nfloat lineMix()\n{\n    return smoothstep( 0.1, 0.0, fract( q* kx * uv.x / scratio + q * ky * uv.y ) - part );\n}\n\nfloat circleMix()\n{\n    return part * part + smoothstep( 0.1, 0.0, fract( part * 0.9 * q * distance( uv, scfix * 0.5 ) ) - part + 0.1);\n}\n\n\nfloat spiralMix()\n{\n    vec2 m = uv - scfix * 0.5;\n    float l = length(m);\n    float a = atan(m.x, m.y);\n\tfloat v = sin(6.28318530718 * q * (pow(l, kx)- part) - a) * cos( ky * a );\n    return clamp( v * part, part * part, 1.0) / l;\n}\n\n\nfloat quadMixH()\n{\n\treturn 1.0 - (floor( kx * q * (uv.x - 5.0 * (part - 0.4))) + floor(ky * q * uv.y));\n}\n\nfloat quadMixV()\n{\n\treturn 1.0 - (floor( kx * q * uv.x ) + floor(ky * q * (uv.y - 5.0 * (part - 0.4))));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    scratio = iResolution.x / iResolution.y;\n    scfix = vec2(scratio, 1.0);\n    vec2 px = vec2( 1.0 /iResolution.x, 1.0 / iResolution.y);\n    part = clamp( fract( (iTime + 1.0) / 2.0 ) * 1.2 - 0.1, 0.0, 1.0 );\n    if (inv == 1) \n        part = 1.0 - part;\n     \n    uv = scfix * fragCoord/iResolution.xy;\n    \n    float pp;\n    if (geomType == 0)\n    \tpp = lineMix();\n    else \n    if (geomType == 1)\n        pp = quadMixH();\n    else \n    if (geomType == 2)\n        pp = quadMixV();\n    else \n    if (geomType == 3)\n        pp = circleMix();\n    else\n    if (geomType == 4)\n        pp = spiralMix();\n            \n                   \n    pp = mix(0.0, 1.0, clamp(pp, 0.0, 1.0));    \n\n        \n    if (inv == 1) pp = 1.0 - pp;\n        \n        \n    \n        \n    \n    vec4 c2 = texture( iChannel1, uv+ 10.0 * pp * px );\n        uv = rotateUV(uv, pp* 0.1);\n        vec4 c1 = texture( iChannel0, uv );\n       \n    // fragColor = vec4(pp, pp, pp, 1.0);\n    fragColor = mix(c1, c2, pp );\n}\n","name":"Image","description":"","type":"image"}]}