{"ver":"0.1","info":{"id":"ctGSWV","date":"1686344222","viewed":110,"name":"ss 6/9/23","username":"swindesr","description":" ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["wave","line","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\nconst float TWO_PI = 6.28318;\n\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.821,0.328,0.242);\n    vec3 b = vec3(0.659,0.481,0.896);\n    vec3 c = vec3(0.612,0.340,0.296);\n    vec3 d = vec3(2.820,3.026,-0.273);\n    return a + b*cos(TWO_PI*(c*t+d));\n}\n\nfloat foo (float x, float t) {\n    float p1 = sin(0.4 * t + x * 2.) * 0.6 + 0.1;\n    p1 *= cos(x);\n    return abs(p1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv; \n    vec3 col = vec3(0.0);\n    float minh = 0.04;\n\n    float offset = foo(uv.x, iTime * 4.);\n    float y = + uv.y + sin(uv.x * 25. + iTime) * 0.02;\n    float d = smoothstep(-minh - offset, 0.0, y) - smoothstep(0.0, minh + offset, y);\n\n    d = pow(d, 1.5);\n    d = 1. - d;\n    d = pow(0.07 / d, 0.8);\n    col += palette(iTime * 0.3 + pow(length(uv0), 1.2) * 0.2) * d;\n    \n    \n    // Output to screen\n    fragColor = vec4(col ,1.0);\n}","name":"Image","description":"","type":"image"}]}