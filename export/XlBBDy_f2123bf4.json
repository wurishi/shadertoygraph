{"ver":"0.1","info":{"id":"XlBBDy","date":"1532841582","viewed":214,"name":"Animated Smiley","username":"leacasas","description":"Practice, following a tutorial and changing a few things along the way","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["shader","smile","smiley","face","emoji"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0.0, 1.0);\n\nfloat remap0to1(float a, float b, float t)\n{\n    return sat((t - a) / (b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t)\n{\n    return sat(((t - a) / (b - a)) * (d - c) + c);\n}\n\nvec2 positionWithin(vec2 uv, vec4 rect)\n{\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n}\n\nvec4 Eyebrow(vec2 uv)\n{\n    // Renormalizing UV and deforming it\n    float y = uv.y;\n    uv.y += uv.x * .8 - .3;\n    uv.x -= .1;\n    uv -= .5;\n    \n    vec4 col = vec4(0.);\n    \n    float blur = 0.1;\n    \n    // Eyebrows\n    uv.y += .15;\n    float d1 = length(uv);\n    float s1 = S(.42, .43 - blur, d1);\n    \n    float d2 = length(uv - vec2(.1, -.2) * .65);\n    float s2 = S(.5, .5 - blur, d2);\n    \n    float browMask = sat(s1 - s2);\n    \n    // Gradient\n    float colMask = remap0to1(.45, .9, y) * .4;\n    colMask *= S(.55, .9, browMask);\n    \n    vec4 browCol = mix(vec4(.42, .25, .15, 1.), vec4(1., .8, .33, 1.), colMask);\n    \n\t// Shadow\n    uv.y += .05;\n    blur += .1;\n    d1 = length(uv);\n    s1 = S(.45, .45 - blur, d1);\n    d2 = length(uv - vec2(.1, -.2) * .7);\n    s2 = S(.5, .5 - blur, d2);\n    float shadowMask = sat(s1 - s2);\n   \tcol = mix(col, vec4(0.,0.,0.,1.), S(.0, 1., shadowMask)*.3);\n    \n    col = mix(col, browCol, S(.2, .37, browMask));\n    \n    return col;\n}\n\nvec4 Eye(vec2 uv, float side, vec2 m)\n{\n    uv -= 0.5; // Renormalizing UV\n    uv.x *= side;\n    float d = length(uv);\n    \n    vec4 col = vec4(1.0); // Starting as white\n    \n    //Globula\n    vec4 lightBlue = vec4(0.3, 0.5, 1.0, 1.0);\n    col = mix(col, lightBlue, S(0.15, 0.8, d) * 0.5);\n    col.a = S(0.5, 0.48, d);  \n    \n    //Eye Shadow\n    col.rgb *= 1.0 - S(0.45, 0.5, d) * 0.5 * sat(- uv.y - uv.x * side);\n    \n    d = length(uv - m * .5);//tracking mouse position with everything below\n    \n    //Edge of iris\n    vec3 edgeColor = vec3(0.0, 0.3, 0.9);\n    col.rgb = mix(col.rgb, edgeColor, S(0.3, 0.28, d));\n    \n    //Iris\n    lightBlue.rgb *= 1.0 + S(0.35, 0.04, d);\n    col.rgb = mix(col.rgb, lightBlue.rgb, S(0.28, 0.26, d));\n    \n    //Pupil\n    d = length(uv - m * .58); // overriding mouse track\n    col.rgb = mix(col.rgb, vec3(0.0), S(0.15, 0.12, d));\n    \n    //Highlight\n    float highlight1Position = length(uv - vec2(-0.12, 0.13));\n    float highlight2Position = length(uv - vec2(0.10, -0.187));\n    float highligthMask = S(0.09, 0.07, highlight1Position);\n    highligthMask += S(0.05, 0.04, highlight2Position);\n    vec3 highlightColor = vec3(1.0);\n    col.rgb = mix(col.rgb, highlightColor, highligthMask);\n    \n    \n    return col;\n}\n\nvec4 Mouth(vec2 uv)\n{\n    uv -= 0.5; // renormalizing uv\n    vec4 col = vec4(0.6, 0.25, 0.05, 1.0);//Mouth color\n    col *= S(0.8, 0.01, uv.y + 0.1);\n    \n    // Mouth\n    uv.y += 0.12;\n    uv.y *= 1.37;\n    uv.y -= uv.x * uv.x * 2.2;\n    float d = length(uv);\n    \n    // Teeth\n    vec2 teethPos = vec2(0.0, 0.6);\n    float teethMask = length(uv - teethPos);\n    vec3 teethColor = vec3(1.0) * S(0.6, 0.37, d);\n    col.rgb = mix(col.rgb, teethColor, S(0.4, 0.37, teethMask));\n    \n    // Tongue\n    float tongueMask = length(uv + vec2(0.0, 0.55));\n    vec3 tongueColor = vec3(1.0, 0.5, 0.5);\n    tongueColor *= 1.0 - S(0.6, 0.1, d) * 0.25;\n    col.rgb = mix(col.rgb, tongueColor, S(0.45, 0.4, tongueMask));\n    \n    col.a = S(0.5, 0.48, d);\n    \n    return col;\n}\n\nvec4 Head(vec2 uv)\n{\n    vec4 col = vec4(0.9, 0.65, 0.1, 1.0); // Dark yellow / light orange\n    \n    float d = length(uv);\n    \n    // Circle\n    col.a = S(0.5, 0.49, d);\n    \n    // Shading near the edges\n    float edgeShade = remap0to1(0.35, 0.5, d);\n    edgeShade *= edgeShade;\n    col.rgb *= 1.0 - edgeShade * 0.45;\n    \n    // Outline\n    vec3 outlineColor = vec3(0.55, 0.33, 0.05);\n    col.rgb = mix(col.rgb, outlineColor, S(0.475, 0.48, d));\n    \n    //Highlight\n    float highlightMask = S(0.41, 0.405, d);//Delimiting circle\n    highlightMask *= remap(0.41, -0.1, 0.7, 0.0, uv.y); //Gradient\n    highlightMask *= S(.18, .185, length(uv - vec2(.19, .07))); // Eyesocket\n    vec3 highlightColor = vec3(1.0);\n    col.rgb = mix(col.rgb, highlightColor, highlightMask);\n    \n    // Cheeks\n    vec2 offset = vec2(0.28, -0.17);\n    d = length(uv - offset);\n    float cheek = S(0.2, 0.01, d) * .5;\n    col.rgb = mix(col.rgb, vec3(0.9, 0.2, 0.1), cheek);\n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv, vec2 mousePosition)\n{\n    vec4 col = vec4(0.0);\n    float side = sign(uv.x);\n    uv.x = abs(uv.x); //mirroring through the vertical axis\n    \n    vec4 head = Head(uv);\n    \n    vec4 eyeRect = vec4(0.035, -0.09, 0.35, 0.23);\n    vec2 eyePos = positionWithin(uv, eyeRect);\n    vec4 eye = Eye(eyePos, side, mousePosition);\n    \n    vec4 mouthRect = vec4(0.3, -0.4, -0.3, -0.1);\n    vec2 mouthPos = positionWithin(uv, mouthRect);\n    vec4 mouth = Mouth(mouthPos);\n    \n    vec4 eyeBrowRect = vec4(0.03, 0.2, 0.4, 0.45);\n    vec2 eyeBrowPos = positionWithin(uv, eyeBrowRect);\n    vec4 eyeBrow = Eyebrow(eyeBrowPos);\n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    col = mix(col, eyeBrow, eyeBrow.a);\n    \n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 mousePosition = iMouse.xy / iResolution.xy;\n    mousePosition -= .5;\n    fragColor = Smiley(uv, mousePosition);\n}","name":"Image","description":"","type":"image"}]}