{"ver":"0.1","info":{"id":"McdGzs","date":"1712180912","viewed":14,"name":"2d figures based on their z-cord","username":"ArtemZh","description":"2d figures based on their z-cord, 2 moving one static","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2dtask"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    vec3 backgroundColor = vec3(1., 1., 1.);\n    \n\n    vec3 col = backgroundColor;\n\n    float aspectRatio = iResolution.x/iResolution.y;\n    uv.x *= aspectRatio;\n\n    float time = iTime;\n\n    float size1 = .3;\n    float size2 = .2;\n\n    vec2 pos1 = vec2(sin(time) * .5 + .5, cos(time * 0.5) * .5 + .5);\n    vec2 pos2 = vec2(cos(time * 1.5) * .3 + .5, sin(time) * .3 + .5);\n    vec2 pos3 = vec2(0.5, 0.5);\n\n    pos1.x *= aspectRatio;\n    pos2.x *= aspectRatio;\n    pos3.x *= aspectRatio;\n\n    float d1 = length(uv - pos1) - size1;\n    float d2 = length(uv - pos2) - size2;\n    float d3 = abs(uv.x - pos3.x) - 0.1; \n    if (d3 < 0.0) col = vec3(0.2, 1.0, 0.5); \n    else if (d2 < 0.0) col = vec3(1.0, 0.5, 0.2); \n    else if (d1 < 0.0) col = vec3(0.5, 0.8, 1.0); \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}