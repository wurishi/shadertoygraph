{"ver":"0.1","info":{"id":"csByR1","date":"1687386911","viewed":104,"name":"Ruidos en el planeta","username":"leosalvatierra","description":"noises","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise","ruidos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float PI = 3.1415926535897932384626433832795;\n    \n    vec2 c = (2.0*fragCoord-iResolution.xy)/min(iResolution.y,iResolution.x);\n\n    // Ajusta el valor de beat desde tu software de música\n    // Cuando un beat ocurre, incrementa este valor\n    float beat = 0.0; \n\n    // Parámetros basados en el tiempo para la animación\n    vec2 k = vec2(0.4*cos(iTime/2.0 + beat), 0.4*sin(iTime/2.0 + beat));\n\n    // Valores iniciales\n    vec2 z = c;\n    float m = dot(z,z);\n\n    // Conjunto de Mandelbrot\n    for(int i = 0; i < 256; i++)\n    {\n        if(m < 1024.0)\n        {\n            z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c + k;\n            m = dot(z,z);\n        }\n        else break;\n    }\n\n    // Color psicodélico\n    vec3 color = 0.5 + 0.5*cos( 3.0 + iTime + vec3(0.0, 0.6, 1.0) * m * 0.1 + beat * 2.0 );\n\n    fragColor = vec4( color, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}