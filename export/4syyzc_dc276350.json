{"ver":"0.1","info":{"id":"4syyzc","date":"1522738692","viewed":104,"name":"Side pulse","username":"eliemichel","description":"25 min live coding at Shader Showdown #6 in Paris","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sdSphere (vec3 p, float r) { return length(p) - r; }\n\nfloat map (vec3 pos) {\n  float scene = 1000.;\n  //pos = mod(pos, vec3(10.0)) - vec3(5);\n  pos.x *= 1. / (1. + pos.y);\n  scene = min(scene, sdSphere(pos, 1. + pos.x * (2.0 + 0.5 * sin(iTime * 1.5))));\n  return scene;\n}\n\nvec3 lookAt (vec3 eye, vec3 at, vec2 uv) {\n  vec3 forward = normalize(at - eye);\n  vec3 right = normalize(cross(forward, vec3(0,1,0)));\n  vec3 up = normalize(cross(right, forward));\n  return normalize(forward + right * uv.x + up * uv.y);\n}\n\nfloat grain(vec2 uv) {\n  return fract(sin(dot(uv, vec2(31.492, 271.0))));\n}\n\nvec3 mainmain(vec2 uv) {\n  vec3 eye = vec3(0,1,-3);\n  vec3 ray = lookAt(eye, vec3(0), uv);\n  vec3 pos = eye;\n  float shade = 0.;\n  for (float i = 0.; i <= 1.; i += 1./30.) {\n    float dist = map(pos);\n    if (dist < .001) {\n      shade = 1.-i;\n      break;\n    }\n    pos += dist * ray;\n  }\n  vec3 color = vec3(1., 0.5, 0.);\n  color.r += 0.2 * sin(1.0*iTime);\n  color += 0.5*dot(vec3(0.5, exp(pow(sin(iTime), 2.)), 0.5), pos);\n    \n  color.z += 0.6*grain(uv + grain(uv) * vec2(1.0, 2.0+sin(100.*iTime)));\n    \n  float s = sin(iTime);\n  float c = cos(iTime);\n  vec3 c2 = color;\n  c2.r = s * color.g + c * color.r;\n  c2.g = -s * color.r + c * color.g;\n  color += (0.2) * c2;\n  color *= shade;\n  return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n  vec3 c = vec3(0);\n    \n  float x = sin(2.*iTime);\n  float y = sin(2.315*iTime);\n  float r = pow(10., -2.-2.*(1.-pow(x*x, 5.) - pow(y*y, 5.)));\n    \n  c += mainmain(uv+vec2(r, r));\n  c += mainmain(uv+vec2(r, -r));\n  c += mainmain(uv+vec2(-r, r));\n  c += mainmain(uv+vec2(-r, -r));\n  c /= 4.;\n  fragColor = vec4(c, 1);\n}\n","name":"Image","description":"","type":"image"}]}