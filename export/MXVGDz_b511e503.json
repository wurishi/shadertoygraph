{"ver":"0.1","info":{"id":"MXVGDz","date":"1717545319","viewed":112,"name":"Twisted Grid","username":"itishappy","description":"twisted grid","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float grid(vec2 r, float s) {\n    vec2 g = 8. * (1. - 2. * abs(mod(s*r,1.) - vec2(.5)));\n    return smoothstep(1., 0., min(g.x,g.y));\n}\n\nmat2 rot(float a) {\n    return mat2(cos(a),-sin(a),sin(a),cos(a));\n}\n\nvoid mainImage( out vec4 col, in vec2 coord )\n{\n    vec2 res = iResolution.xy,\n         r = (2. * coord - res) / sqrt(res.x * res.y);\n\n    float n = 16.,\n          g = 0.,\n          t, a, f;\n    for (float i = 0.; i < 1.; i += 1./n) {\n        t = mod(.1 * iTime + i,1.);\n        a = 3.1415*t;\n        f = sin(a)*sin(a);\n        g = max(g, f * grid(rot(.5 * a) * r, exp(2.5*t+1.)));\n    }\n\n    col.xyz = g * (0.5 + 0.5*cos(iTime+r.xyx+vec3(0,2,4)));\n}","name":"Image","description":"","type":"image"}]}