{"ver":"0.1","info":{"id":"XXc3WB","date":"1729853575","viewed":24,"name":"Atelier 28/05/24","username":"Stenator","description":"Atelier","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["atelier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).xyz;\n    //col= vec3(rand());\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define sat(a) clamp(a, 0., 1.)\n\nfloat hash11(float rand){\n    return fract(sin(rand*487.45)*418.4644);\n}\n\nfloat _seed;\n\nfloat rand(){return hash11(_seed++);} // le ++ augmente la seed, each call\n\n\nfloat map(vec3 p)\n{\n    float acc = length(p)-1.; \n\n    vec3 pt = p-vec3(-2.5,0.,2.);\n    float rep = .5;\n    float id = floor((pt.z+rep*.5)/rep);\n    pt.x += (sin(pt.y+id*.1+iTime*.5)*.5+\n    sin(pt.y*2.3)*.2+\n    sin(pt.y*5.3)*.05)\n    *pow(sat(pt.y), .35)\n    ;\n    pt.z = mod(pt.z+rep*.5,rep)-rep*.5;\n    float tube = length(pt.xz)-0.01;\n    \n    acc = min(acc, tube);\n    \n    float ground = p.y;\n    acc = min(acc, ground);\n\n    return acc;\n}\n\nvec3 getNorm(vec3 p)\n{\n    vec2 e = vec2(0.01, 0.);\n    return normalize(vec3(map(p))-vec3(map(p-e.xyy), map(p-e.yxy), map(p-e.yyx)));\n}\n\nfloat trace(vec3 ro, vec3 rd)\n{\n    vec3 p = ro;\n    for (int i = 0; i < 128; ++i)\n    {\n        float d = map(p);\n        float totDist = distance(p, ro);\n        if (totDist > 30.)\n            return -1.;\n        if (d < 0.01)\n        {\n            return totDist;\n        }\n        p+= d*rd;\n    }\n    return -1.;\n}\n\nvec3 getMat(vec3 p, vec3 n)\n{\n    vec3 col = vec3(1.)*(1.-sat(p.z/7.));\n    if (p.y < 0.01)\n        col = vec3(.5);\n    //col = n*.5+.5;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv=(fragCoord-.5*iResolution.xy)/iResolution.xx;\n    \n    _seed= iTime+texture(iChannel0, uv).x;\n    vec3 col = 2.*vec3(0.09f, 0.09f, 0.09f)*pow((1.-sat(length(uv))), 2.);\n    vec3 ro = vec3(-5.,1.,-10.);\n    vec2 off= vec2((rand(), rand())-.5)*.8;\n    ro.xy += off*.11; //faire un distance pour blur les bords\n    vec3 rd = normalize(vec3(uv, 1.));\n    \n    rd.xz *= rot(-.2);\n    rd.yz *= rot(.1);\n    \n\n\n    float d = trace(ro, rd);\n    if (d > 0.)\n    {\n        vec3 p = ro+rd*d;\n        vec3 n = getNorm(p);\n        col = getMat(p, n);\n        vec3 aodir = normalize(vec3(rand(),rand(),rand())-.5);\n        aodir *= sign(dot(aodir, n));\n        float dao = trace(p+n*.01,aodir); //here l'ao\n        if(dao >0. && dao <.6)\n            col *=.2;\n            \n        vec3 lpos = vec3(0.,5.,0.)+normalize(vec3(rand(),rand(),rand())-.5)*.09;\n        vec3 shadowrd= normalize(lpos-p);\n        \n        //point light/ rect light with random ray from pos\n        float distshadow = trace(p+0.01, shadowrd);\n        if( distshadow >0.&& distshadow < distance(lpos,p)){\n            col*=0.0;\n        }\n        \n    }\n    //col= vec3(rand());\n    col= mix(col, texture(iChannel1,ouv).xyz,.9);\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}