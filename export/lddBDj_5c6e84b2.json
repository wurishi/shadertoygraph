{"ver":"0.1","info":{"id":"lddBDj","date":"1526832068","viewed":157,"name":"Dellen Tartan r2","username":"xinux","description":"https://www.tartanregister.gov.uk/tartanDetails?ref=11271\nsmoothened & optimized. \nhalfpattern() is easily editable to create new patterns :) ","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["tartan","kilt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nconst vec3 red = vec3(0.680,0.129,0.123);\nconst vec3 green = vec3(0.000,0.150,0.000);\nconst vec3 white = vec3(0.910,0.910,0.910);\n\n// thanks to mercury (hg_sdf)\nvoid pR(inout vec2 p, float a) {\n\tp = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\nfloat line(vec2 p, inout float i, float count)\n{\n    float v = step(-p.y, -i) * step(p.y, i+count);\n    i += count;\n    \n    v *= min(1., abs(sin(p.y * PI)) + 0.2); // smooth horizontal skip\n    \n    float lc = fract((p.x + floor(p.y)) * (1. / 6.)); // local x coordinate\n    v *= clamp(abs(lc - 0.5) - 0.15, 0., 0.2) * 5.; // smooth diagonal skip\n    \n    return v;\n}\n\nvoid halfpattern(vec2 p, inout vec3 c)\n{\n    float i = 0.;\n    c += line(p, i, 2.) * white;\n    i += 4.;\n    c += line(p, i, 25.) * red;\n    c += line(p, i, 5.) * green;\n    c += line(p, i, 12.) * red;\n    \n}\n\nvoid pattern(vec2 p, inout vec3 c)\n{\n    halfpattern(p, c);\n    p = vec2(-p.x+1., -p.y);\n    halfpattern(p, c);\n}\n\nfloat overlay(vec2 p)\n{\n    float ltrbox = step(0.35, abs(p.y));\n    float vignette = \n        smoothstep(0.5, 1.2, abs(p.x)) + \n        smoothstep(0.2, 0.6, abs(p.y));\n    float ambient = sin(iTime * 0.4) * 0.05;\n    \n    return 0. -ltrbox -vignette +ambient;\n}\n\nfloat bgtexture(vec2 p)\n{\n    float bg = 0.;\n    bg += fract((p.x + p.y) * 0.5) * 0.05;\n    bg += fract(p.x * 0.5) * 0.05;\n    return bg;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p = (fragCoord.xy - (iResolution.xy * 0.5)) / iResolution.yy;\n    float ol = overlay(p);\n    \n    // animation\n    pR(p.xy, -0.4 + iTime * 0.02);\n    p *= sin(iTime * 0.3 + 1.) * 0.5 + 1.3;\n    p.x += iTime * 0.05;\n    p.y -= iTime * 0.02;\n    p.y += sin(iTime * 0.4 + p.x * 1.) * 0.04;\n    p.x += sin(iTime * 0.3 + p.x + p.y) * 0.02;\n\n    p = fract(p); //repeat\n    \n    vec3 c = vec3(0.);\n    \n    p *= 300.;\n    c += bgtexture(p);\n    p -= 100.;\n    pattern(p, c);\n    p = vec2(-p.y, -p.x) - 1.;\n    pattern(p, c);\n    \n    c *= 1. + ol;\n    \n    fragColor = vec4(c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}