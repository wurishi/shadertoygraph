{"ver":"0.1","info":{"id":"XtKSDm","date":"1484632848","viewed":784,"name":"fresnel distortion","username":"aferriss","description":"Curious about how you might anti-alias the edges of each ring. The jagged edges are most visible when you fullscreen.\nMouse to move center. Fun can be had by playing with the amount of rings and the div float.","likes":9,"published":3,"flags":0,"usePreview":1,"tags":["distortion","rings","fresnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float ring = 5.0;\nconst float div = 0.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    float aspect = res.x / res.y;\n\tvec2 uv = fragCoord.xy / res;\n    float t = iTime * 0.05;\n    \n \tvec2 p = vec2(uv.x * aspect, uv.y);\n    \n    float r = distance(p, vec2(iMouse.x / res.x * aspect, iMouse.y / res.y));\n\tr -= t;\n    r = fract(r*ring)/div;\n    \n    uv = -1.0 + 2.0 * uv;\n    uv *=  r;\n    uv = uv * 0.5 + 0.5;\n    \n    \n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}