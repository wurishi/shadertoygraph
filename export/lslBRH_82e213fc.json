{"ver":"0.1","info":{"id":"lslBRH","date":"1494949538","viewed":289,"name":"dissolve","username":"handle","description":"a test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// attempting to implement:\n//   https://computergraphics.stackexchange.com/a/5112/6628\n// \n\n// this could be using a shadertoy \"channel\" = iChannel0;\n//uniform sampler2D myTexture;\n\n// how to initialize?\nuniform float finishTime;\t// = iTime + 10000.0 ; \n\n#define TWO_PI 6.283185307179586476925286766559\n\nfloat rand(vec2 co){\n\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n// shadertoy \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float R = rand(fragCoord.xy);\n\n\tfloat timeLeft = clamp((finishTime - iTime) * R, 0.0, 10000.0);\n\n    // float direction = classic1dPerlinNoise( R + iTime ) * TWO_PI;\n    // testing without directional noise\n\tfloat direction =  R * TWO_PI;\n    \n\tfloat offsetX = fragCoord.x + sin(direction) * timeLeft / 500.0;\n\tfloat offsetY = fragCoord.y + cos(direction) * timeLeft / 500.0;\n\tvec2 texCoord = vec2( offsetX, offsetY );\n    \n    // this needs to get the textures pixel color\n    // gl_Color * texture2D(myTexture, fragCoord);\n    fragColor = vec4(texCoord, 1.0, 1.0); \n}","name":"Image","description":"","type":"image"}]}