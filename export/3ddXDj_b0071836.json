{"ver":"0.1","info":{"id":"3ddXDj","date":"1572909143","viewed":451,"name":"HSV Color Tinting","username":"Jimbly","description":"(Relatively) efficient HSV color tinting without converting to/from HSV space.  Allows for a Hue SHIFT, Saturation and Value SCALE (reduction only).  Click and drag in demo maps X axis to hue shift and Y axis to saturation scale.","likes":5,"published":1,"flags":0,"usePreview":1,"tags":["hsv","tint","hueshift","colortint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 tex0 = texture(iChannel0, uv);\n    \n    float H = iMouse.x/iResolution.x * 3.0; // Hue shift        0-3\n    float S = iMouse.y/iResolution.y;       // Saturation scale 0-1\n    float V = 1.0;                          // Value scale      0-1\n    \n    // 2 or 3 components of hue_term can be calculated on the CPU if prefered to remove the min/abs/sub here\n    vec3 hue_term = 1.0 - min(abs(vec3(H) - vec3(0,2.0,1.0)), 1.0);\n    hue_term.x = 1.0 - dot(hue_term.yz, vec2(1));\n    vec3 res = vec3(dot(tex0.xyz, hue_term.xyz), dot(tex0.xyz, hue_term.zxy), dot(tex0.xyz, hue_term.yzx));\n    res = mix(vec3(dot(res, vec3(0.2, 0.5, 0.3))), res, S);\n    res = res * V;\n    fragColor = vec4(res, tex0.w);\n}","name":"Image","description":"","type":"image"}]}