{"ver":"0.1","info":{"id":"msVcWK","date":"1696637499","viewed":58,"name":"ray tracing pixel","username":"artefox","description":"ray tracing pixel","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytracingpixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void plot(float x, float y, out vec3 color, vec2 uv, vec3 newColor) {\n    if ((uv.x == floor(x)) && (uv.y == floor(y))) color = newColor;\n}\n\nvoid render(vec2 uv, out vec3 color) {\n    plot(0.0, 255.0, color, uv, vec3(1.0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    uv -= 0.5;\n    uv *= 2.0;\n    float res = 256.0;\n    uv = floor((uv + 1.0) * (res * 0.5));\n    \n    vec3 color = vec3(0.0);\n    render(uv, color);\n    \n    \n    \n    \n    \n    \n    uv /= res;\n    if (fragCoord.x > iResolution.y) color = vec3(0.5);\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}