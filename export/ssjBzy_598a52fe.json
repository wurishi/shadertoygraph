{"ver":"0.1","info":{"id":"ssjBzy","date":"1646597181","viewed":180,"name":"lumaDARK","username":"Carandiru","description":"re-linearized luminance?","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["luma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 color = textureLod(iChannel0, uv, 0.0f).rgb;\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define LUMA vec3(0.2126f, 0.7152f, 0.0722f)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime * 60.0f;\n    \n    float r = 0.,g = 0.,b = 0.;\n    \n    r = t / 255.0f;\n    if ( r > 1.0f ) {\n        r = 0.0f;\n        \n        g = (t - 255.0f) / 255.0f;\n        if ( g > 1.0f ) {\n            g = 0.0f;\n            \n            b = (t - 511.0f) / 255.0f;\n            if ( b > 1.0f ) {\n                b = 0.0f;\n                \n                r = (t - 767.0f) / 255.0f;\n                g = (t - 767.0f) / 255.0f;\n                b = (t - 767.0f) / 255.0f;\n            }\n         }\n    }\n    \n    vec3 color = vec3(r,g,b);\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float luma = dot(color, LUMA);\n    \n    color.r *= dot(vec3(r), LUMA) / luma;\n    color.g *= dot(vec3(g), LUMA) / luma;\n    color.b *= dot(vec3(b), LUMA) / luma;\n    \n    if (uv.x < r)\n    {\n        color = textureLod(iChannel0, uv, 0.0f).rgb;\n    }\n    if (uv.x < b)\n    {\n        color = textureLod(iChannel0, uv, 0.0f).rgb;\n    }\n    if (uv.x < g)\n    {\n        color = textureLod(iChannel0, uv, 0.0f).rgb;\n    }\n    if (uv.y > luma) \n    {\n        color = vec3(0);\n    }\n\n    if (abs(uv.x - luma) < 0.005f) {\n    \n         color = vec3(luma);\n    }\n    \n    fragColor = vec4(color,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}