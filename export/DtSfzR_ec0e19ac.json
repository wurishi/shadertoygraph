{"ver":"0.1","info":{"id":"DtSfzR","date":"1693654314","viewed":182,"name":"Beach (Volume Absorption)","username":"beans_please","description":"More or less: [code]col *= pow(absorption_col, depth)[/code]","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["volume","gradient","exponential","beach","absorption"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float remap_clamp(float inp, float inp_start, float inp_end, float out_start, float out_end)\n{\n    float t = clamp((inp - inp_start) / (inp_end - inp_start), 0.0, 1.0);\n    return out_start + t * (out_end - out_start);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Coordinates\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.y += -.05 * iTime;\n    float x = uv.x + .01 * cos(10. * uv.y) + .002 * cos(40. * uv.y);\n    \n    // Base color\n    vec3 col = vec3(.98, .82, .62);\n    \n    // Absorption color\n    const vec3 sea = vec3(.45, .83, .945);\n    \n    // Absorb\n    float depth = remap_clamp(x, 0.2, 1., 0.0001, 30.);\n    col *= pow(sea, vec3(depth));\n    \n    // Desaturate\n    col = mix(col, vec3(.2, 1, 1), .01);\n    \n    // Output\n    col = pow(col, vec3(1. / 2.4));\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}