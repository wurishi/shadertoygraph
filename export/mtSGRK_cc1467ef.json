{"ver":"0.1","info":{"id":"mtSGRK","date":"1673526626","viewed":55,"name":"A21DC565_Moving Smiley Face","username":"BooKn","description":"Moving Smiley Face","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur)\n{\n\n    float d = length(uv - p);\n    float c = smoothstep(r, r - blur, d);\n    \n    return c;\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size)\n{\n    uv -= p;\n    uv /= size;\n\n    float mask = Circle(uv, vec2(0.), .4, .01);\n    \n    mask -= Circle(uv, vec2(-.15, .1), .07, .01); \n    mask -= Circle(uv, vec2(.15, .1), .07, .01); \n    \n    float mouth = Circle(uv, vec2(.0), .3, .01);\n    mouth -= Circle(uv, vec2(.0, .1), .3, .01);\n    \n    if (mouth < 0.) \n        mouth = 0.;\n\n    mask -= mouth; \n\n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col = vec3(0.);\n\t\n\tvec2 pos = vec2(sin(iTime) / 2., sin(2. * iTime) / 4.);\n    float size = sin(2. *iTime) / 10. + .2;\n    float mask = Smiley(uv, pos, size);\n    \n    col = vec3(1., 1., 0.) * mask;\n    \n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}