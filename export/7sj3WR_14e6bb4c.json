{"ver":"0.1","info":{"id":"7sj3WR","date":"1617367264","viewed":105,"name":"Serkber_Test","username":"SerkBer","description":"Training Shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["training"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float vignette (vec2 uv, float radius, float edge)\n{\n    vec2 center = vec2(-0.5, -0.5);\n    float distance = length(uv + center);\n    float o = smoothstep(radius, radius - edge, distance);\n    \n    return o;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Created zoomed UVs with x2 zoom that moves accordingly to the mouse, \n    //so it's like zooming to a specific area of the uvs\n    vec2 zoomedUVs = uv / 2. + iMouse.xy / iResolution.xy / 2.;\n    \n    //CHECK IT!\n    //fragColor = vec4(zoomedUVs, 0., 1.);\n    //fragColor = texture(iChannel0, zoomedUVs);\n    \n    //Create the mask UVs setting their middle point at the mouse position\n    vec2 maskUVs = uv - iMouse.xy / iResolution.xy + 0.5;\n    //Adjust X according to aspect ratio so they are \"squared\"\n    maskUVs = vec2(maskUVs.x * iResolution.x / iResolution.y, maskUVs.y);\n    maskUVs -= vec2(0.4, 0.);\n    \n    //Create a gradient around the mouse\n    float lensSize = 225.;\n    float distance = length((fragCoord - iMouse.xy) / lensSize);\n    //With smoothstep decide the size of the mask and the gradient size\n    float lensMask = smoothstep(1., .1, distance);\n    \n    //CHECK IT!\n    //fragColor = vec4(vec3(distance), 1.);\n    //fragColor = vec4(vec3(lensMask), 1.);\n    \n    //Interpolate between the original UVs and the zoomedUVs using the lensMask value\n    vec2 LensUVs = mix(uv, zoomedUVs, lensMask);\n    \n    //CHECK IT!\n    //fragColor = vec4(LensUVs, 0., 1.);\n    \n    //Comment this line and uncomment the others \"fragColor =\" to see step by step\n    fragColor = texture(iChannel0, LensUVs);\n}","name":"Image","description":"","type":"image"}]}