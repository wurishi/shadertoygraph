{"ver":"0.1","info":{"id":"XtdGzs","date":"1470942611","viewed":114,"name":"TrettonNinjor","username":"MollyPorph","description":"Trying out a distance function ^^","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["procedural"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 boxColor(in vec3 p)\n{\n  return vec3(0.2,0.9,0.0);\n}\nvec2 floorObj(in vec3 p)\n{\n  return vec2(p.y+4.39,0);\n}\nvec3 floorColor(in vec3 p)\n{\n  if (fract(p.x*0.2)>0.2)\n  {\n    if (fract(p.z*0.2)>0.2)\n      return vec3(0,0.1,0.2);\n    else\n      return vec3(1,1,1);\n  }\n  else\n  {\n    if (fract(p.z*.2)>.2)\n      return vec3(1,1,1);\n    else\n      return vec3(0.3,0,0);\n   }\n}\n\nvec2 createSphere(in vec3 p,in float s )\n{\n  float d = length(p)-s;\n  return vec2(d,1);\n}\nvec2 createURoundBox(in vec3 p,in vec3 b,in float r )\n{\n  float d = length(max(abs(p)-b,0.0))-r;\n  return vec2(d,1);\n}\n\nvec2 meshUnion(vec2 a, vec2 b)\n{\n    float d = min(a.x, b.x);\n    return vec2(d,1);\n}\nvec2 combine(in vec2 obj0, in vec2 obj1)\n{\n  if (obj0.x < obj1.x)\n  \treturn obj0;\n  else\n  \treturn obj1;\n}\nmat4 rotateY(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n\n    return mat4(\n        vec4(c, 0, s, 0),\n        vec4(0, 1, 0, 0),\n        vec4(-s, 0, c, 0),\n        vec4(0, 0, 0, 1)\n    );\n}\nmat4 rotateX(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n\n    return mat4(\n        vec4(1, 0, 0, 0),\n        vec4(0, c, -s, 0),\n        vec4(0, s, -c, 0),\n        vec4(0, 0, 0, 1)\n    );\n}\nmat4 rotateZ(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n\n    return mat4(\n        vec4(-c, -s, 0, 0),\n        vec4(s, -c, 0, 0),\n        vec4(0, 0, 1, 0),\n        vec4(0, 0, 0, 1)\n    );\n}\n//Actual distance func\nvec2 dist(in vec3 p)\n{\n  //repetition\n  float spacing = 10.0;\n  p.x = mod(p.x, spacing) -0.5*spacing;\n  p.z = mod(p.z, spacing) -0.5*spacing;\n    \n  vec2 head = createSphere(p+vec3(0,-2.5,0), 1.0);\n  vec2 body = createURoundBox(p,vec3(1.0,1.4,.6),.2);\n    \n  vec3 rotated = (rotateZ(45.0) * vec4(p, 1.0)).xyz;  \n  vec2 leftArm = createURoundBox(rotated+vec3(-1.0,-2.0,0.0),vec3(.3,1.3,.3),.1);\n  vec3 rotatedNeg = (rotateZ(-45.0) * vec4(p, 1.0)).xyz;   \n  vec2 rightArm = createURoundBox(rotatedNeg+vec3(1.0,-2.0,0.0),vec3(.3,1.3,.3),.1);\n    \n  vec2 leftLeg  = createURoundBox(p+vec3(-.7,2.9,0.0),vec3(.3,1.3,.3),.1);\n  vec2 rightLeg = createURoundBox(p+vec3(.7,2.9,0.0),vec3(.3,1.3,.3),.1);  \n  \n  vec2 ninja = meshUnion(leftLeg, rightLeg);\n  ninja = meshUnion(ninja, leftArm);\n  ninja = meshUnion(ninja, rightArm);\n  ninja = meshUnion(ninja, body);\n  ninja = meshUnion(ninja, head);\n  \n  return combine(floorObj(p), ninja);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 vPos = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    //cameraanimation\n    vec3 vuv=vec3(0,1,0); //upvector\n    vec3 vrp=vec3(0,0,0); //view \n    vec3 prp=vec3(-sin(iTime/6.0)*8.0,4,cos(iTime/6.0)*8.0); \n    \n    \n    //camerasetup\n  \tvec3 vpn=normalize(vrp-prp);\n  \tvec3 u=normalize(cross(vuv,vpn));\n  \tvec3 v=cross(vpn,u);\n  \tvec3 vcv=(prp+vpn);\n  \tvec3 scrCoord=vcv+vPos.x*u*iResolution.x/iResolution.y+vPos.y*v;\n  \tvec3 scp=normalize(scrCoord-prp);\n    \n    \n    //raymarch\n  \tconst vec3 e=vec3(0.1,0,0);\n  \tconst float maxd=60.0; //depth\n    \n    vec2 s=vec2(0.1,0.0);\n  \tvec3 c,p,N;\n    \n    float f=1.0;\n \tfor(int i=0;i<256;i++){\n        if (abs(s.x)<.01||f>maxd) break;\n        f+=s.x;\n        p=prp+scp*f;\n        s=dist(p);\n  \t}\n     if (f < maxd)\n  {\n    if (s.y==0.0) \n      c=floorColor(p);\n    else\n      c=boxColor(p);\n    \n    vec3 n = vec3(s.x-dist(p-e.xyy).x,\n                  s.x-dist(p-e.yxy).x,\n                  s.x-dist(p-e.yyx).x);\n      \n     //Phong\n    N = normalize(n);\n    float b=dot(N,normalize(prp-p));\n\tfragColor = vec4((b*c+pow(b,16.0))*(1.0-f*.01),1.0);\n   }\n   else \n    fragColor=vec4(0,0,0,1); //bg\n}\n\n","name":"Image","description":"","type":"image"}]}