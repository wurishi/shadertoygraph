{"ver":"0.1","info":{"id":"XlcXz7","date":"1478636673","viewed":280,"name":"FloorTiles","username":"dila","description":"Tessellating squares to make a pretty tiled floor pattern.\nInspired by Menger2D by EvilRyu https://www.shadertoy.com/view/MldXz4","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x)\n{\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nvec2 mpos = vec2(0.0);\nfloat mid = 0.0;\nfloat mfid = 0.0;\n\nfloat map(vec3 p)\n{\n    vec2 q = p.xy;\n    \n    float ls = 6.0;\n    q -= ls * 0.5;\n    q = (fract(q / ls) - 0.5) * ls;\n    \n    q = vec2(atan(q.x, -q.y) / 3.14159 * 4.0, length(q));\n    \n    float xs = 2.0;\n    q.x = (fract(q.x / xs) - 0.5) * xs;\n    \n    q.y -= 2.3;\n    \n    float d = 1000.0;\n    \n    vec2 b = vec2(0.5, 0.25);\n    \n    const int n = 6;\n    for (int i = 0; i < n; ++i) {\n        float fi = float(i) / float(n);\n        \n        q = abs(q) - 0.5;\n        \n        q *= rot(3.14159 * 2.0 * 0.125);\n        \n        q.x = abs(q.x) - 0.5;\n        \n        float k = sdBox(vec3(q, p.z), vec3(b, 1.0));\n        \n        if (k < d) {\n            d = k;\n            mpos = q;\n            mid = float(i);\n            mfid = 1.0 - fi;\n        }\n        \n        b = b.yx;\n    }\n    \n    return d;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        t += map(o + r * t);\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 o = vec3(-1.0, iTime, -5.0 + sin(iTime) * 2.0);\n    vec3 r = normalize(vec3(uv, 1.3));\n    \n    r.yz *= rot(3.14159 * -0.25);\n    \n    o.xy *= rot(3.14159 * 0.25);\n    r.xz *= rot(3.14159 * 0.25);\n\n    r.yz *= rot(3.14159 * 0.5);\n    \n    r.xy *= rot(iTime * 0.25);\n\n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    float fd = map(w);\n    \n    vec3 tex = texture(iChannel0, mpos).xyz;\n    tex *= tex;\n    \n    /* alternate between light and dark through the pattern \"layers\" */\n    tex *= mix(2.0, 0.25, 0.5 + 0.5 * sin(3.14159 * 0.25 * mid));\n    \n\tfragColor = vec4(sqrt(tex), 1.0);\n}","name":"Image","description":"","type":"image"}]}