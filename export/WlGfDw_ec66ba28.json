{"ver":"0.1","info":{"id":"WlGfDw","date":"1614436867","viewed":112,"name":"Rainy grid","username":"belfry","description":"Salvaging some old stuff.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 fbm(vec2 v) {\n    float t = 0.;\n    vec4 n = vec4(0.);\n    float b = 1./32.;\n    for (float s = 1.; s > b; s *= 0.5) {\n        t += s;\n    \tn += texture(iChannel0, b / s * v) * s;\n    }\n    return n / t;\n}\n\nfloat ring(vec2 uv, float size) {\n    uv = 2. * uv - 1.;\n    float l = length(uv) - size;\n    float d = l;\n    float d2 = l + .15;\n    float d3 = l + .3;    \n    return smoothstep(-.05, .05, min(max(d, -d2), d3));\n}\n\nvec2 ripple(vec2 uv, float size) {\n    vec2 eps = vec2(0.02, 0.);\n    float dx = ring(uv + eps.xy, size) - ring(uv - eps.xy, size);\n    float dy = ring(uv + eps.yx, size) - ring(uv - eps.yx, size);\n    return vec2(dx, dy);\n}\n\nvec4 tex(vec2 uv, float z )\n{\n    vec2 tileID = floor(uv * 20.);\n    \n    float a = 3.14 / 4.;\n    uv += .025;\n    uv *= mat2(cos(a), sin(a), -sin(a), cos(a));\n    uv = abs(fract(uv * sqrt(2.) * 5.) * 2. - 1.);\n    float d = max(uv.x, uv.y) - .975;\n    d = 1. - smoothstep(fwidth(d), -fwidth(d), d);\n        \n    float check = mod(tileID.x + tileID.y, 2.);\n    \n    vec4 fragColor = (d * vec4(0., .05, .1, 1.) + vec4(mix(vec3(0.3, .5, .95), vec3(0.3, 0.25, .7), 1.-check), 1.) * .05);\n    fragColor *= -z-.2;\n    return fragColor * 10.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float vignette = 3.5 - length(2. * fragCoord - iResolution.xy) / iResolution.y;\n\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float z = uv.y - .7;\n    uv /= z;\n    uv.y -= iTime * .1;\n\n    vec2 ring = vec2(0.);\n    for (float i = -1.; i < 2.; i++) {\n        for (float j = -1.; j < 2.; j++) {\n            vec2 tileUV = uv * 5.;\n            vec2 tileID = floor(tileUV) + vec2(i, j);\n            tileUV = fract(tileUV) - vec2(i, j);\n            vec4 noise = texelFetch(iChannel0, ivec2(mod(tileID, 64.)), 0);\n            float ringSize = fract(iTime + noise.x);\n            float timeID = floor(iTime + noise.x);\n            tileUV += texelFetch(iChannel0, ivec2(mod(abs(noise.yz * 64. + timeID), 64.)), 0).xy;\n            ring += ripple(tileUV, ringSize) * .1 * (1. - ringSize);\n    \t}\n    }\n    \n    fragColor = tex(uv + (4. * fbm(uv + iTime * .2).xy - 1.) * .025 + ring, z);\n    \n    vec4 f = fbm(uv * .5);\n    fragColor *= vignette;\n    fragColor = max(vec4(0.), fragColor);\n    fragColor += f.xxxx * (z + .25);\n    fragColor *= -z*z*z*.35+.14;\n    \n    float r = texture(iChannel1, vec2(1., .05)*fragCoord / iResolution.xy + vec2(0., 1.*iTime)).x;\n    r = pow(r, 20.) * (sin(iTime * 3.)*.25 +.75);\n    float r1 = texture(iChannel1, vec2(.85, .01)*fragCoord / iResolution.xy + vec2(.3456, .75*iTime)).x;\n    r1 = pow(r1, 30.) * (sin(iTime * 4.1234 + 2.)*.4+.6);\n    float r2 = texture(iChannel1, vec2(.955, .001)*fragCoord / iResolution.xy + vec2(.3456, .25*iTime)).x;\n    r2 = pow(r2, 40.)* (sin(iTime * 6.4235 + 3.)*.5+.5);\n    fragColor += vec4(r + r1 + r2) * .042;\n}\n","name":"Image","description":"","type":"image"}]}