{"ver":"0.1","info":{"id":"tlKcDy","date":"1611728620","viewed":83,"name":"Random practice 02","username":"cghow","description":"practice_random","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["practicerandom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14159265359\n#define ITERATIONS (75)    \n#define AMPLITUDE  (0.30)\t\n#define PERIOD     (5.00)   \n#define PERIOD_MUL (3.00)   \n#define SCALE      (1.50)   \n#define RING_MIN   (0.97)   \n#define RING_MAX   (1.00)   \n#define FADE       (6.50)   \n#define BRIGHTNESS (0.25)   \n#define CONTRAST   (0.85)\n\nfloat ring(float r) { return step(r, RING_MAX) - step(r, RING_MIN); }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    \n    float r     = SCALE  * length(uv);\n    float theta = PERIOD * atan(uv.y, uv.x);\n    \n    float f = 0.0;\n    \n    for (int i = 1; i < ITERATIONS; ++i) {\n        float k = float(i)/float(ITERATIONS);\n    \n    float w = r/k + AMPLITUDE * sin(theta + PI * PERIOD_MUL / k);\n    \n        f += ring(w) * BRIGHTNESS * pow(k,FADE) * r;\n    }\n    \n\n    fragColor = vec4(vec3(pow(f,CONTRAST)), 1);\n}","name":"Image","description":"","type":"image"}]}