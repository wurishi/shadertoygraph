{"ver":"0.1","info":{"id":"4fKyRR","date":"1731409773","viewed":30,"name":"MEL PREMIER VISUEL","username":"talixthewitch","description":"cool shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blackhole","visualcreation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Compatible avec Shadertoy\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// Fonction pour générer l'effet flou/gradient du cercle\nfloat particle(vec2 uv, vec2 center, float radius) {\n    float distanceFromCenter = length(uv - center);\n    return exp(-pow(distanceFromCenter - radius, 2.0) * 50.0);\n}\n\n// Fonction pour générer des particules ponctuelles\nfloat random(vec2 uv) {\n    return fract(sin(dot(uv.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normaliser les coordonnées et recentrer\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Diviser le temps en deux phases\n    float time = mod(iTime, 15.0);  // Répétition de l'animation toutes les 15 secondes\n\n    // Initialisation de la taille et de l'opacité du cercle de particules\n    float radius = 0.0;\n    float opacity = 0.0;\n\n    // Phase 1 : Apparition lente et contemplative du cercle de particules (0 à 12 secondes)\n    if (time < 12.0) {\n        // Un petit cercle qui s'agrandit très lentement au centre\n        radius = 0.01 + (time / 12.0) * 0.5; // Rayon très petit qui grandit lentement\n        opacity = smoothstep(0.0, 1.0, time / 12.0);\n    }\n    // Phase 2 : Aspiration rapide vers la disparition (12 à 15 secondes)\n    else {\n        float t = time - 12.0;\n        radius = 0.51 - (t / 3.0) * 0.51; // Rétraction rapide du cercle\n        opacity = smoothstep(1.0, 0.0, t / 3.0); // Disparition rapide\n    }\n\n    // Générer l'effet flou/gradient du cercle\n    float aura = particle(uv, vec2(0.0), radius) * opacity;\n\n    // Générer des particules ponctuelles dans le cercle\n    float pointParticles = 0.0;\n    float numParticles = 100.0; // Nombre de particules à générer\n    for (float i = 0.0; i < numParticles; i++) {\n        // Position aléatoire des particules\n        float angle = i * 6.283185 / numParticles; // Répartir les particules en cercle\n        vec2 particlePos = vec2(cos(angle), sin(angle)) * radius * random(uv + iTime + i);\n        pointParticles += step(0.02, 0.03 - length(uv - particlePos)) * opacity;\n    }\n\n    // Définir la couleur de fond noir et les particules blanches\n    vec3 background = vec3(0.0); // Fond noir\n    vec3 particleColor = vec3(1.0); // Particules blanches\n\n    // Mélanger l'effet d'aura et les particules ponctuelles\n    float combinedParticles = max(aura, pointParticles);\n    fragColor = vec4(particleColor * combinedParticles, combinedParticles);\n}\n","name":"Image","description":"","type":"image"}]}