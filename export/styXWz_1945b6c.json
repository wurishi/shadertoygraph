{"ver":"0.1","info":{"id":"styXWz","date":"1643726611","viewed":304,"name":"Star Spheremap","username":"peremoya2000","description":"A simple star Spheremap. Uses some noise to make the stars and the cloud shadows.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","interactive","clouds","sky","stars","df"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    vec2 mousePos; \n    if (iMouse.z>.1){\n        mousePos = (iMouse.xy-.5*iResolution.xy)/iResolution.y;\n    }\n    float starMask=smoothstep(.5,.6,1.1*gNoise(128.*(uv+mousePos)));\n     \n    \n    vec3 col = 1.-vec3(valNoise(15.*(uv+mousePos+.05)),valNoise(20.*(uv+mousePos)),valNoise(25.*(uv+mousePos-.06)));\n    col*=vec3(.4,.8, 1.);\n    col=mix(col,vec3(1),.5);\n      \n    starMask *= cloudMask(uv+mousePos, iTime);\n\n    // Output to screen\n    fragColor = vec4(col * starMask, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//value noise from iq's www.shadertoy.com/view/lsf3WH\nfloat hash1(vec2 p) {\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat valNoise( in vec2 p ){\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash1( i + vec2(0.0,0.0) ), \n                     hash1( i + vec2(1.0,0.0) ), u.x),\n                mix( hash1( i + vec2(0.0,1.0) ), \n                     hash1( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// Gradient Noise by iq\n// https://www.shadertoy.com/view/XdXGW8\nvec2 hash2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\nfloat gNoise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( hash2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( hash2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat cloudMask(vec2 uv, float time)\n{\n    uv += sin(time*.001)*20.;\n    float shapeMask = smoothstep(.4,.2, valNoise(8.*uv));\n    float cloudDetail = (1.-shapeMask) * valNoise(20.*uv) * .5;\n    return shapeMask + cloudDetail;\n}","name":"Common","description":"","type":"common"}]}