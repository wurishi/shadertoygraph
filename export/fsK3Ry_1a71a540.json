{"ver":"0.1","info":{"id":"fsK3Ry","date":"1631748374","viewed":58,"name":"Pulsing Flower ND","username":"ndevlin","description":"#1 - A circle that pulses out into a flower and then pulls back in","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pulsingflower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n// Make a vec3 color from rgb values [0, 255]\nvec3 rgb(float r, float g, float b)\n{\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\n\nfloat cubicPulse( float c, float w, float x)\n{\n    x = abs(x - c);\n    \n    if(x > w) return 0.0f;\n    \n    x /= w;\n    \n    return 1.0f - x * x * (3.0f - 2.0f * x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Default Color\n    fragColor = vec4(rgb(255.0, 255.0, 210.0), 1.0);\n    \n    float aspectRatio = 640.0f / 360.0f;\n    \n    vec2 center = vec2(0.5f, 0.5f);\n    \n    uv.x *= aspectRatio; // Make circular\n    \n    uv.x -= 0.4f; // Shift back to center\n    \n    vec2 uvCentered = uv - vec2(0.5, 0.5);\n    \n    \n    float theta = atan(uvCentered.x, uvCentered.y);\n    \n    float radiusAtPoint = 0.3;\n    \n    \n    float timeVal = cubicPulse(0.5f, 3.0f, 1.0f / tan(iTime / 2.0f));\n    \n    \n    radiusAtPoint = 0.3f + (sin(theta * 20.0f - timeVal ) + cos(theta * 20.0f + timeVal)) / 15.0f;\n    \n    \n    \n    if(length(uv - center) < radiusAtPoint)\n    {\n        fragColor.y = 0.0f;\n        fragColor.z = 0.0f;\n    }\n\n}\n\n","name":"Image","description":"","type":"image"}]}