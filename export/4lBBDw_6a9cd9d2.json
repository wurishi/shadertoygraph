{"ver":"0.1","info":{"id":"4lBBDw","date":"1515928089","viewed":669,"name":" 'diffusion' automata 2","username":"FabriceNeyret2","description":"variant of [url]https://shadertoy.com/view/4tBBDw[/url] : Margolus neighborhood automata.\nmimick color scheme of [url]https://www.youtube.com/watch?v=r5GbvJ-LKH8[/url]\nCol = cell period (still, 2, 4, aperiodic )\nMouse: show particles","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["automata","cellular","margolus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/4tBBDw ( variant of 'single rotation' automata: https://shadertoy.com/view/4tSfDD )\n// trying to reproduce the coloring scheme of https://www.youtube.com/watch?v=r5GbvJ-LKH8\n\n#define SCALE 2\n\n// some descriptions and videos:\n//     http://dmishin.blogspot.com/2013/11/the-single-rotation-rule-remarkably.html\n//     https://dmishin.github.io/\n//     https://www.youtube.com/watch?v=r5GbvJ-LKH8\n//     https://www.youtube.com/watch?v=lkdnOuzHdFE \n\nvoid mainImage( out vec4 O, vec2 U ) {\n    O = texelFetch(iChannel0,ivec2(U)/SCALE,0);\n   // O += .3*texelFetch(iChannel1,ivec2(U)/SCALE,0);\n    \n    if (iMouse.z>0. && length(U-iMouse.xy)/iResolution.y < .2 ) \n        O = texelFetch(iChannel1,ivec2(U)/SCALE,0).xxxx;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SCALE 2.\n\n#define T(i,j) texelFetch(iChannel0,ivec2(mod(U+vec2(i,j),floor(iResolution.xy/SCALE/2.)*2.)),0)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if (iFrame==0) {\n      //float l = sin(100.* length(U/iResolution.xy - 1./2./SCALE) )-.8; \n        float l = 1. - 3.5*SCALE*length(U/iResolution.xy - 1./2./SCALE); \n        O = vec4(fract(4321.*sin(1234.7*(U.x+17.31*U.y))) < l ); // init state \n        return;\n    }\n    \n\tO = T(0,0); \n    O.yzw = O.xyz;                               // compute in x, history in yzw\n    \n    //for(int i=0; i<4000000; i++) O += 0.;      // slow down\n    \n    vec2   s = vec2(iFrame%2);\n         //s = vec2(0);                          // alterning quads ( Margolus neighborhood )\n    vec2 V = mod(U-.5-s,2.); U -= V;             // location in current quad\n    float p = ( T(0,0)+T(1,0)*2.+T(0,1)*4.+T(1,1)*8. ).x;\n    O.x =   p == 1. ? float( V == vec2(1,1) )    // one single cell in quad -> go to opposite corner\n          : p == 2. ? float( V == vec2(0,1) )\n          : p == 4. ? float( V == vec2(1,0) )\n          : p == 8. ? float( V == vec2(0,0) )\n          : p == 9. ? float( V.x != V.y  )       // just a diag in quad : flip it.\n          : p == 6. ? float( V.x == V.y  )\n          : O.x;         \n        \n    //if ( iMouse.z > 0. && U+V-.5 == floor(iMouse.xy/SCALE) ) O = vec4(1); // mouse draw\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// coloring scheme inspired from https://www.youtube.com/watch?v=r5GbvJ-LKH8\n\nvoid mainImage( out vec4 O, vec2 U ) {\n    O = texelFetch(iChannel1,ivec2(U),0);\n    O =   O==vec4(0)                           ? vec4(0,0,0,0) \n        : O==vec4(1)                           ? vec4(1,0,0,0) // still    : red\n        : O==vec4(1,0,1,0) || O==vec4(0,1,0,1) ? vec4(0,1,0,0) // period 2 : green\n        : O.x+O.y+O.z+O.a==1.                  ? vec4(0,0,1,0) // period 4 : blue\n        : O;                                                   // others\n\n    if (iFrame>0) O = O*.05 + .99*texelFetch(iChannel0,ivec2(U),0);     // time blur\n}","name":"Buf B","description":"","type":"buffer"}]}