{"ver":"0.1","info":{"id":"DlVGDz","date":"1696054681","viewed":55,"name":"Twirl The Origin","username":"vec5","description":"Simple twirl","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["swirl","twirl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14159265358979\n#define EPS 1e-4\n\nvec2 twirl(vec2 uv, float radius, float angle)\n{\n    float t   = 1.0 - min(1.0, length(uv) / radius);\n    float rot = angle * t * t;\n    float s   = sin(rot);\n    float c   = cos(rot);\n    \n    return uv * mat2(c, -s, s, c);\n}\n\nvoid mainImage(out vec4 C, in vec2 P)\n{\n    vec2 R  = iResolution.xy;\n    vec2 uv = 1.1 * (2. * P - R) / min(R.x, R.y);\n    \n    float time  = 0.5 * (1.0 + cos(iTime + PI));\n          time *= sign(2.0 * PI - mod(iTime, 4.0 * PI));\n    \n    float radius = 1.0;\n    float angle  = 6.0 * PI * time;\n    vec2  p      = twirl(uv, radius, angle);\n    \n    float distance = min(abs(p.x), abs(p.y));\n    \n    // ****************************************************************\n    // This is not a twirl part. Just keeps lines thickness constant\n    \n    vec2 pdx = p - twirl(vec2(uv.x + EPS, uv.y + 0.0), radius, angle);\n    vec2 pdy = p - twirl(vec2(uv.x + 0.0, uv.y + EPS), radius, angle);\n    \n    distance /= sqrt(dot(pdx, pdx) + dot(pdy, pdy)) / EPS;\n    \n    // ****************************************************************\n    \n    C = smoothstep(0.015, 0.0, distance) * vec4(0, 1, 0, 1);\n}","name":"Image","description":"","type":"image"}]}