{"ver":"0.1","info":{"id":"XfGcRG","date":"1731982352","viewed":18,"name":"Deep membrana","username":"Buchibuchi","description":"wavely","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wavey"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// --- Noise Function ---\nfloat hash(vec2 p) {\n    return fract(sin(dot(p, vec2(1233.1, 378811.7))) * 43758.5453123);\n}\n\nfloat gradientNoise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    float a = hash(i);\n    float b = hash(i + vec2(1.0, 0.0));\n    float c = hash(i + vec2(0.0, 1.0));\n    float d = hash(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n// --- Warp Function ---\nvec2 warp(vec2 st, float time) {\n    st += 0.2 * sin(st.yx * 10.0 + time * 2.0);\n    st += 0.1 * cos(st.yx * 25.0 + time * 5.0);\n    return st;\n}\n\n// --- Background Colors ---\nvec3 crazyBackground(vec2 st, float time) {\n    return vec3(\n        0.5 + 0.5 * sin(time * 4.0 + st.x * 15.0 + st.y * 20.0),\n        0.5 + 0.5 * cos(time * 6.0 + st.y * 10.0 + st.x * 30.0),\n        0.5 + 0.5 * sin(time * 8.0 - st.x * 25.0 + st.y * 15.0)\n    );\n}\n\n// --- Add Pulsating LFOs to Everything ---\nfloat lfo(float freq, float time) {\n    return 0.5 + 0.5 * sin(freq * time);\n}\n\n// --- Circle ---\nfloat circle(vec2 st, vec2 center, float radius) {\n    return 1.0 - smoothstep(radius - 0.02, radius + 0.02, distance(st, center));\n}\n\n// --- Rectangle ---\nfloat rectangle(vec2 st, vec2 bl, vec2 tr) {\n    vec2 bl_step = step(bl, st);\n    vec2 tr_step = step(st, tr);\n    return bl_step.x * bl_step.y * tr_step.x * tr_step.y;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalize coordinates\n    vec2 st = fragCoord.xy / iResolution.xy;\n    st.x *= iResolution.x / iResolution.y;\n\n    // Warp the space for background madness\n    vec2 warpedSt = warp(st, iTime);\n\n    // --- Generate the background ---\n    vec3 bgColor = crazyBackground(warpedSt, iTime);\n\n    // Add LFO-driven brightness oscillation\n    bgColor *= 0.8 + 0.2 * lfo(3.0, iTime);\n\n    // --- Dynamic Shapes on Top ---\n    float scale = 2.0 + 3.0 * sin(iTime * 0.5);\n    st -= 0.5;          // Center\n    st *= scale;        // Scale dynamically\n    st += 0.5;          // Back to original space\n\n    vec2 gridPos = floor(st);\n    st = fract(st);\n\n    // --- Crazy Movement for Shapes ---\n    vec2 circleCenter = vec2(\n        0.5 + 0.3 * sin(iTime * 2.5 + gridPos.x * 3.0) + 0.2 * cos(iTime * 5.0 + gridPos.y * 2.0),\n        0.5 + 0.3 * cos(iTime * 1.5 + gridPos.y * 4.0) + 0.2 * sin(iTime * 3.5 + gridPos.x * 6.0)\n    );\n\n    vec2 rect_bl = vec2(\n        0.3 + 0.2 * lfo(2.0, iTime) + 0.1 * sin(iTime * 2.5 + gridPos.y),\n        0.3 + 0.1 * cos(iTime * 3.0 + gridPos.x)\n    );\n\n    vec2 rect_tr = vec2(\n        0.7 + 0.1 * sin(iTime * 3.5 + gridPos.y),\n        0.7 + 0.2 * lfo(4.0, iTime) + 0.1 * cos(iTime * 2.0 + gridPos.x)\n    );\n\n    // Shapes\n    float circ = circle(st, circleCenter, 0.2);\n    float rect = rectangle(st, rect_bl, rect_tr);\n\n    // --- Shapes' Crazy Colors ---\n    vec3 shapeColors = vec3(\n        0.5 + 0.5 * sin(iTime * 3.0 + st.x * 30.0 + st.y * 20.0),\n        0.5 + 0.5 * cos(iTime * 4.0 + st.y * 25.0 + st.x * 15.0),\n        0.5 + 0.5 * sin(iTime * 6.0 - st.x * 35.0 + st.y * 10.0)\n    );\n\n    // Shapes glow effect\n    float glow = smoothstep(0.0, 0.4, circ + rect);\n    vec3 shapeGlow = shapeColors * glow * 1.2;\n\n    // Combine shapes with background\n    vec3 finalColor = mix(bgColor, shapeGlow, glow);\n\n    // Adjust final output\n    finalColor = pow(finalColor, vec3(1.2)); // Boost brightness\n    finalColor = smoothstep(0.0, 1.0, finalColor); // Smooth extremes\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}