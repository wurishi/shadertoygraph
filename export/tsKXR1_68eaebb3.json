{"ver":"0.1","info":{"id":"tsKXR1","date":"1573612662","viewed":105,"name":"simple hive","username":"fancyzero","description":"alternative Voronin, use second smallest distance instead of the smallest","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["cellnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 noise2(vec2 uv)\n{\n    \n    return normalize(texture(iChannel0,uv).xy+0.001);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y*5.+iTime;\n\n    vec2 fuv = fract(uv);\n    vec2 guv = floor(uv);\n    vec2 site = noise2(guv*0.023)*0.5;\n\tfloat d =floor( (1.-length(fuv - (site+0.5)))+0.11);\n    \n    float mind = 1000000.;\n    float mind2 = 1000000.;\n    for ( int x = -1; x <=1; x++)\n        for ( int y = -1; y <=1; y++)\n        {\n            vec2 testuv = vec2(guv.x + float(x), guv.y + float(y));\n            vec2 site = noise2(testuv*0.023)*0.5 +testuv;\n            float dist = length((fuv+guv) - (site+0.5));\n            if (mind > dist )\n            {\n               \tmind2 = mind;\n                mind = dist;\n            }\n        }\n\n    // Output to screen\n    fragColor = 1.-vec4(mind2,mind2,mind2,1.0);\n}","name":"Image","description":"","type":"image"}]}