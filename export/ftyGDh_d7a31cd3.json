{"ver":"0.1","info":{"id":"ftyGDh","date":"1637733259","viewed":108,"name":"Hue vs. brightness","username":"HaleyHalcyon","description":"a","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"sstSzM","parentname":"ㄎㄗムㄎ巾口ワ工匚"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU (6.283185307)\n// gives pure saturated color from input [0, 6) for phase\nvec3 hue(float x) {\n    x = mod(x, 6.);\n    return clamp(vec3(\n        abs(x - 3.) - 1.,\n        -abs(x - 2.) + 2.,\n        -abs(x - 4.) + 2.\n    ), 0., 1.);\n}\n\nvec3 colorize(float value, float hue_){\n    vec3 a = hue(hue_);\n    return mix(\n      mix(\n        vec3(0.), a , smoothstep(0., 0.5, value)\n      ), vec3(1.), smoothstep(0.5, 1., value)\n    );\n}\n\nfloat zigzag(float value){\n    return abs(mod(value * 2., 2.) - 1.);\n}\n\nfloat dither(float value, float steps, float thres){\n    float a = value * steps;\n    return (floor(a) + step(thres, a - floor(a))) / steps;\n}\n\nfloat roll(vec2 xy_, uint t) {\n    uvec2 xy = uvec2(xy_);\n    const uint a = 1664525u;\n    const uint m = 1013904223u;\n\n    uint seed = 1818420u * xy.x + 78265178u * xy.y + 237698117u * t;\n    \n    uint x0 = (seed * a) % m;\n    uint x = (x0 * a) % m;\n    \n    return float((x ^ x0) & 65535u) / 65536.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float time = fract(iTime / 3.);\n  // Normalized pixel coordinates (from 0 to 1)\n  float scale = min(iResolution.x, iResolution.y);\n  vec2 uv = (gl_FragCoord.xy - 0.50 * iResolution.xy) / scale;\n  \n  float dist = log(uv.x * uv.x + uv.y * uv.y);\n  float angle = atan(uv.y, uv.x) / TAU;\n  float thres = (\n  mod(gl_FragCoord.x + gl_FragCoord.y, 2.) +\n  roll(gl_FragCoord.xy, floatBitsToUint(time))\n  )/2.;\n  \n  float spiral1 = // dither(\n  zigzag(\n    angle + dist * 0.2 + (\n    sin(time * TAU) * 1. - time * 4.\n    ) * 3.\n  )\n  //, 2., thres)\n  ;\n  \n  float spiral2 = //dither(\n    -angle + dist * 0.2 + (\n    sin(-time * TAU) * 1. - time * 4.\n    ) * 3.\n  //, 12., thres)\n  ;\n  \n  vec3 col = colorize(spiral1, spiral2 * 6.);\n  // Output to screen\n  fragColor = vec4(\n    col, 1.0\n  );\n}","name":"Image","description":"","type":"image"}]}