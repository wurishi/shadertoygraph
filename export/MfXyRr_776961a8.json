{"ver":"0.1","info":{"id":"MfXyRr","date":"1720705741","viewed":7,"name":"Distortion shockwave","username":"Larbagar","description":"No","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["no"],"hasliked":0,"parentid":"M3BXDh","parentname":"Larbagar template"},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 pixToWorld(vec2 pix){\n    return (pix*2. - iResolution.xy)/iResolution.y;\n}\n\nvec2 gridDist(vec2 pos){\n    vec2 grid = vec2(2.*sqrt(3.), 2.);\n    return vec2(\n        abs(pos - round(pos/grid)*grid)\n    );\n}\n\nfloat hexDist(vec2 pos){\n    vec2 d1 = gridDist(pos);\n    vec2 d2 = gridDist(pos - vec2(sqrt(3.), 1.));\n    \n    vec2 apothem = vec2(sqrt(3.)/2., .5);\n    \n    return min(\n        max(d1.y, dot(d1, apothem)),\n        max(d2.y, dot(d2, apothem))\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = pixToWorld(fragCoord);\n    vec2 oldMouse = pixToWorld(abs(iMouse.zw));\n    vec2 mouse = pixToWorld(iMouse.xy);\n    \n    float progress = 4.*mod(iTime, 3.);//length(mouse);\n    \n    vec2 polar = vec2(length(uv), atan(uv.y, uv.x));\n    \n    float waveSize = 0.4;\n    float cutoff = 1.;\n    float mag = 0.2;\n    \n    float scaleFunc = step(polar.x, progress + waveSize*cutoff)*progress*polar.x*pow(progress + waveSize*cutoff - polar.x, 2.)/(pow(progress, 2.) + 1.)/pow(waveSize*cutoff, 2.);\n    \n    float wave = 1./(pow((polar.x - progress)/waveSize, 2.) + 1.);\n    //float wave = progress*polar.x*exp(-64.*pow(polar.x-progress, 2.))/(pow(progress, 2.) + 1.);\n    \n    polar.x -= mag*scaleFunc*wave;\n    \n    uv = polar.x*vec2(cos(polar.y), sin(polar.y));\n    \n    //vec3 col = mag*vec3(0, 0, 1)*smoothstep(0.8, 0.81, hexDist(8.*uv));\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}