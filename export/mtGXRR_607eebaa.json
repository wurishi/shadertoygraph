{"ver":"0.1","info":{"id":"mtGXRR","date":"1686496818","viewed":108,"name":"Hyperbola segment - Meh approx","username":"Poisson","description":"Another hyperbola distance approximation!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","distancefield","math","sdf","cone","distance","ellipse","segment","infinity","parabola","conic","maths","metric","hyperbola","maxnorm","conics","linf","linf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Another hyperbola distance approximation\n// The idea is to first solve distance equation in L-inf space and then\n// return distance in L2 cartesian space\n\n/*\nThe distance equation in L-inf space:\n\n(x-t) + (y-sqrt(t^2 + k^2)) = 0\nx + y - t = sqrt(t^2 + k^2)\nx^2 + y^2 + t^2 - 2yt + 2xy - 2xt = t^2 + k^2\n2(x - y)t + x^2 + y^2  + 2xy - k^2 = 0\n\nSolve linear equation:\n\na = 2(x - y)\nb = x^2 + y^2  + 2xy - k^2;\nt = -b/a\n\nFinal distance:\nd = length(p - vec2(t, sqrt(t^2 + k^2)))\n*/\n\nfloat sdHyperbola(vec2 p, float k, float wi) {\n    p = abs(p); // symmetry\n    float k2 = k*k;\n    \n    float a = p.x + p.y;\n    float i = .5*(a-k2/a)>wi ? -1. : 1.;\n    float x = clamp(.5*(a - k2/a), 0., wi);\n    \n    vec2 q = vec2(x, sqrt(x*x + k2));\n    float s = sign(p.x*p.x - p.y*p.y + k2); // sign of the distance\n    return s*length(p-q);\n}\n\n/*\n// infinite hyperbola (not a segment)\nfloat sdHyperbola(vec2 p, float k, float wi) {\n    p = abs(p); // symmetry\n    float k2 = k*k;\n    \n    float a = p.x + p.y;\n    float x = max(.5*(a - k2/a),0.);\n    \n    vec2 q = vec2(x, sqrt(x*x + k2));\n    float s = sign(p.x*p.x - p.y*p.y + k2); // signed distance\n    return s*length(p-q);\n}\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.*fragCoord - iResolution.xy) / iResolution.y;\n    vec2 m = (2.*iMouse.xy - iResolution.xy) / iResolution.y;\n\n    float k = .35+.25*sin(iTime); // constant of the hyperbola sqrt(x^2 + k^2)\n    float wi = .55+.35*cos(1.5*iTime); // width\n\tfloat d = sdHyperbola(p, k, wi);\n    \n\t// coloring\n    vec3 col = (d>0.) ? vec3(.9,.6,.3) : vec3(.55,.85,1);\n    col *= 1.-exp(-8.*abs(d));\n\tcol *= .8 + .2*cos(150.*d);\n\tcol = mix(col, vec3(1), smoothstep(.01,0.,abs(d)));\n\n    if (iMouse.z>0.) {\n        float d = sdHyperbola(m, k, wi);\n        col = mix(col, vec3(1,1,0), smoothstep(.01,0., abs(length(p-m)-abs(d))-.002));\n        col = mix(col, vec3(1,1,0), smoothstep(.01,0., length(p-m)-.015));\n    }\n       \n    // draw vertices and control points\n    p = abs(p);\n    col = mix(col, vec3(1,1,0), smoothstep(.01,0., length(p - vec2(wi, sqrt(wi*wi + k*k)))-.02));\n    col = mix(col, vec3(1,1,0), smoothstep(.01,0., length(p - vec2(0,k))-.02));\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}