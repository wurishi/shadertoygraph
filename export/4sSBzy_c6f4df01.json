{"ver":"0.1","info":{"id":"4sSBzy","date":"1500932608","viewed":1188,"name":"[SH17B] Cold Shore","username":"Xor","description":"A helicopter ride over some icy mountains (Drag mouse to turn view). It could be improved, but I felt a little rushed.\nThis however does have good performance and a huge view distance.\nHere's my first attempt: https://www.shadertoy.com/view/4d2fWD","likes":30,"published":1,"flags":0,"usePreview":0,"tags":["3d","water","mountains","xor","ice","snow","sh17b"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\"[SH17B] Cold Shore\" by Xor\n//License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define FOG 100.\n#define PRE .01\n\n#define SUN normalize(vec3(0,4,1))\n\nfloat height(vec2 P)\n{\n    float H = 8.*texture(iChannel0,P/96.).r+\n              2.*texture(iChannel0,P/25.).r+\n              .1*texture(iChannel0,P/2.).r;\n    return min(H-.1*P.y,5.02+.02*pow(cos(3.*H-3.*P.y+iTime),2.));\n}\n\nvec4 raymarch(vec4 P,vec3 R)\n{\n    P = vec4(P.xyz+R*2.,2);\n    float E = 1.;\n \tfor(int i = 0;i<300;i++)\n    {\n        P += vec4(R,1)*E;\n        float H = height(P.xy);\n        E = clamp(E+(H-P.z)-.5,E,1.);\n        if (H-E*.6<P.z)\n        {\n        \tP -= vec4(R,1)*E;\n            E *= .7;\n            if (E<PRE*P.w/FOG) break;\n        }\n    }\n    return P;\n}\n\nfloat shadow(vec4 P,vec3 R)\n{\n    float S = 0.;\n    P = vec4(P.xyz,0);\n    float E = .5;\n \tfor(int i = 0;i<10;i++)\n    {\n        \n        P += vec4(R,1)*E;\n        float H = height(P.xy);\n        if (H<P.z)\n        {\n            S = min((H-P.z)*9.,S);\n        }\n    }\n    return S;\n}\n\nfloat bump(vec2 P)\n{\n \treturn texture(iChannel1,P*4.).r*texture(iChannel1,P).r*texture(iChannel1,P/4.).r;\n}\n\nvec3 normal(vec2 P)\n{\n    vec2 N = vec2(1,0);\n    N = height(P-N.xy*PRE)*-N.xy+height(P+N.xy*PRE)*N.xy+height(P-N.yx*PRE)*-N.yx+height(P+N.yx*PRE)*N.yx;\n \treturn normalize(vec3(N,-PRE));\n}\n\nvec3 sky(vec3 R)\n{\n    vec3 S = vec3(1,.5,.2)/(dot(R,SUN)*99.+99.5);\n    vec2 P = R.xy/sqrt(max(.1-R.z,.1))*9.;\n    float C = (cos(P.y+cos(P.x*.5+cos(P.y)))*cos(P.y*.7)*.5+.5)*min(abs(.1-6.*R.z),1.);\n \treturn mix(vec3(.4,.7,.9),vec3(1),C*C)+S;\n}\n\nvec3 color(vec4 P,vec3 R)\n{\n    vec3 N = normal(P.xy);\n    vec3 I = reflect(R,N);\n    float F = min(P.w/FOG,1.);\n    float L = exp(shadow(P,-SUN)+dot(N,-SUN)-1.);\n    vec3 S = mix(vec3(.3,.4,.5),vec3(1),L)-bump(P.xy);\n    vec3 C = (P.z<5.)?vec3(.4+.6*smoothstep(-PRE*(5.+50.*F),-PRE*4.,P.z-height(P.xy-PRE*vec2(8,2)))):\n         sky(I)*min(I.z+1.,1.)+max(-I.z,0.)*vec3(.1,.2,.4);\n \treturn mix(C*S,sky(R),F*F);\n}\n\nvoid mainImage(out vec4 Color,in vec2 Coord)\n{    \n    Coord = (Coord-iResolution.xy*.5)/iResolution.y;\n    float A = 3.*(.5-(iMouse.y/iResolution.y))*sign(iMouse.y)+.6-.3*cos(iTime*.3);\n    float B = 3.*(.5-(iMouse.x/iResolution.x))*sign(iMouse.x);\n    vec3 R = normalize(vec3(1,Coord))*mat3(cos(A),0,sin(A),0,1,0,sin(A),0,-cos(A))*mat3(cos(B),sin(B),0,sin(B),-cos(B),0,0,0,1);\n    vec4 P = raymarch(vec4(iTime,cos(iTime*.2),-3.+2.*cos(iTime*.3),0),R);\n    vec4 C = vec4(color(P,R),1);\n    Color = C;\n}","name":"Image","description":"","type":"image"}]}