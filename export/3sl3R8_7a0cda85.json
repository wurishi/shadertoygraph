{"ver":"0.1","info":{"id":"3sl3R8","date":"1544943222","viewed":100,"name":"Black Hole Sun","username":"gabbalis","description":"Just some fun math art.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool inegraph(float x, float y, float width, float eq){\n    if ((eq+width>=y) || (eq>=y-width && eq<=y+width)){\n        return true;\n    }\n    return false;\n}\nbool graph(float x, float y, float width, float eq){\n    if ((eq+width>=y && eq-width<=y) || (eq>=y-width && eq<=y+width)){\n        return true;\n    }\n    return false;\n}\n\n//rand Taken from stackoverflow.com/questions/4200224\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx;\n\n    // Time varying pixel color\n    float x = uv.x;\n    float y = uv.y;\n\n    float equation;\n\n    //black hole sun~\n    bool draw1 = (pow(x-0.5,2.)+pow(y-0.5,2.)<=pow(.1+sin(0.32+sin(iTime*4.3))/400.,2.));\n    //ocean\n    equation = (0.125*sin(8.0*x))*(1./3.)*sin(iTime)+0.20;\n    bool draw2 = inegraph(x, y, .002, equation);\n    //static rain\n    bool draw3 = int(x*1000.+rand(vec2(x+iTime,y)))%int(6.*sin(.3+sin(iTime))+10.) == 2;\n    \n    if (draw1 || draw2 || draw3){\n        fragColor = vec4(0.0);\n    }\n    else{\n        fragColor = vec4(1.0);\n    }\n\n}\n","name":"Image","description":"","type":"image"}]}