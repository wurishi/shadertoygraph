{"ver":"0.1","info":{"id":"7sBBzK","date":"1646627270","viewed":239,"name":"Fractal flower nebula","username":"jarble","description":"A cosmic fractal.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["fractal","flower","nebula"],"hasliked":0,"parentid":"NdsfDf","parentname":"Fractal knots 6"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//change these constants to get different patterns!\n#define bend1 2.\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n    //return abs(fract((a+c1.xy)*scale+iTime/500.)-.5); //morphing\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 3.;\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n\n    vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);   \n        for(int k = 0; k < 9; k++){\n\n            //uv -= (t2.yx+.5)/scale;\n            uv -= (t2.yx)*(bend1+uv.x+uv.y);\n            if(k > 3){\n             uv -= (iTime)/16.;}\n            //uv -= (t2.yx)/(1.-uv.y-uv.x);\n            \n            //uv -= float(k%3)*float(k%2); //this makes it even more colorful\n            \n            float bend = bend1*(t2.y*bend1+1.)*(t2.x*bend1-1.);\n\n            t2 = -triangle_wave(-uv.yx-1.5,scale)/bend;\n\n            t3 = -triangle_wave(-uv,scale)*bend;\n            \n            uv.yx = (t3-t2)/bend1*2.;\n\n        col.x = abs(abs((uv.x+uv.y+col.x)-1.));\n        col = col.yzx;\n        \n        uv /= scale*scale;\n      }\n    fragColor = vec4((col),1.0);   \n}\n","name":"Image","description":"","type":"image"}]}