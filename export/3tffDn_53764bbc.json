{"ver":"0.1","info":{"id":"3tffDn","date":"1596419061","viewed":71,"name":"Whatever Waves","username":"BGrater","description":"\"Something cool\"","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 BG_COL = vec3(0.0,0.6,1.0);\nfloat WAVE_COUNT = 6.0;\nfloat WAVE_OFFSET = -0.3;\nfloat WAVE_SPACE = 0.1;\nfloat WAVE_INTENSITY = 30.0;\nfloat WAVE_GLOW = 0.5;\nfloat WAVE_PULSE = 2.0;\nfloat SPEED = 1.3;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    \n    // Background\n    vec3 bgCol = (uv.y + abs(sin(iTime * SPEED * 0.3)) * 0.5 + 0.1) * BG_COL;\n    \n    \n    // Waves\n    vec3 waveCol = vec3(0.0);\n    float waveCenter = -1.0 + (uv.y * 2.0);\n    float waveWidth = abs(sin(iTime * SPEED * 0.5) * WAVE_INTENSITY * WAVE_PULSE) + WAVE_INTENSITY;\n    \n    for(float i= 0.0; i < WAVE_COUNT; i++)\n    {\n        float waveY = waveCenter + i * WAVE_SPACE + WAVE_OFFSET;\n        waveY += sin((uv.x + i * 0.5) + iTime * SPEED) * 0.5;\n        \n        float waveAlpha = abs(1.0 / (1000.0 / waveWidth * waveY));\n        waveAlpha *= smoothstep(0.0, 1.0 / WAVE_GLOW, waveAlpha);\n        waveCol += waveAlpha * vec3(0.1, 0.0, abs(sin(iTime * SPEED * 0.5) * 0.2));\n    }\n    \n    vec3 col = clamp(bgCol + waveCol, 0.0, 1.0);\n    \n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}