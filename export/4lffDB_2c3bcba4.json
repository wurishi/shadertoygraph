{"ver":"0.1","info":{"id":"4lffDB","date":"1513089569","viewed":133,"name":"Gradlines","username":"jakerr","description":"more tiling practice","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["arcs","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#define R iResolution\n#define S 3.0\n\nfloat arc(vec2 uv, vec2 c) {\n  float d1 = distance(uv,c)-0.4;\n  float d2 = distance(uv,c)-0.6;\n  float d = min(d1,-d2);\n  return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / min(R.x, R.y);\n\tif(mod(uv.x*S, 2.0) > 1.0) {\n\t\tuv.y *= -1.0;\n\t}\n\tif(mod(uv.y*S, 3.0) > 1.0) {\n\t\tuv.x *= -1.0;\n\t}\n\n\tuv = fract(uv*vec2(S));\n\tfloat d = max(\n\t\tarc(uv, vec2(0.0)),\n\t\tarc(uv, vec2(1.0)));\n\n\n  float x = length(uv);\n  uv.y = (acos(dot(normalize(uv),vec2(1.0,0.0))))/radians(90.0);\n  uv.x = x;\n  vec3 c = vec3(smoothstep(0.40, 0.55, uv),1.0);\n  c = mix(vec3(uv.yx,1.0), c, smoothstep(0.0, 0.02, d));\n  fragColor = vec4(c,1.0);\n}\n","name":"Image","description":"","type":"image"}]}