{"ver":"0.1","info":{"id":"wsSyzm","date":"1586318616","viewed":210,"name":"Outside Rounds","username":"nickcody","description":"Sound reactive geometry (under construction)","likes":1,"published":3,"flags":64,"usePreview":0,"tags":["music","geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4lS3D1","filepath":"https://soundcloud.com/talariel/outside","previewfilepath":"https://soundcloud.com/talariel/outside","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_CIRCLES 10\n\nint test(vec2 coord, vec2 center, float radius, float tolerance) {\n    float dist_to_center = sqrt(pow(coord.x - center.x,2.0) + pow(coord.y - center.y,2.0));\n    float delta =dist_to_center-radius;\n\n    if (abs(delta) < tolerance)\n        return 0;\n    else if (delta < 0.0)\n        return -1;\n    else\n        return 1;\n}\n\nvoid mainImage(out vec4 out_color, vec2 fragCoord) {\n    vec3 white = vec3(1.0, 1.0, 1.0);\n    vec3 black = vec3(0.0, 0.0, 0.0);\n\n    vec2 normCoord = fragCoord.xy/iResolution.x;\n\tfloat cw = 1.0/float(NUM_CIRCLES);\n    int i = int(normCoord.x * float(NUM_CIRCLES));\n    vec2 center = vec2((cw*float(i) + cw*float(i+1))/2.0, 0.3);\n    \n    float scale = 0.25;\n    float M = 48000.0;\n    #define freq(f) abs( (f)/(M/4.)  -normCoord.x) * iResolution.x * scale\n    \n    float s = float(512.0 * normCoord.x);\n    vec4 o = texture(iChannel0,vec2(s,.25));\n\n    \n    float radius = o.x / 2.0;\n\n    int t = test(normCoord, center, radius, .001);\n\n    if (t > 0)\n        out_color = vec4( black, 1.0);\n    else if (t == 0)\n        out_color = vec4( white, 1.0);\n    else {\n        vec3 col = 0.5 + 0.5*cos(iTime+normCoord.xyx+vec3(0,2,4));\n        out_color = vec4(col,1.0);\n    }\n\t    \n}","name":"Image","description":"","type":"image"}]}