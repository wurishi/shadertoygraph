{"ver":"0.1","info":{"id":"4t33zs","date":"1489120563","viewed":88,"name":"circle test2222","username":"fscur","description":"circle test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535897932384626433832795;\n\nfloat circle(vec2 p, float r)\n{\n\treturn length(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    float aspect = iResolution.x/iResolution.y;\n    uv.x *= aspect;\n    uv *= 5.0;\n    \n    \n    float t = iTime;\n    float x = cos(t * PI);\n    float y = sin(t * PI);\n    \n    \n    float c = uv.y * y;\n    float d = uv.x * x;\n    \n    float a = (atan(c, d) / PI) + 1.0;\n    \n    vec2 p = vec2(x, y);\n    \n    \n    vec2 q = uv - p;\n    float e = smoothstep(0.0, 0.0 + 0.001, circle(q, 1.0));\n    \n    \n    \n    vec3 color = vec3(1.0);\n    \n\tfragColor = vec4(e, 0.0, a, 1.0);\n}","name":"Image","description":"","type":"image"}]}