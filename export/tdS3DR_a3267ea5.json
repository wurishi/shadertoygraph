{"ver":"0.1","info":{"id":"tdS3DR","date":"1548577716","viewed":663,"name":"Motion Dilation Test 2","username":"granito","description":"..","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["video","acid","trip","dilation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Generate UV Offset\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define F vec3(.2126, .7152, .0722)\n\nfloat normpdf(in float x, in float sigma)\n{\n\treturn 0.39894*exp(-0.5*x*x/(sigma*sigma))/sigma;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\tconst int mSize = 11;\n\tconst int kSize = (mSize-1)/2;\n\tfloat kernel[mSize];\n    float detect;\n    vec2 vector;\n\tfloat sigma = 7.0;\n\tfloat Z = 0.0;\n\tfor (int j = 0; j <= kSize; ++j)\n\t{\n\t\t\tkernel[kSize+j] = kernel[kSize-j] = normpdf(float(j), sigma);\n\t}\n    for (int j = 0; j < mSize; ++j)\n    {\n        Z += kernel[j];\n    }\n    for (int i=-kSize; i <= kSize; ++i)\n    {\n        for (int j=-kSize; j <= kSize; ++j)\n        {\n            vec3 col = texture(iChannel0,(fragCoord.xy + vec2(float(i),float(j))) / iResolution.xy).rgb;\n            float gray = pow(dot(col, F),0.5);\n            detect += kernel[kSize+j]*kernel[kSize+i] * gray;\n        }\n    }\n\t\n\tdetect = pow(detect/(Z*Z), 5.);\n    vector = vec2(dFdx(detect), dFdy(detect));\n\tvec2 combine = mix( vector , texture(iChannel1,uv + vector ).rg, .9);\n    fragColor = vec4(combine,0.,0.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//Apply UV Offset\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n#define F vec3(-1., 1., -1.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uvoffset = texture(iChannel1,uv).xy; \n    uvoffset = normalize(uvoffset) * sin(iTime*1.);\n\n    vec3 outcol = mix( texture(iChannel0,uv + uvoffset * 0.005),  texture(iChannel2,uv + uvoffset * 0.0025), 0.8).rgb;\n    float alpha =1.-pow( clamp(  dot(texture(iChannel0,uv + uvoffset * 0.005).xyz, F) , 0.,1.), 0.5); \n    fragColor = vec4(outcol, alpha);\n}","name":"Buffer B","description":"","type":"buffer"}]}