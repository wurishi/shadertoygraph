{"ver":"0.1","info":{"id":"fltcW7","date":"1659948297","viewed":93,"name":"Fork Gold Noise binhui 279","username":"binhui","description":"- based on the Golden Ratio\n- uniform normalized distribution\n- fastest static noise generator function (also runs at low precision)\n- use with indicated fractional seeding method\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","static","generator"],"hasliked":0,"parentid":"ltB3zD","parentname":"Gold Noise Uniform Random Static"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Generate Gold Noise image\n\n   precision lowp    float;\n// precision mediump float;\n// precision highp   float;\n\nvoid mainImage(out vec4 rgba, in vec2 xy)\n{\n    float seed = fract(iTime*0.01);                    // fractional base seed\n    rgba       = vec4 (gold_noise(xy, seed+0.1),  // r\n                       gold_noise(xy, seed+0.2),  // g\n                       gold_noise(xy, seed+0.3),  // b\n                       gold_noise(xy, seed+0.9)); // α\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Gold Noise ©2015 dcerisano@standard3d.com\n// - based on the Golden Ratio\n// - uniform normalized distribution\n// - fastest static noise generator function (also runs at low precision)\n// - use with indicated fractional seeding method\n\n  const float PHI = 1.61803398874989484820459; // Φ = Golden Ratio \n\n  float gold_noise(in vec2 xy, in float seed)\n  {\n    return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);\n  }\n","name":"Common","description":"","type":"common"}]}