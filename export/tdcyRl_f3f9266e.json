{"ver":"0.1","info":{"id":"tdcyRl","date":"1707213092","viewed":88,"name":"Simple gaussian firefly","username":"kurono","description":"The firefly is orbiting around the mouse-clicked position on the screen","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    //vec3 col = vec3(iMouse.x/iResolution.x, iMouse.y/iResolution.y, 1.0);\n\n    // dot color\n    vec3 bg = vec3(iMouse.x/iResolution.x, iMouse.y/iResolution.y, 1.0);\n    \n    float aspect = iResolution.x/iResolution.y;\n    float transient = 2.0 + cos(3.0 * (iTime - 3.14/2.0));\n    float rad = 0.5 * (2.0 + cos(3.0 * (iTime - 3.14/2.0)));\n    float sharp = 100.0 * transient;\n    \n    // screen point\n    float x = uv.x;\n    float y = uv.y;\n    \n    float ampl = 0.1;\n    x = x + ampl * cos(3.0 * iTime);\n    y = y + ampl * sin(3.0 * iTime);\n    \n    // gaussian\n    float prof = 1.0/exp(pow(((x - iMouse.x/iResolution.x)*aspect/rad), 2.0) + pow(((y - iMouse.y/iResolution.y)/rad), 2.0));\n    prof = pow(prof, sharp);\n    \n    // final color\n    vec3 col = bg * prof;\n        \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}