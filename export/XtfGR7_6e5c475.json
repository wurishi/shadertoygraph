{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// wavelet-ish visualizer 2\n\n// Iain Melvin 2014\n\n// comment this to turn off peak offset adjustment\n//#define OFFSET_ON\n\n// gradient from: https://www.shadertoy.com/view/4dsSzr\nvec3 heatmapGradient(float t) {\n\treturn clamp((pow(t, 1.5) * 0.8 + 0.2) * vec3(smoothstep(0.0, 0.35, t) + t * 0.5, smoothstep(0.5, 1.0, t), max(1.0 - t * 1.7, t * 7.0 - 6.0)), 0.0, 1.0);\n}\n\nfloat get_max(){\n  // find max offset (there is probably a better way)\n  float jmax = 0.0;\n  float jmaxf=0.0;\n  float jf=0.0;\n  float ja;\n  for (int j=0;j<200;j++){\n    jf = jf+0.005;\n    ja = texture( iChannel0, vec2(jf,0.75)).x;\n    if ( ja>jmaxf) {jmax = jf;jmaxf = ja;}\n  }\n  return jmax;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  float px = 2.0*(uv.x-0.5);\n  float py = 2.0*(uv.y-0.5);\n\n  float dx = uv.x;\n  float dy = uv.y;\n\n  // alternative mappings\n  dx = abs(uv.x-0.5)*3.0;\n  //dx =1.0*atan(abs(py),px)/(3.14159*2.0);\n  //dy =2.0*sqrt( px*px + py*py );\n\t\n  const float pi2 = 3.14159*2.0;\n\n  // my wavelet \n  //float width = 1.0-dy; \n  //float width = (1.0-sqrt(dy)); // focus a little more on higher frequencies\n  float width = 1.0-(pow(dy,(1.0/4.0) )); // focus a lot more on higher frequencies\n  const float nperiods = 4.0; //num full periods in wavelet\n  const int numsteps = 100; // more than 100 crashes nvidia windows (would love to know why)\n  const float stepsize = 1.0/float(numsteps);\n  \n  float accr = 0.0;\n\n  float si_max=0.0;\n#ifdef OFFSET_ON\n    si_max=get_max();\n#endif\n    \n  // x is in 'wavelet packet space'\n  for (float x=-1.0; x<1.0; x+=stepsize){\n\t\n\t// the wave in the wavelet \n    float yr = sin((dx+x*nperiods*pi2)); \n    \n    // get a sample - center at uv.x, offset by width*x\n    float si = dx + width*x;\n\n      si+=si_max;\n\n\t  if (si>0.0 || si<1.0){\n        \n\t\t// take sample and scale it to -1.0 -> +1.0\n\t\tfloat s = 2.0*( texture( iChannel0, vec2(si,0.75)).x - 0.5 + (12.5/256.0) ); \n         \t\n\t\t// multiply sample with the wave in the wavelet\n\t    float sr=yr*s;\n         \n\t    // apply packet 'window'\n        float w = 1.0-abs(x);\n\t    sr*=w;\n\n\t\t// accumulate\n        accr+=sr;\n \t  }\n  }\n\n  float y=3.0*accr; //; //0.0*abs(accr)/accn;\n \n  fragColor = vec4( heatmapGradient(y),1.0);\n\n\n \n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XtfGR7","date":"1419653526","viewed":412,"name":"Wavelet Visualizer 2","username":"pixelbeast","description":"rework of wavelet visualizer 1 - more headache inducing..","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["waveletvisualizerwaveaudio"],"hasliked":0,"parentid":"","parentname":""}}