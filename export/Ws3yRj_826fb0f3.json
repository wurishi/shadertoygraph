{"ver":"0.1","info":{"id":"Ws3yRj","date":"1643651500","viewed":200,"name":"Spiral trick","username":"MarcoF","description":"Experiment with polar coordinates","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["spiral","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nvec2 cart2pol(vec2 uv) {\n    float r = length(uv);\n    float a = atan(uv.y, uv.x);\n    a = mod(a, PI * 2.0);\n    return vec2(r, a);\n}\n\nfloat spiral(float radius, float angle, float curv, float branches, float size) {\n    float c = sin(radius * curv + angle * branches);\n    //return step(1.0 - size, c);\n    return smoothstep(0., 10. * curv / iResolution.x, c + size - 1.);\n}\n\nvec2 rotate(vec2 original, float angle, vec2 pivot) {\n    mat2 rotation  = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    vec2 final = original;\n    final -= pivot;\n    final *= rotation;\n    final += pivot;\n    return final;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.*fragCoord - (fragColor.xy = iResolution.xy) ) / fragColor.y ;\n    \n    vec2 uvRotated = rotate(uv, iTime, vec2(0));\n    \n    vec2 polarUv = cart2pol(uvRotated);\n    \n    float s = spiral(polarUv.x, polarUv.y, 8., 1., 1.);\n    \n    vec3 col = vec3(0);\n    \n    col = vec3(s);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}