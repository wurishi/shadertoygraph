{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"vec2 RealToComplex(float n, vec2 C){\n    float real = pow(n,C.x);\n    vec2 Imag = vec2(cos(log(n)* C.y), sin(log(n) * C.y));\n    return real * Imag;\n}\nvec2 CDiv(vec2 a, vec2 b){\n    float theta1 = atan(a.y,a.x);\n    float theta2 = atan(b.y,b.x);\n    float r1 = length(a);\n    float r2 = length(b);\n    float r = r1/r2;\n    float theta = theta1-theta2;\n    return r *  vec2(cos(theta),sin(theta));\n}\nvec2 Zeta(vec2 s){\n    \n    for(float i = 1.; i < 3.;i++){\n        s += CDiv(vec2(1,0),RealToComplex(i,s));\n    }\n    return s;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord + fragCoord - iResolution.xy)/iResolution.y;\n    vec3 col;\n      \n    uv *=4.; \n    vec2 Ivu = Zeta(uv) + vec2(cos(iTime),sin(iTime));\n    float t = abs(cos(iTime * .5));\n    uv = mix(uv,Ivu,t);\n    \n    vec2 z = uv;\n    vec2 c = uv;\n    for(int i =0;i < 100;i++){\n        z = vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y) +c;\n        if(length(z) > 2.){\n         col.g += float(i)/100.;\n         break;//YAY\n         }\n         \n    }\n   \n    \n   \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"McyfRm","date":"1733867840","viewed":40,"name":"Mandelbrot zeta experiment","username":"SnackEater","description":"just messing around","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""}}