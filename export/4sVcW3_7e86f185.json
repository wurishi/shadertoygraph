{"ver":"0.1","info":{"id":"4sVcW3","date":"1523559697","viewed":155,"name":"Inverse transform sampling","username":"chronos","description":"Inverse transform sampling. https://en.wikipedia.org/wiki/Inverse_transform_sampling\nDunno if this is correct or not =P","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["random","sampling","inverse","hash","distribution","transform","cdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 BufA = texture(iChannel0, uv);\n    if(uv.y / 60. < BufA.a / float(1. + iTime)) BufA.r += .25;\n    \n    if(uv.y < pdf(uv.x)) BufA.b += .1;\n    \n    \n    fragColor = BufA;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float uniform_rand = rand( float(iFrame));\n    \n    float cumulative = cdf(uv.x);\n    \n    float dc = cdf(uv.x + eps) - cdf(uv.x - eps);\n    \n    vec3 col = vec3(0.);\n    if(uv.y < cumulative) col += 1.;\n    \n    vec4 prev_frame = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    if(abs(uv.y - uniform_rand) < eps && cumulative < uv.y) col = 1.-col;\n    if(abs(uniform_rand - cumulative) < 0.25*dc && (uv.y < cumulative))\n    {\n        col = 1.-col;\n    }\n\n    if(abs(uniform_rand - cumulative) < 0.25*dc) prev_frame.a += 1./60.;\n    \n    col = 0.5 * (col+0.5);\n\n    fragColor = vec4(col, prev_frame.a);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float rand( float n ) { return fract(sin(n*78.233 +12.9898)* 43758.5453); }\n\nfloat cdf(float x) { return smoothstep(0.2, .8, x); }\n\nfloat smoothstepdx(float edge0, float edge1, float x)\n{\n   x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0); \n   return -6. * (x - 1.) * x;\n}\n\nfloat pdf(float x) { return smoothstepdx(0.2, 0.8, x); }\n\nconst float eps = 0.0025;","name":"Common","description":"","type":"common"}]}