{"ver":"0.1","info":{"id":"DlSGDV","date":"1673902463","viewed":145,"name":"Colorizing black and white","username":"ianertson","description":"Just a test, colorizing black and white","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite","color","bw","colorize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(g) smoothstep(0.0, 1.0, (g))\n\nvec3 aces(vec3 x) {\n  const float a = 2.51;\n  const float b = 0.03;\n  const float c = 2.43;\n  const float d = 0.59;\n  const float e = 0.14;\n  return clamp((x * (a * x + b)) / (x * (c * x + d) + e), 0.0, 1.0);\n}\nfloat luma(vec3 color) { return dot(color, vec3(0.299, 0.587, 0.114)); }\nvec3 unreal(vec3 x) { return x / (x + 0.155) * 1.019; }\nvec2 decant(float c) {\n  float w = floor((sqrt(c * 8. + 1.) - 1.) / 2.);\n  float y = float(c - (w * (w + 1.)) / 2.);\n  return vec2(float(w - y), y);\n}\n\nvec3 colorize(sampler2D tex, vec2 uv) {\n    vec3 bw = textureLod(tex, uv, 0.).rgb;\n    float scalar = 2.1;\n    vec3 scaled = pow(bw*scalar, vec3(2.6));\n    vec3 d1 = vec3(fract(cos((3.1*decant(scaled.x)))), 0.);\n    vec3 d2 = vec3(fract(sin((1.2*decant(scaled.y)))), 0.);\n    vec3 d3 = vec3(fract(cos((1.3*decant(scaled.z)))), 0.);\n    float r = S(dot(bw, d1));\n    float g = S(dot(bw, d2));\n    float b = S(dot(bw, d3));\n    vec3 c1 = aces(S(bw*vec3(r,g,b)));\n    vec3 cb= abs(reflect(c1, bw));\n    vec3 cc = (bw*0.49)+(cb*3.14);\n    vec3 col = bw*(bw*normalize(cc));\n    col = col*col;\n    col *= 9.14;\n    col = col / (1.0 + luma(col));\n    col = bw*normalize(col);\n    col = clamp(col, 0.0, 1.0);\n    col = unreal(mix(col, S(col), 0.45));\n    col = pow(col, vec3(2.0));\n    return (bw)+(bw*col);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fc )\n{\n    vec2 uv = fc/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    float c = iMouse.z > 0.001 ? iMouse.x : iResolution.x*0.5;\n    if (fc.x >= c) {\n        col = colorize(iChannel0, uv);\n        if (fc.x <= c+8.0) {\n            col *= 0.0;\n        }\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}