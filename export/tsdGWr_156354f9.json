{"ver":"0.1","info":{"id":"tsdGWr","date":"1568255313","viewed":115,"name":"Small screen on screen","username":"adamgotya","description":"it makes a rectangle that shows whatever is in ichannel0 and adjusts it depending on the size and location* of the rectangle.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["classwork"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//sets the center of the rectangle\nvec2 center = vec2(.5,.5);\n\n//changes height/width of the drawn rectangle\nfloat width = .25;\nfloat height = .2;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv;\n    \n    //finds the aspect ratio of the screen\n    float aspR = iResolution.y / iResolution.x;\n    \n    //colors the screen white\n    vec4 col = vec4(1.0,1.0,1.0,1.0);\n    \n    //adjusts the y-axis scale of uv and center\n    uv.y *= aspR;\n    center.y *= aspR;\n    \n    //if the pixel is within the area of the rectangle then it samples the texture on iChannel0\n    if(length(center.x - uv.x) <= width && length(center.y - uv.y) <= height){\n        //creates a second instance of uv for the rectangle\n        uv2 = vec2((uv.x-length(center.x-width))/width/2.0, (uv.y - length(center.y-height))/height/2.0);\n        col = texture(iChannel0,uv2);\n    }\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}