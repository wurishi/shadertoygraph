{"ver":"0.1","info":{"id":"lXj3Rz","date":"1709996689","viewed":76,"name":"test1_213","username":"de_kor13","description":"313213","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["213"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tlots o' particles (Image)\n\t2016 stb\n\n\tDrawing from Buf B...\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = gl_FragCoord.xy / iResolution.xy;\n    \n   // float pDot, pTrail;\n    \n  //  pDot = texture(iChannel0, uv).r;\n  //  pTrail = texture(iChannel0, uv).g;\n\n  fragColor =  vec4(texture(iChannel0, uv).r,texture(iChannel0, uv).g,texture(iChannel0, uv).b,texture(iChannel0, uv).a);\n  \n\n//\tfragColor = vec4(vec3(pDot)+vec3(0.2706, 0.4314, 0.5961)*vec3(pTrail), 1.);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float ParticleDensity = .4; // 0.0-1.0\n\n// hash without sine\n// https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n    vec3 MOD3 = vec3(443.8975, 397.2973, 491.1871);\n    vec3 p3 = fract(vec3(p.xyx) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 res = iResolution.xy;\n    vec2 px = vec2(1.)/res;\n    vec2 uv = gl_FragCoord.xy / res;\n    vec4 color;\n\n    vec4 buf[9];\n    buf[0] = texture(iChannel0, uv).rgba;\n    buf[1] = texture(iChannel0, fract(uv-vec2(px.x, 0.))).rgba;\n    buf[2] = texture(iChannel0, fract(uv-vec2(-px.x, 0.))).rgba;\n    buf[3] = texture(iChannel0, fract(uv-vec2(0., px.y))).rgba;\n    buf[4] = texture(iChannel0, fract(uv-vec2(0., -px.y))).rgba;\n    buf[5] = texture(iChannel0, fract(uv-vec2(px.x, px.y))).rgba;\n    buf[6] = texture(iChannel0, fract(uv-vec2(-px.x, px.y))).rgba;\n    buf[7] = texture(iChannel0, fract(uv-vec2(px.x, -px.y))).rgba;\n    buf[8] = texture(iChannel0, fract(uv-vec2(-px.x, -px.y))).rgba;\n    \n  \n    // this cell's particle direction & position, if any\n    vec2 pDir =buf[0].rg ;\n    vec2 pPos = buf[0].ba ;\n     \n   // update this cell's particle position\n    pPos.xy = mod(pPos.xy+pDir.xy,res);\n    \n    if(floor(pPos )!=floor(gl_FragCoord.xy))\n    {     \n      pDir = vec2(.0,.0);\n      pPos = vec2(.0,.0);\n    }\n   \n    float ct = 0.;\n    vec2 pDirAdd = vec2(0.);\n    vec2 pPosAdd = vec2(0.,0.);\n    for(int i=1; i<9; i++) // относительные координаты\n    {\n\n       \n       vec2 pPosI = mod(buf[i].ba + buf[i].rg,res) ;\n       vec2 a = floor(pPosI.xy) ;\n        if(floor(pPosI.xy) == floor(gl_FragCoord.xy))\n        {\n           pDirAdd += buf[i].rg ;\n           pPosAdd += pPosI;\n           ct ++;\n        }\n\n\n\n    }\n    \n      if (ct > 0.0)\n     {\n        pDir = normalize(pDirAdd / ct);\n        pPos = pPosAdd / ct;\n    }\n     \n       \n \n\n    // first frame particle setup\n    if(iFrame==0)\n        if(ParticleDensity>hash12(gl_FragCoord.xy/res)) {\n            vec2 randXY =\n                vec2(\n                    hash12(mod(uv+iTime/100.-4., 100.)),\n            \t\thash12(mod(uv-iTime/100.-8., 100.))\n\t\t\t\t);\n            \n            pDir = normalize(randXY-.5);\n            pPos = gl_FragCoord.xy;\n            color = vec4(pDir.x, pDir.y, pPos.x, pPos.y);\n        }\n\n    color = vec4(pDir.x, pDir.y,pPos.x,pPos.y);\n  \n     fragColor = color;\n\n}","name":"Buffer A","description":"","type":"buffer"}]}