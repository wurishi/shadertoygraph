{"ver":"0.1","info":{"id":"DlXBDM","date":"1692981693","viewed":30,"name":"Infravermelho","username":"Shader_Noob2023","description":"Just a quick test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shader","red","variation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy);\n    float variation = sin(t*2.5);\n    uv -= 0.5;\n    \n    uv.x = uv.x*(iResolution.x/iResolution.y);\n    \n    \n    \n    uv.x -= variation*0.1;\n    uv.y -= variation*cos(t)*0.12313;\n    uv = fract(uv*6.);\n    uv.x -= 0.5+(variation*cos(t*0.5)*0.2);\n    uv.y -= 0.5+(variation*cos(t*3.5)*0.1);\n    \n    float d = length(uv);\n    \n    \n   \n    d = 0.012*variation+0.003/d;\n    vec3 colorMult = vec3(5.0, 1.0, cos(t)+variation*2.5)+(variation*sin(t));\n    \n    // Output to screen\n    fragColor = vec4(vec3(d)*colorMult,1.0);\n}","name":"Image","description":"","type":"image"}]}