{"ver":"0.1","info":{"id":"MlSBDd","date":"1517579233","viewed":282,"name":"Wolfenstein 3D Fizzlefade","username":"OccamsLaser","description":"Based on the rundown here: http://fabiensanglard.net/fizzlefade/index.php\n\nNot doing this at a correctly altered resolution, but it works as well as I'd like.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["fade","wolfenstein","id","fizzlefade","wolfenstein3d","fizzle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 frag_color, in vec2 frag_coord) {\n    ivec2 ifrag_coord = ivec2(frag_coord/2.0);\n   \n    float fizzled = texelFetch(iChannel0, ifrag_coord, 0).x;\n    \n    (fizzled == 0.) ? frag_color = vec4(0.) : frag_color = vec4(0.5333,vec3(0.));   \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 frag_color, in vec2 frag_coord) {\n    ivec2 ifrag_coord = ivec2(frag_coord);\n    \n    vec4 data = texelFetch(iChannel0,ivec2(frag_coord),0);\n    \n    float fizzled = data.x;\n    int rndval = floatBitsToInt(data.y);\n    \n    if(iFrame == 0) {\n        discard;\n    } else if(iFrame == 1){\n        fizzled = 0.0;\n        rndval = 1;\n    }\n    \n    for(int i=0; i<500; i++) {\n    \tivec2 pos;\n    \tpos.y = (rndval & 0x000FF) - 1;\n    \tpos.x = (rndval & 0x1FF00) >> 8;\n\t\t\n        int lsb = rndval & 0x1;\n\t\trndval >>= 1;\n\t\tif(lsb != 0) {\n\t\t\trndval ^= 0x00012000;\n\t\t}\n    \n    \tif(ifrag_coord == pos) {\n        \tfizzled = 1.0;\n    \t}\n    }\t\n    \n    frag_color = vec4(fizzled, intBitsToFloat(rndval), 0.0, 0.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}