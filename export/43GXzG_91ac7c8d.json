{"ver":"0.1","info":{"id":"43GXzG","date":"1720074799","viewed":24,"name":"pipi 7.4 2","username":"1455076726","description":"??","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(in float t)\n{\n    vec3 a = vec3(0.984,0.094,0.094);\n    vec3 b = vec3(0.138,-0.642,0.198);\n    vec3 c = vec3(-0.222,1.000,1.000);\n\n    vec3 d = vec3(0.333,0.314,0.584);\n\n\n\n    return a + b*cos(6.28318*(c*t+d));\n}\n\n\n \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\\\n   \n    \n    \n    \n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    for(float i =0.0;i<3.0;i++){\n    float t = iTime*0.4;\n    //uv*=mat2(cos(t),sin(t),-cos(t),sin(t));\n    uv = fract(uv*1.5)-0.5;\n    vec3 col = vec3(0.553,0.369,0.369);\n    \n    \n    float d = length(uv)*exp(-length(uv0));\n    col = palette(length(uv0)+iTime*0.7+i*0.4);\n    //d -=0.5;\n    d = sin(d*9. + iTime)/9.;\n    d = abs(d);\n    d = -step(0.021,d);\n    //d = pow(0.1/d,1.2);\n    //d = smoothstep(0.0 , 0.1, d);\n    // Time varying pixel color\n \n    finalColor+= (col + d)*d;\n    //col += d;\n    //col *= d;\n    // Output to screen\n    }\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}