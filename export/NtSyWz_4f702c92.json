{"ver":"0.1","info":{"id":"NtSyWz","date":"1649850969","viewed":71,"name":"Oscillators2022","username":"Dj_Crush","description":"Oscilators","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["oscillator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530717958647693\n//#define K0 -0.0024481183484471314\n//#define K1 -0.09197128691753585\n#define iterationsN 50\n#define P_TYPE 0\n\n\n#define K0 2.5294653973875905\n#define K1 -0.040099118568157656\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    float sc = 2.0;\n    float x = 1.0 - sc * uv.x + 5.0;\n    float y = 1.0 - sc * uv.y + 0.6;\n    float distance = sqrt(x * x + y * y) * 0.01 + 1.0;\n    if(P_TYPE == 0)\n    {\n        for(int i = 0; i < iterationsN; ++i)\n        {\n        \n            float c1 = x > y ? -1.0 : 1.0;\n            float newx = (x + K0 - 0.70 / TWO_PI * sin(TWO_PI * y)) * c1;\n            float newy = (y + K1 - 0.70 / TWO_PI * sin(TWO_PI * x));\n            x = newx;\n            y = newy;\n        }\n        float f = sqrt(x * x + y * y) / distance * 0.35;\n        fragColor = vec4(vec3(f),1.0);\n    }\n    else\n    {\n        for(int i = 0; i < iterationsN; ++i)\n        {\n            float newx = 1.0 - x + K0 - 0.7 / TWO_PI * sin(TWO_PI * y);\n            float newy = 1.0 - y + K1 - 0.7 / TWO_PI * sin(TWO_PI * x);\n            x = newx;\n            y = newy;\n        }\n        float f = sqrt(x * x + y * y) * 0.15;\n        fragColor = vec4(vec3(f),1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}