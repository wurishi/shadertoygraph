{"ver":"0.1","info":{"id":"lX2yRK","date":"1727887048","viewed":36,"name":"Assignment #3 - Seth","username":"snerds","description":"Based on the provided example shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["assignment3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Functions used: floor, fract, smoothstep, abs, sin, cos, step\n\n#define SCALE_FACTOR 8.0\n#define CELL_MULTIPLIER 0.8\n#define SCROLL_SPEED 0.1\n\nconst vec4 BG_COLOR = vec4(0.0, 0.0, 0.0, 1.0);\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Make the coordinate space normalized\n    fragCoord = (fragCoord + fragCoord - (fragColor.xy = iResolution.xy)) / fragColor.y;\n    \n    // Add a constant time offset to both frag coordinates\n    fragCoord.x += iTime * SCROLL_SPEED;\n    fragCoord.y += iTime * SCROLL_SPEED;\n    \n    // Scale factor\n    fragCoord *= SCALE_FACTOR;\n    \n    // Create cell\n    vec2 cell = floor(fragCoord - 15.) + iTime * 2.;\n    fragCoord = fract(fragCoord);\n\n    // Populate cells with hexagons\n    float d = sdHexagon(vec2(fragCoord.x - .5, fragCoord.y - .5), 0.2);\n    \n    // This makes the beehive effect possible by adding the sin and cos and taking x and y into account\n    float sinVal = -abs((sin(cell.x * CELL_MULTIPLIER)) + (cos(cell.y * CELL_MULTIPLIER))) * 5.;\n    d = smoothstep(0.3 + sinVal * .05, .31 + sinVal * .05, d);\n\n    // Create the background\n\tfragColor = mix(BG_COLOR, vec4(d, d, d, 1.0), step(d, 0.7));\n    \n    // base the color off of the sin value so it appears brighter when bigger\n    float val = (sinVal / 7.);\n    \n    // Finally, mix the osscilating colors in with the previous color to get the dark/bright effect\n    fragColor = mix(fragColor, vec4(0.0, 1. + val, 0.0, 1.0), step(d, 0.7));\n} ","name":"Image","description":"","type":"image"}]}