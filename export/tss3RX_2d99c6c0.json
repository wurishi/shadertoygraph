{"ver":"0.1","info":{"id":"tss3RX","date":"1547090005","viewed":250,"name":"SH Cubemap Projection","username":"yuletian","description":"SH Cubemap Projection. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shcubemapprojection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3zn","filepath":"/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","previewfilepath":"/media/ap/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926536;\nconst int SampleTimesDim = 100;\n\nstruct SH3\n{\n  float Y00;\n  float Y1_1;\n  float Y10;\n  float Y11;\n  float Y2_2;\n  float Y2_1;\n  float Y20;\n  float Y21;\n  float Y22;\n};\n\nstruct CubemapSH3\n{\n  SH3 R;\n  SH3 G;\n  SH3 B;\n};\n\nSH3 SH3Mul(SH3 A, SH3 B)\n{\n  SH3 Ret;\n  Ret.Y00 = A.Y00 * B.Y00;\n  Ret.Y1_1 = A.Y1_1 * B.Y1_1;\n  Ret.Y10 = A.Y10 * B.Y10;\n  Ret.Y11 = A.Y11 * B.Y11;\n  Ret.Y2_2 = A.Y2_2 * B.Y2_2;\n  Ret.Y2_1 = A.Y2_1 * B.Y2_1;\n  Ret.Y20 = A.Y20 * B.Y20;\n  Ret.Y21 = A.Y21 * B.Y21;\n  Ret.Y22 = A.Y22 * B.Y22;\n  return Ret;\n}\n\nfloat SumSH(SH3 A)\n{\n  float RetVal = 0.0f;\n  RetVal += A.Y00;\n  RetVal += A.Y1_1;\n  RetVal += A.Y10;\n  RetVal += A.Y11;\n  RetVal += A.Y2_2;\n  RetVal += A.Y2_1;\n  RetVal += A.Y20;\n  RetVal += A.Y21;\n  RetVal += A.Y22;\n  return RetVal;\n}\n\nSH3 SH3Mul(SH3 A, float Factor)\n{\n  SH3 Ret;\n  Ret.Y00 = A.Y00 * Factor;\n  Ret.Y1_1 = A.Y1_1 * Factor;\n  Ret.Y10 = A.Y10 * Factor;\n  Ret.Y11 = A.Y11 * Factor;\n  Ret.Y2_2 = A.Y2_2 * Factor;\n  Ret.Y2_1 = A.Y2_1 * Factor;\n  Ret.Y20 = A.Y20 * Factor;\n  Ret.Y21 = A.Y21 * Factor;\n  Ret.Y22 = A.Y22 * Factor;\n  return Ret; \n}\n\nSH3 SH3Add(SH3 A, SH3 B)\n{\n  SH3 Ret;\n  Ret.Y00 = A.Y00 + B.Y00;\n  Ret.Y1_1 = A.Y1_1 + B.Y1_1;\n  Ret.Y10 = A.Y10 + B.Y10;\n  Ret.Y11 = A.Y11 + B.Y11;\n  Ret.Y2_2 = A.Y2_2 + B.Y2_2;\n  Ret.Y2_1 = A.Y2_1 + B.Y2_1;\n  Ret.Y20 = A.Y20 + B.Y20;\n  Ret.Y21 = A.Y21 + B.Y21;\n  Ret.Y22 = A.Y22 + B.Y22;\n  return Ret;\n}\n\nSH3 GetSH3Basis(vec3 InLocation)\n{\n  SH3 Basis;\n  Basis.Y00 = 0.282095;\n  Basis.Y1_1 = 0.488603 * InLocation.y;\n  Basis.Y10 = 0.488603 * InLocation.z;\n  Basis.Y11 = 0.488603 * InLocation.x;\n  Basis.Y2_2 = 1.092548 * InLocation.x * InLocation.y;\n  Basis.Y2_1 = 1.092548 * InLocation.y * InLocation.z;\n  Basis.Y20 = 0.315392 * (3.0 * InLocation.z * InLocation.z - 1.0);\n  Basis.Y21 = 1.092548 * InLocation.x * InLocation.z;\n  Basis.Y22 = 0.54627 * (InLocation.x * InLocation.x - InLocation.y * InLocation.y);\n  return Basis;\n}\n\nvec3 RadiusToDir(float Theta, float Phi)\n{\n  return vec3(sin(Theta)*cos(Phi), sin(Theta)*sin(Phi), cos(Theta));\n}\n\nCubemapSH3 ConstructSHCoefficient()\n{\n  CubemapSH3 Ret;\n  for(int UTimes = 0; UTimes < SampleTimesDim; UTimes++)\n  {\n    for(int VTimes = 0; VTimes < SampleTimesDim; VTimes++)\n    {\n      vec2 UV;\n      UV.x = (float(UTimes) + 0.5f)/float(SampleTimesDim);\n      UV.y = (float(VTimes) + 0.5f)/float(SampleTimesDim);\n\n      float Theta = (1.0 - UV.y) * PI;\n      float Phi   = UV.x * PI * 2.0;\n\n      vec3 SampleDir = RadiusToDir(Theta, Phi);\n      vec4 Irradiance = texture(iChannel0, SampleDir);\n      Irradiance = sqrt(Irradiance.xyzw);\n\n      SH3 Ysh = GetSH3Basis(SampleDir);\n\n      Ret.R = SH3Add(Ret.R, SH3Mul(Ysh, Irradiance.r));\n      Ret.G = SH3Add(Ret.G, SH3Mul(Ysh, Irradiance.g));\n      Ret.B = SH3Add(Ret.B, SH3Mul(Ysh, Irradiance.b));\n    }\n  }\n  float SampleTotalTimes = float(SampleTimesDim * SampleTimesDim);\n  float Factor = (4.0f * 3.14159f) / SampleTotalTimes;\n  Ret.R = SH3Mul(Ret.R, Factor);\n  Ret.G = SH3Mul(Ret.G, Factor);\n  Ret.B = SH3Mul(Ret.B, Factor);\n  return Ret;\n}\n\nvec3 SampleFromSH(CubemapSH3 InSHCoefficient, vec3 Dir)\n{\n  vec3 RetVal;\n  SH3 Ysh = GetSH3Basis(Dir);\n  RetVal.r = SumSH( SH3Mul( InSHCoefficient.R, Ysh) );\n  RetVal.g = SumSH( SH3Mul( InSHCoefficient.G, Ysh) );\n  RetVal.b = SumSH( SH3Mul( InSHCoefficient.B, Ysh) );\n  return RetVal;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  CubemapSH3 Val = ConstructSHCoefficient();\n\n  // Normalized pixel coordinates (from 0 to 1)\n  vec2 UV = fragCoord/iResolution.xy;\n\n  float Theta = (1.0 - UV.y) * PI;\n  float Phi   = UV.x * PI * 2.0;\n\n  vec3 Dir = RadiusToDir(Theta, Phi);\n\n  vec3 Irradiance = SampleFromSH(Val, Dir);\n  Irradiance *= Irradiance;\n\n  //fragColor = texture(iChannel0, Dir);\n  fragColor = vec4(Irradiance, 1.0f);\n}","name":"Image","description":"","type":"image"}]}