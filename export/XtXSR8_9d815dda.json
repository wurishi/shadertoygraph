{"ver":"0.1","info":{"id":"XtXSR8","date":"1434229859","viewed":148,"name":"Julia set stuff","username":"Lallis","description":"Playing around with some simple julia stuff :)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define iMax 1024.\n\n\n\nvec3 julia(vec2 z)\n{\n   // vec2 c = vec2(sin(iTime*0.5),cos(iTime*0.5));\n   // vec2 c = vec2(-0.1,0.85)+sin(iTime*0.5)*0.05;\n    vec2 c = vec2(-0.125,0.7252)+sin(iTime*0.1)*0.0002;\n    float j;\n    for(float i = 0.0 ; i<iMax; i++)\n    {\n        j = i;\n        z = vec2(z.x*z.x-z.y*z.y, z.x*z.y+z.x*z.y);\n        z = vec2(z.x*z.x-z.y*z.y, z.x*z.y+z.x*z.y);\n    \tz = vec2(z.x*z.x-z.y*z.y, z.x*z.y+z.x*z.y) + c;\n        float d = length(z);\n        if(d > 2.0) break;\n    }\n\treturn vec3(j/64.,j/32.,j/16.);  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.0*uv-1.0;\n    uv.x*=1.78;\n    float ang = sin(iTime*(-0.25));\n\tmat2 rotation = mat2(cos(ang), sin(ang),-sin(ang), cos(ang));\n    uv*=rotation;\n    uv*=sin(iTime*0.1)*0.5+1.0;\n    \n    vec3 col = julia(uv);\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}