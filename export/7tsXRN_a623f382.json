{"ver":"0.1","info":{"id":"7tsXRN","date":"1625397422","viewed":1863,"name":"2D rounded rectangular outline ","username":"Rabbid76","description":"a 2 dimensional rectangular outline with rounded corners","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","square","rectangle","outline","quad","rounded"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from https://iquilezles.org/articles/distfunctions\nfloat roundedBoxSDF(vec2 CenterPosition, vec2 Size, float Radius)\n{\n    return length(max(abs(CenterPosition)-Size+Radius,0.0))-Radius;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2  size           = vec2(300.0, 200.0);\n    vec2  location       = iMouse.xy;\n    float thickness      = 5.0;\n    float shadowSoftness = 30.0f;\n    vec2  shadowOffset   = vec2(10.0, -10.0);\n    float edgeSoftness   = 1.0;\n    float radius         = (sin(iTime*2.0) + 1.0) * 30.0 + thickness * 2.0;\n    \n    float distance       = roundedBoxSDF(location - fragCoord.xy, size/2.0, radius);\n    float smoothedAlpha  = 1.0 - smoothstep(-edgeSoftness, edgeSoftness, abs(distance) - thickness);\n    vec4  quadColor      = mix(vec4(1.0), vec4(0.0, 0.2, 1.0, smoothedAlpha), smoothedAlpha);\n    \n    float shadowDistance = roundedBoxSDF(location + shadowOffset - fragCoord.xy, size/2.0, radius);\n    float shadowAlpha    = 1.0 - smoothstep(-shadowSoftness/2.0, shadowSoftness/2.0, abs(shadowDistance));\n    vec4 shadowColor     = vec4(0.4, 0.4, 0.4, 1.0);\n    fragColor            = mix(quadColor, shadowColor, shadowAlpha - smoothedAlpha);\n}","name":"Image","description":"","type":"image"}]}