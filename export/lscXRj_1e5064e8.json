{"ver":"0.1","info":{"id":"lscXRj","date":"1460210586","viewed":172,"name":"Yolo Trippy","username":"Vicious","description":"yolo","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["yolo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define speed (25.2)\n#define k2PI (2.*3.14159265359)\n#define kStarDensity .011\n#define kMotionBlur 1.4\n#define kNumAngles 90. + sin(iTime)*30.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position = ( fragCoord.xy -  iResolution.xy*.5 ) / iResolution.x; // use this for mouse panning\n\tfloat A = atan(position.y,position.x);\n\tfloat angle0 = A / k2PI;\n\tfloat angle = fract(angle0 + .002*iTime);\n\tfloat rad = .3*length(position);\n\tfloat angleFract = fract(angle*kNumAngles);\n\tfloat angleStep = floor(angle*kNumAngles);\n\tfloat angleToRandZ = 10.*fract(angleStep*fract(angleStep*.7535)*45.1);\n\tfloat angleSquareDist = fract(angleStep*fract(angleStep*.82657)*13.724);\n\tfloat t = speed * iTime - angleToRandZ;\n\tfloat angleDist = (angleSquareDist+0.1);\n\tfloat adist = angleDist/rad*kStarDensity;\n\tfloat dist = abs(fract((t*.1+adist))-.5);\n\tfloat white1 = max(0.,1.0 - dist * 100.0 / (kMotionBlur*speed+adist));\n\tfloat white2 = max(0.,(.5-.5*cos(k2PI * angleFract))*1./max(0.6,2.*adist*angleDist));\n\tfloat white = white1*white2;\n\tvec3 color;\n\tcolor.r = .03*white1 + white*(0.3 + 5.0*angleDist);\n\tcolor.b = white*(0.1 + .5*angleToRandZ);\n\tcolor.g = 0.2*white;\n\t\n\tfloat nebD1 = 1.0/rad + 4.5*(1.0 + sin(1.1 + 3.0*A + 0.71*cos(2.0*A)));\n\tfloat nebD2 = 1.0/rad + 3.7*(1.0 + sin(3.7 + 2.0*A + 0.46*sin(3.0*A)));\n\tfloat R1 = 1.0 * rad * (1.0 + sin(0.3+3.0*A + 2.4 * cos(0.2+3.0*A)*sin(2.1+0.42*(nebD1+speed*iTime)) + sin(2.0*6.283*position.x) ));\n\tfloat R2 = 1.0 * rad * (1.0 + sin(1.1+4.0*A + 3.2 * cos(0.7+4.0*A)*sin(1.7+0.27*(nebD2+speed*iTime)) + cos(3.0*6.283*position.y) ));\n\tfloat P1 = 0.5 + .5*sin(5.7*position.x+.22*(speed*iTime));\n\tfloat P2 = 0.5 + .5*sin(4.44*position.y+.17*(speed*iTime)) ;\n\tcolor.r += 0.6*R1 + 0.3*R2 + 0.1*P1*P2 ;\n\tcolor.b += 0.3*R1 + 0.8*R2 + .1*P2*R1;\n\tcolor.g += 1.1*R1*R2*P2;\n\tfragColor = vec4( (color.grb+ vec3(texture(iChannel0, (fragCoord.xy / iResolution.xy))))/1.1, 1.0);\n}","name":"Image","description":"","type":"image"}]}