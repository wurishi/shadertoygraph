{"ver":"0.1","info":{"id":"ctj3zc","date":"1673632705","viewed":62,"name":"Viking","username":"jpbt","description":"Viking Boat","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["project1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a,b,t)\n//function\nfloat TaperBox(vec2 pos, float wBot, float wTop, float yBot, float yTop, float blur){\n    //bottom edge\n    float box = S(-blur, blur, pos.y-yBot);\n    //top edge\n    box *= S(blur, -blur, pos.y-yTop);\n   \n    pos.x = abs(pos.x);\n    \n    //width of the bottom\n    float w = mix(wBot, wTop,(pos.y-yBot) / (yTop-yBot));\n    box *= S(blur, -blur, pos.x-w);\n    \n    return box;\n}\n\n\n//boat design\nvec4 Boat(vec2 uv, vec3 col, float blur)\n{\n    \n    float box = TaperBox(uv, .02, .02, .0, .99, blur);//boat trunk\n    //float box1 = TaperBox(uv, .80, .95, -.1, .2, blur);//boat middle piece-----------\n    //box += TaperBox(uv, .4, .85, -.36, .1, blur);//boat middle piece(big)\n    //botwidth, topwidth, botHeight, topHeight,\n    box += TaperBox(uv, .80, .95, -.1, .2, blur);//boat middle piece-----------\n    box += TaperBox(uv, .40, .45, -.0, .24, blur);\n    box += TaperBox(uv, .20, .25, -.0, .28, blur);\n    \n    //front part of boat\n    box += TaperBox(uv-vec2(.75,0), .2, .15, .2, .3, blur);\n    box += TaperBox(uv-vec2(.75,0), .15, .08, .3, .4, blur);\n    box += TaperBox(uv-vec2(.75,0), .08, .04, .4, .7, blur);\n    box += TaperBox(uv-vec2(.85,0), .14, .14, .65, .7, blur);\n    box += TaperBox(uv-vec2(.85,0), .14, .0, .7, .8, blur);\n    box += TaperBox(uv-vec2(.97,0), .0, .02, .6, .65, blur);\n    box += TaperBox(uv-vec2(.95,0), .0, .02, .6, .65, blur);\n    \n    //back part of boat\n    box += TaperBox(uv-vec2(-.75,0), .2, .15, .2, .3, blur);\n    box += TaperBox(uv-vec2(-.75,0), .15, .08, .3, .4, blur);\n    box += TaperBox(uv-vec2(-.75,0), .08, .04, .4, .5, blur);\n    box += TaperBox(uv-vec2(-.75,0), .04, .08, .5, .6, blur);\n    box += TaperBox(uv-vec2(-.75,0), .08, .0, .6, .7, blur);\n    box += TaperBox(uv-vec2(-.71,0), .04, .0, .6, .7, blur);\n    box += TaperBox(uv-vec2(-.79,0), .04, .0, .6, .7, blur);\n    box += TaperBox(uv-vec2(-.77,0), .04, .08, .45, .55, blur);\n    box += TaperBox(uv-vec2(-.79,0), .04, .08, .4, .5, blur);\n    \n    //boat flag\n    box += TaperBox(uv-vec2(.2,0), .2, .2, .85, .90, blur);//boat mid flag------\n    box += TaperBox(uv-vec2(.17,0), .15, .15, .85, .95, blur);//boat top flag\n    box += TaperBox(uv-vec2(.12,0), .11, .11, .94, .98, blur);//boat top2 flag\n    box += TaperBox(uv-vec2(.15,0), .15, .15, .80, .85, blur);//boat bot flag\n    box += TaperBox(uv-vec2(.12,0), .1, .1, .76, .83, blur);//boat bot2 flag\n    box += TaperBox(uv-vec2(.08,0), .06, .06, .73, .8, blur);//boat bot2 flag\n    \n    float shadow = TaperBox(uv-vec2(.75,0), .0, .03, .3, .5, blur);\n    \n    //boat eyes, tooths and marks\n    shadow += TaperBox(uv-vec2(.85,0), .0, .02, .7, .75, blur);\n    shadow += TaperBox(uv-vec2(.87,0), .06, .0, .64, .67, blur);\n    shadow += TaperBox(uv-vec2(.77,0), .03, .0, .2, .4, blur);\n    shadow += TaperBox(uv-vec2(.73,0), .03, .0, .2, .4, blur);\n    shadow += TaperBox(uv-vec2(-.87,0), .06, .0, .64, .67, blur);\n    shadow += TaperBox(uv-vec2(-.77,0), .03, .0, .2, .4, blur);\n    shadow += TaperBox(uv-vec2(-.73,0), .03, .0, .2, .4, blur);\n    shadow += TaperBox(uv-vec2(-.75,0), .0, .03, .3, .5, blur);\n    shadow += TaperBox(uv, .7, .8, -.0, .1, blur);\n    \n    col -= shadow;\n    \n    return vec4(col, box);\n}\n//function for dots multiplication\nfloat Hash21(vec2 p)\n{\n    p = fract(p*vec2(234.45, 765.34));\n    p += dot(p, p+547.123);\n    return fract(p.x *p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized uv coordinates to make origin in the middle\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    //my sea color\n    vec4 seaColor = vec4(0.4, 0.6, 1.0, 1.0);\n    \n    //zoom out\n    uv *= 6.;\n    vec4 col = vec4(0);\n    float blur = .005;  \n    \n    //see line and waves\n    float seaWave = sin(iTime + uv.x + 7.  * 5.0)/8.0 +0.2 + (sin(-iTime * 4.0 + uv.x * 16.0)/64.0);\n    \n    //stars\n    float stars = pow(Hash21(uv), 20.);\n    col += stars;\n    \n    //moon design with a another overlapping for crescent mooon effect \n    float moon = S(.01, -.01, length(uv-vec2(4.5,2))-.9);\n    col *= 1.-moon;\n    moon *= S(-.1, .3, length(uv-vec2(4.8,2.5))-.9);\n    col += moon;\n    \n    //boat call with a sin and time addition for moving effect\n    vec4 boat = Boat(uv*vec2(0.4,0.4)+ sin(iTime * 1.) * 0.08, vec3(2.,1.,0.), blur);\n    col = mix(col, boat, boat.a);\n    \n    // Output to screen\n     if(uv.y < seaWave)\n\t\t//fragColor = water;\n        fragColor = seaColor;\n    else\n        fragColor = vec4(col);\n    \n} ","name":"Image","description":"","type":"image"}]}