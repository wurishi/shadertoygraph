{"ver":"0.1","info":{"id":"3ss3W4","date":"1546285784","viewed":201,"name":"Cyber Space Explained","username":"Xor","description":"Here's a requested explanation of my older shader: https://www.shadertoy.com/view/XlVSzh","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["3d","voxels","light","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\t\"Cyber Space Explained\" by Xor\n\n\tYou can see the original here: https://www.shadertoy.com/view/XlVSzh\n*/\n\nvoid mainImage(out vec4 Color,vec2 Coord)\n{\n    //Here is the camera ray vector. It has an approximate length of 2.\n    vec3 R = vec3(2, (Coord*2.-iResolution.xy)/iResolution.y);\n\n    //The color must be initialized on some machines. Color -= Color also works.\n    Color = vec4(0);\n    \n    //Loop through the z layers.\n    for (float Z = -8.; Z<8.; Z+=.1)\n    {\n        //Fade in and out near the z edges.\n        float Fade = 1.-Z*Z/64.;\n        \n        //Set a color and fade it.\n        vec4 Col = vec4(.3,.6,1,1) * Fade;\n        \n        //Calculate the ray position.\n        vec3 Pos = iTime*vec3(4,1,0)+(Z+14.)*R;\n        \n        //Get a voxel hash at the ray position using a simple hash.\n        float Hash = fract(3e2*cos(dot(floor(Pos),vec3(7,8,86))));\n        \n        //Filter all lower amplitude results out.\n        Col *= smoothstep(.99,1.,Hash);\n        \n        //Add to the final color.\n        Color += Col;\n    }\n}","name":"Image","description":"","type":"image"}]}