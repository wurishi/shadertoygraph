{"ver":"0.1","info":{"id":"wdXfRM","date":"1587924662","viewed":103,"name":"Ceramic Mosaic","username":"HyiKing","description":"Mosaics tiled random pattern","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tiled","pattern","tiles","mosaics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 16.0 // The Scale of the coordinate UV\n\nfloat box(vec2 uv, vec2 bottomLeft, vec2 topRight) {\n    vec2 step1 = step(bottomLeft, uv);\n    vec2 step2 = step(1.0-topRight, 1.0-uv);\n    return step1.x*step1.y*step2.x*step2.y;\n}\n\nfloat rand1(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(4.2504,62.223))) * 43758.5453);\n}\n\nvec4 get4Rand(vec2 x) {\n\treturn vec4(rand1(x), rand1(x+0.3), rand1(x+0.7), rand1(x+0.4));\n}\n\nfloat randInt(vec2 x) {\n\treturn floor(rand1(x)+0.5);\n}\n\nfloat randInt(vec2 x, float range) {\n\treturn floor(range*rand1(x));\n}\n\nvec4 get4RandInt(vec2 x) {\n\treturn vec4(randInt(x+0.05, 2.9999), randInt(x+0.21, 3.9999), randInt(x+0.17, 3.9999), randInt(x+0.66, 3.9999));\n}\n\nvec2 posFragInsideGrid(vec2 stScaled) {\n    return vec2(floor(stScaled)+1.0);\n}\n\nvec3 col1 = vec3(9./255., 49./255., 74./255.);\nvec3 col2 = vec3(26./255., 90./255., 116./255.);\nvec3 col3 = vec3(93./255., 138./255., 116./255.);\nvec3 col4 = vec3(184./255., 187./255., 141./255.);\nvec3 col5 = vec3(243./255., 240./255., 236./255.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = gl_FragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    // pattern move to the right\n    float t = iTime/20.0;\n    // interresting thing but cannot control it... (-:\n    //float interval = step(2.0,mod(uv.x-t,3.0))*0.5*fract(iTime/2.0);\n    uv.x -= t;\n    \n    // Background\n    vec3 color = col1;\n\n    vec2 uvScaled = uv*SCALE; // Scale up the space by SCALE value\n    vec2 uvTiled = fract(uvScaled); // Wrap arround 1.0\n    \n    // Choice color\n    vec2 posFrag = posFragInsideGrid(uvScaled);\n\tfloat r1 = randInt(posFrag);\n    float r2 = randInt(posFrag+0.1);\n    float r3 = randInt(posFrag+0.23);\n    float r4 = randInt(posFrag+0.5);\n    \n    vec4 randChoiceColor = get4RandInt(posFrag);\n    vec3 colTile = col2;\n    if (randChoiceColor.x == 0.0) {\n        colTile = col2;\n    } else if (randChoiceColor.x == 1.0) {\n    \tcolTile = col3;\n    } else if (randChoiceColor.x == 2.0) {\n   \t\tcolTile = col4;\n    }\n    \n    // Move inside tile\n    t = iTime/2.0;\n    float isTranslated = randInt(posFrag+0.3);\n    float directionTr = randInt(posFrag+0.15);\n    float valTr = isTranslated*(sin(t)+1.0)/4.0;\n    vec2 tr = vec2(directionTr*valTr, (1.0-directionTr)*valTr);\n    isTranslated = randInt(posFrag+0.9);\n    t = iTime;\n    valTr = isTranslated*(cos(t)+1.0)/4.0;\n    directionTr = randInt(posFrag+0.45);\n    vec2 tr2 = vec2(-directionTr*valTr, (-1.0+directionTr)*valTr);\n    \n    // Final blend\n\tcolor = mix(color, colTile, box(uvTiled, vec2(0.1, 0.1), vec2(0.4, 0.4)+tr)*r1);\n    color = mix(color, colTile, box(uvTiled, vec2(0.1, 0.6), vec2(0.4, 0.9))*r2);\n    color = mix(color, colTile, box(uvTiled, vec2(0.6, 0.1), vec2(0.9, 0.4))*r3);\n    color = mix(color, colTile, box(uvTiled, vec2(0.6, 0.6)+tr2, vec2(0.9, 0.9))*r4);\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}