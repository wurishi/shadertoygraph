{"ver":"0.1","info":{"id":"X32SRR","date":"1710195082","viewed":41,"name":"Ethiopian flag","username":"freab","description":"tried to do Ethiopian flag with math","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 flag(vec2 uv) {\n    vec2 c = vec2(0.0);\n    float d = length(uv - c);\n    float r = 0.3;\n    vec4 color;\n\n    if (d < r) {\n        color = vec4(0.0235, 0.2706, 0.6941, 1.0); // Blue\n    } else {\n        float region = floor((uv.y + 0.5) / (1.0 / 3.0));\n        vec3 col;\n\n        if (region == 0.0) col = vec3(0.9373, 0.2, 0.251);    // Red\n        else if (region == 1.0) col = vec3(0.9961, 0.8667, 0.0);  // Yellow\n        else if (region == 2.0) col = vec3(0.0, 0.6039, 0.2667);  // Green\n        else col = vec3(0.0);  \n\n        color = vec4(col, 1.0);\n    }\n\n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.48 * iResolution.xy) / iResolution.y;\n\n    float t = uv.x * 7.0 - 2.0 * iTime + uv.y * 3.0;\n    uv.y += sin(t) * 0.05;\n\n    vec3 col = flag(uv).rgb;\n\n    col *= 0.7 + cos(t) * 0.3;\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}