{"ver":"0.1","info":{"id":"ldGBWt","date":"1530998287","viewed":127,"name":"Audio Viz 1","username":"stevekane","description":"This is a quick learning project to do audio visualization in ShaderToy","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["audio","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CENTER vec2(.5)\n#define RIGHT vec2(1., 0.)\n#define WANDER_RADIUS .2\n#define RAY_LENGTH .8\n\n#define BASS vec2(.1, .25)\n\n#define BG vec3(.98, .95, .95)\n#define SATURATION .7\n\nfloat sdf_circle (vec2 p, vec2 c, float r) \n{\n\tfloat d = length(p - c);\n    float sdf = d - r;\n    return sdf;\n}\n\nvec3 hsv_to_rgb(vec3 c) \n{\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{ \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 center = CENTER + vec2(sin(iTime), cos(iTime * 2.3)) * WANDER_RADIUS;\n    vec2 dir = normalize(uv - center);\n    \n    float bass = texture(iChannel0, BASS).r;\n        \n    float index = abs(dot(RIGHT, dir));\n    float radius = texture(iChannel0, vec2(index, 0)).r * RAY_LENGTH;\n    float f = clamp(-sdf_circle(uv, center, radius), 0., RAY_LENGTH);\n    \n    \n    vec3 noise = vec3(texture(iChannel1, uv - sin(iTime + texture(iChannel2, uv)).r).r);\n    vec3 shade = hsv_to_rgb(vec3(\n        texture(iChannel2, vec2(sin(iTime + uv.y * uv.x))).r, \n        SATURATION * abs(sin(iTime)), \n        step(.01, f + uv.x + uv.y)));\n    vec3 c; \n    \n    \n    c = mix(shade, noise, .5), \n    c = mix(c, BG, step(.01, f));\n    \n    fragColor = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}