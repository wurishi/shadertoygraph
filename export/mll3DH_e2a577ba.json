{"ver":"0.1","info":{"id":"mll3DH","date":"1671721852","viewed":170,"name":"Kodi-shadertoy wave mix ","username":"krr","description":"// Based on https://www.shadertoy.com/view/XtjXDW and https://www.shadertoy.com/view/wd3Bzl adapted for use on Kodi shadertoy Add-On that has a slightly different audio input.\n","likes":3,"published":1,"flags":4,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on https://www.shadertoy.com/view/XtjXDW and\n// https://www.shadertoy.com/view/wd3Bzl adapted for use on \n// Kodi shadertoy Add-On that has a slightly different audio\n// input.\n\n\nfloat WAVE_WIDTH = 0.01;\n\nfloat samplePiecewiseSmooth(in float x, in float res) {\n    float xTimesRes = x * res;\n\n    // Left sample point:\n    float x1 = floor(xTimesRes) / res;\n    float y1 = texture(iChannel0, vec2(x1, 0)).x;\n\n    // Right sample point:\n    float x2 = ceil(xTimesRes) / res;\n    float y2 = texture(iChannel0, vec2(x2, 0)).x;\n\n    // Prevent small breaks in the line:\n    x2 += 0.001;\n\n    // Fit half of a sine wave between sample points:\n    float sine = sin(((x - x1) / (x2 - x1) * 2.0 - 1.0) * 1.5707963267);\n    return y1 + (0.5 + 0.5 * sine) * (y2 - y1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        vec2 uv = fragCoord.xy / iResolution.xy;\n\n        vec3 wave_color = vec3(0.);\n\n        // To create the waves\n        uv  = -1.0 + 2.0 * uv;\n        uv.y += 0.7;\n \n\n    float curSample = samplePiecewiseSmooth(uv.x, 10.0);\n    for (int i = 0; i < 10; i++){\n       \n//        if (i < 3)\n         uv.y += ( .06*sin(uv.x + iTime));\n\n        float wave_width = abs(1.0 / (300.0 * (uv.y - 2.*curSample)));\n        wave_color += vec3(wave_width * 1.9, wave_width, wave_width * 1.5);\n    }\n\n        fragColor = vec4(wave_color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}