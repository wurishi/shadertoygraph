{"ver":"0.1","info":{"id":"Xc33D8","date":"1711614024","viewed":43,"name":"PolyFlower","username":"March3rd","description":"Simple poly shape function","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","geometry","polyshape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define center vec3(0.5, 0.5, 0.0)\n#define thickness 0.3\n#define start_n 5\n#define end_n 16\nfloat getEdge(vec3 delta, vec3 edge, float dist, float limit) {\n    vec3 v = dot(delta, edge) * edge;\n    vec3 h = delta - v;\n    if (length(h) < dist && length(v) < limit && cross(h, edge).z > 0.0) {\n        return 1.0 - (dist - length(h)) / thickness;\n    }\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0);\n    vec3 pos = vec3(uv, 0.0);\n    vec3 delta = center - pos;\n    int n = start_n + int(iTime / 3.1415926 / 2.0 + 0.5) % (end_n - start_n);\n    float dist = (cos(iTime) + 1.0) * 0.2;\n    float limit = dist * tan(3.1415926 / float(n));\n    float theta = cos(iTime) * 3.1415926;\n    for (int i = 0; i < n; i ++) {\n        vec3 edge = vec3(cos(theta), sin(theta), 0.0);\n        col += getEdge(delta, edge, dist, limit) * vec3(uv, sin(iTime) * 0.5 + 0.5);\n        theta += 2.0 * 3.1415926 / float(n);\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}