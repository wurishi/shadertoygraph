{"ver":"0.1","info":{"id":"4sycDD","date":"1532860716","viewed":157,"name":"Collatz Generalized v2","username":"tholzer","description":"Generalized Collatz fractal originally created by IQ:\n    f(n) = a·n+b    if n is odd    \n    f(n) = n/2        if n is even. \nNow with interactive change of values a and b.\nkeys: 'z' zoom, 'w' wobble","likes":4,"published":1,"flags":16,"usePreview":0,"tags":["2d","fractal","iq","antialiased","collatz","generalized"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//------------------------------------------------------\n// CollatzGeneralizedV2.glsl    4sycDD   by tholzer\n//\n//   v1.0  2018-07-29   initial version\n//   v1.1  2018-08-27   key input added\n//\n// original https://www.shadertoy.com/view/lssfDs by inigo quilez (iq)\n// Created by inigo quilez - iq/2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//\n// Generalized Collatz fractal\n//\n//   f(n) = a·n + b   if n even\n//   f(n) = n/2       if n odd\n//\n// transforms into\n//\n//   f(z) = [ ((2a+1)·z+2b) - k((2a-1)·z+2b) ] / 4\n//   with k = exp(-nz). \n//\n//  see video at:   https://www.youtube.com/watch?v=GJDz4kQqTV4 \n//  others:         https://www.shadertoy.com/view/llcGDS\n//\n// Classic Collatz: a=3, b=1\n//------------------------------------------------------\n\n#define AA 2   // supersampling level. Make higher for more quality.\n\nbool zooming = false;\nbool wobble  = false;\n\nconst float pi = 3.1415926535897932384626433832795;\n\n//------------------------------------------------------\n// complex numbers\n//------------------------------------------------------\nvec2 cadd( vec2 a, float s ) { return vec2( a.x+s, a.y ); }\nvec2 cmul( vec2 a, vec2 b )  { return vec2( a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x ); }\nvec2 cdiv( vec2 a, vec2 b )  { return vec2( dot(a,b), a.y*b.x - a.x*b.y ) / dot(b,b); }\nvec2 cmulj( vec2 z ) { return vec2(-z.y, z.x); }\nvec3 cexp ( vec2 z ) { return vec3( exp( z.x), cos(z.y), sin(z.y)); }\nvec3 cexpj( vec2 z ) { return vec3( exp(-z.y), cos(z.x), sin(z.x)); }\n\n//==========================================================\n//  k e y    handling\n//==========================================================\n\nconst int KEY_W = 87;\nconst int KEY_Z = 90;\n\n//----------------------------------------------------------\n// get javascript keycode: http://keycode.info/\n//----------------------------------------------------------\nbool ReadKey(int key, bool toggle)\n{\n  return 0.5 < texture(iChannel3\n    ,vec2((float(key)+0.5) / 256.0, toggle ? 0.75 : 0.25)).x;\n}\n\n//------------------------------------------------------\nvec3 render( in vec2 fragCoord)\n{\n    float zoom = 5.;\n    vec2 ce = vec2(0.0, 0.4);  // center   \n    if (zooming)  { zoom = 1.0; ce.y -= 0.3; } \n    if (wobble)   { zoom = 2.0; ce = vec2(sin(iTime*0.4),-0.2); } \n\n    vec2 p = ce + zoom*(-iResolution.xy+2.0*fragCoord) / iResolution.x;\n    vec2 z = p;\n    \n    float a = iMouse.x / iResolution.x * 4.0; \n    float b = iMouse.y / iResolution.y * 8.0 - 1.0;\n    if ((iMouse.x == 0.0) \n     && (iMouse.x == 0.0))\n    { a = 3.0; b = 2.0; }\n    \n    float f = 1.0;\n    const float th = 100000.0;\n    for( int i=0; i<164; i++ )\n    {\n        // f(n) = n/2 if n even\n        // f(n) = a·n+b if n odd\n        vec3 k = cexpj( pi*z );\n        z = ( cadd((2.0*a+1.0)*z,2.0*b) - k.x*cmul(k.yz,cadd((2.0*a-1.0)*z,2.0*b)))/4.0;\n        \n        if (length(z) > th)\n        { f = float(i);\n          break; \n        }\n    }\n    float hmmmm = 1.05 + exp(-(a-3.0)/(1.0+a/2.0));\n    f -= clamp( hmmmm*log(length(z)/th)/log(a), 0.0, 1.0 );\n    vec3 col = 0.5 + 0.5*cos(f*pow(a,0.9)*0.1 + 2.5 + vec3(0.0,0.6,1.0));\n    return clamp( col, 0.0, 1.0 );\n}\n//------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  zooming = ReadKey(KEY_Z, true);\n  wobble  = ReadKey(KEY_W, true);\n    \n  vec3 col = vec3(0.0);\n    \n  #if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n      vec2 px = fragCoord + vec2(float(m),float(n))/float(AA);\n      col += render( px);\n    }\n    col /= float(AA*AA);\n  #else\n    col = render (fragCoord);\n  #endif            \n    \n  fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}