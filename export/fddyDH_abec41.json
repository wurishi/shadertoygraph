{"ver":"0.1","info":{"id":"fddyDH","date":"1653416001","viewed":353,"name":"One-Million-Sample Blur","username":"fizzer","description":"Using multiple passes for motion blur results in an exponential number of samples in the number of passes. In this case there are 4 passes and 32 samples per pass = pow(32, 4) = 1,048,576 effective texture samples (but 4 x 32 = 128 actual samples).","likes":26,"published":1,"flags":32,"usePreview":0,"tags":["blur","rotation","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    \n    float th0 = motionAngle(iTime);\n    float th1 = motionAngle(iTime + framePeriod);\n    \n    vec3 col;\n\n    if(uv.x > 0.)\n        col = sampleRadialBlur(iChannel1, uv, vec4(1.0, 1.0, 0.0, 0.0), vec2(th0, th1), globalGamma, 4);\n    else\n        col = texelFetch(iChannel0, ivec2(fragCoord.xy), 0).rgb;\n\n    col = mix(col, vec3(1), 1. - smoothstep(.002, .002 + fwidth(uv.x) * .5, abs(uv.x)));\n\n    fragColor = vec4(pow(col, vec3(1. / globalGamma)), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const int log2NumSamplesPerPass = 5;\nconst int numSamplesPerPass = 1 << log2NumSamplesPerPass;\nconst float framePeriod = 1. / 60.;\nconst int numPasses = 4;\nconst float globalGamma = 2.2;\n\nfloat motionAngle(float t)\n{\n    float c = cos(t / 4.);\n    return pow(abs(c), 1. / 3.) * sign(c) * 500.;\n}\n\nvec3 sampleRadialBlur(sampler2D tex, vec2 uv, vec4 xfrm, vec2 ths, float gamma, int pass)\n{\n//    float periodFraction = pow(float(numSamplesPerPass), float(-(numPasses - pass)));\n    float periodFraction = exp2(float(-(numPasses - pass)) * float(log2NumSamplesPerPass));\n\n    vec3 col = vec3(0);\n\n    for(int i = 0; i < numSamplesPerPass; ++i)\n    {\n        float th = mix(ths.x, ths.y, float(i) / float(numSamplesPerPass) * periodFraction);\n        vec2 uv2 = mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n        col += pow(textureLod(tex, uv2 * xfrm.xy + xfrm.zw, -256.).rgb, vec3(gamma));\n    }\n\n    col /= float(numSamplesPerPass);\n    \n    return col;\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    \n    float th0 = motionAngle(iTime);\n    float th1 = motionAngle(iTime + framePeriod);\n\n    vec3 col = sampleRadialBlur(iChannel0, uv, vec4(1.0, 1.0, 0.0, 0.0), vec2(th0, th1), globalGamma, 1);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    float aspectRatio = iResolution.y / iResolution.x;\n    \n    float th0 = 0.;\n    float th1 = motionAngle(iTime + framePeriod) - motionAngle(iTime);\n\n    vec3 col = sampleRadialBlur(iChannel0, uv, vec4(aspectRatio, 1.0, 0.5, 0.5), vec2(th0, th1), 1., 2);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    float aspectRatio = iResolution.y / iResolution.x;\n    \n    float th0 = 0.;\n    float th1 = motionAngle(iTime + framePeriod) - motionAngle(iTime);\n\n    vec3 col = sampleRadialBlur(iChannel0, uv, vec4(aspectRatio, 1.0, 0.5, 0.5), vec2(th0, th1), 1., 3);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    float aspectRatio = iResolution.y / iResolution.x;\n    \n    float th0 = 0.;\n    float th1 = motionAngle(iTime + framePeriod) - motionAngle(iTime);\n\n    vec3 col = sampleRadialBlur(iChannel0, uv, vec4(aspectRatio, 1.0, 0.5, 0.5), vec2(th0, th1), 1., 4);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}