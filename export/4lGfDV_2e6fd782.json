{"ver":"0.1","info":{"id":"4lGfDV","date":"1544042662","viewed":99,"name":"Baby's first garbage shader","username":"TheSteveIAm","description":"Practicing some basic things, manual box placement, color mixing, scaling, rotating, nothing fancy.\nI have no idea what I'm doing, but I'm doing something!\nFeedback and tips are very welcome!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SMOOTH(r,R) (1.0-smoothstep(R-1.0,R+1.0, r))\n#define PI 3.14159265359\n\nfloat circle(vec2 uv, vec2 center, float radius, float width)\n{\n    float r = length(uv - center);\n    return SMOOTH(r-width/2.0,radius)-SMOOTH(r+width/2.0,radius);\n}\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n\n    st.x *= iResolution.x/iResolution.y;\n\n    vec3 color = vec3(0.);    \n    \n    st += vec2(-0.4,0.0);\n    \n    st *= 3.;\n\tst = fract(st);\n    st -= vec2(0.5);\n    st = rotate2d( sin(iTime)*PI * 2.) * st;\n    st = scale( vec2(sin(iTime)+1.0)) * st;\n    //st = scale(vec2(0.3)) * st;\n    st += vec2(0.5);\n    \n    //box shapes yo \n    color += box(st + vec2(0., 0.1), vec2(0.02,0.3/6.));\n    color += box(st + vec2(0., -0.1), vec2(0.02,0.3/6.));\n    color += box(st + vec2(0.1, 0.), vec2(0.3/6., 0.02));\n    color += box(st + vec2(-0.1, 0.), vec2(0.3/6., 0.02));\n    \n    st -= vec2(0.5);\n    st = rotate2d(0.75) * st;\n    st += vec2(0.5);\n    \n    color += box(st + vec2(0., 0.1), vec2(0.02,0.3/6.));\n    color += box(st + vec2(0., -0.1), vec2(0.02,0.3/6.));\n    color += box(st + vec2(0.1, 0.), vec2(0.3/6., 0.02));\n    color += box(st + vec2(-0.1, 0.), vec2(0.3/6., 0.02));\n    \n    st -= vec2(0.5);\n    st = rotate2d(0.4) * st;\n    st += vec2(0.5);\n    \n    color += box(st + vec2(0., 0.066), vec2(0.01,0.016));\n    color += box(st + vec2(0., -0.066), vec2(0.01,0.016));\n    color += box(st + vec2(0.066, 0.), vec2(0.016,0.01));\n    color += box(st + vec2(-0.066, 0.), vec2(0.016,0.01));\n    \n    st -= vec2(0.5);\n    st = rotate2d(0.8) * st;\n    st += vec2(0.5);\n\t\n    color += box(st + vec2(0., 0.066), vec2(0.01,0.016));\n    color += box(st + vec2(0., -0.066), vec2(0.01,0.016));\n    color += box(st + vec2(0.066, 0.), vec2(0.016,0.01));\n    color += box(st + vec2(-0.066, 0.), vec2(0.016,0.01));\n    \n    //random circle stuff, messing with mixing\n    color += mix(vec3(0.0,0.0,0.0), vec3(0.000,1.000,0.981), smoothstep(circle(st, vec2(0.5), 1.0, 1.0), 0.21, 0.21));\n    color -= mix(vec3(0.0,0.0,0.0), vec3(0.000,1.000,0.723), smoothstep(circle(st, vec2(0.5), 1.0, 1.0), 0.20, 0.22));\n    color += mix(vec3(0.0,0.0,0.0), vec3(0.974,0.472,1.000), smoothstep(circle(st, vec2(0.5), 1.0, 1.0), 0.19, 0.23)); \n    color -= mix(vec3(0.0,0.0,0.0), vec3(1.000,0.010,0.038), smoothstep(circle(st, vec2(0.5), 1.0, 1.0), 0.18, 0.24));\n   \tcolor += mix(vec3(0.0,0.0,0.0), vec3(1.000,0.456,0.000), smoothstep(circle(st, vec2(0.5), 1.0, 1.0), 0.17, 0.2)); \n    color -= mix(vec3(0.0,0.0,0.0), vec3(1.000,0.891,0.130), smoothstep(circle(st, vec2(0.5), 1.0, 1.0), 0.16, 0.8));\n    \n    fragColor = vec4(color,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}