{"ver":"0.1","info":{"id":"msByR1","date":"1687405006","viewed":42,"name":"Just playin","username":"cody_codes","description":"My first project with shadertoy!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t) {\n    // [[-0.542 0.588 0.498] [-1.502 0.158 0.468] [-1.172 -2.602 -2.112] [-0.112 -2.222 -0.782]]\n    \n    vec3 a = vec3(-0.542, 0.588, 0.498);\n    vec3 b = vec3(-1.502, 0.158, 0.468);\n    vec3 c = vec3(-1.172, -2.602, -2.112);\n    vec3 d = vec3(-0.112, -2.222, -0.782);\n\n    return a + b*cos( 6.28318*(c*t*d) );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 3.0; i++){\n    \n        uv = fract(uv * 1.4) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 color = palette(length(uv0) + i*.4 + iTime*.5);\n\n        d = sin(d*8.0 + iTime)/8.0;\n        d = abs(d);\n\n        d = 0.004 / d;\n\n        finalColor += color * d;\n      }\n\n    fragColor = vec4(finalColor, 1.0);\n       \n   \n} ","name":"Image","description":"","type":"image"}]}