{"ver":"0.1","info":{"id":"NtVXRW","date":"1640266381","viewed":116,"name":"Shiny 2D stylized waves","username":"AnicetN","description":"Just waves","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14;\n\nfloat wave(vec2 p, inout vec3 tangent, float t, float ang, float ampl, float wl, float spd) {\n    float k = (2.*PI)/wl;\n    float f = (dot(vec2(cos(ang), sin(ang)), p.xy) - spd - t) * k;\n    \n    tangent += normalize(vec3(1., k*ampl*cos(f), 0.));\n    return ampl * sin(f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0.2, 0.4, 0.7);\n    float zoom = 1.2;\n    float t = (iTime*zoom)/2.;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = (2.*uv) - vec2(1.);\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 tangent = vec3(0.);\n    float h = wave(uv, tangent, -t, PI/2., 0.3, 1.*zoom, 0.1)\n        + wave(uv, tangent, t, PI/3.5, 0.4, 0.4*zoom, 10.)\n        + wave(uv, tangent, t, PI/4., 0.8, 0.7*zoom, 2.)\n        + wave(uv, tangent, -t, PI/4.5, 1., 2.*zoom, 7.);\n\n    vec3 n = vec3(-tangent.y, tangent.x, 0);\n    \n    vec3 p = vec3(uv.x, h, uv.y);\n    vec3 lpos = vec3(cos(t)*1., 2., sin(t)*1.);\n    float lam = smoothstep(0., 2., dot(n, normalize(lpos-p)));\n    \n    vec3 water = smoothstep(-1., 0.3, lam)*vec3(color);\n    vec3 shiny = (vec3(smoothstep(0.9, 1., lam))*vec3(1., 1., 1.)*0.5);\n    \n    fragColor = vec4(water+shiny, 1.0);\n}","name":"Image","description":"","type":"image"}]}