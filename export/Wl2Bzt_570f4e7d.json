{"ver":"0.1","info":{"id":"Wl2Bzt","date":"1599623036","viewed":91,"name":"test of \"Anti-alias any shader\" ","username":"mosaic","description":"Instructions here https://www.shadertoy.com/view/wtjfRV","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float divScotFlag( vec2 uv) {\n    float botRight = step( uv.x + uv.y, 1. );\n    float botLeft = step( uv.x + 1. - uv.y, 1. );\n    \n    // Scottish flag ( sorta )\n    float scotFlag = abs(botRight - botLeft);\n    float divider = step( uv.x, .5);\n    \n    // Divided scottish flag\n    return abs( divider - scotFlag);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec4  fC ( in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord-.5*iResolution.xy) / iResolution.y; // Aspect Ratio adjustment\n    \n     if (iMouse.z <= 0.){\n    \n    if (uv.x < -0.5) uv=(uv+0.6)*rotate2d(iTime/5.); //rotate\n         \n    else if (uv.x >= -.5 && uv.x < 0.)  uv.x+=sin(iTime/5.+uv.y);  //wave\n        \n    else if (uv.x >=0. && uv.x < 0.5)  uv*=(2./1.+sin(iTime/2.)); //zoom\n        \n    else if ( uv.x >= 0.5)    uv.y/=((uv.x))+cos(iTime/2.)+0.8; // flower\n    \n         }\n          //mod instead of \"pow\" here is nice too\n    else uv=(pow(abs(uv),iMouse.xy/iResolution.y)-iTime/5.);\n         \n    uv.y *= 5./3.; // adjust height width ratio\n\n    // Checker pattern\n\treturn vec4(  vec3( divScotFlag( fract(uv * 4.) ) )+.4, 1.0);\n}\n\n\n\n\n\n\n// Box-filter by Greg Rostami\nvoid mainImage( out vec4 o, vec2 u )\n{\n    o-=o;\n    float A = 8.,  // Change A to define the level of anti-aliasing (1 to 16) ... higher numbers are REALLY slow!\n          s = 1./A, x, y;\n    \n    for (x=-.5; x<.5; x+=s) for (y=-.5; y<.5; y+=s) o += fC(vec2(x,y)+u);\n        \n\to /= A*A;\n}","name":"Image","description":"","type":"image"}]}