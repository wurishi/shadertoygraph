{"ver":"0.1","info":{"id":"Wd2cWV","date":"1587358467","viewed":634,"name":"Psychoid","username":"Kali","description":"Made during a streaming test session.","likes":21,"published":1,"flags":96,"usePreview":0,"tags":["2d","fractal","music","audioreactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=fragCoord.xy/iResolution.xy;\n    vec4 col=texture(iChannel0,uv);\n    vec2 pix=vec2(0.,1.)*smoothstep(.0,1.3,length((uv-.5)))*col.a*.01;\n    col+=texture(iChannel0,uv+pix.xy);\n    col+=texture(iChannel0,uv-pix.xy);\n    col+=texture(iChannel0,uv+pix.yx);\n    col+=texture(iChannel0,uv-pix.yx);\n    col*=vec4(1.2,1.,.8,1.)*.17;\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XljGDD","filepath":"https://soundcloud.com/darrenburgos/psychoid-mindovermatter-mix","previewfilepath":"https://soundcloud.com/darrenburgos/psychoid-mindovermatter-mix","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//#define iTime iChannelTime[1]\nconst int aa=3;\nfloat k;\n\nmat2 rot(float a) {\n    a=radians(a);\n\tfloat s=sin(a), c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec3 fractal(vec2 p) {\n    p+=vec2(sin(iTime),cos(iTime))*.15;\n    p/=dot(p,p); \n\tfloat d=length(p)*.005*k;\n    p*=rot(sin(iTime)*45.);    \n    p*=sin(iTime*.2);\n    p+=iTime*.5;\n\tfloat ml=100., m=100.;\n    vec2 mc=vec2(100.);\n    for (int i=0; i<7; i++) {\n    \tp=abs(5.-mod(p*2.,10.))-1.;\n//        if (fract(iTime*1.15*.125*.5)>.5) p*=3./dot(p,p);\n    \tp*=rot(iTime*2.);\n        ml=min(ml,min(abs(p.x),abs(p.y)));\n        mc=min(mc,abs(p));\n        m=min(m,abs(p.x-1.));\n    }\n    float l=smoothstep(.0,.5,abs(.5-fract(m*2.+iTime)));\n    ml=exp(-10.*ml);\n    m=exp(-20.*m);\n    mc=exp(-10.*mc);\n    return vec3(mc.x,ml*.6,mc.y*1.5)*ml*l*l+m+d*(1.+k);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tk=texture(iChannel1,vec2(.6)).r;\n    k=smoothstep(.3,.7,k)*4.;\n    vec2 uv=(fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n    vec2 pix=1./iResolution.xy/float(aa*2);\n    vec3 col=vec3(0.);\n    for(int i=-aa; i<=aa; i++) {\n\t    for(int j=-aa; j<=aa; j++) {\n        \tvec2 d=vec2(i,j)*pix;\n            col+=fractal(uv+d);\n        }\n    }\n    col/=float(aa*aa*4);\n    col=mix(vec3(length(col)),col,.7);\n    col=mix(texture(iChannel0,fragCoord.xy/iResolution.xy).rgb,col,.3);\n    fragColor = vec4(col,k);\n}","name":"Buffer A","description":"","type":"buffer"}]}