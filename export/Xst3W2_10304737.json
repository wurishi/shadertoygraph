{"ver":"0.1","info":{"id":"Xst3W2","date":"1452251060","viewed":241,"name":"Visual Cortex","username":"davidar","description":"Click on the image to reinitialise.\n\nNot an accurate simulation, but note the distinctive \"pinwheels\": [url]http://nn.cs.utexas.edu/computationalmaps/figures/2.4.php[/url]","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["2d","simulation","visual","cortex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// 2016 David A Roberts <https://davidar.io>\n\n#define PI 3.141592653589793\nvec3 hue2rgb(float h) { return clamp(abs(mod(6.*h+vec3(0,4,2),6.)-3.)-1.,0.,1.); }\nfloat atanp(in vec2 p) { return atan(p.y,p.x); }\nvoid mainImage(out vec4 r, in vec2 p) {\n    if(iFrame < 10 || iMouse.z > 0.) return;\n    vec2 orientation = texture(iChannel0, p.xy / iResolution.xy).xy;\n    r.xyz = hue2rgb(atanp(orientation)/(2.*PI) + iTime/50.); r.w = 1.;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// 2016 David A Roberts <https://davidar.io>\n\n// 2 out, 3 in... <https://www.shadertoy.com/view/4djSRW>\n#define MOD3 vec3(.1031,.11369,.13787)\nvec2 hash23(vec3 p3) {\n\tp3 = fract(p3 * MOD3);\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract(vec2((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y));\n}\n\nvoid mainImage(out vec4 c, in vec2 p) {\n    c.zw = vec2(1);\n    if(iFrame < 10 || texture(iChannel0,p/iResolution.xy).z == 0. || iMouse.z > 0.) {\n        c.xy = hash23(vec3(p,iFrame)) - 0.5;\n    } else {\n        vec2 o = vec2(0);\n        for(int i = -1; i <= 1; i++) for(int j = -1; j <= 1; j++)\n            o += texture(iChannel0, (p + vec2(i,j)) / iResolution.xy).xy;\n        c.xy = normalize(o);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}