{"ver":"0.1","info":{"id":"XscSzj","date":"1460152453","viewed":837,"name":"simple raymarching tunnel","username":"flewww","description":"Simple tunnel. using raymarching for rendering","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","tunnel","square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 pos) {\n    vec3 tmp = vec3(1.0) - abs(pos);\n    return min(tmp.x, tmp.y);\n}\n\nvec3 color(vec3 pos) {\n    vec3 blue = vec3(0.5, 0.5, 1.0);\n    vec3 red  = vec3(1.0, 0.5, 0.5);\n    return mix(blue, red, step(0.5, fract(pos.z)));\n}\n\nvec3 march(vec2 uv, vec3 cam_pos) {\n    vec3 pos = cam_pos;\n    vec3 dir = normalize(vec3(uv, 1));\n    float d;\n    for (int i=0; i<100; i++){\n        d = map(pos);\n        if (d < 0.01) {\n            return color(pos)*exp(-(pos.z-cam_pos.z)*0.6);\n        }\n        pos += d*dir;\n    }\n    return vec3(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (-iResolution.xy + 2.0*fragCoord.xy)/iResolution.y;\n    vec3 cam_pos = vec3(sin(iTime)*0.5, sin(iTime*10.0)*0.1, iTime);\n    fragColor = vec4(march(uv, cam_pos), 1.0);\n}","name":"Image","description":"","type":"image"}]}