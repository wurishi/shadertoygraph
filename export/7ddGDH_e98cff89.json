{"ver":"0.1","info":{"id":"7ddGDH","date":"1629753794","viewed":85,"name":"R2 Sequence ","username":"mr_bepe","description":"Copy and Modified from https://www.shadertoy.com/view/WlsSW2\nhttp://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sampling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float lineThickness = 3.0;\n\n\nconst vec2 quasi2 = vec2(.754877666247,.569840290998); // R2 Sequence from http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/\n\nvoid mainImage( out vec4 fragColour, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n\n    \n    float penOut = lineThickness/iResolution.y;\n    float penIn = (lineThickness-2.8)/iResolution.y;\n\n    //fragColour = vec4(0,0,0,1);\n\n    int interval = 200;\n\n    int interval_start = interval * int(iTime);\n    int interval_stop = interval_start + interval;\n    \n    float closest = 1e38;\n    float closest2 = 1e38;\n    for ( int i=interval_start; i < interval_stop; i++ )\n    {\n        // R2 Sequence\n        vec2 pos = fract(quasi2*float(i+1));\n\n        // wrap the pattern based on what pixel we're drawing\n        pos += floor(uv+.5-pos);\n\n        float l = length(pos-uv);\n\t\tif ( l < closest )\n        {\n            closest = l;\n\t\t\tfragColour.rgb = vec3(0);// * (1.-l*sqrt(float(interval*20)));\n        }\n\n        fragColour.rgb = mix(fragColour.rgb,vec3(1),smoothstep(penOut,penIn,length(pos-uv)));\n    }\n    \n    // cell borders\n    //fragColour.rgb *= smoothstep(penIn,penOut,(closest2-closest));//*scale);\n}\n","name":"Image","description":"","type":"image"}]}