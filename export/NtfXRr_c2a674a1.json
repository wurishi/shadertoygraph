{"ver":"0.1","info":{"id":"NtfXRr","date":"1625051359","viewed":314,"name":"correlated AA blend","username":"FabriceNeyret2","description":"Representing subpixel coverage as transparency for antialiasing assumes there is no correlation with background. Problem: repainting the same shape is 100% correlated: try click different locations.\nLeft: naive AA. Right: smart AA.\nTop: textured Bot: mask","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["antialiasing","blending","correlation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    if ( int(U.x)==int(R.x/2.) || int(U.y)==int(R.y/2.) ) { O=vec4(0,1,0,1); return; }\n    \n    U = zoom(U);\n    \n    O = sqrt( T(U) ); // to sRGB\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// texture to splat\n//#define T1(U) vec4(cos(vec3(atan((U).y-M.y, (U).x-M.x)) - vec3(0., 2., 4.)) * .5 + .5, 1)\n  #define T1(U) texture( iChannel1, .5 + .5*(M-U)/R )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U);\n // O = iFrame > 1 ? T(U) : texture(iChannel1,U/R).grba;\n    \n    vec2  M = iMouse.xy;\n    if (length(M)<10.) M = R/2. + R/4.*cos(floor(iTime*2.)+vec2(0,11)); // auto-demo if no mouse click\n    M = zoom(M);\n    float d = smoothstep(1.5,0., length(M-U)-.03*R.y ); // disc mask\n    \n    vec4 C = U.y < R.y/2. \n       ? vec4(1)                                        // bottom: draw disc mask\n       : T1(U);                                         // top: draw textured disc\n    \n    if ( U.x < R.x/2. ) \n       O = mix(O, C, d );                               // left: naive AA blend\n    else                                                // right: smart AA blend \n       O = mix( clamp( ( O - d*C ) / (1.-d)  , 0.,1.) , C, d );\n             // trick: left = restore the background color before previous blend\n             // note that we shoud test d != 1, but clamp(Inf) = 1 \n             // also, funnily it still work when there was no prvious shape\n    // C *= d, O = clamp( O, C, C + 1.-d );   // simplifies to this (thanks iq ! )\n\n    // O = vec4( mix( clamp( ( O - O.a*C ) / (1.-O.a)  , 0.,1.) , C, d ).rgb, d); // WIP variant\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R         iResolution.xy\n#define T(U)      texelFetch( iChannel0, ivec2(U), 0 )\n#define zoom(U) ( ( U - R/2. ) /3. + R/2. )","name":"Common","description":"","type":"common"}]}