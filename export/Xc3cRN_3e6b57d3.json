{"ver":"0.1","info":{"id":"Xc3cRN","date":"1730296681","viewed":54,"name":"vertical multiple-color gradient","username":"VEShaderStuff","description":"experiment with gradients between more than four colors.  next time i will try blending all four across the entire gradient with non-uniform distribution.  this one only looks good because the palette i used has a gradual color progression.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["gradient","yellow","pink","green","blue","purple"],"hasliked":0,"parentid":"4XcGDS","parentname":"basic-bitch linear gradient"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 blend(vec3 first, vec3 last, float interp_fact) {\n    return (1.0 - interp_fact) * first + interp_fact * last;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n// credit for this palette goes to: https://colorhunt.co/palette/10439f874cccc65bcff27bbd\n    vec3 colors[] = vec3[6](\n      vec3(16.0 / 255.0, 67.0 / 255.0, 159.0 / 255.0), // blue\n      vec3(135.0 / 255.0, 76.0 / 255.0, 204.0 / 255.0), // purple\n      vec3(198.0 / 255.0, 91.0 / 255.0, 207.0 / 255.0), // somewhere between purple and pink\n      vec3(242.0 / 255.0, 123.0 / 255.0, 189.0 / 255.0), // pink, // somewhere between purple and pink\n      vec3(22.0 / 255.0, 123.0 / 255.0, 84.0 / 255.0), // dark green\n      vec3(242.0 / 255.0, 23.0 / 25.0, 19.0 / 255.0) // yellow\n   );\n   \n   int col_idx[] = int[2](\n       clamp(int(floor(uv.y * float(colors.length()))), 0, colors.length() - 1),\n       clamp(int(ceil(uv.y * float(colors.length()))), 0, colors.length() - 1));\n   \n   float factor = uv.y * float(colors.length()) - float(col_idx[0]);\n   vec3 col = blend(colors[col_idx[0]], colors[col_idx[1]], factor);\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}