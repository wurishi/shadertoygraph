{"ver":"0.1","info":{"id":"4Xs3RB","date":"1707617015","viewed":112,"name":"Tree bend applied to iChannel0","username":"toriikyuu","description":"working example. Not my work - used from \nhttps://www.shadertoy.com/view/7tdGWj","likes":4,"published":1,"flags":0,"usePreview":1,"tags":["bend"],"hasliked":0,"parentid":"XXl3RB","parentname":"Tree bend Test"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 bend( vec2 uv, float angle )\n{\n    const float BLOCK_HEIGHT = 1.;\n    const float BLOCK_WIDTH = 1.;\n\n    float bendSign = angle < 0. ? -1. : 1.;\n    float bendRadius = BLOCK_HEIGHT / abs( angle );\n    \n    vec2 p = uv * vec2( bendSign, 1. ) + vec2( bendRadius, 0. );\n    \n    return vec2( ( length( p ) - bendRadius ) / BLOCK_WIDTH * bendSign + .5, atan( p.y, p.x ) / abs( angle ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.xy;\n    uv.y += 0.5;\n   \n    float bendAngle = sin( iTime * 3. + .01 ) * 0.2;        \n    \n    vec2 textureUV = bend( uv, bendAngle );\n    float textureUVIsValid = textureUV.x >= 0. && textureUV.x < 1. && textureUV.y >= 0. && textureUV.y < 1. ? 1. : 0.;\n                      \n    vec3 col = vec3( sin(textureUV*3.1415), 0.5 ) * textureUVIsValid;\n    vec4 background = texture(iChannel0, textureUV )* textureUVIsValid;\n    // Output to screen\n    fragColor = background;\n}\n","name":"Image","description":"","type":"image"}]}