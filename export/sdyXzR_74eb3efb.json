{"ver":"0.1","info":{"id":"sdyXzR","date":"1634236579","viewed":133,"name":"Fire Circles","username":"jonny_townend","description":"First shader on Shadertoy. Just playing around with blending 2D shapes together.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles","blending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(float value, float inMin, float inMax, float outMin, float outMax) {\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\nfloat circle(vec2 pos, float rad) {\n    return 1. - (length(pos) / .04);\n}\n\nfloat spinningCircle(vec2 uv, float rad, float offset) {\n    float circleRad = .005;\n    float rotationRad = rad * 2.;\n    vec2 mouseOffset = iMouse.xy / (5. * iResolution.xy);\n    float x = sin(iTime/6.0 + offset + mouseOffset.x) * rotationRad;\n    float y = cos(iTime/5.0 + offset * .6 + mouseOffset.y) * rotationRad;\n    vec2 pos = vec2(x, y);\n    float circle = circle(uv - pos, circleRad);\n\treturn map(circle, 0., 1., 0.409, 0.4999);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    const int N = 70;\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    float col = 1.0;\n    for (int i=0; i<N; i++) {\n        col /= spinningCircle(uv, float(i) / float(N), float(i));\n    }\n    fragColor = vec4(vec3(pow(col, 0.1), pow(col, 0.5), col), 1.);\n}","name":"Image","description":"","type":"image"}]}