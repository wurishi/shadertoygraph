{"ver":"0.1","info":{"id":"4lfBRX","date":"1512584709","viewed":85,"name":"SlimePatternZoom","username":"Del","description":"sinmagic","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["slime"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// um, some kind of mystical hole...?\nfloat glint(vec2 p)\n{\n    vec2 uv = p;\n    float speed = 0.68;\n    float linewidth = 1.38;\n    float grad = 3.0;\n    vec2 linepos = uv;\n    linepos.x = linepos.x - mod(iTime*speed,4.0)+2.0;\n    float y = linepos.x*grad;\n\tfloat s = smoothstep( y-linewidth, y, linepos.y) - smoothstep( y, y+linewidth, linepos.y); \n    return s;\n}\n\nfloat _glint(vec2 fragCoord )\n{\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n    float speed = iTime*0.2;\n \tfloat d = 1.0+p.x*0.25;\n    vec2 cst = vec2( cos(d+speed), sin(d+speed) );\n    float zoom = 1.0+(0.5*sin(iTime*0.675));\n    mat2 rot = zoom * mat2(cst.x,-cst.y,cst.y,cst.x);\n    float s = glint(p*rot*0.44);\n    return s;\n}\n\n\nvoid mainImage(out vec4 k, vec2 p)\n{\n    const vec4 col1 = vec4(0.0,.1,.1,1.0);\n    const vec4 col2 = vec4(0.5,0.9,0.3,1.0);\n    vec2 uv = p.xy / iResolution.xy;\n    float gl = _glint(p)*0.5;\n\n    float speed = iTime*0.2;\n \tfloat _fd = 1.0+uv.x*0.55;\n    vec2 cst = vec2( cos(_fd+speed), sin(_fd+speed) );\n    float zoom = 2.0+(0.5*sin(iTime*0.75));\n    mat2 rot = zoom * mat2(cst.x,-cst.y,cst.y,cst.x);\n    uv = rot*uv;\n    \n    \n    float s = sin(iTime*0.1);\n    float s2 = 0.5+sin(iTime*1.8);\n    float s3 = 0.5+sin(iTime*1.2);\n    vec2 d = uv*(9.0-s*0.9);\t\t\t\t\t\t// mod 4.0 for irregularity...\n    \n    d.x -= iTime*0.4-sin(d.y+ iTime*0.7)*0.2;\n    d.y += iTime*0.15+sin(d.x + iTime*0.3)*0.90;\t//-(s*0.5);\n    float v1=length(0.5-fract(d.xy))+0.70;\t\t\t\t// 0.9 =more gooey bits, 1.2 = less gooey bits\n\n    d = uv;\n    float v2=length(0.5-fract(d.xy))-0.075;\t\t// border\n    v1 *= 1.0-v2*v1;\n    v1 = v1*v1*v1;\n    v1 *= 2.9+s2*0.2;\n    k = mix(col2,col1,v1)*(3.2+(s2*0.2));\n    k *= 1.0-(v2);\n    \n    \n    if (k.g<=0.4)\n    {\n        float m = 1.0-clamp(k.g,0.0,0.5);\n\t\tfloat f = mod( floor(12.0*uv.x) + floor(12.0*uv.y), 2.0);\n        float col = 0.3 + 0.2*f*1.0;\n        k.x = k.y = k.z = col*m;\n  \t\tk.rb *= 1.2;\n    }\n    else\n    {\n\t\tfloat f = mod( floor(12.0*uv.x) + floor(12.0*uv.y), 2.0);\n        vec4 _col = 0.2*f*vec4(0.175);\n        k+=_col;\n    }\n    // glint\n    k *=vec4(1.0+gl);\n    \n}","name":"Image","description":"","type":"image"}]}