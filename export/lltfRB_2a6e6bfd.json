{"ver":"0.1","info":{"id":"lltfRB","date":"1540158473","viewed":1461,"name":"2D Shadows","username":"scratch13764","description":"This is my *bad and slow* attempt at a 2D shadow engine.\nAny suggestions would be greatly appreciated. \n","likes":2,"published":1,"flags":0,"usePreview":1,"tags":["rays","lighting","shadows"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = texture(iChannel0,uv*2.0); // I need to get the texture values before I scale (uv). Annoying.\n                                          // The texture appears 4 times because it looks better\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y; //this made it harder to get the texture working, but I had to do it.\n    \n    \n    //GRAPHICS QUALITY SETTINGS\n    \n    float stp = 0.01; // Step size for rays\n   int raycnt = 360; //How many rays will be drawn \n    \n    /////////////////////////////////////////////////\n    \n    vec2 ray;\n    int lim = int(120.0 / (stp * 100.0)); // limit of how far the ray may travel.\n    float sat = 0.02 / (float(raycnt)/360.0); // saturation, this defines how much a hit on a light source will effect the brightness of an image\n    vec3 light = vec3(0.1); // (how many rays have hit a light source so far) * sat\n                       // starts at 0.1 to make the whole scene lit.\n    vec3 color;\n    float brightness;\n    \n    int t;//I had to declare these outside of the loop so they could be referenced. (EDIT: I just screwed up my loops at first)\n    int r;//correct me if I'm wrong. (HINT: I WAS)\n    \n    vec2 stepv;\n    \n    for (t = 0; t < raycnt; t++) // sends a bunch of rays out to detect objects and light sources\n    {\n        ray = uv;\n        stepv = vec2(sin(radians(float(t) *360.0/float (raycnt)))*stp , cos(radians(float(t) *360.0/float (raycnt)))*stp);\n            \n        for (r = 0; r < lim; r++)\n        {\n            ray += stepv;\n            \n            /*\n            The following is where the ray is checked to either have hit an object or a light source\n            If you want to change it, feel free, the project should work fine unless you do something weird.\n            */\n            \n            //lights\n            if (length(ray) < 0.02)\n            {\n                color = vec3 (0.2, 1.0, 0.2);//execute this chunk of code for a light source\n                brightness = 3.0;\n                light += vec3(sat * color * brightness);\n                break;                          \n            }\n            if (length(vec2(ray.x -0.3, ray.y + 0.2)) < 0.05)\n            {\n                color = vec3( 1.0, 1.0, 1.0);\n                brightness = 1.0;\n                light += vec3(sat * color * brightness);\n                break;\n            }\n            //objects\n            if (length(vec2(ray.x - 0.5, ray.y)) < 0.1)\n            {    \n                break;// literally just break the loop for a solid object\n            }\n            \n        }\n    }\n    col = col * vec4(light, 1.0);\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}