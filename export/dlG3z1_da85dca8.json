{"ver":"0.1","info":{"id":"dlG3z1","date":"1683553565","viewed":112,"name":"implicit tri ","username":"grzesiekmq","description":"implicit triangle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["experiment","shader","rt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Ray{\n    vec3 origin  ;\n    vec3 dir  ;\n};\nvec3 rayDirection(float fieldOfView, vec2 fragCoord) {\n    vec2 xy = fragCoord - iResolution.xy / 2.0;\n    float z = (0.5 * iResolution.y) / tan(radians(fieldOfView) / 2.0);\n    return normalize(vec3(xy, -z));\n}\nbool hit_triangle(Ray ray){\n    float originX = ray.origin.x;\n    float originY = ray.origin.y;\n    float dirX = ray.dir.x;\n    float dirY = ray.dir.y;\n    float t0 = (1.0 - originY - originX) / (dirX + dirY);\n    float t1 = -(1.0 - originY + originX) / (dirX - dirY);\n\n \n    if (1.0 - (originY + t0 * dirY) <= 0.0 && t0 > 0.0) {\n    \n\n        return true;\n    }\n    else if (1.0 - (originY + t1 * dirY) <= 0.0 && t1 > 0.0) {\n    \n\n        return true;\n    }\n     \n\n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 dir = rayDirection(60.0, fragCoord);\n    Ray ray = Ray(vec3(0.0), dir);\n    vec3 col  ;\n\n    if(hit_triangle(ray)){\n        col =  vec3(0,0,1) ;\n    }\n    \n     \n    // test color\n   // col = vec3(0,1,0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}