{"ver":"0.1","info":{"id":"flGSzW","date":"1640225574","viewed":98,"name":"Universe With in Clone","username":"rockes","description":"https://www.youtube.com/watch?v=3CycKKJiwis\nhttps://www.youtube.com/watch?v=KGJUl8Teipk","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["artofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\nfloat DistLine(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba), 0., 1.);\n    return length(pa - ba*t);\n}\n\nfloat N21(vec2 p) {\n    p = fract(p*vec2(233.34, 851.73));\n    p += dot(p, p+23.45);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p) {\n    float n = N21(p);\n    return vec2(n, N21(p+n));\n}\n\nvec2 GetPos(vec2 id, vec2 offset) {\n    vec2 n = N22(id + offset) * iTime;\n    return offset + sin(n)*.4;\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b) {\n    float d = DistLine(p, a, b);\n    float m = S(.03, .01, d);\n    float d2 = length(a-b);\n    m *= S(1.2, .8, d2) * .5 + S(.05, .03, abs(d2 - .75));\n    return m;\n}\n\nfloat Layer(vec2 uv) {\n    float m = 0.;\n    \n    vec2 gv = fract(uv) - .5;\n    vec2 id = floor(uv);\n    \n    vec2 p[9];\n    int i = 0;\n    for(float y=-1.; y<=1.; y++) {\n        for(float x=-1.; x<=1.; x++) {\n            p[i++] = GetPos(id, vec2(x, y));\n        }\n    }\n    \n    float t = iTime * 10.;\n    for(int i=0; i<9; i++) {\n        m += Line(gv, p[4], p[i]);\n        vec2 j = (p[i] - gv) * 10.;\n        float sparkle = 1./dot(j, j);\n        m += sparkle * (sin(t + fract(p[i].x) * 10.) * .5 + .5);\n    }\n    m += Line(gv, p[1], p[3]);\n    m += Line(gv, p[1], p[5]);\n    m += Line(gv, p[7], p[3]);\n    m += Line(gv, p[7], p[5]);\n    \n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xy;\n    vec2 mouse = (iMouse.xy/iResolution.xy) - .5;\n    \n    float gradient = uv.y;\n    \n    float m = 0.;\n    float t = iTime * .1;\n    \n    float s = sin(t);\n    float c = cos(t);\n    mat2 rot = mat2(c, -s, s, c);\n    uv *= rot;\n    mouse *= rot;\n    \n    for(float i=0.; i<=1.; i+= 1./4.) {\n        float z = fract(i+t);\n        float size = mix(10., .5, z);\n        float fade = S(0., .5, z) * S(1., .8, z);\n        m += Layer(uv * size + i*20. - mouse) * fade;\n    }\n    \n    vec3 baseColor = sin(t*5.*vec3(.345, .456, .657)) * .4 + .6;\n    vec3 col = m * baseColor;\n    \n    float fft = texelFetch( iChannel0, ivec2(.7,0), 0).x;\n    gradient *= fft * 1.5;\n    \n    col -= gradient * baseColor;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}