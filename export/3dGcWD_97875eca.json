{"ver":"0.1","info":{"id":"3dGcWD","date":"1602804759","viewed":244,"name":"Pixelate with different  w and h","username":"henrmota","description":"This shader pixelate with different w and h for each pixel","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["pixelate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 pixel = vec2(20., 10.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n\n    vec2 d = vec2(1.0) / iResolution.xy;\n    vec2 q = floor(fragCoord.xy/pixel) * d * pixel;\n    \n\tvec4 pixelColor = vec4(0.0);\n    for(float x = 0.0; x < pixel.x; x++){\n        for(float y = 0.0; y < pixel.y; y++){\n            vec2 coord = q + (vec2(x,y) * d);  \n        \tpixelColor += texture(iChannel0, coord);\n        }\n    }\n    \n    vec4 color = pixelColor/(pixel.x * pixel.y);\n\t\n    \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}