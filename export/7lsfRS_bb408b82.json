{"ver":"0.1","info":{"id":"7lsfRS","date":"1653317088","viewed":133,"name":"blackhole v1","username":"MelisaHot","description":"Black hole","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["blackhole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float p, float d)\n{\n    float speed = p * pow(d, 5.0);\n    float c = cos(speed);\n    float s = sin(speed);\n    return mat2(vec2(c, -s), vec2(s, c));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.y/iResolution.x;\n    uv.y *= ratio;\n    vec3 ring_color = vec3(0.968, 0.462, 0.029);\n    \n    vec2 center = (iResolution.xy * .5) / iResolution.xy;\n    center.y *= ratio;\n     \n    float dist = distance(uv, center);\n    float inv_dist = 1.0 - dist;\n    vec2 direction = normalize(uv - center);\n    \n    float mask = smoothstep(.04, .1, dist);\n\n    float speed = -0.4;\n    float p1 = fract(iTime * speed +0.5);\n    float p2 = fract(iTime * speed);\n   \n    vec2 uv1 = (direction * inv_dist * .002) + p1 * direction;\n    vec2 uv2 = (direction * inv_dist * .002) + p2 * direction;\n    \n    float lerp = abs((0.5 - p1) / .99);\n    float samp1 = texture(iChannel0, uv1 * rot(2.4, inv_dist)).b;\n    float samp2 = texture(iChannel0, uv2 * rot(2.4, inv_dist)).r;\n \n    float samp3 = texture(iChannel0, uv1 * 2. * rot(2.6, inv_dist)).g;\n    float samp4 = texture(iChannel0, uv2 * 2. * rot(2.6, inv_dist)).g;\n    \n    float samp5 = texture(iChannel1, uv1 * rot(2.2, inv_dist) * .6).r;\n    float samp6 = texture(iChannel1, uv2 * rot(2.2, inv_dist) * .6).r;\n    \n    float stars = (0.5- smoothstep(0.236, 0.6, mix(samp3, samp4, lerp))) * 0.4;\n    \n   vec3 sp = mix(samp1, samp2, lerp) * vec3(1.);\n     sp *= 0.2;\n   \tsp += stars*ring_color*0.5;\n    sp += smoothstep(0.5, 0.14, mix(samp5, samp6, lerp)) * pow(inv_dist, 8.) * ring_color;\n    \n    vec3 col = ring_color*0.15;\n    float ring = pow(smoothstep(.82, .4, dist * 2.) * 3., 2.5);\n\n    //dithering algorithm\n    \n    fragColor = vec4(sp * mask + 1.2 * ring * mask * sp * col, 1.);\n}","name":"Image","description":"","type":"image"}]}