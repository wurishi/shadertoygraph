{"ver":"0.1","info":{"id":"4tcXDX","date":"1481733494","viewed":195,"name":"Pine forest!","username":"azsteak","description":"youhou","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["pines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float eyeToScreenDistance = 3.0;\n\nfloat slope = 0.0001;\nfloat eyeHeight = 10.0;\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nbool inPinePart(in vec2 coords, float height) {\n    \n    coords.y += height;\n    \n    float slope = 4.0;\n    float pinHeight = 0.5;\n    \n    bool aboveGround = coords.y > 0.0;\n    bool insideLeft  = coords.y < (pinHeight + slope * coords.x);\n    bool insideRight = coords.y < (pinHeight - slope * coords.x);\n    \n    return (aboveGround && insideLeft && insideRight);\n    \n}\n\n\nbool inPine(in vec2 coords, float X, float Z, float height) {\n    if(Z<0.0)return false;\n    \n\tfloat size = eyeToScreenDistance * height / Z;\n    float y = eyeToScreenDistance * +(height/2.0-eyeHeight) / Z +Z*slope;\n    float x = eyeToScreenDistance * X /Z;\n    \n    coords = coords - vec2(x,y);\n    coords /= size;\n    return inPinePart(coords, 0.0) ||\n        inPinePart(coords * 0.8, 0.2) ||\n        inPinePart(coords * 0.6, 0.4);\n}\n\n\nbool inSnow(in vec2 pixCoords, float radius, float speed) {\n    float random = rand(vec2(floor(pixCoords.x/40.0)*40.0,floor(pixCoords.y/50.0)*50.0));\n    pixCoords.y += 50.0 * speed * iTime;\n    pixCoords.x += 40.0 * cos(speed * iTime);\n    pixCoords.x = mod(pixCoords.x,radius * 20.0 );\n    pixCoords.y = mod(pixCoords.y, radius * 30.0 );\n    float flakeDistance = length(pixCoords - 2.0 * vec2(radius+ random*20.0, radius+ random*100.0));\n    return flakeDistance < radius;\n}\n\n\nvoid mainImage( out vec4 color, in vec2 pixCoords )\n{\n    if(pixCoords.y>iResolution.y/4.25*3.0)color = vec4(0.8, 0.8, 0.8 ,1.0);\n    else color = vec4(0.9,0.9,0.9,1);\n    //*\n    if (inSnow(pixCoords, 4.0, 2.0)) {\n        color = vec4(1.0, 1.0, 1.0 ,1.0);\n        return;\n    }\n    //*\n    if (inSnow(pixCoords, 4.0, 4.0)) {\n        color = vec4(1.0, 1.0, 1.0 ,1.0);\n        return;\n    }\n    \n    \n    if (inSnow(pixCoords, 3.0, 1.8)) {\n        color = vec4(1.0, 1.0, 1.0 ,1.0);\n        return;\n    }\n    \n\tif (inSnow(pixCoords, 2.0, 1.0)) {\n        color = vec4(1.0, 1.0, 1.0 ,1.0);\n    }//*/\n    \n    vec2 coords = pixCoords / iResolution.xy - vec2(0.5, 0.5);\n    \n    float zEye = iTime*100.0;\n    float zMax = 1000.0 + zEye;\n    float xEye = cos(iTime*2.0)*5.0;\n    \n    for(float z=30.0 ; z<700.0 ; z+=50.0){\n        for(float x=-102.5; x<100.0; x+=5.0){\n            float newZ = z+floor(zEye/50.0)*50.0;\n            float dZ = rand(vec2(newZ,x))*40.0;\n\t\t\tfloat dX = rand(vec2(x,newZ))*10.0;\n            float dHeight = rand(vec2(x,newZ+50.0))*10.0;\n            if (inPine(coords, x+xEye+dX, newZ-zEye + dZ,8.0+dHeight)) {\n                float whiteCoef = max(1.0,(newZ-zEye)/100.0);\n                color = vec4(1.0)-vec4(1.0, 0.4, 1.0 ,1.0)/whiteCoef;\n                return;\n            }\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}