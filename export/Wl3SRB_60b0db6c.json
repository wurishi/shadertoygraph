{"ver":"0.1","info":{"id":"Wl3SRB","date":"1581165616","viewed":127,"name":"grid texture application","username":"alarch","description":"Learning the ropes.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["grid","texture","perspective"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 0.1\n#define ROTATE\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv += -0.5;\n        uv.x *= iResolution.x/iResolution.y; // Aspect ratio\n\n    #ifdef ROTATE\n    uv *= mat2(sin(iTime * 0.1), cos(iTime * 0.1), -cos(iTime * 0.1), sin(iTime * 0.1));\n    #endif\n    \n    float d = 1./abs(uv.y); //depth  \n   \t\n    float movement = sin(iTime/8.0);\n           \n    if(abs(uv.y) > 0.3) \n    {\n    \tfragColor = texture(iChannel0, \n                            0.5-vec2(\n                                mod(SCALE*uv.x*d+movement,0.4),\n                                mod(SCALE*0.55/uv.y,0.1)\n                  \t\t\t\t)\n                            , 1.0);\n    }\n    else\n    \tfragColor = vec4(0.0); // don't draw center\n    \n    if(abs(uv.y) > 0.45)\n    {\n    \tfragColor = vec4(0.0); \n    }\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define LINEWIDTH 0.02\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col =  0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    //uv += -0.5;\n \n    //uv *= iResolution.xy  / iResolution.y;\n    \n    float foo = mod(uv.x+(LINEWIDTH/2.0), 0.1);\n    \n    float bar = mod(uv.y+(LINEWIDTH/2.0), 0.1);\n    \n    if(foo < LINEWIDTH)\n        col = vec3(0.0);\n   \n    if(bar < LINEWIDTH)\n        col = vec3(0.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}