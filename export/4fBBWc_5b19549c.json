{"ver":"0.1","info":{"id":"4fBBWc","date":"1725556090","viewed":37,"name":"Fire and water effect","username":"bogdanmikh","description":"Fire and water effect","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["fire","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14f\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float t = iTime;\n    vec4 color = vec4(vec3(0.0), 1.);\n    float n = 2.;\n    for(float i = 0.; i < n; i++){\n        vec2 currentUv = vec2(uv.x, uv.y - (i / iResolution.y));\n        vec3 lastColor = color.rgb;\n    \tcolor.rgb = max(lastColor, sin(i / 100. + texture(iChannel0, currentUv).rgb * abs(sin(iTime))));   \n    }\n    \n    float light = 0.3;\n   \n    color.rgb = sin((vec3(0., 0.4, 0.7) + color.rgb + uv.y) * pi) * 0.5 + light;\n\tfragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}