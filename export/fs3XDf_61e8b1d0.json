{"ver":"0.1","info":{"id":"fs3XDf","date":"1634046156","viewed":45,"name":"Like","username":"mikelsv","description":"Like","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["like"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ML_SMOOTH_RV(s, val) smoothstep(0.01 + s, s, val)\n\nfloat sdLike(vec2 p, bool full){\n    float val = 1.;\n\n    // Move\n    p += vec2(0.22, .22);\n    \n    // Box\n    float box_s = .19;\n    vec2 box_p = p + vec2(box_s, .0);\n    vec2 d = abs(box_p) - vec2(box_s, box_s / 2. * 3.);\n    val = length(max(d, 0.)) + max(d.x,d.y);\n\n    // Circle\n    vec2 cir_p = p - vec2(.75, .288);\n    for(int i = 0; i < 4; i ++){\n        if(cir_p.x - cir_p.y * .1 >= -0.005 || full)\n        val = min(val, length(cir_p) - .082);\n        cir_p += vec2(.03, .158);\n    }\n    \n    // Lines\n    vec2 lines[] = vec2[](\n        // Top\n        vec2(.0, 0.275),\n        vec2(.06, 0.28),\n        vec2(.0, 0.23),\n        vec2(.08, 0.29),\n        vec2(.25, 0.55),        \n        vec2(.24, 0.73),\n        vec2(.35, 0.74),\n        vec2(.43, 0.55),\n        vec2(.40, 0.37),\n        vec2(.78, 0.37),\n        \n        // Skip\n        vec2(99., 99.),\n        \n        // Bottom\n        vec2(-.00, -0.25),\n        vec2(.03, -.25),\n        vec2(.05, -0.27),\n        vec2(.67, -0.27)\n    );\n    \n    vec4 line = vec4(lines[0].xy, 0., 0.);\n    \n    for(int i = 1; i < lines.length(); i ++){\n        line.zw = lines[i].xy;\n        \n        if(line.xy == vec2(99., 99.) || line.zw == vec2(99., 99.)){\n            line.xy = line.zw;\n            continue;\n        }\n    \n        vec2 coord = p, a = line.xy, b = line.zw;\n        vec3 tr = vec3(length(a - coord), length(b - coord), length(a - b));\n        float bs = sqrt(tr.x * tr.y * (tr.x + tr.y + tr.z) * (tr.x + tr.y - tr.z)) / (tr.x + tr.y);    \n\n        val = min(val, bs * 1.);\n        line.xy = line.zw;\n    }\n\n    return val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uc = (2. * fragCoord - iResolution.xy) / iResolution.x;\n\n    vec3 col = vec3(0.);\n    bool full = sin(iTime * 5.) > 0.;\n    float val = sdLike(uc, full);\n    \n    if(!full)\n        val = abs(val);\n    \n    val = ML_SMOOTH_RV(0.01, val);\n    col.x = val;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}