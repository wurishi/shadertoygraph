{"ver":"0.1","info":{"id":"msKyzc","date":"1696423757","viewed":42,"name":"Spider Web","username":"davidmachadosf","description":"spider math function","likes":2,"published":1,"flags":16,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.141592;\n\nfloat xi = -.1;\nfloat xf = .1;\nfloat thetax = 0.;\n\nfloat yi = -.1;\nfloat yf = .1;\nfloat thetay = .5*3.141592;\n\nfloat n = 5.;\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    float[5] colors;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float x = (xi+(xf-xi)*uv.x);\n    float y = (yi+(yf-yi)*uv.y);\n    \n      \n    for(int i=0;i<5;i++){\n\n        /*if(params.absloglog)     d = log(abs(x)) + log(abs(y))\n        else if(params.abslogx)  d = log(abs(x)) +         y\n        else if(params.abslogy)  d =         x   + log(abs(y))\n        else if(params.linear)   d =         x   +         y\n        else if(params.lin_quad) d =         x   +       y*y\n        else if(params.quad)   */\n        float d =       x*x   +       y*y;\n        /*\n        else if(params.quad_cub) d =       x*x   +     y*y*y\n        else if(params.cub_quad) d =     x*x*x   +       y*y\n        else if(params.cubic)    d =     x*x*x   +     y*y*y\n        else if(params.quart)    d =   x*x*x*x   +   y*y*y*y\n        else if(params.quint)    d = x*x*x*x*x   + y*y*y*y*y\n        else if(params.inv)      d =       1/x   +       1/y\n        else if(params.inv_quad) d =   1/(x*x)   +   1/(y*y)\n        else if(params.inv_cub)  d = 1/(x*x*x)   + 1/(y*y*y)\n        else if(params.test)     d =  sin(log(abs(x*y))) + cos (log(abs(y/x)))*/\n\n        //float newx=sin(y/d+x/sqrt(n)+thetax);\n        //float newy=sin(x/d+y/sqrt(n)+thetay);\n        float newx=sin(y/d+x/sqrt(n)+thetax-2.0*iTime);\n        float newy=sin(x/d+y/sqrt(n)+thetay+0.5*iTime);\n\t\t\t\t\n\t\t\t\t//newx=sin(y/d+x/d+params.thetax)\n        //newy=sin(x/d+y/d+params.thetay)\n\t\t\t\t\n\t\t\t\t//newx=sin(y/sqrt(n)+x/sqrt(n)+params.thetax)\n        //newy=sin(x/sqrt(n)+y/sqrt(n)+params.thetay)\n\t\t\t\t\n\t\t\t\t//newx=sin(log(y)/d+log(x)/sqrt(n)+params.thetax)\n        //newy=sin(log(x)/d+log(y)/sqrt(n)+params.thetay)\n\t\t\t\t\n        x = newx;\n\t\ty = newy;\n        \n        colors[i]=abs(280.-pow(x+y,2.)*128.);\n      }\n\t\t\t\n\n    // Output to screen\n    //vec3 col = vec3();\n    \n    fragColor = vec4(colors[2]/256.,colors[3]/256.,colors[4]/256.,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// parameters\nconst ivec2 paramXi = ivec2(31, 1);\nconst ivec2 paramXf = ivec2(31, 3);\nconst ivec2 paramYi = ivec2(31, 5);\nconst ivec2 paramYf = ivec2(31, 7);\n\nconst ivec2 paramVel  = ivec2(31, 9);\nconst ivec2 paramFunc = ivec2(31,11);\n\n\n// change position\nconst int keyUp    = 38;\nconst int keyDown  = 40;\nconst int keyLeft  = 37;\nconst int keyRight = 39;\n\n\n// change scale\nconst int keyDec  = 111; // /\nconst int keyInc  = 106; // *\n\n\n// change scale velocity\nconst int keySlow = 109; // -\nconst int keyFast = 107; // +\n\n// change image functions\nconst int keyPrev = 33; // PgUp\nconst int keyNext = 34; // PgDown\n\n// reset to initial parameters\nconst int keyReset = 36; // Home\n\n","name":"Common","description":"","type":"common"}]}