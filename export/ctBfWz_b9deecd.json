{"ver":"0.1","info":{"id":"ctBfWz","date":"1693939404","viewed":75,"name":"Flower SDF","username":"TheTurk","description":"Distance function for six intersecting circles that form a flower.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["distancefield","sdf","lens","flower","circle","hexagon","distance","disk","arc","hexagonal","primitive","vesica","piscis","almond"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float flower(vec2 position, float radius) {\n    position = abs(position);\n    position -= min(position.y - sqrt(3.0) * position.x, 0.0) * vec2(-sqrt(3.0) * 0.5, 0.5);\n    position.y -= radius * 0.5;\n    position = abs(position);\n    if (position.x + sqrt(3.0) * 0.5 * radius < position.y * sqrt(3.0)) {\n        return length(position - vec2(0.0, 0.5 * radius));\n    }\n    return length(position - vec2(-sqrt(3.0) * 0.5 * radius, 0.0)) - radius;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 position = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    float radius = 0.8;\n    float d = flower(position, radius);\n\n    // same colorization that Inigo Quilez uses in his shaders\n    vec3 color = vec3(1.0) - sign(d) * vec3(0.1, 0.4, 0.7);\n    color *= 1.0 - exp(-4.0 * abs(d));\n\tcolor *= 0.8 + 0.2 * cos(120.0 * d);\n\tcolor = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 3.0, (abs(d) - 0.002) * iResolution.y));\n    if (iMouse.z > 0.0) {\n        vec2 mousePosition = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n        float d = flower(mousePosition, radius);\n        color = mix(color, vec3(1.0, 1.0, 0.0), 1.0 - smoothstep(0.0, 3.0, abs(length(position - mousePosition) - abs(d)) * iResolution.y - 1.0));\n    }\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}