{"ver":"0.1","info":{"id":"4XG3DG","date":"1718125126","viewed":19,"name":"petals111","username":"baggyPants666","description":"color cycling for flowers","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["flowers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Function to generate random numbers\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\n// Function to draw petals\nfloat drawPetal(vec2 uv, vec2 pos, float size) {\n    vec2 d = uv - pos;\n    float dist = length(d);\n    float angle = atan(d.y, d.x);\n    float petalShape = cos(angle * 6.0) * 0.5 + 0.5; // 6 petals for the shape\n    return smoothstep(size, size * 0.8, dist) * petalShape;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Petal particles\n    vec3 color = vec3(0.0); // Black background\n    for (int i = 0; i < 20; i++) {\n        float t = iTime + float(i) * 1234.5678;\n        vec2 petalPos = vec2(sin(t * 0.1), cos(t * 0.1)) * random(vec2(i, 0.0));\n        petalPos += vec2(sin(t), cos(t)) * 0.5 * (1.0 + random(vec2(i, 1.0)));\n        float petalSize = 0.05 + 0.02 * random(vec2(i, 2.0));\n        float petal = drawPetal(uv, petalPos, petalSize);\n        vec3 petalColor = vec3(sin(iTime * 0.3), cos(iTime * 0.3), sin(iTime * 0.6)); // Cycling colors\n        color = mix(color, petalColor, petal);\n    }\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}