{"ver":"0.1","info":{"id":"XsGcWG","date":"1523038770","viewed":134,"name":"tube yes","username":"trbrmrdr","description":"experiments in checkpoints","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","pulse","eyes","spiral","circle","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\n#define Lenght 60.\nconst vec2 s_va = vec2(.0,.1);\nconst vec2 ss0 = vec2(.1,.2);\nconst vec2 s0 = vec2(.1,1.);\nconst vec2 s1 = vec2(.3, 1.);\nconst vec2 s2 = vec2(.4, .65);\nconst vec2 s3 = vec2(.45, .75);\nconst vec2 s_tex0 = vec2(.65,1.);\nconst vec2 s_tex1 = vec2(.55,1.);\n\nfloat sinab(float a,float b,float v){return a+((sin(v)+1.)*.5)*(b-a);}\n\nfloat check(vec2 pi) { \n    float p_time = mod(time, Lenght);\n    float ret = smoothstep(pi.x, pi.y, p_time/Lenght);\n    return ret;\n}\n\nfloat check(vec2 pi,float f_t){ return check(pi) * f_t; }\n\n//___________________\n                          \nfloat saturate(float x){return clamp(x,0.,3.);}\n\nvec3 tex0(vec2 u){\n\tvec2 p= fract( fract(u) + \n                  (sin(u.y+time)/\n                   (6.4 + check(s_tex0,-6.1))\n                   //sinab(4.,4.5,u_time)\n                  )\n                 );\n\tfloat f=1. - saturate((max(length(p-vec2(0.25,0.5)),length(p-vec2(0.75,0.5)))-.5)*50.);\n\tf-=1.-saturate((length(p\n                           -.5\n                           //-sinab(.1,.2,time)\n                          )\n                    //-hash(floor(u*10.1)).x\n                    //-sinab(.2,.28,u_time + u.y + u.x*3.14)\n                    -(.2 - check(s_tex1, -.2))\n                    //-.2\n                \t//-sinab(.2,.4,time +u.y+u.x*3.14 )\n                   ) *50.);\n\treturn vec3(f);\n}\n\n\n#define time2 (time*.5)\nvec3 tex(vec2 u){\n    float dm = sinab(.0,1.,time2);\n    //dm=.3;\n    float v1 = .0;\n    float v2 = .0;\n    v1 = v2 = check(s2,.3);\n    {\n    \tv1 += check(s3, smoothstep(.0,.3,dm));\n    \tv2 += check(s3, smoothstep(.0,1.1,dm));\n\t}\n    \n\tvec2 u1 =  vec2(sin(time2+3.14),cos(time2+1.45)) *v1;\n\tvec2 u2 = vec2(sin(time2+2.78),cos(time2)) * v2;\n\tfloat mixv = distance(u1,u2) *.13;\n\tvec3 c1 = tex0(u+u1);\n\tvec3 c2 = tex0(u+u2);\n    \n\tfloat r = mix(c1.r, c2.r, mixv);\n\tfloat g = mix(c1.g, c2.g, 1.-mixv);\n\tfloat b = mix(c1.b, c2.b, mixv);\n\treturn vec3(r, g, b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float st_x = iResolution.x/iResolution.y; \n    uv.x *= st_x;\n    uv = uv*2.-vec2(1.*st_x,1.);\n    \n    float v_a = 1.+ check(s_va, .57);\n    float a = atan(uv.x,uv.y)/v_a;\n\tfloat d =  length(uv);\n    \n    float t = check(s0, time*.4 * (1.+check(vec2(.7,1.),-1.)));\n    float v_d = check(ss0,1.348);\n    vec2 k = vec2(a\n                  +check(s1,(time*0.005))\n                  ,v_d/d + t );\n    \n    vec3 tx =  tex(k * 4.);\n    fragColor = vec4(tx, 1.);\n}\n\n\n","name":"Image","description":"","type":"image"}]}