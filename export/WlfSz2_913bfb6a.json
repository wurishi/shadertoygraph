{"ver":"0.1","info":{"id":"WlfSz2","date":"1563563105","viewed":520,"name":"merge sort(divide & conquer)","username":"public_int_i","description":"merge sorting in glsl","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["sort","sorting","merge","divide","parallel","conquer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 o, in vec2 u)\n{\n    o = texelFetch(iChannel0,ivec2(u),0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 hash(vec4 a) {\n\treturn fract(abs(sin(a.ywxz*766.345)+cos(normalize(a)*4972.92855))*2048.97435+abs(a.wxyz)*.2735);\n}\n\nvoid mainImage( out vec4 o, in vec2 u)\n{\n    if (iFrame == 0) {\n        o = hash(u.xyxy).xxxx;\n        return;\n    }\n    \n    if (iFrame == 1) {\n     \t//divide iResolution.x into sorted arrays of 2 length\n        float dir = mod(floor(u.x),2.)*-2.+1.,\n            v = texelFetch(iChannel0,ivec2(u),0).x,\n            n = texelFetch(iChannel0,ivec2(u.x+dir,u.y),0).x;\n        if (dir > 0.) {\n\t\t\tif (v > n) v = n;\n        } else {\n         \tif (n > v) v = n;   \n        }\n        o = vec4(v);\n    } else {\n    \t//iteratively merge arrays until we have 1 array whos size is iResolution.x\n        float sz = pow(2.,float(iFrame));\n        if (sz > iResolution.x) {\n         \to = texelFetch(iChannel0,ivec2(u),0).xxxx;\n            return;\n        }\n        \n        float sz2 = sz/2., bx = floor(u.x/sz)*sz, bx2 = bx+sz2, bxl = bx2, bx2l = bx2+sz2;\n        bool on1 = true, on2 = true;\n        float sx = floor(u.x)-bx,\n            skip = max(0.,sx-sz2)*2., skip2 = floor(skip/2.);\n        bx += skip2;\n        bx2 += skip2;\n        sx -= skip;\n        float v1 = texelFetch(iChannel0,ivec2(bx,u.y),0).x, v2 = texelFetch(iChannel0,ivec2(bx2,u.y),0).x;\n        int slen = int(sx);\n        for (int i = 0; i < slen; i++) {\n            if ((on1 && v1 < v2) || !on2) {\n            \tbx++;\n                if ((on1 = bx<bxl)) v1 = texelFetch(iChannel0,ivec2(bx,u.y),0).x;\n            } else {\n             \tbx2++;\n                if ((on2 = bx2<bx2l)) v2 = texelFetch(iChannel0,ivec2(bx2,u.y),0).x;\n            }\n        }\n        if ((on1 && v1 < v2) || !on2) o = vec4(v1);\n    \telse o = vec4(v2);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}