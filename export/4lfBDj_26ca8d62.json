{"ver":"0.1","info":{"id":"4lfBDj","date":"1513250454","viewed":195,"name":"DCT basis","username":"Ultraviolet","description":"Discrete cosinus transform basis.\nRemake of  [url=https://en.wikipedia.org/wiki/File:Dctjpeg.png]this[/url] image.\nPress [b]Space[/b] for seeing the continuous version.\nPress [b]G[/b]to desactivate the grid.","likes":6,"published":1,"flags":16,"usePreview":0,"tags":["spectrum","basis","jpg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415972\n#define N  8.\n\nfloat DTCcoeff(vec2 k, vec2 x)\n{\n    return cos(PI*k.x*x.x)*cos(PI*k.y*x.y);\n}\n\n\nfloat DTCcoeff(ivec2 k, ivec2 x)\n{\n    return cos(PI*float(k.x)*((float(x.x)+.5)/N))*cos(PI*float(k.y)*((float(x.y)+.5)/N));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 UV = fragCoord / iResolution.xy;\n    UV.x *= iResolution.x/iResolution.y;\n    if(UV.x>1.)\n    {\n        fragColor=vec4(0.);\n        return;\n    }\n    UV.y = 1.-UV.y;\n    \n    vec2 IJ = floor(UV*N);\n    vec2 uv = (UV - IJ/N)*N;\n    vec2 ij = (floor(uv*N)+0.5)/N;\n    //vec2 ij = uv;\n    \n    if(texelFetch(iChannel0, ivec2(32, 0),0).x>0.5)\n        ij = uv;\n    \n//\tfragColor = vec4(UV,0.,1.0);\n//\tfragColor = vec4(vec2(IJ)/8.,0.,1.0);\n//\tfragColor = vec4(uv,0.,1.0);\n//\tfragColor = vec4(vec2(ij)/8.,0.,1.0);\n    \n    float val = DTCcoeff(IJ, ij);\n    \n    //float val = DTCcoeff(ivec2(IJ), ivec2(ij*8.));\n    \n    val = 0.5+0.5*val;\n    \n    fragColor = vec4(val);\n    \n    if(texelFetch(iChannel0, ivec2(71, 0),0).x<0.5)\n        if(any(greaterThan(max(uv, 1.-uv),vec2(0.98))))\n            fragColor = vec4(1., 0., 0., 1.);\n        \n}","name":"Image","description":"","type":"image"}]}