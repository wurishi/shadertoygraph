{"ver":"0.1","info":{"id":"7dscRB","date":"1642331702","viewed":115,"name":"Gradient with Bayer dithering","username":"motus_art","description":"Genuary Day 16; Color gradients gone wrong.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["genuary2022"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float colorFactor = 0.4;\nmat4 bayerThresholdMap = mat4(\n    vec4(00.0/8.0, 18.0/8.0, 03.0/8.0, 15.0/8.0),\n    vec4(08.0/8.0, 04.0/8.0, 18.0/8.0, 07.0/8.0),\n    vec4(08.0/8.0, 14.0/8.0, 08.0/8.0, 13.0/8.0),\n    vec4(10.0/8.0, 06.0/8.0, 09.0/8.0, 05.0/8.0));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time varying pixel color (taken form ShaderToy.com)\n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0,2,4));\n\n    // Mess with colours\n    float gray = 0.21 * col.r + 0.71 * col.g + 0.07 * col.b;\n    col = vec3(col.rgb * (1.0 - colorFactor) + (gray * colorFactor));\n    \n    // find bayer matrix entry based on fragment position\n    float mapping = bayerThresholdMap[int(fragCoord.x) % 4][int(fragCoord.y) % 4];\n\n    fragColor = vec4(\n        step(mapping, col.r),\n        step(mapping, col.g),\n        step(mapping, col.b),\n        1);\n}","name":"Image","description":"","type":"image"}]}