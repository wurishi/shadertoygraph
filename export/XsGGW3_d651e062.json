{"ver":"0.1","info":{"id":"XsGGW3","date":"1456659766","viewed":675,"name":"Morphing numbers","username":"Andre","description":"Morphing numbers with auto centering. Adjust speed with mouse X.","likes":30,"published":1,"flags":0,"usePreview":0,"tags":["2d","distancefield","motionblur","numbers","digits"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lineWidth;\n\nfloat line(vec2 p, vec2 a, vec2 b)\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * h);\n}\n\n//Numbers\nfloat _11(vec2 uv) {\n    return min(min(\n             line(uv,vec2(-0.2,0.45),vec2(0.,0.6)),\n             length(vec2(uv.x,max(0.,abs(uv.y-.1)-.5)))),\n             length(vec2(max(0.,abs(uv.x)-.2),uv.y+.4)));\n             \n}\nfloat _22(vec2 uv) {\n    float x = min(line(uv,vec2(0.185,0.17),vec2(-.25,-.4)),\n                  length(vec2(max(0.,abs(uv.x)-.25),uv.y+.4)));\n    uv.y-=.35;\n    uv.x += 0.025;\n    return min(x,abs(atan(uv.x,uv.y)-0.63)<1.64?abs(length(uv)-.275):\n               length(uv+vec2(.23,-.15)));\n}\nfloat _33(vec2 uv) {\n    uv.y-=.1;\n    uv.y = abs(uv.y);\n    uv.y-=.25;\n    return atan(uv.x,uv.y)>-1.?abs(length(uv)-.25):\n           min(length(uv+vec2(.211,-.134)),length(uv+vec2(.0,.25)));\n}\nfloat _44(vec2 uv) {\n    float x = min(length(vec2(uv.x-.15,max(0.,abs(uv.y-.1)-.5))),\n                  line(uv,vec2(0.15,0.6),vec2(-.25,-.1)));\n    return min(x,length(vec2(max(0.,abs(uv.x)-.25),uv.y+.1)));\n}\nfloat _55(vec2 uv) {\n    float b = min(length(vec2(max(0.,abs(uv.x)-.25),uv.y-.6)),\n                  length(vec2(uv.x+.25,max(0.,abs(uv.y-.36)-.236))));\n    uv.y += 0.1;\n    uv.x += 0.05;\n    float c = abs(length(vec2(uv.x,max(0.,abs(uv.y)-.0)))-.3);\n    return min(b,abs(atan(uv.x,uv.y)+1.57)<.86 && uv.x<0.?\n               length(uv+vec2(.2,.224))\n               :c);\n}\nfloat _66(vec2 uv) {\n    uv.y-=.075;\n    uv = -uv;\n    float b = abs(length(vec2(uv.x,max(0.,abs(uv.y)-.275)))-.25);\n    uv.y-=.175;\n    float c = abs(length(vec2(uv.x,max(0.,abs(uv.y)-.05)))-.25);\n    return min(c,cos(atan(uv.x,uv.y+.45)+0.65)<0.||(uv.x>0.&& uv.y<0.)?b:\n               length(uv+vec2(0.2,0.6)));\n}\nfloat _77(vec2 uv) {\n    return min(length(vec2(max(0.,abs(uv.x)-.25),uv.y-.6)),\n               line(uv,vec2(-0.25,-0.39),vec2(0.25,0.6)));\n}\nfloat _88(vec2 uv) {\n    float l = length(vec2(max(0.,abs(uv.x)-.08),uv.y-.1+uv.x*.07));\n    uv.y-=.1;\n    uv.y = abs(uv.y);\n    uv.y-=.245;\n    return min(abs(length(uv)-.255),l);\n}\nfloat _99(vec2 uv) {\n    uv.y-=.125;\n    float b = abs(length(vec2(uv.x,max(0.,abs(uv.y)-.275)))-.25);\n    uv.y-=.175;\n    float c = abs(length(vec2(uv.x,max(0.,abs(uv.y)-.05)))-.25);\n    return min(c,cos(atan(uv.x,uv.y+.45)+0.65)<0.||(uv.x>0.&& uv.y<0.)?b:\n               length(uv+vec2(0.2,0.6)));\n}\nfloat _00(vec2 uv) {\n    uv.y-=.1;\n    return abs(length(vec2(uv.x,max(0.,abs(uv.y)-.25)))-.25);\n}\n\nfloat segment(vec2 uv)\n{\n    uv = abs(uv);\n    \n    //Round edges\n    uv.y = max(uv.y-0.225, 0.);\n\tfloat f = length(uv)+.43;\n    \n    //Bevel edges\n\t//float f = max(0.45+uv.x,0.225+uv.y+uv.x);\n    return f;\n}\n\nfloat sevenSegment(vec2 uv,int num)\n{\n    if (iMouse.w>0.) {\n        uv.y+=.1;\n        uv.y/=.95;\n        if (num==0) return _00(uv)+.43;\n        if (num==1) return _11(uv)+.43;\n        if (num==2) return _22(uv)+.43;\n        if (num==3) return _33(uv)+.43;\n        if (num==4) return _44(uv)+.43;\n        if (num==5) return _55(uv)+.43;\n        if (num==6) return _66(uv)+.43;\n        if (num==7) return _77(uv)+.43;\n        if (num==8) return _88(uv)+.43;\n        if (num==9) return _99(uv)+.43;\n    }\n        \n\tfloat seg= 5.0;\n\tseg = (num!=-1 && num!=1 && num!=4                    ?min(segment(uv.yx+vec2(-0.450, 0.000)),seg):seg);\n\tseg = (num!=-1 && num!=1 && num!=2 && num!=3 && num!=7?min(segment(uv.xy+vec2( 0.225,-0.225)),seg):seg);\n\tseg = (num!=-1 && num!=5 && num!=6                    ?min(segment(uv.xy+vec2(-0.225,-0.225)),seg):seg);\n\tseg = (num!=-1 && num!=0 && num!=1 && num!=7          ?min(segment(uv.yx+vec2( 0.000, 0.000)),seg):seg);\n\tseg = (num==0 || num==2 || num==6 || num==8           ?min(segment(uv.xy+vec2( 0.225, 0.225)),seg):seg);\n\tseg = (num!=-1 && num!=2                              ?min(segment(uv.xy+vec2(-0.225, 0.225)),seg):seg);\n\tseg = (num!=-1 && num!=1 && num!=4 && num!=7          ?min(segment(uv.yx+vec2( 0.450, 0.000)),seg):seg);\n\t\n\treturn seg;\n}\n\nfloat sevenSegmentFloat(vec2 uv, float num, float digit) {\n    float start = 1.0-.9/pow(9.,digit);\n    float m = smoothstep(start,1.0,fract(num));\n    if (m<0.01)\n        return sevenSegment(uv,int(num));\n    else {\n        //uv *= 1.0+0.08*sin(m*3.14);\n        float s1 = sevenSegment(uv,int(num));\n    \tfloat s2 = sevenSegment(uv,int(mod(num+1.0,10.)));\n        //s1 -= m*.1;\n        //s2 -= (1.0-m)*.1;\n        m = sin(pow(m,1.5)*2.035)/sin(2.035);\n    \treturn 1.0/mix(1.0/s1, 1.0/s2, m);\n    }\n}\n\nfloat curveFract(float x) {\n    float f = fract(x);\n    f = 1.0-cos(f*3.1416);\n    return floor(x)+f*.4999;\n}\n\nfloat log10 = log(10.0);\nfloat showNum(vec2 uv,float nr, bool zeroTrim)\n{\n    bool neg = nr<0.0;\n    if (neg) nr *= -1.;\n    \n    float digitCount = max(1.0,log(nr)/log10+.000001+1.0);\n\tfloat seg= 5.0;\n    \n    // Center number\n    float dc = curveFract(digitCount)-0.5;\n                // Attempt to center one +0.5*smoothstep(0.0,2.0,nr / pow(10.,floor(digitCount)-1.0));\n    uv *= (4.+dc)*.25;\n    uv.x -= dc * .375 + uv.y * 0.07;\n    \n    digitCount = floor(digitCount);\n\tif (uv.x>-5.25 && uv.x<0.0 && abs(uv.y)<0.75)\n\t{\n        float digit = floor(-uv.x / .75);\n\t\tnr /= pow(10.,digit);\n        nr = mod(nr,10.0);\n        if (neg && digit==digitCount)\n            nr = -2.;\n        else\n\t\t    if (floor(nr)<=0. && zeroTrim && digit>=digitCount && digit!=0.0)\n\t\t\t    nr = -1.0;\n\t\tseg = sevenSegmentFloat(uv+vec2( 0.375 + digit*.75,0.0),nr,digit);\n    }\n\treturn seg;\n}\n\nvec3 getFrameColor(vec2 uv, float gt) {\n    float nr = showNum(uv,gt*(10.-9.8*iMouse.x/iResolution.x),true);\n    //float nr = showNum(uv,gt,true);\n    \n\tvec3 clr = vec3(0.0);\n    clr.g = 0.8-0.8*smoothstep(lineWidth*.5,lineWidth*1.5, abs(nr-0.49)); // Yellow outline\n    clr.r = 0.8-0.8*smoothstep(0.49,0.49+lineWidth, nr); // The numbers\n    clr.b += 0.4-0.4*smoothstep(0.45,0.52,1.0-nr); // Background with shadow\n    clr.rg += 0.25-0.25*pow(smoothstep(0.00,0.1, abs(nr-0.49)),0.25); // Yellow glow\n    clr += 0.12-0.12*smoothstep(0.40,0.45, nr); // Stretchmarks\n    return clamp(clr,0.0,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    lineWidth = 6.0/iResolution.x;\n    vec2 uv = (fragCoord-0.5*iResolution.xy) / iResolution.y;\n    \n    //float gt = 200.+iMouse.x*0.1;//iTime;\n    float gt = iTime;\n    vec3 clr = vec3(0.0);\n    \n    for (float i = 0.0; i < 16.0; i += 1.0)\n        clr += pow(getFrameColor(uv, gt+i/500.),vec3(2.))*(i+1.0);\n    fragColor = vec4(pow(clr/136.,vec3(1.0/2.)),1.0);\n\n/*    \n    for (float i = 0.0; i < 16.0; i += 1.0)\n        clr += getFrameColor(uv, gt+i/500.)*(i+1.0);\n    fragColor = vec4(clr/136.,1.0);\n*/    \n    //fragColor = vec4(getFrameColor(uv, gt),1.0);\n}\n","name":"Image","description":"","type":"image"}]}