{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float hash21(vec2 p) {\n    p = fract(p*vec2(234.34, 435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    uv *= 10.0;\n    \n    uv.y += iTime;\n\n    vec3 col = vec3(0);\n    \n    float width = 0.1;\n    \n    float m = 2.0;\n    \n    for(float i = 0.; i < m + 1.; i++) {\n        vec2 gv = fract(uv)-0.5;\n        vec2 id = floor(uv);\n    \n        float n = hash21(id + hash21(vec2(i)));\n   \n        if (n>0.98) {\n            col = (0.5 + 0.5*cos(iTime*3.0+((uv.xyx/10.0) + i*2.)+vec3(0,2,4))) * vec3(1.0, 0.7, 0.7);\n            float x = iTime * 5.0;\n            float v = pow(sin(x),100.) + 0.3*pow(sin(2.*x),100.) + 3.*pow(sin(.5*x),80.);\n     \n            col *= (1.-v);\n            break;\n        } else if (n>0.5) {\n            gv.x *= -1.;\n        }\n        //float mask = smoothstep(0.01, -0.01, abs(abs(gv.x - gv.y)-0.5)-width);\n        float mask = smoothstep(0.01, -0.01, abs(gv.x - gv.y)-width);\n\n        mask = (mask / m) * i;\n        col += mask * (0.5 + 0.5*cos(iTime+((uv.xyx/10.0) + i*2.)+vec3(0,2,4)));\n    }\n   \n    \n    col *= (sin(uv.y+iTime)/3.) + 0.5;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XctBDM","date":"1734210652","viewed":33,"name":"truchet tiling testdd","username":"noxfy","description":"asasdasd","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["asdasd"],"hasliked":0,"parentid":"","parentname":""}}