{"ver":"0.1","info":{"id":"Dl23zR","date":"1672764001","viewed":242,"name":"Mouse Trail in Same Frame","username":"Omniscience","description":"Stores previous mouse states in buffer to allow shaders that use the mouse position (which can skip large distances) to instead use the trail between the mouse position and previous mouse position, in the same frame (without needing accumulation tricks).","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["mouse","sdf","trail"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat tighten(float d) {\n    return pow(1.0 - clamp(d, 0.0, 1.0), 64.0);\n}\n\nfloat tightSegSDF(vec2 p, vec2 a, vec2 b) {\n    return tighten(sdfLineSegment(p, a, b));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float seg = 0.0;\n    for (int i=0; i<NUM_POINTS-1; i++) {\n        vec2 a = texelFetch(iChannel0, ivec2(i  , 0), 0).xy;\n        vec2 b = texelFetch(iChannel0, ivec2(i+1, 0), 0).xy;\n        seg = max(seg, tightSegSDF(uv, a, b));\n        //seg += tightSegSDF(uv, a, b);\n    }\n    \n    vec3 col = vec3(1.0, 0.5, 0.25) * seg * 4.0;\n    \n    if (SHOW_BUFFER) {\n        vec2 uvf = uv * 1.25 * float(NUM_POINTS);\n        uvf.y = uv.y * 16.0;\n        col += texelFetch(iChannel0, ivec2(uvf), 0).xyz;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 iuv = ivec2(fragCoord);\n    if (iuv.y != 0) {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        return;\n    }\n    \n    vec2 fm = vec2(iMouse.xy) / iResolution.xy;\n    \n    if (iMouse.z < 1.0) {\n        float t = iTime * 16.0;\n        fm = 0.5 + vec2(cos(t * 0.5) * 0.25, sin(t) * 0.25);\n    }\n    \n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    if (iuv.x == 0) col = vec3(fm, 0.0);\n    \n    for (int i=1; i<NUM_POINTS; i++) {\n        vec2 prev = texelFetch(iChannel0, ivec2(i-1, 0), 0).xy;\n        if (iuv.x == i) col = vec3(prev, 0.0);\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\n#define SHOW_BUFFER true\n#define NUM_POINTS 8\n\nfloat sdfLineSegment(in vec2 p, in vec2 a, in vec2 b) {\n\tvec2 ba = b - a;\n\tvec2 pa = p - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n\treturn length(pa - h * ba);\n}","name":"Common","description":"","type":"common"}]}