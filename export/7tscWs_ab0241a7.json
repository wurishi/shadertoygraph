{"ver":"0.1","info":{"id":"7tscWs","date":"1648969573","viewed":223,"name":"Blue glaze mosaic 2","username":"jarble","description":"A fractal mosaic pattern.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["fractal","mosaic"],"hasliked":0,"parentid":"7llcWs","parentname":"Blue glaze mosaic"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 36.*1.5*4.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n    float p1 = 1.;\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        for(int k = 0; k < 12; k++){\n            uv += (t2.yx);\n            //uv /= 1.25;\n            //uv -= ceil(t2.x*t2.y+5.)/2.; //mosaic pattern\n\n            //uv += vec2(1.); //this also makes an interesting pattern\n            t2 = -p1*triangle_wave(uv-.5,scale).yx;\n            t3 = p1*triangle_wave(uv.yx,scale).yx;\n            uv.yx = (t2-t3);\n            uv /= 1.5;\n            p1 *= -1.;\n            //col.x = max(uv.y+uv.x-col.x,col.x*2.25);\n            //col = abs(col.yzx-vec3(1.5-col.x))/2.;\n            \n            col.x = max(uv.y+uv.x,col.x*2.75);\n            col = abs(col.yzx-vec3(1.-col.x))/2.;\n        }\n\n    fragColor = vec4(col*2.,1.0);\n}\n","name":"Image","description":"","type":"image"}]}