{"ver":"0.1","info":{"id":"XtfyRn","date":"1502946912","viewed":120,"name":"Distance map interpolation","username":"phi16","description":"using 4px distance map","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy, \n\tuv = (2.*fragCoord.xy - R)/R.y;\n    if(abs(uv.x)<1. && abs(uv.y)<1.){\n        vec2 pos = uv*0.5+0.5;\n\t\tfloat col = texture(iChannel0, (pos*4.+vec2(1))/R).r;\n        col = smoothstep(0.5,0.5,col);\n        fragColor = vec4(vec3(col),1);\n    }else{\n\t\tfragColor = vec4(0,0,0.5,1);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float dist(vec2 pos){\n    float t = iTime;\n    pos -= vec2(0.7);\n    pos *= mat2(cos(t),-sin(t),sin(t),cos(t));\n    pos += vec2(0.6);\n\treturn min(pos.y,pos.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / 4.;\n    if(uv.x > 2. || uv.y > 2.)discard;\n    fragColor = vec4(vec3(dist(uv)), 1.);\n}","name":"Buf A","description":"","type":"buffer"}]}