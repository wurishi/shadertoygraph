{"ver":"0.1","info":{"id":"7djBWW","date":"1646335412","viewed":176,"name":"Nice Function 12309123801","username":"SnoopethDuckDuck","description":"cc() is the function\n\ncan replace f = thc(a,b) with f = cos(b) and still looks good","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"Nd2fWD","parentname":"new cos functin test"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define thc(a,b) tanh(a*cos(b))/tanh(a)\n\n#define pi 3.14159\n\nfloat cc(float a, float b) {\n    float f = thc(a, b);\n    return sign(f) * pow(abs(f), 0.25);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float t = 1. * iTime;\n    \n    float sc = 24. + 16. * cc(1., iTime);\n    float ix = floor(sc * uv.x) + 0.5;\n    float fx = fract(sc * uv.x) - 0.5;\n    uv.y *= sc;\n    \n    float s = 0.;\n    float sp = 0.2;\n    t += sp * ix;   \n    \n    // a bit sloppy, just an example\n    float n = 20.;\n    for (float i = 0.; i < n; i++) {\n        float v = 1. * (n - i) / n; // 5.\n        float y = cc(v, t);\n\n        vec2 p = 2. * sp * sc * vec2(0, y);\n            \n        float d = length(vec2(fx, uv.y) - p);\n        s = max(s, smoothstep(-0.02, 0.02, -abs(d - 0.4) + 0.15));     \n    }\n\n    vec3 col = vec3(s, 0.11, 0.18);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}