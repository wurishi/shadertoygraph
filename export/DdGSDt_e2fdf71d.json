{"ver":"0.1","info":{"id":"DdGSDt","date":"1681940201","viewed":62,"name":"Simple Fizzlefade","username":"nol","description":"Simple parallel Wolfenstein 3D Fizzlefade. Inspired by https://fabiensanglard.net/fizzlefade/index.php","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fizzlefade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// see https://en.wikipedia.org/wiki/Linear-feedback_shift_register#Example_polynomials_for_maximal_LFSRs\n// for constants\n#define TAPS   0x240\n#define PERIOD 1023\n\n// idx:  pixel index\n// time: frame number\nfloat fizzle(uint idx, int time)\n{\n    // early exit if fully faded\n    if (time > int(PERIOD)) return 1.f;\n\n    uint lfsr = idx; // seed with unique value\n    uint accum = 0u;\n    uint dim = uint(iResolution.x * iResolution.y);\n    for (int i = 0; i < time; i++) {\n        // as explained on https://en.wikipedia.org/wiki/Linear-feedback_shift_register#Galois_LFSRs\n        uint lsb = lfsr & 1u;        // get lsb (output bit)\n        lfsr >>= 1;                  // shift register\n        lfsr ^= (-lsb) & uint(TAPS); // if output bit is 1, apply toggle mask\n        \n        // in PERIOD iterations, lfsr will always cycle through 1\n        if (1u == lfsr) return 1.f;\n    }\n    \n    \n    return 0.f;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / min(iResolution.x, iResolution.y);\n    vec4 tex = vec4(texture(iChannel0, uv).rgb, 0.);\n    \n    int t = iFrame % int(PERIOD); // for demo purposes, \"loop\" time\n    \n    uint idx = uint(iResolution.x * fragCoord.y + fragCoord.x);\n    float f = float(fizzle(idx, t)); // 0.f or 1.f\n    \n    // for demo purposes, fade in and out\n    uint flip = uint(iFrame / int(PERIOD)) & 0x1u;\n    if (bool(flip)) f = 1.f - f;\n    \n    vec4 alt = vec4(1.f, 0.f, 0.f, 0.f);\n\tfragColor = mix(tex, alt, f * .5f);\n}","name":"Image","description":"","type":"image"}]}