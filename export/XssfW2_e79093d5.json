{"ver":"0.1","info":{"id":"XssfW2","date":"1498431040","viewed":151,"name":"Smooth4redux","username":"biffpixel","description":"Generate blend between four colors. Room for improvements: add jitter to alleviate mach bands, normalize to gamma of display for a more perceptually uniform gradation, may be more visually pleasing to interpolate in HSV than RGB depending on application.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colors","interpolate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec3 color[4] = vec3[](vec3(1,0,0),vec3(0,1,0),vec3(1,0,1),vec3(0,1,1));  \n    \n    float t = fragCoord.x / iResolution.x;\n    int index = int(t*3.0);\n\n    vec3 outColor = mix(color[index],color[index+1],t*3.0 - float(index));\n    \n    fragColor = vec4(outColor,1.0);\n}","name":"Image","description":"","type":"image"}]}