{"ver":"0.1","info":{"id":"fs2cDc","date":"1644250582","viewed":251,"name":"Simple Hexagon grid","username":"MarcoF","description":"Hexagonal grid.\nAnother approch: https://www.shadertoy.com/view/ssjcW3","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["grid","hexagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float scale = 16.;\n\nvoid pixel2cubial(vec2 uv, out vec3 cellCoord, out vec3 cellUv) {\n\t#define HX vec2(1.0, 0.0)\n\t#define HY vec2(0.5, 0.866)\n\t#define HMAT mat2(HX, HY)\n\n\tvec2 axial = inverse(HMAT) * uv;\n\tvec3 cubial = vec3(axial, -axial.x - axial.y);\n\tcellCoord = round(cubial);\n\tvec3 dist = abs(cubial - cellCoord);\n\tif (dist.x > dist.y && dist.x > dist.z) {\n\t\tcellCoord.x = -cellCoord.y - cellCoord.z;\n\t}\n\telse if (dist.y > dist.z) {\n\t\tcellCoord.y = -cellCoord.x - cellCoord.z;\n\t}\n\telse {\n\t\tcellCoord.z = -cellCoord.x - cellCoord.y;\n\t}\n\n\tcellUv = cubial - cellCoord;\n}\n\n// cubialDistance\n// finds the distance between 2 hex cell positions\nfloat cubialDistance(vec3 a, vec3 b) {\n\tvec3 c = abs(a - b);\n\treturn max(c.x, max(c.y, c.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    \n    uv *= scale;\n    \n    // find cubial coordinate\n\tvec3 cellCoord, cellUv;\n\tpixel2cubial(uv, cellCoord, cellUv);\n\n\tvec3 col = cos(cellCoord + iTime) * 0.5 + 0.5;\n    \n    vec3 dist = abs(cellUv.xyz - cellUv.zxy);\n    \n    // outline\n\tfloat s = smoothstep(0.0, 0.05, 1.0 - max(dist.x, max(dist.y, dist.z)));\n\tcol *= s;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}