{"ver":"0.1","info":{"id":"wltXDX","date":"1581886264","viewed":90,"name":"Am√∂ba","username":"rotmoset","description":"Fat bezier going around","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 bezier(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t)\n{\n\t   return mix(mix(p0,p1,t), mix(p2,p3,t),t);\n}\n\nfloat line(vec2 p, vec2 a,vec2 b, float width, float blur) { // --- distance to segment with caps\n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);// proj coord on line\n    float d = length(p - b * h);                      // dist to segment\n    \n    return smoothstep(width-blur, width+blur, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= 0.5;\n    uv *= 3.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n\tfloat T = iTime * 1.0;\n    vec2 p0 = vec2(sin(T),cos(T/3.0));\n    vec2 p1 = vec2(sin(T/5.0),cos(T/1.5));\n    vec2 p2 = vec2(sin(T/4.0),cos(T/2.5));\n    \n    const float S = 0.1;\n    for(float t=S;t<=1.0;t+=S)\n    {\n        fragColor.g += 1.0-line(uv, bezier(p0,p1,p1,p2,t-S), bezier(p0,p1,p1,p2,t), 0.001,0.4);\n    }\n    fragColor.r = fragColor.g;\n    fragColor.g *= 4.0;\n    \n}","name":"Image","description":"","type":"image"}]}