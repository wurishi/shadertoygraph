{"ver":"0.1","info":{"id":"4td3Rl","date":"1470900980","viewed":277,"name":"Sticks and donuts","username":"_pwd_","description":"Quick finger exercise","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","distancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat fld(vec3 h)  {\n\treturn length(vec2(length( sin(h.xz) * cos(h.xz) ) -.15,\n                       length( sin(h.zx) * sin(h.yx) ) - .02)) - .14;\n}\n\nfloat df(vec3 p)  {\n    float t=iTime * .05;\n    float s=sin(t), c = cos(t);\n\n    p -= vec3(s*s, c, -4);\n    p.xy *= rot(t*1.2) ;\n    p.xz *= rot(t*2.63);\n\n    return fld(p);\n}\n\nvoid mainImage( out vec4 O,  vec2 U ) {\n    vec3 rd   = normalize( vec3(U/iResolution.xy, 1 ) ),\n         ro   = vec3(10,2,0);   \n    float off = 0., c, d;\n   \n    for( float i = 0.; i < 1. ; i +=.02 )\n         off += d = df(ro+rd*off),\n         c = abs(d)<1e-4 ? c : i*.9;\n\n    O = c*vec4(c,1,c,1);\n}","name":"Image","description":"","type":"image"}]}