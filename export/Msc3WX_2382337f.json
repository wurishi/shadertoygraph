{"ver":"0.1","info":{"id":"Msc3WX","date":"1452432066","viewed":620,"name":"Mandelbrot meets Julia","username":"s23b","description":"Just my little hello world","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","fractal","julia","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RATIO .2\n#define ZOOM .25\n#define MAX_ITER 256\n#define PI 3.14159265359\n\nvec3 hsv2rgb (in vec3 hsv) {\n    return hsv.z * (1.0 + 0.5 * hsv.y * (cos (2.0 * PI * (hsv.x + vec3 (0.0, 0.6667, 0.3333))) - 1.0));\n}\n\nvec4 pal(in float f)\n{   \n    return vec4(hsv2rgb(vec3(f / 128.0, 1.0, 1.0)), 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 z = (fragCoord.xy / iResolution.xy - .5) / ZOOM;\n    z.x *= iResolution.x / iResolution.y;\n    float t = iTime;\n    z *= mat2(cos(t), -sin(t), sin(t), cos(t));\n\t\n    vec2 c = mix(vec2(sin(t), cos(t)), z, RATIO);\n    \n    float f = 0.0;\n    for (int i = 0; i < MAX_ITER; ++i)\n    {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (length(z) > 256.0) break;\n        f += 1.0;\n    }\n    \n    if (f < float(MAX_ITER))\n    {\n        float m = log2(log2(length(z)));\n        f += 1.0 - m;\n        vec4 c1 = pal(floor(f));\n        vec4 c2 = pal(floor(f + 1.0));\n        fragColor = mix(c1, c2, fract(f));\n\t}\n    else\n    {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}