{"ver":"0.1","info":{"id":"MXG3Wc","date":"1718309512","viewed":61,"name":"GoombasEclipse","username":"Goomba00","description":"WIP","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["eclipse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n\nfloat CircleMask(vec2 uvP, float p, float color) {\n    if(uvP.x < p){ \n        return 1.0 - (p - uvP.x) * 200.;\n    } else{ \n        return color; \n    };\n}\n\nfloat lightBeams(vec2 st, float A, float offset, float freq, float phi){\n    return abs((sin(st.y * freq + phi) * A)) + (st.x - offset);\n}\n\nfloat glow(float x, float str, float dist){\n    return dist / pow(x, str);\n}\n\nfloat circularSinSDF(vec2 st,  float amplitude, float offset, float freq, float phi, float radius){\n    return abs(st.x - (radius + amplitude * (sin(st.y* freq + phi))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec3 color = vec3(1.000,0.976,0.898);\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = (uv - 0.5) * 2.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float radius = .55;\n    float glowStrength = .6;\n    float glowDistance = .03;\n    float speed = .35;\n    \n    float beamGlowStrength = 1.8;\n    float beamGlowDistance = .01;\n    \n    float numWaves = 4.0;\n    \n    float col = 0.0;\n   \n    vec2 uvP = vec2(sqrt(uv.x * uv.x + uv.y * uv.y), atan(uv.y/uv.x));\n    \n    col += glow(abs(uvP.x-radius), glowStrength, glowDistance);\n    \n    for(float i = 0.0; i< numWaves ; i++){\n        col += glow(circularSinSDF(uvP, .03 + .04 * sin(iTime * speed * i), 0.0, 2.0 * i, iTime * speed * (i + 1.0) / 2.0, radius * .90), glowStrength, glowDistance);\n        col += glow(lightBeams(uvP, .5 + uvP.r - .1 * (1.0 + i) * sin(iTime * speed * i), 0.0, 3.0, (iTime * speed * (i + 1.0) / 2.0 + i * 2.0 * pi / numWaves) * cos(i * pi)), beamGlowStrength, beamGlowDistance);\n    }\n    \n    col = CircleMask(uvP, radius, col);\n    \n    // Evil mode\n    //col = 1.0-col;\n    \n    // Output to screen\n    fragColor = vec4(vec3(col) * color,1.0);\n}","name":"Image","description":"","type":"image"}]}