{"ver":"0.1","info":{"id":"Ds3czn","date":"1694644420","viewed":61,"name":"Pixel Blue Dot","username":"Chroma_Crash","description":"Pixelated Earth spinning","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["earth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PIXEL_SIZE 10.0\n#define ROTATE_SPEED 0.2\n#define TEXTURE_SCALE 10.0\n#define BUBBLE_SCALE 4.0\n#define NOISE_STRENGTH 0.4\n\n#define OCEAN_THRESH 0.3\n#define GRASS_THRESH 0.2\n#define CLOUD_THRESH 0.67\n\n#define SHADE_LEVELS 4.0\n\n#define CLOUD_X 0.5\n#define CLOUD_Y 0.6\n\n#define Y_SCALE 0.4\n\nvec2 pixelPos(vec2 coord) {\n    return floor(coord / PIXEL_SIZE) * PIXEL_SIZE;\n}\n\nvec2 samplePos(vec2 coord) {\n    coord = coord / (iResolution.y / 2.0);\n    float z = sqrt(1.0 - (coord.x * coord.x + coord.y * coord.y));\n    float t = 1.0 / z;\n    vec3 position = vec3(coord.x, coord.y, z) * t;\n    float x = atan(position.x, position.z) / 3.14159;\n    x = mod(x + iTime * ROTATE_SPEED, 1.0);\n    vec2 sam = vec2(x, mod(position.y * Y_SCALE - 1.0, 1.0));\n    return sam;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 pix = pixelPos(fragCoord);\n    vec2 suv = samplePos(pix);\n    \n    vec2 center = iResolution.xy / 2.0;\n    \n    float dist = distance(pix, center);\n    \n    vec2 light = iResolution.xy - (iResolution.xy / 4.0);\n    light = vec2(iResolution.x - light.x, light.y);\n    float shade = distance(pix, light) / iResolution.x;\n    \n    vec3 col = vec3(1, 1, 1);\n    if (dist < center.y) {\n        if (dist < center.y - PIXEL_SIZE) {\n            vec2 sam = samplePos(pix-center) / TEXTURE_SCALE;\n            vec2 bub = sam * TEXTURE_SCALE / BUBBLE_SCALE;\n            \n            float x = mod(sam.x + CLOUD_X, 1.0);\n            float y = mod(sam.y + CLOUD_Y, 1.0);\n            vec2 move = vec2(x, y);\n            \n            vec3 bubble = texture(iChannel2, bub).xyz;\n            vec3 lichen = texture(iChannel0, move).xyz;\n            \n            if (bubble.y > OCEAN_THRESH) {\n                col = vec3(0.2, 0.6, 0.9);\n            }\n            else {\n                if (bubble.y < GRASS_THRESH) {\n                    col = vec3(0.3, 0.9, 0.4);\n                }\n                else {\n                    col = vec3(0.1, 0.8, 0.15);\n                }\n            }\n            if (lichen.y > CLOUD_THRESH) {\n                col = vec3(1, 1, 1);\n            }\n            \n            shade = floor(shade * SHADE_LEVELS) / SHADE_LEVELS;\n            col = col * (1.0 - shade);\n        }\n        else {\n            col = vec3(0, 0, 0);\n        }\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}