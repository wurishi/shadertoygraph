{"ver":"0.1","info":{"id":"lXXBDX","date":"1728977906","viewed":50,"name":"NyanCats on sphere","username":"GeraDot4815","description":"nyancat","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["nyancat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot2D(float angle)\n{\n    float s = sin(angle);\n    float c = cos(angle);\n    \n    return mat2(c,-s,\n                s,c);\n}\n\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\nfloat GetDist(vec3 p)\n{\n    float sphere = sdSphere(p-vec3(0.,0.,0.), 2.5);\n     \n        \n    float d =sphere;\n    return d;\n}\n\nfloat RayMarch(vec3 ro, vec3 rd)\n{\n    float t=0.;\n    for (int i = 0; i<80; i++)\n    {\n        vec3 p = ro+rd*t;\n        float d = GetDist(p);\n        t+=d;\n\n        \n        if(d<.001 || t>80.) break;\n    }\n    return t;\n}\n\nvec3 GetNormal(vec3 p)\n{\n    float d = GetDist(p);\n    vec2 e = vec2(.01, 0);\n    \n    vec3 n = d-vec3(\n    GetDist(p-e.xyy),\n    GetDist(p-e.yxy),\n    GetDist(p-e.yyx)\n    );\n    return normalize(n);\n}\n\nfloat GetLight(vec3 p)\n{\n    vec3 lightPos = vec3(0,10,10);\n    vec3 l = normalize(lightPos-p);\n    vec3 n = GetNormal(p);\n    \n    float dif = clamp(dot(n,l),0.,1.);\n    \n    float d = RayMarch(p+n*0.01,l);\n    if(d<length(lightPos-p)) dif*=.1;\n    \n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    vec2 m = (iMouse.xy*2.-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(0.,0.,-4.); // rayOrigin\n    vec3 rd = normalize(vec3(uv*1., 1));//rayDirection\n\n    mat2 r = rot2D(-m.x*3.);\n    ro.xz *=r;\n    rd.xz *=r;\n    \n    \n    vec3 col =vec3(0.);\n    \n    //Raymarching\n    float t=RayMarch(ro, rd);\n    \n    if(t<80.)\n    {\n    vec3 pnt = ro+rd*t;\n    \n    float dif = GetLight(pnt)*1.1;\n    \n    vec3 n = GetNormal(pnt);\n    n=abs(n);\n    n=pow(n, vec3(5));\n    n/=n.x+n.y+n.z;\n    \n    vec3 xz=texture(iChannel0, pnt.xz*.5+.5).rgb;\n    vec3 yz=texture(iChannel0, pnt.yz*.5+.5).rgb;\n    vec3 xy=texture(iChannel0, pnt.xy*.5+.5).rgb;\n    col=xz*n.y+yz*n.x+xy*n.z;\n    \n    uv = vec2((-atan(pnt.x,pnt.z)/6.2832)-iTime*.1, 2.*pnt.y/3.+sin(iTime*8.)*.06+.35)*1.5; \n    uv.x=fract(uv.x);\n    vec4 cats=texture(iChannel1, uv);\n    cats.a*=smoothstep(.6,.5,abs(pnt.y));\n    col=mix(col, cats.rgb, cats.a);\n    }\n\n\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}