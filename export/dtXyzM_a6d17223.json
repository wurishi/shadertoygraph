{"ver":"0.1","info":{"id":"dtXyzM","date":"1690511655","viewed":54,"name":"Dot-By-Dot Effect","username":"Xonatron","description":"Idea is to use high-res graphics to simulate clear individual pixels with a defined but tiny gap. Graphics behind the pixel grid are generated by the default Shadertoy sample.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pixel","pixels","hd","highdef"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Matthew Doucette, Xona Games\n// https://xona.com/\n// 11:11pm, Thursday, July, 27th, 2023\n// -----------------------------------\n\n// constants\n#define SIZE 12.0 // size of \"pixels\" in pixels\n#define SPACING 1.0 // size between \"pixels\" in pixels\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // dot-by-dot effect\n    if (mod(fragCoord.x, SIZE + SPACING) < SPACING)\n    {\n        col = vec3(0,0,0);\n    }\n    if (mod(fragCoord.y, SIZE + SPACING) < SPACING)\n    {\n        col = vec3(0,0,0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}