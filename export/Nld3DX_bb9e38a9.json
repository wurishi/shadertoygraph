{"ver":"0.1","info":{"id":"Nld3DX","date":"1641462331","viewed":133,"name":"Chromatic Visulator","username":"Osakazaur","description":"Nice Equalizer, shows frequecy ammount as sinus.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["music","vosulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.14;\nint Lines = 6;\n\nfloat mask (vec2 uv, int index){\n    float w = 3. /iResolution.x;\n    float amp = texelFetch(iChannel0, ivec2(index * 512/Lines,.1), 0).x;\n    return distance(uv.y-.5, sin(uv.x*float(index+1)*2.*pi)*.49*amp) < w ? 1. : 0.;\n}\n\n\nvec3 indexCol(int index)\n{\n    vec3 aCol = vec3(255., 105., 180.) / 255.;\n    //vec3 bCol = vec3(255., 205., 0.) / 255.;\n    vec3 cCol = vec3(0., 255., 205.) / 255.;\n   \n    float indexRate = float(index) / float(Lines);\n    //return mix(mix(aCol, bCol, smoothstep(-0.1, 0.6, indexRate)), cCol, smoothstep(0.4, 1.0, indexRate));\n    return mix(aCol, cCol, smoothstep(-0.1, 1.2, indexRate));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 baseCol = vec3(0.);\n    \n    float mask_ = 0.;\n    vec3 bufCol = baseCol;\n    \n    for (int i = 0; i < Lines; ++i)\n    {\n        mask_ = mask(uv, i);\n        bufCol = mix(bufCol, indexCol(i), mask_);\n    }\n    \n    \n    fragColor = vec4(bufCol, 1.);\n   \n    \n}","name":"Image","description":"","type":"image"}]}