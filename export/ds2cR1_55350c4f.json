{"ver":"0.1","info":{"id":"ds2cR1","date":"1687443462","viewed":53,"name":"Shader is fun","username":"starlaxy","description":"first shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["firstshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.576, 0.106, 0.358);\n    vec3 b = vec3(0.543,0.339, 0.381);\n    vec3 c = vec3(1.456,0.647, 0.736);\n    vec3 d = vec3(5.355, 5.707, 2.626);\n    \n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv - 0.5;\n    uv = uv * 2.0;\n    \n    uv*= 2.0;\n    uv.x *= iResolution.x / iResolution.y;\n    //vec2 uv = fragCoord / iResolution.xy * 2.0 -1.0;\n    \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.; i < 3.; i++){\n    \n    uv = fract(uv*1.2);\n    uv -=0.5;\n    float d = length(uv) * exp(-length(uv0));\n   \n    vec3 col = palette(length(uv0)+i*.4+iTime*.4);\n   \n    d = sin(d*8. + iTime)/8.;\n    d=abs(d);\n    //d = smoothstep(0.0, 0.1,d);\n    //d = 0.01/d;\n    d = pow (0.01/d,1.2);\n    //col *= d;\n    finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor,1);\n}","name":"Image","description":"","type":"image"}]}