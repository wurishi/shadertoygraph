{"ver":"0.1","info":{"id":"tdXBW4","date":"1588239055","viewed":105,"name":"SimpleCloudNoise","username":"mengxin","description":"a simple noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 hash22(vec2 p)\n{\n\tp = vec2(dot(p, vec2(127.1, 311.7)),\n\t\tdot(p, vec2(269.5, 183.3)));\n\n\treturn -1.0 + 2.0 * fract(sin(p)*43758.5453123);\n}\nfloat perlin_noise(vec2 p)\n{\n\tvec2 pi = floor(p);\n\tvec2 pf = p - pi;\n\n\tvec2 w = pf * pf * (3.0 - 2.0 * pf);\n\n\treturn mix(mix(dot(hash22(pi + vec2(0.0, 0.0)), pf - vec2(0.0, 0.0)),\n\t\tdot(hash22(pi + vec2(1.0, 0.0)), pf - vec2(1.0, 0.0)), w.x),\n\t\tmix(dot(hash22(pi + vec2(0.0, 1.0)), pf - vec2(0.0, 1.0)),\n\t\t\tdot(hash22(pi + vec2(1.0, 1.0)), pf - vec2(1.0, 1.0)), w.x),\n\t\tw.y);\n}\n\nfloat noise_sum(vec2 p)\n{\n\tfloat f = 0.0;\n\tp = p * 4.0;\n\tf += 1.0000 * perlin_noise(p); p = 2.0 * p;\n\tf += 0.5000 * perlin_noise(p); p = 2.0 * p;\n\tf += 0.2500 * perlin_noise(p); p = 2.0 * p;\n\tf += 0.1250 * perlin_noise(p); p = 2.0 * p;\n\tf += 0.0625 * perlin_noise(p); p = 2.0 * p;\n\n\treturn f;\n}\n\nfloat noise(vec2 uv){\n    return sin(uv.x)*sin(uv.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv=0.1*iTime+uv.xy;\n    uv*=1.0;\n    float value=noise_sum(uv.xy);\n    \n    vec3 col = vec3(value,value,value);\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}