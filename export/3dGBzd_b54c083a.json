{"ver":"0.1","info":{"id":"3dGBzd","date":"1607693555","viewed":101,"name":"Repetition abs","username":"gaz","description":"2d","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float box(vec2 p){\n  return length(p-clamp(p,-.5,.5));\n}\n\nfloat D(float d){\n  return smoothstep(0.06,0.0,d);\n}\n\n#define hash(x)fract(sin(x*7777.7))\n\n// Up to 16 divisions\n#define repAbs16(p,n) abs(abs(abs(abs(p)-clamp(n-8.,0.,8.))-clamp(n-4.,0.,4.))-clamp(n-2.,0.,2.))-clamp(n-1.,0.,1.)\n// Up to 8 divisions\n#define repAbs8(p,n) abs(abs(abs(p)-clamp(n-4.,0.,4.))-clamp(n-2.,0.,2.))-clamp(n-1.,0.,1.)\n#define repAbs(p,n) repAbs8(p,n)\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor=vec4(0);\n    vec2 p=(fragCoord*2.-iResolution.xy)/iResolution.y;\n    p*=10.0;\n    fragColor+=D(abs(p.x));\n    fragColor+=D(abs(p.y));\n    \n    float t=floor(iTime*2.)*1234.5;\n    vec2 n=vec2(hash(t+5267.8),hash(t+1253.4));\n    \n    p=repAbs(p,floor(n*8.));\n    \n    fragColor+=D(box(p));\n}","name":"Image","description":"","type":"image"}]}