{"ver":"0.1","info":{"id":"3tc3D7","date":"1576490865","viewed":93,"name":"blend Colors","username":"ligaobo","description":"不同颜色的融合","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2dvoronoi","polarvnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//参考： https://www.shadertoy.com/view/XlByRc\n\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// Voronoi noise\nfloat vnoise(vec2 p)\n{\n    vec2 cell_i = floor(p);\n    vec2 cell_f = fract(p);\n    \n    float min_dist = 2.0;\n    for (int x = -1; x <= 1; x++){\n        for (int y = -1; y <= 1; y++){\n        \n \t\t\tvec2 xy = vec2(float(x), float(y)); \n            vec2 point = random2(cell_i + xy);\n            point = 0.5 + 0.5*sin(6.2831*point);\n        \tfloat dist = distance(cell_f, xy + point);\n        \tmin_dist = min(min_dist, dist);\n        }\n    }\n\treturn min_dist;\n}\n\nfloat fbm(vec2 p)\n{\n    float v;\n    \n    v  = vnoise(p * 1.0) * 0.5;\n    v += vnoise(p * 2.0) * 0.25;\n    v += vnoise(p * 4.0) * 0.125;\n    v += vnoise(p * 8.0) * 0.0625;\n    \n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    \n    if(length(uv) > 1.0) \n    {\n        fragColor = vec4(0.0);\n        //return;\n    }\n    \n    vec3 color;\n\n    vec2 polar = vec2(abs(atan(uv.y, uv.x)), length(uv) * 0.75);\n    polar *= 6.0;\n    float liquidDepth = mix(fbm(polar), fbm(uv * 1.0), smoothstep(2.0, 0.0, length(uv)));\n\n    color = mix(vec3(0.9, 0.0, 0.0), vec3(0.7, 0.6, 0.0), clamp(fbm(uv * 1.), 0.0, 0.7)) + 0.2;\n    \n    //color *= exp(-( liquidDepth * 0.5 - 0.2) * 2.0);\n    \n    //liquidDepth = log(exp(liquidDepth) - 0.2) * 2.0;\n    //liquidDepth = clamp((liquidDepth - 0.3) / (1.0 - 0.7), 0.0, 1.0);\n    \n    //color *= exp(-vec3(0.3, 0.1, 0.018) * (liquidDepth) * (1.0 + cos(iTime * 1.0)) * 2.0);\n    \n    //color = vec3(liquidDepth);\n    \n    //衰减函数exp 与 smoothstep对比测试\n#if 0 \n    {\n        if(uv.x > 0.0)\n        \tcolor = mix(vec3(0.9, 0.0, 0.0), vec3(0.7, 0.6, 0.0), smoothstep(-1.0, 1.0, uv.y) - 0.0) + 0.2;\n        //color *= exp(vec3(0.9, 0.9, 0.9) * (uv.y - 1.0) * 0.5);\n        color *= exp(vec3(0.9, 0.9, 0.5) * (uv.y - 1.0) * 0.85);\n    }\n#else\n    //color *= exp(-( liquidDepth * 0.5 - 0.2) * 2.0);\n    \n    //liquidDepth = log(exp(liquidDepth) - 0.2) * 2.0;\n    //liquidDepth = clamp((liquidDepth - 0.3) / (1.0 - 0.7), 0.0, 1.0);\n    \n    color *= exp(-vec3(0.3, 0.1, 0.018) * (liquidDepth) * (1.0 + cos(iTime * 1.0)) * 2.0);\n    \n    //color = vec3(liquidDepth);\n#endif\n    \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}