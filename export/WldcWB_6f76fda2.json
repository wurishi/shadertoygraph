{"ver":"0.1","info":{"id":"WldcWB","date":"1610354247","viewed":69,"name":"MosaicGlass","username":"usbhatyu","description":"Shader sketch.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float FOCUS = 4.35;\nconst float REFRACTION = 0.35;\n\n//Mosaic glass\nfloat mosaicGlass(vec2 p){\n    return length(tan(p*sin(iTime*0.3)*FOCUS)*REFRACTION);\n}\n\n//Pyramid mosaic\nvec3 mosaic(vec3 p,float block){\n    return floor(p*block)/block;\n}\n\n//Generate a ceiling.\nfloat ceiling(vec3 p){\n    return step(-p.y,0.0);\n}\n\nvec3 cRepeat(vec3 p){\n    return mod(cos(floor(p)),2.0);\n}\n\nfloat sphere(vec3 p){\n    return abs(length(p*0.2)-0.1);\n}\n//////////////////////\n\n//Generate the ground\nfloat ground(vec3 p){\n    return step(p.y,0.4);\n}\n\nvec3 gRepeat(vec3 p){\n    return mod(p,0.9)-0.4;\n}\n\nfloat sdPyramid(vec3 p,float h)\n{\n  float m2 = h*h+0.25;\n    \n  p.xz = abs(p.xz);\n  p.xz = (p.z>p.x)?p.zx:p.xz;\n  p.xz -= 0.5;\n\n  vec3 q = vec3(p.z,h*p.y-0.5*p.x,h*p.x+0.5*p.y);\n   \n  float s = max(-q.x,0.0);\n  float t = clamp((q.y-0.5*p.z)/(m2+0.25),0.0,1.0);\n    \n  float a = m2*(q.x+s)*(q.x+s) + q.y*q.y;\n  float b = m2*(q.x+0.5*t)*(q.x+0.5*t)+(q.y-m2*t)*(q.y-m2*t);\n    \n  float d2 = min(q.y,-q.x*m2-q.y*0.5)>0.0?0.0:min(a,b);\n    \n  return sqrt((d2+q.z*q.z)/m2)*sign(max(q.z,-p.y));\n}\n//////////////////////\n\nfloat mainDist(vec3 p){\n    vec3 cP = cRepeat(p);\n    float up = ceiling(p)*sphere(cP*0.3);\n    vec3 gP = gRepeat(p);\n    float under = ground(p)*sdPyramid(mosaic(gP,25.0)*1.02,0.35);\n    float d = max(up,under);\n    d += up+up+up+up;\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord*2.0-iResolution.xy)/min(iResolution.x,iResolution.y);\n    \n    vec3 cd = vec3(0.0,0.0,-1.0);\n    vec3 cu = vec3(0.0,1.0,0.0);\n    vec3 cs = cross(cd,cu);\n    float td = 1.0;\n    vec3 ray = normalize(cs * p.x + cu * p.y + cd * td);\n    \n    float d,t = 0.0;\n    vec3 rp = vec3(sin(iTime*0.5),\n        0.4*mosaicGlass(p),\n        -iTime*0.8);\n    \n    for(int i;i<128;i++){\n        d = mainDist(rp + ray * t);\n        if(d < 0.001){\n            break; \n        }\n        t +=d;\n    }\n    \n    vec3 col1 = step(d,0.0)*vec3(0.3,exp(-0.5*t),exp(-0.1*t));\n    vec3 col2 = step(d,0.5)*vec3(exp(-0.2*t),0.2,exp(-0.3*t));\n    \n    vec3 col = max(col1,col2);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}