{"ver":"0.1","info":{"id":"sd2Szt","date":"1620844248","viewed":309,"name":"Alternating grid test","username":"aferriss","description":"Alternating test","likes":2,"published":3,"flags":2,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float cells = 6.0;\n    vec2 grid0 = fract(uv * cells);\n    vec2 grid1 = fract(vec2(1.0 - uv.x, uv.y) * cells);\n    \n    float everyOther = mod( floor(uv.x * cells) + floor(uv.y * cells), 2.0);\n    \n    \n    vec2 coord = grid0 * everyOther + grid1 * (1.0-everyOther);\n\n    fragColor = texture(iChannel0, coord);\n}","name":"Image","description":"","type":"image"}]}