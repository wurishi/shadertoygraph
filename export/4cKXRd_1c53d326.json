{"ver":"0.1","info":{"id":"4cKXRd","date":"1715673247","viewed":59,"name":"Unsettling Fence","username":"triggthediscovery","description":"Simple fence effect. This is my first shader on here and I don't really know what I'm doing.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float dx = sin(iTime/3.0)/1.0;    \n    float dy = sin(iTime)/1.0;\n\n    uv.x += dx;\n    uv.y += dy;\n    \n    uv.x -= 0.5;\n    uv.y -= 0.5;\n\n    vec3 col = vec3(0,0,0);\n    \n    float parallax = 5.0;\n    int layers = 40;\n    float inc_amt = parallax/float(layers);\n    \n    // draw layers back to front\n    for (int i=0; i<layers; i++) {  \n        // check if hitting fence\n        if (mod((uv.x*(20.0 - (inc_amt * float(i)))),       2.0) > 1.8 ||\n            mod((uv.y*(10.5 - (inc_amt * float(i) / 2.0))), 2.0) < 0.2) {\n            float c = float(i)/float(layers)*0.8;\n            col = vec3(c,c,c);\n        }\n        \n        // simulate parallax (things in front move faster)\n        uv.x += (dx/(18.0*(float(layers-1))/parallax)) * ((100.0+float(i))/100.0);\n        uv.y += (dy/(18.0*(float(layers-1))/parallax)) * ((100.0+float(i))/100.0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}