{"ver":"0.1","info":{"id":"X3BSWD","date":"1710593632","viewed":94,"name":"Rogue AI","username":"Tsuki","description":"Thought this looked like something out of Cyberpunk 2077.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","neon","cyber"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rainbow(float d0, float i) {\n        \n    vec3 color = vec3( 0, 0, 0 );\n    \n    color.x = cos(d0 * 3.0 + cos(d0 * 200.0) * i) / 5.0;\n    color.y = cos(d0 * 3.0 + 200.0 * i) / 5.0;\n    color.z = cos(d0 * 3.0 + 200.0 * i) / 5.0;\n        \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n      \n    // Parameters\n    float brightness = 10.0;\n    float scale = 10.0;\n    float width = 0.005;\n    float fracts = 4.0; // unused\n    \n    //Creates uv\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < fracts; i++) {\n\n        uv = fract(uv * (1.1 + i / 10.0)) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n        float d0 = length(uv0);\n\n        // Sets color using rainbow method, inputting the initial uv\n        vec3 color = rainbow(d0, i) * (brightness);\n\n        // Creates circles\n        d = sin(d * scale + iTime) / scale;\n\n        // Hollows into ring\n        d = width / abs(d);\n        \n        // Applies color\n        finalColor += color * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n    \n}\n\n\n\n","name":"Image","description":"","type":"image"}]}