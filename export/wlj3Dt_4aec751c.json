{"ver":"0.1","info":{"id":"wlj3Dt","date":"1561617158","viewed":64,"name":"Colter's First Shader","username":"TheAwesomeProgrammer","description":"This is a visual effect I made while playing with a \"The Book of Shaders\" example ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["visualeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define twoPI 6.28318530718\n\nvec3 hsb2rgb(in vec3 col){\n    vec3 rgb = clamp(abs(mod(col.x*6.+vec3(0.0,4.0,2.0), 6.) - 3.) - 1., 0., 1.);\n    rgb = rgb * rgb  * (3. + 2. * rgb);\n    return col.z * mix(vec3(1.), rgb, col.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 cord = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    \n    vec2 center = vec2(.5) - cord;\n    float angle = atan(center.y, center.x);\n    float radius = length(center) * 2.;\n    \n    col = hsb2rgb(vec3((angle/twoPI)*iTime+.5,radius,1.));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}