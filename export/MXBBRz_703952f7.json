{"ver":"0.1","info":{"id":"MXBBRz","date":"1729106462","viewed":31,"name":"VCR scree","username":"siwel","description":"566 post process shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Use texture\nfloat rand(float x) {\n    return fract(sin(x * (9251.2043)) * 47453.5453); \n}\nfloat rand(vec2 uv) {\n    return fract(sin(dot(uv.xy ,vec2(12.9898,78.233))) * rand(uv.y - cos(iTime * 0.4) * -16.0) * 11162.59863); \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    warpedUv.x = uv.x + tan(cos(uv.y) + iTime + rand(uv.y)) * min(0.0, cos(uv.y * 10.0 + iTime) + 0.9);\n    float pi = 3.141592;\n    vec2 offset1 = vec2(cos(iTime*0.8), sin(iTime*0.8)) * 0.01 + 0.01;\n    vec2 offset2 = vec2(cos(iTime + (2.0/3.0 * pi)), sin(iTime + (2.0/3.0 * pi))) * 0.01 - 0.01;\n    vec2 offset3 = vec2(cos(iTime*0.9 + (pi)), sin(iTime*0.9 + (pi))) * 0.0 - 0.01;\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n    \n    float magic = (r+g+b) / 3.0;                      \n    vec3 col = vec3(r, g, b) + (rand(uv + cos(iTime * 0.1)) - 0.5) * 0.2;\n\n    // Output to screen\n    fragColor = vec4(vec3(magic) * col,1.0);\n}","name":"Image","description":"","type":"image"}]}