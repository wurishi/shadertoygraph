{"ver":"0.1","info":{"id":"wl3yzr","date":"1608349626","viewed":147,"name":"Molten Glass","username":"mherreshoff","description":"Iterates a map on the plane using the Abstract 1 (rocks) texture to produce a thing with the appearance of molten glass.  Animated by changing the map's parameters.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["glass","morphing","melting","molten"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(float n){return fract(sin(n) * 293.323);}\nfloat contRand(float n) {\n    float i = floor(n), x = fract(n);\n    return mix(rand(i), rand(i+1.), smoothstep(0.,1.,x));\n}\n\nfloat random (vec3 st) {\n    return fract(sin(dot(st, vec3(12.9898,78.233,28.334)))*43758.5453123);\n}\n\n#define CS(a) vec2(cos(a), sin(a))\nvec2 target (vec2 z) {\n    \n    vec2 weightedSum=vec2(0); float weight=0.;\n#define N 3.\n    for (float i = 0.; i < N; i++) {\n        float theta = 6.28*(i/N)+(contRand(iTime*.3+(i*17.)+(i/N))-.5);\n        vec2 point = 2.*CS(theta), d = z-point;\n        float L = length(d), w = pow(L, -2.);\n        float scale = 1.2+.4*contRand(iTime*.5+22.);\n        weight += w;\n        weightedSum += scale*w*d;\n    }\n#undef N\n    return weightedSum/weight;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 pw = 1./iResolution.xy, uv = fragCoord*pw;\n    vec2 p = ((fragCoord-.5*iResolution.xy)/iResolution.y)*10.;\n    \n    float iterations = min(iTime*.3, 3.);\n    for (float i = 0.; i < 5.; i++) if(i < floor(iterations)) p = target(p);\n    p = mix(p, target(p), fract(iterations));\n    \n    vec4 col;\n    if (length(p) < 1.){\n      col = texture(iChannel0, p*.5+.5);   \n    } else {\n      vec4 blur=vec4(0);\n      vec2 uv2 = uv*.8+.1;\n#define N 30.\n      for (float i = 0.; i < N; i++) {\n          vec2 offset = floor(-50.+100.*vec2(random(vec3(uv2, i)), random(vec3(uv2, i+29.))));\n          blur += texture(iChannel0, uv2+pw*offset);\n      }\n      col = blur/N;\n#undef N\n    }\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}]}