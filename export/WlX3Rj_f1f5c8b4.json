{"ver":"0.1","info":{"id":"WlX3Rj","date":"1556833080","viewed":322,"name":"[TWITCH] Knitting dance","username":"Flopine","description":"Here is the result from a live coding session I did on Twitch here: https://www.twitch.tv/flopine\nThis is a improved version of the shader I did during the Semifinals of the Revision 2019 Shader Showdown. Credits for the music in comments","likes":8,"published":1,"flags":64,"usePreview":0,"tags":["raymarching","intersection","twitch","knit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MlX3zB","filepath":"https://soundcloud.com/user-978077894/japotek_theme","previewfilepath":"https://soundcloud.com/user-978077894/japotek_theme","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, Coyhot, Alkama and YX for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n// Music provided by Pellicus, massive thank you to him :)\n// Music by Asyntote/JapoTek\n\n#define time iTime\n\nfloat PI = 3.141592;\nfloat BPM = 138./60.;\n\n\nmat2 rot(float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nvoid moda (inout vec2 p, float rep)\n{\n    float per = 2.*PI/rep;\n    float a = atan(p.y, p.x);\n    float l = length(p);\n    a = mod(a-per*0.5,per)-per*0.5;\n    p = vec2(cos(a),sin(a))*l;  \n}\n\nvoid mo (inout vec2 p, vec2 d)\n{\n    p = abs(p)-d;\n    if(p.y >p.x) p = p.yx;\n}\n\nfloat stmin (float a, float b, float k, float n)\n{\n    float st = k/n;\n    float u = b-k;\n    return min(min(a,b), 0.5*(u+a+abs(mod(u-a+st,2.*st)-st)));\n}\n\nfloat box (vec3 p, vec3 c)\n{\n    vec3 q = abs(p)-c;\n    return min(0., max(q.x, max(q.y,q.z))) + length(max(q,0.));\n}\n\nfloat cyl(vec3 p, float r, float h)\n{return max(length(p.xy)-r,abs(p.z)-h);}\n\nvec3 palette (float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{return a+b*cos(2.*PI*(c*t+d));}\n\nfloat set (vec3 p)\n{\n    float per = 4.;\n    p.xy *= rot(p.z*0.3);\n    p.z = mod(p.z-per*0.5, per)-per*0.5;\n    mo(p.xy, vec2(5.,1.));\n    moda(p.xy, 5.);\n    p.x -= 2.;\n    mo(p.xy, vec2(2.,1.));\n    p.xz *= rot(time);\n    p.xy *= rot(-time);\n    float b1 = box(p, vec3(0.18,5., 0.18));\n    moda(p.xz, 5.);\n    p.x -= 1.;\n    moda(p.xy, 5.);\n    p.x -= 1.;\n    return stmin(b1,box (p, vec3(0.15, 5., 0.15)),1.2, 3.);\n}\n\nfloat c1_id = 0.;\nfloat c2_id = 0.;\nfloat knitting (vec3 p)\n{\n    p.z += time*0.5;\n    p.x += sin(p.y*2.+time)*0.2;\n    float per = 0.22;\n    vec3 pp = p;\n\n    c1_id = floor((p.x-per*.5)/per);\n    p.x = mod(p.x-per*.5, per)-per*.5;\n    float c1 = cyl(p.xzy, 0.05, 1e10); \n\n    p = pp;\n\n    c2_id = floor((p.y-per*.5)/per);\n    p.y = mod(p.y-per*.5, per)-per*.5;\n    p.z = mod(c2_id-.5, 2.) == 0. ? p.z-cos((p.x+.5)*PI)*0.3 : p.z-sin((p.x)*PI)*0.3;\n    float c2 = cyl(p.yzx, 0.05, 1e10);\n    return min(c1,c2);\n}\n\nfloat SDF(vec3 p)\n{\n    p.xy *= rot(floor(time*BPM)*(PI/5.));\n    return max(knitting(p),set(p));\n} \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Sorry Fabrice Neyret! Maybe next time I'll be brave enough to change it ^^\n    vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n    uv -= 0.5;\n    uv /= vec2(iResolution.y / iResolution.x, 1);\n\n    vec3 ro = vec3(0.001,0.001,-12.-time*0.5); vec3 p = ro;\n    vec3 rd = normalize(vec3(uv,1.));\n    vec3 col = vec3(0.);\n    bool hit = false;\n\n    for (float i=0.; i<100.; i++)\n    {\n        float d = SDF(p);\n        if(d<0.01)\n        {\n            hit = true;\n            break;\n        }\n        p += d*rd*0.5;\n    }\n\n    if (hit)\n    {\n        vec3 c1 = palette (c1_id*c2_id, vec3(0.5), vec3(0.5), vec3(0.08), vec3(0.,0.36,0.74));\n        vec3 c2 = palette (c1_id*c2_id, vec3(0.5), vec3(0.5), vec3(0.08), vec3(0.5));\n        col = mix(c1, c2, clamp(floor(sin(time*(BPM/2.)*PI))+1.,0.,1.));\n    }\n    else col = vec3(0.,0.,0.01);\n\n    fragColor = vec4(pow(col,vec3(0.4545)), 1.);\n}","name":"Image","description":"","type":"image"}]}