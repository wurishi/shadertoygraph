{"ver":"0.1","info":{"id":"Xs2cWh","date":"1492175529","viewed":128,"name":"Sketch_Coaxial","username":"cexlearning","description":"Coaxialï¼Œ copy from https://github.com/keijiro/ShaderSketches","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float uvrand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat arc(vec2 coord)\n{\n    const float pi = 3.1415926;\n    float t = floor(iTime * 1.1) * 7.3962;\n\n    vec2 sc = (coord.xy - iResolution.xy / 2.0) / iResolution.y;\n    float phi = atan(sc.y, sc.x + 1e-6);\n    vec2 pc = vec2(fract(phi / (pi * 2.0) + iTime * 0.07), length(sc));\n\n    vec2 org = vec2(0.5, 0.5);\n    vec2 wid = vec2(0.5, 0.5);\n\n    for (int i = 0; i < 7; i++)\n    {\n        if (uvrand(org + t) < 0.04 * float(i)) break;\n        wid *= 0.5;\n        org += wid * (step(org, pc) * 2.0 - 1.0);\n    }\n\n    return uvrand(org);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 delta = vec4(-1, -1, 1, 1) * 0.5;\n\n    // neightbor four samples\n    float c1 = arc(fragCoord.xy + delta.xy);\n    float c2 = arc(fragCoord.xy + delta.zy);\n    float c3 = arc(fragCoord.xy + delta.xw);\n    float c4 = arc(fragCoord.xy + delta.zw);\n\n    // roberts cross operator\n    float gx = c1 - c4;\n    float gy = c2 - c3;\n    float g = sqrt(gx * gx + gy * gy);\n\n    fragColor = vec4(g * 4.0);\n}","name":"Image","description":"","type":"image"}]}