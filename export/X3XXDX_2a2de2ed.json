{"ver":"0.1","info":{"id":"X3XXDX","date":"1710173256","viewed":225,"name":"水立方 weaire-phelan 气泡","username":"shadertoyjiang","description":"包含十二面体和十四面体，十二面体可以是正十二面体，十四面体由两个共法线的六边形，加上各边接的线十二个五边形组成\n以一个正方体盒子为周期，则它八个顶点上，还有中心处都是十二面体，中心的一个方向不同。\n其余位置由三串平行于三个坐标轴的十四面体链填充\n","likes":30,"published":1,"flags":0,"usePreview":0,"tags":["pp"],"hasliked":0,"parentid":"l3sSDj","parentname":"泡泡"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// 01:46 2024-3-10\n// 13:54      3-11 成\n// 水立方 weaire-phelan 气泡\n\nbool deformity=true;\nbool opposite=false;\nbool splendor=false;\n\nfloat Hbox;\n\nvec4 clr;\n\nint type;\n\n\nfloat dln(vec3 a, vec3 b, vec3 p)\n{\n        p-=a;\n        b-=a;        \n        float d,h=clamp(dot(p,b)/dot(b,b),0.,1.);//.1 .9\n        d = length(p-b*h);\n        d*=mod(iTime*.05,2.)>1.\n           ? (1.-3.*h*(1.-h))\n           : (.5-1.*pow(abs(.5-h),2.));\n        return d;\n}\n\n\n\n// 2024年4月7日09时11分15秒\nfloat df6(vec3 pos)\n{\n        float g = sqrt(5.)*.5-.5,\n              G, // = sqrt(5.)*.5+.5,\n              Hf, H, H2, m, dist,Hout;\n        \n        //g = .73828125;\n        //g = sin(iTime)*.5+.5; // 变形\n        G = 1.+sqrt(1.-g);\n        H = G + 1.;\n        H2 = H + H;\n        Hf = H / 2.; \n        Hbox = H;;// 用于剪切盒\n        m = H * 9.;\n                                                                                                                                \n\n        vec3 p = pos-floor(pos/H2)*H2,\n             f = abs(p - H),\n             n = vec3(1);// normalize(vec3(1));                                        \n        // 端点坐标\n        vec3 a = vec3(G, 0, g),\n             b = vec3(G, 0, -g),\n             c = vec3(H, 0, Hf),\n             d = vec3(1);\n        int w;\n        \n        if(dot(f - Hf, n)>0. )f = H - f.yxz;\n        if(f.x<f.y && f.y>f.z)f = f.yzx;\n        if(f.x<f.z && f.z>f.y)f = f.zxy;\n        // 画线 draw line\n        #define CP(x,y,z) dist=dln(x,y,f);if(m>dist)m=dist,w=z;\n        CP(a,b,  0)\n        CP(d,a,  2)\n        CP(a,c,  3)\n        CP(d,H-d,1)\n        if(type==1) // 实心体表面，可以不要\n        {\n                dist=0.;\n                for(int i;i++<3;a=a.yzx)dist=max(dist, dot(d-f, normalize(cross(a-d,a.yzx-d))));\n                if(m>dist)m=dist,w=4;\n        }\n        \n        clr=vec4[]( vec4(1,0,0,1),\n                    vec4(1),\n                    vec4(0,0,1,1),\n                    vec4(0,.7,0,1),\n                    vec4(5,.573,0,1)\n                  ) [w];\n        return m;\n}\n\n\n\n/*\nfloat minc(float o, float x, vec4 clri)\n{\n        if(x<o)clr=clri;\n        return min(o,x);\n}\n\nfloat df66(vec3 p)\n{\n        float G = (sqrt(5.)+1.)*.5;\n        float g = (sqrt(5.)-1.)*.5;        \n        \n        //g=.73828125;\n        //g=0.;\n        //g=1.;\n        //if(deformity==true && iTime>3.)\n             // g=sin(iTime)*.5+.5;\n                \n        G=1.+sqrt(1.-g); // 此时仍然十二个面，否则五点不共面形不成五角形，，14261935\n        float H=G+1.,  // 此时两组正交六边形尖角相等，否则不能拼得不留空隙\n              H2=H+H,\n              d=H*9.;\n        Hbox=H;\n        \n        p-=floor(p/H2)*H2;\n        vec3 f = abs(p - H);\n        vec3 n= normalize(vec3(1));\n        //bool fan;\n        \n        // 颜色 color[part]=\n        vec4 red=vec4(1,0,0,1),\n             wht=vec4(1),\n             blu=vec4(0,0,1,1),\n             prp=vec4(0,.7,0,1);\n        \n        if(dot(f-H*.5,n)>0.)\n        {\n                f=H-f.yxz;\n                //fan=true;\n        }\n        //if(fan==true)red=vec4(0,1,0,1);\n\n        // 端点坐标 vect\n        vec3 ea=vec3(G,0,g),\n             eb=vec3(G,0,-g),\n             ec=vec3(H,0,H/2.),// 六边形尖\n             Y=vec3(1); \n         \n        if(f.x<f.y && f.y>f.z)f=f.yzx;// 旋转120度。(1,1,1)\n        if(f.x<f.z && f.z>f.y)f=f.zxy;\n        \n        // 边线距离 distance to line\n        d = minc(d, dln(ea,eb,f),red);//平行坐标\n        d = minc(d, dln(Y, ea,  f),blu);//接1\n        d = minc(d, dln(ea,ec,f),prp); // 六边，尖角四条线相同\n        d = minc(d, dln(Y, H-Y, f),wht);// 中线\n        \n        // t = 十二面体表面距离 dist  face\n        float t;    \n        if(type==1){\n             for(int i;i++<3;ea=ea.yzx) t=max(t, dot(Y-f,normalize(cross(ea-Y,ea.yzx-Y))));\n             d=minc(d,t,vec4(5,.573,0,1));\n        }\n        //clr=vec4[](vec4(1,0,0,1),\n        //           vec4(1),\n        //           vec4(0,0,1,1),\n        //           vec4(0,.7,0,1)\n        //          )[who];\n        return d;\n}\n*/\n\nfloat map(vec3 p)\n\n{\n        float t =-.2*iTime;\n\n        mat2 rot = mat2(cos(t),-sin(t),sin(t),cos(t));\n\n        p.yz *=rot;\n\n        p.xz *=rot;\n        \n        //p.xy*=rot;\n\n        float a = df6(p)-.03;\n        \n        //return a;\n        if(mod(iTime*.05,2.)<1.)\n        return max(a,  length(max(abs(p)-Hbox*2., 0.)));\n        else\n        return max(min(a, length(p)-.1), length(p)-Hbox*4.);\n\n        //return min(length(p)-1., length(max(abs(p)-.8,0.)))-.1;\n\n}\n\n//float ao(vec3 p,vec3 r){}\n\nvoid mainImage(out vec4 O, vec2 v)\n{\n        clr++;\n        \n        type=int(1.+iTime*.09)%2;\n        //if(iTime>30.)splendor=true;\n        //opposite=true;\n        //if(mod(iTime/15.,2.)<1.)opposite=false;\n        //if(opposite==true)splendor=true;\n        \n        O = vec4(0.);\n        vec2 R = iResolution.xy,\n             u = 1. * (v+v+.1 - R) / R.y,      // 实际坐标\n             m = 1. * (iMouse.xy*2. - R) / R.y;// 实际鼠标\n        vec3 o = vec3(0, .5, -15.+iTime*0.),               // 眼睛坐标\n             r = normalize(vec3(u, 2)),        // 射线\n             e = vec3(0, 1e-3, 0),             // 微距\n             p,n,                                // 法向量\n             s = normalize(vec3(-1,2,-3));     // 太阳\n        \n        float d,t,f,g,c;\n        vec4 ccc;\n        for(int i;i<128 && t < 20.;i++)\n        {\n                p = o + r * t;\n                d = map(p);\n                \n                if(d<.02)\n                {\n                        O *= 0.;\n                        n = normalize(vec3(map(p+e.yxx),map(p+e),map(p+e.xxy))-d);\n                        f = .5 + .5 * dot(n, s);\n                        g = max(dot(n,s),0.);\n                        c = 1. + pow(f, 200.)-f*.3; // 665.352.6.542.9958.8.63\n                        O += c;\n                        if(type==1)O *= mix(1.2*clr,vec4(1),.6)+c*c-.6;                        \n                        O *= exp(-.06*t);\n                        break;\n                }\n                \n                // ccc\n                { n = normalize(vec3(map(p+e.yxx),map(p+e),map(p+e.xxy))-d);   f = .5 + .5 * dot(n, s);   ccc+= -.02*f ;  }        \n                //if(splendor==true){ n = normalize(vec3(map(p+e.yxx),map(p+e),map(p+e.xxy))-d);   f = .5 + .5 * dot(n, s);   ccc+=( opposite==true ? -.02*f : f*.02*sin(iTime*.7));  }\n                t += .8*d;//max(abs(d) ,.01);\n                \n        }\n        if(opposite==true)O=1.-O;\n        //O+=ccc;\n        O+=ccc+.3;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        \n","name":"Image","description":"","type":"image"}]}