{"ver":"0.1","info":{"id":"4tKGDc","date":"1477327569","viewed":113,"name":"Kaliset julia 2D traps","username":"stduhpf","description":"I'm just playing with kalisets.\nIf you want to make a shorter version, comment it, it's fun.\n[url=http://https://www.shadertoy.com/view/4lyGWt]Anti aliased version here[/url]","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","orbittraps","short","codegolf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define r  iResolution.xy\n#define m iMouse\nvoid mainImage( out vec4 O,vec2 I )\n{\n    vec2 c = m.x>0.?2.*(2.*m.xy - r)/r.y:vec2(-.4,.3);\n        O =vec4(0.,0,9,0);\n     I = 2.*(2.*I - r)/r.y;\n    if( m.z>0.&&max(I.x,-I.y)<.5)\n        c=I;\n    for(int i =0;i<99;i++)\n    {\n     I=abs(I)*vec2(1,-1)/dot(I,I)+c; //I=1/abs(I)+c (abs(I)!=length(I))\n         O= vec4(max(O.x,length(I)),max(abs(I.x),O.y),min(abs(I.y),O.z),0);\n    }\n    O = cos(vec4(cos(O.x),O.y,log(O.z),0));\n}","name":"Image","description":"","type":"image"}]}