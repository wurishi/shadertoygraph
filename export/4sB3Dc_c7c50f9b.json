{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Based on Weird Thing by inigo quilez : https://www.shadertoy.com/view/XsB3Wc\n\n\n\nvec2 iSphere( in vec3 ro, in vec3 rd, in vec4 sph )\n{\n\tvec3 oc = ro - sph.xyz;\n\tfloat b = dot( oc, rd );\n\tfloat c = dot( oc, oc ) - sph.w*sph.w;\n\tfloat h = b*b - c;\n\tif( h<0.0 ) return vec2(-1.0);\n\th = sqrt(h);\n\treturn vec2(-b-h, -b+h );\n}\n\nconst int MaxIter = 12;\nvec3 sundir = vec3(0.0,0.5,-1.0);\nfloat g=.8;\nfloat h=1.;\n\n\n\nvec4 map( vec3 p)\n{\n\tfloat dr = 1.0;\n\tvec3 ot = vec3(1000.0); \n\tfloat r2;\n\tfor( int i=0; i<MaxIter;i++ )\n\t{\n            \n        r2 = dot(p,p);\n        if(r2>100.)continue;\n\t\t\n        ot = min( ot, abs(p) );\n\n\n\t\tfloat k = max(h/r2,1.)*g;\n\t\tp  *= k;\n\t\tdr *= k;\n\t\tp=abs(p-0.5)-1.;\t\t\n\t\t\n\t}\n\t\n\tfloat d;\n\t//d = (abs(p.x)+abs(p.y))*length(p)/dr;\t\n\t//d = (length(p.xz)*abs(p.y)+length(p.xy)*abs(p.z)+length(p.yz)*abs(p.x))/dr;\n\t//d = 1.5*(length(p.xz))*length(p.xy)/dr;\n\t//d = 1.*length(p)*log(length(p))/dr;\n\t//d =1.*length(p)/dr;\n    d=abs(p.x)/dr;\n\treturn vec4(ot,d);\n\t\n}\n\nvec4 raymarch( in vec3 ro, in vec3 rd , in vec2 tminmax )\n{\n\tvec4 sum = vec4(0, 0, 0, 0);\n\n\tfloat t = tminmax.x;\n\tfor(int i=0; i<64; i++)\n\t{\n\t\tif( sum.a > 0.99 || t>tminmax.y ) continue;\n\n\t\tvec3 pos = ro + t*rd;\t\t\n\t\tvec4 col = map( pos );\n\t\tfloat d = col.a;\n\t\tcol.a = min(0.002/d,1.);\n\t\tcol.rgb *= col.a;\n\n\t\tsum = sum + col*(1.0 - sum.a);\n        t += min(0.1,d*.3);\t\n                \t\t\n\t}\n\n\tsum.xyz /= (0.001+sum.w);\n\n\treturn clamp( sum, 0.0, 1.0 );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0*q;\n    p.x *= iResolution.x/ iResolution.y;\n    vec2 mo = iMouse.xy / iResolution.xy;\n    float an = 2.0 + 0.2*iTime - mo.x;\n\n\tvec3 ro = 2.0*vec3(cos(an), 0.17, sin(an));\n\tvec3 ta = vec3(0.0, 0.0, 0.0);\n    vec3 ww = normalize( ta - ro);\n    vec3 uu = normalize( cross( vec3(0.0,1.0,0.0), ww ) );\n    vec3 vv = normalize( cross(ww,uu) );\n    vec3 rd = normalize( p.x*uu + p.y*vv + 2.0*ww );\n\n\tvec3 col = vec3(0.08,0.09,0.18);\n    vec2 seg = iSphere( ro, rd, vec4(0.0,0.0,0.0,1.0) );\n\tif( seg.x>0.0 )\n\t{\n        vec4 res = raymarch( ro, rd, seg );\n\t    col = mix( col, res.xyz, res.w );\n\t}\n\t\n\tcol = mix( col, vec3(dot(col,vec3(0.333))), -0.1 );\n\t\n\tcol = pow( col, vec3(0.45) ) * 1.2;\n\n\tcol *= sqrt( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y) );\n\t    \n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sB3Dc","date":"1394136771","viewed":1374,"name":"Fractal sphere","username":"guil","description":"Rendering of a kleinian fractal using the \"raymarching inside a sphere technique\" from IQ's Weird Thing : https://www.shadertoy.com/view/XsB3Wc","likes":45,"published":1,"flags":0,"usePreview":0,"tags":["3d","fractal","kleinian"],"hasliked":0,"parentid":"","parentname":""}}