{"ver":"0.1","info":{"id":"mtGfDG","date":"1702422687","viewed":43,"name":"hypnodot","username":"joshsundby","description":"pulsing ball","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["basic","hypnotic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    // Time variable for pulsation effect\n    float time = sin(iTime * 0.5) * 0.5 + 0.5;\n\n    // Sphere parameters\n    float radius = 0.3 * time; // Radius varies with time for pulsation\n    vec3 sphereColor = vec3(1.0, 0.4, 0.3); // Warm color for the sphere\n\n    // Drawing the sphere\n    float dist = length(uv);\n    float sphere = smoothstep(radius, radius - 0.01, dist);\n\n    // Background color\n    vec3 bgColor = vec3(0.1, 0.1, 0.1); // Dark background for contrast\n\n    // Combining sphere and background\n    vec3 color = mix(sphereColor, bgColor, sphere);\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}