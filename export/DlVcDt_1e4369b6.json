{"ver":"0.1","info":{"id":"DlVcDt","date":"1700831426","viewed":34,"name":"scratch texture","username":"VL","description":".","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define int2 vec2\n#define float2 vec2\n#define int3 vec3\n#define float3 vec3\n#define int4 vec4\n#define float4 vec4\n#define frac fract\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define saturate(x) clamp(x,0.,1.)\n#define lerp mix\n#define sincos(x,s,c) s = sin(x),c = cos(x)\n#define mul(x,y) (x*y)\n#define atan2 atan\n#define fmod mod\n\n\nfloat2 hash22(float2 p)\n{\n    float3 p3 = frac(float3(p.xyx) * float3(192.1031, 172.1030, 184.0973));\n    p3 += dot(p3, p3.yzx + 33.33);\n    return frac((p3.xx + p3.yz) * p3.zy);\n}\n\nfloat simplexNoise(float2 uv)\n{\n    const float k1 = 0.366025f;\n    const float k2 = 0.211324f;\n\n    int2 idx = floor(uv + (uv.x + uv.y) * k1);\n    float2 a = uv - (float2(idx) - float(idx.x + idx.y) * k2);\n    int2 tb = a.y > a.x ? int2(0, 1) : int2(1, 0);\n    float2 b = a - tb + k2;\n    float2 c = a - 1.f + k2 * 2.f;\n    \n    float3 kernel = max(0.5f - float3(dot(a, a), dot(b, b), dot(c, c)), 0.f);\n    float3 noise = (kernel * kernel) * (kernel * kernel)\n    * float3(dot(a, hash22(idx) * 2.f - 1.f), dot(b, hash22(idx + tb) * 2.f - 1.f), dot(c, hash22(idx + 1.) * 2.f - 1.f));\n    \n    return dot(vec3(70.f), noise);\n}\n\nfloat scratch(float2 uv, float sy, float s, float a)\n{\n    uv.x -= uv.y*sy;\n    return smoothstep(max(simplexNoise(uv*s),0.),0., a);\n}\n\nfloat TexScratch(float2 uv, float amount)\n{\n    float a = saturate(1.-amount);\n    float n1 = simplexNoise(uv);\n    \n    float s1 = scratch(uv * float2(0.5,0.01) + n1 *0.005,20.,350. , a);\n    float s2 = scratch(uv * float2(0.6,0.02) + n1 *0.004,-30.,200. , a);\n    float s3 = scratch(uv * float2(0.7,0.03) + n1 *0.002, 60.,100. , a);\n    float s4 = scratch(uv * float2(0.6,0.02) + n1 *0.003, -70.,200. , a);\n    \n    return s1 + s2 + s3 + s4;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy + iTime*0.1;\n    \n    vec3 col = vec3(TexScratch(uv,0.5));\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}