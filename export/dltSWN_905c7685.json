{"ver":"0.1","info":{"id":"dltSWN","date":"1685432037","viewed":45,"name":"wave interference of 2 sources","username":"user333","description":"this shader shows 2 simultaneous sources interfering with each other. \n\nedit1 : fixed distortion","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["waves","math","physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    float ratio= iResolution.x/iResolution.y;\n    float d = 0.5*cos(iTime);\n    vec2 sc_1 = vec2(0.5*ratio-d/2.0,0.5);\n    vec2 sc_2 = vec2(0.5*ratio+d/2.0,0.5);\n    \n\n    \n    float freq = 3.0;\n    float wave_length = 0.05;\n    float amplitude = 0.5;\n    float ya=amplitude*sin(2.0*3.1415*(iTime*freq-distance(sc_2,uv)/wave_length));\n    float yb=amplitude*sin(2.0*3.1415*(iTime*freq-distance(sc_1,uv)/wave_length));\n    float y =ya+yb;\n    // Time varying pixel color\n    vec3 col =y*vec3(0,1,1);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}