{"ver":"0.1","info":{"id":"fdGfDW","date":"1658149861","viewed":87,"name":"Entropy","username":"maxwell3d","description":"This is just a quick bit of fun. Nothing serious.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","simple","fun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GRAY float3(0.21267, 0.71515, 0.07217)\n\n#define SPEED 2.0\n#define DISTORTION 1.2\n\n#define PI 3.141592\n#define TWO_PI PI * 2.0\n\n\nfloat Triangle(vec2 uv)\n{    \n    float tri = atan(uv.x,uv.y) + PI;\n    float r = TWO_PI / 3.0;\n    tri = cos(floor(0.5 + tri / r) * r - tri) * length(uv);      \n    return smoothstep(0.55, 0.54, tri);\n}\n\n\nmat2 Rotate(float angle)\n{\n    return mat2(cos(angle),-sin(angle), sin(angle),cos(angle));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec3 backgroundColor = 0.5 + 0.5 * cos(iTime + uv.yxy + vec3(0, 2, 4));\n    vec3 mainColor = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n\n    backgroundColor *= 0.3;\n\n    uv -= vec2(0.5, 0.5);\n    uv = Rotate(iTime * PI * SPEED) * uv;\n    uv += vec2(0.5, 0.5);\n    \n    uv = uv + (uv * (DISTORTION * (uv.x * uv.x + uv.y * uv.y)));\n    uv *= 0.5;\n      \n    float tri = Triangle(uv);\n    vec3 color = mix(backgroundColor, mainColor, tri);\n\n    float d = length(vec2(0.5, 0.5) - uv) - 0.025;\n    color /= d;\n\n    color = clamp(color * 0.1, 0.0, 1.0);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}