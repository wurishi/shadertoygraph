{"ver":"0.1","info":{"id":"3slSzr","date":"1550493532","viewed":146,"name":"Polka Dots","username":"AdrianPi","description":"red polka dots over white background","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nThis is public domain. Do what you please with it :)\n\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // Get aspect ratio\n    float aspect = iResolution.x / iResolution.y;\n    \n    // Get subpixel size\n    float sx = 1.0 / 4. / iResolution.x;\n    float sy = 1.0 / 4. / iResolution.y;\n    \n    // Accumulate color here\n    vec3 col = vec3(0,0,0);\n    \n    // The overall scaling\n    vec2 s = vec2(.2,.2);  \n    \n    // Da trick, squash pattern by sin(2*PI/6)\n    s.y *= sin(2. * 3.141592 / 6.);\n    \n    // Oversample for AA\n    for(int i  = 0; i < 4; i++)\n    {\n\t\tfor(int j = 0; j < 4; j++)\n        {\n            // Texture space\n            vec2 uv = fragCoord/iResolution.xy;                        \n                        \n            // Add subpixel offset\n            uv.x += sx * float(j);\n            uv.y += sy * float(i);\n\n            // Correct for aspect ratio\n            uv.x *= aspect;\n            \n            // Apply scaling\n            vec2 uv3 = uv / s;\n\n            // Shift even rows\n            if((int(floor(uv3.y)) & 0x01) != 0)\n                uv.x += 0.5;\n\n            // Tile\n            uv = mod(uv, s);\n            \n            // Get tile-normal space\n            vec2 uv2 = uv / .2;\n            uv2 *= 2.;\n            uv2 -= 1.;       \n\n            // Dist from center\n            //float d = sqrt(dot(uv2,uv2));\n            float d = dot(uv2,uv2);\n\n            // Color accordingly\n            //col += (d < .666) ? vec3(1,0,0) : vec3(1,1,1);\n            col += (d < (.666*.666)) ? vec3(1,0,0) : vec3(1,1,1);\n        }\n    }\n    \n    // Divide by number of samples\n    col /= 16.;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}