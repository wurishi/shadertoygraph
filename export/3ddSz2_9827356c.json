{"ver":"0.1","info":{"id":"3ddSz2","date":"1572391658","viewed":98,"name":"displaced tiling","username":"ankd","description":"my post effect sketch","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["effect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = acos(-1.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (fragCoord.xy*2. - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    vec2 offset = vec2(sin(iTime*vec2(0.6, 0.5) + sin(iTime*vec2(0.8, 0.7))));\n\tfloat l = length(p - offset);\n    \n    p = (p+offset)*(2.+0.5*sin(uv*2.*PI + iTime*3.));\n    uv = fract(p);\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}