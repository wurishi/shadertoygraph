{"ver":"0.1","info":{"id":"lXVGWm","date":"1717758296","viewed":37,"name":"Audio Terminal","username":"saxha","description":"old terminal","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["retro","audio","visual","terminal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 tvUV = uv - vec2(0.5); // Center UV at (0,0)\n    float radius = -length(tvUV); // Distance from center\n    float aspectRatio = iResolution.x / iResolution.y;\n    tvUV.x *= aspectRatio; // Correct aspect ratio\n    tvUV /= 3.;\n    tvUV *= 1.0 - radius;\n    tvUV += vec2(0.5);\n    \n    vec2 auv = tvUV * 2. - vec2(0.5);\n    \n    // Sample audio waveform\n    float audio = texture(iChannel0, vec2(auv.x, 0.5)).r;\n   \n    bool d = mod(auv.x, 0.07) > 0.03;\n    \n    vec3 col;\n    \n    if (audio > auv.y && d && auv.x < tvUV.x + 0.25 && auv.x > tvUV.x - 0.25 && auv.y > tvUV.y - 0.14 && mod(fragCoord.y, 2.0) < 1.0) {\n        col = vec3(0., 1., 0.);\n    } else {\n        // Terminal screen background\n        col = mix(vec3(0.0), vec3(0.1), tvUV.y);\n        if ((((tvUV.x > 0.2 && tvUV.x < 0.24) || (tvUV.x < 0.8 && tvUV.x > 0.76)) || ((tvUV.y > 0.28 && tvUV.y < 0.32) || (tvUV.y > 0.7 && tvUV.y < 0.74))) && tvUV.x > 0.2 && tvUV.x < 0.8 && tvUV.y > .28 && tvUV.y < .74) {\n            col = vec3(distance(vec2(0.5), tvUV));\n        } else if ((tvUV.x < 0.2 || tvUV.x > 0.8) || (tvUV.y < 0.3 || tvUV.y > 0.7)){\n            if (uv.y < 0.3) {\n                col = vec3(mix(0.8, 0.2, uv.y)); // Table\n            } else {\n                col = vec3(mix(0.5, 0.2, uv.y)); // Wall (Background)\n            }\n        }\n    }\n    \n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}