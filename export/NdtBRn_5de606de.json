{"ver":"0.1","info":{"id":"NdtBRn","date":"1655969349","viewed":77,"name":"Wsh - Sparse points","username":"Wonshtrum","description":"Sparse points based on voronoi noise. It is assured that two neighboring cells can't both have a point, meaning two points are at least separated by 1 unit. However it is also assured that every cell has equal chance to have a point.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","bluenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rand3( vec2 p )\n{\n    vec3 q = vec3( dot(p,vec2(127.1,311.7)), \n\t\t\t\t   dot(p,vec2(269.5,183.3)), \n\t\t\t\t   dot(p,vec2(419.2,371.9)) );\n\treturn fract(sin(q)*43758.5453);\n}\n\nvec3 blob( vec2 x, float t )\n{\n    vec3 c = rand3(x);\n    vec3 r = rand3(x+vec2(1,0));\n    vec3 u = rand3(x+vec2(0,1));\n    vec3 d = rand3(x+vec2(1,1));\n    vec3 o = rand3(x+vec2(1,-1));\n    return vec3(c.xy+x, c.z>t && r.z<t && u.z<t && d.z<t && o.z<t);\n}\n\nfloat blue( vec2 x )\n{\n    vec2 n = floor(x);\n    float md = 10.0;\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        vec3 b = blob(n + vec2(i,j), 0.7);\n        if (b.z < 0.5) {\n            continue;\n        }\n\t\tvec2 r = b.xy - x;\n        float d = dot(r,r);\n        md = d<md? d : md;\n    }\n    return md;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy/iResolution.x;\n    p += 0.5*cos( 0.1*iTime + vec2(0.0,1.57) );\n    \n    const float scale = 64.0;\n    float c = blue(scale*p);\n    \n    fragColor = vec4( fract(scale*p)*0.4, sqrt(c)<0.3, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}