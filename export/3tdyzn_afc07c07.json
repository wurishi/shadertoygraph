{"ver":"0.1","info":{"id":"3tdyzn","date":"1608353777","viewed":95,"name":"Breathing Grid 1","username":"jllusty","description":"A grid that breaths.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","breathing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 4.*atan(1.);\n\nvec2 pForm(float t) {\n    return vec2(t,sin(2.*pi*t+iTime));\n}\n\nbool checkerboard(vec2 v) {\n    float sum = floor(v.x) + floor(v.y);\n    return mod(sum,2.) < .5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv =  5.* ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n\n    vec3 white = vec3(1.);\n    vec3 black = vec3(0.);\n    \n    vec3 col;\n    if(mod(uv.x,1.+(1.+cos(pi*iTime))/2.) < 1.) {\n        if(mod(uv.y,1.+(1.+cos(pi*iTime))/2.) < 1.) {\n            col = black;\n        }\n        else\n            col = white;\n    }\n    else {\n        if(mod(uv.y,1.+(1.+cos(pi*iTime))/2.) < 1.) {\n            col = white;\n        }\n        else\n            col = black;\n    }\n\n    //vec3 col = checkerboard(uv)?black:white;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}