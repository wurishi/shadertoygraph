{"ver":"0.1","info":{"id":"fsKfRz","date":"1712863285","viewed":105,"name":"Slideshow X posts","username":"EisernSchild","description":"Slideshow X posts\nall rights/licences lie by original authors !!\n(follow X links)","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","twitter","codegolf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Slideshow X posts\n// all rights/licences lie by original authors !!\n// (follow X links)\n//\n// Ported to Shadertoy by Denis Reischl\n//\n// added / changed :\n//    * LookAt matrices\n//    * Ray Orientation + Direction\n//    (original code lines kept in code)\n\n\n// https://twitter.com/softwaretogo/status/1625121748717916160\nvec3 creature(vec2 uv)\n{\n\tvec2\n\t\tn = vec2(0),\n\t\tq = vec2(0);\n\n\tuv *= .875;\n\n\tfloat\n\t\td = dot(uv, uv),\n\t\ts = 9.,\n\t\ta = .02,\n\t\tb = sin(iTime * 4. - d * 4.) * .9,\n\t\tt = iTime * 4.;\n\n\tmat2 m = mat2(.6, -1.2, 1.2, .6) * .9;\n\tfor (float i = .0; i < 12.; i++)\n\t{\n\t\tuv *= m;\n\t\tn *= m;\n\t\tq = uv * s - t + b + i + n;\n\t\ta += dot(cos(q) / s, vec2(.2));\n\t\tn += sin(q);\n\t\ts *= 1.2;\n\t}\n\n\tvec3 col = vec3(1, 3, 4) * (a + .2) + a + a - d * 1.5;\n\tcol = exp(-col * 8.);\n\tcol = abs(col);\n\tcol = sqrt(col);\n\tcol = exp(-col * 4.);\n\n\treturn col;\n}\n\n// https://twitter.com/softwaretogo/status/1625121748717916160\nvec3 crawler(vec2 uv)\n{\n\tvec2\n\t\tn = vec2(0),\n\t\tq = vec2(0);\n\n\tuv *= .875;\n\n\tfloat\n\t\td = dot(uv, uv),\n\t\ts = 9.,\n\t\ta = .02,\n\t\tb = sin(iTime * 4.4 - d * 4.) * .7,\n\t\tt = iTime * 4.;\n\n\tmat2 m = mat2(.6, 1.2, -1.2, .6);\n\tfor (float i = .0; i < 30.; i++)\n\t{\n\t\tn *= m;\n\t\tq = uv * s - t + b + i + n;\n\t\ta += dot(sin(q) / s, vec2(.2));\n\t\tn += sin(q);\n\t\ts *= 1.2;\n\t}\n\n\tvec3 col = vec3(1, 3, 4) * (a + a) + a + a - d;\n\tcol = exp(-col * 8.);\n\tcol = abs(col);\n\tcol = sqrt(col);\n\tcol = exp(-col * 4.);\n\n\treturn col;\n}\n\n// https://twitter.com/softwaretogo/status/1625121748717916160\nvec3 mollusc(vec2 uv) {\n\tvec2\n\t\tn = vec2(0),\n\t\tq = vec2(0);\n\n\tuv *= .8;\n\n\tfloat\n\t\td = dot(uv, uv),\n\t\ts = 9.,\n\t\ta = .05,\n\t\tb = sin(iTime * 4. - d * 3.) * .9,\n\t\tt = iTime * 4.;\n\n\tuv.yx -= iTime * .1;\n\n\n\tmat2 m = mat2(-.6, .8, -.8, -.6) * .9;\n\tfor (float i = .0; i < 30.; i++) {\n\t\tuv *= m;\n\t\tn *= m;\n\t\tq = uv * s - t + b + i + n;\n\t\ta += dot(cos(q) / s, vec2(.2));\n\t\tn -= sin(q);\n\t\ts *= 1.2;\n\t}\n\n\tvec3 col = vec3(4, 2, 1) * (a + .15) + a - d;\n\tcol = sqrt(col);\n\n\treturn col;\n}\n\n// https://twitter.com/softwaretogo/status/1625121748717916160\nvec3 dflame(vec2 uv) {\n\tvec2\n\t\tn = vec2(0),\n\t\tq = vec2(0);\n\n\tuv *= .875;\n\n\tfloat\n\t\td = dot(uv, uv),\n\t\ts = 9.,\n\t\ta = .02,\n\t\tb = sin(iTime * .4 - d * 4.) * .9,\n\t\tt = iTime * 4.;\n\n\tuv *= rotate2D(sin(6. + t * .05) * .8 - .567);\n\tuv.y -= t * .05;\n\n\tmat2 m = mat2(.6, 1.2, -1.2, .6);\n\tfor (float i = .0; i < 30.; i++) {\n\t\tn *= m;\n\t\tq = uv * s - t + b + i + n;\n\t\ta += dot(cos(q) / s, vec2(.2));\n\t\tn += sin(q);\n\t\ts *= 1.2;\n\t}\n\n\tvec3 col = vec3(4, 2, 1) * (a + .2) + a + a - d;\n\tcol = exp(-col * 8.);\n\tcol = abs(col);\n\tcol = sqrt(col);\n\tcol = exp(-col * 4.);\n\n\treturn col;\n}\n\n// https://twitter.com/softwaretogo/status/1625121748717916160\nvec3 flame(vec2 uv) {\n\tvec2\n\t\tn = vec2(0),\n\t\tq = vec2(0);\n\n\tuv *= .6 + (sin(iTime) * .2);\n\n\tfloat\n\t\td = dot(uv, uv),\n\t\ts = 9.,\n\t\ta = .02,\n\t\tb = sin(iTime * .4 - d * 4.) * .9,\n\t\tt = iTime * 4.;\n\n\tuv *= rotate2D(sin(6. + t * .05) * .8 - .567);\n\tuv.y -= t * .05;\n\n\tmat2 m = mat2(.6, 1.2, -1.2, .6);\n\tfor (float i = .0; i < 30.; i++) {\n\t\tn *= m;\n\t\tq = uv * s - t + b + i + n;\n\t\ta += dot(cos(q) / s, vec2(.2));\n\t\tn -= sin(q);\n\t\ts *= 1.2;\n\t}\n\n\tvec3 col = vec3(1, 2, 4) * (a + .2) + a + a - d * .5;\n\tcol = exp(-col * 8.);\n\tcol = abs(col);\n\tcol = sqrt(col);\n\n\treturn col;\n}\n\n// https://twitter.com/softwaretogo/status/1625121748717916160\nvec3 water(vec2 uv) {\n\tvec2\n\t\tn = vec2(0),\n\t\tq = vec2(0);\n\n\tuv *= .875;\n\n\tfloat\n\t\td = dot(uv, uv),\n\t\ts = 9.,\n\t\ta = .02,\n\t\tb = sin(iTime * 4.4 - d * 90.) * .7,\n\t\tt = iTime * 4.;\n\n\tmat2 m = mat2(.6, 1.2, -1.2, .6);\n\tfor (float i = .0; i < 30.; i++) {\n\t\tn *= m;\n\t\tq = uv * s - t + b + i + n;\n\t\ta += dot(sin(q) / s, vec2(.2));\n\t\tn -= sin(q);\n\t\ts *= 1.2;\n\t}\n\n\tvec3 col = vec3(1, 3, 4) * (a + a) + a + a - d;\n\tcol = exp(-col * 8.);\n\tcol = abs(col);\n\tcol = sqrt(col);\n\tcol = exp(-col * 4.);\n\n\treturn col;\n}\n\n// https://twitter.com/zozuar/status/1551015211905290240\nvec4 marijuana(in vec3 vOri, in vec3 vDir, in vec2 r, in float t)\n{\n    vec4 o = vec4(0.);\n    for (float i, g, e, R, s; i++ < 1e2; g += e * R * .2)\n\t{\n\t\ts = 5.;\n\t\t\n        // vec3 p = vec3((FC.xy - .5 * r) / r.y * g, g - s);\n\t\t// p.y -= p.z + 1.;\n        vec3 p = vOri + g * vDir;\n        \n        e = .6 + snoise2D(p.zx -= t) * .01;\n\t\tp.zx -= round(p.zx);\n\t\tp = vec3(log(R = length(p)), p.y / R, atan(p.z, p.x));\n\t\te += p.y;\n\t\tfor (; s < 6e2; s += s)\n\t\t\te += length(sin(p * s + p.x * s + 2.)) / s;\n\t\to += .01 / exp(e * e * 1e4 + p.x * .3);\n\t}\n    return o;\n}\n\n// https://twitter.com/zozuar/status/1539697637082923010\nvec4 river_canyon(in vec3 vOri, in vec3 vDir, in vec2 r, in float t)\n{\n    vec4 o = vec4(0.);\n\tfloat i, e, g, v, s;\n\tfor (o++; i++ < 1e2; o -= .01 / exp(e * e * 5e3))\n\t{\n\t\t// original code\n        // vec3 p = vec3((FC.xy - .5 * r) / r.y * g, g - 2.);\n\t\t// p.y -= p.z * .4;\n\t\t// p.x += sin((p.z += t) * .5);\n        // e = p.y - tanh(p.x * p.x * .5);\n\t\t// for (v = 1.; v < 2e2; e += abs(dot(sin(p.xz * v), r / r / v * (p.y < s ? p.z += t * .1, .2 : .3))))\n        //     p.xz = p.xz * rotate2D(v += v);\n\t\t// g += e = min(e, p.y + e * .2) * .4;\n\t\t\n        vec3 p = vOri + g * vDir;\n        p.x += sin((p.z) * .5);\n        e = p.y - tanh(p.x * p.x * .5);\n\t\tfor (v = 1.; v < 2e2; e += abs(dot(sin(p.xz * v), r / r / v * (p.y < s ? p.z += t * .1, .2 : .3))))\n\t\t\tp.xz = p.xz * rotate2D(v += v);\n\t\tg += e = min(e, p.y + e * .2) * .4;\n\t}\n    return o;    \n}\n\n// https://twitter.com/zozuar/status/1539383002421202947\nvec4 river_canyon2(in vec3 vOri, in vec3 vDir, in vec2 r)\n{\n    vec4 o = vec4(0.);\n    for (float i, e, g, s; i++ < 1e2; g += e * .4)\n\t{\n        // original code\n        /*\n\t\tvec3 p = vec3((FC.xy - .5 * r) / r.y * g, g - 5.);\n\t\tp.y -= p.z * .6;\n\t\tp.z += t;\n\t\te = p.y - tanh(abs(p.x + sin(p.z) * .5));\n\t\tfor (s = 2.; s < 1e2; s += s)\n\t\t\tp.xz *= rotate2D(s),\n\t\t\te += abs(dot(sin(p.xz * s), r / r / s / 4.));\n\t\te = min(e, p.y) - 1.3;\n\t\to += .01 - .01 / exp(e * 1e3 - sign(p.y - 1.31) * FC.yyxy * .001);\n        */\n        \n        vec3 p = vOri + g * vDir;\n\t\te = p.y - tanh(abs(p.x + sin(p.z) * .5));\n\t\tfor (s = 2.; s < 1e2; s += s)\n\t\t\tp.xz *= rotate2D(s),\n\t\t\te += abs(dot(sin(p.xz * s), r / r / s / 4.));\n\t\te = min(e, p.y) - 1.3;\n\t\to += .01 - .01 / exp(e * 1e3 - sign(p.y - 1.31) * (vOri - p).yyxy * .0005);\n\t}\n    return o;\n}\n\n// https://twitter.com/zozuar/status/1492217553103503363\nvec4 nebula(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    float i, e, R, s;\n    \n    // original code  line :\n    // vec3 q, p, d = vec3((FC.xy-.5*r)/r.y,.7);\n    vec3 p, q = vOri, d = vDir;\n\n    for (q.z--; i++ < 1e2; i > 50. ? d /= -d : d)\n\t{\n\t\to.rgb += hsv(.1, e * .4, e / 1e2) + .005;\n\t\tp = q += d * max(e, .02) * R * .3;\n\t\tp = vec3(log(R = length(p)) - t, e = asin(-p.z / R) - 1., atan(p.x, p.y) + t / 3.);\n\t\tfor (s = 1.; s < 6e1; s += s)\n\t\t\te += cos(dot(sin(p * s), cos(p.zxy * s))) / s;\n\t}\n    return o;\n}\n\n// https://twitter.com/zozuar/status/1491129040463605760\nvec4 dessert_rocks(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    float i, e, R, s;\n    \n    // original code line : vec3 q,p,d=vec3((FC.xy-.5*r)/r.y,1);\n\tvec3 p, q = vOri, d = vDir;\n\t\n    for (q.zy--; i++ < 2e2; i > 60. ? d /= -d : d)\n\t{\n\t\te += i / 1e5;\n\t\to += exp(-e * 2e2) / vec4(2, 3, 4, 1) * d.z / i;\n\t\ts = 1.;\n\t\tp = q += d * e * R * .2;\n\t\tp = vec3(log2(R = length(p)) - t * 1., asin(-p.z / R), atan(p.x, p.y));\n\t\tfor (e = --p.y; s < 6e2; s += s)\n\t\t\te += cos(dot(cos(p * s), sin(p.zxy * s))) / s;\n\t}\n    \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1481399660635955201\nvec4 tree(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n\tfor (float i, g, e, s; i++ < 5e1; o += .02 / exp(e * 1e3))\n\t{\n\t\ts = 1.;\n        \n        // original code lines :\n\t\t// vec3 p = vec3((FC.xy - .5 * r) / r.y * g, g - 4. - cos(t) * 3.);\n\t\t// p.xz *= R(t);\n\t\tvec3 p = vOri + g * vDir;\n\n        for (e = p.y += 2.; s > .01; s *= .77)\n\t\t\tp.x = abs(p.x),\n\t\t\te = min(e, max(abs(p.y - s * .5) - s * .4, length(p.xz)) - s * .1),\n\t\t\tp.y -= s,\n\t\t\tp.xz *= rotate2D(1.6),\n\t\t\tp.zy *= rotate2D(.7);\n\n\t\tg += e * .8;\n\t}\n    \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1479920967455543303\nvec4 palace(in vec3 vOri, in vec3 vDir)\n{\n    vec4 o = vec4(0.);\n    \n    vec3 p;\n\tfor (float g, e, i, s, y; i++ < 1e2; o += .01 / exp(1e3 * e) + min(p.y / s, .001) + g / 1e3)\n\t{\n        // original code :\n\t\t// p = vec3((FC.xy - .5 * r) / r.y * g, g + t);\n\t\t// y = p.y += .2;\n\t\t// p.z -= round(p.z);\n        // p = .7 - abs(p);\n        \n        p = vOri + g * vDir;\n        y = p.y;\n        p.z -= round(p.z);\n        p = .7 - abs(p);\n        \n        s = 3.;\n\t\tfor (int i; i++ < 8; p.z += 5.)\n\t\t\tp = abs(p.x > p.y ? p : p.yxz) - .8,\n\t\t\ts *= e = 5. / min(dot(p, p), .5),\n\t\t\tp = abs(p) * e - 6.;\n\n\t\tg += e = min(y, length(p.yz) / s);\n\t}\n    \n    return o;\n}\n\n// https://twitter.com/flockaroo/status/1473801754462633993\nvec4 voxel_water(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    float h, s, a, i;\n    \n    // orignial code :\n    // vec3 p, v, q;\n\t// v = vec3(FC.x - r.x * .5, r.x, FC.y - r.y) / r.y;\n\t// v.xy *= rotate2D(t * .1);\n    vec3 p = vOri, v = vDir, q;\n\n    for (i = 0.; i < 1E2; i++, v *= .96, p += v * h)\n\t\tfor (a = 0., h = p.z - 8., s = 1., q = p + floor(p) * .5; a < 30.; a++, s *= .9)\n\t\t\th += .01 * abs(cos(9. * (t + dot(q.xy, cos(a - vec2(0, 5))) * s) * s)) / s / s;\n\to.xyz = fwidth(p * 9.);\n    \n    \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1461524656532471811\nvec4 city_brickwork(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    float i, e, a, l, y;\n    \n    // original code line : vec3 p,q,d=vec3((FC.xy-.5*r)/r.y,-1);\n\tvec3 p, q = vOri, d = vDir;\n\t\n    // original code line : for (d.xz *= rotate2D(t * .2); i++ < 2e2; e = max(min(++y, -e), y - 3.))\n    for (; i++ < 2e2; e = max(min(++y, -e), y - 3.))\n\t{\n\t\ti > 1e2 ? l = log(e += 1e-4) / 1e2, d /= d, o : o += exp(-e * 1e3) / 2e2;\n\t\tp = q += d * e * .7;\n\t\tp++;\n\t\ty = p.y;\n\t\tfor (a = 3.; a > .04; a *= .6)\n\t\t\tp.xz *= rotate2D(5.),\n\t\t\tp = abs(p) - a,\n\t\t\te = min(e, max(p.x, (max(p.y, p.z))));\n\t}\n\to += l;\n   \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1452771906382348295\nvec4 flowstone(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    for (float i, g, e, R, s; i++ < 1e2; g += e * R * .1)\n\t{\n\t\ts = 1.;\n        \n        // original code lines:\n\t\t// vec3 p = vec3((FC.xy - .5 * r) / r.y * g, g - .1);\n        // p.yz*=rotate2D(sin(t));\n        vec3 p = vOri + vDir * g;\n\n        p = vec3(log(R = length(p)) - t, asin(-p.z / R), atan(p.x, p.y) + t);\n\t\tfor (e = p.y - 1.5; s < 6e2; s += s)\n            e += abs(dot(sin(p * s), cos(p.zxy * s))) / s;\n\t\to += exp(-e * e * pow(o - o + 4e3, 2. - sin(vec4(1, 2, 3, 0) + p.y))) / 1e2;\n\t}\n   \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1448389741574037509\nvec4 cubes(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    for (float i, g, e, R; i++ < 1e2;)\n\t{\n        // original code line:\n\t\t// vec3 p = vec3((FC.xy - .5 * r) / r.y * g, g - exp(fract(-t / PI * 6.)));\n\t\tvec3 p = vOri + vDir * g;\n        \n        p.xz *= rotate2D(t);\n\t\tR = length(p);\n\t\tp = vec3(log(R), asin(p.z / R), (t + atan(p.y, p.x)) / PI * 3.);\n\t\tp -= round(p);\n\t\tg += e = (length(p - clamp(p, -.2, .2))) * R * .2;\n\t\to += exp(-e * 1e3) / 70.;\n\t}\n   \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1446922093598322692\nvec4 heightmap(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    for (float i, j, g, e, s; i++ < 1e2; g += e * .1)\n\t{\n\t\t// original code line : vec3 p = vec3((FC.xy - .5 * r) / r.y * g, g - 3.);\n        vec3 p = vOri + vDir * g;\n        \n\t\tp.yz *= rotate2D(-5.);\n\t\te = p.y;\n\t\tfor (j = 16.; j-- > -2.; e += min(0., (cos(p.x * s * PI) - sin(p.z * s * PI)) / s * .6))\n\t\t\ts = exp(j / 2. - fract(t / PI) * 3.),\n\t\t\tp.xz *= rotate2D(-PI / 3.);\n\t\to += exp(-e * 1e3) / 70.;\n\t}\n   \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1426507880338018310\nvec4 rock_mountains_basic(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    // original code lines :\n    // vec3 p,q,d=vec3((FC.xy-.5*r)/r.y,1);d.yz*=rotate2D(-.7+sin(t*.3)*.2),d.xz*=rotate2D(t*.1);q.z=t;\n    vec3 p, q = vOri, d = vDir;\n\t\n    for (float i, e, s; i++ < 2e2; i == 1e2 ? o.rgb += hsv(.09, .7, pow(e + .002, .1)) - .4 : p)\n\t{\n\t\tp = q += i > 90. ? o.rgb += hsv(.56, .4, sqrt(max(0., e)) / 2e2), sin(vec3(t * .2, .4, t * .2 + 11.)) * (e + .001) : d * e;\n\t\tfor (s = e = .5; s < 3e2; s += s)\n\t\t\tp.xz *= rotate2D(2.), e += abs(sin(p.x * s) * sin(p.z * s) / s);\n\t\te = min(p.y + e, 19.) * .2;\n\t}\n    \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1393564184659517441\nvec4 labyrinth(in vec3 vOri, in vec3 vDir, in vec2 r, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    vec3 p, q = vOri, d = vDir;\n\tfloat i, e = 1., u;\n\tfor (; i++ < 1e2 && e >.001;)\n\t{\n\t\tp = q += d * e * .35;\n\t\te = p.y - abs(fract(sign(snoise2D(mod(ceil(p.xz), 9.) + r) - .5f) * p.x + p.z) - .5);\n\t\tif (p.y < .3) o -= vec4(2, 9, 9, 1) * .03;\n\t}\n\to += cos(i / 64.);\n    \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1378314366261551105\nvec4 disco_blocks(in vec3 vOri, in vec3 vDir, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    #define X(S,D)I=ivec3(S);D=fract(float(I.x^I.y^I.z)*PI\n\tvec3 p;\n\tfloat d = 1., h, H;\n\tivec3 I;\n\tfor (; h < 9. && d>.9;)\n\t{\n        // original code line : p = vec3((FC.xy - r) / r.y, 1) * h + vec3(0, 2, t);\n\t\tp = vOri + vDir * h;\n        \n\t\tX(p * 4., H) * .9);\n        d = p.y - pow(H, 20.); h += .01;\n\t}\n\tX(p * 1e2, d) + t * .1);\n    \n    // original code line : o.xyz = p * pow(d, 1e2) + h / 18.;\n\to.xyz = fract(p) * pow(d, 1e2) + h / 18.;\n        \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1757194474973769884\nvec4 coast(in vec3 vOri, in vec3 vDir, in vec2 r, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    const float s = -.01;\n    for(float e,i,a,w,x,g,h;i++<90.;o+=.01-.02/exp(max(s,e)*3e3)/h)\n    {\n        // original code\n        // vec3 p=vec3((FC.xy-.5*r)/r.y*g+2.,g);\n        // p.zy*=rotate2D(-.4);\n        // e=p.y;\n        // h=e+p.x*.3;\n        // p.z+=t;\n        // for(a=.6;a>.001;a*=.7)\n        //    p.xz*=rotate2D(5.),\n        //    x=(p.x+p.z)/a+t+t,\n        //    e-=w=exp(sin(x)-3.)*a,\n        //    h+=abs(dot(sin(p.xz/a*.3)*a,r/r));\n        // g+=e=min(e,h*.5-1.);\n        \n        vec3 p = vOri + g * vDir;\n        e=p.y;\n        h=e+p.x*.3;\n        p.z+=t;\n        for(a=.6;a>.001;a*=.7)\n            p.xz*=rotate2D(5.),\n            x=(p.x+p.z)/a+t+t,\n            e-=w=exp(sin(x)-3.)*a,\n            h+=abs(dot(sin(p.xz/a*.3)*a,r/r));\n        g+=e=min(e,h*.5-1.);\n    }\n    \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1632160439944478721\nvec4 water(in vec3 vOri, in vec3 vDir, in vec2 r, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    float e,i,a,w,x,g;\n    for(;i++<1e2;)\n    {\n        // original code  lines :\n        // vec3 p=vec3((FC.xy-.5*r)/r.y*g,g-3.);\n        // p.zy*=rotate2D(-.6);\n        vec3 p = vOri + g * vDir;\n        \n        i<1e2?p:p+=1e-4;\n        e=p.y;\n        for(a=.8;a>.003;a*=.8)\n            p.xz*=rotate2D(5.),\n            x=(++p.x+p.z)/a+t+t,\n            w=exp(sin(x)-2.5)*a,\n            o.gb+=w/4e2,\n            p.xz-=w*cos(x),\n            e-=w;\n            g+=e;\n    }\n    o+=min(e*e*4e6,1./g)+g*g/2e2;\n        \n    return o;\n}\n\n// https://twitter.com/natchinoyuchi/status/1625548113317601280\nvec4 glass_fluid(in vec3 vOri, in vec3 vDir, in vec2 r, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    for (float i, s, g; i++ < 75.; o.xyz += hsv(s / 8e4, sin(g + g), s / 4e4))\n\t{\n        // original code  line :\n\t\t// vec3 p = vec3((FC.xy / r - .5) * g, g - 16.);\n        vec3 p = vOri + g * vDir;\n        \n\t\tmat2 m = rotate2D(length(sin(p.xy * 2. + t) + t));\n\t\tfor (int j; j++ < 7;)\n\t\t\ts = length(p) * .05,\n\t\t\tp.xy = abs(p.xy * m) - s,\n\t\t\tp.yz = abs(p.yz * m) - s,\n\t\t\tp.xz = abs(p.xz * m) - i / 1e2;\n\t\tg += length(p *= s = 5. / dot(p, p)) / (s *= 7.);\n\t}\n        \n    return o;\n}\n\n// https://twitter.com/zozuar/status/1625182758745128981\nvec4 gore(vec3 vOri, in vec3 vDir, in vec2 r, in float t)\n{\n    vec4 o = vec4(0.);\n    \n    // original code  line :\n    /// vec2 n, N, q, p = FC.xy / r.y;\n    vec2 n, N, q, p = iPlane(vOri, vDir).yw;\n\n\tfloat S = 9., a, j;\n\tfor (mat2 m = rotate2D(5.); j++ < 30.;)\n\t{\n\t\tp *= m;\n\t\tn *= m;\n\t\tq = p * S + j + n + t;\n\t\ta += dot(cos(q) / S, r / r);\n\t\tn += q = sin(q);\n\t\tN += q / (S + 60.);\n\t\tS *= 1.2;\n\t}\n\to += pow(max(o - o, (a + .5) * .1 * vec4(6, 1, 2, 0) + .003 / length(N)), o - o + .45);\n        \n    return o;\n}\n\nvoid mainImage(out vec4 o, in vec2 FC)\n{\n\t// get uv\n\tvec2 vP = (-iResolution.xy + 2.0 * FC.xy) / iResolution.y;\n\tvec2 vM = vec2(iTime, 2.4f);\n\n\t// set effect slider\n    float fT = mod(floor(iTime + FC.x / iResolution.x), 69.f);\n\to -= o;\n\n    if (fT < 3.f)\n    {\n        vec3 vOri = vec3(0.f, 1.3f, vM.x);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(0.f, -1.f, 2.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = marijuana(vOri, vDir, iResolution.xy, iTime);\n    }\n    else if (fT < 6.f)  \n    {\n        vec3 vOri = vec3(0.f, 1.3f, vM.x);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(0.f, -1.f, 2.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = river_canyon(vOri, vDir, iResolution.xy, iTime);\n    }\n    else if (fT < 9.f)\n    {\n        vec3 vOri = vec3(0.f, 3.f, vM.x);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(.0f, -.7f, 1.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = river_canyon2(vOri, vDir, iResolution.xy);\n    }\n    else if (fT < 12.f)\n    {\n        vec3 vOri = vec3(0.f, 0.f, -5.f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(.0f, .1f, 0.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = nebula(vOri, vDir, iTime);\n    }\n    else if (fT < 15.f)\n    {\n        vec3 vOri = vec3(0.f, 0.f, -.1f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(.1f, -.1f, .1f), 0.f) * vec3(vP.xy, 2.f) );\n        o = dessert_rocks(vOri, vDir, iTime);\n    }\n    else if (fT < 18.f)\t\n    {\n        vec3 vOri = vec3(sin(vM.x) * vM.y * 2.f, 0.4f, cos(vM.x) * vM.y * 2.f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(0.f, .1f, 0.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = tree(vOri, vDir, iTime);\n    }\n\telse if (fT < 21.f)\n    {\n        vec3 vOri = vec3(0.f, .2f, iTime);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(0.f, -.1f, 1.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = palace(vOri, vDir);\n\t}\n    else if (fT < 24.f)    \n    {\n        vec3 vOri = vec3(0.f, 0.f, 3.f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(.1f, 4.1f, .1f), 0.f) * vec3(vP.xy, 2.f) );\n        o = voxel_water(vOri, vDir, iTime);\n\t}\n    else if (fT < 27.f)\n    {\n        vec3 vOri = vec3(0.f, .4f, 0.f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(sin(vM.x) * vM.y, .1f, cos(vM.x) * vM.y), 0.f) * vec3(vP.xy, 2.f) );\n        o = city_brickwork(vOri, vDir, iTime);   \n\t}\n    else if (fT < 30.f)\t\n    {\n        vec3 vOri = vec3(0.f, 0.f, -5.f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(.0f, .1f, 0.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = flowstone(vOri, vDir, iTime);   \n\t}\n    else if (fT < 33.f)\n    {\n        vec3 vOri = vec3(0.f, sin(iTime * .1f), 0.f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(0.f, 0.1f, 0.01f), 0.f) * vec3(vP.xy, 2.f) );\n        o = cubes(vOri, vDir, iTime);\n    }\n\telse if (fT < 36.f)\n    {\n        vec3 vOri = vec3(0.f, 0.f, -5.f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(.0f, .1f, 0.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = heightmap(vOri, vDir, iTime);\n\t}\n\telse if (fT < 39.f)\n    {\n        vec3 vOri = vec3(0.f, -1.f, vM.x);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(0.f, -1.f, 2.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = rock_mountains_basic(vOri, vDir, iTime);\n    }\n    else if (fT < 42.f)\n    {\n        vec3 vOri = vec3(sin(vM.x) * vM.y * 2.f, 2.4f, cos(vM.x) * vM.y * 2.f);\n        vec3 vDir = normalize(LookAt(vOri, vec3(0.f, .1f, 0.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = labyrinth(vOri, vDir, iResolution.xy, iTime);\n\t}\n\telse if (fT < 45.f)\n    {\n        vec3 vOri = vec3(sin(vM.x) * vM.y, 2.f, cos(vM.x) * vM.y);\n        vec3 vDir = normalize(LookAt(vOri, vec3(0.f, .1f, 0.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = disco_blocks(vOri, vDir, iTime);\n    }\n    else if (fT < 48.f)\n    {\n        vec3 vOri = vec3(0.f, 2.3f, vM.x);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(0.f, -2.f, 3.5), 0.f) * vec3(vP.xy, 2.f) );\n        o = coast(vOri, vDir, iResolution.xy, iTime);\n    }\n    else if (fT < 51.f)\n    {\n        vec3 vOri = vec3(0.f, 1.5f, vM.x * .1f);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(0.f, -.5f, (sin(iTime) + 1.f) * 2.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = water(vOri, vDir, iResolution.xy, iTime * 1.5f);\n    }\n    else if (fT < 54.f)\n    {\n        vec3 vOri = vec3(0.f, 0.f, (sin(iTime) + 3.f) * 6.f);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(0.f, 0.f, -1.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = glass_fluid(vOri, vDir, iResolution.xy, iTime);\n    }\n    else if (fT < 57.f)\n    {\n        vec3 vOri = vec3(0.f, 1.f, vM.x);\n        vec3 vDir = normalize(LookAt(vOri, vOri + vec3(0.f, -1.f, 1.f), 0.f) * vec3(vP.xy, 2.f) );\n        o = gore(vOri, vDir, iResolution.xy, iTime);  \n    }\n    else\n    { \n        // https://twitter.com/softwaretogo/status/1625121748717916160\n        if (fT < 59.f)\n            o.rgb = creature(vP);\n        else if (fT < 61.f)\n            o.rgb = crawler(vP);\n        else if (fT < 63.f)\n            o.rgb = mollusc(vP);\n        else if (fT < 65.f)\n            o.rgb = dflame(vP);\n        else if (fT < 67.f)\n            o.rgb = flame(vP);\n        else\n            o.rgb = water(vP);\n\t}\n    \n    o.a = 1.f;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Slideshow X posts\n// all rights/licences lie by original authors !!\n// (follow X links)\n//\n// Ported to Shadertoy by Denis Reischl\n//\n// added / changed :\n//    * LookAt matrices\n//    * Ray Orientation + Direction\n//    (original code lines kept in code)\n\n#define PI 3.141592654f\n\n// hash 2->4\nvec4 hash42(vec2 vP)\n{\n\tvP -= floor(vP * (1.0 / 71.f)) * 71.f;\n\tvP += vec2(26.f, 161.f);\n\tvP *= vP;\n\treturn fract((vP.x * vP.y) * (1.f / vec4(951.135664f, 642.949883f, 803.202459f, 986.973274f)));\n}\n\n// 2D noise\nfloat snoise2D(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * .1031);\n\tp3 += dot(p3, p3.yzx + 33.33);\n\treturn fract((p3.x + p3.y) * p3.z);\n}\n\n// 3D noise\nfloat snoise3D(vec3 p3)\n{\n    p3 *= .0001f;\n\tp3 = fract(p3 * .1031);\n\tp3 += dot(p3, p3.zyx + 31.32);\n\treturn fract((p3.x + p3.y) * p3.z);\n}\n\n// 2d rotation matrix\nmat2 rotate2D(float fA)\n{\n\tfloat fS = sin(fA);\n\tfloat fC = cos(fA);\n\treturn mat2(fC, -fS, fS, fC);\n}\n\n// HSV color converter\nvec3 hsv(float h, float s, float v)\n{\n\tvec3 rgb = clamp(abs(mod(h * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n\n\treturn v * mix(vec3(1.0), rgb, s);\n}\n\n// simple plane intersection\nvec4 iPlane(in vec3 vOri, in vec3 vDir)\n{\n    // ortho project up-origin/up-dir\n    float fT = -vOri.y/vDir.y;\n    vec3 vHPos = vOri + fT * vDir;\n    \n    return vec4(fT, vHPos);\n}\n\n// lookat matrix.. from https://www.shadertoy.com/view/Xtl3W2\nmat3 LookAt(in vec3 vOri, in vec3 vTar, in float fRoll)\n{\n\tvec3 vW = normalize(vTar - vOri);\n\tvec3 vU = normalize(cross(vW, vec3(sin(fRoll), cos(fRoll), 0.0)));\n\tvec3 vV = normalize(cross(vU, vW));\n\treturn mat3(vU, vV, vW);\n}","name":"Common","description":"","type":"common"}]}