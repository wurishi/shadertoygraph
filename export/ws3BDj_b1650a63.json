{"ver":"0.1","info":{"id":"ws3BDj","date":"1605991728","viewed":56,"name":"smileyface_bandw_squares","username":"dcxstephen","description":"b and w smiley ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nstruct smile{\n    vec2 xrange = vec2(0.1,0.2);\n    vec2 yrange = vec2(0.1,0.2);\n}*/\n\n// takes point and float, returns dist\nfloat circle(vec2 p, float r){\n    float dist = abs(length(p)-r);\n    dist = 1.0-smoothstep(0.0,0.1,dist);\n    return dist;\n}\n\nfloat circleAtC(vec2 p, vec2 c, float r){\n    float dist = (length(p-c)-r);\n    dist = step(dist,0.0);//1.0 -smoothstep(0.0,0.0000001,dist);\n    return dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // vec2 uv = fragCoord/iResolution.xy;\n    \n    // Normalized pixel coords from -0.5 to 0.5\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.x;\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec3 col = vec3(0.0);\n    vec2 c=vec2(0.1*sin(2.5*iTime),0.1*cos(2.5*iTime));\n    float r = 0.1;\n    col += vec3(circleAtC(vec2(uv.x,uv.y), c, 0.1));\n    if (col==vec3(1.0)){\n        if (circleAtC(vec2(uv.x,uv.y),c+vec2(0.3,0.24)*r , 0.2*r) > 0.9 ||\n           circleAtC(vec2(uv.x,uv.y), c+vec2(-0.3,0.24)*r , 0.2*r) > 0.9 || \n           (circleAtC(vec2(uv.x,uv.y), c+vec2(0.0,-0.4)*r , 0.3*r)>0.9 && \n           uv.y < c[1]+-0.4*r)){\n            col=vec3(0.0);\n        }\n    }\n    \n    if (0.05-mod(uv.x,0.1) > 0.05*sin(3.0*iTime)){\n        col = vec3(1.0-col[0],1.0-col[1],1.0-col[2]);\n    }\n    if (0.05-mod(uv.y,0.1) > 0.05*cos(3.0*iTime)){\n        col = vec3(1.0-col[0],1.0-col[1],1.0-col[2]);\n    }\n\n    \n    // vec3 col = vec3(0.5);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}