{"ver":"0.1","info":{"id":"llSGWt","date":"1433490512","viewed":157,"name":"chain link","username":"joeedh","description":"chain link pattern","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chainlink"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"/*\ntodo: clean up code\n\nround chain link/brick pattern.\n*/\n\nfloat min2(float x, float y) {\n    return x*y*2.0;\n}\n\n//main texture function\nfloat sample_chainlink(vec2 uv, int do_dv) {\n    \n    float stepsa = floor(7.0*4.0*0.5);\n    float stepsb = floor(10.0/2.0);\n\tfloat c;\n    float tm = iTime*2.0;\n    \n    //tm = sin(tm)*0.5+0.5;// + sin(tm*2.0) + cos(tm*3.0);\n    //tm = pow(tm, 5.0)*5.0;\n    tm *= 2.0;\n    uv[0] -= iTime*0.2;\n    \n    float yadd = sin(uv[0]*1.0+tm)*0.1;//*sin(uv[0]*5.0+tm)*0.1;\n    \n    uv[1] += yadd;\n    vec2 pos = uv;\n\n    float xadd = mod(floor(pos[1]*10.0), 2.0);\n    c = mod(floor((pos[0])*7.0*stepsa+xadd*stepsa*0.5), stepsa)*mod(floor(pos[1]*10.0*stepsb), stepsb);\n    c = max(min(c, 1.0), 0.0);\n\n    float inside = mod(c+1.0, 2.0);\n\n    xadd = mod(floor(-0.1+pos[1]*10.0), 2.0);\n    float x =  mod(abs(-0.033+pos[0]*7.0+(1.0-xadd)*0.5), 1.0);\n    float y =  mod(abs(-0.1+pos[1]*10.0)+0.5, 1.0);\n\n    x = (x-0.5)*4.0 + 0.5;\n\n    x = smoothstep(0.0, 1.0, x)*0.25 + x*0.75;\n    y = smoothstep(0.0, 1.0, y)*0.25 + y*0.75;\n    x = x-0.5;\n    y = y-0.5;\n    \n    //box\n    c = min2(abs(x), abs(y));\n\tfloat c2 = c;\n    \n    c = pow(smoothstep(0.0, 1.0, c), 1.0);\n    \n    uv *= 3.141*0.5;\n    float thx = uv[0]*28.0+3.0, thy=uv[1]*20.0+3.1;\n    \n    float ring = abs((cos(thx)+sin(thy)));\n    ring = 1.0 - pow(ring, 2.0);\n    \n    float parta = 1.0-2.0*pow(c, 0.5);\n    float partb = parta*ring;\n    \n    if (do_dv == 0) {\n        parta = max(parta, 0.0);\n        partb = max(parta*ring, 0.0);\n    }\n    \n    c = c + 0.5*pow(abs(partb), 1.5);\n\n    return c;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv *= 1.5;\n    uv[0] *= 0.75;\n    float filter1 = 0.3;\n\n    //offset the crappy derivatives of this function to get a mirror-like effect.\n    \n#define DF 0.05 - abs(sin(7.0*uv[0])*sin(15.0*uv[1]+1.0))*0.01\n    float c = sample_chainlink(uv, 1);\n    float dx = (sample_chainlink(uv+vec2(DF, 0.0), 1)-c)/DF;\n    float dy = (sample_chainlink(uv+vec2(0.0, DF), 1)-c)/DF;\n    \n    c = sample_chainlink(uv, 0);\n    \n    vec3 dv = normalize(vec3(dx, dy, c));\n    \n    vec3 light = normalize(vec3(-1.0, 1.5, 1.0));\n    \n    float d = abs(dot(dv, light)*0.5+0.5);\n    d = pow(d, 1.0)*1.0;\n    d = d*0.5 + 0.5;\n    \n    c = c*d;\n    fragColor = vec4(c, c, c, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}