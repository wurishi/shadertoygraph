{"ver":"0.1","info":{"id":"ltyGWR","date":"1474063279","viewed":130,"name":"Cube Relay","username":"r1sc","description":"Just messing around with IQ's distance functions","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["signeddistancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEPS 128\n#define STEP_SIZE 0.01\n#define MIN_DISTANCE 0.1\n\nfloat udBox( vec3 p, vec3 b )\n{\n  return length(max(abs(p)-b,0.0));\n}\n\n\nfloat opTx( vec3 p, mat3 m )\n{\n    vec3 q = p*m;\n    return udBox(q, vec3(2.0, 1.0, 1.0));\n}\n\nmat3 rot;\n\nfloat opRep( vec3 p, vec3 c )\n{\n    vec3 q = mod(p,c)-0.5*c;\n    return opTx( q, rot );\n}\n\nfloat raymarch (vec3 position, vec3 direction)\n{\n    float dist = 0.0;\n\tfor (int i = 0; i < STEPS; i++)\n\t{\n\t\tfloat distance = opRep(position, vec3(50.0, 50.0, 100.0)) ;\n        dist += distance;\n\t\tif (distance < MIN_DISTANCE)\n\t\t\treturn dist;\n\n\t\tposition += distance * direction;\n\t}\n\treturn 0.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.y / iResolution.x;\n\tvec2 uv = vec2(fragCoord.x, fragCoord.y*aspect + (iResolution.y-(iResolution.y*aspect)) / 2.0) / iResolution.xy;\n\tvec3 wPos = vec3(uv*10.0-5.0, 0);\n    vec3 cam = vec3(0.0, 0.0, iTime);\n    float r = sin(radians(10.0)*iTime);\n    rot = mat3(cos(-r), -sin(-r), 0,\n\t\t   sin(-r), cos(-r), 0,\n\t\t   0, 0, 1) * \n          mat3(cos(-r), 0, sin(-r),\n\t\t\t0, 1, 0,\n            -sin(-r), 0, cos(-r));\n    vec3 viewDir = normalize(wPos - cam) * -rot;\n    vec3 light =  normalize(vec3(cos(iTime), 0.0, -0.4));\n    float d = dot(viewDir, light) * 1.0;\n    \n    float hit = raymarch(wPos, viewDir);\n    fragColor = mix(vec4(1,1,1,1), vec4(1.0*d,0,0,1), hit);\n\n}","name":"Image","description":"","type":"image"}]}