{"ver":"0.1","info":{"id":"MdjczK","date":"1492942646","viewed":452,"name":"Chromatic Metaballs","username":"paramcookie","description":"Simple implementation of metaballs with chromatic aberration with the help of http://thebookofshaders.com/","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14159265358979323846\n#define TAU 6.28318530717958647692\n\nfloat random(in float val) {\n    return fract(sin(val * 12.9898) * 43758.5453123);\n}\n\nfloat random(in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvec2 random2(in float val){\n    vec2 st = vec2( dot(vec2(val), vec2(127.1, 311.7)), dot(vec2(val), vec2(269.5, 183.3)) );\n    return -1.0 + 2.0 * fract(sin(st) * 43758.5453123);\n}\n\nvec2 random2(in vec2 st){\n    st = vec2( dot(st, vec2(127.1, 311.7)), dot(st, vec2(269.5, 183.3)) );\n    return -1.0 + 2.0 * fract(sin(st) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat d = min(iResolution.x, iResolution.y);\n    vec2 st = (fragCoord.xy - (iResolution.xy / 2.0)) / d;\n    vec2 p =  (iMouse.xy - (iResolution.xy / 2.0)) / d;\n    vec3 color = vec3(0.0);\n    float t = iTime;\n    \n    vec3 m_dist = vec3(0.0);\n    const int n = 10;\n    for(int i=0; i<n; i++){\n        vec2 pos = random2(vec2(float(i), 0.2)) * 0.2;\n        float angle  = mix(0.0,  TAU, random(float(i)));\n        float radius = mix(0.01, 0.2, random(float(i)));\n        float freq = 1.0;\n        if(random(float(i)) > 0.5){\n            freq = -1.0;\n        }\n        vec2 offset = radius*vec2(sin(freq*t + angle), cos(freq*t + angle));\n\n        m_dist.r += 1.0 / distance(st + vec2(0.00, 0.00), pos + offset);\n        m_dist.g += 1.0 / distance(st + vec2(0.01, 0.01), pos + offset);\n        m_dist.b += 1.0 / distance(st + vec2(0.05, 0.00), pos + offset);\n    }\n    m_dist.r -= 2.0 / distance(st + vec2(0.00, 0.00), p);\n    m_dist.g -= 2.0 / distance(st + vec2(0.01, 0.01), p);\n    m_dist.b -= 2.0 / distance(st + vec2(0.05, 0.00), p);\n\n    color += smoothstep(0.49, 0.5, m_dist * 0.01);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}