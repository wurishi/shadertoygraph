{"ver":"0.1","info":{"id":"4c2BWW","date":"1724934570","viewed":43,"name":"ui-shader","username":"sichirc","description":"universal gui shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["universalguishader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf_circle( vec2 point, vec2 center, float radius) {\n    return length(point - center) - radius;\n}\n\nfloat fill_mask(float dist, float softness) {\n    return smoothstep(-softness, softness, -dist);\n}\n\nvec4 apply_mask(vec4 color, float f) {\n    return vec4(color.rgb, color.a * f);\n}\n\nvec4 composite(vec4 back, vec4 front) {\n    return mix(back, front, front.a);\n}\n\nfloat sdf_border(float center, float half_width, float dist) {\n    return abs(dist - center) - half_width;\n}\n\nfloat sdf_box(vec2 point, vec2 center, vec2 b) {\n    vec2 d = abs(point - center)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat sdf_rounded_box(in vec2 point, in vec2 center, in vec2 b, in vec4 r) {\n    vec2 over_zero_x = vec2((-point.x + center.x) > 0.0);\n    float over_zero_y = float((point.y - center.y) > 0.0);\n    vec2 xy = over_zero_x * r.xy + (vec2(1.0) - over_zero_x) * r.zw;\n    float x  = over_zero_y * xy.x + (1.0 - over_zero_y) * xy.y;\n    vec2 q = abs(point - center) - b + x;\n    return length(max(q, 0.0)) + min(max(q.x,q.y), 0.0) - x;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // params\n    vec4 border_color = vec4(1.0, 23.0 / 255.0, 36.0 / 255.0, 1.0);\n    vec4 foreground_color = vec4(235.0 / 255.0, 111.0 / 255.0, 146.0 / 255.0, 1.0);\n    vec4 background_color = vec4(1.0, 1.0, 1.0, 1.0);\n    float width = 350.0;\n    float height = 250.0;\n    vec2 pos = vec2(100.0, 50.0);\n    float border_size  = 20.0;\n    vec2 si = vec2(0.9,0.6) + 0.3*cos(iTime+vec2(0,2));\n    \n    vec4 shadow_color = vec4(0.0, 0.0, 0.0, 0.5);\n    float shadow_radius = 10.0;\n    float is_shadow = clamp(shadow_radius, 0.0, 1.0);\n    vec2 shadow_offset = vec2(10.0, -10.0);\n    \n    vec4 radiuses = 0.3 + 0.3*cos( 2.0*iTime + vec4(0,100,200,300) );\n    radiuses = min(radiuses,min(si.x,si.y));\n    radiuses = radiuses * 200.0;\n    \n    //radiuses = vec4(80.0, 0.0, 30.0, 50.0);\n    \n    \n    \n    \n    \n    // impl\n    \n    vec2 center = vec2(pos.x + width / 2.0 + border_size, pos.y + height / 2.0 + border_size);\n    vec2 size = vec2(width / 2.0, height / 2.0);\n    \n    \n    vec4 color = background_color;\n    \n    \n    // inner rect\n    \n    \n    \n    \n    vec4 inner_color;\n    float dist = sdf_rounded_box(fragCoord, center, size, vec4(\n        max(radiuses.x - border_size, 0.0),\n        max(radiuses.y - border_size, 0.0),\n        max(radiuses.z - border_size, 0.0),\n        max(radiuses.w - border_size, 0.0)\n    ));\n    float fill = fill_mask(dist, 1.0);      \n    float is_border = clamp(border_size, 0.0, 1.0);\n    \n    \n    // shadow\n    float shadow_dist = sdf_rounded_box(fragCoord, center + shadow_offset, size + border_size, radiuses);\n    float shadow_fill = fill_mask(shadow_dist, shadow_radius);\n    shadow_color = apply_mask(shadow_color, shadow_fill);\n    color = is_shadow * composite(color, shadow_color) + (1.0 - is_shadow) * color;\n    \n    // outer rect\n    //float border_dist = sdf_border(20.0, 20.0, dist);\n    float border_dist = sdf_rounded_box(fragCoord, center, size + border_size, radiuses);\n    float border_fill = fill_mask(border_dist, 1.0);\n    \n    \n    \n    color = is_border * composite(color, apply_mask(border_color, border_fill)) + (1.0 - is_border) * color;\n    \n    \n    color = composite(color, apply_mask(background_color, fill));\n    \n    \n    \n    \n    // inner_rect fill_mask(dist, 1.0 - is_border);\n    inner_color = apply_mask(vec4(background_color.rgb, 1.0), fill);\n    color = composite(color, inner_color);\n    fill =  smoothstep(-1.0 - is_border, 1.0 - is_border, -dist);  \n    inner_color = apply_mask(foreground_color, fill);\n    color = composite(color, inner_color);\n    \n    \n\n    fragColor = color;  \n     //fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}]}