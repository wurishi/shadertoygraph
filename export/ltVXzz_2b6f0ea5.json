{"ver":"0.1","info":{"id":"ltVXzz","date":"1482663682","viewed":113,"name":"hsl 2d function mapper","username":"towc","description":"small glsl experiment to help me grasp the concepts :)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","function","hsl","mapper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 hToRGB( float hue ){\n    \n  hue = abs(hue - floor(hue));\n  vec4 color = vec4( 0., 0., 0., 1. );\n  float frac = 1.0/6.0;\n\n  if( hue < frac ){\n    color.r = 1.0;\n    color.g = hue / frac;\n    color.b = 0.0;\n  } else if( hue < frac * 2.0 ){\n    color.r = 1.0 - ( hue - frac ) / frac;\n    color.g = 1.0;\n    color.b = 0.0;\n  } else if( hue < frac * 3.0 ){\n    color.r = 0.0;\n    color.g = 1.0;\n    color.b = ( hue - frac * 2.0 ) / frac;\n  } else if( hue < frac * 4.0 ){\n    color.r = 0.0;\n    color.g = 1.0 - ( hue - frac * 3.0 ) / frac;\n    color.b = 1.0;\n  } else if( hue < frac * 5.0 ){\n    color.r = ( hue - frac * 4.0 ) / frac;\n    color.g = 0.0;\n    color.b = 1.0;\n  } else {\n    color.r = 1.0;\n    color.g = 0.0;\n    color.b = 1.0 - ( hue - frac * 5.0 ) / frac;\n  }\n\n  color = vec4( color.rgb, 1 );\n    \n  return color;\n}\nfloat f( float x, float y ){\n\treturn sin( x / 10.) * 6. + cos( y / 10. ) * 6. + x / 10. + y / 10.;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 xy = fragCoord.xy - iResolution.xy / 2.0;\n    \n\tfragColor = vec4(hToRGB( f( xy.x, xy.y ) / 100. + iTime / 10. ));\n}","name":"Image","description":"","type":"image"}]}