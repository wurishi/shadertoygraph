{"ver":"0.1","info":{"id":"wl3fDj","date":"1613446187","viewed":47,"name":"simple rostro 2d","username":"jorge2017a1","description":"simple rostro 2d","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simplerostro2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por Jorge Flores.P...... jorge2017a1\n//referencia\n//https://www.shadertoy.com/view/Wt3czf    by yasuo\n\n\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n\n\n#define opU2(d1, d2) ( d1.x < d2.x ? d1 : d2 )\n\nfloat opU( float d1, float d2 ) { return  min(d1,d2); }\nfloat opS( float d1, float d2 ) { return max(-d1,d2); }\nfloat opI( float d1, float d2 ) { return max(d1,d2); }\n\n\n\nvec2 rotatev2(vec2 p, float ang)\n{\n    float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\n\n// https://iquilezles.org/articles/distfunctions\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\n    \n\nvec3 MarOndaColV2(vec2 uv,float  t, vec3 col)\n{\n    uv.x-=0.2;\n    vec2 p1=uv;\n    vec2 p2=p1+vec2(0.0,0.3);\n    \n    float ang=90.0;\n    p1.x=mod(p1.x,0.15);\n    p1.x=step(0.5,p1.x);\n   \n    \n    p1.x-=0.02;\n    p1.y+=0.24;\n    p1= rotatev2(p1, radians(ang));\n    p2= rotatev2(p2, radians(ang));\n    \n    \n    float d1=p1.y+ cos(p1.x*5.0)*0.2;\n    float d2=p2.y+ cos(p2.x*5.0)*0.2;\n    float c1= sdCircle(uv-vec2(-0.01,0.3), 0.52 );\n    float d=opS( d2,  d1 );\n     d=opI( c1,  d );\n    col = mix(col,vec3(0.0)*1.2,S(d,0.0));\n    return col;\n}\n\n\n\nvec3 SimpleFigura(vec2 p, vec3 col)\n{\n    vec2 prevP = p;\n    float d;\n    float c1= sdCircle(p-vec2(0.0), 0.5 );\n    \n     d=c1;\n     \n    col = mix(col,vec3(0.7,0.8,0.1)*1.2,S(d,0.0));\n     \n     \n    //Cornea\n    d= sdCircle(p-vec2(-0.25,0.0), 0.1 );\n      col = mix(col,vec3(1.0)*1.2,S(d,0.0));\n    d= sdCircle(p-vec2(0.25,0.0), 0.1 );\n      col = mix(col,vec3(1.0)*1.2,S(d,0.0));\n      \n      \n    //ojo\n    float movx=0.05*sin(iTime);\n    d= sdCircle(p-vec2(-0.25+movx,0.0), 0.05 );\n      col = mix(col,vec3(0.0)*1.2,S(d,0.0));\n    d= sdCircle(p-vec2(0.25+movx,0.0), 0.05 );\n      col = mix(col,vec3(0.0)*1.2,S(d,0.0));\n      \n      \n    //Nariz\n    d= sdBox(p-vec2(0.0,-0.1), vec2(0.05,0.1) );\n    col = mix(col,vec3(0.5,1.0,0.)*1.2,S(d,0.0));\n    \n    //Boca\n    d= sdBox(p-vec2(0.0,-0.3), vec2(0.1,0.02) );\n    col = mix(col,vec3(0.0,0.0,0.)*1.2,S(d,0.0));\n    \n    \n    //Pelo con sombrero \n     float d1= sdCircle(p-vec2(0.0), 0.55 );\n     float d2= sdBox(p-vec2(0.0,-0.2), vec2(0.6,0.35) );\n     d1= opS( d2, d1 );\n    \n     col = mix(col,vec3(0.0,0.3,0.6)*1.2,S(d1,0.0));\n     \n     d= sdBox(p-vec2(0.0,0.15), vec2(0.8,0.02) );\n     col = mix(col,vec3(0.0,0.0,0.)*1.2,S(d,0.0));\n    \n     col= MarOndaColV2(p-vec2(0.0,-0.6),iTime*0.5,  col);\n    \n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 2.0;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.25*cos(iTime+uv.xyx+vec3(0.5,2,4)+2.0*sin(uv.yxx+vec3(1.0+iTime,0.5,0.25)));\n    \n    col= SimpleFigura(uv, col);\n    \n   \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}