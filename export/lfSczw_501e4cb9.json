{"ver":"0.1","info":{"id":"lfSczw","date":"1722041204","viewed":129,"name":"Tunel com textura e luzes","username":"Elsio","description":"e sombra? nada ainda? ","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["fractal","light","path","tunel"],"hasliked":0,"parentid":"ddycDd","parentname":"Tunel textura"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define blue vec4(1, 4, 8, 0) / 30.\n#define white vec4(.3)\n#define t  iTime * 1.4\n\n// lembro que em 28/07/2023 eu n√£o fazia muita ideia de como fazer isso\n// https://www.shadertoy.com/view/mlXyDn\n\nconst float freqA = .2;\nconst float freqB = .3;\nconst float ampA = 2.;\nconst float ampB = 1.;\nvec4 cor;\nfloat bl1, bl2;\n\nvec2 path(in float z) {\n    return vec2(\n        ampA * sin(z * freqA), \n        ampB * cos(z * freqB)\n    );\n}\n\nvec2 path2(float z) {\n    return vec2(\n        ampB * sin(z * freqB * .8), \n        ampA * cos(z * freqA * .2)\n    );\n}\n\n\nfloat textura(vec3 p) {\n    float d = 0., a = .5;\n    vec3 f;\n    while(a < 64.)\n        f = p * a * 8.,\n        f.y -= t * .4,\n        d -= abs(dot(sin(f), p/p)) / a,\n        a += a;\n    return d;\n}\n\n\n\nfloat map(vec3 p) {\n    vec2 t1 = p.xy - path(p.z);\n    vec2 t2 = p.xy - path2(p.z);\n    float e = .04 * textura(p);\n    \n    \n    float d1   = length(t1),\n          d2   = length(t2),\n          b1   = cos(3. * t) * 3. + t + 5.,\n          b2   = sin(2. * t) * 3. + t + 5.;\n          \n    bl1  = length(p - vec3(path(b1), b1)) - .1;\n    bl2  = length(p - vec3(path2(b2), b2)) - .1;\n\n    cor = mix(white, blue, smoothstep(-.1, .1, d1 * 2. - 1.9) - .3  );\n    \n    return min(1.05 - min(d2, min(d1, 1.)) + e, min(bl1, bl2));\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec3 col, p, lookAt, fw, rt, up, D;\n    float s = 1., d, i; \n    \n    lookAt.z  = t;\n    lookAt.xy = path(lookAt.z);\n    \n    p.z  = t - .1;\n    p.xy = path(p.z);\n\n    D = normalize(lookAt - p);\n    rt = vec3(D.z, 0, -D.x);\n    D += mat2x3(rt, cross(D, rt)) \n             * (u - R/2.) / R.y;\n    \n    while(i++ < 120. && s > .001)\n        s = map(p) * .5, \n        p += s * D;\n    \n    o = cor;\n    o += 5. / i;\n    \n    o.rg += .8 / exp(bl1);\n    o.r += .8 / exp(bl2);\n}","name":"Image","description":"","type":"image"}]}