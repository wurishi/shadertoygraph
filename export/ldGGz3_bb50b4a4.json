{"ver":"0.1","info":{"id":"ldGGz3","date":"1455567878","viewed":166,"name":"Fuzz","username":"MarisaKirisame","description":"A product of extreme boredom.\n\nNow updated to use a noise texture, much more reliable across all GPU vendors.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","pixel","blocky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    Fuzz noise shader\n    Inspired by a bg effect from Super Bomberman 5 (no, really)\n\n\tCopyright (c) 2016-2022 Marisa the Magician, UnSX Team\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the\n\t\"Software\"), to deal in the Software without restriction, including\n\twithout limitation the rights to use, copy, modify, merge, publish,\n\tdistribute, sublicense, and/or sell copies of the Software, and to\n\tpermit persons to whom the Software is furnished to do so, subject to\n\tthe following conditions:\n\n\tThe above copyright notice and this permission notice shall be\n\tincluded in all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\tEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\tMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\tIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\tCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\tTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\tSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nfloat rnd( in vec2 sd )\n{\n\t//return cos(sd.y*3874.8674+sd.x*6783.5325)*2737.8474;\n    // use noise tex instead of trig-based PRNG, much better and doesn't break on intel\n\treturn texelFetch(iChannel0,ivec2(mod(sd.x,iChannelResolution[0].x),mod(sd.y,iChannelResolution[0].y)),0).x;\n}\n\n// haha are you telling me I can't declare arrays like in C?\n// what the fuck even is this insane syntax?\nconst vec3 layers[3] =\nvec3[](\n\tvec3(.71,.67,.95),\n\tvec3(.66,.84,.73),\n\tvec3(.95,.73,.81)\n);\nconst float speed[3] =\nfloat[](\n\t1.3526,\n\t.7843,\n\t.3725\n);\nconst float zoom[3] =\nfloat[](\n\t2.,\n\t4.,\n\t8.\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv;\n\tvec3 col = vec3(1.);\n\tfor ( int i=0; i<3; i++ )\n\t{\n\t\tuv = floor(fragCoord.xy/zoom[i]);\n\t\tcol *= layers[i]*2.0*abs(fract(rnd(uv)+iTime*speed[i])-0.5);\n\t}\n\tfragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}