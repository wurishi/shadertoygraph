{"ver":"0.1","info":{"id":"wldfRf","date":"1615683039","viewed":73,"name":"Tentacle Sun","username":"elindie","description":"A burning sun or a tentacle blob, you decide.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2dwiggle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sampleWave(in float x, in float time)\n{\n    float t = sin(x / 50.0 + time) + 1.0;\n    return t;\n}\n\nfloat sampleCircle(in vec2 center, in float radius, in vec2 samplePos) \n{\n    vec2 sphereLocation = vec2(0.34 * iResolution.xy);\n    sphereLocation.y = sampleWave(sphereLocation.x, iTime) * 50.0;\n    \n    float distance = length(samplePos.xy - center.xy);\n    \n    return distance < radius ? 1.0 : 0.0;\n}\n\nvec3 paintTentacle(in vec3 col, in vec2 fragCoord, in vec2 origin) \n{      \n    vec2 cPos;\n    float s1 = 0.0;\n    float iterations = 100.0;\n    for(float i = 0.0; i < iterations; i += 1.0) {\n        cPos = origin + vec2(0.003 * i * iResolution.x, 0.0);\n        cPos.y = sampleWave(cPos.x, iTime) * 0.2 * i + origin.y;\n        s1 = sampleCircle(cPos, (0.06 * iResolution.y) * (1.0 - (i / iterations)), fragCoord);\n        \n        if(s1 > 0.1) {\n            col.xyz = vec3(tan(iTime), sin(iTime), 0.5);\n            return col;\n        }\n    }\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    //vec2 cPos = vec2(0.2 * iResolution.x,0);\n    // This is neat, sample the circle in a wave, making a worm like effect. The * 200.0?\n    // cPos.y = sampleWave(fragCoord.x, iTime) * 200.0;\n    \n    float iterations = 10.0;\n    for(float i = 0.0; i < iterations; i += 1.0) {\n        col.xyz = paintTentacle(col, fragCoord, vec2(sin(i / iterations * 4.0) * 0.2 * iResolution.x, (i + 0.4) / iterations * iResolution.y));\n    }\n    \n    vec2 bodyCenter = vec2(0.0, 0.46 * iResolution.y);\n    col.xyz = sampleCircle(bodyCenter, iResolution.y / 2.0, fragCoord) > 0.1 ? vec3(tan(iTime), sin(iTime), 0.5) : col.xyz;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}