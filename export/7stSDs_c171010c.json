{"ver":"0.1","info":{"id":"7stSDs","date":"1634203894","viewed":119,"name":"Mandelbrot Set fast","username":"QaspR","description":"This shader renders the Mandelbrot set in the viewport.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float aspectRatio = iResolution.x / iResolution.y;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy - 0.5) * 2.0;\n\n    uv.x = uv.x * aspectRatio;\n    \n    float xOff = 0.5;\n    float yOff = 0.0;\n\n    int maxIterations = 1000;\n    \n    float a = 0.0;\n    float b = 0.0;\n    \n    float ca = uv.x - xOff;\n    float cb = uv.y - yOff;\n    \n    float color = 1.0;\n    for (int i = 0; i < maxIterations; i++)\n    {\n        float anew = a * a - b * b + ca;\n        float bnew = 2.0 * a * b + cb;\n        \n        a = anew;\n        b = bnew;\n        \n        if (a * a + b * b > 16.0)\n        {\n            color = sqrt(float(i) / float(maxIterations));\n            break;\n        }\n    }\n    \n    fragColor = vec4(vec3((color == 1.0) ? 0.0 : color), 1.0);\n}","name":"Image","description":"","type":"image"}]}