{"ver":"0.1","info":{"id":"mlsyRs","date":"1691071927","viewed":52,"name":"Julia Set Loop","username":"solarflare","description":"Looping through different Julia sets relative to time. Click on the screen to shift the origin of the set.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nvec3 getColor(float n, vec3 c1, vec3 c2, vec3 c3){\n    return smoothstep(.5, 0., n)*c1 + smoothstep(.5, 0., abs(n-.5))*c2 + smoothstep(.5, 1.,1.-n)*c3;\n}\n\nfloat isInSet(vec2 p, vec2 shift){\n    float num_steps = 20.;\n    float time =mod(iTime/3., 2.*PI);\n    vec2 c = vec2(cos(time), sin(time)) + shift;\n    for(float i = 0.; i < num_steps; i++){\n        p = vec2(p.x*p.x - p.y*p.y + c.x, 2.*p.x*p.y + c.y);\n        if(p.x > 4.){\n            return smoothstep(0., num_steps, i);\n        }\n    }\n    return 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 shift = vec2(0., 0.);\n    if(iMouse.z > 0.){\n        shift = iMouse.xy/iMouse.x - vec2(.5, .5);\n    }\n    fragColor = vec4(getColor(isInSet(2.*(uv-vec2(.875, .5)), shift), \n                vec3(0., 0., 0.), vec3(1., .48, .02), vec3(.04, .075, .902)),1.0);\n}","name":"Image","description":"","type":"image"}]}