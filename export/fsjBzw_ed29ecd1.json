{"ver":"0.1","info":{"id":"fsjBzw","date":"1649828282","viewed":56,"name":" shiny scales","username":"dizndaz","description":"inspired by https://www.shadertoy.com/view/4dc3R2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","scales"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand21(vec2 uv){\n    return fract(sin(dot(uv,vec2(33.991,123.334)))* 1234567.);\n}\n\n// Source: https://iquilezles.org/articles/distfunctions2d/\n// simple egg sdf\nfloat scale(vec2 p, float ra, float rb )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x);\n    float r = ra - rb;\n    float f= ((p.y>0.0)       ? length(vec2(p.x,  p.y    )) - r :\n            (k*(p.x+r)<p.y) ? length(vec2(p.x,  p.y-k*r)) :\n                              length(vec2(p.x+r,p.y    )) - 2.0*r) - rb;\n    return 1. - step(.0,f);\n}\n\nfloat shadow(vec2 p, float ra, float rb ){\n    const float k = sqrt(3.0);\n    p.x = abs(p.x);\n    float r = ra - rb;\n    float f= ((p.y>0.0)       ? length(vec2(p.x,  p.y    )) - r :\n            (k*(p.x+r)<p.y) ? length(vec2(p.x,  p.y-k*r)) :\n                              length(vec2(p.x+r,p.y    )) - 2.0*r) - rb;\n     \n    if(f > .00){\n        f = smoothstep(-.3, .3, f);\n        \n    }else{\n        f = 0.;\n    }\n                      \n    return 1. - f;\n}\n\nvec3 combineScale(vec3 col, vec2 uv, vec2 id, float size,float narrow){\n    col *= 1. - shadow(uv,size,narrow);\n    float s = min(scale(uv , size, narrow),1.);\n    vec3 colS = vec3(s) * (cos(vec3(1., .82, 0.)* rand21(id * 100.) * (iTime + 1600.) )+1.)/2.;\n    col += colS;\n    return col;\n}\nvec3 scales(vec2 uv, vec2 id, float size,float narrow){\n    vec3 col = vec3(0.);\n    \n    col = combineScale(col, uv + vec2(.5, 1.0), id - vec2(.5,1.), size, narrow);\n    col = combineScale(col, uv + vec2(-.5, 1.0), id - vec2(-.5, 1.), size, narrow);\n    \n    col = combineScale(col, uv + vec2(1., 0.5), id - vec2(-0, -.5), size, narrow);\n    col = combineScale(col, uv + vec2(0., 0.5), id - vec2(0,.5), size, narrow);\n    col = combineScale(col, uv + vec2(-1., .5), id - vec2(-1., .5), size, narrow);\n    \n    col = combineScale(col, uv + vec2(.5, 0.0), id - vec2(.5,0.), size, narrow);\n    col = combineScale(col, uv + vec2(-.5, 0.0), id - vec2(-.5, -0.), size, narrow);\n    \n    \n    \n    col = combineScale(col, uv + vec2(1., -0.5), id - vec2(-0, -.5), size, narrow);\n    col = combineScale(col, uv + vec2(0., -0.5), id - vec2(-0, -.5), size, narrow);\n    col = combineScale(col, uv + vec2(-1., -.5), id - vec2(-1., -.5), size, narrow);\n    \n    \n    \n    col = combineScale(col, uv + vec2(.5, -1.), id - vec2(.5,-1.), size, narrow);\n    col = combineScale(col, uv + vec2(-.5, -1.), id - vec2(-.5,-1.), size, narrow);\n    \n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord) / iResolution.y ;\n    uv*=5.;\n    uv.x += .5 * cos(iTime * 2. + uv.y * .5);\n\n    vec2 id = floor(uv);\n    uv = fract(uv);\n    uv.x-=.5;\n    uv.y -= 1.;\n    vec3 col = vec3(0.);\n    \n    col = scales(uv, id, .5, -.2);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}