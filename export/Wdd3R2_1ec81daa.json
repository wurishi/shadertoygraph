{"ver":"0.1","info":{"id":"Wdd3R2","date":"1571130940","viewed":133,"name":"Razer RGB Cooler","username":"nurof3n","description":"guys loek at dis coler from my pc master race","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["rgb","razer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n\nvec3 hsv2rgb( vec3 c )\n{    \n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\t//smoothed\n    \n\tvec3 color = mix( vec3(1.0), rgb, c.y);\n    color = color * (1. - smoothstep(1., 1.2, c.y));\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= aspect;\n  \tfloat xmid = aspect/2.;\n    \n    vec2 toCenter;\n    toCenter.x = uv.x - xmid;\n    toCenter.y = uv.y - .5;\n    float angle = atan(toCenter.y,toCenter.x) + 2.*iTime;// + 1.*iTime;\n    float radius = length(toCenter) * 2.;\n    \n    float f;\n    //f = abs(cos(angle * 2.5)) * .5 + .4;\n    //f = abs(cos(angle * 6.) * sin(angle * 3.)) * .7 + .3;\n    f = smoothstep(.0, .5, cos(angle * 5.)) * 0.1 + 0.6;\n    \n    vec3 color = hsv2rgb(vec3((angle - 1.*iTime)/TWO_PI, radius, 1.0)) * (1. - smoothstep(f, f+.03, radius))\n        * smoothstep(f/1.1, f/1.1+.03, radius);\n    color += hsv2rgb(vec3((angle - 1.*iTime)/TWO_PI, radius * 2., 1.0)) * (1. - smoothstep(.1, .12, length(toCenter)));\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}