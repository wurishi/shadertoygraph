{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n//credits 2 polygonize\n//http://tinyurl.com/b9go98e\n\nfloat time;\nfloat delta    = 0.20015;\nfloat PI       = 3.1415;\nint colorIndex = 0;\nint material   = 0;\n\nconst vec3 lightPosition  = vec3(3.5,3.5,-1.0);\nconst vec3 lightDirection = vec3(-0.5,0.5,-1.0);\n\nfloat displace(vec3 p) {\nreturn ((cos(4.*p.x)*sin(4.*p.y)*sin(4.*p.z))*cos(30.1))*sin(time);\n}\nvec3 rotateX(vec3 pos, float alpha) {\nmat4 trans= mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(alpha), -sin(alpha), 0.0, 0.0, sin(alpha), cos(alpha), 0.0, 0.0, 0.0, 0.0, 1.0);\nreturn vec3(trans * vec4(pos, 1.0));\n}\n\n\nvec3 rotateY(vec3 pos, float alpha) {\nmat4 trans2= mat4(cos(alpha), 0.0, sin(alpha), 0.0, 0.0, 1.0, 0.0, 0.0,-sin(alpha), 0.0, cos(alpha), 0.0, 0.0, 0.0, 0.0, 1.0);\nreturn vec3(trans2 * vec4(pos, 1.0));\n}\n\nfloat rBox( vec3 p, vec3 b, float r ){\n\treturn length(max(abs(p)-b,0.0))-r;\n}\n\n\nfloat minBox( float d1, float d2 ){\nreturn min(d1,d2);\n}\n\n\n\t\nfloat f(vec3 position) {\n\t\n\tfloat d, a, b, c, m, n, q, dist;\n\td = displace(position);\n\tb = rBox(rotateY(rotateX(position+vec3(0.5,0.0,-6.0),time*3.0),time*3.0), vec3(0.7,0.7,0.7), 0.4);\n\tc = rBox(position+vec3(0,0,-16), vec3(25.6,15.6,0.6), 0.2 );\n\tb = b + d;\n\tif (c < b) material = 1;\n\telse material = 0;\n\treturn minBox(c,b);\n\t\n}\n\n\nvec3 ray(vec3 start, vec3 direction, float t) {\n\t\n\treturn start + t * direction;\n\t\n}\n\n\n\nvec3 gradient(vec3 position) {\n\n\treturn vec3(f(position + vec3(delta, 0.0, 0.0)) - f(position - vec3(delta, 0.0, 0.0)),f(position + vec3(0.0,delta, 0.0)) - f(position - vec3(0.0, delta, 0.0)),f(position + vec3(0.0, 0.0, delta)) - f(position - vec3(0.0, 0.0, delta)));\n\n}\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv  = fragCoord.xy / iResolution.xy;\n\tvec3 cam = vec3( -0.20, -.5, -3.4 );\n\tfloat aspect = iResolution.x/iResolution.y;\n\tvec3 near = vec3((fragCoord.x - 0.5 * iResolution.x) / iResolution.x * 2.0  * aspect,(fragCoord.y - 0.5 * iResolution.y) / iResolution.y * 2.0,0.0);\n\n\ttime = iTime;\n\t\n\tvec3 vd = normalize(near - cam);\n\tvd.x -= .1;\n\tvd.z -= .0001;\n\tvd.y -= .08;\n\t\n\tfloat t = 0.0;\n\tfloat dst;\n\tvec3 pos;\n\tvec4 color = vec4(vec3(1.0),1.0);\n\tvec3 normal;\n\tvec3 up = normalize(vec3(-0.0, 1.0,0.0));\n\t\n\n\tfor(int i=0; i < 64; i++) {\n\t\n\t\tpos = ray(cam,\tvd, t);\n\t\tdst = f(pos);\n\t\n\t\tif( abs(dst) < 0.008 ) {\n\t\t\t\n\t\t\tnormal = normalize(gradient(pos));\n\t\t\t\n\t\t\tvec4 color1 = vec4(0.15, 0.19, 0.5,1.0);\n\t\t\tvec4 color2 = vec4(.10, 0.1, 0.11,1.0);\n\t\t\t\n\t\t\tvec4 color3 = mix(color2, color1, (1.0+dot(up, normal))/2.0);\n\t\t\tcolor = color3 * max(dot(normal, normalize(lightDirection)),0.0) +vec4(0.1,0.1,0.1,1.0);\n\t\t\t\n\t\t\tvec3 E = normalize(cam - pos);\n\t\t\tvec3 R = reflect(-normalize(lightDirection), normal);\n\t\t\tfloat specular = pow( max(dot(R, E), 0.0), 8.0);\n\t\t\tcolor +=vec4(1.6, 1.4,0.4,0.0)*specular;\n\t\t\tif(material==1) color = vec4(0.0,0.0,0.0,1.0);\n\t\t\tcolor += vec4(vec3(0.5, 1.0,0.5)*pow(float(i)/128.0*2.1, 2.0) *1.0,1.0);\n\t\t\tbreak;\n\t\t\t\n\t\t\t\n\t\t}\n\t\n\t\tt = t + dst * 1.0;\n\t\n\t}\t\n\t\n\tfragColor = color;\n\t\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsl3zn","date":"1361882877","viewed":726,"name":"BlobBox","username":"_pwd_","description":"simple displacement ","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","displacement"],"hasliked":0,"parentid":"","parentname":""}}