{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// much simplified version of the fire shader by @301z\n\nconst float SCALE = 16.0;\n// speed of perturbations\nconst float PSPEED1 = 1.5;\nconst float PSPEED2 = 1.0;\n// speed of flame cores\nconst vec2 CORESPEED = vec2(0.2,0.4);\nconst vec3 color1 = vec3(0.5, 0.0, 0.0);\nconst vec3 color2 = vec3(1.0, 0.5, 0.0);\n\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 n) {\n\tconst vec2 d = vec2(0.0, 1.0);\n\tvec2 b = floor(n);\n\tvec2 f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = fragCoord.xy * SCALE / iResolution.xx;\n\tvec2 r = vec2(noise(p + iTime*PSPEED1 - p.x - p.y), noise(p - iTime*PSPEED2));\n\tvec3 c = mix(color1, color2, noise(p + r - CORESPEED*iTime));\n\tfragColor = vec4(c, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldXGRl","date":"1376561847","viewed":533,"name":"Simple fire","username":"borisvanschooten","description":"Simpler and faster fire shader based on @301z's fire shader","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","flame","fast","random"],"hasliked":0,"parentid":"","parentname":""}}