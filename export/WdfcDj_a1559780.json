{"ver":"0.1","info":{"id":"WdfcDj","date":"1585550359","viewed":105,"name":"Platform","username":"antoinefortin","description":"ssss","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["ssdffdd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 pos, float angle)\n{\n\tfloat c = cos(angle);\n    float s = sin(angle);\n    \n    return mat2(c,s,-s,c) * pos;\n\n}\n\nfloat plane(vec3 pos)\n{\t\n    \n    vec3 q = pos;\n    \n\treturn q.y;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdCross( in vec3 p)\n{\n  float inf = 12000.;\n  float da = sdBox(p.xyz,vec3(inf,1.,1.));\n  float db = sdBox(p.yzx,vec3(1.,inf,1.));\n  float dc = sdBox(p.zxy,vec3(4.75,1.,inf));\n  return min(da,min(db,dc));\n}\n\n\nfloat sphere(vec3  pos, float radius)\n{\t\n    pos.y -= 4.0;\n    return length(pos) - radius;\n}\n\nfloat map(vec3 pos)\n{\n    float planeDist = plane(pos);   \n\n\t//float d2 = sdBox(pos - 2., vec3(2.0));\n \tpos.x = abs(pos.x) * .85;\n    pos.y = abs(pos.y * 0.75);\n    pos.z = abs(pos.z);\n    \n   \tpos.xy = rotate(pos.xy,  iTime * .05);\n    pos.xz = rotate(pos.xz, iTime * .05);\n    pos.yz = rotate(pos.yz,  iTime * 0.05);\n    \n    \n    float d2 = sdCross(pos * sin(iTime \n                                ));\n    float d = sphere(pos,5.4);\n   \tfloat c = sdCross(pos*1.0)/1.0;\n\t   \t\n\tpos.xy = rotate(pos.xy, iTime * .05);\n    pos.xz = rotate(pos.xz, iTime * .005);\n    pos.yz = rotate(pos.yz, iTime * .5);\n    \n    //d = max( d, -c );\n\tfloat s = -.5;\n\tfor( int m=0; m<3; m++ )\n   \t{\n      vec3 a = mod( pos*s, 2.0 )-1.0;\n      s *=10.5;\n      vec3 r = 5.0 - 5.0*abs(a );\n\n      float c = sdCross(r)/s;\n      d = max(d, -c);\n   \t}\n    \n    \n    \n    return d;\n    \n}\n\nfloat castRay(vec3 ro, vec3 rd)\n{\n    float t = 0.0;\n    for(int i = 0; i < 100; i++)\n    {\n    \tvec3 pos = ro + t * rd;\n        \n        float h = map(pos);\n        if(h < 0.001)\n        {\n        \tbreak;\n        }\n        t += h;\n        \n        if(t > 100.0) break;\n        \n    }\n    \n    if(t > 100.0) t = -1.0;\n    \n    return t;\n}\n\n\n\nvec3 computeNormal(vec3 pos)\n{\n    vec2 eps = vec2(0.1, 0.0);\n    return normalize(vec3(\n        map(pos + eps.xyy) - map(pos - eps.xyy),\n        map(pos + eps.yxy) - map(pos - eps.yxy),\n        map(pos + eps.yyx) - map(pos - eps.yyx)\n    ));\n}\n\nvec3 material(vec3 pos)\n{\n    return vec3(smoothstep(0.4, 0.41, fract(pos.x + sin(pos.z * 0.4 + iTime))));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 mouse = iMouse.xy / iResolution.xy;\n    \n    vec2 uv = (fragCoord -.5 * iResolution.xy) / iResolution.y;\n   \t//uv.x = abs(uv.x * .5); \n    float angle = iTime;\n    \n    vec3 ro = vec3(0.75, 0.0, -12.5);\n    \n    // Rayon que l'on envoie dans l'espace pour chacuns des pixels\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1));    \n    \n    \n\n     vec3 col = vec3(1.4, 0.75, 1.0) - 0.7 * rd.y;\n               \n\tfloat t = castRay(ro, rd);\n\nuv.x = abs(uv.x);\n        if(t > 0.)\n        {\n\n            vec3 pos = ro + t * rd;\n            vec3 nor = computeNormal(pos);\n            vec3 sunPosition = vec3(5., 1., 1.);\n            vec3 sundir = normalize(sunPosition);\n            vec3 mate = vec3(.18);\n\n\n           \tfloat sundif =   clamp(dot(nor, sundir), -1.0, 1.0);\n            float sun_sha = smoothstep(castRay(pos + nor * 0.001, sundir), 0.0, 1.0);\n            float sky_dif = clamp(0.5 + 0.5 * dot(nor,vec3(3.0,1.0,0.0)), 0.0, 1.0);\n            float bou_dif = clamp(0.5 + 0.5 *dot(nor,vec3(0.0,-1.0,0.0)), 0.0, 1.0);\n\n            col = mate * vec3(t * 0.5, t * 0.25, 1.0) * sundif * sun_sha;\n            col += mate * vec3(0.75, 0.8, 0.9) * sky_dif;\n            col += mate * vec3(0.75, 0.3, 0.2) * bou_dif;\n        }\n\n    \n    \n    // Output to screen\n    fragColor = vec4(sqrt(col), 1.0);\n}","name":"Image","description":"","type":"image"}]}