{"ver":"0.1","info":{"id":"mdGBzK","date":"1698404347","viewed":30,"name":"Circle UV","username":"bitegw","description":"X represents current angle (in 0-1 range), Y represents distance from center. \nUseful for procedural generation of eye textures.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","function"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 circleUV(vec2 uv) {\n    vec2 uvCenter = uv - vec2(0.5);\n    float circleX = (degrees(atan(uvCenter.y, uvCenter.x)) + 180.0) / 360.0;\n    float circleY = 1.0 - distance(vec3(abs(uvCenter), 0.0), vec3(0,0,0.5));\n    return vec2(circleX, circleY);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = vec4(circleUV(uv), 0, 1);\n}","name":"Image","description":"","type":"image"}]}