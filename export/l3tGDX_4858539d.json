{"ver":"0.1","info":{"id":"l3tGDX","date":"1717091488","viewed":101,"name":"Disco Asteroid","username":"vovach777","description":"Dancing in the open space =)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise","bw","dance","asteroid","discoball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ver. 1.0\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\n/* discontinuous pseudorandom uniformly distributed in [-0.5, +0.5]^3 */\nvec3 random3(vec3 c) {\n\tfloat j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n\tvec3 r;\n\tr.z = fract(512.0*j);\n\tj *= .125;\n\tr.x = fract(512.0*j);\n\tj *= .125;\n\tr.y = fract(512.0*j);\n\treturn r-0.5;\n}\n\nconst float F3 =  0.3333333;\nconst float G3 =  0.1666667;\nfloat snoise(vec3 p) {\n\n\tvec3 s = floor(p + dot(p, vec3(F3)));\n\tvec3 x = p - s + dot(s, vec3(G3));\n\n\tvec3 e = step(vec3(0.0), x - x.yzx);\n\tvec3 i1 = e*(1.0 - e.zxy);\n\tvec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\n\tvec3 x1 = x - i1 + G3;\n\tvec3 x2 = x - i2 + 2.0*G3;\n\tvec3 x3 = x - 1.0 + 3.0*G3;\n\n\tvec4 w, d;\n\n\tw.x = dot(x, x);\n\tw.y = dot(x1, x1);\n\tw.z = dot(x2, x2);\n\tw.w = dot(x3, x3);\n\n\tw = max(0.6 - w, 0.0);\n\n\td.x = dot(random3(s), x);\n\td.y = dot(random3(s + i1), x1);\n\td.z = dot(random3(s + i2), x2);\n\td.w = dot(random3(s + 1.0), x3);\n\n\tw *= w;\n\tw *= w;\n\td *= w;\n\n\treturn dot(d, vec4(52.0));\n}\n\n\n\nconst float PI = acos(-1.0);\n\nfloat map(float v, float v_min, float v_max, float out1, float out2)\n{\n    if ( v_max - v_min == 0. )\n        return out2;\n        \n     return (clamp(v,v_min,v_max) - v_min) / (v_max - v_min) * (out2-out1)+out1;\n}\n\nfloat fmod(float t,float a){\n  return fract(t/a)*a;\n}\n\n\n\nvec4 disco_asteroid(vec2 uv) {\n\n    \n    float far = 1.0  / length(uv);    \n    float  far_ = map(far, 0., 10. , 0.5, 50.);\n\n    float color = map( pow( abs( snoise(vec3( uv.x*far_,uv.y*far_, iTime )) ), 8.) * 50., 0., 1., 0.,1.);\n    return vec4( color, color, color, 1. );\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - iResolution.xy/2.) / min(iResolution.x, iResolution.y);\n               \n    fragColor = disco_asteroid(uv);\n    \n}\n\n","name":"Image","description":"","type":"image"}]}