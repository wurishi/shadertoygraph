{"ver":"0.1","info":{"id":"NlG3zy","date":"1637858250","viewed":365,"name":"Circle with outline","username":"MineGame159","description":"Simple shader to a circle with an outline. Both are optional.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["circle","outline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Parameters\nconst vec4 fillColor = vec4(0.0, 1.0, 0.0, 1.0);\nconst vec4 outlineColor = vec4(0.9, 0.9, 0.9, 1.0);\n\nconst bool fill = true;\nconst bool outline = true;\n\nconst float outlineSize = 16.0;\n\n#define radius iResolution.y / 2.0\n\n// Main function\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / min(iResolution.x, iResolution.y) * 2.0;\n    \n    float distance = 1.0 - length(uv);\n    float fade = 1.0 / (radius * 0.5);\n    float outlineSize2 = outlineSize * (1.0 / (radius));\n    \n    // Fill\n    if (fill) {\n        float a;\n        if (outline) a = step(outlineSize2, distance);\n        else a = smoothstep(0.0, outline ? fade + outlineSize2 : fade, distance);\n\n        fragColor = fillColor * a;\n    }\n    \n    // Outline\n    if (outline) {\n        float a = smoothstep(0.0, fade, distance);\n        a *= smoothstep(outlineSize2 + fade, outlineSize2, distance);\n    \n        fragColor = mix(fragColor, outlineColor, a);\n    }\n}","name":"Image","description":"","type":"image"}]}