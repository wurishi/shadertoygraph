{"ver":"0.1","info":{"id":"XssBDj","date":"1498157679","viewed":119,"name":"cubed pie in acoshD(acos())","username":"ollj","description":"i have no idea what i am doing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pi","acos","acosh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 acoshD(vec2 p){\n float s=sqrt((p.x*p.x-1.)*(p.y*p.y-1.));\n return p.x*p.y+vec2(-s,s);}//acosh(u)+-acosh(v)=acosh(u*v+-sqrt((u*u-1)*(v*v-1)));\n\n #define camLens 3.\n #define camRoll 0.\n //camera lens and roll for camera projection matrix (is not a quaternion camera)\n #define frame(u) camLens*(u-.5*iResolution.xy)/iResolution.y   \n\nvoid mainImage( out vec4 fragColor, in vec2 U ){\n    vec2 u=frame(U);\n    u=acos(u);\n    u=acoshD(u);\n    u=fract(u*9.);\n\tfragColor = vec4(u,0,1.0);\n}","name":"Image","description":"","type":"image"}]}