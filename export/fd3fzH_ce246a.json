{"ver":"0.1","info":{"id":"fd3fzH","date":"1655989921","viewed":73,"name":"Modulated Sinewave","username":"MisterSirCode","description":"Finally achieved accurately connected modulated sinewaves.\n\nIm sure theres a simpler way to do this, this is just what I came up with.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["texture","mod","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float modSine(vec2 p, float scale, float size) {\n    p = p.yx;\n    p *= scale;\n    float ratio = scale / 2.0;\n    vec2 sinp1 = vec2(mod(p.x + ratio + 1.0, 4.0 * ratio) + 1.0, p.y);\n    vec2 sinp2 = vec2(mod(p.x + ratio + 1.0 - scale, 4.0 * ratio) + 1.0, p.y);\n    float sinOne = clamp(abs((sinp1.x - 2.0 - ratio) - sin(sinp1.y / size)) / ratio, 0.0, 1.0);\n    float sinTwo = clamp(abs((sinp2.x - 2.0 - ratio) - sin(sinp2.y / size)) / ratio, 0.0, 1.0);\n    return min(sinOne, sinTwo);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.x * 2.0;\n    \n    uv.x += iTime / 2.0;\n    \n    fragColor = vec4(vec3(modSine(uv, 20.0, 2.0)), 1.0);\n}","name":"Image","description":"","type":"image"}]}