{"ver":"0.1","info":{"id":"Xfyyzd","date":"1732231413","viewed":77,"name":"fake shadow cone?","username":"jakel101","description":"getting practice in by writing shaders purely from my head of some ideas.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","shadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Apache 2.0 no patents\nfloat sdCircle(vec2 pos, float rad){\n    return (length(pos) - rad);\n}\n\nfloat sdPlane2D(vec2 pos, vec2 norm, float b){\n    // line is orthogonal to the normal vector with offset b\n    // b != length(norm) to allow for lines through the origin of different rotations\n    // distance to that divider, negative for one side, positive for the other\n    vec2 ortho = normalize(norm);\n    return dot(ortho, pos)-b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy)/min(iResolution.x, iResolution.y);\n    vec2 mou = (2.0 * iMouse.xy - iResolution.xy)/min(iResolution.x, iResolution.y);\n    \n    // positions\n    float ground_height = -0.1 - 0.2*sign(uv.x); // not exact\n    float ball_size = 0.1;\n    vec2 ball_pos = (0.8*vec2(sin(iTime), -cos(iTime)));\n    if (sign(iMouse.z) > 0.0){\n        ball_pos = mou;\n    }\n    float ball_dist = sdCircle(uv - ball_pos, ball_size);\n    float floor_dist = sdPlane2D(uv,vec2(0.0, -1.0), -ground_height);\n\n    // shadow via a 2nd circle, based on globals - not ideal\n    float ball_height = max(0.0, ball_pos.y - ground_height);\n    vec2 shadow_pos = ball_pos;\n    shadow_pos.y = min(shadow_pos.y - ball_size, -1.0 * (shadow_pos.y + ball_size - ground_height) + ground_height);\n    float shadow_dist = sdCircle(uv - shadow_pos, ball_size + sqrt(ball_height+1.0)-1.0);\n\n    // object masks\n    float floor_mask = smoothstep(0.0, 0.01, floor_dist+abs(0.03*sin(uv.x*150.0)));\n    float ball_mask = smoothstep(0.0, 0.01, -ball_dist);\n    float shadow_mask = smoothstep(0.0,  0.01 +ball_height, -shadow_dist);\n    \n    // colors/textures\n    vec3 col = vec3(0.05, 0.3, 0.6*(1.5+uv.y)); // \"sky\" / background\n    vec3 floor_col = vec3(0.3, 0.65+0.2*abs(uv.x), 0.2);\n    vec3 ball_col = vec3(0.9, 0.2, 0.3);\n    \n    // color mixing\n    col = mix(col, floor_col, floor_mask);\n    col += -0.5 * shadow_mask * floor_mask; // adds shadow just to the floor here?\n    col = mix(col, ball_col, ball_mask);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}