{"ver":"0.1","info":{"id":"Wdl3z8","date":"1544966991","viewed":367,"name":"track2","username":"nabr","description":"TURN YOUR HEADPHONES UP","likes":15,"published":1,"flags":8,"usePreview":0,"tags":["sound","generative","rhytm","undergroundvibes","neosmixtape","liveset","followthewhiterabbit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// nabr\n// https://www.shadertoy.com/view/Wdl3z8\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n// based on gridTexture by iq https://www.shadertoy.com/view/MlGcDz\n// thx to IQ! \nfloat gridTexture( in vec3 p )\n{\n    const float N = 20.0; // grid ratio\n\n    // filter kernel\n    //vec3 w = max(abs(dFdx(p)), abs(dFdy(p))) + 0.001;\n    vec3 w = fwidth(p);\n\n    // analytic (box) filtering\n    vec3 a = p + 0.5 * w;\n    vec3 b = p - 0.5 * w;\n    vec3 i = (floor(a) + min(fract(a) * N, 1.0) - floor(b) - min(fract(b) * N, 1.0)) / (N * w);\n    \n    // reduce brightness\n    if (iTime > 50.) \n        return .02 * (1.0 - i.x) * (1.0 - i.y);\n\n    return sqrt(dot(i, cos(i) * .2));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    vec2 st = (iResolution.xy - fragCoord.xy * 2.0) / min(iResolution.x, iResolution.y);\n    if (abs(st.y) > .65) { fragColor.rgb = vec3(.1); return; };\n\n    // right to left flow animation    \n    if (iTime < 3.56 == iTime > 8.)\n    {\n        st.y = abs(st.y);\n        st.x -= (iTime * .702);\n        st.y = max(.052, st.y);\n    }\n\n    \n\tfloat tmp = .78-(.02*sqrt(iTime)*log(iTime*2.)/log(iTime*2.));\n    if (iTime > 37.||(iTime < 12. == iTime > 18. )) tmp=1.; // scale/zoom anim\n    \n    vec3 rd = vec3(sin(abs(st.x*tmp)), st.y * .6, -2.);\n\n\n\t// tunnel effect\n    if (iTime > 8. && int(iTime) % 4 == 0)\n        rd.y = abs(st.y);\n\n    // ---------- raymarch\n    vec3 s = vec3(0, 0, 5.);\n    vec3 p = vec3(0);\n    float t = 0.0, d = 0.0;\n    const float steps = 1. / 32.;\n\n    for (float i= 0.; (i < 1.0);i += steps)\n    {\n        if (t > 8. && d > .001) break;\n        float tmp = 10.;\n        if(int(iTime*.5)%3!=0)tmp = 1.;\n        d = min(abs(tmp * .01 + sin(p.z * .5) * (cos(p.y * p.y * .6+(cos(iTime)*.25+.25)) * cos(p.x * .5))), (length(p) - 2.));\n\t\t\n        // noisy\n        if (iTime > 37.) {\n            d = min(abs(10. * .01 + sin(p.z * .5) * (cos(p.y * p.y * .6) * cos(p.x * .5))), (length(p) - 2.));\n\t\t\n            d *= .6 * fract(mod(iTime * .7, 2.) / sin(iTime * .2));\n        }\n        else {\n            d *= .6 * ceil(fract(mod(iTime * .2, 8.)));\n        }\n\n        // raymarch\n        t += max(d, .209)* 0.075 ;//smooth out\n        t += d;\n        p += rd * d;\n        \n        \n        // mirror reflection effect\n        p.z *= 1.206844;\n        if (t > 2.979) {\n            \n            rd.z /= rd.z;\n            vec3 f = s;\n            \n            f += abs(-(sin(iTime) - 1.95) * tan(p * .2 * t) * .001 - .001) - s;\n            \n            if (int(iTime) % 8 == 0) \n            {\n                f = s * 22.;\n                f += abs(-(sin(iTime) - 1.95) * tan(p * .2 * t) * .001 - .001) - s;\n            }\n\n            \n            rd = reflect(-rd + fract(iTime), normalize(f * f));\n\t\t\t\n            \n            if (i > sin(iTime * 8.) && iTime > 12. == iTime < 24.) {\n                \n                if (int(iTime) % 4 == 0)\n                    f += abs(-(sin(iTime) - .95) * tan(p * 2.2 * t) * .1 - .1) - s;\n\n                \n                rd = reflect(-rd * .25 + fract(iTime), normalize(f));\n            };\n        };\n    };\n\n    // --------- shade     \n    vec3 c = pow((vec3(.04) + (d - .07) * 2.5 + t * .02 + t * vec3(.12, .2, .24) * (0.85 * -rd.y * .3)), vec3(5. / 2.));\n    fragColor.rgb = pow(c + gridTexture((p * 2.)) * normalize(c), vec3(1. / 2.2));\n    fragColor.a = 1.0;\n\n\n}//nabr","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// nabr\n// https://www.shadertoy.com/view/Wdl3z8\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n#define tau (8. * atan(1.))\n#define gf 1380.\n#define bo 2. \n#define Brot(p, a) p = (sin(bo * a) + cos(gf * a)) * p + sin(gf * a) * vec2(p.y, -p.x)\n#define final(t, p, snd) snd += sin(6.2831*p*t)*exp(-mod(t, 2.));\n#define msk(t, p, snd) snd += sin(tau * p * t) * exp(-mod(t, 2.) )\n\n// magick\nfloat f1 (in float t)\n{\n    \n    \n    float t1 = t;\n    t = mod(t, 2.);\n    float s = 0.;\n    float p = 140.0;\n    float f = 300.;\n    \n    float a = 2.;\n    \n    float tmp2 = .4;\n    if( t1 < 8. == t1 > 12.)tmp2 = 2.;\n    \n    float tmp3 = 12.;\n    \n    if(sin(t1)<.5)tmp3 += exp(1.-sin(t));\n    else tmp3 = 12.;\n    s = msk(t * tmp2, f/tmp3, s);\n    \n\tif(t1>12.) \n        msk(t*13.,f*2., s);\n    \n    if(t1<37.)\n    {\n       \n        return final(t ,s+.25*sin(t1) ,s);\n    }\n    float m = float[](100., 280., 400.)[ int(mod(t*2.,6.)) ];\n    \n    \n \tfloat ff = f/12.;\n    if( t1 < 46. == t1 > 50.)\n    {\n        s=0.;\n        msk(0.,s,s);\n   \t\tmsk(t*2., f, s);\n    \tff = f/2.;\n    \treturn final(t*6.1, s, s ) ;\n    }\n    else\n    {   \n        s = msk(t, m, s);\n        msk(t*12., f, s); \n        msk(t, ff, s);\n      \treturn final(t*6.1, s, s ) ; \n    }  \n\n    \n}\n\n#define random(st) fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123)\nfloat sub(float time)\n{\n    float hard = exp( -5.2 * time);\n    float eoe = sin(6.2831 * 140. * time * hard );\n\tfloat s = (random(vec2(sin(time * 6.))) * (.1) - eoe) * exp(-6.* time);\n    \n    //return eoe; // hardkick\n    //return (s * 8. -eoe) * exp(-4.) ; // hihat\n    \n    // final\n    return mix(s * .2, eoe, .95);\n}\n\nvec2 mainSound( in int samp, float x )\n{\n    \n    float time = x;\n    \n    \n    // ---------------- kick\n    \n\tfloat gt = mod( x , .5);\n    \n    float tmp = 40.;\n    //https://www.desmos.com/calculator/xaamakux3x\n    if(int(sqrt(x)*log(x*2.)/log(x*2.))%2!=0) tmp=140.;\n    x =  gt * tau * tmp;\n  \t\n    float d =  dot(\n        sin( x * 2. )\n        +(sin( x * 2.8 ) * .5 )\n        +(sin( x * 6. )  * .15 ), .95 ) ;\n    \n    d = d * 0.6 ;\n    float l= d  - .1 * log( 1. + d );\n    float r= d  - .12 * log( 1. + d );\n    \n    l +=  sub( gt * 1.125 ) * 0.75;\n    r +=  sub( gt * 1.121 ) * 0.8;\n    \n    float dr =sub( gt ); \n    \n    // ---------------- master\n   \n  \n    vec3 p = vec3( \n        dr+  \n        f1(time)*.75, \n        \n        f1(time)*.95,\n        dr+\n        f1(time)*.5 ); \n       \n    \n   // singel kick\n   if(time < 8.) \n       return vec2 ( dr ); // intro\n   else if(\n      ( time < 20. == time > 24. )||\n       ( time < 28. == time > 30. )) \n       return vec2 ( dr ); // mid seq\n    \n    if(time>37.)\n    {\t\n        // panorama\n        float tmp1 = 0.15;\n  \t\t\n        //if(int(time)%4==0) tmp1=.18;\n    \t\n        Brot(p.xy, tmp1 );\n    \t\n        Brot(p.zy, 1.517 );\n        Brot(p.zy, 0. );\n        Brot(p.zy, 1.517 );\n    \tp *=.42; // volume\n        return dr*.75+max(p.yx , min( p.zx, p.yx)); // end\n       \n    }\n\telse\n    {\n    \t//Brot(p.zx, -3. );\n   \t\tBrot(p.xy,  1.52 );\n    \tBrot(p.zx, 3.127+(cos(x)*.62+.25) );\n    \tp *=.42; // volume\n    \treturn dr*.5+( max(p.yx , min( p.zx, p.yx))); // main\n\t}\n    \n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"// common tab\n\n","name":"Sound","description":"","type":"sound"}]}