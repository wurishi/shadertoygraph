{"ver":"0.1","info":{"id":"ftcGDl","date":"1636912095","viewed":158,"name":"Fall & Light","username":"rmmcal","description":"The Fall","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["fall"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////////\n//             ...  Fall & Light ...                     ////\n/////////////////////////////////////////////////////////////\n// Brasil/Amazonas/Manaus\n// Created by Rodrigo Cal (twitter: @rmmcal)\n// - Published: 2021/11\n// https://www.shadertoy.com/view/ftcGDl\n//\n// Fork: https://www.shadertoy.com/view/fltGDH\n/////////////////////////////////////////////////////////////\n\nconst float pi = 3.1415926;\nconst float pi2 = 2.*pi;\nconst float rad = pi/180.;\nfloat rnd ;\n\nmat2 rotate(float x){\n    float c = cos(x);\n    float s = sin(x);\n    return mat2(c,s,-s,c);\n}\n  \nvec4 v(float v){\n    return vec4(v, 0.,0.,0.);\n}\nvec4 v(float v, float v2){\n    return vec4(v, v2, 0.,0.);\n}\n\nvec4 vmin(vec4 v1, vec4 v2){\n    return v1.x < v2.x ? v1 : v2;\n}\n\nvec4 vmin(vec4 v1, float v2){\n    return v1.x < v2 ? v1 : v(v2);\n}\n\nvec4 vmin(vec4 v1, float v2, float v3){\n    return v1.x < v2 ? v1 : v(v2,v3);\n}\n\n/////////////\n// https://iquilezles.org/articles/distfunctions\nfloat sdVerticalCapsule( vec3 p, float h, float r )\n{\n  p.y -= clamp( p.y, 0.0, h );\n  return length( p ) - r;\n}\n/////////////\n\n\nvec4 dist(vec3 p)\n{\n    vec4 d = v(1.0);\n    vec2 ps = ((p.xy+vec2(3., 2.)))/1.0;\n    float f = .1;\n    d = min(d, .075);\n\n    vec3 c1 = vec3(.1);\n    vec3 c2 = vec3(.2)*2.0;\n    vec3 q = mod(p+0.5*c1,c1)-0.5*c1; \n    q.z=p.z;\n    vec2 id = floor((p+0.5*c1)/c1).xy;\n\n    float  e2 = .001+abs(fract(dot((id+cos(id.x+id.y*10.0*1.0+cos(id.x*123.0)))*179.531, vec2(11.1327,1.1323))));\n\n    id = floor((p+0.5*c1)/c1).xy+vec2(-1,0);\n    \n    float at = +(-2.+2.0*fract(-e2*4.+(e2+.4)*iTime*0.04));\n    vec4 da = d;\n    d = vmin(d,  -c1.x/15.0+length(q-vec3(0.00, 0.0,1.+at ))*1.0, 1.0);\n\n    d =   vmin(d,  sdVerticalCapsule(  (q-vec3(0,0, e2*225.  - 25.0*abs(fract((at)))  )).xzy,  .5, .001 ), 2.0) ;\n  \n    float wave = cos(cos(p.x*11.01) + cos((p.y+.5)*11.01)+ cos((p.x*.5+.5)*11.01+max(0.,cos(at))) + iTime)*.03;\n    d = vmin(d, 1.- p.z + wave, 0.0);\n    \n    float swave = 1.90- p.z + wave;\n    d = vmin(d, length(q-vec3(0.0,0.0,swave))-c1.x*e2*e2*e2/4.0 , 0.0);\n   \n    return d;\n}\n\nvec3 getNormal(vec3 p)\n{\n    vec2 d = vec2(0., 0.01);\n    float x = dist(p-d.yxx).x;\n    float y = dist(p-d.xyx).x;\n    float z = dist(p-d.xxy).x;\n    return normalize(vec3(x,y,z)-dist(p).x);\n}\n\nvec3 hsv2rgb(float v){\n\treturn abs(fract(v + vec3(3, 2, 1) / 3.) - .5) * 6. - 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pc = (uv-.75)*vec2(1, iResolution.y/iResolution.x);\n\n    vec3 p = vec3(0.);\n    p += vec3(0.,-5.0,-5.);\n    float sr = 5.;\n\n    float a = iTime*.05 * (max(-1.0,cos(iTime*.25))* .005+.995 );\n\n    p = vec3(sr*cos(a)-.85,sr*sin(a), 0.2);\n    vec3 d = normalize(vec3(pc,1.0));\n    d.yz *= rotate(1.341592);\n    d.xy *= rotate(-a+4.63);\n\n    vec3 c=vec3(0.0);\n    float t = 0.;\n    float pd = 1e19;\n    vec4 hit;\n    vec4 hitn;\n    vec3 cadd;\n    vec3 cadd2;\n    float caddm = 1.; \n    for (int i = 0 ; i < 200; i++)\n    {\n        hit = dist(p);           // current \n        hitn = dist(p+ d*hit.x); // next \n        float h=hit.x; \n        float h2=hitn.x;\n        h = (h+h2)/2.0;\n\n        //float y = h*h/(2.0*pd);\n        //float k = sqrt(h*h-y*y);\n        //pd = h;\n        //h = min(h, h/max(0.0, t-y));\n\n        if (h < 0.01)\n         break;\n        t+=h;\n        p += d*h;\n        cadd += vec3(1,.5,.25)*h;\n        \n        caddm = min(caddm, h);\n        cadd2 += vec3(1,.5,.25)/caddm;;\n    }\n    vec3 pn = getNormal(p);\n    c += pn.z*.0;\n \n  \n   \n    if (hit.y==0.0) {\n    }\n    if (hit.y==2.0) {\n        c = cadd2*.5 ;\n    } if (hit.y==1.0) {\n        c = (pn.z*.5+.5)*(hsv2rgb(p.x+p.y+p.z)*.5+.75  ) ; \n    }\n    else\n        c += vec3(abs(pn.z)) *(cadd2)/(t*190.); \n    \n     \n    c = mix(c, c * (1.-(log(cadd))*1.0), max(0., sin(-iTime*.25)));\n    \n    \n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}