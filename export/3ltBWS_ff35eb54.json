{"ver":"0.1","info":{"id":"3ltBWS","date":"1615356999","viewed":110,"name":"Movementssssss","username":"elindie","description":"Waves in one direction rings on rings in the other.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ringswaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nfloat sampleWave(in float x, in float time)\n{\n    float t = sin(x / 50.0 + time) + 1.0;\n    return t;\n}\n\nvec3 paintWave (in vec3 fragColor, in vec2 fragCoord, in float scale, in float height, in float frequency, in vec3 col)\n{\n    float w = sampleWave(fragCoord.x / frequency, iTime) * scale + height;\n    return fragCoord.y < w ? col : fragColor.xyz;\n}\n\nvec3 paintCircle(in vec2 center, in float radius, in vec2 samplePos, in vec3 col, in vec3 bCol) \n{\n    vec2 sphereLocation = vec2(0.34 * iResolution.xy);\n    sphereLocation.y = sampleWave(sphereLocation.x, iTime) * 50.0;\n    \n    float distance = length(samplePos.xy - center.xy);\n    \n    return distance < radius && distance > radius * 0.8 ? bCol : col;\n}\n\nvec3 paintRings (in vec3 col, in vec2 pos, in vec2 fragCoord, in vec3 bCol, in float baseSize)\n{\n  col = paintCircle(pos, baseSize, fragCoord, col, bCol);\n  col = paintCircle(pos, baseSize * 0.7, fragCoord, col, bCol);\n  col = paintCircle(pos, baseSize * 0.5, fragCoord, col, bCol);\n  col = paintCircle(pos, baseSize * 0.3, fragCoord, col, bCol);\n  col = paintCircle(pos, baseSize * 0.1, fragCoord, col, bCol);\n  \n  return col;\n}\n\nvec3 paintRingRow (in vec2 fragCoord, in vec3 col, in vec3 bCol, in float offset, in float timeOffset)\n{\n    float loopTime = 12.0;\n    float loopedScale = mod(iTime, loopTime) / loopTime;\n    \n    vec2 pos = vec2(0.0, 0.0);\n    \n    float iterations = 9.0;\n    for(float i = 0.0; i < iterations; i += 1.0)\n    {\n        float inv = abs(i - iterations);\n        float invScalar = inv / iterations;\n        \n        loopedScale = (mod(iTime + i * 1.333 + timeOffset + offset, loopTime) / loopTime) * 1.2 - 0.1;\n        \n        pos = vec2(loopedScale * iResolution.x, (0.1 + offset) * iResolution.y);\n        pos.y += sampleWave(pos.x / 2.0, iTime) * 30.0 + 0.2 * iResolution.y - 100.0;\n        \n        col = paintRings(col, pos, fragCoord, bCol, 0.098 * iResolution.y);\n    }\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(uv.y, uv.x, 0.0);\n        \n    float iterations = 5.0;\n    for(float i = 0.0; i < iterations; i += 1.0)\n    {\n        float inv = abs(i - iterations);\n        float invScalar = inv / iterations;\n        \n        col = paintWave(col, fragCoord, 30.0, invScalar * iResolution.y - 100.0, 2.0, col * invScalar);\n    }\n    \n\n    col = paintRingRow(fragCoord, col, vec3(uv.x,uv.y, 0.0), 0.0, 0.5);\n    col = paintRingRow(fragCoord, col, vec3(uv.y, 0.0, uv.x), 0.2, 0.9);\n    col = paintRingRow(fragCoord, col, vec3(0.0,uv.x, uv.y), 0.4, 0.1);\n    \n    \n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}