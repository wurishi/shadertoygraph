{"ver":"0.1","info":{"id":"NdcSzn","date":"1632454494","viewed":308,"name":"Memory & Aging","username":"chenglou","description":"Tiny abstract art on the decay of memory and attention span from aging.\n[b]Mouse click + drag[/b]\n\nComing back to 2D and exploring how far we can take simple calculations! No fancy ray marching =)\n","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["sdf","chromaticaberration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec2 uv) {\n    vec2 repeat = vec2(.5, .6);\n    vec2 modUV = mod(uv + vec2(sin(iTime) / 1.5, iTime / 3.), repeat); // split cells, move them\n    float sdCells = length(modUV - repeat / 2.) - .1;\n    vec2 mouseOffset = iMouse.z > 0. ? (2. * iMouse.xy - iResolution.xy) / iResolution.y : vec2(.0);\n    float sdCrawler = length(uv - mouseOffset) - .55;\n    return abs(clamp(sdCells / 2.5, 0., 1.) + sdCrawler / 2.); // abs gives the magic embossing\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y; // y from -1 to -1\n    \n    vec3 color = vec3(map(uv - .02), vec2(map(uv + .02))); // chromatic abberation\n    color = pow(color, vec3(1./2.2)); // gamma\n    \n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}