{"ver":"0.1","info":{"id":"XltfD8","date":"1539431450","viewed":103,"name":"duskblobs","username":"mensab","description":"First foray into distance fields and raymarching stuff, not entirely sure why the sphere deformation flips out like this.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","distancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float scene(vec3 p) {\n    \n    //  repeat\n    vec3 c = vec3(20.);\n    vec3 p_r = mod(p, c) - c * 0.5;\n    \n    //  boxes\n    vec3 b_dim = abs(p_r) - vec3(10.);\n    float f_b = min(max(b_dim.x, max(b_dim.y, b_dim.z)),0.0) + length(max(b_dim, 0.0));\n    \n    //  deformed spheres\n    const float freq = 0.25;\n    float s_w = 5. * sin(freq * p.x) * sin(freq * p.y) * sin(freq * p.z);\n    float f_s = (length(p_r) - 13.75) + s_w;\n    \n    //  subtract\n    return max(-f_s, f_b);\n}\n\nfloat cast_ray(vec3 r_o, vec3 r_d, float d_max) {\n    float d = 1.;\n    for (int i = 0; i < 511; i++) {\n        float dist = scene(r_o + d * r_d);\n        if (dist < 0.0001) {\n            return d;\n        }\n        d += dist;\n        if (d >= d_max) {\n            return d_max;\n        }\n    }\n    return d_max;\n}\n\nvec3 ray_dir(float fov, vec2 size, vec2 fragCoord) {\n    vec2 xy = fragCoord - size / 2.0;\n    xy -= iMouse.xy - size / 2.0; //  mouse control\n    float z = size.y / tan(radians(fov) / 2.0);\n    return normalize(vec3(xy, -z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    const float d_max = 200.;\n    \n    //  raycast\n    vec3 dir = ray_dir(90., iResolution.xy, fragCoord);\n    vec3 ray_orig = vec3(3.333 * iTime, 10., -10. * iTime);\n    float depth = cast_ray(ray_orig, dir, d_max);\n    \n    //  calc color\n    float v = depth / d_max;\n    fragColor = vec4(vec3(v, pow(v, 10.) * 0.8, pow(1. - v, 4.)), 1.0);\n}","name":"Image","description":"","type":"image"}]}