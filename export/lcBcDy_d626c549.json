{"ver":"0.1","info":{"id":"lcBcDy","date":"1722910433","viewed":55,"name":"sRGB vs linear for antialiasing","username":"Mytino","description":"Click right half to see linear version, left half for sRGB version.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["color","space","gamma","linear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// From https://www.shadertoy.com/view/4tXcWr\nvec4 fromLinear(vec4 linearRGB)\n{\n\tbvec4 cutoff = lessThan(linearRGB, vec4(0.0031308));\n\tvec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\n\tvec4 lower = linearRGB * vec4(12.92);\n\n\treturn mix(higher, lower, cutoff);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv01 = fragCoord/iResolution.xy;\n    vec2 uv = uv01;\n    uv.x *= iResolution.x/iResolution.y;\n\n    float col = 0.0;\n    \n    vec2 circlePos = vec2(0.5, 0.5);\n    float radius = 0.2;\n    float aa = 1.0 / iResolution.y;\n    col = clamp((distance(uv, circlePos) - radius) / aa, 0.0, 1.0);\n    \n    vec2 n = vec2(-1.0, -0.1);\n    col *= clamp((dot(uv - vec2(1.2, 0.5), n)) / aa, 0.0, 1.0);\n        \n    n = vec2(-1.0, -0.8);\n    col *= clamp((dot(uv - vec2(1.2, 0.5), n)) / aa, 0.0, 1.0);\n    \n    if (uv.y < 0.2) col = floor(uv01.x * 30.0) / 30.0;\n    if (uv.y < 0.1) col = uv01.x;\n    \n    if (iMouse.x / iResolution.x > 0.5) {\n        col = fromLinear(vec4(col, 0, 0, 0)).r;\n    }\n    \n    fragColor = vec4(vec3(col), 1.0);\n}","name":"Image","description":"","type":"image"}]}