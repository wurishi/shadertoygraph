{"ver":"0.1","info":{"id":"McScRR","date":"1721833834","viewed":96,"name":"Rising Fireworks","username":"Eolc","description":"升起的烟花，从下面看？还是从侧面看？\n打ち上げ花火、下から見るか？横から見るか？","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","firework"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\nvec3 Hash31(float p) {\n  vec3 p3 = fract(vec3(.1031, .11369, .13787) * vec3(p));\n  p3 += dot(p3, p3.yzx + 19.19);\n  return fract(\n      vec3((p3.x + p3.y) * p3.z, (p3.x + p3.z) * p3.y, (p3.y + p3.z) * p3.x));\n}\nfloat Hash12(vec2 p2) {\n  vec3 p3 = fract(vec3(p2.xyx) * vec3(.1031, .11369, .13787));\n  p3 += dot(p3, p3.yzx + 19.19);\n  return fract((p3.x + p3.y) * p3.z);\n}\nfloat light(vec2 uv, vec2 pos, float size) {\n  uv -= pos;\n  size *= size;\n  return size / dot(uv, uv);\n}\nfloat trail_light(vec2 uv, vec2 pos, float size) {\n  uv -= pos;\n  uv.y*=.25;\n  return size / length(uv);\n}\nfloat spark(float s, float e, float d, float x) {\n  return smoothstep(s - d, s + d, x) * smoothstep(e + d, e - d, x);\n}\nfloat trail(vec2 uv, vec2 center, float size, float v,float r) {\n  vec2 p = uv - center;\n  p = normalize(p);\n  size *= size;\n  float sum = 0.0;\n  for (float i = 0.0; i < 90.; i++) {\n    vec2 pos = center + v * vec2(0, -v) * (i * .05+0.03 ) +\n               0.08 * (Hash31(i+r).xy - .5);\n    sum += 0.2 * trail_light(uv, pos, size * 25.);\n  }\n  return sum;\n}\nvec3 rise(vec2 uv, vec2 st, vec2 ed, float seed, float t) {\n  vec3 col = vec3(0.0);\n  vec3 rand1 = Hash31(seed);\n  vec3 base_col = rand1;\n\n  float k = (1. * t - .5 * 1. * t * t)/length(st-ed);\n  vec2 pos = mix(st, ed, k);\n  float size = .02 * (cos(PI * t - .5) + 1.) / 2.;\n  col += base_col * (light(uv, pos, size) +\n                     trail(uv, pos, size, 1.414 - 1.414 * t,seed));\n  return col;\n}\nvec3 explosion(vec2 uv, vec2 center, float seed, float t) {\n  vec3 col = vec3(0.0);\n\n  vec3 rand1 = Hash31(seed);\n  vec3 base_col = rand1;\n  for (int i = 0; i < 105; i++) {\n    float fi = float(i);\n    vec3 rand = Hash31(fi) - .5;\n    vec2 start = center;\n    vec2 end = center + normalize(rand.xy) * rand.z;\n\n    float k = 1. - pow(t - 1., 2.);\n    vec2 pos = mix(start, end, k);\n    float size = smoothstep(1., 0., k) * mix(.01, .005, smoothstep(0., 0.1, k));\n\n    float sparkle = 0.01 * (sin(100.0 * (rand.z + k)) * 0.5 + 0.4);\n    size += sparkle * spark(.6, .9, .1, t);\n    col += base_col * light(uv, pos, size);\n  }\n  return col;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord.xy - iResolution.xy * .5) / iResolution.y;\n  vec3 col = vec3(0.0);\n  float t = iTime * .5;\n  float ft = fract(t);\n  float sw = mod(floor(t), 2.0);\n  col += mix(rise(uv, vec2(0., -.5), vec2(0., 0.), floor(t) + 1., ft),\n             explosion(uv, vec2(0., 0.), floor(t), ft), sw);\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}