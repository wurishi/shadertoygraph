{"ver":"0.1","info":{"id":"dtj3zm","date":"1673069333","viewed":100,"name":"Rainbow Ring that's Spinning-ish","username":"Raynhard_DHU","description":"Actually, these are just some rectangles are moving around...\n\n// Reduce the number of rectangles to 20, and have a more calm animation. ðŸ›Œ\n// This is not the One Ring, not Sauron.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ring","rengtangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Rect(vec2 uv, vec2 pos, vec2 size)\n{\n    float rect = .0;\n    float leftBorder = pos.x - size.x/2.;\n    float rightBorder = pos.x + size.x/2.;\n    float topBorder = pos.y + size.y/2.;\n    float bottomBorder = pos.y - size.y/2.;\n    \n    if (uv.x > leftBorder && uv.x < rightBorder &&\n        uv.y > bottomBorder && uv.y < topBorder)\n        rect = 1.;\n    else\n        rect = 0.;\n        \n    return rect;\n}\n\nfloat MovingRect(vec2 uv, float rectSize, float speed, float distance, float offset)\n{\n    float positionX = sin(iTime*speed- offset+vec3(0,2,4)).x*distance;\n    float positionY = sin(iTime*speed- offset+vec3(0,2,4)).y*distance;\n    \n    float size = rectSize * abs(sin(iTime-offset));\n    float rect = Rect(uv, vec2(positionX,positionY), vec2(size));\n    return rect;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float rect = .0;\n    for (int i = 0; i < 100; i++) \n        rect += MovingRect(uv, .15,.5,.4,.4*float(i));\n    \n    vec3 col = sin(iTime*2.+(uv.xyy*1.)+vec3(0,4,8))*2.;\n    col *= rect;\n    col *= texture(iChannel0,sin(iTime*.05+uv.xyx).xy).xyy*.5;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}