{"ver":"0.1","info":{"id":"Ws3cRr","date":"1600226791","viewed":157,"name":"Infinite white","username":"nfiniteset","description":"Zoom into a radial burst of every color of the rainbow","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["radial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb(in vec3 c) {\n    vec3 colorMap = vec3(\n        0.0,\n        4.0,\n        2.0\n    );\n\n    vec3 rgb = clamp(abs(mod(c.x * 6.0 + colorMap,\n                             6.0) - 3.0) - 1.0,\n                     0.000,\n                     1.000);\n    rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy / iResolution.xy;\n    vec3 color = vec3(0.0);\n\n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = vec2(0.5) - st;\n    float angle = cos(atan(toCenter.y, toCenter.x)) * mix(0.0, 10000.0, pow(cos(iTime) / 1.0, 5.0));\n    float radius = length(toCenter) * 2.0;\n\n    // Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    // and the Saturation to the radius\n    color = hsb2rgb(vec3((angle / TWO_PI) + 0.5, radius, 1.0));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}