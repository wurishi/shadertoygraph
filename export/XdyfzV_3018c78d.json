{"ver":"0.1","info":{"id":"XdyfzV","date":"1529495297","viewed":139,"name":"Raymarching (0x57)","username":"darkeclipz","description":"Simple raymarcher, from youtube tutorial: https://www.youtube.com/watch?v=yxNnRSefK94.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define OCTAVES 6\nfloat fbm (in vec2 st) {\n    // Initial values\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    //\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(st);\n        st *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n\n// See: https://www.youtube.com/watch?v=yxNnRSefK94\nfloat map(vec3 p) {\n    vec3 q = fract(p) * 2.0 - 1.0;\n\treturn length(q) - 0.8*(cos(iTime)/2.0) - 0.5;\n}\n\nfloat trace(vec3 o, vec3 r) {\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i) {\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d  * 0.5;\n    }\n\treturn t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    //uv  = uv + fbm(uv);\n    vec3 r = normalize(vec3(uv, 1.0));\n    float the = iTime * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    vec3 o = vec3(0.0, iTime, iTime);\n    float t = trace(o, r);\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 col = vec3(fog);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}