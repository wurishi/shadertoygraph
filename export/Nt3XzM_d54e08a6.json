{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"const float curvature = 10.0;\nfloat noise_ratio = 0.2;\nfloat speed = 0.2;\nfloat wave_density = 60.;\n\n\n\nvec2 crt(vec2 uv) {\n    float tht  = atan(uv.y, uv.x);\n    float r = length(uv);\n    r /= (1.0 - 0.05 * pow(r, curvature));\n    uv.x = r * cos(tht);\n    uv.y = r * sin(tht);\n    return 0.5 * (uv + 1.);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 forground = texture(iChannel0, uv);\n    \n    uv *= 3.0;\n    uv = mod(uv, 1.0);\n    uv = crt(uv * 2. - 1.);\n        \n    vec4 _forground = texture(iChannel0, uv);\n    vec4 _background = texture(iChannel1, uv);\n    vec3 col = mix(_background, _forground, _forground.a).rgb;\n    \n    col += abs(sin(wave_density*(uv.y+speed*iTime))) * noise_ratio * rand(iTime*uv);\n    float vig = 8.0 * uv.x * uv.y * (1.-uv.x) * (1.-uv.y);\n\tcol *= vec3(pow(vig, .25)) * 1.5;\n    if(uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0)\n        col *= 0.0;\n    \n    fragColor = mix(vec4(col, 1.0), forground, forground.a);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"video","id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"float th = 20.0; // threshold\nfloat a2 = 1.2;\n\nfloat getAlpha(vec4 c){\n\treturn 1.0 - th*(c.g-a2*(max(c.r,c.b)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 fg = texture(iChannel0,uv);\n    \n    float alpha = step(0.5, getAlpha(fg));\n    \n\tfragColor = vec4(fg.rgb, alpha);\n}","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"Nt3XzM","date":"1734427258","viewed":45,"name":"VHS__Filto_Separation_1","username":"avartation","description":"asdfg","likes":2,"published":1,"flags":32,"usePreview":1,"tags":["asdfg"],"hasliked":0,"parentid":"","parentname":""}}