{"ver":"0.1","info":{"id":"MsVcDy","date":"1523288420","viewed":359,"name":"AudioBlob - iq remix","username":"cacheflowe","description":"Deformed sphere based on audio input","likes":16,"published":1,"flags":64,"usePreview":0,"tags":["sphere","deform","audioreactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xs2XWm","filepath":"https://soundcloud.com/cacheflowe/cacheflowe-ooh-ooh","previewfilepath":"https://soundcloud.com/cacheflowe/cacheflowe-ooh-ooh","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by inigo quilez - iq/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Original code by iq: https://www.shadertoy.com/view/XtjSDK\n\nconst float PI = 3.1415926535897932384626433832795;\nconst float PHI = 1.6180339887498948482045868343656;\n\nvec4 grow = vec4(1.0);\n\nvec3 mapP( vec3 p )\n{\n    p.xyz += 1.000*sin( 2.0*p.yzx )*grow.x;\n    p.xyz += 0.500*sin( 4.0*p.yzx )*grow.y;\n    p.xyz += 0.250*sin( 8.0*p.yzx )*grow.z;\n    p.xyz += 0.050*sin( 16.0*p.yzx )*grow.w;\n    return p;\n}\n\nfloat map( vec3 q )\n{\n    vec3 p = mapP( q );\n    float d = length( p ) - 1.5;\n\treturn d * 0.05;\n}\n\nfloat intersect( in vec3 ro, in vec3 rd )\n{\n\tconst float maxd = 50.0;\n\n\tfloat precis = 0.001;\n    float h = 1.0;\n    float t = 1.0;\n    for( int i=0; i<2048; i++ )\n    {\n        if( (h<precis) || (t>maxd) ) break;\n\t    h = map( ro+rd*t );\n        t += h;\n    }\n\n    if( t>maxd ) t=-1.0;\n\treturn t;\n}\n\nvec3 calcNormal( in vec3 pos )\n{\n    vec3 eps = vec3(0.005,0.0,0.0);\n\treturn normalize( vec3(\n           map(pos+eps.xyy) - map(pos-eps.xyy),\n           map(pos+eps.yxy) - map(pos-eps.yxy),\n           map(pos+eps.yyx) - map(pos-eps.yyx) ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // coordinate\n    vec2 p = (-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\n\tvec2 q = fragCoord/iResolution.xy;\n\n    // rotation\n    vec2 m = vec2(0.5);\n\tif( iMouse.z>0.0 ) m = iMouse.xy/iResolution.xy;\n    \n    \n    grow = smoothstep( 0.0, 1.0, (iTime-vec4(0.0,1.0,2.0,3.0))/3.0 );\n\tgrow = vec4(\n    \ttexture(iChannel0, vec2(0.1)).r * 0.5,\n        texture(iChannel0, vec2(0.2)).r,\n        texture(iChannel0, vec2(0.5)).r,\n        texture(iChannel0, vec2(0.3)).r\n    );\n    \n    //-----------------------------------------------------\n    // camera\n    //-----------------------------------------------------\n\t\n\tfloat an = 1.1 + 0.5*(iTime-10.0) - 7.0*m.x;\n\n\tvec3 ro = vec3(4.5*sin(an),1.0,4.5*cos(an));\n    vec3 ta = vec3(0.0,0.2,0.0);\n    // camera matrix\n    vec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(0.0,1.0,0.0) ) );\n    vec3 vv = normalize( cross(uu,ww));\n\t// create view ray\n\tvec3 rd = normalize( p.x*uu + p.y*vv + 1.5*ww );\n\n\n    //-----------------------------------------------------\n\t// render\n    //-----------------------------------------------------\n    \n\tvec3 col = vec3(0.3)*clamp(1.0-length(q-0.5),0.0,1.0);\n\n\t// raymarch\n    float t = intersect(ro,rd);\n\n    if( t>0.0 )\n    {\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal(pos);\n        vec3 sor = nor;\n        \n        vec3 q = mapP( pos );\n\n        // materials\n\t\tcol = vec3(0.14);\n        float ar = clamp(1.0-0.7*length(q-pos),0.0,1.0);\n        col = mix( col, vec3(0.7,1.0,0.6), ar);\n        // col = mix( col, vec3(0.5 + 0.5 * sin(pos.y * 100.)), ar);\n        col  *= 0.3;          \n        \n        // lighting\n        float sky = 0.5 + 0.5*nor.y;\n        float fre = 0.5 * clamp( 1.0 + dot(nor,rd), 0.0, 1.0 );\n        float spe = 0.5 * pow(max( dot(-rd,nor),0.0),8.0);\n        \n\t\t// apply lights\n\t\tvec3 lin  = vec3(0.0);\n\t\t     lin += 3.0*vec3(0.7,0.80,1.00)*sky;\n             lin += 1.0*fre*vec3(1.2,0.70,0.60)*(0.1+0.9);\n        col += 0.3*4.0*vec3(0.7,0.8,1.00)*smoothstep(0.0,0.2,pos.y)*(0.05+0.95*pow(fre,5.0))*(0.5+0.5*nor.y);\n        col += 4.0*1.5*spe*col.x;\n        col += 2.0*1.0*pow(spe,8.0)*col.x;\n        col = col * lin;\n    }    \n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}