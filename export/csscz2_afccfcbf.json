{"ver":"0.1","info":{"id":"csscz2","date":"1687012094","viewed":37,"name":"Cinematic Margins Zoom Effect","username":"ScratchDev","description":"Use for editing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 margins(vec3 color, vec2 uv, float marginSize)\n    {\n    \n        float startValue = 0.1; // Starting value of the number\n        float endValue = -0.1; // Ending value of the number\n        float duration = 5.0; // Duration of the animation in seconds\n        \n        // Calculate the current value of the number\n        float t = iTime / duration;\n        float speed = 12.0; // Constant speed value\n        float currentValue = mix(startValue, endValue, 0.5 + 0.5 * cos(t * speed * 3.14159));\n        \n        float startValue2 = 1.1; // Starting value of the number\n        float endValue2 = 0.9; // Ending value of the number\n        float duration2 = 5.0; // Duration of the animation in seconds\n\n        // Calculate the current value of the number\n        float t2 = iTime / duration2;\n        float currentValue2 = mix(startValue2, endValue2, 0.5 + 0.5 * cos(t2 * speed * 3.14159));\n\n        \n        if(uv.y + currentValue < marginSize || uv.y > currentValue2-marginSize)\n        {\n            return vec3(0.0);\n            color *= 0.9+0.9*sin(100.0*iTime+uv.y*1000.0);\n            color *= 0.99+0.01*sin(10.0*iTime);\n            \n        }else{\n            return color;\n            \n            \n        }\n    }\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Render your scene normally\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 sceneColor = vec3(0,1.0,0); // Set your scene color here\n    \n    sceneColor = margins(sceneColor, uv, 0.1);\n    \n    fragColor = vec4(sceneColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}