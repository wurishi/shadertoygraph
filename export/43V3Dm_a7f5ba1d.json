{"ver":"0.1","info":{"id":"43V3Dm","date":"1717745969","viewed":55,"name":"2D SDF Experiments","username":"chillsynthian_dave","description":"Testing stuff\n\nWas gonna convert the brightness values in this shader into ASCII using C and ncurses, so messing with stuff here for now","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // scaled so (0,0) is in center of screen, adjusted for aspect ratio\n    vec2 uv = (2.*fragCoord - iResolution.xy ) / iResolution.y;\n    \n    float sum; // luminosity\n    \n    for (int i = 10; i < 20; i ++) {\n        // a bunch of different positions that points can be in\n        vec2 pos = uv * 50. + vec2(sin(iTime * float(i / 2)), cos(iTime * float(i / 3))) * 20. * (1.0f + float(i / 10));\n        \n        // distance away from current pixel\n        // inverted so brightness is higher the closer we are\n        sum += 1. / length(pos) * 5.;\n    }\n    \n    sum *= 0.5f;\n    \n    // lock brightness values to 0 and 1\n    sum = step(1., sum);\n\n    // output to screen\n    fragColor = vec4(vec3(sum), 1.0);\n}","name":"Image","description":"","type":"image"}]}