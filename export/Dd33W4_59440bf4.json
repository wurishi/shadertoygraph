{"ver":"0.1","info":{"id":"Dd33W4","date":"1677299454","viewed":190,"name":"Very Fast Atmosphere Scattering","username":"sjz1","description":"very fast atmosphere scattering","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["atmosphere","scatter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI=3.14159265358;\nvec2 Projection(vec2 p,float S){\n    #ifdef SphereProjection\n        if(length(p)==0) return p;\n        return normalize(p)*tan(length(p)*S);\n    #else\n        return p*S;\n    #endif\n}\nvec3 ACESFilm( vec3 x )\n{\n    float tA = 2.51;\n    float tB = 0.03;\n    float tC = 2.43;\n    float tD = 0.59;\n    float tE = 0.14;\n    return clamp((x*(tA*x+tB))/(x*(tC*x+tD)+tE),0.0,1.0);\n}\nvec2 rot(vec2 a,float theta){\n    return a.xx*vec2(cos(theta),sin(theta))+a.yy*vec2(-sin(theta),cos(theta));\n}\nvec3 rot(vec3 a,vec3 angle){\n    a.yz=rot(a.yz,angle.x);\n    a.xz=rot(a.xz,angle.y);\n    a.xy=rot(a.xy,angle.z);\n    return a;\n}\n\nvec4 background(in vec3 pos, in vec3 n,in vec3 lightDir ) {\n    vec3 n0=n;\n    const vec3 P=vec3(30000);//atmosphere thickness\n    const float k=0.25;//mix\n    const vec3 Rayleigh=vec3(5.5e-2, 13.0e-2, 22.4e-2);\n    const vec3 Mie=vec3(2e-3);\n\n    const vec3 k0=mix(Rayleigh,Mie,k);\n\n    const vec3 Q=k0/(P*P);//absorption\n    const vec3 Sun=2.*vec3(10,10,10);//sun color\n    const vec3 g0=mix(Rayleigh,vec3(0.7),k);//single scatter\n    n.y=max(n.y,1e-5);\n    vec3 g=3./(8.*PI)*(1.+pow(dot(n,lightDir),2.))*(1.-g0*g0)/(2.+g0*g0)/pow(1.+g0*g0-2.*g0*dot(lightDir,n),vec3(1.5));\n    vec3 t=Q*0.5*(P-pos.y)*(P-pos.y);\n    vec3 c=Sun*g*(exp(-t/n.y)-exp(-t/lightDir.y))/(n.y-lightDir.y)*max(lightDir.y,0.);\n\n    c+=exp(-t/n.y)*Sun*smoothstep(0.999,0.9995,dot(n0,lightDir));\n\t return vec4(clamp(c,0.,50.),1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv=vec2(2.*uv.x-1.,(2.*uv.y-1.)/iResolution.x*iResolution.y);\n    \n    const vec3 rotation=vec3(-0.1,0,0);\n    vec3 n=normalize((rot(vec3(Projection(uv,0.5),1),rotation)).xyz);\n    vec2 mp=iMouse.xy/iResolution.xy;\n    mp=2.*mp-1.;\n    mp.y=mp.y/iResolution.x*iResolution.y;\n    vec3 lightDir;\n    if(iMouse.z!=0.){\n        lightDir=normalize((rot(vec3(Projection(mp,0.5),1),rotation)).xyz);\n    }else{\n        lightDir=normalize(vec3(0,0.025,1));\n    }\n    \n    // Time varying pixel color\n    vec3 col = background(vec3(0,14000.*(1.-cos(iTime)),0),n,lightDir).xyz;\n    // Output to screen\n    col=ACESFilm(col);\n    col=pow(col,vec3(1./2.2));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}