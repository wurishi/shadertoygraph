{"ver":"0.1","info":{"id":"fsVGDV","date":"1632310067","viewed":44,"name":"loka：【故障7-1】模拟噪点故障","username":"LokaHer","description":" 1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define _Speed (0.1)\n#define _LuminanceJitterThreshold (0.5)\n#define _Fading (0.7)\n\nvec2 Speed()\n{\n    return vec2(_Speed, _Speed);\n}\n\nfloat randomNoise(vec2 c)\n{\n    return fract(sin(dot(c.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec2 iTimeV2()\n{\n    return vec2(iTime, iTime);\n}\n\n\nvec3 AnalogNoiseGlitch(vec2 uv)\n{\n    float noiseX = randomNoise(iTimeV2() * Speed() + uv);\n    float noiseY = randomNoise(iTimeV2() * Speed() - uv);\n    float noiseZ = randomNoise(iTimeV2() * Speed() + uv);\n    \n    vec3 col = texture(iChannel0, uv).xyz;\n    vec3 noise_col = col;\n    \n    float luminance = dot(noise_col, vec3(0.22, 0.707, 0.071));\n    \n    if(randomNoise(vec2(iTime * _Speed, iTime * _Speed)) > _LuminanceJitterThreshold)\n    {\n        noise_col = vec3(luminance, luminance, luminance);\n    }\n    \n    \n    noise_col += 0.25 * vec3(noiseX, noiseY, noiseZ) - 0.125;\n    \n    noise_col = mix(col, noise_col, _Fading);\n    return noise_col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = AnalogNoiseGlitch(uv);  \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}