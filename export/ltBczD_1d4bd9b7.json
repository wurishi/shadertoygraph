{"ver":"0.1","info":{"id":"ltBczD","date":"1507645295","viewed":318,"name":"World Map Generator","username":"cnbjw","description":"It's a infinity world. Use Keyboard WASD to move around and mouse left down to zoom in.","likes":10,"published":1,"flags":48,"usePreview":0,"tags":["terrain","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// DISPLAY 0 Show height\n//         1 Show temperature\n//         2 Show moisture\n//         3 Show boime\n#define DISPLAY 3\n\n#define PI 3.141592653589793\n\nconst int n = 8;\n\nconst float mapheight = 2048.0;\n\nconst float deepsea = -0.1;\nconst float shallowsea = 0.05;\nconst float beach = 0.1;\nconst float ground = 0.35;\n\nconst float heighttemp = 1.2;\nconst float moisfacter = 3.5;\n\nconst int seed1 = 2;\nconst int seed2 = 3;\nconst int seed3 = 4;\nconst int seed4 = 5;\nconst int seed5 = 6;\n\nfloat Rand(int x, int y, int seed)\n{\n    float xx = mod(float(x * 20860), 65536.0) * 100.0;\n    float yy = mod(float(y * 20860), 65536.0) * 100.0;\n    xx = floor((xx * 40501.0) / 65536.0);\n    xx /= 65536.0;\n    yy /= 65536.0;\n    xx += float(seed);\n    return fract(xx * yy * (xx+yy) + xx + yy);\n}\n\nfloat GenSinglePoint(int x, int y, int seed, int seed2,float roughness)\n{\n    int xl = x >> n << n;\n    int yl = y >> n << n;\n\tint x1 = 0;\n\tint y1 = 0;\n\tint x2 = 1 << n;\n\tint y2 = 1 << n;\n\tfloat h1 = Rand(x >> n, y >> n, seed2) - 0.5;\n\tfloat h2 = Rand((x >> n) + 1, y >> n, seed2) - 0.5;\n\tfloat h3 = Rand(x >> n, (y >> n) + 1, seed2) - 0.5;\n\tfloat h4 = Rand((x >> n) + 1, (y >> n) + 1, seed2) - 0.5;\n\tfloat d = 1.0;\n    for(int k = n - 1; k >= 0; k--){\n\t\tint i = (x >> k) & 1;\n\t\tint j = (y >> k) & 1;\n        if(j == 0){\n            if(i == 0){\n\t\t\t\t//pos 1\n\t\t\t\tx2 = (x1 + x2)/2;\n\t\t\t\ty2 = (y1 + y2)/2;\n\t\t\t\th4 = (h1 + h2 + h3 + h4)/4.0 + (Rand(x2 + xl, y2 + yl, seed) - 0.5) * d;\n\t\t\t\th2 = (h1 + h2)/2.0 + (Rand(x2 + xl, y1 + yl, seed) - 0.5) * d;\n\t\t\t\th3 = (h1 + h3)/2.0 + (Rand(x1 + xl, y2 + yl, seed) - 0.5) * d;\n            }else{\n                //pos 2\n\t\t\t\tx1 = (x1 + x2)/2;\n\t\t\t\ty2 = (y1 + y2)/2;\n\t\t\t\th3 = (h1 + h2 + h3 + h4)/4.0 + (Rand(x1 + xl, y2 + yl, seed) - 0.5) * d;\n\t\t\t\th1 = (h1 + h2)/2.0 + (Rand(x1 + xl, y1 + yl, seed) - 0.5) * d;\n\t\t\t\th4 = (h2 + h4)/2.0 + (Rand(x2 + xl, y2 + yl, seed) - 0.5) * d;\n            }\n        }else{\n            if(i == 0){\n\t\t\t\t//pos 3\n\t\t\t\tx2 = (x1 + x2)/2;\n\t\t\t\ty1 = (y1 + y2)/2;\n\t\t\t\th2 = (h1 + h2 + h3 + h4)/4.0 + (Rand(x2 + xl, y1 + yl, seed) - 0.5) * d;\n\t\t\t\th1 = (h1 + h3)/2.0 + (Rand(x1 + xl, y1 + yl, seed) - 0.5) * d;\n\t\t\t\th4 = (h3 + h4)/2.0 + (Rand(x2 + xl, y2 + yl, seed) - 0.5) * d;\n            }else{\n\t\t\t\t//pos 4\n\t\t\t\tx1 = (x1 + x2)/2;\n\t\t\t\ty1 = (y1 + y2)/2;\n\t\t\t\th1 = (h1 + h2 + h3 + h4)/4.0 + (Rand(x1 + xl, y1 + yl, seed) - 0.5) * d;\n\t\t\t\th2 = (h2 + h4)/2.0 + (Rand(x2 + xl, y1 + yl, seed) - 0.5) * d;\n\t\t\t\th3 = (h3 + h4)/2.0 + (Rand(x1 + xl, y2 + yl, seed) - 0.5) * d;\n\t\t\t}\n\t\t}\n\t\td = d * roughness;\n\t}\n\treturn h1;\n}\n\nvec4 height2color(float h){\n\tif(h < deepsea)\n        return vec4(0.1,0.15,0.4,1.0);\n    else if (h < shallowsea)\n        return vec4(0.2,0.3,0.7,1.0);\n    else if (h < beach)\n        return vec4(0.8,0.8,0.4,1.0);\n    else if (h < ground)\n        return vec4(0.3, 0.6, 0.2, 1.0);\n    else\n        return vec4(0.5, 0.3, 0.1, 1.0);\n}\n\nvec4 height2gray(float h){\n\tif(h < deepsea)\n        return vec4(0.0,0.0,0.0,1.0);\n    else if (h < shallowsea)\n        return vec4(0.05,0.05,0.05,1.0);\n    else if (h < beach)\n        return vec4(0.4,0.4,0.4,1.0);\n    else if (h < ground)\n        return vec4(0.6, 0.6, 0.6, 1.0);\n    else\n        return vec4(1.0, 1.0, 1.0, 1.0);\n}\n\nvoid DrawRainForest(out vec4 c){\n\tc = vec4(0.0, 0.6, 0.4, 1.0);\n}\n\nvoid DrawWetGrass(out vec4 c){\n\tc = vec4(0.0, 0.7, 0.0, 1.0);\n}\n\nvoid DrawDryGrass(out vec4 c){\n\tc = vec4(0.6, 0.6, 0.0, 1.0);\n}\n\nvoid DrawDesert(out vec4 c){\n\tc = vec4(0.8, 0.8, 0.4, 1.0);\n}\n\nvoid DrawTemperateForest(out vec4 c){\n\tc = vec4(0.0, 0.5, 0.3, 1.0);\n}\n\nvoid DrawTaiga(out vec4 c){\n\tc = vec4(0.0, 0.4, 0.3, 1.0);\n}\n\nvoid DrawShrub(out vec4 c){\n\tc = vec4(0.0, 0.5, 0.0, 1.0);\n}\n\nvoid DrawSnow(out vec4 c){\n\tc = vec4(1.0, 1.0, 1.0, 1.0);\n}\n\nvoid DrawTundra(out vec4 c){\n\tc = vec4(0.1, 0.4, 0.2, 1.0);\n}\n\nvoid DrawBare(out vec4 c){\n\tc = vec4(0.7, 0.7, 0.5, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    bool issmall = iResolution.x < 512.0?true:false;\n    float scale = mapheight / iResolution.y;\n    if (issmall){\n    \tscale *= 0.5;\n    }\n    int dx, dy;\n    if (issmall){\n        dx = int(iTime * 512.0);\n        dy = int(mapheight / 4.0) + int(mapheight / 8.0 * sin(iTime));\n    }else{\n    \tdx = int(texture(iChannel0, vec2(0.5, 0.5) / iResolution.xy).x * 65536.0) * 16;\n    \tdy = int(texture(iChannel0, vec2(0.5, 0.5) / iResolution.xy).y * 65536.0) * 16;\n    }\n    int x = int(fragCoord.x * scale) + dx;\n    int y = int(fragCoord.y * scale) + dy;\n    if (iMouse.z > 0.5){\n    \tx = int(iMouse.x * scale) + int((fragCoord.x - iResolution.x * 0.5) * 0.5) + dx;\n    \ty = int(iMouse.y * scale) + int((fragCoord.y - iResolution.y * 0.5) * 0.5) + dy;\n    }\n \tfloat h = GenSinglePoint(x, y, seed1, seed2, 0.5);\n\tfloat temp = 0.5 - 0.5 * cos(float(y) / mapheight * PI * 2.0) - clamp(h - beach, 0.0, 4.0) * heighttemp;\n    float mois = 1.0 / (exp(GenSinglePoint(x, y, seed3, seed4, 0.3) * moisfacter) + 1.0);\n    temp = clamp(temp, 0.0, 1.0);\n    mois = clamp(mois, 0.0, 1.0);\n    #if DISPLAY == 0\n    fragColor = height2color(h);\n    #elif DISPLAY == 1\n    temp = floor(temp * 8.0) / 8.0;\n    fragColor = height2gray(h) * vec4(temp * 2.0, 0.0, 2.0 - temp * 2.0, 1.0);\n    #elif DISPLAY == 2\n    fragColor = height2gray(h) * mix(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0), floor(mois * 4.0) / 4.0);\n    #elif DISPLAY == 3\n    if(h < deepsea)\n        fragColor = vec4(0.1,0.15,0.4,1.0);\n    else if (h < shallowsea)\n        fragColor = vec4(0.2,0.3,0.7,1.0);\n    else if (h < beach)\n        fragColor = vec4(0.8,0.8,0.4,1.0);\n    else{\n        float temptype = temp * 4.0 + Rand(x, y, seed5) * 0.5 - 0.1;\n        float moistype = mois * 4.0 + Rand(x, y, seed5) * 0.5 - 0.1;\n        if (temptype >= 3.0){\n            if(moistype >= 3.0)\n        \t\tDrawRainForest(fragColor);\n            else if (moistype >= 2.0)\n                DrawWetGrass(fragColor);\n            else if (moistype >= 1.0)\n                DrawDryGrass(fragColor);\n            else\n                DrawDesert(fragColor);\n        }else if (temptype >= 2.0){\n            if(moistype >= 2.5)\n        \t\tDrawTemperateForest(fragColor);\n            else if (moistype >= 1.5)\n                DrawWetGrass(fragColor);\n            else\n                DrawDesert(fragColor);\n        }else if (temptype >= 1.0){\n            if(moistype >= 2.5)\n        \t\tDrawTaiga(fragColor);\n            else if (moistype >= 1.5)\n                DrawShrub(fragColor);\n            else\n                DrawDesert(fragColor);\n        }else{\n            if(moistype >= 2.0)\n        \t\tDrawSnow(fragColor);\n            else if (moistype >= 1.0)\n                DrawTundra(fragColor);\n            else\n                DrawBare(fragColor);\n        }\n    }\n    \t\n    #endif\n    #if 1\n    if (issmall){\n    }else{\n        if (iMouse.z > 0.5){\n            if ((x & 255) <= 1 || (y & 255) <= 1)\n                fragColor = step(fragColor, vec4(0.5,0.5,0.5,1.0)) * 0.25 + 0.375;\n        }else{\n            if ((x & 255) <= int(scale) || (y & 255) <= int(scale))\n                fragColor = step(fragColor, vec4(0.5,0.5,0.5,1.0)) * 0.25 + 0.375;\n        }\n    }\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// keys are javascript keycode: https://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes\nconst int Key_A = 65; const int Key_B = 66; const int Key_C = 67; const int Key_D = 68; const int Key_E = 69;\nconst int Key_F = 70; const int Key_G = 71; const int Key_H = 72; const int Key_I = 73; const int Key_J = 74;\nconst int Key_K = 75; const int Key_L = 76; const int Key_M = 77; const int Key_N = 78; const int Key_O = 79;\nconst int Key_P = 80; const int Key_Q = 81; const int Key_R = 82; const int Key_S = 83; const int Key_T = 84;\nconst int Key_U = 85; const int Key_V = 86; const int Key_W = 87; const int Key_X = 88; const int Key_Y = 89;\nconst int Key_Z = 90;\nconst int Key_0 = 48; const int Key_1 = 49; const int Key_2 = 50; const int Key_3 = 51; const int Key_4 = 52;\nconst int Key_5 = 53; const int Key_6 = 54; const int Key_7 = 55; const int Key_8 = 56; const int Key_9 = 57;\n\nbool ReadKey(int key)\n{\n\tfloat keyVal = texture(iChannel1, vec2((float(key)+.5)/256.0, 0.2)).x;\n\treturn (keyVal>.5)?true:false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(floor(fragCoord.x) == 0.0 && floor(fragCoord.y) == 0.0){\n        if (iTime < 1.0){\n        \tfragColor = vec4(0.5, 0.5, 0.0, 0.0);\n        }else{\n        \tfragColor = texture(iChannel0, vec2(0.5, 0.5) / iResolution.xy);\n            if (ReadKey(Key_A))\n                fragColor -= vec4(1.0/65536.0, 0.0, 0.0, 0.0);\n            if (ReadKey(Key_D))\n                fragColor += vec4(1.0/65536.0, 0.0, 0.0, 0.0);\n            if (ReadKey(Key_W))\n                fragColor += vec4(0.0, 1.0/65536.0, 0.0, 0.0);\n            if (ReadKey(Key_S))\n                fragColor -= vec4(0.0, 1.0/65536.0, 0.0, 0.0);\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}