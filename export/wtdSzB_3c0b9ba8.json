{"ver":"0.1","info":{"id":"wtdSzB","date":"1581271960","viewed":78,"name":"Inversion","username":"mariandev","description":"https://www.youtube.com/watch?v=bJOuzqu3MUQ&t=1637s","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["inversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 Invert(vec2 point, vec2 center, float radius) {\n\tvec2 v = point - center;\n    float iLen = length(v);\n    float nLen = radius * radius / iLen;\n    float pLen = nLen / iLen;\n    vec2 invertedPoint = center + v * pLen;\n    \n    return invertedPoint;\n}\n\nfloat circle(vec2 uv) {\n\tfloat len = length(uv);\n    \n    float m = .1;\n    float M = .09;\n    \n    return smoothstep(m, M, len);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = vec3(0);\n    \n    vec2 iuv = Invert(uv, vec2(0), .25);\n    \n    vec2 offs = vec2(0, sin(iTime*.5)*.5);\n    \n    col.x = circle(uv + offs);\n    col.y = circle(iuv + offs);\n    \n    //col.xy = mix(uv, iuv, sin(iTime)*.5+.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}