{"ver":"0.1","info":{"id":"4tyyDw","date":"1536415140","viewed":1239,"name":"Down the creepy rabbit hole","username":"Emil","description":"continuation from my previous experiment where I realised how \"easy\" it was to do 3D planes.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["plane","fake3d","mode7"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y; // thanks FabriceNeyret2!\n    vec2 uv_01 = (fragCoord- .5*iResolution.xy )/iResolution.xy;\n    float newTime = iTime*0.1;\n    \n    ///// Start Creepy stuff\n    float rotStrength = (0.06*sin(newTime))/length(uv);\n    float sinX = sin ( rotStrength + newTime);\n    float cosX = cos ( rotStrength + newTime);\n    float sinY = sin ( rotStrength + newTime);\n    mat2 rotMatrix = mat2( cosX, -sinX, sinY, cosX);\n    \n    \n    vec2 twistedUV = uv * rotMatrix;\n    twistedUV.x /= 1.8*(1.0-0.2*sin(newTime));\n    ///// End Creepy stuff\n    \n    vec3 viewDir = normalize(vec3(twistedUV,0.4 + 0.1*sin(newTime*3.0)));\n    \n    vec2 planarUV_y = viewDir.xz/abs(viewDir.y);\n    vec2 planarUV_x = viewDir.yz/abs(viewDir.x);\n    \n    float depth = min(planarUV_y.y, planarUV_x.y);\n    planarUV_y += vec2(0.0, newTime*1.6);\n    planarUV_x += vec2(0.0, newTime*1.6);\n    \n    vec3 albedo = \ttexture( iChannel0, planarUV_y).rgb*step(abs(planarUV_y.x),0.99)\n        \t\t+\ttexture( iChannel0, planarUV_x).rgb*step(abs(planarUV_x.x),1.01);\n    \n    float light = (1.1)/(depth*depth)*viewDir.z*(0.5+0.2*(sin(newTime*5.0)));\n    \n    float fog = clamp(depth*0.02,0.0,0.6);\n    \n    fragColor = vec4(light*albedo+vec3(2.0+sin(newTime*6.0),0.0,0.2)*fog,1.0);\n    fragColor *= 2.5-4.0*max(abs(uv_01.x),abs(uv_01.y)); // square vignette\n}","name":"Image","description":"","type":"image"}]}