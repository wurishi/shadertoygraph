{"ver":"0.1","info":{"id":"cdVSRV","date":"1681327244","viewed":99,"name":"boxclub","username":"airtight","description":"boxclub\n","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["boxclub"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://iquilezles.org/articles/distfunctions2d/\n//returns 0 at edge , positive outside, negative inside\n//inside has hard edges, outside has rounded edges\nfloat sdBox( in vec2 p, in vec2 b ){\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n//triangle around 0, wavelength 1\nfloat tri(float x) {\n    return abs(2.0 * fract(x) - 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    //fix aspect, origin at center\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n\tfloat d = sdBox(uv,vec2(1.));\n    const float RING_COUNT = 14.0;\n    float stepped = floor( d*RING_COUNT)/RING_COUNT;\n    float inner = fract(d*RING_COUNT );\n           \n    //B&W boxes\n    float b = stepped;\n    b += iTime * 0.1; //animate    \n    b = tri(b); //cycle brightness seamlessly\n    //less contrast\n    b = mix(0.1,0.9,b);\n    vec3 col = vec3(b);\n    \n    //inner shadow\n    float innerShadow = pow(inner,3.);\n    col -= innerShadow * 0.06 ;\n   \n    //vertical shadow\n  \tfloat topShadow = pow(uv.y + 0.5 ,3.);\n    col -= topShadow* 0.2;\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}