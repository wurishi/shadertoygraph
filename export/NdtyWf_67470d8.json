{"ver":"0.1","info":{"id":"NdtyWf","date":"1654170008","viewed":133,"name":"Green Spooder","username":"panna_pudi","description":"spooky","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","domain","coloring","comlex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Silly spooder on complex plane\n// https://hturan.com/writing/complex-numbers-glsl\n\nconst float PI = acos(-1.);\n\n#define AAstep(x0, x) clamp(((x) - (x0)) / (2. * 2. / pc.resolution.y), 0., 1.)\n\n#define cx_mul(a, b) vec2(a.x* b.x - a.y * b.y, a.x * b.y + a.y * b.x)\n#define cx_div(a, b)                                          \\\n    vec2(((a.x * b.x + a.y * b.y) / (b.x * b.x + b.y * b.y)), \\\n         ((a.y * b.x - a.x * b.y) / (b.x * b.x + b.y * b.y)))\n#define cx_sin(a) vec2(sin(a.x) * cosh(a.y), cos(a.x) * sinh(a.y))\n#define cx_cos(a) vec2(cos(a.x) * cosh(a.y), -sin(a.x) * sinh(a.y))\n\nvec2 cx_tan(vec2 a) {\n    return cx_div(cx_sin(a), cx_cos(a));\n}\nvec2 cx_log(vec2 a) {\n    float rpart = sqrt((a.x * a.x) + (a.y * a.y));\n    float ipart = atan(a.y, a.x);\n    if (ipart > PI)\n        ipart = ipart - (2.0 * PI);\n    return vec2(log(rpart), ipart);\n}\n\nvec2 as_polar(vec2 z) {\n    return vec2(length(z), atan(z.y, z.x));\n}\nvec2 cx_pow(vec2 v, float p) {\n    vec2 z = as_polar(v);\n    return pow(z.x, p) * vec2(cos(z.y * p), sin(z.y * p));\n}\n\nfloat im(vec2 z) {\n    return ((atan(z.y, z.x) / PI) + 1.0) * 0.5;\n}\n\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n    return a + b * cos(2. * PI * (c * t + d));\n}\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    vec2 z = uv * -1.36 - vec2(0., -0.8);\n    z *= rot(PI / 2.);\n\n    vec2 a = z - vec2(1., 0.);\n    vec2 b = z + vec2(1., 0.);\n    vec2 res = cx_div(a, b);\n    res = cx_sin(res);\n    res = cx_pow(res, 3.);\n    res += cx_cos(cx_div(vec2(.1, 1.), z));\n\n    float imaginary = cx_log(res).y;\n    float val = imaginary / PI + 0.;\n    if (val > 1.) {\n        val = 2. - val;\n    }\n\n    float px = fwidth(uv * 20.).x;\n    vec3 col = pal(val, vec3(.67, .64, .31), vec3(.70, .44, .31),\n              vec3(.26, .39, .14), vec3(.35, .5, .34));\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}