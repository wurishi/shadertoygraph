{"ver":"0.1","info":{"id":"lcBBDc","date":"1725577689","viewed":115,"name":"Polar truchet","username":"Elsio","description":"Quem imaginaria que a solução é aninhar um fract dentro de outro fract? Só a experiência e o enfrentamento de diversas situações rotineiramente nos permitiria resolver rapidamente problemas não intuitivos como esse. \ntks master @shane!","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["teste"],"hasliked":0,"parentid":"MfBBWc","parentname":"coordenadas polares"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// k. i. s. s\n#define h21(p) fract(sin(dot(p, vec2(12.34,26.534))) * 987.23) > .5 ? .5 : -.5\n#define t iTime\n#define pi acos(-1.)\n#define TAU (2.* pi)\n\nfloat truchet(vec2 p, float h){\n    vec2 e = vec2(.5, h);\n    float a = length(p + e),\n          b = length(p - e),\n          d = min(a, b) - .5;\n    \n    return abs(abs(d) - .21);\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 q, p, r = iResolution.xy;\n    float i, d;\n    u.yx = (u - r / 2.) / r.y;\n    o *= 0.;\n    p = u;\n\n    //if(false)\n    p = vec2(\n           atan(p.x, p.y) + t * .1,\n           log(length(p)) + cos(t * .2) - t * .2\n       );\n\n    p = fract(p / TAU) * 17.; // Wrapping here.    -- by shane\n                              // (uma lição hiper importante!)\n    \n    q = floor(p);\n    p = fract(p) - .5;\n    \n    d = truchet(p, h21(q));\n    \n    o += (1. - length(p)) * .5 ;\n    o += smoothstep(15. / r.y, 0., d) \n            /**/ * (length(u) * 2.5 - .10)\n            ;\n}","name":"Image","description":"","type":"image"}]}