{"ver":"0.1","info":{"id":"WlycRW","date":"1615499710","viewed":247,"name":"Synthesis ideas","username":"athibaul","description":"Just a couple ways of making funky noise : FM synthesis, and \"formant sin\"","likes":11,"published":1,"flags":8,"usePreview":0,"tags":["sound","fm","synthesis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n\tfloat dx = 1./iResolution.y;\n    \n    // Plot mainSound() function\n    float x1 = uv.x - dx;\n    float x2 = uv.x + dx;\n    float y = uv.y;\n    float time = round(iTime*55.)/55.;\n    float scale = 3.;\n    float scalex = 100.;\n    float fx1 = mainSound(0, x1/scalex + time).x * scale;\n    float fx2 = mainSound(0, x2/scalex + time).x * scale;\n    float alpha = (fx2-fx1)/(2.*dx),\n          beta  = (fx2+fx1)/(2.*dx);\n    float d = abs(beta*dx - y)/length(vec2(1., alpha));\n    \n    vec3 col = vec3(0.);\n    col = mix(col, vec3(1), smoothstep(3./iResolution.y,0.,d));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// See Common tab","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"\n\n#define TAU (2.*3.1415926)\n#define SawOsc(f,m) (2.*fract((f)*t+(m)/TAU)-1.)\n//#define TriOsc(f,m) TODO\n#define SinOsc(f,m) sin(TAU*(f)*t+m)\n\n\nfloat formantSin(float phase, float form)\n{\n    // Inspired by the wavetable \"formant\" option\n    // in software synthesizer Surge (super cool freeware synth!)\n    phase = fract(phase);\n    phase = min(phase*form, 1.);\n    return sin(TAU*phase);\n}\n\nvec2 mainSound( int samp, float time )\n{\n    float t = time;\n    \n    if(mod(t, 10.) > 7.)\n        // Phase modulation synthesis using sawtooth waves\n        return SawOsc(vec2(440.,441.6), SawOsc(-219., 0.)+SinOsc(5.,0.)) * vec2(0.1);\n    \n    \n    vec2 v = vec2(0);\n    \n    vec2 formant = vec2(0.) + exp(3.*(0.5+0.5*sin(0.5*time)));\n    //vec2 formant = vec2(time);\n    v.x += formantSin(110.*time, formant.x) * 0.15;\n    v.y += formantSin(111.*time, formant.y) * 0.15;\n    return v;\n}","name":"Common","description":"","type":"common"}]}