{"ver":"0.1","info":{"id":"wdscDs","date":"1585906679","viewed":159,"name":"smooth min/max trial","username":"ankd","description":"learning smooth min/max function from iq\nhttps://iquilezles.org/articles/smin/smin.htm","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["smooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = acos(-1.);\n#define SS smoothstep\n\n#define usin(x) (0.5+0.5*sin(x))\n#define ucos(x) (0.5+0.5*cos(x))\n\n// smooth min function from iq\n// https://iquilezles.org/articles/smin\nfloat smin( float a, float b, float k ) { \n    float h = max( k-abs(a-b), 0.0 )/k;\n    return min( a, b ) - h*h*k*(1.0/4.0); \n}\nfloat smax( float a, float b, float k ) {\n    float h = max( k-abs(a-b), 0.0 )/k;\n\treturn max( a, b ) + h*h*k*(1./4.);\n}\n\nfloat line( in vec2 uv, in float y, in float w ) { return SS(y-w, y, uv.y) - SS(y, y+w, uv.y); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // calc equation value \n    float x = uv.x + iTime*0.1;\n    float v1 = usin(fract(x*1.3)*PI*2.);\n    float v2 = ucos(fract(x*2.3)*PI*2.);\n    \n    // calc smooth min/max\n    float k = 0.2*usin(iTime);\n    float vsmin = smin(v1, v2, k);\n    float vsmax = smax(v1, v2, k);\n\n    vec3 col = vec3(0.);\n    // draw equation value\n    col += line(uv, v1, 0.01) * vec3(1., 0., 0.);// red line = v1\n    col += line(uv, v2, 0.01) * vec3(0., 0., 1.);// blue line = v2\n\t// draw smooth min/max value\n    col = mix(col, vec3(1.,1.,0.), line(uv, vsmin, 0.01));// yellow line = smin\n    col = mix(col, vec3(0.,1.,1.), line(uv, vsmax, 0.01));// cyan line = smax\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}