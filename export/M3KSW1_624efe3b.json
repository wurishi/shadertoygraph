{"ver":"0.1","info":{"id":"M3KSW1","date":"1719924204","viewed":45,"name":"arts1308hw2","username":"zemi","description":"color","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 伪随机数生成函数\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // 获取屏幕的分辨率和当前像素坐标\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // 使坐标中心化\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // 时间参数，用于动态变化\n    float time = iTime * 0.2;\n    \n    // 应用变换效果的参数\n    float speed = .3;\n    float scale = 0.002;\n    vec2 p = fragCoord * scale;   \n    for(int i = 1; i < 10; i++) {\n        p.x += 0.3 / float(i) * cos(float(i) * 3.0 * p.y + iTime * speed);\n        p.y += 0.3 / float(i) * sin(float(i) * 3.0 * p.x + iTime * speed);\n    }\n\n    // 背景颜色：天空从灰色到红色的动态渐变\n    float r = cos(p.x + p.y + 1.0) * 0.5 + 0.5;\n    float g = sin(p.x + p.y + 1.0) * 0.5 + 0.5;\n    float b = (cos(p.x + p.y) + sin(p.x + p.y)) * 0.3 + 0.5;\n    vec3 skyColor1 = vec3(r, g, b);\n    vec3 skyColor2 = vec3(0.8, 0.3 + 0.3 * sin(time + 1.0), 0.3);\n    vec3 bgColor = mix(skyColor1, skyColor2, uv.y * 0.5 + 0.5);\n    \n    // 太阳的参数\n    vec2 sunPos = vec2(0.8, 0.1);\n    float sunRadius = 0.01;\n    float sunGlow = 0.1;\n\n    // 计算太阳的颜色和光晕\n    float distToSun = length(uv - sunPos);\n    float sun = smoothstep(sunRadius + sunGlow, sunRadius, distToSun);\n    vec3 sunColor = mix(vec3(1.0, 0.6, 0.3), vec3(1.0, 0.8, 0.5), distToSun / sunGlow);\n    \n    // 结合背景和太阳\n    vec3 color = mix(bgColor, sunColor, sun);\n    \n    // 海面的动态颜色\n    vec3 oceanColor1 = vec3(r * 0.2, g * 0.3, b * (0.5 + 0.5 * sin(time + 2.0)));\n    vec3 oceanColor2 = vec3(r * 0.1, g * 0.2, b * 0.6);\n    \n    // 增加随机性的波纹效果\n    float wave = sin(uv.x * 10.0 + iTime + rand(uv * 100.0) * 10.0) * 0.02;\n    color = mix(color, mix(oceanColor1, oceanColor2, uv.y * 0.5 + 0.5), smoothstep(0.0, -0.2, uv.y + wave));\n    \n    // 设置输出颜色\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}