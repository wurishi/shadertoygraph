{"ver":"0.1","info":{"id":"XXcXDj","date":"1719546727","viewed":109,"name":"custom wave","username":"jaqwan","description":"wave","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float pi = 3.141592653;\n    float eps = 0.0000001;\n    \n    /*\n    \n    // wave 1 area\n    float b_w = 0.005;\n    float A = 0.01 * (sin(2.0 * iTime) + 1.0);// * texture(iChannel1, vec2(uv.x, uv.y)).r;\n    float noise = 10.0 * texture(iChannel0, vec2(0.02 *iTime, 0.5)).r;\n    float phi1 = 0.25 * sin(noise) * sin(iTime) + 0.25;\n    float h = b_w + 0.005 * (sin(2.0 * pi * (uv.x - 0.25)) + 1.0);\n    float h1 = h + A * (1.0 - cos(4.0 * pi * (uv.x - phi1))) * step(0.0, uv.x - phi1) * step(uv.x - phi1, 0.5);\n    float a1 = 1.0 - smoothstep(h1, h1+b_w, uv.y);\n    float b_a1 = a1 * smoothstep(h1-b_w, h1, uv.y);\n    vec3 col1 = b_a1 * vec3(0.0, 0.5, 1.0) + (1.0 - b_a1) * vec3(1.0);\n    \n    // wave 2 area\n    float A2 = A * 1.5;\n    float phi2 = 0.25 * sin(noise) * sin(iTime-0.5) + 0.25;\n    float h2 = h + A2 * (1.0 - cos(4.0 * pi * (uv.x - phi2))) * step(0.0, uv.x - phi2) * step(uv.x - phi2, 0.5);\n    float a2 = 1.0 - smoothstep(h2, h2+b_w, uv.y);\n    //float b_a2 = a2 * sin(20.0 * (1.0 /h2) * uv.y);\n    float b_a2 = a2 * texture(iChannel0, vec2(uv.x*0.02, uv.y * 0.5 / h2)).r;\n    vec3 col2 = b_a2 * vec3(0.0, 0.5, 1.0) + (1.0 - b_a2) * vec3(1.0);\n    vec3 col = a1 * col1 + (1.0 - a1) * col2;\n\n    */\n    \n    float lineWidth = 0.0015;\n    float offset = 0.01;\n    vec3 bgCol = vec3(0.9);\n    vec3 lineBgCol = vec3(0.95);\n    vec3 lineCol = vec3(0.4, 0.6, 1.0);\n    \n    float A = 0.005 * (sin(2.0 * iTime) + 1.0);\n    A += 0.05 * texture(iChannel1, vec2(1.0,0.0)).r; //apply music\n    //A *= texture(iChannel1, vec2(uv.x, 0.0)).r; //apply music freq\n    float noise = 10.0 * texture(iChannel0, vec2(0.02 *iTime, 0.5)).r;\n    float phi1 = 0.25 * sin(noise) * sin(iTime) + 0.25;\n    float h1 = A * (1.0 - cos(4.0 * pi * (uv.x - phi1))) * step(0.0, uv.x - phi1) * step(uv.x - phi1, 0.5);\n    \n    float A2 = A * 1.5;\n    float phi2 = 0.25 * sin(noise) * sin(iTime-0.5) + 0.25;\n    float h2 = 0.01 + A2 * (1.0 - cos(4.0 * pi * (uv.x - phi2))) * step(0.0, uv.x - phi2) * step(uv.x - phi2, 0.5);\n    \n    float bg2 = smoothstep(h2 + lineWidth, h2, uv.y);\n    vec3 col = bg2 * lineBgCol + (1.0 - bg2) * bgCol;\n    \n    float a2 = bg2 * texture(iChannel0, vec2(uv.x * 0.02, uv.y * 0.52 / h2)).r;\n    col = a2 * lineCol + (1.0 - a2) * col;\n    \n    float bg1 = smoothstep(h1 + offset + lineWidth, h1 + offset, uv.y);\n    col = bg1 * lineBgCol + (1.0 - bg1) * col;\n    \n    float a1 = lineWidth / (abs(uv.y - h1 - 0.01) + eps);\n    a1 = clamp(a1, 0.0, 1.0);\n    col = lineCol * a1 + (1.0 - a1) * col;\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}