{"ver":"0.1","info":{"id":"4ljSDt","date":"1447360536","viewed":524,"name":"RayCubesLearning","username":"gilesruscoe","description":"Learning stuff","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["raymarchcube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\nfloat map(vec3 p)\n{\n   \tp.z += iTime * 6.0;\n    p.y += sin(iTime + p.z * 0.25) * 5.0;\n    vec3 q = fract(p) * 2.0 - 1.0;\n    float result = (mix(length(q) - sin(2.0 * iTime + p.x), sdBox(q, vec3(0.25)), sin(iTime  * 2.0) * 0.5 + 0.5));\n    result = sin(result);\n    return result;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i)\n    {\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 2.0));\n    float the = iTime * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    vec3 o = vec3(0.0, iTime, iTime);\n    \n    float st = (sin(iTime) + 1.5) * 0.4;\n    \n    float t = trace(o, r * st);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    \n    vec3 fc = vec3(fog * 2.0);\n    \n    //vec3 tint = vec3(st - 0.5,st,st + 0.5);\n    float st2 = sin(iTime) * 0.5 + 0.5;\n    float ct2 = cos(iTime) * 0.5 + 0.5;\n    vec3 tint = vec3(st2, ct2, -st2);\n\tfragColor = vec4(fc * tint, 1.0);\n}","name":"Image","description":"","type":"image"}]}