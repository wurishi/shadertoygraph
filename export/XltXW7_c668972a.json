{"ver":"0.1","info":{"id":"XltXW7","date":"1480005023","viewed":675,"name":"Gaussian Blur - 2 pass","username":"yduf","description":"2 pass - gaussian blur\nas describe in first part of\nhttp://rastergrid.com/blog/2010/09/efficient-gaussian-blur-with-linear-sampling/comment-page-1/#comments\n","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["blur","gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2 pass - gaussian blur\n// as describe in first part of\n// http://rastergrid.com/blog/2010/09/efficient-gaussian-blur-with-linear-sampling/comment-page-1/#comments\n\n\n// y_blur pass\n\nvoid y_blur( out vec4 fragColor, in vec2 fragCoord )\n{  \n    float sum = iResolution.y;\n    float offset_0 = 0.0;\n    vec4 offset = vec4( 1.0, 2.0, 3.0, 4.0 );\n\n        \n    float weight_0 = 0.2270270270;\n    vec4 weight = vec4( 0.1945945946, 0.1216216216, \n                        0.0540540541, 0.0162162162);\n        \n    //\n    fragColor = texture( iChannel0, fragCoord ) * weight_0;\n    \n    for (int i=0; i<4; i++) {\n      fragColor += texture( iChannel0, \n                               fragCoord + vec2(0.0, offset[i])/sum )\n                               * weight[i];       \n      fragColor += texture( iChannel0, \n                               fragCoord - vec2(0.0, offset[i])/sum ) \n                               * weight[i];       \n\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec4 c = texture(iChannel0, uv);\n  \n \n  fragColor = c;  \n \n  if (fragCoord.x > iMouse.x) {\n      y_blur( fragColor, uv);\n  }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// x_blur pass\n\nvoid x_blur( out vec4 fragColor, in vec2 fragCoord )\n{  \n    float sum = iResolution.x;\n    float offset_0 = 0.0;\n    vec4 offset = vec4( 1.0, 2.0, 3.0, 4.0 );\n\n        \n    float weight_0 = 0.2270270270;\n    vec4 weight = vec4( 0.1945945946, 0.1216216216, \n                        0.0540540541, 0.0162162162);\n        \n    //\n    fragColor = texture( iChannel0, fragCoord ) * weight_0;\n    \n    for (int i=0; i<4; i++) {\n      fragColor += texture( iChannel0, \n                               fragCoord + vec2( offset[i], 0.0)/sum )\n                               * weight[i];       \n      fragColor += texture( iChannel0, \n                               fragCoord - vec2( offset[i], 0.0)/sum ) \n                               * weight[i];       \n\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec4 c = texture(iChannel0, uv);\n  \n \n  fragColor = c;  \n\n  \n  if (fragCoord.y > iMouse.y ) {\n      x_blur( fragColor, uv);\n  }\n}","name":"Buf A","description":"","type":"buffer"}]}