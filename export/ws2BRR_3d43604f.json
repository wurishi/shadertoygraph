{"ver":"0.1","info":{"id":"ws2BRR","date":"1589413149","viewed":139,"name":"Phasey Bois","username":"khlorghaal","description":"There are at least 3 other things I should be working on instead of this.\n\n\n\n\n","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["fractal","audio","signal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 COLOR= vec3(0.,.3,1.);\n\nfloat sat(float x){ return min(1.,max(0.,x)); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv= fragCoord.xy/iResolution.xy;\n\n    float x= uv.x;\n    float y= uv.y*2.-1.;\n    float fx= wave(x*.25+iTime*.05)*.125;\n    float l= abs(fx-y);//distance to function value\n    \n    l= 1.-l;\n    l= l*4.-3.;\n    l= sat(l);\n    \n    vec3 c= COLOR;    \n    fragColor= vec4(COLOR*l,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"precision highp float;\nconst float TAU= 6.283;\n\nfloat wave(float t){    \n    float osc= sin(TAU*t)*.5+.5;//infrasonic oscillator\n    \n    float acc= 0.;\n    const int N=16;\n    const float Nf= float(N);\n    for(int i=0;i!=N;i++){\n        float n= float(i);\n        float l= n/Nf;\n        \n        float f= 120.;//frequency\n        \n        float p= l*osc;//phase offset\n        p= smoothstep(0.,1.,p);\n        p*= f;\n        \n        float a= 4.;//amplitude\n        \n        acc+= sin(( f*t + p )*TAU)*a;\n    }\n    return acc/Nf;\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp,float t){\n    float a= wave(t);\n    return vec2(a)*.125;\n}","name":"Sound","description":"","type":"sound"}]}