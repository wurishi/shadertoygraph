{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\nvec3 view(vec2 p)\n{\n\tfloat r = iResolution.y / iResolution.x;\n\tfloat x = p.x-fract(p.x*80.)/80.;\n\tfloat h = texture(iChannel0,vec2(x,0)).x;\n\t\n\tif (p.y <= h-fract(h*80.*r)/(80.*r)) {\n\t\tfloat py = p.y - fract(p.y*80.*r)/(80.*r);\n\t\treturn vec3(h,h,py)*1.5;\n\t}\n\treturn vec3(0.,0.,0.0);\n\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy/iResolution.xy;\n\tfragColor = vec4(view(p), 1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4d2GDw","date":"1391296393","viewed":460,"name":"simple pixel audio visualizer","username":"Citiral","description":"Made while testing out the audio input. It looks pretty neat, in my opinion.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["test","simple","pixel","audio","visualizer"],"hasliked":0,"parentid":"","parentname":""}}