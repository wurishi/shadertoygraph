{"ver":"0.1","info":{"id":"4tffzl","date":"1516357993","viewed":309,"name":" Conway's LifeGame","username":"tholzer","description":"Simulate 1970's Life Game of the British mathematician John Horton Conway.\nPress left mouse button to draw some cells.\nPress keys: 'c' clear all cells, 'p' pause, 'r' reset, 's' step, 'z' zoom on/off.\n","likes":6,"published":1,"flags":112,"usePreview":0,"tags":["2d","simulation","automata","life","cellular","conway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtX3W4","filepath":"https://soundcloud.com/gil-damoiseaux/mistymorning","previewfilepath":"https://soundcloud.com/gil-damoiseaux/mistymorning","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//-------------------------------------------------------\n// ConwaysLifeGame_Image.glsl   Conway's game of life\n// Simulate 1970's Life Game of the British mathematician \n//   John Horton Conway.  \n//   v0.1 2017-12-25  starting...\n//   v1.0 2018-01-19  first release\n//   v1.1 2018-02-04  accelerated\n//   v1.2 2019-02-09  zoom changed\n//        2019-02-22  small changes\n// tags:  2d, simulation, Conway, life, cellular, automata \n// refs.  https://www.shadertoy.com/view/Xd33WS\n//        https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\n//-------------------------------------------------------\n\nbool zoom = false;\n\n//----------------------------------------------------------\n// get javascript keycode:  http://keycode.info/\n//----------------------------------------------------------\nbool ReadKey(int key, bool toggle)\n{\n  return 0.5 < texture(iChannel3\n    ,vec2((float(key)+0.5) / 256.0, toggle ? 0.75 : 0.25)).x;\n}\n//----------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord / iResolution.xy;\n  vec2 mp = iMouse.xy / iResolution.xy;\n\n  if (ReadKey(KEY_C,false))        // clear all cells ?\n  { fragColor = vec4(0);\n    return;\n  }\n  \n  zoom = ReadKey(KEY_Z, true);     // zoom on/off ?\n  if (zoom) fragColor = texture(iChannel0,(uv+mp)*0.5);\n  else      fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n//-------------------------------------------------------\n// ConwaysLifeGame_BufA.glsl   Conway's game of life\n//   v1.0 2018-01-19  first release\n//   v1.1 2018-02-04  accelerated\n//   v1.2 2019-02-09  zoom changed\n//        2020-11-19  small changes\n//-------------------------------------------------------\n//\n// default key commands:\n//----------------------\n//   Alt-CursorDown: Restart with random pattern\n//   Alt-CursorUp:   alternate pause on/off\n//   Alt:            draw next picture if paused\n//\n// mouse commands:\n//----------------\n//   left mouse button: \n//     zoomed:  slide picture detail\n//     else:    draw some cells\n//-------------------------------------------------------\n\n// radius of drawing random circle cells\n#define RADIUS 0.02\n\n#define START_RANDOM 1\n\n// cell states\nvec4 live = vec4(0.5, 1.0, 0.7, 1.0);\nvec4 dead = vec4(0.0, 0.0, 0.0, 1.0);\nvec4 empty= vec4(0.8, 0.0, 0.5, 1.0);\n\nvec2 uv = vec2(0);\nbool zoom = false;\n    \n//----------------------------------------------------------\nfloat random(vec2 pos) \n{\n  return mod(fract(sin(dot(pos, vec2(14.9898,78.233))) * 43758.5453), 1.0); \n}\n//----------------------------------------------------------\nvec4 Restart()\n{\n  // draw pixels in circle around mouse\n  float rnd1 = random(uv + iTime * RADIUS);\n  if (rnd1 > 0.3) \n       return live;\n  else return empty;\n}\n//----------------------------------------------------------\nvoid GetCell( out vec4 fragColor)\n{\n  uv = gl_FragCoord.xy / iResolution.xy;\n  fragColor = texture(iChannel0, uv);\n}\n//----------------------------------------------------------\nvoid ConwaysLifeGame( out vec4 fragColor, bool doRestart)\n{\n  uv =  gl_FragCoord.xy / iResolution.xy;\n  vec2 mpos = iMouse.xy / iResolution.xy;  \n  vec2 pixel = 1.0 / iResolution.xy;\n  vec2 ratio = vec2 (1.0, iResolution.y / iResolution.x);\n  bool mp = (iMouse.z > 0.0);   // mousePressed?\n  vec4 cell = empty;\n    \n  // draw new cells?\n  if (doRestart || (mp && !zoom && (length((uv - mpos)*ratio) < RADIUS)))\n  {\n    fragColor = Restart();\n    return;                 //==>\n  }\n    \n  vec2 dd = 1.0 / iResolution.xy;  \n  float sum = 0.0;\n  sum += texture(iChannel0, uv + vec2(-dd.x, -dd.y)).g;\n  sum += texture(iChannel0, uv + vec2(-dd.x,   0.0)).g;\n  sum += texture(iChannel0, uv + vec2(-dd.x,  dd.y)).g;\n  sum += texture(iChannel0, uv + vec2( dd.x, -dd.y)).g;\n  sum += texture(iChannel0, uv + vec2( dd.x,   0.0)).g;\n  sum += texture(iChannel0, uv + vec2( dd.x,  dd.y)).g;\n  sum += texture(iChannel0, uv + vec2(  0.0, -dd.y)).g;\n  sum += texture(iChannel0, uv + vec2(  0.0,  dd.y)).g;\n  int cells = int(round(sum));\n  vec4 me = texture(iChannel0, uv);\n\n  if (me.g <= 0.1)    // empty ?\n  {\n    if (cells == 3)         cell = live;\n    else if (me.b > 0.004)  cell = vec4(0., 0., max(me.b - 0.004, 0.25), 1.0);\n    else                    cell = dead;\n  } \n  else if ((cells == 2) || (cells == 3)) cell = live;   // 2 or 3 cells\n//else                                   cell = empty;  // 0 or 1 cell\n\n  fragColor = cell;\n}\n\n\n//----------------------------------------------------------\n// get javascript keycode: http://keycode.info/\n//----------------------------------------------------------\nbool ReadKey(int key, bool toggle)\n{\n  return 0.5 < texture(iChannel3\n    , vec2((float(key)+0.5) / 256.0, toggle ? 0.75 : 0.25)).x;\n}\n//----------------------------------------------------------\nbool KeyDown(int key)\n{\n  return 0.5 < texture(iChannel3, vec2(key,0.25) / 256.0).x;\n}\n//----------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  bool restart = ((iFrame == 0) && START_RANDOM == 1) \n                  || ReadKey(KEY_R, false);\n  \n  bool aStep = ReadKey(KEY_S, false);     // one step ?\n  zoom =   ReadKey(KEY_Z,  true);                       // zoom on/off ?\n  if      (ReadKey(KEY_C, false))  fragColor = empty;   // clear all cells ?\n  else if (ReadKey(KEY_P, true)\n           && !aStep)              GetCell(fragColor);  // pause: get cell\n  else  ConwaysLifeGame (fragColor, restart);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//-------------------------------------------------------\n// ConwaysLifeGame_Common.glsl   Conway's game of life\n//   v1.0 2020-11-19  first release\n//-------------------------------------------------------\n\n//-------------------\n// key commands:\n//-------------------\nconst int KEY_C = 67;  // clear\nconst int KEY_P = 80;  // pause\nconst int KEY_R = 82;  // reset\nconst int KEY_S = 83;  // step\nconst int KEY_Z = 90;  // zoom\n","name":"Common","description":"","type":"common"}]}