{"ver":"0.1","info":{"id":"ct3yzl","date":"1699524889","viewed":158,"name":"Testing datatype / conversion ","username":"FabriceNeyret2","description":"testing https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Conversion_constructors\nAlas, GLSL-ES is not GLSL","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["conversion","spec","datatype","glsles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// testing https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Conversion_constructors\n\n#if 0 // not supported in GLSL-ES :-/\n\n    struct S { float A;vec2 B; };  \n    S a[3] = { {1., {-19., 4.5} }, {-3.0, {2.718, 2.} }, {29.5, {3.142, 3.333} } };\n\n    const float b[] = float[]( 1.,2.,3.) + float[]( 1.,2.,3.);\n\n    vec3 multidim[5][2]; \n\n    uint i = 3;\n\n#endif\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n   U /= iResolution.xy;\n   \n    // supported:\n    mat4 M = mat4( mat2(3) ); // mat2(i) = diag. mat4(mat2): rest is unit matrix\n    O = M[ int(4.*U) ] *.6;\n\n#if 0                    // not clear whether this is the expected behavior (it just ignores the mat4x2) )\n    mat2x4 A = mat2x4( mat4x2(1,.9,.8,.7, .6,.5,.4,.3) );\n    O = A[0]; // = vec4(1 ,.9,0,0);\n    O = A[1]; // = vec4(.8,.7,0,0);\n#endif\n}","name":"Image","description":"","type":"image"}]}