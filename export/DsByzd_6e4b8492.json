{"ver":"0.1","info":{"id":"DsByzd","date":"1688024723","viewed":127,"name":"testShaderSKLBZ","username":"sklbz","description":"just a shader","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\nvec3 a = vec3(0.600, 0.500, 0.500), b = vec3(0.910, 0.600, 0.600), c = vec3(1.058, 1.000, 1.000), \n        d = vec3(0.190, 0.413, 0.557);\n        return a+b*cos(5.283185*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y, uv0 = uv;\n    \n    vec3 finalColor = vec3(0.25);\n    \n    for(float i = 0.0; i < 3.0; i++) {\n    \n        uv = fract(uv * 1.5) - .5;\n    \n        float d = length(uv) + tan(length(uv)) /* * cos(cos(length(uv)) * sin(length(uv0)))*/ * exp(-length(uv0));\n    \n        vec3 col = palette(length(uv0) / 2. + sqrt(exp(length(uv0) + iTime * 0.0058)) /2.  + iTime * .55);\n    \n    \n        \n        d = abs(d);\n    \n        d = sin(d * 8. + iTime + iDate.z) / 8.;\n    \n    \n        d = 0.02 / d;\n\n        finalColor += col * d;\n    }\n\n    float t = clamp(0.1, sin(iTime) + 1.5, 10.);\n\n    float tt = sin((uv0.x + floor(uv0.x-uv0.y))/2. - 5.) - 5.;\n\n    \n\n    fragColor = vec4(finalColor * t, 1.0);\n}","name":"Image","description":"","type":"image"}]}