{"ver":"0.1","info":{"id":"fsKfRV","date":"1658501912","viewed":105,"name":"Rotating LegonCogs","username":"Legonzaur","description":"My second shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 center, float radius, vec3 color){\n    vec2 st = gl_FragCoord.xy/min(iResolution.x,iResolution.y);\n\tfloat pct = 0.0;\n\tpct = distance(st,center);\n    // Each result will return 1.0 (white) or 0.0 (black).\n\tpct = step(radius, pct);\n    return pct;\n}\n\nfloat cog(vec2 pos, float speed, float size){\n    vec2 st = gl_FragCoord.xy/min(iResolution.x,iResolution.y);\n    float r = length(pos)*size;\n    float a = atan(pos.y,pos.x);\n    float f = smoothstep(-.5,1., cos(a*10.+mod(speed*iTime,6.28)))*0.2+0.5;\n    if(circle(pos+st,.1/size, vec3(0)) == 0.){\n        return 0.;\n    }\n    return 1.-smoothstep(f,f+.01,r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = gl_FragCoord.xy/min(iResolution.x,iResolution.y);\n    st *= 2.; \n    st = fract(st); \n    vec2 st2 = gl_FragCoord.xy/min(iResolution.x,iResolution.y);\n    st2 *= 2.; \n    st2 += 0.5;\n    st2 = fract(st2); \n    fragColor = vec4(cog(vec2(0.500)-st, 5., 1.8)) + vec4(cog(vec2(0.50)-st2, -5., 1.8));\n}","name":"Image","description":"","type":"image"}]}