{"ver":"0.1","info":{"id":"Dddczn","date":"1695021010","viewed":35,"name":"line with mask","username":"onopko","description":"line","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["line","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define N 20.\n\n float l2 (vec2 uv, float pct, float m) {\n  \n       return  \n       smoothstep(0. + pct * m, + pct * m, uv.y * abs(sin(iTime))) \n       - smoothstep(0.04 + pct * m, 0.04 + pct * m, uv.y);\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 1. * R.xy) / R.y; // from -1 to 1\n    vec2 uvs = (fragCoord - 0.5 * R.xy) / R.y; \n      \n    vec2 st = fragCoord.xy / R.xy;\n   \n    float line = smoothstep(0., 0., st.y) - smoothstep(0.1, 0.1, st.y);\n          line += smoothstep(0.2, 0.2, st.y) - smoothstep(0.3, 0.3, st.y);\n   \n\n    // Time varying pixel color\n    vec3 col = vec3(line);\n    float a;\n    for (float i = 0.; i < N; i++) {\n    a+= l2(st, i/N, 1.01);\n    }\n    \n    \n    vec3 color =   vec3(0.2 , 0.6, 0.4 * sin(abs(iTime)));\n    \n    float b = smoothstep(0.6, 0., length(uvs.xy));\n\n    // Output to screen\n    fragColor = vec4( vec3(a) * b * color,1.0);\n}","name":"Image","description":"","type":"image"}]}