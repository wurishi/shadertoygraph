{"ver":"0.1","info":{"id":"wl3XDB","date":"1581614440","viewed":280,"name":"Very Cool RayTracer","username":"jamesgriffiths01","description":"Very cool RayTraced sphere for Sajid","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["ray","sphere","raytrace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphereIntersect(vec3 ray, vec3 dir, vec3 center, float radius)\n{\n    vec3 rc = ray-center;\n    float c = dot(rc, rc) - (radius * radius);\n    float b = dot(dir, rc);\n    float d = b*b - c;\n    float t = -b - sqrt(abs(d));\n    float st = step(0.0, min(t,d));\n    return mix(-1.0, t, st);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // units are in mm\n    vec3 sphereCenter = vec3(0.0, 0.0, 10.0);\n    float sphereRadius = 2.0f;\n    \n    vec3 cameraCenter = vec3(0.0, 0.0, -3.0);\n    float imagePlaneDist = 1.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // turn uv from 0-1 to -1-1\n    vec2 newUV = (uv * 2.0) - 1.0;\n    newUV.x *= iResolution.x / iResolution.y;\n    \n    vec4 image = texture(iChannel0, uv);\n    \n    vec3 ray = cameraCenter * imagePlaneDist;\n    \n    vec3 imagePlanePixel = vec3(newUV.x, newUV.y, cameraCenter + imagePlaneDist);\n    \n    vec3 rayDir = normalize(imagePlanePixel - ray);\n    \n    float t = sphereIntersect(ray, rayDir, sphereCenter, sphereRadius);\n    \n    vec3 hitPoint = ray + rayDir * t;\n    \n    t = clamp(t, 0.0, 1.0);\n    \n    vec3 hitNormal = sphereCenter - hitPoint;\n    \n    vec3 lightPos = vec3(-10.0, -10.0, 10.0);\n    \n    float lightLambert = max(dot(hitNormal, normalize(lightPos - hitNormal)), 0.0);\n    \n    vec3 sphereCol = vec3(0.1, 0.25, 1.0);\n    sphereCol *= lightLambert;\n    image *= lightLambert;\n    \n    // Output to screen\n    fragColor = vec4(image * t);\n}","name":"Image","description":"","type":"image"}]}