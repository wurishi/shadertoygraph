{"ver":"0.1","info":{"id":"Xs3BRj","date":"1525811066","viewed":304,"name":"ShaderToy Sound Preview Replica","username":"Rafbeam","description":"ShaderToy Sound Preview Replica by Rafbeam\n\nMusic: NCS - NIVIRO - Memes [NCS Release]","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["2d","shadertoy","replica","soundcloud","prewiev"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MdBSzV","filepath":"https://soundcloud.com/nocopyrightsounds/memes","previewfilepath":"https://soundcloud.com/nocopyrightsounds/memes","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hue(float H);\nvec3 hsv2rgb(vec3 HSV);\n\nvec3 rectangle(vec3 color, vec3 background, vec4 region, vec2 uv);\nvec3 bar(vec3 color, vec3 background, vec2 position, vec2 diemensions, vec2 uv);\nvec3 bars(vec3 background, int bars, sampler2D sound, vec2 uv);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n    \n    color = bars(color, 32, iChannel0, uv);\n    \n    fragColor = vec4(color,1.0);\n}\n\nvec3 bars(vec3 background, int bars, sampler2D sound, vec2 uv)\n{\n    for(int i = 1; i <= bars; i++)\n    {\n        float len = texture(sound, vec2(float(i-1)/float(bars), 0.0)).x;\n        background = bar(hsv2rgb(vec3(0.66666*(1.0-0.95*len), 0.9, 1.0)), background, vec2(float(i)/float(bars+1), 0.0), vec2(1.0/float(bars+1)*0.8, 0.7*len+0.01), uv);\n    }\n    return background;\n}\n\nvec3 bar(vec3 color, vec3 background, vec2 position, vec2 diemensions, vec2 uv)\n{\n    return rectangle(color, background, vec4(position.x, position.y+diemensions.y/2.0, diemensions.x/2.0, diemensions.y/2.0), uv);\n}\n\nvec3 rectangle(vec3 color, vec3 background,  vec4 region, vec2 uv)\n{\n    if(uv.x > (region.r-region.b) && uv.x < (region.r+region.b) &&\n       uv.y > (region.g-region.a) && uv.y < (region.g+region.a))\n    \treturn color;\n    else return background;\n}\n\nvec3 hue(float H)\n{\n    float R = abs(H * 6.0 - 3.0) - 1.0;\n    float G = 2.0 - abs(H * 6.0 - 2.0);\n    float B = 2.0 - abs(H * 6.0 - 4.0);\n    return clamp(vec3(R, G, B), 0.0, 1.0);\n}\n\nvec3 hsv2rgb(vec3 HSV)\n{\n    return vec3(((hue(HSV.r) - 1.0) * HSV.g + 1.0) * HSV.b);\n}","name":"Image","description":"","type":"image"}]}