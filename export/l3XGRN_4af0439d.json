{"ver":"0.1","info":{"id":"l3XGRN","date":"1707231042","viewed":51,"name":"Alien Art","username":"kiyamada96","description":"Alien ARt","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 lightDir = vec3(-0.577, 0.577, 0.577);\nconst float PI = 3.14;\nconst float angle = 90.0;\nconst float fov = angle * 0.5 * PI / 180.0;\n\n// 更新されたdistanceFunc関数\nfloat distanceFunc(vec3 p, float time) {\n    float wave = sin(p.x * 10.0 + time) * cos(p.y * 10.0 + time) * sin(p.z * 10.0 + time);\n    return length(p) - (1.0 + 0.5 * wave);\n}\n\nvec3 getNormal(vec3 p, float time) {\n    float d = 0.01;\n    return normalize(vec3(\n        distanceFunc(p + vec3(d, 0.0, 0.0), time) - distanceFunc(p - vec3(d, 0.0, 0.0), time),\n        distanceFunc(p + vec3(0.0, d, 0.0), time) - distanceFunc(p - vec3(0.0, d, 0.0), time),\n        distanceFunc(p + vec3(0.0, 0.0, d), time) - distanceFunc(p - vec3(0.0, 0.0, d), time)\n    ));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 cPos = vec3(0.0, 0.0, 2.0);\n    vec3 cDir = vec3(0.0, 0.0, -1.0);\n    vec3 cUp = vec3(0.0, 1.0, 0.0);\n    vec3 cSide = cross(cDir, cUp);\n    float targetDepth = 1.0;\n\n    vec3 ray = normalize(vec3(sin(fov) * uv.x, sin(fov) * uv.y, -cos(fov)));\n\n    float dist = 0.0;\n    float rlen = 0.0;\n    vec3 rPos = cPos;\n\n    for (int i = 0; i < 64; i++) {\n        dist = distanceFunc(rPos, iTime);\n        if (abs(dist) < 0.001) break;\n        rlen += dist;\n        rPos = cPos + ray * rlen;\n    }\n\n    if (abs(dist) < 0.001) {\n        vec3 nor = getNormal(rPos, iTime);\n        float diff = clamp(dot(nor, lightDir), 0.1, 1.0);\n        fragColor = vec4(diff * nor * 0.5 + 0.5, 1.0);\n    } else {\n        fragColor = vec4(vec3(0.0), 1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}