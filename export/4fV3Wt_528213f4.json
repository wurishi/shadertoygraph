{"ver":"0.1","info":{"id":"4fV3Wt","date":"1713434657","viewed":29,"name":"eclipseRay","username":"CreatorsLight","description":"testing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circlesdf(vec2 uv, float radius) {\n    return length(uv) - radius;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    //vec2 mp = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n    //mp.x *= iResolution.x / iResolution.y;\n    \n    vec2 mp =vec2(1.5,0.0);\n    float mouse_dist = 1.0 - abs(distance(uv, mp) * 4.);\n    \n    int depth = 100;\n    vec3 col = vec3(0.0);\n\n    if (min(circlesdf(vec2(uv.x-0.6,uv.y + sin(iTime/4.)), 0.1), circlesdf(vec2(uv.x+0.8,uv.y), 0.6)) < 0.01) {\n        vec2 dir = normalize(mp - uv);\n        float delta = 1.0 / float(2000);\n        \n        for (int i = 0; i < 5000; i++) {\n            uv += delta * dir;\n            \n            if (min(circlesdf(vec2(uv.x-0.6,uv.y + sin(iTime/4.)), 0.1), circlesdf(vec2(uv.x+0.8,uv.y), 0.6)) < 0.01) {\n                if (depth <= 0) {\n                    break;\n                }\n                depth -= 1;\n            }\n            \n            if (distance(uv, mp) < 0.001) {\n                col = vec3(1.0, 0.0, 0.0);\n                break;\n            }\n        }\n    }\n    mouse_dist = min(min(circlesdf(vec2(uv.x-0.6,uv.y + sin(iTime/4.)), 0.1), circlesdf(vec2(uv.x+0.8,uv.y), 0.6)),mouse_dist);\n    vec3 mouseLight = vec3(1.0, .0, 0.0);\n    col = max(mouse_dist * mouseLight, col);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}