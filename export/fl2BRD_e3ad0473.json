{"ver":"0.1","info":{"id":"fl2BRD","date":"1651884788","viewed":113,"name":"2D Day-Night Cycle","username":"Runar","description":"2 dimensional simulation of a day night cycle.\n\nCurrently learning shaders and glsl, so any improvements would be appreciated! :D","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define pi 3.14159265359\n\n// Create a circle at pos with color \"circlecol\" and backgroundcolor \"backcol\"\nvec3 circle(in vec2 uv, in vec2 pos, in float size, in float feather, in vec3 backcol, in vec3 circlecol) {\n    float dist = distance(uv, pos) - size;\n    return mix(circlecol, backcol, smoothstep(0.0, feather, dist));\n}\n\n// Replace color \"replace\" with color \"replacewith\" in \"col\"\nvoid replace(inout vec3 col, in vec3 replace, in vec3 replacewith) {\n    col += mix(col, replacewith, step(replace,col));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    \n    // Control time of day (-1 if day, 1 if night)\n    float timeofday = sin(pi/2.0 * cos((iTime + pi) / 2.0));\n    float celestialpos = abs(timeofday) - 0.5;\n    \n    // Rotate sky and get noise from texture\n    mat2 skyrot = mat2(cos(iTime * pi / 25.0), sin(iTime * pi / 25.0), -sin(iTime * pi / 25.0), cos(iTime * pi / 25.0));\n    float noise = texture(iChannel0,skyrot * vec2(uv.x, uv.y + 0.8)).r * 1.1;\n    \n    // Draw sky blue if day, black if night\n    vec3 day = vec3(0.1, 0.6, 0.9);\n    vec3 night = vec3(0.0);\n    \n    // Draw clouds during day\n    float cloudoffset = mod(iTime / 5.0, 4.0) - 2.0;\n    vec3 cloudcol = vec3(0.95, 0.96, 1.0);\n    day = circle(uv, vec2(-0.63 + cloudoffset,0.3), 0.07, 0.005, day, cloudcol);\n    day = circle(uv, vec2(-0.55 + cloudoffset,0.3), 0.067, 0.005, day, cloudcol);\n    day = circle(uv, vec2(-0.59 + cloudoffset,0.37), 0.06, 0.005, day, cloudcol);\n    day = circle(uv, vec2(0.61 + cloudoffset,0.32), 0.05, 0.005, day, cloudcol);\n    day = circle(uv, vec2(0.55 + cloudoffset,0.3), 0.067, 0.005, day, cloudcol);\n    day = circle(uv, vec2(0.55 + cloudoffset,0.37), 0.07, 0.005, day, cloudcol);\n    day = circle(uv, vec2(0.45 + cloudoffset,0.32), 0.08, 0.005, day, cloudcol);\n    day = circle(uv, vec2(0.48 + cloudoffset,0.37), 0.05, 0.005, day, cloudcol);\n    day = circle(uv, vec2(-0.8 + cloudoffset,0.22), 0.067, 0.005, day, cloudcol);\n    day = circle(uv, vec2(-0.9 + cloudoffset,0.23), 0.07, 0.005, day, cloudcol);\n    day = circle(uv, vec2(-0.87 + cloudoffset,0.25), 0.08, 0.005, day, cloudcol);\n    day = circle(uv, vec2(-0.95 + cloudoffset,0.2), 0.05, 0.005, day, cloudcol);\n    \n    // Draw stars during night\n    night = mix(night, vec3(0.42 + uv.x / 10.0, 0.42 + uv.y / 10.0, 0.4), smoothstep(0.95, 1.0 ,noise));\n    \n    // Set skycolor depending on time of day\n    vec3 skycol = mix(day, night, smoothstep(-0.4, 0.2, timeofday));\n    \n    // Draw celestial body yellow if day, bluewhite if night\n    vec3 yellow = vec3(1.0, 1.0, 0.0);\n    vec3 bluewhite = vec3(0.75, 0.85, 1.0);\n    vec3 celecol = mix(yellow, bluewhite, smoothstep(-1.0, 1.0, timeofday));\n    \n    // Create celestial body\n    vec3 col = circle(uv, vec2((mod(iTime, 2.0 * pi) - pi) / pi,celestialpos - 0.3), 0.11, 0.01, skycol, celecol);\n    \n    // Brightness at day, dark at night\n    float brightness = smoothstep(0.1, -0.4, timeofday);\n    \n    // Create ground\n    vec3 groundcol = vec3(0.0, 1.0, 0.0) * brightness;\n    col = circle(uv, vec2(0.0, -1.45), 1.3, 0.007, col, groundcol);\n    \n    // Draw tree stem\n    vec3 treecol = vec3(0.5,0.3,0.2) * brightness;\n    vec2 treepos = vec2(step(vec2(-0.4), uv).x * step(vec2(1.35), 1.0 - uv).x, step(vec2(-0.25), uv).y * step(vec2(1.05), 1.0 - uv).y);\n    col = mix(col, treecol, treepos.x * treepos.y);\n    // Draw tree leaves\n    vec3 leafcol = vec3(0.0, 1.0, 0.0) * brightness;\n    col = circle(uv, vec2(-0.42,-0.07), 0.07, 0.005, col, leafcol);\n    col = circle(uv, vec2(-0.32,-0.05), 0.065, 0.005, col, leafcol);\n    col = circle(uv, vec2(-0.39,0.02), 0.063, 0.005, col, leafcol);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}