{"ver":"0.1","info":{"id":"4llfRj","date":"1512487396","viewed":82,"name":"myRectangle","username":"steko","description":"s","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Band(float valueToProcess, float start, float end, float blur)\n{\n    float fromStart = smoothstep(start - blur, start + blur, valueToProcess);\n    float fromEnd = smoothstep(end + blur, end - blur, valueToProcess);\n    \n    return fromStart * fromEnd;\n}\n\nfloat Rectangle(vec2 pixelCoord, float left, float right, float bot, float top, float blur)\n{\n    float color = Band(pixelCoord.x, left, right, blur);\n    color *= Band(pixelCoord.y, bot, top, blur);\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; // 0 <> 1\n    uv = uv * 10. - 5.; // -5.0 <> 5.0\n    uv.x *= iResolution.x / iResolution.y; // aspect ratio\n    \n    float time = iTime;\n    \n    float x = uv.x;\n    float coef = sin(x + time) * 0.5;\n    \n    float y = uv.y + coef;\n    \n    \n    \n    float color;\n    float blur = 0.1;\n    color = Rectangle(vec2(x, y), -3., 3., -.5, .5, blur);\n    \n    fragColor = vec4(vec3(color), 1.);\n}","name":"Image","description":"","type":"image"}]}