{"ver":"0.1","info":{"id":"fd23zR","date":"1616848424","viewed":276,"name":"Hypnosis (polar c.s.)","username":"Paws22","description":"My friend made me do it.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["polar","hypno"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist( vec2 pol )\n{\n    pol.x = fract(pol.x);\n    if (pol.x >= pol.y)\n    {\n        pol.y += 0.5;\n        return abs(pol.x - pol.y);\n    }\n    else\n    {\n        pol.y -= 0.5;\n        return abs(pol.x - pol.y);\n    }\n}\n\nmat2 _rot(float th)\n{\n\tvec2 a = sin(vec2(1.5707963, 0) + th);\n\treturn mat2(a.xy, -a.y, a.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    mat2 rot = _rot(-iTime * 10.0);\n    \n    uv *= 2.0;\n    uv *= rot;\n    \n    float rad = acos(dot(normalize(uv), vec2(1.0, 0.0)));\n    \n    float angle = degrees(rad) / 360.0;\n    if (uv.y < 0.0)\n        angle = 1.0 - angle;\n    \n    float l = length(uv);\n    \n    vec2 polar = vec2(l, angle);\n    \n    polar.x *= 2.0;\n    \n    float d = dist(polar);\n    \n    vec3 col = vec3(sign(d - 0.3));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}