{"ver":"0.1","info":{"id":"DtV3RW","date":"1684603634","viewed":57,"name":"Moon Reflection On Water","username":"elvinista","description":"Moon raising and reflecting itself on the water","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["round"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 p, float r, float blur)\n    {\n    float c = length(uv - p);\n    return smoothstep(r, r - blur, c);\n}\n\nfloat N21(vec2 co) { \n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453); \n}\n\nconst float PI = 3.1416;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    st.x -= 0.5;\n    st.x *= iResolution.x/iResolution.y;\n    \n    float r = 0.44; // radius of the moon, best with 0.3 or above\n    float t = iTime;\n                   \n    float scale = 0.1; // scale time\n    vec2 mirrorUV = vec2(st.x, abs(st.y - 0.5)) * 2.;\n    vec2 cPos = vec2(0., fract(t * scale) - 0.24) * 2.;\n    // cPos.y = -0.24 * 2.;\n    \n    float c = circle(mirrorUV, cPos, r, 0.01); // 2 circles\n    float moon = c; // for progress video\n    float glow = circle(mirrorUV, cPos, r + 0.2, 0.5);\n    \n    // modified Y coordinate\n    float mody = st.y / r - r;\n    mody = clamp(mody, 0., 1.);\n    \n    float wave = sin(fract((st.x + st.y) * 10. + t * 1.) * PI);\n    float stripe = sin(fract(st.y * 20. + t * 0.55) * PI - st.y);\n    // stripe = abs(sin(st.y * PI * 20. + t * 0.2)) - st.y + 0.4;\n    // stripe = step(stripe, 0.8);\n\n    // water distortion\n    float distortion = fract(st.x * 1. + sin(st.y * 50. + t * 1.0));\n    distortion = sin(distortion * PI) * (1. - st.y);\n    float ripple = distortion;\n    distortion = smoothstep(0.45, 0.99, ripple * stripe);\n    // distortion = clamp(distortion, 0., 1.);\n\n    // making starfield\n    float noise = N21(st);\n    float starShapeFunc = smoothstep(0.5, 1., st.y) + smoothstep(0.6, 0., st.y);\n    float star = smoothstep(0.006, 0., noise) * smoothstep(0.5, 1.,st.y);\n    \n    // UPDATE 23/9/2023: Sparkling removed due to:\n    // Not working consistently on other device\n    // But you can uncomment to see the star sparkling (a bit)\n    float spark = smoothstep(0.006, 0.00, noise * N21(st + t * 0.1) * wave );\n    // star /= spark;\n    star -= c;\n    star = clamp(star, 0., 1.);\n    \n    // star reflection on water\n    float reflection = smoothstep(0.006, 0., noise) * smoothstep(0.6, 0.,st.y);\n    //reflection /= spark;\n    reflection = clamp(reflection, 0., 1.);\n    \n    // reduce brightness in water\n    float reflectionFix = c * distortion * mody + reflection * c * 0.25;\n    \n    // combining things\n    c *= mody;\n    c += distortion + star + reflection + glow - glow * star;\n    c -= reflectionFix;\n    c = clamp(c, 0., 1.);\n\n    // COLORING\n    vec3 bg = mix(vec3(0.), vec3(0.01,0.02,0.03), starShapeFunc);\n    vec3 starColor = mix(vec3(0., 0., 0.0), vec3(0.,1.,1.), star + reflection);\n\tvec3 moonColor = mix(vec3(0., 0., 1.), vec3(1.,1.,1.), c + starColor - star - reflection);\n\tvec3 pct = mix(vec3(0.0,0.,0.), vec3(.9, 0.9, 1.), c);\n    vec3 color = mix(bg, moonColor, pct);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}