{"ver":"0.1","info":{"id":"WtXfRj","date":"1598740809","viewed":46,"name":"TFG 3-1 Circunferencia Exacta","username":"lukasharing","description":"SDF m√°s simple de R^2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPSILON 0.01\n\nfloat SDFCircunferencia(vec2 p, float r){\n\treturn length(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Preservamos el ratio aspecto y re-centramos\n    vec2 uv = (fragCoord-iResolution.xy * 0.5)/min(iResolution.x, iResolution.y);\n    // Para cada punto p (uv), aplicamos la funcion de distancia con signo\n    float d = SDFCircunferencia(uv, 0.3);\n    \n    vec3 col;\n    if(abs(d) < EPSILON){\n        col = vec3(1.0);\n    }else{\n        if(d < 0.0){\n    \t\tcol = vec3(1.0, 0., 0.);\n    \t}else{\n    \t\tcol = vec3(0., 0., 1.0);\n    \t}\n        // Numero de repeticiones\n        float k = 30.0;\n        // Tomamos la distancia en valor absoluto y nos quedamos con la parte fraccional\n        // Este valor esta [0,1].\n        col = col * (0.5 + 0.5 * (fract(abs(d) * k)));\n    }\n    \n    // Devolvemos el color asignado\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}