{"ver":"0.1","info":{"id":"clffRH","date":"1692569320","viewed":66,"name":"menger fun","username":"SnackEater","description":"menger fun","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float box(vec3 z,float size){\n    z = abs(z)-size;\n    return max(max(z.x,z.y),z.z);\n}\nfloat C(vec3 z,float size){\n    z = abs(z)-size;\n    float cx = min(z.z,z.y);\n    float cy = min(z.x,z.z);\n    float cz = min(z.x,z.y);\n    return max(max(cx,cy),cz);\n    \n}\nfloat SDF(vec3 z){\nfloat a = iTime;\n  z.xz *= mat2(cos(a),-sin(a),sin(a),cos(a));\n  z.xy *= mat2(cos(a),-sin(a),sin(a),cos(a));\n  float size =.5;\n  float d = box(z,size);\n  float d2;\n  for(int i = 0; i<4;i++){\n  z = mod(z + size,2. * size)-size;\n  size/=3.;\n  d2 = C(z,size);\n  d = max(d,-d2);\n  }\n  return d;\n}\nvec3 Normal(vec3 z){\n    vec2 e = vec2(0.0001,0);\n    float d = SDF(z);\n    \n    vec3 n = d - vec3(SDF(z -e.xyy),SDF(z-e.yxy),SDF(z - e.yyx));\n    return normalize(n.xyz);\n    \n    \n}\nfloat SimpleLight(vec3 z){\n    \n    \n    return max(dot(normalize((vec3(0,1,-1))),Normal(z)),0.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    \n    vec2 uv = (fragCoord-.5 *iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    vec3 Origin = vec3(0,0,-2);\n    vec3 Direction = normalize(vec3(uv,1));\n    vec3 z = Origin;\n    float Dist;\n    bool Hit;\n    for(int i =0;i<100;i++){\n        Dist = SDF(z);\n        z += Direction * Dist;\n        if(Dist < 0.001){\n            Hit = true;\n        }\n    }\n   if(mod(floor(iTime),2.) == 0.){\n    col.rb += (.1/length(z));\n   }\n   if(mod(floor(iTime),1.) == 0.){\n    col.r += (.1/length(z));\n   }\n    if(Hit)col +=SimpleLight(z);\n    if(!Hit)col.gb +=.7;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}