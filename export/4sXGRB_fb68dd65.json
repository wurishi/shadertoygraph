{"ver":"0.1","info":{"id":"4sXGRB","date":"1455399986","viewed":160,"name":"TinyFont","username":"danbri","description":"Experimenting with tiny GLSL font. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","font"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define font_size 35. \n#define font_spacing .035\n\n#define A_ vec2(0.,0.)\n#define B_ vec2(1.,0.)\n#define C_ vec2(2.,0.)\n\n#define D_ vec2(0.,1.)\n#define E_ vec2(1.,1.)\n#define F_ vec2(2.,1.)\n\n#define G_ vec2(0.,2.)\n#define H_ vec2(1.,2.)\n#define I_ vec2(2.,2.)\n\n#define J_ vec2(0.,3.)\n#define K_ vec2(1.,3.)\n#define L_ vec2(2.,3.)\n\n#define M_ vec2(0.,4.)\n#define N_ vec2(1.,4.)\n#define O_ vec2(2.,4.)\n\n#define P_ vec2(0.,5.)\n#define Q_ vec2(1.,5.)\n#define R_ vec2(1.,5.)\n\n#define S_ vec2(0.,6.)\n#define T_ vec2(1.,6.)\n#define U_ vec2(1.,6.)\n\n#define A(p) t(G_,I_,p) + t(I_,O_,p) + t(O_,M_, p) + t(M_,J_,p) + t(J_,L_,p) \n#define B(p) t(A_,M_,p) + t(M_,O_,p) + t(O_,I_, p) + t(I_,G_,p) \n#define C(p) t(I_,G_,p) + t(G_,M_,p) + t(M_,O_,p) \n#define D(p) t(C_,O_,p) + t(O_,M_,p) + t(M_,G_,p) + t(G_,I_,p)\n#define E(p) t(O_,M_,p) + t(M_,G_,p) + t(G_,I_,p) + t(I_,L_,p) + t(L_,J_,p)\n#define F(p) t(B_,A_,p) + t(A_,M_,p) + t(M_,G_,p) + t(G_,H_,p)\n#define G(p) t(O_,M_,p) + t(M_,G_,p) + t(G_,I_,p) + t(I_,U_,p) + t(U_,S_,p)\n#define H(p) t(A_,M_,p) + t(M_,G_,p) + t(G_,I_,p) + t(I_,O_,p) \n#define I(p) t(G_,H_,p) + t(H_,N_,p) \n#define J(p) t(G_,H_,p) + t(H_,T_,p) + t(T_,S_,p)\n#define K(p) t(A_,M_,p) + t(M_,I_,p) + t(I_,K_,p) + t(K_,O_,p)\n#define L(p) t(B_,N_,p)\n#define M(p) t(M_,G_,p) + t(G_,H_,p) + t(H_,N_,p) + t(N_,H_,p) + t(H_,I_,p) + t(I_,O_,p)\n#define N(p) t(M_,G_,p) + t(G_,I_,p) + t(I_,O_,p)\n#define O(p) t(G_,I_,p) + t(I_,O_,p) + t(O_,M_, p) + t(M_,G_,p)\n#define P(p) t(S_,G_,p) + t(G_,I_,p) + t(I_,O_,p) + t(O_,M_,p)\n#define Q(p) t(U_,I_,p) + t(I_,G_,p) + t(G_,M_,p) + t(M_,O_,p)\n#define R(p) t(M_,G_,p) + t(G_,I_,p)\n#define S(p) t(I_,G_,p) + t(G_,J_,p) + t(J_,L_,p) + t(L_,O_,p) + t(O_,M_,p)\n#define T(p) t(B_,N_,p) + t(N_,O_,p)\n#define U(p) t(G_,M_,p) + t(M_,O_,p) + t(O_,I_,p) \n#define V(p) t(G_,J_,p) + t(J_,N_,p) + t(N_,L_,p) + t(L_,I_,p)\n#define W(p) t(G_,M_,p) + t(M_,N_,p) + t(N_,H_,p) + t(H_,N_,p) + t(N_,O_,p) + t(O_,I_,p)\n#define X(p) t(G_,O_,p) + t(O_,K_,p) + t(K_,M_,p) + t(M_,I_,p)\n#define Y(p) t(G_,M_,p) + t(M_,O_,p) + t(O_,I_,p) + t(I_,U_,p) + t(U_,S_,p)\n#define Z(p) t(G_,I_,p) + t(I_,M_,p) + t(M_,O_,p)\n\nuniform float time;\nuniform vec2 resolution;\n\nfloat min_distance(vec2 v, vec2 w, vec2 p) {  // thanks http://glsl.heroku.com/e#6140.0\t\n  \tfloat l2 = (v.x - w.x)*(v.x - w.x) + (v.y - w.y)*(v.y - w.y); //length_squared(v, w);  // i.e. |w-v|^2 \n  \tif (l2 == 0.0) { return distance(p, v); }\n  \tfloat t = dot(p - v, w - v) / l2;\n  \tif(t < 0.0) { return distance(p, v); } \n\telse if (t > 1.0) { return distance(p, w); }\n  \tvec2 projection = v + t * (w - v);  \n\treturn distance(p, projection);\n}\n\nfloat textColor(vec2 from, vec2 to, vec2 p) {\n\tp *= font_size;\n\tfloat inkNess = 0., nearLine, corner, strokeWidth = 0.05;\n        nearLine = min_distance(from,to,p); // basic distance from segment, \n        inkNess += smoothstep(0., 1., 1.- 14.*(nearLine - strokeWidth)); // ugly still\n        inkNess += smoothstep(0., 3.2, 1.- (nearLine  + 6. * strokeWidth)); // glow\n\treturn inkNess;\n}\n\nvec2 grid(vec2 letterspace) { return ( vec2( (letterspace.x / 1.8) * .65 , 1. - ((letterspace.y / .45) * 1.55) ));}\nfloat t(vec2 from, vec2 to, vec2 p) {  return textColor(grid(from), grid(to),p);  }\n\nvec2 r(vec2 p, float r) { // to the right ...\n  p.y -= .8;\t\n  p.x -= font_spacing * r;\t\n  return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat ink, ink2, ink3, ink4 = 0., time = iTime;\n\tvec3 col = vec3(0.05,0.05,0.05);  // b/g \n\tvec2 c = vec2(resolution.x/2.0, resolution.y/2.0);\n\tvec2 p = fragCoord.xy/iResolution.xy; // our pixel\n   // vec2 uv = fragCoord.xy / iResolution.xy;\n\n        ink4 += A(r(p,1.)) + B(r(p,2.)) + C(r(p,3.)) ;\n\tink3 += D(r(p,4.)) + E(r(p,5.)) + F(r(p,6.)) ;\n\tink2 += G(r(p,7.)) + H(r(p,8.)) + I(r(p,9.)) + J(r(p,10.)) + K(r(p,11.)) ;\n\tink2 += L(r(p,12.)) + M(r(p,13.)) + N(r(p,14.)) + O(r(p,15.)) + P(r(p,16.)) + Q(r(p,17.)) + R(r(p,18.)) + S(r(p,19.)) + T(r(p,20.));\n        ink += U(r(p,21.)) + V(r(p,22.)) + W(r(p,23.)) + X(r(p,24.)) + Y(r(p,25.)) + Z(r(p,26.)) ;\n\t\n        col += vec3(ink,0.,0.);  \n\t// blend between zigzag FGQOKF in green, and 'e' (OMGILJ) in red\n\tcol += mix( vec3(ink,cos(time/2.) * ink,0.), vec3(0., ink2, ink - ink2), (sin(.9 * time)));\n\tcol += vec3(0., 0., ink3 * (5.  * p.x));\n\tcol += vec3(0., ink4, 0.0);\n\n\t// example background from http://glsl.heroku.com/e#9742.3\n\t\n\tvec2 v=(fragCoord.xy-(resolution*0.5))/min(resolution.y,resolution.x)*10.0;\n\tfloat t=time * 0.4,r=2.0;\n\tfor (int i=1;i<4;i++){\n\t\tfloat d=(3.14159265 / float(6))*(float(i)*14.0);\n\t\tr+=length(vec2(v.y,v.x))+1.21;\n\t\tv = vec2(v.x+cos(v.y+cos(r)+d)+cos(t),v.y-sin(v.x+cos(r)+d)+sin(t));\n\t}\n        r = (sin(r*0.05)*0.5)+0.5;\n\tr = pow(r, 30.0);\n\tcol += .2 * vec3(r,pow(max(r-0.75,0.0)*4.0,2.0),pow(max(r-1.875,0.1)*5.0,4.0) );\n\t\n\t\n        fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}