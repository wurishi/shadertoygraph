{"ver":"0.1","info":{"id":"4tSGWR","date":"1428108336","viewed":299,"name":"bobbing grass","username":"public_int_i","description":"waving grass, work in progress\n\nmy goal is to make the grass model better and to fix the lighting artifacts","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grass","bobbing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n#define epil .01\n\nconst vec3 ne = vec3(.04,0,0);\n\nvec3 lightDir = normalize(vec3(2.,20.,4.));\n\n\nconst vec2 repSize = vec2(1.,1.);\nconst vec2 repSize2 = vec2(.5,.5);\nfloat one_grass(in vec3 rp) {\n    vec3 dp = vec3( mod(rp.xz,repSize)-repSize2,\n                   rp.y).xzy;\n\n    dp.x += pow(cos(rp.y),6.)*cos(iTime+floor(rp.x)+floor(rp.z));\n    \n    dp.y += 1.;\n    dp.y *= .1;\n    \n    return (length(dp)-.02);\n}\nfloat grass(in vec3 rp) {\n\treturn min(one_grass(rp),min(one_grass(rp+vec3(0.75,0.,0.75)),min(one_grass(rp+vec3(0.75,0.,0.5)),min(one_grass(rp+vec3(0.75,0.,0.25)),min(one_grass(rp+vec3(0.75,0.,0)),min(one_grass(rp+vec3(0.5,0.,0.75)),min(one_grass(rp+vec3(0.5,0.,0.5)),min(one_grass(rp+vec3(0.5,0.,0.25)),min(one_grass(rp+vec3(0.5,0.,0)),min(one_grass(rp+vec3(0.25,0.,0.75)),min(one_grass(rp+vec3(0.25,0.,0.5)),min(one_grass(rp+vec3(0.25,0.,0.25)),min(one_grass(rp+vec3(0.25,0.,0)),min(one_grass(rp+vec3(0,0.,0.75)),min(one_grass(rp+vec3(0,0.,0.5)),min(one_grass(rp+vec3(0,0.,0.25)),one_grass(rp+vec3(0,0.,0))))))))))))))))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(.5);\n    uv.y *= iResolution.y/iResolution.x;\n\tvec3 rp = vec3(0,0,0);\n    vec3 rd = vec3(0,0,1);\n    rd = normalize(cross(rd,vec3(0,1,0))*uv.x+vec3(rd.x,rd.y+uv.y,rd.z));\n    \n    float d,len = 0.;\n    for (int i = 0; i < 90; i++) {\n        d = min(grass(rp),rp.y+1.);\n        if (d < epil) {\n            break;\n        }\n        \n        rp += rd*d;\n    \tlen += d;\n    }\n    \n    if (len < 50.) {\n        if (grass(rp) < epil) {\n            \n            vec3 norm = normalize(vec3(grass(rp+ne)-grass(rp-ne),\n                                  grass(rp+ne.yxz)-grass(rp-ne.yxz),\n                                  grass(rp+ne.zyx)-grass(rp-ne.zyx)));\n            \n            vec3 c = vec3(.2,.8,.4);\n            c = c*.2 + c*max(0.,dot(lightDir,norm));\n            \n            fragColor = vec4(c,1);\n            \n        } else {\n        \n        \tif (rp.y+1. < epil) {\n                \n                vec3 c = texture(iChannel0,rp.xz).xyz;\n                c = c;\n                \n        \t\tfragColor = vec4(c,1);\n            } else {\n                fragColor = vec4(1);\n            }\n            \n        }\n    } else {\n        fragColor = vec4(1);\n    }\n}","name":"","description":"","type":"image"}]}