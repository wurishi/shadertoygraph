{"ver":"0.1","info":{"id":"4sByRy","date":"1492509552","viewed":139,"name":"Mom, I made a raytracer!","username":"slerpy","description":"My first ever raytracer!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\n#define FAR 25.\n#define ITER 250\n#define QUA .001\n\nfloat map(vec3 ray)\n{   \n    vec3 cen = round(ray*3.)/3.;\n    float rad = length(cen.xy-vec2(0.))/(7.+4.*sin(iTime/16.));\n    return length(ray-cen) - rad;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    \n    float ang = atan(uv.x,uv.y)+sin(iTime/3.)/3.;\n    uv = vec2(sin(ang),cos(ang))*length(uv);\n    \n    float d = 0.;\n    for(int i=0; i<ITER; i++) {\n        vec3 ray = vec3(uv,1.)*d;\n        vec3 acid = pow(d,3.)/80.*vec3(cos(iTime/8.),sin(iTime/8.),0.);\n        vec3 shift = vec3(vec2(0.),iTime);\n        float m = map(ray+acid+shift);\n        if(m < QUA*d || abs(d) > 24.)break;\n        d += .5 * m;\n    }\n    \n\tfragColor = vec4(1.-d/FAR);\n    if(abs(mod(d+iTime,2.))>1.) {\n        fragColor *= round(mod(16.*(d+1.2*iTime),2.))\n            *vec4(sin(iTime), sin(iTime+TAU/3.), sin(iTime+2.*TAU/3.), 0.);\n    }\n}\n","name":"Image","description":"","type":"image"}]}