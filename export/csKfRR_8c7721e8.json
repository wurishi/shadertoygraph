{"ver":"0.1","info":{"id":"csKfRR","date":"1697830587","viewed":40,"name":"20. Frost","username":"Ladus","description":"Inktober 2023 Day 20. A snowflake","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["frost","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// Parameters\nfloat rootLength = 0.45;\nfloat tendrilEvery = 0.10;\nfloat tendrilStart = 0.3;\nfloat longestTendrils = 0.15;\n\n\nfloat snowFlakeSegment(in vec2 p){\n    // mirror\n    p = vec2(abs(p.x),p.y);\n    \n    // root line\n    float r = sdSegment(p, vec2(0.,0.), vec2(0.,rootLength));\n    \n    // side lines\n    for(float i = tendrilStart; i < 1.; i += tendrilEvery) {\n    \n        float height = i*rootLength;\n\n        vec2 start = vec2(0.,height);\n        vec2 end = vec2(.05+(sin(i*PI)*longestTendrils),height);\n        float length = distance(start,end);\n        r = min(r, sdSegment(p, start, end + vec2(0.,.3*length)));\n    }\n    \n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = ((fragCoord/iResolution.xy) - vec2(0.5,0.5)) * 2.;\n    p.x *= iResolution.x / iResolution.y;\n    float aa = 0.005;\n    float loopingTime = 1.-fract(iTime/8.)*PI*2.;\n\n    float animatedScaleFactor = (sin(loopingTime)+1.)/2.;\n    rootLength -= animatedScaleFactor*0.5-0.5;\n    tendrilEvery += animatedScaleFactor*0.3;\n    longestTendrils += animatedScaleFactor*0.1;\n    tendrilStart -= animatedScaleFactor*0.1;\n    \n    // Make p octa radial symmetric. Lended from Inigo Quilez's sdOctogon @ https://www.shadertoy.com/view/llGfDG\n    const vec2 k = vec2(\n        -0.9238795325,\n        0.3826834323);\n    p = abs(p);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n\n    float v = smoothstep(0.4+aa, 0.-aa,sqrt(snowFlakeSegment(p)*5.));\n    \n    v = max(v, length(p)*0.05);\n\n    // Output to screen\n    fragColor = vec4(mix(\n        vec3(0.,0.,0.05), // Dark\n        vec3(1.,.8,2.), // Light\n        v), 1.0);\n}","name":"Image","description":"","type":"image"}]}