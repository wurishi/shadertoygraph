{"ver":"0.1","info":{"id":"MdKczw","date":"1528804873","viewed":79,"name":"LINDA","username":"GuntherRox","description":"linda,bored, practicing ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["i"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RADIUS 0.02\n\nbool circle (vec2 uv, vec2 p, float radius)\n{\n    float dist = sqrt((uv.x - p.x)*(uv.x - p.x) + (uv.y - p.y)*(uv.y - p.y));\n    if(dist<radius)\n        return true;\n    \n    else return false;\n              \n}\n\nfloat dist_to_line(vec2 p1, vec2 p2, vec2 uv)\n{\n\tfloat a = abs(distance(p1, uv));\n\tfloat b = abs(distance(p2, uv));\n\tfloat c = abs(distance(p1, p2));\n\n\tfloat d = abs(sqrt(c*c + RADIUS*RADIUS));\n    \n\tif (a >= d || b >= d)\t{\n        float dist1 = distance(p1, uv);\n        float dist2 = distance(p2, uv);\n        return min(dist1,dist2);\n\t}\n\n\tfloat p = (a + b + c) * 0.5;\n\n\tfloat h = 2.0 / c * sqrt( p * ( p - a) * ( p - b) * ( p - c));\n    return h;\n}\n\nfloat falloff(float dist)\n{\n    if (dist*1.5 > RADIUS) {\n        return 0.0;\n    } else {\n        return 1.;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 uv = fragCoord/iResolution.xy;\n   \t//uv -= .5; \n    uv.x *= iResolution.x/iResolution.y;\n    \n  \n    uv += cos(iTime)*.06;\n    \n    uv.x += -0.5;\n    \n    //legs line\n    vec2 p1 = vec2(.2,.1);\n    vec2 p2 = vec2(.2,.25);\n    float dist1 = dist_to_line(p1, p2, uv);        \n\tfloat i1 = falloff(dist1);\n    \n    //legs line\n    vec2 p3 = vec2(.3,.1);\n    vec2 p4 = vec2(.3,.25);\n    float dist2 = dist_to_line(p3, p4, uv);        \n\tfloat i2 = falloff(dist2);\n\t\n    //fragColor = vec4(i1,0,1,1); \n\t\n    \n    //arm line\n    \n    vec2 p5 = vec2(.38,.34);\n    vec2 p6 = vec2(.48,.4+sin(iTime*5.)/9.);\n    float dist3 = dist_to_line(p5, p6, uv);        \n\tfloat i3 = falloff(dist3);\n\t\n    vec2 p7 = vec2(.12,.34);\n    vec2 p8 = vec2(.05,.4-sin(iTime*5.)/9.);\n    float dist4 = dist_to_line(p7, p8, uv);        \n\tfloat i4 = falloff(dist4);\n    \n    fragColor = vec4(i1+i2 + i3 + i4*.5,0,.5,1);\n    \n     \n    //i dot\n    vec2 c2 = vec2 (.25, .35);\n    float rBody = 0.13;\n    \n    bool isAdot = circle(uv, c2, rBody );\n    \n    if(isAdot == true)\n           fragColor = vec4(1.*.5+1.,.5,1,1);\n    \n    //Ball\n    vec2 c3 = vec2 (5. * sin(iTime*5.)/50., .5);\n    float rBall = 0.02;\n    \n    bool isABall = circle(uv, c3, rBall );\n    \n    if(isAdot == true || isABall == true)\n           fragColor = vec4(1.*sin(iTime)*.5+1.,.5,1,1);\n    \n    vec3 c1 = texture(iChannel0, uv*1.2).rgb;\n   \t\n    if(uv.y < 0.1)\n    fragColor.rgb = c1;\n    \n    \n    // Eyes Draw\n    \n    vec2 leftEye1 = vec2 (.18, .38);\n    vec2 rightEye2 = vec2 (.30, .38);\n\n\tfloat leftEyeRadius1 = 0.04;\n    float rightEyeRadius2 = 0.04;\n    \n    bool isInlEye = circle (uv, leftEye1, leftEyeRadius1);\n    if (isInlEye) fragColor = vec4 (0.5,.2,0.4,1);\n\n\tbool isInrEye = circle (uv, rightEye2, rightEyeRadius2);\n    if  (isInrEye) fragColor = vec4 (0.5,.2,.4,0); \n    \n   // Pupils Eyes Draw\n    \n    vec2 leftEye3 = vec2 (.18, .38 + (.01 + sin(iTime)/35.));\n    vec2 rightEye4 = vec2 (.30, .38 + (.01 - sin(iTime)/35.));\n\n\tfloat leftEyeRadius3 = 0.02;\n    float rightEyeRadius4 = 0.02;\n    \n    bool isInlEye1 = circle (uv, leftEye3, leftEyeRadius3);\n    if (isInlEye1) fragColor = vec4 (0,0,0,0);\n\n\tbool isInrEye1 = circle (uv, rightEye4, rightEyeRadius4);\n    if  (isInrEye1) fragColor = vec4 (0,0,0,0); \n    \n    \n}","name":"Image","description":"","type":"image"}]}