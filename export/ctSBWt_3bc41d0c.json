{"ver":"0.1","info":{"id":"ctSBWt","date":"1695633535","viewed":104,"name":"Neural Network (Back Prop)","username":"MacLin","description":"Neural Network (Back Prop)","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["pathtracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec2 mouseCoords = iMouse.xy / iResolution.xy;\n    if ((mouseCoords.x > 0.001 && uv.x > mouseCoords.x) || (mouseCoords.x == 0. && uv.x > 0.5)) \n    {\n        fragColor = texture(iChannel0, uv);\n    }\n    else\n    {\n        vec4 w1_b1_w2_b2 = texture(iChannel1, uv);\n        vec4 w3_b3_w4_b4 = texture(iChannel2, uv);\n        vec4 w5_b5_w6_b6 = texture(iChannel3, uv);\n        \n        float t = getT(iTime);\n        vec3 rgb = forwardPropagationPrediction(t, w1_b1_w2_b2, w3_b3_w4_b4, w5_b5_w6_b6);\n\n        fragColor = vec4(rgb, 1.0);\n        // fragColor = w1_b1_w2_b2;\n        // fragColor = w3_b3_w4_b4;\n        // fragColor = w5_b5_w6_b6;    \n    }\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define MOVABLE_IMAGE\n#define BUBBLE_IMAGE\n#define LEARNING_RATE 0.005\n#define CLIP_DURATION 60.\n#define TRAIN_DURATION (CLIP_DURATION)\n#define PI 3.1415926535897932384626433832\n#define MAX_U 1.0\n#define MAX_V 1.0\n\n#define FAST_TANH\n\nfloat rnd(vec2 n)\n{\n    return fract(sin(dot(n.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat getT(float iTime)\n{\n    return 0.5 + 0.5 * cos(iTime * PI);\n}\n\nfloat ReLU(float x)\n{\n    return max(0., x);\n}\n\nfloat ReLUDerivative(float x)\n{\n    return step(0., x);\n}\n\nfloat sigmoid(float x)\n{\n    return 1.0 / (1.0 + exp(-x));\n}\n\nfloat sigmoidDerivative(float x)\n{\n    float s = sigmoid(x);\n    \n    return s * (1.0 - s);\n}\n\n#ifdef FAST_TANH\nfloat Tanh(float x)\n{\n  float x2 = x * x;\n  float a = x * (135135.0 + x2 * (17325.0 + x2 * (378.0 + x2)));\n  float b = 135135.0 + x2 * (62370.0 + x2 * (3150.0 + x2 * 28.0));\n  \n  return a / b;\n}\n#else\nfloat Tanh(float x)\n{\n    float s = exp(x);\n    \n    return (s - 1.0 / s) / (s + 1.0 / s);\n}\n#endif\nfloat TanhDerivative(float x)\n{\n    float s = Tanh(x);\n    \n    return 1.0 - s * s;\n}\n\nfloat activation(float x)\n{\n    return ReLU(x);\n    // return sigmoid(x);\n    // return Tanh(x);\n}\n\nfloat activationDerivative(float x)\n{\n    return ReLUDerivative(x);\n    // return sigmoidDerivative(x);\n    // return TanhDerivative(x);\n}\n\n//\nvec4 ReLU(vec4 x)\n{\n    return max(vec4(0.), x);\n}\n\nvec4 ReLUDerivative(vec4 x)\n{\n    return step(0., x);\n}\n\n\nvec4 sigmoid(vec4 x)\n{\n    return 1.0 / (1.0 + exp(-x));\n}\n\nvec4 sigmoidDerivative(vec4 x)\n{\n    vec4 s = sigmoid(x);\n    \n    return s * (1.0 - s);\n}\n\n#ifdef FAST_TANH\nvec4 Tanh(vec4 x)\n{\n  vec4 x2 = x * x;\n  vec4 a = x * (135135.0 + x2 * (17325.0 + x2 * (378.0 + x2)));\n  vec4 b = 135135.0 + x2 * (62370.0 + x2 * (3150.0 + x2 * 28.0));\n  \n  return a / b;\n}\n#else\nvec4 Tanh(vec4 x)\n{\n    vec4 s = exp(x);\n    \n    return (s - 1.0 / s) / (s + 1.0 / s);\n}\n#endif\nvec4 TanhDerivative(vec4 x)\n{\n    vec4 s = Tanh(x);\n    \n    return 1.0 - s * s;\n}\n\n\nfloat MSE(vec4 y, vec4 yHat)\n{\n    vec4 diff = y - yHat;\n    float loss = dot(diff, diff) * 0.25;\n\n    return loss;\n}\n\nvec4 MSEDerivative(vec4 y, vec4 yHat)\n{\n    return y - yHat;\n}\n\nvec4 activation(vec4 x)\n{\n    return ReLU(x);\n    // return sigmoid(x);\n    // return Tanh(x);\n}\n\nvec4 activationDerivative(vec4 x)\n{\n    return ReLUDerivative(x);\n    // return sigmoidDerivative(x);\n    // return TanhDerivative(x);\n}\n\nfloat loss(vec4 y, vec4 yHat)\n{\n    return MSE(y, yHat);\n}\n\nvec4 lossDerivative(vec4 y, vec4 yHat)\n{\n    return MSEDerivative(y, yHat);\n}\n\n\n\nfloat meanSquaredError(vec3 groundTruth, vec3 prediction)\n{\n    vec3 diff = groundTruth - prediction;\n    float loss = ((diff.x * diff.x) + (diff.y * diff.y) + (diff.z * diff.z)) * (1. / 3.);\n\n    return loss;\n}\n\nvec3 meanSquaredErrorGrad(vec3 groundTruth, vec3 prediction)\n{\n    return prediction - groundTruth;\n    \n    vec3 predXYZ = prediction;\n    vec3 truthXYZ = groundTruth;\n\n    return vec3\n    (\n        (predXYZ.r - truthXYZ.r),\n        (predXYZ.g - truthXYZ.g),\n        (predXYZ.b - truthXYZ.b)\n    );\n}\n\nvec3 forwardPropagationPrediction(float t, vec4 w1_b1_w2_b2, vec4 w3_b3_w4_b4, vec4 w5_b5_w6_b6)\n{\n    float a1 = activation(w1_b1_w2_b2.x * t + w1_b1_w2_b2.y);\n    float a2 = activation(w1_b1_w2_b2.z * a1 + w1_b1_w2_b2.w);\n    float a3 = activation(w3_b3_w4_b4.x * a2 + w3_b3_w4_b4.y);\n\n    float r = activation(w3_b3_w4_b4.z * a3 + w3_b3_w4_b4.w);\n    float g = activation(w5_b5_w6_b6.x * a3 + w5_b5_w6_b6.y);\n    float b = activation(w5_b5_w6_b6.z * a3 + w5_b5_w6_b6.w);\n\n    return vec3(r, g, b);\n}\n\n\n/*\nvoid backwardPropagation\n(\n    float t,\n    vec4 w1_b1_w2_b2,\n    vec4 w3_b3_w4_b4,\n    vec4 w5_b5_w6_b6,\n\n    vec3 yGT,\n\n    out float z1, out float a1, out float da1_dz1,\n    out float z2, out float a2, out float da2_dz2,\n    out float z3, out float a3, out float da3_dz3,\n    out float zr, out float yr, out float dyr_dzr,\n    out float zg, out float yg, out float dyg_dzg,\n    out float zb, out float yb, out float dyb_dzb,\n    out float dLr_dyr,\n    out float dLg_dyg,\n    out float dLb_dyb,\n\n    out float layer3D)\n{\n    z1 = w1_b1_w2_b2.x *  t + w1_b1_w2_b2.y;\n    a1 = relu(z1);\n\n    z2 = w1_b1_w2_b2.z * a1 + w1_b1_w2_b2.w;\n    a2 = relu(z2);\n\n    z3 = w3_b3_w4_b4.x * a2 + w3_b3_w4_b4.y;\n    a3 = relu(z3);\n\n    zr = w3_b3_w4_b4.z * a3 + w3_b3_w4_b4.w;\n    yr = relu(zr);\n\n    zg = w5_b5_w6_b6.x * a3 + w5_b5_w6_b6.y;\n    yg = relu(zg);\n\n    zb = w5_b5_w6_b6.z * a3 + w5_b5_w6_b6.w;\n    yb = relu(zb);\n\n    vec3 y = vec3(yr, yg, yb);\n\n    vec3 dLoss = meanSquaredErrorGrad(yGT, y);\n    dLr_dyr   = dLoss.r;\n    dLg_dyg   = dLoss.g;\n    dLb_dyb   = dLoss.b;\n\n    dyr_dzr   = reluD(zr);\n    dyg_dzg   = reluD(zg);\n    dyb_dzb   = reluD(zb);\n\n    da3_dz3   = reluD(z3);\n    da2_dz2   = reluD(z2);\n    da1_dz1   = reluD(z1);\n\n    layer3D = dot(vec3(w3_b3_w4_b4.z, w5_b5_w6_b6.x, w5_b5_w6_b6.z),\n                  vec3(dyr_dzr * dLr_dyr, dyg_dzg * dLg_dyg, dyb_dzb * dLb_dyb));\n}\n\nvec4 updatedParametersBufferB(float t, vec4 w1_b1_w2_b2, vec4 w3_b3_w4_b4, vec4 w5_b5_w6_b6, vec3 yGT)\n{\n    float z1, a1, da1dz1;\n    float z2, a2, da2dz2;\n    float z3, a3, da3dz3;\n    float zr, yr, dyrdzr;\n    float zg, yg, dygdzg;\n    float zb, yb, dybdzb;\n    float dLr_dyr;\n    float dLg_dyg;\n    float dLb_dyb;\n    float dargb_dzrgb;\n\n    backwardPropagation\n    (\n        t,\n        w1_b1_w2_b2,\n        w3_b3_w4_b4,\n        w5_b5_w6_b6,\n\n        yGT,\n\n        z1, a1, da1dz1,\n        z2, a2, da2dz2,\n        z3, a3, da3dz3,\n        zr, yr, dyrdzr,\n        zg, yg, dygdzg,\n        zb, yb, dybdzb,\n        dLr_dyr,\n        dLg_dyg,\n        dLb_dyb,\n        dargb_dzrgb\n    );\n\n    return vec4\n    (\n        w1_b1_w2_b2.x - LEARNING_RATE * (da1dz1 * (da2dz2 * w1_b1_w2_b2.z) * (da3dz3 * w3_b3_w4_b4.x) * dargb_dzrgb) * t,\n        w1_b1_w2_b2.y - LEARNING_RATE * (da1dz1 * (da2dz2 * w1_b1_w2_b2.z) * (da3dz3 * w3_b3_w4_b4.x) * dargb_dzrgb),\n        w1_b1_w2_b2.z - LEARNING_RATE * (da2dz2 * (da3dz3 * w3_b3_w4_b4.x) * dargb_dzrgb) * a1,\n        w1_b1_w2_b2.w - LEARNING_RATE * (da2dz2 * (da3dz3 * w3_b3_w4_b4.x) * dargb_dzrgb)\n    );\n}\n\nvec4 updatedParametersBufferC(float t, vec4 w1_b1_w2_b2, vec4 w3_b3_w4_b4, vec4 w5_b5_w6_b6, vec3 yGT)\n{\n    float z1, a1, da1_dz1;\n    float z2, a2, da2_dz2;\n    float z3, a3, da3_dz3;\n    float zr, yr, dyr_dzr;\n    float zg, yg, dyg_dzg;\n    float zb, yb, dyb_dzb;\n    float dLr_dyr;\n    float dLg_dyg;\n    float dLb_dyb;\n    float dargb_dzrgb;\n\n    backwardPropagation\n    (\n        t,\n        w1_b1_w2_b2,\n        w3_b3_w4_b4,\n        w5_b5_w6_b6,\n\n        yGT,\n\n        z1, a1, da1_dz1,\n        z2, a2, da2_dz2,\n        z3, a3, da3_dz3,\n        zr, yr, dyr_dzr,\n        zg, yg, dyg_dzg,\n        zb, yb, dyb_dzb,\n        dLr_dyr,\n        dLg_dyg,\n        dLb_dyb,\n        dargb_dzrgb\n    );\n\n    return vec4\n    (\n        w3_b3_w4_b4.x - LEARNING_RATE * (dargb_dzrgb * da3_dz3) * a2,\n        w3_b3_w4_b4.y - LEARNING_RATE * (dargb_dzrgb * da3_dz3),\n        w3_b3_w4_b4.z - LEARNING_RATE * (dLr_dyr     * dyr_dzr) * a3,  // dL/dy dy/dz dz/dw3\n        w3_b3_w4_b4.w - LEARNING_RATE * (dLr_dyr     * dyr_dzr)        // dL/dy dy/dz dz/db3\n    );\n}\n\nvec4 updatedParametersBufferD(float t, vec4 w1_b1_w2_b2, vec4 w3_b3_w4_b4, vec4 w5_b5_w6_b6, vec3 yGT)\n{\n    float z1, a1, da1_dz1;\n    float z2, a2, da2_dz2;\n    float z3, a3, da3_dz3;\n    float zr, yr, dyr_dzr;\n    float zg, yg, dyg_dzg;\n    float zb, yb, dyb_dzb;\n    float dLr_dyr;\n    float dLg_dyg;\n    float dLb_dyb;\n    float dargb_dzrgb;\n\n    backwardPropagation\n    (\n        t,\n        w1_b1_w2_b2,\n        w3_b3_w4_b4,\n        w5_b5_w6_b6,\n\n        yGT,\n\n        z1, a1, da1_dz1,\n        z2, a2, da2_dz2,\n        z3, a3, da3_dz3,\n        zr, yr, dyr_dzr,\n        zg, yg, dyg_dzg,\n        zb, yb, dyb_dzb,\n        dLr_dyr,\n        dLg_dyg,\n        dLb_dyb,\n        dargb_dzrgb\n    );\n\n    return vec4\n    (\n        w5_b5_w6_b6.x - LEARNING_RATE * (dLg_dyg * dyg_dzg) * a3,    // dL/dy dy/dz dz/dw3\n        w5_b5_w6_b6.y - LEARNING_RATE * (dLg_dyg * dyg_dzg),         // dL/dy dy/dz dz/db3\n        w5_b5_w6_b6.z - LEARNING_RATE * (dLb_dyb * dyb_dzb) * a3,    // dL/dy dy/dz dz/dw3\n        w5_b5_w6_b6.w - LEARNING_RATE * (dLb_dyb * dyb_dzb)          // dL/dy dy/dz dz/db3\n    );\n}\n*/\n\nvec4 updatedParametersBufferB(float t, vec4 w11_b11_w21_b21, vec4 w31_b31_w41_b41, vec4 w42_b42_w43_b43, vec3 yGT)\n{\n    // forward\n    float z11, a11, dz11dw11, dz11db11;\n    float z21, a21, dz21dw21, dz21db21;\n    float z31, a31, dz31dw31, dz31db31;\n    float z41, y41, dz41dw41, dz41db41;\n    float z42, y42, dz42dw42, dz42db42;\n    float z43, y43, dz43dw43, dz43db43;\n\n    z11 = w11_b11_w21_b21.x * t + w11_b11_w21_b21.y;\n    a11 = activation(z11);\n    dz11dw11 = t;\n    dz11db11 = 1.0;\n\n    z21 = w11_b11_w21_b21.z * a11 + w11_b11_w21_b21.w;\n    a21 = activation(z21);\n    dz21dw21 = a11;\n    dz21db21 = 1.0;\n\n    z31 = w31_b31_w41_b41.x * a21 + w31_b31_w41_b41.y;\n    a31 = activation(z31);\n    dz31dw31 = a21;\n    dz31db31 = 1.0;\n\n    z41 = w31_b31_w41_b41.z * a31 + w31_b31_w41_b41.w;\n    y41 = activation(z41);\n    dz41dw41 = a31;\n    dz41db41 = 1.0;\n\n    z42 = w42_b42_w43_b43.x * a31 + w42_b42_w43_b43.y;\n    y42 = activation(z42);\n    dz42dw42 = a31;\n    dz42db42 = 1.0;\n\n    z43 = w42_b42_w43_b43.z * a31 + w42_b42_w43_b43.w;\n    y43 = activation(z43);\n    dz43dw43 = a31;\n    dz43db43 = 1.0;\n\n    vec3 y = vec3(y41, y42, y43);\n    \n \n    \n\n    // backward\n    vec3 dcdy123;\n    float dcdz41;\n    float dcdz42;\n    float dcdz43;\n    float dcdz31;\n    float dcdz21;\n    float dcdz11;\n\n    dcdy123 = meanSquaredErrorGrad(yGT, y);\n    dcdz41 = activationDerivative(z41) * dcdy123.r;\n    dcdz42 = activationDerivative(z42) * dcdy123.g;\n    dcdz43 = activationDerivative(z43) * dcdy123.b;\n\n    dcdz31 = activationDerivative(z31) * (w31_b31_w41_b41.z * dcdz41 + w42_b42_w43_b43.x * dcdz42 + w42_b42_w43_b43.z * dcdz43);\n    dcdz21 = activationDerivative(z21) * (w31_b31_w41_b41.x * dcdz31);\n    dcdz11 = activationDerivative(z11) * (w11_b11_w21_b21.z * dcdz21);\n\n    return vec4\n    (\n        w11_b11_w21_b21.x - LEARNING_RATE * dcdz11 * dz11dw11,\n        w11_b11_w21_b21.y - LEARNING_RATE * dcdz11 * dz11db11,\n        w11_b11_w21_b21.z - LEARNING_RATE * dcdz21 * dz21dw21,\n        w11_b11_w21_b21.w - LEARNING_RATE * dcdz21 * dz21db21\n    );\n}\n\nvec4 updatedParametersBufferC(float t, vec4 w11_b11_w21_b21, vec4 w31_b31_w41_b41, vec4 w42_b42_w43_b43, vec3 yGT)\n{\n    // forward\n    float z11, a11, dz11dw11, dz11db11;\n    float z21, a21, dz21dw21, dz21db21;\n    float z31, a31, dz31dw31, dz31db31;\n    float z41, y41, dz41dw41, dz41db41;\n    float z42, y42, dz42dw42, dz42db42;\n    float z43, y43, dz43dw43, dz43db43;\n\n    z11 = w11_b11_w21_b21.x * t + w11_b11_w21_b21.y;\n    a11 = activation(z11);\n    dz11dw11 = t;\n    dz11db11 = 1.0;\n\n    z21 = w11_b11_w21_b21.z * a11 + w11_b11_w21_b21.w;\n    a21 = activation(z21);\n    dz21dw21 = a11;\n    dz21db21 = 1.0;\n\n    z31 = w31_b31_w41_b41.x * a21 + w31_b31_w41_b41.y;\n    a31 = activation(z31);\n    dz31dw31 = a21;\n    dz31db31 = 1.0;\n\n    z41 = w31_b31_w41_b41.z * a31 + w31_b31_w41_b41.w;\n    y41 = activation(z41);\n    dz41dw41 = a31;\n    dz41db41 = 1.0;\n\n    z42 = w42_b42_w43_b43.x * a31 + w42_b42_w43_b43.y;\n    y42 = activation(z42);\n    dz42dw42 = a31;\n    dz42db42 = 1.0;\n\n    z43 = w42_b42_w43_b43.z * a31 + w42_b42_w43_b43.w;\n    y43 = activation(z43);\n    dz43dw43 = a31;\n    dz43db43 = 1.0;\n\n    vec3 y = vec3(y41, y42, y43);\n\n    // backward\n    vec3 dcdy123;\n    float dcdz41;\n    float dcdz42;\n    float dcdz43;\n    float dcdz31;\n    float dcdz21;\n    float dcdz11;\n\n    dcdy123 = meanSquaredErrorGrad(yGT, y);\n    dcdz41 = activationDerivative(z41) * dcdy123.r;\n    dcdz42 = activationDerivative(z42) * dcdy123.g;\n    dcdz43 = activationDerivative(z43) * dcdy123.b;\n\n    dcdz31 = activationDerivative(z31) * (w31_b31_w41_b41.z * dcdz41 + w42_b42_w43_b43.x * dcdz42 + w42_b42_w43_b43.z * dcdz43);\n    dcdz21 = activationDerivative(z21) * (w31_b31_w41_b41.x * dcdz31);\n    dcdz11 = activationDerivative(z11) * (w11_b11_w21_b21.z * dcdz21);\n\n    return vec4\n    (\n        w31_b31_w41_b41.x - LEARNING_RATE * dcdz31 * dz31dw31,\n        w31_b31_w41_b41.y - LEARNING_RATE * dcdz31 * dz31db31,\n        w31_b31_w41_b41.z - LEARNING_RATE * dcdz41 * dz41dw41,\n        w31_b31_w41_b41.w - LEARNING_RATE * dcdz41 * dz41db41\n    );\n}\n\nvec4 updatedParametersBufferD(float t, vec4 w11_b11_w21_b21, vec4 w31_b31_w41_b41, vec4 w42_b42_w43_b43, vec3 yGT)\n{\n    // forward\n    float z11, a11, dz11dw11, dz11db11;\n    float z21, a21, dz21dw21, dz21db21;\n    float z31, a31, dz31dw31, dz31db31;\n    float z41, y41, dz41dw41, dz41db41;\n    float z42, y42, dz42dw42, dz42db42;\n    float z43, y43, dz43dw43, dz43db43;\n\n    z11 = w11_b11_w21_b21.x * t + w11_b11_w21_b21.y;\n    a11 = activation(z11);\n    dz11dw11 = t;\n    dz11db11 = 1.0;\n\n    z21 = w11_b11_w21_b21.z * a11 + w11_b11_w21_b21.w;\n    a21 = activation(z21);\n    dz21dw21 = a11;\n    dz21db21 = 1.0;\n\n    z31 = w31_b31_w41_b41.x * a21 + w31_b31_w41_b41.y;\n    a31 = activation(z31);\n    dz31dw31 = a21;\n    dz31db31 = 1.0;\n\n    z41 = w31_b31_w41_b41.z * a31 + w31_b31_w41_b41.w;\n    y41 = activation(z41);\n    dz41dw41 = a31;\n    dz41db41 = 1.0;\n\n    z42 = w42_b42_w43_b43.x * a31 + w42_b42_w43_b43.y;\n    y42 = activation(z42);\n    dz42dw42 = a31;\n    dz42db42 = 1.0;\n\n    z43 = w42_b42_w43_b43.z * a31 + w42_b42_w43_b43.w;\n    y43 = activation(z43);\n    dz43dw43 = a31;\n    dz43db43 = 1.0;\n\n    vec3 y = vec3(y41, y42, y43);\n\n    // backward\n    vec3 dcdy123;\n    float dcdz41;\n    float dcdz42;\n    float dcdz43;\n    float dcdz31;\n    float dcdz21;\n    float dcdz11;\n\n    dcdy123 = meanSquaredErrorGrad(yGT, y);\n    dcdz41 = activationDerivative(z41) * dcdy123.r;\n    dcdz42 = activationDerivative(z42) * dcdy123.g;\n    dcdz43 = activationDerivative(z43) * dcdy123.b;\n\n    dcdz31 = activationDerivative(z31) * (w31_b31_w41_b41.z * dcdz41 + w42_b42_w43_b43.x * dcdz42 + w42_b42_w43_b43.z * dcdz43);\n    dcdz21 = activationDerivative(z21) * (w31_b31_w41_b41.x * dcdz31);\n    dcdz11 = activationDerivative(z11) * (w11_b11_w21_b21.z * dcdz21);\n\n    return vec4\n    (\n        w42_b42_w43_b43.x - LEARNING_RATE * dcdz42 * dz42dw42,\n        w42_b42_w43_b43.y - LEARNING_RATE * dcdz42 * dz42db42,\n        w42_b42_w43_b43.z - LEARNING_RATE * dcdz43 * dz43dw43,\n        w42_b42_w43_b43.w - LEARNING_RATE * dcdz43 * dz43db43\n    );\n}\n\n//////////////////////////////////////////////////////////////\nvec4 forwardPropagation(in vec4 x, in mat4 wLayer1, in vec4 bLayer1, in mat4 wLayer2, in vec4 bLayer2, in mat4 wLayer3, in vec4 bLayer3, in mat4 wLayer4, in vec4 bLayer4)\n{\n    vec4 z1, a1;\n    vec4 z2, a2;\n    vec4 z3, a3;\n    vec4 z4, a4;\n    vec4 yHat;\n\n    z1 = wLayer1 * x + bLayer1;\n    a1 = activation(z1);\n\n    z2 = wLayer2 * a1 + bLayer2;\n    a2 = activation(z2);\n\n    z3 = wLayer3 * a2 + bLayer3;\n    a3 = activation(z3);\n\n    z4 = wLayer4 * a3 + bLayer4;\n    a4 = activation(z4);\n\n    yHat = a4;\n\n    return yHat;\n}\n\nvoid backWardPropagation(in vec4 x, in vec4 yGT, inout mat4 wLayer1, inout vec4 bLayer1, inout mat4 wLayer2, inout vec4 bLayer2, inout mat4 wLayer3, inout vec4 bLayer3, inout mat4 wLayer4, inout vec4 bLayer4)\n{\n    // forward\n    vec4 z1, a1;\n    vec4 dz1_dwLayer1;\n    vec4 dz1_dbLayer1;\n    \n    vec4 z2, a2;\n    vec4 dz2_dwLayer2;\n    vec4 dz2_dbLayer2;\n\n    vec4 z3, a3;\n    vec4 dz3_dwLayer3;\n    vec4 dz3_dbLayer3;\n\n    vec4 z4, a4;\n    vec4 dz4_dwLayer4;\n    vec4 dz4_dbLayer4;\n\n    vec4 yHat;\n\n    z1 = wLayer1 * x + bLayer1;\n    a1 = activation(z1);\n    dz1_dwLayer1 = x;\n    dz1_dbLayer1 = vec4(1.0);\n\n    z2 = wLayer2 * a1 + bLayer2;\n    a2 = activation(z2);\n    dz2_dwLayer2 = a1;\n    dz2_dbLayer2 = vec4(1.0);\n\n    z3 = wLayer3 * a2 + bLayer3;\n    a3 = activation(z3);\n    dz3_dwLayer3 = a2;\n    dz3_dbLayer3 = vec4(1.0);\n\n    z4 = wLayer4 * a3 + bLayer4;\n    a4 = activation(z4);\n    dz4_dwLayer4 = a3;\n    dz4_dbLayer4 = vec4(1.0);\n\n    yHat = a4;\n\n    // backward  w = w - learningRate * dc/dw\n\n    // 1) compute: dc/dy\n    //    \n    // 2) compute: dc/dz\n    //             dc/dz4 = dy/dz4 * dc/dy\n    //             dc/dz3 = da3/dz3 * dz4/da3 * dc/dz4\n    //             dc/dz2 = da3/dz2 * dz4/da2 * dc/dz3\n    //             dc/dz1 = da3/dz1 * dz4/da1 * dc/dz2\n    // 3) compute dC/dw\n    // 4) gradient descent\n    \n    // 1) compute: dc/dy\n    vec4 dc_dy;    \n    dc_dy = lossDerivative(yGT, yHat);\n    \n    // 2) compute: dc/dz\n    vec4 dc_dz4;        \n    vec4 dc_dz3;\n    vec4 dc_dz2;\n    vec4 dc_dz1;\n    dc_dz4 = activationDerivative(z4) * dc_dy;                       \n    dc_dz3 = activationDerivative(z3) * transpose(wLayer4) * dc_dz4; // activationD(z3) * transpose(wLayer4) * dc_dz4\n    dc_dz2 = activationDerivative(z2) * transpose(wLayer3) * dc_dz3; // activationD(z2) * transpose(wLayer3) * dc_dz3\n    dc_dz1 = activationDerivative(z1) * transpose(wLayer2) * dc_dz2; // activationD(z1) * transpose(wLayer2) * dc_dz2\n\n    // 3) compute dC/dw\n    mat4 dc_dwLayer4 = mat4\n    (\n        dz4_dwLayer4.x * dc_dz4,\n        dz4_dwLayer4.y * dc_dz4,\n        dz4_dwLayer4.z * dc_dz4,\n        dz4_dwLayer4.w * dc_dz4\n    );\n    vec4 dc_dbLayer4 = dz4_dbLayer4 * dc_dz4;\n    \n    mat4 dc_dwLayer3 = mat4\n    (\n        dz3_dwLayer3.x * dc_dz3,\n        dz3_dwLayer3.y * dc_dz3,\n        dz3_dwLayer3.z * dc_dz3,\n        dz3_dwLayer3.w * dc_dz3\n    );\n    vec4 dc_dbLayer3 = dz3_dbLayer3 * dc_dz3;\n\n    mat4 dc_dwLayer2 = mat4\n    (\n        dz2_dwLayer2.x * dc_dz2,\n        dz2_dwLayer2.y * dc_dz2,\n        dz2_dwLayer2.z * dc_dz2,\n        dz2_dwLayer2.w * dc_dz2\n    );\n    vec4 dc_dbLayer2 = dz2_dbLayer2 * dc_dz2;\n\n    mat4 dc_dwLayer1 = mat4\n    (\n        dz1_dwLayer1.x * dc_dz1,\n        dz1_dwLayer1.y * dc_dz1,\n        dz1_dwLayer1.z * dc_dz1,\n        dz1_dwLayer1.w * dc_dz1\n    );\n    vec4 dc_dbLayer1 = dz1_dbLayer1 * dc_dz1;\n\n    // 4) gradient descent\n    wLayer4 = wLayer4 - LEARNING_RATE * dc_dwLayer4; // dc_dz4 * dz4_dwLayer4;\n    bLayer4 = bLayer4 - LEARNING_RATE * dc_dbLayer4; // dc_dz4 * dz4_dbLayer4;\n    wLayer3 = wLayer3 - LEARNING_RATE * dc_dwLayer3; // dc_dz3 * dz3_dwLayer3;\n    bLayer3 = bLayer3 - LEARNING_RATE * dc_dbLayer3; // dc_dz3 * dz3_dbLayer3;\n    wLayer2 = wLayer2 - LEARNING_RATE * dc_dwLayer2; // dc_dz2 * dz2_dwLayer2;\n    bLayer2 = bLayer2 - LEARNING_RATE * dc_dbLayer2; // dc_dz2 * dz2_dbLayer2;\n    wLayer1 = wLayer1 - LEARNING_RATE * dc_dwLayer1; // dc_dz1 * dz1_dwLayer1;\n    bLayer1 = bLayer1 - LEARNING_RATE * dc_dbLayer1; // dc_dz1 * dz1_dbLayer1;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#ifndef BUBBLE_IMAGE \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float t = getT(iTime);\n    #ifdef MOVABLE_IMAGE    \n    fragCoord.y += t * 100.0;\n    #endif\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv);\n}\n#else\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tfloat t = getT(iTime);\n\tvec2 uv = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n\tuv.x *= iResolution.x / iResolution.y;\n\n\t// background\t \n\tvec3 color = vec3(0.8 + 0.2 * uv.y);\n\n\t// bubbles\t\n\tfor (int i = 0; i < 40; i++)\n\t{\n\t\t// bubble seeds\n\t\tfloat pha = sin(float(i) * 546.13 + 1.0) * 0.5 + 0.5;\n\t\tfloat siz = pow(sin(float(i) * 651.74 + 5.0) * 0.5 + 0.5, 4.0);\n\t\tfloat pox = sin(float(i) * 321.55 + 4.1) * iResolution.x / iResolution.y;\n\n\t\t// buble size, position and color\n\t\tfloat rad = 0.1 + 0.5 * siz;\n\t\tvec2  pos = vec2(pox, -1.0 - rad + (2.0 + 2.0 * rad) * mod(pha + 0.1 * t * (0.2 + 0.8 * siz), 1.0));\n\t\tfloat dis = length(uv - pos);\n\t\tvec3  col = mix(vec3(0.94, 0.3, 0.0), vec3(0.1, 0.4, 0.8), 0.5 + 0.5 * sin(float(i) * 1.2 + 1.9));\n\t\t//    col+= 8.0*smoothstep( rad*0.95, rad, dis );\n\n\t\t// render\n\t\tfloat f = length(uv - pos) / rad;\n\t\tf = sqrt(clamp(1.0 - f * f, 0.0, 1.0));\n\t\tcolor -= col.zyx * (1.0 - smoothstep(rad * 0.95, rad, dis)) * f;\n\t}\n\n\t// vigneting\t\n\tcolor *= sqrt(1.5 - 0.5 * length(uv));\n\n\tfragColor = vec4(color, 1.0);\n}\n#endif","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // init\n    if (iTime == 0. || iFrame == 0)\n    {\n        fragColor = vec4(rnd(uv + vec2(2., 2.)), 0., rnd(uv - vec2(2., 2.)), 0.);\n    }\n    else\n    {\n        // apply back propagation\n        vec4 w1_b1_w2_b2 = texture(iChannel1, uv);\n        vec4 w3_b3_w4_b4 = texture(iChannel2, uv);\n        vec4 w5_b5_w6_b6 = texture(iChannel3, uv);\n        vec4 Y = texture(iChannel0, uv);\n\n        if (iTime > TRAIN_DURATION)\n        {\n            fragColor = w1_b1_w2_b2;\n        }\n        else\n        {\n            float t = getT(iTime);\n            fragColor = updatedParametersBufferB(t, w1_b1_w2_b2, w3_b3_w4_b4, w5_b5_w6_b6, Y.rgb);\n        }\n    }\n}\n\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // init\n    if (iTime == 0. || iFrame == 0)\n    {\n        fragColor = vec4(rnd(uv + vec2(4., 4.)), 0., rnd(uv - vec2(4., 4.)), 0.);\n    }\n    else\n    {\n        vec4 w1_b1_w2_b2 = texture(iChannel1, uv);\n        vec4 w3_b3_w4_b4 = texture(iChannel2, uv);\n        vec4 w5_b5_w6_b6 = texture(iChannel3, uv);\n        vec4 Y = texture(iChannel0, uv);\n\n        if (iTime > TRAIN_DURATION)\n        {\n            fragColor = w3_b3_w4_b4;\n        }\n        else\n        {\n            float t = getT(iTime);\n            fragColor = updatedParametersBufferC(t, w1_b1_w2_b2, w3_b3_w4_b4, w5_b5_w6_b6, Y.rgb);\n        }\n    }\n}\n\n","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // init\n    if (iTime == 0. || iFrame == 0)\n    {\n        fragColor = vec4(rnd(uv + vec2(6., 6.)), 0., rnd(uv - vec2(6., 6.)), 0.);\n    }\n    else\n    {\n        vec4 w1_b1_w2_b2 = texture(iChannel1, uv);\n        vec4 w3_b3_w4_b4 = texture(iChannel2, uv);\n        vec4 w5_b5_w6_b6 = texture(iChannel3, uv);\n        vec4 Y = texture(iChannel0, uv);\n\n        if (iTime > TRAIN_DURATION)\n        {\n            fragColor = w5_b5_w6_b6;\n        }\n        else\n        {\n            float t = getT(iTime);\n            fragColor = updatedParametersBufferD(t, w1_b1_w2_b2, w3_b3_w4_b4, w5_b5_w6_b6, Y.rgb);\n        }\n    }\n}\n\n","name":"Buffer D","description":"","type":"buffer"}]}