{"ver":"0.1","info":{"id":"NdcfDr","date":"1656323471","viewed":85,"name":"r_clock","username":"heloliz","description":"a simple clock; three hands run faster than usual","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\nstruct hand{\n    float probe_l;//针长度\n    float probe_w;//针宽度\n    float rate;// 旋转速度\n};\n\n// 以 a, b 两点绘制线段\nfloat segment(in vec2 uv,in vec2 a,in vec2 b){\n    vec2 uv_a=b-a;\n    vec2 uv_b=uv-a;\n    float proj=clamp(dot(uv_b,uv_a)/dot(uv_a,uv_a),.0,.3);\n    float d=length(proj*uv_a-uv_b);\n    return step(d,fwidth(uv.x)*2.);\n}\n\nvec4 drawHand(vec2 uv,hand _hand,vec2 center,vec4 col){\n    float si=sin(iTime*_hand.rate*60.);\n    float cs=cos(iTime*_hand.rate*60.);\n    mat2 hour_trans=mat2(cs,si,-si,cs);\n    \n    float second_half_l=_hand.probe_l;\n    float second_half_w=_hand.probe_w/2.;\n    \n    vec2 dot1=vec2(.0,center.y+second_half_l);\n    vec2 dot2=vec2(center.x+second_half_w,.0);\n    vec2 dot3=vec2(.0,center.x-second_half_l/3.);\n    vec2 dot4=vec2(center.x-second_half_w,.0);\n    // dot 1,2,3,4顺时针排布的四边形顶点\n    dot1=dot1*hour_trans;\n    dot2=dot2*hour_trans;\n    dot3=dot3*hour_trans;\n    dot4=dot4*hour_trans;\n    \n    vec3 inner12=cross(vec3(uv-dot1,.0),vec3(dot2-dot1,0.));\n    vec3 inner23=cross(vec3(uv-dot2,0.),vec3(dot3-dot2,0.));\n    vec3 inner34=cross(vec3(uv-dot3,0.),vec3(dot4-dot3,0.));\n    vec3 inner41=cross(vec3(uv-dot4,0.),vec3(dot1-dot4,0.));\n    vec3 inner24=cross(vec3(uv-dot4,0.),vec3(dot4-dot2,0.));\n    \n    // 判断向量叉积同正或同负\n    vec4 col1=(step(inner12.z,0.)*step(inner24.z,0.)*step(inner41.z,0.)+step(0.,inner12.z)*step(0.,inner24.z)*step(0.,inner41.z))*col/2.;\n    \n    vec4 col2=(step(0.,inner23.z)*step(0.,inner34.z)*step(inner24.z,.0)+step(inner23.z,0.)*step(inner34.z,0.)*step(.0,inner24.z))*col;\n    return col1+col2;;\n}\n\n/**\n*@param uv      uv\n*@param col     color\n*@param probe_l 探针长度\n*@param probe_w 探针宽度\n*@param center  center\n*/\nvec4 clock(vec2 uv){\n    hand hour_hand=hand(.15,.02,PI/30./60./12.);\n    hand minute_hand=hand(.2,.02,PI/30./60.);\n    hand second_hand=hand(.3,.02,PI/30.);\n    vec2 center=vec2(.0,.0);\n    vec4 hand_col=vec4(.32,.56,.4,1.);\n    vec4 col=vec4(0.);\n    float pixel_width = fwidth(uv.x);\n    \n    float panel_r=length(uv-center);\n    float circle=smoothstep(0.,pixel_width,panel_r - second_hand.probe_l);\n    vec4 inner_circle=vec4((1.-circle)*vec3(.5),1.);\n    vec4 outer_circle=vec4(1.);\n    vec4 col_circle=(1.-circle)>.0?inner_circle:outer_circle;\n    col+=col_circle;\n    \n    // 秒针\n    vec4 draw_sec=drawHand(uv,second_hand,center,hand_col*2.5);\n    col+=draw_sec;\n\n    // 分针\n    vec4 draw_min=drawHand(uv,minute_hand,center,hand_col*2.);\n    col+=draw_min;\n\n    // 时针\n    vec4 draw_hour=drawHand(uv,hour_hand,center,hand_col*1.5);\n\n    col+=draw_hour;\n    \n    // 绘制一条 以 dot1，dot2 为端点的线段。\n    vec2 dot1=vec2(.0,second_hand.probe_l);\n    vec2 dot2=vec2(.0,second_hand.probe_l-pixel_width);\n    float seg=.0;\n    // 绘制刻度\n    for(int i=0;i<60;i++){\n        float probe_dec=mod(float(i),5.)==.0?.05:pixel_width;\n        dot1=vec2(.0,second_hand.probe_l);\n        dot2=vec2(.0,second_hand.probe_l-probe_dec);\n        float angle=PI/30.*float(i);\n        float si=sin(angle),cs=cos(angle);\n        mat2 transform=mat2(cs,si,-si,cs);\n        vec2 dot1_0=transform*dot1;\n        vec2 dot2_0=transform*dot2;\n        seg+=segment(uv,dot1_0,dot2_0);\n    }\n    vec4 col_seg=seg*vec4(1.);\n    col+=col_seg;\n    return col==vec4(0.)?vec4(1.):col;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv=(fragCoord-.5*iResolution.xy)/iResolution.y;\n      \n    fragColor=clock(uv);\n}","name":"Image","description":"","type":"image"}]}