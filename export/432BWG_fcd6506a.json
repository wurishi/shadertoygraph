{"ver":"0.1","info":{"id":"432BWG","date":"1729880620","viewed":114,"name":"color fractalic flower ","username":"nayk","description":"source https://www.shadertoy.com/view/M3BfWy","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["fractalicflower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime/2.\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    \n      vec2 uv2 = (2.0*fragCoord-iResolution.xy)/iResolution.y;    \n    uv2*=0.25;\n      uv2.x+=0.35;\n    vec2 center2 = vec2(.78,.22);\n    vec2 width2  =vec2(.25);\n \n    vec2 z2 = uv2 * width2 + center2 ; \n   \n    float max_iter2=7., mix_factor2=.999, infinity2=1e9;\n\n    vec4 qq2 = vec4(0); //counts orbit in 4 quadrants\n    \n    vec2 wgt2=vec2(mix_factor2, 1.-mix_factor2);\n    \n    float r2=1.41,an2=3.9;  //the Julia set params, play with it\n    vec2 jc2 = vec2(r2*cos(an2),2.*sin(an2));\n                          \n    vec2 maxz2 = vec2(0);\n    \n    float escape_value2 = 0.;\n    for ( float i=0.; i<max_iter2; i++ ) {\n    \n        vec2 tmp2 = vec2(z2.x*z2.x*z2.x - 3.*z2.x*z2.y*z2.y,\n                    -z2.y*z2.y*z2.y + 3.*z2.x*z2.x*z2.y);\n                       tmp2.xy*=mat2(cos(iTime*0.1),sin(iTime*0.1),-sin(iTime*0.1), cos(iTime*0.1));\n        float div2 = max(tmp2.x*tmp2.x+tmp2.y*tmp2.y,1e-5);\n        \n        //combo of abs(z^3) and abs(1/z^3)\n        z2 = wgt2.x*abs(tmp2) + wgt2.y*abs(tmp2)/div2+jc2;\n         z2.xy*=mat2(cos(iTime*0.1),sin(iTime*0.1),-sin(iTime*0.1), cos(iTime*0.1));\n        float distance = z2.x*z2.x + z2.y*z2.y;\n\n        maxz2 = max(maxz2,abs(z2)); //for coloring\n        \n        if ( distance > infinity2 ) {\n            escape_value2 = i;\n            break;\n        }\n         \n    }\n\n    if ( escape_value2 != 0. ) { \n        fragColor = vec4(0.);\n    }\n    else {\n    //all of the action here is for points in the bounded set\n        vec3 freqs=.3*vec3(31,21,11);\n        vec3 angles= sin(vec3(t,t/1.2+2.2,t/1.3+4.));\n    \n        vec3 cosa=cos(angles);\n        vec3 sina=sin(angles);\n        \n        vec3 cc=vec3(log(abs(maxz2.x)),log(abs(maxz2.y)),atan(maxz2.x,maxz2.y) );\n        cc=sin(cc);\n      \n        \n        mat3 mm=mat3(cosa.x*cosa.z,sina.x*sina.y*cosa.z+cosa.x*sina.z,-sina.x*cosa.y*cosa.z+sina.y*sina.z,\n                    -cosa.x*sina.z,-sina.x*sina.y*sina.z+cosa.y*cosa.z,sina.x*cosa.y*sina.z+sina.y*cosa.z,\n                     sina.x, -cosa.x*sina.y, cosa.x*cosa.y);\n           \n        cc = mm*cc;\n        \n        fragColor = vec4( clamp(3.*cc*cc,0.,1.), 1. );\n    }\n    \n    \n \n\n}\n","name":"Image","description":"","type":"image"}]}