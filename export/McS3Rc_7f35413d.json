{"ver":"0.1","info":{"id":"McS3Rc","date":"1704466711","viewed":34,"name":"Fast Blue Noise","username":"sampajama","description":"Lower Quality, but faster version of: https://www.shadertoy.com/view/Mfj3Dm","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["math","bluenoise","rng","csrng"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define ROTL(a,b) (((a) << (b)) | ((a) >> (32 - (b))))\n\n#define QUARTER_ROUND(a, b, c, d) \\\n    a += b; d ^= a; d = ROTL(d,16); \\\n    c += d; b ^= c; b = ROTL(b,12); \\\n    a += b; d ^= a; d = ROTL(d, 8); \\\n    c += d; b ^= c; b = ROTL(b, 7);\n    \n    \n#define uintBitsToUnorm(x) (float(x) / 4294967296.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uint a = floatBitsToUint(iTime);\n    uint b = floatBitsToUint(fragCoord.x);\n    uint c = uint(iFrame);\n    uint d = floatBitsToUint(fragCoord.y);\n    \n    QUARTER_ROUND(a, b, c, d);\n    QUARTER_ROUND(d, b, c, a);\n    QUARTER_ROUND(a, b, c, d);\n    QUARTER_ROUND(d, b, c, a);\n\n    fragColor = vec4(\n        uintBitsToUnorm(a),\n        uintBitsToUnorm(b),\n        uintBitsToUnorm(c),\n        uintBitsToUnorm(d)\n    );\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 h_freq = textureLod(iChannel0, uv, 0.0);\n    vec4 l_freq = textureLod(iChannel0, uv, 1.0);\n    fragColor = (h_freq - l_freq) * 0.5 + 0.5;\n}","name":"Buffer B","description":"","type":"buffer"}]}