{"ver":"0.1","info":{"id":"4tGGRd","date":"1476130767","viewed":161,"name":"HelloWorldPlaneProjection","username":"aminere","description":"My first effect on shadertoy!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["planeprojection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // [0, res] to [-1, 1]\n\tvec2 coord = -1.0 + (fragCoord.xy / iResolution.xy)*2.0;    \n    vec2 ncoord = coord * vec2(iResolution.x / iResolution.y, 1.0); // take aspect ratio into account\n    \n    // rotation\n    float angle = radians(iTime);\n    angle = sin(angle*35.0) * radians(10.0); // fluctuate angle\n    vec2 tcoord = vec2(ncoord.x * cos(angle) - ncoord.y * sin(angle),\n                       ncoord.y * cos(angle) + ncoord.x * sin(angle));\n    \n    float lookAtOffsetY = sin(radians(iTime * 40.0)) * .5;\n    \n    // simple plane projection\n    vec2 uv = vec2(tcoord.x, 1.0) / (tcoord.y + lookAtOffsetY);\n    uv /= 4.0;\n    \n    // scrolling \n    uv.y = abs(uv.y) + iTime;\n    \n    vec4 col = texture(iChannel0, uv);\n    col.r += .2; // tint\n    \n    // horizon\n    col *= smoothstep(0.0, 0.4, abs(tcoord.y + lookAtOffsetY));\n    \n    // post process\n    float vignette = (1.0 - abs(coord.x * coord.x)) * (1.0 - abs(coord.y * coord.y));    \n    col *= vignette;\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}