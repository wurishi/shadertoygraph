{"ver":"0.1","info":{"id":"cdtBD7","date":"1697251256","viewed":40,"name":"Neon Reflection","username":"MiniLegend123","description":"My first attempt at using shaders.\nMade from altering shader by https://www.shadertoy.com/view/mtyGWy from youtube tutorial Video URL: https://youtu.be/f4s1h2YETNY\nAlso code from https://www.shadertoy.com/view/Ms2SDc was used","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fractal","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n   This is my fist attempt at shaders\n   Made from shader by https://www.shadertoy.com/view/mtyGWy from youtube tutorial Video URL: https://youtu.be/f4s1h2YETNY\n   Also code from https://www.shadertoy.com/view/Ms2SDc was used\n*/\n\nconst float PI=3.14159265358979323846;\nconst float value=0.0;\nfloat rand(in vec2 p,in float t)\n\t{\n\treturn fract(sin(dot(p+mod(t,1.0),vec2(12.9898,78.2333)))*43758.5453);\n\t}\n\nvec2 rotate(vec2 k,float t)\n\t{\n\treturn vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n\t}\n    \nfloat scene1(vec3 p)\n\t{\n\tfloat speed=iTime*0.2;\n\tfloat ground=dot(p,vec3(0.0,1.0,0.0))+0.75;\n\tfloat t1=length(abs(mod(p.xyz,.2)-1.0))-1.12+0.05*cos(PI*p.x*4.0)+0.05*sin(PI*p.z*3.0);\t// structure\n\tfloat t3=length(max(abs(mod(p.xyz,2.0)-1.0).xz-1.0,0.5))-0.075+0.1*cos(p.y*36.0);\t\t\t// structure slices\n\tfloat t5=length(abs(mod(p.xyz,0.5))-0.25)-0.975;\n\tfloat bubble_w=0.8+0.2*cos(PI*p.z)+0.2*cos(PI*p.x);\n\tfloat bubble=length(mod(p.xyz,0.125)-0.0625)-bubble_w;\n\tfloat hole_w=0.15;\n\tfloat hole=length(abs(mod(p.xz,1.0)-0.5))-hole_w;\n\tfloat tube_p=2.0-0.25*sin(PI*p.z*0.5);\n\tfloat tube_v=PI*8.0;\n    float tube_b=tube_p*0.02;\n\tfloat tube_w=tube_b+tube_b*cos(p.x*tube_v)*sin(p.y*tube_v)*cos(p.z*tube_v)+tube_b*sin(PI*p.z+speed*4.0);\n\tfloat tube=length(abs(mod(p.xy,tube_p)-tube_p*0.5))-tube_w;\n\treturn min(max(min(-t1,max(-hole-t5*0.375,ground+bubble)),t3+t5),tube);\n\t}\n    \n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.0, 0.5, 0.5);\n    vec3 b = vec3(1.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n    vec3 e = vec3(1.0,1.416,1.557);\n\n    return a + b*cos( 6.28318*(c*t+d+e) );\n}\n\n//https://www.shadertoy.com/view/mtyGWy\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.11);\n    \n    \n    float speed=iTime*0.5;\n    float ground_x=1.*cos(PI*speed*.33);\n    float ground_y=4.0-3.0*sin(PI*speed*0.125)+0.125*value;\n    float ground_z=-1.0-speed;\n\tvec2 position=fragCoord.xy/iResolution.xy;        \n\tvec2 p=-1.0+2.0*position;\n    vec3 dir=normalize(vec3(p*vec2(1.625,1.0),0.75));\n    dir.yz=rotate(dir.yz,PI*0.25*sin(PI*speed*0.125)-value*0.25);\t// rotation x\n\tdir.zx=rotate(dir.zx,PI*cos(-PI*speed*0.00));\t\t// rotation y\n\tdir.xy=rotate(dir.xy,PI*0.125*cos(PI*speed*0.0));\t// rotation z\n    \n    vec3 ray=vec3(ground_x,ground_y,ground_z);\n    float t=1.0;\n    const int ray_n=96;\n        \n    for (float i = 0.0; i < 6.0; i++) {\n        uv = fract(uv * 0.9) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*20.4 + iTime*.4);\n        \n        float k=scene1(ray+dir*t + i++);\n        if(abs(k)<0.05) break;\n        t+=k*0.5;\n\t\t\n\n        d = sin(d*2.5 + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.001 / d, 1.02);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}