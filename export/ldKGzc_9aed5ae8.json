{"ver":"0.1","info":{"id":"ldKGzc","date":"1455716735","viewed":298,"name":"Bumpmapping (first shader!)","username":"piratehurrdurr","description":"Move your mouse. My first shader.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["lighting","pointlight","bumpmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distSq(vec3 d) {\n    return d.x*d.x+d.y*d.y+d.z*d.z;\n}\n\nfloat dist(vec3 d) {\n    return sqrt(d.x*d.x+d.y*d.y+d.z*d.z);\n}\n\nfloat dotProduct(vec3 va, vec3 vb) {\n    float v = 0.0;\n    v+=va.x*vb.x;\n    v+=va.y*vb.y;\n    v+=va.z*vb.z;\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 light;\n    light.xy = iMouse.xy / iResolution.x;\n    light.z = 0.2;\n    \n    vec3 lightColor = vec3(5.0,3.5,1.0);\n    vec3 ambColor = vec3(0.1,0.105,0.2);\n    \n    \n    vec2 uvPixel = 1.0/vec2(iResolution.x,iResolution.x)*0.5;\n\tvec2 uv = fragCoord.xy / vec2(iResolution.x,iResolution.x);\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    float strength = 4.0;\n    \n    vec4 image = texture(iChannel0, uv);\n    \n    vec4 height;\n    vec3 normal;\n    height.r = texture(iChannel0, uv).r;\n    height.g = texture(iChannel0, uv+vec2(uvPixel.x,0)).r;\n    height.b = texture(iChannel0, uv+vec2(0,uvPixel.y)).r;\n    height.a = texture(iChannel0, uv+vec2(uvPixel.x,uvPixel.y)).r;\n    \n    normal.r = (height.r-height.g)*strength;\n    normal.g = (height.r-height.b)*strength;\n    normal.b = 1.0;\n    \n    normal/=dist(normal);\n    \n    fragColor.rgb = image.rgb;\n    \n    vec3 worldPos = vec3(uv.x,uv.y,0.0);\n    vec3 lightVec =  light-worldPos;\n    //lightVec/=dist(lightVec);\n    lightVec = normalize(lightVec);\n    \n    float angle = dot(lightVec,normal);\n    angle = clamp(angle, 0.0, 1.0);\n    float atten = 0.2/(1.0+dist(lightVec));\n    vec3 lightEffect = lightColor*atten*angle;\n    \n    \n    fragColor.rgb = (image.rgb*(lightEffect.rgb+ambColor.rgb))*2.0;\n    \n}","name":"Image","description":"","type":"image"}]}