{"ver":"0.1","info":{"id":"4lfBDn","date":"1511700051","viewed":247,"name":"Sandy Times","username":"tholzer","description":"colored sand is falling down...","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["video","plasma","effect","buffer","sand"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//----------------------------------------------------------\n// SandyTimes.glsl             2017-11-26\n//\n// inspired by https://www.shadertoy.com/view/Mdsczf\n//\n// tags:  video, effect, sand, buffer, plasma\n//\n// iChannel0 = Buffer A\n//----------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n//----------------------------------------------------------\n// SandyTimes_BufA.glsl\n//\n// iChannel0 = Buffer A\n// iChannel1 = Video Claude Van Damme\n//----------------------------------------------------------\n\nfloat rand(vec2 co)\n{\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n//----------------------------------------------------------\nvec4 SandyVideo(vec2 uv, vec2 unit)\n{\n    vec4 video = texture(iChannel1, uv);\n    float chroma = clamp(video.g * 2. - video.r - video.g,0.0,1.0);\n    \n    vec2 offset = vec2(0.2*sin(iTime), 0.3) * unit * (0.2 + 8.0 * rand(uv.xy));\n    vec4 buffer = texture(iChannel0, uv + offset);\n    return mix(video, buffer, step(0.01, chroma));\n}\n//----------------------------------------------------------\n#define N 3\n\nvec4 background(vec2 u)\n{\n  vec2 p = u;\n  float t = iTime * 0.4;\n  float r = 0.0;\n  for ( int i = 0; i < N; i++ )\n  {\n\tfloat d = 3.14159265 * float(i) * 5.0 / float(N);\n\tr = length(p) + 0.01;\n\tfloat xx = p.x;\n\tp.x += cos(p.y+cos(r) + d) + 2.0*cos(t) + 0.5*cos(t*1.44);\n\tp.y -= sin(xx +cos(r) + d) + 1.3*sin(t) + 0.5*cos(t*2.25);\n  }\n  return vec4(0.5*cos(r*0.5), 0.4*cos(r*1.2), 0.4*cos(r*2.0), 1.0);\n}\n//----------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    if (uv.y < 0.99)\n         fragColor = SandyVideo (uv, 1.0 / iResolution.yy);\n    else fragColor = background (uv*15.);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}