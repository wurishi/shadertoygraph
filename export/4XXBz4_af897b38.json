{"ver":"0.1","info":{"id":"4XXBz4","date":"1728058508","viewed":22,"name":"polygons","username":"355113","description":"polygon changing # of sides","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math","colorful","polygon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    // Formula for polygon from https://thebookofshaders.com/07/\n    float N = 3. + 4. * (1. + sin(iTime));\n    \n    float a = atan(uv.x, uv.y) + PI;\n    float r = TWO_PI / N;\n    \n    float d = cos(floor(.5+a/r)*r-a)*length(uv);\n    vec3 shapeMask = vec3(1. - smoothstep(.4, .41, d));\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col * shapeMask,1.0);\n}","name":"Image","description":"","type":"image"}]}