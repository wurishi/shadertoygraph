{"ver":"0.1","info":{"id":"XcySDh","date":"1715081980","viewed":53,"name":"Intro_tinkering_around","username":"koffee_san","description":"I feel god in this chilli's tonight","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//ACID SHADER\n\n//https://iquilezles.org/articles/palettes/\n\n\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(0.50, 0.20, 0.25);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\n\n\n\n\nvec2 rotate2D(vec2 v, float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return vec2(v.x * c - v.y * s, v.x * s + v.y * c);\n}\n\n\n\n//https://www.shadertoy.com/view/mtyGWy\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.001 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    // Define the rotation speed and angle\n    float rotationSpeed = sin(iTime*.0005); // Adjust this value to control the speed of rotation\n    float rotationAngle = 2.0 * 3.14159; // 360 degrees in radians\n\n    // Calculate the current rotation angle based on time\n    float currentTime = iTime;\n    float currentRotationAngle = rotationSpeed * currentTime;\n    // Apply the rotation to the uv coordinates\n    uv = rotate2D(uv, currentRotationAngle);\n    \n     // Define the zoom speed and factor\n    float zoomSpeed = .5; // Adjust this value to control the speed of zoom\n    float zoomFactor = 1.0 + sin(iTime * zoomSpeed); // Sine wave for smooth zooming\n    // Apply the zoom to the uv coordinates\n    uv *= zoomFactor;\n\n    \n    \n    for (float i = 1.; i < 9.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + sin(iTime*2.) + iTime*.4);\n\n        d = sin(d*4. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.0025 / d, 1.2);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}