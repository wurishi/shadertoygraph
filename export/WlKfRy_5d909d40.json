{"ver":"0.1","info":{"id":"WlKfRy","date":"1614598378","viewed":93,"name":"Test Sharpen->Highlight","username":"pppetrv","description":"Test for sharpen and highlight image filters.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sharpen","highlight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 highlightFilter(vec4 color, float level) {\n\n    float amt = 1.0 - level;\n    float mult = 1.0 / (amt * 0.7 + 0.3);\n    //float fadeGamma = 0.3;\n    //float faded = fadeGamma + (1.0 - fadeGamma) * mult;\n    float igamma = 1.0; //1.0 / faded;\n\n    const vec3 color_weights = vec3(0.25, 0.5, 0.25);\n    float lightmask = dot(color.rgb, color_weights);\n    float backmask = (1.0 - lightmask);\n    vec3 ones = vec3(1.0, 1.0, 1.0);\n    vec3 diff = pow(mult * color.rgb, igamma * ones) - color.rgb;\n    diff = min(diff, 1.0);\n    vec3 new_color = min(color.rgb + diff * backmask, 1.0);\n\n    float r = clamp(new_color.r, 0.0, 1.0);\n    float g = clamp(new_color.g, 0.0, 1.0);\n    float b = clamp(new_color.b, 0.0, 1.0);\n\n    return vec4(r, g, b, color.a);\n}\n\n\nvec4 sharpenFilter(vec4 textureColor, vec2 coord, sampler2D image, vec2 size, float level) {\n\n\tvec2 offset[4];\n\tfloat step_w = 1.0 / size.x;\n\tfloat step_h = 1.0 / size.y;\n\n\toffset[0] = vec2(0.0, -step_h);\n\toffset[1] = vec2(-step_w, 0.0);\n\toffset[2] = vec2(step_w, 0.0);\n\toffset[3] = vec2(0.0, step_h);\n\n    float r = clamp(textureColor.r, 0.0, 1.0);\n    float g = clamp(textureColor.g, 0.0, 1.0);\n    float b = clamp(textureColor.b, 0.0, 1.0);\n\n\tvec4 midColor = vec4(r, g, b, textureColor.a);\n\n\tvec4 sum = midColor * 5.0;\n\n\tfor (int i = 0; i < 4; i++) {\n\t\tvec4 color = texture(image, coord.xy + offset[i]);\n\t\tsum += color * -1.0;\n\t}\n\n\tvec4 result = clamp(mix(midColor, sum, level), 0.0, 1.0);\n\n    return result;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n   \n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec4 curColor = texture(iChannel0, uv);\n\n    float time = mod(iTime, 3.0);\n\n    float level = clamp(time, 0.0, 0.5);\n    \n    //float highlight = 0.2;\n    //curColor = highlightFilter(curColor, highlight);\n    \n    curColor = sharpenFilter(curColor, fragCoord, iChannel0, uv, level);\n    \n    fragColor = curColor;\n}","name":"Image","description":"","type":"image"}]}