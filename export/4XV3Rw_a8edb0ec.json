{"ver":"0.1","info":{"id":"4XV3Rw","date":"1717432418","viewed":62,"name":"3d Room fixed to screen edges","username":"alacaesar","description":"3d room fixed to viewport edges creating a depth and view angle illusion.\nUtilizing polygon fill functions by Hatokuro.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["cornell","room","edges","extension","3droom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \nUtilizing these polygon fill functions by Hatokuro\nhttps://www.shadertoy.com/view/stcfRf\n*/\n\nbool sameside(vec2 uv, vec3 A, vec3 B, vec3 C) // indicate which side of a line you are (0 or 1)\n{\n    vec3 u = vec3(uv.x,uv.y,0.0);\n    vec3 valuexy = cross(B-A,C-A);\n    vec3 valuexz = cross(B-A,u-A);\n    \n    if(dot(valuexy,valuexz)>=0.){return true;}\n    else{return false;}   \n}\n\nbool inTriangle(vec2 uv,vec3 v[3]) // indicate whether you are inside a triangle (3rd line)\n{\n    if(sameside(uv,v[0],v[1],v[2]) && sameside(uv,v[1],v[2],v[0]) && sameside(uv,v[2],v[0],v[1])){return true;}\n    else{return false;}\n   \n}\n\n\n\n// position shift of the back wall -0.5 to .5;\nfloat _x = .0;\nfloat _y = .0;\n\n// size of the back wall 0.0 to 1.0;\nfloat bsize = .2;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float x = uv.x;\n    float y = uv.y;\n    \n    float lp = (1. - bsize) * .5;\n    float rp = lp + bsize;\n    \n    _x = cos(iTime) * .4;\n    _y = cos(iTime * .8) * .3;\n    \n\n    // Time varying pixel color\n    vec3 gradient = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec3 col = vec3(1.);\n    \n    // right wall\n    vec3 vr[3];\n    vr[0] = vec3(0.5 + _x,0.5 + _y,0.0);\n    vr[1] = vec3(1.0,1.0,0.0);\n    vr[2] = vec3(1.0,0.0,0.0);\n    \n    // floor\n    vec3 vf[3];\n    vf[0] = vec3(0.5 + _x,0.5 + _y,0.0);\n    vf[1] = vec3(1.0,0.0,0.0);\n    vf[2] = vec3(0.0,0.0,0.0);\n    \n    // left wall\n    vec3 vl[3];\n    vl[0] = vec3(0.5 + _x,0.5 + _y,0.0);\n    vl[1] = vec3(0.0,1.0,0.0);\n    vl[2] = vec3(0.0,0.0,0.0);\n    \n    // cieling\n    vec3 vc[3];\n    vc[0] = vec3(0.5 + _x,0.5 + _y,0.0);\n    vc[1] = vec3(1.0,1.0,0.0);\n    vc[2] = vec3(0.0,1.0,0.0);\n    \n    \n    // back wall shift relative to it's size;\n    float kx = _x * (1. - bsize);\n    float ky = _y * (1. - bsize);\n    \n\n    if(x > lp + kx && x < rp + kx && y > lp + ky && y < rp + ky){\n        col = vec3(1.0);\n    \n    }else if( inTriangle(uv,vr) ){\n        col = vec3((1. - x) / (lp - kx));\n    \n    }else if( inTriangle(uv,vf) ){\n        col = vec3(y / (lp + ky));\n        \n    }else if( inTriangle(uv,vl) ){\n        col = vec3(x / (lp + kx));\n    \n    }else if( inTriangle(uv,vc) ){\n        col = vec3((1. - y) / (lp - ky));\n    \n    }\n\n    // Output to screen\n    fragColor = vec4(gradient,1.0) * vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}