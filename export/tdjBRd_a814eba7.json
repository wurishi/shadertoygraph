{"ver":"0.1","info":{"id":"tdjBRd","date":"1590641356","viewed":330,"name":"Lightning drop gravity","username":"TAKUSAKU","description":"Lightning drop gravity","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["drop","lightning","gravity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2D rotate\nmat2 rotate(in float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\n// noise background is baced on 李明杰VIP:\n// https://www.shadertoy.com/view/4sVBDm\n// ----------------------------------------- \n//noise background\nconst float noiseIntensity = 2.8;\nconst float noiseDefinition = 0.6;\nconst vec2 glowPos = vec2(-2., 0.);\n\nfloat random(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(-0.940,-0.880))) * 43758.5453);\n}\n\nfloat noise( in vec2 p ){\n    p*=noiseIntensity;\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\tvec2 u = f*f*(3.-2.*f);\n    return mix( mix( random( i + vec2(0.0,0.0) ), \n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ), \n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat fbm( in vec2 uv ){\t\n\tuv *= 5.;\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n    float f  = 0.5*noise( uv ); uv = m*uv;\n    f += 0.2500*noise( uv ); uv = m*uv;\n    f += 0.1250*noise( uv ); uv = m*uv;\n    f += 0.0625*noise( uv ); uv = m*uv;\n    \n\tf = 0.5 + .5*f;\n    return f;\n}\n\nvec3 bg(vec2 uv ){\n    float velocity = iTime * 0.5;\n    float intensity = sin(uv.x*9.*sin(iTime*0.1)+velocity*3.)*noise(uv*2.)*3.0+.3;\n    uv.y -= 4.;\n    vec2 bp = uv+glowPos;\n    uv *= noiseDefinition;\n\n    //ripple\n    float rb = fbm(vec2(uv.x*.5-velocity*.03, uv.y))*.1;\n    uv += rb;\n\n    //coloring\n    float rz = fbm(uv*.9+vec2(velocity*.35, 0.0));\n    rz *= dot(bp*intensity,bp);\n\n    //bazooca line\n    rz *= sin(uv.x*0.1+velocity*0.8);\n    \n    //lightning\n    rz *= 5.*sin(uv.x*0.1+velocity*sin(iTime));\n    \n    vec3 bgColor = vec3(cos(iTime),0.45 * sin(iTime*0.2),sin(iTime*0.3));\n    vec3 col = bgColor/(.1-rz);\n    \n    return sqrt(abs(col));\n}\n// ----------------------------------------- \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Wide-angle lens is baced on Menger Sponge Variation\n    // https://www.shadertoy.com/view/ldyGWm\n    vec3 st = (vec3(2.0 * fragCoord - iResolution.xy, iResolution.y));\n    st = normalize(vec3(st.xy, sqrt(max(st.z * st.z - dot(st.xy, st.xy) *4.*sin(iTime*0.5),0.)))); \n    \n    st.xy *= rotate(iTime*0.5);\n    \n    vec3 bgCol = bg(st.xy)*(1.9-abs(st.y*2.));\n       \n\tfragColor = vec4(bgCol, 1.0);\n}","name":"Image","description":"","type":"image"}]}