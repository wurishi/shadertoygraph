{"ver":"0.1","info":{"id":"wsyBRV","date":"1609172846","viewed":270,"name":"Stay healthy","username":"andrinr","description":"weird game of life adaptation","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["biology"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*0.1;\n    vec3 buffer = texture(iChannel0,uv).xyz;\n    fragColor = vec4(vec3(buffer.x),1.);\n    //fragColor = vec4(iMouse.xy/iResolution.xy, 0., 0.);\n    //fragColor = vec4(buffer,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Lichen\n\n\n// Andrin Rehmann\n// 2020\n// andrinrehmann.ch\n// andrinrehmann@gmail.com\n\n\n//note: uniformly distributed, normalized rand, [0;1[\nfloat nrand( vec2 n )\n{\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nfloat rand( vec2 uv )\n{\n\tfloat t = fract( iTime );\n\treturn nrand( uv + 0.07*t );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat du = 1. / iResolution.x;\n    float dv = 1. / iResolution.y;\n    \n\tvec2 uv = fragCoord/iResolution.xy;\n    \n\tfloat y = texture(iChannel0,uv).x;\n    // food\n    float f = texture(iChannel0,uv).z;\n    \n    // sum of surrounding y's\n    float s = 1./12. * texture(iChannel0,uv + vec2(-du,-dv)).x +\n              1./6.  * texture(iChannel0,uv + vec2(-du,0)).x + \n              1./12. * texture(iChannel0,uv + vec2(-du,dv)).x + \n              1./6.  * texture(iChannel0,uv + vec2(0,-dv)).x + \n              1./6.  * texture(iChannel0,uv + vec2(0,dv)).x +\n              1./12. * texture(iChannel0,uv + vec2(du,-dv)).x +\n              1./6.  * texture(iChannel0,uv + vec2(du,0)).x + \n              1./12. * texture(iChannel0,uv + vec2(du,dv)).x;\n\n    \n    // Sorry for the lack of comments\n    // But I dont understand it either\n    \n    if (f > 0.8){\n        y += 0.02 * y;\n        f -= 0.02;\n    }\n    else{\n        y -= 0.05 * y;\n        f += 0.01;\n    }\n    \n    if (s > sin(iTime*0.04)){\n        y -= 0.1 + 0.05*sin(iTime*0.08);\n    }\n    else{\n    \n        y += 0.1 + 0.03*cos(iTime*0.063);\n    }\n\n    // Init\n    if (iFrame < 1 && rand(uv) > 0.9){\n        y = rand(uv);\n        f = rand(uv+vec2(0.2));\n    }\n    \n    fragColor = vec4(y, 0, f, 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}