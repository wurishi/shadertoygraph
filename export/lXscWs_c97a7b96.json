{"ver":"0.1","info":{"id":"lXscWs","date":"1726802675","viewed":33,"name":"[ARTS1308] Simple Kaleidoscope","username":"ARTS1308","description":"Simple kaleidoscope to demonstrate how symmetry folding works","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["symmetry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy - 0.5;  \n    uv.x *= iResolution.x / iResolution.y;\n    \n    ivec2 iuv = ivec2(int(fragCoord.x), int(fragCoord.y));\n\n//    uv = fract(uv*2.)/2.;\n    uv = abs(uv);\n    if(uv.x > .5) uv.x = 1. - uv.x;\n    if(uv.y > uv.x) uv = vec2(uv.y, uv.x);\n    uv *= mat2(cos(t), sin(t), -sin(t), cos(t));\n    fragColor = texture(iChannel0, uv);\n//    fragColor = texelFetch(iChannel0, iuv, 0);\n}","name":"Image","description":"","type":"image"}]}