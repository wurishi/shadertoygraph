{"ver":"0.1","info":{"id":"NtSXRm","date":"1627289346","viewed":358,"name":"Pixelated Transition Effect, pt2","username":"chenglou","description":"See original for the simpler, discrete tiles size version\nThis one has:\n- continuous tile size\n- centered zooming animation\n- independently configurable tile width & height","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["pixel","fx"],"hasliked":0,"parentid":"ftSXRm","parentname":"Pixelated Transition Effect, pt1"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CORRECT 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // width & height can be configured independently\n    vec2 tileSize = vec2((sin(iTime) + 1.) * 200. + 1.); // from 1 to 401\n\n    // Careful! You want to center a tile instead of start positioning tiles from 0,0\n    // otherwise, the zooming effect looks like it's displacing tiles to the right.\n    // Change CORRECT above to 0 see the visual glitch.\n    vec2 edgePadding = mod(iResolution.xy / 2. - tileSize / 2., tileSize); // might wanna sketch it out to understand it\n    vec2 tileIndex = ceil((fragCoord - edgePadding) / tileSize); // starts from 0\n    \n    #if CORRECT\n    fragColor = texture(iChannel0, (edgePadding + tileIndex * tileSize - tileSize / 2.) / iResolution.xy);\n    #else\n    fragColor = texture(iChannel0, (floor(fragCoord / tileSize) * tileSize + tileSize / 2.) / iResolution.xy);\n    #endif\n}","name":"Image","description":"","type":"image"}]}