{"ver":"0.1","info":{"id":"3sSBWV","date":"1590789993","viewed":57,"name":"Fake Little Planet","username":"marlus","description":"fake little planet projection","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["littleplanet","stereography"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592653589793;\n\nfloat zoom = 5.;\nvec2 res = vec2(0.5,0.5);\n\nmat3 rotAxis(vec3 axis, float a) {\n    float s=sin(a);\n    float c=cos(a);\n    float oc=1.0-c;\n    vec3 as=axis*s;\n    mat3 p=mat3(axis.x*axis,axis.y*axis,axis.z*axis);\n    mat3 q=mat3(c,-as.z,as.y,as.z,c,-as.x,-as.y,as.x,c);\n    return p*oc+q;\n}\n\nvec2 halfmirror(vec2 uv){\n    \n    float mid = step(0.5,uv.x);\n    float uv1 = uv.x * 2. * (1. - mid);\n    float uv2 = (1. - uv.x) * 2. * mid;\n    \n    return vec2(uv1+uv2,uv.y);\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 pos = uv * 2. -1.;\n    \n    pos *= zoom * res;\n    \n    float x2y2 = pos.x*pos.x + pos.y*pos.y;\n    vec3 pnt = vec3(2.*pos, x2y2-1.)/(x2y2+1.);\n    \n    pnt = rotAxis(vec3(0,0,1), iTime) * pnt;\n    pnt = rotAxis(vec3(1,0,0), iMouse.x*0.1) * pnt;\n    \n    vec2 UV = vec2(\n    \t(atan(pnt.y,pnt.x)/PI+1.)*0.5,\n        (asin(pnt.z)/PI+0.5)\n    );\n    \n    \n    fragColor = texture(iChannel0, halfmirror(UV));\n}","name":"Image","description":"","type":"image"}]}