{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define t iTime\n#define r iResolution.xy\n#define v vec2(0,1)\n\nfloat sphere(vec3 p,float b)\n{\n    return length(p)-b;\n}\n\nfloat box(vec3 p,vec3 b)\n{\n    vec3 d=abs(p)-b;\n    return min(max(d.x,max(d.y,d.z)),0.)+length(max(d,0.));\n}\n\nfloat box(vec3 p,float b){return box(p,vec3(b));}\n\nfloat bar(vec2 p,vec2 b)\n{\n    vec2 d=abs(p)-b;\n    return min(max(d.x,d.y),0.)+length(max(d,0.));\n}\n\nfloat crossBar(vec3 p,float b)\n{\n    float da=bar(p.xy,vec2(b)),\n        db=bar(p.yz,vec2(b)),\n        dc=bar(p.zx,vec2(b));\n    return min(da,min(db,dc));\n}\n\nfloat distFunc(vec3 p)\n{\n    float ret=box(p,.3);\n    for(float c=0.;c<4.;c+=1.)\n    {\n        float pw=pow(3.,c);\n        ret=max(ret,-crossBar(mod(p+.15/pw,.6/pw)-.15/pw,.1/pw));\n    }\n    return ret;\n}\n\nvec3 getNormal(vec3 p)\n{\n\tfloat d=1E-3;\n\treturn normalize(vec3(\n\t\tdistFunc(p+vec3(d,0.,0.))-distFunc(p+vec3(-d,0.,0.)),\n\t\tdistFunc(p+vec3(0.,d,0.))-distFunc(p+vec3(0.,-d,0.)),\n\t\tdistFunc(p+vec3(0.,0.,d))-distFunc(p+vec3(0.,0.,-d))\n\t));\n}\n\nfloat shadow(vec3 ro,vec3 rd,float k)\n{\n    float ret=1.;\n    float t=1E-2;\n    for(float c=0.;c<32.;c+=1.)\n    {\n        float h=distFunc(ro+rd*t);\n        if(h<1E-4){return 0.;}\n        t+=h;\n        ret=min(ret,k*h/t);\n        if(1E-0<t){return ret;}\n    }\n    return 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p=(fragCoord.xy*2.-r)/r.x;\n\tvec3 camP=vec3(.7);\n\tvec3 camC=vec3(0.,-.1,0.);\n\tvec3 camA=vec3(0.,1.,0.);\n\tvec3 camS=cross(normalize(camC-camP),camA);\n\tvec3 camU=cross(camS,normalize(camC-camP));\n\tvec3 ray=normalize(camS*p.x+camU*p.y+normalize(camC-camP));\n    vec3 lig=normalize(vec3(.1,.3,1.));\n\t\n\tfloat dist=0.;\n\tfloat rayL=0.;\n\tvec3 rayP=camP;\n    for(int i=0;i<32;i++){\n        dist=distFunc(rayP);\n        rayL+=dist;\n        rayP=camP+ray*rayL;\n    }\n\t\n\tif(abs(dist)<1E-2){\n        vec3 nor=getNormal(rayP);\n        float sha=shadow(rayP,lig,9.);\n\t\tfloat frag=dot(lig,nor);\n\t\tfragColor=vec4(vec3(frag)*1.6/clamp(rayL,1.8,99.)*(sha*.7+.3),1.);\n\t}else{\n\t\tfragColor=vec4(vec3(0.,0.,0.), 1.0);\n\t}\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sfSWX","date":"1407153833","viewed":432,"name":"20141207_Menger Sponge","username":"FMS_Cat","description":"uooo","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""}}