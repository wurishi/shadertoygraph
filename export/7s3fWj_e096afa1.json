{"ver":"0.1","info":{"id":"7s3fWj","date":"1657192124","viewed":34,"name":"Naive Fluid Sim","username":"saalty","description":"fluid, click anywhere","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(\n    vec3(\n        (texture(iChannel0, uv).yx), 0.0\n        ),\n     1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define VORTICITY 4.0\nvec2 snormalize(vec2 v)\n{\n    return normalize(v);\n    \n}\n\nvec2 map(vec2 v, vec2 lower, vec2 upper)\n{\n    return ((v - lower.x) * ((upper.y - upper.x) / (lower.y - lower.x))) + upper.x;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if (iFrame == 0) fragColor = texture(iChannel1, uv) * 10000.0 - 5000.0;\n    else\n    {\n    \n        \n        vec2 unit = vec2(1) / iResolution.xy;\n        vec2 v1 = texture(iChannel0, uv + unit * vec2(1, 1)).xy * 2.0 - 1.0;\n        vec2 v2 = texture(iChannel0, uv + unit * vec2(-1, 1)).xy * 2.0 - 1.0;\n        vec2 v3 = texture(iChannel0, uv + unit * vec2(1, -1)).xy * 2.0 - 1.0;\n        vec2 v4 = texture(iChannel0, uv + unit * vec2(-1, -1)).xy * 2.0 - 1.0;\n        vec2 v5 = texture(iChannel0, uv + unit * vec2(0, -1)).xy * 2.0 - 1.0;\n        vec2 v6 = texture(iChannel0, uv + unit * vec2(0, 1)).xy * 2.0 - 1.0;\n        vec2 v7 = texture(iChannel0, uv + unit * vec2(-1, 0)).xy * 2.0 - 1.0;\n        vec2 v8 = texture(iChannel0, uv + unit * vec2(1, 0)).xy * 2.0 - 1.0;\n        vec2 avg = (\n        v1 * pow(max(dot(normalize(vec2(-1, -1)), normalize(v1)), 0.0), VORTICITY) + \n        v2 * pow(max(dot(normalize(vec2(1, -1)), normalize(v2)), 0.0), VORTICITY) + \n        v3 * pow(max(dot(normalize(vec2(-1, 1)), normalize(v3)), 0.0), VORTICITY) + \n        v4 * pow(max(dot(normalize(vec2(1, 1)), normalize(v4)), 0.0), VORTICITY) + \n        v5 * pow(max(dot(normalize(vec2(0, 1)), normalize(v5)), 0.0), VORTICITY) + \n        v6 * pow(max(dot(normalize(vec2(0, -1)), normalize(v6)), 0.0), VORTICITY) + \n        v7 * pow(max(dot(normalize(vec2(1, 0)), normalize(v7)), 0.0), VORTICITY)  + \n        v8 * pow(max(dot(normalize(vec2(-1, 0)), normalize(v8)), 0.0), VORTICITY)\n        ) / 1.505;\n        \n        fragColor = vec4(avg * 0.5 + 0.5, length(avg), 1.0);\n        if (length(iMouse.xy - fragCoord) < 40.0 && iMouse.z > 0.0) \n        {\n            fragColor = vec4(-10000, 10000, 100, 1.0);\n        }\n        \n        if (fragCoord.x < 2.0) \n        {\n            fragColor = vec4(100000, 0.5, 100, 1.0);\n        }\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"}]}