{"ver":"0.1","info":{"id":"dsXBWl","date":"1689337585","viewed":67,"name":"mega-hypnocross","username":"numpyhard","description":"More on the theme of hypnotic proselytising shaders.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"mdXBWl","parentname":"Hypnocross"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    float sdf1 = length(max(vec2(0.), abs(uv+vec2(0., -0.15))-vec2(0.35,0.075)));\n    float sdf2 = length(max(vec2(0.), abs(uv)-vec2(0.075, 0.5)));\n    vec3 pcol = palette(2.0*sin(atan(sdf2,sdf1)) + iTime);\n    \n    float lattice = sin(20.0*sdf1+7.0*iTime)*sin(20.0*sdf2+7.0*iTime);\n    \n    float mult = 0.5*sin(100.0*atan(sdf2,sdf1)+20.0*iTime)+0.5;\n    mult += lattice;\n    mult = 0.1/pow(mult,1.0);\n    //mult -= lattice;\n    vec3 col = mult*pcol;\n    //    vec3 col = palette(sin(atan(sdf2,sdf1)) + iTime);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}