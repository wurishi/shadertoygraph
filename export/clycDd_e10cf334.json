{"ver":"0.1","info":{"id":"clycDd","date":"1700777888","viewed":129,"name":"fireworks by Simon Schuler","username":"SchulerSimon","description":"This is my take on https://www.youtube.com/watch?v=xDxAnguEOn8 by The Art of Code\n\nStrangely the stars seem to twitch (not twinkle) on my GPU. Maybe someone has an idea what might cause this?","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["stars","night","fireworks","dark"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nAuthor: Simon Schuler (https://github.com/SchulerSimon)\n\nMIT License\n\nThis is my take on https://www.youtube.com/watch?v=xDxAnguEOn8 by The Art of Code\n*/\n\n#define NUM_PARTICLES 75.0\n#define NUM_EXPLOSIONS 5.0\n#define PI 3.1415926\n\nfloat hash11(float t) {\n    return fract(sin(t * 6857.92) * 98.3);\n}\n\nvec2 hash12(float t) {\n    float x = fract(sin(t * 587.34) * 93.87);\n    float y = fract(sin((t + x) * 877.021) * 276.345);\n    return vec2(x, y);\n}\n\nvec2 hash12_polar(float t) {\n    vec2 rand = hash12(t);\n    rand.x *= 2.0 * PI;\n    return vec2(sin(rand.x), cos(rand.x)) * rand.y;\n}\n\nfloat hash21(vec2 p) {\n    p = fract(p * vec2(983.12, 372.97));\n    p += dot(p, p + 498.32);\n    return fract(p.x * p.y);\n}\n\nfloat explosion(vec2 uv, float t) {\n    float sparks = 0.0;\n    for(float i = 0.0; i < NUM_PARTICLES; i ++ ) {\n        vec2 dir = hash12_polar(i + 1.0) * 0.5;\n        float d = length(uv - dir * t);\n        float brightness = mix(0.0002, 0.0005, smoothstep(0.05, 0.0, t));\n        brightness *= sin(t * 20.0 + i) * 0.33 + 0.66;\n        brightness *= smoothstep(t, 1.0, 0.85);\n        sparks += brightness / d;\n    }\n    return sparks;\n}\n\nvec3 explosions(vec2 uv, float t) {\n    vec3 col = vec3(0);\n    for(float i = 0.0; i < NUM_EXPLOSIONS; i ++ ) {\n        t += i / NUM_EXPLOSIONS;\n        t *= 0.3 + hash11(i + 1.0) * 0.7;\n        float ft = floor(t);\n        vec3 expl_color = sin(vec3(0.23, 0.58, 0.97) * ft * 30.0) * 0.33 + 0.66;\n        vec2 offset = hash12(i + 9.0 + ft) - 0.5;\n        offset *= vec2(0.9, 0.9);\n        col += explosion(uv - offset, fract(t)) * expl_color;\n    }\n    return col *= 1.5;\n}\n\nvec3 stars(vec2 uv, float t) {\n    vec3 col = vec3(0);\n    t *= 0.04;\n    float twinkle = dot(length(sin(uv + t)), length(cos(uv * vec2(8.3, 6.2) - t * 3.0)));\n    twinkle = sin(twinkle * 40.0) * 0.5 + 0.5;\n    twinkle *= 0.4;\n    float stars = pow(hash21(uv), 200.0) * twinkle;\n    col += stars;\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.x;\n    vec3 col = vec3(0);\n    \n    uv*= 2.;\n    // stars\n    col += stars(uv, iTime);\n    \n    // explosions\n    col += explosions(uv, iTime);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}