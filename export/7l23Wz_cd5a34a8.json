{"ver":"0.1","info":{"id":"7l23Wz","date":"1623763873","viewed":144,"name":"horizontal slice and dice","username":"bboettcher3","description":"slices and dices webcam horizontally","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["slice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_SLICES 5.0\n#define SLICE_INCREMENT (1.0 / NUM_SLICES)\n#define SPEED 4.0\n#define INTENSITY .1\n#define PI 3.14\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pixel = fragCoord.xy / iResolution.xy;\n    float offset = 0.0;\n    float i = 0.0;\n    for (; i < NUM_SLICES; ++i) {\n        if (pixel.y < i * SLICE_INCREMENT) {\n            offset = i * SLICE_INCREMENT;\n            break;\n        }\n    }\n    \n    pixel.x += sin(offset * iTime * SPEED) * INTENSITY - .05;\n    //pixel.x += sin(INTENSITY * 2.0 * PI* offset);\n    vec3 videoTexture = texture(iChannel0, pixel).xyz;\n    \n\tfragColor = vec4(videoTexture, 1.0);\n}","name":"Image","description":"","type":"image"}]}