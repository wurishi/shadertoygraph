{"ver":"0.1","info":{"id":"XXjGDt","date":"1709022039","viewed":169,"name":"Balatro website effect","username":"stelabouras","description":"Shader effect taken from Balatro website: https://www.playbalatro.com/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["swirl","distortion","animated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PIXEL_SIZE_FAC 700.0\n#define SPIN_EASE 0.5\n#define colour_2 vec4(0.0,156./255.,1.,1.0)\n#define colour_1 vec4(0.85,0.2,0.2,1.0)\n#define colour_3 vec4(0.0,0.0,0.0,1.0)\n#define spin_amount 0.7\n#define contrast 1.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     //Convert to UV coords (0-1) and floor for pixel effect\n    float pixel_size = length(iResolution.xy)/PIXEL_SIZE_FAC;\n    vec2 uv = (floor(fragCoord.xy*(1.0/pixel_size))*pixel_size - 0.5*iResolution.xy)/length(iResolution.xy) - vec2(0.0, 0.0);\n    float uv_len = length(uv);\n\n    //Adding in a center swirl, changes with iTime. Only applies meaningfully if the 'spin amount' is a non-zero number\n    float speed = (iTime*SPIN_EASE*0.1) + 302.2;\n    float new_pixel_angle = (atan(uv.y, uv.x)) + speed - SPIN_EASE*20.*(1.*spin_amount*uv_len + (1. - 1.*spin_amount));\n    vec2 mid = (iResolution.xy/length(iResolution.xy))/2.;\n    uv = (vec2((uv_len * cos(new_pixel_angle) + mid.x), (uv_len * sin(new_pixel_angle) + mid.y)) - mid);\n\n\t//Now add the paint effect to the swirled UV\n    uv *= 30.;\n    speed = iTime*(1.);\n\tvec2 uv2 = vec2(uv.x+uv.y);\n\n    for(int i=0; i < 5; i++) {\n\t\tuv2 += uv + cos(length(uv));\n\t\tuv  += 0.5*vec2(cos(5.1123314 + 0.353*uv2.y + speed*0.131121),sin(uv2.x - 0.113*speed));\n\t\tuv  -= 1.0*cos(uv.x + uv.y) - 1.0*sin(uv.x*0.711 - uv.y);\n\t}\n\n    //Make the paint amount range from 0 - 2\n    float contrast_mod = (0.25*contrast + 0.5*spin_amount + 1.2);\n\tfloat paint_res =min(2., max(0.,length(uv)*(0.035)*contrast_mod));\n    float c1p = max(0.,1. - contrast_mod*abs(1.-paint_res));\n    float c2p = max(0.,1. - contrast_mod*abs(paint_res));\n    float c3p = 1. - min(1., c1p + c2p);\n\n    vec4 ret_col = (0.3/contrast)*colour_1 + (1. - 0.3/contrast)*(colour_1*c1p + colour_2*c2p + vec4(c3p*colour_3.rgb, c3p*colour_1.a)) + 0.3*max(c1p*5. - 4., 0.) + 0.4*max(c2p*5. - 4., 0.);\n\n    fragColor = ret_col;\n}","name":"Image","description":"","type":"image"}]}