{"ver":"0.1","info":{"id":"NtyyWy","date":"1662069018","viewed":143,"name":"Fresh Coffee","username":"scry","description":"I'm practicing making more photorealistic scenes. Of course this isn't entirely realistic but I'm happy with how the steam looks and the overall scene. I welcome any tips both artistically and for the code itself. :)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","shadow","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///////////////////////////////////////////////////////////////////////\n#define pi acos(-1.)\n#define deg pi/180.\n#define time iTime*0.1\n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec3 cpos(void) {\n    vec3 c = vec3(0.);\n    c.z -= 14.;\n    c.y += 9.;\n    c.xz *= r2d(deg*10.+sin(time*1.)*deg*30.);\n    //c.zy *= r2d(deg*30.);\n    c.zy *= r2d((sin(time*0.5)*0.3+0.35)*0.5);\n    return c;\n}\n\nmat4 eye(void) {\n    vec3 c = cpos();\n    vec3 l = vec3(0.,3.78,0.);\n    vec3 f = normalize(l-c);\n    vec3 r = normalize(cross(vec3(0.,1.,0.),f));\n    vec3 u = cross(f,r);\n    return mat4(r.x,r.y,r.z,0.,\n                u.x,u.y,u.z,0.,\n                f.x,f.y,f.z,0.,\n                0.,0.,0.,1.);\n}\n\nfloat sdCyl(vec3 p, vec2 s) {\n    return max(length(p.xz)-s.x,abs(p.y)-s.y);\n}\n\nfloat cup(vec3 p, float s) {\n    p.y -= 3.9*0.5;\n    float d = sdCyl(p,vec2(2.7,3.9)*0.5);\n    d = max(d,-sdCyl(p+vec3(0.,-0.1,0.),vec2(2.6,3.9)*0.5));\n    float hs = 1.5;\n    p.x += 1.;\n    d = min(d,max(sdCyl(p.xzy,vec2(hs,0.2)),-sdCyl(p.xzy,vec2(hs-0.2,0.25))));\n    return d;\n}\n\nfloat cof(vec3 p) {\n    p.y -= 3.9*0.5;\n    vec3 o = p;\n    //p.y += sin(p.x*1.5+time*24.)*0.02-0.;\n    //p.y += cos(p.z*1.5+time*24.)*0.02-0.;\n    //p.y += sin(p.x*8.+time*24.)*0.005-0.;\n    //p.y += sin(p.z*10.+time*14.)*0.005-0.;\n    float d = sdCyl(p,vec2(2.7,3.3)*0.490);\n    p.y -= 3.3*0.49;\n    o = p;\n    vec3 bp = p;\n    float bd = 6.;\n    p.y += (sin(o.x-time)+sin(o.z*3.+time))*0.1;\n    p.y = (fract(p.y*10.)-0.5)/10.;\n    bp.xz = (fract(bp.xz*bd)-0.5)/bd;\n    d = min(d,length(bp)-0.01);\n    for (int i=0;i<2;i++) {\n        bp = p;\n        bd += 2.;\n        bp.xz *= r2d(0.1+sin(p.x+time)*0.45);\n        bp.xz = (fract(bp.xz*bd)-0.5)/bd;\n        d = min(d,length(bp)-0.02+o.y);\n    }\n    //d = max(d,o.y-0.0);\n    //d += sin(p.x*20.);\n    d = max(d,sdCyl(p,vec2(2.7,3.3)*0.490));\n    return d;\n}\n\nfloat bubs(vec3 p) {\n    p.y -= 3.9*0.5+3.3*0.49;\n    vec3 o = p;\n    float bd = 3.;\n    vec2 bi = floor(p.xz*bd-0.5);\n    \n    p.xz = (fract(p.xz*bd-0.5)-0.5)/bd;\n    //p.xz *= r2d(p.y*9.+time+bi.x+bi.y);\n    //p.xz += 0.2/bd;\n    \n    //p.xz += vec2(sin(bi.x-time*20.+p.y*6.),cos(bi.y-time*20.+p.y*6.))*0.1;\n    float yd = 4.;\n    //p.y -= time;\n    //p.y -= time+sin(bi.x)+sin(bi.y*4.+time*0.1);\n    //p.y = (fract(p.y*14.)-0.5)/14.;\n    \n    //float d = abs(length(p)-0.1)-0.01;\n    //d = min(d,abs(length(o)-0.5)-0.01);\n    float d = length(o)-2.7/2.1;\n    d = abs(d)-0.05;\n    p = o;\n    p.x += 0.75;\n    float c = length(p.xz);\n    p *= 1.3;\n    //p.xy *= r2d(deg*-5.);\n    p.xz = p.xz/dot(p.xz,p.xz);\n    p.x += 0.7;\n    p.xz *= r2d(time*0.4);\n    p.xz = (fract(p.xz*0.25)-0.5)/.1;\n    p.xz = p.xz/dot(p.xz,p.xz);\n    d = min(d,abs(length(p)-0.2)-0.012+c*0.01);\n    d = max(d,abs(o.y-0.)-0.01);\n    d = max(d,sdCyl(o,vec2(2.7,3.3)*0.490));\n    return d;\n}\n\nfloat smok(vec3 p) {\n    p.y -= 4.;\n    vec3 o = p;\n    float bd = 5.;\n    vec2 bi = floor(p.xz*bd-0.5);\n    \n    p.xz = (fract(p.xz*bd-0.5)-0.5)/bd;\n    p.xz *= r2d(p.y*9.+time+bi.x+bi.y);\n    p.xz += 0.2/bd;\n    \n    //p.xz += vec2(sin(bi.x-time*20.+p.y*6.),cos(bi.y-time*20.+p.y*6.))*0.1;\n    float yd = 4.;\n    p.y -= time;\n    //p.y -= time+sin(bi.x)+sin(bi.y*4.+time*0.1);\n    p.y = (fract(p.y*14.)-0.5)/14.;\n    float oy = o.y;\n    o.y += sin(o.x*9.+time)*sin(o.z*3.+time)*0.2;\n    float sm = clamp(-o.y*2.+2.,0.,1.);\n    float d = length(p)-mix(0.0,0.003,-o.y*2.+2.);\n    \n    //d = max(d,abs(oy-0.5)-1.);\n    d = max(d,sdCyl(o,vec2(2.7,3.3)*0.490));\n    d -= 0.45-clamp(o.y*0.1,0.,10.);\n    d *= d*d;\n    d += 0.082;\n    d = clamp(d,0.0,d+1.);\n    d = abs(d)+0.003;\n    return d;\n}\n\n\nvec4 map(vec3 p) {\n    vec3 o = p;\n    p = (eye()*vec4(p,1.)).xyz;\n    p += cpos();\n    vec3 op = p;\n    float id = 0.;\n    float d = p.y;\n    //id += 1.-step(0.,d);\n    //id += step(d,0.01);\n    float d2 = cup(p,1.);\n    id += step(d2,d);\n    d = min(d,d2);\n    \n    d2 = cof(p);\n    id += step(d2,d);\n    d = min(d,d2);\n    //id += step(d2,d);\n    //bp.y += sin(time);\n    //bp.xz = (fract(bp.xz*1.-0.5)-0.5)/1.;\n    d2 = bubs(p);\n    //id += step(d2,d);\n    d = min(d,d2);\n    id += step(d2,d);\n    d2 = smok(p);\n    id += step(d2,d)*2.;\n    d = min(d,d2);\n    id += step(d2,d);\n    //d = min(d,abs(-op.x+sin(time)*0.1)-0.01);\n    return vec4(op.xz,id,d);\n}\n\nvec4 mapd(vec3 p) {\n    vec3 o = p;\n    p = (eye()*vec4(p,1.)).xyz;\n    p += cpos();\n    vec3 op = p;\n    float id = 0.;\n    op.xz *= r2d(time*0.+1.);\n    float d = (abs(-op.x+sin(time)*0.01)-0.01);\n    vec2 om = map(o).wz;\n    //d = min(d,om.x);\n    return vec4(om.x,om.y,id,d);\n}\n\n\nvec2 RMd(vec3 ro, vec3 rd) {\n    float dO = 0.;\n    float ii = 0.;\n    for (int i=0;i<131;i++) {\n        vec3 p = ro+rd*dO;\n        float dS = mapd(p).w;\n        dO += dS;\n        ii += 0.01;\n        if (dO > 5000000. || dS < 0.001) {break;}\n    }\n    return vec2(dO,ii);\n}\n\nvec2 RM(vec3 ro, vec3 rd) {\n    float dO = 0.;\n    float ii = 0.;\n    for (int i=0;i<180;i++) {\n        vec3 p = ro+rd*dO;\n        float dS = map(p).w;\n        dO += dS;\n        ii += 0.01;\n        if (dO > 5000000. || dS < 0.001) {break;}\n    }\n    return vec2(dO,ii);\n}\n\nvec3 calcNorm(vec3 p) {\n    vec2 h = vec2(0.001,0.);\n    return normalize(vec3(\n        map(p-h.xyy).w-map(p+h.xyy).w,\n        map(p-h.yxy).w-map(p+h.yxy).w,\n        map(p-h.yyx).w-map(p+h.yyx).w\n    ));\n}\n\nvec3 sh(vec3 p, vec3 n, vec3 rd, vec3 l) {\n    l = (inverse(eye())*vec4(l,1.)).xyz;\n    vec3 ld = normalize(l-p);\n    vec2 d = RM(p-n*0.003,ld);\n    float s = 1.;\n    if( length(l-p) > d.x) {\n        s = 0.;\n    }\n    float dif = clamp(dot(ld,-n),0.,1.);\n    float a = 10.;\n    float k = 0.6;\n    vec3 r = reflect(ld,n);\n    vec3 v = rd;\n    float sp = clamp(k*pow(dot(r,v),a),0.,1.);\n    return vec3(s,dif,sp);\n}\n\nvec3 tilecf(vec2 uv) {\n    uv *= 1.45;\n    vec3 col = vec3(0.6,0.55,0.54);\n    col -= (pow(sin(uv.x)*0.5+0.5,4500.)+pow(sin(uv.y)*0.5+0.5,4500.))*0.5;\n    return col;\n}\n\nvec3 colo(vec3 p, vec3 n, vec3 ro, vec3 rd, vec2 d) {\n    vec3 col = 1.-d.xxx*0.1;\n    vec3 mp = map(p).xyz;\n    vec2 dd = RMd(ro,rd);\n    vec3 pd = ro+rd*dd.x;\n    vec4 mpd = mapd(pd).xyzw;\n    float tilem = step(abs(mp.z)-0.4,0.);\n    float cupm = step(abs(mp.z-1.)-0.4,0.);\n    float coffm = step(abs(mp.z-2.)-0.4,0.);\n    float coffbm = step(abs(mp.z-3.)-0.0,0.);\n    float smokm = step(abs(mp.z-4.)-0.1,0.);\n    vec3 tilec = tilecf(mp.xy);\n    vec3 cupc = vec3(0.1,0.1,0.13);\n    vec3 coffc = vec3(0.1,0.0,0.);\n    vec3 coffbc = vec3(0.5,0.4,0.4);\n    vec3 smokc = vec3(0.8,0.8,1.);\n    vec3 spos = vec3(0.,800000.,0.);\n    spos.xy *= r2d(-deg*40.);\n    spos.xz *= r2d(1.);\n    col = clamp(col,0.,1.);\n    \n    vec3 sunsh = sh(p,n,rd,spos);\n    col = col*(1.-tilem)+tilec*tilem;\n    col = col*(1.-cupm)+cupc*cupm;\n    col = col*(1.-coffm)+coffc*coffm;\n    col = col*(1.-coffbm)+coffbc*coffbm;\n    col = col*(1.-smokm)+smokc*smokm;\n    float sl = sunsh.y*sunsh.x+sunsh.z;\n    vec3 sunc = vec3(1.,0.5,0.5)*10.;\n    col += d.y*0.5;\n    col *= sl;\n    col += 0.05;\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 R = iResolution.xy;\n    float ar = R.x/R.y;\n    uv -= 0.5;\n    uv.x *= ar;\n    vec3 col =vec3(0.);\n    vec3 ro = vec3(0.);\n    uv.y -= 0.25;\n    vec3 rd = normalize(vec3(uv,2.7));\n    vec2 d = RM(ro,rd);\n    vec3 p = ro+rd*d.x;\n    vec3 n = calcNorm(p);\n    col = colo(p,n,ro,rd,d);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}