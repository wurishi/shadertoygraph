{"ver":"0.1","info":{"id":"sdBfWt","date":"1647346010","viewed":121,"name":"SimpleStripedFractal(epileptic)","username":"MrHAX00","description":"Just wanted to see what i could do with acos and dot and somehow ended up making this?\n\nAs the number of stripes increase you'll begin seeing repeating patterns until the accuracy becomes too low.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","trigonometry","radians","trigonometricfractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Zoom 1.\n#define Offset vec2(0., 0.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    uv /= Zoom;\n\n    float Time = iTime * iTime * .1;\n    uv -= Offset * Time;\n    \n    float Angle = 1. - acos(dot(vec2(1., 0.), uv / length(uv))) / pi;\n    vec3 col = vec3(0.);\n    \n    if (mod(abs(Angle - .5) * 2. * Time , 1. / Time) <= (1. / Time) * .5) {\n        col = vec3(1.);\n    } else {\n        col = vec3(0.);\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pi 3.14159","name":"Common","description":"","type":"common"}]}