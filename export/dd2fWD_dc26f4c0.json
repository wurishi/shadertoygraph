{"ver":"0.1","info":{"id":"dd2fWD","date":"1689747868","viewed":37,"name":"Cauldron(pik)","username":"pik","description":"lune","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["raytracing","raymarching","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","previewfilepath":"/media/ap/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lightpos=vec3(1.,1.,-1.);///change!!!\nconst vec3 lightcolor=vec3(1.,1.,1.);\nconst vec3 PBRlightcolor=vec3(0.5,0.5,0.5);\nfloat roughness=0.4;///change!!!\nvec3 F0=vec3(0.04);\nfloat metallic=0.8;///change!!!\nconst vec3 albedo=vec3(0.9,0.9,0.9);\nconst vec3 specularcolor=vec3(0.9,0.9,0.9);\nconst vec3 amb=vec3(0.001);//////with AO?\n\nfloat sabs(float x,float k){\n    return sqrt(x*x+k);\n}\nfloat smin(float a,float b,float k){\n    return (a+b-sabs(a-b,k))*0.5;\n}\n//LUNE\nvec3 transform(vec3 p,float angle){\n    p.xz*=rot(angle);\n    p.xy*=rot(angle*0.7);\n    return p;\n}\n\nfloat character(vec2 p,float l,float s,float id){\n    if(id<1.) return Y(p,l,s);\n    else if(id<2.)return R(p,l,s);\n    else if(id<3.)return A(p,l,s);\n    else if(id<4.)return S(p,l,s);\n    else if(id<5.)return R(p,l,s);\n    else if(id<6.)return E(p,l,s);\n    else if(id<7.)return V(p,l,s);\n    else if(id<8.) return I(p,l,s);\n    else if(id<10.)return N(p,l,s);\n    else if(id<11.)return A(p,l,s);\n    else return 0.;\n}\n\nvec4 LUNE(vec3 ro,vec3 rd,vec3 pos,float angle,float id){\n    vec4 col=vec4(0.);\n    float t=dot(pos-ro,rd);\n    vec3 p=ro+rd*t;\n    float y=length(pos-p);//sphere\n    if(y<1.){\n        float x=sqrt(1.-y);//length to plene to intersection\n        vec3 pF=ro+rd*(t-x)-pos;//front intersection\n        pF=transform(pF,angle);\n        vec2 uvF=vec2(atan(pF.x,pF.z),pF.y);\n        uvF*=vec2(0.25,0.5);\n        float f=character(uvF,0.2,0.01,id);\n        vec4 front=vec4(vec3(0.9)*f,S(0.,0.1,f));\n        \n        vec3 pB=ro+rd*(t+x)-pos;//back intersection\n        pB=transform(pB,angle);\n        vec2 uvB=vec2(atan(pB.x,pB.z),pB.y);\n        uvB*=vec2(0.25,0.5);\n        float b=character(uvB,0.2,0.01,id);\n        vec4 back=vec4(vec3(0.9)*b,S(0.,0.1,b));\n        col=mix(back,front,front.a);\n    }\n    return col;\n}\n\n//BACKGROUND\nvec3 background(vec2 p){\n    vec3 bg=vec3(0.2,0.2,0.4)*(p.y+0.9);\n    bg+=vec3(0.2,0.6,0.1)*(-p.y+0.2);\n    bg+=vec3(0.9,0.8,0.7)*fbm_perlin_ridge(p*15.)*mix(vec3(0.3,0.6,0.3),vec3(0.7,0.2,0.9),valuenoise(p*10.));\n    vec3 mcol=vec3(0.36,0.4,0.15);\n    bg+=step(moon(p-vec2(0.75,0.),0.03,0.1,0.09),0.)*mcol;\n    bg+=step(moon(p-vec2(0.5,0.),0.08,0.1,0.09),0.)*mcol;\n    bg+=step(moon(p-vec2(0.25,0.),0.13,0.1,0.09),0.)*mcol;\n    bg+=step(moon(p-vec2(0.0,0.),0.4,0.1,0.09),0.)*mcol;\n    bg+=step(moon(p-vec2(-0.25,0.),-0.13,0.1,0.09),0.)*mcol;\n    bg+=step(moon(p-vec2(-0.5,0.),-0.08,0.1,0.09),0.)*mcol;\n    bg+=step(moon(p-vec2(-0.75,0.),-0.03,0.1,0.09),0.)*mcol;\n    bg=mix(bg,vec3(0.5,0.9,0.7),earth(p-vec2(0.5,0.3),0.1));\n    bg=mix(bg,vec3(0.5,0.9,0.7),water(p-vec2(-0.5,0.3),0.1));\n    bg=mix(bg,vec3(0.5,0.9,0.7),fire(p-vec2(0.5,-0.3),0.1));\n    bg=mix(bg,vec3(0.5,0.9,0.7),air(p-vec2(-0.5,-0.3),0.1));\n    float E=0.;\n    if(hash(vec2(iTime*0.00000005))<0.85){E=eye(p-vec2(0.,0.35),0.2,0.1);}\n    else {E=eye2(p-vec2(0.,0.35),0.2,0.1);}\n    bg=mix(bg,vec3(0.3,0.1,0.3),E);\n    vec2 pos=(p-hash2(vec2(iTime*0.000000005)))*3.;\n    float k=S(0.07,-0.03,pentaclemoon(pos,0.48,0.005,0.));\n    bg=mix(bg*bg,1.-bg*bg,k);\n    return bg;\n}\n//CAULDRON\nvec3 setcam(vec3 c,vec3 t,vec2 uv)\n{\n    vec3 f=normalize(t-c);\n    vec3 u=vec3(0.,1.,0.);\n    vec3 s=normalize(cross(f,u));\n    u=cross(s,f);\n    return normalize(uv.x*s+uv.y*u+f);\n}\nfloat sdArc( in vec2 p, in vec2 sc, in float ra, float rb )\n{\n    p.x = abs(p.x);\n    return ((sc.y*p.x>sc.x*p.y) ? length(p-sc*ra) : \n                                  abs(length(p)-ra)) - rb;\n}\nfloat couldron(vec3 p){\n    vec2 q=vec2(length(p.xz*0.8),-p.y);\n    float d1=sdArc(q,vec2(sin(2.5),cos(2.5)),1.,0.01);\n    vec3 qq=p;\n    qq.y*=0.9;\n    float d2=length(qq-vec3(1.3,-0.8,0.))-0.2;\n    float d3=length(qq-vec3(-0.65,-0.8,sqrt3*0.65))-0.2;\n    float d4=length(qq-vec3(-0.65,-0.8,-sqrt3*0.65))-0.2;\n    d2=min(min(d2,d3),d4);\n    float l=smin(d1,d2,0.05);\n    float r=length(p.xz)-0.75;\n    p.y-=0.8;\n    vec2 qs=abs(vec2(r,p.y))-vec2(0.04,0.08);\n    float b=length(max(qs,0.))+min(max(qs.x,qs.y),0.);\n    return smin(l,b,0.005);\n}\nfloat map(vec3 p)\n{\n    p.zx*=rot(iTime*0.5);\n    float s=couldron(p)-texture(iChannel0,p.xy+p.yz+p.xz).x*0.008;\n    return s;\n}\n\nbool raymarch(in vec3 ro,in vec3 rd,inout vec3 p,inout float l)\n{\n    for(int i=0;i<199;i++)\n    {\n        p=ro+rd*l;\n        float d=map(p);\n        if(d<0.001){return true;break;}\n        l+=d;\n    }\n    return false;\n}\nvec3 normal(vec3 p,float h)\n{\n    vec2 e=vec2(h,0.);\n    return normalize(vec3(map(p+e.xyy)-map(p),\n                            map(p+e.yxy)-map(p),\n                            map(p+e.yyx)-map(p)));\n}\nfloat shadow(vec3 p,vec3 ld)\n{\n    float l=0.001;\n    float r=1.;\n    float shadowcoef=0.5;\n    for(int i=0;i<50;i++)\n    {\n        float d=map(p+ld*l);\n        if(d<0.001){return shadowcoef;}\n        r=min(r,d*16./l);\n        l+=d;\n    }\n    return mix(shadowcoef,1.0,r);\n}\n\nfloat ao(vec3 p,vec3 n)\n{\n    float a=0.;\n    float sc=10.;\n    for(int i=0;i<5;i++)\n    {\n        float h=0.01+0.02*float(i*i);\n        float d=map(p+n*h);\n        float ao=clamp(h-d,0.,1.);\n        a+=ao*sc;\n        sc*=0.8;\n    }\n    return clamp(1.-5.*a,0.,1.);\n}\n////////////lighting///Binn-Phong/PBR//////\nfloat NormalDistributionFunction(vec3 N,vec3 H,float r)\n{\n    float a=r*r;\n    float nh=max(dot(N,H),0.);\n    return (a*a)/(PI*pow(nh*nh*(a*a-1.)+1.,2.));\n}\n\nfloat GeometryFunction(vec3 N,vec3 D,float k)\n{\n    float nd=max(dot(N,D),0.);\n    return nd/(nd*(1.-k)+k);\n}\n\n\nfloat GeometryFunction_Smith(vec3 N,vec3 V,vec3 L,float r)\n{\n    float k=(r+1.)*(r+1.)/8.;\n    float G1=GeometryFunction(N,V,k);\n    float G2=GeometryFunction(N,L,k);\n    return G1*G2;\n}\n\nvec3 Fresnel(vec3 H,vec3 V,vec3 F0)\n{\n    float th=max(dot(H,V),0.);\n    return F0+(1.-F0)*pow(clamp(1.-th,0.,1.),5.);\n}\n\nvec3 PBR(vec3 p,vec3 N,vec3 cam)\n{\n    vec3 lightcolor=PBRlightcolor;\n    vec3 L=normalize(lightpos-p);\n    vec3 V=normalize(cam-p);\n    vec3 H=normalize(L+V);\n    \n    F0=mix(F0,albedo,metallic);\n    \n    float dist=length(lightpos-p);\n    float radiance=1./(dist*dist);//減衰\n    \n    \n    //cook-torrance\n    float D=NormalDistributionFunction(N,H,roughness);\n    float G=GeometryFunction_Smith(N,V,L,roughness);\n    vec3 F=Fresnel(H,V,F0);//vec3に注意\n    \n    //law of conservation\n    vec3 ks=F;\n    vec3 kd=vec3(1.)-ks;\n    kd*=1.-metallic;\n    \n    vec3 specular=D*G*F/(4.*max(dot(N,V),0.)*max(dot(N,L),0.)+0.00001);\n    vec3 lambert=kd*albedo/PI;\n    vec3 L0=(lambert+specular)*radiance*max(dot(N,L),0.)*lightcolor;\n    \n    vec3 ambient=amb*albedo*ao(p+0.0001*N,N);\n    vec3 color=ambient+L0;\n    color*=shadow(p+N*0.001,L);\n    \n    //GAMMMA\n    color=color/(color+vec3(1.));\n    color=pow(color,vec3(1./2.2));\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    \n    vec3 bg=background(uv);\n    vec4 col = vec4(bg,0.);\n    \n    col=pow(col,vec4(0.4545));\n    \n    //raymarch\n    vec3 cam=vec3(0.,2.,-7.);\n    vec3 tar=vec3(0.,2.,0.);\n    vec3 ro=cam;\n    vec3 rd=setcam(cam,tar,uv);\n    vec3 p=ro;\n    float l=0.;\n    bool f=raymarch(ro,rd,p,l);\n    vec3 n=normal(p,0.001);\n    if(f){\n        col.rgb=PBR(p,n,cam);\n    }\n    //raycast\n    for(float i=0.;i<1.;i+=1./11.){\n        float y=mix(1.,8.,fract(i+iTime*0.03));\n        float x=mix(-y*0.5,y*0.5,fract(sin(i*9762.)*652.));\n        float z=mix(5.,0.,i);\n        float a=iTime*0.8+i*7589.;\n        vec4 lune=LUNE(ro,rd,vec3(x,y,z),a,i*11.);\n        lune.a*=S(0.5,3.,y);\n        lune.rgb=mix(bg,lune.rgb,mix(0.3,1.,i));\n        lune.rgb=sqrt(lune.rgb);\n        \n        col=mix(col,lune,lune.a);\n    }\n    //posteffect\n    col.rgb*=1.-pow(length(uv*uv*uv*uv)*1.1,1.5);\n    col.rgb=pow(col.rgb,vec3(1.3));\n    //col.rgb=vec3(eye2(uv,0.2,0.1));\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define PI 3.141592\n#define sqrt3 1.73205\n#define S smoothstep\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\nfloat hash(vec2 p)\n{\n    return fract(sin(dot(p,vec2(78.398,12.862)))*38057.12);//[0,+1]\n}\n\nvec2 hash2(vec2 p)\n{\n    p=vec2(dot(p,vec2(78.3979,13.397)),dot(p,vec2(219.233,79.247)));\n    return 2.*fract(sin(p)*38807.12)-1.;//[-1,+1]\n}\nfloat valuenoise(vec2 p)\n{\n    vec2 i=floor(p);\n    vec2 f=p-i;\n    //vec2 u=f*f*(3.-2.*f);\n    vec2 u=f*f*f*(6.*f*f-15.*f+10.);\n    float v00=hash(i+vec2(0.,0.));\n    float v10=hash(i+vec2(1.,0.));\n    float v01=hash(i+vec2(0.,1.));\n    float v11=hash(i+vec2(1.,1.));\n    return mix(mix(v00,v10,u.x),mix(v01,v11,u.x),u.y);\n}\n\nfloat perlinnoise(vec2 p)\n{\n    \n    vec2 i=floor(p);\n    vec2 f=p-i;\n    vec2 u=f*f*f*(6.*f*f-15.*f+10.);\n    float v00=dot(hash2(i+vec2(0.,0.)),f-vec2(0.,0.));\n    float v10=dot(hash2(i+vec2(1.,0.)),f-vec2(1.,0.));\n    float v01=dot(hash2(i+vec2(0.,1.)),f-vec2(0.,1.));\n    float v11=dot(hash2(i+vec2(1.,1.)),f-vec2(1.,1.));\n    float t=mix(mix(v00,v10,u.x),mix(v01,v11,u.x),u.y);\n    return t*0.5+0.5;\n}\nfloat fbm_perlin_ridge(vec2 p)\n{\n    float r=0.;\n    float w=0.5;\n    for(int i=0;i<4;i++)\n    {\n        r+=w*(0.8-abs(2.*perlinnoise(p)-1.))*(0.8-abs(2.*perlinnoise(p)-1.));\n        p*=2.;\n        w*=0.5;\n    }\n    return r+0.2;\n}\nfloat segment(vec2 p,float l,float s){\n    p.y-=clamp(p.y,-l,l);\n    return step(length(p),s);\n}\n\nfloat N(vec2 p,float l,float s){\n    float a=segment(p,l,s);\n    vec2 q=p;\n    q*=rot(-0.5);\n    float b=segment(q,l*0.6,s);\n    return a+b;\n}\n\nfloat D(vec2 p,float l,float s){\n    float a=segment(p-vec2(-0.15,0.),l,s);\n    vec2 q=p;\n    q*=rot(-0.65);\n    float b=segment(q,l*1.2,s);\n    vec2 r=p;\n    r*=rot(0.65);\n    float c=segment(r,l*1.2,s);\n    float d=segment(p-vec2(0.15,0.),l,s);\n    return a+b+c+d;\n}\n\nfloat A(vec2 p,float l,float s){\n    float a=segment(p,l,s);\n    vec2 q=p;\n    q*=rot(-0.7);\n    float b=segment(q-vec2(0.13,0.07),l*0.4,s);\n    vec2 r=p;\n    r*=rot(-0.7);\n    float c=segment(r-vec2(0.05,-0.02),l*0.4,s);\n    return a+b+c;\n}\n\nfloat I(vec2 p,float l,float s){\n    float a=segment(p,l,s);\n    return a;\n}\nfloat V(vec2 p,float l,float s){\n    float a=segment(p-vec2(-0.15,0.),l,s);\n    vec2 q=p;\n    q*=rot(-0.8);\n    float b=segment(q-vec2(0.04,0.08),l*0.8,s);\n    float c=segment(p-vec2(0.09,-0.11),l*0.4,s);\n    return a+b+c;\n}\n\nfloat E(vec2 p,float l,float s){\n    float a=segment(p-vec2(-0.2,0.),l,s);\n    vec2 q=p-vec2(-0.1,0.12);\n    q*=rot(-0.9);\n    float b=segment(q,l*0.62,s);\n    float c=segment(p-vec2(0.2,0.),l,s);\n    vec2 r=p-vec2(0.1,0.12);\n    r*=rot(0.9);\n    float d=segment(r,l*0.62,s);\n    return a+b+c+d;\n}\n\nfloat R(vec2 p,float l,float s){\n    float a=segment(p-vec2(-0.09,0.),l,s);\n    vec2 q=p-vec2(-0.0,0.14);\n    q*=rot(-1.);\n    float b=segment(q,l*0.5,s);\n    vec2 r=p-vec2(0.02,0.03);\n    r*=rot(0.9);\n    float c=segment(r,l*0.4,s);\n    vec2 t=p;\n    t*=rot(-0.5);\n    float d=segment(t-vec2(-0.05,-0.12),l*0.6,s);\n    return a+b+c+d;\n}\n\nfloat S(vec2 p,float l,float s){\n    float a=segment(p-vec2(-0.14,0.08),l*0.8,s);\n    vec2 q=p;\n    q*=rot(1.05);\n    float b=segment(q,l*0.8,s);\n    float c=segment(p-vec2(0.14,-0.08),l*0.8,s);\n    return a+b+c;\n}\n\nfloat Y(vec2 p,float l,float s){\n    float a=segment(p-vec2(-0.14,0.0),l,s);\n    float b=segment(p*rot(-0.7)-vec2(0.03,-0.01),l*1.3,s);\n    float c=segment(p-vec2(0.,-0.15),l*0.2,s);\n    return a+b+c;\n}\n\nfloat moon(vec2 p, float d, float ra, float rb )\n{\n    p.y = abs(p.y);\n    float a = (ra*ra - rb*rb + d*d)/(2.0*d);\n    float b = sqrt(max(ra*ra-a*a,0.0));\n    if( d*(p.x*b-p.y*a) > d*d*max(b-p.y,0.0) )\n          return length(p-vec2(a,b));\n    return max( (length(p          )-ra),\n               -(length(p-vec2(d,0))-rb));\n}\n\nfloat tri( in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return step(abs(-length(p)*sign(p.y))-0.005,0.);\n}\nfloat triangle( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat fire(vec2 p,float r){\n    return tri(p,r);\n}\nfloat water(vec2 p,float r){\n    p.y=-p.y;\n    return tri(p,r);\n}\nfloat air(vec2 p,float r){\n    vec2 q=p;\n    q.x-=clamp(q.x,-0.1,0.1);\n    q.y-=0.03;\n    float s=step(length(q),0.005);\n    return tri(p,r)+s;\n}\nfloat earth(vec2 p,float r){\n    vec2 q=p;\n    q.x-=clamp(q.x,-0.1,0.1);\n    q.y-=-0.03;\n    float s=step(length(q),0.005);\n    p.y=-p.y;\n    return tri(p,r)+s;\n}\nfloat vesica(vec2 p, float r, float d)\n{\n    p = abs(p);\n    float b = sqrt(r*r-d*d);\n    return ((p.y-b)*d>p.x*b) ? length(p-vec2(0.0,b))\n                             : length(p-vec2(-d,0.0))-r;\n}\nfloat eye(vec2 p,float r,float d){\n    p*=rot(PI*0.5);\n    float a=step(abs(vesica(p,r,d)),0.005);\n    float b=step(abs(length(p)-d),0.005);\n    float c=step(length(p)-d*0.65,0.);\n    float e=step(segment(p-vec2(-0.03,0.),0.02,0.002),0.005);\n    float f=step(segment(p-vec2(0.03,0.),0.02,0.002),0.005);\n    p*=rot(PI*0.5);\n    float g=step(segment(p-vec2(0.01,0.),0.03,0.002),0.005);\n    float h=step(segment(p-vec2(-0.01,0.),0.03,0.002),0.005);\n    return a+b+c;\n}\nfloat eye2(vec2 p,float r,float d){\n    p*=rot(PI*0.5);\n    float a=step(abs(vesica(p,r,d)),0.005)*step(0.,p.x);\n    return a;\n}\n\n//WM\nfloat WM(vec2 p,float t,float tl){\n    p*=rot(tl);\n    //circle\n    float d1=abs(length(p)-0.48)-t;\n    float d2=length(p-vec2(0.68,0.))-0.1;\n    float d3=abs(length(p-vec2(-0.68,0.))-0.1)-t;\n    //bar\n    vec2 q=abs(p)-vec2(0.58,t);\n    float d4=length(max(q,0.))+min(max(q.x,q.y),0.);\n    p=abs(p);\n    vec2 r=p;\n    r-=vec2(0.2,0.1);\n    vec2 qq=abs(r)-vec2(t,0.3);\n    float d5=length(max(qq,0.))+min(max(qq.x,qq.y),0.);\n    vec2 s=p;\n    s.x-=0.2;\n    s*=rot(-0.5);\n    vec2 qqq=abs(s)-vec2(t,0.45);\n    float d6=length(max(qqq,0.))+min(max(qqq.x,qqq.y),0.);\n    return min(min(min(min(min(d1,d2),d3),d4),d5),d6);\n}\n\n\nfloat pentacle(vec2 p,float r,float t)//r=Radius,thickness\n{\n    float c=abs(length(p)-r)-t;\n    vec2 qa=p;\n    qa*=rot(PI*0.4);\n    qa-=-vec2(0.,r*(cos(PI*0.1)*tan(PI*0.2)-sin(PI*0.1)));\n    float da=abs(triangle(qa,vec2(r*cos(PI*0.1),r*cos(PI*0.1)*tan(PI*0.2))))-t;\n    vec2 qb=p;\n    qb*=rot(-PI*0.4);\n    qb-=-vec2(0.,r*(cos(PI*0.1)*tan(PI*0.2)-sin(PI*0.1)));\n    float db=abs(triangle(qb,vec2(r*cos(PI*0.1),r*cos(PI*0.1)*tan(PI*0.2))))-t;\n    vec2 qc=p;\n    qc-=-vec2(0.,r*(cos(PI*0.1)*tan(PI*0.2)-sin(PI*0.1)));\n    float dc=abs(triangle(qc,vec2(r*cos(PI*0.1),r*cos(PI*0.1)*tan(PI*0.2))))-t;\n    return min(min(c,da),min(db,dc));\n}\nfloat pentaclemoon(vec2 p,float r,float t,float tl){\n    p*=rot(tl);\n    float pen=pentacle(p,r,t);\n    float m1=abs(moon(p-vec2(r*2.,0.),r*0.3,r,r))-t;\n    float m2=abs(moon(p-vec2(-r*2.,0.),-r*0.3,r,r))-t;\n    return min(pen,min(m1,m2));\n}\n\n","name":"Common","description":"","type":"common"}]}