{"ver":"0.1","info":{"id":"dlKyWw","date":"1700303714","viewed":2378,"name":"SHARD NOISE","username":"ENDESGA","description":"using the splat-field (upgraded to 3D) to inject the tanh function, giving a unique metallic structure.\n'sharpness' parameter can be any value.\nclick to show the full octave-blend that's very perlin-like","likes":86,"published":3,"flags":0,"usePreview":0,"tags":["3d","noise","gradient","shard"],"hasliked":0,"parentid":"clGyWm","parentname":"Noise - Gabor - 2D - Deriv"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// @ENDESGA\n// splat-field forked from https://www.shadertoy.com/view/clGyWm\n\n#define R iResolution\n#define T (iTime * .1)\n\nvec3 hash(vec3 p)\n{\n    p = vec3(dot(p, vec3(127.1, 311.7, 74.7)), dot(p, vec3(269.5,183.3,246.1)), dot(p, vec3(113.5, 271.9, 124.6)));\n    p = fract(sin(p) * 43758.5453123);\n    return p;\n}\n\n#define tau 6.283185307179586\n\nfloat shard_noise(in vec3 p, in float sharpness) {\n    vec3 ip = floor(p);\n    vec3 fp = fract(p);\n\n    float v = 0., t = 0.;\n    for (int z = -1; z <= 1; z++) {\n        for (int y = -1; y <= 1; y++) {\n            for (int x = -1; x <= 1; x++) {\n                vec3 o = vec3(x, y, z);\n                vec3 io = ip + o;\n                vec3 h = hash(io);\n                vec3 r = fp - (o + h);\n\n                float w = exp2(-tau*dot(r, r));\n                // tanh deconstruction and optimization by @Xor\n                float s = sharpness * dot(r, hash(io + vec3(11, 31, 47)) - 0.5);\n                v += w * s*inversesqrt(1.0+s*s);\n                t += w;\n            }\n        }\n    }\n    return ((v / t) * .5) + .5;\n}\n\nvoid mainImage( out vec4 C, in vec2 F )\n{\n    vec2 p = F/R.y;\n    vec3 uv = vec3( p + T, T * .5 );\n    bool click = iMouse.z>0.;\n\n    float fade = click ? 4. : pow(p.x,2.) * 30.;\n    \n    if(p.y<0.5 || click) // octave-blend demo\n    {\n        C = vec4(vec3(\n            (shard_noise(64.0*uv,fade) * .03125) +\n            (shard_noise(32.0*uv,fade) * .0625) +\n            (shard_noise(16.0*uv,fade) * .125) +\n            (shard_noise(8.0*uv,fade) * .25) +\n            (shard_noise(4.0*uv,fade) * .5)\n        ),1.);\n    }\n    else\n    C = vec4( vec3(shard_noise(16.0*uv,fade)), 1. );\n    if((p.y > .875 || p.y < .125) && !click) C = round(C);\n}","name":"Image","description":"","type":"image"}]}