{"ver":"0.1","info":{"id":"tdSfDW","date":"1590051360","viewed":143,"name":"City city","username":"TheGreatMurloc","description":"city","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["city"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LAYERS 15.\n#define WINDOWS_ROW 4.\n#define WINDOWS_COLL 8.\n\n//I know, performence is horrible and the code is garbage. I might improve it later.\n\nfloat Rect(vec2 uv, float width, float height, float blur, float centreHeight)\t//Scren height = .5\n{\n    uv.y -= height*centreHeight;\n    float col = smoothstep(width+blur,width,abs(uv.x));\n    col *= smoothstep(height+blur,height,abs(uv.y));\n    \n\treturn col;\n}\n\nvec4 glowingRect(vec2 uv, vec4 col, float scale)\n{\n    return vec4(col*(Rect(uv,.05*scale,.05*scale,0.05*scale,0.)+(col*(0.08*scale)/length(uv*.6))));\n}\n\nfloat Hash21(float pos)\n{\n\treturn fract(sin(pos*123.32)*351.102+153.15);\n}\n\nvec3 tiledWindows(vec2 pos, vec3 baseCol, float blur, vec2 scale, float a)\n{\n    float glowScale, glowAmount, windowsMask;\n    vec4 wndGlow;\n    vec2 tiledPos = pos;\n    for (float i = 0.; i < 2.; i++)\n    {\n        for (float j = 0.; j < 2.; j++)\n        {\n            tiledPos = pos+vec2((j*.25)+.125,(i*.25)+.125);\n            tiledPos *= vec2(2.,2.);\n            tiledPos = vec2(fract(tiledPos.x)-.5,fract(tiledPos.y)-.5);\n            tiledPos /= vec2(2.,2.);\n            glowScale = (2.-(scale.x*.1))*.5;\n            windowsMask = (i==1.) ? a : floor(a);\n            wndGlow = glowingRect(tiledPos,vec4(vec3(1.,.8,.5),windowsMask),glowScale);\n            glowAmount = wndGlow.a*(abs(1.-(blur*2.)));\n            baseCol = max(baseCol,mix(baseCol,wndGlow.rgb,glowAmount));\n        }\n    }\n    return baseCol;\n}\n\nvec4 cityLayer(vec2 uv, vec2 scale, vec3 col, float blur)\n{\n    blur += 0.0001;\n    uv *= scale;\n    float a = 0.;\n    float id = floor(uv.x);\n    uv.x = fract(uv.x);\n    vec2 pos = vec2(uv.x-.5,uv.y+.5);\n    float height = ((Hash21(id)+.8)*.3+1.)*.5*.31*scale.x;\n    a += Rect(pos,.5,height,blur,1.);\t//Max height = 3.1\n    \n    uv = ((uv/scale)-.5)*2.+1.;\n    //col += (uv.y*.6)*.2;\n    col -= max(((1.-uv.y*.5))*.05,0.);\n    \n    pos.y -= (height*2.);// - (Hash21(id+126.321)*.5);\n    pos.x += .5;\n    \n    float savedPosX = pos.x;\n    \n    for (float j = 0.; j < WINDOWS_COLL; j++)\n    {\n        pos.y += .2;\n        pos.x = savedPosX;\n        for (float i = 0.; i < WINDOWS_ROW; i++)\n        {\n            pos.x -= .2;\n            float glowScale = (2.-(scale.x*.1))*.5;\n            vec4 wndGlow = glowingRect(pos,vec4(vec3(1.,.8,.5),1.),glowScale);\n            float glowAmount = wndGlow.a*(abs(1.-(blur*2.)));\n            col = mix(col,wndGlow.rgb,glowAmount);\n        }\n    }\n    \n    //col = tiledWindows(pos, col, blur, scale, a);\n    \n    return vec4(col,a);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y = uv.y*9./16.;\n    uv.y -= exp((abs(uv.x-.5)-.8)*7.)*.7;\n    \n    vec4 col = vec4(.4,.3,1.,1.);\n    vec4 tree = vec4(0.);\n    \n    for (float i = 1.; i > 0.; i -= 1./LAYERS)\n    {\n        vec2 pos = vec2(uv.x+iTime*.5*(.9-i)+Hash21(i*123.51),uv.y-(i*.5)+.3);\n    \ttree = cityLayer(pos,vec2((i+.8)*10.),vec3(.15,.06,i),abs(i-.5)),1.;\n        col = mix(col,tree,tree.a);\n    }\n    \n    fragColor = vec4(col);\n}\n\n\n","name":"Image","description":"","type":"image"}]}