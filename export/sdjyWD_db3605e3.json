{"ver":"0.1","info":{"id":"sdjyWD","date":"1643571270","viewed":126,"name":"Alpha blending dots","username":"electric_boogie","description":"Simple alpha channel blending","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","alphachannel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHARPNESS 1.5 / iResolution.y\n\nfloat fCircle(vec2 pos, float r){\n    return length(pos) -r;\n}\n\nvec4 Color(float f, vec4 col){\n    return vec4(col.xyz * col.w * f, col.w);\n}\n\nvec4 colCircle(vec2 pos, float r, vec4 col){\n    float c = smoothstep(SHARPNESS, 0., fCircle(pos, r));\n    return Color(c, col);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Compact expression for (translation)/scaling. Thanks Fabrice!\n    vec2 uv = (fragCoord -.5 * iResolution.xy)/iResolution.y;\n        \n    vec4 col = vec4(0.2);\n    vec2 p = uv;\n    const float numdots = 350.;\n    for (float i = 0.; i < numdots; i++){        \n        p.x += cos(iTime * 0.1 +i) * 0.40;\n        p.y -= sin(iTime * 0.4 + p.y) * 0.0012;\n        col += colCircle(p, 0.02, vec4(0.5, i / numdots, 0., .5));\n    }\n    \n    \n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}