{"ver":"0.1","info":{"id":"MdKGzt","date":"1455999618","viewed":916,"name":"Simple multipass waves","username":"piotrekli","description":"simple waves (move your mouse!), not physically accurate","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["2d","waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DS 0.05\n\nfloat sampleLightX(sampler2D channel, vec2 fragCoord)\n{\n    float light = 0.0;\n#   define S(DX, DY, WEIGHT) light += texture(channel, (fragCoord+vec2(DX, DY))/iResolution.xy).x*WEIGHT;\n    S( 0,  1, -0.2)\n    S( 0, -1,  0.2)\n    S( 1,  0,  0.2)\n    S(-1,  0, -0.2)\n#   undef S\n    return light;\n}\n\nvec2 gradientX(sampler2D channel, vec2 fragCoord)\n{\n    vec2 grad = vec2(0.0);\n#   define S(DX, DY) grad += texture(channel, (fragCoord+vec2(DX, DY))/iResolution.xy).x*vec2(DX, DY);\n    S( 0,  1)\n    S( 0, -1)\n    S( 1,  0)\n    S(-1,  0)\n#   undef S\n    return grad;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 grad = gradientX(iChannel0, fragCoord);\n    float light = sampleLightX(iChannel0, fragCoord)*20.0;\n\tfragColor = vec4(texture(iChannel1, uv+grad*DS).xyz+light*DS, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define WAVE_SPEED 4.0\n\n// function from http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfloat segmentDistance(vec2 v, vec2 w, vec2 p)\n{\n  float l2 = dot(w-v, w-v);\n  if (l2 == 0.0) return distance(p, v);\n  float t = max(0.0, min(1.0, dot(p-v, w-v)/l2));\n  vec2 projection = v + t*(w-v);\n  return distance(p, projection);\n}\n\nfloat laplacianX(vec2 fragCoord)\n{\n    float laplacian = 0.0;\n#   define S(DX, DY, WEIGHT) laplacian += texture(iChannel0, (fragCoord+vec2(DX, DY))/iResolution.xy).x*WEIGHT;\n    S( 0,  0, -1.0)\n    S( 0,  1,  0.2)\n    S( 0, -1,  0.2)\n    S( 1,  0,  0.2)\n    S(-1,  0,  0.2)\n    S( 1,  1,  0.05)\n    S( 1, -1,  0.05)\n    S(-1,  1,  0.05)\n    S(-1, -1,  0.05)\n#   undef S\n    return laplacian;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 prevColor = texture(iChannel0, uv);\n    float displ = prevColor.x;\n    float delta = prevColor.z;\n    delta += laplacianX(fragCoord)*WAVE_SPEED;\n    float g = // mouse\n        1.0 - segmentDistance(texture(iChannel1, vec2(0.0)).xy,\n                              texture(iChannel1, vec2(1.0)).xy, fragCoord)*0.1;\n    if (g > displ) displ = g;\n    fragColor = vec4(displ+delta*iTimeDelta, 0.0, delta, 0.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // mouse handling\n    if (iFrame == 0 || fragCoord.x < 1.0) fragColor = iMouse;\n    else fragColor = texture(iChannel0, vec2(0.0));\n}","name":"Buf B","description":"","type":"buffer"}]}