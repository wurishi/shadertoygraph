{"ver":"0.1","info":{"id":"4tfyW4","date":"1504737020","viewed":894,"name":"webgl2 grid noise","username":"victor_shepardson","description":"vec4 valued procedural noise for int, ivec2, ivec3, or ivec4 coordinates.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["procedural","noise","pseudorandom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// vec4 valued procedural noise for ivec3 coordinates.\n// by victor shepardson: victor-shepardson.github.io\n// neither principled nor rigorously tested, use at your own risk etc\n\n// hash functions adapted from https://stackoverflow.com/a/12996028/5199168\nuvec4 hash(uvec4 x){\n    x = ((x >> 16u) ^ x.yzwx) * 0x45d9f3bu;\n    x = ((x >> 16u) ^ x.yzwx) * 0x45d9f3bu;\n    x = ((x >> 16u) ^ x.yzwx) * 0x45d9f3bu;\n    x = ((x >> 16u) ^ x.yzwx) * 0x45d9f3bu;\n    //x = (x >> 16u) ^ x;\n    return x;\n}\nuvec4 hash(uvec3 x0){\n    uvec4 x = x0.xyzz;\n    x = ((x >> 16u) ^ x.yzxy) * 0x45d9f3bu;\n    x = ((x >> 16u) ^ x.yzxz) * 0x45d9f3bu;\n    x = ((x >> 16u) ^ x.yzxx) * 0x45d9f3bu;\n    //x = (x >> 16u) ^ x;\n    return x;\n}\n\nvec4 noise(ivec4 p){\n    const float scale = pow(2., -32.);\n    uvec4 h = hash(uvec4(p));\n    return vec4(h)*scale;\n}\n\nvec4 noise(ivec3 p){\n    const float scale = 1.0/float(0xffffffffU);\n    uvec4 h = hash(uvec3(p));\n    return vec4(h)*scale;\n}\n\nvec4 noise(ivec2 p){\n    return noise(ivec3(p, 0));\n}\n\nvec4 noise(int p){\n \treturn noise(ivec3(p, 0, 0));   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec4 p = ivec4(fragCoord.x, fragCoord.y, iMouse.x, iFrame);\n    // test large inputs\n    if(fragCoord.x > iResolution.x/2.)\n        p += (1<<30);\n    //test negative inputs\n    if(fragCoord.y > iResolution.y/2.)\n        p *= -1;\n    \n    //fragColor = noise(p.w);\n    //fragColor = noise(p.xy-p.w);\n    //fragColor = noise(ivec3(p.xy-p.w, p.z));\n    fragColor = noise(p);\n    \n    //test channel correlations\n    if(fragCoord.x > iResolution.x/2.)\n        fragColor = fragColor.argb;\n    if(fragCoord.y > iResolution.y/2.)\n        fragColor = fragColor.argb;\n}","name":"Image","description":"","type":"image"}]}