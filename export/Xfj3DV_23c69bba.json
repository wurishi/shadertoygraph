{"ver":"0.1","info":{"id":"Xfj3DV","date":"1704726946","viewed":78,"name":"printDots","username":"Xenior","description":"Shader inspired by CMYK halftoning, a color mixing technique used in printing.\n\nInspired by this video by Posy https://youtu.be/VckU9UXI_XE?si=4VPSWrvDmOVcwyAP","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["xenior"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n//the colors are rgb, increase saturation a bit and convert to cmyk\nfloat getCMYKValue(vec4 color, int index){\n    if(index != 3){//All colors but black\n        return 1. -color[index] + 0.2;\n    }else{//black\n    return 1. -(color[0] + color[1] + color[2]) + 0.1;\n    }    \n}\n\nfloat dotMatrix(vec2 st, float angle, int index){\n    \n    vec2 offset = vec2(0.5);\n    \n    vec2 localst = st - offset;\n\tlocalst = rotate2d(angle)* localst;    \n    localst = localst + offset;\n\n    localst *= 81. + 300. * smoothstep(0.2,-0.2,sin(iTime*0.5));\n    localst = fract(localst);\n    \n    vec3 color = vec3(0.);\n    \n    float baseRadius = 0.36;\n    float step = abs(0.1);\n    \n    float radius = baseRadius * getCMYKValue(texture(iChannel0, st),index);\n    \n    float mask = smoothstep(radius + step/2.,radius-step/2.,\n                            distance(localst, vec2(0.5)));\n    \n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    //st.x *= iResolution.x/iResolution.y;\n\n    float cyanMask = dotMatrix(st , 5. *PI/12., 0);\n    float magMask = dotMatrix(st, PI/12., 1);\n    float yelMask = dotMatrix(st, 0., 2);\n    float keyMask = dotMatrix(st, PI/4., 3);\n    \n    vec3 color = 1. -vec3(1.,0.,0.) * cyanMask - vec3(0.,1.,0.) * magMask - vec3(0.0,0.0,1.0) * yelMask - vec3(0.9) * keyMask;\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}