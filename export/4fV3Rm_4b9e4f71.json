{"ver":"0.1","info":{"id":"4fV3Rm","date":"1712563527","viewed":41,"name":"julia!!!","username":"palm82","description":"A visualization of the julia set for the function: Z^2 + C, where C is the mouse uv coordinates.\nLoosely based on this great video: https://www.youtube.com/watch?v=6z7GQewK-Ks","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","mandelbrot","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 0.5);\n    vec3 d = vec3(0.80, 0.90, 0.30);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec2 cSquare(in vec2 a) {\n    return vec2(a.x*a.x-a.y*a.y, 2.*a.x*a.y);\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n} // https://gist.github.com/companje/29408948f1e8be54dd5733a74ca49bb9\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2. - iResolution.xy) / (iResolution.y/1.);\n    vec2 m = (iMouse.xy * 2. - iResolution.xy) / iResolution.y;\n\n    vec2 z = uv;\n    vec2 c = m;\n    int n = 0;\n    int maxI = 100;\n    for (int i=0; i<maxI; i++) {\n        vec2 z2 = cSquare(z) + c;\n        z = z2;\n        if (length(z2) > 10.) {\n            break;\n        }\n        n++;\n    }\n    \n    float fmaxI = float(maxI);\n    vec3 o = palette(map(float(n), 0., fmaxI/1.5, 1., 0.));\n\n\n    fragColor = vec4(o, 1.);\n}","name":"Image","description":"","type":"image"}]}