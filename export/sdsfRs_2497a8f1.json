{"ver":"0.1","info":{"id":"sdsfRs","date":"1645297546","viewed":83,"name":"rotating star","username":"natnatnat","description":"rotating star","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle","stars"],"hasliked":0,"parentid":"sslfRs","parentname":"discretestarhalo"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nconst float PI = 3.14;\nconst float e = 2.71;\n\nconst float Rd = 0.5;\nconst float R = 0.45;\nconst float innerR = R * 0.9;\nconst float n = 10.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    vec3 circles = vec3(0.);\n    \n    int m = int(mod(iTime/4. * n, n) + 1.);\n\n    float angle = (PI/2.) * iTime + PI/2.;\n    vec2 radialPoint = vec2(Rd * cos(angle), Rd * sin(angle));\n    float r = distance(uv, radialPoint);\n    float c = exp((-r + innerR)/.05);\n    vec3 star = vec3(c, c, 0.);\n \n    for(int i = 0; i < m; i++) {\n        angle = float(i) * PI/(float(n)/2.) + PI/2.;\n        radialPoint = vec2(Rd * cos(angle), Rd * sin(angle));\n        r = distance(uv, radialPoint);\n\n        c = exp(-abs(r - innerR)/.01);\n        circles += vec3(c, c, 0.);\n    }\n\n    fragColor = vec4(circles, 1.) + vec4(star, 1.);\n}","name":"Image","description":"","type":"image"}]}