{"ver":"0.1","info":{"id":"fltfDr","date":"1662954042","viewed":115,"name":"Mandelbrot made of lights","username":"berelium","description":"A mandelbrot set made purely out of light sources. Move the mouse across the X axis to change the size of the light sources.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 150.0\n\nvec3 light(vec2 uv, vec2 pos, float size, vec3 c, float zoom) {\n\tfloat s = 0.0;\n\ts += size / (distance(uv, pos) * zoom) * 0.5;\n\treturn c * s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv = uv * 0.5 + 0.5;\n    uv.x -= 0.2;\n\t\n\n\tfloat SIZE = 0.5;\n\tfloat ITER_DEEPNESS = 0.98;\n\tvec3 COLOR = 0.5 + 0.5*cos(uv.xyx+vec3(1., 0.4, 0.2));\n\tvec3 ALT_COLOR = 1.0 - COLOR;\n\n\n\tvec3 col = vec3(0.0);\n\n    // check for empty mouse position\n\tvec2 mouse = iMouse.xy / iResolution.xy;\n\tif (mouse.x == 0.0 && mouse.y == 0.0) {\n\t\tmouse = vec2(0.25);\n\t}\n\n\tSIZE = mix(SIZE, 5., mouse.x);\n\n\tvec2 pos = uv * 2.0 - 1.0;\n\tpos.x *= iResolution.x / iResolution.y;\n\n    // scale the c position with time\n\tvec2 c = pos * (0.75 + sin(iTime * 0.25) * 0.5);\n\tfloat maxIter = 100.0;\n\tfor(float i = 0.0; i < maxIter; i++) {\n\t\t// modify color by iteration\n\t\tCOLOR = mix(COLOR, ALT_COLOR, i / maxIter);\n\n\t\tif(i > maxIter * ITER_DEEPNESS) {\n\t\t\tcol += light(uv, pos, SIZE, COLOR, 1.0);\n\t\t}\n\n\t\tif(length(pos) > 2.0) {\n\t\t\tcol += light(uv, pos, SIZE, COLOR, 1.0);\n\t\t\tbreak;\n\t\t}\n\t\tpos = vec2(pos.x * pos.x - pos.y * pos.y, 2.0 * pos.x * pos.y) + c;\n\t}\n\n\tcol = pow(col, vec3(0.75));\n\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}