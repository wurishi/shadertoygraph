{"ver":"0.1","info":{"id":"MXXBD4","date":"1728389100","viewed":15,"name":"Double Slit Diffraction","username":"FrederickAmpsUp","description":"Very simple, slits are simulated as single points.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wave","diffraction","doubleslit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535;\nconst float WAVELENGTH = 0.1;\nconst float SLIT_DIST = 1.0;\nconst int NUM_SLITS = 2;\n\nfloat phase() {\n    return -iTime;\n}\n\nfloat wave(float t) {\n    return sin(phase() * PI + t * PI / WAVELENGTH);\n}\n\nvec3 wave_to_color(float wave) {\n    if (wave < 0.0) {\n        return vec3(wave, 0.0, 0.0);\n    }\n    return vec3(0.0, 0.0, wave);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 ndc = uv * 2.0 - 1.0;\n        // aspect-corrected device coordinates\n    vec2 acdc = ndc * vec2(iResolution.x / iResolution.y, 1.0) * iTime;\n    \n    float wv = 0.0;\n    float y = -SLIT_DIST * float(NUM_SLITS) / 4.0;\n    \n    for (int i = 0; i < NUM_SLITS; i++) {\n        float dist = distance(acdc, vec2(-1.0, y));\n        wv += wave(dist) * exp(-dist);\n        y += SLIT_DIST;\n    }\n    \n    vec3 col = vec3(0.0);\n    \n    \n    if (acdc.x < -1.0) {\n        col += wave_to_color(wave(acdc.x));\n    } else {\n        col += wave_to_color(wv);\n    }\n\n    col = pow(col, vec3(1.0/2.2));\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}