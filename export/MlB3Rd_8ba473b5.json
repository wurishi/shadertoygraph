{"ver":"0.1","info":{"id":"MlB3Rd","date":"1431380961","viewed":148,"name":"Woooo testing","username":"Yevano","description":"It's a thing","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["testing","fields"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define EPSILON .0001\n#define PI 3.1415926535898\n#define MAX_DIST 100.\n#define THRESHOLD 0.75\n\nmat2 getRotMat(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvec3 distFunc(vec3 xyz) {\n    //xyz = normalize(xyz);\n    xyz += 1.;\n    xyz *= 0.5;\n    //return vec3(cos(32.*length(xyz.xy) * xyz.z), sin(32.*length(xyz)), tan(32.*length(xyz))*/);\n    //return vec3(0., 0., 8. * sin(4.*length(xyz)));\n    //return vec3(0., 0., length(xyz) - 0.5);\n    return vec3(0., 0., sin(xyz.x * 16.) + sin(xyz.y * 16.) + sin(xyz.z * 16.));\n}\n\nfloat udBox( vec3 xyz, vec3 b ) {\n  return length(max(abs(xyz)-b,0.0));\n}\n\nfloat sphere(vec3 xyz, float r) {\n    return length(xyz) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = -1. + 2. * q;\n    p.x *= iResolution.x/iResolution.y;\n\n\tvec3 ro = vec3(sin(iTime) * 2., 0., cos(iTime) * 2.);\n    //vec3 ro = vec3(0., 0., 0.);\n\tvec3 rd = normalize(vec3(p * 1., 1.));\n    \n    float a = PI-iTime;\n    //rd.xz *= getRotMat(PI - PI * 2. * iMouse.x/iResolution.x);\n    rd.xz *= getRotMat(PI-iTime);\n    \n    float l = 0.;\n    for(int i = 1; i < 2048; i++) {\n        vec3 r = ro + rd * l;\n        vec3 v = distFunc(r);\n        //float d = max(udBox(r, vec3(1., 1., 1.)), THRESHOLD - max(v.x, v.y)) * 0.05;\n        float d = max(sphere(r, 1.5), THRESHOLD - max(max(v.x, v.y), v.z)) * 0.05;\n        if(d <= EPSILON) {\n            fragColor = vec4(v.x, v.y, v.z, 1.) - l/4. + 0.1;\n            break;\n        }\n        if(l > MAX_DIST) {\n            fragColor = vec4(0.);\n            break;\n        }\n        l += d;\n    }\n}","name":"","description":"","type":"image"}]}