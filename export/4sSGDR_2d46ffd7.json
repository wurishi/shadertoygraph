{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float PI = 3.1415926;\n\n// ---- change scale here ----\nfloat scale = 3.0;\nfloat time_offset = 0.0;\n\n// ---- change function here -----\nfloat function( float r, float t ) {\n//\treturn 2.0 - cos( 6.0 * t ) - cos( 31.0 * 6.0 * t / 32.0 ) - r;\n\treturn 2.0 - cos( 3.0 * t ) - cos( 31.0 * 3.0 * t / 32.0 ) - r;\n//\treturn 2.0 - cos( 3.0 * t ) - cos( 31.0 * 3.0 * t / 32.0 ) - sin( r );\n//\treturn 2.0 - cos( 6.0 * t ) - cos( 31.0 * 3.0 * t / 32.0 ) - cos( r * 4.0 );\n}\n\nfloat solve( vec2 p ) {\n\tfloat time = iTime + time_offset;\n\n\tfloat r = length( p );\n\tfloat t = atan( p.y, p.x ) - time * 0.1;\n\t\n\tfloat v = 1000.0;\n\tfor ( int i = 0; i < 32; i++ ) {\n\t\tif ( t > time * 1.5 ) {\n\t\t\tcontinue;\n\t\t}\n\t\tv = min( v, abs( function( r, t ) ) );\n\t\tt += PI * 2.0;\n\t}\n\treturn v;\n}\n\nfloat value( vec2 p, float size ) {\n\tfloat error = size * 1.6;\n\treturn 1.0 / max( solve( p ) / error, 1.0 );\n}\n\nfloat grid( vec2 p, float width ) {\n\tp += width * 0.5;\n\t\n\tfloat grid_width = 1.0;\n\tfloat k = 1.0;\n\t\n\tk *= step( width * 2.0, abs( p.x ) );\n\tk *= step( width * 2.0, abs( p.y ) );\n\t\n\tgrid_width *= 0.25;\n\tk *= min( step( width, abs( floor( p.x / grid_width + 0.5 ) * grid_width - p.x ) ) + 0.75, 1.0 );\n\tk *= min( step( width, abs( floor( p.y / grid_width + 0.5 ) * grid_width - p.y ) ) + 0.75, 1.0 );\n\n\treturn k;\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat width = 1.0 / min( iResolution.x, iResolution.y );\n\tvec2 control = mix( iResolution.xy * 0.5, iMouse.xy, 1.0 - step( iMouse.z, 0.0 ) );\n\tvec2 uv = ( fragCoord.xy - control ) * width * 2.0;\n\n\tfloat k_grid = grid( uv, width );\n\tfloat k_func = value( uv * scale, width * scale );\n\t\n\tfragColor = vec4( ( 1.0 - k_func ) * k_grid );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sSGDR","date":"1385625377","viewed":1358,"name":"Polar( r, t ) = 0","username":"gltracy","description":"Polar Coordinate Function, drag to move the origin around. Fullscreen is better:)\nmodified from my previous shader :\nhttps://www.shadertoy.com/view/Msj3zw\nfunctions from\nhttp://poncelet.math.nthu.edu.tw/disk3/exp02/11/","likes":54,"published":1,"flags":0,"usePreview":0,"tags":["math","polar"],"hasliked":0,"parentid":"","parentname":""}}