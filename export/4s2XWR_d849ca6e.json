{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define EPSILON 1e-2\n#define PI 3.14152654\n#define ORANGE vec4(1.0,0.347,0,0)\n#define SILVER vec4(0.745, 0.745, 0.745, 0.0)\n#define SURGE true\n\nfloat eqDist( vec2 rt )\n{\n    float r0 = rt.x;\n    float t0 = rt.y;\n    float r02 = r0*r0;\n    float c3 = cos(3.0*t0);\n    return c3*c3 + r02 - 2.0*c3*r0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = -1.0 + 2.0 * ( fragCoord.xy / iResolution.xy );\n    xy.x *= (iResolution.x/iResolution.y);\n    xy.y += 0.2;\n    \n    float r0 = sqrt(xy.x*xy.x + xy.y*xy.y);\n    float d = 3.0*r0*eqDist(vec2( r0, atan(xy.y,xy.x) + 1.5*PI ));\n    float expd = EPSILON*exp(5.0*(1.0-r0));\n    float dexpd = 1.0-d/expd;\n    \n    float surge = SURGE ? (1.2+0.4*max(sin(iTime*2.0),-0.5)) : 1.0;\n    vec4 c = vec4(0);\n    c += 1.96*SILVER*pow(dexpd,24.0)*surge;\n    c += 2.0*7.95*ORANGE*pow(-dexpd+1.0,2.0)*surge;\n    expd = EPSILON*exp(5.0*(1.075-r0));\n    dexpd = 1.0-d/expd;\n    c *= 1.25*1.94*SILVER*pow(dexpd,4.4);\n\texpd = EPSILON*exp(5.0*(1.0-1.0*r0));\n    fragColor = max(vec4(0),c * step(d, expd)) + step(expd, d)*vec4(0.2-0.1*length(xy));\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4s2XWR","date":"1411065578","viewed":690,"name":"Treyarch 2-D","username":"GraphicsMuncher","description":"Procedural 2-D rendering of the Treyarch trefoil knot. Not exact, but cool enough.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","logo","polar","trefoil","treyarch"],"hasliked":0,"parentid":"","parentname":""}}