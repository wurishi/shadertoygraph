{"ver":"0.1","info":{"id":"l3X3Dn","date":"1707332254","viewed":90,"name":"Color Drain","username":"astro1138","description":"Impressing the kids","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n    vec2 m = iMouse.xy / iResolution.xy;\n    vec2 from_center = m - p;\n    float dist_from_center = length(from_center);\n    /* vec2 m = u_mouse.xy / u_resolution.xy; */\n\n    vec3 color;\n\n    float N = 3.;\n    for(float i = 0.; i < N; i++) {\n      float phase = fract(iTime + (i / N));\n      float zoom = 0.01 + 2. * (1. - phase);\n      // magnify\n      vec2 deformed = pow(dist_from_center, zoom) * from_center;\n\n      float timescale = 0.05 + 0.2 * N;\n      float freq = 30. + 3. * N;\n      float noise = clamp(\n        sin(freq * deformed.x + timescale * iTime) +\n        cos(freq * deformed.y + timescale * iTime),\n        0., 1.);\n      float timescale2 = 0.1 + 0.1 * N;\n      float freq2 = 30. + 5. * N;\n      float noise2 = clamp(\n        sin(freq2 * deformed.x + timescale2 * iTime) +\n        cos(freq2 * deformed.y + timescale2 * iTime),\n        0., 1.);\n      float timescale3 = 0.1 + 0.3 * N;\n      float freq3 = 20. + 15. * N;\n      float noise3 = clamp(\n        sin(freq3 * deformed.x + timescale3 * iTime) +\n        cos(freq3 * deformed.y + timescale3 * iTime),\n        0., 1.);\n      color.r += sin(3.141 * phase) * (noise + noise2) / N;\n      color.g += sin(3.141 * phase) * noise3 / N;\n      color.b += sin(3.141 * phase) * noise2 / N;\n    }\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}