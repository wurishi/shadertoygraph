{"ver":"0.1","info":{"id":"XsKfDW","date":"1528894751","viewed":685,"name":"Circle tendrils 2","username":"noby","description":"More variation.","likes":40,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","perlin","circle","antialiasing","simplex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float T = iTime;\n    vec2 R = iResolution.xy;\n    float xr = -1.+(3.14159/2.0)*0.0;\n    \n    float col = 0.0;\n    for(int i = 0; i < 40; i++)\n    {\n        // coordinates\n        vec2 uv = (2.0*fragCoord - R) / R.y;\n        \n        // 3d projection\n    \tvec3 u3 = vec3(uv, 5.0)*mat3(1,0,0,0,cos(xr), -sin(xr), 0,sin(xr), cos(xr));\n    \tu3.y -= 3.5;\n    \tuv.x = (u3.x*R.x)/(u3.z*R.x)*2.5;\n    \tuv.y = (u3.y*R.y)/(u3.z*R.y)*sqrt(R.x/R.y)*2.5;\n        \n        float scale = 3.0+3.0*pow(0.5+0.5*cos(T*0.41),2.0);\n        uv *= pow(1.002+mix(0.03, 0.0, scale/10.0), float(i));\n        float rf = length(fwidth(uv*vec2(R.y/R.x,1.0)));\n        \n        uv += 2.0;\n        \n        // rotate\n        float a = (T)*0.19;\n        uv *= mat2(cos(a),sin(a),-sin(a),cos(a));\n\n        // zoom\n        uv *= scale;\n\n        // repeat & pattern\n        float repeat = 1.75+1.25*(0.5+0.5*sin(1.0+T*0.61));\n        float r = pow(max(0.0, 0.5+0.5*simplex(vec3( round(0.5+uv/repeat)*(1.0/scale), 0.05*float(i)+T*0.77))),3.0);\n        uv = mod(uv,repeat)-repeat/2.0;\n\n        float aa = 1.8*scale*rf*sqrt(r);\n        \n        // circle equation, uv.x^2 + uv.y^2\n        float shape = dot(uv,uv);\n        // extract outline\n        float circle = 1.0-smoothstep(0.0, aa, abs(shape-r));\n        col += circle*pow(1.0-smoothstep(0.0, 40.0, float(i)), 2.0);\n    }\n    \n    fragColor = vec4(pow(col*0.5, 1.0/2.2));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// standard GLSL 3D simplex noise\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nfloat simplex(vec3 v){ \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0);\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n  vec3 i  = floor(v + dot(v, C.yyy));\n  vec3 x0 =   v - i + dot(i, C.xxx);\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min(g.xyz, l.zxy);\n  vec3 i2 = max(g.xyz, l.zxy);\n  vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n  vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n  vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n  i = mod(i, 289.0); \n  vec4 p = permute(permute(permute(i.z+vec4(0,i1.z,i2.z,1))+i.y+vec4(0,i1.y,i2.y,1))+i.x+vec4(0,i1.x,i2.x,1));\n  float n_ = 1.0/7.0;\n  vec3  ns = n_ * D.wyz - D.xzx;\n  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww;\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n  vec4 norm = 1.0/sqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot(m*m, vec4(dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3)));\n}","name":"Common","description":"","type":"common"}]}