{"ver":"0.1","info":{"id":"mtsGW7","date":"1671888982","viewed":50,"name":"Pattern 01","username":"kudchikarsk","description":"Pattern 01","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat drawRectange(vec2 size,vec2 st)\n{\n    size = vec2(0.5) - size *0.5;\n     vec2 uv = smoothstep( size,\n     size + vec2(0.01),st);\n\n    uv *=  smoothstep( size,\n     size + vec2(0.01), 1.0 - st);\n     \n    float pct = uv.x * uv.y;\n    return pct;\n}\n\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 st = fragCoord/iResolution.xy;\n    \n    st=tile(st, 10.0);\n    \n    \n\n    \n    float pct=(1.0-drawRectange(vec2(.05,.82),st+vec2(0.5,0.01)))*\n    (1.0-drawRectange(vec2(.05,.82),(1.0-st)+vec2(0.5,0.01)))*\n    (1.0-drawRectange(vec2(.82,.05),(st)+vec2(0.01,0.5)))*\n    (1.0-drawRectange(vec2(.82,.05),(1.0-st)+vec2(0.01,0.5)));\n    \n    \n    vec2 rst = st-vec2(0.5);    \n    rst = rotate2d(PI*0.25) * rst;\n    rst += vec2(0.5);\n    \n   float outerRectangle=1.0-(drawRectange(vec2(1.3),rst) - drawRectange(vec2(1.2),rst));\n    \n    vec3 col = vec3(pct*outerRectangle);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}