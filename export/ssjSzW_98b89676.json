{"ver":"0.1","info":{"id":"ssjSzW","date":"1619809801","viewed":71,"name":"trapezoid rep-tiles","username":"Reynolds","description":"Another reptile construction using barycentric coordinates.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["reptilereptiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float signedTriangleArea(vec2 v1, vec2 v2, vec2 v3) {\n    float det = v2.x*v3.y + v3.x*v1.y + v1.x*v2.y - v2.x*v1.y - v1.x*v3.y - v3.x*v2.y;\n    return 0.5*det;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 U = fragCoord/iResolution.xy;\n \n    vec3 col;\n    \n    vec3 A = vec3(0., 0.2, 1.);\n    vec3 B = vec3(0., 1., 1.);\n    vec3 C = vec3(1., 0., 1.);\n    vec3 D = vec3(1., 1., 0.5);\n    \n    float a = signedTriangleArea(U, vec2(1.0, 0.0), vec2(0.5, 2.0));\n    float b = signedTriangleArea(U, vec2(0.5, 2.0), vec2(0.0, 0.0));\n    float c = signedTriangleArea(U, vec2(0.0, 0.0), vec2(1.0, 0.0));\n    vec3 uvw = vec3(a, b, c);\n \n    for(int i = 0; i < max(int(mod(iTime, 9.0)), 1); ++i) {\n        if(uvw.z < 0.5 && uvw.x > 0.0 && uvw.y > 0.0) {\n\n            if(uvw.x >= 0.5) {\n                if(uvw.y >= 0.25) {\n                    uvw.xy  = (uvw.xy - vec2(0.25)) * 2.0;\n                    uvw.z *= 2.0;\n                    col = D;\n                } else {\n                    uvw.x = (uvw.x - 0.5)*2.0;\n                    uvw.y *= 2.0;\n                    uvw.z *= 2.0;\n                \n                    uvw = uvw.zxy;\n                    col = A;\n                }\n                \n            } else if(uvw.y >= 0.5) {\n\n                \n                if(uvw.x >= 0.25) {\n                    uvw.xy  = (uvw.xy - vec2(0.25)) * 2.0;\n                    uvw.z *= 2.0;\n                    col = D;\n                } else {\n                    uvw.y = (uvw.y - 0.5)*2.0;\n                    uvw.x *= 2.0;\n                    uvw.z *= 2.0;\n                    uvw = uvw.yzx;\n                \n                    col = B;\n                }\n            } else {\n                \n                if(uvw.z <= 0.25) {\n                    uvw.xy  = (uvw.xy - vec2(0.25)) * 2.0;\n                    uvw.z *= 2.0;\n                    col = D;\n                } else {\n                    uvw = vec3(1.) - uvw*2.;\n\n                    col = C;\n                }\n            }\n            \n        } else {\n            col = vec3(0.);\n        } \n            \n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}