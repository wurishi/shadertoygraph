{"ver":"0.1","info":{"id":"tsc3Dl","date":"1569467396","viewed":707,"name":"Oh no...","username":"Jordan","description":"Shifts UV by HSL","likes":5,"published":3,"flags":2,"usePreview":0,"tags":["distort","webcam","hsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n// All components are in the range [0â€¦1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n\n# define PI 3.14159\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = -0.5 + fragCoord/iResolution.xy;\n    vec3 incam = (vec3(texture(iChannel0,uv+0.5)));\n    vec3 hsv_incam = rgb2hsv(incam);\n    uv *=1.0+sin(iTime*20.)*cos(hsv_incam[0]*2.*PI)*hsv_incam[1]*hsv_incam[2];\n    //uv += hsv_incam.xy*0.01;\n    vec3 incam_new = vec3(texture(iChannel0,uv+0.5));\n    // Output to screen\n    fragColor = vec4(incam_new,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}