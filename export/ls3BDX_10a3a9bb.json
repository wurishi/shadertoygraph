{"ver":"0.1","info":{"id":"ls3BDX","date":"1527228402","viewed":203,"name":"Explosion_test","username":"etherchain","description":"mouse interaction testing","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["mouse","interaction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 black = vec3(0);\nvec3 red = vec3(1,0,0);\nfloat radius = 0.01;\nfloat blurRange = 0.005;\n\nfloat circle(vec2 pos, vec2 center, float radius){\n    return 1.0 - smoothstep(radius-(radius*blurRange), radius+(radius*blurRange), length(pos-center));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n\tvec3 final = vec3(0.0);\n    \n    for(int y = 0; y < int(Y_MAX); y++){\n        for(int x = 0; x < int(X_MAX - 1.0); x++){\n            vec4 ball = texelFetch(iChannel0, ivec2(x,y),0);\n            final += mix(black, red, circle(uv, ball.xy, radius));\n        }\n    }\n    \n    fragColor = vec4(final,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(fragCoord.x > X_MAX || fragCoord.y > Y_MAX ) discard;\n    ivec2 index = ivec2(fragCoord - 0.5);\n    ivec2 bufIndex = ivec2(int(X_MAX -1.0), 0);\n    if( index.x == bufIndex.x && index.y > 0 ) discard;\n    \n    vec2 mos = iMouse.xy/iResolution.y; \n    vec4 posVel = texelFetch(iChannel0, index ,0);\n    vec4 buf = texelFetch(iChannel0, bufIndex,0);\n    \n    if(iFrame == 0){\n        posVel.xy = vec2(-10,-10);\n        posVel.zw = vec2(0,0);\n    }\n    if(iMouse.z > 0.0 && sin(iTime*TWO_PI*5.0) > THRES)\n    {\n        if(index == bufIndex){\n            buf.z += 1.0;\n            if(buf.z > Y_MAX -1.0){\n                buf.z = 0.0;\n            }\n            buf.xy = iMouse.xy;\n            posVel = buf;\n        }\n        else if( index.y == ivec4(buf).z){\n            switch(index.x){\n                case 0:\n                posVel.zw = vec2(1,0);\n                break;\n                case 1:\n                posVel.zw = vec2(sqrt(3.0)/2.0,0.5);\n                break;\n                case 2:\n                posVel.zw = vec2(0.5, sqrt(3.0)/2.0);\n                break;\n                case 3:\n                posVel.zw = vec2(0,1);\n                break;\n                case 4:\n                posVel.zw = vec2(-0.5, sqrt(3.0)/2.0);\n                break;\n                case 5:            \n                posVel.zw = vec2(-sqrt(3.0)/2.0,0.5);\n                break;\n                case 6:\n                posVel.zw = vec2(-1,0);\n                break;\n                case 7:\n                posVel.zw = vec2(-sqrt(3.0)/2.0,-0.5);\n                break;\n                case 8:\n                posVel.zw = vec2(-0.5, -sqrt(3.0)/2.0);\n                break;\n                case 9:\n                posVel.zw = vec2(0, -1);\n                break;\n                case 10:\n                posVel.zw = vec2(0.5, -sqrt(3.0)/2.0);\n                break;\n                case 11:\n                posVel.zw = vec2(sqrt(3.0)/2.0,-0.5);\n                break;\n            }\n            posVel.xy = mos + posVel.zw*iTimeDelta;\n            \n        }\n        else{\n            if(index != bufIndex)\n                posVel.xy += posVel.zw*iTimeDelta;\n        }\n        \n    }\n    else{\n        if(index != bufIndex)\n        \tposVel.xy += posVel.zw*iTimeDelta;\n    }\n    fragColor = posVel;\n    \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define TWO_PI 6.28318530718\n#define X_MAX 13.0\n#define Y_MAX 64.0\n#define THRES 0.95","name":"Common","description":"","type":"common"}]}