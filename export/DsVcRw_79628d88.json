{"ver":"0.1","info":{"id":"DsVcRw","date":"1695943494","viewed":64,"name":"Lenia Pt.1","username":"26apastor","description":"my journey onto creating the amazing cellular automata: Lenia\nPart one.\n(Now with a growing kernel size! Warning don't wait too long or it will get laggy)","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["automata","life","cellular","continuous","artificial","lenia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define R 1.0\n#define b1 0.20\n#define b2 0.25\n#define s1 0.19\n#define s2 0.33\n#define T 10.0\n\nfloat growth(float sum) {\n    if (sum >= b1 && sum <= b2) return 1.0;  // Growth condition\n    if (sum <= s1 || sum >= s2)  return -1.0; // Decline condition\n    return 0.0;  // No growth or decline\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float color = 0.0;\n    float neighbors = 0.0;\n    for(float i = -R; i <= R; i += 1.0)\n    {\n        for( float j = -R; j <= R; j += 1.0)\n        {\n        \tvec2 offset = vec2(i, j) / iResolution.xy;\t\t\n        \tvec4 lookup = texture(iChannel0, uv + offset);\n            float weight = 1.0 / (pow(2.0 * R + 1.0, 2.0) - 1.0);\n        \tneighbors += lookup.x * weight;\t\t\t\t\t\t\t\n        }\n    }\n    neighbors -= texture(iChannel0, uv).x / (pow(2.0 * R + 1.0, 2.0) - 1.0);\n    \n    float cell = texture(iChannel0, uv).x;\n    \n    color = clamp(cell + growth(neighbors) / T, 0.0, 1.0);\n    \n    if(iFrame < 1) {\n        color = texture(iChannel1, fragCoord.xy / iResolution.xx).x;\n    }\n    fragColor = vec4(color, color, color, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}