{"ver":"0.1","info":{"id":"dt3Bz8","date":"1700929815","viewed":18,"name":"bumpmap testing","username":"ZProphete","description":"bump","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bump"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int blurSize = 5; // Adjust this for blur intensity\n\nvec3 toGrayscale(vec3 color, float shadowLevel, float midtoneLevel, float highlightLevel) {\n    // Apply custom weights to the color channels for shadow, midtone, and highlight\n    float gray = dot(color, vec3(0.3, 0.59, 0.11));\n\n    // Apply the levels for shadow, midtone, and highlight\n    gray = mix(gray * shadowLevel, gray * midtoneLevel, smoothstep(0.3, 0.7, gray));\n    gray = mix(gray, gray * highlightLevel, smoothstep(0.7, 1.0, gray));\n\n    return vec3(gray);\n}\n\nvec3 blur(sampler2D image, vec2 uv) {\n    vec3 col = vec3(0.0);\n    vec2 pixel = 1.0 / iResolution.xy;\n    for (int i = -blurSize; i <= blurSize; ++i) {\n        for (int j = -blurSize; j <= blurSize; ++j) {\n            col += texture(image, uv + vec2(i, j) * pixel).rgb;\n        }\n    }\n    col /= float((2 * blurSize + 1) * (2 * blurSize + 1));\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Sample the original image\n    vec3 originalColor = texture(iChannel0, uv).rgb;\n\n    // Sobel edge detection filter (not changed from the previous version)\n\n    // Low-frequency image (for debugging) - approximate using blur\n    vec3 lowFreq = blur(iChannel0, uv);\n\n    // Convert lowFreq to grayscale with custom shadow, midtone, and highlight levels\n    float shadowLevel = 1.5;    // Adjust these levels as desired\n    float midtoneLevel = 1.0;\n    float highlightLevel = 1.0;\n\n    vec3 grayscaleLowFreq = toGrayscale(lowFreq, shadowLevel, midtoneLevel, highlightLevel);\n\n    // Display the low-frequency image (grayscale)\n    fragColor = vec4(grayscaleLowFreq, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}