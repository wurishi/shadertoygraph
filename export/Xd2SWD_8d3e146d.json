{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Ref: http://adrianboeing.blogspot.in/2011/01/webgl-tunnel-effect-explained.html\n//\t\thttps://www.shadertoy.com/view/Ms2SWW\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // clamp pixel posiiton in [-1,1]\n    vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    vec2 uv;\n\n    // calculate angle of current pixel from origin\n    // atan return values are in [-pi, pi]\n    float a = atan(p.y,p.x);\n    \n    // distance of point from origin\n    //float r = sqrt(dot(p,p));\n    \n    float power = 7.0;\n    \n    // don't understand this at all :(\n    // http://en.wikipedia.org/wiki/Minkowski_distance\n\tfloat r = pow( pow(p.x*p.x,power) + pow(p.y*p.y,power), 1.0/(2.0*power) );\n\n    // add global time for a moving tunnel\n    uv.x = .2/r + iTime/2.0;\n    uv.y = a/(3.1416);\n\n    // multiplication by r to give a darkened effect  in center\n    vec3 col = texture(iChannel0, uv).xyz * (1.0-r);\n    //vec3 col = vec3(uv.y, 0.0,0.0);\n\t\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xd2SWD","date":"1412156574","viewed":559,"name":"SquareTunnel","username":"abhi_bansal","description":"Square Shaped Tunnel","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","tunnel"],"hasliked":0,"parentid":"","parentname":""}}