{"ver":"0.1","info":{"id":"MctfWr","date":"1732984329","viewed":62,"name":"embossed 2","username":"pb","description":"fake lighting, koch snowflake pattern forms on borders","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"X3BBDd","parentname":"embossed"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//philip.bertani@gmail.com\n\nvoid mainImage(out vec4 O, vec2 u) {\n\n    vec2 R = iResolution.xy,\n        uv = u/R;\n    float Rxy=length(R);\n\n    O *= 0.;\n\n    float[] gk1s = float[](\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.023792, 0.094907, 0.150342, 0.094907, 0.023792,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765\n    );\n\n\n    vec4 total_color = vec4(0.0,0.0,0.0,0.0);\n    vec2 tex = 1./R.xy;\n    float one_pixel = 4./Rxy;\n    float pix = one_pixel/sqrt(2.);\n    float green = 0.0;\n    for (int i=0; i<5; i++) {\n        for (int j=0; j<5; j++) {                             \n \n            vec4 x2 =  texture(iChannel0,uv+vec2( 0.0,  one_pixel) + vec2( i-2,j-2 ) * tex);\n            vec4 x3 =  texture(iChannel0,uv+vec2( pix, pix) + vec2( i-2,j-2 ) * tex);\n            vec4 x4 =  texture(iChannel0,uv+vec2( 0.0, -one_pixel) + vec2( i-2,j-2 ) * tex);\n\n            float a = x3.x*x2.y - x3.y*x2.x;\n            float c = x3.x*x2.w - x3.w*x2.x;\n            float e = x3.y*x2.w - x3.w*x2.y;\n\n            green += gk1s[i*5 + j] * ( (a*x4.w - c*x4.y + e*x4.x) ) ;\n        }\n    }\n\n    float  xxx = .4 - green*Rxy*Rxy/2000.;\n    \n    vec3 cc = xxx*vec3(1,.6,0);\n    O = vec4( cc, 0.);\n    O *= O;\n    O *= O;\n    O *= O;\n    \n    O = 1.-exp(-O);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// philip.bertani@gmail.com\n\n#define t iTime/2.\n#define rot(a) mat2(cos(a+vec4(0,11,33,0)))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;    \n        \n    vec2 center = vec2(-300,-540);\n    vec2 width  = vec2(200);\n \n    vec2 z = uv * width; \n    \n    float max_iter=70., \n        mix_factor=.984,\n        infinity=1e3;\n\n \n    z *= rot(.5);\n    z += center;\n    \n    vec2 wgt=vec2(mix_factor, 1.-mix_factor);\n    \n    float r=-.0016,an= 2. - mod(iTime/100.,.031);\n    vec2 jc = vec2(r*cos(an),r*sin(an)) ;\n\n    float escape_value = 0., distance=0., too_small=1e-7;\n \n    float invert = 1./max(z.x*z.x+z.y*z.y,too_small);    \n    z *= invert;\n    \n\n    for ( float i=0.; i<max_iter; i++ ) {\n    \n        vec2 tmp = vec2(z.x*z.x*z.x - 3.*z.x*z.y*z.y,\n                    -z.y*z.y*z.y + 3.*z.x*z.x*z.y);\n                    \n        float div = max(tmp.x*tmp.x+tmp.y*tmp.y,too_small);\n        \n        //combo of abs(z^3) and abs(1/z^3)\n        z = wgt.x*abs(tmp) + wgt.y*abs(tmp)/div+jc;\n        \n        distance = z.x*z.x + z.y*z.y;\n\n        if ( distance > infinity ) {\n            escape_value = i;\n            break;\n        }\n         \n    }\n\n    if ( escape_value != 0. ) { \n        fragColor = vec4(0);\n    }\n    else {\n        fragColor = vec4(uv,log(distance)/2.,log(distance)/2.);\n    }\n    \n\n}\n\n\n","name":"Buffer A","description":"","type":"buffer"}]}