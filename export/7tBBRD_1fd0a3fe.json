{"ver":"0.1","info":{"id":"7tBBRD","date":"1651887513","viewed":77,"name":"cmyk up down","username":"HaleyHalcyon","description":"araeere","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["carets"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TURN 6.283185\n#define HEX(x) vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255) / 255.\n\nfloat slopestep(float x, float ratio) {\n    return floor(x) + min(1.0, ratio * fract(x)) - x;\n}\n\nvec2 rotate(vec2 uv, float theta) {\n    return vec2(\n      uv.x * cos(theta) + uv.y * sin(theta),\n      uv.y * cos(theta) - uv.x * sin(theta)\n    );\n}\n\nfloat zigzag(float x) {\n    return abs(1. - fract(x) * 2.);\n}\n\nvec3 palette(float x, float invert) {\n    x = floor(mod(x, 4.));\n    return (\n        HEX(0xfff100) * max(0., 1. - abs(x - 0.)) +\n        HEX(0x009BE8) * max(0., 1. - abs(x - 1.)) +\n        HEX(0xEB0072) * max(0., 1. - abs(x - (2. + invert))) +\n        HEX(0x000000) * max(0., 1. - abs(x - (3. - invert)))\n    );\n}\n\n#define SCALE 2.0\n#define HSCALE 1.2\n#define LOOPLEN 9.\n#define SCROLL_MAGN 8.\n#define STEPS 8.\n#define STEP_RATIO 4.0\n#define STEP_MAGN 8.5\n#define CARET_RATIO 0.6\n#define CARET_STAGGER 0.25\n#define ANGLE_BASE 0.25\n#define ANGLE_SWAY 0.00\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime / LOOPLEN);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / length(iResolution.xy);\n    uv = rotate(uv, TURN * (ANGLE_BASE + 2. * t + 0.5 * slopestep(t * 4., 8.0)) + ANGLE_SWAY * sin(TURN * t));\n    uv *= SCALE * vec2(HSCALE, 1.);\n    \n    float aa_a = fwidth(uv.y) * 2.;\n    float a = smoothstep(\n        -aa_a, aa_a,\n        zigzag(uv.y) - 0.5\n    );\n    float aa_b = fwidth(uv.x) * 4.;\n    float b_0 = smoothstep(\n        -aa_b, aa_b,\n        zigzag(\n            uv.x +\n            CARET_RATIO * zigzag(0.5 + uv.y) +\n            STEP_MAGN * slopestep(0.5 + t * STEPS, STEP_RATIO) / STEPS +\n            SCROLL_MAGN * t\n        ) - 0.5\n    );\n    float b_1 = smoothstep(\n        -aa_b, aa_b,\n        zigzag(\n            uv.x + CARET_STAGGER +\n            CARET_RATIO * zigzag(uv.y) +\n            STEP_MAGN * slopestep(t * STEPS, STEP_RATIO) / STEPS +\n            SCROLL_MAGN * t\n        ) - 0.5\n    );\n    //float b = mix(b_0, b_1, a);\n    //vec3 col = vec3(a, b, 0.);\n        \n        \n        \n    vec3 col = mix(\n        mix(palette(t * 4.,      step(0.5, t)), palette(t * 4. + 1., step(0.5, t)), b_0),\n        mix(palette(t * 4. + 2., step(0.5, t)), palette(t * 4. + 3., step(0.5, t)), b_1),\n        a\n    );\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}