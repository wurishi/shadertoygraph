{"ver":"0.1","info":{"id":"NtXXRX","date":"1653447865","viewed":166,"name":"HPDZ buffalo explorer","username":"bward194","description":"Z/X to zoom in and out\nQ/E to increase and decrease rotation\nWASD/arrow keys to move","likes":6,"published":1,"flags":48,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rota(float ro){\nfloat c = cos(ro);\nfloat s = sin(ro);\nreturn mat2(c,-s,s,c);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 settings = texelFetch(iChannel0,ivec2(fragCoord),0);\n    vec2 pos = settings.xy;\n    float zoom = settings.w;\n    float rot = settings.z;\n    vec2 uv = 10./pow(10.,zoom)*(2.*fragCoord-iResolution.xy)/iResolution.x;\n    uv+=pos;\nfloat it = 0.;\n    //uv *= rota(rot);\n    vec2 z = vec2(0.,0.);\n    for(int i = 0;i<200;i++){\n    vec2 zsq = cpow(z,2.);\n    z = (vec2(zsq.x,abs(zsq.y))-abs(z))+uv;\nz *=rota(rot);\nif(dot(z,z)>16.){\nbreak;}\nit++;\n}\n    // Time varying pixel color\n    vec3 col = vec3(sin(it*acos(-1.)/20.));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEY_SHIFT 16\n#define KEY_CTRL 17\n#define KEY_SPACE 32\n#define KEY_PAGE_UP 33\n#define KEY_PAGE_DOWN 34\n#define KEY_LEFT 37\n#define KEY_UP 38\n#define KEY_RIGHT 39\n#define KEY_DOWN 40\n#define KEY_A 65\n#define KEY_D 68\n#define KEY_E 69\n#define KEY_M 77\n#define KEY_Q 81\n#define KEY_S 83\n#define KEY_W 87\n#define KEY_X 88\n#define KEY_Y 89ese\n#define KEY_Z 90\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec4 values = texelFetch(iChannel0,ivec2(fragCoord),0);\nvec2 poso = (iFrame == 0)?vec2(0.):values.xy;\nvec2 zoomrot = (iFrame == 0)?vec2(0.,0.5):values.zw;\nzoomrot.x-=speed/5./pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_Q, 0), 0).x;\nzoomrot.x+=speed/5./pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_E, 0), 0).x;\nposo.x+=speed/pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_D, 0), 0).x;\nposo.x+=speed/pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).x;\nposo.x-=speed/pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_A, 0), 0).x;\nposo.x-=speed/pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).x;\nposo.y-=speed/pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).x;\nposo.y-=speed/pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_S, 0), 0).x;\nposo.y+=speed/pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).x;\nposo.y+=speed/pow(10.,zoomrot.y)* texelFetch(iChannel1, ivec2(KEY_W, 0), 0).x;\nzoomrot.y-=speed/20.* texelFetch(iChannel1, ivec2(KEY_X, 0), 0).x;\nzoomrot.y+=speed/20.* texelFetch(iChannel1, ivec2(KEY_Z, 0), 0).x;\n    fragColor = vec4(poso.x,poso.y,zoomrot.x,zoomrot.y);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define speed 0.15\n#define pi acos(-1.)\nvec2 cpow(vec2 c,float n){\nfloat a  = atan(c.y,c.x)*n;\nfloat l = pow(length(c),n);\nreturn l*vec2(cos(a),sin(a));}","name":"Common","description":"","type":"common"}]}