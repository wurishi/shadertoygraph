{"ver":"0.1","info":{"id":"csffRr","date":"1688389441","viewed":53,"name":"MB set ~Attempt 4","username":"catvatar","description":"My 4th attempt at making Mandelbroth fractal","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fragtal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 assignColor(vec3 mu){\n    float log_2 = log(2.);\n    \n    if(mu.z == 0.){\n        return vec4(0,0,0,0);\n    }\n    float log_zn = log(mu.x + mu.y)/2.;\n    float nu = log(log_zn/log_2)/log_2;\n    float iter = mu.z - 1. + nu;\n    iter = iter;\n    return vec4(iter * 255.,iter * 255.,124.,255);\n}\n\nvec2 frag2comp(vec2 frag,vec2 lookat, float scale){\n    return (frag - iResolution.xy/2.) * scale + lookat*vec2(1.,-1.);\n}\n\nvec3 fracLoop(vec2 c, int _iterLim){\n    vec3 iterCoord = vec3(0.,0.,0.);\n    vec2 xy;\n    int iterLim = _iterLim;\n    while(iterCoord.x + iterCoord.y < 4.){\n        xy = vec2(iterCoord.x - iterCoord.y + c.x,iterCoord.z - iterCoord.y - iterCoord.x + c.y);\n        iterCoord = vec3(xy.x * xy.x ,xy.y * xy.y,(xy.x + xy.y) * (xy.x + xy.y));\n        iterLim -= 1;\n        if(iterLim == 0){\n            break;\n        }\n    }\n    return vec3(iterCoord.x,iterCoord.y,float(iterLim)/float(_iterLim));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 compCoord = frag2comp(fragCoord, vec2(-0.664353814313,-0.453777249921), 0.0001);\n    vec3 res = fracLoop(compCoord,60);\n    fragColor = assignColor(res);\n}","name":"Image","description":"","type":"image"}]}