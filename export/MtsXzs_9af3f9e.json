{"ver":"0.1","info":{"id":"MtsXzs","date":"1439182496","viewed":185,"name":"Ball Bouncing","username":"kaswan","description":"Simple projectile motion","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["ball","physics","gravity","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 txBallPos = vec2(31.0, 1.0);\nconst vec2 txBallVel = vec2(31.0, 3.0);\n\nfloat isInside( vec2 p, vec2 c ) { vec2 d = abs(p-0.5-c) - 0.5; return -max(d.x,d.y); }\nfloat isInside( vec2 p, vec4 c ) { vec2 d = abs(p-0.5-c.xy-c.zw*0.5) - 0.5*c.zw - 0.5; return -max(d.x,d.y); }\n\nvec4 loadValue( in vec2 uv )\n{\n    return texture( iChannel0, (0.5+uv) / iChannelResolution[0].xy, -100.0 );\n}\n\nvoid storeValue( in vec2 uv, in vec4 va, inout vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = ( isInside(fragCoord, uv) > 0.0 ) ? va : fragColor;\n}\nvoid storeValue( in vec4 uv, in vec4 va, inout vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = ( isInside(fragCoord, uv) > 0.0 ) ? va : fragColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 ballPos = loadValue(txBallPos);\n   \t//vec4 ballVel = loadValue(txBallVel);\n    \n    // background\n    vec3 color = vec3(0.1, 0.4, 0.2);\n\tif (mod(fragCoord.x, 20.0) <= 1.0){\n\t\tcolor = vec3(0.7, 0.9, 0.7);\n   \t}\n    if (mod(fragCoord.y, 20.0) <= 1.0){\n\t\tcolor = vec3(0.7, 0.9, 0.7);\n    }\n\n    // ball\n    vec3 ballColor = color;\n    float dr = length(fragCoord.xy - ballPos.xy); \n    if (dr < 15.0) {\n\t\t\n\t\tfloat shade = 1.0 - dr / 20.0;\n    \n\t\tballColor = vec3(shade * 0.7, shade * 0.7, shade);\n    }\n    \n    color = mix(color, ballColor, 0.9);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const vec2 txBallPos = vec2(31.0, 1.0);\nconst vec2 txBallVel = vec2(31.0, 3.0);\n\nfloat isInside( vec2 p, vec2 c ) { vec2 d = abs(p-0.5-c) - 0.5; return -max(d.x,d.y); }\nfloat isInside( vec2 p, vec4 c ) { vec2 d = abs(p-0.5-c.xy-c.zw*0.5) - 0.5*c.zw - 0.5; return -max(d.x,d.y); }\n\nvec4 loadValue( in vec2 uv )\n{\n    return texture( iChannel0, (0.5+uv) / iChannelResolution[0].xy, -100.0 );\n}\n\nvoid storeValue( in vec2 uv, in vec4 va, inout vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = ( isInside(fragCoord, uv) > 0.0 ) ? va : fragColor;\n}\nvoid storeValue( in vec4 uv, in vec4 va, inout vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = ( isInside(fragCoord, uv) > 0.0 ) ? va : fragColor;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 ballPos = loadValue(txBallPos);\n   \tvec4 ballVel = loadValue(txBallVel);\n    \n    if (iFrame < 1) {\n        ballPos.xy = vec2(0.0, 0.0);\n        ballVel.xy = vec2(5.0, 15.0);\n    }\n\n    vec2 gravity = vec2(0.0, -0.3);\n    \n    vec2 ballPosOld = ballPos.xy;\n    \n    ballVel.xy += gravity;\n    ballPos.xy += ballVel.xy;\n\n    if (ballPos.x < 0.0) {\n\t\tballVel.x = -ballVel.x;\n    \tballPos.xy = ballPosOld;\n    }\n    if (ballPos.x > iChannelResolution[0].x) {\n        ballVel.x = -ballVel.x;\n    \tballPos.xy = ballPosOld;\n    }\n    if (ballPos.y < 0.0) {\n        ballVel.y = -ballVel.y;\n    \tballPos.xy = ballPosOld;\n    }\n\n\tfragColor = vec4(0.0,0.0,0.0,1.0);\n\n\tstoreValue(txBallPos, vec4(ballPos), fragColor, fragCoord);\n\tstoreValue(txBallVel, vec4(ballVel), fragColor, fragCoord);\n}","name":"Buf A","description":"","type":"buffer"}]}