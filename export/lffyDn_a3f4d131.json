{"ver":"0.1","info":{"id":"lffyDn","date":"1721335492","viewed":38,"name":"Cemit√©rio com certeza","username":"Sumar","description":"Dando baby steps com SDFs em 3d. \nBase do Elsio.\n\nnome by Macedossauro.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","sdf","lattice","andaime"],"hasliked":0,"parentid":"cd2BDG","parentname":"Grade de ferro (296 chars)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define T .3*iTime\n#define rot(a) mat2 (cos(a), sin(a), -sin(a), cos(a))\n\n// From https://www.shadertoy.com/view/ll2GD3\nvec3 pal(in float t)\n{\n    vec3 a = vec3(0.5,0.5,0.5),\n         b = vec3(-.7,0.5,0.5),\n         c = vec3(0.8,1.0,0.0),\n         d = vec3(0.1,0.20,0.25);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat mov(float t){\n    return smoothstep(0.5, .9, fract(t));\n}\n\nfloat M(vec3 p) {\n    p.xy *= rot(T);\n    p.x += 3.*mov(T);\n    p.y += 5.*mov(T + .5);\n    p.z -= cos(2.*T);\n    \n    vec3 q = abs(fract(p) - .5) - vec3(.16);\n    return  length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0)-.05;\n}\n\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 uv = (u+u - R) / R.y;\n    \n    float i, s, t;\n    while(i++ < 2e2){\n        s = M(t * vec3(10.*uv, -1.));\n        //t += s * .01;\n        //t += s * .2;\n        t += s * .2 * max(.05,sin(T));\n    }\n    \n    O = vec4(pal(t) , 1);\n}\n","name":"Image","description":"","type":"image"}]}