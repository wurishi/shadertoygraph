{"ver":"0.1","info":{"id":"XXdXWf","date":"1719743388","viewed":72,"name":"gakuen-idolmaster-uniform","username":"ayaha401","description":"https://x.com/gkmas_official/status/1806598415712993744\ngakuen-idolmaster-uniform pattern\nI want to solve a lot of branches...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define t iTime\n\nfloat squareWave(float a, float x)\n{\n    return step(a, fract(x + a));\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat map(vec2 p, vec2 pd)\n{\n    float d, d1;\n    float f, r = 0.;\n    \n    vec2 uv2 = vec2(mod(pd.x, 10.), mod(pd.y, 5.));\n    \n    // quad-1\n    if(uv2.x + uv2.y == 0. || (uv2.x == 4. && uv2.y == 0.) || (uv2.x == 5. && uv2.y == 0.) || (uv2.x == 9. && uv2.y == 0.) ||\n      (uv2.x == 5. && uv2.y == 4.) || (uv2.x == 0. && uv2.y == 4.) || (uv2.x == 9. && uv2.y == 4.) || (uv2.x == 4. && uv2.y == 4.) ||\n      (uv2.x == 5. && uv2.y == 2.) || (uv2.x == 4. && uv2.y == 2.) || (uv2.x == 0. && uv2.y == 2.) || (uv2.x == 9. && uv2.y == 2.))\n    {\n        f = 1.;\n    }\n    \n    if((uv2.x == 9. && uv2.y == 4.) || (uv2.x == 4. && uv2.y == 4.))\n    {\n        r = 1.;\n    }\n    d = squareWave(.85, mix(p.x, p.y, r) * 7.9) * f; // quad-1\n    f = r = 0.;\n    \n    // quad-2\n    if((uv2.x == 7. && uv2.y == 4.) || (uv2.x == 2. && uv2.y == 4.) || \n      ((uv2.x != 5. && uv2.y == 3.) && (uv2.x != 0. && uv2.y == 3.)) || \n      (uv2.x == 7. && uv2.y == 2.) || (uv2.x == 2. && uv2.y == 2.) ||\n      (uv2.x == 1. && uv2.y == 1.) || (uv2.x == 2. && uv2.y == 1.) || (uv2.x == 6. && uv2.y == 1.) || (uv2.x == 7. && uv2.y == 1.))\n    {\n        f = 1.;\n    }\n    \n    if((uv2.x != 5. && uv2.y == 3.) && (uv2.x != 0. && uv2.y == 3.) || \n      ((uv2.x == 1. && uv2.y == 1.) || (uv2.x == 6. && uv2.y == 1.)))\n    {\n        r = 1.;\n    }\n    d += squareWave(.85, mix(p.x, p.y, r) * 5.9)* f; // quad-2\n    f = r = 0.;\n    \n    // star\n    if((uv2.x == 6. && uv2.y == 0.) || (uv2.x == 8. && uv2.y == 0.) || (uv2.x == 1. && uv2.y == 0.) || (uv2.x == 3. && uv2.y == 0.) ||\n       (uv2.x == 6. && uv2.y == 4.) || (uv2.x == 1. && uv2.y == 4.) ||\n       (uv2.x == 8. && uv2.y == 2.) || (uv2.x == 3. && uv2.y == 2.) ||\n       (uv2.x == 0. && uv2.y == 1.) || (uv2.x == 5. && uv2.y == 1.))\n    {\n        f = 1.;\n    }\n    \n    vec2 p2,p3;\n    p2 = p3 = p;\n    p2.x = abs(p2.x); p3.y = abs(p3.y);\n    p2.x -= .83; p3.y -= .83;\n    float s0, s1;\n    s0 = max(sdCircle(p2, 0.6), -sdCircle(p2, 0.57));\n    s1 = max(sdCircle(p3, 0.6), -sdCircle(p3, 0.57));\n    d += step(min(s0, s1), .001) * f;\n    f = r = 0.;\n    \n    // moon\n    if((uv2.x == 8. && uv2.y == 4.) || (uv2.x == 3. && uv2.y == 4.) ||\n       (uv2.x == 9. && uv2.y == 1.) || (uv2.x == 4. && uv2.y == 1.))\n    {\n        f = 1.;\n    }\n    \n    if((uv2.x == 9. && uv2.y == 1.) || (uv2.x == 4. && uv2.y == 1.))\n    {\n        r = 1.;\n    }\n    \n    vec2 p5 = p;\n    p5 = mix(vec2(p5.x + .5, p5.y), vec2(p5.x, p5.y + .5), r);\n    float m;\n    m = min(1.-squareWave(.9, mix(p.y, p.x, r) * 8.), sdCircle(p5, .5));\n    d += step(max(m, -sdCircle(p5, .47)), .001) * f;\n    f = r = 0.;\n   \n    // h\n    if((uv2.x == 7. && uv2.y == 0.) || (uv2.x == 2. && uv2.y == 0.) || \n       (uv2.x == 5. && uv2.y == 3.) || (uv2.x == 0. && uv2.y == 3.) ||\n       (uv2.x == 6. && uv2.y == 2.) || (uv2.x == 1. && uv2.y == 2.) ||\n       (uv2.x == 8. && uv2.y == 1.) || (uv2.x == 3. && uv2.y == 1.))\n    {\n        f = 1.;\n    }\n    \n    if((uv2.x == 5. && uv2.y == 3.) || (uv2.x == 0. && uv2.y == 3.))\n    {\n        r = 1.;\n    }\n    \n    vec2 p6 = p;\n    p6 *= rot(mix(0., 1.57079, r));\n    float l = step(abs(p6.y), .02) * step(abs(p6.x), .25); // horizontal line\n    l += step(abs(fract(p6.x*2.+.5)), .07) * step(abs(p6.y), .42); // vertical line\n    l += step(max(sdCircle(p6, 0.5), -sdCircle(p6, 0.47)), .001);\n    d += l * f;\n    \n    // grid\n    d += step(.47, p.x) + step(.47, p.y); \n    \n    d = min(1., d);\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 b0, b1, b2, b3; // Gradually darker\n    b0 = vec3(.761, .863, .996);\n    b1 = vec3(.635, .788, .949);\n    b2 = vec3(.494, .643, .847);\n    b3 = vec3(.373, .533, .745);\n    \n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv += vec2(t, t * .5);\n   \n    vec2 uvf = abs(mod(uv * 2., 1.)) - .5;\n    vec2 uvd = floor(uv * 2.);\n    \n    float d = 1. - map(uvf, uvd - 1.);\n    \n    vec3 col = vec3(d);\n\n    float c;\n    vec2 d2, d20;\n    \n    d2 = mod(uvd, 2.);\n    \n    d20 = d2 * .5;\n    col = fract(d20.x + d20.y) * 2. * b2 * d;\n    col += step(.1, d2.x * d2.y) * b1 * d;\n    col += step(d2.x, .1) * step(d2.y, .1) * b3 * d;\n    col += b0 * (1.-d);\n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}