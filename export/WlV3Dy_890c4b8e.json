{"ver":"0.1","info":{"id":"WlV3Dy","date":"1579800618","viewed":202,"name":"voronoi caustic","username":"cdpjohn","description":"my first shader toy experience :)\nstill far to go","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4  WATER_COLOR    = vec4( 51.0/255.0, 175.0/255.0, 212.0/255.0, 0.19);\nconst vec4  RIPPLE_COLOR   = vec4(255.0/255.0, 255.0/255.0, 255.0/255.0, 0.6);\nconst float GROUND_DENSITY = 1.6;\nconst float RIPPLE_DENSITY = 6.0;\nconst float RIPPLE_SPEED   = 1.5;\nconst vec2  LIGHT_VECTOR   = normalize(vec2(-1.0, 0.5));\n\nvec2 hash(vec2 pos)\n{\n    pos = vec2(dot(pos, vec2(2.71, 81.21)), dot(pos, vec2(1195.113, 114.114)));\n    return fract(sin(pos) * 3.14159265 + sin(pos) * 2.71828);\n}\n\nvec3 voronoi(vec2 pos)\n{\n    float d = 0.01 * sin(iTime * 1.0);\n    pos *= mat2(cos(d), -sin(d), sin(d), cos(d));\n    \n    vec2 grid_pos = floor(pos);\n    vec2 local_pos = fract(pos);\n    \n    float closest_sqr_dist = 4.0;\n    vec2 vector_to_closest_voronoi_point = vec2(0.0);\n    \n    for(int i = -2; i <= 2; ++i)\n        for(int j = -2; j <= 2; ++j)\n        {\n            vec2 near_grid_local_pos = vec2(float(i), float(j));\n            vec2 near_grid_local_voronoi_point = hash(grid_pos + near_grid_local_pos);\n            \n            near_grid_local_voronoi_point = \n                (0.5 * sin(RIPPLE_SPEED * iTime + 71.0 * near_grid_local_voronoi_point));\n            \n            vec2 vector_to_voronoi_point =\n                near_grid_local_pos + near_grid_local_voronoi_point - local_pos;\n            \n            float sqr_dist = dot(vector_to_voronoi_point, vector_to_voronoi_point);\n            if (closest_sqr_dist > sqr_dist)\n            {\n                closest_sqr_dist = sqr_dist;\n                vector_to_closest_voronoi_point = vector_to_voronoi_point;\n            }\n        }\n    \n    return vec3(sqrt(closest_sqr_dist), vector_to_closest_voronoi_point);\n}\n\nvec3 ground_color(const vec2 pos)\n{\n    vec3 v = voronoi(RIPPLE_DENSITY * pos);\n    vec2 distortion = v.yz * 0.018;\n    distortion *= pow(sin(clamp(v.x * 2.0, 0.0, 1.0) * 3.14159265), 2.2);\n    \n    vec3 color = textureLod(iChannel0, GROUND_DENSITY * (pos + distortion), 0.0).xyz;\n    color = pow(color, vec3(1.1));\n    \n    float caustic = voronoi(RIPPLE_DENSITY* 1.7 * (pos + vec2(4.1, 3.7) + distortion)).x;\n    caustic = pow(caustic, 1.0) * 0.9;\n    color = mix(color, vec3(0.0), caustic);\n    \n    return color;\n}\n\nvec4 water_color(const vec2 pos)\n{\n    vec3 v = voronoi(RIPPLE_DENSITY * pos);\n    vec4 water_color = mix(WATER_COLOR, RIPPLE_COLOR, pow(v.x, 3.1));\n    return water_color;\n}\n\nvoid mainImage(out vec4 frag_color, in vec2 frag_coord)\n{\n    vec2 pixel_pos = (frag_coord.xy - iResolution.xy * 0.5);\n    pixel_pos /= max(iResolution.x, iResolution.y);\n    \n    vec3 ground_color = ground_color(pixel_pos);\n    vec4 water_color = water_color(pixel_pos);\n    \n    frag_color = vec4(mix(ground_color, water_color.xyz, water_color.w), 1.0);\n}","name":"Image","description":"","type":"image"}]}