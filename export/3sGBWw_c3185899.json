{"ver":"0.1","info":{"id":"3sGBWw","date":"1607218282","viewed":56,"name":"hoeled_bouncing_balls_2","username":"hoeled","description":"More bounce.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["balls"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n#define sat(x) clamp(x, 0., 1.)\n\nfloat remap01(float a, float b, float t) {\n\treturn sat((t-a)/(b-a));\n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n\treturn sat(((t-a)/(b-a)) * (d-c) + c);\n}\n\nfloat Hash21(vec2 p) {\n\tp = fract(p*vec2(123.34, 456.21));\n    p += dot (p, p+45.32);\n    return fract(p.x*p.y);\n}\n\nvec4 Sphere(vec2 uv, float t, vec4 col) {\n    uv.y += t;\n    uv.x *= S(5., -.1, t*4.5);\n    uv.y /= S(1., -1., t)+.2;\n    uv.y *= 1.-S(1., -1., t)*.05;\n    uv.x *= 1.-S(1., -.1, t)*-.6;\n\n    vec2 size = vec2(.24, .239);\n    float d = length(uv);\n    col.a = S(size.x, size.y, d);\n    \n    float highlight = S(size.x, size.y, d);\n    highlight *= remap(.2, -.19, .4, .0, uv.y)*.9;\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    d = length(uv-.05);\n    col += S(size.x, .0, d)*.4;\n    \n    return col;\n}\n\nvec4 Spheres(vec2 uv) {\n\tvec4 col = vec4(0.);\n  \n    for(float i=3.; i<7.; i++){\n        uv.x += (i*.07)+(Hash21(vec2(i, .65)*.000003));\n        float t = sin(iTime*i*.1)*.25;\n    \tvec4 sphere = Sphere(uv*(1.+(Hash21(vec2(i+.5, i+.98))*.9)), t*t*8.-.2, vec4(.05, .05, .45, 1.));\n    \tcol = mix(col, sphere, sphere.a);\n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    uv *= .9;\n    uv.x -= .78;\n    vec4 col = Spheres(uv);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}