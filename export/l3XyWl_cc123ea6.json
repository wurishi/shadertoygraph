{"ver":"0.1","info":{"id":"l3XyWl","date":"1726762179","viewed":15,"name":"a rotating square ","username":"brandonczt","description":"hw","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 col = vec3(1.);\n    \n    float angle = iTime;\n    \n    mat2 rotate = mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n                \n    uv *= rotate;\n    \n    if(abs(uv.x + 0.5 * sin(iTime))<0.15 && abs(uv.y + 0.5 * cos(iTime))<0.15)\n        col = 0.5 + sin(iTime + uv.xyx + vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}