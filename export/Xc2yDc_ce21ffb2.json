{"ver":"0.1","info":{"id":"Xc2yDc","date":"1723081101","viewed":61,"name":"漩2","username":"571574085","description":"漩2","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 获取屏幕坐标并归一化\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // 计算时间因素，使得火焰旋转\n    float time = iTime * 0.5;\n    float angle = atan(uv.y, uv.x) + time;\n    float radius = length(uv);\n\n    // 计算火焰的波动\n    float flame = sin(angle * 10.0 + radius * 30.0 - time * 5.0) * 0.5 + 0.5;\n    flame = pow(flame, 3.0);  // 增强火焰的尖锐度\n\n    // 计算拖尾效果\n    float tail = exp(-radius * 5.0);\n\n    // 结合火焰和拖尾效果\n    float intensity = flame * tail;\n\n    // 生成火焰颜色，从橙色到黄色渐变\n    vec3 color = mix(vec3(1.0, 0.5, 0.0), vec3(1.0, 1.0, 0.0), intensity);\n\n    // 输出颜色\n    fragColor = vec4(color * intensity, 1.0);\n}","name":"Image","description":"","type":"image"}]}