{"ver":"0.1","info":{"id":"dl3yzX","date":"1699470968","viewed":64,"name":"4dsXzM","username":"jcfuuc","description":"számok megváltoztatva","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["copy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Human fovea detector by nimitz (twitter: @stormoid)\n\n/*\nI was playing with procedural texture generation when I came across this.\nYou might need to tweak the scale value depending on your monitor's ppi.\n\nDifferent shapes might provide better results, haven't tried many.\n*/\n\n//might need to tweak this value depending on monitor ppi (tuned for ~100 ppi)\n#define scale 290.\n\n#define thickness 0.0960\n#define lengt 0.0013\n#define layers 15.\n#define time iTime*1.\n\nvec2 hash12(float p)\n{\n\treturn fract(vec2(sin(p * 591.32), cos(p * 391.32)));\n}\n\nfloat hash21(in vec2 n) \n{ \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec2 hash22(in vec2 p)\n{\n    p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\treturn fract(sin(p)*43758.5453);\n}\n\nmat2 makem2(in float theta)\n{\n\tfloat c = cos(theta);\n\tfloat s = sin(theta);\n\treturn mat2(c,-s,s,c);\n}\n\nfloat field1(in vec2 p)\n{\n\tvec2 n = floor(p)-0.5;\n    vec2 f = fract(p)-0.5;\n    vec2 o = hash22(n)*.35;\n\tvec2 r = - f - o;\n\tr *= makem2(time+hash21(n)*3.14);\n\t\n\tfloat d =  1.0-smoothstep(thickness,thickness+0.09,abs(r.x));\n\td *= 1.-smoothstep(lengt,lengt+0.02,abs(r.y));\n\t\n\tfloat d2 =  1.0-smoothstep(thickness,thickness+0.09,abs(r.y));\n\td2 *= 1.-smoothstep(lengt,lengt+0.02,abs(r.x));\n\t\n    return max(d,d2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy-0.5;\n\tp.x *= iResolution.x/iResolution.y;\n\t\n\tfloat mul = (iResolution.x+iResolution.y)/scale;\n\t\n\tvec3 col = vec3(0);\n\tfor (float i=0.;i <layers;i++)\n\t{\n\t\tvec2 ds = hash12(i*2.5)*.11;\n\t\tcol = max(col,field1((p+ds)*mul)*(sin(ds.x*5100. + vec3(2.,5.,3.))*.7+.5));\n\t}\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}