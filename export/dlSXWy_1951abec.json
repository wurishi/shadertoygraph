{"ver":"0.1","info":{"id":"dlSXWy","date":"1676505331","viewed":85,"name":"Glazed Cow","username":"ariannarudawski","description":"somebody better help this cow sober up","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","rgb","noise3d","cowprint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 3D Noise - from https://www.shadertoy.com/view/XsGyzR\n\nvec3 random3(vec3 st)\n{\n    st = vec3( dot(st,vec3(127.1,311.7,211.2)),\n            \tdot(st,vec3(269.5,183.3, 157.1)), dot(st,vec3(269.5,183.3, 17.1))  );\n   \treturn -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\nfloat noise(vec3 st) \n{\n\tvec3 i = floor(st) ;\n  \tvec3 f = fract(st);\n\t\t\n    vec3 u = smoothstep(0.,1.,f);\n    \n\tfloat valueNowxy01 =mix( mix( dot( random3(i + vec3(0.0,0.0,0.0) ), f - vec3(0.0,0.0,0.0) ),\n                    \t\t \t dot( random3(i + vec3(1.0,0.0,0.0) ), f - vec3(1.0,0.0,0.0) ), u.x),\n                \t\tmix( dot( random3(i + vec3(0.0,1.0,0.0) ), f - vec3(0.0,1.0,0.0) ),\n                     \t\t \t dot( random3(i + vec3(1.0,1.0,0.0) ), f - vec3(1.0,1.0,0.0) ), u.x), u.y);\n\tfloat valueNowxy02 =mix( mix( dot( random3(i + vec3(0.0,0.0,1.0) ), f - vec3(0.0,0.0,1.0) ),\n                    \t\t \t dot( random3(i + vec3(1.0,0.0,1.0) ), f - vec3(1.0,0.0,1.0) ), u.x),\n                \t\tmix( dot( random3(i + vec3(0.0,1.0,1.0) ), f - vec3(0.0,1.0,1.0) ),\n                     \t\t \t dot( random3(i + vec3(1.0,1.0,1.0) ), f - vec3(1.0,1.0,1.0) ), u.x), u.y);\n\n    return abs(mix(valueNowxy01, valueNowxy02, u.z));\n\n}\n\n// Hazy Cow Print\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -iResolution.xy) / iResolution.y;\n   \n    vec3 rgb;\n    \n    float tCow = iTime * 0.1;\n    float tRBG = iTime * 0.1;\n    \n    for (int i = 0; i < 3; ++i)\n    {\n        // get a pos to be used for both noise vals\n        vec2 nPos = uv * 2.5;\n        \n        // get indexOffset \n        float iOffset = float(i) * 0.15 * (sin(iTime) + 5.0) * 0.25;\n        \n        // get noiseVal for rbg offset\n        float nOffsetRGB = noise(vec3(nPos.x, nPos.y, tRBG));\n        float offsetRGB = sin(100.0 * nOffsetRGB) * iOffset;\n        \n        // get noiseVal for main cow print, and use the RGB offset\n        rgb[i] = noise(vec3(nPos.x, nPos.y, tCow + offsetRGB)); \n    \n        // make sharp edges from the blur\n        rgb[i] = step(0.135,rgb[i]);\n    }\n\n    // Output to screen\n    fragColor = vec4(rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}