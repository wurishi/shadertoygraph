{"ver":"0.1","info":{"id":"3ssyWB","date":"1586342453","viewed":500,"name":"good-afternoon","username":"louis_C","description":"A little ambiant sound for the after noon, I d'ont know if it's possible to go over the 180s or to loop.","likes":3,"published":1,"flags":10,"usePreview":0,"tags":["soundformantafternoon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Chroma Key from Zavie https://www.shadertoy.com/view/4dX3WN\n\nfloat rd(float t) {return fract(sin(dot(floor(t),48.265))*8745.112);}\nfloat no (float t) {return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nvec3 rgb2hsv(vec3 rgb)\n{\n\tfloat Cmax = max(rgb.r, max(rgb.g, rgb.b));\n\tfloat Cmin = min(rgb.r, min(rgb.g, rgb.b));\n    float delta = Cmax - Cmin;\n\n\tvec3 hsv = vec3(0., 0., Cmax);\n\t\n\tif (Cmax > Cmin)\n\t{\n\t\thsv.y = delta / Cmax;\n\n\t\tif (rgb.r == Cmax)\n\t\t\thsv.x = (rgb.g - rgb.b) / delta;\n\t\telse\n\t\t{\n\t\t\tif (rgb.g == Cmax)\n\t\t\t\thsv.x = 2. + (rgb.b - rgb.r) / delta;\n\t\t\telse\n\t\t\t\thsv.x = 4. + (rgb.r - rgb.g) / delta;\n\t\t}\n\t\thsv.x = fract(hsv.x / 6.);\n\t}\n\treturn hsv;\n}\nfloat chromaKey(vec3 color)\n{\n\tvec3 backgroundColor = vec3(0.157, 0.576, 0.129);\n\tvec3 weights = vec3(4., 1., 2.);\n\n\tvec3 hsv = rgb2hsv(color);\n\tvec3 target = rgb2hsv(backgroundColor);\n\tfloat dist = length(weights * (target - hsv));\n\treturn smoothstep(0.2,1.4,dist);\n}\n\nvec3 hue (float t ) {return 3.*abs(1.-2.*fract(t+vec3(0.,-1./3.,1./3.)))-1.;}\n\nfloat ov(float base, float blend) {\n    return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));}\nvec3 ov3(vec3 a, vec3 b){\n    return vec3(ov(a.x,b.x),ov(a.y,b.y),ov(a.z,b.z));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat time = iTime;\n    vec3 jj = texture(iChannel0,uv+((uv-0.5)*mix(-0.8,0.1,no(time*0.3)))+\n                      0.01*vec2(no(time*2.+23.236)-0.5,no(time*2.+485.236)-0.5)).xyz;\n    vec3 world = texture(iChannel1,uv).xyz;\n    float mask = chromaKey(jj);\n    vec3 jjColor = mix(hue(jj.x+time*0.5),jj,0.8);\n    vec3 worldColor = mix(hue(world.x*0.2+time*0.2),jj,0.5);\n    vec3 worldAmb = worldColor*mix(0.5,1.,uv.y)+uv.y;\n    vec3 res = mix(worldAmb,jjColor,mask);\n    fragColor = vec4(smoothstep(vec3(0.2,0.5,0.),vec3(1.,1.,0.7),res),1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/*\nPLaying with the Formant Synthesizer of Wouter van Nifterick https://www.shadertoy.com/view/XdXXWl\nthe reverb of TekF https://www.shadertoy.com/view/XldcRr\n*/\n\n#define PI 3.1415926535897932384626433832795\n#define PI2 PI*2.0\n\nfloat formant(float pitch, float freq, float time)\n{   \n    \n    time += 0.07;\n    time = mod( time, PI / pitch);    \n    return  sin((2.0*PI)*freq*time)*exp(-30.0*time);\n\n}\n\n\nfloat s(float pitch, vec4 f, float time)\n{\n  return (\n    formant(pitch,f.x, time)*1.00+\n    formant(pitch,f.y, time)*0.96+\n    formant(pitch,f.z, time)*0.90+\n    formant(pitch,f.w, time)*0.85\n  ) * .25;\n}\n\nstruct Frame\n{\n  float time;\n  vec4 formants;\n};\n  \nfloat tau = PI*2.0;\nfloat rd(float t) {return fract(sin(dot(floor(t),48.265))*8745.112);}\nfloat no (float t) {return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat it(float t) {float r=0.;float amp = 0.5;\n                   for(int i=0 ; i< 5; i ++ ){\n                       r +=no(t/amp)*amp;\n                       amp*=0.5;}\n                   return r;}\nvec2 son1 (float time){\n float v = 0., f;\n         float tt = no(time*0.2)*5.+time*0.1;\n    float ba = 0.;\n    int nbr = int(rd(tt*3.+15.236)*3.+1.);\n    for (int i =0 ;i< nbr; i++){\n     float nn = floor(rd(tt*3.+float(i)*451.236)*9.+1.);  \n     ba += sin(tau*40.*time*nn);\n     }  \n    ba /=float(nbr);\n    \n    float N = 9.;\n    float ha = rd(time)*10.+2.;\n    float df = 0.05+rd(time*0.2)*0.1;\n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= ha; j++)\n            f = ( (0.1+rd (time*0.4))*100. + i*df ) * j,\n\t\t    v += sin(tau*f*time); \n    float r1 = (v / (N*ha))*mix(0.4,0.6,it(time*100.))*0.45;\n    float t1 = time*1.5;\n    float b1 = mix(smoothstep(0.,1.,fract(t1*2.)),smoothstep(1.,0.,fract(t1*2.)),step(0.5,fract(t1)))\n     *step(0.5,fract(t1*0.5));\n    float b2 = sin(b1*50.)*0.4;\n    r1+=b2;\n\tr1 += ba*0.025;\n    return vec2(cos(time)*r1,sin(time)*r1);}\nvec2 mainSound( in int samp,float time)\n{\n\t\n    const float invRate = 1./64.;\n    const float dur = 2.;\n    \n    vec2 reverb = vec2(0);\n    float sum = 0.;\n    for ( float t = 0.; t < dur; t += invRate )\n    {\n      \n        float rand = fract(120.*sin(t*1000.));\n        float t2 = t + invRate*rand*5.;\n        float amp = exp2(-t2*1.);\n        reverb += son1( time - t2 ) * amp;\n        sum += amp;\n    }\n    reverb /= sum;\n    \n    reverb *= 10.; \n    \n    vec2 ff =  reverb;\n    float sp = 4.; // speed\n    float t = mod(time,sp);\n    \n    float pitch = mix(300.,500.,sin(time*0.5)*0.5+0.5);\n    \n   \n    float amp = 0.0;\n    #define fmt(tm,v) if(t>tm*sp)samp=s(pitch,v,t);\n   \n    Frame frames[146];\n    frames[ 0] = Frame(0.232, vec4(1157.0,1419.0,3434.0,4220.0));\n    frames[ 1] = Frame(0.238, vec4(1289.0,1546.0,3207.0,4216.0));\n    frames[ 2] = Frame(0.244, vec4(1274.0,1562.0,2927.0,4184.0));\n    frames[ 3] = Frame(0.251, vec4(1388.0,1507.0,3248.0,4184.0));\n    frames[ 4] = Frame(0.257, vec4(290.0,1466.0,2504.0,3864.0));\n    frames[ 5] = Frame(0.263, vec4(314.0,1422.0,2487.0,3675.0));\n    frames[ 6] = Frame(0.269, vec4(331.0,1414.0,2496.0,3660.0));\n    frames[ 7] = Frame(0.276, vec4(341.0,1388.0,2546.0,3687.0));\n    frames[ 8] = Frame(0.282, vec4(365.0,1360.0,2565.0,3689.0));\n    frames[ 9] = Frame(0.288, vec4(384.0,1322.0,2578.0,3713.0));\n    frames[10] = Frame(0.294, vec4(400.0,1257.0,2592.0,3733.0));\n    frames[11] = Frame(0.301, vec4(415.0,1222.0,2607.0,3743.0));\n    frames[12] = Frame(0.307, vec4(424.0,1224.0,2613.0,3750.0));\n    frames[13] = Frame(0.313, vec4(433.0,1252.0,2616.0,3741.0));\n    frames[14] = Frame(0.319, vec4(443.0,1289.0,2609.0,3741.0));\n    frames[15] = Frame(0.326, vec4(445.0,1364.0,2602.0,3729.0));\n    frames[16] = Frame(0.332, vec4(442.0,1426.0,2589.0,3724.0));\n    frames[17] = Frame(0.338, vec4(434.0,1501.0,2592.0,3716.0));\n    frames[18] = Frame(0.344, vec4(422.0,1597.0,2600.0,3709.0));\n    frames[19] = Frame(0.351, vec4(408.0,1658.0,2612.0,3706.0));\n    frames[20] = Frame(0.357, vec4(395.0,1715.0,2632.0,3671.0));\n    frames[21] = Frame(0.363, vec4(378.0,1760.0,2660.0,3620.0));\n    frames[22] = Frame(0.369, vec4(364.0,1780.0,2685.0,3518.0));\n    frames[23] = Frame(0.376, vec4(351.0,1754.0,2699.0,3588.0));\n    frames[24] = Frame(0.382, vec4(307.0,1776.0,2706.0,3515.0));\n    frames[25] = Frame(0.388, vec4(306.0,1749.0,2698.0,3661.0));\n    frames[26] = Frame(0.394, vec4(319.0,1851.0,2786.0,3617.0));\n frames[ 27] = Frame(0.401138, vec4(   317.0,1895.0,2774.0,3630.0));\n frames[ 28] = Frame(0.407, vec4(   355.0,1904.0,2757.0,3672.0));\n frames[ 29] = Frame(0.413, vec4(   375.0,1914.0,2756.0,   3723.0));\n frames[ 30] = Frame(0.419, vec4(   381.0,1915.0,2759.0,   3731.0));\n frames[ 31] = Frame(0.426, vec4(   396.0,1931.0,2763.0,   3749.0));\n frames[ 32] = Frame(0.432, vec4(   413.0,1955.0,2783.0,   3761.0));\n frames[ 33] = Frame(0.438, vec4(   445.0,1975.0,2796.0,   3771.0));\n frames[ 34] = Frame(0.444, vec4(   493.0,1985.0,2771.0,   3719.0));\n frames[ 35] = Frame(0.451, vec4(   550.0,1973.0,2782.0,   3715.0));\n frames[ 36] = Frame(0.457, vec4(   570.0,1951.0,2796.0,   3694.0));\n frames[ 37] = Frame(0.463, vec4(   576.0,1917.0,2819.0,   3716.0));\n frames[ 38] = Frame(0.469, vec4(   591.0,1905.0,820.0,   3701.0));\n frames[ 39] = Frame(0.476, vec4(   601.0,1903.0,2825.0,   3674.0));\n frames[ 40] = Frame(0.482, vec4(   598.0,1905.0,2848.0,   3675.0));\n frames[ 41] = Frame(0.488, vec4(   592.0,1907.0,2879.0,   3683.0));\n frames[ 42] = Frame(0.494, vec4(   586.0,1881.0,2863.0,   3670.0));\n frames[ 43] = Frame(0.501, vec4(   599.0,1863.0,2881.0,   3655.0));\n frames[ 44] = Frame(0.507, vec4(   620.0,1849.0,2895.0,   3644.0));\n frames[ 45] = Frame(0.513, vec4(   641.0,1829.0,2911.0,   3626.0));\n frames[ 46] = Frame(0.519, vec4(   672.7,1818.0,2936.0,   3611.0));\n frames[ 47] = Frame(0.526, vec4(   691.0,1823.0,2945.0,   3622.0));\n frames[ 48] = Frame(0.532, vec4(   688.0,1816.0,2936.0,   3625.0));\n frames[ 49] = Frame(0.538, vec4(   679.0,1804.0,2916.0,   3620.0));\n frames[ 50] = Frame(0.544, vec4(   669.0,1786.0,2870.0,   3620.0));\n frames[ 51] = Frame(0.551, vec4(   669.0,1774.0,2840.0,   3618.0));\n frames[ 52] = Frame(0.557, vec4(   670.0,1749.0,2819.0,   3623.0));\n frames[ 53] = Frame(0.563, vec4(   661.0,1705.0,2778.0,   3623.0));\n frames[ 54] = Frame(0.569, vec4(   644.0,1639.0,2723.0,   3614.0));\n frames[ 55] = Frame(0.576, vec4(   615.0,1499.0,2656.0,   3609.0));\n frames[ 56] = Frame(0.582, vec4(   539.0,1401.0,2583.0,   3577.0));\n frames[ 57] = Frame(0.588, vec4(   494.0,1502.0,2614.0,   3644.0));\n frames[ 58] = Frame(0.594, vec4(   543.0,1820.0,2708.0,   3711.0));\n frames[ 59] = Frame(0.601, vec4(   444.0,1519.0,2677.0,   3707.0));\n frames[ 60] = Frame(0.607, vec4(   386.0,1700.0,2817.0,   3743.0));\n frames[ 61] = Frame(0.613, vec4(   493.0,2070.0,2595.0,   3713.0));\n frames[ 62] = Frame(0.619, vec4(   557.0,1897.0,2629.0,   3809.0));\n frames[ 63] = Frame(0.626, vec4(   592.0,1982.0,2794.0,   3980.0));\n frames[ 64] = Frame(0.632, vec4(   627.0,1893.0,   2903.0,   3801.0));\n frames[ 65] = Frame(0.638, vec4(   676.0,1773.0,   2707.0,   3740.0));\n frames[ 66] = Frame(0.644, vec4(   602.0,1647.0,   2686.0,   3726.0));\n frames[ 67] = Frame(0.651, vec4(   560.0,1403.0,   2621.0,   3579.0));\n frames[ 68] = Frame(0.657, vec4(   569.0,1063.0,   2560.0,   3722.0));\n frames[ 69] = Frame(0.663, vec4(   598.0,2589.0,   3671.0,   3722.0));\n frames[ 70] = Frame(0.669, vec4(   494.0,1816.0,   2212.0,   3474.0));\n frames[ 71] = Frame(0.676, vec4(   967.0,1930.0,   2636.0,   3392.0));\n frames[ 72] = Frame(0.682, vec4(   972.0,1940.0,   2736.0,   3831.0));\n frames[ 73] = Frame(0.688, vec4(   962.0,1977.0,   2766.0,   4063.0));\n frames[ 74] = Frame(0.694, vec4(   1169.0,2056.0,   2846.0,   4150.0));\n frames[ 75] = Frame(0.701, vec4(   1179.0,1993.0,   2883.0,   4307.0));\n frames[ 76] = Frame(0.707, vec4(   1822.0,2294.0,   3090.0,   4395.0));\n frames[ 77] = Frame(0.713, vec4(   1890.0,2905.0,   4139.0,   4395.0));\n frames[ 78] = Frame(0.719, vec4(   296.0,1865.0,   2248.0,  3462.0));\n frames[ 79] = Frame(0.726, vec4(   323.0,1860.0,   2176.0,   3324.0));\n frames[ 80] = Frame(0.732, vec4(   332.0,1859.0,   2120.0,   3341.0));\n frames[ 81] = Frame(0.738, vec4(   331.0,1883.0,   2119.0,   3343.0));\n frames[ 82] = Frame(0.744, vec4(   331.0,1902.0,   2213.0,   3327.0));\n frames[ 83] = Frame(0.751, vec4(   333.0,1911.0,   2268.0,   3330.0));\n frames[ 84] = Frame(0.757, vec4(   338.0,1911.0,   2251.0,   3336.0));\n frames[ 85] = Frame(0.763, vec4(   366.0,1958.0,   2297.0,   3368.0));\n frames[ 86] = Frame(0.769, vec4(   379.0,1973.0,   2412.0,   3385.0));\n frames[ 87] = Frame(0.776, vec4(   390.0,1971.0,   2481.0,   3382.0));\n frames[ 88] = Frame(0.782, vec4(   383.0,1973.0,   2545.0,   3388.0));\n frames[ 89] = Frame(0.788, vec4(   383.0,1970.0,   2531.0,   3399.0));\n frames[ 90] = Frame(0.794, vec4(   392.0,1960.0,   2481.0,   3400.0));\n frames[ 91] = Frame(0.801, vec4(   385.0,1959.0,   2503.0,   3546.0));\n frames[ 92] = Frame(0.807, vec4(   498.0,1980.0,   2474.0,   3935.0));\n frames[ 93] = Frame(0.813, vec4(   529.0,2027.0,   2437.0,   4112.0));\n frames[ 94] = Frame(0.819, vec4(   646.0,2439.0,   3830.0,   4112.0));\n frames[ 95] = Frame(0.826, vec4(   319.0,1036.0,   2457.0,   3650.0));\n frames[ 96] = Frame(0.832, vec4(   330.0,1103.0,   2444.0,   3668.0));\n frames[ 97] = Frame(0.838, vec4(   334.0,1255.0,   2462.0,   3664.0));\n frames[ 98] = Frame(0.844, vec4(   338.0,1229.0,   2460.0,   3672.0));\n frames[ 99] = Frame(0.851, vec4(   349.0,892.0,   2492.0,   3419.0));\n frames[ 100] = Frame(0.857, vec4(   537.0,2514.0,   3288.0,   4694.0));\n frames[ 101] = Frame(0.863, vec4(   604.0,2318.0,   2511.0,   4162.0));\n frames[ 102] = Frame(0.869, vec4(   617.0,2028.0,   2529.0,   3930.0));\n frames[ 103] = Frame(0.876, vec4(   560.0,1995.0,   2536.0,   3914.0));\n frames[ 104] = Frame(0.882, vec4(   479.0,2074.0,   2504.0,   4128.0));\n frames[ 105] = Frame(0.888, vec4(   414.0,1970.0,   2534.0,   4145.0));\n frames[ 106] = Frame(0.894, vec4(   307.0,2039.0,   2663.0,   3582.0));\n frames[ 107] = Frame(0.901, vec4(   327.0,2048.0,   2707.0,   3598.0));\n frames[ 108] = Frame(0.907, vec4(   357.0,2016.0,   2684.0,   3620.0));\n frames[ 109] = Frame(0.913, vec4(   371.0,1999.0,   2684.0,   3524.0));\n frames[ 110] = Frame(0.919, vec4(   398.0,1968.0,   2626.0,   3460.0));\n frames[ 111] = Frame(0.926, vec4(   404.0,1927.0,   2569.0,   3432.0));\n frames[ 112] = Frame(0.932, vec4(   400.0,1884.0,   2553.0,   3408.0));\n frames[ 113] = Frame(0.938, vec4(   380.0,1806.0,   2550.0,   3419.0));\n frames[ 114] = Frame(0.944, vec4(   381.0,1765.0,   2570.0,   3547.0));\n frames[ 115] = Frame(0.951, vec4(   388.0,1684.0,   2582.0,   3634.0));\n frames[ 116] = Frame(0.957, vec4(   402.0,1606.0,   2588.0,   3672.0));\n frames[ 117] = Frame(0.963, vec4(   411.0,1541.0,   2621.0,   3671.0));\n frames[ 118] = Frame(0.969, vec4(   427.0,1417.0,   2663.0,   3681.0));\n frames[ 119] = Frame(0.976, vec4(   451.0,1309.0,   2695.0,   3684.0));\n frames[ 120] = Frame(0.982, vec4(   460.0,1257.0,   2715.0,   3682.0));\n frames[ 121] = Frame(0.988, vec4(   445.0,1208.0,   2708.0,   3671.0));\n frames[ 122] = Frame(0.994, vec4(   449.0,1111.0,   2509.0,   3631.0));\n frames[ 123] = Frame(1.001, vec4(   424.0,1076.0,   2434.0,   3585.0));\n frames[ 124] = Frame(1.007, vec4(   390.0,1058.0,   2412.0,   3555.0));\n frames[ 125] = Frame(1.013, vec4(   406.0,1005.0,   2416.0,   3567.0));\n frames[ 126] = Frame(1.019, vec4(   412.0,994.0,   2617.0,   3623.0));\n frames[ 127] = Frame(1.026, vec4(   416.0,942.0,   2474.0,   3606.0));\n frames[ 128] = Frame(1.032, vec4(   400.0,920.0,   2292.0,   3593.0));\n frames[ 129] = Frame(1.038, vec4(   427.0,911.0,   2189.0,   3572.0));\n frames[ 130] = Frame(1.044, vec4(   440.0,868.0,   2085.0,   3552.0));\n frames[ 131] = Frame(1.051, vec4(   69.0,801.0,   1956.0,   3532.0));\n frames[ 132] = Frame(1.057, vec4(   792.0,1698.0,   3539.0,   3532.0));\n frames[ 133] = Frame(1.063, vec4(   556.0,864.0,   2293.0,   3465.0));\n frames[ 134] = Frame(1.069, vec4(   504.0,980.0,   2467.0,   3367.0));\n frames[ 135] = Frame(1.076, vec4(   520.0,1008.0,   2466.0,   3297.0));\n frames[ 136] = Frame(1.082, vec4(   528.0,1038.0,   2515.0,   3238.0));\n frames[ 137] = Frame(1.088, vec4(   543.0,1146.0,   2922.0,   3179.0));\n frames[ 138] = Frame(1.094, vec4(   570.0,1270.0,   2889.0,   4426.0));\n frames[ 139] = Frame(1.101, vec4(   633.0,1441.0,   2782.0,   4122.0));\n frames[ 140] = Frame(1.107, vec4(   580.0,1376.0,   2843.0,   4151.0));\n frames[ 141] = Frame(1.113, vec4(   504.0,1403.0,   2900.0,   4177.0));\n frames[ 142] = Frame(1.119, vec4(   562.0,1439.0,   2882.0,   4169.0));\n frames[ 143] = Frame(1.126, vec4(   671.0,1368.0,   2640.0,   4215.0));\n frames[ 144] = Frame(1.132, vec4(   722.0,1511.0,   2594.0,   4253.0));\n frames[ 145] = Frame(1.138, vec4(   652.0,1630.0,   2569.0,   4212.0));    \n    float slide=.0;\n    \n    Frame v,w;\n    vec4 n = frames[0].formants;\n    vec4 k;\n    for(int i=1;i<145;i++)\n    {\n        float nt = frames[i+1].time;\n        float pt = frames[i-1].time;\n        if(t>frames[i].time*sp)\n        {\n\n            k = frames[i].formants;\n            k += n*slide;\n            k /= slide+1.0;           \n            amp=s(pitch,k,t);\n            n = k;\n\n        }\n    }\n\n    #define a(tm,amp) if(t>tm*sp) intensity=amp;\n    // adjust overall intensity curve\n    float intensity; \n    a(0.236,0.44); \n    a(0.246,0.53); \n    a(0.257,0.61); \n    a(0.268,0.65);\n    a(0.278,0.68); \n    a(0.289,0.7); \n    a(0.300,0.71);\n    a(0.310,0.7); \n    a(0.321,0.69);  \n    a(0.364,0.69);\n    a(0.374,0.67); \n    a(0.385,0.63); \n    a(0.3962,0.63);\n a(0.406,0.66);\n a(0.417,0.68);\n a(0.428,0.68);\n a(0.438,0.68);\n a(0.449,0.69);\n a(0.460,0.69);\n a(0.470,0.69);\n a(0.481,0.69);\n a(0.492,0.68);\n a(0.502,0.68);\n a(0.513,0.68);\n a(0.524,0.67);\n a(0.534,0.67);\n a(0.545,0.67);\n a(0.556,0.67);\n a(0.566,0.66);\n a(0.577,0.65);\n a(0.588,0.62);\n a(0.598,0.57);\n a(0.609,0.52);\n a(0.620,0.48);\n a(0.630,0.44);\n a(0.641,0.41);\n a(0.652,0.38);\n a(0.662,0.37);\n a(0.673,0.42);\n a(0.684,0.46);\n a(0.694,0.49);\n a(0.705,0.54);\n a(0.716,0.60);\n a(0.726,0.63);\n a(0.737,0.65);\n a(0.748,0.66);\n a(0.758,0.65);\n a(0.769,0.63);\n a(0.780,0.63);\n a(0.790,0.62);\n a(0.801,0.62);\n a(0.812,0.63);\n a(0.822,0.63);\n a(0.833,0.63);\n a(0.844,0.63);\n a(0.854,0.63);\n a(0.865,0.63);\n a(0.876,0.63);\n a(0.886,0.63);\n a(0.897,0.64);\n a(0.908,0.65);\n a(0.918,0.65);\n a(0.929,0.66);\n a(0.940,0.66);\n a(0.950,0.66);\n a(0.961,0.66);\n a(0.972,0.66);\n a(0.982,0.65);\n a(0.993,0.64);\n a(1.004,0.64);\n a(1.014,0.65);\n a(1.025,0.66);\n a(1.036,0.66);\n a(1.046,0.65);\n a(1.057,0.63);\n a(1.068,0.62);\n a(1.078,0.62);\n a(1.089,0.62);\n a(1.100,0.62);\n a(1.110,0.63);\n a(1.121,0.63);\n a(1.132,0.63);\n    \n    \n    amp *=intensity;\n     \n    vec2 vox = amp*vec2(sin(time),cos(time))*mix(0.075,0.,sin(time*0.5)*0.5+0.5)*step(0.5,rd(time/4.));\n    return ff+vox;  \n}","name":"Sound","description":"","type":"sound"}]}