{"ver":"0.1","info":{"id":"4syfRV","date":"1529483124","viewed":625,"name":"Folie Numerique","username":"Flopine","description":"Experimentation done at La Villette in Paris.","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","glow","cookiecollective"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, lsdlive, lamogui, XT95 and Coyhot for teaching me <3 \n// Cookie collective rulz\n\n\n#define PI 3.141592\n#define ITER 64.\n#define MAT_TUN 0.\n#define MAT_SPHE 1.\n\nvec2 moda(vec2 p, float per)\n{\n    float a = atan(p.y,p.x);\n    float l = length(p);\n    a = mod(a-per/2.,per)-per/2.;\n    return vec2(cos(a),sin(a))*l;\n}\n\n// iq's palette https://iquilezles.org/articles/palettes\nvec3 palette (float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{\n    return a+b*cos(2.*PI*(c*t+d));\n}\n\nmat2 rot(float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nvec2 mo (vec2 p, vec2 d)\n{\n    p.x = abs(p.x)-d.x;\n    p.y = abs(p.y)-d.y;\n    if (p.y>p.x) p.xy = p.yx;\n    return p;\n}\n\nfloat stmin(float a, float b, float k ,float n)\n{\n    float st = k/n;\n    float u = b-k;\n    return min(min(a,b), 0.5 * (u+a+abs(mod(u-a+st, 2.*st)-st)));\n}\n\nfloat cyl(vec2 p, float r)\n{return length(p)-r;}\n\nfloat box(vec3 p, vec3 c)\n{\n    p.xz *= rot(iTime);\n    return length(max(abs(p)-c,0.));\n}\n\nfloat sphe(vec3 p, float r)\n{return length(p)-r;}\n\nfloat prim1(vec3 p)\n{\n    float per = 5.;\n    p.xy = mo(p.xy, vec2(10.));\n   p.xz = moda(p.xz, 2.*PI/5.);\n    p.x -= 2.;\n    p.xz *= rot(p.y*0.8);\n    return stmin(cyl(p.xz, 0.3), box(vec3(p.x,mod(p.y-per/2.,per)-per/2., p.z),vec3(1.)), 0.8, 5.);\n}\n\nvec2 mat_min(vec2 a, vec2 b)\n{\n    if (a.x < b.x) return a;\n    else return b;\n}\n\nvec2 tunnel (vec3 p)\n{\n        p.xy *= rot(p.z*0.2+iTime*0.5);\n    float s = prim1(p);\n    for (int i = 0; i<8; i++)\n    {\n        p.xy *= rot(PI/4.);\n        p.z -= 8.;\n        s = min(s, prim1(p));\n    }\n    return vec2(s, MAT_TUN);\n}\n\nvec2 prim2 (vec3 p)\n{\n    p.z += cos(p.x + iTime);\n    p.x += sin(p.y+iTime*2.);\n    p.y -= sin(p.z*2.+iTime*3.);\n    return vec2(sphe(p,5.), MAT_SPHE);\n}\n\nfloat g = 0.;\n\nvec2 SDF(vec3 p)\n{\n    vec2 d = mat_min(tunnel(p), prim2(p));\n     // glow from lsdlive, originally from balkhan : https://www.shadertoy.com/view/4t2yW1\n    g += 0.01/(0.01+d.x*d.x);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(0.001,0.001,-20.); vec3 p = ro;\n    vec3 rd = normalize(vec3(uv,0.7+length(uv)));\n    \n    float shad = 0.;\n    vec3 c = vec3(0.);\n    for (float i = 0.; i<ITER; i++)\n    {\n\t\tvec2 d = SDF(p);\n        if (d.x<0.001)\n        {\n            shad = i/ITER;\n            if (d.y == MAT_SPHE) c = vec3(1.-shad)*vec3(1.,0.,.8);\n            if (d.y == MAT_TUN) c = vec3(1.-shad)*vec3(0.,0.1,1.5);\n            break;\n        }\n        p+=d.x*rd*0.5;\n    }\n    \n    float t = length(ro-p);\n    vec3 pal = palette (length(uv),\n                       vec3(0.8,0.5,0.),\n                       vec3(0.5),\n                       vec3 (.2),\n                       vec3(0.,0.,0.5));\n    \n    c = mix(c, pal, 1.-exp(-0.002*t*t))+g*(0.02+p.z*0.01);\n\n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}