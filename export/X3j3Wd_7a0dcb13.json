{"ver":"0.1","info":{"id":"X3j3Wd","date":"1709026066","viewed":100,"name":"SDF Demo 2D","username":"rec1dite","description":"Simple demo of SDFs in 2D. Click to interact.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 slerp(vec3 start, vec3 end, float percent)\n{\n     float d = clamp(dot(start, end), -1.0, 1.0);\n\n     float theta = acos(d) * percent;\n     vec3 relVec = normalize((end - start) * d);\n\n     return ((start*cos(theta)) + (relVec * sin(theta)));\n}\n\nfloat sdCircle( vec2 p, float s )\n{\n    return length(p)-s;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat smin(float a, float b, float k) {\n    float h = clamp(0.5 + 0.5 * (b - a) / k, 0., 1.);\n    return mix(b, a, h) - k * h * (1. - h);\n}\n\nconst vec4 RED = vec4(1.0, 0.0, 0.0, 1.0);\nconst vec4 YELLOW_DARK = vec4(1.0, 0.79, 0.22, 1.0);\nconst vec4 YELLOW_LIGHT = vec4(1.0, 0.88, 0.4, 1.0);\nconst vec4 BLUE_DARK = vec4(0.54, 0.79, 1.0, 1.0);\nconst vec4 BLUE_LIGHT = vec4(0.76, 0.89, 1.0, 1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = 0.5*sin(iTime) + 0.5;\n\n    float sdfC = sdCircle(iResolution.xy / 3.0 - fragCoord, 100.0);\n    float sdfB = sdBox(iResolution.xy / 3.0 - fragCoord, vec2(100.0, 100.0));\n    float sdfM = sdCircle(iMouse.xy - fragCoord, 100.0);\n    \n    float frag, fragRes;\n    \n    \n    \n    // Uncomment one of these 4:\n    \n    // frag = min(sdfB, sdfM); // Union\n    // frag = max(sdfB, sdfM); // Intersection\n    // frag = max(sdfB, -sdfM); // Difference\n    // frag = sdfB + sdfM; // Overlay\n    frag = smin(sdfB, sdfM, 200.0); // Smooth Union\n\n    \n    \n    // Uncomment one of these 2:\n    \n    fragRes = round(abs(mod(0.15*frag, 2.0)-1.0)); // Stripes\n    // fragRes = frag/50.0 - 1.0; // Gradient\n\n\n    // Internal colour\n    if (frag < 0.0) {\n        fragColor = mix(BLUE_LIGHT, BLUE_DARK, abs(fragRes));\n    }\n    // External colour\n    else {\n        fragColor = mix(YELLOW_LIGHT, YELLOW_DARK, fragRes);\n    }\n    \n    // Shape outline\n    if (abs(frag)-1.0 < 0.9) {\n        fragColor = RED;\n    }\n}","name":"Image","description":"","type":"image"}]}