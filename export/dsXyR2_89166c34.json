{"ver":"0.1","info":{"id":"dsXyR2","date":"1687033999","viewed":43,"name":"fermat spiral SDF","username":"MonterMan","description":"fermat spiral","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fermat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n#define GOLDEN_ANGLE 2.39996734783236271464\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // theta <- [0, 2*PI]\n    float theta = atan(uv.y, uv.x) + PI;\n    float r = length(uv);\n    \n    // inverse fermat spiral mapping\n    int N = 64;\n    float sqrt_N = sqrt(float(N));\n    float radial_index = floor(r*r*float(N));\n    if (radial_index < float(N))\n    {\n        float dist = 10e31;\n        // NOTE: adjust this based on how many fermat samples you have\n        float neighbor_count = 10.0;\n        for (float i = radial_index-neighbor_count;\n             i <= radial_index+neighbor_count;\n             i += 1.0)\n        {\n            float radius = sqrt(i)/sqrt_N;\n            float angle = i * (GOLDEN_ANGLE + 0.01*iTime);\n            vec2 fermat_point = radius * vec2(cos(angle), sin(angle));\n            dist = min(dist, length(fermat_point - uv));\n        }\n        // Output to screen\n        fragColor = vec4(0.0003/pow(dist,2.0));\n    }\n    else\n    {\n        fragColor = vec4(0.0);\n    }\n}","name":"Image","description":"","type":"image"}]}