{"ver":"0.1","info":{"id":"clB3RG","date":"1673470506","viewed":109,"name":"VortexTestCMC","username":"RedWool","description":"Test Shader for a game effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cmc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool compare2(vec2 uv, float v)\n{\n    return uv.x > v && uv.x < 1.-v && uv.y > v && uv.y < 1.-v;\n}\n\nfloat box (vec2 uv, vec2 c, vec2 s)\n{\n    vec2 d = abs(uv-c);\n    return step(d.x, s.x) * step(d.y, s.y);\n}\n\nvec3 smallImage( vec2 uv, vec2 c, vec2 size)\n{\n    vec2 d = (uv-c-size)/(size*2.);\n    float pct = box(uv, c, size);\n    vec3 col;\n    \n    col = texture(iChannel0, d).xyz;\n    if (!compare2(abs(d),.01))\n        col = texture(iChannel1, d).xyz;\n    //else if (tex == 1)\n    //    col = texture(iChannel2, d).xyz;\n        \n    return pct * col + (1.-pct) * vec3(0); \n}\n\nvec2 rot(vec2 uv, vec2 c, float a)\n{\n    return (c-uv) * mat2(\n    sin(a),cos(a),\n    -cos(a),sin(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-vec2(iResolution.x-iResolution.y,0)*.5)/iResolution.y;\n\n    vec3 col;\n    float low = 100.;\n    // Time varying pixel color\n    for (int i = 0; i < 10; i++)\n    {\n        float s = mod(-10.*acos(cos(.1*iTime))*.2+float(i)*.2,2.);\n        vec2 c = vec2(cos(iTime * 0.6947)*pow(2.-s,1.2)*.15,sin(iTime * 0.6947)*(2.-s)*.15) + .5,\n        p = rot(uv,c,s*.1-1.5707+pow(s*3.,1.4)*cos(float(i)*3.1415));\n        \n        \n        float pct = box(p, vec2(0),vec2(s));\n        \n        if (s < low && pct > 0.)\n        {\n            low = s;\n            col = smallImage(p, vec2(0), vec2(s));\n            continue;\n        }\n        \n        /*s = (pow(s+.6, 1.531)-.4)*clamp(s*3.,0.,1.);\n        pct = box(p, vec2(0), vec2(s));\n        if (s < low && pct > 0.)\n        {\n            //我們我\n            low = s;\n            col = smallImage(p, vec2(0), vec2(s), 1);\n        }*/\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}