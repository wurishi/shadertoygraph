{"ver":"0.1","info":{"id":"cdB3zm","date":"1667448876","viewed":86,"name":"Cool Dots","username":"spadge","description":"trying to understand how to make a circle \n\nused this example https://www.shadertoy.com/view/XsjGDt to understand how one can be made","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// control how big and how many circles here\nfloat circleSize = 6.0;\nint circleAmt = 100;\nfloat scrlSpd = 0.6;\n\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\n\n // takes in uv, which is just fragCoord. \nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\tfloat d = length(pos - uv) - rad;\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(color, 1.0 - t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n\tvec2 center = vec2( 0.,0.);\n\tfloat radius = circleSize;\n\n    // Background layer\n\tvec4 layer1 = vec4(rgb(10.0, 40.0, 10.0), 1.0);\n    vec4 layer2;\n    \n\tfloat iInd = 0.0;\n    float jInd = 0.0;\n    \n    for(int i = 0; i < circleAmt / 2; i++)\n    {\n     iInd += 1.0;\n        for(int j = 0; j < circleAmt; j++)\n        {       \n            jInd += 1.0;\n            center.y = iInd * (radius * 2.1);\n            center.x = jInd * (radius * 2.1);\n            \n            // Circle\n           vec3 col = rgb(255. * cos((iTime * scrlSpd)*( -20.0 + iInd) +  jInd), \n                          255. * sin((iTime * scrlSpd)*( -20.0 + iInd) +  jInd), \n                          255. * cos((iTime * scrlSpd)*( -20.0 + iInd) +  jInd + 2.5));\n\n           layer2 = circle(uv, center, radius , col);\n           layer1 = mix(layer1, layer2, layer2.a);\n        }\n        jInd = 0.0;\n    }\n    \n\n    // Output to screen\n\tfragColor = layer1;\n}","name":"Image","description":"","type":"image"}]}