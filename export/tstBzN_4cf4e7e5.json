{"ver":"0.1","info":{"id":"tstBzN","date":"1617039772","viewed":46,"name":"sphere code ","username":"treize","description":"Tatsujin","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void Ellipse(vec2 UV, float Width, float Height, out float Out)\n{\n    float d = length((UV * 2.0 - 1.0) / vec2(Width, Height));\n    Out += clamp((1.0 - d) / fwidth(d),0.0,1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \t//vec2 uv =  ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n    vec2 uv = fragCoord/iResolution.y+vec2(-0.4,0.0);\n    vec3 body_color=vec3(1.0,1.0,0.0),mouth_color=vec3(1.0,0.6,0.0),col;\n\n    float a,b,c,d;\n    Ellipse(uv,0.6,0.6,a);\n    Ellipse(uv,0.5,0.5,b);\n    Ellipse(uv+vec2(0.14,-.01),0.1,0.1,c);\n    Ellipse(uv+vec2(-0.14,-.01),0.1,0.1,d);\n    vec3 col2;\n    //hair\n    vec2 p0 =  vec2(0.6,0.4);\n    vec2 p1 =  vec2(0.5,0.3);\n    vec2 p2 =  vec2(0.4,0.4);\n    float hair = udBezier( p0, p1, p2, uv ).x;\n   \tcol2 = mix( col, vec3(1.0), 1.0-smoothstep(0., 2.0/iResolution.y*.9,hair));\n    hair=col2.x;  \n    //GammaCorrect(col,col);\n    col=vec3(a)*vec3(0.9,1.0,1.0)+hair;\n    col.gb-=b;\n    col.r-=c+d;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 udBezier(in vec2 p0, in vec2 p1, in vec2 p2, in vec2 pos)\n{    \n\n    vec2 a = p1 - p0;\n    vec2 b = p0 - 2.0*p1 + p2;\n    vec2 c = p0 - pos;\n\n    float kk = 1.0 / dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(c,b)) / 3.0;\n    float kz = kk * dot(c,a);      \n\n    vec2 res;\n\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx - 3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n\n    if(h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h, -h) - q) / 2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        float t = uv.x + uv.y - kx;\n        t = clamp( t, 0.0, 1.0 );\n\n        // 1 root\n        vec2 qos = c + (2.0*a + b*t)*t;\n        res = vec2( length(qos),t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3 t = vec3(m + m, -n - m, n - m) * z - kx;\n        t = clamp( t, 0.0, 1.0 );\n\n\n        vec2 qos = c + (2.0*a + b*t.x)*t.x;\n        float dis = dot(qos,qos);\n        \n        res = vec2(dis,t.x);\n\n        qos = c + (2.0*a + b*t.y)*t.y;\n        dis = dot(qos,qos);\n        if( dis<res.x ) res = vec2(dis,t.y );\n\n        qos = c + (2.0*a + b*t.z)*t.z;\n        dis = dot(qos,qos);\n        if( dis<res.x ) res = vec2(dis,t.z );\n\n        res.x = sqrt( res.x );\n    }\n    \n    return res;\n}","name":"Common","description":"","type":"common"}]}