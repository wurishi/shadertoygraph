{"ver":"0.1","info":{"id":"43sGRj","date":"1710672200","viewed":121,"name":"bug voxel cell 体素方体格子","username":"shadertoyjiang","description":"bug\n\nEither\nu = (v + v - R) / R.x.\nor\nu = (v + v - R) / R.y..\nit's all the same horizontal line\n\nI looked at FabriceNeyret2's work https://www.shadertoy.com/view/X32XWW\nand realized that the line is not divisible by 0 for this reason\n\n\n","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["ge"],"hasliked":0,"parentid":"MXfGR2","parentname":"像素方块行进 单元格子 "},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2024-4-2 改\n\n\nvoid mainImage(out vec4 O, vec2 v)\n{\n        //O = vec4(0);\n        vec2 R = iResolution.xy,             \n             u = (v+v+.1 - R) / R.y;\n             \n        vec3 w = vec3(1,-3,2),        \n             o = w*iTime, \n             r = normalize(vec3(u,1)),\n             p = floor(o)+.5,\n             s = sign(r),\n             d = (p + .5 * s - o) / r,\n             q,\n             m,g;\n        \n        float t,i,h;\n\n        for(;i++<99. && dot(sin(.4* p ),cos(.4* p .yzx))>-1.3;)//p += m * s)\n        //{\n                d += m * s/r, \n                m =  step(d,d.yzx) * step(d,d.zxy),\n                p += m * s; \n        //}\n        \n        //O += dot(m,w);return;\n        \n        t = length(d*m);\n        \n        q = abs(o+r*t-p)-.5;   ;\n        h=length(q-q*step(q,q.yzx) * step(q,q.zxy));     \n        //O = (step(.6, h*10.) + vec4(1,.3,0,1)*dot(m*s, w)) * exp(-.04 * t);\n        O = vec4(1,.3,0,1) * (step(.6, h*10.) + dot(m*s, w)) * exp(-.04 * t);\n}        \n        \n \n \n \n \n\n\n\n/*\n\n// 454 chars\n// 2024-2-12  537703568377\n// 三维格子行进，边框\n// learn from iq: Voxel Edges\n// https://www.shadertoy.com/view/4dfGzs\n// 202403272039注，看成中心更好\nvoid mainImage(out vec4 O, vec2 v)\n{\n        O *= 0.;\n        vec2 R = iResolution.xy,             \n             u = (v+v+.1 - R) / R.y;\n             //R = floor(iResolution.xy/2.)*2., // iResolution's parity influence by FabriceNeyret2 R奇偶的影响\n             //u = (v+v - R) / R.y;\n        \n        vec3 w = vec3(1,-3,2),        \n             o = w.xxz*iTime, // .xxz 为了第10秒采集图像\n             r = normalize(vec3(u,1)),\n             p = floor(o)+.5,//pp=p,\n             s = sign(r),\n             d = (p + .5 * s - o) / r,\n             q,\n             m,g;\n        //////////////////\n        //s=vec3(1);\n        //if(r.x<0.)s.x=-1.;\n        //if(r.y<0.)s.y=-1.;\n        //if(r.z<0.)s.z=-1.;\n        //////////////////\n        float t,i,h;\n\n        for(;i++<99. && dot(sin(.4* p ),cos(.4* p .yzx))>-1.3;)//p += m * s)\n        //{                \n                d += m * s/r, \n                m =  step(d,d.yzx) * step(d,d.zxy),\n                p += m * s; \n        //}\n\n        //t = length(pp-p);// \n        t = min(d.x, min(d.y, d.z));                              \n        \n        //vec3 q = o+r*t;q-=round(q); // round 就在落点设零\n        //vec3 q = (o+=r*t)-round(o);\n        //vec3 q = fract(o+r*t+.5)-.5;// 就是减round\n        q = abs(o+r*t-p)-.5;   // p在格子心，各表面距离都要为0\n        \n        //float h=min(length(q.xy),min(length(q.xz),length(q.yz)));\n        // i=129 to 131\n        for(h=2.;O.w++<3.;q=q.yzx)h=min(h,length(q.xy));\n        //h=length(q-step(q,q.yzx) * step(q,q.zxy)*q);       \n                \n        O = (min(1e2*exp(-1e2 * h),.4) + vec4(1,.3,0,1)*(.5 +.3 * dot(m * s, w))) * exp(-.04 * t);\n}        \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// err\n\n        /*\n        g = abs(fract(o + r * t+.5)-.5);// round 再 abs 因为下个if句\n        // 最长的分量移到x轴\n        for(i=0.;i++<3.;)if(g.x< g.y || g.x<g.z)g=g.yzx;\n        // h 是最小距离\n        float h = length(g.yz);\n        */","name":"Image","description":"","type":"image"}]}