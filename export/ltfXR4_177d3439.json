{"ver":"0.1","info":{"id":"ltfXR4","date":"1434779602","viewed":1197,"name":"Color Spline","username":"mba105","description":"Color gradient with optional wrapping using catmull rom splines.","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["spline","catmullrom","colorgradient","colorspline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nvec3 catmul_rom(vec3 p0, vec3 p1, vec3 p2, vec3 p3, float t)\n{\n    return 0.5 * (\n        (2.0 * p1) +\n        (-p0 + p2) * t +\n        (2.0 * p0 - 5.0 * p1 + 4.0 * p2 - p3) * t * t +\n        (-p0 + 3.0 * p1 - 3.0 * p2 + p3) * t * t * t);\n}\n\nvec3 color_spline(float t, bool wrap)\n{\n    t = clamp(t, 0.0, 1.0);\n    \n    const int s = 7;\n    \n    vec3 p[s];\n    p[0] = vec3(238, 64, 53) / 255.0;\n    p[1] = vec3(243, 119, 54) / 255.0;\n    p[2] = vec3(253, 244, 152) / 255.0;\n    p[3] = vec3(123, 192, 67) / 255.0;\n    p[4] = vec3(3, 146, 207) / 255.0;\n    \n    p[s-2] = p[0];\n    p[s-1] = p[1];\n    \n    float m = wrap ? float(s - 2) : float(s - 3);\n    float d = m * t;\n    \n    int b = int(d);\n    float dt = d - floor(d);\n    \n    return catmul_rom(p[((b-1)+s)%s], p[b], p[b+1], p[(b+2)%s], dt);\n}\n\nvoid mainImage(out vec4 result, in vec2 fragCoord)\n{\n    float t = fragCoord.x / iResolution.x;\n    \n    vec3 color = color_spline(t, false);\n    \n    result = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}