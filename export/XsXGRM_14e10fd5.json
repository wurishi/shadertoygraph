{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n\t\n\tfloat d = 0.0;\n\tfor (int i=0; i<50; i++)\n\t{\n\t\tfloat speed = sin(0.1+float(i)/20.0)*1.0;\n\t\tfloat fi = float(i);\n\t\tvec3 pos = speed*sin( iTime*speed*vec3(0.5,0.9,0.75)+fi );\n\n\t\td += pow(clamp((1.0-abs(distance(vec3(uv.x,uv.y,0.0), pos))),0.0,1.0),30.0);\n\t}\n\t\n\td += pow(clamp((1.0-abs(distance(vec3(uv.x,uv.y,0.0), vec3(uv.x,0.6,0.0)))),0.0,1.0),30.0);\n\td += pow(clamp((1.0-abs(distance(vec3(uv.x,uv.y,0.0), vec3(uv.x,-0.6,0.0)))),0.0,1.0),30.0);\n\td += pow(clamp((1.0-abs(distance(vec3(uv.x,uv.y,0.0), vec3(0.6,uv.y,0.0)))),0.0,1.0),30.0);\n\td += pow(clamp((1.0-abs(distance(vec3(uv.x,uv.y,0.0), vec3(-0.6,uv.y,0.0)))),0.0,1.0),30.0);\n\t\n\t\n\td = clamp(d,0.0,0.0125)*60.0;\n\t\n\tfloat noise = 1.0; //0.2*sin(uv.y*1800.0)+1.0-2.0*abs(uv.x);\t\n\t\n\tfragColor = vec4(1.75,1.75,1.5,1.0)*d*noise;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsXGRM","date":"1364804990","viewed":649,"name":"2d blobs","username":"rasmuskaae","description":"oldschool 2d blob","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","blobs","oldschool"],"hasliked":0,"parentid":"","parentname":""}}