{"ver":"0.1","info":{"id":"3tSfDW","date":"1598899295","viewed":303,"name":"ProductLightIntensity","username":"stevejtrettel","description":"Light Intensity in the Product Geometries, default =S2xE.  Uncomment relevant line for H2xE","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float rng=5.+30.*(1.+cos(iTime/3.));//sets the size of the display\n  \n    //rescale coordinates\n    float L=rng*(uv.x-0.5);\n    float z=rng*(uv.y-0.5);\n    z=360./640.*z;//fix aspect ratio\n    float r2=L*L+z*z;\n    \n    \n    //area density\n    \n    \n    \n   //change this to change the geometry: sinh for hyperbolic, r for Euclidean\n\tfloat aDens=r2*sin(L)/(L);//Spherical Factor\n   \t//float aDens=r2*sinh(L)/(L);//Hyperbolic Factor\n    \n    float intensity=abs(1./aDens);\n    \n    float cappedIntensity=min(intensity,1.);\n\n    \n    // Time varying pixel color\n    vec3 blue=1.5*vec3(0.1,0.2,0.35);\n    vec3 orange=vec3(1.,177./255.,64./255.);\n    vec3 yellow=vec3(0.75,0.75,0.35);\n    vec3 mix=(1.-cappedIntensity)*blue+cappedIntensity*orange;\n    \n    vec3 col = (0.75+intensity/10.)*mix;\n        //intensity*vec3(1.,1.,0.5);\n       \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}