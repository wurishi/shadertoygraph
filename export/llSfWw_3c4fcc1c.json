{"ver":"0.1","info":{"id":"llSfWw","date":"1515956367","viewed":124,"name":"Pattern 14012018","username":"edapx","description":"patterns, palm","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["patterns","palm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distortedDaisy(\n  vec2 st, vec2 orig, float resize, float smoothness,\n  float nPetals, float distorsion, float addendum){\n  // Credits to Inigo\n  // https://www.youtube.com/watch?v=0ifChJ0nJfM\n  \n  // to turn the picture upside down, uncomment the following\n  // line\n  //vec2 toCenter = orig-st;\n  vec2 toCenter = st-orig;\n  float angle = atan(toCenter.y,toCenter.x);\n  float r = resize + addendum*cos(angle * nPetals + distorsion * toCenter.x);\n  return smoothstep(r, r+smoothness, length(toCenter));\n}\n\nfloat flip(float v, float pct){\n  return mix(v, 1. - v, pct);\n}\n\nfloat strokeSmoot(float x, float pos, float width){\n  return smoothstep(pos, pos+0.005,x+ width*0.5) -\n         smoothstep(pos, pos+0.005,x- width*0.5);\n}\n\nfloat circleSDF(vec2 pos, float r){\n  return length(pos - 0.5) * r;\n}\n\nvec2 tileMoveCrossed(vec2 _st, float _zoom, float utime, float speed){\n    float time = utime * speed;\n    _st *= _zoom;\n    // horizontal or vertical?\n    float ver = step(.5,fract(time));\n    float hor = step(ver, 0.);\n    // even rows and columns\n    float evenY = step(.5, fract(_st.y * .5));\n    float oddY = step(evenY,0.);\n    float evenX = step(.5, fract(_st.x * .5));\n    float oddX = step(evenX,0.);\n    // apply movement\n    _st.x += ((fract(time) * 2.0) * evenY) * hor;\n    _st.x -= ((fract(time) * 2.0) * oddY) * hor;\n    _st.y += ((fract(time) * 2.0) * evenX) * ver;\n    _st.y -= ((fract(time) * 2.0) * oddX) * ver;\n    return fract(_st);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  // COLORS\n  vec3 sand = vec3(0.970,0.725,0.359);\n  vec3 violet = vec3(0.688,0.287,0.995);\n  vec3 green = vec3(0.266,0.810,0.407);\n\n  float palm = 1.0;\n  vec2 st = fragCoord.xy / iResolution.xy;\n  st.y *= iResolution.y/iResolution.x;\n  st *= 4.0;\n  st = fract(st);\n\n  // CANOPY\n  float d = 101.0; // distorsion\n  float r = 0.24;  // resize\n  float a = 0.1;   // addendum\n  float p = 30.0;  // number of petals\n  float s = 0.03;  // smoothness of the border\n  vec2 center = vec2(0.5, 0.7);\n  palm *= distortedDaisy(st, center,r,s,p,d,a);\n  \n  // STEM\n  float gamboThickness = 0.01;\n  float gamboLenght = 0.14;\n  vec2 position = center-st;\n  float freq_stem = 40.;\n  float amp_stem = 0.03;\n  //gamboThickness += cos(position.y * 120.0) * 0.004;\n  // changing from + to - change the direction of the curve\n  //float curve = abs(position.x  + sin(position.y *freq_stem) * amp_stem);\n  float curve = abs(position.x  + (cos(position.y * freq_stem) * amp_stem));\n  float gambo = 1.0 - (1.0 - smoothstep(gamboThickness, gamboThickness+0.01, curve)) *\n           (1.0 - smoothstep(gamboLenght, 0.01, position.y));\n  palm*=gambo;\n\n  // CIRCLES\n  st = tileMoveCrossed(st, 3., iTime, 0.18);\n  float circle = circleSDF(st, 0.16);\n  circle = strokeSmoot(0.07, circle, .004);\n  \n  // flip on intersection\n  float flipped = flip(palm, circle);\n  \n  green = mix(green, sand, palm);\n  vec3 col = mix(green, violet, flipped);\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}