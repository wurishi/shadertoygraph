{"ver":"0.1","info":{"id":"7ltXDs","date":"1640033726","viewed":113,"name":"\"Thermal imager\" color gradient","username":"SNMetamorph","description":"Another color gradient using smoothstep. Looks like gradient for thermal imager.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float linearstep(float edge0, float edge1, float x)\n{\n    float t = (x - edge0) / (edge1 - edge0);\n    return clamp(t, 0.0, 1.0);\n}\n\n// Argument t varies in range [0.0; 1.0]\nvec3 ColorFunction(float t)\n{\n    float red = smoothstep(0.24, 0.66, t);\n    float green = smoothstep(0.66, 1.0, t);\n    float blue = smoothstep(0.00, 0.66, t) - smoothstep(0.33, 0.66, t);\n    return vec3(red, green, blue);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Get gradient color\n    vec3 color = ColorFunction(uv.x);\n    \n    // Draw markers each 0.1 step\n    float markers = step(0.099, mod(uv.x, 0.1)) * step(0.97, uv.y);\n\n    // Output to screen\n    color = color + vec3(1.0) * markers;\n    color = pow(color, vec3(1.0 / 2.2));\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}