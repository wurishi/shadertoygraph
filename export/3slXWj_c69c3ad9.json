{"ver":"0.1","info":{"id":"3slXWj","date":"1552224323","viewed":211,"name":"10 Points Interference ","username":"gest","description":"10 points interference test","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["experiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = radians(180.);\n\nvec3 rotate(vec3 v, vec3 rad) {\n\tvec3 c = cos(rad), s = sin(rad);\n\tif (rad.x!=0.) v = vec3(v.x, c.x * v.y + s.x * v.z, -s.x * v.y + c.x * v.z);\n\tif (rad.y!=0.) v = vec3(c.y * v.x - s.y * v.z, v.y, s.y * v.x + c.y * v.z);\n\tif (rad.z!=0.) v = vec3(c.z * v.x + s.z * v.y, -s.z * v.x + c.z * v.y, v.z);\n\treturn v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float u_time = iTime;\n    vec2 u_canvas = iResolution.xy;\n    vec2 u_mouse = iMouse.xy;\n    \n    float aspect = u_canvas.x/u_canvas.y;\n    vec2 uv = fragCoord.xy / u_canvas.xy;\n    uv = uv - 0.5;\n    //uv *= 0.2;\n    uv.x *= aspect;\n\n    float bright = 0.5;\n\n    float z = 0.001;\n    if (u_mouse.y!=0.) z = 0.001 + u_mouse.y *0.0001;\n\n    vec3 rd = vec3(uv, z);\n\n    const int count = 10;\n\n    vec3 p[count];\n    float r;\n    vec3 a = vec3(1.0, 1.5, 2.0);\n    vec3 re = vec3(0);\n    vec3 im = vec3(0);\n    for (int i=0; i<count; i++) {\n        p[i] = vec3(  0.05 ,  0., 0.0 );\n        p[i].x *= aspect;\n        p[i] = rotate(p[i], vec3(0,0,1)*(u_time*0.05*float(i)));\n        r = length(rd - p[i]) * u_canvas.x;\n        re += cos(r * a) / r;\n        im += sin(r * a) / r;\n    }\n    vec3 color = bright * (re*re + im*im) * u_canvas.x;\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}