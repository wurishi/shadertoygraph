{"ver":"0.1","info":{"id":"4sdXRf","date":"1460642157","viewed":163,"name":"Stars 3","username":"gigatron","description":"wip to simulate Razor 1911 voyage demo star sequence at beginning seconds 20 !\nThx to mr tambako; // not yet perfect !!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["stars","rotation","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\"Tamby's Star Test\" by Emmanuel Keller aka Tambako - December 2015\nLicense Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\nContact: tamby@tambako.ch\n*/\n// thank you ;\n\n#define TS(A,F) A*(0.5 + sin(iTime*F))\n#define TC(A,F) A*(0.5 + cos(iTime*F))\n\nconst float pi = 3.14159;\nconst float bs = 0.001;\nconst float bw = 0.006;\n// global float vars .. \n \nconst float px=0.0;\nconst float py=0.1;// not used yet ! \nconst float st=0.1;\n\nvec2 rotateVec(vec2 vect, float angle)\n{\n    float xr = vect.x*cos(angle) + vect.y*sin(angle);\n    float yr = vect.x*sin(angle) - vect.y*cos(angle);\n    return vec2(xr, yr);\n}\n\nfloat star(vec2 uv, vec2 center, float r1, float sf, float nb, float rs)\n{\n\tuv-= center + vec2(0., 0.5*(0.6 - (iResolution.x-iResolution.y)/iResolution.x)); \n    float alpha1 = mod(atan(uv.x, uv.y) + iTime*rs, 2.*pi/nb);\n    float alpha2 = mod(2.*pi/nb-atan(uv.x, uv.y) - iTime*rs, 2.*pi/nb);\n    float alpha = alpha1<pi/nb?alpha2:alpha1;\n    float f = sf*length(uv)*cos(alpha)/cos(pi/nb) - length(uv)*(sf-1.);\n    float v = smoothstep(r1 - bs, r1 + bs, f) + 0.5 - 0.5*smoothstep(r1 - 2.*bs - bw, r1 + bs - bw, f) + 0.2*pow(smoothstep(r1*0.9, r1*0.2, f), 0.2);\n\n    float f2 = length(uv);\n    float v2 = (1. - smoothstep(r1 - bs, r1 + bs, f2)) ;\n    \n    //return v + v2 -0.5*v3;\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    vec2 uv = fragCoord.xy / iResolution.xx;\n    \n    float t=iTime;\n    uv.y =4.2*uv.y;// razor 1911 voyage star sequence ... wip !\n\t    \n     float v = star(-uv, vec2(0.175, 0.1), 0.03 + TS(0.02, 1.), 1.05, 5., -1.8);\n    float rot = -iTime * 1.0;\n        \n    //stars\n    for (int i = 0 ; i < 8 ; i++) {\n         float ct=float(i/300);\n         \n v *= star(uv, vec2(0.9+ct +  sin (-rot   -float(i) * 0.8 )/1.4,0.5 + cos (-rot   -float(i) * 0.8 ))/1.1, 0.060  , 1.05, 5., -1.8);\n\n        \n    }\n \n          \n    \n  fragColor.rgb = mix(vec3(1.0*v,0.4*v,v*3.0),  vec3(0.,0.,0.), v);\n\n\n\n    \n}","name":"Image","description":"","type":"image"}]}