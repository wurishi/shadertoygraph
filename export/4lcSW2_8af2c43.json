{"ver":"0.1","info":{"id":"4lcSW2","date":"1481554779","viewed":157,"name":"see level","username":"Rod","description":"ho wouaaaaa","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wouaaaa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hEye = 0.5;\nfloat dScreen = 2.0;\nfloat Pi = 3.1416;\n\nbool sea( float distance, vec2 pixCoords) {\n    \n    float hauteur = hEye* ((distance-dScreen)/distance); \n    float amplitude = 0.10 / distance;\n    float periode = 1.0 / distance;\n    float phase   = 4.0 * iTime / distance;\n    \n    float seaLevel =  hauteur +  amplitude *cos((2.0 * Pi * (pixCoords.x / iResolution.y) / periode) + phase) ;\n    \n    return pixCoords.y < (seaLevel * iResolution.y) ;\n}\n\n\n\nvoid mainImage(out vec4 color, in vec2 pixCoords) {\n    \n    color =  vec4 (1.0, 1.0 , 1.0 , 1.0) ;\n    \n\tfloat centreX = iResolution.x- 50.0; \n    float centreY = iResolution.y- 50.0 ;\n    float radius = iResolution.x/14.0;\n    float distance = sqrt(pow(pixCoords.x-centreX,2.0)+pow(pixCoords.y-centreY,2.0)) ;\n    \n    \n    if (distance < radius ) {\n    \tcolor = vec4(1.0, 1.0, 0.0, 1.0);\n        return;\n    }\n    \n    \n    \n    if (sea(3.0, pixCoords )) {\n        color = vec4(0.0, 0.0 , 1.0 , 1.0 );\n        return;\n    }\n    \n    if (sea(4.0, pixCoords )) {\n        color = vec4(1.0, 0.0 , 1.0 , 1.0 );\n        return;\n    }\n    \n    \n    if (sea(5.0, pixCoords )) {\n        color = vec4(1.0, 0.5 , 1.0 , 1.0 );\n        return;\n    }\n    \n   \n}","name":"Image","description":"","type":"image"}]}