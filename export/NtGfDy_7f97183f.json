{"ver":"0.1","info":{"id":"NtGfDy","date":"1665937212","viewed":104,"name":"Training Random","username":"Falconssj","description":"Random Training from Book of Shaders.\nFully procedural random :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Make rows of moving cells (in opposite directions) with random values.\n//Only display the cells with brighter values. Make the velocity of the rows fluctuate over time.\n//\n//\n\nfloat random(vec2 st){\n    return fract(sin(dot(st, vec2(13.9898,78.233)))* 435114.18745);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= 50.;\n    float time = iTime * 5.;\n    \n    time *= fract(sin(floor(iTime*2.)));\n        \n    uv.x = mix(uv.x + time, uv.x - time,round(uv.y));\n   \n    vec2 ID = floor(uv);    \n    \n    float rnd =  random(ID);\n    rnd = round(rnd);\n        \n    // Output to screen\n    fragColor = vec4(vec3(rnd),1.0);\n}","name":"Image","description":"","type":"image"}]}