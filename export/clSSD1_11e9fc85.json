{"ver":"0.1","info":{"id":"clSSD1","date":"1675971232","viewed":350,"name":"Delailerp","username":"devartSpace","description":"Add a force on each point of a \"rope\".\nThis rope is attached to two orbital end points.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","interpolation","dot","point","delai"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created in 2023 by devart.space\n// All code is free to use with credit! :)\n\n\n#define TWO_PI 6.28318530718\n\n#define NBP 50.\n#define NBPS 1./(NBP-1.)\n\n\n// Delai animation\n#define ANIM_SPEED 1./60.   //  1/seconds\n#define ANIM_ORIGIN vec2(0.,0.)\n#define ANIM_SCALE  vec2((NBP-1.) * TWO_PI)\n\n// Orbit circle\n#define RADIUS vec2(0.90, 0.3)\n#define SPEED  vec2(0.10, -0.05)\n\n\nvec2 p_pos(float radius, float angle) {\n    return radius * vec2(cos(angle), sin(angle));\n}\n\nfloat point_add(float col, vec2 uv, vec2 dir) {\n    float d = length(uv - dir);\n    return col += .02/ d - 0.04;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y*2.;\n\n    // Background color\n    vec3 col = vec3(0.0);\n\n    // Variation force\n    vec2 delai = ANIM_ORIGIN + iTime * ANIM_SPEED * ANIM_SCALE; // from origine to +inf\n    delai += iMouse.xy/iResolution.xy * 10.*TWO_PI;             // small local variation\n    \n    \n    // Rotative force\n    vec2 angle = fract(iTime * SPEED) * TWO_PI; // constant rotation\n        \n    // For each point\n    for (float i = 0.0; i <= 1.0; i += NBPS) \n    {\n        \n        // Add variation force\n        vec2 a = angle + i * delai; // add force to rotation\n        \n        // Robe end points\n        vec2 p1 = RADIUS.s * vec2(cos(a.s), sin(a.s));\n        vec2 p2 = RADIUS.t * vec2(cos(a.t), sin(a.t));\n        \n        // Interpolate to create the rope\n        vec2 p = mix(p1, p2, i);\n        \n        // Draw\n        col.r = point_add(col.r, uv, p);\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}