{"ver":"0.1","info":{"id":"Xdy3zm","date":"1453660612","viewed":1541,"name":"blender","username":"nicoptere","description":"blends between frames of a spritesheet","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","effect","animation","blend"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float frameCount = 4.;\n\tvec2 uv = ( fragCoord.xy / iResolution.xy ) / frameCount;\n\t\n    //fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    //this is a normalized transition value [0, 1]\n    float t = abs( sin( iTime *.5) );\n\n    //these are the bounds of our animaition\n    float lastFrame = frameCount-1.;\n    float id = min( lastFrame, floor( frameCount * t ) );\n    float nextFrame = id + 1.;\n\n    //this computes the 'local time' between frame X and frame X + 1\n    float delta = 1. / frameCount;\n    float nt = ( t - ( id * delta ) ) / delta;\n\n    //then we find the pair of uvs to sample\n    vec2 uv0 = uv + vec2( id * delta, 0. );\n    vec2 uv1 = uv + vec2( min( lastFrame * delta, nextFrame * delta ), 0. );\n    \n    //finally we blend the 2 textures with the local time\n    fragColor =  mix(  texture( iChannel0, uv0 ),  texture( iChannel0, uv1 ), nt );\n    \n}","name":"","description":"","type":"image"}]}