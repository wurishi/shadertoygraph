{"ver":"0.1","info":{"id":"3tyBRh","date":"1613819955","viewed":537,"name":"2D Water with clouds","username":"Huloud","description":"My first work","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","cloud","water","reflect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Noise from https://www.shadertoy.com/view/4slGD4\n//Idea of water surface from https://www.shadertoy.com/view/MsB3WR\n\nconst vec2 add = vec2(1.0, 0.0);\nconst vec2 addz = vec2(0.0, 1.0);\n#define HASHSCALE1 .1031\n#define SPEED 25.\n\nfloat Hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nconst mat2 m2 = mat2( 0.60, -0.80, 0.80, 0.60 );\n\n\nfloat Noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    \n    float res = mix(mix( Hash12(p),          Hash12(p + add.xy),f.x),\n                    mix( Hash12(p + add.yx), Hash12(p + add.xx),f.x),f.y);\n    return res;\n}\n\nfloat FractalNoise(in vec2 xy)\n{\n\tfloat w = .7;\n\tfloat f = 0.0;\n\n\tfor (int i = 0; i < 4; i++)\n\t{\n            f += Noise(xy+iTime*0.015*SPEED*w) * w ;\n\t\tw *= 0.5;\n\t\txy *= 2.7;\n\t}\n\treturn f;\n}\n\nfloat waterMap( vec2 pos ) {\n\tvec2 posm = pos * m2;\n\t\n\treturn abs( FractalNoise( vec2( 8.*posm))-0.5 )* 0.1;\n}\n\nvec3 aces_tonemap(vec3 color){\t\n\tmat3 m1 = mat3(\n        0.59719, 0.07600, 0.02840,\n        0.35458, 0.90834, 0.13383,\n        0.04823, 0.01566, 0.83777\n\t);\n\tmat3 m2 = mat3(\n        1.60475, -0.10208, -0.00327,\n        -0.53108,  1.10813, -0.07276,\n        -0.07367, -0.00605,  1.07602\n\t);\n\tvec3 v = m1 * color;    \n\tvec3 a = v * (v + 0.0245786) - 0.000090537;\n\tvec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\n\treturn pow(clamp(m2 * (a / b), 0.0, 1.0), vec3(1.0 / 2.2));\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = -1.0 + 2.0 *(fragCoord/iResolution.xy);\n    \n\t\tvec2 normal;\n\t\tnormal.x =  (waterMap(uv + add) - waterMap(uv-add) ) / (2. * .1);\n\t\tnormal.y =  (waterMap(uv + addz) - waterMap(uv-addz) ) / (2. * .1);\n \n    float water = waterMap(normal);\n    vec3 col = vec3(0.1,0.4,0.6);\n    col+=water;\n    uv*=5.;\n    //uv+=water;\n \n    float noise1 = (FractalNoise(uv) -.55) * 5.0;\n    float noise2 = (FractalNoise(vec2(uv.x+0.25,uv.y+0.25)) -.55) * 5.0;\n    col = mix(col, aces_tonemap(vec3(0.65,0.65,0.75)), clamp((noise2*0.1-.1)/water, 0.0, 1.0)*0.1);\n    col = mix(col, aces_tonemap(vec3(1.0, 1.0, 1.09)), clamp((noise1*0.1-.1)/water, 0.0, 1.0)*0.1);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}