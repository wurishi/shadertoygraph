{"ver":"0.1","info":{"id":"MdKfDc","date":"1530905389","viewed":595,"name":"PICO-8 Palette","username":"1j01","description":"Click and drag to \"dither\" - just neighboring colors *in the palette*, not in color space, and just by applying sine waves.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["colors","color","palette","pico8","pico8"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4[] pico8Palette = vec4[] (\n    vec4(0.00, 0.00, 0.00, 1.00), // #000000 (0,   0,   0  ) black\n    vec4(0.11, 0.17, 0.33, 1.00), // #1D2B53 (29,  43,  83 ) dark-blue\n    vec4(0.49, 0.15, 0.33, 1.00), // #7E2553 (126, 37,  83 ) dark-purple\n    vec4(0.00, 0.53, 0.32, 1.00), // #008751 (0,   135, 81 ) dark-green\n    vec4(0.67, 0.32, 0.21, 1.00), // #AB5236 (171, 82,  54 ) brown\n    vec4(0.37, 0.34, 0.31, 1.00), // #5F574F (95,  87,  79 ) dark-gray\n    vec4(0.76, 0.76, 0.78, 1.00), // #C2C3C7 (194, 195, 199) light-gray\n    vec4(1.00, 0.95, 0.91, 1.00), // #FFF1E8 (255, 241, 232) white\n    vec4(1.00, 0.00, 0.30, 1.00), // #FF004D (255, 0,   77 ) red\n    vec4(1.00, 0.64, 0.00, 1.00), // #FFA300 (255, 163, 0  ) orange\n    vec4(1.00, 0.93, 0.15, 1.00), // #FFEC27 (255, 236, 39 ) yellow\n    vec4(0.00, 0.89, 0.21, 1.00), // #00E436 (0,   228, 54 ) green\n    vec4(0.16, 0.68, 1.00, 1.00), // #29ADFF (41,  173, 255) blue\n    vec4(0.51, 0.46, 0.61, 1.00), // #83769C (131, 118, 156) indigo\n    vec4(1.00, 0.47, 0.66, 1.00), // #FF77A8 (255, 119, 168) pink\n    vec4(1.00, 0.80, 0.67, 1.00)  // #FFCCAA (255, 204, 170) peach\n);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Mess with the coordinates\n    uv = floor(uv * 5.0) * uv;\n    //uv = sin(uv * 1.0) * uv;\n    \n    int paletteIndex = int(\n        uv.x * 5.0 +\n        sin(uv.y / 15.0 * iTime) * 5.0 * sin(iTime / 5.0) +\n        cos(iTime) * 10.0 + 2.5 +\n        ((sin(iTime + uv.x + uv.y) < 0.0) ? (sin(uv.x + uv.y * 50.0) * 2.0) : 0.0) +\n        ((iMouse.z > 0.0) ? sin(uv.x * 500.0 * iMouse.x + uv.y * 500.0 * iMouse.y) / 2.0 : 0.0)\n    );\n    \n    fragColor = pico8Palette[paletteIndex];\n}","name":"Image","description":"","type":"image"}]}