{"ver":"0.1","info":{"id":"msByR3","date":"1687962481","viewed":41,"name":"Dancing Heart","username":"shady_man","description":"My first shader, worked itself out through experimentation.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["firsttry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Circle(vec2 uv, vec2 p, float r, float blur){\n    \n    float d = length(uv + p);\n    float c = smoothstep(r, r - blur, d); \n    return c;\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    y -= abs(x);\n    \n    float size = sin(iTime * 10.) * 0.05 + 0.3;\n    float blurHeart = sin(iTime * 5.) * .1;\n    \n    float heart = Circle(vec2(x + sin(iTime * 2.5) * 0.11, y + 0.1), vec2(0, 0), size, blurHeart);\n    \n    float blur = sin(iTime * 5.) + 1.;\n    float radius = sin (iTime * 5.) + .6;\n    float radiate = Circle(uv, vec2(sin(iTime * 2.5) * 0.2, 0.), radius, blur);\n    \n    \n    vec3 col1 = vec3(1. - cos(iTime * 5.) * 0.2 + 0.1, 0., 0.) * heart;\n    vec3 col2 = vec3(1., .5, .5) * radiate;\n    \n    vec3 col = col1 + col2;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}