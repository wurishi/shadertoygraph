{"ver":"0.1","info":{"id":"XXlSD7","date":"1709604626","viewed":62,"name":"Art 1","username":"dogor","description":"Art shader exercise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pallete(float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;// do the same as below lines\n    //vec2 uv = fragCoord/iResolution.xy;\n    //uv -= 0.5;\n    //uv *= 2.0;\n    //uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    \n    vec2 uv0 = uv;    \n    for(float i = 0.0; i < 3.0; i++)\n    {\n         uv = fract(uv * 1.35 * sin(iTime)) - 0.5;\n    \n        float d  = length(uv) * exp(-length(uv0));\n    \n        //vec3 color = vec3(2.000,1.000,3.000);    //roxo rosa branco\n        vec3 color = pallete(length(uv0) + i*0.6 +  iTime *0.7, vec3(0.5,0.5,0.5), vec3(0.5,0.5,0.5),  \n                                vec3(0.251,0.137,0.302), vec3(0.263,0.416,0.557));      \n    \n        d = sin(d*10.0 + iTime * 0.85)/10.0;// + cos(iTime)/25.0;\n        d = abs(d);\n    \n        d = smoothstep(0.0,0.1,d);\n        d = pow(0.03/d, 1.2);  \n   \n        finalColor += color * d;\n\n    }\n    \n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}