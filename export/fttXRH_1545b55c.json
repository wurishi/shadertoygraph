{"ver":"0.1","info":{"id":"fttXRH","date":"1638716839","viewed":217,"name":"SCOTLAND FOREVER","username":"RubberDuck55","description":"still need to add music","likes":3,"published":3,"flags":8,"usePreview":0,"tags":["scotland"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv *= 1.2;\n    \n    uv.y += sin((uv.x+iTime/2.5)*10.)/15.;\n    uv.x += sin((uv.y+iTime/2.5)*2.)/20.;\n\n    vec3 col = vec3(0);\n    if(uv.x <= 0.5 && uv.x >= -0.5 && uv.y <= 0.5 && uv.y >= -0.5) {\n        col = vec3(0, 65./255., 191./255.);\n        float w = fwidth(uv.x);\n        col += vec3(smoothstep(0.9-w, 0.9+w, 1.-abs(uv.x+uv.y)));\n        col += vec3(smoothstep(0.9-w, 0.9+w, 1.-abs(uv.x-uv.y)));\n        col = clamp(col, 0., 1.);\n        col *= (sin((uv.x+iTime/2.5)*10.)/9.)+0.8;\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    return vec2( sin(6.2831*440.0*time)*exp(-3.0*time) );\n}","name":"Sound","description":"","type":"sound"}]}