{"ver":"0.1","info":{"id":"Md3GR2","date":"1450811445","viewed":237,"name":"Decruncher","username":"gigatron","description":"from noise bar fx","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["amiga","decruncher"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"float blink = 0.1;\nfloat bar_h = 64.;\nfloat bar_w = 4.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    float v_sample = time * blink;\n\n    // DÃ©terminer la position de la barre actuelle\n    float bar_y = mod(time, bar_h * 2.0);\n    if (bar_y > bar_h ) {\n        bar_y = (bar_h * 2.0) - bar_y;\n    }\n\n    // Calculer la position de la texture\n    vec2 uv  = fragCoord.xy / iResolution.xy;\n    uv.x = v_sample;\n    uv -= mod(uv, vec2(bar_w, bar_h) / iResolution.xy);\n    uv.y -= bar_y / iResolution.y;\n \n    fragColor = texture(iChannel0, uv);\n \n    fragColor.rgb += (fract(sin(dot(vec2(fragCoord.x, fragCoord.y + time), vec2(12.9898,78.233))) * 43758.5453) - 0.5) * 0.01;\n\n    // Renforcer les couleurs\n    fragColor.rgb = pow(fragColor.rgb, vec3(1.3));\n}\n","name":"Image","description":"","type":"image"}]}