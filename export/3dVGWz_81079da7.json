{"ver":"0.1","info":{"id":"3dVGWz","date":"1570019086","viewed":289,"name":"ShaderTober - Mindless","username":"Flopine","description":"A small doodle with inktober's theme \"mindless\"","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, Coyhot, Alkama and YX for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and others to sprout :)  https://twitter.com/CookieDemoparty\n\nfloat hash21 (vec2 x)\n{return fract(sin(dot(x,vec2(16.4,34.5)))*1212.4);}\n\nfloat box (vec3 p, vec3 c)\n{\n    vec3 q = abs(p)-c;\n    return min(0.,max(q.x,max(q.y,q.z)))+ length(max(q,0.));\n}\n\nfloat cyl (vec3 p, float r, float h)\n{return max(length(p.xy)-r, abs(p.z)-h);}\n\nfloat well (vec3 p)\n{\n    p.y = abs(p.y)-2.;\n    p.xz = fract(p.xz)-0.5;\n    return max(abs(p.y)-0.25,abs(cyl(p.xzy, .45,1.))-0.05);\n}\n\nvec2 s_id;\nfloat g1 = 0.;\nfloat spheres (vec3 p)\n{ \n    s_id = floor(p.xz);\n    \n    float anim = (mod(s_id.x,2.) == 0.)? iTime*hash21(s_id)*0.5 : -iTime*hash21(s_id)*0.5;\n    p.y -= anim;\n   \tp.xz = fract(p.xz)-.5;\n    \n    p.y = fract(p.y)-.5;\n    \n   \tfloat d = length(p)-0.2;\n    g1 += 0.01/(0.01+d*d);\n    return d;\n}\n\nfloat SDF (vec3 p)\n{\n    return min(-box(p,vec3(7.,2.5,5.)),min(spheres(p),well(p)));\n}\n\nvec3 getcam (vec3 ro, vec3 tar, vec2 uv)\n{\n    vec3 f = normalize(tar-ro);\n    vec3 l = normalize(cross(vec3(0.,1.,0.),f));\n    vec3 u = normalize(cross(f,l));\n    return normalize(f + l*uv.x + u*uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    float dither = hash21(uv);\n    \n   \tvec3 ro = vec3(0.8,0.3,-3.5),\n        p = ro,\n        rd = getcam(ro, vec3(0.),uv),\n        col = vec3(0.);\n    \n    float shad = 0.;\n    \n    for (float i=0.; i<64.; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            shad = i/64.;\n            break;\n        }\n        d *= 0.9+dither*0.1;\n        p+=d*rd;\n    }\n    \n    col = vec3 (shad)*0.2;\n    vec3 c1 = clamp(vec3(hash21(s_id),hash21(s_id*0.2),1.),0.,1.);\n    vec3 c2 = clamp(vec3(1.,hash21(s_id),hash21(s_id)*0.1),0.,1.);\n    vec3 fc = mod(s_id.x, 2.) == 0. ? c1 : c2;\n\tcol += g1*fc*0.02*exp(-fract(iTime));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}