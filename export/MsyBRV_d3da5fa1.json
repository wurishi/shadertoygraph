{"ver":"0.1","info":{"id":"MsyBRV","date":"1529529059","viewed":108,"name":"My first attempt at occlusion","username":"Veggiebob","description":"Ambient occlusion with only one object? Yeah, I'll have to make a corner somehow","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["box"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float groundHeight = -0.5;\nfloat sq (float x){\n    return x*x;\n}\nfloat align (float diff, float dim){\n    if(diff>=dim){\n        return diff-dim;\n    } else {\n        return 0.;\n    }\n}\nfloat box3D (vec3 boxPos, vec3 boxSize, vec3 pos){\n    float n = align(abs(pos.x-boxPos.x), boxSize.x)+align(abs(pos.y-boxPos.y), boxSize.y);\n    n+=align(abs(pos.z-boxPos.z), boxSize.z);//just to keep the lines short\n    return n;\n}\nvec3 traceBox (vec3 o, vec3 r, vec3 boxPos, vec3 boxSize, bool returnPos){\n    vec3 p = vec3(0.);\n    float t = 0.;\n    float d = 0.;\n    for(int i = 0; i<64; i++){//get on the box\n        p = o+r*t;\n        d = box3D(boxPos, boxSize, p);\n        t+=d*0.6;\n    }\n    if(returnPos){\n        return p;\n    } else {\n    \treturn vec3(d, t, 0.);\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x*=iResolution.x/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy - 0.5;\n    if(iMouse.xy == vec2(0.))mouse = vec2(0.5, 0.5);\n    mouse.x*=6.5;\n    mouse.y*=-1.;\n    \n    float angle = mouse.x;\n    float fov = 0.5;\n    float camDist = 2.7;\n    vec3 camera = vec3(cos(mouse.x)*camDist, max(mouse.y*camDist, groundHeight+0.5), sin(mouse.x)*camDist);//vec3(mouse*5., -2.);\n    vec3 ray = vec3(-cos(mouse.x+uv.x*fov)*2., -mouse.y+uv.y, -sin(mouse.x+uv.x*fov)*2.);//vec3(uv+mouse, 0.)-camera;\n    ray = normalize(ray);\n    \n    vec3 boxSize = vec3(0.3);\n    vec3 boxPos = vec3(0.);\n    vec3 box1p = traceBox(camera, ray, boxPos, boxSize, true);\n    vec2 box1d = traceBox(camera, ray, boxPos, boxSize, false).xy;\n    //ambient occlusion\n    float box1do1 = box3D(boxPos, boxSize, box1p-ray*0.01);\n    float box1do2 = box3D(boxPos, boxSize, box1p-ray*0.02);\n    float box1do3 = box3D(boxPos, boxSize, box1p-ray*0.03);\n    float box1do4 = box3D(boxPos, boxSize, box1p-ray*0.04);\n    float variance = sq(box1do1-box1d.x)+sq(box1do2-box1d.x)+sq(box1do3-box1d.x)+sq(box1do4-box1d.x);\n    variance = 1./variance * 0.0001;\n    float fog = 1.0 / (1.0 + box1d.y*box1d.y*0.5);\n    vec3 col = vec3(1.)*fog;\n    if(iMouse.z>0.){\n    \tcol *= variance;\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}