{"ver":"0.1","info":{"id":"sdKfDt","date":"1659041004","viewed":125,"name":"Raytracing in 41 Lines","username":"FifthStateOfMatter","description":"Sphere raytracing in 41 lines.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float radius = 1.0;\nvec3 objClr;\nvec4 raytraceSphere(in vec3 orig, in vec3 dir, in vec3 C, in float rad){\n    vec3 oc = vec3(orig - C);\n    float a = dot(dir, dir);\n    float b = 2.0*dot(oc, dir);\n    float c = dot(oc, oc) - rad*rad;\n    float d = b*b - 4.0*a*c;\n    float t = (-b - sqrt(d))/(2.0*a);\n    if(d >= 0.0){\n        return vec4(orig + dir*t, 1.0);\n    }\n    return vec4(0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    objClr = normalize(vec3(abs(sin(iTime*0.25)), abs(cos(iTime*0.5)), abs(tan(iTime))));\n    vec3 lightPos = vec3(sin(iTime)*10.0, sin(iTime*0.5)*10.0, cos(iTime)*10.0);\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    vec3 orig = vec3(0.0, 0.0, 0.0);\n    vec3 dir = vec3(uv.xy, 1);\n    vec3 C = vec3(0.0, 0.0, 5.0);\n    vec4 r = raytraceSphere(orig, normalize(dir), C, 2.0);\n    vec3 col;\n    if(r.w == 1.0){\n        vec3 normal = r.xyz - C;\n        if(raytraceSphere(lightPos, r.xyz, C, radius).w != 1.0){\n            float i = dot(normalize(lightPos - r.xyz), normalize(normal));\n            col = vec3(max(i, 0.1)*objClr.r, max(i, 0.1)*objClr.g, max(i, 0.1)*objClr.b);\n        }else{\n            col = vec3(objClr.r*0.1, objClr.g*0.1, objClr.b*0.1);\n        }\n    }else{\n        if(lightPos.x == uv.x){\n            col = vec3(1);\n        }else{\n            col = vec3(0);\n        }\n    }\n    fragColor = vec4(pow(col, vec3(1.0/2.2)), 1.0);\n}","name":"Image","description":"","type":"image"}]}