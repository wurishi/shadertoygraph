{"ver":"0.1","info":{"id":"Ws3SzX","date":"1572449894","viewed":71,"name":"LandscapeGradient","username":"Demuss","description":"Gradient","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 uv)\n{\n\t return fract(sin(dot(uv.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvec2 randomV2(vec2 uv)\n{\n\t return vec2(fract(sin(dot(uv.xy, vec2(12.9898,78.233))) * 43758.5453123), fract(sin(dot(uv.xy, vec2(78.233,12.9898))) * 38.3123));\n}\n\nfloat noise2 (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n \n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0)); \n    \n    vec2 u = smoothstep(0.,1.,f);\n \n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvec2 hash( vec2 x ) \n{\n    const vec2 k = vec2( 0.9183099, 0.2678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\t\n\tvec2 u = f*f*(3.0-2.0*f);\n    float n =  mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n    return 0.5 + 0.5*n;\n}\n\nfloat getDistance(float a, float b, float remove)   \n{ \n    float multi = abs(b-0.5);\n    multi = 1. - multi;\n    multi -= 0.5;\n    multi *= 2.;\n    multi += 1.;\n    \n    float returnValue = distance(a, b) * multi;\n    returnValue = 1. - returnValue;\n    \n    returnValue -= remove;\n    returnValue *= 1./(1.-remove)+20.;\n    returnValue = clamp( returnValue, 0., 1.); \n    \n    returnValue = 1. - returnValue;\n    return returnValue;\n}\n\nvec3 getMix(float a, float b, vec3 color, float remove)   \n{\n    return mix(color, vec3(0.), getDistance(a, b, remove));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float a = noise(uv*16.)*1.;\n    \n    float d = a;\n    \n    vec3 color = getMix(d, 0.0, vec3(1.,0.,0.), 0.5);\n    color += getMix(d, 0.5, vec3(0.,1.,0.), 0.98);\n    color += getMix(d, 1.0, vec3(0.,0.,1.), 0.5);   \n \n    \n    //color = vec3(a);\n    \n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}