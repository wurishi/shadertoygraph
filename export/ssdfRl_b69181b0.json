{"ver":"0.1","info":{"id":"ssdfRl","date":"1657036935","viewed":73,"name":"My simple wavey rectangle","username":"IdeaSquirrel","description":"From the shadertoy tutorials on The Art of Code YT channel. Tried to explain why the eyes were weird and explained the fix. Would be easier to do it visually but I tried. Hopefully it makes sense to me in 6 months!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["smiley","theartofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n  The Art of Code tutorial 3 + 4\n  https://www.youtube.com/watch?v=bigjgiavOM0\n  https://www.youtube.com/watch?v=jKuXA0trQP\n\n  Unoffical Shadertoy blog\n  https://shadertoyunofficial.wordpress.com/2019/01/02/programming-tricks-in-shadertoy-glsl/\n*/\n\n#define BLUR 0.75/iResolution.y\n#define RADIUS .3\n#define EYE_RADIUS .05\n#define MOUTH_RADIUS .2\n\nfloat Circle(vec2 uv, vec2 pos, float r, float blur) {\n    return smoothstep(r + blur, r - blur, length(uv - pos));\n}\n\nfloat Band(float t, float start, float end, float blur) {\n    return smoothstep(start - blur, start + blur, t) \n            * smoothstep(end + blur, end - blur, t);\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur) {\n    return Band(uv.x, left, right, blur) \n            * Band(uv.y, bottom, top, blur);\n}\n\n// a == t => 0\n// b == t => 1\n// normalize t within 0 - 1\nfloat remap01(float a, float b, float t) {\n    return (t - a) / (b - a);\n}\n\n// a == t => c\n// b == t => d\n// normalize t from a <= t <= b within the c <= remap(a,b,t) <= d domain\nfloat remap(float a, float b, float c, float d, float t) {\n    return remap01(a, b, t) * (d - c) + c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = (fragCoord - 0.5*iResolution.xy) / iResolution.y;\n    \n    float x = uv.x;\n    \n    float m = sin(iTime+x*8.) * .1;\n    float y = uv.y-m;\n    \n    float blur = remap(-.5, .5, .01, .25, x);\n    \n    // mix this up, e.g. blur = pow(blur * 4., 3.);\n    blur *= blur;\n    \n    float mask = Rect(vec2(x,y), -.5, .5,-.1, .1, blur);\n\n    \n    // set colour\n    vec3 col = vec3(1.,1.,1.)*mask;\n\n    // Output to screen\n    fragColor = vec4(pow(col, vec3(1./2.2)), 1.0);\n}","name":"Image","description":"","type":"image"}]}