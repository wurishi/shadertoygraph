{"ver":"0.1","info":{"id":"4tGBR1","date":"1541709202","viewed":215,"name":"Trippy Cosmic Force of Mu 2 ","username":"pelleman","description":"Tweaked Cosmic Force of Mu 2 into something more up-tempo.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["trippy","hypnotizing","psy","energy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A Trippy/Psytrance version of https://www.shadertoy.com/view/MtKfzz by beervgeer.\n// Best viewed in fullscreen with loudspeakers on high volume :-).\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n#define time iTime\n#define resolution iResolution.xy\n#define size 0.0240525\n#define lineSize 0.24540144\n#define blur 0.227794\n#define grid 9.510933\n#define morph 5.2208757\n#define delayAmount 3.223359\n#define delay2 6.429779\n#define speed 0.39144516\n\n\nfloat impulse( float k, float x )\n{\n    float h = k*x;\n    return h*exp(1.0-h);\n}\n\nfloat plot(float dis){\n   float pct = smoothstep(dis,dis+blur,0.5)-smoothstep(lineSize+dis,lineSize+dis+blur,0.5);     \n  return   pct ;\n}\n\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 res = vec2(0);\n    res.x = resolution.x*0.5625;\n    res.y = resolution.y;\n    \n   vec2 st = gl_FragCoord.xy/res;\n st.x -= 0.35;\n  float d = 0.0;\n\n  // Remap the space to -1. to 1.\n  st = st *2.-1.;\n  \n  // Number of sides of your shape\n  int N = 4;\n\n  // Angle and radius from the current pixel\n  vec3 colorNew = vec3(0);\n  \n  for(int i=0;i<5;i++) {\n      \n      float m = (float(i)/5.);\n      st.y += size*m*sin(time/3.);\n      float a = atan(st.x,st.y)+PI+(morph*m) + (0.03*m * sin(time));\n      float r = TWO_PI/float(N);\n      \n      d = cos(floor(.5+a/r)*r-a )*length(st)*abs(cos(time/r-a)*sin(time*0.1));\n      d = impulse(d,delayAmount);\n      vec3 color = vec3(0.0);\n      float check = delay2 * (1.-length(st));\n      color.r = plot(fract(d*grid - check + time*speed));\n      color.g = plot(fract(d*grid - check + time*speed*0.8));\n      color.b = plot(fract(d*grid - check + time*speed*0.6));\n      colorNew+= ( color*m );\n    }\n    \n    \n \n   vec3 hue = rgb2hsb(colorNew);\n    hue.x = 0.6;\n    hue.y = 0.5;\n    hue.y = 0.5;\n    fragColor = vec4( hsb2rgb(hue)-colorNew*0.2 ,1.);\n\n  \n}","name":"Image","description":"","type":"image"}]}