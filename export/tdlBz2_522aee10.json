{"ver":"0.1","info":{"id":"tdlBz2","date":"1588683104","viewed":58,"name":"Windless Mandelbrot Set","username":"Windless","description":"Just a quick test to try displaying mandelbrot set.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fc(vec2 c, vec2 z) {\n\treturn vec2(c.x + z.x * z.x - z.y * z.y, c.y + 2. * z.x * z.y);\n}\n\nvec2 mandelbrot(vec2 c) {\n    int i=0;\n    \n    vec2 z = vec2(0., 0.);\n    vec2 oz = vec2(0., 0.);\n    \n    while( (length(z) < 1.5) ) {\n\n        oz = z;\n        z = fc(c, z);\n        i +=1;\n        \n        if (i > 100) {\n            \n            return vec2(0., 0.);\n        }\n    }\n    \n    return vec2(1.,1.) * float(i) / 100.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy * 3. - 2.) * 100. / (100. + iTime );\n\n    // Output to screen\n    fragColor = vec4(mandelbrot(uv), 0., 1.);\n}","name":"Image","description":"","type":"image"}]}