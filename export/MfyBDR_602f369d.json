{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"//sd functions by IQ\n\nfloat hash11(float p)\n{\n    vec2 p2 = fract(vec2(p * 5.3983, p * 5.4427));\n    p2 += dot(p2.yx, p2.xy + vec2(21.5351, 14.3137));\n    return fract(p2.x * p2.y * 95.4337)*0.5+0.5;\n}\n\nmat2 rotate(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nfloat sdTriangle( in vec2 p, in vec2 p0, in vec2 p1, in vec2 p2 )\n{\n    vec2 e0 = p1-p0, e1 = p2-p1, e2 = p0-p2;\n    vec2 v0 = p -p0, v1 = p -p1, v2 = p -p2;\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min(min(vec2(dot(pq0,pq0), s*(v0.x*e0.y-v0.y*e0.x)),\n                     vec2(dot(pq1,pq1), s*(v1.x*e1.y-v1.y*e1.x))),\n                     vec2(dot(pq2,pq2), s*(v2.x*e2.y-v2.y*e2.x)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdArc( in vec2 p, in vec2 sc, in float ra, float rb )\n{\n    p.x = abs(p.x);\n    return ((sc.y*p.x>sc.x*p.y) ? length(p-sc*ra) : \n                                  abs(length(p)-ra)) - rb;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nvec3 col(float val, vec3 tint)\n{\n   return (val > 0.01 ? vec3(0.0) : tint);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec2 lampPos = vec2(uv.x + 1.0, uv.y + 0.05);\n    vec2 lampPos2 = vec2(lampPos.x, lampPos.y + 0.7);\n    float lampStand0 = sdBox(lampPos, vec2(0.03, 0.8));\n    float lampStand1 = sdBox(lampPos2, vec2(0.06, 0.2));\n    \n    vec2 lampPos3 = vec2(lampPos.x - 0.2, uv.y - 0.7);\n    float tb = 3.14*(0.5+0.5*cos(3.14 * 0.65));\n    float rb = 1.*(0.5+0.5*cos(3.14 * 0.885));\n    vec2  sc = vec2(sin(tb),cos(tb));\n    vec2 rotatedUV = rotate(3.14 * 0.25) * lampPos3;\n    float lampArc = sdArc(rotatedUV, sc, 0.2, rb);\n    \n    vec2 lampPos4 = vec2(lampPos.x - 0.4, lampPos.y - 0.95);\n    float lampEnd = sdBox(lampPos4, vec2(0.15, 0.04));\n    \n    float light = sdTriangle(\n        vec2(-0.6, 0.4), \n        vec2(uv.x-0.5, uv.y+1.35),\n        vec2(uv.x+0.25, uv.y+1.35),\n        vec2(uv.x, uv.y - 0.5));\n        \n    uv =1.+fragCoord/iResolution.xy;\n    \n    float rain =1.-fract(uv.y*4.*hash11(floor(uv.x*200.)) + iTime*1.)*4.;\n    \n    vec3 val = vec3(0.);\n    vec3 lightColor = vec3(0.95, 0.89, 0.58);\n    float lightControl = 1.0;\n    if(mod(iTime,5.0) > 4.85)\n    {\n        lightControl = fract(iTime*11.0) * 0.5 + 0.5;\n    }\n    vec3 l1 = col(light, mix(lightColor*0.2, lightColor,lightControl));\n    vec3 ls0 = col(lampStand0, vec3(0.7));\n    vec3 ls1 = col(lampStand1, vec3(0.7));\n    vec3 lA = col(lampArc, vec3(0.7));\n    vec3 lE = col(lampEnd, vec3(0.7));\n    \n    l1 = (lE.x > 0.0 || ls0.x > 0.0) ? vec3(0.0) : l1;\n    ls0 = ls1.x > 0.0 ? vec3(0.0) : ls0;\n    ls1 = lA.x > 0.0 ? vec3(0.0) : ls1;\n    lA = (lE.x > 0.0 || ls0.x > 0.0) ? vec3(0.0) : lA;\n    \n    val += l1 + 0.1 * vec3(rain);\n    val += ls0;\n    val += ls1;\n    val += lA;\n    val += lE;\n    \n    rain = val.x > 0.0 ? 0.0 : rain;\n    vec3 col = val + vec3(rain);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfyBDR","date":"1733928546","viewed":55,"name":"Rain Noir","username":"theonlyrudey","description":"Rain Noir","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","sdf","rain","noir"],"hasliked":0,"parentid":"","parentname":""}}