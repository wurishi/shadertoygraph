{"ver":"0.1","info":{"id":"ldtSDs","date":"1462287902","viewed":718,"name":"two lines hue rotation","username":"BeRo","description":"two lines hue rotation","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["hueshift","huerotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb2hsv(vec3 c){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c){\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 hueRotation(vec3 c, float hueRotationAngle){ // <= this is the two lines hue rotation routine  \n    // By Benjamin 'BeRo' Rosseaux, CC0 licensed \n    vec3 hueRotationValues = vec3(0.57735, sin(vec2(radians(hueRotationAngle)) + vec2(0.0, 1.57079632679)));\n    return mix(hueRotationValues.xxx * dot(hueRotationValues.xxx, c), c, hueRotationValues.z) + (cross(hueRotationValues.xxx, c) * hueRotationValues.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec3 c = texture(iChannel0, uv).xyz;\n   \n   \n  float hueRotationAngle = iTime * 180.0;\n      \n  c = (abs(fragCoord.x - (iResolution.x * 0.5)) < 1.0) ?\n        vec3(1.0) :\n        ((fragCoord.x < (iResolution.x * 0.5)) ?\n           hsv2rgb(rgb2hsv(c.xyz) + vec3(hueRotationAngle / 360.0, 0.0, 0.0)) : \n           hueRotation(c, hueRotationAngle));\n    \n  fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}