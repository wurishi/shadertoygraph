{"ver":"0.1","info":{"id":"lXVSWD","date":"1720008723","viewed":73,"name":"ARTS1308 HW3 London Drunkard","username":"lyhokia","description":"ARTS1308 HW3 London Drunkard","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// MIT Yihang Liu\n#define INTENSITY 0.3\n// What gray level noise should tend to.\n#define MEAN 0.0\n// Controls the contrast/variance of noise.\n#define VARIANCE 0.5\n\n// Algorithm employed by photoshop to desaturate the input\n// http://stackoverflow.com/questions/9320953/what-algorithm-does-photoshop-use-to-desaturate-an-image\n// https://www.shadertoy.com/view/lsdXDH\nvec3 photoshop_desaturate(vec3 color)\n{\n    float bw = (min(color.r, min(color.g, color.b)) + max(color.r, max(color.g, color.b))) * 0.5;\n    return vec3(bw, bw, bw);\n}\n\n\n\n\nfloat gaussian(float z, float u, float o) {\n    return (1.0 / (o * sqrt(2.0 * 3.1415))) * exp(-(((z - u) * (z - u)) / (2.0 * (o * o))));\n}\n\n\nvec3 channel_mix(vec3 a, vec3 b, vec3 w) {\n    return vec3(mix(a.r, b.r, w.r), mix(a.g, b.g, w.g), mix(a.b, b.b, w.b));\n}\n\n\nvec3 overlay(vec3 a, vec3 b, float w) {\n    return mix(a, channel_mix(\n        2.0 * a * b,\n        vec3(1.0) - 2.0 * (vec3(1.0) - a) * (vec3(1.0) - b),\n        step(vec3(0.5), a)\n    ), w);\n}\n\nmat2 rotateMat(float theta) {\n    return mat2(\n        cos(theta), -sin(theta),\n        sin(theta), cos(theta)\n    );\n}\n\nvoid mainImage( out vec4 color, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime * 2.1;\n    float t_glow = iTime * 0.5;\n    float t_rotate = iTime * 0.9;\n    float t_shake = iTime * 0.35;\n    \n    vec2 pos = uv;\n    vec2 centor = vec2(.5, .5);\n    vec2 vec_to_centor = (pos - centor) / 1.6;\n    float theta_speed = sin(t_rotate);\n    float theta = theta_speed * length(vec_to_centor);\n    mat2 rotate = rotateMat(theta);\n    vec2 rotated = rotate * vec_to_centor + centor;\n    \n    centor = vec2(.5, -.3);\n    vec_to_centor = rotated - centor;\n    rotate = rotateMat(0.33 * sin(t_shake));\n    rotated = rotate * vec_to_centor + centor;\n    \n    \n    // Read original photo\n    color.rgb = texture(iChannel1, rotated).rgb;\n    \n    // Desaturates\n    color.rgb = photoshop_desaturate(color.rgb);\n\n\n    // Tuning the other Layer\n    float mixb = smoothstep(0.2, 1.0, texture(iChannel1, rotated).b);\n    float mixr = smoothstep(0.3, 0.8, texture(iChannel1, rotated).r);\n    color.rgb = mix(color.rgb * vec3(mixb), color.rgb * vec3(mixr), abs(sin(t_glow)));\n\n\n    // Apply grain effect, reference: https://www.shadertoy.com/view/4t2fRz\n    float seed = dot(uv, vec2(12.9898, 78.233));\n    float noise = fract(sin(seed) * 43758.5453 + t);\n    noise = gaussian(noise, float(MEAN), float(VARIANCE) * float(VARIANCE));\n    float w = float(INTENSITY);\n    vec3 grain = vec3(noise) * (1.0 - color.rgb);\n    color.rgb = overlay(color.rgb, grain, w);\n}\n","name":"Image","description":"","type":"image"}]}