{"ver":"0.1","info":{"id":"dtcBR7","date":"1701076794","viewed":39,"name":"render chinese character example","username":"Huahuahuaaaa","description":"Original render character method from here: https://www.shadertoy.com/view/Md23DV","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["character"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int CharacterArray[100]=int[100](\n0,0,0,0,1,0,0,0,0,0,\n0,0,0,1,0,0,1,0,1,0,\n0,0,1,0,0,0,1,1,0,0,\n0,1,1,0,0,0,1,0,0,0,\n1,0,1,0,0,1,1,0,0,0,\n0,0,1,0,1,0,1,0,0,0,\n0,0,1,0,0,0,1,0,0,0,\n0,0,1,0,0,0,1,0,0,1,\n0,0,1,0,0,0,1,1,1,1,\n0,0,0,0,0,0,0,0,0,0\n);\n\nmat2 rot(float th) { return mat2(cos(th), -sin(th), sin(th), cos(th)); }\n\nfloat square(vec2 r, vec2 bottomLeft, float side) {\n\tvec2 p = r - bottomLeft;\n\treturn ( p.x > 0.0 && p.x < side && p.y>0.0 && p.y < side ) ? 1.0 : 0.0;\n}\n\nfloat character(vec2 r, vec2 bottomLeft, float charCode, float squareSide) {\n\tvec2 p = r - bottomLeft;\n\tfloat ret = 0.0;\n\tfloat num, quotient, remainder, divider;\n\tfloat x, y;\t\n\tnum = charCode;\n\tfor(int i=0; i<20; i++) {\n\t\tfloat boxNo = float(19-i);\n\t\tdivider = pow(2., boxNo);\n\t\tquotient = floor(num / divider);\n\t\tremainder = num - quotient*divider;\n\t\tnum = remainder;\n\t\t\n\t\ty = floor(boxNo/4.0); \n\t\tx = boxNo - y*4.0;\n\t\tif(quotient == 1.) {\n\t\t\tret += square( p, squareSide*vec2(x, y), squareSide );\n\t\t}\n\t}\n\treturn ret;\n}\n\nfloat character1(vec2 r, vec2 bottomLeft, int charCode[100], float squareSide) {\n\tvec2 p = r - bottomLeft;\n\tfloat ret = 0.0;\n\tfor(int p_x=0; p_x<10; p_x++){\n        for(int p_y=9; 0<=p_y; p_y--){\n            int i = (9 - p_y) * 10 + p_x;\n            if(charCode[i]==1){\n                ret += square( p, squareSide*vec2(p_x, p_y), squareSide );\n            }\n        }\n    }\n\treturn ret;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat G = 990623.; // compressed characters :-)\n\tfloat t = iTime;\n    \n\tvec2 r = (fragCoord.xy - 0.5*iResolution.xy) / iResolution.y;\n\tvec2 rG = rot(2.*3.1415*smoothstep(0.,1.,mod(1.5*t,4.0)))*r;\n\tvec2 rStripes = rot(0.2)*r;\n\t\t\t\t\n\tfloat xMax = 0.5*iResolution.x/iResolution.y;\n    float letterHeight= 0.8;\n\tfloat side = letterHeight/10.;\n    float letterWidth = letterHeight;\n\tfloat space = 2.0*xMax*0.1/5.0;\n\t\n\tr += 0.001; // to get rid off the y=0 horizontal blue line.\n\tfloat maskGS = character1(r, vec2(-.5*letterWidth, -.5*letterHeight), CharacterArray, side);\n\tfloat maskG = character1(rG, vec2(-.5*letterWidth, -.5*letterHeight), CharacterArray, side);\n\tfloat maskStripes = step(0.25, mod(rStripes.x - 0.5*t, 0.5));\n\t\n\tfloat i255 = 0.00392156862;\n\tvec3 blue = vec3(255., 248., 231.)*i255;\n\tvec3 pink = vec3(232., 77., 91.)*i255;\n\tvec3 dark = vec3(59., 59., 59.)*i255;\n\tvec3 light = vec3(145., 136., 117.)*i255;\n\tvec3 green = vec3(166., 123., 191.0)*i255;\n\n\tvec3 pixel = blue;\n\tpixel = mix(pixel, light, maskGS);\n\tpixel -= 0.1*maskStripes;\t\n\tpixel = mix(pixel, green, maskG);\n\t\n\tfloat dirt = pow(texture(iChannel0, 4.0*r).x, 4.0);\n\tpixel -= (0.2*dirt - 0.1)*(maskG); // dirt\n\tpixel -= smoothstep(0.45, 2.5, length(r));\n\tfragColor = vec4(pixel, 1.0);\n}","name":"Image","description":"","type":"image"}]}