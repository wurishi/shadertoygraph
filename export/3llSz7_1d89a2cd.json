{"ver":"0.1","info":{"id":"3llSz7","date":"1562466104","viewed":280,"name":"MeshTube","username":"gaz","description":"3d","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.0)\n#define TAU PI*2.0\n#define PITCH 23.0\n\nmat2 rotate(float a)\n{\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec3 rotate(vec3 p,vec3 axis,float theta)\n{\n    vec3 v = cross(axis,p), u = cross(v, axis);\n    return u * cos(theta) + v * sin(theta) + axis * dot(p, axis);   \n}\n\nvec3 hue(float t){\n    return cos((vec3(0,2,-2)/3.+t)*TAU)*.5+.5;\n}\n\nfloat lengthN(vec2 p, float n)\n{\n\tp = pow(abs(p), vec2(n));\n\treturn pow(p.x+p.y, 1.0/n);\n}\n\nfloat hash(float n)\n{\n    return fract(sin(n)*5555.5);\n}\n\nfloat smin(in float a, in float b, in float k)\n{\n    float h = clamp(0.5+0.5*(b-a)/k,0.0,1.0);\n    return mix(b,a,h)-k*h*(1.0-h);\n}\n\n// glslsandbox.com/e#37069.3 \nfloat deTetra(vec3 p, float r)\n{\n\tfloat g=0.577,s = 0.0;\n    float e=10.0;\n\ts+=pow(max(0.0,dot(p,vec3(-g,-g,-g))),e);\n\ts+=pow(max(0.0,dot(p,vec3(g,-g,g))),e);\n\ts+=pow(max(0.0,dot(p,vec3(g,g,-g))),e);\n\ts+=pow(max(0.0,dot(p,vec3(-g,g,g))),e);\n\ts=pow(s,1./e);\n\treturn s-r;\n}\n\nfloat deStellate(vec3 p,float r)\n{\n    float c=8.0;\n    p.xy-=0.5*PITCH;\n    vec3 seed = vec3(vec2(floor(p.xy/PITCH)),floor(p.z/c))+0.234;\n    p.z=mod(p.z,c)-0.5*c;\n    p.xy=mod(p.xy,PITCH)-0.5*PITCH;\n    p = rotate(p,\n        normalize(vec3(hash(seed.x),hash(seed.y),hash(seed.z))*2.0-1.0),\n        iTime*(1.3+hash(dot(seed,vec3(1,15,99)))*3.0)\n        );\n    return smin(deTetra(p,r),deTetra(-p,r),.1);\n}\n\nfloat deTube(vec3 p)\n{\n    p.xy-=0.5*PITCH;\n    vec2 seed=floor(p.xy/PITCH);\n    float z = p.z+iTime*5.+hash(dot(seed,vec2(1,50)))*50.0;\n\tp.z -= iTime*5.0;\n    p.y-=sin(z*0.15+0.6*sin(z*.5))*1.2;\n    p.x-=cos(z*0.12+0.5*cos(z*.3))*1.2;  \n    p.xy=mod(p.xy,PITCH)-0.5*PITCH;\n    \n    float de =1e9,num=7.0;\n    for(float i=-1.0;i<2.0;i+=2.0)\n    {\n        vec3 q=p;\n      \tq.xy *= rotate((smoothstep(-1.0,1.0,(mod(q.z,3.0)-1.5))+floor(q.z/3.0))*PI/num*i);\n    \tfloat a = mod(atan(q.x,q.y),TAU/num)-0.5*TAU/num;\n        q.xy = length(q.xy)*vec2(sin(a),cos(a));\n\t  \tq.y -= 3.0;\n    \tde= smin(de,lengthN(q.xy,5.0)-0.15,0.1);\n    }\n    return de*0.8;\n}\n\nvec3 transform(vec3 p)\n{\n    float c= 26.0;\n    float it = floor(iTime/c);\n    float t = mod(iTime, c);\n    t -= clamp(t, 0.0, 5.0);\n    p = rotate(p,normalize(vec3(1,hash(it)*2.0-1.0,1)),t*0.3);\n    return p;\n}\n\nfloat map(vec3 p)\n{\n    p = transform(p);\n    return min(deTube(p),deStellate(p,0.6));  \n }\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nvec3 doColor(vec3 p){\n    p = transform(p);\n    if (deStellate(p,0.6)<0.001) return hue(0.0);\n    return hue(0.05)*0.5;\n }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0.0, 0.0, 18.0);\n \tvec3 rd = normalize(vec3(uv, -3));\n\tvec3 col = clamp((hue(0.6)+0.2)*0.4*length(uv),0.0,1.0);\n\tfloat t = 0.0, d;\n \tfor(int i = 0; i < 128; i++)\n  \t{\n    \tt += d = min(map(ro + rd * t),1.0);\n    \tif(d < 0.001) break;\n  \t}\n  \tif(d < 0.001)\n  \t{\n\t  \tvec3 p = ro + rd * t;\n\t \tvec3 nor = calcNormal(p);\n    \tvec3 li = normalize(vec3(1));\n        vec3 bg = col;\n        col = doColor(p);\n        col *= clamp(dot(nor, li), 0.3, 1.0);\n        col *= max(0.5 + 0.5 * nor.y, 0.0);\n        col += pow(clamp(dot(reflect(rd, nor), li), 0.0, 1.0), 80.0);\n        col = clamp(col,0.0,1.0);\n        col = mix(bg, col, exp(-t*t*0.0001));\n  \t\tcol = pow(col, vec3(0.9));        \n    }\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}