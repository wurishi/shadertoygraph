{"ver":"0.1","info":{"id":"DdSBWc","date":"1690195708","viewed":20,"name":"PCG test","username":"Volbla","description":"Testing how to get good noise out of screen coordinates.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","hash","pcg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// PCG is supposed to be very efficient for its quality.\n// https://www.reedbeta.com/blog/hash-functions-for-gpu-rendering/\n\n#define tau 6.283185\n#define T (60.*iTime)\n\n\nfloat pcg_hash(uint n) {\n    n = n * 747796405u + 2891336453u;\n    n = ((n >> ((n >> 28u) + 4u)) ^ n) * 277803737u;\n    n ^= (n >> 22u);\n    // Scale output to [0,1)\n    return float(n) / exp2(32.);\n}\n\n\nfloat N21(float a, float b) {\n    a = mod(a, exp2(22.));\n    b = mod(b, exp2(22.));\n    \n    uint cord = (uint(a) << 6) +\n                (uint(b) << 16);\n    \n    // return pcg_hash(cord);\n    \n    uint corda = cord + (1u << 6);\n    uint cordb = cord + (1u << 16);\n    uint cordab = corda + (1u << 16);\n    \n    float noisea1 = mix(pcg_hash(cord), pcg_hash(corda), fract(a));\n    float noisea2 = mix(pcg_hash(cordb), pcg_hash(cordab), fract(a));\n    \n    return mix(noisea1, noisea2, fract(b));\n}\n\n\nfloat sparkler(float r, float v) {\n    r *= 50.; v *= 50.;\n    \n    float col = N21(r - T, v);\n    return pow(col, pow(r/4., 2.8));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n    float col = 0.;\n    \n    float r = length(uv);\n    float v = mod(atan(uv.y, uv.x), tau);\n    \n    \n    col = sparkler(r, v);\n    \n    fragColor = vec4(vec3(col), 1.0);\n}\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}