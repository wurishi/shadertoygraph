{"ver":"0.1","info":{"id":"NdKGW1","date":"1631478777","viewed":265,"name":"Oscilloscope B&W","username":"TimArt","description":"Source code: https://github.com/TimArt/3DAudioVisualizers","likes":3,"published":3,"flags":64,"usePreview":0,"tags":["music","audio","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4tlSD2","filepath":"https://soundcloud.com/sandybandnyc/holy-one-1","previewfilepath":"https://soundcloud.com/sandybandnyc/holy-one-1","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define THICKNESS 0.015\n#define BUFFER_SIZE 512.0\n\nvoid getAmplitudeForXPos (in float xPos, out float audioAmplitude)\n{\n   // Buffer size - 1\n   float perfectSamplePosition = (BUFFER_SIZE - 1.0) * xPos / iResolution.x;\n   int leftSampleIndex = int (floor (perfectSamplePosition));\n   int rightSampleIndex = int (ceil (perfectSamplePosition));\n   \n   float audioSampleDataLeft = texelFetch(iChannel0, ivec2(leftSampleIndex,1), 0).x;\n   float audioSampleDataRight = texelFetch(iChannel0, ivec2(rightSampleIndex,1), 0).x;\n   \n   audioAmplitude = mix (audioSampleDataLeft, audioSampleDataRight, fract (perfectSamplePosition));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float y = fragCoord.y / iResolution.y;\n    float amplitude = 0.0;\n    getAmplitudeForXPos (fragCoord.x, amplitude);\n\n    float r = abs (THICKNESS / (amplitude-y));\n    float wavePower = r - abs (r * 0.2);\n    \n    //vec3 colorHue = vec3(0.2, 1.0, 1.0);\n    vec3 colorHue = vec3(1.0, 1.0, 1.0);\n\n    fragColor = vec4 (colorHue * wavePower, 1.0);\n    //fragColor.xyz += 0.1 * colorHue;\n}","name":"Image","description":"","type":"image"}]}