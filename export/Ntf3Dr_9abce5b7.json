{"ver":"0.1","info":{"id":"Ntf3Dr","date":"1621864163","viewed":77,"name":"less then 3min","username":"gyabo","description":"livecoding test with REC.\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nfloat map(vec3 p) {\n    return length(mod(p, 2.0) - 1.0) - 0.5;\n}\n\nvec3 getnor(vec3 p) {\n    float t = map(p);\n    vec2 d = vec2(0.001, 0.0);\n    return normalize(vec3(\n        t - map(p + d.xyy),\n        t - map(p + d.yxy),\n        t - map(p + d.yyx)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 dir = normalize(vec3(uv, 1.0));\n    vec3 pos = vec3(0, 0, iTime);\n    float t = 0.0;\n    for(int i = 0 ; i < 100; i++) {\n        t+= map(t * dir + pos);\n    }\n    vec3 ip = t * dir + pos;\n    vec3 N = getnor(ip);\n    vec3 L = normalize(vec3(1,2,3));\n    float D = max(0.01, dot(N, L));\n    \n    vec3 col = vec3(t * 0.1) * D * N + t * 0.1;\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}