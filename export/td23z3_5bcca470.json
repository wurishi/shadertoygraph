{"ver":"0.1","info":{"id":"td23z3","date":"1550045178","viewed":181,"name":"Local Space Polka","username":"valler","description":"Local space texture coordinates","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["ray","texture","space","distance","march","transform","local"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nconst vec3 target = vec3(0,0,0);\nconst float focalLength = 1.4;\nconst vec3 wup = vec3(0,1,0);\nconst float tMin = 1.e-3;\nconst float tMax = 5.;\nconst int spp = 4;\n\n// https://www.shadertoy.com/view/4lVcRm\nvec2 R2seq(int n)\n{\n\treturn fract(vec2(n) * vec2(0.754877666246692760049508896358532874940835564978799543103, 0.569840290998053265911399958119574964216147658520394151385));\n}\n\nfloat D(vec3 p, vec3 r)\n{\n    float a = length(p)-r.x;\n    vec3 v = abs(p) - r;\n    float b = length(max(v,0.)) + min(max(v.x,max(v.y,v.z)),0.);\n    return mix(a,b,.5+.5*sin(time));\n}\n\n\nvoid T (inout vec3 color, inout float t, inout vec3 p, inout vec3 ro, inout vec3 rd, inout mat3 mo, inout float ud, inout float sd)\n{\n    sd = D(p, vec3(0.2));\n    ud = abs(sd);\n    color += step(ud,tMin)*mix(vec3(1),vec3(1,0,0),smoothstep(.3,.35,distance(fract(p*sin(.1*time)*40.), vec3(.5))));\n    ro = ro+rd*ud;\n    p = mo*ro;\n    t += ud;\n}\n\nvoid C (inout vec3 color, vec2 uv, float dt, vec3 ro, mat3 mo, mat3 mc, int i)\n{\n    vec3 p = mo*ro;\n    vec3 rd = vec3(normalize(vec3(uv+(R2seq(i)-.5)*dt,focalLength)));\n    rd.x *= -1.;\n    rd = mc*rd;\n    float sd = D(p, vec3(0.2));\n    float ud = abs(sd);\n    for (float t = 0.; t < tMax && ud > tMin; T(color,t,p,ro,rd,mo,ud,sd));\n}\n\nvoid mainImage (out vec4 _, vec2 fragCoord)\n{\n    float dt = 1./max(iResolution.x,iResolution.y);\n    vec2 uv = (fragCoord-.5*iResolution.xy)*dt;\n    vec3 rd = normalize(vec3(uv,focalLength));\n    vec3 ro = vec3(0,0,-2.5-sin(time));\n    vec3 fo = normalize(target-ro);\n    vec3 ri = cross(wup,fo);\n    vec3 up = cross(fo,ri);\n    mat3 mc = mat3(ri,up,fo);\n    \n    float s = sin(time);\n    float c = cos(time);\n    mat3 mo = \n        mat3(1,0,0,0,c,-s,0,s,c)*\n        mat3(s,c,0,c,-s,0,0,0,1)*\n        mat3(c,0,s,0,1,0,-s,0,c);\n    vec3 color = vec3(0);\n    for (int i = 0; i < spp; C(color, uv, dt, ro, mo, mc, i++));    \n\t_ = vec4(sqrt(color/float(spp)),1);\n}","name":"Image","description":"","type":"image"}]}