{"ver":"0.1","info":{"id":"msyyRm","date":"1695895830","viewed":48,"name":"rotaion matrix fractal","username":"ChthonicF4","description":"its cool","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palet(float t){\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(.5,.5,.5);\n    vec3 c = vec3(1.,1.,1.);\n    vec3 d = vec3(0.,.333,.666);\n    \n    return a + b*cos(6.28*(c*t + d));\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2. -iResolution.xy)/iResolution.y *.2;\n    \n    float angle = sin(iTime*.02)*.025 ;\n    float total = 70. ;\n    \n    uv *= mat2(\n    cos(iTime*.05),-sin(iTime*.05),\n    sin(iTime*.05),cos(iTime*.05)\n    );\n    \n    for(float i=0.;i<total;++i){\n        // rotate\n        uv *= mat2(\n        cos(angle),-sin(angle*i),\n        sin(angle*i),cos(angle*i)\n        );\n        // doubble it\n        uv = abs(uv) -.5;\n    }\n    \n    vec3 col = palet(angle*25.);\n    \n    col *= length(uv)*2.;\n    \n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}