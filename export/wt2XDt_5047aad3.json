{"ver":"0.1","info":{"id":"wt2XDt","date":"1567552946","viewed":191,"name":"lens bug","username":"Pyramid","description":"following a short calibration, it will proceed to find your dimension. please dont halt the process once started\none universe will be over quickly. just calm down and sit back. relax and maybe hold on to your hat","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lens","dimensionalcalibrator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(vec2 origin, vec2 target)\n{\n    return abs(sqrt(pow(target.x+origin.x,2.)+pow(target.y+origin.y,2.)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //pixel coord center origo\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=vec2(.5);\n    \n    //set aspect ratio\n    float ratio=iResolution.x/iResolution.y;\n    uv.x*=ratio;\n    \n    //set time\n    float t = 39.2+iTime/3.;//*.2+iTime*+sin(iTime*8.)/4000.;\n\n    //save o\n    vec2 o=uv;\n    \n    //Fisheye anim\n    //uv.x+=sin(t*6.)/6.;\n    //uv.y+=sin(t*2.)/12.;\n    \n    //Fisheye\n    float d=length(uv*2.);\n    float z = sqrt(1.0 - d * d);\n    float rad = atan(d, z) / 3.14159;\n    float phi = atan(uv.y, uv.x);\n    uv = vec2(rad*cos(phi)+.5,rad*sin(phi)+.5);\n    uv-=vec2(.5);\n    \n    //save o2\n    vec2 o2 = uv;\n\t\n    //uv=o;\n    \n    //circles ani\n    uv.x+=sin(t*6.)/6.;\n    uv.y+=sin(t*2.)/12.;\n    \n\t//circles\n    float distFromCenter = dist(o,uv);\n    float circles = sin(distFromCenter*-5.);\n\n    //back to o2\n    uv = o2;\n    \n    float r,g,b;\n    \n    r=g=b=circles/16.;\n    \n    if(uv.x > o.x + o.y*sin(t))\n        r+=.1;\n    \n    float size = .15*sin(t/80.);\n    float size2 = .003*(.6+sin(t*8.)/6.);\n\n    \n    for(float i=-500.; i<500.; i++)\n    {\n        vec2 position = vec2(sin(t+i*size)*.212003,cos(t-i*size)*.4003);\n        \n        for(float sub=1.;sub<3.;sub++)\n        {\n            vec2 position2=position*.6;\n            position2 += vec2(sin(t+i)*.3*sub/2.,cos(t-i)*.3*sub/2.);\n            position2/=vec2(1.0,1.2);\n        \tg+=smoothstep(size2+size2, 0., distance(uv, position2))/2.;\n            r+=smoothstep(size2+size2, .0, distance(uv, position2))*.6;\n        }\n    }\n\n    vec3 col = vec3(r,g,b);\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}