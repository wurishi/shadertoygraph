{"ver":"0.1","info":{"id":"DddfzN","date":"1696931329","viewed":120,"name":"HYPERPLAID","username":"ENDESGA","description":"anti-aliased checkerboard and grid lines.\nnot sure if this is the best implementation or not","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["grid","checkerboard","inversion","plaid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float checker(vec2 pos){\n    vec2 checker = mod(floor(pos), 2.0);\n    vec2 dist = min(fract(pos), 1.0 - fract(pos));\n    return mix(\n        1.0,\n        checker.x + checker.y,\n        smoothstep(0.0, fwidth(length(pos)), min(dist.x, dist.y))\n    );\n}\n\nfloat liner(vec2 pos){\n    vec2 grid = abs(fract(pos - 0.25) - 0.25) / fwidth(length(pos));\n    return 1.-clamp(min(grid.x, grid.y), 0., 1.);\n}\n\nvoid mainImage( out vec4 O, in vec2 I ){\n    vec2 uv = (2.0*I-iResolution.xy)/min(iResolution.x, iResolution.y);\n    uv = (uv/dot(uv,uv)) * (5.+(sin(iTime*.5)*4.5));\n    float l = checker(uv);\n    O = vec4(vec3(l)*vec3(.5,0,.125), 1.0);\n    O += liner(uv);\n}\n","name":"Image","description":"","type":"image"}]}