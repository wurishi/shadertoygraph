{"ver":"0.1","info":{"id":"dlyfWc","date":"1705574071","viewed":109,"name":"Perlin Noise Animated Clouds","username":"Aleksandr73591","description":"Hello, I wrote a Simple Perlin Noise Clouds animated shader. No textures used because - \"Math is power\":).\n\nHave a nice day!\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","clouds","perlin","sky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Written by Aleksandr Pogosov,\n// aleksandr7937937@gmail.com\n\nfloat random2D(vec2 v, float seed)\n{\n    return fract(sin(dot(v , vec2(7.5912,3.89273)))*4293.12978 * seed);\n}\n\n\n\nfloat PerlinNoise(vec2 v, vec2 movDir, float speed, float seed)\n{\n    v += movDir * iTime*speed;\n    vec2 v_Floor = floor(v);\n    vec2 v_1_0 = v_Floor + vec2(1.0,0.0);\n    vec2 v_0_1 = v_Floor + vec2(0.0,1.0);\n    vec2 v_1_1 = v_Floor + vec2(1.0,1.0);\n    \n    vec2 lerp = fract(v);\n    \n    float positiveCos = (cos(iTime)+ 1.0) * 10.0 ;\n    vec2 smoothLerp =  lerp * lerp * (3.0 - 2.0 * lerp);\n    \n    float noise_Floor = random2D(v_Floor , seed);\n    float noise_1_0 = random2D(v_1_0 , seed);\n    float noise_0_1 = random2D(v_0_1 , seed);\n    float noise_1_1 = random2D(v_1_1 , seed);\n    \n    float noise_Final_0 = mix(noise_Floor, noise_1_0, smoothLerp.x);\n    float noise_Final_1 = mix(noise_0_1, noise_1_1, smoothLerp.x );\n    \n    return mix(noise_Final_0, noise_Final_1, smoothLerp.y );\n    \n}\n\n\nfloat NoiseDensity(vec2 v, vec2 movDir, float speed, float seed, float amplitudeChange,\nint octaves,  float clarity,float ratioOfDensity, float amountOfDensity)\n{\n    float density = 0.0;\n    float amplitude = 1.0;\n    \n    for(int i = 0; i < octaves; i++)\n    {\n       density+= PerlinNoise(v * pow(clarity, float(i)),movDir, speed, seed) * amplitude;\n       amplitude *=  amplitudeChange;\n    }\n    \n    return ratioOfDensity * (density + amountOfDensity);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/ iResolution.y;\n    vec2 originalUv = uv;\n    vec2 uv_1 = uv *  2.0;\n    vec2 uv_2 = uv * 10.0;\n    \n    vec2 uv_3 = uv * 4.0;\n\n    float clouds_1 = NoiseDensity(uv_1, vec2(1.0,1.0),0.3,  7.3223213, -0.8, 8, 2.0,\n    2.3, -0.6);\n    float clouds_2 = NoiseDensity(uv_2,  vec2(1.0,1.0),0.2, 91.3223213, -0.75, 8, 2.0,\n    3.3, -0.3);\n    \n    float clouds_3 = NoiseDensity(uv_3,  vec2(1.0,1.0),0.1, 72.3223213, -0.65, 8, 2.0,\n    0.4, -0.1);\n    \n    float clouds_1_2 = clouds_1 *clouds_2; \n    vec3 skyCol = mix(vec3(0.0,0.75,1.0), vec3(0.0,0.55,1.0), originalUv.y) ;\n    vec3 col;\n    vec3 cloudCol_1 = vec3(1.0,1.0,1.0);\n    \n    vec3 cloudCol_3 = vec3(1.0, 1.0,1.0);\n    col = mix(skyCol, cloudCol_3,clouds_3);\n    col = mix( col, cloudCol_1, clouds_1_2);\n \n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}