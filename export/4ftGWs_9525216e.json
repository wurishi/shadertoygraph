{"ver":"0.1","info":{"id":"4ftGWs","date":"1712262783","viewed":41,"name":"Figures 1 1 ","username":"vinokurovgeorgy","description":"First exercise ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["figures"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 BGColor = vec3(0.0, 0.0, 0.0);\nconst int m=24; const int n=8;\nvec3 norma,polygons[m];\nint inds[n]=int[n](0,3,6,9,12,15,18,21);\nvec3 color[n] = vec3[n](vec3(0.0,0.0,1.0),vec3(.0,.5,0.0),vec3(0.,5.0,0.0),vec3(0.0,0.5,0.0),vec3(1.0,5.0,0.0),vec3(1.0,0.5,0.0),vec3(5.0,5.0,5.0),vec3(1.0,0.5,0.5));\nfloat getz(int i, vec3 polygons[m], vec2 uv)\n{\n    float z,D,x1,x2,x3,y1,y2,y3,z1,z2,z3;\n    x1=polygons[inds[i]].x;\n    x2=polygons[inds[i]+1].x;\n    x3=polygons[inds[i]+2].x;\n    y1=polygons[inds[i]].y;\n    y2=polygons[inds[i]+1].y;\n    y3=polygons[inds[i]+2].y;\n    z1=polygons[inds[i]].z;\n    z2=polygons[inds[i]+1].z;\n    z3=polygons[inds[i]+2].z;\n    norma=cross(vec3(x2-x1,y2-y1,z2-z1),vec3(x3-x1,y3-y1,z3-z1)); \n    D=-norma.x*x1-norma.y*y1-norma.z*z1;\n    z=(-norma.x*uv.x-norma.y*uv.y-D)/norma.z; \n    return z;\n}\n/*bool check(vec3 polygons[m], int inds[n],int i, vec2 uv)\n{\n    int k;\n    bool f=true;\n    if(i<n-1)\n        k=inds[i+1]-inds[i];\n    else\n        k=m-inds[i];\n    for(int j=1;j<k;j++)\n    {\n        if(turn(polygons[inds[i]+j-1].x,polygons[inds[i]+j-1].y,polygons[inds[i]+j].x,polygons[inds[i]+j].y,uv.x,uv.y)>0.)\n        {\n            f=false;\n        }\n    }\n    return f;\n}*/\nfloat turn(float ax,float ay,float bx,float by, float cx,float cy)\n{\n    return sign((bx-ax)*(cy-ay)-(cx-ax)*(by-ay));\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv=fragCoord/iResolution.xy;\n    fragColor=vec4(BGColor, 1.0);\n    vec3 col=BGColor;\n    uv-=0.5;\n    uv.x*=iResolution.x/iResolution.y;\n    //1\n    polygons[0]=vec3(0.0,0.0,0.4);//0\n    polygons[1]=vec3(0.0,0.4,0.2);//1\n    polygons[2]=vec3(0.4,-0.2,0.2);//2\n    //2\n    polygons[3]=vec3(0.0,0.0,0.4);//0\n    polygons[4]=vec3(-0.4,-0.2,0.2);//3\n    polygons[5]=vec3(0.0,0.4,0.2);//2\n    //3\n    polygons[6]=vec3(0.0,0.0,0.4);//0\n    polygons[7]=vec3(0.4,-0.2,0.2);//2\n    polygons[8]=vec3(-0.4,-0.2,0.2);//3\n    //4\n    polygons[9]=vec3(0.0,0.4,0.2);//1\n    polygons[10]=vec3(0.4,-0.2,0.2);//2\n    polygons[11]=vec3(-0.4,-0.2,0.2);//3\n    //5\n    polygons[12]=vec3(-0.5,0.4,0.3*cos(iTime));\n    polygons[13]=vec3(0.5,0.4,0.3*cos(iTime));\n    polygons[14]=vec3(0.0,-0.3,0.3*cos(iTime));\n    //6\n    polygons[15]=vec3(-0.5,-0.3,0.3*sin(iTime));\n    polygons[16]=vec3(0.0,0.5,0.3*sin(iTime));\n    polygons[17]=vec3(0.5,-0.3,0.3*sin(iTime));\n    //7\n    polygons[18]=vec3(-0.1+0.2*sin(iTime),0.2+0.2*cos(iTime),0.3);\n    polygons[19]=vec3(0.1+0.2*sin(iTime),0.2*cos(iTime),0.3);\n    polygons[20]=vec3(-0.1+0.2*sin(iTime),-0.2+0.2*cos(iTime),0.3);\n    //8\n    polygons[21]=vec3(-0.1+0.2*sin(iTime+1.),0.2+0.2*cos(iTime+1.),0.3);\n    polygons[22]=vec3(0.1+0.2*sin(iTime+1.),0.2*cos(iTime+1.),0.3);\n    polygons[23]=vec3(-0.1+0.2*sin(iTime+1.),-0.2+0.2*cos(iTime+1.),0.3);\n    float zmax=-1.0;\n    for(int i=0;i<n;i++)\n    {\n        if((turn(polygons[inds[i]].x,polygons[inds[i]].y,polygons[inds[i]+1].x,polygons[inds[i]+1].y,uv.x,uv.y)<0.)&&\n           (turn(polygons[inds[i]+1].x,polygons[inds[i]+1].y,polygons[inds[i]+2].x,polygons[inds[i]+2].y,uv.x,uv.y)<0.)&&\n           (turn(polygons[inds[i]+2].x,polygons[inds[i]+2].y,polygons[inds[i]].x,polygons[inds[i]].y,uv.x,uv.y)<0.))\n        {\n            if(zmax<getz(i,polygons,uv))\n            {\n                zmax=getz(i,polygons,uv);\n                col=color[i];\n            }\n        }\n    }\n    fragColor=vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}