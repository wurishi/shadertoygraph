{"ver":"0.1","info":{"id":"tt2GWW","date":"1559651370","viewed":85,"name":"Triangle on the road","username":"AnnijaViktorija","description":"triangle on the road","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pointInTriangle(vec2 s, vec4 a, vec4 b, vec4 c)\n{\n    float as_x = s.x-a.x;\n    float as_y = s.y-a.y;\n    bool s_ab = (b.x-a.x)*as_y-(b.y-a.y)*as_x > 0.0 ;\n    if((c.x-a.x)*as_y-(c.y-a.y)*as_x > 0.0 == s_ab) return 0.;\n    if((c.x-b.x)*(s.y-b.y)-(c.y-b.y)*(s.x-b.x) > 0.0 != s_ab) return 0.;\n    return 1.;\n}\n\nvec4 project(vec4 vertice){\n\treturn vec4(vertice.x / vertice.z, \n                vertice.y / vertice.z, \n                vertice.z, 0);\n}\n\nvoid applyMat(inout vec4 vert[3], mat4 mat){\n    vert[0] *= mat;\n\tvert[1] *= mat;\n\tvert[2] *= mat;\n}\n\nvec3 getBarycentricCoords(vec2 p, vec4 a, vec4 b, vec4 c){\n\tfloat denominator = (b.y - c.y) * (a.x - c.x) + (c.x - b.x) * (a.y - c.y);\n\tvec3 bary = vec3(0);\n\tbary[0] = ((b.y-c.y) * (p.x - c.x) + (c.x - b.x) * (p.y - c.y)) / denominator; //u\n\tbary[1] = ((c.y-a.y) * (p.x - c.x) + (a.x - c.x) * (p.y - c.y)) / denominator; //v\n\tbary[2] = 1.0 - bary[0] - bary[1]; //w\n\treturn bary;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    vec4 vert[3];\n\tvert[0] = vec4(.3, -0.1, 0., 1);\n\tvert[1] = vec4(0., .6, 0., 1);\n\tvert[2] = vec4(-.3, -0.1, 0., 1);\n    \n    vec4 vert2[3];\n\tvert2[0] = vec4(0., 0.1, 0., 1);\n\tvert2[1] = vec4(-.01, .2, 0., 1);\n    vert2[2] = vec4(.01, .2,  0., 1);\n    \n    vec4 vert22[3] = vert2;\n        \n    vec4 vert3[3];\n\tvert3[0] = vec4(-2, -0.02, 0., 1);\n\tvert3[1] = vec4(0., -1.0, 0., 1);\n\tvert3[2] = vec4(2, -0.02, 0., 1);\n    \n    vec4 vert4[3];\n\tvert4[0] = vec4(0., -0.02, 0., 1);\n    vert4[1] = vec4(-.5, -.5, 0., 1);\n    vert4[2] = vec4(.5, -.5,  0., 1);\n\n    vec3 lightVector = vec3(.0, .0, 1.0);\n\tvec3 baseColor = vec3(0.5, 0.5, 0.2);\n    \n    vec3 Auv = vec3(0.0, 0.0, 0.);\n\tvec3 Buv = vec3(0.5, 1.0, 0.);\n\tvec3 Cuv = vec3(1.0, 0., 0.);\n    \n    mat4 rotMat = mat4(\n\t\t\tcos(iTime * 3.), \t\t0,\t-sin(iTime * 3.), \t0,   \n\t\t\t0, \t\t\t1, \t0,\t\t\t0,  \n\t\t\tsin(iTime * 3.), \t0, \tcos(iTime * 3.),\t0,\n\t\t\t0,\t\t\t0,\t0,\t\t\t1);\n\n    mat4 trans = mat4(1, 0, 0, 0,    \n\t\t\t  0, 1, 0, 0.0,   \n\t\t\t  0, 0, 1, mod(3.0-abs(iTime * 2.0),3.0),     \n\t\t\t  0, 0, 0, 1.0);\n    \n     mat4 trans2 = mat4(1, 0, 0, 0,    \n\t\t\t  0, 1, 0, 0.0,   \n\t\t\t  0, 0, 1, -mod(3.0-abs(iTime * 2.0),3.0),     \n\t\t\t  0, 0, 0, 1.0);\n    \n     mat4 trans22 = mat4(1, 0, 0, 0,    \n\t\t\t  0, 1, 0, 0.0,   \n\t\t\t  0, 0, 1, -mod(3.0-abs(iTime * 2.0 - 1.5),3.0),     \n\t\t\t  0, 0, 0, 1.0);\n    \n     mat4 trans3 = mat4(1, 0, 0, 0,  \n              0, 1, 0, 0,\n\t\t\t  0, 0, 1, 1,     \n\t\t\t  0, 0, 0, 0.0);\n    \n    \n    applyMat(vert, rotMat * trans);    \n    //applyMat(vert, trans);\n    applyMat(vert2, trans2);\n    applyMat(vert22, trans22);\n    applyMat(vert3, trans3);\n    applyMat(vert4, trans3);\n    \n\tvec2 position = ( fragCoord.xy / iResolution.xy ) -0.5;\n    vec3 color = vec3(position.y + 0.2);\n    \n    vec4 a = project(vert[0]);\n    vec4 b = project(vert[1]);\n    vec4 c = project(vert[2]);\n    \n    vec4 a2 = project(vert2[0]);\n    vec4 b2 = project(vert2[1]);\n    vec4 c2 = project(vert2[2]);\n    \n    vec4 a22 = project(vert22[0]);\n    vec4 b22 = project(vert22[1]);\n    vec4 c22 = project(vert22[2]);\n    \n    vec4 a3 = project(vert3[0]);\n    vec4 b3 = project(vert3[1]);\n    vec4 c3= project(vert3[2]);\n    \n    vec4 a4 = project(vert4[0]);\n    vec4 b4 = project(vert4[1]);\n    vec4 c4= project(vert4[2]);\n    \n    float inTriangle = pointInTriangle(position, a, b, c);\n    float inTriangle2 = pointInTriangle(position, a2, b2, c2);\n    float inTriangle22 = pointInTriangle(position, a22, b22, c22);\n    float inTriangle3 = pointInTriangle(position, a3, b3, c3);\n    float inTriangle4= pointInTriangle(position, a4, b4, c4);\n    \n    vec3 normal = normalize(cross(vec3(vert[2] - vert[0]), \n                                  vec3(vert[1] - vert[0])));\n    \n    \n    float shade = abs(dot(normal, lightVector));\n    \n    vec3 bary = getBarycentricCoords(position, a, b, c);\n\tvec3 Puv = bary[0] * Auv + bary[1] * Buv + bary[2] * Cuv;\n    \n\tvec3 video = texture(iChannel0, Puv.xy).rgb;\n    vec3 video2 = texture(iChannel1, Puv.xy).rgb;\n    \n    //vec3 bary4 = getBarycentricCoords(position, a4, b4, c4);\n\t//vec3 Puv4 = bary4[0] * Auv + bary4[1] * Buv + bary4[2] * Cuv;\n    //vec3 video4 = texture(iChannel2, Puv4.xy).rgb;\n\n    vec3 green = vec3(0.09, 0.5, 0.12);\n    vec3 gray = vec3(0.4, 0.4, 0.4);\n    vec3 white = vec3(1, 1, 1);\n    \n    color += inTriangle3  * green;\n\tcolor += inTriangle4 * gray;\n    color += inTriangle2  * white;\n    color += inTriangle22  * white;\n    \n    if( video.g < 0.5 || video.r>0.4 || video.b > 0.4) {       \n\t\tcolor += inTriangle * video * shade;\t\n    } else {\n        color += inTriangle * video2 * shade;      \n    }\n\tfragColor = vec4(color, 1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}