{"ver":"0.1","info":{"id":"wsVGWm","date":"1570377790","viewed":131,"name":"Abstract moving blobs","username":"papad","description":"Bunch of moving blobs in space to try out ray marching.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","infinity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_MARCH_STEPS 100\n#define MAX_MARCH_DIST 120.\n#define D_SURF_DIST 0.001\n\nfloat df_movingBlob(vec3 point, vec4 sphere)\n{\n    float m = 3.0;\n    point = mod(point, m) - 0.5*m;\n\treturn 0.06*sin((point.x+iTime*0.51)*15.)+length(point - sphere.xyz) - sphere.w;\n}\n\nfloat getDist(vec3 point)\n{\n    vec4 sphere = vec4(0.,0.,1.5,.5); // w component is the radius.\n    float sphereDist = df_movingBlob(point,sphere);\n    return sphereDist;\n}\n\nvec3 getNormalAtPoint( in vec3 p )\n{\n    const float eps = 0.0001;\n    const vec2 h = vec2(eps,0);\n    return normalize( vec3(getDist(p+h.xyy) - getDist(p-h.xyy),\n                           getDist(p+h.yxy) - getDist(p-h.yxy),\n                           getDist(p+h.yyx) - getDist(p-h.yyx) ) );\n}\n\nfloat rayMarch(vec3 rayOrigin, vec3 rayDirection, out int steps)\n{\n    float d0=0.;\n    steps = MAX_MARCH_STEPS;\n\tfor(int i=0; i < MAX_MARCH_STEPS; ++i)\n    {\n        vec3 currPos = rayOrigin + rayDirection*d0;\n        float dist = getDist(currPos);\n        d0+=dist;\n        if(d0 > 10. + abs(120.*sin(iTime*.5)) || dist < D_SURF_DIST)\n        {\n            steps = i;\n            break;\n        }\n    }\n    return d0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5*iResolution.x)/iResolution.y;\n\n    vec3 camPos = vec3(sin(iTime*2.5),cos(iTime*1.5),iTime*4.4);\n    vec3 rayDir = normalize(vec3(uv.x, uv.y, 1));\n    \n    int steps;\n    float distanceToScene = rayMarch(camPos, rayDir, steps);\n    \n    vec3 p = camPos + rayDir * distanceToScene;\n    float dli = float(steps)/float(MAX_MARCH_STEPS);\n    vec3 col = vec3(0,dli,dli);\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}