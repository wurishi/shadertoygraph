{"ver":"0.1","info":{"id":"MdycDt","date":"1524215265","viewed":108,"name":"Mandelbrot toying","username":"trisslotten","description":"fractals","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 sqr(vec2 z) {\n \treturn vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y); \n}\n\nconst float iterations = 1000.0;\n\nfloat iterate(vec2 num) {\n    vec2 z = num;\n    float i = 0.0;    \n    for(; i < iterations; i++) {\n        if(length(z) > 2.0) {\n        \tbreak;   \n        }\n        \n        z = sqr(z) + num;\n    }\n    return i;\n}\n\nconst float PI = 3.14159265359;\n\nvec3 color(float i) {\n    if(i >= iterations) {\n     \treturn vec3(0);   \n    }\n    i = log(i) + 5.0*iTime;\n    vec3 result;\n    result.r = 0.5*sin(i) + 0.5;\n    result.g = 0.5*sin(i + 2.0*PI*1.0/3.0) + 0.5;\n    result.b = 0.5*sin(i + 2.0*PI*2.0/3.0) + 0.5;\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.yy;\n\n    vec2 center = vec2(-1.4015, 0);\n    float size = 2.0*pow(0.5*sin(iTime*0.5)+0.5, 2.0) + 0.0001;\n    \n    vec2 num = center + (uv-0.5)*size;\n \n    float i = iterate(num);   \n    vec3 col = color(i);\n    \n    \n    \n    \n    fragColor = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}