{"ver":"0.1","info":{"id":"WtVSDD","date":"1583663861","viewed":172,"name":"Halo Radar","username":"BE4T","description":"Radar from halo","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["midterm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float angle){\n    \n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle));\n}\n\n\nfloat drawRectangle( vec2 uv, vec2 position, vec2 size){\n\n   float rectangle = step(position.x - size.x/2., uv.x) - step(position.x - size.x/2. + size.x,uv.x);\n    rectangle *= step(position.y - (size.y/2.), uv.y) - step(position.y + (size.y/2.), uv.y);\n    return rectangle;\n}\n\nfloat circle(vec2 uv, vec2 pos, float radius){ // Standard Circle\n    \n    return float(distance(uv, pos) < radius);\n}\n\n\nfloat circle2(vec2 uv, vec2 pos, float radius, float vignette){\t//Vignette For Circle\n    \n    return float(smoothstep(radius*vignette, radius, distance(uv, pos)));\n}\n\nfloat circle3(vec2 uv, vec2 pos, float radius){ //Circle Limiter\n    \n    \n    return float(.1-smoothstep(radius, radius+0.01, distance(uv, pos)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    \n    vec2 uv2 = uv;\n    \n    // centers pivot point\n    vec2 pos = vec2(0.5*ratio,0.5);\n   \tvec2 pos2 = vec2(0.5*ratio,1.2);\n    // translates the shape to center origin\n    uv -= pos;\n    uv2 -= pos2;\n    \n    //rotations/scales\n    \n  \tuv2 *= rotate2d(1.5708*.5);\n    \n    // translates back to the shape\n    uv += pos;\n    uv2 += pos2;\n    \n    float radius = .48;\n    float radius2 = sin(iTime*5.)/40. + 0.78; //*.2 + .4\n    float radius3 = fract(iTime / 2.4);\n    \n    vec3 lightBlue = vec3(0.27,0.67,1.0);\n    \n    vec3 color;\n    \n    \n    // Radar\n    \n    color += vec3(circle2(uv, pos, .5, 0.8)) + vec3(circle3(uv,pos,.130));\n    \n    color += vec3(circle2(uv, pos, radius2, 0.5) + vec3(circle3(uv,pos,radius)));\n    \n    color += vec3(circle3(uv, pos,radius));\n    \n    // Pulse\n    \n    color += vec3(circle2(uv, pos,radius3, 0.5)) + vec3 (circle3(uv, pos, radius3)) + vec3(circle3(uv,pos,radius)) ;\n    \n    // Cone of Vision\n    \n    color += vec3(drawRectangle(uv2, pos2, vec2(1.,1.)) + vec3(circle3(uv,pos,radius)));\n    color *= lightBlue;\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}