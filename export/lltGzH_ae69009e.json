{"ver":"0.1","info":{"id":"lltGzH","date":"1468029974","viewed":103,"name":"Polygon curtains","username":"tabularasa1992","description":"Yerp.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","geometry","tiling","polygons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nvec2 rotate2D (vec2 _st, float _angle) {\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 tile (vec2 _st, float _zoom) {\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec2 rotateTilePattern(vec2 _st){\n\n    _st *= 1.;\n\n    float index = 0.0;    \n    index += step(1., mod(_st.x,7.0));\n    index += step(1., mod(_st.y,3.0))*2.0;\n\n    _st = fract(_st);\n\n    if (index>0.) _st = rotate2D(_st, PI* ( index==1. ? .5 : index==2. ? -.5 : 1. ));\n\n    return _st;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st = fragCoord.xy/iResolution.y;\n\n    st = tile(st,3.);\n    st = rotateTilePattern(st);\n     st = rotate2D(st,-PI*iTime*0.5 * step(.5, (st.x)));\n\n    fragColor = vec4(vec3(step(st.x,sin(st.y + iTime)/2. + .5)), 1.0);\n                    \n}","name":"Image","description":"","type":"image"}]}