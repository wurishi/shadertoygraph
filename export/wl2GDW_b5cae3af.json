{"ver":"0.1","info":{"id":"wl2GDW","date":"1559727075","viewed":195,"name":"Pointilize","username":"Alex_bo","description":"Apply pointilize( halftone ) pixel effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pixeleffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pointMaxSize = 6.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   float aspectRatio = iResolution.y / iResolution.x;\n   float intensity = ( iMouse.x / iResolution.x );\n    \n   vec2 Texcoord = vec2( fragCoord ) / vec2( iResolution );\n    \n   float pointilizeIntensity = intensity;\n\n   float dotSize = 1.0 - 0.3 * pointilizeIntensity;\n   float defaultPixelSize = 0.002 * iResolution.x * ( 1.0 + pointMaxSize * pointilizeIntensity );\n\n   float fractionalWidthOfPixel = defaultPixelSize  / iResolution.x;\n   float fractionalHeightOfPixel = defaultPixelSize / iResolution.y;\n\n   // polka dot\n   vec2 sampleDivisor = vec2(fractionalWidthOfPixel, fractionalHeightOfPixel);\n\n   vec2 samplePos = Texcoord - mod(Texcoord, sampleDivisor) + 0.5 * sampleDivisor;\n   vec2 textureCoordinateToUse = vec2(Texcoord.x, (Texcoord.y * aspectRatio + 0.5 - 0.5 * aspectRatio));\n   vec2 adjustedSamplePos = vec2(samplePos.x, (samplePos.y * aspectRatio + 0.5 - 0.5 * aspectRatio));\n   float distanceFromSamplePoint = distance(adjustedSamplePos, textureCoordinateToUse);\n   float checkForPresenceWithinDot = step(distanceFromSamplePoint, (fractionalWidthOfPixel * 0.5) * dotSize);\n\t\n   vec4 inputColor = texture(iChannel0, samplePos );\n   fragColor = vec4(inputColor.rgb * checkForPresenceWithinDot, inputColor.a); \n}\n","name":"Image","description":"","type":"image"}]}