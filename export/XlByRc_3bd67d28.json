{"ver":"0.1","info":{"id":"XlByRc","date":"1509442702","viewed":237,"name":"2D Voronoi Noise Fractal","username":"kaswan","description":"2D Voronoi Noise Fractal","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","voronoi","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// Voronoi noise\nfloat vnoise(vec2 p)\n{\n    vec2 cell_i = floor(p);\n    vec2 cell_f = fract(p);\n    \n    float min_dist = 2.0;\n    for (int x = -1; x <= 1; x++){\n        for (int y = -1; y <= 1; y++){\n        \n \t\t\tvec2 xy = vec2(float(x), float(y)); \n            vec2 point = random2(cell_i + xy);\n            point = 0.5 + 0.5*sin(iTime + 6.2831*point);\n        \tfloat dist = distance(cell_f, xy + point);\n        \tmin_dist = min(min_dist, dist);\n        }\n    }\n\treturn min_dist;\n}\n\nfloat fbm(vec2 p)\n{\n    float v;\n    \n    v  = vnoise(p * 1.0) * 0.5;\n    v += vnoise(p * 2.0) * 0.25;\n    v += vnoise(p * 4.0) * 0.125;\n    v += vnoise(p * 8.0) * 0.0625;\n    \n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv *= 2.0;\n    \n    vec3 color;\n\t\n\tcolor = vec3(fbm(uv));\n    color = mix(vec3(1.0, 1.0, 0.0), vec3(1.0, 0.0, 0.0), color);\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}