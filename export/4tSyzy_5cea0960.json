{"ver":"0.1","info":{"id":"4tSyzy","date":"1508953490","viewed":4894,"name":"Single-pass gaussian blur","username":"luluco250","description":"Much heavier than two-pass, but useful when you can't do two passes.\n\nWhy is it heavier? Because two-pass is O(n + n), single-pass is O(n * n).","likes":17,"published":3,"flags":0,"usePreview":1,"tags":["2d","blur","filter","gaussian","pass","single"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pow2(x) (x * x)\n\nconst float pi = atan(1.0) * 4.0;\nconst int samples = 35;\nconst float sigma = float(samples) * 0.25;\n\nfloat gaussian(vec2 i) {\n    return 1.0 / (2.0 * pi * pow2(sigma)) * exp(-((pow2(i.x) + pow2(i.y)) / (2.0 * pow2(sigma))));\n}\n\nvec3 blur(sampler2D sp, vec2 uv, vec2 scale) {\n    vec3 col = vec3(0.0);\n    float accum = 0.0;\n    float weight;\n    vec2 offset;\n    \n    for (int x = -samples / 2; x < samples / 2; ++x) {\n        for (int y = -samples / 2; y < samples / 2; ++y) {\n            offset = vec2(x, y);\n            weight = gaussian(offset);\n            col += texture(sp, uv + scale * offset).rgb * weight;\n            accum += weight;\n        }\n    }\n    \n    return col / accum;\n}\n\nvoid mainImage(out vec4 color, vec2 coord) {\n    vec2 ps = vec2(1.0) / iResolution.xy;\n    vec2 uv = coord * ps;\n    \n    color.rgb = blur(iChannel0, uv, ps);\n    color.a = 1.0;\n}\n","name":"Image","description":"","type":"image"}]}