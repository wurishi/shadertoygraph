{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"//SETTINGS//\nconst float timeScale = 10.0;\nconst float cloudScale = 0.5;\nconst float skyCover = 0.6; //overwritten by mouse x drag\nconst float softness = 0.2;\nconst float brightness = 1.0;\nconst int noiseOctaves = 8;\nconst float curlStrain = 3.0;\n//SETTINGS//\n\nfloat saturate(float num)\n{\n    return clamp(num,0.0,1.0);\n}\n\nfloat noise(vec2 uv)\n{\n    return texture(iChannel0,uv).r;\n}\n\nvec2 rotate(vec2 uv)\n{\n    uv = uv + noise(uv*0.2)*0.005;\n    float rot = curlStrain;\n    float sinRot=sin(rot);\n    float cosRot=cos(rot);\n    mat2 rotMat = mat2(cosRot,-sinRot,sinRot,cosRot);\n    return uv * rotMat;\n}\n\nfloat fbm (vec2 uv)\n{\n    float rot = 1.57;\n    float sinRot=sin(rot);\n    float cosRot=cos(rot);\n    float f = 0.0;\n    float total = 0.0;\n    float mul = 0.5;\n    mat2 rotMat = mat2(cosRot,-sinRot,sinRot,cosRot);\n    \n    for(int i = 0;i < noiseOctaves;i++)\n    {\n        f += noise(uv+iTime*0.00015*timeScale*(1.0-mul))*mul;\n        total += mul;\n        uv *= 3.0;\n        uv=rotate(uv);\n        mul *= 0.5;\n    }\n    return f/total;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 screenUv = fragCoord.xy/iResolution.xy;\n    vec2 uv = fragCoord.xy/(40000.0*cloudScale);\n    \n    float mouseXAffect = (iMouse.x/iResolution.x);\n    \n    float cover = mouseXAffect*1.1+0.1;\n    if( iMouse.z<=0.0001 ) cover = 0.5;\n    \n    float bright = brightness*(1.8-cover);\n    \n    float color1 = fbm(uv-0.5+iTime*0.00004*timeScale);\n    float color2 = fbm(uv-10.5+iTime*0.00002*timeScale);\n    \n    float clouds1 = smoothstep(1.0-cover,min((1.0-cover)+softness*2.0,1.0),color1);\n    float clouds2 = smoothstep(1.0-cover,min((1.0-cover)+softness,1.0),color2);\n    \n    float cloudsFormComb = saturate(clouds1+clouds2);\n    \n    vec4 skyCol = vec4(0.6,0.8,1.0,1.0);\n    float cloudCol = saturate(saturate(1.0-pow(color1,1.0)*0.2)*bright);\n    vec4 clouds1Color = vec4(cloudCol,cloudCol,cloudCol,1.0);\n    vec4 clouds2Color = mix(clouds1Color,skyCol,0.25);\n    vec4 cloudColComb = mix(clouds1Color,clouds2Color,saturate(clouds2-clouds1));\n    \n\tfragColor = mix(skyCol,cloudColComb,cloudsFormComb);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsjSRt","date":"1414959175","viewed":5577,"name":"2D Fast Clouds","username":"Sinuousity","description":"Testing noise generation for 2D real time fbm clouds","likes":90,"published":1,"flags":0,"usePreview":1,"tags":["2d","clouds","fast","testing"],"hasliked":0,"parentid":"","parentname":""}}