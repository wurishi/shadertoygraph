{"ver":"0.1","info":{"id":"mlySDz","date":"1686303803","viewed":46,"name":"Reverse Fractal","username":"man0","description":"a reverse fractal based on video of Kishimisu","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5\t);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(1.50, 2.20, 0.234);\n    \n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) /iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    for( float i = 0.0; i < 9.0; i+=3.0){\n    \n        uv = fract(uv *1.2)- 0.5;\n        uv += uv / sin(2.0 + iTime/10.0 - i);\n        float d = length(uv) * exp( -length(uv0));\n\n        vec3 col = palette( length(uv0) + i*0.5 + iTime );\n\n        d = sin(-d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow( 0.01/d, 2.0);\n\n        finalColor += col * d;\n    }\n\n    \n    fragColor = vec4( finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}