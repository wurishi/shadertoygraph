{"ver":"0.1","info":{"id":"lfGGzt","date":"1713133152","viewed":77,"name":"El efecto Mandala","username":"walter023","description":"My very first shader ðŸ¥²","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandala"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot2D(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\n// parabola y = a(xâˆ’h)Â² + k ðŸ‘€\n// h: move parabola horizontal y=(xâˆ’h)Â² \n// a: make parabola flatter or narrower \n// k: move parabola vertical y = aâ€º(xâˆ’h)Â² + k\nfloat makeParabola(vec2 coord, float index) {\n  float edge0 = 0.01, edge1 = 0.0;\n  float a = 10.0, h = 0.02;\n  return smoothstep(edge0, edge1, abs(a * pow(coord.x + index * h, 2.0) + coord.y)) +\n    smoothstep(edge0, edge1, abs(a * pow(-coord.x + index * h, 2.0) + coord.y)) +\n    smoothstep(edge0, edge1, abs(a * pow(coord.y + index * h, 2.0) - coord.x)) +\n    smoothstep(edge0, edge1, abs(a * pow(-coord.y + index * h, 2.0) - coord.x)) +\n    smoothstep(edge0, edge1, abs(a * pow(-coord.y + index * h, 2.0) + coord.x)) +\n    smoothstep(edge0, edge1, abs(a * pow(coord.y + index * h, 2.0) + coord.x)) +\n    smoothstep(edge0, edge1, abs(a * pow(coord.x + index * h, 2.0) - coord.y)) +\n    smoothstep(edge0, edge1, abs(a * pow(-coord.x + index * h, 2.0) - coord.y));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n  uv.xy *= rot2D(iTime * 0.3);\n  float d = length(uv);\n  uv = uv * .75;\n  vec3 finalColor = vec3(0.0);\n  for(float i = 1.; i < 17.0; i++) {\n    float p = makeParabola(uv, i);\n    d = sin(d + iTime * 0.5) / d;\n    finalColor += p * d;\n  }\n  fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}