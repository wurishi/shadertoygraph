{"ver":"0.1","info":{"id":"Ddy3zm","date":"1678327865","viewed":88,"name":"playdao.ai","username":"arxyz","description":"https://playdao.ai","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["logo","blob","play","ai","doh","yury","playdao"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//playdao.ai\n\n#define CIRCLE 6.28318530718\n#ifndef PI\n#define PI 3.141592653589793\n#endif\n\n\n#ifndef HALF_PI\n#define HALF_PI 1.5707963267948966\n#endif\n\n\n#ifndef HALF_PI\n#define HALF_PI 1.5707963267948966\n#endif\n\nfloat elasticIn(float t) {\n  return sin(13.0 * t * HALF_PI) * pow(2.0, 14.0 * (t - 1.0));\n}\n\n\nfloat backOut(float t) {\n  float f = 1.0 - t;\n  return 1.0 - (pow(f, 3.0) - f * sin(f * PI));\n}\n\n\n#ifndef HALF_PI\n#define HALF_PI 1.5707963267948966\n#endif\n\nfloat elasticOut(float t) {\n  return sin(-13.0 * (t + 1.0) * HALF_PI) * pow(2.0, -10.0 * t) + 1.0;\n}\n\n#pragma glslify: export(elasticOut)\n\n#ifndef HALF_PI\n#define HALF_PI 1.5707963267948966\n#endif\n\nfloat elasticInOut(float t) {\n  return t < 0.5\n    ? 0.5 * sin(+13.0 * HALF_PI * 2.0 * t) * pow(2.0, 10.0 * (2.0 * t - 1.0))\n    : 0.5 * sin(-13.0 * HALF_PI * ((2.0 * t - 1.0) + 1.0)) * pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0;\n}\n\n\nfloat meatball(vec2 p, float r){return r / dot(p, p);}\n\n\n\nfloat speed = 4.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 center = vec2(uv-vec2(1.0*(iResolution.x/iResolution.y)/2.0,0.5));\n     \n    float t = 1.0-pow((0.5+sin(iTime)*.5),4.0);\n    \n    \n    float rot = smoothstep(0.0,1.,mod(t*.5,1.0))*PI*2.0/3.0+PI;\n    \n    float center_ball = meatball(center,0.03*(0.02+t*.98));\n\n    vec3 trace = vec3(center_ball);\n    // trace = mix(vec3(center_ball),trace,1.0-t);\n    \n    for(int i = 0;i<3;i++){\n        vec2 offset = vec2(cos(CIRCLE/3.0*float(i)-rot),sin(CIRCLE/3.0*float(i)-rot));\n        trace -= meatball(center-offset*.12,0.005);\n    }\n\n    //vec3 b = vec3(0.0);\n    float inner_ball = meatball(center,0.007*t);\n    vec3 b = vec3(inner_ball);\n    // b = mix(b,vec3(inner_ball*2.,inner_ball,inner_ball*.5),0.0);\n    for(int i = 0;i<3;i++){\n        vec2 offset = vec2(cos(CIRCLE/3.0*float(i)+PI-rot),sin(CIRCLE/3.0*float(i)+PI-rot));\n        b -= meatball(center-offset*.10,0.005);\n    }\n    \n    //vec3 inner = smoothstep(vec3(0.92*(0.9+t*.1)),vec3(1.0),vec3(b));\n    trace = smoothstep(vec3(0.96),vec3(1.0),min(vec3(1.0),trace)-max(vec3(0.0),smoothstep(0.6,1.0,b)));\n    fragColor = vec4(trace,length(trace));\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}