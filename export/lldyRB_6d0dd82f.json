{"ver":"0.1","info":{"id":"lldyRB","date":"1533080979","viewed":981,"name":"Height Flow / Filler","username":"pixlpa","description":"Image distortion based on taking the luminance value of neighboring pixels and then pushing toward or away from light. Try changing strength/offset defines in Buf B","likes":38,"published":1,"flags":32,"usePreview":0,"tags":["blur","feedback","fbo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define samples 8.0\n#define PI 3.14159265359\n#define offset 3.0\n#define strength 6.5\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 accumxy = vec2(0.,0.);\n\n    for( float i=0.0;i<samples;i++){\n        vec2 tc = vec2(sin(PI*2.*i/samples),cos(PI*2.*i/samples));\n        float energy = dot(texture(iChannel0,(fragCoord+tc*offset)/iResolution.xy),vec4(0.333,0.333,0.333,0.));\n        energy += dot(texture(iChannel0,(fragCoord+tc*2.*offset)/iResolution.xy),vec4(0.333,0.333,0.333,0.));\n        accumxy += tc*energy/2.;\n    }\n\n    // Output to screen\n    fragColor = texture(iChannel0,uv+accumxy*strength/iResolution.xy);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = mix(vec4(0.5),mix(texture(iChannel0,uv),texture(iChannel1,uv),0.15),1.04);\n}","name":"Buffer B","description":"","type":"buffer"}]}