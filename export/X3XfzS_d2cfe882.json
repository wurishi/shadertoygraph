{"ver":"0.1","info":{"id":"X3XfzS","date":"1728555663","viewed":32,"name":"УБЕГАЙ","username":"NiiiiiiiiiiiiiiiX","description":"14","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 fractal(vec2 uv, float zoom, float time) {\n    vec2 z = uv * zoom;\n    vec2 c = vec2(0.355, 0.355);\n    int iterations = 0;\n    const int maxIter = 100;\n    \n    for (int i = 0; i < maxIter; i++) {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (length(z) > 4.0) break;\n        iterations++;\n    }\n    \n    float color = float(iterations) / float(maxIter);\n    return vec3(color);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 color = vec3(0.0);\n    float time = iTime * 1.0;\n    float totalDuration = 30.0;\n    float pulse = 1.0 + smoothstep(0.0, 0.3, abs(sin(iTime * 3.14)));\n    float growthFactor = iTime / 20.0; \n    float zoom = mix(1.0, 5.0, growthFactor) / pulse;\n    if (iTime > 20.0) {\n        float dropTime = iTime - 20.0;\n        zoom = mix(5.0, 20.0, smoothstep(0.0, 1.0, dropTime / 10.0)); \n        vec3 redColor = vec3(1.0, 0.0, 0.0); \n        color = redColor; \n    }\n    vec3 fractalColor = fractal(uv, zoom, time);\n    color += fractalColor;\n    color *= smoothstep(1.5, 0.3, length(uv));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}