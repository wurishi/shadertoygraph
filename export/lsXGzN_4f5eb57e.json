{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Copyright (c) 2013 Andrew Baldwin (baldand)\n// License = Attribution-NonCommercial-ShareAlike (http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US)\n\n// Salmiakki \n\nvec3 rnd3(vec3 n)\n{\n\tvec3 m = floor(n)*.00001 + fract(n);\n\tconst mat3 p = mat3(13.323122,23.5112,21.71123,21.1212,28.7312,11.9312,21.8112,14.7212,61.3934);\n\tvec3 mp = (31415.9+m)/fract(p*m);\n\treturn fract(mp);\n}\n\nstruct accel {\n\tbool rayGoesNearSphere;\n\tfloat sphereDistance;\n};\n\nfloat map(vec3 pos, accel rayInfo)\n{\n\tfloat sphere = length(pos - vec3(-1.,0.,0.))-.8+.2*sin(pos.y*10.)*sin(pos.z*10.)*sin(pos.x*10.+iTime);\n\treturn sphere;\n}\n\nvoid calcAccel(vec3 rayOrigin, vec3 rayDirection,inout accel rayInfo)\n{\n\tvec3 ro = rayOrigin - vec3(-1.,0.,0.);\n\tfloat a = dot(rayDirection,ro);\n\tfloat b = dot(ro,ro);\n\tfloat d = a*a - b + 1.;\n\trayInfo.rayGoesNearSphere = true;\n\trayInfo.sphereDistance = d;\n}\n\nvec3 normal(vec3 pos)\n{\n\taccel rayInfo;\n\tcalcAccel(pos,vec3(1.,0.,0.),rayInfo);\n\tvec3 eps = vec3(0.01,0.,0.);\n\tfloat dx = map(pos+eps.xyy,rayInfo)*100.;\n\tfloat dy = map(pos+eps.yxy,rayInfo)*100.;\n\tfloat dz = map(pos+eps.yyx,rayInfo)*100.;\n\tfloat mdx = map(pos-eps.xyy,rayInfo)*100.;\n\tfloat mdy = map(pos-eps.yxy,rayInfo)*100.;\n\tfloat mdz = map(pos-eps.yyx,rayInfo)*100.;\n\treturn vec3(dx-mdx,dy-mdy,dz-mdz);\n}\n\nvec3 model(vec3 rayOrigin, vec3 rayDirection)\n{\n\tfloat t = 0.;\n\tvec3 p;\n\tfloat d = 0.;\n\tbool nothit = true;\n\taccel rayInfo;\n\tcalcAccel(rayOrigin,rayDirection,rayInfo);\n\tfor (int i=0;i<15;i++) {\n\t\tif (nothit) {\n\t\t\tt += d*.6;\n\t\t\tp = rayOrigin + t * rayDirection;\n\t\t\td = map(p,rayInfo);\n\t\t\tnothit = d>0.001 && t<10.;\t\t\t\n\t\t}\n\t}\n\tvec3 n = normal(p);\n\tvec3 lightpos = vec3(4.);\n\tvec3 lightdist = lightpos - p;\n\tfloat light = 1.+dot(lightdist,n)*1./length(lightdist);\n\tvec3 m=.5+.2*abs(fract(p)*2.-1.);\n\tvec3 c = vec3(clamp(light,0.,10.))*vec3(m-.01*length(p));\n\treturn c; \n}\n\nvec3 camera(in vec2 sensorCoordinate, in vec3 cameraPosition, in vec3 cameraLookingAt, in vec3 cameraUp)\n{\n\tvec2 uv = 1.-sensorCoordinate;\n\tvec3 sensorPosition = cameraPosition;\n\tvec3 direction = normalize(cameraLookingAt - sensorPosition);\n\tvec3 lensPosition = sensorPosition + 2.*direction;\n\tconst vec2 lensSize = vec2(1.);\n    vec2 sensorSize = vec2(iResolution.x/iResolution.y,1.0);\n\tvec2 offset = sensorSize * (uv - 0.5);\n\tvec3 right = cross(cameraUp,direction);\n\tvec3 rayOrigin = sensorPosition + offset.y*cameraUp + offset.x*right;\n\tvec3 rayDirection = normalize(lensPosition - rayOrigin);\n\t// Render the scene for this camera pixel\n\tfloat rt = 0.;//fract(iTime);\n\tvec3 colour = vec3(0.);\n\tcolour += max(model(rayOrigin, rayDirection),vec3(0.));\n\t\t\n\t// Post-process for display\n\tvec3 toneMapped = colour/(1.+colour);\n\t// Random RGB dither noise to avoid any gradient lines\n\tvec3 dither = vec3(rnd3(vec3(uv.xy,iTime)))/255.;\n\t// Return final colour\n\treturn toneMapped + dither;\n}\n\nvec3 world(vec2 fragCoord)\n{\n\t// Position camera with interaction\n\tfloat rotspeed = 10.09+4.1+iTime*.3+10.*iMouse.x/iResolution.x;\n\tfloat radius = 10.+5.*sin(iTime*.2+4.);\n\tvec3 cameraTarget = vec3(0.,0.,0.);\n\tvec3 cameraPos = vec3(radius*sin(rotspeed),10.*iMouse.y/iResolution.y-5.,radius*cos(rotspeed));\n\tvec3 cameraUp = vec3(0.,1.,0.);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\treturn camera(uv,cameraPos,cameraTarget,cameraUp);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = vec4(world(fragCoord),1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsXGzN","date":"1363783365","viewed":327,"name":"Salmiakki","username":"baldand","description":"Ray marching a shape using too few iterations. Use mouse to rotate.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching"],"hasliked":0,"parentid":"","parentname":""}}