{"ver":"0.1","info":{"id":"XsVBWc","date":"1530824043","viewed":166,"name":"hello world, rounded rect","username":"redski","description":"It works(tm). Essentially my first shader that actually does something other than fill a polygon with a solid color. Can be replaced with one line, which I know now. :)\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 P = fragCoord * 2.0f - iResolution.xy;\n    vec2 C = iResolution.xy / 2.0f;\n\n    float Width = 400.f;\n    float W = Width * 0.5f;\n    \n    float Height = 200.0f;\n    float H = Height * 0.5f;\n    \n    float R = 40.0;\n    \n    // Two rectangles which fill the space between the circles on the edges\n    float X0 = length(P.x) - W;\n    float Y0 = length(P.y) - H + R;\n    \n    float X1 = length(P.x) - W + R;\n    float Y1 = length(P.y) - H;\n    \n    float Color = (max(0.f, X0) + max(0.f, Y0)) * (max(0.f, X1) + max(0.f, Y1));\n    // Clamp to range 0-1\n    Color = 1. - max(0.f, min(Color, 1.0f));\n    \n    // positions of all 4 edge circles\n    vec2 a = vec2(-W, H) + vec2(R, -R);\n    vec2 b = vec2(W, H) + vec2(-R, -R);\n    vec2 c = vec2(W, -H) + vec2(-R, R);\n    vec2 d = vec2(-W, -H) + vec2(R, R);\n    \n    // find distance to center of circle on the closest edge\n    float D = length(P - a);\n    D = min(D, length(P - b));\n    D = min(D, length(P - c));\n    D = min(D, length(P - d));\n      \n    float Corners =  1.0f + R - D ;\n    // Clamp to range 0-1, otherwise we subtract of other parts of rectangle\n    // when fragment is outside corner circles but inside rectangle\n    Corners = max(0.f, min(1.f, Corners));\n    \n    // For debug\n#define view 2\n#if view == 0\n   \tCorners = 0.;\n#elif view == 1\n    Color = Corners;\n#elif view == 2\n    Color = Color + Corners;\n#endif\n    \n    fragColor = vec4(Color, 0, 0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}