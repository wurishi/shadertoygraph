{"ver":"0.1","info":{"id":"DtVfWc","date":"1702570596","viewed":138,"name":"glow nice stars in cube","username":"nayk","description":"stars, cube, glow, colorful","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["cube","colorful","glow","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*original https://www.shadertoy.com/view/mtyfDK  https://www.shadertoy.com/view/DtVBRD /*original https://www.shadertoy.com/view/lslyRn,  original https://www.shadertoy.com/view/lsyXDK https://www.shadertoy.com/view/lslyRn https://www.shadertoy.com/view/DlycWR and other*/\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(1.263, 0.416, 0.557);\n    \n    return a + b*cos(6.28318*(c*t+d));\n}\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n\nfloat nice_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= 3.14 / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, s, -s, c );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec2 uv2 = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n vec2 uv3 = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n  vec2 uv4 = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n            uv2.xy*= -rotationMatrix( 10.0 * -iTime );\n    uv*= rotationMatrix( 10.0 * -iTime );\n       uv3*= rotationMatrix( 10.0 * -iTime );\n    vec3 finalColor = vec3(0.0);\n    \n  vec4 O =fragColor;\n    vec2 C =fragCoord;\n     vec2 m = (.5 * iResolution.xy - iMouse.xy) / iResolution.x * 6.28;\n    vec3 e = vec3(cos(m.x) * cos(m.y), sin(m.x) * cos(m.y), sin(m.y));\n    vec3 u = normalize(vec3(e.y, -e.x, 0));\n    vec3 v = cross(e, u);\n    uv2.x+=cos(iTime)*0.3;  \n    uv2.y+=sin(iTime)*0.3;\n     uv3.x+=cos(iTime)*0.5;  \n    uv3.y-=sin(iTime)*0.5;\n     uv4.x+=-cos(iTime)*0.7;  \n    uv4.y-=sin(iTime)*0.7;\n    vec3 d2 = e + uv.x * u + uv.y * v;\n    vec3 a = (e + .1) / d2;\n    vec3 b = (e - .1) / d2;\n    float mi = max(max(min(a.x, b.x), min(a.y, b.y)), min(a.z, b.z));\n    float ma = min(min(max(a.x, b.x), max(a.y, b.y)), max(a.z, b.z));\n    float t = mi < ma ? mi : 10.;\n    vec3 i2 = e - d2 * t;\n    vec3 c = (step(-.099, i2) + step(.099, i2) - 1.) * d2;\n     \n O=vec4(0);\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(3),H(g*2.1),sin(2.8))*1./e/8e3\n    )\n    {\n        p=g*d;\n       \n        p.z+=-iTime*10.15;\n        a=10.;\n        p=mod(p-a,a*2.)-a;\n        s=5.;\n        float t = iTime * .05 + ((.25 + .05 * sin(iTime * .01))/(length(uv.xy) + 1.777)) * 0.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n   uv2.xy*=ma;  \n    uv3.xy*=-ma; \n        for(int i=0;i++<8;){\n            p=.23-abs(p);\n            ;\n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n      p.y<p.z?p=p.xyz:p;\n            s*=e=1.7+sin(-iTime*.234)*.1;\n            p=abs(p)*e-\n                vec3(\n                    10.+cos(iTime*.3+1.5*sin(iTime*.3))*2.,\n                    110,\n                    50.+cos(iTime*.5)*5.\n                 )+c;\n         }\n         g+=e=length(p.yz)/s;\n          g+=e=length(p.xz)/s;\n       \n    }\n    vec3 col = vec3(1.0, 2.0, 3.0);\n    for(float i = 0.0; i < 5.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n        float d = 0.0;\n      \n        d = exp(-length(uv)) * exp(-length(uv0));\n        d = smoothstep(0.2, 1.0, d);\n        float frequency = 2.;\n         \n        d *= sin(length(uv) * (frequency) + iTime) / frequency;\n        d = abs(d);\n        d = smoothstep(0.0, 0.2, d);\n    \n        d = abs(d);\n        d = pow(.01101 / d, 0.2);  \n        d = 2.0 -d;\n         vec3 col = palette(length(uv0) + i*0.24 + iTime*.4);\n        d = 0.05 / d;\n        finalColor += (col)*O.xyz*d;\n    }\nfloat anim = sin(iTime * 12.0) * 0.1 + 1.0;  \n    fragColor = vec4(finalColor, 1.0);\n     fragColor+= vec4(nice_star(uv2,anim) * vec3(0.15,0.12,0.15)*0.3, 1.0);\n     fragColor+= vec4(nice_star(uv4,anim) * vec3(0.25,0.52,0.15)*0.1, 1.0);\n      fragColor+= vec4(nice_star(uv3,anim) * vec3(0.25,0.52,0.85)*0.1, 1.0);\n}","name":"Image","description":"","type":"image"}]}