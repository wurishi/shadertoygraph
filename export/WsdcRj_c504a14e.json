{"ver":"0.1","info":{"id":"WsdcRj","date":"1601294779","viewed":51,"name":"Weird DE","username":"Nischi","description":"ODE","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Si(float x){\t\t//Integral\n    float result = 0.;\n    float stp = x/1000.;\n    float t = 0.;\n    for(int i=1;i<1000;i++){\n        t += stp;\n        result += sin(t)/t;\n    }\n    return result*stp;\n}\n\nfloat SiTaylor(float x){\t\t//Taylor Series\n    float sqr = x*x;\n    float iMax = 201.;\n    float result = 1./(iMax+2.);\n    float sgn = 1.;\n    \n    for(float i=iMax; i>2.; i-=2.){\n        result = sgn/i+sqr/(i+1.)/(i+2.)*result;\n        sgn = -sgn;\n    }\n    return x*(1.+sqr/2./3.*result);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Constants to vary\n    float C = 3.*sin(iTime);\n    float scale = 4.;\n\n    //Coordinate transformation from pixels\n    vec2 uv = scale*(2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    //Implicit function\n    float u = uv.x/uv.y;\n    float f = Si(2.*u)-sin(u)*sin(u)/u+log(abs(uv.x))-C;\n    \n    //Function plot\n    fragColor = vec4(abs(f)/fwidth(f));\n    \n    //Coordinate system\n    if ( min( abs(uv.x), abs(uv.y) ) < 8./iResolution.y ) fragColor *= 0.;\n    fragColor *= smoothstep( 0., 1.5, length(uv-vec2(1,0))*iResolution.y/8.- 4.);\n    fragColor *= smoothstep( 0., 1.5, length(uv-vec2(0,1))*iResolution.y/8.- 4.);\n}","name":"Image","description":"","type":"image"}]}