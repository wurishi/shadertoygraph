{"ver":"0.1","info":{"id":"msXcz8","date":"1686567392","viewed":24,"name":"writing shader for the first tim","username":"dzemzmcdonalda","description":"test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://youtu.be/f4s1h2YETNY\n\nvec2 fixedUV(in vec2 fragCoord)\n{\n    vec2 result = fragCoord / iResolution.xy;\n    result -= 0.5;\n    result *= 2.0;\n    result.x *= iResolution.x / iResolution.y;\n    return result;\n}\n\nvec2 fixedFract(in vec2 uv)\n{\n    uv *= 2.0;\n    vec2 result = fract(uv);\n    result -= 0.5;\n    return result;\n}\n\nfloat circle(in vec2 uv)\n{\n    return length(uv);\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    // https://iquilezles.org/articles/palettes/\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n#define GRADIENT vec3(0.5, 0.5, 0.5), vec3(0.5, 0.368, 0.5), vec3(-0.142, 1.0, 1.0), vec3(0.158, 0.492, 0.437)\nconst vec3 BLACK = vec3(0.0, 0.0, 0.0);\nconst float DIMENSION = 3.0;\nconst float REPETITION = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fixedUV(fragCoord);\n    vec2 uv0 = uv;\n    vec3 result = BLACK;\n    \n    for (float i = 0.0; i < DIMENSION; i++)\n    {\n        uv = fixedFract(uv);\n        float circ = circle(uv);\n        vec3 color = palette (circle(uv0) + iTime, GRADIENT);\n        circ = sin(circ * REPETITION + iTime) / REPETITION;\n        circ = abs(circ);\n        circ = 0.01 / circ;\n        result += color * circ;\n    }\n    \n    fragColor = vec4(result, 1.0);\n}","name":"Image","description":"","type":"image"}]}