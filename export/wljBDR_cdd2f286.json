{"ver":"0.1","info":{"id":"wljBDR","date":"1598712082","viewed":88,"name":"lifegame_test","username":"glidergun","description":"Conway's game of life\n\nmouse click: draw\nR key: randomize\nC key: clear\nP key: pause\nS key: (during pause) step\nI key: restart","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["2d","simulation","automata","life","cellular","practice","conway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    fragColor = texture(iChannel0,fragCoord.xy / iResolution.xy);;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// mouse click: draw\n// R key: randomize\n// C key: clear\n// P key: pause\n// S key: (during pause) step\n// I key: restart\n\nconst int KEY_C = 67;\nconst int KEY_I = 73;\nconst int KEY_P = 80;\nconst int KEY_R = 82;\nconst int KEY_S = 83;\n\nconst vec3 color_born = vec3(0.8, 0.8, 0.9);\nconst vec3 color_alive = vec3(0.6, 0.6, 0.8);\nconst vec3 color_died = vec3(0.2, 0.1, 0.1);\nconst vec3 color_empty = vec3(0.1, 0.1, 0.1);\n\n#define KEYBOARD 1\n\nfloat rnd(vec2 p){\n    return fract(sin(dot(p ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float time = iTime;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 colors = vec3(0.);\n\n\n    if ((iFrame == 0)\n#ifdef KEYBOARD\n        || (texelFetch( iChannel2, ivec2(KEY_I, 1), 0 ).x > 0.0)\n#endif\n       )\n    {\n        //colors = vec3(texture(iChannel1,uv).r);\n        colors = vec3(rnd(uv));\n        fragColor = vec4(colors,1.0);\n        return;\n    }\n\n#ifdef KEYBOARD\n    if (texelFetch( iChannel2, ivec2(KEY_R, 1), 0 ).x > 0.0)\n    {\n        colors = vec3(rnd(uv + time));\n        fragColor = vec4(colors,1.0);\n        return;\n    }\n#endif\n\n#ifdef KEYBOARD\n    if (texelFetch( iChannel2, ivec2(KEY_C, 1), 0 ).x > 0.0)\n    {\n        fragColor = vec4(0.1, 0.1, 0.1, 1.0);\n        return;\n    }\n#endif\n\n    vec3 prevColors = texture(iChannel0, uv).rgb;\n\n    if(iMouse.z > 0.0){\n        vec2 d = abs(iMouse.xy - fragCoord.xy);\n        if(max(d.x, d.y) < 3.0){\n\t        colors = vec3(0.6, 1.0, 0.6);\n        } else {\n            colors = prevColors;\n        }\n        fragColor = vec4(colors,1.0);\n        return;\n    }\n\n#ifdef KEYBOARD\n    if (texelFetch( iChannel2, ivec2(KEY_P, 2), 0 ).x > 0.0)\n    {\n        if(!(texelFetch( iChannel2, ivec2(KEY_S, 1), 0 ).x > 0.0)){\n            fragColor = vec4(prevColors,1.0);\n            return;\n        }\n    }\n#endif\n\n    bool self = prevColors.b > 0.5;\n    int sum = 0;\n    for(int i=-1;i<=1;++i){\n        for(int j=-1;j<=1;++j){\n            if(i==0 && j==0) continue;\n\t\t    bool neighbour = texture(iChannel0, uv + vec2(i,j)/iResolution.xy).b > 0.5;\n            if(neighbour) sum += 1;\n        }\n    }\n\n    if(self){\n        if(2 <= sum && sum <= 3){\n            colors = color_alive;\n        }else{\n            colors = color_died;\n        }\n    }else{\n        if(sum == 3){\n            colors = color_born;\n        }else{\n            colors = color_empty;\n        }\n    }\n    \n    fragColor = vec4(colors,1.0);\n}\n\n","name":"Buffer A","description":"","type":"buffer"}]}