{"ver":"0.1","info":{"id":"lcXSRf","date":"1705509660","viewed":127,"name":"bad (but fast?) hash","username":"wunko","description":"it's pretty fast i think (idk how to optimize glsl), but there are gonna be patterns\nso ideal for stuff like terrain where you're probably not gonna notice the errors","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["noise","perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(in vec2 p)\n{\n    float t = mod(104.72*(p.x*177.23+p.y*7903.71),1891.5);\n    return fract(mod(t*t*t, t));\n}\n\nfloat perlin( in vec2 pos, in float s)\n{\n    vec2 p = fract(pos/s);\n    vec2 h1 = floor(pos/s);\n    vec2 h2 = ceil(pos/s);\n    float t1 = hash(floor(h1));\n    float t2 = hash(vec2(h2.x, h1.y));\n    float t3 = hash(vec2(h1.x, h2.y));\n    float t4 = hash(vec2(h2));\n    \n    float t = (p.x*p.x)*(3.0-(2.0*p.x));\n    return(mix(mix(t1, t2, t), mix(t3, t4, t), (p.y*p.y)*(3.0-(2.0*p.y))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord+50.*iTime;\n    float t = perlin(uv, 50.0)+perlin(uv, 25.)*0.5+perlin(uv, 12.5)*0.25;\n    vec3 col = vec3(t/2.);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}