{"ver":"0.1","info":{"id":"ll3BRN","date":"1538760560","viewed":76,"name":"EGP 200 LayeredHouse ","username":"shill","description":"Creates a house using layers for the chimney, body, and windows. For Layered House assignment","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["homework"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//information for house body\nvec2 bodyCorner = vec2(0.25,0.0);\nvec2 bodyDimensions = vec2(0.5,.4);\nvec3 bodyColor = vec3(0.0,0.0,0.0);\n\n//information for chimney\nvec2 chimneyCorner = vec2(0.3,0.7);\nvec2 chimneyDimensions = vec2(0.1, .15);\nvec3 chimneyColor = vec3(0.5,0.5,0.5);\n\n//information for windows\nvec2 window1 = vec2(0.34,0.44);\nvec2 window2 = vec2(0.55,0.35);\nvec2 windowDimensions = vec2(.1,.075);\nvec3 windowColor = vec3(0.75,0.7,0.0);\n\n//switches for layers. 1.0 they are visible, 0.0 they are invisible\nfloat bodyAlpha = 1.0;\nfloat chimneyAlpha = 1.0;\nfloat windowAlpha = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 backColor = vec3(0.0,0.0,uv.y) + .45;\n    \n    //fixes aspect ratio for shapes\n    float aspectRatio = iResolution.y/iResolution.x;\n    uv.y *= aspectRatio;\n    bodyCorner.y *= aspectRatio;\n    chimneyCorner.y *= aspectRatio;\n    window1.y *= aspectRatio;\n    window2.y *= aspectRatio;\n    \n    //creates layers for each object and background\n    vec4 backLayer = vec4(backColor,1.0);\n    vec4 bodyLayer = vec4(bodyColor,0.0);\n    vec4 chimneyLayer = vec4(chimneyColor,0.0);\n    vec4 windowLayer = vec4(windowColor,0.0);\n    \n    //interpolates for the body\n\tfloat bodyInterpX = step(bodyCorner.x,uv.x) - step(bodyCorner.x + bodyDimensions.x,uv.x);\n    float bodyInterpY = step(bodyCorner.y,uv.y) - step(bodyCorner.y + bodyDimensions.y,uv.y);\n    bodyLayer.a = bodyInterpX * bodyInterpY;  \n    \n    //interpolates for the chimney\n    float chimInterpX = step(chimneyCorner.x,uv.x) - step(chimneyCorner.x + chimneyDimensions.x,uv.x);\n    float chimInterpY = step(chimneyCorner.y,uv.y) - step(chimneyCorner.y + chimneyDimensions.y,uv.y);    \n    chimneyLayer.a = chimInterpX * chimInterpY;\n    //interpolates for the 2 windows\n    float wind1InterpX = step(window1.x,uv.x) - step(window1.x + windowDimensions.x,uv.x);\n    float wind1InterpY = step(window1.y,uv.y) - step(window1.y + windowDimensions.y,uv.y);       \n    float wind2InterpX = step(window2.x,uv.x) - step(window2.x + windowDimensions.x,uv.x);\n    float wind2InterpY = step(window2.y,uv.y) - step(window2.y + windowDimensions.y,uv.y);    \n    windowLayer.a = ((wind1InterpX * wind1InterpY) + (wind2InterpX * wind2InterpY));\n    \n    //mixes the layers such that the background is in the back, the chimney above that,\n    //then the body, and then the windows are in front\n    vec4 combo = mix(backLayer,chimneyLayer,chimneyLayer.a * chimneyAlpha);\n    combo = mix(combo, bodyLayer, bodyLayer.a * bodyAlpha);\n    combo = mix(combo, windowLayer, windowLayer.a * windowAlpha);\n    \n    fragColor = combo;\n}\n\n\n","name":"Image","description":"","type":"image"}]}