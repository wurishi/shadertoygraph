{"ver":"0.1","info":{"id":"llG3zW","date":"1473450006","viewed":165,"name":"AsGreyWolf_test1","username":"AsGreyWolf","description":"deform","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["deform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nfloat sinR(float c){\n\tfloat sinR = c;\n    sinR *= 2.0;\n    if(sinR>1.0)\n    \tsinR = 2.0-sinR;\n    sinR*=0.5;\n    return sinR;\n}\nfloat sinF(float c){\n    return c*6.28*2.0;\n}\n\nfloat triangleCircle(vec2 pos, float c){\n    float a = sqrt(3.0)/2.0;\n    float h = sqrt(3.0)*a;\n    float R = 1.0/max(c,0.0001)+sin(atan(pos.y,pos.x)*10.0+sinF(c))*sinR(c);\n    pos.x=abs(pos.x);\n    pos.y+=h/3.0;\n\tvec2 center = vec2(0.0, sqrt(R*R-a*a));\n    if(pos.y<center.y-sqrt(R*R-pos.x*pos.x)) return 0.0;\n    float L = sqrt(R*R - (h*h+a*a)/4.0);\n    vec2 dir = normalize(vec2(-h, -a));\n    center = vec2(a/2.0,h/2.0) + dir*L;\n    float maxy = sqrt(R*R - pow(pos.x-center.x,2.0))+center.y;\n    if(pos.y>maxy) return 0.0;\n    return 1.0;\n    \n}\nfloat circleSquare(vec2 pos, float c){\n\tpos=abs(pos);\n\tif(pos.x>1.0 || pos.y>1.0)\n        return 0.0;\n    float R = mix(1.0, 0.0, c);\n    if(pos.x > 1.0-R && pos.y-1.0+R > sqrt(R*R-pow(pos.x-1.0+R,2.0)))\n        return 0.0;\n    return 1.0;\n}\nfloat squareTriangle(vec2 pos, float c){\n    if(c<0.5)\n        return circleSquare(pos,1.0-c*2.0);\n    c-=0.5;\n    return triangleCircle(pos,1.0-c*2.0);\n}\nfloat coeff(){\n    float t = iTime/3.0;\n    t -= floor(t);\n    //return 0.8+t*0.1;\n    t *= 2.0;\n    if(t<=1.0)\n        return t;\n    return 2.0-t;\n}\nfloat coeff2(){\n    //return 0.0;\n    float t = iTime/5.0;\n    t -= floor(t);\n    t *= 2.0;\n    if(t<=1.0)\n        return t;\n    return 2.0-t;\n}\nfloat quintic(float t){\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 tex = fragCoord/iResolution.y;\n\tvec2 pos = tex*2.0-vec2(1.0);\n    float fi = coeff2()*2.0*M_PI;\n    pos = vec2(pos.x*cos(fi)-pos.y*sin(fi),pos.x*sin(fi)+pos.y*cos(fi));\n    pos*=1.414;\n    float t = coeff()*3.0;\n    float a;\n    if(t>2.0)\n    \ta=circleSquare(pos,quintic(t-2.0));\n    else if(t>1.0)\n    \ta=triangleCircle(pos,quintic(t-1.0));\n    else\n    \ta=squareTriangle(pos,quintic(t));\n        \n\tfragColor = vec4(a);\n}","name":"Image","description":"","type":"image"}]}