{"ver":"0.1","info":{"id":"MdKyzh","date":"1701445222","viewed":27,"name":"Phase Shifts 2018","username":"samuelotherion","description":"phase shifts","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["fun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define VO void\n#define BO bool\n#define FL float\n#define V2 vec2\n#define V3 vec3\n#define V4 vec4\n#define FLOOR 13.\n#define FRACT 8.\n\n#define TX texture( iChannel0, N )\n\n// just for swizzling\nconst V4\n    Q = V4( +1, 0, -1, .5 );\n\n// some globals\nV4\n    O,   // output color\n    R;   // resolution and its inverse\n\nV2\n    N;   // (0,0) to (1,1)\n\nVO\n    init( V2 i ) {\n        \n        R.xy = iResolution.xy;\n        R.zw = 1. / R.xy;\n        \n        N = i * R.zw;\n        \n        O = TX;\n    }\n\nVO\n    work( ) {\n\n        O.rgb = TX.rgb;\n    }\n\nVO\n    finish( out V4 o ) {\n        \n        o = V4( clamp( O.rgb / O.a, 0., 1. ), 1. );\n    }\n\nVO\n    mainImage( out V4 o, in V2 i ) {\n    \n        init( i );\n        \n        work( );\n        \n        finish( o );        \n    }","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define VO void\n#define BO bool\n#define FL float\n#define V2 vec2\n#define V3 vec3\n#define V4 vec4\n#define FLOOR 13.\n#define FRACT 8.\n\n#define TX texture( iChannel0, N )\n\n// just for swizzling\nconst V4\n    Q = V4( +1, 0, -1, .5 );\n\n// some globals\nV4\n    O,   // output color\n    R;   // resolution and its inverse\n\nV3\n    A; // aspect ratio and reverse\n\nV2\n    I,   // pixel from (0,0) to iResolution.xy - 1 \n    N,   // (0,0) bis (1,1)\n    S;   // (0,0) bis ASX.xy\n\n\nVO\n    init( V2 i ) {\n        \n        R.xy = iResolution.xy;\n        \n        R.zw = 1. / R.xy;\n        \n        A = V3( R.x / R.y, 1., R.y / R.x );\n        \n        I = floor( i );\n        \n        N = i * R.zw;\n        \n        S = A.xy * ( 2. * N - 1. );\n\n        O = iFrame == 0\n            ? V4( 0,0,0, 1 )\n            : TX;\n    }\n\nVO\n    work( ) {\n\n        FL\n            f = 30. + 29.5 * cos( .123 * iTime );\n        \n        V2\n            i = S - floor( f * S ) / f,\n            x = ( Q.xx + V2( cos( 6.3 * ( N.x + 1.00 * iTime ) ), sin( 6.3 * ( N.y + 1.00 * iTime ) ) ) ) / ( 2. * f ),\n            y = ( Q.xx + V2( cos( 6.3 * ( N.x + 1.01 * iTime ) ), sin( 6.3 * ( N.y + 1.01 * iTime ) ) ) ) / ( 2. * f ),\n            z = ( Q.xx + V2( cos( 6.3 * ( N.x + 1.02 * iTime ) ), sin( 6.3 * ( N.y + 1.02 * iTime ) ) ) ) / ( 2. * f );\n        \n        V2\n            r = i - x,\n            g = i - y,\n            b = i - z;\n        \n        V3\n            c = V3( dot( r, r ), dot( g, g ), dot( b, b ) );\n        \n        //O.rgb = .82 * pow( V3( .001 ), c );\n        \n        O.rgb = 20. *  mix( O.rgb, pow( c, V3( -.125 ) ) / 4., .03 );\n    }\n\nVO\n    finish( out V4 o ) {\n        \n        o = V4( clamp( O.rgb / O.a, 0., 1. ), 1. );\n    }\n\nVO\n    mainImage( out V4 o, in V2 i ) {\n    \n        init( i );\n        \n        work( );\n        \n        finish( o );        \n    }","name":"Buffer A","description":"","type":"buffer"}]}