{"ver":"0.1","info":{"id":"lscXRH","date":"1631573089","viewed":86,"name":"Plasma Tunnel spiral","username":"the23","description":"a plasma tunnel","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["distancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float speed = 1.5;\nconst float widthFactor = 4.0;\n\nvec3 calcSine(vec2 uv, \n              float frequency, float amplitude, float shift, float offset,\n              vec3 color, float width, float exponent, float timeOffset)\n{\n    float angle = (timeOffset + iTime) * speed * frequency + (shift + uv.x) * 6.2831852;\n    \n    float y = sin(angle) * amplitude * 0.7 + offset;\n    \n    float scale = pow(smoothstep(width * widthFactor, 0.0, distance(y, uv.y)), exponent * 4.0);\n    \n    return color * scale * 0.8;\n}\n\nvec3 crossBar(vec2 uv, vec3 color, float timeOffset)\n{\n    color += calcSine(uv, 2.0, 0.45, 0.0, 0.5, vec3(0.0, 0.0, 1.0), 0.1, 3.0, timeOffset);\n    color += calcSine(uv, 2.2, 0.45, 0.2, 0.5, vec3(0.0, 1.0, 0.0), 0.1, 3.0, timeOffset);\n    color += calcSine(uv, 2.4, 0.45, 0.4, 0.5, vec3(1.0, 0.0, 0.0), 0.1, 3.0, timeOffset);\n\n    color += calcSine(uv, 2.6, 0.4, 0.6, 0.5, vec3(0.5, 0.0, 1.0), 0.1, 4.0, timeOffset);\n    color += calcSine(uv, 2.8, 0.4, 0.8, 0.5, vec3(1.0, 0.5, 1.0), 0.1, 4.0, timeOffset);\n    color += calcSine(uv, 3.0, 0.4, 0.0, 0.5, vec3(1.0, 0.0, 0.5), 0.1, 4.0, timeOffset);\n    \n    color += calcSine(uv, 2.25, 0.45, 0.5, 0.5, vec3(0.0, 0.5, 1.0), 0.1, 4.0, timeOffset);\n    color += calcSine(uv, 2.50, 0.45, 0.5, 0.5, vec3(0.5, 1.0, 0.5), 0.1, 4.0, timeOffset);\n    color += calcSine(uv, 2.75, 0.45, 0.5, 0.5, vec3(1.0, 0.5, 0.0), 0.1, 4.0, timeOffset);\n\treturn color;\n}\n\n\nfloat time = 1.2 * iTime;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x -= (iResolution.x - iResolution.y) * 0.5 / iResolution.y;\n    \n    vec3 color = vec3(0.0);\n    vec2 center = vec2(0.5);\n    center.x = 0.5 + sin(-time * 1.1) * 0.35;\n    center.y = 0.5 + cos(-time * 0.9) * 0.2;\n    vec2 relPos = uv - center;\n    vec2 nrelPos = normalize(relPos);\n    float centerDst = length(relPos);\n    \n    float ang = atan(nrelPos.y, nrelPos.x)/ 3.1415926; \n    ang = ang * 0.5 + 0.5;\n    //color = vec3(ang);\n    \n    vec2 cUV = vec2(ang * 4.0, pow(centerDst, 0.2) * 7.5);\n    cUV.x = fract(cUV.x + time * 0.4);\n    cUV.y = fract(cUV.y - time * 0.81);\n    cUV.y = fract(cUV.y + cUV.x);\n    \n    vec2 cUVtex = cUV * vec2(2.0, 1.0);\n  \n\tcolor = crossBar(cUV, color, sin(ang * 3.1415926));\n    color = crossBar(cUV * vec2(4.0), color, sin(ang * 3.1415926));\n    //color = crossBar(cUV * vec2(2.0) + vec2(0.5, 0.0), color, sin(ang * 3.1415926));\n    //color = crossBar(fract(cUV * vec2(4.0, 1.0)), color, sin(ang * 3.1415926));\n\n    color *= smoothstep(0.0, 0.05, centerDst);\n\n\tfloat dst =  fract((step(0.5, cUV.x) + step(0.5, cUV.y)) * 0.5);\n    dst = length(fract(cUV * 4.0) - 0.5) * 2.2;\n    float col = step(0.5, dst);\n    //color = mix(color, 1.0 - color, col * 0.3);\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}