{"ver":"0.1","info":{"id":"MdfBz7","date":"1495333346","viewed":2505,"name":"Particles Dance","username":"MatHack","description":"Hum hum :) Move","likes":51,"published":1,"flags":0,"usePreview":0,"tags":["music","abstract","particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nfloat random(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec4 outColor = vec4(0.0);\n\tfloat time = iTime * 0.1;    \n    vec2 uvNorm = fragCoord.xy / iResolution.xy;\n\tvec2 uv = -0.5 + 1.0 * uvNorm;\n    uv /= vec2(iResolution.y / iResolution.x, 1.);\n\t   \n    for(float i=0.0; i<600.0 ;i++){\n        float f1 = mod(i * 0.101213, 0.28);   \n        float fft1 = texture(iChannel0, vec2(f1)).x;  \n        float r = (fft1 / 2.);\n        float r1 = (fft1 / 8.) * random(vec2(uv));\n        float a = random(vec2(i))*(M_PI*2.);      \n        vec2 center = vec2(cos(a), sin(a)) * r;\n        vec2 center2 = vec2(cos(a), sin(a)) * r1;        \n        float dist = length(uv - center);\n        float dist2 = length(uv - center - center2);        \n        float birghtness = 1./pow(0.001 + dist*350., 2.);\n        float birghtness2 = 1./pow(0.001 + dist2*500., 2.);        \n        vec3 color = vec3(fft1-0.8, 0.3, fft1-0.2);\n        vec3 col = color * birghtness2 * fft1 * 2.;\n        col += color * birghtness * fft1 * 1.5;      \n        //Out :D\n        outColor.rgb += col;       \n    } \n    \n    \n    float grid = smoothstep((sin(length(uv.y-0.5)*(800.*length(uv.y+0.5))) * sin(length(uv.x+0.5)*(800.*length(uv.x-0.5)))), 0.0, 1.0);\n    outColor.rgb += (outColor.rgb * vec3(grid) * 0.6);\n    \n\tfragColor = outColor;\n}","name":"Image","description":"","type":"image"}]}