{"ver":"0.1","info":{"id":"l3XBW4","date":"1728382117","viewed":32,"name":"Double-Slit Interferometer","username":"rcmz","description":"Young's double-slit interferometer","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","light","doubleslit","young","interferometer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(float d) {\n    return sin(iTime * 30.f - 300.f * d);\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    float aspect = iResolution.x / iResolution.y;\n    vec2 point = fragCoord / iResolution.y;\n    \n    vec2 sourceSlit = vec2(aspect * 0.3f, 0.5f);\n    vec2 doubleSlit1 = vec2(aspect * 0.6f, 0.3f);\n    vec2 doubleSlit2 = vec2(doubleSlit1.x, 1.f - doubleSlit1.y);\n    vec2 screen = vec2(aspect * 0.9f, 0.5f);\n    \n    float intensity  = 0.f;\n    if (point.x < sourceSlit.x) {\n        intensity = f(point.x);\n    } else if (point.x < doubleSlit1.x) {\n        intensity = f(sourceSlit.x + distance(sourceSlit, point));\n    } else if (point.x < screen.x) {\n        intensity = \n            f(sourceSlit.x + distance(sourceSlit, doubleSlit1) + distance(doubleSlit1, point)) +\n            f(sourceSlit.x + distance(sourceSlit, doubleSlit2) + distance(doubleSlit2, point));\n    } else {\n        intensity = \n            f(sourceSlit.x + distance(sourceSlit, doubleSlit1) + distance(doubleSlit1, vec2(screen.x, point.y))) +\n            f(sourceSlit.x + distance(sourceSlit, doubleSlit2) + distance(doubleSlit2, vec2(screen.x, point.y)));\n    }\n    \n    fragColor.rgb = abs(intensity) * (intensity > 0.f ? vec3(1,0,0) : vec3(0,0,1));\n    if (point.x >= aspect * 0.95f) fragColor.rgb = vec3(max(fragColor.r, fragColor.b));\n}","name":"Image","description":"","type":"image"}]}