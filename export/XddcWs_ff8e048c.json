{"ver":"0.1","info":{"id":"XddcWs","date":"1524366256","viewed":439,"name":"Many Triangles","username":"rory618","description":"How many triangles can fit in pixel shaders?\n\n[SPACE] to toggle symmetry\nCLICK to set triangle endpoints\n\nWill add comments on algorithm in time, but looking like something that could be used for replacing the missing vertex shaders from shadertoy.d","likes":10,"published":1,"flags":48,"usePreview":0,"tags":["2d","triangle","rasterization","stochastic","routing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":2,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n    vec2 uv = i/R.xy;\n    o=texture(iChannel0,uv);\n    if(texture( iChannel3, vec2(32.5/256.0,0.75) ).x > .5){\n    \tuv.x=1.-uv.x;\n    \to+=texture(iChannel0,uv);\n    \tuv.y=1.-uv.y;\n    \to+=texture(iChannel0,uv);\n    \tuv.x=1.-uv.x;\n    \to+=texture(iChannel0,uv);\n    } else {\n        o*=4.;\n    }\n} ","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float h = sqrt(3.)/2.;\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    float d = 5.;\n    vec2 A = vec2(fract(i.y/2.)*2.*d+i.x*2.*d,d*2.*i.y*h)/R.xy,\n         B = vec2(fract(i.y/2.)*2.*d+i.x*2.*d+d*2.,d*2.*i.y*h)/R.xy,\n         C = vec2(fract(i.y/2.)*2.*d+i.x*2.*d+d,d*2.*i.y*h+h*d*2.)/R.xy;\n\n    A += sin(R.xy*T(A.x+A.y)+iTime+vec2(0,pi))*.015;;\n    B += sin(R.xy*T(B.x+B.y)+iTime+vec2(0,pi))*.01;;\n    C += sin(R.xy*T(C.x+C.y)+iTime+vec2(0,pi))*.02;;\n    \n        float v = 1.;\n        \n    vec4 r = hash44(vec4(floor(i/v),0,1));\n        r.xz = sqrt(-2.*log(r.xz));\n        r.yw *= 6.28318;\n        r.zw = r.z*vec2(cos(r.w),sin(r.w))*R.y/3.;\n        r.xy = r.x*vec2(cos(r.y),sin(r.y))*R.y/3.;\n    \n    A = .5+r.xy/R.xy;\n    r = hash44(vec4(floor(i/v),0,2));\n        r.xz = sqrt(-2.*log(r.xz));\n        r.yw *= 6.28318;\n        r.zw = r.z*vec2(cos(r.w),sin(r.w))*R.y/3.;\n        r.xy = r.x*vec2(cos(r.y),sin(r.y))*R.y/3.;\n    \n    B = .5+r.xy/R.xy;\n    r = hash44(vec4(floor(i/v),0,3));\n        r.xz = sqrt(-2.*log(r.xz));\n        r.yw *= 6.28318;\n        r.zw = r.z*vec2(cos(r.w),sin(r.w))*R.y/3.;\n        r.xy = r.x*vec2(cos(r.y),sin(r.y))*R.y/3.;\n    \n    C = .5+r.xy/R.xy;\n    \n    \n    A = ((A*R.xy-R.xy/2.)*T(iTime/10.)+R.xy/2.)/R.xy;\n    B = ((B*R.xy-R.xy/2.)*T(iTime/20.)+R.xy/2.)/R.xy;\n    C = ((C*R.xy-R.xy/2.)*T(iTime/30.)+R.xy/2.)/R.xy;\n    \n    if(iMouse.z>0.){\n        C = iMouse.xy/R.xy;\n        B = iMouse.zw/R.xy;\n    }\n    \n    \n    \n    o = vec4(E(A),E(B),E(C),i.x+i.y*R.x+1.);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define tris floor(iTime/2.)\n#define iters 90\n#define R iResolution\n#define F iFrame\n#define T(x) mat2(  cos(x+vec4(0,-pi,pi,0)) )\n#define E(x) uintBitsToFloat(packSnorm2x16(x))\n#define D(x) unpackSnorm2x16(floatBitsToUint(x))\n#define pi 1.570796\nvec4 hash44(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+19.19);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\n\n////////////////\n// Triangle distance in 2D\n// Created by madware in 2017-12-02\n// https://www.shadertoy.com/view/4lXfzS\n#define cross2(v0, v1) v0.x * v1.y - v0.y * v1.x\n#define IsIn(b) all(greaterThan(b, vec3(0.)))\n\nfloat lineDistanceWork(in vec2 p0, in vec2 p0p, in vec2 p1p, in vec2 p0p1, in vec2 p)\n{\n    vec2 p0p1Norm = normalize(p0p1);\n    \n    float t = dot(p0p, p0p1Norm);    \n    float nearestDistance = abs(cross2(p0p, p0p1Norm));\n        \n    return mix(\n        nearestDistance*nearestDistance,\n        min(dot(p0p,p0p), dot(p1p,p1p)),\n        float(t <= 0.0 || t*t >= dot(p0p1,p0p1))\n    );  \n}    \n\nfloat lineDistance(in vec2 p0, in vec2 p1, in vec2 p)\n{\n    vec2 p0p = p - p0;\n    vec2 p1p = p - p1;\n    vec2 p0p1 = p1 - p0;\n    \n    return sqrt(lineDistanceWork(p0, p0p, p1p, p0p1, p));  \n}\n\nfloat triangleDistance(in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p, out vec3 barycentric)\n{\n    vec2 e0 = p1 - p0;\n\tvec2 e1 = p2 - p1;\n    vec2 e2 = p0 - p2;\n\n\tvec2 v0 = p - p0;\n\tvec2 v1 = p - p1;\n\tvec2 v2 = p - p2;\n    \n    float a = cross2(e0, e1);\n    \n    //Calculate distance to the triangle as a min distance to it's edges\n    float dst = \n        sqrt(min(min\n        (\n            lineDistanceWork(p0, v0, v1, e0, p),\n            lineDistanceWork(p1, v1, v2, e1, p)\n        ),  lineDistanceWork(p2, v2, v0, e2, p)));\n    \n    //Using simplified 2d version of barycentric coords\n    vec2 bar2 = vec2(cross2(v1, v2), cross2(v2, v0)) / a;\n    barycentric = vec3(bar2, 1.0 - bar2.x - bar2.y);\n    \n    bool isInside = IsIn(barycentric);\n    //When we inside a triangle the distance is negative\n    return dst * mix(1.0, -1.0, float(isInside));    \n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n    o = vec4(0);\n    \n    vec4 r = hash44(vec4(-1,F,i));\n    vec4 t = texture(iChannel0,r.xy);\n    \n    vec2 A = D(t.x);\n    vec2 B = D(t.y);\n    vec2 C = D(t.z);\n    float w = 0.;\n    vec3 barycentric;\n    float d = triangleDistance(A*R.xy,B*R.xy,C*R.xy,i,barycentric);\n    \n    for(int j = 0; j < iters/3; j++){\n        vec4 r = hash44(vec4(j,F,i));\n        r.xy /= R.xy;\n        r.y*=sqrt(tris);\n        r.x*=sqrt(tris);\n        r.x = fract(r.x+iTime/R.x*6.);\n        r.y = fract(r.y+iTime/R.y*6.);\n        t = texture(iChannel0,r.xy);\n        \n        vec2 Ap = D(t.x);\n        vec2 Bp = D(t.y);\n        vec2 Cp = D(t.z);\n        float dp = triangleDistance(Ap*R.xy,Bp*R.xy,Cp*R.xy,i,barycentric);\n        \n        if(abs(dp)<abs(d)){\n            A = Ap;\n            B = Bp;\n            C = Cp;\n            d = dp;\n            w= t.w;\n        }\n    }\n    if( length(A)>.01 && length(B)>.01 && length(C)>.01)\n    \to = vec4(E(A),E(B),E(C),w);\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n    o = vec4(0);\n    \n    vec4 r = hash44(vec4(-1,F,i));\n            \n    r.z = sqrt(-2.*log(r.z));\n    r.w *= 6.28318;\n    r.zw = r.z*vec2(cos(r.w),sin(r.w))*15.;\n    vec4 t = texture(iChannel0,(i+r.zw)/R.xy);\n    \n    vec2 A = D(t.x);\n    vec2 B = D(t.y);\n    vec2 C = D(t.z);\n    float w = 0.;\n    vec3 barycentric;\n    float d = triangleDistance(A*R.xy,B*R.xy,C*R.xy,i,barycentric);\n    \n    for(int j = 0; j < iters/3; j++){\n        vec4 r = hash44(vec4(j,F,i));\n                \n        r.z = sqrt(-2.*log(r.z));\n        r.w *= 6.28318;\n        r.zw = r.z*vec2(cos(r.w),sin(r.w))*12.;\n        t = texture(iChannel0,(i+r.zw)/R.xy);\n        \n        \n        \n        vec2 Ap = D(t.x);\n        vec2 Bp = D(t.y);\n        vec2 Cp = D(t.z);\n        float dp = triangleDistance(Ap*R.xy,Bp*R.xy,Cp*R.xy,i,barycentric);\n        \n        if(abs(dp)<abs(d)){\n            A = Ap;\n            B = Bp;\n            C = Cp;\n            d = dp;\n            w = t.w;\n        }\n    }\n    o = vec4(E(A),E(B),E(C),w);\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n    vec2 uv = i/R.xy;\n    o = vec4(0);\n    for(int j = 0; j < iters/3; j++){\n        \n        vec4 r = hash44(vec4(F,i,j));        \n        r.z = sqrt(-2.*log(r.z));\n        r.w *= 6.28318;\n        r.zw = r.z*vec2(cos(r.w),sin(r.w));\n        vec4 t = texture(iChannel0,(i+r.zw)/R.xy);//sample random nearby points\n        vec3 barycentric;\n        //t = vec4(E(vec2(.5,.5)),E(vec2(.5,.6)),E(vec2(.6,.5)),0);\n        \n        \n        \n        vec2 A = D(t.x);\n        vec2 B = D(t.y);\n        vec2 C = D(t.z);\n        float d = abs(triangleDistance(A*R.xy,B*R.xy,C*R.xy,i,barycentric));\n        d = clamp(1.-d,0.,1.);\n        o += vec4(((.5+.5*cos(vec4(2,3,5,0)*t.w/6e3))))*d/30.;\n    }\n    o=mix(o,texture(iChannel1,uv),.975);\n}","name":"Buf D","description":"","type":"buffer"}]}