{"ver":"0.1","info":{"id":"3l33Dn","date":"1576422443","viewed":95,"name":"smooth inversion truchet tiling","username":"sasha_sortai","description":"test of a smooth version of\nif (length(v)>1.) v/=dot(v,v);\n\ntruchet tiling as a bonus","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-.5*iResolution.xy)*125./min(iResolution.x,iResolution.y);\n    \n    //if (p.x*p.x+p.y*p.y>100.) p /= ((p.x*p.x+p.y*p.y)/100.);\n    \n    p /= 25.;\n    \n    p /= p.x*p.x+p.y*p.y+1.; //smooth inversion: approaches v/dot(v,v) as |v| goes to infinity, and just v as |v| goes to zero\n    \n    p *= 25.;\n    \n    vec2 q = p;\n    \n    \n    \n    while (q.x>1.) q.x -= 2.; while (q.x<-1.) q.x += 2.;\n    while (q.y>1.) q.y -= 2.; while (q.y<-1.) q.y += 2.;\n    \n    float rand = sin(100.-10000.*cos(p.x-q.x-150.)*sin(p.y-q.y+1000.));\n    if (cos((p.x+p.y-q.x-q.y)*PI/2.)>0.) q.x*=-1.;\n    if (rand>cos(iTime*2.)*1.1)\n        q.x*=-1.;\n    \n    if (q.x+q.y<0.) q = -q.yx;\n    \n    \n    float fac = abs(pow(pow(q.x-1.,2.)+pow(q.y-1.,2.),.5)-1.);\n    //fac = abs(q.x+q.y-1.);\n    vec3 col = mix(vec3(1,.3,.05), vec3(.2,0,0), vec3(smoothstep(0.1,0.4,fac)));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}