{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Ref: http://adrianboeing.blogspot.in/2011/01/raycasting-two-planes-in-webgl.html\n//\t\thttps://www.shadertoy.com/view/XsX3Rn\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // clamp pixel posiiton in [-1,1]\n    vec2 p = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    vec2 uv;\n\n    // textures are in wrap mode so they are repeating them selves as uvs are incrementing\n    float h = 0.25;\n    \n    // as per calculations on h blog\n    // ok again :-/\n    // I understand the maths part but not visualization :(\n\tuv.x = h * p.x / p.y;\n    \n    // think it as inverse relationship y = 1/py which makes it 1 at horizontal edges and infinite \n    // in between. h is just to adjust scaling of wrapping\n\tuv.y = 0.2 * iTime + h / abs(p.y);\n\n    // Multiply with py for darkening center. Need to multiply with absolute value else \n    // bottom plane will become completely dark because of negative values\n    // in blog its py*py which is difficult to understand and i like this effect better \n    // as it gives more depth\n    // update: changing it to white in between that looks even cooler\n\tfragColor = vec4(texture(iChannel0,uv).xyz * 0.1/abs(p.y), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4s2XWm","date":"1412825642","viewed":287,"name":"InfinitePlanes","username":"abhi_bansal","description":"Raycasting Two Infinite Planes","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raycasting","plane","infinite"],"hasliked":0,"parentid":"","parentname":""}}