{"ver":"0.1","info":{"id":"ssyGzG","date":"1631729301","viewed":69,"name":"pre-surgical anxiety swirl","username":"abjectadvect","description":"anxiety swirls","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265;\n\nfloat mag2(vec3 v) { return dot(v, v); }\nfloat mag(vec3 v) { return sqrt(dot(v, v)); }\n\n\nfloat line(vec3 p, vec3 q, vec3 d, float width) {\n    return mag(p - (q + d*dot(p-q, d)/dot(d,d))) - width;\n}\n\nvec3 twist(vec3 p, vec3 center, float dist) {\n    vec3 v = p - center;\n    \n    vec2 polar = vec2(sqrt(dot(v.xy, v.xy)), atan(v.y, v.x));\n    float rad = polar.x;\n    float theta = polar.y;\n    \n    \n    float r = 2. * PI * polar.x / dist;\n    \n    float angle = theta + r;\n    \n    v = vec3(rad * cos(angle), rad * sin(angle), v.z);\n \n    return v + center;\n}\n\nfloat lerps(float a, float b, float s) { return s * b + (1.0 - s) * a; }\nvec3 lerpv(vec3 a, vec3 b, float s) { return s * b + (1.0 - s) * a; }\n\nfloat scene(vec3 p) {\n\n    p.xy += vec2(sin(p.y*10. + iTime)*0.05, 0.);\n\n    float swirl1 = line(\n            twist(p, vec3(sin(iTime)/5.0, cos(iTime)/5.0, 0.), 0.08), \n            vec3(0., 0., 0.), \n            vec3(-0.4, 1., 0.), \n            lerps(0.03, 0.3, abs(sin((iTime + 7.)*2.3))));\n            \n    float swirl2 = line(\n        twist(p, vec3(-0.25, -0.25, 0.), lerps(0.01, 0.1, sin(iTime))), \n        vec3(0., 0., 0.), \n        vec3(0.4, 1., 0.), \n        lerps(0.03, 0.3, abs(sin((iTime + 7.)*2.3))));\n       \n\n    return max(swirl1, swirl2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy/2.)/iResolution.xx;\n    \n    vec3 eye = vec3(uv.x, uv.y, -10.);\n    \n    float sd = 1000.;\n    vec3 p = eye;\n    vec3 dir = vec3(0., 0., 1.);\n    for (int i = 0; i < 100; i++) {\n       float d = scene(p);\n       if (d > sd) break;\n       \n       sd = d;\n       if (d <= 0.001) break;\n       p = p + sd * dir;\n    }\n    \n    float anxiety = max(0., (sd > 0.001 ? lerps(1.0, 0.0, sd*lerps(1.0, 10.0, abs(sin(iTime*2.7)))) : 1.0));\n\n    vec3 col = lerpv(vec3(1.0, 0.5, 0.), vec3(1.0, 0., 0.), anxiety);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}