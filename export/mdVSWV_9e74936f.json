{"ver":"0.1","info":{"id":"mdVSWV","date":"1681656590","viewed":64,"name":"Interactive evolution round2 v32","username":"Mishka","description":"Combining version 3 and 2 from the process described here: https://github.com/anhinga/with-GPT-4/blob/main/Shadertoy/round-2-interactive-evolution.md","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fract_sin_dot(vec2 uv) {\n    return fract(sin(dot(\n        vec2(sin(3. * uv.x) * cos(4. * uv.y), sin(8. * uv.y) * cos(5. * uv.x)), // Multiply sin and cos functions\n        0.1 * iMouse.xy + vec2(1.0, 1.0))) *\n        4. + 0.5 * iTime);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 color = vec3(fract_sin_dot(uv),\n                      fract_sin_dot(uv + vec2(0.1, 0.2)), // Add an offset to the UV coordinates\n                      fract_sin_dot(vec2(sin(3. * uv.x), uv.y)));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}