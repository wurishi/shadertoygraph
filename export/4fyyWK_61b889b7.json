{"ver":"0.1","info":{"id":"4fyyWK","date":"1732359290","viewed":41,"name":"CoordinateGrid","username":"miyu","description":"Learn the main function:fwidth()","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","coordinate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 CoordinateGrid_Color(float subdivision,vec2 uv)\n{\n    uv=subdivision*uv;\n    vec3 col=vec3(0.);\n    vec2 grid = fract(uv);\n    if(grid.x<fwidth(uv.x))\n        col=vec3(1.);\n    if(grid.y<fwidth(uv.y))\n        col=vec3(1.);   \n    if(abs(uv.x)<fwidth(uv.x))\n        col=vec3(1.,0.,0.);\n    if(abs(uv.y)<fwidth(uv.y))\n        col=vec3(0.,1.,0.);\n    return col;\n}\n\nvec2 rotate2D(float angle,vec2 point)\n{\n    mat2 rotateMat = mat2(cos(angle),sin(angle),-sin(angle),cos(angle));\n    return rotateMat*point;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord-0.5*iResolution.xy)/min(iResolution.x,iResolution.y);\n   vec3 color = vec3(0.);\n   color = CoordinateGrid_Color(sin(iTime)*10.,rotate2D(iTime*0.2,uv));\n   fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}