{"ver":"0.1","info":{"id":"Wd2Szy","date":"1554234729","viewed":245,"name":"lame 2d water refraction","username":"spyrospettas","description":"a lame 2d water refraction shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fstep(float x) {\n    float a = mod(x,1.0);\n    if (a > 0.7)\n    \treturn 1.0;\n    else\n        return 0.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n   \n    vec2 uvs = vec2(uv.x+0.01*fstep(20.0*uv.y+iTime)+0.1*iTime,uv.y);\n    vec4 tex = texture(iChannel0, uvs);\n    tex.rgb = (tex.rgb)*vec3(0.4,0.4,1.0);\n    // Output to \n    fragColor = tex;\n}","name":"Image","description":"","type":"image"}]}