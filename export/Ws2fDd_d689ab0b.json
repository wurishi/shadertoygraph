{"ver":"0.1","info":{"id":"Ws2fDd","date":"1591153172","viewed":58,"name":"Smiley Family","username":"stradiotto","description":"This shader just draws three smileys on the screen. It considers orders on the draws of circles for a parameterized smiley.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles","smoothstep","smiley","negativecolors","clampfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 Circle(vec2 uv, vec2 p, float r, float blur, vec4 color)\n{    \n\tfloat d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);    \n    return c * color;\n}\n\nvec4 smiley(vec2 uv, vec2 p, float size, float blur)\n{\n\tvec4 c = vec4(0.);\n    \n    c += Circle(uv, size * vec2( .00,  .00) + p, size * .40, blur, vec4(1., 1., 0.,  1.));    c  = clamp(c, 0., 1.);\n    \n    c -= Circle(uv, size * vec2( .00, -.10) + p, size * .18, blur, vec4(1., 1., 0.,  1.));    c  = clamp(c, 0., 1.);\n    c += Circle(uv, size * vec2( .00,  .01) + p, size * .23, blur, vec4(1., 1., 0.,  1.));    c  = clamp(c, 0., 1.);    \n    \n    \n    c -= Circle(uv, size * vec2( .00, -.05) + p, size * .07, blur, vec4(0., 1., 0.,  1.));    c  = clamp(c, 0., 1.);\n    \n    c -= Circle(uv, size * vec2(-.15,  .10) + p, size * .10, blur, vec4(1., 1., 1.,  1.));    c  = clamp(c, 0., 1.);\n    c -= Circle(uv, size * vec2( .15,  .10) + p, size * .10, blur, vec4(1., 1., 1.,  1.));    c  = clamp(c, 0., 1.);\n    \n    c += Circle(uv, size * vec2(-.15,  .10) + p, size * .08, blur, vec4(1., 1., 1.,  1.));    c  = clamp(c, 0., 1.);\n    c += Circle(uv, size * vec2( .15,  .10) + p, size * .08, blur, vec4(1., 1., 1.,  1.));    c  = clamp(c, 0., 1.);\n    \n    c -= Circle(uv, size * vec2(-.15,  .10) + p, size * .06, blur, vec4(0., 1., 1.,  1.));    c  = clamp(c, 0., 1.);\n    c -= Circle(uv, size * vec2( .15,  .10) + p, size * .06, blur, vec4(0., 1., 1.,  1.));    c  = clamp(c, 0., 1.);\n    \n    c -= Circle(uv, size * vec2(-.15,  .10) + p, size * .05, blur, vec4(1., 0., 0.,  1.));    c  = clamp(c, 0., 1.);\n    c -= Circle(uv, size * vec2( .15,  .10) + p, size * .05, blur, vec4(1., 0., 0.,  1.));    c  = clamp(c, 0., 1.);\n    \n    return c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec4 c = smiley(uv, vec2(-0.4,  0.00), 1.00, .015);\n    vec4 d = smiley(uv, vec2( 0.4,  0.23), 0.65, .010);\n    vec4 e = smiley(uv, vec2( 0.4, -0.29), 0.50, .005);\n    \n    fragColor = c + d + e;\n}","name":"Image","description":"","type":"image"}]}