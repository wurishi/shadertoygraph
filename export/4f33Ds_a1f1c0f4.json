{"ver":"0.1","info":{"id":"4f33Ds","date":"1712241602","viewed":48,"name":"p3Med","username":"hp3rez","description":"Circles that disappear into middle of screen","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv-p);\n    \n    float c = smoothstep(r, r - blur, d);\n    \n    return c;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    \n    //get length and angles\n    float d = length(uv);\n    float angle = atan(uv.y, uv.x);\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //determine circles and colors\n    float c = sin(d * 50. + (iTime*2.));\n    vec3 color = vec3(uv.x, 1.-uv.x*uv.y, -uv.x);\n    vec3 black = vec3(0.);\n    \n    //combine colors and circles\n    vec3 background = mix(color, black, c);\n    \n    \n    // Output to screen\n    fragColor = vec4(background,1.0);\n}","name":"Image","description":"","type":"image"}]}