{"ver":"0.1","info":{"id":"XcGyD3","date":"1732453689","viewed":54,"name":"Simple Patterns :) ","username":"vanshika","description":"random pattern, fork of a previous shader. mostly played with timing and colors on this one. ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["animated","pattern"],"hasliked":0,"parentid":"4cGyDW","parentname":"Ripple :)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Xor(float a, float b){\n    return a*(1.-b)+b*(1.-a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    /*\n    float a = .707;\n    float s = sin(a);\n    float c = cos(a);\n    uv *= mat2(c, -s, s, c);\n    */\n    uv *= 8.;\n    float t = iTime;\n    vec2 gv = fract(uv)*.4-.6;\n    vec2 id = floor(uv);\n    id *= sin(t);\n    //col.rb -= abs(id)*.2;\n    \n    float m = 0.;\n\n\n    \n    for(float y = -1.;y<=1.;y++){\n        for(float x = -1.;x<=1.;x++){\n            vec2 offs = vec2(x,y);\n            float d = length(uv+offs);\n            float dist = length(uv-offs)*2.;\n            float r = mix(.2, 2., sin(dist-t)*.5+.5);\n            m = Xor(m, smoothstep(r, r*.8, d*abs(sin(t*.5))));  \n        }\n    }\n   // col.rg += gv;\n    col += m;\n    col.r += 1./length(uv);\n    col.r -= smoothstep(2., 5., length(uv));\n    col.b += fract(t)*.3;\n    col -= smoothstep(3., 5., length(uv)); \n\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}