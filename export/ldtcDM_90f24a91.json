{"ver":"0.1","info":{"id":"ldtcDM","date":"1519185843","viewed":1217,"name":"Simple Checkerboard Rendering","username":"Klems","description":"Very simple checkerboard rendering exemple. That picture is rendered at half the resolution. Left uses checkerboard rendering, right doesn't.","likes":4,"published":3,"flags":32,"usePreview":1,"tags":["checkerboard","reconstruction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// convert image coordinates back to checkers coordinates\nivec2 toCheckers( in vec2 coord ) {\n    return ivec2(coord * vec2(0.5, 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // when missing information, reconstruct pixel from the 4 neighbors\n    float ch = step(mod(fragCoord.x + fragCoord.y, 2.0), 0.5);\n    vec4 a = texelFetch(iChannel0, toCheckers(fragCoord+vec2(1, 0)*ch), 0);\n    vec4 b = texelFetch(iChannel0, toCheckers(fragCoord+vec2(0, 1)*ch), 0);\n    vec4 c = texelFetch(iChannel0, toCheckers(fragCoord-vec2(1, 0)*ch), 0);\n    vec4 d = texelFetch(iChannel0, toCheckers(fragCoord-vec2(0, 1)*ch), 0);\n    fragColor = (a+b+c+d)*0.25;\n    \n    // quality test, click mouse to change\n    float div = iResolution.x*0.5;\n    if (iMouse.z > 1.0) div = iMouse.x;\n    if (fragCoord.x > div)\n    \tfragColor = texture(iChannel1, fragCoord/iResolution.x+iTime*0.05);\n    if (abs(fragCoord.x - div) < 1.0)\n        fragColor = vec4(0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // don't render one half of the frame\n    if (fragCoord.x > iResolution.x * 0.5) {\n        fragColor = vec4(0);\n        return;\n    }\n    \n    // convert image coordinates to checkers coordinates\n    fragCoord.x = floor(fragCoord.x) * 2.0 + mod(fragCoord.y, 2.0);\n    \n    // run standard shader here\n    fragColor = texture(iChannel0, fragCoord/iResolution.x+iTime*0.05);\n    \n}","name":"Buf A","description":"","type":"buffer"}]}