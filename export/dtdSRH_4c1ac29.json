{"ver":"0.1","info":{"id":"dtdSRH","date":"1685039817","viewed":152,"name":"rmr glitch demo","username":"juk","description":"simple squares glitch + fish eye","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["glitchfisheye"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// нужно зажать мышь и поводить туда сюда\n// когда нибудь потом привяжу силу эффекта к скорости мышки\n\n#define PI 3.14159265359\n#define u_radius 0.2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n\n    float strength = (1.0 + sin(float(iTime)))*0.5;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 muv = iMouse.xy / iResolution.xy;\n\n    vec2 diff = uv - iMouse.xy / iResolution.xy;\n    float distance = length(diff);\n\n    float scale = (1.0 - cos(distance/u_radius * PI * 0.5));\n    scale +=\n    (\n        mod(uv.x-muv.x, 0.1 * strength) +\n        mod(uv.y-muv.y, 0.1 * strength)\n    ) / ((1.0 + distance)*0.8);\n    \n    vec2 fishUv = iMouse.xy / iResolution.xy + normalize(diff) * u_radius * scale;\n    \n    uv = uv * (1.0 - strength) + fishUv *  strength;\n    \n\n    fragColor = vec4(texture(iChannel0, uv).xyz, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}