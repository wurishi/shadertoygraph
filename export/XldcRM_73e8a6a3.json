{"ver":"0.1","info":{"id":"XldcRM","date":"1532024084","viewed":94,"name":"JULIA AND MANDELBROT SET","username":"CALI","description":"JULIA SET FRACTAL, drag your mouse.\n\nThis shows the relation between the mandlebrot set and the set of julia sets.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float BREAK =50000.;\nconst int ITER = 100;\nconst int repeat = 5; //ADJUST THIS FOR PERFORMANCE\nconst float boxSize = 2.0; \n\n\nconst int MANDLE_BROT_BACKGROUND = 1;\n\nconst vec3 hitCol =  vec3(.4,.4,.8);\n\nvec3 julia(vec2 pos , vec2 c){\n   \tvec2 hold;\n    int i = 0;\n    float smoothcolor = exp(-length(pos));\n    for(; i < ITER; i++) { \n        hold.x = pos.x*pos.x-pos.y*pos.y;\n        hold.y = 2.0*pos.x*pos.y;\n        pos = hold+c;\n        smoothcolor += exp(-length(pos));\n        if(length(pos) > BREAK) {\n        \treturn vec3(1,0,.99)*pow(min(1.,smoothcolor/float(ITER)*1.),.2);\n        }\n    }\n    return hitCol;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 m = vec2( -.743,.131);\n    \n    // Normalized pixel coordinates (from 0 to 1)\nvec2 uv = boxSize*(fragCoord-iResolution.xy*0.5)/iResolution.y;\nm = boxSize*(iMouse.xy-iResolution.xy*0.5)/iResolution.y;\n    vec2 pixSize = boxSize/iResolution.xy;\n    // Time varying pixel color\n    \n    vec3 dark = vec3(0.,0,0);\n    for(int i = 0; i < repeat; i++) { \n        for(int j = 0; j < repeat; j++) { \n    \t\tdark+=julia(uv+vec2(i,j)*pixSize/float(repeat),m);\n        }\n    }\n    dark = dark/float(repeat*repeat);\n    vec3 mand = julia(uv,uv);\n    if (mand!=hitCol){\n    \tmand *= 0.;\n    }\n    vec3 col = float(MANDLE_BROT_BACKGROUND)*mand*vec3(0,1,1)*.3+.9*dark*vec3(1,1,1)+pow(length(m.xyx-uv.xyx),-3.)/300000.;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}