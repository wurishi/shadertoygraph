{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize coordinates and center\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    // Time variables for different animation speeds\n    float t1 = iTime * 0.9;\n    float t2 = iTime * 1.2;\n    \n    // Convert to polar coordinates\n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    // Create kaleidoscope effect by repeating angle\n    float segments = 6.0; // Number of segments\n    angle = mod(angle, 2.0 * 3.14159 / segments);\n    angle = abs(angle - 3.14159 / segments);\n    \n    // Transform back to cartesian coordinates\n    vec2 kaleidoUV = vec2(cos(angle), sin(angle)) * radius;\n    \n    // Create multiple layers of warping\n    vec2 warpedUV = kaleidoUV;\n    for(int i = 1; i < 5; i++) {\n        float fi = float(i);\n        warpedUV.x += 0.45 * sin(kaleidoUV.y * 3.0 * fi + t1 + fi * 1.4) / fi;\n        warpedUV.y += 0.15 * cos(kaleidoUV.x * 6.0 * fi + t2 + fi * 1.7) / fi;\n    }\n    \n    // Create multiple pattern layers\n    float pattern1 = sin(warpedUV.x * 10.0 + t1) * cos(warpedUV.y * 10.0 + t2);\n    float pattern2 = sin(length(warpedUV) * 15.0 - t1 * 2.0);\n    float pattern3 = cos(warpedUV.x * 8.0 - warpedUV.y * 8.0 + t2);\n    float pattern4 = cos(length(warpedUV) * 5.0 - t1 * 1.0);\n    \n    // Combine patterns with different weights\n    float finalPattern = pattern1 * 0.5 + pattern2 * 0.6 + pattern3 * 0.8 + pattern4 * 0.8;\n    \n    // Create dynamic color palette\n    float colorShift = t1 * 2.0;\n    vec3 color1 = vec3(0.9, 0.1, 0.3); // Red\n    vec3 color2 = vec3(0.1, 0.8, 0.9); // Cyan\n    vec3 color3 = vec3(0.9, 0.8, 0.1); // Yellow\n    vec3 color4 = vec3(0.4, 0.1, 0.9); // Purple\n    \n    // Mix colors based on pattern and position\n    vec3 finalColor = color1 * cos(finalPattern + colorShift) +\n                     color2 * tan(finalPattern + colorShift + 0.6) +\n                     color3 * cos(finalPattern + colorShift + 3.142) +\n                     color4 * sin(finalPattern + colorShift + 4.712);\n    \n    // Add glowing highlights\n    finalColor += 0.15 / (0.1 + sin(finalPattern));\n    \n    // Add subtle pulsing\n    finalColor *= 1.0 + 1.0 * sin(length(uv) * 5.0 - t1);\n    \n    // Add mandala-like detail at center\n    float mandala = sin(atan(warpedUV.y, warpedUV.x) * 8.0 + \n                       length(warpedUV) * 20.0 - t1) * 0.5 + 0.5;\n    finalColor *= 1.0 + mandala * 0.3 * (1.0 - smoothstep(0.0, 0.5, radius));\n    \n    // Enhance contrast and normalize\n    finalColor = pow(finalColor * 0.4, vec3(2.0));\n    \n    // Smooth edge fade\n    float edge = smoothstep(1.2, 0.4, radius);\n    finalColor *= edge;\n    \n    fragColor = vec4(finalColor, 2.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lX3czB","date":"1735261591","viewed":55,"name":"kewl kaleido","username":"saltyboi","description":"sheeeeesh","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""}}