{"ver":"0.1","info":{"id":"MsG3zw","date":"1453697287","viewed":125,"name":"TextureLookupTest","username":"NeilMonday","description":"Testing texture lookup.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","example","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\tvec4 mesh_color = vec4(1, 0, 0, 1);\n    // Look up on the texture at these coordinates\n    vec4 texel = texture(iChannel0, p);\n\n    // This gives me the texture, as it should\n    fragColor = texel; \n\n    // This gives me the solid color passed in mesh_color \n    // (in this case red (1, 0, 0, 1)), as it should, proving that the value is set\n    fragColor = mesh_color; \n\n    // This gives me the texture's red channel, as it should, using a hardcoded value\n    fragColor = texel * vec4(1, 0, 0, 1); \n\n    // This gives me black, as it shouldn't.\n    fragColor = texel * mesh_color;  \n}    \n","name":"","description":"","type":"image"}]}