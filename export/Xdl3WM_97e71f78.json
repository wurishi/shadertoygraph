{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define MIN_BANDS 16.\n#define MAX_BANDS 32.\n#define SPEED 0.7\n#define GC_INCREMENT .1\n#define GC_STEPS 14.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat n = ((MAX_BANDS - MIN_BANDS) * .5) * sin(iTime * SPEED) * 20.;\n\tn = clamp(n, MIN_BANDS, MAX_BANDS);\n\tfloat i = .5 - (floor((.5 - uv.x) * n) + 1.) / n;\n\tfloat g = 1. + floor((1. - uv.y) / (1. / (GC_STEPS + 1.))) * GC_INCREMENT;\n\ti = pow(max(0., i), 1. / g);\n\tfragColor = vec4(vec3(i), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xdl3WM","date":"1371914592","viewed":1782,"name":"Gamma correction test","username":"h3r3","description":"This test shows that WebGL performs gamma correction on the output.\nThe gradient on top should be the on displayed correctly, the others should look too bright.\nUPDATE: Look like I was wrong, read the comments.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["test","gamma","correction","calibration","linear"],"hasliked":0,"parentid":"","parentname":""}}