{"ver":"0.1","info":{"id":"Dttcz7","date":"1699143751","viewed":59,"name":"rotating while touching thingy","username":"user_25","description":"reproduction of https://twitter.com/Yugemaku/status/1323533649891913728\nMurmurHash from https://www.shadertoy.com/view/ttc3zr","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","flat","rotating","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 roundCoord(vec2 c2)\n{\n    vec4 c = c2.xyxy + vec4(2.+sqrt(2.),0,0,0);\n    vec4 j = vec3(0, .5*step(0., cos(c.xz * PI/(3.+sqrt(4.5))))).xyxz;\n    vec4 s = (1.+sqrt(.5)) * vec2(3., sqrt(12.)).xyxy;\n    return s * (floor(.5 + c / s - j) + j) - vec4(2.+sqrt(2.),0,0,0);\n}\n\nvec2 vesica2(vec4 c, float s)\n{\n    c = abs(c);\n    float k = 1. + sqrt(2.);\n    return smoothstep(s, -s, mix(\n        vec2(length(c.xy-vec2(0,k)), length(c.zw-vec2(0,k))),\n        vec2(length(c.xy+vec2(k,0)), length(c.zw+vec2(k,0)))-1.-k,\n        lessThan(c.yw, c.xz+k)\n    ));\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    float scale = 20.;\n    vec2 center = vec2(iTime);\n    \n    \n    vec2 coord = center + scale*(fragCoord - iResolution.xy/2.)/iResolution.y;\n    vec4 rounded = roundCoord(coord);\n\n    vec4 v = vec4(cos(iTime), sin(iTime), 1, -1);\n    vec2 alpha = vesica2(vec4(\n        mat2(v.yx*v.wz, v.xy) * (coord - rounded.xy),\n        mat2(v.xy, v.yx*v.zw) * (coord - rounded.zw)\n    ), scale / iResolution.y);\n    \n    vec3 color = vec3(.9);\n    color = mix(color, .4+.4*hash32(rounded.xy), alpha.x);\n    color = mix(color, .4+.4*hash32(rounded.zw), alpha.y);\n    fragColor = vec4(color,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float PI = 3.1415926535897932384626433832795;\n\n// MurmurHash from https://www.shadertoy.com/view/ttc3zr\nvec3 hash32(vec2 s)\n{\n    uvec2 src = floatBitsToUint(s);\n    const uint M = 0x5bd1e995u;\n    uvec3 h = uvec3(1190494759u, 2147483647u, 3559788179u);\n    src *= M; src ^= src>>24u; src *= M;\n    h *= M; h ^= src.x; h *= M; h ^= src.y;\n    h ^= h>>13u; h *= M; h ^= h>>15u;\n    return uintBitsToFloat(h & 0x007fffffu | 0x3f800000u) - 1.0;\n}","name":"Common","description":"","type":"common"}]}