{"ver":"0.1","info":{"id":"ts3XRs","date":"1572613441","viewed":354,"name":"Halftone metaballs","username":"bitless","description":"test of halftone effect","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","metaballs","halftone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: bitless\n// Title: Halftone Metaballs\n// Thanks to Patricio Gonzalez Vivo & Jen Lowe for \"The Book of Shaders\" and inspiration \n\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*4378.5453);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    vec3 color = vec3(.0);\n\n    // Scale\n    st *= 2.;\n\n    // Tile the space\n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n\n    float m =10.;\n\n    for (int j=-1; j<=1; j++ ) {\n        for (int i=-1; i<=1; i++ ) {\n            vec2 neighbor = vec2(float(i),float(j));\n            vec2 point = random2(i_st + neighbor);\n            point = 0.5 + 0.5*sin(iTime + 6.2831*point);\n            vec2 diff = neighbor + point - f_st;\n            float dist = length(diff);\n           \n            m = min(m,m*dist);\n        }\n    }\n\t\n    st *= 20.;\n    vec2 pt = vec2(floor(st)+0.5);\n    float c = (1.0-length(st-pt))*(1.0-m*0.5);\n    color = vec3(1.0-smoothstep(0.,0.075,abs(0.4-c)));\n\n\n    fragColor = vec4(color,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}