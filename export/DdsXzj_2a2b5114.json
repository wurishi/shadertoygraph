{"ver":"0.1","info":{"id":"DdsXzj","date":"1669218552","viewed":109,"name":"EdgeSketch","username":"blublublublucas","description":"Create a sketch effect by reducing the number of color levels and applying and edge filter. Drag the mouse to increase the strength of the edge filter.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["edge","sketch","gray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat RGB2Luminosity(in vec3 color)\n{\n    return 0.3*color.r + 0.59*color.g + 0.11*color.b;\n}\n\nfloat EdgeFilter(in sampler2D u_tex, in vec2 st, in vec2 stepSize)\n{\n    float Gx = 0.0;\n    Gx += RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, -stepSize.y)).rbg);\n    Gx += 2.0 * RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, 0.0)).rbg);\n    Gx += RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, stepSize.y)).rbg);\n\n    Gx -= RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, -stepSize.y)).rbg);\n    Gx -= 2.0 * RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, 0.0)).rbg);\n    Gx -= RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, stepSize.y)).rbg);\n\n    float Gy = 0.0;\n    Gy -= RGB2Luminosity(texture(u_tex, st - vec2(-stepSize.x, stepSize.y)).rbg);\n    Gy -= 2.0 * RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, stepSize.y)).rbg);\n    Gy -= RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, stepSize.y)).rbg);\n\n    Gy += RGB2Luminosity(texture(u_tex, st + vec2(-stepSize.x, stepSize.y)).rbg);\n    Gy += 2.0 * RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, stepSize.y)).rbg);\n    Gy += RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, stepSize.y)).rbg);\n    return length(vec2(Gx, Gy));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 stepSize = 1.0 / iResolution.xy;\n    \n    float edgeThresh = 0.2 + 0.8 * iMouse.x / iResolution.x;\n\n    // Time varying pixel color\n    float Luma = RGB2Luminosity(texture(iChannel0, uv).xyz);\n    float levels = 3.0;\n    Luma = floor(Luma * levels) / levels;\n    float edge = step(edgeThresh, EdgeFilter(iChannel0, uv, stepSize));\n    vec3 col = vec3(Luma + edge);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}