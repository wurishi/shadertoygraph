{"ver":"0.1","info":{"id":"Xt2BzR","date":"1514305469","viewed":172,"name":"Power Ball","username":"chrisjj","description":"V4\n\nI'm striving for the smallest visually-engaging shader on ShaderToy. If you know of any I need to beat, do tell! :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tiny","faux3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.0*fragCoord.xy-iResolution.xy) / min(iResolution.x,iResolution.y);\n\n\tuv /= .7+0.35*sin(t);                           // zoom\n\tuv /= .7 + abs(.7-length(uv));                  // ball\n\tuv += 0.3*tan(t/5.)*cos(t/19.9*vec2(.77,2.22)); // pattern slide\n    uv *= 0.54+.5*sin(t/3.2);                       // pattern zoom\n\n\tvec3 c = cos(uv.x*20.)*cos(uv.y*20.) + sin(t*vec3(1.,1.1,1.11));\n    c = c*c/3.;                                     // colour fold and spiff\n\t\n    fragColor=vec4( c, .0 );\n}","name":"Image","description":"","type":"image"}]}