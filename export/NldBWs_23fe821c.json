{"ver":"0.1","info":{"id":"NldBWs","date":"1716556844","viewed":63,"name":"Complex Sine Fractal","username":"eriben0628","description":"sadf","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv).rgba*0.5;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 imSin(vec2 a) {\n    return vec2( sin(a.x)*cosh(a.y) , cos(a.x)*sinh(a.y) );\n}\n\nvec2 imCos(vec2 a) {\n    return vec2( cos(a.x)*sinh(a.y) , sin(a.x)*cosh(a.y) );\n}\n\nvec4 fractal(vec2 a) {\n    int b = 15;\n    float inverseB = 1.0/float(b);\n    vec4 col = vec4(0.0);\n    vec2 z = a;\n    vec2 c = a+vec2(0.2,1.0);\n    float iter;\n    \n    for(int i = 0; i < 100; i++) {\n        iter = float(i)/5.0;\n        for(int j = 0; j < b; j++) {\n            vec4 tempColor = vec4( sin(iter), cos(iter), fract(iter), 0.0 )*inverseB;\n            if(length(z) > pow(5.0, float(j)*inverseB*4.0 + 2.5 + sin(iTime*10.0)*0.7 ) ) col += tempColor;\n        }\n        if(length(z) > pow(10.0, 10.0)) break;\n        \n        z = imSin(z)+c;\n    }\n    return col;\n}\n\nvec2 random(int i) {\n    float x = fract(sin(float(i)*10.0+iTime)*100.0);\n    float y = fract(sin(float(i)*9.0+iTime*2.0)*140.0);\n    return vec2(x,y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = vec4(0.0);\n    \n    vec2 rand = random(0)/iResolution.xy;\n    vec2 z = (uv+rand)*2.0-1.0;\n    z.x*=iResolution.x/iResolution.y;\n    z *= 4.0;\n    \n    col += fractal(z);\n\n    vec4 frameTex = texture(iChannel1, vec2(0.0));\n    \n    if(iFrame > 0) fragColor = (col + texture(iChannel0, uv)*frameTex.x)/(frameTex.x+1.0);\n    else fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float frame = 0.0;\n    float restart = 0.0;\n    vec4 tex = texture(iChannel0, vec2(0.,0.));\n    if(iFrame > 0) frame = tex.x + 1.0;\n    if(tex.y != iResolution.x) {restart = 1.0; frame = 0.0;}\n\n    fragColor = vec4(frame,iResolution.x,restart,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}