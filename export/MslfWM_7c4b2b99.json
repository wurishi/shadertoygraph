{"ver":"0.1","info":{"id":"MslfWM","date":"1496496140","viewed":360,"name":"Decals from source texture","username":"Haunt","description":"Decal test. Improvements are welcome :) Alpha transparency is not working :(","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","decals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 decalDim = vec2(64.,64.); //Dimension from Spritesheet (decal size)\n\nfloat transparancy = 1.0;\n\n#define TWOPI 6.28318530718\n\nint arraySize=3;\n//Testdata\nvec4 decals[] = vec4[](\n\tvec4(100.,200.,0.,0.), //PosX, PosY, SourceRectX, SourceRectY (rect will be multiplied with decalDim/2)\n    vec4(229.,200.,1.,0.),\n    vec4(358.,200.,2.,0.)\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 pixel = vec3(0., 0., 1.); //Background color\n    \n    for(int i=0;i<arraySize;++i)\n    {\n        //Calculate bounding box (Decal XY + Width/2 and Height/2)\n        vec4 bounds = vec4(\n            decals[i].x-(decalDim.x/2.),\n            decals[i].x+(decalDim.x/2.),\n            decals[i].y-(decalDim.y/2.),\n            decals[i].y+(decalDim.y/2.)\n        );\n\n        //Check if active pixel is inside bounding box\n        if(\n            fragCoord.x >= bounds.x &&\n            fragCoord.x <= bounds.y &&\n            fragCoord.y >= bounds.z &&\n            fragCoord.y <= bounds.w\n          )\n        {\n            //Transform to local texture coordinates\n            vec2 coord = vec2((fragCoord.x-bounds.x)+(decals[i].z*decalDim.x),\n                              (fragCoord.y-bounds.z)+(decals[i].w*decalDim.y));\n\n\t\t\t\n            //Copy the iChannel0 pixel data (local coord) \n            pixel = vec3(texture(iChannel0, vec2(coord.xy / (iChannelResolution[0].xy))).rgb);\n        }\n\n    }\n    \n    //transparancy = (transparancy*cos(iTime*1.0))+ 0.5;\n\n    fragColor = vec4(transparancy) * vec4(pixel,1.0);\n\n}","name":"Image","description":"","type":"image"}]}