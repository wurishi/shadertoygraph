{"ver":"0.1","info":{"id":"Mt2BWD","date":"1515880908","viewed":496,"name":"Bilinear vs linear filtering","username":"rygorous","description":"Based on iquilez's https://www.shadertoy.com/view/XsSXDy\n\nv2, now with hexagonal lattice mode (on by default)","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","texturefiltering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The MIT License\n// Copyright Â© 2014 Inigo Quilez, Fabian Giesen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#define HEXAGONAL_LATTICE // Toggle to test interpolation on a hexagonal lattice\n\n//-----------------------------------------------------------------------------------------\n\n#define SAM(a,b)  texture(iChannel0, (i+vec2(float(a),float(b))+0.5)/res, -99.0)\n\nvec4 texture_Linear( sampler2D tex, vec2 t )\n{\n    vec2 res = iChannelResolution[0].xy;\n    vec2 p = res*t - 0.5;\n    vec2 f = fract(p);\n    vec2 i = floor(p);\n    \n    vec4 s00 = SAM(0,0);\n    vec4 s10 = SAM(1,0);\n    vec4 s01 = SAM(0,1);\n    vec4 s11 = SAM(1,1);\n    \n    if (f.x + f.y > 1.0)\n    {\n        return s11 + (1.0 - f.x) * (s01 - s11) + (1.0 - f.y) * (s10 - s11);\n    }\n    else\n    {\n        return s00 + f.x * (s10 - s00) + f.y * (s01 - s00);\n    }\n}\n\n//-----------------------------------------------------------------------------------------\n\nvec4 lerp( float x, vec4 a, vec4 b ) { return mix(a,b,x); }\n\nvec4 texture_Bilinear( sampler2D tex, vec2 t )\n{\n    vec2 res = iChannelResolution[0].xy;\n    vec2 p = res*t - 0.5;\n    vec2 f = fract(p);\n    vec2 i = floor(p);\n\n    return lerp( f.y, lerp( f.x, SAM(0,0), SAM(1,0)),\n                      lerp( f.x, SAM(0,1), SAM(1,1)) );\n}\n\n//-----------------------------------------------------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy/iResolution.x;\n    vec2 q = fragCoord.xy/iResolution.xy;\n    \n    vec2 uv = p;\n\n\n    uv = uv * 0.06 + 0.001*iTime;\n\n#ifdef HEXAGONAL_LATTICE\n    // Scale and shear the coordinate space such that\n    // the triangles used in linear interpolation\n    // are equilateral.\n    uv.y *= sqrt(1.5);\n    uv.x -= 0.5 * uv.y;\n#endif\n\n  //vec3 cola = texture(          iChannel0, uv ).xyz;\n    vec3 cola = texture_Bilinear( iChannel0, uv ).xyz;\n    vec3 colb = texture_Linear   (  iChannel0, uv ).xyz;\n    \n    vec3 col = mix( cola, colb, smoothstep( -0.1, 0.1, sin(2.0*iTime)) );\n\n    float gre = dot(col,vec3(0.333));\n    \n    vec3 colc = 0.5 + 50.0*vec3( dFdx(gre), dFdy(gre), 0.0 );\n    \n    col = mix( col, colc, step(q.y,0.40) );\n    \n\tfragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}