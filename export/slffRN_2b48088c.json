{"ver":"0.1","info":{"id":"slffRN","date":"1650570772","viewed":241,"name":"Mirrorball Crystal","username":"Hyeve","description":"hey, I figured out a thing! and i've improved my renderer in various ways, particularly, shadows! (not that the shadows are super noticeable here..)","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","transparency","glass","reflections","metal","crystal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nvec2 uv;\nvec3 cp,cn,cr,ss,oc,gl,vb;\nvec4 fc,cc;\nfloat tt,cd,sd,md,io,oa,td,tc;\nint es=0,ec;\n\n\nfloat bx(vec3 p,vec3 s){vec3 q=abs(p)-s;return min(max(q.x,max(q.y,q.z)),0.)+length(max(q,0.));}\nfloat cy(vec3 p, vec2 s){p.y+=s.x/2.;p.y-=clamp(p.y,0.,s.x);return length(p)-s.y;}\nfloat smin(float a, float b, float k){float h=clamp(0.5+0.5*(b-a)/k,0.,1.);return mix(b,a,h)-k*h*(1.-h);}\n\nfloat hash(vec2 p)\n{\n    p=fract(p)-cos(p);\n    vec2 q=tan(abs(p*37482.34)+p.yx*678324.);\n    return fract(q.x+p.x*q.y-p.y);\n}\n\nvec2 devide(vec2 r, float p, float a)\n{\n\tfloat z=r.x+r.y*p;\n\tif(z<a){r.y=r.x+r.y-z;r.x=z;}\n\telse r.y=z-r.x;\n\treturn r;\n}\n\nfloat mp(vec3 p)\n{\n        //now with mouse control\nif(iMouse.z>0.){\n    p.yz*=rot(2.0*(iMouse.y/iResolution.y-0.5));\n    p.zx*=rot(-7.0*(iMouse.x/iResolution.x-0.5));\n}\n\t\tvec3 pp=p;\n        sd = length(p) - 1.3;\n        p=pp;\n\t\tfloat m = (tt+pow(sin(tt+cos(tt*0.5)*2.)*0.5+0.5,3.)*5.)*0.2;\n\t\tfor(float i = 0.; i < 2.; i++)\n\t\t{\n\t\t\tp.xy = abs(p.xy * rot(i*2.5+m*0.9)) - 1.;\n\t\t\tp.xz = abs(p.xz) * rot(i+m*0.7);\n\t\t}\n\t\tfloat axis = p.x;\n\t\tvec2 range = vec2(-4,8);\n        sd=min(sd,cy(p,vec2(2,0.2)));\n\t\tfor(float i = 0.; i < 3.; i++)\n\t\t{\n\t\t\tfloat pos = clamp(sin(tt*0.7+i)*0.5+0.5,0.3,0.7);\n\t\t\trange = devide(range, pos, axis);\n\t\t}\n\t\tp.x -= range.x + range.y * 0.5;\n\t\tsd=smin(sd,bx(p,vec3(range.y/2.-0.1,0.5,0.5))-0.03,0.1);\n\t\tif(sd>0.01 && mod(range.x,5.)>2.) gl += exp(-sd*0.5) * normalize(p*p)*vec3(0.5,0.01,0.5) / (length(pp));\n\t\tsd=abs(sd)-0.001;\n\n\t\tif(sd<0.06)\n\t\t{\t\n\t\t\tio=range.y > 1. ? -1. : 3.;\n\t\t\toc=mix(vec3(1,0.3,0.6),vec3(0.4,0.3,1),sin(range.x*3.)*0.5+0.5);\n\t\t\toa=0.4;\n\t\t\tss=vec3(0.);\n\t\t\tec=2;\t\n\t\t}\n\t\treturn sd;\n}\n\nvoid nm(){mat3 k=mat3(cp,cp,cp)-mat3(.001);cn=normalize(mp(cp)-vec3(mp(k[0]),mp(k[1]),mp(k[2])));}\n\nfloat tr(vec3 ro, vec3 rd)\n{cd=0.;md=64.;for(tc=1.;tc<512.;tc++){mp(cp=ro+rd*cd);cd+=sd;td+=sd;\nif(sd<md&&sd<cd-0.06)md=sd;if(sd<0.0001||cd>64.)break;}nm();return cd;}\n\n\nvoid px(vec3 rd)\n{\n  cc.rgb=vec3(0.25,0.4,0.7)+length(pow(abs(rd+vec3(0,0.,0)),vec3(3)))*0.3+gl/tc;\n  if(cd>64.){cc.a=1.;return;}cc.a=oa;\n\tvec3 ld = -normalize(cp+cn-vec3(5.,1,-10.));\n  float df=clamp(length(cn*ld),0.,1.),\n\tsp=(1.-length(cross(rd,cn*ld)))*0.8,\n    ao=min(mp(cp+cn*0.3)-0.3,0.3)*0.5;\n  vec3 fr=pow(1.-abs(dot(rd,-cn)),3.)*mix(cc.rgb,vec3(0.4),0.3)*0.8;\n  cc.rgb=(oc*(df+fr+ss)+fr+sp+ao+gl/tc);tr(cp+cn*0.06,ld);\n    float sh=1.-mix(1.-clamp(md/0.06,0.,1.),clamp(dot(cn,-ld),0.,1.),0.1)*(io>0.?oa:1.)*0.5; //yay I made shadows work\n\tcc.rgb=mix(mix(vec3(sh),oc, 0.5),cc.rgb, sh)*sh;\n}\n\nvoid render(vec2 frag, vec2 res, float time, out vec4 col)\n{\n  uv=vec2(frag.x/res.x,frag.y/res.y);\n  uv-=0.5;uv/=vec2(res.y/res.x,1);\n  tt=mod(time+3.,256.);\n  vec3 ro=vec3(0,0,-7.-sin(tt*0.6)*1.+1.),rd=normalize(vec3(uv,1));\n  for(int i=0;i<25;i++)\n  {\n\tfloat d=tr(ro,rd);\n\tro=cp-cn*(io<0.?-0.01:0.01);\n\tcr=refract(rd,cn,i%2==0?1./io:io);\n\ti=io<0.?i+1:i;\n    if((length(cr)==0.&&es<=0)||io<0.)\n\t{cr=reflect(rd,cn);es=(io<0.?es:ec);}\n\tpx(rd);if(max(es,0)%3==0&&d<64.)rd=cr;es--;\n\tfc=fc+vec4(cc.rgb*cc.a,cc.a)*(1.-fc.a);\n\tif(fc.a>=1.)break;\n  }\n  col = pow(fc/fc.a,vec4(0.9));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    render(fragCoord.xy,iResolution.xy,iTime,fragColor);\n}","name":"Image","description":"","type":"image"}]}