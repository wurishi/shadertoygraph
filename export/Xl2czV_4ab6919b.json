{"ver":"0.1","info":{"id":"Xl2czV","date":"1540521818","viewed":418,"name":"Sharper Pixel Scaling","username":"ghogan42","description":"Sharper scaling for pixel art.  This is based on Inigo Quilez's \"Improved Texture Filtering\" here: https://iquilezles.org/articles/texture/texture.htm\n\nBut for scaling pixel based artwork (old console games...) we usually want something sharper.\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","filtering","pixelart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;        \n    fragColor = vec4(0.0);\n\n    //The First Quarter is Bilinear\n    if (uv.x < 0.24)\n    \tfragColor = texture(iChannel0,uv/4.0);\n        \n\n    // Second Quarter is Inigo Quilez's from\n    // https://iquilezles.org/articles/texture\n    \n    \n    vec2 newuv = uv*64.0  + 0.5;\n\tvec2 iuv = floor( newuv );\n\tvec2 fuv = fract( newuv );\n\tnewuv = iuv + fuv*fuv*(3.0-2.0*fuv)-0.5;\n    \n\tif (uv.x > 0.26 && uv.x < 0.49)\n      fragColor = texture(iChannel0,newuv/256.0);\n    \n    \n    //Third Quarter is what I use in my ZFAST pixel shaders in RetroPie\n    //It adjusts the texture coords like Quilez does, but we just want it\n    //sharper\n    \n\tvec2 p = uv*64.0; // coordinates in pixels i.e. [33.2,94.84]\n    \n    vec2 c = floor(p)+0.5; //center of the pixel i.e. [33.5, 94.5]\n    \n    vec2 dist = p - c; //How far are we from the center of the pixel\n\n    dist = 4.0*dist*dist*dist; //shift towards the center of the pixel\n\n    p = (c + dist);\n    if (uv.x > 0.51 && uv.x < 0.74)\n      fragColor = texture(iChannel0,p/256.0);\n    \n    //Fourth Quarter is the same as the third, but even sharper.\n    //Only one line needs to be changed.  This probably has shimmer\n    //when scrolling pixel graphics\n    \n\tp = uv*64.0; // coordinates in pixels i.e. [33.2,94.84]\n    \n    c = floor(p)+0.5; //center of the pixel i.e. [33.5, 94.5]\n    \n    dist = p - c; //How far are we from the center of the pixel\n\n    dist = 16.0*dist*dist*dist*dist*dist; //shift towards the center of the pixel\n\n    p = (c + dist);\n    if (uv.x > 0.76)\n      fragColor = texture(iChannel0,p/256.0);\n    \n}","name":"Image","description":"","type":"image"}]}