{"ver":"0.1","info":{"id":"NdtBWX","date":"1657323729","viewed":94,"name":"Dithered gradient mixing","username":"auurora","description":"I made this to blend shadows with alpha channels since there is not much to work with ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float dithering_amount = 0.15; // a dithering amount of 0.5 will remove all banding but will introduce visible noise\n\nfloat dither(vec2 tx)\n{\n    return (1.-(texture(iChannel0, tx).r*dithering_amount));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 tx = fragCoord/vec2(256,256);\n    \n    vec4 a = vec4(0.5 + 0.5*cos(iTime+vec3(0,2,4)), 1.) * 0.2; //vec4(0.3,0.,0.,1.);\n    vec4 b = vec4(0.5 + 0.5*cos(iTime+vec3(2,2,4)), 1.) * 0.2; //vec4(0.3,0.2,0.,1.);\n    \n    \n    \n    if (uv.y > 0.5)\n        fragColor = mix(a, b, uv.x);\n    else \n        fragColor = mix(a, b, uv.x*dither(tx));\n}","name":"Image","description":"","type":"image"}]}