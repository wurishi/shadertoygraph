{"ver":"0.1","info":{"id":"wd3BWM","date":"1606417327","viewed":231,"name":"Pistons firing up 4x800bhp","username":"nurof3n","description":"welcome back to bottom gear m8s","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["cars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float CRANK_RADIUS = 0.16;\t\t\nconst float ROD_LENGTH\t = 0.5;\nconst float PI \t\t\t = 3.141592;\n\nvec2 rotate(vec2 p, float theta) {\n\treturn vec2(p.x * cos(theta) - p.y * sin(theta),\n                p.x * sin(theta) + p.y * cos(theta)); \n}\n\nfloat sdBox( in vec2 p, in vec2 b ) {\t//iq\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\nfloat disttoline(vec2 a, vec2 b, vec2 p) {\n \treturn abs( (b.y-a.y)*p.x - (b.x-a.x)*p.y + b.x*a.y-a.x*b.y ) / sqrt( dot(b-a, b-a) ) \n        * (length(a-p) + length(b-p) - length(a-b) < 0.001 ? 1.0 : 3000.0);   \n}\n\nfloat sq(float x) {\n    return x*x;\n}\n\nfloat angleDistance(float alfa, float beta) {\n    float dist = mod(abs(alfa - beta), 2.0 * PI);\n    return min(dist, 2.0*PI - dist);\n}\n\nvec3 drawPiston(vec3 color, vec2 uv, vec2 position, float thetaOffset) {\n\tuv -= position;\n    \n    // background color\n    \n    \n    // change color of the circle\n    vec3 color2 = vec3(0.7*sin(iTime + thetaOffset), 0.7*cos(iTime + thetaOffset), 0.3);\n    color = mix(color2, color, smoothstep(0.0, 0.005, abs(length(uv) - CRANK_RADIUS)));  \n    \n    \n    // inside filling\n    float de = step(abs(uv.y), 0.017) * step(-0.03, uv.x) * step(uv.x, 0.0);\n    float polarAngle = atan(uv.y, -uv.x) + PI;\n    float theta = iTime * iTime + thetaOffset;\n    float angleMax = mod(-theta, 2.0*PI);\n    float angleMax2 = mod(-theta + PI, 2.0*PI);\n    \n    vec2 circlePoint = vec2(cos(theta), sin(theta)) * CRANK_RADIUS;\n    vec2 slidingPoint = vec2(CRANK_RADIUS*cos(theta) + sqrt(sq(ROD_LENGTH) - sq(CRANK_RADIUS)*sq(sin(theta))), 0.0);\n    \n    vec2 rotated = rotate(uv, -theta) - vec2(0.1, 0.);\n    float polarAngle2 = atan(rotated.y, rotated.x) + PI;\n    \n    // draw crank\n    color = mix(color, vec3(0.1), smoothstep(0.155, 0.145, length(uv))\n               \t\t\t\t\t  * smoothstep(0.75, 0.7, angleDistance(0.0, polarAngle2)));\n    color = mix(vec3(0.1), color, smoothstep(0.0, 0.005, sdBox(rotate(uv - circlePoint/2.0f, -theta), vec2(CRANK_RADIUS/2.0f, 0.045))));\n    color = mix(color, vec3(0.4), smoothstep(0.15, 0.14, length(uv))\n               \t\t\t\t\t  * smoothstep(0.7, 0.65, angleDistance(0.0, polarAngle2)));\n    color = mix(vec3(0.4), color, smoothstep(0.0, 0.005, sdBox(rotate(uv - circlePoint/2.0f, -theta), vec2(CRANK_RADIUS/2.0f, 0.04))));\n    \n    \n    // draw crank center\n    color = mix(vec3(0.1), color, smoothstep(0.035, 0.04, length(uv)));\n    color = mix(vec3(0.5), color, smoothstep(0.03, 0.035, length(uv)));\n    \n    color = mix(color, vec3(0.1), smoothstep(0.065, 0.06, length(uv - circlePoint))\n               \t\t\t\t\t  * smoothstep(0.03, 0.035, length(uv - circlePoint))\n               );\n    \n    // draw rod\n    vec2 rodVector = slidingPoint - circlePoint;\n    float angle = atan(rodVector.y, -rodVector.x) + PI;\n    color = mix(vec3(0.1), color, smoothstep(0.0, 0.01, sdBox(rotate(uv - (slidingPoint+circlePoint)/2.0f, angle), vec2(ROD_LENGTH/2.0f, 0.025))) );\n    color = mix(vec3(0.4), color, smoothstep(0.0, 0.01, sdBox(rotate(uv - (slidingPoint+circlePoint)/2.0f, angle), vec2(ROD_LENGTH/2.0f, 0.02))) );\n   \n    // draw crank pin\n    color = mix(color, vec3(0.4), smoothstep(0.06, 0.055, length(uv - circlePoint))\n               \t\t\t\t\t  * smoothstep(0.03, 0.035, length(uv - circlePoint))\n               );\n    color = mix(vec3(0.1), color, smoothstep(0.035, 0.04, length(uv - circlePoint)));\n    color = mix(vec3(0.4), color, smoothstep(0.03, 0.035, length(uv - circlePoint)));\n    \n    // draw piston head\n    color = mix(color, vec3(0.1), smoothstep(0.005, 0.0, \n                                             sdBox(uv - slidingPoint - vec2(0.02,0.0), vec2(0.135 + 0.025*step(uv.x - slidingPoint.x, 0.0)*smoothstep(0.0, 0.2, abs(uv.y)), 0.155)))\n               \t\t\t\t\t\t\t     * smoothstep(0.04, 0.05, length(uv - slidingPoint))\n               \t\t\t\t\t\t\t\t);\n\tcolor = mix(color, vec3(0.3), smoothstep(0.005, 0.0, \n                                             sdBox(uv - slidingPoint - vec2(0.02,0.0), vec2(0.13 + 0.025*step(uv.x - slidingPoint.x, 0.0)*smoothstep(0.0, 0.2, abs(uv.y)), 0.15)))\n               \t\t\t\t\t\t\t     * smoothstep(0.04, 0.05, length(uv - slidingPoint))\n               \t\t\t\t\t\t\t\t);\n    color = mix(color, vec3(0.1), smoothstep(0.005, 0.0, \n                                             sdBox(uv - slidingPoint - vec2(0.1, 0.0), vec2(0.005, 0.1525)))      \t\t\t\t\t\t\t\n               \t\t\t\t\t\t\t\t);\n    color = mix(color, vec3(0.1), smoothstep(0.005, 0.0, \n                                             sdBox(uv - slidingPoint - vec2(0.12, 0.0), vec2(0.005, 0.1525)))      \t\t\t\t\t\t\t\n               \t\t\t\t\t\t\t\t);\n    color = mix(color, vec3(0.1), smoothstep(0.005, 0.0, \n                                             sdBox(uv - slidingPoint - vec2(0.14, 0.0), vec2(0.005, 0.1525)))      \t\t\t\t\t\t\t\n               \t\t\t\t\t\t\t\t);\n\tcolor = mix(vec3(0.4), color, smoothstep(0.03, 0.035, length(uv - slidingPoint))); \n    color = mix(color, vec3(0.1), smoothstep(0.03, 0.035, length(uv - slidingPoint))\n               \t\t\t\t\t  * smoothstep(0.05, 0.045, length(uv - slidingPoint))); \n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // ndc\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float c = uv.x;\n    uv.x = uv.y;\n    uv.y = -c;\n    \n\tvec3 backg = vec3(0.9,0.8,0.6) * pow(2.0, -length(uv));\n    vec3 color = backg; \n    color = drawPiston(color, uv, vec2(-0.25, 0.75), PI);\n    color = drawPiston(color, uv, vec2(-0.25, 0.25), 0.0);\n    color = drawPiston(color, uv, vec2(-0.25, -0.25), 0.0);\n    color = drawPiston(color, uv, vec2(-0.25, -0.75), PI);\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}