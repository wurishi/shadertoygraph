{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float PI = 3.14159265;\n\n    vec2 pos = fragCoord.xy/iResolution.yy;\n\n    //set bg color to black\n    fragColor = vec4(vec3(0.0), 1.0);\n\n    //Line width and point radius in openGL screen space 'units'\n    float lineSize = 0.005;\n    float pointSize = 0.007;\n\n    //points\n    //Feel free to set these however you want\n    vec2 point1 = vec2(sin(iTime)*0.2+0.5, cos(iTime)*0.2+0.5);\n    vec2 point2 = vec2(sin(iTime+PI)*0.2+0.5, cos(iTime+PI)*0.2+0.5);\n\n    //'k' for kulmakerroin :D\n    float k = (point1.y - point2.y)/(point1.x - point2.x);\n    float b = point1.y - k*point1.x;\n\n    /* //DAMN this was hard to wrap my head around!\n    point1.y = k*point1.x + b // -k*point1.x\n    point1.y - k*point1.x = b\n    */\n\n    vec2 line = vec2((pos.y-b)/k, pos.x*k+b);\n    float lineSizeHalf = lineSize/2.0;\n    \n    //if current pixel is inside the line, set it's color to white\n    if ((pos.y > line.y-lineSizeHalf && pos.y < line.y+lineSizeHalf) || (pos.x > line.x-lineSizeHalf && pos.x < line.x+lineSizeHalf))\n        fragColor = vec4(1.0);\n    \n    //if current pixel is inside any of the points, set it's color to red\n    if (length(pos-point1) < pointSize || length(pos-point2) < pointSize)\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xtl3RS","date":"1422963683","viewed":599,"name":"Basic line drawing","username":"luutifa","description":"Did this by request from a friend.\nWas harder than I thought it'd be.\nI think there is a \"faster\" way than ifs but not gonna do it now.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["line","geometry"],"hasliked":0,"parentid":"","parentname":""}}