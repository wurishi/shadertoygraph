{"ver":"0.1","info":{"id":"X3sfD7","date":"1728482520","viewed":23,"name":"bible accurate angel","username":"pl1ght","description":"bible accurate angel","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["po"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0; \n    uv.y *= iResolution.y / iResolution.x; \n\n    float time = iTime;\n    vec3 color = vec3(0.0);\n\n    int numPatterns = 12; \n    float scale = 1.0;  \n\n    for (int i = 0; i < numPatterns; i++)\n    {\n        float angle = float(i) * (6.28318 / float(numPatterns)) + time * 0.3;\n        float r = length(uv) * scale;\n\n        float theta = cos(uv.y) - angle;\n        \n        float distortion = sin(theta * 5.0 + time)/cos(r+2.0) * 0.3;\n        float x = r * cos(theta + distortion)/sin(theta + distortion);\n        float y = r * sin(theta + distortion)/cos(theta + distortion);\n        float blue = 0.5 + 0.5 * cos(3.0 * (x + y) + time)/sin(7.0 * y + time);\n        scale *= time;\n\n        color += vec3(blue);\n    }\n\n    color /= float(numPatterns);\n\n    fragColor = vec4(color * vec3(13.0, 1.0, 13.0), 0.0);\n}\n","name":"Image","description":"","type":"image"}]}