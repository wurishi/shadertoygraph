{"ver":"0.1","info":{"id":"mdyfWz","date":"1698120913","viewed":26,"name":"The Psychedelic Eye","username":"Snakethebigboss","description":"The Eye sees all. Over the course of its runtime it will transform and become more complex, give it some time. Just sit back and relax.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdBoxFrame( vec3 p, vec3 b, float e )\n{\n    p = abs(p) - b;\n    vec3 q = abs(p + e) - e;\n    return min(min(\n        length(max(vec3(p.x, q.y, q.z), 0.0)) + min(max(p.x, max(q.y, q.z)), 0.0),\n        length(max(vec3(q.x, p.y, q.z), 0.0)) + min(max(q.x, max(p.y, q.z)), 0.0)),\n        length(max(vec3(q.x, q.y, p.z), 0.0)) + min(max(q.x, max(q.y, p.z)), 0.0));\n}\n\nfloat sdSphere( vec3 p, float s )\n{\n    return length(p) - s;\n}\n\nfloat fractalCube( vec3 p )\n{\n    float d = sdBoxFrame(p, vec3(1.0), 0.1);\n    for (int i = 0; i < 3; i++) {\n        p = abs(p) * 2.0 - 1.0;\n        d = min(d, sdBoxFrame(p, vec3(1.0), 0.1));\n    }\n    return d;\n}\n\nfloat fractalSphere( vec3 p )\n{\n    float d = sdSphere(p, 1.0);\n    for (int i = 0; i < 3; i++) {\n        p = abs(p) * 2.0 - 1.0;\n        d = min(d, sdSphere(p, 1.0));\n    }\n    return d;\n}\n\nfloat opOnion( in float sdf, in float thickness )\n{\n    return abs(sdf)-thickness;\n}\n\nfloat fractalCubeWithSphere( vec3 p )\n{\n    float d = fractalCube(p);\n    float s = fractalSphere(p);\n    return opOnion(d, s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (-iResolution.xy + 2.0 * fragCoord.xy) / iResolution.y;\n    vec3 rayDir = (vec3(p, 1.0));\n    vec3 rayOrigin = vec3(0.0, 0.0, -3.0);\n    float t = 0.0;  \n    float d = 0.0;\n\n\n    for (int i = 0; i < 100; i++) {\n        vec3 p = rayOrigin + t * rayDir;\n        d = fractalCubeWithSphere(p);\n        d = abs(d);\n        d = fract(iTime*(fract((iTime*.0004))*(0.0001+0.001)*cos(d)*5.0));\n        t = fract(t + sin(d)); \n        d = fract(t + sin(iTime*d) - 5.0);\n        \n        \n        \n    }\n\n    vec3 col = palette(t);\n    fragColor = vec4(col, 1.0);\n\n\n}\n\n    \n\n\n\n","name":"Image","description":"","type":"image"}]}