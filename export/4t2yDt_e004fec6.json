{"ver":"0.1","info":{"id":"4t2yDt","date":"1510607009","viewed":187,"name":"Halftone Van Damme","username":"johh","description":"Quick and dirty halftone implementation","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","halftone","raster"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n#define SECTIONS 228.0\n\nvec2 rotate2D(vec2 _uv, float _angle) {\n    _uv -= 0.5;\n    _uv =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _uv;\n    _uv += 0.5;\n    return _uv;\n}\n\n\nvec2 tile(vec2 _uv, float _zoom) {\n    _uv *= _zoom;\n    return fract(_uv);\n}\n\n\nfloat circle(in vec2 _uv, in float _radius) {\n    vec2 dist = _uv - vec2( 0.5 );\n\treturn 1.-smoothstep(_radius-(_radius*0.1),\n                         _radius+(_radius*0.1),\n                         dot(dist,dist)*4.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 uv_square = vec2( uv.x, uv.y * (iResolution.y / iResolution.x));\n    vec3 color = vec3(0.0);\n    \n    uv_square = rotate2D(uv_square, PI*.32);\n    \n    vec2 uv_tiled = tile( uv_square, SECTIONS );\n    //float c = circle( uv_tiled, .9 * pow(abs( cos( -iTime + uv.x * 4. )), 8.) );\n    //float c = circle( uv_tiled, 1.9 * texture(iChannel0, floor(uv_square * SECTIONS + 1.)/(SECTIONS) ).r );\n    float c = circle( uv_tiled, 10.5 * pow(texture(iChannel0, uv ).r, 4.5) );\n    \n\tfragColor = vec4(vec3( c ),1.0);\n}","name":"Image","description":"","type":"image"}]}