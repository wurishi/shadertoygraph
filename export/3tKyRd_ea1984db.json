{"ver":"0.1","info":{"id":"3tKyRd","date":"1611607320","viewed":56,"name":"Projective disc study 1a","username":"sig","description":"Projective disc, viewpoint fixed to origin. Cat for scale.\n\nClick with mouse to move the cat.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["geometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float signedpow(float x, float e) {\n    return sign(x) * pow(abs(x), e);\n}\n\nvec4 tex_bg(vec2 p, float R_background) {\n    //vec2 roll = vec2(cos(iTime), sin(iTime));\n    vec2 center = vec2(cos(iTime), sin(iTime) * 0.3) * R_background * 0.2; \n    //return vec4(0.5 + 0.5*cos(iTime + p.xyx + vec3(0.0, 2.0, 4.0)), 0.0);\n    return vec4(texture(iChannel0, (p + center) / R_background * 0.4 - vec2(0.5, 0.55)));\n}\n\nvec4 tex_cursor(vec2 p, float R_cursor) {\n    //return length(p) < R_cursor ? vec4(1.0, 0.0, 0.0, 1.0) : vec4(0);\n\n    if (length(p) > R_cursor) { return vec4(0); }\n    //return vec4(1.0, 0, 1.0, 0.5);\n    \n    vec2 sprite_size = vec2(0.159, 1.0);\n    float sprite_i = mod(floor(iTime * 6.0), 6.0);\n    vec2 tex_uv = sprite_size * (0.5 - 0.5 * p / R_cursor);\n    return texture(iChannel1, tex_uv + sprite_i * vec2(sprite_size.x, 0.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float R = 0.4 + 0.3 * signedpow(sin(iTime / 5.0), 0.3);\n\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 dir = normalize(p);\n\n    float r0 = mod(length(p) + R, R+R) - R;\n\n    vec2 p0 = dir * r0;\n    \n    vec2 c = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n    float ic = floor(length(c) / (R+R) + 0.5);\n    float R_cursor = R * (0.3 + 0.2 * ic);\n    \n    vec2 pi = dir * (r0 + (R+R) * ic * sign(dot(dir, c)));\n    vec4 cursorColor0 = tex_cursor(c - pi, R_cursor);\n    vec4 cursorColor_1 = tex_cursor(c - pi - dir * (R+R), R_cursor);\n    vec4 cursorColor1 = tex_cursor(c - pi + dir * (R+R), R_cursor);\n    \n    // blend cursorColors together so that 0 overlaps 1 overlaps -1\n    vec4 cc = mix(cursorColor0, cursorColor1, cursorColor1.a);\n    vec4 cursorColor = mix(cc, cursorColor_1, cursorColor_1.a);\n\n    //fragColor = length(p) < R ? vec4(tex(p), 1.0) : vec4(0);\n    fragColor = mix(tex_bg(p0, R), cursorColor, cursorColor.a);\n}","name":"Image","description":"","type":"image"}]}