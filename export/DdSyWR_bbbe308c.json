{"ver":"0.1","info":{"id":"DdSyWR","date":"1687549695","viewed":56,"name":"julia set image colouring","username":"DeltaT","description":"uses orbit traps","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 500\n\nvec2 complexSquare(vec2 z) {\n    vec2 z2 = vec2(0);\n    z2.x = z.x*z.x - z.y*z.y;\n    z2.y = 2.*(z.x*z.y);\n    return z2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 mouse = (iMouse.xy * 2. - iResolution.xy) / iResolution.y;\n    \n    vec2 c = mouse*1.2;\n    vec2 z = uv*1.2;\n    if (iMouse.xy == vec2(0)) { c = vec2(-0.7, 0.1); }\n    \n    int iter = clamp(int(iTime*15.), 0, MAX_ITER);\n    //const float threshold = 2.;\n    \n    vec4 col = vec4(vec3(0), 1);\n    \n    float minDist = 0.;\n    vec2 trap = vec2(0);\n    for (int i = 0; i <= iter; i++) {\n        z = complexSquare(z) + c;\n        \n        float currentDist = length(z);\n        \n        if (i == 0 || currentDist < minDist) {\n            minDist = currentDist;\n            trap = z;\n        }\n        \n        col = texture(iChannel0, trap/3.) * (length(z)<2. ? -1. : 1.) + (length(z)<2. ? 1. : 0.);\n        \n        //if (length(z) > threshold) {\n        //    break;\n        //}\n    }\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}