{"ver":"0.1","info":{"id":"WtyBWz","date":"1614145093","viewed":84,"name":"4x4 BayerFilter","username":"kurotori","description":"4x4 bayer filter","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sample","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat[16] bayerMatrix = float[](\n    0.0,0.5,0.125,0.625,\n    0.75,0.25,0.875,0.375,\n    0.1875,0.6875,0.0625,0.5625,\n    0.9375,0.4375,0.8125,0.3125\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    int patternX = int(fragCoord.x) % 4;\n    int patternY = int(fragCoord.y) % 4;\n\n    float patternValue = bayerMatrix[patternX + patternY * 4];\n\n\n\n    // Time varying pixel color\n    vec3 col = uv.x > patternValue ? vec3(1.0,1.0,1.0) : vec3(0.0,0.0,0.0) ;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}