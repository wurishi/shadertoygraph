{"ver":"0.1","info":{"id":"3d3GRf","date":"1568929778","viewed":190,"name":"Clockwork Dreams","username":"bartofzo","description":"WIP","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["wip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.145;\nconst float TWO_PI = 2. * PI;\nconst float HALF_PI = 0.5 * PI;\n\nvec2 rotate(vec2 uv, vec2 center, float theta)\n{\n    float c = cos(theta);\n    float s = sin(theta);\n   \n    uv -= center;\n    uv *= mat2(c, -s, s, c); \n \n\treturn uv + center;\n}\n\nvec3 gear(vec2 uv, \n          vec2 gearPos, \n          float tooths,\n          float speed)\n{\n    vec2 delta = uv - gearPos;\n\n    float d = length(delta); \n    float angle = speed * iTime + atan(delta.y, delta.x);\n    float toothMul = floor(mod(.5 * tooths * angle, PI) / HALF_PI);\n    float radius = .5 * tooths;\n    float inside = min(1., .5 * d / radius);\n    float shine = radius / (d - .1*radius);\n    inside = smoothstep(.2449, 0.25, inside);\n    \n    float gearDepth = 1.5 / tooths;\n    \n    radius *= (1. - .5*gearDepth) + \n        (gearDepth * toothMul);\n   \t\n    float g = smoothstep(radius, radius - 0.0001, d);\n    \n    \n    return (.5 + .5*shine)* g * vec3(inside, inside, inside);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy) / iResolution.y;\n\t\n    vec3 col = vec3(0.);\n    float count = 50.;\n    float scaleFactor = .9;\n    float speed = -6.;\n    float timeScale = (.5+.5*sin(.5*iTime));\n    float rotFactor = .2 + .1 * (1. + cos(.14*iTime + 10.));\n    float uvScale = 2048. * timeScale;\n    \n    uv *= 32. + uvScale;\n\n\tfor (float i = 0.; i < count; i++)\n    {\n        float scale = (1. + 0.1 * i);\n        \n        vec3 thisCol = vec3(0.);\n\n        thisCol = gear(uv, vec2(0., 0.), 16., speed * 1.);\n        thisCol += gear(uv, vec2(12., 0.), 8., speed * -2.);\n        thisCol *= .15 + .7 * vec3(mod(i, 2.) / 2., mod(i, 3.) / 3., mod(i, 4.) / 4.);\n\n        uv = rotate(uv, vec2(0.), rotFactor * PI);\n        uv *= scaleFactor;\n        uv += vec2(12.,0);\n        \n        col += .75 * (1. - (i/count)) * thisCol;\n        speed *= -scaleFactor; // slows down & flips direction every iteration\n    }\n \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}