{"ver":"0.1","info":{"id":"dsGBWc","date":"1698973828","viewed":237,"name":"Trailing lights","username":"felipetovarhenao","description":"trailing lights","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["fractals","lights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nAuthor: Felipe Tovar-Henao [www.felipe-tovar-henao.com]\nTitle: Trailing lights\n*/\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tvec2 uv=adjustViewport(fragCoord.xy,iResolution.xy) * 0.8;\n\n\tvec2 suv=fragCoord.xy/iResolution.xy;\n\t// initialize color\n\tvec3 col=vec3(0.);\n\t\n\t// set randomized global time\n\tfloat t=iTime*.5;\n\tt+=noise(t*.5);\n\n\t// sample buffer texture for feedback\n\tfor(float i=0.;i<NUM_ITER;i++){\n\t\tfloat s=pow(1.13334,i);\n\t\tmat2 m=rot2(i*an);\n\t\tuv*=m;\n\t\tfloat a=texture(iChannel0,fold(uv*s)).r;\n\t\tcol+=gradient(s*3.+t*.5,c1,c2,c3,c4)*a;\n\n\t}\n\n\tcol=clamp(col,0.,1.);\n\tfragColor=vec4(col,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=adjustViewport(fragCoord.xy,iResolution.xy);\n\tvec2 suv=fragCoord.xy/iResolution.xy;\n\t// initialize color\n\tvec3 col=vec3(0.);\n\t\n\t// set randomized global time\n\tfloat t=iTime*.5;\n\tt+=noise(t*.5);\n\t\n\t// trailing light\n\tuv+=vec2(noise(uv+t+10.),noise(uv+3.+t+9.));\n\tuv*=rot2(t*.1);\n\tfloat d=abs(length(uv)-.01);\n\tfloat l=scale(sin(t),-1.,1.,.01,.03);\n\td=min(1.,max(0.,l/d));\n\tfloat fb=scale(sin(t),-1.,1.,.9,.99);\n\tfloat v=texture(iChannel0,suv).r*fb;\n\td=pow(d,1.85)+v;\n\tcol+=d;\n    col=clamp(col,0.,1.);\n    fragColor = vec4(col, 1.0);\n}\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define PI 3.14159\n#define TWO_PI 6.28318530718\n#define NUM_ITER 4.\n\nconst vec3 c1=vec3(.5);\nconst vec3 c2=vec3(.5);\nconst vec3 c3=vec3(1.);\nconst vec3 c4=vec3(.5,.6,.7);\nconst float an=PI/NUM_ITER;\n\nvec2 adjustViewport(in vec2 uv,in vec2 r){\n\treturn(uv*2.-r)/(r.x<r.y?r.x:r.y);\n}\n\nfloat rand(in float x,in int s){\n    return fract(sin(x+float(s))*43758.5453123);\n}\n\nfloat rand(in float x){\n    return rand(x,0);\n}\n\nfloat rand(in vec2 uv,in int seed){\n    return fract(sin(dot(uv.xy,vec2(12.9898,78.233))+float(seed))*43758.5453123);\n}\n\nfloat rand(in vec2 uv){\n    return rand(uv,0);\n}\n\nfloat noise(in float x,in int s){\n    float xi=floor(x);\n    float xf=fract(x);\n    return mix(rand(xi,s),rand(xi+1.,s),smoothstep(0.,1.,xf));\n}\n\nfloat noise(in float x){\n    return noise(x,0);\n}\n\nfloat noise(in vec2 p,in int s){\n    vec2 pi=floor(p);\n    vec2 pf=fract(p);\n    \n    float bl=rand(pi,s);\n    float br=rand(pi+vec2(1.,0.),s);\n    float tl=rand(pi+vec2(0.,1.),s);\n    float tr=rand(pi+vec2(1.),s);\n    \n    vec2 w=smoothstep(vec2(0.),vec2(1.),pf);\n    \n    float t=mix(tl,tr,w.x);\n    float b=mix(bl,br,w.x);\n    \n    return mix(b,t,w.y);\n}\n\nfloat noise(in vec2 p){\n    return noise(p,0);\n}\n\nfloat fold(in float x){\n    return abs(mod(x+1.,2.)-1.);\n}\n\nvec2 fold(in vec2 p){\n    return vec2(fold(p.x),fold(p.y));\n}\n\nvec3 fold(in vec3 p){\n    return vec3(fold(p.xy),fold(p.z));\n}\n\nvec4 fold(in vec4 p){\n    return vec4(fold(p.xy),fold(p.zw));\n}\n\nfloat scale(in float x,in float a,in float b,in float c,in float d){\n\treturn(x-a)/(b-a)*(d-c)+c;\n}\n\nvec2 scale(in vec2 p,in float a,in float b,in float c,in float d){\n\treturn vec2(scale(p.x,a,b,c,d),scale(p.y,a,b,c,d));\n}\n\nvec3 scale(in vec3 p,in float a,in float b,in float c,in float d){\n\treturn vec3(scale(p.xy,a,b,c,d),scale(p.z,a,b,c,d));\n}\n\nvec4 scale(in vec4 p,in float a,in float b,in float c,in float d){\n\treturn vec4(scale(p.xy,a,b,c,d),scale(p.zw,a,b,c,d));\n}\n\nmat2 rot2(in float a){\n    float c=cos(a);\n    float s=sin(a);\n    return mat2(c,-s,s,c);\n}\n\nvec3 gradient(in float t,in vec3 a,in vec3 b,in vec3 c,in vec3 d){\n\treturn a+b*cos(TWO_PI*(c*t+d));\n}","name":"Common","description":"","type":"common"}]}