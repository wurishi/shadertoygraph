{"ver":"0.1","info":{"id":"stdGzH","date":"1635742581","viewed":121,"name":"Cool Shader - Glow","username":"arjunpandey","description":"Glowy stuff with trigonometric functions","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shader","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(float y){\n\treturn floor(sin(y)*5.123);\n}\n\nfloat fade(float t){\n\treturn t*t*(t * 6.-15.)+10.;\n}\n\n\nfloat noise1(float x){\n   \n    float s = floor(x);\n    float e = fade(fract(x));\n    \n\treturn mix(\n    \tmix(hash(s),hash(s - 0.02),e),\n        mix(hash(s - 0.02),hash(s + 0.02),e),\n        e\n    );\n}\n\nfloat noise4( in vec2 x ) { \n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    //f = f*f*(2.005-2.0*f);\n    float n = p.x + p.y*57.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n}\n\nfloat noise( vec3 x )\n{\n\n    vec3 p = floor(x);\n\tvec3 f = fract(x);\n\n\tf = f*f*(3.0- 2.0*f);\n\tfloat n = p.x + p.y * 57.0 + 120.0 * p.z;\n\treturn mix(mix(mix( hash(n+0.0), hash(n+1.0),f.x),\n\t\t\t   mix( hash(n+57.0), hash(n+ 58.0),f.x),f.y),\n\t\t\t   mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n\t\t\t   mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z)-.5;\n}\n\n\nfloat rand(float n){return fract(sin(n) * 5000.);}\nfloat noise2(float p){\n\tfloat fl = floor(p);\n  \tfloat fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 finalColor = vec3(0.0);\n    float mag = 100.0;\n    uv = 10.0 * uv;\n    uv.y -= 5.0;\n    //uv.y += noise2(cos(uv.y + iTime) * tan(uv.x + iTime)* sin(uv.x + iTime));\n    //uv.y += noise1(tan(uv.y + iTime) * tan(uv.x + iTime)* sin(uv.x + iTime));\n    //uv.y += noise(vec3(cos(uv.y + iTime), tan(uv.x + iTime), sin(uv.x + iTime)));\n    //uv.y += noise4(vec2(cos(uv.x + iTime), tan(uv.x + iTime)));\n    mag = abs(4.0/(20.0 * uv.y));\n    finalColor += vec3(mag);\n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}