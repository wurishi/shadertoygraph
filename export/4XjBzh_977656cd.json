{"ver":"0.1","info":{"id":"4XjBzh","date":"1729267600","viewed":90,"name":"Swarm Intelligence","username":"StormOfTheVoid","description":"https://vanhunteradams.com/Pico/Animal_Movement/Boids-algorithm.html","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["boid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    float factor = 1.;\n    \n    fragCoord.x = fragCoord.x - (mod(fragCoord.x, factor*.5));\n    fragCoord.y = fragCoord.y - (mod(fragCoord.y, factor*.5));\n\tvec2 px = fragCoord.xy / iResolution.xy;\n    \n    fragColor = texture(iChannel1, vec2(px.x, px.y));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const ivec2 FS_ADDR = ivec2(0.0);\n\nconst vec4 fs_stt = vec4(1.0);\n\nuint seed = 0u;\n\nvoid setSeed(uint s) {\n    seed = s;\n}\n\nuint hash(uint s) {\n    s ^= 2747636419u;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    return s;\n}\n\nuint randI() {\n    seed = hash(seed);\n    return seed;\n}\n\nfloat rand() {\n    uint rn = randI();\n    rn %= 1000000000u;\n    float rs = float(rn);\n    rs /= 1000000000.0;\n    return rs;\n}\n\n#define setNSeed() setSeed(uint(iResolution.x*fragCoord.y+fragCoord.x + float(hash(uint(iTime*1000.0))%1000u)))\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\n\nvoid mainImage( out vec4 color, in vec2 uv )\n{\n    vec4 b=vec4(0.5);\n        float s=0.75;\n\n    vec2 fragCoord=uv;\n    if(float(iFrame)==0.){\n        setNSeed();\n        color=vec4(0.5-rand(),0.5-rand(),(0.5-rand()),(0.5-rand()));\n        color.xy*=s*300.;\n        color.xy+=s*vec2(150.+50.*uv.y,370.);\n        color.zw*=8.;\n    }else{\n        \n    \n    if(mod(float(iFrame),1.)==0.){\n        float n=400.;\n        \n        b=texture(iChannel0,uv/iResolution.xy);\n        \n        vec2 close=vec2(0.);\n        \n        vec2 vel=vec2(0.);\n        \n        vec2 pos=vec2(0.);\n        \n        float neigh=0.;\n        \n        float vr=40.;\n        float pr=8.;\n        float cf=0.05/3.;\n        float mf=0.0005/3.;\n        float af=0.01/3.;\n        float min_speed=2.;\n        float max_speed=3.;\n        float tf=0.2;\n        float bv=0.00;\n        float i=uv.y;\n\n            for(float j=1.;j<=n;j+=1.){\n\n                vec4 b2=vec4(0.);\n                \n                if(j!=uv.y){\n                    b2=texture(iChannel0,vec2(j,i)/iResolution.xy);\n\n\n                    float dx=b.x-b2.x;\n                    float dy=b.y-b2.y;\n\n                    if(abs(dx)<vr && abs(dy)<vr){\n\n                        if(dx*dx+dy*dy<pr*pr){\n\n                            close+=vec2(dx,dy);\n\n                        }else{\n\n                            if(dx*dx+dy*dy<vr*vr){\n\n                                pos+=b2.xy;\n\n                                vel+=b2.zw;\n\n                                neigh+=1.;\n                            }\n                        }\n                    }\n                }\n\n            }\n        \n \n        if(neigh>0.){\n            pos=pos/neigh;\n            vel=vel/neigh;\n            \n            b.z+=((pos.x-b.x)*cf+(vel.x-b.z)*mf);\n            b.w+=((pos.y-b.y)*cf+(vel.y-b.w)*mf);\n        }\n        \n        b.z+=close.x*af;\n        b.w+=close.y*af;\n     \n    \n    if(b.y>(260.)*s){\n        b.w+=-tf;\n    }\n    if(b.x>(490.)*s){\n        b.z+=-tf;\n    }\n    if(b.x<(50.)*s){\n        b.z+=tf;\n\n    }\n    if(b.y<(40.)*s){\n       b.w+=tf;\n    }\n    \n    if(mod(fragCoord.x,2.)<1.){\n    b.w=(1.-bv)*b.w+bv;\n    }else{\n    b.w=(1.-bv)*b.w-bv;\n    }\n    \n    vec2 v=b.xy-vec2(275.,150.);\n    b.zw+=-0.00025*v;\n\n\n\n\n\n\n                   \n    if(length(b.zw)<min_speed){\n    \n    b.zw*=min_speed/length(b.zw);\n    }\n    if(length(b.zw)>max_speed){\n    b.zw*=max_speed/length(b.zw);\n    }\n \n    b.xy+=b.zw;\n\n \n\n    color=b;  \n\n\n    }else{\n\n  color=texture(iChannel0,uv/iResolution.xy);\n  }\n  }\n    \n   \n    \n    \n  \n\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 color, in vec2 uv )\n{\n        \n        if(mod(float(iFrame),1.)==0.){\n        color=0.9*texture(iChannel1,uv/iResolution.xy);\n        \n        float f=0.75;\n        \n        vec2 uv2=uv;\n        float s=1.;\n        uv=f*300.*uv;\n        float n=1.;\n        for(float i=1.;i<=n;i+=1.){\n        for(float j=1.;j<=400.;j+=1.){\n        vec4 b=texture(iChannel0,vec2(j,i)/iResolution.xy);\n       color+=0.5*length(b.zw)*0.2*vec4(pow(2.,-2.5*length(uv/iResolution.y-b.xy)))*vec4(0.5+0.5*cos(1.*b.z),0.5+0.5*cos(1.*b.w),0.5+0.5*cos(0.1*(b.z+b.w)),1.);//*vec4(0.5+0.5*cos(10.*b/vec4(vec2(length(b.xy)),vec2(length(b.zw)))));\n       //color+=0.05*vec4(pow(2.,-2.*length(uv/iResolution.y-b.xy)))*vec4(0.5+0.5*cos(1.*b.z),0.5+0.5*cos(1.*b.w),0.5+0.5*cos(b.z+b.w),1.);//*vec4(0.5+0.5*cos(10.*b/vec4(vec2(length(b.xy)),vec2(length(b.zw)))));\n\n        }\n        }\n\n        \n                if(abs(uv.y/iResolution.y-260.*f)<1.){\n            //color=vec4(1.);\n        }\n                 if(abs(uv.y/iResolution.y-40.*f)<1.){\n           // color=vec4(1.);\n        }       \n \n                 if(abs(uv.x/iResolution.y-490.*f)<1.){\n           // color=vec4(1.);\n        }\n                 if(abs(uv.x/iResolution.y-50.*f)<1.){\n            //color=vec4(1.);\n        }\n        }else{\n\n      color=texture(iChannel1,uv/iResolution.xy);\n      }\n        \n\n}","name":"Buffer B","description":"","type":"buffer"}]}