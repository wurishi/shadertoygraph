{"ver":"0.1","info":{"id":"DsBfD1","date":"1689902309","viewed":51,"name":"Heat/diffusion equation","username":"Rogolop","description":"Time-depentent PDE numerical simulation.\nIgnoring boundary conditions (mathematically: fixed boundary =0).\n\nEach color channel is an independent diffusion.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["pde"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = texelFetch(iChannel0, ivec2(fragCoord), 0).xyz;\n    //if (fract(length(col)/500.+0.1)<0.01) col = vec3(0.,0.,10000.);\n    //col = 1.-1./(col+1.); // remap [0,inf) -> [0,1)\n    col *= 1./1.;\n    col = clamp(col,0.,1.);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define prev(X,Y) ( texelFetch(iChannel0, ivec2(fragCoord)+ivec2(X,Y), 0) )\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    float alpha = 0.5*4./(1./30.); // ~ von Neumann stability 1/2*(Dx)^2/Dt\n    alpha *= 0.5;\n    vec3 uxx = (prev(1,0).xyz-2.*prev(0,0).xyz+prev(-1,0).xyz)/4.;\n    vec3 uyy = (prev(0,1).xyz-2.*prev(0,0).xyz+prev(0,-1).xyz)/4.;\n    \n    // Equation\n    vec3 ut = alpha * (uxx + uyy);\n    \n    // Integration\n    float Dt = 1./30.; //iTimeDelta;\n    vec3 u = prev(0,0).xyz + ut*Dt;\n    \n    vec3 col = u;\n    //col = vec3(step(0., sin(6.28/4.*uv.x+iTime)), step(0., sin(6.28/4.*uv.y+iTime+6.28/4.)), 0.);\n    \n    // Initial condition\n    if (iFrame == 0) {\n        //col = vec3(1.0)*exp(-3.*abs(length(uv-vec2(0.5,0.5))));\n        col = 1.*vec3(uv.x, uv.y, 0.)*step(0., 0.5*max(sin(10.*uv.x),0.)+.3-uv.y);\n    }\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}