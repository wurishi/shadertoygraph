{"ver":"0.1","info":{"id":"NdGyDK","date":"1655576835","viewed":405,"name":"Text with VHS font","username":"Astherix","description":"This generates a layer with some text using the well-known outlined VCR font\n\nFurther compressed the font data to just 648 ints. Check the document listed on the Image pass for character codes","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["text","font","vhs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Use this as an overlay\n\n// Character values are on the bottom of this document\n// https://github.com/codeman38/vcr-fonts/blob/master/sources/stv5730/STV5730a.pdf\n\nint get_char_pixel(int x, int y, int c, bool inv) {\n    int base = ((x >> 3) + (y * 2) + (c * 0x24)) >> 2;\n    \n    int offset = ((y & 0x1) != 0) ? 0 : 16; \n    int value = (font[base] >> offset) & 0xffff;\n    \n    if (inv) {\n        return (value & (1 << (0xf - (x & 0xf)))) == 0 ? 1 : 2;\n    } else {\n        return (value & (1 << (0xf - (x & 0xf)))) != 0 ? 1 : 0;\n    }\n}\n\nint print_char(vec2 p, vec2 g, int c, bool inv, bool border) {\n    bool box = (p.x >= (g.x * 12.0)) && (p.x < ((g.x + 1.0) * 12.0)) &&\n               (p.y >= (g.y * 18.0)) && (p.y < ((g.y + 1.0) * 18.0));\n    \n    if (!box) return 0;\n    \n    if (border && !inv) {\n        int pixel = get_char_pixel(int(p.x) % 12, int(p.y) % 18, c, inv);\n        \n        if (pixel != 0) return 1;\n        \n        for (int y = -1; y <= 1; y++) {\n            for (int x = -1; x <= 1; x++) {\n                pixel = get_char_pixel((int(p.x) + x) % 12, (int(p.y) + y) % 18, c, false);\n           \n                if (pixel != 0) return 2;\n            }\n        }\n    }\n\n    return get_char_pixel(int(p.x) % 12, int(p.y) % 18, c, inv);\n}\n\nint characters[2];\n\nvoid number_to_characters(float n) {\n    int high = int(floor(n / 10.0)),\n        low = int(n) - (high * 10);\n    \n    characters[0] = high;\n    characters[1] = low;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = vec2(fragCoord.x, iResolution.y - fragCoord.y) / 2.0;\n    \n    vec4 t = texture(iChannel0, fragCoord.xy / iResolution.xy);\n    \n    int acc = 0;\n    \n    // Play\n    acc += int(print_char(p, vec2(2.0, 1.0) , 0x1b, false, true)); // P\n    acc += int(print_char(p, vec2(3.0, 1.0) , 0x17, false, true)); // L\n    acc += int(print_char(p, vec2(4.0, 1.0) , 0x0c, false, true)); // A\n    acc += int(print_char(p, vec2(5.0, 1.0) , 0x24, false, true)); // Y\n    acc += int(print_char(p, vec2(7.0, 1.0) , 0x44, false, true)); // â–º\n\n    float s = mod(floor(iTime),        60.0);\n    float m = mod(floor(iTime/60.0),   60.0);\n    float h = mod(floor(iTime/3600.0), 24.0);\n\n    // Timecode\n    acc += int(print_char(p, vec2(2.0, 10.0) , 0x1e, false, true)); // S\n    acc += int(print_char(p, vec2(3.0, 10.0) , 0x1b, false, true)); // P\n\n    number_to_characters(h);\n    acc += int(print_char(p, vec2(5.0, 10.0) , characters[0], false, true)); // 0\n    acc += int(print_char(p, vec2(6.0, 10.0) , characters[1], false, true)); // 0\n    acc += int(print_char(p, vec2(7.0, 10.0) , 0x26, false, true)); // :\n\n    number_to_characters(m);\n    acc += int(print_char(p, vec2(8.0, 10.0) , characters[0], false, true)); // 0\n    acc += int(print_char(p, vec2(9.0, 10.0) , characters[1], false, true)); // 0\n    acc += int(print_char(p, vec2(10.0, 10.0), 0x26, false, true)); // :\n\n    number_to_characters(s);\n    acc += int(print_char(p, vec2(11.0, 10.0), characters[0], false, true)); // 0\n    acc += int(print_char(p, vec2(12.0, 10.0), characters[1], false, true)); // 0\n    \n    // This pass lets iChannel0 pass through\n    if (acc == 0) fragColor = t;\n    if (acc == 1) fragColor = vec4(1.0);\n    if (acc == 2) fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Using the Common pass isn't strictly necessary here, just put\n// the font data on your text print pass\n\n// Font data gotten from STV5730's ROM, modified for size\n\n/* stv5730.bin (6/18/2022 2:37:22 PM)\n   StartOffset(h): 00000000, EndOffset(h): 00000A1F, Length(h): 00000A20 */\n\nint[] font = int[](\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x60606060, 0x60606060, 0x60606060,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x06000600, 0x1E001E00,\n\t0x06000600, 0x06000600, 0x06000600,\n\t0x06000600, 0x1F801F80, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x006000E0, 0x1FC03F80, 0x70006000,\n\t0x60006000, 0x7FE07FE0, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x006000E0, 0x07C007C0, 0x00E00060,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x07800F80, 0x1D803980,\n\t0x71806180, 0x61806180, 0x7FE07FE0,\n\t0x01800180, 0x01800180, 0x00000000,\n\t0x00000000, 0x7FE07FE0, 0x60006000,\n\t0x7F807FC0, 0x00E00060, 0x00600060,\n\t0x606070E0, 0x3FC01F00, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x60006000, 0x7F807FC0, 0x60E06060,\n\t0x606070C0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x7FE07FE0, 0x006000C0,\n\t0x01800300, 0x06000600, 0x06000600,\n\t0x06000600, 0x06000600, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x606070E0, 0x3FC03FC0, 0x70E06060,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x60607060, 0x3FE01FE0, 0x00600060,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x3FC03FC0, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x06000F00, 0x1F8039C0,\n\t0x70E06060, 0x60606060, 0x7FE07FE0,\n\t0x60606060, 0x60606060, 0x00000000,\n\t0x00000000, 0x7F807FC0, 0x60E06060,\n\t0x606060E0, 0x7FC07FC0, 0x60E06060,\n\t0x606060E0, 0x7FC07F80, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x60006000, 0x60006000, 0x60006000,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x7F807FC0, 0x60E06060,\n\t0x60606060, 0x60606060, 0x60606060,\n\t0x606060E0, 0x7FC07F80, 0x00000000,\n\t0x00000000, 0x7FE07FE0, 0x60006000,\n\t0x60006000, 0x7F807F80, 0x60006000,\n\t0x60006000, 0x7FE07FE0, 0x00000000,\n\t0x00000000, 0x7FE07FE0, 0x60006000,\n\t0x60006000, 0x7F807F80, 0x60006000,\n\t0x60006000, 0x60006000, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x60006000, 0x63E063E0, 0x60606060,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x60606060, 0x60606060,\n\t0x60606060, 0x7FE07FE0, 0x60606060,\n\t0x60606060, 0x60606060, 0x00000000,\n\t0x00000000, 0x1F801F80, 0x06000600,\n\t0x06000600, 0x06000600, 0x06000600,\n\t0x06000600, 0x1F801F80, 0x00000000,\n\t0x00000000, 0x07E007E0, 0x01800180,\n\t0x01800180, 0x01800180, 0x01800180,\n\t0x61807380, 0x3F001E00, 0x00000000,\n\t0x00000000, 0x606060E0, 0x61C06380,\n\t0x67007E00, 0x7C007C00, 0x6E006700,\n\t0x638061C0, 0x60E06060, 0x00000000,\n\t0x00000000, 0x60006000, 0x60006000,\n\t0x60006000, 0x60006000, 0x60006000,\n\t0x60006000, 0x7FE07FE0, 0x00000000,\n\t0x00000000, 0x60606060, 0x70E079E0,\n\t0x7FE06F60, 0x66606060, 0x60606060,\n\t0x60606060, 0x60606060, 0x00000000,\n\t0x00000000, 0x60606060, 0x60607060,\n\t0x78607C60, 0x6E606760, 0x63E061E0,\n\t0x60E06060, 0x60606060, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x60606060, 0x60606060, 0x60606060,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x7F807FC0, 0x60E06060,\n\t0x606060E0, 0x7FC07F80, 0x60006000,\n\t0x60006000, 0x60006000, 0x00000000,\n\t0x00000000, 0x1F803FC0, 0x70E06060,\n\t0x60606060, 0x60606060, 0x66606760,\n\t0x63E071C0, 0x3FE01E60, 0x00000000,\n\t0x00000000, 0x7F807FC0, 0x60E06060,\n\t0x606060E0, 0x7FC07F80, 0x6E006700,\n\t0x638061C0, 0x60E06060, 0x00000000,\n\t0x00000000, 0x1FE03FE0, 0x70006000,\n\t0x60007000, 0x3F801FC0, 0x00E00060,\n\t0x006000E0, 0x7FC07F80, 0x00000000,\n\t0x00000000, 0x7FE07FE0, 0x06000600,\n\t0x06000600, 0x06000600, 0x06000600,\n\t0x06000600, 0x06000600, 0x00000000,\n\t0x00000000, 0x60606060, 0x60606060,\n\t0x60606060, 0x60606060, 0x60606060,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x60606060, 0x60606060,\n\t0x60606060, 0x60606060, 0x606070E0,\n\t0x39C01F80, 0x0F000600, 0x00000000,\n\t0x00000000, 0x60606060, 0x60606060,\n\t0x60606060, 0x60606660, 0x6F607FE0,\n\t0x79E070E0, 0x60606060, 0x00000000,\n\t0x00000000, 0x60606060, 0x606070E0,\n\t0x39C01F80, 0x0F000F00, 0x1F8039C0,\n\t0x70E06060, 0x60606060, 0x00000000,\n\t0x00000000, 0x60606060, 0x60606060,\n\t0x70E039C0, 0x1F800F00, 0x06000600,\n\t0x06000600, 0x06000600, 0x00000000,\n\t0x00000000, 0x7FE07FE0, 0x006000E0,\n\t0x01C00380, 0x07000E00, 0x1C003800,\n\t0x70006000, 0x7FE07FE0, 0x00000000,\n\t0x00000000, 0x00000000, 0x06000600,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x06000600, 0x00000000, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x60006000, 0x00000000,\n\t0x00000000, 0x00000000, 0x006000E0,\n\t0x01C00380, 0x07000E00, 0x1C003800,\n\t0x70006000, 0x00000000, 0x00000000,\n\t0x00000000, 0x06000600, 0x02000400,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x1F003F80, 0x31C000C0, 0x1FC03FC0,\n\t0x70C060C0, 0x7FE03F60, 0x00000000,\n\t0x00000000, 0x60006000, 0x60006000,\n\t0x6F807FC0, 0x70E06060, 0x60606060,\n\t0x606060E0, 0x7FC07F80, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x1F803FC0, 0x70E06000, 0x60006000,\n\t0x600070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x00C000C0, 0x00C000C0,\n\t0x1FC03FC0, 0x30C060C0, 0x60C060C0,\n\t0x60C030C0, 0x3FE01FE0, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x1F803FC0, 0x70E06060, 0x7FE07FE0,\n\t0x600070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x07800FC0, 0x0CC00C00,\n\t0x0C003F00, 0x3F000C00, 0x0C000C00,\n\t0x0C000C00, 0x0C000C00, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x1F603FE0, 0x70E06060, 0x70E03FE0,\n\t0x1F600060, 0x70E03FC0, 0x1F800000,\n\t0x00000000, 0x60006000, 0x60006000,\n\t0x67806FC0, 0x78E07060, 0x60606060,\n\t0x60606060, 0x60606060, 0x00000000,\n\t0x00000000, 0x06000600, 0x00000000,\n\t0x0E000600, 0x06000600, 0x06000600,\n\t0x06000600, 0x06001F80, 0x00000000,\n\t0x00000000, 0x01800180, 0x00000000,\n\t0x03800180, 0x01800180, 0x01800180,\n\t0x01803180, 0x3B801F00, 0x0E000000,\n\t0x00000000, 0x60006000, 0x60006000,\n\t0x606060E0, 0x61C06380, 0x67006F00,\n\t0x7F8079C0, 0x60E06060, 0x00000000,\n\t0x00000000, 0x0E000600, 0x06000600,\n\t0x06000600, 0x06000600, 0x06000600,\n\t0x06000680, 0x07800300, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x6DC076C0, 0x66606660, 0x66606660,\n\t0x66606660, 0x66606660, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x6F807FC0, 0x70E07060, 0x60606060,\n\t0x60606060, 0x60606060, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x1F803FC0, 0x70E06060, 0x60606060,\n\t0x606070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x6F807FC0, 0x70E06060, 0x606070E0,\n\t0x7FC06F80, 0x60006000, 0x60000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x1F603FE0, 0x70E06060, 0x606070E0,\n\t0x3FE01F60, 0x00600060, 0x00600000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x6F807FC0, 0x78E07060, 0x60006000,\n\t0x60006000, 0x60006000, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x1F803FC0, 0x70E07000, 0x3F803FC0,\n\t0x00E070E0, 0x3FC01F80, 0x00000000,\n\t0x00000000, 0x06000600, 0x06000600,\n\t0x1F801F80, 0x06000600, 0x06000600,\n\t0x06000600, 0x07800380, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x60606060, 0x60606060, 0x60606060,\n\t0x606070E0, 0x3FE01F60, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x60606060, 0x60606060, 0x606070E0,\n\t0x39C01F80, 0x0F000600, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x60606060, 0x66606660, 0x66606660,\n\t0x6F607FE0, 0x39C01080, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x606070E0, 0x39C01F80, 0x0F000F00,\n\t0x1F8039C0, 0x70E06060, 0x00000000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x60606060, 0x60606060, 0x70603FE0,\n\t0x1FE00060, 0x00E01FC0, 0x1F800000,\n\t0x00000000, 0x00000000, 0x00000000,\n\t0x7FE07FE0, 0x01C00380, 0x07000E00,\n\t0x1C003800, 0x7FE07FE0, 0x00000000,\n\t0x00000000, 0x00001000, 0x18001C00,\n\t0x1E001F00, 0x1F801FC0, 0x1F801F00,\n\t0x1E001C00, 0x18001000, 0x00000000,\n\t0x00000000, 0x00008400, 0xC600E700,\n\t0xF780FFC0, 0xFFE0FFF0, 0xFFE0FFC0,\n\t0xF780E700, 0xC6008400, 0x00000000,\n\t0x00000000, 0x00000210, 0x06300E70,\n\t0x1EF03FF0, 0x7FF0FFF0, 0x7FF03FF0,\n\t0x1EF00E70, 0x06300210, 0x00000000,\n\t0x00000000, 0x00007FE0, 0x7FE07FE0,\n\t0x7FE07FE0, 0x7FE07FE0, 0x7FE07FE0,\n\t0x7FE07FE0, 0x7FE07FE0, 0x00000000\n);","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// This buffer is meant to be replaced by your backdrop\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}