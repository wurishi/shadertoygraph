{"ver":"0.1","info":{"id":"X3lyz2","date":"1726478658","viewed":24,"name":"Dashed line frame","username":"danbol98","description":"An animated dashed line frame ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["animated","frame","dashed"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float GetEdge(float dir, float edgeStart, float scale)\n{\n    return step(dir * scale, edgeStart);\n}\n\nfloat MakeDashed(float inVal, float edgeStart)\n{\n    return step(inVal, edgeStart) + step((1.0 - inVal), edgeStart); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    \n    //float edge_mask_out = 1.0 - EdgeMask(uv * 4.0 - 1.5, 0.1, ratio);\n    \n    // divide uv x and y in different lines and move them\n    // multiply the uv by odd number to make corners merge better\n    float scrolling_d = mod(uv.y * 9.0 + iTime, 1.0);\n    float scrolling_u = mod(uv.y * 9.0 - iTime, 1.0);\n    float scrolling_l = mod(uv.x * 9.0 * ratio  + iTime, 1.0);\n    float scrolling_r = mod(uv.x * 9.0 * ratio - iTime, 1.0);\n    \n    // make lines dashed\n    float dashed_d = MakeDashed(scrolling_d, 0.25);\n    float dashed_u = MakeDashed(scrolling_u, 0.25);\n    float dashed_l = MakeDashed(scrolling_l, 0.25);\n    float dashed_r = MakeDashed(scrolling_r, 0.25);\n    \n    // mask lines on the edges\n    float edge_d = GetEdge(uv.y, 0.05, 1.0);\n    float edge_u = GetEdge((1.0 - uv.y), 0.05, 1.0);\n    float edge_l = GetEdge(uv.x, 0.05, ratio);\n    float edge_r = GetEdge((1.0 - uv.x), 0.05, ratio);\n    \n    // combine the 4 edges\n    float res = edge_d * dashed_l * (1.0 - edge_r) * (1.0 - edge_l) +\n            edge_u * dashed_r * (1.0 - edge_l) * (1.0 - edge_r)+\n            edge_l * dashed_u * (1.0 - edge_d) * (1.0 - edge_u) +\n            edge_r * dashed_d * (1.0 - edge_u) * (1.0 - edge_d);\n\n    // Output to screen\n    fragColor = vec4(vec3(res), 1.0);\n}","name":"Image","description":"","type":"image"}]}