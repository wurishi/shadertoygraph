{"ver":"0.1","info":{"id":"fts3Rf","date":"1657413385","viewed":78,"name":"crap 2d sdf","username":"AlexApps99","description":"It sux","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RADIUS (0.5)\nfloat sdf_circle(vec2 pos) {\n    return length(pos) - RADIUS;\n}\n\n#define RADIUS1 (0.5)\n#define RADIUS2 (0.1)\nfloat sdf_torus(vec2 pos) {\n    return abs(length(pos) - RADIUS1)-RADIUS2;\n}\n\n// Could be cleaner\n#define rX (0.5)\n#define rY (0.25)\nfloat sdf_box(vec2 pos) {\n    float val = length(max(abs(pos) - vec2(rX, rY), 0.));\n    if (val > 0.) { return val; } else {\n        vec2 intermediate = abs(pos) - vec2(rX, rY);\n        return max(intermediate.x, intermediate.y);\n    }\n}\n\n#define INCREMENT (0.1)\nvec3 col(float dist) {\n    float meth = sin(radians(180.) * dist / INCREMENT - iTime);\n    meth *= exp(-abs(meth));\n    meth = 0.5 * meth + 0.5;\n    if (dist > 0.) {\n        return vec3(meth,0.,1.);\n    } else {\n        return vec3(0.5,meth,0.);\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Coordinates from (-0.5,-0.5) to (0.5, 0.5)\n    vec2 uv = fragCoord/iResolution.xy - vec2(0.5);\n    uv.x *= iResolution.x/iResolution.y;\n    // Distortion\n    uv.x += 0.01*sin(5.*uv.x + 3.*iTime);\n    uv.y += 0.02*sin(4.*uv.y + 5.*iTime);\n\n    float d = sdf_torus(uv);\n\n    // Output to screen\n    fragColor = vec4(col(d),1.0);\n}","name":"Image","description":"","type":"image"}]}