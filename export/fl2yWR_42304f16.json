{"ver":"0.1","info":{"id":"fl2yWR","date":"1649478366","viewed":100,"name":"Squiggle","username":"dendy","description":"Function to draw a squiggle.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["function"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 squiggle(in float x) {\n    float radius = sin(x * 10.0) * 0.2;\n    float angle = x * 3.0 * 2.0 * 3.1415;\n    vec2 circle = vec2(sin(angle), cos(angle)) * radius;\n    return vec2(x, sin(x * 10.0) * 0.1) + circle;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec2 coord = vec2(uv.x, (uv.y - 0.5) * iResolution.y / iResolution.x);\n\n    float c = 0.0;\n    for (int i = 0; i < int(iResolution.x); ++i) {\n        float x = float(i) / iResolution.x;\n        vec2 pos = squiggle(x);\n        float dist = distance(coord, pos);\n        float cl = 1.0 - smoothstep(0.0, 0.005, dist);\n        c = max(c, cl);\n    }\n\n    fragColor = vec4(vec3(c), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}