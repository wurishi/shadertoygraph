{"ver":"0.1","info":{"id":"7djfRK","date":"1646684205","viewed":692,"name":"Thunderstruck","username":"Radical_Ed","description":"// rework of this GLSL Shader : https://glslsandbox.com/e#79369.0","likes":18,"published":1,"flags":64,"usePreview":0,"tags":["rock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4lsXDX","filepath":"https://soundcloud.com/user-408363607/acdc-thunderstruck-lyrics","previewfilepath":"https://soundcloud.com/user-408363607/acdc-thunderstruck-lyrics","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// rework of this GLSL Shader : https://glslsandbox.com/e#79369.0\n\n#ifdef GL_ES\nprecision lowp float;\n#endif\n\n\n\n\n\nconst float n = 5.1;\nconst float s = 7.3;\n\n\nfloat Hack( vec2 p, in float s)\n{\n    vec3 p2 = vec3(p.xy,17.3 * abs(sin(s)));\n    return fract(sin(dot(p2,vec3(17.3,61.7, 12.4)))*173713.1);\n}\n\n\nfloat HackNoise(in vec2 p, in float s)\n{\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    f *= f * (3.0-2.0*f);\n    \n    \n    return mix(mix(Hack(i + vec2(0.,0.), s), Hack(i + vec2(1.,0.), s),f.x),\n               mix(Hack(i + vec2(0.,1.), s), Hack(i + vec2(1.,1.), s),f.x),\n               f.y) * s;\n}\n\n\nfloat Thunder(vec2 p, vec3 spec)\n{\n    \n   \n    float v = - HackNoise(p * 02., 0.25);\n    v += HackNoise(p * 01.1, 0.5) - HackNoise(p * 01.1, 0.25);\n    v += HackNoise(p * 02.1, 0.25) - HackNoise(p * 02.1, 0.125);\n    v += HackNoise(p * 04.1, 0.125)*spec.x*1. - HackNoise(p * 08.1, 0.0625);\n    v += HackNoise(p * 08.1, 0.0625) - HackNoise(p * 16., 0.03125)*spec.y*1.;\n    v += HackNoise(p * 16.1, 0.03125);\n    return v*1.2;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float WhoMadeWho = (iTime * s) + 1000.0;\n    vec2 p = fragCoord.xy / iResolution.yy;\n    vec2 q = fragCoord.xy / iResolution.yy;\n    \n    int tx = int(p.x*128.0);\n    \n    float wave = texelFetch( iChannel0, ivec2(tx,1), 0 ).x;\n    vec3 spec = vec3(wave/1.0);\n\n    \n    vec2 uv = ( gl_FragCoord.xy / iResolution.xy ) * 2.0 - 1.0;\n    uv.y *= iResolution.y/iResolution.x;\n    \n    \n    vec3 finalColor = vec3( 0.0, 0.0, 0.0 );\n    for( float i = 1.0; i < n; i++ )\n    {\n        float t = abs(4.0 / ((uv.y + Thunder( uv + WhoMadeWho / i , spec)) * (i * 100.0)));\n        finalColor +=  t * vec3( i * 0.1*spec.x*2., 0.2, 1.30 );\n    }\n    \n    fragColor = vec4( finalColor, 1.0 );\n    \n    \n}","name":"Image","description":"","type":"image"}]}