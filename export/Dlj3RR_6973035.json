{"ver":"0.1","info":{"id":"Dlj3RR","date":"1687174253","viewed":62,"name":"atom-cloud","username":"Fuergu","description":"2023/1/3","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*************************************\n         Move Your Mouse\n*************************************/\nfloat DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p) {\n\tfloat d = DistLine(ro, rd, p);\n    vec2 mouse=iMouse.xy/iResolution.xy;\n    if(.6*mouse.x>.5*mouse.y)\n      d = smoothstep(.6*mouse.x, .5*mouse.y, d);\n    else\n      d = smoothstep(.6,.2,d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy; // 0 <> 1\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(3.*sin(t), 2.*sin(t), -3.*cos(t));\n    \n    vec3 lookat = vec3(.5);\n    \n    float zoom = 1.+cos(t)*.3;\n    \n    vec3 f = normalize(lookat-ro);\n    vec3 r = cross(vec3(0., 1., 0.), f);\n    vec3 u = cross(f, r);\n    \n    vec3 c = ro + f*zoom;\n    vec3 ipoint = c + uv.x*r + uv.y*u;\n    vec3 rd = ipoint-ro;\n    \n   \n    //alpha\n    float d = 0.;\n    float d1 = DrawPoint(ro, rd, vec3(0., 0., 0.));//1\n    float d2 = DrawPoint(ro, rd, vec3(0., 0., 1.));//2\n    float d3 = DrawPoint(ro, rd, vec3(0., 1., 0.));//3\n    float d4 = DrawPoint(ro, rd, vec3(1., 0., 0.));//4\n    float d5 = DrawPoint(ro, rd, vec3(0., 1., 1.));//5\n    float d6 = DrawPoint(ro, rd, vec3(1., 0., 1.));//6\n    float d7 = DrawPoint(ro, rd, vec3(1., 1., 0.));//7\n    float d8 = DrawPoint(ro, rd, vec3(1., 1., 1.));//8\n    d=d1+d2+d3+d4+d5+d6+d7+d8;\n    \n    //color\n    \n    float dist[8];\n     dist[0]=ro[0]*ro[0]+ro[1]*ro[1]+ro[2]*ro[2];\n     dist[1]=ro[0]*ro[0]+ro[1]*ro[1]+(ro[2]-1.)*(ro[2]-1.);\n     dist[2]=ro[0]*ro[0]+(ro[1]-1.)*(ro[1]-1.)+ro[2]*ro[2];\n     dist[3]=(ro[0]-1.)*(ro[0]-1.)+ro[1]*ro[1]+ro[2]*ro[2];\n     dist[4]=ro[0]*ro[0]+(ro[1]-1.)*(ro[1]-1.)+(ro[2]-1.)*(ro[2]-1.);\n     dist[5]=(ro[0]-1.)*(ro[0]-1.)+ro[1]*ro[1]+(ro[2]-1.)*(ro[2]-1.);\n     dist[6]=(ro[0]-1.)*(ro[0]-1.)+(ro[1]-1.)*(ro[1]-1.)+ro[2]*ro[2];\n     dist[7]=(ro[0]-1.)*(ro[0]-1.)+(ro[1]-1.)*(ro[1]-1.)+(ro[2]-1.)*(ro[2]-1.);\n    \n    float g1=0.,  g2=1.;\n    float max0=max(dist[0],max(dist[1],max(dist[2],max(dist[3],max(dist[4],max(dist[5],max(dist[6],dist[7])))))));\n    float min0=min(dist[0],min(dist[1],min(dist[2],min(dist[3],min(dist[4],min(dist[5],min(dist[6],dist[7])))))));\n    float color[8];\n    \n    for (int i0 = 0; i0<8; i0++) \n    {\t\n    color[i0]=(dist[i0]-min0)/(max0-min0);\n    }\n    float d1c =d1*color[0];\n    float d2c =d2*color[1];\n    float d3c =d3*color[2];\n    float d4c =d4*color[3];\n    float d5c =d5*color[4];\n    float d6c =d6*color[5];\n    float d7c =d7*color[6];\n    float d8c =d8*color[7];\n    float dc=max(d1c,max(d2c,max(d3c,max(d4c,max(d5c,max(d6c,max(d7c,d8c)))))));\n    //float dc = min(d1c, min(d2c, min(d3c, min(d4c, min(d5c, min(d6c, min(d7c, d8c)))))));\n\n    vec2 mouse=iMouse.xy/iResolution.xy;\n    \n\tfragColor =  vec4(d*0.5*(1.+sin(t+60.)),d*dc*0.5*(1.+sin(t+90.)),0.5*(1.+sin(t+30.))*d-.1 ,d); \n    if(.6*mouse.x>.5*mouse.y)\n    fragColor = pow(fragColor,vec4(vec3(mouse.x*mouse.y),1.)); \n    \n}","name":"Image","description":"","type":"image"}]}