{"ver":"0.1","info":{"id":"ctfGRX","date":"1672088183","viewed":88,"name":"flare on orbit","username":"Dragon3DGraff","description":"circle, glow","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circleFlare (vec2 pos, vec2 uv) {\n// return 0.5 - smoothstep(r, r+1.0, distance(uv, vec2(0.0)));\n return 0.1*(0.2+abs(sin(iTime)))/distance(uv, pos);\n}\n\nvec4 ring (float r, vec2 pos, vec2 uv, vec3 color, float thickness) {\nuv.x *=1.5;\nuv.y /=1.5;\n    float dist = distance(uv, pos);\n    vec4 col = vec4(vec3(color), 1.);\n    float outer = smoothstep(r+thickness, r+thickness - .005, dist);\n    float inner = smoothstep(r, r - .005, dist);\n    col.a = outer - inner;\n    \n    return col;\n // return smoothstep(r, r+0.01, distance(uv, pos));\n \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n      uv -= .5;\n      uv.x *= iResolution.x / iResolution.y;\n      \n    vec2 pos = vec2(0.2*sin(iTime),0.45*cos(iTime));\n\n    float flare = circleFlare(pos, uv);\n    vec3 color = vec3(flare, flare * flare / 2., flare/2.0);\n    \n    vec4 circleOrbit = ring(0.3, vec2(0.0,0.0), uv, vec3(1.0, 1.0, 0.0), 0.008);\n    \n    color = mix(color, circleOrbit.xyz, circleOrbit.a);\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}