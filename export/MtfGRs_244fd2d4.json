{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define PI\t3.14159265359\n#define PI2\t( PI * 2.0 )\n\nbool Flag = false;\nint M;\n\nmat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\t\n}\n\nvec3 hsv(float h, float s, float v)\n{\n  return mix( vec3( 1.0 ), clamp( ( abs( fract(\n    h + vec3( 3.0, 2.0, 1.0 ) / 3.0 ) * 6.0 - 3.0 ) - 1.0 ), 0.0, 1.0 ), s ) * v;\n}\n\nfloat map1(in vec3 p)\n{     \n    p.yz *= rotate(iTime * -0.543);\n    p.zx *= rotate(iTime * 0.876);\n    // folding -- https://www.shadertoy.com/view/XlX3zB\n    float cospin = cos(PI / 5.0), scospin = sqrt(0.75 - cospin * cospin);\n    vec3 nc = vec3(-0.5, -cospin ,scospin);\n    for(int i = 0; i < 5; i++)\n    {\n\t\tp.xy = abs(p.xy);\n\t\tp -= 2.0 * min(0.0, dot(p, nc)) * nc;\n\t}\n    float time = mod(iTime, 12.0);\n    p.z -=  0.4;\n    p.z -=  6.0 * smoothstep(1.0,  3.0, time);\n    p.z -= -5.7 * smoothstep(6.0,  9.0, time);\n    p.z -= -0.3 * smoothstep(10.0, 12.0, time);\n    return abs(p.x) +abs(p.y) + abs(p.z)-0.25;\n}\n\nfloat map2(in vec3 p)\n{     \n    p.xz = vec2(length(p) - 1.7, sin(atan(p.z, p.x) * 2.5) * 0.6);\n    return length(p) - 0.08;\n }\n\nfloat map3(in vec3 p)\n{     \n    vec3 q = p;\n\tp.xz = vec2(length(p) - 1.7, sin(atan(p.z, p.x) * 2.5) * 0.5);\n    float de1 = 0.8 * (length(p.xz) - 0.01);\n    float de2 = max(p.x-2.0,length(p.yz)-0.01);\n    p.y = sin(atan(q.y, length(q.zx)) * 7.0) * 0.3;\n    float de3 = 0.7 * (length(p.xy) - 0.01);\n    return min(min(de1,de2),de3);\n}\n\nfloat map(in vec3 p)\n{\n    float de1 = 0.6 * map1(p);\n\tp.xz *= rotate(iTime * 0.234);\n\tp.yz *= rotate(iTime * 0.123); \n    float de2 = 0.5 * map2(p);\n    float de3 = map3(p);\n    if (Flag)\n    {\n        if (de1 < de2 && de1 < de3)\n        {\n            M = 1;\n         } else if (de2 < de3){\n            M = 2;\n         } else{\n            M = 3;   \n         }\n    }    \n    return min(min(de1,de2),de3);\n}\n\nvec3 calcColor(in vec3 p)\n{\n    Flag = true; map(p); Flag = false;\n    if (M == 1)\n    {\n        return hsv(atan(p.z, p.x) / PI2 - 0.02 * iTime, 0.8, 1.0);\n    }\n    if (M == 2) \n    {\n        return hsv(0.18*floor(0.5 * iTime), 1.0, 1.0 );\n    }\n    if (M == 3) \n    {       \n    \tfloat t = smoothstep(0.2, 7.5, mod(iTime, 12.0));\n        return mix(vec3(1.0, 0.1, 0.1), vec3(0.2, 0.5, 0.3), t);\n    }\n    return vec3(1.0);\n}\n\nvec3 calcNormal(in vec3 p)\n{\n\tconst vec2 e = vec2(0.0001, 0.0);\n\treturn normalize(vec3(\n\t\tmap(p + e.xyy) - map(p - e.xyy),\n\t\tmap(p + e.yxy) - map(p - e.yxy),\n\t\tmap(p + e.yyx) - map(p - e.yyx)));\n}\n\nfloat softshadow(in vec3 ro, in vec3 rd)\n{\n\tfloat res = 1.0;\n    float t = 0.05;\n    for(int i = 0; i < 32; i++)\n    {\n\t\tfloat h = map(ro + rd * t);\n        res = min(res, 8.0 * h / t);\n        t += clamp(h, 0.02, 0.1);\n        if(h < 0.001 || t > 1.5) break;\n    }\n    return clamp(res, 0.0, 1.0);\n}\n\nfloat march(in vec3 ro, in vec3 rd)\n{\n\tconst float maxd = 10.0;\n\tconst float precis = 0.001;\n    float h = precis * 2.0;\n    float t = 0.0;\n\tfloat res = -1.0;\n    for(int i = 0; i < 64; i++)\n    {\n        if(h < precis || t > maxd) break;\n\t    h = map(ro + rd * t);\n        t += h;\n    }\n    if(t < maxd) res = t;\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p2d = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\tvec3 col = vec3(0.2, 0.3, 0.7) * ((p2d.y + 1.0) * 0.3);\n    col = mix(col, texture(iChannel0, p2d * 0.02 - iTime * 0.0005).xyz, 0.3);\n   \tvec3 rd = normalize(vec3(p2d, -1.8));\n\tvec3 ro = vec3(0.0, 0.0, 3.5);\n    vec3 li = normalize(vec3(0.5, 0.8, 3.0));\n    float t = march(ro, rd);\n    if(t > -0.001)\n    {\n        vec3 p3d = ro + t * rd;\n        vec3 n = calcNormal(p3d);\n\t\tfloat dif = clamp((dot(n, li) + 0.5) * 0.7, 0.4, 1.0);\n        dif *= clamp(softshadow(p3d, li), 0.4, 1.0);\n        col = calcColor(p3d) * dif;\n    }\n    col = pow(col, vec3(0.8));\n   \tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MtfGRs","date":"1424273250","viewed":1200,"name":"Scatter","username":"gaz","description":"3d","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","folding"],"hasliked":0,"parentid":"","parentname":""}}