{"ver":"0.1","info":{"id":"WsSGRc","date":"1549487295","viewed":204,"name":"firstBubble","username":"DrRainBrain","description":"einfache brechung","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["bubble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float n1=1.00; //air\n    float n2=1.33; //like whater on a wall\n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec2 pos=vec2((1.0+cos(iTime)*0.5)*0.5,(1.0+sin(iTime)*0.5)*0.5);\n    float size=(iResolution.x+iResolution.x)/30.0* (1.5+cos(iTime*3.14156798)*0.0);\n    vec3 LP = vec3(iResolution.x*0.177,iResolution.x*0.75,size*4.0)*3.0;\n    vec3 VP = vec3(iResolution.x*0.5,iResolution.x*0.5,size*4.0);\n    vec3 speccol=vec3(0.0,0.0,0.0);\n    \n    col = texture(iChannel0,uv).xyz;\n    \n    if(pow(fragCoord.x-iResolution.x*pos.x,2.0)+pow(fragCoord.y-iResolution.y*pos.y,2.0)<pow(size*1.0,2.0)){ //sizecheck\n        vec2 dispos= fragCoord-(iResolution.xy*pos);\n    \tfloat h1=pow(size*1.0,2.0)-pow(dispos.x,2.0)-pow(dispos.y,2.0);\n    \t//if(h1<0.0){h1=0.0;} //increase sizecheck slightly\n        float h=pow(h1,0.5);\n        float alpha1 =  acos(h/size);\n    \t//if(h>size){alpha1 =  acos(size/h);}\n        float alpha=asin(sin(alpha1)*n1/n2);\n        \n        float diff = pow(pow(dispos.x,2.)+pow(dispos.y,2.0),0.5);\n        float faktor=(diff-tan(alpha1-alpha)*h)/diff;\n    \t//if(faktor<0.0){faktor=-faktor;}\n        dispos=dispos*faktor;//(1.5+cos(iTime));\n        uv=(dispos+(iResolution.xy*pos))/iResolution.xy;//vec2(512.0,288.0);\n        \n        vec3 SP = vec3(fragCoord,h);\n        vec3 MP = vec3(pos*iResolution.xy,0);\n        \n        vec3 ldir = normalize(SP-LP);\n        vec3 n=normalize(SP-MP);\n        \n        vec3 R = reflect(-ldir,n);\n        vec3 E = vec3(0.0,0.0,-1.0);\n        float cosAlpha = max(dot( E,R ),0.0);\n        \n        //speccol=vec3(0.8,0.8,0.8)*pow(cosAlpha,5.0)*0.9+vec3(0.1,0.1,0.1)*sin(alpha1);\n        speccol=vec3(1.0,1.0,1.0)*sin(alpha1/4.0)*0.7 + vec3(0.8,0.8,0.8)*pow(cosAlpha,5.0)*0.9;\n        col = texture(iChannel0,uv).xyz;\n    }\n    \n    //col = texture(iChannel1,uv).xyz;\n    fragColor = vec4(col+speccol,1.0);\n    //fragColor = vec4(uv,0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}