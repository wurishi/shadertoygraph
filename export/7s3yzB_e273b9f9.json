{"ver":"0.1","info":{"id":"7s3yzB","date":"1653622304","viewed":79,"name":"2D Egg / Raindrop","username":"nelsonkuang","description":"2D Egg / Raindrop","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["egg","raindrop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535897932384626433832795;\n\nvec2 rotate(vec2 uv, float th) {\n  return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nvec3 getBackgroundColor(vec2 uv) {\n  uv = uv * 0.5 + 0.5; // remap uv from <-0.5,0.5> to <0.25,0.75>\n  vec3 gradientStartColor = vec3(1., 0., 1.);\n  vec3 gradientEndColor = vec3(0., 1., 1.);\n  return mix(gradientStartColor, gradientEndColor, uv.y); // gradient goes from bottom to top\n}\n\n// Math Dirived from: https://zhuanlan.zhihu.com/p/380580061\n// (x^2 + y^2)^2 - 2 x (x^2 + y^2) + n y^2=0 (n>0)\nfloat sdRaindrop(vec2 uv, float n, vec2 offset) {\n  float scale = 2.0 * n;\n\n  uv.x = clamp(uv.x - offset.x, 0.0, 1.0);\n\n  uv.y = (uv.y - offset.y);\n\n  uv *= scale;\n\n  float x = uv.x;\n  float y = uv.y;\n\n  return (x * x + y * y) * (x * x + y * y) - 2.0 * (x * x + y * y) + n * y * y;\n}\n\nvec3 drawScene(vec2 uv) {\n  vec3 col = getBackgroundColor(uv);\n  float d3 = sdRaindrop(uv, 4.0, vec2(-.1, 0.));\n\n  float res; // result\n  // res = min(d1, d2); // union\n  res = d3;\n\n  res = step(0., res); // Same as res > 0. ? 1. : 0.;\n\n  col = mix(vec3(1, 0, 0), col, res);\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.xy; // <0, 1>\n  uv -= 0.5; // <-0.5,0.5>\n  uv.x *= iResolution.x / iResolution.y; // fix aspect ratio\n\n  vec3 col = drawScene(uv);\n\n  fragColor = vec4(col, 1.0); // Output to screen\n}\n","name":"Image","description":"","type":"image"}]}