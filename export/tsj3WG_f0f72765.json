{"ver":"0.1","info":{"id":"tsj3WG","date":"1549926730","viewed":101,"name":"Alien Planet","username":"scratch13764","description":"I'm not really sure what this is. It's really sloppy though.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["noise","terrain","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define Epsilon 0.01\n#define Lim 150.\n#define pi 3.14159\nvec4 perlin (vec2 p)\n{\n    vec2 m = smoothstep(0., 1.,fract(p));\n    \n    vec4 a = texture(iChannel0,vec2(floor(p.x),floor(p.y))/256.);\n    vec4 b = texture(iChannel0,vec2(ceil(p.x),floor(p.y))/256.);\n    vec4 c = texture(iChannel0,vec2(floor(p.x),ceil(p.y))/256.);\n    vec4 d = texture(iChannel0,vec2(ceil(p.x),ceil(p.y))/256.);\n    \n    return mix(mix(a,b,m.x),mix(c,d,m.x), m.y)-.5;\n}\n\nmat2 rotMat (float a)\n{\n    return mat2(cos(a),-sin(a),sin(a),cos(a));\n}\n\nfloat Map(vec3 p)\n{\n    float m = 0.;\n    float f = .05;\n    float a = 50.;\n    float r = 0.1;\n    for (int i = 0; i <= 3; i++)\n    {\n        p.xy += sin(iTime-r);\n        m -= abs(perlin(p.xy*rotMat(r)*f).x)*a;\n        r += 1.25;\n        f *= 2.1;\n        a *= .4;\n    }\n    return p.z - m;\n}\n\nvec3 marchRay (vec3 ro, vec3 rs)\n{\n    float m;\n    float t = 0.;\n    vec3 p;\n    float w = 0.;\n    \n    for (int i; t <= Lim && i <= 1000; i++)\n    {\n        p = ro + rs*t;\n        m = Map(p);\n        if (m < Epsilon) break;\n        m *= .2;\n        if (w == 0.)\n        m = min(m*.5, p.z + 8.);\n        if (p.z <= -8.01)\n        {\n            w = 1.;\n            ro = p;\n            rs = refract(rs, vec3(0,0,1), .65);\n            t = 0.;\n        }\n        t += max(m, t/400.);\n    }\n    if (t <= Lim)\n    return vec3(ro + rs*t);\n}\n\nvec3 getNormal (vec3 p)\n{\n    float e = .1;\n    return normalize(vec3(\n        Map(vec3(p.x + e, p.y, p.z)) - Map(vec3(p.x - e, p.y, p.z)),\n        Map(vec3(p.x, p.y + e, p.z)) - Map(vec3(p.x, p.y - e, p.z)),\n        Map(vec3(p.x, p.y, p.z + e)) - Map(vec3(p.x, p.y, p.z - e))\n        ));\n}\n\nvec3 getCol (vec3 p)\n{\n    vec3 c = vec3(pow(dot(getNormal(p), vec3(0, 0, 1)), 2.))+.2;\n    c *= mix(texture(iChannel1, p.xy/4.),\n             texture(iChannel2, p.xy/4.),\n             perlin(p.xy/10.).a + .5).rgb;\n    if (length(p) == 0.) c = vec3(.3,.05,.05);\n    return vec3(c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.x;\n    \n    vec3 ro = vec3(0,iTime*10. + 25., 0);\n    ro.z = 10. - min(Map(ro), 7.);\n    \n    \n    vec2 cd = atan(uv) * .5;\n    cd *= rotMat(sin(iTime*.4)/2.);\n    cd *= 2. + sin(iTime*1.2);\n    \n    cd = mix(cd, atan(uv), (length(uv)+1.)/1.);\n    \n    vec3 rs = vec3(vec2(sin(cd.x), cos(cd.x))*cos(cd.y), sin(cd.y));\n    \n    vec3 rh = marchRay(ro, rs);\n    \n    vec3 col = getCol(rh);\n    if (rh.z <= -7.99) col *= vec3(.5,.5,1.);\n    col = mix(col, vec3(.3,.05,.05), pow(length(ro-rh)/Lim, 2.));\n    \n    fragColor = vec4(col,1)*.7 + texture(iChannel3, fragCoord/iResolution.xy)*.3;\n    \n    //fragColor = ceil(vec4(col,1)*1.2-.3); //don't do it!\n}","name":"Buffer A","description":"","type":"buffer"}]}