{"ver":"0.1","info":{"id":"ctlcRf","date":"1691010304","viewed":136,"name":"Haudenosaunee Flag","username":"blackle","description":"lots of flags in the browse tab today, thought I'd have some fun C:\n\n(I am not haudenosaunee)","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PIXEL_SIZE (1.5/iResolution.y)\n#define WITH_STEPPING\n\nfloat square(vec2 p, vec2 d) {\n    p = abs(p)-d;\n    return max(p.x,p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y*2.;\n    uv.x = abs(uv.x);\n    vec2 uv2 = uv;\n    uv2.y = abs(uv2.y+.18);\n#ifdef WITH_STEPPING\n    float steps = 19.6;\n    uv2.y = floor(uv2.y*steps)/steps;\n#endif\n    float tree = max(dot(uv2, normalize(vec2(2.7,1)))-.19, -uv.y-.43);\n    tree = max(tree,square(uv,vec2(.18,10.)));\n    float stem = square(uv-vec2(0,-.4), vec2(.03,.21));\n    float sqtoflag = square(uv-vec2(0,-.17), vec2(.35,.045));\n    float sq2 = abs(square(uv-vec2(.55,0), vec2(.18,.26)))-.045;\n    float sqtosq = square(uv-vec2(.9,0), vec2(.2,.045));\n    float sq1 = abs(square(uv-vec2(1.26,0), vec2(.18,.21)))-.045;\n    float sqtoedge = square(uv-vec2(1.6,0), vec2(.2,.045));\n    \n    float dist = min(min(tree,stem), min(min(sqtoflag,sq2), min(sq1,min(sqtosq,sqtoedge))));\n    float flag = smoothstep(-PIXEL_SIZE, PIXEL_SIZE, dist);\n    \n    fragColor.xyz = mix(vec3(1), vec3(0.4,0.28,0.8), flag);\n}","name":"Image","description":"","type":"image"}]}