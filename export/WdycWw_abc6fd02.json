{"ver":"0.1","info":{"id":"WdycWw","date":"1602924718","viewed":114,"name":"the sun passing by","username":"tigregalis","description":"circular gradient, centre of circle moves over time in an elliptical arc, and the centre of the arc is (0, 1)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n#define CYCLE 10.0\n\nfloat wrap(in float num, in float num_min, in float num_max )\n{\n    float range = num_max - num_min;\n    if (num < num_min) { // go backwards\n        return num + range;\n    } else if (num > num_max) {\n        return num - range;\n    } else {\n        return num;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod(iTime, CYCLE) / CYCLE;\n    \n    vec2 centre_fraction = vec2(1.0 - cos(time * PI * 2.0), sin(time * PI * 2.0));\n    vec2 centre_pixel = iResolution.xy * centre_fraction;\n    //vec2 centre_pixel = iMouse.xy;\n    // (x - cx) squared + (y - cy) squared = radius squared\n    // then depending on what r is you choose the colour\n    vec2 pixel = fragCoord.xy; //We obtain our coordinates for the current pixel\n    float max_length = min(iResolution.x, iResolution.y);\n    float radius = min(\n        sqrt(\n            pow(\n                (pixel.x - centre_pixel.x) / max_length,\n                2.0\n            ) + pow(\n                (pixel.y - centre_pixel.y) / max_length,\n                2.0\n            )\n\t\t),\n        1.0\n    ); // displacement from centre, 0 being at the centre, 1 being at the corner\n    \n    // when radius is 0, show black, when r is 1, show red\n    vec4 inner_color = vec4(0.882, 0.843, 0.416, 1.0); // \"deepest\" golden rod #e1d76a\n    vec4 outer_color = vec4(0.529, 0.808, 0.98, 1.0); // light sky blue #87cefa\n    //float delta = radius;\n    float delta = sin(radius * 0.5 * PI);\n    vec4 color = inner_color * (1.0 - delta) + outer_color * delta;\n    // next, define gradient stops as an array\n    // e.g. [0, 0.2, 0.3, 0.5, 0.7, 1.0]\n    // e.g. [red, red, green, yellow, blue, orange]\n    // 0 red\n    // 0.2 red\n    // 0.25 red-green\n    // 0.3 green\n    // 0.4 green-yellow\n    // 0.5 yellow\n    // 0.6 yellow-blue\n    // 0.7 blue\n    // 0.85 blue-orange\n    // 1.0 orange\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}