{"ver":"0.1","info":{"id":"dsGfDG","date":"1698586566","viewed":90,"name":"mandel travel","username":"altunenes","description":"Yet another attempt to reinvent the wheel... :D (but its fun :)  )","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 3\n\nconst float PI = 3.14159265;\nconst int MAX_ITER = 125;\nconst float BOUND = 25.0;\n\nvec2 implicit(vec2 c, float time) {\n    vec2 z = vec2(0.0);\n    int i;\n    for (i = 0; i < MAX_ITER; i++) {\n        vec2 sin_z = vec2(sin(z.x) * cosh(z.y), cos(z.x) * sinh(z.y));\n        z = vec2(c.x * sin_z.x - c.y * sin_z.y, c.x * sin_z.y + c.y * sin_z.x);\n        z += 0.2 * vec2(sin(0.05 * time), cos(0.05 * time));\n        if (dot(z, z) > BOUND * BOUND) break; \n    }\n    return vec2(float(i), dot(z, z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(1.0);\n    vec2 pan = vec2(0.878729, 1.504069); \n    float zl = 0.005; //please don't zoom out XD\n\n    for(int m = 0; m < AA; m++) //AA technique from iq\n    for(int n = 0; n < AA; n++)\n    {\n        vec2 uv = ((fragCoord + vec2(float(m), float(n)) / float(AA) - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x)\n        * zl + pan) * 2.033 - vec2(2.04278);\n        vec2 z_and_i = implicit(uv, iTime);\n        float iter_ratio = z_and_i.x / float(MAX_ITER);\n        //float lenSq = z_and_i.y;\n\n        vec3 col1 = 0.5 + 0.5 * cos(iTime + vec3(0.6, 0.8, 1.0) + 5.0 * PI * vec3(iter_ratio));\n        col += col1;\n     \n    }\n    col /= float(AA * AA); \n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}