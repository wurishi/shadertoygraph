{"ver":"0.1","info":{"id":"WdfcRM","date":"1584328502","viewed":2068,"name":"Tripattern","username":"jahnertz","description":"Just an exercise","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["triangle","pattern","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tri(vec2 st, float pct){\n  return 1.0 - smoothstep( pct, pct+0.05, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    vec3 color_a = vec3(uv.x * 0.2 + 0.8,0.2,0.0);\n    vec3 color_b = vec3(0.0,0.1,uv.y * 0.5 + 0.5);\n    vec3 color_c = vec3(0.6,0.5,0.0);\n    float s = 10.0;\n    uv *= s;\n    uv.x += iTime;\n    float y1 = mod(uv.x,1.0) + sin(uv.x / s + iTime * 2.0)+ sin(uv.y / s + iTime);\n    float y2 = mod(uv.x,1.0) + sin(uv.x / s + iTime + 1.0 * 2.0) + sin(uv.y / s + iTime);\n    vec3 col = color_a + vec3(tri(mod(uv,1.0), y1) * color_b + vec3(tri(mod(uv,1.0), y2)) * color_c);\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,col.r);\n}","name":"Image","description":"","type":"image"}]}