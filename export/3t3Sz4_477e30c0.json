{"ver":"0.1","info":{"id":"3t3Sz4","date":"1580444744","viewed":108,"name":"B&W Yin&Yang","username":"ParaBellum","description":"The art of code challenge 1","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","animation","theartofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define T iTime*.5\n\nfloat circle(in vec2 p, float r)\n{\n    return length(p)-r;\n}\n\nmat2 rot(float a)\n{\n    return mat2(cos(a), sin(a), -sin(a), cos(a)); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv *= 5.;\n    vec3 col = vec3(0.);\n    \n    // Magic animation function\n    float a = min(1., floor(mod(T, 5.)));\n    float b = mod(T-1., 5.);\n    float c = mod(-T, 5.);\n    float t = min(a, min(b, c));\n    if (t >= 1.)\n    {\n        float m = mod(floor(T-2.), 5.)+fract(T-2.);\n        m *= PI;\n        uv *= rot(m);\n    }\n    \n    // Circles\n    float x = step(0., uv.x);\n    float y = step(0., uv.y);\n    float c1 = circle(abs(uv)-vec2(0., t*2.), 1.);\n    c1 = smoothstep(.99, 1.02, c1);\n    c1 = mix(c1, 1.-c1, x);\n    c1 = mix(c1, 1.-y, 1.-abs(y-x));\n    \n    float c2 = circle(abs(uv)-vec2(0., t*2.), .0);\n    c2 = smoothstep(.66, .7, c2);\n    c2 = mix(c2, 1.-c2, y);\n    \n    float c3 = mix(min(c1, c2), max(c1, c2), y);\n    \n    float c4 = circle(uv, 3.);\n    c4 = smoothstep(.99, 1.02, c4);\n    \n    float c5 = abs(circle(uv, 4.25));\n    c5 = smoothstep(.275, .3, c5);\n    \n    // Up & Down animation\n    float anim = min(step(-4.*t, uv.y),step(-4.*t, -uv.y));\n    \n    float r = min(c5, max(c4, anim*c3));\n    \n    col += r;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}