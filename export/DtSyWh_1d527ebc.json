{"ver":"0.1","info":{"id":"DtSyWh","date":"1691685826","viewed":55,"name":"Blood","username":"GBA","description":"Raymarching 3d simplex noise field.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","blood"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat plot(float x, float c, float k) {\n    return smoothstep(c-k, c, x) - smoothstep(c, c+k, x);\n\n}\n\nvec3 path(float z) {\n    return vec3(0.0, sin(z), z);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 rd = normalize(vec3(2.0 * uv - 1.0, 1.0));\n    vec3 ro = path(iTime);\n    float d;\n    vec3 p;\n    const float MAX = 500.;\n    for(float t = 0.; t <MAX; t += 1.) {\n        p = ro + 0.01 * t * rd;\n        vec3 q = p + vec3(0.0, 0.0, iTime);\n        float f = simplex3d(q + fbm(q));\n        d += 1.0 *  0.1 * plot(f, 0.4, 0.05);\n        if(length(p.xy - path(p.z).xy) >= 1.) {\n            break;\n        }\n        \n    }\n    \n    float dz = (ro.z - p.z);\n    float h = exp(-dz * dz * 0.35);\n    vec3 n = vec3(normalize(p.xy - ro.xy), 0.0);\n    float ep = 4.; \n    float l = ep * mod(fbm(10. * p), 1.0/ep);\n    l = plot(l, 0.9, 0.05);\n    vec3 c = 0.25 * mix(vec3(1., 0.0, 0.0), vec3(0.588, 0.294, 0.0), l) * max(0.0, dot(n, rd));;\n    vec3 col = (1.0 - d) * c + d * vec3(1.0, 0.0, 0.0);\n    col = mix(vec3(1.0, 0.0, 0.0), col, h);\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 random3(vec3 c) {\n\tfloat j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n\tvec3 r;\n\tr.z = fract(512.0*j);\n\tj *= .125;\n\tr.x = fract(512.0*j);\n\tj *= .125;\n\tr.y = fract(512.0*j);\n\treturn r-0.5;\n}\n\nconst float F3 =  0.3333333;\nconst float G3 =  0.1666667;\n\nfloat simplex3d(vec3 p) {\n\n\t vec3 s = floor(p + dot(p, vec3(F3)));\n\t vec3 x = p - s + dot(s, vec3(G3));\n\n\t vec3 e = step(vec3(0.0), x - x.yzx);\n\t vec3 i1 = e*(1.0 - e.zxy);\n\t vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\t \t\n\t vec3 x1 = x - i1 + G3;\n\t vec3 x2 = x - i2 + 2.0*G3;\n\t vec3 x3 = x - 1.0 + 3.0*G3;\n\t \n\t vec4 w, d;\n\t \n\t w.x = dot(x, x);\n\t w.y = dot(x1, x1);\n\t w.z = dot(x2, x2);\n\t w.w = dot(x3, x3);\n\t \n\t w = max(0.6 - w, 0.0);\n\t \n\t d.x = dot(random3(s), x);\n\t d.y = dot(random3(s + i1), x1);\n\t d.z = dot(random3(s + i2), x2);\n\t d.w = dot(random3(s + 1.0), x3);\n\t \n\t w *= w;\n\t w *= w;\n\t d *= w;\n\t \n\t return dot(d, vec4(52.0));\n}\n    \nfloat fbm(vec3 p) {\n    float s = .5;\n    float f = 0.;\n    mat3 r = 2. * mat3(-0.37f, 0.36f, 0.85f, -0.14f, -0.93f, 0.34, 0.92f, 0.01f, 0.4f);\n\n    for(int i = 0; i < 2; i++) {\n        f += s * simplex3d(p);\n        p *= r;\n        s *= .5;\n    }\n    return f;\n}    \n","name":"Common","description":"","type":"common"}]}