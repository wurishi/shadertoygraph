{"ver":"0.1","info":{"id":"llcGW8","date":"1468976171","viewed":106,"name":"Fractal-stuff","username":"Milk","description":"fractal stuff","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float maxSteps = 2000.0;\n\nvec2 complexSquare( vec2 v ) {\n\treturn vec2(\n\t\tv.x * v.x - v.y * v.y,\n\t\tv.x * v.y * 2.0\n\t);\n}\n\nfloat calc(vec2 z, vec2 c) {\n    for(float i = 0.0; i < maxSteps; i++){\n    \tz = complexSquare(z) + c;\n        if (dot(z,z) > 40.0) {\n            return i;\n            break;\n        }\n    }\n    return 0.0;\n}\n\n\n\nfloat saturation(vec4 color) {\n    float Radj = color.r/255.0;\n    float Gadj = color.g/255.0;\n    float Badj = color.b/255.0;\n    \n    float PCmax = max(Radj, Gadj);\n    float Cmax = max(PCmax, Badj);\n    \n    float PCmin = min(Radj, Gadj);\n    float Cmin = min(PCmax, Badj);\n    \n    float saturation;\n    \n    if (Cmax == 0.0) {\n        saturation = 0.0;\n    } else {\n    \tsaturation = (Cmax-Cmin)/Cmax;\n    }\n    return saturation;\n}\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float vertres = iResolution.y;\n\tvec2 coord = fragCoord.xy / iResolution.xy;\n    float xPre = coord.x+(iTime/10.0);\n    vec2 driftCoord = vec2(coord.x, (.01*sin(20.0 * xPre))+coord.y);\n    vec4 texColor = texture(iChannel0,driftCoord);\n    if (texColor.r > 0.5) {\n\t\ttexColor.r += 0.05 * (0.5 - texColor.r);\n    }\n    if (texColor.g > 0.5) {\n\t\ttexColor.g += 0.05 * (0.5 - texColor.g);\n    }\n    if (texColor.b > 0.5) {\n\t\ttexColor.b += 0.05 * (0.5 - texColor.b);\n    }\n    if (texColor.r < 0.5) {\n\t\ttexColor.r -= 0.05 * (0.5 - texColor.r);\n    }\n    if (texColor.g < 0.5) {\n\t\ttexColor.g -= 0.05;\n    }\n    if (texColor.b < 0.5) {\n\t\ttexColor.b -= 0.05;\n    }\n\t\n    vec4 outColor = texColor;\n    \n    if (saturation(texColor) < 0.05) {\n\t\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\t\tuv *= 2.5 / min( iResolution.x, iResolution.y );\n        \n        float pi = 3.1415;\n        \n    \tvec2 driftUV = vec2(uv.x, (.1*sin(20.0 * xPre))+uv.y);\n        vec2 driftUV2 = vec2(uv.x, (.1*sin((20.0 * xPre) + pi/4.0))+uv.y);\n        vec2 driftUV3 = vec2(uv.x, (.1*sin((20.0 * xPre) + 2.0*pi/4.0))+uv.y);\n        \n    \tvec2 texCoord = vec2(iTime/60.0,(iTime/60.0)/iResolution.x);\n   \t\tvec4 texColor = texture(iChannel1,texCoord);\n    \n   \t\tvec2 c = vec2(saturation(texColor), sin(uv.x)/3.0);\n\t\tvec4 fracColor = vec4(calc(driftUV,c)*.05,calc(driftUV2,c)*.05,calc(driftUV3,c)*.05,1);\n        outColor = fracColor * texColor;\n    }\n\n\tfragColor = outColor;\n}\n","name":"Image","description":"","type":"image"}]}