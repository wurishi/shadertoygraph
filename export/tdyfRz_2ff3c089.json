{"ver":"0.1","info":{"id":"tdyfRz","date":"1606700802","viewed":72,"name":"_Making a rectangle_","username":"Paulo_Silva","description":"Making a rectangle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rect (vec2 uv, vec2 p, vec2 size, float angle, float blur) {\n \n    mat2 rot = mat2(vec2(cos(angle), sin(angle)), vec2(-sin(angle), cos(angle)));\n    \n    uv -= p;\n    uv *= rot;\n    \n    float band1 = smoothstep(-size.x, -size.x + blur, uv.x);\n    float band2 = smoothstep(size.x, size.x - blur, uv.x);\n    \n    float band3 = smoothstep(-size.y, -size.y + blur, uv.y);\n    float band4 = smoothstep(size.y, size.y - blur, uv.y);\n    \n    return band1 * band2 * band3 * band4;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 2.0;\n    uv -= 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float angle = iTime * 1.0;\n    mat2 rot = mat2(vec2(cos(angle), sin(angle)), vec2(-sin(angle), cos(angle)));\n    \n    \n    float rect = rect(uv, vec2(0.0, 0.0), vec2(0.4, 0.5), iTime, 0.01);\n\n    vec3 col = vec3(0.3, 0.5, 1.0) * rect;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}