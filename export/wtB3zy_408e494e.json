{"ver":"0.1","info":{"id":"wtB3zy","date":"1559997442","viewed":1224,"name":"3D noise from 2D noise texture","username":"okdalto","description":"3D noise from 2D noise texture","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d","texture","3dtexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise3d( in vec3 x, float div)\n{\n    float sqDiv = div * div;\n    float oneDiv = 1.0 / div;\n    float onesqDiv = 1.0 / sqDiv;\n    float xDiv = floor((x.z * sqDiv) * oneDiv * div);\n    float yDiv = floor((x.z * sqDiv) * oneDiv);\n    vec2 uv = x.xy * oneDiv;\n    vec2 uv1 = vec2(uv.x + oneDiv * xDiv, uv.y + oneDiv * yDiv);\n    xDiv = floor(((x.z + onesqDiv) * sqDiv) * oneDiv * div);\n    yDiv = floor(((x.z + onesqDiv) * sqDiv) * oneDiv);\n    vec2 newUV = vec2(uv.x + oneDiv * xDiv, uv.y + oneDiv * yDiv);\n    return mix(texture(iChannel0, uv1).x, texture(iChannel0, newUV).x, mod(x.z * sqDiv, 1.0) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(noise3d(vec3(uv, iTime * 0.1), 3.0));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}