{"ver":"0.1","info":{"id":"XlBcDd","date":"1510537051","viewed":361,"name":"rainbow ripples","username":"colinterface","description":"this is my first shader, it sets the hue based on distance from the mouse. \n\ni got the hsv to rgb conversion code from here: \nhttps://github.com/hughsk/glsl-hsv2rgb/blob/master/index.glsl","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","pulse","mouse","rainbow","hsv","concentric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float range = 2.0;\n    float speed = 2.0;\n    float xOffset = sin(iTime * speed) * range;\n    float yOffset = cos(iTime * speed) * range;\n    vec2 center = iMouse.xy;\n    center.x += xOffset;\n    center.y += yOffset;\n    float hue = (distance(center, fragCoord.xy) / (yOffset + 70.0)) - iTime / 2.0;\n    float saturation = 1.0;\n    float value = 1.0;\n    vec3 c = vec3(hue, saturation, value);\n \tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n \tvec3 rgb = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n\n   \tfragColor.rgb = rgb;\n}","name":"Image","description":"","type":"image"}]}