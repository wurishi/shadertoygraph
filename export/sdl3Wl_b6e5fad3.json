{"ver":"0.1","info":{"id":"sdl3Wl","date":"1616763349","viewed":127,"name":"Breaking Blocks","username":"midorikuma","description":"first post","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["minecraft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define white vec3(1.0)\n#define black vec3(0.0)\nconst vec3 grass = vec3(0.0, 0.8, 0.0);\nconst vec3 dirt = vec3(1.0, 0.5, 0.0);\nconst float rad = radians(360.0)/6.0;\nfloat time;\nfloat angle;\n\nvoid times(out float time,out float angle)\n{\n    time = mod(iTime*2.0,8.0);\n    float count = floor(iTime/4.0);\n    float rad = radians(360.0)/1.0;\n    angle = mod(count,rad);\n}\n\nvoid strain(inout vec3 i,inout vec2 q,float num,inout float angle,inout float r,float bold){\n    float s = sin(-angle);\n    float c = cos(-angle);\n    q = q-vec2(c,s)*r*(1.0-bold);\n    angle = angle+rad*num;\n    s = sin(angle);\n    c = cos(angle);\n    vec2 qr = q * mat2(c, -s, s, c);\n    r = bold*4.0+bold*num;\n    if (qr.y<bold&&qr.y>-bold&&qr.x>0.0&&qr.x<r){\n    i = black;\n    }\n}\n\nvoid strain3(inout vec3 i,vec2 q,float time,float num,float angle,float r){\n    float bold = 0.03;\n    strain   (i,q,num,angle,r,bold);\n}\nvoid strain2(inout vec3 i,vec2 q,float time,float num,float angle,float r){\n    float bold = 0.04;\n    strain   (i,q,num,angle,r,bold);\n    if (time>4.0){\n    strain3   (i,q,time,0.8,angle,r);\n    strain3   (i,q,time,5.2,angle,r);\n    }\n}\nvoid strain1(inout vec3 i,vec2 q,float time,float num,float angle,float r){\n    float bold = 0.05;\n    strain   (i,q,num,angle,r,bold);\n    if (time>3.0){\n    strain2   (i,q,time,1.3,angle,r);\n    strain2   (i,q,time,5.3,angle,r);\n    }\n}\n\nvoid gradation(vec2 p,inout vec3 i)\n{\n    i=i-vec3(1.0+p.x-p.y,1.0+p.x,0.0)*0.05;\n}\nvoid surface(vec2 p, vec2 offset, bool side, float rad, inout vec3 i){\n    float s = sin(radians(rad));\n    float c = cos(radians(rad));\n    mat2 rot = mat2(c, -s, s, -c) * mat2(-c, s, -s, -c);\n    times(time,angle);\n    if(side==false){\n        rot = mat2(c/1.5, -s*2.0, s/1.5, c*2.0);\n    }\n    if (time<1.0){\n        p.y=p.y-(1.0-time)*time*1.0;\n    }\n    vec2 q = p / 0.3 *  rot - offset*0.999;\n    if (time<5.0){\n    if(abs(q.x) < 1.0 && abs(q.y) < 1.0){\n        i = grass;\n    if(side==true && q.y < 0.5){\n        i = dirt;\n    }\n        gradation (q,i);\n    }\n    if (time>2.0){\n    float r = 0.0;\n    strain1   (i,q,time,0.0,angle,r);\n    strain1   (i,q,time,2.0,angle,r);\n    strain1   (i,q,time,4.0,angle,r);\n    }\n    }\n}\n\n\nvoid particle(vec2 p,float time0,inout vec3 i)\n{\n    times(time,angle);\n    if (time>time0) {\n    for (float n=0.0;n<time0*time0;++n)\n{\n    float nradx =sin(1.0*n*n/time0+angle)*4.0;\n    float nrady =sin(0.5*n+time0)*2.0-1.0;\n    float x = (time-time0)*1.0;\n    float y = x-0.25;\n    if (nradx>0.0){\n        x=-x;\n    }\n    vec2 q = (p - vec2( x*3.0/time0, -y*y*4.0)) / 0.1+vec2(nradx,nrady);\n    if(abs(q.x) < 0.6 && abs(q.y) < 0.6){\n    i = dirt*0.6+n*0.01;\n    }\n    }\n}\n}\nvoid particles(vec2 p,inout vec3 i)\n{\n    particle  (p,2.0,i);\n    particle  (p,3.0,i);\n    particle  (p,4.0,i);\n    particle  (p,5.0,i);\n}\nvoid background(vec2 p,inout vec3 i)\n{\n    i=vec3(p.y*0.3,1.0+p.y*0.6,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec3 destColor = black;\n    vec2 p = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    background  (p,destColor);\n    surface   (p, vec2( 1.0, -1.0), true, -10.0, destColor);\n    surface   (p, vec2( -1.0, -1.0), true, 10.0, destColor);\n    surface   (p, vec2( 1.0, 1.0), false, -45.0, destColor);\n    particles  (p,destColor);\n    fragColor = vec4(destColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}