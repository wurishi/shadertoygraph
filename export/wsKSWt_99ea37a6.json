{"ver":"0.1","info":{"id":"wsKSWt","date":"1575364869","viewed":199,"name":"2d doodle","username":"julianlumia","description":":)","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float funcr( vec2 p, float t)\n{  \n    float func = length(p)*sin(iTime*t);\n    return func;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    p *= 2.;\n    float circleDiv = .2; \n    \n    float tau = 3.1415926535*circleDiv;\n  //  float a = atan(p.y*atan(p.y),p.x*atan(p.x));\n    float a = atan(p.y,p.x);\n    //float r = length(p)*tan(iTime*0.5);\n     vec2 uv;\n    //float r3 = length(p)*tan(iTime*0.3);\n    float r;\n    float t3 = 0.;\n     vec3 horColour;\n    float circlesize;\n   float xCol; \n    for (int i=0; i<2; i++)\n    {\n\tt3 += 0.5;\n    r += funcr(p,t3);\n    uv += vec2(a/tau,r); \n    xCol *= (uv.x - (iTime / 2.0)) * 1.0;\n    \n\txCol = mod(xCol, 1.0) ;\n    horColour = vec3(i, .2, .3);\t\n    circlesize = 1.0 + t3;\n\tuv /= (2.0 * uv) - 1.0;\n    uv *= (4.0 * uv.y) - 1.0;\n    //uv += (4.0 * uv.xy) - 1.0;\n    \n    }\n\n\tvec3 horBeam = vec3(0.1*cos(uv.y*2.0 ));\n    horBeam *= clamp(floor( circlesize*sin(iTime*2.)),2.0, 10.0);\n    horBeam *= abs(10.0 / (40.0 * uv.y));    \n\t\n    if (xCol < .5) {\n\t\thorColour.r *= sin(iTime) - xCol;\n        horColour.g *= cos(iTime)  - xCol ;\n\t\thorColour.b += xCol;\n\t}\n \n    uv = p;\n    float r2 = max( 0.,  sin(iTime)+4. - length(uv) );\n    float t = (iTime+2.)+5.;\n    \n    t += r2 * r2 *cos(r2+t )+a * 10.;    \n   \n    \n    uv *= mat2( cos(t), sin(t), cos(t), cos(t) );\n    //vec3 col = 0.5 + 0.2 *sin(iTime+uv.yxy);\n    vec3 col = 0.5 + cos(uv.y *(cos(iTime)*0.5+0.5) +iTime) *sin(iTime+uv.yxy);\n    col *=0.5;\n   \n    vec3 horBeam2 = horBeam;    \n    horBeam *= smoothstep(0.,1., vec3(uv.yx,horBeam.z));\n    horBeam2 += smoothstep(0.,.1, vec3(uv.xx,horBeam.z));\n    horBeam = mix(horBeam,horBeam2,0.5);\n    \n    fragColor = vec4((( horBeam) * horColour +col), 1.0);\n}","name":"Image","description":"","type":"image"}]}