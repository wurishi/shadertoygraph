{"ver":"0.1","info":{"id":"XslfR8","date":"1494925591","viewed":221,"name":"PieChart","username":"glequeux","description":"PieChart\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["bto"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\t***\tUniform data\nfloat innerRadius = 100.0;\nfloat outerRadius = 130.0;\nfloat step1 = 0.2;\nfloat step2 = 0.33;\nfloat step3 = 0.8;\nvec3 color1 = vec3(255.0/255.0,202.0/255.0,234.0/255.0);\nvec3 color2 = vec3(158.0/255.0,115.0/255.0,61.0/255.0);\nvec3 color3 = vec3(0.0/255.0,0.0/255.0,0.0/255.0);\nvec3 color4 = vec3(227.0/255.0,103.0/255.0,42.0/255.0);\nvec3 backgroundColor = vec3(1.0,1.0,1.0);\n\n// *** const\nfloat PI = 3.14159265358979;\n\n//\t***\tUtilities\nfloat rampFactor(float value,float transitionValue, float size){\n    return clamp((value - transitionValue + 0.5*size)/size,0.0,1.0);\n}\n\n//\t*** Color with AA\nvec3 GetPieColor(float value, float radius){\n    float aaSize = 1.0/(radius*PI*2.0);\n    \n    if(value<step1+aaSize*0.5)\n    {\n        return mix(color1,color2,rampFactor(value,step1,aaSize));\n    }  \n    if(value<step2+aaSize*0.5)\n    {\n        return mix(color2,color3,rampFactor(value,step2,aaSize));\n    }  \n    if(value<step3+aaSize*0.5)\n    {\n        return mix(color3,color4,rampFactor(value,step3,aaSize));\n    } \n    return color4;\n}\n\n// Pie circle with alpha\nvec4 PieChart(vec2 coord){    \n    float radius = length(coord);\n    float aaSize = 1.0;\n    \n    //\t***\tGet alpha with AA\n    float r0 = innerRadius-aaSize;\n    float r1 = outerRadius+aaSize;\n    float ratio = clamp((radius-r0)/(innerRadius-r0),0.0,1.0)\n                  -clamp((radius-outerRadius)/(r1-outerRadius),0.0,1.0);\n\n    //\t***\tGet angle\n    float angle = atan(coord.y,coord.x);\n    float value = mod((-angle+0.5*PI),2.0*PI)/(2.0*PI);\n    \n    // *** Compute color\n    vec3 color = GetPieColor(value,radius);\n    return vec4(color,ratio);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //\t***\tGet 2D coordinates\n    vec2 coord = fragCoord.xy - iResolution.xy*0.5;\n    vec4 pieColor = PieChart(coord);\n    \n    // *** Simulate alpha blending\n    vec3 color = mix(backgroundColor,pieColor.rgb,pieColor.a);\n\tfragColor = vec4(color,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}