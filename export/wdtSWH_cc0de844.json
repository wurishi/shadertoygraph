{"ver":"0.1","info":{"id":"wdtSWH","date":"1571923714","viewed":230,"name":"Atan Spirals 2","username":"bitless","description":"Thanks Patricio Gonzalez Vivo & Jen Lowe for \"The Book of Shaders\" and inspiration ","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","atan","spirals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: bitless\n// Title: Colormixing Metaballs\n// Thanks Patricio Gonzalez Vivo & Jen Lowe for \"The Book of Shaders\" and inspiration \n\n#define PI 3.1415926\n\nfloat rand (vec2 st) {\n    float f = fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n    return max(f,0.2);\n}\n\n// translate color from HSB space to RGB space\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvec3 random_color (vec2 p){\n    return hsb2rgb(vec3(rand(p),.5,0.8));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st -= 0.5;\n    if (iResolution.y > iResolution.x ) \n        st.y *= iResolution.y/iResolution.x;\n    else \n        st.x *= iResolution.x/iResolution.y;\n    \n    st *= 5.;\n\n    float f;\n    vec3 clr = vec3(0);\n    \n    for (float i=1.;i<6.;i++)    {  //draw rings\n        vec2 v = st + vec2(cos(iTime*4.0),sin(iTime*4.0))*0.15*(sign(mod(i,2.)-0.5)); //shift ring center\n        float a = fract((atan(v.y,v.x)+(iTime*0.5+length(v)/i*0.75)*(sign(mod(i,2.)-0.5)))/PI*6.*i); //calc stripes angle\n\t    float f = smoothstep(0.3,0.4,a)*(1.0-smoothstep(0.6,0.7,a)); //stripes\n\t\tf*= step(0.2,length(v));\n        float alpha = (1.0-(smoothstep(i-0.05,i,length(v))))*(smoothstep(i-1.0,i-0.95,length(v))); //ring alpha mask\n\t    vec3 col = random_color(vec2(floor(length(v)+floor(iTime*0.25))))*(1.0-f); //ring color\n        clr = mix (clr,col,alpha);\n        clr *= 1.0-(smoothstep(i-1.1,i-1.0,length(v+vec2(-0.075,0.075)))-smoothstep(i-1.05,i-0.85,length(v)))*0.5; //add ring shadow\n    }\n\n    fragColor = vec4(clr,1.);\n\n}","name":"Image","description":"","type":"image"}]}