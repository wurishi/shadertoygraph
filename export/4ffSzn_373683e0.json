{"ver":"0.1","info":{"id":"4ffSzn","date":"1704828954","viewed":73,"name":"Gooch Shading Experiment","username":"Floris0106","description":"Gooch shading, ish.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shading","gooch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphIntersect( in vec3 ro, in vec3 rd, in vec4 sph )\n{\n\tvec3 oc = ro - sph.xyz;\n\tfloat b = dot( oc, rd );\n\tfloat c = dot( oc, oc ) - sph.w*sph.w;\n\tfloat h = b*b - c;\n\tif( h<0.0 ) return -1.0;\n\treturn -b - sqrt( h );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    if (iResolution.x > iResolution.y)\n        uv.x *= iResolution.x / iResolution.y;\n    else\n        uv.y *= iResolution.y / iResolution.x;\n    \n    vec3 ro = vec3(0.0, 0.0, -3.0);\n    vec3 rd = normalize(vec3(uv * tan(radians(90.0) * 0.5), 1.0));\n    \n    float t = sphIntersect(ro, rd, vec4(vec3(0.0), 1.0));\n    if (t < 0.0)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    \n    vec3 n = ro + rd * t;\n    vec3 l = normalize(vec3(sin(iTime) * 2.0, 1.0, cos(iTime) * 2.0));\n    fragColor = vec4(mix(vec3(0.15, 0.17, 0.23), vec3(0.82, 0.78, 0.75), smoothstep(-1.0, 1.0, dot(n, l))), 1.0);\n}","name":"Image","description":"","type":"image"}]}