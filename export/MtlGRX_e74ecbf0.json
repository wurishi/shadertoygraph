{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float time;\nfloat margin = .03;\nfloat mHalf;\nfloat mTop;\nfloat mBot;\n\nfloat atRes(float val) {\n\treturn val;//floor(val*res)/res;\n}\n\nvec3 getPixel(float x, float y){\n    float ss = mHalf; // Sample size\n\treturn (\n        \t// Center\n        \ttexture(iChannel0, vec2(x,\ty)).xyz +\n\n        \t// Sides\n        \ttexture(iChannel0, vec2(x,\ty-ss)).xyz +\n        \ttexture(iChannel0, vec2(x+ss,\ty)\t).xyz +\n        \ttexture(iChannel0, vec2(x,\ty+ss)).xyz +\n        \ttexture(iChannel0, vec2(x-ss,\ty)\t).xyz\n\n        \t// Diagonals\n        \t//texture(iChannel0, vec2(x+ss,y-ss)).xyz +\n            //texture(iChannel0, vec2(x+ss,y+ss)).xyz +\n        \t//texture(iChannel0, vec2(x-ss,y+ss)).xyz +\n        \t//texture(iChannel0, vec2(x-ss,y-ss)).xyz\n           )/5.;\t// Since 3 of them will be black -- Outside bounds --.\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n time = iTime;\n\n mHalf = margin * .5;\n mTop = 1. - margin;\n mBot = margin;\n\n    vec2 cord = fragCoord.xy;\n    cord -=iResolution.xy/2.;\n\tvec2 uv = cord / iResolution.xy * (iResolution.x/iResolution.y);\n    vec3 rgb = vec3(0.,0.,0.);\n\n    if(abs(uv.x) > .5 && abs(uv.y) > .5)\n        rgb = getPixel(uv.x < 0. ? mBot : mTop,uv.y < 0. ? mBot : mTop);\n    else if(uv.x < -.5)\n        rgb = getPixel(mBot,atRes(uv.y+.5));\n    else if(uv.x > .5)\n    \trgb = getPixel(mTop,atRes(uv.y+.5)).xyz;\n    else if (uv.y < -.5)\n    \trgb = getPixel(atRes(uv.x+.5),mBot).xyz;\n    else if (uv.y > .5)\n        rgb = getPixel(atRes(uv.x+.5), mTop).xyz;\n    else if( abs(uv.x) < .47 && abs(uv.y) < .46)\n\t\trgb = texture(iChannel0, vec2(uv.x+.5, uv.y+.5) ).xyz;\n\n    rgb -= abs(uv.x) > .5 || abs(uv.y) > .5 ? pow(pow(abs(uv.y),5.)+pow(abs(uv.x),5.),2.)*50.\n        : 0.;\n    \n\tfragColor = vec4(rgb,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MtlGRX","date":"1425588691","viewed":242,"name":"Ambilight","username":"Tharich","description":"An ambilight is shader. Just for the sake of it.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["imageeffect","ambilight"],"hasliked":0,"parentid":"","parentname":""}}