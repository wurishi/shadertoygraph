{"ver":"0.1","info":{"id":"NtsBWj","date":"1651554600","viewed":132,"name":"rotating grid •##{~n{@#~","username":"HaleyHalcyon","description":"a","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI (3.141592653589)\n\nvec2 rotate(vec2 uv, float theta) {\n    return vec2(\n        uv.x * cos(theta) - uv.y * sin(theta),\n        uv.y * cos(theta) + uv.x * sin(theta)\n    );\n}\n\nvec2 rotEffect(vec2 uv, float t) {\n    float scale = exp2(-t * 0.5);\n    return rotate(\n        floor(\n            rotate(\n                uv * scale, t * PI / 4.\n            )\n        ) + 0.5,\n        -t * PI / 4.\n    ) / scale;\n}\n\nfloat zigzag(float x) {\n    return 1. - abs(1. - fract(x) * 2.);\n}\n\nfloat spiral(vec2 uv, float t) {\n    vec2 rt = vec2(log(0.2 + length(uv)), atan(uv.y, uv.x) / PI / 2.);\n    return smoothstep(\n        0.0, 1.0,\n        zigzag(\n            1.3 * rt.x\n            - 3. * rt.y\n            + 2. * t\n        )\n    );\n}\n\n#define LAYERS 4.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime / 4.);\n\n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = 16.00;\n    vec2 uv = (2. * fragCoord - iResolution.xy) / length(iResolution.xy);\n    uv *= 1. + 0.02 * sin(3. * t * PI * 2.);\n    float z = 0.;\n    \n    for (float i = 0.; i < LAYERS; i++) {\n        float ti = t + i;\n        vec2 uv0 = rotEffect(uv * scale, ti);\n        z += spiral(\n            uv0 / scale, t\n        ) * min(min(ti, LAYERS - ti), 1.) / (LAYERS - 1.);\n    }\n    vec3 col = mix(\n       vec3(0.8, 0.2, 0.6),\n       vec3(1.0, 0.5, 0.7),\n       z * 2.\n    );\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}