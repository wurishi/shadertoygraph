{"ver":"0.1","info":{"id":"msGSWV","date":"1681603698","viewed":55,"name":"Mandelbrot (basic)","username":"rsnara","description":"Basic Mandelbrot set","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 complex_mult(vec2 a, vec2 b) {\n  float real = a.x * b.x - a.y * b.y;\n  float imaginary = a.x * b.y + a.y * b.x;\n  return vec2(real, imaginary);\n}\n\n\nfloat diverges(vec2 c) {\n  vec2 z = vec2(0, 0);\n  float upperBound = 100.0;\n  int maxTries = 75;\n  \n  for (int i = 0; i < maxTries; i += 1) {\n    z = complex_mult(z, z) + c;\n    \n    if (length(z) > upperBound) {\n      return (float(i) - log2(log(length(z))))/ float(maxTries);\n    }\n  }\n  \n  return 1.0;\n}\n\nvec2 transformCoord(vec2 coord) {\n    vec2 coord2 = coord.xy - vec2(0.75, 0.5) * iResolution.xy;\n    vec2 scale = 2.0 / iResolution.yy;\n    return coord2 * scale;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 z = transformCoord(fragCoord);\n    \n    if (iMouse.z > 0.0) {\n        vec2 m = transformCoord(iMouse.xy);\n        z = (z - m);\n    }\n    \n    z = z / (iTime / 60.0 + 1.0);\n    \n    float x = diverges(z);\n\n    // Time varying pixel color\n    vec3 col = 1.0 - vec3(x, x * 0.75, x * 0.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}