{"ver":"0.1","info":{"id":"Wly3Ww","date":"1579034075","viewed":123,"name":"Undertale - Waterfall","username":"rmccampbell7","description":"Undertale \"Waterfall\" sound shader (music by Toby Fox)","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["sound","undertale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float[256] heart = float[256](\n    0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.,\n    0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.,\n    1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1.,\n    1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1.,\n    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n    1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n    0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,\n    0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,\n    0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,\n    0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,\n    0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,\n    0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    ivec2 pix = ivec2(floor(vec2(1,-1)*(fragCoord-iResolution.xy/2.)/10.)) + 8;\n    if (min(pix.x, pix.y) >= 0 && max(pix.x, pix.y) < 16) {\n        col *= heart[pix.x+pix.y*16];\n    } else {\n        col = vec3(0);\n    }\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float tau = 6.2831855;\nconst float bps = 5.0;\nconst float dt = 1.0/bps;\nconst float vol = .1;\n\nint[] music = int[] (64, 00, 71, 00, 78, 00, 74, 00, 76, 00, 71, 00, 67, 00, 71, 00,\n                     64, 00, 71, 00, 78, 00, 79, 00, 81, 00, 79, 00, 78, 00, 74, 00,\n                     64, 00, 71, 00, 78, 00, 74, 00, 76, 00, 71, 00, 67, 00, 71, 00,\n                     64, 00, 71, 00, 78, 00, 79, 00, 81, 00, 79, 00, 78, 00, 74, 00,\n                     64, 00, 71, 00, 78, 00, 74, 00, 76, 00, 71, 00, 67, 00, 71, 00,\n                     64, 00, 71, 00, 78, 00, 79, 00, 81, 00, 79, 00, 78, 00, 74, 00,\n                     64, 00, 71, 00, 78, 00, 74, 00, 76, 00, 71, 00, 67, 00, 71, 00,\n                     64, 00, 71, 00, 78, 00, 79, 00, 81, 00, 79, 00, 78, 00, 74, 00,\n                     59, 00, 00, 00, 64, 00, 00, 00, 67, 00, 00, 00, 64, 00, 00, 00,\n                     66, 00, 67, 00, 69, 00, 66, 00, 67, 00, 00, 00, 00, 00, 66, 00,\n                     00, 00, 64, 62, 60, 00, 00, 00, 66, 00, 67, 00, 69, 00, 71, 00,\n                     67, 00, 00, 00, 66, 00, 00, 00, 59, 00, 00, 00, 64, 00, 00, 00,\n                     62, 00, 00, 00, 60, 00, 00, 00, 62, 00, 60, 00, 59, 00, 57, 00,\n                     00, 00, 64, 00, 59, 00, 00, 00, 00, 00, 54, 00, 57, 00, 60, 00,\n                     59, 00, 00, 00, 64, 00, 00, 00, 67, 00, 00, 00, 64, 00, 00, 00,\n                     66, 00, 67, 00, 69, 00, 66, 00, 67, 00, 00, 00, 00, 00, 66, 00,\n                     00, 00, 64, 62, 60, 00, 00, 00, 66, 00, 67, 00, 69, 00, 71, 00,\n                     67, 00, 00, 00, 66, 00, 00, 00, 59, 00, 00, 00, 64, 00, 00, 00,\n                     62, 00, 00, 00, 60, 00, 00, 00, 62, 00, 60, 00, 59, 00, 57, 00,\n                     00, 00, 64, 00, 59, 00, 00, 00, 00, 00, 78, 00, 79, 00, 78, 00,\n                     81, 00, 00, 00, 81, 00, 00, 00, 00, 00, 81, 00, 78, 00, 00, 00,\n                     78, 00, 79, 00, 78, 00, 79, 00, 78, 00, 00, 00, 00, 00, 81, 00,\n                     00, 00, 00, 00, 76, 00, 00, 00, 00, 00, 78, 00, 79, 00, 78, 00,\n                     81, 00, 00, 00, 81, 00, 00, 00, 00, 00, 81, 00, 78, 00, 00, 00,\n                     78, 00, 79, 00, 78, 00, 79, 00, 78, 00, 00, 00, 00, 00, 81, 00,\n                     00, 00, 00, 00, 76, 00, 00, 00, 00, 00, 78, 00, 79, 00, 78, 00,\n                     81, 00, 00, 00, 81, 00, 00, 00, 00, 00, 81, 00, 78, 00, 00, 00,\n                     78, 00, 79, 00, 78, 00, 79, 00, 78, 00, 00, 00, 00, 00, 81, 00,\n                     00, 00, 00, 00, 76, 00, 00, 00, 00, 00, 78, 00, 79, 00, 78, 00,\n                     81, 00, 00, 00, 81, 00, 00, 00, 00, 00, 81, 00, 78, 00, 00, 00,\n                     78, 00, 79, 00, 78, 00, 79, 00, 78, 00, 00, 00, 00, 00, 81, 00,\n                     00, 00, 00, 00, 76, 00, 00, 00, 00, 00, 00, 00, 77, 00, 79, 00,\n                     81, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,\n                     72, 00, 74, 00, 76, 00, 00, 00, 74, 00, 00, 00, 72, 00, 00, 00,\n                     71, 00, 76, 00, 78, 00, 74, 00, 76, 00, 71, 00, 67, 00, 71, 00,\n                     64, 00, 71, 00, 78, 00, 79, 00, 81, 00, 79, 00, 78, 00, 74, 00);\n\nfloat midi2freq(int note)\n{\n    return note > 0 ? 440.0 * pow(2.0, float(note - 69) / 12.0) : 0.;\n}\n\n// from https://www.shadertoy.com/view/lsfSW2\nfloat music_box(float freq, float time)\n{\n    float y = 0.0;\n    y += 0.35*sin(1.00*tau*freq*time);\n    y += 0.22*sin(3.00*tau*freq*time);\n    y += 0.14*sin(5.00*tau*freq*time);\n    y += 0.07*sin(7.00*tau*freq*time);\n    y += 0.03*sin(9.00*tau*freq*time);\n    y *= exp(-3.3*time);\n\treturn y;\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    int n = int(time / dt);\n    float t = mod(time, dt);\n\n    float s = 0.;\n\n    for (int i=0; i < 3; i++) {\n        int note = n-i >= 0 ? music[(n-i) % music.length()] : 0;\n        float f = midi2freq(note);\n        s += music_box(f, t+float(i)*dt);\n    }\n\n    return vol*vec2(s);\n}\n","name":"Sound","description":"","type":"sound"}]}