{"ver":"0.1","info":{"id":"WdByWy","date":"1587224658","viewed":356,"name":"Kunimitsu","username":"lovelyH","description":"15th place on Revision 2020 in 4KB GFX compo.\nInspired by concept art for Tekken 2.\nhttps://www.pouet.net/prod.php?which=85310","likes":10,"published":1,"flags":0,"usePreview":1,"tags":["water","cat","mask","revision","gfx","4kb","revision2020","kunimitsu","watermelons","tekken"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/// kunimitsu\n\n\n\n/// high quality version\n// #define CONFIG_HQ\n\n\n/// simple antyaliasing using loop in shader.\n// #define CONFIG_AA 8.0\n\n/// camera\n// #define STATIC_CAMERA2\n// #define STATIC_CAMERA4\n\n\n\n///\n/// Framework\n///\n\n#ifdef CONFIG_HQ\n\t#define E 0.0001\n#else\n\t#define E 0.0002\n#endif\n#define INF 1e20\n#define SKY_DIST 20.0\n\n\nvec2 rot( vec2 p, float l){\n\tfloat c= cos(l), s= sin(l);\n\treturn vec2(\n\t\tc*p.x - s*p.y,\n\t\ts*p.x + c*p.y\n\t);\n}\n\n\n\nfloat smin( float a, float b, float k ){ /// default k = 32.0\n\treturn 125.0 <= max(abs(k*a),abs(k*b)) ? min(a,b) : -log2( exp2( -k*a ) + exp2( -k*b ) )/k;\n}\n\nfloat smax( float a, float b, float k ){ /// default k = 32.0\n\treturn -smin( -a, -b, k );\n}\n\n\n\n/// rand 2d\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\n/// classic noise 2d\nfloat noise2d(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\n/// classic noise 3d\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nfloat noise(vec3 p){\n\tvec3 a = floor(p);\n\tvec3 d = p - a;\n\td = d * d * (3.0 - 2.0 * d);\n\n\tvec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);\n\tvec4 k1 = permute(b.xyxy);\n\tvec4 k2 = permute(k1.xyxy + b.zzww);\n\n\tvec4 c = k2 + a.zzzz;\n\tvec4 k3 = permute(c);\n\tvec4 k4 = permute(c + 1.0);\n\n\tvec4 o1 = fract(k3 * (1.0 / 41.0));\n\tvec4 o2 = fract(k4 * (1.0 / 41.0));\n\n\tvec4 o3 = o2 * d.z + o1 * (1.0 - d.z);\n\tvec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);\n\n\treturn o4.y * d.y + o4.x * (1.0 - d.y);\n}\n\n\n/// FBM (perlin noise) 2D\n///@warning require noise\n///@return from 0.0 to 1.0 (but values above 0.8 are rere)\n#define FBM_NUM_OCTAVES 5\nfloat fbm(vec2 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec2 shift = vec2(100);\n\t// Rotate to reduce axial bias\n\tmat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n\tfor (int i = 0; i < FBM_NUM_OCTAVES; ++i) {\n\t\tv += a * noise2d(x);\n\t\tx = rot * x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\n/// FBM (perlin noise) 2D\n/// return value from 0.0 to 1.0\n///@warning require noise\n///@return from 0.0 to 1.0\nfloat fbm(vec3 x) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tvec3 shift = vec3(100);\n\tfor (int i = 0; i < FBM_NUM_OCTAVES; ++i) {\n\t\tv += a * noise(x);\n\t\tx = x * 2.0 + shift;\n\t\ta *= 0.5;\n\t}\n\treturn v;\n}\n\n\n\n\n/// arch\nfloat dfArch( vec3 ph, float rad, float rad2 ){\n\treturn length( vec3(\n\t\tabs( length( vec2(max( 0.0, ph.x ),ph.z+rad) )-rad )\n\t\t,\n\t\tph.y\n\t\t,\n\t\tmax( 0.0, -ph.x )\n\t)) - rad2;\n}\n\n\n/// kind of cyliunder, but will balls at ends\nfloat dfCapsule(vec3 p, float radius, float h ){\n\tp.z= abs(p.z) - h;\n\treturn ( 0.0 < p.z ) ? length(p) - radius : length(p.xy) - radius;\n}\n\n\n///@param l should be between -0.5*3.14 and 0.5*3.14\nfloat dfConeAndBall(vec3 p, float l, float radius ){\n\tvec2 ph1= vec2( length(p.xy), p.z );\n\tvec2 ph= rot( ph1, l );\n\tif( 0.0 < ph.y ){\n\t\treturn length(ph) - radius;\n\t}else{\n\t\tfloat c= -radius / cos( 0.5*3.141592653589 - l );\n\t\tif( 0. < l && ph1.y < c ){\n\t\t\treturn length( ph1-vec2(0,c) );\n\t\t}else{\n\t\t\treturn ph.x - radius;\n\t\t}\n\t\treturn ph.x - radius;\n\t}\n\treturn INF;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n///\n/// Scene\n///\nvec3 localP;\n\n\n\nvec3 getWatermelonColor( vec3 p, bool forBra ){\n\tvec3 ph= normalize( p );\n\tfloat l= atan( ph.x, ph.z );\n\tfloat b= atan( length(ph.xz), ph.y );\n\tconst float mo= 0.1 * 3.141592653589;\n\tfloat h= mod( l, mo ) - mo / 2.0;\n\tfloat h2= floor( l / (mo*0.5) );\n\tif( abs(h) < 0.04 * 3.141592653589 * fbm(vec2(b*20.0,h2)) || fbm(ph*15.0) < 0.28 )\n\t{\n\t\treturn vec3( .2, .15, .1 );\n\t}\n\tif( forBra ){\n\t\treturn vec3(.2,.6,.2);\n\t}\n\treturn mix( vec3(.2,.6,.2), vec3(.12,.4,.1), fbm(ph*9.0) );\n}\n\n\n\nfloat mapBra(vec3 p){\n\tfloat r= INF;\n\tfloat rc;\n\tvec3 ph;\n\n\t/// boobs\n\tconst float s= 128.0;\n\tconst vec3 pm= vec3(0,0.007,0.004);\n\t{\n\t\tph= p - pm;\n\t\tph.x= abs(ph.x)-0.18;\n\t\tph.y += 0.88;\n\t\tph.z -= 0.16;\n\t\tlocalP= ph;\n\t\trc= length(ph)-0.22;\n\n\t\tph.y -= 0.15;\n\t\tph.xy= rot( ph.xy, 0.3*3.141592653589 );\n\t\trc= smax( rc, smax(-ph.x,ph.y, s), s );\n\t\tr= min( r, rc );\n\n\t\tph= p - pm;\n\t\tph.y += 0.97;\n\t\tph.z -= 0.25;\n\t\tph.yz= rot( ph.yz, -0.5 );\n\t\tr= smax( r, -ph.y, s );\n\n\t\t/// niples\n\t\tph= p;\n\t\tph.x= abs(ph.x) - 0.19;\n\t\tph.y += 0.90;\n\t\tph.z -= 0.375;\n\t\tr= smin( r, length(ph)-0.01, 256.0 );\n\t}\n\n\t/// boobs connector\n\t{\n\t\tph= p - pm + vec3(0,0.007,0.0017);\n\t\tph.y += 0.97;\n\t\tph.z -= 0.320;\n\t\tconst float rad= 0.5;\n\t\tph.x= abs(ph.x);\n\n\t\tph.yz -= 0.003*vec2(1,-1);\n\n\t\tph.yz= rot( ph.yz, -0.5 );\n\n\t\tph.z -= rad;\n\t\tph.xz= rot( ph.xz, 1.38 );\n\t\trc= length( vec3( ph.y, length(vec2(ph.x,min(ph.z,0.0)))-rad, max(ph.z,0.0) ) )-0.003;\n\t\tr= smin( r, rc, 350.0 );\n\t}\n\n\t/// bra side straps\n\t{\n\t\t/// point of connection with boob part of bra\n\t\tph= p;\n\t\tph.x= abs(ph.x)-0.33;\n\t\tph.y += 0.95;\n\t\tph.z -= 0.28;\n\n\t\t/// rotations\n\t\tph.yz= rot( ph.yz, -0.25 );\n\t\tph.xz= rot( ph.xz, 0.8 );\n\t\t\n\t\t/// make an arch\n\t\tconst float rad= 0.34;\n\t\tconst float rad2= 0.003;\n\t\tr= smin( r, dfArch(ph, rad, rad2), 128.0 );\n\t}\n\n\t/// bra top straps\n\t{\n\t\t/// point of connection with boob part of bra\n\t\tph= p;\n\t\tph.x= abs(ph.x)-0.17;\n\t\tph.y += 0.75;\n\t\tph.z -= 0.33;\n\n\t\t/// rotations\n\t\tph.yz= rot( ph.yz, 0.50 );\n\t\tph.xy= rot( ph.xy, 0.15 );\n\t\t\n\t\t/// make an arch with extension\n\t\tconst float rad= 0.34;\n\t\tconst float len= 0.39;\n\t\tph.y -= len;\n\t\tph.z += rad;\n\t\trc= length( vec3(\n\t\t\tabs( length( vec2(max( 0.0, ph.y ),ph.z) )-rad )\n\t\t\t,\n\t\t\tph.x\n\t\t\t,\n\t\t\tmax( 0.0, -len-ph.y )\n\t\t)) - 0.003;\n\t\tr= smin( r, rc, 256.0 );\n\t}\n\n\treturn r;\n}\n\n\n\nfloat mapWatermelons(vec3 p){\n\tp.x += 0.4;\n\tp.y -= 1.0;\n\n\tvec3 ph= p;\n\tph.xy= mod( ph.xy-8.0, 2.0 ) - 1.0;\n\tvec2 sr= floor( p.xy / 2.0 );\n\tconst float s= 0.8;\n\tsr += .0;\n\tph.x += s*(0.5 - rand( sr ));\n\tph.y += s*(0.5 - rand( sr+vec2(.1) ));\n\n\tph.z += .1;\n\tlocalP= ph;\n\n\t///@todo that should be done after raytracing, during color calculation, but here we already have sr\n\tlocalP.xy= rot( localP.xy, rand( sr+.3 )*6.0 );\n\tlocalP.yz= rot( localP.yz, rand( sr+.2 )*6.0 );\n\t\n\tfloat r= length(ph) - 0.25 - 0.1 * rand( sr+.4);\n\tr= min( r, max( 0.2, p.z ) );\n\treturn r;\n}\n\n\n\n/// cat mask\nfloat mapMask(vec3 p){\n\tp.x= abs(p.x);\n\tp.z -= 0.1;\n\tvec3 ph= p;\n\tfloat r, rc, h;\n\n\t/// forehead\n\tr= length(p-vec3(.0,.3,.0))-.3;\n\n\t/// lips up\n\trc= dfConeAndBall( p - vec3(0,0,.2), -0.2*3.14, 0.15 );\n\tph= p;\n\tph.yz= rot( ph.yz, 0.3 * 3.1415 );\n\trc= smax( rc, ph.z - .2, 32.0 );\n\tph= p;\n\trc= smax( rc, -p.y-0.15, 32.0 );\n\tr= smin( r, rc, 32.0 );\n\n\t/// lips down\n\trc= dfConeAndBall( p - vec3(0,-.15,.20), -0.27*3.14, 0.07 );\n\tph = p;\n\tph.yz= rot( ph.yz, 0.1 * 3.1415 );\n\trc= smax( rc, -ph.y-.25, 32.0 );\n\tr= smin( r, rc, 500.0 );\n\n\t/// cat sides\n\tph= p;\n\tph.xy= rot( ph.xy, 0.1 * 3.14 );\n\tr= smax( r, ph.x - 0.25, 32.0 );\n\tph= p;\n\tph.xy= rot( ph.xy, 0.2 * 3.14 );\n\tr= smax( r, ph.x - 0.25, 32.0 );\n\n\t/// ears\n\tph= p;\n\tph.x -= 0.25;\n\tph.y -= 0.65;\n\tph.z -= 0.08;\n\tph.xy= rot( ph.xy, 0.15 * 3.14 );\n\trc= dfConeAndBall( ph.xzy, -0.1*3.14, 0.04 );\n\trc= smax( rc, ph.z-0.05, 200.0 );\n\trc= max( rc, 0.4-p.y );\n\tr= smin( r, rc, 256.0 );\n\n\t/// cat bottom\n\tr= smax( r, -p.z, 128.0);\n\n\t/// done\n\treturn r;\n}\n\n\n\nfloat mapHair(vec3 p){\n\tfloat r= length(p.xy-vec2(0,.27) )-0.26;\n\n\tvec3 ph= p;\n\tph.yz= rot( ph.yz, 0.02 );\n\tph.xy= mod( ph.xy, 0.01 ) - 0.005;\n\tr= max( r, 0.003-length(ph.xy) );\n\n\tph= p;\n\tph.yz= rot( ph.yz, -0.03 );\n\tph.xy= mod( ph.xy, 0.014 ) - 0.007;\n\tr= max( r, 0.002-length(ph.xy) );\n\n\tph= p;\n\tph.xy= mod( ph.xy, 0.004 ) - 0.002;\n\tr= max( r, 0.001-length(ph.xy) );\n\n\tr= max( r, p.z-0.12 );\n\tr= max( r, 0.3-0.18-p.y);\n\treturn r;\n}\n\n\n\n/// map of body\nfloat mapBody(vec3 p){\n\tfloat r=INF, rc;\n\tvec3 ph= p;\n\n\t/// neck\n\tph= p- vec3(0,-.3, -.03);\n\tr= dfCapsule(ph.xzy, 0.13, 0.3 );\n\n\t/// head\n\tph= p- vec3(0,+.18, .01);\n\trc= dfCapsule(ph.xzy, 0.19, 0.1 );\n\tr= smin( r, rc, 128.0 );\n\n\t/// jaws\n\t{\n\t\tph= p;\n\t\tph.y -= 0.03;\n\t\tph.z -= 0.12;\n\n\t\tph.x= abs(ph.x) - 0.055;\n\t\tph.xz= rot( ph.xz, -0.6 );\n\n\t\tph.x = max( 0.0, abs(ph.x)-0.03 );\n\t\tph.y = max( 0.0, abs(ph.y)-0.1 );\n\t\tph.z = max( 0.0, abs(ph.z)-0.05 );\n\n\t\trc= length(ph)-0.08;\n\t\tr= smin( r, rc, 64.0 );\n\t}\n\n\t/// ears\n\t{\n\t\tph= p;\n\t\tph.x= abs(ph.x) - 0.195;\n\n\t\tph.y -= 0.11;\n\t\tph.z -= 0.05;\n\t\tvec3 ph2= ph;\n\n\t\tph.yz= rot( ph.yz, 0.7 );\n\t\tph.xz= rot( ph.xz, -0.3 );\n\n\t\tph.y= max( 0.0, abs(ph.y)-0.01 );\n\t\tph.z= max( 0.0, abs(ph.z)-0.02 );\n\n\t\trc= length(ph)-0.018;\n\n\t\tph2.y += 0.001;\n\t\tph2.z += 0.008;\n\t\trc= smax( rc, -(length(ph2.yz)-0.009), 128.0 );\n\n\t\tph2.x -= 0.010;\n\t\tph2.y += 0.017;\n\t\trc= smin( rc, length(ph2)-0.01, 2048.0 );\n\n\t\tr= smin( r, rc, 512.0 );\n\t}\n\n\t/// upper body\n\t{\n\t\tph= p;\n\t\tfloat rad= 1.6;\n\n\t\t/// mirror & extend X\n\t\tph.x= max( 0.0, abs(ph.x)-0.2 );\n\t\tph.y += 0.98;\n\t\tph.z -= 0.00;\n\n\t\t/// rotate YZ\n\t\tph.z += rad;\n\t\tph.yz= rot( ph.yz, 0.1*3.1415 );\n\t\tph.z -= rad;\n\t\t\n\t\t/// without bones\n\t\tif( ph.y < 0.0 ){\n\t\t\trc= length( vec2( length( ph.yz + vec2(0,rad) ) - rad, ph.x ) ) - 0.2;\n\t\t}else{\n\t\t\trc= length(ph)-0.2;\n\t\t}\n\n\t\tr= smin( r, rc, 32.0 );\n\t}\n\n\t/// ribs side shape cut\n\tfor(float py=0.0;py<6.0;py+=1.0){\n\t\tph= p;\n\t\tph.z += (3.0 < py ? 0.11 : 0.2);\n\t\tfloat h= 0.1;\n\t\t\n\t\tfloat hy= ph.y - (py-14.0)*h;\n\n\t\th= 3.0 < py ? 0.4 : 0.5;\n\t\th= abs( length( vec2( ph.x, ph.z ) )-h );\n\n\t\trc= length( vec2( hy, h ) )-0.01;\n\n\t\tr= smax( r, -rc, 32.0 );\n\t}\n\n\t/// ribs bottom cut\n\t{\n\t\tph= p;\n\t\tph.y += 1.1;\n\t\t\n\t\tph.z -= 0.10;\n\n\t\tph.xy= rot( ph.xy, -0.25*3.141592653589 );\n\t\trc= smax( ph.x, ph.y, 32.0 );\n\n\t\tr= smax( r, -rc, 32.0 );\n\t}\n\n\t/// belly\n\t{\n\t\tph= p;\n\t\tfloat rad= 2.8;\n\t\t\n\t\tph.x= max( 0.0, abs(ph.x)-0.14 );\n\t\tph.y += 1.1;\n\t\tph.z += 0.15;\n\n\t\tph.z += rad;\n\t\tph.z -= rad;\n\n\t\tif( 0.0 > ph.y ){\n\t\t\trc= length( vec2( length( ph.yz + vec2(0,rad) ) - rad, ph.x ) ) - 0.3;\n\t\t}else{\n\t\t\trc= length(ph)-0.3;\n\t\t}\n\t\tr= smin( r, rc, 32.0 );\n\t}\n\n\t/// abs\n\tfor(float sx=-1.0;sx<2.0;sx+=2.0)\n\tfor(float py=0.0;py<3.0;py+=1.0){\n\t\tph= p;\n\t\t\n\t\tph.y += 1.3;\n\t\tph.yz= rot( ph.yz, -0.15 );\n\n\t\tph.x += sx*0.08;\n\t\tph.y += py*0.165;\n\n\t\tph.z -= 0.08;\n\n\t\trc= length( ph )-0.03;\n\n\t\tr= smin( r, rc, 32.0 );\n\t}\n\n\t/// navel (pempek in pl)\n\t{\n\t\tph= p;\n\t\tph.y += 1.57;\n\t\tph.z -= 0.13;\n\t\trc= length( ph ) - 0.005;\n\t\tr= smax( r, -rc, 180.0 );\n\t}\n\n\t/// hands\n\t{\n\t\tph= p;\n\t\tph.x= abs(ph.x);\n\t\tph.xy += vec2( -.4, .4 );\n\t\tph.xy= rot( ph.xy, -0.23*3.14 );\n\t\tph.yz= rot( ph.yz, -0.035*3.14 );\n\t\tph.y += 2.0;\n\t\trc= dfCapsule(ph.xzy, 0.12, 2.0 );\n\n\t\t/// arm\n\t\tph.y -= 2.0;\n\t\trc= smin( rc, length(ph)-0.08, 32.0 );\n\n\t\t/// albow\n\t\tph.y += 0.7;\n\t\trc= smin( rc, length(ph)-0.08, 32.0 );\n\n\t\t/// biceps\n\t\tph.y -= 0.5;\n\t\tph.z += 0.10;\n\t\trc= smin( rc, dfArch( ph.zxy, 0.17, 0.03 ), 32.0 );\n\n\t\t/// apply\n\t\tr= smin( r, rc, 32.0 );\n\t}\n\n\t/// boobs\n\t{\n        #ifdef CONFIG_HQ\n\t\tfor(float s=-1.0;s<2.0;s+=2.0)\n        #endif\n        {\n\t\t\tph= p;\n            #ifndef CONFIG_HQ\n            ph.x= abs(ph.x);\n            const float s= 1.0;\n            #endif\n\t\t\tph.x= (ph.x)*s-0.18;\n\t\t\tph.y += 0.75;\n\t\t\tph.z -= 0.05;\n\t\t\tph.yz= rot( ph.yz, -0.8 );\n\t\t\trc= dfCapsule(ph, 0.2, 0.18);\n\t\t\tr= smin( r, rc, 32.0 );\n\t\t}\n\t}\n\n\t/// pectoralis muscle\n\t{\n\t\tph= p;\n\t\tph.x= abs(ph.x);\n\t\tph.x -= 0.35;\n\t\tph.y += 0.55;\n\t\tph.z -= 0.08;\n\t\tph.xy= rot( ph.xy, -1.1 );\n\t\tph.xz= rot( ph.xz, 0.3 );\n\t\trc= dfCapsule(ph.zyx, 0.02, 0.2);\n\t\tr= smin( r, rc, 32.0 );\n\t}\n\n\t/// done\n\treturn r;\n}\n\n\n\nfloat mapNeckles(vec3 p){\n\tp.y += 0.21;\n\tp.y= abs(p.y);\n\tp.y= max( 0.0, p.y-0.02 );\n\tp.z += 0.04;\n\tfloat r= length(vec2(p.y,length(p.xz)-0.14)) - 0.01;\n\treturn r;\n}\n\n\n\nint lastMatId= 0;\nfloat map(vec3 p){\n\tfloat r=INF, rc;\n\tvec3 ph= p;\n\tlastMatId= 0;\n\tvec3 localLocalP;\n\n\t/// cat mask\n\trc= mapMask(p);\n\tif( rc < r ){\n\t\tlastMatId= 1;\n\t\tr= rc;\n\t\tlocalLocalP= localP; ///@todo that can be delete, unless I change something later on, in case I will leave it for now.\n\t}\n\n\t/// body\n\trc= mapBody(p);\n\tif( rc < r ){\n\t\tlastMatId= 2;\n\t\tr= rc;\n\t\tlocalLocalP= localP; ///@todo that can be delete, unless I change something later on, in case I will leave it for now.\n\t}\n\n\t/// hair\n\trc= mapHair(p);\n\tif( rc < r ){\n\t\tlastMatId= 3;\n\t\tr= rc;\n\t\tlocalLocalP= localP; ///@todo that can be delete, unless I change something later on, in case I will leave it for now.\n\t}\n\n\t/// bra\n\trc= mapBra(p);\n\tif( rc < r ){\n\t\tlastMatId= 4;\n\t\tr= rc;\n\t\tlocalLocalP= localP;\n\t}\n\n\t/// watermelons\n\trc= mapWatermelons(p);\n\tif( rc < r ){\n\t\tlastMatId= 5;\n\t\tr= rc;\n\t\tlocalLocalP= localP;\n\t}\n\n\t/// necklace\n\trc= mapNeckles(p);\n\tif( rc < r ){\n\t\tlastMatId= 6;\n\t\tr= rc;\n\t\tlocalLocalP= localP; ///@todo that can be delete, unless I change something later on, in case I will leave it for now.\n\t}\n\n\t/// done\n\tlocalP= localLocalP;\n\treturn r;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n///\n/// Rendering\n///\n\nfloat shadow( in vec3 ro, in vec3 rd, float mint, float maxt )\n{\n\tconst float k= 32.0;\n\tfloat r= 1.0;\n\tfloat ph = INF;\n\tfor( float t=mint; t < maxt; )\n\t{\n\t\tfloat h = map(ro + rd*t);\n\t\tif( h<E )\n\t\t\treturn 0.0;\n\t\t\n\t\tfloat d, y;\n\t\t{\n\t\t\tfloat r1= max( h, ph );\n\t\t\tfloat r2= min( h, ph );\n\t\t\ty= r2*r2 / (2.0 * r1);\n\t\t\td= sqrt( r2*r2 - y*y );\n\t\t}\n\n\t\tr= min( r, k * h / t ); /// faster\n\t\t// r= min( r, k * d / max(E,t-y) ); /// better\n\t\tt += h;\n\t}\n\tr= clamp(r,0.0,1.0);\n\treturn r;\n}\n\n\n\nvec3 render( vec3 sp, vec3 dir, out vec3 p ){\n\tfloat dis= 0.0;\n\tp= sp;\n\tfloat t= 0.0;\n\tfor( int a=0;a<0x100;a++){\n\t\tt += dis;\n\t\tp = sp + dir*t;\n\t\tdis= map(p);\n\t\tif( dis < E ){\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif( t < SKY_DIST )\n\t{\n\t\tvec3 localLocalP= localP;\n\t\tint matId= lastMatId;\n\n        /// normal vector (usual way)\n  \t\t//vec3 nor= vec3( 0 );\n\t\t//for( int i=min( iFrame, 0 ); i<4; i++){\n\t\t//\tvec3 e = 0.5773*(2.0*vec3((((i+3)>>1)&1),((i>>1)&1),(i&1))-1.0);\n\t\t//\tnor += e * map( p + e*E );\n\t\t//}\n        //nor= normalize( nor );\n\n\t\t/// corner shadow (usual way)\n\t\t//float cs= 1.0;\n\t\t//for( float a=0.001+float(min(0,iFrame)); a<0.02; a*=2.0 )cs= min( cs, map( p + nor * a ) / a );\n\t\t//cs= clamp( cs, 0.0, 1.0 );\n        \n        /// normal vector & corner shadow in single loop\n        ///@warning black magic\n\t\tvec3 nor= vec3( 0 );\n        float cs= 1.0;\n        for( int i=min( iFrame, 0 ); i<10; i++){\n            vec3 mapArg;\n            vec3 e;\n            float a;\n            if( i < 4 ){\n                e = 0.5773*(2.0*vec3((((i+3)>>1)&1),((i>>1)&1),(i&1))-1.0);\n                mapArg= p + e*E;\n            }else{\n                nor= normalize( nor );\n                a= 0.001 * pow( 2.0, float(i-4) );\n                mapArg= p + nor * a;\n            }\n\n            float mapResult= map( mapArg );\n\n            if( i < 4 ){\n                nor += e * mapResult;\n            }else{\n                cs= min( cs, mapResult / a );\n            }\n        }\n\t\tcs= clamp( cs, 0.0, 1.0 );\n        \n\n\t\tconst vec3 sunDir= normalize( vec3( .9, .7, 0.5 ) );\n\t\tconst vec3 sunDir2= normalize( vec3( .1, .1, .9 ) );\n\n\t\t/// shadow\n\t\tfloat sh= dot(nor,sunDir);\n\t\tsh= clamp( sh, 0.0, 1.0 );\n\t\tif( 0.0 < sh ){\n\t\t\tsh *= shadow( p, sunDir, 0.001, 5.0 );\n\t\t}\n\t\tsh= clamp( sh, 0.0, 1.0 );\n\n\t\t/// base color\n\t\tvec3 baseColor= vec3(1);\n\t\tswitch(matId){\n\t\t\tcase 0: /// water\n\t\t\t\tbaseColor= vec3(.3,.3,.9);\n\t\t\t\tbreak;\n\t\t\tcase 1: /// mask\n\t\t\t{\n\t\t\t\tbaseColor= vec3(1);\n\n\t\t\t\tvec3 ph= p;\n\t\t\t\tph.x= abs(ph.x);\n\n\t\t\t\t/// ears\n\t\t\t\tif( true\n\t\t\t\t\t&& 0.51 < rot(ph.xy,0.72).y\n\t\t\t\t\t&& -0.23 < rot(ph.xy,2.3).y\n\t\t\t\t\t&& -0.14 < rot(ph.xy,4.89).y\n\t\t\t\t)\n\t\t\t\t\tbaseColor= vec3(.9,.9,.7);\n\n\t\t\t\t/// eyes & nose & mustache\n\t\t\t\tvec2 em= vec2(.02,.24); /// eyes move\n\t\t\t\tvec3 ph2= ph; /// mustache position\n\t\t\t\tph2.z -= 0.2;\n\t\t\t\tph2.xz= rot( ph2.xz, -0.25* 3.141592653589 );\n\t\t\t\tph2.yz= rot( ph2.yz, -0.3 );\n\t\t\t\tph2.y= abs(abs(ph2.y)-0.02)-0.02;\n\t\t\t\tph2.z= max( 0.0, abs(ph2.z+0.07)-0.03 );\n\t\t\t\tif( true\n\t\t\t\t\t/// eyes\n\t\t\t\t\t&& length(ph.xy-em) < 0.16\n\t\t\t\t\t&& length(ph.xy-em-vec2(1,-1)*vec2(.28)) < 0.26\n\t\t\t\t\t/// nose\n\t\t\t\t\t|| smin(\n\t\t\t\t\t\tlength(ph.xy-vec2(0,-.05)) - 0.035\n\t\t\t\t\t\t,\n\t\t\t\t\t\tlength(ph.xy-vec2(0,-.08)) - 0.015\n\t\t\t\t\t\t, 256.0\n\t\t\t\t\t) < 0.0\n\t\t\t\t\t/// mustache\n\t\t\t\t\t|| length( ph2.yz ) < 0.01\n\t\t\t\t)\n\t\t\t\t\tbaseColor= vec3(.5);\n\n\t\t\t\t/// lips & sign\n\t\t\t\t/// sign\n\t\t\t\tph2= ph; \n\t\t\t\tph2.y -= 0.18;\n\t\t\t\tph2.xy= vec2( min(ph2.x,ph2.y), max(ph2.x,ph2.y) );\n\t\t\t\t/// lips position\n\t\t\t\tph.y += 0.03;\n\t\t\t\tph.yz= rot( ph.yz, -0.25 );\n\t\t\t\tph.z -= 0.25;\n\t\t\t\tif( \n\t\t\t\t\t/// lips\n\t\t\t\t\tabs(ph.y) < 0.02\n\t\t\t\t\t\t&& 0.0 < ph.z\n\t\t\t\t\t|| length(ph.yz-vec2(-0.01,0)) < 0.03\n\t\t\t\t\t/// sign on top\n\t\t\t\t\t|| abs(ph2.x-0.02) < 0.01\n\t\t\t\t\t\t&& (ph2.y) < 0.07\n\t\t\t\t){\n\t\t\t\t\tbaseColor= vec3(.9,.45,.45);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: /// body\n\n\t\t\t\tbaseColor= vec3(229,197,149) / 256.;\n\n\t\t\t\t/// moles\n\t\t\t\t{\n\t\t\t\t\tvec3 ph= 100.0 * p;\n\t\t\t\t\tvec2 sr= floor( ph.xy / 2.0 ) + 12.0 * vec2(floor( ph.z / 2.0 ));\n\t\t\t\t\tph= mod( ph, 2.0 ) - 1.0;\n\t\t\t\t\tconst float s= 0.8;\n\t\t\t\t\tph.x += s*(0.5 - rand( sr ));\n\t\t\t\t\tph.y += s*(0.5 - rand( sr+vec2(.1) ));\n\t\t\t\t\tph.z += s*(0.5 - rand( sr+vec2(.2) ));\n\t\t\t\t\t\n\t\t\t\t\tfloat h= (0.9 - rand(sr+.4));\n\t\t\t\t\t\n\t\t\t\t\t/// less on belly and boobs\n\t\t\t\t\th += 0.1 * clamp( 10.0 * max( p.y + 0.3 + abs(p.x), p.y+0.6 ), 0.0, 1.0 );\n\n\t\t\t\t\th= h*h*h;\n\t\t\t\t\tif( length(ph) < 0.23*h )\n\t\t\t\t\t\tbaseColor= vec3(.6,.4,.1) + 0.1*vec3(rand(sr+vec2(.5)), rand(sr+vec2(.6)), rand(sr+vec2(.7)) );\n\t\t\t\t}\n\n\t\t\t\t// baseColor= mix( vec3(.8,.6,.5), vec3(229,197,149) / 256., clamp( \n\t\t\t\tbaseColor= mix( vec3(.8,.6,.5), baseColor, clamp( \n\t\t\t\t\tpow( fbm(p*300.0),\n\t\t\t\t\t\tmix( 0.2, 1.0, clamp( max(0.0,p.y+0.15)*max(0.0,p.z-0.025)*100.0, 0.0, 1.0 ) )\n\t\t\t\t\t)\n\t\t\t\t\t, 0.0, 1.0 ) );\n\n\t\t\t\tbaseColor= mix( vec3(.7,.6,.7), baseColor, clamp( \n\t\t\t\t\tfbm(p*200.0) * 3.2\n\t\t\t\t, 0.0, 1.0 ) );\n\n\t\t\t\tbreak;\n\t\t\tcase 3: /// hair\n\t\t\t\t// baseColor= vec3(.7,.1,.2);\n\t\t\t\tbaseColor= mix( vec3(.7,.1,.2), vec3(.2,.04,.14), fbm(p.xy*1000.0 + vec2(73) ) );\n\t\t\t\tbreak;\n\t\t\tcase 4: /// bra\n\t\t\t\t// baseColor= vec3(.1,.6,.1);\n\t\t\t\tbaseColor= getWatermelonColor(localLocalP, true);\n\t\t\t\tbreak;\n\t\t\tcase 5: /// watermelons\n\t\t\t\tbaseColor= getWatermelonColor(localLocalP, false);\n\t\t\t\tbreak;\n\t\t\tcase 6: /// neckless\n\t\t\t\tbaseColor= vec3(.6,.1,.9);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t/// almost final outside water color\n\t\tvec3 r= baseColor\n\t\t\t* mix(1.0, dot(nor,-dir),   0.2 )\n\t\t\t// * mix(1.0, dot(nor,sunDir), 0.3 )\n\t\t\t* (0.5+0.5*cs)\n\t\t\t* mix( 1.0, sh, 0.4)\n\t\t;\n\n\t\t/// sun * normal light\n\t\t{\n\t\t\tfloat h= mix(1.0, dot(nor,sunDir), 0.3 );\n\t\t\tif( matId==4 ){\n\t\t\t\th= 1.0 - (1.0 - h) * (1.0 - h);\n\t\t\t\th *= 0.8;\n\t\t\t}\n\t\t\tr *= h;\n\t\t}\n\n\t\t/// fake shadow of mask\n\t\tif( matId==2 || matId==3 ){\n\t\t\tr *= .4+.6*min(\n\t\t\t\tsmax(\n\t\t\t\t\t(-0.1-p.y)*10.0\n\t\t\t\t\t,\n\t\t\t\t\t(0.2-p.z)*5.0\n\t\t\t\t\t, 8.0\n\t\t\t\t)\n\t\t\t\t, 1.0 );\n\t\t}\n\n\t\t/// body sky reflection\n\t\tif( matId==2 ){\n\t\t\tfloat h= dot(nor,sunDir2);\n\t\t\th= pow( h, 32.0 );\n\t\t\th *= 1.0-.4*(1.0-pow( 1.0-fbm(p*319.0), 4.0 ));\n\t\t\tr= mix( r, vec3(1), clamp( h, 0.0, 1.0 ) );\n\t\t}\n\n\t\t/// reflex on watermelon\n\t\tif( matId==5 ){\n\t\t\tfloat h= clamp( dot(nor,normalize(sunDir2+0.3*fbm(p*25.0))), 0.0, 1.0 );\n\t\t\th= pow( h, 16.0 ) * 0.7;\n\t\t\tr= mix( r, vec3(1), h );\n\t\t}\n\n\t\t/// done\n\t\treturn r;\n\t}else if( 0.0 < dir.z ){ /// sky\n\t\treturn mix(\n\t\t\tvec3( .5,.5,.9 ),\n\t\t\tvec3(.99),\n\t\t\tclamp( pow(fbm( dir.xy / dir.z * 2.0 ), 1.0 ), 0.0, 1.0 )\n\t\t);\n\t}else{\n\t\treturn vec3(.1,.1,.4); /// water\n\t}\n}\n\n\n\nvec3 renderFull( vec3 sp, vec3 dir ){\n\tvec3 p= sp;\n\tvec3 r= render( sp, dir, p );\n\tr= clamp( r, 0.0, 1.0 );\n\n\t/// water\n\tif( p.z < 0.0 ){\n\t\t\n\t\t/// water point\n\t\tvec2 wp= sp.xy - dir.xy * sp.z / dir.z;\n\t\tvec3 waterColor = mix( vec3(.05,.2,.4), vec3(.1,.3,.5), (0.7+0.3*fbm(wp*8.0)) );\n\n\t\t/// water normal\n\t\tconst float s= 8.0;\n\t\tvec3 waterNormal= normalize( vec3(\n\t\t\t// 0.5-fbm(s*wp + (3.0)),\n\t\t\t// 0.5-fbm(s*wp + (35.0)),\n\t\t\t0.5-fbm(vec3(s*wp+3.0,iTime)),\n\t\t\t0.5-fbm(vec3(s*wp    ,iTime)),\n\t\t\t3.0\n\t\t) );\n\t\t\n\t\t/// underwater parts\n\t\tr= mix(\n\t\t\tr, /// orginal\n\t\t\twaterColor, /// water color\n\t\t\t0.5 + clamp( -8.0 * p.z, 0.0, 0.5 ) /// how much under water\n\t\t);\n\n\t\t/// reflections\n\t\tvec3 refP;\n\t\tvec3 ref= render( vec3(wp.x,wp.y,0.0), reflect( dir, waterNormal ), refP );\n\t\tr = mix( clamp(r,0.0,1.0), clamp(ref,0.0,1.0), 0.15 );\n\t}\n\n\n\treturn r;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 r= vec3(0);\n\n\t#ifdef CONFIG_AA\n\tfor(float aa=0.0;aa<CONFIG_AA;aa++)\n\t#endif\n\t{\n\t\t#ifdef CONFIG_AA\n\t\t\tvec2 uv= 2.0 * (fragCoord+rand( vec2(aa) )) / iResolution.xy - vec2(1.0,1.0);\n\t\t#else\n\t\t\tvec2 uv= 2.0 * fragCoord / iResolution.xy - vec2(1.0,1.0);\n\t\t#endif\n\t\t\n\t\tuv.y *= iResolution.y / iResolution.x;\n\n\t\tvec3 dir= normalize( vec3( uv.x, uv.y, -2.15 ) );\n\n\t\t#ifdef STATIC_CAMERA4\n\t\t\tvec3 cam= vec3( 2.8854, -1.386145, 1.26403 );\n\t\t\tdir.yz= rot( dir.yz, 1.216471 );\n\t\t\tdir.xy= rot( dir.xy, 1.192953 );\n\t\t#else\n\t\t#ifdef STATIC_CAMERA2\n\t\t\tvec3 cam= vec3( 3.0187, -1.101315, 1.390074 );\n\t\t\tdir.yz= rot( dir.yz, 1.19248 );\n\t\t\tdir.xy= rot( dir.xy, 1.290177 );\n\t\t#else\n\t\t\tvec3 cam= vec3( 2.662, -1.8168, 1.812 );\n\n\t\t\t/// animated camera\n\t\t\t{\n\t\t\t\tfloat t= mod( 0.1*iTime, 3.0 );\n\t\t\t\tvec2 camR;\n\n\t\t\t\tvec3 cam1= vec3( 2.662, -1.8168, 1.812 );\t\tvec2 camR1= vec2( 1.089, 1.004 );\n\t\t\t\tvec3 cam2= vec3( 3.0187, -1.101315, 1.390074 );\tvec2 camR2= vec2( 1.19248, 1.290177 );\n\t\t\t\tvec3 cam4= vec3( 2.8854, -1.386145, 1.26403 );\tvec2 camR4= vec2( 1.216471, 1.192953 );\n\n\t\t\t\tif( t < 1.0 ){\n\t\t\t\t\tcam= mix( cam1, cam2, t );\n\t\t\t\t\tcamR= mix( camR1, camR2, t );\n\t\t\t\t}else if( t < 2.0 ){\n\t\t\t\t\tcam= mix( cam2, cam4, t-1.0 );\n\t\t\t\t\tcamR= mix( camR2, camR4, t-1.0 );\n\t\t\t\t}else{\n\t\t\t\t\tcam= mix( cam4, cam1, t-2.0 );\n\t\t\t\t\tcamR= mix( camR4, camR1, t-2.0 );\n\t\t\t\t}\n\t\n\t\t\t\tdir.yz= rot( dir.yz, camR.x );\n\t\t\t\tdir.xy= rot( dir.xy, camR.y );\n\t\t\t}\n\n\t\t#endif\n\t\t#endif\n\n\t\t#ifdef CONFIG_AA\n\t\t\tr += renderFull( cam, dir ) / CONFIG_AA;\n\t\t#else\n\t\t\tr = renderFull( cam, dir );\n\t\t#endif\n\n\t}\n\n\tfragColor.xyz= r;\n}\n\n\n","name":"Image","description":"","type":"image"}]}