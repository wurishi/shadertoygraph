{"ver":"0.1","info":{"id":"wlsGWH","date":"1556265253","viewed":222,"name":"Shortest Reflection - 125","username":"Real_NC","description":"The shortest way I could figure out to raytrace a sphere and display it's reflection from a cubemap. It's already pretty short, but someone's going to improve on it, no doubt.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["reflection","cubemap","onetweet","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 122 Characters by Xor\n\nvoid mainImage(out vec4 o, vec2 u)\n{\n    u += u-(o.xy=iResolution.xy);\n    o = texture(iChannel0,\n    vec3(sqrt(1.-dot(u/=o.y,u))*u,dot(u,u)-.5));\n}/*\n\n// 125 Characters by Xor:\n\nvoid mainImage(out vec4 o, vec2 u) {\nvec2 p=iResolution.xy;\no=texture(iChannel0,\nvec3((p=(u+u-p)/p.y)*sqrt(1.-dot(p,p)),dot(p,p)-.5));}/*\n\n\n// 124 Characters by me:\n\n#define mainImage(o,u)                 \\\nvec2 p=iResolution.xy;                 \\\no=texture(iChannel0,                   \\\nreflect(vec3(0,0,1),                   \\\nvec3(p=(p-u-u)/p.y,sqrt(1.-dot(p,p)))));\n\n// Honorable mention by Fabrice, doesn't work anymore\n#define mainImage(o,u)                              \\\n    vec2 p = iResolution.xy,d;                      \\\n    o = texture(iChannel0,                          \\\n                vec3(sqrt(d.x=1.-dot(p=(u+u-p)/p.y,p))*p,.5-d));*/","name":"Image","description":"","type":"image"}]}