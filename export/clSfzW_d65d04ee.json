{"ver":"0.1","info":{"id":"clSfzW","date":"1694041387","viewed":19,"name":"tomografia experimento 02","username":"davidmachadosf","description":"vibrant patterns","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"ctSfzW","parentname":"tomografia experimento 01"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float   a   = 1./3.;\nconst float   b   = 1./6.;\nconst float scale =  2.5 ;\n\n\nvec3 palette(float t) {\n\n    vec3 a = vec3( .2,  .7,     .4    );\n    vec3 b = vec3( .5,  .8,     .5    );\n    vec3 c = vec3(1. , 2.,     1.     );\n    vec3 d = vec3( .0,  .33333, .66666);\n    \n    return a + b*cos(6.28318*(c*t + d));\n}\n\n\n\nvec3 grayScale(float t) {\n\n    return vec3(t,t,t);\n}\n\n\nfloat f(float x, float y, float iTime) { \n  \n  float d =  x*x + y*y;\n  float n=0.;\n  \n  float pa=a*sin(sin(iTime/55.));\n  float pb=b*cos(sin(iTime/34.));\n  \n  \n  for(int i=0; i<100; i++) {\n  \n      float newX = ( x  +  pa/d)*x - y*y;\n\t  float newY = (2.*x + pb/d)*y - y*x;  \n\t  \n\t  x = newX;\n\t  y = newY;\t  \n\t  n+=1.;\n      \n      // sentinela\n      //if(n>10.) break;\n      \n      d = x*x + y*y;\n      if(d >= 9.) break;\n  }\n  \n  return (1.-(cos(n)+1.)*.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = scale*(fragCoord/iResolution.xy - .5);\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n  \n    float valxy = f(y, x, iTime/1.);\n    \n    //vec3 col = grayScale(valxy);\n    //vec3 col = palette(valxy);\n    vec3 col = palette(valxy)*(1.-grayScale(valxy));\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}