{"ver":"0.1","info":{"id":"dtlGzr","date":"1671214660","viewed":121,"name":"noisy 2D water","username":"ianertson","description":"Some 2D water waves effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WATER_COLOR vec3(0.48627450980392156, 0.8235294117647058, 0.9294117647058824)\n#define WATER_COLOR_2 vec3(0.78627450980392156, 0.9235294117647058, 1.0)\n#define GOLD 1.618034005\n#define M_PI 3.14159265359\n#define HASH 28174.028f\n\nfloat noise0(vec2 uv, float seed, float freq) {\n    return fract(sin((HASH+seed)*freq) * dot(uv, vec2(GOLD, M_PI)));\n}\n\nfloat noise1(vec2 uv, float seed, float freq) {\n    float a = noise0(uv, seed, freq);\n    float b = noise0(uv.yx, seed * 1.6, freq);\n    float c = noise0(uv + vec2(a, b), seed * 0.5, freq);\n    \n    return fract(cos(c+seed) * dot(uv, vec2(a, b)));\n}\n\nfloat noise2(vec2 uv, float seed, float freq) {\n    vec2 lv = fract(uv*freq);\n    vec2 id = floor(uv*freq);\n    \n    float bl = noise1(id, seed, freq);\n    float br = noise1(id + vec2(1, 0), seed, freq);\n    float b = mix(bl, br, lv.x);\n    \n    float tl = noise1(id + vec2(0, 1), seed, freq);\n    float tr = noise1(id + vec2(1, 1), seed, freq);\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\nvec3 plot(vec2 uv, float value) {\n    return vec3(value) * max(0.0, value - (uv.y));\n}\n\nvec3 water(vec2 uv, float freq) {\n    uv *= freq;\n    \n    uv.x += cos(iTime*0.5);\n    float n = noise2(uv, 938.0, freq*0.5 + ((0.5 + cos(iTime*0.01))));\n    \n    float base = 1.0 + (n*8.0+(0.5 + sin(uv.x*tan(iTime*0.5))));\n    float height = base + (cos(uv.x) * (noise2(uv, 91321.03f, 10.5)) * M_PI*2.0);\n    return mix(vec3(0.0), mix(WATER_COLOR, WATER_COLOR_2, height*0.2), clamp(plot(uv, height), 0.0, 1.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    // Time varying pixel color\n    vec3 col = water(uv, 26.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}