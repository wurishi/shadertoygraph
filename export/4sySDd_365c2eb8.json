{"ver":"0.1","info":{"id":"4sySDd","date":"1467303829","viewed":2980,"name":"Simple Dot Matrix","username":"Incin","description":"My first shader! :D Not bad, although I'm 98% sure my logic is flawed ;P","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","old","fade","led","matrix","dot","overlay","black"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float dotSpace = 8.0;\nconst float dotSize = 3.0;\n\nconst float sinPer = 3.141592 / dotSpace;\nconst float frac = dotSize / dotSpace;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float varyX = (abs(sin(sinPer * fragCoord.x)) - frac);\n    float varyY = (abs(sin(sinPer * fragCoord.y)) - frac);\n    float pointX = floor(fragCoord.x / dotSpace) * dotSpace + (0.5 * dotSpace);\n    float pointY = floor(fragCoord.y / dotSpace) * dotSpace + (0.5 * dotSpace);\n\tfragColor = (texture(iChannel0, vec2(pointX, pointY) / iResolution.xy) * varyX * varyY) * (2.0/frac);\n}","name":"Image","description":"","type":"image"}]}