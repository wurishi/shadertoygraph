{"ver":"0.1","info":{"id":"X3fGRN","date":"1707182368","viewed":75,"name":"AK FYP2: Squares","username":"AKHC","description":"Repeating neon square kaleidoscope pattern.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//[[1.668 0.500 0.500] [0.500 0.500 0.500] [3.138 1.000 1.000] [0.000 0.333 0.667]]\n//http://dev.thi.ng/gradients/\n\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t)\n{\n    vec3 a = vec3(1.668, 0.500, 0.500);\n    vec3 b = vec3(0.500, 0.500, 0.500);\n    vec3 c = vec3(3.138, 1.000, 1.000);\n    vec3 d = vec3(0.000, 0.333, 0.667);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdBox( in vec2 p)\n{\n    vec2 b = vec2(5, 5);\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    //simplified: vec2 uv = (fragCoord * 2.0 - iResolution.xy) * iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    \n        for(float i = 0.0; i < 4.0; i++)// for loop\n    {\n        //space repitition\n        uv = (fract(uv * 1.5) - 0.5);\n        \n        \n        //float d = length(uv) * exp(-length(uv0));\n        float circValue = sdCircle(uv, 1.);\n        //float d = circValue * exp(-sdCircle(uv0, 1.));\n        \n        float rectValue = sdBox(uv);\n        float d = sdBox(uv0) * exp(-sdBox(uv) * 0.1);\n\n        \n        vec3 col = palette(length(uv0) + i*.5 + iTime *.1);//incorporating i adds offsets to each iteration\n\n\n        d = sin(d * 5. - iTime) / 5.;\n        d = abs(d);\n\n        d = pow(0.008 / d, 1.42);//inverse function\n        //power function modifies contrast by accentuating dark areas\n\n\n        finalColor += col * d;\n    }\n    \n\n    \n    \n    \n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}