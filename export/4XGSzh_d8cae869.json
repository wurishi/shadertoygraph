{"ver":"0.1","info":{"id":"4XGSzh","date":"1719860563","viewed":122,"name":"fake 3d rainbow swirlies","username":"int_45h","description":"made a red striped swirly effect inspired by the red swirly lines on pewdiepie's youtube banner, but now it's 3D","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["perlin"],"hasliked":0,"parentid":"X3GSzh","parentname":"pewdiepie style swirly effect"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_SLICES 8\nfloat sample_mask(vec2 uv, float offset)\n{\n    vec2 uv2 = uv*(1.+offset) - offset*.5;\n    float s = texture(iChannel0, uv2).w;\n    \n    if (uv2.y < 0. || uv2.y > 1. || uv2.x < 0. || uv2.x > 1.)\n        s = 0.;\n        \n    return s;\n}\n\nvec3 gradient(vec2 uv)\n{\n    vec3 tl = vec3(1., 0., 0.);\n    vec3 tr = vec3(1., 1., 0.);\n    vec3 bl = vec3(0., 0., 1.);\n    vec3 br = vec3(0., 1., 1.);\n    \n    //uv = uv*uv*(3.-2.*uv);\n    //uv = sqrt(uv);\n    return mix(\n        mix(bl, br, uv.x),\n        mix(tl, tr, uv.x),\n        uv.y\n    );\n}\n\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    vec2 uv = U/iResolution.xy;\n    //vec3 col = vec3(.1);\n    float offset = .1;//+.05*(.5*.5+sin(uv.x*2.*PI+iTime*2.));\n    \n    float m = 0.;\n    \n    for (int i=0; i<MAX_SLICES; i++)\n    {\n        float slice = float(i)/float(MAX_SLICES);\n        m += sample_mask(uv, offset*(1.-slice))*slice;\n    }\n    \n    //vec3 col = mix(vec3(.1), vec3(1.,.3,.4), clamp(m, 0., 1.));\n    vec3 col = mix(vec3(.1), gradient(uv), clamp(m, 0., 1.));\n    \n    O = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//float hash12(vec2 p) {return texelFetch(iChannel0, ivec2(p), 0).r;}\n\nvec2 direction(vec2 p)\n{\n    float t = hash12(p)*2.*PI;\n    return vec2(cos(t), sin(t));\n}\n\nfloat perlin2d(vec2 p)\n{\n    vec2 pg = floor(p), pc = fract(p);\n    float p0 = dot(direction(pg+vec2(0,0)), pc-vec2(0,0));\n    float p1 = dot(direction(pg+vec2(1,0)), pc-vec2(1,0));\n    float p2 = dot(direction(pg+vec2(0,1)), pc-vec2(0,1));\n    float p3 = dot(direction(pg+vec2(1,1)), pc-vec2(1,1));\n    \n    pc = pc*pc*(3.-2.*pc);\n    \n    return mix(\n        mix(p0,p1,pc.x),\n        mix(p2,p3,pc.x),\n        pc.y\n    )*.5+.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float m = sin(perlin2d(uv*8.)*PI*30.+iTime);\n    float a = 0.7;\n    float t = 0.4;\n    m = smoothstep(a,a+t,m);\n    \n    \n    fragColor = vec4(m);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define PI 3.14159265359\n\nfloat hash12(vec2 p)\n{\n\tuvec2 q = uvec2(ivec2(p)) * uvec2(1597334673U, 3812015801U);\n\tuint n = (q.x ^ q.y) * 1597334673U;\n\treturn float(n) * 2.328306437080797e-10;\n}\n","name":"Common","description":"","type":"common"}]}