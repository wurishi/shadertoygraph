{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define marchsteps 60\n#define farclip 30.0\n\nstruct sm {\n\t\t//base\n\tvec3 ro;\t//origin\n\tvec3 rd;\t//direction\n\tfloat s;\t//start distance\n\tfloat d;\t//length\n\t\t//hit\n\tvec3 ho;\t//hit pos\n\tfloat hd;\t//hit distance\n\tvec2 hi;\t//hit object info\tx=len, y=objid,  zw=uv\n\t\t//surface\n\tvec3 n;\t\t//normal\n\t\t//shading\n\tvec4 ref;\t//reflection col\n\tvec4 tra;\t//transmission col\n\tvec4 mat;\t//mat col\n\t\t//light\n\tvec3 l;\n};\n\n\t\nfloat sdTorus( vec3 p, vec2 t ) {\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\nfloat sdBox( vec3 p, vec3 b ){\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\nfloat sdSphere( vec3 p, float s ){\n    return length(p)-s;\n}\n\nfloat sdPlane( vec3 p, vec4 n ){\n  return dot(p,n.xyz) + n.w;\n}\n\nvec2 opU(vec2 a, vec2 b) {\n\treturn mix(a, b, step(b.x, a.x));\n}\n\nvec2 map(vec3 p) {\n\tvec2 ret=vec2(farclip,0.0);\n\n\t//simple obj\t\t\t\t\t\t\t\t\t\t\t\t\tid   \n\tret=opU(ret, vec2( sdTorus(p+vec3(0.0,-0.5,0.0),vec2(1.5,0.4)), 1.0) );\n\tret=opU(ret, vec2( sdBox(p,vec3(0.5,2.0,0.5)), 2.0) );\n\t\tret=opU(ret, vec2( sdSphere(p+vec3(2.0,0.0,0.0), 0.5), 3.0) );\n\t\tret=opU(ret, vec2( sdSphere(p+vec3(-2.0,0.0,0.0), 0.5), 3.0) );\n\t\tret=opU(ret, vec2( sdSphere(p+vec3(0.0,0.0,2.0), 0.5), 3.0) );\n\t\tret=opU(ret, vec2( sdSphere(p+vec3(0.0,0.0,-2.0), 0.5), 3.0) );\n\tret=opU(ret, vec2( sdPlane(p, vec4(0.0,1.0,0.0,0.5)), 4.0) );\n\n\treturn ret;\n}\n\nvec3 normal(vec3 p ) {\n\tvec3 e=vec3(0.01,-0.01,0.0);\n\treturn normalize( vec3(\te.xyy*map(p+e.xyy).x +\te.yyx*map(p+e.yyx).x +\te.yxy*map(p+e.yxy).x +\te.xxx*map(p+e.xxx).x));\n}\n\n\nvoid getmc(inout sm q) {\n\tvec4 col=vec4(0.0);\n\tif(q.hi.y==1.0) {\n\t\t\t// instead color add texture into color\n\t\t\tvec3 tnor=normal(q.ho);\n\t\t\t\tvec3 a1=texture(iChannel0, q.ho.yz).xyz;\n\t\t\t\tvec3 a2=texture(iChannel0, q.ho.zx).xyz;\n\t\t\t\tvec3 a3=texture(iChannel0, q.ho.xy).xyz;\n\t\t\tq.mat=vec4( a1*abs(tnor.x) + a2*abs(tnor.y) + a3*abs(tnor.z), 1.0);\n//\t\t\tq.mat=vec4( tmap(iChannel0, q.ho),1.0);  \n\t\t\tq.ref.w=0.7;\t\t\t\t  \n\t}\n\tif(q.hi.y==2.0) {\n\t\t\tfloat a=sin(iTime*0.1);\n\t\t\tfloat b=cos(iTime*0.1);\n\t\t\tq.mat=vec4( a,b,(a+b)*0.3+a*0.7, 1.0);\n\t\t\tq.ref.w=1.0;\t\t\t\t\t// w=reflect strength\n\t}\n\tif(q.hi.y==3.0) {\n\t\t\tvec3 tnor=normal(q.ho);\n\t\t\t\tvec3 a1=texture(iChannel1, q.ho.yz).xyz;\n\t\t\t\tvec3 a2=texture(iChannel1, q.ho.zx).xyz;\n\t\t\t\tvec3 a3=texture(iChannel1, q.ho.xy).xyz;\n\t\t\tq.mat=vec4( a1*abs(tnor.x) + a2*abs(tnor.y) + a3*abs(tnor.z), 1.0);\n\t\t\tq.ref.w=0.5;\n\t}\t\n\tif(q.hi.y==4.0) {\n\t\t\tq.mat=vec4( texture(iChannel2, q.ho.xz).xyz, 1.0);\n//\t\t\tq.mat=vec4(0.5,0.5,0.5,1.0);\n\t\t\tq.ref.w=0.5;\n\t}\t\n}\n\nvec2 rot(vec2 k, float t) {\n    return vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n}\n\n\n\nvoid march(inout sm q, int steps) {\n\tq.hd=q.s;\n\tfor(int i=0; i<marchsteps; i++) {\n\t\tq.ho=q.ro+q.rd*q.hd;\n\t\tq.hi=map(q.ho);\n\t        if((abs(q.hi.x) < 0.01) || (q.hi.x >= q.d) || (i > steps))  { break; }\n\t\tq.hd+=q.hi.x;\n\t}\n\tif (q.hd > q.d) { q.hi.y=0.0; }\n}\n\nfloat caos(vec3 p, vec3 n, float s, float m){\n\tfloat f=1.0;\n\tfloat d = 0.0;\n\tfor(int i=0; i<=10; i++) {\n\t\tfloat x=map(p+n*d).x;\n\t\tf=min(f , f*x*m/f );\n\t\td+=s;\n\t}\n\treturn f;\t\t\n}\n\nvec3 addcol(vec3 a, vec3 b) {\n\treturn a+b-a*b;\n}\n\nvec3 colorize(sm q) {\t\n\tfloat amb =0.7;//+0.5*nor.y;\t\t\n\tfloat dif =0.2*clamp(dot(q.n, q.l), 0.0,1.0);\n\tfloat bac =0.1*clamp(dot(q.n,-q.l), 0.0,1.0);\n\tfloat rim =0.1*pow(1.+dot(q.n,q.rd), 5.0);\n\tfloat spe =pow(clamp( dot( q.l, reflect(q.rd,q.n) ), 0.0, 1.0 ) ,32.0 );\n\tfloat ao=caos(q.ho, q.n, 0.4, 0.1);\n\tfloat sh=caos(q.ho, q.l, 0.1, 1.0);\n\n\tvec3 col  = (amb+dif+sh+ao+bac)*vec3(1.);\n\t\t col *= q.mat.xyz;\n\t\t col += (rim+spe)*vec3(1.);\n\tif (q.ref.w!=0.0) col=addcol(col, q.ref.xyz*q.ref.w );\n    return col;\n}\n\nvec3 background() {\n\treturn vec3(0.1,0.2,0.3);\n}\n\n\nvoid getreflection(inout sm m) {\n\tsm r;\n\tr.l=m.l;\n\t\n\tr.ro=m.ho;\n\tr.rd=reflect(m.rd,m.n);\n\n\tr.s=.1/abs(dot(r.rd,m.n));\n\tr.d=m.d*0.5;\n\t\n\tmarch(r,marchsteps);\n\n\tvec4 col=vec4(0.0);\n\tif (r.hi.y<0.5) {\n\t\t//miss..no reflection ->background enable if you want background to reflect too\n//\t\tcol.xyz=background()*0.3;\n\t} else {\n\t\tr.n=normal(r.ho);\n\t\tgetmc(r);\n\t\tr.ref=vec4(0.0);\n\t\tcol.xyz=colorize(r);\n\t}\n\tm.ref.xyz=col.xyz;\n}\n\nvec3 render(inout sm m) {\n\tmarch(m,marchsteps);\n\t\n\tvec3 col=vec3(0.0);\n\tif (m.hi.y<0.5) {\n\t\t//ray miss all objects -> background\n\t\tcol=background();\n\t} else {\n\t\t//we have a hit\n\t\tm.n=normal(m.ho);\n\t\tgetmc(m);\n\t\tgetreflection(m);\n\t\tcol=colorize(m);\t\t\n\t}\nreturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tsm m;\n\tm.ro=vec3(0.0, 0.0, -3.0);\n\tm.rd=normalize( vec3( (-1.0+2.0*fragCoord.xy/iResolution.xy)*vec2(iResolution.x/iResolution.y,1.0), 1.0));\n\t\n\tm.l=normalize(vec3(-1.0, 1.0, 0.0));\n\t\n\tvec2 mouse=iMouse.xy/iResolution.xy;\n\t\n\tmouse.x+=iTime*0.2;\n\tmouse.y+=cos(iTime*0.2);\n\t\n\tm.ro.xz=rot(m.ro.xz, mouse.x);   m.ro.yz=rot(m.ro.yz, mouse.y);\n\tm.rd.xz=rot(m.rd.xz, mouse.x);   m.rd.yz=rot(m.rd.yz, mouse.y);\n\tm.l.xz=rot(m.l.xz, mouse.x);   m.l.yz=rot(m.l.yz, mouse.y);\n\n\tm.s=0.0;\n\tm.d=farclip;\n\t\n\tvec3 col=render(m);\n\n\tfragColor=vec4( col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdSGRG","date":"1389666738","viewed":456,"name":"reflectoid","username":"avix","description":"just playin around a bit with textures and reflections\nnothing special","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["3d","textures","reflections"],"hasliked":0,"parentid":"","parentname":""}}