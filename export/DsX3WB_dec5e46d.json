{"ver":"0.1","info":{"id":"DsX3WB","date":"1666791206","viewed":198,"name":"Random Scatter Points in Radius","username":"Falconssj","description":"Examples of scattering random points in a circle.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["circle","point","scatter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy ; \n    fragColor = texture(iChannel0,uv);\n \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define TWOPI  2.*3.1415926535897932384626433832795\n\n\nfloat random(float st){\n    return fract(sin(dot(st, 15.45585)) * fract(iTime) *435114.18745);\n}\n\n\nfloat drawcircle (vec2 uv, vec2 p, float r)\n{\nreturn step(length(uv - p), r);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    if(iFrame == 1) {\n    \n    //Centered UVs\n    vec2 uv = ( fragCoord -.5* iResolution.xy ) / iResolution.y;\n    \n    // Points Count / Size\n    float px_size = 0.001;\n    int count = 5000;\n    \n    //Area Circles\n    float radius = 0.15;    \n    float alpha = 0.075;\n    float circle = 0.0;\n    \n    //ID Coords\n    vec2 I = floor( vec2(3,2) * fragCoord/iResolution.xy );\n    \n    \n    //Circle 1 (Top Left)\n    //SQRT of Random\n    if (I==vec2(0,1)){\n        \n        circle = drawcircle(uv, vec2(-0.6,0.25), radius) * alpha; \n       \n        for (int i = 0; i < count; i ++) {     \n       \n            float a = float(i);  \n            a = random(a); \n            float angle = a * TWOPI;         \n            float rd = sqrt(random(a));        \n            float x =  -0.6 + rd * radius * cos(angle);\n            float y =  0.25 + rd * radius * sin(angle);\n            circle = max(drawcircle(uv,vec2(x,y),px_size),circle);\n            }\n        \n    }\n    \n    \n    //Circle 2 (Top Mid)\n    //just Random\n    if (I==vec2(1,1)){\n        \n        circle = drawcircle(uv, vec2(-0.0,0.25), radius) * alpha;\n            \n        for (int i = 0; i < count; i ++) {     \n       \n            float a = float(i); \n            a = random(a);\n            float angle = a * TWOPI;      \n            float rd = random(a);        \n            float x =  rd * radius * cos(angle);\n            float y =  0.25 + rd * radius * sin(angle);\n            circle = max(drawcircle(uv,vec2(x,y),px_size),circle);\n            }\n        \n    }\n    \n        \n    //Circle 3 (Top Right)\n    //1 /  SQRT of Random\n    if (I==vec2(2,1)){\n        \n        circle = drawcircle(uv, vec2(0.6,0.25), radius) * alpha;\n            \n        for (int i = 0; i < count; i ++) {     \n       \n            float a = float(i);\n            a = random(a); \n            float angle = a * TWOPI;       \n            float rd = 1. / sqrt(random(a));        \n            float x =  0.6+ rd * radius * cos(angle);\n            float y =  0.25 + rd * radius * sin(angle);\n            circle = max(drawcircle(uv,vec2(x,y),px_size),circle);\n            }\n        \n    }\n    \n    \n    //Circle 4 (Bottom Left)\n    //Using Pow   \n    if (I==vec2(0,0)){\n        \n        circle = drawcircle(uv, vec2(-0.6,-0.25), radius) * alpha;\n            \n        for (int i = 0; i < count; i ++) {     \n       \n            float a = float(i);\n            a = random(a); \n            float angle = a * TWOPI;                   \n            float  rd =  pow(1.-pow(random(a),10.),10.);    \n            float x =  -0.6 + rd * radius * cos(angle);\n            float y =  -0.25 + rd * radius * sin(angle);\n            circle = max(drawcircle(uv,vec2(x,y),px_size),circle);\n            }\n        \n    }\n           \n       \n    //Circle 5 (Bottom Middle)\n    //(Rd = Radius) \n    if (I==vec2(1,0)){\n        \n        circle = drawcircle(uv, vec2(0.0,-0.25), radius) * alpha;\n            \n        for (int i = 0; i < count; i ++) {     \n       \n            float a = float(i);  \n            a = random(a);  \n            float angle = a * TWOPI;                  \n            float  rd =  1.;    \n            float x =  rd * radius * cos(angle);\n            float y =  -0.25 + rd * radius * sin(angle);\n            circle = max(drawcircle(uv,vec2(x,y),px_size),circle);\n            }\n        \n    }\n    \n    \n    //Circle 6 (Bottom Right)\n    //(same random value on Angle)\n     if (I==vec2(2,0)){\n        \n        circle = drawcircle(uv, vec2(0.6,-0.25), radius) * alpha;\n            \n        for (int i = 0; i < count; i ++) {     \n       \n            float a = float(i);  \n            a = random(a);  \n            float angle = a * TWOPI * 3.;                  \n            float  rd = a;  \n            float x =  0.6 + rd * radius * cos(angle);\n            float y =  -0.25 + rd * radius * sin(angle);\n            circle = max(drawcircle(uv,vec2(x,y),px_size),circle);\n            }\n        \n    }\n    \n    //Final Output only when iFrame=0        \n    fragColor = vec4(circle);\n    \n    }\n    \n    else{\n    //Fetch from the iChannel0 what was calculate on frame0\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);}  \n \n}","name":"Buffer A","description":"","type":"buffer"}]}