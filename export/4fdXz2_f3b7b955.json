{"ver":"0.1","info":{"id":"4fdXz2","date":"1714168544","viewed":63,"name":"SDF for android button ","username":"OFFmind","description":"Experiments for Android RuntimeShaders","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MULT 3. \n\nfloat sdRoundedBox( in vec2 p, in vec2 b, in vec4 r )\n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\n\nvec3 GetCheckerBg(in vec2 uv) {\n    float time = iTime * 0.2;\n    vec2 rv = uv * mat2(cos(time), sin(time), -sin(time), cos(time));\n    rv *= 1. + 0.1 * sin(iTime);\n    \n    vec3 checker = fract(rv*5.).x > 0.5 ? vec3(.04)*MULT : vec3(.01)*MULT;\n    return checker += fract(rv*5.).y > 0.5 ? vec3(.04)*MULT : vec3(.01)*MULT;\n}\n \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - .5;\n    uv.x *= iResolution.x/iResolution.y;\n  \n    vec3 grad = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec2 d = vec2(iResolution.x/iResolution.y,0.5);\n    \n    vec4 txt = texture(iChannel0, uv);\n    \n    vec4 r = vec4(0.5);\n   \n    uv*=2.5;\n    \n    float shadow = clamp(1./(20.*sdRoundedBox(uv,d,r)),0.,1.);\n    float content = 1.-step(0.05,sdRoundedBox(uv,d,r));\n    \n    float circle = clamp(shadow-content,0.,1.);\n    \n    vec3 col = mix(GetCheckerBg(uv),grad,circle);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}