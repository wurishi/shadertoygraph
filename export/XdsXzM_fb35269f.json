{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tuv -= 0.5;//center it\n\tuv *= 2.0;//screen domain is now -1 to 1\n\tuv.x *= iResolution.x/iResolution.y; //correct for aspect ratio by varying length of horizontal axis\n\t\n\tvec2 pA = vec2(1.0*sin(iTime),\t\t1.0*cos(iTime));\n\tvec2 pB = vec2(1.0*sin(iTime*1.7),\t\t0.8*cos(iTime*1.3));\n\t/* my original code\n\tfloat cA = length(uv-pA);\n\tcA = mod(cA*3.0,1.0);\n\tif(cA<0.5){cA=0.;}else{cA=1.;}\n\t\n\tfloat cB = length(uv-pB);\n\tcB = mod(cB*3.0,1.0);\n\tif(cB<0.5){cB=0.;}else{cB=1.;}\n\t\n\tfloat c = mod((cA + cB),2.); //GLSL has no XOR so I improvised this stupid thing\n\t*/\n\t\n\t// mmalex's version\n\tfloat cA = length(uv-pA);\n\tfloat cB = length(uv-pB);\n\t\n\tfloat c = sign(sin(cA*15.))*sign(sin(cB*15.));\n\t\n\tfragColor = vec4(vec3(c),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdsXzM","date":"1398490879","viewed":209,"name":"Infini-chess","username":"squeakyneb","description":"Just a quickie I whipped up, as inspired by Mudlord's \"they took mah hyperspace\".","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","chess","mudlord"],"hasliked":0,"parentid":"","parentname":""}}