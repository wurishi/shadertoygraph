{"ver":"0.1","info":{"id":"4f2fWD","date":"1724945150","viewed":64,"name":"\"Hilbert Color\" Visualizer","username":"sed4906","description":"The height of each bar is transformed into a color using a 3D Hilbert Curve.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["audio","visualizer","hilbertcurve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\"Hilbert Color\" Visualizer by: SED4906 - 2024-08-29\nBased on https://www.shadertoy.com/view/ftVSWD\nand...\n\n2D LED Spectrum - Visualiser\nBased on Led Spectrum Analyser by: simesgreen - 27th February, 2013 https://www.shadertoy.com/view/Msl3zr\n2D LED Spectrum by: uNiversal - 27th May, 2015\nCreative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n*/\n\nconst vec3 offsets[8] = vec3[8](\nvec3(0,0,0), // 000\nvec3(1,0,0), // 001\nvec3(1,1,0), // 011\nvec3(0,1,0), // 010\nvec3(0,1,1), // 110\nvec3(1,1,1), // 111\nvec3(1,0,1), // 101\nvec3(0,0,1)  // 100\n);\n\nvec3 HilbertColor(float c) {\n    vec3 coord = vec3(0);\n    \n    float gray = c;\n    int iters = 1;\n    while (gray != 0.0) {\n        int index = int(gray * 8.0) % 8;\n        coord += offsets[index] / float(1 << iters);\n        iters++;\n        gray = fract(gray * 8.0);\n    }\n    \n    return coord;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec2 p;\n    p.x = uv.x;\n    p.y = uv.y;\n\n    // read frequency data from first row of texture\n    float fft  = texture( iChannel0, vec2(p.x,0.0) ).x;\n\n    // led color\n    vec3 color = HilbertColor(fft);\n\n    // mask for bar graph\n    float mask = (p.y < fft) ? p.y : 0.1;\n    if (abs(p.y - fft) < 0.025) {\n        mask = 1.0;\n    }\n\n    vec3 barColor = color*mask;\n\n    // output final color\n    fragColor = vec4(barColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}