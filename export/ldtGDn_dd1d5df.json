{"ver":"0.1","info":{"id":"ldtGDn","date":"1449092133","viewed":790,"name":"hsv orbs","username":"Tetane","description":"Circle of dots using HSV color vector.","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["light","hsv","dots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define pi 3.14159\nconst float dotsnb = 30.0; // Number of dots\n\nvec3 hsv2rgb (vec3 hsv) { // from HSV to RGB color vector\n\thsv.yz = clamp (hsv.yz, 0.0, 1.0);\n\treturn hsv.z * (1.0 + 0.63 * hsv.y * (cos (2.0 * 3.14159 * (hsv.x + vec3 (0.0, 2.0 / 3.0, 1.0 / 3.0))) - 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat mx = max(iResolution.x, iResolution.y);\n\tvec2 scrs = iResolution.xy/mx;\n\tvec2 uv = vec2(fragCoord.x, iResolution.y-fragCoord.y)/mx;\n\tvec2 m = iMouse.xy/mx;\n    \n    vec2 pos  = vec2(0.0); \t\t\t// Position of the dots\n\tvec3 col = vec3(0.0); \t\t\t// Color of the dots\n\tfloat radius = 0.15;\t\t\t// Radius of the circle\n\tfloat intensity = 1.0/500.0;\t// Light intensity\n\t\n\tfor(float i = 0.0 ; i<dotsnb ; i++){\n\t\t\n\t\tpos = vec2(\tradius*cos(2.0*pi*i/dotsnb+iTime),\n\t\t\t   \t\tradius*sin(2.0*pi*i/dotsnb+iTime*2.0/3.0));\n\t\t\n\t\tcol += hsv2rgb(vec3(i/dotsnb, distance(uv,scrs/2.0 + pos)*(1.0/intensity), intensity/distance(uv,scrs/2.0 + pos)));\n\t}\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}