{"ver":"0.1","info":{"id":"MfyXzc","date":"1715535752","viewed":68,"name":"Gradient Glowing Circles","username":"han_tree","description":"Thanks to the great tutorial by kishimisu:\nAn introduction to Shader Art Coding\nhttps://www.youtube.com/watch?v=f4s1h2YETNY&list=PL9Zb80ovNLWGRFZVL4LcckTWnEGN73dFS&index=1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.30, 0.20, 0.20);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n{\n    // Set the coordinate center to the canvas center, and make sure the canvas won't be stretched when the ratio changes\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y; \n\n    // Draw a circle with the radius changing\n    float d = length(uv);\n    \n    //Set the color to gradient color \n    vec3 col = palette (d + iTime);\n    \n    d = sin(d*10. + iTime)/10.; \n    d = abs(d);\n    \n    d = 0.02/d; // similar to smoothstep function\n    \n    col *= d;\n    \n    \n    fragColor = vec4(col,1);\n}\n","name":"Image","description":"","type":"image"}]}