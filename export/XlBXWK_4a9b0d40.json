{"ver":"0.1","info":{"id":"XlBXWK","date":"1446377642","viewed":174,"name":"for coco_gigpn","username":"Dermenslof","description":"comment","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["polaire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define EPS 0.004\n\n#define BUTTERFLY\n\nvec2 rot(in vec2 uv, float a)\n{\n    a = radians(a);\n    float c, s;\n    c = cos(a);\n    s = sin(a);\n    return vec2(uv.x * c + uv.y * s, uv.x * -s + uv.y * c);\n}\n\nvec3 f(in vec2 uv, in float radius)\n{\n    for (float a=0.0; a < 6.28 * 2.; a += .01)\n    {\n        float co = cos(a);\n        float co4 = cos(4. * a);\n    \tfloat p = radius * (exp(co) - 2. * co4 - pow(sin(a / 12.), 5.));\n        //vec2 xy = p * vec2(co, sin(a));\n    \tfloat x = abs(p * co);\n    \tfloat y = abs(p * sin(a));\n    \n        if (abs(uv.x) < x + EPS && abs(uv.x) > x - EPS && abs(uv.y) < y + EPS && abs(uv.y) > y - EPS)\n            return vec3(abs(rot(vec2(x, abs(x - y)), iTime * 50.)), y);\n    }\n    return vec3(0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = 2. * fragCoord.xy / iResolution.xy - 1.;\n    #ifndef BUTTERFLY\n    \tuv.x *= iResolution.x / iResolution.y;\n    #else\n    \tuv.x *= ((abs(sin(mod(iTime * 2.0, 360.))) * 2. + 1.) * iResolution.x) / iResolution.y;\n    \tuv.y += sin(uv.x + 1.56) - .8;\n\t#endif\n    fragColor = vec4(f(uv, .2), 1.0);\n}","name":"","description":"","type":"image"}]}