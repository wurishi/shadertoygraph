{"ver":"0.1","info":{"id":"llcyDH","date":"1532404293","viewed":1313,"name":"hexagon energy","username":"laserdog","description":"trippy energy effect","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["hexagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(r,v,a) smoothstep(a/iResolution.y,0.,abs(v-(r)))\n\nconst vec2 s = vec2(1, 1.7320508); // 1.7320508 = sqrt(3)\n\nfloat calcHexDistance(vec2 p)\n{\n    p = abs(p);\n    return max(dot(p, s * .5), p.x);\n}\n\nvec2 calcHexOffset(vec2 uv)\n{\n    vec4 hexCenter = round(vec4(uv, uv - vec2(.5, 1.)) / s.xyxy);\n    vec4 offset = vec4(uv - hexCenter.xy * s, uv - (hexCenter.zw + .5) * s);\n    return dot(offset.xy, offset.xy) < dot(offset.zw, offset.zw) ? offset.xy : offset.zw;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n\tvec2 hexInfo = calcHexOffset(uv * 3.);\n    \n    float a = cos(2. * (2. * length(uv) - iTime));\n\tfloat h = calcHexDistance(hexInfo);\n\n\tfragColor.g = S(abs(sin(h * a * 10.)), 1., 12.) + .3 * S(h, .45, 20.) + .15\n        + .3 * smoothstep(.25 + 12./iResolution.y, .25, h);\n}","name":"Image","description":"","type":"image"}]}