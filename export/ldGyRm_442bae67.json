{"ver":"0.1","info":{"id":"ldGyRm","date":"1521433862","viewed":142,"name":"Ripple_01","username":"stox","description":"Simple ripple effect.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float maxTime = 10.0;\nconst float timeFactor = 4.0;\nconst float a = 0.5;\nconst float b = 1.0;\n\nfloat XYT (float x, float y, float t)\n{\n\t//return sqrt(pow(x,2.0) + pow(y,2.0) + pow(t-maxTime,2.0));\n    float limit = 5.0*(log(t + 1.7 * ((maxTime - t)/maxTime)));\n    float extent = sqrt(x*x + y*y);\n    if (extent > -limit && extent < limit)\n    {\n    \treturn sqrt(pow(x,2.0) + pow(y,2.0) + pow(t-maxTime,2.0));\n    }\n    else\n    {\n        return 0.5;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - (iResolution.xy/2.0)) * 0.07;\n\n    float time = iTime * timeFactor;\n    if (time > maxTime){\n        time = maxTime;\n    }\n    \n    \n    \n    float coefficient = a * ((maxTime-time)/maxTime) * (-log(XYT(uv.x, uv.y,time))+2.1);\n    //float value = cos(b*(sqrt(XPlusT(uv.x, uv.y,time)+2.0)*XPlusT(uv.x, uv.y,time)*2.0))*time*2.0;\n   \tfloat value = coefficient * (cos(b*sqrt(XYT(uv.x, uv.y,time)+2.0) * XYT(uv.x, uv.y,time) * 2.0)+1.0)* 0.5 *(time - maxTime);\n\n    \n    // Time varying pixel color\n    vec3 col = vec3(value,value,value);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}