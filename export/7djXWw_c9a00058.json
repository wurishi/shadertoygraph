{"ver":"0.1","info":{"id":"7djXWw","date":"1620407472","viewed":241,"name":"Draw an arbitrary line","username":"kass","description":"draw line\nrotate : click","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"4dfBRf","parentname":"[TUT] Camera System"},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p) {\n\tfloat d = DistLine(ro, rd, p);\n    d = smoothstep(.06, .05, d);\n    return d;\n}\n\nfloat DistLines(vec3 ro, vec3 rd, vec3 a1, vec3 a2){\n    vec3 m1 = rd;\n    vec3 m2 = a2-a1;\n    \n    float A = length(cross(m1, m2));\n    float B = dot(ro - a1, cross(m1 ,m2));\n    float d = B/A;\n    \n    return abs(d);\n}\n\nfloat DrawLine(vec3 ro, vec3 rd, vec3 p1, vec3 p2) {\n    float d = DistLines(ro,rd,p1,p2); \n    return d = smoothstep(.01, .0, length(d));\n}\n\nfloat DistPlane(vec3 ro, vec3 rd, vec3 n, float h){\n    vec3 c = ro + (h - dot(n,ro))/dot(rd,n) * rd; \n    return length(ro-c);\n}\n\nfloat DistPlaneXZ(vec3 ro, vec3 rd, vec3 n, float h){\n    vec3 c = ro + (h - dot(n,ro))/dot(rd,n) * rd; \n    return length(ro.xz-c.xz);\n}\n\nvec3 Intersection(vec3 ro, vec3 rd, vec3 n, float h){\n    vec3 c = ro + (h - dot(n,ro))/dot(rd,n) * rd; \n    return c;\n}\n\nfloat DrawPlane(vec3 ro, vec3 rd, vec3 n, float h){\n    float d = DistPlane(ro ,rd, n, h);\n    return pow((1.0-max(1.,d)*0.14),2.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy; // 0 <> 1\n    uv -= .5;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(0.5 + 3.*sin(-iMouse.x*0.03), (6.0-iMouse.y*0.03), 0.5 + -3.*cos(-iMouse.x*0.03));\n    vec3 lookat = vec3(.5);\n    float zoom = 1.0;\n    \n    vec3 f = normalize(lookat-ro);\n    vec3 r = cross(vec3(0., 1., 0.), f);\n    vec3 u = cross(f, r);\n    \n    vec3 c = ro + f*zoom;\n    vec3 i = c + uv.x*r + uv.y*u;\n    vec3 rd = i-ro;\n    \n    float d = 0.;\n    float red = 0.;\n    float green = 0.;\n    float blue = 0.;\n    \n    float light = DistPlaneXZ(ro, rd, vec3(0., 1., 0.), 0.);\n    vec3 inte = Intersection(ro, rd, vec3(0., 1., 0.), 0. );\n    vec4 pic = texture(iChannel0,inte.xz);\n    \n    d += DrawPoint(ro, rd, vec3(0., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 1.));\n    \n    red += DrawLine(ro, rd, vec3(0., 0., 0.), vec3(1.,0.,0.));\n    green += DrawLine(ro, rd, vec3(0., 0., 0.), vec3(0.,0.,1.));\n    blue += DrawLine(ro, rd, vec3(0., 0., 0.), vec3(0.,1.,0.));\n    \n    red += DrawLine(ro, rd, vec3(0.5, 1.0, 0.5), vec3(0.5 + 0.74*cos(t),0.0,0.5 + 0.74*sin(t)));\n    red += DrawPoint(ro, rd, vec3(0.5 + 0.74*cos(t),0.0,0.5 + 0.74*sin(t)));\n\n\n\tfragColor = vec4(red,green,blue,0.) + d  + vec4(pic.xyz,1.0)*1./light;\n}","name":"Image","description":"","type":"image"}]}