{"ver":"0.1","info":{"id":"MccSRj","date":"1714140976","viewed":66,"name":"RSL_PolarCoordinateTest","username":"damotime","description":"Testing different polar coordinate","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI_2 6.2831\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    \n    float angle = atan(uv.x, uv.y);\n    float dist = length(uv)*2.0;\n\n    vec2 uvPolar = vec2(angle , dist);\n    vec2 uvLogPolar = vec2(angle , log(dist)); \n    vec2 uvInvertedPolar = vec2(angle , 1.0/dist); \n    \n    vec2 uvCoord = vec2(mix(uvPolar, uvInvertedPolar, sin(abs(iTime*2.5))));\n\n    vec2 uv2 = vec2(uvCoord.x + sin(iTime*1.25), uvCoord.y + iTime*2.);\n    \n    vec3 texColor = texture(iChannel0,uv2).xyz;\n    \n    fragColor = vec4(texColor,0);\n}","name":"Image","description":"","type":"image"}]}