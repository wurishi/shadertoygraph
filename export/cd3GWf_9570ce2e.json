{"ver":"0.1","info":{"id":"cd3GWf","date":"1677890068","viewed":295,"name":"Station [349 Chars]","username":"Xor","description":"A tiny shader for generating an infinite space station","likes":34,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","shadow","space","golf","station"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    A tiny shader for generating an infinite space station\n    \n    Tweet: twitter.com/XorDev/status/1631809422866489344\n    Twigl: t.co/2YcB6RBXOJ\n    \n    <512 Chars playlist: shadertoy.com/playlist/N3SyzR\n*/\n\n//Rotation matrix\n#define R mat2(cos(vec4(0,11,33,0)\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    //Resolution for scaling\n    vec3 q=iResolution,\n    //Camera origin\n    p=-.5-vec3(iTime,O*=0.),\n    //Ray direction vector\n    v=vec3(I+I,q.y)-q;\n    //Rotate downward\n    v.yz *= R-.7));\n    \n    //Raymarch\n    for(float d,i,l=0.; l++<2e2; p-=v/length(v)*d)\n    //Fractal SDF loop\n    for(q=p,d=-q.y,i=58.; i>.05; i*=.5)\n        //Rotate each octave\n        q.xz*=R+.5)),\n        //Subtract cubes\n        d=max(d,min(min(q=i*.9-abs(mod(q,i+i)-i),q.y).x,q.z)),\n        //Raymarch shadow after 100 iterations (@zozuar)\n        l>1e2 ? d+=1e-5,v/=v,O : O+=max(5e-4-d*d,0.);\n    \n    //Shadow and AO trick also by @zozuar\n    O *= log(7.-p.y)*.1;\n }","name":"Image","description":"","type":"image"}]}