{"ver":"0.1","info":{"id":"NlScWm","date":"1649756700","viewed":58,"name":"glsl gotcha: pow(x < 0, y)","username":"TLescoat","description":"pow(x,4) [TOP] vs x*x*x*x [BOTTOM]\n\nGLSL compiler might recognize that pow(x, 2k) is always valid (even for negative values) but if it does not, then the result is undefined.\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["undefined","pow","negative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// top   : pow(x, 4)\n// bottom: x*x*x*x\n//\n// Per spec, pow(x, e) is undefined if x < 0, as it is probably implemented as exp(e * log(x))\n//\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float r = uv.x * 2.0 - 1.0;\n    bool use_pow = uv.y > 0.5;\n    float p = use_pow ? pow(r, 4.0) : r * r * r * r;\n    \n    if(abs(uv.y - 0.5) <= 0.02)\n    {\n        fragColor = vec4(use_pow ? 0.0 : 1.0, use_pow ? 1.0 : 0.0, 0.0, 1.0);\n    }\n    else\n    {\n        fragColor = vec4(vec3(p), 1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}