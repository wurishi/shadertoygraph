{"ver":"0.1","info":{"id":"DdlfRf","date":"1689360616","viewed":46,"name":"Imitation Riley 00","username":"gunthern","description":"Imitation of Bridget Riley's \"High Sky,\" 1991","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["opart","bridgetriley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float steps = 10.0;\nfloat lean = -1.5;\nfloat randomSeed = 3.14;\n\n// Random function from the Book of Shaders - returns random value between 0 and 1\nfloat random (in vec2 uv) {\n    \n    return clamp(fract(sin(dot(uv.xy, vec2(12.98,78.23))) * randomSeed), 0.25, 1.0);\n    \n}\n\nvec4 fC( in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float uvyLean = uv.y + uv.x * lean;\n    vec2 uvFloor = floor(vec2(uv.x, uvyLean) * steps) * (1.0/steps);\n\n    vec3 col = vec3(random(uvFloor + iTime*0.0001), random(uvFloor * 2.0 + iTime*0.0001), random(uvFloor * 3.0 + iTime*0.0001));\n\n    // Output to screen\n    return vec4(col,1.0);\n}\n\n// AA from https://www.shadertoy.com/view/wtjfRV\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0);\n    float A = 4.,  // Change A to define the level of anti-aliasing (1 to 16) ... higher numbers are REALLY slow!\n          s = 1./A, x, y;\n    \n    for (x=-.5; x<.5; x+=s) for (y=-.5; y<.5; y+=s) fragColor += min ( fC(vec2(x,y)+fragCoord), 1.0);\n        \n\tfragColor /= A*A;\n}","name":"Image","description":"","type":"image"}]}