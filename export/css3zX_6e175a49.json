{"ver":"0.1","info":{"id":"css3zX","date":"1666562466","viewed":95,"name":"Sinusoidal Noise","username":"Gamma39er","description":"There has to be a way...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sinenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec2 csqr(vec2 p) { return vec2(p.x*p.x-p.y*p.y, 2.0*p.x*p.y); }\n\nmat3 rotZ(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    \n    \n    return mat3(c, -s, 0.0, s,c,0.0, 0.0,0.0,1.0);\n}\n\nmat3 rotX(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    \n    return mat3(1.0,0.0,0.0,    0.0,c,-s,   0.0,s,c);\n}\n\nfloat noise(vec3 p) {\n    float x = 0.0;\n    float y = 0.0;\n    float z = 0.0;\n    \n    float ret = 0.0;\n    \n    mat3 rotation = rotX(0.21)*rotZ(0.451);\n    mat3 scale = mat3(0.9,0.0,0.0, 0.0,1.1,0.0,  0.0,0.0,1.1)*rotation;\n    \n    for (int i = 1; i < 7; i++) {\n        //c = vec3(csqr(p.xy), p.z);\n        \n        float i0 = float(i);\n        \n        scale *= rotation;\n        \n        p = rotZ(i0/2.0)*p*scale;\n        \n        p = rotX(i0/2.0)*p*scale;\n\n        float x1 = sin(sqrt(2.0)*i0*p.x + i0);\n        float x2 = sin(sqrt(5.0)*i0*p.x + i0*i0);\n        \n        float y1 = sin(PI*i0*p.y - i0*i0);\n        float y2 = sin(sqrt(3.0)*i0*p.y - i0);\n        \n        float z1 = sin(PI/2.0*i0*p.z + i0*i0);\n        float z2 = sin(sqrt(7.0)*i0*p.z - i0);\n        \n        ret += (abs(x1+y1+z1) + abs(x2 + y2 + z2))/((i0+1.0)*(i0+1.0));\n    }\n    \n    return ret/1.618;\n}\n\nfloat crazynoise(vec3 uvw) {\n    vec3 col = vec3(0.0);\n    \n    vec3 uvw2 = vec3(noise(uvw), noise(uvw+100.0), noise(uvw+50.0));\n    return noise(3.0*uvw2);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n   \n    float anim = sin(iTime);\n    \n    vec3 uvw = vec3(3.0*uv,0.0);\n    \n    vec3 uvw2 = vec3(noise(uvw), noise(uvw+100.0), noise(uvw+50.0));\n    \n    col += pow(crazynoise(uvw),3.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}