{"ver":"0.1","info":{"id":"tscXRf","date":"1572489342","viewed":281,"name":"kNearest in 2D Grid","username":"videep","description":"This shader demonstrates finding of the nearest neighbours to a grid cell.\nYou can change the position of the grid cell by setting startPos variable.\nYou can increase the steps and change the finding of the kNearest neighbours using the _Step var.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","checker","neighbours","knearest","neigbors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 _GridSize = vec2(16.0, 16.0);\nvec2 _InputPos = vec2(5.0, 5.0);\nint _Step = 3 ;\n\nfloat isNearest(vec2 pt)\n{\n    bool val = false;\n    for (float x = (-0.5*float(_Step)); x <= (0.5*float(_Step)); x+=0.5)\n    {\n        for (float y = (-0.5*float(_Step)); y <= (0.5*float(_Step)); y+=0.5)\n        {\n            if (pt.x == _InputPos.x+x && pt.y == _InputPos.y+y)\n            {\n                if(_Step == 0)\n                    return 1.0/(float(_Step)+1.0);\n                else\n                    return float(_Step)/(float(_Step) + abs(x)+abs(y));\n            }\n        }\n    }\n    return 0.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord.x *= _GridSize.x;\n    fragCoord.y *= _GridSize.y;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0,0.0,0.0);\n    vec2 floorVal = vec2(floor(uv.x), floor(uv.y))/2.0;\n    float checkerVal = fract(floorVal.x+floorVal.y)*2.0;\n    \n    float isNear = isNearest(floorVal);\n    if(isNear > 0.0)\n    {\n        col.x = 0.0;\n        col.y = isNear;\n        col.z = 0.0;\n    }\n    else\n    {\n        col.x = checkerVal;\n        col.y = checkerVal;\n        col.z = checkerVal;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}