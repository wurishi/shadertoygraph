{"ver":"0.1","info":{"id":"MdycRw","date":"1521415136","viewed":154,"name":"tiling rotate","username":"lahwran","description":"random thing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 uv, float amount) {\n    vec2 prime = vec2( uv.x*cos(amount) + uv.y*sin(amount),\n                      -uv.x*sin(amount) + uv.y*cos(amount));\n    return prime;\n}\n#define M_PI 3.1415926535897932384626433832795\n\nfloat deg2rad(int deg) {\n    return (float(deg) * M_PI / 180.0);\n}\nfloat deg2rad(float deg) {\n    return ((deg) * M_PI / 180.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // center (0,n) in screen\n    vec2 uv = fragCoord - vec2(iResolution.x/2.0,iResolution.y/2.0);\n    vec2 width = vec2(10.0,50.0);\n    \n    vec3 col = vec3(0.0);\n    float dist = length(uv);\n    float rad = length(width);\n    float box_size = max(width.x*2.,width.y*2.);\n    vec2 offset_pos = uv + box_size/2.;\n    vec2 aligned = vec2(floor(offset_pos.x/box_size), floor(offset_pos.y/box_size));\n    vec2 center = (aligned+0.5) * box_size;\n    \n    vec2 angled = rotate(uv, iTime*-0.0613)+vec2(rad,rad);\n    float box_size_ang = 2.*rad;\n    vec2 aligned_pos_ang = vec2(angled.x/(box_size_ang), angled.y/box_size_ang);\n    vec2 aligned_ang = floor(aligned_pos_ang);\n    vec2 center_ang = (aligned_ang+0.5) * box_size_ang;\n    vec2 center_rel_ang = angled-center_ang;\n    vec2 box_ang = fract(aligned_pos_ang) * box_size_ang;\n    \n    bool polarity = ((int(aligned.x) % 2 == int(aligned.y) % 2));\n    if (polarity) {\n        col += 0.2*vec3(0.0,0.0,1.0);\n    }\n    if (abs(dist-rad)<1.0) {\n        col = vec3(1.0);\n    }\n    if (polarity && abs(distance(center,offset_pos))<16.0) {\n        col = vec3(0.2,0.4,1.0);\n    }\n    if (\n        (box_ang.x < 1. || box_ang.x>box_size_ang-1. || box_ang.y > box_size_ang-1. || box_ang.y < 1.)) {\n        col = vec3(1.0, 0.0,0.0);\n    }\n    if (abs(distance(center_ang,angled))<8.0) {\n        col = vec3(1.0,0.4,0.2);\n    }\n    vec2 prime = rotate(center_rel_ang, iTime);\n    col =  vec3(float(prime.x <= width.x && prime.x >= -width.x && prime.y <= width.y && prime.y > -width.y));\n\n    // output color\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}