{"ver":"0.1","info":{"id":"M3dXWB","date":"1719530944","viewed":109,"name":"Hamster Radial Blur","username":"starmole2","description":"RADIAL STUFF","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["blur","hamster"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 car2polar ( vec2 uv ) {\n    return vec2(atan(uv.x, uv.y), length(uv));\n}\n\nvec2 polar2car ( vec2 ar ) {\n    return vec2( sin(ar.x) * ar.y, cos(ar.x) * ar.y );\n}\n\nfloat gamma = 2.2;\nfloat pi = 3.14159265359;\n\nvec4 sampleImage( vec2 uv ) {\n    uv.y *= iResolution.x / iResolution.y;\n    uv.x = - uv.x;\n    return pow( texture(iChannel0, uv*.5+vec2(.5)), vec4(gamma, gamma, gamma, 1.0) );\n}\n\nfloat dist(float x) { // x=-1..1\n    //return (cos(x*pi)+1.0);\n    return 1.0 - abs(x); // this is fine!\n    //return 1.0;\n    // gaussian\n    float sigma = .5;\n    float tss = 2.0*sigma*sigma;\n    return exp(-(x*x / tss)); // /sqrt(pi*tss);  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord/iResolution.xy - vec2(.5)) * 2.0;\n    uv.y *= iResolution.y / iResolution.x;\n\n    vec2 center = ((iMouse.xy / iResolution.xy) - vec2(.5)) * 2.0;\n    center.y *= iResolution.y / iResolution.x;\n    \n    //center += sin(uv*8.0);\n    \n    vec2 polar = car2polar(uv-center); \n    \n    int n = 50; \n\n    vec4 c = vec4(0.0);\n    float fs = 1.0 - (cos(iTime*2.0)+1.0)*.5;//iMouse.x / iResolution.x; \n    //fs = .0;\n    float s = mix( 0.0, pi/4.0, fs);  // angle is -pi/2..pi/2\n    \n    float fs2 =  1.0 - (sin(iTime*1.3)+1.0)*.5;//iMouse.x / iResolution.x; \n    fs2 = .0;\n    float s2 = mix( 0.0, 1.0/8.0, fs2);\n    s /= polar.y+1.0;\n    float ws = 0.0;\n    \n    //int n = int(clamp(polar.y * 200.0, 20.0, 100.0));\n    \n    for ( int i=-n; i<=n; i++ ) {\n        float ifl = float(i) / float(n);\n        float w = dist(ifl);\n        //vec2 delta = vec2(ifl * s, 0.0 );\n        //vec2 delta = vec2(0.0,ifl * s);\n        vec2 delta = vec2(ifl * s,ifl * s2);\n        \n        \n        vec2 car = polar2car(polar + delta);\n        c += sampleImage(car+center) * w;\n        ws += w;\n    }\n    c /= ws;\n    //c.x = fract(polar.y*20.0); \n    //c.y = fract(polar.x*20.0);\n\n    // Output to screen\n    fragColor = pow ( c, vec4(1.0/gamma, 1.0/gamma, 1.0/gamma, 1.0) );\n}","name":"Image","description":"","type":"image"}]}