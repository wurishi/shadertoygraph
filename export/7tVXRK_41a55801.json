{"ver":"0.1","info":{"id":"7tVXRK","date":"1641066247","viewed":139,"name":"random gradient stripes","username":"nicoptere","description":"2D slices of random height ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float x){\n\treturn fract(sin(1. + x * 12.9898 ) * 43758.5453);\n}\nfloat norm( float t, float a, float b ){\n    return (t-a) / (b-a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //needle: the value we want to evaluate to create slices \n    float needle = uv.y;// or fract( uv.y * 2.5 + iTime ); // anything normalised \n    \n    //slices count (must be const)\n    const int total = int( 8. );\n    float values[total];\n    \n    //create random values & store the sum\n    float sum = 0.;\n    for( int i = 0; i < total; i++ ){\n        float r = random( float( i ) );\n        values[i] = sum;\n        sum += r;\n    }\n    \n    //normalize values (divide by the sum)\n    for( int i = 0; i < total; i++ ){\n        values[i] /= sum;\n    }\n    \n    //retrieve the needle's index\n    int id = 0;\n    for( int i = 0; i < total; i++ ){\n        if( values[i] < needle ){\n            id = i;\n        }\n    }\n    \n    //find edges to lerp between\n    float u = values[id];\n    float v = 1.;\n    if( id < total -1 ){\n        v = values[id+1 ];\n    }\n    \n    //normalise result\n    float t = norm( needle, u, v);\n    fragColor = vec4(vec3(1.-t),1.0);\n    \n    //debug: show the edges\n    if( uv.x > 0.9 ){\n        fragColor = vec4(vec3(u),1.0);\n    }\n    if( uv.x > 0.95 ){\n        fragColor = vec4(vec3(v),1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}