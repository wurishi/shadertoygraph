{"ver":"0.1","info":{"id":"4cfcWf","date":"1721658751","viewed":94,"name":"Mandelbrot Minimal","username":"draradech","description":"small mandelbrot implementation, essentials only (location, scale, color theme)","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define  ITER   5000.\n#define  ESCA   1000.\n#define  LOCA   vec2(-.74635054, .098537);\n#define  SCAL   .00051\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n    vec2 c = SCAL * uv + LOCA;\n    vec2 z = c;\n    vec2 zz;\n    float n;\n    for (n = 0.; n < ITER; n++)\n    {\n        zz = vec2(z.x * z.x, z.y * z.y);\n        if(zz.x + zz.y > ESCA) break;\n        z = vec2(zz.x - zz.y, 2. * z.x * z.y) + c;\n    }\n    n -= log(zz.x + zz.y) / log(ESCA) + 30.;\n    n /= 800.;\n    fragColor = vec4(pow(n, 1.5), pow(n, .4), pow(n, .2), 1.);\n}","name":"Image","description":"","type":"image"}]}