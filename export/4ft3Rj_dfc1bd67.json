{"ver":"0.1","info":{"id":"4ft3Rj","date":"1711900249","viewed":133,"name":"resize texture (bilinear)","username":"cabfiel","description":"resizes a texture to a certain size then back, resulting in a (mostly) stable pixelization/mosaic effect. here additional stuff is done to use bilinear scaling instead of nearest, resulting in blur","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["mosaic","pixelization"],"hasliked":0,"parentid":"Xc33zr","parentname":"resize texture"},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 origRes = vec2(320., 200.); // ega\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pixelUV = floor(uv * origRes) / origRes;\n    vec2 pixelOffset = fract(uv * origRes);\n    \n    vec4 color00 = texture(iChannel0, pixelUV);\n    vec4 color10 = texture(iChannel0, pixelUV + vec2(1.0 / origRes.x, 0.0));\n    vec4 color01 = texture(iChannel0, pixelUV + vec2(0.0, 1.0 / origRes.y));\n    vec4 color11 = texture(iChannel0, pixelUV + vec2(1.0 / origRes.x, 1.0 / origRes.y));\n    \n    vec4 colorX0 = mix(color00, color10, pixelOffset.x);\n    vec4 colorX1 = mix(color01, color11, pixelOffset.x);\n    vec4 finalColor = mix(colorX0, colorX1, pixelOffset.y);\n    \n    fragColor = finalColor;\n}","name":"Image","description":"","type":"image"}]}