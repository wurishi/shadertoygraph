{"ver":"0.1","info":{"id":"MsKfRV","date":"1529644501","viewed":1223,"name":"rotating breathing circle","username":"guowei","description":"rotating breathing circle","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circle","rotating","breathing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n#define TWOPI = 6.2831853\n\nfloat circle(float radius, vec2 center, vec2 uv) {\n\tfloat d = distance(center, uv);\n    return 1.0 - smoothstep(radius-1./iResolution.y, radius+1./iResolution.y, d);\n}\n\nvec2 angleRadius(vec2 uv) {\n    float twoPi = 6.2831853;\n\tfloat anglePixel = atan(uv.y, uv.x);\n    float lengthPixel = length(uv);\n    \n    return vec2(anglePixel, lengthPixel);\n}\n\nfloat filterPositive(float n) {\n    //if(n <= 0.005) {\n    \t//return 0.0;\n        //return smoothstep(0.0, 0.005, n);\n    //} else {\n    \t//return 1.0;\n        //return smoothstep(0.995, 1.005, n);\n    //}\n    return smoothstep(0.0, 0.005, n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y; //many thanks to FabriceNeyret2\n    \n    float radius = 0.3;\n    float ringThick = 0.05;\n    \n    vec2 stPolar = angleRadius(uv);\n    \n    float sPolar = stPolar.x * 3.0 + iTime * 10.0;\n    //float sPolar = stPolar.x * 6.0;\n    float cosSPolarTemp = cos(sPolar);\n    float cosSPolar = filterPositive(cosSPolarTemp);\n    \n    vec3 color = vec3(cosSPolar);\n    \n\n    float inCircleAA = smoothstep(radius, radius + 0.005, angleRadius(uv).y); //AA version\n    float smallCircleAA = smoothstep(radius - ringThick, radius - ringThick + 0.005, angleRadius(uv).y); //AA version\n    vec3 col = 1.0 - vec3(inCircleAA);\n    vec3 col_2 = 1.0 - vec3(smallCircleAA);\n    vec3 colorGap = col - col_2;\n    vec3 finalColor = color * colorGap;\n    vec3 colorMask = vec3(10, 1.5, 1.0);\n    finalColor /= 10.0;\n    finalColor *= colorMask;\n    \n    float centerCircleAA = smoothstep(0.1, 0.1 + 0.005, angleRadius(uv).y); //AA version\n    vec3 centerCircleColor = 1.0 - vec3(centerCircleAA);\n    centerCircleColor /= 10.0;\n    centerCircleColor *= colorMask;\n    \n    vec2 centerC = vec2(0.0, 0.0);\n    float bubbleRadius = abs(sin(iTime * 3.0)) / 3.0;\n    float bubbleCircleColor = circle(bubbleRadius, centerC, uv);\n    vec4 bubbleColor = vec4(vec3(bubbleCircleColor) / 10.0 * colorMask, 1.0);\n    \n    fragColor = vec4(finalColor + centerCircleColor, 1.0);\n    fragColor += bubbleColor;\n    \n    \n}","name":"Image","description":"","type":"image"}]}