{"ver":"0.1","info":{"id":"wtBBWm","date":"1599162992","viewed":791,"name":"Oily Marble","username":"fizzer","description":"A marble-like object with some kind of oily surface.","likes":49,"published":1,"flags":0,"usePreview":0,"tags":["sphere","oil","marble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159265358979323;\nconst float th = pi * 3. / 8.;\nconst float sc = 1. / cos(th);\n\nvec2 intersectSphere(vec3 ro, vec3 rd, vec3 org, float rad)\n{\n    ro -= org;\n    float a = dot(rd, rd);\n    float b = 2. * dot(rd, ro);\n    float c = dot(ro, ro) - rad * rad;\n    float desc = b * b - 4. * a * c;\n    if (desc < 0.)\n        return vec2(1, 0);\n\tdesc = sqrt(desc);\n    return vec2(-b - desc, -b + desc) / (2. * a);\n}\n\nmat3 rotX(float a)\n{\n    return mat3(1., 0., 0., 0., cos(a), sin(a), 0., -sin(a), cos(a));\n}\n\nmat3 rotY(float a)\n{\n    return mat3(cos(a), 0., sin(a), 0., 1., 0., -sin(a), 0., cos(a));\n}\n\nmat3 rotZ(float a)\n{\n    return mat3(cos(a), sin(a), 0., -sin(a), cos(a), 0., 0., 0., 1.);\n}\n\nvec3 env(vec3 d)\n{\n    return vec3(.4);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 ro = vec3(0, 0, 4.5), rd = normalize(vec3(uv, -4));\n\n\n    vec2 t = intersectSphere(ro, rd, vec3(0), 1.);\n\n    if(t.x > t.y)\n    {\n        fragColor.rgb = env(rd);\n    }\n    else\n    {\n        vec3 rp = ro + rd * t.x;\n        vec3 rn = normalize(rp);\n\n        vec3 c = vec3(0);\n        float wsum = 0.;\n\n        rp = rotY(iTime / 8.) * rp;\n        for(int i = 0; i < 35; ++i)\n        {\n            vec3 d = normalize(textureLod(iChannel0, rp * .2, 0.).rgb - .5);\n            d = rotZ(iTime * .1) * d;\n            vec3 n = normalize(rp);\n            d -= n * dot(n, d);\n            rp += d * .011;\n            float w = 1.;\n            vec3 s;\n            s = vec3(textureLod(iChannel0, rp * 1., 0.).a) * vec3(.3, 1., .7);\n            s += vec3(textureLod(iChannel0, rp.zyx * 2.5, 0.).a) * vec3(1., .3, .7);\n            c += s * w;\n            wsum += w;\n\n            rp = rotY(-.004) * rp;\n        }\n\n        rp = ro + rd * t.x;\n        rp = rotY(iTime / 10.) * rp;\n        for(int i = 0; i < 35; ++i)\n        {\n            vec3 d = normalize(textureLod(iChannel0, rp * .1, 0.).bgr - .5);\n            d = rotZ(iTime * -.05) * d;\n            vec3 n = normalize(rp);\n            d -= n * dot(n, d);\n            rp += d * .011;\n            float w = .4;\n            vec3 s;\n            s = vec3(pow(textureLod(iChannel0, rp * 3., 0.).a, 2.)) * vec3(.3, 1., .7).bgr;\n            c += s * w;\n            wsum += w;\n        }\n\n        rp = ro + rd * t.x;\n        rp = rotY(iTime / 12.) * rp;\n        for(int i = 0; i < 35; ++i)\n        {\n            vec3 d = normalize(textureLod(iChannel0, rp * .1, 0.).brg - .5);\n            d = rotY(iTime * -1.) * d;\n            vec3 n = normalize(rp);\n            d -= n * dot(n, d);\n            rp += d * .01;\n            float w = .2;\n            vec3 s;\n            s = vec3(pow(textureLod(iChannel0, rp * .5, 0.).a, 2.)) * vec3(0, 0, 1.);\n            c += s * w;\n            wsum += w;\n        }\n\n        c /= wsum;\n\n        vec3 ld = normalize(vec3(1, 10.5, .8));\n\n        c -= dot(c, vec3(1. / 3.)) * .7;\n        c *= 4.5;\n\n        c *= .5 + .5 * dot(rn, ld);\n\n        vec3 refl = normalize(reflect(rd, rn));\n        vec3 spec = vec3(pow(max(0., dot(refl, ld)), 8.)) * 0.1 + env(refl);\n        spec += .5 * (1. - smoothstep(.25, .35, abs(refl.z))) *\n            (1. - smoothstep(.8, .92, abs(refl.x))) * step(0., refl.y);\n        spec += textureLod(iChannel1, refl, 4.).rgb * .2;\n        c = mix(c, spec, .1 + pow(max(0., 1. - dot(rn, -rd)), 3.) * .8);\n\n        fragColor.rgb = c;\n    }\n\n    fragColor.rgb *= 1.3;\n\n    fragColor.rgb = pow(clamp(fragColor.rgb, 0., 1.), vec3(1. / 2.2));\n}\n","name":"Image","description":"","type":"image"}]}