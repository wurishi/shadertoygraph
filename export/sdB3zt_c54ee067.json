{"ver":"0.1","info":{"id":"sdB3zt","date":"1617817154","viewed":202,"name":"Unlimited Particle Simulation","username":"_bm","description":"-> left click & drag to add particles\n\nParticle occupancy and velocity encoded in pixel color. Particle movement done by checking for moving particles in a radius around each pixel. Biggest issue is that particles annihilate each other on collision.","likes":6,"published":1,"flags":32,"usePreview":1,"tags":["simulation","particles","particlesimulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Output to screen\n    vec3 col = texture(iChannel0, fragCoord / iResolution.xy).rgb;\n    float val = col.r;\n    fragColor = vec4(col * val, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/* Particle simulation takes place in this shader */\n/* ---------------------------------------------- */\n\n// Parameter: Maximum velocity, increases search radius so increase this with care\n#define MAX_VEL 8\n// Parameter: Minimum distance from particle expected location to current pixel. 0.5 is best\n#define TOL 0.50\n// Parameter: Amount by which to multiply velocity each frame\n#define MOMENTUM 0.998\n\n// Texture coordinate to pixel coordinate\nvec2 p_pos(vec2 texCoord) {\n    return texCoord * iResolution.xy;\n}\n\n// Pixel coordinate to texture coordinate\nvec2 t_pos(vec2 pixCoord) {\n    return pixCoord / iResolution.xy;\n}\n\n// Get velocity value from color\nvec2 get_vel(vec4 color) {\n    return (color.gb - 0.5) * float(MAX_VEL) * 2.0;\n}\n\n// Get color from velocity value\nvec4 set_vel(vec2 vel) {\n    return vec4(0.0, vel / (float(MAX_VEL) * 2.0) + 0.5, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float cur_val = 0.0;\n    vec2 cur_vel = vec2(0.0, 0.0);\n    \n    // Check neighborhood around current pixel for particles that should move here\n    for (int x = -MAX_VEL / 2; x <= MAX_VEL / 2; x++) {\n        for (int y = -MAX_VEL / 2; y <= MAX_VEL / 2; y++) {\n            // Get the particle in my neighborhood\n            vec2 texPos = t_pos(fragCoord + vec2(x, y));\n            vec4 other = texture(iChannel0, texPos);\n            vec2 other_vel = get_vel(other);\n            // Particle is moving to current pixel\n            float d = distance((fragCoord + vec2(x, y) + other_vel), fragCoord);\n            if (other.r > 0.0001 && d < TOL) {\n                float p = clamp(TOL - d, 0.9, 1.0);\n                p = 1.0;\n                cur_val += other.r * p;\n                cur_vel += other_vel * p;\n            }\n        }\n    }\n    \n    // Drawing\n    if (iMouse.z > 0.0 && distance(fragCoord, iMouse.xy) < 50.0) {\n        cur_vel = -(iMouse.xy - fragCoord) / float(MAX_VEL);\n        cur_val = 0.9;\n    }\n    \n    cur_vel *= MOMENTUM;\n    vec4 color = set_vel(cur_vel);\n    color.r = cur_val;\n    color.a = 1.0;\n    \n    // Initial state\n    if (iFrame <= 1) {\n        color = texture(iChannel1, t_pos(fragCoord));\n    }\n    \n    // Pixel color is <value, velocity X, velocity Y, 1>\n    fragColor = color;\n}","name":"Buffer A","description":"","type":"buffer"}]}