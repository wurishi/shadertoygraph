{"ver":"0.1","info":{"id":"lcKSWy","date":"1715739426","viewed":106,"name":"strange raymarcher","username":"CuleGamer","description":"What's going on?","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["raymarcher","escapetime","whatisgoingon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//////////// PARAMETERS ////////////\n\nconst int raymarchSteps = 32;\nconst float raymarchThreshold = 4.;\nconst int sdfSteps = 16;\nconst float sdfThreshold = 1.5;\nconst float sdfModVal = 1.5;\n\n\n////////////////////////////////////\n#define getUv(v) 2.*(2.*v.xy - iResolution.xy) / iResolution.y;\nvoid mainImage(out vec4 o, in vec2 coord)\n{\n    int maxI = 32;\n    vec2 uv = getUv(coord)\n    vec2 uvMouse = getUv(iMouse)\n    vec3 col;\n    vec3 camPos = vec3(0., 0.,iTime -2.5);\n    vec3 camVec = normalize(vec3(uv,2.));\n    int i;\n    vec3 ray = camPos + camVec;\n    while(i < maxI)\n    {\n        float dist = sdfStrange(ray, uvMouse, sdfSteps, sdfModVal, sdfThreshold);\n        ray += camVec*dist;\n        if(dot(dist, dist) < raymarchThreshold)\n        {\n            vec3 camPosMinusRay = camPos - ray;\n            col = cos(1.5*ray);\n            col /= dot(camPosMinusRay, camPosMinusRay);\n            break;\n        }\n        i++;\n    }\n    col /= vec3(distance(camPos, ray));\n    o = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float sdfStrange(vec3 pos, vec2 uv, int iterations, float modVal, float threshold)\n{\n    for(int i; i < iterations; i++)\n    {\n        \n        pos *= mat3(1., uv.xy,uv,1.,-uv.yx, 1.);\n        pos += vec3(cos(pos.x), sin(pos.y), cos(pos.z));\n        pos = mod(pos, modVal);\n        if(dot(pos, pos) > threshold) return float(i) / float(iterations);\n    }\n    return 1.;\n}","name":"Common","description":"","type":"common"}]}