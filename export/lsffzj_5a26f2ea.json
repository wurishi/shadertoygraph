{"ver":"0.1","info":{"id":"lsffzj","date":"1496957470","viewed":423,"name":"2D Gradient noise (WIP)","username":"VinceTavernier","description":"Gradient noise using procedural pseudo-random numbers. Original source: https://www.shadertoy.com/view/XdXGW8","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise","gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Original source: https://www.shadertoy.com/XdXGW8\n\nvec2 hash( vec2 x )  // replace this by something better\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nfloat noise( in vec2 p, in float y )\n{\n    p *= y;\n\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    \n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( mod(i + vec2(0.0,0.0), y) ), f - vec2(0.0,0.0) ), \n                     dot( hash( mod(i + vec2(1.0,0.0), y) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( mod(i + vec2(0.0,1.0), y) ), f - vec2(0.0,1.0) ), \n                     dot( hash( mod(i + vec2(1.0,1.0), y) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// -----------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);\n  \n\tfloat f = 0.0;\n    \n    // generate noise\n    float y = 30.;\n    f = noise(uv, y);\n\t\n    // [-1, 1] -> [0, 1]\n\tf = 0.5 + 0.5*f;\n\t\n\tfragColor = vec4( f, f, f, 1.0 );\n}","name":"Image","description":"","type":"image"}]}