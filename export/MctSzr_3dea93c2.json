{"ver":"0.1","info":{"id":"MctSzr","date":"1713535088","viewed":45,"name":"Eclipse thingy","username":"Artificialvoid1","description":"Fun fun","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["blur","space","bloom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat distanceVec2(vec2 v1, vec2 v2) {\n    float dx = (v1.x - v2.x);\n    float dy = (v1.y - v2.y);\n    return sqrt(dx*dx + dy*dy);\n}\n\n\nstruct circle {\n    vec2 pos;\n    float radius;\n};\n\n\nbool checkcircle(vec2 coord, circle thing) {\n    if (distanceVec2(coord, thing.pos) <= thing.radius) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nvec4 mainscreen( vec2 fragCoord ) {\n    float xmod = 100.0;\n    float xoff = iTime;\n    circle moon = circle(vec2(mod(xoff*xmod - 300.0, iResolution.x + 150.0), iResolution.y/2.0), 150.0);\n    circle sun = circle(vec2(iResolution.xy/vec2(2.0)), 150.0);\n    bool insidemoon = checkcircle(fragCoord, moon);\n    bool insidesun = checkcircle(fragCoord, sun);\n\n    if (insidemoon == true) {\n        return vec4(0);\n    } else if (insidesun == true) {\n        return vec4(1, 0.7, 0, 1);\n    } else {\n        return vec4(0);\n    }\n}\n\nvec4 colAverage(vec4 col, vec4 col2) {\n    vec4 colnew = vec4(\n    (col.r + col2.r)/2.0,\n    (col.g + col2.g)/2.0,\n    (col.b + col2.b)/2.0, 1);\n    return colnew;\n}\n\nvec4 blurpixel(vec2 fragCoord, vec4 col) {\n    int xkernel = 10;\n    int ykernel = 10;\n    //make x and y negitave half of its kernel\n    \n    for (int x = -5; x < xkernel/2; x++) {\n        for (int y = -5; y < ykernel/2; y++) {\n            col = colAverage(col, mainscreen(fragCoord +vec2(x*5, y*5)));\n        }\n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = mainscreen(fragCoord);\n    \n    col = blurpixel(fragCoord, col);\n    \n    \n    fragColor = col;\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}