{"ver":"0.1","info":{"id":"ttGXWc","date":"1583708397","viewed":59,"name":"GR_Parcours_03_Exo_01","username":"rocchettig","description":"shader_animated","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shaderanimated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.shadertoy.com/view/ttGXWc\n\n// Learned from https://www.shadertoy.com/view/llBfDz by Loustik\n\n\n// Fonction circle\nvec4 circle (vec2 uv, vec2 center, float size, float gradient, float ep)\n{\n\n    float ratio = iResolution.x/ iResolution.y;\n    uv.x *= ratio;\n    center.x *= ratio;\n    \n    float calc = (abs (distance (uv,center)-size)-ep)/gradient;\n    float value = clamp (calc,0.0,1.0);\n    float alpha = 1.0 - value;\n    return vec4 (value, value, value, alpha);\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //Param\n    vec2 center = vec2 (0.5,0.5);\n    float speed = 0.2;\n    float size = 0.0 + fract (iTime*speed);\n    float size2 = 0.0 + fract ((iTime)*speed);\n    float gradient = 0.05;\n    float thickness = 0.02;\n    \n    //color\n    vec3 color = vec3 (0.5-uv.y*sin(iTime), 0.7, uv.x*sin(iTime));\n    vec3 noir = vec3 (0.0);\n    \n    //compo\n    vec4 onde = circle(uv,center,size,gradient,thickness);\n    vec3 layer = vec3 (mix(noir,color,onde.a));\n    \n    \n    \n    \n    fragColor = vec4 (layer,1.0);\n                               \n    \n}\n","name":"Image","description":"","type":"image"}]}