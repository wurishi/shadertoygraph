{"ver":"0.1","info":{"id":"3l33DB","date":"1577386478","viewed":122,"name":"Simple Brick Texture","username":"Assossa","description":" ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["texture","brick"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define VERTICAL_BRICKS 8.0\n#define HORIZONTAL_BRICKS 4.0\n#define GAP 0.05\n\n#define BRICK_RATIO (HORIZONTAL_BRICKS / VERTICAL_BRICKS)\n#define X_GAP (GAP * BRICK_RATIO)\n#define BLUR ((2. / iResolution.y) * (VERTICAL_BRICKS / 2.0))\n#define X_BLUR (BLUR * BRICK_RATIO)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv += fract(iTime) * 0.5 + 1.0;\n    uv *= vec2(HORIZONTAL_BRICKS / 2.0, VERTICAL_BRICKS / 2.0);\n    \n    int layer_offset = abs(int(uv.y)) & 1;\n    // TODO: Fix doubled bricks\n    uv.x += float(layer_offset) * 0.5;\n    vec2 fract_uv = fract(uv);\n    \n    fragColor = vec4(1);\n    \n    fragColor *= smoothstep(GAP, GAP + BLUR, fract_uv.y);\n    fragColor *= smoothstep(1. - GAP, 1. - (GAP + BLUR), fract_uv.y);\n    \n    fragColor *= smoothstep(X_GAP, X_GAP + X_BLUR, fract_uv.x);\n    fragColor *= smoothstep(1. - X_GAP, 1. - (X_GAP + X_BLUR), fract_uv.x);\n}","name":"Image","description":"","type":"image"}]}