{"ver":"0.1","info":{"id":"Ms2BWd","date":"1502908100","viewed":927,"name":"Curvature X","username":"rizvanner","description":"experiment","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["filter","curvature"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float depth = 10.0;\nconst float intensity = 1.0;\n\nvec3 samplex(const int x, const int y, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy;\n\treturn texture(iChannel0, uv).xyz;\n}\n\nfloat luminance(vec3 c)\n{\n\treturn dot(c, vec3(.2126, .7152, .0722));\n}\n\nvec3 normal(in vec2 fragCoord)\n{\n\tfloat R = abs(luminance(samplex( 1,0, fragCoord)));\n\tfloat L = abs(luminance(samplex(-1,0, fragCoord)));\n\tfloat D = abs(luminance(samplex(0, 1, fragCoord)));\n\tfloat U = abs(luminance(samplex(0,-1, fragCoord)));\n\t\t\t\t \n\tfloat X = (L-R) * 0.5;\n\tfloat Y = (U-D) * 0.5;\n\n\treturn normalize(vec3(X, Y, 1.0 / depth));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n\tvec3 middlePixelNormal = normal(fragCoord + vec2(0, 0));\n\n    vec3 n = normalize(middlePixelNormal);\n\n    vec3 dx = dFdx(n);\n    vec3 dy = dFdy(n);\n\n    vec3 xneg = n - dx;\n    vec3 xpos = n + dx;\n    vec3 yneg = n - dy;\n    vec3 ypos = n + dy;\n\n    float curvaturex = (cross(xneg, xpos).y - cross(yneg, ypos).x);\n    \n    fragColor = vec4(vec3(0.5 + curvaturex), 1);\n    \n}","name":"Image","description":"","type":"image"}]}