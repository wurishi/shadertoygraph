{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define time iTime\n\n// ---- change scale here ----\nfloat scale = 13.0;\n\n// ---- change function here -----\nfloat function( vec2 v ) {\n\tfloat r = length( v );\n\tfloat t = atan( v.y, v.x );\n\t\n\treturn sin( r + time * 0.7 ) - sin( t * t + time * 0.33 );\n\t//return sin( r + time ) - cos( t + time * 0.33 );\n\t//return sin( r + time ) - sin( sin( t * t ) + time * 0.33 );\n}\n\n\nvec2 grad( vec2 p, float h ) {\n\tvec2 step = vec2( h, 0.0 );\n\t\n\treturn vec2(\n\t\tfunction( p + step.xy ) - function( p - step.xy ),\n\t\tfunction( p + step.yx ) - function( p - step.yx )\n\t) / ( h * 2.0 );\n\t\t\n}\n\n#if 0\n// iq's distance estimate\n// https://iquilezles.org/articles/distance\nfloat value( vec2 p, float size ) {\n\treturn smoothstep( 0.0, size * 2.0, abs( function( p ) / length( grad( p, 0.1 ) ) ) );\n}\n#else\n// my old distance function\nfloat value( vec2 p, float size ) {\n\treturn 1.0 - 1.0 / ( max( abs( function( p ) / size ) - 1.0, 0.0 ) + 1.0 );\n}\n#endif\n\nfloat grid( vec2 p, float width ) {\n\tp += width * 0.5;\n\t\n\tfloat grid_width = 1.0;\n\tfloat k = 1.0;\n\t\n\tk *= step( width * 2.0, abs( p.x ) );\n\tk *= step( width * 2.0, abs( p.y ) );\n\t\n\tgrid_width *= 0.25;\n\tk *= min( step( width, abs( floor( p.x / grid_width + 0.5 ) * grid_width - p.x ) ) + 0.75, 1.0 );\n\tk *= min( step( width, abs( floor( p.y / grid_width + 0.5 ) * grid_width - p.y ) ) + 0.75, 1.0 );\n\n\treturn k;\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat width = 1.0 / min( iResolution.x, iResolution.y );\n\tvec2 control = mix( iResolution.xy * 0.5, iMouse.xy, 1.0 - step( iMouse.z, 0.0 ) );\n\tvec2 uv = ( fragCoord.xy - control ) * width * 2.0;\n\t\n\tfloat k_grid = grid( uv, width );\n\tfloat k_func = value( uv * scale, width * scale );\n\t\n\tfragColor = vec4( ( k_func ) * k_grid );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Msj3zw","date":"1385484846","viewed":839,"name":"F(x, y) = 0","username":"gltracy","description":"simple implicit 2D function plotter, drag to move the origin around.\nchange the scale factor and function to whatever you like:)\nideas origin from inequation's demo : https://www.shadertoy.com/view/4d23Rm","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["function","plot","implicit"],"hasliked":0,"parentid":"","parentname":""}}