{"ver":"0.1","info":{"id":"4XKXRz","date":"1719860110","viewed":47,"name":"7.1HW1.1","username":"XiFan","description":"HW","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSquare(in vec2 p,in vec2 p0 ,in float a)\n{\n    vec2 v2 = abs(p-p0)-a;\n    return max(v2.x,v2.y);\n}\nfloat sdRectangle(in vec2 p,in vec2 p0 ,in float w,in float h)\n{\n    vec2 v2 = vec2(abs((p-p0).x)-w,abs((p-p0).y)-h);\n    return max(v2.x,v2.y);\n}\nfloat sdTriangle( in vec2 p, in vec2 p0, in vec2 p1, in vec2 p2 )\n{\n\tvec2 e0 = p1 - p0;\n\tvec2 e1 = p2 - p1;\n\tvec2 e2 = p0 - p2;\n\n\tvec2 v0 = p - p0;\n\tvec2 v1 = p - p1;\n\tvec2 v2 = p - p2;\n\n\tvec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n\tvec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n\tvec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    \n    float s = e0.x*e2.y - e0.y*e2.x;\n    vec2 d = min( min( vec2( dot( pq0, pq0 ), s*(v0.x*e0.y-v0.y*e0.x) ),\n                       vec2( dot( pq1, pq1 ), s*(v1.x*e1.y-v1.y*e1.x) )),\n                       vec2( dot( pq2, pq2 ), s*(v2.x*e2.y-v2.y*e2.x) ));\n\n\treturn -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdCircle(in vec2 p,in vec2 p0,in float r)\n{\n    return length(p-p0)-r;\n}\n\nfloat sdRing(in vec2 p,in vec2 p0,in float outside,in float inside)\n{\n    return max(length(p-p0)-outside,inside-length(p-p0));\n}\n\nfloat andshape(float a,float b)\n{\n    return min(a,b);\n}\nfloat orshape(float a,float b)\n{\n    return a*b;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \n    float tri1 = sdTriangle(uv,vec2(0.2,0.2),vec2(0.5,0.4),vec2(0.3,0.5));\n    float tri2 = sdTriangle(uv,vec2(-0.2,0.2),vec2(-0.4,0.25),vec2(-0.25,-0.3));\n    float tri3 = sdTriangle(uv,vec2(-0.4,0.1),vec2(0.,0.0),vec2(-0.4,-0.5));\n    float tri4 = sdTriangle(uv,vec2(-0.7,-0.2),vec2(0.6,-0.15),vec2(0.7,-0.4));\n    float tri5 = sdTriangle(uv,vec2(-0.5,0.5),vec2(0.0,0.25),vec2(0.3,-0.5));\n    \n    float ring1 = sdRing(uv,vec2(-0.2,-0.15),0.4,0.35);\n    float ring2 = sdRing(uv,vec2(0.7,0.4),0.7,0.6);\n    float ring3 = sdRing(uv,vec2(-1.0,0.8),1.0,0.975);\n    \n    float circle1 = sdCircle(uv,vec2(0.5,0.15),0.2);\n    float circle2 = sdCircle(uv,vec2(-0.7,-0.5),0.6);\n    \n    float rectangle1 = sdRectangle(uv,vec2(-0.5,0.35),0.7,0.05);\n    float rectangle2 = sdRectangle(uv,vec2(-0.8,0.35),0.03,0.8);\n    float rectangle3 = sdRectangle(uv,vec2(0.7,0.15),0.5,0.03);\n    float rectangle4 = sdRectangle(uv,vec2(0.6,0.2),0.015,0.3);\n    \n    float square1 = sdSquare(uv,vec2(0.6,-0.3),0.18);\n    // Output to screen\n    vec3 col = vec3(step(0.0,orshape(orshape(orshape(orshape(andshape(orshape(andshape(orshape(orshape(orshape(orshape(tri3,tri2),tri4),tri5),tri1),ring1),ring2),orshape(orshape(circle1,rectangle3),rectangle4)),circle2),ring3),andshape(rectangle1,rectangle2)),square1)));\n    col = col*(cos(iTime*2.0)+0.9);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}