{"ver":"0.1","info":{"id":"WtlSzS","date":"1563383150","viewed":116,"name":"Alien Ruins","username":"sayachang_bot","description":"Alien Ruins PseudoKleinian","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pseudokleinian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\nconst float PI = 3.1415926;\nconst float GOLDEN = PI*(3.-sqrt(5.));\nvec2 rot(vec2 p, float a){\n    return vec2(p.x*cos(a)-p.y*sin(a),p.x*sin(a)+p.y*cos(a));\n}\nvec2 moda(vec2 p, float m){\n    float a=atan(p.y,p.x)+PI/m;\n    a=mod(a-m/2.,m)-m/2.;\n    return vec2(cos(a),sin(a))*length(p);\n}\nvec2 pmod(vec2 p, float m){\n    float a=PI/m-atan(p.y,p.x);\n    float r=2.*PI/m;\n    a=floor(a/r)*r;\n    return rot(p,a);\n}\nfloat PseudoKleinian(vec3 p)\n{\n\tvec3 CSize = vec3(0.92436, 0.90756, 0.92436);\n\tfloat size = 1.;\n\tvec3 c = vec3(.0);\n\tfloat de = 1.;\n\tvec3 offset = vec3(.0);\n \tvec3 ap = p + vec3(1.);\n\tfor(int i=0; i<10; i++)\n\t{\n\t\tap = p;\n\t\tp -= 2. * clamp(p, -CSize, CSize);\n\t\tfloat r2 = dot(p, p);\n\t\tfloat k = max(size / r2, 1.);\n\t\tp *= k;\n\t\tde *= k;\n\t\tp += c;\n\t}\n\tfloat r = abs(0.5 * abs(p.z - offset.z) / de);\n\treturn r;\n}\nfloat map(vec3 p){\n    float d;\n    vec3 q=p.yxz;\n    for(int i=0;i<3;++i){\n        q.xy=pmod(q.xy,PI/.2);\n        q.xz=moda(q.xz,1.1+.1*sin(.001*time));\n    }\n    d=PseudoKleinian(q)-.0001;\n    return d;\n}\nvec3 norm(vec3 p){vec2 e=vec2(.01,.0);return .000001+map(p)-vec3(map(p-e.xyy),map(p-e.yxy),map(p-e.yyx));}\nfloat rnd(float x){return fract(sin(x+23.45)*87.65);}\nfloat dots(vec3 p, float j) {\n    p*=4.+sin(j);\n    p.x += rnd(floor(p.y));\n    p*=PI*PI*PI;\n    return clamp(0.1-length(vec2(sin(p.x),cos(p.y))),0.0,1.0)*10.3;\n}\nfloat ao(vec3 p, vec3 q, float d){return clamp((map(p+q*d))/d,.0,1.);}\nfloat sss(vec3 p, vec3 q, float d){return clamp(3.*(map(p+q*d)),.0,1.);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x,iResolution.y);\n    vec3 col = vec3(0.0);\n    vec3 ro=vec3(1.0,-3.0,-.5-sin(time))\n    ,ta=vec3(-1.0,.0,-1.1);\n    ro.xy=rot(ro.xy,.1*time);\n    ta.xz=rot(ta.xz,.1*time);\n    vec3 fwd=normalize(ta-ro)\n    ,up=vec3(0.,1.,.0);\n    vec3 side=normalize(cross(fwd,up));\n    up=normalize(cross(side,fwd));\n    vec3 rd=normalize(p.x*side+p.y*up+fwd*.6);\n    vec3 ray=ro,N;\n    int j;\n    for(int i=0;i<128;++i){\n        float d=max(map(ray),.0007);\n        if(d<.001){N=norm(ray);break;}\n        ray+=d*rd;\n        j=i;\n    }\n    col=clamp(abs(6.*fract(128.*(.1*floor(length(ray.xy)))+vec3(.0,.6,.3))-3.)*.8-1.,0.,1.)*1.8;\n    col+=pow(1.-float(j)/128.,3.);\n    col+=length(ray-ro)/8.;\n    col*=max(dot(N,normalize(ro-ray)),.0)+.125;\n    col=smoothstep(col,vec3(1.2*abs(sin(step(PI,mod(time,2.*PI))))),.4-col);\n    col*=ao(ray,rd,.2)*.2+ao(ray,rd,.4)*.4;\n    col+=sss(ray,rd,.2)+sss(ray,rd,.3)*.4+sss(ray,rd,.6)*.6;\n    \n    vec3 col2 = vec3(0);\n    for(int j=1;j<16;++j) {\n        float dist=float(j)*.2/length(ray.xz);\n        if(dist>256.) break;\n        vec3 vp=vec3(ro.x,.5,.5)+rd*dist;\n        vp.xy=rot(vp.xy,sin(vp.z*2.0+time*.02));\n        col2 += dots(.05*vp, float(j))*clamp(1.0-dist/float(32), .0,1.);\n    }\n    col.rg+=col2.rg;\n    col=mix(col,col.brg,vec3(sin(time)));\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}