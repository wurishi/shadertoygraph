{"ver":"0.1","info":{"id":"DlsGRX","date":"1672152932","viewed":73,"name":"bezier-3","username":"seelingzheng","description":"贝塞尔曲线","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Circle(vec2 p, vec2 c){\n    float d = length(p-c);\n    return smoothstep(fwidth(d),0.0,d-.03); \n}\n\nfloat Line(vec2 p , vec2 a, vec2 b){\n    vec2 pa = p - a,ba = b - a;\n    float t = clamp(dot(pa,ba)/dot(ba,ba),0.,1.);\n    vec2 c = a +ba*t;\n    float d = length(c-p);\n    return smoothstep(fwidth(d),0.,d-0.001);\n}\n\nvec2 Bezier(vec2 a,vec2 b,vec2 c,float t){\n    return mix( mix(a,c,t),mix(c,b,t),t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.x; \n    \n    vec3 col = vec3(0.0);\n    \n    float t = sin(iTime)*.5+0.5;\n    \n    vec2 \n        A = vec2(-.4,-.2),\n        B = vec2(.4,.2),\n        C = (iMouse.xy - iResolution.xy*.5)/iResolution.x,\n        AC = mix(A,C,t),\n        CB = mix(C,B,t),\n        ACB = mix(AC,CB,t)\n        ;\n    \n    col +=vec3(1,0,0)* Circle(uv,A);\n    col +=vec3(0,0,1)* Circle(uv,B);\n    col +=vec3(0,1,0)* Circle(uv,C);\n    \n    //col +=vec3(1,1,0)* Circle(uv,AC);\n    //col +=vec3(0,1,1)* Circle(uv,CB);\n    col +=vec3(1,1,1)* Circle(uv,ACB);\n    \n    \n    //col += Line(uv,A,C)+Line(uv,C,B);\n    //col += Line(uv,AC,CB);\n     \n    // 创建 分段 线段\n    int NUM_SEGS = 25;\n    vec2 p,pp=A;\n    for (int i=1;i<=NUM_SEGS;i++){\n        t = float(i)/float(NUM_SEGS);\n        p = Bezier(A,B,C,t);\n        col += Line(uv,p,pp);\n        pp = p;\n    }\n     \n     \n     \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}