{"ver":"0.1","info":{"id":"XsccDl","date":"1520502125","viewed":162,"name":"Pos To Color","username":"Pr0fed","description":"Further understanding of patterns.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["patternsnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\nconst float TWO_PI = 6.28318530718;\n\nconst vec3 ColorA = vec3(0.101961, 0.619608, 0.666667);\nconst vec3 ColorB = vec3(0.666667, 0.336667, 0.498039);\n\nvec2 random2( vec2 p ) \n{\n    return fract(sin(vec2(dot(p,vec2(0.1123, 0.7453)),dot(p,vec2(1.1235, 0.3123)))) * 0.5453);\n}\n\nvec3 PosToColor(vec2 st)\n{\n    return mix(ColorA, ColorB, vec3(random2(st).x));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = (fragCoord - .5 * iResolution.xy ) / iResolution.y;\n\n    vec3 color = vec3(0.0);\n    float d = 0.0;\n\n    st *= 25.;\n    \n    vec2 st_i = floor(st);\n    st = fract(st) - 0.4;\n    \n\n    // Number of sides of a shape\n    int N = 3;\n\n    // Angle and radius from the current pixel\n    float a = atan(st.x, st.y) + PI;    \n    float r = TWO_PI / float(N);\n\n    // Shaping function that modulate the distance\n    d = cos(floor(.5 + a / r) * r - a) * length(st * 2.);\n\n    color = vec3(1.0 - smoothstep(.3, .5, d));\n    color *= PosToColor(st_i * iTime * 0.1);\n  \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}