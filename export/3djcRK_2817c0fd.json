{"ver":"0.1","info":{"id":"3djcRK","date":"1586962825","viewed":66,"name":"testMyFirstShader","username":"y_hash","description":"I made this for explanation of simple alpha blend.\nA * alpha + B * (1 - alpha)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 yellow = vec3(1.0,0.886,0.0);\n    vec3 blue = vec3(0.0,0.5,1.0);\n    \n    float t = uv.x;\n    vec3 col = yellow * (1.0-t) + blue * t; \n    \n    //col = pow(col, vec3(1.0/2.2));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}