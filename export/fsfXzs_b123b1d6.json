{"ver":"0.1","info":{"id":"fsfXzs","date":"1619027050","viewed":337,"name":"#004 - Bursting Starfield","username":"Deadtotem","description":"Practicing code, nothing fancy. ","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["stars","field","starfield","fireworks","burst"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_BURST 10.\n#define NUM_STARS 50.\n\nmat2 Rot(float a)\n{\n    float s = sin(a), c=cos(a);\n    \n    return mat2(c,-s,s,c);\n}\n\nfloat random21(vec2 p)\n{\n    p = fract(p*vec2(123.34, 456.21));\n    \n    p += dot(p, p+45.32);\n    \n    return fract(p.x*p.y);\n}\n\nvec2 RectCoord(float t)\n{\n    float x = fract(sin(t*74.3)*353.2);\n    \n    float y = fract(sin((t*x)*614.3)*163.2);\n    \n    float ranN = random21(vec2(x,y));\n    \n    return vec2(ranN, y);\n}\n\nvec2 PolarCoord(float t)\n{\n    float a = fract(sin(t*74.3)*453.2)*3.1416;\n    \n    float d = fract(sin((t+a)*714.3)*263.2);\n    \n    float ranN = random21(vec2(a*4.2,d));\n    \n    return vec2(sin(ranN), cos(ranN))*fract(a)/d;\n}\n\nfloat Explosion(vec2 uv, float t)\n{\n        float sparks = 0.;\n        \n        for(float i=0.; i<NUM_BURST; i++)\n        {\n        \n            vec2 dir = PolarCoord(i+.05);    \n            \n            float n = random21(dir);\n           \n            float d = length(uv-dir*t);\n            \n            uv *= Rot(iTime*.10001+n);\n\n            float brightness = mix(.000225, 0., t) ;\n\n            brightness *=sin(t*1.1+i)*.5+.5;\n                       \n           \n\n            sparks += brightness/d;\n \n        }\n        \n        return sparks;\n}\n\nvec3 numExplosions(vec2 uv)\n{\n        vec3 outRGB = vec3(0);\n\n        for(float i=0.; i<NUM_STARS; i++)\n        {          \n        \n            float t = iTime+i/NUM_STARS;\n            \n            float ft = floor(iTime);\n                 \n            vec2 offs = RectCoord(i+1.+ft)-.75;\n            \n            offs *= vec2(1.5,.5);   \n                               \n            outRGB +=Explosion(uv-offs, fract(t)*.05);\n        }\n        \n        return outRGB;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n        \n    vec3 col = vec3(0);  \n       \n    float t = iTime*.0162;\n    \n    uv *= Rot(t*6.);\n    \n     for(float i=0.; i<1.; i+=1./6.){\n     \n        float depth = fract(i+t);\n        \n        float scale = mix(1.05, .05, depth)/depth;\n        \n        float fade = depth*smoothstep(.01,1.4,depth);\n        \n        col += numExplosions(uv*scale)*fade*vec3(.19,.59,.419+scale);\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}