{"ver":"0.1","info":{"id":"7sscDB","date":"1698052377","viewed":38,"name":"Simple Colorful Blob","username":"thihabisu1208","description":"blog study","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform float u_time;\nuniform vec2 u_resolution;\n\nfloat speed = 3.;\nfloat far = 3.;\nfloat blurness = 60.;\n\n// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nfloat blob(float x, float y, float fx, float fy, float size){\n   float xx = x + sin(iTime * fx / speed) * .7;\n   float yy = y + cos(iTime * fy / speed) * .7;\n\n   return size * (sin(iTime) + 2.) / sqrt(xx * xx + yy * yy);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n   vec2 uv = ( fragCoord.xy / iResolution.xy ) - 0.5;\n\n   vec2 noisePos = uv + snoise(uv * sin(u_time) * cos(u_time)) * .1;\n\n   float x = noisePos.x * far;\n   float y = noisePos.y * far;\n\n   float a = blob(x, y, 3.3, 3.2, 3.) + blob(x, y, 3.9, 3.0, 2.) + blob(x, y, 4.5, 2.8, 4.);\n   float b = blob(x, y, 3.2, 2.9, 2.3) + blob(x, y, 2.7, 2.7, 4.2) + blob(x, y, 2.2, 2.5, 1.8);\n   float c = blob(x, y, 2.4, 3.3, 1.6) + blob(x, y, 2.8, 2.3, 5.2) + blob(x, y, 3.2, 1.3, 3.5);\n   \n   vec3 d = vec3(a, b, c) / blurness;\n   \n   fragColor = vec4(d.x, d.y, d.z, 1.);\n}","name":"Image","description":"","type":"image"}]}