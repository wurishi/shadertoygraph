{"ver":"0.1","info":{"id":"tljXWc","date":"1567393162","viewed":786,"name":"Hexagon Tutorial","username":"fancyzero","description":"this is a tutorial about math and shader of hexagon\n","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["hexgon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float MipStrength = 0.5;// 0 to 1\nfloat xAngle = 30.;\nfloat Repeat = 10.0;\n\nvec3 hexgon(vec2 uv)\n{\n    xAngle = radians(xAngle);\n\n\n    float a = cos(xAngle);\n    float b = sin(xAngle);\n    float c = 0.0;\n    float d = 1.0;\n    \n    mat2x2 matHexToRect = mat2x2(a,b,c,d);\n    mat2x2 matRectToHex = mat2x2(d,-b,-c,a);\n    matRectToHex /= (a*d - b*c);\n    uv *= Repeat;\n\n    vec3 hexCoord = vec3((matRectToHex*uv),0.);\n    hexCoord.z =  -hexCoord.y-hexCoord.x;\n\n    vec3 roundedHexCoord = round(hexCoord);\n    \n    vec3 diff  = abs(roundedHexCoord - hexCoord);\n    if (diff.x > diff.y && diff.x > diff.z)\n        roundedHexCoord.x = -roundedHexCoord.y-roundedHexCoord.z;\n    if (diff.y > diff.z)\n        roundedHexCoord.y = -roundedHexCoord.x-roundedHexCoord.z;\n    else\n        roundedHexCoord.z = -roundedHexCoord.x-roundedHexCoord.y;\n    vec2 outuv = (matHexToRect*roundedHexCoord.xy).xy;\n\n    float dist = min(roundedHexCoord.x,(min(roundedHexCoord.y,roundedHexCoord.z)));\n    return vec3(outuv.xy/Repeat,dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 offset = vec2(4.0/sqrt(3.0),2.0)/2.;\n\tfloat p = (sin(iTime)+1.0)/2.0;\n    Repeat = floor(p*100.)*2.+10.;\n\tvec2 Res = iResolution.xy;\n    vec2 uv = (fragCoord)/Res.y;\n    \n    vec2 canvasSize = vec2(Res.y/Res.x,1.0);\n   \n    uv = hexgon(uv).xy;\n   \t\n    uv *= vec2(Res.y/Res.x,1.);\n\n      //select correct mip by tiling\n     fragColor =  textureGrad(iChannel0, uv,vec2(MipStrength/Repeat,0),vec2(0,MipStrength/Repeat));\n  \n}","name":"Image","description":"","type":"image"}]}