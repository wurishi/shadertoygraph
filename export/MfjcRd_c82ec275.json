{"ver":"0.1","info":{"id":"MfjcRd","date":"1722875213","viewed":23,"name":"Osciladores 2.4","username":"jpupper","description":"//2.4\n//Mezclando ondas \n//Taller de Livecoding con visuales en GLSL \n","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["tutorial","sin","cos","shaders","shaders","livecoding","functions","taller","tutoriales","osciladores"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//COMO EL NUMERO PI NO VIENE INCLUDO EN GLSL LO DEFINIMOS MANUALMENTE.\n//Utilizamos la estructura #define para definir constantes en el programa.\n#define PI 3.14159265359\n#define time iTime\n#define resolution iResolution\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = gl_FragCoord.xy / resolution.xy; //Obtengo las coordenadas UV(coordenadas cartesianas.\n\n    float forma  =  sin(time+uv.x*10.*PI)*0.5+0.5; //Degrade constante en X\n    float forma2 =  sin(time+uv.y*5.*PI)*0.5+0.5;\n    \n    //Existen varias maneras de mezclar las ondas senoidales. \n    \n    //EJEMPLO 1 : \n    //suma de 2 ondas : \n    float formafinal  = forma + forma2 ; \n    \n    \n    //EJEMPLO 2 : \n    //Multiplicacion de 2 ondas: \n    //float formafinal  = forma * forma2 ; \n    \n    //EJEMPLO 3 : \n    //Mezclarlas dentro de una tercera onda senoidal.\n    //float formafinal  = sin(forma * forma2*10+time) ; \n    \n    \n    fragColor = vec4(vec3(formafinal),1.0); \n\n}","name":"Image","description":"","type":"image"}]}