{"ver":"0.1","info":{"id":"7sfSz2","date":"1618862514","viewed":243,"name":"Luna toy","username":"kaihagseth","description":"Youtube inspired moire","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["moire","toy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Inspired by Tim Rowetts youtube channel :)\n// https://www.youtube.com/watch?v=Mx7xusheSN0\n\n#define PI 3.141592\n#define ROLLSPEED 0.2\n#define STRIPES 24.\n#define RADIUS STRIPES/5.\n\n// True pixelwidth for antialiasing. Thank you Fabrice Neyret!\n#define PW STRIPES/iResolution.y \n\nfloat horizontalStripes(in vec2 uv)\n{\n    return smoothstep(-PW,PW, abs(fract(uv.y)-.5) - .25);\n}\n\nmat2 rotate2d(float angle)\n{\n    return mat2 (cos(angle), -sin(angle), sin(angle), cos(angle)) ;\n}\n\nfloat maskCircle(in vec2 uv, float radius)\n{\n    return smoothstep(radius-PW, radius+PW, length(uv));\n}\n\nvec2 roll(float dist, vec2 uv)\n{\n    float t = iTime * ROLLSPEED;\n    uv.x += dist * RADIUS * cos(t);\n    uv *= -rotate2d(dist * -cos(t));\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5* iResolution.xy) / iResolution. y;\n    vec2 st = uv;\n    uv *= STRIPES;\n    vec2 lightRoller =  roll(PI, uv + vec2(0.,(STRIPES/4.)));\n    vec2 darkRoller =   roll(-PI, uv - vec2(0., -.5+(STRIPES/4.)));\n    float lightRollerColor = horizontalStripes(lightRoller) * (1. - maskCircle(lightRoller, RADIUS));\n    float darkRollerColor =  horizontalStripes(darkRoller) * (1. - maskCircle(darkRoller, RADIUS));\n    fragColor = vec4(horizontalStripes(uv) + lightRollerColor - darkRollerColor);\n\n}","name":"Image","description":"","type":"image"}]}