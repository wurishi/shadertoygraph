{"ver":"0.1","info":{"id":"MXdGWH","date":"1716448071","viewed":72,"name":"Vanilla Berry Swirl","username":"Rahn","description":"berry good","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","swirl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 2\n\nvec3 galaxyColor(float s) {\n    return mix(\n        vec3(0.1, 0.1, 0.2) + 0.2 * sin(vec3(3.0, 2.0, 1.0) * s * 3.0),\n        vec3(0.5, 0.3, 0.2) + 0.2 * cos(vec3(1.0, 2.0, 3.0) * s * 2.0),\n        0.5 + 0.5 * sin(s * 6.0 + vec3(0.0, 1.0, 2.0))\n    );\n}\n\nvec3 shape(in vec2 uv) {\n    float time = iTime * 0.05 + 47.0;\n    vec2 z = -1.0 + 2.0 * uv;\n    z *= 1.5;\n\n    vec3 col = vec3(0.0);\n    for (int j = 0; j < 48; j++) {\n        float s = float(j) / 16.0;\n        float f = 0.2 * (0.5 + 1.0 * fract(sin(s * 20.0)));\n\n        vec2 c = 0.5 * vec2(cos(f * time + 17.0 * s), sin(f * time + 19.0 * s));\n        z -= c;\n        float zr = length(z);\n        float ar = atan(z.y, z.x) + zr * 0.6;\n        z = vec2(cos(ar), sin(ar)) / zr;\n        z += c;\n\n        vec3 galaxyCol = galaxyColor(s);\n        if (length(galaxyCol) > 1.0) {\n            galaxyCol *= 0.7; \n        }\n\n        col += galaxyCol * exp(-10.0 * dot(z, z));\n    }\n\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float e = 1.0 / iResolution.x;\n\n    vec3 tot = vec3(0.0);\n    for (int m = 0; m < AA; m++)\n        for (int n = 0; n < AA; n++) {\n            vec2 uv = (fragCoord + vec2(m, n) / float(AA)) / iResolution.xy;\n            vec3 col = shape(uv);\n            float f = dot(col, vec3(0.333));\n            vec3 nor = normalize(vec3(\n                dot(shape(uv + vec2(e, 0.0)), vec3(0.333)) - f,\n                dot(shape(uv + vec2(0.0, e)), vec3(0.333)) - f,\n                e\n            ));\n            col += 0.1 * vec3(1.0, 0.9, 0.5) * dot(nor, vec3(0.8, 0.4, 0.2));\n            col += 0.2 * nor.z;\n            tot += col;\n        }\n    tot /= float(AA * AA);\n\n    tot = pow(clamp(tot, 0.0, 1.0), vec3(0.8, 1.1, 1.3));\n\n    vec2 uv = fragCoord / iResolution.xy;\n    tot *= 0.4 + 0.6 * pow(16.0 * uv.x * uv.y * (1.0 - uv.x) * (1.0 - uv.y), 0.1);\n\n    fragColor = vec4(tot, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}