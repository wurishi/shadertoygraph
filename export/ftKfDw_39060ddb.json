{"ver":"0.1","info":{"id":"ftKfDw","date":"1664626333","viewed":144,"name":"10.01.2022:LiteBrite","username":"g___r___e___g","description":"practicing some basic shader skills","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fragtober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// blackle noise https://suricrasia.online/demoscene/functions/\n#define FK(k) floatBitsToInt(cos(k))^floatBitsToInt(k)\nfloat hash(vec2 p) {\n  int x = FK(p.x); int y = FK(p.y);\n  return float((x-y*y)*(x*x+y)-x)/2.14e9;\n}\n\n// iq Smooth HSV to RGB conversion https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv(in vec3 c)\n{\n  vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n  rgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n  return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec4 grid(vec2 p) {\n  vec2 st = fract(p) - 0.5;\n  vec2 id = floor(p);\n  return vec4(st, id);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord - 0.5 * iResolution.xy)\n            / min(iResolution.x, iResolution.y);\n\n  uv *= 18.;\n  vec4 g = grid(uv+.5);\n  float t = iTime * (hash(g.zw) * 0.5 + 1.) + 2. * hash(g.zw*2392.234);\n  t = sin(t) * .5 + .5;\n  float d = length(g.xy) - 0.4 * t;\n\n  float hue = atan(g.z, g.w)/6.28;\n  vec3 c = hsv(vec3(hue, hash(g.zw) * .25 + .75, 1.)) * smoothstep(.01, -.01, d);\n\n  fragColor = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}