{"ver":"0.1","info":{"id":"csyGDR","date":"1678368812","viewed":69,"name":"Remisto. Sweden flag","username":"Remisto","description":"It's just a Sweden flag, I'm practicing :)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 bla = vec3(0.0, 0.415686, 0.6549);\nconst vec3 gul = vec3(0.9961, 0.8, 0.00784);\nconst vec3 svart = vec3(0.0);\nconst float PI = 3.1415;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float flagStep = iResolution.y * 0.1;\n    // Sweden flag has 16x10 grid\n    if (fragCoord.x > flagStep * 16.0)\n    {\n        fragColor = vec4(svart, 1.0);\n        return;\n    }\n\n    // Normalized pixel coordinates (from 0 to 1) within flag area\n    vec2 uv = fragCoord/vec2(flagStep * 16.0, flagStep * 10.0);\n\n    \n    const float mainWaveLength = 0.70;\n    const float mainWaveKoef = 2.0 * PI / mainWaveLength;\n    const float mainWaveSpeed = 1.5;\n\tfloat mainWave = 0.05 * sin(mainWaveKoef * (uv.x - mainWaveSpeed * iTime));\n    \n    const float finalWaveLength = 3.0;\n    const float finalWaveKoef = 2.0 * PI / finalWaveLength;\n    const float finalWaveSpeed = 1.0;\n\tfloat finalWave = 0.05 * sin(finalWaveKoef * (mainWave - finalWaveSpeed * iTime));\n    \n    if (uv.y < finalWave || abs(1.0 - uv.y) < -finalWave)\n    {\n        fragColor = vec4(svart, 1.0);\n        return;\n    }\n    \n    /*\n    uv = abs(uv - vec2(0.375, finalWave * uv.x + 0.5)) - vec2(0.0625,0.1 - uv.x * 0.01);\n    \n    // Output to screen\n    fragColor = vec4(uv.x < 0.0 || uv.y < 0.0 ? gul : bla, 1);\n    */\n    \n    // Implementation using Step (kinda)\n    float vert = step(0.3125, uv.x) - step(0.4375, uv.x);\n    float hor = smoothstep(0.399 + uv.x * 0.01 + finalWave, 0.4 + uv.x * 0.01 + finalWave, uv.y) - smoothstep(0.599 - uv.x * 0.01 + finalWave, 0.6 - uv.x * 0.01 + finalWave, uv.y);\n    vec3 col = mix(bla, gul, vert + hor - vert * hor);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}