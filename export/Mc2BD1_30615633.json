{"ver":"0.1","info":{"id":"Mc2BD1","date":"1724968587","viewed":25,"name":"Voronoi Boronoi","username":"jcraw","description":"it'sa voronoi!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.14159265\n\nbool useFirstMethod = false;\n\nvec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx * vec3(123.34, 234.34, 345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // from -1 to 1 \n    vec2 uv = (2. * fragCoord-iResolution.xy)/iResolution.y;\n    float t = iTime * .2; \n\n    vec3 col = vec3(0);\n\n    // Time varying pixel color\n    vec3 time_color = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    col = vec3(0.);\n    \n    //col.rg = N22(uv);\n    \n    float m = 0.;\n    float minDist = 100.;\n    \n    \n    if(useFirstMethod) {\n        float cellIndex = 0.;\n        for(float i =0.; i<50.; i++) {\n            vec2 n = N22(vec2(i));\n            vec2 p = sin(n*t);\n\n            float d = length(uv-p);\n            m += smoothstep(.025, .02, d);\n\n            if(d < minDist) {\n                minDist = d; \n                cellIndex = i;\n            }\n        }\n        col = vec3((cellIndex/50. + minDist)/2.)  * time_color ; \n    } else {\n        uv *= 3.;\n        vec2 grid_uv =  fract(uv) - .5;\n        vec2 grid_id = floor(uv);\n        \n        vec2 cellIndex = vec2(0);\n        for(float y=-1.; y<=1.; y++) {\n            for(float x=-1.; x <=1.; x++) {\n                vec2 offset = vec2(x, y);\n                vec2 n = N22(grid_id + offset);\n                vec2 p = offset + sin(n*t)*.5;\n                p -= grid_uv;\n                float direct_distance = length(p);\n                float manhattan_distance = abs(p.x) + abs(p.y);\n                float d = mix(direct_distance, manhattan_distance, sin(t* 2.)*.5 + .5);\n                \n                if(d < minDist) {\n                    minDist = d; \n                    cellIndex = grid_id + offset;\n                }\n            }\n        }\n        \n        col = vec3(minDist) * time_color;\n        //col.rg = cellIndex * .1;\n    }\n    \n    \n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}