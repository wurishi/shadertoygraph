{"ver":"0.1","info":{"id":"XdGyDW","date":"1521936642","viewed":101,"name":"Epicycloid_2_Anvoker","username":"Anvoker","description":"Messing around with epicycloids with no real idea of what I'm doing. I learned that epicycloids are a lot more complex than I thought. Can't find any algebraic equation that defines an epicycloid of arbitrary k. Just a few individual cases for specific k.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["unfinished","geometry","epicyloid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n//Play with these\nconst float p = 13.0;\nconst float q = 3.0;\nconst float speed = 8.0;\nconst float r = 0.05;\nconst float dotSize = 0.0025;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv - 0.5;\n   \n    const vec3 backCol = vec3(0.0, 0.0, 0.1);\n    const vec3 epicCol = vec3(1.0, 0.0, 1.0);\n    vec3 col = backCol;\n    \n    float psin = sin(iTime / speed) * p;\n\tfloat k    = float(psin) / float(q);\n    const float passes = PI * max(1.0, float(q)) * 2.0;\n    const float inc    = 0.25 / PI / passes;\n     \n    // Epicycloid Equation\n    for (float i = 0.0; i < passes; i += inc)\n    {\n    \tfloat x = r*(k+1.0)*cos(i) - r*cos((k+1.0)*i);\n        float y = r*(k+1.0)*sin(i) - r*sin((k+1.0)*i);\n        col += epicCol * step(distance(uv, vec2(x,y)), dotSize);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}