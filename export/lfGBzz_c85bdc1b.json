{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"const int N = 3;\nconst float LENGTH = 3.0;\nconst float INF = 1.0 / 0.0;\nconst float SIZE = 2.0;\nconst float OFFSET = 0.0;\nconst bool  SHOW_SDF = true;\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sierpinskiCarpet(in vec2 p)\n{\n    float d = INF;\n\n    for (int i = 0; i < N; i++)\n    {\n        float subdiv = pow(LENGTH, float(i));\n\n        float scaling = (SIZE) / subdiv;\n\n        vec2 rep = p - round(p / scaling) * (scaling) ;\n        \n        vec2 dims = vec2(SIZE / (2.0 * LENGTH * subdiv));\n        d = min(d, sdBox(rep, dims));\n    }\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec2 p = 2.0 * uv - 1.0 + vec2(OFFSET * SIZE);\n    p.x *= aspect;\n\n    float d = sierpinskiCarpet(p);\n\n    float dOuterBox = sdBox(p, vec2(SIZE * 0.5));\n\n    d = dOuterBox < 0.0 ? d : dOuterBox;\n\n    if(SHOW_SDF)\n    {\n        vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n        col *= 1.0 - exp(-10.0*abs(d));\n        col *= 0.8 + 0.2*cos(180.0*d);\n        col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.005,abs(d)) );\n\n        fragColor = vec4(col, 1.0);\n    }\n    else\n    {\n        fragColor.xyz = vec3(sign(max(d, dOuterBox)) * sign(dOuterBox));\n        fragColor.a = 1.0;\n    }\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lfGBzz","date":"1733687619","viewed":47,"name":"Sierpinski Carpet General","username":"sir55dum","description":"Customizable Sierpinski Carpet","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""}}