{"ver":"0.1","info":{"id":"lftyWs","date":"1731368725","viewed":32,"name":"Tom and Jerry","username":"dubstepkin","description":"Made with gpt","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Rotating Optical Illusion Shader\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalize coordinates\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float time = iTime * 0.5; // Adjust speed of illusion\n\n    // Calculate the angle and distance from the center\n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n\n    // Create a rotating pattern based on angle and radius\n    float pattern = cos(10.0 * angle - radius * 12.0 + time);\n    \n    // Use smoothstep to create soft, rounded edges\n    float illusion = smoothstep(0.2, 0.5, pattern);\n    \n    // Color the illusion with a gradient for visual depth\n    vec3 color1 = vec3(0.1, 0.1, 0.3); // Pinkish\n    vec3 color2 = vec3(0.1, 0.1, 0.9); // Bluish\n    vec3 color = mix(color1, color2, illusion);\n    \n    // Apply a fading effect based on distance from the center\n    color *= smoothstep(1.0, 0.2, radius);\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}