{"ver":"0.1","info":{"id":"3lycWw","date":"1618852597","viewed":75,"name":"dvg_Radial_Mask","username":"david4jsus","description":"Based on the initial default shader, learned to make a radial mask. Move the mouse on the X axis to adjust the radius of the mask.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","radial","mask"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // Initialize mask\n    vec3 mask = vec3 (0.0);\n    \n    // Radial mask\n    if (iMouse.x == 0.0) { // Have the shader not start as all black\n        mask = vec3 (distance (uv.xyx, vec3 (0.5))) * vec3 (abs (sin (iTime)) * 5.0);\n    } else {               // Intended code\n        mask = vec3 (distance (uv.xyx, vec3 (0.5))) * vec3 (iMouse.x * 0.01);\n    }\n\n    // Output to screen\n    fragColor = vec4(col * mask,1.0);\n}","name":"Image","description":"","type":"image"}]}