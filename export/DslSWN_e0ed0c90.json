{"ver":"0.1","info":{"id":"DslSWN","date":"1670036686","viewed":72,"name":"Texture noised","username":"calebxcaleb","description":"noised some texture","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592653589793238462643383;\n\nvec2 random2(vec3 st){\n  vec2 S = vec2( dot(st,vec3(127.1,311.7,783.089)),\n             dot(st,vec3(269.5,183.3,173.542)) );\n  return fract(sin(S)*43758.5453123);\n}\n\nvec3 rand_dir( vec3 seed)\n{\n\tvec2 uv = random2(seed);\n\n\tfloat theta = 2.0 * PI * uv[0];\n\tfloat phi = acos(2.0 * uv[1] - 1.0);\n\n\treturn vec3(cos(theta) * sin(phi), sin(theta) * sin(phi), cos(phi));\n}\n\nvec3 smoooth(vec3 f){\n    f[0] = 6.0 * pow(f[0], 5.0) - 15.0 * pow(f[0], 4.0) +  10.0 * pow(f[0], 3.0);\n    f[1] = 6.0 * pow(f[1], 5.0) - 15.0 * pow(f[1], 4.0) +  10.0 * pow(f[1], 3.0);\n    f[2] = 6.0 * pow(f[2], 5.0) - 15.0 * pow(f[2], 4.0) +  10.0 * pow(f[2], 3.0);\n    return fract(f);\n}\n\nfloat perlin_noise(vec3 seed){\n    vec3 p000 = rand_dir(floor(seed));\n    vec3 p001 = rand_dir(floor(seed) + vec3(0,0,1));\n    vec3 p010 = rand_dir(floor(seed) + vec3(0,1,0));\n    vec3 p011 = rand_dir(floor(seed) + vec3(0,1,1));\n    vec3 p100 = rand_dir(floor(seed) + vec3(1,0,0));\n    vec3 p101 = rand_dir(floor(seed) + vec3(1,0,1));\n    vec3 p110 = rand_dir(floor(seed) + vec3(1,1,0));\n    vec3 p111 = rand_dir(floor(seed) + vec3(1,1,1));\n    \n    vec3 d000 = floor(seed) - seed;\n    vec3 d001 = floor(seed) + vec3(0,0,1) - seed;\n    vec3 d010 = floor(seed) + vec3(0,1,0) - seed;\n    vec3 d011 = floor(seed) + vec3(0,1,1) - seed;\n    vec3 d100 = floor(seed) + vec3(1,0,0) - seed;\n    vec3 d101 = floor(seed) + vec3(1,0,1) - seed;\n    vec3 d110 = floor(seed) + vec3(1,1,0) - seed;\n    vec3 d111 = floor(seed) + vec3(1,1,1) - seed;\n    \n    vec3 smoothed = smoooth(fract(seed));\n\n    float x_mix_1 = mix(dot(p000, d000), dot(p100, d100), smoothed[0]);\n    float x_mix_2 = mix(dot(p001, d001), dot(p101, d101), smoothed[0]);\n    float x_mix_3 = mix(dot(p010, d010), dot(p110, d110), smoothed[0]);\n    float x_mix_4 = mix(dot(p011, d011), dot(p111, d111), smoothed[0]);\n    \n    float y_mix_1 = mix(x_mix_1, x_mix_3, smoothed[1]);\n    float y_mix_2 = mix(x_mix_2, x_mix_4, smoothed[1]);\n    \n    return mix(y_mix_1, y_mix_2, smoothed[2]);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 texCol = texture(iChannel0, uv);\n    vec3 point1 = vec3((texCol.x + texCol.y + texCol.z) / 3.0) * 3.0;\n        \n    bool is_fract = false;\n    \n    float perlin1 = float(is_fract) * (fract(perlin_noise(point1)) + 1.0) * 0.5 + float(!is_fract) * (perlin_noise(point1) + 1.0) * 0.5;\n\n    vec3 Perlin = vec3(perlin1);\n\n    fragColor = vec4(Perlin, 1.0);\n}","name":"Image","description":"","type":"image"}]}