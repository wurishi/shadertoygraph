{"ver":"0.1","info":{"id":"3tXBRl","date":"1597386209","viewed":153,"name":"Swimming pool water","username":"akanarika","description":"that's so fake","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx * vec3(452.6, 725.34, 921.2));\n    a += dot(a, a + 16.2);\n    return fract(vec2(a.x * a.y, a.y * a.z));\n}\n\nmat2 rot(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2. * (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n\n    float m = 0.;\n    float t = iTime + 100.;\n    \n    float minDist = 200.;\n    \n    vec3 waterCol = vec3(0.1, 0.5, 0.7);\n    \n    for (float i = 0.; i < 50.; i++) {\n        vec2 n = N22(vec2(i));\n        vec2 p = rot(iTime * sqrt(.1 * (length(uv + n))) * 0.0008) \n            * sin(n * t * .3) \n            * vec2(iResolution.x / iResolution.y, 1.);\n        \n        float d = length(uv - p) * .5;\n        m += d * length(n);\n        \n        minDist = min(minDist, d);\n    }\n    \n\n    vec3 col = vec3(pow(minDist, 1.8)) * waterCol * 6. + waterCol * (.8 + 0.05 * length(N22(uv + iTime)));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}