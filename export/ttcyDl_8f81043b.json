{"ver":"0.1","info":{"id":"ttcyDl","date":"1610151256","viewed":209,"name":"Juggling to infinity (with step)","username":"Kanata","description":"tweaked my old shader","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["math","mathematics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2 res = iResolution.xy,\n          uv = ( u* 2. - res) / min(res.x, res.y);\n\n    float t = iTime;\n    float scale = 2.;\n    uv *= scale;\n    \n    float p = length(cmul(cmul(uv, uv),uv) + tan(t)* cmul(uv,uv) + sin(t)* uv+ cos(t));\n    \n    O = vec4(vec3(step(0.5, 0.1 / p)), 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 cmul(in vec2 a, in vec2 b) {\n\treturn vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\n}","name":"Common","description":"","type":"common"}]}