{"ver":"0.1","info":{"id":"tlyXzd","date":"1586540612","viewed":144,"name":"Lava Metaballs","username":"loni852","description":"Lava","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["metaballs","balls","meta","lava"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//If you use this in any way please let me know, it would make my day.\n\nconst float Count = 12.;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\n    \n    //float noise = texture(iChannel0,uv).r;\n    //float npnoise = (noise-0.5) *2.0;\n    \n    \n    float MBradius = 0.015;\n\tvec3 finalcolor;\n    \n    vec2 metaBalls[int(Count)];\n    \n    for(float i = .0; i < Count; i++){\n        float noise = texture(iChannel0,vec2(i*0.2*cos((iTime*0.003)),i*0.1*sin((iTime*0.004)))).r;\n        float npnoise = (noise-0.5) *2.0;\n        \n        \n    \tvec2 MBs = 0.5*sin( iTime*(i*0.3)+ vec2(1.0+npnoise,0.5+npnoise) )*i/9.0;\n    \tfloat MBstoUV = distance(uv.xy,MBs);\n        float MBsColor = MBradius/MBstoUV;\n        finalcolor += vec3(MBsColor*step(0.0,i)*step(i,10.0),MBsColor*step(5.0,i)*step(i,12.0),0.0);\n    \n        \n    }\n    \n    \n    //float finalcolor = MBColor + MB2Color;\n    \n    vec3 col = mix(vec3(finalcolor.r,0.2,0.2),finalcolor,smoothstep(0.99,1.0,finalcolor.r));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}