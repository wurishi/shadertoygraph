{"ver":"0.1","info":{"id":"4ltGRl","date":"1470890890","viewed":145,"name":"3: Grayscale + Contrast Interp.","username":"andgokevin","description":"Interpolating between grayscale and color as well as low and high contrast.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage (out vec4 fragColor, in vec2 fragCoord) {\n  vec2 xy = fragCoord.xy / iResolution.xy;  // Normalized.    \n  vec4 texColor = texture(iChannel0, xy);  // Get color of image at coordinate.\n  \n  // Get average value to grayscale\n  float average = (texColor.r + texColor.g + texColor.b) / 3.0;\n\n  // Tween contrast.\n  float contrastFactor = sin(iTime) + 0.5;\n  if (average > 0.5) {\n    average = min(average + (average - 0.5) * contrastFactor, 1.0);\n  } else {\n    average = max(average - (0.5 - average) * contrastFactor, 0.0);\n  }\n\n        \n  // Tween from full color to grayscale.\n  float timeFactor = abs(sin(iTime));\n  float r = texColor.r - timeFactor * (texColor.r - average);\n  float g = texColor.g - timeFactor * (texColor.g - average);\n  float b = texColor.b - timeFactor * (texColor.b - average);\n   \n  fragColor = vec4(r, g, b, 1.0);\n}","name":"Image","description":"","type":"image"}]}