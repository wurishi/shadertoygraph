{"ver":"0.1","info":{"id":"msKGDw","date":"1678668505","viewed":167,"name":"checkerboard sequence","username":"Carandiru","description":"simple shader that shows a continuous series of checkerboard states in a simple yet beautiful way.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["checkerboard","xor","pattern","sequence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PixelStart 256\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uvec2 pixel = uvec2(fragCoord / 8.0f);\n\n    uint PixelSize = uint(PixelStart) + uint(floor(iTime));\n    float PixelSizeFract = fract(iTime);\n    \n    float tile0 = float(bool(((pixel.x & PixelSize) - (pixel.y & PixelSize))));\n    \n    float tile1 = float(bool(((pixel.x & (PixelSize + 1u)) - (pixel.y & (PixelSize + 1u)))));\n    \n    float s = 1.0f - mix(tile0, tile1, PixelSizeFract);\n    \n    fragColor = vec4(vec3(s),1.0);\n}","name":"Image","description":"","type":"image"}]}