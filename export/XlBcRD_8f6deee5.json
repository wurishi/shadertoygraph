{"ver":"0.1","info":{"id":"XlBcRD","date":"1507582202","viewed":100,"name":"Reveal - EGP 200","username":"Quincy_Buchanan","description":"Click and drag to reveal a sharpened texture","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Quincy Buchanan\n//Click and drag to reveal sharpened texture.\n\n//blurring matrix\nmat3 blur = mat3(\n    .111, .111, .111,\n    .111, .111, .111,\n    .111, .111, .111\n    );\n\n//sharpening matrix\nmat3 sharpen = mat3(\n    0., -1., 0.,\n    -1., 5., -1.,\n    0., -1., 0.\n    );\n\n//\nvec3 aSample1(const int x, const int y, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n    uv = (uv + vec2(x, y)) / iChannelResolution[0].xy;\n    return texture(iChannel0, uv).xyz;\n}\n\nvec3 aSample2(const int x, const int y, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n    uv = (uv + vec2(x, y)) / iChannelResolution[0].xy;\n    return texture(iChannel1, uv).xyz;\n}\n\n//apply blurring filter\nvec3 aFilter1(in vec2 fragCoord, mat3 kernel)\n{\n    vec3 sum = vec3(0.,0.,0.);\n    \n    for(int i = 0; i < 3; i++)\n    {\n        for(int j = 0; j < 3; j++)\n        {\n            sum += aSample1(i-1, j-1, fragCoord) * kernel[i][j];\n        }\n    }\n    \n    return sum;\n}\n\n//apply sharpening filter\nvec3 aFilter2(in vec2 fragCoord, mat3 kernel)\n{\n    vec3 sum = vec3(0.,0.,0.);\n    \n    for(int i = 0; i < 3; i++)\n    {\n        for(int j = 0; j < 3; j++)\n        {\n            sum += aSample2(i-1, j-1, fragCoord) * kernel[i][j];\n        }\n    }\n    \n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 fc = fragCoord.xy;\n    \n    //variables for circle\n    vec2 Location = iMouse.xy / iResolution.xy;\n    float Radius = .1;\n    vec2 diffvec = Location - uv;\n    diffvec.y *= iResolution.y / iResolution.x;\n    \n    vec3 cf1 = aFilter1(fc, blur);\n    vec3 cf2 = aFilter2(fc, sharpen);\n    \n    //create and mix layers\n    vec4 Layer1 = vec4(cf1, 1.);\n    vec4 Layer2 = vec4(cf2, step(length(Location-uv),Radius));\n    \n    vec4 Composite = mix(Layer1, Layer2, Layer2.a);\n    \n    fragColor = Composite;\n}","name":"Image","description":"","type":"image"}]}