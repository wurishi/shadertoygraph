{"ver":"0.1","info":{"id":"XcjcDm","date":"1722435049","viewed":47,"name":"ARTS1308 Lichen Simulation ","username":"lyhokia","description":"Homework: Simulation","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["simulation","lichen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 lichen_data = texture(iChannel0,uv).xyz;\n    \n    vec3 lichen_old = vec3(0.235, 0.31, 0.337);\n    vec3 lichen_young = vec3(0.345, 0.933, 0.729);\n    \n    float life = lichen_data.x;\n    float age = lichen_data.y;\n    \n    vec3 age_mix = mix(vec3(0.0), mix(lichen_young, lichen_old, atan(age)), life);\n    fragColor = vec4(age_mix,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define LIVE_DIE 0.001\n\n\nfloat nrand( vec2 n )\n{\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nfloat rand( vec2 uv )\n{\n\tfloat t = fract( iTime );\n\treturn nrand( uv + 0.07*t );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat du = 1. / iResolution.x;\n    float dv = 1. / iResolution.y;\n    \n\tvec2 uv = fragCoord/iResolution.xy;\n    \n\tfloat liveness = texture(iChannel0,uv).x;\n    float liveness_old = liveness;\n    float age = texture(iChannel0, uv).y;\n    float food = texture(iChannel0,uv).z;\n    \n    float liveness_sum = 1./16. * texture(iChannel0,uv + vec2(-du,-dv)).x +\n              3./16.  * texture(iChannel0,uv + vec2(-du,0)).x + \n              1./16. * texture(iChannel0,uv + vec2(-du,dv)).x + \n              3./16.  * texture(iChannel0,uv + vec2(0,-dv)).x + \n              3./16.  * texture(iChannel0,uv + vec2(0,dv)).x +\n              1./16. * texture(iChannel0,uv + vec2(du,-dv)).x +\n              3./16.  * texture(iChannel0,uv + vec2(du,0)).x + \n              1./16. * texture(iChannel0,uv + vec2(du,dv)).x;\n\n    // Grow cell when either enough food and enough cell material\n    // or enough food and enough cell material un surrounding pixels\n    if ((liveness_sum > 0.5 || liveness > 0.5) && food > 0.8){\n        liveness += 0.1;\n    }\n    \n    // Cell eats food\n    if (liveness > 0.5){\n        food -= 0.01;\n    }\n    \n    // Cell dies when not enough food or to many surrounding cells\n    // Similar rule to game of life\n    if (food < 0.5 || liveness_sum > 0.99){\n        liveness -= liveness * 0.1;\n    \n    }\n    \n    // Food regrows\n    food += 0.002;\n    \n\n    if (liveness > LIVE_DIE && liveness_old < LIVE_DIE) {\n        age = 0.0;\n    } else if (liveness_old > liveness) { // we are dying\n          age += 0.001;\n    } else if (liveness_old < liveness) { // we are thriving\n          age -= 0.002;\n    }\n    \n    // Mouse interaction\n    if (distance(iMouse.xy, fragCoord) < 15. && iMouse.z > 0.){\n        food = rand(uv+vec2(0.2));\n        age = 0.0;\n        liveness = rand(uv);\n    }\n    \n    // Init\n    if (iFrame < 1){\n        liveness = rand(uv)*0.9;\n        age = 0.0;\n        food = 0.8;\n    }\n    \n    fragColor = vec4(liveness, 0, food, 1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}