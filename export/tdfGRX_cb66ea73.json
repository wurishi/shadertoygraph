{"ver":"0.1","info":{"id":"tdfGRX","date":"1547019461","viewed":104,"name":"TraceCircles","username":"Sevapp","description":"TraceCircles","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","circles","animate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distToCirc(vec3 rayPos, vec3 rayVec, vec3 planePos, vec3 planeNormal)\n{\n\tfloat  dist = dot(rayPos - planePos, planeNormal) / dot(rayVec, planeNormal);\n\treturn dist;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 pixelColor  = vec4(1.0);  \n    vec2 pixelPos    = fragCoord.xy;\n    \n    vec2 uv    = fragCoord / iResolution.xy;\n    vec3 col   = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n    \n    pixelColor = vec4(col * (abs(fragCoord.y - iResolution.y / 2.0)) * 0.005, 1.0);\n    \n    vec3 camPos = vec3(iResolution.x / 2.0, iResolution.y / 2.4, 600.0);\n    vec3 rayVec = normalize(vec3(pixelPos, 0.0) - camPos);\n    \n    \n    vec3 planeNormal = vec3(cos(iTime) / 5.0,  1.0,  0.0);\n    float offset = 500.0 * cos(iTime);\n    for (int i = -10; i < 10; i ++)\n    {\n        vec3 planePos = vec3(0.0, iResolution.y + float(i) * 100.0 + offset, -2100.0);\n        \n        float dist    = distToCirc(camPos, rayVec, planePos, planeNormal);\n\n        if (dist > 0.0)\n        {\n            vec3 point = rayVec * (abs(dist) + camPos);\n            float cDist = distance(point, planePos);\n            if (cDist < 1000.0 && cDist > 900.0) pixelColor = vec4(col, 1.0);\n        }\n    }\n    \n    \n    \n    fragColor = pixelColor;\n}","name":"Image","description":"","type":"image"}]}