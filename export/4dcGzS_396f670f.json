{"ver":"0.1","info":{"id":"4dcGzS","date":"1450295747","viewed":196,"name":"BinarySubDiv2Polar","username":"jt","description":"Radial resp. Polar version of [url]https://www.shadertoy.com/view/ll2SW3[/url]\n(Applying polar transform & rotation inspired by lycium's https://www.shadertoy.com/view/4l2SRW)","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["radial","polar","subdivision","short","binarytree","dyadicseries"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Binary Sub-Division Pattern in Polar Coordinates - written 2015 by Jakob Thomsen\n// (essentially a polar/radial version of my https://www.shadertoy.com/view/ll2SW3)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Applying polar transform & rotation inspired by lycium's https://www.shadertoy.com/view/4l2SRW)\n\nvoid mainImage(out vec4 o, vec2 I)\n{\n    vec2 R = iResolution.xy;\n    I = (I+I-R)/R.y;\n    //I = (I+I-(I=iResolution.xy))/I.y; // NOT COMPATIBLE\n    I = vec2(fract(atan(I.y,I.x)/6.28),length(I));\n    o -= o;\n    //o += step(.5, fract(exp2(ceil(-log2(1.-I.y))) * I.x));\n    o += step(.5, fract(exp2(ceil(-log2(1.-I.y))) * I.x+iDate.w));\n}\n","name":"","description":"","type":"image"}]}