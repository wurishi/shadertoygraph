{"ver":"0.1","info":{"id":"ttKGzG","date":"1579260288","viewed":71,"name":"Grid Snowflakes","username":"magician0809","description":"Grid Snowflakes","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid","snowflake","infinite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n#define AA 3\n\nfloat remap(float val, float inMin, float inMax, float outMin, float outMax)\n{\n    return mix(outMin, outMax, clamp((val - inMin) / (inMax - inMin), 0.0, 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float N = 4.5;\n    const float N2 = 3.0;\n    const float R = 0.05;\n    const float R2 = 0.7;\n    const float T = PI / 3.0;\n    const float W = 0.25;\n    const float LW = 0.035;\n    const float LW2 = LW * N2;\n    \n    vec3 col = vec3(0.0);\n    \n    vec2 texelSize = 1.0 / iResolution.xy;\n    vec2 uvScreen = fragCoord / iResolution.xy;\n    \n    for (int aj = 0; aj < AA; ++aj)\n    for (int ai = 0; ai < AA; ++ai)\n    {\n    {\n        vec2 uvOffset = ((vec2(ai, aj) + 0.5) / float(AA) - 0.5) * texelSize;\n        vec2 uv = uvScreen + uvOffset;\n        \n        float val = 0.0;\n        {\n            uv = uv * 2.0 - 1.0;\n            uv.x *= iResolution.x / iResolution.y;\n            vec2 uv1 = uv * N + 0.5;\n            vec2 uv2 = uv * N * N2 + 0.5;\n            vec2 gid1 = floor(uv1);\n            vec2 gid2 = floor(uv2);\n            vec2 guv1 = (uv1 - gid1) * 2.0 - 1.0;\n            vec2 guv2 = (uv2 - gid2) * 2.0 - 1.0;\n            //line\n            val = 1.0 - val;\n            val *= 1.0 - step(abs(guv1.x), LW) * 0.2 * 0.5;\n            val *= 1.0 - step(abs(guv1.y), LW) * 0.2 * 0.5;\n            val *= 1.0 - step(abs(guv2.x), LW2) * 0.1 * 0.5;\n            val *= 1.0 - step(abs(guv2.y), LW2) * 0.1 * 0.5;\n            //dot\n            float ang = atan(guv1.x, guv1.y);\n            float len = length(guv1);\n            //big\n            float x = length(gid1) - remap(sin(iTime * T), -1.0, 1.0, 0.0, N);\n            x += sin(iTime * T) * (cos(ang * 6.0) * 0.5 + 0.5) * 2.0;\n            x = 1.0 / (1.0 + (x / W) * (x / W));\n            float radius = mix(R * 0.5, R2, x);\n            val *= 1.0 - step(length(guv1), radius);\n            //inverse\n            val = 1.0 - val;\n        }\n        col += val;\n    }\n    }\n    col /= float(AA * AA);\n    \n    vec3 rainbow = 0.2 + 0.2 * cos(iTime * T * 0.5 + uvScreen.xyx + vec3(0, 2, 4));\n    col += rainbow;\n    \n    col *= smoothstep(0.9, 0.3, length(vec2(0.5) - uvScreen));\n    \n    col = pow(col, vec3(1.0 / 2.2));\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}