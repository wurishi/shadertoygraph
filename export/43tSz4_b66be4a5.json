{"ver":"0.1","info":{"id":"43tSz4","date":"1718715775","viewed":88,"name":"find edges","username":"northtape","description":"find edges from adobe after effects","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sobel","postprocessing","edgedetection","kernel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool INVERT = true;\nfloat MIX = 0.0;\n\nmat3 sobel = mat3(-1, -2, -1,\n                   0,  0,  0,\n                   1,  2,  1);\n\nvec3 applySobel(sampler2D image, vec2 coord) {\n    vec2 tex_offset = 1.0 / iChannelResolution[0].xy;\n    vec3 colX, colY;\n    \n    for(int i = 0; i < 3; i++) {\n        for(int j = 0; j < 3; j++) {\n            vec3 tex = texture(image, coord + vec2(i-1, j-1) * tex_offset).rgb;\n            colX += tex * sobel[i][j];\n            colY += tex * sobel[j][i];\n        }\n    }\n    \n    return sqrt((colX * colX) + (colY * colY));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 edge = applySobel(iChannel0, uv);\n    \n    if (!INVERT) {\n        edge = vec3(1.0) - edge;\n    }\n    \n    vec3 orig = texture(iChannel0, uv).rgb;   \n    vec3 color = mix(orig, edge, 1.0 - MIX);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}