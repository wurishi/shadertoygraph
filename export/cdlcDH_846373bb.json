{"ver":"0.1","info":{"id":"cdlcDH","date":"1686776214","viewed":95,"name":"We are watching","username":"Raccoon5","description":"My first shader according to the tutorial of\nhttps://www.youtube.com/watch?v=f4s1h2YETNY\n\n","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvec3 my_palette (float t)\n{\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(1,1,1);\n    vec3 d = vec3(0.263,0.416,0.557);\n    return palette(t,a,b,c,d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) /iResolution.y;\n    \n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 3.0; i ++)\n    {\n    uv = fract(uv * 1.5);\n    uv -= 0.5;\n    \n    float len = length(uv) * exp(-length(uv0));\n    \n    vec3 col = my_palette(length(uv0) + i *0.4 + iTime*0.4);\n    \n    len = sin(len * 8.0 + iTime) / 8.0;\n    len = abs(len);\n    len = pow(0.005 / len, (sin(iTime + sin(i + iTime)) + 4.0) / 8.0);\n    \n    col *= len;\n    \n    finalColor += col * len;\n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}