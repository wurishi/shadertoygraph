{"ver":"0.1","info":{"id":"MdGBWw","date":"1529013803","viewed":99,"name":"Hypnospirals","username":"rkibria","description":"Wanted to see if I can derive the maths for spirals correctly.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI (2. * PI)\n\n#define _SPIRAL(a,d,w) (abs(((a) / (d)) - (w)))\nfloat spiral(in float angle, in float dist, in float k, in float max_winding)\n{\n    float v = _SPIRAL(angle, dist, k);\n    for(float i = 1.; i < max_winding; i += 1.)\n    {\n\t    v = min(v, _SPIRAL(angle + i * TWO_PI, dist, k));\n    }\n    return v;\n}\n\nfloat get_angle(in vec2 uv)\n{\n    float uv_angle = atan(uv.y, uv.x);\n    if(uv_angle < 0.0)\n    \tuv_angle += TWO_PI;\n    return uv_angle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = ( fragCoord - .5 * iResolution.xy ) /iResolution.x;\n    \n    float rt = iTime * 0.5;\n    mat2 rmt = mat2(cos(rt), -sin(rt), sin(rt), cos(rt));\n    uv = rmt * uv;\n        \n    vec3 col = vec3(0);\n\n    float r = 0.5 * spiral(get_angle(uv), length(uv), 200. + 149. * sin(iTime), 20.);\n    r = 2.5 * abs(sin(iTime)) - r;\n\n    vec2 uv2 = vec2(uv.x + sin(iTime) * 0.1, uv.y + cos(iTime) * 0.1);\n    float g = 0.5 * spiral(get_angle(uv2), length(uv2), 200. + 149. * sin(iTime), 20.);\n    g = 2.5 * abs(sin(iTime + PI/4.)) - g;\n\n    vec2 uv3 = vec2(uv.x + cos(iTime) * 0.2, uv.y + sin(iTime) * 0.2);\n    float b = 0.5 * spiral(get_angle(uv3), length(uv3), 200. + 149. * sin(iTime), 20.);\n    b = 2.5 * abs(sin(iTime + PI/2.)) - b;\n\n    col = vec3(r, g, b);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}