{"ver":"0.1","info":{"id":"4tsXRf","date":"1438720285","viewed":665,"name":"[SIG15]On The Way","username":"834144373","description":"Leave the city,Leave the hustle and bustle.\nTake away your annoyed mood.\nThis is just Part 1.5 , I will finish it.... The ray-marching is very useful,but now I am very sorry that I don't use the ray-marching,","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["picture","sig15","mood","moive","ontheway","way"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//gold 0.61803398874989484820\n#define PI 3.14159265\n#define time iTime\n#define pointNumber 50\n/////////////////\n//here the font form https://www.shadertoy.com/view/Mt2GWD\n/////////////////\n#define CHAR_SIZE vec2(6, 7)\n#define CHAR_SPACING vec2(6,9)\n#define STRWIDTH(c) (c * CHAR_SPACING.x)\n#define STRHEIGHT(c) (c * CHAR_SPACING.y)\n#define DOWN_SCALE 2.0\nvec2 ch_spc = vec2(0.0,0.0),\n ch_exc = vec2(276705.0,32776.0),\n ch_quo = vec2(1797408.0,0.0),\n ch_hsh = vec2(10738.0,1134484.0),\n ch_dol = vec2(538883.0,19976.0),\n ch_pct = vec2(1664033.0,68006.0),\n ch_amp = vec2(545090.0,174362.0),\n ch_apo = vec2(798848.0,0.0),\n ch_lbr = vec2(270466.0,66568.0),\n ch_rbr = vec2(528449.0,33296.0),\n ch_ast = vec2(10471.0,1688832.0),\n ch_crs = vec2(4167.0,1606144.0),\n ch_per = vec2(0.0,1560.0),\n ch_dsh = vec2(7.0,1572864.0),\n ch_com = vec2(0.0,1544.0),\n ch_lsl = vec2(1057.0,67584.0),\n ch_0 = vec2(935221.0,731292.0),\n ch_1 = vec2(274497.0,33308.0),\n ch_2 = vec2(934929.0,1116222.0),\n ch_3 = vec2(934931.0,1058972.0),\n ch_4 = vec2(137380.0,1302788.0),\n ch_5 = vec2(2048263.0,1058972.0),\n ch_6 = vec2(401671.0,1190044.0),\n ch_7 = vec2(2032673.0,66576.0),\n ch_8 = vec2(935187.0,1190044.0),\n ch_9 = vec2(935187.0,1581336.0),\n ch_col = vec2(195.0,1560.0),\n ch_scl = vec2(195.0,1544.0),\n ch_les = vec2(135300.0,66052.0),\n ch_equ = vec2(496.0,3968.0),\n ch_grt = vec2(528416.0,541200.0),\n ch_que = vec2(934929.0,1081352.0),\n ch_ats = vec2(935285.0,714780.0),\n ch_A = vec2(935188.0,780450.0),\n ch_B = vec2(1983767.0,1190076.0),\n ch_C = vec2(935172.0,133276.0),\n ch_D = vec2(1983764.0,665788.0),\n ch_E = vec2(2048263.0,1181758.0),\n ch_F = vec2(2048263.0,1181728.0),\n ch_G = vec2(935173.0,1714334.0),\n ch_H = vec2(1131799.0,1714338.0),\n ch_I = vec2(921665.0,33308.0),\n ch_J = vec2(66576.0,665756.0),\n ch_K = vec2(1132870.0,166178.0),\n ch_L = vec2(1065220.0,133182.0),\n ch_M = vec2(1142100.0,665762.0),\n ch_N = vec2(1140052.0,1714338.0),\n ch_O = vec2(935188.0,665756.0),\n ch_P = vec2(1983767.0,1181728.0),\n ch_Q = vec2(935188.0,698650.0),\n ch_R = vec2(1983767.0,1198242.0),\n ch_S = vec2(935171.0,1058972.0),\n ch_T = vec2(2035777.0,33288.0),\n ch_U = vec2(1131796.0,665756.0),\n ch_V = vec2(1131796.0,664840.0),\n ch_W = vec2(1131861.0,699028.0),\n ch_X = vec2(1131681.0,84130.0),\n ch_Y = vec2(1131794.0,1081864.0),\n ch_Z = vec2(1968194.0,133180.0),\n ch_lsb = vec2(925826.0,66588.0),\n ch_rsl = vec2(16513.0,16512.0),\n ch_rsb = vec2(919584.0,1065244.0),\n ch_pow = vec2(272656.0,0.0),\n ch_usc = vec2(0.0,62.0),\n ch_a = vec2(224.0,649374.0),\n ch_b = vec2(1065444.0,665788.0),\n ch_c = vec2(228.0,657564.0),\n ch_d = vec2(66804.0,665758.0),\n ch_e = vec2(228.0,772124.0),\n ch_f = vec2(401543.0,1115152.0),\n ch_g = vec2(244.0,665474.0),\n ch_h = vec2(1065444.0,665762.0),\n ch_i = vec2(262209.0,33292.0),\n ch_j = vec2(131168.0,1066252.0),\n ch_k = vec2(1065253.0,199204.0),\n ch_l = vec2(266305.0,33292.0),\n ch_m = vec2(421.0,698530.0),\n ch_n = vec2(452.0,1198372.0),\n ch_o = vec2(228.0,665756.0),\n ch_p = vec2(484.0,667424.0),\n ch_q = vec2(244.0,665474.0),\n ch_r = vec2(354.0,590904.0),\n ch_s = vec2(228.0,114844.0),\n ch_t = vec2(8674.0,66824.0),\n ch_u = vec2(292.0,1198868.0),\n ch_v = vec2(276.0,664840.0),\n ch_w = vec2(276.0,700308.0),\n ch_x = vec2(292.0,1149220.0),\n ch_y = vec2(292.0,1163824.0),\n ch_z = vec2(480.0,1148988.0),\n ch_lpa = vec2(401542.0,66572.0),\n ch_bar = vec2(266304.0,33288.0),\n ch_rpa = vec2(788512.0,1589528.0),\n ch_tid = vec2(675840.0,0.0),\n ch_lar = vec2(8387.0,1147904.0);\nvec2 res;// = iResolution.xy / DOWN_SCALE;\nvec2 print_pos = vec2(0);\nfloat extract_bit(float n, float b)\n{\n    b = clamp(b,-1.0,22.0); \n\treturn floor(mod(floor(n / pow(2.0,floor(b))),2.0));   \n}\n\nfloat sprite(vec2 spr, vec2 size, vec2 uv)\n{\n    uv = floor(uv);\n    float bit = (size.x-uv.x-1.0) + uv.y * size.x;\n    bool bounds = all(greaterThanEqual(uv,vec2(0)));\n    bounds = bounds && all(lessThan(uv,size));\n    return bounds ? extract_bit(spr.x, bit - 21.0)+extract_bit(spr.y, bit) : 0.0;\n}\nfloat char(vec2 ch, vec2 uv)\n{\n    float px = sprite(ch, CHAR_SIZE, uv - print_pos);\n    print_pos.x += CHAR_SPACING.x;\n    return px;\n}\nfloat Text(vec2 uv)\n{\n   uv.x += 15.;//+iTime*10.;\n   uv.y += 10.;\n   float c = 0.0;\n   print_pos = vec2(res.x/2.0 - STRWIDTH(17.0)/2.0,res.y/2.0 - STRHEIGHT(1.0)/2.0);\n   print_pos = floor(print_pos);\n    c += char(ch_M,uv);c += char(ch_o,uv);c += char(ch_v,uv);c += char(ch_i,uv);c += char(ch_e,uv);\n    c += char(ch_spc,uv);\n    c += char(ch_N,uv);c += char(ch_a,uv);c += char(ch_m,uv);c += char(ch_e,uv);\n    c += char(ch_col,uv);\n    c += char(ch_spc,uv);\n    c += char(ch_les,uv);\n    c += char(ch_O,uv);c += char(ch_n,uv);\n    c += char(ch_spc,uv);\n    c += char(ch_t,uv);c += char(ch_h,uv);c += char(ch_e,uv);\n    c += char(ch_spc,uv);\n    c += char(ch_W,uv);c += char(ch_a,uv);c += char(ch_y,uv);\n    c += char(ch_grt,uv);\n   //uv.y += 20.;uv.x += 100.;\n   // c += char(ch_M,uv);c += char(ch_o,uv);c += char(ch_v,uv);c += char(ch_i,uv);c += char(ch_e,uv);\n\n    //c += char(ch_exc,uv);\n        //print_pos = vec2(2);\n    //col += char(ch_T,uv);//col += char(ch_i,uv);//col += char(ch_m,uv);//col += char(ch_e,uv);//col += char(ch_col,uv);//col += print_number(iTime,print_pos,uv); \n    return c;\n}\nvec3 words(vec2 pixel_uv){\n\tvec3 c;\n    float pixel = Text(pixel_uv/DOWN_SCALE);\n    c = mix(vec3(0.),vec3(0.5,0.5,.5),pixel);\n\treturn c;\n}\n/////////////////\n/////////////////\nfloat rand(vec2 uv)\n{\n    float dt = dot(uv, vec2(12.9898, 78.233));\n\treturn fract(sin(mod(dt, PI / 2.0)) * 43758.5453);\n}\nvec3 luminance(vec3 color){\n     return vec3(dot( color, vec3(0.22, 0.707, 0.071)));\n}\n//stars \nvec3 stars(vec2 uv){\n   vec3 c;vec2 uv2 = uv-vec2(0.35,0.5);\n    uv .x += time*0.009;\n    uv.y /= pow(1.-uv2.x*uv2.x,1.4);\n    c = texture(iChannel2,uv).rgb;\n    c = uv.y>0.46 ? luminance(c) : vec3(0.);\n    c = smoothstep(0.5,.6,c);\n    c -= pow(c,vec3(10.));\n    c = mix(c,vec3(.2),-uv.y);\n    return c;///(0.1+time/5.);\n}\nfloat star10(in vec2 uv){\n\tfloat s;\n    uv = (uv-0.5)*5.;\n    float angle = atan(uv.y,uv.x);\n    float d = length(uv);\n    s =  0.3+0.3*sin(angle*10.-time);\n    s *= smoothstep(0.,s,d);\n\ts += smoothstep(0.15,.89,d);//length(vec2());\n    return s;\n}\nvec3 starPoint(in vec2 uv){\n    vec3 c = vec3(0.);\n    for(int i = 0;i<pointNumber;++i){\n\t\tfloat an = 2.*PI * float(i)/float(pointNumber);\n        vec2 dian = vec2(16.*pow(sin(an),3.),13.*cos(an)-5.*cos(2.*an)-2.*cos(3.*an)-cos(4.*an));\n    \tc = max(c,texture(iChannel2,uv-dian * 6./iResolution.xy).rgb);\n    }\n    return c;\n}\nvec3 s(in vec2 uv){\n\tvec3 staruv = stars(uv);\n    vec3 xing = vec3(star10(uv));\n    return starPoint(uv)*staruv;\n}\n//body to all\nfloat body(vec2 uv,vec2 size){\n\tfloat c;\n    if(abs(uv.x)<size.x){\n    \tc = abs(uv.y)<size.y ? 1.: 0.;\n        float y = sqrt(1.-(1.-abs(uv.x))*(1.-abs(uv.x)))+1.;\n        float d = length(uv - vec2(uv.x,y));\n    }\n    return c;\n}\n//logo\nfloat logo(vec2 uv){\n\tfloat c;uv -= vec2(0.5,0.48);\n    uv *= 7.;\n    uv *= vec2(2.2,2.1);\n    uv.x /= uv.y-2.3;\n    \tfloat a = 1.-(1.-abs(uv.x))*(1.-abs(uv.x));\n    \tif(sign(a)<0.) a = 100000.;\n    float y = sqrt(a)+1.;\n    float d = 1.-length(uv - vec2(uv.x,y-.2));\n    c = max(d,body(uv,vec2(0.36,0.2)));\n    return c;\n}\nfloat wing1(vec2 uv){\n\tfloat c;\n    uv *= 7.;\n    uv *= vec2(2.2,2.5);\n    uv.x /= uv.y;\n    float a = 1.-(1.-abs(uv.x))*(1.-abs(uv.x));\n    \tif(sign(a)<0.) a = 100000.;\n    float y = sqrt(a)+1.;\n    float d = 1.-length(uv - vec2(uv.x,y-.2));\n    c = d;\n    return c;\n}\nfloat wing2(vec2 uv){\n\tfloat c;\n    uv *= 7.;\n    uv *= vec2(2.2,2.5);\n    uv.x /= uv.y-3.;\n   float a = 1.-(1.-abs(uv.x))*(1.-abs(uv.x));\n    \tif(sign(a)<0.) a = 100000.;\n    float y = sqrt(a)+1.;\n    float d = 1.-length(uv - vec2(uv.x,y-.2));\n    c = d;\n    return c;\n}\nfloat wing3(vec2 uv){\n\tfloat c;\n    uv *= 7.;\n    uv *= vec2(2.2,2.5);\n    uv.x /= uv.y-4.6;\n    float a = 1.-(1.-abs(uv.x))*(1.-abs(uv.x));\n    \tif(sign(a)<0.) a = 100000.;\n    float y = sqrt(a)+1.;\n    float d = 1.-length(uv - vec2(uv.x,y-.2));\n    c = d;\n    return c;\n}\nfloat CCTVlogo(in vec2 uv){\n    uv-= vec2(0.9,0.03);\n    float CCTVtime ,timeOver = time;\n    CCTVtime = time<84.23 ? time : 84.23;\n    time<93. ?  0. : timeOver = 0.;\n    uv.y -= CCTVtime*0.01;\n    float d1 = body(uv+vec2(0.,0.008),vec2(0.05,0.013)/2.);\n    uv.x /= 1.+0.5*sin(abs(uv.x)*3.+4.*timeOver);\n    uv.y /= 1.4+0.7*cos(abs(uv.x)*4.+4.*timeOver);\n    float d2 = wing1(uv*3.);\n    float c;\n    c = max(d1,d2);\n    return c/2.;    \n}\n//road lines\nfloat road(vec2 uv){\n    uv -= 0.5;\n    uv += vec2(0.001,0.09);\n    vec2 uv2 = uv;\n    uv.y += time/1.;\n    uv.x *= .5;\n    uv.x /= abs(uv2.y);\n\tfloat c;\n    if(fract(uv.y*6.)>0.2  ){\n       c = fract(abs(uv.x)*5.)>0.1  ?  0. : .5;\n    }\n    abs(uv.x)>0.1 ? c = 0. : c;\n    c *= -sign(uv2.y)+1.;\n    c *= abs(uv2.y);\n    return c;\n}\n//time Control\nstruct timex{\n    //part I,II,III,IV,VI\n    float a,b,c,d,e;\n};\nvoid timeline(inout timex t){\n\t//float a = (time2 *= 0.2) <1.6 ? time2 : 1.6;\n    //a += 0.4;\n    //logo time 3s\n    t.a = time<1.7? time : 1.7; time<3. ? t.a : t.a = 4.7-time ;t.a>0.? t.a:t.a=0.; \n    //movie time\n    float t2 = time-3.;\n    t.b = t2> 0.? t2: 0.; t.b = (t2 *= 0.2) <1.5 ? t2 : 1.5;\n    //t.b = t.b>0.? \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    res = iResolution.xy / DOWN_SCALE;\n\tvec2 uv = fragCoord.xy / iResolution.xy ,uv1=uv;\n    uv1 *= 0.5;uv1.x *= .8;\n    vec2 uv2 = uv1 - vec2(0.2,0.22);\n\tfloat d2 = length(uv2);\n    vec2 dir = normalize(uv2);\n    uv1 += dir*smoothstep(5.2,-0.1,d2-0.1);\n    uv1.x += 25.+sin(time);\n    \n\tvec3 col = texture(iChannel0,vec3(uv1,-1.)).xyz;\n    col = mix(col,vec3(-0.7),sqrt(d2));\n    \n    col -= pow(col,vec3(5.));\n    col += 0.01*fract(sin(time)*10.);\n\n //really stars and galaxy is step(0.,stars(uv*0.8)*rand(uv)); \n    col += col*(road(uv)+stars(uv*0.8)*rand(uv));\n    //col = mix(vec3(logo(uv)),col,.6);\n //time line doing\n    timex t;\n    timeline(t);\n  vec3 logocol,logotext;\n    //col = vec3(0.);\n    logocol = vec3(logo(uv));\n    logotext = words(fragCoord+vec2(0.,50.));\n  vec3 logocoltext ;\n    logocoltext = logocol+logotext;\n    logocoltext = mix(vec3(0.),logocoltext,t.a);\n  vec3 CCTVcol;\n    CCTVcol = vec3(CCTVlogo(uv))*vec3(.9,0.77,0.58);\n    col += CCTVcol;\n    col = mix(logocoltext,col,t.b);\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}