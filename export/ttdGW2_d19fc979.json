{"ver":"0.1","info":{"id":"ttdGW2","date":"1577657170","viewed":65,"name":"david","username":"shaderKing","description":"audio","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["david"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ampl 1.\n#define seuil .0\n#define steps 100.\n#define space .1\n#define def .2\n#define opacity .6\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float sound = texture(iChannel0,vec2(floor(steps*uv.x)/steps,0)).r;\n    sound *=ampl;\n    sound -=seuil;\n    sound = max(def, sound);\n    if (uv.x*steps-floor (uv.x*steps)<space)sound = 0.;\n\n    vec4 color = texture(iChannel1,uv);\n       // uv.y +=texture(iChannel0,vec2(floor(steps*uv.x)/steps,1)).r/20.; // make the spectrum analysis dance with the waveform â™«â™¥\n    if (abs((0.,5.*uv.y-1.5))< sound*sound*sound)color =mix(color, vec4(1),opacity);\n\tfragColor =color;\n}","name":"Image","description":"","type":"image"}]}