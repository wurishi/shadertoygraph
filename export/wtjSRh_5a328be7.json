{"ver":"0.1","info":{"id":"wtjSRh","date":"1565074587","viewed":73,"name":"warlokkz - fence","username":"warlokkz","description":"fence","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(vec2 st, float pct)\n{\n    return smoothstep(pct - 0.02, pct, st.y) -\n           smoothstep(pct, pct + 0.02, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n   \tfloat y = smoothstep(0.1, 0.9, abs(sin(uv.x + iTime)));\n    vec3 color = vec3(y);\n    float pct = plot(uv, y);\n    color = pct * vec3(0.0, 1.0, 0.0);\n \n    for (int i = 2; i < 15; i += 1) {\n      float iFloat = float(i) / 10.0;\n        \n      float stp = smoothstep(iFloat, 1.0 - iFloat, sin(uv.x + iTime));\n      float plotted = plot(uv, stp);\n      \n      vec3 col = i % 2 == 0 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 0.0, 1.0); \n      color += plotted * col;\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}