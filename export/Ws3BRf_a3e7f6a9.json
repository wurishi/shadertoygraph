{"ver":"0.1","info":{"id":"Ws3BRf","date":"1605706885","viewed":125,"name":"TaiChi","username":"Learner_CC","description":"First practice to draw my 2D graphic","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2dgraphic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// TaiChi - by CC - 2020\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n// -------- Const parameter -------- //\nconst float PI = 3.1415926;\n\n// -------- Basic graphic -------- //\nfloat circle(vec2 st, float radius){\n    vec2 l = st - vec2(0.5);\n    return 1.0 - smoothstep(0.99 * radius, radius * 1.01, dot(l,l)*4.0);\n}\nfloat semicircle(vec2 st, float radius) {\n    vec2 l = st;\n    float pct = 1.0 - smoothstep(0.95 * radius * radius, 1.05 * radius * radius, dot(l,l));\n    \n    pct *= step(0.0, l.y);\n    return pct;\n}\nfloat rectangle(vec2 st, vec2 size) {\n    size = 0.5 - 0.5 * size;\n    vec2 uv = smoothstep(size, size + vec2(1e-4), st);\n    uv *= smoothstep(size, size + vec2(1e-4), vec2(1.0) - st);\n    return uv.x * uv.y;\n}\nfloat bagua(vec2 uv, float n) {\n    float pct = 0.0;\n    vec2 st = uv;\n    pct = rectangle(st + vec2(0.0, 0.15), vec2(0.5, 0.08));\n    pct += rectangle(st, vec2(0.5, 0.08));\n    pct += rectangle(st + vec2(0.0, -0.15), vec2(0.5, 0.08));\n\n    pct -= (step(0.1,n) * step(n,1.0) + step(3.1,n) * step(n,4.1) + step(4.1,n) * step(n,5.) + step(6.1,n) * step(n,7.)) * rectangle(st + vec2(0.0,0.15), vec2(0.1, 0.08)); // 1,4,5,7 \n    pct -= (step(1.1,n) * step(n,2.1) + step(3.1,n) * step(n,4.1) + step(5.1,n) * step(n,6.) + step(6.1,n) * step(n,7.)) * rectangle(st, vec2(0.1, 0.08));      // 2,4,6,7\n    pct -= (step(2.1,n) * step(n,3.1) + step(4.1,n) * step(n,5.1) + step(5.1,n) * step(n,6.) + step(6.1,n) * step(n,7.)) * rectangle(st + vec2(0.0,-0.15), vec2(0.1, 0.08)); // 3,5,6,7\n\n    return pct;\n}\n\n// -------- Transform -------- //\nmat2 rotate2d(float angle) {\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\nmat2 scale(vec2 scale){\n    return mat2(scale.x, 0.0,\n                0.0, scale.y);\n}\n\n// -------- Main -------- //\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy - vec2(0.2, 0.0);\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 color = vec3(0.0);\n    float pct = 0.0;\n    \n    vec2 st = 2.0 * uv - 1.0;\n    st = rotate2d(-0.5 * iTime) * st;\n    pct = semicircle(st, 0.5);\n    pct += semicircle(rotate2d(PI) * (st + vec2(-0.25, 0.0)), 0.25);\n    pct -= semicircle((st + vec2(0.25, 0.0)), 0.25);   \n    pct -= circle(st + vec2(0.25, 0.5),0.02);\n    pct += circle(st + vec2(0.75, 0.5),0.02);\n    \n    st = 2.0 * uv - 1.0;\n    st = 2.0 * st * rotate2d(-0.5 * iTime);\n    \n    vec2 offset = -vec2(-0.5, -2.);\n    pct += bagua(st- vec2(-0.5, -2.), 2.0);\n    pct += bagua(st * rotate2d(PI * 0.25) + offset, 3.0);\n    pct += bagua(st * rotate2d(PI * 0.5) + offset, 0.0);\n    pct += bagua(st * rotate2d(PI * 0.75) + offset, 1.0);\n    pct += bagua(st * rotate2d(PI) + offset, 5.0);\n    pct += bagua(st * rotate2d(PI * 1.25) + offset, 4.0);\n    pct += bagua(st * rotate2d(PI * 1.5) + offset, 7.0);\n    pct += bagua(st * rotate2d(PI * 1.75) + offset, 6.0);   \n    \n    color = vec3(pct);\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}