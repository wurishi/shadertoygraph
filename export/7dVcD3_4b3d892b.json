{"ver":"0.1","info":{"id":"7dVcD3","date":"1655756285","viewed":37,"name":"Digital Soft Rain","username":"Sent","description":"Soft rain","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sinRand (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec2 vec2ar(float ar, float x, float y) {return vec2(ar*x, y);}\n\nfloat rect(vec2 st, vec2 bl, vec2 tr) {\n    bl = step(bl,st);       // bottom-left\n\ttr = step(vec2(1.)-tr,1.-st);   // top-right\n\treturn (bl.x * bl.y * tr.x * tr.y);\n}\n\nfloat rect(vec2 st, vec2 bl, vec2 tr, float blur) {\n    if (blur <= 0.) {\n        return rect(st, bl, tr);\n    }\n    \n    float b = blur/2.;\n    bl = smoothstep(bl-b, bl+b, st);       // bottom-left\n\ttr = smoothstep(tr+b, tr-b, st);   // top-right\n\treturn (bl.x * bl.y * tr.x * tr.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n\n    st.x *= aspect;\n\n    st *= 10.0; // Scale the coordinate system by 10\n    vec2 ipos = floor(st);  // get the integer coords\n    vec2 fpos = fract(st);  // get the fractional coords\n\n    // rand for cell\n    vec3 color = ipos.y/10.*vec3(sinRand(ipos+1000.*fract(.000000001*iTime)));\n\n    // deterministic in each cell\n    color *= rect(fpos, vec2(.45, 0.), vec2(.55, 1.), .08);\n    \n    // color\n    color *= vec3(5., 242, 255)/255.;\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}