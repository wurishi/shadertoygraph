{"ver":"0.1","info":{"id":"NlGGDy","date":"1638246690","viewed":224,"name":"Biham-Middleton-Levine Traffic 9","username":"pvillano","description":"Click to reset. Change the density and colors in Common. I didn't try to optimize branches since it runs at 60 fps anyway.\nEach window has a different density, increasing from top left to bottom right.","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["cellularautomata","traffic"],"hasliked":0,"parentid":"Xsyczy","parentname":"Biham–Middleton–Levine Traffic 2"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n//From https://www.shadertoy.com/view/Mdj3zd\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 texelFetchWrap(vec2 coord){\n    \n    float boxWidth = floor(iChannelResolution[0].x/3.0);\n    if(mod(coord.x, boxWidth) > boxWidth - BORDER){\n        coord.x -= boxWidth - 2.0 * BORDER;\n    } else if(mod(coord.x, boxWidth) < BORDER){\n         coord.x += boxWidth - 2.0 * BORDER;\n    }\n    \n    float boxHeight = floor(iChannelResolution[0].y/3.0);\n    if(mod(coord.y, boxHeight) > boxHeight - BORDER){\n        coord.y -= boxHeight - 2.0 * BORDER;\n    } else if(mod(coord.y, boxHeight) < BORDER){\n         coord.y += boxHeight - 2.0 * BORDER;\n    }\n    \n    return texelFetch(iChannel0, ivec2(coord.xy), 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float boxWidth = floor(iChannelResolution[0].x/3.0);\n    float boxHeight = floor(iChannelResolution[0].y/3.0);\n\tif(mod(fragCoord.x, boxWidth) > boxWidth - BORDER ||\n       mod(fragCoord.x, boxWidth) < BORDER ||\n       mod(fragCoord.y, boxHeight) > boxHeight - BORDER ||\n       mod(fragCoord.y, boxHeight) < BORDER){\n       fragColor = BLACK;\n       return;\n    }\n    \n    \n    if(iFrame == 0 || iMouse.z > 0.0){\n        float raw_density = floor(fragCoord.x/iChannelResolution[0].x*3.0)/8.0 +\n            \t\t\t\tfloor(3.0 - fragCoord.y/iChannelResolution[0].y*3.0)*3.0/8.0;\n        float density = mix(minDensity, maxDensity,raw_density);\n        if (rand(fragCoord) < density/2.0){\n            fragColor = RED;\n        } else if (rand(fragCoord) > 1.0 - density/2.0) {\n            fragColor = BLUE;\n        } else {\n            fragColor = BLACK;\n        }\n        return;\n    }\n    \n    vec4 myColor = texelFetchWrap(fragCoord);\n    vec4 aboveColor = texelFetchWrap(fragCoord + vec2(0.0,1.0));\n    vec4 belowColor = texelFetchWrap(fragCoord + vec2(0.0,-1.0));\n    if(aboveColor == RED && myColor == BLACK){\n        fragColor = RED;\n    } else if (myColor == RED && belowColor == BLACK) {\n        fragColor = BLACK;\n    } else {\n        fragColor = myColor;\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\n//From https://www.shadertoy.com/view/Mdj3zd\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nvec4 texelFetchWrap(vec2 coord){\n    \n    float boxWidth = floor(iChannelResolution[0].x/3.0);\n    if(mod(coord.x, boxWidth) > boxWidth - BORDER){\n        coord.x -= boxWidth - 2.0 * BORDER;\n    } else if(mod(coord.x, boxWidth) < BORDER){\n         coord.x += boxWidth - 2.0 * BORDER;\n    }\n    \n    float boxHeight = floor(iChannelResolution[0].y/3.0);\n    if(mod(coord.y, boxHeight) > boxHeight - BORDER){\n        coord.y -= boxHeight - 2.0 * BORDER;\n    } else if(mod(coord.y, boxHeight) < BORDER){\n         coord.y += boxHeight - 2.0 * BORDER;\n    }\n    \n    return texelFetch(iChannel0, ivec2(coord.xy), 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float boxWidth = floor(iChannelResolution[0].x/3.0);\n    float boxHeight = floor(iChannelResolution[0].y/3.0);\n\tif(mod(fragCoord.x, boxWidth) > boxWidth - BORDER ||\n       mod(fragCoord.x, boxWidth) < BORDER ||\n       mod(fragCoord.y, boxHeight) > boxHeight - BORDER ||\n       mod(fragCoord.y, boxHeight) < BORDER){\n       fragColor = BLACK;\n       return;\n    }\n    \n    \n    if(iFrame == 0 || iMouse.z > 0.0){\n        float raw_density = floor(fragCoord.x/iChannelResolution[0].x*3.0)/8.0 +\n            \t\t\t\tfloor(3.0 - fragCoord.y/iChannelResolution[0].y*3.0)*3.0/8.0;\n        float density = mix(minDensity, maxDensity,raw_density);\n        if (rand(fragCoord) < density/2.0){\n            fragColor = RED;\n        } else if (rand(fragCoord) > 1.0 - density/2.0) {\n            fragColor = BLUE;\n        } else {\n            fragColor = BLACK;\n        }\n        return;\n    }\n    \n    vec4 myColor = texelFetchWrap(fragCoord);\n    vec4 leftColor = texelFetchWrap(fragCoord + vec2(-1.0,0.0));\n    vec4 rightColor = texelFetchWrap(fragCoord + vec2(1.0,0.0));\n    if(leftColor == BLUE && myColor == BLACK){\n        fragColor = BLUE;\n    } else if (myColor == BLUE && rightColor == BLACK) {\n        fragColor = BLACK;\n    } else {\n        fragColor = myColor;\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const vec4 RED   = vec4(1.0,0.0,0.0,0.0);\nconst vec4 BLUE  = vec4(0.0,0.0,1.0,0.0);\nconst vec4 BLACK = vec4(0.0,0.0,0.0,0.0);\nconst vec4 GREEN = vec4(0.0,1.0,0.0,0.0);\n\nconst float BORDER = 10.0;\nconst float minDensity = .1;\nconst float maxDensity = .7;","name":"Common","description":"","type":"common"}]}