{"ver":"0.1","info":{"id":"XsVSW1","date":"1464124430","viewed":2843,"name":"Fisheye/Pinch","username":"tamasaur","description":"Simple webcam shader with toggleable pinch/bulge capabilities","likes":17,"published":3,"flags":2,"usePreview":0,"tags":["fisheye","webcam","bulge","pinch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TESTS 50.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 p = fragCoord.xy/iResolution.xy - 0.5;\n  \n  // cartesian to polar coordinates\n  float r = length(p);\n  float a = atan(p.y, p.x);\n  \n  // distort\n  //r = sqrt(r)*0.3; // pinch\n  r = r*r*3.0; // bulge\n  \n  // polar to cartesian coordinates\n  p = r * vec2(cos(a)*0.5, sin(a)*0.5);\n  \n  // sample the iChannel0\n  vec4 color = texture(iChannel0, p + 0.5);\n  fragColor = color;\n}\n\n","name":"Image","description":"","type":"image"}]}