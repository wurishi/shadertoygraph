{"ver":"0.1","info":{"id":"ll33WX","date":"1471995252","viewed":305,"name":" Јупитер","username":"albertelwin","description":"Was practicing raycasting and got carried away :)","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["3d","raycasting","supersampling","space"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define SUPERSAMPLING 1\n\n#define TAU 6.28318530717958647692\n#define TO_RAD 0.01745329251\n#define GAMMA 2.2\n\nfloat dither(vec2 xy, float t) {\n    float s = (xy.x * 12.9898) + (xy.y * 78.2330);\n    float r = fract(sin((t * 12.9898) + s) * 43758.5453) + fract(sin((t * 78.2330) + s) * 43758.5453);\n    return (r * 0.00392156886) - 0.00196078443;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float fov = 90.0;\n    float tan_fov = tan(fov * 0.5 * TO_RAD);\n    vec2 image_plane = vec2(tan_fov, tan_fov * (iResolution.y / iResolution.x));\n\n#define MAX_SAMPLE_COUNT 8\n    vec2 sample_offsets[MAX_SAMPLE_COUNT];\n\tsample_offsets[0] = vec2(0.125, 0.875);\n    sample_offsets[1] = vec2(0.625, 0.875);\n    sample_offsets[2] = vec2(0.375, 0.625);\n    sample_offsets[3] = vec2(0.875, 0.625);\n    sample_offsets[4] = vec2(0.125, 0.375);\n    sample_offsets[5] = vec2(0.625, 0.375);\n    sample_offsets[6] = vec2(0.375, 0.125);\n    sample_offsets[7] = vec2(0.875, 0.125);\n    \n#if SUPERSAMPLING\n    #define SAMPLE_COUNT MAX_SAMPLE_COUNT\n#else\n    #define SAMPLE_COUNT 1\n#endif\n\n    vec3 color = vec3(0.0);\n    \n    for(int sample_index = 0; sample_index < SAMPLE_COUNT; sample_index++) {\n        vec2 sample_pos = fragCoord.xy + sample_offsets[sample_index];\n        vec3 image_point = vec3((2.0 * sample_pos / iResolution.xy - 1.0) * image_plane, 1.0);\n       \n        vec3 ro = vec3(0.0);\n        vec3 rd = normalize(image_point);\n\n        vec3 light_pos = vec3(-0.3, 0.0, 0.0); \n\n        vec3 P = vec3(0.0, 0.0, 0.22);\n        float R = 0.1;\n        float R2 = R * R;\n\n        vec3 h = P - ro;\n        float a = dot(rd, h);\n        float b2 = dot(h, h) - a * a;\n        float t = a - sqrt(R2 - b2);\n        if(t > 0.0) {\n            vec3 p = ro + t * rd;\n            vec3 n = normalize(p - P);\n            \n            vec3 l = normalize(light_pos - p);\n            float dot_nl = clamp(dot(n, l), 0.0, 1.0);\n\n            float v = iTime * 0.05;\n            vec2 uv = n.xy + texture(iChannel0, n.xy * 0.7 - vec2(v * 0.4, 0.0)).xy - v;\n            float tex = texture(iChannel1, uv).z * 0.77;\n            \n            color += dot_nl * tex;\n        }\n        else {\n            vec2 seed = fragCoord.xy; \n            vec2 r;\n            r.x = fract(sin((seed.x * 12.9898) + (seed.y * 78.2330)) * 43758.5453);\n            r.y = fract(sin((seed.x * 53.7842) + (seed.y * 47.5134)) * 43758.5453);\n\n            float x = mix(r.x, (sin((iTime * 2.5 + 60.0) * r.y) * 0.5 + 0.5) * ((r.y * r.y) * (r.y * r.y)), 0.04); \n            color += pow(x, 70.0);\n        }\n    }\n    \n    color *= (1.0 / float(SAMPLE_COUNT));\n    color += dither(fragCoord.xy, fract(iTime));\n    color = pow(color, vec3(1.0 / GAMMA));\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}