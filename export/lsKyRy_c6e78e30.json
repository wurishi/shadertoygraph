{"ver":"0.1","info":{"id":"lsKyRy","date":"1522497549","viewed":152,"name":"raymarch pattern 01","username":"Nitato_","description":"3D raymarched pattern using torus","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","torus","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define opRep(p, c) mod(p,c)-.5*c\n\nfloat sdTorus( vec3 p, vec2 t ) {\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\nmat3 rotMatrix(vec3 axis, float angle) {\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    return mat3(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c);\n}\nfloat map(vec3 p) {\n    mat3 rot = rotMatrix(vec3(1.,0.,0.), 190.);\n    rot *= rotMatrix(vec3(0.,1.,0.), sin(iTime)*3.);\n    p*=rot;\n    p = opRep(p, vec3(.5));\n\treturn sdTorus(p, vec2(.3, .02));\n}\nvec2 trace (vec3 o, vec3 r) {\n\tfloat t = 0.;\n    float i;\n    float precis = .01;\n    for (i = 0.; i < 64.; ++i) {\n        o.z *= sin(iTime);\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        if (d<precis) break;\n        t += d;\n    }\n    return vec2(t, i);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.*fragCoord-iResolution.xy )/iResolution.y;\n\tvec3 o = vec3(0.0, -0.015, -0.2);\n    vec3 r = normalize(vec3(uv, 1.));\n    vec2 t = trace(o, r);\n\n    vec3 col = vec3(.2,.1,.4)*cos(iTime)*0.5+0.1;\n\n    fragColor = vec4(col,1.0)*t.x;\n}","name":"Image","description":"","type":"image"}]}