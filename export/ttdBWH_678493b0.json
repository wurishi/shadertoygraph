{"ver":"0.1","info":{"id":"ttdBWH","date":"1615942069","viewed":291,"name":"Haru86_Triangle","username":"Haru86_","description":"Haru86_Triangle","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nvec2 pmod(vec2 p,float n)\n{\n    float a=(2.0*PI)/n;\n    float t=atan(p.x,p.y)-PI/n;\n    t=mod(t,a)-PI/n;\n    return vec2(length(p)*cos(t),length(p)*sin(t));\n}\n\nfloat Cube(vec3 p,float s)\n{\n    p=abs(p);\n    return length(max(p-vec3(s),0.0));\n}\n\nfloat ft(vec3 p,vec3 offset,float scale)\n{\n    vec4 z=vec4(p.xyz,1.0);\n    int count=10;\n    \n    for(int i;i<count;i++)\n    {\n        if(z.x+z.y<0.0)z.xy=-z.yx;\n        if(z.x+z.z<0.0)z.xz=-z.zx;\n        if(z.y+z.z<0.0)z.yz=-z.yz;\n        z*=scale;\n        z.xyz-=offset*(scale-1.0);\n    }\n    return Cube(z.xyz,1.0)/z.w;\n    //return (length(z.xyz)-1.5)/z.w;\n}\n\nfloat cube(vec3 p,vec3 s)\n{\n    p=abs(p);\n    return length(max(p-s,0.0));\n}\n\nfloat sdcross(vec3 p,float s)\n{\n    p=abs(p);\n    float dxy=max(p.x,p.y);\n    float dxz=max(p.x,p.z);\n    float dyz=max(p.y,p.z);\n    return min(dxy,min(dxz,dyz))-s;\n}\n\nfloat menger(vec3 pos)\n{\n    //pos*=3.;\n    float th=0.125;\n     float d=cube(pos,vec3(0.95)*th*2.);\n    \n        //!!!!!!!!!!!!!!  1.0-4.0\n        float s=1.1;\n\n        //!!!!!!!!!!!!!!!! 1.0-2.0\n        float scale=1.4;\n\n        for(int h=0;h<3;h++)\n        {\n            //!!!!!!!!!1.0-2.0\n            float k=1.75;\n            pos=mod(pos*s,k)-k*0.5;\n            //pos.xz=pf(p.xz,4.0);\n            pos=1.0-scale*abs(pos);\n            s*=scale;\n             //!!!!!!!!!!!!!!!!! 0.5-1.0\n            d=max(d,sdcross(pos,\n            .85*th*1.25)/s);  \n\n        }\n\n        return d;\n}\n\n\nfloat map(vec3 p,inout float acc2)\n{\n\n    vec3 pos=p;\n    pos.xy*=rot(iTime*0.5);\n    pos.xz*=rot(iTime*0.5);\n    pos.yz*=rot(iTime*0.5);\n    //float d1=menger(pos);\n    float time=iTime*2.;\n    float r=floor(time)+pow(fract(time),.3);\n   float d1=100.0;\n   if(cube(pos,vec3(0.03))<0.8){\n        for(int h=0;h<3;h++){\n        pos=abs(pos)-.05;\n        pos.xy*=rot(r);\n        pos.xz*=rot(r);\n        pos.yz*=rot(r);\n         pos.x-=sin(r)*0.1;\n        }\n    d1=cube(pos,vec3(0.03));\n    acc2+=exp(-3.0*d1);\n   }\n \n    for(int q=0;q<2;q++)\n    {\n        p=abs(p)-vec3(.5,.2,.67);\n        float a=1.5;\n        p.xy*=rot(a);\n        p.xz*=rot(a);\n        p.yz*=rot(a);\n        \n       \n        \n    }\n    \n    float s=.85;\n    p=abs(p)-1.0*s;\n    p=abs(p)-6.0*s;\n    p=abs(p)-2.0*s;\n    p=abs(p)-3.0*s;\n    \n    float k=3.0;\n    p.y=mod(p.y,k)-k*0.5;\n\n    ///////////////////////////////////\n    float d2= ft(p,vec3(1.4),1.8);\n  \n    return min(d1,d2);\n    //return d2;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/min(iResolution.x,iResolution.y);\n   // uv*=rot(iTime);\n    vec3 col=vec3(0.);\n    \n     float radius=1.;\n   float speed=-.25;\n    vec3 ta=vec3(0.);\n    vec3 ro=vec3(cos(iTime*speed)*radius,sin(iTime*0.5)*0.25,sin(iTime*speed)*radius);\n    \n    vec3 cDir=normalize(ta-ro);\n    vec3 cSide=cross(cDir,vec3(0.,-1.,0.));\n    vec3 cUp=cross(cDir,cSide);\n    float depth=1.;\n    vec3 rd=vec3(uv.x*cSide+uv.y*cUp+cDir*depth);\n    \n    \n    float d,t,acc,acc2,flash=0.0;\n    \n    for(int i=0;i<80;i++)\n    {\n        d=map(ro+rd*t,acc2);\n        if(d<0.004||t>10.0)break;\n        t+=d*0.5;\n        acc+=exp(-1.0*d);\n        if(mod(distance(vec3(0.0),ro+rd*t)-iTime*10.0,10.0)<1.0)\n        {\n            flash+=exp(-3.0*d);\n        }\n    }\n    \n    //col=vec3(exp(-.45*t));\n    col=vec3(0.,.8,.75)*acc*0.015;\n     col+=vec3(1.,1.,1.)*acc2*0.03;\n     col+=vec3(0.,.75,1.)*flash*0.02;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}