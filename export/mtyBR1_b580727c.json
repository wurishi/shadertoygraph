{"ver":"0.1","info":{"id":"mtyBR1","date":"1701824176","viewed":37,"name":"Space Warping with Noise","username":"wainggan","description":"a cute idea i had. bsb: background 5","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define ITERATIONS 6.0\n\nfloat field(vec2 uv) {\n    \n    float o;\n    \n    float weight = 0.5;\n    \n    mat2 rot = mat2(\n        cos(0.4), sin(0.4), \n        -sin(0.4), cos(0.4)\n    );\n    \n    for (float i = 0.0; i < ITERATIONS; i++) {\n        vec2 com = vec2(\n            sin(uv.x * 1.445), sin(uv.y * 1.597)\n        ) / 2.0 + 0.5;\n        \n        uv *= 1.5;\n        uv *= rot;\n        \n        o += (com.x + com.y) / 2.0 * weight;\n        \n        weight *= 0.5;\n    }\n    \n    return o;\n}\n\n#define PI 3.14159323\n\nvec2 warp(vec2 uv) {\n    float v = field(uv);\n    return vec2(cos(v * PI * 2.0), sin(v * PI * 2.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    \n    vec2 nuv = uv + vec2(0.0, iTime / 32.0);\n    nuv *= 2.0;\n    nuv += warp(nuv + vec2(0.0, iTime / 16.0)) / 2.0;\n    nuv += warp(nuv + vec2(iTime / 4.0, 0.0)) / 6.0;\n    \n    vec3 col = vec3(sin(nuv.y * 32.0) / 2.0 + 0.5);\n    //col = smoothstep(0.8, 0.9, col);\n    // anti-aliasing, ~~ @FabriceNeyret2\n    col = smoothstep(-1.0, 1.0, (col - 0.85) / fwidth(col));\n    \n    \n    float t = sin(length(uv) * 3.0 - iTime / 2.0) / 2.0 + 0.5;\n    vec3 pr = mix(vec3(1.0, 0.0, 0.8), vec3(0.0, 1.0, 0.8), t);\n    //pr = smoothstep(0.0, 1.0, pr);\n    \n    col *= pr;\n    \n\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}