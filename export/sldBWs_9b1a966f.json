{"ver":"0.1","info":{"id":"sldBWs","date":"1722705582","viewed":29,"name":"TBOS_Noise6","username":"nako","description":"The Book of Shaders\nhttps://thebookofshaders.com/11/","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                * 43758.5453123);\n}\n\nvec2 random2 (vec2 st) {\n    st = vec2(dot(st.xy,vec2(112.9898,78.233)),\n              dot(st.xy,vec2(155.5,183.3)));\n    return 2.*fract(sin(st)*43758.5453123)-1.;\n}\n\n\nvec2 rotate2D(float angle, vec2 center, vec2 st){\n    st -= center;\n    st *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    st += center;\n    return st;\n}\n\nfloat valueNoise(vec2 st, float num){\n    st *= num;\n    vec2 floor_st = floor(st);\n    vec2 fract_st = fract(st);\n    float rand0 = random(floor_st);\n    float rand1 = random(floor_st + vec2(1.,0.));\n    float rand2 = random(floor_st + vec2(1.,1.));\n    float rand3 = random(floor_st + vec2(0.,1.));\n    vec2 u = fract_st*fract_st*(3. - 2.*fract_st);\n    return mix(mix(rand0, rand1, u.x), mix(rand3, rand2, u.x), u.y);\n}\n\nfloat gradientNoise(vec2 st, float num){\n    st *= num;\n    vec2 floor_st = floor(st);\n    vec2 fract_st = fract(st);\n    vec2 rand0 = random2(floor_st);\n    vec2 rand1 = random2(floor_st + vec2(1.,0.));\n    vec2 rand2 = random2(floor_st + vec2(1.,1.));\n    vec2 rand3 = random2(floor_st + vec2(0.,1.));\n    vec2 u = fract_st * fract_st * (3.- 2.*fract_st);\n    return mix(mix(dot(rand0, fract_st), dot(rand1, fract_st-vec2(1.,0)), u.x),\n               mix(dot(rand3, fract_st-vec2(0.,1.)), dot(rand2, fract_st-vec2(1.,1)), u.x),\n               u.y);\n}\n\nfloat drawStripe(vec2 st, float num){\n    st *= num;\n    return smoothstep(.1, .9, sin(st.y*PI)*.5+.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    \n    st.x += iTime;\n    \n    //st = rotate2D(valueNoise(st, 5.), vec2(st.x-1.,0.), st);\n    st = rotate2D(gradientNoise(st, 5.)*.5, vec2(st.x-.5,0.), st);\n    \n    float col = drawStripe(st, 20.);\n    //col = smoothstep(.5, .51, valueNoise(st*5., 4.));\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}