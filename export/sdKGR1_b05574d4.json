{"ver":"0.1","info":{"id":"sdKGR1","date":"1631113916","viewed":68,"name":"bevel triangle","username":"pro","description":"geometric,","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["geometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smoothedge(float v) {\n    return smoothstep(0.0, 1.0 / iResolution.x, v);\n}\n\nfloat triangle (vec2 st,\n                vec2 p0, vec2 p1, vec2 p2,\n                float smoothness){\n  vec3 e0, e1, e2;\n\n\n  e0.xy = normalize(p1 - p0).yx * vec2(+1.0, -1.0);\n  e1.xy = normalize(p2 - p1).yx * vec2(+1.0, -1.0);\n  e2.xy = normalize(p0 - p2).yx * vec2(+1.0, -1.0);\n\n  e0.z = dot(e0.xy, p0) ;\n  e1.z = dot(e1.xy, p1);\n  e2.z = dot(e2.xy, p2) ;\n\n  float a = max(0.0, dot(e0.xy, st) - e0.z+smoothness);\n  float b = max(0.0, dot(e1.xy, st) - e1.z+smoothness);\n  float c = max(0.0, dot(e2.xy, st) - e2.z+smoothness);\n\n  return length(vec3(a, b, c))-smoothness;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n \n    vec3 color = vec3(smoothedge( triangle(uv,\n                              vec2(0.2,0.15),\n                              vec2(0.5,0.2),\n                              vec2(0.5,0.88),\n                              0.05)) );\n                              \n                              \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}