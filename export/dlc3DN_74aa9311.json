{"ver":"0.1","info":{"id":"dlc3DN","date":"1682435683","viewed":69,"name":"faltapelov1","username":"jorge2017a2","description":"faltapelov1","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["faltapelov1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//----por jorge2017a1\n// 25-abril-2023\n/// es una version incompleta de goku niÃ±o...falta el pelo...son mas operaciones uoopss!!!\n//referencia de idea https://www.shadertoy.com/view/cltGzr....Kali\n// The High Priestess\n\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(1.0),b,d)\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\ncolOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\nreturn colOut;\n}\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\nfloat sdCircle( vec2 p, float r )\n{return length(p) - r; }\n\nvec3 cabeza(vec2 p, vec3 colOut )\n{\n   vec2 p1,p2;\n   float r1, r2;\n   float d=100.0;\n   p.y=6.0-p.y;\n    p1=vec2(436.,314.)/d;r1=85./d;\n    p2=vec2(433.,266.)/d;r2=95./d;\n    float d1= sdCircle( p-p1,r1);\n    float d2= sdCircle( p-p2,r2);\n    float df=unionSDF(d1,d2);\n    vec3 carne=vec3(0.9882, 0.8156, 0.7058);\n    vec3 col= DrawFigBorde(carne, colOut, df);\n    return col;\n}\n\n\nvec3 ojogokuDer(vec2 uv, vec3 colOut)\n{\nvec3 col=colOut;\nvec2 p1, p2, p3, p4,p5,p6,p7;\nfloat r1,r2, r3, r4, r5,r6,r7;\n\nfloat d=100.0;\nuv.y=6.0-uv.y;\n\np1=vec2(519,318)/d;r1=70./d;\np2=vec2(427,295)/d;r2=75./d;\np3=vec2(483,402)/d;r3=80./d;\np4=vec2(491,178)/d;r4=95./d;\np5=vec2(481,283)/d;r5=18.7/d;\n\np6=vec2(4.65,3.1);r6=0.08;\np7=vec2(4.53,3.3);r7=0.10;\n\n\nfloat d1=sdCircle(uv-p1,r1);\nfloat d2=sdCircle(uv-p2,r2);\nfloat d3=sdCircle(uv-p3,r3);\nfloat d4=sdCircle(uv-p4,r4);\nfloat d5=sdCircle(uv-p5,r5);\nfloat d6=sdCircle(uv-p6,r6);\nfloat d7=sdCircle(uv-p7,r7);\n\n\nfloat df;\ndf=intersectSDF(d1,d2);\ndf=differenceSDF(df,d3);\ndf=differenceSDF(df,d4);\ndf=unionSDF(df,d5);\ncol= DrawFigBorde(vec3(1.0,1.0,1.0), col,df);\ncol= DrawFigBorde(vec3(0.0,0.0,0.0), col, d6 );\n\nvec3 carne=vec3(0.9882, 0.8156, 0.7058);\ncol= DrawFigBordeCol(carne, col, d7 ,carne);\n\n    return col;\n}\n\nvec3 boca(vec2 p, vec3 colOut)\n{\nfloat d=300.0;\np.y=2.75-p.y;\np.x=2.5+p.x;\np=p*0.5;\n\nvec2 A=vec2(419.,356.)/d;\nvec2 B=vec2(447.,362.)/d;\nvec2 C=vec2(462.,339.)/d;\n\n    \n    float d1= sdBezier(p, A, B,C );\n    vec3 col=colOut;\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d1);\n    \n    //--------ceja izq\np.y+=0.2;\nA=vec2(356.,256.)/d;\nB=vec2(382.,240.)/d;\nC=vec2(407.,270.)/d;\n\n    \n    d1= sdBezier(p, A, B,C );\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d1);\n    \n    \n    \nA=vec2(455.,275.)/d;\nB=vec2(477.,238.)/d;\nC=vec2(501.,249.)/d;\n    d1= sdBezier(p, A, B,C );\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d1);\n    \np.y-=0.225;\nA=vec2(437.,367.)/d;\nB=vec2(440.,359.)/d;\nC=vec2(447.,365.)/d;\n    d1= sdBezier(p, A, B,C );\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d1);\n    \n    \n    //nariz\np.y+=0.05;\nA=vec2(433.,340.)/d;\nB=vec2(437.,331.)/d;\nC=vec2(446.,337.)/d;\n    d1= sdBezier(p, A, B,C );\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d1);\n    \n    \n    return col;\n}\n\n\n\n\nvec3 ojogokuIzq(vec2 uv, vec3 colOut)\n{\nvec3 col=colOut;\nvec2 p1, p2, p3, p4,p5,p6,p7;\nfloat r1,r2, r3, r4, r5,r6,r7;\n\n\nfloat d=100.0;\nuv.y=6.0-uv.y;\n\np1=vec2(362,339)/d;r1=70./d;\np2=vec2(429,299)/d;r2=65./d;\np3=vec2(395,411)/d;r3=85./d;\np4=vec2(364,217)/d;r4=65./d;\np5=vec2(383,294)/d;r5=20./d;\np6=vec2(4.1,3.1);r6=0.08;\np7=vec2(4.3,3.3);r7=0.10;\n\n\nfloat d1=sdCircle(uv-p1,r1);\nfloat d2=sdCircle(uv-p2,r2);\nfloat d3=sdCircle(uv-p3,r3);\nfloat d4=sdCircle(uv-p4,r4);\nfloat d5=sdCircle(uv-p5,r5);\nfloat d6=sdCircle(uv-p6,r6);\nfloat d7=sdCircle(uv-p7,r7);\n\n\nfloat df;\ndf=intersectSDF(d1,d2);\ndf=differenceSDF(df,d3);\ndf=differenceSDF(df,d4);\ndf=unionSDF(df,d5);\ncol= DrawFigBorde(vec3(1.0,1.0,1.0), col,df);\ncol= DrawFigBorde(vec3(0.0,0.0,0.0), col, d6 );\nvec3 carne=vec3(0.9882, 0.8156, 0.7058);\ncol= DrawFigBordeCol(carne, col, d7 ,carne);\n    return col;\n}\n\n\nvec3 orejaIzq(vec2 uv, vec3 colOut)\n{\nvec3 col=colOut;\nvec2 p1, p2, p3, p4,p5,p6,p7;\nfloat r1,r2, r3, r4, r5,r6,r7;\n\n\nfloat d=100.0;\nuv*=1.2;\nuv.y=4.0-uv.y;\nuv.x=uv.x+3.95;\n\n\np1=vec2(375,298)/d;r1=70./d;\np2=vec2(294,347)/d;r2=70./d;\np3=vec2(282,203)/d;r3=90./d;\np4=vec2(317,292)/d;r4=10./d;\n\nfloat d1=sdCircle(uv-p1,r1);\nfloat d2=sdCircle(uv-p2,r2);\nfloat d3=sdCircle(uv-p3,r3);\nfloat d4=sdCircle(uv-p4,r4);\n\n\nfloat df;\ndf=intersectSDF(d1,d2);\ndf=differenceSDF(df,d3);\ndf=unionSDF(df,d4);\n\nvec3 carne=vec3(0.9882, 0.8156, 0.7058);\ncol= DrawFigBorde(carne, col,df);\nreturn col;\n}\n\n\nvec3 rostroGoku(vec2 uv, vec3 col)\n{vec2 pos=vec2(-4.0,-2.);\ncol= orejaIzq(uv,col);\ncol= orejaIzq(vec2(-uv.x,uv.y)-vec2(-0.73,0.05),col);\ncol= cabeza(uv-pos,col);\ncol= ojogokuDer(uv-pos, col);\ncol= ojogokuIzq(uv-pos, col);\ncol= boca(uv, col);\nreturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\nuv.x *= iResolution.x/iResolution.y;\nuv-=vec2(0.0,-0.5);\nvec2 uv0=uv;\nuv*=2.0;\n\nvec3 col =0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\nfloat t=iTime;\nuv*=abs(1.5*sin(t));\nfloat s=sin(t);\nfloat c=cos(t);\n    \ncol= rostroGoku((uv-vec2(-1.0,-3.0))*0.25,col);\ncol= rostroGoku(vec2(uv.x,uv.y)*0.5,col);\ncol= rostroGoku(uv-vec2(1.0*s,1.0*c),col);\n\nfragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\nfloat sdBezier( in vec2 pos, in vec2 A, in vec2 B, in vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.0*B + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n    float kk = 1.0/dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n    float kz = kk * dot(d,a);      \n    float res = 0.0;\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx-3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n    if( h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        float t = clamp( uv.x+uv.y-kx, 0.0, 1.0 );\n        res = dot2(d + (c + b*t)*t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp(vec3(m+m,-n-m,n-m)*z-kx,0.0,1.0);\n        res = min( dot2(d+(c+b*t.x)*t.x),\n                   dot2(d+(c+b*t.y)*t.y) );\n        // the third root cannot be the closest\n        // res = min(res,dot2(d+(c+b*t.z)*t.z));\n    }\n    return sqrt( res );\n}\n\n","name":"Common","description":"","type":"common"}]}