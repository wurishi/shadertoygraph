{"ver":"0.1","info":{"id":"mlGfzD","date":"1701888670","viewed":50,"name":"Heat Simulation","username":"Maticzpl","description":"Very simple, work in progress heat simulation","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["simulation","temp","heat","temperature"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define colorCount 5\nvec3 heatColor(float value)\n{\n    vec3 colors[colorCount] = vec3[](\n        vec3(0, 0, 1), \n        vec3(0, 1, 1), \n        vec3(0, 1, 0), \n        vec3(1, 1, 0), \n        vec3(1, 0, 0)\n    );\n    \n    int index = int(value * float(colorCount - 1));\n    float frac = fract(value * float(colorCount - 1));\n    return mix(colors[index], colors[min(index + 1, colorCount - 1)], frac);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 screenScale = max(iResolution.xy / RES, vec2(1.0));\n    vec2 uv = fragCoord/iResolution.xy;\n    float heat = texture(iChannel0, uv / screenScale).r;    \n    \n    float heatCapacity = texture(iChannel1, uv / screenScale).r;\n    \n    //fragColor = vec4(vec3(heat), 1.0);\n    fragColor = vec4(heatColor(heat), 1.0) * heatCapacity;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float getTemp(vec2 pos)\n{\n    return texture(iChannel0, pos / iResolution.xy).r;\n}\n\nfloat getCond(vec2 pos)\n{\n    return texture(iChannel2, pos / iResolution.xy).r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 pos = fragCoord;\n    if(iFrame == 5)\n    {    \n        fragColor = texture(iChannel1, pos / iResolution.xy * vec2(4)) * 2.0;\n        fragColor = fragColor * fragColor;\n        //if (int(pos.x + pos.y) % 2 == 0)\n        //    fragColor = vec4(0);\n    }\n    else\n    {\n        float sum = 0.0;\n        float div = 0.0;\n        \n        for(int x = -2; x <= 2; x++)\n            for(int y = -2; y <= 2; y++)\n            {\n                float cond = getCond(vec2(x, y) + pos);\n                div += cond;\n                sum += getTemp(vec2(x, y) + pos) * cond;\n            }\n            \n        if(div == 0.0)\n            fragColor = vec4(0);\n        else\n            fragColor = vec4(sum / div);   \n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define RES vec2(160, 90)","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 screenScale = iResolution.xy / RES;\n    \n    fragColor = vec4(0.0,0.0,0.0,1.0);\n    \n    \n    for(int i = 0; i < 90; i++)\n    {\n        if (distance(vec2(35 + i, 40), fragCoord) < 3.0)\n            fragColor = vec4(1.0);\n    }\n    \n    if (distance(vec2(20, 40), fragCoord) < 15.0)\n        fragColor = vec4(1.0);  \n    \n    if (distance(vec2(120, 30), fragCoord) < 15.0)\n        fragColor = vec4(1.0);\n        \n    if (distance(vec2(60, 60), fragCoord) < 15.0)\n        fragColor = vec4(1.0);\n        \n    if (iTime > 5.0 && distance(vec2(70, 49), fragCoord) < 5.0)\n        fragColor = vec4(1.0);\n        \n    if (distance(vec2(60, 20), fragCoord) < 5.0)\n        fragColor = vec4(1.0);\n        \n    if (distance(vec2(140, 80), fragCoord) < 5.0)\n        fragColor = vec4(1.0);\n        \n    if (distance(vec2(129, 80), fragCoord) < 5.0)\n        fragColor = vec4(1.0);\n        \n    if (distance(vec2(117, 80), fragCoord) < 5.0)\n        fragColor = vec4(1.0);\n    \n    \n}","name":"Buffer B","description":"","type":"buffer"}]}