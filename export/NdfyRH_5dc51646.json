{"ver":"0.1","info":{"id":"NdfyRH","date":"1641660437","viewed":203,"name":"German Flag animated","username":"Krischan","description":"The animation from https://www.shadertoy.com/view/flsXRM combined with the colors of the german flag","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["animated","flags","golf","germany"],"hasliked":0,"parentid":"4sKyzt","parentname":"The Stars and Stripes"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RED vec3(193.0,18.0,28.0) / 255.\n#define BLACK vec3(1., 1., 1.) / 255.\n#define GOLD vec3(238., 201., 0.) / 255.\n\nvec3 Flag(vec2 U)\n{\n    vec3 col=mix(RED,BLACK,smoothstep(0.663,0.666,U.y));\n    return mix(GOLD,col,smoothstep(0.330,0.333,U.y));\n}\n\nfloat vignette(vec2 U)\n{\n    return 16. * U.x * (1. - U.x) * U.y * (1. - U.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = uv.x*7.-6.*iTime+uv.y*6.;\n    uv.y += sin(t)*.0125;\n    \n    vec3 col = Flag(uv);\n\n    col += sin(t)*0.25; // highlights\n    col *= .7+cos(t)*.3; // shadows\n\n    col *= 1.0 - .6 * exp2(-1.75 * vignette(uv)); // vignette\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}