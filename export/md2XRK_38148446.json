{"ver":"0.1","info":{"id":"md2XRK","date":"1671016679","viewed":83,"name":"star reversed","username":"yrqian99","description":"star reversed","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589\n\nuniform float u_time;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = 2.0 * uv.x - 1.0; // map from [0,1] to [-1,+1]\n    uv.x = uv.x * (iResolution.x / iResolution.y); // center x\n    uv.x = 0.5 * (1.0 + uv.x); // map back from [-1,+1] to [0,1]\n\n\n    //star\n    vec2 dubUVX = vec2(uv.x * 0.2 + 0.4, uv.y * 0.5 + 0.25);\n    float shadeX = 0.5 / distance(dubUVX, vec2(0.5));\n    vec2 dubUVY = vec2(uv.y * 0.2 + 0.4, uv.x * 0.5 + 0.25);\n    float shadeY= 0.9/ distance(dubUVY, vec2(0.5));\n    float shade = sin(shadeY / shadeX);\n\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec3 blackCol = vec3(0.0);\n    vec3 uvColor = vec3(uv, 1.0);\n    vec3 mixedColor = mix(blackCol, uvColor, shade);\n\n    // Output to screen\n    fragColor = vec4(vec3(shade),1.0);\n}","name":"Image","description":"","type":"image"}]}