{"ver":"0.1","info":{"id":"Mcf3zB","date":"1703223760","viewed":34,"name":"Water Map Generator","username":"Zentient","description":"A simple formula for generating heightmaps for water waves.\n\nCould be a lot wrong with this, I won't know until I actually cash out the time to build a raymarcher in GLSL","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["waves","water","mapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Wave variables\n    float iterations = 10.0;\n    float weightAvgX = 0.0;\n    float weightAvgY = 0.0;\n    float heightX = 0.0;\n    float heightY = 0.0;\n    float wavePosX = sin(iTime/2.0);\n    float wavePosY = sin(iTime/1.5);\n    float wavePeriod = 10.0;\n    \n    //loop for generating\n    for(float i = iterations; i >= 0.0; i = i - 1.0)\n    {\n\n        \n        wavePosX = sin(iTime / (i/2.0) + (i * 3.0));\n        wavePosY = sin(iTime / (i/3.0) + (i * 6.0));\n        heightX = 0.5 - (sin((wavePosX + ((uv.x * wavePeriod + wavePosX))) * (i/5.0))) / 2.0;\n        heightY = 0.5 - abs((sin((wavePosY + (((uv.y + (heightX)) * wavePeriod + wavePosY))) * (i/5.0))) / 1.0);\n        \n        weightAvgX = (weightAvgX + heightX) / 2.0;\n        weightAvgY = (weightAvgY + heightY) / 2.0;\n    \n    }\n    \n    \n    // Output to screen\n    vec3 col = vec3(weightAvgX + weightAvgY);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}