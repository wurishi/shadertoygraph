{"ver":"0.1","info":{"id":"mlcfz2","date":"1701413465","viewed":10,"name":"testa2125068","username":"2125068","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n    \n    uv -= vec2(0.5,0.5) * iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    float r =300.0;\n    if(uv.x * uv.x + uv.y * uv.y < r * r){\n        float z = sqrt(r * r - uv.x * uv.x - uv.y * uv.y);\n        vec3 normal = normalize(vec3(uv.x,uv.y,z));\n        vec3 light = normalize(vec3(1.0,1.0,1.0));\n        float diffuse = clamp(dot(normal,light),0.0,1.0);\n        float I = diffuse * 0.7 + 0.3;\n    \n    \n        col =vec3(0.2,0.2,0.4);\n    }\n \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}