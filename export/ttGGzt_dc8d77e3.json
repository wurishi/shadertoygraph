{"ver":"0.1","info":{"id":"ttGGzt","date":"1579600829","viewed":125,"name":"Perlin Terraformer","username":"42yeah","description":"Fake lands generated using Perlin Noise from here: https://thebookofshaders.com/11/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand2d(vec2 uv) {\n    return fract(sin(dot(uv, vec2(13.23, 78.1231))) * 1000000.0);\n}\n\nvec2 ddrand2d(vec2 uv) {\n    vec2 w = fract(sin(vec2(\n        dot(uv, vec2(13.23, 78.1231)),\n        dot(uv, vec2(799.134, 42.52))\n        )) * 1000000.0);\n    return (w - 0.5) * 2.0;\n}\n\nfloat perlin(vec2 uv) {\n    vec2 u = floor(uv);\n    vec2 f = fract(uv);\n    vec2 s = smoothstep(0.0, 1.0, f);\n    \n    vec2 a = ddrand2d(u);\n    vec2 b = ddrand2d(vec2(u.x + 1.0, u.y));\n    vec2 c = ddrand2d(vec2(u.x, u.y + 1.0));\n    vec2 d = ddrand2d(vec2(u.x + 1.0, u.y + 1.0));\n    return mix(mix(dot(a, f), dot(b, f - vec2(1.0, 0.0)), s.x),\n               mix(dot(c, f - vec2(0.0, 1.0)), dot(d, f - vec2(1.0, 1.0)), s.x), s.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n\tvec2 off = vec2(iTime / 100.0, 1.0);\n    uv += off;\n    float r = perlin(vec2(uv.x * aspect, uv.y) * 2.0) * 0.5 + 0.5;\n    r *= sin(iTime / 2.5) * 0.25 + 0.75;\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    if (r < 0.4) {\n        // Water\n        col = mix(r * vec3(0.2, 0.8, 0.78), vec3(0.1, 0.7, 0.8), 1.0 - pow(r / 0.4, 5.0));\n    } else if (r > 0.65) {\n        // Snow\n        col = r * vec3(1.0, 1.0, 1.0);\n    } else if (r > 0.5) {\n        // Grass\n        col = r * vec3(0.3, 0.87, 0.4);\n    } else {\n        // Land\n        col = r * vec3(0.989, 0.52, 0.22);\n    }\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}