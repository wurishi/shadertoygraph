{"ver":"0.1","info":{"id":"NsVfRz","date":"1657569241","viewed":132,"name":"Normalize and NaN","username":"jozxyqk","description":"Tests what *undefined behaviour* the glsl implementation has where NaNs can be produced when normalizing a zero length vector.\n\nNote that z/blue can be a compile time constant and because of this may end up with a different value.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["normalize","nan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    if (gl_FragCoord.x < iResolution.x / 2.0 && gl_FragCoord.y < iResolution.y / 2.0)\n    {\n        // Bottom left\n        vec2 coord = floor((gl_FragCoord.xy - vec2(iResolution.x * 0.25, iResolution.y * 0.25)) / 50.0);\n        \n        // Intrinsic normalize 3D direction where z = 0\n        vec3 dir = vec3(floor(coord), 0.0);\n        dir = normalize(dir);\n        dir = dir * 0.5 + 0.5;\n        fragColor = vec4(dir,1.0);\n    }\n    else if (gl_FragCoord.x >= iResolution.x / 2.0 && gl_FragCoord.y < iResolution.y / 2.0)\n    {\n        // Bottom right\n        vec2 coord = floor((gl_FragCoord.xy - vec2(iResolution.x * 0.75, iResolution.y * 0.25)) / 50.0);\n        \n        // Custom normalize 3D direction where z = 0\n        vec3 dir = vec3(floor(coord), 0.0);\n        dir = dir / length(dir);\n        dir = dir * 0.5 + 0.5;\n        fragColor = vec4(dir,1.0);\n    }\n    else if (gl_FragCoord.x < iResolution.x / 2.0 && gl_FragCoord.y >= iResolution.y / 2.0)\n    {\n        // Top left\n        vec2 coord = floor((gl_FragCoord.xy - vec2(iResolution.x * 0.25, iResolution.y * 0.75)) / 50.0);\n        \n        // Show nans for intrinsic normalize\n        vec3 dir = vec3(floor(coord), 0.0);\n        dir = normalize(dir);\n        dir = dir * 0.5 + 0.5;\n        fragColor = vec4(isnan(dir.x), isnan(dir.y), isnan(dir.z), 1.0);\n    }\n    else\n    {\n        // Top right\n        vec2 coord = floor((gl_FragCoord.xy - vec2(iResolution.x * 0.75, iResolution.y * 0.75)) / 50.0);\n        \n        // Show nans for custom normalize\n        vec3 dir = vec3(floor(coord), 0.0);\n        dir = dir / length(dir);\n        dir = dir * 0.5 + 0.5;\n        fragColor = vec4(isnan(dir.x), isnan(dir.y), isnan(dir.z), 1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}