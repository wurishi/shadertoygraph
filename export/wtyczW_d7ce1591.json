{"ver":"0.1","info":{"id":"wtyczW","date":"1610563498","viewed":67,"name":"Value Life","username":"me_123","description":"This is a type of cellular automata witch goes on and on and on.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["convellife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = 2.*(sqrt(texture(iChannel1, uv)+0.0001)-0.1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy/iResolution.xy)-0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    fragColor = vec4(texture(iChannel0, fragCoord/iResolution.xy).x);//vec4(length(uv) < 0.25);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"float convel(in vec2 coord) {\n    float n1 = texelFetch(iChannel1, ivec2(coord), 0).w;\n    float n2 = texelFetch(iChannel1, ivec2(coord+vec2(-1, -1)), 0).w;\n    float n3 = texelFetch(iChannel1, ivec2(coord+vec2(-1, 0)), 0).w;\n    float n4 = texelFetch(iChannel1, ivec2(coord+vec2(-1, 1)), 0).w;\n    float n5 = texelFetch(iChannel1, ivec2(coord+vec2(1, -1)), 0).w;\n    float n6 = texelFetch(iChannel1, ivec2(coord+vec2(1, -1)), 0).w;\n    float n7 = texelFetch(iChannel1, ivec2(coord+vec2(1, 0)), 0).w;\n    float n8 = texelFetch(iChannel1, ivec2(coord+vec2(1, 1)), 0).w;\n    float val = (n1+n2+n3+n4+n5+n6+n7+n8);\n    return val <0.1 ? sqrt(val) : val/9.;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame == 0) {\n        fragColor = texture(iChannel0, fragCoord.xy/iResolution.xy);\n    } else {\n        fragColor = vec4(convel(fragCoord))*1.06;\n    }\n}","name":"Buffer C","description":"","type":"buffer"}]}