{"ver":"0.1","info":{"id":"43s3DM","date":"1707855356","viewed":56,"name":"Raytrahing","username":"Tatovka","description":"weqfwqf","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fwrqf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14\nstruct Ray{\nvec3 origin;\nvec3 direction;\nvec3 at; \n};\nvec3 at(Ray r,float t){\n    return r.origin+r.direction*t;\n}\nstruct Sphere{\nvec3 pos;\nfloat r;\n};\n\nfloat InterSphere(Ray ray, Sphere sph){\nfor (float t=0.;t<8.;t+=0.01){\nif(length(at(ray,t)-sph.pos)<=sph.r*sph.r && length(at(ray,t)-sph.pos)>=-sph.r*sph.r  )\n    return 1.- t/8.;\n}\nreturn 0.;\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\nvec2 uv = fragCoord/iResolution.xy;\nfloat aspectRatio=iResolution.x/iResolution.y;\nfloat viewSize=2.0;\n\nfloat angle=abs(90.*pi/180.);\nRay ray;\nray.origin=vec3(uv.x*aspectRatio*viewSize,0,uv.y*viewSize);\nray.direction=vec3(0,sin(angle),cos(angle));\n\nSphere sph;\nsph.pos=vec3(1.9,7.,1.0);\nsph.r=1.0;\n\nvec3 col = vec3(1,1,1);\ncol*=InterSphere(ray,sph);\n    fragColor = vec4(col,1.0)*1.5;\n}","name":"Image","description":"","type":"image"}]}