{"ver":"0.1","info":{"id":"7lKBzh","date":"1664123449","viewed":107,"name":"NoName Paint II","username":"spontificus","description":"til discard","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["hexagonal","discard"],"hasliked":0,"parentid":"7tyfRR","parentname":"fake perspective"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int point_i_size = 2;\n\n\nbool myInRange(int t, int v1, int v2) {\n    return (abs(t - v1) + abs(v2 - t) <= abs(v2 - v1));\n}\n\n// centered and anti-square\nivec3 screenToHex( vec2 p ) {\n    int j = int(iResolution.y-p.y)/2 - int(iResolution.y/4.);\n    int i = (int(p.x) - j )/2 - int(iResolution.x/4.);\n    return ivec3(i,j,-(i+j));\n}\n\n\n// squarerootless solution\nint hexDist(ivec3 p1, ivec3 p2) {\n    return (p2.x-p1.x)*(p2.x-p1.x) + (p2.y-p1.y)*(p2.y-p1.y) + (p2.x-p1.x)*(p2.y-p1.y);\n    //return int(sqrt(float((p2.x-p1.x)*(p2.x-p1.x) + (p2.y-p1.y)*(p2.y-p1.y) + (p2.x-p1.x)*(p2.y-p1.y))));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec3 center = ivec3(0,0,0);\n    ivec3 fragHex = screenToHex(fragCoord.xy);\n    ivec3 mouseHex = screenToHex(iMouse.xy);  \n    int mdist = hexDist(mouseHex,center);\n    int pdist = hexDist(fragHex,center);\n   \n    if(abs(pdist-mdist) > 5)\n        discard;\n   \n    int ddist = hexDist(mouseHex,screenToHex(iMouse.wz));\n\n    vec4 col = vec4(.1,.1,.1,1.);\n   \n\n    if ( fragHex == mouseHex ) {\n        col = vec4(1., 1., 1., 1.);\n    }\n    \n     \n    // center dot\n    if (fragHex.x == 0 && fragHex.y == 0) {\n        col = vec4(1., 1., 1., 1.);   \n    }\n    \n   \n    int rangeMin = -7;\n    int rangeMax = 7;\n    if (myInRange(pdist,mdist+rangeMin,mdist)) {\n        col += vec4(1.,0.5,0.5, 1.);   \n    } else if (myInRange(pdist,mdist+rangeMin*2,mdist+rangeMin)) {\n        col += vec4(0.5,0.25,0.25, 1.);   \n    }\n    \n       \n    if (myInRange(pdist,mdist,mdist+rangeMax)) {\n        col += vec4(0.5,0.5,1., 1.);   \n    } else if (myInRange(pdist,mdist+rangeMax,mdist+rangeMax*2)) {\n        col += vec4(0.25,0.25,0.5, 1.);   \n    }\n    \n       \n    if (pdist == hexDist(mouseHex,center) ) {\n   // if (pdist % mouseHex.x == 0 && pdist % mouseHex.y == 0) {\n       col = vec4(1.,1.,1., 1.);   \n    }\n    \n\n    \n    fragColor = col;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}