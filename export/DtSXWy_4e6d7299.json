{"ver":"0.1","info":{"id":"DtSXWy","date":"1676484027","viewed":153,"name":"Normal map extraction","username":"ianertson","description":"Just wanted to show how I estimate normals from textures.\nThis technique is what I used here for example: [url]https://www.shadertoy.com/view/DtBXRd[/url]\n\nUse the mouse to control the light :)","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["normals","light","normalmap","bump","lights","bumpmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// how far we look between texels\n#define DETAIL 0.01\n\n// the Z value for the normal\n#define Z 0.4\n\n\n#define R iResolution.xy\n#define T (iTime)\n\n///////// Implementation\n\nvec3 getNormal(\n    sampler2D tex,\n    vec2 uv,\n    float detail,\n    float z\n) {\n    #define TEXEL(CH, UV) dot(textureLod(CH, UV, 0.0).rgb, vec3(0.299, 0.587, 0.114))\n    float l = TEXEL(tex, uv);\n    float d = fwidth(l)*detail;\n    \n    vec3 n = normalize(l - vec3(\n        TEXEL(tex, uv + vec2(d, 0)),\n        TEXEL(tex, uv + vec2(0, d)),\n        (z > 0.0 ? z : TEXEL(tex, uv + vec2(d, d)))\n    ));\n    n.z = z;\n    #undef TEXEL\n    return n;\n}\n\n\n\n\n///////// just for visualization\n\nvec3 render(sampler2D ch, vec2 uv, vec2 fc) {\n    vec3 col = vec3(0.0);\n    float c = R.x / 2.0;\n    vec3 n = getNormal(ch, uv, DETAIL, Z);\n    col = n;\n    if (fc.x <= c) {\n        col = texture(ch, uv).rgb;\n        vec3 lpos = vec3(iMouse.xy/R.y, 0.5)*2.;\n        if (iMouse.z <= 0.01) lpos.xy = ((R.xy/vec2(2.0, 1.0)) + ((R.xy/3.)*vec2(cos(T), sin(T)))) / R.y;\n        vec3 pos = vec3(uv.xy*2., 0.5);\n        vec3 dir = normalize(lpos - pos);\n        float NdotL = max(0.0, dot(n, dir));\n        float d = distance(pos, lpos);\n        float att = 0.5 / max(0.001, pow(d, 2.0));\n        col *= att * NdotL;\n    }\n    float r = 1.5;\n    float f = r*8.;\n    float k = 1.0 - smoothstep(r - f, r + f, abs(fc.x-c));\n    vec3 kc = mix(vec3(1.0), vec3(0, 0, 0), max(0.0, 1.0-k));\n    col = mix(col, kc, k);\n    return col;\n}\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = fc/R.y;\n    \n    \n    vec3 colA = render(iChannel0, uv, fc);\n    vec3 colB = render(iChannel1, uv, fc);\n    vec3 colC = render(iChannel2, uv, fc);\n    vec3 colD = render(iChannel3, uv, fc);\n    \n    float cycle = mod(T*0.2, 4.1);\n    float f = 0.1;\n    col = colA;\n    col = mix(col, colB, smoothstep(1.0 - f, 1.0 + f, cycle));\n    col = mix(col, colC, smoothstep(2.0 - f, 2.0 + f, cycle));\n    col = mix(col, colD, smoothstep(3.0 - f, 3.0 + f, cycle));\n    col = mix(col, colA, smoothstep(4.0 - f, 4.0 + f, cycle));\n\n    col /= vec3(1.0) + col;\n    col = pow(col, vec3(1.0 / 2.2));\n    \n    O = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}