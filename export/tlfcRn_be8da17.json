{"ver":"0.1","info":{"id":"tlfcRn","date":"1591652788","viewed":151,"name":"Trees of Circles II","username":"sl2c","description":"Based on [url=https://arxiv.org/abs/2002.00239]Bachman-Segerman-Schleimer cohomology fractals[/url].","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","circles","hyperbolic","gasket","cohomology"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Copyright 2020 Google LLC\n// SPDX-License-Identifier: Apache-2.0\n// NOT an official Google project; see Google Open Source guidelines for more info on copyright transfer\n// written by William Cadegan-Schlieper \n\nvec3 color(vec3 z) {\n    int i;\n    float res = 0.0;\n    for (i=0; i<160; i++) {\n        z.x = mod(z.x,4.0);\n        if (z.x > 3.0) {\n            z.x -= 4.0;\n        }\n        if (z.x > 1.0) {\n            z.x = 2.0-z.x;\n        }\n        \n        if (z.y < -1.0) {\n            z.y = -2.0 - z.y;\n        }\n        res += float(int((z.y+1.0) / 2.0));\n        z.y = mod(z.y + 1.0, 4.0) - 1.0;\n        if (z.y > 1.0) {\n            z.y = 2.0 - z.y;\n            res += 1.0;\n        }\n        if (dot(z,z) < 2.0) {\n            z /= -0.5 * dot(z,z);\n            z.z = abs(z.z);\n            res = -res;\n        } else {\n            break;\n        }\n    }\n    if (i%2!=0) {\n        res = -res;\n    }\n    float col = 1.0 - 1.0 / abs(res);\n    if (res > 0.0) {\n        return col * vec3(1.0,0.5,0.0);\n    } else {\n        return col * vec3(0.0,0.5,1.0);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord - iResolution.xy * 0.5)/iResolution.y;\n    float ds = 1.0 / iResolution.y;\n\n    \n    float t = iTime * 0.5;\n    \n    float period = 4.0 * log(2.0 + sqrt(5.0));\n    while (t > period * 0.5) {\n        t -= period;\n    }\n    \n    \n   \n    \n    \n    vec3 z = vec3(uv, 1.3 * ds);\n    z *= exp(-t);\n    \n    z.x -= sqrt(0.05);\n    \n    z /= dot(z,z);\n    \n    z.x += sqrt(5.0);\n    \n    \n    fragColor = vec4(color(z),1.0);\n    fragColor = pow(fragColor, vec4(1.0/2.2));\n}","name":"Image","description":"","type":"image"}]}