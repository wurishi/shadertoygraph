{"ver":"0.1","info":{"id":"slBBz3","date":"1652489480","viewed":230,"name":"Antialiased isometric grid","username":"ellipticaldoor","description":"Isometric grid based on https://www.shadertoy.com/view/wsdSRr","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","antialias","isometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float tileSize = 0.2;\nconst float borderSize = 0.468;\nconst float lineBlur = 0.2;\n\nvec2 aGrid(vec2 uv) {\n  return vec2(mod(uv.x, 1.0), mod(uv.y * 2.0, 1.0));\n}\n\nvec2 bGrid(vec2 uv) {\n  return vec2(mod(uv.x - 0.5, 1.0), mod((uv.y * 2.0) - 0.5, 1.0));\n}\n\nfloat los(vec2 pos) {\n  vec2 abspos = abs(pos - vec2(0.5));\n  return smoothstep(borderSize, borderSize + lineBlur, abspos.x + abspos.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.xy;\n  vec2 size = uv / tileSize;\n  float alos = los(aGrid(size));\n  float blos = los(bGrid(size));\n  float color = min(alos, blos);\n  color = pow(color, 1.0 / 2.2);\n  fragColor = vec4(color);\n}","name":"Image","description":"","type":"image"}]}