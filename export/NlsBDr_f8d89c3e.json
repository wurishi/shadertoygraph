{"ver":"0.1","info":{"id":"NlsBDr","date":"1650742276","viewed":92,"name":"Balise - Mandelbrot 02","username":"Balise","description":"Mandelbrot zoom with continuous coloring","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","zoom","fractale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float mandel(vec2 q, int maxiter) {\n\n\tvec2 z = vec2(0.0, 0.0);\n\tfor (int i = 0; i < maxiter; i++) {\n        float a = z.x;\n        float b = z.y;\n        z = vec2(a*a - b*b, 2.0*a*b) + q;\n\t\tfloat l = length(z);\n\t\tif (l > 1000.0) {\n\t\t\treturn (float(i) + 1.0  - log2(log2(l)));\n\t\t}\n\t}\n\treturn -1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float centerX = -0.7491;\n    float centerY = 0.1006;\n    //float centerX = -1.5;\n    //float centerY = 0.0;\n    \n    float left, right, top, bottom;\n    left = centerX - 1.0/pow(iTime+0.9, 3.0);\n    right = centerX + 1.0/pow(iTime+0.9, 3.0);\n    top = centerY - 1.0/pow(iTime+0.9, 3.0);\n    bottom = centerY + 1.0/pow(iTime+0.9, 3.0);\n    \n    float width = abs(left - right);\n    float height = abs(top - bottom);\n    \n    \n    float ratio = float(iResolution.x) / float(iResolution.y) * height / width;\n    vec2 q = mat2(ratio * width / iResolution.x, 0, 0, -height / iResolution.y) * fragCoord + vec2(left, -top);\n\n    float val = mandel(q, 500)/70.0;\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    if (val >= 0.0) {\n      col = mix(vec3(1.0, 1.0, 1.0), vec3(0.8, 0.2, 0.8), val);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}