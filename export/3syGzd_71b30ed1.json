{"ver":"0.1","info":{"id":"3syGzd","date":"1570720563","viewed":90,"name":"Smoothstep Plot","username":"cfh","description":"Little (first) shader just to show results of `smoothstep`, `fract` and `step` function.\nX: -2 →  2\nY: -1 → 10","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["function"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 MIN = vec2(-2,  -1);\nconst vec2 MAX = vec2( 2,  10);\n\nconst vec3 red = vec3(1, 0, 0);\nconst vec3 green = vec3(0, 0.8, 0);\nconst vec3 blue = vec3(0.1, 0.1, 1);\nconst vec3 white = vec3(1);\n\n#define plot(f, c) if (abs((f)-uv.y) < fw.y) col += (c); \n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = MIN + (MAX-MIN) * U / R;\n    vec2 fw = fwidth(uv);\n    \n    vec3 col = vec3(0);\n    \n    plot(smoothstep(0.2, 0.5, uv.x), red);\n    plot(2.+fract(uv.x), green);\n    plot(4.+step(0.5, uv.x), blue);\n    plot(6.+clamp(uv.x, 0.2, 0.8), red+green);\n    plot(8.+mix(0.2, 0.8, uv.x), red+blue);\n    \n    if (col == vec3(0)) {\n        // main axis\n        // if (abs(uv.x) < fw.x || abs(uv.y) < fw.y ) {\n        if (any(lessThan(abs(uv), fw))) {\n            col = white;\n        // unit axis\n        // } else if (   abs(fract(uv.x+0.5*fw.x)) < fw.x \n        //            || abs(fract(uv.y+0.5*fw.y)) < fw.y ) {\n        // } else if (any(lessThan(abs(fract(uv+0.5*fw)), fw))) {\n        } else if (any(lessThan(abs(fract(uv+0.5)-0.5), fw))) {\n            col = white / 2.0;\n        }\n    }\n    \n    O = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}