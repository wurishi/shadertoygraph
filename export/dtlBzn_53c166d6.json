{"ver":"0.1","info":{"id":"dtlBzn","date":"1692552207","viewed":48,"name":"Mandelbrot exponential map artif","username":"A_KouZ1","description":"demosntrates the artifacts when you render mandelbrot out of the resulting exponential map","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrotmercator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define maxIt 240\n#define cres 128.\n#define rres 16.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 fsize   = iResolution.xy;\n    vec2 scaled  = fragCoord;\n    scaled.x = ( scaled.x - fsize.x*(3./4.) / 2.0 ) * fsize.x;\n    scaled.y = ( scaled.y - fsize.y / 2.0 ) * fsize.x;\n    float pi = 3.14159265359;\n    float fx = fragCoord.x/fsize.x;\n    float mg = pow(2.,fragCoord.y/fsize.y*16.+8.);\n    float an = (fx-3./4.)*8.*pi;\n    float  x = fx<3./4.?scaled.x:-mg*cos(an);\n    float  y = fx<3./4.?scaled.y: mg*sin(an);\n    mg = log2(x*x+y*y)/2.;\n    mg = round(mg*rres)/rres;\n    mg = pow(2.,mg);\n    an = atan(y/x)+(x<0.?0.:pi);\n    an = round(an*cres/pi/2.)/cres*pi*2.;\n    x =-mg*cos(an);\n    y = mg*sin(an);\n    float  t = iTime;\n    float ox = -1.7686343663753872;\n    float oy =  0.0021018480275678;\n    float zm = pow(2.,-mod(t,25.)/25.*24.)*4e-5;\n    float cx = x*zm + ox;\n    float cy = y*zm + oy;\n    float zx = 0.;\n    float zy = 0.;\n    float zzx, zzy, zzl;\n    float a,b,c,u,R,G,B;\n\n    for(int it = 0; it < maxIt; it++){\n      zzx = zx * zx;\n      zzy = zy * zy;\n      if ( zzx + zzy > 4. && it > 1){\n        a = log(zzl    );\n        b = log(4.     );\n        c = log(zzx+zzy);\n        u = sqrt(float(it) + (b-a)/(c-a) + 1.) * 1. + t;\n        float l =abs(sin((u/4.       )*pi*2.)           )*255.       ;\n        float s =   (sin((u          )*pi*2.)+        1.)*0.5        ;\n        R = (max(min(sin((u/16.      )*pi*2.)+0.5,1.),0.)*s+(1.-s))*l;\n        G = (max(min(sin((u/16.+1./3.)*pi*2.)+0.5,1.),0.)*s+(1.-s))*l;\n        B = (max(min(sin((u/16.+2./3.)*pi*2.)+0.5,1.),0.)*s+(1.-s))*l;\n        fragColor = vec4(R/255.,G/255.,B/255., 255);\n        return;\n      }\n      zzl = zzx + zzy;\n      zy = 2. * zx * zy + cy;\n      zx = zzx - zzy + cx;\n    }\n    fragColor = vec4(0,0,0,1.0);\n}","name":"Image","description":"","type":"image"}]}