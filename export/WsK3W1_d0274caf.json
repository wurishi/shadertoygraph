{"ver":"0.1","info":{"id":"WsK3W1","date":"1571671180","viewed":322,"name":"Jazzy Partitions","username":"104","description":"90's inspired?","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PARTITIONS = 9.;\nconst float SHADETHRESH = .9;\n\nvec3 dtoa(float d, vec3 amount){\n    return vec3(1. / clamp(d*amount, vec3(1), amount));\n}\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\n#define nsin(x) (sin(x)*.5+.5)\n#define q(x,p) (floor((x)/(p))*(p))\n\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    vec2 R = iResolution.xy;\n    uv.x *= R.x / R.y;\n    uv *= 2.;\n\n    vec2 cellUL = vec2(-.5);\n    vec2 cellBR = vec2(.5);\n    float seed = 1e3;\n    o = vec4(0);\n    vec3 lineColor;\n    vec3 a, a2;\n    \n    for(float i = 0.; i < PARTITIONS; ++ i) {\n        vec4 h = hash42(1e3*cellUL+seed); // xy = pos to divide between cellUL / cellBR.\n        vec4 h2 = hash42(1e2*cellUL+seed);\n        h.xy = mix(cellUL, cellBR, h.xy);\n        seed = h2.z+i;\n        vec2 uv2 = uv;\n        uv2 += q(sin(iTime*(h.z-.5)+(h.w*6.28))*.5, h2.w+.01);\n        uv2.x += uv2.y * (h2.x-.5);\n      \tuv2.y += uv2.x * (h2.y-.5);\n        float dl = min(length(uv2.x - h.x), length(uv2.y - h.y));\n        if (h2.x > SHADETHRESH) {\n            o.rgb = mix(h2.ywx, lineColor, a2 * nsin(150.*(uv.x+uv.y)));\n        }\n        dl = fract(dl);// cheap way to add more angles.\n        a = dtoa(dl, vec3(800));\n        a2 = dtoa(dl-.05, vec3(40));\n        lineColor = hash42(h2.xz*1e3).rgb;\n        o.rgb = max(o.rgb, lineColor * a);\n        \n        if (uv2.x < h.x) {\n            if (uv2.y < h.y) {\n                cellBR = h.xy;\n            } else {\n              \tcellUL.y = h.y;\n              \tcellBR.x = h.x;\n            }\n        } else {\n            if (uv2.y > h.y) {\n                cellUL = h.xy;\n            } else {\n                cellUL.x = h.x;\n                cellBR.y = h.y;\n            }\n\t    }\n        uv *= 1.05;\n    }\n    \n    vec2 N = fragCoord / iResolution.xy-.5;\n    o = clamp(o,0.,1.);\n    o = pow(o,o-o+.8);\n    o.a = 1.;\n}\n\n","name":"Image","description":"","type":"image"}]}