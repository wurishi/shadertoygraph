{"ver":"0.1","info":{"id":"slGfWD","date":"1664501271","viewed":251,"name":"Infinite Maze Zoom","username":"BEN1JEN","description":"Pretty simple infinite maze zoom tunnel.","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["tunnel","zoom","infinite","maze"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535897932;\n\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 tunnel(vec2 uv) {\n    vec2 tunnel = vec2(atan(uv.y/uv.x)/PI, 1.0/length(uv)+iTime/2.0);\n    if (uv.x > 0.0) {\n        tunnel.x += 0.5;\n    }\n    tunnel *= 10.0;\n    tunnel = vec2(tunnel.x + tunnel.y, tunnel.x - tunnel.y);\n\n    bool flip = rand(floor(tunnel)/10.0) < 0.5;\n    return abs(mod(tunnel.x, 1.0)-mod(flip ? 1.0-tunnel.y : tunnel.y, 1.0)) < 0.1 ? vec4(0.3, 0.9, 1.0, 1.0) : vec4(0.05, 0.05, 0.2, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec4 col = vec4(0.0, 0.0, 0.0, 0.0);\n    float total = 0.0;\n    for (float x = -1.0; x < 1.0; x += 0.1) {\n        for (float y = -1.0; x < 1.0; x += 0.1) {\n            col += tunnel((fragCoord+vec2(x, y)-iResolution.xy/2.0)/iResolution.yy*2.0);\n            total += 1.0;\n        }\n    }\n    col /= total;\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}