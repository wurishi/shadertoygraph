{"ver":"0.1","info":{"id":"Xf2fzy","date":"1725135605","viewed":16,"name":"Hexturing","username":"slembcke","description":"Hexagonal texture sampling. Not sure what's up with the noise on the diagonals. Might go away with real nearest neighbor texture sampling? I forget off the top of my head how to make it tileable. Need to stagger and pick proper ratios IIRC?","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sampling","hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/64.0;\n    // skew/scale the coordinates\n    uv = mat2x2(1.6, 0.0, 1.0, 2.0)*uv;\n    \n    // integer and fraction texel coords\n    vec2 iuv = floor(uv);\n    vec2 fuv = fract(uv);\n    \n    // start with integer coords\n    vec2 huv = iuv;\n    // rescale x to be 3 tiles wide, stagger so the grid shifts back each tile up\n    huv.x = floor((uv.x + iuv.y)/3.0);\n    // split by the diagonal every 1.5 tiles and shift up to the next row to make it hex shaped\n    huv.y -= step(fuv.y + 1.0, fuv.x + mod(iuv.x + iuv.y, 3.0));\n    \n    float texSize = 1024.0;\n    fragColor = texture(iChannel0, (huv + 0.5)/texSize);\n//    fragColor = vec4(mod(huv, 2.0), 0, 1);\n}","name":"Image","description":"","type":"image"}]}