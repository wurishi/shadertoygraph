{"ver":"0.1","info":{"id":"NsKfRD","date":"1669927798","viewed":90,"name":"repeating rectangles soft","username":"sam_hains","description":"squares in grid","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rectanglesingrid"],"hasliked":0,"parentid":"stsBD2","parentname":"row of repeating rectangles"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 smoothStep2(float sm, vec2 st) {\n    return vec2(smoothstep(0.0, sm, st.x), smoothstep(0.0, sm, st.y));\n}\n\nfloat rectangleRowSoft(vec2 vUv, float nRows, float select, float sm) {\n    vec2 st = vUv;\n\n    float rowFraction = select/nRows;\n    float rowUnit = 1.0/nRows;\n    st.xy*=nRows;\n    st = fract(st);\n\n\n\n    vec2 bl = smoothStep2(sm, st);\n    vec2 tr = smoothStep2(sm, 1.0-st);\n    \n\n    float color = (bl.x * bl.y * tr.x * tr.y);\n    float bottom = step((nRows-select)/nRows,vUv.y); \n    float top = step(vUv.y, (1.0-rowFraction)+rowUnit);\n    return color*bottom*top;\n    \n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 vUv =fragCoord/iResolution.xy;\n    \n    float result = rectangleRowSoft(vUv, 8.0, 2.0, .15);\n    \n    float result2 = rectangleRowSoft(vUv, 8.0, 6.0, .1);\n   \n  \n    fragColor = vec4(vec3(result+result2),1.0);\n}","name":"Image","description":"","type":"image"}]}