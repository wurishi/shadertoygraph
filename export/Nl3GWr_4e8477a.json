{"ver":"0.1","info":{"id":"Nl3GWr","date":"1635949233","viewed":119,"name":"Jonix metaballs","username":"Hultsborn10","description":"Metaballs inspired by CodingTrain","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["metaballsjonix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N(float t)\n{\n    //Psuedo random number between 0 and 1\n    //Enlarge t so that small changes in t will end up at \n    //very different points on the sine curve\n    //Enlarge the sine value (-1 to 1) and then return \n    //only the fraction part.\n    return fract(sin(t*3456.0)*6547.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int BALLS = 5;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 colors[5];\n    float cS = 0.4;\n    colors[0] = vec3(1.0,cS,cS);\n    colors[1] = vec3(1.0,1.0,cS);\n    colors[2] = vec3(cS,1.0,cS);\n    colors[3] = vec3(cS,cS,1.0);\n    colors[4] = vec3(1.0,cS,1.0);\n    \n    float sum = 0.0;\n    vec3 col = vec3(0.0);\n    for (int i = 0; i < BALLS; i++){\n        float t = float(i);\n        float ranA = N(t*50.0);\n        float ranB = N(t*50.0+500.0);\n        vec2 ball = 0.5*vec2(sin(iTime*ranA), cos(iTime*ranB));    \n        float dist = distance(uv,ball)*15.0;\n        sum = 1.0 / dist;\n        if (sum > 1.0) sum = 1.0;\n        \n        col += colors[i%5]*sum;\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}