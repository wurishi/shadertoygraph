{"ver":"0.1","info":{"id":"MltBWj","date":"1541680312","viewed":124,"name":"Mandelbrot Set.","username":"CaptainPrice","description":"My first shader","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["keyboard","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 mandelbrot(vec2 uv)\n{\n    float ITERS = 250.0, I = 0.0;\n    float R = 10.0;\n    vec2 buf = uv, cons = uv;\n    uv.x = buf.x * buf.x - buf.y * buf.y + cons.x;\n    uv.y = 2.0 * buf.x * buf.y + cons.y;\n    for (int i = 0; i < 255; i++)\n    {\n        if (uv.x * uv.x + uv.y * uv.y > R)\n            break;\n        I += 1.0;\n        buf = uv;\n        uv.x = buf.x * buf.x - buf.y * buf.y + cons.x;\n        uv.y = 2.0 * buf.x * buf.y + (cons.y);\n    }\n    \n    return vec3(I / ITERS,I / ITERS, I / ITERS);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    uv = 2.0 * (uv - 0.5);\n    vec3 xyz;\n   \t if (iFrame > 0) {\n    \txyz = texture(iChannel0, vec2(0.0, 0.0)).xyz;\n        uv = xyz.z * uv; \n\t\tuv = uv - xyz.xy; \n    }\n\t\n    vec3 im = mandelbrot(uv);\n    fragColor = vec4(im, 0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float KEY_W = 87.5 / 256.0;\nconst float KEY_A = 65.5 / 256.0;\nconst float KEY_S = 83.5 / 256.0;\nconst float KEY_D = 68.5 / 256.0;\nconst float KEY_E = 69.5 / 256.0;\nconst float KEY_Q = 81.5 / 256.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord / iResolution.xy;\n  \tfloat z = 2.0;\n    vec3 xyz;\n   pos = z * pos;\n    if (iFrame > 0) {\n  \t\txyz = texture(iChannel1, vec2(0.0, 0.0)).xyz;\n        pos = xyz.xy;\n        z = xyz.z;\n    }\n    if (texture(iChannel0, vec2(KEY_Q, 0.25)).x > 0.5)\n        z = z + 0.05 * z;\n    if (texture(iChannel0, vec2(KEY_E, 0.25)).x > 0.5)\n    \tz = z - 0.05 * z;\n     \n    if (texture(iChannel0, vec2(KEY_A, 0.25)).x > 0.5)\n        pos.x = pos.x + 0.05 * z;\n     if (texture(iChannel0, vec2(KEY_W, 0.25)).x > 0.5)\n        pos.y = pos.y - 0.05 * z;\n\tif (texture(iChannel0, vec2(KEY_S, 0.25)).x > 0.5)\n\t\tpos.y = pos.y + 0.05 * z;\n\tif (texture(iChannel0, vec2(KEY_D, 0.25)).x > 0.5)\n\t\tpos.x = pos.x - 0.05 * z;\n    \n    fragColor = vec4(pos, z, 0.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}