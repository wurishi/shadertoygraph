{"ver":"0.1","info":{"id":"3ldfRH","date":"1612256011","viewed":342,"name":"The Fall of London 6","username":"msamyel","description":"An example of screen transition","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["distortion","falling","screentransition"],"hasliked":0,"parentid":"3ldfz8","parentname":"The Fall of London 5"},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n//uncomment this to remove red taint(used to debug id)\n//#define TINT_ID\n//uncomment this to remove green taint(used to debug time)\n//#define TINT_TIME\n//vertical constants\nconst float verticalTileNumber = 5.;\nconst float tileHeight = 1./verticalTileNumber;\n//horizontal constants\nconst float horizontalTileNumber = 5.;\nconst float tileWidth = 1./horizontalTileNumber;\nconst float horizontalTimeOffset = .25;\n//falling speed constants\nconst float fallingSpeed = 1./2.;\nconst float accelerationRate = 1.1;\nfloat Noise(float i)\n{\n    return sin(i*127.);\n}\n//imagine each line on screen(screenY) scanning upwards\n    //across imaginary film, where each film square contains one row to draw on screen\n// --------\n// |      |\n// |      |\n// |row2  |\n// --------\n// --------\n// |      |\n// |      |\n// |row1  |\n// --------\n// --------\n// |______|____y scans up^\n// |      |\n// |screen|\n// --------\n    \nvec2 GetTexPosFromFilmPos(float filmY) \n{\n    float filmSquare = floor(filmY);\n    float squareY = fract(filmY);\n    float lowerBound = 0.;\n    float upperBound = lowerBound+tileHeight;\n    float relativeY = squareY-(tileHeight*filmSquare);\n    if ((relativeY<lowerBound) || (relativeY>= upperBound))\n    {\n        //draw background\n        return vec2(-1.);\n    }\n    return vec2(filmSquare,relativeY);\n}\nvec3 GetYInfo(vec2 screen) \n{\n    float screenTileId = floor(screen.y*verticalTileNumber);\n    float horizontalId = floor((screen.x)*horizontalTileNumber);\n    //randomize delay of horizontal pieces\n    float time = t-Noise(horizontalId)*horizontalTimeOffset;\n    float maxTime = screenTileId+1.;\n    float speed = step(0.,time)*fallingSpeed*pow(time,accelerationRate);\n    float filmTime = min(time*speed,maxTime); \n    //-1. symbolizes the height of the screen at start (blank screen)\n    float filmY = -1.+screen.y+filmTime;\n    vec2 texPos = GetTexPosFromFilmPos(filmY);\n    return vec3(texPos, filmTime/maxTime);\n}\nvec3 DistortChannel(vec2 uv) \n{\n    //background\n    vec3 col = texture(iChannel1,uv).rgb;\n    \n    vec3 drawPos = GetYInfo(uv);\n    if (drawPos.x == -1.) {\n        return col;\n    }\n    col = texture(iChannel0,vec2(uv.x,drawPos.x*tileHeight+drawPos.y)).rgb;\n    //for debug:\n    #ifdef TINT_ID\n        col += vec3(1./tileNumber,0.,0.)*drawPos.x;\n    #endif\n    #ifdef TINT_TIME\n        col += vec3(0.,.5,0.)*drawPos.z;\n    #endif\n    //end of debug code\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Output to screen\n    fragColor = vec4(DistortChannel(uv),1.);\n}","name":"Image","description":"","type":"image"}]}