{"ver":"0.1","info":{"id":"dscSzN","date":"1679458150","viewed":66,"name":"Seven Segment Digits","username":"jiangyiheng","description":"A simple sigment font","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["segmentfont"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float segment(vec2 uv, bool on) {\n    uv = abs(uv*2.0-1.0) * 1.05;\n    return smoothstep(0.1, -0.1, uv.x-2.0+2.0*uv.y) * smoothstep(-0.1, 0.1, 1.0 - uv.x) * float(on);\n}\n\nfloat segmentDigit(vec2 uv, int digit) {\n    return segment(uv.xy * vec2(5.0, 2.5) - vec2(0.0, 0.25), digit==2||digit==6||digit==8||digit==0)\n    + segment(uv.xy * vec2(5.0, 2.5) - vec2(0.0, 1.25), digit!=1&&digit!=2&&digit!=3&&digit!=7)\n    + segment(uv.xy * vec2(5.0, 2.5) - vec2(4.0, 0.25), digit!=2)\n    + segment(uv.xy * vec2(5.0, 2.5) - vec2(4.0, 1.25), digit!=5&&digit!=6)\n    + segment(uv.yx * vec2(8.0, 1.2) - vec2(0.3, 0.1), digit!=1&&digit!=4&&digit!=7)\n    + segment(uv.yx * vec2(8.0, 1.2) - vec2(3.5, 0.1), digit!=1&&digit!=7&&digit!=0)\n    + segment(uv.yx * vec2(8.0, 1.2) - vec2(6.7, 0.1), digit!=1&&digit!=4);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fract(fragCoord / vec2(32.0, 64.0));\n\n    // Time varying pixel color\n    vec3 col = vec3(segmentDigit(uv, int(iTime * 3.0) % 10), 0.0,0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}