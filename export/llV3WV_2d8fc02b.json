{"ver":"0.1","info":{"id":"llV3WV","date":"1476949084","viewed":161,"name":"70s Computer","username":"rush_2112","description":"70s Computer","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["tagthis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rnd(vec2 inval){\n    return fract(sin(dot(inval.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 reso = iResolution.xy;\n    vec2 pix = fragCoord;    \t\t\n\t\n\tvec2 uv = pix / reso;\n\tvec2 grids, spacing, grid_num;\n\tvec2 cell_min, cell_max, cell_uv;\n\tfloat d, light_level;\n\tfloat on_off;\t\n\tfloat brightness;\n\tfloat cycle, cycle_time, cycle_shift;\n\tfloat edge_grid, is_edge;\n\tvec4 bg;\n\tfloat algo;\n\tfloat c_sva = 50.0;\n\tfloat c_svb = 50.0;\n\tfloat c_svc = 90.0;\n\tfloat c_svd = 50.0;\n\tfloat c_sve = 50.0;\n\tfloat c_x1 = float(iFrame);\n\t\n\t// Cells\n\tgrids.x = floor(mix(160.0, 40.0, c_svc / 100.0));\n\tgrids.y = grids.x * 0.575;\n\tspacing = reso / grids;\n\tgrid_num = floor(pix / spacing);\n\tcell_min = grid_num * spacing;\n\tcell_max = cell_min + spacing;\n\tcell_uv = (pix - cell_min) / (cell_max - cell_min);\n\tcell_uv = (2.0 * cell_uv) - 1.0;\t\n\n\t// ON/OFF cycles\n\tcycle_time = mix(180.0, 10.0, c_sva / 100.0);\n\tcycle_shift = cycle_time * rnd(grid_num * 0.0134);\n\tcycle = floor((c_x1 + cycle_shift)/cycle_time) + 1.0;\n\tfloat on_thresh = mix(0.1, 0.9, c_sve / 100.0);\n\ton_off = float(rnd(grid_num * cycle * 0.0053) < on_thresh);\n\t\n\t// Edges\n\tedge_grid = 2.0 + floor(c_svb / 10.);\n\tis_edge = float(grid_num.x <  edge_grid ||\n\t                grid_num.x >= grids.x - edge_grid);\n\t\n\t\t\n\t// Light level\n\td = distance(cell_uv, vec2(0.0));\n\tfloat on_level = 1.0;\n\tfloat off_level = mix(0.0, 0.5, c_svd / 100.0);\n\tbrightness = (on_level * on_off) + ( off_level * (1.0 - on_off)); // One or the other only\n\tlight_level = (brightness*2.5) * (1.0-sqrt(d));\t\n\tlight_level = clamp(light_level, 0.0, 1.0);\n\t\n\t// Algo final\n\talgo = light_level * is_edge;\n\t\n\tbg = vec4(0.0);\n\t\n\tfragColor = (algo * vec4(1.0, 1.0, 0.0, 1.0)) + ((1.0 - algo) * bg);\t\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}