{"ver":"0.1","info":{"id":"DlscWs","date":"1691342720","viewed":134,"name":"2d Menger Sponge","username":"Chick_Chicky","description":"A small menger sponge shader that uses more iterations as time passes","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["mengerfractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool sponge(in vec2 coord, float size, int depth) {\n    for (float i = 0.f; i < float(depth); i++) {\n        if (!(int(coord.x/size*pow(3.f,i))%3!=1||int(coord.y/size*pow(3.f,i))%3!=1)) return false;\n    }\n    return true;\n}\n\nvoid mainImage( out vec4 fragcolor, in vec2 fragcoord ) {\n    vec2 coord = vec2(fragcoord.x,iResolution.y-fragcoord.y);\n    vec2 ncoord = coord/iResolution.xy;\n    float size = min(iResolution.x,iResolution.y);\n    if (coord.x<size&&coord.y<size) {\n        if (sponge(coord,size,min(MAX_ITER,int(iTime*TIME_SCALE))))   \n            fragcolor = COLOR_A;\n        else\n            fragcolor = COLOR_B;\n    } else\n        fragcolor = vec4(0.f,0.f,0.f,1.f);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define COLOR_A vec4(1.f,1.f,0.f,1.f)\n#define COLOR_B vec4(1.f,0.f,0.f,1.f)\n#define TIME_SCALE 1.f\n#define MAX_ITER 60","name":"Common","description":"","type":"common"}]}