{"ver":"0.1","info":{"id":"DlsXzn","date":"1674206140","viewed":290,"name":"Progress bar meme","username":"mrange","description":"CC0: Progress bar meme\nThere's kind of a C# meme going on twitter about this tweet:\nhttps://twitter.com/mariusbancila/status/1615710620204077056?s=20&t=Miioq51z6b8eSJ_6Gu4ubg\nThe community is divided. Does the code suck or is it good?\n","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["silly","twitter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// CC0: Progress bar meme\n//  There's kind of a C# meme going on twitter about this tweet:\n//  https://twitter.com/mariusbancila/status/1615710620204077056?s=20&t=Miioq51z6b8eSJ_6Gu4ubg\n//  The community is divided. Does the code suck or is it good?\n//  So I implemented the progress bar in GLSL for fun.\n//  I am kind of hoping Fabrice shows up and gives it a minification treatment so all\n//  readability disappears :)\n\n#define TIME        iTime\n#define RESOLUTION  iResolution\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  const float sz  = 0.25;\n  const float hsz = sz*0.5;\n\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  vec2 pp = p;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n\n  float progress = smoothstep(-0.9, 0.9, sin(TIME));\n  \n  float aa = 2.0/RESOLUTION.y;\n   \n  vec2 p0 = p;\n  p0.x += sz*4.5;\n\n  float n0 = floor((p0.x + hsz)/sz);\n  p0.x = mod(p0.x + hsz, sz) - hsz;\n  \n  vec3 col = vec3(1.0);\n  if (n0 >= 0.0 && n0 < 10.0) {\n    float d0 = length(p0)-sz*0.4;\n    vec3 fcol = n0 >= 10.0*progress ? vec3(0.9) : vec3(0.125, 0.33, 0.9);\n    col = mix(col, vec3(0.0), smoothstep(aa, -aa, d0));\n    col = mix(col, fcol, smoothstep(aa, -aa, d0+0.02*sz));\n  }\n  col *= smoothstep(1.75, 0., length(pp));\n  col = sqrt(col);\n  \n  fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}