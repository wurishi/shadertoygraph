{"ver":"0.1","info":{"id":"XdSBzm","date":"1499864009","viewed":124,"name":"shader challenge","username":"bezo97","description":"yes","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["challenge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float agak = 7.0f;\nfloat radius;//iResolution.y/2.2f;\n\n#define CS(a) vec2(cos(a),sin(a))\n#define cross(a,b) (a.x*b.y-b.x*a.y)\n//thanks @FabriceNeyret2 for the suggestion^\n\nvec3 backColor = vec3(0.05,0.05,0.15);\nvec3 insideColor = vec3(1.0,0.7,0.5);\n\nfloat intersect(vec2 csucs1, vec2 csucs2, vec2 p)\n{\n    vec2 mid=-(csucs1+csucs2)*100.0;//far away\n    \n    vec2 s1 = csucs2-csucs1;\n    vec2 s2 = p-mid;\n    vec2 s3 = csucs1-mid;\n    \n    float s = cross(s1,s3)/cross(s1,s2);\n    float t = cross(s2,s3)/cross(s1,s2);\n    \n    if (s >= 0.0f && s <= 1.0f && t >= -0.1f && t <= 1.1f)\n    {\n        // Collision detected\n        vec2 inters = csucs1+t*s1;\n       \tfloat len = length(inters-p);\n        return ((len<10.0f&&len>7.0f)||(len<3.0f&&len>0.0f))?-1.0:(len>=3.0&&len<7.0)?-2.0:len;\n        //-1:white, -2:black\n    }\n\n    return 0.0f; // No collision\n}\n\nvec3 f(vec2 pos, float t)\n{\n    vec2 mid = iResolution.xy/2.0f;\n    \n    float len = length(pos-mid);\n    if(len>radius+25.0f)\n\t\treturn backColor;\n    if(len>radius+20.0)\n\t\treturn vec3(1.0f);\n    \n    int intersCnt=0;\n    bool white=false;\n    float ramp = 0.0f;\n    for(float ag=0.0f;ag<agak;ag+=1.0f)\n    {\n        float agAngle=3.141592f/2.0f+t - ag*2.0f*3.141592f/agak;\n        vec2 csucs=radius*CS(agAngle);\n        vec2 csucsNext=radius*CS(agAngle-3.0f * 2.0f*3.141592f/agak);\n        \n        float result = intersect(csucs, csucsNext, pos-mid);\n        ramp=max(ramp,result);\n        if(result == -2.0f)\n            return vec3(0.0f);\n        if(result == -1.0f)\n        {\n            if(len > radius/2.2)\n            \twhite=true;\n            else\n                return vec3(1.0f);\n        }\n        else if(result != 0.0f)\n            intersCnt++;\n    }\n    \n    float darken = ramp*ramp/(radius*radius*0.8f);\n  \treturn white?vec3(1.0f-darken):insideColor*(0.75f-float(intersCnt)/4.0f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    radius=iResolution.y/2.5f;\n    \n    vec3 colorsum = vec3(0.0f);//aa\n    for(float aax = -1.0f; aax<1.0f;aax+=0.2f)\n    {\n        for(float aay = -1.0f; aay<1.0f;aay+=0.2f)\n    \t{\n            float aar = sqrt(aax*aax+aay*aay);\n        \tcolorsum += f(vec2(fragCoord.x+aax,fragCoord.y+aay), (-iTime)/10.0)*(1.0f-aar);\n    \t}\n    }\n    fragColor = vec4(colorsum/20.0f,1.0f);\n        \n    \n}","name":"Image","description":"","type":"image"}]}