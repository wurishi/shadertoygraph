{"ver":"0.1","info":{"id":"4sycRK","date":"1522528751","viewed":573,"name":"Lights and shadows","username":"bfazekas","description":"Playing around with lights using the shader.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["light","textrue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.0*fragCoord - iResolution.xy) / iResolution.x;\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec4 tex = texture(iChannel0, uv);\n    \n    vec3 light_pos = vec3(2.0 * iMouse.x / iResolution.x - 1.0,\n                          2.0 * iMouse.y / iResolution.y - 1.0,\n                          0.002);\n    \n    float dist = distance(uv.xy, light_pos.xy);\n \n    vec2 d = fragCoord - iMouse.xy;\n    vec2 s = .15 * iResolution.xy;\n    float r = dot(d, d)/dot(s,s);\n    \n    /* Phong\n    vec4 norm = normalize(tex);\n    vec3 NormalVector = vec3(norm.x, norm.y, norm.z);\n    \n    vec4 white = vec4(1.);\n\tvec3 LightVector = normalize(vec3(light_pos.x - fragCoord.x, light_pos.y - fragCoord.y, 60.0) + 0.5);\n    \n    float diffuse = max( dot(NormalVector, LightVector), 0.0);\n    \n    float distanceFactor = (1. - dist / (light_pos.z * uv.x));\n\t*/    \n\n    fragColor =  tex * (1.5 - r);   \n\n    \n}","name":"Image","description":"","type":"image"}]}