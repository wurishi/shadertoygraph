{"ver":"0.1","info":{"id":"7tdyWN","date":"1659885942","viewed":95,"name":"autogen 54","username":"asynth","description":"Generated by a program written in Rust.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = reflect_0(uv);\n\tvec3 a1 = vec3(0.3251, 0.0063, 0.9956);\n\treturn pthresh(0.3813, a1, vec3(atan(uv.y, uv.x)), vec3(uv.x));\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn node_1(uv);\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = rect_to_polar(uv);\n\treturn vec3(uv.x);\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.3240, -0.1895), pthresh(0.5270, vec3(uv.y), node_2(uv), vec3(atan(uv.y, uv.x))).xy);\n\tvec3 b1 = noise(uv, vec2(0.27816713, 1.4706277), 0.734838);\n\treturn (vec3(length(uv)) * mix((vec3(uv.x) * vec3(uv.y)), uni(b1), node_3(uv)));\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = rect_to_polar(uv);\n\tvec3 a1 = vec3(0.0320, 0.6278, 0.0329);\n\treturn a1;\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.0519, -0.5133), vec3(uv.y).xy);\n\treturn bi(vec3(atan(uv.y, uv.x)));\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = rect_to_polar(uv);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.2056, -0.1033), node_4(uv).xy);\n\tvec3 b1 = noise(uv, vec2(0.21251905, 0.40654624), 0.410170);\n\tvec3 b2 = tri(vec3(atan(uv.y, uv.x))*5.0101 + 0.5057 + iTime*0.2767);\n\tvec3 b3 = well(quant(vec3(uv.x), b2)*5.6164 + 0.6215 + iTime*0.2763);\n\tvec3 b4 = mix2(uv, vec3(0.4951, 0.2356, 0.3658), vec3(0.5058, 0.8689, 0.5868), vec3(0.9020, 0.7147, 0.2110), vec3(0.1708, 0.6540, 0.9581));\n\treturn quant(b1, (uni((b3 - (bi((node_5(uv) * b4)) / node_6(uv)))) / node_7(uv)));\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = repeat_4(uv, 0.5504);\n\treturn node_8(uv);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = repeat_1(uv, 0.3361);\n\tvec3 a1 = noise(uv, vec2(2.0394604, 2.0858445), 0.951443);\n\tvec3 a2 = vec3(0.3581, 0.2137, 0.4869);\n\tvec3 a3 = well((vec3(length(uv)) * vec3(uv.x))*2.8127 + 0.6919 + iTime*0.3266);\n\tvec3 a4 = well(a3*5.4592 + 0.3035 + iTime*0.2425);\n\tvec3 a5 = well(pthresh(0.5006, (min(vec3(uv.x), node_10(uv)) - vec3(length(uv))), mix(vec3(length(uv)), quant(vec3(atan(uv.y, uv.x)), vec3(atan(uv.y, uv.x))), a1), (vec3(atan(uv.y, uv.x)) - mix(a2, a4, vec3(uv.y))))*1.9862 + 0.1799 + iTime*0.2027);\n\treturn a5;\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = (mat2(-1.0304,-0.9029,0.9847,-1.1256)*(uv-vec2(0.7784,0.4108)+vec2(0.7784,0.4108)));\n\tvec3 a1 = noise(uv, vec2(0.9591921, 1.4779274), 0.686764);\n\treturn mix(mix(vec3(length(uv)), vec3(length(uv)), vec3(uv.x)), vec3(uv.x), a1);\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.8471, -0.7872), vec3(length(uv)).xy);\n\tvec3 b1 = mix2(uv, vec3(0.7694, 0.8994, 0.7836), vec3(0.0499, 0.4165, 0.4016), vec3(0.3325, 0.1575, 0.8635), vec3(0.3422, 0.9427, 0.5785));\n\treturn b1;\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = (mat2(1.2799,0.8713,-1.0494,-1.1674)*(uv-vec2(-0.8745,0.6488)+vec2(-0.8745,0.6488)));\n\treturn node_13(uv);\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = rect_to_polar(uv);\n\tvec3 a1 = vec3(0.3458, 0.4822, 0.8992);\n\treturn a1;\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = rect_to_polar(uv);\n\treturn quant(node_14(uv), node_15(uv));\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = repeat_1(uv, 0.6935);\n\treturn vec3(uv.x);\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = (mat2(-0.9700,-1.0965,-0.9139,-0.9032)*(uv-vec2(0.8907,-0.5444)+vec2(0.8907,-0.5444)));\n\treturn node_17(uv);\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = repeat_0(uv, 0.2525);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = vec3(0.1997, 0.4890, 0.3062);\n\tvec3 a2 = well((node_9(uv) / (a1 * vec3(length(uv))))*1.6468 + 0.9998 + iTime*0.2986);\n\tvec3 a3 = well((vec3(uv.x) - vec3(length(uv)))*4.5153 + 0.4202 + iTime*0.2627);\n\tvec3 a4 = mix2(uv, vec3(0.1237, 0.8312, 0.2046), vec3(0.8665, 0.6455, 0.1251), vec3(0.0471, 0.1181, 0.2856), vec3(0.8880, 0.6152, 0.3025));\n\tvec3 a5 = well(bi(node_16(uv))*1.0499 + 0.5626 + iTime*0.0788);\n\tvec3 a6 = noise(uv, vec2(0.19797073, 2.6809847), 0.304029);\n\tvec3 a7 = sin(uni(mix(node_18(uv), (vec3(uv.x) - vec3(length(uv))), node_19(uv)))*5.2825 + 0.3499 + iTime*0.1259);\n\tvec3 a8 = well(mix(abs(((a3 - node_12(uv)) - min(mix(vec3(atan(uv.y, uv.x)), a4, vec3(atan(uv.y, uv.x))), vec3(uv.y)))), a5, (((a6 * vec3(uv.x)) * vec3(length(uv))) - a7))*3.8355 + 0.5045 + iTime*0.3926);\n\tvec3 a9 = vec3(0.9213, 0.9745, 0.1167);\n\treturn pthresh(0.2395, a2, node_11(uv), bi((a8 / a9)));\n}\n\nvec3 node_21(vec2 uv) {\n\tuv = rect_to_polar(uv);\n\tvec3 a1 = well(node_20(uv)*5.1767 + 0.0987 + iTime*0.0793);\n\treturn a1;\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = repeat_3(uv, 0.4590);\n\treturn uni(node_21(uv));\n}\n\nvec3 node_23(vec2 uv) {\n\tuv = repeat_5(uv, 0.3449);\n\treturn vec3(uv.y);\n}\n\nvec3 node_24(vec2 uv) {\n\tuv = repeat_4(uv, 0.2424);\n\tvec3 a1 = mix2(uv, vec3(0.3788, 0.5722, 0.0330), vec3(0.2761, 0.2682, 0.2016), vec3(0.3013, 0.5736, 0.2604), vec3(0.5512, 0.3597, 0.0025));\n\treturn a1;\n}\n\nvec3 node_25(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.2923, -0.8460), vec3(length(uv)).xy);\n\treturn (vec3(uv.y) * node_24(uv));\n}\n\nvec3 node_26(vec2 uv) {\n\tuv = rect_to_polar(uv);\n\tvec3 a1 = noise(uv, vec2(0.21127945, 3.061956), 0.634438);\n\tvec3 a2 = tri(mod(a1, vec3(atan(uv.y, uv.x)))*4.2646 + 0.7338 + iTime*0.3672);\n\tvec3 a3 = mix2(uv, vec3(0.6935, 0.4002, 0.2638), vec3(0.4793, 0.6005, 0.1340), vec3(0.7170, 0.6757, 0.7831), vec3(0.0365, 0.6626, 0.2742));\n\tvec3 a4 = well(quant(vec3(uv.x), a3)*1.7460 + 0.2526 + iTime*0.1573);\n\tvec3 a5 = sin(a4*4.2079 + 0.7963 + iTime*0.2027);\n\treturn quant(node_23(uv), mix((-a2), a5, node_25(uv)));\n}\n\nvec3 node_27(vec2 uv) {\n\tuv = reflect_4(uv);\n\treturn vec3(length(uv));\n}\n\nvec3 node_28(vec2 uv) {\n\tuv = rect_to_polar(uv);\n\treturn node_27(uv);\n}\n\nvec3 node_29(vec2 uv) {\n\tuv = (mat2(1.3686,0.9325,0.9467,-1.1186)*(uv-vec2(-0.2710,-0.4948)+vec2(-0.2710,-0.4948)));\n\treturn node_28(uv);\n}\n\nvec3 node_30(vec2 uv) {\n\tuv = (mat2(-1.2267,-1.2743,-1.4033,-1.3638)*(uv-vec2(0.8412,0.4966)+vec2(0.8412,0.4966)));\n\treturn node_29(uv);\n}\n\nvec3 node_31(vec2 uv) {\n\tuv = (mat2(1.1625,0.9819,-0.7763,-0.8255)*(uv-vec2(0.3584,0.2381)+vec2(0.3584,0.2381)));\n\treturn vec3(uv.y);\n}\n\nvec3 node_32(vec2 uv) {\n\tuv = repeat_4(uv, 0.3074);\n\tvec3 a1 = noise(uv, vec2(3.2725112, 2.732452), 0.511067);\n\treturn a1;\n}\n\nvec3 node_33(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.9744, 0.3439, 0.8232), vec3(0.0335, 0.4395, 0.7391), vec3(0.5396, 0.8359, 0.4674), vec3(0.5303, 0.6030, 0.6507));\n\tuv = xywarp(uv, vec2(0.9407, -0.0808), pthresh(0.0224, vec3(uv.x), abs(min(vec3(uv.y), a1)), node_32(uv)).xy);\n\tvec3 b1 = vec3(0.2286, 0.0390, 0.1048);\n\tvec3 b2 = tri(b1*3.8861 + 0.6812 + iTime*0.1868);\n\treturn (-b2);\n}\n\nvec3 node_34(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = vec3(0.8854, 0.4641, 0.8814);\n\tvec3 a2 = tri((min(bi(bi(vec3(length(uv)))), (a1 * (abs((-bi(node_26(uv)))) / node_30(uv)))) - pthresh(0.9878, vec3(atan(uv.y, uv.x)), node_31(uv), vec3(uv.y)))*3.3644 + 0.6349 + iTime*0.2728);\n\tvec3 a3 = tri(vec3(uv.y)*1.5645 + 0.6323 + iTime*0.3009);\n\tvec3 a4 = vec3(0.5655, 0.9932, 0.3486);\n\treturn (-(node_22(uv) * (bi(a2) * mod(quant(vec3(atan(uv.y, uv.x)), bi((node_33(uv) / vec3(length(uv))))), mix(vec3(uv.x), a3, a4)))));\n}\n\nvec3 top(vec2 uv) {\n\treturn node_34(uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}