{"ver":"0.1","info":{"id":"NsSBRw","date":"1645795542","viewed":177,"name":"Fast CRT v3","username":"samsamsam","description":"A faster version of the CRT shader used in BREAKER\n\nNow with less trigonometry!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0, uv);\n    float lum = min((0.3 * col.x + 0.6 * col.y + 0.1 * col.z) * 1.5, 1.0);\n\n    // vignette\n    float bri = 0.9 + (1.6 * uv.x * uv.y) * (1.0 - uv.x) * (1.0 - uv.y);\n    // scanlines in darker areas\n    bri *= 0.93 + 0.07 * lum + (abs(fract(uv.y * 90.0) - 0.5) - 0.25) * 0.28 * (1.0 - lum);\n\n    // chromatic aberration \n    float shift = 1.0 / 640.0;\n    col.x = bri * texture(iChannel0, vec2(uv.x + shift, uv.y)).x;\n    col.y = bri * col.y;\n    col.z = bri * texture(iChannel0, vec2(uv.x - shift, uv.y)).z;\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}