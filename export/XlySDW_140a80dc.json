{"ver":"0.1","info":{"id":"XlySDW","date":"1484295538","viewed":142,"name":"Sea distances","username":"GinCastaway","description":"IsartDigital Sea","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sea"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool inSea(in vec2 coords, float distWave) {\n    float pi2 = 3.14 * 2.0;\n    \n    float ampli = 0.06 / distWave;\n    float ratioSpeed = 2.0;\n    float waves = 2.0 * (distWave * 0.8);\n    //float waves = 1.0/iTime; ==> Effet de noiret\n    \n    float eyeDistScreen = 1.0;\n    float eyeHeightScreen = 0.45;\n    //float heightBonus = iMouse.y / 100.0;\n    \n    float fullDist = eyeDistScreen + distWave;\n    float height = ((distWave * (eyeHeightScreen /*+ heightBonus*/)) / fullDist) /*- heightBonus*/;\n    \n    \n    float wave = ampli * cos((iTime * ratioSpeed) + coords.x * waves * pi2) + height;\n   \n    return (coords.y < wave);\n}\n\nbool inSun(in vec2 coords, float radius) {\n    vec2 center = vec2(3.0 * iResolution.x / 4.0, 3.0 * iResolution.y / 4.0);\n    \n    float radiusSun = cos(iTime) * 2.0 + (iResolution.y * radius) / 100.0;\n    float distSun = sqrt(pow(coords.x - center.x, 2.0) + pow(coords.y - center.y, 2.0));\n    \n    return distSun < radiusSun;\n}\n\n/*\nbool inBoat(in vec2 coords) {\n    \n    \n}\n*/\n\nvoid mainImage(out vec4 color, in vec2 pixCoords) {\n    pixCoords.y += iResolution.y/2.0 * cos((iTime * 0.3) * 1.0 * (2.0 * 3.14)) * 0.10;\n    //pixCoords.x += iResolution.x/4.0 * cos(iTime);\n    \n    vec2 i = vec2(cos(iTime), sin(iTime));\n    vec2 j = vec2(-sin(iTime), cos(iTime));\n        \n    //pixCoords.x = (pixCoords.x * i.x + pixCoords.y * i.y);\n    //pixCoords.y = (pixCoords.y * j.x + pixCoords.y * j.y);\n    \n    // Texture2D(iChannel0, pixCoords.xy/iResolution.xy);\n    \n\tvec2 coords = pixCoords.xy / iResolution.xy;\n    \n    float colorSea = 0.50;\n    \n    vec4 skyColor = vec4(0.9, pixCoords.y / iResolution.y, 0.0, 1.0);\n    vec4 waveColor =  vec4(0.1, 0.1, colorSea, 1.0);\n    \n    /* == Background == */\n    color = skyColor;\n    \n    /* == Sun == */\n    if ( inSun(pixCoords, 15.0) ) { color = vec4(1.0, 1.0, 0.0, 1.0); }\n    //if ( inSun(pixCoords, 15.0) ) { color = texture(iChannel0, pixCoords.xy/iResolution.xy); }\n    \n    /* == Waves == */\n    float k;\n    \n    for (float i = 1.0; i <= 20.0; ++i) {\n        k = 1.0 / i;\n        \n        if ( inSea(coords, i) ) {\n            color = ((1.0 - k) * skyColor) + (k * waveColor);\n            return;\n        }\n    }\n    \n    /* == Boat == */\n    //if ( inBoat(pixCoords) ) { color = vec4(0.0, 0.0, 0.0, 1.0); }\n}","name":"Image","description":"","type":"image"}]}