{"ver":"0.1","info":{"id":"4c2yW3","date":"1723068809","viewed":57,"name":"aug72024","username":"brendanluu","description":"for projectors","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"aug62024\" by brendanluu. https://shadertoy.com/view/4fjcWV\n// 2024-08-07 21:58:33\n\n// Fork of \"jul312024\" by brendanluu. https://shadertoy.com/view/MfSyDh\n// 2024-08-07 06:51:39\n\n\nvec3 palette(float t) {\n    vec3 a = vec3(1.000,1.000,1.000);\n    vec3 b = vec3(0.278,0.278,0.278);\n    vec3 c = vec3(0.643,0.714,0.286);\n    vec3 d = vec3(1.000,1.000,1.000);\n    \n    return a + b*cos(6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y; \n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i <9.5; i++){\n    \n        uv = fract(uv * .028979/(sin(iTime/.1))) -0.5;\n        float d = length(uv);\n        vec3 col = palette(length(uv0));\n        d = abs(d);\n        d = .08 / d;\n        finalColor += col * d;\n        \n    }\n    \n    // Add vignette effect\n    vec2 vignetteUV = fragCoord / iResolution.xy;\n    vignetteUV = (vignetteUV - 0.5) * 2.0;\n    float vignette = 0.85 - dot(vignetteUV, vignetteUV);\n    vignette = pow(vignette, 4.5);\n    \n    finalColor *= vignette;\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}