{"ver":"0.1","info":{"id":"4XVXDw","date":"1720034315","viewed":100,"name":"dripping droplets","username":"jt","description":"The sound of droplets :)\n(rewind & toggle play if no sound)","likes":8,"published":1,"flags":8,"usePreview":0,"tags":["sound","water","audio","drop","dripping","droplets","drops","drip","droplet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// See SOUND tab!\n\n// \"sound\" message from https://www.shadertoy.com/view/MtyXRW by Fabrice Neyret\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel0, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(84);C(104);C(101);C(32);C(83);C(111);C(117);C(110);C(100);C(32);C(111);C(102);C(32);C(68);C(114);C(111);C(112);C(108);C(101);C(116);C(115);// message \"Sound\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    {float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);if(c>=0.){fragColor=vec4(c);return;}}\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// https://www.shadertoy.com/view/4XVXDw dripping droplets, 2024 by jt\n\n// tags: sound, water, audio, drop, dripping, droplets, drops, drip, droplet\n\n// The MIT License\n// Copyright (c) 2024 Jakob Thomsen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#define PI 3.1415926\n#define TAU (PI+PI)\n\n#define PHI ((1.0+sqrt(5.0))/2.0)\n\nfloat blub(float t)\n{\n    return sin(t)*exp(-pow(t/10.0,2.0));\n}\n\nfloat drop(float time, float freq)\n{\n    time *= freq;\n    float delta = 50.0*pow(freq/440.0, 2.0);\n    return blub(1.0*(time-delta*0.0))+blub(2.0*(time-delta*1.0))+blub(4.0*(time-delta*2.0));\n}\n\nvec2 mainSound( int samp, float time )\n{\n    float offset = 0.5;\n    return vec2( drop(TAU*(fract(time)-offset), mix(880.0, 1760.0, 0.5+0.5*cos(PHI*time*TAU))) );\n}","name":"Sound","description":"","type":"sound"}]}