{"ver":"0.1","info":{"id":"Dl3Szl","date":"1685689769","viewed":40,"name":"Spinning Rainbow","username":"sesase","description":"my first try at a shader, it takes the mouse and pixel position and calculates a angle between 0 and 360 based on that, then it feeds that angle into a hsv2rgb converter and uses the result to color the pixel","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(in vec3 hsv)\n{\n    float H = clamp(hsv.x, 1E-10f, 360.0);\n    float V = clamp(hsv.y, 1E-10f, 1.0);\n    float S = clamp(hsv.z, 1E-10f, 1.0);\n    float num9 = S * V;\n    float num10 = num9 * (1.0 - abs(mod(H / 60.0, 2.0) - 1.0)); //(1.3 - abs(... looks like it has a more even color distribution, but it breaks if V is not 1\n    float num11 = V - num9;\n    \n    vec3 rgb;\n    \n    if (H < 60.0)\n        rgb = vec3(num9, num10, 0.0);\n    else if (H < 120.0)\n        rgb = vec3(num10, num9, 0.0);\n    else if (H < 180.0)\n        rgb = vec3(0.0, num9, num10);\n    else if (H < 240.0)\n        rgb = vec3(0.0, num10, num9);\n    else if (H < 300.0)\n        rgb = vec3(num10, 0.0, num9);\n    else\n        rgb = vec3(num9, 0.0, num10);\n    \n    return rgb + num11;\n}\n\nfloat calculateAngle(vec2 point1, vec2 point2)\n{\n    vec2 vector = point2 - point1;\n    float angle = degrees(atan(vector.y, vector.x));\n    return (angle + 180.0);\n}\n\nfloat rotation;\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 mousePos = iMouse.xy / max(iResolution.x,iResolution.y);\n    vec2 position = fragCoord.xy / max(iResolution.x,iResolution.y);\n    \n\n    vec2 point1 = mousePos;\n    vec2 point2 = position;\n    \n    float result = calculateAngle(point1, point2);\n    \n    float colorFrequency = 1.0;  // Adjust this parameter to control color frequency\n    result *= colorFrequency; \n    \n    result += iTime*100.0; // Adjust this parameter to control rotation/rotation speed\n    \n    result %= 360.0;\n    \n    fragColor = vec4(hsv2rgb(vec3(result, 1.0, 1.0)), 1.0);\n}","name":"Image","description":"","type":"image"}]}