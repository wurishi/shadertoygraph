{"ver":"0.1","info":{"id":"wlSXWR","date":"1567333442","viewed":303,"name":"Glitch#06","username":"104","description":"technology","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst vec2 z = vec2(4,8);\nconst float complexity =14.;\nconst float density = .7; // 0-1\nconst float disturbance = .2;\nconst float speed = .2;\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\n#define q(x,p) (floor((x)/(p))*(p))\n\nvoid mainImage( out vec4 o, vec2 C)\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = C/R.xy;\n    vec2 N = uv;\n    float t = iTime*.05;\n    t+=1e2;\n    uv.x *= R.x/R.y;\n    uv *= z;\n    uv.y+=iTime*.5;\n    o = vec4(1);\n    uv.x += floor(iTime*speed)*z.x;\n    float s = 1.;\n\n    for (float i = 1.;i <= complexity; ++ i) {\n        vec2 c = floor(uv+i);\n        vec4 h = hash42(c);\n        vec2 p = fract(uv+i)-s;\n        uv+= p*h.z*vec2(fract(q(t*3.,h.x))*disturbance,h.y);\n        s = -s*2.;\n        if (h.w > density) {\n            o *= h;\n        }\n    }\n    o=step(.5,o) * mod(C.x,3.)/2.5;\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}