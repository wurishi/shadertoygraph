{"ver":"0.1","info":{"id":"WsfGRN","date":"1545083399","viewed":450,"name":"rotating tiling  (289 chars)","username":"FabriceNeyret2","description":"shorter & more direct algorithm -> here [url]https://www.shadertoy.com/view/wsX3zN[/url]","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["2d","2tweets","short","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/WsfGz4\n// shorter & more direct algorithm: https://www.shadertoy.com/view/wsX3zN\n\n// 289 ( + rot: 33 )\n\n#define C(U) o -= smoothstep(0., 3./R.y, .3 - max(abs(U.x+ .3+min(t,.6-t)), \\\n                                                  abs(U.y+ .3-t) ) ); //\n#define D C(U) C(vec2(-U.y,U))                             \\\n          U += 2.* vec2( min(.3,.6-t), -min(t,.3) )       //\n#define E D; D; D; U = V = vec2(-V.y,V)                   //\nvoid mainImage(out vec4 O, vec2 u) {\n    float t = .3* mod(iTime,2.);\n    vec2  R = iResolution.xy,\n          U = (u+u - R) / R.y * mat2(cos(vec4(0,33,11,0) -iTime )),\n          V = U;\n    vec4 o = ++O; E; E; E; E; O = o; }                      /* \n\n/**/","name":"Image","description":"","type":"image"}]}