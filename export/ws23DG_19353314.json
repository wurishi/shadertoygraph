{"ver":"0.1","info":{"id":"ws23DG","date":"1549931047","viewed":141,"name":"Distance Field Experiment","username":"synergyseeker1","description":"Distance field basics. Experiment with rings. Art of Shaders #artofshaders","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circles","distancefields","vfx","artofshadersartofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\t\n    float d = distance(uv, pos);\n    d = abs(cos(d*12.)*sin(d*rad))*4.8-.5;\n\treturn vec4(color*vec3(rad,d*d,rad*uv.y),1.0- d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\t// normailze and adjsut for ratio\n\tvec2 r = iResolution.xy,\n     uv = (fragCoord*2.0-r ) / r.y; \n\t\n    \t// Background layer\n\tvec4 background = vec4(0.0);\n\t\n\t// Circle\n\tvec3 color = vec3(.6, .7, 2.0);\n    float radius = sin(iTime);\n    vec2 position = vec2(.0,.0);\n\tvec4 circle1 = circle(uv, position, radius, color);\n    \n\t\n\t// combine\n\tfragColor = mix(background, circle1, circle1.a);\n   \n}\n","name":"Image","description":"","type":"image"}]}