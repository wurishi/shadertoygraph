{"ver":"0.1","info":{"id":"4stSDj","date":"1461550514","viewed":114,"name":"patterns and rotation","username":"rjoudrey","description":"experimenting with patterns and rotations","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy / iResolution.xy;\n    float aspectRatio = iResolution.x / iResolution.y;\n    xy = xy * 2.0 - 1.0;\n    xy.x *= aspectRatio;\n    \n    xy /= cos(iTime) - 1.3;\n    xy += iTime * 0.5;\n    \n    \n    // rotate the space\n    xy = rotate2d(iTime * 0.1) * xy;\n    xy *= 4.0;\n    // create pattern\n    xy = mod(xy-1., 2.) - 1.;\n    \n    xy = rotate2d(iTime * 0.1) * xy;\n    \n    float x = xy.x;\n    float y = xy.y;\n    \n    float dist = length(xy);\n    float angle = floor(atan(xy.y / xy.x));\n    // increase the distance to the line based off its angle\n    float outerEdge = 0.9 + sin(angle * 20. + iTime) * .05;\n    float innerEdge = outerEdge - .02;\n    float aaSize = .01;\n    // tiny smoothstep addition on the edge gives it an anti-aliased look\n    float c = (step(dist, outerEdge) + smoothstep(outerEdge + aaSize, outerEdge, dist)) * \n        (step(innerEdge, dist) + smoothstep(innerEdge - aaSize, innerEdge, dist));\n    \n    float cDist = 0.13;\n    float cWidth = 0.02;\n    // without aa, big difference\n    c += step(dist, cDist) * step(cDist - cWidth, dist);\n    \n\tfragColor = vec4(c, 0, 0, 1.0);\n}","name":"Image","description":"","type":"image"}]}