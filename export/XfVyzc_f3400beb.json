{"ver":"0.1","info":{"id":"XfVyzc","date":"1732183862","viewed":71,"name":"Graphics Programming Nation","username":"finalman","description":"I don't know why I did this.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphere(vec3 o, vec3 d)\n{\n    float c = dot(o, o) - 1.0;\n    float b = 2.0 * dot(o, d);\n    float a = dot(d, d);\n    \n    float p = b / a;\n    float q = c / a;\n    \n    float ph = p * 0.5;\n    float r = ph * ph - q;\n    \n    if (r < 0.0)\n    {\n        return 0.0;\n    }\n    \n    return -ph - sqrt(r);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{;\n    vec2 g = (fragCoord.xy - iResolution.xy * 0.5) / max(iResolution.x, iResolution.y);\n    vec3 o = vec3(0.0, 0.0, -5.0);\n    vec3 d = vec3(g, 1.0);\n    \n    float t = sphere(o, d);\n    \n    if (t > 0.0)\n    {\n        vec3 p = o + d * t;\n        float s = dot(p, vec3(1.0, -1.0, 1.0));\n        float c = mix(0.5, 1.0, step(s, 0.0));\n        fragColor = vec4(c, c, c, 1.0);\n    }\n    else\n    {\n        float x = fragCoord.x / iResolution.x;\n        float r = step(x * 3.0, 1.0);\n        float b = 1.0 - step(x * 3.0, 2.0);\n        float g = 1.0 - r - b;\n        fragColor = vec4(r, g, b, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}