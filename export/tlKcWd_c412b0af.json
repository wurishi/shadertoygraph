{"ver":"0.1","info":{"id":"tlKcWd","date":"1612017703","viewed":84,"name":"oshare wall peaper","username":"tono","description":"kabegami","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wallpeaper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\nfloat bo(vec3 p , vec3 s){p = abs(p) - s; return max(p.x,max(p.y,p.z));}\nfloat nearest = 10.;\nfloat pi = acos(-1.);\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat Pile(vec3 p)\n{\n    float o = 10.;\n    \n    p.xz *= rot(p.y/1. + iTime);\n    p.x = abs(abs(p.x) - 1.) ;\n    p.z = abs(abs(p.z) - 1.) ;\n    float b = bo(p,vec3(.4,4.,.4));\n    o = b;\n    return o;\n}\n\nvec2 map(vec3 p)\n{\n    float o = 10.;\n    float id = 0.;\n    float ii = 10.;\n    vec2 dd = floor(p.xz / ii);\n    float t = random(dd);\n    p.xz = clamp(p.xz , -pi * 1.5*2.,pi * 1.5*2.);\n    p.xz = mod(p.xz , ii) - ii/2.;\n    float piller = Pile(p);\n    p.y += sin(t * pi  + iTime) * 2.6;\n    float sp = length(p) - .8;\n    o = min(piller,o);\n    if(o > sp)\n    {\n        id = random(dd);\n        o = sp;\n    }\n    return vec2(o,id);\n}\n\nvec2 march(vec3 cp, vec3 rd)\n{\n    float depth = 0.;\n    for(int i = 0 ; i < 99 ; i++)\n    {\n        vec3 rp = cp + rd * depth;\n        vec2 d = map(rp);\n        nearest = (d.x < nearest)?d.x:nearest;\n        if(abs(d.x) < 0.01)\n        {\n            return vec2(depth,d.y);\n        }\n        depth += d.x;\n    }\n    return vec2(-depth,0.);\n}\n\nvec3 hsv2rgb(float h,float s,float v)\n{\n    return ((clamp(abs(fract(h+vec3(0,2,1)/3.)*6.-3.)-1.,0.,1.)-1.)*s+1.)*v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec3 col = vec3(.8);\n    vec3 bcol = col;\n    vec3 cp = vec3(0.,-0.,-20.);\n    float tim = iTime/1.6;\n    float t = floor(tim) + pow(fract(tim),4.);\n    cp.xz *= rot(t*pi/4.);\n    vec3 target = vec3(0.,0.,0.);\n    \n    vec3 cd = normalize(target - cp);\n    vec3 cs = vec3(cross(cd , vec3(0.,1.,0.)));\n    vec3 cu = vec3(cross(cd , cs));\n    \n    float fov = 2.5;\n    vec3 rd = normalize(cd * fov + cs * p.x + cu * p.y);\n    \n    vec2 d = march(cp,rd);\n    \n    if(d.x > 0.)\n    {\n        vec3 pos = cp + rd * d.x;\n        vec2 e = vec2(0.,0.01);\n        \n        vec3 N = -normalize(map(pos).x - vec3(map(pos - e.xyy).x , map(pos - e.yxy).x,map(pos - e.yyx).x));\n        col = N;\n        vec3 sun = normalize(vec3(2.,4.,8.));\n        float rim = 1. - abs(dot(rd , N));\n        float stepdiff = 6.;\n        float stepsp = 2.;\n        float diff = max(0.,dot(N,sun)) * .7 + .3  ;\n        float sp = max(0.,dot(reflect(-N,sun),rd));\n        \n        if(d.y == 0.)\n        {\n            sp = pow(sp , 20.);\n        \tcol = vec3(.8);\n        }\n        else\n        {\n            sp = pow(sp , 20.);\n        \tcol = hsv2rgb(d.y * d.y * 1.5 , 1.,1.);\n        }\n        sp = floor(stepsp * sp) / stepsp;\n        diff = floor(stepdiff * diff) / stepdiff;\n        \n        sp = smoothstep(0.,1.,sp);\n        col = col + sp * vec3(1.);\n        float fine = 29.* max(0., (1. -  diff )) * step(diff , 0.6);\n        float density = .9 * max(0., (diff ));\n        col =col* step(.2, length((mod(pos * fine ,density) - density/2.)));\n        \n        vec3 pos1 = pos + cu *  0.001 + cs * 0.001;\n        vec3 pos2 = pos + cs * -0.001 + cu * 0.001;\n        vec3 N1 = -normalize(map(pos1).x - vec3(map(pos1 - e.xyy).x , map(pos1 - e.yxy).x,map(pos1 - e.yyx).x));\n        vec3 N2 = -normalize(map(pos2).x - vec3(map(pos2 - e.xyy).x , map(pos2 - e.yxy).x,map(pos2 - e.yyx).x));\n        float NN = length(N - N1) + length(N - N2);\n        if(NN > .07)\n        {\n            col *= 0.;\n        }\n    }else if(abs(nearest) < 0.02)\n    {\n        col *= 0.;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}