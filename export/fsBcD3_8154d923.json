{"ver":"0.1","info":{"id":"fsBcD3","date":"1644177108","viewed":73,"name":"ecl2pse","username":"natnatnat","description":"eclipse+ourob","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle","snake"],"hasliked":0,"parentid":"fdlcDS","parentname":"ecl1pse"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nconst float PI = 3.14;\nconst float e = 2.71;\n\nconst float R = e/PI;\n\nconst vec2 pointA = vec2(-R, 0.);\nconst vec2 pointB = vec2(R, 0.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    vec2 uv2 = ( 2. * fragCoord - iResolution.xy ) / iResolution.xy;\n\n    float r = length(uv);\n \n    float angleC = iTime * R;\n    vec2 pointC = vec2(R * cos(angleC), R * sin(angleC));\n    //vec2 outerPointC = vec2(R * R * cos(angleC), R * R * sin(angleC));\n    //* sin(angleC + PI/2.)/ 10.; //pow(e, -abs(distance(uv, outerPointC)) * PI);\n    float s = pow(e, -abs(distance(uv, pointC)) * PI);\n\n    vec3 circleColor = vec3(pow(e, -abs(R - r) * 10.));\n    vec3 squareColor = vec3(s);\n\n    vec2 cv = pointC - uv;\n    vec2 vc = uv - pointC;\n    float scalarProduct = dot(cv, vc);\n    float dec = pow(e, -abs(scalarProduct) * 100.);\n    vec3 snakeHeadColor = vec3(dec, dec, dec);\n\n    fragColor = 1. - (vec4(circleColor, 1.) + vec4(squareColor, 1.) + vec4(snakeHeadColor, 1.));\n}","name":"Image","description":"","type":"image"}]}