{"ver":"0.1","info":{"id":"4syGRh","date":"1453145852","viewed":134,"name":"Conway's Life","username":"sillsm","description":"x","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Max Sills 2016\n// Licensed under the MIT license.\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 t = texture( iChannel0, fragCoord / iResolution.xy );\n    \n    fragColor = vec4(t.x,t.y,0.0,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool occupied(vec4 x){\n    vec4 background_color = vec4(0.0,0.0,0.0,0.0);\n    \n    return (distance(x, background_color) > .001);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = fragCoord.xy / iChannelResolution[0].xy;\n    vec4 particle_color = vec4(100.0 , 100.0 ,0.0, 0.0);\n    vec4 background_color = vec4(0.0,0.0,0.0, 0.0);\n    vec4 current_cell_color = texture( iChannel0, uv);\n    fragColor = background_color;\n    \n    vec4 n[8];\n    // Neighbors\n    n[0] = texture( iChannel0, (fragCoord.xy + vec2(-1.0, 1.0)) / iChannelResolution[0].xy);\n    n[1] = texture( iChannel0, (fragCoord.xy + vec2(0, 1.0)) / iChannelResolution[0].xy);\n    n[2] = texture( iChannel0, (fragCoord.xy + vec2(1.0, 1.0)) / iChannelResolution[0].xy);\n    n[3] = texture( iChannel0, (fragCoord.xy + vec2(1.0, 0)) / iChannelResolution[0].xy);\n    n[4] = texture( iChannel0, (fragCoord.xy + vec2(1.0, -1.0)) / iChannelResolution[0].xy);\n    n[5] = texture( iChannel0, (fragCoord.xy + vec2(0, -1.0)) / iChannelResolution[0].xy);\n    n[6] = texture( iChannel0, (fragCoord.xy + vec2(-1.0, -1.0)) / iChannelResolution[0].xy);\n    n[7] = texture( iChannel0, (fragCoord.xy + vec2(-1.0, 0.0)) / iChannelResolution[0].xy);\n    \n    if (uv.x < .1  && (uv.y < .5 && uv.y > .1) && iTime < 0.5) fragColor = particle_color;\n    \n    int neighbors = 0;\n    for (int i=0;i<8;i++) {\n        if (occupied(n[i])) neighbors++;\n    }\n    \n    // First check if I need to evacuate my cell, then check if neighbors moved in.\n    if (!occupied(current_cell_color)){ // current_cell empty\n        if (neighbors == 3) fragColor = particle_color;\n    } else { // The cell is occupied.\n        if (neighbors < 2 || neighbors > 3) { \n            fragColor = background_color;\n        } else  fragColor = particle_color;\n   }\n}","name":"Buf A","description":"","type":"buffer"}]}