{"ver":"0.1","info":{"id":"cdKcDw","date":"1696205922","viewed":74,"name":"Spherical Presentation","username":"Crystalize","description":"5-3 spherical tile, and lots of fun stuff going on with it. :)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["beautiful","sphericaltile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define TWOPI 6.283185\n#define S2inv 0.707106\n#define R vec2(1.,0.)\n#define I vec2(0.,1.)\n#define iters 100\n\nvec2 cmul(vec2 z, vec2 c) {\n    return vec2(z.x * c.x - z.y * c.y, z.x * c.y + z.y * c.x);\n}\n\nvec2 cdiv(vec2 z, vec2 c) {\n    float r = dot(c, c);\n    return vec2(z.x * c.x + z.y * c.y, z.y * c.x - z.x * c.y) / r;\n}\n\nvec2 conj(vec2 z) {\n    return vec2(z.x, -z.y);\n}\n\nvec2 cpow(vec2 z, vec2 p) {\n    float a = atan(z.y, z.x);\n    float lnr = 0.5 * log(dot(z,z));\n    float m = exp(p.x * lnr - p.y * a);\n    float angle = p.x * a + p.y * lnr + TWOPI;\n    return vec2(cos(angle), sin(angle)) * m;\n}\n\nvec2 cexp(vec2 z) {\n    return vec2(cos(z.y),sin(z.y)) * exp(z.x);\n}\n\nvec2 clog(vec2 z) {\n    return vec2(0.5 * log(dot(z,z)), atan(z.y,z.x));\n}\n\nvec2 mobius(vec2 z, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return cdiv(cmul(a,z)+b,cmul(c,z)+d);\n}\n\nvec2 bubble(vec2 z) {\n    return z / (1. + sqrt(1. - z.x * z.x - z.y * z.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord.xy - 0.5*iResolution.xy) / -iResolution.y;\n    vec2 mouse = 2.0 * (iMouse.xy - 0.5*iResolution.xy) / iResolution.y;\n    float t = tan(iTime * 0.1);\n    float t2 = iTime*2.5;\n    uv = dot(uv,uv)<1.?mobius(mobius(bubble(uv)*0.5,R,I*t,I*t,R),R,-R*t,R*t,R):vec2(uv.y/uv.x);\n    uv = dot(uv,uv) > 1. ? cdiv(-R,uv) : uv;\n    uv = cmul(1728.*cpow(uv,5.*R),cdiv(cpow(cpow(uv,10.*R)-11.*cpow(uv,5.*R)-R,5.*R), cpow(cpow(uv,20.*R)+228.*cpow(uv,15.*R)+494.*cpow(uv,10.*R)-228.*cpow(uv,5.*R)+R, 3.*R)));\n    uv = clog(uv)*PI*0.5;\n    uv *= 2.01 + 2.* sin(iTime);\n    \n    vec2 nuv = uv * 1.41421356;\n    float grid = mod(floor(uv.x)+floor(uv.y)+0.5*tan(floor(nuv.x)+floor(nuv.y)),2.)*(1. + 0.5 * cos(t2));\n\n    vec3 col = 0.5 + 0.5*cos(t2+atan(uv.y,uv.x)*3.+grid+vec3(0,1,2));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}