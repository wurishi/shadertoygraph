{"ver":"0.1","info":{"id":"fdjfWW","date":"1646398222","viewed":128,"name":"Notes and Instruments","username":"Peace","description":"Music with notes and different instruments","likes":2,"published":3,"flags":8,"usePreview":0,"tags":["sound","music","instrument","notes","note","instruments","musicalinstrument"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// All components are in the range [0â€¦1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) //Shows cone position in 16ms\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float sound = mainSound(0, iTime + uv.x / 10.).x;\n    \n    vec3 col = vec3(0.4);\n    \n    if(uv.y < sound)\n    {\n        col = vec3(sound);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//See common","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"#define PI 3.14159\n#define TWO_PI 6.28318530718\n#define A4 69.0\n#define AS4 70.0\n#define B4 71.0\n#define C4 60.0\n#define CS4 61.0\n#define D4 62.0\n#define DS4 63.0\n#define E4 64.0\n#define F4 65.0\n#define FS4 66.0\n#define G4 67.0\n#define GS4 68.0\n\n//Whole note duration (1 second)\n#define W 1.0\n//Half note duration (0.5 second)\n#define H 0.5\n//Quarter note duration (0.25 second)\n#define Q 0.25\n//Eighth note duration (0.125 second)\n#define E 0.125\n//Sixteenth note duration (0.0625 second)\n#define S 0.0625\n\nfloat t = 0.0; //Current time\nfloat s = 0.0; //Start time used for note timings\nstruct Wave\n{\n    float frequency;\n    float amplitude;\n    float phase;\n};\n\n//Note MIDI number to frequency\nfloat ntof(float n)\n{\n\treturn 440.0 * pow(2.0, (n - 69.0) / 12.0);\n}\n\n//Play frequency 'freq' for duration 'd'\nfloat f(float freq, float d)\n{\n    float fq = (t >= s && t < (s + d)) ? freq : 0.0;\n    s += d;\n    return fq;\n}\n\n//Pause for duration 'd'\nfloat p(float d)\n{\n    s += d;\n    return 0.0;\n}\n\n//Play note 'n' for duration 'd'\nfloat n(float n, float d)\n{\n    return f(ntof(n), d);\n}\n\n//Makes a wave from frequency, amplitude and time\nfloat w(Wave w)\n{\n    return w.amplitude * sin(w.phase * w.frequency * TWO_PI) * exp(-(t - w.phase) * 10.0);\n}\n\nfloat log10(float x)\n{\n    return log(x) / log(10.0);\n}\n\nvec2 mainSound( int samp, float time )\n{\n    t = time;\n    float amplitude = 0.1;\n    float frequency = \n    n(C4, E) + n(C4, E) + n(D4, Q) + n(C4, Q) + n(F4, Q) + n(E4, H) + \n    n(C4, E) + n(C4, E) + n(D4, Q) + n(C4, Q) + n(G4, Q) + n(F4, H);\n    \n    Wave waves[] = Wave[](\n    Wave(frequency * 1., amplitude * 1.0, time),\n    Wave(frequency * 2., amplitude * 0.5, time),\n    Wave(frequency * 3., amplitude * 0.3, time),\n    Wave(frequency * 4., amplitude * 0.2, time),\n    Wave(frequency * 5., amplitude * 0.1, time),\n    Wave(frequency * 6., amplitude * 0.05, time),\n    Wave(frequency * 7., amplitude * 0.03, time),\n    Wave(frequency * 8., amplitude * 0.02, time)\n    );\n    \n    vec2 r = vec2(0);\n    \n    for (int i = 0; i < waves.length(); ++i)\n    {\n        r += vec2(w(waves[i]));\n    }\n    \n    return r * 0.2;\n}                            ","name":"Common","description":"","type":"common"}]}