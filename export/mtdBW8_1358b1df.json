{"ver":"0.1","info":{"id":"mtdBW8","date":"1702842902","viewed":26,"name":"100816723 - Voronoi Distance","username":"St0ven_","description":"A simple distance representation of a voronoi diagram","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = (uv - 0.5) * 2.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    int arrayLength = 5;\n    vec2[] voronoiPoints = vec2[] (vec2(-1, 0), vec2(0.5, 0), vec2(0, 0.5), vec2(0.5, 0.5), vec2(-0.5, 0));\n    vec4[] voronoiColors = vec4[] (vec4(0, 1, 1, 1), vec4(1, 1, 0, 1), vec4(0, 0, 1, 1), vec4(0, 1, 0, 1), vec4(1, 0, 0, 1));\n\n    float d = 0.0;\n    float lengthToPoint = 0.0;\n    float maxLength = 999.0;\n    \n    vec2 closestPoint = vec2(0, 0);\n    \n    vec4 pixelColor = vec4(0, 0, 0, 1);\n    \n    for(int i = 0; i < arrayLength; i++){\n        lengthToPoint = distance(uv, voronoiPoints[i]);\n        \n        if(lengthToPoint < maxLength){\n            maxLength = lengthToPoint;\n            \n            pixelColor = voronoiColors[i];\n            closestPoint = voronoiPoints[i];\n        }\n    }\n    \n    d = distance(uv, closestPoint);\n    \n    \n    if(d < 0.01){\n        pixelColor = pixelColor * d;\n    }\n    \n    pixelColor = vec4(d, d, d, 1);\n\n    // Output to screen\n    fragColor = vec4(pixelColor);\n}","name":"Image","description":"","type":"image"}]}