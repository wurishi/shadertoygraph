{"ver":"0.1","info":{"id":"XsSBWR","date":"1499972294","viewed":354,"name":"bilateral-filter","username":"woooha","description":"bilateral-filter","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float gauss(float d, float sigma) {\n\treturn exp(-2.0 * d * d / (sigma * sigma)) / sqrt(2.0 * 3.14 * sigma * sigma);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float f_sigma = 0.006 * 50.0;\n    \n    float g_sigma = 800.01;\n    \n    float windowSize = 3.0;\n    vec3 intense = texture(iChannel0, uv).xyz;\n    float norm = 0.0;\n    vec3 sum_i = vec3(0.0, 0.0, 0.0);\n    for (float x = fragCoord.x - windowSize; x <= fragCoord.x + windowSize; x++) {\n        for (float y = fragCoord.y - windowSize; y <= fragCoord.y + windowSize; y++) {\n            vec2 ux_d =  vec2(x, y) / iResolution.xy;\n            vec3 intense_d = texture(iChannel0, ux_d).xyz;\n\n            float distance_xy = distance(vec2(x,y), fragCoord.xy);\n            float g_xy = gauss(distance_xy, g_sigma);\n            \n            float distance_i = distance(intense_d, intense);\n            float f_xy = gauss(distance_i, f_sigma);\n            \n            norm += f_xy * g_xy;\n            sum_i += f_xy * g_xy * intense_d;\n        }\n    }\n    \n    vec3 color = sum_i / norm;\n    \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}