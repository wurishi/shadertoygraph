{"ver":"0.1","info":{"id":"DsGcD1","date":"1696020060","viewed":104,"name":"Letterdance","username":"oemfoe","description":"Oldskool effect simulation where letters are dancing and then converge to their intended place","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["letterdancefontwriter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 coords[2] = vec4[2](\n    vec4(0.25, 0.25, 0.25, 0.25),\n    vec4(0.50, 0.50, 0.25, 0.25)\n);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float k = 0.5 + 0.5 * sin(iTime); // k in [0, 1]\n    \n    bool hit = false;\n    for (int i = 0; i < 2; i++) {\n        vec2 offset = vec2(\n            0.1 + cos(float(i+1) * 1.5 * iTime) * 0.1,\n            0.1 + sin(float(i+1) * 1.5 * iTime) * 0.1\n        );\n        \n        vec2 offset2 = vec2(i == 0 ? 1. : -1.);\n        vec2 uvp = vec2(uv);\n        uvp += offset * k;\n        uvp.y += sin(uvp.x * 16.) * 0.1 * k;\n        vec4 coord = coords[i];\n        if (uvp.x >= coord.x && uvp.x < coord.x + coord.z &&\n            uvp.y >= coord.y && uvp.y < coord.y + coord.w) {\n            uv = uvp;\n            hit = true;\n            break;\n        }\n    }\n    \n    fragColor = vec4(0.);\n    if (hit)\n        fragColor = vec4(texture(iChannel0, uv / 4. + vec2(0.25, 0.5)).xxx, 1.0);\n}","name":"Image","description":"","type":"image"}]}