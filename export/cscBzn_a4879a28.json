{"ver":"0.1","info":{"id":"cscBzn","date":"1696772088","viewed":50,"name":"Ocean Waves Birds Eye View","username":"selimsheta","description":"Just a silly sum of sines.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","waves","ocean"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t)\n{\n    vec3 a = vec3(0.45, 0.5, 0.67);\n    vec3 b = vec3(0.45, 0.5, 0.3);\n    vec3 c = vec3(0.45, 0.5, 0.3);\n    vec3 d = vec3(0.45, 0.5, 0.67);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nfloat sinusoid(float pos, float amplitude, float frequency, float phaseOffset, float exponent){\n    return amplitude * pow(abs(sin(6.28318*frequency*pos+phaseOffset)),exponent);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int numWaves = 10;\n    float wavelengths[numWaves] = float[numWaves](0.1, 0.2, 0.3, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1);\n    float directions[numWaves] = float[numWaves](0.67, 0.9, 0.85, 0.73, 0.61, 0.93, 0.63, 0.81, 0.77, 0.71);\n    \n    vec2 uv0 = 1.0 + (2.0 * fragCoord - iResolution.xy) / (2.0 * iResolution.y);\n    \n    \n    float sumSines = 0.0;\n    float sumAmplitudes = 0.0;\n    for (int i = 0; i < numWaves; i++){\n        float biasedCoord = directions[i]*uv0.x+(1.0-directions[i])*uv0.y;\n        float amplitude = wavelengths[i];\n        float frequency = 1.0/wavelengths[i];\n        float speed = sqrt(wavelengths[i]);\n        sumSines += sinusoid(biasedCoord, amplitude, frequency, iTime*speed, 10.0*sqrt(wavelengths[i]));\n        sumAmplitudes += amplitude*amplitude;\n    }\n    \n    sumSines /= sqrt(sumAmplitudes);\n    vec3 finalColor = palette(0.5*sumSines);\n    fragColor = vec4(0.9*finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}