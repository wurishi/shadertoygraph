{"ver":"0.1","info":{"id":"4fSBRR","date":"1724525552","viewed":19,"name":"Line - tutorial","username":"therepo90","description":"Line - tutorial\nhttps://medium.com/@therepo_90/lase-beam-shader-part-1-9650f5d9388b\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["linetutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\na - from\nb - to\nuv - our pixel coords\nw - width of the line\nAll in [-1,1] space\n*/\nfloat line(vec2 a, vec2 b,vec2 uv, float w) {\n    vec2 lineDir = b - a;\n    vec3 col=vec3(0.);\n    vec2 perpendicular = vec2(-lineDir.y, lineDir.x);\n    \n    perpendicular = normalize(perpendicular);\n    vec2 uvToStart = uv - a;\n\n    float distanceToLine = abs(dot(uvToStart, perpendicular));\n\n    float t = dot(uvToStart, lineDir) / dot(lineDir, lineDir);\n    if (t >= 0.0 && t <= 1.0 && distanceToLine < w / 2.0) {\n        return 1.;\n    } else {\n        return 0.;\n    }\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0*(fragCoord-.5*iResolution.xy)/iResolution.xy;\n    \n    vec2 center = vec2(0.,0.); // center\n    vec2 target=vec2(0.5,0.3); // right\n    vec3 col = vec3(1.,0.,0.); // red\n   \n    float w = 0.1;\n    float l = line(center, target, uv, w);\n    \n    fragColor = vec4(col*l, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}