{"ver":"0.1","info":{"id":"4cXcz8","date":"1720738941","viewed":11,"name":"Rule 90 (Projet POGL)","username":"Oscartichaud","description":"voila","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["rule90final"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define alive vec4(1.0,1.0,1.0,1.0)\n#define dead vec4(0.0,0.0,0.0,1.0)\n#define id(val) vec4(val, val, val, 1.0)\n\n// Random function generator from https://www.shadertoy.com/view/Nsf3Ws\n//////////////////////////////////////////////////////////////////////\nuint seed = 0u;\nvoid hash(){\n    seed ^= 2747636419u;\n    seed *= 2654435769u;\n    seed ^= seed >> 16;\n    seed *= 2654435769u;\n    seed ^= seed >> 16;\n    seed *= 2654435769u;\n}\nvoid initRandomGenerator(vec2 fragCoord){\n    seed = uint(fragCoord.y*iResolution.x + fragCoord.x)+uint(iFrame)*uint(iResolution.x)*uint(iResolution.y);\n}\n\nfloat random(){\n    hash();\n    return float(seed)/4294967295.0;\n}\n/////////////////////////////////////////////////////////////////////\n\nfloat sample_tex(vec2 uv, float i, float j)\n{\n    vec2 delta_ij = vec2(i,j) / iResolution.xy;\n    float val = texture(iChannel0, uv + delta_ij).r;\n    if (val > 0.0)\n    {\n        return val;\n    }\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    initRandomGenerator(fragCoord);\n    \n    vec2 size = iResolution.xy;\n    vec2 uv = fragCoord / size;\n    \n    int x = int(fragCoord.x);\n    int y = int(fragCoord.y);\n    \n    int frame = iFrame / gen_nb_frames;\n    if (frame < 1)\n    {\n        fragColor = dead;\n        if (y == 0)\n        {\n            if (isRandom)\n            {\n                float rand = random();\n                if (rand < density)\n                {\n                    fragColor = alive;\n                }\n            }\n            else\n            {\n                if (x == 400)\n                {\n                    fragColor = alive;\n                }\n            }\n                \n        }\n    }\n    else\n    {  \n        if (y < frame)\n        {\n            float val = texture(iChannel0, uv).r;\n            fragColor = id(val);\n        }\n        else if (y == frame)\n        {\n            float val = sample_tex(uv, 0.0, -1.0);\n            float left = sample_tex(uv, -1.0, -1.0);\n            float right = sample_tex(uv, 1.0, -1.0);\n            \n            fragColor = alive;\n            if (val + left + right > 2.5)\n            {\n                fragColor = dead;\n            }\n            else if (val + left + right < 0.5)\n            {\n                fragColor = dead;\n            }\n            else if (val < 0.5 && right > 0.5 && left > 0.5)\n            {\n                fragColor = dead;\n            }\n            else if (val > 0.5 && right < 0.5 && left < 0.5)\n            {\n                fragColor = dead;\n            }\n        }\n        else\n        {\n            fragColor = dead;\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"int gen_nb_frames = 1;\n\nbool isRandom = true;\nfloat density = 0.05;","name":"Common","description":"","type":"common"}]}