{"ver":"0.1","info":{"id":"XfdcWj","date":"1731180971","viewed":223,"name":"dynamic centering Britney","username":"FabriceNeyret2","description":"target the red lips with a dedicated mask.\nThen compute the corresponding weighted spacial 1-moment thanks to GPmipmap,\nand use it to dynamically center the video (click for not).\nAny idea to improve the precision ?","likes":12,"published":3,"flags":32,"usePreview":0,"tags":["gpmipmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// see also \"tracking van damme(almost free)\" https://www.shadertoy.com/view/XlcyR2\n// more GeneralPureposeMIPMAP: https://www.shadertoy.com/results?query=gpmipmap\n//                             https://shadertoyunofficial.wordpress.com/2021/03/09/advanced-tricks/\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = textureLod(iChannel1, vec2(.5), 99.); // read 1-moment\n    vec2 P =  O.xy / O.w;                     // extract weighted average location \n\n    if (iMouse.z <= 0.)    \n        u += P - .5*R;                        // dynamic centering\n\n    O = texture(iChannel0, u/R)               // source texture\n       + max(0., 10.-length(P-u));            // show average location\n#if 1       \n    O = vec4(length(O.rgb)/2.);               // black and white video\n    O.r += texture(iChannel1,u/R).a*100.;     // show red mask\n#endif    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// === source video =================\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = texture(iChannel0, u/R);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// === computes 1-moment ================\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = texture(iChannel0, u/R);\n    O.w = pow( max(0., O.r - 1.4*max(O.g,O.b)), 4.)   // underline red regions ( lips )\n              * max(0., 1. - length(u/R-.5) );\n  //  O.w = pow( max(0., O.r - 1.*max(O.g,O.b)), 6.); // underline red regions ( lips )\n    O.xy = u * O.w;                                   // 1-moment\n}","name":"Buffer B","description":"","type":"buffer"}]}