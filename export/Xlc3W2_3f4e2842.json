{"ver":"0.1","info":{"id":"Xlc3W2","date":"1471532133","viewed":205,"name":"Japanese Lamp","username":"phi16","description":"lamp","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define put(e) res = with(e,res)\n\nstruct C{\n    float d;\n    int t;\n};\n    \nvec3 light = normalize(vec3(-2,0,0));\n    \nfloat box(vec3 s,vec3 p){\n    return length(max(abs(p)-s,0.))-0.01;\n}\n\nfloat sbox(vec3 s,vec3 p){\n    vec3 d = abs(p) - s;\n    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat fbox(vec3 s,vec3 p){\n    float frame,res;\n    frame = box(vec3(s.x,s.y,0.001),p-vec3(0,0,s.z));\n    res = frame;\n    frame = box(vec3(s.x,s.y,0.001),p-vec3(0,0,-s.z));\n    res = min(frame,res);\n    frame = box(vec3(0.001,s.y,s.z),p-vec3(s.x,0,0));\n    res = min(frame,res);\n    frame = box(vec3(0.001,s.y,s.z),p-vec3(-s.x,0,0));\n    res = min(frame,res);\n    return res;\n}\n\nC with(C a, C b){\n\tif(a.d < b.d) return a;\n    else return b;\n}    \n\nC dist(vec3 p){\n    C res;\n    C frame;\n    frame = C(fbox(vec3(1,1.6,1)/4.,p-vec3(0,0.2,0)),0);\n    res = frame;\n    C base;\n    base = C(max(sbox(vec3(1,0.1,1)/4.,p-vec3(0,-0.26,0)),-sbox(vec3(0.8,1.,0.8)/4.,p-vec3(0,-0.26,0))),2);\n    put(base);\n    base = C(box(vec3(1,0.1,1)/4.,p-vec3(0,-0.66,0)),1);\n    put(base);\n    C stick;\n    stick = C(box(vec3(0.09,1,0.09)/4.,p-vec3(-0.225,-0.4,0.225)),1);\n    put(stick);\n    stick = C(box(vec3(0.09,1,0.09)/4.,p-vec3(0.225,-0.4,0.225)),1);\n    put(stick);\n    stick = C(box(vec3(0.09,1,0.09)/4.,p-vec3(-0.225,-0.4,-0.225)),1);\n    put(stick);\n    stick = C(box(vec3(0.09,1,0.09)/4.,p-vec3(0.225,-0.4,-0.225)),1);\n    put(stick);\n    C con = C(box(vec3(0.85,0.2,0.85)/4.,p-vec3(0,-0.61,0)),1);\n    put(con);\n    \n    C table = C(box(vec3(3.,1.,3.)/4.,p-vec3(-0.3,-0.96,0.3)),3);\n    put(table);\n    put(C(-p.x + 0.45,4));\n    put(C(p.z + 0.45,4));\n    return res;\n}\n\nvec3 normal(vec3 p){\n    vec2 e = vec2(0.001,0);\n    return normalize(vec3(\n        dist(p+e.xyy).d - dist(p-e.xyy).d,\n        dist(p+e.yxy).d - dist(p-e.yxy).d,\n        dist(p+e.yyx).d - dist(p-e.yyx).d));\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat hash( float n ) { return fract(sin(n)*753.5453123); }\nfloat noiseBase( in vec3 x , float e )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    float n = p.x + p.y*157.0 + 113.0*p.z + e;\n    return mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                   mix( hash(n+157.0), hash(n+158.0),f.x),f.y),\n               mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                   mix( hash(n+270.0), hash(n+271.0),f.x),f.y),f.z);\n}\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\n                    -0.80,  0.36, -0.48,\n                    -0.60, -0.48,  0.64 );\nfloat noise(vec3 p, float e){\n    float f = 0.0;\n    vec3 q = 8.0*p;\n    f  = 0.5000*noiseBase( q,e ); q = m*q*2.01;\n    f += 0.2500*noiseBase( q,e ); q = m*q*2.02;\n    f += 0.1250*noiseBase( q,e ); q = m*q*2.03;\n    f += 0.0625*noiseBase( q,e ); q = m*q*2.01;\n    return f;\n}\nfloat pattern(vec3 p){\n    return noise(p,0.);\n}\nvec2 Dpat(vec3 p, vec3 n1, vec3 n2){\n    n1 *= 0.001;\n    n2 *= 0.001;\n    return normalize(vec2(\n        pattern(p+n1) - pattern(p-n1),\n        pattern(p+n2) - pattern(p-n2)));\n}\n\nvec3 render(vec3 p,vec3 v,vec3 n,int t){\n    if(t==0){\n        p.y -= 0.2;\n        float dep = pattern(p);\n        vec2 n2 = Dpat(p,vec3(0,1,0),cross(vec3(0,1,0),n));\n        vec3 nr = normalize(vec3(n2.y*(1.-abs(n.x)),n2.x,n2.y*(1.-abs(n.z)))+n*15.);\n        vec3 e = mix(vec3(1),vec3(0.4),abs(nr.y));\n        if(dot(p,nr) > 0.)e *= 0.5 / pow(length(p),0.8);\n        else e *= 1.3 / pow(length(p),0.9);\n        e -= dep * vec3(0,0.7,1.0) * 0.3;\n        e *= vec3(0.9,0.8,0.5);\n        float ef = 1./1.5;\n        e = vec3(pow(e.x,ef),pow(e.y,ef),pow(e.z,ef));\n        return e;\n    }else if(t==3){\n        vec3 col = texture(iChannel1,vec2(p.x,p.z)/2.).xyz;\n        p.y -= 0.2;\n        col *= 0.2 / pow(length(p),2.);\n        return col;\n    }else if(t==4){\n        vec3 col = texture(iChannel1,vec2(p.x+p.z,p.y)/2.).xyz;\n        p.y -= 0.2;\n        col *= 0.3 / pow(length(p),2.);\n        return col;\n    }else{\n        vec3 c = vec3(0);\n        c += max(dot(-v,n),0.0)/20.0;\n        c += pow(max(dot(reflect(v,n),light),0.0),10.0)/5.0;\n        if(t==2){\n            c += 0.2 / pow(length(p),1.5) * n.y * vec3(0.9,0.9,0.5);\n        }\n        return c;\n    }\n}\n\nfloat ao(vec3 p,vec3 n){\n    float e = 0.0;\n    for(int i=1;i<5;i++){\n        e += dist(p+n*float(i)/10.0).d / (float(i)/10.0) * pow(2.,-float(i));\n    }\n    return pow(e+0.5,0.7);\n}\n\nvec3 color(vec3 p, vec3 v){\n    float d = 0.001;\n    int maxIter = 100;\n    C c=C(0.,-1);\n    for(int i=0;i<100;i++){\n        C ci=dist(p+d*v);\n        float rd = ci.d;\n        if(abs(rd) < 0.001){\n            maxIter=i;\n            c=ci;\n            break;\n        }\n        d += rd;\n    }\n    if(c.t==-1)return v*0.5+0.5;\n    vec3 pos = p+d*v;\n    vec3 n = normal(pos);\n    return render(pos,v,n,c.t)*ao(pos,n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy, \n\tuv = (2.*fragCoord.xy - R)/R.y;\n    vec3 p=vec3(0,0,0);\n    vec3 vi = vec3(1,0,0);\n    vec3 v=vec3(4.0,uv.y,uv.x);\n    v=normalize(v);\n    vi=normalize(vi);\n    float rot;\n    rot = 0.4;\n    v.xy *= mat2(cos(rot),sin(rot),-sin(rot),cos(rot));\n    vi.xy *= mat2(cos(rot),sin(rot),-sin(rot),cos(rot));\n    rot = sin(iTime)/2.+3.1415/4.;\n    v.xz *= mat2(cos(rot),sin(rot),-sin(rot),cos(rot));\n    vi.xz *= mat2(cos(rot),sin(rot),-sin(rot),cos(rot));\n    p -= vi*3.;\n\tfragColor = vec4(color(p,v),1.0);\n}","name":"Image","description":"","type":"image"}]}