{"ver":"0.1","info":{"id":"dsl3Rr","date":"1665596247","viewed":84,"name":"genius sierpinski triangle","username":"EEVV","description":"\"My brain is too big, I'm going to have to get a bigger head\" - grug\nmade by some kid called eevv","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["300iqsierpinskitriangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// made by some kid called eevv\n\n// can use GL 4 bitCount\n// but it looks better when you stop before 12\n// for the loop\nint count(int x) {\n    int s = 0;\n    for (int i = 0; i < 12; i += 1) {\n        s += (x >> i) & 1;\n    }\n    \n    return s;\n}\n\n// number of factors of 2 in x choose y\nint d(int x, int y) {\n    return count(y) + count(x - y) - count(x);\n}\n\nint zigzag(int t) {\n    int p = 13;\n    int a = t % p;\n    int b = t / p % 2;\n    return (p - a) * b + a * (1 - b);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 uv) {\n    uv -= iResolution.xy / 2.0;\n    if (d(int(uv.x), int(uv.y)) == zigzag(int(iTime * 12.0)))\n        fragColor = vec4(1.0);\n    else\n        fragColor = vec4(vec3(0.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}