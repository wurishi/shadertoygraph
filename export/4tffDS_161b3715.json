{"ver":"0.1","info":{"id":"4tffDS","date":"1513068711","viewed":602,"name":"bug MIPmap: sum error","username":"FabriceNeyret2","description":"Error when summing 1 over the whole image ( = ultimate MIPmap level).\nBlack pixels = missing \"surface\" ( assuming not in excess )\nOn linux: up to 0.7E-3. This seems at lot more that floating point precision.\nOn windows: sometime error 0 when simple clamp.","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["bug","integration","gpmipmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 pInt(vec2, float);\n    vec4 pFloat(vec2, float);\nvec4 char(vec2, int);\n#define spc  U.x-=.5;\n#define A(c)  U.x-=.5; O-= char(U,c).x;\n#define C(c)  U.x-=.5; O-= char(U,64+c).x;\n#define L(c)  U.x-=.5; O-= char(U,64+32+c).x;\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, u = U/R.y,\n         V = mod(U-.5 +R/2.,R);                 // cycles window: exchange center and corners\n\tO = texture(iChannel0, U/R, 100.) *R.x*R.y; // sum of whole texture\n    float err = 1. - O.x/(R.x*R.y);\n    O = vec4( V.x+R.x*V.y < O.x );\n    \n    U = ( u - vec2(.0,.9) ) * 12.;              // print resolution\n    spc spc L(18)L(5)L(19)A(58) spc spc \n    O -= pInt( U, R.x ).x; U.x -= 1.7; L(24); U.x -= .7; O -= pInt( U, R.y ).x; \n    U = ( u - vec2(.0,.75) ) * 8.;              // print error\n    L(5)L(18)L(18)A(58) spc spc \n        O -= pFloat( U, 1e3*err ).x;\n    U.x -= 4.5; C(5); A(45);A(3+48);\n}\n\n\n// === text and numbers printing utilities =========================\n\n// --- access to the image of ascii code c\nvec4 char(vec2 p, int c) {\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel3, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx(p/16.),dFdy(p/16.) );\n}\n\n// --- display int4\nvec4 pInt(vec2 p, float n) {\n    vec4 v = vec4(0);\n    if (n < 0.) \n        v += char(p - vec2(-.5,0), 45 ),\n        n = -n;\n\n    for (float i = 3.; i>=0.; i--) \n        n /=  9.999999, // 10., // for windows :-(\n        v += char(p - .5*vec2(i,0), 48+ int(fract(n)*10.) );\n    return v;\n}\n\n// --- display float4.4\nvec4 pFloat(vec2 p, float n) {\n    vec4 v = pInt(p,floor(n)); p.x -= 2.;\n        v += char(p, 46);      p.x -= .5;\n        v += pInt(p,fract(n)*1e4);\n    return v;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )  {    O = vec4(1);    }","name":"Buf A","description":"","type":"buffer"}]}