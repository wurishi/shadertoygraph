{"ver":"0.1","info":{"id":"4dccDn","date":"1518370523","viewed":142,"name":"Random Convex Polygons","username":"FigSin2Pi","description":"Flipping through primitives. Just a small reference example.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","primitives","convex","polygons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI    3.14159265358979323846\n#define PI2   6.28318530717958647693\n\n// Thanks FabriceNeyret2 for the input\n// I used some and ignored some ;)\n\n#define rand(v) fract(sin(dot( v, vec2(13.9, 21.3))) * 87877.104729)\n\n// Rotate the value around mi(n) and ma(x)\n//#define rot(mi,ma,f) (mod(f, ma-mi)+mi)\n#define rot(mi,ma,f) (mod(f, ma-mi)+mi)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 fct = vec2(iResolution.x/iResolution.y, 1.);\n    vec2 st = fct * uv;\n    \n    vec2 spc = st*2. - fct;\n    \n    // Scale the space (to fit more boxes in)\n    vec2 ispc = spc*3.;\n    \n    // Integer space (i.e. what box am I in?)\n    vec2 flr = floor(ispc);\n    \n    // Fractional space (i.e. where in the little box am I?)\n    vec2 frc = fract(ispc);\n    \n    // Center origo at center of fractional space\n    vec2 rspc = frc-0.5;\n    \n    // Polar coordinates of fractional space\n    float len = length(rspc);\n    float a = atan(rspc.y, rspc.x) + PI/2.;\n    \n    // Random value based on what box we're in\n    float ran = rand(flr);\n    \n    // Rotate around 0. and 1.\n    ran = fract(ran+iTime*0.2);\n    \n    // Number of sides of polygon\n    float n = floor(ran*3.)+3.;\n    \n    float s = PI2/n;\n    \n    // Modulate \n    float f = cos(floor(.5+a/s)*s-a)*len;\n    float shape = 1.-smoothstep(0.2, 0.22, f);\n\n    // Some color based on the random value\n    vec3 col = vec3(0.5*cos(ran+iTime), 0.25*sin(iTime)+0.5, 0.5*sin(ran+iTime));\n    \n    // Restrict the output to the shape\n    col *= shape;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}