{"ver":"0.1","info":{"id":"cddfWB","date":"1697602433","viewed":75,"name":"Life of Game (Copy)","username":"tooboi710","description":"ca shader","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["ca"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Borrowed from someone on here not mine using for personal project\n\n#define lookup(pos) texture(iChannel0,pos).x\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 invResolution = 1. / iResolution.xy;\n    vec2 uv = fragCoord.xy * invResolution;\n    \n    float prevState = texture(iChannel0,uv).x;\n    \n    float e = 0.;\n    e += lookup(uv + vec2( 0., 1.) * invResolution);\n    e += lookup(uv + vec2( 0.,-1.) * invResolution);\n    e += lookup(uv + vec2( 1., 0.) * invResolution);\n    e += lookup(uv + vec2(-1., 0.) * invResolution);\n    e += lookup(uv + vec2( 1., 1.) * invResolution);\n    e += lookup(uv + vec2( 1.,-1.) * invResolution);\n    e += lookup(uv + vec2(-1., 1.) * invResolution);\n    e += lookup(uv + vec2(-1.,-1.) * invResolution);\n    if( e == 2. && prevState == 1. || e == 3. )\n    \tfragColor= vec4(1.);\n    else\n    \tfragColor= vec4(0.);\n    \n    if(iMouse.z > .5)\n    \tfragColor= max(fragColor,vec4(step(length(iMouse.xy - fragCoord),25.)));\n    else if (iFrame < 10)\n        fragColor = vec4(step(length(vec2(.5) - uv),.1));\n}","name":"Buffer A","description":"","type":"buffer"}]}