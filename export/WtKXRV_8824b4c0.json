{"ver":"0.1","info":{"id":"WtKXRV","date":"1595364089","viewed":145,"name":"2D Metaballs 2 Colours","username":"lewdoo","description":"Metaballs with 2 colours","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["metaballs","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ballsize 6.2\n#define stickyness .35\nconst float ballcount = 8.;\nconst float drawDist = 3.;\nconst float origin = 2.;\n\nconst vec3 trunk1 = vec3(.3, .9, .3);\nconst vec3 trunk2 = vec3(.1, .2, .9);\n\nfloat rand(vec2 uv){\n\tfloat r= sin(dot(vec2(uv.x * 28.2763, uv.x * 634.324), uv) * 340.7328 * (sin(uv.x * uv.y * 1000.8924) + 0.933));\n\treturn r;\n}\n\n\nvec3 positions(float i){\n    vec3 p = vec3(sin(rand(vec2(i, i * 4027.))), sin(rand(vec2(i * 8136., i * 47.))), 2.) * 0.2;\n        p.x += (sin(rand(vec2(i * 0.2, i * 40.) + 0.2) * iTime) * \n                  rand(vec2(i + 0.3, i * 978.))) * 0.5;\n        \n        p.y += ((cos((rand(vec2(i + 0.1, i * 40.)) + 0.5) * iTime) * \n                  rand(vec2(i * 8923., i * 978.))) + 0.2) * 0.2;\n    \n    \t/*p.z += ((cos((rand(vec2(i + 0.6, i * 2.3453)) + 0.9) * iTime) * \n                  rand(vec2(i * 6324.4267, i * 2854.523))) + 0.2);*/\n\treturn p;\n}\n\nfloat rayMarching(in vec3 origin, in vec3 ray, out vec3 m){\n\tfloat mDist = 1.;\n    m = origin;\n    return 1.;\n    \n    \n}\n\nvec3 metaField(vec2 uv){\n    vec3 fieldi = vec3(0.);\n    \n\t//this bit is the meta field---------------------------\\/\n    for(float i = 0.; i < ballcount; i++){\n        \n        vec3 pos = positions(i);\n        \n        float depth = drawDist - (origin - pos.z);\n        \n    \tfloat d = 1. - distance(uv, pos.xy) * ballsize * depth;\n       \td += rand(vec2(i, 0.2)) * 0.1;\n        \n        \n       \tfloat ball = smoothstep(0., 1., d);\n        if(i < ballcount / 2.){\n        \tfieldi.r += ball;\n        }\n        else{\n    \t\tfieldi.g += ball;\n        }\n    }\n\n    fieldi.b = (sign(fieldi.r + fieldi.g - stickyness) * 0.5 + 0.5);\n    return fieldi;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = metaField(uv);\n    \n    //applying the two colors\n    col.r /= (col.r + col.g);\n    col.g /= (col.r + col.g);\n    \n    col = vec3(col.r * trunk1 + (col.g) * trunk2) * col.b;\n    //------------------/\\\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}