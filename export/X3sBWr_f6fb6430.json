{"ver":"0.1","info":{"id":"X3sBWr","date":"1728281246","viewed":41,"name":"Bubble bubble","username":"INCHMAN1900","description":"some bubble test","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["noise","bubble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float x) {\n    return fract(sin(754.213+x*3597.623)*954.23);\n}\n\nfloat noise(float x) {\n    float i=floor(x);\n    float f=fract(x);\n    return mix(random(i),random(i+1.),smoothstep(0.,1.,f));\n}\n\nfloat W = 0.2f;\n\nvec3 bubble(vec2 uv) {\n    float n=.5+noise(uv.x*sin(uv.y+5.)*5.+iTime*2.)*.05;\n    float c=smoothstep(n+W,n,length(uv));\n    return vec3(c*vec3(n,.7,n*.7+.6));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/ iResolution.y * 2.5;\n\n    // Time varying pixel color\n    vec3 col = bubble(uv) + vec3(0.2 + iTime * 0.1, uv.x, uv.y) * bubble(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}