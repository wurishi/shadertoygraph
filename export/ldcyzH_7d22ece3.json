{"ver":"0.1","info":{"id":"ldcyzH","date":"1517926679","viewed":85,"name":"Attractor Test","username":"johnfredcee","description":"An attempt to find out just how insane modern hardware is.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","attractor","lorenz"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n    \n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\n    vec3 color = vec3(.0);\n\n    float m_dist = 60.;  // minimun distance\n\n    float oTime = iTime * 0.2;\n        \n    vec2 pointi = vec2(0.1, 0.1);\n    float a = sin(mod(oTime * 0.1,360.0) / 3.145 * 2.) * 1.6;    \n    float b = cos(mod(oTime * 0.2,360.0) / 3.145 * 2.) * 1.6;    \n    float c = cos(mod(oTime * 0.15 + 45.0,360.0) / 3.145 * 2.) * 1.6;  \n    float d = sin(mod(oTime * 0.05 + 45.0,360.0) / 3.145 * 2.) * 1.6;  \n    // Iterate through the points positions\n    for (int i = 0; i < 5000; i++) {\n        \n        float xn = sin(a * pointi.y) - cos(b * pointi.x);\n\t\tfloat yn = sin(c * pointi.x) - cos(d * pointi.y);\n        pointi.xy = vec2(xn, yn);\n            \n        float dist = distance(st, pointi.xy);\n\n        // Keep the closer distance\n        m_dist = min(m_dist, dist);\n    }\n\n    // Draw the min distance (distance field)\n    color += m_dist;\n\n    // Show isolines\n    color -= step(.7,abs(sin(50.0*m_dist)))*.3;\n\tcolor.r *= 0.5 + mod(oTime * 0.1, 0.5);\n    color.b *= 1.0 - mod(oTime * 0.1, 1.0);\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}