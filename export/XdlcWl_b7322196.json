{"ver":"0.1","info":{"id":"XdlcWl","date":"1490335023","viewed":204,"name":"Voxel Tracing","username":"djeof1","description":"Shader for rendering minecraft-like voxel environment.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voxel","glsl","rendering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y -= .5;\n\tvec3 c, f, p, o, y = vec3(2.0,1.0,2.0);\n    vec3 g = vec3(uv,0.5);\n    g.xz *= mat2(cos(iTime),sin(iTime),-sin(iTime),cos(iTime));\n    \n\to.x = .01 * sin(2.0 * iTime) * cos(2.0 * iTime) - 4.4;    \n\to.z = iTime * 10.0;\n \to.y = 1.2 * cos((o.z) * 0.1) - 5.0;\n   \n    for ( float i = 0.; i < 32.; i += .05 ) {\n        o += vec3(uv,0.5) * i *.05; \n        c = o;\n        f = fract(c); \n\t\tp = floor(c) * .05;\n\t\tif( cos(p.z) + sin(p.x) > p.y + 1. ) {\n\t  \t\tg = (f.y - .04 * cos((c.x + c.z) * 5.) > .5 ? y : f.x * y.yxz)/i;\n            break;\n        }\n    }\n    fragColor = vec4(g, 1.);\n}","name":"Image","description":"","type":"image"}]}