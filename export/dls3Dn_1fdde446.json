{"ver":"0.1","info":{"id":"dls3Dn","date":"1671638144","viewed":67,"name":"fluffy rainbow noise","username":"ianertson","description":"Some fluffy rainbow noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise0(vec2 uv, float seed) {\n    vec2 uv2 = vec2(cos(uv.x+tan(seed)), sin(uv.y+cos(seed)));\n    float a = fract(cos(seed+atan(uv.x, uv.y)) * dot(uv, uv2));\n    float b = fract(cos(a*1.291) * dot(uv, vec2(1.29724, 1.92814)));\n    \n    return fract(cos(uv.x+1.213+uv.y*1.123) * dot(uv, vec2(a, b)));\n}\n\nfloat noise1(vec2 uv, float seed) {\n    float x = noise0(uv, seed);\n    float y = noise0(uv, (seed / 1.6) + 2.9313);\n    float w = noise0(uv, (seed*1.6) + 1.2871);\n    \n    return fract(cos(seed+w*(3.14*2.0)) * dot(uv, vec2(x*1.2814, y*1.9281)));\n}\n\nfloat snoise(vec2 uv, float seed) {\n    vec2 lv = smoothstep(0.0, 1.0, fract(uv*1.6));\n    vec2 id = floor(uv*1.6);\n    \n    float lr = noise1(id, seed);\n    float r = noise1(id + vec2(1.0, 0.0), seed);\n    float a = mix(lr, r, lv.x);\n    \n    float tb = noise1(id + vec2(0.0, 1.0), seed);\n    float t = noise1(id + vec2(1.0, 1.0), seed);\n    float b = mix(tb, t, lv.x);\n    \n    return mix(a, b, lv.y);\n    \n}\n\nfloat noise(vec2 uv, float seed, int layers) {\n    float n = 0.0;\n    float m = 0.0;\n    \n    for (int i = 0; i < layers; i++) {\n        n += snoise(uv, seed);\n        uv *= (1.0 + ((uv*0.5) + (uv / (1.0 + n)))) * 0.1;\n        seed += 0.0001;\n        m = max(n, m);\n    }\n   \n    return (m + (n / float(layers))) / 3.14;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 res = iResolution.xy;\n    \n    float T = iTime*0.1;\n    float minFreq = 3.14;\n    float freq = max(minFreq, (minFreq + (16.0 * (0.5 + (0.5 * cos(T*0.5))))));\n    uv += vec2(1.0) + vec2(cos(T), sin(T))*1.6;\n\n    float shift = 0.1 + (0.5 + (0.5 * cos(T*0.01)*0.01));\n    \n    int detail = 6;\n\n    float r = noise(uv*freq, 1.281 + shift, detail);\n    float g = noise(uv*freq, 2.134 + shift, detail);\n    float b = noise(uv*freq, 3.0931 + shift, detail);\n    \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}