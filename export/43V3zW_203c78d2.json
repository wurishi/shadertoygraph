{"ver":"0.1","info":{"id":"43V3zW","date":"1717373979","viewed":37,"name":"cool432","username":"Tenth8602","description":"cool","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cool43"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( float t )\n{\n    vec3 a = vec3(1.108,1.108,0.500);\n    vec3 b = vec3(1.000, 1.000, 1.138);\n    vec3 c = vec3(3.138, 0.388, 0.838);\n    vec3 d = vec3(-0.032, 0.313, 0.667);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n        vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n        vec2 uv0 = uv;\n\n        vec3 finalcolor = vec3(0.);\n\n        for (float i = 0.0; i < 4.0; i++) {\n\n        uv = fract(uv*1.5) -.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.3 + (iTime*.1));\n\n        d = sin(d*8.+ iTime)/8.;\n        d = abs(d);\n\n        d = pow(.003 / d, 1.2);\n\n        finalcolor += col * d;\n    }\n    fragColor = vec4(finalcolor,1.);\n}","name":"Image","description":"","type":"image"}]}