{"ver":"0.1","info":{"id":"mlGGRh","date":"1683535222","viewed":72,"name":"Simple Orbs","username":"futuresigner","description":"orbs train","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["orbs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 pos, float _rad, float _blur){\n    float rad = _rad;\n    float blurLevel = rad - _blur;\n    float dist = length(uv + pos);\n    return smoothstep(rad, blurLevel, dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 col = vec3(0.0,0.0,0.0);\n    col.x = circle(uv, vec2(-0.02, 0.0), 0.17, 0.1);\n    col.y = circle(uv, vec2(0.0, 0.0), 0.17, 0.1);\n    col.z = circle(uv, vec2(0.02, 0.0), 0.17, 0.1);\n    for(int i = 0; i < 50; i ++){\n        col.x -= circle(uv, vec2(sin(iTime - float(i)*0.2) * sin(iTime + uv.y * 10.5) * 0.25, cos(iTime * 0.2- float(i)*0.2) * cos(iTime + uv.x * 1.2) * 0.15), 0.04 - float(i)*0.001, 0.05);\n        col.y -= circle(uv, vec2(sin(iTime - float(i)*0.2) * sin(iTime + uv.y * 20.05) * 0.15, cos(iTime * 0.2- float(i)*0.2) * cos(iTime + uv.x * 5.02) * 0.15), 0.04 - float(i)*0.001, 0.05);\n        col.z -= circle(uv, vec2(sin(iTime - float(i)*0.2) * sin(iTime + uv.y * 30.1) * 0.15, cos(iTime * 0.2- float(i)*0.2) * cos(iTime + uv.x * 10.12) * 0.15), 0.04 - float(i)*0.001, 0.05);\n    }\n    // Output to screen\n    fragColor = vec4(col.x, col.y, col.z,1.0);\n} ","name":"Image","description":"","type":"image"}]}