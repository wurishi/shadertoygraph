{"ver":"0.1","info":{"id":"wtGcWD","date":"1611029642","viewed":97,"name":"2D light effect","username":"tpsoftware","description":"light testing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float power =100.0;\nmLight light1 = mLight(vec2(50,50),100.0,0.05);\nmLight light2 = mLight(vec2(250,150),100.0,0.5);\nmLight light3 = mLight(vec2(400,250),200.0,1.0);\nmLight light4 = mLight(vec2(750,400),100.0,2.0);\nvec3 abberration = vec3(0.7,0.4,0.3);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 muv = iMouse.xy/iResolution.xy;\n    mLight light = mLight(iMouse.xy,200.0,0.5);\n    // Time varying pixel color\n    //float distanceFall = 1.0-length(uv-muv);\n    //float i =pow(distanceFall,1.0/power);\n    //\n    float i =lightPower(light,fragCoord);\n    i +=lightPower(light1,fragCoord);\n    i +=lightPower(light2,fragCoord);\n    i +=lightPower(light3,fragCoord);\n    i +=lightPower(light4,fragCoord);\n    vec3 col = mix(vec3(0.0),texture(iChannel0,uv).xyz,i);\n    col = colorAbberation(abberration,col);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float PI = 3.14;\n\nstruct mLight{\n    vec2 position;\n    float power;\n    float fall;\n};\n\nfloat lightPower(mLight light, vec2 fragPos)\n{\n    float distanceFall = length(fragPos-light.position);\n    float power = light.power/(2.0*pow(PI,light.fall)*distanceFall);\n    return power;\n}\nvec3 colorAbberation(vec3 factor,vec3 color){\n    return vec3(color.r*factor.r,color.g*factor.g,color.b*factor.b);\n}","name":"Common","description":"","type":"common"}]}