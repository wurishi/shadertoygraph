{"ver":"0.1","info":{"id":"43BSDd","date":"1711203069","viewed":22,"name":"Pulsating Waltz Ex.","username":"billrockx","description":"The Book of Shader Exercise.\nShapes - distance field.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tbos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define PI 3.141592\n\nvec2 rotate(vec2 point, float angle) {\n    return vec2(point.x*cos(angle) - point.y*sin(angle),\n               point.y*cos(angle) + point.x*sin(angle));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st = fragCoord/iResolution.xy;\n    float timeByPI = iTime/PI;\n    \n    float d0 = distance(st,vec2(0.4) + rotate(vec2(0.1), timeByPI)) * (abs(1.0-sin(timeByPI * 10.0) * 0.1));\n    float d1 = distance(st,vec2(0.6) + rotate(vec2(0.1), -timeByPI)) * (abs(1.0-sin(timeByPI * 10.0) * 0.1));\n\n    d0 = 0.2-smoothstep(0.1, 0.5, d0);\n    d1 = 0.2-smoothstep(0.1, 0.5, d1);\n    vec3 d0Color = vec3(d0) * vec3(abs(rotate(vec2(1.0, 0.0), timeByPI)), 0.0) * abs(1.0-sin(timeByPI)/2.0);\n    vec3 d1Color = vec3(d1) * vec3(1.0, abs(rotate(vec2(0.0, 1.0), timeByPI))) * abs(1.0-sin(timeByPI)/2.0);\n    vec3 final = max(d0Color, d1Color);\n    vec3 color = final;\n\n\tfragColor = vec4( color, 1.0 );\n}","name":"Image","description":"","type":"image"}]}