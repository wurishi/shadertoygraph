{"ver":"0.1","info":{"id":"wssBW7","date":"1588423462","viewed":114,"name":"Soundfields","username":"_pwd_","description":"Sound-raymarching-thingy","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["raymarching","noise","sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4t2GWw","filepath":"https://soundcloud.com/mark-r-3/vanishing-point","previewfilepath":"https://soundcloud.com/mark-r-3/vanishing-point","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define pi 3.14159265\n#define R(p, a) p=cos(a)*p+sin(a)*vec2(p.y, -p.x)\n#define hsv(h,s,v) mix(vec3(1.), clamp((abs(fract(h+vec3(1., 1., 3.)/3.)*6.-3.)-1.), 0., 1.), s)*v\n\nfloat smallBeat, mediumBeat, bigBeat;\n\nfloat pn(vec3 p) { //noise @Las^Mercury\n\tvec3 i = floor(p);\n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\n\tvec3 f = cos((p-i)*pi)*(-.5) + .5;\n\ta = mix(sin(cos(a)*a), sin(cos(1.+a)*(1.+a)), f.x);\n\ta.xy = mix(a.xz, a.yw, f.y);\n\treturn mix(a.x, a.y, f.z);\n}\n\nfloat fpn(vec3 p) {\n\treturn pn(p*.06125)*.5 + pn(p*.125)*.25 + pn(p*.25)*.125;\n}\n\nfloat field(vec3 hitpoint,float r,float R) {\n\n\tif ( sin(iChannelTime[0]) > .5 ) {\n\t\t \n\t\t return (cos( hitpoint.x ) + cos( hitpoint.y ) + cos( hitpoint.z )) + r*1.2;\n\t\n\t} else {\n\t\t \n\t\t return length(vec2(length(sin(hitpoint.yz + sin(hitpoint.xy))*cos(hitpoint.yz + cos(hitpoint.yx))+sin(hitpoint.xy)) - r, sin(hitpoint.x) - r)) - R;\t\t//} else if(mediumBeat>0.1) {\n\n\t}\n\t\n}\n\t\nfloat distfunc(vec3 pos) {\n\tfloat t = iTime * 0.01;\n\tvec3 rotpos=mat3(vec3(cos(t*1.63),0.0,-sin(t*1.63)),vec3(0.0,1.0,0.0),vec3(sin(t*1.63),0.0,cos(t*1.63)))*mat3(vec3(cos(t*1.2),-sin(t*1.2),0.0),vec3(sin(t*1.2),cos(t*1.2),0.0),vec3(0.0,0.0,1.0))*(pos-vec3(1.0,1.0,-4.0));\n\treturn field(rotpos,(0.6 * smallBeat)+0.4 + (0.6 * bigBeat),(0.5 * mediumBeat)+0.45 + (0.5 * bigBeat)) + fpn(rotpos*30.+ t*25.) * 0.15;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t\n\tfloat x = uv.x;\n\tfloat y = uv.y;\n\t\n\tvec3 ray_dir  = normalize( vec3( x, y, -1.0 ) );\n\tvec3 ray_orig = vec3( 5.0, 1.0, 2.0 );\n\t\n\tfloat j, w, ld, td= 0.,offs = 0.0;\n\tvec3 tc = vec3(0.);\n\t\t\t\t\n\t\n\tfloat fft = texture( iChannel0, vec2(uv.x,1.75) ).x;\n\tvec3 sync = vec3( fft, 4.0*fft*(1.0-fft), 1.0-fft ) * fft;\n\n\tsmallBeat  = sync.r * 0.1;\n\tmediumBeat = sync.g * 0.1;\n\tbigBeat    = sync.b * 0.1;\t\n    \n\tfor( float i = 0.0; i < 50.0;i += 1.0 ) {\n\t\t\n\t\tfloat dist = distfunc(ray_orig+ray_dir*offs);\n\t\toffs+=dist;\n\t\t\t\n\t\tif ( abs(dist) < .05 ) {\n\t\t\t \n\t\t\t ld = 0.05 - dist;\n\t\t\t w = (1. - td) * ld;   \n\t\t\t\n\t\t\t tc = tc + w * hsv(w*3.-0.5, 1.-w*20., 1.) * hsv(w*3.-0.5, 1.-w*20., 1.); \n\t\t\t td = td + w ;\t\n\t\t}\t\n\t\t\n\t\ttd += 1./200.;\t\t\t\n\t\t\n\t\tif(abs(dist)<0.0001) break;\n\t\telse if(offs>50.0) break;\n\t\t\t\n\t}\n\t\n\tfragColor = vec4( tc + mediumBeat * 0.001, 1.0);\n\t\n}","name":"Image","description":"","type":"image"}]}