{"ver":"0.1","info":{"id":"4ccGzS","date":"1711806206","viewed":31,"name":"Hello shadertoy","username":"philmik93","description":"my first shader made with shadertoy","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["time","sinus","noiseminer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nfloat band(float t, float start, float end, float blur)\n{\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1*step2;\n}\n\n\nfloat rect(vec2 uv, float left, float right, float bottom, float top, float blur)\n{\n    float band1 = band(uv.x, left, right, blur);\n    float band2 = band(uv.y, bottom, top, blur);\n    return band1*band2;\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float aspectRatio = iResolution.x / iResolution.y;\n    vec2 uv = ((fragCoord.xy / iResolution.xy) - 0.5) * vec2(aspectRatio,1);\n    \n    vec3 col = vec3(0.0);\n\n    \n    uv.y += 0.1*(2.0*sin(0.8*iTime)+5.0)*sin((uv.x+iTime*0.2)*15.0);\n    \n\n    float mask = 0.0;\n    for(float i = -2.0; i < 40.0; i+=0.1)\n    {\n        mask += rect(uv, -0.4, 0.4, i-0.01, i+0.01, 0.01);\n    }\n    \n    col = vec3((sin(iTime)+1.0)/2.0, (cos(iTime)+1.0)/2.0, 1.0) * mask;\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}