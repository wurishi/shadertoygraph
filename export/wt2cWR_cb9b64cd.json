{"ver":"0.1","info":{"id":"wt2cWR","date":"1594157618","viewed":285,"name":"flamey circle tail thing","username":"sh1boot","description":"not finished","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["circle","mask","dissipation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(in float x) {\n    x = log2(abs(x) + 0.000001);\n    x = fract(sin(x) * 21.56789 + cos(x) * 11.98765);\n    return fract(x + 2.0);\n}\n\nfloat random(in float x, in float y) {\n    return random(sin(x * 7.1010101) + cos(y * 9.3131313) + 2.1);\n}\n\nvec2 bubble(int slice, int i) {\n    float fs = fract(float(slice) * 0.1);\n    float f = float(i) + 123.45 * fs;\n    return vec2(\n        random(1.5 * f, 3.1415926 * f) * 2.0,\n        random(2.5 * f, 1.6180340 * f) * 0.1 + fs);\n}\n\nfloat tail(float y, float t) {\n    return (sin(t - y) + sin((t - y) * 3.1)) * 0.2 + 0.5;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n#if 1\n    uv.y = (uv.y - .5) * iResolution.y / iResolution.x + .5;\n#else\n    uv.x = (uv.x - .5) * iResolution.x / iResolution.y + .5;\n#endif\n    #if 0\n    float radius = 0.04;\n#else\n    float radius = 0.005 + uv.y * 0.15;\n#endif\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5 * cos(iTime+uv.xyx+vec3(0,2,4));\n\n    float t = fract(iTime * 0.3);\n    float y = fract(uv.y - t);\n    for (int j = -1; j < 2; ++j) {\n        int row = int(y * 10.0) + j;\n        for (int i = 0; i < 45; i++) {\n            vec2 bub = bubble(row, i);\n            bub.y = fract(bub.y + t);\n            float x = tail(bub.y, iTime * 0.3);\n            if (distance(x, bub.x) < 0.075) bub.x += 0.15;\n\n            col *= smoothstep(radius, radius*1.01, distance(uv, bub));\n        }\n    }\n    float p = tail(uv.y, iTime * 0.3);\n    col *= 1.0 - smoothstep(0.1,0.11, distance(p, uv.x));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}