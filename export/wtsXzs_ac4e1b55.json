{"ver":"0.1","info":{"id":"wtsXzs","date":"1563989558","viewed":91,"name":"(S.O.S.)","username":"Kapsy","description":"Demo or Die!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kapsy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//DEMO OR DIE!. KAPSY - S.O.S. ver1\n#define time fGlobalTime\n    mat2 rot(float a){ return mat2(cos(a),sin(a),-sin(a),cos(a));}\n  \n  float smin(float a, float b, float h){\n    float k = clamp((a-b)/h*0.5+0.5,0.,1.);\n    return mix(a,b,k)-k*(1.-k)*h;\n    }\n  \nfloat cv1 = 0.;\nfloat sphere(vec3 p){\n   p.xy*=rot(fract(iTime));\n  \n   p = abs(p);\n   p.x-=0.5;\n   p.y-=0.5;\n   float a = length(p)-0.4;\n   cv1 = 0.1/(0.1+a*a);\n   return a;\n  }\n \nfloat cv2 =0.;  \nfloat box(vec3 p, vec3 b){\n  p = abs(p)-b;\n  float f = max(p.x,max(p.y,p.z));\n  cv2 = 0.1/(0.1+f*f);\n  return f;\n  }\n  \n     float cv5 =0.; \n  float mouth(vec3 p){\n    p.y-=2.3;\n    p.z+=0.7;\n    float f = sqrt(length(p.zy)+length(p.yx))-mix(0.4,0.3,sin(iTime*4.));\n    cv5 = 0.1/(0.1+f*f);\n    return f;\n    }\n\n  \n   float cv3 = 0.;\n  float cv4 = 0.;\n  float face(vec3 p){\n     p.xz*=rot(mix(-0.4+0.3,0.4,sin(iTime)));\n     float f = length(p+vec3(0.,-3.,0))-0.8;\n     float e = length(p+vec3(0.2,-2.9,1.))-0.010;\n    float e2 = length(p+vec3(-0.2,-2.9,1))-0.010;\n     float m = mouth(p);    \n     //vec3 x = vec3(m);   \n     e = min(e,e2);\n     cv3 = 0.1/(0.1+f*f);\n     cv4 = 0.1/(0.1+e*e);\n     e = min(e,m);\n     return smin(e+e/2.,f,0.6);   \n    }\n    float uhi(vec3 p,float r){\n      return length(p)-r;\n      }\n    \n    float cv7= 0.;\n  float face2(vec3 p){\n     float f = length(p+vec3(0.,-3.,0))-0.8;\n     float e = length(p+vec3(0.2,-2.9,1.))-0.010;\n    float e2 = length(p+vec3(-0.2,-2.9,1))-0.010;\n     float m = mouth(p);    \n     e = min(e,e2);\n     cv7 = 0.1/(0.1+f*fract(f));\n     cv7 = 0.1/(0.1+e*e);\n     e = min(e,m);\n     float uhi = uhi(p,0.6);\n     float comp = smin(e+e/2.,f,0.6);\n     return min(uhi,comp);    \n    }\n\nfloat SDF3(vec3 p){\n   \n   float b = box(p,vec3(0.4,1,1));\n  float b2 = b-box(p,vec3(0.3,1,1));\n   b = max(b,-b2);\n   float a  = sphere(p);\n      float sc = min(b,a);\n  \n   return sc;\n  }\n  \n  \n  \n  float exit(vec3 p){\n    \n \n    p.x=abs(p.x-sin(mix(0.3-0.210,-0.3,sin(iTime))));\n   \n    float exit = box(p+vec3(0.,-5.25,0),vec3(1.5,1,1));\n     float exit2 = box(p+vec3(0.,-5.25,0),vec3(3,1,0.8));\n     exit = max(-exit,exit2);\n     vec4 fon;\n      if(p.y>9.) {fon  = texture(iChannel1,vec2(p.x/p.y));\n     exit= min(exit,fon.x); }\n     return exit;\n       \n     \n    }\n  float cv8 = 0.;\n  float cry(vec3 po){\n    float cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,fract(-iTime/5.)),0.9),0.050);\n    \n    if(iTime >5. && iTime <10.) cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,asin(-iTime/5.)),0.9),0.050);\n    if(iTime >15. && iTime<20.) cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,asin(-iTime/5.)),0.9),0.050);\n    if(iTime >25. && iTime <30.) cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,asin(-iTime/5.)),0.9),0.050);\n    if(iTime >35. && iTime<40.) cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,asin(-iTime/5.)),0.9),0.050);\n    if(iTime >45. && iTime <50.) cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,asin(-iTime/5.)),0.9),0.050);\n    if(iTime >55. && iTime<60.) cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,asin(-iTime/5.)),0.9),0.050);\n    if(iTime >65. && iTime <70.) cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,asin(-iTime/5.)),0.9),0.050);\n    if(iTime >75. && iTime<80.) cry = uhi(po+vec3(0.45 ,mix(-4.46,-4.6,asin(-iTime/5.)),0.9),0.050);\n     if(iTime >85.);\n    \n    cv8 = 0.1/(0.1+cry*cry);\n    return cry;\n    }\n  \n  float SDF2(vec3 p,vec3 po){\n     vec3 ppo = po;\n     float sc = SDF3(p);\n     float f = face(po);\n     float e = exit(ppo);\n     float cry = cry(po);\n\n     \n     po.y+=-3.150;\n     float fs = face2(vec3(po.x/2.,po.y*2.,po.z));\n      fs = min(fs,min(e,min(sc,f)));\n      return min(cry,fs);    \n    }\n\nfloat SDF(vec3 p){\n   vec3 pp = p;\n    float t = mod(fract(iTime),600.);\n    pp.z=mod(pp.z+iTime*4.,-3.145926);\n    for(float i=0.; i<6.;i++){\n        \n     pp = abs(pp);\n        \n        pp.y-=i*0.050;\n     // pp.x=fract(pp.x-pp.y);\n        pp.x-=mix(1.3,0.5,sin(iTime));}\n    if(pp.y>0.2) pp.y=mod(pp.y*0.6,0.);\n    if(pp.x>0.2) pp.x=mod(pp.x+pp.y*0.5,3.1)-2.5;\n    return SDF2(pp,p);\n  }\n  \n  \n  \n  \n  \nvec3 cam(vec3 ro, vec3 t, vec2 uv, float a){\n    vec3 f = normalize(t-ro);\n    vec3 l = normalize(cross(vec3(0,1,0),f));\n    vec3 u = normalize(cross(f,l));\n    return normalize(f*a+l*uv.x+u*uv.y);\n  }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n   // vec2 uv = fragCoord/iResolution.xy;\n/////////////////////////////////////////////////////////\n    \n\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1.);\n  vec2 uv2 = uv;\n  vec2 tel = -uv;\n  vec4 wat = texture(iChannel0,uv2-iTime);\n uv2+wat.xy;\n  \n  vec3 uv3 = vec3(uv2,0.);\n  \n  uv3.xy*=rot(iTime);\n  vec3 ro = vec3(0.,4.3,-3); vec3 p =ro;\n  \n  vec3 t = vec3(0.,0.5,4.9);\n  vec3 rd = cam(ro,t,uv,0.5);\n  \n  float dd = 0.0;\n  vec3 col = vec3(0.);\n  for(int i=0; i<100; i++){\n     \n     float d = SDF(p);\n     if(d<0.001) {break;}\n     if(dd>100.) {dd=100.; break;}\n     p+=d*rd;\n     dd+=d;\n    }\n  vec4 sh= texture(iChannel0,uv);\n \n\n  vec2 eps = vec2(0.001,0);\n  vec3 n = normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n  vec3 l = normalize(-vec3(0,2,3));\n  float fog = 1.-clamp(dd/100.,0.,1.);\n  vec3 h = normalize(l-rd);\n  col+=dot(n,l)*fog;\n  col+=cv1*vec3(0.,0.8,0.);\n  col+=cv2*vec3(1.,0.,0.);\n  col+=cv3*vec3(0.300, 0.340, 0.450)*sh.xyz;\n  col+=cv4*vec3(10,0.,0.)+pow(max(0.,dot(n,h)),100.);\n  col+=cv5*vec3(0,2,0)*pow(max(0.,dot(n,h)),500.);\n  col+=cv7*vec3(0.,mix(1.,2.,tan(iTime)),0);\n  col+=cv8*vec3(0.,0.,1);\n  col+=vec3(0.,0.,0.1)-0.3;\n   \n  if(uv.y>0.225) col+=smoothstep(0.5,1.,vec3(0.,0.,5.));\n  if(uv.y<0.225) col+=uv3;\n  \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}