{"ver":"0.1","info":{"id":"Wd3SWl","date":"1573081366","viewed":166,"name":"[phreax] cube waves","username":"phreax","description":"Experimenting with grid offsets","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","grid","cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tt, cy; \n\nmat2 rot(float a) {\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n\nfloat box(vec3 p, vec3 r) {\n\tp = abs(p) - r;\n    return length(max(p, 0.)) + min(max(p.x, max(p.y, p.z)), 0.);\n}\n\nvec2 repeat(inout vec2 p, vec2 s) {\n    vec2 id = floor(p/s-.5);\n    // p = (fract(p/s-.5)-.5)*s;\n    p = mod(p+.5*s, s)-.5*s;\n    return id;\n}\n\n\nfloat N21(vec2 p) {\n\treturn fract(sin(dot(p, vec2(341.234, 934.838)))*34234.23);\n}\n\n\nfloat map(vec3 p) {\n    vec2 id = repeat(p.xz, vec2(3.2));\n    float h = N21(id);\n    vec2 c = vec2(1, -5.);\n    float s = cos(length(id+c)+tt*2.)*.3 +.6;\n    float w = sin(length(id+c)*0.7+tt*3.)*1.5;\n    p.y += (exp(w)-1.5)*.7;\n    cy = p.y;\n    p.xy *= rot(h+0.3*tt*h*sign(h-.5));\n  \n    return (box(p, vec3(s))-.1);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    tt = iTime;\n    \n\tvec3 ro = vec3(0, -10., -20),\n         rd = normalize(vec3(-uv, .7)),\n         l = normalize(vec3(0, -1, -4.));\n    \n    rd.yz *= rot(.6);\n    \n    vec3 col, bg;\n    col = bg = mix(vec3(.78, .97, .99), vec3(.3), -(uv.y-0.3));  \n    \n    \n    float i, d, t = 0.1;\n    \n    vec3 p;\n    for(i=0.; i<100.; i++) {\n     \tp = ro + t*rd;\n    \td = map(p);\n        if(t < 0.0001 || t > 90.) break;       \n\t\tt += d;\n    }\n    \n    vec2 e = vec2(.0005, -.0005);\n    if(d < 0.001) {\n        \n        vec3 n = normalize(e.xyy*map(p+e.xyy) + e.yyx*map(p+e.yyx) +\n                           e.yxy*map(p+e.yxy) + e.xxx*map(p+e.xxx));\n        \n        float ch = p.y - cy; // cube height\n        float dif = max(dot(n, normalize(p-l)), .0);\n        float fog = 1.-exp(-.00002*t*t*t);\n        \n        // subsurface scattering from evvvvil\n        float sss = smoothstep(0., 1., map(p+l*.4));\n        \n        vec3 al = mix(vec3(0.1, 0.6, 0.8)*.9, vec3(.15, 0, 1), ch);\n        col = al*.4 + 0.8*al*(dif+sss);\n        col = mix(col, bg, 0.5*fog);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}