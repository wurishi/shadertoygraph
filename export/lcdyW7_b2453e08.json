{"ver":"0.1","info":{"id":"lcdyW7","date":"1730757292","viewed":50,"name":"Frame for the photo","username":"mudrahel","description":"Frame for the photo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["border","frame","photointheframe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n\n    vec4 borderColor = vec4(0.0); // Black frame\n\n    // Set the border width in pixels\n    float borderWidthInPixels = 50.0; // Example: 50 pixels\n\n    // Normalize the thickness for both dimensions\n    float thicknessX = borderWidthInPixels / iResolution.x; // Normalize thickness to the width\n    float thicknessY = borderWidthInPixels / iResolution.y; // Normalize thickness to the height\n\n    // Check if the current pixel is within the frame area\n    if (uv.x < thicknessX || uv.x > 1.0 - thicknessX || \n        uv.y < thicknessY || uv.y > 1.0 - thicknessY) \n    {\n        fragColor = borderColor; // Set border color\n    } \n    else \n    {\n        fragColor = color; // Original texture color\n    }\n}\n","name":"Image","description":"","type":"image"}]}