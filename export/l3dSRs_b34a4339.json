{"ver":"0.1","info":{"id":"l3dSRs","date":"1719429377","viewed":36,"name":"Conway's Game of life","username":"snurf08","description":"Conway's game of life","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["game"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Output to screen\n    fragColor = texture(iChannel0,fragCoord.xy/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"precision highp float;\n\n#define S 5.f\n\n// Use to load in patterns\nbool enabled = true;\nivec2 offset = ivec2(1,2);\nint width = 37;\nint pattern[] = int[](\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,\n    0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,\n    0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\n);\n\nvec2 dirs[] = vec2[](\n    vec2(S,0),\n    vec2(S,S),\n    vec2(0,S),\n    vec2(-S,S),\n    vec2(-S,0),\n    vec2(-S,-S),\n    vec2(0,-S),\n    vec2(S,-S)\n);\n\nvec2 trns(vec2 v2t,vec2 ires) {\n    if(v2t.x < 0.f) v2t.x += ires.x;\n    if(v2t.y < 0.f) v2t.y += ires.y;\n    \n    if(v2t.x > ires.x) v2t.x -= ires.x;\n    if(v2t.y > ires.y) v2t.y -= ires.y;\n    \n    return v2t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    int diffX = int(fragCoord.x-0.5f)%int(S);\n    int diffY = int(fragCoord.y-0.5f)%int(S) ;\n    if(diffX != 0 || diffY != 0) {\n        if((diffX==0 || diffY==0)) {\n            if(iTime < .1f) fragColor = vec4(1);\n            if(iTime < .2f) return;\n            \n        }\n        fragColor = texture(\n            iChannel0,\n            (fragCoord.xy-vec2(float(diffX),float(diffY)))/iResolution.xy\n        );\n        return;\n    }\n    \n    \n    \n    vec2 ires = iResolution.xy;\n    vec2 coord = fragCoord.xy;\n    vec2 mouse = iMouse.xy;\n    \n\n     \n    \n    if(distance(coord,mouse-vec2(S/2.f)) < S/1.5f && iMouse.z > 0.f) {\n        fragColor = vec4(1);\n        return;\n    }\n    \n    \n    ivec2 icoord = ivec2(coord/S)-offset;\n   \n    if(iTime < .1f) {\n        \n        if(enabled && width>icoord.x && icoord.y>=0) {\n            if(pattern.length()/width>icoord.y && icoord.y>=0) {\n                fragColor = vec4(float(pattern[icoord.x+icoord.y*width]));\n                return;\n            }\n        }\n        fragColor = texture(iChannel0,coord/ires);\n        return;\n    };\n    \n    \n    \n    \n    bool me = length(texture(iChannel0,(coord)/ires.xy))>1.f;\n    \n    int score = 0;\n    for(int i = 0;i < 8;i++) {\n        if(length(texture(iChannel0,trns(coord+dirs[i],ires)/ires.xy))>1.f) score++;\n    }\n    \n    \n    if(me && score < 2) {\n        fragColor = vec4(0);\n    }else if(me && score < 4) {\n        fragColor = vec4(1);\n    }else if(me && score > 3) {\n        fragColor = vec4(0);\n    }else if(!me && score==3) {\n        fragColor = vec4(1);\n    }else{\n        fragColor = vec4(0);\n    }\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"}]}