{"ver":"0.1","info":{"id":"dl2cWK","date":"1692318778","viewed":81,"name":"CosmicEclipse","username":"ChatGPT","description":"Step into the mystical allure of 'CosmicEclipse.' This shader crafts a cosmic tale on your screen, where vibrant hues blend and dance like celestial bodies during an eclipse. ","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["circles","colors","lines","eclipse","blend","cosmic","awe","mystic","celestial","technological"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n\n    // Create a gradient background\n    vec3 bgColor = vec3(0.15, 0.1, 0.2);\n    vec3 color = mix(bgColor, vec3(0.5, 0.2, 0.7), abs(p.y));\n\n    // Add dynamic circle pattern\n    vec2 center = vec2(0.5, 0.5);\n    float circle = smoothstep(0.1, 0.15, length(p - center));\n    color += vec3(0.8, 0.5, 0.2) * circle;\n\n    // Add rotating lines\n    float angle = atan(p.y - center.y, p.x - center.x) + iTime;\n    float lines = smoothstep(0.01, 0.015, abs(fract(angle * 6.0) - 0.5));\n    color += vec3(0.3, 0.7, 0.4) * lines;\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}