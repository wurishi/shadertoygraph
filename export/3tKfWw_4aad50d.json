{"ver":"0.1","info":{"id":"3tKfWw","date":"1614461481","viewed":235,"name":"Thunder by Brandon","username":"jorge2017a1","description":"Thunder by Brandon","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["thunderbybrandon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Stormy Night\n// By: Brandon Fogerty\n// bfogerty at gmail dot com \n// xdpixel.com\n\n\nfloat Hash( vec2 p)\n{\n     vec3 p2 = vec3(p.xy,1.0);\n    return fract(sin(dot(p2,vec3(37.1,61.7, 12.4)))*3758.5453123);\n}\n\nfloat noise(in vec2 p)\n{\n    vec2 i = floor(p);\n     vec2 f = fract(p);\n     f *= f * (3.0-2.0*f);\n\n    return mix(mix(Hash(i + vec2(0.,0.)), Hash(i + vec2(1.,0.)),f.x),\n               mix(Hash(i + vec2(0.,1.)), Hash(i + vec2(1.,1.)),f.x),\n               f.y);\n}\n\nfloat fbm(vec2 p)\n{\n     float v = 0.0;\n     v += noise(p*1.0)*.5;\n     v += noise(p*2.)*.25;\n     v += noise(p*4.)*.125;\n     return v;\n}\n\nvec3 clouds( vec2 uv, vec2 dir )\n{\n\tdir *= iTime;\n\tvec3 finalColor = fbm( (uv * 1.5) + dir ) * vec3( 1.0 );\t\n\t\n\treturn finalColor;\n}\n\nvec3 lightning( vec2 uv )\n{\n\tfloat timeVal = iTime;\n\tvec3 finalColor = vec3( 0.0 );\n\tfor( int i=0; i < 3; ++i )\n\t{\n\t\tfloat indexAsFloat = float(i);\n\t\tfloat amp = 40.0 + (indexAsFloat*1.0);\n\t\tfloat period = 2.0 + (indexAsFloat+2.0);\n\t\t\n\t\tfloat thickness = mix( 0.1, 0.7, uv.y * 0.5 + 0.5 );\n\t\t\n\t\tfloat intensity = mix( 0.5, 1.5, noise(uv*10.0) );\n\t\tfloat t = abs( thickness / (sin(uv.x + fbm( uv + timeVal * period )) * amp) * intensity );\n\t\tfloat show = fract(abs(sin(timeVal))) >= 0.95 ? 1.0 : 0.0;\n\t\tshow *= step( abs(fbm( vec2( sin(iTime * 50.0), 0.0 ) )), 0.4);\n\t\t\n\t\t\n\t\tfinalColor +=  t * vec3( 0.3, 0.5, 2.0 ) * show;\n\t}\n\t\n\treturn finalColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = ( fragCoord.xy / iResolution.xy ) * 2.0 - 1.0;\n\tuv.x *= iResolution.x/iResolution.y;\n\t\n\n\tvec3 finalColor = vec3( 0.0 );\n\tfinalColor += sin( clouds( uv, vec2( 1.0, 0.1 ) ));\n\t\n\tfloat xOffset = mix( 1.5, -1.5, fbm(vec2( fract(iTime), 0.00 ) ) );\n\tvec2 uvOffset = vec2( xOffset, 0.0 );\n\t\n\tvec2 lightningUV = uv + uvOffset;\n\t\n\tfloat theta = 3.14159 * 2.1;\n\tlightningUV.x = uv.x * cos(theta) - uv.y*sin(theta); \n\tlightningUV.y = uv.x * sin(theta) + uv.y*cos(theta); \n\t\n\t\n\tfinalColor += lightning( lightningUV + uvOffset );\n\t\n\tfinalColor -= sin( clouds( uv, vec2( 2.0 ) )) * 0.30;\n\n\t\n\tfragColor = vec4( finalColor, 1.0 );\n\n}\n\n","name":"Image","description":"","type":"image"}]}