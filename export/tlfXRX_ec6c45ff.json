{"ver":"0.1","info":{"id":"tlfXRX","date":"1563699862","viewed":134,"name":"RayMarchingBand011","username":"Hirai_worthless","description":"donut rush.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nfloat map(vec3 p){\n    vec2 t = vec2(0.3, 0.05);\n    vec3 q = p;\n    vec3 r = p;\n    p = fract(p / 2.0) * 2.0 - 0.5;\n    p.yz *= mat2(cos((iTime - 1.0/2.0) * PI),-sin((iTime - 1.0/2.0) * PI)\n                 ,sin((iTime - 1.0/2.0) * PI),cos((iTime - 1.0/2.0) * PI));\n    vec2 r1 = vec2(length(p.xy) - t.x, p.z);\n    float torus1 = length(r1) - t.y;\n    q = fract(q / 2.0) * 2.0 - 1.5;\n    q.yz *= mat2(cos((-iTime - 1.0/2.0) * PI),-sin((-iTime - 1.0/2.0) * PI)\n                 ,sin((-iTime - 1.0/2.0) * PI),cos((-iTime - 1.0/2.0) * PI));\n    vec2 r2 = vec2(length(q.xy) - t.x, q.z);\n    float torus2 = length(r2) - t.y;\n    r = fract(r / 2.0) * 2.0 - 1.0;\n    float tubes = min(length(r.xz -vec2(0.5,0)) - 0.1,length(r.yz -vec2(0.5,0)) - 0.1);\n    \n    return min(min(torus2,torus1),tubes);\n}\n\nconst float EPS = 0.001;\nvec3 getNormal(vec3 p) {\n    return normalize(vec3(\n        map(p + vec3(EPS, 0.0, 0.0)) - map(p + vec3(-EPS,  0.0,  0.0)),\n        map(p + vec3(0.0, EPS, 0.0)) - map(p + vec3( 0.0, -EPS,  0.0)),\n        map(p + vec3(0.0, 0.0, EPS)) - map(p + vec3( 0.0,  0.0, -EPS))\n    ));\n}\n\nvec4 trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p = vec3(0.0,0.0,0.0);\n    \n    for(int i = 0; i < 96; ++i){\n        p = o + r * t;\n        float d = map(p);\n        t += d * 0.2;\n    }\n    return vec4(getNormal(p),t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.0));\n    vec3 o = vec3(0.5,0.5,iTime);\n    vec4 data = trace(o,r);\n    float t = data.w;\n    float fog = 1.0 / (1.0 + t * t * 0.2);\n    vec3 fc = mix(vec3(0.5 - data.x,0.5 -data.y,0.5-data.z),vec3(0),1.0 - fog);\n    vec3 col1 = vec3(sin(iTime),cos(iTime),1);\n    vec3 col2 = vec3(1);\n\tfc = mix(col1/2.0,col2,fog);\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}