{"ver":"0.1","info":{"id":"3sdyWs","date":"1602751924","viewed":111,"name":"EpicGraph","username":"ShaderGuy57","description":"A graph","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["graph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\nvec2 MIDDLE = vec2(0.,0.);\nfloat SCALE = 5.;\n\nfloat f (float x) {\n    return sin(10.*sin(iTime)*x);\n}\n\nfloat grid (vec2 pos, float gridSize) {\n    float g = 0.;\n    g += step(abs(pos.x), 0.005*SCALE);\n    g += step(abs(pos.y), 0.005*SCALE);\n    \n    g += step(abs(mod(pos.y, gridSize)), 0.002*SCALE);\n    g += step(abs(mod(pos.x, gridSize)), 0.002*SCALE);\n    return g;\n}\n\nfloat curve(vec2 UV) {\n    vec2 uv = UV;\n    vec2 pix = SCALE/iResolution.xy;\n    float y = uv.y;\n    float x = uv.x;\n    pix *= 5.;\n    \n    float left = f(x-pix.x) - f(x);\n    float right = f(x+pix.x) - f(x);\n    \n    float s = pix.y;\n    \n    float up = max(max(left, right), s);\n    float down = -min(min(left, right), -s);\n    \n    float lineUp = S(f(x), f(x)+up, y);\n    float lineDown = S(f(x), f(x)-down, y);\n    \n    float line = lineUp+lineDown;\n    return 1.-line;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5 * iResolution.xy ) / iResolution.y;\n    \n    uv += MIDDLE;\n    uv *= SCALE;\n    \n    vec3 col = vec3(1.);\n    col = mix(col, vec3(0.), grid(uv, 1.));\n    col = mix(col, vec3(1., 0., 0.), curve(uv));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}