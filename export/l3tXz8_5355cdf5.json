{"ver":"0.1","info":{"id":"l3tXz8","date":"1718643237","viewed":150,"name":"Shapes starter after @kishimisu","username":"trinketMage","description":"after @kishimisu\n","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["functions","shape","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(1, 0.5, 0.5);\n    vec3 b = vec3(0.75, 1.0, 0.6666);\n    vec3 c = vec3(0.5, 0.5, 0.5);\n    vec3 d = vec3(0.8, 1.0, 0.3333);\n\n    return a + b*cos(6.28318 *(c*t+d));\n}\n\n\n\nfloat sdVesica(vec2 p, float r, float d)\n{\n    p = abs(p);\n    float b = sqrt(r*r-d*d);\n    return ((p.y-b)*d>p.x*b) ? length(p-vec2(0.0,b))\n                             : length(p-vec2(-d,0.0))-r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 diffuseColor = vec3(0.0);\n    \n    for(float i = 0.; i < 1.5; i+= 0.5) {\n        uv = fract(uv * 2.) - 0.5;\n\n        float d = sdVesica(uv, 1.0, 0.5) * exp(-sdVesica(uv0, 1.0, 0.5));\n        vec3 color = palette(length(uv0) + i * .4 + iTime*.4);\n        d = sin(d *8. + iTime)/8.;\n        \n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        diffuseColor += color * d;\n    }\n    \n    fragColor = vec4(diffuseColor, smoothstep(0.0, 1.0, length(diffuseColor)) * 0.3);\n}\n\n/** SHADERDATA\n{\n\t\"title\": \"Shapes\",\n\t\"description\": \"Shapes starter after @kishimisu\",\n\t\"model\": \"nothing\"\n}\n*/","name":"Image","description":"","type":"image"}]}