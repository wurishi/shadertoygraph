{"ver":"0.1","info":{"id":"slySW1","date":"1640593144","viewed":65,"name":"More gamma correction","username":"shadyjoho","description":"Top third is gamma corrected using the common estimation of it, middle is the correct version (not very different!), and bottom is uncorrected.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gammacorrectiontest"],"hasliked":0,"parentid":"7tKXWR","parentname":"Gamma correction test, gradient"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// iq provides a good explanation to clear up confusion in the comments\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // gradient across x \n    float col = uv.x;\n    \n    if(uv.y >= .666) \n    {\n        // top third is gamma corrected before being sent to screen\n        col = pow( col, 1.0/2.2 );\n    }\n    else if (uv.y >= .333)\n    {\n        // middle is precise linear to sRGB transformation\n        if (col > 0.0031308) {\n            col = 1.055 * (pow(col, (1.0 / 2.4))) - 0.055;\n        } else {\n            col = 12.92 * col;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}\n","name":"Image","description":"","type":"image"}]}