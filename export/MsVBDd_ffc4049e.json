{"ver":"0.1","info":{"id":"MsVBDd","date":"1531161374","viewed":571,"name":"MÃ¶bius Music Visualization","username":"Firzen_","description":"I dig this.","likes":17,"published":1,"flags":64,"usePreview":0,"tags":["visualization","music","mbius"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"lsSXzt","filepath":"https://soundcloud.com/mrbongo/1-10-i-got-the","previewfilepath":"https://soundcloud.com/mrbongo/1-10-i-got-the","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float circleScale = 20.;\n\nvec2 Inversion(vec2 uv)\n{\n    return vec2(uv.x, -uv.y)/((uv.x*uv.x)+(uv.y*uv.y));\n}\n\nvec2 toCircle(vec2 uv)\n{\n    return floor(uv*circleScale+vec2(0.5));\n}\n\nfloat inCircle(vec2 uv)\n{\n    return smoothstep(0.5,0.42,length(uv));\n}\n\nvec3 circleColor(vec2 uv)\n{\n    float f = (uv.x+uv.y*2.)/(10.*circleScale);\n    return 0.7*vec3(\n        \ttexture(iChannel0, vec2(f+0.0005, 0)).r/2.,\n        \ttexture(iChannel0, vec2(f-0.15, 0)).r/2.,\n        \ttexture(iChannel0, vec2(f+0.15, 0)).r/2.\n        );\n}\n\nvec4 color(vec2 uv)\n{   \n    float f = texture(iChannel0, vec2(0.0005, 0)).r;\n    float f2 = texture(iChannel0, vec2(0.002, 0)).r;\n    \n    uv.y += sin(iTime+f+uv.x*30.)*f*0.02*cos(10.*uv.y+iTime+f);\n    \n    uv = Inversion(uv);\n    \n    vec2 circle = toCircle(uv);\n    \n    uv.x += sin(29.3*circle.y)*(iTime+f2)*0.1;\n    uv.x = mod(uv.x+0.5/circleScale, 20./circleScale) + 0.5/circleScale;\n    \n    circle = toCircle(uv);\n        \n    vec3 col = circleColor(circle);\n    \n    float scale = sin(iTime+f+3.*smoothstep(0.2,1.,length(col)));\n\n    return vec4(col,1.0) * inCircle(vec2(1./scale,1.)*(uv*circleScale-circle));\n}\n\nfloat centerCircleBlend(vec2 uv)\n{\n    return 1.-pow(length(uv)*3., 1.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float f = texture(iChannel0, vec2(0.0005, 0)).r;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5,0.5);\n    uv /= vec2(iResolution.y / iResolution.x, 1);\n    //uv -= iMouse.xy/iResolution.xy;\n\tvec3 c = mix(color(uv).rgb, vec3(0), centerCircleBlend(uv));\n    fragColor = vec4(c,1.);\n}","name":"Image","description":"","type":"image"}]}