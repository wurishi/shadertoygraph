{"ver":"0.1","info":{"id":"Xsyfz1","date":"1527552247","viewed":177,"name":"Rose curves","username":"lnae","description":"Playing with rose curves","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","rose"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    uv *= 4.0;\n    \n    float time = 0.5 * iTime;\n    float angle = atan(uv.y, uv.x) + 2.0 * sin(PI * time);\n    float radius = length(uv);\n    \n    float n = mod(floor(time + 3.0), 9.0);\n    float d = mod(floor(time / 9.0 + 5.0), 10.0) + 1.0;  \n    float k = n / d;\n    float offset = sin(2.6 * sin(1.9 * sin(PI * time)));\n\n    float res = 10000.0;    \n    for(float i = 0.0; i < d; i++){\n    \tangle += 2.0 * PI;\n        res = min(res, abs(radius - ( cos(k * angle) + offset)));\n        res = min(res, abs(-radius - (cos(k * (angle + PI)) + offset)));\n    }\n    \n    res = smoothstep(20.0 / iResolution.y, 0.0, res);\n    \n    fragColor = vec4(vec3(res),1.0);\n}","name":"Image","description":"","type":"image"}]}