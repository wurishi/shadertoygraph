{"ver":"0.1","info":{"id":"WdcBzS","date":"1605632456","viewed":101,"name":"Triangles animation","username":"dtsmio","description":"Animation","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["aimation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec2 line (vec2 a, vec2 b, vec2 p)\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = min(1., max(0., dot(pa, ba)/dot(ba, ba)));\n    \n    return vec2(length(pa - ba * h), h);\n}\n\n\nfloat ease(float x) {\n\treturn mix(4. * x * x * x, \n               1. - pow(-2. * x + 2., 3.) / 2., step(0.5, x));\n}\nfloat ease2(float x) {\n\treturn mix(pow(x/2., 0.5), \n               1. - pow(0.5 - x/2., 0.5), step(0.5, x));\n}\nfloat ease3(float x) {\n\treturn mix(0.5 + pow((x - 0.5) * 2., 2.)/2., \n               0.5 - pow((x - 0.5) * 2., 2.)/2., step(0.5, x));\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nfloat leftSide(vec2 a, vec2 b, vec2 p) {    \n \treturn 1. - step(0.0, (a.x - p.x) * (b.y - a.y) - (b.x - a.x) * (a.y - p.y));\n}\n\nfloat DrawLine(vec2 line, float prog) {\n    float size = 0.002;\n    line.x = smoothstep(size * 2., size, line.x);\n    float prog1 = pow(prog, 0.8);\n    float prog2 = pow(prog, 2.);\n\n    return line.x;\n    //return (smoothstep(1. - prog, 1. - prog, line.y) * line.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\tuv *= 1.8;\n    uv.y += 0.2;\n    float time = iTime * 0.6 + 1000.;\n    \n    \n    float sp = PI/1.5;\n    float a = floor(time * 0.) * sp;\n    vec2 cp1 = vec2(sin(a), cos(a));\n    vec2 cp2 = vec2(sin(a + sp), cos(a + sp));\n    vec2 cp3 = vec2(sin(a + sp * 2.), cos(a + sp * 2.));\n    \n    vec2 p1 = cp1;\n    vec2 p2 = cp2;\n    vec2 p3 = cp3;\n    \n    float pr = 0.;\n    float brd = 0.;\n    //pr = abs(fract(time) - 0.5) * 2.;\n    float num = 18.;\n    vec3 c1 = vec3(34, 124, 157)/255.;\n    vec3 c2 = vec3(23, 195, 178)/255.;\n    vec3 c3 = vec3(255, 203, 119)/255.;\n    vec3 c4 = vec3(254, 249, 239)/255.;\n    vec3 c5 = vec3(254, 109, 115)/255.;\n    float cnum = 5.;\n    vec3 col = vec3(0);\n\n    vec3 rc = c5;\n    vec2 tuv = uv;\n    float ins = 0.;\n    \n    for (float i = 0.; i < num; i++) {\n        //uv *= 1.1;\n        \n        pr = ease3(max(0., fract(-time / 4. - i * 0.) * 1. - 0.));\n        \n        if (fract(i / 2.) * 2. == 1.){\n            //pr = 1. - pr;\n        }\n\n        vec2 l1 = line(p1, p2, uv);\n        vec2 l2 = line(p2, p3, uv);\n        vec2 l3 = line(p3, p1, uv);\n        \n        ins = min(leftSide(p1, p2, uv), min(leftSide(p2, p3, uv), leftSide(p3, p1, uv)));\n\n        vec3 cc = vec3(0);\n        //cc *= vec3(sin(i * 24.12 + 2.) * 0.5 + 0.5, sin(i * 24.12 + 1.) * 0.5 + 0.5, sin(i * 35.23 + 3.) * 0.5 + 0.5);\n        if (abs(fract(i/cnum) * cnum - 0.) < 0.1) {\n         \tcc = c1;   \n        }\n        if (abs(fract(i/cnum) * cnum - 1.) < 0.1) {\n         \tcc = c2;   \n        }\n        if (abs(fract(i/cnum) * cnum - 2.) < 0.1) {\n         \tcc = c3;   \n        }\n        if (abs(fract(i/cnum) * cnum - 3.) < 0.1) {\n         \tcc = c4;   \n        }\n        if (abs(fract(i/cnum) * cnum - 4.) < 0.1) {\n         \tcc = c5;   \n        }\n        tuv = rotate(uv, i + time);\n\n        //cc += vec3(sin(tuv.x) * 0.5, sin(tuv.y) * 0.5, sin(tuv.x + tuv.y) * 0.5)/2.;\n            \n        rc = mix(rc, cc, ins);\n\n        brd = max(brd, DrawLine(l1, pr));\n        brd = max(brd, DrawLine(l2, pr));    \n        brd = max(brd, DrawLine(l3, pr));\n\n        p1 = cp1 + (cp2 - cp1) * pr;\n        p2 = cp2 + (cp3 - cp2) * pr;\n        p3 = cp3 + (cp1 - cp3) * pr;\n        cp1 = p1;\n        cp2 = p2;\n        cp3 = p3;\n        \n        //rc += DrawLine(l1, pr) * mix(c1, c2, sin(l1.y + time));\n        //rc += DrawLine(l2, pr) * mix(c1, c2, sin(l2.y - time));\n        //rc += DrawLine(l3, pr) * mix(c1, c2, sin(l3.y + time));\n        \n      \t//if (brd > 0.) break;\n\n    }\n    \n    col = rc;\n    col += brd/1.;\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}