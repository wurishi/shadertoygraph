{"ver":"0.1","info":{"id":"Xctyzn","date":"1730168858","viewed":41,"name":"Persistent state drawing pad v0","username":"8InfinityTaco8","description":"Testing and learning with shadertoy. I'm still very new to shaders and how they work, but I finally figured out how to get the persistent state working so hopefully i can figure out how do some pseudo simulations soon. Might update this one later.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["buffer","multipass","persistentstate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Main Image - This is what we actually see\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Just show what's in our \"photo memory\"\n    fragColor = texture(iChannel0, fragCoord.xy/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//ProfessorPixels verson\n\nvoid mainImage(out vec4 O, vec2 F) {O=texture(iChannel0,F/iResolution.xy);if (iMouse.z>.1 && length(F-iMouse.xy)<10.) O=vec4(1);if (iFrame<2) O=vec4(0,0,0,1);}\n\n\n//my old version for my understanding lol\n/*\n// Buffer A - This is like our \"photo memory\"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // First, look at our previous \"photo\" (what we drew last frame)\n    vec4 lastFrame = texture(iChannel0, fragCoord.xy/iResolution.xy);\n    \n    // If this is the very first frame, start with a blank canvas\n    if (iFrame == 0) {\n        fragColor = vec4(0, 0, 0, 1);  // Black screen\n        return;\n    }\n    \n    // If the mouse is pressed, draw a white dot\n    if (iMouse.z > 0.0) {\n        // Check if we're near the mouse\n        vec2 mousePos = iMouse.xy;\n        float dist = length(fragCoord.xy - mousePos);\n        \n        // If we're close to the mouse, make this pixel white\n        if (dist < 10.0) { //this number changes the size of the dot/streak\n            fragColor = vec4(1, 1, 1, 1);  // White dot\n            return;\n        }\n    }\n    \n    // If we didn't draw anything new, keep what was in the last frame\n    fragColor = lastFrame;\n}\n\n*/","name":"Buffer A","description":"","type":"buffer"}]}