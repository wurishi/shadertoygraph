{"ver":"0.1","info":{"id":"cdcfD2","date":"1697683469","viewed":53,"name":"Damaged VC | aykae","username":"aykae","description":"Simulating a damaged VCR playing a video","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    float thickness = 1./6.;\n    float speed = -0.1;\n    float aniY = uv.y + speed * iTime;\n    float staticStart = floor(aniY / thickness);\n    \n    vec2 warpedUv = uv;\n    \n    if (mod(staticStart, 6.) == 0.) {\n        warpedUv.x = uv.x + 0.01 * tan(sin(uv.y * dot(uv, uv) + 100. * iTime));\n    }\n    \n    //float jitter1 = 0.01 * sin(0.01 * dot(uv, iTime*uv));\n    \n    vec2 offset1 = vec2(0.01);\n    vec2 offset2 = vec2(-0.001);\n    vec2 offset3 = vec2(0.02);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n    \n    /*\n    #test\n    if (mod(staticStart, 6.) == 0.) {\n        r = mod(uv.y, thickness) / thickness;\n        g = 0.;\n        b = 0.;\n    }\n    */\n                      \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}