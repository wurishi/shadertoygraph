{"ver":"0.1","info":{"id":"Dlj3Rz","date":"1672767769","viewed":157,"name":"Iteration slicer","username":"Xerox1","description":"Was trying to figure how https://www.shadertoy.com/view/ddS3RR worked (by kishimisu)","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","tutorial","debug","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Was trying to figure how https://www.shadertoy.com/view/ddS3RR worked (by kishimisu)\n//Use smoothstep.io if you want to scrub floats with mouse\n\n#define S(a,b) mix(1., a, sin(b)*.5+.5)\n#define s (.34-1.)\n#define n iResolution\n\nvoid mainImage(out vec4 O, in vec2 F) {\n    float[200] x; //slices for d\n    float[200] y1; //slices for a.x\n    float[200] y2; //slices for a.y\n    float[200] y3; //slices for a.z\n    vec3 a,r,t = normalize(vec3((2.*F.xy-n.xy)/n.y*S(2.,s+3.14), 1.)); \n    float d, l=1.;\n    int i = 0;\n    while (i++ < 200 && d<150. && l>0.001) {\n        a = d*t; a.z+=0.21297;\n        d += l = length(mod(a+2.,4.)-2.) - 0.0003008*step(1.,abs(a.x));\n        x[i] = l;\n        y1[i] = a.x;\n        y2[i] = a.y;\n        y3[i] = a.z;\n    }\n    \n    float offset = 10.*abs(sin(iTime*0.61816));\n  \n    O.rgb = vec3(0.5)*(x[3+int(offset)]-x[2+int(offset)]);\n    //Each interation the brightest regions turn black because of the mod function\n    O.rgb = vec3(y1[3+int(offset)]-y1[2+int(offset)],\n                 y2[3+int(offset)]-y2[2+int(offset)],\n                 y3[3+int(offset)]-y3[2+int(offset)])*0.40827;\n}","name":"Image","description":"","type":"image"}]}