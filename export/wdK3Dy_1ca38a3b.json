{"ver":"0.1","info":{"id":"wdK3Dy","date":"1571057836","viewed":3207,"name":"Simple-Grid","username":"mklefrancois","description":"Simple grid display","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float grid_intensity = 0.7;\n\n// Thick lines \nfloat grid(vec2 fragCoord, float space, float gridWidth)\n{\n    vec2 p  = fragCoord - vec2(.5);\n    vec2 size = vec2(gridWidth);\n    \n    vec2 a1 = mod(p - size, space);\n    vec2 a2 = mod(p + size, space);\n    vec2 a = a2 - a1;\n       \n    float g = min(a.x, a.y);\n    return clamp(g, 0., 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Pixel color\n    vec3 col = vec3(.7,.7,.7);\n    \n    // Gradient across screen\n    vec2 p = fragCoord.xy;           // Point\n\tvec2 c = iResolution.xy / 2.0;   // Center\n    col *= (1.0 - length(c - p)/iResolution.x*0.7);\n\t\n    // 2-size grid\n    col *= clamp(grid(fragCoord, 10., 0.5) *  grid(fragCoord, 50., 1.), grid_intensity, 1.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}