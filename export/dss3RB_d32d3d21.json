{"ver":"0.1","info":{"id":"dss3RB","date":"1666362238","viewed":112,"name":"Digital Timer","username":"valdis","description":"Timer, first practice","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["timerdigitaltimer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 SquareSpaces = vec2(17.0,10.0);\n\nconst float One = 1.0;\n\nconst vec4 O1 = vec4(2.5,5.0,3.5,9.0);\nconst vec4 O2 = vec4(2.5,1.0,3.5,5.0);\nconst vec4 O5 = vec4(1.0,5.0,2.0,9.0);\nconst vec4 O4 = vec4(1.0,1.0,2.0,5.0);\nconst vec4 O3 = vec4(1.0,1.0,3.5,2.0);\nconst vec4 O6 = vec4(1.0,8.0,3.5,9.0);\nconst vec4 O7 = vec4(1.0,4.5,3.5,5.5);\n\nconst vec4 TimeS1 = vec4(8.0,6.5,9.0,7.5);\nconst vec4 TimeS2 = vec4(8.0,2.5,9.0,3.5);\n\nfloat stepFromTo(float min, float max, float x)\n{\n    return step(min,x) * (One - step(max,x));\n}\n\nfloat insideSquare(vec4 square, vec2 p)\n{\n    return stepFromTo(square.x, square.z, p.x)\n    * stepFromTo(square.y, square.w, p.y);\n}\n\nfloat droDigit(vec2 offset,vec2 uv, float digit)\n{\n    return insideSquare(O1+vec4(offset,offset),uv) * (One - stepFromTo(4.6,6.4,digit)) // not 5 and not 6\n    + insideSquare(O2+vec4(offset,offset),uv) * (One - stepFromTo(1.6,2.4,digit)) // not 2\n    + insideSquare(O3+vec4(offset,offset),uv) * (stepFromTo(0.0,0.4,digit) + stepFromTo(1.6,3.4,digit) + stepFromTo(4.6,6.4,digit) + stepFromTo(7.6,10.9,digit)) // not 1,4,7\n    + insideSquare(O4+vec4(offset,offset),uv) * (stepFromTo(0.0,0.1,digit) + stepFromTo(1.6,2.4,digit) + stepFromTo(5.6,6.4,digit) + stepFromTo(7.6,8.4,digit)) // is 0,2,6,8\n    + insideSquare(O5+vec4(offset,offset),uv) * (One - stepFromTo(0.6,3.4,digit) - stepFromTo(6.6,7.4,digit)) //not 123, 7\n    + insideSquare(O6+vec4(offset,offset),uv) * (One - stepFromTo(0.6,1.4,digit) - stepFromTo(3.6,4.4,digit)) //not 1,4\n    + insideSquare(O7+vec4(offset,offset),uv) * (stepFromTo(1.6,6.4,digit) + stepFromTo(7.6,10.4,digit)) //not 01,7\n    ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy/ iResolution.xy) * SquareSpaces;\n\t\n    float sec = floor(mod(iTime, 60.0));\n    float mi = floor(iTime/60.0);\n    \n    vec4 time = vec4(\n    floor(mod(mi/10.0, 10.0)), // not more than 9\n    ceil(mod(mi,10.0)),\n    floor(sec/10.0),\n    ceil(mod(sec,10.0))\n    );\n    \n    \n    float color = \n    (\n    + droDigit(vec2(0.0),uv, time.x)\n    + droDigit(vec2(3.5,0.0),uv, time.y)\n    + droDigit(vec2(9.0,0.0),uv, time.z)\n    + droDigit(vec2(12.5,0.0),uv, time.w)\n    \n    + insideSquare(TimeS1,uv) * step(One, mod(iTime, 2.0))\n    + insideSquare(TimeS2,uv) * step(One, mod(iTime, 2.0))\n    );   \n\n\tfragColor = vec4(vec3(color),1.0);\n}","name":"Image","description":"","type":"image"}]}