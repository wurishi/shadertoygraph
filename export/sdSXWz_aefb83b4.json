{"ver":"0.1","info":{"id":"sdSXWz","date":"1620084253","viewed":179,"name":"Advection......","username":"lil_chickehh","description":"following jamie wong's tutorial for fluid simulation. I have only implemented advection. http://jamie-wong.com/2016/08/05/webgl-fluid-simulation/","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["lol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord-iResolution.xy/2.;\n    uv=uv/iResolution.y*2.0;\n\n\n        fragColor=texelFetch(iChannel1,ivec2(fragCoord),0);\n \n }","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Velocity\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord-iResolution.xy/2.;\n    uv=uv/iResolution.y*2.0;\n    vec2 u=sin(uv.yx*6.);\n    fragColor = vec4(u,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//Color\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.*fragCoord-iResolution.xy;\n    uv=(uv)/iResolution.y;\n    float dt=0.01;\n    float t=10.;\n\n    if(iFrame<10){\n    //Checkerboard\n    //fragColor=vec4(vec3(step(0.,sin(uv.x*t)*sin(uv.y*t))),1.);\n    \n    //Color Noise\n    fragColor=texture(iChannel2,fragCoord/iResolution.xy);\n\n    } else {    \n        vec2 from = uv-dt*texelFetch(iChannel0,ivec2(fragCoord),0).xy;\n        vec2 normalized = ((from*iResolution.y)+iResolution.xy)/(2.*iResolution.xy);\n        fragColor=texture(iChannel1,fract(normalized+vec2(1.)));\n        }\n    \n }","name":"Buffer B","description":"","type":"buffer"}]}