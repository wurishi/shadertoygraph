{"ver":"0.1","info":{"id":"McffDH","date":"1723754416","viewed":12,"name":"psychedelic jelly ","username":"eventide5428","description":"experimenting with ray marching","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//stuff\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.2, 0.2, 0.2);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nmat2 rot2D(float angle){\n    float s = sin(angle);\n    float c = cos(angle);\n    \n    return mat2(c, -s, s, c); \n}\n\nfloat smin(float a, float b, float k) {\n    float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n    return mix(b, a, h) - k * h * (1.0 - h);\n}\n\nfloat sdSphere(vec3 p, float s){\n    return length(p) - s;\n}\n\nfloat sdBox( vec3 p , vec3 b){\n    vec3 q = abs(p) - b;\n    \n    return length(max(q,0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\n}\n\n//draw shapes\nfloat map(vec3 p){\n    vec3 spherePos = vec3(0.0, sin(iTime)*0.6, 0.0);\n    float sphere = sdSphere(p - spherePos, 1.2);\n    float box = sdBox(p, vec3(0.75));\n    \n    float ground = p.y + 0.75;\n    \n    return smin(ground, smin(sphere, box, 1.0), 0.76);\n    }\n\n//run\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n    vec2 m = (iMouse.xy * 2.0 - iResolution.xy)/iResolution.y;\n    \n    //initialization\n    //ray origin\n    vec3 ro = vec3(0.0, 0.0, -3.0);\n    //ray direction\n    vec3 rd = normalize(vec3(uv, 1.0));\n    vec3 col = vec3(0.0);\n    \n    float t = 0.0;\n    \n    //mouse rotation y\n    ro.yz *= rot2D(-m.y);\n    rd.yz *= rot2D(-m.y);\n    \n    //mouse rotation x\n    ro.xz *= rot2D(-m.x);\n    rd.xz *= rot2D(-m.x);\n    \n    \n    //ray marching\n    for(int i = 0; i<80; i++){\n        vec3 p = ro + rd * t;\n\n        float d = map(p);\n\n        t += d;\n        \n        if (d < 0.01 || t > 100.) break;\n    }\n    col = palette(t*0.04);\n    \n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}