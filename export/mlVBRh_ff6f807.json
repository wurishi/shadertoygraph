{"ver":"0.1","info":{"id":"mlVBRh","date":"1701851843","viewed":33,"name":"Calculation method of gray value","username":"cfl997","description":"The calculation method of gray value","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nhttps://www.shadertoy.com/view/mlVBRh\nby cfl997 20231207\n*/\n\n//Green\nvec3 GrayByGreen(vec3 color)\n{\n    return vec3(color.g);\n}\n\n\n//Gray = R*0.3 + G*0.59 + B*0.11\nconst vec3 floatcoefficient = vec3(0.3,0.59,0.11);\nvec3 GrayByfloat(vec3 color)\n{\n    float w=dot(color,floatcoefficient);\n    return vec3(w);\n}\n\n//Average\nvec3 GrayByAverage(vec3 color)\n{\n    float w=(color.r+color.g+color.b)/3.;\n    return vec3(w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 color=texture(iChannel0,uv).rgb;\n    \n    uv*=vec2(3.,1.);\n    \n    if(uv.x<0.95)                  {color=texture(iChannel0,uv).rgb; color=GrayByGreen(color);}\n    else if(uv.x>1.&&uv.x<1.95)    {uv.x-=1.;color=texture(iChannel0,uv).rgb; color=GrayByfloat(color);}\n    else if(uv.x>2.&&uv.x<3.)     {uv.x-=2.;color=texture(iChannel0,uv).rgb; color=GrayByAverage(color);}\n    else {color=vec3(1.0);}\n    \n    fragColor=vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}