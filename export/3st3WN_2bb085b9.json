{"ver":"0.1","info":{"id":"3st3WN","date":"1568563999","viewed":145,"name":"Cannot See.","username":"Hirai_worthless","description":"PostProcessing","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\n\nfloat random (vec2 st,float t) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123 + t);\n}\n\nmat2 genRot(float v){\n\treturn mat2(cos(v),-sin(v),sin(v),cos(v));\n}\n\nvec3 modC(vec3 p,vec3 c){\n\treturn (fract((p + 0.5) / c) * c) -0.5;\n}\n\nvec2 pmod(vec2 p,float c){\n\tp *= genRot(PI / c);\n\tfloat at = atan(p.y/p.x);\n\tat = mod(at,2. * PI / c);\n\tfloat r = length(p);\n\tp = vec2(r * cos(at),r * sin(at));\n\tp *= genRot(-PI / c);\n\treturn p;\n\t\n}\n\nfloat map(vec3 p){\n\tp.xy *= genRot(iTime);\n\tp.xy *= genRot(p.z / 4.);\n\tp.z = fract((p.z + 0.5) / 1.) * 1. - 0.5;\n\t\n\tp.xy = pmod(p.xy,8.);\n\tp.xy = fract((p.xy + 0.5) / 2.) * 2. - 0.5;\n\tfloat sp = length(p - vec3(1.,0.,0.)) - 0.25;\n\t//p.xy *= genRot(time);\n\tsp = min(sp,length(p.xy) - 0.05);\n\tsp = min(sp,length(p.xz) - 0.05);\n\tfloat result = sp;\n\treturn result;\n}\n\nvec3 getNormal(vec3 p){\n\tvec3 x = dFdx(p);\n\tvec3 y = dFdy(p);\n\treturn normalize(cross(x,y));\n}\n\nvec4 trace(vec3 c,vec3 r){\n\tfloat t = 0.;\n\tfor(int i = 0; i < 128; i++){\n\t\tvec3 p = c + r * t;\n\t\tfloat d = map(p);\n\t\tt += d * 0.5;\n\t}\n\tvec3 p = c + r * t;\n\tvec3 n = getNormal(p);\n\treturn vec4(n,t);\n}\n\nvec3 cam () {\n\tvec3 c = vec3(0.25 ,0.25,-1.5);\n\tc.xy *= genRot(iTime / 2.);\n\tc.z += iTime;\n\treturn c;\n}\n\nvec3 ray (vec2 uv,float t){\n\tvec3 r = normalize(vec3(uv,t));\n\tr.xy *= genRot(iTime / 2.);\n\tr.xz *= genRot(iTime / 2.);\n\tr.yz *= genRot(iTime / 2.);\n\treturn r;\n}\n\nvec3 getColor(vec3 p,vec3 r,vec4 d){\n\tfloat t = d.w;\n\tvec3 n = d.xyz;\n\tfloat fog = 1./(1. + t * t * 0.05);\n\tvec3 bc = vec3(1. - dot(n,r));\n\tvec3 cc;\n\tfloat at = atan(r.y/r.x) * 2. + iTime;\n\tvec3 pos = p + r * t;\n\tcc.x = sin(at);\n\tcc.y = sin(at + 2. / 3. * PI);\n\tcc.z = sin(at - 2. / 3. * PI);\n\tcc = cc * 0.5 + 0.5;\n\tcc = fract(pos.z + iTime) > 0.1 ? cc : vec3(1.);\n\tbc *= cc;\n\tbc *= fog;\n\treturn (bc);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = ( fragCoord.xy * 2. - iResolution.xy) / iResolution.y;\n\tvec2 uvN = (floor(uv * genRot(iTime) * 5.) / 5.);\n\tfloat x = random(uvN , iTime);\n\tuv.y += x;\n\tvec3 o = cam();\n\tvec3 r = ray(uv,1.5 * sin(iTime /2.));\n\t\n\tvec4 d = trace(o,r);\n\n\tvec3 col = x < 0.75 ? getColor(o,r,d): vec3(1.);\n\t//vec3 col = x < 0.75 ? vec3(0.) : vec3(1.);\n\n\tfragColor = vec4(col, 1.0 );\n\n}","name":"Image","description":"","type":"image"}]}