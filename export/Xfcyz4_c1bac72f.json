{"ver":"0.1","info":{"id":"Xfcyz4","date":"1730290656","viewed":179,"name":"two interlocked square grids 2","username":"FabriceNeyret2","description":"hacking gyroid code to make the square grid variant of the simplicial grid of https://www.shadertoy.com/view/lfcyz8 ;-)\nSwap sincos vs saw function over time.","likes":18,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sdf","short","apeirohedronmucube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/MftczH\n// variant of https://shadertoy.com/view/MctczH\n// variant of https://shadertoy.com/view/4stfRX\n\n\nvec3 x;          //                   trifo      saw function\n#define Cos(q) ( fract(iTime/4.)<.5 ? cos(q) : ( x = mod((q)/3.14,2.), min(x,2.-x)*2.-1. ) )\n#define Sin(q)   Cos( q-1.57 )\n\n\n//#define L(q) min(length(q.xy), min(length(q.yz),length(q.zx))) // union on cylinders in the 3 axes\n#define L(q) min(max(abs(q).x,abs(q.y)), min(max(abs(q).y,abs(q.z)),max(abs(q).z,abs(q.x)))) // union on square cylinders in the 3 axes\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,v,s,d=t;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.03*(U+U-q.xy)/q.y, -1),                  // ray direction\n          p = 300./q, a;                                     // marching point along ray \n    O*=0.; \n    for ( O++; O.x > 0. && d > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                                // rotation\n        d = abs(( v= min(s=L(Sin(q)),L(Cos(q.yzx))) ) -.4) , // pseudo gyroid\n     // d = abs(  v= dot(Sin(q),Cos(q.yzx)) ) -.1,           // real gyroid\n        a = abs(q),\n        d = max(d, max(a.x,max(a.y,a.z))- (v==s?5.5:6.) ),   // clamped to cube\n    //  a = abs(fract(q)-.5),\n    //  d = max(d, max(a.x,max(a.y,a.z))-.5+.05*sin(t) ),    // grid\n        p += .5*d*D;                                         // step forward = dist to obj\n    O *= v==s ? vec4(1,.8,.8,1) : vec4(.8,.8,1,1);\n}\n","name":"Image","description":"","type":"image"}]}