{"ver":"0.1","info":{"id":"MtlfDB","date":"1513296540","viewed":595,"name":"Moving particles","username":"piotrekb89","description":"Moving points with trails; Learning how to operate on buffers.\nI take hsv to rgb from https://www.shadertoy.com/view/MsS3Wc","likes":18,"published":1,"flags":32,"usePreview":0,"tags":["particles","buffer","movement","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n        \n    vec4 out_color = texture(iChannel0, uv);\n\tfragColor = out_color;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 rotate(vec2 v, float angle) {\n\tfloat a = sin(angle);\n\tfloat b = cos(angle);\n\tmat2 m = mat2(b, -a, a, b);\n\treturn m * v;\n}\n\n//TODO: Store direction angle, not vector components (x,y)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 out_color = vec4(0.0, 0.0, 0.0, 0.0);\n    ivec2 frag_coord_int = ivec2(fragCoord);\n\tint index = frag_coord_int.x + frag_coord_int.y * int(iResolution.x);\n    int particles_count = 500;\n    \n    if (index < particles_count)\n    {\n        if (iFrame < 4)\n        {\n            out_color = vec4(\n                fragCoord.x, \n                20.0 + sin(fragCoord.x * 0.01),\n                cos(fragCoord.x*321.0 + fragCoord.x*fragCoord.x*4.0),\n                -sin(fragCoord.x*321.0 + fragCoord.x*fragCoord.x*4.0)); \n\n        }\n        else\n        {\n            vec4 color = texelFetch(iChannel0, frag_coord_int,0).xyzw;\n            float speed = 100.0 + 40.0 * sin(float(index));\n            float move_step = speed * iTimeDelta;\n            vec2 dir = color.zw;\n            float new_x = color.x + move_step * dir.x;\n            float new_y = color.y + move_step * dir.y;\n\n            if (new_x < -30.0)\n            {\n                dir.x = -dir.x;\n            }\n            else if (new_y < -30.0)\n            {\n                dir.y = -dir.y;\n            }\n            else if (new_x > iResolution.x + 30.0)\n            {\n                dir.x = -dir.x;\n            }\n            else if (new_y > iResolution.y + 30.0)\n            {\n                dir.y = -dir.y;\n            }\n            else\n            {\n                float angle = 0.01;\n                if (index % 2 == 0)\n                {\n                    angle = -0.01;\n                }\n                dir.xy = rotate(dir.xy, angle);\n            }\n            out_color = vec4(new_x, new_y,dir.x,dir.y);            \n        }\n\n\n    }\n\n\n    fragColor = out_color;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 prev_color = texture(iChannel1, uv);  \n    vec4 out_color = vec4(0.0, 0.0, 0.0, 1.0);\n    int particles_count = 500;\n    \n    prev_color.y = prev_color.y *0.9;\n    \n    for (int i = 0; i < particles_count; i++)        \n    {\n        ivec2 adress = ivec2(i % int(iResolution.x),i / int(iResolution.x));\n        vec2 position = texelFetch(iChannel0,adress,0).xy;\n    \tfloat radius = float(i % 4) + 2.0;\n        float dist = distance(fragCoord.xy, position);\n        float diff = (radius - dist) / radius;\n\t\tvec3 color2 = hsv2rgb(vec3(0.5 + 0.5 * sin(iTime + float(i)*0.01), 0.5, 1.0)) * diff;\n        if ( diff > 0.0)\n        {\n        \tout_color = max(out_color, vec4(color2, 1.0));   \n    \t}       \n    }\n    \n\tfragColor = (out_color *0.5+ prev_color * 0.93) * 0.99;   \n}","name":"Buf B","description":"","type":"buffer"}]}