{"ver":"0.1","info":{"id":"llBSzK","date":"1444895348","viewed":313,"name":"kernkraft 400","username":"mememaestro","description":"kernkraft 400","likes":10,"published":1,"flags":8,"usePreview":0,"tags":["musiczombienationkernkraft400"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float pi = 3.14159265359;\nconst float bpm = (140.0/60.0);\nconst float freq = bpm*pi;\n\nvec3 hash(vec3 p) {\n\tmat3 m = mat3(108.0, -35.7, -93.9, \n\t\t      -75.3, 82.0, 39.7, \n\t\t      -67.29, 91.0, -18.7);\n\treturn fract(sin(m*sin(p*m)*1236.78));\t\n}\n\nvec3 barycentric(vec2 uv)\n{\t\n\tuv.y\t\t/= 1.73205080757;\n\tvec3 uvw\t= vec3(uv.y - uv.x, uv.y + uv.x, -(uv.y + uv.y));\n\tuvw\t\t*= .86602540358;\n\treturn uvw;\n}\n\nfloat voronoi (vec3 uvw) \n{\n\tvec3 g = floor(uvw);\n\tvec3 f = fract(uvw);\n\tfloat res = 1.;\n\tfor (float z=-1.0; z<=1.0; z+=1.0) \n\t{\n\t\tfor (float y=-1.0; y<=1.0; y+=1.0) \n\t\t{\n\t\t\tfor (float x=-1.0; x<=1.0; x+=1.0) \n\t\t\t{\n\t\t\t\tvec3 b = vec3(x,y,z);\n\t\t\t\tfloat h = distance(hash(g+b)+b, f);\n\t\t\t\t\n\t\t\t\tres = min(res, h);\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nfloat checkers(vec2 uv) {\n   \tvec2 pos = uv - vec2(0.5,0.5);\t\n    float horizon = 0.5; \n    float fov = 0.5; \n\tfloat scaling = .20;\n\t\n\tvec3 p = vec3(pos.x, fov, pos.y - horizon);      \n\tvec2 s = vec2(p.x/p.z, p.y/p.z) * scaling;\n\t\n\tfloat a = -(0.5 * 2.0 - 1.0)*0.3333; /* modify to skew world */\n\t\n\ts.x = s.x * cos(a) - s.y * sin(a);\n\ts.y = s.x * sin(a) + s.y * cos(a);\n\n\t//checkboard texture\n\tfloat color = sign((mod(s.x, 0.1) - 0.05) * (mod(s.y-iTime/4.0, 0.1) - 0.05));\t\n\t//fading\n\treturn color *= p.z*p.z*10.0;\n}\n\nvec3 samplef(vec2 uv, float zoom, float angle) {\n    uv -= vec2(0.5);\n    mat2 rot = mat2(cos(angle)*(1.0/zoom), sin(angle), -sin(angle), cos(angle)*(1.0/zoom)); \n   \tuv = rot * uv;\n    \n  \treturn texture(iChannel0,(uv + vec2(0.5))).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 uvw = barycentric(uv*10.0);\n    uvw += iTime*2.0;\n    vec4 bg = vec4(vec3(max(0.8,pow(1.0-voronoi(uvw),0.5))),1.0);\n    float col = 0.5+0.5*sin(iTime*freq*2.0);\n    bg *= vec4(col,uv.y,1.0 - col,1.0);\n    bg += checkers(uv)/10.0;\n    vec3 video = samplef(uv,1.0 + 0.5 * sin(iTime*4.0),iTime+cos(iTime*freq*0.5)*0.5);\n    bg += vec4(video.x,0.0,video.z,1.0);\n    fragColor = vec4(bg.xyz, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float trt = 1.0594630943592952645;\nconst float bpm = 140.0;\n\nfloat note2freq(float note) {\n    return 440.0 * pow(trt,note);\n}\n\nfloat sawWave(float time, float freq, float amp) {\n \t   return mod(time,1.0/freq)*freq*amp;\n}\n\nvec2 bassSynth(float time, float tempo) {\n    float m = floor(mod(tempo/2.0,8.0)); //minim number\n    float note = floor(mod(tempo*2.0,2.0)) * 12.0 - 35.0 +\n        float(m >= 4.0  && m < 6.0) * (5.0 + (m-4.0) * 2.0) ;\n    return vec2(sawWave(time, note2freq(note), exp(-0.0*mod(tempo, 0.5))));\n}\n\nvec2 leadSynth(float time, float tempo) {\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 6.0) || \n        (q > 8.0 && q < 17.0) ||\n    \tq == 20.0 || q == 22.0 || q == 23.0);\n    float note = -11.0 + //melody\n        float(q<13.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=13.0 ) * (21.0-q) + \n        float(q==15.0 ) * (-3.0) +\n        float(q>=20.0 ) * (2.0) +\n        float(q==22.0 ) * (6.0);  \n    return vec2(sawWave(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n                sawWave(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\nvec2 kickSynth(float time, float tempo) {\n    const float dist = 3.0;\n    tempo = mod(tempo,1.0); \n    return vec2(clamp(sin(pow((tempo+0.2)*0.0001,-0.5))*exp(-3.0*tempo),-(1.0/dist),(1.0/dist)) * dist);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 clapSynth(float time, float tempo) {\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number;\n    float b = floor(q/8.0);//bar number\n    float qb = mod(q,8.0); //quaver in bar;\n    float ampMask = float((qb >= 2.0 && qb < 4.0) || (qb >= 6.0 && qb < 7.0)\n                         || (b == 3.0 && (qb == 1.0 || qb >= 5.0))); \n    tempo = mod(tempo*4.0 ,2.0);\n    return vec2(rand(vec2(time+1.2,tempo+6.1)) * ampMask * exp(-1.5*tempo),\n                rand(vec2(time+2.1,tempo+1.6)) * ampMask * exp(-1.5*tempo));\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    float t = time;\n    float tempo = t * (bpm/60.0);\n    \n    vec2 bass = bassSynth(t,tempo) * 0.30; //mixing here\n    vec2 lead = leadSynth(t*1.005,tempo) * 0.333;\n    vec2 kick = kickSynth(t,tempo) * 0.333;\n    vec2 clap = clapSynth(t,tempo) * 0.333;\n    \n    vec2 synths = bass + lead; //sidechain\n    synths *= min(mod(tempo,1.0)+0.4,1.0);\n    \n    return synths + kick + clap;\n}","name":"Sound","description":"","type":"sound"}]}