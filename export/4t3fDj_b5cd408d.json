{"ver":"0.1","info":{"id":"4t3fDj","date":"1541005013","viewed":172,"name":"healing particles","username":"chulini","description":"Additive tinted circles with blurred borders moving using simplex noise around the center.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circle","random","particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat circle(vec2 uv, vec2 p, float r, float blur){\n    float d = length(uv-p);\n    float c = smoothstep(r+blur,r,d);\n    return c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float c;\n    for(int i = 0; i < 20; i++){\n        c += circle(uv,vec2(\n            snoise(vec2(iTime*.2, rand(float(i)*123.512) )),\n            snoise(vec2(rand(float(i+7890123)),iTime*.2))\n        )*.2,(.8+.5*sin(iTime*3.0))*.05,.08);    \n    }\n    //c*=.5;\n    vec3 u_colorMult = vec3(.5,.5,1);\n    fragColor = vec4(vec3(c)*u_colorMult.rgb,c);\n}","name":"Image","description":"","type":"image"}]}