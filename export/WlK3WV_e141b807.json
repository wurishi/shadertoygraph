{"ver":"0.1","info":{"id":"WlK3WV","date":"1579917102","viewed":70,"name":"Acid trip at the gay bath house","username":"timeisbeautifulhere","description":"( ͡° ͜ʖ ͡°)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","moving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float CIRCLE_RADIUS = 0.1;\nconst float CIRCLE_SPEED = 0.5;\nconst float CIRCLE_Y = 0.5;\n\n/*\nCircle moves at a constant speed from the left side of\nthe screen to the right side, changing direction\nwhen it hits one side.\n\nPosition normalized to [0,1]\n*/\nvec2 circlePosition(float time){\n    \n    float dist = time * CIRCLE_SPEED;\n    \n    float distInt = floor(dist);\n    \n    bool isRight = int(distInt) % 2 == 0;\n    \n    float circleX = isRight? (dist - distInt) : 1.0 - (dist - distInt);\n    \n    return vec2(circleX, CIRCLE_Y);\n}\n\nbool isInCircle(vec2 coord, vec2 circleCoord, float circleR){\n    return distance(circleCoord, coord) < circleR;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec2 circleCoord = circlePosition(iTime);\n    if(isInCircle(uv, circleCoord, CIRCLE_RADIUS)){\n        col = vec3(0.0,0.0,0.0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}