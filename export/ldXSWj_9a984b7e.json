{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const int MAX_STEPS = 16;\nconst vec3 BOX = vec3(1.0);\nconst float THRESHOLD = 0.01;\n\nfloat udBox(vec3 p, vec3 b) {\n\treturn length(max(abs(p) - b, 0.0));\n}\n\nstruct Ray {\n    vec3 position;\n    vec3 direction;\n    bool hit;\n};\n\nRay intersect(Ray ray) {\n\tfor (int i=0; i<MAX_STEPS; i++) {\n\t\tfloat dist = udBox(ray.position, BOX);\n\t\tif (dist < THRESHOLD) {\n            ray.hit = true;\n            return ray;\n\t\t}\n\t\tray.position += ray.direction * dist;\n\t}\n    return ray;\n}\n\nvec3 Rx(vec3 vector, float angle) {\n    float rx = vector.x * cos(angle) + vector.z * sin(angle);\n    float rz = vector.z * cos(angle) - vector.x * sin(angle);\n    return vec3(rx, vector.y, rz);\n}\n\nvec3 render(Ray ray) {   \n    if (ray.hit) {\n        return (ray.position + BOX) / (2.0 * BOX);\n    } else {\n\t\treturn vec3(1.0);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat aspect_ratio = iResolution.x / iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 p = (uv - vec2(0.5)) * vec2(aspect_ratio, 1.0);\n    \n    float angle = iTime;\n    \n    if (iMouse.z > 0.0) {\n    \tangle = iMouse.x / iResolution.x * 6.0 + 0.5;\n    }\n    \t\n    vec3 camera_loc = 6.0 * vec3(-sin(angle), 0.0, -cos(angle));\n    vec3 camera_dir = vec3(sin(angle), 0.0, cos(angle));\n    \n    Ray ray;\n    ray.position = camera_loc;\n    ray.direction = Rx(normalize(vec3(p, 1.0)), angle);\n    ray.hit = false;\n\t\n\tray = intersect(ray);\n    \n    vec3 col = render(ray);\n    \n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldXSWj","date":"1406833193","viewed":692,"name":"3D Distance Function Test","username":"hughes","description":"distance function test. Renders a simple cube.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","distance"],"hasliked":0,"parentid":"","parentname":""}}