{"ver":"0.1","info":{"id":"st3cDN","date":"1659841636","viewed":97,"name":"autogen 20","username":"asynth","description":"Generated by a program written in Rust.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = reflect_1(uv);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = reflect_3(uv);\n\tvec3 a1 = vec3(0.2803, 0.8835, 0.4805);\n\tvec3 a2 = tri(a1*3.6132 + 0.3480 + iTime*0.3395);\n\tvec3 a3 = noise(uv, vec2(0.10045252, 1.9826057), 0.099778);\n\tvec3 a4 = mix2(uv, vec3(0.4173, 0.0677, 0.5204), vec3(0.3596, 0.0939, 0.4779), vec3(0.8479, 0.6594, 0.9978), vec3(0.6763, 0.4856, 0.5576));\n\tvec3 a5 = mix2(uv, vec3(0.5537, 0.8427, 0.9056), vec3(0.7236, 0.0585, 0.0931), vec3(0.6189, 0.4327, 0.9469), vec3(0.7506, 0.1774, 0.0918));\n\tvec3 a6 = mix2(uv, vec3(0.3557, 0.3477, 0.6955), vec3(0.2365, 0.4986, 0.2097), vec3(0.0100, 0.7888, 0.8494), vec3(0.7563, 0.4315, 0.0016));\n\tvec3 a7 = sin(a6*2.1831 + 0.3634 + iTime*0.2905);\n\tvec3 a8 = mix2(uv, vec3(0.8806, 0.6769, 0.7589), vec3(0.7676, 0.9247, 0.7950), vec3(0.3916, 0.4160, 0.7042), vec3(0.6490, 0.3710, 0.8620));\n\tvec3 a9 = noise(uv, vec2(1.1958747, 3.5678937), 0.805988);\n\treturn quant((pthresh(0.1725, vec3(length(uv)), a2, vec3(uv.x)) + a3), max((a4 - max(vec3(atan(uv.y, uv.x)), sigmoid(mix(a5, a7, node_1(uv))))), (vec3(uv.y) * pthresh(0.9502, a8, vec3(atan(uv.y, uv.x)), a9))));\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn vec3(uv.y);\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\tvec3 a1 = mix2(uv, vec3(0.1032, 0.0439, 0.1823), vec3(0.8495, 0.5453, 0.2633), vec3(0.6617, 0.8981, 0.6149), vec3(0.8425, 0.4991, 0.2966));\n\treturn a1;\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = repeat_3(uv, 0.2102);\n\treturn node_4(uv);\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = vec3(0.0515, 0.0358, 0.7046);\n\tvec3 a2 = well(node_3(uv)*4.2207 + 0.5680 + iTime*0.2081);\n\tvec3 a3 = noise(uv, vec2(3.5299213, 1.1201054), 0.473716);\n\tvec3 a4 = well(a3*3.3579 + 0.7871 + iTime*0.1779);\n\tvec3 a5 = sin(vec3(atan(uv.y, uv.x))*1.3155 + 0.2938 + iTime*0.1935);\n\tvec3 a6 = mix2(uv, vec3(0.2034, 0.2224, 0.6632), vec3(0.1723, 0.8098, 0.5764), vec3(0.3863, 0.9350, 0.2371), vec3(0.5576, 0.3632, 0.4853));\n\tvec3 a7 = vec3(0.4791, 0.5307, 0.6275);\n\tvec3 a8 = mix2(uv, vec3(0.5900, 0.3667, 0.9587), vec3(0.3368, 0.4278, 0.8368), vec3(0.6597, 0.0797, 0.8536), vec3(0.6405, 0.2218, 0.0800));\n\tvec3 a9 = tri(sigmoid(a8)*1.9992 + 0.1100 + iTime*0.2554);\n\treturn sigmoid(((vec3(atan(uv.y, uv.x)) + a1) + mod((mod(sq(vec3(length(uv))), mod(mix(quant(a2, vec3(uv.x)), a4, sigmoid(vec3(length(uv)))), (vec3(uv.y) * a5))) + max((a6 - a7), sigmoid(a9))), node_5(uv))));\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = repeat_0(uv, 0.3757);\n\treturn vec3(uv.y);\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = (mat2(1.2038,-1.3126,-0.8570,0.7306)*(uv-vec2(-0.9517,0.2168)+vec2(-0.9517,0.2168)));\n\tvec3 a1 = noise(uv, vec2(3.8433928, 0.52232856), 0.818862);\n\tvec3 a2 = well(quant(vec3(length(uv)), a1)*5.9657 + 0.9339 + iTime*0.1604);\n\tvec3 a3 = sin(a2*4.2375 + 0.3067 + iTime*0.3639);\n\treturn a3;\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = repeat_2(uv, 0.7284);\n\treturn node_8(uv);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = reflect_0(uv);\n\tvec3 a1 = mix2(uv, vec3(0.1663, 0.1913, 0.6093), vec3(0.0845, 0.4113, 0.3167), vec3(0.0215, 0.0862, 0.1474), vec3(0.1353, 0.7391, 0.1038));\n\treturn a1;\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\tvec3 a1 = noise(uv, vec2(2.9268918, 0.3269352), 0.591612);\n\treturn a1;\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = sin(node_11(uv)*1.2761 + 0.4117 + iTime*0.2743);\n\tvec3 a2 = tri(a1*5.9427 + 0.2192 + iTime*0.2568);\n\treturn a2;\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = repeat_2(uv, 0.2682);\n\tvec3 a1 = vec3(0.3505, 0.5212, 0.3790);\n\treturn a1;\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = (mat2(-0.7307,-1.2080,-1.0601,0.9746)*(uv-vec2(-0.1512,-0.2690)+vec2(-0.1512,-0.2690)));\n\tvec3 a1 = vec3(0.8662, 0.7433, 0.5007);\n\tvec3 a2 = noise(uv, vec2(0.36772287, 1.1918898), 0.387501);\n\tvec3 a3 = mix2(uv, vec3(0.6793, 0.9439, 0.8057), vec3(0.4059, 0.8643, 0.7471), vec3(0.9077, 0.1599, 0.9748), vec3(0.0069, 0.2954, 0.1468));\n\tvec3 a4 = tri(sq((a1 - mix(a2, mix(a3, vec3(uv.y), vec3(length(uv))), vec3(length(uv)))))*2.3863 + 0.8643 + iTime*0.2616);\n\tvec3 a5 = sin(min(vec3(uv.x), vec3(atan(uv.y, uv.x)))*2.5584 + 0.7758 + iTime*0.3050);\n\tvec3 a6 = well(a5*3.2528 + 0.7061 + iTime*0.0751);\n\tvec3 a7 = well(node_13(uv)*3.7425 + 0.1137 + iTime*0.3609);\n\tvec3 a8 = well(uni((quant(((node_12(uv) / a4) + a6), vec3(uv.y)) + a7))*5.1172 + 0.2876 + iTime*0.2420);\n\tvec3 a9 = noise(uv, vec2(3.4745238, 0.716888), 0.773520);\n\tvec3 a10 = mix2(uv, vec3(0.2318, 0.3259, 0.8829), vec3(0.1577, 0.1861, 0.5853), vec3(0.6301, 0.1961, 0.2298), vec3(0.3757, 0.2877, 0.6882));\n\tvec3 a11 = vec3(0.1026, 0.8620, 0.4724);\n\tvec3 a12 = mix2(uv, vec3(0.9809, 0.7844, 0.0816), vec3(0.2919, 0.3035, 0.2159), vec3(0.1421, 0.5229, 0.9550), vec3(0.5128, 0.7258, 0.1080));\n\tvec3 a13 = vec3(0.9044, 0.8449, 0.3326);\n\tvec3 a14 = well(a13*3.4715 + 0.9212 + iTime*0.1414);\n\tvec3 a15 = vec3(0.3835, 0.4359, 0.6216);\n\tvec3 a16 = well(sq(mix(vec3(length(uv)), a14, a15))*1.7110 + 0.9572 + iTime*0.1744);\n\tvec3 a17 = well(a16*1.1014 + 0.9000 + iTime*0.0862);\n\tvec3 a18 = noise(uv, vec2(0.5942511, 0.6101144), 0.967652);\n\tvec3 a19 = vec3(0.3123, 0.9597, 0.5157);\n\treturn min(a8, mod(pthresh(0.4582, quant(a9, vec3(length(uv))), mod(vec3(uv.x), vec3(length(uv))), max(min(pthresh(0.9611, vec3(atan(uv.y, uv.x)), a10, a11), a12), a17)), bi(mix((uni(vec3(atan(uv.y, uv.x))) * max(a18, vec3(length(uv)))), vec3(uv.x), a19))));\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = (mat2(-0.9666,-1.2215,-0.9623,0.8925)*(uv-vec2(0.7860,-0.8334)+vec2(0.7860,-0.8334)));\n\treturn node_14(uv);\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn bi(vec3(length(uv)));\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = reflect_0(uv);\n\treturn vec3(uv.y);\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = (mat2(-0.9865,1.0917,0.9190,-1.3179)*(uv-vec2(-0.9559,0.1964)+vec2(-0.9559,0.1964)));\n\tvec3 a1 = tri(node_17(uv)*1.2309 + 0.8135 + iTime*0.2037);\n\tvec3 a2 = noise(uv, vec2(1.8231531, 3.8089569), 0.231550);\n\tvec3 a3 = vec3(0.5965, 0.6593, 0.0202);\n\tvec3 a4 = mix2(uv, vec3(0.7369, 0.4746, 0.2136), vec3(0.1373, 0.4827, 0.2414), vec3(0.1823, 0.9164, 0.1480), vec3(0.8368, 0.2308, 0.2451));\n\tvec3 a5 = well(a4*4.6453 + 0.5845 + iTime*0.1280);\n\tvec3 a6 = well(bi(pthresh(0.5076, a3, sq(vec3(uv.y)), a5))*2.7517 + 0.2109 + iTime*0.1898);\n\tvec3 a7 = mix2(uv, vec3(0.4916, 0.0112, 0.2418), vec3(0.5904, 0.7184, 0.0070), vec3(0.9280, 0.3411, 0.6621), vec3(0.8934, 0.5489, 0.0804));\n\tvec3 a8 = vec3(0.7234, 0.3697, 0.8984);\n\treturn min(node_16(uv), uni(mix(mod(a1, a2), a6, mix(vec3(atan(uv.y, uv.x)), a7, a8))));\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = (mat2(1.4111,-1.1548,-0.8617,0.7405)*(uv-vec2(-0.6758,-0.1720)+vec2(-0.6758,-0.1720)));\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = (mat2(1.0086,-1.2898,-1.0962,0.7132)*(uv-vec2(0.9544,0.5433)+vec2(0.9544,0.5433)));\n\treturn sq(vec3(atan(uv.y, uv.x)));\n}\n\nvec3 node_21(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\tvec3 a1 = sin(node_18(uv)*1.1923 + 0.3391 + iTime*0.3734);\n\tvec3 a2 = noise(uv, vec2(3.9132297, 2.0396388), 0.958128);\n\tvec3 a3 = vec3(0.9403, 0.9846, 0.5957);\n\tvec3 a4 = mix2(uv, vec3(0.7129, 0.5105, 0.4629), vec3(0.8710, 0.4671, 0.7893), vec3(0.1399, 0.8721, 0.7129), vec3(0.9580, 0.9437, 0.7680));\n\treturn mod(a1, quant(min(node_19(uv), (vec3(uv.x) / uni(a2))), mod(quant(a3, a4), node_20(uv))));\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = repeat_5(uv, 0.5681);\n\tvec3 a1 = mix2(uv, vec3(0.6980, 0.9431, 0.6591), vec3(0.6335, 0.4076, 0.5967), vec3(0.1510, 0.6326, 0.8432), vec3(0.1725, 0.2971, 0.0569));\n\tvec3 a2 = sin(sq(uni(sigmoid(quant(a1, vec3(uv.y)))))*2.6871 + 0.1658 + iTime*0.3392);\n\tvec3 a3 = tri(a2*4.6919 + 0.1883 + iTime*0.3132);\n\treturn a3;\n}\n\nvec3 node_23(vec2 uv) {\n\tuv = repeat_5(uv, 0.6571);\n\treturn sq(node_22(uv));\n}\n\nvec3 node_24(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_25(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = sin(node_23(uv)*5.6588 + 0.4006 + iTime*0.1847);\n\tvec3 a2 = sin(quant((node_21(uv) - vec3(atan(uv.y, uv.x))), max(a1, mod(node_24(uv), vec3(atan(uv.y, uv.x)))))*3.3081 + 0.1176 + iTime*0.3499);\n\treturn (node_15(uv) / a2);\n}\n\nvec3 node_26(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\tvec3 a1 = vec3(0.6069, 0.2212, 0.2232);\n\tvec3 a2 = noise(uv, vec2(1.1043096, 0.5482348), 0.147753);\n\tvec3 a3 = vec3(0.6229, 0.4848, 0.5508);\n\tvec3 a4 = vec3(0.2968, 0.5019, 0.2181);\n\tvec3 a5 = mix2(uv, vec3(0.6081, 0.1234, 0.0389), vec3(0.2924, 0.8796, 0.2258), vec3(0.7282, 0.4103, 0.4451), vec3(0.0035, 0.6433, 0.3447));\n\tvec3 a6 = tri((a3 / pthresh(0.3250, vec3(atan(uv.y, uv.x)), a4, a5))*2.7073 + 0.7605 + iTime*0.2718);\n\treturn (mix(node_9(uv), mix(a1, node_10(uv), a2), a6) + node_25(uv));\n}\n\nvec3 node_27(vec2 uv) {\n\tuv = repeat_5(uv, 0.6934);\n\tvec3 a1 = sin(node_26(uv)*2.2174 + 0.9623 + iTime*0.2377);\n\treturn a1;\n}\n\nvec3 node_28(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = sin(node_6(uv)*4.8531 + 0.8009 + iTime*0.1239);\n\tvec3 a2 = sin(a1*3.2840 + 0.1452 + iTime*0.1355);\n\treturn (uni((node_2(uv) - min(a2, node_7(uv)))) + node_27(uv));\n}\n\nvec3 node_29(vec2 uv) {\n\tuv = repeat_3(uv, 0.2533);\n\treturn node_28(uv);\n}\n\nvec3 top(vec2 uv) {\n\t\tvec3 a1 = noise(uv, vec2(0.111625984, 0.43642837), 0.497619);\nreturn max(pthresh(0.9365, a1, vec3(length(uv)), vec3(length(uv))), node_29(uv));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)+0.04*iTime));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}