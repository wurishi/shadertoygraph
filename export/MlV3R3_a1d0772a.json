{"ver":"0.1","info":{"id":"MlV3R3","date":"1475967897","viewed":168,"name":"Manhattan Euclidean Tri Voronoi","username":"VoidChicken","description":"Voronoi using Manhattan distance and Euclidean distance interpolated halfway.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","distance","manhattan","new","chicken","euclidean","triangular","euclid","york","newyork"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Uncomment for black borders\n#define BORDER\nfloat pi = 4.*3.14159265358979; // 2 tau (4 pi)\nvec2 points[10];\nfloat dist (vec2 a, vec2 b) {\n    vec2 c = abs(a-b);\n    vec2 r = a-b;\n    // return max(abs(r.x)*0.866025+r.y*0.5,-r.y);\n\treturn ((c.x+c.y)+distance(a,b)+ max(abs(r.x)*0.866025+r.y*0.5,-r.y) )/3.; \n}\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    for (int i = 0; i < 10; i++) {\n        points[i] = vec2(sin(iDate.w+float(i+1)/11.*pi)/(2.+(i>5?2.:0.))+.5, cos(iDate.w+float(i+1)/11.*pi*(mod(float(i),5.)==0.?1.:-1.))/(3.+(i>5?.5:0.))+.5);\n    }\n    if (iMouse.w>0.) {\n    \tpoints[0] = iMouse.xy/iResolution.xy;\n    }\n    vec2 closest = points[0];\n    int c = 0;\n    float a = 1.;\n    for (int i = 1; i < 10; i++) {\n        \n        if (dist(uv, closest)>dist(uv,points[i])) {\n        \tclosest = points[i];    \n            c=i;\n        }\n        \n    }\n    for (int i = 0; i < 10; i++) {\n        if (closest==points[i]) {\n            continue;\n        }\n        if (abs(dist(uv, closest)-dist(uv,points[i]))<.003) {\n           #ifdef BORDER\n            a=0.;\n           #endif\n        }\n    }\n    \n    \n\tfragColor = a*(vec4(hsv2rgb(vec3(float(c)/10.,1,1)),1)*(1.-distance(uv,closest)-.5)+vec4(.005/distance(uv,closest)))*clamp(5./distance(uv,vec2(.5)),0., 1.);\n}","name":"Image","description":"","type":"image"}]}