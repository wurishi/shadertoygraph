{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"vec2 hash (vec2 p)\n{\n    p = vec2(dot(p, vec2(1238.0, 7345.0)), dot(p, vec2(12232.0, 22230.0)));\n    return fract(sin(p) * 4328395.432885) * 2.0 - 1.0;\n}\n\nvec3 colorGradient(float value) {\n    vec3 color1 = vec3(0.0, 0.0, 0.0);\n    vec3 color2 = vec3(0.2, 0.4, 0.8);\n\n    float u = value*value*(3.0-2.0*value);\n\n    return mix(color1,color2,u*1.75);\n}\n\nvec2 rotate(vec2 v, float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    return vec2(c * v.x - s * v.y, s * v.x + c * v.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -0.5 to 0.5)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 3.0; //zoom\n        \n    float x0 = floor(uv.x);\n    float y0 = floor(uv.y);\n    float x1 = x0 + 1.0;\n    float y1 = y0 + 1.0;\n    \n    // Different Animations\n    //float t = iTime*2.0;\n    //float t = sin(0.1*iTime)*30.0*sin(0.1*iTime);\n    //float t = 10.0*sin(iTime*0.2)+1.0;\n    //float t = sin(length(uv)*2.0 + iTime);\n    float t = sin(uv.x*-2.0 + iTime*1.5);\n    \n    //gradient vectors\n    vec2 gv00 = rotate(hash(vec2(x0,y0)),t);\n    vec2 gv01 = rotate(hash(vec2(x0,y1)),t);\n    vec2 gv10 = rotate(hash(vec2(x1,y0)),t);\n    vec2 gv11 = rotate(hash(vec2(x1,y1)),t);\n    \n    //distance vectors\n    vec2 dist00 = uv - vec2(x0,y0);\n    vec2 dist01 = uv - vec2(x0,y1);\n    vec2 dist10 = uv - vec2(x1,y0);\n    vec2 dist11 = uv - vec2(x1,y1);\n    \n    //dot product of gradient and dist vectors\n    float d00 = dot(gv00,dist00);\n    float d01 = dot(gv01,dist01);\n    float d10 = dot(gv10,dist10);\n    float d11 = dot(gv11,dist11);\n    \n    //interpolation\n    vec2 f = fract(uv);\n    vec2 u = f*f*(3.0 - 2.0*f);\n    \n    float x2 = mix(d00, d01, u.y);\n    float x3 = mix(d10, d11, u.y);\n    \n    float col = mix(x2, x3, u.x) * 0.5 + 0.5;\n    vec3 finalColor = colorGradient(col);\n\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"M3tcDr","date":"1734974689","viewed":53,"name":"Perlin Noise animation","username":"Abhinav_0806","description":".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""}}