{"ver":"0.1","info":{"id":"DtySWK","date":"1686344041","viewed":88,"name":"longing","username":"ryandoucette","description":"far away","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["outrun"],"hasliked":0,"parentid":"dtyXRz","parentname":"count-uno"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float grid(vec2 uv, float intensity, float speed, float glow, float gridRoam) {\n    vec2 size = vec2(uv.y, uv.y * uv.y * 0.2) * glow;\n    uv += vec2(gridRoam, iTime * speed);\n    // centers\n    uv = abs(fract(uv) - 0.5);\n \tvec2 lines = smoothstep(size, vec2(0.0), uv);\n \tlines += smoothstep(size * 5.0, vec2(0.0), uv) * intensity;\n    return clamp(lines.x + lines.y, 0.0, 3.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy)/iResolution.y;\n    float pointOfInflection = tan(iTime * 0.15);\n    \n    // Fog\n    float fogSize = 0.15;\n    float fogIntensity = -0.025;\n    float fog = smoothstep(fogSize, fogIntensity, abs(uv.y + pointOfInflection));\n    \n    // Grid\n    vec3 backgroundColor = vec3(0.1, 0.0, 0.1);\n    vec3 lineColor = vec3(1.0, 0.5, 1.0);\n    float lineIntensity = 0.5;\n    float lineGlow = 0.005;\n\n    float gridSpeed = 2.0; \n    float gridRoaming = 0.0;\n    \n    if (uv.x > -1.25 && uv.x < 1.25 && uv.y < 0.7 && uv.y > -0.7) {\n        // grid segment heights\n        float gridSegmentHeightDivisor = 2.5;\n        float gridSegmentFinalWidth = 0.05;\n        \n        float spaceBetweenGridSegments = gridSegmentHeightDivisor / (abs(uv.y -pointOfInflection) + gridSegmentFinalWidth);\n        uv.y = spaceBetweenGridSegments;\n        \n        // grid segment widths\n        float gridSegmentWidthMultiplier = 0.7;\n\n        uv.x *= uv.y * gridSegmentWidthMultiplier;\n        \n        float gridVal = grid(uv, lineIntensity, gridSpeed, lineGlow, gridRoaming);\n        backgroundColor = mix(backgroundColor, lineColor, gridVal);\n    }\n    \n    float saturation = 1.0;\n    \n    backgroundColor = mix(vec3(backgroundColor.r, backgroundColor.r, backgroundColor.r) * 0.5, backgroundColor, saturation * 0.7);\n\n    fragColor = vec4(backgroundColor,1.0);\n}","name":"Image","description":"","type":"image"}]}