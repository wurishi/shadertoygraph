{"ver":"0.1","info":{"id":"wlSSRy","date":"1566254514","viewed":139,"name":"Graphics Workshop","username":"sgh","description":"Introduction to shaders","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// \"pixelColor\" is the output for the pixel being drawn\n// \"pixelCoord\" is the coordinate of the pixel being drawn\n//\nvoid mainImage( out vec4 pixelColor, in vec2 pixelCoord )\n{\n    //////////////// TUTORIAL 1 - Solid Colors ////////////////\n    float r = 0.0; \n\tfloat g = 0.0;\n\tfloat b = 0.0; \n    float a = 1.0;\n\n\tpixelColor = vec4(r, g, b, a);\n\n    //////////////// TUTORIAL 2 - Individual Pixels ////////////////\n\n    float x = 100.5;\n    float y = 100.5;\n    \n    if (pixelCoord.x == x)\n    {\n        if (pixelCoord.y == y)\n        {\n            // pixelColor = vec4(1.0, 0, 0, 1.0); // Uncomment for Tutorial 2\n        }\n    }\n\n    //////////////// TUTORIAL 3 - Gradients ////////////////\n\n    // vec2 iResolution\n    \n    vec2 pixelPos = vec2( pixelCoord.xy / iResolution.xy ); // Position on the scale of 0 to 1.0\n    \n    // pixelColor = vec4(1.0 * pixelPos.x, 1.0 * pixelPos.y, 0, 1.0); // Uncomment for Tutorial 3\n\n    //////////////// TUTORIAL 4 - Lines ////////////////\n\n\n    float lineWidth = 0.01;\n    float lineCoordinate = 0.5;\n\n    if (abs(pixelPos.x - lineCoordinate) < lineWidth)\n    {\n        // pixelColor = vec4(1.0, 0, 0, 1.0); // Uncomment for Tutorial 4\n    }\n    \n    //////////////// TUTORIAL 5 - Animations ////////////////\n    \n    // float iTime\n    \n    float duration = 10.0; // In seconds\n    lineCoordinate = mod(iTime, duration) / duration;\n\n    if (abs(pixelPos.x - lineCoordinate) < lineWidth)\n    {\n        // pixelColor = vec4(1.0, 0, 0, 1.0); // Uncomment for Tutorial 5\n    }\n\n    //////////////// TUTORIAL 6 - Functions ////////////////\n\n    float circleRadius = 200.0;\n\n    // The distance from the coordinate center is sqrt(x*x + y*y)\n\tif (pixelCoord.x*pixelCoord.x + pixelCoord.y*pixelCoord.y < circleRadius*circleRadius ) \n    {\n\t\t// pixelColor = vec4(0, 1.0, 1.0, 1.0); // Uncomment for Tutorial 6\n\t}\n    \n    //////////////// TUTORIAL 7 - Transforms ////////////////\n\n    vec2 circleCenter = vec2(300.0, 225.0);\n    vec2 circleTransform = pixelCoord - circleCenter;\n\n    // The distance from the coordinate center is sqrt(x*x + y*y)\n\tif (circleTransform.x*circleTransform.x + circleTransform.y*circleTransform.y < circleRadius*circleRadius ) \n    {\n\t\t// pixelColor = vec4(0, 1.0, 1.0, 1.0); // Uncomment for Tutorial 7\n\t}\n}","name":"Image","description":"","type":"image"}]}