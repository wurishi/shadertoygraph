{"ver":"0.1","info":{"id":"mtyBWR","date":"1702161732","viewed":83,"name":"20231209_hj_pinieon","username":"0b5vr","description":"Live coding sesh at 1/2 Junction (Akihabara, Tokyo), 2023-12-09. Coded in 45 minutes.\n\nhttps://twitter.com/killu0_/status/1730895316998897859","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["2d","noise","pathtracer","livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  fragColor = texture( iChannel0, fragCoord / iResolution.xy );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float BPM=130.;\n\nfloat t;\n\n#define repeat(i,n) for(int i=0;i<n;i++)\n#define saturate(x) clamp(x,0.,1.)\n#define linearstep(a,b,t) saturate( ((t)-(a)) / ((b)-(a)) )\n\nconst float PI=acos(-1.);\nconst float TAU=PI*2.;\nconst float FAR=100.;\n\n// .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n// @@@@@@@@@@@#'     @@@@@@@@@@@@@@@   .@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@\n// @@@@@@@@@#'       @@@@@@@@@@@@@@   .@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@\n// @@@@@@@@'         @@@@@@@@@@@@@   .@@@@@&######&@@@@@@@@@@@@@@      @@@@@@@@\n// @@@@@@@@@. _      @@@@@@@@@@@@   .@@@*'          '*@@@@@@@@@@@      @@@@@@@@\n// @@@@@@@@@@@@      @@@@@@@@@@@   .@@*                @@@@@@@@@@      @@@@@@@@\n// @@@@@@@@@@@@      @@@@@@@@@@   .@@@.  .o@@@@@@.     @@@@@@@@@@      @@@@@@@@\n// @@@@@@@@@@@@      @@@@@@@@@   .@@@@@@@@@@#'        @@@*   '*@'      @@@@@@@@\n// @@@@@@@@              @@@@   .@@@@@@@@          .@@@@.             .@@@@@@@@\n// @@@@@@@@              @@@   .@@@@@@@@      .@@@@@@@@@@@.         .@@@@@@@@@@\n// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n// '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'\n//\n// 1/2 Junction\n// 2023-12-09\n// MOGRA Akihabara\n//\n// DJ: Pinieon\n\n\n\n\n\n\n\n\n\n\n\nuvec3 hash3u(uvec3 s){\n  s=s*1145141919u+1919810u;\n  s.x+=s.y*s.z;\n  s.y+=s.z*s.x;\n  s.z+=s.x*s.y;\n  s^=s>>16;\n  s.x+=s.y*s.z;\n  s.y+=s.z*s.x;\n  s.z+=s.x*s.y;\n  return s;\n}\n\nvec3 hash3(vec3 s){\n  uvec3 r=floatBitsToUint(s);\n  return vec3(hash3u(r))/float(-1u);\n}\n\nuvec3 seed;\nvec3 random3(){\n  seed=hash3u(seed);\n  return vec3(seed)/float(-1u);\n}\n\nmat3 orthbas(vec3 z){\n  z=normalize(z);\n  vec3 up=abs(z.y)>.99?vec3(0,0,1):vec3(0,1,0);\n  vec3 x=normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\nvec3 cyclic(vec3 p,float pump){\n  mat3 b=orthbas(vec3(-5,2,-1));\n  vec4 sum=vec4(0);\n  repeat(i,5){\n    p*=b;\n    p+=sin(p.yzx);\n    sum.xyz+=cross(cos(p),sin(p.zxy));\n    sum.w+=1.;\n    sum*=pump;\n    p*=2.;\n  }\n  return sum.xyz/sum.w;\n}\n\nvec4 isectplane(vec3 ro,vec3 rd,vec3 n){\n  float t=-dot(ro,n)/dot(rd,n);\n  if(t<0.){return vec4(FAR);}\n  n*=-sign(dot(ro,n)); // bug. it should be sign(dot(rd,n)) instead\n  return vec4(n,t);\n}\n\nvec4 test(vec3 ro,vec3 rd,out vec3 bc,out vec3 em){\n  vec4 isect=vec4(FAR);\n  vec4 isect2;\n  \n  float tt=t*BPM/120.;\n  tt=.1*mix(\n    tt,\n    linearstep(0.,.2,fract(tt))+floor(tt),\n    .9\n  );\n\n  repeat(i,10){\n    float prog=float(i)/9.;\n    prog+=random3().x*.01; // cringe\n    float z=3.*prog-3.;\n    isect2=isectplane(ro-vec3(0,0,z),rd,vec3(0,0,1));\n    \n    if(isect2.w<isect.w){\n      vec3 rp=ro+rd*isect2.w;\n      float d=cyclic(vec3(.04*rp.xy,tt+.2*prog),1.).x;\n      d+=(prog-.5);\n      \n      if(d<0.||i==0){\n        isect=isect2;\n        bc=.5+.1*cos(mix(5.,2.,prog)-.1*rp.y-vec3(0,2,4));\n        bc=mix(vec3(.2),bc,prog);\n        bc*=bc;\n        em=vec3(0);\n      }\n    }\n  }\n  \n  return isect;\n}\n\nvec2 cis(float t){\n  return vec2(cos(t),sin(t));\n}\n\nvec3 lambert(vec3 n){\n  vec3 xi=random3();\n  float phi16=xi.x*TAU*16.;\n  float ct=sqrt(xi.y);\n  float st=sqrt(1.-ct*ct);\n  return orthbas(n)*vec3(cis(phi16)*st,ct);\n}\n\nvoid mainImage(out vec4 fragColor,vec2 fragCoord){\n  seed=uvec3(fragCoord.xy,60.*iTime);\n  \n  vec2 uv=fragCoord.xy/iResolution.xy;\n  vec2 p=uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n  t=iTime;\n  \n  vec3 col=vec3(0);\n  \n  repeat(is,16){\n    vec2 pt=p;\n    pt+=(random3().xy-.5)/iResolution.y*2.;\n    \n    vec3 co=vec3(0,0,5);\n    vec3 ct=vec3(0,0,0);\n    mat3 cb=orthbas(co-ct);\n    \n    vec3 ro=co;\n    vec3 rd=cb*normalize(vec3(pt,-2));\n    \n    vec3 colr=vec3(1./16.);\n    \n    repeat(ip,3){\n      vec3 bc,em;\n      vec4 isect=test(ro,rd,bc,em);\n      \n      if(isect.w>=FAR){\n        col+=colr*pow(rd.y+1.,2.);\n        break;\n      }\n      \n      col+=em*colr;\n      ro+=rd*isect.w;\n      rd=mix(lambert(isect.xyz),reflect(rd,isect.xyz),.5); // a workaround for bugs\n      ro+=isect.w*.001; // bug. it should be isect.xyz*.001 instead\n      colr*=bc;\n    }\n    \n  }\n  \n  col=pow(col,vec3(.4545));\n  col=smoothstep(vec3(0,-.02,-.04),vec3(1,1.02,1.09),col);\n  fragColor = mix(\n  vec4(col,1),\n  texture(iChannel0,uv),\n  .8\n  );\n}\n","name":"Buffer A","description":"","type":"buffer"}]}