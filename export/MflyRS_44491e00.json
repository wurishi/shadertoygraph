{"ver":"0.1","info":{"id":"MflyRS","date":"1721330737","viewed":122,"name":"loopy4d","username":"pb","description":"another fine 4d mess","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["raymarch","4d"],"hasliked":0,"parentid":"X3VXzG","parentname":"mandelbox4d"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//philip.bertani@gmail.com\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy,\n        uv = u/R;\n\n    O *= 0.;\n\n    float[] gk1s = float[](\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.023792, 0.094907, 0.150342, 0.094907, 0.023792,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765\n    );\n\n    //golfed by fabriceneyret2\n    for (int k; k < 25; k++)      \n        O += gk1s[k] * texture(iChannel0, uv + ( vec2(k%5,k/5) - 2. ) / R );\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define rot(x) mat2(cos(x+vec4(0,11,33,0)))\n\n//Rodrigues-Euler axis angle rotation\n#define ROT(p,axis,t) mix(axis*dot(p,axis),p,cos(t))+sin(t)*cross(p,axis)\n\n//formula for creating colors;\n\n#define H2(h)  (  cos(  h*3. + vec3(1,2,3))*.9 + .3  )\n\n//formula for mapping scale factor \n#define M(c)  log(1.+c)\n\n#define R iResolution\n\n\nvoid mainImage( out vec4 O, vec2 U) {\n  \n    O = vec4(0);\n    \n    vec3 c=vec3(0);\n    vec4 rd = normalize( vec4(U-.5*R.xy, .2*R.y, R.y))*400.;\n    \n    float sc,dotp,totdist=0., tt=9., t=9.+iTime/2.;\n    \n    for (float i=0.; i<100.; i++) {\n        \n        vec4 p = vec4( rd*totdist);\n        \n        p += vec4(0,0,-4e3,0);\n       \n        sc = 1.; \n        p.xz *= rot(t/13.);\n        p.yz *= rot(t/11.);\n        p.xy *= rot(t/7.);\n        p.xw *= rot(t/2.);\n        p.yw *= rot(t/3.);\n        p.zw *= rot(t/5.);\n\n\n        \n        vec4 w = p;\n        \n        vec4 origP = p;\n        vec4 dz,z;\n        \n        float dist=0.,oldDist=0.;\n        for (float j=0.; j<7.; j++) {\n        \n            p = abs(p)*.64;\n       \n            dotp = max(1./dot(w,w),.2);\n            sc *= dotp; \n            \n            p = .75* p * dotp - .45; \n            \n            z = p, dz=vec4(0);\n            \n            /* potentially interesting\n            dz = 2.*vec4(z.x*dz.x-z.y*dz.y-z.z*dz.z-z.w*dz.w,\n                         z.x*dz.y+z.y*dz.x+z.z*dz.w-z.w*dz.z,\n                         z.x*dz.z-z.y*dz.w+z.z*dz.x+z.w*dz.y,\n                         z.x*dz.w+z.y*dz.z-z.z*dz.y+z.w*dz.x);\n             dz.x += 1.;\n             */\n                \n             z =\n                     vec4( z.x*z.x-z.y*z.y-z.z*z.z-z.w*z.w,\n                       2.*z.x*z.y,\n                       2.*z.x*z.z,\n                       2.*z.x*z.w ) - .19; \n                                      \n        \n             w = z;\n            \n        }\n         \n     \n        dist = length(p.xw)/sc; // ddz ;\n        float stepsize = dist/10.;     \n        totdist += stepsize;                  //move the distance along rd\n        \n        \n        if (i>40.)\n        //accumulate color, fading with distance and iteration count\n        c += .06*\n            H2( M(sc) )\n            * exp(-i*i*stepsize/1e3);\n    }\n    \n    c = 1. - exp(-c*c*c*c);\n    O = ( vec4(c,0) );\n               \n}","name":"Buffer A","description":"","type":"buffer"}]}