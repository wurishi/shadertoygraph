{"ver":"0.1","info":{"id":"43BXR1","date":"1710241459","viewed":98,"name":"right triangle SDF","username":"wd4q5dy","description":"a better one that improves TheTurk's one\n([url]https://www.shadertoy.com/view/Ntc3Dr[/url])\n\nsurprised that there's almost nothing on this considering that it can be used for slopes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// replace line 10 with p += e/2.0;\n// to make the diagonal the center\n\nfloat sgn (float x) { return x<0.0 ? -1.0 : 1.0; }\n\nfloat sdRightTriangle(vec2 p, float b, float h) {\n    p *= vec2(sgn(b),sgn(h));\n    \n    vec2 e = vec2(abs(b),-abs(h));\n    p.y += e.y;\n    \n    vec2 d = p - e*clamp(dot(p,e)/dot(e,e), 0.0, 1.0);\n    if (max(d.x,d.y) > 0.0 || b*h == 0.0) return length(d);\n    \n    p.y -= e.y;\n    \n    if (max(p.x,p.y) > 0.0) return -min(length(d),min(p.x,p.y));\n    \n    return length(p);\n}\n\nfloat map(vec2 p) {\n    float d = sdRightTriangle(p, cos(iTime), sin(iTime));\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // iq's shading https://iquilezles.org/\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n\n    float d = map(p);\n    vec3 col = (d<0.0) ? vec3(0.6,0.8,1.0) : vec3(0.9,0.6,0.3);\n    col *= 1.0 - exp(-9.0*abs(d));\n\tcol *= 1.0 + 0.2*cos(128.0*abs(d));\n\tcol = mix(col, vec3(1.0), 1.0-smoothstep(0.0,0.015,abs(d)) );\n\n    if (iMouse.z > 0.001) {\n        d = map(m);\n        col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, abs(length(p-m)-abs(d))-0.0025));\n        col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, length(p-m)-0.015));\n    }\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}