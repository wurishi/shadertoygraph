{"ver":"0.1","info":{"id":"ddGGDR","date":"1678379302","viewed":63,"name":"Edge Detection 1","username":"alanjian85","description":"Edge detection.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["edgedetection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 kernel = mat3(\n    -1, -1, -1,\n    -1,  8, -1,\n    -1, -1, -1\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    ivec2 size = textureSize(iChannel0, 0);\n\n    vec4 color = vec4(0);\n    for (int i = -1; i <= 1; ++i) {\n        for (int j = -1; j <= 1; ++j) {\n            vec2 dx = vec2(1.0 / float(size.x), 0.0);\n            vec2 dy = vec2(0.0, 1.0 / float(size.y));\n            color += kernel[i][j] * texture(\n                iChannel0,\n                uv + float(i) * dx + float(j) * dy\n            );\n        }\n    }\n\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}