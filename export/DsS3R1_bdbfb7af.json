{"ver":"0.1","info":{"id":"DsS3R1","date":"1667187871","viewed":155,"name":"blue rays","username":"lomateron","description":"left   side is showing Fouriet transform on previous 128 frames\nright side is showing                               previous 1     frame","likes":6,"published":3,"flags":32,"usePreview":0,"tags":["automata"],"hasliked":0,"parentid":"cdfGRl","parentname":"1D worlds  explorer"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uvec4 tt = floatBitsToUint(texelFetch(iChannel0,ivec2(fragCoord),0));\n    float pi = 3.141592;\n    #define zz 128.\n    #define ww 6\n    float frq = 1.;\n    fragColor = vec4(0);\n    for(int i = 0; i < ww; ++i)\n    {\n        float co = 0.;\n        float si = 0.;\n        for(float y = .5; y < zz; ++y)\n        {\n                               uint t = tt.x;\n            if(y>=32.*1.&&y<32.*2.){t = tt.y;}\n            if(y>=32.*2.&&y<32.*3.){t = tt.z;}\n            if(y>=32.*3.          ){t = tt.w;}\n            float y2 = (y/zz-.5)*20.;\n            float a = float((t>>(int(y)&31))&1U)-.5;\n                  a/= exp(y2*y2);\n            y2 *= frq;\n            co += cos(y2)*a;\n            si += sin(y2)*a;\n        }\n        float l = sqrt(si*si+co*co);\n                vec4 msk = vec4(1,0,0,0);\n      //if((i%3)==0){msk = vec4(1,0,0,0);}\n        if((i%3)==1){msk = vec4(0,1,0,0);}\n        if((i%3)==2){msk = vec4(0,0,1,0);}\n        fragColor += l*msk;\n        frq *= 1.33;\n    }\n    fragColor *= (3./float(ww))*.35;\n    if(fragCoord.x>iResolution.x*.5){fragColor = vec4(tt.x&1U);}\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define rz 120.  //size of each world in pixels\n#define sz  3.   //size of kernel across space\n#define tz  3    //size of kernel across time          must be <= 32","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"uvec4 read(vec2 u, vec2 m)\n{\n    //vec2 o = mod(u+m,rz);\n    //     u = floor(u/rz)*rz+o;\n    return floatBitsToUint(texelFetch(iChannel0,ivec2(u+m),0));\n}\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    int re = -int((iFrame&3)==0);\n    uvec4 tt = read(u,vec2(0,re));\n    float ck = -floor((sz-1.)*.5);    //center the kernel\n    float ev = float(mod(sz,2.)==0.); //move and resize kernel when sz = even\n    uint o = 0U;                      //sum of all bits\n                          float n = (float(iFrame&1)-1.)*ev;\n    for(int   t=0 ; t<tz; ++t){ float m = n*(1.-float(t&1)); float s2 = sz-float(t&1)*ev; \n    for(float i=0.; i<s2; ++i){ uint r = read(u,vec2(i+ck+m,re)).x;\n                                o += (r>>t)&1U;\n    }}\n    \n    uint a = 16U*6U+7U;\n    //if(o>=32U){a = 1430607221U;}\n    o = ((tt.x)<<1U) | ((a>>(o&31U))&1U);\n    tt = uvec4(o,(tt.x>>31)|(tt.y<<1),\n                 (tt.y>>31)|(tt.z<<1),\n                 (tt.z>>31)|(tt.w<<1));\n    fragColor = uintBitsToFloat(tt);\n    if((iFrame>>2)!=int(u.y)){fragColor = texelFetch(iChannel0,ivec2(u),0);}\n    if(iFrame==0||iMouse.z>.5)\n    {\n        float r = fract(cos(dot(u,vec2(1.76543,iTime+9.)))*5467.5678)*11111.;\n        fragColor = vec4(r);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}