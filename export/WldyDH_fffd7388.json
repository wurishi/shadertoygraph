{"ver":"0.1","info":{"id":"WldyDH","date":"1608989368","viewed":84,"name":"FractalNoise","username":"PoSma40k","description":"Generated own fractal noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noisemathpurefunctions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Author Posma40k\n//custom noise\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\n\nfloat plot(vec2 uv,float x)\n{\n\tfloat s = smoothstep(x - .02, x, uv.y); //- smoothstep(x, x + 0.04, uv.y);\n    return s;\n}\n\nfloat SmStep(float x, float coeff, float num)\n{\n\tfloat smoothStep = ((((fract(x/coeff - num) - 0.884) / -1. - 0.762) / -0.629 + 0.795) * \n              (((fract(x/coeff - num) - 0.884) / -1. - 0.285) + 0.552) * ((fract(x/coeff - num) - 0.884) / -1. / -0.752)) * 1.173 + 0.962;\n    return smoothStep;\n}\n\nfloat Floor(float x, float coeff, float num)\n{\n    float y = floor(x/coeff - num);\n\treturn  y;   \n}\nfloat Fract(float x, float coeff, float num)\n{\n\tfloat y = Floor(x, coeff, num);\n    y = fract(sin(y) * 999.);\n    return y;\n}\n\n\nfloat GenerateNoise(float x)\n{\n    float noise = Fract(x, 1., 0.) * SmStep(x, 1., 0.)+ Fract(x, 1., 1.) * (SmStep(x, 1., 1.) * -0.96 + 1.);;\n    return noise;\n}\n\nfloat GenerateFractalNoise(float x)\n{\n\tfloat fractalNoise = GenerateNoise(x) + GenerateNoise(x/0.5)*0.5 +GenerateNoise(x/0.25)*0.25+\n        \t\t\t\t GenerateNoise(x/0.125)*0.125 + GenerateNoise(x/0.625)*0.0625 + \n        \t\t\t\t GenerateNoise(x/0.031)*0.031;\n    return fractalNoise;\n}\n\n\nvoid mainImage(out vec4 col, in vec2 coords)\n{\n    vec2 uv = coords.xy / iResolution.xy; //normalize pixel coords\n    vec3 color = vec3(0.); //black screen color\n    uv *= 5.; //scaling \n    uv.x += iTime *0.5; //move x\n    float x = uv.x;\n    float noise = GenerateFractalNoise(x);//generate noise\n    float y = plot(uv, noise); //draw noise\n    color = vec3(1.-y) + vec3(1., 0., 1.0);\n    col = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}