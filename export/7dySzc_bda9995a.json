{"ver":"0.1","info":{"id":"7dySzc","date":"1635010908","viewed":268,"name":"20211024_おさんぽ会","username":"0b5vr","description":"おさんぽ\n\n@sp4ghet fan art\n","likes":21,"published":1,"flags":32,"usePreview":0,"tags":["3d","raymarching","subsurfacescattering","sss"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define fs(i) fract(sin((i)*114.514)*1919.810)\n\nfloat time;\nfloat seed;\n\nconst float PI =acos(-1.);\nconst float TAU=PI*2.;\nconst float FAR=1E2;\n\nmat2 r2d(float t){\n  return mat2(cos(t),-sin(t),sin(t),cos(t));\n}\n\nfloat random(){\n  seed++;\n  return fs(seed);\n}\n\nmat3 orthBas(vec3 z){\n  z=normalize(z);\n  vec3 up=abs(z.y)>.99?vec3(0,0,1):vec3(0,1,0);\n  vec3 x=normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\nvec3 cyclicNoise(vec3 p){\n  mat3 b=orthBas(vec3(-1));\n  vec4 accum=vec4(0);\n  for(int i=0;i<5;i++){\n    p*=b;\n    p*=1.2;\n    p+=sin(p.yzx);\n    accum+=vec4(cross(sin(p.zxy),cos(p)),1);\n    accum*=2.0;\n  }\n  return accum.xyz/accum.w;\n}\n\nvec3 uniLam(vec3 n){\n  float phi16_=TAU*random();\n  float cosTheta=sqrt(random());\n  float sinTheta=sqrt(1.-cosTheta*cosTheta);\n  return orthBas(n)*vec3(sinTheta*sin(phi16_),sinTheta*cos(phi16_),cosTheta);\n}\n\nfloat sdsp4ghet(vec3 p){\n  // hello sp4ghet\n  vec2 cy=vec2(p.y,length(p.xz));\n  float phi=atan(p.z,p.x);\n  cy.y-=3.;\n  cy*=r2d(4.0*phi);\n  cy.x=abs(cy.x+.3*sin(time+phi))-.5;\n  return length(cy)-.5;\n}\n\nvec4 map(vec3 p){\n  vec3 pt=p;\n  float d=sdsp4ghet(p);\n  d+=cyclicNoise(p+time).x*.5;\n  \n  return vec4(d,0,0,0);\n}\n\nvec3 nMap(vec3 p){\n  vec2 d=vec2(0,.001);\n  return normalize(vec3(\n    map(p+d.yxx).x-map(p-d.yxx).x,\n    map(p+d.xyx).x-map(p-d.xyx).x,\n    map(p+d.xxy).x-map(p-d.xxy).x\n  ));\n}\n\nfloat aoMap(vec3 p,vec3 N){\n  float accum=0.0;\n  for(int i=0;i<20;i++){\n    vec3 pt=p;\n    float len=0.02+0.5*random();\n    pt+=uniLam(N)*len;\n    accum+=smoothstep(0.02,0.0,map(pt).x)/20.;\n  }\n  return pow(clamp(1.0-accum,0.,1.),2.0);\n}\n\nfloat ssMap(vec3 p,vec3 rd,vec3 N,vec3 L){\n  vec3 sd=refract(rd,N,1.0/1.5);\n  float accum=0.0;\n  for(int i=0;i<20;i++){\n    vec3 pt=p;\n    float len=0.01+1.0*random();\n    pt+=(sd)*len;\n    pt+=uniLam(L)*len;\n    accum+=max(0.0,-map(pt).x)/len/20.;\n  }\n  return pow(clamp(1.0-accum,0.,1.),3.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vec2 p = uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n\n  time=iTime;\n  seed=texture(iChannel0,uv*8.).x;\n  seed+=fract(time);\n\n  vec3 co=vec3(0,4,8);\n  vec3 ct=vec3(0,-.6,0);\n  vec3 cz=normalize(co-ct);\n\n  vec3 col=vec3(0);\n  vec3 colRem=vec3(1);\n  \n  vec3 ro=co;\n  vec3 rd=orthBas(cz)*normalize(vec3(p,-2));\n  vec3 fp=ro+rd*7.;\n  ro.xy+=(vec2(random(),random())-.5)*mat2(1,1,-1,1)*.1;\n  rd=normalize(fp-ro);\n  float rl=.01;\n  vec3 rp=ro+rd*rl;\n  vec4 isect=vec4(0);\n  \n  for(int i=0;i<160;i++){\n    isect=map(rp);\n    rl+=isect.x*.5;\n    rp=ro+rd*rl;\n  }\n  \n  if(isect.x<.01){\n    vec3 N=nMap(rp);\n    vec3 L=normalize(vec3(1,0,0));\n    L.zx=L.zx*r2d(time);\n    float dotLN=max(0.0,dot(L,N));\n\n    vec3 dif=vec3(.2,.7,.6);\n    float ss=ssMap(rp,rd,N,L);\n    dif=mix(dif,ss*vec3(.2,.2,.6),.7)/PI;\n\n    vec3 H=normalize(-rd+L);\n    float dotNH=dot(N,H);\n    float FSpec=pow(clamp(1.0-dot(-rd,N),0.0,1.0),5.0);\n    vec3 spec=vec3(dotLN*pow(max(0.0,dotNH),50.0));\n    spec*=mix(\n      0.04,\n      1.0,\n      FSpec\n    );\n\n    col=6.0*(dif+spec);\n    col*=aoMap(rp,N);\n  }else{\n    col=vec3(.07,.09,.1)+vec3(.0,.01,.02)*rd.y;\n  }\n  \n  col=pow(col,vec3(.4545));\n  col*=1.0-0.2*length(p);\n  col=vec3(\n    smoothstep(0.04,0.96,col.x),\n    smoothstep(0.0,1.0,col.y),\n    smoothstep(-0.04,1.02,col.z)\n  );\n  \n  col=mix(texture(iChannel1,uv).rgb,col,0.5);\n  \n  fragColor = vec4(col,1);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}