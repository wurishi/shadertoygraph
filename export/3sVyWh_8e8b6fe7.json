{"ver":"0.1","info":{"id":"3sVyWh","date":"1602726709","viewed":124,"name":"Utils_Checkerboard","username":"bigt","description":"棋盘格","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.1415926;\n\nmat2 rotateZ(float angle)\n{\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\n// 创建棋盘格(下列参数均以像素为单位)\n// pos:当前坐标,size:棋盘格大小,threshold:aa大小\n// return:0为奇行奇列或偶行偶列,1为奇行偶列或偶行奇列,0~1为aa值\nfloat checkerboard(vec2 pos, vec2 size, float threshold)\n{\n    vec2 gc = floor(pos/size);// 网格坐标\n    float flag = abs(mod(gc.x,2.0) - mod(gc.y,2.0));// abs=1表示奇行偶列或者偶行奇列\n    \n    // aa\n    vec2 t1 = smoothstep(size,size-threshold,pos - floor(pos/size)*size);// 当前坐标在右、上 t像素的时候得到0~1的值,其余地方是1\n    vec2 t2 = smoothstep(0.0,threshold,pos - floor(pos/size)*size);// 左、下得到0~1的值，其余是1,乘积得到四边的渐变值\n    float aa = t1.x*t1.y*t2.x*t2.y;\n    \n    return flag*aa;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 size = vec2(30.0,30.0);// 棋盘格的大小(单位:像素)\n    vec3 col1 = vec3(0.15);// 两个格子的颜色\n    vec3 col2 = vec3(0.85);\n    float threshold = 2.0;// aa(单位:像素)\n    \n    vec2 coord = fragCoord;\n    //coord -= iResolution.xy / 2.0;\n    float p = mod(iTime, 10.0) / 10.0;// 20s周期,得到0~1的值\n    float v = abs(sin(p * pi)) * 45.0;// 每个周期内得到0->45度->0变化的角度\n    coord *= rotateZ(radians(v));\n    //coord += iResolution.xy / 2.0;\n    \n    float flag = checkerboard(coord, size, threshold);\n    vec3 col = mix(col1, col2, flag);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}