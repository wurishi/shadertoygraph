{"ver":"0.1","info":{"id":"3tdGzr","date":"1575476553","viewed":55,"name":"Checkerboard-Assignment","username":"ZachJones","description":"programming assignment","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["graphics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rowNum = 9.0;\nfloat columnNum = 10.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspectRatio = iResolution.y/iResolution.x;\n\n    // Declare the Square Colors\n    vec4 blackSquare = vec4(1.0, 1.0, 1.0, 1.0);\n\tvec4 evenImage = vec4(0.0, 0.0, 0.0, 0.0);\n   \n    // Makes the rows and columns the correct size\n    float squareSizeColumns = (iResolution.x / columnNum);\n\tfloat squareSizeRows = (iResolution.y / rowNum);\n   \n    // the pixel size of the squares\n    vec2 squareSize = vec2(squareSizeColumns, squareSizeRows);\n   \n    //floors the varaible so that we have a whole integer\n    vec2 squares = floor(fragCoord / squareSize);\n   \n    //make the layers into the images\n    vec4 layer1 = vec4(evenImage);\n    vec4 layer2 = vec4(blackSquare);\n   \n    //turns all the even squares into the first layer\n    layer1.a = mod(squares.x + mod(squares.y, 2.0),2.0);\n   \n    //combines then layers\n    vec4 color = vec4(mix(layer1, layer2, layer1.a));\n\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}