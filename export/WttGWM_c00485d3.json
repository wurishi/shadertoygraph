{"ver":"0.1","info":{"id":"WttGWM","date":"1576529932","viewed":175,"name":"2d ray casting","username":"monada","description":"simple 2d ray casting","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI2 6.2831\n\nvec3 line_intersect( vec2 p1, vec2 p2, vec2 p3, vec2 p4 )\n{\n    float x1 = p1.x;\n    float y1 = p1.y;\n\n    float x2 = p2.x;\n    float y2 = p2.y;\n\t\n    float x3 = p3.x;\n    float y3 = p3.y;\n\n    float x4 = p4.x;\n    float y4 = p4.y;\n\n    float d = ( x1 - x2 ) * ( y3 - y4 ) - ( y1 - y2 ) * ( x3 - x4 );\n\t\n    vec3 res = vec3( 0.0 );\n    \n    if( d == 0. )\n    {\n        return res;\n    }\n\n    float t = ( ( x1 - x3 ) * ( y3 - y4 ) - ( y1 - y3 ) * ( x3 - x4 ) ) / d;\n    \n\t\n    if( 0.0 <= t && t <= 1.0)\n    {\n\t\tfloat u = -( ( x1 - x2 ) * ( y1 - y3 ) - ( y1 - y2 ) * ( x1 - x3 ) ) / d;\n\t\t\n\t\tif( u <= 1. && u >= 0. )\n\t\t{\n            res.x = x1 + t * ( x2 - x1 );\n            res.y = y1 + t * ( y2 - y1 );\n            res.z = 1.0;\n\t\t}\n    }\n    \n    return res;\n}\n\n\nvec3 intersect_with_scene( vec2 ray_pos, vec2 ray_end )\n{\n     vec2 line1_p1 = vec2( 0.4, -0.1 );\n     vec2 line1_p2 = vec2( 0.4,  0.1 );\n    \n     vec2 line2_p1 = vec2( -0.3, -0.5 );\n     vec2 line2_p2 = vec2( 0.3,  -0.4 );\n       \n     vec2 line3_p1 = vec2( -0.6, 0.2 );\n     vec2 line3_p2 = vec2( -0.4, 0.3 );\n    \n     vec2 line4_p1 = line3_p2;\n     vec2 line4_p2 = vec2( -0.3, 0.1 );\n    \n     vec2 line5_p1 = line4_p2;\n     vec2 line5_p2 = vec2( -0.5, 0.0 );\n    \n     vec2 line6_p1 = line5_p2;\n     vec2 line6_p2 = line3_p1;\n     \n     vec2 line7_p1 = line1_p1;\n     vec2 line7_p2 = vec2( 0.6,  -0.1 );\n    \n     vec2 line8_p1 = line7_p2;\n     vec2 line8_p2 = vec2( 0.6,  0.1 );\n     \n     vec2 line9_p1 = line8_p2;\n     vec2 line9_p2 = line1_p2;\n     \n     vec2 line10_p1 = line2_p1;\n     vec2 line10_p2 = vec2( 0.1,  -0.8 );\n    \n     vec2 line11_p1 = line10_p2;\n     vec2 line11_p2 = line2_p2;\n     \n     vec3 pi = line_intersect( ray_pos, ray_end, line1_p1, line1_p2 );\n     float min_dist = 1000.0;\n    \n     if( pi.z > 0.0 )\n     {\n         min_dist = length( pi.xy );\n     }\n    \n     vec3 pi2 = line_intersect( ray_pos, ray_end, line2_p1, line2_p2 );\n     \n     if( pi2.z > 0.0 )\n     {\n         float d = length( pi2.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi2;\n            min_dist = d;\n         }\n     }\n    \n     vec3 pi3 = line_intersect( ray_pos, ray_end, line3_p1, line3_p2 );\n     \n     if( pi3.z > 0.0 )\n     {\n         float d = length( pi3.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi3;\n            min_dist = d;\n         }\n     }\n    \n     vec3 pi4 = line_intersect( ray_pos, ray_end, line4_p1, line4_p2 );\n     \n     if( pi4.z > 0.0 )\n     {\n         float d = length( pi4.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi4;\n            min_dist = d;\n         }\n     }\n    \n     vec3 pi5 = line_intersect( ray_pos, ray_end, line5_p1, line5_p2 );\n     \n     if( pi5.z > 0.0 )\n     {\n         float d = length( pi5.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi5;\n            min_dist = d;\n         }\n     }\n    \n     vec3 pi6 = line_intersect( ray_pos, ray_end, line6_p1, line6_p2 );\n     \n     if( pi6.z > 0.0 )\n     {\n         float d = length( pi6.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi6;\n            min_dist = d;\n         }\n     }\n    \t\n     vec3 pi7 = line_intersect( ray_pos, ray_end, line7_p1, line7_p2 );\n \n     if( pi7.z > 0.0 )\n     {\n         float d = length( pi7.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi7;\n            min_dist = d;\n         }\n     }\n     \n     vec3 pi8 = line_intersect( ray_pos, ray_end, line8_p1, line8_p2 );\n    \n     if( pi8.z > 0.0 )\n     {\n         float d = length( pi8.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi8;\n            min_dist = d;\n         }\n     }\n     \n     vec3 pi9 = line_intersect( ray_pos, ray_end, line9_p1, line9_p2 );\n    \n     if( pi9.z > 0.0 )\n     {\n         float d = length( pi9.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi9;\n            min_dist = d;\n         }\n     }\n    \n      \n     vec3 pi10 = line_intersect( ray_pos, ray_end, line10_p1, line10_p2 );\n     \n     if( pi10.z > 0.0 )\n     {\n         float d = length( pi10.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi10;\n            min_dist = d;\n         }\n     }\n    \n     vec3 pi11 = line_intersect( ray_pos, ray_end, line11_p1, line11_p2 );\n     \n     if( pi11.z > 0.0 )\n     {\n         float d = length( pi11.xy );\n         if( d < min_dist )\n         {\n         \tpi = pi11;\n            min_dist = d;\n         }\n     }\n    \n     return pi;\n}\n\nvec3 cast_light_impl( vec2 light_pos, vec2 p, vec3 light_color, float intensive )\n{\n    vec2 ray_pos = light_pos;\n    \n    vec2 dir = p;\n    vec2 ray_end = dir;\n    \n    float d = 0.0;\n\n    float light_radius = 1.001;\n    \n    if( light_radius == 1.0 )\n    {\n        vec3 pi = intersect_with_scene( ray_pos, ray_end );\n    \n    \tif( pi.z > 0.0 )\n    \t{\n        \treturn vec3( 0.0 );\n    \t}\n        \n        distance( ray_pos, ray_end ) * 0.15;\n    \n        d = 1.0 - d;\n        d = clamp( d, 0., 1.0 );\n    }\n    else\n    {\n        vec2 ray_pos1 = ray_pos + vec2( 0.0, light_radius );\n    \tvec3 pi = intersect_with_scene( ray_pos1, ray_end );\n        if( pi.z > 0.0 )\n    \t{\n            pi = intersect_with_scene( ray_pos + vec2( light_radius, 0.0 ), ray_end );\n            \n            if( pi.z > 0.0 )\n            {\n        \t\treturn vec3( 0.0 );\n            }\n    \t}\n    }\n  \n    \n    d = pow( d, 2.5 );\n    \n    return \n        clamp(\n           light_color * d * intensive,// smoothstep( 0.0, 1.0, d * intensive ),\n            vec3( 0.0 ), vec3( 1.0 ) );\n}\n\n\nvec3 cast_light( vec2 light_pos, vec2 p, vec3 light_color, float _p )\n{\n    vec3 res = vec3( 0.0 ); \n    vec2 current_light_pos = light_pos;\n    \n    float r_step = 0.1;\n    \n    float iter = 1.0;\n    res += cast_light_impl( current_light_pos, p, light_color, _p );\n    \n    for( float r = 0.0; r <= 1.0; r += r_step )\n    {\n        float c = cos( r );\n        float s = sin( r );\n        \n        vec2 dir = normalize( vec2( c, s ) );\n        res += cast_light_impl( current_light_pos + dir * 0.01, p, light_color, _p * 0.5 );\n        \n        iter += 1.0;\n    }\n    \n    res /= iter;\n    \n\n    return res; \n}\n\nfloat gamma = 2.2;\n\n// from: https://www.shadertoy.com/view/lslGzl\nvec3 Uncharted2ToneMapping(vec3 color)\n{\n\tfloat A = 0.15;\n\tfloat B = 0.50;\n\tfloat C = 0.10;\n\tfloat D = 0.20;\n\tfloat E = 0.02;\n\tfloat F = 0.30;\n\tfloat W = 11.2;\n\tfloat exposure = 2.;\n\tcolor *= exposure;\n\tcolor = ((color * (A * color + C * B) + D * E) / (color * (A * color + B) + D * F)) - E / F;\n\tfloat white = ((W * (A * W + C * B) + D * E) / (W * (A * W + B) + D * F)) - E / F;\n\tcolor /= white;\n\tcolor = pow(color, vec3(1. / gamma));\n\treturn color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    vec2 p = uv * 2.0 - 1.0;\n    p.x *= iResolution.x / iResolution.y;\n\n    vec3 col = vec3( 0.0 );\n\t\n    vec2 mouse_coord = iMouse.xy / iResolution.xy;\n   \n    mouse_coord = mouse_coord * 2. - 1.;\n    mouse_coord.x *= iResolution.x / iResolution.y;\n   \n    vec2 light_pos = mouse_coord;\n\t\n    vec2 light_pos_2 = vec2( 0.0 );\n    vec2 light_pos_3 = vec2( -0.75, 0.2 );\n    \n    col = cast_light( light_pos,    p, vec3( 1.0, 1.0, 0.0 ), 1.0 );\n  //  col += cast_light( light_pos_2, p, vec3( 0.0, 1.0, 0.0 ), 1.0 );\n   // col += cast_light( light_pos_3, p, vec3( 1.0, 0.0, 0.0 ), 1.0 );\n    \n  \tcol = Uncharted2ToneMapping( col );\n        \n \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}