{"ver":"0.1","info":{"id":"XfBBR3","date":"1725224880","viewed":39,"name":"70â€™s Trip","username":"SirShart","description":"Trippy vibe","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0; // Center UV coordinates to range [-1, 1]\n    uv.x *= iResolution.x / iResolution.y; // Correct aspect ratio\n\n    // Zoom factor to create a close-up effect\n    float zoom = 0.30;\n    uv *= zoom;\n\n    // Time-based rotation to create a dynamic, interchanging effect\n    float angle = iTime * 0.5;\n    mat2 rotation = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv *= rotation;\n\n    // Symmetry manipulation for kaleidoscope effect\n    float k = 8.0; // Number of mirrors (symmetry lines)\n    float theta = atan(uv.y, uv.x);\n    float radius = length(uv);\n    theta = mod(theta, 2.0 * 3.14159265359 / k);\n    uv = radius * vec2(cos(theta), sin(theta));\n\n    // Dynamic fractal noise function to add intricate patterns\n    float noise = 0.0;\n    float scale = 1.0;\n    for(int i = 0; i < 6; i++)\n    {\n        noise += sin(scale * uv.x + iTime * 0.3) * cos(scale * uv.y + iTime * 0.3);\n        uv *= 1.2; // Slightly less aggressive scaling for smoother patterns\n        scale *= 1.8;\n    }\n\n    // Dynamic warping for a more organic feel\n    float warp = sin(noise * 0.7 + iTime) * 0.3;\n    uv += warp * uv / length(uv + 0.1);\n\n    // Final pattern with a time-based interchanging effect\n    float pattern = sin(10.0 * uv.x) * cos(10.0 * uv.y) + noise;\n\n    // Vivid color mapping using HSV to RGB conversion\n    vec3 color = vec3(0.6 + 0.4 * sin(pattern * 4.0 + iTime * 0.8), \n                      0.7 + 0.4 * cos(pattern * 4.0 + iTime * 0.8), \n                      0.6 + 0.2 * sin(2.0 * pattern * 4.0 - iTime * 0.8));\n    \n    // Final color mix to blend the entity into the kaleidoscope\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}