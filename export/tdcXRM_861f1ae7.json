{"ver":"0.1","info":{"id":"tdcXRM","date":"1571657214","viewed":531,"name":"Asteroid Abduction","username":"LJ","description":"\"Clouds of microparticles suspended in mid air tinted everything in a warm light. The spatially unstable gravitational field caused rocks to ascend from the surface towards an eternal journey in space.\"\nSee more: twitter.com/LJ_1102\n","likes":17,"published":1,"flags":64,"usePreview":1,"tags":["procedural","raymarching","space","cinematic","chill","cookiezine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MlX3Wf","filepath":"https://soundcloud.com/drsounds/ambient-music-for-sleep-2h","previewfilepath":"https://soundcloud.com/drsounds/ambient-music-for-sleep-2h","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// @author Jan <LJ> Scheurer\n\n#define ANAGLYPH\n\n#define time iTime*.5\n\nvec3 ro,rs;\nfloat rand(vec2 p){return fract(sin(dot(vec2(12.404,48.31243),p))*42634.653123);}\nfloat rand(vec3 p){return fract(sin(dot(vec3(12.404,23.5213,48.31243),p))*42634.653123);}\nconst vec2 O=vec2(1,0);\nfloat noise(vec2 p){return texture(iChannel1,p/64.).r;}\nfloat noise(vec3 p){\n    vec3 b=floor(p),f=fract(p);return mix(\n        mix(mix(rand(b+O.yyy),rand(b+O.xyy),f.x),mix(rand(b+O.yxy),rand(b+O.xxy),f.x),f.y),\n        mix(mix(rand(b+O.yyx),rand(b+O.xyx),f.x),mix(rand(b+O.yxx),rand(b+O.xxx),f.x),f.y),f.z);\n}\nfloat gn(vec2 p){return texture(iChannel2,p/128.).r*1.2+texture(iChannel1,p/32.).r*.1;}\nmat2 r2d(float a){float sa=sin(a),ca=cos(a);return mat2(ca,sa,-sa,ca);}\nfloat bmin(float a,float b,float k){return min(min(a,b),max(a,b)-k);}\nvec2 amod(vec2 p,float a){a=mod(atan(p.x,p.y),a)-a*.5;return vec2(cos(a),sin(a))*length(p);}\nfloat map(vec3 p){\n    float a=0.,cid=rand(floor(p.xz/20.+.5)*10.),d=p.y+gn(p.xz*.1)*4.-1.;\n    if(d<.5)\n        d-=max(texture(iChannel2,p.xz*.05).g-.6,0.)*.2+\n        \tmax(6.-length(p),0.)+\n        \tmin(texture(iChannel2,p.xz).b,.5)*\n        \tsmoothstep(2.,0.,length(ro-p))*.01+\n        \tmax(gn(p.xz)-.8,0.)*.5\n       \t;\n    vec3 o=p,q;\n    p.xz=mod(p.xz+10.,20.)-10.;\n    mat2 r=r2d(cid*.7-.3);\n    p.y-=1.;\n    if(length(o.xz)<7.)p.y-=4.+sin(time*.2),a=1.;\n    p.yz*=r,p.xz*=r;\n    q=p;q.yz*=r;\n    p.xz*=r2d(p.y*.2);\n    p=abs(p)-(vec2(2.-max(-p.y,0.)*.5,2.).xyx+vec3(gn(p.zy*vec2(.1,1)*1.5),gn(p.xz)*.5,gn(p.xy*vec2(.1,1)*1.5)));\n    d=min(min(d,-length(o)+60.),bmin(\n        length(max(p+noise(p*4.)*.3,0.))-.2-a,\n        max(max(abs(q.x)+2.,abs(q.z)-3.*cid)-3.,abs(q.y-2.)-.4),\n        .5\n    )-cid);\n    return min(d,max(\n        noise(mod(o*5.+vec3(0,-time*3.*sign(o.y-3.5),0),100.)-50.)-.1-step(3.5,o.y)*.05,\n        max(length(o.xz)-5.+noise(o.xy*.4)*2.,-o.y-5.))\n   \t);\n}\nconst vec2 N=vec2(.005,0);\nvec3 render(vec3 rd){\n\tfloat md;vec3 mp=ro;\n    for(int i=0;i<70;i++)if(mp+=rd*(md=map(mp)),md<.001)break;\n    vec3\n        n=normalize(map(mp)-vec3(map(mp-N.xyy),map(mp-N.yxy),map(mp-N.yyx))),\n        lp=vec3(-5.,9.,2.),\n        l=normalize(lp-mp)\n    ;\n    float\n        ao=map(mp+n*.5)*.1+map(mp+n*2.)*.05,\n        falloff=max(1.-length(lp-mp)*.07,0.)\n    ;\n    falloff*=falloff;\n    return pow(texture(iChannel2,mp.xz*.0005).rgb,vec3(3.))+\n        mix(\n            texture(iChannel2,mp.xz*.2).rgb*max(dot(n,l),0.)*3.*.03+texture(iChannel2,mp.xz).rgb*ao*.0375,\n            vec3(.2,.15,.1)*.4+gn(rd.xy*3.+time*.1)*.1,\n            smoothstep(-5.,50.,length(ro-mp)-gn(rd.xy*5.+time*.1)*10.)\n        )*5.\n    ;\n        \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv=fragCoord/iResolution.xy,p=uv*2.-1.;\n    p.x*=iResolution.x/iResolution.y;\n    ro=vec3(-7.,-.5,13);\n    vec3 rd=normalize(vec3(p*r2d(sin(time*.12)*.1),-1.3+length(p)*.2));\n    mat2 rt=r2d(10.635+sin(time*.2)*.02);\n    rd.yz*=r2d(-.35);\n    ro.xz*=rt,rd.xz*=rt;\n    fragColor=vec4(0);\n    #ifdef ANAGLYPH\n    float focal=-.015;\n    rs=rd;rs.xz*=r2d(focal);\n    fragColor.rgb += render(rs)*vec3(1,0,0);\n    ro.xz+=vec2(.035,0)*rt;rs.xz=rd.xz*r2d(-focal);\n    fragColor.rgb += render(rs)*vec3(0,1,1);\n    #else\n    fragColor.rgb += render(rd);\n    #endif\n    fragColor.rgb = pow(fragColor.rgb,vec3(1./2.2));\n\tfragColor.rgb *= vec3(1.1,1.1,1.)*.9*max(1.-length(p)*.45+.7*uv.y*smoothstep(-.1,0.2,max(abs(p.x-.65-p.y*.2)-.32,p.y+p.x*.2-.5))*max(1.-abs(p.x-.8),0.)*2.*gn(p.xx*5.-p.y),0.);\n\tfragColor.rgb = 1.1*mix(fragColor.rgb,vec3(.43,.4,.4),(gn(p*3.+noise(vec3(p,time))-time)*noise(p))*.5);\n}\n","name":"Image","description":"","type":"image"}]}