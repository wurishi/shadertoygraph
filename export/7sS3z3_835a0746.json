{"ver":"0.1","info":{"id":"7sS3z3","date":"1617724871","viewed":104,"name":"Fiona","username":"SnoopethDuckDuck","description":"metallic thing","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nconst float pi = 3.14159;\nconst float pi2 = 2. * pi / 3.;\nconst float pi3 = 4. * pi / 3.;\n\nfloat osc(float a)\n{\nreturn 0.5 * (1. + cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\nvec2 dir = uv.xy - 0.5;\n//dir += 1.5 * random(uv.xx);\ndir += 0.25 * random(floor(4. *(25. + 3. * cos( 0.5 * iTime))*  (uv.yy - 0.5) *  (uv.xx - 0.5)));\nfloat theta =  atan( dir.y,dir.x);\ndir += vec2(sin(3. * theta + 0.8 * iTime),sin(3. *  theta + 0.8 * iTime));\ndir += 0.08 * random(vec2(length(dir),length(dir)));\nfloat d = (1.75 + 0.25 * sin(iTime / 3.)) * length(dir);\n\nfloat val = 1.- sin(cos(2. * theta - iTime)) + 1. - cos(theta + iTime);\nfloat val2 = 1.- sin(cos(2. * theta - iTime + pi2)) + 1. - cos(theta + iTime);\nfloat val3 = 1.- sin(cos(2. * theta - iTime + pi3)) + 1. - cos(theta + iTime);\n\nfloat q = osc(0.2 * iTime);\nfloat q2 = osc(0.4 * iTime + pi2);\nfloat q3 = osc(0.8 * iTime + pi3);\n\n\n    // Time varying pixel color\n    vec3 col = 1./  d * vec3(\n    smoothstep(val,0., d * q3 * val2),\n     smoothstep(val2,0., d * q * val3),\n     smoothstep(val3,0., d * q2 * val)\n    );\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}