{"ver":"0.1","info":{"id":"4X2XWR","date":"1710458738","viewed":55,"name":"dvd ball with sound","username":"masoniis","description":"Might have to reset the video to get sound working, can adjust default speed and size of ball in the common file\n\nSpeed of ball doubles on an interval","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["sound","ball","dvd"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord/iResolution.xy;\n    float xWidth = iResolution.x/iResolution.y;\n    float yWidth = 1.;\n    \n    float loopsX = floor(iTime / (speed * xSpeed));\n    xSpeed /= exp2(loopsX);\n    \n    float loopsY = floor(iTime / (speed * ySpeed));\n    ySpeed /= exp2(loopsY);\n    \n    uv.x *= xWidth; // multiply x by aspect ratio\n    \n    float positionY = radius+(abs(fract(iTime / (speed * ySpeed)) - 0.5)*2.0*(yWidth - 2.0 * radius));\n    float positionX = radius+(abs(fract(iTime / (speed * xSpeed)) - 0.5)*2.0*(xWidth - 2.0 * radius));\n    \n    uv.x -= positionX;\n    uv.y -= positionY;\n  \n    float d = length(uv);\n    \n    // draw ball\n    vec3 color;\n    if (d >= radius && d <= 12.) {\n       color = vec3(0.2, 0.2, 0.2);\n    } else {\n       color = 0.5 + 0.5*sin(iTime+uv.xyx+vec3(0,2,4));;\n    }\n    \n    fragColor = vec4(vec3(color),.5);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{      \n    float loopsX = floor(time / (speed * xSpeed));\n    xSpeed /= exp2(loopsX);\n    \n    float loopsY = floor(time / (speed * ySpeed));\n    ySpeed /= exp2(loopsY);\n\n    float positionY = (abs(fract(time / (speed * ySpeed)) - 0.5))*2.0;\n    float positionX = (abs(fract(time / (speed * xSpeed)) - 0.5))*2.0;\n    \n    vec2 soundWave;\n    if (positionX <= .001 || positionX >= .999\n        || positionY <= .001 || positionY >= .999) {\n        soundWave = vec2( .7 );\n    } else {\n        soundWave = vec2(0);\n    }\n    \n    return soundWave;\n}\n","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"// Globals, feel free to change \n\nfloat radius = .3; // radius of ball\n\nfloat speed = 5.7; // total speed scale, higher is slower\n\nfloat xSpeed = 1.1;  // horizontal speed scaled to aspect ratio, higher is slower\nfloat ySpeed = 1.01; // vertical speed, higher is slower","name":"Common","description":"","type":"common"}]}