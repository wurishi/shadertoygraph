{"ver":"0.1","info":{"id":"3l3BWB","date":"1613830930","viewed":82,"name":"inverse Mandelbrot zoom","username":"nimets123","description":"With plane transformation z=>1/z\nEven in the inverse plane hides the original Mandelbrot shape\n\nBased on Inigo Quilez' Mandelbrot Smooth https://www.shadertoy.com/view/4df3Rn\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int MAXITER = 4000;\nfloat MAXBound = 2000.0;\nvec3 col;\nfloat ret;\n\nint pointcheck (vec2 uv)\n{\n   float denom= uv.x*uv.x+uv.y*uv.y;\n   vec2 npt,pt;\n   uv.x=uv.x/denom;\n   uv.y=uv.y/denom;\n   pt.x=0.0;\n   pt.y=0.0;\nfor (int i=1; i<MAXITER; i++)\n    {\n       if (length(pt) > MAXBound) return i;\n       npt.x = (pt.x*pt.x-pt.y*pt.y)+uv.x;\n       npt.y = (2.0*pt.x*pt.y)+uv.y;\n        pt.x=npt.x;\n        pt.y=npt.y;\n    }    \nreturn 0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time=iTime;\n    \n    vec2 target = vec2(2.91521,0.41271);\n    // -1.2550,.3836  NICE  \n    // 2.7588, 0.5149 \n    // 2.91521,0.41271\n    // to use other points from original Mandelbrot,\n    // use denom = x^2+y^2, x=x/denom, y=y/demon\n\n    \n    vec2 uv = (-iResolution.xy + 2.0*fragCoord.xy)/iResolution.y;    \n\n        \n    float zoo = 0.75 + 0.38*cos(.07*time);\n    float coa = cos( 0.15*(1.0-zoo)*time );\n    float sia = sin( 0.15*(1.0-zoo)*time );\n    zoo = pow( zoo,8.0);\n    vec2 xy = vec2( uv.x*coa-uv.y*sia, uv.x*sia+uv.y*coa);\n        \n\n    vec2 c=vec2(target)+xy*zoo;\n\n    // check mandelbrot\n    float ret = float(pointcheck(c));\n\n    // pixel color\n    col += 0.5 + 0.5*cos( 3.0 + ret*0.15 + vec3(0.0,0.6,1.0));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}