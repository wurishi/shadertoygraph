{"ver":"0.1","info":{"id":"3lsBDB","date":"1597646441","viewed":54,"name":"SDF test rect","username":"Hopepdm","description":"https://blog.csdn.net/weixin_28710515/article/details/89532597","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rectSDF(vec2 p, float size){\n    \n    //if(distance(p , vec2(p.x, 0.5)) < size && distance(p , vec2(0.5, p.y)) < size ) {\n    //\treturn 1.0;\n    //} else {\n    //\treturn 0.0;\n    //}\n    vec2 _size = vec2( size );\n    _size = vec2(0.5) - _size * 0.5;\n    vec2 aa = vec2(.01 * 0.5);\n    vec2 uv = smoothstep( _size, _size + aa, p);\n    uv *= smoothstep(_size, _size + aa, vec2(1.0) - p);\n    return uv.x * uv.y;\n\t\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float wh = iResolution.x / iResolution.y;\n \n    //vec3 col = vec3(rectSDF(uv, vec2(.5, .5 * wh)));\n    \n    vec3 col = vec3(rectSDF(uv, .5));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}