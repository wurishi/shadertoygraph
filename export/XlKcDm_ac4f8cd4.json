{"ver":"0.1","info":{"id":"XlKcDm","date":"1536604557","viewed":561,"name":"007: The shader coding night","username":"Danguafer","description":"007 movie starring Jean Claude Van Damme?\n\nI have this shader idea since 2014. But now we have soundcloud and a video sample featuring Van Damme dying!","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["chromakey","007","james","bond","gunbarrel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGzn","filepath":"/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","previewfilepath":"/media/ap/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","type":"cubemap","channel":3,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sjXDc","filepath":"https://soundcloud.com/imro69/james-bond-theme","previewfilepath":"https://soundcloud.com/imro69/james-bond-theme","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://www.youtube.com/watch?v=pEKNyz8ZN8A\n\n#define TIME iChannelTime[1]\n#define VANDAMME_TIME iChannelTime[1]\n\nfloat c(float r, vec2 p) { return smoothstep(r,r-0.01,length(p)); }\n\nfloat dist(vec3 a, vec3 b) { return abs(a.x - b.x) + abs(a.y - b.y) + abs(a.z - b.z); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy/iResolution.xy;\n\tvec2 p = uv*2.0-1.0;\n\tp.x *= iResolution.x/iResolution.y;\n\tvec3 col;\n\t\n\tfloat t = TIME;\n\t\n\tif (t < 3.0) {\n\t\tfloat s = c(0.15,p-vec2(-2.0+t,0.0));\n\t\tif (t < 3.5) s += c(0.15,p-vec2(-2.0+floor(t*2.0)/2.0,0.0));\n\t\tcol = vec3(s);        \n\t} else { // Final scene\n\t\tfloat local_time = t - 3.0;\n\t\tcol = texture(iChannel0,uv*-1.0).xyz;\n        \n        // Van Damme chromakeying\n        vec3 vandamme = texture(iChannel1, uv).xyz;\n        vec3 green = vec3(0.1, 0.64, 0.1);\n        float distance_to_green = dist(vandamme, green);\n        vandamme = rgb2hsv(vandamme);\n        vandamme.x -= 0.7*(1.0-distance(vandamme.x, 0.9)) - 0.1; // adjusting green hue on borders\n        vandamme = hsv2rgb(vandamme);\n        col = mix(col, vandamme, smoothstep(0.4, 0.55, distance_to_green));\n        \n//\t\tfloat s = c(mix(0.4,2.5,clamp(local_time-2.5,0.0,1.0)),p-mix(vec2(0.75,-1.0),vec2(0.0),clamp(local_time-1.0,0.0,1.0)));\n        float transition = min(local_time, 1.5) / 1.5;\n        vec2 p0 = vec2(1.0, 0.0);\n        vec2 p1 = vec2(0.0, 0.0);\n        float s0 = 0.15;\n        float s1 = 0.6;\n\n        vec2 barrel_center = p - mix(p0, p1, transition);\n        float start = 1.5;\n        float attack = 0.00;\n        float duration = 0.6;\n        float s = c(s0 + local_time, barrel_center);\n        barrel_center.y -= 0.1 * (smoothstep(start, start + attack, local_time) - smoothstep(start + attack, start + attack + duration, local_time));\n\n        float angle = atan(barrel_center.y, barrel_center.x);\n        float barrel_alpha = (1.0 - c(0.6, barrel_center));\n        float lines = smoothstep(0.99, 1.0, sin(angle * 10.0 - 50.0/(1.0+length(barrel_center)))) * barrel_alpha;\n        vec3 d = normalize(vec3(p, 2.0 + lines));\n        vec3 n = -vec3(normalize(barrel_center), 0.0);\n        vec3 barrel_col = pow(texture(iChannel3, reflect(d, n)).xyz * vec3(2.0), vec3(1.2)) * vec3(barrel_alpha);\n        \n\t\tfloat blood_height = -1.0 + (t - 5.0) * 0.2;\n        if (VANDAMME_TIME >= 10.16) {\n            blood_height = -10.0;\n            s = 1.0;\n            barrel_alpha = 0.0;\n        }\n        col = mix(col, barrel_col, barrel_alpha);\n\n        \n        col = mix(vec3(1.0),col,min(local_time,1.0))*s;\n        \n        float blood_alpha = (smoothstep(0.0, 0.01, blood_height + uv.y + sin(uv.x * 20.0) * (0.02 + 0.01*sin(t * 3.0)) + sin(uv.x * 30.0) * (0.02 + 0.01*sin(t * 4.0))));\n\t    vec3 blood = vec3(1.0, 0.0, 0.0) * blood_alpha;\n\t\tcol = mix(col, blood, blood_alpha * 0.4);\n\n\t}\n        \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 rgb2hsv(vec3 c)\n{\n    vec4 k = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, k.wz), vec4(c.gb, k.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 k = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + k.xyz) * 6.0 - k.www);\n    return c.z * mix(k.xxx, clamp(p - k.xxx, 0.0, 1.0), c.y);\n}","name":"Common","description":"","type":"common"}]}