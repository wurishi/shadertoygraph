{"ver":"0.1","info":{"id":"lfKSz1","date":"1714835929","viewed":29,"name":"SDF: Line","username":"newbie2718","description":"Implemented a signed distance function for lines using high school mathematics.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dline(vec2 p, vec2 a, vec2 b)\n{\n    vec2 ap = p-a;\n    vec2 bp = p-b;\n    vec2 ab = b-a;\n    \n    float da = length(ap);\n \n    float ra = dot(ap/da, normalize(ab));\n    float rb = dot(bp, ab);\n    \n    float dl = da*sqrt(max(0.0, 1.0-ra*ra));\n    float ds = mix(da, length(bp), step(0.0, ra));\n    \n    return mix(ds, dl, step(ra*rb, 0.0));\n}\n\nfloat dline(vec2 p, float a, float b)\n{\n    float o = (b-a)*0.5;\n    p.x -= o+a;\n    p = abs(p);\n    \n    float e = step(p.x, o);\n    p.x-=o;\n    \n    return mix(length(p), p.y, e);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/min(iResolution.x, iResolution.y);\n   \n    float dl = dline(uv, vec2(-1.0, 0.0), vec2(1.0, 0.0));\n    \n    // Rotate the coordinate system ... \n    //float dl = dline(uv, -1.0, 1.0);\n\n    vec3 col = vec3(dl);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}