{"ver":"0.1","info":{"id":"4t3fD7","date":"1539793112","viewed":137,"name":"Ahziel - Rectangles","username":"Ahziel","description":"Journey through the \"Book of shader\" - Shape\nI do shaders to learn and have fun. If you have any advice, don't hesitate to tell me ! ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rectangles","mondrian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float square(in vec2 uv, in vec2 pos, in float width, in float height)\n{\n    vec2 bl = step(pos,uv);\n    vec2 hr = step(vec2(1.0) - pos - vec2(width,height), 1.0 - uv);\n    return bl.x * bl.y * hr.x * hr.y;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 aspect = iResolution.xy / min(iResolution.x, iResolution.y);\n    uv *= aspect;\n    \n    // Time varying pixel color\n\tvec3 white = vec3(1.0);\n    vec3 red = vec3(1.0,0.0,0.0);\n    vec3 blue = vec3(0.0,0.0,1.0);\n    vec3 yellow = vec3(1.0,1.0,0.0);\n    \n    vec3 col = white * square(uv,vec2(0.0,0.0),0.5,0.5);\n    col += white * square(uv,vec2(0.0,0.53),0.3,0.3);\n    col += red * square(uv,vec2(0.33,0.53),0.17,0.3);\n    col += white * square(uv,vec2(0.,0.86),0.5,0.14);\n    col += white * square(uv,vec2(0.53,0.0),0.17,1.0);\n    col += yellow * square(uv,vec2(0.73,0.0),0.17,0.17);\n    col += yellow * square(uv,vec2(0.73,0.2),0.17,0.17);\n    col += yellow * square(uv,vec2(0.73,0.4),0.17,0.17);\n    col += yellow * square(uv,vec2(0.73,0.60),0.17,0.17);\n    col += white * square(uv,vec2(0.93,0.0),0.37,0.77);\n    col += blue * square(uv,vec2(0.93,0.80),0.85,0.2);\n    col += white * square(uv,vec2(1.33,0.53),0.45,0.24);\n    col += white * square(uv,vec2(1.33,0.0),0.27,0.5);\n    col += white * square(uv,vec2(1.63,0.0),0.15,0.5);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}