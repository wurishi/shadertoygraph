{"ver":"0.1","info":{"id":"Xc2GDc","date":"1704724643","viewed":148,"name":"SmileyFace-CirclesCombinations","username":"mokasiri","description":"Creating a smiley face using circles","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float sine = sin(angle), cosine = cos(angle);\n    return mat2( cosine, -sine, \n                 sine,    cosine );\n}\n\n\nfloat Circle(vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv - p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size, float rotationZ)\n{\n    \n    uv *= rotationMatrix(rotationZ);\n    uv -= p;\n    uv /= size;\n    \n    \n    float head = Circle(uv,vec2(0.), 0.45, 0.02);\n    float eyes = Circle(uv,vec2(0.2, 0.15), 0.1, 0.01) + Circle(uv,vec2(-0.2, 0.15), 0.1, 0.01);\n    float mouth = -Circle(uv,vec2(0., 0.15), 0.4, 0.01) + Circle(uv,vec2(0., -.1), 0.3, 0.01);\n    mouth = clamp(mouth, 0., 1.0);\n    \n    head -= mouth + eyes;\n    return head;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.y *= iResolution.y/iResolution.x;\n    uv *= 2.;\n    \n    \n    float smiley1 = Smiley(uv, vec2(0.), .8, iTime * 100.);\n    float smiley2 = Smiley(uv, vec2(0.305,0.305), 0.2, -iTime * 120.);\n    vec3 col = vec3(1.,1.,0.) * (smiley1 + smiley2);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}