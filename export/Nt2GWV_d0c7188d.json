{"ver":"0.1","info":{"id":"Nt2GWV","date":"1624747686","viewed":195,"name":"cheesenoice","username":"dok","description":"Live coded on 26.6.2021 - 27.6.2021\nfor livecode.demozoo.org Release Party on https://www.twitch.tv/psenough","likes":8,"published":1,"flags":4,"usePreview":0,"tags":["liveshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define fGlobalTime iTime\n#define v2Resolution iResolution\n#define texFFTSmoothed iChannel0\n\n#define PI 3.1416\n#define TAU (2.0*PI)\n\n// change the factor to \"fit\" your system\nconst float factor = 0.01;\nfloat fft(float f) { return clamp(0.0, 1.0, factor*texture(texFFTSmoothed, vec2(f,f)).r); }\n\nmat2 rot2(float a){ return mat2(sin(a),-cos(a), cos(a), sin(a));}\n\nvec3 sp(vec2 uv, vec2 p, vec2 h, float f) {\n        float p1 = p.x + fGlobalTime;\n        float p2 = p.y + fGlobalTime;\n        float i  = (uv.y * h.x) - (0.5 + 0.5 * sin(uv.x * f * TAU + p1));\n        float j  = (uv.y * h.y) - (0.5 + 0.5 * sin(uv.x * f * TAU + p2));\n        float s = sign(i * j);\n        float d = s * min(abs(i), abs(j));\n\n        return vec3(s,d, uv.x);\n}\n\nfloat ht(vec2 uv) {\n        float c = length(fract(uv * 10.0)-0.5);\n        float rc = mix(0.2, 0.1, fft(0.001));\n        c = step(rc, c);\n        return 1.0 - c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        vec3 col;\n        vec2 uv = vec2(fragCoord.x / v2Resolution.x, gl_FragCoord.y / v2Resolution.y);\n        uv -= 0.5;\n        uv /= vec2(v2Resolution.y / v2Resolution.x, 1);\n\n        uv *= 4.0;\n\n        float c = 0.0;\n        float z = mix(0.1, 0.5, 0.5+0.5*sin(fGlobalTime / 30.0) + 100.0*fft(0.04));\n        for (float i = 0.0; i < 1.0; i += 0.1) {\n                vec3 vv = sp(z * uv * rot2(i*PI), vec2(9.0, 5.0) * i, vec2(1)+fft(0.02)*20.0, 0.025);\n                vv.y = fract(vv.y * 1.0 - fGlobalTime);\n                c += ht(vv.yz);\n        }\n        col = vec3(c / mix(4.0, 2.0, fft(0.05)));\n\n        float l = 0.0;\n        for (float i = 0.0; i < 1.0; i += 0.05) {\n                vec3 vv = sp(uv * rot2(i * TAU), vec2(i, 5.0) * i, vec2(0.9) * i, 0.01);\n                l = max(l, 1.0 - step(mix(0.01, 0.02, fft(0.03)), abs(vv.y)));\n        }\n\n        float d = 1000.0;\n        float rd = 0.5;\n        float dd = mix(0.0, 3.0, sin(fGlobalTime / 20.0));\n        for (float i = 0.0; i < 1.0; i += 0.1) {\n                vec2 dv = vec2(dd + i*fft(0.01)) * rot2(i * TAU - fGlobalTime);\n                d = min(d, length(uv - dv));\n        }\n        if (0.5*d < rd)\n                l = 1.0 - l;\n\n        if (fft(0.005) > 0.8)\n                col *= l;\n        else\n                col *= 1.0 - l;\n\n        if (d < rd)\n                col = 1.0-col;\n\n        fragColor = vec4(col, 1);\n}\n","name":"Image","description":"","type":"image"}]}