{"ver":"0.1","info":{"id":"Xcs3WM","date":"1703225797","viewed":41,"name":"Flying twigs","username":"Scratchboard","description":"Draw a smoothly moving line segment, and add feedback.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["feedback"],"hasliked":0,"parentid":"4cXGRH","parentname":"Lissajous pretzel"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 Y, in vec2 p)\n{\n\tvec2 uv = p.xy / iResolution.xy;\n\tY = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define p0 1.9\n#define q0 0.1\n#define p1 1.15\n#define q1 0.06\n#define p2 1.234\n#define k 0.95\n#define w (1000. * iResolution.y)\n\nvec2 f(vec2 p, float d) {\n    return vec2(mod(p.x - d*p.y/2., 1.),\n                mod(p.y + 3.*p.x/4., 1.));\n}\n\nvoid mainImage(out vec4 Y, in vec2 p) {\n    vec2 uv = p.xy / iResolution.xy;\n    \n    if (iFrame == 0) {\n        Y.rbg = vec3(0);\n        return;\n    }\n    \n    float dt = iTimeDelta;\n    \n    float q = sin(iTime/p2);\n    vec2 x1 = vec2(0.45*sin((iTime - dt) / p0 + q0 + q) + 0.5,\n                   0.45*sin((iTime - dt) / p1 + q1 + q) + 0.5);\n    vec2 x0 = vec2(0.45*cos(iTime / p0 + q0 + q) + 0.5,\n                   0.45*cos(iTime / p1 + q1 + q) + 0.5) * x1;\n    \n    vec4 h = vec4(0.99, 0.98, 0.96, 1.);\n    Y = k * max(texture(iChannel0, uv),\n                h * texture(iChannel0, f(uv, 1. + x1.x * 0.01)));\n    Y.rgb = max(vec3(0.), Y.rgb);\n\n    vec2 r = x0 - x1; float lr = length(r);\n    vec2 s = uv - x1; float ls = length(s);\n    float b = dot(r, s) / lr;\n    float d = (ls*ls - b*b);\n    if (ls <= lr && b > 0.) Y.rgb += vec3(exp(-d*w)) * 0.75;\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}