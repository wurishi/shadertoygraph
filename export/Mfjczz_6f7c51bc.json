{"ver":"0.1","info":{"id":"Mfjczz","date":"1721869572","viewed":46,"name":"The Beacon (Warning: flashes!)","username":"rikr","description":"Warning: Flashing images! I just had this abstract idea and it worked out! The beacon was made in 217 characters by Rik Riesmeijer.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rays","colors","codegolf","flashes","beacon","sternbrocot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The Beacon (Warning: flashes!)\n// By Rik Riesmeijer, 2024 - No rights reserved.\n\n\n/* @Spalmer made a very pleasant version of a fan, uncomment to view it:\nvoid mainImage(out vec4 c, vec2 v)\n{\n    c = fract(tan(vec4(0,1,2,3) - iTime + abs(iResolution.x / 2. - v.x) / v.y));\n}\n*/\n\nvoid mainImage(out vec4 c, vec2 v) {\n    v.y += 50.0; // to bound the loop below.\n    c = vec2(.5, 0).xyxx; // Using the vec4 as stand in of SL mat2 starting point (Left).\n    v.x = 50.0 + abs(iResolution.x / 2. - v.x); // Center beam and make symmetric.\n    for(; v.x > 0.; v.x -= v.y) // Traverse tree backwards (GCD algorithm slow).\n        if(v.x > v.y)           // Slow GCD step (while left is bigger decrease by right).\n            c.zw += .5 * c.xy;  // Fractally add traversed branch.\n        else {                  // To continue we need to swap x and y s. t. x > y.\n            v = v.yx;           // Swap UV along with it to keep track.\n            c = c.ywxz;         // Swap denominator and numerator for continued fraction.\n        }\n    c = fract(c - fract(c.wxyz - iTime) * fract(c.wzxy - iTime)); // Mix colors.\n}\n","name":"Image","description":"","type":"image"}]}