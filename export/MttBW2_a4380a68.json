{"ver":"0.1","info":{"id":"MttBW2","date":"1541142106","viewed":210,"name":"Stretching Squares","username":"Turtle1331","description":"I originally posted this on glslsandbox (http://glslsandbox.com/e#43300).  The pattern is easy to describe with line drawing, but I found it quite tricky to implement as a shader.  ","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["grid","illusion","squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nCopyright © 2017 Turtle1331 (Turtle1331.github.io)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the “Software”), to deal in the Software without\nrestriction, including without limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = (fragCoord - iResolution.xy / 2.) / iResolution.x;\n\tp *= 10.;\n\t\n\tfloat c = 0.;\n\tfloat t = fract(iTime);\n\tt *= t;\n\tt *= 2. - t;\n\t\n\tp *= mat2(1., -t, t, 1.) / (t * t + 1.);\n\tvec2 q = floor(p + .5);\n\tp -= q;\n\tp *= mat2(1., t, -t, 1.);\n\t\n\tfloat d = 10.;\n\tfor (int i = 0; i < 4; i++) {\n\t\td = min(d, max(abs(p.x - .5 - t * .5), abs(p.y - .5 + t * .5)) - t * .5);\n\t\tp *= mat2(0., 1., -1., 0.);\n\t}\n\t\n\tc = (.5 - t * .5) * mod(floor(q.x) + floor(q.y) + ceil(sign(max(abs(p.x), abs(p.y)) - .5) * .5), 2.);\n\tc += (c - 1. + t * .5) * floor(sign(d) * .5);\n\tfragColor = vec4(c);\n}","name":"Image","description":"","type":"image"}]}