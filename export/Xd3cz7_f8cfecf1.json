{"ver":"0.1","info":{"id":"Xd3cz7","date":"1518141545","viewed":97,"name":"Hatchet program","username":"Capital_Asterisk","description":"An assignment from my high school computer teacher but overdone. On some computers, only one side of the axe is shown; I haven't yet found out why.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["axe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // t = Odd number for how large the axe blade should be\n\t//     this stuff just makes it look cool\n\tint t = int(pow(mod(iTime / 10.0, 1.0) + 0.2, 2.0) * 30.0);\n\n    ivec2 wh = ivec2(float(max(2 + 2 * t, 4)), float(10 + max(0, t - 2) + max(0, t - 9)));\n    \n    ivec2 uv = ivec2(vec2((fragCoord/iResolution.xy + vec2(0.0, sin(iTime * 3.14159265359) * 0.1)) * vec2(wh)));\n    uv.y = wh.y - uv.y;\n    int e = max(0, t - 2);\n    int f = abs(uv.x * 2 - wh.x + 1) / 2;\n\n    fragColor = vec4(1.0, 1.0, 1.0, 1.0) * vec4((e <= uv.y && uv.y <= e + 10\n                                                && (uv.x == wh.x / 2 || uv.x == wh.x / 2 - 1))\n                                               || (f >= 1 && abs(e + 1 - uv.y) <= f - 1))\n       \t\t\t+ (vec4(0.5*cos(iTime+(fragCoord/iResolution.xy).xyx+vec3(0,2,4)), 1.0)\n        \t\t\t- vec4(0.5, 0.5, 0.5, 0.0) * (rand(vec2(floor(iTime + (fragCoord.y/iResolution.y + rand(vec2(0.1, floor(fragCoord.x/iResolution.x * 64.0))))), floor(fragCoord.x/iResolution.x * 64.0)))));\n}\n\n","name":"Image","description":"","type":"image"}]}