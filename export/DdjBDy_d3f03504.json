{"ver":"0.1","info":{"id":"DdjBDy","date":"1690093731","viewed":120,"name":"Inversion Transformation","username":"o0CHT0o","description":"find this trying Inversion Transformation","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 InvTrans(vec2 pos){\n    //vec2 lt=vec2(iTime/length(pos),atan(pos.y, pos.x));\n    //return lt.x * vec2(sin(lt.y), cos(lt.y));\n    return pos/dot(pos,pos)*iTime; //thank Envy24 \n}\n/*\nfloat sep(float x){\n    return floor(mod(x, 2.))*2.-1.;\n}\n\nvec4 checkerboard(vec2 pos){\n    float l=sep(pos.x)*sep(pos.y);\n    return vec4(l,l,l,1);\n}\n*/\n// Reference https://www.shadertoy.com/view/lt2XWK\nvec4 checkerboard(vec2 pos){\n    float l=mod(floor(pos.x)+floor(pos.y),2.);\n    return vec4(l,l,l,1);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/min(iResolution.x, iResolution.y);\n\n    // Output to screen\n    fragColor = checkerboard(InvTrans(uv));\n}","name":"Image","description":"","type":"image"}]}