{"ver":"0.1","info":{"id":"ttdGRX","date":"1577099216","viewed":88,"name":"Color Delight (Practice #1)","username":"Coda_","description":"Color Delight (Practice #1) first shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nfloat map(vec3 p)\n{\n    vec3 q = fract(p) *2.0 -1.0;\n    return length(q) - 0.25;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n  float t = 0.0;\n  for(int i ;i < 64;i++)\n  {\n    vec3 p = o + r *t;\n    float d = map(p);\n    \n    t += d*0.5;\n  }\n  return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \tvec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n  \tuv -= 0.5;\n  \tuv /= vec2(iResolution.y / iResolution.x, 1);\n  \tuv*=(sin(time)*0.5+0.5)*50.0;\n  \tvec3 r = normalize(vec3(uv,1.0));\n  \n  \tvec3 o = vec3(0,sin(time),time);\n  \n  \tfloat t =trace(o,r);\n  \n  \tfloat fog = 1.0/(1.0 + t*t*0.8);\n  \n  \n  \tvec3 color = 0.5 + 0.5*cos(time+uv.yxy+vec3(1,2,4));\n\n\n\tfragColor = vec4(vec3(fog)*color,1.0);\n}","name":"Image","description":"","type":"image"}]}