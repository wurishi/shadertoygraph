{"ver":"0.1","info":{"id":"mltyR8","date":"1698908597","viewed":64,"name":"sound and lights","username":"songshizhao","description":"shader beginerðŸ¤£\ncan anybody tell me how to make this betterï¼Ÿ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float brightness = 0.65;\nfloat devider = 8.0;\n// Helper for intensityToColour\nfloat h2rgb(float h) {\n\tif(h < 0.0) h += 1.0;\n\tif(h < 0.166666) return 0.1 + 4.8 * h;\n\tif(h < 0.5) return 0.9;\n\tif(h < 0.666666) return 0.1 + 4.8 * (0.666666 - h);\n\treturn 0.1;\n}\n\n// Map [0, 1] to rgb using hues from [240, 0] - ie blue to red\nvec3 intensityToColour(float i) {\n\t// Algorithm rearranged from http://www.w3.org/TR/css3-color/#hsl-color\n\t// with s = 0.8, l = 0.5\n\tfloat h = 0.666666 - (i * 0.666666);\n\t\n\treturn vec3(h2rgb(h + 0.333333), h2rgb(h), h2rgb(h - 0.333333));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 fractUv = uv;\n    fractUv.x = fractUv.x * iResolution.x/iResolution.y;\n    fractUv *= devider;\n    fractUv = fract(fractUv);\n    \n    float sum_vol=0.;\n    for(float i=0.;i<=fractUv.x;i+=0.02){\n    \n    \n    \n        sum_vol+=texture(iChannel0,vec2(i,0) ).r;\n    }\n    sum_vol=sum_vol*0.12;\n    //float i=floor(uv.x*100.)/100.;\n    //float j=floor(uv.y*100.)/100.;\n    //float sam=i*j-0.5;\n    float i=uv.x;\n    float j=uv.y;\n    vec2 p=(fractUv-.5);\n    float dist = distance(p , vec2(0));  \n    vec2 p2=(vec2(i,j)-.5);\n    float dist2 = distance(p2 , vec2(0));  \n    float x=uv.x*devider+uv.y;\n    //float vol= texture(iChannel0,vec2(x/devider,0) ).r;\n    //vec3 col = intensityToColour(vol);\n    //vec3 col = texture(iChannel1,uv ).xyz;\n     vec3 col = 0.5 + 0.5*cos(2.1*iTime+uv.xyx+vec3(0,2,4));\n\n    vec4 circle = vec4(col, 1.0);\n    circle *= smoothstep(0.56, 0.25, dist);\n    float vol=sum_vol;\n\t//vec3 result = mix(vec3(1.0), camera.rgb, 1.0);\n    fragColor = vec4(circle.rgb/dist*brightness*vol, 1.0);\n    //c += b/(length(p-o))*dotCol;\n    //fragColor = heartBuffer;\n}\n\n\n","name":"Image","description":"","type":"image"}]}