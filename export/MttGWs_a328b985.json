{"ver":"0.1","info":{"id":"MttGWs","date":"1472532250","viewed":522,"name":"Escher Gradient Field","username":"gltracy","description":"sample code of escher effects, reference shaders : https://www.shadertoy.com/view/Mdf3zM, and https://www.shadertoy.com/view/Ml33R7","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["escher"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// writtern by @ephtracy\n#define PI (3.14159265)\n\nvec2 escher( vec2 p, float es ) {\n\tp = vec2( log( length( p ) ), atan( p.y, p.x ) ) - iTime * 0.1;\n    \n\tfloat r = es / ( 2.0 * PI );\n\n\tp += p.yx * vec2( r, -r );\n\n\tp.x = mod( p.x, es ) - 0.25 * es;\n\n    p = exp( p.x * 0.465 ) * vec2( cos( p.y ), sin( p.y ) ); // <-- remove 0.465\n    \n   \tp *= exp( ceil( log( max( abs( p.x ), abs( p.y ) ) ) ) ); // <-- droste\n    \n\treturn p;\n}\n\nvec2 uvMap( vec2 v ) {\n    return escher( ( v - iResolution.xy * 0.5 ) / ( iResolution.y * 0.65 ), 1.0 );\n}\n\nfloat draw( float d, vec2 g, float size, float sharp )\t{\n    return smoothstep( size * sharp, size, d / length( g ) );\n}\n\n///////////////////////////////////////////////////\nfloat map( vec2 v ) {\n    v = uvMap( v );\n    return ( v.x * v.x - v.y * v.y );\n}\n\nvec2 gradient( vec2 v ) {\n    const float s = 1.0;\n    float dx = ( map( v + vec2( s, 0.0 ) ) - map( v - vec2( s, 0.0 ) ) );\n    float dy = ( map( v + vec2( 0.0, s ) ) - map( v - vec2( 0.0, s ) ) ); \n    return vec2( dx, dy ) / ( s + s );\n}\n\nfloat map_grad( vec2 v ) {\n   \tv = uvMap( v );\n    return ( log(abs(v.x) + 0.00001) + log(abs(v.y) + 0.00001) );\n}\n\nvec2 gradient_grad( vec2 v ) {\n    const float s = 0.1;\n    float dx = ( map_grad( v + vec2( s, 0.0 ) ) - map_grad( v - vec2( s, 0.0 ) ) );\n    float dy = ( map_grad( v + vec2( 0.0, s ) ) - map_grad( v - vec2( 0.0, s ) ) ); \n    return vec2( dx, dy ) / ( s + s );\n}\n\n///////////////////////////////////////////////////\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 u = fragCoord.xy;\n    \n    vec3 final = vec3( 0.0 );\n  \n    \n    // gradient field\n    {\n        float d = map_grad( u );\n        vec2 g = gradient_grad( u );\n        \n        vec3 color = vec3( 1.0, 0.6, 0.3 ) * (max(1.0 - abs(d), 0.0)+0.3) * 0.4;\n      \t\n        final = mix( final, color, draw( abs(mod( d, 0.1) - 0.05), g, 1.0, 0.5 ) );\n    }\n    \n    // level set\n    {\n        float d = map( u );\n    \tvec2 g = gradient( u );\n        \n        vec3 color = vec3( 1.0, 0.6, 0.3 ) * (max(1.0 - abs(d), 0.0)+0.3);\n    \t\n        final = mix( final, color, 1.0 - draw( abs(mod(d, 0.2) - 0.1), g, 1.8, 0.5 ) );\n    }\n     \n\tfragColor = vec4( 1.0 - final, 1.0 );\n}","name":"Image","description":"","type":"image"}]}