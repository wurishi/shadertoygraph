{"ver":"0.1","info":{"id":"4dsBDl","date":"1498833676","viewed":174,"name":"Complex Function Plot","username":"yumcyawiz","description":"Plot complex functions","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//convert hsv to rgb\nvec3 hsv2rgb(float h, float s, float v) {\n    return ((clamp(abs(fract(h+vec3(0,2,1)/3.)*6.-3.)-1.,0.,1.)-1.)*s+1.)*v;\n}\n\n\n//complex number utils\nvec2 cmult(vec2 z1, vec2 z2) {\n    return vec2(z1.x*z2.x - z1.y*z2.y, z1.x*z2.y + z1.y*z2.x);\n}\nvec2 cdiv(vec2 z1, vec2 z2) {\n    return 1.0/(z2.x*z2.x + z2.y*z2.y) * vec2(z1.x*z2.x + z1.y*z2.y, -z1.x*z2.y + z1.y*z2.x);\n}\nfloat carg(vec2 z) {\n    float arg = atan(z.y, z.x);\n    if(arg < 0.0) {\n        arg = 6.28 + arg;\n    }\n    return arg;\n}\nvec2 cpow(vec2 z, float n) {\n    float arg = carg(z);\n    return pow(length(z), n) * vec2(cos(n*arg), sin(n*arg));\n}\n\n\n//complex function\nvec2 f(vec2 z) {\n    return cdiv(cpow(z, iTime/2.0) + vec2(-1, 0), cpow(z, 2.0) + vec2(1, 1));\n}\n\n\n//coloring\nfloat contourInterval = 1.0;\nvec3 coloring(vec2 z) {\n    float zabs = length(z);\n    float arg = carg(z);\n    return hsv2rgb(arg/6.28, 1.0 - 0.5*pow(abs(sin(zabs*3.14/2.0/contourInterval)), 10.0), clamp(zabs, 0.0, 1.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0*(2.0*fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n    vec2 z = f(uv);\n    \n\tfragColor = vec4(coloring(z), 1.0);\n}","name":"Image","description":"","type":"image"}]}