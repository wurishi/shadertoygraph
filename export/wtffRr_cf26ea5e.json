{"ver":"0.1","info":{"id":"wtffRr","date":"1595832542","viewed":218,"name":"Meteor Storm","username":"sdfgeoff","description":"Just some art","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["flame","falling","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This buffer just colorizes, The actual computation is in Buffer A\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float val = texture(iChannel0, uv).r;\n\n    vec3 col = vec3(1.0, 0.0, 0.0) * val;\n    col += vec3(1.0, 1.0, 0.0) * pow(val, 2.0);\n    col += vec3(1.0, 1.0, 1.0) * pow(val, 4.0);\n    // Output to screen\n    fragColor = vec4(col, 0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/// Falling meteors by reading previous pixels.\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec4 here = texture(iChannel0, uv);\n\n    \n    float r = rand(fragCoord + iTime);\n    //if (iFrame == 0) {\n    here.r += float(uv.y > 0.99 && r < 0.00001);\n    //}\n\n    if (here != vec4(0.0, 0.0, 0.0, 1.0)) {\n        fragColor = here;\n        fragColor.xyz -= 0.01;\n        fragColor = clamp(fragColor, 0.0, 1.0);\n        fragColor.a = 1.0;\n        return;\n    }\n\n    //here *= 0.2;\n    \n    \n\n    \n    if (r > 0.9) {\n        fragColor = here;\n        return;\n    }\n\n    r = rand(fragCoord + iTime * 2.0);\n\n\n    float lr = 1.0 / iResolution.x;\n    float ud = 1.0 / iResolution.y;\n\n    vec4 lower = texture(iChannel0, uv + vec2(0.0, ud));\n\n    vec4 left = texture(iChannel0, uv + vec2(lr, ud));\n    vec4 right = texture(iChannel0, uv + vec2(-lr, ud));\n\n    vec4 bias = lower;\n    vec4 lr_amt = mix(left, right, r);\n    bias = mix(bias, lr_amt, abs(0.5 - r) * 1.0);\n    bias *= 1.12;\n    \n    bias = clamp(bias, 0.0, 1.0);\n\n    vec4 outp = here + bias;\n\n\n    fragColor = clamp(outp, 0.0, 1.0);\n\n}","name":"Buffer A","description":"","type":"buffer"}]}