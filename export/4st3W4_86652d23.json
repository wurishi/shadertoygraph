{"ver":"0.1","info":{"id":"4st3W4","date":"1449700414","viewed":401,"name":"Document cleaner","username":"TambakoJaguar","description":"This shader tries to isolate text from its support and gives contrast to it, that means it tries to makes it nicer, like it was scanned. It tries to get rid of shadows on the paper too.","likes":5,"published":1,"flags":2,"usePreview":0,"tags":["text","blur","camera","scan","live","isolate","document","maxfilter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const int max_size = 4;\nconst float max_width = 1.8;\nconst int blur_size = 2;\nconst float blur_width = 2.5;\nconst float contrast = 1.85;\nconst float brightness = -0.2;\nconst bool bw = false;\n\nvec4 maxpic(vec2 pos)\n{\n   vec4 pixval = vec4(0.);\n   float csum = 0.;\n    \n   const int nb = 2*max_size+1;\n   \n   for (int y=0; y<nb; y++)\n   {\n       for (int x=0; x<nb; x++)\n       { \n           vec2 ipos = pos + vec2(max_width*float(x-max_size)/iResolution.x, max_width*float(y-max_size)/iResolution.y);\n           pixval = max(texture(iChannel0, ipos), pixval);\n       }\n   }\n   return pixval;\n}\n\nvec4 quickblur(vec2 pos)\n{\n   vec4 pixval = vec4(0.);\n   float csum = 0.;\n    \n   const int nb = 2*blur_size+1;\n   \n   for (int y=0; y<nb; y++)\n   {\n       for (int x=0; x<nb; x++)\n       { \n           vec2 ipos = pos + vec2(blur_width*float(x-blur_size)/iResolution.x, blur_width*float(y-blur_size)/iResolution.y);\n           pixval+= maxpic(ipos);\n       }\n   }\n   return pixval/pow(float(nb), 2.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 i = quickblur(uv);\n    //vec4 i = maxpic(uv);\n    \n    float mini = min(i.r, min(i.g, i.b));\n    i = 1. - i + texture(iChannel0, uv);\n    i = (i - 1. + mini)/(max(mini, 0.2));\n    i = i*contrast - 0.5*contrast + 0.5 + brightness;\n    if (bw)\n        i = (vec4(dot(i.rgb, vec3(1.))/3.0));\n\n    fragColor = i;\n}","name":"","description":"","type":"image"}]}