{"ver":"0.1","info":{"id":"cdlXWS","date":"1669486189","viewed":118,"name":"grid of random circle segments","username":"jt","description":"A grid of random circle segments.\nFor gode-golf see [url=https://www.shadertoy.com/view/mdXSW2]random circle segments grid golf[/url].","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","circle","random","segment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/cdlXWS grid of random circle segments by jt\n\n// tags: grid, circle, random, segment\n\n// https://www.shadertoy.com/view/4djSRW Hash without Sine by David Hoskins\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nfloat circle(vec2 v, float r)\n{\n    return length(v) - r;\n}\n\nvoid mainImage( out vec4 color, in vec2 coords)\n{\n    vec2 R = iResolution.xy;\n    //vec2 i = coords/R.xy*2.0-1.0;\n    //i.x *= R.x/R.y; // aspect\n    vec2 i = (2.0 * coords - R) / R.y;\n\n    //color = vec4(fract(i),0.0,1.0);\n\n    float s = 5.0;\n    vec2 c = floor(i*s);\n    vec2 r = fract(i*s) * 2.0 - 1.0;\n    //float h = hash(c);\n    //color = vec4(fract(vec3(h)),1.0);\n    vec2 H = hash22(c+.713*floor(iTime));\n    vec2 p = 5.0*(H * 2.0 - 1.0);\n    p = (abs(p)+1.0)*sign(p); // inflate circle sizes beyond tile size\n    float d = circle(r-p, length(p));\n    //color = vec4(vec3(1.0 - abs(d)),1.0);\n    color = vec4(vec3(sqrt(smoothstep(-30./R.y, 30./R.y, d))),1.0);\n    //color = vec4(vec3(smoothstep(0.0, 0.05, abs(d))),1.0); // could be used for hair or grass\n}","name":"Image","description":"","type":"image"}]}