{"ver":"0.1","info":{"id":"4lByDK","date":"1510090132","viewed":89,"name":"Fun with circles","username":"Lunatunny","description":"Fun with circles","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circles","simple","colors","circle","fun","animated","disks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void draw_circle_aa(vec2 uv, vec2 pos, float radius, vec3 color, inout vec3 pix)\n{\n    float m = smoothstep( radius-.005, radius+.005, length(uv - pos));\n    pix = mix(color, pix, m);\n}\n\nvoid draw_circle(vec2 uv, vec2 pos, float radius, vec3 color, inout vec3 pix)\n{\n    if (length(uv - pos) < radius)pix = color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0*(fragCoord.xy - .5*iResolution.xy)/iResolution.y;\n    float uvx = iResolution.x / iResolution.y;\n    vec3 c_red = vec3(1.0,0.0,0.0) + vec3(.2);\n    vec3 c_green = vec3(0.0,1.0,0.0) + vec3(.2);\n    vec3 c_blue = vec3(0.0,0.1,1.0)  + vec3(.2);\n     \n    vec3 bgCol = vec3(1.0);\n    vec3 pix = bgCol;\n    \n    int p = 5;\n    float pS = (uvx*2.0)/float(p-1);\n    float s1 = mix(.3,.6,sin(iTime));\n    float s2 = mix(.3,.6,cos(iTime));\n    vec3 c1 = c_green;\n    vec3 c2 = c_blue;\n    \n    for(int i = 0; i < p; i++)\n    {\n    draw_circle_aa(uv, vec2(-uvx + float(i)*pS,0.0), mix(s1,s2,float(i)/float(p)) , mix(c1,c2,smoothstep(0.0,float(p),float(i))), pix);\n    }\n    \n\tfragColor = vec4(pix,1.0);\n}","name":"Image","description":"","type":"image"}]}