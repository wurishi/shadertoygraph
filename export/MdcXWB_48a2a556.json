{"ver":"0.1","info":{"id":"MdcXWB","date":"1461281421","viewed":157,"name":"Tiny music effect","username":"Lulucursus","description":"It is my first try if you have some advice. To improve my code and make a best shader. Whith an explanation.","likes":0,"published":1,"flags":96,"usePreview":0,"tags":["musiceffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ldXGRs","filepath":"https://soundcloud.com/downtownrecords/justice-dvno","previewfilepath":"https://soundcloud.com/downtownrecords/justice-dvno","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 texture = texture(iChannel1,uv);\n    vec2 uv1 = fragCoord.xy / iResolution.y;\n    \n    float Basse = texture(iChannel0,vec2(0.1,0)).r;\n  \n    vec2 centreC = vec2(0.5+(iResolution.x-iResolution.y)/(2.*iResolution.y),.5);\n    \n    float distanceC = distance (centreC,uv1);\t\n    float angleC = acos(dot(normalize(uv1-centreC),vec2(cos (iTime),sin (iTime))))/6.28318530718;\n    float Fvague = texture(iChannel0,vec2(angleC,1.)).r;\n    vec4 textureC = texture(iChannel0,vec2(angleC,distanceC/sqrt(2.)));\n    fragColor = textureC*texture*Basse;\n    \n    if (distanceC < 0.3+(Fvague/5.) && distanceC > 0.295+(Fvague/5.)) fragColor = vec4 (1,0,1,0);\n    \n    float Fourier = texture(iChannel0,vec2(floor((uv.x*3.-2.)*20.)/20.,0)).r;\n    if (uv.x>.66666 && fract((uv.x*3.-2.)*20.)<.9 && uv.y<(Fourier)/5.) fragColor = mix(fragColor,vec4 (0,1,0,0),.4);\n\n          Fourier = texture(iChannel0,vec2(floor((1.-uv.x*3.)*20.)/20.,0)).r;\n    if (uv.x<.3333333 && fract((uv.x*3.-2.)*20.)<.9 && uv.y<(Fourier)/5.) fragColor = mix(fragColor,vec4 (0,1,0,0),.4);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}\n/*   float distanceC = distance (centreC,uv1);\n    if (distanceC < 0.3+(Basse/10.) && distanceC > 0.295+(Basse/10.)) fragColor = vec4 (1,0,0,0);*/","name":"Buf A","description":"","type":"buffer"}]}