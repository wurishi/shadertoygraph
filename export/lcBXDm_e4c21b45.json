{"ver":"0.1","info":{"id":"lcBXDm","date":"1706405725","viewed":309,"name":"Bloom glsl","username":"the0neboy","description":"asd","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["asd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0,uv).rgb;\n    \n    col = bloom(iChannel0, fragCoord, iResolution.xy, 2., 1., 1)+col;\n    //col /= 2.;\n\n    //col = blur(iChannel0, ivec2(fragCoord), 25, 1);\n\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy/2.)/iResolution.y;\n    uv *= 15.;\n    \n    vec3 col = vec3(0);\n    if (length(uv)<=7.5) col = 3.*vec3(sin(uv.x*3.1415)+cos(2.*uv.x)+sin(3.14159*uv.y)+cos(2.*uv.y),0.3,0.6)/4.;\n    \n    fragColor = vec4(col,1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec4 colorCorrection(vec3 col) {\n    float level = max(col.r,max(col.g,col.b));\n    if (level > 1.) {\n        col = col/level;\n        col.r = pow(col.r,1./level);\n        col.g = pow(col.g,1./level);\n        col.b = pow(col.b,1./level);\n    }\n    return vec4(col,level);\n}\n\nvec3 bloom(sampler2D channel, vec2 pixel, vec2 iResolution, float intensity, float threshold, int steps) {\n    vec3 col = vec3(0);\n    vec4 coldat = colorCorrection(texelFetch(channel,ivec2(pixel),0).rgb);\n    \n    float i=1.;\n    steps = max(steps,1);\n    int radius = 100;\n    float screenrad = 0.1;\n    float aspect = iResolution.x/iResolution.y;\n    for (int x=-radius; x<=radius; x+=steps) {\n    for (int y=-radius; y<=radius; y+=steps) {\n        if (length(vec2(x,y))<=float(radius)) {\n        vec2 coord = vec2(x,y);\n        vec4 newcol = colorCorrection(texelFetch(channel,ivec2(pixel+coord),0).rgb);\n        if (newcol.w >= threshold) {\n            col += newcol.rgb*newcol.w*intensity/length(coord/float(radius));\n        }\n        i++;\n        }\n    }\n    }\n    \n    return col/i;\n}","name":"Common","description":"","type":"common"}]}