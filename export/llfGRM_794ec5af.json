{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec3 hash3(vec2 p)\n{\n    vec3 q = vec3(\n\t\tdot(p,vec2(127.1,311.7)), \n\t\tdot(p,vec2(269.5,183.3)), \n\t\tdot(p,vec2(419.2,371.9))\n\t);\n\treturn fract(sin(q) * 43758.5453);\n}\n\nfloat noise(vec2 x)\n{\n\tvec2 p = floor(x);\n\tvec2 f = fract(x);\n\treturn mix(\n\t\tmix(\n\t\t\thash3(p + vec2(0.0, 0.0)).x,\n\t\t\thash3(p + vec2(1.0, 0.0)).x,\n\t\t\tsmoothstep(0.0, 1.0, f.x)\n\t\t),\n\t\tmix(\n\t\t\thash3(p + vec2(0.0, 1.0)).x,\n\t\t\thash3(p + vec2(1.0, 1.0)).x,\n\t\t\tsmoothstep(0.0, 1.0, f.x)\n\t\t),\n\t\tsmoothstep(0.0, 1.0, f.y)\n\t);\n}\n\nfloat fractal(vec2 x)\n{\n    float f = 0.0;\n    float amplitude = 0.5;\n    for (int i = 0; i < 5; i++)\n\t{\n\t\tf += noise(x) * amplitude;\n\t\tx *= 2.0;\n        amplitude /= 2.0;\n\t}\n    \n\treturn f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 x = fragCoord.xy / iResolution.xx;\n\t\n    vec2 stretched = x * vec2(30.0, 12.0);\n    \n\tfloat speckFractal = fractal(x * 80.0);\n\tfloat yellowFractal = fractal(stretched);\n    \n    vec3 red    = vec3(0.5, 0.0, 0.0);\n    vec3 speck  = vec3(0.75, 0.5, 0.5);\n    vec3 yellow = vec3(1.0, 1.0, 0.0);\n    \n    float speckWeight = max(0.0, speckFractal * 3.0 - 2.0);\n    vec3 speckedRed = mix(red, speck, speckWeight);\n    \n    float yellowWeight = max(0.0, yellowFractal * 2.5 - 1.5);\n    vec3 color = mix(speckedRed, yellow, yellowWeight);\n\t\n\tcolor = sqrt(color); // rough gamma correction\n    \n\tfragColor.rgb = color;\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"llfGRM","date":"1419742763","viewed":162,"name":"Apple Noise","username":"shaktool","description":"apple","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["apple"],"hasliked":0,"parentid":"","parentname":""}}