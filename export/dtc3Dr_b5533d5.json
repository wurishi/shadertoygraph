{"ver":"0.1","info":{"id":"dtc3Dr","date":"1682230780","viewed":38,"name":"Dizzy Mode 2","username":"shastro","description":"First shader on shadertoy!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.y/iResolution.x;\n    uv[1] = uv[1]*aspect;\n\n    // Time varying pixel color\n    float PI = 3.14159;\n    vec2 k = 2.*PI*vec2(10.*cos(iTime/5.) + 10., 50.*cos(iTime/5.))+5.;\n    vec2 w = 2.*PI*vec2(0.001*cos(iTime/10.+100.), 0.001*cos(iTime/10.+100.));\n    \n    vec2 centered_coord = uv - vec2(0.5,0.5*aspect);\n    float cx = centered_coord[0];\n    float cy = centered_coord[1];\n    float r_coord = sqrt(cx*cx + cy*cy);\n    float r = 0.5 + 0.5 *cos(-k[0]*r_coord - w[0]*iTime);\n    float g = 0.5 + 0.5 *cos(k[1]*r_coord - w[1]*iTime);\n    float b = g;\n   \n  \n    float alpha = smoothstep(0.0, 0.3, length(centered_coord));\n        r = alpha*r;\n        g = alpha*g;\n        b = alpha*b;\n\n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}