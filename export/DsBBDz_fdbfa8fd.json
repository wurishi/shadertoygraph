{"ver":"0.1","info":{"id":"DsBBDz","date":"1689664398","viewed":122,"name":"To draw a sine line","username":"zma","description":"Beginer's practice, It's not finished.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float t) {\n    vec3 a = vec3(0.660, 0.560, 0.680);\n    vec3 b = vec3(0.718, 0.438, 0.720);\n    vec3 c = vec3(0.520, 0.100, 0.520);\n    vec3 d = vec3(-0.60, -0.30, -0.09);\n    return a + b*cos(6.28318*(c*t+d));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 5.;\n    float amplitude = 10.;\n    float bgintensity = 0.3;\n    float line = 0.;\n    vec3 finalColor = vec3(0.0);\n    \n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = zoom*uv;\n    //uv0.y += cos(uv0.x+iTime);\n    \n    //Drawn line\n    \n    line += (1. - (uv0.y - sin(uv0.x))/(uv0.y));\n    \n    vec3 col = palette(line); \n    \n   \n   \n    float d = uv0.y - sin(uv0.x+iTime);\n    d += (d) * 0.8;\n    \n    d = abs(d);\n        \n    d = pow(0.3/ d, 2.);\n    \n    finalColor += col*d;\n    \n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}