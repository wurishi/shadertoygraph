{"ver":"0.1","info":{"id":"lfySzc","date":"1715694361","viewed":29,"name":"2024may01","username":"xlat","description":"home","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["my"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 RED    = vec3(0.7, 0. , 0. );\nconst vec3 GREEN  = vec3(0.7, 0.7, 0.0);\nconst vec3 BLUE   = vec3(0.0, 0.0, 0.4);\nconst vec3 WHITE  = vec3(0.9, 0.9, 0.9);\n\nconst float N  = 20.0    ; /// Ширина сетки.\nconst float D2 =  6.0 * N; /// Расстояние между парой.\n\nbool iscells(in vec2 p) { return mod(p.x, N) < 1.0 || mod(p.y, N) < 1.0; }\nbool isaxes (in vec2 p) { return abs(p.x)    < 1.0 || abs(p.y)    < 1.0; }\n\nstruct  Cfg\n{       \n    float W ;           /// Ширина дорожки.\n    float H2;           /// Половина высоты столба.\n    float RM;           /// Внешний радиус концов.\n};\n\nconst Cfg cfg[2] = Cfg[2](\n      Cfg(1.0,2.0,3.0),\n      Cfg(3.0,3.0,5.0)\n);\n\nbool criteria(in vec2 p, in Cfg c)\n{   \n    float   x2 = p.x * p.x;\n    \n    float RL = c.RM  - c.W;\n\n    float  H2N = c.H2  * N  ;\n    float   s1 = p.y + H2N;\n    float   s2 = p.y - H2N;\n    float   Y1 = s1  * s1 + x2;\n    float   Y2 = s2  * s2 + x2;\n    \n    float  RM2 =  c.RM * c.RM;\n    float  RL2 =  RL * RL;\n    float   N2 =   N * N ;\n    float RMN2 = RM2 * N2;\n    float RLN2 = RL2 * N2;\n    float absx = abs(p.x);\n    float absy = abs(p.y);\n\n    return\n    (Y1 < RMN2 || Y2 < RMN2 || absx < c.RM * N && absy < H2N) &&\n   !(Y1 < RLN2 || Y2 < RLN2 || absx <   RL * N && absy < H2N)  ;\n}\n\nbool criteria2(in vec2 p)\n{\n    vec2 p1 = vec2(p.x - D2, p.y);\n    vec2 p2 = vec2(p.x + D2, p.y);\n    return criteria(p1, cfg[0]) || criteria(p2, cfg[1]);\n}\n\nvoid mainImage(out vec4 FC, in vec2 fragCoord)\n{\n    vec2 p  = fragCoord - iResolution.xy / 2.0;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n         if(iscells  (p)) FC = vec4(GREEN, 1.0);\n    else if(criteria2(p)) FC = vec4(BLUE , 1.0);\n    else if(isaxes   (p)) FC = vec4(WHITE, 1.0);\n  //else                  FC = vec4(BLUE , 1.0);\n    else                  FC = vec4(texture(iChannel0, uv));\n}\n","name":"Image","description":"","type":"image"}]}