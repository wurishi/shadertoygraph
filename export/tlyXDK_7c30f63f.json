{"ver":"0.1","info":{"id":"tlyXDK","date":"1601454183","viewed":187,"name":"Oblique Cone","username":"ozeg","description":"inspired by https://www.shadertoy.com/view/tlVXzd\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient","skew","conical"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cone(vec2 position, vec2 origin){\n    vec3 coneParams, shear = vec3(position.y - origin.y, origin.x - position.x, position.x * origin.y - position.y * origin.x);\n    float invDot = 1.0 / dot(shear.xy, shear.xy);\n    coneParams = shear * shear.z * invDot;\n    shear.x = -shear.x;\n    vec2 roots = shear.yx * sqrt(invDot - coneParams.z * invDot) - coneParams.xy;\n    float coneValue = distance(position, origin) / distance(position, roots);\n    float distanceMask = length(origin) - max(1.0, length(position));\n    distanceMask = 1.0 - step(0.0, distanceMask);\n    return (1.0 - coneValue) * distanceMask;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{   \n    vec2 origin, resolution = iResolution.xy;\n    origin = fragCoord / resolution.y * 2.0 - 1.0;\n    origin.x -= resolution.x / resolution.y * 0.5;\n    float piTime = iTime / radians(360.);\n    float offset = mod(piTime+.25, 2.0) > 1.0  ? 0. : 2.;\n    vec2 loop = vec2((mod(piTime+.25, 2.0) > 1.0  ? -1. : 1.)*sin(iTime)+offset, cos(iTime));\n    vec2 mouse = iMouse.xy / resolution.y * 2.0 - 1.0;\n    mouse = iMouse.z > 0.0 ? mouse : loop;\n    mouse.x -= resolution.x / resolution.y * 0.5;\n    fragColor = vec4(cone(mouse, origin));\n}","name":"Image","description":"","type":"image"}]}