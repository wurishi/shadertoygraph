{"ver":"0.1","info":{"id":"3lV3Wd","date":"1580287002","viewed":86,"name":"Mandelbrot set - my 1st try","username":"disorder","description":"I'm not so strong in math, but trying to draw Mandelbrot set\nYou can drag image with mouse","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 translate = vec2(0.8, 0.);\nfloat scale = .8;\n//vec2 scale = vec2(1., .5) * 2.;\n\nvec3 COLOR_BG = vec3(0.);\nvec3 COLOR_1 = vec3(1.);\n\nvec3 COLOR_2 = vec3(0.7, 0., 0.);\nvec3 COLOR_3 = vec3(0., 0.7, 0.);\n\nvec3 color = vec3(0.);\n\n#define maxIterations 40\n\n// complex math\nvec2 c_cjg(in vec2 a) { // conjugate\n\treturn vec2(a.x, -a.y);\n}\n\nvec2 c_mul(in vec2 a, in vec2 b) {\n\treturn vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\n}\n\nvec2 c_pow(in vec2 a, int p) {\n\tfor (int i = 0; i < p-1; ++i) {\n\t\ta = c_mul(a, a);\n\t}\n    return a;\n}\n\nvec2 c_div(in vec2 a, in vec2 b) {\n    return c_mul(a, c_cjg(b));\n}\n\nfloat mag(in vec2 c) {\n    return c.x * c.x + c.y * c.y;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float minRes = min(iResolution.x, iResolution.y);\n    \n    vec2 mouse = (iMouse.xy - iResolution.xy/2.) * 2. / minRes;\n    translate += mouse * scale;\n    \n    vec2 coord = (fragCoord - iResolution.xy/2.) * 2. / minRes; // scale to [-1, 1] by y\n    coord = (coord - translate) / scale;\n    \n    \n    // float time = mod(iTime, 1.) / 1.;\n\n    // iterations    \n    vec2 z = coord;\n    vec2 zi = vec2(0);\n    float len;\n    \n    vec3 layerColor = mix(COLOR_BG, COLOR_1, 1./float(maxIterations));\n    \n    for (int i = 0; i < maxIterations; i++) {\n        zi = c_mul(zi, zi) + z;\n        len = mag(zi);\n                \n        if (len < 4.) {\n            color += layerColor;\n        }\n    }\n    \n    \n    if (len < 4.) {\n    \tcolor *= smoothstep(0., 4., len);\n    }\n    // TODO add more colors\n\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}