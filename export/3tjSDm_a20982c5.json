{"ver":"0.1","info":{"id":"3tjSDm","date":"1566120994","viewed":147,"name":"Underground Tunnel","username":"96logda","description":"This is my first tunnel shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d","tunnel","underground"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright (c) 2019-08-18 by Angelo Logahd\n//Portfolio: https://angelologahd.wixsite.com/portfolio\n//Based on https://iquilezles.org/articles/tunnel\n\n#define PI 3.1415927\n#define saturate(x) clamp(x, 0.0, 1.0)\n\nconst float MOVING_SPEED = 0.2;\nconst float BRIGHTNESS = 0.3;\n\nfloat sdTunnel(in vec2 p)\n{\n    return pow(pow(p.x * p.x, 3.0) + pow(p.y * p.y, 3.0), 1.0 / 6.0);\n}\n\nfloat sdSphere(vec2 p, float radius)\n{\n     return length(p) - radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = 2.0 * (fragCoord.xy / iResolution.xy) - 1.0;\n    p.x *= iResolution.x / iResolution.y;\n      \n    vec2 mouseXY = iMouse.xy / iResolution.xy;\n    \n    float a = atan(p.y, p.x);  \n    float r = sdTunnel(p);\n    \n    float deform = sdSphere(p, 0.03);\n    r = min(r, deform);\n    \n    vec2 uv = vec2(0.6 / r + iTime * MOVING_SPEED, a / PI);\n    vec2 derivationUv = vec2(uv.x, atan(p.y, abs(p.x)) / PI);\n    \n    vec3 texCol1 = textureGrad(iChannel0, uv, dFdx(derivationUv), dFdy(derivationUv)).rgb + vec3(0.0, 0.2, 0.0); \n    vec3 texCol2 = textureGrad(iChannel1, uv, dFdx(derivationUv), dFdy(derivationUv)).rgb;\n    vec3 mixTexCol = mix(texCol1, texCol2, 0.5);\n    \n    vec3 centerCol = mix(vec3(0.2, 0.2, 0.2), vec3(1.0), r);\n    vec3 col = mixTexCol * centerCol * BRIGHTNESS;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}