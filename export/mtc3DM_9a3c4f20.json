{"ver":"0.1","info":{"id":"mtc3DM","date":"1682521251","viewed":180,"name":"depth of field testing","username":"lalaoopybee","description":"sigma is dependent on dist from pixel to mouse.","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["blur","depthoffield","gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415927\n#define SQRT2 1.4142136\n\n#define K 9\n#define SIGMA_MIN .1\n#define SIGMA_MAX 8.\n\nfloat gaussian(vec2 pos, float sigma){\n    float left=1./(2.*PI*sigma*sigma);\n    float right=exp(-dot(pos, pos)/(2.*sigma*sigma));\n    return left*right;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv=fragCoord/iResolution.xy;;\n    vec2 mouseUV=iMouse.xy/iResolution.xy;\n    if(iMouse.xy==vec2(0.)) mouseUV=vec2(cos(iTime), sin(iTime*2.))*.4+.5;\n    float dist=length(mouseUV-uv)/SQRT2;\n    float sigma=mix(SIGMA_MIN, SIGMA_MAX, dist);\n    \n    vec4 sum=vec4(0.);\n    for(int i=-K;i<=K;i++){\n        for(int j=-K;j<=K;j++){\n            vec2 offset=vec2(i, j);\n            float weight=gaussian(offset, sigma);\n            \n            vec2 offsetUV=offset/iResolution.xy;\n            vec4 col=texture(iChannel0, uv+offsetUV);\n            sum+=vec4(col.rgb, 1.)*weight;\n        }\n    }\n    fragColor=sum/sum.a;\n}","name":"Image","description":"","type":"image"}]}