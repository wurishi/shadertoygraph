{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec4 gausianblur(vec2 position) {\n    // Gausian blur on image (stolen from existical on shadertoy)\n    float Pi = 6.28318530718; // Pi*2\n    \n    // GAUSSIAN BLUR SETTINGS {{{\n    float Directions = 16.0; // BLUR DIRECTIONS (Default 16.0 - More is better but slower)\n    float Quality = 4.0; // BLUR QUALITY (Default 4.0 - More is better but slower)\n    float Size = 3.0; // BLUR SIZE (Radius)\n    // GAUSSIAN BLUR SETTINGS }}}\n   \n    vec2 Radius = Size/iResolution.xy;\n    \n    vec2 uv = position/iResolution.xy;\n    \n    // Pixel colour\n    vec4 Color = texture(iChannel0, uv);\n    \n    // Blur calculations\n    for( float d=0.0; d<Pi; d+=Pi/Directions)\n    {\n\t\tfor(float i=1.0/Quality; i<=1.0; i+=1.0/Quality)\n        {\n\t\t\tColor += texture( iChannel0, uv+vec2(cos(d),sin(d))*Radius*i);\t\t\n        }\n    }\n    \n    // Output to screen\n    Color /= Quality * Directions - 15.0;\n    \n    return Color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 coord = vec2(iResolution.x - fragCoord.x, fragCoord.y);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 Cuv = vec2(1.0 - uv.x, uv.y);\n    \n    // find normal of each pixel using the slope to each surrounding pixel and\n    vec4 imcolour = gausianblur(coord);\n    vec4 upcolour = gausianblur(coord + vec2(0, 1));\n    vec4 dcolour  = gausianblur(coord + vec2(0, -1));\n    vec4 lcolour  = gausianblur(coord + vec2(1, 0));\n    vec4 rcolour  = gausianblur(coord + vec2(-1, 0));\n    \n    float lum = 0.2126*imcolour.x + 0.7152*imcolour.y + 0.0722*imcolour.z;\n    float uplum = 0.2126*upcolour.x + 0.7152*upcolour.y + 0.0722*upcolour.z;\n    float dlum = 0.2126*dcolour.x + 0.7152*dcolour.y + 0.0722*dcolour.z;\n    float llum = 0.2126*lcolour.x + 0.7152*lcolour.y + 0.0722*lcolour.z;\n    float rlum = 0.2126*rcolour.x + 0.7152*rcolour.y + 0.0722*rcolour.z;\n    \n    float height = 1.0;\n    \n    vec3 yslope = vec3(0, 1, height * (uplum - dlum));\n    vec3 xslope = vec3(1, 0, height * (rlum - llum));\n    \n    vec3 normal = cross(yslope, xslope);\n    \n    normal = normalize(normal);\n\n    \n    // define a camera position and a light position, then calcuate the specular highlights\n    // by finding the dot product of the light ray and the reflected camera ray\n    float camdistance = 100.0;\n    \n    vec3 camera = vec3(0, 0, camdistance);\n\n    vec3 viewdir = vec3(0, 0, 1);\n    \n    vec3 camtoscreen = normalize(camera - vec3(fragCoord - vec2(400, 225), 0));\n    \n    vec3 reflected = reflect(viewdir, normal);\n    \n    float scaling = camdistance / reflected.z;\n    vec2 change = reflected.xy * scaling;\n    \n    vec2 reflectcoord = (fragCoord.xy + change) / iResolution.xy;\n    \n    vec3 col = texture(iChannel1, reflectcoord).xyz * 0.8;\n    if (reflectcoord.x > 1.0 || reflectcoord.x < 0.0 || reflectcoord.y > 1.0 || reflectcoord.y < 0.0) {\n        col = vec3(0);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfGBW3","date":"1734509884","viewed":101,"name":"image warping webcam","username":"taofrog","description":"Turns the webcam into a warped mirror. It also works to swap channel0 and channel1 so the webcam output is reflected by an image","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["specular","webcam"],"hasliked":0,"parentid":"4fVBDy","parentname":"specular highlights on webcam"}}