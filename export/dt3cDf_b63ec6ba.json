{"ver":"0.1","info":{"id":"dt3cDf","date":"1699740365","viewed":34,"name":"Circle rolling on a square","username":"Proger","description":"2D simple animation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2dsdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdc(vec2 p, float r){ return length(p) - r; }\n\nfloat sdb(vec2 p, vec2 b){ \n    vec2 d = abs(p)-b; \n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float BS = (abs(cos(iTime/2.)) + .3) * 0.1;\n    float CR = (abs(sin(iTime/2.))+ .3) * 0.1;\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.x;\n    vec3 col = vec3(0);\n    float sdB = sdb(uv, vec2(BS, BS));\n    vec2 rt = vec2(cos(iTime), sin(iTime));\n    vec2 cP = rt*(BS*sqrt(2.)+CR);\n    float cr = sdb(cP, vec2(BS, BS))-CR;\n    vec2 cPL = rt*(BS*sqrt(2.)+CR-cr);\n    col += .001 / vec3(sdB)*vec3(1, 0, 0);\n    col += .001 / vec3(sdc(uv - cPL, CR))*vec3(0, 0, 1);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}