{"ver":"0.1","info":{"id":"4cVGWw","date":"1713122509","viewed":33,"name":"Fork base2000","username":"I_was_here","description":"made something in class cuz bored\n(Fullscreen looks really cool :D )","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["boredom"],"hasliked":0,"parentid":"XftGRH","parentname":"base1000"},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float time_rand(vec2 co) {\n    // Use the current time as a seed for randomness\n    float seed = float(int(gl_FragCoord.x) + int(gl_FragCoord.y) * 1000);\n    float randomValue = fract(sin(seed) * 43758.5453);\n\n    return randomValue;\n}\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\n\n\nvec2 refine(float xx, float yy, float time) {\n    float ax = xx;\n    float ay = yy;\n    return vec2(\n        ax,\n        ay\n    );\n}\n\nfloat check1(vec2 p, float t, float s) {\n    t = (t/1.0)*s;\n    float x = (p.x);\n    float y = (p.y);\n    return abs(\n    pow(\n        abs(sin(\n            x/y\n        )),\n        cos(1.0/x)+pow(pow(abs(sin(t+x/(cos(x)+1.0))),sin((t+1.0)/pow((x*y),cos(t/cos(pow(x,sin(x*y))+0.05))))),cos(t))\n    \n    ));\n}\n\nfloat check2(vec2 p, float t, float s) {\n    t = (t/4.0)*s;\n    float x = (p.x);\n    float y = (p.y);\n    return abs(\n    pow(\n        abs(sin(\n            x/y\n        )),\n        cos(1.0/x)+pow(pow(abs(sin(t+x/(cos(x)+1.5))),sin((t+1.5)/pow((x*y),cos(t/cos(pow(x,sin(x*y))+0.1))))),cos(t))\n    \n    ));\n}\n\nfloat check3(vec2 p, float t, float s) {\n    t = (t/3.0)*s;\n    float x = (p.x);\n    float y = (p.y);\n    return abs(\n    pow(\n        abs(sin(\n            x/y\n        )),\n        cos(1.0/x)+pow(pow(abs(sin(t+x/(cos(x)+2.0))),sin((t+2.0)/pow((x*y),cos(t/cos(pow(x,sin(x*y))+0.2))))),cos(t))\n    \n    ));\n}\n\n\nvec4 yes(vec2 fragCoord, vec3 info ) {\n\n    // animation\t\n    float vx = info.x;\n    float vy = info.y;\n    float zoom = info.z;\n    float speed = 1.0;\n    \n\tfloat t = ((iTime)/1.0) - 50.0;\n    vec3 color = vec3(0.5);\n    float threshold = 0.04;\n    \n    //get point\n    //Base: 538, 3000\n    vec2 point = vec2(\n    vx + \n    (fragCoord.x/(538.0)),\n    vy + \n    (fragCoord.y/(3000.0))\n    );\n    \n    // iterate\n    for( int v=0; v<3; v++   ) {\n        float current = 0.5;\n        for( int i=0; i<1000; i++ )\n        {\n            float value;\n            if (v==0) {\n                value = check1(point,t,speed);\n                //value = 0.0;\n            } else if (v==1) {\n                value = check2(point,t,speed);\n                //value = 0.0;\n            } else if (v==2) {\n                value = check3(point,t,speed);\n                //value = 0.0;\n            }\n            \n            current = value;\n            if(abs(value) > (1.0-threshold) +0.0  ) {\n                current -= float(1);\n                break;     \n            } else if (abs(value) < (threshold)  -0.0 ) {\n                current += float(1);\n                break;   \n            }\n            \n            //point = refine(float(point.x),float(point.y),t);\n            point = refine(float(point.x*point.y + (current/100000.0 ) ), float(point.y/point.x + (current/100000.0 )),t);\n        }\n        \n        if (v==0) {\n            color.r = current;\n        } else if (v==1) {\n            color.g = current;\n        } else if (v==2) {\n            color.b = current;\n        }\n    }\n  \n    return vec4(color.r, color.g, color.b, 1.0 );\n}\n\n\nfloat x = 0.0;\nfloat y = 0.0;\nfloat z = 0.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    bool down = false;\n    \n    \n    if (iMouse.zw.x>1.0) {\n        down = true;\n    }\n    \n    if (down) {\n        x += 0.5;\n        y += 0.5;\n    }\n    fragColor = yes(fragCoord,vec3(x,y,z));\n}","name":"Image","description":"","type":"image"}]}