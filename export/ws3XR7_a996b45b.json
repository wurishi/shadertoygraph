{"ver":"0.1","info":{"id":"ws3XR7","date":"1571666225","viewed":148,"name":"sdf interpolation test","username":"sasha_sortai","description":"sdf interpolation test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","interpolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat SDF(vec3 pos);\nvec3 SDFg(vec3 pos);\nvec4 march(vec3 pos, vec3 tar, vec2 uv, float fd);\nvec4 march(vec3 pos, vec3 tar, vec2 uv);\nvec4 march(vec3 pos, vec3 ray);\nfloat obst(vec3 op, vec3 lp, float k);\nfloat mmax(float a, float b);\nfloat mmin(float a, float b);\n//vec3 mmax(vec3 a, vec3 b);\n//vec3 mmin(vec3 a, vec3 b);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)*2./min(iResolution.x,iResolution.y);\n    vec3 cpos = vec3(cos(iTime*0.5),sin(iTime*0.5),1)*2.;\n    vec3 lpos = vec3(2.);\n    vec4 mres = march(cpos,vec3(0),uv);\n    \n    if (mres.w<0.) fragColor = vec4(1,0,0,1);\n    else{\n        fragColor = vec4(mix(\n            vec3(.1,0,0),\n            vec3(-.1,1,.1),\n            dot(normalize(lpos-mres.xyz),SDFg(mres.xyz)))*exp(-distance(lpos,mres.xyz)*.1\n                                                             ),1);\n        fragColor = mix(fragColor, vec4(mix(vec3(.1,-.1,.05),vec3(.6,1,.7),vec3(obst(mres.xyz,lpos,1.))),1), vec4(.8));\n    }\n    fragColor.xyz += vec3(0.05,0.05,0.05);\n    fragColor.xyz = pow(fragColor.xyz,vec3(0.9));\n}\n\nfloat SDF0(vec3 pos){\n    float bd = min(min(5.-abs(pos.x),5.-abs(pos.y)),5.-abs(pos.z));\n    float sph0=length(pos+vec3(cos(-2.*iTime),sin(-2.*iTime),0.)*.5)-.75;\n    float sph1=distance(pos,vec3(0,0,cos(5.*iTime)*0.5))-.5;\n    return min(bd,min(sph0,sph1));\n}\nfloat SDF(vec3 pos){\n    //return SDF0(pos);\n    float mult = 2.;\n    vec3 f = floor(pos*mult)/mult;\n    vec3 p = pos-f;\n    vec3 cs;\n    cs = vec3(0,0,0); float f000 = -length(p+cs/mult-2.*cs*p)+SDF0(f+cs/mult);\n    cs = vec3(0,0,1); float f001 = -length(p+cs/mult-2.*cs*p)+SDF0(f+cs/mult);\n    cs = vec3(0,1,0); float f010 = -length(p+cs/mult-2.*cs*p)+SDF0(f+cs/mult);\n    cs = vec3(0,1,1); float f011 = -length(p+cs/mult-2.*cs*p)+SDF0(f+cs/mult);\n    cs = vec3(1,0,0); float f100 = -length(p+cs/mult-2.*cs*p)+SDF0(f+cs/mult);\n    cs = vec3(1,0,1); float f101 = -length(p+cs/mult-2.*cs*p)+SDF0(f+cs/mult);\n    cs = vec3(1,1,0); float f110 = -length(p+cs/mult-2.*cs*p)+SDF0(f+cs/mult);\n    cs = vec3(1,1,1); float f111 = -length(p+cs/mult-2.*cs*p)+SDF0(f+cs/mult);\n    return max(max(max(f000,f001),max(f010,f011)),max(max(f100,f101),max(f110,f111)));\n}\nvec3 SDFg(vec3 pos){\n    vec3 er = vec3(.000001,0,0);\n    return normalize(vec3(\n        SDF(pos+er.xyz)-SDF(pos-er.xyz),\n        SDF(pos+er.yzx)-SDF(pos-er.yzx),\n        SDF(pos+er.zxy)-SDF(pos-er.zxy)));\n}\nvec4 march(vec3 pos, vec3 ray){\n    float d;\n    float td = 0.;\n    int imax = 5000;\n    int i;\n    for (i = 0; i<imax; i++){\n        d = SDF(pos+td*ray)*.9*texture(iChannel0,1./(1.+exp(-pos))).x;\n        if (d<=0.00003) break;\n        td+=d;\n    }\n    if (i<imax-1) return vec4(pos+td*ray,float(i)/float(imax-2));\n    else return vec4(pos+td*ray,-1);\n}\nvec4 march(vec3 pos, vec3 tar, vec2 uv, float fd){\n    vec3 fo = normalize(tar-pos);\n    vec3 ri = cross(fo,vec3(0,0,1));\n    vec3 up = cross(ri,fo);\n    vec3 ray = normalize(mat3(ri,up,fo)*vec3(uv,fd));\n    return march(pos,ray);\n}\nvec4 march(vec3 pos, vec3 tar, vec2 uv){\n    return march(pos, tar, uv, 1.);\n}\nfloat obst(vec3 op, vec3 lp, float k){\n    float off = .01;\n    vec3 rd = lp-op;\n    float md = length(rd);\n    float res = 1.;\n    float d;\n    for(float t=.000000001; t<1.;){\n        d = SDF(op + rd*t);\n        if(d<0.0){\n            res=0.;\n            break;\n        }\n        res = min(res, k*d/t/md);\n        t+=off;\n    }\n    return res;\n}\nfloat mmax(float a, float b){\n    if (abs(a)>abs(b)) return a;\n    else return b;\n}\nfloat mmin(float a, float b){\n    if (abs(a)<abs(b)) return a;\n    else return b;\n}\n/*\nvec3 mmax(vec3 a, vec3 b){\n    return vec3(mmax(a.x,b.x),mmax(a.y,b.y),mmax(a.z,b.z));\n}\nvec3 mmin(vec3 a, vec3 b){\n    return vec3(mmin(a.x,b.x),mmin(a.y,b.y),mmin(a.z,b.z));\n}\n*/","name":"Image","description":"","type":"image"}]}