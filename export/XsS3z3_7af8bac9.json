{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float Noise(int x, int y)\n{\n\tvec2 pos = vec2(x, y);\n\treturn fract( sin( dot(pos*0.001 ,vec2(24.12357, 36.789) ) ) * 12345.123);\t\n}\n\nfloat Interpolate(float x, float y, float a) {\n          float negA = 1.0 - a;\n          float negASqr = negA * negA;\n          float fac1 = 3.0 * (negASqr) - 2.0 * (negASqr * negA);\n          float aSqr = a * a;\n          float fac2 = 3.0 * aSqr - 2.0 * (aSqr * a);\n\n          return x * fac1 + y * fac2;\n}\n\nfloat GetValue(float x, float y) {\n          int Xint = int(x);\n          int Yint = int(y);\n          float Xfrac = x - float(Xint);\n          float Yfrac = y - float(Yint);\n\n          //noise values\n          float n01 = Noise(Xint-1, Yint-1);\n          float n02 = Noise(Xint+1, Yint-1);\n          float n03 = Noise(Xint-1, Yint+1);\n          float n04 = Noise(Xint+1, Yint+1);\n          float n05 = Noise(Xint-1, Yint);\n          float n06 = Noise(Xint+1, Yint);\n          float n07 = Noise(Xint, Yint-1);\n          float n08 = Noise(Xint, Yint+1);\n          float n09 = Noise(Xint, Yint);\n          \n          float n12 = Noise(Xint+2, Yint-1);\n          float n14 = Noise(Xint+2, Yint+1);\n          float n16 = Noise(Xint+2, Yint);\n          \n          float n23 = Noise(Xint-1, Yint+2);\n          float n24 = Noise(Xint+1, Yint+2);\n          float n28 = Noise(Xint, Yint+2);\n          \n          float n34 = Noise(Xint+2, Yint+2);\n\n          //find the noise values of the four corners\n          //corners, left-right, center\n          float x0y0 = 0.0625*(n01+n02+n03+n04) + 0.125*(n05+n06+n07+n08) + 0.25*(n09); \n          //left-right-(left-right-under 2 lines), (left-right-under 1 line)-center-(center under 2 lines), center under 1 line\n          float x1y0 = 0.0625*(n07+n12+n08+n14) + 0.125*(n09+n16+n02+n04) + 0.25*(n06);  \n          float x0y1 = 0.0625*(n05+n06+n23+n24) + 0.125*(n03+n04+n09+n28) + 0.25*(n08);  \n          float x1y1 = 0.0625*(n09+n16+n28+n34) + 0.125*(n08+n14+n06+n24) + 0.25*(n04);  \n\n          //interpolate between those values according to the x and y fractions\n          float v1 = Interpolate(x0y0, x1y0, Xfrac); //interpolate in x direction (y)\n          float v2 = Interpolate(x0y1, x1y1, Xfrac); //interpolate in x direction (y+1)\n          float fin = Interpolate(v1, v2, Yfrac);  //interpolate in y direction\n\n          return fin;\n}\n\nfloat randomseed = 0.0;\n           \nfloat Total(float i, float j) {\n          //properties of one octave (changing each loop)\n          float persistence = 0.4;\n          float freq = 15.0;\n          float _amplitude  = 0.6;\n          int octaves = 2;\n          //float randomseed = 0.3;\n          float t = 0.0;\n          \n          for(int k = 0; k < 5; k++) \n          {\n            t = t + GetValue(j * freq, i * freq + randomseed) * _amplitude;\n            _amplitude = _amplitude * persistence;\n            freq = freq * 2.0;\n          }\n\n          return t;\n}\n\nvec4 emissive_color_start;\nvec4 emissive_color_end;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\t randomseed = iTime * 0.5;\n\t\t emissive_color_start = vec4(1, 1, 1, 1);\n\t\t emissive_color_end = vec4(0, 0, 1, 1);\n\t\t vec2 position = fragCoord.xy / iResolution.xy * 0.5;\n    \t float n = Total(position.x, position.y);\n          \n    \t //if (n > 1.0) n = 1.0;\n    \t //else if (n < 0.0) n = 0.0;\n\t\t \n\t\t //liniar interpolation\n    \t //fragColor = (1.0 - n)*emissive_color_start + n*emissive_color_end;\n\t\n\t\t //cosine interpolation\n\t\t //float ft = n * 3.1415927;\n\t\t //float f = (1.0 - cos(ft)) * 0.5;\t\t\t\n\t\t //fragColor = emissive_color_start*(1.0-f) + emissive_color_end*f;\n\t\n\t\t //cubic interpolation\n\t\t float p = 3.0 * n * n - 2.0 * n * n* n;\n\t\t fragColor = (1.0 - p) * emissive_color_start + n * emissive_color_end;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsS3z3","date":"1391388506","viewed":444,"name":"MyClouds","username":"StephO","description":"Side scrolling clouds made with Perlin Noise.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise","clouds"],"hasliked":0,"parentid":"","parentname":""}}