{"ver":"0.1","info":{"id":"lc2cRm","date":"1722093925","viewed":64,"name":"Note visializer","username":"ODtian","description":"sound: Fighting My Way (piano ver.)  https://www.youtube.com/watch?v=5Wx0FON8KAE\nsound: 花ざかりWeekend✿ (piano ver.)  https://www.youtube.com/watch?v=kLQ05iuRolo","likes":4,"published":1,"flags":40,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// #define VSCODE\n\n#ifdef VSCODE\n#iChannel0 \"file://buffera.glsl\"\n// #iChannel1 \"file://fonts.png\"\n#include \"common.glsl\"\n#endif\n\nint start;\nint end;\n\nSurface map(vec2 pos) {\n    float time = iTime;\n    time *= SCALE;\n    time = mod(time, LEN);\n    // time = 1670.0;\n\n    // for (int i = 0; i < DATA_LENGTH_B; ++i) {\n    //     vec4 d = data[DATA_LENGTH_A + i];\n    //     sounds[i * 2] = Sound(floatBitsToInt(d.x), d.y);\n    //     sounds[i * 2 + 1] = Sound(floatBitsToInt(d.z), d.w);\n    // }\n\n    // vec4 res = vec4(1.0);\n    Surface co = Surface(1.0, Material(vec3(float(0.0)), 1.0, 1.0));\n    // int len = BLOCK_SIZE - progress;\n    // bool render_end = len < 10;\n\n    for (int i = start; i <= end; ++i) {\n        vec3 s = sound[i];\n        if (s.x > time || time > s.y) {\n            float y_size = (s.y - s.x) / SCALE;\n            float y_size_h = y_size * 0.5;\n            co.d = op_union(co.d, sdBox(pos - vec2((s.z - 60.0) * 0.03, (s.x - time) / SCALE + y_size_h), vec2(0.01, y_size_h - KEY_MARGIN)));\n        }\n    }\n    co.d = op_union(co.d, sdBox(pos, vec2(10.0, 0.001)));\n    co.d = op_union(co.d, sdBox(pos, vec2(0.001, 10.0)));\n\n    Surface actived = Surface(1.0, Material(vec3(float(0.2)), 1.0, 1.0));\n    for (int i = start; i <= end; ++i) {\n        vec3 s = sound[i];\n        if (s.x < time && time < s.y) {\n            float y_size = (s.y - s.x) / SCALE;\n            float y_size_h = y_size * 0.5;\n            actived.d = op_union(actived.d, sdBox(pos - vec2((s.z - 60.0) * 0.03, (s.x - time) / SCALE + y_size_h), vec2(0.01, y_size_h - KEY_MARGIN)));\n        }\n    }\n\n    co = surf_op_union(co, actived);\n    // co.d = op_union(c.a, co.d);\n\n    return co;\n}\n\nvec3 render(vec2 pos) {\n    const vec3 background = vec3(0.8);\n    float len = min(1.0 / iResolution.x, 1.0 / iResolution.y);\n    Surface co = map(pos);\n\n    vec3 col = mix(co.mat.albedo, background, smoothstep(0.0, len, co.d));\n\n    // bool text_normal = pos.y > 2.0 - FONT_SCALE && start_time > 0.0;\n    // bool text_end = end_time > 0.0 && wrong_track < 0;\n\n    // if (text_normal || text_end) {\n    //     // including a dot\n    //     uint digit[5];\n\n    //     float pre = 0.1;\n    //     float t = end_time > 0.0 ? end_time - start_time : iTime - start_time;\n\n    //     int char_length = 0;\n    //     for (int i = 1; i < 5; ++i, pre *= 10.0) {\n    //         uint d = uint(mod(t / pre, 10.0));\n    //         if (d != 0u) {\n    //             char_length = i;\n    //         }\n    //         digit[i] = 48u + d;\n    //     }\n\n    //     char_length = max(char_length + 1, 3);\n\n    //     digit[0] = digit[1];\n    //     digit[1] = 46u;\n\n    //     float char_width = float(char_length) * FONT_GUTTER - (1.0 - FONT_GUTTER);\n\n    //     float text_end = char_width / 2.0;\n\n    //     float end_t = smoothstep(0.0, 1.0, (iTime - end_time) * step(0.0, end_time));\n    //     float font_scale = mix(FONT_SCALE, 2.0 * FONT_SCALE, end_t);\n    //     float font_height = mix(2.0 / font_scale - 1.0, 1.0 / font_scale - 0.5, end_t);\n\n    //     float c;\n    //     for (int i = 0; i < char_length; ++i) {\n    //         text_end -= FONT_GUTTER;\n    //         c = char(pos / font_scale - vec2(text_end, font_height), digit[i]).r;\n    //         col = mix(col, FONT_COLOR, c);\n    //     }\n\n    // }\n\n    return col;\n}\n\nvoid read_data() {\n    vec2 data = texelFetch(iChannel0, ivec2(0, 0), 0).xy;\n    start = floatBitsToInt(data.x);\n    end = floatBitsToInt(data.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    read_data();\n\n    vec2 pos = (2.0 * fragCoord - vec2(iResolution.x, iResolution.y)) / iResolution.y;\n\n    vec3 col = render(pos);\n\n    col = Tonemap_ACES(col);\n    col = pow(col, vec3(0.4545));\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound(int samp, float time) {\n    time *= SCALE;\n    time = mod(time, LEN);\n\n    vec2 res = vec2(0.0);\n\n    for (int i = 0; i < SOUND_LENGTH; ++i) {\n        vec3 s = sound[i];\n        if (time > s.x && time < s.y + 100.0) {\n            res += INSTRUMENT(pitch(s.z - 69.0), (time - s.x) / SCALE);\n        }\n    }\n    return res * exp(VOL);\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"#define DEBUG\n\n#ifdef DEBUG\n#define TIME_SCALE 1.0\n#define iTime (iTime * TIME_SCALE)\n#define iTimeDelta (iTimeDelta * TIME_SCALE)\n#endif\n\n// #define SOUND_LENGTH 1024\n#define SOUND_LENGTH 705\n#define INSTRUMENT pianoSound\n#define SCALE (1000.0)\n#define VOL -3.0\n#define LEN 74702.0\n#define KEY_MARGIN 0.01\n\nconst vec3[SOUND_LENGTH] sound = vec3[SOUND_LENGTH](vec3(1670.0, 2294.0, 65.0), vec3(1670.0, 2515.0, 41.0), vec3(2323.0, 2515.0, 63.0), vec3(2544.0, 2755.0, 65.0), vec3(2765.0, 2976.0, 68.0), vec3(2544.0, 3158.0, 39.0), vec3(3187.0, 3398.0, 63.0), vec3(3418.0, 3619.0, 65.0), vec3(3638.0, 3830.0, 63.0), vec3(3859.0, 4070.0, 65.0), vec3(4070.0, 4963.0, 68.0), vec3(3187.0, 5117.0, 37.0), vec3(4934.0, 5146.0, 65.0), vec3(5146.0, 5366.0, 70.0), vec3(5366.0, 5578.0, 70.0), vec3(5578.0, 5818.0, 70.0), vec3(5146.0, 6019.0, 46.0), vec3(5818.0, 6019.0, 70.0), vec3(6019.0, 6240.0, 70.0), vec3(6240.0, 6451.0, 68.0), vec3(6019.0, 6662.0, 44.0), vec3(6451.0, 6662.0, 68.0), vec3(6662.0, 7094.0, 67.0), vec3(7094.0, 7526.0, 65.0), vec3(7555.0, 7738.0, 63.0), vec3(6662.0, 8160.0, 39.0), vec3(8218.0, 8621.0, 40.0), vec3(7776.0, 8621.0, 60.0), vec3(8650.0, 9293.0, 65.0), vec3(8650.0, 9504.0, 41.0), vec3(9293.0, 9504.0, 63.0), vec3(9504.0, 9725.0, 65.0), vec3(9504.0, 10138.0, 39.0), vec3(9725.0, 10138.0, 68.0), vec3(10166.0, 10378.0, 63.0), vec3(10378.0, 10598.0, 65.0), vec3(10598.0, 10810.0, 63.0), vec3(10810.0, 11030.0, 65.0), vec3(10166.0, 11453.0, 37.0), vec3(11030.0, 11453.0, 72.0), vec3(11491.0, 11674.0, 41.0), vec3(11702.0, 11894.0, 44.0), vec3(11702.0, 11923.0, 72.0), vec3(11923.0, 12106.0, 48.0), vec3(11923.0, 12134.0, 72.0), vec3(12134.0, 12355.0, 72.0), vec3(12355.0, 12566.0, 70.0), vec3(12134.0, 12998.0, 46.0), vec3(12566.0, 13430.0, 68.0), vec3(12998.0, 13642.0, 44.0), vec3(13459.0, 13642.0, 70.0), vec3(13670.0, 13872.0, 68.0), vec3(13670.0, 14851.0, 39.0), vec3(13872.0, 14851.0, 67.0), vec3(14851.0, 15072.0, 72.0), vec3(15072.0, 15283.0, 70.0), vec3(15283.0, 15504.0, 73.0), vec3(15533.0, 15619.0, 78.0), vec3(15619.0, 15965.0, 65.0), vec3(15619.0, 16051.0, 41.0), vec3(15840.0, 16272.0, 53.0), vec3(16051.0, 16483.0, 41.0), vec3(15965.0, 16483.0, 65.0), vec3(16272.0, 16733.0, 53.0), vec3(16483.0, 16819.0, 65.0), vec3(16483.0, 16944.0, 41.0), vec3(16733.0, 17155.0, 53.0), vec3(16944.0, 17376.0, 41.0), vec3(16819.0, 17376.0, 65.0), vec3(17155.0, 17587.0, 53.0), vec3(17376.0, 17587.0, 65.0), vec3(17155.0, 17694.0, 60.0), vec3(17376.0, 17808.0, 41.0), vec3(17587.0, 17808.0, 53.0), vec3(17587.0, 17808.0, 65.0), vec3(17808.0, 18019.0, 53.0), vec3(17808.0, 18019.0, 65.0), vec3(17808.0, 18240.0, 41.0), vec3(18019.0, 18240.0, 53.0), vec3(18019.0, 18240.0, 65.0), vec3(18240.0, 18451.0, 53.0), vec3(18240.0, 18701.0, 41.0), vec3(18451.0, 18883.0, 53.0), vec3(18240.0, 18883.0, 65.0), vec3(18883.0, 19008.0, 65.0), vec3(18701.0, 19094.0, 41.0), vec3(18883.0, 19094.0, 53.0), vec3(19008.0, 19094.0, 65.0), vec3(18019.0, 19094.0, 68.0), vec3(19094.0, 19315.0, 53.0), vec3(19094.0, 19315.0, 68.0), vec3(19315.0, 19440.0, 68.0), vec3(19094.0, 19526.0, 41.0), vec3(19315.0, 19526.0, 53.0), vec3(19440.0, 19526.0, 68.0), vec3(19526.0, 19776.0, 41.0), vec3(19526.0, 19776.0, 53.0), vec3(19526.0, 19776.0, 67.0), vec3(19776.0, 19872.0, 67.0), vec3(19776.0, 19987.0, 41.0), vec3(19776.0, 19987.0, 53.0), vec3(19872.0, 19987.0, 67.0), vec3(19987.0, 20112.0, 65.0), vec3(19987.0, 20208.0, 41.0), vec3(19987.0, 20208.0, 53.0), vec3(20112.0, 20208.0, 65.0), vec3(20208.0, 20323.0, 65.0), vec3(20208.0, 20419.0, 41.0), vec3(20208.0, 20419.0, 53.0), vec3(20323.0, 20419.0, 65.0), vec3(20419.0, 20630.0, 53.0), vec3(20419.0, 20851.0, 41.0), vec3(20630.0, 20851.0, 53.0), vec3(20419.0, 20880.0, 65.0), vec3(20851.0, 21062.0, 53.0), vec3(20851.0, 21187.0, 72.0), vec3(20851.0, 21283.0, 41.0), vec3(21062.0, 21523.0, 53.0), vec3(20630.0, 21626.0, 63.0), vec3(21283.0, 21734.0, 41.0), vec3(21187.0, 21734.0, 72.0), vec3(21523.0, 21946.0, 53.0), vec3(21734.0, 22166.0, 41.0), vec3(21946.0, 22378.0, 53.0), vec3(22166.0, 22598.0, 41.0), vec3(21523.0, 22598.0, 65.0), vec3(22378.0, 22838.0, 53.0), vec3(22598.0, 23050.0, 41.0), vec3(22838.0, 23270.0, 53.0), vec3(23050.0, 23482.0, 41.0), vec3(21734.0, 23482.0, 72.0), vec3(23270.0, 23592.0, 53.0), vec3(22598.0, 23592.0, 65.0), vec3(23482.0, 23914.0, 41.0), vec3(23702.0, 24134.0, 53.0), vec3(23827.0, 24134.0, 65.0), vec3(23914.0, 24346.0, 41.0), vec3(23482.0, 24346.0, 72.0), vec3(24134.0, 24566.0, 53.0), vec3(24134.0, 24566.0, 65.0), vec3(24346.0, 24566.0, 72.0), vec3(24346.0, 24778.0, 41.0), vec3(24566.0, 24778.0, 72.0), vec3(24566.0, 24989.0, 53.0), vec3(24566.0, 24989.0, 65.0), vec3(24778.0, 25210.0, 41.0), vec3(24778.0, 25210.0, 72.0), vec3(24989.0, 25450.0, 53.0), vec3(24989.0, 25450.0, 65.0), vec3(25450.0, 25558.0, 65.0), vec3(24989.0, 25558.0, 75.0), vec3(25210.0, 25651.0, 41.0), vec3(25450.0, 25862.0, 53.0), vec3(25862.0, 25987.0, 70.0), vec3(25651.0, 26083.0, 41.0), vec3(25862.0, 26294.0, 53.0), vec3(26083.0, 26323.0, 68.0), vec3(25987.0, 26323.0, 70.0), vec3(25210.0, 26323.0, 72.0), vec3(26294.0, 26506.0, 67.0), vec3(26083.0, 26544.0, 41.0), vec3(26294.0, 26544.0, 53.0), vec3(26544.0, 26755.0, 53.0), vec3(26544.0, 26755.0, 65.0), vec3(26544.0, 26966.0, 41.0), vec3(26323.0, 26966.0, 72.0), vec3(26755.0, 27187.0, 53.0), vec3(26966.0, 27398.0, 41.0), vec3(26755.0, 27524.0, 68.0), vec3(26323.0, 27524.0, 70.0), vec3(26966.0, 27524.0, 72.0), vec3(27187.0, 27629.0, 53.0), vec3(27398.0, 27840.0, 41.0), vec3(27629.0, 28061.0, 53.0), vec3(27629.0, 28061.0, 65.0), vec3(27840.0, 28272.0, 41.0), vec3(28061.0, 28272.0, 65.0), vec3(28061.0, 28493.0, 53.0), vec3(28272.0, 28704.0, 41.0), vec3(28272.0, 28704.0, 65.0), vec3(28493.0, 28925.0, 53.0), vec3(28704.0, 29136.0, 41.0), vec3(28925.0, 29376.0, 53.0), vec3(28493.0, 29490.0, 63.0), vec3(28061.0, 29490.0, 67.0), vec3(27840.0, 29490.0, 68.0), vec3(27629.0, 29490.0, 70.0), vec3(29136.0, 29587.0, 41.0), vec3(29376.0, 29587.0, 53.0), vec3(28704.0, 29587.0, 65.0), vec3(29587.0, 30019.0, 53.0), vec3(29587.0, 30019.0, 65.0), vec3(29587.0, 30019.0, 68.0), vec3(29808.0, 30019.0, 72.0), vec3(29587.0, 30240.0, 41.0), vec3(30019.0, 30240.0, 53.0), vec3(30019.0, 30240.0, 65.0), vec3(30240.0, 30662.0, 41.0), vec3(30240.0, 30883.0, 53.0), vec3(30240.0, 30883.0, 60.0), vec3(30240.0, 30883.0, 65.0), vec3(30662.0, 31123.0, 41.0), vec3(30883.0, 31123.0, 53.0), vec3(30883.0, 31123.0, 60.0), vec3(30883.0, 31123.0, 65.0), vec3(31123.0, 31219.0, 60.0), vec3(31123.0, 31219.0, 65.0), vec3(31123.0, 31344.0, 41.0), vec3(31123.0, 31344.0, 53.0), vec3(31219.0, 31344.0, 60.0), vec3(31219.0, 31344.0, 65.0), vec3(30019.0, 31456.0, 68.0), vec3(30019.0, 31456.0, 72.0), vec3(29808.0, 31456.0, 77.0), vec3(31344.0, 31555.0, 53.0), vec3(31344.0, 31555.0, 60.0), vec3(31344.0, 31555.0, 65.0), vec3(31555.0, 31776.0, 53.0), vec3(31555.0, 31776.0, 60.0), vec3(31555.0, 31776.0, 65.0), vec3(31344.0, 31987.0, 41.0), vec3(31776.0, 31987.0, 53.0), vec3(31776.0, 31987.0, 60.0), vec3(31776.0, 31987.0, 65.0), vec3(31987.0, 32419.0, 41.0), vec3(31987.0, 32630.0, 53.0), vec3(31987.0, 32630.0, 65.0), vec3(31987.0, 32630.0, 68.0), vec3(31987.0, 32630.0, 72.0), vec3(32419.0, 32851.0, 41.0), vec3(32630.0, 32851.0, 68.0), vec3(32630.0, 32851.0, 72.0), vec3(32851.0, 33062.0, 41.0), vec3(32851.0, 33062.0, 68.0), vec3(32851.0, 33062.0, 72.0), vec3(33062.0, 33283.0, 68.0), vec3(33062.0, 33283.0, 72.0), vec3(32630.0, 33422.0, 53.0), vec3(32630.0, 33422.0, 65.0), vec3(33062.0, 33514.0, 41.0), vec3(33283.0, 33514.0, 68.0), vec3(33283.0, 33514.0, 72.0), vec3(33514.0, 33725.0, 53.0), vec3(33514.0, 33725.0, 68.0), vec3(33514.0, 33725.0, 71.0), vec3(33725.0, 33946.0, 68.0), vec3(33725.0, 33946.0, 71.0), vec3(33725.0, 34157.0, 41.0), vec3(33946.0, 34157.0, 68.0), vec3(33946.0, 34157.0, 70.0), vec3(34157.0, 34378.0, 41.0), vec3(34157.0, 34378.0, 68.0), vec3(34157.0, 34378.0, 70.0), vec3(34378.0, 34589.0, 53.0), vec3(34378.0, 34589.0, 68.0), vec3(34378.0, 34589.0, 69.0), vec3(34589.0, 34810.0, 41.0), vec3(34589.0, 34810.0, 68.0), vec3(34589.0, 34810.0, 69.0), vec3(34810.0, 35146.0, 41.0), vec3(34810.0, 35146.0, 65.0), vec3(34810.0, 35146.0, 68.0), vec3(35146.0, 35482.0, 41.0), vec3(35146.0, 35482.0, 65.0), vec3(35146.0, 35482.0, 68.0), vec3(35482.0, 36528.0, 41.0), vec3(35482.0, 36528.0, 53.0), vec3(35482.0, 36528.0, 65.0), vec3(35482.0, 36528.0, 68.0), vec3(36557.0, 36989.0, 41.0), vec3(36778.0, 36989.0, 53.0), vec3(36778.0, 36989.0, 68.0), vec3(36557.0, 36989.0, 72.0), vec3(36989.0, 37114.0, 65.0), vec3(37114.0, 37238.0, 65.0), vec3(37238.0, 37325.0, 65.0), vec3(36989.0, 37440.0, 41.0), vec3(37210.0, 37440.0, 53.0), vec3(37325.0, 37440.0, 65.0), vec3(37440.0, 37872.0, 41.0), vec3(37651.0, 37872.0, 53.0), vec3(37651.0, 37872.0, 65.0), vec3(37440.0, 37872.0, 68.0), vec3(37872.0, 38304.0, 41.0), vec3(38083.0, 38304.0, 53.0), vec3(38083.0, 38304.0, 65.0), vec3(37872.0, 38304.0, 72.0), vec3(38304.0, 38765.0, 41.0), vec3(38515.0, 38765.0, 53.0), vec3(38640.0, 38851.0, 65.0), vec3(38851.0, 39072.0, 65.0), vec3(38765.0, 39187.0, 41.0), vec3(38976.0, 39187.0, 53.0), vec3(39072.0, 39187.0, 65.0), vec3(38515.0, 39283.0, 68.0), vec3(38304.0, 39320.0, 72.0), vec3(39187.0, 39408.0, 65.0), vec3(39187.0, 39619.0, 41.0), vec3(39408.0, 39840.0, 53.0), vec3(39408.0, 39840.0, 65.0), vec3(39283.0, 39840.0, 68.0), vec3(39840.0, 39955.0, 65.0), vec3(39619.0, 40051.0, 41.0), vec3(39619.0, 40051.0, 72.0), vec3(39840.0, 40262.0, 53.0), vec3(39840.0, 40262.0, 68.0), vec3(39955.0, 40387.0, 65.0), vec3(40051.0, 40483.0, 41.0), vec3(40387.0, 40608.0, 65.0), vec3(40262.0, 40723.0, 53.0), vec3(40608.0, 40819.0, 65.0), vec3(40483.0, 40944.0, 41.0), vec3(40819.0, 40944.0, 65.0), vec3(40723.0, 41155.0, 53.0), vec3(40262.0, 41155.0, 68.0), vec3(40944.0, 41376.0, 41.0), vec3(41155.0, 41376.0, 53.0), vec3(40944.0, 41376.0, 65.0), vec3(41376.0, 41587.0, 53.0), vec3(41376.0, 41587.0, 65.0), vec3(41155.0, 41587.0, 68.0), vec3(41376.0, 41808.0, 41.0), vec3(41587.0, 41808.0, 53.0), vec3(41587.0, 41808.0, 65.0), vec3(41587.0, 41808.0, 68.0), vec3(40051.0, 41808.0, 72.0), vec3(41808.0, 42662.0, 41.0), vec3(41808.0, 42662.0, 53.0), vec3(41808.0, 42662.0, 65.0), vec3(41808.0, 42662.0, 68.0), vec3(41808.0, 42662.0, 72.0), vec3(42662.0, 42883.0, 72.0), vec3(42662.0, 42883.0, 84.0), vec3(42883.0, 43094.0, 70.0), vec3(42883.0, 43094.0, 82.0), vec3(43123.0, 43325.0, 68.0), vec3(43123.0, 43325.0, 80.0), vec3(43325.0, 43536.0, 63.0), vec3(43325.0, 43536.0, 75.0), vec3(43536.0, 43968.0, 37.0), vec3(43757.0, 44218.0, 49.0), vec3(43968.0, 44429.0, 37.0), vec3(43872.0, 44429.0, 72.0), vec3(43872.0, 44429.0, 84.0), vec3(44218.0, 44640.0, 49.0), vec3(44429.0, 44861.0, 37.0), vec3(44640.0, 44861.0, 49.0), vec3(44861.0, 45072.0, 49.0), vec3(43536.0, 45218.0, 65.0), vec3(44861.0, 45218.0, 68.0), vec3(44640.0, 45218.0, 70.0), vec3(44429.0, 45218.0, 72.0), vec3(43536.0, 45218.0, 77.0), vec3(44861.0, 45218.0, 80.0), vec3(44640.0, 45218.0, 82.0), vec3(44429.0, 45218.0, 84.0), vec3(44861.0, 45274.0, 37.0), vec3(45072.0, 45274.0, 49.0), vec3(45072.0, 45274.0, 63.0), vec3(45072.0, 45274.0, 75.0), vec3(45302.0, 45610.0, 65.0), vec3(45302.0, 45610.0, 77.0), vec3(45302.0, 45734.0, 39.0), vec3(45514.0, 45946.0, 51.0), vec3(45734.0, 46166.0, 39.0), vec3(45638.0, 46166.0, 75.0), vec3(45638.0, 46166.0, 87.0), vec3(45946.0, 46378.0, 51.0), vec3(46166.0, 46406.0, 75.0), vec3(46166.0, 46406.0, 87.0), vec3(46166.0, 46589.0, 39.0), vec3(46378.0, 46589.0, 73.0), vec3(46378.0, 46589.0, 85.0), vec3(46378.0, 46810.0, 51.0), vec3(46589.0, 46810.0, 72.0), vec3(46589.0, 46810.0, 84.0), vec3(46589.0, 47021.0, 39.0), vec3(46810.0, 47021.0, 51.0), vec3(46810.0, 47021.0, 73.0), vec3(46810.0, 47021.0, 85.0), vec3(47021.0, 47261.0, 41.0), vec3(47021.0, 47261.0, 72.0), vec3(47021.0, 47261.0, 84.0), vec3(47261.0, 47472.0, 41.0), vec3(47261.0, 47472.0, 53.0), vec3(47261.0, 47472.0, 72.0), vec3(47261.0, 47472.0, 84.0), vec3(47472.0, 47693.0, 41.0), vec3(47472.0, 47693.0, 72.0), vec3(47472.0, 47693.0, 84.0), vec3(47693.0, 47904.0, 41.0), vec3(47693.0, 47904.0, 53.0), vec3(47693.0, 47904.0, 70.0), vec3(47693.0, 47904.0, 82.0), vec3(47904.0, 48125.0, 41.0), vec3(47904.0, 48125.0, 68.0), vec3(47904.0, 48125.0, 80.0), vec3(48125.0, 48336.0, 41.0), vec3(48125.0, 48336.0, 53.0), vec3(48125.0, 48336.0, 70.0), vec3(48125.0, 48336.0, 82.0), vec3(48336.0, 48557.0, 41.0), vec3(48336.0, 48557.0, 72.0), vec3(48336.0, 48557.0, 84.0), vec3(48557.0, 48768.0, 41.0), vec3(48557.0, 48768.0, 53.0), vec3(48557.0, 48768.0, 68.0), vec3(48557.0, 48768.0, 80.0), vec3(48797.0, 49104.0, 36.0), vec3(49008.0, 49104.0, 48.0), vec3(48797.0, 49104.0, 67.0), vec3(48797.0, 49104.0, 79.0), vec3(49104.0, 49150.0, 48.0), vec3(49104.0, 49238.0, 36.0), vec3(49104.0, 49421.0, 67.0), vec3(49104.0, 49421.0, 79.0), vec3(49238.0, 49450.0, 36.0), vec3(49450.0, 49661.0, 36.0), vec3(49450.0, 49661.0, 48.0), vec3(49450.0, 49661.0, 77.0), vec3(49450.0, 49661.0, 89.0), vec3(49661.0, 49882.0, 36.0), vec3(49661.0, 49882.0, 48.0), vec3(49661.0, 49882.0, 72.0), vec3(49661.0, 49882.0, 84.0), vec3(49882.0, 50093.0, 36.0), vec3(49882.0, 50093.0, 48.0), vec3(49882.0, 50093.0, 70.0), vec3(49882.0, 50093.0, 82.0), vec3(50093.0, 50314.0, 36.0), vec3(50093.0, 50314.0, 48.0), vec3(50093.0, 50314.0, 68.0), vec3(50093.0, 50314.0, 80.0), vec3(50314.0, 50525.0, 36.0), vec3(50314.0, 50525.0, 48.0), vec3(50314.0, 50525.0, 63.0), vec3(50314.0, 50525.0, 75.0), vec3(50525.0, 50861.0, 37.0), vec3(50746.0, 50861.0, 49.0), vec3(50525.0, 50861.0, 65.0), vec3(50525.0, 50861.0, 77.0), vec3(50861.0, 50986.0, 37.0), vec3(50861.0, 50986.0, 49.0), vec3(50986.0, 51117.0, 49.0), vec3(50986.0, 51197.0, 37.0), vec3(51197.0, 51408.0, 49.0), vec3(50861.0, 51408.0, 72.0), vec3(50861.0, 51408.0, 84.0), vec3(51408.0, 51629.0, 37.0), vec3(51408.0, 51629.0, 72.0), vec3(51408.0, 51629.0, 84.0), vec3(51629.0, 51840.0, 49.0), vec3(51629.0, 51840.0, 70.0), vec3(51629.0, 51840.0, 82.0), vec3(51840.0, 52061.0, 37.0), vec3(51840.0, 52061.0, 68.0), vec3(51840.0, 52061.0, 80.0), vec3(52061.0, 52272.0, 49.0), vec3(52061.0, 52272.0, 63.0), vec3(52061.0, 52272.0, 75.0), vec3(52272.0, 52483.0, 39.0), vec3(52272.0, 52608.0, 65.0), vec3(52272.0, 52608.0, 77.0), vec3(52483.0, 52704.0, 51.0), vec3(52704.0, 52915.0, 39.0), vec3(52608.0, 52944.0, 75.0), vec3(52608.0, 52944.0, 87.0), vec3(52944.0, 53136.0, 51.0), vec3(53136.0, 53357.0, 51.0), vec3(53136.0, 53568.0, 39.0), vec3(53357.0, 53568.0, 51.0), vec3(52944.0, 53568.0, 75.0), vec3(52944.0, 53568.0, 87.0), vec3(53568.0, 53789.0, 51.0), vec3(53568.0, 53818.0, 75.0), vec3(53568.0, 53818.0, 87.0), vec3(53568.0, 54000.0, 39.0), vec3(53789.0, 54000.0, 51.0), vec3(53789.0, 54000.0, 73.0), vec3(53789.0, 54000.0, 85.0), vec3(54000.0, 54221.0, 72.0), vec3(54000.0, 54221.0, 84.0), vec3(54000.0, 54461.0, 41.0), vec3(54221.0, 54461.0, 53.0), vec3(54221.0, 54461.0, 73.0), vec3(54221.0, 54461.0, 85.0), vec3(54461.0, 54643.0, 80.0), vec3(54461.0, 54643.0, 92.0), vec3(54461.0, 54682.0, 41.0), vec3(54682.0, 54893.0, 41.0), vec3(54682.0, 54893.0, 53.0), vec3(54682.0, 54893.0, 73.0), vec3(54682.0, 54893.0, 85.0), vec3(54893.0, 55114.0, 41.0), vec3(54893.0, 55114.0, 72.0), vec3(54893.0, 55114.0, 84.0), vec3(55114.0, 55325.0, 41.0), vec3(55114.0, 55325.0, 53.0), vec3(55114.0, 55325.0, 73.0), vec3(55114.0, 55325.0, 85.0), vec3(55325.0, 55546.0, 41.0), vec3(55325.0, 55546.0, 72.0), vec3(55325.0, 55546.0, 84.0), vec3(55546.0, 55757.0, 41.0), vec3(55546.0, 55757.0, 53.0), vec3(55546.0, 55757.0, 65.0), vec3(55546.0, 55757.0, 77.0), vec3(55757.0, 56064.0, 65.0), vec3(55757.0, 56064.0, 77.0), vec3(55757.0, 56218.0, 36.0), vec3(55978.0, 56218.0, 48.0), vec3(56093.0, 56400.0, 73.0), vec3(56093.0, 56400.0, 85.0), vec3(56218.0, 56429.0, 36.0), vec3(56218.0, 56429.0, 48.0), vec3(56429.0, 56621.0, 36.0), vec3(56429.0, 56621.0, 48.0), vec3(56429.0, 56621.0, 72.0), vec3(56429.0, 56621.0, 84.0), vec3(56650.0, 56832.0, 36.0), vec3(56650.0, 56832.0, 48.0), vec3(56650.0, 56832.0, 65.0), vec3(56650.0, 56832.0, 77.0), vec3(56861.0, 57072.0, 36.0), vec3(56861.0, 57072.0, 48.0), vec3(56861.0, 57072.0, 73.0), vec3(56861.0, 57072.0, 85.0), vec3(57072.0, 57101.0, 48.0), vec3(57072.0, 57533.0, 36.0), vec3(57312.0, 57533.0, 48.0), vec3(57072.0, 57533.0, 72.0), vec3(57072.0, 57533.0, 84.0), vec3(57533.0, 57965.0, 37.0), vec3(57744.0, 57965.0, 49.0), vec3(57965.0, 58176.0, 37.0), vec3(57965.0, 58176.0, 49.0), vec3(57533.0, 58176.0, 65.0), vec3(57533.0, 58176.0, 77.0), vec3(58176.0, 58387.0, 37.0), vec3(58176.0, 58387.0, 49.0), vec3(58176.0, 58387.0, 67.0), vec3(58176.0, 58387.0, 79.0), vec3(58387.0, 58608.0, 49.0), vec3(58387.0, 58608.0, 68.0), vec3(58387.0, 58608.0, 80.0), vec3(58387.0, 58819.0, 37.0), vec3(58608.0, 58819.0, 49.0), vec3(58608.0, 58819.0, 65.0), vec3(58608.0, 58819.0, 77.0), vec3(58819.0, 58981.0, 49.0), vec3(58819.0, 59040.0, 37.0), vec3(59040.0, 59251.0, 49.0), vec3(59251.0, 59472.0, 39.0), vec3(58819.0, 59472.0, 72.0), vec3(58819.0, 59472.0, 84.0), vec3(59472.0, 59683.0, 51.0), vec3(59472.0, 59683.0, 65.0), vec3(59472.0, 59683.0, 77.0), vec3(59683.0, 59894.0, 39.0), vec3(59683.0, 59894.0, 65.0), vec3(59683.0, 59894.0, 77.0), vec3(59894.0, 60115.0, 51.0), vec3(59894.0, 60115.0, 67.0), vec3(59894.0, 60115.0, 79.0), vec3(60115.0, 60326.0, 39.0), vec3(60115.0, 60326.0, 68.0), vec3(60115.0, 60326.0, 80.0), vec3(60326.0, 60547.0, 51.0), vec3(60326.0, 60547.0, 65.0), vec3(60326.0, 60547.0, 77.0), vec3(60576.0, 60979.0, 39.0), vec3(60787.0, 60979.0, 51.0), vec3(60576.0, 61190.0, 84.0), vec3(60576.0, 61219.0, 72.0), vec3(61008.0, 61440.0, 41.0), vec3(61219.0, 61440.0, 53.0), vec3(61219.0, 61440.0, 72.0), vec3(61219.0, 61440.0, 84.0), vec3(61440.0, 61651.0, 41.0), vec3(61440.0, 61651.0, 72.0), vec3(61440.0, 61651.0, 84.0), vec3(61651.0, 61776.0, 70.0), vec3(61651.0, 61776.0, 82.0), vec3(61651.0, 61872.0, 41.0), vec3(61651.0, 61872.0, 53.0), vec3(61776.0, 61872.0, 70.0), vec3(61776.0, 61872.0, 82.0), vec3(61872.0, 62083.0, 41.0), vec3(61872.0, 62083.0, 70.0), vec3(61872.0, 62083.0, 82.0), vec3(62112.0, 62208.0, 68.0), vec3(62112.0, 62208.0, 80.0), vec3(62112.0, 62294.0, 53.0), vec3(62208.0, 62294.0, 68.0), vec3(62208.0, 62294.0, 80.0), vec3(62333.0, 62515.0, 41.0), vec3(62333.0, 62515.0, 68.0), vec3(62333.0, 62515.0, 80.0), vec3(62544.0, 62726.0, 53.0), vec3(62544.0, 62726.0, 67.0), vec3(62544.0, 62726.0, 79.0), vec3(62755.0, 62966.0, 36.0), vec3(62755.0, 63062.0, 65.0), vec3(62755.0, 63062.0, 77.0), vec3(62966.0, 63187.0, 36.0), vec3(62966.0, 63187.0, 48.0), vec3(63062.0, 63370.0, 65.0), vec3(63062.0, 63370.0, 77.0), vec3(63187.0, 63398.0, 36.0), vec3(63187.0, 63398.0, 48.0), vec3(63398.0, 63619.0, 36.0), vec3(63398.0, 63619.0, 48.0), vec3(63398.0, 63619.0, 60.0), vec3(63398.0, 63619.0, 72.0), vec3(63619.0, 63830.0, 48.0), vec3(63619.0, 63955.0, 60.0), vec3(63619.0, 63955.0, 72.0), vec3(63619.0, 64042.0, 36.0), vec3(63830.0, 64042.0, 48.0), vec3(64042.0, 64262.0, 36.0), vec3(64042.0, 64262.0, 48.0), vec3(63955.0, 64262.0, 72.0), vec3(64262.0, 64474.0, 36.0), vec3(64262.0, 64474.0, 48.0), vec3(63955.0, 64474.0, 60.0), vec3(64262.0, 64474.0, 72.0), vec3(64262.0, 64474.0, 84.0), vec3(64474.0, 64934.0, 37.0), vec3(64694.0, 64934.0, 49.0), vec3(64934.0, 65146.0, 37.0), vec3(64934.0, 65146.0, 49.0), vec3(64502.0, 65146.0, 65.0), vec3(64502.0, 65146.0, 77.0), vec3(65146.0, 65366.0, 37.0), vec3(65146.0, 65366.0, 49.0), vec3(65146.0, 65366.0, 67.0), vec3(65146.0, 65366.0, 79.0), vec3(65366.0, 65578.0, 37.0), vec3(65366.0, 65578.0, 49.0), vec3(65366.0, 65578.0, 68.0), vec3(65366.0, 65578.0, 80.0), vec3(65578.0, 65798.0, 37.0), vec3(65578.0, 65798.0, 49.0), vec3(65578.0, 65798.0, 65.0), vec3(65578.0, 65798.0, 77.0), vec3(65798.0, 66010.0, 49.0), vec3(65798.0, 66221.0, 37.0), vec3(66010.0, 66221.0, 49.0), vec3(66221.0, 66442.0, 39.0), vec3(66221.0, 66442.0, 51.0), vec3(65798.0, 66442.0, 72.0), vec3(65798.0, 66442.0, 84.0), vec3(66442.0, 66653.0, 39.0), vec3(66442.0, 66653.0, 51.0), vec3(66442.0, 66682.0, 65.0), vec3(66470.0, 66682.0, 77.0), vec3(66653.0, 66845.0, 51.0), vec3(66653.0, 66883.0, 39.0), vec3(66682.0, 66883.0, 65.0), vec3(66682.0, 66883.0, 77.0), vec3(66883.0, 67094.0, 51.0), vec3(66883.0, 67094.0, 67.0), vec3(66883.0, 67094.0, 79.0), vec3(67094.0, 67315.0, 39.0), vec3(67094.0, 67315.0, 68.0), vec3(67094.0, 67315.0, 80.0), vec3(67315.0, 67526.0, 51.0), vec3(67315.0, 67526.0, 65.0), vec3(67344.0, 67526.0, 77.0), vec3(67555.0, 67958.0, 39.0), vec3(67776.0, 67958.0, 51.0), vec3(67555.0, 67958.0, 72.0), vec3(67555.0, 67958.0, 84.0), vec3(67987.0, 68419.0, 41.0), vec3(68208.0, 68419.0, 53.0), vec3(68419.0, 68630.0, 41.0), vec3(67987.0, 68811.0, 84.0), vec3(67987.0, 68870.0, 72.0), vec3(68630.0, 69082.0, 53.0), vec3(68870.0, 69082.0, 68.0), vec3(68870.0, 69302.0, 41.0), vec3(68630.0, 69302.0, 60.0), vec3(69082.0, 69302.0, 65.0), vec3(69082.0, 69514.0, 53.0), vec3(69302.0, 69734.0, 41.0), vec3(69514.0, 69734.0, 53.0), vec3(69302.0, 69734.0, 60.0), vec3(69302.0, 69734.0, 65.0), vec3(69082.0, 69734.0, 68.0), vec3(68870.0, 69734.0, 72.0), vec3(69734.0, 70070.0, 68.0), vec3(69734.0, 70166.0, 36.0), vec3(70166.0, 70598.0, 36.0), vec3(70070.0, 70598.0, 68.0), vec3(70378.0, 70777.0, 65.0), vec3(70598.0, 70838.0, 68.0), vec3(70598.0, 71050.0, 36.0), vec3(70838.0, 71050.0, 68.0), vec3(71059.0, 71318.0, 66.0), vec3(71050.0, 71491.0, 36.0), vec3(71270.0, 71491.0, 68.0), vec3(71491.0, 71702.0, 41.0), vec3(71491.0, 71702.0, 48.0), vec3(71491.0, 71702.0, 65.0), vec3(71491.0, 71702.0, 72.0));\n// const vec3[SOUND_LENGTH] sound = vec3[SOUND_LENGTH](vec3(816.0, 1037.0, 63.0), vec3(816.0, 1037.0, 75.0), vec3(1027.0, 1238.0, 58.0), vec3(1027.0, 1238.0, 70.0), vec3(1229.0, 1450.0, 61.0), vec3(1229.0, 1450.0, 73.0), vec3(1440.0, 1661.0, 56.0), vec3(1440.0, 1661.0, 68.0), vec3(1651.0, 1872.0, 58.0), vec3(1651.0, 1872.0, 70.0), vec3(1862.0, 2054.0, 56.0), vec3(1862.0, 2054.0, 68.0), vec3(2083.0, 2486.0, 51.0), vec3(2083.0, 2486.0, 63.0), vec3(2486.0, 2698.0, 39.0), vec3(2486.0, 2698.0, 51.0), vec3(2486.0, 2698.0, 63.0), vec3(2698.0, 2880.0, 42.0), vec3(2698.0, 2880.0, 54.0), vec3(2698.0, 2880.0, 66.0), vec3(2918.0, 3130.0, 44.0), vec3(2918.0, 3130.0, 56.0), vec3(2918.0, 3130.0, 68.0), vec3(3130.0, 3226.0, 42.0), vec3(3130.0, 3226.0, 54.0), vec3(3130.0, 3226.0, 66.0), vec3(3226.0, 3312.0, 44.0), vec3(3226.0, 3312.0, 56.0), vec3(3226.0, 3312.0, 68.0), vec3(3341.0, 3533.0, 46.0), vec3(3341.0, 3533.0, 58.0), vec3(3341.0, 3533.0, 70.0), vec3(3533.0, 3648.0, 44.0), vec3(3533.0, 3648.0, 56.0), vec3(3533.0, 3648.0, 68.0), vec3(3648.0, 3744.0, 46.0), vec3(3648.0, 3744.0, 58.0), vec3(3648.0, 3744.0, 70.0), vec3(3744.0, 3946.0, 49.0), vec3(3744.0, 3946.0, 61.0), vec3(3744.0, 3946.0, 73.0), vec3(3974.0, 4378.0, 51.0), vec3(3974.0, 4464.0, 75.0), vec3(3974.0, 4560.0, 39.0), vec3(4378.0, 4560.0, 51.0), vec3(3974.0, 4560.0, 54.0), vec3(3974.0, 4560.0, 63.0), vec3(4502.0, 4560.0, 85.0), vec3(4378.0, 4560.0, 87.0), vec3(4589.0, 4992.0, 41.0), vec3(4810.0, 4992.0, 51.0), vec3(4589.0, 4992.0, 53.0), vec3(4589.0, 5021.0, 87.0), vec3(5021.0, 5232.0, 54.0), vec3(5021.0, 5232.0, 87.0), vec3(5021.0, 5424.0, 58.0), vec3(5232.0, 5453.0, 54.0), vec3(5021.0, 5635.0, 42.0), vec3(5453.0, 5635.0, 54.0), vec3(5424.0, 5635.0, 58.0), vec3(5117.0, 5635.0, 85.0), vec3(5232.0, 5635.0, 87.0), vec3(5635.0, 5846.0, 56.0), vec3(5635.0, 5898.0, 87.0), vec3(5635.0, 6048.0, 44.0), vec3(5846.0, 6048.0, 56.0), vec3(5635.0, 6048.0, 60.0), vec3(5635.0, 6048.0, 75.0), vec3(6048.0, 6173.0, 75.0), vec3(6048.0, 6173.0, 80.0), vec3(6048.0, 6269.0, 51.0), vec3(6173.0, 6269.0, 75.0), vec3(6173.0, 6269.0, 80.0), vec3(6269.0, 6298.0, 75.0), vec3(6269.0, 6384.0, 73.0), vec3(6269.0, 6384.0, 78.0), vec3(6269.0, 6384.0, 80.0), vec3(6269.0, 6662.0, 44.0), vec3(6480.0, 6662.0, 51.0), vec3(6269.0, 6662.0, 56.0), vec3(6384.0, 6662.0, 73.0), vec3(6384.0, 6662.0, 75.0), vec3(6384.0, 6662.0, 80.0), vec3(6691.0, 6787.0, 75.0), vec3(6691.0, 6787.0, 80.0), vec3(6787.0, 6998.0, 75.0), vec3(6787.0, 6998.0, 80.0), vec3(6691.0, 7094.0, 44.0), vec3(6912.0, 7094.0, 51.0), vec3(6691.0, 7094.0, 56.0), vec3(7094.0, 7306.0, 44.0), vec3(7094.0, 7306.0, 56.0), vec3(6691.0, 7306.0, 60.0), vec3(6912.0, 7306.0, 73.0), vec3(6998.0, 7306.0, 75.0), vec3(6912.0, 7306.0, 78.0), vec3(6998.0, 7306.0, 80.0), vec3(7306.0, 7738.0, 51.0), vec3(7306.0, 7738.0, 75.0), vec3(7306.0, 7738.0, 87.0), vec3(7306.0, 7864.0, 39.0), vec3(7306.0, 7864.0, 54.0), vec3(7738.0, 7864.0, 75.0), vec3(7738.0, 7864.0, 87.0), vec3(7738.0, 7939.0, 51.0), vec3(7834.0, 7939.0, 85.0), vec3(7968.0, 8150.0, 53.0), vec3(7968.0, 8362.0, 41.0), vec3(8179.0, 8362.0, 51.0), vec3(7968.0, 8362.0, 87.0), vec3(8362.0, 8486.0, 87.0), vec3(8362.0, 8582.0, 54.0), vec3(8486.0, 8582.0, 85.0), vec3(8582.0, 8794.0, 54.0), vec3(8362.0, 8794.0, 58.0), vec3(8362.0, 8976.0, 42.0), vec3(8794.0, 8976.0, 54.0), vec3(8794.0, 8976.0, 58.0), vec3(8582.0, 8976.0, 87.0), vec3(9014.0, 9226.0, 56.0), vec3(9014.0, 9408.0, 44.0), vec3(9226.0, 9408.0, 56.0), vec3(9014.0, 9408.0, 60.0), vec3(9014.0, 9408.0, 78.0), vec3(9437.0, 9533.0, 75.0), vec3(9437.0, 9533.0, 80.0), vec3(9437.0, 9629.0, 51.0), vec3(9533.0, 9629.0, 75.0), vec3(9533.0, 9629.0, 80.0), vec3(9629.0, 9744.0, 73.0), vec3(9629.0, 9744.0, 78.0), vec3(9629.0, 10032.0, 44.0), vec3(9629.0, 10032.0, 56.0), vec3(9744.0, 10032.0, 80.0), vec3(9744.0, 10061.0, 75.0), vec3(10061.0, 10157.0, 75.0), vec3(10061.0, 10157.0, 78.0), vec3(10061.0, 10157.0, 82.0), vec3(9850.0, 10253.0, 51.0), vec3(10157.0, 10282.0, 75.0), vec3(10157.0, 10282.0, 80.0), vec3(10061.0, 10464.0, 44.0), vec3(10061.0, 10464.0, 56.0), vec3(10464.0, 10675.0, 56.0), vec3(10253.0, 10675.0, 78.0), vec3(10368.0, 10800.0, 80.0), vec3(10464.0, 10867.0, 44.0), vec3(10253.0, 10867.0, 51.0), vec3(10675.0, 10867.0, 56.0), vec3(10061.0, 10867.0, 60.0), vec3(10253.0, 10867.0, 73.0), vec3(10368.0, 10867.0, 75.0), vec3(10675.0, 10867.0, 78.0), vec3(10800.0, 10867.0, 80.0), vec3(10896.0, 11328.0, 59.0), vec3(10896.0, 11510.0, 47.0), vec3(11107.0, 11510.0, 54.0), vec3(11328.0, 11510.0, 59.0), vec3(10896.0, 11510.0, 70.0), vec3(11328.0, 11510.0, 78.0), vec3(11107.0, 11510.0, 80.0), vec3(10896.0, 11510.0, 82.0), vec3(11539.0, 11796.0, 80.0), vec3(11539.0, 12163.0, 58.0), vec3(11539.0, 12346.0, 46.0), vec3(11952.0, 12346.0, 53.0), vec3(12163.0, 12346.0, 58.0), vec3(11539.0, 12346.0, 61.0), vec3(11539.0, 12346.0, 68.0), vec3(12163.0, 12346.0, 77.0), vec3(11952.0, 12346.0, 85.0), vec3(12384.0, 12778.0, 57.0), vec3(12384.0, 12998.0, 60.0), vec3(12778.0, 12998.0, 87.0), vec3(12384.0, 13210.0, 63.0), vec3(12384.0, 13392.0, 45.0), vec3(12778.0, 13392.0, 57.0), vec3(12998.0, 13392.0, 60.0), vec3(13210.0, 13392.0, 63.0), vec3(12384.0, 13392.0, 66.0), vec3(12902.0, 13392.0, 85.0), vec3(12998.0, 13392.0, 87.0), vec3(13421.0, 13762.0, 82.0), vec3(13421.0, 13843.0, 46.0), vec3(13421.0, 13843.0, 58.0), vec3(13421.0, 13843.0, 73.0), vec3(13421.0, 13843.0, 85.0), vec3(13843.0, 14054.0, 85.0), vec3(13843.0, 14275.0, 46.0), vec3(13642.0, 14275.0, 53.0), vec3(13843.0, 14275.0, 58.0), vec3(13843.0, 14275.0, 68.0), vec3(13843.0, 14275.0, 73.0), vec3(14054.0, 14275.0, 85.0), vec3(14150.0, 14275.0, 86.0), vec3(14275.0, 14362.0, 51.0), vec3(14275.0, 14362.0, 63.0), vec3(14362.0, 14486.0, 51.0), vec3(14362.0, 14486.0, 63.0), vec3(14486.0, 14582.0, 51.0), vec3(14486.0, 14582.0, 63.0), vec3(14582.0, 14669.0, 51.0), vec3(14582.0, 14669.0, 63.0), vec3(14669.0, 15101.0, 51.0), vec3(14669.0, 15101.0, 63.0), vec3(14890.0, 15322.0, 61.0), vec3(15101.0, 15408.0, 63.0), vec3(15101.0, 15533.0, 51.0), vec3(14275.0, 15728.0, 39.0), vec3(15533.0, 15728.0, 51.0), vec3(15408.0, 15728.0, 63.0), vec3(14275.0, 15728.0, 87.0), vec3(15322.0, 15734.0, 61.0), vec3(15734.0, 15946.0, 49.0), vec3(15734.0, 16157.0, 61.0), vec3(15946.0, 16349.0, 49.0), vec3(15734.0, 16349.0, 63.0), vec3(16157.0, 16560.0, 61.0), vec3(16560.0, 16685.0, 61.0), vec3(15734.0, 16771.0, 37.0), vec3(16349.0, 16771.0, 49.0), vec3(16685.0, 16771.0, 61.0), vec3(16349.0, 16771.0, 63.0), vec3(15734.0, 16771.0, 65.0), vec3(15734.0, 16771.0, 68.0), vec3(15734.0, 16771.0, 71.0), vec3(16771.0, 16992.0, 66.0), vec3(16771.0, 17203.0, 54.0), vec3(17203.0, 17414.0, 85.0), vec3(16771.0, 17606.0, 42.0), vec3(17203.0, 17606.0, 54.0), vec3(16771.0, 17606.0, 63.0), vec3(16992.0, 17606.0, 66.0), vec3(16771.0, 17606.0, 70.0), vec3(16992.0, 17606.0, 78.0), vec3(17299.0, 17606.0, 82.0), vec3(17414.0, 17606.0, 85.0), vec3(17510.0, 17606.0, 86.0), vec3(17078.0, 17606.0, 87.0), vec3(16992.0, 17606.0, 90.0), vec3(17635.0, 17731.0, 63.0), vec3(17731.0, 17827.0, 63.0), vec3(17827.0, 17942.0, 63.0), vec3(17635.0, 18038.0, 47.0), vec3(17942.0, 18038.0, 63.0), vec3(18038.0, 18470.0, 47.0), vec3(18038.0, 18470.0, 63.0), vec3(18250.0, 18682.0, 61.0), vec3(18470.0, 18778.0, 63.0), vec3(18470.0, 18864.0, 47.0), vec3(17635.0, 19085.0, 35.0), vec3(18864.0, 19085.0, 47.0), vec3(17635.0, 19085.0, 59.0), vec3(18682.0, 19085.0, 61.0), vec3(18778.0, 19085.0, 63.0), vec3(19085.0, 19507.0, 62.0), vec3(19085.0, 19507.0, 65.0), vec3(19085.0, 19660.0, 58.0), vec3(19507.0, 19660.0, 94.0), vec3(19296.0, 19728.0, 46.0), vec3(19507.0, 19939.0, 62.0), vec3(19507.0, 19939.0, 65.0), vec3(19507.0, 19939.0, 82.0), vec3(19728.0, 20150.0, 46.0), vec3(19085.0, 20554.0, 34.0), vec3(20150.0, 20554.0, 46.0), vec3(19939.0, 20554.0, 63.0), vec3(19939.0, 20554.0, 66.0), vec3(20371.0, 20554.0, 68.0), vec3(19939.0, 20554.0, 80.0), vec3(19939.0, 20554.0, 92.0), vec3(20582.0, 20765.0, 82.0), vec3(20582.0, 20765.0, 94.0), vec3(20371.0, 20861.0, 89.0), vec3(20582.0, 20986.0, 37.0), vec3(20582.0, 20986.0, 49.0), vec3(20371.0, 20986.0, 65.0), vec3(20371.0, 20986.0, 77.0), vec3(20890.0, 20986.0, 89.0), vec3(20765.0, 20986.0, 90.0), vec3(20678.0, 20986.0, 92.0), vec3(20986.0, 21197.0, 63.0), vec3(20986.0, 21408.0, 39.0), vec3(20986.0, 21408.0, 51.0), vec3(21197.0, 21408.0, 63.0), vec3(20986.0, 21626.0, 75.0), vec3(20986.0, 21626.0, 87.0), vec3(21408.0, 21830.0, 51.0), vec3(21408.0, 21830.0, 63.0), vec3(21830.0, 22138.0, 63.0), vec3(21830.0, 22262.0, 51.0), vec3(21408.0, 22445.0, 39.0), vec3(22262.0, 22445.0, 51.0), vec3(22042.0, 22445.0, 61.0), vec3(22138.0, 22445.0, 63.0), vec3(20986.0, 22445.0, 66.0), vec3(20986.0, 22445.0, 70.0), vec3(22474.0, 22685.0, 49.0), vec3(22474.0, 22877.0, 63.0), vec3(22877.0, 22992.0, 63.0), vec3(22685.0, 23088.0, 49.0), vec3(22474.0, 23299.0, 68.0), vec3(22474.0, 23520.0, 37.0), vec3(23088.0, 23520.0, 49.0), vec3(22474.0, 23520.0, 61.0), vec3(22992.0, 23520.0, 63.0), vec3(22474.0, 23520.0, 65.0), vec3(23299.0, 23520.0, 68.0), vec3(23088.0, 23520.0, 70.0), vec3(22474.0, 23520.0, 71.0), vec3(23520.0, 23592.0, 61.0), vec3(23520.0, 23592.0, 66.0), vec3(23520.0, 23731.0, 70.0), vec3(23520.0, 23942.0, 54.0), vec3(23731.0, 24154.0, 70.0), vec3(23520.0, 24394.0, 42.0), vec3(23942.0, 24394.0, 54.0), vec3(24154.0, 24394.0, 70.0), vec3(23837.0, 24394.0, 78.0), vec3(23520.0, 24394.0, 82.0), vec3(24365.0, 24778.0, 47.0), vec3(24365.0, 24989.0, 63.0), vec3(24778.0, 25200.0, 47.0), vec3(24365.0, 25558.0, 59.0), vec3(24778.0, 25558.0, 66.0), vec3(24365.0, 25558.0, 68.0), vec3(24778.0, 25558.0, 70.0), vec3(25200.0, 25613.0, 47.0), vec3(25613.0, 25824.0, 47.0), vec3(24989.0, 25824.0, 63.0), vec3(25200.0, 25824.0, 75.0), vec3(25411.0, 25824.0, 78.0), vec3(25824.0, 26256.0, 34.0), vec3(25824.0, 26256.0, 46.0), vec3(25824.0, 26256.0, 58.0), vec3(25824.0, 26256.0, 62.0), vec3(25824.0, 26256.0, 74.0), vec3(25824.0, 26256.0, 86.0), vec3(26256.0, 26352.0, 74.0), vec3(26256.0, 26352.0, 86.0), vec3(26256.0, 26438.0, 41.0), vec3(26352.0, 26438.0, 75.0), vec3(26352.0, 26438.0, 87.0), vec3(26438.0, 26659.0, 44.0), vec3(26659.0, 26870.0, 46.0), vec3(26870.0, 27082.0, 46.0), vec3(26438.0, 27082.0, 77.0), vec3(26438.0, 27082.0, 89.0), vec3(27082.0, 27178.0, 51.0), vec3(27082.0, 27178.0, 86.0), vec3(27178.0, 27302.0, 49.0), vec3(27178.0, 27302.0, 84.0), vec3(27302.0, 27485.0, 46.0), vec3(27302.0, 27485.0, 82.0), vec3(27514.0, 27524.0, 49.0), vec3(27514.0, 27590.0, 85.0), vec3(27619.0, 27686.0, 41.0), vec3(27619.0, 27686.0, 86.0), vec3(27715.0, 27811.0, 51.0), vec3(27715.0, 27811.0, 63.0), vec3(27811.0, 27926.0, 51.0), vec3(27811.0, 27926.0, 63.0), vec3(27926.0, 28022.0, 51.0), vec3(27926.0, 28022.0, 63.0), vec3(28022.0, 28118.0, 51.0), vec3(28022.0, 28118.0, 63.0), vec3(28118.0, 28330.0, 63.0), vec3(27715.0, 28330.0, 87.0), vec3(28118.0, 28541.0, 51.0), vec3(28358.0, 28541.0, 61.0), vec3(28541.0, 28762.0, 63.0), vec3(28762.0, 28848.0, 61.0), vec3(28541.0, 28973.0, 51.0), vec3(27715.0, 29155.0, 39.0), vec3(28973.0, 29155.0, 51.0), vec3(28886.0, 29155.0, 63.0), vec3(29194.0, 29405.0, 49.0), vec3(29194.0, 29490.0, 61.0), vec3(29194.0, 29490.0, 65.0), vec3(29194.0, 29490.0, 68.0), vec3(29405.0, 29818.0, 49.0), vec3(29194.0, 29818.0, 63.0), vec3(29606.0, 30038.0, 61.0), vec3(30038.0, 30125.0, 61.0), vec3(29194.0, 30221.0, 37.0), vec3(29818.0, 30221.0, 49.0), vec3(30125.0, 30221.0, 61.0), vec3(29818.0, 30221.0, 63.0), vec3(29194.0, 30221.0, 71.0), vec3(30250.0, 30432.0, 66.0), vec3(30250.0, 30653.0, 54.0), vec3(30557.0, 30864.0, 85.0), vec3(30250.0, 31046.0, 42.0), vec3(30653.0, 31046.0, 54.0), vec3(30250.0, 31046.0, 63.0), vec3(30432.0, 31046.0, 66.0), vec3(30250.0, 31046.0, 70.0), vec3(30432.0, 31046.0, 82.0), vec3(30864.0, 31046.0, 85.0), vec3(30960.0, 31046.0, 86.0), vec3(31075.0, 31171.0, 63.0), vec3(31171.0, 31296.0, 63.0), vec3(31296.0, 31392.0, 63.0), vec3(31075.0, 31507.0, 47.0), vec3(31392.0, 31507.0, 63.0), vec3(31507.0, 31930.0, 47.0), vec3(31507.0, 31930.0, 63.0), vec3(31718.0, 32150.0, 61.0), vec3(31930.0, 32237.0, 63.0), vec3(31930.0, 32333.0, 47.0), vec3(31075.0, 32544.0, 35.0), vec3(32333.0, 32544.0, 47.0), vec3(31075.0, 32544.0, 59.0), vec3(32150.0, 32544.0, 61.0), vec3(32237.0, 32544.0, 63.0), vec3(32765.0, 33187.0, 46.0), vec3(32544.0, 33187.0, 62.0), vec3(32544.0, 33187.0, 65.0), vec3(32544.0, 33408.0, 34.0), vec3(33187.0, 33408.0, 46.0), vec3(32544.0, 33408.0, 58.0), vec3(33187.0, 33408.0, 62.0), vec3(33187.0, 33408.0, 65.0), vec3(32976.0, 33408.0, 82.0), vec3(33408.0, 33422.0, 35.0), vec3(33408.0, 33422.0, 47.0), vec3(33408.0, 33782.0, 63.0), vec3(33408.0, 33782.0, 66.0), vec3(33379.0, 33782.0, 80.0), vec3(33600.0, 34032.0, 46.0), vec3(33811.0, 34032.0, 65.0), vec3(33811.0, 34032.0, 68.0), vec3(33811.0, 34032.0, 77.0), vec3(34032.0, 34426.0, 37.0), vec3(34032.0, 34426.0, 49.0), vec3(34032.0, 34426.0, 65.0), vec3(34032.0, 34426.0, 68.0), vec3(34032.0, 34426.0, 77.0), vec3(34426.0, 34646.0, 51.0), vec3(34426.0, 34646.0, 63.0), vec3(34426.0, 34858.0, 39.0), vec3(34646.0, 34858.0, 51.0), vec3(34646.0, 34858.0, 63.0), vec3(34858.0, 35069.0, 51.0), vec3(34858.0, 35290.0, 39.0), vec3(35069.0, 35290.0, 51.0), vec3(34858.0, 35290.0, 63.0), vec3(34426.0, 35388.0, 66.0), vec3(34426.0, 35388.0, 75.0), vec3(35069.0, 35491.0, 61.0), vec3(35290.0, 35587.0, 63.0), vec3(35290.0, 35712.0, 51.0), vec3(35290.0, 35894.0, 39.0), vec3(35712.0, 35894.0, 51.0), vec3(35491.0, 35894.0, 61.0), vec3(35587.0, 35894.0, 63.0), vec3(35894.0, 35923.0, 49.0), vec3(35894.0, 36326.0, 63.0), vec3(36106.0, 36538.0, 49.0), vec3(35894.0, 36758.0, 68.0), vec3(35894.0, 36941.0, 37.0), vec3(36538.0, 36941.0, 49.0), vec3(35894.0, 36941.0, 61.0), vec3(36326.0, 36941.0, 63.0), vec3(35894.0, 36941.0, 65.0), vec3(36758.0, 36941.0, 68.0), vec3(35894.0, 36941.0, 71.0), vec3(36326.0, 36941.0, 80.0), vec3(36538.0, 36970.0, 70.0), vec3(36970.0, 37181.0, 70.0), vec3(37066.0, 37354.0, 68.0), vec3(36970.0, 37354.0, 82.0), vec3(36970.0, 37392.0, 54.0), vec3(37181.0, 37603.0, 70.0), vec3(37603.0, 37699.0, 70.0), vec3(36970.0, 37786.0, 42.0), vec3(37392.0, 37786.0, 54.0), vec3(37699.0, 37786.0, 70.0), vec3(37814.0, 37853.0, 63.0), vec3(38006.0, 38122.0, 70.0), vec3(37814.0, 38218.0, 47.0), vec3(37814.0, 38218.0, 66.0), vec3(38122.0, 38218.0, 70.0), vec3(37814.0, 38218.0, 78.0), vec3(38218.0, 38429.0, 70.0), vec3(38429.0, 38525.0, 66.0), vec3(38218.0, 38650.0, 47.0), vec3(38525.0, 38650.0, 66.0), vec3(38650.0, 39072.0, 47.0), vec3(38861.0, 39072.0, 68.0), vec3(38218.0, 39168.0, 78.0), vec3(39072.0, 39264.0, 68.0), vec3(39072.0, 39293.0, 47.0), vec3(39072.0, 39293.0, 70.0), vec3(37814.0, 39320.0, 35.0), vec3(39293.0, 39320.0, 47.0), vec3(37814.0, 39320.0, 59.0), vec3(38650.0, 39320.0, 66.0), vec3(39293.0, 39320.0, 70.0), vec3(37814.0, 39320.0, 73.0), vec3(39168.0, 39320.0, 78.0), vec3(39072.0, 39320.0, 80.0), vec3(38957.0, 39320.0, 82.0), vec3(39494.0, 39706.0, 46.0), vec3(39264.0, 39706.0, 68.0), vec3(39706.0, 39888.0, 41.0), vec3(39293.0, 39888.0, 77.0), vec3(39706.0, 39917.0, 68.0), vec3(39706.0, 39917.0, 82.0), vec3(39917.0, 40109.0, 44.0), vec3(39917.0, 40109.0, 70.0), vec3(39917.0, 40320.0, 86.0), vec3(40109.0, 40531.0, 46.0), vec3(40109.0, 40531.0, 70.0), vec3(40320.0, 40531.0, 77.0), vec3(40320.0, 40531.0, 89.0), vec3(40531.0, 40752.0, 46.0), vec3(40531.0, 40752.0, 78.0), vec3(40531.0, 40752.0, 90.0), vec3(40752.0, 41146.0, 50.0), vec3(40963.0, 41146.0, 53.0), vec3(40531.0, 41146.0, 68.0), vec3(40752.0, 41146.0, 82.0), vec3(40752.0, 41146.0, 94.0), vec3(41184.0, 41286.0, 78.0), vec3(41184.0, 41286.0, 90.0), vec3(41184.0, 41587.0, 47.0), vec3(41376.0, 41587.0, 59.0), vec3(41376.0, 41587.0, 63.0), vec3(41376.0, 41587.0, 68.0), vec3(41376.0, 41587.0, 71.0), vec3(41587.0, 41990.0, 47.0), vec3(41587.0, 41990.0, 59.0), vec3(41587.0, 41990.0, 63.0), vec3(41587.0, 41990.0, 66.0), vec3(41587.0, 41990.0, 71.0), vec3(41587.0, 41990.0, 78.0), vec3(41184.0, 42019.0, 35.0), vec3(42019.0, 42422.0, 34.0), vec3(42019.0, 42422.0, 46.0), vec3(42019.0, 42422.0, 58.0), vec3(42019.0, 42422.0, 62.0), vec3(42019.0, 42422.0, 65.0), vec3(42019.0, 42422.0, 70.0), vec3(42019.0, 42422.0, 77.0), vec3(42422.0, 42634.0, 34.0), vec3(42422.0, 42634.0, 46.0), vec3(42422.0, 42634.0, 58.0), vec3(42422.0, 42634.0, 62.0), vec3(42422.0, 42634.0, 65.0), vec3(42422.0, 42634.0, 70.0), vec3(42422.0, 42634.0, 77.0), vec3(42634.0, 42854.0, 51.0), vec3(42854.0, 43066.0, 51.0), vec3(42634.0, 43066.0, 66.0), vec3(42634.0, 43066.0, 78.0), vec3(42634.0, 43252.0, 63.0), vec3(43066.0, 43267.0, 51.0), vec3(43066.0, 43267.0, 66.0), vec3(43066.0, 43267.0, 70.0), vec3(43267.0, 43670.0, 51.0), vec3(43267.0, 43910.0, 66.0), vec3(43066.0, 43910.0, 78.0), vec3(42634.0, 44102.0, 39.0), vec3(43670.0, 44102.0, 51.0), vec3(43699.0, 44102.0, 63.0), vec3(43910.0, 44102.0, 66.0), vec3(43267.0, 44102.0, 70.0), vec3(43699.0, 44102.0, 75.0), vec3(43910.0, 44102.0, 78.0), vec3(44102.0, 44534.0, 37.0), vec3(44102.0, 44534.0, 49.0), vec3(44102.0, 44746.0, 66.0), vec3(44102.0, 44746.0, 78.0), vec3(44534.0, 44957.0, 56.0), vec3(44746.0, 44957.0, 66.0), vec3(44746.0, 44957.0, 78.0), vec3(44746.0, 45218.0, 75.0), vec3(44842.0, 45218.0, 77.0), vec3(44957.0, 45218.0, 78.0), vec3(44746.0, 45218.0, 87.0), vec3(44842.0, 45218.0, 89.0), vec3(44957.0, 45218.0, 90.0), vec3(44957.0, 45264.0, 66.0), vec3(44534.0, 45360.0, 44.0), vec3(44957.0, 45360.0, 56.0), vec3(44534.0, 45360.0, 59.0), vec3(45264.0, 45360.0, 66.0), vec3(45360.0, 45792.0, 49.0), vec3(45360.0, 46003.0, 37.0), vec3(45792.0, 46003.0, 49.0), vec3(45792.0, 46003.0, 61.0), vec3(45571.0, 46003.0, 63.0), vec3(45360.0, 46003.0, 65.0), vec3(45360.0, 46003.0, 68.0), vec3(45360.0, 46003.0, 80.0), vec3(46003.0, 46214.0, 54.0), vec3(46003.0, 46406.0, 71.0), vec3(46003.0, 46406.0, 83.0), vec3(46214.0, 46618.0, 54.0), vec3(46003.0, 46618.0, 70.0), vec3(46406.0, 46646.0, 71.0), vec3(46406.0, 46646.0, 83.0), vec3(46003.0, 47050.0, 42.0), vec3(46618.0, 47050.0, 54.0), vec3(46618.0, 47184.0, 82.0), vec3(47050.0, 47261.0, 42.0), vec3(47050.0, 47261.0, 54.0), vec3(47050.0, 47261.0, 66.0), vec3(47261.0, 47472.0, 44.0), vec3(47261.0, 47472.0, 56.0), vec3(47261.0, 47472.0, 68.0), vec3(46618.0, 47472.0, 70.0), vec3(47472.0, 47875.0, 46.0), vec3(47472.0, 47875.0, 58.0), vec3(47472.0, 47875.0, 70.0), vec3(47904.0, 48115.0, 68.0), vec3(47904.0, 48307.0, 32.0), vec3(47904.0, 48307.0, 44.0), vec3(48115.0, 48307.0, 68.0), vec3(48307.0, 48730.0, 32.0), vec3(48307.0, 48730.0, 44.0), vec3(47904.0, 48730.0, 56.0), vec3(47904.0, 48730.0, 59.0), vec3(48307.0, 48730.0, 68.0), vec3(47904.0, 48730.0, 80.0), vec3(48730.0, 48854.0, 46.0), vec3(48730.0, 48950.0, 34.0), vec3(48854.0, 48950.0, 46.0), vec3(48730.0, 48950.0, 58.0), vec3(48950.0, 49037.0, 47.0), vec3(49037.0, 49150.0, 49.0), vec3(48730.0, 49150.0, 74.0), vec3(48730.0, 49150.0, 82.0), vec3(48730.0, 49152.0, 68.0), vec3(49152.0, 49363.0, 50.0), vec3(49152.0, 49363.0, 68.0), vec3(48950.0, 49363.0, 70.0), vec3(49363.0, 49766.0, 39.0), vec3(49363.0, 49766.0, 51.0), vec3(49363.0, 49766.0, 63.0), vec3(49363.0, 49766.0, 66.0), vec3(49363.0, 49766.0, 68.0), vec3(49363.0, 49766.0, 75.0), vec3(49363.0, 49795.0, 70.0), vec3(49795.0, 50198.0, 38.0), vec3(49795.0, 50198.0, 50.0), vec3(49795.0, 50198.0, 66.0), vec3(49795.0, 50198.0, 70.0), vec3(50198.0, 50630.0, 37.0), vec3(50198.0, 50630.0, 49.0), vec3(50198.0, 50630.0, 66.0), vec3(50198.0, 50630.0, 70.0), vec3(50198.0, 50630.0, 75.0), vec3(50630.0, 51024.0, 36.0), vec3(50630.0, 51024.0, 48.0), vec3(50630.0, 51024.0, 65.0), vec3(50630.0, 51024.0, 70.0), vec3(50630.0, 51024.0, 77.0), vec3(51475.0, 51686.0, 51.0), vec3(51475.0, 51686.0, 77.0), vec3(51475.0, 51686.0, 89.0), vec3(51053.0, 51907.0, 47.0), vec3(51686.0, 52118.0, 54.0), vec3(52118.0, 52301.0, 54.0), vec3(51053.0, 52301.0, 63.0), vec3(51053.0, 52301.0, 66.0), vec3(51053.0, 52301.0, 71.0), vec3(51686.0, 52301.0, 75.0), vec3(51053.0, 52301.0, 78.0), vec3(51686.0, 52301.0, 87.0), vec3(51907.0, 52330.0, 47.0), vec3(52330.0, 52522.0, 51.0), vec3(51053.0, 52733.0, 35.0), vec3(52522.0, 52733.0, 47.0), vec3(52426.0, 52733.0, 49.0), vec3(52522.0, 52733.0, 63.0), vec3(52301.0, 52733.0, 66.0), vec3(52214.0, 53083.0, 53.0), vec3(52733.0, 53083.0, 58.0), vec3(52733.0, 53146.0, 34.0), vec3(52733.0, 53146.0, 46.0), vec3(52733.0, 53146.0, 62.0), vec3(52733.0, 53146.0, 70.0), vec3(53146.0, 53357.0, 46.0), vec3(53146.0, 53578.0, 34.0), vec3(53357.0, 53578.0, 46.0), vec3(53146.0, 53578.0, 62.0), vec3(53357.0, 53578.0, 65.0), vec3(53578.0, 53789.0, 44.0), vec3(53578.0, 53789.0, 65.0), vec3(53789.0, 53971.0, 46.0), vec3(53789.0, 53971.0, 66.0), vec3(53146.0, 53971.0, 70.0), vec3(54000.0, 54403.0, 32.0), vec3(54000.0, 54403.0, 44.0), vec3(54000.0, 54403.0, 68.0), vec3(54403.0, 54806.0, 34.0), vec3(54403.0, 54806.0, 46.0), vec3(54403.0, 54806.0, 70.0), vec3(54835.0, 55049.0, 71.0), vec3(54835.0, 55049.0, 83.0), vec3(54835.0, 55459.0, 46.0), vec3(55248.0, 55459.0, 53.0), vec3(55248.0, 55459.0, 71.0), vec3(55248.0, 55459.0, 83.0), vec3(55459.0, 55670.0, 34.0), vec3(55459.0, 55670.0, 46.0), vec3(55459.0, 55670.0, 58.0), vec3(55459.0, 55670.0, 70.0), vec3(55459.0, 55670.0, 82.0), vec3(55670.0, 56074.0, 39.0), vec3(55670.0, 56074.0, 51.0), vec3(55670.0, 56074.0, 61.0), vec3(55670.0, 56074.0, 65.0), vec3(55670.0, 56074.0, 68.0), vec3(55670.0, 56074.0, 70.0), vec3(56102.0, 56506.0, 37.0), vec3(56102.0, 56506.0, 49.0), vec3(56102.0, 56506.0, 53.0), vec3(56102.0, 56506.0, 61.0), vec3(56102.0, 56506.0, 65.0), vec3(56102.0, 56506.0, 68.0), vec3(56102.0, 56506.0, 72.0), vec3(56506.0, 56717.0, 37.0), vec3(56506.0, 56717.0, 44.0), vec3(56506.0, 56717.0, 72.0), vec3(56717.0, 56928.0, 37.0), vec3(56717.0, 56928.0, 49.0), vec3(56717.0, 56928.0, 53.0), vec3(56717.0, 56928.0, 72.0), vec3(56928.0, 57130.0, 37.0), vec3(56928.0, 57130.0, 44.0), vec3(56928.0, 57130.0, 49.0), vec3(56928.0, 57130.0, 72.0), vec3(57158.0, 57341.0, 36.0), vec3(57158.0, 57341.0, 48.0), vec3(57158.0, 57341.0, 70.0), vec3(57158.0, 57341.0, 72.0), vec3(57158.0, 57341.0, 82.0), vec3(57370.0, 57398.0, 55.0), vec3(57370.0, 57552.0, 43.0), vec3(57158.0, 57552.0, 60.0), vec3(57370.0, 57552.0, 68.0), vec3(57370.0, 57552.0, 75.0), vec3(57370.0, 57552.0, 80.0), vec3(57370.0, 57552.0, 87.0), vec3(57590.0, 57773.0, 48.0), vec3(57590.0, 57773.0, 51.0), vec3(57552.0, 57773.0, 80.0), vec3(57552.0, 57773.0, 92.0), vec3(57773.0, 57984.0, 43.0), vec3(57773.0, 57984.0, 55.0), vec3(57773.0, 57984.0, 67.0), vec3(57773.0, 57984.0, 77.0), vec3(57773.0, 57984.0, 89.0), vec3(57984.0, 58195.0, 41.0), vec3(57984.0, 58195.0, 53.0), vec3(57984.0, 58195.0, 65.0), vec3(57984.0, 58195.0, 68.0), vec3(57984.0, 58195.0, 72.0), vec3(58195.0, 58416.0, 48.0), vec3(58195.0, 58416.0, 60.0), vec3(58195.0, 58416.0, 68.0), vec3(58195.0, 58416.0, 72.0), vec3(58195.0, 58416.0, 84.0), vec3(58416.0, 58598.0, 53.0), vec3(58416.0, 58598.0, 56.0), vec3(58416.0, 58598.0, 70.0), vec3(58416.0, 58598.0, 75.0), vec3(58416.0, 58598.0, 82.0), vec3(58627.0, 58810.0, 48.0), vec3(58627.0, 58810.0, 60.0), vec3(58627.0, 58810.0, 68.0), vec3(58627.0, 58810.0, 72.0), vec3(58627.0, 58810.0, 84.0), vec3(58848.0, 58934.0, 84.0), vec3(58934.0, 59030.0, 82.0), vec3(58810.0, 59242.0, 65.0), vec3(59030.0, 59242.0, 80.0), vec3(58848.0, 59270.0, 50.0), vec3(58848.0, 59424.0, 38.0), vec3(59030.0, 59424.0, 45.0), vec3(59270.0, 59424.0, 50.0), vec3(59270.0, 59424.0, 53.0), vec3(59242.0, 59424.0, 65.0), vec3(59242.0, 59462.0, 80.0), vec3(59462.0, 59674.0, 45.0), vec3(59674.0, 59702.0, 58.0), vec3(59674.0, 59856.0, 34.0), vec3(59674.0, 59856.0, 46.0), vec3(59674.0, 59856.0, 62.0), vec3(59462.0, 59856.0, 68.0), vec3(59462.0, 59856.0, 80.0), vec3(59462.0, 59856.0, 84.0), vec3(59885.0, 60067.0, 41.0), vec3(59856.0, 60067.0, 68.0), vec3(59856.0, 60067.0, 84.0), vec3(59981.0, 60067.0, 89.0), vec3(60106.0, 60288.0, 46.0), vec3(60106.0, 60288.0, 50.0), vec3(60067.0, 60288.0, 68.0), vec3(60106.0, 60288.0, 80.0), vec3(60288.0, 60499.0, 41.0), vec3(60288.0, 60499.0, 68.0), vec3(60288.0, 60499.0, 80.0), vec3(60499.0, 60720.0, 39.0), vec3(60499.0, 60720.0, 51.0), vec3(60499.0, 60720.0, 67.0), vec3(60499.0, 60720.0, 79.0), vec3(60720.0, 60931.0, 46.0), vec3(60720.0, 60931.0, 65.0), vec3(60720.0, 60931.0, 77.0), vec3(60931.0, 60947.0, 79.0), vec3(60931.0, 61114.0, 39.0), vec3(60931.0, 61114.0, 51.0), vec3(60931.0, 61114.0, 67.0), vec3(61142.0, 61546.0, 44.0), vec3(61142.0, 61546.0, 56.0), vec3(61142.0, 61546.0, 63.0), vec3(61142.0, 61546.0, 68.0), vec3(61142.0, 61546.0, 72.0), vec3(61574.0, 61968.0, 44.0), vec3(61574.0, 61968.0, 56.0), vec3(61574.0, 61968.0, 65.0), vec3(61574.0, 61968.0, 68.0), vec3(61574.0, 61968.0, 72.0), vec3(61574.0, 61968.0, 77.0), vec3(61997.0, 62400.0, 42.0), vec3(61997.0, 62400.0, 54.0), vec3(61968.0, 62400.0, 68.0), vec3(61968.0, 62400.0, 72.0), vec3(62400.0, 62832.0, 42.0), vec3(62400.0, 62832.0, 54.0), vec3(62400.0, 62832.0, 68.0), vec3(62400.0, 62832.0, 72.0), vec3(62400.0, 62832.0, 75.0), vec3(62832.0, 62913.0, 73.0), vec3(62832.0, 63456.0, 49.0), vec3(62832.0, 63456.0, 68.0), vec3(62832.0, 63667.0, 37.0), vec3(63235.0, 63667.0, 44.0), vec3(63456.0, 63667.0, 68.0), vec3(63456.0, 63821.0, 49.0), vec3(63456.0, 63821.0, 53.0), vec3(62832.0, 63821.0, 61.0), vec3(62832.0, 63821.0, 65.0), vec3(63024.0, 63821.0, 80.0), vec3(62928.0, 63821.0, 91.0), vec3(63024.0, 63821.0, 92.0), vec3(63667.0, 63850.0, 37.0), vec3(63667.0, 63850.0, 44.0), vec3(63667.0, 63850.0, 68.0), vec3(63667.0, 63850.0, 72.0), vec3(63667.0, 63850.0, 84.0), vec3(63878.0, 64282.0, 36.0), vec3(63878.0, 64282.0, 48.0), vec3(63878.0, 64282.0, 67.0), vec3(64070.0, 64310.0, 43.0), vec3(64070.0, 64310.0, 65.0), vec3(63878.0, 64310.0, 70.0), vec3(63878.0, 64310.0, 79.0), vec3(64282.0, 64464.0, 36.0), vec3(64282.0, 64464.0, 48.0), vec3(64282.0, 64464.0, 52.0), vec3(64282.0, 64464.0, 67.0), vec3(64282.0, 64464.0, 75.0), vec3(64282.0, 64464.0, 87.0), vec3(64493.0, 64879.0, 36.0), vec3(64493.0, 64879.0, 43.0), vec3(64714.0, 64879.0, 65.0), vec3(64493.0, 64879.0, 89.0), vec3(64714.0, 65136.0, 53.0), vec3(64714.0, 65136.0, 72.0), vec3(64925.0, 65347.0, 48.0), vec3(65136.0, 65558.0, 72.0), vec3(64714.0, 65587.0, 41.0), vec3(65347.0, 65587.0, 48.0), vec3(65136.0, 65587.0, 53.0), vec3(65136.0, 65587.0, 56.0), vec3(64493.0, 65587.0, 68.0), vec3(64925.0, 65587.0, 70.0), vec3(65347.0, 65587.0, 73.0), vec3(64493.0, 65587.0, 77.0), vec3(65558.0, 65981.0, 50.0), vec3(65770.0, 66192.0, 45.0), vec3(65558.0, 66394.0, 65.0), vec3(66192.0, 66394.0, 68.0), vec3(65558.0, 66432.0, 38.0), vec3(66192.0, 66432.0, 45.0), vec3(65981.0, 66432.0, 50.0), vec3(65981.0, 66432.0, 53.0), vec3(65981.0, 66432.0, 70.0), vec3(65558.0, 66432.0, 72.0), vec3(65558.0, 66432.0, 80.0), vec3(66394.0, 66816.0, 46.0), vec3(66614.0, 66845.0, 41.0), vec3(66394.0, 66845.0, 61.0), vec3(66394.0, 66845.0, 65.0), vec3(66394.0, 66845.0, 68.0), vec3(66605.0, 66845.0, 80.0), vec3(66710.0, 66845.0, 82.0), vec3(66403.0, 67018.0, 34.0), vec3(66816.0, 67018.0, 46.0), vec3(66816.0, 67018.0, 49.0), vec3(66816.0, 67018.0, 75.0), vec3(66816.0, 67018.0, 84.0), vec3(67018.0, 67200.0, 85.0), vec3(67018.0, 67229.0, 41.0), vec3(67142.0, 67229.0, 87.0), vec3(67229.0, 67421.0, 53.0), vec3(67229.0, 67421.0, 72.0), vec3(67229.0, 67450.0, 34.0), vec3(67229.0, 67450.0, 46.0), vec3(67229.0, 67450.0, 89.0), vec3(67450.0, 67478.0, 92.0), vec3(67450.0, 67632.0, 41.0), vec3(67450.0, 67661.0, 70.0), vec3(67450.0, 67661.0, 80.0), vec3(67661.0, 67843.0, 46.0), vec3(67661.0, 67843.0, 68.0), vec3(67661.0, 67843.0, 80.0), vec3(67872.0, 68275.0, 42.0), vec3(67872.0, 68275.0, 54.0), vec3(67872.0, 68275.0, 70.0), vec3(67872.0, 68275.0, 82.0), vec3(68275.0, 68486.0, 46.0), vec3(68275.0, 68486.0, 68.0), vec3(68275.0, 68486.0, 80.0), vec3(68486.0, 68707.0, 49.0), vec3(68486.0, 68707.0, 54.0), vec3(68486.0, 68707.0, 70.0), vec3(68486.0, 68707.0, 82.0), vec3(68707.0, 68811.0, 84.0), vec3(68707.0, 69130.0, 48.0), vec3(68707.0, 69533.0, 36.0), vec3(69130.0, 69533.0, 48.0), vec3(68707.0, 69533.0, 60.0), vec3(68707.0, 69533.0, 72.0), vec3(69562.0, 69965.0, 72.0), vec3(69562.0, 70176.0, 49.0), vec3(69562.0, 70176.0, 53.0), vec3(69965.0, 70176.0, 72.0), vec3(69562.0, 70387.0, 37.0), vec3(70176.0, 70387.0, 49.0), vec3(70176.0, 70387.0, 53.0), vec3(69562.0, 70387.0, 61.0), vec3(69562.0, 70387.0, 65.0), vec3(69562.0, 70387.0, 68.0), vec3(70176.0, 70387.0, 72.0), vec3(70387.0, 70608.0, 44.0), vec3(70387.0, 70608.0, 72.0), vec3(70387.0, 70608.0, 87.0), vec3(70608.0, 70777.0, 84.0), vec3(70608.0, 70810.0, 70.0), vec3(70608.0, 71021.0, 48.0), vec3(70608.0, 71242.0, 36.0), vec3(71021.0, 71242.0, 48.0), vec3(70810.0, 71242.0, 68.0), vec3(71021.0, 71424.0, 51.0), vec3(71242.0, 71453.0, 43.0), vec3(70608.0, 71635.0, 60.0), vec3(70608.0, 71635.0, 63.0), vec3(71242.0, 71635.0, 67.0), vec3(71453.0, 71664.0, 41.0), vec3(71453.0, 71664.0, 53.0), vec3(71453.0, 71664.0, 68.0), vec3(71453.0, 71664.0, 72.0), vec3(71664.0, 71856.0, 48.0), vec3(71664.0, 71856.0, 68.0), vec3(71664.0, 71856.0, 72.0), vec3(71242.0, 71856.0, 77.0), vec3(71856.0, 72067.0, 53.0), vec3(71856.0, 72067.0, 56.0), vec3(71856.0, 72067.0, 70.0), vec3(71856.0, 72067.0, 75.0), vec3(72067.0, 72288.0, 48.0), vec3(72067.0, 72288.0, 68.0), vec3(72067.0, 72288.0, 72.0), vec3(72288.0, 72374.0, 84.0), vec3(72374.0, 72499.0, 82.0), vec3(72288.0, 72682.0, 38.0), vec3(72288.0, 72682.0, 50.0), vec3(72499.0, 72710.0, 45.0), vec3(72288.0, 72710.0, 65.0), vec3(72288.0, 72710.0, 69.0), vec3(72499.0, 72710.0, 80.0), vec3(72710.0, 72743.0, 46.0), vec3(72902.0, 73123.0, 45.0), vec3(72710.0, 73152.0, 65.0), vec3(72710.0, 73152.0, 80.0), vec3(72902.0, 73334.0, 68.0), vec3(72902.0, 73334.0, 84.0), vec3(73123.0, 73546.0, 34.0), vec3(73123.0, 73546.0, 46.0), vec3(73334.0, 73546.0, 68.0), vec3(73334.0, 73738.0, 41.0), vec3(73546.0, 73738.0, 68.0), vec3(73546.0, 73949.0, 34.0), vec3(73546.0, 73949.0, 46.0), vec3(73546.0, 73949.0, 50.0), vec3(73123.0, 73949.0, 58.0), vec3(73123.0, 73949.0, 62.0), vec3(73546.0, 73949.0, 80.0), vec3(73334.0, 73949.0, 84.0), vec3(73430.0, 73949.0, 89.0), vec3(73949.0, 74170.0, 39.0), vec3(73949.0, 74381.0, 51.0), vec3(73949.0, 74381.0, 67.0), vec3(73949.0, 74381.0, 79.0), vec3(74170.0, 74563.0, 46.0), vec3(74170.0, 74563.0, 65.0), vec3(74381.0, 74563.0, 67.0), vec3(74170.0, 74563.0, 77.0), vec3(74381.0, 74563.0, 79.0), vec3(74381.0, 74592.0, 51.0), vec3(73738.0, 74592.0, 68.0), vec3(73738.0, 74709.0, 41.0), vec3(74592.0, 74709.0, 51.0), vec3(74592.0, 74709.0, 75.0), vec3(74592.0, 74995.0, 44.0), vec3(74592.0, 74995.0, 56.0), vec3(74592.0, 74995.0, 63.0), vec3(74592.0, 74995.0, 68.0));\n\n// Sound\n//------------------------------------------------------------------\nfloat pitch(float p) {\n    return pow(1.059460646483, p) * 440.0;\n}\n\n// https://www.shadertoy.com/view/4ffyDf\nvec2 soundNote(float noteFreq, float noteTime) {\n    vec2 eco = vec2(0.0);\n\n    float y = 0.5 * sin(6.2831 * 1.00 * noteFreq * noteTime) * exp(-0.0015 * 1.0 * noteFreq * noteTime);\n    y += 0.3 * sin(6.2831 * 2.01 * noteFreq * noteTime) * exp(-0.0015 * 2.0 * noteFreq * noteTime);\n    y += 0.2 * sin(6.2831 * 4.01 * noteFreq * noteTime) * exp(-0.0015 * 4.0 * noteFreq * noteTime);\n    y += 0.1 * y * y * y;\n    y *= 0.9 + 0.1 * sin(40.0 * noteTime);\n    y *= smoothstep(0.0, 0.01, noteTime);\n    for (int i = 0; i < 2; i++) {\n        float h = float(i) / 2.0;\n        eco += y * vec2(0.5 + 0.2 * h, 0.5 - 0.2 * h) * (1.0 - sqrt(h) * 0.85);\n    }\n    eco *= 5.0;\n    return eco;\n}\n\n// https://www.shadertoy.com/view/MfBcRW\nvec2 bassTromboneSound(float noteFreq, float noteTime) {\n    noteFreq *= 0.25;\n    float y = 0.6 * sin(6.2831 * 0.5 * noteFreq * noteTime) * exp(-0.002 * noteFreq * noteTime);\n    y += 0.3 * sin(6.2831 * 1.0 * noteFreq * noteTime) * exp(-0.002 * noteFreq * noteTime);\n    y += 0.2 * sin(6.2831 * 1.5 * noteFreq * noteTime) * exp(-0.002 * noteFreq * noteTime);\n    y *= smoothstep(0.0, 0.1, noteTime) * (1.0 - smoothstep(0.8, 1.5, noteTime));\n    return vec2(y);\n}\n\nvec2 clarinetSound(float noteFreq, float noteTime) {\n    float y = 1.0 * sin(6.2831 * 1.00 * noteFreq * noteTime) * exp(-0.0008 * noteFreq * noteTime);\n    y += 0.7 * sin(6.2831 * 0.50 * noteFreq * noteTime) * exp(-0.0008 * noteFreq * noteTime);\n    y += 0.5 * sin(6.2831 * 0.25 * noteFreq * noteTime) * exp(-0.0008 * noteFreq * noteTime);\n    y *= smoothstep(0.0, 0.2, noteTime) * (1.0 - smoothstep(1.0, 2.0, noteTime));\n    return vec2(y);\n}\n\nvec2 pianoSound(float freq, float time) {\n    freq /= pow(2.0, 1.0 / 1.0);\n    float ph = 1.0;\n    ph *= sin(6.283185 * freq * time * 2.0);\n    ph *= 0.5 + 0.5 * max(0.0, 5.0 - 0.01 * freq);\n    ph *= exp(-time * freq * 0.2);\n\n    float y = 0.0;\n    y += 0.70 * sin(1.00 * 6.283185 * freq * time + ph) * exp2(-0.7 * 0.007 * freq * time);\n    y += 0.20 * sin(2.01 * 6.283185 * freq * time + ph) * exp2(-0.7 * 0.011 * freq * time);\n    y += 0.20 * sin(3.01 * 6.283185 * freq * time + ph) * exp2(-0.7 * 0.015 * freq * time);\n    y += 0.16 * sin(4.01 * 6.283185 * freq * time + ph) * exp2(-0.7 * 0.018 * freq * time);\n    y += 0.13 * sin(5.01 * 6.283185 * freq * time + ph) * exp2(-0.7 * 0.021 * freq * time);\n    y += 0.10 * sin(6.01 * 6.283185 * freq * time + ph) * exp2(-0.7 * 0.027 * freq * time);\n    y += 0.09 * sin(8.01 * 6.283185 * freq * time + ph) * exp2(-0.7 * 0.030 * freq * time);\n    y += 0.07 * sin(9.01 * 6.283185 * freq * time + ph) * exp2(-0.7 * 0.033 * freq * time);\n\n    y += 0.35 * y * y * y;\n    y += 0.10 * y * y * y;\n\n    y *= 1.0 + 1.5 * exp(-8.0 * time);\n    y *= clamp(time / 0.004, 0.0, 1.0);\n\n    y *= 2.5 - 1.5 * clamp(log2(freq) / 10.0, 0.0, 1.0);\n\n    float modulation = sin(6.283185 * 0.5 * freq * time);\n    y += 0.1 * sin(6.283185 * 1.5 * freq * time + modulation) * exp2(-0.7 * 0.007 * freq * time);\n    y += 0.08 * sin(6.283185 * 2.5 * freq * time + modulation) * exp2(-0.7 * 0.009 * freq * time);\n    y += 0.06 * sin(6.283185 * 3.5 * freq * time + modulation) * exp2(-0.7 * 0.011 * freq * time);\n\n    return vec2(y);\n}\n\nvec2 pianoWithPedal(float freq, float time) {\n    vec2 y = pianoSound(freq, time);\n    float pedalEffect = smoothstep(0.0, 0.5, mod(time, 3.0));\n    y *= 1.0 + 0.8 * pedalEffect;\n\n    return y;\n}\n\nvec2 fluteSound(float noteFreq, float noteTime) {\n    float y = 0.6 * sin(6.2831 * noteFreq * noteTime) * exp(-0.0015 * noteFreq * noteTime);\n    y += 0.4 * sin(6.2831 * noteFreq * noteTime * 2.0) * exp(-0.0015 * noteFreq * noteTime);\n    y += 0.2 * sin(6.2831 * noteFreq * noteTime * 3.0) * exp(-0.0015 * noteFreq * noteTime);\n    y *= smoothstep(0.0, 0.2, noteTime) * (1.0 - smoothstep(1.0, 2.0, noteTime));\n    return vec2(y);\n}\n\nvec2 yangqinSound(float noteFreq, float noteTime) {\n    noteFreq *= pow(1.5, 1.2);\n    float y = 0.8 * sin(6.2831 * noteFreq * noteTime) * exp(-0.005 * noteTime);\n    y += 0.5 * sin(6.2831 * 2.0 * noteFreq * noteTime) * exp(-0.005 * noteTime);\n    y += 0.3 * sin(6.2831 * 4.0 * noteFreq * noteTime) * exp(-0.005 * noteTime);\n    y *= smoothstep(0.0, 0.02, noteTime) * (1.0 - smoothstep(0.05, 0.1, noteTime));\n    return vec2(y);\n}\n//------------------------------------------------------------------\n\n// constant\n//------------------------------------------------------------------\n#define PI 3.1415926\n#define PI2 6.2831852\n//------------------------------------------------------------------\n\n// rendering & modeling\n//------------------------------------------------------------------\n#define MAX_MARCHING_STEPS 255\n#define MAX_SHADOW_STEPS 15\n\n#define PRECISION 1e-5\n#define MAX_DIST 100.0\n\n// #define ZERO min(iFrame, 0)\n#define ZERO 0\n\n#define ROT3X(x) mat4(1, 0, 0, 0, 0, cos(x), sin(x), 0, 0, -sin(x), cos(x), 0, 0, 0, 0, 1)\n#define ROT3Y(x) mat4(cos(x), 0, -sin(x), 0, 0, 1, 0, 0, sin(x), 0, cos(x), 0, 0, 0, 0, 1)\n#define ROT3Z(x) mat4(cos(x), sin(x), 0, 0,  -sin(x), cos(x), 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n#define TRANSLATE3(x, y, z) mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, x, y ,z, 1)\n#define ROT2(x) mat2(cos(x), -sin(x), sin(x), cos(x))\n\nstruct Material {\n    vec3 albedo;\n    float roughness;\n    float metallic;\n};\n\nstruct Surface {\n    float d;\n    Material mat;\n};\n\nSurface surf_op_union(Surface s1, Surface s2) {\n    if (s1.d < s2.d) {\n        return s1;\n    } else {\n        return s2;\n    }\n}\n\nSurface surf_op_sub(Surface s1, Surface s2) {\n    s2.d *= -1.0;\n    if (s1.d > s2.d) {\n        return s1;\n    } else {\n        return s2;\n    }\n}\n\nSurface surf_op_smooth_union(Surface s1, Surface s2, float k) {\n    float h = clamp(0.5 + 0.5 * (s2.d - s1.d) / k, 0.0, 1.0);\n\n    vec3 p1 = vec3(s1.d, s1.mat.roughness, s1.mat.metallic), p2 = vec3(s2.d, s2.mat.roughness, s2.mat.metallic);\n    p1 = mix(p2, p1, h) - k * h * (1.0 - h);\n\n    s1.mat.albedo = mix(s2.mat.albedo, s1.mat.albedo, h) - k * h * (1.0 - h);\n    s1.d = p1.x;\n    s1.mat.roughness = p1.y;\n    s1.mat.metallic = p1.z;\n    return s1;\n}\n\nSurface surf_op_smooth_sub(Surface s1, Surface s2, float k) {\n    float h = clamp(0.5 - 0.5 * (s2.d + s1.d) / k, 0.0, 1.0);\n    vec3 p1 = vec3(s1.d, s1.mat.roughness, s1.mat.metallic), p2 = vec3(s2.d, s2.mat.roughness, s2.mat.metallic);\n    p1 = mix(p2, -p1, h) + k * h * (1.0 - h);\n\n    s1.mat.albedo = mix(s2.mat.albedo, s1.mat.albedo, h) - k * h * (1.0 - h);\n    s1.d = p1.x;\n    s1.mat.roughness = p1.y;\n    s1.mat.metallic = p1.z;\n    return s1;\n}\n\nSurface surf_op_smooth_intersection(Surface s1, Surface s2, float k) {\n    float h = clamp(0.5 - 0.5 * (s2.d - s1.d) / k, 0.0, 1.0);\n    vec3 p1 = vec3(s1.d, s1.mat.roughness, s1.mat.metallic), p2 = vec3(s2.d, s2.mat.roughness, s2.mat.metallic);\n    p1 = mix(p2, p1, h) + k * h * (1.0 - h);\n\n    s1.mat.albedo = mix(s2.mat.albedo, s1.mat.albedo, h) - k * h * (1.0 - h);\n    s1.d = p1.x;\n    s1.mat.roughness = p1.y;\n    s1.mat.metallic = p1.z;\n    return s1;\n}\n\nfloat op_union(float d1, float d2) {\n    return min(d1, d2);\n}\n\nfloat op_inter(float d1, float d2) {\n    return max(d1, d2);\n}\n\nfloat op_sub(float d1, float d2) {\n    return max(d1, -d2);\n}\n\nfloat op_smooth_union(float d1, float d2, float k) {\n    float h = clamp(0.5 + 0.5 * (d2 - d1) / k, 0.0, 1.0);\n    return mix(d2, d1, h) - k * h * (1.0 - h);\n}\n\nfloat op_smooth_subtraction(float d1, float d2, float k) {\n    float h = clamp(0.5 - 0.5 * (d2 + d1) / k, 0.0, 1.0);\n    return mix(d2, -d1, h) + k * h * (1.0 - h);\n}\n\nfloat op_smooth_intersection(float d1, float d2, float k) {\n    float h = clamp(0.5 - 0.5 * (d2 - d1) / k, 0.0, 1.0);\n    return mix(d2, d1, h) + k * h * (1.0 - h);\n}\n//------------------------------------------------------------------\n\n// 3d sdf\n//------------------------------------------------------------------\nfloat dot2(in vec2 v) {\n    return dot(v, v);\n}\nfloat dot2(in vec3 v) {\n    return dot(v, v);\n}\nfloat sdRoundBox(vec3 p, vec3 b, float r) {\n    vec3 q = abs(p) - b + r;\n    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - r;\n}\n\nfloat sdCappedCylinder(vec3 p, vec3 a, vec3 b, float r) {\n    vec3 ba = b - a;\n    vec3 pa = p - a;\n    float baba = dot(ba, ba);\n    float paba = dot(pa, ba);\n    float x = length(pa * baba - ba * paba) - r * baba;\n    float y = abs(paba - baba * 0.5) - baba * 0.5;\n    float x2 = x * x;\n    float y2 = y * y * baba;\n    float d = (max(x, y) < 0.0) ? -min(x2, y2) : (((x > 0.0) ? x2 : 0.0) + ((y > 0.0) ? y2 : 0.0));\n    return sign(d) * sqrt(abs(d)) / baba;\n}\n\nfloat sdRoundCone(vec3 p, vec3 a, vec3 b, float r1, float r2) {\n    // sampling independent computations (only depend on shape)\n    vec3 ba = b - a;\n    float l2 = dot(ba, ba);\n    float rr = r1 - r2;\n    float a2 = l2 - rr * rr;\n    float il2 = 1.0 / l2;\n\n    // sampling dependant computations\n    vec3 pa = p - a;\n    float y = dot(pa, ba);\n    float z = y - l2;\n    float x2 = dot2(pa * l2 - ba * y);\n    float y2 = y * y * l2;\n    float z2 = z * z * l2;\n\n    // single square root!\n    float k = sign(rr) * rr * rr * x2;\n    if (sign(z) * a2 * z2 > k)\n        return sqrt(x2 + z2) * il2 - r2;\n    if (sign(y) * a2 * y2 < k)\n        return sqrt(x2 + y2) * il2 - r1;\n    return (sqrt(x2 * a2 * il2) + y * rr) * il2 - r1;\n}\n\nfloat sdCappedCone(vec3 p, float h, float r1, float r2) {\n    vec2 q = vec2(length(p.xz), p.y);\n    vec2 k1 = vec2(r2, h);\n    vec2 k2 = vec2(r2 - r1, 2.0 * h);\n    vec2 ca = vec2(q.x - min(q.x, (q.y < 0.0) ? r1 : r2), abs(q.y) - h);\n    vec2 cb = q - k1 + k2 * clamp(dot(k1 - q, k2) / dot2(k2), 0.0, 1.0);\n    float s = (cb.x < 0.0 && ca.y < 0.0) ? -1.0 : 1.0;\n    return s * sqrt(min(dot2(ca), dot2(cb)));\n}\n\nfloat sdSphere(vec3 p, float s) {\n    return length(p) - s;\n}\n\nfloat sdBox(vec3 p, vec3 b) {\n    vec3 d = abs(p) - b;\n    return min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n}\n\nfloat sdCappedCylinder(vec3 p, float h, float r) {\n    vec2 d = abs(vec2(length(p.xz), p.y)) - vec2(r, h);\n    return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n}\n//------------------------------------------------------------------\n\n// 2d sdf\n//------------------------------------------------------------------\nfloat sdCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat sdBox(in vec2 p, in vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n//------------------------------------------------------------------\n\n// pbr stuff\n//------------------------------------------------------------------\nfloat pow5(float x) {\n    float pow2 = x * x;\n    return pow2 * pow2 * x;\n}\n\n// https://blog.csdn.net/qq_28299311/article/details/123312767\nvec3 DisneyDiffuse(float NdotV, float NdotL, float LdotH, float roughness, vec3 base_color) {\n    float fd90 = 0.5 + 2.0 * LdotH * LdotH * roughness;\n    // Two schlick fresnel term\n    float light_scatter = (1.0 + (fd90 - 1.0) * pow5(1.0 - NdotL));\n    float view_scatter = (1.0 + (fd90 - 1.0) * pow5(1.0 - NdotV));\n    return (base_color / PI) * light_scatter * view_scatter;\n}\n\n// D\nfloat D_GGX_TR(float NdotH, float roughness) {\n    float a2 = roughness * roughness;\n    float NdotH2 = NdotH * NdotH;\n    float denom = (NdotH2 * (a2 - 1.0) + 1.0);\n    denom = PI * denom * denom;\n    denom = max(denom, 0.001); //防止分母为0\n    return a2 / denom;\n}\n\n// G\nfloat GeometrySchlickGGX(float NdotV, float k) {\n    float nom = NdotV;\n    float denom = NdotV * (1.0 - k) + k;\n\n    return nom / denom;\n}\n\nfloat GeometrySmith(float NdotV, float NdotL, float k) {\n    float ggx1 = GeometrySchlickGGX(NdotV, k);\n    float ggx2 = GeometrySchlickGGX(NdotL, k);\n\n    return ggx1 * ggx2;\n}\n\n// F\nvec3 F_Schlick(float HdotV, vec3 F0) {\n    return F0 + (1.0 - F0) * pow(1.0 - HdotV, 5.0);\n}\n\nvec2 PrefilteredDFG_Karis(float roughness, float NoV) {\n    // Karis 2014, \"Physically Based Material on Mobile\"\n    const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n    const vec4 c1 = vec4(1.0, 0.0425, 1.040, -0.040);\n\n    vec4 r = roughness * c0 + c1;\n    float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n\n    return vec2(-1.04, 1.04) * a004 + r.zw;\n}\n\nvec3 Irradiance_SphericalHarmonics(const vec3 n) {\n    // Irradiance from \"Ditch River\" IBL (http://www.hdrlabs.com/sibl/archive.html)\n    return max(vec3(0.754554516862612, 0.748542953903366, 0.790921515418539) + vec3(-0.083856548007422, 0.092533500963210, 0.322764661032516) * (n.y) + vec3(0.308152705331738, 0.366796330467391, 0.466698181299906) * (n.z) + vec3(-0.188884931542396, -0.277402551592231, -0.377844212327557) * (n.x), 0.0);\n}\n\nvec3 Tonemap_ACES(const vec3 x) {\n    // Narkowicz 2015, \"ACES Filmic Tone Mapping Curve\"\n    const float a = 2.51;\n    const float b = 0.03;\n    const float c = 2.43;\n    const float d = 0.59;\n    const float e = 0.14;\n    return (x * (a * x + b)) / (x * (c * x + d) + e);\n}\n//------------------------------------------------------------------","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// #define VSCODE\n\n#ifdef VSCODE\n#include \"common.glsl\"\n#endif\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 coord = ivec2(fragCoord);\n    float time = iTime;\n    time *= SCALE;\n    time = mod(time, LEN);\n\n    if (coord.x == 0 && coord.y == 0) {\n        int start = -1;\n        int end = -1;\n        for (int i = 0; i < SOUND_LENGTH; ++i) {\n            vec3 s = sound[i];\n            if (((time + SCALE) > s.x && (time - SCALE) < s.y)) {\n                end = i;\n            } else if (end == -1) {\n                start = i;\n            }\n\n        }\n        fragColor.r = intBitsToFloat(start);\n        fragColor.g = intBitsToFloat(end);\n    }\n\n}","name":"Buffer A","description":"","type":"buffer"}]}