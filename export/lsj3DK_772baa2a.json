{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat x = fragCoord.x/iResolution.x;\n\tfloat y = fragCoord.y/iResolution.y;\n\tfloat amp = 0.19;\n\t\n\tfloat pX0 = 0.3+amp*sin(1.3*iTime);\n\tfloat pX1 = 0.7+amp*sin(1.5*iTime);\n\tfloat pY0 = 0.3+amp*sin(1.7*iTime);\n\tfloat pY1 = 0.7+amp*sin(1.1*iTime);\n\tfloat pH  = 0.2+amp*sin(2.3*iTime);\n\t\n\tfloat x0 = pX0;\n\tfloat x1 = pX1;\n\tfloat y0 = pY0;\n\tfloat y1 = pY1;\n\tfloat h  = pH;\n\tfloat M_1_2PI = 0.159154943;\n\t\n\tfloat I0, I1, c, angle;\n\tvec3 v0,v1;\n\t\n\t// Local coordinate system\n\tfloat xa = x0-x;\n\tfloat xb = x1-x;\n\tfloat ya = y0-y;\n\tfloat yb = y1-y;\n\t\n\t// LEFT        \n\tc = xa/sqrt(xa*xa+h*h);\n\tI0 = atan(c*ya/xa);\n\tI1 = atan(c*yb/xa);\n\tfloat visAreaL = c*(I1-I0)*M_1_2PI;\n\t\n\t// TOP\n\tc = ya/sqrt(ya*ya+h*h);\n\tI0 = atan(c*xa/ya);\n\tI1 = atan(c*xb/ya);\n\tfloat visAreaT = c*(I1-I0)*M_1_2PI;\n\t\n\t// BOTTOM        \n\tc = yb/sqrt(yb*yb+h*h);\n\tI0 = atan(c*xa/yb);\n\tI1 = atan(c*xb/yb);\n\tfloat visAreaB = c*(I0-I1)*M_1_2PI;\n\t\n\t// RIGHT\n\tc =  xb/sqrt(xb*xb+h*h);\n\tI0 = atan(-c*ya/xb);\n\tI1 = atan(-c*yb/xb);\n\tfloat visAreaR = c*(I1-I0)*M_1_2PI;\n\t\n\tvec4 col = vec4(0,0,0,1);\n\t\n\tfloat sx0 = step(x0,x);\n\tfloat sx1 = step(x1,x);\n\tfloat sy0 = step(y0,y);\n\tfloat sy1 = step(y1,y);\n\t\n\tif (sx0*(1.0-sx1)*sy0*(1.0-sy1) >0.0)\n\t{\n\t\tcol = vec4(1.0,1.0,1.0,1);\n\t}\n\telse if ((1.0-sx0)*sy0*(1.0-sy1) > 0.0)\n\t{ // x<=x0 && y>=y0 && y<=y1\n\t\t// left\n\t\tv0 = normalize(vec3(xa, ya,0));\n\t\tv1 = normalize(vec3(xa, yb,0));\n\t\tangle = acos(dot(v0,v1));\n\t\tfloat fracVis = 1.0-angle*M_1_2PI;\n\t\tfloat fac = fracVis+visAreaL;\n\t\tcol = vec4(fac,fac,fac,1);\n\t}\n\telse if ((1.0-sx0)*(1.0-sy0) > 0.0)\n\t{ // x<=x0 && y<=y0\n\t\t// Left top\n\t\tv0 = normalize(vec3(xb, ya,0));\n\t\tv1 = normalize(vec3(xa, yb,0));\n\t\tangle = acos(dot(v0,v1));\n\t\tfloat fracVis = 1.0-angle*M_1_2PI;\n\t\t\n\t\tfloat fac = fracVis + visAreaL + visAreaT;\n\t\tcol = vec4(fac,fac,fac,1);\n\t}\n\telse if ((1.0-sx0)*sy1 > 0.0)\n\t{ // x<=x0 && y>y1\n\t\t// Left bottom\n\t\tv0 = normalize(vec3(xa, ya,0));\n\t\tv1 = normalize(vec3(xb, yb,0));\n\t\tangle = acos(dot(v0,v1));\n\t\tfloat fracVis = 1.0-angle*M_1_2PI;\n\t\t\n\t\tfloat fac = fracVis + visAreaL + visAreaB;\n\t\tcol = vec4(fac,fac,fac,1);\t}\n\telse if (sx0*(1.0-sx1)*sy1 > 0.0)\n\t{ // x>x0 && x<x1 && y>y1\n\t\t// Bottom\n\t\tv0 = normalize(vec3(xa, yb,0));\n\t\tv1 = normalize(vec3(xb, yb,0));\n\t\tangle = acos(dot(v0,v1));\n\t\tfloat fracVis = 1.0-angle*M_1_2PI;\n\t\t\n\t\tfloat fac = fracVis + visAreaB; //\n\t\tcol = vec4(fac,fac,fac,1);\n\t}\n\t\n\telse if ( sx0*(1.0-sx1)*(1.0-sy0) > 0.0)\n\t{ // x>x0 && x<x1 && y<y0\n\t\t// Top\n\t\tv0 = normalize(vec3(xa, ya,0));\n\t\tv1 = normalize(vec3(xb, ya,0));\n\t\tangle = acos(dot(v0,v1));\n\t\tfloat fracVis = 1.0-angle*M_1_2PI;\n\t\t\n\t\tfloat fac = fracVis+visAreaT;\n\t\tcol = vec4(fac,fac,fac,1);\n\t}\n\t\n\telse if ( sx1*(1.0-sy1)*sy0 > 0.0 )\n\t{ // x>x1 && y<y1 && y>y0\n\t\t// Right\n\t\tv0 = normalize(vec3(xb, ya,0));\n\t\tv1 = normalize(vec3(xb, yb,0));\n\t\tangle = acos(dot(v0,v1));\n\t\tfloat fracVis = 1.0-angle*M_1_2PI;\n\t\t\n\t\tfloat fac = fracVis + visAreaR;\n\t\tcol = vec4(fac,fac,fac,1);\n\t}\n\t\n\telse if (sx1*sy1 > 0.0)\n\t{ // x>x1 && y>y1\n\t\tv0 = normalize(vec3(xb, ya,0));\n\t\tv1 = normalize(vec3(xa, yb,0));\n\t\tangle = acos(dot(v0,v1));\n\t\tfloat fracVis = 1.0-angle*M_1_2PI;\n\t\t\n\t\tfloat fac = fracVis + visAreaR+visAreaB;\n\t\tcol = vec4(fac,fac,fac,1);\n\t}\n\t\n\telse if (sx1*(1.0-sy1) > 0.0)\n\t{ // x>x1 && y<y1\n\t\tv0 = normalize(vec3(xa, ya,0));\n\t\tv1 = normalize(vec3(xb, yb,0));\n\t\tangle = acos(dot(v0,v1));\n\t\tfloat fracVis = 1.0-angle*M_1_2PI;\n\t\t\n\t\tfloat fac = fracVis + visAreaR + visAreaT;\n\t\tcol = vec4(fac,fac,fac,1);\n\t}\n\t\n\tfragColor = col;\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsj3DK","date":"1393786259","viewed":839,"name":"Analytical AO","username":"yoslber","description":"\"Analytical\" ambient occlusion for a box on a plane, as seen from above","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["ambientocclusion"],"hasliked":0,"parentid":"","parentname":""}}