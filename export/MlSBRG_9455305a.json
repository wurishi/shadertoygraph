{"ver":"0.1","info":{"id":"MlSBRG","date":"1516191529","viewed":387,"name":"Learning shaders - fft viz","username":"KebabuTurka","description":"I am learning how to shaders!\nI thought about simple fft visualisation and here it is!\n\nMusic from SubCarbon Records Soundcloud","likes":7,"published":1,"flags":64,"usePreview":0,"tags":["sound","visualisation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"ldBXRm","filepath":"https://soundcloud.com/subcarbon/subtronics-bubble-flex","previewfilepath":"https://soundcloud.com/subcarbon/subtronics-bubble-flex","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float num = 64.;\n\nfloat getData(float i) {\n    return 1.9*pow( texture( iChannel0, vec2( 0.05 + 0.5*i/num, 0.25 ) ).x, 3.0 );\n}\n\n\nvec3 borderColor = vec3(1.0,1.0,0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n           \n    float data = getData(floor(uv.x*num));\n    \n    float thickness = 1./iResolution.y;\n    \n    vec3 color =   uv.y < data - thickness ? vec3(0, .3 + .7*data, .3)\n                 : uv.y < data             ? borderColor\n                 :                           vec3(0);\n        \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}