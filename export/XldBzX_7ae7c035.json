{"ver":"0.1","info":{"id":"XldBzX","date":"1540474260","viewed":180,"name":"Power curve test","username":"wivlaro","description":"Drag the mouse to try a different power falloff","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["light","square","curve","inverse","power","falloff","decay"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat DigitBin( const int x )\n{\n    return x==0?480599.0:x==1?139810.0:x==2?476951.0:x==3?476999.0:x==4?350020.0:x==5?464711.0:x==6?464727.0:x==7?476228.0:x==8?481111.0:x==9?481095.0:0.0;\n}\n\nfloat PrintValue( vec2 vStringCoords, float fValue, float fMaxDigits, float fDecimalPlaces )\n{       \n    if ((vStringCoords.y < 0.0) || (vStringCoords.y >= 1.0)) return 0.0;\n    \n    bool bNeg = ( fValue < 0.0 );\n\tfValue = abs(fValue);\n    \n\tfloat fLog10Value = log2(abs(fValue)) / log2(10.0);\n\tfloat fBiggestIndex = max(floor(fLog10Value), 0.0);\n\tfloat fDigitIndex = fMaxDigits - floor(vStringCoords.x);\n\tfloat fCharBin = 0.0;\n\tif(fDigitIndex > (-fDecimalPlaces - 1.01)) {\n\t\tif(fDigitIndex > fBiggestIndex) {\n\t\t\tif((bNeg) && (fDigitIndex < (fBiggestIndex+1.5))) fCharBin = 1792.0;\n\t\t} else {\t\t\n\t\t\tif(fDigitIndex == -1.0) {\n\t\t\t\tif(fDecimalPlaces > 0.0) fCharBin = 2.0;\n\t\t\t} else {\n                float fReducedRangeValue = fValue;\n                if(fDigitIndex < 0.0) { fReducedRangeValue = fract( fValue ); fDigitIndex += 1.0; }\n\t\t\t\tfloat fDigitValue = (abs(fReducedRangeValue / (pow(10.0, fDigitIndex))));\n                fCharBin = DigitBin(int(floor(mod(fDigitValue, 10.0))));\n\t\t\t}\n        }\n\t}\n    return floor(mod((fCharBin / pow(2.0, floor(fract(vStringCoords.x) * 4.0) + (floor(vStringCoords.y * 5.0) * 4.0))), 2.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n\n    float multiplier = 0.3;\n    float power = 0.125;\n    \n    if (iMouse.z > 0.0)\n    {\n        vec2 mouseCentral = (iMouse.xy-iResolution.xy*0.5)/iResolution.y;\n        multiplier = abs(mouseCentral.x)*2.0;\n        power = abs(mouseCentral.y)*2.0;\n    }\n    \n    float val = multiplier * pow(uv.x*uv.x+uv.y*uv.y,-power);\n    \n\n    vec4 col = vec4(val,val,val,1.0);\n    \n    //fragColor = vec4(uv,0,1.0);\n    float isDigit;\n    isDigit = PrintValue((fragCoord - vec2(0.0, 5.0)) / 10.0, power, 2.0, 3.0);\n\tcol = mix( col, vec4(1.0, 0.0,0.0, 1.0), isDigit); \n    isDigit = PrintValue((fragCoord - vec2(60.0, 5.0)) / 10.0, multiplier, 2.0, 3.0);\n\tcol = mix( col, vec4(0.0, 1.0,0.0, 1.0), isDigit); \n    fragColor = col;\n    \n}","name":"Image","description":"","type":"image"}]}