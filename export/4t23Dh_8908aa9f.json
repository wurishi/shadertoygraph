{"ver":"0.1","info":{"id":"4t23Dh","date":"1428597581","viewed":389,"name":"Run Game Demo","username":"yasuo","description":"My first raytracing game demo.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["game"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define SPEED 5.0\n\n\t\tfloat c_0 = 31599.0;\n\t\tfloat c_1 = 9362.0;\n\t\tfloat c_2 = 29671.0;\n\t\tfloat c_3 = 29391.0;\n\t\tfloat c_4 = 23497.0;\n\t\tfloat c_5 = 31183.0;\n\t\tfloat c_6 = 31215.0;\n\t\tfloat c_7 = 29257.0;\n\t\tfloat c_8 = 31727.0;\n\t\tfloat c_9 = 31695.0;\n\n\t\tfloat c_x = 23213.0;\n\t\tfloat c_y = 23186.0;\n\t\tfloat c_colon = 1040.0;\n\n\t\tvec2 rot(vec2 p, float a) {\n\t\t\treturn vec2(\n\t\t\t\tcos(a) * p.x - sin(a) * p.y,\n\t\t\t\tsin(a) * p.x + cos(a) * p.y);\n\t\t}\n\n\t\tfloat noise(float x) {\n\t\t\treturn fract(sin(dot(vec2(x), vec2(12.9898, 78.233)))* 43758.5453);\n\t\t}\n\n\t\tfloat sdBox( vec3 p, vec3 b )\n\t\t{\n\t\t  vec3 d = abs(p) - b;\n\t\t  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n\t\t}\n\n\t\t// https://www.shadertoy.com/view/Xlj3Rm\n\t\tvec3 wave(vec2 uv, \n\t\t              float frequency, float amplitude, float shift, float offset,\n\t\t              vec3 color, float width, float exponent)\n\t\t{\n\t\t    float angle = iTime * 12.0 * frequency + ((iTime*0.01)*shift + uv.x) * 3.2831852;\n\t\t    \n\t\t    float y = sin(angle) * amplitude + offset;\n\t\t    \n\t\t    float scale = pow(smoothstep(width * 3.0, 0.01, distance(y+0.4, uv.y)), exponent);\n\t\t    \n\t\t    return color * scale;\n\t\t}\n\n\t\tfloat map(vec3 p) {\n\t\t\tfloat t = 100.0;\n\t\t\tfloat w = 0.0;\n\n\t\t\tfloat n = floor(p.z/0.5);\n\t\t\t\n\t\t\tvec3 oldp = p;\n\t\t\tp.z = mod(p.z, 0.5)-0.25;\n\t\t\tp.y += noise(n)*1.0+sin(iTime*2.0)*0.1;\n\t\t\tp.x += noise(n)*1.0-0.5;\n\t\t\t\n\t\t\tw = sdBox(p,vec3(0.15, 0.15, 0.15));\n\t\t\tt = min(t, w);\n\n        \tw = 0.1 + dot(oldp, vec3(0, 0.0, 0));\n        \tt = min(t, w);\n\n\t\t\treturn t;\n\t\t}\n\n\t\t// this code from GLSL sandbox\n\t\t//returns 0/1 based on the state of the given bit in the given number\n\t\tfloat getBit(float num,float bit)\n\t\t{\n\t\t\tnum = floor(num);\n\t\t\tbit = floor(bit);\n\t\t\t\n\t\t\treturn float(mod(floor(num/pow(2.,bit)),2.) == 1.0);\n\t\t}\n\n\t\tfloat Sprite3x5(float sprite,vec2 p)\n\t\t{\n\t\t\tfloat bounds = float(all(lessThan(p,vec2(3,5))) && all(greaterThanEqual(p,vec2(0,0))));\n\t\t\t\n\t\t\treturn getBit(sprite,(2.0 - p.x) + 3.0 * p.y) * bounds;\n\t\t}\n\n\t\tfloat Digit(float num,vec2 p)\n\t\t{\n\t\t\tnum = mod(floor(num),10.0);\n\t\t\t\n\t\t\tif(num == 0.0) return Sprite3x5(c_0,p);\n\t\t\tif(num == 1.0) return Sprite3x5(c_1,p);\n\t\t\tif(num == 2.0) return Sprite3x5(c_2,p);\n\t\t\tif(num == 3.0) return Sprite3x5(c_3,p);\n\t\t\tif(num == 4.0) return Sprite3x5(c_4,p);\n\t\t\tif(num == 5.0) return Sprite3x5(c_5,p);\n\t\t\tif(num == 6.0) return Sprite3x5(c_6,p);\n\t\t\tif(num == 7.0) return Sprite3x5(c_7,p);\n\t\t\tif(num == 8.0) return Sprite3x5(c_8,p);\n\t\t\tif(num == 9.0) return Sprite3x5(c_9,p);\n\t\t\t\n\t\t\treturn 0.0;\n\t\t}\n\n\t\tvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\t\tvec2 uv = ( fragCoord.xy / iResolution.xy ) * 2.0 - 1.0;\n\n\t\t\t// GAME DEMO MAIN\n\t\t\tfloat aspect = iResolution.x / iResolution.y;\n\t\t\tvec3  dir = normalize(vec3(uv * vec2(aspect, 1.0), 1.0));\n\t\t\t\n\t\t\tdir.yz = rot(dir.yz, 0.3);\n\t\t\tvec3 pos = vec3(0.0, 0.5, iTime*SPEED);\n\t\t\t\n\t\t\tfloat t = 0.0;\n\t\t\tfor(int i = 0 ; i < 50; i++) {\n\t\t\t\tfloat temp = map(t * dir + pos);\n\t\t\t\tif(temp < 0.01) break;\n\t\t\t\tt += temp * 1.0;\n\t\t\t}\n\t\t\t\n\t\t\tvec3 ip = pos + dir * t;\n\t\t\tvec4 cl = vec4(t * 0.01) * map(ip - 0.02) + t * 0.3;\n\n\t\t\t// UI\n\t\t\tuv = ( fragCoord.xy /iResolution.xy ) * vec2(64,32);\n\t\t\tvec2 cpos = vec2(1.0);\n\t\t\tfloat dc = Digit(fract(iTime)*10.0,floor(uv-cpos));\n\t\t\tcpos.x += 3.5;\n\t\t\tdc += Digit(fract(iTime)*30.0,floor(uv-cpos));\n\t\t\tcpos.x += 3.5;\n\t\t\tdc += Digit(fract(iTime)*60.0,floor(uv-cpos));\n\t\t\tcpos.x += 3.5;\n\t\t\tdc += Digit(fract(iTime)*100.0,floor(uv-cpos));\n\n\t\t\tvec3 cl2 = vec3(dc)*vec3(1,1,1);\n\n\t\t\tuv = ( fragCoord.xy / iResolution.xy ) * 2.0 - 1.0;\n\t\t\tcl2 += wave(uv, 0.55, 0.25, 0.0, 0.2, vec3(1.0, 1.0, 1.0), 0.03, 15.0);\n\t\t\tcl2 += wave(uv, 0.78, 0.17, 0.0, 0.5, vec3(1.0, 1.0, 1.0), 0.05, 15.0);\n\t\t\tcl2 += wave(uv, 0.68, 0.05, 0.0, 0.3, vec3(1.0, 1.0, 1.0), 0.07, 15.0);\n\n\t\t\tfragColor = cl-vec4(cl2,1.0);\n\t\t}","name":"","description":"","type":"image"}]}