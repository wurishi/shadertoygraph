{"ver":"0.1","info":{"id":"flVSRt","date":"1641223020","viewed":217,"name":"A squiggle","username":"SnoopethDuckDuck","description":"its a bit weird.\nBuffer A tracks a moving point, buffer B draws it, Image draws buffer B\n(lots of unused + unpolished code)","likes":5,"published":3,"flags":48,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec4 col = texelFetch( iChannel0, ivec2(fragCoord), 0 );\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEYBOARD iChannel1\n#define KEY_RESET 82\n\nbool key_down(int key) {\n    return int(texelFetch(KEYBOARD, ivec2(key, 0), 0).x) == 1;\n}\n\nvec2 Cell( in ivec2 p )\n{\n    // do wrapping\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    \n    // fetch texel\n    return texelFetch(iChannel0, p, 0 ).xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    ivec2 px = ivec2(fragCoord);\n    \n    float a = atan(uv.y, uv.x);\n    float r = length(uv);\n    \n    vec2 p = Cell(px);\n    if (iFrame == 0 || key_down(KEY_RESET)) {\n        fragColor = vec4(0.);\n        p = vec2(0.5,0.5);\n        //return;\n    } \n    \n    vec2 ipos = floor(sc * uv);\n    \n    float h = h21(uv);\n    float m = 2. / iResolution.y;//h - 0.5 + 0.5 * cos(iTime);\n    float th = iTime + 28. * r + 0.5 * pi * cos(1. * a + iTime);//0.1 * pi * thc(1., 4. * r + iTime);//2. * pi * h21(vec2(0.01 * iTime)); // not perfect\n    vec2 b = vec2(thc(4., th), ths(4., th));\n    \n    vec2 p2 = p + m * b;\n    //p2 = clamp(p2, vec2(0.), vec2(1.));\n    fragColor = vec4(p2.xy, 0., 1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define pi 3.14159\n#define sc 10.\n\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define KEYBOARD iChannel2\n#define KEY_RESET 82\n\nbool key_down(int key) {\n    return int(texelFetch(KEYBOARD, ivec2(key, 0), 0).x) == 1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec2 ipos = floor(sc * uv)/sc;\n\n    vec2 p = texelFetch( iChannel0, ivec2(fragCoord), 0 ).xy - 0.5;\n    \n    if (key_down(KEY_RESET)) {\n        fragColor = vec4(0.);\n        return;\n    } \n    \n    float r = 0.5;\n    float d = length(uv-p);\n    float k = 0.4 + d;\n\n    float s = step(d, 0.005);// + 0.05 * thc(4., 10. * length(p) - iTime));\n    s = smoothstep(-k, k, -d + 0.);\n    float x = texelFetch( iChannel1, ivec2(fragCoord), 0 ).x;\n    //s = 4. * s * s * s;\n    //col *= 0.995;\n    //col = max(0., col - 0.001);\n\n    vec3 e = vec3(1.);\n    x = clamp(x, 0., 1.);\n    vec3 col = max(vec3(x), s * pal(s + iTime, e, e, e, vec3(0., 0.33, 0.66)));\n    \n    fragColor = vec4(col, 1.);\n}","name":"Buffer B","description":"","type":"buffer"}]}