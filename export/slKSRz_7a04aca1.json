{"ver":"0.1","info":{"id":"slKSRz","date":"1640103346","viewed":84,"name":"Test6  - interfering circles","username":"gorplex","description":"interfering circles\nnote the discontinuous modulus bands (@ multiples of d=0.25 screen heights) ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\n//hsv2rgb\n// from https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nfloat sdfCircle(vec2 c, vec2 p)\n{\n    return length(p-c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // centerd coordinates (from -1 to 1)\n    vec2 cuv = 2.0*fragCoord/iResolution.xy-1.0;\n    cuv.x *= iResolution.x/iResolution.y;\n    \n    vec2 mp = (2.0*iMouse.xy/iResolution.xy-1.0);\n    mp.x *= iResolution.x/iResolution.y;\n\n    float f = 0.0;\n    f += 2.0*smoothstep(-0.2,0.3,mod(sdfCircle(vec2(0.0), cuv), 0.25));\n    f += 2.0*smoothstep(-0.2,0.3,mod(sdfCircle(mp, cuv), 0.25));\n    \n    vec3 col = hsv2rgb(vec3(f, f, f));\n    //vec3 col = vec3(f, 0., 0.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}