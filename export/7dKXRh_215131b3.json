{"ver":"0.1","info":{"id":"7dKXRh","date":"1634350476","viewed":80,"name":"Linear Stepped Gradient","username":"vitasa","description":"Linear Gradient from one color to another based on number of divisions. \n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient","rgb","stepped"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 encodeSRGB(vec3 linearRGB)\n{\n    vec3 a = 12.92 * linearRGB;\n    vec3 b = 1.055 * pow(linearRGB, vec3(1.0 / 2.4)) - 0.055;\n    vec3 c = step(vec3(0.0031308), linearRGB);\n    return mix(a, b, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec4 Color1 = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 Color2 = vec4(1.0, 1.0, 1.0, 1.0);\n    float divisions = 20.0;\n \n    float d = floor(uv.x * divisions) / (divisions - 1.0);\n    \n    fragColor = vec4(encodeSRGB(vec3(d)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}