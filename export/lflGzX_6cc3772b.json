{"ver":"0.1","info":{"id":"lflGzX","date":"1703313424","viewed":66,"name":"licorice!!!","username":"palm82","description":"following the tut: https://www.youtube.com/watch?v=khblXafu7iA&t=340s","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rot3D(vec3 p, vec3 axis, float angle) {\n    return mix(dot(axis, p) * axis, p, cos(angle)) \n           + cross(axis, p) * sin(angle);\n}\n\nmat2 rot2D(float angle){\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nfloat sdSphere(vec3 p, float s) {\n    return length(p) - s;\n}\n\nfloat sdBox(vec3 p, vec3 b) {\n    vec3 q = abs(p) - b;\n    return length(max(q, 0.)) + min(max(q.x, max(q.y, q.z)), 0.);\n}\n\nfloat smin( float a, float b, float k )\n{\n\tfloat h = max(k - abs(a-b), 0.0) / k;\n\treturn min(a, b) - h*h*h * k * (1.0/6.0);\n}\n\nfloat map(vec3 p, float t) {\n    p.z += iTime * .4;\n    p.xy = fract(p.xy) - .5;\n    p.z = mod(p.z, .25) - .125;\n    p.xy *= rot2D(t*sin(iTime*0.5));\n    //p.yz *= rot2D(t*sin(iTime*0.5));\n    //p.xz *= rot2D(t*sin(iTime*0.5));\n\n    float box = sdBox(p, vec3(.1));\n\n    return box;\n}\n\nvec3 palette(in float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 0.5);\n    vec3 d = vec3(0.00, 0.33, 0.67);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 m = (iMouse.xy * 2. - iResolution.xy) / iResolution.y;\n\n    vec3 ro = vec3(0, 0, -3);\n    vec3 rd = normalize(vec3(uv, 1));\n    vec3 col = vec3(0);\n\n    float t = 0.;\n\n    int i;\n    for (i=0; i<80; i++) {\n        vec3 p = ro + rd * t;\n        p.xy *= rot2D(t*0.2 * m.x);\n        p.y += sin(t * m.y) * .3;\n\n        float d = map(p, t);\n        t += d;\n\n        if (d < 0.01 || t > 100.) break;\n    }\n\n    col = palette(t * .04 + float(i)*0.01);\n\n    // Output to screen\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}