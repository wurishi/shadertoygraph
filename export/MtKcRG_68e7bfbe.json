{"ver":"0.1","info":{"id":"MtKcRG","date":"1536846484","viewed":192,"name":"First Bass Audio Visual","username":"Shadeyboi","description":"Starting to mess around with some sound shaders","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","previewfilepath":"/media/ap/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// SDF Sphere\nfloat sphere(vec3 p, float radius){\n    return length(p)-radius;\n}\n\n// Map distance to all objects in the scene\nfloat map(vec3 p)\n{\n    \n    int tx = int(p.x);\n    float fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n\tfft *= 3.3;\n    \n    float radius = 0.4;\n    float d = .11 * (sin(p.x*6.4*fft) * sin(p.y*6.*fft) * sin(p.z*8.*fft) );\n    return sphere(p, radius + d);\n}\n\n\nfloat trace(vec3 origin, vec3 r) \n{\n  float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 p = origin + r * t;\n        float d = map(p);\n        //t += d*0.5;\n        t += d;\n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv *2.-1.; // Remap the space to -1. to 1.\n    uv.x *= iResolution.x/iResolution.y; // Correct aspect ratio\n    \n    vec3 color = vec3(1., .25, .75);\n   \tvec3 ray = normalize(vec3(uv, 1.5));\n    vec3 origin = vec3(0.0, 0.0, -1.);\n    \tfloat t = trace(origin, ray);\n    \n    vec3 fc = vec3(color);\n\n    fc -= t;\n\n    // Output pixels to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}