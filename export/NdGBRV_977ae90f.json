{"ver":"0.1","info":{"id":"NdGBRV","date":"1658454332","viewed":52,"name":"triple charge","username":"graygoose","description":"#define DRAW in common to use mouse as a source.\n#define XY_MAP in common to vary field parameters over space.","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["diffusion","physics","fields","charge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 Q, in vec2 U )\n{    \n    Q = texture(iChannel0, U/R);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define DECAY 0.999\n#define S vec3(1.)\n\n#define OP(v) (v.y * cos(v.x) + v.z * sin(v.x))\n\n#define invOPA(v) (v.x * acos(v.y))\n#define invOPB(v) (v.x * asin(v.y))\n#define invOP(a, b) float(invOPA(a) + invOPB(b))\n\n#define sBR vec3(1.)\n#define sRG vec3(1.)\n#define sGB vec3(1.)\n#define BR(O) (OP(O.brg * sBR) - invOP(O.br, O.bg))\n#define RG(O) (OP(O.rgb * sRG) - invOP(O.rg, O.rb))\n#define GB(O) (OP(O.gbr * sGB) - invOP(O.gb, O.gr))\n\n#define CHG(O) vec3(BR(O), RG(O), GB(O))\n\n\nfloat PERM(vec4 color) {\n    return dot(color.rgb, vec3(.033));\n}\n\nvoid add_color(in vec2 uv, inout vec4 O){\n    O += SOURCE(uv, iMouse.xy / iResolution.xy, abs(cos(iTime*.13))*.05,\n           vec4(-sin(iTime) * sin(iTime),\n           sin(iTime*.35) * cos(iTime),\n           sin(iTime),  cos(iTime*.62)));\n\n    O += SOURCE(uv, iMouse.xy / iResolution.xy, abs(sin(iTime*0.2))*0.03,\n           vec4(cos(iTime*.5) * cos(iTime*.35),\n           tan(iTime) * sin(iTime*.5),\n           sin(iTime*.5),  tan(iTime)));\n\n}\n\nvoid mainImage(out vec4 O, in vec2 U) {\n    vec2 uv = U / R;\n    vec4 L = lap(iChannel0, U, R) * PERM(O);\n\n    O = texelFetch(iChannel0, ivec2(U), 0);\n    O *= DECAY;\n\n   \n    vec3 new_chg = CHG(O);\n    \n     smoothstep(0.0, .1, L * (.5 + .5 * sin(O.r) * cos(O.b))).rgb;\n\n    if (iFrame <= 100) {\n        if (iFrame < 1)\n            O = vec4(.0);\n        init_scene(U / R, O);\n    }\n    \n    if (sign(iMouse.z) == 1.) \n        add_color(uv, O);\n    \n    \n    O = clamp(O, 0., 1.);\n}\n\n/*\nvoid mainImage(out vec4 O, in vec2 U) {\n    vec2 uv = U / R;\n    vec4 L = lap(iChannel0, U, R) * PERM(O);\n\n    O = texelFetch(iChannel0, ivec2(U), 0);\n    O *= DECAY;\n\n    vec3 chg = vec3(BR(O), RG(O), GB(O));\n    O += vec4(chg.zxy * S.r + chg.xyz * S.b + chg.yzx * S.g, 0.0) *\n         smoothstep(0.0, 1.0, L * (.5+.5 * sin(O.r) * cos(O.b)));\n\n    if (iFrame <= 100) {\n        if (iFrame < 1)\n            O = vec4(0.0);\n        init_scene(U / R, O);\n    }\n\n    if (sign(iMouse.z) == 1.0) {\n        O += SOURCE(uv, iMouse.xy / iResolution.xy, 0.05, vec4(-sin(iTime) * cos(iTime),\n                                                               sin(iTime) * cos(iTime),\n                                                               sin(iTime),\n                                                               cos(iTime)));\n    }\n}*/\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//#define XY_MAP\n\n#define R iResolution.xy\n\n#define A(U) texture(iChannel0, (U)/R)\n#define B(U) texture(iChannel1, (U)/R)\n#define C(U) texture(iChannel2, (U)/R)\n#define D(U) texture(iChannel3, (U)/R)\n\n#define SOURCE(p, o, r, col) length(o - p) < r ? col : vec4(0.);\nvoid init_scene(in vec2 uv, inout vec4 col) {\n    col += SOURCE(uv, vec2(.33, .33), .005, vec4(1., 0., 0., 0.));\n    col += SOURCE(uv, vec2(.50, .75), .005, vec4(0., 1., 0., 0.));\n    col += SOURCE(uv, vec2(.66, .33), .005, vec4(0., 0., 1., 0.));\n}\n\nvec2 wrap(in vec2 p, in vec2 res) {\n    vec2 wrapped = mod(p, res);\n    wrapped += step(wrapped, vec2(0.0)) * res;\n    return wrapped;\n}\n\n\nvec4 lap(in sampler2D c, in vec2 p, in vec2 r) {\n    vec4 sum = vec4(0.0);\n\n    sum += texelFetch(c, ivec2(wrap(p + vec2(0, -1), r)), 0);\n    sum += texelFetch(c, ivec2(wrap(p + vec2(-1, 0), r)), 0);\n    sum -= 4.0 * texelFetch(c, ivec2(wrap(p + vec2(0, 0), r)), 0);\n    sum += texelFetch(c, ivec2(wrap(p + vec2(1, 0), r)), 0);\n    sum += texelFetch(c, ivec2(wrap(p + vec2(0, 1), r)), 0);\n\n    return sum;\n}\n","name":"Common","description":"","type":"common"}]}