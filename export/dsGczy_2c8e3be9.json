{"ver":"0.1","info":{"id":"dsGczy","date":"1696258588","viewed":17,"name":"Triangular crystals","username":"Acre","description":"Study Polar Mod\nA kind of polar coordinates\nReference URL\nhttps://qiita.com/kaneta1992/items/21149c78159bd27e0860","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"WdfcWr","parentname":"polar smooth fold"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = acos(-1.0);\nconst float pi2 = pi*2.;\n\nmat2 rotate2d(float angle)\n{\n\treturn mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n}\n\nfloat sdEquilateralTriangle(in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p=vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\nvec2 PolarMod(vec2 p, float r)\n{\n    float a =  atan(p.x, p.y) + pi/r;\n    float n = pi2 / r;\n    a = floor(a/n)*n;\n    return p*rotate2d(-a);\n}\n\nvec3 teal_blue=vec3(0.0,0.329,0.533);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    float d=1.0;\n\n    vec3 col;\n    if( iMouse.z>0.001 )\n    {\n      col=vec3(PolarMod(p,iTime),0.0);\n    }\n    d=sdEquilateralTriangle(PolarMod(p,iTime),0.5);\n    col=(d>0.0) ? col:teal_blue;\n\n\tfragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}