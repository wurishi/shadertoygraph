{"ver":"0.1","info":{"id":"XXsSWB","date":"1710160543","viewed":111,"name":"Newton fractal (test)","username":"Felox","description":"Newton fractal","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define maxIter 100\n\nuint argmin(vec3 a)\n{\n   float YltX = float(a.y < a.x);\n   float ZltX = float(a.z < a.x);\n\n   return uint(mix(YltX, 2.0 * ZltX, ZltX+float(a.y==a.z)));\n}\n\nvec2 prd(vec2 a, vec2 b) {\n    return vec2(a.x*b.x-a.y*b.y, b.x*a.y+b.y*a.x);\n}\n\nvec2 div(vec2 a, vec2 b) {\n    return vec2(a.x*b.x+a.y*b.y, b.x*a.y-b.y*a.x) / (b.x*b.x + b.y*b.y);\n}\n\nvec2 poly3coefs(vec2 a, vec2 b, vec2 c, vec2 z) {\n    //return prd(prd(z-a, z-b), z-c);\n    return prd(prd(z,z),z) - prd(a+b+c, prd(z, z)) + prd(prd(a,c)+prd(a,c)+prd(a,c), z) - prd(prd(a,b), c);\n}\n\nvec2 derv3coefs(vec2 a, vec2 b, vec2 c, vec2 z) {\n    return 3.*prd(z, z) - 2.*prd(a+b+c, z) + prd(a,c) + prd(c,b) + prd(b,a);\n}\n\nvec2 calcNewton(int iter, vec2 a, vec2 b, vec2 c, vec2 z) {\n    for (int i=0; i<iter; i++) {\n        //z = div(2.*prd(prd(z, z), z) + 1., 3.*prd(z, z));\n        z = z - div( poly3coefs(a,b,c,z), derv3coefs(a,b,c,z) );\n    }\n    return z;\n}\n\nvec3 calcNewtonLights(int iter, vec2 a, vec2 b, vec2 c, vec2 z) {\n    vec3 mins = vec3(10000.);\n    for (int i=0; i<iter; i++) {\n        //z = div(2.*prd(prd(z, z), z) + 1., 3.*prd(z, z));\n        z = z - div( poly3coefs(a,b,c,z), derv3coefs(a,b,c,z) );\n        mins.x = min(mins.x, length(z-a));\n        mins.y = min(mins.y, length(z-b));\n        mins.z = min(mins.z, length(z-c));\n    }\n    return mins;\n}\n\nvec2 categ(int iter, vec2 a, vec2 b, vec2 c, vec2 z0) {\n    vec2 z = calcNewton(iter, a, b, c, z0);\n    vec3 dists = vec3(length(a-z), length(b-z), length(c-z));\n    return vec2(float(argmin(dists)), length(z0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y*2.;\n\n    vec2 a = vec2(1, 0)+vec2(cos(iTime), sin(iTime))*.01;\n    vec2 b = vec2(-1./2., sqrt(3.)/2.);\n    vec2 c = (iMouse.xy-.5*iResolution.xy)/iResolution.y;\n    //vec2 c = vec2(-1/2, -sqrt(3.)/2.);\n    \n    float t = 50.-pow(9./10., iTime-37.-4.);\n    \n    vec3 result1 = calcNewtonLights(int(t), a, b, c, uv);\n    vec3 result2 = calcNewtonLights(int(t)+1, a, b, c, uv);\n    \n    float mergeVal = t - floor(t);\n    vec3 result = (1.-mergeVal)*result1+result2*mergeVal;\n    \n    vec3 col = 1.-result;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}