{"ver":"0.1","info":{"id":"tdjfzR","date":"1589409695","viewed":417,"name":"costasArray2","username":"ollj","description":"hmmm i would need a 3d costas array?\n\nhttps://en.wikipedia.org/wiki/Primitive_root_modulo_n","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["dither","costas","costasarray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//self: https://www.shadertoy.com/view/tdjfzR\n/*\ncostas array is pattern free\nIn theory ideal for dithering\nThe greyscaling gradient is BASIC, and can easily be more distorted\n,by adding any ;u.x+=u.y*b; b!=0 offset\n*/\n\n#define base1 2.\n#define period 29.\n//the pairs (3,5) (3,7) (5,7)  make costas arrays\n//the pairs (2,11) (2,13) (2,29) look a lot like they make costas arrays\n//the function below fails for too large [base1] values\n//and it breaks for period>=37\n#define base2 base1\n\n#define zoom (iResolution.y/period)\n\nfloat costas3(float x,float y,float b\n){\n ;return float(int(round(pow(b,x)))%int(period))//round() is essential\n ;}\n\nvoid mainImage(out vec4 O, vec2 u\n){//u=u.yx\n ;float c=0.\n ;if(u.x<(period-1.)*zoom\n   &&u.y<(period-1.)*zoom\n ){\n  ;u=floor(u/zoom)\n  ;c=costas3(u.x,u.y,base1)\n  ;if(mod(floor(iTime),2.)==1.\n  ){if(u.y+1.==c)c=period-1.;else c=0.;}//monochrome\n  else  c=mod(-c+u.y,period+1.)       //greyscale\n  ;\n  ;\n  ;if(mod(floor(iTime),3.)==1.\n  ){ \n  ;\n  ;//+1 iteration to break the linear gradient\n  ;c=costas3(c,u.y,base2)//maybe a different base, that is a costas array (of same period)\n  ;if(mod(floor(iTime),2.)==1.\n  ){if(u.y+1.==c)c=period-1.;else c=0.\n   ;}\n  else  c=mod(-c+u.y,period+1.)\n  ;}\n/**/\n  ;\n  ;c=c/(period-2.)//gradient\n  ;}\n ;O=vec4(c,c,c,1.0)\n ;}","name":"Image","description":"","type":"image"}]}