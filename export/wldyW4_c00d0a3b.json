{"ver":"0.1","info":{"id":"wldyW4","date":"1609129802","viewed":70,"name":"drawing an orbit","username":"wnu","description":"orbit","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["orbit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"Main{\n    Q = A(U);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//setup thanks to wyatt its a nice way to set it up\n\n#define PI 3.1415926\n#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) texture(iChannel2,(U)/R)\n#define D(U) texture(iChannel3,(U)/R)\n#define Main void mainImage(out vec4 Q, in vec2 U)\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nfloat ln (vec3 p, vec3 a, vec3 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*dot(p-a,b-a)/dot(b-a,b-a));\n}\nfloat hash (vec2 p) // Dave H\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat random3 (in vec3 _st) {\n    return fract(sin(dot(_st,\n                         vec3(12.9898,78.233,123.24647)))*\n      43758.5453123);\n}\n\nfloat noise3 (in vec3 _st) {\n    vec3 i = floor(_st);\n    vec3 fr = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random3(i);\n    float b = random3(i + vec3(1.0, 0.0, 0.0));\n    float c = random3(i + vec3(0.0, 1.0, 0.0));\n    float d = random3(i + vec3(1.0, 1.0, 0.0));\n    \n    float e = random3(i + vec3(0.0, 0.0, 1.0));\n    float f = random3(i + vec3(1.0, 0.0, 1.0));\n    float g = random3(i + vec3(0.0, 1.0, 1.0));\n    float h = random3(i + vec3(1.0, 1.0, 1.0));\n\n    vec3 u = fr * fr * (3.0 - 2.0 * fr);\n    \n    float bf = mix(a,b,u.x);\n    float bb = mix(c,d,u.x);\n    \n    float bot = mix(bf,bb,u.y);\n    \n    float tf = mix(e,f,u.x);\n    float tb = mix(g,h,u.x);\n    \n    float top = mix(tf,tb,u.y); \n\n    return mix(bot,top,u.z);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"Main{\n    Q = A(U)*0.99;\n    vec4 data = B(vec2(0.5)); \n    vec2 pos = data.xy;\n    vec2 vel = data.zw;\n    vec2 uv = U/R;\n    uv.x *= R.x/R.y;\n    \n    vec2 draw = step(pos,uv)*(1.-step(pos+0.003,uv));\n    float d = draw.x*draw.y;\n    \n    Q.xyz += d;\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"Main{\n    Q = A(U);\n    Q.xy += Q.zw;\n    //Q.zw += (vec2(1.,0.5)-Q.xy)/1000.+sin(iTime*20.)/500.;\n    \n    float r1 = noise3(vec3(Q.x*200.+345.23,0.,0.))-0.5;\n    float r2 = noise3(vec3(Q.y*200.,0.,0.))-0.5;\n    \n    r1 = noise3(vec3(iTime*600.,0.,0.))-0.5;\n    r2 = noise3(vec3(iTime*600. + 2353.512,0.,0.))-0.5;\n    \n    Q.zw += vec2(r1,r2)/100.;\n    Q.zw = clamp(Q.zw,-1./300.,1./300.);\n    \n    if(iFrame <2){\n        Q = vec4(vec2(0.5,0.5),vec2(0.0,0.0));\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}