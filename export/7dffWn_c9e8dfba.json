{"ver":"0.1","info":{"id":"7dffWn","date":"1644773453","viewed":116,"name":"trippy_wave_2","username":"mrcharles","description":"trippy_wave_2","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["trig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define PI2 6.28318530718\n#define POINTS 6\n\nmat2 rotation2d(float angle) {\n\tfloat s = sin(angle);\n\tfloat c = cos(angle);\n\n\treturn mat2(\n\t\tc, -s,\n\t\ts, c\n\t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n\n    uv.y *= iResolution.y / iResolution.x;\n    \n    float val = 0.0;\n    float val2 = 0.0;\n    \n    for (int i = 0; i < POINTS; ++i)\n    {\n        float ni = float(i) / float(POINTS);\n        float angle = ni * 2.0 * PI;\n        float angle2 = ni * 2.0 * PI + (PI / float(POINTS));\n        \n        vec2 ruv = uv + rotation2d(angle) * vec2(0, 0.18);\n\n        val += cos(length(ruv) * 60.0 * PI + 3.0 * -iTime) * exp(-10.0 * length(ruv));\n        val2 += sin(length(ruv) * 60.0 * PI + 2.0 * -iTime) * exp(-6.0 * length(ruv));\n    }\n\n    // Time varying pixel color\n    vec3 col = vec3(val);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}