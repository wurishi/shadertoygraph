{"ver":"0.1","info":{"id":"Xl3cz8","date":"1531418435","viewed":571,"name":"Dot product example","username":"darkeclipz","description":"dot product example; move the mouse.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool point(vec2 uv, vec2 M) {\n\treturn length(uv-M) < 0.01;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 R = iResolution.xy;\n    vec2 uv = (2.*fragCoord-R)/R.y;\n    vec2 M = (2.*iMouse.xy-R)/R.y;\n\n    // Red / Green based on dot product sign.\n    //vec3 col = mix( vec3(1,0,0), vec3(0,1,0), dot(M,uv) >= 0. ? 1. : 0. );\n    \n    vec3 col = mix( vec3(1,0,0), vec3(0,1,0), smoothstep(-0.005, 0.005, dot(normalize(M),uv)));\n    \n    // Draw mouse and origin\n    col = point(uv,M) ? vec3(1) : col;\n    col = point(uv,vec2(0)) ? vec3(1) : col;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}