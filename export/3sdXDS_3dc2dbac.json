{"ver":"0.1","info":{"id":"3sdXDS","date":"1572791532","viewed":205,"name":"KIFS experiments 3","username":"rodgzilla","description":"KIFS experiments 3","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define SPEED 20.\n\nfloat PI = acos(-1.);\n\nvec3 palette(float x) {\n  float wave = sin(3. * time) * 0.5 + 0.5;\n  vec3 p = vec3(1, 1, 1);\n  vec3 q = vec3(.3, .6, 1);\n  vec3 r = vec3(.3, .6, .3);\n  vec3 s = vec3(.9, .5, .3);\n  \n  return p + q * sin(2. * PI * (x * r + s));\n}\n\nmat2 rot2d(float a) {\n  float c = cos(a), s = sin(a);\n\n  return mat2(c, s, -s, c);\n}\n\nvec3 kifs(vec3 p, float s, float tf) {\n  float t = tf * time;\n  float wave = sin(time * .3) * 0.5 + 0.5;\n\n  for (float i = 0.; i < 4.; i += 1.) {\n    p.xy *= rot2d(t + i);\n    p.xz *= rot2d(t * 0.6 - i);\n    vec3 p2 = p;\n    p2.xy *= rot2d(PI / 2.);\n    p = mix(abs(p), abs(p2), wave);\n    p -= s;\n    s *= 0.8;\n  }\n\n  return p;\n}\n\nfloat map(vec3 p) {\n  float d = 10000.;\n  float old_z = p.z;\n\n  p.xy *= rot2d(p.z / 40.);\n  vec3 rep = vec3(20);\n  p = mod(p, rep) - 0.5 * rep;\n\n  vec3 pc = kifs(p, 1. + .1 * cos(sin(p.x / 300.) + old_z / 100.), .4 + .1 * sin(old_z / 200.));\n\n  d = min(d, length(pc - vec3(0., .5 * sin(time), 0.)) - 1.);\n\n  return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n\n  vec3 ro = vec3(0, 0, -20. + SPEED * time);\n  vec3 rd = normalize(vec3(uv, 1));\n\n  float d = 0.;\n  int i;\n  for (i = 0; i < 100; i++) {\n    vec3 p = ro + d * rd;\n    float ds = map(p);\n\n    if (ds < 0.01 || ds > 100.) {\n      break;\n    }\n\n    d += ds / 2.;\n  }\n  vec3 p = ro + d * rd;\n  vec2 e = vec2(0.01, 0);\n  vec3 n = normalize(map(p) - vec3(map(p - e.xyy), map(p - e.yxy), map(p - e.yyx)));\n  vec3 l = vec3(0, 0, -70. + SPEED * time);\n  float dif = dot(n, normalize(l - p));\n\n  vec3 col = vec3(dif * palette(p.z / 5.));\n  fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}