{"ver":"0.1","info":{"id":"Md2BDG","date":"1502057546","viewed":262,"name":"Visualiser 1","username":"bytearray","description":"visualises","likes":10,"published":1,"flags":96,"usePreview":0,"tags":["musicmultipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy; //screen space\n    fragColor = vec4(texture( iChannel0, uv ).xyz, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ldfSDj","filepath":"https://soundcloud.com/bigbeatparis/be-mine-original-mix","previewfilepath":"https://soundcloud.com/bigbeatparis/be-mine-original-mix","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat interpolate(vec2 pos)\n{\n    float a = texelFetch(iChannel0, ivec2(pos), 0).x;\n    float b = texelFetch(iChannel0, ivec2(pos)+ivec2(1, 0), 0).x;\n    return mix(a, b, fract(pos.x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; //screen space\n    float xf = iResolution.x / iResolution.y; //make things sqare\n    vec2 c = vec2(xf*(uv.x - 0.7), uv.y - 0.5);\n    \n    \n    float angle = atan(c.y / abs(c.x)); //angle of uv to center\n    float apos = (angle + PI) / (PI*2.0); //angle mapped to 0 - 1\n    float tx = apos*512.0; //sound texture is 2x512\n    float dist = sqrt(c.x*c.x + c.y*c.y);\n    \n    //render previous layer\n    vec4 back = vec4(texture( iChannel1, uv+vec2(0.01, 0.0)).xyz, 1.0);\n    back *= 0.95;\n    \n    \n    // first row is frequency data (48Khz/4 in 512 texels, meaning 23 Hz per texel)\n\tfloat freq = interpolate(vec2(tx, 0)); \n    // second row is the sound wave, one texel is one mono sample\n    float wave = interpolate(vec2(tx, 1));\n    \n    \n    \n    float mfreq = (freq/3.0) + 0.2;\n    float mwave = abs(wave/4.0);\n    \n\tvec4 dfreq = vec4((dist > mfreq && dist < mfreq+0.01) ?\n    \t\tvec4(3.0*wave, 0.5*sin(iTime), mod(wave, 10.0), 1.0)*0.6:\n            vec4(0.0, 0.0, 0.0, 0.0));\n    \n    vec4 dwave = vec4((dist > mwave && dist < mwave+0.02) ?\n    \t\tvec4(mod(wave, 0.1)*5.0, mod(wave, 0.2)*5.0, mod(wave, 0.05), 1.0):\n            vec4(0.0, 0.0, 0.0, 0.0));\n    \n    fragColor = back + dfreq + dwave;\n}\n","name":"Buf A","description":"","type":"buffer"}]}