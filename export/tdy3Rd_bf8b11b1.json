{"ver":"0.1","info":{"id":"tdy3Rd","date":"1571043040","viewed":326,"name":"ShaderDojo 040","username":"antonOTI","description":"some raymarching experiment.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["training"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a)\n{\n    float sa = sin(a); float ca = cos(a);\n    return mat2(ca,-sa,sa,ca);\n}\n\nfloat map(vec3 p)\n{\n    \n    vec3 cp = p;\n    p.xy *= 2.;\n    float r = iTime * .75;\n    for(float i = 0.; i < 5.; ++i)\n    {\n        p = abs(p);\n        p.x -= 1.;\n        p.xy *= rot(r);\n        p.xz *= rot(r * .75);\n        p.yz *= rot(r * .5);\n        r *= .9;   \n    }\n    \n    float dist = max(p.x,max(p.y,p.z)) - 1.;\n    \n    p = abs(cp);\n    \n    float tunnel = max(p.x, p.y) - 15.;\n    \n//    dist = min(dist, -tunnel);\n    \n    return dist;\n}\n\nconst float far = 40.;\nconst float sp = 32.;\n\nfloat ray(vec3 cp, vec3 rd)\n{\n    cp += rd * far;\n    for(float st =0.; st < 1.; st += 1./sp)\n    {\n    \tfloat cd = map(cp);\n        if(cd < .01)\n        {\n            return st;\n        }\n        \n        cp -= rd * cd;\n    }\n    return 1.;\n}\n\nvec3 lookAt(vec3 ro, vec3 rt, vec2 uv)\n{\n    vec3 fd = normalize(rt - ro);\n    vec3 ri = cross(fd, vec3(0.,1.,1.));\n    vec3 up = cross(ri, fd);\n    return fd + ri * uv.x + up * uv.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) /iResolution.y;\n\n    vec3 ro = vec3(0.,0.,-10.);\n    vec3 rs = vec3(0.,0.,0.);\n    vec3 rd = lookAt(ro,rs,uv);\n    \n    float st = ray(ro, rd);\n    st = 1.-st;\n    \n    fragColor = vec4(st);\n}","name":"Image","description":"","type":"image"}]}