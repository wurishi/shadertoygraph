{"ver":"0.1","info":{"id":"ftK3zz","date":"1637264715","viewed":263,"name":"Through the hole","username":"peremoya2000","description":"A camera flying through a raymarched space torus.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["space","psychedelic","interestellar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fovzoom = .5;\nfloat radius = .6;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    //Calculate render parameters\n    float shake = .4*(1.-abs(sin(iTime*.1)))+.01;\n    vec3 camPos = vec3(0,sin(iTime*50.)*shake*.1,-1.38-shake*.75),\n    pivot = vec3(.7+cos(iTime*40.+.2)*shake*.2,cos(iTime*12.)*shake,0),\n    u = normalize(pivot-camPos),\n    r = vec3(0,1,0),\n    f = cross(u,r),\n    sCenter = camPos+f*fovzoom,\n    screenPoint = sCenter + uv.x * r + uv.y * u,\n    rayDir = normalize(screenPoint-camPos);\n    \n    //Raymarch for the interior of a torus\n    vec3 ray;\n    float rayL, rayStep;   \n    for (int i=0; i<50; ++i){\n        ray = camPos + rayDir * rayL;\n        rayStep = -(length(vec2(length(ray.xz)-1.1f, ray.y)) - radius);\n        if(rayStep<.001) break;\n        rayL += rayStep;\n    }\n    \n    //Calculate torus UVs\n    vec3 col = vec3(0);\n    vec2 tUV = vec2(0);\n    if(rayStep<.001){\n        tUV.x = sin(atan(ray.x,ray.z*10.)+iTime)+1.;\n        tUV.y = sin(atan(length(ray.xz)-1.f, ray.y)+iTime)+1.; \n    } \n   \n   //Calculate rainbow stripes\n   vec3 mask = vec3(sin(tUV.y*30.+iTime)*.5+.5) * \n   vec3(sin(tUV.y*9.f-iTime*0.8)*.5+.5) *\n   vec3(sin(tUV.y*17.-iTime*0.4)*.5+.5);\n   col = 0.5 + 0.5*cos(iTime+tUV.xyx+vec3(0,2,4));    \n\n    // Output to screen\n    fragColor = vec4(texture(iChannel0,tUV).xyz+mask*col,1.0);\n}","name":"Image","description":"","type":"image"}]}