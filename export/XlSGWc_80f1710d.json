{"ver":"0.1","info":{"id":"XlSGWc","date":"1433286610","viewed":184,"name":"lost in mesh","username":"public_int_i","description":"bending the ray","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","bendm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//Creative Commons License\n//This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\n//by Ethan Alexander Shulman aka public_int_i\n\n#define EPSILON .05\n#define FOV 90.\n\nconst float FOV_SCALE = 20./FOV;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(.5);\n    uv.y *= iResolution.y/iResolution.x;\n    \n\tvec3 rp = vec3(0.,0.,iTime);\n    vec3 rd = normalize(vec3(sin(iTime*.5),0.,cos(iTime)));\n    vec3 rr = cross(rd,vec3(0.,1.,0.));\n    rd = normalize(rd*FOV_SCALE + uv.x*rr + uv.y*cross(rd,rr));\n\trr = vec3(cos(iTime),sin(iTime*.2),0.);\n    \n    vec3 c = vec3(0.);\n\tfloat d = 0.,dp;\n    for (int i = 0; i < 256; i++) {\n        vec3 lr = mod(rp,1.)-vec3(.5);\n        dp = max(.1,min(1.,(abs(lr.z)+abs(lr.x))*abs(cos(rp.y)*.7)*1.05));\n        d = length(lr)-dp;\n        c += max(0.,1.-d)*.003;//*texture(iChannel0,(rp.xy+rp.yz)*.1).xyz;\n        \n        if (d < EPSILON) break;\n        rp += d*rd*.2;\n        rd = normalize(rr*d*.1+rd);\n    }\n    if (d < EPSILON) {\n    \tc += texture(iChannel0,(rp.xy+rp.yz)*.1).xyz*.2;\n    }\n    \n    fragColor = vec4(c,1.);\n}","name":"","description":"","type":"image"}]}