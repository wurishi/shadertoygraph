{"ver":"0.1","info":{"id":"MtdcRX","date":"1533510172","viewed":281,"name":"soft squigs","username":"pixlpa","description":"some generative swirling forms","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["flat","animated","liquid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Value Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = smoothstep(0.,1.,f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 aspect = vec2(iResolution.x/iResolution.y,1.);\n\n    // Time varying pixel color\n    vec2 uvblop = (uv-aspect*0.5)*3.;\n    float rotate = iTime*0.2;\n    uvblop *= mat2(cos(rotate), -sin(rotate), sin(rotate), cos(rotate));\n    uvblop += uvblop*smoothstep(2.5,0.,length(uvblop))*-3.;\n    vec3 col = vec3(noise(uv*0.2+vec2(0.,iTime*0.5)))*vec3(0.9,0.2,0.5)*0.85+0.85;\n    col.r += noise(uvblop*0.3+vec2(11.,iTime*0.15))*0.43;\n    col.g += noise(uvblop*0.25+vec2(16.,iTime*0.18))*0.63;\n    col.b += noise(uvblop*0.15+vec2(14.,iTime*0.25))*0.33;\n   \n    float clod = noise((uvblop *0.5+ vec2(noise(uv*3.3),noise(uv*7.4+vec2(-iTime*0.1,0.)))*0.5)*4.+vec2(iTime*0.4,0.));\n    col.r += (clod-0.35)*1.45 * step(0.14,clod);\n    clod = noise((uvblop *0.5+ vec2(noise(uv*3.3+0.05),noise(uv*7.4+vec2(-iTime*0.1,0.)+0.1))*0.5)*4.+vec2(iTime*0.4,0.));\n    col.g += (clod-0.35)*1.75 * step(0.17,clod);\n\tclod = noise((uvblop *0.5+ vec2(noise(uv*3.3+0.07),noise(uv*7.4+vec2(-iTime*0.1,0.)+0.2))*0.5)*4.+vec2(iTime*0.4,0.));\n    col.b += (clod-0.25)*1.85 * step(0.1,clod);\n\n    // Output to screen\n    fragColor = vec4(col*0.5+0.5,1.);\n}","name":"Image","description":"","type":"image"}]}