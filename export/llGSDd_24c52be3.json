{"ver":"0.1","info":{"id":"llGSDd","date":"1486448113","viewed":112,"name":"Unwraveling Inward","username":"sea","description":"Mesmerizing.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["polar","coordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.1415926\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    float angle = -iTime;\n    \n    float x = uv.x * cos(angle) - uv.y * sin(angle);\n    float y = uv.y * cos(angle) + uv.x * sin(angle);\n    \n    uv.x = x;\n    uv.y = y;\n    \n    float a = (atan(uv.y, uv.x) / pi + 1.0);\n    float r = sqrt(uv.x * uv.x + uv.y * uv.y);\n    \n    r = 2.0 * r * (1.0 - cos(a * 1.0));\n    \n    float t = 1.0;\n    uv.x = 2.0 * r * cos(t) * (1.0 - cos(t));\n    uv.y = 2.0 * r * sin(t) * (1.0 - cos(t)) * 10.0;\n    \n    fragColor = vec4(texture(iChannel0, uv) * vec4(1.0, 0.0, 0.0, 1.0) * (1.0 - vec4(uv, 1.0, 1.0)));\n}","name":"Image","description":"","type":"image"}]}