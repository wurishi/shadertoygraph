{"ver":"0.1","info":{"id":"3st3DS","date":"1569225290","viewed":266,"name":"Smoke Fade","username":"me4502","description":"A smokey fade out effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["smoke","fade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\n// pow does not support negative values.\nfloat workingPow3(float x) {\n    return x * x * x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float modifiedTime = workingPow3(fract(iTime / 2.) - 0.5) * 4.;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float time = iTime / 3.;\n    \n    float verticalDisp = clamp(fbm(fragCoord/50.) * modifiedTime, -1., 1.) / 3.;\n    float horizontalDisp = clamp(fbm(fragCoord.yx/50.) * modifiedTime, -1., 1.) / 3.;\n    \n    vec2 offsetCoords = uv - vec2(horizontalDisp, verticalDisp);\n    vec4 tex = texture(iChannel0, offsetCoords);\n    \n    // Output to screen\n    fragColor = mix(vec4(0.), tex, clamp(tex.a * (1. - (abs(modifiedTime)*2. + fbm(uv * 3.))), 0., 1.));\n}","name":"Image","description":"","type":"image"}]}