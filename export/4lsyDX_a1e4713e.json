{"ver":"0.1","info":{"id":"4lsyDX","date":"1506692563","viewed":263,"name":"Truchet Roads","username":"morgaza","description":"Satisfying\n\nhttp://paulbourke.net/geometry/tilingplane/index.html#truchet","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation","truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#if defined(_STANDALONE)\n\nin vec4 texcoord;\nout vec4 out_color;\nuniform float time;\n\n#define fragCoord texcoord.zw\n#define iTime time\n#define fragColor out_color\n\n#define MAIN() void main()\n\n#else\n\n#define const\n#define MAIN() void mainImage(out vec4 fragColor, in vec2 fragCoord)\n\n#endif\n\n\n\n#define PI 3.14159265359\n#define DIAMETER 0.4f\n#define SCALE 100.0f\n\nfloat clamp01(float f)\n{\n\treturn max(min(f, 1.0f), 0.0f);\n}\n// Source https://www.shadertoy.com/view/4djSRW\nfloat hash13(vec3 p3)\n{\n\tp3  = fract(p3 * 0.1031f);\n    p3 += dot(p3, p3.yzx + 19.19f);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat func(float f)\n{\n\treturn (f > 0.5f ? (0.5f - (f - 0.5f)) : f) * 2.0f;\n}\nvec3 road(float f)\n{\n\treturn f > 0.8 ? vec3(mix(vec3(0.3f), vec3(0.8f), (f - 0.8f) * 5.0f)) : vec3(mix(vec3(0.4f, 0.5f, 0.1f), vec3(0.3f), clamp01(f * 5.0f)));\n}\n\n\nconst vec2 coords0[] = vec2[]( vec2(-1, -1), vec2(-1, 1) );\nconst vec2 coords1[] = vec2[]( vec2(1, 1), vec2(1, -1) );\n\nMAIN()\n{\n\tvec2 uv = (fragCoord) / SCALE;\n\tconst vec2 coord = floor(uv);\n\tuv = mod(uv, 1.0f) * 2.0f - 1.0f;\n\t\n\tconst float t = iTime * 0.5f;\n\tconst int val0 = int(floor(hash13(vec3(coord, floor(t))) * 1.99999f));\n\tconst int val1 = int(floor(hash13(vec3(coord, ceil(t))) * 1.99999f));\n\tconst float lerp = clamp01((t - floor(t)));\n\t\n\tfloat f = 1.0f;\n\tvec2 r[] = vec2[]( coords0[val0], coords1[val1] );\n\tint idx = 0;\n\tif(val0 != val1)\n\t{\n\t\tf = lerp;\n\t\tif(f < 0.5f)\n\t\t{\n\t\t\tf *= 2.0f;\n\t\t\tidx = val0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf = (0.5f - (f - 0.5f)) * 2.0f;\n\t\t\tidx = val1;\n\t\t}\n\t\t\n\t\tf = pow(f, 10.0f) * 1000.0f;\n\t\tr[0] = coords0[idx] + vec2(0, f * coords0[idx].y);\n\t\tr[1] = coords1[idx] + vec2(f * coords1[idx].x, 0);\n\t\tf += 1.0f;\n\t}\n\t\n\tfloat result = 0.0f;\n\tconst float rad_min = (f - DIAMETER * 0.5f);\n\tconst float rad_max = (f + DIAMETER * 0.5f);\n\tconst float tile_mask = clamp01((1.0f - length(uv) * 0.95f) * 20.0f);\n\tfor(int i = 0; i < 2; i++)\n\t{\n\t\tconst float dist = distance(r[i], uv);\n\t\tif(dist >= rad_min && dist <= rad_max)\n\t\t{\n\t\t\tconst float r = (dist - rad_min) / (rad_max - rad_min);\n\t\t\tresult = max(func(r), result);\n\t\t}\n\t}\n\t\n\tfragColor = vec4(road(clamp01(result) * tile_mask), 1.0f);\n}","name":"Image","description":"","type":"image"}]}