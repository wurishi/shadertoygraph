{"ver":"0.1","info":{"id":"tlsGDs","date":"1558199977","viewed":430,"name":"sensors","username":"lennyjpg","description":"dfghdfghdfghdfgh","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["circles","grid","random","distance","tiles","mono"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define PI 3.141592653589793\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.y;\n    vec2 u = fract(uv.xy*5.);\n    vec2 s = fract(uv.xy*10.+0.5);\n\n    u-=0.5;\n    vec2 g = iTime*0.2+floor(uv*5.);\n\n    float r = .7;\n    float angle = PI*0.25+floor(rand(floor(g))*4.)*PI*.5;      \n    u.x+=sin(angle)*r;\n    u.y+=cos(angle)*r;\n  \n    float d = length(u);\n \tfloat k = smoothstep(d,d*1.01,0.5);\n    k =fract(d*3.0-iTime);\n    \n    k -= step(length(s-0.5),0.03);\n    fragColor = vec4(k);\n}","name":"Image","description":"","type":"image"}]}