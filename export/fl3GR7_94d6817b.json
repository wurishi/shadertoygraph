{"ver":"0.1","info":{"id":"fl3GR7","date":"1635845495","viewed":247,"name":"qr light","username":"huataishi","description":"qr light study","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2dqr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int modi(int a, int n){\n    return a - (n * int(a/n));\n}\n\nbool checkin(int x, int y, int w, int h){\n    return x>=0&&x<w && y>=0&&y<h; \n}\n\nint pow2(int x){\n    return int(pow(2.,float(x)));\n}\n\nconst int QR_LEN = 29;\nint QR[QR_LEN];\n\nvoid qrLoad(){\n    QR[28]=533147263;QR[27]=273053761;QR[26]=391663197;QR[25]=391794013;QR[24]=391099741;QR[23]=273901121;QR[22]=534074751;QR[21]=111104;QR[20]=52090595;QR[19]=229524769;QR[18]=3251061;QR[17]=49859844;QR[16]=282388420;QR[15]=425654187;QR[14]=115532266;QR[13]=364934657;QR[12]=110253038;QR[11]=500794045;QR[10]=309982567;QR[9]=28167609;QR[8]=502435577;QR[7]=52343552;QR[6]=123594111;QR[5]=152679745;QR[4]=335101021;QR[3]=380404317;QR[2]=266967645;QR[1]=383815489;QR[0]=128683391;\n}\nint qr(const int x,const int y){\n    int r = 1;\n    if (checkin(x,y, QR_LEN,QR_LEN)){\n        for (int i = 0 ; i < QR_LEN ; i++) if (y == i) r = modi( QR[i] / pow2(x) + 1, 2 );\n            return 1-r;\n    }\n}\n\nfloat circleDist(vec2 p, float radius)\n{\n\treturn length(p) - radius;\n}\n\n\n\nfloat fillMask(float dist)\n{\n\treturn clamp(-dist, 0.0, 1.0);\n}\n\n\nvec4 drawLight(vec2 p, vec2 pos, vec4 color, float dist, float range, float radius)\n{\n\t// distance to light\n\tfloat ld = length(p - pos);\n\t\n\t// out of range\n\tif (ld > range) return vec4(0.0);\n\t\n\t// shadow and falloff\n\tfloat shad = 1.;\n\tfloat fall = (range - ld)/range;\n\tfall *= fall;\n\tfloat source = fillMask(circleDist(p - pos, radius));\n\treturn (shad * fall + source) * color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p2 = fragCoord.xy + vec2(0.5);\n\tvec2 c = iResolution.xy / 2.0;\n\t\n\t//float dist = sceneSmooth(p, 5.0);\n\tfloat dist = 1.;\n\t\n\tvec2 light1Pos = iMouse.xy;\n\tvec4 light1Col = vec4(0.75, 1.0, 0.5, 1.0);\n\t\n\tvec2 light2Pos = vec2(iResolution.x * (sin(iTime + 3.1415) + 1.2) / 2.4,iResolution.y * (sin(iTime + 3.1415) + 1.2) / 2.4);\n\tvec4 light2Col = vec4(1.0, 0.75, 0.5, 1.0);\n\t\n\tvec2 light3Pos = vec2(iResolution.x * (sin(iTime) + 1.2) / 2.4, 340.0);\n\tvec4 light3Col = vec4(1., 0.75, 1.0, 1.0);\n    \n\tvec4 light4Col = vec4(0.5, 0.75, 1.0, 1.0);\n\t\n\tvec4 col = vec4(0.5, 0.5, 0.5, 1.0);\n\tcol *= clamp(min(mod(p2.y, 10.0), mod(p2.x, 10.0)), 0.9, 1.0);\n\t\n\tcol += drawLight(p2, light1Pos, light1Col, dist, 150.0, 6.0);\n\tcol += drawLight(p2, light2Pos, light2Col, dist, 200.0, 8.0);\n\tcol += drawLight(p2, light3Pos, light3Col, dist, 300.0, 12.0);\n\tqrLoad();\n    ivec2 ir  = ivec2(iResolution.xy); \n    ivec2 ip  = ivec2(fragCoord.xy);\n    ivec2 it  = ip*31/ivec2(ir.y) ;\n    int width  = 31 * ir.x / ir.y;\n    int movex = (width -31)/2;\n    it.x -= movex;\n    float qrf = float(1-qr(it.x-1, it.y-1));\n    float t = iTime;\n    float t1 = clamp((t-0.)*.2,0.,1.);\n    vec2 ar   = vec2( iResolution.x/iResolution.y,1.);\n    vec2 uv   = fragCoord/iResolution.xy;\n    vec2 p1   = uv*ar;\n    col*= (1.-qrf);\n    col.xyz *=  1.7*smoothstep(0.,.8, t1*2.-length(p1-.5));\n\tfragColor = clamp(col, 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}