{"ver":"0.1","info":{"id":"ls2fDz","date":"1500146729","viewed":896,"name":"[SH17A] game of life","username":"FabriceNeyret2","description":" a variant from [url] https://www.shadertoy.com/view/4dGSWR[/url]","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["automata","life","2tweets","conway","short","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://www.shadertoy.com/view/4dGSWR (done with help of coyote and rar)\n// which was compaction of https://www.shadertoy.com/view/4ddSRM (775)\n\nvoid mainImage( out vec4 O, vec2 U )\n{  O = texelFetch(iChannel0, ivec2(U), 0); }\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define T(a) texture(iChannel0, fract((a)/iResolution.xy) )\n//#define T(a) texelFetch(iChannel0, ivec2(mod(a,iResolution.xy)), 0 ) // +8\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec4 C = T(U); \n    O = -3.-C;\n    for (int i=0; i<9; i++)                         // count life in neighborhood\n        O += T(U+vec2(i%3,i/3)-1.);\n\n    O = vec4(    O*O==-C*O                          // 2 neighbors:survive 3:birth\n              || iFrame < 1 && tan(U.x*U.y) > 0.    // initial state. last 185 s\n          //  || length(iMouse.xy-U) < 20.          // mouse paint +25\n        );\n}\n\n\n\n\n\n\n/**   // not cyclical \n\n#define T +texture(iChannel0, P+=\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 h=1./iResolution.xy, v=h, P=U*h; h.y=v.x=0.;\n    O =  T-v) T+h) T+v) T+v)  T-h)  T-h) T-v) T-v) - 3.;      // count life in neighborhood\n\n    O = vec4(    O*O == -T+h+v)*O                             // 2 neighbors:survive 3:birth\n              || iFrame < 1 && tan(dot(U,U)) > 2.             // initial state. lates 76 s\n                             //tan(length(U*P.yx)) < 0.       // variant: lates 90 s\n        );\n}\n/**/\n\n\n\n\n\n\n/**     // 1st cyclic-world variant  - too long by 7  \n\n#define T(a) +texture(iChannel0, fract(P+=a) )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 h=1./iResolution.xy, v=h, P=U*h; h.y=v.x=0.;\n    O =  T(-h-v) T(h) T(h) T(v) T(v) T(-h) T(-h) T(-v) - 3.;  // count life in neighborhood\n\n    O = vec4(    O*O == -T(h)*O                               // 2 neighbors:survive 3:birth\n              || iFrame < 1 && tan(U.x*U.y) > 2.              // initial state.\n                             //tan(dot(U,U)) > 2.             // variant. lates 135 s\n        );\n}\n/**/\n\n\n\n\n\n\n/**  // variant using texelFetch   -2\n\n#define T(a) +texelFetch(iChannel0, ivec2(U+=a), 0 )\n//#define T(a) +texelFetch(iChannel0, ivec2(mod(U+=a,iResolution.xy)), 0 ) // +18\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 h=vec2(1,0), v=h.yx;\n    O =  T(-1.) T(h) T(h) T(v)  T(v)  T(-h) T(-h) T(-v) - 3.; // count life in neighborhood\n\n    O = vec4(    O*O == -T(h)*O                               // 2 neighbors:survive 3:birth\n              || iFrame < 1 && tan(dot(U,U)) > 2.             // initial state. lates 76 s\n                             //tan(length(U*P.yx)) < 0.       // variant: lates 90 s\n        );\n}\n/**/","name":"Buf A","description":"","type":"buffer"}]}