{"ver":"0.1","info":{"id":"XsKSWm","date":"1464780950","viewed":248,"name":"Complex exponentiation map color","username":"ale93111","description":"Iteration on the complex plane of the function f(z)=z^z^z^z^z^z...ecc for complex numbers with various methods of coloring ","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","orbit","dynamics","complex","exponentiation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Alessandro Marzo - ale93111/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// same as my other shader: https://www.shadertoy.com/view/ldVXD1 \n// but with different methods of coloring taken from:\n// iq - https://www.shadertoy.com/view/4dfGRn\n// gtoledo3 - https://www.shadertoy.com/view/Xt2SDw\n\n//supersampling\n#define  AA 2\n\nconst int max_iterations = 10;\n\nfloat izoom = 1.0/3.0; //increase denominator to increase zoom\nvec2 ioffset = vec2( 0.0, -0.11); //offset to center the picture\nvec3 color = vec3(0.0);  //RGB\n\n//Complex Exponentiation - Source: http://mathworld.wolfram.com/ComplexExponentiation.html\nvec2 powC( vec2 Z, vec2 W)\n{\n    float arg = atan(Z.y / Z.x);\n    //press mouse to remove scale animation\n    //float a = exp( -W.y*arg )*pow( dot(Z,Z), W.x/(3.0 + ((iMouse.w>0.0)? -1.0 :cos(0.2*iTime)))); \n    float a = exp( -W.y*arg )*pow( dot(Z,Z), W.x/4.0 ); //wihtout scaling animation\n    float b = W.x*arg + 0.5*W.y*log( dot(Z,Z) );\n    \n    return a*vec2(cos(b), sin(b));    \n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    for( int jj=0; jj<AA; jj++ )\n    for( int ii=0; ii<AA; ii++ )  \n\t{\n        vec2 p = (((fragCoord.yx - iResolution.xy*0.3 + vec2(float(ii),float(jj))/float(AA)) / iResolution.x) * izoom) + ioffset;\n        vec2 Z = (((fragCoord.yx - iResolution.xy*0.3 + vec2(float(ii),float(jj))/float(AA)) / iResolution.x) * izoom) + ioffset;\n    \n\t\tvec3 col = vec3(0.0);\n    \n    \tfloat k = 1.0-abs(cos(0.2*iTime));\n    \t//float k = 1.0; //wihtout exponentiation animation\n        //float k = 1.6180339887;\n    \tvec4 dmin = vec4(1000.0);\n        \n   \t\tfor(int i=0; i<max_iterations; i++) \n    \t{\n      \n        \t// Z^Z^Z...20-21 times animated between odd and even exponentiation\n        \tZ = powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,k*powC(Z,powC(Z,powC(Z,Z))))))))))))))))))));\n        \n        \t// Z^Z^Z...64-65 times animated between odd and even exponentiation\n        \t//Z = powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,k*powC(Z,Z))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));\n        \n            dmin=min(dmin, vec4(abs(0.0+Z.y + 0.5*sin(Z.x)), \n\t\t\t\t\t\t\t\tabs(1.0+Z.x + 0.5*sin(Z.y)), \n\t\t\t\t\t\t\t\tdot(Z,Z),\n\t\t\t\t\t\t\t    length( fract(Z)-0.5) ) );\n            \n        \tif( dot(Z,Z)> 0.1) break;\n    \t}\n    \n        vec3 color1 = vec3( dmin.w );\n\t\t\n\n\t\tcolor1 = color1*color1*color1*color1;\n\t\n\t\t//color *= 0.5 + 0.5*pow(abs(16.0*p.x*(1.0-p.x)*p.y*(1.0-p.y)),0.15);\n        \n    \t\n        col = vec3(smoothstep( 0.0, sqrt(3.0), float(sqrt(abs(dot(Z,Z))))),\n                   smoothstep( 0.0, sqrt(50.0), float(sqrt(abs(dot(Z,Z))))),\n                   smoothstep( 0.0, sqrt(5e20), float(sqrt(abs(dot(Z,Z))))));\n        \n        Z.x+=sin(Z.y*2.);\n\t\tZ.y+=sin(Z.x*20.)*.1;\n\t\tZ.x+=sin(Z.y*3.);\n\t\tZ.y+=sin(Z.x*5.);\n\t\n\t\tfloat rand = mod(fract(sin(dot(2.5*p,vec2(12.9898,100.233+iTime)))*43758.5453),.35);\n\t\tfloat v = 0.4; \n        float depthCull=0.1;\n\t\tvec3 col2;\n        float shade=0.1;\n  \n\t\tv +=sin(Z.x*20.0) *0.01;\n\t\tv +=sin(Z.y*120.0)*0.02;\n\t\tv +=sin(Z.y*20.0) *0.01; \n\t\tv +=sin(Z.x*4.0)  *0.2;\n\t\tv +=sin(Z.x*7.0)  *0.2;\n\t\tv=clamp(v,0.0,1.0);\n\t\tcol2 = vec3((rand*.75)+vec3(pow(v+0.2,-0.95)))*vec3(0.4, 0.2, 0.2);\n        \n        col = mix( col, vec3(0.00,0.20,0.40), 1.0-min(1.0,pow(dmin.x*0.25,0.50)) );\n   \t \tcol = mix( col, vec3(0.72,0.20,0.20), 1.0-min(1.0,pow(dmin.y*0.50,0.30)) );\n\t\tcol = mix( col, vec3(0.70,0.20,0.20), 1.0-min(1.0,pow(dmin.z*1.00,0.35) ));\n        \n        color += col*col2*col; \n    }\n    color /= float(AA*AA);\n\tfragColor = vec4( color, 1.0);\n}","name":"Image","description":"","type":"image"}]}