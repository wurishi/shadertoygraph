{"ver":"0.1","info":{"id":"wtXfWH","date":"1596572385","viewed":78,"name":"Low Escape Julia","username":"md1","description":"Simple Julia set visualization, but with a low escape radius.\n\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define max_iterations 250\n#define eR 20.0\n#define zoom 1.5\n\n\n\nfloat calc(vec2 z, vec2 c)\n{\n    for(int i = 0; i < max_iterations; i++)\n    {\n        z = vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y) + c;\n        if(dot(z, z) > eR)\n        {\n            return (float(i) - log2(log2(dot(z, z))) + 5.0) / float(max_iterations);\n        }\n    }\n    return 0.0;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 z  = zoom * (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 c = vec2(cos(iTime*0.3 - 3.1415), 0.8*sin(iTime*0.3 - 3.1415));\n  \n    float value = calc(z, c);\n    vec3 col = vec3(cos((value) * 40.0 + 3.0), cos((value) * 30.0 + 2.8), cos((value) * 35.0 + 4.0));\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}