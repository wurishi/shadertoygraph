{"ver":"0.1","info":{"id":"cl2GWz","date":"1673149331","viewed":71,"name":"genuary7_2023","username":"nafees","description":"exponential map:\n\nf(z) = e^z","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","basics","genuary"],"hasliked":0,"parentid":"mtB3Wz","parentname":"curtains exp-map grid"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 cent = vec2(0.5);\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define hue(v) ( .6 + .6 * cos( 2.*PI*(v) + vec3(0,-2.*PI/3.,2.*PI/3.) ) ) \n#define PI 3.14159\n\n// hail to the thief\nvec3 palette[10] = vec3[10](\nvec3(0.042656201869249344, 0.25434625148773193, 0.5165957808494568),\nvec3(0.08686035871505737, 0.15766902267932892, 0.1489642858505249),\nvec3(0.48808541893959045, 0.6333185434341431, 0.7216861248016357),\nvec3(0.39730414748191833, 0.31950247287750244, 0.23948518931865692),\nvec3(0.9039696455001831, 0.4972691237926483, 0.09944970905780792),\nvec3(0.28027260303497314, 0.5017772316932678, 0.6329017281532288),\nvec3(0.7951585650444031, 0.10339261591434479, 0.12999267876148224),\nvec3(0.9240946173667908, 0.9441264271736145, 0.9521055817604065),\nvec3(0.04767867177724838, 0.38672053813934326, 0.2592359781265259),\nvec3(0.7265218496322632, 0.7588484287261963, 0.7720305919647217)\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float xsize = 0.1;\n    float t = iTime * 0.1;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 3.*((fragCoord/iResolution.y) \n                - vec2(fract(iResolution.x/iResolution.y)*.5,0.));\n                // x dimension runs from 0 to xaspect. so shift by 0.5*(1-xaspect)\n\n    // calculate grid coordinates\n    vec2 gc = (uv / xsize);\n\n    uv = uv.yx;\n    uv.x += (sin(t*4.)+.5)*0.5*2.-0.;\n    gc = sin(0.5) * vec2(exp(uv.x) * cos(uv.y), exp(uv.x) * sin(uv.y)).yy;\n    //gc *= -rot(t*2.);\n    gc.x += -t*4.;\n    //gc *= rot(t*.1);\n    \n    vec2 voxel = floor(gc);\n    \n    vec2 localP = fract(gc) - cent;\n\n    // Time varying voxel color\n    vec3 col = palette[int(abs(voxel.x)) % 10]\n          * (1.-length(localP)); // mask distance from center of voxel\n\n\n    fragColor = vec4(pow(col,vec3(1./2.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}