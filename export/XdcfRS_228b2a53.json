{"ver":"0.1","info":{"id":"XdcfRS","date":"1525559600","viewed":89,"name":"A/Left Keyboard input guide ","username":"Alazorth","description":"keyboard","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["keyboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float IsKeyPressed(float key)\n{\n    return texture(iChannel0, vec2(key, 0.0)).r;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float KEY_A            = 65.5 / 256.0;\n    const float KEY_LEFT         = 37.5 / 256.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat keyLeft    = max(IsKeyPressed(KEY_A), IsKeyPressed(KEY_LEFT));\n    // Time varying pixel color\n    vec3 col = vec3(keyLeft,keyLeft,keyLeft);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}