{"ver":"0.1","info":{"id":"ltlSW4","date":"1436955197","viewed":1038,"name":"Hex Master 140ch","username":"104","description":"Trying to get a flat-shaded hex grid into 1 tweet. ","likes":27,"published":1,"flags":0,"usePreview":0,"tags":["short","tweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// size-optimizing hex ID function from iq's \"Hexagons - distance\"\n// https://www.shadertoy.com/view/Xd2GR3\n// for this challenge i'm just going to try to make a flat-shaded hex grid like this.\n// but there are also very many pretty variations.\n\n\n\n// 143 chars: cannot use inout anymore.\nvoid mainImage(out vec4 o, vec2 i)\n{\n\ti=i/iResolution.y/.1+iDate.w;\n    o.xy-=step(i-=o.xy=ceil(i+=i.x*=.577),mod(o.x+o.y,3.)+--i.yx);\n    o=mod(o.xyyy,.8);\n}\n\n\n\n\n\n\n// 140ch\n/*void mainImage(inout vec4 o, vec2 i)\n{\n\ti=i/iResolution.y/.1+iDate.w;\n    o.xy-=step(i-=o.xy=ceil(i+=i.x*=.577),mod(o.x+o.y,3.)+--i.yx);\n    o=mod(o,.8);\n}\n\n\n*/\n\n\n\n\n\n\n/*\n// 141ch\n// different coloring.\n// Now to squeeze out that last char...\nvoid mainImage(inout vec4 o, vec2 i)\n{\n\ti=i/iResolution.y/.1+iDate.w;\n    i-=o.xy=ceil(i+=i.x*=.58);\n    o.xy+=step(mod(o.x+o.y,3.)+i++.yx,i);\n    o=mod(o,.8);\n}\n*/\n\n/*\n// 146ch\n// aha! managed to obfuscate that switch() logic even further.\n// this is almost incomprehensible at this point.\nvoid mainImage(inout vec4 o, vec2 i)\n{\n\ti=i/iResolution.y/.1+iDate.w;\n    i-=o.xy=ceil(i+=i.x*=.577);\n    o.xy+=step(mod(o.x+o.y,3.)-1.+i.yx,i);\n    o=.5+.5*sin(o);\n}\n\n*/\n\n\n/*\n// 168ch\n// with optimizations from FabriceNeyret2\nvoid mainImage(out vec4 o, vec2 i)\n{\n\ti=i/iResolution.y/.1+iDate.w;\n    i-=o.xy=ceil(i+=i.x*=.577);\n    o.xy += (o.w=mod(o.x+o.y,3.)) < 1. ? i-i :o.w<2. ? i-i+1. : step(i.yx,i);\n    o=.5+.5*sin(o);\n}\n*/\n\n\n/*\n// 174ch\n// first optimization pass\nvoid mainImage(out vec4 o, vec2 i)\n{\n\ti=i/iResolution.y/.1+iDate.w;\n    i-=o.xy=ceil(i+=i.x*=.577);\n\to.xy+=step(1.,o.z=mod(o.x+o.y,3.))-step(2.,o.z)*step(i,i.yx);\n    o.z=0.;// remove this line for qbert-like variant (rotated ...)\n    o=.5+.5*sin(o);\n}\n*/\n\n// 174ch\n// pretty variation\n/*\nvoid mainImage(out vec4 o, vec2 i)\n{\n\ti=i/iResolution.y/.1+iDate.w;\n    i-=o.xy=ceil(i+=i.x*=.577);\n\to.xy+=step(1.,o.z=mod(o.x+o.y,3.))-step(2.,o.z)*step(i,i.yx);\n    o=.5+.5*sin(o-i.xyxy);\n}\n*/\n\n/*\n\n// 281ch\n// original, unoptimized version \n\nvoid mainImage(out vec4 o, vec2 i)\n{\n\ti=i/iResolution.y/.1+iDate.w;\n    \n    vec2 q = vec2( i.x*2.0*0.5773503, i.y + i.x*0.5773503 );\n\t\n\tvec2 pi = floor(q);\n\tvec2 pf = fract(q);\n\n\tfloat v = mod(pi.x + pi.y, 3.0);\n\n\tfloat ca = step(1.0,v);\n\tfloat cb = step(2.0,v);\n\tvec2  ma = step(pf.xy,pf.yx);\n\t\n\to = vec4(pi + ca - cb*ma, 0, 0);\n    o=.5+.5*sin(o);\n}\n\n\n\n*/","name":"","description":"","type":"image"}]}