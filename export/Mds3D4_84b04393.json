{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// based on noise shader by Inigo Quilez: https://www.shadertoy.com/view/XdXGW8\n\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)) );\n\n\tfloat shadowShiftSpeed = 0.05;\n\treturn -1.0 + 4.0*abs( 0.5 - fract(sin(p)*10.0+iTime*shadowShiftSpeed) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(1.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);\n\tfloat f = noise( 12.0*uv );\n\tf = 0.5 + 0.5*f;\n\t\n\tvec3 tex = texture( iChannel0, uv ).xyz;\n\tf += tex.x*0.5;\n\t\n\tfragColor = vec4( f*0.5, f*0.8, f*(0.8 + 0.2*sin(iTime*0.2)), 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mds3D4","date":"1371092402","viewed":1049,"name":"Shadowgrid","username":"ravenbrain","description":"animated gradient noise with grid exposed","likes":26,"published":1,"flags":0,"usePreview":0,"tags":["noise","grid"],"hasliked":0,"parentid":"","parentname":""}}