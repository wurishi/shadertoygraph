{"ver":"0.1","info":{"id":"MXXGz2","date":"1707751825","viewed":99,"name":" Inside a Spherical Mirror","username":"Borusse29","description":" ","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["3d","raytracing","mirror"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_BOUNCES 128\n#define REFLECTIVITY .98 // per bounce 1-REFLECTIVITY of the light is absorbed\n\n#define CAMERA_RADIUS .5\n#define X_OFFSET .1\n\n#define _pi 3.1415926535\n#define _tau 6.2831853071\n\nfloat complex_phase(vec2 z)\n{\n    return 1.*mod(atan(z.y/z.x) + _pi + _pi*float(z.x>0.), _tau);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(2.*fragCoord.x/iResolution.x-1., (2.*fragCoord.y-iResolution.y)/iResolution.x);\n       \n    vec4 angles = texture(iChannel0, vec2(0.));\n    float a = (angles.x+.1105) * _tau;\n    float b = (angles.y-.046) * _tau;\n    \n    vec3 ro = CAMERA_RADIUS * vec3(-cos(a)*cos(b),-sin(a)*cos(b),sin(b));\n    ro.x += X_OFFSET;\n    mat3 cm = mat3(cos(-b)*cos(a),cos(-b)*sin(a),sin(-b),-sin(a),cos(a),0.,-sin(-b)*cos(a),-sin(-b)*sin(a),cos(-b));\n    vec3 rd = cm * normalize(vec3(1., uv)); \n\n    for (int i = 0; i < MAX_BOUNCES; i++) {\n        // object\n        vec3 ofstRo = vec3(ro.x+.2*cos(1.7*(iTime+5.58)), ro.y+.2*sin(iTime+5.58), ro.z);\n        \n        float dotOD = dot(ofstRo,rd);\n        float dotOO = dot(ofstRo,ofstRo);\n        float dscr = dotOD*dotOD - dotOO + .01;\n        if (dscr > 0.) {\n            float dist = -dotOD - sqrt(dscr);\n            if (dist >= 0.) {\n                ofstRo += dist*rd;\n                vec3 n = -normalize(ofstRo);\n                fragColor = pow(REFLECTIVITY, float(i-1)) \n                            *vec4(n, 1.)\n                            *(.15*length(texture(iChannel1, vec2(complex_phase(n.xy)/_tau, .5*n.z+.5)).xyz)+.85);\n                return;\n            }\n        }\n        \n        // mirror\n        dotOD = dot(ro,rd);\n        dotOO = dot(ro,ro);\n        dscr = dotOD*dotOD - dotOO + 1.;\n        if (dscr >= 0.) {\n            float dist = -dot(ro,rd) + sqrt(dscr);\n            ro += dist*rd;\n            vec3 n = normalize(ro);\n            rd = reflect(rd, n);\n        }\n    }\n    \n    fragColor = vec4(0.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord != vec2(0.5)) return;\n    vec4 last = texture(iChannel0, vec2(0.));\n\n    vec2 lastMouse = iMouse.z <= 0. || iMouse.xy == iMouse.zw ? iMouse.xy : last.zw;\n\n    float a = last.x + (iMouse.x-lastMouse.x)/iResolution.x;\n    float b = last.y + (lastMouse.y-iMouse.y)/iResolution.y;\n    \n    fragColor = vec4(a, b, iMouse.xy);\n}","name":"Buffer A","description":"","type":"buffer"}]}