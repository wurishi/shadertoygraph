{"ver":"0.1","info":{"id":"4tfBD2","date":"1513266006","viewed":172,"name":"UI_Progress_Bar","username":"calx","description":"A simple Progress Bar for use in a UI setup.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["progress","timebasedmovement"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define HALF_PI 1.57079632679\n#define PI      3.14159265359\n\nfloat hash(float x)\n{\n    return fract(sin(x) * 43758.5453) * 2.0 - 1.0;\n}\n\nfloat sineInOut(float t)\n{\n  return -0.5 * (cos(PI * t) - 1.0);\n}\n\nconst float speed = 1.00;\nconst float duration = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2  uv = 2.0 * vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;   \n    \n    float sequence = floor(iTime / duration);\n    float current_time = mod(iTime, duration);\n    float start = hash(sequence);\n    float end   = hash(sequence + 1.0);\n    float pos = 0.0;      \n    float dist = speed * current_time;\n    float goal = abs(end - start);\n    \n    if (dist <= goal) \n    {\n        pos = mix(start, end, sineInOut(dist / goal));\n    } \n    else \n    {\n        pos = end;\n    }\n    \n    float f = step(uv.x, pos);\n        \n    fragColor = vec4(f);\n}\n\n\n    \n","name":"Image","description":"","type":"image"}]}