{"ver":"0.1","info":{"id":"cd3SzS","date":"1679979767","viewed":221,"name":"Lots of leaves","username":"ianertson","description":"Initially wanted to create some kind of grass texture","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["2d","art","leaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R (iResolution.xy)\n#define T (iTime)\nmat2 rot(in float a) { float c = cos(a); float s = sin(a); return mat2(c, s, -s, c); }\n\nuint hash21u(in vec2 ip, in float seed) {\n    uvec2 p = uvec2(floatBitsToUint(ip.x), floatBitsToUint(ip.y));\n    uint s = floatBitsToUint(seed);\n    s ^= ~s >> 3U;\n    p ^= (p << 17U);\n    s ^= (~p.x);\n    s ^= (~p.y);\n    p ^= (p >> 11U);\n    p ^= (p << 5U);\n    p ^= (s << 3U);\n    return ((p.x + p.y) ^ (p.x * s + p.y))*293U;\n}\n\nfloat hash21(in vec2 ip, in float seed) { return float(hash21u(ip, seed)) / float(0xFFFFFFFFU); }\nvec3 hash23(in vec2 ip, in float seed) {\n    uint n = hash21u(ip, seed);\n    n ^= (n >> 13U);\n    return vec3(float((n >> 16U) & 0xFFU), float((n >> 8U) & 0xFFU), float(n & 0xFFU)) / float(0xFFU);\n}\n\nfloat line(in vec2 p, in vec2 a, in vec2 b, in float t) {\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return clamp(01.0-length(pa - ba * h)/t, 0.0, 1.0);\n}\n\nvec3 leaf(in vec2 uv, in vec2 id, in float ra) {\n    float ra0 = fract(((ra-id.x)*44.4929811)+id.y*3.3921);\n    if (floor(ra0+ra+0.1) <= 0.) return vec3(0.); // randomly discard some leaves\n    float v = 0.0;\n    float len = 0.9;\n    float s = smoothstep(len/2., 0.0, abs(uv.y))*smoothstep(len/3., 0.1, -uv.y+0.01);\n    vec2 start = vec2(0,-len/2.);\n    vec2 end = vec2(0, len/2.);\n    start.x += 0.1*s;\n    end.x += 0.1*s;\n    v += line(abs(uv), start, end, 0.01);\n    v += smoothstep(0.0, 0.01, dot(vec2(abs(uv.x)-(0.1*s), uv.y), (start-end).yx));\n    vec3 col = vec3(0.3, 0.33, 0.1);\n    col = mix(col, vec3(0.9, 0.9, 0.5), s*s*s);\n    vec3 c1 = vec3(0.3, 0.33, 0.2);\n    vec3 c2 = vec3(0.8, 0.8, 0.3);\n    vec3 c3 = vec3(0.2, 0.5, 0.04);\n    vec3 c4 = vec3(0.0, 0.4, 0.02);\n    vec3 n = hash23(id, ra);\n    vec3 a = mix(c1, c2, n.x);\n    vec3 b = mix(c3, c4, n.y);\n    vec3 c = mix(a, b, n.z);\n    col = mix(col, c, ra*ra);\n    float ra2 = fract((ra*10.98938281)+(id.x*3.392912+id.y));\n    col = mix(col, (col*c3)+(c2*c3*s), ra2*ra2*0.39);\n    return col*v;\n}\n\nvec3 leafs(in vec2 uv, in float iseed) {\n    vec3 col = vec3(0.0);\n    float tile = 4.0;\n    float seed = 3.329291 + iseed;\n    float div = 1.0;\n    for (int i = 0; i < 24; i++) {\n        vec2 id = floor(uv*tile);\n        vec2 lv = fract(uv*tile);\n        vec2 slv = lv*lv*(3.0-2.0*lv);\n        float n = hash21(id, seed);\n        float n2 = hash21(id, seed+id.x+id.y+0.329812);\n        lv = fract(uv*tile);\n        lv = (0.5-lv)*rot(n*6.28);\n        col = max(col, leaf(lv, id, fract((n+n2+id.x+id.y)*10.4992))/div);\n        seed += 13.937272;\n        tile += 1.;\n        uv *= mat2(6.28, 8.0, -6.28, 8.)*0.1;\n        div += 0.2;\n    }\n    return col / (1.0 + max(col-0.56, 0.0));\n}\n\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = (fc-0.5*R.xy)/R.y;\n    float s = 1.0;\n    float uvs = 0.3;\n    vec2 shift = vec2(0.0);\n    float seed = 0.039291;\n    float mag = 1.0;\n    for (int i = 0; i < 6; i++)\n    {\n        vec2 uv = (uv)+shift;\n        uv *= 0.5 + (0.5+sin(T)*0.5)*s;\n        uv += vec2(cos(T*0.15), sin(T*0.15))*s;\n        col += leafs(uv*uvs, seed)*smoothstep(0.45, 0., length(col)*2.3)*mag;\n        s -= 0.15;\n        s *= s;\n        uvs *= 1.7;\n        shift += 0.02;\n        seed += 2.1231237;\n        mag /= 1.2;\n    }\n    O = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}