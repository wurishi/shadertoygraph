{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Based on distfunctions code by iq\n//\n// Test to create primitives by repetition on a limited space, glitches depending on camera orientation :S\n\n#define FREE_CAMERA 0\n#define USE_REPETITION 1\n\n//----------------------------------------------------------------------\n\nfloat sdPlane( vec3 p ) { return p.y; }\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nvec2 opU( vec2 d1, vec2 d2 ) { return (d1.x<d2.x) ? d1 : d2; }\n\n//----------------------------------------------------------------------\n\nvec2 map( in vec3 pos )\n{\n#if USE_REPETITION\n    // Create primitives by modding/clamping space\n    const float c = 2.;\n    vec3 posB = pos;\n    posB.z = mod( clamp(posB.z, -2., 6.), c );\n    \n    vec2 res =  opU( vec2( sdPlane(pos), 1.0 ),\n                     vec2( sdBox(  posB-vec3(-0.5,0.25,0.5), vec3(0.25) ), 3.0 ) );\n#else\n    // Create primitives manually\n    vec2 res =  opU( vec2( sdPlane(pos), 1.0 ),\n                     vec2( sdBox(  pos-vec3(-0.5,0.25,0.5), vec3(0.25) ), 3.0 ) );\n    \n    res =  opU( res, vec2( sdBox(  pos-vec3(-0.5,0.25, 2.5), vec3(0.25) ), 3.0 ) );\n    res =  opU( res, vec2( sdBox(  pos-vec3(-0.5,0.25, 4.5), vec3(0.25) ), 3.0 ) );\n    res =  opU( res, vec2( sdBox(  pos-vec3(-0.5,0.25,-1.5), vec3(0.25) ), 3.0 ) );\n#endif\n    \n    return res;\n}\n\nvec2 castRay( in vec3 ro, in vec3 rd )\n{\n    float tmin = 1.0;\n    float tmax = 20.0;\n        \n\tfloat precis = 0.002;\n    float t = tmin;\n    float m = -1.0;\n    for( int i=0; i<50; i++ )\n    {\n\t    vec2 res = map( ro+rd*t );\n        if( res.x<precis || t>tmax ) break;\n        t += res.x;\n\t    m = res.y;\n    }\n\n    if( t>tmax ) m=-1.0;\n    return vec2( t, m );\n}\n\n\nvec3 calcNormal( in vec3 pos )\n{\n\tvec3 eps = vec3( 0.001, 0.0, 0.0 );\n\tvec3 nor = vec3(\n\t    map(pos+eps.xyy).x - map(pos-eps.xyy).x,\n\t    map(pos+eps.yxy).x - map(pos-eps.yxy).x,\n\t    map(pos+eps.yyx).x - map(pos-eps.yyx).x );\n\treturn normalize(nor);\n}\n\nvec3 render( in vec3 ro, in vec3 rd )\n{ \n    vec3 col = vec3(0.8, 0.9, 1.0);\n    vec2 res = castRay(ro,rd);\n    float t = res.x;\n\tfloat m = res.y;\n    if( m>-0.5 )\n    {\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal( pos );\n        \n        // material        \n\t\tcol = vec3(1.,0.,0.);\n\t\t\n        if( m<1.5 )\n        {\n            float f = mod( floor(5.0*pos.z) + floor(5.0*pos.x), 2.0);\n            col = 0.4 + 0.1*f*vec3(1.0);\n        }\n\n        // lighitng        \n \t\tvec3  lig = normalize( vec3(-0.6, 0.7, -0.5) );\n        float dif = clamp( dot( nor, lig ), 0.0, 1.0 );\n\n\t\tvec3 brdf = vec3(0.0);\n        brdf += 1.20*dif*vec3(1.00,0.90,0.60);\n\t\tbrdf += 0.2;\n\t\tcol = col*brdf;\n\n    }\n\n\treturn vec3( clamp(col,0.0,1.0) );\n}\n\nmat3 setCamera( in vec3 ro, in vec3 ta, float cr )\n{\n\tvec3 cw = normalize(ta-ro);\n\tvec3 cp = vec3(sin(cr), cos(cr),0.0);\n\tvec3 cu = normalize( cross(cw,cp) );\n\tvec3 cv = normalize( cross(cu,cw) );\n    return mat3( cu, cv, cw );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy/iResolution.xy;\n    vec2 p = -1.0+2.0*q;\n\tp.x *= iResolution.x/iResolution.y;\n    vec2 mo = iMouse.xy/iResolution.xy;\n\n#if FREE_CAMERA\n    float time = 15.0 + iTime;\n    \n    // camera\t\n\tvec3 ro = vec3( -0.5+3.2*cos(0.1*time + 6.0*mo.x), 1.0 + 2.0*mo.y, 0.5 + 3.2*sin(0.1*time + 6.0*mo.x) );\n\tvec3 ta = vec3( -0.5, -0.4, 0.5 );\n#else\n\t// camera\t\n\tvec3 ro = vec3( -1.7, 1.0, 0.5 + 4.2*sin(5.5) );\n\tvec3 ta = vec3( -0.5, -0.4, 0.5 );\n#endif\n\t\n\t// camera-to-world transformation\n    mat3 ca = setCamera( ro, ta, 0.0 );\n    \n    // ray direction\n\tvec3 rd = ca * normalize( vec3(p.xy,2.5) );\n\n    // render\t\n    vec3 col = render( ro, rd );\n\n\tcol = pow( col, vec3(0.4545) );\n\n    fragColor=vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltj3z1","date":"1427064726","viewed":310,"name":"Glitch raymarch","username":"shash","description":"Example of the problems I'm facing with primitive repetition","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"","parentname":""}}