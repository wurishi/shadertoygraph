{"ver":"0.1","info":{"id":"NtyfD1","date":"1664400905","viewed":130,"name":"Parabola Circle Intersection","username":"jt","description":"Intersections between parabolas and primitives could be used to animate collisions (for stability) of bouncing balls without actually simulating the physics.\nSpecial case (no offset) - for general see [url=https://www.shadertoy.com/view/7lVfD1]here[/url].","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["intersection","circle","parabola"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/NtyfD1 Parabola Circle Intersection by jt\n\n// Intersections between parabolas and primitives could be used to animate collisions (for stability) of bouncing balls without actually simulating the physics.\n// This is only a special case (no offset) - for the general see https://www.shadertoy.com/view/7lVfD1 Parabola Circle Intersection 2\n\n// tags: intersection, circle, parabola\n\n// Potentially relevant links:\n// https://en.wikipedia.org/wiki/Quartic_function\n// https://people.eecs.berkeley.edu/~wkahan/Math128/Cubic.pdf (thanks, mla!)\n// https://www.nickalls.org/dick/papers/maths/quartic2009.pdf\n// https://www.maa.org/press/periodicals/convergence/descartes-method-for-constructing-roots-of-polynomials-with-simple-curves-depressed-quartics-and\n\n// NOTE: For a possible OTHER shader, parabola-parabola intersection, from https://www.geogebra.org/m/X2E9Dzvs \"Intersection of a vertical and horizontal parabola\"\n//       \"The intersection points of a vertical and horizontal parabola lie on a circle whose centre's distance from the directrices is the sum of distances of the foci from the directrices (in both the x and y directions.\"\n\n#define POINTSIZE 0.01\n#define draw(q) o *= smoothstep(0.0, POINTSIZE, abs(q))\n\nvoid mainImage(out vec4 o, vec2 I)\n{\n    vec2 R = iResolution.xy; \n    I = (I+I-R)/R.y;\n\n    //float r = 1.0;\n    float r = 0.5 + 0.5 * cos(iTime/5.0);\n    float b = 0.5 + (0.5 + 0.5 * cos(iTime/7.0));\n\n    o = vec4(1);\n    draw(length(I) - r); // circle\n    draw(length(I) - POINTSIZE); // center\n    //draw(I.x*I.x-I.y/b); // parabola\n    draw((I.x*I.x-I.y/b)/length(vec2(2.0*I.x,-1.0/b))); // parabola (constant width thanks to mla)\n    \n    // wxMaxima solve([x=t,y=t*t*h,r*r=x*x+y*y],[t,x,y]);\n    float c = 4.0*r*r*b*b+1.0;\n    if(c >= 0.0) // intersection\n    {\n        float t0 = -sqrt(+0.5*(sqrt(c)-1.0))/b;\n        float t1 = +sqrt(+0.5*(sqrt(c)-1.0))/b;\n        float x0 = t0;\n        float y0 = t0*t0*b;\n        float x1 = t1;\n        float y1 = t1*t1*b;\n        \n        draw(distance(I,vec2(x0,y0)) - POINTSIZE); // intersection\n        draw(distance(I,vec2(x1,y1)) - POINTSIZE); // intersection\n    }\n}\n\n// wxMaxima result looks more promising, when trying to solve a \"cleaned-up\" equation:\n// solve([t^4+t^2+t*d+c=0],[t]);\n// [t=-sqrt((6*d)/sqrt((9*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(2/3)-6*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+12*c+1)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3))-(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+\n// ((-1)/9-(4*c)/3)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)-4/3)/2-sqrt((9*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(2/3)-6*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+12*c+1)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3))/6,t=sqrt((6*d)/sqrt((9*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(2/3)-6*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+12*c+1)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3))-(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+\n// ((-1)/9-(4*c)/3)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)-4/3)/2-sqrt((9*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(2/3)-6*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+12*c+1)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3))/6,t=\n// sqrt((9*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(2/3)-6*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+12*c+1)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3))/6-sqrt(-\n// (6*d)/sqrt((9*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(2/3)-6*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+12*c+1)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3))-(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+\n// ((-1)/9-(4*c)/3)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)-4/3)/2,t=sqrt(-(6*d)/sqrt((9*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(2/3)-6*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+12*c+1)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3))-\n// (sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+((-1)/9-(4*c)/3)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)-4/3)/2+\n// sqrt((9*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(2/3)-6*(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3)+12*c+1)/(sqrt(27*d^4+(4-144*c)*d^2-256*c^3+128*c^2-16*c)/(2*3^(3/2))+(4*c-3*(4*c-d^2))/6+1/27)^(1/3))/6]\n\n\n// wxMaxima returns a horrible result when trying to solve the general case directly:\n/*\nsolve([(x_0+t)^2+(y_0+h*t*t)^2-r^2=0],[t]);\n[t=-(sqrt((6*h^2*(2*x_0))/(h^2*sqrt((9*h^4*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-\n(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+\n((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(2/3)+(-12*h^3*y_0-6*h^2)*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3)+16*h^2*y_0^2+4*h*y_0+12*h^2*x_0^2-12*h^2*r^2+1)/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*\nx_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))))-((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*\ny_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+\n(2*y_0*h+1)^3/(27*h^6))^(1/3)+((4*r^2-4*x_0^2-4*y_0^2)/(3*h^2)+((-1)*(2*y_0*h+1)^2)/(9*h^4))/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))-(4*(2*y_0*h+1))/(3*h^2)))/(2)-(sqrt((9*h^4*((2*sqrt(-16*\nh^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-\n(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(2/3)+(-12*h^3*y_0-6*h^2)*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-\n(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+\n((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3)+16*h^2*y_0^2+4*h*y_0+12*h^2*x_0^2-12*h^2*r^2+1)/(((2*sqrt(-16*h^2*y_0^4-\n(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*\nx_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))))/(6*h^2),t=(sqrt((6*h^2*(2*x_0))/(h^2*sqrt((9*h^4*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-\n(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+\n((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(2/3)+(-12*h^3*y_0-6*h^2)*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3)+16*h^2*y_0^2+4*h*y_0+12*h^2*x_0^2-12*h^2*r^2+1)/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*\nx_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))))-((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*\ny_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+\n(2*y_0*h+1)^3/(27*h^6))^(1/3)+((4*r^2-4*x_0^2-4*y_0^2)/(3*h^2)+((-1)*(2*y_0*h+1)^2)/(9*h^4))/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))-(4*(2*y_0*h+1))/(3*h^2)))/(2)-(sqrt((9*h^4*((2*sqrt(-16*\nh^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-\n(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(2/3)+(-12*h^3*y_0-6*h^2)*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-\n(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+\n((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3)+16*h^2*y_0^2+4*h*y_0+12*h^2*x_0^2-12*h^2*r^2+1)/(((2*sqrt(-16*h^2*y_0^4-\n(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*\nx_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))))/(6*h^2),t=(sqrt((9*h^4*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-\n(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+\n((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(2/3)+(-12*h^3*y_0-6*h^2)*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3)+16*h^2*y_0^2+4*h*y_0+12*h^2*x_0^2-12*h^2*r^2+1)/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*\nx_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))))/(6*h^2)-(sqrt(-(6*h^2*(2*x_0))/(h^2*sqrt((9*h^4*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-\n(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+\n((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(2/3)+(-12*h^3*y_0-6*h^2)*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3)+16*h^2*y_0^2+4*h*y_0+12*h^2*x_0^2-12*h^2*r^2+1)/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*\nx_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))))-((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*\ny_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+\n(2*y_0*h+1)^3/(27*h^6))^(1/3)+((4*r^2-4*x_0^2-4*y_0^2)/(3*h^2)+((-1)*(2*y_0*h+1)^2)/(9*h^4))/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))-(4*(2*y_0*h+1))/(3*h^2)))/(2),t=(sqrt(-(6*h^2*(2*x_0))/(h^2*sqrt((9*h^4*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-\n(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+\n((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(2/3)+(-12*h^3*y_0-6*h^2)*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3)+16*h^2*y_0^2+4*h*y_0+12*h^2*x_0^2-12*h^2*r^2+1)/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*\nx_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))))-((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*\ny_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+\n(2*y_0*h+1)^3/(27*h^6))^(1/3)+((4*r^2-4*x_0^2-4*y_0^2)/(3*h^2)+((-1)*(2*y_0*h+1)^2)/(9*h^4))/(((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-\n(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*\nh^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))-(4*(2*y_0*h+1))/(3*h^2)))/(2)+(sqrt((9*h^4*((2*sqrt(-16*\nh^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-\n(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(2/3)+(-12*h^3*y_0-6*h^2)*((2*sqrt(-16*h^2*y_0^4-(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-\n(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*x_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+\n((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3)+16*h^2*y_0^2+4*h*y_0+12*h^2*x_0^2-12*h^2*r^2+1)/(((2*sqrt(-16*h^2*y_0^4-\n(32*h^3*x_0^2+32*h^3*r^2+8*h)*y_0^3-(16*h^4*x_0^4+(32*h^2-32*h^4*r^2)*x_0^2+16*h^4*r^4-8*h^2*r^2+1)*y_0^2-(40*h^3*x_0^4+(2*h-8*h^3*r^2)*x_0^2-32*h^3*r^4-8*h*r^2)*y_0-16*h^4*x_0^6-(h^2-48*h^4*r^2)*\nx_0^4-(48*h^4*r^4-20*h^2*r^2)*x_0^2+16*h^4*r^6+8*h^2*r^4+r^2))/(3^(3/2)*h^5)+((3*((8*y_0*r^2-8*y_0*x_0^2-8*y_0^3)*h+4*r^2-4*y_0^2))/h^4-((2*y_0*h+1)*(4*r^2-4*x_0^2-4*y_0^2))/(h^2*h^2))/6+(2*y_0*h+1)^3/(27*h^6))^(1/3))))/(6*h^2)]\n*/\n","name":"Image","description":"","type":"image"}]}