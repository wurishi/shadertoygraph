{"ver":"0.1","info":{"id":"Xft3zj","date":"1711903430","viewed":28,"name":"Another neon shader, XD.","username":"zKryle","description":"Another shader that combines basic sdf functions such as boxes and circles.\nAdded neon glow effect for visual enhancement.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mesmerizing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float roundedBoxSDF(vec2 uv, vec2 transVec, vec2 scaleVec, float r){\n    vec2 b = abs(uv - transVec) - scaleVec;\n    \n    float c = max(b.x, b.y);\n     \n    float d = (c > 0.0 ? length(max(b, 0.0)) : c) - r;\n    \n    return d;\n}\n\nfloat circleSDF(vec2 uv, vec2 transVec, float r){\n    vec2 b = abs(uv - transVec);\n     \n    float d = length(b) - r;\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n    \n    float boxD = roundedBoxSDF(uv, vec2(-0.1, 0.0), vec2(0.75, 0.3), 0.1);\n    \n    float circleD = circleSDF(uv, vec2(0.6, 0.0), 0.7);\n    \n    float circleD1 = circleSDF(uv, vec2(-0.82, 0.0), 0.4);\n    \n    float d1 = min(boxD, circleD);\n    \n    float d = min(d1, circleD1);\n    \n    vec3 color = d > 0.0 ? vec3(0.0, 1.0, 1.0) : vec3(0.0, 1.0, 0.0);\n    \n    vec3 col = vec3(0.0);\n    \n    float s = cos(10.0*abs(d)+iTime*5.0*sign(d));\n    \n    col += clamp(vec3(0.001/abs(s)), 0.0, 1.0) * 360.0;\n    \n    col = vec3(mix(col, color, smoothstep(1.5, 0.0, abs(s))));\n    \n    col = vec3(mix(col, vec3(1.0), smoothstep(0.02, 0.01 - 0.001, abs(d))));\n\n    col += clamp(vec3(0.001/abs(d)), 0.0, 1.0) * 30.0;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}