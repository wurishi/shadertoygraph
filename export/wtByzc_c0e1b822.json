{"ver":"0.1","info":{"id":"wtByzc","date":"1594941690","viewed":427,"name":"depth map","username":"kloumpt","description":"ni","likes":2,"published":1,"flags":34,"usePreview":0,"tags":["na"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BPM 89.0\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col= texture(iChannel0, uv).rgb;\n    col = 1.0 - col;\n    col = pow(col, vec3(1.0) / 0.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define BPM 130.0\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float t = iTime * BPM / 60.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv_bb = fragCoord/iResolution.xy;\n    vec2 p = uv;\n    \n    uv += (1.0 - length(uv - 0.5)) * sign(uv - 0.5) * (1.0 + 2.0 * abs(uv.x - 0.5));\n    \n    uv = 2.0 * abs(uv - 0.5);\n    uv = 2.0 * abs(uv - 0.5);\n    \n    vec3 col = vec3(1.0);\n    col = uv.xyx;\n    col.rb += texture(iChannel1, vec2(1.0 - uv_bb.x, uv_bb.y)).rb * 0.75;\n    col.b = fract(col.b * 2.0) - 0.5;\n    \n    col.r += 0.1 * cos((p.x * 2.0 + col.y + t * 1.0 / 4.0) * 3.141592 * 1.0);\n    \n    col.g += length(col.rb);\n    col.b += length(col.rg);\n    col.r += length(col.gb);\n    \n    \n    col = col.bgr;\n    //col.b = fract(col.b * 2.0) - 0.5;\n    \n    //col.r += 0.1 * cos((col.y + t / 16.0) * 3.141592 * 16.0);\n    \n    col.g -= length(col.rb);\n    col.b -= length(col.rg);\n    col.r += length(col.gb);\n    \n    \n    col = abs(fract(col) * 2.0 - 1.0);\n\n    // Time varying pixel color\n    \n    uv_bb.xy += 1.0 / iResolution.xy;\n    vec3 col_bb = texture(iChannel0, uv_bb).rgb;\n    \n    col =  pow(col, vec3(1.0 / 2.0)) * mix(col, col_bb, 1.0 - step(vec3(0.25), col));\n\n    col = normalize(col);\n    col = abs(col);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}