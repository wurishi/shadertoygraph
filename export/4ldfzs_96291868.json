{"ver":"0.1","info":{"id":"4ldfzs","date":"1540677340","viewed":266,"name":"Kaleidoscope 4.00","username":"jamtable","description":"A music visualiser of a track of mine","likes":4,"published":1,"flags":66,"usePreview":0,"tags":["musicvisualiserkaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Mlf3Rr","filepath":"https://soundcloud.com/simeon-liley/wind-farm-for-chamber","previewfilepath":"https://soundcloud.com/simeon-liley/wind-farm-for-chamber","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\n\n\n// Number of mirror segments\n\n#define N 16.0\n\n\n// Speed of rotation\n\n#define S (PI/16.0)\n\n\n// ZOOM\n\n#define Z 1.5\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float fft1=1.0-texture(iChannel1,vec2(440.0/11025.0,0.25)).r; //maps float to frequency intensity of media in channel\n    float fft2=2.0-texture(iChannel1,vec2(880.0/11025.0,0.25)).r; \n    float fft3=0.5*texture(iChannel1,vec2(100.0/11025.0,0.25)).r; \n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 cc = uv - iMouse.xy/iResolution.xy;//vec2(0.5,0.5); //centre of mirrors\n    vec2 po = vec2( atan(cc.x,cc.y) , length(cc) ); \n    \n    //rotation\n    float s=1.0;//+(fft1/5000.0);//0.5+(fft3/10.0);//S; //rotation\n    \n    //Number of Mirrors\n    float n=3.0+floor(10.0/fft2);//N; //number of mirrors - use floor(x) ceil(x) to round to whole number\n   \n    //Zoom\n    float z=0.6;//1.0+cos(iTime*0.2);//Z; //zoom\n\n        \n    \n    \n\tfloat f=(2.0*PI/n);\n\n    float m=mod((2.0*PI)+po.x,f);\n    \n    if(m>f/2.0){ m=f-m; }\n       \n    po.x = m+(iTime*s);\n    po.y /=z;\n    \n    cc= vec2(cos(po.x),sin(po.x))*po.y;\n\n\n    // Output to screen\n    fragColor = texture( iChannel0, cc+vec2(0.5,0.5) ).rgba;\n    fragColor += 0.2*texture( iChannel2, cc+vec2(0.5,0.5) ).rgba; //superimpose texture on webcam chanel 1\n    fragColor += vec4(0.2,.7,1,1.0);//1,.65,.3,1//(0.01*fft1),0.1,(0.2*fft2),1.0);\n    \n    // fragColor=fragColor*4.0-2.0; // contrast dark\n   fragColor=vec4(1)-(fragColor-0.5); // contrast lighter\n    // fragColor=fragColor*4.0-1.5; // contrast\n    \n}","name":"Image","description":"","type":"image"}]}