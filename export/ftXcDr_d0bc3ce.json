{"ver":"0.1","info":{"id":"ftXcDr","date":"1647779103","viewed":86,"name":"hookman gyroid layered","username":"hookman","description":"1","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["gyroid"],"hasliked":0,"parentid":"NlXyDr","parentname":"hookman gyroid zoom"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat gyroid(vec3 p, float scale, float thickness)\n{\n    p *= scale;\n    return abs(dot(sin(p*(abs(cos(iTime*.01)*0.1)+1.)), cos(p.zxy*1.))/scale-thickness);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n        \n    uv.xy += sin(iTime*0.0015)*cos(iTime*0.0017); //pan\n    uv.xy *= abs((sin(iTime*0.01)))*0.08 + 0.1; //zoom\n    \n    uv *= rotationMatrix( 10. * cos(iTime*.01) ); //rotate\n    \n    uv *= 1.;\n    \n    float d = gyroid(vec3(uv.x, uv.y, sin(iTime*0.07)*0.1), 20., .02);\n    \n    col += (0.5 + (d*6.)) *0.5;\n    \n    d = gyroid(vec3(uv.y, uv.x, cos(iTime*0.05)*0.1)*1.5, 20., .02);\n    \n    col += (0.5 + (d*6.)) * 0.5;\n    \n    //vectors taken from http://dev.thi.ng/gradients/\n    \n    col *= pal( uv.x, vec3(0.948, 0.778, 0.638),vec3(0.358, 0.000, 0.500),vec3(0.500, 0.000, 0.500),vec3(0.000, 0.000, 0.500) );\n    \n    // Output to screen\n    fragColor = vec4(col,1.0) *1.;\n}","name":"Image","description":"","type":"image"}]}