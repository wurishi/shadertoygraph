{"ver":"0.1","info":{"id":"NdX3R7","date":"1615656583","viewed":500,"name":"Fork Color arcs RaduBT 036","username":"RaduBT","description":"Basic arcs demo\n\n/// https://www.shadertoy.com/view/tdjXDd\n/// Shadertoy : Avin - Color Arcs Shadertoy","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["arcs","multicolor"],"hasliked":0,"parentid":"tdjXDd","parentname":"Color arcs"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/// https://www.shadertoy.com/view/tdjXDd\n/// Shadertoy : Avin - Color Arcs Shadertoy\n\n\n\n\n\n#define PI 3.1415926\n#define TAU 6.2831852\n#define BLACK_COL vec3(24,32,38)/255.\n\n#define rand1(p) fract(sin(p* 78.233)* 43758.5453) \n#define hue(h) clamp( abs( fract(11.2*h + vec4(3,2,1,0)/12.) * 4. - 2.8) -1. , 0.1, 15.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = (fragCoord.xy-iResolution.xy*0.5)/iResolution.y;\n\n    float SIZE = 4. + cos(iTime*0.5)*0.1;\n    float r = length(uv) * SIZE;\n    r*=10.0;\n    float id = ceil(r);\n    float s = mod(id, 2.)*2. - 1.; // Direction\n    float a = fract(atan(uv.y, uv.x)/TAU + s*(iTime*(rand1(id+400.)*0.5+0.5)*0.2 + id*0.2));\n    float inRange = step(3.,id); // Don's draw center arcs    \n    float sm = (1./iResolution.y * 30.* SIZE);    \n    \n    inRange *= smoothstep(.0, sm, fract(r)) * smoothstep(1.0, 1.0 - sm, fract(r));\n    float arcLength =  (rand1(id)*0.25 + 0.25);\n    \n    sm = (sqrt(SIZE)*(1./iResolution.y * 5. / id));\n    inRange *= smoothstep(arcLength, arcLength + sm, a) * smoothstep(1.0, 1. - sm, a);\n        \n    vec3 col = hue(rand1(id)).rgb;\n    \n    col = mix(BLACK_COL, col, inRange);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}