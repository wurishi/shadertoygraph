{"ver":"0.1","info":{"id":"ssXGzM","date":"1615688295","viewed":92,"name":"Pretty Tangents","username":"Chosen","description":"Some parameters at the top you can tweak.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LINES 24.\n#define LINES_PER_SIDE 12.\n#define THICKNESS 1.\n\nvoid drawDist(out vec3 frag, float d, vec4 colour, float edge)\n{\n    frag = mix(frag, colour.rgb, smoothstep(edge, 0., d) * colour.a);\n}\n\n// Inigo Quilez - Deriving the SDF of a Line Segment\n// https://www.youtube.com/watch?v=PMltMdi1Wzg\nvoid drawSegment(out vec3 frag, vec4 uv, vec4 p1, vec4 p2, vec4 colour, float halfWidth,\n    float edge)\n{\n    vec4 v = p2 - p1;\n\n    // distance to nearest point on segment\n    float d = length(uv - mix(p1, p2, clamp(dot(uv - p1, v) / dot(v, v), 0., 1.)));\n    drawDist(frag, d - halfWidth, colour, edge);\n}\n\nvec4 hueToRGB(float hue)\n{\n    return vec4(clamp(abs(fract(hue + vec3(1, 2./3., 1./3.)) * 6. - 3.) - 1., 0., 1.), 1);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 uv = vec4(1.06 * fragCoord / iResolution.xy - .03, 0, 0);\n    float edge = 2. / min(iResolution.x, iResolution.y),\n        halfWidth = edge * THICKNESS / 2.;\n    vec3 frag = vec3(0);\n    float start = floor(iTime * 10.);\n\n    for (float loop = start; loop < start + LINES; ++loop) {\n        float t = mod(loop, LINES_PER_SIDE) / LINES_PER_SIDE;\n        vec4 colour = vec4(hueToRGB(t).rgb * (loop - start) / LINES, 1);\n\n        switch (int(mod(loop / LINES_PER_SIDE, 4.))) {\n            case 0:\n                drawSegment(frag, uv, vec4(0, 1.-t, 0, 0), vec4(t, 0, 0, 0),\n                    colour, halfWidth, edge);\n                break;\n            case 1:\n                drawSegment(frag, uv, vec4(t, 0, 0, 0),    vec4(1, t, 0, 0),\n                    colour, halfWidth, edge);\n                break;\n            case 2:\n                drawSegment(frag, uv, vec4(1, t, 0, 0),    vec4(1.-t, 1, 0, 0),\n                    colour, halfWidth, edge);\n                break;\n            case 3:\n                drawSegment(frag, uv, vec4(1.-t, 1, 0, 0), vec4(0, 1.-t, 0, 0),\n                    colour, halfWidth, edge);\n        }\n    }\n    fragColor = vec4(sqrt(frag), 1);\n}","name":"Image","description":"","type":"image"}]}