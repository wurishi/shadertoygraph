{"ver":"0.1","info":{"id":"mtdXzM","date":"1685207917","viewed":61,"name":"zxc line segment ","username":"ketchuup","description":"Forked from Tsoding implementation.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WIDTH 6.0\n#define MARKER_RADIUS 10.0\n#define INTERVAL_LENGTH 16.0\n\nfloat thickness(float x)\n{\n    return WIDTH * step(0.0, sin(x));\n}\n\n#define POINTS 4\n\nvoid mainImage(out vec4 color, in vec2 position)\n{\n    vec2 points[] = vec2[POINTS]\n    (\n        iMouse.xy,\n        vec2(200.0, 200.0),\n        vec2(300.0, 150.0),\n        vec2(750.0, 350.0)\n    );\n    \n    color = vec4(0.0);\n    vec2 point = position.xy;\n    \n    for (int index = 0; index < POINTS; ++index)\n    {\n        if (length(point - points[index]) < MARKER_RADIUS)\n        {\n            color = vec4(1.0, 0.0, 0.0, 1.0);\n        }\n    }\n    \n    float already = 0.0;\n    \n    for (int index = 0; index < POINTS - 1; ++index)\n    {\n        vec2 start = points[index];\n        vec2 end = points[index + 1];\n        \n        vec2 segment = end - start;\n        float segment_length = length(segment);\n        \n        vec2 projection = start + segment * dot(segment, point - start) / pow(segment_length, 2.0);\n\n        float t = (already + length(projection - start)) / INTERVAL_LENGTH;\n        \n        if (length(projection - point) < thickness(t)\n            && length(projection - end) < segment_length\n            && length(projection - start) < segment_length)\n        {\n            color += vec4(0.0, 1.0, 0.0, 1.0);\n        }\n        \n        already += segment_length;\n        \n        if (thickness(already / INTERVAL_LENGTH) > 0.0 && length(point - end) < WIDTH)\n        {\n            color += vec4(0.0, 1.0, 0.0, 1.0);\n        }\n    }   \n}","name":"Image","description":"","type":"image"}]}