{"ver":"0.1","info":{"id":"WdycDz","date":"1629271113","viewed":46,"name":"newtons method 788989890","username":"stonedape","description":"837878","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["783278"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float h=1e-3;\nfloat pi=3.1415926;\nvec2 I=vec2(0.,1.);\n\nvec2 cxMult(vec2 a,vec2 b){\n    return vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);\n}\n\nfloat atanz(float a){\n    if(a!=a) return pi/2.;\n    return atan(a);\n}\n\nfloat atan2(float y,float x){\n    if(x>0.) return atan(y/x);\n    if(y>=0. && x!=0.) return atan(y/x)+pi;\n    if(x==0.){\n        if(y>0.) return pi/2.;\n        return -pi/2.;\n    }\n    return atan(y/x)-pi;\n}\n\n\n\nvec2 cxPow(vec2 a,vec2 b){\n    float len=length(a);\n    float theta=b.x*atan2(a.y,a.x);\n    float phi=b.y*log(len);\n    return vec2(cos(theta)*cos(phi)-sin(theta)*sin(phi),\n                cos(theta)*sin(phi)+sin(theta)*cos(phi))\n        \t\t*pow(len,b.x)*exp(-b.y*atan2(a.y,a.x));\n}\n\nvec2 cxPow(vec2 a,float b){\n    return cxPow(a,vec2(b,0.));\n}\n\nvec2 conj(vec2 z){\n    return vec2(z.x,-z.y);\n}\n\nvec2 cxDiv(vec2 a,vec2 b){\n    return cxMult(a,conj(b))/(pow(b.x,2.)+pow(b.y,2.));\n}\n\nvec2 cxExp(vec2 a){\n    return exp(a.x)*vec2(cos(a.y),sin(a.y));\n}\n\nvec2 cxSin(vec2 a){\n    return cxDiv(cxExp(cxMult(I,a))-cxExp(cxMult(-I,a)),2.*I);\n}\n\n\n\nvec2 f(vec2 x){\n    float t=.25*iTime;\n    return cxPow(x,10.*sin(t))+vec2(1.,0.);\n}\n\nvec2 dfdx(vec2 x){\n    return cxDiv(f(x+vec2(h))-f(x-vec2(h)),2.*vec2(h));\n}\n\n\nvec2 newtmeth(vec2 x){\n    for(int i=0;i<100;i++){\n        x-=cxDiv(f(x),dfdx(x));\n    }\n    return x;\n}\n\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    uv-=vec2(.5,.5*iResolution.y/iResolution.x);\n    uv*=pow(2.,2.5);\n    \n    vec2 c=newtmeth(uv);\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    vec3 col=hsb2rgb(vec3(1.*atan2(c.y,c.x)/pi/2.,1.,1.));\n    c=uv;\n    if(c.x!=c.x || c.y!=c.y) col=vec3(1.);\n    fragColor = vec4(col,1.0);\n}\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}