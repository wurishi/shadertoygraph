{"ver":"0.1","info":{"id":"DsyyDy","date":"1696524204","viewed":49,"name":"Polka Dots IDs (WIP)","username":"panna_pudi","description":"Is it possible to track cell ID without flickering?","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","pattern","polka","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = acos(-1.);\n\n// It's more experiment/question that I wanted to explore\n// Is it possible to track cell ID without flickering? Or find\n// the way to calculate IDs on any other type of grid so they stay stable\n// reference: https://www.shadertoy.com/view/MlcSz7\n\nvec3 hash23(vec2 p) {\n    vec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz + 33.33);\n    return fract((p3.xxy + p3.yzz) * p3.zyx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv *= 5.;\n    float e = 35. / iResolution.y;\n\n    float t = iTime * 6.;\n    float a = PI / 3.0 * floor(t / (2. * PI));\n    vec2 huv = uv * mat2(cos(a), -sin(a), sin(a), cos(a));\n\n    huv.y /= 0.866;\n    huv -= 0.5;\n    float v = ceil(huv.y);\n    huv.x += v * 0.5;\n\n    huv.x += (1. - cos(t / 2.)) * (mod(v, 2.) - 0.5);\n\n    vec2 hid = floor(huv);\n    huv = 2. * fract(huv) - 1.;\n    huv.y *= 0.866;\n\n    float d = smoothstep(e, -e, length(huv) - .6);\n    vec3 col = mix(vec3(1.), hash23(hid), d);\n\n    col = pow(col, vec3(0.4545));\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}