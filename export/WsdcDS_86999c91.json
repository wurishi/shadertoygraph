{"ver":"0.1","info":{"id":"WsdcDS","date":"1601644565","viewed":45,"name":"papa flamy DE xD ftw l√ºl xyz","username":"Nischi","description":"flamy","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["papa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Ei(float x){\t\t//Exponential Integral\n    float gamma = 0.57721566490153286060;\n    float result = gamma+log(abs(x));\n    \n    float tmp = 1.;\n    for(float k=1.;k<1000.;k++){\n        tmp = tmp*x/k;\n        result += tmp/k;\n    }\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Constants to vary\n    float C = sin(iTime);\n    float scale = 5.;\n\n    //Coordinate transformation from pixels\n    vec2 uv = scale*(2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    //Implicit function\n    float t = uv.x;\n    float y = uv.y;\n    float f = Ei(log(abs(y+1.))+C)-t*1.-0.;\n    \n    //Function plot\n    fragColor = vec4(abs(f)/fwidth(f))*vec4(0,1,1,1)+vec4(1,0,0,0);\n    \n    //Coordinate system\n    if ( min( abs(uv.x), abs(uv.y) ) < 8./iResolution.y ) fragColor *= 0.;\n    fragColor *= smoothstep( 0., 1.5, length(uv-vec2(1,0))*iResolution.y/8.- 4.);\n    fragColor *= smoothstep( 0., 1.5, length(uv-vec2(0,1))*iResolution.y/8.- 4.);\n}","name":"Image","description":"","type":"image"}]}