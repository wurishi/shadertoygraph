{"ver":"0.1","info":{"id":"4ct3Rs","date":"1712026782","viewed":23,"name":"PackRGB10","username":"qjh5606","description":"PackRGB10","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["packrgb10"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"highp int PackRGB10(vec3 rgb)\n{\n    // Clamp the input RGB values between 0 and 1\n    rgb = clamp(rgb, 0.0, 1.0) * 1023.0;\n\n    // Convert the float RGB values to 10-bit integers\n    int r = int(rgb.r);\n    int g = int(rgb.g);\n    int b = int(rgb.b);\n\n    // Pack the 10-bit integers into a single 32-bit integer\n    highp int packed = (r << 20) | (g << 10) | b;\n    return packed;\n}\n\nvec3 UnpackRGB10(highp int packed)\n{\n    // Extract the 10-bit integers from the 32-bit packed value\n    highp int r = (packed >> 20) & 0x3FF;\n    highp int g = (packed >> 10) & 0x3FF;\n    highp int b =  packed        & 0x3FF;\n\n    // Convert the 10-bit integers back to float RGB values\n    vec3 rgb = vec3(r, g, b) / 1023.0;\n    return rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //vec3 rgb = vec3(0.473531991,0.473531991,0.47931999);\n    vec3 rgb = vec3(0.5,0.4,0.5);\n    if(uv.y > 0.5f)\n    {\n        highp int inp = PackRGB10(rgb);\n        vec3 Decrgb = UnpackRGB10(inp);\n        fragColor = vec4(Decrgb,1);\n    }\n    else\n    {\n        fragColor = vec4(rgb,1.0); \n    }\n}","name":"Image","description":"","type":"image"}]}