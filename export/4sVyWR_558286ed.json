{"ver":"0.1","info":{"id":"4sVyWR","date":"1521594240","viewed":695,"name":"Unknown Pleasures","username":"smiarx","description":"Tribute to Joy Division","likes":37,"published":1,"flags":0,"usePreview":0,"tags":["noise","lines","cover"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\n#define LINEWIDTH 3.2\n#define H 35.\n\n#define WAVEHEIGHT 6.6\n#define WIDTH 0.6\n\nfloat random (in float x) {\n    return fract(sin(x)*\n        43758.5453123);\n}\n\n\nfloat noise (in float x) {\n    float i = floor(x);\n    float f = fract(x);\n\n    float a = random(i);\n    float b = random(i + 1.);\n\n    float u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u);\n}\n\n#define OCTAVES 3\nfloat fbm (in float x) {\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    \n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(x);\n        x *= 2.;\n        amplitude *= .7;\n    }\n    return value;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 st = (2.*fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n    st.y *= 45.;\n    \n    float linewidth = 45.*LINEWIDTH / iResolution.y;\n    \n    float val = 0.;\n    if(abs(st.x) < WIDTH){\n        float env = pow(cos(st.x/WIDTH*3.14159/2.),4.9);\n        float i = floor(st.y);\n        for (float n = max(-H,i-6.); n <= min(H, i); n++) {\n            float f = st.y - n;\n            float y = f - 0.5;\n            y -= WAVEHEIGHT \n                * pow(fbm(st.x*10.504 +n*432.1 + 0.5*iTime), 3.)\n                * env\n                + (fbm(st.x*25.+n*1292.21)-0.32)*2. * 0.15;\n            float grid = abs(y);\n                val += (1.-smoothstep(0., linewidth,grid));\n            \t//val = grid;\n            if(y < 0.)\n                break;\n        }\n    }\n\n        \n\n    \n\n    fragColor = vec4(val);\n}\n","name":"Image","description":"","type":"image"}]}