{"ver":"0.1","info":{"id":"MsK3zG","date":"1455182123","viewed":1231,"name":"Fractal Colors","username":"tholzer","description":"move mouse around to change fractal appearance","likes":49,"published":1,"flags":64,"usePreview":0,"tags":["2d","fractal","colors","animated","tinyshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Mdc3RN","filepath":"https://soundcloud.com/skaven252/looking-back","previewfilepath":"https://soundcloud.com/skaven252/looking-back","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// shader: FractalColors\n// original created by Robert Sch√ºtze (trirop) 07.12.2015\n//                     http://glslsandbox.com/e#29611.0 \n// move mouse around to change fractal appearance\n/*\n void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 m = iMouse.xy / iResolution.xy;\n  vec3 p = vec3(fragCoord / iResolution.y, 0.5-m.x+0.02*sin(iTime));\n  for (int i = 0; i < 128; i++)\n    p.xzy = vec3(1.3, 0.999, 0.777) * abs(p/dot(p,p)-vec3(1.0,1.0,m.y*0.3));\n  fragColor = vec4(p, 1.0);\n}\n*/\n\n// @FabriceNeyret2 shorter variant\nvoid mainImage( out vec4 O,  vec2 U )\n{\n  vec2 R = iResolution.xy, m = iMouse.xy / R;\n  O = vec4(U / R.y, 1.5-m.x+.08*sin(0.5*iDate.w),0);\n  for (int i = 0; i < 77; i++)\n    O.xzy = vec3(1.3, 1, .777) * abs(O.xyz/dot(O,O)-vec3(1,1,m.y*.3));\n}","name":"Image","description":"","type":"image"}]}