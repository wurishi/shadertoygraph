{"ver":"0.1","info":{"id":"4tXSzM","date":"1435089639","viewed":2561,"name":"square wave","username":"mmalex","description":"having a go at re-creating @vector_gl's lovely gif https://twitter.com/Vector_GL/status/612337298064150529\n","likes":80,"published":1,"flags":0,"usePreview":0,"tags":["squarewave","fourierdecomposition","vectorgl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// evening sketch by @mmalex\n// having a go at re-creating @vector_gl's lovely gif https://twitter.com/Vector_GL/status/612337298064150529\n// now with triangle wave!\n\n#define moblur 4\n#define harmonic 25\n#define triangle 1 // comment this line out for only square\n\nvec3 circle(vec2 uv, float rr, float cc, float ss) {\n    \n    uv*=mat2(cc,ss,-ss,cc);\n    if (rr<0.) uv.y=-uv.y;\n    rr=abs(rr);\n    float r = length(uv)-rr;\n    float pix=fwidth(r);\n\tfloat c = smoothstep(0.,pix,abs(r));\n    float l = smoothstep(0.,pix,abs(uv.x)+step(uv.y,0.)+step(rr,uv.y));\n   \treturn vec3(c,c*l,c*l);\n}\nvec3 ima(vec2 uv, float th0) {\n    vec3 col=vec3(1.0);\n    vec2 uv0=uv;\n   \tth0-=max(0.,uv0.x-1.5)*2.;\n   \tth0-=max(0.,uv0.y-1.5)*2.;\n#ifndef triangle\nfloat lerpy = 1.;\n#else\nfloat lerpy =smoothstep(-0.6,0.2,cos(th0*0.1));\n#endif\n\n    for (int i=1;i<harmonic;i+=2) {\n        float th=th0*float(i);\n        float fl=mod(float(i),4.)-2.;// used to be repeated assignment fl=-fl, but compiler bugs. :(\n        float cc=cos(th)*fl,ss=sin(th);\n        float trir=-fl/float(i*i);\n        float sqrr=1./float(i);\n        float rr=mix(trir,sqrr,lerpy);\n        col = min(col, circle(uv,rr,cc,ss));\n        uv.x+=rr*ss;\n        uv.y-=rr*cc;\n    }\n    float pix=fwidth(uv0.x);\n    if (uv.y>0. && fract(uv0.y*10.)<0.5) col.yz=min(col.yz,smoothstep(0.,pix,abs(uv.x)));\n    if (uv.x>0. && fract(uv0.x*10.)<0.5) col.yz=min(col.yz,smoothstep(0.,pix,abs(uv.y)));\n    if (uv0.x>=1.5) col.xy=vec2(smoothstep(0.,fwidth(uv.y),abs(uv.y)));    \n    if (uv0.y>=1.5) col.xy=vec2(smoothstep(0.,fwidth(uv.x),abs(uv.x)));    \n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    uv.y=1.-uv.y;\n    uv*=5.;\n    uv-=1.5;\n    float th0=iTime*2.;\n    float dt=2./60./float(moblur);\n    vec3 col=vec3(0.);\n    for (int mb=0;mb<moblur;++mb) {\n    \tcol+=ima(uv,th0);\n        th0+=dt;\n    }\n    col=pow(col*(1./float(moblur)),vec3(1./2.2));\n    fragColor=vec4(col,1.);\n}","name":"","description":"","type":"image"}]}