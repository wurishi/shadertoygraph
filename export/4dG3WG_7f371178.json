{"ver":"0.1","info":{"id":"4dG3WG","date":"1456059722","viewed":240,"name":"CubicBezier","username":"yomotsu","description":"render CubicBezier in glsl","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["vector"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 p0 = vec2( 0.0, 0.5 ); //start\nvec2 p1 = vec2( 0.0, 1.0 ); //ctrl1\nvec2 p2 = vec2( 1.0, 0.0 ); //ctrl2\nvec2 p3 = vec2( 1.0, 0.5 ); //end\n\nvec2 getPoint ( float t ) {\n\n    float tp = 1.0 - t;\n    \n    return t * t * t         * p3 +\n           3.0 * t * t * tp  * p2 +\n           3.0 * t * tp * tp * p1 +\n           tp * tp * tp      * p0;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    p1.y = ( sin( iTime ) + 1.0 ) * 0.5; // 0 to 1\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 point = getPoint( uv.x );\n\n    if ( uv.y - point.y > 0.0 ) {\n\n      fragColor = vec4(1.0);\n\n    } else {\n\n      fragColor = vec4( uv, 0.0, 1.0);\n\n    }\n\n}","name":"Image","description":"","type":"image"}]}