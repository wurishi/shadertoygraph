{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Tried shortening the shader by omeometo by packing the points into the bits of an integer.\n// Go show the original some love!!\n// - https://www.shadertoy.com/view/XfGfRR\n\n#define U(a, k) float(3 & a >> k) + 1. /* Unpacks 2 bits into an integer from -1 to 1 */\n#define A(a) atan(z.y - U(a, i), z.x - U(a, i + 2))\n\nvoid mainImage( out vec4 O, in vec2 f )\n{\n    vec2 R = iResolution.xy;\n    vec2 z = 2.1 * (f+f - R) / R.y;\n    \n    float s = 0.;\n    for (int i = 0; i < 16; i+=4) s += A(5274) - A(646);\n    O = vec4(fract(.15915 * s + .6 + iTime * .1));\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lcyBW1","date":"1733997334","viewed":54,"name":"shortened light and dark (1 & 0)","username":"brickdude","description":"Study of https://www.shadertoy.com/view/XfGfRR\n\nNot as short as the suggestion from the comments, but I thought it was a fun approach.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["small"],"hasliked":0,"parentid":"","parentname":""}}