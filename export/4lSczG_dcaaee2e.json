{"ver":"0.1","info":{"id":"4lSczG","date":"1511800928","viewed":115,"name":"Helicopter Searchlight","username":"TheDatzMan","description":"Just a quick mockup","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 backUV = uv;\n    backUV.y += sin(iTime) * 0.15;\n    fragColor = texture(iChannel0, backUV);\n    fragColor = vec4(fragColor.x/2.,fragColor.y/2.,fragColor.z/2.,1);\n    \n    if(uv.y<0.2 || uv.y > 0.95 || abs(uv.x -0.5) <0.02 || abs(uv.x) <0.02 || abs(uv.x) >0.98)\n    {\n        fragColor = texture(iChannel2, uv);\n        return;\n    }\n    // The list of path segments to draw\n    vec2 pathSegments[2];\n    pathSegments[0] = vec2(iMouse.x/iResolution.x, iMouse.y/iResolution.y);\n    pathSegments[1] = vec2(0.5, 0.1);\n    \n    vec2 v;\n    vec2 w;\n    vec2 direction;\n    vec2 approachPoint;\n    float dist;\n    float t;\n    \n    // For each path segment, determine the shortest distance to the line segment:\n    // http://stackoverflow.com/a/1501725\n    v = pathSegments[0];\n    w = pathSegments[1];\n    direction = w - v;\n        \n    // the parameter at which closest approach occurs (clamping to 0-1)\n    t = dot(uv - v, direction) / dot(direction, direction);\n    t = min(t, 1.);\n    t = max(t, 0.);\n        \n    // find the closest point on the line where approach occurs\n    approachPoint = v + t * (w - v);\n    \n    // The width of the beam\n    dist  = (approachPoint.y - w.y + approachPoint.x - w.x)/(v.y-w.y + v.x-w.x);\n    dist = dist * 0.1;\n\n    \n    if(distance(approachPoint, uv) < dist)\n    {\n        // This is the light\n        fragColor = texture(iChannel1, backUV); \n        \n        //Brighter at the end\n        if(distance(v,uv) < dist)\n   \t\t{\n        \tfragColor *= 1.5;\n  \t\t}\n    }\n    \n}","name":"Image","description":"","type":"image"}]}