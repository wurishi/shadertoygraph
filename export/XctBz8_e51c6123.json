{"ver":"0.1","info":{"id":"XctBz8","date":"1732781767","viewed":76,"name":"Cool Second Shader","username":"SergoDobro","description":"Cool Second Shader","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SDF(vec2 pos, vec2 center){\nvec2 distFromCenter = pos - center;\nreturn length(distFromCenter);\n}\n\nfloat SDF_boxDist(vec2 p, vec2 center)\n{\nvec2 size = vec2(0.2*(1.0+sin(iTime)));\nfloat radius = 0.0;\n\tsize -= vec2(radius);\n\tvec2 d = abs(p - center) - size;\n  \treturn min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n}\n\nfloat SDF_Changer(float dist, float width){\n\nreturn 1.0 - abs(dist - width);\n}\n\nfloat DistanceTransformer(float dist){\n\nreturn pow(dist, 210.0*(0.2+abs(sin(iTime*10.0)*cos(iTime*12.0 + 1.0))));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col =vec3(DistanceTransformer(SDF_Changer( SDF(uv, vec2(0.5)), 0.3+0.05*sin(iTime))))\n    + vec3(DistanceTransformer(SDF_Changer( SDF_boxDist(uv, vec2(0.5)), 0.0+0.03*sin(4.0*iTime))))*vec3(0.0,1.0,0.0)\n    ;//0.5 + 0.5*cos(iTime+uv.xyx);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}