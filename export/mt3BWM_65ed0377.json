{"ver":"0.1","info":{"id":"mt3BWM","date":"1701283622","viewed":48,"name":"Gravitational Lensing 1","username":"Rugged","description":"gravity","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gravity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvc = 2. * (uv - .5);\n    \n    vec2 scale = iResolution.xy / iResolution.y;\n    \n    uv *= scale;\n    uvc *= scale;\n    \n    \n    \n    float uvcl = length(uvc);\n    \n    vec4 col = vec4(0.);\n    \n    \n    col = vec4(0.);//vec4(1. - uvcl, uvc.x, uvc.y, 0.) / 1.73205080757;\n    \n    \n    //sqrt(3.) = 1.73205080757\n    float zDepth = 2.5;\n    vec3 dv = normalize(vec3(zDepth, -uvc.x, uvc.y));\n    \n    mat3 rot;\n    rot[0] = vec3(cos(iTime), -sin(iTime), 0.);\n    rot[1] = vec3(sin(iTime), cos(iTime), 0.);\n    rot[2] = vec3(0., 0., 1.);\n\n    dv *= rot;\n    \n    //ray origins\n    vec3 p;\n    \n    \n    vec3 camD = vec3(cos(iTime), sin(iTime), 0.);\n    vec3 camC = -3. * vec3(cos(iTime), sin(iTime), 0.);\n    \n    //move camera relative up/down\n    camC.z = sin(iTime);\n    \n    camC.z += 1.1;\n    \n    \n    p = camC;\n    \n    col = vec4(0.);\n    \n    for(int i = 0; i < 400; i++){\n        p += dv * .1;\n        \n        \n        vec3 g = vec3(0., 0., 1.) - p;\n        \n        dv += (g / pow(length(g), 4.)) * (1. / 400.);\n        \n        \n        if(p.z < 0.){\n            \n            //col = vec4(.9);\n            \n            col += texture(iChannel0, p.xy);\n            \n            break;\n        }\n        \n        if(i == 399){\n            col = normalize(vec4(p, 1.));\n        }\n        \n        \n        \n    }\n    \n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}