{"ver":"0.1","info":{"id":"ld3GD2","date":"1452593854","viewed":534,"name":"image repeat with rotation","username":"capsadmin","description":"i think there's lots of room for experiment here by changing how the uv transforms","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float pi = 3.14159265358979323846;\n\nvec2 mirror(vec2 uv)\n{    \n\tif (uv.x > 1.0 || uv.x < 0.0)\n        uv.x = -mod(abs(uv.x), 1.0) + 1.0;\n        \n    if (uv.y > 1.0 || uv.y < 0.0)\n        uv.y = -mod(abs(uv.y), 1.0) + 1.0;\n            \n  return uv;\n}\n\nfloat random()\n{\n\treturn fract(sin(dot(gl_FragCoord.xy+vec2(iTime), vec2(12.9898,78.233))) * 43758.5453);  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float rot = radians(45.0);\n    \n    uv -= 0.5;\n    uv *= mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n    uv += 0.5;\n    \n    uv *= 2.0;\n    \n    vec3 fg = texture(iChannel1, mirror(uv)).rgb;\n    vec3 bg = texture(iChannel0, mirror(uv)).rgb;    \n\n    \n    // green screen by iq\n    float maxrb = max( fg.r, fg.b );\n    float k = clamp( (fg.g-maxrb)*5.0, 0.0, 1.0 );\n    float dg = fg.g; \n    fg.g = min( fg.g, maxrb*0.8 ); \n    fg += dg - fg.g;\n    \n    vec3 color = mix(fg, bg, k);\n        \n    fragColor.rgb = color*0.99;\n}\n","name":"Buf A","description":"","type":"buffer"}]}