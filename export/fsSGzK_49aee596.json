{"ver":"0.1","info":{"id":"fsSGzK","date":"1617626338","viewed":115,"name":"Messing around during revision","username":"xernobyl","description":"Messing around during revision 2021's compostudio.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rays","cubes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sd_box(vec3 p, vec3 b) {\n  vec3 q = abs(p) - b;\n  return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\n}\n\n\nfloat scene(vec3 ray_pos, vec3 ray_origin) {\n    float d = distance(ray_pos, ray_origin);\n\n    ray_pos.x = mix(ray_pos.x, (ray_pos.x - ray_origin.x) * cos(iTime) + (ray_pos.y - ray_origin.y) * sin(iTime), clamp(d / 50.0, 0.0, 1.0));\n    ray_pos.y = mix(ray_pos.y, (ray_pos.x - ray_origin.x) * sin(iTime) + (ray_pos.y - ray_origin.y) * cos(iTime), clamp(d / 50.0, 0.0, 1.0));\n    \n    return min(\n             min(\n               sd_box(fract((ray_pos + 2.5) / 5.0) * 5.0 - 2.5, vec3(1.0, 1.0, 1.0)),\n               sd_box(fract((ray_pos + 2.5) / 5.0) * 5.0 - 2.5, vec3(0.25, 0.25, 4.0))),\n             min(\n               sd_box(fract((ray_pos + 2.5) / 5.0) * 5.0 - 2.5, vec3(0.25, 4.0, 0.25)),\n               sd_box(fract((ray_pos + 2.5) / 5.0) * 5.0 - 2.5, vec3(4.0, 0.25, 0.25))));\n}\n\n\nvec3 scene_normal(vec3 p, vec3 ray_origin)\n{\n  const float h = 0.01;\n  const vec2 k = vec2(1.0, -1.0);\n  return normalize(k.xyy * scene(p + k.xyy * h, ray_origin) + \n                   k.yyx * scene(p + k.yyx * h, ray_origin) + \n                   k.yxy * scene(p + k.yxy * h, ray_origin) + \n                   k.xxx * scene(p + k.xxx * h, ray_origin));\n}\n\n\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\n\nvec3 encodeSRGB(vec3 linearRGB)\n{\n    vec3 a = 12.92 * linearRGB;\n    vec3 b = 1.055 * pow(linearRGB, vec3(1.0 / 2.4)) - 0.055;\n    vec3 c = step(vec3(0.0031308), linearRGB);\n    return mix(a, b, c);\n}\n\n\nvoid mainImage(out vec4 frag_color, in vec2 frag_coord) {\n  vec3 ray_dir = vec3(frag_coord / iResolution.xy * 2.0 - 1.0, -0.25);\n  ray_dir.x *= iResolution.x / iResolution.y;\n  ray_dir = normalize(ray_dir);\n\n  vec3 ray_pos = vec3(cos(iTime) * 5.0 - 2.5, 2.5, 10.0 - 10.0 * iTime);\n  vec3 ray_origin = ray_pos;\n  int max_iterations = 64;\n  float d = 99999999.999999999999;\n\n  for (int max_iterations = 0; max_iterations < 64; ++max_iterations) {\n    d = scene(ray_pos, ray_origin);\n    \n    if (d < 0.0001) {\n      break;\n    }\n\n    ray_pos += d * ray_dir;\n  }\n\n  // Output to screen\n  vec3 n = scene_normal(ray_pos, ray_origin);\n  float dist = clamp(abs(5.0 / distance(ray_pos, ray_origin)), 0.0, 1.0);\n  vec3 col = pal(dist - iTime, vec3(0.8,0.5,0.4),vec3(0.2,0.4,0.2),vec3(2.0,1.0,1.0),vec3(0.0,0.25,0.25) );\n  \n  frag_color = vec4(mix(vec3(col * -dot(n, ray_dir)), vec3(0.0), 1.0 - dist), 0.0);\n  \n  frag_color = vec4(encodeSRGB(frag_color.rgb), 0.0);\n}\n","name":"Image","description":"","type":"image"}]}