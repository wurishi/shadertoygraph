{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// http://glslsandbox.com/e#5007\nfloat cross2(vec2 a, vec2 b) {return a.x*b.y-b.x*a.y;}\n\nfloat bezDe(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n\tvec2 ap = a-p;\n\tvec2 bp = b-p;\n\tvec2 cp = c-p;\n\tfloat xac = cross2(ap,cp);\n\tfloat xba = 2.0*cross2(bp,ap);\n\tfloat xcb = 2.0*cross2(cp,bp);\n\tfloat f = xba*xcb-xac*xac;\n\tvec2 cb = c-b;\n\tvec2 ba = b-a;\n\tvec2 ca = c-a;\n\tvec2 gf = 2.0*(xba*cb+xcb*ba+xac*ca);\n\tgf = vec2(gf.y,-gf.x);\n\tvec2 pp = -f*gf/dot(gf,gf);\n\tvec2 d0p = ap-pp;\n\tfloat aa = cross2(d0p,ca);\n\tfloat bb = 2.0*cross2(ba,d0p);\n\tfloat t = (aa+bb)/(2.0*xac+xba+xcb);\n\t//t = clamp(t, 0.0, 1.0);\n\tvec2 uv = mix(mix(ap,bp,t),mix(bp,cp,t),t);\n\treturn length(uv);\n}\n\nvec4 quaternion(vec3 p, float a)\n{\n\treturn vec4(p*sin(a/2.0),cos(a/2.0));\n}\n\nvec3 qtransform(vec4 q, vec3 v)\n{\n\treturn v+2.0*cross(cross(v,q.xyz)-q.w*v,q.xyz);\n}\n\nvec4 qmult(vec4 q1 ,vec4 q2)\n{\n\tvec4 q;\n\tq.xyz = q1.xyz*q2.w+q2.xyz*q1.w+cross(q1.xyz,q2.xyz);\n\tq.w = q1.w*q2.w-dot(q1.xyz,q2.xyz);  \n\treturn q;\n}\n\nvec3 perspective(vec3 p)\n{\n\tfloat l = 5.0;\n\tfloat t = l/(l-p.z);\n\treturn p*t;\t\n}\n\nvec3 hash3(float n)\n{\n\tvec3 p = vec3(dot(vec2(n+857.3, 124.8), vec2(127.1, 311.7)),\n\t\t\t\t  dot(vec2(n+572.2, 450.2), vec2(269.5, 183.3)),\n\t\t\t\t  dot(vec2(n+205.7, 381.4), vec2(760.5, 583.3)));\n\treturn (2.0*fract(sin(p)*43758.5453)-1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (fragCoord.xy*2.0-iResolution.xy)/iResolution.y;\n\tvec3 p0, p1 ,p2;\n\tvec4 q = quaternion(normalize(vec3(0.0, 1.0, 0.0)), iTime);;\n\tfloat d = 1.0;\n\tfor (int i = 0; i < 5; i++)\n\t{\n\t\tp0 = 2.0*hash3(float(i*3));\n\t\tp1 = 0.3*hash3(float(i*3+1));\n\t\tp2 = 2.0*hash3(float(i*3+2));\n\t\tp1+=(p1-((p0+p2)*0.5));\n\t\tp0 = qtransform(q, p0);\n\t\tp1 = qtransform(q, p1);\n\t\tp2 = qtransform(q, p2);\n\t\tp0 = perspective(p0);\n\t\tp1 = perspective(p1);\n\t\tp2 = perspective(p2);\n\t\td = min(bezDe(p0.xy, p1.xy, p2.xy, p), d);\n\t}\n\td = 0.03/d;\n\tfragColor = vec4(vec3(1.0,0.4,0.1)*d, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdS3WK","date":"1393254255","viewed":234,"name":"Tangled  Bezier","username":"gaz","description":"2d","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}