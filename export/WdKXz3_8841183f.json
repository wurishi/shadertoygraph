{"ver":"0.1","info":{"id":"WdKXz3","date":"1575139608","viewed":36667,"name":"hex truchet normal","username":"Angramme","description":"added little specular for looks","likes":20,"published":3,"flags":0,"usePreview":0,"tags":["cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GS 10.\n#define SMH 20./iResolution.x\n#define PI 3.14159265359\n\nfloat hexdist(vec2 uv){\n    vec2 p = abs(uv);\n    return max(\n    \tp.x,\n        dot(p, normalize(vec2(1, 1.73)))\n        );    \n}\n\nfloat R1(vec2 uv){\n    return texture(iChannel0, uv).r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    vec3 col = vec3(0);\n    \n    uv *= GS;\n    \n    vec2 r = vec2(1,1.73);\n    vec2 h = r*.5;\n    vec2 gv1 = mod(uv, r)-h;\n    vec2 gv2 = mod(uv+h, r)-h;\n    vec2 gv = dot(gv1,gv1) < dot(gv2,gv2) ? gv1 : gv2;\n    vec2 id = uv-gv;\n    gv *= 2.;\n    \n    //col.rg += id*.1;\n    //col.rg += gv;\n    \n    float oe = round(R1(id*.01 + .01*vec2(.3112,.7)*iTime));\n    float oa = PI/3.*oe;\n    float a = mod(atan(gv.y, gv.x) -oa, 2.*PI);\n    float sc = mod(floor((a +PI*0.1666666) / (PI/1.5)), 3.);\n    float ca = sc*PI/1.5 +PI*0.1666666 +oa;\n    vec2 bv = gv - vec2(cos(ca), sin(ca))*1.15;\n    \n    float cd = distance(bv, vec2(0));\n    float width = .3;\n    float mask = max(0., \n              smoothstep(.577+width+SMH, .577+width,cd) \n            - smoothstep(.577-width, .577-width-SMH,cd));\n    \n\n    vec2 D = normalize(bv);\n    vec3 n = normalize(vec3((cd-.577)/width*2. * D, 1.));\n\n    col += mask * n;\n    col += (1.-mask)*vec3(0,0,1);\n    col = normalize(col);\n    \n    //specular\n    col += mask * max(.0001,pow(dot(reflect(-normalize(vec3(.5,.8,.8)),n), vec3(0,0,1)),64.));\n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}