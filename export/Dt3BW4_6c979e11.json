{"ver":"0.1","info":{"id":"Dt3BW4","date":"1701205103","viewed":157,"name":"Fractal Neon Ether","username":"jwmaxwell","description":"Code is loosely based on https://www.shadertoy.com/view/MsjSW3","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","fast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 ezPalette(float t, vec3 z) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1., 1., 1.);\n  vec3 d = vec3(0.263, 0.416, 0.557);\n  return z * (a + b * cos(6.28318 * (c * t + d)));\n}\n\nfloat distanceField(vec3 position) {\n  vec3 newPosition = position * 2. + iTime;\n  return length(position) * log(length(position) + 1.) +\n    sin(newPosition.x + sin(newPosition.z + sin(newPosition.y))) * 0.5 - 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y * 2.;\n  float dist = length(uv);\n  vec3 accColor = vec3(0.);\n  float offset = 2.5;\n\n  for (int i = 0; i < 5; i++) {\n    vec3 uv0 = vec3(0., 0., 5.) + normalize(vec3(fract(uv * 1.5) - 0.5, -1.)) * offset;\n    float dist0 = distanceField(uv0);\n    accColor = (accColor + smoothstep(2., 0., dist0) * 0.7) * \n      (vec3(0.1, 0.3, 0.4) + vec3(5.0, 2.5, 3.) \n      * clamp((dist0 - distanceField(uv0 + 0.1)) * 0.5, -0.1, 1.));\n\n    \n\n    offset += min(dist0, 1.);\n  }\n\n  fragColor = vec4(ezPalette(dist, accColor), 1.);\n}","name":"Image","description":"","type":"image"}]}