{"ver":"0.1","info":{"id":"XlS3W3","date":"1432827207","viewed":194,"name":"20150528_pon de ring","username":"FMS_Cat","description":"This is pon de ring of Mister Donut","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define WOW 0.0\n\n#define PI 3.14159265\n\nfloat hash( vec2 _v ){\n    return fract(sin(dot(_v,vec2(89.44,19.36)))*22189.22);\n}\n\nfloat iHash( vec2 _v, vec2 _r ){\n    float h00 = hash( vec2( floor( _v*_r + vec2( 0.0, 0.0 ) ) / _r ) );\n    float h10 = hash( vec2( floor( _v*_r + vec2( 1.0, 0.0 ) ) / _r ) );\n    float h01 = hash( vec2( floor( _v*_r + vec2( 0.0, 1.0 ) ) / _r ) );\n    float h11 = hash( vec2( floor( _v*_r + vec2( 1.0, 1.0 ) ) / _r ) );\n    vec2 ip = vec2( smoothstep( vec2( 0.0, 0.0 ), vec2( 1.0, 1.0 ), mod( _v*_r, 1.0 ) ) );\n    return ( h00 * ( 1.0 - ip.x ) + h10 * ip.x ) * ( 1.0 - ip.y ) + ( h01 * ( 1.0 - ip.x ) + h11 * ip.x ) * ip.y;\n}\n\nfloat noise( vec2 _v ){\n    float sum = 0.;\n    for( int i = 1; i < 9; i ++ )\n    {\n        sum += iHash( _v + vec2( i ), vec2( 2.0 * pow( 2.0, float( i ) ) ) ) / pow( 2.0, float( i ) );\n    }\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p = vec2( fragCoord.xy * 2.0 - iResolution.xy ) / iResolution.x;\n\n\tfloat sum = 0.0;\n\tvec3 nor = vec3( 0.0 );\n\tfor( float i = 0.0; i < PI * 1.9; i += PI * 0.25 ){\n\t\tvec2 gap = p - vec2( cos( i ), sin( i ) ) * 0.4 * ( 1.0 + WOW * sin( iTime * 4.0 ) * 0.5 );\n\t\tfloat strength = exp( -length( gap ) * 16.0 ) * 10.0;\n\t\tsum += strength;\n\t\tnor += vec3( gap, 0.1 ) * strength;\n\t}\n\t\n\tfloat meta = pow( clamp( sum, 0.0, 1.0 ), 100.0 );\n\tnor = normalize( nor );\n\tvec3 dif = ( clamp( dot( normalize( vec3( 1.0, 1.0, 1.0 ) ), nor ), 0.0, 1.0 ) + 0.1 ) * vec3( 0.9, 0.6, 0.3 );\n\tfloat sugar = clamp( abs( noise( p * 7.0 + 20.0 ) - 0.5 ) * 2.0, 0.0, 1.0 ) * 0.12 * sum;\n\tvec3 spe = pow( clamp( dot( normalize( vec3( 0.8, 0.9, 1.0 ) + vec3( 0.0, 0.0, 1.0 ) ), nor ) + sugar * 0.1, 0.0, 1.0 ), 30.0 ) * vec3( 0.2 );\n\t\n\tvec3 bg = ( vec3( 0.9, 0.0, 0.4 ) + clamp( sin( p.x * 50.0 + p.y * 40.0 + iTime * 8.0 ) * 10.5 - 4.0, 0.0, 1.0 ) * vec3( 0.0, 1.2, -0.3 ) * exp( -length( p*0.8 ) ) );\n\t\n\tfragColor = vec4( meta * ( dif + spe + sugar ) + ( 1.0 - meta ) * bg, 1.0 );\n}","name":"","description":"","type":"image"}]}