{"ver":"0.1","info":{"id":"3tXczj","date":"1592431342","viewed":1359,"name":"Lens Distortion Example","username":"peterekepeter","description":"This example demonstrates lens distortion effect. While not physically accurate, the parameters can be tweaked to reach something aesthetically pleasing.","likes":25,"published":3,"flags":0,"usePreview":0,"tags":["lensdistortionfisheye"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DARK_EDGES\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n   \tvec2 disorsion = uv-.5;\n    \n    disorsion.x*=aspect; // aspect correction\n    \n    // take distance from center\n   \tfloat len = length(disorsion);\n    \n    // these are the lens parameters\n    float k1 = 1.2;\n    float k2 = 1.0;\n    float k3 = -3.2;\n    \n    disorsion \n        = disorsion*k1 \n        + disorsion*len*k2 \n        + disorsion*len*len*k3;\n        // higher powers may be added if necessary\n    \n    \n    disorsion.x/=aspect; // aspect correction\n    \n    vec4 col = texture(iChannel0, disorsion+.5);\n    \n    #ifdef DARK_EDGES\n    {\n        float edge = 0.7;\n        float dispersion = 0.03;\n    \tcol *= vec4(\n            pow(max(edge-len, 0.0), 0.2),\n            pow(max(edge-dispersion-len, 0.0), 0.2),\n            pow(max(edge-dispersion*2.0-len, 0.0), 0.2),\n        1)*1.2;\n    }\n    #endif\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}