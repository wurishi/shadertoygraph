{"ver":"0.1","info":{"id":"dsjBWK","date":"1708544282","viewed":192,"name":"Feedback Trails","username":"belfry","description":"Had this one lying around.","likes":10,"published":1,"flags":32,"usePreview":1,"tags":["unarchived"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n    fragColor += fragColor.rrgb + fragColor.gbbb;\n    fragColor *= .33333;\n    fragColor += texture(iChannel1, uv * 5.).rrrr * .07;\n\n    vec2 a = floor(((2. * fragCoord - iResolution.xy) / iResolution.y) * 15.);\n    float c = mod(a.x + a.y, 2.);\n    vec4 n1 = texture(iChannel1, uv * .1 + iTime * .003);\n    vec4 n2 = texture(iChannel1, uv.yx * .1 - iTime * .003);\n    uv += (n1 + n2).xy * .005;\n    fragColor += texture(iChannel1, uv * vec2(.2, 5.)).rrrr * smoothstep(0., 1., length(2. * uv - 1.)) * c * .1;\n    fragColor += texture(iChannel1, uv * vec2(5., .2)).rrrr * smoothstep(0., 1., length(2. * uv - 1.)) * (1. - c) * .1;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float PI = 3.14159265;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 polar = vec2(atan(uv.y, uv.x) / PI * .5 + .5, log(length(uv)));\n    vec2 tiling = vec2(20., 3.);\n    polar *= tiling;\n    polar.y -= time * 2.5;\n    \n    float d = 100000.;\n    vec4 a = vec4(0.);\n    for (float i = -1.; i < 1.5; i++) {\n        for (float j = -1.; j < 1.5; j++) {\n            vec2 tileID = floor(polar) - vec2(i, j);\n            tileID.x = mod(tileID.x, tiling.x);\n            vec2 tileUV = fract(polar) + vec2(i, j);\n            vec4 noise = texelFetch(\n                iChannel0, \n                ivec2(mod(tileID, iChannelResolution[0].xy)), \n                0\n            );\n            tileUV = 2. * tileUV - 1.;\n            float size = .1 + .4 * noise.z;\n            vec2 offset = (sin(noise.yz * time * 1.5)) * 2.;\n            vec2 pos = tileUV + offset;\n            if (dot(noise, vec4(.25)) > .6) {\n                d = abs(length(pos) - size + \n                    sin(atan(pos.y, pos.x) * 5. + time*(2. * noise.w - 1.) * 15.) * .5 * size) - .1;\n            } else {\n                d = length(pos) - size + sin(atan(tileUV.y, tileUV.x) * 5.) * .2 * 0.;\n            }\n            a += (1.-step(0., d)) * noise;\n        }\n    }\n    \n    fragColor = a*15.*iTimeDelta + texture(iChannel1, fragCoord / iResolution.xy, 1.) * pow(.95, iTimeDelta * 60.);\n}","name":"Buffer A","description":"","type":"buffer"}]}