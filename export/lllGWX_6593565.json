{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//first ray thing\n//\n\n\n#define pi 3.1415\nfloat sphere(vec3 ray, vec3 dir, vec3 center, float radius)\n{\n vec3 rc = ray;\n float c = dot(rc, rc) - (radius*radius);\n float b = dot(dir, rc);\n float d = b*b - c;\n float t = -b - sqrt(abs(d));\n float st = step(0.0, min(t,d));\n return mix(-1.0, t, st);\n}\n\nvec3 background(float t, vec3 rd)\n{\n vec3 light = normalize(vec3(sin(t), sin(t), cos(t)));\n float sun = max(0.0, dot(rd, light));\n float sky = max(0.0, dot(rd, vec3(-sin(iTime), -cos(iTime), -1.0)));\n float ground = max(0.0, -dot(rd, vec3(-sin(iTime+pi*2.0), -cos(iTime+pi*2.0), 1.0)));\n float bg = max(0.0, dot(rd, vec3(0.0,0.0, sin(iTime)*.2+1.0)));\n return \n  (pow(sun, 256.0)+0.2*pow(sun, 4.0))*vec3(1.0, 1.6, 0.0) +\n  pow(ground, 1.5)*vec3(sin(iTime)*.1+.4, 0.0, .3) +\n  pow(sky, 1.5)*vec3(0.0, sin(iTime)*.1+.3, .4)+\n  pow(bg, 2.0)*vec3(.5,.5,.5) ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-1.0 + 2.0*fragCoord.xy / iResolution.xy) * \n    vec2(iResolution.x/iResolution.y, 1.0);\n    vec3 ro = vec3(0.0, 0.0, -2.5);\n    vec3 rd = normalize(vec3(uv, 1.0));\n    vec3 p = vec3(0.0, 0.0, 0.0);\n    float t = sphere(ro, rd, p, sin(cos(uv.x*13.0)*2.0+iTime+sin(uv.y*10.0+iTime))*.1+1.0);\n    vec3 nml = normalize(p - (ro+rd*t));\n    vec3 bgCol = background(iTime, rd);\n    rd = reflect(rd, nml);\n    vec3 col = background(iTime, rd) * vec3(0.9, 0.8, 1.0);\n    fragColor = vec4( mix(bgCol, col, step(0.0, t)), 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lllGWX","date":"1425799906","viewed":1287,"name":"ngRay0","username":"netgrind","description":"baby's first raytrace","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["raytrace","cool","netgrind"],"hasliked":0,"parentid":"","parentname":""}}