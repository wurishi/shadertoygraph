{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"music","id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// based on https://www.shadertoy.com/view/lsf3RH by\r\n// trisomie21 (THANKS!)\r\n// My apologies for the ugly code.\r\n\r\nfloat snoise(vec3 uv, float res)\t// by trisomie21\r\n{\r\n\tconst vec3 s = vec3(1e0, 1e2, 1e4);\r\n\t\r\n\tuv *= res;\r\n\t\r\n\tvec3 uv0 = floor(mod(uv, res))*s;\r\n\tvec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\r\n\t\r\n\tvec3 f = fract(uv); f = f*f*(3.0-2.0*f);\r\n\t\r\n\tvec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\r\n\t\t      \t  uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\r\n\t\r\n\tvec4 r = fract(sin(v*1e-3)*1e5);\r\n\tfloat r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\r\n\t\r\n\tr = fract(sin((v + uv1.z - uv0.z)*1e-3)*1e5);\r\n\tfloat r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\r\n\t\r\n\treturn mix(r0, r1, f.z)*2.-1.;\r\n}\r\n\r\nfloat freqs[4];\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tfreqs[0] = texture( iChannel1, vec2( 0.01, 0.25 ) ).x;\r\n\tfreqs[1] = texture( iChannel1, vec2( 0.07, 0.25 ) ).x;\r\n\tfreqs[2] = texture( iChannel1, vec2( 0.15, 0.25 ) ).x;\r\n\tfreqs[3] = texture( iChannel1, vec2( 0.30, 0.25 ) ).x;\r\n\r\n\tfloat brightness\t= freqs[1] * 0.25 + freqs[2] * 0.25;\r\n\tfloat radius\t\t= 0.24 + brightness * 0.2;\r\n\tfloat invRadius \t= 1.0/radius;\r\n\t\r\n\tvec3 orange\t\t\t= vec3( 0.8, 0.65, 0.3 );\r\n\tvec3 orangeRed\t\t= vec3( 0.8, 0.35, 0.1 );\r\n\tfloat time\t\t= iTime * 0.1;\r\n\tfloat aspect\t= iResolution.x/iResolution.y;\r\n\tvec2 uv\t\t\t= fragCoord.xy / iResolution.xy;\r\n\tvec2 p \t\t\t= -0.5 + uv;\r\n\tp.x *= aspect;\r\n\r\n\tfloat fade\t\t= pow( length( 2.0 * p ), 0.5 );\r\n\tfloat fVal1\t\t= 1.0 - fade;\r\n\tfloat fVal2\t\t= 1.0 - fade;\r\n\t\r\n\tfloat angle\t\t= atan( p.x, p.y )/6.2832;\r\n\tfloat dist\t\t= length(p);\r\n\tvec3 coord\t\t= vec3( angle, dist, time * 0.1 );\r\n\t\r\n\tfloat newTime1\t= abs( snoise( coord + vec3( 0.0, -time * ( 0.35 + brightness * 0.001 ), time * 0.015 ), 15.0 ) );\r\n\tfloat newTime2\t= abs( snoise( coord + vec3( 0.0, -time * ( 0.15 + brightness * 0.001 ), time * 0.015 ), 45.0 ) );\t\r\n\tfor( int i=1; i<=7; i++ ){\r\n\t\tfloat power = pow( 2.0, float(i + 1) );\r\n\t\tfVal1 += ( 0.5 / power ) * snoise( coord + vec3( 0.0, -time, time * 0.2 ), ( power * ( 10.0 ) * ( newTime1 + 1.0 ) ) );\r\n\t\tfVal2 += ( 0.5 / power ) * snoise( coord + vec3( 0.0, -time, time * 0.2 ), ( power * ( 25.0 ) * ( newTime2 + 1.0 ) ) );\r\n\t}\r\n\t\r\n\tfloat corona\t\t= pow( fVal1 * max( 1.1 - fade, 0.0 ), 2.0 ) * 50.0;\r\n\tcorona\t\t\t\t+= pow( fVal2 * max( 1.1 - fade, 0.0 ), 2.0 ) * 50.0;\r\n\tcorona\t\t\t\t*= 1.2 - newTime1;\r\n\tvec3 sphereNormal \t= vec3( 0.0, 0.0, 1.0 );\r\n\tvec3 dir \t\t\t= vec3( 0.0 );\r\n\tvec3 center\t\t\t= vec3( 0.5, 0.5, 1.0 );\r\n\tvec3 starSphere\t\t= vec3( 0.0 );\r\n\t\r\n\tvec2 sp = -1.0 + 2.0 * uv;\r\n\tsp.x *= aspect;\r\n\tsp *= ( 2.0 - brightness );\r\n  \tfloat r = dot(sp,sp);\r\n\tfloat f = (1.0-sqrt(abs(1.0-r)))/(r) + brightness * 0.5;\r\n\tif( dist < radius ){\r\n\t\tcorona\t\t\t*= pow( dist * invRadius, 24.0 );\r\n  \t\tvec2 newUv;\r\n \t\tnewUv.x = sp.x*f;\r\n  \t\tnewUv.y = sp.y*f;\r\n\t\tnewUv += vec2( time, 0.0 );\r\n\t\t\r\n\t\tvec3 texSample \t= texture( iChannel0, newUv ).rgb;\r\n\t\tfloat uOff\t\t= ( texSample.g * brightness * 4.5 + time );\r\n\t\tvec2 starUV\t\t= newUv + vec2( uOff, 0.0 );\r\n\t\tstarSphere\t\t= texture( iChannel0, starUV ).rgb;\r\n\t}\r\n\t\r\n\tfloat starGlow\t= min( max( 1.0 - dist * ( 1.0 - brightness ), 0.0 ), 1.0 );\r\n\t//fragColor.rgb\t= vec3( r );\r\n\tfragColor.rgb\t= vec3( f * ( 0.75 + brightness * 0.3 ) * orange ) + starSphere + corona * orange + starGlow * orangeRed;\r\n\tfragColor.a\t\t= 1.0;\r\n}\r\n\r\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dXGR4","date":"1363057754","viewed":68994,"name":"Main Sequence Star","username":"flight404","description":"Inspired by trisomie21's 3d noise fireball, I made some tweaks and ended up with a star.\n\nEDIT: Fixed the negative sqrt issue as per iq's suggestion.","likes":699,"published":1,"flags":0,"usePreview":1,"tags":["3dnoise","perlin","star","corona"],"hasliked":0,"parentid":"","parentname":""}}