{"ver":"0.1","info":{"id":"wdcXDN","date":"1571982533","viewed":686,"name":"diffusion-reaction","username":"matthen","description":"diffusion, reaction","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["diffusion","reaction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = texture(iChannel0, uv).rrr;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"# define kFilterWidth 5\n\nconst int kFilterSize = kFilterWidth * kFilterWidth;\n\nconst float[kFilterSize] filterW = float[kFilterSize](\n    0.00016, 0.00183, -0.00858, 0.00183, 0.00016,\n    0.00183, 0.02119, -0.09923, 0.02119, 0.00183,\n    -0.00858, -0.09923, 0.4647, -0.09923, -0.00858,\n    0.00183, 0.02119, -0.09923, 0.02119, 0.00183,\n    0.00016, 0.00183, -0.00858, 0.00183, 0.00016\n);\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 col = vec3(0.);\n    vec2 maskUV = (\n        fragCoord - .5 * iResolution.xy)\n        / max(iResolution.x, iResolution.y);\n    maskUV *= vec2(7., 4.);\n    maskUV = vec2(atan(maskUV.y, maskUV.x), length(maskUV));\n    float mask = smoothstep(\n        maskUV.y -0.1, maskUV.y,\n        1. + .7 * cos(maskUV.x) * cos(maskUV.x));\n    \n    \n    vec2 uv = fragCoord / iResolution.xy;\n    for(int i = 0; i < kFilterSize; i++) {\n        float x = float(i % kFilterWidth);\n        float y = float(i / kFilterWidth);\n        float coeff = 7.5 * filterW[i];\n        vec2 off = vec2(x, y) - float(kFilterWidth) / 2. + .5;\n        off /= iResolution.xy;\n        off *= 1.5;\n        off *= rot(6.28 * hash21(uv + iTime));\n        col += coeff * texture(iChannel0, uv + off).rgb;\n    }\n    col = 1.2*(col - 0.5) + 0.5;;\n    col = clamp(col, 0., 1.);\n    fragColor = vec4(mask * col + 1. - mask, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"# define kFilterWidth 5\n\nconst int kFilterSize = kFilterWidth * kFilterWidth;\n\nconst float[kFilterSize] filterW = float[kFilterSize](\n    0.00296902, 0.0133062, 0.0219382, 0.0133062, 0.00296902,\n0.0133062, 0.0596343, 0.0983203, 0.0596343, 0.0133062,\n0.0219382, 0.0983203, 0.162103, 0.0983203, 0.0219382,\n0.0133062, 0.0596343, 0.0983203, 0.0596343, 0.0133062,\n0.00296902, 0.0133062, 0.0219382, 0.0133062, 0.00296902\n);\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.);\n    \n    for(int i = 0; i < kFilterSize; i++) {\n        float x = float(i % kFilterWidth);\n        float y = float(i / kFilterWidth);\n        float coeff = filterW[i];\n        vec2 off = vec2(x, y) - float(kFilterWidth) / 2. + .5;\n        off /= iResolution.xy;\n        off *= 1.;\n        off *= rot(6.28 * hash21(uv + iTime));\n        col += coeff * texture(iChannel0, uv + off).rgb;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\nmat2 rot(in float theta) {\n\treturn mat2(\n        cos(theta), -sin(theta),\n        sin(theta), cos(theta)\n    );\n}\n\nvec2 hash22(vec2 p) {\n    p = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0 * fract(sin(p)*43758.5453123);\n}\n\nfloat hash21(vec2 p) {\n\tfloat h = dot(p,vec2(127.1,311.7));\n    return -1.0 + 2.0 * fract(sin(h)*43758.5453123);\n}","name":"Common","description":"","type":"common"}]}