{"ver":"0.1","info":{"id":"DscSWX","date":"1680469594","viewed":106,"name":"ChatGPT: Clouds and Stars","username":"artrointel","description":"ChatGPT provided a sample code to draw clouds.\n\nI just added and edited some code little to get better look&feel.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cloud","chatgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 co)\n{\n    vec2 p = floor(co);\n    vec2 f = fract(co);\n\n    float a = rand(p);\n    float b = rand(p + vec2(1.0, 0.0));\n    float c = rand(p + vec2(0.0, 1.0));\n    float d = rand(p + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod(iTime, 100.);\n    float speed = 1.0;\n    float frequency = 6.0;\n    float density = 0.2;\n    int depth = 5;\n    vec3 color = vec3(0.8, 0.8, 1.);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float noiseValue = 0.0;\n    \n    for (int i = 0; i < depth; i++) {\n        noiseValue += noise(uv * frequency + vec2(-time * speed, 0.0)) * density;\n        frequency *= 2.0;\n        density *= 0.5;\n    }\n    \n    vec4 clouds = vec4(color * noiseValue, 1.0);\n    \n    vec4 stars;\n    if (rand(uv) > 0.995) {\n        stars = vec4(1.0, 1.0, 1.0, 1.0);\n        stars *= rand(uv*time);// pow((rand(uv*time) * starSize), 3.0);\n    }\n    \n    // Output to screen\n    fragColor = clouds + stars + vec4(0.1, 0.1, 0.6, 1.0);\n}","name":"Image","description":"","type":"image"}]}