{"ver":"0.1","info":{"id":"4lV3DV","date":"1476894660","viewed":97,"name":"raymarching experiments","username":"mfandl","description":"I recently found out about raymarching and I can not resist digging deeper. this is my first piece. thanks to: https://www.youtube.com/watch?v=yxNnRSefK94","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","bubbles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfBox(vec3 p) {\n\tvec3 size = vec3(0.9 + 0.1 * abs(sin(iTime)));\n    vec3 f = (fract(p) * 2.0 - 1.0);\n    vec3 dist = abs(f) - size / 2.0;\n    \n    return max(dist.x, max(dist.y, dist.z));\n}\n\nfloat sdfSphere(vec3 p) {\n    vec3 f = (fract(p * 2.0) * 2.0 - 1.0);\n\treturn length(f) - 0.7;\n}\n\nfloat sdfSphere2(vec3 p) {\n    vec3 f = (fract(p * 2.0) * 2.0 - 1.0);\n\treturn length(f) - 0.7;\n}\n\nfloat map(vec3 p) {\n    return max(min(sdfSphere(p), sdfBox(p)), -sdfSphere2(p));\n}\n\nfloat trace(vec3 r, vec3 o) {\n\tfloat t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    \n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 1.0 - uv * 2.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.25));\n    \n    float theta = iTime * 0.1;\n    r.yz *= mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n    \n    vec3 o = vec3(iTime * 0.2, 0.0, -iTime * 0.2);\n    \n    float t = trace(r, o);\n    float fog = 1.0 / (1.0 + t * t * 0.5);\n    vec3 fcc = vec3(1.0 - fog);\n    \n    vec3 floored = floor( o + r * t);\n    if (fog > 0.2) {\n\t\tfragColor = vec4(fcc.x * ((mod(floored.x, 10.0)) / 10.0 + 0.5), 1.0 - fcc.x * ((mod(floored.x, 10.0)) / 10.0 + 0.5), 0.0, 1.0);\n    } else {\n    \tfragColor = vec4(uv.x, 1.0, uv.y, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}