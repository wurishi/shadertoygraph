{"ver":"0.1","info":{"id":"slycWy","date":"1662128654","viewed":75,"name":"ShaderPrac_03_randommosaic","username":"AstridV","description":"Random Mosaic (pseudo-random / deterministic random)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","math","random","mosaic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  I learned this from www.thebookofshaders.com\n//  Don't use this for comertial\n//  I share this just for learning like a homework\n\nfloat random(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = vec2(uv.x, 1. - uv.y);\n\n    vec3 col = vec3(0.0);\n    \n    //\n    uv *= 10.0;\n    vec2 ipos = floor(uv) + random(vec2(iTime * .000000005));\n    vec2 fpos = fract(uv);\n    \n    \n    \n    // Time varying pixel color\n    col = vec3(random(ipos));\n    //col = vec3(random(fpos));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}