{"ver":"0.1","info":{"id":"tlGSWt","date":"1583816861","viewed":122,"name":"Dancing Cross Lights","username":"nicholasreynolds02","description":"This is just a fun motion pattern I put together while following the lessons in the book of shaders website.  If anyone has optimization suggestions I'd love to hear them.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["colors","motion","lights","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float box (in vec2 _st, in vec2 _size) {\n    _size = vec2(0.5) - _size *0.5;\n    \n    vec2 uv = smoothstep(_size, _size+vec2(0.0001), _st);\n    \n    uv *= smoothstep (_size, _size+vec2(0.0002), vec2(1.0)-_st);\n    \n    return uv.x * uv.y;\n}\n\nvoid rotate2d(inout vec2 uv, in vec2 origin, in float _angle) {\n    uv -= origin;\n    uv *= mat2(cos(_angle), -sin(_angle),\n                sin(_angle), cos(_angle));\n    uv += origin;\n}\n\nvoid scale2d(inout vec2 uv, in vec2 origin, in vec2 _scale) {\n    uv -= origin;\n    uv *= mat2(_scale.x, 0.0,\n              0.0, _scale.y);\n    uv += origin;\n}\n\nfloat drawCross(in vec2 _st, float _size) {\n    return box(_st, vec2(_size, _size / 4.0)) + box(_st, vec2(_size/4.0, _size));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    vec3 finalCol = vec3(0);\n    \n    float v = cos((iTime) / 10.0 - 3.14);\n    \n    for (float i = 0.0; i < 80.0; i++) {\n\n        float t = iTime;\n        \n        vec2 translate = vec2(cos(t + i / (2.0 + v)), sin(t + i + v)) * 1.5;\n\n        vec2 uv = st;\n        uv += translate * 0.3 - vec2(0.5, 0);\n\n        rotate2d(uv, vec2(0.5, 0.5), iTime);\n        scale2d(uv, vec2(0.5, 0.5), vec2(2.0));\n        vec3 col = vec3(0.0);\n        col += vec3(drawCross(uv, 0.25));\n\n        col *= vec3(sin(i) * 0.5 + 0.5, cos(i) * 0.5 + 0.5  , mod(i / 30.0, 0.5));\n        \n        finalCol = max(col, finalCol);\n\n\n        fragColor = vec4(finalCol,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}