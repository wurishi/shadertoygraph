{"ver":"0.1","info":{"id":"4cj3R3","date":"1706617820","viewed":72,"name":"Shader art ","username":"Kotevich","description":"shader art","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shaderart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 0.5);\n    vec3 d = vec3(0.80, 0.90, 0.30);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n      \n    for (int i=0; i<2; i++)\n    {\n        uv = fract(uv * 1.5) - 0.5;\n        \n        float d = length(uv) * exp(-length(uv0));\n        vec3 col = palette(length(uv0) + iTime *.4);\n\n        d = sin(d * 8. + iTime)/8.;\n        d = abs(d);\n        d = 0.01 / d;\n\n        finalColor += col * d;\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}