{"ver":"0.1","info":{"id":"MlBfRy","date":"1516246082","viewed":75,"name":"Tunnel of Geometry","username":"timeisbeautifulhere","description":"a","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat LINE_WIDTH=10.0/iResolution.y;\n    float DEGREES=iTime*PI;\n    \n    vec2 normalized=2.0*(fragCoord.xy/iResolution.xy) - 1.0;\n    vec2 rCoord=vec2(\n        cos(DEGREES)*normalized.x+sin(DEGREES)*normalized.y,\n    \t-sin(DEGREES)*normalized.x+cos(DEGREES)*normalized.y\n    );\n    \n    //weird coordinate system used for math. goes 0 -> 1 -> 0\n    vec2 sNormalized=abs(abs(rCoord)-1.0);\n    \n    if(abs(abs(normalized.y)-sNormalized.x)< LINE_WIDTH)\n        fragColor=vec4(1,1,1,1);\n    else\n        fragColor=vec4(0,0,0,1);\n}","name":"Image","description":"","type":"image"}]}