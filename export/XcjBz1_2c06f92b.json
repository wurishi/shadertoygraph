{"ver":"0.1","info":{"id":"XcjBz1","date":"1724656697","viewed":21,"name":"flower of Venus orbit","username":"extramuros","description":"flower of Venus orbit - Claude.ai","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["yoyo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Center the coordinate system\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Parameters for the Venus flower\n    float earthRadius = 0.4;\n    float venusRadius = 0.28;\n    float earthPeriod = 1.0;\n    float venusPeriod = 0.615;  // Approximate ratio of Venus' orbital period to Earth's\n    \n    // Visualization parameters\n    float lineIntensity = 0.00001;  // Reduced from 0.0003\n    float lineWidth = 2.0;  // Adjust for thicker or thinner lines\n    float fadeSpeed = 50.0;  // Speed of pattern build-up\n    \n    vec3 col = vec3(0.0);\n    \n    // Calculate the number of steps based on current time\n    float maxSteps = 1000.0;\n    float steps = min(iTime * fadeSpeed, maxSteps);\n    \n    // Draw the path\n    for (float i = 0.0; i < steps; i += 1.0)\n    {\n        float t = i / maxSteps * 8.0 * PI;  // 8 cycles for a complete flower\n        \n        vec2 earthPos = vec2(\n            earthRadius * cos(2.0 * PI * t / earthPeriod),\n            earthRadius * sin(2.0 * PI * t / earthPeriod)\n        );\n        \n        vec2 venusPos = vec2(\n            venusRadius * cos(2.0 * PI * t / venusPeriod),\n            venusRadius * sin(2.0 * PI * t / venusPeriod)\n        );\n        \n        vec2 p = venusPos - earthPos;\n        \n        float d = length(uv - p);\n        col += lineIntensity / (d * d + 0.000001) * lineWidth; // Adjusted accumulation\n    }\n    \n    // Tone mapping to prevent oversaturation\n    col = 1.0 - exp(-col * 0.7);\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}