{"ver":"0.1","info":{"id":"4lBXzt","date":"1445705621","viewed":248,"name":"fract1","username":"fantomas","description":"test AO","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["fractale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define pi 0.78539816339\n\nfloat distfunc (vec3 p)\n{\n    float r = length(p);\n    float df=1.;\n    float i3;\n    for (float i=1.; i<7.; i++)\n    {\n        i3=i*i*i;\n        df+=(1.+cos(pi*p.x*i3)*cos(pi*p.y*i3)*cos(pi*p.z*i3))/i3;\n    }\n    return (length(p-p/r*(df*1.8))-.2)/3.;\n}\n\n\nvec3 normal (vec3 pos, float rn)\n{\n    return vec3 ( distfunc (pos+vec3(rn,0,0))-distfunc (pos+vec3(-rn,0,0)),\n                  distfunc (pos+vec3(0,rn,0))-distfunc (pos+vec3(0,-rn,0)),\n                  distfunc (pos+vec3(0,0,rn))-distfunc (pos+vec3(0,0,-rn)) )/rn;                            \t\t\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    float vr=0.05;\n    float cr=20.;\n    \n    vec3 camo = vec3(sin(iTime*vr)*cr,0.*sin(iTime*vr)*5.,cos(iTime*vr)*cr);\n    vec3 camd = vec3(0.,0.,0.);\n    vec3 up = vec3(0.,1.,0.);\n    \n    vec3 dir = normalize(camd-camo);\n    \n    dir = normalize(up*(uv.y-iResolution.y/iResolution.x/2.)+cross(dir,up)*(uv.x-0.5)+(dir));\n    \n    \n    vec3 pos = camo;\n    float dmas;\n    float dmar;\n    \n    for (int i=0; i<48; i++)\n    {\n        dmar = distfunc(pos);\n        pos += dir*dmar;\n    }\n \n    dir = normalize(normal(pos,0.001));\n    vec3 posr=pos+dir/10.;\n   \n    for (int i=0; i<7; i++)\n    {\n        dmas = distfunc(posr);\n        posr += dir*dmas;   \n    }\n    \n    float ao = (6.4-length(posr-pos));\n    ao=1.-ao/6.4;\n    \n\n    float lr = length(normal(pos,0.1));\n    float lv = length(normal(pos,0.01));\n    float lb = length(normal(pos,0.001));\n    fragColor = (normalize(vec4(lr*lb*lv,lv*lr,lb,1.)))*ao/(1.+dmar*400.)*4.0;\n}","name":"","description":"","type":"image"}]}