{"ver":"0.1","info":{"id":"MXByWw","date":"1727908914","viewed":11,"name":"Mandelbrot Set_os05","username":"forcestep05","description":"mandelbrot 1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalizing coordinates from -0.5 to 0.5 //\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv - vec2(0.5, 0.5);\n    uv.x = uv.x * (iResolution.x / iResolution.y);\n    float newTime = fract(iTime / 25.0);\n    \n    uv.x = (pow(2.0, 1.0 - 15.0 * newTime)) * uv.x;\n    uv.y = (pow(2.0, 1.0 - 15.0 * newTime)) * uv.y;\n    uv.x -= 0.74509;\n    uv.y -= 0.1011;\n    \n    // making background color //\n    vec3 tmp = 0.12 + 0.14 * cos(0.5 * iTime + uv.xyx + vec3(0,2,4));\n    fragColor = vec4(tmp, 0.0);\n    \n    // Mandelbrot set algorithm //\n    bool inSet = true;\n    \n    vec2 disp = vec2(0,0);\n    \n    for(int i = 0; i < 1024; i++) {\n        \n        float tmp_x = (disp.x * disp.x - disp.y * disp.y) + uv.x;\n        float tmp_y =  2.0 * (disp.y * disp.x)            + uv.y;\n        if(length(vec2(tmp_x, tmp_y)) > 1.0) {\n            inSet = false;\n            break;\n        }\n        disp = vec2(tmp_x, tmp_y);\n    }\n    \n    // Edge Mandelbrot set algorithm //\n    bool inSet2 = true;\n    \n    vec2 disp2 = vec2(0,0);\n    \n    for(int i = 0; i < 1024; i++) {\n        \n        float tmp_x = (disp2.x * disp2.x - disp2.y * disp2.y) + uv.x;\n        float tmp_y =  2.0 * (disp2.y * disp2.x)            + uv.y;\n        if(length(vec2(tmp_x, tmp_y)) > 0.7515) {\n            inSet2 = false;\n            break;\n        }\n        disp = vec2(tmp_x, tmp_y);\n    }\n    \n    // Core Mandelbrot set algorithm //\n    bool inSet3 = true;\n    \n    vec2 disp3 = vec2(0,0);\n    \n    for(int i = 0; i < 1024; i++) {\n        \n        float tmp_x = (disp3.x * disp3.x - disp3.y * disp3.y) + uv.x;\n        float tmp_y =  2.0 * (disp3.y * disp3.x)            + uv.y;\n        if(length(vec2(tmp_x, tmp_y)) > 0.6) {\n            inSet3 = false;\n            break;\n        }\n        disp = vec2(tmp_x, tmp_y);\n    }\n    \n    // setting color inside mandelbrot sets\n    if(inSet) {\n        vec3 col = 0.5 + 0.5 * cos(2.0 * iTime + uv.xyx + vec3(0,2,4));\n        fragColor = vec4(col, 1.0);\n    }\n    \n    // edge shading //\n    if(inSet && !inSet2) {\n        vec3 pol = 0.5 + 0.3 * sin(1.5 * iTime + 2.0 * uv.xyx + vec3(0,2,4));\n        fragColor = vec4(pol, 1.0);\n    }\n    \n    // core shading //\n    if(inSet && inSet2 && !inSet3) {\n        vec3 tol = 0.3 + 0.2 * cos(1.0 * iTime + uv.yyx + vec3(0,2,4));\n        fragColor = vec4(tol, 1.0);\n    }\n    \n    \n}\n","name":"Image","description":"","type":"image"}]}