{"ver":"0.1","info":{"id":"WsjGRd","date":"1549735414","viewed":669,"name":"Motorola Loading screen","username":"ircss","description":"Motorolas loading screen","likes":17,"published":3,"flags":0,"usePreview":0,"tags":["procedural","simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat Cricle(vec2 uv, vec2 center, float radius, float thickness, float seed){\n    \n    float dis = distance(center, uv);\n    vec2 centerToPixel =  uv -center;\n    float angle = atan(centerToPixel.y, centerToPixel.x);\n    \n    float s1 = sin(angle *5. -iTime + 512. + seed)*0.006;\n    float s2 = sin(angle *2. + iTime*1.8+ 21.+ seed)*0.008;\n    float noise = s1 + s2;\n    return 1.- smoothstep(thickness, thickness + 0.013,abs(dis -radius + noise));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    float r =  Cricle(uv, vec2((iResolution.x/iResolution.y)*0.5, 0.5), 0.3, 0.0065, 42.);\n    float g =  Cricle(uv, vec2((iResolution.x/iResolution.y)*0.5, 0.5), 0.3, 0.005, 18.);\n    float b =  Cricle(uv, vec2((iResolution.x/iResolution.y)*0.5, 0.5), 0.3, 0.0065, 71.);\n    vec3 col = vec3(r,g,b);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}