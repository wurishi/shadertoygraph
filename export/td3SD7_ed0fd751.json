{"ver":"0.1","info":{"id":"td3SD7","date":"1572110909","viewed":227,"name":"Rainbow Voronoi","username":"copperTones","description":"a simple Moroni shader. colors based on center of cell. credit to the art of code for the voronoi tutorial","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","worley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 point(float i) {//random point maker\n    vec3 a = fract(i*vec3(123.45, 456.78, 321.98));\n    a += dot(a, a+35.79);\n    return fract(a.xy + a.zz);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragCoord -= iResolution.xy/2.;//centered, normalized, uv\n    vec2 uv = fragCoord/iResolution.y;\n    uv += .5;\n\t\n    vec2 p = vec2(-10.);\n    for(float i = 0.; i < 50.; i++) {//voronoi\n        vec2 v = .5 + .5*sin(6.2831*point(i) + .1*iTime);\n        if (length(uv-p) > length(uv-v)) {\n        \tp = v;\n        }\n    }\n\t\n    vec3 color = vec3(p.x+p.y);//based on og rainbow effect\n    color += vec3(0, 2, 4) + iTime;\n    color = .5 + .5*sin(color);\n    \n    fragColor = vec4(color, 1.);\n    fragColor *= 1. - 2.*length(uv-p);//times voronoi\n    \n    fragColor.w = 1.;\n}","name":"Image","description":"","type":"image"}]}