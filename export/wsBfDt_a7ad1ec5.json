{"ver":"0.1","info":{"id":"wsBfDt","date":"1591108065","viewed":352,"name":"Secret mining","username":"gaz","description":"3d","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Distance glow made by balkhan\n// Phantom Mode by aiekick\n\n#define opRepEven(p,s) mod(p,s)-0.5*s \n#define opRepOdd(p,s) p-s*round(p/s)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat lpNorm(vec3 p, float n)\n{\n\tp = pow(abs(p), vec3(n));\n\treturn pow(p.x+p.y+p.z, 1.0/n);\n}\n\nvec2 pSFold(vec2 p,float n)\n{\n    float h=floor(log2(n)),a =6.2831*exp2(h)/n;\n    for(float i=0.0; i<h+2.0; i++)\n    {\n\t \tvec2 v = vec2(-cos(a),sin(a));\n\t\tfloat g= dot(p,v);\n \t\tp-= (g - sqrt(g * g + 5e-3))*v;\n \t\ta*=0.5;\n    }\n    return p;\n}\n\nvec2 sFold45(vec2 p, float k)\n{\n    vec2 v = vec2(-1,1)*0.7071;\n    float g= dot(p,v);\n \treturn p-(g-sqrt(g*g+k))*v;\n}\n\nfloat frameBox(vec3 p, vec3 s, float r)\n{   \n    p = abs(p)-s;\n    p.yz=sFold45(p.yz, 1e-3);\n    p.xy=sFold45(p.xy, 1e-3);\n    p.x = max(0.0,p.x);\n\treturn lpNorm(p,5.0)-r;\n}\n\nfloat sdRoundBox( vec3 p, vec3 b, float r )\n{   \n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n}\n\nfloat deObj(vec3 p)\n{   \n    return min(sdRoundBox(p,vec3(0.3),0.05),frameBox(p,vec3(0.8),0.1));\n}\n\n//+++++++++++++++++++++++++++++++\nfloat g1=0.0,g2=0.0,pm=0.0;\nbool fs=false;\n\nfloat map(vec3 p)\n{\n    float de=1.0;\n    p.z-=iTime*1.1;\n    vec3 q= p;\n    p.xy=pSFold(-p.xy,3.0);\n    p.y-=8.5;\n    p.xz=opRepEven(p.xz,8.5);\n    \n    float de1=length(p.yz)-1.;\n    g1+=0.1/(0.1+de1*de1);\n    de=min(de,de1);\n    \n    \n    p.xz=pSFold(p.xz,8.0);\n    p.z-=2.0;\n    float rate=0.5;\n    float s=1.0;\n    for(int i=0;i<3;i++)\n    {\n        p.xy=abs(p.xy)-.8;\n        p.xz=abs(p.xz)-0.5;\n        p.xy*=rot(0.2);\n        p.xz*=rot(-0.9);\n        s*=rate;\n        p*=rate;\n        de=min(de,deObj(p/s));\n    }\n    \n    if(fs)return de;\n    q.z=opRepOdd(q.z,8.5);\n    float de0=length(q)-1.5;\n    pm = step(de0,de);\n    g2+=0.1/(0.1+de0*de0);\n    de=min(de,de0);\n    return de;\n    \n}\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<100;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if(d < 0.001)\n        {\n            if(pm<0.5) return t;\n            t+=3.5;        }\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nfloat calcShadow( vec3 light, vec3 ld, float len ) {\n    fs=true;\n\tfloat depth = march( light, ld, 0.0, len );\t\n\treturn step( len - depth, 0.01 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(-4,-3,3);\n    vec3 ta = vec3(0);\n    vec3 w = normalize(ta-ro);\n    vec3 u = normalize(cross(w,normalize(vec3(0,1,3))));\n    vec3 rd = mat3(u,cross(u,w),w)*normalize(vec3(uv,1.5));\n    vec3 col;\n    float maxd=50.0;\n    float t=march(ro,rd,0.5,maxd);\n    if(t<maxd)\n    {\n        vec3 p=ro+rd*t;\n        col=vec3(1); \n        vec3 n = calcNormal(p);      \n\t\tvec3 lightPos=vec3(1,3,-2);\n    \tvec3 li = lightPos - p;\n\t\tfloat len = length( li );\n\t\tli /= len;\n\t\tfloat dif = clamp(dot(n, li), 0.0, 1.0)*0.86;\n        float sha = calcShadow( lightPos, -li, len );\n        col *= vec3(1,0.6,0.2)*max(sha*dif, 0.2);\n        float rimd = pow(clamp(1.0 - dot(reflect(-li, n), -rd), 0.0, 1.0), 2.5);\n\t\tfloat frn = rimd+2.2*(1.0-rimd);\n    \tcol *= frn*0.8;\n        col *= max(0.5+0.5*n.y, 0.0);\n        col *= exp2(-2.*pow(max(0.0, 1.0-map(p+n*0.3)/0.3),2.0));\n        col += vec3(1,0.6,0.2)*pow(clamp(dot(reflect(rd, n), li), 0.0, 1.0), 20.0);\n    }\n    col+=vec3(0.1,0.3,0.5)*g1*0.12+vec3(1,0.6,0.2)*g2*0.1;\n    col=pow(col,vec3(2.5,1.3,0.8));\n    fragColor.xyz = col;\n}\n","name":"Image","description":"","type":"image"}]}