{"ver":"0.1","info":{"id":"DsfyDr","date":"1686696621","viewed":137,"name":"Resonance of Time","username":"Pink","description":"Time driven progressively changing blobby psychedelic pattern","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","psychedelic","sinusoidal","candy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float dist)\n{\n    //make a distance based colour gradient\n    vec3 a = vec3(0.5,0.1,0.5);\n    vec3 b = vec3(0.5,1.0,0.15);\n    vec3 c = vec3(1.0,1.0,1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a+b*cos(6.28318*(c*dist*d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float zoomout = 4.0 + iTime * 0.1;\n\n    // Centered aspect corrected normalized pixel coordinates\n    vec2 uv = ((fragCoord * 2.0 - iResolution.xy) / iResolution.y) * zoomout;\n\n    float a = zoomout - length(uv);\n    float d = length(uv) - zoomout * 0.5;\n    \n    a += 0.5 + 0.5 * sin(iTime * 0.6 + uv.x);\n    d -= 0.5 + 0.5 * sin(iTime + uv.x);\n\n\n    a += 1.0 + 0.5 * cos(iTime * 1.3 + uv.y);\n    d -= 1.0 + 0.5 * cos(iTime * 1.6 + uv.y);\n    \n    d = pow(1.1 / abs(d * a), 0.1);\n    a = pow(1.1 / abs(a), 2.4);\n\n\n    vec3 col = smoothstep(0.1, 0.9, d * 0.5 + 0.5 * palette(sin( d * iTime + zoomout)));\n    col = col - a - 0.5 + 0.5 * palette(sin(a * iTime * 0.1));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}