{"ver":"0.1","info":{"id":"XssBWs","date":"1498861207","viewed":292,"name":"2D Lighting (Updated)","username":"Davislast19","description":"2D Lighting shader with a brightness aspect. Blends colours!\nPlease comment if you think there are improvements to be made :)\nPS: If intensity is more than 1.0, it looks unnatural. Intensity is supposed to be between 0 and 1","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","lighting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 colours = vec3(0.0, 0.0, 1.0);\n    float backGroundLight = 0.25;\n    vec3 lightColours = vec3(1.0, 0.0, 0.0);\n    float brightness;\n    float intensity = abs(cos(iTime));\n    float size = 100.0;\n    vec2 lightPos = iResolution.xy / 2.0;\n    float dist = distance(fragCoord, lightPos);\n    float distFromEdge = size - dist;\n    \n    brightness = 1.0 / (dist * ((1.0 / intensity) / size)); // distFromEdge * intensity (original calc)\n    brightness -= brightness * (size / dist);\n    if(distFromEdge <= 0.0) {\n    \tbrightness = 0.0;\n    }\n    \n    lightColours.xyz *= abs(brightness);\n    colours.xyz *= abs(brightness) + backGroundLight;\n    colours.xyz += lightColours.xyz;\n    \n\tfragColor = vec4(colours.xyz, 1.0);\n}","name":"Image","description":"","type":"image"}]}