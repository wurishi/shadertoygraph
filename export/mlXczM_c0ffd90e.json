{"ver":"0.1","info":{"id":"mlXczM","date":"1690513835","viewed":42,"name":"RGB Pixel-By-Pixel Effect","username":"Xonatron","description":"Hard to explain. It treats each pixel as an RGB element. Across x-values, pixel 1 is R, 2 is G, 3 is B, and repeats... And you can set the thickness. The background effect is the default Shadertoy example.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pixel","effect","rgb","pixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Matthew Doucette, Xona Games\n// https://xona.com/\n// 11:45pm, Thursday, July, 27th, 2023\n// -----------------------------------\n\n// constants\n#define THICKNESS 1.0 // size of \"RGB pixel\" (just one, R, G, or B) in pixel\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // dot-by-dot effect\n    if (mod(fragCoord.x + 0.0 * THICKNESS, 3.0 * THICKNESS) <= THICKNESS)\n    {\n        col.x;       // r\n        col.y = 0.0; // g\n        col.z = 0.0; // b\n    }\n    if (mod(fragCoord.x - 1.0 * THICKNESS, 3.0 * THICKNESS) <= THICKNESS)\n    {\n        col.x = 0.0; // r\n        col.y;       // g\n        col.z = 0.0; // b\n    }\n    if (mod(fragCoord.x - 2.0 * THICKNESS, 3.0 * THICKNESS) <= THICKNESS)\n    {\n        col.x = 0.0; // r\n        col.y = 0.0; // g\n        col.z;       // b\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}