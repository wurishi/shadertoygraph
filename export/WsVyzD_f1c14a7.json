{"ver":"0.1","info":{"id":"WsVyzD","date":"1602576966","viewed":286,"name":"Tiny Raymarch","username":"Dragonpeak","description":"Raymarching in as few chars as possible(300 so far). \nAny tips to optimize more are appreciated.\nEDIT: 434 to 428, removed redundant variable.\nEDIT 2: 428 to 417, same as above\nEDIT 3: 417 to 373, pre-calculated radians & other equations.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["raymarch","small","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define b vec3\n#define t normalize\n#define r iResolution\nvoid mainImage( out vec4 q, in vec2 e )\n{\n    b f = t(-b(2.)), c = b(.5);\n    b s = t(b(f.y,-f.x,0.));\n    b d = (mat3(s,cross(s, f),-f) * t(b(e - r.xy / 2., -r.y / .7)));\n    float l = 0., m;\n    while(l < 9.)\n    {\n        m = length(2.+d*l)-1.;\n        if(m < .01) break;\n\t\tl += m;\n    }\n    if(l<9.)c *= dot(2.+d*l,b(.6,.1,.9));\n    q.xyz = c;\n}","name":"Image","description":"","type":"image"}]}