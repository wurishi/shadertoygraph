{"ver":"0.1","info":{"id":"sllcWX","date":"1648830028","viewed":290,"name":"blurry drop","username":"FabriceNeyret2","description":"answering https://www.facebook.com/groups/shadertoy/posts/1060864384494587/\n\nclick to see the isolines","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["generalizedline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// segment with disc ends: seamless distance to segment. from https://www.shadertoy.com/view/llySRh\nfloat line(vec2 p, vec2 a,vec2 b, out float h) { \n    p -= a, b -= a;\n    h = dot(p, b) / dot(b, b);                          // proj coord on line\n    return length(p - b * clamp(h,0.,1.));              // dist to segment\n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( 2.*u - R ) /R.y;\n         \n    float h, d = line(U, vec2(0,-.4), vec2(0,.6) , h ); // basic line SDF. get d,h\n    h /= 1.;                                            // h = normalized height along line\n    d -= .3*(1.-.5*h);                                  // make dist decrease with height\n    d =   smoothstep( .2, -.2, d )                      // trace the shape\n        * (1.-h);                                       // incorporate the gradient\n    O = vec4( 1. - d );                                 // image\n    \n    if (iMouse.z>0.) O.r = sin(100.*O.r);               // click to see isolines\n}","name":"Image","description":"","type":"image"}]}