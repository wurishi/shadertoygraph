{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float divs = 12.0;\n\nvec2 linstep( vec2 x0, vec2 x1, vec2 a )\n{\n    vec2 o;\n    o = clamp((a - x0)/(x1 - x0), 0.0, 1.0);\n    return o;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 div = vec2( divs, divs*iResolution.y/iResolution.x );\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    vec2 xy = div*uv;\n    vec2 S;\n\tS.x = (xy.x + xy.y)*(xy.x - xy.y)*0.5;\n    S.y = xy.x*xy.y;\n\tS.x -= iTime*3.0;\n    vec2 sxy = sin(3.14159*S);\n    vec2 b = fwidth(sxy)*0.7071;\t\t\t\t// jacobian\n\tvec2 pxy = smoothstep( -b, b, sxy );\n    pxy = 2.0*pxy - 1.0;\t\t\t\t\t\t// remap to [-1..1]\n    float a = 0.5*(pxy.x * pxy.y) + 0.5;\t\t// combine sine waves and remap to [0..1]\n    float c = sqrt( a );\t\t\t\t\t\t// correct for gamma\n\tfragColor = vec4(c, c, c, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mtf3zr","date":"1417895588","viewed":305,"name":"Stagnation Flow","username":"KazimirO","description":"Potential flow in a 90 degree corner at the origin.  ","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["flow","point","potential","stagnation","corner","90deg"],"hasliked":0,"parentid":"","parentname":""}}