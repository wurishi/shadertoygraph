{"ver":"0.1","info":{"id":"lfdfzl","date":"1733403245","viewed":47,"name":"see the moons","username":"Tiberon","description":"an interesting shader i made with IQ's moon sdf","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["moon","vibrant"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ){\n     vec3 a = vec3(.2,.4,.75);\n     vec3 b = vec3(.3,.5,.7);\n     vec3 c = vec3(.5,1.1,1.4);\n     vec3 d = vec3(0.101,0.082,0.973);\n     return a+b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdMoon(vec2 p, float d, float ra, float rb )\n{\n    p.y = abs(p.y);\n    float a = (ra*ra - rb*rb + d*d)/(2.0*d);\n    float b = sqrt(max(ra*ra-a*a,0.0));\n    if( d*(p.x*b-p.y*a) > d*d*max(b-p.y,0.0) )\n          return length(p-vec2(a,b));\n    return max( (length(p          )-ra),\n               -(length(p-vec2(d,0))-rb));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n    \n    uv.x*=iResolution.x/iResolution.y;\n    \n    vec2 uv0=uv;\n    \n    vec3 fcol=vec3(0.);\n    \n    float f=8.;\n    \n    for (float i =0.0; i<(sin(sdMoon(uv0,.75,1.,.75)*8.+iTime)/8.+1.)*3.; i++){\n    \n        uv*=1.5;\n        \n        uv=fract(uv);\n        \n        uv-=0.5;\n        \n        uv.x+=sin(sdMoon(uv0,0.75,1.,.75)*f+iTime)/f;\n        \n        uv.y+=sin(sdMoon(uv0,0.75,1.,.75)*f+iTime)/f;\n        \n        float d=sdMoon(uv,.375,.5,0.375)*exp(-length(uv0));\n        \n        d=sin(d*8.+iTime)/8.;\n        \n        d=abs(d);\n        \n        d=pow((0.01*(i+(sin(iTime)*0.5)+0.5))/d,1.2);\n        \n        vec3 col = sin(palette(length(uv0) + i*0.4 + iTime*0.4));\n\n        fcol+=col*d;\n    }\n    \n    fragColor = vec4(fcol,1.0);\n}","name":"Image","description":"","type":"image"}]}