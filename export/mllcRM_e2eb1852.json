{"ver":"0.1","info":{"id":"mllcRM","date":"1690544066","viewed":60,"name":"Future","username":"Borov","description":"My first shader :P","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["abstraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 r2(float t)\n{\n    return mat2(cos(t), -sin(t),sin(t),cos(t));\n}\n\nfloat polygon(vec2 uv, int angles)\n{\n float TWO_PI = 6.2831;\n float a = atan(uv.y, uv.x);\n float da = TWO_PI / float(angles);\n float d = cos(floor(a / da + .5) * da - a) * length(uv);\n return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec2 uv = (fragCoord *2.0 -iResolution.xy) / iResolution.y;\n float g = iTime;\n uv *= r2(g);\n vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,3,2));\n uv *= r2(length(uv*sin(iTime)*3.+.5)+iTime);\n uv = fract(uv);\n float b = polygon(uv, 2);\n vec3 y = step(b, .3) * col;\n fragColor = vec4(y, 1.);\n}","name":"Image","description":"","type":"image"}]}