{"ver":"0.1","info":{"id":"XtSSWc","date":"1446758187","viewed":371,"name":"Motion Graphics","username":"Branch","description":"Motion Graphics","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["motiongraphics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"struct polygon{\n\tvec2 A, B, C;\n};\nfloat sgn(vec2 p1, vec2 p2, vec2 p3){\n  return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\nint PointInTriangle(vec2 pt, vec2 v1, vec2 v2, vec2 v3){\n\tint b1, b2, b3;\n\n\tif(sgn(pt, v1, v2) < 0.0) b1=1;\n\tif(sgn(pt, v2, v3) < 0.0) b2=1;\n\tif(sgn(pt, v3, v1) < 0.0) b3=1;\n\tif((b1 == b2) && (b2 == b3))\n\t\treturn 1;\n\treturn 0;\n}\n\nint PointInTriangle(vec2 pt, polygon X){\n\tint b1, b2, b3;\n\n\tif(sgn(pt, X.A, X.B) < 0.0) b1=1;\n\tif(sgn(pt, X.B, X.C) < 0.0) b2=1;\n\tif(sgn(pt, X.C, X.A) < 0.0) b3=1;\n\tif((b1 == b2) && (b2 == b3))\n\t\treturn 1;\n\treturn 0;\n}\n\nfloat box(vec2 coord, vec2 pos, vec2 size){\n\tif((coord.x<(pos.x+size.x)) &&\n\t   (coord.x>(pos.x-size.x)) &&\n\t   (coord.y<(pos.y+size.y)) && \n\t   (coord.y>(pos.y-size.y)) ) \n\t\treturn 1.0;\n\treturn 0.0;\n}\nfloat sun(vec2 coord, vec2 pos, float size){\n\tif(length(coord-pos)<size)\n\t\treturn 1.0;\n\treturn 0.0;\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nmat2 rotate(float Angle)\n{\n    mat2 rotation = mat2(\n        vec2( cos(Angle),  sin(Angle)),\n        vec2(-sin(Angle),  cos(Angle))\n    );\n\treturn rotation;\n}\nfloat sdCapsule( vec2 p, vec2 a, vec2 b, float r ){\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return min(floor(length( pa - ba*h ) - r),0.);\n}\nfloat triangle( vec2 coord, vec2 pos, float angle, float thick, float size){\n    vec2 original_coord = coord;\n    coord += pos;\n    coord *= rotate(angle);\n    float collision = 0.0;\n    collision += sdCapsule( coord, vec2( 0.0, 0.333)*size, vec2( 0.3,-0.2)*size, thick );\n    collision += sdCapsule( coord, vec2( 0.0, 0.333)*size, vec2(-0.3,-0.2)*size, thick );\n    collision += sdCapsule( coord, vec2( 0.3,-0.2)*size, vec2(-0.3,-0.2)*size, thick );\n    collision += 3.0*texture( iChannel0, original_coord * 0.6 + vec2(iTime*0.02) ).b * 0.6;\n    collision += 2.5*texture( iChannel0, original_coord * 0.1 + vec2(iTime*0.001) ).b * 0.4;\n    return -min(max(-collision,0.0),1.0);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec4 tulos;\n\tvec4 lopullinentulos=vec4(1.0);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat aspectCorrection = (iResolution.x/iResolution.y);\n\tvec2 coordinate_entered = 2.0 * uv - 1.0;\n\tvec2 coord = vec2(aspectCorrection,1.0) *coordinate_entered;\n    vec2 ori_coord=coord;\n\tfor(float rgbare=0.0; rgbare<2.0; rgbare++){\n\tcoord = vec2(aspectCorrection,1.0) *coordinate_entered * (1.+0.2*cos(iTime*0.05));\n\tcoord.x*=1.0+rgbare*0.02;\n\tcoord*=1.0+rand(coord+iTime)/(pow(iTime,7.0)*3.0)-length(coord)*10.0/(pow(iTime*1.1,24.0));\n\tcoord*=1.0+0.1*sin(1.01*0.1);\n\ttulos=vec4(vec3(0.0/255.0, 0.0/255.0, 0.0/255.0),1.0);\n    \n    float beat = ceil(iTime);\n    coord*=1.0+0.3*sin(iTime*10.)/(1.+33.*mod(iTime,1.));\n\t\n    if(beat>24.)\n    \tcoord+=max(2.0-(iTime-24.)/2.,0.)*vec2(rand(floor(coord*2.))-0.5,rand(floor(coord*2.+44.))-0.5);\n\tvec3 taikurivitunluttinen=vec3(0.);\n    if(beat>8.){\n    \ttaikurivitunluttinen.rb+=0.7*max(1.0-(iTime-8.)/2.,0.)*vec2(rand(floor(coord*2.))-0.5,rand(floor(coord*2.+44.))-0.5);\n    \ttaikurivitunluttinen.rg+=0.7*max(1.0-(iTime-8.)/2.,0.)*vec2(rand(floor(coord))-0.5,rand(floor(coord+44.))-0.5);\n    \ttaikurivitunluttinen.rb-=0.7*max(1.0-(iTime-8.)/2.,0.)*vec2(rand(floor(coord*1.9))-0.5,rand(floor(coord*1.9+44.))-0.5);\n    \ttaikurivitunluttinen.rg-=0.7*max(1.0-(iTime-8.)/2.,0.)*vec2(rand(floor(coord*.9))-0.5,rand(floor(coord*.9+44.))-0.5);\n    }\n    if(beat>10.){\n        coord.x+=( 0.2*sin(iTime*12.+coord.y) ) / (1.0-10.*(iTime-10.));\n        coord.y+=( 0.2*sin(iTime*12.+coord.x) ) / (1.0-22.*(iTime-10.));\n    }\n        \n    if(beat>18.){\n        coord.x+=( 0.2*sin(iTime*12.+coord.y) ) / (1.0-22.*(iTime-18.));\n        coord.y+=( 0.2*sin(iTime*12.+coord.x) ) / (1.0-22.*(iTime-18.));\n    \ttaikurivitunluttinen.rb+=0.7*max(1.0-(iTime-18.)/2.,0.)*vec2(rand(floor(coord*2.))-0.5,rand(floor(coord*2.+44.))-0.5);\n    \ttaikurivitunluttinen.rg+=0.7*max(1.0-(iTime-18.)/2.,0.)*vec2(rand(floor(coord))-0.5,rand(floor(coord+44.))-0.5);\n    \ttaikurivitunluttinen.rb-=0.7*max(1.0-(iTime-18.)/2.,0.)*vec2(rand(floor(coord*1.9))-0.5,rand(floor(coord*1.9+44.))-0.5);\n    \ttaikurivitunluttinen.rg-=0.7*max(1.0-(iTime-18.)/2.,0.)*vec2(rand(floor(coord*.9))-0.5,rand(floor(coord*.9+44.))-0.5);\n    }\n    if(beat>27.){\n        coord.x+=( 0.2*sin(iTime*12.+coord.y) ) / (1.0-10.*(iTime-27.));\n        coord.y+=( 0.2*sin(iTime*12.+coord.x) ) / (1.0-22.*(iTime-27.));\n        coord.x+=( 0.1*sin(iTime*12.+coord.y) ) * (1.0+(iTime-27.));\n        coord.y+=( 0.1*sin(iTime*12.+coord.x) ) * (1.0+(iTime-27.));\n    }\n        \n        \n        \n\ttulos.rgb+=taikurivitunluttinen;\n    if(beat>28.)\n        coord/=4.3*(iTime-27.75);\n    if(beat>10.)\n        coord*=1.0+0.3*length(coord)*length(coord)*min(max((iTime-10.)*3.,0.),1.);\n        \n    if(beat>20. && beat<22.){\n    \tfor(float i=0.; i<8.; i++){\n        \ttulos.rgb += sun(coord, vec2(0.), mod(i*(0.3-.5*(iTime-20.)),14.)/(1.+(1.+i*0.1)*0.8*(iTime-20.)*0.01))*vec3(0.9,0.3,0.4)/(1.+(iTime-20.)/8.);\n        \ttulos.rgb -= sun(coord, vec2(0.), mod(i*(0.3-0.05-.5*(iTime-20.)),14.)/(1.+(1.+i*0.1)*0.8*(iTime-20.)*0.01))*vec3(0.9,0.3,0.4)*1.2/(1.+(iTime-20.)/8.);\n        }\n    }\n    for(float i=0.; i<32.; i++){\n        float magiTime=iTime-21.;\n        float drop=0.1*pow(magiTime*(1.+rand(vec2(i*6464.))),2.);\n    \ttulos.rgb += sun(coord, 22.*magiTime*magiTime*vec2(rand(vec2(i+64.))-0.5,rand(vec2(i+199.))-0.5), max(min(.065+rand(vec2(i))*.04,0.),magiTime))*vec3(0.9,0.3,0.4);\n    }\n        \n        if(beat>14.){\n            if(beat<20.)\n            coord.y+=sin((iTime-14.)/3.);\n        \tcoord*=rotate(iTime-14.);\n        }\n    if(beat>6.)\n        coord*=rotate(min(iTime-6.,3.141*0.5)+sin(iTime*6.)/(1.+4.75*pow(iTime-6.,2.)));   \n        \n    if(beat>8.)\n        coord.y=mod(coord.y+0.5,1.)-0.5;\n    if(beat>12.)\n        coord.y=mod(coord.y+0.5-iTime*4.,1.)-0.5;\n        \n    if(beat>18.){\n        tulos.rgb-=sin(coord.x*0.1);\n        coord.x=mod(coord.x+0.5,1.)-0.5;\n    }\n        \n    if(beat>16.)\n        coord*=rotate(-(iTime-16.)*3.141);\n\tif(mod(coord.x+coord.y+1.01*0.1+iTime/4.,0.2)<0.1){\n\t\tif(box(coord,vec2(0.),vec2(4.,0.4))==1.)\n\t\t   \ttulos.xyz-=vec3(0.4,0.5,0.3)*0.1;\n\t\t\n        if(PointInTriangle(\n        \t\t\t\t\t\t\tcoord, \n        \t\t\t\t\t\t\tvec2(0.,.5),\n        \t\t\t\t\t\t\tvec2(-.5,0.),\n        \t\t\t\t\t\t\tvec2(.5,0.) ) == 1 && beat > 2.)\n\t\t   \ttulos.xyz+=vec3(1.1);\n        if(box(coord,vec2(0.,-.25),vec2(.25,0.25))==1. && beat > 4.)\n\t\t   \ttulos.xyz=vec3(1.);\n        \n\t}\n        \n    if(beat>28.)\n        tulos+=(iTime-27.75);\n        \n    float collision = 0.0;\n    if(collision<0.0)\n        tulos.xyz += vec3(0.1);\n\t\n\ttulos.xyz=tulos.xyz-vec3(min(max(-0.57+length(ori_coord)*0.2,0.0),1.0))+vec3(0.015+0.03*rand(vec2(iTime+ori_coord.x+ori_coord.y,1.01*ori_coord.y*ori_coord.x)));\n\t\n\tif(rgbare==0.0)\n\t\tlopullinentulos.r=tulos.r;\n\tif(rgbare==1.0)\n\t\tlopullinentulos.gb=tulos.gb;\n\t}\n\tlopullinentulos.xyz=lopullinentulos.xyz*(1.2-0.4*mod(fragCoord.y,2.0));\n    lopullinentulos.rgb = pow(lopullinentulos.rgb,vec3(1.0/1.4));\n\tfragColor = lopullinentulos;\n}","name":"Image","description":"","type":"image"}]}