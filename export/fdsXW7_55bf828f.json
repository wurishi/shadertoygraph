{"ver":"0.1","info":{"id":"fdsXW7","date":"1618711265","viewed":75,"name":"twt/smile2","username":"Tomnnn","description":"2 more tutorials from \"the art of code\" on youtube","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0., 1.)\n\nfloat remap01(float a, float b, float t) {\n    return sat((t-a) / (b-a));\n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n    return sat((t-a) / (b-a)) * (d-c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect) {\n    return (uv-rect.xy) / (rect.zw-rect.xy);\n}\n\nvec4 Eye(vec2 uv, float side, vec2 m, float face) {\n    uv -= .5;\n    uv.x *= side;\n    float d = length(uv);\n    vec4 irisCol = vec4(.3, .5, 1., 1.);\n    vec4 col = mix(vec4(1.), irisCol, S(.1, .7, d) * .5);\n    col.a = S(.5, .48, d);\n    \n    // change sclera color with time\n    col.rgb = mix(col.rgb, vec3(1., .25, .35), 1. - face);\n    \n    // shadow around inner eyes\n    col.rgb *= 1. - S(.45, .5, d) * .5 * sat(-uv.y - uv.x * side);\n    \n    d = length(uv - m*.5);\n    // tint sclera\n    col.rgb = mix(col.rgb, vec3(0.), S(.3, .28, d));\n    \n    // iris\n    irisCol.rgb *= 1. + S(.3, .05, d);\n    // irisCol.rgb = mix(irisCol.rgb, vec3(.8, .1, .1), 1. - face);\n    float irisMask = S(.28, .25, d);\n    col.rgb = mix(col.rgb, irisCol.rgb, irisMask);\n    \n    d = length(uv - m*.65);\n    // pupil\n    float pupilSize = mix(.1, .25, face);\n    float pupilMask = S(pupilSize, pupilSize * .85, d);\n    pupilMask *= irisMask; // contain pupil in iris\n    col.rgb = mix(col.rgb, vec3(0.), pupilMask);\n    \n    // eye highlight\n    float et = iTime * 3.;\n    vec2 offs = vec2(sin(et + uv.y*15.), sin(et + uv.x*15.)) * .03 * (face);\n\n    uv += offs;\n\n    float highlight = S(.1, .09, length(uv-vec2(-.15, .15)));\n    highlight += S(.07, .05, length(uv+vec2(-.08, .08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    return col;\n}\n\nvec4 Mouth(vec2 uv, float face) {\n    uv -= .5;\n    vec4 col = vec4(.5, .18, .05, 1.);\n    \n    uv.y *= 1.5;\n    uv.y += uv.x * uv.x * 2. * (1. - 2.*face);\n    uv.x *= mix(1., 2., face);\n    float d = length(uv);\n    col.a = S(.5, .48, d);\n    \n    float td = length(uv - vec2(0., .6));\n    \n    // teeth + shadow\n    vec3 toothCol = vec3(1.) * S(.6, .35, d);\n    col.rgb = mix(col.rgb, toothCol, S(.4, .37, td));\n    \n    // tongue\n    td = length(uv + vec2(0., .5));\n    col.rgb = mix(col.rgb, vec3(1., .5, .5), S(.5, .2, td));\n    \n    return col;\n}\n\nvec4 Head(vec2 uv, float face) {\n    vec4 col = vec4(.9, .65, .1, 1.);\n    col.rgb = mix(col.rgb, vec3(0.9, .8, .5), 1. - face);\n    \n    float d = length(uv);\n    \n    col.a = S(.5, .49, d);\n    \n    float edgeShade = remap01(.35, .5, d);\n    edgeShade *= edgeShade;\n    col.rgb *= 1. - edgeShade * .5;\n    \n    // outline\n    col.rgb = mix(col.rgb, vec3(.6, .3, .1), S(.47, .48, d));\n    \n    //\n    float highlight = S(.41, .405, d);\n    highlight *= remap(.41, -.1, .75, 0., uv.y);\n    highlight *= S(.18, .19, length(uv - vec2(.21, .07)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    // cheek\n    d = length(uv - vec2(.25, -.2));\n    float cheek = S(.2, .01, d) * .4;\n    cheek *= S(.17, .16, d);\n    vec3 cheekColor = mix(vec3(1., .1, .1), vec3(.1, .5, .7), 1. - face);\n    col.rgb = mix(col.rgb, cheekColor, cheek);\n    \n    return col;\n}\n\nvec4 Smile(vec2 uv, vec2 m, float face) {\n    vec4 col = vec4(0.);\n    \n    float side = sign(uv.x);\n    \n    // mirror\n    uv.x = abs(uv.x);\n    \n    vec4 head = Head(uv, face);\n    vec4 eye = Eye(within(uv, vec4(.03, -.1, .37, .25)), side, m, face);\n    vec4 mouth = Mouth(within(uv, vec4(-.2, -.35, .2, -.15)), face);\n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 m = iMouse.xy / iResolution.xy;\n    m -= .5;\n    \n    float face = cos(iTime) * .5 + .5;\n    \n    uv -= m * (.25 - dot(uv, uv));\n\n    // Output to screen\n    fragColor = Smile(uv, m, face);\n}","name":"Image","description":"","type":"image"}]}