{"ver":"0.1","info":{"id":"lscfDs","date":"1527206470","viewed":290,"name":"Wiggle wiggle","username":"frostbytes89","description":"just a little bit","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat box(in vec2 uv, in vec2 size)\n{\n    //size = vec2(0.5) - size * 0.5;\n   // vec2 uv = smoothstep(size,\n    //                    size + vec2(1. / iResolution.y),\n   //                    st);\n   // uv *= smoothstep(size,\n    //                size + vec2(1. / iResolution.y),\n    //                vec2(1.0) - st);\n    \n    uv = smoothstep(0., -1.5/iResolution.y, abs(uv - .5) - size);\n    return uv.x * uv.y;\n}\n\n//------------------------------------------------------------------------------\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nfloat getPulseWave()\n{\n    float test = (sin(iTime/.5) * 2.) - 10000. * .5 ;\n    return test;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec3 color = vec3(0.0);\n\n    // move space from the center to the vec2(0.0)\n    uv -= .5;\n    \n\tfloat angle = 2.53;\n    float radians = (PI / 180.) * angle;\n    \n    // rotate the space\n    uv = (rotate2d( cos(getPulseWave()/.1) * radians )) * uv;        \n\n    \n    // move it back to the original place\n    uv += .5;\n    \n    // To move the cross we move the space\n    vec2 translate = vec2(cos(0.0),sin(iTime/.1));\n    uv += translate * -0.010 ;\n    \n    // Add the shape on the foreground\n    color += vec3( box(uv, vec2(.4)));\n\n    // Output to screen\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}