{"ver":"0.1","info":{"id":"wtXyWf","date":"1593240841","viewed":168,"name":"KIFS CEVS","username":"scry","description":"written in KodeLife","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["2d","trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    vec2 uv = fragCoord/iResolution.xy;\n \tvec3 bak = texture(iChannel0, uv).rgb;\n    fragColor = vec4(bak*2.,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define iTime iTime+210.\nfloat box (vec2 uv, float bord, float size) {\n    float is = 0.1;\n    is = 1.-is;\n    float bs = size;\n    if (uv.x < bs && uv.x > -bs && uv.y > -bs && uv.y < +bs) {\n        if (uv.x < bs-bord && uv.x > -bs+bord && uv.y < bs-bord && uv.y > -bs+bord) {\n        //if (uv.x < bs*is && uv.x > -bs*is && uv.y > -bs*is && uv.y < +bs*is) {\n            return 0.;\n        } else {\n            return 1.;\n        }\n    }\n}\nvec3 rgboxloop(vec2 uv, float bs) {\n    vec3 col = vec3(0.);\n    int steps = 13;\n    float s = 0.005;\n    for (int i=0;i<steps;i++) {\n        //bs += bak.r;\n        col.r += box(uv,s,fract(bs));\n        col.b += box(uv,s,fract(bs+0.1));\n        col.g += box(uv,s,fract(bs+0.2));\n        bs += 1./float(steps);\n        //bs += 0.2;\n    }\n    return col;\n}\n\n\nvec3 boxSys(vec2 uv, float t) {\n    vec3 col = vec3(0.);\n    float bs = t*0.5;\n    vec2 gv = fract(uv)-0.5;\n    float tc = t+uv.x+uv.y;\n    gv += vec2(sin(tc),cos(tc))*0.05;\n    gv = fract(gv*2.)-0.5;\n    col += rgboxloop(gv,bs);\n    return col;\n}\n\nvec2 rotate2d (vec2 uv, float a) {\n    return uv*mat2(sin(a),cos(a),\n                -cos(a),sin(a));\n}\n\n#define time (iTime+380.)*0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 tv = uv;\n    uv = -1. + 2. * uv;\n    uv.x *= 1.777; //aspect ration correction for 16:9\n    vec3 col = vec3(0.);\n    float bs = time*0.5;\n    //vec2 tv = inData.v_texcoord;\n    vec2 tvb = tv;\n    float t2 = time+sin((sin(tv.x*3.5)+cos(tv.y*5.9))*10.)*1.;\n    vec2 st = vec2(sin(t2),cos(t2))*0.1;\n    //tvb += st;\n    uv += st*0.2;\n    tvb -= 0.5;\n    tvb = abs(fract(rotate2d((tvb*1.5),time*0.01)));\n    tvb *= 1.1;\n    tvb += 0.5;\n    vec3 bak = texture(iChannel0, tvb).rgb;\n    vec2 tv1 = tv-0.5;\n    tv1 *= 1.002;\n    tv1 += 0.5;\n    vec3 bak1 = texture(iChannel0, tv1).rgb;\n    vec2 tv2 = tv-0.5;\n    tv2 *= 0.995;\n    tv2 += 0.5;\n    vec3 bak2 = texture(iChannel0, tv2).rgb;\n    //uv += d*0.1;\n    //v = rotate2d(uv,time*0.1);\n    vec2 gv = fract(uv)-0.5;\n    float t = time+uv.x+uv.y;\n    gv += vec2(sin(t),cos(t))*0.2;\n    gv = fract(gv*13.)-0.5;\n    //col += rgboxloop(gv,bs);\n    //float fr = 256 - spectrum.x*100.;\n    //float fr = 267.;\n    //vec2 fv = floor(abs(uv)*fr)/fr;\n    vec2 fv = abs(uv);\n    //vec2 fv = rotate2d(abs(uv),time*0.02);\n    //fv += d*0.2;\n    float a = time*0.004+1.;\n    //a = 0.042+time*0.01;\n    float fm = sin(time*0.1);\n    fv *= 0.5;\n    for (int i=0;i<20;i++) {\n        //fv += vec2(sin(t),cos(t))*0.00002;\n        fv = abs(fract(rotate2d((fv*1.05),a))-0.5);\n        a *= 1.2;\n    }\n    //fv = fract(rotate2d(abs(fv*0.1),a));\n    //fv = fract(rotate2d(abs(fv*0.5),a));\n    //fv = fract(rotate2d(abs(fv*18.),a));\n    //fv = fract(rotate2d(abs(fv-0.2)*10.2,a));\n    //fv = fract(rotate2d(abs(fv-0.2)*0.04,a));\n    \n    //vec3 col2 = boxSys(uv,20.);\n    float bt = time*0.01;\n    col += boxSys(fv*0.5,bt-0.001);\n    col += boxSys(fv*0.4,bt-0.001);//time*0.1);\n    //col -= boxSys(fv*1,time*0.1);//(time-0.1)*0.1);\n    //col -= boxSys(fv,(time-0.1)*0.1);\n    //col -= (boxSys(fv*0.9));\n    \n    col += mix(col,bak,0.4);\n    col = fract(col*1.1);\n    bak2 = mix(bak1,bak2,0.5);\n    col = mix(col,bak2,0.9);\n    //col = mix(col,bak2,0.5);\n    //col = fract(col*0.99);\n    fragColor = vec4(col,1.0);\n\n}","name":"Buffer A","description":"","type":"buffer"}]}