{"ver":"0.1","info":{"id":"7ttyRN","date":"1659480884","viewed":60,"name":"leinad-9","username":"leinad","description":"colorful squares","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n    \n    uv *= 20.0;\n\n    float timeMul = length(floor(abs(vec2(10.0) - uv.xy))) + 1.0;\n\n    uv = fract(uv);\n    \n    uv -= 0.5;\n    uv *= 2.0;\n\n    float x = uv.x;\n    float y = uv.y;\n\n    float time = fract(iTime * timeMul / 8.0);\n    \n    float offset = min(1.0, 2.0 * time);\n    float lowerOffset = max(1.0, 2.0 * time) - 1.0;\n     \n    fragColor = vec4(0.0);\n    \n    if (abs(x) < offset && abs(y) < offset) {\n        fragColor = vec4(col, 1.0);\n    }\n    if (abs(x) < lowerOffset && abs(y) < lowerOffset) {\n        fragColor = vec4(0.0, time, 1.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}