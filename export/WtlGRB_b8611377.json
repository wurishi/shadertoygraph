{"ver":"0.1","info":{"id":"WtlGRB","date":"1556743287","viewed":482,"name":"Color strokes","username":"avin","description":"Attemption to use buffers to store something other then colors :)","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["colors","buffers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// POSITION AND DIRECTION BUFFER\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i = fragCoord.x;\n    \n    vec4 pix = texelFetch(iChannel0, ivec2(i, 0), 0);\n    \n    vec2 pos = pix.rg;\n    vec2 dir = pix.ba;   \n    \n    if(iFrame == 0){\n    \tdir.x = rand1(float(i))-.5;\n        dir.y = rand1(float(i+1000.))-.5;\n        dir*=0.725;\n        \n        vec2 center = iResolution.xy*.5;\n        \n        pos+=center;                        \n    }\n    \n    vec2 posDiff = vec2(\n        (rand1(float(i + iTime))-.5)*2., \n    \t(rand1(float(i * .1 + iTime))-.5)*2.\n    );   \n    \n    pos+=posDiff + dir;\n    \n    if(\n        (pos.x < 0. && dir.x < 0.) || (pos.x > iResolution.x && dir.x > 0.)\n    ){\n    \tdir.x *= -1.;\n    }\n    if(\n        (pos.y < 0. && dir.y < 0.) || (pos.y > iResolution.y && dir.y > 0.)\n    ){\n    \tdir.y *= -1.;\n    }\n    \n   \n    \n           \n    \n    fragColor = vec4(pos, dir);       \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// COLORS  BUFFER\n\n#define hue(h) clamp( abs( fract(h + vec4(3,2,1,0)/3.) * 6. - 3.) -1. , 0., 1.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i = fragCoord.x;\n        \n    vec3 col = hue(rand1(i * .01) + iTime*.025).rgb;    \n    fragColor = vec4(col, 1.);               \n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n           \n    float m = 0.;\n    vec3 col;\n    \n    for(int i=0; i< 100; i++){\n    \tvec2 pos = texelFetch(iChannel0, ivec2(i, 0), 0).rg;\n        \n        float l = length(fragCoord - pos);\n                \n        float g = smoothstep((sin(iTime + float(i)*.1))*2.+3., 0., l);                                           \n        col += texelFetch(iChannel1, ivec2(i, 0), 0).rgb * g;        \n        m+=g*.5;\n    }\n    \n    col *= clamp(m, .0, 1.);\n    \n    fragColor = vec4(col, 1.) + texture(iChannel2, ouv)*0.995;\n           \n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define rand1(p) fract(sin(p* 78.233)* 43758.5453) ","name":"Common","description":"","type":"common"}]}