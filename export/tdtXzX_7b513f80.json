{"ver":"0.1","info":{"id":"tdtXzX","date":"1610797198","viewed":85,"name":"Mandelbrot demo","username":"camelcoder","description":"Mandelbrot","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 colors[5] = vec3[5](\n    vec3(   0,   7, 100 ) / 256.0,\n    vec3(  32, 107, 203 ) / 256.0,\n    vec3( 237, 255, 255 ) / 256.0,\n    vec3( 255, 170,   0 ) / 256.0,\n    vec3( 106,  53,   3 ) / 256.0\n);\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tfragCoord = (2.0 * fragCoord - iResolution.xy ) / iResolution.y;\n\n\n    vec2 pos = fragCoord;\n    vec2 center = vec2(-0.05, 0.68);\n    \n    float tz = 0.85 * (0.85 - cos(0.15 * iTime));\n    float zoom = pow(0.5, 10.0 * tz);\n    \n    \n    vec2 C = vec2(pos * zoom + center);\n    vec2 Z = vec2(0.0, 0.0);\n    int iter = 0;\n    vec2 Zsqr = Z;\n\n    while (Zsqr.x + Zsqr.y <= 4.0 && iter < 600)\n    {\n        Z = vec2(Zsqr.x - Zsqr.y + C.x, 2.0 * Z.x * Z.y + C.y);\n        Zsqr = Z*Z;\n        ++iter;\n    }\n    if (iter < 600) {\n        int idx = int(float(iter) * 5.0 / 125.0);\n        fragColor = vec4(mix(colors[idx%5], colors[(idx+1)%5], float(iter) * 5.0 / 125.0 - float(idx)), 1.0);\n        \n    } else {\n        fragColor = vec4(0, 0, 0, 1);\n    }\n\n}\n\n\n","name":"Image","description":"","type":"image"}]}