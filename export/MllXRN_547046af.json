{"ver":"0.1","info":{"id":"MllXRN","date":"1435060659","viewed":432,"name":"Raymarching Worley","username":"Lallis","description":"I started playing around with raymarching some Worley noise and this is where I ended up. :)","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","worley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define time iTime*0.25\n#define PI 3.14159265359\n\nmat3 rot(vec3 ang)\n{\n    vec3 s = sin(ang);\n    vec3 c = cos(ang);\n\tmat3 x = mat3(1.0,0.0,0.0,0.0,c.x,-s.x,0.0,s.x,c.x);\n\tmat3 y = mat3(c.y,0.0,s.y,0.0,1.0,0.0,-s.y,0.0,c.y);\n\tmat3 z = mat3(c.z,-s.z,0.0,s.z,c.z,0.0,0.0,0.0,1.0);\n\treturn x*y*z;\n}\n\nfloat noise3D(vec3 p)\n{\n\treturn fract(sin(dot(p ,vec3(12.9898,78.233,126.7235))) * 43758.5453);\n}\n\nfloat worley3D(vec3 p)\n{\t\t\t\t\t \t\t\t\t\t \n\tfloat r = 3.0;\n    vec3 f = floor(p);\n    vec3 x = fract(p);\n\tfor(int i = -1; i<=1; i++)\n\t{\n\t\tfor(int j = -1; j<=1; j++)\n\t\t{\n\t\t\tfor(int k = -1; k<=1; k++)\n\t\t\t{\n                vec3 q = vec3(float(i),float(j),float(k));\n    \t\t\tvec3 v = q + vec3(noise3D((q+f)*1.11), noise3D((q+f)*1.14), noise3D((q+f)*1.17)) - x;\n    \t\t\tfloat d = dot(v, v);\n\t\t\t\tr = min(r, d);\n\t\t\t}\n\t\t}\n\t}\n    return sqrt(r);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n\tvec2 p = uv*2.0-1.0;\n\tp.x*=(iResolution.x/iResolution.y);\n\tvec3 col = vec3(0.1,0.2,0.3);\n    vec3 ro = vec3(0.0,0.0,-2.0);\n    vec3 rd = normalize(vec3(p,0.0)-ro);\n    float mx = iMouse.x > 0.0 ? iMouse.x/iResolution.x : 0.5;\n    float my = iMouse.y > 0.0 ? iMouse.y/iResolution.y : 0.5;\n    vec3 ang = vec3((my-0.5)*PI, (mx-0.5)*PI, 0.0);\n    ro*=rot(ang);\n    rd*=rot(ang);\n    vec3 rp = ro;\n    float t = 1.0;\n    float w;\n    float ww;\n    vec3 add;\n    for(int i = 0; i<12; i++)\n   \t{       \n        rp+= rd*t;\n        w = worley3D(rp+vec3(0.0,0.0,time));\n        ww = w*w*w*w*w*(2.0/distance(rp,ro));\n        add = vec3(0.85,0.95,1.0);\n        col = mix(col, add, ww);\n    }\n    \n    rp = ro + rd*(12.0*(time-floor(time))+0.5);\n    w = worley3D(rp+vec3(0.0,0.0,time));\n    ww = w*w*w*w*w*w*(4.0/distance(rp,ro));\n    add = vec3(0.12,0.35,0.5);\n    col = mix(col, add , ww);\n    \n    rp = ro + rd*(8.0);\n    w = worley3D(rp+vec3(0.0,0.0,time));\n    ww = w*w*w*w*w*w*(2.0/distance(rp,ro));\n    add = vec3(1.0,0.65,0.0);\n    col = mix(col, add , ww);\n    \n    rp = ro + rd*(12.0);\n    w = worley3D(rp+vec3(0.0,0.0,time));\n    ww = w*w*w*w*w*w*(2.0/distance(rp,ro));\n    add = vec3(1.0,0.81,0.0);\n    col = mix(col, add , ww);\n\n\tfragColor = vec4(col*rot(ang*.05),1.0);\n}","name":"","description":"","type":"image"}]}