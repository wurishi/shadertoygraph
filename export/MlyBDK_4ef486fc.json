{"ver":"0.1","info":{"id":"MlyBDK","date":"1544053564","viewed":384,"name":"tiny_line","username":"wangyue66","description":"simple line","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["sample"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line(vec2 uv, float w, float k , float b)\n{\n    // y = [-1,1]\n    float x = uv.x;\n    float y = uv.y;\n    float z = y - (x * k + b);\n    return smoothstep(w, w +0.005, abs(z));\n}\n\nfloat drawSin(vec2 uv, float w)\n{\n    float z= uv.y - sin(uv.x * 5.0);\n    return smoothstep(w, w +0.005, abs(z));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv *= 2.0;\n    float rate = iResolution.x /iResolution.y;\n\tuv.x = uv.x * rate;\n    \n\tvec3 RED = vec3(1.0,0.0,0.0);\n    \n    //vec3 col = RED * line(uv, 0.01, 2.0 , 0.0);\n\tvec3 col = RED * drawSin(uv, 0.02);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}