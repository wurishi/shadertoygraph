{"ver":"0.1","info":{"id":"4dGfRm","date":"1527943045","viewed":116,"name":"RayMarching Base","username":"Loeizd","description":"done following this tutorial: https://www.youtube.com/watch?v=yxNnRSefK94","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ray","raymarch","march"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A copy from this tutorial\n// https://www.youtube.com/watch?v=yxNnRSefK94\n\nfloat sphere (vec3 p)\n{\n    return length(p) - 1.0;\n}\n\nfloat trace (vec3 origin, vec3 ray)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 p = origin + ray * t;\n        float d = sphere(p);\n        t += d * 0.5;\n    }\n    \n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1 with ratio fix)\n    vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;;\n    \n    vec3 ray = normalize(vec3(uv, 1.0)); //Try with 0.7\n    vec3 origin = vec3(0., 0., -3.);\n    \n    float t = trace(origin, ray);\n    \n    float fog = 1. / (1. + t * t * 0.1);\n    \n    vec3 fc = vec3(fog);\n    \n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}