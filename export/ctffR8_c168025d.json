{"ver":"0.1","info":{"id":"ctffR8","date":"1692559990","viewed":91,"name":"Bloom Post-Process [FIXED]","username":"VEShaderStuff","description":"Bloom Effect, Fixed to be compatible with glsl version 120","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["postprocess","bloom","glow"],"hasliked":0,"parentid":"Ms2Xz3","parentname":"Bloom Post-Process"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"float Threshold = 0.05; // Default is 0.05\nfloat Intensity = 1.0; // Default is 1.0\n\nvec4 blend(in vec2 Coord, in sampler2D Tex, in float MipBias)\n{\n\tvec2 TexelSize = MipBias/iResolution.xy;\n\n\tvec4 Color = texture(Tex, Coord);\n    \n    // Take 6 samples from the texture (Thanks to Envy24 for optimizing)\n    for (float i = 1.; i <= 6.; i += 1.)\n    {\n        float inv = 1./i;\n        Color += texture(Tex, Coord + vec2( TexelSize.x, TexelSize.y)*inv);\n        Color += texture(Tex, Coord + vec2(-TexelSize.x, TexelSize.y)*inv);\n        Color += texture(Tex, Coord + vec2( TexelSize.x,-TexelSize.y)*inv);\n        Color += texture(Tex, Coord + vec2(-TexelSize.x,-TexelSize.y)*inv);\n    }\n\t\n    // Original version. This is not optimized.\n    /* Color += texture(Tex, Coord + vec2(TexelSize.x,TexelSize.y));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/2.0,TexelSize.y/2.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/3.0,TexelSize.y/3.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/4.0,TexelSize.y/4.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/5.0,TexelSize.y/5.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/6.0,TexelSize.y/6.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x,TexelSize.y));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/2.0,TexelSize.y/2.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/3.0,TexelSize.y/3.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/4.0,TexelSize.y/4.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/5.0,TexelSize.y/5.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/6.0,TexelSize.y/6.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x,-TexelSize.y));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/2.0,-TexelSize.y/2.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/3.0,-TexelSize.y/3.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/4.0,-TexelSize.y/4.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/5.0,-TexelSize.y/5.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/6.0,-TexelSize.y/6.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x,-TexelSize.y));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/2.0,-TexelSize.y/2.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/3.0,-TexelSize.y/3.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/4.0,-TexelSize.y/4.0));\n\tColor += texture(Tex, Coord + vec2(-TexelSize.x/5.0,-TexelSize.y/5.0));\n\tColor += texture(Tex, Coord + vec2(TexelSize.x/6.0,-TexelSize.y/6.0)); */\n\n\treturn Color/24.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy/iResolution.xy)*vec2(1.0,1.0);\n\n\tvec4 Color = texture(iChannel0, uv);\n\n\tvec4 Highlight = clamp(blend(uv, iChannel0, 4.0)-Threshold,0.0,1.0)*1.0/(1.0-Threshold);\n\n\tfragColor = 1.0-(1.0-Color)*(1.0-Highlight*Intensity);\n}","name":"Image","description":"","type":"image"}]}