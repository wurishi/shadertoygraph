{"ver":"0.1","info":{"id":"dlfXWl","date":"1675466136","viewed":102,"name":"jumble","username":"StrangeBroadcasts","description":"an effect which tries to emulate the \"jumble brush\" in Aseprite","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["jumble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DISTORT_DISTANCE 40.0\n#define DISTORT_STRENGTH 0.5\n#define COLOR_CUTOFF 0.63\n\n// Hash function by David Hoskins\n// https://www.shadertoy.com/view/4djSRW\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 samplePoint = vec2(0.5, 0.5) - hash21(fragCoord.x + fragCoord.y * iResolution.y + iTime);\n\n    vec2 distortUv = (fragCoord + DISTORT_DISTANCE * samplePoint)/iResolution.xy;\n    vec2 uv = (fragCoord.xy)/iResolution.xy;\n    \n    vec3 col = (1.0 - DISTORT_STRENGTH) * texture(iChannel0, uv).rgb + DISTORT_STRENGTH * texture(iChannel0, distortUv).rgb;\n    float rounded = col.r > COLOR_CUTOFF ? 1.0 : 0.0;\n    \n    fragColor = vec4(rounded, rounded, rounded,1.0);\n}","name":"Image","description":"","type":"image"}]}