{"ver":"0.1","info":{"id":"MXKSWm","date":"1720059334","viewed":29,"name":"sdf_Test_dx","username":"dd5588963","description":"sdfDemo","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfSphere(vec3 p){\n    return length(p) - 1.0;\n}\n\nfloat map(vec3 p){\n    return sdfSphere(p);\n}\n\n\nvec3 getRay(float fov_degree,vec2 fragCoord,vec2 imgSize){\n    vec2 img_center = imgSize / 2.;\n    float z_cam = ((imgSize.y/2.)/tan(radians(fov_degree)/2.)); \n    return normalize(vec3(fragCoord,0.) - vec3(img_center,z_cam));\n}\n\nconst float eps = 0.00001;\nconst int STEP_MAX = 32;\nfloat rayMarching(vec3 eye,vec3 dir,float start,float end){\n    float depth = start;\n    for(int i = 0 ;i < STEP_MAX;i++){\n        vec3 p = vec3(eye + dir * depth);\n        float dist = map(p);\n        //当与物体离得非常非常近了  \n        //认为打到了物体  \n        if(dist < eps){\n            return depth;\n        }\n        depth += dist;\n        if(depth > end){\n            return end;\n        }\n    }\n    return end;\n}\n\n\nconst float MIN_DEP = 0.001;\nconst float MAX_DEP = 30.0;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 dir = getRay(45.,fragCoord,iResolution.xy);\n    float rayDepth =  rayMarching(vec3(0,0,5),dir,MIN_DEP,MAX_DEP);\n    //如果没打中物体，那么返回黑色\n    if(rayDepth > MAX_DEP - eps){\n        fragColor = vec4(0,0,0,1.0);\n    }\n    else{\n        fragColor = vec4(1,0,0,1.0);\n    }\n} ","name":"Image","description":"","type":"image"}]}