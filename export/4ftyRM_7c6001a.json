{"ver":"0.1","info":{"id":"4ftyRM","date":"1730399798","viewed":67,"name":"CS44N-F24 Heart Eyes Pumpkin","username":"djames","description":"Just your friendly neighborhood pumpkin. 😍\nInteract using mouseY.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["halloween"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dot2(vec2 v) {\n  return dot(v,v);\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n// r=radius, h=height\nfloat sdCutDisk( in vec2 p, in float r, in float h )\n{\n    float w = sqrt(r*r-h*h); // constant for a given shape\n    \n    p.x = abs(p.x);\n    \n    // select circle or segment\n    float s = max( (h-r)*p.x*p.x+w*w*(h+r-2.0*p.y), h*p.x-w*p.y );\n\n    return (s<0.0) ? length(p)-r :        // circle\n           (p.x<w) ? h - p.y     :        // segment line\n                     length(p-vec2(w,h)); // segment corner\n}\n\nvec2 rotate(in vec2 p, float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return vec2(c*p.x - s*p.y, \n              s*p.x + c*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (origin at center)\n    vec2 p = (2.*fragCoord - iResolution.xy)/iResolution.y;\n    vec2 m = iMouse.xy/iResolution.xy;\n\n    // Background color:\n    vec3 col = 0.5*(0.5 + 0.5*cos(iTime+p.xyx+vec3(0,2,4)));\n    \n    // Bounce:\n    p.y -= 0.1*(abs(cos(iTime))-0.5) + 0.1*m.y*(abs(cos(5.*iTime)*cos(8.*iTime)));\n    \n    // Pumpkin colors:\n    float flicker  = 0.9 + 0.1*abs(sin(23.*iTime)*cos(17.*iTime)*cos(3.*iTime)*cos(9.*iTime));\n    vec3  INSIDE   = vec3(1.0, 1.0, 0.0) * flicker;\n    vec3  REDHEART = vec3(240., 58., 23.)/255.;\n    \n    float heartiness = iMouse.y/iResolution.y; // interaction\n    \n    // BODY:\n    {\n        float bodyR      = 0.7;\n        float ny         = p.y/bodyR; \n        float nx         = p.x/bodyR; \n        float width      = sqrt(1.0-ny*ny);\n        float X          = nx/width;\n        float sdfBody    = sdCircle(p, bodyR);\n        float outline = 1.-smoothstep(-0.02, 0.01, sdfBody);\n        float regPumpkin = 1.-smoothstep(0., 0.01, sdfBody);// 1 inside pumpkin\n        float pumpkinLines = clamp(0.3+abs(3.5*cos(9.6*nx/width+0.4)), 0., 1.);//darkening\n        vec3  colPumpkin = vec3(0.8, 0.5, 0.01) * pumpkinLines * outline;\n        if(sdfBody < 0.) {// Color variations:\n           float variations = 0.1 + 0.9*abs(sin(23.*X)*cos(17.*X)*cos(3.*X)*cos(9.*X));\n           colPumpkin = mix(colPumpkin, vec3(255.,200.,61.)/255., variations);\n        }\n        col = mix(col, colPumpkin, regPumpkin);\n    }\n    \n    // HEART EYES:\n    {\n        float eyeS = 2.;\n        vec2  eyeTrans = vec2(.23,0.00);\n        float eyeL = sdHeart((rotate(p+eyeTrans,-0.28)-vec2(0.,0.0))*eyeS)/eyeS;\n        float eyeR = sdHeart((rotate(p-eyeTrans,+0.28)-vec2(0.,0.0))*eyeS)/eyeS;\n        float sdfEyes = min(eyeL, eyeR);\n        float regEyes = 1.-smoothstep(0., 0.01, sdfEyes);\n        float outline = 1.-smoothstep(-0.02, 0.01, sdfEyes);\n        \n        vec3  colEyes = (INSIDE + 0.1*sin(-202.*sdfEyes + 20.*iTime)*vec3(1.0)) * outline;\n        \n        colEyes = mix(INSIDE, REDHEART,  0.7*sin(-202.*sdfEyes + 20.*iTime)+ abs(sdfEyes)*33.*heartiness)*outline;\n        col = mix(col, colEyes, regEyes);\n    }\n    \n    // MOUTH:\n    {\n        float s   = 1.0 - 0.25*heartiness;\n        float sdf = sdCutDisk(vec2(p.x,-p.y-0.1), 0.4+0.05*heartiness, 0.05*s);\n        float reg = 1.-smoothstep(0., 0.01, sdf);// 1 inside pumpkin\n        float outline = 1.-smoothstep(-0.02, 0.01, sdf);\n        vec3  mycol = INSIDE * outline;\n        if(p.y>-0.25+0.02*heartiness) mycol *= 0.5; // teeth?!? :/\n        col = mix(col, mycol, reg);\n        \n        // Tongue (why do pumpkins have tongues? idk)\n        float sdfTng = length(p - vec2(0.0, -0.5)) - 0.1/s;\n        float regTng = min(reg, 1.-smoothstep(0., 0.01, sdfTng));\n        vec3 tngCol = vec3(1.,0.,0.) * (1.-smoothstep(-0.02, 0.01, sdfTng)) * outline;\n        col = mix(col, tngCol, regTng);\n      \n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}