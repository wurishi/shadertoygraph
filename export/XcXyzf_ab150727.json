{"ver":"0.1","info":{"id":"XcXyzf","date":"1721377768","viewed":57,"name":"[ARTS1308] Gray-Scott","username":"ARTS1308","description":"Gray-Scott simulation.\nThanks to neozhaoliang for the original code https://www.shadertoy.com/view/XfXczH","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["2d","simulation"],"hasliked":0,"parentid":"XfXczH","parentname":"Gray-Scott 2d"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst vec4[5] palette = vec4[5] (\n    vec4(0),\n    vec4(0.0, 1.0, 0.0, 0.2),\n    vec4(1.0, 1.0, 0.0, 0.208),\n    vec4(1.0, 0.0, 0.0, 0.4),\n    vec4(1.0, 1.0, 1.0, 0.6));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    ivec2 uv = ivec2(int(fragCoord.x), int(fragCoord.y));\n    float value = texelFetch(iChannel0, uv, 0).y;\n    float a;\n    vec3 col;\n\n    if (value <= palette[0].w)\n    {\n        col = palette[0].rgb;\n    }\n\n    for (int i=0; i<=3; ++i)\n\n    {\n        if (value > palette[i].w && value <= palette[i+1].w)\n        {\n            a = (value - palette[i].w) / (palette[i+1].w - palette[i].w);\n            col = mix(palette[i].rgb, palette[i+1].rgb, a);\n        }\n    }\n    fragColor = vec4(col, 1.0);\n    //fragColor = texelFetch(iChannel0, uv, 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define tx(p)  texelFetch(iChannel0, p, 0).xy\n\nconst vec4 params = \n    // vec4(0.210, 0.105, 0.018, 0.051); // unstable\n    // vec4(0.160, 0.080, 0.060, 0.062); // coral\n    // vec4(0.190, 0.050, 0.060, 0.062); // fingerprint\n    // vec4(0.140, 0.060, 0.035, 0.065); // bacteria\n    // vec4(0.160, 0.080, 0.050, 0.065); // worms\n     vec4(0.160, 0.080, 0.035, 0.060); // zebrafish\n    // vec4(0.210, 0.105, 0.039, 0.058); // net\n    // vec4(0.210, 0.105, 0.014, 0.054); // moving spots\n    // vec4(0.210, 0.105, 0.025, 0.060); // pulsating solitons\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame < 5) {\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        return;\n    }\n    \n    ivec2 uv = ivec2(int(fragCoord.x), int(fragCoord.y));\n\n    vec2 c = tx(uv); // center\n    vec2 r = tx(uv + ivec2( 1, 0)); // right\n    vec2 t = tx(uv + ivec2( 0, 1)); // top\n    vec2 l = tx(uv + ivec2(-1, 0)); // left\n    vec2 b = tx(uv + ivec2( 0,-1)); // bottom\n\n    float Du   = params.x;\n    float Dv   = params.y;\n    float feed = params.z;\n    float kill = params.w;\n\n    vec2 lapl = r + t + l + b - 4.0 * c;\n    float du = Du * lapl.x - c.x * c.y * c.y + feed * (1.0 - c.x);\n    float dv = Dv * lapl.y + c.x * c.y * c.y - (feed + kill) * c.y;\n    vec2 newValue = c + 0.6 * vec2(du, dv);\n\n    if(iFrame % 10 == 0)\n    {\n        vec2 xy = fract(sin(vec2(float(iTime)) * vec2(12.9898, 78.233)) * 43758.5453);\n        xy *= iResolution.xy;\n        vec2 diff = vec2(uv) - xy;\n        float dist = dot(diff, diff);\n        if(dist < 10.)\n            newValue.y = 0.9;\n    }\n\n    fragColor = vec4(newValue, 0.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}