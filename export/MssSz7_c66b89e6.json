{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// I wrote this in 25 minutes at the revision 2014 live coding competition. \n// Because I had to adapt the code to shadertoy I had to make some minimal modifications. \n// src=ftp://ftp.scene.org/pub/parties/2014/revision14/livecoding/03_final/\n\n// me at the actual compo:\n// \t\thttp://www.youtube.com/watch?v=aYlMjIVm1F4\n\n// there was a perlin noise texture available at the compo\n// here i have to generate it\n\nvec4 iNoise(vec2 uv)\n{\n\tuv*=.125;\n\tvec4 acc = texture(iChannel1, uv);\n\tfor (float i = 1.0; i<6.0; i +=1.0)\n\t{\n\t\tfloat q = pow(2.0,i);\n\t\tfloat b = 1.0/q;\n\t\tacc += texture(iChannel1, uv*q)*b;\n\t}\n\treturn acc*.14;\t\t\n}\n\n\n#define out_color fragColor\n#define iFFTTexture iChannel0\n#define iFFT(A) texture(iFFTTexture,vec2(.0+float(A)/8.0,.0)).x\n#define iFFTs(A) iFFT(A)\n\n\n\nfloat dft(vec3 p)\n\n{\n\n\tp.z+=iTime*16.0;\n\n\tfloat d = p.y +8.0 + pow(iNoise(p.xz*.001).x,4.0)*50000.0*iFFTs(0) + pow(iNoise(p.xz*.0005).x,1.5)*500.0;\n\t//float d = p.y +8.0;//; + pow(iNoise(p.xz*.001).x,4.0)*50000.0*iFFTs(0) + pow(iNoise(p.xz*.0005).x,1.5)*500.0;\n\n\treturn d *.25;\n\n}\n\n\n\n\n\nfloat dfo(vec3 p)\n\n{\n\n\tp += sin(p*iFFTs(0)*4.0);\n\n\treturn (length(p)-1.0)*0.15;\n\n}\n\n\n\nfloat df(vec3 p)\n\n{\n\n\treturn min(dfo(p),dft(p));\n\n}\n\n\n\nvec3 nf(vec3 p)\n\n{\n\n\tvec2  e = vec2(0.1,.0);\n\n\treturn normalize(vec3(df(p)-df(p+e.xyy),df(p)-df(p+e.yxy),df(p)-df(p+e.yyx)));\n\n}\n\n\n\n\n\nvec3 nf2(vec3 p)\n\n{\n\n\tvec2  e = vec2(0.001,.0);\n\n\treturn normalize(vec3(df(p)-df(p+e.xyy),df(p)-df(p+e.yxy),df(p)-df(p+e.yyx)));\n\n}\n\n\n\nvec3 bg(vec3 d)\n\n{\n\n\tfloat f = texture( iFFTTexture, vec2((d.x+d.z)*0.2+.6,.0)  ).r * 1.0;\n\tf = f*f-.1; f=  max(.0,f*.4);\n\treturn vec3(.1,.2,.5)*(d.y*.5+.3)+vec3(f);\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2( fragCoord.xy ) / iResolution.xy;\n\tvec2 uv5 = uv - 0.5;\n\tvec2 m;\n\tm.x = atan(uv5.x / uv5.y);\n\tm.y = length(uv5);\n\t//float f = texture( iFFTTexture, vec2(uv.x,.0)  ).r * 10.0;\n\nfloat tt = iTime*.5;\n\n\tmat3 rot = mat3(sin(tt),.0,cos(tt),.0,1.0,.0,-cos(tt),.0,sin(tt));\n\n\n\n\tvec3 pos = vec3(.0,.0,-4.0)+sin(iTime);\n\n\tvec3 dir = vec3(uv5*vec2(1.7,1.0),1.0 - length(uv5));\n\n\tdir = normalize(dir);\n\n\tfloat td = .0;\n\n\n\n\tdir *= rot;\n\n\tpos *= rot;\n\n\tfor (int i = 0; i<150; i++)\n\n\t{\n\n\t\tfloat dd = df(pos); td+=dd;\n\n\t\tpos += dir*dd;\n\n\t}\n\n\t\n\n\t\tvec3 color = bg(dir);\n\n\t\n\n\tif (df(pos) < 1.0)\n\n\t{\n\n\t\tvec3 n = nf(pos);\n\n\t\tvec3 l = normalize(vec3(sin(iTime),.6,cos(iTime)));\n\n\t\tfloat diffuse = dot(n,l)*.5+.5;\n\n\t\tif (dfo(pos)<dft(pos))\n\n\t\t{\n\n\t\t\t\n\n\t\t\tcolor = vec3(diffuse)*vec3(.4,.2,.2)*.5 + bg(reflect(dir,n));\n\n\t\t}\t\n\n\t\telse\n\n\t\t{\n\n\t\t\tcolor = vec3(diffuse)*mix(vec3(.1,.2,.1)*2.0,vec3(.9,.3,.1),iNoise(pos.zx*.001).x);\n\n\t\t}\t\n\n\n\n\n\n\t}\n\n\n\n\tcolor = mix(bg(dir),color,1.0/(1.0+td*.005));\n\tm.y -= iTime;\n\t//vec4 t = texture( iTex2, m.xy  );\n\t//out_color = vec4(vec3(f)*(1.0+iFFTs(0))+(nf(pos)*.5+.5),1.0);\n\n\n\n\tcolor += vec3(length(color));\n\n\t\n\n\tcolor -= length(uv5)*0.5;\n\n\n\n\tout_color = vec4(color,1.0);\n\t//out_color = nf(pos).xyzz*.5+vec4(.5);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MssSz7","date":"1398689303","viewed":235,"name":"revision 2014 finals musk","username":"mu6k","description":"I wrote this in 25 minutes at the revision 2014 live coding competition. Because I had to adapt the code to shadertoy I had to make some minimal modifications. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","terrain","livecoding","revision","live"],"hasliked":0,"parentid":"","parentname":""}}