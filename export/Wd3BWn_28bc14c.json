{"ver":"0.1","info":{"id":"Wd3BWn","date":"1604732905","viewed":520,"name":"ellipse traces","username":"matthen","description":"ellipse traces","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["ellipse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 point(in float t, in vec2 uv, in vec2 centre, in vec2 axes, in float th, in vec3 col) {\n   float d = length(ellipseP(t, centre, axes, th) - uv);\n    col = mix(\n        vec3(1.0),\n        col,\n        smoothstep(d, 0.01, 0.0)\n    );\n    col = mix(\n        vec3(0.0),\n        col,\n        smoothstep(d, 0.01, 0.013)\n    ); \n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = texture(iChannel0, fragCoord / iResolution.xy).rgb;\n    \n    col = mix(\n        vec3(1.0),\n        col,\n    \tsmoothstep(\n            abs(ellipseD(uv, centre1, axes1, th1) - 1.0),\n            0.0, 0.007)\n    );\n    col = mix(\n        vec3(1.0),\n        col,\n    \tsmoothstep(\n            abs(ellipseD(uv, centre2, axes2, th2) - 1.0),\n            0.0, 0.005)\n    );\n    col = point(t1(iTime), uv, centre1, axes1, th1, col);\n    col = point(t2(iTime), uv, centre2, axes2, th2, col);\n    \n    vec2 a = ellipseP(t1(iTime), centre1, axes1, th1);\n    vec2 b = ellipseP(t2(iTime), centre2, axes2, th2);\n    col = mix(\n    \tvec3(1.0),\n        col,\n        smoothstep(sdSegment(uv, a, b),0.0, 0.001)\n    );\n            \n    \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 centre1 = vec2(0.0, 0.0);\nvec2 axes1 = vec2(0.16, 0.2);\nfloat th1 = 0.0;\n\nvec2 centre2 = vec2(0.0, 0.0);\nvec2 axes2 = vec2(0.5, 0.3);\nfloat th2 = 0.7;\n\nfloat rampT(in float t) {\n    return t * mix(0.8, 1.5, smoothstep(0., 20., t));\n}\n\nfloat t1(in float t) {\n    return 0.578 * rampT(t);\n}\n\nfloat t2(in float t) {\n    return 0.2 * rampT(t);\n}\n\nvec2 rotate(in float th, in vec2 p) {\n\tmat2 m = mat2(\n    \tcos(th), sin(th),\n        -sin(th), cos(th)\n    );\n    return m * p;\n}\n\nfloat ellipseD(in vec2 p, in vec2 centre, in vec2 axes, in float th) {\n    vec2 dd = rotate(-th, p - centre) / axes;\n    dd *= dd;\n    return dd.x + dd.y;\n}\n\nvec2 ellipseP(in float t, in vec2 centre, in vec2 axes, in float th) {\n    vec2 p = vec2(sin(6.283 * t), cos(6.284 * t)) * axes;\n    p = rotate(th, p);\n    return p + centre;\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b ) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 gradient(in float t) {\t\n    vec3 a = vec3(.5, .5, .5);\n    vec3 b = vec3(.5, .5, .5);\n    vec3 c = vec3(1., 1., .5);\n    vec3 d = vec3(.8, .9, .3);\n    vec3 col = a + b * cos(6.28318 * ( c * t + d));\n    col = mix(col, vec3(1.), 0.5);\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = texture(iChannel0, fragCoord / iResolution.xy).rgb;\n    col *= 0.999;\n    \n    vec2 a = ellipseP(t1(iTime), centre1, axes1, th1);\n    vec2 b = ellipseP(t2(iTime), centre2, axes2, th2);\n    col = mix(\n    \tmix(gradient(a.x + b.y), col, 0.9 - 0.4 * length(uv)),\n        col,\n        smoothstep(sdSegment(uv, a, b),0.0, 0.001)\n    );\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer @","description":"","type":"buffer"}]}