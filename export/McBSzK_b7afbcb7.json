{"ver":"0.1","info":{"id":"McBSzK","date":"1710092176","viewed":37,"name":"Mandelbrot JBK","username":"Celica","description":"Test fractals","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hue2rgb(float f1, float f2, float hue) {\n    if (hue < 0.0)\n        hue += 1.0;\n    else if (hue > 1.0)\n        hue -= 1.0;\n    float res;\n    if ((6.0 * hue) < 1.0)\n        res = f1 + (f2 - f1) * 6.0 * hue;\n    else if ((2.0 * hue) < 1.0)\n        res = f2;\n    else if ((3.0 * hue) < 2.0)\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n    else\n        res = f1;\n    return res;\n}\n\nvec3 hsl2rgb(vec3 hsl) {\n    vec3 rgb;    \n    if (hsl.y == 0.0) {\n        rgb = vec3(hsl.z); // Luminance\n    } else {\n        float f2 = hsl.z < 0.5 ? hsl.z * (1.0 + hsl.y) : hsl.z + hsl.y - hsl.y * hsl.z;            \n        float f1 = 2.0 * hsl.z - f2;        \n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\n        rgb.g = hue2rgb(f1, f2, hsl.x);\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\n    }   \n    return rgb;\n}\n\nvec3 mandColor(float percent)\n{\n    vec3 hsl = vec3(mod(pow(percent * 5.0, 1.5), 1.0), 0.95, 1.0-percent);\n    return hsl2rgb(hsl);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float zoom = 3.5 * pow(0.01,1.0+cos(0.8*iTime));\n    vec2 c = vec2(-0.745,0.186) + zoom * (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 z;\n    int i;\n    const int MAX = 100;\n    while (length(z) < 4.0 && i < MAX)\n    {\n       z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n       i++;\n    }    \n    fragColor = vec4(mandColor(float(i) / float(MAX)), 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}