{"ver":"0.1","info":{"id":"NdKGzz","date":"1630983780","viewed":512,"name":"2D fog","username":"MrDevin","description":"2D fog","likes":9,"published":1,"flags":0,"usePreview":1,"tags":["2dfog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nfloat random(vec2 _st)\n{\n    return fract(sin(dot(_st.xy,\n                         vec2(0.630, 0.710))) *\n        43759.329);\n}\n\n//柏林噪声\nfloat noise(vec2 _st)\n{\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a) * u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 6\n\n//布朗分形\nfloat fbm(vec2 _st)\n{\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0, 100.0);\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n\n    for (int i = 0; i < NUM_OCTAVES; ++i)\n    {\n        v += a * noise(_st);\n        //_st = mul(_st, rot) * 2.0 + shift;\n        _st = _st*rot * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvec3 FilterColor(vec3 color1, vec3 color2)\n{\n    //变亮\n    //Y(亮度)=(0.299*R)+(0.587*G)+(0.114*B)\n    //float brightness1 = (0.299 * color1.r) + (0.587 * color1.g) + (0.114 * color1.b);\n    //float breghtness2 = (0.299 * color2.r) + (0.587 * color2.g) + (0.114 * color2.b);\n    //return brightness1 > breghtness2 ? color1 : color2;\n\n    //滤色\n    return 1.0 - (1.0 - color1) * (1.0 - color2);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 backcolor = texture(iChannel0, uv).rgb;\n    uv.y = 1.0 - uv.y;\n    \n    \n    vec2 st = uv * 10.0f;\n    st.x += iTime * 0.1f;\n    st.y -= iTime * 0.2f;\n    // st += st * abs(sin(u_time*0.1)*3.0);\n    vec3 color;\n\n    vec2 q;\n    q.x = fbm(st + 0.00 * iTime*5.0);\n    q.y = fbm(st + vec2(1.0, 1.0));\n\n    vec2 r;\n    r.x = fbm(st + 1.0 * q + vec2(1.7, 9.2) + 0.15 * iTime*5.0);\n    r.y = fbm(st + 1.0 * q + vec2(8.3, 2.8) + 0.126 * iTime*5.0);\n\n    float f = fbm(st + r);\n\n    color = mix(vec3(1.0, 1.0, 1.0),\n                vec3(1.0, 1.0, 1.0),\n                clamp((f * f) * 4.0, 0.0, 1.0));\n\n    color = mix(color,\n                vec3(1.0, 1.0, 1.0),\n                clamp(length(q), 0.0, 1.0));\n\n    color = mix(color,\n                vec3(1.0, 1.0, 1.0),\n                clamp(length(r.x), 0.0, 1.0));\n\n    vec3 cloud = vec3((f * f * f + 0.3 * f * f + 0.5 * f) * color);\n\n    cloud = mix(vec3(0.0f, 0.0f, 0.0f), cloud, uv.y);\n    \n    fragColor = vec4(FilterColor(cloud, backcolor), 1.);\n    \n    \n}","name":"Image","description":"","type":"image"}]}