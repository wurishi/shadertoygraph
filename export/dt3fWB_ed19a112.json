{"ver":"0.1","info":{"id":"dt3fWB","date":"1701800686","viewed":22,"name":"2d plots","username":"ToniMateos","description":"This started trying to show how to plot lines and circles with quadratic polynomials to my daughter, and it ended this way, after putting time factors into some of the coefficients.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["plottingcrazyquadraticpolynomials"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool isApprox(in float number, in float limit_inf) \n{\n    float thickness = 2.;\n    if ((number > limit_inf) && (number < limit_inf * thickness))\n        return true; else return false;\n}\n\n\nvec3 objecte(in vec2 origen, in vec2 fragCoord)\n{\n    vec2 p = (fragCoord/iResolution.xy - origen)*10.;\n    float x = p.x - 0.2*cos(iTime);\n    float y = p.y - 0.2*sin(iTime);\n\n\tvec3 col1 = vec3(1.*cos(iTime), sin(iTime), 0.25);\n\tvec3 col2 = vec3(0, 0, 0);\n    \n    if (isApprox( cos(iTime)*x*x + sin(iTime)*y*y ,0.1*(1.+cos(iTime))))\n        return col1; else return col2;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = \n        objecte(vec2(0.5,0.8), fragCoord)+\n        objecte(vec2(0.5,0.2), fragCoord)+\n        objecte(vec2(0.5,0.5), fragCoord)+\n        objecte(vec2(0.8,0.5), fragCoord)+\n        objecte(vec2(0.2,0.5), fragCoord);\n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}