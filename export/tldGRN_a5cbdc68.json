{"ver":"0.1","info":{"id":"tldGRN","date":"1575824272","viewed":153,"name":"[phreax]  plant spirit","username":"phreax","description":"Inspired by Farbrausch's - The Cube\n\nMusic: https://soundcloud.com/multiculti/peter-power-jungle-voodoo\n\n\n","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["raymarching","kaleidoscopic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XtS3RR","filepath":"https://soundcloud.com/multiculti/peter-power-jungle-voodoo","previewfilepath":"https://soundcloud.com/multiculti/peter-power-jungle-voodoo","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Creative Commons Licence Attribution-NonCommercial-ShareAlike \n * phreax 2019\n *\n * Special thanks to: iq, evvvvil, nusan, bigwings, fabrice, flopine, yx \n * for their amazing content and learning material.\n\n * Music: https://soundcloud.com/multiculti/peter-power-jungle-voodoo\n * \n */\n\n#define BEAT (41.95/32.)\n#define T1 42.7\n#define T2 126.5\n#define T3 211.\n#define T4 295.\n#define T5 326.5\n\nfloat tt, mat, kick, snare, s1, s11, s2, s22, s3, s4, s5, s6;\nvec3 ro;\n\nmat2 rot(float a) { \n    return mat2(cos(a), sin(a), -sin(a), -cos(a)); \n}\n\nfloat sph(vec3 p, float r) {\n\treturn length(p) - r;\n}\n\nfloat smin(float a, float b, float k) {\n\tfloat h = clamp((a-b)/k*.5+.5, 0., 1.);\n    return mix(a, b, h) - h*(1.-h)*k;\n}\n\nfloat rep(float p, float s) {\n\treturn (fract(p/s-.5)-.5)*s;\n}\n\nvec2 rep(vec2 p, vec2 s) {\n\treturn (fract(p/s-.5)-.5)*s;\n}\n\n\nfloat perc(float t, float d, float off) {\n\tfloat g = t/d;\n    float it = fract(g);\n    \n    it = smoothstep(1.-off, 0.0, it);\n\n    return it;\n}\n\nfloat fractal1(vec3 p) {\n    float t1 = tt;\n    p     = abs(p)-5.;\n    p.xy *= rot(1.2+0.1*t1);\n    p     = abs(p)-3.;\n    p.xy *= rot(.2+0.2*t1);\n\n    \n    float s1 = sph(p+vec3(3.*cos(0.1*t1), 3.*sin(.2*t1), -3.*cos(.15*t1)), 3.-.4*snare);\n    float s2 = sph(p+vec3(-2.*sin(0.2*t1), -4.*cos(.3*t1), 0.), 2.);\n  \n    float s  = smin(s1, s2, 4.);\n    \n    s = abs(s) - .35;\n    \n    return s;\n}\n\nfloat fractal2(vec3 p) {\n\n    p = mix(p, abs(p) - 2.4, s11);\n    float t1 = -tt*1.4;\n    \n    float s1 = sph(p+vec3(4.*cos(0.1*t1), 3.*sin(.2*t1), 1.), 2.+.4*kick);\n    float s2 = sph(p+vec3(3.*sin(0.2*t1), 2.*cos(.3*t1), 0.), 3.-.4*kick);\n  \n    float s  = smin(s1, s2, 3.);\n    \n    s = abs(s) - .35;\n    \n    return s;\n}\n\nfloat map(vec3 p) {\n\n\n    vec3 bp = p;\n    p.z = mix(rep(p.z, 30.), p.z, s1);\n    vec3 p1, p2;\n    p1 = p2 = p;\n\n\n    p1.yz *= rot(.2*sign(p.y));\n    p1.xz *= rot(.2*sign(p.x));\n\n    p1.xy = rep(p1.xy, vec2(.4));\n    vec2 dp = -abs(p1.xy);\n    \n    p2.z += sin(p2.x*3.)*0.15*snare;\n    float f1 = fractal1(p2);\n    float f2 = fractal2(p);\n    float s = mix(f2, min(f1, f2), s22);\n    \n\n    mat = mix(0., step(f2, f1), s22);\n\t\n\treturn max(max(s, (min(-dp.x, -dp.y)))*.8, -sph(ro-bp, 3.));\n}\n\n\nvoid cam(inout vec3 p) {\n\tp.z +=tt *(1.-s1);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec3 col,\n         al = vec3(0.596,0.784,0.078),\n    \t al2 = vec3(0.141,0.898,1.000)*.4;\n    \n    ro = vec3(0, 0, -12);\n\n \n    vec3 rd = normalize(vec3(-uv, .5));\n    \n\n    tt = mod(iChannelTime[0], 600.);\n    \n    //tt += step(tt, .1)*106.;\n    \n    // sequencing\n    s1 = step(tt, T1);\n    s11 = step(T1-16.*BEAT, tt);\n    s2 = step(tt, T2)*step(T1, tt);\n    s22 = step(T1+16.5*BEAT, tt);\n    s3 = step(tt, T3)*step(T2, tt);\n    s4 = step(tt, T4)*step(T3, tt);\n    s5 = step(tt, T5)*step(T4, tt);\n    s6 = step(T5, tt);\n    \n    // beat sync\n    snare = perc(tt+s4*BEAT/2., BEAT, 0.00)*(s2+s4+s6);\n    kick  = perc(tt-(BEAT/2.), BEAT/2., 0.00)*(s2+s4+s6);\n    \n    tt = .9*tt;\n    cam(ro);\n    \n    vec3 p = ro;\n    \n    float i, d, t;\n    d = t = .1;\n    \n    for(i=0.; i<150.; i++) {\n        d = map(p);\n        \n        if(d < 0.0001 || t > 50.) break;\n\n        p += rd*d;\n        t += d;\n    }\n        \n    if(d < 0.0001) {   \n    \tcol += pow(1.-i/150., 4.)*1.8*mix(al, al2, mat);\n        col = mix(col, vec3(1.000,0.765,0.741), 0.6*(1.-exp(-.0005*t*t*t)));\n    } else {\n        col += mix(vec3(0.839,1.000,0.820), vec3(0.945,1.000,0.659), uv.y);\n\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}