{"ver":"0.1","info":{"id":"ltdfDl","date":"1541520216","viewed":198,"name":"Toonify","username":"xactac","description":"Apply posterization, edge detection and brightening.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["toon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 posterize(vec4 col)\n{\n    return col - 0.25 * fract(4.0 * col);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // load texture\n    vec4 col = texture(iChannel0, uv);\n    \n    // sobel edge detection\n    vec3 delpix = vec3(2.0 / iResolution.x, 0, -2.0 / iResolution.x);\n    mat3 nhood = mat3(vec3(length(texture(iChannel0, uv + delpix.xx)), length(texture(iChannel0, uv + delpix.xy)), length(texture(iChannel0, uv + delpix.xz))),\n                      vec3(length(texture(iChannel0, uv + delpix.yx)), length(texture(iChannel0, uv + delpix.yy)), length(texture(iChannel0, uv + delpix.yz))),\n                      vec3(length(texture(iChannel0, uv + delpix.zx)), length(texture(iChannel0, uv + delpix.zy)), length(texture(iChannel0, uv + delpix.zz))));\n    float sobelx = dot(nhood[0], vec3(1.0, 2.0, 1.0)) + dot(nhood[2], vec3(-1.0, -2.0, -1.0));\n    nhood = transpose(nhood);\n    float sobely = dot(nhood[0], vec3(1.0, 2.0, 1.0)) + dot(nhood[2], vec3(-1.0, -2.0, -1.0));\n    float sobel = abs(sobelx) + abs(sobely);\n    \n    // brighten\n    col =  pow(1.5 *sin(col * 0.5 * 3.15), vec4(3.0)) / pow(1.5, 3.0);\n    \n    // film grain\n    col += 0.1 * texture(iChannel1, uv);\n    col /= 1.1;\n    \n    // apply edges\n    col = (col - sobel * 0.7) * 1.3;\n\n    // Output to screen\n    fragColor = posterize(col);\n}","name":"Image","description":"","type":"image"}]}