{"ver":"0.1","info":{"id":"MsjcWc","date":"1494210750","viewed":263,"name":"Mandelbrot Exponential Map","username":"Dodecaplex","description":"\"Mercator\" Mandelbrot as seen in http://www.aleph.se/andart/archives/2009/03/mercator_mandelbrot.html\n\nVertical scrolling corresponds to zooming on the target point, while horizontal scrolling corresponds to rotation.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","logarithmic","mercator","exponential"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318\n\nvec2 cmul(in vec2 u, in vec2 v) { return vec2(u.x*v.x - u.y*v.y, u.y*v.x + u.x*v.y); }\n\nfloat cabs(in vec2 z) { return length(z);      }\nfloat carg(in vec2 z) { return atan(z.y, z.x); }\n\nvec2 polar(float t) { return vec2(cos(t), sin(t)); }\nvec2 cexp(vec2 z){ return exp(z.x)*polar(z.y); }\n\nvec3 hsv2rgb(in vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return vec3(c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y));\n}\n\nfloat sin2(float x) { float s = sin(x); return s*s; }\n\n\n\n#define SCALE TAU/2.0\nvec2 rectify(vec2 v) { return SCALE*(v+v-iResolution.xy)/iResolution.x; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = rectify(fragCoord.xy);\n    vec2 m = 0.01*rectify(iMouse.xy);\n\n    vec2 pan = vec2(\n        mix(0.0, -4.5, sin2(0.5*iTime/sqrt(2.0))), // oscillating zoom level \n        0.5*iTime                                  // constant angular pan\n    );\n\n    vec2 target = vec2(-1.5, 0.0) - m; // zoom center\n    vec2 c = cexp(p.yx+pan)+target;\n\n    vec2 z = c;\n    float l = 0.0;\n    for (int i = 0; i < 256; ++i) {\n        z = cmul(z,z) + c;\n        if (dot(z,z) > 4.0) break;\n        l += 1.0;\n    }\n    \n    float s = 1.0+log2(1.0+cabs(z)); \n\tvec3 col = hsv2rgb(\n    \tvec3(\n            0.125*s - 0.2*iTime,\n            0.5,\n            sin2(s+iTime)\n        )\n    );\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}