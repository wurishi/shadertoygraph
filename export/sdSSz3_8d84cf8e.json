{"ver":"0.1","info":{"id":"sdSSz3","date":"1620667626","viewed":17,"name":"CTKnoll - Simple Maze Generation","username":"CTKnoll","description":"Simple Maze generation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["maze"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(in vec2 co)\n{\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid multiply(in float x, in float y, in vec2 uv, out vec2 pos, out vec2 idx)\n{\n    pos = vec2(fract(uv.x * x), fract(uv.y * y));\n    idx = vec2(floor(uv.x * x), floor(uv.y * y));\n}\n\n// 0 is positive slope, 1 is negative slope\nvec3 drawLine(float dir, vec2 pos)\n{\n    return vec3(smoothstep(0.1, 0.0, abs(dir + pos.y - 2. * dir * pos.y - pos.x)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // multiply screen space\n    vec2 pos, idx;\n    multiply(112., 84., uv, pos, idx);\n    \n    //determine direction randomly\n    float dir = step(0.5, rand(idx));\n\n    // Output to screen\n    fragColor = vec4(drawLine(dir, pos),1.0);\n}","name":"Image","description":"","type":"image"}]}