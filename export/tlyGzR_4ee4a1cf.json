{"ver":"0.1","info":{"id":"tlyGzR","date":"1578084216","viewed":92,"name":"Through (Practice #6)","username":"Coda_","description":"Through (Practice #6)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["subtraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nfloat box(vec3 p, vec3 s)\n{\n\n\treturn length(max(abs(p)-s,0.0));\n}\n\nfloat sphere(vec3 p, float t)\n{   \n\treturn length(p)-t;\n}\n\nfloat trace (vec3 o,vec3 r)\n{\n\tfloat t = 0.0;\n    for(int i=0;i<100;i++)\n    {\n    \tvec3 p = o+r*t;\n        vec3 q = fract(p)*2.0 -1.0;\n        float d0 = box(q-vec3(0,0,0),vec3(1,0.2,3));\n        float d1 = sphere(q-vec3(0,0,0),0.9);\n        float d = max(-d1,d0);\n        \n        t+=d*0.13;\n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n    uv-= 0.5;\n    uv/= vec2(iResolution.y/iResolution.x,1.0);\n    \n    vec3 r = normalize(vec3(uv,1.0));\n    float tt = time*0.25;\n    r.xy *= mat2(cos(tt),-sin(tt),sin(tt),cos(tt)); \n    vec3 o = vec3(tt,tt,tt);\n\t\n    float t = trace(o,r);\n\n\tfloat fog = 1.0/(1.0+t*t*0.3); \n    fragColor = vec4(vec3(fog+vec3(0.1,0,0))+vec3(0,0,0.5),1.0);\n}","name":"Image","description":"","type":"image"}]}