{"ver":"0.1","info":{"id":"mdKfWD","date":"1698363555","viewed":173,"name":"rainbowser","username":"sleeping","description":"shader reacts to the BRIGHT LIGHT and draws a rainbow over it - try to \"draw\" something in the air with a flashlight!\n\nprogram tries to preserve the light traces and periodically releases them\n\ndemo: https://x.com/speginel/status/1717881765929337124","likes":1,"published":1,"flags":34,"usePreview":0,"tags":["webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 C, vec2 U)\n{\n    vec2 u = U/iResolution.xy;\n    vec4 c = texture(iChannel0, u)/3.;\n    float w = c.r+c.g+c.b;\n    u.x = 2.*u.x-1.;\n    C = w + .5 * step(-w,-.94) * (sin(dot(u,u)*5. + vec4(0,1,-1,0)) - 1.3); // adds rainbow to the bright spots\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 C, vec2 U )\n{\n    ivec2 p = ivec2(U);\n    vec2 u = U/iResolution.xy;\n    u.x = 1.-u.x;\n    \n\t// calculate bright neighbors\n    int k,e,q,i,j;\n    for (i=-1;i<2;i++)\n        for (j=-1;j<2;j++) {\n            q = int(texelFetch(iChannel0, p+ivec2(i,j), 0).x > 0.94);\n            if (i==0&&j==0)\n                e = q;\n            else\n                k += q;\n        }\n        \n    vec4 c = texture(iChannel1, u)/3.;\n    C = c.r + c.g + c.b +\n        vec4(k==4 && e==0 || k>4+int(.5+sin(iTime)));  // alternate cell stasis/extinction\n}","name":"Buffer A","description":"","type":"buffer"}]}