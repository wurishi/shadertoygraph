{"ver":"0.1","info":{"id":"XdVSDD","date":"1464473666","viewed":319,"name":"quad grid editor","username":"PeterVivo","description":"Moving mouse slow when drag point.\n( This is a next steps in road of shader learning. )\nSHOW_BUFF true >> show what going on at BuffA\n","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["interaction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// true: show what going on at BuffA\n#define SHOW_BUFF true\n\n// fork: https://www.shadertoy.com/view/MstGW2\n\n#define S 150.  // cell size \n#define YR 2\t\n#define XR 2\n                                                               \n// draw segment [a,b]\n#define L(a,b)  O.g+= 2e-1 / length( clamp( dot(U-a,v=b-a)/dot(v,v), 0.,1.) *v - U+a )\n\n// texture Buf A \n#define T(i,j) texture(iChannel0,(.5+S*vec2(i,j))/iResolution.xy).xy\n    \nvoid mainImage( out vec4 O,  vec2 U )\n{   \n    O -= O; \n    \n    vec2 uv = U.xy / iResolution.xy;\n    \n    for (int j=0; j<YR+1; j++) \n    {\n        vec2 v, P00, P01, P10 = T(0,j), P11 = T(0,j+1);\n        \n        for (int i=0; i<XR+1; i++) \n        {\n            P00=P10, P01=P11, P10 = T(i+1,j), P11=T(i+1,j+1);\n            if ( j<YR ) L( P00 , P01 );   // draw one vertical segment\n            if ( i<XR ) L( P00 , P10 );   // draw one horizontal segment\n            O += smoothstep(3.,2.,length(U-T(i,j)));  // draw points\n        }\n    }\n    \n    if( SHOW_BUFF)\n    \tO = mix( O , texture(iChannel0, uv ), 0.0007 );\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// each pixel of BufA encodes a pair of vertex coordinates.\n// It's Image shader responsability to pick and connect some of these.\n\n\nvoid mainImage( out vec4 O,  vec2 uv )\n{\n    vec2 U = uv/iResolution.xy;\n    \n    O = texture(iChannel0,U);\n  \n    if (length(O.xy)==0.) {  \n        O.xy = uv + vec2( 300. ,  100.);  // bottom left of grid \n        return;\n    }\n\n    if ( length(iMouse.xy-O.xy) < 30. ) // edit coords sensitivity\n        O.xy = iMouse.xy;\n}","name":"Buf A","description":"","type":"buffer"}]}