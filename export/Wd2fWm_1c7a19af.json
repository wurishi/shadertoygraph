{"ver":"0.1","info":{"id":"Wd2fWm","date":"1590176708","viewed":86,"name":"lr94/MandelbrotSetZoom","username":"lucasrumney94","description":"Mandelbrot Set Visualization. Try different X and Y Zoom Points. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITERATION 1200\n#define ZOOM_SPEED 5.0\n#define CLIP_VALUE_LOW 0.\n#define CLIP_VALUE_HIGH .98\n#define X_ZOOM_POINT -0.745158\n#define Y_ZOOM_POINT 0.112576\n\n#define PI 3.14\n\nfloat mandelbrot(float uvX, float uvY)\n{\n    float x = 0.0;\n    float y = 0.0;\n    int iteration = 0;\n    float xTemp = 0.0;\n    \n    while(x*x+y*y < 4.0 && iteration<MAX_ITERATION)\n    {\n        xTemp = float(x*x)-float(y*y)+uvX;\n        y = float(2.0*x*y)+uvY;\n        x = xTemp;\n        \n        iteration++;\n    }\n    return float(iteration)/float(MAX_ITERATION);\n}\n\nvec3 pallette(float value)\n{\n    if (value<CLIP_VALUE_LOW)\n    {\n        return vec3(0.);\n    }\n    if (value>CLIP_VALUE_HIGH)\n    {\n    \treturn vec3(0.);\n    }\n    \n    return vec3(.8*abs(cos(PI*value+PI/2.)), .8*abs(sin(PI*value+iTime/6.)), .8*abs(cos(PI*value)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Scale to (-1, 1) to center\n    vec2 uv = vec2(0.);\n    uv = ((fragCoord/iResolution.xy)*2.)-1.;\n    \n    // Scale to X (-2.5, 1)\n    uv.x *= 1.75;\n    \n    // zoom\n    float zoomFactor = (iTime*iTime*ZOOM_SPEED);\n    uv /= zoomFactor;\n    \n    \n    // Add small y translation for seahorse\n    //uv.x += -.743859;\n    //uv.y += .10;\n    // interesting Spiral Point\n    uv.x += X_ZOOM_POINT;\n\tuv.y += Y_ZOOM_POINT;\n    \n    // Add really small translation for mouse\n    uv -= iMouse.xy/iResolution.xy/zoomFactor;\n    \n    // get julia set iteration value\n    float mandelbrotSample = mandelbrot(float(uv.x),float(uv.y));\n    //vec3 col = vec3(step(0., uv.x), step(0., uv.y), juliaZ);\n\n    vec3 col = pallette(mandelbrotSample);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}