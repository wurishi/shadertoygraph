{"ver":"0.1","info":{"id":"Xsc3DB","date":"1452265545","viewed":1372,"name":"a 2d fluid feedback test","username":"public_int_i","description":"attempt at some sort of fluid or particles, click to cause currents.","likes":20,"published":3,"flags":32,"usePreview":1,"tags":["test","fluid","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = texture(iChannel0, uv).xy-.5;\n    p = abs(p*2.);\n\tfragColor = vec4(p.x,p.y,length(p),1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Ethan Shulman 2016\n\n\n\n#define AUTO_CURSOR\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame < 60) {\n        fragColor = vec4(.5,.5,0.,0.);\n        fragColor = texture(iChannel1, fragCoord/iResolution.xy);\n        return;\n    }\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    #ifdef AUTO_CURSOR\n    if (iMouse.w < 1.) {\n        if (iTime > 10. && sin(iTime*.2) > -.2) {\n            if (length(vec2(sin(iTime*.44)*.8,cos(iTime*.16)*.8)-uv*2.+1.) < .1) {\n                fragColor = vec4((normalize(uv-.5)*-.5)*.5+.5,0.,0.);\n            \treturn;\n            }\n        }\n    } else {\n        #endif\n        if (iMouse.w > 0. && length(iMouse.xy/iResolution.xy-uv) < .05) {\n\n            //if (iMouse.w > 1.5) {\n                fragColor = vec4((-normalize(iMouse.xy/iResolution.xy-uv))*.5+.5,0.,0.);\n            //} else {\n            //\tfragColor = vec4((normalize(uv-.5)*-.5)*.5+.5,0.,0.);\n            //}\n            return;\n        }\n        #ifdef AUTO_CURSOR\n    }\n    #endif\n    vec2 odRes = 1./iResolution.xy;\n        \n\tvec4 cLeft = texture(iChannel0, fract(uv-vec2(odRes.x,0.)))*2.-1.,\n         cRight = texture(iChannel0, fract(uv+vec2(odRes.x,0.)))*2.-1.,\n         cUp = texture(iChannel0, fract(uv-vec2(0.,odRes.y)))*2.-1.,\n         cDown = texture(iChannel0, fract(uv+vec2(0.,odRes.y)))*2.-1.,\n         cTopLeft = texture(iChannel0,fract(uv+vec2(-odRes.x,-odRes.y)))*2.-1.,\n         cTopRight = texture(iChannel0,fract(uv+vec2(odRes.x,-odRes.y)))*2.-1.,\n         cBottomLeft = texture(iChannel0,fract(uv+vec2(-odRes.x,odRes.y)))*2.-1.,\n         cBottomRight = texture(iChannel0,fract(uv+vec2(odRes.x,odRes.y)))*2.-1.;\n    \n    vec4 c = vec4(0.);\n    c += cLeft*(1.+dot(vec2(1.,0.),cLeft.xy));\n    c += cRight*(1.+dot(vec2(-1.,0.),cRight.xy));\n    c += cUp*(1.+dot(vec2(0.,1.),cUp.xy));\n    c += cDown*(1.+dot(vec2(0.,-1.),cDown.xy));\n    c += cTopLeft*(1.+dot(normalize(vec2(1.,1.)),cTopLeft.xy));\n    c += cTopRight*(1.+dot(normalize(vec2(-1.,1.)),cTopRight.xy));\n    c += cBottomLeft*(1.+dot(normalize(vec2(1.,-1.)),cBottomLeft.xy));\n    c += cBottomRight*(1.+dot(normalize(vec2(-1.,-1.)),cBottomRight.xy));\n    c *= .125;\n\n    c.xy = clamp(c.xy, -1., 1.);\n    c = c*.5+.5;\n    \n    fragColor = c;\n}","name":"Buf A","description":"","type":"buffer"}]}