{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define USE_APPROX_MATH /* comment this to use built-in sqrt */\n#define NUM_REFINEMENT_STEPS 1 /* configure number of iterations */\n\nfloat approxInvSqrt(float x) {\n    float y = exp2(floor(log2(x)) * -0.5);\n    \n    /* http://www.azillionmonkeys.com/qed/sqroot.html */\n    for (int i = 0; i < NUM_REFINEMENT_STEPS; ++i) { \n        y *= 1.5 - y * y * x * 0.5;\n    }\n\n    return y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float len = uv.x * uv.x + uv.y * uv.y;\n    \n#ifdef USE_APPROX_MATH\n    float k = approxInvSqrt(len);\n#else\n    float k = 1.0 / sqrt(len);\n#endif\n    \n    float s = 1.0 - 1.0 / (1.0 + k);\n    \n\tfragColor = vec4(vec3(s),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XlsGz2","date":"1423424911","viewed":277,"name":"ApproxInvSqrt","username":"dila","description":"Shows visible banding as a result of having too few refinement steps.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sqrt","approx","inv"],"hasliked":0,"parentid":"","parentname":""}}