{"ver":"0.1","info":{"id":"XllyWj","date":"1506440762","viewed":77,"name":"Jimmy_Griffiths_EGP-200-03_House","username":"jamesgriffiths01","description":"House for EGP 200-03: Layered House assignment.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["house"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Size of various rectangles\nvec2 HouseSize = vec2(0.3, 0.15);\nvec2 ChimneySize = vec2(0.03, 0.1);\nvec2 WindowSize = vec2(0.07, 0.07);\n\n//Colors of each rectangle, and the background\nvec4 Color1 = vec4 (1.0, 0.0, 0.0, 1.0);\nvec4 Color2 = vec4(0.5, 0.5, 0.0, 1.0);\nvec4 Color3 = vec4(0.5, 0.5, 1.0, 1.0);\nvec3 BGColor = vec3(1.0, 1.0, 1.0); \n\n//Booleans to switch off laers\nbool SeeChimney = true;\nbool SeeHouse = true;\nbool SeeWindow = true;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float rectX;\n    float rectY;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //Fix normalized UV\n    uv.y *= iResolution.y / iResolution.x;\n    \n    //Set up layers\n    vec4 Layer1 = vec4(BGColor, 1.0);\n    vec4 Layer2;\n    vec4 Layer3; \n    vec4 Layer4;\n    \n    //Make each rectangle. You need the length and the width. \n    //If the switch for the layer is true, the layer will be displayed.\n    //The first one is the chimney, so it can be hidden behind the house.\n    rectX = step(length(ChimneySize.x - uv.x + 0.6), ChimneySize.x);\n    rectY = step(length(ChimneySize.y - uv.y + 0.2), ChimneySize.y);\n    Color2.a = rectX * rectY;\n    if(SeeChimney)\n    \tLayer2 = Color2;\n    \n    //Next the house body\n\trectX = step(length(HouseSize.x + .1 - uv.x), (HouseSize.x));\n    rectY = step(length(HouseSize.y - uv.y), (HouseSize.y));\n    Color1.a = rectX * rectY;\n    if(SeeHouse)\n\t\tLayer3 = Color1;\n    \n    //Finally the window on top of the image\n   \trectX = step(length(WindowSize.x + .2 - uv.x), (WindowSize.x));\n    rectY = step(length(WindowSize.y + .1 - uv.y), (WindowSize.y));\n    Color3.a = rectX * rectY;\n    if(SeeWindow)\n    \tLayer4 = Color3;\n    \n    //Interpolate the layers together\n    vec4 composite = mix(Layer1, Layer2, Layer2.a);\n    composite = mix(composite, Layer3, Layer3.a);\n    composite = mix(composite, Layer4, Layer4.a);\n    \n    //Display the image\n    fragColor = composite;\n\t\n}","name":"Image","description":"","type":"image"}]}