{"ver":"0.1","info":{"id":"cdBXWW","date":"1670272810","viewed":67,"name":"Shader Hw ","username":"ecsaur","description":"moon to star...so pretty","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdMoon(vec2 p, float d, float ra, float rb )\n{\n    p.y = abs(p.y);\n\n    float a = (ra*ra - rb*rb + d*d)/(2.0*d);\n    float b = sqrt(max(ra*ra-a*a,0.0));\n    if( d*(p.x*b-p.y*a) > d*d*max(b-p.y,0.0) )\n    {\n        return length(p-vec2(a,b));\n    }\n\n    return max( (length(p          )-ra),\n               -(length(p-vec2(d,0))-rb));\n}\n\nfloat sdHexagram( in vec2 p, in float r )\n{\n    const vec4 k = vec4(-0.5,0.86602540378,0.57735026919,1.73205080757);\n\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n    p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n    return length(p)*sign(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // moon\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (fragCoord.xy-iResolution.xy)/iResolution.y;\n    p *= 1.3;\n\n    float ra = 1.0;\n    float rb = 0.8;\n    //iTime+ number in cos makes it move it seems\n    float d = 0.5*cos(5.9)*sin(0.7);\n\n    //p = placement? di = something w circle, ra = circle radius, \n    float dist1 = sdMoon(p, d, 1.0, rb );\n\n    // star (hexagram)\n    vec2 p2 = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float dist2 = sdHexagram( p2, 0.35 );\n\n    float t = 0.5 + 0.5*cos(iTime);\n    float linearInterpolation = mix(dist1, dist2, t);\n  \n     // Time varying pixel color\n    vec3 col = vec3(1.0) * (sign(linearInterpolation)* vec3(0.85, 0.45, 0.85) * vec3(p, m * t)+d);\n    vec3 mixco = mix(col, vec3(0.0, 2.0, 0.0), step(0.5, linearInterpolation));\n\n\n    fragColor = vec4(mixco,1.0);\n}","name":"Image","description":"","type":"image"}]}