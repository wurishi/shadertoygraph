{"ver":"0.1","info":{"id":"tsVBWD","date":"1607196556","viewed":279,"name":"Shader Royale #2 - LechugaFeliz","username":"lechuga","description":"Shader Royale #2 04/12/2020\ninercia demoparty","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","reflect","crystal","royal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nfloat esp(vec3 p, float s){\n  return length(p)-s;\n}\n\nfloat box(vec3 p, vec3 s){\n  vec3 q = abs(p)-s;\n  return max(q.x, max(q.y, q.z));\n}\n\nvec2 rp(vec2 p, vec2 s){\n  return (fract(p/s-.5)-.5)/s;\n}\n\nfloat rp(float p, float s){\n  return (fract(p/s-.5)-.5)/s;\n}\n\nmat2 rot(float a){\n  float aco = cos(a);\n  float asi = sin(a);\n  return mat2(aco, asi, -asi, aco);\n}\n\nfloat map2(vec3 p){\n  return -box(p, vec3(40.));\n}\n\nfloat at =1.;\nfloat map(vec3 p){\n//  \n  float t1 = time*.1;\n  \n  for(float i = 0.; i < 8.;++i){\n     \n    p.xz *= rot(t1*i*.2);\n    p.yz *= rot(t1*.3*i);\n    p -= vec3(0.1, .1, .1);\n    \n    p = abs(p)-.5-vec3(.2, 0.5, .2)*i*.5+sin(time)*.5-.5;\n\n    p.xy *= rot(time*.13);\n    \n  }\n  \n  float d2 = box(p, vec3(1.));\n  at += .1/(.1+d2*d2);\n  \n  return min(d2, map2(p));\n  \n}\n\nvec3 nm(vec3 p){\n  vec2 offs=vec2(0.01, 0.);\n  return normalize(map(p)-vec3(map(p-offs.xyy),map(p-offs.yxy), map(p-offs.yyx)));\n}\n\nvoid cam(inout vec3 p){\n  p.xz *= rot(time+cos(time*.6)*.25-.5);\n  p.yz *=rot(time*.6+sin(time*.56)*.25-.5);\n  p.xy *= rot(time*.25);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);  \n  \n  float timing = floor(mod(time, 3.));\n  if(timing > 2.){\n    float det = texture(iChannel0, vec2(0.001)).x * 2000.;\n    uv = floor(uv/det)/det;\n  }\n  \n  vec3 s = vec3(0., 0., -25.);\n  float fov =.7-sin(time*.5)*.25-.25;\n  vec3 r = normalize(vec3(-uv, fov));\n  vec3 col = vec3(0.);\n  \n  cam(s);\n  cam(r);\n  \n  \n  vec3 p = s;\n  float i = 0.;\n  float pred = 1.;\n    \n    \n  for(;i < 50.;i++){\n    float d = map(p);\n    if(d<0.0001){\n      float fog = 1.-i/50.;\n      vec3 n = nm(p);\n      vec3 l = normalize(vec3(-1.));\n      float toc = floor(mod(time, 10.));\n      float pi = acos(-1.);\n      if(toc < 3. && toc > 1.)\n        col += .6-max(dot(l,n),0.)*fog*vec3(.45, 0.3456, 0.4)*pi*sin(time*5.)*.4;\n      if(toc > 3.){\n        col += .5-max(dot(l,n),0.)*vec3(.456, .456, .2)*pi*sin(time)*5.*.2;\n      }\n      \n      col += .5-max(dot(l,n),0.)*vec3(.4, .3, .3)*pi*sin(time)*5.*.26;\n      col += .1/(100.+i)*vec3(0.4, 0.3,0.65)*sin(time)*.94-.1;\n      col *= .6;\n      col += 1.-length(p)/65.;\n      col += at*.005*vec3(1., .5,.2);\n      pred *= 0.6;\n      \n      r = reflect(n, l);\n      d = 0.1;\n      if(pred < 0.001) break;\n    }\n    if(d>100.)break;\n    p+=d*r;\n  }\n  col *= 0.3;\n  fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}