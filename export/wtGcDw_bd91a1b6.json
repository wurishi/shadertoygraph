{"ver":"0.1","info":{"id":"wtGcDw","date":"1618852630","viewed":42,"name":"dvg_Circle_1","username":"david4jsus","description":"Learning how to make circles.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","smoothstep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Offset uv coords so that (0, 0) is center of view\n    uv -= 0.5;\n    \n    // Fix view distortion (adjust aspect ratio on the x axis of uv)\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Distance from (0, 0)\n    float d = length (uv);\n    \n    // Radius of the circle\n    float r = 0.3;\n    \n    // Make output color be distance from (0, 0)\n    float c = d;\n    \n    // Harsh circle //\n    /*if (d < 0.3) {\n        c = 1.0;\n    } else {\n        c = 0.0;\n    }*/\n    \n    // Smooth circle //\n    // Using smoothstep(a,b,c) will smoothly interpolate from a to b along the input c\n    c = smoothstep (r, r - 0.03, d);\n\n    // Output to screen\n    fragColor = vec4 (vec3 (c), 1.0);\n}","name":"Image","description":"","type":"image"}]}