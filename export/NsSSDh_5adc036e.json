{"ver":"0.1","info":{"id":"NsSSDh","date":"1620073661","viewed":449,"name":"Temporal low pass filter","username":"kaihagseth","description":"Just a simple implementatiopn of a temporal low pass filter. \nInspired by javidx9s video on youtube!\n https://www.youtube.com/watch?v=mRM5Js3VLCk","likes":1,"published":3,"flags":34,"usePreview":0,"tags":["imageprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float nSin(float x)\n{\n return .5 + (sin(x)*.5);\n}\n\nvec4 RC()\n{\n    return .1 *  vec4(nSin(iTime), nSin(2.*iTime), nSin(3.*iTime), 1.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 bufferVal = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    vec4 cam = texelFetch(iChannel2, ivec2(fragCoord), 0);\n    vec4 diff = (cam - bufferVal) * RC();\n    fragColor = bufferVal + diff;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = ( fragCoord * iChannelResolution[0].xy) / iResolution.xy;\n    fragColor = texelFetch(iChannel0, ivec2(st), 0);\n}","name":"Buffer B","description":"","type":"buffer"}]}