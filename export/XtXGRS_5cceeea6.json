{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PI\t3.14159265359\n#define PI2\t( PI * 2.0 )\n\nvec2 rotate(in vec2 p, in float t)\n{\n\treturn p * cos(-t) + vec2(p.y, -p.x) * sin(-t);\n}\n\nfloat tetrahedron(in vec3 p) // 4\n{\n    vec3 v = vec3(0.0, 1.0, 0.0);\n    float d = dot(p, (v));\n    v.xy = rotate(v.xy, 1.91063); // ?\n    for(float i = 0.0; i < 3.0; i++)\n    {\n        d = max(d, dot(p, vec3(rotate(v.xz, i * PI2 / 3.0), v.y).xzy));\n    }\n    return d;\n}\n\n\nfloat hexahedron(in vec3 p) // 6\n{\n    vec3 v = vec3(0.0, 1.0, 0.0);\n    float d = abs(dot(p, (v)));\n    v.xy = rotate(v.xy, PI / 2.0);\n    d = max(d, abs(dot(p, (v))));\n    v.xz = rotate(v.xz, PI / 2.0);\n    d = max(d, abs(dot(p, (v))));\n    return d;\n}\n\nfloat octahedron(in vec3 p) // 8\n{\n    vec3 v = vec3(0.0, 1.0, 0.0);\n\tfloat a = atan(1.0, sin(PI / 4.0));\n    v.xy = rotate(v.xy, a);\n    float d = 1.0;    \n    for(float i = 0.0; i < 4.0; i++)\n    {\n    \td = max(d, abs(dot(p, vec3(rotate(v.xz, i * PI2 / 4.0), v.y).xzy)));\n    }\n    return d;\n}\n\nfloat dodecahedron(in vec3 p) // 12\n{    \n    vec3 v = vec3(0.0, 1.0, 0.0);\n    float d = abs(dot(p, (v)));\n    v.xy = rotate(v.xy, PI2 / 6.0);\n    for(float i = 0.0; i < 5.0; i++)\n    {\n        d = max(d, abs(dot(p, vec3(rotate(v.xz, i * PI2 / 5.0), v.y).xzy)));\n    }\n    return d;\n}\n\nfloat icosahedron(in vec3 p) // 20\n{\n    vec3 v = vec3(0.0, 1.0, 0.0);\n    float n =  0.69; // ?\n    vec3 v1 = vec3(rotate(v.xy, n), v.z);\n    vec3 v2 = vec3(rotate(v.xy, n * 2.0), v.z);\n    float d = 1.0;    \n    for(float i = 0.0; i < 5.0; i++)\n    {\n    \td = max(d, abs(dot(p, vec3(rotate(v1.xz, i * PI2 / 5.0), v1.y).xzy)));\n    \td = max(d, abs(dot(p, vec3(rotate(v2.xz, i * PI2 / 5.0), v2.y).xzy)));\n    }\n    return d;\n}\n\n\nfloat map(in vec3 p)\n{\n    float t = mod(iTime * 0.5, 15.0);\n    if (t < 3.0)  return mix(tetrahedron(p) - 0.5, hexahedron(p)  -1.0, smoothstep( 1.0,  2.0, t));\n    if (t < 6.0)  return mix(hexahedron(p)  - 1.0, octahedron(p)  -1.0, smoothstep( 4.0,  5.0, t));\n    if (t < 9.0)  return mix(octahedron(p)  - 1.0, dodecahedron(p)-1.0, smoothstep( 7.0,  8.0, t));\n    if (t < 12.0) return mix(dodecahedron(p)- 1.0, icosahedron(p) -1.0, smoothstep(10.0, 11.0, t));\n    if (t < 15.0) return mix(icosahedron(p) - 1.0, tetrahedron(p) -0.5, smoothstep(13.0, 14.0, t));\n    return 1.0;\n}\n\nvec3 calcNormal(in vec3 p)\n{\n\tconst vec2 e = vec2(0.0001, 0.0);\n\treturn normalize(vec3(\n\t\tmap(p + e.xyy) - map(p - e.xyy),\n\t\tmap(p + e.yxy) - map(p - e.yxy),\n\t\tmap(p + e.yyx) - map(p - e.yyx)));\n}\n\nfloat march(in vec3 ro, in vec3 rd)\n{\n\tconst float maxd = 50.0;\n\tconst float precis = 0.001;\n    float h = precis * 2.0;\n    float t = 0.0;\n\tfloat res = -1.0;\n    for(int i = 0; i < 64; i++)\n    {\n        if(h < precis || t > maxd) break;\n\t    h = map(ro + rd * t);\n        t += h;\n    }\n    if(t < maxd) res = t;\n    return res;\n}\n\nvec3 transform(in vec3 p)\n{\n    p.yz = rotate(p.yz, iTime * 0.8);\n    p.zx = rotate(p.zx, iTime * 0.5);\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\tvec3 col = vec3(0.1 + p.y * 0.15);\n   \tvec3 rd = normalize(vec3(p, -1.8));\n\tvec3 ro = vec3(0.0, 0.0, 4.5);\n    vec3 li = normalize(vec3(0.5, 0.8, 3.0));\n    ro = transform(ro);\n\trd = transform(rd);\n\tli = transform(li);\n    float t = march(ro, rd);\n    if(t > -0.001)\n    {\n        vec3 pos = ro + t * rd;\n        vec3 n = calcNormal(pos);\n\t\tfloat dif = clamp((dot(n, li) + 0.5) * 0.7, 0.3, 1.0);\n        col = vec3(0.95, 0.9, 0.7) * dif;\n    }\n   \tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XtXGRS","date":"1422797823","viewed":290,"name":"Polyhedron DE","username":"gaz","description":"inspired by https://www.shadertoy.com/view/MtsGW7","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","de","polyhedron"],"hasliked":0,"parentid":"","parentname":""}}