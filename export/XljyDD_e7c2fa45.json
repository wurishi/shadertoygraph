{"ver":"0.1","info":{"id":"XljyDD","date":"1508665383","viewed":74,"name":"not sure","username":"bradleygriffith","description":"click drag","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdsd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358\n\nfloat isWave(vec2 fragCoord, float position, float wavelength, float amplitude) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float x = uv.x;\n    float y = uv.y;\n    //x += iTime * 0.25;\n    \n    position += sin(x * PI * (iResolution.x / (wavelength / 2.0))) * (amplitude / iResolution.y);;\n    \n    return position;\n}\n\n\nfloat isRibbon(vec2 fragCoord, float position, float width, float wavelength, float amplitude) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 firstWaveCoord = fragCoord.xy;\n    vec2 secondWaveCoord = fragCoord + vec2(width, 0.0);\n \n    float wave1 = isWave(firstWaveCoord, position, wavelength, amplitude);\n    float wave2 = isWave(secondWaveCoord, position, wavelength, amplitude);\n    \n    float isWave1 = step(uv.y, wave1);\n    float isWave2 = step(uv.y, wave2);\n    \n    float wave1Only = (isWave1 + (isWave2 * -1.0));\n    float wave2Only = (isWave2 + (isWave1 * -1.0));\n    \n    float singleWave = max(wave1Only, wave2Only);\n    \n    \n    \n    \n    \n    \n    \n    const int suckything = 400;\n    \n    float combinedWaves = 0.0;\n    \n    for (int i = 0; i < suckything; i++) {\n        if (float(i) > width) { break; }\n    \tvec2 waveCoord = fragCoord + vec2(float(i), 0.0);\n     \tfloat wave = isWave(waveCoord, position, wavelength, amplitude);\n    \tfloat isWave = step(uv.y, wave);\n        \n        wave1Only = (isWave1 + (isWave * -1.0));\n        float thisWaveOnly = (isWave + (isWave1 * -1.));\n        \n        float something = max(thisWaveOnly, wave1Only);\n        \n        combinedWaves = max(something, combinedWaves);\n    }\n    \n    \n    \n\n    return (combinedWaves - (singleWave / 2.0));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float wavelength = 180.0;\n    float amplitude = 125.0;\n    float position = 0.5;\n    float width = 20.0;\n    width = (iMouse.x / iResolution.x) * wavelength;\n    \n    float ribbon = isRibbon(fragCoord, position, width, wavelength, amplitude);\n\n    \n    fragColor = vec4(vec3(ribbon), 1.0);\n}","name":"Image","description":"","type":"image"}]}