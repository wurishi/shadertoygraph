{"ver":"0.1","info":{"id":"ttyyWV","date":"1611773556","viewed":398,"name":"Cosamentale_Shader Royale#2","username":"louis_C","description":"result of the livecoding lade during the Shader Royale #2\nIt was a great night.\nhttps://www.youtube.com/watch?v=wwN5vRXKAl8&ab_channel=FilipeCruz","likes":21,"published":1,"flags":8,"usePreview":0,"tags":["livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat2 rot( float t){ float c  = cos(t);float s = sin(t); return mat2(c,-s,s,c);}\nfloat hs(vec2 t){return fract(sin(dot((t),vec2(265.,45.)))*7845.265+iTime);}\nfloat rd(float t){return fract(sin(dot(floor(t),45.))*7845.265);}\nfloat no(float t){return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat it(float t){float r= 0.; float a =0.5; for(int i = 0 ; i < 3 ; i++){\n  r += no(t/a)*a;a*=0.5;}return r;}\n  vec3 rer (vec3 p, float r){float at = atan(p.z,p.x);float t = 6.28/r;\n    float a = mod (at,t)-0.5*t;\n    vec2 v  = vec2(cos(a),sin(a))*length(p.xz);\n    return vec3(v.x,p.y,v.y);}\n    float cap (vec3 p , vec3 a, vec3 b){vec3 pa =p-a; vec3 ba = b-a;\n      float h = clamp(dot(pa,ba)/dot(ba,ba),0.,1.);\n      return length(pa-ba*h);}\n      \n    float no(vec3 p){vec3 f = floor(p); p = smoothstep(0.,1.,fract(p));\n      vec3 se = vec3(5.,48.,958.);\n      vec4 v1 = dot(f,se)+vec4(0.,se.y,se.z,se.y+se.z);\n      vec4 v2 = mix(fract(sin(v1)*7845.236),fract(sin(v1+se.x)*7845.236),p.x);\n      vec2 v3 = mix(v2.xz,v2.yw,p.y);\n      return mix(v3.x,v3.y,p.z);}\n      float fmb (vec3 p ) {return smoothstep(0.1,1.,no(p+no(p)*8.));}\n  float zl (vec3 p,float m1){\np = rer(p,4.);\n    \n    return smoothstep(pow(length(p.y),1.5)*0.4+3.,0.,length(p.xz))*3.+smoothstep(3.+m1*5.,0.,length(p))*15.+smoothstep(0.7,0.1,length(p.zy))*7.;}\n  \n    float zo (vec3 p, float t,float m1){\n      vec3 p2 = p;\n       p.xz *= rot(iTime*-4.+p.y*1.5*t*sign(p.y));\n      float tt = no(p*2.5);\np.y += sin(p.x+p.z+iTime*3.);\n     p.y =  abs(p.y);\n      p = rer (p,4.);\n      return smoothstep(0.,tt,cap(p+vec3(-tt*2.-t,0.,0.),vec3(0.,2.,0.),vec3(0.,10.,0.)))*smoothstep(0.1+m1*2.5,0.7+m1*2.,length(p2));}\nfloat map (vec3 p){\nvec3 b = p;\nfor (int i = 0 ; i <11 ; i++){\nb = vec3(1.8)*abs(b/dot(b,b))-vec3(0.7,0.3,0.6);}\n \nfloat v1 = length(p)-6.;\nfloat v2 = length(b)-0.5;\nreturn v2;}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n     uv -= 0.5;\n     uv *= 2.;\n     uv.x *= iResolution.x/iResolution.y;\n     float time = iTime;\n   float v1 = it(time*4.)*1.1;\n  float v2 = it(time*1.2)*6.28;\n  float v3 = it(time*1.1)*1.3;\n  float v4 = it(time*1.3); \n  float v5 =  it(time*2.);\n  float m1 = max(smoothstep(0.4,0.7,it(time*0.7)),0.);\n // float m2 = fract(time);\n  vec3 e = vec3(0.,0.,mix(-5.5,0.,m1));\n  vec3 r = normalize(vec3(uv,1.+v4));\n  e.xz *= rot(v2);\n   r.xz *= rot(v2);\n  e.yz *= rot(v3);\n   r.yz *= rot(v3);\n  int va = int(mix(25.,0.,m1));\n  float fstp = 10./float(va);\n  vec3 fr = fstp*r;\n  float prog  = fstp*hs(uv);\n  vec3 lp = e+r*prog;\n  float val; float opa =1.;\n  for(int i = 0 ; i < va ; i++){\n    if (prog> 10.){break;}\n    if(opa<0.01){break;}\n    vec3 lp2 = lp;\n    lp2.xz *= rot(lp.y);\n    opa *= zo(lp,v5,m1)*mix(0.95,1.,fmb(lp2*2.));\n    val += zl(lp,m1)*opa;\n    lp += fr;\n    prog += fstp;\n  }\n  float c1 = val*0.02*v1;\n  c1 += opa*0.2;\n  vec3 e2 = vec3(0.,0.,-85.);\n   e2.xz *= rot(v2);\n  \n  e2.yz *= rot(v3);\n  vec3 p = e2;\n  float dd = 0.; \n  int va2 =int(mix(0.,64.,m1));\n  for (int i = 0 ; i < va2 ;i++){\n    float d = map(p);\n    if(d<0.01){break;}\n    p += r*d;\n    dd += d;\n  }\n  float s1 = smoothstep(30.,80.,dd);\n  float r1 = mix(c1,s1,m1);\n  vec3 c2 = mix(vec3(1.),3.*abs(1.-2.*fract(r1*0.7+0.3+length(uv)*0.2+vec3(0.,-1./3.,1./3.)))-1.,0.15)*r1;\n    fragColor = vec4(c2,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float rd(float t){return fract(sin(dot(floor(t),45.))*7845.265);}\nfloat no(float t){return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat it(float t){float r= 0.; float a =0.5; for(int i = 0 ; i < 3 ; i++){\n  r += no(t/a)*a;a*=0.5;}return r;}\n  float hash(float x){return fract(sin(x) * 897612.531);}\n  float voc(float t, float f, float ft,float t2){float x = fract(t * f) / f;\nfloat a=(sin(x*6.5*ft)*.4+sin(x*13.*ft)+sin(x*24.*ft)*.2);\n   return a* min(x * 1000., 1.) * exp(x * -200.);}\n  vec2 inst2(float t, float var,float t2){\n    vec2 v = vec2(0., 0.);\n    for(int i = 0; i < 16; ++i){\n        float h = float(i);\n       \tfloat m = voc(t + h / 3., 50. + pow(2.01, (h - 8.) * .2), var,t2);\n        float pan = hash(h);\n        v.x += m * pan;\n        v.y += m * (1. - pan);\n    }\n    return v * .1;\n}\nvec2 hash22(vec2 p){p  = fract(p * vec2(5.3983, 5.4427));p += dot(p.yx, p.xy +  vec2(21.5351, 14.3137));\nreturn fract(vec2(p.x * p.y * 95.4337, p.x * p.y * 97.597));}\nvec2 noise(float t){return hash22(vec2(t, t * 1.423)) * 2.0 - 1.0;}\nvec2 lpnoise(float t, float fq){\n    t *= fq;\n    float tt = fract(t);\n    float tn = t - tt;\n    tt = smoothstep(0.0, 1.0, tt);\n    vec2 n0 = noise(floor(tn + 0.0) / fq);\n    vec2 n1 = noise(floor(tn + 1.0) / fq);\n    return mix(n0, n1, tt);}\n\nfloat sine(float x){    return sin(2.0 *3.1415927 * x);}\nvec2 sine(vec2 v) { return vec2(sine(v.x), sine(v.y)); }\nvec2 amp  (float t , float f0 , vec2 w,float f) {\n  vec2 r = lpnoise(t, 100.0)+lpnoise(t,  550.0)*0.2+ lpnoise(t, 1050.0) * 0.1 * exp(-t * 5.0);\n        w += sine(t * f0 + r * 0.1) * exp(-t * 2.0)*f;\n    \tw -= sine(t * f0          ) * exp(-t * 2.0)*f;\n        return w;}\nvec2 sons (float time, float v1 , float v2 , float v3 , float v4 , float v5 ){\n float m1 = max(smoothstep(0.4,0.7,it(time*0.7)),0.);\n   \n   float s1 = it (v2*150.);\n   float s2 = it(v3 *150.);\n   vec2 r = vec2(mix(s2,s1,v1),mix(s1,s2,v1));\n   float s3 = it(time*300.)*v4;\n   r += s3*0.5;\n   vec2 s4 = inst2(time,v5*200.,time);\n   r += s4;\n   float t1 = time;\n   return amp(fract(time),100.,clamp(r,0.,1.),1.);\n}\nvec2 mainSound( int samp, float time )\n{\n  float v1 = it(time*4.);\n  float v2 = it(time*1.2);\n  float v3 = it(time*1.1);\n  float v4 = it(time*1.3); \n  float v5 =  it(time*2.);\n  vec2 r = sons (time,v1,v2,v3,v4,v5);\n    return vec2( r );\n}","name":"Sound","description":"","type":"sound"}]}