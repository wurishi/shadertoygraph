{"ver":"0.1","info":{"id":"Dl3cWX","date":"1699707747","viewed":28,"name":"Roto-Dist","username":"Pi101","description":"Roto-Dist is my fav word now","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blur","distortion","silly","random","wavy","glitch","sample","rotation","funny","ripple","cool","seed","manipulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Constants cuz yes\nconst float Frequency = 0.2;\nconst float Amplitude = 0.1;\nconst float Trippy = 0.5;\n\n// Function to generate a random value between -1 and 1 (Remember this is important!!!!)\nfloat random(vec2 uv, float seed) {\n    return fract(sin(dot(uv, vec2(12.9898, 78.233)) + seed) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized coords\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time\n    float time = iTime;\n\n    // Distortion thing (IMPORTANT!)\n    float seed = floor(time / 5.0);\n    float randomDistortion1 = random(uv, seed);\n    float randomDistortion2 = random(uv, seed + 1.0);\n    float randomDistortion3 = random(uv, seed + 2.0);\n\n    // Distortion calculations\n    vec2 distortion = vec2(\n        sin((uv.y + randomDistortion1) * Frequency + time) * Amplitude,\n        sin((uv.x + randomDistortion2) * Frequency + time) * Amplitude\n    );\n\n    distortion += vec2(\n        sin((uv.x + uv.y + randomDistortion3) * Frequency + time) * Amplitude * 0.5,\n        sin((uv.x - uv.y - randomDistortion1) * Frequency + time) * Amplitude * 0.5\n    );\n\n    distortion += vec2(\n        sin(time) * Trippy,\n        cos(time) * Trippy\n    );\n\n    // Apply distortion\n    vec2 distortedUV = uv + distortion;\n\n    // Sample the texture\n    vec4 texColor = texture(iChannel0, distortedUV);\n\n    // Output\n    fragColor = texColor;\n}\n","name":"Image","description":"","type":"image"}]}