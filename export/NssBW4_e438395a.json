{"ver":"0.1","info":{"id":"NssBW4","date":"1644868769","viewed":114,"name":"whirl with spot","username":"cxm","description":"shader animations","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["whirlpool","effort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(vec3 v){\n    \n    float r;\n    \n    for( float i = 1.; i < 4.; i++ ){\n        v.x += sin( v.x ) * sin( v.y ) * i / 4.;\n        v.y += clamp( v.x / v.y, -1., 1. );\n        v.z += cos( v.y * i * v.x ) * cos( v.y / i * 20. ) * i / 4.;\n    }\n\n    return v.z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.yy;\n    vec2 itv = iMouse.xy / iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col;\n    \n    float resRa = ( iResolution.x / iResolution.y );\n    \n    float p;\n    \n    p = distance( uv, vec2( .5 *  resRa, .5 ) );\n    \n    p = step( p, .2 );\n    // draw outline\n    \n    p = mix(\n        p,\n        .5,\n        1. - smoothstep(\n            distance( uv, vec2( .5 * resRa, .5 ) ),\n            .25,\n            .23\n        )\n    );\n\n    \n    if( iMouse.z >= .001 ){\n     \n        /*\n        // try it 2d sdf\n        p += 3. * step(\n        distance( uv, vec2( itv.x * resRa, itv.y ) ),\n            length( \n            vec2( itv.x * resRa, itv.y ) - \n            vec2( .5 *  resRa, .5 )\n            ) - .2\n        );\n        */\n     \n        p += .5 * smoothstep(\n        .01,\n        distance( uv, vec2( itv.x * resRa, itv.y ) ),\n            length( \n            vec2( itv.x * resRa, itv.y ) - \n            vec2( .5 *  resRa, .5 )\n            ) - .2\n        );\n     \n    }\n    \n    float r = length( uv - vec2( .5 * resRa, .5 ) );\n    \n    float p1 = mod( ( atan( ( uv.x - .5 * resRa ), uv.y - .5 ) + \n    sin( r * 5. * noise( vec3( r, uv.x * resRa, uv.y ) ) ) + p - iTime ) / 6.28, .1 ) * 15.;\n    \n    p = mix( p, .1, p1 );\n    \n    col += p;\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}