{"ver":"0.1","info":{"id":"MdGfDh","date":"1528560803","viewed":344,"name":"Guru Meditation","username":"rkibria","description":"Generated from 1-bit BMP file using a Python script https://github.com/rkibria/img2shadertoy\n\nUses simple RLE compression scheme to save some memory.\n\nSee a better example here! https://www.shadertoy.com/view/4sKBDh","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["bitmap","generated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 bitmap_size = vec2(672, 93);\nconst int[] palette = int[] (\n0x00000000,\n0x000000ff\n);\nconst int[] rle = int[] (\n0x00ff00ff,\n0x00ff00ff,\n0x009f00ff,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x2a008f0f,\n0x1e6f1f80,\n0x618006f0,\n0x0786f0f8,\n0x8381bc38,\n0x018c3e07,\n0xf83e0cc0,\n0x3e0f83e0,\n0x1f03e0f8,\n0x83e0f80c,\n0x19863e0f,\n0x923e0f86,\n0x003f0500,\n0x0fc00000,\n0x802a008f,\n0xf01e6f1f,\n0xf8618006,\n0x380786f0,\n0x078381bc,\n0xc0018c3e,\n0xe0f83e0c,\n0xf83e0f83,\n0x0c1f03e0,\n0x0f83e0f8,\n0x8619863e,\n0x00923e0f,\n0x00003f05,\n0x8f0fc000,\n0x98c02a00,\n0x03180c31,\n0x180c6180,\n0xc64c0303,\n0x630304c0,\n0x0cc0018c,\n0xc6318c63,\n0x318c6318,\n0x8c0c0c06,\n0x6318c631,\n0x18c61986,\n0x05009263,\n0x0000003f,\n0x008f0fc0,\n0x3198c02a,\n0x8003180c,\n0x03180c61,\n0xc0c64c03,\n0x8c630304,\n0x630cc001,\n0x18c6318c,\n0x06318c63,\n0x318c0c0c,\n0x866318c6,\n0x6318c619,\n0x3f050092,\n0xc0000000,\n0x2a008f0f,\n0x8c319860,\n0x6d800319,\n0x030319fc,\n0x00c0f80c,\n0x018c6303,\n0x9c671fe0,\n0x6719c671,\n0x1fe6719c,\n0xc6719c00,\n0xf0fc6719,\n0x92670063,\n0x003f0500,\n0x0fc00000,\n0x602a008f,\n0x198c3198,\n0xfc6d8003,\n0x0c030319,\n0x0300c0f8,\n0xe0018c63,\n0x719c671f,\n0x9c6719c6,\n0x001fe671,\n0x19c6719c,\n0x63f0fc67,\n0x00926700,\n0x00003f05,\n0x8f0fc000,\n0x9c602a00,\n0x03199c31,\n0x998c7f80,\n0xc00c0303,\n0x630300c0,\n0x0cc0018c,\n0xc7f1fc7f,\n0xf1fc7f1f,\n0xfc000c67,\n0x7f1fc7f1,\n0x006330cc,\n0x0500927f,\n0x0000003f,\n0x008f0fc0,\n0x319c602a,\n0x8003199c,\n0x03998c7f,\n0xc0c00c03,\n0x8c630300,\n0x7f0cc001,\n0x1fc7f1fc,\n0x67f1fc7f,\n0xf1fc000c,\n0xcc7f1fc7,\n0x7f006330,\n0x3f050092,\n0xc0000000,\n0x2a008f0f,\n0xee318060,\n0x73800318,\n0x038370f8,\n0x83e07c3e,\n0x00fc3e03,\n0xcc731fe0,\n0x731cc731,\n0x0cc731cc,\n0xc731cc00,\n0xe078731c,\n0x92730061,\n0x003f0500,\n0x0fc00000,\n0x602a008f,\n0x18ee3180,\n0xf8738003,\n0x3e038370,\n0x0383e07c,\n0xe000fc3e,\n0x31cc731f,\n0xcc731cc7,\n0x000cc731,\n0x1cc731cc,\n0x61e07873,\n0x00927300,\n0x00003f05,\n0x8f0fc000,\n0x18c00100,\n0x80080083,\n0x03000061,\n0xc0000c00,\n0xc0160084,\n0x318c630c,\n0x8c6318c6,\n0x000d8631,\n0x18c6318c,\n0xc1e07863,\n0x00926318,\n0x00003f05,\n0x8f0fc000,\n0x18c00100,\n0x80080083,\n0x03000061,\n0xc0000c00,\n0xc0160084,\n0x318c630c,\n0x8c6318c6,\n0x000d8631,\n0x18c6318c,\n0xc1e07863,\n0x00926318,\n0x00003f05,\n0x8f0fc000,\n0x0f800100,\n0x80240083,\n0x03800040,\n0x80000803,\n0x00000300,\n0x3e0cc000,\n0x0f83e0f8,\n0x03e0f83e,\n0xe0f8000f,\n0x303e0f83,\n0x3e0f80c0,\n0x3f050092,\n0xc0000000,\n0x01008f0f,\n0x00830f80,\n0x00408024,\n0x08030380,\n0x03008000,\n0xc0000000,\n0xe0f83e0c,\n0xf83e0f83,\n0x000f03e0,\n0x0f83e0f8,\n0x80c0303e,\n0x00923e0f,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f4e,\n0x000fc000,\n0x0f800000,\n0xc3803c3e,\n0xe01e6f0c,\n0xbc0f8003,\n0x6f0781e1,\n0x0303e01e,\n0x3e000000,\n0x3f0f8078,\n0x078000fc,\n0x03803c3e,\n0xf0f86180,\n0x003e0fc6,\n0x381bc3e0,\n0x18c3e0e0,\n0x03e0e000,\n0x30f83e00,\n0x8c1e0e06,\n0x0c0f86f1,\n0x3f4e0084,\n0xc0000000,\n0x0000000f,\n0x3c3e0f80,\n0x6f0cc380,\n0x8003e01e,\n0x81e1bc0f,\n0xe01e6f07,\n0x00000303,\n0x80783e00,\n0x00fc3f0f,\n0x3c3e0780,\n0x61800380,\n0x0fc6f0f8,\n0xc3e0003e,\n0xe0e0381b,\n0xe00018c3,\n0x3e0003e0,\n0x0e0630f8,\n0x86f18c1e,\n0x00840c0f,\n0x00003f4e,\n0x000fc000,\n0x18c00000,\n0xc4c01863,\n0x300c318c,\n0xc6030000,\n0x318300c0,\n0x0300300c,\n0x0c000000,\n0x6000c030,\n0x03000180,\n0x04c01803,\n0x198c6180,\n0x00031803,\n0x4c0c6630,\n0x18c63130,\n0x06313000,\n0x318c6300,\n0x8c0c1306,\n0x0c00c319,\n0x3f4e0084,\n0xc0000000,\n0x0000000f,\n0x186318c0,\n0x318cc4c0,\n0x0000300c,\n0x00c0c603,\n0x300c3183,\n0x00000300,\n0xc0300c00,\n0x01806000,\n0x18030300,\n0x618004c0,\n0x1803198c,\n0x66300003,\n0x31304c0c,\n0x300018c6,\n0x63000631,\n0x1306318c,\n0xc3198c0c,\n0x00840c00,\n0x00003f05,\n0x830fc000,\n0x631c1300,\n0x1b60c018,\n0x07f18c3e,\n0xc0f80300,\n0x8c318300,\n0x008307f1,\n0xc6300c2b,\n0x00f83e1f,\n0x187f0300,\n0x6d8000c0,\n0x0f83198c,\n0x6630007f,\n0x30300c0c,\n0x300018c6,\n0x03000630,\n0x0306318c,\n0xc3198c0c,\n0x0500851f,\n0x0000003f,\n0x00830fc0,\n0x18631c13,\n0x3e1b60c0,\n0x0007f18c,\n0x00c0f803,\n0xf18c3183,\n0x2b008307,\n0x1fc6300c,\n0x0000f83e,\n0xc0187f03,\n0x8c6d8000,\n0x7f0f8319,\n0x0c663000,\n0xc630300c,\n0x30300018,\n0x8c030006,\n0x0c030631,\n0x1fc3198c,\n0x3f050085,\n0xc0000000,\n0x1300830f,\n0xc03c6307,\n0x9c301b60,\n0x1f000631,\n0x8300c0c0,\n0x06319c31,\n0xfc2b0083,\n0x0318c670,\n0x0300000c,\n0x00c03c63,\n0x198c7b80,\n0x006300c3,\n0x0c0c6670,\n0x18c63030,\n0x06303000,\n0x318c6300,\n0x8c0c0306,\n0x8518c319,\n0x003f0500,\n0x0fc00000,\n0x07130083,\n0x60c03c63,\n0x319c301b,\n0xc01f0006,\n0x318300c0,\n0x8306319c,\n0x70fc2b00,\n0x0c0318c6,\n0x63030000,\n0x8000c03c,\n0xc3198c7b,\n0x70006300,\n0x300c0c66,\n0x0018c630,\n0x00063030,\n0x06318c63,\n0x198c0c03,\n0x008518c3,\n0x00003f1d,\n0x000fc000,\n0x01c00000,\n0x63e0183e,\n0xe0ee1f18,\n0x7c030003,\n0x318300e0,\n0x8303e0ee,\n0xb98c2b00,\n0xf87e0f83,\n0x3e030001,\n0x8003e018,\n0x8318f831,\n0xb0003e1f,\n0xf83e0c63,\n0x000fc3e0,\n0x0003e0f8,\n0x83f0f83e,\n0x18fc0e0f,\n0x00850f83,\n0x00003f1d,\n0x000fc000,\n0x01c00000,\n0x63e0183e,\n0xe0ee1f18,\n0x7c030003,\n0x318300e0,\n0x8303e0ee,\n0xb98c2b00,\n0xf87e0f83,\n0x3e030001,\n0x8003e018,\n0x8318f831,\n0xb0003e1f,\n0xf83e0c63,\n0x000fc3e0,\n0x0003e0f8,\n0x83f0f83e,\n0x18fc0e0f,\n0x00850f83,\n0x00003f0d,\n0x000fc000,\n0x18c00000,\n0x86c19800,\n0x00630400,\n0x87030000,\n0x018c0100,\n0x03030085,\n0x88c19800,\n0x00300400,\n0x83300c00,\n0x86300000,\n0x8a030000,\n0x003f0d00,\n0x0fc00000,\n0xc0000000,\n0xc1980018,\n0x63040086,\n0x03000000,\n0x8c010087,\n0x03008501,\n0xc1980003,\n0x30040088,\n0x300c0000,\n0x30000083,\n0x03000086,\n0x3f0d008a,\n0xc0000000,\n0x0000000f,\n0xf0000f80,\n0x05008580,\n0xc0007f80,\n0x00870380,\n0x0085fe00,\n0x00038004,\n0x008880f0,\n0x00003804,\n0x00832008,\n0x00862000,\n0x890c0201,\n0x003f0d00,\n0x0fc00000,\n0x80000000,\n0x80f0000f,\n0x80050085,\n0x80c0007f,\n0x00008703,\n0x040085fe,\n0xf0000380,\n0x04008880,\n0x08000038,\n0x00008320,\n0x01008620,\n0x00890c02,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f05,\n0xcd0fc000,\n0x003f0500,\n0x0fc00000,\n0x3f0500cd,\n0xc0000000,\n0x0500cd0f,\n0x0000003f,\n0x00cd0fc0,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00003f04,\n0xffcec000,\n0x00ff3f00,\n0x00ff00ff,\n0x00ce00ff\n);\n\nconst int rle_len_bytes = rle.length() << 2;\n\nint get_rle_byte( in int byte_index )\n{\n\tint long_val = rle[ byte_index >> 2 ];\n\treturn ( long_val >> ( ( byte_index & 0x03 ) << 3 ) ) & 0xff;\n}\n\nint get_uncompr_byte( in int byte_index )\n{\n\tint rle_index = 0;\n\tint cur_byte_index = 0;\n\twhile( rle_index < rle_len_bytes )\n\t{\n\t\tint cur_rle_byte = get_rle_byte( rle_index );\n\t\tbool is_sequence = int( cur_rle_byte & 0x80 ) == 0;\n\t\tint count = ( cur_rle_byte & 0x7f ) + 1;\n\n\t\tif( byte_index >= cur_byte_index && byte_index < cur_byte_index + count )\n\t\t{\n\t\t\tif( is_sequence )\n\t\t\t{\n\t\t\t\treturn get_rle_byte( rle_index + 1 + ( byte_index - cur_byte_index ) );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn get_rle_byte( rle_index + 1 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif( is_sequence )\n\t\t\t{\n\t\t\t\trle_index += count + 1;\n\t\t\t\tcur_byte_index += count;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trle_index += 2;\n\t\t\t\tcur_byte_index += count;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 0;\n}\n\nint getPaletteIndexXY( in ivec2 fetch_pos )\n{\n\tint palette_index = 0;\n\tif( fetch_pos.x >= 0 && fetch_pos.y >= 0\n\t\t&& fetch_pos.x < int( bitmap_size.x ) && fetch_pos.y < int( bitmap_size.y ) )\n\t{\n\t\tint uncompr_byte_index = fetch_pos.y * ( int( bitmap_size.x ) >> 3 )\n\t\t\t+ ( fetch_pos.x >> 3);\n\t\tint uncompr_byte = get_uncompr_byte( uncompr_byte_index );\n\n\t\tint bit_index = fetch_pos.x & 0x07;\n\t\tpalette_index = ( uncompr_byte >> bit_index ) & 1;\n\t}\n\treturn palette_index;\n}\n\n\nint getPaletteIndex( in vec2 uv )\n{\n\tint palette_index = 0;\n\tivec2 fetch_pos = ivec2( uv * bitmap_size );\n\tpalette_index = getPaletteIndexXY( fetch_pos );\n\treturn palette_index;\n}\n\nvec4 getColorFromPalette( in int palette_index )\n{\n\tint int_color = palette[ palette_index ];\n\treturn vec4( float( int_color & 0xff ) / 255.0,\n\t\t\t\tfloat( ( int_color >> 8 ) & 0xff) / 255.0,\n\t\t\t\tfloat( ( int_color >> 16 ) & 0xff) / 255.0,\n\t\t\t\t0 );\n}\n\nvec4 getBitmapColor( in vec2 uv )\n{\n\treturn getColorFromPalette( getPaletteIndex( uv ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / bitmap_size;\n\tfragColor = getBitmapColor( uv );\n}\n\n","name":"Image","description":"","type":"image"}]}