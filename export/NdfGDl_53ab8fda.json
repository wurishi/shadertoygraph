{"ver":"0.1","info":{"id":"NdfGDl","date":"1616696759","viewed":707,"name":"Trigochiselled shaft descent","username":"evvvvil","description":"Trigochiselled shaft descent - Result of an improvised live coding session on Twitch\nLIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time:\nhttps://www.twitch.tv/evvvvil_","likes":29,"published":1,"flags":0,"usePreview":0,"tags":["texture","lines","demoscene","light","fog","tower","plane","organic","scifi","boolean","point","cut","architecture","vertical","inside","descent","techy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Trigochiselled shaft descent - Result of an improvised live coding session on Twitch\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 20:00 Uk time: \n// https://www.twitch.tv/evvvvil_\n\n// \"You've always been the same, even at school. Nothing but books, learning, education...\n// - that's why you're no good at snooker.\" - Del Boy\n\nvec2 z,v,vv,e=vec2(.00035,-.00035);float tt,b,bb,g=0.,gg=0.,tnoi,res=1.;vec3 bp,pp,rd,fo,lp,po,op,no,al,ld,vcp;\nfloat bo(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nfloat smin(float a,float b,float k){float h=max(k-abs(a-b),0.);return min(a,b)-h*h*.25/k;}\nfloat smax(float a,float b,float k){float h=max(k-abs(-a-b),0.);return max(-a,b)+h*h*.25/k;}\nvec4 texNoise(vec2 uv,sampler2D tex ){ float f = 0.; f+=texture(tex, uv*.125).r*.5; f+=texture(tex,uv*.25).r*.25;\n                       f+=texture(tex,uv*.5).r*.125; f+=texture(tex,uv*1.).r*.125; f=pow(f,1.2);return vec4(f*.45+.05);}\nvec2 mp( vec3 p )\n{\n  op=p;p.y=mod(p.y-tt*2.,20.)-10.;  \n  vec2 h,t=vec2(bo(p,vec3(3,20,3)),6); //white box\n  vec3 cp=p+vec3(0.,0.0,.3);  \n  t.x=max(t.x,-(length(cp.xz)-3.0)); //inner white cylinder\n  h=vec2(bo(p,vec3(3.05,20,3.05)),3); //black box  \n  h.x=max(h.x,-(length(cp.xz)-3.0));\n  t.x=abs(abs(t.x)-.5)-.2; //onion \n  h.x=abs(abs(h.x)-.5)-.3;\n  vcp=p; //cut position\n  vcp.y=abs(abs(abs(p.y)-10.)-4.)-2.;  //first horizontal cut  \n  t.x=max(t.x,min(vcp.y,p.z+1.2)); \n  h.x=max(h.x,min(vcp.y+.2,p.z+1.4)); \n  vcp.yz*=r2(0.785);\n  t.x=max(t.x,-(abs(abs(vcp.y+1.)-.4)-.1)); \n  t.x=max(t.x,vcp.y-1.5);  \n  h.x=max(h.x,-(abs(abs(vcp.y+1.)-.4)-.3)); \n  h.x=max(h.x,vcp.y-1.3); \n  bp=op+vec3(0.,bb,.3);  \n  float glo=length(abs(bp)-vec3(0,2.,0.))-.5;   //platform\n  t.x=min(t.x,max(length(abs(bp.xz)-.75)-.1,abs(bp.y)-1.));  \n  float glo2=max(abs(length(bp.xz)-1.)-.5,abs(abs(bp.y)-1.5)-.2);\n  glo=min(glo,glo2);\n  g+=0.1/(0.1+glo*glo*40.);\n  t.x=min(t.x,glo);  \n  t=t.x<h.x?t:h;   \n  h=vec2(length(abs(p.xz)-3.)-0.15,7);  //shaft edge cylinders\n  h.x=min(h.x,max(abs(length(bp.xz)-1.)-.4,abs(abs(bp.y)-1.5)-.5));  \n  t=t.x<h.x?t:h;    \n  vec3 mop=op+vec3(0,-tt*2.,0);\n  tnoi=texNoise(mop.xy*.06,iChannel0).r*1.2;\n  vec3 tp=op-vec3(0,0,12);  \n  b=sin(op.y-tt*2.)+sin(op.x*.5);  \n  h=vec2(abs(length(tp.xz)-22.+tnoi+b)-.2,5);  //main tunnel cylinder    \n  h.x=max(abs(h.x)-2.,abs(p.y)-100.);    \n  vec3 prp=vec3(atan(tp.x,tp.z)*3.142*5.,op.y-tt*2.,length(tp.xz)-19.5+b); //projected position\n  prp.xy=mod(prp.xy,5.)-2.5;\n  h.x=smin(h.x,length(prp.yz)-1.-sin(mop.x)*.3+tnoi,1.2) ;\n  h.x=smin(h.x,length(abs(prp.yz)-vec2(1.,0))-.1-sin(prp.x*10.0)*.1-tnoi,.5) ;  \n  float tun=h.x+1.;\n  h.x=smax((abs(prp.y)-.1),h.x,.5);\n  pp=op+vec3(0,0,-13);pp.xz=abs(pp.xz)-15.+b;\n  h.x=smin(h.x,length(pp.xz)-2.0-sin(mop.y*.5),3.); //edges bits    \n  tun=abs(tun)-.2; \n  tun=max(tun,abs(p.y)-100.);\n  g+=0.1/(0.1+tun*tun*4.);\n  h.x=min(h.x,tun);h.x*=0.6;\n  t=t.x<h.x?t:h;\n  return t;\n}\nvec2 tr( vec3 ro,vec3 rd)\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x);\n    if(h.x<.0001||t.x>65.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>65.) t.y=0.;\n\treturn t;\n}\n#define a(d) clamp(mp(po+no*d).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d).x/d)\nvec3 lit(float da,float atn){    \n    ld=normalize(lp-po);\n    float dif=da*max(0.,dot(no,ld)),\n    fr=pow(1.+dot(no,ld),4.),\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),40.),\n    attn=1.-pow(min(1.,length(lp-po)/atn),4.0); \n    return attn*mix(sp+al*(a(.1)+.2)*(dif+s(.5)),fo,min(fr,.5)); \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 vv,uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vv=uv;uv-=0.5;vv*=1.-vv;uv/=vec2(iResolution.y/iResolution.x,1);\n  tt=mod(iTime,62.83)+23.6;\n  bb=-40.+smoothstep(0.,1.,smoothstep(0.,1.,sin(tt*.2)*.5+.5))*80.;\n  b=ceil(cos(tt*.2));\n  vec3 ro=mix(vec3(-9.,00,6.+sin(tt*.2)*4.),vec3(sin(tt*.2)*12.,-bb-sin(bb*.05)*10.,5.0),b),\n  cw=normalize(vec3(0.,mix(-bb*.2,-bb,b),1)-ro),\n  cu=normalize(cross(cw,vec3(0,1,0))),cv=normalize(cross(cu,cw)),co;\n  rd=mat3(cu,cv,cw)*normalize(vec3(uv,.55));\n  co=fo=vec3(.1);\n  z=tr(ro,rd);\n  if(z.y>0.){\n    po=ro+rd*z.x;\n    no=normalize(e.xyy*mp(po+e.xyy).x+e.yyx*mp(po+e.yyx).x+e.yxy*mp(po+e.yxy).x+e.xxx*mp(po+e.xxx).x);    \n    al=mix(vec3(.5,.4,.3),vec3(.2,.2,.2),tnoi*5.0);\n    if(z.y<5.) {\n      v=vcp.yz; \n      for(int i=0;i<4;i++){\n        v=abs(v)-.3;\n        v*=r2(-.785); v*=1.22;\n        float per=abs(sin(v.x))-.1+clamp(sin(v.y*2.),-.1,.1)*.5;\n        res=min(res,ceil(per));\n        g+=.25/(0.1+(per*per)*(20.-18.9*sin(uv.y*1.5+tt*2.)));  \n      }\n      al=vec3(1.-res);\n    }\n    if(z.y>5.) al=vec3(0.4,.5,.7);\n    if(z.y>6.) al=vec3(0.);\n    lp=vec3(0,-bb,0);    \n    co=lit(3.,10.);    \n    lp=ro;\n    co+=.75*lit(2.,15.);      \n    co=mix(fo,co,exp(-.00003*z.x*z.x*z.x));    \n  }  \n  co=mix(co+g*.2*vec3(.1,.2,.7),fo,min(1.,length(ro.y-op.y)*.02));      \n  fragColor = vec4(pow(co*pow(vv.x*vv.y*15.0,0.25),vec3(.65)),1);\n}","name":"Image","description":"","type":"image"}]}