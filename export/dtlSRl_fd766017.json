{"ver":"0.1","info":{"id":"dtlSRl","date":"1675228279","viewed":459,"name":" starfield -simple","username":"tve","description":"starfield","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["starfield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//based on this tutorial https://www.youtube.com/watch?v=rvDo9LvfoVE\n\n#define NLAYERS 128.0\n\nfloat hash(vec2 p) {\n    p = fract(p * vec2(sin(123.124), sin(928.0123)));\n    p += dot(p,p+154.23);\n    return fract(p.x*p.y);\n}\n\nvec3 draw_star(vec2 uv, float intensity) {\n    \n    float d = length(uv);\n    vec3 col = vec3(0);\n    col += 0.3/pow(d,2.0);\n    col.b *= 4.0;\n    col *= intensity;\n    col *= smoothstep(0.5, 0.2, d);\n    return col;\n}\n\nvec3 star_field(vec2 uv, float intensity) {\n   vec2 gv = fract(uv)-0.5;\n   vec2 id = floor(uv);\n   \n   vec3 col = vec3(0);\n   \n   for(int y=-1;y<=1;y++) {\n     for(int x=-1;x<=1;x++) {\n       vec2 offs = vec2(x,y);\n       float n = hash(id+offs);\n   \n       col += draw_star(gv-offs-vec2(n-0.5,fract(n*34.0))+0.5, intensity);\n           \n     }\n   }\n   return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n   \n    \n   vec3 col = vec3(0);\n      \n      \n   for( float i=0.0;i<1.0;i+= 1.0/NLAYERS) {\n       float t = iTime*0.1;\n       float depth = fract(i+t);\n       float scale = mix(10., 0.1, depth);\n       col += star_field(uv*scale+i*4000.0, pow(i*.001, 1.0+i*0.5) );\n   }\n   \n    \n   fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}