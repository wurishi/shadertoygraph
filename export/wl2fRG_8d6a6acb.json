{"ver":"0.1","info":{"id":"wl2fRG","date":"1599250291","viewed":53,"name":"Sweater","username":"Jakim","description":"This is digitalization of a pattern from my sweater.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["ellipse","chessboard","sweater"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 black = vec3(0.0);\nconst vec3 white = vec3(1.0);\nconst vec3 color[3] = vec3[3](vec3(0.0,1.0,1.0), vec3(1.0,0.0,1.0), vec3(1.0,1.0,0.0));\n\nconst float subX = 2.0 * 8.89;\nconst float subY = 2.0 * 5.0;\n\nconst float lX = 96.0;\nconst float lY = 11.8;\n\nconst float fX = 1.0 / lX;\nconst float fY = 1.0 / lY;\n\nconst float rows = 4.0;\n\nconst float a = 0.000006;\nconst float b = 0.006;\n\nconst float teX = 0.025;\nconst float teY = 0.040;\n\nconst float tcX = 0.75;\nconst float tcY = 0.50;\n\nconst float tX = 0.02;\nconst float tY = 0.02;\n\nconst float eps = 0.25;\n\nconst float mX = 0.3;\nconst float mY = 0.5;\n\nconst float offX = 0.25;\nconst float offY = 0.25;\n\nfloat modulo(float a, float m)\n{\n\treturn sign(m - mod(a, 2.0 * m));    \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 col;\n    \n    float oX = offX + tX * iTime;\n    float oY = offY + tY * iTime;\n    \n    if (modulo(uv.x + oX, mX) * modulo(uv.y + oY, mY) < 0.0)\n    {\n    \tfloat f = modulo(uv.x * subX + tcX * iTime, 1.0) * modulo(uv.y * subY + tcY * iTime, 1.0);\n    \tcol = f * white + (1.0 - f) * black;\n    }\n    else\n    {\n    \tint iStart = -int(teX * iTime * lX);\n    \tint jStart = -int(teY * iTime * rows);\n\n    \tfor (int j = jStart - 1 - int(rows); j <= int(rows) + jStart + 1; ++j)\n    \t{\n        \tfloat t = float(j);   \n    \t\tfor (int i = iStart - 1; i <= int(lX) + iStart + 1; ++i)\n    \t\t{\n        \t\tfloat s = float(i);\n            \tfloat x = uv.x - teX * iTime - s * fX;\n            \tfloat y = uv.y - teY * iTime - t / rows - mod(s * fY, 1.0);\n            \n            \tfloat elip = x * x / a + y * y / b;\n            \tfloat diff = elip - 1.0;\n\t\t\t\tif (diff < eps)\n    \t\t\t{\n        \t\t\tcol = color[(i - 3 * iStart) % 3] * min(1.0, 1.0 - diff / eps);\n            \t}\n        \t}\n    \t}\n    }\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}