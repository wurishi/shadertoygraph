{"ver":"0.1","info":{"id":"4sGXWh","date":"1463948027","viewed":245,"name":"Night Vision Goggles","username":"wesleyx86","description":"Night Vision Goggles!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","realistic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getRed ( sampler2D sampler, vec2 uv ) {return texture(sampler, uv).r;}\nfloat getGreen ( sampler2D sampler, vec2 uv ) {return texture(sampler, uv).g;}\nfloat getBlue ( sampler2D sampler, vec2 uv ) {return texture(sampler, uv).b;}\n\nfloat randomF()\n{\n    float seed = float(iFrame);\n    for (int i = 0; i < 5; i++)\n    {\n        seed = mod(seed * 16807.0, 2147483647.0);\n        return seed / 2147483647.0;\n    }\n}\n\nvec4 shiftImageAndPixelate ( sampler2D img, vec2 fc, float shift, float size)\n{\n    // RGB Split and Pixelate\n    vec4 outputColor = texture(img, fc.xy/iResolution.xy);\n\n    bool top = fc.y <= shift - 1.;\n    bool left = fc.x <= shift - 1.;\n    bool right = fc.x >= iResolution.x - shift + 1.;\n    bool bottom = fc.y >= iResolution.y - shift + 1.;\n    if (top)\n    {\n        outputColor.r *= getRed(img, (vec2(fc.x, fc.y + shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n    }\n    else if (left)\n    {\n        outputColor.r = getRed(img, (vec2(fc.x, fc.y + shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n        outputColor.g = getGreen(img, (vec2(fc.x + shift, fc.y - shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n    }\n    else if (right)\n    {\n        outputColor.r = getRed(img, (vec2(fc.x, fc.y + shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n        outputColor.b = getBlue(img, (vec2(fc.x - shift, fc.y - shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n    }\n    else if (bottom)\n    {\n        outputColor.g = getGreen(img, (vec2(fc.x + shift, fc.y - shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n        outputColor.b = getBlue(img, (vec2(fc.x - shift, fc.y - shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n    }\n    else\n    {\n        outputColor.r = getRed(img, (vec2(fc.x, fc.y + shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n        outputColor.g = getGreen(img, (vec2(fc.x + shift, fc.y - shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n        outputColor.b = getBlue(img, (vec2(fc.x - shift, fc.y - shift) - vec2(mod(fc.x, size), mod(fc.y, size))) / iResolution.xy);\n    }\n    \n    \n    // Night Vision\n    outputColor = vec4(outputColor.r * 0.1, (outputColor.g * outputColor.g * outputColor.g) * 0.9, outputColor.b * 0.1, 1.0);\n    \n    // Brightness Correction\n    outputColor.g = pow(outputColor.g, 1.1 / 3.0);\n    \n    // Scan Lines\n    if (floor(mod(fc.y, 5.0)) == 0.0)\n    {\n        outputColor *= 0.625;\n    }\n    else if (floor(mod(fc.y, 5.0)) == 2.0)\n    {\n        outputColor *= 0.75;\n    }\n    else if (floor(mod(fc.y, 5.0)) == 0.0)\n    {\n        outputColor *= 0.875;\n    }\n    \n    \n    // Vignette\n    vec2 centerPosition = (fc.xy / iResolution.xy) - vec2(0.5);\n    float len = length(centerPosition);\n\tfloat vignette = smoothstep(0.8, 0.125, len);    \n    outputColor.rgb = mix(outputColor.rgb, outputColor.rgb * vignette, 0.5);\n    \n    // Finished!\n    return outputColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Original\n    // fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n    \n    // Filtered\n    fragColor = shiftImageAndPixelate(iChannel0, fragCoord, 2.0, 5.0);\n}\n","name":"Image","description":"","type":"image"}]}