{"ver":"0.1","info":{"id":"4sK3WG","date":"1456182732","viewed":170,"name":"wiggly-music-circ","username":"mds2","description":"Inspired by https://beesandbombs.tumblr.com/post/95809207604/hey-dribbblers-follow-me-on-dribbble\n\nBut, unlike the original, this one responds to music.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["music","colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"highp float angleDiff(highp float a, highp float b)\n{ return atan(cos(b-a), sin(b-a)); // ugh, too much trig per fragment.\n}\n\nhighp vec3 angleDiff(highp vec3 a, highp vec3 b)\n{ return atan(cos(b-a), sin(b-a)); // ugh, too much trig per fragment.\n}\n\nconst float PI = 3.141592654;\n\nvec3 diverge(highp float center, highp float maxdiff)\n{ return vec3(center) + maxdiff * sin(0.5 * vec3(0.8 * iTime,\n                                               1.0 * iTime,\n                                               1.25 * iTime));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    highp vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) /\n        max(iResolution.x, iResolution.y);\n    highp float dist = length(uv);\n    highp float angle = atan(uv.y, uv.x);\n    \n    highp vec3 wiggleCenter = mod(diverge(iTime, 1.0), 2.0 * PI);\n    \n    highp vec3 angleDiffs = angleDiff(vec3(angle), wiggleCenter);\n    vec3 wiggleMag = vec3(1.0) - smoothstep(0.0, 0.8,\n                                       abs(angleDiffs) + 1.0 -\n                                            2.5 * texture(iChannel0, vec2(0.0)).x);\n    highp vec3 wiggleAngle = vec3(angle) -\n        0.5 * texture(iChannel0, vec2(0.5)).x -\n        vec3(0.13, 0.1, 0.09) * iTime;\n    \n    wiggleAngle = wiggleAngle * (1.0 + 0.01 * texture(iChannel0, vec2(0.25)).x);\n    \n    highp vec3 rad = vec3(0.5) +\n        wiggleMag* 0.1 * sin(5. * wiggleAngle);\n    \n    highp vec3 fakeDeriv = wiggleMag * cos(wiggleAngle);\n    highp vec3 intensity =\n        vec3(1.0) - smoothstep(0.1, 0.3, abs(3.0 * dist - rad)\n                                /( sqrt(1.0 + fakeDeriv * fakeDeriv)*\n                               (0.05)));\n    \n    \n    fragColor = vec4(vec3(intensity),1.0);\n}","name":"Image","description":"","type":"image"}]}