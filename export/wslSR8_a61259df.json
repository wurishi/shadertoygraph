{"ver":"0.1","info":{"id":"wslSR8","date":"1592412574","viewed":73,"name":"snake color","username":"mxm","description":"snake color","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["snakecolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv.x -= iResolution.x/iResolution.y/2.-.5;\n    \n    uv = rotateUV(uv, iTime/2.);\n    //uv += (sin(iTime*10.) / 50.) + cos(iTime)/10.;\n   \t//uv.y += cos(iTime*2.) / 5.;\n    \n    vec3 col = texture(iChannel0,uv).xyz;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = texture(iChannel0,uv).xyz;\n    col *= .99;\n    \n    //uv.x *= iResolution.x/iResolution.y;\n    //uv.x -= iResolution.x/iResolution.y/2.-.5;\n\n    float speed = iTime * 10.;\n    \n    //vec2 position = iMouse;\n    vec2 position = vec2(iResolution.x/2., iResolution.y/2.);\n    \n    \n    //position.x += sin(speed) * 5. * 100. * cos(speed / 10.) ;\n    //position.y += cos(speed  + speed/2.) * sin(speed) * 100.;\n    \n    position.x += sin(speed) * 170.;\n    position.y += cos(speed) * sin(speed / 10.) * 100.;\n    \n    \n    float dotSize = .01;\n    \n    col += vec3(1.-smoothstep(dotSize, dotSize+0.01,distance(vec2(position.x/iResolution.x, position.y/iResolution.y), uv)));\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}