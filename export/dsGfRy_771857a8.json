{"ver":"0.1","info":{"id":"dsGfRy","date":"1698329786","viewed":25,"name":"manually swap animations","username":"chenxianming","description":"manually swap animations","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["animations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define PI 3.1415\n#define rot( r ) mat2(cos(r), sin(r), -sin(r), cos(r) )\n#define m max\n#define n min\n#define T( s ) fract( iTime * s ) * PI * 4.\n// this is texture\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat smax(float a, float b, float c) {\n    return -smin(-a, -b, c);\n}\n\nfloat cu( vec2 p, float s ){\n    return length( p ) - s;\n}\n\nfloat tex( vec2 u, float detal ){\n    float d = .1;\n\n    for( float i = -2.; i < 3.; i++ ){\n        d = smin(\n            d,\n            cu( u + vec2( cos( i - detal * i ) * i/5., sin( i - detal * i ) * i/5. ), i/50. ),\n            .1\n        );\n    }\n    \n    return d;\n}\n// textureEND\n\nfloat a( vec3 p, vec3 u ){\n    return m(\n        m(\n            abs( p.x ) - u.x,\n            abs( p.y ) - u.y\n        ),\n        abs( p.z ) - u.z\n    );\n}\n\nfloat h( vec3 p ){\n    return min(\n    \n        min(\n            a( p - vec3( .5, 0., 0.05 ), vec3( .05, .05, .1 ) ),\n            a( p - vec3( .4, 0., 0. ), vec3( .1, .05, .05 ) )\n        ),\n        a( p - vec3( .8, 0., 0.1 ), vec3( .3, .05, .05 ) )\n    \n    );\n}\n\nfloat df( vec3 p ){\n    return min(\n        a( p, vec3( .3, .3, .3 ) ),\n        h( p )\n    );\n}\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = ( V * 2. - I.xy ) / I.y;\n    \n    vec3 c, p, o = vec3( 0., 0., -1. ), r = vec3( u, 1. );\n    c += vec3( .3,.2,.2 );\n    float t, d, i;\n    for( ; i < 64.; i++ )\n        p = o + r * t,\n        p.yz *= rot( iTime * PI * 2. ),\n        d = df( p ),\n        t += d;\n    \n    if( d < 1e-3 )\n        c = vec3( .1 ),\n        c += ( df( p ) != h( p ) ) ? max( l( p ).z, .0 ) * tex( p.xy, iTime / PI ) : 0.,\n        c += ( df( p ) != h( p ) ) ? max( -l( p ).z, .0 ) * tex( p.xy, iTime / PI + .1 ) : 0.;\n\n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}