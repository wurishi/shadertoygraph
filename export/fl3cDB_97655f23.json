{"ver":"0.1","info":{"id":"fl3cDB","date":"1660552358","viewed":94,"name":"autogen 70","username":"asynth","description":"Generated by a program written in Rust.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.5683, 0.3656), vec3(uv.x).xy);\n\treturn vec3(uv.x);\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = repeat_3(uv, 0.5944);\n\treturn node_1(uv);\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.9058, 0.0844), vec3(atan(uv.y, uv.x)).xy);\n\tvec3 b1 = vec3(0.5001, 0.4540, 0.0604);\n\tvec3 b2 = vec3(0.2894, 0.3851, 0.5000);\n\tvec3 b3 = noise(uv, vec2(1.039539, 0.7068556), 0.563190);\n\treturn quant(mod(pthresh(0.8263, b1, b2, vec3(atan(uv.y, uv.x))), vec3(uv.x)), b3);\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = repeat_0(uv, 0.4761);\n\tvec3 a1 = mix2(uv, vec3(0.9137, 0.7836, 0.8557), vec3(0.9552, 0.8851, 0.6497), vec3(0.6313, 0.0855, 0.8029), vec3(0.6863, 0.9114, 0.7096));\n\tvec3 a2 = sin(vec3(length(uv))*5.6511 + 0.1609 + iTime*0.1967);\n\tvec3 a3 = sin(mix(a1, max(a2, vec3(atan(uv.y, uv.x))), vec3(atan(uv.y, uv.x)))*4.8253 + 0.3339 + iTime*0.0610);\n\treturn (node_3(uv) / a3);\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = repeat_3(uv, 0.2987);\n\treturn node_4(uv);\n}\n\nvec3 node_6(vec2 uv) {\n\tvec3 a1 = vec3(0.2107, 0.6456, 0.1743);\n\tvec3 a2 = noise(uv, vec2(0.17745155, 0.11492822), 0.546064);\n\tvec3 a3 = mix2(uv, vec3(0.8112, 0.3288, 0.5792), vec3(0.6122, 0.9500, 0.8536), vec3(0.8371, 0.2450, 0.8459), vec3(0.5154, 0.4562, 0.5693));\n\tuv = xywarp(uv, vec2(0.8479, 0.4818), abs(sigmoid(mod((-max(a1, a2)), (vec3(atan(uv.y, uv.x)) + abs(a3))))).xy);\n\treturn quant((vec3(length(uv)) + (-vec3(length(uv)))), bi(vec3(atan(uv.y, uv.x))));\n}\n\nvec3 node_7(vec2 uv) {\n\tvec3 a1 = vec3(0.0688, 0.9638, 0.2039);\n\tuv = xywarp(uv, vec2(-0.8169, -0.2057), a1.xy);\n\tvec3 b1 = noise(uv, vec2(3.059535, 0.29096037), 0.248506);\n\treturn b1;\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = (mat2(1.0448,1.1563,1.2817,0.7162)*(uv-vec2(0.7329,-0.4113)+vec2(0.7329,-0.4113)));\n\treturn node_7(uv);\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = (mat2(0.9153,1.3266,1.1439,0.9285)*(uv-vec2(0.8854,0.6755)+vec2(0.8854,0.6755)));\n\treturn node_8(uv);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = (mat2(1.0801,1.3480,1.4133,1.1343)*(uv-vec2(0.2119,-0.7736)+vec2(0.2119,-0.7736)));\n\tvec3 a1 = mix2(uv, vec3(0.1921, 0.8799, 0.9768), vec3(0.1783, 0.8500, 0.9541), vec3(0.9835, 0.4561, 0.6190), vec3(0.2682, 0.7035, 0.7731));\n\tvec3 a2 = vec3(0.6899, 0.3071, 0.2175);\n\tvec3 a3 = mix2(uv, vec3(0.8629, 0.5871, 0.7244), vec3(0.6247, 0.9833, 0.3386), vec3(0.8398, 0.7955, 0.5164), vec3(0.2067, 0.6679, 0.0536));\n\treturn pthresh(0.7645, bi(sigmoid(uni(abs(a1)))), node_9(uv), pthresh(0.9611, quant(a2, vec3(length(uv))), vec3(atan(uv.y, uv.x)), a3));\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = (mat2(1.1516,1.2568,0.9867,-0.9087)*(uv-vec2(-0.6680,-0.4986)+vec2(-0.6680,-0.4986)));\n\treturn node_10(uv);\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = reflect_0(uv);\n\tvec3 a1 = well(sigmoid((-node_11(uv)))*5.6463 + 0.8268 + iTime*0.3876);\n\treturn a1;\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn node_12(uv);\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = (mat2(1.2637,1.0564,-0.8591,-0.8589)*(uv-vec2(0.3978,0.8401)+vec2(0.3978,0.8401)));\n\tvec3 a1 = mix2(uv, vec3(0.6347, 0.3935, 0.4356), vec3(0.9018, 0.0482, 0.6875), vec3(0.2041, 0.4837, 0.5292), vec3(0.2085, 0.9862, 0.9387));\n\treturn (vec3(length(uv)) + a1);\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = repeat_4(uv, 0.1365);\n\tvec3 a1 = tri(node_14(uv)*4.1789 + 0.0384 + iTime*0.3738);\n\treturn a1;\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = repeat_4(uv, 0.1456);\n\tvec3 a1 = noise(uv, vec2(0.28466356, 0.16622938), 0.420901);\n\treturn a1;\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = reflect_1(uv);\n\treturn (mod(max(node_16(uv), vec3(length(uv))), vec3(length(uv))) - quant(vec3(atan(uv.y, uv.x)), vec3(length(uv))));\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = (mat2(0.8926,-1.3170,1.2169,-0.8960)*(uv-vec2(0.1623,0.3335)+vec2(0.1623,0.3335)));\n\tvec3 a1 = noise(uv, vec2(1.5107601, 0.43887565), 0.205483);\n\tvec3 a2 = tri(a1*4.6199 + 0.1586 + iTime*0.2182);\n\treturn a2;\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = (mat2(0.8895,1.1642,0.9965,0.7176)*(uv-vec2(0.4714,-0.7217)+vec2(0.4714,-0.7217)));\n\treturn sq(node_18(uv));\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = repeat_3(uv, 0.3768);\n\treturn (-vec3(uv.x));\n}\n\nvec3 node_21(vec2 uv) {\n\tuv = (mat2(-1.3980,0.7811,1.3615,-0.7748)*(uv-vec2(0.0851,-0.8478)+vec2(0.0851,-0.8478)));\n\treturn bi(sq(min(node_20(uv), vec3(uv.x))));\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = repeat_1(uv, 0.4781);\n\treturn node_21(uv);\n}\n\nvec3 node_23(vec2 uv) {\n\tuv = reflect_1(uv);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_24(vec2 uv) {\n\tuv = repeat_3(uv, 0.1989);\n\treturn abs(vec3(uv.x));\n}\n\nvec3 node_25(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn node_24(uv);\n}\n\nvec3 node_26(vec2 uv) {\n\tuv = (mat2(-0.9955,1.0830,1.2875,-0.9497)*(uv-vec2(-0.8701,0.9288)+vec2(-0.8701,0.9288)));\n\treturn node_25(uv);\n}\n\nvec3 node_27(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = vec3(0.4365, 0.8290, 0.4547);\n\tvec3 a2 = mix2(uv, vec3(0.9496, 0.1773, 0.9289), vec3(0.3606, 0.1054, 0.7409), vec3(0.0491, 0.2706, 0.8277), vec3(0.8370, 0.3228, 0.9190));\n\tvec3 a3 = sin(mod((-(-mod(node_17(uv), a1))), a2)*4.5862 + 0.6083 + iTime*0.2884);\n\tvec3 a4 = noise(uv, vec2(1.0428778, 0.32304722), 0.517767);\n\tvec3 a5 = sin(a4*1.1490 + 0.3696 + iTime*0.1017);\n\tvec3 a6 = vec3(0.0620, 0.2748, 0.5687);\n\tvec3 a7 = tri(a6*1.6182 + 0.9831 + iTime*0.2164);\n\tvec3 a8 = well(bi((min(sq(bi(node_22(uv))), uni((a5 * uni(vec3(length(uv)))))) / mod(uni(vec3(atan(uv.y, uv.x))), pthresh(0.9530, vec3(length(uv)), a7, node_23(uv)))))*1.4328 + 0.4540 + iTime*0.1363);\n\tvec3 a9 = tri(bi(a8)*5.9643 + 0.6866 + iTime*0.1550);\n\tvec3 a10 = sin((a9 - mix(vec3(atan(uv.y, uv.x)), node_26(uv), vec3(length(uv))))*3.4465 + 0.7143 + iTime*0.2750);\n\treturn mix((a3 * vec3(atan(uv.y, uv.x))), node_19(uv), a10);\n}\n\nvec3 node_28(vec2 uv) {\n\tuv = reflect_0(uv);\n\tvec3 a1 = vec3(0.1622, 0.8340, 0.8585);\n\treturn quant(a1, vec3(uv.x));\n}\n\nvec3 node_29(vec2 uv) {\n\tuv = (mat2(-1.3826,0.7338,1.0446,1.2428)*(uv-vec2(0.4970,0.5615)+vec2(0.4970,0.5615)));\n\tvec3 a1 = vec3(0.6119, 0.1857, 0.0665);\n\tvec3 a2 = noise(uv, vec2(2.296848, 0.9797578), 0.773391);\n\tvec3 a3 = sin(a2*3.1497 + 0.1888 + iTime*0.2880);\n\tvec3 a4 = tri(abs(mod(sigmoid(a1), sigmoid(abs((-a3)))))*1.5319 + 0.5685 + iTime*0.0795);\n\tvec3 a5 = noise(uv, vec2(0.25336808, 0.39770555), 0.130321);\n\tvec3 a6 = noise(uv, vec2(2.9983966, 1.5385534), 0.925055);\n\tvec3 a7 = tri(node_13(uv)*2.7303 + 0.1144 + iTime*0.0627);\n\tvec3 a8 = tri(node_15(uv)*3.0282 + 0.2392 + iTime*0.0782);\n\tvec3 a9 = noise(uv, vec2(2.5674973, 0.15603362), 0.582597);\n\tvec3 a10 = mix2(uv, vec3(0.7164, 0.4683, 0.1133), vec3(0.8635, 0.0893, 0.6452), vec3(0.0319, 0.7592, 0.5195), vec3(0.4444, 0.3991, 0.9169));\n\tvec3 a11 = tri((a9 * min(a10, vec3(length(uv))))*1.3934 + 0.0739 + iTime*0.2027);\n\tvec3 a12 = sin(sq(mod((-node_27(uv)), node_28(uv)))*5.7084 + 0.2987 + iTime*0.2232);\n\treturn mix(min(sq(uni(vec3(atan(uv.y, uv.x)))), vec3(atan(uv.y, uv.x))), ((a4 * min(a5, a6)) * a7), max(min(vec3(uv.x), sq((a8 * (-mix(quant(vec3(atan(uv.y, uv.x)), vec3(atan(uv.y, uv.x))), a11, vec3(uv.x)))))), a12));\n}\n\nvec3 top(vec2 uv) {\n\tvec3 a1 = tri(uni(node_6(uv))*1.6939 + 0.8949 + iTime*0.3815);\n\tvec3 a2 = noise(uv, vec2(3.9833634, 2.6819687), 0.693419);\n\tvec3 a3 = noise(uv, vec2(0.90234494, 2.253194), 0.534527);\n\tvec3 a4 = vec3(0.0553, 0.5086, 0.3520);\n\treturn mod(sq(sigmoid(((node_2(uv) - node_5(uv)) - (a1 + quant(quant(vec3(uv.x), vec3(length(uv))), a2))))), uni(uni(quant(node_29(uv), (a3 + a4)))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}