{"ver":"0.1","info":{"id":"NddSRN","date":"1632766237","viewed":38,"name":"Kernels NT1","username":"yogo503","description":"For class","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 blur = mat3(.111);\n\nmat3 emboss = mat3(0,1,0,0,0,0,0,-1,0);\n\nmat3 edgeDetection = mat3 (-1,-1,-1,-1,8,-1,-1,-1,-1);\n\nmat3 gaussianBlur = mat3(1,2,1,2,4,2,1,2,1) * (1.0/16.0);\n\nvec3 aSample (const int x, const int y, vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy/iResolution.xy * iChannelResolution[0].xy;\n    uv = (uv + vec2(x, y))/iChannelResolution[0].xy;\n    return texture(iChannel0,uv).rgb;\n}\n\nvec3 aFilter(in vec2 fragCoord, mat3 kernel)\n{\n     vec3 sum;\n     for(int i =0;i < 3;i++)\n     {\n        for(int j = 0; j < 3; j++)\n        {\n            sum+= aSample(i-1, j-1, fragCoord) * kernel[i][j];\n        }\n     }\n \n     return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec3 col = aFilter(fragCoord,emboss) * vec3(2);\n    //vec3 col = aFilter(fragCoord,edgeDetection) * vec3(2);\n    vec3 col = aFilter(fragCoord,gaussianBlur);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}