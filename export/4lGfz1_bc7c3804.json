{"ver":"0.1","info":{"id":"4lGfz1","date":"1541740589","viewed":121,"name":"Buzzing noise","username":"ItsOnlyKatniss","description":"A buzzing noise made my multiplying asin(cos(t)) by itself several times.\nSorry if this is a bit loud. I think for me windows is trying to adjust the sound so it doesn't clip.","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float wave(float time) {\n    float t = 6.2831 * 100.0* time;\n    \n    float pi = 3.1415926;\n    \n    float f = asin(cos(t));\n    \n    int terms = int((1.0 + sin(time - pi / 2.0)) * 32.0);\n    terms = terms * 2 - 1;\n    terms += 5;\n    for(int i = 0; i < terms; i++) f *= asin(cos(t));\n    \n    return (f / float(terms * terms)) * float(terms) / 33.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0 * (fragCoord/iResolution.xy) - 1.0;\n\n    // Time varying pixel color\n    vec3 col = vec3(0);\n\t\n    float f = wave(iTime + uv.x / 100.0) / 10.0;\n    \n    float size = 1.0 / iResolution.y;\n    if(uv.y < f + size && uv.y > f - size) col = vec3(1);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp, float time ) {\n    float t = 6.2831 * 100.0* time;\n    \n    float pi = 3.1415926;\n    \n    float f = asin(cos(t));\n    \n    int terms = int((1.0 + sin(time - pi / 2.0)) * 32.0);\n    terms = terms * 2 - 1;\n    terms += 5;\n    for(int i = 0; i < terms; i++) f *= asin(cos(t));\n    \n    return vec2(f / float(terms * terms)) * float(terms) / 33.0;\n}","name":"Sound","description":"","type":"sound"}]}