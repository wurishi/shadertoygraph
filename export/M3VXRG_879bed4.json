{"ver":"0.1","info":{"id":"M3VXRG","date":"1720121479","viewed":33,"name":"Ryppyreikä4","username":"Sloveri","description":"ryppyreikä","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ryppyreik"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) +\n           (c - a) * u.y * (1.0 - u.x) +\n           (d - b) * u.x * u.y;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalisoidaan koordinaatit ja lisätään ajastin\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Pyöritetään ruutua\n    float time = iTime * 0.5; // Lisätään nopeutta\n    float angle = time * 0.3; // Hidastetaan pyörimistä\n    float s = sin(angle);\n    float c = cos(angle);\n    uv = mat2(c, -s, s, c) * uv;\n    \n    // Progressiivinen väri\n    float prog = sin(time) * 0.5 + 0.5;\n    \n    // Sumu\n    vec3 col = vec3(0.0);\n    float n = noise(uv * 3.0 + time * 2.0);\n    col += 0.3 * vec3(n, n * 0.5, n * 0.2);\n    \n    // Pyörteinen sumu\n    float r = length(uv);\n    float a = atan(uv.y, uv.x);\n    float f = 0.5 + 0.5 * cos(6.0 * (a + time) + r * 10.0 + noise(uv * 5.0) * 5.0);\n    col += vec3(f * 0.3, f * 0.2, f * 0.5);\n    \n    // Tähdet\n    for(int i = 0; i < 20; i++) { // Lisää tähtiä\n        vec2 starPos = vec2(fract(sin(float(i) * 43758.5453) * 0.1 + time), fract(sin(float(i) * 23421.6313) * 0.1 + time));\n        starPos = starPos * 2.0 - 1.0;\n        starPos.x *= iResolution.x / iResolution.y;\n        vec2 d = uv - starPos;\n        float star = 1.0 / length(d) * 0.03; // Pienennä tähtien kokoa\n        col += vec3(star * sin(time * 10.0) * 0.5 + 0.5);\n    }\n    \n    // Välkkyvät tähdet\n    float flicker = fract(sin(dot(uv.xy + time * 20.0, vec2(12.9898,78.233))) * 43758.5453); // Lisää nopeutta\n    col += 0.1 * vec3(flicker, flicker * 0.5, flicker * 0.2);\n    \n    // Plasmaefekti\n    float plasma = sin(uv.x * 10.0 + time * 2.0) * cos(uv.y * 10.0 + time * 2.0); // Lisää nopeutta\n    col += vec3(0.2, 0.1, 0.3) * plasma;\n    \n    // Morffautuva sumu\n    float morph = sin(time + r * 10.0) * 0.5 + 0.5;\n    col *= vec3(morph, morph * 0.8, morph * 1.2);\n    \n    // Satunnainen väri\n    vec3 randomColor = vec3(random(uv + time), random(uv + time + 1.0), random(uv + time + 2.0));\n    col += randomColor * 0.2;\n    \n    // Vilkkuvat värit\n    vec3 flickerColor = vec3(sin(time * 3.0), cos(time * 3.0), sin(time * 3.0 + 1.0));\n    col += flickerColor * 0.1;\n    \n    // Progressiivinen värin vaihto\n    col *= vec3(prog, 1.0 - prog, prog * 0.5 + 0.5);\n    \n    // Lopullinen väri\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}