{"ver":"0.1","info":{"id":"Mft3R4","date":"1711466865","viewed":257,"name":"GLSL Angle bug #77","username":"FabriceNeyret2","description":"windows bug\n- unrolling loop i or a works\n- using func S() instead of inlining works\n- k=.1 works\n- regular union ( i.e. commenting  - h*h/k/4. ) works","likes":4,"published":3,"flags":16,"usePreview":0,"tags":["metatron"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// acid test windows bug fork of \"metatron - golf + coloring\" by FabriceNeyret2. https://shadertoy.com/view/XX2SW1\n\n\nfloat k = .15;\n\nfloat S(float d, float l) {                          // smoothmin\n    float h = max( k - abs(d-l), 0.);\n    return min(d,l) - h*h/k/4.;               // no bug if just min(d,l)\n}\n\nvoid mainImage(out vec4 O, vec2 u)\n{\n    vec2 R = iResolution.xy,\n         U = ( 2.*u - R.xy ) / R.y;                  // normalized coordinates\n    vec3 p = vec3( 2.*U, 1); \n    \n    float d = 9., h, l;  \n    for( int i=0; i<2; i++) {                // no bug if unrolled\n        for( float a = 0.; a < 2.; a++ ) {   // no bug if unrolled\n            l = length ( p.yz -.5 );                // cylinder\n#if 0                                        // no bug if func\n            d = S(d,l);\n#else            \n            h = max( k - abs(d-l), 0.);\n            d = min(d,l) - h*h/k/4.;\n#endif\n            p = p.yzx;\n     }   }\n\n    O = vec4(d);\n} \n\n","name":"Image","description":"","type":"image"}]}