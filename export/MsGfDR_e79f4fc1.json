{"ver":"0.1","info":{"id":"MsGfDR","date":"1528274903","viewed":762,"name":"1992 Vibe","username":"thehugh100","description":"Retro Scenes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["1992"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct rayHit\n{\n    vec3 hitPos;\n    vec3 rayPos;\n    vec3 hitCol;\n    int didHit;\n    int hitCount;\n};\n\nvec3 spherePos = vec3(0.,-0.2,0.3);\nvec3 sphereAmbient = vec3(0.1,0.1,0.1);\nvec3 sphereDiffuse = vec3(0.1,0.1,0.1);\nvec3 sphereSpecular = vec3(1.,1.,1.);\n\nvec3 lightPos = vec3(0.2,0.2,0.3);\n\nrayHit rayTrace(vec3 start, vec3 dir)\n{\n    vec3 skyCol = vec3(0.5,0.5,0.5);\n    rayHit ray;\n    ray.hitPos = vec3(0);\n    ray.hitCol = vec3(0,0,0);\n    ray.rayPos = start;\n    ray.hitCount = 0;\n    ray.didHit = 0;\n    \n    \n    float bigStep = 0.15;\n    float smallStep = 0.002;\n    float stepSize = bigStep;\n   \n    dir = normalize(dir);\n    \n    bool b1 = false;    \n\tbool b2 = false;\n    \n    for(int i = 0; i < 1200; i++)\n    {\n        ray.rayPos += dir * stepSize;\n        \n        if(ray.rayPos.y <= -1. + bigStep) //hit ground\n        {\n            b1 = true;\n            if(ray.rayPos.y <= -1.)\n        \t{\n                float floorCol = (mod(floor(ray.rayPos.x) + floor(ray.rayPos.z), 2.));\n                \n                vec3 sr = normalize(vec3(0,1,0) - ray.rayPos); \n                vec3 sl = normalize(vec3(0,2,0) - lightPos);\n                vec3 re = reflect(dir, sr); //sphere reflection vec\n                \n                vec3 ambient = vec3(floorCol) * .14;\n                vec3 diffuse = vec3(floorCol) * max(0.,dot(sr, sl)); \n                vec3 specular = vec3(0.5) * pow(  max(dot(sl , re),0.)  , 12.);\n                \n                \n                ray.hitCol += ambient + diffuse + specular;\n                ray.hitCount++;\n                ray.didHit = 1;\n                \n                dir = reflect(dir, vec3(0,1,0));\n                \n                break;\n            }\n        }\n        else\n        {\n             b1 = false;\n        }\n        if(distance(ray.rayPos, spherePos) < 0.2 + bigStep)\n        {\n            b2 = true;\n            if(distance(ray.rayPos, spherePos) < 0.2)\n            {\n                vec3 sr = normalize(spherePos - ray.rayPos); \n                \n                //sr += vec3(texture(iChannel0, vec2(sr.x * .1, sr.y* .1 )).rgb) * 0.1;\n                \n                vec3 sl = normalize(spherePos - lightPos);\n                vec3 re = reflect(dir, sr); //sphere reflection vec\n                \n                vec3 ambient = sphereAmbient;\n                vec3 diffuse = sphereDiffuse * max(0.,dot(sr, sl)); \n                vec3 specular = sphereSpecular * pow(  max(dot(sl , re)*-1.,0.)  , 6.);\n                \n                ray.hitCol += ambient + diffuse + specular;\n                \n                ray.hitCount++;\n                ray.didHit = 1;\n                dir = re;\n                //break;\n            }\n        }\n        else\n        {\n             b2 = false;\n        }\n        if(distance(start, ray.rayPos) > 10.)\n        {\n            float col = clamp(1.-ray.rayPos.y * 0.05, 0.7, 1.);\n        \tray.hitCol += vec3(col, col, col * 2.);\n            float height = texture(iChannel0, vec2(dir.x*0.12, 0.)).r - 0.5;\n            if(dir.y*10. < height)\n            {\n                ray.hitCol = vec3(.0) + max(dir.y, 0.)*10. + 0.3 * texture(iChannel0, vec2(dir.x*1.4, dir.y*1.7)).r + (clamp(pow(dir.y + 1.022, 30.), 0., 1.4));\n            }\n            \n            \n            ray.hitCount++;\n            break;\n        }\n        if(b1 || b2)\n        {\n            stepSize = smallStep;\n        }\n        else\n        {\n        \tstepSize = bigStep;\n        }\n    }\n    if(ray.didHit == 0)\n    {\n        ray.hitCount = 2;\n        float col = clamp(1.-ray.rayPos.y * 0.05, 0.7, 1.);\n        \n        //col = texture(iChannel0, vec2(dir.x*0.1, dir.y)).r;\n        \n        ray.hitCol = vec3(col, col, col * 2.);\n        float height = texture(iChannel0, vec2(dir.x*0.12, 0.)).r - 0.8;\n        if(dir.y*10. < height)\n        {\n        \tray.hitCol = vec3(.0) + max(dir.y, 0.)*10. + 0.3 * texture(iChannel0, vec2(dir.x*1.4, dir.y*1.7)).r + (clamp(pow(dir.y + 1.022, 30.), 0., 1.4));\n        }\n    }\n    if(ray.hitCount > 0)\n    {\n    \tray.hitCol /= float(ray.hitCount);\n    }\n    return ray;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float aspect = iResolution.x / iResolution.y;\n    \n    lightPos = vec3(0.2 + cos(iTime),0.2,0.3 + sin(iTime));\n    \n    vec3 rayDir = vec3(uv.x-0.5, (uv.y-0.5)/aspect - 0.2, 0.6);\n    rayHit ray1 = rayTrace(vec3(0.,.1,-0.5 - .12*sin(iTime*0.5)), rayDir);\n    /*rayHit ray1 = rayTrace(vec3(0,0,0), rayDir + vec3(0.001,0,0));\n    rayHit ray2 = rayTrace(vec3(0,0,0), rayDir+ vec3(-0.001,0,0));\n    rayHit ray3 = rayTrace(vec3(0,0,0), rayDir+ vec3(0.,0.001,0));\n    rayHit ray4 = rayTrace(vec3(0,0,0), rayDir+ vec3(0.,-0.001,0));\n    vec3 col = (ray1.hitCol + ray2.hitCol + ray3.hitCol + ray4.hitCol) / 4.0;\n    */\n    vec3 col = ray1.hitCol;\n    \n    /*float rSteps = 8.;\n    float gSteps = 1.;\n    float bSteps = 1.;\n    float texFreq = 2.;\n    \n    float avgCol = (col.r + col.g + col.b) / 3.;\n    float downSampled = floor(avgCol * rSteps) / rSteps;\n    float error = avgCol - downSampled;\n    \n    col = vec3( downSampled);\n    */\n    //col.g = floor((col.g + (texture(iChannel0, uv * texFreq).r - 0.5)*1.) * gSteps) / gSteps;\n    //col.b = floor((col.b + (texture(iChannel0, uv * texFreq).r - 0.5)*1.) * bSteps) / bSteps;\n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}