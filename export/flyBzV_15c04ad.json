{"ver":"0.1","info":{"id":"flyBzV","date":"1664806792","viewed":255,"name":"Artober - Ice galleries","username":"Flopine","description":"Day 3 of the everyday challenge of october! Multiscale truchet pattern extruded and rendered with transparency :D ","likes":31,"published":1,"flags":0,"usePreview":1,"tags":["raymarching","transparency","truchet","multiscale","everyday","extrusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define circle(u,s) (length(u)-s)\n\nfloat multiscale_truchet (vec2 uv, float seed)\n{\n   vec2 id = floor(uv);\n   uv = fract(uv)-.5;\n   \n   float s, noise = textureLod(iChannel0, (id+seed)*0.1, 0.).x;\n   vec2 uu;\n   if (noise<.5) uv.x *=-1.;\n   \n   if (noise>0.6)\n   {\n       uu = mod(uv,0.5)-0.25;\n       s = uu.x > -uu.y ? 1. : -1.;\n       vec2 uuu = uu-s*.25;\n       float d = abs(circle(uuu, 0.25));\n       return .25-d;\n   }\n   else\n   {\n       s = uv.x > -uv.y ? 1. : -1.;\n       uu = uv-s*.5;\n       float c1 = abs(circle(uu, 0.5));\n       uu = abs(uv)-.5;\n       float c2 = circle(uu, 0.005);\n       return min(c1,c2);\n   }   \n}\n\n// iq's distance function\n// https://iquilezles.org/articles/distfunctions/\nfloat extrude (vec3 p, float d, float h)\n{\n    vec2 w = vec2( d, abs(p.z) - h );\n    return min(max(w.x,w.y),0.0) + length(max(w,0.0));\n}\n\nfloat SDF (vec3 p)\n{\n    p.z += iTime;\n    \n    float per = 5.;\n    float id = floor(p.z/per);\n    p.z = mod(p.z, per)-per*.5;\n   \n    float scene = extrude(p.xyz, multiscale_truchet(p.xy, id), 0.05)-0.22;\n    scene = max(-length(p)+.3, scene);\n    \n    return scene;\n}\n\nvec3 gn (vec3 p)\n{\n    vec2 e = vec2(0.001,0.);\n    return normalize(SDF(p)-vec3(SDF(p-e.xyy),SDF(p-e.yxy),SDF(p-e.yyx)));\n}\n\nfloat AO (vec3 p, vec3 n, float e)\n{return clamp( SDF(p+e*n)/e, 0., 1. );}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0.001,0.001, -3.), rd=normalize(vec3(uv,1.)),\n    p=ro, col = vec3(0.), l=normalize(vec3(-3.,1.,-4.));\n    \n    bool hit=false;\n    \n    for(float i=0.; i<64.; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            hit=true;\n        }\n        d = max(abs(d),0.001);\n        p += d*rd*0.6;\n    }\n    float t = length(p-ro);\n    if(hit)\n    {\n        vec3 n = gn(p);\n        float ao = AO(p,n,0.05)+AO(p,n,0.15)+AO(p,n,0.2);\n        col = vec3(0.4,0.8,0.9)*(ao/2.);\n    }    \n    col = mix(col, vec3(0.,0.01,0.1), 1.-exp(-0.01*t*t));\n\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}