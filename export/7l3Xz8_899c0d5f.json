{"ver":"0.1","info":{"id":"7l3Xz8","date":"1640101195","viewed":56,"name":"Test0 - 2D shapes","username":"gorplex","description":"Test0 - Basic Circle SDF","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cos2(float x)\n{\n    return pow(cos(x), 2.);\n}\n\nfloat SDFCircle(vec2 coord) \n{\n    return pow(coord.x,2.) + pow(coord.y,2.) - cos2(iTime)-.05;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    //vec3 col = vec3(0,0,0);\n    //vec3 col = vec3(0,1,0)*SDFCircle(uv);\n        \n    vec3 col = vec3(max(SDFCircle(uv), 0.), -min(SDFCircle(uv), 1.), 1);\n    if (abs(SDFCircle(uv)) < .005)\n    {\n        col = vec3(0,0,0);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}