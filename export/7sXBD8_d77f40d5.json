{"ver":"0.1","info":{"id":"7sXBD8","date":"1644779107","viewed":94,"name":"PlaneGradient","username":"kslater3","description":"Get Linear Gradient from a given arbitrary plane from the normal vector \"n\" and a point through it \"p\", and use a normalized z of the (x, y, z) from that point on the plane to get the r value for rgba.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy;\n    vec4 rgba = vec4(0.4, 0.4, 0.4, 1.0);\n    \n    \n    \n    //vec3 n = vec3(1.0, 1.0, 1.0);\n    //vec3 n = vec3(cos(iTime), sin(iTime), 1.0);\n    vec3 n = vec3(cos(iTime), 1.0, 1.0);\n    float n_len = sqrt(n.x*n.x + n.y*n.y + n.z*n.z);\n    n.x = n.x/n_len;\n    n.y = n.y/n_len;\n    n.z = n.z/n_len;\n    \n    vec2 p = vec2(iResolution.x, iResolution.y);\n    \n    // Simplify the Equation of plane with normal n, through point p (Note p.z == 0)\n    float z = (n.x/n.z)*(p.x - xy.x) + (n.y/n.z)*(p.y - xy.y);\n    \n    // Now normalize the result of z between 0 and 1 so that we can map to r\n    // Since plane, max z is the absolute value of the y intercept of instersection line\n    // between xy plane and other plane, which is where z = 0\n    float z_max = abs(p.y + (n.x/n.y)*p.x);\n    \n    \n    rgba.r = z/z_max;\n    \n    fragColor = rgba;\n}","name":"Image","description":"","type":"image"}]}