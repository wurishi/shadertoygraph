{"ver":"0.1","info":{"id":"NlcXRf","date":"1639460336","viewed":344,"name":"test mist","username":"jcyuan","description":"test the efx of erase from a mist (like the efx in some games)","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["sdf","mist","multiplepass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 suv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 ouv = fragCoord / iResolution.xy;\n    vec2 d = texture(iChannel1, ouv).xy;\n    \n    float w = length(fwidth(ouv));\n    vec3 ball = .02 / d.y * vec3(.2, 1., 0.);\n    \n    float m = pow(exp(-d.x), 5.);\n    vec3 col = texture(iChannel0, ouv).rgb * m + ball;\n    \n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 hash3(vec3 c) {\n    float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n    vec3 r;\n    r.z = fract(512.0*j);\n    j *= .125;\n    r.x = fract(512.0*j);\n    j *= .125;\n    r.y = fract(512.0*j);\n    return r-0.5;\n}\n\nconst float F3 =  0.3333333;\nconst float G3 =  0.1666667;\n\nfloat snoise(vec3 p) {\n    vec3 s = floor(p + dot(p, vec3(F3)));\n    vec3 x = p - s + dot(s, vec3(G3));\n\n    vec3 e = step(vec3(0.0), x - x.yzx);\n    vec3 i1 = e*(1.0 - e.zxy);\n    vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\n    vec3 x1 = x - i1 + G3;\n    vec3 x2 = x - i2 + 2.0*G3;\n    vec3 x3 = x - 1.0 + 3.0*G3;\n\n    vec4 w, d;\n\n    w.x = dot(x, x);\n    w.y = dot(x1, x1);\n    w.z = dot(x2, x2);\n    w.w = dot(x3, x3);\n\n    w = max(0.6 - w, 0.0);\n\n    d.x = dot(hash3(s), x);\n    d.y = dot(hash3(s + i1), x1);\n    d.z = dot(hash3(s + i2), x2);\n    d.w = dot(hash3(s + 1.0), x3);\n\n    w *= w;\n    w *= w;\n    d *= w;\n\n    return dot(d, vec4(52.0));\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    vec4 c = texture(iChannel0, fragCoord / iResolution.xy);\n    vec2 mv = vec2(cos(iTime) * .95, sin(iTime) * .45) * snoise(vec3(vec2(0.), iTime * .5)) * 3.;\n    float d = length(uv + mv);\n    c.y = d;\n    if (c.z == 0.) {\n        c.x = d;\n        c.z = 1.;\n    } else {\n        c.x = min(c.x, d);\n    }\n    \n    fragColor = c;\n}\n","name":"Buffer A","description":"","type":"buffer"}]}