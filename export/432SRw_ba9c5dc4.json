{"ver":"0.1","info":{"id":"432SRw","date":"1710379345","viewed":119,"name":"Trippy Triangles!","username":"eisenholz","description":"Learning to write shaders, this is my first go at it after following a tutorial and changing a bunch of stuff along the way, lessons learned and all that. Enjoy!\n\n* Update 1: Thanks to @morimea for the tip about anti-aliasing!","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["triangles","psychedelic","trippy","twisting","repeatingpattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvec2 rotateCCW(vec2 p, float a)\n{\n    mat2 m = mat2(cos(a), sin(a), -sin(a), cos(a));\n    return p * m;\n}\n\n\nvec2 rotateCW(vec2 p, float a)\n{\n    mat2 m = mat2(cos(a), -sin(a), sin(a), cos(a));\n    return p * m;\n}\n\nfloat triangleDist(vec2 p, float radius)\n{\n    return max(    abs(p).x * 0.866025 +\n                   p.y * 0.5, -p.y)\n                -radius * 0.5;\n}\n\nvec3 palette(float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.3, 0.05, 0.9);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b * cos(6.28318*(c*t*d));\n}\n\nvoid mainImage_orig( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 2.5 - cos(iTime/3.)) - 0.5;\n\n    uv = rotateCW(uv, sin(length(uv0) * 4.0 + iTime*.3) );\n\n    float d = length(uv) * exp(-length(uv0));\n\n    vec3 color = palette(length(uv0) + i*.4 + iTime);\n\n      d = triangleDist(uv, 0.4);\n      d = sin(d*12.0 - iTime*2.3)/12.0;\n      d = abs(d);\n      d = (0.005)/d;\n      d = pow(d, 1.2);\n\n    finalColor += color * d;\n    }\n\n\n\n    fragColor = vec4(finalColor, 1.0);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 tcol=vec4(0.);\n    const int AA=4;\n    for( int mx=0; mx<AA; mx++ )\n    for( int nx=0; nx<AA; nx++ )\n    {\n        vec2 o = vec2(float(mx),float(nx)) / float(AA) - 0.5;\n        mainImage_orig(fragColor,fragCoord+o);\n        tcol+=clamp(fragColor,0.,1.);\n    }\n    fragColor=tcol/float(AA*AA);\n}","name":"Image","description":"","type":"image"}]}