{"ver":"0.1","info":{"id":"wsSczm","date":"1586321199","viewed":77,"name":"RayMarch-Test","username":"hshshshshs","description":"RayMarch","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#define MAX_STEPS 100\n#define MAX_DIST 100.\n\nfloat GetDist(vec3 p) {\n\tvec4 s = vec4(0, 0, 0, 1);\n    float sphereDist =  length(p-s.xyz)-s.w;\n    return sphereDist;\n}\n\nfloat RayMarch(vec3 ro, vec3 rd) {\n\tfloat dO=0.;\n    \n    for(int i=0; i<MAX_STEPS; i++) {\n    \tvec3 p = ro + rd*dO;\n        float dS = GetDist(p);\n        dO += dS;\n        if(dO>MAX_DIST || dS<.01) break;\n    }\n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n\tfloat d = GetDist(p);\n    vec2 e = vec2(.0001, 0);\n    \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy),\n        GetDist(p-e.yxy),\n        GetDist(p-e.yyx));\n    \n    return normalize(n);\n}\n\nfloat GetLight(vec3 p) {\n    vec3 lightPos = vec3(0.6, 0.6, 0.6);\n    lightPos.xz += vec2(sin(iTime), cos(iTime))*3.;\n    vec3 l = normalize(lightPos-p);\n    vec3 n = GetNormal(p);\n    \n    float dif = clamp(dot(n, l), 0., 1.);    \n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(1);\n    \n    vec3 ro = vec3(0, 0, -3.0);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1));\n\n    float d = RayMarch(ro, rd);\n\n    if (d < MAX_DIST) {\n    \tvec3 p = ro + rd * d;\n        float dif = GetLight(p);\n        col = vec3(dif + 0.1, dif*0.8 + 0.1, dif*0.6 + 0.1);\n    }   \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}