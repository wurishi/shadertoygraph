{"ver":"0.1","info":{"id":"wtGyzc","date":"1611428983","viewed":256,"name":"Fractal tile mosaic","username":"jarble","description":"A simple fractal formula.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["fractal","tile","mosaic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fract1(float a){\n    return (abs(fract(a/2.0)-.5))*2.0;\n}\n\nvec2 fract1(vec2 a){\n    return (abs(fract(a/2.0)-.5))*2.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col;\n    float t;\n    \n    for(int c=0;c<3;c++){\n\t    \n        vec2 uv = (fragCoord*40.0-iResolution.xy)/iResolution.y/10.0;\n        uv += vec2(iTime/2.0,iTime/8.0)/2.0;\n        t = iTime+float(c)/10.;\n        float scale = 5.5;\n        float scale1 = 2.0;\n        for(int i=0;i<3;i++)\n        {\n            uv = (fract1(uv/scale1)+fract1(uv/scale/2.0))*scale1;\n            uv= fract1(uv/(2.0-fract1((uv.x-uv.y)/(8.0)))-(uv/(1.7+(fract1(uv.x+uv.y))))/scale)*scale/scale1+scale1*scale;\n            uv /= scale1+col.yx;\n        \tuv=uv.yx+col.xy;\n        }\n     col[c] = abs(fract(uv.y)-fract(uv.x));\n\t}\n    \n    fragColor = vec4(vec3(col),1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}