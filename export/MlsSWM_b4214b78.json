{"ver":"0.1","info":{"id":"MlsSWM","date":"1437234944","viewed":281,"name":"Uvs on point based geometry","username":"Wicpar","description":"an attempt to texture a quad made of thick lines with a uv map.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["line","geometry","uvs","point"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//[IN PROGRESS]\nvec2 Coordinates;\nvec2 p1 = vec2(iResolution.x/2.+100.,iResolution.y/2.+100.),\n    p2 = vec2(iResolution.x/2.+100.,iResolution.y/2.-100.), \n    p3 = vec2(iResolution.x/2.-100.,iResolution.y/2.-100.), \n    p4 = vec2(iResolution.x/2.-100.,iResolution.y/2.+100.);\nvec2 uv1 = vec2(0.75,0.75), \n    uv2 = vec2(0.75,0.25), \n    uv3 = vec2( 0.25,0.25),\n    uv4 = vec2(0.25,0.75);\n\nfloat minimum_distance( in vec2 a, in vec2 b, in vec2 p ){\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat DrawLine(vec2 a, vec2 b, float t, vec2 co){\n    float dst = minimum_distance(a,b,co);\n    return 1.0-smoothstep( t, t+1.0, dst );\n}\n\nvec3 toBari(vec2 a,vec2 b,vec2 c,vec2 p){\n    vec3 coord = vec3(0);\n    float det = (b.y-c.y)*(a.x-c.x)+(c.x-b.x)*(a.y-c.y);\n    coord.x = ((b.y-c.y)*(p.x-c.x)+(c.x-b.x)*(p.y-c.y))/det;\n    coord.y = ((c.y-a.y)*(p.x-c.x)+(a.x-c.x)*(p.y-c.y))/det;\n    coord.z = 1.-coord.x-coord.y;\n    return coord;\n}\nvec2 toCartesian(vec2 a,vec2 b,vec2 c,vec3 p){\n    return a*p.x+b*p.y+c*p.z;\n}\n\nfloat DrawQuad(vec2 a, vec2 b, vec2 c, vec2 d, float t, vec2 co){\n    float f = 0.;\n    f= max(f,DrawLine(a,b,t,co));\n    f= max(f,DrawLine(a,c,t,co));\n    f= max(f,DrawLine(a,d,t,co));\n    f= max(f,DrawLine(b,c,t,co));\n    f= max(f,DrawLine(b,d,t,co));\n    f= max(f,DrawLine(c,d,t,co));\n    return f;\n}\nvec2 DrawUVQuad(vec2 a, vec2 b, vec2 c, vec2 d,vec2 uva, vec2 uvb, vec2 uvc, vec2 uvd, float t, vec2 co){\n    float i = DrawQuad(a,b,c,d,t,co);\n    if (i<=0.) return vec2(0);\n    vec3 baria = toBari(a,b,c,co);\n    vec3 barib = toBari(a,d,c,co);\n    vec3 baric = toBari(b,c,d,co);\n    vec3 barid = toBari(b,a,d,co);\n    vec2 coord = vec2(0);\n    coord+= toCartesian(uvb,uvc,uvd,baric);\n    coord+= toCartesian(uvb,uva,uvd,barid);\n    coord+= toCartesian(uva,uvb,uvc,baria);\n    coord+= toCartesian(uva,uvd,uvc,barib);\n    \n    return (coord/4.)*i;\n}\nvec4 DrawtexturedUVQuad(vec2 a, vec2 b, vec2 c, vec2 d,vec2 uva, vec2 uvb, vec2 uvc, vec2 uvd, float t, vec2 co, sampler2D s){\n    float i = DrawQuad(a,b,c,d,t,co);\n    if (i<=0.) return vec4(0.);\n    vec3 baria = toBari(a,b,c,co);\n    vec3 barib = toBari(a,d,c,co);\n    vec3 baric = toBari(b,c,d,co);\n    vec3 barid = toBari(b,a,d,co);\n    vec2 coord = vec2(0.);\n    coord+= toCartesian(uvb,uvc,uvd,baric);\n    coord+= toCartesian(uvb,uva,uvd,barid);\n    coord+= toCartesian(uva,uvb,uvc,baria);\n    coord+= toCartesian(uva,uvd,uvc,barib);\n    \n    return texture(s,coord/4.)*i;\n}\nvec2 DrawSimpleUVQuad(vec2 a, vec2 b, vec2 c, vec2 d,vec2 uva, vec2 uvb, vec2 uvc, vec2 uvd,float t, vec2 co){\n    vec3 baria = toBari(a,b,c,co);\n    vec3 barib = toBari(a,d,c,co);\n    vec3 baric = toBari(b,c,d,co);\n    vec3 barid = toBari(b,a,d,co);\n    float i = DrawQuad(a,b,c,d,t,co);\n    vec2 coord = vec2(0.);\n    float j = 0.;\n    if (baric.x>0. && baric.x<1. && baric.y>0. && baric.y<1. && baric.z>0. && baric.z<1.){\n        coord+= toCartesian(uvb,uvc,uvd,baric);\n        j++;\n    }\n    if (barid.x>0. && barid.x<1. && barid.y>0. && barid.y<1. && barid.z>0. && barid.z<1.){\n        coord+= toCartesian(uvb,uva,uvd,barid);\n        j++;\n    }\n    if (baria.x >0. && baria.x<1. && baria.y >0. && baria.y<1. && baria.z >0. && baria.z<1.){\n        coord+= toCartesian(uva,uvb,uvc,baria);\n        j++;\n    }\n    if (barib.x>0. && barib.x<1. && barib.y>0. && barib.y<1. && barib.z>0. && barib.z<1.){\n        coord+= toCartesian(uva,uvd,uvc,barib);\n        j++;\n    }\n    return coord/j;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 Coordinates = gl_FragCoord.xy;\n    p3 = iMouse.xy;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = DrawtexturedUVQuad(p1,p2,p3,p4,uv1,uv2,uv3,uv4,100.,Coordinates,iChannel0);\n    //fragColor = vec4(DrawUVQuad(p1,p2,p3,p4,uv1,uv2,uv3,uv4,10.,Coordinates),0.,1.);\n}","name":"","description":"","type":"image"}]}