{"ver":"0.1","info":{"id":"cdfXWl","date":"1682505890","viewed":55,"name":"PianoPhase by S Reich","username":"WhiteWalrus518","description":"generative music. No visuals sorry\nIt sounds kind of like a hocket imho [https://www.youtube.com/watch?v=Czq2YBv8ZTc]\n\nI have no idea what is going on after the 38 seconds mark","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float noteFreq(int semiT){\n// tuned in semitones off A 4 (440 Hz)\n    return 440.0 * pow(2.0, float(semiT) / 12.0);\n}\n\nfloat melody(float t, float tempo){\n    return noteFreq(script[ int(mod( t * tempo ,12.0)) ] );\n}\n\nfloat noteCode(float t, float tempo){\n    // produces the sound of the note (rather than just a sine wave)\n    float tsub = fract(t * tempo); // tsub is the current time within the note's duration [0, 1]\n    float a =  4.0 * tsub * (1.0 - tsub);\n    \n    return (sin( (melody(t, tempo)) * 2.0 * pi * t) + 0.2 * sin( (melody(t, tempo)) * 1.0 * pi * t) )* a *0.5 ;\n\n}\n\nvec2 mainSound( int samp, float time )\n{\n    return 0.5 * vec2( noteCode(time, bps)+  noteCode(time, bps * freqRat));\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"#define pi 3.14159\nfloat bps = 4.0;\nfloat freqRat = 1.5;\n\nint script[12] = int[](0, 2, 7, 9, 10, 2, 0, 9, 7, 2, 10, 9);\n","name":"Common","description":"","type":"common"}]}