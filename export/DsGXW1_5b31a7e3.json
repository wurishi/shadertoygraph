{"ver":"0.1","info":{"id":"DsGXW1","date":"1680991668","viewed":222,"name":"20230409_revision h0ffman","username":"0b5vr","description":"A livecoded shader for Revision 2023 Shader Jam.\nFully improvised, coded in 60 minutes.\n\noptimized for h0ffman + E Werk experience.\nWas really fun to join, thank you all!","likes":19,"published":1,"flags":64,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Mdd3Rn","filepath":"https://soundcloud.com/h0ffman/hoffman-wrecklamation-soundtrack?si=e793b6afab57440b93162cad4f9ff32c&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/h0ffman/hoffman-wrecklamation-soundtrack?si=e793b6afab57440b93162cad4f9ff32c&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define loop(i,n) for(int i=0;i<n;i++)\n#define lofi(i,j) (floor((i)/(j))*(j))\n#define lofir(i,j) (floor((i)/(j)+.5)*(j))\n\nconst float BPM=135.;\n\nconst float PI=acos(-1.);\nconst float TAU=PI*2.;\n\nuvec3 pcg3d(uvec3 s){\n  s=s*1145141919u+1919810u;\n  s.x+=s.y*s.z;\n  s.y+=s.z*s.x;\n  s.z+=s.x*s.y;\n  s^=s>>16;\n  s.x+=s.y*s.z;\n  s.y+=s.z*s.x;\n  s.z+=s.x*s.y;\n  return s;\n}\n\nvec3 pcg3df(vec3 s){\n  uvec3 r=pcg3d(floatBitsToUint(s));\n  return vec3(r)/float(0xffffffffu);\n}\n\nvec4 plas( vec2 v, float time )\n{\n\tfloat c = 0.5 + sin( v.x * 10.0 ) + cos( sin( time + v.y ) * 20.0 );\n\treturn vec4( sin(c * 0.2 + cos(time)), c * 0.15, cos( c * 0.1 + time / .4 ) * .25, 1.0 );\n}\n\nvec4 fuck(vec2 uv,float time){\n\tvec2 m;\n\tm.x = atan(uv.x / uv.y) / 3.14;\n\tm.y = 1. / length(uv) * .2;\n\tfloat d = m.y;\n\n\tvec4 t = plas( m * 3.14, time) / d;\n\tt = clamp( t, 0.0, 1.0 );\n  return t;\n}\n\nmat2 r2d(float t){\n  float c=cos(t),s=sin(t);\n  return mat2(c,s,-s,c);\n}\n\nmat3 orthbas(vec3 z){\n  z=normalize(z);\n  vec3 up=abs(z.y)>.999?vec3(0,0,1):vec3(0,1,0);\n  vec3 x=normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\nfloat smin(float a,float b,float k){\n  float h=max(k-abs(a-b),0.)/k;\n  return min(a,b)-h*h*h*k/6.;\n}\n\nfloat smax(float a,float b,float k){\n  return -smin(-a,-b,k);\n}\n\nfloat sdcapsule(vec3 p,vec3 tail){\n  float h=clamp(dot(p,tail)/dot(tail,tail),0.,1.);\n  return length(p-tail*h);\n}\n\nfloat sdbox(vec3 p,vec3 s){\n  vec3 d=abs(p)-s;\n  return min(max(max(d.x,d.y),d.z),0.)+length(max(d,0.));\n}\n\n// let's see how dojoe dance\nfloat sdbend(vec3 p,float w,float b){\n  float t=p.x/w;\n  t*=t;\n  p.y+=b*(1.-t);\n  return sdcapsule(p+vec3(w,0,0),vec3(w*2.,0,0));\n}\n\nvec3 happybump(vec3 p,float phase){\n  p.y-=.2*abs(sin(phase));\n  p.xy*=r2d(.05*acos(cos(phase))-.05);\n  return p;\n}\n\nvec4 map(vec3 p){\n  vec3 pt=p;\n  vec4 isect=vec4(1E9);\n  float d=1E9;\n  \n  vec3 origin=vec3(0);\n  origin.xz=lofir(p.xz,4.);\n  p-=origin;\n  \n  vec3 dice=pcg3df(origin);\n  p.zx*=r2d(dice.x-.5);\n  \n  float phase=PI*BPM/60.*iTime;\n  phase+=PI*step(.5,dice.y)+dice.y;\n  \n  // mouth\n  pt=p;\n  pt=happybump(pt,phase);\n  pt.y=-pt.y;\n  pt.y-=.2;\n  pt.z-=.1;\n  d=sdbend(pt,.5,-.05)-.05;\n  if(d<isect.x){\n    isect=vec4(d,1,0,0);\n  }\n  \n  // eyes\n  pt=p;\n  pt=happybump(pt,phase);\n  pt.x=abs(pt.x);\n  pt.x-=.4;\n  pt.y-=.2;\n  pt.z-=.1;\n  d=length(pt)-.05;\n  if(d<isect.x){\n    isect=vec4(d,1,0,0);\n  }\n  \n  // plane\n  pt=p;\n  pt=happybump(pt,phase);\n  d=sdbox(pt,vec3(1,1,.1));\n  if(d<isect.x){\n    isect=vec4(d,2.+dice.y,pt*.5);\n  }\n  \n  // arm\n  pt=p;\n  pt=happybump(pt,phase);\n  float armdir=sign(pt.x);\n  pt.x=abs(pt.x);\n  pt.x-=1.2;\n  d=sdbend(pt,.25,.05*sin(phase+armdir))-.02;\n  if(d<isect.x){\n    isect=vec4(d,3,0,0);\n  }\n  \n  // feet\n  pt=p;\n  pt=happybump(pt,phase);\n  pt.x=abs(pt.x);\n  pt.xy*=r2d(-1.2);\n  pt.x-=1.2;\n  d=sdbend(pt,.25,-.05)-.02;\n  if(d<isect.x){\n    isect=vec4(d,3,0,0);\n  }\n  \n  // floor\n  pt=p;\n  pt.y+=1.5;\n  d=sdbox(pt,vec3(100,.1,100));\n  if(d<isect.x){\n    isect=vec4(d,5,0,0);\n  }\n  \n  // beer\n  pt=p;\n  pt=happybump(pt,phase);\n  pt.x-=dice.z<.5?1.5:-1.5;\n  pt.y+=.2;\n  d=sdcapsule(pt,vec3(0,.3,0))-.1;\n  d=smin(d,sdcapsule(pt,vec3(0,.6,0))-.05,.05);\n  d=smax(d,-pt.y,.05);\n  d=smax(d,pt.y-.6,.05);\n  d*=.5;\n  if(d<isect.x){\n    isect=vec4(d,4,0,0);\n  }\n  \n  return isect;\n}\n\nvec3 nmap(vec3 p){\n  vec2 d=vec2(0,1E-4);\n  return normalize(vec3(\n    map(p+d.yxx).x-map(p-d.yxx).x,\n    map(p+d.xyx).x-map(p-d.xyx).x,\n    map(p+d.xxy).x-map(p-d.xxy).x\n  ));\n}\n\nvec3 cyclic(vec3 p){\n  mat3 b=orthbas(vec3(-1,5,2));\n  vec4 sum=vec4(0);\n  loop(i,6){\n    p*=b;\n    p+=sin(p.zxy);\n    sum+=vec4(\n      cross(cos(p),sin(p.yzx)),\n      1\n    );\n    sum*=2.;\n    p*=2.;\n  }\n  return sum.xyz/sum.w;\n}\n\nvec4 dobg(vec2 p){\n  float plasma=cyclic(vec3(4.*p,iTime)).x;\n  plasma+=2.*iTime;\n  vec3 col=.5+.5*sin(-10.*plasma+vec3(0,1,2));\n  return vec4(col,1);\n}\n\nvec3 dancefloor(vec2 p){\n  vec2 cell=lofir(p,.5);\n  vec2 pt=p;\n  pt-=cell;\n  float ph=max(abs(pt.x),abs(pt.y));\n  float macroph=length(mod(cell,16.)-7.5);\n  float heck=smoothstep(.9,.98,sin(-macroph-10.0*ph+10.0*iTime));\n  return vec3(mix(vec3(1),vec3(1,.2,.01),heck));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vec2 p=uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n  \n  vec4 bg=dobg(p);\n  \n  vec3 co=vec3(0,2,5);\n  co.xz+=iTime;\n  vec3 ct=vec3(0,0,0);\n  ct.xz+=iTime;\n  mat3 cb=orthbas(co-ct);\n  \n  vec3 ro=co;\n  ro.x+=iTime;\n  vec3 rd=cb*normalize(vec3(p,-2));\n  float rl=0.;\n  vec3 rp=ro;\n  vec4 isect;\n  \n  loop(i,100){\n    isect=map(rp);\n    rl+=.8*isect.x;\n    rp=ro+rd*rl;\n  }\n  \n  if(isect.x<.01){\n    vec3 N=nmap(rp);\n    vec3 L=normalize(vec3(1,1,2));\n    float dotNL=max(dot(N,L),0.);\n    float halflamb=.5+.5*dot(N,L);\n    float irrad=halflamb;\n    \n    vec3 H=normalize(L-rd);\n    float phong=pow(dot(N,H),100.);\n    \n    float rls=.01;\n    vec3 rps=rp+L*rls;\n    loop(i,50){\n      rls+=.8*map(rps).x;\n      rps=rp+rls*L;\n    }\n    irrad*=mix(.5,1.,smoothstep(5.,10.,rls));\n    \n    if(isect.y<2.){\n      fragColor=vec4(vec3(1.)*irrad,1);\n    }else if(isect.y<3.){\n      fragColor=fuck(isect.zw*.5,iTime+5.*fract(isect.y))*vec4(vec3(irrad),1);\n    }else if(isect.y<4.){\n      fragColor=vec4(vec3(.1)*irrad,1);\n    }else if(isect.y<5.){\n      fragColor=vec4(vec3(.2,.3,.04)*irrad+phong,1);\n    }else if(isect.y<6.){\n      fragColor=vec4(dancefloor(rp.xz)*irrad,1);\n    }\n    \n    float fog=smoothstep(10.,20.,rl);\n    fragColor=mix(fragColor,bg,fog);\n  }else{\n  \tfragColor = bg;\n  }\n}\n","name":"Image","description":"","type":"image"}]}