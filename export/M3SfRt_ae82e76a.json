{"ver":"0.1","info":{"id":"M3SfRt","date":"1729808920","viewed":39,"name":"Julia Fractal cross product ","username":"IgorZdrowowicz","description":"Welcome to my little Julia Fractal formula. Not sure how but apparently \ncross producing z with 2,2,1 and 0.5,0.5,-1 consecutively \nbefore squaring it etc., gives us this pretty lass. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","crossproduct"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by Igor Zdrowowicz\n// Welcome to my little Julia Fractal formula. Not sure how but apparently \n// cross producing z with 2,2,1 and 0.5,0.5,-1 consecutively \n// before squaring it etc., gives us this pretty boi. \n// Maybe there is some insight (aside from it coming out tilted by 45*) in this formula... \n// Let me know!\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.5 -1.2;\n    uv.x *= iResolution.x / iResolution.y; \n    \n    float sc = 1.5;\n    vec2 os = vec2(-0.5,0.0);\n    uv = uv * sc + os;\n    \n    vec3 z = vec3(uv,0.);\n\n    float time = iTime * 0.1; \n    vec3 c = vec3(cos(time), sin(time), 0.0); \n    \n    for (int i = 0; i <20; i++) {\n        z = cross(z, vec3(2.0,2.0,1.0));\n        z = cross(z, vec3(0.5,0.5,-1.0));\n        z = z * z + c; \n    }\n    \n\n    fragColor = vec4(z,0.);\n}","name":"Image","description":"","type":"image"}]}