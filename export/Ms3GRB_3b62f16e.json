{"ver":"0.1","info":{"id":"Ms3GRB","date":"1450650017","viewed":304,"name":"Tamby's Star Test","username":"TambakoJaguar","description":"I don't know if it counts as a small contribution for Christmas, but anyway, this is basic a test to create stars using polar coordinates.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","test","christmas","gradient","stars","rotating","polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"/*\n\"Tamby's Star Test\" by Emmanuel Keller aka Tambako - December 2015\nLicense Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\nContact: tamby@tambako.ch\n*/\n\n#define TS(A,F) A*(0.5 + sin(iTime*F))\n#define TC(A,F) A*(0.5 + cos(iTime*F))\n\nconst float pi = 3.14159;\nconst float bs = 0.001;\nconst float bw = 0.006;\n\nvec2 rotateVec(vec2 vect, float angle)\n{\n    float xr = vect.x*cos(angle) + vect.y*sin(angle);\n    float yr = vect.x*sin(angle) - vect.y*cos(angle);\n    return vec2(xr, yr);\n}\n\nfloat star(vec2 uv, vec2 center, float r1, float sf, float nb, float rs)\n{\n\tuv-= center + vec2(0., 0.5*(0.6 - (iResolution.x-iResolution.y)/iResolution.x)); \n    float alpha1 = mod(atan(uv.x, uv.y) + iTime*rs, 2.*pi/nb);\n    float alpha2 = mod(2.*pi/nb-atan(uv.x, uv.y) - iTime*rs, 2.*pi/nb);\n    float alpha = alpha1<pi/nb?alpha2:alpha1;\n    float f = sf*length(uv)*cos(alpha)/cos(pi/nb) - length(uv)*(sf-1.);\n    float v = smoothstep(r1 - bs, r1 + bs, f) + 0.5 - 0.5*smoothstep(r1 - 2.*bs - bw, r1 + bs - bw, f) + 0.2*pow(smoothstep(r1*0.9, r1*0.2, f), 0.2);\n\n    float f2 = length(uv);\n    float v2 = (1. - smoothstep(r1 - bs, r1 + bs, f2)) ;\n    \n    //return v + v2 -0.5*v3;\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    vec2 uv = fragCoord.xy / iResolution.xx;\n    \n    float v = star(uv, vec2(0.53, 0.21), 0.1, 1.2, 6., 1.);\n    v*= star(uv, vec2(0.175, 0.1), 0.03 + TS(0.02, 1.), 1.05, 5., -1.8);\n    v*= star(uv, vec2(0.19, 0.36), 0.05, 2. + TS(1.2, 0.7), 10., 1.7);\n    v*= star(uv, vec2(0.81, 0.05) + vec2(TC(0.03, 2.), TS(0.03, 2.)), 0.05, 5.25, 15., -0.5);\n    v*= star(uv, vec2(0.86, 0.32), 0.05, 1.6, 8., 3.5);\n    \n    fragColor.xyz = mix(pow(vec3(v), vec3(0.1 + TS(0.25, 0.4), 0.7, 4)), vec3(1. - 0.05*uv.y, 0.65+1.4*uv.y, 0.4 + 0.9*uv.y), v);\n\n}","name":"","description":"","type":"image"}]}