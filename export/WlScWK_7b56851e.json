{"ver":"0.1","info":{"id":"WlScWK","date":"1620157455","viewed":68,"name":"math art","username":"space_sheep","description":"math art","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.14159265359;\n\nvec3 rotateX(vec3 v, float deg)\n{\n    mat3 m = mat3(\n       1.0, 0.0, 0.0, // first column \n       0.0, cos(deg), -sin(deg), // second column\n       0.0, sin(deg), cos(deg)  // third column\n    );\n    return m*v;\n}\nvec3 rotateZ(vec3 v, float deg)\n{\n    mat3 m = mat3(\n       cos(deg), -sin(deg), 0.0, // first column \n       sin(deg), cos(deg),  0.0, // second column\n       0.0, 0.0, 1.0  // third column\n    );\n    return m*v;\n}\nbool inLine(vec2 uv, vec3 a, vec3 b)\n{\n    vec3 c = a-b;\n    float slp = c.y/c.x;\n    float bb = -slp*a.x+a.y;\n    \n    float size = 0.01;\n    \n    if(a.x>b.x) {float temp = a.x; a.x = b.x; b.x = temp;};\n    if(\n       uv.x>a.x && \n       uv.x<b.x &&\n       uv.y>uv.x*slp-size + bb && \n       uv.y<uv.x*slp+size + bb\n       ) return true;\n    else return false;\n}\nvec3 project(vec3 v)\n{\n    return vec3((1.0/v.z)*v.xy, v.z);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = 0.5 + 0.5*cos(iTime+uv.xyxy+vec4(0,2,4,1));\n    fragColor = vec4(.0,.0,.0,.0);\n    \n    vec2 res = iResolution.xy;\n    vec2 p\t = vec2(fragCoord.x/res.x, fragCoord.y/res.y) ;\n    \n    mat2 m = mat2(\n       0.5,  -1.0, // first column (not row!)\n       0.0, 1.0 // second column\n    );\n    \n    p = m*p;\n    \n    float d = atan(p.y/p.x) / (pi/2.0);\n    float l = length(p);\n    \n    float change = (cos(iTime/6.0)+10.0)*6.0;\n    if(\n        mod(floor(l*20.0),2.0)==0.0 && \n        mod(floor(d*change),2.0)==0.0\n    ) \n    fragColor.x=0.5;\n    \n    //--------------------\n    \n    float s = 0.25;\n    vec3[8] points = vec3[8](\n        vec3(-s,s,-s), vec3(s,s,-s), vec3(s,s,s), vec3(-s,s,s),\n        vec3(-s,-s,-s), vec3(s,-s,-s), vec3(s,-s,s), vec3(-s,-s,s)\n    );\n    \n    for(int i=0; i<8; i++) {\n        points[i]=rotateX(points[i], iTime/3.0);\n        points[i]=rotateZ(points[i], iTime/2.0);\n        points[i].z += 1.0;\n        points[i] = project(points[i]);\n        \n        points[i].x += 0.5;\n        points[i].y += 0.5;\n    };\n    \n    for(int i=0; i<4; i++){\n        if(inLine(uv, points[i], points[(i+1)%4]))\n        fragColor = fragColor = col;\n    }\n    for(int i=0; i<4; i++){\n        if(inLine(uv, points[i+4], points[(i+1)%4+4]))\n        fragColor = col;\n    }\n    for(int i=0; i<4; i++){\n        if(inLine(uv, points[i], points[(i+1)%5+3]))\n        fragColor = col;\n    }\n}","name":"Image","description":"","type":"image"}]}