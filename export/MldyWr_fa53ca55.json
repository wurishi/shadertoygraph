{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"//(C) VoidChicken 2018\n//MIT License\n\n\nivec2 getParticle(int idx)\n{\n\tfloat i = float(idx);\n    return ivec2(int(mod(i,iResolution.x)),int(floor(i/iResolution.x)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n\n    uv.x*=iResolution.x/iResolution.y;\n    \n    uv=uv/2.+.5;\n    \n    vec3 col = vec3(0);\n\n    for (int i = 0; i < PARTICLE_COUNT; i++) {\n    \tivec2 texel = getParticle(i);\n        vec4 data= texture(iChannel0, vec2(texel)/iResolution.xy);\n        vec2 pos = data.xy;\n        //if (<.01)// || length(uv-pos-data.zw)<.005)\n        col+=vec3(.6,.9,1)*(.01/length(uv-pos))/20.;\n    }\n    \n    fragColor = vec4(pow(col,vec3(1./2.2))+vec3(.3,.6,1)*.3,1);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"const int PARTICLE_COUNT = 500;\nconst float TIME_DELTA = 1./60.;\n","name":"Common","description":"","type":"common"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Noise function:    Copyright (C) 2011-2016 by Stefan Gustavson\n// MIT LICENSE\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187, \n                      0.366025403784439,  \n                     -0.577350269189626,  \n                      0.024390243902439); \n\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n  i = mod289(i); \n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nivec2 getParticle(int idx)\n{\n\tfloat i = float(idx);\n    return ivec2(int(mod(i,iResolution.x)),int(floor(i/iResolution.x)));\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame==0){\n    \tfragColor = vec4(rand(fragCoord),rand(fragCoord.yx),0,0);\n    }\n    else\n    {\n    \tvec4 last = texture(iChannel0,fragCoord/iResolution.xy);\n        \n        if (iMouse.w>0.)\n        {\n            \n            vec2 uv = iMouse.xy/iResolution.xy*2.-1.;\n\n            uv.x*=iResolution.x/iResolution.y;\n\n            uv=uv/2.+.5;\n            \n            vec2 delta = normalize(uv-last.xy);\n            \n            last.z=last.z+delta.x*TIME_DELTA*5.;\n            last.w=last.w+delta.y*TIME_DELTA*5.;\n            \n        }\n        else {\n        \n            vec2 delta = vec2(snoise(fragCoord.xy/5.),snoise(fragCoord.yx/5.));\n\n            last.z=last.z+delta.x*TIME_DELTA;\n            last.w=last.w+delta.y*TIME_DELTA;\n        }        \n        \n        \n        last.x=last.x+last.z*TIME_DELTA;\n        last.y=last.y+last.w*TIME_DELTA;\n        \n        last.z*=.95;\n        last.w*=.95;\n        \n        fragColor = last;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"MldyWr","date":"1532298792","viewed":924,"name":"GPU Particles","username":"VoidChicken","description":"500 particles on the GPU.\nLeft click to apply force on the particles.","likes":13,"published":1,"flags":32,"usePreview":0,"tags":["2d","metaballs","particles"],"hasliked":0,"parentid":"","parentname":""}}