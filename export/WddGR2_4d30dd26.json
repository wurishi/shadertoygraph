{"ver":"0.1","info":{"id":"WddGR2","date":"1568882222","viewed":132,"name":"color transform","username":"Easy","description":"good","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv1 = (1.2*fragCoord.xy - iResolution.xy) /iResolution.y;\n    vec2 uv;\n\tuv.x = uv1.x*cos(1.0*iTime) - uv1.y*sin(1.0*iTime);\n    uv.y = uv1.x*sin(-1.1*iTime) + uv1.y*cos(1.3*iTime);\n    // Time varying pixel color\n    float r = 0.3 + 0.45*cos(0.923*iTime + 2.0 + sin(-uv.x+uv.y));\n\tfloat g = 0.45 + 0.27*sin(1.3*iTime + 4.0 + sin(2.0*uv.x) + smoothstep(0.0,1.0,cos(uv.y + uv.x)));\n    float b = 0.4 + 0.32*cos(-0.57*iTime + 6.0 + uv.x*1.8*uv.y);\n    vec3 col = vec3(b,r,g);\n    \n    //col = vec3(uv.x,uv.y,0.0);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}