{"ver":"0.1","info":{"id":"NdKfDD","date":"1664439296","viewed":113,"name":"rays xd (wip)","username":"ztarby","description":"forever wip thing...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["colors","abstract","rainbow","bad","weird","idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define MOS sqrt(abs(iMouse.x)) + sqrt(abs(iMouse.y))\n\nvec3 nosse(float algo, float mas) {\n  \n  float algas = sign(algo) + cos(mas) ;\n  return vec3(algas,algo,mas);\n  \n}\nvec3 nose(vec3 equis , vec3 equis2) {\n  \n  vec3 nanan = equis * equis2 + 0.5 + exp(cos(equis)) / exp(cos(equis2))  ;\n  return nanan;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy / sin(iResolution.x + iResolution.y  );\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)) + nosse(uv.x,uv.y) * uv.xyx;\n    \n    float ch = sin(sign(iTime * uv.x / uv.y)) + 5.0 - col.x * sin( col.y - col.z * 1.5 )    ;\n    \n    vec3 test = sin(iTime + uv.xyx * cos( 3.0  * ch * 0.6  ) * cos( -3.0 * ch * 0.5  )) \n    * cos(nosse(uv.x , ch) * 0.2) * cos(nosse(ch , uv.y) * 0.1) - vec3(2,1,3) ; //- MOS;\n    test = test + 0.5;\n   \n    \n    vec3 colo =  uv.xyx * nose(col,test) / nosse(uv.x , uv.y) * normalize( nose(test,col)) * col ;\n    //colores cool\n     colo =  exp(normalize(colo))  / length(colo) ;\n    \n\n    // Output to screen\n    fragColor = vec4(colo,1.0);\n}","name":"Image","description":"","type":"image"}]}