{"ver":"0.1","info":{"id":"WtKSWh","date":"1582606414","viewed":91,"name":"Broccoplasma","username":"FreeFull","description":"Messing around with stacked sine waves.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ROT (iTime/50.0)\n\nconst float tau = atan(1.0)*8.0;\n\n// https://iquilezles.org/articles/palettes\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvec3 color(float t) {\n    t = mod(t, 1.0);\n    return palette(t, vec3(0.5), vec3(0.5), vec3(1.0, 0.7, 0.4), vec3(0.00, 0.15, 0.20));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n\n    uv.x += iTime/100.0;\n    \n    vec3 col = vec3(sin(uv.x) + sin(uv.y));\n    for(int i=0; i<6; i++) {\n        float fi = float(i);\n        uv *= 3.0;\n        uv *= mat2(cos(fi*ROT), -sin(fi*ROT), sin(fi*ROT), cos(fi*ROT));\n        col += (distance(sin(uv.x + cos(uv.y*10.0)/10.0 + iTime),cos(uv.y + cos(uv.x*10.0)/10.0)))/\n            \tpow(1.85, fi);\n    }\n    col += 0.8;\n    col *= col;\n    col = color(col.x/35.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}