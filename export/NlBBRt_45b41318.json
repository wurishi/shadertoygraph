{"ver":"0.1","info":{"id":"NlBBRt","date":"1652562409","viewed":258,"name":"Nebular plasma","username":"Dubswitcher","description":"Another voronoi test, this time focusing on iterations of voronoi added on top of each other.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","test","texture","background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(in vec2 uv){\n    return fract(sin(dot(uv, vec2(14.478473612, 53.252567))) * 37482.1);\n}\n\nvec2 hash2(in vec2 uv)\n{\n    vec3 o = fract(vec3(uv.yxx*893.335)*vec3(0.146651, 0.185677, 0.135812));\n    o += dot(o.zxy, o.yzx+60.424);\n    return fract((o.yx+o.zy)*o.xz);\n}\n\nfloat voronoi (in vec2 uv, in float zPos, in float seed, in float blend)\n{\n    float build = 0.;\n    float dist = 0.;\n    for (float x = -2.; x <= 2.; x++)\n    {\n        for (float y = -2.; y <= 2.; y++)\n        {\n            vec2 cell = vec2(x,y);\n            vec2 ID = floor(uv)-cell+seed;\n            float rand = (zPos+hash(ID))*(hash(ID)*0.5+0.5);\n            float B = fract(rand);\n            vec3 offs = vec3(floor(rand),ceil(rand),B*B*(3.-2.*B));\n            vec2 point = mix(hash2(ID+offs.x),hash2(ID+offs.y),offs.z);\n            \n            float distP = distance(point,fract(uv)+cell)-2.;\n            build = mix(distP,build,smoothstep(build-blend,build+blend,distP));\n        }\n    }\n    return build+2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    float scale = 0.7;\n    float rescale = 1.3;\n    float scalebright = 0.4;\n    float m = 0., s = 0., h = 0., t = 0., cn = 0.;\n    float vo1 = 0.;\n    float vo2 = 0.;\n    \n    for (int i = 0; i < 8; i++) {\n        m = float(i)/rescale+1.;\n        s = float(i)*2.231+1.31354;\n        h = 1./(float(i)/scalebright+1.);\n        t = iTime*(float(i)/2.+1.)/4.;\n        vo1 += voronoi((uv*m)/scale+hash2(vec2(float(i))+0.4443),t,s,0.)*h;\n        vo2 += voronoi((uv*m)/scale+hash2(vec2(float(i))+0.4443),t,s+0.4123,0.)*h;\n        cn += h;\n    }\n    \n    vec3 col = vec3(vo1/cn) * vec3(1.0,0.5,0.0);\n    col += vec3(vo2/cn) * vec3(0.0,0.5,1.0);\n    col = clamp(pow(col,vec3(3.))*3.,0.,1.);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}