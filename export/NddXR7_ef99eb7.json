{"ver":"0.1","info":{"id":"NddXR7","date":"1632861383","viewed":68,"name":"Flag of Brazil...","username":"lestat","description":"Flag of Brazil.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["flag","brazil"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define green vec3(0., 0.608, 0.227)\n#define yellow vec3(1., 0.875, 0.)\n#define blue vec3(0., 0.153, 0.463)\n\nfloat sdRhombus(in vec2 p)\n{\n    vec2 s = vec2(0., 0.2);\t    // Point on the Y-axis\n    vec2 t = vec2(0.2, 0.088);\t// Point on the X-axis\n    vec2 absP = abs(p);\n    vec2 ps = absP - s;\n    vec2 ts = t-s;\n    float h = dot(ps, ts)/dot(ts, ts);\n    vec2 l = ts * h;     \t\t// Vector l by taking ratio of ts\n    vec2 x = s + l;\t\t\t\t// Point x on the edge of the rhombus obtained by adding vector l to the point on the Y-axis\n    vec2 d = absP - x;\n    return length(max(d, vec2(0))) + min(max(d.x, d.y), 0.0); // Distance\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy);\n    uv -= 0.5;\n    \n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    \n    float sphereDist = length(uv);\n    float rhombusDist = sdRhombus(1.3*uv);\n    \n    vec3 col;\n    col = mix( yellow, green, smoothstep(0., 2./iResolution.y, rhombusDist-0.25) );\n    col = mix( blue, col, smoothstep(0., 2./iResolution.y, sphereDist-.25) );\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}