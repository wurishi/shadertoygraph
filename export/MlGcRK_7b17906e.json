{"ver":"0.1","info":{"id":"MlGcRK","date":"1536887248","viewed":222,"name":"Underwater Motion Start","username":"Shadeyboi","description":"I thought I would try and recreate an underwater effect like moving under a wave, super work in progress.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Sphere - Signed Distance Function\nfloat sphere(vec3 p, float radius){\n    return length(p)-radius;\n}\n\n\n\n\n// Locate objects\nfloat map(vec3 p)\n{    \n    // Sphere radius\n    float sphereSize = 0.5;\n    \n    // Transform coordinate space so spheres repeat\n    vec3 q = fract(p * 1.4) * 2.2 - .9;\n    \n     int tx = int(q.x);\n    float fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).z; \n\tfft *= 1.7;\n    // Signed distance of sphere\n    float s = sphere(q, sphereSize);\n    \n    float d = 0.4 * (cos(q.x*fft) * sin(q.y*fft) * tan(q.z*fft) );\n    //return s +wave;\n    return s+d;\n}\n\n\n// Trace rays\nfloat trace(vec3 origin, vec3 r) \n{\n  float t = 0.0; // Distance Traveled\n    for (int i = 0; i < 32; ++i) {\n        vec3 p = origin + r * r * t;\n        float d = map(p); // Locate object\n        t += d / 1.3; // Step along the ray\n    }\n    return t; \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(1.25, 0.235, 0.134);\n    \n    uv = uv *2. - 1.0; // Remap the space to -1. to 1.\n    uv.x /= iResolution.x/iResolution.y;\n\n   \t// Create ray to fire into scene\n   \tvec3 ray = normalize(vec3(uv, .9));\n    \n    // Create origin of scene\n    vec3 origin = vec3(0., 0.,iTime);\n   \n    \n    // Trace any objects in the scene\n    float t = trace(origin, ray);\n    \n    // Generate fog based on distance from t\n    float fog = 1.0 / (1.0 + t * t * 0.3);\n    \n    // Final color with includes sdf + fog\n    vec3 fc = vec3(fog);\n\n\t\n    fc += cos((color)*1.6);\n    //fc -= tan(color);\n    // Output to screen\n    fragColor = vec4(fc,1.2);\n}\n","name":"Image","description":"","type":"image"}]}