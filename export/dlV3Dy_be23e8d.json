{"ver":"0.1","info":{"id":"dlV3Dy","date":"1684617485","viewed":69,"name":"Simple Falling Texture","username":"FryeUE","description":"stripped and simplified. All credit to Inigo Quilez for the original approach.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["easy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on previous shader by inigo quilez - iq/2013, here. https://www.shadertoy.com/view/XsX3Rn\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// refactored slightly by FryeUE.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -.5 * iResolution.xy)/iResolution.y;\n    //timer\n    float t = iTime * .02;\n    //rotation matrix\n    uv = mat2(cos(t),-sin(t),sin(t),cos(t)) * uv;\n    //line that defines the horizon, swap fragColor comments to see :).\n    vec2 line = vec2(uv.x, 1.0)/abs(uv.y) + iTime;\n//swap these comments to see the horizon line.\n    fragColor = vec4(texture(iChannel0, 1. * line).xyz*abs(uv.y)*.8,1.0) *3.5;\n    //fragColor = vec4(line.xy*abs(uv.y)*.8,1.0, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}