{"ver":"0.1","info":{"id":"flfXWX","date":"1626638979","viewed":83,"name":"sun_ball_shine","username":"SORJ","description":"ball and sun","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sunshine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n    float r2 = iResolution.y * iResolution.x / 36.0;\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*sin(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    float dx = 0.0;\n    float dy = 0.0;\n    float xsun = iResolution.x / 2.0;\n    float ysun = iResolution.y;\n    dy = iResolution.y / 2.0;\n    dx = iTime * iResolution.x / 5.0;\n    int a = int(dx) % int(iResolution.x + 250.0);\n    dx = float(a);\n    dx -= 120.0;\n    float g = 0.8;\n    float rast = (xsun - uv.x) * (xsun - uv.x) + (ysun - uv.y) * (ysun - uv.y); \n    rast = sqrt(rast);\n    float k = ((uv.x - dx)* (uv.x - dx) + (uv.y - dy) * (uv.y - dy)) - r2;\n    //if (abs(k) < 1000.0) \n    //{\n    //   col = vec3(0, 0.0, 0.0);\n    //}\n    if(k < 0.0)\n    {\n        col = vec3(iResolution.x / 8.0 / rast, iResolution.x / 8.0 / rast, 0.1);\n    }\n    else \n    {\n        col = vec3(iResolution.x / 15.0 / rast,iResolution.x / 15.0 / rast, 0.0);\n    \n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}