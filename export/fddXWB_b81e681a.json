{"ver":"0.1","info":{"id":"fddXWB","date":"1633879776","viewed":60,"name":"I messed up but it looks cool","username":"ninofiliu","description":"I was attempting to visualize a cube of points in 3D but it looked like I messed up somewhere, looks cool tho","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    const float zoom = 1.0;\n    vec3 camera = vec3(1.0*vec2(cos(iTime), sin(iTime)), 1.0);\n    vec3 lookAt = vec3(0.0, 0.0, 0.0);\n    \n    vec2 uv = (fragCoord - (iResolution.xy / 2.0)) / iResolution.y;\n    vec3 c = normalize(lookAt - camera);\n    vec3 u = vec3(c.y, -c.x, 0.0);\n    vec3 v = normalize(vec3(c.z*c.x, c.z*c.y, c.x*c.x+c.y*c.y));\n    vec3 ray = normalize(c + (uv.x * u + uv.y * v) / zoom);\n    \n    fragColor = vec4(vec3(0.0), 1.0);\n    \n    int nb = 10;\n    for (int xi = 0; xi < nb; xi++) {\n        for (int yi = 0; yi < nb; yi++) {\n            for (int zi = 0; zi < nb; zi++) {\n                vec3 point = vec3(\n                    float(xi)/float(nb),\n                    float(yi)/float(nb),\n                    float(zi)/float(nb)\n                );\n                float dp = dot(ray, normalize(point-camera));\n                if (dp > 0.999) {\n                    fragColor.rgb += vec3(0.1);\n                }\n            }\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}