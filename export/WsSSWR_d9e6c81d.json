{"ver":"0.1","info":{"id":"WsSSWR","date":"1553311941","viewed":578,"name":"Hypno Ball","username":"kubiak","description":"Just a hypnotizing ball of green.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["noise","ball","scary","spooky","hypnotize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 calcNormal(vec2 center, vec2 pos, float radius) {\n    vec2 rpos = pos - center;\n    rpos = rpos / radius;\n    float z = sqrt(1.0 - rpos.x*rpos.x + rpos.y*rpos.y);\n    \n    return -vec3(rpos.x, rpos.y, z);\n}\n\n\nvec2 hash( vec2 p ) {\n\tp = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\n\nfloat noise( in vec2 p ) {\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\tvec2 i = floor(p + (p.x+p.y)*K1);\t\n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n    vec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot(n, vec3(70.0));\t\n}\n\nbool intersectsBall(\n    vec2 p2, \n    vec2 center, \n    float radius, \n    float noiseAmp,\n    float noiseFreq,\n    float edgeWidth,\n    out float edginess) {\n    \n    float n = noise(p2 * noiseFreq + iTime) * noiseAmp;\n    radius += n;\n    vec2 to = p2 - center;\n    float l = length(to);\n    edginess = 0.0;\n    \n    if(l < radius && l > (radius - edgeWidth)) {\n        edginess = 1.0 - (radius - l) / edgeWidth;\n    }\n    return l < radius;\n}\n\n#define STEPS 20.0\n#define STEP (1.0 / STEPS)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\tp = p;\n    \n    vec2 p2 = p * 1.0;\n    float aspect = iResolution.x / iResolution.y;\n\tp2.x *= aspect;\n    p2.y = 1.0 - p2.y;\n    \n    float radius = 0.45;\n    vec2 center = vec2(0.5 * aspect, 0.5);    \n    \n    vec4 col;    \n    vec3 normal = calcNormal(center, p2, radius);\n\n    \n    float edginess = 0.0;\n    if(intersectsBall(p2, center, radius, 0.015, 5.0, 0.1, edginess)) {\n     \n        float e = edginess;\n        \n        col = mix(vec4(0.6, 1.0, 0.6, 1.0), vec4(0.0, 0.0, 0.0, 0.0), e);\n        \n        vec4 edgeColor = vec4(0.95, 1.0, 0.75, 1.0);\n        \n        \n        for(float i = 1.0; i < 25.0; i+= 1.0) {\n            \n            radius *= 0.9;\n            if(intersectsBall(p2, center, radius, 0.0325, 8.0, 0.01, edginess)) {\n                float e = edginess * edginess;\n                col = mix(vec4(STEP*i*0.135, STEP*i, STEP*i*0.1235, 1.0), edgeColor, e);\n            }\n        }\n        \n    }\n    else \n    {        \n        col = vec4(0.0);\n    }\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}