{"ver":"0.1","info":{"id":"sslGWX","date":"1616673026","viewed":102,"name":"2D Transform: check borders","username":"csaez","description":"Proof of concept","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["transform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float angle)\n{\n\tfloat s = sin(angle);\n\tfloat c = cos(angle);\n\treturn mat2(c, -s, s, c);\n}\n\nvec4 grid(vec2 uv, vec2 size)\n{\n    float d = floor(.05f * uv.x * size.x) + floor(.05f * uv.y * size.y);\n    vec3 c = (mod(d, 2.f) == 0.f) ? vec3(.1f) : vec3(.9f);\n    return vec4(c, 1.f);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 scale = vec2(.6f + (.4f * sin(2.f * iTime)));\n    vec2 translation = vec2(cos(iTime), 0.f);\n    vec2 pivot = vec2(.9f, .5f);\n    \n    vec2 uv = fragCoord / iResolution.y;\n    vec2 p = uv - pivot;\n    p += translation;\n    p *= rotate(iTime);\n    p /= scale;\n    p += vec2(.5f, .5f);\n\n    float t = p.x < 0.f || p.x > 1.f || p.y < 0.f || p.y > 1.f ? 1.f : 0.f;\n    fragColor = mix(texture(iChannel0, p), grid(uv, iResolution.yy), t);\n}","name":"Image","description":"","type":"image"}]}