{"ver":"0.1","info":{"id":"dd2GRW","date":"1667324599","viewed":107,"name":"Geometric Series Square Tiling","username":"jt","description":"Previous versions:\n[url=https://www.shadertoy.com/view/7dScRG]1/4+1/16+1/64+1/256+...[/url]\n[url=https://www.shadertoy.com/view/fd2czy]Textured Geometric Series[/url]\n[url=https://www.shadertoy.com/view/Ds23zD]Textured Geometric Series Coords[/url]\n","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["square","tiling","infinite","geometric","textured","loopless","series","sum","telescoping"],"hasliked":0,"parentid":"Ds23zD","parentname":"Textured Geometric Series Coords"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/dd2GRW Geometric Series Square Tiling 2022-11-01 by jt\n// based on https://www.shadertoy.com/view/Ds23zD Textured Geometric Series Coords\n// based on https://www.shadertoy.com/view/fd2czy Textured Geometric Series\n// based on https://www.shadertoy.com/view/7dScRG 1/4+1/16+1/64+1/256+...\n\n// tags: infinite, geometric, textured, loopless, series, sum, telescoping, square, tiling\n\n// see https://en.wikipedia.org/wiki/Geometric_series\nvec2 geometric_series_coords(vec2 p, float n)\n{\n    float n1 = n - 1.0;\n    float b = n / n1;\n    vec2 s = floor(log2(p)/log2(b));\n    return fract(p/pow(b,max(s.x,s.y))*n1);\n}\n\nvoid mainImage(out vec4 o, vec2 i)\n{\n    vec2 R = iResolution.xy;\n    i -= R / 2.0;\n    float n = floor((0.5 - 0.5 * cos(iTime)) * 10.0 + 2.0);\n    //o = vec4(fract(sign(i)*geometric_series_coords(abs(i),n)),0,1);\n    o = texture(iChannel0, fract(sign(i)*geometric_series_coords(abs(i),n)));\n}\n\n/*\nvoid mainImage(out vec4 o, vec2 u)\n{\n    vec2 s = floor(log2(u));\n    if(s.x > s.y) return vec4(u/exp2(s.x) - vec2(1,0), 0, 1);\n    if(s.x < s.y) return vec4(u/exp2(s.y) - vec2(0,1), 0, 1);\n    //if(s.x == s.y)\n    return vec4(u/exp2(s.x) - vec2(1,1), 0, 1);\n}\n*/\n","name":"Image","description":"","type":"image"}]}