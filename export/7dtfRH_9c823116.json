{"ver":"0.1","info":{"id":"7dtfRH","date":"1656068878","viewed":163,"name":"pow & diff","username":"ChunderFPV","description":"Just playin with math.  Utilizing sine function to visualize infinite series.  Here we can see the power function series and square root difference grid.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","math","power","difference","series"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 6.0\n#define R iResolution.xy\n#define PI radians(180.0)\nvec3 map(vec3 c, float n, float t, float w, bool i) // color, gradient, time, width, reciprocal\n{\n    float g = min(abs(n), 1.0/abs(n));\n    float s = abs(sin(n*PI-t));\n    if (i) s = min(s, abs(sin(PI/n+t)));\n    return (1.0-pow(abs(s), w))*c*g*sqrt(2.0/w)*2.0;\n}\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    float t = iTime/4.0;\n    vec4 m = iMouse; m.xy = m.xy*2.0/R-1.0; // ±1x, ±1y\n    if (m.z > 0.0) t += m.y*SCALE; // move time with mouse y\n    float z = (m.z > 0.0) ? pow(1.0-abs(m.y), 4.0*sign(m.y)): 1.0; // mouse y zoom\n    \n    vec3 bg = vec3(0); // black background\n    \n    float aa = 3.0; // anti-aliasing\n    for (float j = 0.0; j < aa; j++)\n    for (float k = 0.0; k < aa; k++)\n    {\n        vec3 c = vec3(0);\n        vec2 o = vec2(j, k)/aa;\n        vec2 uv = (U-0.5*R+o)/R.y*SCALE*z;\n        float x = uv.x;\n        float y = uv.y;\n        float f_pow = log(abs(y))/log(abs(x)); // power (exponent)\n        float f_dg = x*x-y*y; // sqrt diff grid\n        vec3 gold = vec3(0.8, 0.5, 0.0);\n        c = max(c, map(gold+sign(f_pow)*0.25, f_pow, t, 0.1, true));\n        c = max(c, map(gold, f_dg, t, 0.1, true));\n        \n        bg += c;\n    }\n    bg /= aa*aa;\n    \n    bg *= sqrt(bg)*1.4; // brightness & contrast\n    O = vec4(bg, 1.0);\n}","name":"Image","description":"","type":"image"}]}