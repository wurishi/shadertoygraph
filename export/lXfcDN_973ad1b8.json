{"ver":"0.1","info":{"id":"lXfcDN","date":"1726179299","viewed":58,"name":"Polar hexagonal","username":"Elsio","description":"Eu queria colocar assim \"Polar hexagonal future base for another fun truchet shader\" mas tem limite de caracteres e não deu. talvez não dê nem aqui, que também tem","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["grid","math","colors","hexagon","geometry","pattern"],"hasliked":0,"parentid":"XcBBDh","parentname":"hex pattern explained"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi acos(-1.)\n#define TAU (2.* pi)\n#define t iTime\n\nvoid mainImage(out vec4 o, vec2 u){\n    vec2 r = iResolution.xy;\n         u = (u - r / 2.) / r.y;\n         \n    //u *= 6.;\n    //if(false)\n    u = vec2(\n           atan(u.x, u.y) + t * .1,\n           log(length(u)) + cos(t * .3) - t * .3\n        );\n\n    float g = 24.;\n    u = fract(u / TAU) * g;\n    \n    u.y /= g/39.;\n    u += u.x;  \n    \n    \n    vec2 k = floor(u);   \n    u -= k;              \n    \n    float d = mod(k.x + k.y, 3.);     \n    \n    k -= step(u + 1., u.yx + d);\n    \n    \n    o = mod(k.xyyy + 1., .4) * 3.\n            //* (1. - length(u + .3) * .5)  // shadows\n                + .0                 // brights\n                ;\n    o.g = d / 3.;\n                \n}","name":"Image","description":"","type":"image"}]}