{"ver":"0.1","info":{"id":"ctG3RR","date":"1683395526","viewed":189,"name":"RGB my pixels immigration guide","username":"tomachi","description":"red pulls left, green to the right, yellow straight ahead.\nblue pulls down. white goes up.","likes":3,"published":1,"flags":34,"usePreview":0,"tags":["webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tex0(pos) texture(iChannel0, pos)\n#define tex1(pos) texture(iChannel1, pos)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 p = tex0(uv);\n    fragColor = p + tex1(uv)*0.5;\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define tex0(pos) texture(iChannel0, pos)\n#define tex1(pos) texture(iChannel1, pos)\n#define tex2(pos) texture(iChannel2, pos)\n#define thresh 0.56\nbool isWhite(vec4 col) {\n    if (col.r > thresh && col.g > thresh && col.b > thresh) { return true; } else { return false; }\n}\nbool isBlack(vec4 col) {\n    if (col.r < 1.-thresh && col.g < 1.-thresh && col.b < 1.-thresh) { return true; } else { return false; }\n}\nbool isRed(vec4 col) {\n    return (col.r*thresh > col.g && col.r*thresh > col.b);\n}\nbool isGreen(vec4 col) {\n    return (col.g*thresh > col.r && col.g*thresh > col.b);\n}\nbool isBlue(vec4 col) {\n    return (col.b*thresh > col.r && col.b*thresh > col.g);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 p = vec3(vec2(1.25)/iResolution.xy, 0.);\n    vec3 col = vec3(0.);\n    vec4 buff = tex0(uv);\n    vec4 cam = tex1(uv);\n    vec4 img = tex2(vec2(uv.x + cam.r - cam.g, uv.y + cam.b));\n\n   // col =  (cam + (tex0(vec2(uv.x + cam.r - cam.g, uv.y + cam.b))*0.859) - img).rgb;\n    vec4 check = tex0(vec2(uv.x, uv.y - p.y));\n      \n    if (isBlack(buff)) { \n\n        col.r = tex0(vec2(uv.x , uv.y+ p.y)).r;\n        col.g = tex0(vec2(uv.x , uv.y+ p.y)).g;\n        col.b = tex0(vec2(uv.x , uv.y+ p.y)).b;\n        col += img.rgb*0.52;\n\n    } \n    if (isWhite(check) && isBlack(cam)) {\n        col = check.rgb*0.95;\n    } else if (isBlack(vec4(col, 1.))) { col = check.rgb*.98; \n    } else if (isWhite(vec4(col,1.))) { col *= 0.5;\n    } else if (isRed(check)) { col = tex1(vec2(uv.x + p.x, uv.y)).rgb;\n    } else if (isBlue(check)) { col = tex1(vec2(uv.x , uv.y + p.y)).rgb; }\n    \n\n\n    if (isWhite(buff)) { \n        col = tex1(vec2(uv.x, uv.y - p.y)).rgb*.89;\n    } else if (isBlack(cam)) { \n        col = tex2(vec2(uv.x, uv.y - p.y*2.)).rgb*0.125;\n    } \n    \n    if (isRed(cam)) {\n        col = tex0(vec2(uv.x + p.x, uv.y)).rgb * vec3(1.05, thresh, 1.);\n    } else if (isGreen(cam)) {\n        col = tex0(vec2(uv.x - p.x, uv.y)).rgb * vec3(1., 1.05,thresh);\n    } else if (isBlue(cam)) {\n        col = tex0(vec2(uv.x, uv.y + p.y)).rgb * vec3(thresh, 1., 1.05);\n    }\n\n\n    if (iMouse.z > 0.) { \n        col *= 0.01978;\n        //col += 0.991*vec3(tex2(iMouse.xy).r, tex2(iMouse.xy).g, 0.5);\n    }\n    \n    fragColor = vec4(col, 1.);//+(cam*0.0125);\n}","name":"Buffer A","description":"","type":"buffer"}]}