{"ver":"0.1","info":{"id":"l32XzR","date":"1710233509","viewed":63,"name":"grid_learn","username":"lck898989","description":"a grid demo learn","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["smoothstep","fract","step","max"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define blur 0.2\n\nfloat grid(vec2 uv) {\n    float gridWidth = 50.;\n    float space = 10.;\n    \n    float totalWidth = gridWidth + space;\n    // uv.y *= sin(uv.x + iTime) * 0.5 + 0.5;\n    vec2 gridPos = fract(uv / totalWidth);\n    \n    float w = space / totalWidth;\n    \n    float lineX = smoothstep(w - blur,w,gridPos.x);\n    float lineY = smoothstep(w - blur,w,gridPos.y);\n    \n    return lineX * lineY;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy;\n    \n    vec3 red = vec3(1.,0.,0.);\n\n    float g = grid(uv);\n    // Output to screen\n    fragColor = vec4(red * g,1.0);\n}","name":"Image","description":"","type":"image"}]}