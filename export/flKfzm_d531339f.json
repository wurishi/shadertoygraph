{"ver":"0.1","info":{"id":"flKfzm","date":"1664270344","viewed":77,"name":"frist-3d","username":"Kolya142","description":"discription: my frist 3d;\nupdate: add correct func;\nupdate: add color;\nupdate: two circles;\nPS: move the camera (mouse) to see the scene;","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec3 ro, vec4 pos) {\n    return length(ro-pos.xyz)-pos.w;\n}\nfloat scenes(vec3 p, vec3 ro) {\n    float d1 = circle(ro, vec4(.5, .5, 1.7, abs(sin(iTime))));\n    float d2 = circle(ro, vec4(.3, .5, 1.2, .5));\n    return min(d1, d2);\n}\nvec3 met(vec3 ro, vec3 p) {\n    return vec3(normalize(ro-p));\n}\nvec3 caster(vec3 p, vec3 ro) {\n    vec3 p1 = p;\n    //return ro;\n    for (int iter = 0;iter<20;iter++) {\n        float dist = scenes(p, ro);\n        if (dist < .03) {return met(ro, vec3(dist));}\n        p += ro * dist;\n    }\n    return vec3(0.);\n}\nvec2 cor(vec2 po) {float res = iResolution.x/iResolution.y;return po*vec2(res,0.);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv = cor(uv);\n    vec3 p = vec3(.0, -5., .0);\n    vec3 ro = vec3(uv-vec2(.5, .0), .005);\n    vec2 m = iMouse.xy/iResolution.xy;\n    m = cor(m);\n    ro += vec3(m+vec2(.1, 0.), length(m));\n\n    // Time varying pixel color\n    vec3 col = caster(p, ro);\n\n    // Output to screen\n    fragColor = vec4(col,.0);\n}","name":"Image","description":"","type":"image"}]}