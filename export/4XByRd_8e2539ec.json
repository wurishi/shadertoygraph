{"ver":"0.1","info":{"id":"4XByRd","date":"1727554604","viewed":32,"name":"Analogue clock","username":"rattlehead","description":"Just a simple analogue clock made from circles and straight lines.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["clock","minimalistic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// code_21.txt\n// Clock\n\n#define PI 3.14159\n\nfloat line(vec2 uv, vec2 a, vec2 b)\n{\n    vec2 ab = b - a;\n    vec2 av = uv -  a;\n    float l = dot(av, ab) / dot(ab, ab);\n    l = clamp(l, 0.0, 1.0);\n//    return length(a + ab * l - uv);\n    return length(av - ab * l);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.x;\n// setup\n    float time = iDate.w;\n    float steepness = 0.3;\n    float smoothness = 6. / iResolution.x;\n    vec3 col = vec3(0);\n// seconds calculation\n    float seconds = time;\n    seconds = floor(seconds) + smoothstep(1.0 - steepness, 1.0, fract(seconds));\n    seconds *= PI / 30.0;\n// minute calculation\n    float minutes = time / 60.0;\n    minutes = floor(minutes) + smoothstep(1.0 - steepness * 0.02, 1.0, fract(minutes));\n    minutes *= PI / 30.0;\n// hour calculation\n    float hours = time / 3600.0;\n    hours = floor(hours) + smoothstep(1.0 - steepness * 0.02, 1.0, fract(hours));\n    hours *= PI / 6.0;\n\n////////// DRAWING //////////\n\n// circumcircle\n    col += smoothstep(smoothness, 0.00, abs(length(uv) - 0.5) - 0.006);\n\n    vec2 p;\n    float d;\n\n// hour handle\n    p = vec2(sin(hours), cos(hours));\n    d = line(uv, -0.075 * p, 0.25 * p) - 0.014;\n    col += smoothstep(smoothness, 0.00, d);\n\n// minute handle\n    p = vec2(sin(minutes), cos(minutes));\n    d = line(uv, -0.075 * p, 0.42 * p) - 0.008;\n    col += smoothstep(smoothness, 0.00, d);\n\n// second handle\n    p = vec2(sin(seconds), cos(seconds));\n    d = line(uv, -0.075 * p, 0.42 * p) - 0.004;\n    col += smoothstep(smoothness, 0.00, d);\n\n\n// hour markers\n    hours = atan(-uv.x, -uv.y) + PI;\n    hours = mod(hours + PI / 12.0, PI / 6.0) - PI / 12.0;\n    uv = length(uv) * vec2(sin(hours), cos(hours));\n    col += smoothstep(0.02, 0.02 - smoothness, length(uv - vec2(0.0, 0.483)));\n\n// minute markers\n    minutes = atan(-uv.x, -uv.y) + PI;\n    minutes = mod(minutes + PI / 60.0, PI / 30.0) - PI / 60.0;\n    uv = length(uv) * vec2(sin(minutes), cos(minutes));\n    col += smoothstep(0.01, 0.01 - smoothness, length(uv - vec2(0.0, 0.489)));\n\n// center circle\n    col += smoothstep(smoothness, 0.00, length(uv) - 0.03);\n\n// tint stuff red\n    col.gb *= smoothstep(0.00, smoothness, length(uv) - 0.03);\n    col.gb *= smoothstep(0.00, smoothness, d);\n\n// return color\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}