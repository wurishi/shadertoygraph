{"ver":"0.1","info":{"id":"wtc3zN","date":"1575914590","viewed":1676,"name":"drawing circles with shaders","username":"robotwizard","description":"trying out circles\n\nedit1:antialiasing attempt 1","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\n/*\nfirst attempt at circle function\n\nfloat Circle(vec2 p, vec2 c, float radius){\n \tfloat b = abs((length(p-c)-radius)*50.);\n    float a = -log(mix(0.,1.,b));\n    return a;\n}\n*/\n\n\n// Antialiasing suggested by FabriceNeyret2\nfloat Circle(vec2 point, vec2 centre, float radius,float width){\n \t\n    float a = -abs(length(point-centre)-radius)+width;\n    \n    float blur = (width*1000./iResolution.y);\n    \n    float b = S(0.-blur,0.+blur,a);\n    return b;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n    uv = (uv-.5)*5.;\n    \n    vec2 coords = fract(uv);\n    vec2 id = floor(uv);\n    \n    float m = 0.;\n\n    m+=Circle(coords,vec2(0.5,0.5),.45,.01);\n    \t\n    vec3 col = vec3(m);\n    \n    \n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}