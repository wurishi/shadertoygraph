{"ver":"0.1","info":{"id":"7dKyR3","date":"1655311183","viewed":136,"name":"StarField no Texture","username":"modern_shinobi","description":"star field generated by pseudo random noise","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spheres","glsl","shadows","raytrace","multiple"],"hasliked":0,"parentid":"NdGcR3","parentname":"RayTracing Reflections"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// I'm using simple random functions to generate \n// a simple yet beautiful starry sky\n// Lot of features to be added :D\n\n// Some tunable parameters\nfloat blinkSpeed = 1.5;\nfloat minBrightness = 0.2;\nfloat bgSpeed = 0.1;\nfloat bgStrength = 0.1;\n\n\nfloat PI = 3.141592653589793238;\n\n\nfloat RandFloat1(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat RandFloat2(vec2 co)\n{\n    return abs(sin(dot(co.xy ,vec2(12.9898,78.233))));\n}\n\nvec3 StarField(vec2 coord, in float cellSize, in float starProb, in vec2 starVel, float offset)\n{\n    //fragCoord += iTime;\n    vec3 col = vec3(0);\n    \n    if (cellSize > 1.0)\n    {\n        vec2 cell = coord - mod(coord, cellSize);\n        float rnd = RandFloat1(cell + offset);\n        if (rnd > 1.0-starProb){\n            vec2 center = cell + cellSize/2.0;\n            vec2 factor1 = (2.0 / abs(coord - center));\n            vec2 factor2 = cos(PI*(coord - center)/(cellSize/1.0));\n            float factor = pow(factor1.x*factor1.y, 1.5) * pow(factor2.y * factor2.x, 2.0+5.0*RandFloat2(cell));\n            col = vec3(1,1,1) * factor;\n            col = clamp(col, 0.0, 1.0);\n            col *= 1.0 + minBrightness + sin(iTime*blinkSpeed + RandFloat1(cell)*PI/2.0);\n        }\n    }\n    else\n    {\n        // Normalized pixel coordinates (from 0 to 1)\n        vec2 uv = (coord + offset - 0.5*iResolution.xy)/iResolution.y;\n        float rnd = RandFloat1(uv);\n        if (rnd > 1.0-starProb){\n            col = vec3(1,1,1);\n        }\n    }\n    \n    return col;\n}\n\n\n// Main Function\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 starVel = vec2(1,2);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.xy;\n    \n    // Background color\n    vec3 col = vec3(0);\n    vec3 bg = vec3(0);\n    bg.x = 0.5+0.5*sin(-1.57+uv.x*2.0*1.57 + iTime*bgSpeed);\n    bg.y = 0.5+0.5*sin(uv.y*uv.x*1.57 + iTime*bgSpeed);\n    bg.z = 0.5+0.5*cos(-1.57+uv.y*2.0*1.57 + iTime*bgSpeed);\n    col += bg * bgStrength;\n    \n    // Create multi leveled star field\n    col += StarField(fragCoord, 11.0, 0.003, starVel, 3.6);\n    col += StarField(fragCoord, 7.0, 0.0035, starVel, 1.3);\n    col += StarField(fragCoord, 3.0, 0.001, starVel, 1.3);\n    col += StarField(fragCoord, 1.0, 0.001, starVel, ceil(iTime/0.1));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}