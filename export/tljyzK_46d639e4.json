{"ver":"0.1","info":{"id":"tljyzK","date":"1594866192","viewed":64,"name":"mandelbrot deforme v2","username":"jorge2017a1","description":"mandelbrot deforme v2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrotdeformev2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//modifcado por jorge flores.p.  --2020-jul\n//jorge2017a1\n\nint mandelbrotv1(vec2 uv) \n{\n    vec2 z = uv;\n    vec2 c=uv;\n    int numSteps = 256;\n    \n    int i;\n        \n    \n    for ( i = 0; i < numSteps; i++) \n    {\n        \n        if (dot(z, z) > 4.0) return i*10;\n        \n        \n        // (x+yi)^2 = (x+yi) * (x+yi) = x^2 + (yi)^2 + 2xyi = x^2 - y^2 + 2xyi\n        if (i==120)\n           c=c+vec2(-0.25,-0.2);       \n           z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        \n    }\n    \n    float r = (i == numSteps ? 0.0 : float(i)) / 100.0;\n    \n    \n    return 0;\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Screen coordinate, roughly -2 to +2\n    vec2 uv = (fragCoord.xy*2.0 - iResolution.xy) * 2.0/ iResolution.x;\n    \n    \n    \n    \n    float scale = 2.0;\n    //vec2 translate = vec2(0.16,0.0252);\n    vec2 translate = vec2(-0.7485,0.1);\n    vec2 z, c;\n    \n    scale = 0.0001;\n    scale += abs(pow(sin(iTime*0.2),4.0)*2.0);\n    \n    c.x = 1.3333 * (uv.x - 0.5) * scale + translate.x;\n    c.y = (uv.y - 0.5) * scale + translate.y;\n\n    \n    \n    // Evaluate mandelbrot for this coordinate.\n    \n    float ret = float( mandelbrotv1(c)); \n    \n     vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // Turn the iteration count into a color.\n    if (ret>0.0 )\n\tfragColor = vec4(sin(vec3(0.1, 0.2, 0.5) * ret), 1);\n    else\n     fragColor = vec4(col , 1);\n    \n}","name":"Image","description":"","type":"image"}]}