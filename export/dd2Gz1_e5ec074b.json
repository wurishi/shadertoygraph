{"ver":"0.1","info":{"id":"dd2Gz1","date":"1667553255","viewed":76,"name":"fractalTestAdam","username":"tacos_au_chili","description":"a mandelbrot fractal with effect","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 puv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    \n    col += texture(iChannel0,uv).rgb;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Adapt precision to zoom\n#define MAX min(int(sqrt(zoom)),200)\n#define PI 3.14159265359\n#define SPEED 0.5\nfloat colCurve(float v){\n    v=mod(v,6.0);\n    v=clamp(0.0,min(v,6.0-v)-1.0,1.0);\n    return v;\n}\nvec3 genCol(float v){\n    return vec3(colCurve(v),colCurve(v+2.0),colCurve(v+4.0));\n}\nfloat fractal(vec2 pos,float zoom,vec2 zoomPos){\n    pos=(pos-zoomPos)/zoom+zoomPos;\n    float c_r = pos.x;\n    float c_i = pos.y;\n    float z_r = 0.0;\n    float z_i = 0.0;\n    int i = 0;\n         \n    while ((z_r*z_r + z_i*z_i < 4.0) && (i < MAX)){\n        float tmp = z_r;\n        z_r = (z_r*z_r - z_i*z_i) + c_r;\n        z_i = 2.0*z_i*tmp + c_i;\n        i++;\n    }\n\n    if (i == MAX)\n        return 0.0;\n    else return float(i);\n        \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 fuv = (fragCoord-iResolution.xy/2.0);\n    vec2 fmouse = (iMouse.xy-iResolution.xy/2.0)/iResolution.x*5.0;\n\n    vec3 col = vec3(1);\n    \n    float v = mod(iTime*SPEED,9.0)+1.0;\n    float a = fractal(fuv,pow(v+1.0,v+1.0),vec2(-1.0,0.30348888));\n    \n    col = genCol(a/3.14/2.0+iTime*SPEED);\n    if(a==0.0)col=vec3(0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}