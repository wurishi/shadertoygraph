{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"/*\nAddendum (08/01/25): Maybe converting RGB to HSV and using the \"V\" for all three RGB components\nyields more accurate results. I will keep the original version of this shader intact, however,\nso that my learning process remains intact.\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Get the average pixel color (R + G + B) / 3 (3 color components)\n    vec4 col = texture(iChannel0, uv);\n    float grayscale = (col.x + col.y + col.z) / 3.0;\n    \n    // Output to screen\n    fragColor = vec4(grayscale, grayscale, grayscale, col.w);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4fVBDG","date":"1734397220","viewed":32,"name":"Learning: Simple Grayscale Image","username":"TheCreator","description":"Just a quick shader experiment to make sure I understand grayscaling (is that even a word?) correctly. It seems I do. Now to move on to more complex image processing...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grayscale","learning","image"],"hasliked":0,"parentid":"","parentname":""}}