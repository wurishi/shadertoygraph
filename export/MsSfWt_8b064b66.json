{"ver":"0.1","info":{"id":"MsSfWt","date":"1502709074","viewed":171,"name":"Spherical Sampling","username":"Ultraviolet","description":"Distributing small spheres on a big sphere.\nClick to control the number of spheres.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["sphere","sampling","fibonacci"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GAMMA 2.2\n#define M_PI 3.1415972\n\nvec3 sunDir = normalize(vec3(1.0, 0.0, 0.0));\nvec3 sunCol = vec3(1.0);\n\nvec3 spherePosition = vec3(0.0);\nfloat sphereRadius = 1.0;\n\n\nvec3 fibonacciSample(int i, int nb_samples)\n{\n    float rnd = 0.0;\n    float offset = 2.0/float(nb_samples);\n    float increment = M_PI * (3.0 - sqrt(5.0));\n\n    float y = (float(i) * offset) - 1.0 + (offset / 2.0);\n    float phi = mod(float(i) + rnd, float(nb_samples)) * increment;\n\n    float r = sqrt(1.0 - y*y);\n    float x = cos(phi) * r;\n    float z = sin(phi) * r;\n\n    return vec3(x, y, z);\n}\n\nmat3 setCamera( in vec3 ro, in vec3 ta, float cr )\n{\n\tvec3 cw = normalize(ta-ro);\n\tvec3 cp = vec3(sin(cr), cos(cr),0.0);\n\tvec3 cu = normalize( cross(cw,cp) );\n\tvec3 cv = normalize( cross(cu,cw) );\n    return mat3( cu, cv, cw );\n}\n\nvec3 getSky(vec3 rd)\n{\n    return pow(texture(iChannel0, rd).xyz, vec3(GAMMA));\n}\n\nbool intersection(vec3 ro, vec3 rd, out vec2 t, vec3 spherePosition, float sphereRadius)\n{\n    float delta = pow(dot(rd, ro) - dot(spherePosition,rd), 2.0) - (dot(spherePosition, spherePosition)+dot(ro,ro)-2.*dot(spherePosition, ro)-sphereRadius*sphereRadius);\n    \n    if(delta < 0.0)\n    \treturn false;\n    \n    delta = sqrt(delta);\n    float t1 = dot(spherePosition, rd) - dot(rd, ro) - delta;\n    float t2 = t1 + 2.0*delta;\n    \n    t.x = max(0.0, t1);\n    t.y = t2;\n    \n    return true;\n}\n\n// Thanks IQ for this one\n// https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec3 render(vec3 ro, vec3 rd)\n{\n    vec3 col = getSky(rd);\n    float r = 0.1;\n    int nbSphere = int(iMouse.x/iResolution.x*100.0)+4;\n    \n    if (iMouse.x < 0.5)\n        nbSphere = int(50.0+50.0*cos(iTime))+4;\n    \n    float t_bk = 100.0;\n    int i_inter = -1;\n    vec3 n = vec3(0.);\n    for(int i=0; i<nbSphere; ++i)\n    {\n    \tvec3 c = fibonacciSample(i, nbSphere);\n        vec2 t;\n        if(intersection(ro, rd, t, c, r) && t_bk > t.x)\n        {\n            t_bk = t.x;\n            n = normalize(ro+rd*t.x - c);\n            i_inter = i;\n            \n        }\n    }\n    \n    if(i_inter != -1) {\n        vec3 s_col = hsv2rgb(vec3(mod(float(i_inter)/sqrt(3.0), 1.), 1.0, 1.0));\n        //int N = 6;\n        //vec3 s_col = hsv2rgb(vec3(float((i_inter%N))/float(N), 1.0, 1.0));\n        //vec3 s_col = hsv2rgb(vec3(float(i_inter)/float(nbSphere), 1.0, 1.0));\n        col = s_col*(0.2+0.8*max(0.0, dot(n, sunDir))) + vec3(pow(max(0.0, dot(reflect(sunDir, n), rd)), 128.0));\n    }\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy)/ iResolution.y;\n\n    vec2 m = iMouse.xy/iResolution.xy;\n        \n    // camera & ray\n    float phi = iTime*0.2;\n    float psi = M_PI*0.5;\n    vec3 ro = 2.0*vec3(cos(phi)*sin(psi), cos(psi), sin(phi)*sin(psi));\n\tvec3 ta = vec3(0.0);\n    mat3 ca = setCamera( ro, ta, 0.0 );\n    vec3 rd = ca * normalize( vec3(p.xy,1.0));\n    \n    \n    vec3 col = render(ro, rd);\n    \n    col = pow(col, vec3(1.0/GAMMA));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}