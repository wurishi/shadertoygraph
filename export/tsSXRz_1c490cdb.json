{"ver":"0.1","info":{"id":"tsSXRz","date":"1552664886","viewed":156,"name":"2D art primitive","username":"flyingrub","description":"2D art primitive, inspired by pixelspiritdeck","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","primitive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pixel_width 3./iResolution.y\n#define TAU 6.2831853071\n#define PI 3.14159265359\nfloat stroke(float d, float size, float width) {\n\treturn smoothstep(pixel_width,0.0,abs(d-size)-width/2.);\n}\n\nfloat xor(float a, float b) {\n\treturn a*(1.-b) + b*(1.-a);\n}\n\n\nfloat fill(float d, float size) {\n\treturn smoothstep(pixel_width,0.0,d-size);\n}\n\nfloat circleSDF(vec2 uv) {\n\treturn length(uv);\n}\n\nfloat flip(float v, float pct) {\n\treturn mix(v,1.-v, pct);\n}\n\nvec2 rotate(vec2 _uv, float _angle){\n    _uv =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _uv;\n    return _uv;\n}\n\nfloat vesicaSDF(vec2 uv, float w) {\n\tvec2 offset = vec2(w*.5,0.);\n    return max(circleSDF(uv+offset), circleSDF(uv-offset));\n}\n\n\nfloat polygonSDF(vec2 _uv, float sides) {\n\t// Angle and radius from the current pixel\n\tfloat a = atan(_uv.x,_uv.y)+PI;\n\tfloat r = TAU/float(sides);\n\n\treturn cos(floor(.5+a/r)*r-a)*length(_uv);\n}\n\nfloat bridge(float c, float d, float s, float w) {\n\tc*= smoothstep(0.0,0.05,abs(d-s)-w*0.4);\n    return c+stroke(d,s,w);\n}\n\nfloat drawHope(vec2 uv) {\n\treturn fill(vesicaSDF(uv,.2),.3);\n}\n\nfloat drawMerge(vec2 uv) {\n\tvec2 offset = vec2(.3,0);\n    float left = circleSDF(uv+offset);\n    float right = circleSDF(uv-offset);\n    return flip(stroke(left,.5,.05), fill(right,.5));\n}\n\nfloat drawMagician(vec2 uv) {\n\tfloat color = .0;\n    uv.x *= -sign(uv.y); \n    vec2 offset = vec2(.3,0);\n    float left = circleSDF(uv+offset);\n    float right = circleSDF(uv-offset);\n    color += stroke(left,.4,.05);\n    return bridge(color, right,.4,0.05);\n}\n\nfloat drawElders(vec2 uv) {\n    float n = 3.;\n    float a = TAU/n;\n    float color=0.;\n    for (float i = 0.;i<n*2.;i++) {\n    \tvec2 xy = rotate(uv,a*i);\n        xy.y -= 0.2;\n        float vsc = vesicaSDF(xy,.6);\n        color = mix(\n            color+stroke(vsc,.5,.1),\n            mix(color, bridge(color,vsc,.5,.1),step(xy.x,0.0)-step(xy.y,.0)),\n            step(3.,i)\n            );\n    }\n    return color;\n}\n\nfloat smoothmodulo(float a) {\n\treturn abs( mod(a, 2.) - 1.);\n}\n\nfloat draw(vec2 uv) {\n    return stroke(smoothmodulo(polygonSDF(uv,3.)*10.+ .3*iTime),1.,.2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv = uv*2.-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    float index = floor((fract(iTime*0.05))*3.);\n    float color;\n    if (index == 0.) {\n        color = drawMerge(uv);\n    } else if (index == 1.) {\n        color = drawHope(uv);\n    } else if (index == 2.) {\n        color = drawMagician(uv);\n    }\n    color = drawMagician(uv);\n\n    fragColor = vec4(vec3(color),1.0);\n}","name":"Image","description":"","type":"image"}]}