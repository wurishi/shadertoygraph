{"ver":"0.1","info":{"id":"tlVcWz","date":"1708923061","viewed":56,"name":"Simple-Simplex Noise","username":"Handolf","description":"Simple Simplex Noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","simple","simplex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define DEBUG\n\nvec2 hash2( vec2 p ){\n    //normalized\n    return normalize(textureLod( iChannel0, (p + .5)/256., 0.).xy * 2. - 1.);\n}\n\nvec2 skew(vec2 uv){\n    //0.577350 ~ 2 / 3 * sqrt(3) * 0.5\n    //1.154700 ~ 2 / 3 * sqrt(3)\n    return vec2(uv.x * 1.1547, uv.y + uv.x * .57735);\n}\n\nvec2 inverseSkew(vec2 uv){\n    //0,433013 ~ sqrt(3) / 2 * 0.5\n    //0.866025 ~ sqrt(3) / 2\n    return vec2(uv.x * .866025, uv.y - uv.x * .5);\n}\n\nfloat simplex(vec2 uv)\n{\n    vec2 simplex_uv = skew(uv);\n    vec2 i = floor(simplex_uv);\n    vec2 f = fract(simplex_uv);\n    \n    float r_sq = 1.;\n    \n    vec2 p = (f.x > f.y)? vec2(1., 0.) : vec2(0., 1.);\n    \n    vec2 d1 = inverseSkew(f);\n    vec2 d2 = inverseSkew(f) - inverseSkew(vec2(1., 1.));\n    vec2 d3 = inverseSkew(f) - inverseSkew(p);\n    \n    return pow(max(0., r_sq - dot(d1, d1) ), 4.) * dot (d1, hash2(i) ) +\n           pow(max(0., r_sq - dot(d2, d2) ), 4.) * dot (d2, hash2(i + vec2(1., 1.) ) ) +\n           pow(max(0., r_sq - dot(d3, d3) ), 4.) * dot (d3, hash2(i + p) );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord / iResolution.xx;\n    \n    //displacement\n    uv -= iMouse.xy / iResolution.xy;\n    \n    //scale\n    uv *= 10.;\n\n    vec3 col = vec3(simplex(uv) * .5 + .5);\n    \n#ifdef DEBUG \n    vec2 f1 = fract(skew(uv));\n    vec2 f2 = fract(skew(uv * vec2(-1., 1.) ) );\n    \n    float size = .015;\n    vec3 col1 = vec3(0., 1., 0.);\n    \n    col = mix(col1, col, min( smoothstep(.0, size, f1.x), smoothstep(1., 1. - size, f1.x) ) );\n    col = mix(col1, col, min( smoothstep(.0, size, f1.y), smoothstep(1., 1. - size, f1.y) ) );\n    col = mix(col1, col, min( smoothstep(.0, size, f2.y), smoothstep(1., 1. - size, f2.y) ) );\n#endif\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}