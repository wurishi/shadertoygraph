{"ver":"0.1","info":{"id":"wlSBRD","date":"1598397754","viewed":261,"name":"Energy bolt","username":"lechuga","description":"a","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["lighting","energy","bolt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat MAX_DIST = 100.;\nfloat fog;\nfloat time;\nfloat adv;\n\nmat2 rot(float a){float aco = cos(a), asi = sin(a); return mat2(aco, asi, -asi, aco);}\nvec3 rep(in vec3 p, in vec3 s, out vec3 id){id = floor((p)/(s)-.5); return (fract((p)/(s)-.5)-.5)*s;}\nvec2 rep(in vec2 p, in vec2 s, out vec2 id){id = floor((p)/(s)-.5);return (fract((p)/(s)-.5)-.5)*s;}\nfloat rep(float p, float s, out float id){id = floor((p)/(s)-.5);return (fract((p)/(s)-.5)-.5)*s;}\n\nvec3 rep(in vec3 p, in vec3 s){return (fract((p)/(s)-.5)-.5)*s;}\nvec2 rep(in vec2 p, in vec2 s){return (fract((p)/(s)-.5)-.5)*s;}\nfloat rep(float p, float s){return (fract((p)/(s)-.5)-.5)*s;}\n\nfloat cil(in vec2 p, in float r){return length(p)-r;}\nfloat box(in vec3 p, in vec3 s){vec3 q = abs(p)-s; return max(q.x, max(q.y, q.z));}\n\n// colors\nvec3 backCol = vec3(.2, 0.15, 0.15);\nvec3 veinCol = vec3(.55, 0.55, .99);\nvec3 baseCol = vec3(0.6, .6554, .69);\nvec3 groundCol = vec3(0.345, .79, 0.143);\n\n// coords\nfloat veinCd = 0.;\nfloat baseCd = 0.;\nfloat groundCd = 0.;\n\n// code-in\nfloat ground(in vec3 p, in float r){\n  float d = p.y-r;\n  return d;\n}\n\n#define hbase 16.\nfloat baseTv(in vec3 p){\n  \n  float sp = 10.;\n  vec3 p1 = p;\n  float id;\n  p1.z = rep(p.z, 30., id);\n  p1.y -= hbase;\n  p1.xy *= rot(cos(id+time*.5)*6.+6.);\n  p1.x = abs(p1.x)-sp;\n  p1.y = abs(p1.y)-sp;\n  p1.xy *= rot(p1.y*0.09-15.);\n  vec3 rbox = vec3(.1, 5., 10.);\n  float tv = box(p1, rbox);\n  \n  return tv;\n}\n\n#define gp -5.\n#define g ground(p, gp)\n\nfloat rand(in vec3 p){\n  return fract(dot(dot(sin(p.x*134.004323435)*5.435435, sin(p.y*134.23434)*656.43), sin(p.z*9685.4578)*986956.43));\n}\n\nfloat rand(in vec2 p){\n    return fract(dot(sin(p.x*134.004323435)*5.435435, sin(p.y*134.23434)*656.43));\n}\n\nfloat rand(in float p){\n  return fract(sin(p*459.345435)*556.54645654);\n}\n\nfloat grass(in vec3 p, inout float d){\n  vec3 pgrass = p;\n  float sp = 5.;\n  vec2 gridId = floor((pgrass.xz/sp)-.5);;\n  float id = rand(gridId);\n  pgrass.xz = rep(pgrass.xz, vec2(sp));\n  pgrass.y -= gp;\n  pgrass.xz *= rand(id);\n  \n  float grass = box(pgrass, vec3(1., .5, 1.))*.39;\n\n  return grass;\n}\n\nfloat ray(in vec3 p){\n  vec3 p2 = p;\n  p2.y -= hbase+sin(p2.z*.15+time*30.)*2.;\n  p2.x -= sin(p2.z*.75+time*50.)*.5;\n \n  float vein = cil(p2.xy, sin(time*.5)*0.1);\n  return vein;\n}\n\nfloat map(in vec3 p){\n  \n  vec3 p1 = p;\n  float d=1.;\n  float baseTv = baseTv(p1)*.5;\n  baseCd +=  .05 / (5.+baseTv);\n  \n  \n  float gr = grass(p1, d);\n  groundCd += .001/(.5+gr*gr*gr);\n  \n  d = min(g, gr);\n  d = min(d, baseTv);\n  \n  vec3 p3 = p;\n  float vein = ray(p3);\n  veinCd += .4/(.6+vein*vein);\n  \n  d = min(d, vein); \n  \n  return d;\n}\n\nvoid cam(inout vec3 c){\n  c.x = sin(time)*40.;\n  c.z -= adv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \ttime = mod(iTime, 300.);\n    adv = time*100.;\n\tvec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n  \n  float y = 39.;\n\n  vec3 s = vec3(0., y, -3.);\n  \n  vec3 lk = vec3(-sin(time)*25.,y-.3,atan(sin(time))*175./PI);\n  vec3 cz = normalize(lk-s);\n  vec3 cx = normalize(cross(cz, vec3(0., -1., 0.)));\n  vec3 cy = normalize(cross(cz, cx));\n  \n  float fov = .5;\n  vec3 r = normalize(cx*uv.x+cy*uv.y+fov*cz);\n  cam(s);\n  \n  vec3 col = vec3(0);\n  vec3 p = s;\n  float d;\n  for(int i = 0;i < 100;i++){\n    d = map(p);\n   \n    if(abs(d) < 0.0001) break;\n    p+=d*r;\n  }\n  \n  fog = 1.-clamp(length(p-s)/MAX_DIST,0., 1.);\n  vec3 l = normalize(vec3(5., gp-5., -adv));\n\n  vec2 e = vec2(0.01, 0.);\n  vec3 n = normalize(map(p)-vec3(map(p-e.xyy),map(p-e.yxy),map(p-e.yyx)));\n  \n  float dif = max(0., dot(l,n));\n\n  col += vec3(dif);\n  col *= fog;\n  \n  \n  col += veinCd * veinCol;\n  col += smoothstep(0., 1., pow(baseCd, 5.) * pow(baseCol, vec3(2.)));\n  col += groundCd * groundCol * 3.;\n  \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}