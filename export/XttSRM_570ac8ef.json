{"ver":"0.1","info":{"id":"XttSRM","date":"1478818984","viewed":914,"name":"Feedback tunnel experiment","username":"FreeFull","description":"After setting up VLC to show record and show the screen, and messing around with its video effects, I decided to create a shader playing with feedback. Best viewed in fullscreen.\n\nClick to make a black circle appear on the screen.","likes":21,"published":3,"flags":32,"usePreview":0,"tags":["tunnel","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = pow(abs(texture(iChannel0, uv)),vec4(0.7));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 rotate(float angle) {\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x += sin(uv.y*10.0 + iTime*2.135)/100.0;\n    uv *= rotate(iTime/20.0);\n    vec2 uv_b = uv*0.9;\n    uv_b += sin(uv*10.0 + iTime)/10.0;\n    vec4 col;\n    if(length(uv_b) < 0.6) {\n        vec2 coord = uv;\n        coord *= 1.09 + sin(iTime*2.0)*0.01;\n        coord.x /= iResolution.x / iResolution.y;\n        coord = (coord + 1.0)/2.0;\n        col = texture(iChannel0, coord, 0.1)+0.01;\n        col.xy *= rotate(1.8);\n        col.yz *= rotate(-0.3);\n        col.zx *= rotate(1.6);\n        col = pow(abs(col),vec4(1.001));\n    } else {\n        col = vec4(pow(abs(length(uv_b)-0.61),0.1));\n        col *= vec4(0.5,1.0,0.2,1.0);\n    }\n    // Added as suggested by TimoKinnunen\n    if (iMouse.z>0.0) {\n        col *= clamp(distance(iMouse.xy,fragCoord)-0.04*iResolution.y,0.01,1.0);\n    }\n    fragColor = col;\n}","name":"Buf A","description":"","type":"buffer"}]}