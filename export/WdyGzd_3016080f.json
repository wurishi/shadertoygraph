{"ver":"0.1","info":{"id":"WdyGzd","date":"1570720510","viewed":223,"name":"Tilt shader","username":"afoksha","description":"Image tilt","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["imagefiltering","tilt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float pi = 3.1415926;\nconst float aspect = 4.0 / 3.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 ndc = 2.0 * fragCoord.xy / iResolution.xy - 1.0;\n    ndc.x *= aspect;\n\n    float angle = 2.0 * pi * iMouse.x / iResolution.x - pi;\n    \n    float cs = cos(angle);\n    float sn = sin(angle);\n    mat2 r = mat2(cs, sn, -sn, cs);\n    \n    vec2 ndc_t = r * ndc;\n    ndc_t.x /= aspect;\n    \n    vec2 uv = 0.5 + 0.5 * ndc_t;\n\n    vec3 color = texture(iChannel0, uv).rgb;    \n\n    if (ndc.y > -0.8)\n    {        \n        fragColor = vec4(color, 1.0f); \n    } \n    else \n    {\n\t  \tfragColor = (fragCoord.x < iMouse.x) ? \n            vec4(0.45, 0.21, 0.97, 1.0) : \n            vec4(0.07, 0.02, 0.25, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}