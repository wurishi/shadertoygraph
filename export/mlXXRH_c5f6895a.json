{"ver":"0.1","info":{"id":"mlXXRH","date":"1674263591","viewed":54,"name":"Plotting a function 2","username":"ianertson","description":"Just an experiment to plot a function","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","math","plot","plotting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TILE (iResolution.x/32.0)\n\nfloat snap(float v, float w) {\n    return floor(v * w) / w;\n}\n\nfloat plot(float y, vec2 uv, vec2 r, bool pixly) {\n    float v = y / r.y;\n    \n    \n    v = pixly ? snap(v, TILE) : v;\n    \n    float thick = 1.0/TILE;\n    float feather = thick*0.2;\n    \n    uv.y -= 0.5;\n    \n    float top = v-uv.y;\n    float bot = (v-thick)-uv.y;\n    return clamp(smoothstep(thick-feather, thick+feather, top) -\n     smoothstep(thick-feather, thick+feather, bot), 0.0, 1.0);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fc )\n{\n    vec3 col = vec3(0.56);\n    vec2 R = iResolution.xy;\n    vec2 uv = fc/iResolution.xy;\n    \n    float gx = float((fract(uv.x*TILE)) >= 0.9);\n    float gy = float((fract(uv.y*TILE)) >= 0.9);\n    \n    col = mix(col, vec3(0.8), gx);\n    col = mix(col, vec3(0.8), gy);\n    \n    vec4 m = iMouse * float(iMouse.z > 0.01);\n    float mx = m.x / R.x;\n   \n    float valueToPlot = (cos(((uv.x * (1.0+(mx*4.0)))+(iTime*0.2))*TILE)*24.0);\n    \n    float c = m.z > 0.01 ? m.x : (R.x*0.5);\n    bool left = fc.x <= c;\n    float plt = plot(valueToPlot, uv, iResolution.xy, left);\n    \n    col = mix(col, vec3(0.0), plt);\n    \n    float thick = 2.0;\n    col = mix(col, vec3(0.0), float(fc.x >= c-thick && fc.x <= c+thick));\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}