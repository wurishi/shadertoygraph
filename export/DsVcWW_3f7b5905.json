{"ver":"0.1","info":{"id":"DsVcWW","date":"1696133347","viewed":68,"name":"mirrored spheres","username":"shaderwho","description":"originally created by morisil, golfed/refactored by FabriceNeyret2, visually tweaked/edited by shaderwho.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic","trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// originally created by morisil, golfed/refactored by FabriceNeyret2, edited by shaderwho.\n#define R(a)   mat2(cos(a + vec4(0,33,11,0)))\n#define C(U,w) smoothstep( w, -w, sin(length(fract(P+U*.01)*2.-1.) * 3.) *.5  -.118 )\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  R = iResolution.xy, P,\n          U = ( u+u - R ) / min(R.x, R.y);\n    float d = length(U),  \n          t = iTime, i=0.,\n          w = .4 + sin(t * 5.52) * .3,\n          l = .5;\n    U *= R( sin(t*.114) * .3 )\n       * (sin(t * .15) + 2.) * 3.3;\n    U *= log(length(U)*1.428) * 1.1;\n    for ( O *= 0. ; ++i < 10.; l *= .6, w *= .63 ) \n        P = U + vec2(sin(t*.12), cos(t*.13)),\n        O = min( O + vec4( C(-U,w), C(0.,w), C(U,w), 0 ) * l, 1.),\n        U *= R( sin(t*.05) * 1.33 )\n           * ( 1.1 + C(0.,51.04) * 1.2 );\n  \n    O = pow(O, 1.+ mix( sin(t*vec4(.34,.37,.4,0) ),-sin(t*vec4(.43,.46,.49,0) ), d-.5) *.4*vec4(1,1,-1,0) ) \n        * smoothstep(2.1, .7, d);\n}","name":"Image","description":"","type":"image"}]}