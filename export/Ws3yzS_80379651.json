{"ver":"0.1","info":{"id":"Ws3yzS","date":"1601688417","viewed":185,"name":"ðŸŽ§ðŸ§  Listening to the mind... ","username":"rmmcal","description":"Inspiration: Gyroid - https://en.wikipedia.org/wiki/Gyroid","likes":13,"published":1,"flags":64,"usePreview":0,"tags":["gyroid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4t2GDV","filepath":"https://soundcloud.com/ahmed-gado-1/piano-nay-solo-turkish-music","previewfilepath":"https://soundcloud.com/ahmed-gado-1/piano-nay-solo-turkish-music","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////////\n////         ....  Listening to the mind...              ////\n/////////////////////////////////////////////////////////////\n// Brasil/Amazonas/Manaus\n// Created by Rodrigo Cal (twitter: @rmmcal)ðŸ§™ðŸ§ž\n// - Started: 2020/10 - Published: 2020/10\n// - https://www.shadertoy.com/view/Ws3yzS\n/////////////////////////////////////////////////////////////\n// -----------------------------------------------------------\n//\n//  Listening to the mind => ðŸŽ§ðŸ§ \n//  \n//\tPass: Mente&Ouvinte \n//  \n//      ... @rmmcal 2020/20 \n//\n//  Inspiration/Wiki: \n// \t=> https://en.wikipedia.org/wiki/Gyroid\n//  \n// -----------------------------------------------------------\n/////////////////////////////////////////////////////////////\n//\n\nfloat dist(vec3 p){\n    p *= 1.;\n    float d = 100.;\n\n    float a = p.z*fract(iTime*.1)*0.01;\n    d = 1.4-abs(sin(p.x)*cos(p.y)+sin(p.y)*cos(p.z)+sin(p.z)*cos(p.x))-cos(p.z*2.-fract(iTime)*3.1415926*2.)/120.;\n\n    vec3 tv = p*21.+iTime*3.;\n    vec3 ctv = cos(tv);\n    d += .02*( smoothstep(-1.0,1.5, .5 - abs(ctv.x + ctv.y + ctv.z)) ) *abs(fract(iTime*1.)*2.-1.)*2.;\n\n\td -=  texture(iChannel3,vec2(sqrt(abs(p.z*.01)),0.)).r*.1;\n  \n    return d;\n}\n\nvec3 normal3d(vec3 p)\n{\n  vec3 eps = vec3(.001,0.0,0.0);\n  vec3 nor;\n  float ref;\n  nor.x = dist(p+eps.xyy) - dist(p-eps.xyy);\n  nor.y = dist(p+eps.yxy) - dist(p-eps.yxy);\n  nor.z = dist(p+eps.yyx) - dist(p-eps.yyx);\n  return -normalize(nor);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time2 = (iTime*.5);\n    vec2 aspectRatio = vec2(1., iResolution.y/iResolution.x);\n\tvec2 uv = fragCoord/iResolution.xy; \n    vec2 p = (uv-.5)*aspectRatio;\n\n    vec3 cpos = vec3(0.0,0.0,-20.0);\n    vec3 cdir = vec3(0.0,0.0,  0.0);\n    \n    cpos += vec3(iTime/3.,0.0,(cos(iTime*.08)*11.)) * clamp(pow(iTime*.2,8.),0.,1.);\n    \n    vec3 ray = vec3(sin(p.xy)*1.,.5);\n   \n    vec3 g;\n    for (int i = 0; i < 250; i++)\n    {\n        float d = dist(cpos);\n        cpos += ray*d;\n        if (d < 0.01) break;\n        if (d > 128.) break;\n        g += vec3(1.,-0.3,.1)/(d*3000.);\n    }\n    vec3 n  = normal3d(cpos);\n    vec3 an  = abs(n);\n    \n    vec3 col = vec3(1.,0.7,0.)*vec3((an.x+an.y+an.z)*.4);\n    \n    col +=  vec3(4.,0.,10.)*vec3( smoothstep(-.2,01.5, .4-abs(cpos.z-fract(iTime*0.1)*20.+20.)) );\n   \n    vec3 tv = cpos*21.+iTime*3.;\n    vec3 ctv = cos(tv);\n    \n\tcol +=  vec3(0.,1.,1.)*vec3( smoothstep(-.0,5.5, 1.6-abs(cos(tv.y*.1)+cos(tv.x*.1)+cos(tv.z*.1)  )) );\n    col +=  vec3(0.4,.5,0.)*vec3( smoothstep(-3.0,2.5, .5 - abs(ctv.x + ctv.y + ctv.z)) );\n    col +=  vec3(1.,0.,01.)*vec3( smoothstep(-.0,1.5, .5 - abs(ctv.x + ctv.y + ctv.z)) );\n    col *= n.z*.3+.7;\n    col = mix( vec3(1.),col,smoothstep(-50.,40., -cpos.z));\n \n    vec3 neon = g*abs(fract(iTime*.2)*2.-1.)*.5;\n\tcol += neon;\n    col = mix( col, vec3(1.5)+ g*2., length(p)*1.2-.1);\n    \n    col = mix(vec3(0.5*length(col)), col , cos(iTime*.5)*clamp(0.,1.,iTime*.01));\n    col = mix(col,vec3(0.) ,   smoothstep(0.,1.,length(p)+1.-1.*clamp(0.,1.,iTime*.5)));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}