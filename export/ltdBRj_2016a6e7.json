{"ver":"0.1","info":{"id":"ltdBRj","date":"1540318913","viewed":238,"name":"Nerdery Vector Field","username":"JustinMullin","description":"An attempt to quickly reproduce the animated vector field effect at nerdery.com\n\nFeel free to mess with the constants at the top to get various effects. =)","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["vectorfield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float scale = 20.0;\n\nconst float freqA = 0.4;\nconst float freqB = 0.5;\nconst float freqC = 0.7;\nconst float freqD = 0.2;\n\nconst float freqModA = 0.2;\nconst float freqModB = 0.5;\nconst float freqModC = 0.3;\nconst float freqModD = 0.2;\n\nfloat distanceToSegment(vec2 a, vec2 b, vec2 v) {\n    vec2 vA = v - a;\n    vec2 bA = b - a;\n    float projection = clamp(dot(vA, bA) / dot(bA, bA), 0.0, 1.0);\n\treturn length(vA - bA * projection);\t\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / scale;\n    \n    vec2 offset = 2.0 * fract(uv) - 1.0;\n    vec2 vector = vec2(\n        0.5 * cos(iTime*freqA + floor(uv.x) * freqModA) +\n        0.5 * sin(iTime*freqB + floor(uv.y) * freqModB),\n        0.5 * sin(iTime*freqC + floor(uv.x) * freqModC) +\n        0.5 * cos(iTime*freqD + floor(uv.y) * freqModD)\n    );\n    \n    float strength = 1.0-distanceToSegment(vec2(0.0), vector, offset)*8.0;\n    fragColor = vec4(0.5 * strength);\n}","name":"Image","description":"","type":"image"}]}