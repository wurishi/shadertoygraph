{"ver":"0.1","info":{"id":"ddtyRM","date":"1694884574","viewed":211,"name":"uv light strobe","username":"Carandiru","description":"just modded for fun\noriginal shader  Interference Music Viz - Nguyen2007 https://www.shadertoy.com/view/dd3czM","likes":7,"published":3,"flags":0,"usePreview":1,"tags":["2d","music","light"],"hasliked":0,"parentid":"dd3czM","parentname":"Interference Music Visualizer"},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// original shader  Interference Music Viz - Nguyen2007 https://www.shadertoy.com/view/dd3czM\n\n// Tone Mapping\nvec3 tone(vec3 v)\n{\n    v *=  mat3(.564617, .304802, .152532,\n\t           .0790925, .75411, .169514,\n\t           .0282881, .11216, .862072);\n\n\tv =   (v * v + v * .0245786 - 90537e-9) / (v * v * .983729 + v * .432951 + .238081)\n        * mat3(1.60475, -.53108, -.07367,\n\t           -.10208, 1.10813, -.00605,\n\t           -.00327, -.07276, 1.07602);\n\n\treturn mix(1.055 * pow(v, vec3(1) / 2.4) - .055,\n               12.92 * v,\n               lessThan(v, vec3(.0031308)));\n}\n\n// Wavelength To RGB\nvec3 WaveToRGB(float w)\n{\n    #define g(m, s1, s2) exp(-.5 * pow((w - m) / ((w < m) ? s1 : s2), 2.))\n    vec3 xyz = vec3(1.056 * g(599.8, 37.9, 31.)\n                  +  .362 * g(442. , 16. , 26.7)\n                  -  .065 * g(501.1, 20.4, 26.2),\n              \n                     .821 * g(568.8, 46.9, 40.5)\n                  +  .286 * g(530.9, 16.3, 31.1),\n              \n                     1.217 * g(437. , 11.8, 36.)\n                  +   .681 * g(459. , 26. , 13.8));\n              \n    return max(xyz * mat3( 3.2405, -1.5372, -0.4986,\n                          -0.9689,  1.8758,  0.0415,\n                           0.0557, -0.204 ,  1.057), 0.);\n}\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    vec2 uv = abs(U / iResolution.xy - .5);\n    \n    float bn = textureLod(iChannel1, U/1024.0f, 0.0f).r * 0.5f + 0.5f;\n    \n    float t = 1.0f;\n    vec3 col = vec3(0);\n    \n    const float begin = 424.0f, end = 451.0f;\n    const float res = 1.0f/(end - begin);\n    \n    for(float i = begin; i < end; i += 1. / res)\n    {\n        float a = 100e-6 * i;\n        \n        #define S smoothstep\n        \n        #define height(v) (texture(iChannel0, vec2(2. * round(v / a) * a, 0)).x * .9 + .015)\n        float dt = 1.0f;\n        for(float x = a * ceil(-.5 / a); x < .5; x += a) {\n        \n        float h = height(x);\n        col += t * S(.5, 0., abs(x)) * WaveToRGB(i) / (1.618034e4 * pow(length(uv * vec2(1., .1 / h) - vec2(x, 0)), 2.) + .3);\n        dt *= exp(-1e2f * length(col) * h);\n       }\n       \n       float amp = 1e-3f * (1.0f - dt*dt);\n       col += col * dt * amp * bn + col * bn * amp * (17.0f/255.0f);\n       t *= dt;\n       \n   }\n    vec3 color = vec3(1.0f - t) * tone(col/res);\n    \n    O = vec4(pow(color, vec3(1.0f/2.2f)), 1);\n}","name":"Image","description":"","type":"image"}]}