{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\n\nvoid Cam( out vec3 camPos, out vec3 camTar, in float time, in float mouseX )\n{\n    float ur = 4.5;\n    float an = 0.05*iTime + 10.0*mouseX;\n    an = sin(iTime*.4)*1.2; \n\tcamPos = vec3(ur*sin(an),0.5,ur*cos(an)+iTime);\n    camTar = vec3(0.0,0.0,0.0);\n}\n\nmat3 LookAt( in vec3 ro, in vec3 ta, in float roll )\n{\n    vec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(sin(roll),cos(roll),0.0) ) );\n    vec3 vv = normalize( cross(uu,ww));\n    return mat3( uu, vv, ww );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy)/iResolution.y;\n    vec2 m = iMouse.xy/iResolution.xy;\n    vec3 ro, ta;\n    Cam( ro, ta, iTime, m.x );\n    mat3 camMat = LookAt( ro, ta,0.0);  \n\tvec3 rd = normalize( camMat * vec3(p.xy,2.0) ); \n\tvec3 col = vec3(0.,0.,0.);\n  \tconst float maxd = 20.0;\n\tconst float precis = 0.001;\n    float h = precis*2.0;\n    float tt = 0.0;\n\tfloat res = -1.0;\n    \n    for( int i=0; i<90; i++ )\n    {\n        if( h<precis||tt>maxd ) break;\n        vec3 pp = ro+rd*tt;\n        pp = mod(pp,2.0)-1.0;\n        vec3 o = pp*pp;      \n    \tfloat s = sqrt(o.x+o.y);//*1.2;\n    \ts = min(s, sqrt(o.x+o.z));\n    \ts = min(s, sqrt(o.y+o.z));\n    \tfloat modd = texture(iChannel0, vec2(.0,.0)).r*1.; \n    \tmodd += texture(iChannel0, vec2(.1,.1)).r*1.; \n    \to.y += modd*.2 - .061; \n    \ts = (o.x + o.y)*.5;\n    \th= s;        \n        tt += h;\n    }\n    \n    if( tt<maxd ) res = tt;\n    \n    float t = res;\n    vec3 pp = ro+rd*tt;\n    pp = mod(pp,2.0)-1.0;\n    vec3 o = pp*pp;      \n    float s = sqrt(o.x+o.y);//*1.2;\n    s = min(s, sqrt(o.x+o.z));\n    s = min(s, sqrt(o.y+o.z));\n    float modd = texture(iChannel0, vec2(.0,.0)).r*1.; \n    modd += texture(iChannel0, vec2(.1,.1)).r*1.; \n    o.y += modd*.2 ; \n    s = (o.x + o.y)*.5;\n    t = s;    \n    col = vec3(t*.4,t*.8,t*1.8);\n\n    fragColor = vec4( col, 1.0 );\n}\n    ","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"llXGR2","date":"1423284021","viewed":425,"name":"Visualiz","username":"StanRee","description":"Learning to trace rays!\nBased on paniq's: https://www.shadertoy.com/view/llfGRj","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raytraced"],"hasliked":0,"parentid":"","parentname":""}}