{"ver":"0.1","info":{"id":"ctKBDc","date":"1702615250","viewed":28,"name":"PaperFeel","username":"RedWool","description":"Tried to get a punk aesthetic with the textures given","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot (float a)\n{\n    return mat2(\n    cos(a), sin(a),\n    -sin(a), cos(a));\n}\n\nfloat hash (float i)\n{\n    return fract(sin(i*2029.319+832.4)*1203.428);\n}\n\nfloat noise (float t)\n{\n    float \n    i = floor(t),\n    a = hash(i),\n    b = hash(i+1.);\n    return mix(a, b, fract(t));\n}\n\nfloat fbm (float t)\n{\n    float\n    tot = 0.,\n    s = 1.,\n    l = 1.2,\n    p = 1.,\n    d = .3;\n    \n    for (int i = 0; i < 5; i++)\n    {\n        tot += noise(t * s) * p;\n        \n        s *= l;\n        p *= d;\n    }\n    \n    return tot;\n}\n\nfloat pPaper(vec2 uv)\n{\n\n    return fbm(uv.x*2.+noise(uv.x*3.+floor(iTime*3.)))*.2 + .8;\n}\n\nfloat sPaper(vec2 uv)\n{\n    return fbm(uv.x*5.+noise(uv.x*10.+floor(iTime*8.))+iTime)*\n           (.2 + noise(uv.y*10.+floor(iTime*8.))*.1) + .8;\n}\n\nvec3 detectEdge(vec2 uv, vec2 edge)\n{\n    vec2 ruv = uv * rot(noise(floor(iTime*1.5))*.05-.025);\n    uv = ruv + vec2(edge.x + pPaper(uv.yx)*sign(edge.x), edge.y + pPaper(uv)*sign(edge.y));\n    \n    float pct = step(.5,texture(iChannel0, uv * vec2(.16,1)-vec2(floor(iTime*1.)*.01,.5)).a),\n    opct = 0.;\n    \n    if (pct < .5)\n    {\n        edge *= .9;\n        ruv *= rot(noise(floor(iTime*1.5))*.1-.05);\n        uv = ruv + vec2(edge.x + pPaper(uv.yx)*sign(edge.x), edge.y + pPaper(uv)*sign(edge.y));\n        opct = step(.5,texture(iChannel0, uv * vec2(.16,1)-vec2(floor(iTime*1.)*.01,.5)).a);\n    }\n    \n    return texture(iChannel1, ruv).xyz * pct + texture(iChannel2, ruv).xyz *.7* opct +vec3(-1)*(1.-pct)*(1.-opct);\n}\n\nvec3 attachPaper(vec2 uv)\n{\n    vec3 pct;\n    for (int x = -1; x < 2; x++)\n    {\n        for (int y = -1; y < 2; y++)\n        {\n            pct = detectEdge(uv, vec2(x,y)*.03);\n            if (pct.x > -.5)\n            {\n                break;\n            }\n        }\n    }\n    return pct * (vec3(hash(floor(iTime)*3.1),hash(floor(iTime)),hash(floor(iTime)*5.3))*.6+.4);\n}\n\n/*\nvec3 paperTexture (vec2 uv)\n{\n    vec2 ruv = uv * rot(noise(floor(iTime*.5))*.05-.025),\n    r2uv = uv * rot(noise(floor(iTime*3.))*.07-.035);\n    \n    float pct = step(ruv.y, fbm(ruv.x*5.+noise(ruv.x*3.+floor(iTime*3.))+iTime)*.2 + .8),\n    opct = step(r2uv.y, fbm(r2uv.x*5.+noise(r2uv.x*10.+floor(iTime*8.))+iTime)*\n           (.2 + noise(r2uv.y*10.+floor(iTime*8.))*.1) + .80) * .6;\n    vec3 tot = \n    texture(iChannel1, ruv*.1).rgb * pct +\n    texture(iChannel2, r2uv).rgb * (1.-pct) * opct +\n    vec3(1) * (1.-pct) * (1.-opct);\n    return tot;\n    \n}\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel chttps://www.shadertoy.com/img/themes/classic/play.pngoordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n    \n    vec4 inp = texture(iChannel0, uv * vec2(.16,1)-vec2(floor(iTime*1.)*.01,.5)).rgba;\n    \n    vec3 edgeTest = attachPaper(uv);\n    \n    vec3 col = (inp.a < .5) ? edgeTest : inp.xyz;//vec3(step(fbm(uv.x*5.+iTime)*.2 + .8,uv.y));\n    \n    //+floor(texture(iChannel1, vec2(uv.x+iTime,0)).r*10.)*.1, uv.y)\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}