{"ver":"0.1","info":{"id":"csfXW2","date":"1669553205","viewed":70,"name":"Sn–æw","username":"maze_maze","description":"A simple procedural snow","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["procedural","snow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define read(P) texelFetch(iChannel0, P, 0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 U = ivec2(fragCoord);\n    \n    const int RADIUS = 8;\n    const int RADIUS_1 = RADIUS + 1;\n    \n    const float RADIUS_F = float(RADIUS);\n    \n    float minDist = RADIUS_F;\n    for (int x = -RADIUS; x < RADIUS_1; x++) {\n        for (int y = -RADIUS; y < RADIUS + 1; y++) {\n            ivec2 o = ivec2(x, y);\n            float d = length(vec2(o));\n            if (d < minDist)\n                if (read(U + o).x > 0.5)\n                    minDist = d;\n        }\n    }\n    float v = clamp(1. / (RADIUS_F - minDist) - .1, 0., 1.);\n    fragColor = mix(texture(iChannel1, fragCoord / iResolution.xy) * .2, vec4(1. - v), 1. - v);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define read(P) texelFetch(iChannel0, P, 0)\n\n#define noise2D(X, Y) float((X * 676769 ^ Y * 53769) * 676769) * 4.656613e-10\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 U = ivec2(fragCoord);\n    \n    fragColor = read(U);\n    if (read(U).x < .5 && read(U + ivec2(0, 1)).x > .5)\n        fragColor = vec4(1);\n    if (U.y > 0 && read(U).x > .5 && read(U - ivec2(0, 1)).x < .5)\n        fragColor = vec4(0);\n\n    if (read(U + ivec2(1, 0)).x > .5 && read(U + ivec2(1, 1)).x > .5)\n        fragColor = vec4(1);\n    if (read(U + ivec2(-1, 0)).x > .5 && read(U + ivec2(-1, 1)).x > .5)\n        fragColor = vec4(1);\n    \n    if (U.y == int(iResolution.y) - 1 && noise2D(U.x, floatBitsToInt(iTime)) > 0.996)\n        fragColor = vec4(1);\n}","name":"Buffer A","description":"","type":"buffer"}]}