{"ver":"0.1","info":{"id":"lctXW7","date":"1714276634","viewed":119,"name":"Moire star","username":"ChunderFPV","description":"It's just the other side of Moire falls (https://www.shadertoy.com/view/lf3XWN) but with hexagonal instead of square tiles and a slight color shift.  It's so low effort I almost didn't post but what the heck.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["3d","raymarch","interference","moire","hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Moire falls\" by ChunderFPV. https://shadertoy.com/view/lf3XWN\n\n// blend\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec4 a = texture(iChannel0, U/R, .5)*.5, // buffer a with mipmap blur\n         b = texture(iChannel1, U/R)*.2;     // buffer b\n    C = a+b - a*b;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Fork of \"Moire 3d template (hex)\" by ChunderFPV. https://shadertoy.com/view/McdSW7\n\n#define A(a) mat2(cos(a*6.2832 + vec4(0, -1.5708, 1.5708, 0)))  // rotate\n#define O(x,a,b) ((cos(x*6.2832)*.5+.5)*(a-b)+b)  // oscillate x between a & b\n#define H(v) O(radians(vec3(0, 45, 90))+(v), 1., 0.)  // hue\n\nvec2 hg(vec2 u) // hex grid (thanks Fabrice)\n{\n    vec2 o = vec2(.5, .866),\n         a = mod(u,   o+o)-o,\n         b = mod(u-o, o+o)-o;\n    \n    return dot(a,a) < dot(b,b) ? a : b;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float t = 2. + iTime/1e3,\n          d = 0., i = d, s, x, y, n;\n    \n    vec2 //R = iResolution.xy, h,\n         m = (iMouse.xy-.5*R)/R.y;\n    \n    if (iMouse.z < 1.) m = .4*cos(iTime/10. + vec2(1.57, 0)); // move mouse in a circle\n    \n    vec3 o = vec3(0, 0, -50./(m.y+1.)), // camera\n         u = normalize(vec3(U-R/2., R.y*.6)),\n         c = vec3(0), p, q;\n    \n    mat2 rh = A(m.x/2.), // rotate horizontal\n         rv = A((m.y+.5)/4.);   // vertical\n    \n    for (; i++<1e2;) // raymarch loop\n    {\n        p = o+u*d;\n        p.xz *= rh;\n        p.yz *= rv;\n        \n        q = p;\n        q.xy = p.xy-hg(p.xy/2.)*2.; // xy to hex\n        x = q.x; y = q.y; // rounded coords\n        n = sqrt(x*x + y*y); // pattern\n        p.z -= 5. - (sin(n*t*6.2832)-1.) * max(1., n*n*.002); // move & curve z\n        s = length(p-q*vec3(1,1,0)); // spheres\n        \n        if (s < 1e-3 || d > 1e3) break;\n        d += sqrt(s)*.5;\n        c += min(s, .004*sqrt(d/s)) * H(n*t+.1) * O(n*t, 1., .4);\n    }\n    \n    C = vec4(tanh(c*c*c), 1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// blur\n#define B(s) texture(iChannel1, mix(U/R, vec2(.5), s))*.95 + texture(iChannel0, U/R)\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    C = min(B(.004), B(-.004));\n}","name":"Buffer B","description":"","type":"buffer"}]}