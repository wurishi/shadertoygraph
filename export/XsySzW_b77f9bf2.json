{"ver":"0.1","info":{"id":"XsySzW","date":"1463026734","viewed":337,"name":"All 64 I Ching","username":"vamoss","description":"All 64 I Ching animated","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["ching","iching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//original work\n//https://www.shadertoy.com/view/ldVXzh\n\n//128 possibilities\n/*\nvec2 grid = vec2(16.0, 8.0);\nconst float slices = 7.;\n/**/\n\n//64 possibilities\n//*\nvec2 grid = vec2(16.0, 4.0);\nconst float slices = 6.;\n/**/\n\n//32 possibilities\n/*\nvec2 grid = vec2(8.0, 4.0);\nconst float slices = 5.;\n/**/\n\n//16 possibilities\n/*\nvec2 grid = vec2(8.0, 2.0);\nconst float slices = 4.;\n/**/\n\n//8 possibilities\n/*\nvec2 grid = vec2(4.0, 2.0);\nconst float slices = 4.;\n/**/\n\n//4 possibilities\n/*\nvec2 grid = vec2(2.0, 2.0);\nconst float slices = 2.;\n/**/\n\n//2 possibilities\n/*\nvec2 grid = vec2(2.0, 1.0);\nconst float slices = 1.;\n/**/\n\n#define pi 3.1415926\n#define two_pi 6.283185\n#define half_pi 1.570796\n\nfloat rectangle(vec2 uv, vec2 pos, float width, float height) {\n\treturn step(pos.x, uv.x) * step(uv.x, pos.x + width) * step(pos.y, uv.y) * step(uv.y, pos.y + height);\n}\n\nfloat iChing( vec2 uv , float time)\n{\n\tconst float vel = 0.3;\n\n    float index = slices - floor(slices * uv.y);\n    uv.y *= slices;\n    \n\t//mirror\n    if(step(uv.x, 0.5)==0.) uv.x = 1.-uv.x; \n    uv.x = fract(uv.x*2.);\n\t\n    //binary progression\n    float freq = pow(2., index-1.) * (iTime * -vel + time);\n    //*\n    float osc = freq;\n    for(float i=0.;i<slices;i++){\n        if(slices-i<index-1.) break;\n        osc = sin(sin(osc)*half_pi)*half_pi;//square curve\n    }\n    osc = sin(osc);\n\t/**/\n    //simplier version\n    //float osc = sin(sin(sin(sin(sin(freq)*half_pi)*half_pi)*half_pi)*half_pi);//square curve\n    osc = (osc+1.)/2.;\n    \n    vec2 pos = vec2(0.1, 0.15);\n    float width = 0.9+0.1*osc;\n    float height = 0.7;\n    \n    return rectangle(fract(uv), pos, width-pos.x, height);\n}\n\n//  Function from IÃ±igo Quiles \n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0, \n                     0.0, \n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 index = floor(grid * uv);\n    float index1D = index.x + index.y*grid.x;\n    uv *= grid;\n    \n    vec3 color = hsb2rgb(vec3(index1D*iTime*0.01,0.7,1.0));\n    \n    float iching = iChing(fract(uv), index1D/(grid.x*grid.y)*two_pi);\n    \n    fragColor = vec4(color*iching, 1.0);\n}","name":"Image","description":"","type":"image"}]}