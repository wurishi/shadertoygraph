{"ver":"0.1","info":{"id":"mlBfR3","date":"1694291350","viewed":253,"name":"Perspective Demo","username":"Xor","description":"How to add some perspective to your shaders","likes":20,"published":1,"flags":0,"usePreview":1,"tags":["demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Screen resolution\n    vec2 res = iResolution.xy;\n    //Pixel coordinates centered in the middle of the screen\n    vec2 pos = fragCoord - res*0.5;\n    //Perspective ratio\n    float ratio = cos(iTime);\n    //Compute uv coordinates with perspective ratio\n    vec2 uv = pos / (res - pos * ratio).y + 0.5;\n    \n    \n\n    //Sample texture at uv coordinates\n    fragColor = texture(iChannel0,uv);\n    \n    /*\n    vec2 grid = uv*5.0+0.5;\n    vec2 stripe = abs(fract(grid)-.5);\n    fragColor = vec4(res.y/2e2-.5*stripe / fwidth(grid), 0, 1);\n    */\n}","name":"Image","description":"","type":"image"}]}