{"ver":"0.1","info":{"id":"tdXBDl","date":"1589264657","viewed":621,"name":"LCD smoothed screenshot scaling","username":"ttg","description":"Enlarged screenshots of text usually appear colorful due to subpixel font smoothing ([url]https://www.shadertoy.com/view/3sXfDs[/url])\nProposed is very simple adjustment to resampling to undo the bias.\nSpace - Toggle adjustment\nS - Toggle font smoothing\n","likes":7,"published":3,"flags":48,"usePreview":1,"tags":["text","rgb","lcd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nEnlarged screenshots of text usually appear colorful due to subpixel font smoothing\n(https://www.shadertoy.com/view/3sXfDs)\nProposed is very simple adjustment to resampling to undo the bias.\n\nKeyboard:\nSpace - Toggle adjustment\n    F - Toggle filtering (linear)\n    S - Toggle font smoothing of source\n\n*/\n\nvoid mainImage( out vec4 fv, in vec2 fp ) {\n  ivec2 R = ivec2(iResolution.xy);\n  ivec2 fi = ivec2(fp);\n  int scale = 3;\n  \n  vec3 v = vec3(0.);\n  ivec2 m = ivec2(iMouse.xy);\n  if (m==ivec2(0)) {\n    m = (ivec2(6,7)*2+1)*16;\n    if (iResolution.y<256.) m -= 128; // preview fix\n  }\n\n  int split = min(512,R.x*2/3);\n  if (fi.x<split) v = texelFetch(iChannel0, fi, 0).rgb;\n  else {\n    for (int ch=0; ch<3; ch++) {\n      int o = 1-ch;\n      // SPACE: toggle correction\n      if (texelFetch(iChannel1, ivec2(32,2), 0).r>.5) o = 0;\n      ivec2 ii = (fi/scale+ivec2(o,0))/3;\n      v[ch] = texelFetch(iChannel0,\n        ii+m-ivec2(split+R.x,R.y)/(6*scale), 0)[ch];\n      if (texelFetch(iChannel1, ivec2(70,2), 0).r<.5) {\n        // F: toggle filtering\n        vec2 ip = (fp/float(scale)+vec2(o,0))/3.;\n        v[ch] = texture(iChannel0,\n          ( ip+vec2(m)-vec2(ivec2(split+R.x,R.y)/(6*scale)) )\n          / iResolution.xy )[ch];\n      }\n    }\n  }\n\n  fv = vec4(pow(v,vec3(1./2.2)),1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fv, in vec2 fp ) {\n  vec3 v;\n\n  if (iResolution.y<256.) fp += 128.; // preview fix\n\n  for (int ch=0; ch<3; ch++) {\n    vec2 fp = fp;\n    if (texelFetch(iChannel1, ivec2(83,2), 0).r<.5)\n      fp += vec2(1./3.,0.)*float(ch-1);\n    vec2 uv = fp/512.;\n    v[ch] = 1.-texture(iChannel0, uv).r;\n  }\n\n  fv.rgb = v;\n}\n","name":"Buffer A","description":"","type":"buffer"}]}