{"ver":"0.1","info":{"id":"lXXXRN","date":"1709194761","viewed":59,"name":"shuriken sdf","username":"akr51","description":"Fake metallic lighting using trig functions lol","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rot2d(vec2 uv, float t)\n{\n\n\n    return vec2(uv.x * sin(t) + uv.y * cos(t), uv.x * cos(t) - uv.y * sin(t));\n\n}\n\nfloat shuriken2D(vec2 uv)\n{\n    \n    uv = rot2d(uv, iTime * 0.25);\n    \n    // shuriken\n    vec2 ruv = rot2d(uv, -0.8);\n    float ax = abs(ruv.x);\n    float ay = abs(ruv.y);\n    \n    vec2 rruv = rot2d(uv, -2.555);\n    float bx = abs(rruv.x);\n    float by = abs(rruv.y);\n    \n    float j = -0.7;\n    \n    vec2 ruvi = rot2d(uv, 0.25);\n    float cx = abs(ruvi.x);\n    float cy = abs(ruvi.y);\n    \n    return smoothstep(-1.49, -1.51, max(abs(ax), abs(ay)) + j * max(abs(bx), abs(by)) - 2.0)\n    - smoothstep(0.41, 0.35, max(abs(cx), abs(cy)));\n    \n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    \n    uv *= 4.0;\n    \n    \n    \n    fragColor = vec4(vec3(shuriken2D(uv) * cos(uv.x + iTime) + sin(uv.y * 0.1 + iTime)), 1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}