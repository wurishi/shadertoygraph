{"ver":"0.1","info":{"id":"msl3zM","date":"1665890714","viewed":42,"name":"Q3 Visualisation","username":"ReinhardtC","description":"A","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["maths"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dE(vec2 x, vec2 y)\n{\n    return sqrt((x.x - y.x)*(x.x - y.x) + (x.y - y.y)*(x.y - y.y));\n}\n\nfloat d(vec2 x, vec2 y)\n{\n    if (abs(x.x - y.x) < 0.0015) return dE(x, y);\n    return x.y + y.y + dE(vec2(x.x, 0), vec2(y.x, 0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.yy;\n    if (uv.x > 1.) fragColor = vec4(0.5,0.5,0.5,1.);\n    else {\n        vec4 m = iMouse/iResolution.y;\n        if (d(m.xy, uv.xy) < 0.2) fragColor = vec4(1.,1.,1.,1.);\n        else fragColor = vec4(0.,0.,0.,0.);\n    }\n}\n","name":"Image","description":"","type":"image"}]}