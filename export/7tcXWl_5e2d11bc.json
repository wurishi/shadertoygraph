{"ver":"0.1","info":{"id":"7tcXWl","date":"1639967580","viewed":68,"name":"mandelbrot float breakdown","username":"jneen","description":"nice corners bro","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 bar(vec2 P) { return vec2(P.x,-P.y); }\nvec2 inv(vec2 P) { return bar(P)/dot(P,P); }\nvec2 sqr(vec2 P) { return vec2(P.x*P.x-P.y*P.y,2.*P.x*P.y); }\nmat2 rot(float a){ float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}\n#define nsin(X) (.5+.5*sin(X))\nvec2 uv;\nvec3 C = vec3(0);\n\n#define T (iTime *.1)\n\n#define gmix(A,B,Q) A*pow((B)/(A),Q)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \nfloat S = 0.;    \n    // Normalized pixel coordinates (from 0 to 1)\n    uv = fragCoord/iResolution.xy-.5;\n    uv.x *= iResolution.x/iResolution.y;\n    float Z = gmix(1.,1000000.,nsin(2.*T));\n    uv /= Z;\n    uv *= rot(T);\n    uv += vec2(.351203,.08000002);\n\n    vec2 z = vec2(0);\n    for (int i=0;i<130;i+=1) {\n        S += dot(z,z)/(1.+float(i*i));\n        z = sqr(z) + uv;\n        //if (dot(z,z) > 1000.) break;\n        if (dot(z,z) < mix(-.02, .000001, nsin(T))) break;\n    }\n    \n    C = vec3(1./S);\n    \n    //C.g = 1./float(N);\n    \n\n\n    // Output to screen\n    fragColor = vec4(sqrt(C),1.0);\n}","name":"Image","description":"","type":"image"}]}