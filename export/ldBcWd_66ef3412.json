{"ver":"0.1","info":{"id":"ldBcWd","date":"1494341650","viewed":98,"name":"Ring, ring, ring - xor","username":"DonKarlssonSan","description":"xor\n\nhttp://adrianboeing.blogspot.se/2011/01/xor-demoeffect-in-webgl.html","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CS(a) vec2(cos(a), sin(a))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    float phaseDiff = 2.22;\n    \n\tvec2 uv = (fragCoord.xy -0.5 * iResolution.xy) / iResolution.x * 2.0;\n    vec2 uv2 = vec2(uv);\n\n    float t = iTime;\n    vec2 xy = CS(t/2.2)/3.0 + CS(t*3.0)/5.0;\n    uv.xy += xy;\n\tfloat radius = length(uv);\n\tbool toggle = mod(radius, 0.1) > 0.05;\n    \n    float t2 = iTime + phaseDiff;\n    vec2 xy2 = CS(t2/1.7)/1.533 + CS(t2*2.34)/4.0;\n    uv2.xy += xy2;\n    float radius2 = length(uv2);\n    bool toggle2 = mod(radius2, 0.1) > 0.05;\n\n    bool xor = toggle != toggle2;\n    \n\tfragColor = vec4(xor, 0.0, xor, 1.0);\n}","name":"Image","description":"","type":"image"}]}