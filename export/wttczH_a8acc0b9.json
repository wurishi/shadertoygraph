{"ver":"0.1","info":{"id":"wttczH","date":"1608511403","viewed":89,"name":"Recursive christmas spheres","username":"fidlajka","description":"Christmas decoration, recursive function via stack using https://www.shadertoy.com/view/Xds3zM by iq","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["christmas","recursion","decoration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define M_PI 3.14159265358979323846\n\nfloat dstnc (vec2 A, vec2 B)\n{\n    return sqrt((A.x - B.x) * (A.x - B.x) + (A.y - B.y) * (A.y-B.y)); \n\n}\n\nstruct Banka\n{\n\tvec3 center;\n\tfloat r;\n    int side;\n    int level;\n};\n\nBanka stack[85];\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    fragColor = vec4(1.0,1.0,1.0,1.0);\n\n    vec4 red_dark = vec4(0.6,0.0,0.2,1.0);\n    vec4 red_light = vec4(0.8,0.0,0.0,1.0);\n    vec4 green_dark = vec4(0.047, 0.433, 0.160, 1.0);\n    vec4 green_light = vec4(0.074, 0.666, 0.215, 1.0);\n    vec4 gold_dark = vec4(0.831, 0.686, 0.215, 1.0);\n    vec4 gold_light = vec4(1.0, 0.8745, 0.0, 1.0);\n\n    float radius = iResolution.y/5.0;\n    vec2 center = iResolution.xy/2.0;\n      \n    stack[0] = Banka( vec3(center,0.0), radius, 4, 0);\n\tint s = 0;\n    \n    float near_z = 100000.0;\n    \n    for(int i=0; i<86; i++)\n    {\n        // pop from the stack\n\t\tBanka x = stack[s--];\n        \n        // render main banka\n\t\tfloat dist = dstnc(fragCoord, x.center.xy);\n        if(dist < x.r && x.center.z < near_z)\n        {\n            float t = dist/x.r;\n            if(x.level%2 == 0)\n            {\n                fragColor = green_light * (1.0-t) + green_dark *t;\n            }\n            else if (x.level%2 == 1)\n            {\n                fragColor = red_light * (1.0-t) + red_dark *t;\n                \n                if(x.level == 1)\n                {\n                  if (fragCoord.y < x.center.y + x.r*0.8 && fragCoord.y > x.center.y + x.r*0.6f)\n                  {\n                    fragColor = gold_light * (1.0-t) + gold_dark *t;\n                  }\n\n                  if (fragCoord.y > x.center.y - x.r*0.8 && fragCoord.y < x.center.y - x.r*0.6f)\n                  {\n                    fragColor = gold_light * (1.0-t) + gold_dark *t;\n                  }\n\n                  if (fragCoord.y < x.center.y + x.r*0.05f && fragCoord.y > x.center.y - x.r*0.05f)\n                  {\n                    fragColor = gold_light * (1.0-t) + gold_dark *t;\n                  }\n                }\n             }\n             \n             near_z = x.center.z;\n            \n          }\n                \n        // push new banky into the stack\t\t\n        \n        float new_r = x.r * 0.35;\n        float offset = x.r + new_r;\n        \n        if(x.level<3 && dist < 2.2*x.r) // 0-TOP, 3-BOTTOM, 1-RIGHT, 2-LEFT\n        {\n\t\t\tif(x.side!=3) {stack[++s] = Banka( vec3(x.center.x, x.center.y - offset, x.center.z + offset*sin(iTime)), new_r, 0, x.level+1 );}\n            if(x.side!=0) {stack[++s] = Banka( vec3(x.center.x, x.center.y + offset, x.center.z - offset*sin(iTime)), new_r, 3, x.level+1 );}\n            if(x.side!=2) {stack[++s] = Banka( vec3(x.center.x + offset*cos(iTime), x.center.y, x.center.z + offset*sin(iTime)), new_r, 1, x.level+1 );}\n            if(x.side!=1) {stack[++s] = Banka( vec3(x.center.x - offset*cos(iTime), x.center.y, x.center.z - offset*sin(iTime)), new_r, 2, x.level+1 );}\n        }\n        \n    \n    }\n        \n}","name":"Image","description":"","type":"image"}]}