{"ver":"0.1","info":{"id":"wldfzS","date":"1613333759","viewed":186,"name":"Puzzle","username":"theott","description":"experiment","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sinus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Wave(float x, float y, float f)\n{\n    float fx = sin(x) * 0.5 +.5;\n    fx = pow(fx, 1.);\n    if (abs(fx - y) < (sin(iTime) * 0.05 + 0.1)) {\n        return 1.;\n    }\n    return 0.;\n}\n\n\nfloat GetDist(vec3 p) {\n    return p.x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x -= 0.25;\n    uv.x *= iResolution.x/iResolution.y;\n    uv = fract(uv);\n    \n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    \n    // mouse controls\n    vec2 mo = vec2(iMouse.x * 6.28 / iResolution.x, iMouse.y * 3.14 / iResolution.y);\n    \n    // number of repetitions\n    float n = 50.;\n    // for each frequency\n    for (float i = 1.; i <= n; i++) {\n        vec3 nextcol = vec3(uv.x, uv.y, i/n);\n        nextcol *= i/n;\n        float x = Wave(uv.x * 6.283185307179586 * i + mo.x, uv.y, float(i));\n        float y = Wave(uv.y * 6.283185307179586 * i + mo.y, uv.x, float(i));\n        nextcol *= x * y;\n        if (col == vec3(0.)) {\n            col += nextcol;\n        }\n    }\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}