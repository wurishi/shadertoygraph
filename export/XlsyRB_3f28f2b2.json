{"ver":"0.1","info":{"id":"XlsyRB","date":"1506722084","viewed":227,"name":"Flying Hearts","username":"nr4","description":"Flying hearts for my great love :-*","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["heart","love"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/** Flying Hearts\n    Copyright (C) 2017  Alexander Kraus <nr4@z10.info>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst float PI = 3.14159;\n\nvec4 gradient(vec4 old, vec2 x, vec2 start, vec2 end, vec4 color1, vec4 color2)\n{\n    vec2 dir = dot(x-start, end-start)*(end-start);\n    float scale = length(dir)/length(end-start);\n    return color1+scale*(color2-color1);\n}\n\nvec4 heart(vec4 background, vec2 x, vec2 x0, float size)\n{\n    vec2 xa = (x-x0)/size;\n\n    if(abs(xa.x) > 1.) return background;\n    \n    vec2 wing = vec2(1.,2.);\n    if(xa.y<abs(xa.x)*wing.y/wing.x+xa.x/abs(xa.x)/15.*sin(2.*PI*xa.x)) return background;\n    \n    vec2 c = vec2(-.5,1.), r2 = vec2(.5, 1.);\n    float R = .5;\n    if(xa.y > 1.+sqrt(R*R-(abs(xa.x)-r2.x)*(abs(xa.x)-r2.x))+r2.y)\n        return background;\n    \n    return gradient(background, x, x*size+vec2(0.,1.), x*size+vec2(0.,0.),vec4(232./255., 23./255., 3./255., 1.),  vec4(231./255., 61./255., 156./255., 1.) );\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 relative_coord = fragCoord.xy / iResolution.xy;\n    float time = iTime-floor(iTime/6.)*6.;\n    float phi = 1.e-2*time;\n    \n    vec4 structure = gradient(vec4(0.,0.,0.,1.), relative_coord, vec2(0.,1.), vec2(0.,.8), vec4(0.,0.,0.,1.), vec4(0.,0.,1.,1.));\n    \n    \n    float j=0.;\n    for(int i=0; i<35; ++i)\n    {\n        for(float x=-1.; x<1.; x+=1.e-3)\n        {\n            x+=0.3*rand(vec2(x, j*x));\n            float y0 = .9*rand(vec2(x, 2.*j*x)), omega = 2.e-1*rand(vec2(x, 3.*j*x));\n            float size = .04*rand(vec2(x, 5.*j*x));\n            structure = heart(structure, relative_coord, vec2(x+.5*sin(omega*time),-1.+y0+1.e-1*time*time), size);\n            j+=1.;\n        }\n    }\n    \n    fragColor = structure;\n}\n","name":"Image","description":"","type":"image"}]}