{"ver":"0.1","info":{"id":"slVXW1","date":"1640638831","viewed":203,"name":"exp_1","username":"TestCoder","description":"t","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["t"],"hasliked":0,"parentid":"stKSWz","parentname":"ts_3"},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cbrt(float number) {\n    return pow(abs(number), 1. / 3.);\n}\n\nfloat getErraticWave(float number) {\n    float scale = 1.;\n\n    return (\n        cbrt(sin(number))\n      + pow(\n          cos(\n              number + iTime / 3.\n          ),\n          3.\n        )\n    ) / scale;\n}\n\nvec3 getErraticPattern(float x, float y, vec2 uv) {\n    float stretch = 2.;\n    float mainDance = getErraticWave(\n        getErraticWave(uv.y + uv.x)\n      + getErraticWave(uv.y + -uv.x)\n      + getErraticWave(-uv.y + uv.x)\n      + getErraticWave(-uv.y + -uv.x)\n    );\n    vec2 frequency = texture(iChannel0, vec2(10.0)).xy / 64.;\n\n    return (\n        getErraticWave(\n            x\n        ) + getErraticWave(\n            y\n        )\n    ) * stretch * (1. - vec3(\n        mainDance * (\n            sin(\n                iTime / 20. + .5\n            ) + 1.\n        )\n    ,\n        mainDance * (\n            sin(\n                iTime / 4. + .25\n            ) + .5\n        )\n    ,\n        mainDance * (\n            sin(\n                iTime / 4. + 1.\n            ) + .25\n        ) + mainDance + frequency.x * 100.\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // - .5 so center of the screen is the center of the screen\n    vec2 uv = fragCoord.xy / iResolution.xy - .5;\n\n    // Sets ratio into 1:1\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n   \n    float frequency = texture(iChannel0, vec2(100.)).x;\n    vec3 col = 0.5 + 0.5*cos(iTime + uv.xyx + vec3(0,2,4));\n\n    float zoomOut = 15.;\n\n    vec3 rgb = 1. - getErraticPattern(\n                uv.x, uv.y, uv * zoomOut\n            ) + getErraticPattern(\n                -uv.x, uv.y, uv * zoomOut\n            ) + getErraticPattern(\n                uv.x, -uv.y, uv * zoomOut\n            ) + getErraticPattern(\n                -uv.x, -uv.y, uv * zoomOut\n            );\n\n    // Output to screen\n    fragColor = vec4(col * rgb * (1. / distance(uv, vec2(0.))),1.0);\n}","name":"Image","description":"","type":"image"}]}