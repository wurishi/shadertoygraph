{"ver":"0.1","info":{"id":"Ml3XDn","date":"1478943119","viewed":170,"name":"SpringyDisks","username":"mellyza","description":"simple disk animations in 5 sections of the screen, have used and modified code from https://www.shadertoy.com/view/Md23DV #24","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["pixel","color","disk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define TWOPI 6.28318530718\n//make a disk (ORGINAL)\nfloat disk(vec2 r, vec2 center, float radius) {\n\treturn 1.0 - smoothstep( radius-0.005, radius+0.005, length(r-center));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\t\n   vec2 p = vec2(fragCoord.xy / iResolution.xy);\n    vec2 r = 2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    float xMax = iResolution.x / iResolution.y;\n    \n    //set the colours\n    vec3 col1 = vec3(0.216, 0.471, 0.698); // blue\n\tvec3 col2 = vec3(1.00, 0.329, 0.298); // yellow\n\tvec3 col3 = vec3(0.867, 0.910, 0.247); // red\n\t\n\tvec3 ret; \n    \n    \n    //shape one \n    if(p.x < 1./5.) { // position of rect bg (how big)\n\t\tvec2 q = r + vec2(xMax*4./5.,0.); // section of the screen\n\t\tret = vec3(0.1); // color \n\t\t// oscillation\n\t\tfloat amplitude = 0.8;\n\t\t// y coordinate oscillates with a period of 0.5 seconds\n\t\tfloat y = 0.8*sin(0.8*iTime*TWOPI); //distance it travels \n\t\t// radius oscillates too\n\t\tfloat radius = 0.15 + 0.05*sin(iTime*8.0); // how much it pluses \n\t\tret = mix(ret, col1, disk(q, vec2(0.0, y), radius) ); //mix color with disk and radius\t\t\n\t} \n    //shape two\n    else if(p.x < 2./5.) {\n    \tvec2 q = r + vec2(xMax*2./5.,0.);\n        ret = vec3(0.1);\n        \n        float amplitude = 0.8;\n        \n        float y = 0.4*sin(0.8*iTime*TWOPI);\n        float radius = 0.15 + 0.05*sin(iTime*8.0);\n        ret = mix(ret, col2, disk(q, vec2(0.0, y), radius));\n    \n    }\n    //shape three\n    else if(p.x < 3./5.){\n    \tvec2 q = r + vec2(xMax*0./5., 0.);\n        ret = vec3(0.1);\n        \n        float amplitude = 0.8;\n        float y = 0.1*sin(0.8*iTime*TWOPI);\n        float radius = 0.15 + 0.05*sin(iTime*8.0);\n        ret = mix(ret, col3, disk(q, vec2(0.0, y), radius));\n    \n    }\n    //shape four\n    else if(p.x < 4./5.){\n    \tvec2 q = r + vec2(xMax*-2./5., 0.);\n        ret = vec3(0.1);\n    \t\n    \tfloat amplitude = 0.8;\n        float y = 0.4*sin(0.8*iTime*TWOPI);\n        float radius = 0.15 + 0.05*sin(iTime*8.0);\n        ret = mix(ret, col2, disk(q, vec2(0.0, y), radius));\n    \n    }\n    //shape five\n    else if(p.x < 5./5.){\n    \tvec2 q = r + vec2(xMax*-4./5., 0.);\n        ret = vec3(0.1);\n    \n    \tfloat amplitude = 0.8;\n        float y = 0.8*sin(0.8*iTime*TWOPI);\n        float radius = 0.15 + 0.05*sin(iTime*8.0);\n        ret = mix(ret, col1, disk(q, vec2(0.0, y), radius));\n    \n    }\n    \n    \n   vec3 pixel = ret;\n\tfragColor = vec4(pixel, 1.0);\n}\n/*\n//make a disk (UPGRADED BY FABRICNEYRET2)\n\nfloat disk(vec2 r, vec2 center, float radius) {\n    float e = 1./iResolution.y;\n\treturn smoothstep( e,-e, length(r-center)-radius);\n}\n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\t\t\n    vec2 R = iResolution.xy,\n        r = (2.*U -R)/R.y;\n    \n    float xMax = R.x / R.y,\n          t = iTime,\n          e = 1./R.y,            \n          d = 2. - floor(5.*U.x/R.x),\n     radius = .15 + .05*sin(t*8.); \n    r -= vec2( -xMax*d*2./5., .4*abs(d)*sin(.8*t*6.28) );\n    \n    vec4 col =   abs(d) == 2. ? vec4( .216, .471, .698, 1)  // blue\n               : abs(d) == 1. ? vec4( 1.00, .329, .298, 1)  // yellow\n               :                vec4( .867, .910, .247, 1); // red\n\tO = mix( vec4(.1), col, smoothstep( e,-e, length(r) - radius) ); \n}*/\n","name":"Image","description":"","type":"image"}]}