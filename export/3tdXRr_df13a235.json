{"ver":"0.1","info":{"id":"3tdXRr","date":"1580301368","viewed":279,"name":"Electric Red","username":"tonywu","description":"for test","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int AMOUNT = 60;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 20. * (fragCoord-iResolution.xy/2.) / min(iResolution.x, iResolution.y);\n\n    float len;\n    // the sound texture is 512x2\n    //int tx = int(uv.x*512.0);\n    int tx = 3;\n     \n\t// first row is frequency data (48Khz/4 in 512 texels, meaning 23 Hz per texel)\n\tfloat fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n    \n    for(int i=0; i<AMOUNT; i++){\n    \tlen = length(vec2(uv.x, uv.y));\n        uv.x = uv.x - cos(uv.y + sin(len*fft)) + cos(iTime / 10.0);\n        uv.y = uv.y + sin(uv.x + cos(len*fft)) + sin(iTime / 10.0);\n    }\n    vec3 col = vec3(cos(len*2.),0,0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}