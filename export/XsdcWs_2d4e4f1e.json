{"ver":"0.1","info":{"id":"XsdcWs","date":"1520608936","viewed":217,"name":"Skydome","username":"Jens","description":"Skydome shader with improper texture.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sky","skydome","canwehavetexuresplz"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 v, float angle)\n{\n    float x = v.x * cos(angle) - v.y * sin(angle);\n    float y = v.x * sin(angle) + v.y * cos(angle);\n    \n    return vec2(x, y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 viewPos = fragCoord / iResolution.xy; // viewPos.xy in range [0, 1]\n    \n    vec3 v = vec3(2.0 * (viewPos - vec2(0.5, 0.5)), -2.0); // v.xyz in range [-1, 1]\n    \n    const float PI = 3.1415926536;\n    \n    v.xz = rotate(v.xz, PI * (iMouse.x / iResolution.x - 0.5));\n    v.yz = rotate(v.yz, PI * (iMouse.y / iResolution.y - 0.5));\n    \n    v = normalize(v);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    // vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv = 0.5 * (v.xy + vec2(1.0, 1.0));\n\n    // Output to screen\n    //fragColor = vec4(uv, 1.0, 1.0);\n   \n    if (v.z < 0.0)\n    \tfragColor = texture(iChannel0, uv);\n    else\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}