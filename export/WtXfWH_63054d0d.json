{"ver":"0.1","info":{"id":"WtXfWH","date":"1597237097","viewed":116,"name":"Waves 1.1","username":"Andrew3086","description":"Ray marching technology with some effects","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 200\n#define MIN_DIST 0.01\n#define MAX_DIST 100.0\n\nfloat smin(float a, float b, float k) {\n \tfloat h = max(min(0.5 + 0.5 * (b - a) / k, 1.0), 0.0);\n    return a * h + b * (1.0 - h) - k * h * (1.0 - h);\n}\n\n\nfloat getDist(vec3 p) {\n    p.xyz = asin(sin(p.xyz));\n    vec4 sphere = vec4(0, 0, 0, 3.0);\n\tfloat sphereDist = length(p - sphere.xyz) - sphere.w; \n    //float planeDist = p.z + 1.0;\n    //return min(sphereDist, planeDist);\n    //return min(sphereDist, planeDist);\n    return -sphereDist;\n}\n\n\nfloat rayMarch(vec3 r0, vec3 rd) {\n\tfloat d0 = .0;\n    for (int i = 0; i < MAX_STEPS; i++) {\n    \tvec3 p = r0 + d0 * rd;\n        float ds = getDist(p);\n        d0 += ds;\n        if (d0 > MAX_DIST || ds < MIN_DIST) break;\n    }\n\treturn d0;\n}\n\nvec3 getNormal(vec3 p) {\n \tfloat d = getDist(p);\n    vec2 e = vec2(.01, 0);\n    \n    vec3 n = d - vec3(\n        getDist(p-e.xyy),\n        getDist(p-e.yxy),\n        getDist(p-e.yyx));\n    return normalize(n);  \n}\n\nfloat getLight(vec3 p) {\n    vec3 lightPos = vec3(4.0 * sin(iTime), 4.0 * cos(iTime), 20);\n    vec3 l = normalize(lightPos - p);\n    vec3 n = getNormal(p);\n    \n    float dif = dot(n, l);\n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n\n    vec3 r0 = vec3(0.5 + 2.0 * iTime, 0, 2.0 * iTime);\n    //vec3 r0 = vec3(0, 0, 2.0 * iTime);\n    //vec3 r0 = vec3(0.5 + 2.0 * iTime, 2.0 * iTime, 0);\n    vec3 rd = normalize(vec3(1, uv.x, uv.y));\n    float dist = rayMarch(r0, rd);\n    \n    vec3 p = r0 + rd * dist;\n    float dif = getLight(p);\n    vec3 col = vec3(dif);\n    \n    \n\t\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}