{"ver":"0.1","info":{"id":"wtSczV","date":"1601677814","viewed":161,"name":"Wave Wind & Fire [izutionix++]","username":"twenkid","description":"Based on \"Machine Wind\" by izutionix, heavily edited sound, added glow,more complex formulas and mouse. The line gets thicker with time. Drag the mouse in the window up-down to change the reddisth component; drag right-left to change the style.","likes":4,"published":1,"flags":8,"usePreview":0,"tags":["2d","noise","sound","wave","fbm","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nBased on: https://www.shadertoy.com/view/WtscWS\nBased on \"Machine Wind\" by izutionix, heavily edited sound,\nadded glow,more complex formulas and mouse. \nThe line gets thicker with time.\nDrag the mouse in the window up-down to change the reddisth component; drag right-left to change the style.\n\"Machine Wind\" by izutionix, heavily edited sound and more interesting waves. \nThe line gets thicker with time. Drag the mouse up-down to change the reddisth glow component,\ndrag right-left to change the style.\nUp - more yellowish, down - greenish.\n//Twenkid's Play: 15-7-2020 + ~2.10 - 3.10\n*/\n\nint mode = 0; \nfloat modeMax = 4.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.*fragCoord/iResolution.xy-1.;\n\tuv.x += iTime;\n    uv *= 1.;    \n    float v = fbm(uv.x), r = fbm(uv.y), b = fbm(sqrt(uv.x*uv.y));    \n    float im = (iMouse.x/iResolution.x)*modeMax+1.0;    \n    mode = int(im);\n    float re = (iMouse.y/iResolution.y)*0.7+0.1;\n    if (mode==1)\n    v = .01/abs(uv.y+v)*iTime/1.0*sin(fragCoord.x/fbm(fragCoord.y)*fbm(fragCoord.y)); // graph\n    else if (mode==2)\n    v = .01/abs(uv.y+v)*iTime/1.0*sin(sqrt(fragCoord.x));    \n    else if (mode ==3)\n    v = .01/abs(uv.y+v)*iTime/1.0*sin(fragCoord.x/fragCoord.y);\n    else if (mode == 4)\n    v = .01/abs(uv.y+v)*iTime/1.0*sin(sqrt(fragCoord.x*fragCoord.y));    \n   //v = smoothstep(0., 1., v);\n    r = min(re, v);\n    vec3 col = vec3(r,v*v,sqrt(v)*cos(fragCoord.x)*sin(fragCoord.y)/2.*sin(iTime));\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define e float(1.)\n// from: https://www.shadertoy.com/view/4djSRW\nfloat hash11(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nfloat noise1d(float p)\n{\n    float i = floor( p );\n    float f = fract( p );\n\t\n\tfloat u = f*f*(3.0-2.0*f);\n\n    u = mix( hash11(i)*f, hash11(i+1.)*(f-1.), u);\n    \n    u *= cos(p);\n    return pow(u, e)*exp2(e*2.);\n}\n\nfloat fbm( float p )\n{\n    return noise1d(    p)+\n        .5*noise1d(2. *p)+\n       .25*noise1d(4. *p)+\n      .125*noise1d(8. *p)+\n     .0625*noise1d(8. *p)+\n    .03125*noise1d(16.*p);\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp, float time )\n{\n  //  return vec2(  fbm(55.0*time+fbm(time*.125)*4. )  )\n        //*.75*smoothstep(0., 1., time*.5);\n    float d = 2.;\n    float freq = 16.0;\n    float ftr[12];\n    int num = 11;\n    ftr[0] = 4.; ftr[1] = 8.; ftr[2] = 6.;\n    ftr[3] = 2.; ftr[4] = 12.; ftr[5] = 16.;\n    ftr[6] = 20.; ftr[7] = 24.; ftr[8] = 24.;\n    ftr[9] = 1.; ftr[10] = 1.; ftr[11] = 1.;\n    float delay = 100.;\n    freq = sin(time)/cos(time*2.0)+tan(time/max(sin(time),0.1));\n    \n    vec2 sound = vec2(  fbm(sin(time/d)*cos(time)*tan(time)*\n      freq*(ftr[int(time/delay)%num])*time+fbm(time*.125)*4. )  )\n        *.52*smoothstep(0., 0.07, time*.5) * 0.2;\n    float sx = sin(time+fbm(time)*440.)*0.33 + cos(time*880.+fbm(time*2.))*0.33 + sin(time*1760.*fbm(time))*cos(time*1760.*fbm(time))*0.16;\n    vec2 s = vec2(sx,sx);\n    sound = (s + sound)/2.;\n    \n    return sound;\n}","name":"Sound","description":"","type":"sound"}]}