{"ver":"0.1","info":{"id":"wdjXz3","date":"1554587324","viewed":156,"name":"Clickable Julia","username":"lscosta","description":"Click and drag around to view different Julia sets. There are some exciting spidery ones!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math","mandelbrot","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_ITERS = 500;\n\nvec2 cmult(vec2 z1, vec2 z2) {\n    return mat2(z1,-z1.y,z1.x) * z2;\n}\n\nvec3 colorFromIters(int iters) {\n    float t = float(iters) / float(MAX_ITERS);\n    return 0.5 * cos(vec3(10, 5, 20) / (t - 1.01)) + 0.5;\n}\n\nvec3 julia(vec2 z) {\n    vec2 c = 2.5 * (iMouse.xy - iResolution.xy / 2.0) / iResolution.y;\n    if (iMouse.xy == vec2(0)) {\n        c = vec2(-0.6, -0.43);\n    }\n    int a = 0;\n    for (int i = 0; i < MAX_ITERS; i++) {\n        a++;\n        if (dot(z, z) > 4.0) {\n            break;\n        }\n        z = cmult(z, z) + c;\n    }\n    return colorFromIters(a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 z = 3.0 * (fragCoord - iResolution.xy / 2.0) / iResolution.y;\n    fragColor = vec4(julia(z), 1.0);\n}","name":"Image","description":"","type":"image"}]}