{"ver":"0.1","info":{"id":"WsGGDd","date":"1571169830","viewed":479,"name":"fractal ying yang","username":"Jarazz","description":"Saw something like this on reddit that was 2 ying yangs stacked, abstracted it for n layers of ying yang \nif you want to control how many iterations to see: https://www.shadertoy.com/view/wsG3Dt","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["yingyangfractalkifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define t iTime*PI/4.\n \nvec2 cartesian2polar(vec2 cartesian){\n\treturn vec2(atan(cartesian.x,cartesian.y),length(cartesian.xy));\n}\n\nvec2 polar2cartesian(vec2 polar){\n\treturn polar.y*vec2(cos(polar.x),sin(polar.x));\n}\n\nvec2 rotate2D(vec2 coords, float amount){\n\treturn polar2cartesian(cartesian2polar(coords)+vec2(amount,0.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv = rotate2D(uv, t);\n \n    vec3 col = vec3(.3);\n    \n    int iterationID = 0; \n    float iterations =  max(2. + (-4.*cos(t/2.)-PI/2.),0.);\t\t//how many layers, you can manually just enter 5.0 or 20.0 and see what happens\n   \tfloat circleRadius = .25;\n    \n    for(int i = 0; i< int(iterations); i++){               //loop for KIFS fractal, keep transforming the uvs inside the inner circles into the uv of the whole circle\n \tfloat distToInner = length(abs(uv)-vec2(0,circleRadius));\n    \tif(distToInner<circleRadius){\t\t\t//inner circle\n       \tuv.y = (uv.y>=0.)?(uv.y-circleRadius):(uv.y+circleRadius);\n        uv*=2.;\n        iterationID++;\n    \tuv = rotate2D(uv,-PI/2. + t * float(iterationID)  );\n       \t}\n   \t\n    }\n     \n \tfloat distToInner = length(abs(uv)-vec2(0,circleRadius));\n    \tif(distToInner<circleRadius*fract(iterations) ){\t\t\t//inner circle\n       \tuv.y = (uv.y>=0.)?(uv.y-circleRadius):(uv.y+circleRadius);\n        uv*=2.;\n        iterationID++;\n    \tuv = rotate2D(uv,-PI/2. +  t * float(iterationID)  );\n       \t}\n    \n    if(length(uv)<.5){\n    col = vec3(step(0.,uv.x));\n        \n        float distToInner = length(abs(uv)-vec2(0,.25));\n    \tif(distToInner<circleRadius){\t\t\t//inner circle\n        \tcol = vec3(step(0.,uv.y) ); \n           \n            if(distToInner>circleRadius/2.){ \t//final most inner circle/iris\n        \t\t col = vec3( -col.x +1.); \n            }\n    \t} \n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}