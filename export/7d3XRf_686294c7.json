{"ver":"0.1","info":{"id":"7d3XRf","date":"1633615068","viewed":793,"name":"pseudo 3d fluid","username":"flockaroo","description":"on twigl.app: [url]https://t.co/olT3fPa2Z6[/url]  < 280 chars also possible on shadertoy? - hmm, not sure...","likes":31,"published":3,"flags":32,"usePreview":1,"tags":["simulation","fluid","cfd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// created by florian berger (flockaroo) - 2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// twigl.app - https://t.co/olT3fPa2Z6\n\n// based on https://www.shadertoy.com/view/MsGSRd\n// or on the 2 tweet version - https://www.shadertoy.com/view/4dBfDW\n\nvoid mainImage( out vec4 c, vec2 f )\n{\n    c=vec4(texture(iChannel0,f/iResolution.xy).w);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// created by florian berger (flockaroo) - 2021\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// twigl.app - https://t.co/olT3fPa2Z6\n\n// based on https://www.shadertoy.com/view/MsGSRd\n// or on the 2 tweet version - https://www.shadertoy.com/view/4dBfDW\n\n// twigl.app doesnt use float buffers, so its faster there, and has a slightly different look (more coarse)\n  \nvoid mainImage( out vec4 o, vec2 F )\n{\n#define C(x)texture(iChannel0,(x+F)/iResolution.xy)\n#define L(z)for(vec2 a=S;a.x>1.;z=sin(a--))\nvec2 S=vec2(27,-28),d,v,q,p=q=d=S-S;\nL(p)L(q)v=C((p+q)*75.).xy,d-=dot(p,v)*q-dot(p,q)*v;\no.xy=C(d).xy*.998+.01/F;\nv=clamp(fwidth(o.xy)*40.,0.,1.);\no.w=C(-1.+1.002*).w*(.95-v.y)+v.y;\n\n// emulating non-float behaviour of twigl.app (more coarse look - of course this cant speed it up here ;-)\no=clamp(floor(o*256.+.5)/256.,0.,1.);\n\n//if(iFrame==0) o1=vec4(0);\n}\n\n","name":"Buffer A","description":"","type":"buffer"}]}