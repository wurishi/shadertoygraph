{"ver":"0.1","info":{"id":"tlSyW1","date":"1594222131","viewed":63,"name":"line clock","username":"inbisibler","description":"define makeLine function","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float makeLine(float length, float width, float angle, vec2 position, vec2 pos)\n{\n    vec2 p = pos - position;\n    p = vec2(p.x*cos(angle) -p.y*sin(angle), p.x*sin(angle)+p.y*cos(angle));\n    \n    \n    float exist = (step(-width/2.,p.x)-step(width/2.,p.x))*(step(0.,p.y)-step(length,p.y));\n\treturn exist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2. - iResolution.xy) /iResolution.y;\n    \n\n    // Time varying pixel color\n    float time = iTime*10.;\n    \n    float t1 = makeLine(1.0,0.01,time,vec2(0.0),uv);\n    float t2 = makeLine(0.7,0.03,time/6.,vec2(0.0),uv);\n    float t3 = makeLine(0.5,0.05,time/30.,vec2(0.0),uv);\n\n    vec3 col = vec3(sin(uv.x+iTime)*sin(uv.x+iTime),cos(uv.y+iTime*3.),-sin(abs(uv)+iTime*5.))*max(max(t1,t2),t3);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}