{"ver":"0.1","info":{"id":"NsdyzS","date":"1653722823","viewed":57,"name":"X-Fold Widget","username":"peremoya2000","description":"Very simple widget to play with radial tiling / x-fold symmetry","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["symmetry","widget"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smoothRound( float n ){\n    return floor(n)+smoothstep(.2,.8,fract(n));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // UVs (from -1 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float s=sin(-iTime*.6);\n    float c=cos(-iTime*.6);\n    uv*=mat2(c,s,-s,c);\n    \n    //Radial UVs    \n    vec2 ruv = vec2(length(uv),atan(uv.y,uv.x));\n\n    // Spiral and color\n    vec3 col = vec3(smoothstep(.505,.5+.1*sin(ruv.y*(smoothRound(sin(iTime*.1)*12.))),ruv.x));\n    col*=vec3(cos(ruv.y*2.),abs(sin(ruv.y*3.)),abs(cos(ruv.y)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}