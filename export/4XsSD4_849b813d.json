{"ver":"0.1","info":{"id":"4XsSD4","date":"1709534458","viewed":67,"name":"2D moon14","username":"JonathanShiri","description":"cleaning code","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["helloworld"],"hasliked":0,"parentid":"l3jGDy","parentname":"moon Jonathan test 1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle(vec2 uv, vec2 c, float rad) {\n\t return distance(uv, c);\n}\n\n// [[0.218 -0.392 0.608] [-0.142 -3.142 0.268] [1.728 -0.502 3.138] [-2.532 -2.772 -1.972]]\n\nvec3 pallete(float t) {\n    vec3 a = vec3(0.218, -0.392, 0.608);\n    vec3 b = vec3(-0.142, -3.142, 0.268);\n    vec3 c = vec3(1.728, -0.502, 3.138);\n    vec3 d = vec3(-2.532, -2.772, -1.972);\n    \n    return a + b*cos(6.28318 *(c*t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    fragColor = vec4(vec3(0.0), 1.0);\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    const float R = 0.45;\n   \n    float cx = 2.f*R*sin(0.2*iTime);\n    float eps = 1e-2*cx;\n    vec2 c0 = vec2(0);\n    vec2 c = vec2(cx, 0);\n    float clr = sdCircle(uv, c0, R);\n    float clr2 = sdCircle(uv, c, R);\n    \n    vec3 col = vec3(0.0);\n    col += vec3(step(R, clr2));\n    col *= vec3(step(clr, R));\n    fragColor += vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}