{"ver":"0.1","info":{"id":"NsXBRN","date":"1668907134","viewed":80,"name":"Mandelbrot set visualizer","username":"calebxcaleb","description":"'tis a mandelbrot set","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Mandelbrot set\nfloat mandel (float cx, float cy) {\n\tfloat x = 0.0;\n\tfloat y = 0.0;\n\tfloat i;\n\tfor (i = 0.; i < 64.; i++) {\n\t\tif ((x*x + y*y) > 4.) {\n\t\t  break;\n\t\t}\n\t\tfloat xtemp = x*x - y*y + cx;\n\t\ty = 2.*x*y + cy;\n\t\tx = xtemp;\n\t}\n\treturn sqrt(i / 64.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = vec2(fragCoord.x / iResolution.x * 3. - 2.,\n                   fragCoord.y / iResolution.y * 3. - 1.5);\n\n    float value = mandel(uv.x, uv.y);\n    \n    vec3 col = vec3(value, value, value);\n    \n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}