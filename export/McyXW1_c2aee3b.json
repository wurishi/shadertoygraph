{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Original License CC0\n// Changes and extension: CC0\n\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nfloat bwp(vec2 p, in vec3 F) {\n  p = fract(p) - F.x;\n  float s = sign(p.x * p.y);\n  p = abs(abs(p) - F.y);\n  return s * (max(p.x, p.y) - F.z);\n}\n\nvoid mainImage( out vec4 C, in vec2 fragCoord ) {\n  vec2 p = ( 2.* fragCoord - iResolution.xy )  / iResolution.y;\n  float x = p.x;\n  p *= ROT(0.2 * iTime);\n\n  float s = 2.0;\n  float aa = s * 2.0 / iResolution.y; \n  \n  int i = int(mod(iTime-1.0, 7.0));\n  vec3 F =  i==0 ? vec3(1  ,.25, .25)\n          : i==1 ? vec3(1.4,.25, .25)\n          : i==2 ? vec3(1  ,.2 , .7 )\n          : i==3 ? vec3(.75,.5 , .25)\n          : i==4 ? vec3(.75,.25, .5 )\n          : i==5 ? vec3(.5 ,.5 , .25)\n          :        vec3(.5 ,.25, .25);\n  float d = bwp(p * s, F);\n  if(x < 0.0) d = -d;\n  C = vec4(smoothstep(aa, -aa, d));\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"McyXW1","date":"1733946169","viewed":30,"name":"Antialiased bw patterns","username":"Imagyx","description":"Extension of forked shader.\nThank you for the great idea!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","antialias","bw","aa","pattern"],"hasliked":0,"parentid":"NscBDn","parentname":"checkerboard distance field"}}