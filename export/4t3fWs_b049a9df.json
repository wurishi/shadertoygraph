{"ver":"0.1","info":{"id":"4t3fWs","date":"1541442456","viewed":567,"name":"Poisson-disk van-Damme (209 ch)","username":"FabriceNeyret2","description":"bluenoise texture gives an even-random distribution close to Poisson-disk.\n( try usual noise if you wish. or lichen ).\n\nStill, note that this convolution-based approach is very inefficient compare to jittered grid offset (as for Voronoi/Worley noise).","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["convolution","2tweets","bluenoise","short","poissondisk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, vec2 U) {\n    for ( int k = 0; k < 576; k++ ) {    /* 24 x 24 */\n        ivec2 P = ivec2( 8 + k%24 , k/24 );\n        if ( texelFetch( iChannel0, ( ivec2(U)-P )%1024, 0).r <.001 ) {\n            vec4 T = texelFetch( iChannel1, P, 4);\n            abs(T.g-.64) > .01 ? O = max(O,T) : O;\n        } }\n    O.g == 0. ? O.g += .64 : 0.; }\n        \n\n        \n        \n        \n/**  // 216 chars\n\n#define mainImage(O,U)                                          \\\n    for ( int k = 0; k < 576; k++ ) {                           \\\n        ivec2 P = ivec2( k%24 , k/24 ) - 12;                    \\\n        if ( texelFetch( iChannel0, ivec2(U)-P, 0).r <.001 ) {  \\\n            vec4 T = texelFetch( iChannel1, ivec2(20,12)+P, 4); \\\n            abs(T.g-.64) > .01 ? O = max(O,T) : O;              \\\n        } }                                                     \\\n    O.g == 0. ? O.g += .64 : 0.\n\n/**/\n        ","name":"Image","description":"","type":"image"}]}