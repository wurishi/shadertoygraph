{"ver":"0.1","info":{"id":"wtKXDy","date":"1583537392","viewed":364,"name":"Very nice bug (SMOKE)","username":"Txoka","description":"Bug of https://www.shadertoy.com/view/ttVSWG\nI think this is very nice","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["bug"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 Q, in vec2 U){\n    ivec2 id=ivec2(U);\n    Q=vec4(B(id).x);\n    //Q+=vec4(B(id).xy,A(id).z,0)*3.;\n}\n/*\nIt works like this:\n\nPressure should obviusly create a force outwards:\n\n\tvelocity.xy-=vec2(dx_dpressure,dy_dpressure)\n\n\nIf more air is flowing towards a point than air is \nflowing outwards of it (negative divergence) it should \nlogically increase the pressure at that point (and vice-versa):\n\n\tpressure-=velocity_divergence\n\n\nand that should be everything.\n\nThen just add a channel for\tcolouring the fluid generated \nby the mouse and follow it with\n\tcolor=\n\t\ttexture(iChannel0,U/R.xy+velocity.xy*0.01).color;\n*/","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 Q, in vec2 U){\n    ivec2 id=ivec2(U);\n    Q=texelFetch(iChannel1,id,0);\n    Q.w=0.;\n    \n    vec3 dadx=B(id+ivec2(1,0)).xyz-B(id-ivec2(1,0)).xyz;\n    vec3 dady=B(id+ivec2(0,1)).xyz-B(id-ivec2(0,1)).xyz;\n    \n    Q.xy-=vec2(dadx.z,dady.z)*0.1;\n    \n    //if(any(lessThan(id,ivec2(5)))||any(greaterThan(id,ivec2(R.xy)-5)))Q=vec4(0.);\n    Q.xy+=vec2(sin(iTime*2.)*0.5,cos(iTime*2.)*0.5)*exp(-0.005*dot2(U-R.xy*.5))*0.05;\n\tif(M.z>0.)Q.xy+=vec2(sin(iTime*2.)*0.5,cos(iTime*2.)*0.5)*exp(-0.005*dot2(M.xy-U))*0.1;\n    if(iFrame==0)Q.xy=vec2(0,-1)*exp(-0.005*dot2(U-R.xy*.5))*0.2;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec2 RK4(vec2 p){\n    vec2 k1=texture(iChannel0,p/R.xy).xy;\n    vec2 k2=texture(iChannel0,(p-0.5*10.*k1)/R.xy).xy;\n    vec2 k3=texture(iChannel0,(p-0.5*10.*k2)/R.xy).xy;\n    vec2 k4=texture(iChannel0,(p-10.*k3)/R.xy).xy;\n    return 10.*((k1+k4)/6.+(k2+k3)/3.);\n}\nvoid mainImage(out vec4 Q, in vec2 U){\n    ivec2 id=ivec2(U);\n    Q=texelFetch(iChannel0,id,0);\n    Q.w=0.;\n    \n    vec3 dadx=A(id+ivec2(1,0)).xyz-A(id-ivec2(1,0)).xyz;\n    vec3 dady=A(id+ivec2(0,1)).xyz-A(id-ivec2(0,1)).xyz;\n    \n    float divergence=dadx.x+dady.y;\n    \n    Q.z-=divergence;\n    #ifdef use_RK4\n    Q.x=texture(iChannel0,(U+RK4(U).xy)/R.xy).x;\n    #else\n    Q.x=texture(iChannel0,(U-B(id).xy*10.)/R.xy).x;\n    #endif\n    Q.xz+=vec2(1.,.1)*exp(-0.005*dot2(U-R.xy*.5))*.5;\n    if(M.z>0.)Q.xz+=vec2(1.,.1)*exp(-0.005*dot2(M.xy-U));\n\tif(iFrame==0)Q.xy=vec2(2.,.2)*exp(-0.005*dot2(U-R.xy*.5));\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution\n#define M iMouse\n\n#define A(id) texelFetch(iChannel0,(id+ivec2(R.xy))%ivec2(R.xy),0)\n#define B(id) texelFetch(iChannel1,(id+ivec2(R.xy))%ivec2(R.xy),0)\n\nfloat dot2(vec2 k){return dot(k,k);}\n\n//RK4 (just for color tracking not for actual simulation)\n#define use_RK4","name":"Common","description":"","type":"common"}]}