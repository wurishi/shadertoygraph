{"ver":"0.1","info":{"id":"mdKyRw","date":"1695922598","viewed":51,"name":"Pretty Modulated (Centered)","username":"gurudevbk","description":"Modified some parameters from Pretty Hip  (https://www.shadertoy.com/view/XsBfRW) \nWIP modifications to center the image and add more automations/variations","likes":3,"published":1,"flags":16,"usePreview":0,"tags":["2d","cineshader"],"hasliked":0,"parentid":"7ldcRH","parentname":"Pretty Modulated"},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.y/iResolution.x; //aspect ratio of viewport\n    float value; //var\n\tvec2 uv = fragCoord.xy / iResolution.x; //vec ratio of fragment coordinate to width of viewport\n \n    \n    float rot = radians(45.0); // radians(45.0*sin(iTime)); //radians(45.0)\n    float rot2 = radians(45.0*sin(iTime)); // radians(45.0*sin(iTime)); //radians(45.0)\n    \n    uv -= vec2(0.5, 0.5*aspect); //transform\n\n\n    mat2 m = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n   \tuv  = m * uv;\n    uv += .15*aspect;//vec2(0.5, aspect);\n    uv *= 2.;\n    //uv.y-=0.7*(-aspect);\n    //uv.x+=0.17*(-aspect);\n\n    vec2 pos = 30.0*uv;\n    vec2 rep = fract(cos(rot2)-0.5*tan(rot2)+cos(rot2/2.0)*pos);\n    float dist = min(min(rep.x, 1.0-rep.x), min(rep.y, 1.0-rep.y));\n    float squareDist = length((floor(pos)+vec2(0.5)) - vec2(5.0) );\n    \n    float edge = sin(iTime-squareDist*0.5)*0.5+0.5;\n    \n    edge = (iTime-squareDist*0.5)*0.5+sin(rot2);\n    edge = 2.0*fract(edge*0.5);\n    //value = 2.0*abs(dist-0.5);\n    //value = pow(dist, 2.0);\n    value = fract (dist*2.0);\n    value = mix(value, 1.0-value, step(1.0, edge));\n    //value *= 1.0-0.5*edge;\n    edge = pow(abs(1.0-edge), 2.0);\n    \n    //edge = abs(1.0-edge);\n    //value = smoothstep( edge-.2*iTime, edge, 0.95*value);\n    value = smoothstep( edge-2.*(.5+.5*sin(iTime/4.)), edge, 0.95*value);\n    \n    \n    value += squareDist*.1;\n    //fragColor = vec4(value);\n    fragColor = mix(vec4(1.0,1.0,1.0,1.0)*(tan(sin(iTime/2.))/2.0),\n                    vec4(0.5*cos(iTime/2.),0.5+sin(iTime/2.)/2.,1.0,sin(iTime/2.)), \n                    value);\n    fragColor.a = 0.25*clamp(value, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}