{"ver":"0.1","info":{"id":"l333Dl","date":"1717123401","viewed":28,"name":"Space Ripples - 169","username":"milesandcomputers","description":"Ripple shader using a star texture as a base. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["space"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ShaderToy Inputs\n// iChannel0: Texture input\n// iMouse: Mouse coordinates\n// iTime: Shader running time\n// iResolution: Canvas resolution\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Load texture from iChannel0 and apply a stronger animated influence\n    vec3 texColor = texture(iChannel0, uv * 0.5 + 0.5 * sin(iTime * 0.1) + uv).rgb;\n\n    // Apply a strong texture influence to the color dynamics\n    vec3 col = texColor * (0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0,2,4)));\n\n    // Interactivity: Implementing a ripple effect based on the mouse position\n    if (iMouse.x > 0.0 && iMouse.y > 0.0) {\n        vec2 mouse_uv = iMouse.xy / iResolution.xy;\n        float dist = distance(uv, mouse_uv);\n        float ripple = sin(dist * 15.0 - iTime * 3.0) + 1.0;  // Generate strong ripple waves\n        ripple *= 0.5;\n        ripple = pow(ripple, 5.0);  // Sharpen and enhance ripple visibility\n\n        // Intensify the ripple effect by combining it with the texture color\n        col *= ripple * vec3(0.2, 0.4, 0.6);\n    }\n\n    // Output the final color to the screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}