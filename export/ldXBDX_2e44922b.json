{"ver":"0.1","info":{"id":"ldXBDX","date":"1498455739","viewed":161,"name":"Playing around with Raymarching1","username":"VoidChicken","description":"A shader I made while messing around in Visual Studio Code.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 a, float b){\n    float c=length(a),r=atan(a.x,a.y)+b;\n    return vec2(cos(r),sin(r))*c;\n}\nfloat box(vec3 p,vec3 b) {\n    return length(max(abs(p)-b,0.));\n}\nfloat smin( float a, float b)\n{\n    float k = 0.1;\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\nfloat map(vec3 o) {\n    o.xz=rotate(o.xz,iTime);\n    o.y=1.-o.y;\n    float f = 0.0;\n    f=length(o)-1.;//box(o,vec3(1.));\n    f=max(-f,box(o-vec3(0,.5,0),vec3(1.1,.51,1.1)));\n    f=smin(f,length(o+vec3(.7,.1,0))-.5);\n    f=smin(f,box(o,vec3(.5)));\n    return f;\n}\nvec3 normal( in vec3 x)\n{\n    vec2 e = vec2( .01, 0.0 );\n    return normalize( vec3( map(x+e.xyy) - map(x-e.xyy),\n                            map(x+e.yxy) - map(x-e.yxy),\n                            map(x+e.yyx) - map(x-e.yyx) ) );\n}\n\nfloat trace(vec3 o, vec3 d){float t=0.;for(int i=0;i<128;i++){t+=map(o+d*t)*.7;}return t;}\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 u = fragCoord.xy/iResolution.xy;\n    vec3 mc = vec3(1,1,.2),c=mc;\n    vec3 o = vec3(0,3,-5), d=vec3(u*2.-1.,2.);\n    d.y-=.7;\n    d.x*=iResolution.x/iResolution.y;\n    d=normalize(d);\n\n    float t = trace(o, d);\n    vec3 h = o+d*t;\n    float b = map(h);\n    if(b<.01){\n        float m = abs(dot(normal(h),normalize(h)));\n        c=vec3(max(m,.1));\n        c=mix(mc,c,dot(normal(h),-d));\n        float s = (length(normal(h))/10.-map(h+normal(h)/10.))*1.;\n        c-=s;\n    }\n    c=mix(c,vec3(0),length(u-.5));\n    fragColor = vec4(c,1);\n}","name":"Image","description":"","type":"image"}]}