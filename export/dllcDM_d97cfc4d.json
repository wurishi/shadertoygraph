{"ver":"0.1","info":{"id":"dllcDM","date":"1690934103","viewed":75,"name":"[phreax] ordered chaos","username":"phreax","description":"inspired by kishimisu\n\nbase for: https://www.shadertoy.com/view/dtlyD7","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIN(x) (.5+.5*sin(x))\n\nvec3 pal(float t) {\n\n    vec3 a = vec3(.6);\n    vec3 b = vec3(1.);\n    vec3 c = vec3(.5);\n    vec3 d = vec3(0.161,1.000,0.902);\n    \n   // vec3 d = vec3(0.216,0.14,0.545);\n    return a + b*cos(6.283*(c*t+d));\n}\n\n// chebyshev distance\nfloat d2(vec2 v, float k) {\n    return pow(pow(abs(v.x), k)+pow(abs(v.y), k), 1./k);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2. - iResolution.xy)/iResolution.y;\n    \n    vec2 uv0 = uv;\n    vec2 uv2 = uv;\n\n    vec3 col = vec3(0);\n    \n    float z = 0.;\n    for(float i=0.; i< 8.; i++) {\n    \n        uv = fract(uv*(1.4-z))-.5;\n        uv2 = fract(uv2*(1.+.5*sin(iTime*.1)+z))-.5;\n        \n        vec3 c = pal(length(uv0) + iTime*.4 + i*.4);\n        \n        \n        float d = (d2(uv, 1.2)+length(uv2)*exp(-length(uv0)));\n        \n        d = abs(.1*d+sin(d*8.+iTime)/8.);\n        \n        //d = \n        d = .1*pow(0.01/d, 1.2) + smoothstep(.02, .0, d);\n        col += c*d;\n    \n    }\n    \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}