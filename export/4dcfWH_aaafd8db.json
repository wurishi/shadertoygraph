{"ver":"0.1","info":{"id":"4dcfWH","date":"1524834863","viewed":565,"name":"Sparkly Sky","username":"microwerx","description":"This was an interesting experiment using a lattice blending filter. If you add random coordinates to the mouse coordinate you get this sparkling, almost aurora like effect.","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["mouse","filter","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float maxPixelCoordinate = max(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 ms = iMouse.xy / iResolution.xy;\n    \n    float dist = length(ms - uv);\n    if (dist > 0.05) dist = 1.0;\n\n    // Time varying pixel color\n    vec3 col = (1.0 - dist) * (0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)));\n\n    // Output to screen\n    //fragColor = vec4(col,1.0);\n    fragColor = 1.414*texture(iChannel1, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand1(vec2 co)\n{\n   return fract(sin(dot(co.xy,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nhighp float rand2(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // Normalized pixel coordinates (from 0 to 1)\n    float maxPixelCoordinate = max(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 ms = iMouse.xy / iResolution.xy;\n    \n    ms += vec2(rand2(floor(iTime) + uv), rand2(floor(iTime + 1.0) + uv));\n    \n    float dist = length(ms - uv);\n    if (dist > 0.05) dist = 1.0;\n\n    // Time varying pixel color\n    vec3 col = (1.0 - dist) * (0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)));\n\n    // Output to screen\n    fragColor = vec4(rand2(iTime + uv) * col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 duv = 1.0 / iResolution.xy;\n    \n    vec3 left = texture(iChannel1, uv - vec2(duv.s, 0.0)).rgb;\n    vec3 right = texture(iChannel1, uv + vec2(duv.s, 0.0)).rgb;\n    vec3 down = texture(iChannel1, uv - vec2(0.0, duv.t)).rgb;\n    vec3 up = texture(iChannel1, uv + vec2(0.0, duv.t)).rgb;\n    vec3 ll = texture(iChannel1, uv + vec2(-duv.s, -duv.t)).rgb;\n    vec3 lc = texture(iChannel1, uv + vec2(0.0, -duv.t)).rgb;\n    vec3 lr = texture(iChannel1, uv + vec2(duv.s, -duv.t)).rgb;\n    vec3 center = texture(iChannel0, uv + vec2(0.0, -duv.t)).rgb;\n    \n    fragColor = vec4(0.33 * (center + ll + lc + lr), 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}