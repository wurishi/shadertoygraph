{"ver":"0.1","info":{"id":"cdVXz1","date":"1680723769","viewed":68,"name":"Color Bar Rotation","username":"Xonatron","description":"My second shader. Just playing around with my first and getting a grip on \"texture coordinates\" as I think of them, which are really image pixel coordinates, mixed in with 2D rotation: https://www.shadertoy.com/view/Xtf3W4","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","demoscene","color","demoeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Matthew Doucette, Xona Games\n// http://xona.com/\n// Wednesday, April 5th, 2023 -- 8 years since my last/first pixel shader!: https://www.shadertoy.com/view/Xtf3W4\n// ----------------------------\n\n// constants\n\n#define PI 3.141592653589793238462643383\n#define SCALE 20.0\n#define ROTATION_SPEED 90.0 // degrees / second\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float rotationAngle = (iTime * ROTATION_SPEED) / 360.0 * (2.0 * PI); // degrees/second to radians conversion\n\n    // rotate fragCoord\n    vec2 rotFragCoord;\n    rotFragCoord.x = fragCoord.x * cos(rotationAngle) - fragCoord.y * sin(rotationAngle);\n    rotFragCoord.y = fragCoord.x * sin(rotationAngle) + fragCoord.y * cos(rotationAngle);\n    \n    // calculate colour\n    vec4 rgba;\n    rgba.r = 0.5 + 0.5 * sin(rotFragCoord.x / SCALE), // 0.0..1.0\n    rgba.g = 0.5 + 0.5 * sin(rotFragCoord.y / SCALE), // 0.0..1.0\n    rgba.b = 0.5 + 0.5 * sin((rotFragCoord.x + rotFragCoord.y ) / SCALE), // 0.0..1.0\n    rgba.a = 1.0; // 0.0..1.0\n    \n    // update colour\n\tfragColor = rgba;\n}","name":"Image","description":"","type":"image"}]}