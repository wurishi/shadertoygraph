{"ver":"0.1","info":{"id":"4tdyR7","date":"1532040308","viewed":448,"name":"2D Lighting Effects","username":"twisterge","description":"2D lighting effect","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 spotLight(vec2 P, vec2 V, float radius, float spotRadius, vec3 color, float intens) {\n    vec2 D = normalize(P);\n    \n    float d = length(P);\n    float intensity = clamp(1.0 - ((d * d) / (radius * radius)), 0.0, 1.0);\n    \n    float S = dot(D, normalize(V));\n    float c = cos(spotRadius);\n    float cI = cos(spotRadius * 0.25);\n    float cone = smoothstep(c, cI, S);\n    float spot = (1.0 - (1.0 - S) * 1.0 / (1.0 - c)) * cone;\n    \n    float st = smoothstep(0.0, radius * 0.2, d);\n    float spotS = spot * st;\n\n    return intensity * spotS * intens * color;\n}\n\n#define SPOT_COUNT 5\n#define PI 3.141592654\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 genColor(float t) {\n    return hsv2rgb(vec3(\n        sin(t + iTime) * 0.5 + 0.5,\n        0.9,\n        1.1\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float spc = iResolution.x / float(SPOT_COUNT);\n    float rad = 50.0 / float(SPOT_COUNT);\n    \n    float time = iTime * 1.5;\n    \n    vec2 center = iResolution.xy * 0.5;\n    vec3 s0 = vec3(0.0);\n    for (int i = 0; i < SPOT_COUNT; i++) {\n        float j = float(i);\n        float t = j / float(SPOT_COUNT);\n       \tvec3 col = genColor(t);\n        \n        float a = sin(j + time) * PI * 0.2 + PI * 0.5;\n        vec2 dir = vec2(cos(a), sin(a));\n        \n        vec2 pos = vec2(spc * 0.5 + j * spc, 0.0);\n        s0 += spotLight(\n            fragCoord - pos,\n        \tdir, 300.0, radians(rad),\n        \tcol, 1.5\n    \t);\n    }\n    \n    for (int i = 0; i < SPOT_COUNT - 1; i++) {\n        float j = float(i);\n        float t = 1.0 - (j / float(SPOT_COUNT));\n        vec3 col = genColor(t);\n        \n        float a = sin(j + time) * PI * 0.2 - PI * 0.5;\n        vec2 dir = vec2(cos(a), sin(a));\n        \n        vec2 pos = vec2(spc + j * spc, iResolution.y);\n        s0 += spotLight(\n            fragCoord - pos,\n        \tdir, 300.0, radians(rad),\n        \tcol, 1.5\n    \t);\n    }\n    \n    fragColor = vec4(s0, 1.0) * texture(iChannel0, fragCoord / iResolution.xy);\n    //fragColor = vec4(vec3(spotSt), 1.0);\n}","name":"Image","description":"","type":"image"}]}