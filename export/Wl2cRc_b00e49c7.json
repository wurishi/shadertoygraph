{"ver":"0.1","info":{"id":"Wl2cRc","date":"1622535954","viewed":170,"name":"noise——","username":"gggab","description":"noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p){\n    //p = fract(p*vec2(234.34,435.345));\n    //p+=dot(p,p+34.32);\n    //return fract(p.x*p.y);\n    \n    return fract(sin(p.x *100.+p.y*6574.)*5678.);\n}\nfloat SmoothNoise(vec2 uv){\n    vec2 lv = fract(uv);\n    lv = lv * lv * (3. - 2. * lv);\n    vec2 id = floor(uv);\n    \n    float bl = Hash21(id);\n    float br = Hash21(id + vec2(1.,0.));\n    float b = mix(bl,br,lv.x);\n    \n    float tl = Hash21(id + vec2(0.,1.));\n    float tr = Hash21(id + vec2(1.,1.));\n    float t = mix(tl,tr,lv.x);\n    \n    return mix(b,t,lv.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv+=iTime*.1;\n\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    \n\tcol+=SmoothNoise(uv*4.);\n    col+=SmoothNoise(uv*8.)*.5;\n    col+=SmoothNoise(uv*16.)*.25;\n    col+=SmoothNoise(uv*32.)*.125;\n    col+=SmoothNoise(uv*64.)*.0625;\n    \n    col/=1.9375;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}