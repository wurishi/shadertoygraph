{"ver":"0.1","info":{"id":"7lKcRw","date":"1661188127","viewed":108,"name":"Cubemap buffer precision issue","username":"stduhpf","description":"Using built-in cubemap buffer to accumulate results over time leads to precision issues, these isssues are non-existent when using a regular buffer as a cubemap. ","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["cubemap","bug","montecarlo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 sphereToPlane(vec3 p){\n    vec2 uv = vec2(atan(p.y,p.x),atan(length(p.xy),p.z));\n    uv/=vec2(1.,.5)*TAU;\n    return fract(uv+1.);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; \n    vec2 mse =(iMouse.xy-.5*iResolution.xy)/360.*vec2(2.,.5*3.1415);\n    if(iMouse.xy==vec2(0))\n        mse*=0.;\n    mat3 rdroty = mat3(1,0,0,0,cos(mse.y),sin(mse.y),0,-sin(mse.y),cos(mse.y));\n    mat3 rdrotx = mat3(cos(mse.x),0,sin(mse.x),0,1,0,-sin(mse.x),0,cos(mse.x));\n    mat3 rot = rdroty*rdrotx;\n    \n    float d = 1.;\n    \n    vec3 projPos = (vec3(2.*fragCoord-iResolution.xy,iResolution.y*d))*rot;\n    \n    vec3 rd = normalize(projPos);\n    vec3 col = uv.x<.5 ? texture(iChannel0,rd).rgb : \n            texture(iChannel2,sphereToPlane(rd)).rgb;\n\n    fragColor = vec4(linearToSRGB(col/float(iFrame+1)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"void mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n\n    vec3 col = texture(iChannel1,rayDir).rgb;\n    \n     col += .5+.25*sin(rayDir*10.);\n    fragColor = vec4(col,1.0);\n}","name":"Cube A","description":"","type":"cubemap"},{"inputs":[],"outputs":[],"code":"//Image-Based lighting requires linear values to look correct, so these transformations are important.\nconst float TAU = 2.*acos(-1.);\n\n\nvec3 linearToSRGB(vec3 linear){\n    return mix(\n        linear * 12.92,\n        pow(linear, vec3(1./2.4) ) * 1.055 - .055,\n        step( .0031308, linear )\n    );\n}\n\nvec3 srgbToLinear(vec3 srgb){\n    return mix(\n        srgb / 12.92,\n        pow(.947867 * srgb + .0521327, vec3(2.4) ),\n        step( .04045, srgb )\n    );\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 planeToSphere(vec2 uv){\n    uv*=vec2(1.,.5)*TAU;\n    return vec3(cos(uv.x)*sin(uv.y),sin(uv.x)*sin(uv.y),cos(uv.y));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 rayDir = planeToSphere(fragCoord/iResolution.xy);\n    vec3 col = texture(iChannel1,fragCoord/iResolution.xy).rgb;\n    \n    col += .5+.25*sin(rayDir*10.);\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}