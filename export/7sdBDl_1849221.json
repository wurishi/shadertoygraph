{"ver":"0.1","info":{"id":"7sdBDl","date":"1657483135","viewed":158,"name":"visual basic sound","username":"jorge2017a2","description":"visual basic sound","likes":6,"published":1,"flags":8,"usePreview":0,"tags":["visualbasicsound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 drawsound(vec2 p, vec3 colOut )\n{\n    p.x*=0.125;\n    float ret=0.5; ///retraso de sonido vs image\n    float s1=p.y+ sonido((p.x+iTime+ret), 440.0);\n    float s2=p.y+ sonido((p.x+iTime+ret), 150.0);\n    \n    float d1=abs(s1)-0.1;\n    float d2=abs(s2)-0.1;\n    float d= unionSDF(d1, d2);\n     vec3 col= DrawFigBorde(vec3(0.0,0.0,1.0), colOut, d);\n    \n    return col; \n}\n\nvec3 lineaHorizontal(vec2 p, vec3 colOut)\n{   float s1=p.y+ 0.05;\n    float d=abs(s1)-0.05;\n    vec3 col= DrawFigBorde(vec3(0.0,0.0,0.0), colOut, d);\n    \n    return col; \n}\n\nvec3 lineaVertical(vec2 p, vec3 colOut)\n{   float s1=p.x+ 0.05;\n    float d=abs(s1)-0.05;\n    vec3 col= DrawFigBorde(vec3(0.0,0.0,0.0), colOut, d);\n    \n    return col; \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,0.0);\n    float esc=8.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(1.0);\n    col= lineaHorizontal(uv, col);\n    col= lineaVertical(uv, col);\n    col= drawsound(uv, col );\n    \n    \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float freq1;\nfloat freq2;\n\nmat2 rotate(in float a)\n{\n\treturn mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nfloat rand(float n)\n{\n\tfloat fl = floor(n);\n\tfloat fc = fract(n);\n\treturn mix(fract(sin(fl)), fract(sin(fl + 1.0)), fc);\n}\n\nfloat sonido(float time, float freq )\n{   float f1 = sin(6.2831*freq*time) ;\n    float f2=rand(sin(time));\n    float f3=(f1+f2);\n    float t=mod(time,8.0*3.0);\n    float f4;\n    \n    if( t>0.0 &&  t<8.0) f4=0.0;\n    if( t>8.0 &&  t<16.0) f4=(f1*f2);\n    if( t>16.0 && t<24.0) f4=(f1*f2-(f1/f2));\n     \n    return f3+f4;\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    \n    float s1=sonido(time, 440.0 );\n    float s2=sonido(time,150.0 );\n    \n    return vec2(s1+s2)*0.5;\n    \n}","name":"Sound","description":"","type":"sound"}]}