{"ver":"0.1","info":{"id":"4XjyRW","date":"1727038310","viewed":17,"name":"Semicircles spinning","username":"jcponcemath","description":"Still work in progress. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["semicircle","animaiton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Set the rotation parameter\n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1, centered at the screen)\n    vec2 uv = ( fragCoord - 0.5 * iResolution.xy ) / iResolution.y;\n    \n    uv *= 25.0;\n    \n    vec3 color = vec3(0.0); // Initialize color to black\n\n    // Rotation speed parameter\n    float R = 0.1 * iTime; \n\n    // Loop through 10 semicircles\n    for(int i = 1; i <= 40; i++) {\n        float radius = float(i);   // Cast 'i' to float for radius\n        float angle = R * float(i); // Cast 'i' to float for rotation speed\n        \n        // Rotate the UV coordinates around the origin\n        float x_rot = cos(angle) * uv.x - sin(angle) * uv.y;\n        float y_rot = sin(angle) * uv.x + cos(angle) * uv.y;\n        \n        vec2 rotatedUV = vec2(x_rot, y_rot);\n        \n         // Define thickness for each semicircle\n        float thickness = 0.09;  // Increase thickness with the index if you want\n\n        // Define a semicircle by restricting the angle\n        float dist = length(rotatedUV);\n        if(rotatedUV.y > 0.0 && abs(dist - radius) < thickness) {\n            color = vec3(0.3, 0.3 + 0.05 * float(i), 0.7); // Cast 'i' to float for color\n        }\n    }\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}