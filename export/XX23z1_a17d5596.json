{"ver":"0.1","info":{"id":"XX23z1","date":"1708208774","viewed":151,"name":"Scrolling background shader","username":"AgateDragon","description":"Scrolling background shader using time and fract to control the speed of the background.\nhttps://agatedragon.blog/2024/02/17/shadertoy-scrolling-background/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["time","background","fract","speed","scrolling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalised pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Scroll\n    float speed = 0.1;\n    float f = iTime * speed;\n    uv.x += fract(f);\n    \n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}