{"ver":"0.1","info":{"id":"ct3GR8","date":"1681916284","viewed":43,"name":"Sokoban project","username":"fpotier","description":"Buggy Sokoban\n\nUse arrow keys to move.\nPush blue squares on red squares to win.\n","likes":3,"published":1,"flags":48,"usePreview":0,"tags":["sokoban"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WALL   0\n#define TARGET 2\n#define EMPTY  1\n\n#define SQUARE_SIZE 0.1\n#define PADDING 0.01\n\nconst vec3 BROWN = vec3(0.396,0.263,0.129);\nconst vec3 GREY = vec3(0.863,0.863,0.863);\nconst vec3 ORANGE = vec3(1.000,0.647,0.000);\nconst vec3 BLUE = vec3(0., 0., 1.);\nconst vec3 GREEN = vec3(0., 1., 0.);\n\nconst int map[49] = int[49] (\n    WALL, WALL, WALL, WALL, WALL, WALL, WALL,\n    WALL, TARGET, EMPTY, EMPTY, EMPTY, TARGET, WALL,\n    WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL,\n    WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL,\n    WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL,\n    WALL, TARGET, EMPTY, EMPTY, EMPTY, TARGET, WALL,\n    WALL, WALL, WALL, WALL, WALL, WALL, WALL\n);\n\nvec2 getPlayerPosition()\n{\n    return texelFetch(iChannel0, ivec2(0, 0), 0).rg;\n}\n\nvec2 getBoxPosition(int boxNumber)\n{\n    return texelFetch(iChannel0, ivec2(1 + boxNumber, 0), 0).rg;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nvec3 tileColor(int x, int y)\n{\n    int type = map[7 * x + y];\n    if (type == WALL)\n        return BROWN;\n    if (type == EMPTY)\n        return GREY;\n    \n    return vec3(1, 0, 0);\n}\n\nvoid drawMap(in vec2 p, inout vec3 col)\n{\n    for (int i = -3; i <= 3; i++)\n    {\n        for (int j = 3; j >= -3; j--)\n        {\n            vec2 boxCenter = vec2(p.x + 2. * float(j) * (SQUARE_SIZE + PADDING),\n                                  p.y + 2. * float(i) * (SQUARE_SIZE + PADDING));\n            float d = sdBox(boxCenter, vec2(SQUARE_SIZE));\n            vec2 tile = vec2(abs(j -3), i + 3);\n            if (d < 0.)\n                col = tileColor(int(tile.x), int(tile.y));\n            vec2 playerPosition = getPlayerPosition();\n            if (tile == playerPosition)\n            {\n                d = sdCircle(boxCenter, SQUARE_SIZE * 0.8);\n                if (d < 0.)\n                    col = ORANGE;\n            }\n            else \n            {\n                for (int i = 0; i < 4; i++)\n                {\n                    vec2 boxPosition = getBoxPosition(i);\n                    \n                    if (tile == boxPosition)\n                    {\n                        d = sdBox(boxCenter, 0.8 * vec2(SQUARE_SIZE));\n                        if (d < 0.)\n                            col = BLUE;\n                    }\n                }\n            }\n        }\n    }\n}\n\nbool finished()\n{\n    bool win = true;\n    for (int i = 0; i < 4; i++)\n    {\n        vec2 boxPosition = getBoxPosition(i);\n        win = win && (map[7 * int(boxPosition.x) + int(boxPosition.y)] == TARGET);\n    }\n    \n    return win;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n    vec3 col = finished() ? GREEN : vec3(0);\n    \n    drawMap(p, col);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\n#define WALL   0\n#define TARGET 2\n#define EMPTY  1\nconst int map[49] = int[49] (\n    WALL, WALL, WALL, WALL, WALL, WALL, WALL,\n    WALL, TARGET, EMPTY, EMPTY, EMPTY, TARGET, WALL,\n    WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL,\n    WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL,\n    WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL,\n    WALL, TARGET, EMPTY, EMPTY, EMPTY, TARGET, WALL,\n    WALL, WALL, WALL, WALL, WALL, WALL, WALL\n);\n\nvoid tryMovePlayer(inout vec2 position, vec2 movement)\n{\n    vec2 newPosition = position + movement;\n    vec2 boxPosition[4];\n    vec2 newBoxPosition[4];\n    for (int i = 0; i < 4; i++)\n    {\n        boxPosition[i] = texelFetch(iChannel0, ivec2(1 + i, 0), 0).rg;\n        newBoxPosition[i] = boxPosition[i] + movement;\n    }\n\n    if (map[7 * int(newPosition.x) + int(newPosition.y)] == WALL)\n        return;\n        \n    for (int i = 0; i < 4; i++)\n    {\n        if (newPosition == boxPosition[i] && map[7 * int(newBoxPosition[i].x) + int(newBoxPosition[i].y)] == WALL)\n            return;\n        for (int j = 0; j < 4; j++)\n        {\n            if (i != j \n                && newBoxPosition[i] == boxPosition[j]\n                && newPosition == boxPosition[i])\n               return;\n        }\n    }\n       \n    position = newPosition; \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    fragColor = vec4(0.);\n    if (int(fragCoord.x) == 0 && int(fragCoord.y) == 0)\n    {\n        vec2 playerPosition = texelFetch(iChannel0, ivec2(0), 0).rg;\n        if (iFrame == 0)\n            playerPosition = vec2(3, 3);\n        else if (int(mod(float(iFrame), 5.)) == 0)\n        {\n            if (int(texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).r) > 0)\n                tryMovePlayer(playerPosition, vec2(1., 0));\n            else if (int(texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).r) > 0)\n                tryMovePlayer(playerPosition, vec2(-1., 0));\n            else if (int(texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).r) > 0)\n                tryMovePlayer(playerPosition, vec2(0, -1.));\n            else if (int(texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).r) > 0)\n                tryMovePlayer(playerPosition, vec2(0, 1.));\n        }\n        fragColor = vec4(playerPosition, 0., 0.);\n    }\n    else if (int(fragCoord.x) == 1 && int(fragCoord.y) == 0)\n    {\n        vec2 boxPosition = texelFetch(iChannel0, ivec2(1, 0), 0).rg;\n        if (iFrame == 0)\n            boxPosition = vec2(2, 3);\n        else if (boxPosition == texelFetch(iChannel0, ivec2(0), 0).rg)\n        {\n            if (int(texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).r) > 0)\n                boxPosition += vec2(1., 0.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).r) > 0)\n                boxPosition -= vec2(1., 0.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).r) > 0)\n                boxPosition -= vec2(0., 1.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).r) > 0)\n                boxPosition += vec2(0., 1.);\n        }\n        fragColor = vec4(boxPosition, 0., 0.);\n    }\n    else if (int(fragCoord.x) == 2 && int(fragCoord.y) == 0)\n    {\n        vec2 boxPosition = texelFetch(iChannel0, ivec2(2, 0), 0).rg;\n        if (iFrame == 0)\n            boxPosition = vec2(4, 3);\n        else if (boxPosition == texelFetch(iChannel0, ivec2(0), 0).rg)\n        {\n            if (int(texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).r) > 0)\n                boxPosition += vec2(1., 0.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).r) > 0)\n                boxPosition -= vec2(1., 0.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).r) > 0)\n                boxPosition -= vec2(0., 1.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).r) > 0)\n                boxPosition += vec2(0., 1.);\n        }\n        fragColor = vec4(boxPosition, 0., 0.);\n    }\n    else if (int(fragCoord.x) == 3 && int(fragCoord.y) == 0)\n    {\n        vec2 boxPosition = texelFetch(iChannel0, ivec2(3, 0), 0).rg;\n        if (iFrame == 0)\n            boxPosition = vec2(3, 2);\n        else if (boxPosition == texelFetch(iChannel0, ivec2(0), 0).rg)\n        {\n            if (int(texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).r) > 0)\n                boxPosition += vec2(1., 0.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).r) > 0)\n                boxPosition -= vec2(1., 0.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).r) > 0)\n                boxPosition -= vec2(0., 1.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).r) > 0)\n                boxPosition += vec2(0., 1.);\n        }\n        fragColor = vec4(boxPosition, 0., 0.);\n    }\n    else if (int(fragCoord.x) == 4 && int(fragCoord.y) == 0)\n    {\n        vec2 boxPosition = texelFetch(iChannel0, ivec2(4, 0), 0).rg;\n        if (iFrame == 0)\n            boxPosition = vec2(3, 4);\n        else if (boxPosition == texelFetch(iChannel0, ivec2(0), 0).rg)\n        {\n            if (int(texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).r) > 0)\n                boxPosition += vec2(1., 0.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).r) > 0)\n                boxPosition -= vec2(1., 0.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).r) > 0)\n                boxPosition -= vec2(0., 1.);\n            else if (int(texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).r) > 0)\n                boxPosition += vec2(0., 1.);\n        }\n        fragColor = vec4(boxPosition, 0., 0.);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}