{"ver":"0.1","info":{"id":"DlyXDc","date":"1686496054","viewed":51,"name":"Simplest 3D Test - NatLab","username":"NatShadLab","description":"from The Art of Code:\nhttps://www.youtube.com/watch?v=dKA5ZVALOhs&ab_channel=TheArtofCode","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat2 m = mat2( 1.6,  2.6, -2.6,  1.6 );\n\nvec2 hash( vec2 p ) {\n\tp = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p ) {\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\tvec2 i = floor(p + (p.x+p.y)*K1);\t\n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n    vec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot(n, vec3(70.0));\t\n}\n\n\nfloat DistLine(vec3 ro, vec3 rd, vec3 p) {\n    return length(cross(p-ro, rd))/length(rd);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/ iResolution.y;\n    \n    vec3 ro = vec3(0., 0., -1.);\n    vec3 rd;\n    \n    vec3 p;\n    float px, py, pz;\n    float d;\n    float newd;\n    vec3 f;\n    vec3 col;\n    float t;\n    float num = 256.;\n    float rand;\n    \n    vec3 bg = vec3(1.);\n    \n    for (float i =0.; i < num; i++){\n        rand = mix(.5, 1., noise(vec2(i)));\n        rd = (vec3(uv.x, uv.y, 0.) -ro) * rand;\n        t= (floor(2. *fract(i * .5)) * 2. - 1.) * iTime + i;\n        px = sin(t + i) * rand + noise(vec2(iTime*.1618 + i));\n        py = sin(t*1.618 + i)*.5 * rand - noise(vec2(iTime * 1.618 *.1618 + i));\n        pz = .1618 + cos(t + i) * rand + noise(vec2(iTime*.1618 + i));\n        p = vec3(px, py, pz);\n        d = DistLine(ro * pow(1.006,i), rd, p);  \n        d = smoothstep(.095, .09, d);\n        newd += d;\n        \n        bg = vec3(1./ newd);\n        \n        newd = smoothstep(.1, .09, newd);\n        \n        \n        \n        col.x = (1. + .5 * px );\n        col.y = (1. + .5 * py );\n        col.z = (1. - .5 * pz );\n        col = normalize(col);\n        col = mix(col, bg, newd);\n        col *= ceil(d) * rand;\n        \n        \n        f = mix(max(f, col),f, pz);\n\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(f,1.);\n}","name":"Image","description":"","type":"image"}]}