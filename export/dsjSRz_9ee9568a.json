{"ver":"0.1","info":{"id":"dsjSRz","date":"1669850018","viewed":191,"name":"Mipmaps & textureGrad()","username":"mla","description":"Two set of rings rotating in opposing directions, at different speeds. Original shader by @hamoid.\n\nThe rotation breaks the antialiasing if texture() is used (on the left). Solution - use textureGrad() (on the right).","likes":2,"published":3,"flags":16,"usePreview":1,"tags":["circles","rings"],"hasliked":0,"parentid":"WlGXDm","parentname":"Everything ends where it started"},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int CHAR_X = 88;\n// const int CHAR_Y = 89;\n// const int CHAR_Z = 90;\n\n#define key(code) (texelFetch(iChannel3, ivec2((code),2),0).x != 0.0)\n\nmat2 rot(float a) {\n    return mat2(sin(a), cos(a), -cos(a), sin(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 pos ) {\n    vec2 uv = (pos-0.5*iResolution.xy)/iResolution.y;\n    float l = 55.*length(uv);\n    vec4 ring = vec4(smoothstep(-0.1, 0.1, sin(l)));\n    \n    float l2 = l / 6.2831855 - 5.;\n    l2 = iTime * floor(l2) * .02;\n    vec2 dx = vec2(1.0/iResolution.y,0.0); // same as dFdx(uv);\n    vec2 dy = vec2(0.0,1.0/iResolution.y); // same as dFdy(uv);\n    mat2 m = rot(l2); // Pre and post rotation give opposite rotations\n    if (uv.x < 0.0) {\n      fragColor = mix(\n              texture(iChannel0,m*uv),\n              texture(iChannel0,uv*m),\n              ring);\n    } else {\n      mat2 m1 = key(CHAR_X) ? m : mat2(1);\n      fragColor = mix(\n              textureGrad(iChannel0,m*uv,m1*dx,m1*dy),\n              textureGrad(iChannel0,uv*m,dx*m1,dy*m1),\n              ring);\n    }\n}","name":"Image","description":"","type":"image"}]}