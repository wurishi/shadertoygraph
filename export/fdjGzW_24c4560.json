{"ver":"0.1","info":{"id":"fdjGzW","date":"1617037017","viewed":835,"name":"Simplest wave equation ","username":"michael0884","description":"wave","likes":29,"published":1,"flags":32,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 Q, in vec2 U )\n{\n//render\n    vec4 t = 10.*A(U); \n    //color = amplitude\n    Q.xyz = vec3(1,0,0)*t.x - vec3(0,0,1)*t.x + vec3(0.,0.5,0.)*abs(t.x);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n\n//a way to sample pixels shorthand \n#define A(U) texture(iChannel0,(U)/R)\n\n//the time step\n#define dt 0.9\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 field, in vec2 pos )\n{\n    //THE field consists of 2 values\n    //x component - is the amplitude\n    //y component - is the speed with which the amplitude changes, ie velocity\n    //zw - unused\n    \n    //load the previous frame field state in this pixel\n    field = A(pos);\n \n    //wave simulation HERE\n       \n    //average of the neighbor pixels\n    vec4 avg = 0.25*(A(pos+vec2(0,1))+A(pos-vec2(0,1))+A(pos+vec2(1,0))+A(pos-vec2(1,0)));\n    \n    // the average of the amplitude around minus the amplitude here \n    //is the force actig on this pixel amplitude\n    float force = avg.x-field.x; \n    \n    //velocity update first\n    field.y += dt*force; //velocity += force * time step\n    \n    //field amplitude update then\n    field.x += dt*field.y; //position += velocity*time step\n\n    //initial conditions\n    if (iFrame < 1) {\n        //set initial amplitude for which we want to know its future state\n    \tfield.x = exp(-0.01*dot(pos-0.4*R,pos-0.4*R)) + exp(-0.01*dot(pos-0.6*R,pos-0.6*R));\n        field.y = 0.;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}