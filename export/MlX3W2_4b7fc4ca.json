{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// find the distance from the center of the screen\n// calculate an offset\n// find the angle from the center of the screen\n// sample a pixel on r from the offset\n// sample a pixel on g from the -offset\n// sample a pixel on b\n\nconst float RADIUS = 0.85;\nconst float SOFTNESS = 0.65;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 position = fragCoord.xy / iResolution.xy / vec2(0.6,1.0) - vec2(0.8,0.5) ;\n\tfloat len = length(position);\n    float vignette = 1.0-smoothstep(RADIUS, RADIUS-SOFTNESS, len);\n    float angle = dot(position, uv) / (length(position)*length(uv));\n    vec2 screenPos = vec2(1.0)-( fragCoord.xy /iResolution.xy );\n    float colorR = texture(iChannel0, uv-(vignette*(position*(len*0.015)))).r;\n    float colorG = texture(iChannel0, uv).g;\n    float colorB = texture(iChannel0, uv+(vignette*(position*(len*0.015)))).b;\n\n    fragColor = vec4(colorR, colorG, colorB, 1.0);\n\t//fragColor = vec4(vignette);\n    //fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MlX3W2","date":"1425164608","viewed":1248,"name":"RGB Shift at edges","username":"setpixel","description":"Shifts the RGB channels at the edges sort of like old VHS tapes.","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["shift"],"hasliked":0,"parentid":"","parentname":""}}