{"ver":"0.1","info":{"id":"ddlGWl","date":"1667108324","viewed":87,"name":"Fractal RND ","username":"renkin4","description":"KFIS Fractal. Followed art of code youtube while making this ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","research"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle) \n{\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -.5 *iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    uv *= 1.25;\n    \n    vec3 col = vec3(0);\n     \n    uv.x = abs(uv.x);\n    \n    uv.y += tan((5./6.) * 3.1415) * .5;\n    \n    vec2 n = N((5./6.) * 3.1415);  \n    float d2 = dot(uv - vec2(.5, 0.), n);\n    \n    uv -= n*max(0., d2)*2.;\n    \n    //col += smoothstep(0.01, 0., abs(d2));\n    \n    n = N((2./3.) * 3.1415);\n    \n    float scale = 1.;\n    uv.x += .5;\n    for(int i = 0; i < 4; ++i)\n    {\n        uv *= 3.;\n        scale *= 3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n*min(0., dot(uv, n))*2.;\n    }\n    \n    float d = length(uv - vec2(clamp(uv.x, -1., 1.), 0));\n    col += smoothstep(1./iResolution.y, .0, d / scale);\n    //col.rg += uv;\n\n    uv /= scale;\n    col += texture(iChannel0, uv * 2. - iTime *0.03).rgb;\n\n    fragColor = vec4(col, 1.0);\n} \n","name":"Image","description":"","type":"image"}]}