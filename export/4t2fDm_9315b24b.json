{"ver":"0.1","info":{"id":"4t2fDm","date":"1516092328","viewed":432,"name":"HUE-Distort","username":"Sunpy","description":"Just some sketching ideas for until I can draw my own textures.\nIt is ment to be used to make glass shatter effect (RGB values changes the angle of where it samples)\nIt converts the color to HSV to use the Hue wheel as the angle and uses the S as distance","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["distort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.283185307179586476925286766559\n\nvec3 rgb2hsv(in vec3 c)\n{\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n\tvec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec4 distort( in sampler2D img, in vec4 shatter, in vec2 uv ){\n    vec3 hsv = rgb2hsv(shatter.rgb);\n    \n    vec2 offset = vec2(0.0);\n    \n    offset.x += cos(hsv.r * TWO_PI) * 0.1 * hsv.g;\n    offset.y += sin(hsv.r * TWO_PI) * 0.1 * hsv.g;\n    \n    vec4 color = textureLod(img, (uv + offset), 0.);\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 shatter = textureLod(iChannel1, uv, 0.);\n    \n    vec4 color = distort(iChannel0, shatter, uv);\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}