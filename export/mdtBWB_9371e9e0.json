{"ver":"0.1","info":{"id":"mdtBWB","date":"1697799545","viewed":44,"name":"normalized mouse vector","username":"minghir","description":"Learning how normalize function works. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","rotation","normalize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n\nvoid mainImage( out vec4 O, vec2 I )\n{\n    vec2 uv = (2.*I-R.xy ) / R.y ;\n    vec2 muv = (2.*iMouse.xy-R.xy)/R.y; \n    \n    if( iMouse.z <= 0.) muv *= rot(iTime/5.) ;\n   \n    float c = distance(vec2(0),uv)-0.01, // center\n          d = distance(uv,muv)-0.03, // mouse pointer vector\n          dn = distance(uv,normalize(muv))-0.02; // normalized mouse pointer vector\n      \n    O = step(0.,c*d*dn)-vec4(d*d,dn*dn,c*c,1.0) ;\n}","name":"Image","description":"","type":"image"}]}