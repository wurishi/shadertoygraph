{"ver":"0.1","info":{"id":"lfjGRW","date":"1703900623","viewed":59,"name":"Cheezy 80s Font","username":"DwayneBrah","description":"Shader text \"hello world\". ","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["80s","font"],"hasliked":0,"parentid":"4sBfRd","parentname":"Shader Text for beginners"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 col_a = texture(iChannel0, uv);\n    vec4 col_b = texture(iChannel1, uv);\n    vec4 col_c = texture(iChannel2, uv);\n    \n    \n    fragColor = col_c;\n    \n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define C(c) U.x-=.5; O+= char(U,64+c)\n\nvec4 char(vec2 p, int c) \n{\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel0, p/16. + fract( vec2(c, 15-c/16) / 16. ), dFdx(p/16.),dFdy(p/16.) );\n}\n\nvoid mainImage( out vec4 O, vec2 uv )\n{\n    O = vec4(0.0);\n    uv /= iResolution.y;\n    vec2 position = vec2(-0.147, 0.38);\n    float FontSize = 18.;\n    vec2 U = ( uv - position)*64.0/FontSize;\n    C(8);C(5);C(12);C(12);C(15);C(-32);C(23);C(15);C(18);C(12);C(4);C(-31);\n    O = O.xxxx;\n}\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 uv_zoomed = vec2(uv.x+(0.001*sin(iTime*0.2)), uv.y);\n    vec4 col_b_zoomed = texture(iChannel1, uv_zoomed);\n    uv_zoomed += vec2(0.0, 0.001);\n    col_b_zoomed += texture(iChannel1, uv_zoomed);\n    uv_zoomed += vec2(0.0, 0.001);\n    col_b_zoomed += texture(iChannel1, uv_zoomed);\n    \n    col_b_zoomed /= 3.0;\n\n    //vec2 uv_zoomed = (uv-0.5) * 0.998 + 0.5;\n    //vec2 uv_zoomed = uv;\n    \n    \n    vec4 col_a = texture(iChannel0, uv);\n    \n    \n    vec4 col_out = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    col_out += col_a*0.3;\n    col_out += col_b_zoomed*0.95;\n    \n    col_out = vec4(clamp(col_out.r, 0.0, 1.0));\n    fragColor = col_out;\n    \n    \n    \n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"vec4 col_b;\n\nfloat flat_range = 0.6;\nfloat horizon = 0.5;\nfloat multiplier = 16.0;\n\n\nvec3 get_fake_reflection (vec2 normal, vec2 uv) {\n    \n    \n    \n    vec3 reflection;\n    normal *= multiplier*(col_b.r*1.7);\n    \n    \n    float nearness = normal.y;\n    nearness *= (normal.x+1.0);\n\n    if (nearness > 0.0) {\n        reflection += COl_SKY*abs(normal.y);\n    };\n    if (nearness < 0.0) {\n        reflection += COl_GROUND_1*abs(normal.y);;\n    };\n    \n    float position_horizon = (uv.y - horizon) * multiplier;\n     \n     \n    float mixer = 1.0 - (reflection.r*1.0);\n    vec3 flat_bit;\n    if (normal.y > -flat_range && normal.y < flat_range && col_b.r > 0.9) {\n        \n        \n        flat_bit += COl_SKY * clamp(position_horizon, 0.01, 1.0);\n        flat_bit += COl_GROUND_1 * clamp(-position_horizon, 0.0, 1.0);\n        \n        \n    };\n       \n    reflection.rgb += flat_bit*mixer;\n    \n\n    return(reflection);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv_up = vec2(uv.x, uv.y-0.001);\n    vec2 uv_left = vec2(uv.x-0.001, uv.y);\n\n    col_b = texture(iChannel1, uv);\n    vec4 col_b_up = texture(iChannel1, uv_up);\n    vec4 col_b_left = texture(iChannel1, uv_left);\n    \n    vec4 col_out = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    float normal_vertical =   col_b_up.r   -  col_b.r;\n    float normal_horizontal = col_b_left.r -  col_b.r;\n    \n    vec2 fake_normal = vec2(normal_horizontal, normal_vertical);\n    \n    col_out.rgb += get_fake_reflection(fake_normal, uv);\n    //col_out += col_b;\n    \n    fragColor = col_out;\n\n    \n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\nvec3 COl_WHITE =   vec3(1.0,  1.0,  1.0);\nvec3 COl_SKY =   vec3(0.4,  0.8,  1.0);\nvec3 COl_GROUND_1 =   vec3(0.8,  0.7,  0.2);\n","name":"Common","description":"","type":"common"}]}