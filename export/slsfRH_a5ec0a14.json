{"ver":"0.1","info":{"id":"slsfRH","date":"1650607733","viewed":97,"name":"NineSlice","username":"obosch","description":"Renders a 9slice texture on viewport. ","likes":2,"published":1,"flags":0,"usePreview":1,"tags":["9slice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Use javascript console to set a custom texture. Eg.\n   gShaderToy.SetTexture(0, {\n     mSrc:'https://connect-prd-cdn.unity.com/20201006/learn/images/a3095c92-7acb-43ac-a006-679ab8d1bb55_image8.png',\n     mType:'texture', mID:1, \n     mSampler:{ filter: 'mipmap', wrap: 'repeat', vflip:'true', srgb:'false', internal:'byte'}\n   });\n*/\n\nconst vec4 nslice_coords = vec4(136,135,136,135); /* Left, Top, Right, Bottom */ \n\n\nvec4 nine_slice(in vec2 fragCoord)\n{\n    // 9 Slice texture uv coordinates\n    vec2 nslice_tl = nslice_coords.xy / iChannelResolution[0].xy;\n    vec2 nslice_br = vec2(iChannelResolution[0].x - nslice_coords.z, iChannelResolution[0].y - nslice_coords.w) / iChannelResolution[0].xy;\n\n    // Texture border pixel coordinates\n    const vec2 border_tl = nslice_coords.xy;\n    vec2 border_br = iResolution.xy - nslice_coords.zw;\n\n    vec2 sample_uv;\n\n    // top\n    if (fragCoord.y <= border_tl.y)\n        sample_uv.y = fragCoord.y/iChannelResolution[0].y;\n    // bottom\n    else if (fragCoord.y >= border_br.y)\n        sample_uv.y = nslice_br.y + ((fragCoord.y - border_br.y) / iChannelResolution[0].y); \n    else\n        // tile\n        sample_uv.y = nslice_tl.y + mod(fragCoord.y - nslice_coords.y, (nslice_br.y -  nslice_tl.y) * iChannelResolution[0].y) / iChannelResolution[0].y;\n        \n     // left\n    if (fragCoord.x <= border_tl.x)\n        sample_uv.x = fragCoord.x/iChannelResolution[0].x;\n    // right\n    else if (fragCoord.x >= border_br.x)\n        sample_uv.x = nslice_br.x + ((fragCoord.x - border_br.x) / iChannelResolution[0].x); \n    else \n        // tile\n        sample_uv.x = nslice_tl.x + mod(fragCoord.x - nslice_coords.x, (nslice_br.x -  nslice_tl.x) * iChannelResolution[0].x) / iChannelResolution[0].x;\n            \n    return texture(iChannel0, sample_uv);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    fragColor = nine_slice(fragCoord);  \n}","name":"Image","description":"","type":"image"}]}