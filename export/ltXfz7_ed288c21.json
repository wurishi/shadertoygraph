{"ver":"0.1","info":{"id":"ltXfz7","date":"1511466090","viewed":1146,"name":"self-reconfiguring circuit","username":"laserdog","description":"more messing with voronoi. some weird transforming gundam-looking thing. inspired by srtuss's use of chebychev distance in digital brain (https://www.shadertoy.com/view/4sl3Dr)","likes":26,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","circuit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi  3.14159\n#define tau 6.28318\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a)) // col1a col1b col2a col2b\n\n// random2 function by Patricio Gonzalez\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nconst float timeDiv = 1.5;\n\nfloat voronoi(vec2 uv) \n{\n    vec2 cell = floor(uv);\n    vec2 frac = fract(uv);\n    float ret = 100.;\n    \n    float t = iTime / timeDiv;\n    float change = floor(t / 2.) + fract(t) * floor(mod(t, 2.));\n    \n    for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <=1; j++) {\n        \tvec2 neighbor = vec2(float(i), float(j));\n            vec2 rand = random2(cell + neighbor);\n            float t = iTime / 1.5;\n            rand = 0.5 + 0.5 * sin(change * 4. + 2. * pi * rand);\n            vec2 toCenter = neighbor + rand - frac;\n            ret = min(ret, max(abs(toCenter.x), abs(toCenter.y)));\n        }\n    }\n    \n    return ret;\n}\n\n// variant of iq's gradient function for even-thickness lines\nvec2 gradient(in vec2 x, float thickness)\n{\n\tvec2 h = vec2(thickness, 0.);\n    return vec2(voronoi(x + h.xy) - voronoi(x - h.xy),\n               voronoi(x + h.yx) - voronoi(x - h.yx)) / (2. * h.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n\tvec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float t = iTime / timeDiv;\n    float change = floor(t / 2.) + fract(t) * floor(mod(t, 2.));\n    float colSwitch = sin(change * pi / 2.);\n    \n    uv -= .5;\n    uv *= rot(change * pi / 2.);\n    uv += .5;\n    \n    uv *= 2.85;\n    \n    float val = voronoi(uv) / length(gradient(uv, .02));\n    float colVal = pow(val, 1.1) * 1.05;\n    \n    fragColor.rgb = mix(vec3(0., colVal, 0.), \n                        mix(vec3(0., 0., colVal), vec3(colVal, 0., 0.), clamp(colSwitch, .0, 1.)),\n                        clamp(colSwitch + 1., 0., 1.));\n    fragColor.rgb = mix(mix(vec3(.45, .0, .8), \n                        mix(vec3(.85, .2, .2), vec3(.5, .85, .55), clamp(colSwitch, .0, 1.)),\n                        clamp(colSwitch + 1., 0., 1.)),\n                        fragColor.rgb, colVal);\n}","name":"Image","description":"","type":"image"}]}