{"ver":"0.1","info":{"id":"tlc3W4","date":"1576332686","viewed":453,"name":"Matenta Visualized","username":"sirjofri","description":"my first sound visualizer using the sound of a friend. Also a training session for text rendering and circle UVs.","likes":4,"published":3,"flags":64,"usePreview":0,"tags":["audio","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"llB3RR","filepath":"https://soundcloud.com/user-60649550/matenta-2019-free-download-cc-license-160bpm","previewfilepath":"https://soundcloud.com/user-60649550/matenta-2019-free-download-cc-license-160bpm","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Sound: https://soundcloud.com/user-60649550/matenta-2019-free-download-cc-license-160bpm\n\n#define PI 3.1415926535897932384626433832795\n#define TPI 6.283185307179586476925286766559\n#define BPM 160.\n\n// my alphabet\n#define LC 4*16+3\n#define LF 4*16+6\n#define LM 4*16+13\n#define La 6*16+1\n#define Lb 6*16+2\n#define Lc 6*16+3\n#define Ld 6*16+4\n#define Le 6*16+5\n#define Li 6*16+9\n#define Ll 6*16+12\n#define Lm 6*16+13\n#define Ln 6*16+14\n#define Lo 6*16+15\n#define Lp 7*16+0\n#define Lr 7*16+2\n#define Ls 7*16+3\n#define Lt 7*16+4\n#define Lw 7*16+7\n#define L0 3*16+0\n#define L1 3*16+1\n#define L2 3*16+2\n#define L6 3*16+6\n#define L9 3*16+9\n\n// symbols\n#define Sa 5*16+11\n#define Sb 2*16+6\n#define Sc 5*16+13\n#define Sd 2*16+13\n#define Se 7*16+12\n\n// length of text string\n#define l 60.\nint[] message = int[] (\n /*  1   2   3   4   5   6   7   8   9  10  */\n     5, 10, 11, 32, LM, La, Lt, Le, Ln, Lt,\n    La, 32, L2, L0, L1, L9, 32, Sa, LF, Lr,\n    Le, Le, 32, Ld, Lo, Lw, Ln, Ll, Lo, La,\n    Ld, 32, Sb, 32, LC, LC, Sd, Ll, Li, Lc,\n    Le, Ln, Ls, Le, 32, Se, 32, L1, L6, L0,\n    Lb, Lp, Lm, 32, Sc, 32, 32, 32, 32, 32\n);\n\n// text mask\nfloat text(vec2 uv)\n{\n    uv *= 2.;\n    float gx = uv.x+iTime*.01+.5+clamp(-1., 1., tan(uv.x+iTime*TPI/60.*BPM/2.))*.004;\n    float x = mix(.25, .75, mod(gx, .05)/.05);\n    float y = clamp(0., 1., uv.y*7.);\n    int char = message[int(mod(gx/.05, l))];\n    float c = float(char)+16.;\n    float col = mod((x+c)/16., 1.);\n    float row = floor((x+c)/16.);\n    float a = texture(iChannel1, vec2(col, y/16.-row/16.)).a;\n    return smoothstep(.5, .48, a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float a = distance(uv, vec2(.5))*2.;\n    float c = abs(atan(.5-uv.x, .5-uv.y)/PI);\n    \n    float d = texture(iChannel0, vec2(c, .5)).r*.2;\n    float i = 1.-texture(iChannel0, vec2(c, .8)).r*a;\n    float s = texture(iChannel0, vec2(mod(a+d-iTime*.1, 1.), 0)).r;\n    \n    float cmask = smoothstep(1., .9, a+d*3.);\n    float mo = .5+sin(iTime*PI/60.*BPM)*.5;\n    vec3 color = vec3(sin(s+a), mo, 1.-mo);\n    \n    vec3 fi = cmask*color*s*i*smoothstep(.0, .2, a); // final image\n    vec3 bg = mix(vec3(mix(.3, .01, a)), fi, cmask); // mix background\n    float t = text(uv);\n    \n    vec3 comp = mix(bg, vec3(1.), t);\n    \n    fragColor = vec4(comp,1.0);\n}","name":"Image","description":"","type":"image"}]}