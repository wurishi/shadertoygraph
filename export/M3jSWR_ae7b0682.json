{"ver":"0.1","info":{"id":"M3jSWR","date":"1710470918","viewed":93,"name":"Retro VHS Glitch","username":"joezen","description":"Simulates the nostalgic look of VHS tape artifacts against a gradient background with a noisy tracking line.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["glitch","tracking"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float u_speed = 0.5; // Speed, can vary between 0 and 1.0\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; // Normalized pixel coordinates\n    vec3 bgColor = mix(vec3(0.1, 0.15, 0.3), vec3(0.0, 0.05, 0.1), uv.y); // Background color gradient\n    \n    // Initialize streak amount\n    float streakAmount = 0.0;\n\n    // Loop to create multiple streaks\n    for (int i = 0; i < 10; ++i) {\n        float t = float(i) / 10.0; // Position of each streak as a fraction\n        float stripePos = mod(uv.y + t + iTime * u_speed, 1.0); // Calculate the moving position of the streak over time\n        streakAmount += smoothstep(0.02, 0.0, abs(stripePos - uv.y)); // Increment the streak amount based on proximity to the current streak\n    }\n\n    // Apply a VHS-style tracking line effect that also moves over time\n    float trackingLinePos = mod(iTime * 0.1, 1.0); // Position of the tracking line\n    streakAmount += smoothstep(0.05, 0.02, abs(trackingLinePos - uv.y)) * rand(vec2(trackingLinePos, uv.x)) * 2.0; // VHS tracking effect with added noise\n\n    // Combine background color with streak effect and add some color shifting for a more dynamic look\n    vec3 colorShift = vec3(0.05, 0.02, -0.02) * streakAmount; // Simple color shift based on the streak amount\n    vec3 finalColor = bgColor + colorShift;\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}