{"ver":"0.1","info":{"id":"MlXyzN","date":"1503698324","viewed":907,"name":"polar viz","username":"airtight","description":"polar freq viz with bass bounce + shake. to do - add PPO.","likes":14,"published":1,"flags":64,"usePreview":0,"tags":["sound","fft","audio","polar","viz"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXXWX","filepath":"https://soundcloud.com/sofoclemusic/milk-honey","previewfilepath":"https://soundcloud.com/sofoclemusic/milk-honey","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.14159265358\n#define TWO_PI 6.28318530718\n\nfloat random1d(float n){\n\treturn fract(sin(n) * 43758.5453);\n}\n\nvec3 hsv2rgb(vec3 c){\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec2 rotate2D(vec2 position, float theta){\n    mat2 m = mat2( cos(theta), -sin(theta), sin(theta), cos(theta) );\n    return m * position;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    //fix aspect ratio\n    uv.x *= iResolution.x/iResolution.y;\n\t\n    //get a bass level\n    float bass  = texelFetch( iChannel0, ivec2(12,0), 0 ).x; \n    //bass bounce\n    uv *= 1.0 + (1.0 - bass)*0.5;\n    //bass shake\n    uv += (vec2(random1d(iTime),random1d(iTime + 1.0)) - 0.5)* 0.015;\n    //spin\n    uv = rotate2D(uv, iTime*0.2);\n    \n    uv += 0.5;\n    \n    // get polar angle and radius\n\tvec2 pos = vec2(0.5)-uv;\n    float r = length(pos)*2.0 ;\n    float a = atan(pos.y,pos.x);   \n    float normAng = fract(0.75 -(a /PI) /2.0); //0 - 1 clockwise\n    \n    //get stepped angle\n    float SPOKES = 32.0;\n    float sa = floor(normAng * SPOKES)/ SPOKES;\n   \n    // the sound texture is 512x2\n    int tx = int(sa*512.0);\n\t// first row is frequency data (48Khz/4 in 512 texels, meaning 23 Hz per texel)\n\tfloat fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n    \n    //white spokes\n    vec3 fgCol = vec3(1.0);  \n\n    //mask spokes by angle\n    float aEdge = 0.1;\n    float s = fract(normAng * SPOKES);\n    float mask = smoothstep(0.4, 0.4 + aEdge, s);\n    float edgerr = smoothstep(aEdge, 0.0, s);\n    mask = max(mask,edgerr);\n    \n    //mask radial center and edges\n    float rEdge = 0.01;\n    float maxLen = 1.0;\n    float innerRad = 0.4;\n    float inner = 1.0 - smoothstep(innerRad,innerRad + rEdge, r);\n    \n    //outer edge dependent on volume\n    float top = innerRad + maxLen * fft * fft;\n    float outer = smoothstep(top, top + rEdge,r);\n    mask = max(mask,inner);\n    mask = max(mask,outer);\n    fgCol -= mask;\n    \n    //add a glowy rainbow\n    float radialGrad = (1.0 - r * 0.4) * 2.0;\n    vec3 bgCol = hsv2rgb(vec3(normAng + iTime*0.2,0.9,fft*fft * radialGrad + 0.1));\n    \n    //knockout inner circ\n    float inner2 = 1.0 - step(0.2, r);\n    bgCol = min(bgCol,1.0 - inner2);\n    \n    //vec3 col = mix(fgCol,bgCol,mask);\n    vec3 col = bgCol + fgCol;\n    \n    // output final color\n\tfragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}