{"ver":"0.1","info":{"id":"dtl3zf","date":"1706780783","viewed":55,"name":"polar_mapping","username":"moshe","description":"Polar coordinates texture mapping","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = 3.1415;\n    float levels = 5.0;\n    float segments = 4.0;\n    float minLevel = 1.0;\n    float maxLevel = 3.0; // +1\n    \n    vec2 uv = (fragCoord.xy-0.5*iResolution.xy)/iResolution.y;\n    vec2 st = vec2(atan(uv.x, uv.y), length(uv));\n    vec2 m = vec2((st.x/(2.*pi)+pi/2.)*segments, st.y*levels);\n    vec3 col = texture(iChannel0, m).rgb;\n    if(m.y < minLevel) col = vec3(0);\n    if(m.y > maxLevel) col = vec3(0);\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}