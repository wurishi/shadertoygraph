{"ver":"0.1","info":{"id":"M32cRw","date":"1727107753","viewed":10,"name":"Salt Scales","username":"whereisgavin","description":"some nice colors","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M1 1597334677U     //1719413*929\n#define M2 3812015801U     //140473*2467*11\nfloat hash_Tong(uvec2 q)\n{\n\tq *= uvec2(M1, M2);\n    uint n = q.x ^ q.y;\n    n = n * (n ^ (n >> 15));\n    return float(n) * (1.0/float(0xffffffffU));\n}\n\nvec2 curve(float x, float t)\n{\n    return vec2(x,tanh(cos(x + t)));\n}\nfloat dist(vec2 pos, float t)\n{\n    vec2 point = curve(pos.y - 0.1, t);\n    return abs(length(point) - length(pos));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = 0.04 * iTime;\n    vec2 uv = fragCoord/iResolution.xy;\n    uvec2 up = uvec2(fragCoord)*uint(iFrame);\n    float noise = hash_Tong(up);\n    vec3 col = 0.5 + 0.5*cos(t+uv.xyx+vec3(0,2,4));\n    \n    float min_dist = 1.0;\n    for (float i = 0.0; i < 1.0; i = i + 0.02)\n    {\n        float dist = dist(uv - (0.25 / i), t);\n        min_dist = min(dist, min_dist);\n    }\n      \n    float spray = 0.2 * pow(noise, 4.0);\n    //float spray = 0.15 * pow(noise, 1.0);\n    vec3 base = vec3(1.5 + spray);\n    vec3 color = (12.0 * sqrt(min_dist)) * col;\n    color = base - color;\n    color = pow(color, vec3(2.0));\n    color = 1.25 * tanh(color);\n    color = 1.25 * tanh(color);\n    color = 1.25 * tanh(color);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}