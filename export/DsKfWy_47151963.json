{"ver":"0.1","info":{"id":"DsKfWy","date":"1698609991","viewed":74,"name":"Yin Yang Rotation","username":"Crystalize","description":"Just some rotating Yin Yang fun. :)","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["rotation","yinyang"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define s 4.\n#define eps 0.000000001\n#define R vec2(1,0)\n#define co1 vec3(1,1,0.9)\n#define co2 vec3(.1,.1,.15)\n\nvec2 cmul(vec2 z, vec2 c) {\n    return vec2(z.x * c.x - z.y * c.y, z.x * c.y + z.y * c.x);\n}\n\nvec2 cdiv(vec2 z, vec2 c) {\n    float r = dot(c, c);\n    return vec2(z.x * c.x + z.y * c.y, z.y * c.x - z.x * c.y) / r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord.xy - 0.5*iResolution.xy) / iResolution.y;\n    float t = iTime * .5;\n    vec2 rot = vec2(cos(t),sin(t));\n    vec2 nrot = vec2(cos(-t),sin(-t));\n    \n    uv *= 2.;\n    \n    uv = dot(uv,uv)>1.?cmul(cdiv(R,uv),rot):cmul(uv,rot);\n    \n    for(int i = 0; i < 6; i++) {\n        vec2 lic = cmul(uv * s - R*s*0.5,nrot);\n        vec2 ric = cmul(-uv * s - R*s*0.5,nrot);\n        uv = dot(lic,lic)<1.?lic:uv;\n        uv = dot(ric,ric)<1.?ric:uv;\n    }\n    float r = dot(uv,uv);\n    vec3 c1 = 1.-vec3(sin(r*r));\n    vec3 c2 = vec3(0);\n    vec2 lc = uv*2.+R;\n    vec2 rc = uv*2.-R;\n    c2 += uv.y > 0. ? co1 : co2;\n    c2 += dot(lc,lc) < 1. ? co1-co2 : dot(rc,rc) < 1. ? co2-co1 : c2;\n    c2 += dot(lc,lc) < 1. && uv.y < eps ? co1 : dot(lc,lc) < 1. && uv.y > eps ? co2 : vec3(0);\n    c2 += dot(rc,rc) < 1. && uv.y > 0. ? co2 : dot(rc,rc) < 1. && uv.y < 0. ? co1 : vec3(0);\n\n    fragColor = vec4(c1*c2,1.0);\n}","name":"Image","description":"","type":"image"}]}