{"ver":"0.1","info":{"id":"flBGD1","date":"1623851290","viewed":101,"name":"mandelbrot sound","username":"incription","description":"tagging sound to mandelbrot set by shading orbits if they correspond to the sound\n\nits also my first project","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["soundfractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XtXXzs","filepath":"https://soundcloud.com/simon-lysander-overstall/2-9-r-3-9","previewfilepath":"https://soundcloud.com/simon-lysander-overstall/2-9-r-3-9","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int iter = 100;\n\nvec4 scale = vec4(3.5,2.5,-2.25,-1.25);\n\nfloat mandel(vec2 c, vec2 uv)\n{\n    vec2 z = c;\n    vec2 prev = vec2(0, 0);\n    int i;\n    \n    float same = 0.;\n    float freq;\n    \n    for(i=0; i<iter; i++) {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.y * z.x + z.x * z.y) + c.y;\n\n        if((x * x + y * y) > 4.0) break;\n        float d = length(z - prev);\n        \n        prev = z;\n        z.x = x;\n        z.y = y;\n        \n        freq = abs((((z) - scale.zw)/scale.xy).x - 0.5);\n        same += pow(texture(iChannel0, vec2(freq, 0)).x, 10.);\n    }\n    \n    return float(i)/float(iter) * pow(same/float(iter),0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    scale *= 0.75;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv;\n    uv = (uv * scale.xy) + scale.zw;\n    \n    vec3 col = vec3(mandel(uv, uv2));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}