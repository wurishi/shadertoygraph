{"ver":"0.1","info":{"id":"ltjGDw","date":"1429652369","viewed":240,"name":"Twister Spiral","username":"m1el","description":"A shader implementation of Mark Dow's userpic.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float crossP(vec2 a, vec2 b) { return a.x * b.y - a.y * b.x; }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = iResolution.xy * 0.5;\n    float t = mod(iTime, 10.);\n    float squeeze = clamp((8. - t) / 2., 0., 1.);\n    vec2 vis = fragCoord.xy - center;\n    vis.y /= pow(squeeze, 0.8);\n    if (center.x < length(vis)) {\n        fragColor = vec4(1., 1., 1., 1.) * step(0., -vis.y);\n        return;\n    }\n    float dist = pow((center.x - length(vis))/length(center),1.5) * t * 5.;\n    vec2 dir = vec2(cos(dist), sin(dist));\n    vec4 col = vec4(1.,1.,1.,1.) * step(0., crossP(vis, dir));\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}