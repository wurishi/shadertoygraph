{"ver":"0.1","info":{"id":"lt2BWd","date":"1517658702","viewed":131,"name":"flow23","username":"dlsym","description":"Tinkering with quasichrystal rendering.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["quasichrystal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define M_PI 3.14159265\n\n// LogPolar transform\nvec2 c2p(vec2 coord) {\n\tfloat th = atan(coord.y, coord.x);\n    float r = log(sqrt(coord.x*coord.x+coord.y*coord.y)); \n    \n    return vec2(th, r);\n}\n\n// Colorize. See:\n// https://iquilezles.org/articles/palettes\nvec4 colorize(float t, vec3 a, vec3 b, vec3 c, vec3 d) {\n    vec3 col = 2.5 * a * b * (cos(0.4*M_PI*(c*t+d))); \n    return vec4(col, 1.0);\n}\n\nfloat v(vec2 coord, float k, float s, float rot) {\n    float cx = cos(rot);\n    float sy = sin(rot);\n    \n\treturn 0.0 + 0.5 * cos((cx * coord.x + sy * coord.y) * k + s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tfloat t = -6.12 * iTime;\n    \n    vec2 xy = fragCoord.xy - (0.5 * iResolution.xy);\n    xy.x *= iResolution.x / iResolution.y;\n    // vec2 uv = xy / (0.5 * iResolution.xy);\n    vec2 uv = c2p(xy);\n    \n    float vt = 0.0;\n  \n    float k = 4.0;\n    \n    for(int i = 0; i < int(k); i++) {\n        float s = float(i) * M_PI / k;\n    \tfloat w = v(uv, 75.0, t, s);\n        \n        vt += w / 0.5;\n    }\n    \n    \n    vec4 col = colorize(vt, vec3(0.5, 0.5, 0.5),\n                        \tvec3(0.5, 0.5, 0.5),\n                        \tvec3(1.0, 1.0, 1.0),\n                        \tvec3(0.00, 0.33, 0.67));\n    /*\n    vec4 col = colorize(vt, vec3(0.5, 0.5, 0.5),\n                        \tvec3(0.5, 0.5, 0.5),\n                        \tvec3(1.0, 1.0, 0.5),\n                        \tvec3(0.80, 0.90, 0.30));\n    */\n    \n    // Mask center (a bit)\n    float m =  3.0*(distance((fragCoord.xy / iResolution.xy), vec2(0.5, 0.5)));\n    //col = vec4( m, m, m, 1.0);\n    col = clamp(m, 0.0, 1.0) * col;\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}