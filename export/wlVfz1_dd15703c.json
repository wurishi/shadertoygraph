{"ver":"0.1","info":{"id":"wlVfz1","date":"1613920222","viewed":57,"name":"Fractal Experiment - 1","username":"Learner_CC","description":"Fractal experiment - 1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float FractalFun(vec3 p) {\n    float pct = 0.0;\n    float lL = length(p);\n    float nL = lL;\n    for (int i = 0; i < 15; i++) {\n        p = abs(p) / (lL * lL);\n        nL = length(p);\n        pct += abs(nL - lL);\n        lL = nL;\n    }\n    return pct;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy / iResolution.xy;\n    vec2 uv = 2.0 * st - 1.0;\n    float n = 10.0;\n    // angle\n    float a = atan(uv.y, uv.x);\n    // radius\n    float r = length(uv);\n    // color \n    vec3 topColor = vec3(0.6);\n    vec3 bottomColor = vec3(0.4);\n    vec3 color = mix(topColor, bottomColor, sqrt(st).y);\n    \n    // fractal\n    float fc = a * n  - iTime * 3.0;\n    fc -= FractalFun(vec3(uv, 0.0));\n    fc -= 0.5 * FractalFun(vec3(uv * 2.5, 0.0));   \n    color += cos(fc) + 0.05 / dot(uv, uv);\n    color *= smoothstep(0.0, 1.0, 1.0 - r);\n    color += vec3(0.1546, 0.0898, 0.1953);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}