{"ver":"0.1","info":{"id":"lXffz8","date":"1727995453","viewed":22,"name":"Assignment 3 go brr","username":"bladeX7","description":"assignment 3 for GPR200","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //fix aspect ratio\n    uv.x *= iResolution.x / iResolution.y;\n    \n    //Constants\n    const vec4 skyColA = vec4(1.0, 0.0, 1.0, 1.0); //magenta sky color\n    const vec4 skyColB = vec4(0.1, 0.0, 0.5, 1.0); //dark blue sky color\n    const vec4 moonCol = vec4(1.0, 1.0, 1.0, 1.0); //white\n    \n    //background go brrr\n    float skyGradient = sin(uv.y) + 0.25; //set gradient\n    vec4 col = mix(skyColA, skyColB, skyGradient); //add to screen\n    \n    //moon!!\n    vec2 moonCenter = vec2(0.4, 0.7);\n    float moonBase = distance(uv, moonCenter);\n    moonBase = smoothstep(0.15, 0.16, moonBase);\n    //crescent moon (rip)\n    /*float moonShade = distance(uv, moonCenter);\n    moonShade = smoothstep(0.1, 0.11, moonShade);\n    float moon = moonBase + moonShade;*/\n    col = mix(moonCol, col, moonBase); //add to screen\n    \n    //stars\n    float twinkle = cos(iTime) * 0.01 + 0.02; //twinkle animation\n    \n    float star1 = distance(uv, vec2(1.55, 0.8)); //make circle\n    star1 = smoothstep(0.005, twinkle, star1); //smooth edges\n    col = mix(moonCol, col, star1); //add to screen\n    \n    float star2 = distance(uv, vec2(1.23, 0.69)); //repeat\n    star2 = smoothstep(0.005, twinkle, star2);\n    col = mix(moonCol, col, star2);\n    \n    float star3 = distance(uv, vec2(0.95, 0.5));\n    star3 = smoothstep(0.005, twinkle, star3);\n    col = mix(moonCol, col, star3);\n    \n    float star4 = distance(uv, vec2(0.55, 0.38));\n    star4 = smoothstep(0.005, twinkle, star4);\n    col = mix(moonCol, col, star4);\n    \n    float star5 = distance(uv, vec2(0.7, 0.2));\n    star5 = smoothstep(0.005, twinkle, star5);\n    col = mix(moonCol, col, star5);\n    \n    float star6 = distance(uv, vec2(0.93, 0.27));\n    star6 = smoothstep(0.005, twinkle, star6);\n    col = mix(moonCol, col, star6);\n\n    // Output to screen\n    fragColor = vec4(col);\n}\n\n\n//surprise tools that'll help us later (not guaranteed)\n// Time varying pixel color\n//vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    ","name":"Image","description":"","type":"image"}]}