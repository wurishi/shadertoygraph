{"ver":"0.1","info":{"id":"MscSDN","date":"1459365118","viewed":118,"name":"Pulsing scarabs exploration","username":"kyp","description":"some iterations of newton's method on finding roots of a 4th degree complex polynomial - exploration version","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define cx_mul(a, b) vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x)\n#define cx_div(a, b) vec2(((a.x*b.x+a.y*b.y)/(b.x*b.x+b.y*b.y)),((a.y*b.x-a.x*b.y)/(b.x*b.x+b.y*b.y)))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(10.,10.)+fragCoord.xy / iResolution.xy - vec2(0.5,0.5);\n    \n    vec2 val = uv*(5.0)/(5.0+iTime);\n    for (int i=0; i < 15; i++) {\n        vec2 val2 = cx_mul(val,val);\n        vec2 val3 = cx_mul(val2,val);\n        vec2 val4 = cx_mul(val2,val2);\n        val = val - cx_div((val4 - vec2(1,0)),(4.0*val3));        \n    }\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    vec4 base_color;\n    float diff;\n    float tolerance = 0.1+sin(iTime)/10.0;\n    if (abs(val.x-1.0)<tolerance){\n        base_color.r = 1.0;\n        diff = abs(val.x-1.0);\n    }\n    else if (abs(val.y-1.0)<tolerance) {\n        base_color.g = 1.0;\n        diff = abs(val.y-1.0);\n    }\n    else if (abs(val.x+1.0)<tolerance) {\n        base_color.b = 1.0;\n        diff = abs(val.x+1.0);\n    }\n    else if (abs(val.y+1.0)<tolerance) {        \n        base_color.g = 1.0;\n        base_color.b = 1.0;\n        diff = abs(val.y+1.0);\n    }\n    //base_color = base_color * diff*100.0;\n    if (diff > 0.000001)\n        base_color = base_color*0.8;\n    if (diff > 0.01)\n        base_color = base_color*0.8;\n    if (diff > 0.05)\n        base_color = base_color*0.8;\n    if (diff > 0.2)\n        base_color = base_color*0.8;\n    fragColor = base_color;//vec4(val.x,val.x,val.y,1.0);\n}","name":"Image","description":"","type":"image"}]}