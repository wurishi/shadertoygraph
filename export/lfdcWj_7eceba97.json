{"ver":"0.1","info":{"id":"lfdcWj","date":"1731194407","viewed":48,"name":"blub-creastive","username":"CREAsTIVE","description":"blub","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blub"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float blub(float x, int wavesCount, float timeScaler, float power) {\n    return sin(float(wavesCount) * x + timeScaler * iTime) * power;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord.xy - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x) + .5;\n\n    vec2 circleCenter = vec2(.5, .5);\n    \n    float dist = distance(uv, circleCenter);\n    vec2 localUV = uv - circleCenter;\n    float angle = atan(localUV.y, localUV.x) + 3.14;\n    \n    float circleBlubs = blub(angle, 15, 1.2, .5) +\n        blub(angle, 10, 2., 1.) +\n        blub(angle, 20, -0.8, 1.5) +\n        blub(angle, 14, -1.4, 1.);\n    \n    float circleSize = .4 + circleBlubs / 4. * 0.01;\n        \n    \n    vec3 color = vec3(smoothstep(dist, dist+.01, circleSize));\n\n    fragColor = vec4(color, 1.); \n}","name":"Image","description":"","type":"image"}]}