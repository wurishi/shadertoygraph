{"ver":"0.1","info":{"id":"WttGDB","date":"1577455771","viewed":138,"name":"Sliding dots","username":"tb","description":"This is my first GLSL shader.\nI'm starting by trying to recreate other shaders that I have seen as a learning exercise.\nPlease offer tips if you have any.\n\nEdit: added antialiasing.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite","dots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// antialiasing, adapted from https://shadertoyunofficial.wordpress.com/2019/01/02/programming-tricks-in-shadertoy-glsl/\n#define S(v, v0, r) smoothstep(6.0 / R.y, -6.0 / R.y, length(v - (v0)) - (r))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalise the coordinates\n    vec2 R = iResolution.xy, U = ((2.0 * fragCoord.xy) - R) / min(R.x, R.y);\n    // grid\n    vec2 grid = (fract(U * 2.0) * 2.0) - 1.0;\n    // 2 phase offset square waves\n    vec2 offset = step(fract(vec2(iTime, iTime + 1.0) / 2.0), vec2(0.5));\n    // translation\n    grid -= fract(iTime) * sign(grid.yx) * offset;\n    // render dots\n    vec3 c = vec3(S(fract(grid), vec2(0.5), 0.3));\n    fragColor = vec4(c, 0.0);\n}","name":"Image","description":"","type":"image"}]}