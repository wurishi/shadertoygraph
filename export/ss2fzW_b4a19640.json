{"ver":"0.1","info":{"id":"ss2fzW","date":"1645786632","viewed":79,"name":"Abstract concentric circles","username":"Crazyrems","description":"Of course they’re not concentric, but that’s pretty evocative.\nIt was made to be compatible with glslViewer.\nIt also runs on Shader Editor on Android which makes possible to set the shader as a wallpaper, where it uses the time to set color themes.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["circles","abstract","themes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n//uniform vec2 u_resolution;\n//uniform float u_time;\nconst float PI = 3.141592;\nconst vec2 _right = vec2(1.0, 0.0);\nconst vec2 _zero = vec2(0.0, 0.0);\nconst vec4 g1c1 = vec4(137.0/255.0, 190.0/255.0, 255.0/255.0, 1.0); // rgb(137 190 255)\nconst vec4 g1c2 = vec4(255.0/255.0, 235.0/255.0, 74.0/255.0, 1.0); // rgb(255 235 74)\nconst vec4 g2c1 = vec4(255.0/255.0, 250.0/255.0, 125.0/255.0, 1.0); // rgb(255 250 125)\nconst vec4 g2c2 = vec4(255.0/255.0, 145.0/255.0, 5.0/255.0, 1.0); // rgb(255 145 5)\nconst vec4 g3c1 = vec4(227.0/255.0, 98.0/255.0, 113.0/255.0, 1.0); // rgb(227 98 113)\nconst vec4 g3c2 = vec4(224.0/255.0, 172.0/255.0, 255.0/255.0, 1.0); // rgb(224 172 255)\nconst vec4 g4c1 = vec4(51.0/255.0, 33.0/255.0, 96.0/255.0, 1.0); // rgb(51 33 96)\nconst vec4 g4c2 = vec4(63.0/255.0, 96.0/255.0, 149.0/255.0, 1.0); // rgb(63 96 149)\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nfloat disc(vec2 xy, float radius, vec2 center) {\n\treturn length(xy - center) - radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 cam = fragCoord.xy / iResolution.xy;\n\tfloat ratio = iResolution.y / iResolution.x;\n\tcam -= vec2(0.5, 0.5);\n\tcam *= vec2(max(1.0, 1.0/ratio), max(1.0, ratio));\n\t//cam *= 1.0;\n\n\tfloat sd = 0.0; // Signed Distance\n\tvec2 tc = _zero; // Temp Center\n\tfor (int i = 0; i < 15; i += 1) {\n\t\tconst float off = 0.03; // Offset\n\t\tsd += disc(cam, 0.45 - (off * float(i)), tc) > 0.0 ? 1.0 : 0.0;\n\t\ttc += rotate(_right, (mod(float(i), 2.0) <= 0.5 ? 1.0 : -1.0) * iTime * (1.0 + float(i) * 0.3) + PI / 22.0 * float(i)) * off;\n\t}\n\tfloat sdf = mod(sd + 1.0, 2.0);\n\tfloat mt = mod(iTime / 6.0, 4.0); // Modulo Time\n\tfragColor = mix(g1c1, g1c2, sdf) * (floor(mt) == 0.0 ? 1.0 : 0.0)\n\t\t+ mix(g2c1, g2c2, sdf) * (floor(mt) == 1.0 ? 1.0 : 0.0)\n\t\t+ mix(g3c1, g3c2, sdf) * (floor(mt) == 2.0 ? 1.0 : 0.0)\n\t\t+ mix(g4c1, g4c2, sdf) * (floor(mt) == 3.0 ? 1.0 : 0.0);\n}","name":"Image","description":"","type":"image"}]}