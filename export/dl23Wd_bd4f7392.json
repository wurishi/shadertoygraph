{"ver":"0.1","info":{"id":"dl23Wd","date":"1674149573","viewed":187,"name":"Dancing Dots - Coloured Fork","username":"tinnitus","description":"A fork of the amazing and just released, to add a splash of different colours.\n\nAll the skill is by kishimisu, I just mashed in some code. I think the original is better.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["bloom","sine","code","neon","trigonometry","small","short","golf","golfing"],"hasliked":0,"parentid":"ctjGWd","parentname":"Dancing Dots [242 chars]"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \"Dancing Dots\" by @kishimisu (2023)\n   [242 chars]\n   \n   Playing with sine waves of different frequencies!\n*/\n\nvoid mainImage(out vec4 O, vec2 F) {\n    \n    \n        vec2 uv = F.xy / iResolution.xy;\n    vec2 p = uv;\n    vec2 dir = vec2(0.0, 1.0);\n    float t = iTime;\n\n    for (int i = 0; i < 5; i++) {\n        p += dir * 0.01;\n        p.x += sin(p.y * 20.0 + t) * 0.01;\n        p.y += sin(p.x * 20.0 + t) * 0.01;\n    }\n    vec3 color = vec3(0.5 + 0.5 * sin(t), 0.5 + 0.5 * cos(t), 0.5 + 0.5 * sin(t * 1.5));\n    O = vec4(color, 1.0);\n    \n    \n    vec2 r = iResolution.xy, u = (F+F-r)/r.y/.6;\n    float i;\n    t = t+26.;\n    for (O *= i = 0.; (i+=.1) < 5.; O += pow(\n        .01/length(u+vec2(sin(t*2.1+i),cos(t+i)))\n        *(cos(i*6.+vec4(0,1,2,0))+1.),vec4(1.3))\n    ) u *= mat2(cos(t*.02+vec4(0,33,11,0)));\n        O =O  * vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}