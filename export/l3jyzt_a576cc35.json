{"ver":"0.1","info":{"id":"l3jyzt","date":"1727630171","viewed":19,"name":"Wavy functions","username":"cesio","description":"Wavy functions","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite","wavy"],"hasliked":0,"parentid":"l32cRt","parentname":"Chessboard N - rectangles"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n#define DEG2RAD(d) (d * PI / 180)\n#define N 10.\n#define N_MAX 96.\n#define INC (N_MAX / N)\n#define SPEED 2.\n#define WAVES 12.\n#define WAVES_COS 5.\n#define SMOOTHINESS 0.03\n\n#define CHANGE_FUNCTIONS 1\n#define SPEED_W 2\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 sc = fragCoord.xy / iResolution.xy;\n    vec3 color = vec3(0.0);\n    float time = iTime * SPEED;\n    \n    float deltaY = 1. / N;\n    float offsetY = 1. - deltaY;\n    \n    // we are calculating a value of function Fi(x), where i is from N till 1 - top to the bottom of the screen\n    for (int i = 0; i < int(N); i++) {\n        float phase = 0.;//fract(float(i) / N) * N;\n        float pos = 0.;\n        \n#if CHANGE_FUNCTIONS == 1\n        if (mod(float(i), 2.) == 0.) {\n            pos = sin(sc.x * WAVES * float(i * SPEED_W) + time + phase);\n        } else {\n            pos = cos(sc.x * WAVES_COS  + time + phase);\n        }\n#else       \n        pos = sin(sc.x * WAVES + time + phase);\n#endif \n        \n        // calculate a value of funtion Fi where Fi(x) = 1/N * FUNCTION + offsetY\n        float valueFi = deltaY * pos + offsetY;\n        \n        // we will decrease offsetY (each funtion Fi is offseted by (i * deltaY)\n        offsetY -= deltaY;\n\n        float blackOrWhite = mod(float(i), 2.);\n \n        if (abs(sc.y - valueFi) <= SMOOTHINESS) { // I am \"on border\" between functions\n            if (blackOrWhite == 0.0) {\n                color = vec3(smoothstep (sc.y-SMOOTHINESS, sc.y, valueFi));\n            } else {\n                color = vec3(1.-smoothstep (sc.y - SMOOTHINESS, sc.y, valueFi));\n            }\n            \n            if (sc.y >= valueFi) break;\n        } else { // I am not \"on border\" between functions\n             color = vec3(blackOrWhite);\n             if (sc.y >= valueFi) break;\n        }\n    }\n    \n\tfragColor = vec4(color,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}