{"ver":"0.1","info":{"id":"llcczS","date":"1532992889","viewed":48,"name":"mandelbrot_glsl_ful0n","username":"ful0n","description":"first mandelbrot!","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat mandelbrot(vec2 c, float maxiter){\n    vec2 z = c;\n    for(float x=0.0; x<maxiter; x+=1.0){\n        if (abs(pow(z[0], 2.0)+pow(z[1], 2.0)) > 4.0)\n          return x;\n        else\n          z = vec2(pow(z[0], 2.0) - pow(z[1], 2.0) + c[0], 2.0*z[0]*z[1]+c[1]);\n    }\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy - 0.5)*4.0;\n\n\tvec2 mouse = iMouse.zw/iResolution.xy;\n    // Output to screen\n    fragColor = vec4(mouse.x,mandelbrot(uv, 60000.0)/60000.0*255.0,mouse.y,0);\n}","name":"Image","description":"","type":"image"}]}