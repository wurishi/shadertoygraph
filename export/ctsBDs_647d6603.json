{"ver":"0.1","info":{"id":"ctsBDs","date":"1693799957","viewed":56,"name":"Tristimulus","username":"flooferdoodle","description":"Understanding spectral colors and how to convert between RGB and tristimulus values.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rgb","cie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 getTristimulus(float lambda)\n{\n    float approxIndex = (lambda - 390.0) * 0.2;\n    float lowerFloat = floor(approxIndex);\n    int lower = int(lowerFloat);\n    int upper = int(ceil(approxIndex));\n    \n    if(lower < 0 || upper >= 89) return vec3(0.0);\n    \n    return mix(colorMatchingTristimulusLookup5nm[lower], colorMatchingTristimulusLookup5nm[upper], approxIndex - lowerFloat);\n    \n}\n\n// https://www.image-engineering.de/library/technotes/958-how-to-convert-between-srgb-and-ciexyz\nfloat gammeCorrection(float v)\n{\n    if(v <= 0.0031308) return v * 12.92;\n    \n    return 1.055 * pow(v, 0.4166666667) - 0.055;\n}\nvec3 gammaCorrection(vec3 rgb)\n{\n    return vec3(gammeCorrection(rgb.r), gammeCorrection(rgb.g), gammeCorrection(rgb.b));\n}\n\nconst mat3 XYZ2sRGBlin = transpose(mat3(3.2404542, -1.5371385, -0.4985314,\n                          -0.9692660, 1.8760108, 0.0415560,\n                          0.0556434, -0.2040259, 1.0572252));\n// https://aty.sdsu.edu/explain/optics/rendering.html\nvec3 XYZ2sRGBLin(vec3 tristimulus)\n{\n    tristimulus *= 0.42735042735;\n    \n    \n    vec3 rgbLin = XYZ2sRGBlin * tristimulus;\n    \n    // Gamut clamping, brings colors back to spectrum using relative luminosity white (grey)\n    float offset = min(0., min(rgbLin.r, min(rgbLin.g, rgbLin.b)));\n   \n    float invWhiteMix = tristimulus.y / (tristimulus.y - offset);\n    \n    rgbLin = mix(vec3(tristimulus.y), rgbLin, invWhiteMix);\n    \n    // Artificially increase brightness\n    rgbLin *= 1.85;\n    \n    \n    return rgbLin;\n}\n\nconst bool DISPLAY_SPECTRUM_OR_CHROMATICITY = true;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    if(DISPLAY_SPECTRUM_OR_CHROMATICITY)\n    {\n\n\n        // Show wavelengths from 350 to 750\n        float lambda = uv.x * 400.0 + 350.0;\n\n        if(uv.y < 0.1)\n        {\n            if(abs(lambda - 400.0) < 1.) fragColor = vec4(1.0,0.0,0.0,1.0);\n            else fragColor = vec4(vec3(uv.x), 1.0);\n\n            return;\n        }\n\n        vec3 tri = getTristimulus(lambda);\n        vec3 rgbLin = XYZ2sRGBLin(tri);\n        \n        vec3 rgb = gammaCorrection(rgbLin);\n\n        // Output to screen\n        fragColor = vec4(rgb,1.0);\n        return;\n    }\n    \n    vec3 tri = vec3(uv, 1.0 - uv.x - uv.y);\n    \n    if(length(tri - vec3(0.3127, 0.3290, 0.3583)) < 0.01)\n    {\n        //D65 white point\n        fragColor = vec4(vec3(0.), 1.);\n        return;\n    }\n    \n    vec3 rgbLin = XYZ2sRGBLin(tri);\n    if(rgbLin.x < 0. || rgbLin.y < 0. || rgbLin.z < 0.) rgbLin = vec3(0.0);\n    fragColor = vec4(gammaCorrection(rgbLin), 1.0);\n    \n}\n// Big thanks to\n// https://medium.com/hipster-color-science/a-beginners-guide-to-colorimetry-401f1830b65a\n// Also look at\n// http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// http://cvrl.ucl.ac.uk/cmfs.htm\n// 0 corresponds to 390nm, and each index increments by 5nm\nconst vec3 colorMatchingTristimulusLookup5nm[89] = vec3[](\n    vec3(3.77E-03,4.15E-04,1.85E-02) ,\n    vec3(9.38E-03,1.06E-03,4.61E-02) ,\n    vec3(2.21E-02,2.45E-03,1.10E-01) ,\n    vec3(4.74E-02,4.97E-03,2.37E-01) ,\n    vec3(8.95E-02,9.08E-03,4.51E-01) ,\n    vec3(1.45E-01,1.43E-02,7.38E-01) ,\n    vec3(2.04E-01,2.03E-02,1.05E+00) ,\n    vec3(2.49E-01,2.61E-02,1.31E+00) ,\n    vec3(2.92E-01,3.32E-02,1.55E+00) ,\n    vec3(3.23E-01,4.16E-02,1.75E+00) ,\n    vec3(3.48E-01,5.03E-02,1.92E+00) ,\n    vec3(3.42E-01,5.74E-02,1.92E+00) ,\n    vec3(3.22E-01,6.47E-02,1.85E+00) ,\n    vec3(2.83E-01,7.24E-02,1.66E+00) ,\n    vec3(2.49E-01,8.51E-02,1.52E+00) ,\n    vec3(2.22E-01,1.06E-01,1.43E+00) ,\n    vec3(1.81E-01,1.30E-01,1.25E+00) ,\n    vec3(1.29E-01,1.54E-01,9.99E-01) ,\n    vec3(8.18E-02,1.79E-01,7.55E-01) ,\n    vec3(4.60E-02,2.06E-01,5.62E-01) ,\n    vec3(2.08E-02,2.38E-01,4.10E-01) ,\n    vec3(7.10E-03,2.85E-01,3.11E-01) ,\n    vec3(2.46E-03,3.48E-01,2.38E-01) ,\n    vec3(3.65E-03,4.28E-01,1.72E-01) ,\n    vec3(1.56E-02,5.20E-01,1.18E-01) ,\n    vec3(4.32E-02,6.21E-01,8.28E-02) ,\n    vec3(7.96E-02,7.18E-01,5.65E-02) ,\n    vec3(1.27E-01,7.95E-01,3.75E-02) ,\n    vec3(1.82E-01,8.58E-01,2.44E-02) ,\n    vec3(2.41E-01,9.07E-01,1.57E-02) ,\n    vec3(3.10E-01,9.54E-01,9.85E-03) ,\n    vec3(3.80E-01,9.81E-01,6.13E-03) ,\n    vec3(4.49E-01,9.89E-01,3.79E-03) ,\n    vec3(5.28E-01,9.99E-01,2.33E-03) ,\n    vec3(6.13E-01,9.97E-01,1.43E-03) ,\n    vec3(7.02E-01,9.90E-01,8.82E-04) ,\n    vec3(7.97E-01,9.73E-01,5.45E-04) ,\n    vec3(8.85E-01,9.42E-01,3.39E-04) ,\n    vec3(9.64E-01,8.96E-01,2.12E-04) ,\n    vec3(1.05E+00,8.59E-01,1.34E-04) ,\n    vec3(1.11E+00,8.12E-01,8.49E-05) ,\n    vec3(1.14E+00,7.54E-01,5.46E-05) ,\n    vec3(1.15E+00,6.92E-01,3.55E-05) ,\n    vec3(1.13E+00,6.27E-01,2.33E-05) ,\n    vec3(1.08E+00,5.58E-01,1.55E-05) ,\n    vec3(1.01E+00,4.90E-01,1.05E-05) ,\n    vec3(9.14E-01,4.23E-01,0.00E+00) ,\n    vec3(8.14E-01,3.61E-01,0.00E+00) ,\n    vec3(6.92E-01,2.98E-01,0.00E+00) ,\n    vec3(5.76E-01,2.42E-01,0.00E+00) ,\n    vec3(4.73E-01,1.94E-01,0.00E+00) ,\n    vec3(3.84E-01,1.55E-01,0.00E+00) ,\n    vec3(3.00E-01,1.19E-01,0.00E+00) ,\n    vec3(2.28E-01,8.98E-02,0.00E+00) ,\n    vec3(1.71E-01,6.67E-02,0.00E+00) ,\n    vec3(1.26E-01,4.90E-02,0.00E+00) ,\n    vec3(9.22E-02,3.56E-02,0.00E+00) ,\n    vec3(6.64E-02,2.55E-02,0.00E+00) ,\n    vec3(4.71E-02,1.81E-02,0.00E+00) ,\n    vec3(3.29E-02,1.26E-02,0.00E+00) ,\n    vec3(2.26E-02,8.66E-03,0.00E+00) ,\n    vec3(1.58E-02,6.03E-03,0.00E+00) ,\n    vec3(1.10E-02,4.20E-03,0.00E+00) ,\n    vec3(7.61E-03,2.91E-03,0.00E+00) ,\n    vec3(5.21E-03,2.00E-03,0.00E+00) ,\n    vec3(3.57E-03,1.37E-03,0.00E+00) ,\n    vec3(2.46E-03,9.45E-04,0.00E+00) ,\n    vec3(1.70E-03,6.54E-04,0.00E+00) ,\n    vec3(1.19E-03,4.56E-04,0.00E+00) ,\n    vec3(8.27E-04,3.18E-04,0.00E+00) ,\n    vec3(5.76E-04,2.22E-04,0.00E+00) ,\n    vec3(4.06E-04,1.57E-04,0.00E+00) ,\n    vec3(2.86E-04,1.10E-04,0.00E+00) ,\n    vec3(2.02E-04,7.83E-05,0.00E+00) ,\n    vec3(1.44E-04,5.58E-05,0.00E+00) ,\n    vec3(1.02E-04,3.98E-05,0.00E+00) ,\n    vec3(7.35E-05,2.86E-05,0.00E+00) ,\n    vec3(5.26E-05,2.05E-05,0.00E+00) ,\n    vec3(3.81E-05,1.49E-05,0.00E+00) ,\n    vec3(2.76E-05,1.08E-05,0.00E+00) ,\n    vec3(2.00E-05,7.86E-06,0.00E+00) ,\n    vec3(1.46E-05,5.74E-06,0.00E+00) ,\n    vec3(1.07E-05,4.21E-06,0.00E+00) ,\n    vec3(7.86E-06,3.11E-06,0.00E+00) ,\n    vec3(5.77E-06,2.29E-06,0.00E+00) ,\n    vec3(4.26E-06,1.69E-06,0.00E+00) ,\n    vec3(3.17E-06,1.26E-06,0.00E+00) ,\n    vec3(2.36E-06,9.42E-07,0.00E+00) ,\n    vec3(1.76E-06,7.05E-07,0.00E+00));\n\n\n","name":"Common","description":"","type":"common"}]}