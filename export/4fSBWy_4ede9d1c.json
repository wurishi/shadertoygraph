{"ver":"0.1","info":{"id":"4fSBWy","date":"1725425657","viewed":39,"name":"sep32024v3","username":"brendanluu","description":"afterimage","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize pixel coordinates\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // Calculate rotation angle (45 degrees every second)\n    float currentAngle = radians(45.0 * floor(iTime));\n    float prevAngle = radians(45.0 * floor(iTime - 1.0));\n    \n    // Rotate UV coordinates for current and previous positions\n    vec2 currentUV, prevUV;\n    float c = cos(currentAngle);\n    float s = sin(currentAngle);\n    currentUV = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n    \n    c = cos(prevAngle);\n    s = sin(prevAngle);\n    prevUV = vec2(uv.x * c - uv.y * s, uv.x * s + uv.y * c);\n    \n    // Define square\n    float squareSize = 0.15;\n    vec2 currentSq = abs(currentUV);\n    vec2 prevSq = abs(prevUV);\n    float currentSquare = float(max(currentSq.x, currentSq.y) < squareSize);\n    float prevSquare = float(max(prevSq.x, prevSq.y) < squareSize);\n    \n    // Calculate fade factor for trail (quicker fade)\n    float fadeFactor = smoothstep(0.0, 0.25, fract(iTime));\n    float trail = prevSquare * (1.0 - fadeFactor);\n    \n    // Combine current square and trail\n    float finalSquare = max(currentSquare, trail);\n    \n    // Set color (black square on white background)\n    vec3 color = vec3(1.0 - finalSquare);\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}