{"ver":"0.1","info":{"id":"XfcyWN","date":"1730627001","viewed":73,"name":"Fractal Spiral Pulse","username":"Secretstar","description":"A dynamic, pulsating fractal shader that forms a mesmerizing spiral. Vibrant colors and evolving shapes create a hypnotic, flowing display with radial symmetry.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["radialsymmetry","proceduralart","vibrantcolors","dynamicanimation","fractalspiral","pulsatingeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalizza le coordinate a un range [-1,1]\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    // Variabile temporale\n    float t = iTime * 0.5;\n\n    // Calcola la distanza radiale e l'angolo\n    float r = length(uv);\n    float angle = atan(uv.y, uv.x);\n\n    // Crea un pattern frattale dinamico\n    float f = 0.0;\n    vec2 p = uv * 2.0;\n    float amp = 1.0;\n    for(int i = 0; i < 5; i++) {\n        f += sin(p.x + t) * sin(p.y + t) * amp;\n        p = p * 2.0 + vec2(t * 0.1);\n        amp *= 0.5;\n    }\n\n    // Genera colori con tonalitÃ  vivaci\n    vec3 color;\n    color.r = 0.5 + 0.5 * sin(r * 10.0 + angle * 5.0 + t + f);\n    color.g = 0.5 + 0.5 * sin(r * 12.0 + angle * 6.0 + t + f + 2.094);\n    color.b = 0.5 + 0.5 * sin(r * 14.0 + angle * 7.0 + t + f + 4.188);\n\n    // Aggiungi un effetto di pulsazione\n    float pulse = 0.5 + 0.5 * sin(iTime * 2.0 + r * 8.0);\n    color *= pulse;\n\n    // Aumenta saturazione e contrasto\n    color = pow(color, vec3(0.8));\n\n    // Output finale\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}