{"ver":"0.1","info":{"id":"4fcyWN","date":"1730627181","viewed":60,"name":"Luminous Path","username":"Secretstar","description":"A vibrant shader that generates a glowing, shifting path resembling a luminous road. With dynamic fractal patterns and warm orange hues, the animation brings depth and movement, enhanced by a vignette effect.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractalpattern","proceduralshader","dynamiclightpath","glowingroad","orangetones","vibrantanimation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalizza le coordinate nel range [-1,1]\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    // Variabile temporale\n    float t = iTime * 0.5;\n\n    // Applica una distorsione alle coordinate per creare movimento\n    uv.x += sin(uv.y * 5.0 + t) * 0.5;\n    uv.y += cos(uv.x * 5.0 + t) * 0.5;\n\n    // Calcola la distanza radiale dal centro\n    float radius = length(uv);\n\n    // Crea un pattern frattale per aggiungere complessit√†\n    float f = 0.0;\n    vec2 p = uv * 2.0;\n    float a = atan(p.y, p.x);\n    float r = length(p);\n    for(int i = 0; i < 5; i++) {\n        r = abs(r - 0.5) * 2.0;\n        a = a * 1.5 + t * 0.2;\n        f += (sin(r * 3.0 + t) + cos(a * 3.0)) * 0.5;\n        p = p * 1.5;\n    }\n\n    // Genera colori sui toni dell'arancione e nero\n    vec3 color;\n    color.r = 0.8 + 0.2 * sin(f + t);\n    color.g = 0.4 + 0.2 * sin(f + t);\n    color.b = 0.0;\n\n    // Applica un effetto di vignettatura\n    color *= exp(-radius * 2.0);\n\n    // Aumenta saturazione e contrasto\n    color = pow(color, vec3(1.2));\n\n    // Output finale\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}