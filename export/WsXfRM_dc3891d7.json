{"ver":"0.1","info":{"id":"WsXfRM","date":"1595188875","viewed":824,"name":"Shader : Pixels","username":"Gijs","description":"Pixels","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["dasg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float N = 10.;\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = floor(fragCoord/N);\n    vec2 f = mod(fragCoord,N);\n    \n    vec3 col = texture(iChannel0,p*N/iResolution.xy).rgb;\n    \n    vec3 a = smoothstep(\n        vec3(1.), \n        vec3(.5), \n        abs(f.x*6./N - vec3(1.,3.,5.))\n    );\n    \n    fragColor.rgb = col*a;\n    \n    //small shadow effect above and below every pixel.\n    float d = min(f.y,N-f.y);\n    fragColor *= smoothstep(0., N*.1, d);\n    \n    //gamma correction\n    fragColor = pow(fragColor, vec4(1./2.2));\n}","name":"Image","description":"","type":"image"}]}