{"ver":"0.1","info":{"id":"ctVcWw","date":"1700284048","viewed":10,"name":"2023-11-18","username":"jwvg0425","description":"2023-11-18","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.141592658979\n\nfloat easeOutQuad(float x)\n{\n    return 1. - (1. - x) * (1. - x);\n}\n\nfloat degModifier(float x)\n{\n    return step(1., mod(x - 1., 2.)) * (1. - easeOutQuad(abs(mod(x - 1., 2.) - 1.))) * PI * 2.;\n}\n\nfloat triangle(vec2 pos, float r, float deg)\n{\n    vec2 rotated = vec2(pos.x * cos(deg) - pos.y * sin(deg), pos.x * sin(deg) + pos.y * cos(deg));\n    float a = step(rotated.y, -sqrt(3.) * rotated.x + r);\n    float b = step(rotated.y, sqrt(3.) * rotated.x + r);\n    float c = step(-r / 2., rotated.y);\n    \n    return a * b * c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float cellSize = 80.;\n    float deg = iTime;\n    int xCell = int(ceil(fragCoord.x/cellSize));\n    int yCell = int(ceil(fragCoord.y/cellSize));\n    int cellCount = int(ceil(iResolution.x / cellSize + iResolution.y / cellSize));\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pos = mod(fragCoord, cellSize) / cellSize - (0.5, 0.5);\n    \n    float d = deg + float(xCell + yCell - cellCount) / float(cellCount);\n    float tBig = triangle(pos, 0.5, degModifier(d));\n    float tSmall = 1. - triangle(pos, 0.45, degModifier(d));\n    float v = 1. - tBig * tSmall;\n    vec3 targetColor = vec3(int(ceil(iTime / 2.)) % 3 == 0 ? 1. : 0.3, int(ceil(iTime / 2.)) % 3 == 1 ? 0.5 : 0.3, int(ceil(iTime / 2.)) % 3 == 2 ? 1. : 0.3);\n    vec3 color = mix(vec3(0., 0., 0.), targetColor, degModifier(d) / PI);\n    \n    \n    vec3 res = v == 0. ? color : vec3(v, v, v);\n    // Output to screen\n    fragColor = vec4(res, 1.);\n}","name":"Image","description":"","type":"image"}]}