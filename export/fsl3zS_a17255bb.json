{"ver":"0.1","info":{"id":"fsl3zS","date":"1616160277","viewed":113,"name":"Glowing Heart","username":"DomenPigeon","description":"My first shader which I actually think looks nice :D\n\nThe shader has 3 variants, if you like it please vote which one you like the best in the comments. (DOMEN or KATJUŠA).\n\n\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define DOMEN\n\n\n#ifdef DOMEN_FIRST          ////// DOMEN FIRST TRY\n#define DENS 20.\n#define NEG_COL vec3(1, 0.949, 0.478)\n#define POS_COL vec3(0.76,0,0.01)\n#define FADE_COL vec3(1, 0.658, 0.8)\n\n\n#elif defined DOMEN         ////// DOMEN FINAL\n#define DENS 40.\n#define NEG_COL vec3(153./255., 25./255., 8./255.)\n#define POS_COL vec3(51./255., 8./255., 3./255.)\n#define FADE_COL vec3(51./255., 8./255., 3./255.)\n\n\n#else                       ////// KATJUŠA FINAL\n#define DENS 40.\n#define NEG_COL vec3(1., .180, .204)\n#define POS_COL vec3(.4, .6, .6)\n#define FADE_COL vec3(.9, .8, .8)\n#endif\n\n\nvec3 color_effect(float curve){\n    float neg = abs(min(0., curve));\n    neg = clamp(neg, 0., .85);\n    //neg += cos(curve*DENS) * .15;\n    \n    \n    float pos = max(0., curve);\n    pos = clamp(pos, 0., .85);\n    //pos += cos(curve*DENS) * .15;\n    \n\n    vec3 n = mix(FADE_COL, NEG_COL, neg);\n    vec3 p = mix(FADE_COL, POS_COL, pos);\n    \n    float i = clamp((curve + 1.)/2., 0., 1.);\n    vec3 res = mix(n, p, i);\n    res += exp(-abs(curve*DENS*.6));\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord/iResolution.xy - vec2(.5, .5))*2.;\n    p.x *= iResolution.x / iResolution.y;\n\n    float x = p.x;\n    float y = p.y;\n    float r = 1.8;\n    \n    y += .2;\n    y *= 2.5;\n    y -= abs(sin(x*2.5));\n    x *= 1.9;\n    \n    float d = iTime < .7 ? 0. : iTime - .7;\n    float t = d * 3. + y * 0.3;\n    r += .3 * pow(sin(t), 4.);\n    \n    float c = x*x + y*y - r;\n    \n    vec3 col = color_effect(c);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}