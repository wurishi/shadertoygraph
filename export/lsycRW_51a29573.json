{"ver":"0.1","info":{"id":"lsycRW","date":"1521151550","viewed":150,"name":"Complex Color Plots","username":"allemangD","description":"Color wheel plot of complex function","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 f(in vec2 z) {\n    vec2 u = cMul(vec2(3, 0), cExpi(iTime/4.));\n    vec2 v = cMul(vec2(1, 0), cExpi(iTime/2.));\n    vec2 w = cMul(vec2(8, 0), cExpi(-iTime));\n    \n\tvec2 a = cPow(z, 1) + u;\n    vec2 b = cInv(cPow(z, 2) + v);\n    vec2 c = cPow(z, 3) + w;\n    \n    return cMul(cMul(a, b), c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float SCALE = 8.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - vec2(.5);\n\tuv.x *= iResolution.x/iResolution.y;\n    uv *= SCALE;\n    \n    vec2 o = f(uv);\n    float h = atan(o.y, o.x);\n    vec3 col = hsv2rgb(vec3(h / 6.28, 1., 1.));\n    \n    float sa, sb;\n    float w = 0.05;\n    \n    sa = log(length(o));\n    sa = abs(sa - floor(sa));\n    col *= mix(.8, 1.0, sa);\n    \n    sb = atan(o.y, o.x);\n    sb = (sb + 3.1415)/6.2832 * 8.0;\n    sb = abs(sb - floor(sb));\n    \n    if (sb < w || sb > 1. - w)\n    \tcol = mix(col, vec3(1), smoothstep(.025, .0, abs(fract(sb + .5 + w) - .5 - w)));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec2 comp(in float x) { return vec2(x, 0.); }\nvec2 comp(in int x) { return vec2(float(x), 0.); }\nvec2 comp(in vec2 x) { return x; }\n\nvec2 cMul(in vec2 a, in vec2 b)\n{\n\treturn vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\nvec2 cMul(in float a, in vec2 b)  { return cMul(comp(a), comp(b)); }\nvec2 cMul(in int a, in vec2 b)    { return cMul(comp(a), comp(b)); }\nvec2 cMul(in vec2 a, in float b)  { return cMul(comp(a), comp(b)); }\nvec2 cMul(in vec2 a, in int b)    { return cMul(comp(a), comp(b)); }\nvec2 cMul(in float a, in float b) { return cMul(comp(a), comp(b)); }\n\nvec2 cInv(in vec2 b)\n{\n    return vec2(b.x, -b.y)/length(b)/length(b);\n}\nvec2 cInv(in float a)  { return cInv(comp(a)); }\nvec2 cInv(in int a)    { return cInv(comp(a)); }\n\nvec2 cDiv(in vec2 a, in vec2 b)\n{\n    return cMul(a, cInv(b));\n}\nvec2 cDiv(in float a, in vec2 b)  { return cDiv(comp(a), comp(b)); }\nvec2 cDiv(in int a, in vec2 b)    { return cDiv(comp(a), comp(b)); }\nvec2 cDiv(in vec2 a, in float b)  { return cDiv(comp(a), comp(b)); }\nvec2 cDiv(in vec2 a, in int b)    { return cDiv(comp(a), comp(b)); }\nvec2 cDiv(in float a, in float b) { return cDiv(comp(a), comp(b)); }\n\nvec2 cPow(in vec2 b1, in vec2 c2)\n{\n    float l, a, r, t, x, y;\n    \n    l = log(length(b1));\n    a = atan(b1.y, b1.x);\n    \n    r = exp(c2.x * l - c2.y * a);\n    t = c2.x * a + c2.y * l;\n    \n    x = r * cos(t);\n    y = r * sin(t);\n    \n    return vec2(x, y);\n}\nvec2 cPow(in float a, in vec2 b)  { return cPow(comp(a), comp(b)); }\nvec2 cPow(in int a, in vec2 b)    { return cPow(comp(a), comp(b)); }\nvec2 cPow(in vec2 a, in float b)  { return cPow(comp(a), comp(b)); }\nvec2 cPow(in vec2 a, in int b)    { return cPow(comp(a), comp(b)); }\nvec2 cPow(in float a, in float b) { return cPow(comp(a), comp(b)); }\n\nvec2 cExp(in vec2 a) {\n    return exp(a.x) * vec2(cos(a.y), sin(a.y));\n}\nvec2 cExp(in float a)  { return cExp(comp(a)); }\nvec2 cExp(in int a)    { return cExp(comp(a)); }\n\nvec2 cExpi(in vec2 a) {\n    return exp(-a.y) * vec2(cos(a.x), sin(a.x));\n}\nvec2 cExpi(in float a)  { return cExpi(comp(a)); }\nvec2 cExpi(in int a)    { return cExpi(comp(a)); }\n\nvec2 cLog(in vec2 a) {\n    return vec2(log(length(a)), atan(a.y, a.x));\n}\nvec2 cLog(in float a)  { return cLog(comp(a)); }\nvec2 cLog(in int a)    { return cLog(comp(a)); }\n\nvec2 cSin(in vec2 a) {\n    return cDiv(cExpi(a)-cExpi(-a), vec2(0.,2.));\n}\nvec2 cSin(in float a)  { return cSin(comp(a)); }\nvec2 cSin(in int a)    { return cSin(comp(a)); }\n\nvec2 cCos(in vec2 a) {\n    return (cExpi(a)+cExpi(-a))/2.;\n}\nvec2 cCos(in float a)  { return cCos(comp(a)); }\nvec2 cCos(in int a)    { return cCos(comp(a)); }\n\nvec2 cCon(in vec2 a) {\n    return a * vec2(1, -1);\n}\nvec2 cCon(in float a)  { return comp(a); }\nvec2 cCon(in int a)    { return comp(a); }","name":"Common","description":"","type":"common"}]}