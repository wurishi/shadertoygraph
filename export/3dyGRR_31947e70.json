{"ver":"0.1","info":{"id":"3dyGRR","date":"1569527069","viewed":214,"name":"( ͡° ͜ʖ ͡°)","username":"nabr","description":"123","likes":8,"published":1,"flags":8,"usePreview":0,"tags":["spheretracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/3dyGRR\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n\n\n\nfloat polygon(vec2 p,float n)\n{\n    float a=atan(p.x,p.y)+.5*tau,r=tau/n;\n    return cos(floor(.5+a/r)*r-a)*length(p);\n}\n\n#define R(p,a)(p=cos(a)*p+sin(a)*vec2(p.y,-p.x))\nfloat s(vec3 p){\n    if(mod(iTime, 6.)<3.)R(p.xy, -iTime); \n    float b = float[](1.844,-1.,1.5,1.75)[uint(2.*iTime)%4u]; \n\tmat2 m =-b*mat2(1,1.,-1,1);\n    vec3 p1=pow(2.*abs(fract(vec3(m*p.xy,8.*iTime-p.z)*.105)-.5),\n                \tvec3(2.+sin(.5*iTime)));\n    p1=smoothstep(0.01,tau*.05,p1);\n    float pp; \n    for(float i = 3.; i<8.; i++)\n    pp += polygon(1./i*.5*p.xy, i);\n    return-length(1.57*p1)+max(pp,float(uint(.5*iTime)%3u));\n}\n\nfloat fbm(in vec2 p)\n{\n    float f=0.0;\n    for(float i=.5;i>0.;i-=.155)\n    {if(i!=.5)p*=mat2(.314,-1,1,.314)*(2.01+i)/1.115625;\n     float u=floor(p).x+floor(p).y*257.;\n     vec4 v=vec4(u,u+1.,u+257.,u+257.+1.);\n     v=fract(.5+fract(1.23456789*v)*v/.987654321);\n     f+=(i*mix(mix(v.x,v.y,fract(p.x)),mix(v.z,v.w,fract(p.x)),fract(p.y)));\n    }return f;\n}\nvoid mainImage(out vec4 O,in vec2 U)\n{ \n    vec3 p,dtr, col, ld=vec3(-1.*cos(2.*iTime),4.*sin(2.*iTime),-5);\n    U=1.-U*2./iResolution.xy;\n    if(mod(iTime, 6.)<1.)R(U, iTime);\n    if(!(iTime > 12. && iTime < 22.))\n    if(abs(U.y)>.65||abs(U.x)>.9){O.rgb=vec3(.82);return;};\n    float t=0.;\n    vec3 r = (vec3(U, 1.0 - dot(U, U) * 1.5));\n    R(r.xz, iTime * 0.5);\n    for(uint i=0u;i<32u;i++)\n    {t+=s(p=t*r);\n     //if(!(iTime > 12. && iTime < 22.))\n         p+=(.72 * fbm(vec2(p.y, p.z) * fbm(vec2(p.y, -p.x))));\n     //dither https://www.shadertoy.com/view/3tj3DW\n     dtr+=fract(sin(gl_FragCoord.x*vec3(13,1,11)+U.y*vec3(1,7,5))*158.391832)/255.0;\n    };\n\tvec2 e=vec2(-.002,.002);\n    vec3 n=normalize(e.yxx*s(p+e.yxx)+e.xxy*s(p+e.xxy)+e.xyx*s(p+e.xyx)+e.yyy*s(p+e.yyy));\n    vec3 l=max(dot(normalize(ld),n),0.)*vec3(.85,.05,.15);\n   \tl+=pow(max(dot(normalize(l+p),n), 0.), 6.);\n   \tif(!(iTime > 12. && iTime < 22.))\n        col=l*vec3(.5)*pow(2.*l.y+l.z,.4545);\n    col =.8*pow(l*(12.*dtr)+.5*(l.y+l.z),vec3(.4545));\n   \n    \n    O.xyz = col;\n}\n\n\n/*// subversion\nfloat s(vec3 p)\n{\tif(mod(iTime, 6.)<3.)R(p.xy, -iTime); \n    float b = float[](.175,-1., .5, .75)[uint(6.*iTime)%4u]; \n\tmat2 m = b*mat2(1,1.,-1,1);\n    vec3 p1=pow(2.*abs(fract(vec3(m*p.xy,4.*iTime-p.z)*.125)-.5),vec3(2.+sin(.25*iTime)));\n    p1=smoothstep(0.01,tau*.05,p1);\n    return.1-length(1.57*p1)+max(0.,polygon(.5*p.xy,2.+float(uint(iTime)%5u)));\n}*/\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// https://www.shadertoy.com/view/3dyGRR\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://creativecommons.org/licenses/by-nc-sa/3.0/\n\n\n\n\n\nfloat shk(float t)\n{\n    t = fract(2. * t);\n    float s = sin(1000. * tan(500. * t)) - ceil(20. * t);\n    float m = smoothstep(1., .25, s - mod(5. * t, .2));\n    return max(0., min(m, -s));\n}\nvec2 synth(in float rt, float t)\n{\n    if (t > 22. && t < 28.)\n        if (mod(t, 1.) < .1)\n            t = -rt;\n\n    float m = float[](440., 410., 440., 420.)[uint(6. * rt) % 4u];\n   \tif (t > 12. && t < 22.)\n        m = float[](1970., 410., 550., 420., 920., 1.)[uint(6. * rt) % 6u];\n    float p = m * float[](1., .5, .3)[uint(6. * rt) % 3u];\n    float s = sin(t * p * tau);\n    float f = 1.2 * sin(t * p * .5 * tau);\n    float f1 = .5 * sin(rt * p * tau);\n    float fin = ((s / f - .5) * (.5 * (f * (f1 - atan((f1 + (f * .8)) * 130., 0.)))));\n    fin *= min(1., 500. * fract(6. * rt)) * max(0., 1. - fract(6. * rt));\n    return vec2(fin);\n}\nvec2 sound(float time)\n{\n\n    vec2 fx = // shk(time+2.)*vec2(1.) //vec2(sin(1.*time),cos(1.*time))\n        vec2(shk(time + 2.) * dot(shk(time + .666), .95 * shk(time + .333)));\n    float tm = fract(3. * time);\n    float ffx = (sin(float[](1080., 2160.)[uint(4. * time) % 2u] * exp(-sin(tm * .27) * 10.0))\n        * exp(-tm * 4.0));\n    ffx *= cos(120.0 * exp(-tm * 2.0));\n    ffx *= min(1., 250. * tm) * max(0., 1. - tm);\n    ffx *= float(int[](1, 0, 1)[uint(3. * time) % 3u]);\n\n    \n    // rev https://www.shadertoy.com/view/XldcRr\n    vec2 mst = vec2(synth(time + .02, time).x, synth(time + .01, time).y);\n    vec2 rev = vec2(1);\n    float invRate = 1. / 10.5, sum = 0.;\n    float rand = 1., t2 = 1., amp = 1.;\n    for (float _ii = 0.; (_ii <= 1.); _ii += invRate)\n    {\n        rand = fract(120. * sin(_ii * 1000.));\n        t2 = (invRate + _ii) + (.5 * rand);\n        amp = exp(-_ii * t2);\n        rev += vec2(synth(.5 * time + 1. * t2, time).x, synth(time + 1. * t2, time).y) * amp;\n        sum += amp;\n    }\n    rev /= sum;\n\n    if (time > 12. && time < 22.)\n        return .5 * ((.5 * mst + ((sin(time) * .4 + .4) * rev) + .15 * fx));\n\n    return .5 * ( (.5 * mst + ((sin(time) * .3 + .3) * rev) \n                             + .15 * fx + .5 * ffx));\n}\nvec2 mainSound( in int samp,float time)\n{\n   \t\tfloat gt = mod(time, .25);\n    \tfloat kk = (.5 * sin(1800. * gt * exp(-8. * gt)) \n                    + sin(1200. * gt * exp(-3. * gt)))\n            \t\t* float(int[](1, 0)[uint(4. * time) % 2u]);\n    \tkk *= min(1., 250. * fract(4. * time)) * max(0., 1. - fract(4. * time));\n    \tvec2 snd = vec2(0); \n    \tsnd = (.65* kk) + sound(time); \n\t\tif(time<4.) snd+=.75*sound(time+(.01*fract(2.*time)));\n    \treturn snd;\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"#define tau (8.*atan(1.))","name":"Common","description":"","type":"common"}]}