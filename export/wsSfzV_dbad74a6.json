{"ver":"0.1","info":{"id":"wsSfzV","date":"1590419415","viewed":155,"name":"Squashed Bug","username":"ncot_tech","description":"Implementation of the Wikipedia pseudocode for the Mandelbrot set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float remap(float a, float min1, float max1, float min2, float max2) {\n    return min2 + (max2-min2) * ((a-min1) / (max1-min1));\n}\n\nvec2 remap(vec2 a, vec2 min1, vec2 max1, vec2 min2, vec2 max2) {\n    return min2 + (max2-min2) * (a-min1) / (max1-min1);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n#define MAX_ITER 1000.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = 0.1*iTime;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 mouse = iMouse.xy/iResolution.xy;\n    \n    float xoff = 0.0;\n    float yoff = 0.0;\n    \n    float x0 = remap(uv.x, 0., 1., -2.5, 1.);\n    float y0 = remap(uv.y, 0., 1., -1., 1.);\n    \n    vec2 mxy = vec2(0.,0.);\n    float iter = 0.;\n    \n    while (mxy.x*mxy.x + mxy.y*mxy.y < 4.0 && iter < MAX_ITER) {\n    \tfloat xtemp = mxy.x*mxy.x - mxy.y*mxy.y + x0;\n        mxy.y = 2.*mxy.x*mxy.y + y0;\n        mxy.x = xtemp;\n        iter+=1.0;\n    }\n    \n    \n\tif (iter >= MAX_ITER)\n    \tfragColor = vec4(0.,0.,0.,1.0);\n    else {\n        float iter_norm = remap(iter,0.,MAX_ITER,0.,1.);\n    \tvec3 colour = pal( sqrt(iter_norm), vec3(0.7,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.34,0.33,0.67) );\n    \t// Output to screen\n    \tfragColor = vec4(colour,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}