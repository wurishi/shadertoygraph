{"ver":"0.1","info":{"id":"7lKcDD","date":"1661530121","viewed":436,"name":"Old film Effect","username":"VL","description":"ref : [url]https://www.youtube.com/watch?v=zs9IsYjCrAw[/url]","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["postprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define int2 vec2\n#define float2 vec2\n#define int3 vec3\n#define float3 vec3\n#define int4 vec4\n#define float4 vec4\n#define frac fract\n#define float2x2 mat2\n#define float3x3 mat3\n#define float4x4 mat4\n#define saturate(x) clamp(x,0.,1.)\n#define lerp mix\n#define CurrentTime (iTime)\n#define sincos(x,s,c) s = sin(x),c = cos(x)\n#define mul(x,y) (x*y)\n#define atan2 atan\n#define fmod mod\n#define static\n\nfloat2 hash(float2 p)\n{\n    float3 p3 = frac(float3(p.xyx) * float3(166.1031, 147.1030, 142.0973));\n    p3 += dot(p3, p3.yzx + 33.33);\n    return frac((p3.xx + p3.yz) * p3.zy);\n}\n\nfloat simplexNoise(float2 uv)\n{\n    const float k1 = 0.366025f;\n    const float k2 = 0.211324f;\n\n    int2 idx = floor(uv + (uv.x + uv.y) * k1);\n    float2 a = uv - (float2(idx) - float(idx.x + idx.y) * k2);\n    int2 tb = a.y > a.x ? int2(0, 1) : int2(1, 0);\n    float2 b = a - tb + k2;\n    float2 c = a - 1.f + k2 * 2.f;\n    \n    float3 kernel = max(0.5f - float3(dot(a, a), dot(b, b), dot(c, c)), 0.f);\n    float3 noise = kernel * kernel * kernel * kernel * \n    float3(dot(a, hash(idx)*2.f-1.), \n           dot(b, hash(idx + tb)*2.-1.), \n           dot(c, hash(idx + 1.f)*2.-1.));\n    \n    return dot(float3(70.f), noise);\n}\n\n\nfloat verticalLine(float2 uv, float time)\n{\n    float uvX = uv.x + time*0.0000003;\n    float2 xHash = hash(float2(uvX,uvX));\n    float vertical = step(0.9999996,sin(uvX*1000.0 * (xHash.x*0.01+0.01)));\n    \n    float uvY = uv.y + time*0.000001;\n    float2 yHash = hash(float2(uvY,uvY));\n    vertical *= sin(uvY*1000.0 * (yHash.x));\n    \n    \n    return saturate(1.0 - vertical);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime;\n    \n    float3 col = float3(0.0,0.0,0.0);\n    col += verticalLine(uv-1.0,t)*0.5;\n    col += (1.0 - verticalLine(uv-3.0,t*5.0))*0.5;\n    col *= smoothstep(0.9,0.83, simplexNoise((uv + hash(float2(t,t))*154.4541-154.4541)*10.0));\n    col *= 1.f - hash(uv + t * 0.01f).x * 0.25;\n    col *= smoothstep(1.5 + hash(floor(float2(t,t)*15.)).x*0.3,0.0, length(uv-0.5));\n   \n    float3 tex = texture(iChannel0,uv).rgb;\n    tex = float3( (tex.r + tex.g + tex.b)/3.0 );\n    \n    fragColor = vec4(col * tex,1.0);\n}","name":"Image","description":"","type":"image"}]}