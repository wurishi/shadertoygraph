{"ver":"0.1","info":{"id":"Dtj3WG","date":"1673875138","viewed":169,"name":"Least Sig Bit Fiddling","username":"WhiteWalrus518","description":"I wanted to see if I could notice changes to the Least Significant Bits in images. \nTurns out, I can't for LSB <=3, but you're welcome to try yourself :)\n\nhttps://www.researchgate.net/figure/Least-Significant-Bit-Steganography-in-one-Pixel_fig4_341879552","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["steganography","cryptography"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n\nint LSB = 4;\n// set this value to the num of bits to be overriden\n// i.e. LSB == 3 => 0110101 becomes 01101###\n\nfloat tM = 0.1;\n//set tM to non-zero value to animate noise\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = 1.0 - uv.x;\n    vec3 cam = texture(iChannel0, uv).xyz;\n    \n    int camR = eraseLSB(LSB, cam.x) + newLSB(LSB, uv + vec2(.23 + t * tM  , r(t * tM - uv)));\n    int camG = eraseLSB(LSB, cam.y) + newLSB(LSB, uv + vec2(r(t * tM + uv), .3 + t * tM));\n    int camB = eraseLSB(LSB, cam.z) + newLSB(LSB, uv + vec2(-.5 - t * tM  ,-r(t * tM + uv)));\n    \n    vec3 outcam = vec3(intToPix(camR), intToPix(camG), intToPix(camB));\n\n    fragColor = vec4(outcam.xyz, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float r (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nfloat random (vec2 st) {\n    return  r( vec2( r(st) ,r( vec2(sin(1.0 / fract(st + 0.04))))));\n}\n\nfloat twoPow(int val){\n    return pow(2.0, float(val));\n}\n\nint eraseLSB(int bitLength, float val){\n    return int(val * 255.0 - mod(val * 255.0, twoPow(bitLength) ));\n}\n\nint newLSB(int bitLength, vec2 seed){\n    return int(twoPow(bitLength) * random(seed));\n}\n\nfloat intToPix(int pixVal){\n    return float(pixVal)/255.0;\n}","name":"Common","description":"","type":"common"}]}