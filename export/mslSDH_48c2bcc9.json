{"ver":"0.1","info":{"id":"mslSDH","date":"1668843882","viewed":94,"name":"PoyoPoyo","username":"akabozu","description":"007","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\n\nvec2 r2(vec2 p, float t) {\n    return vec2(cos(t) * p.x - sin(t) * p.y, sin(t) * p.x + cos(t) * p.y);\n}\n\nvec3 rX(vec3 p, float t) {\n    return vec3(p.x, r2(p.yz, t));\n}\n\nvec3 rY(vec3 p, float t) {\n    return vec3(p.y, r2(p.zx, t)).zxy;\n}\n\nvec3 rZ(vec3 p, float t) {\n    return vec3(r2(p.xy, t), p.z);\n}\n\nfloat sm(float a, float b, float k) {\n    float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n    return mix(b, a, h) - k * h * (1.0 - h);\n}\n\nfloat sSDF(vec3 p, vec3 c, float r) {\n    return length(p - c) - r;\n}\n\nfloat pSDF(vec3 p, vec3 n, float s) {\n    return dot(normalize(n), p * 1.0) - s;\n}\n\nfloat oSDF(vec3 p, float s) {\n    return pSDF(abs(p), vec3(1.0), s);\n}\n\nfloat bSDF(vec3 p, vec3 c, vec3 d, float s) {\n    p = abs(p - c);\n    return length(max(p - d, vec3(0.1))) + min(max(max(p.x - d.x, p.y - d.y), p.z - d.z), 0.0) - s;\n}\n\nfloat scSDF(vec3 p) {\n    float[5] sS, d1, bS;\n    float s = mix(1.0 / 3.0, 1.0, 0.5 * sin(iTime) + 0.5);\n    for (int i = 0; i < 5; i++) {\n        sS[i] = sSDF(p, vec3(float(i - 1) * 2.5, sin(iTime + float(i)) * 2.0, 0.0), 0.2);\n        bS[i] = sSDF(p, vec3(float(i - 1) * 2.5, cos(iTime + float(i)) * 4.0, 0.0), 0.4);\n        d1[i] = bSDF(p, vec3(1.0, -0.0, 0.0), vec3(7.5, 0.5, 0.0), 0.17);\n    }\n    float c0 = sm(sm(sS[0], d1[0], 0.6), bS[0], 0.6);\n    float c1 = sm(sm(sS[1], d1[1], 0.6), bS[1], 0.6);\n    float c2 = sm(sm(sS[2], d1[2], 0.6), bS[2], 0.6);\n    float c3 = sm(sm(sS[3], d1[3], 0.6), bS[3], 0.6);\n    float c4 = sm(sm(sS[4], d1[4], 0.6), bS[4], 0.6);\n    return min(min(min(c0, c1), min(c2, c3)), c4);\n}\n\nvec3 gSDF(vec3 p) {\n    float eps = 0.001;\n    return normalize(vec3(\n        scSDF(p + vec3(eps, 0.0, 0.0)) - scSDF(p + vec3(-eps, 0.0, 0.0)),\n        scSDF(p + vec3(0.0, eps, 0.0)) - scSDF(p + vec3(0.0, -eps, 0.0)),\n        scSDF(p + vec3(0.0, 0.0, eps)) - scSDF(p + vec3(0.0, 0.0, -eps))\n    ));\n}\n\nvoid mainImage(out vec4 fc, in vec2 fcCoord) {\n    vec2 p = (fcCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 cP = vec3(vec3(2.5, 0.0, 3.7));\n    vec3 cD = vec3(0.0, 0.0, -1.0);\n    vec3 cU = vec3(0.0, 1.0, 0.0);\n    vec3 cS = cross(cD, cU);\n    float tD = 1.0;\n    vec3 lD = vec3(0.0, 0.0, 1.0);\n    vec3 r = cS * p.x + cU * p.y + cD * tD;\n    vec3 rP = cP + r;\n    r = normalize(r);\n    fc.rgb = vec3(0.9);\n    for (int i = 0; i < 50; i++) {\n        if (scSDF(rP) > 0.001) {\n            rP += scSDF(rP) * r;\n        } else {\n            float a = 0.1;\n            float d = 0.9 * max(dot(normalize(lD), gSDF(rP)), 0.0);\n            vec3 col = vec3(1.0);\n            fc.rgb = col * (d + a);\n            break;\n        }\n    }\n    fc.a = 1.0;\n}\n","name":"Image","description":"","type":"image"}]}