{"ver":"0.1","info":{"id":"MlfyWS","date":"1506189511","viewed":625,"name":"Solyaris","username":"Kchplr","description":"The autumnal cycle of the planet's protoplasmic oceans.","likes":3,"published":3,"flags":96,"usePreview":0,"tags":["atmospheric","solaris"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MssXWf","filepath":"https://soundcloud.com/invadauk/wear-your-seat-belt","previewfilepath":"https://soundcloud.com/invadauk/wear-your-seat-belt","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(in vec2 _st, in float _radius){\n    vec2 dist = _st-vec2(0.5);\n\treturn 1.-smoothstep(_radius-(_radius*0.3),\n                         _radius+(_radius*0.3),\n                         dot(dist,dist)*4.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    \n    float moon = circle(fragCoord.xy / min(iResolution.yy, iResolution.xx) + vec2(-0.95, 0.0), 0.066);\n    fragColor = mix(color, color * vec4(1.5, 1.03, 1.7, 1.0), color.a * moon);\n    \n    //fragColor.rgb = vec3(pow((fragColor.r*0.8 + fragColor.g + fragColor.b*0.5) / 2.25, 3.5));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 origUv = fragCoord.xy / iResolution.xy;\n    vec2 uv = (origUv - 0.5) * 2.;\n    vec3 skyColor = vec3(pow(abs(cos(uv.x * uv.y*1.5)), 1.5), pow(abs(uv.x), 2.) * 0.7 + 0.3, abs(uv.y) * 0.5);\n    \n    float waterHeight = sin(iTime*0.63 + uv.y + uv.x)*0.5;\n    waterHeight = waterHeight + waterHeight * abs(sin(iTime + uv.y + uv.x + waterHeight)) * pow(1.-abs(cos(uv.x*4. + cos(uv.y) + iTime*0.2)), .85);\n    float waterOpacity = max(0., (-uv.y-waterHeight*0.2-0.3)*(1.-abs(uv.x)*0.5));\n    waterOpacity = waterOpacity > 0. ? waterOpacity * 0.2 + 0.2 : 0.;\n    vec3 waterColor = vec3(0.01,0.04,0.15) + pow(skyColor*1.1,vec3(0.8));\n    \n    vec3 finalColor = mix(mix(skyColor, texture(iChannel0, origUv + vec2(0.005,-0.0015)).rgb, 0.98 + max(0.,waterHeight)*0.021), waterColor, waterOpacity);\n    \n    fragColor = vec4(finalColor, min(1., pow(waterOpacity - 0.205, 0.66)));\n}","name":"Buf A","description":"","type":"buffer"}]}