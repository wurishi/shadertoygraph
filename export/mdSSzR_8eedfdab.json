{"ver":"0.1","info":{"id":"mdSSzR","date":"1671705215","viewed":399,"name":"UniverseStar.01","username":"wangyp_windsor","description":"UniverseStar\n","likes":14,"published":1,"flags":96,"usePreview":0,"tags":["work"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//I made this inspired by the shader of BigWIngs : https://www.shadertoy.com/view/lscczl\n//Added a little music effect and did some tweak for better art effect that i believe\n\n#define S(a,b,t) smoothstep(a,b,t)\n#define saturate(x) clamp(x,0.,1.)\nvec3 HSB2RGB( in vec3 c ){   \n    vec3 rgb = saturate(3.*abs(1.-2.*fract(c.x+vec3(0.,-1./3.,1./3.)))-1.);   \n    return c.z * mix(vec3(1.), rgb, c.y);\n}\nmat2 Rot2D(float d){\n    vec2 a = sin(vec2(d,d+1.5708));\n    return mat2(a.y,a.x,-a.x,a.y);\n}\nfloat DistLine(vec2 p, vec2 a, vec2 b){\n    vec2 ap = p-a;\n    vec2 ab = b-a;\n    float t = saturate( dot(ap,ab)/dot(ab,ab) );\n    return length(ap - t*ab);\n}\nfloat DrawLine(vec2 p, vec2 a, vec2 b){\n    float d = DistLine(p,a,b);\n    float m = smoothstep(.012,.0065 ,d);\n    float d2 = length(a-b);\n    float fade = .382*smoothstep(1.15,.45,d2)+.618*smoothstep(.15,.0,abs(d2-.7));\n    return fade*m;\n}\nfloat SmoothSample (float x,float tile){\n    float f = texelFetch(iChannel0,ivec2(x*tile,0),0).r;\n    float fd = texelFetch(iChannel0,ivec2(x*tile+1.,0),0).r;\n    float t = mod(x,1./tile)*tile;\n    float fs = mix(f,fd,smoothstep(0.,1.,t));\n    return fs;\n}\nfloat Plot(float x,float y,float w){\n    float f = SmoothSample(x,32.);\n    float fd = SmoothSample(x+.003,32.);\n    float slope = (fd-f)/.012;\n    w *= sqrt(slope*slope+1.);\n    f = f-y*1.;\n    //return step(-w,f)*step(f,w);\n    return smoothstep(-w,0.,f)*smoothstep(w,0.,f);\n}\nvec2 Histogram(vec2 uv,float w){\n    float f = texelFetch(iChannel0,ivec2(uv.x*iResolution.x,0),0).r;\n    uv.y *= 2.1;\n    float c = saturate(uv.y/f);\n    c = pow(c,mix(6.,15.,f*2.));\n    return vec2(smoothstep(f,f-w,uv.y)*c*(1.+S(0.,.75,f)),\n           f);\n}\nfloat Rand21(vec2 p){\n    p = fract(p*vec2(17.38,29.71)*13.67);\n    p += dot(p,p+13.29);\n    return fract(p.x*p.y+.1416);\n}\nvec2 Rand22(vec2 p){\n    float s = Rand21(p);\n    return vec2(s,Rand21(p+s));\n}\nvec2 GetPos(vec2 iuv,vec2 offset){\n    vec2 n = Rand22(iuv+offset);\n    return offset+sin(n*iTime)*.45;\n\n}\nfloat Sparkle(vec2 iuv,vec2 guv,vec2 p){\n    float rand = Rand21(p);\n    float d = length(guv-p)*30.; \n    float anim = sin(iTime*7.5+fract(p.x)*11.37)*.382+.618;\n    return 1./d/d*anim;\n}\nfloat Layer (vec2 uv){\n    \n    float m = 0.;    \n    vec2 guv = fract(uv)-.5;\n    vec2 iuv = floor(uv);\n\n    vec2 p[9];\n    int i = 0;\n    for(float x=-1.;x<=1.;x++){\n        for(float y=-1.;y<=1.;y++){\n            p[i++] = GetPos(iuv,vec2(x,y));\n        }\n    }\n\n    for(int i=0;i<9;i++){\n        m += DrawLine(guv,p[4],p[i]);\n        m += Sparkle(iuv,guv,p[i]);\n    }\n\n    m += DrawLine(guv,p[1],p[3]);\n    m += DrawLine(guv,p[1],p[5]);\n    m += DrawLine(guv,p[7],p[3]);\n    m += DrawLine(guv,p[7],p[5]);\n    \n    return m;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 mouse = iMouse.xy/iResolution.xy-.5;\n    vec2 Rawuv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 grad = uv;\n    mat2 rot = Rot2D(-iTime*.16);\n    float m = 0.;\n    \n    for (float i=0.; i<=1.; i+= 1./4.){  \n        float z = fract(i+iTime*.15);\n        float tile = mix(8.,.0,z);\n        float fade = smoothstep(0.,.6,z)*smoothstep(1.,.7,z);\n        m += Layer( rot*(uv-mouse*.38*z)*tile -iTime*.15 + i*16.6)*fade;    \n    }\n           \n    vec2 hG = Histogram(Rawuv,.005);\n    \n    //vec3 hueShift = sin(iTime*vec3(.3,.4,.125))*.45+.55;\n    vec3 hueShift0 = HSB2RGB(vec3( iTime*.05+uv.x*.1, .57+.2*sin(iTime*.12), 1.));\n    vec3 hueShift1 = HSB2RGB(vec3( iTime*.05+hG.y*.3-uv.x*.13, .75+.2*sin(iTime*.12)-hG.y*.35, 1.));\n    vec3 col = hueShift0*(m+uv.y*uv.y*.72) + hueShift1*hG.x*.75;\n    col = col*pow(saturate(iTime*.5),2.);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtjSRt","filepath":"https://soundcloud.com/cubicolor/falling-feat-tim-digby-bell-short-version","previewfilepath":"https://soundcloud.com/cubicolor/falling-feat-tim-digby-bell-short-version","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int num =8;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Loop to accumulate certain range amplitude\n    float xi = floor(uv.x*512./float(num))*float(num);\n    float xf = mod(uv.x*512.,float(num));\n    float sp = 0.;\n    \n    for (int i=0;i<num;i++){\n        float x = xi + mod(xf+float(i),float(num));\n        sp += texelFetch(iChannel1, ivec2(x,0), 0).x;\n    }\n    sp /= float(num);\n    \n    //Mix with last frame buffer in certain ratio =.39 to get more smooth effct\n    float buffer = texelFetch(iChannel0, ivec2(uv.x*iResolution.x, 0), 0).x;\n    sp = mix(buffer,sp,.39); \n    \n    //Mask the edge to get interval =.39\n    float m = step(abs(fract(uv.x*512./float(num))-.5),.39);\n    \n    fragColor = vec4(pow(sp,1.15)*m,0.,0.,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}