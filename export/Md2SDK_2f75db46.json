{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat saw(float x) {\n    return mod(x, 2.0) * 0.5;\n}\n\nfloat tri(float x) {\n    return 1.0 - abs( mod(x, 2.0) - 1.0 );\n}\n\nfloat cosPos(float x) {\n\treturn cos(x) * 0.5 + 0.5;\n}\n\nfloat signGte0(float x) {\n    return step(0.0, x)*2.0 - 1.0;\n}\n    \nvec3 invert(vec3 col, float mask) {\n    mask = signGte0(mask);\n\t// change col from 0 <-> 1 to -1 <-> 1\n    col = col * 2.0 - 1.0;\n\treturn (col * mask)*0.5 + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat time = iTime;\n\tvec2 q = fragCoord.xy/iResolution.xy;\n\tvec2 p = q * 2.0 - 1.0;\n\tp.x *= iResolution.x/iResolution.y;\n\n\t// stripes\n\tfloat width = 0.20; // how wide is each pair (wavelength)\n\tfloat balance = 0.90; // 0.5 == 50/50 black and white\n    float offset = -0.20;\n\n\tfloat stripe = sin((p.y + offset)*2.0*PI/width) * 0.5 + balance;\n\tstripe = smoothstep(0.50, 0.51, stripe);\n\tvec3 col = vec3(stripe);\n\n\t// mask\n    float radius = 3.0 * saw(time);\n    float radius2 = 3.0 * saw(time - 1.0);\n    \n    float mask = (abs(p.x)+abs(p.y)) - radius;\n    float mask2 = (abs(p.x)+abs(p.y)) - radius2;\n\n    col = invert(col, mask);\n    col = invert(col, mask2);\n    //col = invert(col, -sin(time*PI)); //lol\n    col = invert(col, saw(time) - 0.5); //lol\n    \n\tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Md2SDK","date":"1416184432","viewed":202,"name":"stripey diamond","username":"dydx","description":"diamond","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["diamond"],"hasliked":0,"parentid":"","parentname":""}}