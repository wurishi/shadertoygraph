{"ver":"0.1","info":{"id":"ctVcWV","date":"1700679519","viewed":38,"name":"Fractal 0002","username":"Makisness","description":"My second shader as I learn GLSL. Enjoy the fractal.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos(6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\nvec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n  vec2 uv0 = uv;\n  vec3 finalColor = vec3(0.0);\n\nfor (float i = 0.0; i < 5.; i++) {\n    \n   float angle = -cos(iTime/3.14)+sin(-iTime/7.17);\n   uv *= mat2(\n   cos(angle), -sin(angle),\n   sin(angle), cos(angle)\n   );\n   \n    uv = sin(uv*2.);\n    uv /= cos(uv);\n    \n    \n\n    float d = length(uv);\n\n    d -= .3; \n    d = abs(d);\n    d = angle/d;\n    \n    float f = sin(iTime*2.)/11.;\n    d = sin(d *8.+iTime)/8.; \n    \n    float e = smoothstep(f,.1,d);\n\n   \n    \n    vec3 col = palette(e + sin(fract(iTime/4.))-.1);\n    \n    col *= e;\n    col -= d;\n    finalColor += col;\n}\n  \n fragColor = vec4(finalColor,1.0);\n \n\n \n}","name":"Image","description":"","type":"image"}]}