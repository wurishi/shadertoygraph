{"ver":"0.1","info":{"id":"McjyDt","date":"1723191704","viewed":13,"name":"daily shader clock 8","username":"SaWellan","description":"Fork of \"daily shader clock 5 \" by jonasfrey. https://www.shadertoy.com/view/XcjyD1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Fork of \"daily shader clock 5 \" by jonasfrey. https://www.shadertoy.com/view/XcjyD1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 o_trn = (fragCoord.xy-iResolution.xy*.5)/min(iResolution.y, iResolution.x);\n    o_trn *= 1.5;\n    vec2 o2 = clamp(o_trn + .5, 0., 1.);\n\n    float n_tau = 6.2831;\n\n    float n_sec = iDate.w;\n    float n_sec_mod = mod(n_sec, 60.);\n    float n_sec_mod_nor = n_sec_mod / 60.;\n    float n_sec_mod_nor_snp = floor(n_sec_mod) / 59.;\n    float n_min_mod = floor(mod(n_sec, 60.*60.));\n    float n_min_mod_nor = n_min_mod / (60.*60.);\n    float n_min_mod_nor_snp = (floor(n_min_mod_nor*60.))/59.;\n    float n_hou_mod = floor(mod(n_sec, 60.*60.*24.));\n    float n_hou_mod_nor = n_hou_mod / (60.*60.*24.);\n    float n_hou_mod_nor_snp = (floor(n_hou_mod_nor*24.))/24.;\n\n    float n_aa = (1./(iResolution.x+iResolution.y)/2.)*8.;\n    float n_its = 3.;\n    float n_it_nor_one = 1./n_its;\n    vec4 o_col = vec4(0.);\n\n    float nr = max(abs(o_trn.x), abs(o_trn.y));\n    float nm = 1.-sign(nr-.5);\n    nm = clamp(nm, 0., 1.);\n    nr = (nr -.5)/.2;\n    nr = 1.-pow(nr, 1./9.);\n    int n_idx = int(o2.x*3.);\n    float[] anmt = float[] (\n            n_hou_mod_nor_snp, \n            n_min_mod_nor_snp, \n            n_sec_mod_nor_snp\n    );\n    float[] and = float[] (\n            24., \n            60., \n            60.\n    );\n    float nmt = anmt[n_idx];\n    float nd = and[n_idx];\n\n    float n2 = 1./3.;\n    float n = nmt;\n    \n    //ny = normalized y-coordinate\n    float ny = floor(o2.y*nd)/nd;\n    float nmy = 1.-float(o2.y > n);\n    n = ny*nmy;\n    nr = clamp(nr, 0., 1.);\n\n    // Calculate color gradient\n    vec3 color;\n    \n    if (ny < 0.5) {\n        color = mix(vec3(0.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0), ny * 2.0);  // Blue to Green\n    } else {\n        color = mix(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 0.0), (ny - 0.5) * 2.0);  // Green to Red\n    }\n\n    fragColor = vec4(color * nmy * nm + nr, 1.0);\n    fragColor.rgb *= (1.0 - smoothstep(0.98, 1.0, nr));\n}","name":"Image","description":"","type":"image"}]}