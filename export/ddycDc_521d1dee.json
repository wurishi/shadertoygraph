{"ver":"0.1","info":{"id":"ddycDc","date":"1696688003","viewed":34,"name":"07. Drip","username":"Ladus","description":"Inktober 2023 Day 7.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["drip","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle(vec2 uv, float radius) {\n    return length(uv) - radius;\n}\nvec2 normalizeScreenSpace(vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x -= 1.-(iResolution.y/iResolution.x);\n    uv = (uv - vec2(0.5))*2.;\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = normalizeScreenSpace(fragCoord);\n    float loopingTime = fract(iTime/3.);\n    \n    //zoom\n    uv *= 2.;\n    uv += vec2(0.,-0.5);\n    \n    // Falling drip c1\n    vec2 c1Pos = uv + vec2(0.,0. + sin(loopingTime)*4.);\n    float c1 = sdCircle(c1Pos, 0.3);\n    \n    // top sphere c2\n    vec2 c2Pos = uv + vec2(0.,-6.);\n    float c2 = sdCircle(c2Pos, 5.);\n    \n    // Create mask between background and foreground\n    float field = pow(c1*c2,3.);\n    float mask = step(0.5,field);\n\n    // mix colors\n    vec3 backgroundGradient = mix(vec3(0.,0.8,1.),vec3(0.03,0.7,1.),pow(distance(uv, vec2(0.))*.7,1.5));\n    //vec3 col = mix(vec3(0.), backgroundGradient, mask);\n    \n    float dripGradient = clamp(0.,1.,max(field,-0.3))*2.;\n    vec3 dripColor = mix(vec3(0.03,0.5,1.),vec3(0.,0.1,0.4), dripGradient);\n    \n    vec3 col = mix(backgroundGradient, dripColor, 1.-mask);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}