{"ver":"0.1","info":{"id":"dstGR7","date":"1677099510","viewed":25,"name":"Fork Fork hex c sleeplessm 657","username":"sleeplessmonk","description":"WIP \n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","hexagon","tile"],"hasliked":0,"parentid":"mdtGzM","parentname":"Fork hex crysta sleeplessm 814"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(a) (cos(radians(vec3(100, 140, 190))-((a)*6.2832))*.5+.5) // hue pallete\n#define RT(a) mat2(cos(m.a*1.571+vec4(0,-1.571,1.571,0))) // rotate\n\nvoid mainImage( out vec4 C, in vec2 U ) {\n    vec3 c = vec3(0), \n         o = vec3(1, 1.732, 1),\n         u, v, a, b;\n    vec2 R = iResolution.xy,\n         m = iMouse.xy/R*4.-2.,\n         uv = (U-.5*R)/R.y; // 2d coords\n    float t = iTime/1.5,\n          tr = smoothstep(0., 1., sin(t)*.6+.5),\n          s = tr*.4+2., // scale\n          h;\n    if (iMouse.z < 1.)\n        m = vec2(sin(t/2.)*.6, sin(t)*.4); // rotate with time\n    mat2 pitch = RT(y),\n          yaw = RT(x);\n    float numSlices = 6.0;\n    float sliceAngle = 20.0 * 3.14159 / numSlices;\n    for (float i = .1; i < 1.; i+=.1) {\n        for (float j = 0.5; j < numSlices; j++) {\n            // apply rotation transformation to hexagonal tiles\n            mat2 rot = mat2(cos(j * sliceAngle), -sin(j * sliceAngle), sin(j * sliceAngle), cos(j * sliceAngle));\n            u = normalize(vec3(uv, 77.7*sqrt(i)))*s; // 3d coords\n            u.yz *= pitch;\n            u.xz *= yaw;\n            u.xy *= rot;\n\n            // add distortion\n            u.xy += sin(uv.yx*20.0+t)*.1;\n            u.xz += sin(uv.yx*30.0+t)*1.2;\n            u.yz += sin(uv.yx*10.0+t)*.15;\n\n            // simple hexagonal tiles by lomateron https://www.shadertoy.com/view/MlXyDl\n            a = mod(u, o)*2.-o;\n            b = mod(u+o*.5, o)*2.-o;\n            h = min(dot(a, a), dot(b, b))*.5;\n            v = h*h*H(i-t/1.5);\n            float k = 1.2-max(i, tr-i); // increase contrast\n            c += v*k;\n        }\n    }\n    // add more color\n    c *= vec3(0.737,0.122,0.820);\n    c = pow(c, vec3(1.35)) * .5 + 0.05;\n    C = vec4(c, 1);\n}\n","name":"Image","description":"","type":"image"}]}