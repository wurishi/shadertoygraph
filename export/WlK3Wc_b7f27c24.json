{"ver":"0.1","info":{"id":"WlK3Wc","date":"1580075055","viewed":220,"name":"Trolley Problems","username":"kefeld","description":"A quick Mandelbrot shader for the trolley problem memes page.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrottrolley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Translate pixel coordinates to specific window in Mandelbrot\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y*pow(0.9,iTime)*4.; //zoom\n    uv.x += - 1.11009; //x offset\n    uv.y += -.256515;   //y-offset\n    \n    int n = 0;\n    vec2 w;\n    \n    //Main calcuation loop\n    for (int i = 0; i<1000; i=i+1) {\n        w = vec2((w.x*w.x)-(w.y*w.y)+uv.x,2.*w.x*w.y + uv.y);\n        if (length(w) > 2.) {\n            n = i;\n            break;\n        }\n    }\n\n    float c = log(float(n));\n    vec3 col = vec3(sin(2.*c)+1.,sin(c+iTime*0.5)*.5+.5,.0); //cycle colors of pixels not belonging to set, according to #of iterations it took to diverge\n    if (n == 0) col *= 0.; //set pixels belonging to set to zero (black)\n\n    //output color\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}