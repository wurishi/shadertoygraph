{"ver":"0.1","info":{"id":"fsVBWK","date":"1658867171","viewed":68,"name":"Simple Mandelbrot set","username":"Castur_","description":"Just a simple Mandelbrot set render, there's not much to it","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int maxIterations = 150;\nfloat zoom = 2.5;\nvec2 offset = vec2(0.1, 0.0);\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= offset + 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= zoom;\n\n    float x, y;\n    \n    int i = 0;\n    while ((x * x + y * y) < 4.0 && i < maxIterations) {\n        float xTemp = x * x - y * y + uv.x;\n        y = 2.0 * x * y + uv.y;\n        x = xTemp;\n        \n        i++;\n    }\n    \n    //Square root is for aesthetical reasons\n    vec3 colour = vec3(sqrt(float(i) / float(maxIterations)));\n\n    fragColor = vec4(colour, 1.0);\n}","name":"Image","description":"","type":"image"}]}