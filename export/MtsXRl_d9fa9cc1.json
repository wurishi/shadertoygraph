{"ver":"0.1","info":{"id":"MtsXRl","date":"1439062588","viewed":310,"name":"[SIG15]Bustin makes me feel good","username":"dcoombes","description":"Gozer the Traveler. He will come in one of the pre-chosen forms. During the rectification of the Vuldrini, the traveler came as a large and moving Torg! Then, during the third reconciliation of the last of the McKetrick supplicants, they chose a new form ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sig15"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//dcoombes 2015\n\n//Based on IQ's code found here. That shader includes a link back to the distance field documentation\n//https://www.shadertoy.com/view/Xds3zN\n//ghostbusters logo exported as \"compiled sprite\" using python and pil.\n\n\n#define \tM_PI   3.14159265358979323846\n#define \tDEG2RAD(x)   ((x) * 0.01745329251994329575)\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nfloat sdPlane( vec3 p )\n{\n\treturn p.y;\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nfloat sdSphere( vec3 p, float s )\n{\n    return length(p)-s;\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n\tvec3 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h ) - r;\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nfloat sdCylinder( vec3 p, vec2 h )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - h;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nfloat udRoundBox( vec3 p, vec3 b, float r )\n{\n  return length(max(abs(p)-b,0.0))-r;\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nfloat sdCylinder2( vec3 p, vec2 h )\n{\n//  vec2 d = abs(vec2(length(p.xz),p.y)) - h;\n  vec2 d = abs(vec2(length(p.xy),p.z)) - h;\n \n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\n\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nmat4 rotXMat(float a)\n{ \nmat4 m;\nm[0] = vec4(1.0, 0.0, 0.0, 1.0); //Sets the first column    \nm[1] = vec4(0.0, cos(a), sin(a), 0.0);    \nm[2] = vec4(0.0, -sin(a), cos(a), 0.0);    \nm[3] = vec4(0.0, 0.0, 0.0, 1.0);     \n    \nreturn m;\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nmat4 rotZMat(float a)\n{ \nmat4 m;\nm[0] = vec4(cos(a),sin(a), 0.0, 0.0); //Sets the first column    \nm[1] = vec4(-sin(a), cos(a), 0.0,0.0);    \nm[2] = vec4(0.0, 0.0, 1.0, 0.0);    \nm[3] = vec4(0.0, 0.0, 0.0, 1.0);     \n    \nreturn m;\n}\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nvec3 opTx( vec3 p, mat4 m )\n{\n    vec4 q = m*vec4(p,1.0);\n    return q.xyz;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\nvec2 opU( vec2 d1, vec2 d2 )\n{\n\treturn (d1.x<d2.x) ? d1 : d2;\n}\n\n\n\nfloat opS( float d1, float d2 ) //subtract\n{\n    return max(-d2,d1);\n}\n\n\n\n\n// polynomial smooth min (k = 0.1);\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nvec2 map( in vec3 pos )\n{\n\n    vec2 res;\n    \n    float d = sdSphere( pos-vec3(  0.0,0.30, -0.0), 0.32 ); //body\n    float e = sdSphere( pos-vec3(  0.0,0.60, -0.0),0.15);   //head\n    \n    float f = sdCapsule(pos,vec3(-0.13,0.7,0.09), vec3(-0.05,0.66,0.17), 0.01   ); //left eyebrow\n    float g = sdCapsule(pos,vec3( 0.13,0.7,0.09), vec3( 0.05,0.66,0.17), 0.01   ); //right eyebrow\n\n    float h = sdSphere( pos-vec3(  0.0,0.58, 0.17),0.005);   //nose\n\n   \n     res = vec2(smin(h,smin(g,smin(f,smin(e,d,0.1),0.1),0.1),0.1),7.0);\n    \n     float i = sdSphere( pos-vec3(  0.0,0.36, 0.2),0.2);   //mouth\n\tres = vec2(opS( res.x,i),7.0);\n    \n    \n    \n\t//left arm\n    float j = sdCapsule( pos,vec3(-0.3,0.40,-0.0), vec3(-0.5,0.50,0.0), 0.05  );\n    float k = sdCapsule( pos,vec3(-0.5,0.50,-0.0), vec3(-0.6,0.55,0.0), 0.03  );\n    float m = sdCapsule( pos,vec3(-0.5,0.50,-0.0), vec3(-0.6,0.45,0.0), 0.03  );\n    float n = sdCapsule( pos,vec3(-0.5,0.50,-0.0), vec3(-0.5,0.60,0.0), 0.03  );\n    \n    \n    res = opU( res, vec2( j, 31.9 ) );\n    res = opU( res, vec2( k, 31.9 ) );\n    res = opU( res, vec2( m, 31.9 ) );\n    res = opU( res, vec2( n, 31.9 ) );\n\n    //right arm\n    j = sdCapsule( pos,vec3(0.3,0.40,-0.0), vec3(0.5,0.50,0.0), 0.05  );\n    k = sdCapsule( pos,vec3(0.5,0.50,-0.0), vec3(0.6,0.55,0.0), 0.03  );\n    m = sdCapsule( pos,vec3(0.5,0.50,-0.0), vec3(0.6,0.45,0.0), 0.03  );\n    n = sdCapsule( pos,vec3(0.5,0.50,-0.0), vec3(0.5,0.60,0.0), 0.03  );\n    \n    \n    res = opU( res, vec2( j, 0.12 ) );\n    res = opU( res, vec2( k, 21.2 ) );\n    res = opU( res, vec2( m, 31.3 ) );\n    res = opU( res, vec2( n, 41.4 ) );\n\n    \n    d = sdSphere( pos-vec3(  -0.08,0.63, 0.27), 0.03 ); //left eye\n    e = sdSphere( pos-vec3(  0.08,0.63, 0.27), 0.03 ); //left eye\n    \n\n        res = opU( res, vec2( d, 0.12 ) );\n    res = opU( res, vec2( e, 21.2 ) );\n\n\n    \n    \n    return res;\n}\n\n\n\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nvec2 castRay( in vec3 ro, in vec3 rd )\n{\n    float tmin = 1.0;\n    float tmax = 20.0;\n    \n#if 0\n    float tp1 = (0.0-ro.y)/rd.y; if( tp1>0.0 ) tmax = min( tmax, tp1 );\n    float tp2 = (1.6-ro.y)/rd.y; if( tp2>0.0 ) { if( ro.y>1.6 ) tmin = max( tmin, tp2 );\n                                                 else           tmax = min( tmax, tp2 ); }\n#endif\n    \n\tfloat precis = 0.002;\n    float t = tmin;\n    float m = -1.0;\n    for( int i=0; i<50; i++ )\n    {\n\t    vec2 res = map( ro+rd*t );\n        if( res.x<precis || t>tmax ) break;\n        t += res.x;\n\t    m = res.y;\n    }\n\n    if( t>tmax ) m=-1.0;\n    return vec2( t, m );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nvec3 calcNormal( in vec3 pos )\n{\n\tvec3 eps = vec3( 0.001, 0.0, 0.0 );\n\tvec3 nor = vec3(\n\t    map(pos+eps.xyy).x - map(pos-eps.xyy).x,\n\t    map(pos+eps.yxy).x - map(pos-eps.yxy).x,\n\t    map(pos+eps.yyx).x - map(pos-eps.yyx).x );\n\treturn normalize(nor);\n}\n\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nvec3 render( in vec3 ro, in vec3 rd )\n{ \n\nvec3 col = vec3(0.0, 0.0, 0.0);\nvec2 res = castRay(ro,rd);    \n    \nfloat t = res.x;\n\n    float m = res.y;\n    if( m>-0.5 )\n    {\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal( pos );\n        vec3 ref = reflect( rd, nor );\n        \n        // material        \n\t\tcol = 0.45 + 0.3*sin( vec3(0.05,0.08,0.10)*(m-1.0) );\n        \n        \n        if( m<1.5 ) \n        {\n            \n            float f = mod( floor(5.0*pos.z) + floor(5.0*pos.x), 2.0);\n            col = 0.4 + 0.1*f*vec3(1.0);\n        }\n        \n        vec3  lig = normalize( vec3(-0.0, 0.3, 0.5) );\n\t\tfloat amb = clamp( 0.5+0.5*nor.y, 0.0, 1.0 );\n        float dif = clamp( dot( nor, lig ), 0.6, 1.0 );\n        \n        amb = amb/4.;\n        col = vec3(0.0,0.6,0.0);\n        col = (col*dif)+amb;\n        \n    }\n    \n    \n    \n    \n    \nreturn vec3( clamp(col,0.0,1.0) );\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nmat3 setCamera( in vec3 ro, in vec3 ta, float cr )\n{\n\tvec3 cw = normalize(ta-ro);\n\tvec3 cp = vec3(sin(cr), cos(cr),0.0);\n\tvec3 cu = normalize( cross(cw,cp) );\n\tvec3 cv = normalize( cross(cu,cw) );\n    return mat3( cu, cv, cw );\n}\n\n\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nvec3 sampleIt(float x, float y)  // don't look in here.\n{\n\n       float outc = 0.0;\n   float outr = 0.0;\nif(y <  0.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  1.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  2.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  3.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  4.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 33.0 ,x)  * step (x, 36.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  5.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 32.0 ,x)  * step (x, 36.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  6.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 31.0 ,x)  * step (x, 36.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  7.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 28.0 ,x)  * step (x, 37.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  8.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 27.0 ,x)  * step (x, 39.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  9.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 26.0 ,x)  * step (x, 35.0 );\n   outr+=  step( 39.0 ,x)  * step (x, 40.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  10.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 25.0 ,x)  * step (x, 27.0 );\n   outc+=  step( 28.0 ,x)  * step (x, 32.0 );\n   outc+=  step( 33.0 ,x)  * step (x, 35.0 );\n   outr+=  step( 36.0 ,x)  * step (x, 43.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  11.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 23.0 ,x)  * step (x, 24.0 );\n   outc+=  step( 25.0 ,x)  * step (x, 36.0 );\n   outr+=  step( 36.0 ,x)  * step (x, 45.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  12.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 21.0 ,x)  * step (x, 23.0 );\n   outc+=  step( 24.0 ,x)  * step (x, 27.0 );\n   outc+=  step( 28.0 ,x)  * step (x, 31.0 );\n   outc+=  step( 32.0 ,x)  * step (x, 36.0 );\n   outr+=  step( 36.0 ,x)  * step (x, 47.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  13.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 20.0 ,x)  * step (x, 23.0 );\n   outc+=  step( 24.0 ,x)  * step (x, 27.0 );\n   outc+=  step( 28.0 ,x)  * step (x, 31.0 );\n   outc+=  step( 32.0 ,x)  * step (x, 36.0 );\n   outr+=  step( 36.0 ,x)  * step (x, 49.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  14.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 19.0 ,x)  * step (x, 22.0 );\n   outc+=  step( 23.0 ,x)  * step (x, 36.0 );\n   outr+=  step( 36.0 ,x)  * step (x, 50.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  15.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 17.0 ,x)  * step (x, 21.0 );\n   outc+=  step( 22.0 ,x)  * step (x, 36.0 );\n   outr+=  step( 36.0 ,x)  * step (x, 51.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  16.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 16.0 ,x)  * step (x, 20.0 );\n   outc+=  step( 21.0 ,x)  * step (x, 36.0 );\n   outr+=  step( 37.0 ,x)  * step (x, 52.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  17.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 15.0 ,x)  * step (x, 19.0 );\n   outc+=  step( 20.0 ,x)  * step (x, 28.0 );\n   outc+=  step( 30.0 ,x)  * step (x, 36.0 );\n   outr+=  step( 40.0 ,x)  * step (x, 53.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  18.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 15.0 ,x)  * step (x, 19.0 );\n   outc+=  step( 20.0 ,x)  * step (x, 37.0 );\n   outr+=  step( 42.0 ,x)  * step (x, 54.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  19.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 14.0 ,x)  * step (x, 19.0 );\n   outc+=  step( 20.0 ,x)  * step (x, 37.0 );\n   outr+=  step( 44.0 ,x)  * step (x, 55.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  20.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 13.0 ,x)  * step (x, 19.0 );\n   outc+=  step( 20.0 ,x)  * step (x, 28.0 );\n   outc+=  step( 29.0 ,x)  * step (x, 37.0 );\n   outr+=  step( 45.0 ,x)  * step (x, 55.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  21.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 13.0 ,x)  * step (x, 19.0 );\n   outc+=  step( 20.0 ,x)  * step (x, 27.0 );\n   outc+=  step( 29.0 ,x)  * step (x, 37.0 );\n   outc+=  step( 38.0 ,x)  * step (x, 40.0 );\n   outr+=  step( 46.0 ,x)  * step (x, 56.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  22.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 12.0 ,x)  * step (x, 19.0 );\n   outc+=  step( 20.0 ,x)  * step (x, 27.0 );\n   outc+=  step( 29.0 ,x)  * step (x, 37.0 );\n   outc+=  step( 38.0 ,x)  * step (x, 43.0 );\n   outr+=  step( 47.0 ,x)  * step (x, 56.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  23.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 12.0 ,x)  * step (x, 20.0 );\n   outc+=  step( 21.0 ,x)  * step (x, 45.0 );\n   outr+=  step( 46.0 ,x)  * step (x, 57.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  24.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 11.0 ,x)  * step (x, 19.0 );\n   outc+=  step( 20.0 ,x)  * step (x, 36.0 );\n   outc+=  step( 37.0 ,x)  * step (x, 43.0 );\n   outr+=  step( 44.0 ,x)  * step (x, 57.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  25.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 11.0 ,x)  * step (x, 18.0 );\n   outc+=  step( 19.0 ,x)  * step (x, 21.0 );\n   outc+=  step( 22.0 ,x)  * step (x, 27.0 );\n   outc+=  step( 29.0 ,x)  * step (x, 35.0 );\n   outc+=  step( 36.0 ,x)  * step (x, 41.0 );\n   outr+=  step( 42.0 ,x)  * step (x, 58.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  26.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 11.0 ,x)  * step (x, 17.0 );\n   outc+=  step( 18.0 ,x)  * step (x, 39.0 );\n   outr+=  step( 41.0 ,x)  * step (x, 58.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  27.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 1.0 ,x)  * step (x, 3.0 );\n   outr+=  step( 10.0 ,x)  * step (x, 16.0 );\n   outc+=  step( 17.0 ,x)  * step (x, 37.0 );\n   outr+=  step( 39.0 ,x)  * step (x, 58.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  28.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 3.0 ,x)  * step (x, 5.0 );\n   outr+=  step( 10.0 ,x)  * step (x, 15.0 );\n   outc+=  step( 16.0 ,x)  * step (x, 35.0 );\n   outr+=  step( 37.0 ,x)  * step (x, 59.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  29.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 4.0 ,x)  * step (x, 7.0 );\n   outr+=  step( 10.0 ,x)  * step (x, 13.0 );\n   outc+=  step( 15.0 ,x)  * step (x, 33.0 );\n   outr+=  step( 35.0 ,x)  * step (x, 50.0 );\n   outr+=  step( 51.0 ,x)  * step (x, 56.0 );\n   outc+=  step( 58.0 ,x)  * step (x, 61.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  30.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 3.0 ,x)  * step (x, 9.0 );\n   outr+=  step( 10.0 ,x)  * step (x, 12.0 );\n   outc+=  step( 13.0 ,x)  * step (x, 32.0 );\n   outr+=  step( 33.0 ,x)  * step (x, 48.0 );\n   outc+=  step( 50.0 ,x)  * step (x, 51.0 );\n   outr+=  step( 53.0 ,x)  * step (x, 54.0 );\n   outc+=  step( 56.0 ,x)  * step (x, 60.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  31.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 1.0 ,x)  * step (x, 11.0 );\n   outc+=  step( 12.0 ,x)  * step (x, 30.0 );\n   outr+=  step( 31.0 ,x)  * step (x, 47.0 );\n   outc+=  step( 48.0 ,x)  * step (x, 52.0 );\n   outc+=  step( 53.0 ,x)  * step (x, 58.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  32.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 4.0 ,x)  * step (x, 28.0 );\n   outr+=  step( 29.0 ,x)  * step (x, 44.0 );\n   outc+=  step( 46.0 ,x)  * step (x, 57.0 );\n   outr+=  step( 58.0 ,x)  * step (x, 59.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  33.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 5.0 ,x)  * step (x, 26.0 );\n   outr+=  step( 27.0 ,x)  * step (x, 43.0 );\n   outc+=  step( 45.0 ,x)  * step (x, 57.0 );\n   outr+=  step( 57.0 ,x)  * step (x, 59.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  34.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 3.0 ,x)  * step (x, 20.0 );\n   outc+=  step( 22.0 ,x)  * step (x, 24.0 );\n   outr+=  step( 25.0 ,x)  * step (x, 41.0 );\n   outc+=  step( 42.0 ,x)  * step (x, 45.0 );\n   outc+=  step( 47.0 ,x)  * step (x, 56.0 );\n   outc+=  step( 57.0 ,x)  * step (x, 58.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  35.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 2.0 ,x)  * step (x, 5.0 );\n   outc+=  step( 6.0 ,x)  * step (x, 18.0 );\n   outr+=  step( 24.0 ,x)  * step (x, 39.0 );\n   outc+=  step( 41.0 ,x)  * step (x, 45.0 );\n   outc+=  step( 46.0 ,x)  * step (x, 61.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  36.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 9.0 ,x)  * step (x, 16.0 );\n   outr+=  step( 21.0 ,x)  * step (x, 37.0 );\n   outc+=  step( 39.0 ,x)  * step (x, 44.0 );\n   outc+=  step( 45.0 ,x)  * step (x, 62.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  37.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 10.0 ,x)  * step (x, 13.0 );\n   outr+=  step( 15.0 ,x)  * step (x, 17.0 );\n   outr+=  step( 20.0 ,x)  * step (x, 35.0 );\n   outc+=  step( 37.0 ,x)  * step (x, 44.0 );\n   outc+=  step( 45.0 ,x)  * step (x, 49.0 );\n   outc+=  step( 51.0 ,x)  * step (x, 57.0 );\n   outr+=  step( 58.0 ,x)  * step (x, 59.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  38.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outc+=  step( 11.0 ,x)  * step (x, 13.0 );\n   outr+=  step( 13.0 ,x)  * step (x, 33.0 );\n   outc+=  step( 35.0 ,x)  * step (x, 44.0 );\n   outc+=  step( 45.0 ,x)  * step (x, 47.0 );\n   outc+=  step( 48.0 ,x)  * step (x, 49.0 );\n   outr+=  step( 52.0 ,x)  * step (x, 54.0 );\n   outc+=  step( 55.0 ,x)  * step (x, 58.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  39.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 10.0 ,x)  * step (x, 11.0 );\n   outc+=  step( 12.0 ,x)  * step (x, 13.0 );\n   outr+=  step( 14.0 ,x)  * step (x, 32.0 );\n   outc+=  step( 33.0 ,x)  * step (x, 50.0 );\n   outr+=  step( 51.0 ,x)  * step (x, 56.0 );\n   outc+=  step( 57.0 ,x)  * step (x, 59.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  40.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 10.0 ,x)  * step (x, 29.0 );\n   outc+=  step( 31.0 ,x)  * step (x, 49.0 );\n   outr+=  step( 50.0 ,x)  * step (x, 57.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  41.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 11.0 ,x)  * step (x, 28.0 );\n   outc+=  step( 29.0 ,x)  * step (x, 49.0 );\n   outr+=  step( 50.0 ,x)  * step (x, 58.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  42.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 11.0 ,x)  * step (x, 26.0 );\n   outc+=  step( 28.0 ,x)  * step (x, 48.0 );\n   outr+=  step( 49.0 ,x)  * step (x, 58.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  43.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 11.0 ,x)  * step (x, 24.0 );\n   outc+=  step( 29.0 ,x)  * step (x, 48.0 );\n   outr+=  step( 49.0 ,x)  * step (x, 57.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  44.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 12.0 ,x)  * step (x, 22.0 );\n   outc+=  step( 28.0 ,x)  * step (x, 30.0 );\n   outc+=  step( 31.0 ,x)  * step (x, 47.0 );\n   outr+=  step( 48.0 ,x)  * step (x, 57.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  45.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 12.0 ,x)  * step (x, 22.0 );\n   outc+=  step( 27.0 ,x)  * step (x, 33.0 );\n   outc+=  step( 35.0 ,x)  * step (x, 46.0 );\n   outr+=  step( 47.0 ,x)  * step (x, 56.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  46.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 13.0 ,x)  * step (x, 23.0 );\n   outc+=  step( 26.0 ,x)  * step (x, 45.0 );\n   outr+=  step( 46.0 ,x)  * step (x, 56.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  47.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 14.0 ,x)  * step (x, 24.0 );\n   outc+=  step( 25.0 ,x)  * step (x, 44.0 );\n   outr+=  step( 45.0 ,x)  * step (x, 55.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  48.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 14.0 ,x)  * step (x, 25.0 );\n   outc+=  step( 27.0 ,x)  * step (x, 42.0 );\n   outr+=  step( 44.0 ,x)  * step (x, 54.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  49.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 15.0 ,x)  * step (x, 27.0 );\n   outc+=  step( 29.0 ,x)  * step (x, 40.0 );\n   outr+=  step( 42.0 ,x)  * step (x, 53.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  50.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 16.0 ,x)  * step (x, 30.0 );\n   outr+=  step( 39.0 ,x)  * step (x, 53.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  51.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 17.0 ,x)  * step (x, 52.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  52.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 18.0 ,x)  * step (x, 51.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  53.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 19.0 ,x)  * step (x, 49.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  54.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 21.0 ,x)  * step (x, 48.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  55.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 22.0 ,x)  * step (x, 46.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  56.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 24.0 ,x)  * step (x, 44.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  57.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 27.0 ,x)  * step (x, 42.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  58.0 ){\n   outc = 0.0;\n   outr = 0.0;\n   outr+=  step( 32.0 ,x)  * step (x, 37.0 );\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  59.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  60.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  61.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  62.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\nif(y <  63.0 ){\n   outc = 0.0;\n   outr = 0.0;\nreturn (vec3(clamp(outr+outc,0.0,1.0),outc,outc));\n  }\n\n\n\n\nreturn (vec3(0.0,0.0,0.0) );\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n    \n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy/iResolution.xy;\n    vec2 p = -1.0+2.0*q;\n\tp.x *= iResolution.x/iResolution.y;\n //   vec2 mo = iMouse.xy/iResolution.xy;\n\t\t \n\tfloat time = 15.0 + iTime;\n\n\t// camera\t\n\tvec3 ro = vec3( -0.0+1.4*sin(0.0 ), 1.0 , 0.0 + 1.4*cos(0.0) );\n\n    float y = 0.4 + cos(4.1*time)/15.0;\n\tvec3 ta = vec3( -0.0, y, 0.0 );\n\t\n\t// camera-to-world transformation\n    mat3 ca = setCamera( ro, ta, 0.0 );\n    \n    // ray direction\n\tvec3 rd = ca * normalize( vec3(p.xy,2.5) );\n\n    // render\t\n    vec3 col;// = vec3(0,0,0);\n    col = render( ro, rd );\n\n\tcol = pow( col, vec3(0.4545) );\n    \n    \n    vec3 crimesAgainstProgramming = sampleIt((128.0*4.0*q.x)-440.5, (128.0*4.0*(1.0-q.y))-430.0);\n    \n    col+= crimesAgainstProgramming;\n    \n     \n\n    fragColor=vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}