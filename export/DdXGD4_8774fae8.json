{"ver":"0.1","info":{"id":"DdXGD4","date":"1666110019","viewed":72,"name":"power of two pixelator","username":"dascandy","description":"pixelates an input with a settable pixelation parameter (tied to time for demo).","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pixelation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//uniform sampler2D iChanneli;\n//uniform vec3 iResolution;\n//uniform float iTime;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float divs = (50.0-iTime) / 5.0;\n    float part = fract(divs);\n    vec2 div1 = pow(vec2(2, 2), vec2(int(divs), int(divs)));\n \n    vec2 coord1 = div1 * floor(fragCoord / div1);\n    vec2 coord2 = vec2(2, 2) * div1 * floor(fragCoord / (div1 * vec2(2, 2)));\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv1 = coord1/iResolution.xy;\n    vec2 uv2 = coord2/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = mix(texture(iChannel0, uv1).rgb, texture(iChannel0, uv2).rgb, part);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n//    fragColor = vec4(mix(coord1, coord2, part), 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}