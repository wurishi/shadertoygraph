{"ver":"0.1","info":{"id":"4s2Bzz","date":"1499178361","viewed":627,"name":"GCD / fraction simplifier","username":"FabriceNeyret2","description":"left:  red/green = simplified fraction Y/X\nright: GCD\nvery right: log(GDC)","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["algorithm","fraction","euclid","gcd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int gcd (int a, int b) {    // Euclid algorithm:   gcd(a,b) = gcd(b, a%b) ; gcd(a,0) = a\n    int c;             \n    while ( b>0 && (c = a%b) != a ) a=b, b=c; \n    return b==0 ? a : c;\n}\n\nint simplify (inout int a, inout int b) { // simplify fraction a/b\n    int v = gcd(a,b);\n    a /= v ; b/= v;\n    return v;\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    int a = int(U.y), b = int(U.x);\n    float H = iResolution.y;\n \n\tif (a < b) \n        O = U.x<H ? float(gcd(b,a))/H * vec4(16,4,1,0) // right: GCD\n                  : log(vec4(gcd(b,a))) *.2;           // very right: log(GDC)\n\n    else {\n        simplify(a,b);\n        O = vec4(a, b, 0, 0)/H;                 // left:  red/green = simplified fraction Y/X\n    }\n    \n}","name":"Image","description":"","type":"image"}]}