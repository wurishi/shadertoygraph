{"ver":"0.1","info":{"id":"dtSGzD","date":"1673627395","viewed":84,"name":"sdf study - genuary 8/23","username":"sleeping","description":"a","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sdf","genuary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float _noise(vec2 uv) {\n    int a = int((15673.+uv.x)*uv.x*14268.)%2753;\n    int b = int((76512.+uv.y)*uv.y*10021.)%1913;\n    return fract(sin(float(a^b)));\n}\n\nfloat _angle(vec3 c, vec2 uv){\n    vec2 p = uv-c.xy;\n    return (\n        sign(p.y)*acos(p.x / length(p))\n        //- _noise(p)*.03\n    );\n}\n\nfloat _discrete(float x) {\n    float k = 2.8;\n    float d = floor(k*pow(x, 1.3))/k;\n    if (\n        false && \n        d < 2.1 \n    ) return x;\n    \n    return (\n        abs(pow(x, 1.3)-d) < 0.25 ?\n        d : \n        x\n    );\n    \n}\nfloat _dist_circle(vec3 c, vec2 uv){\n    float angle = _angle(c, uv);\n    float len = length(uv-c.xy);\n    //if (len < .1) return -42.;\n    return (\n        _discrete(\n            5.0*len\n            - _noise(uv)*.02 *len\n            + abs(sin(3.5*angle+10.*c.z*iTime))\n           // + .03*sin(11.*uv.x*uv.x) + .1*cos(21.*uv.y)\n        )\n    );\n}\n\n\n// colorize resulting discrete distance\nvec3 _colorize(float d){\n    return\n        0.99*vec3((.5+.4*sin(4.*d)))\n       // + -.0*vec3((d))\n       // + 0.*vec3((1.-sign(d))*.2, 0, 0)\n        + 0.5*vec3(\n            0.6+.4*sin(9.*d+1.234),\n            0.2 + .13*cos(3.*d),\n            0.5+.34*cos(3.*d)\n        )\n        ;\n}\n\nfloat _result_dist(vec3[3] circles, vec2 uv){\n    float m = 9999999.99999999;\n    for (int i; i < circles.length(); i++) {\n        float mm = _dist_circle(circles[i], uv) ;\n        if (m > mm)\n            m = mm;\n    }\n    return m;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec3 circles[] = vec3[](\n        vec3(.4, .5+.3*sin(iTime)+.0, .2),\n        vec3(.8, .8*cos(iTime)+.0, .3),\n        vec3(.4*sin(iTime)+1.3, .3, .4)\n    );\n    float d = _result_dist(circles, uv);\n    vec3 col = _colorize(d) - _noise(uv)*.1;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}