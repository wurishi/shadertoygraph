{"ver":"0.1","info":{"id":"7t3XW2","date":"1639782029","viewed":110,"name":"Box frame variations","username":"kastorp","description":"variations on Iq boxframe SDF\nbut my aim was to do this :D https://www.pinterest.it/pin/719942690411881131/ ","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["box","frame"],"hasliked":0,"parentid":"Nst3zS","parentname":"spiral pyramid"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Box frame variations by kastorp\n\n#define edge(v) length(max(vec3(v.x,v.y,v.z),0.0))+min(max(v.x,max(v.y,v.z)),0.0)\n\nfloat boxFrame1( vec3 p, float b, float e, float k )\n{\n  p = abs(p  );\n  vec3 m=step(p,p.zxy)*step(p,p.yzx);\n  p -= b  -m*b*k;\n  vec3 q = abs(p+e)-e;  \n  float d =1e5;\n  d=min(d, edge(vec3(p.x,q.y,q.z)));\n  d=min(d, edge(vec3(q.x,p.y,q.z)));\n  d=min(d, edge(vec3(q.x,q.y,p.z)));\n  return d;\n}\n\n\nfloat boxFrame2( vec3 p, float b, float e , float k)\n{\n  p = abs(p  );\n  vec3  m=step(p.zxy,p)*step(p.yzx,p);  \n    p -= b*((1.-k) +m*.4);\n  vec3 q = abs(p+e )-e;  \n  float d =1e5;\n  if(m.x==0.) d=min(d, edge(vec3(q.x,p.y,p.z)));\n  if(m.y==0.) d=min(d, edge(vec3(p.x,q.y,p.z)));\n  if(m.z==0.) d=min(d, edge(vec3(p.x,p.y,q.z)));\n  return d;\n}\n\nfloat boxFrame3( vec3 p, float b, float e, float k )\n{\n  p = abs(p  );\n  vec3  m=step(p.zxy,p)*step(p.yzx,p);  \n    p -= b*((1.-k) +m*k);\n  vec3 q = abs(p+e )-e;  \n  float d =1e5;\n  if(m.x!=0.) d=min(d, edge(vec3(q.x,p.y,p.z)));\n  if(m.y!=0.) d=min(d, edge(vec3(p.x,q.y,p.z)));\n  if(m.z!=0.) d=min(d, edge(vec3(p.x,p.y,q.z)));\n  return d;\n}\n\nfloat boxFrame4( vec3 p, float b, float e, float k )\n{\n \n  p = abs(p  );\n  vec3 m=step(p,p.zxy)*step(p,p.yzx);\n  p -= b -m*b*(1.-k);   \n  vec3 q = abs(p+e)-e; \n  p-=m*b*(1.-k);\n  float d =1e5;\n  d=min(d, edge(vec3(p.x,q.y,q.z)));\n  d=min(d, edge(vec3(q.x,p.y,q.z)));\n  d=min(d, edge(vec3(q.x,q.y,p.z)));\n  return d;\n}\n\nfloat boxFrame5( vec3 p, float b, float e , float k)\n{\n  p = abs(p  );\n  vec3 m=step(p,p.zxy)*step(p,p.yzx);\n    p -= b  -m*b*k;\n  vec3 q = abs(p+e)-e;  \n  float d =1e5;\n  if(m.x==1.)d=min(d, edge(vec3(q.x,p.y,p.z)));\n  if(m.y==1.)d=min(d, edge(vec3(p.x,q.y,p.z)));\n  if(m.z==1.)d=min(d, edge(vec3(p.x,p.y,q.z)));\n  return d;\n}\nfloat boxFrame6( vec3 p, float b, float e , float k)\n{\n  p = abs(p  );\n  vec3 m=step(p,p.zxy)*step(p,p.yzx);\n    p -= b  -m*b*k;\n  vec3 q = abs(p+e)-e;  \n\n  float d =1e5;\n\n  if(m.x==0.)d=min(d, edge(vec3(q.x,p.y,p.z)));\n  if(m.y==0.)d=min(d, edge(vec3(p.x,q.y,p.z)));\n  if(m.z==0.)d=min(d, edge(vec3(p.x,p.y,q.z)));\n  return d;\n}\n\nfloat boxFrame7( vec3 p, float b, float e , float k)\n{\n  p = abs(p  );\n  vec3  mn=step(p.zxy,p)*step(p.yzx,p),  mx=step(p,p.zxy)*step(p,p.yzx);;\n  p -= b*((1.-k)+mn*k-mx*k);\n  vec3 q = abs(p+e )-e;  \n  float d =1e5;\n  if(mn.x==0.)d=min(d, edge(vec3(p.x,q.y,q.z)));\n  if(mn.y==0.)d=min(d, edge(vec3(q.x,p.y,q.z)));\n  if(mn.z==0.)d=min(d, edge(vec3(q.x,q.y,p.z)));\n  return d;\n}\n\nfloat boxFrame8( vec3 p, float b, float e, float k )\n{\n  p = abs(p  );\n  vec3  m=step(p.zxy,p)*step(p.yzx,p);  \n    p -= b*((1.-k)+m*k);\n  vec3 q = abs(p+e )-e;  \n  float d =1e5;\n  if(m.x==0.) d=min(d, edge(vec3(p.x,q.y,q.z)));\n  if(m.y==0.) d=min(d, edge(vec3(q.x,p.y,q.z)));\n  if(m.z==0.) d=min(d, edge(vec3(q.x,q.y,p.z)));\n  return d;\n}\n\nfloat boxFrame9( vec3 p, float b, float e , float k)\n{\n  p = abs(p  );\n  vec3  mn=step(p.zxy,p)*step(p.yzx,p),  mx=step(p,p.zxy)*step(p,p.yzx);;\n  p -= b*((1.-k) +mn*k-mx*k);\n  vec3 q = abs(p+e )-e;  \n  float d =1e5;\n  if(mn.x==0.)d=min(d, edge(vec3(q.x,p.y,p.z)));\n  if(mn.y==0.)d=min(d, edge(vec3(p.x,q.y,p.z)));\n  if(mn.z==0.)d=min(d, edge(vec3(p.x,p.y,q.z)));\n  return d;\n}\n\nfloat boxFrame10( vec3 p, float b, float e , float k)   \n{\n    p = abs(p  );\n    return .5*(min(min(p.x,p.y),p.z)+max(max(p.x,p.y),p.z) -b);\n}\n\nfloat boxFrame11( vec3 p, float b, float e , float k)   \n{\n    p = abs(p)-b*.8;\n    vec2 a =vec2(.3*sin(iTime));\n    p*=mat3(cos(a.x),sin(a.x),0,-sin(a.x),cos(a.x),0,0,0,1);\n    p*=mat3(1,0,0,0,cos(a.y),sin(a.y),0,-sin(a.y),cos(a.y));\n    return edge(p);\n    \n}\nfloat boxFrame12( vec3 p, float b, float e)\n{\n  p = abs(p  );\n  vec3 m=step(p,p.zxy)*step(p,p.yzx);\n  p -= b  -m*b +e;\n  vec3 q = abs(p+e)-e;  \n  float d =1e5;\n  d=min(d, edge(vec3(p.x,q.y,q.z)));\n  d=min(d, edge(vec3(q.x,p.y,q.z)));\n  d=min(d, edge(vec3(q.x,q.y,p.z)));\n  return d;\n}\nfloat mt=0.;\n#define mmin(a,b,c) (a.x<b ?a:vec2(b,c))\nfloat map(vec3 p) {\n        \n    vec2 d= vec2(p.y,.0); float k=sin(iTime)*.25+.25;\n     d= mmin(d,boxFrame4(p - vec3(0.7,.6,0.7) ,.4,.03,k),1.);\n     d= mmin(d,boxFrame2(p - vec3(-0.7,.6,0.7),.4,.03,k),2.);\n     d= mmin(d,boxFrame3(p - vec3(-0.7,.6,-0.7),.4,.03,k),3.);\n     d= mmin(d,boxFrame1(p - vec3(0.7,.6,-0.7),.4,.03,k),4.);\n     d= mmin(d,boxFrame5(p - vec3(2.1,.6, 0.7),.4,.03,k),5.);\n     d= mmin(d,boxFrame6(p - vec3(2.1,.6,-0.7),.4,.03,k),.6);\n     d= mmin(d,boxFrame7(p - vec3(-2.1,.6, 0.7),.4,.03,k),7);\n     d= mmin(d,boxFrame8(p - vec3(-2.1,.6,-0.7),.4,.03,k),8);\n     mt=d.y;\n    return d.x;\n}\n\nvec3 calcN(vec3 p, float t) {\n\tfloat h = .001 * t;\n\tvec3 n = vec3(0);\n\tfor (int i = min(iFrame, 0); i < 4; i++) {\n\t\tvec3 e = .5773 * (2. * vec3((((i + 3) >> 1) & 1), (i >> 1) & 1, i & 1) - 1.);\n\t\tn += e * map(p + e * h);\n\t}\n\n\treturn normalize(n);\n}\n\nfloat calcShadow(vec3 p, vec3 ld) {\n\tfloat s = 1., t = .05;\n\tfor (float i = 0.; i < 40.; i++)\n\t{\n\t\tfloat h = map(p + ld * t);\n\t\ts = min(s, 15. * h / t);\n\t\tt += h;\n\t\tif (s < .001) break;\n\t}\n\n\treturn clamp(s, 0., 1.);\n}\n\nfloat ao(vec3 p, vec3 n, float h) {\n\treturn map(p + h * n) / h;\n}\n\nvec3 vignette(vec3 c, vec2 fc) {\n\tvec2 q = fc.xy / iResolution.xy;\n\tc *=  1.;//.5 + .5 * pow(16. * q.x * q.y * (1. - q.x) * (1. - q.y), .4);\n\treturn c;\n}\nvec3 getRayDir(vec3 ro, vec3 lookAt, vec2 uv) {\n\tvec3 f = normalize(lookAt - ro),\n\t\t r = normalize(cross(vec3(0, 1, 0), f));\n\treturn normalize(f + r * uv.x + cross(f, r) * uv.y);\n}\n\nvec3 lights(vec3 p, vec3 rd, float d) {\n    vec3 lightDir = normalize( vec3(5.,17.-iMouse.x/iResolution.x*6.,8.) );\n\tvec3 ld = normalize(lightDir*6.5 - p), n = calcN(p, d) ;\n\n\tfloat ao = .1 + .9 * dot(vec3(ao(p, n, .1), ao(p, n, .4), ao(p, n, 2.)), vec3(.2, .3, .5)),\n\tl1 = max(0., .2 + .8 * dot(ld, n)),\n\tl2 = 0.,\n\tspe = max(0., dot(rd, reflect(ld, n))) * .1,\n\n\tfre = smoothstep(.7, 1., 1. + dot(rd, n));\n\n\t// Combine.\n\tl1 *= .1 + .9 * calcShadow(p+.01*n, ld);\n\tvec3 lig = ((l1 + l2) * ao + spe) * vec3(1.) *2.5;\n\treturn mix(.3, .4, fre) * lig;\n}\n\nvec3 march(vec3 ro, vec3 rd) {\n\t// Raymarch.\n\tvec3 p;\n\n\tfloat d = .01;\n\tfor (float i = 0.; i < 120.; i++) {\n\t\tp = ro + rd * d;\n\t\tfloat h = map(p);\n\n\t\tif (abs(h) < .0015)\n\t\t\tbreak;\n\n\t\td += h; // No hit, so keep marching.\n\t}\n    \n\treturn lights(p, rd, d) * exp(-d * .085)*(p.y<0.01? vec3(0.2,0.15,0.2):.5+.5*cos(vec3(2,0,4)+mt*.75));\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fc)\n{\n\t\n    float t=-iTime*.5;\n\tvec3 ro = vec3(3.*cos(t), 2.+3.*iMouse.y/iResolution.y, 3.*sin(t));\n\t\n\tvec2 uv = (fc - .5 * iResolution.xy) / iResolution.y;\n\tfragColor = vec4(vignette(pow(march(ro, getRayDir(ro, vec3(-0.), uv)), vec3(.45)), fc), 0);\n}\n","name":"Image","description":"","type":"image"}]}