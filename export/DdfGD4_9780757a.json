{"ver":"0.1","info":{"id":"DdfGD4","date":"1667484033","viewed":278,"name":"Simple smoke shader","username":"Famousghost","description":"Mouse left button: draw\n\nThis shader was created only for tutorial purpose.\nShader is based on this article: https://gamedevelopment.tutsplus.com/tutorials/how-to-write-a-smoke-shader--cms-25587","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["simplesmokeshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Output to screen\n    fragColor = vec4(texture(iChannel0, uv).rgb,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//--------------------- Link to papers: https://gamedevelopment.tutsplus.com/tutorials/how-to-write-a-smoke-shader--cms-25587 ---------------------//\n\nfloat smokeDiffrentailEquation(vec2 fragCoord)\n{\n    vec3 offset = vec3(1.0f, 1.0f, 0.0f);\n    float left = texture(iChannel0, (fragCoord - offset.xz) / iResolution.xy).r;\n    float right = texture(iChannel0, (fragCoord + offset.xz) / iResolution.xy).r;\n    float top = texture(iChannel0, (fragCoord + offset.zy) / iResolution.xy).r;\n    float bottom = texture(iChannel0, (fragCoord - offset.zy) / iResolution.xy).r;\n    float center = texture(iChannel0, fragCoord / iResolution.xy).r;\n\n    float result = 8.0f * 0.016f * (left + right + bottom * 3.0f + top - 6.0f * center);\n    float minimum = 0.003f;\n    if(result >= -minimum && result < 0.0f)\n    {\n        result = -minimum;\n    }\n    \n    return result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    fragColor.rgb = texture(iChannel0, uv).rgb;\n\n    mouse.x *= ratio;\n    if(iMouse.z > 0.0f)\n    {\n        vec2 newUv = vec2(uv.x * ratio, uv.y);\n        float dist = length(mouse - newUv);\n        if(dist <= 0.06f)\n        {\n            fragColor.rgb += max(0.1f - dist, 0.0f);\n        }\n    }\n    fragColor.rgb += vec3(smokeDiffrentailEquation(fragCoord));\n\n    fragColor.rgb = clamp(fragColor.rgb, 0.0f, 1.0f);\n\n\n}","name":"Buffer A","description":"","type":"buffer"}]}