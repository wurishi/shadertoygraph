{"ver":"0.1","info":{"id":"4lSSRm","date":"1442321848","viewed":218,"name":"cravo-Twister","username":"cravo","description":"Oldskool demo effect, based on a Processing example found on the web (link in the source)","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","pseudo3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Twister, based on http://ddoodm.com/gen/Processing/Twister2.pde\n// main article here: http://ddoodm.com/wordpress/?p=104\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n\tfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    \n\tfloat vamp = 1.0 + 2.0 * sin(iTime);\n    float roto = 2.0 + 2.0 * sin(iTime);\n    \n    float fv = fragCoord.y / iResolution.y;\n    float deg90 = 0.5 * 3.14159;\n    \n    float theta = iTime;\n    float x[4];\n    \n    for (int i = 0; i < 4; i++ )\n    {\n    \tx[i] = 0.5 + 0.25 * sin(vamp * fv + roto + theta + deg90*float(i));\n    }\n    \n    // Line colours\n  \tfloat lum[4];\n  \tfor(int i=0; i<4; i++)\n  \t{       \n    \tfloat len = 0.35+abs( x[i] - x[int(mod(float(i)+1.0,4.0))] );\n    \tlum[i] = 1.0 - len;\n  \t}\n    \n  \t// Transform x[i] to clip coordinates\n  \tfor(int i=0; i<4; i++)\n    {\n    \tx[i] = (x[i] * iResolution.x);    \n    }\n    \n    // Draw\n  \tfor(int i=0; i<4; i++)\n  \t{\n    \tif(x[i] >= x[int(mod(float(i)+1.0,4.0))])  continue;\n\n        if ( fragCoord.x >= x[i] && fragCoord.x < x[int(mod(float(i)+1.0,4.0))] )\n        {   \n            float v = mod(fragCoord.y, 128.0) / 128.0;\n            \n            float dx = x[int(mod(float(i)+1.0,4.0))] - x[i];\n            float u = (fragCoord.x - x[i]) / dx;\n           \n            \n            float c = lum[i];\n            c = c * c;\n            vec3 col = vec3(c,c,c) * texture(iChannel0,vec2(u,v)).xyz;\n            fragColor = vec4(sqrt(col),1.0);\n        }\n  \t}\n}","name":"","description":"","type":"image"}]}