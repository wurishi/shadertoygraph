{"ver":"0.1","info":{"id":"4ljXWt","date":"1484207489","viewed":105,"name":"Rotational","username":"shezard","description":"Repetion is not boring. Or is it ?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mod"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(in vec2 uv) {\n\treturn sin(1.5*uv.x)*sin(1.5*uv.y);\n}\n\nmat2 rotate(in float tau) {\n  \treturn mat2(cos(tau), -sin(tau), sin(tau), cos(tau));   \n}\n\nfloat getCross(in vec2 p) {\n\n    float m = floor(mod(iTime, 8.));\n    \n    p *= rotate(3.14 * m / 8.);\n    \n    float f = floor(length(p * cos(\n        m * atan(p.y,p.x)\n    )));\n    \n    f /= p.x * p.y;\n    \n    return abs(f) / length(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 p = (2. * fragCoord - iResolution.xy ) / iResolution.y;\n    \n    float scale = 5.;\n    \n    p *= scale * 2.;\n    \n    float z = (p.x * p.y + p.x * p.y) / (iResolution.x * iResolution.y) + (iTime * .000125);\n    \n    p *= rotate(iTime * z);\n    \n    float m2 = length(p / 128.);\n    \n    vec2 p2 = p * rotate(iTime * .1) * cos(100.0 * atan(p.y, p.x));\n    \n    float n = 1.0 - noise(p2 * 200.) * .37;\n    \n    float f1 = getCross((cos(p) + 1.) * scale);\n    float f2 = getCross(mod(scale - p, scale * 2.0) - scale);\n    \n    float f = f1 + f2;\n    \n    vec3 c = vec3(1.0, .2 + mod(iTime, 1.0), .6 + mod(iTime, 0.2)) * f * n;\n    \n    c.x *= 2.0;\n    \n    c *= 2.;\n    \n\tfragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}