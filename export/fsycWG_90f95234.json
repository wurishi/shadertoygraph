{"ver":"0.1","info":{"id":"fsycWG","date":"1655793441","viewed":93,"name":"Simple Tree Test","username":"okelly4408","description":"just a simple way to create a tree without a stack/recursion.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["tree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ROT(v, theta) mat2(cos(theta), sin(theta), -sin(theta), cos(theta)) * v\nfloat line_dist(in vec2 a, in vec2 b, in vec2 p )\n{\n    vec2 ba = b-a;\n    vec2 pa = p-a;\n    float h =clamp( dot(pa,ba)/dot(ba,ba), .0, 1. );\n    return length(pa-h*ba);\n}\nfloat draw_branch(vec2 r, vec2 dir, float angle, vec2 uv) {\n    vec2 b_1 = ROT(dir+r, angle);\n    float ld_1 = line_dist(r, b_1, uv);\n    vec2 b_2 = ROT(dir+r, -angle);\n    float ld_2 = line_dist(r, b_2, uv);\n    return min(ld_1, ld_2);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord/iResolution.xy) - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n    float th = (iTime+26.) * .5;\n    vec2 a = vec2(.0, -.75);\n    vec2 b = vec2(.0, -.073);\n    float ln = line_dist(a, b, uv);\n    vec4[63] branches;\n    branches[0] = vec4((b - a)/1.618, b);\n    ln = min(ln, draw_branch(branches[0].zw, branches[0].xy, th, uv));\n    float s = 1.;\n    int back_indx = 0;\n    float n = 1.;\n    float jj = 1.;\n    for (int j = 1; j < 127; j++, jj++) {\n        back_indx = (1 - j%2)*((j / 2) - 1) + ((j % 2)*((j - 1) / 2));\n        vec4 prev = branches[back_indx];\n        vec2 p_i = prev.zw;\n        float l_i = length(prev.xy);\n        vec2 p_j = ROT(prev.xy + p_i, th * s);\n        vec2 d_j = (p_j - p_i)/1.618;\n        float ln_i =  draw_branch(p_j, d_j, th, uv);\n       // n = (((sign(ln_i - ln) + 1.)*n) + ((sign(ln - ln_i) + 1.)*jj))/2.;\n        if (ln > ln_i){ n = jj; ln = ln_i;}\n      //  ln = min(ln, ln_i);\n        if (j < 63)\n            branches[j] = vec4(d_j, p_j);\n        s *= -1.;\n    }\n    n = floor(log2(n))/12.;\n    vec3 col_ln = .6 + .5*cos(6.28318*(n+vec3(.0,.33,.67)) );\n    fragColor = vec4( mix(vec3(.0), col_ln, 1.-smoothstep(.0, .02, ln)), 1.);\n}","name":"Image","description":"","type":"image"}]}