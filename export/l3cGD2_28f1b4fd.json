{"ver":"0.1","info":{"id":"l3cGD2","date":"1717015723","viewed":59,"name":"fishscales","username":"snflwrfld","description":"quick voronoise experiment","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorful","voronoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 h23 (vec2 p) {\n    return vec3 (\n        fract(sin(dot(vec2(6584.456,8647.263),p)+653.12)),     //x\n        fract(cos(dot(vec2(3712.456,6447.263),p.yx)+6253.12)), //y\n        fract(cos(dot(vec2(7122.456,3267.263),p.xy)+3257.12))  //frequency\n    )-vec3(.5,.5,-.5);\n}\n\n\nvec2 floatingDot( vec2 iuv, float t) {\n    t+= 100.;\n    vec3 h =h23(iuv);\n    vec2 offset = .7*vec2(h.x,1.)*vec2(cos(t*h.z), sin(t*h.z));\n    offset = vec2(offset.x+offset.y, offset.x-offset.y);\n\n    return vec2(.5)+ offset;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv*2. - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv *= 10.;\n    float t = iTime*.5;\n\n    vec2 iuv = floor(uv);\n    vec2 fuv = fract(uv);\n\n    float d = 10.;\n    vec3 cellColor;\n    for (int i=-1 ; i <=1 ; i++) {\n        for(int j=-1 ; j<=1 ; j++) {\n            vec2 off = vec2(float(i),float(j));\n            vec2 p = off + floatingDot(off+iuv,t);\n            if (length(fuv - p) < d) {\n                d = length(fuv - p);\n                cellColor = h23(off+iuv).zxy;\n                cellColor += vec3(.07*length(off+iuv - vec2(0.)));\n            }\n            //d= min(d, length(fuv - p));\n        }\n    }\n    //d = length(fuv - floatingDot(iuv,t));\n    \n    vec3 col_offset = vec3(\n        .25 + .1*sin(t+1.),\n        .15 + .05*sin(t+3.),\n        .3 + .15*sin(t+2.)\n    );\n\n    vec3 col = vec3(pow(cellColor+col_offset, vec3(.84) )).yzx;\n    col *= mix(.94, 1., step(.2/2.,mod(d,.2)));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}