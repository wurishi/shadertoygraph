{"ver":"0.1","info":{"id":"MdV3Dm","date":"1454924128","viewed":429,"name":"Puzzle generator One Big Map","username":"Emil","description":"The same as the other one I made but just one big map with start in the center\ncheck for more info:https://www.shadertoy.com/view/lsGGDm","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["2d","game","map","generator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 cs = vec4(0.1,0.1,0.0,1.0); // color startPosition\nvec4 ch = vec4(0.1,0.0,0.0,0.0); // color horizontal\nvec4 cv = vec4(0.0,0.1,0.0,0.0); // color vertical\nvec4 chv = vec4(0.1,0.1,0.0,0.0);//ch+cv; // color horizontal and vertical\nvec4 nothing = vec4(0.0,0.0,0.0,0.0); // color empty\nvec4 rock = vec4(0.0,0.0,0.1,0.0); // color rock\n\nvec2 roomSize = vec2(16.0,9.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if(iMouse.z > 0.0){\n        \n        uv *= 0.2;\n        uv += iMouse.xy*.001;\n    }\n    //uv *= 0.1;\n\tvec4 val = texture(iChannel0, uv);\n    \n    fragColor = vec4(0.0,0.0,0.0,1.0);\n    \n    if(val == chv || val == ch || val == cv){\n        fragColor += vec4(0.3,0.2,0.0,1.0);\n    }\n    fragColor += vec4(val.b*10.0); // rocks\n    if(val.rg==vec2(0.1,0.1)){\n        fragColor.r -= 0.0;\n    } else if(val.r == 0.1){\n        fragColor.g += 0.2;\n    } else if(val.g == 0.1){\n        fragColor.b += 0.6;\n        fragColor.g += 0.3;\n    }\n    fragColor = val==cs?vec4(1.0,0.0,0.0,1.0):fragColor*0.6;\n\t\n    //fragColor = val*5.0;\n    /*\n    fragColor += 10.0*vec4(val.b,val.b*0.5,val.b,0.0); // rocks\n    fragColor.r += val.r*8.0;\n    fragColor.g += val.g*8.0;\n\t*/\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 cs = vec4(0.1,0.1,0.0,1.0); // color startPosition\nvec4 ch = vec4(0.1,0.0,0.0,0.0); // color horizontal\nvec4 cv = vec4(0.0,0.1,0.0,0.0); // color vertical\nvec4 chv = vec4(0.1,0.1,0.0,0.0);//ch+cv; // color horizontal and vertical\nvec4 nothing = vec4(0.0,0.0,0.0,0.0); // color empty\nvec4 rock = vec4(0.0,0.0,0.1,0.0); // color rock\n\nvec2 roomSize = vec2(16.0,9.0);\n\nfloat random()\n{\n\treturn fract(sin(dot(gl_FragCoord.xy, vec2(12.9898,78.233))) * 43758.5453);  \n}\n\nvec2 cellrandom(vec2 xy)\n{\n    return vec2((fract(sin(dot(xy, vec2(12.9898,78.233))) * 43758.5453)-0.5)*2.0,(fract(sin(dot(xy, vec2(156.561,3651.685))) * 65132.6516)-0.5)*2.0);\n}\n\nvec4 get_pixel(float x_offset, float y_offset)\n{\n\treturn texture(iChannel0, (gl_FragCoord.xy / iResolution.xy) + (vec2(x_offset, y_offset) / iResolution.xy));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 currentPixel = get_pixel(0.0, 0.0);\n    vec4 rp = get_pixel(-1.0,0.0);\n    vec4 lp = get_pixel(1.0,0.0);\n    vec4 dp = get_pixel(0.0,-1.0);\n    vec4 up = get_pixel(0.0,1.0);\n    vec4 newPixel = currentPixel;\n    \n    float cellx = floor(gl_FragCoord.x) - floor(mod(gl_FragCoord.x,roomSize.x));\n    float celly = floor(gl_FragCoord.y) - floor(mod(gl_FragCoord.y,roomSize.y));\n\tvec2 startPosition = cellrandom(vec2(cellx,celly));\n    float cellRandom = startPosition.x;\n    // placing startpositions    \n    /*\n    if(floor(mod(gl_FragCoord.x,roomSize.x))==floor((roomSize.x*.5)+(roomSize.x*0.5-1.0)*startPosition.x)){\n        if(floor(mod(gl_FragCoord.y,roomSize.y))==floor((roomSize.y*.5)+(roomSize.y*0.5-1.0)*startPosition.y)){\n        \tnewPixel = cs;\n        }\n    }\n\t*/\n\t\n    if(floor(gl_FragCoord.x)==floor(iResolution.x*.5)){\n        if(floor(gl_FragCoord.y)==floor(iResolution.y*.5)){\n        \tnewPixel = cs;\n        }\n    }\n\t\n    //placing walls\n    //newPixel = mod(gl_FragCoord.x,roomSize.x)<=1.0?rock:mod(gl_FragCoord.y,roomSize.y)<=1.0?rock:newPixel;\n    \n    \n    //if(mod(float(iFrame),40.0)==0.0||gl_FragCoord.x>=iResolution.x*0.5){\n        if(currentPixel.b == nothing.b){ // \"untouched\" pixel\n\n            // check horizontal and vertical\n            if(currentPixel.r == nothing.r){\n                if(rp!=rock){\n                \tnewPixel += rp.r==ch.r?ch:newPixel; // right\n                }\n                if(lp!=rock){\n                \tnewPixel += lp.r==ch.r?ch:newPixel; // left\n                }\n            }\n            if(currentPixel.g == nothing.g){\n                if(dp!=rock){\n                \tnewPixel += dp.g==cv.g?cv:newPixel; // down\n                }\n            \tif(up!=rock){\n                \tnewPixel += up.g==cv.g?cv:newPixel; // up\n                }\n            }\n        }\n        newPixel.r = clamp(newPixel.r,0.0,0.1);\n        newPixel.g = clamp(newPixel.g,0.0,0.1);\n\n        if(currentPixel==nothing&&newPixel!=nothing){ // we are \"traveling\" ontop of this pixel\n\n            // place rocks\n            if(random()>0.8+0.1*cellRandom){\n                newPixel = rock;\n            }\n        }\n\n        if(currentPixel!=nothing&&newPixel!=nothing){ // we are on stuff that isn't nothing\n\n            if(currentPixel.b!=rock.b){ // not interested of checking on top of rocks\n                \n                if(rp.b==rock.b){ // rock to the right\n                    if(currentPixel.r==0.1){\n                    \tnewPixel.rg = chv.rg;\n                    }\n                }\n                if(lp.b==rock.b){ // rock to the left\n                    if(currentPixel.r==0.1){\n                    \tnewPixel.rg = chv.rg;\n                    }\n                }\n                if(up.b==rock.b){ // rock above\n                    if(currentPixel.g==0.1){\n                    \tnewPixel.rg = chv.rg;\n                    }\n                }\n                if(dp.b==rock.b){ // rock below\n                    if(currentPixel.g==0.1){\n                    \tnewPixel.rg = chv.rg;\n                    }\n                }\n\t\t\t\t\n            }\n\n            if(newPixel.b==rock.b){ // if we placed a rock then make sure we dont travel \"through\" it\n                newPixel.rg = nothing.rg;\n            }\n        }\n    //}\n    \n    fragColor = newPixel;\n}","name":"Buf A","description":"","type":"buffer"}]}