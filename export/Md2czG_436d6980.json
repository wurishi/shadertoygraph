{"ver":"0.1","info":{"id":"Md2czG","date":"1492630897","viewed":886,"name":"new glsl bug : texture() in loop","username":"FabriceNeyret2","description":"windows/Angles tries very ugly things to guess MIPmap level. Extra code generation is overwhelmed on not-unrollable loops. -> use explicite level via texelFetch or texture LOD.\n","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["glsl","bug","webgl2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// original buggy case : https://www.shadertoy.com/view/4djyzy\n// Trying here to design a simpler case.\n\n\n#define tex(ch,x,y) texture( ch, vec2(x,y)/iResolution.xy ) // implicit MIPmap level\n//#define tex(ch,x,y)  texelFetch( ch, ivec2(x,y), 0 )      // explicit MIPmap level\n\nvec2 cmul (vec2 a,float b) { return mat2(a,-a.y,a.x)*vec2(cos(b), sin(b)); } \n\nvoid mainImage( out vec4 O, vec2 uv )\n{\n    O-=O; \n    \n    float N =  floor(iResolution.x/2.);   \n    vec2 x,y,z;\n    \n    if ( max(uv.x,uv.y) > 30. ) N /= 4.;\n        \n    for(float n = 0.; n < N; n++)  {           // not unrollable loop\n        x = tex(iChannel0, uv.x+n, uv.y).xy,   // windows/Angle compiler dies trying to guess MIPmap level\n        y = tex(iChannel0, uv.x+n, uv.y+n).xy,  \n        z = tex(iChannel0, uv.x  , uv.y+n).xy;  \n        O.xy += cmul(x,n);\n        O.zw += cmul(y,n);\n        O.xz += cmul(x,n/2.);\n    }\n    \n    O = O/N + vec4(x,y);\n}\n","name":"Image","description":"","type":"image"}]}