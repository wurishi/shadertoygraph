{"ver":"0.1","info":{"id":"tltyWf","date":"1610096151","viewed":77,"name":"Magic Poker Chip","username":"mherreshoff","description":"Uses the wave equation + a tweak to neighborhood structure to create contention over radial symetry.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["radial","symmetry","laplacian","poker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define hue(v) ( .6 + .6 * cos( 2.*PI*(v) + vec4(0,-2.*PI/3.,2.*PI/3.,0)))\nvoid mainImage(out vec4 O, in vec2 U) {\n    vec2 R = iResolution.xy, pw = 1./R;\n    vec2 uv = U*pw, z = (U-R*.5)/R.y;\n    vec4 t = texture(iChannel0, uv);\n    vec3 color;\n    O = mix(mix(hue(0.), vec4(1.),smoothstep(.4, .6, t.x)), hue(.2)*.3*t.x,\n     smoothstep(.22, .23, length(z)));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159\n#define CS(a) vec2(cos(a), sin(a))\nvec2 toPolar(vec2 v) {\n    return vec2(length(v), atan(v.y, v.x));\n}\nvec2 fromPolar(vec2 v) {\n    return v.x*CS(v.y);\n}\n\nvec2 cmul(vec2 a, vec2 b) {\n    return mat2(a,-a.y,a.x)*b;\n}\n\nfloat q(float x) {\n  if (abs(x) > .5) return x;\n  return .0;\n}\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec3 o = vec3(1,0,-1);\n    vec2 R = iResolution.xy, pw = 1./R;\n    vec2 uv = U*pw, z = (U-R*.5)/R.y;\n#define F(v) texture(iChannel0, uv+pw*v)\n#define TEX(w) ((w)*R.y+.5*R)*pw\n    vec4 t = F(o.yy);\n    vec4 lap = -F(o.xx)-F(o.xy)-F(o.xz)-F(o.yx)-F(o.yz)-F(o.zx)-F(o.zy)-F(o.zz);\n    float neighbors = 8.; lap*=2.; neighbors*=2.;\n    float ang = PI/2.*(1.-smoothstep(0., .5, length(z)));\n    lap -= texture(iChannel0, TEX(cmul(CS(ang), z)));\n    lap -= texture(iChannel0, TEX(cmul(CS(-ang), z)));\n    neighbors += 2.;\n    lap += neighbors*F(o.yy);\n    lap /= neighbors;\n    float dt = .2;\n    vec2 dVdt = vec2(t.y-lap.x, -lap.x);\n    dVdt.x += 3.*(1.-smoothstep(0.,0.05, length(z-vec2(0,.14))))*(sin(float(iFrame)/30.));\n    O.xy = t.xy + dt*dVdt;\n    if (iFrame < 10) O = vec4(texture(iChannel1, uv).x,0,0,0);\n}","name":"Buffer A","description":"","type":"buffer"}]}