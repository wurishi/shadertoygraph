{"ver":"0.1","info":{"id":"ssSSWV","date":"1621016088","viewed":79,"name":"2D Planetary Rings","username":"OceanJeff48","description":"2D Planetary Rings inspired by No Man's Sky (Hello Games), and 'target with smoothstep' by possum, https://www.shadertoy.com/view/Xsl3RX","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","rings"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N11(float p)                                                                        \n{                                                                                         \n   p = fract(sin(p * 813.552) * 34.5f);                                                   \n   p += dot(p, p + 24.2);                                                                 \n   return fract(p);                                                                       \n}                                                                                         \n\nconst float rings = 25.0;\t//exactly the number of complete white rings at any moment.\nconst float velocity=4.;\t\nconst float b = 0.003;\t\t//size of the smoothed border\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position = fragCoord.xy/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n\tposition.x *= aspect;\n\tfloat dist = distance(position, vec2(aspect*0.5, 0.5));\n\tfloat offset=iTime*velocity;\n\tfloat conv=rings*4.;\n\tfloat v=dist*conv-offset;\n\tfloat ringr=floor(v) + N11(floor(v) + 174.321);\n\tfloat color=smoothstep(-b, b, abs(dist- (ringr+float(fract(v)>0.5)+offset)/conv));\n\tif(mod(ringr,2.)==1.)\n\t\tcolor=1.-color;\n\tfragColor = vec4(vec3(color) * N11(ringr), 1.);\n}\n","name":"Image","description":"","type":"image"}]}