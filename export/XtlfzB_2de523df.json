{"ver":"0.1","info":{"id":"XtlfzB","date":"1512517741","viewed":299,"name":"clouds in pink sky","username":"aadebdeb","description":"clouds in pink sky\n","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["cloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 sundir = normalize(vec3(0.75, 0.21, -0.06));\n\nfloat hash(vec3 x) {\n\treturn fract(cos(dot(x, vec3(73.51, 27.13, -36.32))) * 3459.43) * 2.0 - 1.0;\n}\n\nfloat noise(vec3 x) {\n\tvec3 s = floor(x);\n    vec3 t = fract(x);\n    \n    vec3 u = t * t * (3.0 - 2.0 * t);\n    \n\tfloat a = hash(s + vec3(0.0, 0.0, 0.0));\n\tfloat b = hash(s + vec3(1.0, 0.0, 0.0));\n\tfloat c = hash(s + vec3(0.0, 1.0, 0.0));\n\tfloat d = hash(s + vec3(1.0, 1.0, 0.0));\n\tfloat e = hash(s + vec3(0.0, 0.0, 1.0));\n\tfloat f = hash(s + vec3(1.0, 0.0, 1.0));\n\tfloat g = hash(s + vec3(0.0, 1.0, 1.0));\n\tfloat h = hash(s + vec3(1.0, 1.0, 1.0));\n    \n    return mix(mix(mix(a, b, u.x), mix(c, d, u.x), u.y), \n               \tmix(mix(e, f, u.x), mix(g, h, u.x), u.y), u.z);\n    \n}\n\nfloat fbm(vec3 x) {\n    \n    float v = 0.0;\n    float a = 1.0;\n    for (int i = 0; i < 5; i++) {\n   \t\tv += a * noise(x);\n        a *= 0.5;\n        x *= 2.0;\n        x += 30.0;\n   \t}\n    return v;\n}\n\nfloat density(vec3 p) {\n    return clamp(-p.y * 0.1 + 3.0 * fbm(p * 0.05 + 100.0 + iTime * 0.04), 0.0, 1.0);\n}\n\nvec4 map(vec3 p) {\n\tfloat d = density(p);\n    vec3 c = mix(vec3(0.75), vec3(1.0), d);\n    return vec4(c, d);\n}\n\nvec3 background(vec3 rd) {\n\tvec3 c =  mix(vec3(0.92, 0.89, 0.67), vec3(0.56, 0.15, 0.11), clamp(rd.y * 0.5 + 0.5, 0.0, 1.0));\n\tc += 0.3 * vec3(0.95, 0.72, 0.56) * pow(clamp(dot(rd, sundir), 0.0, 1.0), 4.0);\n    return c;\n}\n\nfloat shadow(vec3 ro, vec3 rd) {\n    float t = 0.0;\n    float sum = 0.0;\n    for (int i = 0; i < 3; i++) {\n   \t\tvec3 p = ro + t * rd;\n        sum += density(p);\n        t += 1.0;\n    }\n    return clamp(sum / 3.0, 0.0, 1.0);\n}\n\nvec3 render(vec3 ro, vec3 rd) {\n    \n    float t = 0.0;\n    vec4 sum = vec4(0.0);\n    for (int i = 0; i < 30; i++) {\n    \tif (sum.a > 0.99) break;\n        vec3 p = ro + t * rd;\n    \tvec4 res = map(p);\n        float sh = shadow(p, sundir);\n        vec3 c = res.rgb;\n        vec3 lin = vec3(0.0);\n        lin +=  0.7 * mix(vec3(1.53, 1.21, 1.01), vec3(0.82, 0.75, 0.62), shadow(p, sundir));\n        lin += 0.3 * mix(vec3(1.4, 1.31, 1.07), vec3(0.83, 0.67, 0.72), shadow(p, vec3(0.0, 1.0, 0.0)));\n        c *= lin;\n        res.a *= 0.7;\n        float a = (1.0 - sum.a) * res.a;\n        sum += vec4(c * a, a);\n        t += 4.0;\n    }\n    vec3 col = sum.rgb;\n    \n    col = mix(col, background(rd), 1.0 - pow(sum.a, 2.2));\n    col += 0.15 * vec3(0.94, 0.32, 0.15) * pow(clamp(dot(rd, sundir), 0.0, 1.0), 32.0);\n    \n    col = sqrt(col);\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 m = 3.14 * (iMouse.xy * 2.0 - iResolution.xy) / iResolution.xy;\n    \n    vec3 ro = vec3(0.0, 2.2, 0.0);\n    vec3 ta = vec3(5.0 * cos(m.x), 1.8, 5.0 * sin(m.x));\n    vec3 nz = normalize(ta - ro);\n    vec3 nx = cross(nz, vec3(0.0, 1.0, 0.0));\n    vec3 ny = cross(nx, nz);\n    vec3 rd = normalize(nx * st.x + ny * st.y + nz * 1.0);\n    \n    vec3 col = render(ro, rd);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}