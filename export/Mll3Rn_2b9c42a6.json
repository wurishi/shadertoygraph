{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//Energy Decelerator by eiffie\r\n\r\n//Comment these defines to see pretty red lines everywhere!\r\n#define time iTime\r\n#define size iResolution\r\n\r\nbool bColoring=false;\r\nvec3 mcol;\r\nvec2 fragCoord;\r\n\r\nconst vec4 scale=vec4(-3.12,-3.12,-3.12,3.12);\r\nvec2 DE(in vec3 z0){//amazing box by tglad \r\n\tvec4 z = vec4(z0,1.0),p0=vec4(1.0,1.19+sin(time*3.0+sign(z0.x+0.54)+2.0*sign(z0.z-0.47))*0.25,-1.0,0.0);\r\n\tfloat dL;\r\n\tfor (int n = 0; n < 3; n++) {\r\n\t\tz.xyz=clamp(z.xyz, -0.94, 0.94)*2.0-z.xyz;\r\n\t\tz*=scale/clamp(dot(z.xyz,z.xyz),0.25,1.0);\r\n\t\tif(n==0)dL=max(0.0,(length(z.xyz+vec3(0.0,5.8,2.2))-0.6)/z.w);\r\n\t\tz+=p0;\r\n\t}\r\n\tif(bColoring)mcol+=z.xyz;\r\n\tz.y+=3.0;\r\n\tfloat dS=(length(max(abs(z.xyz)-vec3(1.2,49.0,1.4),0.0))-0.06)/z.w;\r\n\treturn vec2(dS,dL);\r\n}\r\n\r\nfloat rndStart(vec2 co){return 0.5+0.5*fract(sin(dot(co,vec2(123.42,117.853)))*412.453);}\r\nfloat ShadAO(vec3 ro, vec3 rd, float px, float dist){//pretty much IQ's SoftShadow\r\n\tfloat res=1.0,d,t=4.0*px*rndStart(fragCoord.xy);\r\n\tfor(int i=0;i<12;i++){\r\n\t\td=max(0.0,DE(ro+rd*t).x)+0.01;\r\n\t\tif(t+d>dist)break;\r\n\t\tres=min(res,2.0*d/t);\r\n\t\tt+=d;\r\n\t}\r\n\treturn res;\r\n}\r\nmat3 lookat(vec3 fw,vec3 up){\r\n\tfw=normalize(fw);vec3 rt=normalize(cross(fw,up));return mat3(rt,cross(rt,fw),fw);\r\n}\r\nconst vec3 light_col=vec3(1.0,0.7,0.4);\r\nvec3 Light(vec3 so, vec3 rd, float px, float dist){\r\n\tso+=rd*(dist-px);\r\n\tbColoring=true;//take color samples\r\n\tmcol=vec3(0.0);\r\n\tvec2 d=DE(so);\r\n\tvec2 v=vec2(px,0.0);//px is really pixelSize*t\r\n\tvec3 dn=vec3(DE(so-v.xyy).x,DE(so-v.yxy).x,DE(so-v.yyx).x);\r\n\tvec3 dp=vec3(DE(so+v.xyy).x,DE(so+v.yxy).x,DE(so+v.yyx).x);\r\n\tvec3 norm=(dp-dn)/(length(dp-vec3(d.x))+length(vec3(d.x)-dn));\t\r\n\tbColoring=false;\r\n\tmcol=vec3(0.9)+sin(mcol)*0.1;\r\n\tv=vec2(d.y,0.0);\r\n\tvec3 light_dir=-normalize(vec3(-d.y)+vec3(DE(so+v.xyy).y,DE(so+v.yxy).y-d.y,DE(so+v.yyx).y));\r\n\tfloat shad=ShadAO(so,light_dir,px,d.y*0.5);\r\n\tfloat dif=dot(norm,light_dir)*0.5+0.5;\r\n\tfloat spec=dot(light_dir,reflect(rd,norm));\r\n\tvec3 diffuse_col=mcol+vec3(0.12,0.05,-0.125)*spec;\r\n\tdif=min(dif,shad);\r\n\tspec=min(max(0.0,spec),shad);\r\n\tvec3 col=diffuse_col*dif+light_col*spec;\r\n\tcol*=exp(-d.y);\r\n\treturn col*clamp(abs(so.y-1.0)*5.0,0.0,1.0);\r\n}\r\nfloat hash( float n ){return fract(sin(n)*43758.5453);}\r\nfloat hash( vec2 n ){return fract(sin(dot(n*0.123,vec2(78.233,113.16)))*43758.351);}\r\nfloat noise(in float p){\r\n\tfloat c=floor(p),h1=hash(c);\r\n\treturn h1+(hash(c+1.0)-h1)*fract(p);\r\n}\r\nfloat noise(in vec2 p){\r\n\tvec2 c=floor(p),f=fract(p),v=vec2(1.0,0.0);\r\n\tfloat h1=hash(c),h2=hash(c+v),h3=hash(c+v.yx),h4=hash(c+v.xx);\r\n\th1+=(h2-h1)*f.x;h3+=(h4-h3)*f.x;\r\n\treturn h1+(h3-h1)*f.y;\r\n}\r\nvoid mainImage( out vec4 fragColor, in vec2 iFragCoord ){\r\n        fragCoord = iFragCoord;\r\n\tfloat zoom=1.5,px=2.25/(size.y*zoom);//find the pixel size, then exagerate :)\r\n\tfloat tim=time;\r\n\t\r\n\t//position camera\r\n\tvec3 ro=vec3(cos(tim*0.17),0.0,sin(tim*0.05));\r\n\tro.z=1.0+ro.z*abs(ro.z);\r\n\tfloat tm=abs(mod(tim,60.0)-30.0)/30.0;\r\n\tro.xz*=vec2(1.0+time*0.01,1.5)-vec2(tm*tm*10.0);\r\n\tro.x=-0.64+ro.x/(1.0+ro.z*ro.z*0.1);\r\n\ttm=0.0;\r\n\tvec3 rd=normalize(vec3((2.0*fragCoord.xy-size.xy)/size.y,zoom));\r\n\trd=lookat(vec3(sin(tim*0.6),sin(tim*0.4),-0.5)-ro,vec3(0.01,0.99,0.02))*rd;\r\n\t\r\n\t//march\r\n\tfloat t=DE(ro).x*rndStart(fragCoord.xy),tt=t,dm=100.0,od=1000.0,de=0.0,te=0.0;\r\n\tfloat ft=(sign(rd.y)-ro.y)/rd.y,ref=1.0,dR=clamp(DE(ro+rd*ft).x*15.0,0.0,1.0);\r\n\tfloat maxT=min((sign(rd.x)*4.0-ro.x)/rd.x,(sign(rd.z)*4.0-ro.z)/rd.z);\r\n\tfloat liteGlow=0.0,mask=1.0;\r\n\tvec2 d;\r\n\tfor(int i=0;i<64;i++){//my most f'd up ray march ever! i miss t+=d=DE(ro+rd*t);\r\n\t\td=DE(ro+rd*t)*0.95;\r\n\t\tliteGlow+=mask/(1.0+1000.0*d.y*d.y);\r\n\t\tt+=d.x;tt+=d.x;\r\n\t\tif(t>ft){\r\n\t\t\tro+=rd*ft;\r\n\t\t\tt=t-ft;//the overshoot\r\n\t\t\tif(tt-t<maxT){//hit floor/ceiling\r\n\t\t\t\tvec2 p=mod(2.0*vec2(ro.x+ro.z,ro.x-ro.z),2.0)-1.0;\r\n\t\t\t\tfloat tile=sign(p.x*p.y);\r\n\t\t\t\tp=abs(fract(p)-0.5);\r\n\t\t\t\tmask=max(0.0,mask-pow(2.0*max(p.x,p.y),10.0));\r\n\t\t\t\tref*=0.75;\r\n\t\t\t\tif(tile>0.0){\r\n\t\t\t\t\trd.y=-rd.y;rd.xz+=fract(rd.zx*1252.1123)*0.006;\r\n\t\t\t\t\tft=(sign(rd.y)-ro.y)/rd.y;\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttt+=1000.0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{//hit wall\r\n\t\t\t\tt=maxT-tt+t;\r\n\t\t\t\tro+=rd*t;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}else if(d.x>od && te==0.0){//save first edge\r\n\t\t\tif(od<px*tt){\r\n\t\t\t\tde=od;\r\n\t\t\t\tte=tt-d.x-od;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(d.x<dm){dm=d.x;tm=tt-d.x;}//save max occluder\r\n\t\tod=d.x;\r\n\t\tif(tt>maxT){//hit a wall\r\n\t\t\tt-=tt-maxT;\r\n\t\t\tro=ro+rd*t;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(d.x<0.00001)break;//hit the fractal\r\n\t}\r\n\t\r\n\t//color\r\n\tvec3 col=vec3(0.0);\r\n\t\r\n\tif(tt<1000.0 && tt>=maxT){//wall\r\n\t\tvec3 r2=ro;\r\n\t\tif(abs(r2.z)>abs(r2.x)){\r\n\t\t\tr2.xz=r2.zx;\r\n\t\t\tod=max(abs(r2.z+1.0)-0.3,abs(r2.y*8.0+1.9)-5.8);\r\n\t\t}else{\r\n\t\t\tod=max(abs(r2.z-1.0)-0.5,abs(r2.y*4.0)-1.0);\r\n\t\t}\r\n\t\tfloat d1=noise(r2.yz*70.0);\r\n\t\tr2.y*=4.0;\r\n\t\t\r\n\t\tfloat d2=pow(1.0-clamp(abs(sin(time*10.0+r2.z*150.0*sin(time))+r2.y*1.2),0.0,1.0),10.0);\r\n\t\tr2.y+=0.5;\r\n\t\tr2.z+=floor(mod(r2.y+0.5,2.0))*0.25;\r\n\t\tcol=vec3(0.2,0.15,0.1)*(1.0-0.5*exp(-200.0*abs((fract(r2.z*2.0)-0.5)*(fract(r2.y)-0.5))));\r\n\t\tcol-=d1*vec3(0.1,0.05,0.0);\r\n\t\tcol=mix(vec3(0.5+0.5*rd.x,d2,1.0)*clamp(abs(od*2.0),0.0,0.5),col,clamp(od*10.0,0.0,1.0));\r\n\t}else if(tt>1000.0){//floor\r\n\t\ttt-=1000.0;col=vec3(0.3);\r\n\t\tdR=min(dR,4.3-max(abs(ro.x),abs(ro.z)));\r\n\t}\r\n\t\r\n\tod=noise(time*5.0+rd.x*rd.z);//lighting noise\r\n\tt=clamp(od,0.4,0.5)*2.0;\r\n\tif(dm<px*tm){//max occluder\r\n\t\tcol=mix(Light(ro+rd*tm,rd,px*tm,dm)*t,col,clamp(dm/(px*tm),0.0,1.0));\r\n\t}\r\n\tif(de<px*te && te<tm){//first edge (rare)\r\n\t\tcol=mix(Light(ro+rd*te,rd,px*te,de)*t,col,clamp(de/(px*te),0.0,1.0));\r\n\t}\r\n\tif(ref<1.0){//some fake aa on the traced stuff\r\n\t\tcol=pow(col,vec3(ref));\r\n\t\tcol=mix(vec3(0.4-0.2*ref),col,mask);\r\n\t\tcol*=dR;\r\n\t}\r\n\tcol+=light_col*liteGlow*clamp(od,0.05,0.5)*ref;\r\n\ttt=min(tt,maxT);\r\n\tcol=3.0*col*exp(-tt*0.22);\r\n\tfragColor=vec4(col,1.0);\r\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"const vec4 scale=vec4(-3.12,-3.12,-3.12,3.12);\nfloat DE(in vec3 z0){//amazing box by tglad \n\tvec4 z = vec4(z0,1.0);\n\tz.xyz=clamp(z.xyz, -0.94, 0.94)*2.0-z.xyz;\n\tz*=scale/clamp(dot(z.xyz,z.xyz),0.25,1.0);\n\treturn max(0.0,(length(z.xyz+vec3(0.0,5.8,2.2))-0.6)/z.w);\n}\nfloat hash( float n ){return fract(sin(n)*43758.5453);}\nfloat noise(in float p){\n\tfloat c=floor(p),h1=hash(c);\n\treturn h1+(hash(c+1.0)-h1)*fract(p);\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    //position camera\n\tvec3 ro=vec3(cos(time*0.17),0.0,sin(time*0.05));\n\tro.z=1.0+ro.z*abs(ro.z);\n\tfloat tm=abs(mod(time,60.0)-30.0)/30.0;\n\tro.xz*=vec2(1.0+time*0.01,1.5)-vec2(tm*tm*10.0);\n\tro.x=-0.64+ro.x/(1.0+ro.z*ro.z*0.1);\n\tfloat n=clamp(noise(time*5.0),0.05,0.5);//lighting noise\n    float d=DE(ro);\n    float v=n*exp(-d);\n    float md=max(abs(ro.x),abs(ro.z));\n    float a=hash(time+sin(time*0.3)*0.5)-0.5;\n    float m=clamp(1.0-0.25*md,0.0,1.0);\n   \n    float ed=abs(4.0-md);\n    float bt=0.0,tim=time;\n    for(int i=0;i<3;i++){\n        float b=noise(tim*100.0)-0.5;if(abs(b)<0.25)b=0.0;\n        bt+=b;tim-=ed*0.0002;\n    }\n    return vec2( a*m*0.1*n + bt*v);\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mll3Rn","date":"1418142712","viewed":2736,"name":"Energy Decelerator 2","username":"eiffie","description":"I don't know what this machine does but judging by the way I feel it must be working.","likes":55,"published":1,"flags":0,"usePreview":0,"tags":["fun","depleted"],"hasliked":0,"parentid":"","parentname":""}}