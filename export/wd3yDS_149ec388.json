{"ver":"0.1","info":{"id":"wd3yDS","date":"1601615606","viewed":150,"name":"#inktober2020 d1: circles","username":"zaiyugi","description":"Personal challenge for Inktober 2020: shader every day. Circles with a little chromatic aberration","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sdf","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define td 1.\n#define nCircles 64\n#define PI 3.141592\n#define dog 0.25\n\nvec2 rotate2D(vec2 _st, float _angle)\n{\n\t_st -= 0.5;\n    _st = mat2(\n        cos(_angle),-sin(_angle),\n        sin(_angle),cos(_angle)\n    ) * _st;\n    _st += 0.5;\n    \n    return _st;\n}\n\nfloat ring(float e0, float d, float f)\n{\n    return smoothstep(e0, e0 + d, f) - smoothstep(e0 + d, e0 + 2. * d, f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize uv and account for aspect ratio\n    vec2 uv = fragCoord / iResolution.xy;\n    float ar = iResolution.x / iResolution.y;\n    uv.x = (uv.x - 0.5) * ar + 0.5;\n\n    // Preserve original uv\n    vec2 p = uv;\n    \n    float t = iTime * td;\n    \n    float even_t = 0.5 * (tan(t) + 1.0);\n    even_t *= -dog;\n    \n    float odd_t = 0.5 * (tan(t - 0.9) + 1.0);\n    odd_t *= -dog;\n    \n    float rot_t = 2.0 * PI * t * 0.3;\n    \n    vec3 col = vec3(0.0);\n    \n    float angle_d = 2.0 * PI / float(nCircles);\n    float radius = dog;\n    int i = 0;\n    for(; i < nCircles; ++i)\n    {\n        float flag = float(i % 2);\n        \n        float ang = angle_d * float(i);\n        vec2 C = vec2(cos(ang), sin(ang));\n        C *= radius * mix(1., .75, flag);\n        \n        vec2 circ_p = rotate2D(p, mix(-1. * rot_t, rot_t, flag)) - 0.5;\n        float f = length(circ_p - C);\n        \n        for(int j = 0; j < 3; ++j)\n        {\n            float col_d = float(j) * 0.005;\n            float ring_t = mix(odd_t * -1.0, even_t, flag);\n        \tcol[j] += ring(dog, 0.004, f + ring_t + col_d);\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}