{"ver":"0.1","info":{"id":"fsjGDG","date":"1617893969","viewed":138,"name":"Black Hole Distortion Effect","username":"Zentient","description":"A simple distortion effect with a boolean color value for the \"black hole\" part.\nMy first shader, yes, has problems.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","distortion","distort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//This work is licensed under a Creative Commons Attribution 4.0 International License.\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //Texel color\n    vec4 texCol = texture(iChannel0, uv);\n    \n    //Distortion addend\n    if(sqrt((fragCoord.x - iMouse.x) * (fragCoord.x - iMouse.x) + (fragCoord.y - iMouse.y) * (fragCoord.y - iMouse.y)) <= (iResolution.x / 20.0)) \n        {\n            texCol = vec4(0.0);\n        }\n        else\n        {\n           \n            vec2 distort = (iResolution.x / 25.0) * fragCoord / (iResolution.xy * sqrt((fragCoord.x - iMouse.x) * (fragCoord.x - iMouse.x) + (fragCoord.y - iMouse.y) * (fragCoord.y - iMouse.y)));\n         \n            texCol = texture(iChannel0, uv - distort);\n        }\n    // Output to screen\n    fragColor = vec4(texCol * 1.5 - 0.2);\n}","name":"Image","description":"","type":"image"}]}