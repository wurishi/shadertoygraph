{"ver":"0.1","info":{"id":"ctjcR1","date":"1691480263","viewed":71,"name":"noise test love","username":"xubury","description":"noise test love","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n\nfloat rand2(vec2 p) { \n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\nfloat rand(vec2 p) { \n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float noiseIntensity = 0.5;\n    float noiseScale = 0.3;\n    float stripeIntensity = 0.5;\n    float shakeIntensity = 0.03;\n    float time = iTime;\n    float Color_R_Scale = 0.71;\n    float Color_G_Scale = 1.06;\n    float Color_B_Scale = 1.21;\n    float Light = 1.8;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float noise = max(0.0, snoise(vec2(time, uv.y * 0.3)) - 0.3) * (1.0 / 0.7);\n    noise = noise + (snoise(vec2(time*10.0, uv.y * 2.4)) - 0.5) * 0.15;\n    float xpos = uv.x - noise * noise * 0.25;\n\n    vec3 col = vec3(1.0) * texture(iChannel0, uv).rgb;\n    \n    float n = rand(uv.xy * time);\n    col = col * vec3(1.0-noiseIntensity) + vec3(noiseIntensity * n * noiseScale);\n    \n    float ny = rand(vec2(uv.y * time));\n    col *= mix(col, vec3(ny), noise * stripeIntensity);\n    \n    if (floor(mod(uv.y * 0.25, 2.0)) == 0.0) {\n        col.rgb *= 1.0 - (0.15 * noise);\n    }\n    \n    col.g = mix(col.g, texture(iChannel0, vec2(xpos + noise * 0.05, uv.y)).g, shakeIntensity);\n    col.b = mix(col.b, texture(iChannel0, vec2(xpos - noise * 0.05, uv.y)).b, shakeIntensity);\n    \n    float c = min(col.r + col.g + col.b, 255.f);\n    col.r = c * Color_R_Scale * Light;\n    col.g = c * Color_G_Scale * Light;\n    col.b = c * Color_B_Scale * Light;\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}