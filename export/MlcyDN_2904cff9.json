{"ver":"0.1","info":{"id":"MlcyDN","date":"1532644291","viewed":689,"name":"2D Water Ripple","username":"Garm","description":"Inspired by https://youtu.be/BZUdGqeOD0w\nClick to add ripple!","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["2d","water","ripple","buffers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(texture(iChannel0, uv).rgb, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 color = vec3(0.0);\n    color += texture(iChannel0, (fragCoord + vec2(1, 0)) / iResolution.xy).rgb;\n    color += texture(iChannel0, (fragCoord + vec2(-1, 0)) / iResolution.xy).rgb;\n    color += texture(iChannel0, (fragCoord + vec2(0, 1)) / iResolution.xy).rgb;\n    color += texture(iChannel0, (fragCoord + vec2(0, -1)) / iResolution.xy).rgb;\n    color *= 0.5;\n    color -= texture(iChannel1, uv.xy).rgb;\n    \n    color *= 0.99;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( vec3 x )\n{\n    // The noise function returns a value in the range -1.0f -> 1.0f\n\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f       = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    return mix(mix(mix( hash(n+0.0), hash(n+1.0),f.x),\n                   mix( hash(n+57.0), hash(n+58.0),f.x),f.y),\n               mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                   mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float noise = 1.0 - clamp(noise(vec3(uv * 10.0, iTime * 10.0)) * 100.0, 0.0, 1.0);\n    noise += 1.0 - min(distance(fragCoord, iMouse.zw) * 0.1, 1.0);\n    \n    vec3 color = vec3(0.0);\n    color += texture(iChannel0, (fragCoord + vec2(1, 0)) / iResolution.xy).rgb;\n    color += texture(iChannel0, (fragCoord + vec2(-1, 0)) / iResolution.xy).rgb;\n    color += texture(iChannel0, (fragCoord + vec2(0, 1)) / iResolution.xy).rgb;\n    color += texture(iChannel0, (fragCoord + vec2(0, -1)) / iResolution.xy).rgb;\n    color *= 0.5;\n    color += vec3(sin(iTime) * 0.5 + 0.5, sin(iTime + 2.0) * 0.5 + 0.5, sin(iTime + 4.0) * 0.5 + 0.5) * noise;\n    color -= texture(iChannel1, uv.xy).rgb;\n    \n    color *= 0.99;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Buf B","description":"","type":"buffer"}]}