{"ver":"0.1","info":{"id":"fsdSRN","date":"1632766755","viewed":87,"name":"Kernels - CL","username":"cLaBounty","description":"GPR-200 assignment - Kernels","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["assignment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Originally by Nikos Papadopoulos, 4rknova / 2015\n// Heavily modified by Dr. Sajid Farooq, 2016\n// The blur matrix. Since there are 9 pixels, each weight is 1/9 = 0.111 \n// to ensure that each pixel is averaged properly\nmat3 blur = mat3(\n    0.111, 0.111, 0.111, // first column (not row!)\n    0.111, 0.111, 0.111, // second column\n    0.111, 0.111, 0.111 // third column\n);\n\nmat3 sharpen = mat3(\n    0., -1, 0.0, // first column (not row!)\n    -1, 5, -1, // second column\n    0., -1, 0.0 // third column\n);\n\nmat3 emboss = mat3(\n    0.0, 1.0, 0.0, // first column (not row!)\n    0.0, 0.0, 0.0, // second column\n    0.0, -1.0, 0.0 // third column\n);\n\nmat3 edge = mat3(\n    -1.0, -1.0, -1.0, // first column (not row!)\n    -1.0, 8.0, -1.0, // second column\n    -1.0, -1.0, -1.0 // third column\n);\n\nmat3 sobelEdgeHorizontial = mat3(\n    -1.0, -2.0, -1.0, // first column (not row!)\n    0.0, 0.0, 0.0, // second column\n    1.0, 2.0, 1.0 // third column\n);\n\nmat3 sobelEdgeVertical = mat3(\n    -1.0, 0.0, 1.0, // first column (not row!)\n    -2.0, 0.0, 2.0, // second column\n    -1.0, 0.0, 1.0 // third column\n);\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n    uv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n    return texture(iChannel0, uv).xyz;\n}\n\nvec3 aFilter(in vec2 fragCoord, mat3 kernel)\n{\n    vec3 sum = vec3(0);\n    for (int i = 0; i < 3; i++) {\n        for (int j = 0; j < 3; j++) {\n            sum += aSample(i - 1, j - 1, fragCoord) * kernel[i][j];\n        }\n    }\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 fc = fragCoord.xy;\n    \n    //vec3 cf = aFilter(fc, blur);\n    //vec3 cf = aFilter(fc, sharpen);\n    //vec3 cf = aFilter(fc, emboss);\n    //vec3 cf = aFilter(fc, edge);\n    vec3 cf = aFilter(fc, sobelEdgeHorizontial + sobelEdgeVertical);\n    \n    fragColor = vec4(cf, 1);\n}","name":"Image","description":"","type":"image"}]}