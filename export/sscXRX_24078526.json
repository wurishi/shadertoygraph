{"ver":"0.1","info":{"id":"sscXRX","date":"1633612636","viewed":63,"name":"OReilly05_grv 2D WIP","username":"incription","description":"2D Implementation of the Paper \"An Analog Cellular Automaton Model of Gravitation: Planck-Scale Black Holes\" by Dr Randall C. Oâ€™Reilly.\n\nWork in progress because I need to learn some stuff beforehand. http://psych.colorado.edu/~oreilly/papers/OReilly05_gr","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d","gravity","ca"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 iuv = ivec2(fragCoord);\n    \n    vec3 g1 = texelFetch(iChannel0, iuv, 0).xyz;\n    vec3 g2 = texelFetch(iChannel1, iuv, 0).xyz;\n    \n    vec3 gt = g1 - g2;\n\n    // Output to screen\n    fragColor = vec4(abs(g1),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define F(x) texelFetch(iChannel1, x, 0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uvv = fragCoord / iResolution.xy;\n    uvv -= .5;\n    uvv.x *= iResolution.x / iResolution.y;\n    ivec2 uv = ivec2(fragCoord);\n    vec4 result = texelFetch(iChannel1, uv, 0);\n    float t = result.w;\n    vec3 g = result.xyz;\n    \n    ivec3 delta = ivec3(0, 1, -1);\n    vec3 del = vec3(0);\n    del += (F(uv + delta.xy).xyz - g) * 1.;\n    del += (F(uv + delta.yx).xyz - g) * 1.;\n    del += (F(uv - delta.xy).xyz - g) * 1.;\n    del += (F(uv - delta.yx).xyz - g) * 1.;\n    \n    del += (F(uv + delta.yy).xyz - g) * .5;\n    del += (F(uv + delta.yz).xyz - g) * .5;\n    del += (F(uv - delta.yy).xyz - g) * .5;\n    del += (F(uv - delta.yz).xyz - g) * .5;\n    \n    del *= 2. / 12.;\n\n    result = vec4(cc * del + texelFetch(iChannel2, uv, 0).xyz, t);\n    \n    if(iFrame==0) result=vec4(0,0,0,1);\n    if(iFrame==0 && uv == ivec2(iResolution/2.)) result.xyz = vec3(1);\n    if(ivec2(iMouse.xy) == uv && iMouse.z > 0. && g.x < .1) result.xyz = vec3(1);\n    if(abs(uvv.x) > .5) result.xyz = vec3(0);\n    fragColor = result;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord);\n    fragColor = texelFetch(iChannel0, uv, 0) + \n                texelFetch(iChannel1, uv, 0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord);\n    fragColor = texelFetch(iChannel0, uv, 0) + \n                texelFetch(iChannel1, uv, 0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"#define F(x) texelFetch(iChannel1, x, 0)\n\nvec3 square(vec3 x) {\n    return x * x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord);\n    vec4 data = texelFetch(iChannel0, uv, 0);\n    \n    vec3 E = vec3(0);\n    \n    data = texelFetch(iChannel1, uv, 0);\n    vec3 g = data.xyz;\n    float t = data.w;\n    \n    vec3 sum = vec3(0);\n    ivec3 delta = ivec3(0, 1, -1);\n    vec3 m = 1. / (1. + 2. * abs(g));\n    vec3 mm = 1. / (.5 + 2. * abs(g));\n    sum += (F(uv + delta.xy).xyz - g) * m;\n    sum += (F(uv + delta.yx).xyz - g) * m;\n    sum += (F(uv - delta.xy).xyz - g) * m;\n    sum += (F(uv - delta.yx).xyz - g) * m;\n    \n    sum += (F(uv + delta.yy).xyz - g) * mm;\n    sum += (F(uv + delta.yz).xyz - g) * mm;\n    sum += (F(uv - delta.yy).xyz - g) * mm;\n    sum += (F(uv - delta.yz).xyz - g) * mm;\n    \n    sum *= 2. / 12.;\n    \n    vec3 A; vec3 At;\n    E += 0.5 * (1. + 2. * abs(g)) * square(A - At);\n    E += 2. / 12. * sum * cc / 2.;\n    \n    fragColor = vec4(E, 0);\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define cc 2.\n\nvec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}","name":"Common","description":"","type":"common"}]}