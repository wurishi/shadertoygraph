{"ver":"0.1","info":{"id":"ctfSz2","date":"1675024829","viewed":91,"name":"Elastic line segment","username":"ianertson","description":"Elastic line segment","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["line","segment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define T (iTime)\n#define M_PI (3.1416)\n#define TAU (M_PI * 2.0)\n#define ZOOM 2.0\n\nvec3 line(vec2 p, vec2 a, vec2 b, float thick, float feather) {\n    vec2 ba = b - a;\n    vec2 pa = p - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    float v = max(0.0, 1.0 - smoothstep(thick-feather, thick+feather, length(pa - h * ba)));\n    float da = length(p - a);\n    float db = length(p - b);\n    vec3 col = vec3(v);\n    thick *= 3.0;\n    col = mix(mix(col, vec3(1.0, 0.0, 0.0), 1.0 - smoothstep(thick-feather, thick+feather, da)), vec3(0.0, 1.0, 0.0), 1.0 - smoothstep(thick-feather, thick+feather, db));\n    return col;\n}\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = (fc-0.5*R.xy)/R.y;\n   \n    \n    vec2 m = getCursor(R, iMouse, T);\n    \n    vec3 old = texture(iChannel0, vec2(0.)).rgb;\n    \n    m.xy = mix(old.xy, m.xy, 1.0 / 60.0);\n    \n    \n    uv *= ZOOM;\n    vec3 bg = texture(iChannel0, uv).rgb;\n    col += line(uv, vec2(0.), m*ZOOM, 0.01, 0.01);\n   // col += bg;\n    \n    O = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 getCursor(vec2 R, vec4 mouse, float T) {\n     vec2 m = (mouse.xy-0.5*R.xy)/R.y;\n    // if (mouse.z < 0.01) return vec2(cos(T), sin(T)) * 0.25;\n     return m.xy;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define R iResolution.xy\n#define T (iTime)\n#define M_PI (3.1416)\n#define TAU (M_PI * 2.0)\n#define ZOOM 2.0\n\n\nvec3 getOld(vec2 uv) {\n    return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 cursor = getCursor(R, iMouse, T);\n    \n    vec3 col = vec3(0.);\n    \n    vec2 uv = (fragCoord -0.5*R.xy)/R.y;\n    \n    vec3 old = getOld(vec2(0.));\n    vec2 vel = getOld(vec2(1.)).xy;\n    \n    if (iFrame <= 2) {\n        vel += vec2(cos(T), sin(T));\n    }\n    \n    old.xy += vel * 1.0 / 60.;\n    cursor.xy = mix(old.xy, cursor.xy, 1.0 / 60.);\n    \n    \n    if (uv.x <= 0.0 && uv.y <= 0.0) {\n        col = vec3(cursor, 1.0);\n    } else {\n        col = getOld(vec2(1.));\n        col.xy -= (cursor * 1.0/60.0);\n        \n        if (iMouse.z > 0.01) {\n            col *= 0.0;\n        }\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}