{"ver":"0.1","info":{"id":"NlKcDt","date":"1662457041","viewed":210,"name":"Lyapunov's Fractal","username":"incription","description":"https://en.wikipedia.org/wiki/Lyapunov_fractal\n\nChange S to different sequences to generate different diagrams","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["fractal","lyapunov"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float minRes = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / minRes;\n\n    vec4 data = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    float sum = data.y;\n    sum /= data.z;\n    \n    float l = 1. - 1. / pow(2., abs(sum));\n\n    vec3 col = vec3(0);\n    if(sign(sum) > 0.) col = mix(col, vec3(0.380,0.380,0.839), l);\n    else col = mix(col, vec3(1.000,0.855,0.141), 1.-l);\n    if(abs(uv.x) > 0.5) col= vec3(0);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 data = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    float xn = data.x;\n    float sum = data.y;\n    float n = data.z;\n    \n    float minRes = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / minRes + .5;\n    vec2 pos = uv * 4. - .5 / minRes;\n    \n    float r, xn1;\n    xn1 = xn;\n    int Sl = S.length();\n    if(iFrame == 0) xn1 = .5;\n    for(int i = 0; i < 1; i++) {\n        for(int j = 0; j < Sl; j++) {\n            r = pos.yx[S[j]];\n            xn1 = r * xn1 * (1. - xn1);\n            sum += log(abs(r*(1.-2.*xn1)));\n            n += 1.;\n        }\n    }\n\n    fragColor = vec4(xn1, sum, n, data.w);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define A 0\n#define B 1\n\nint S[] = int[](A,B); ","name":"Common","description":"","type":"common"}]}