{"ver":"0.1","info":{"id":"flyBRd","date":"1665003649","viewed":88,"name":"Domain Distort - The Art of Code","username":"eklavya_1","description":"Tutorial by The Art of Code - https://www.youtube.com/watch?v=jKuXA0trQPE\n- Creating rectangle\n- Domain distortion","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Band(float t, float start, float end, float blur) {\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1 * step2;    \n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur) {\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    return band1 * band2; \n}\n\nfloat remap01(float a, float b, float t) {\n    return (t-a) / (b-a);\n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n    return remap01(a, b, t) * (d - c) + c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n \n    vec3 col = vec3(0.);\n    \n    // scale rectangle - multiply uv coordinate by a number\n    // uv *= 1.4;\n    \n    float x = uv.x;\n    // float y = uv.y;\n    \n    // float m = -(x - 0.5)*(x + 0.5);\n    // m = m * m * 4.;\n    float m = sin(t + uv.x * 8.) * 0.1;\n    float y = uv.y - m;\n    \n    // skew the box\n    // x += y * 0.5;\n    \n    // float mask = Rect(vec2(x, y), -.2 + y*.2, .2 - y*.2, -.3, .3, 0.01); taper the box\n    // float mask = Rect(vec2(x, y), -.2, .2, -.3, .3, 0.01);\n    // float blur = remap(-0.01, 0.2, -.5, .5, uv.x);\n    float blur = remap(-0.5, 0.5, .01, .2, x);\n    blur = pow(blur * 4., 3.);\n    \n    float mask = Rect(vec2(x, y), -.5, .5, -.1, .1, blur);\n    col = vec3 (1., 1., 1.) * mask;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}