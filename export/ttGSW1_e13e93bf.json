{"ver":"0.1","info":{"id":"ttGSW1","date":"1582585936","viewed":171,"name":"Other 2D Wave Shader","username":"Clipsey","description":"An other simple 2D wave shader","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float genWave(float x) {\n\treturn (\n        (\n            sin(\n                (x/70.0)+\n                (iTime)\n            ) * 30.0\n        ) * (sin(iTime)/2.0)\n    ) + (\n        sin(iTime)*30.0\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float halfPoint = iResolution.y/2.0;\n    float waveStep = iResolution.y/8.0;\n\tvec2 uv = fragCoord.xy/iResolution.xy;\n\n\tfloat waveHeightX = genWave(fragCoord.x);\n\tfloat waveHeightY = genWave(fragCoord.x+(iResolution.x/8.0));\n\tfloat waveHeightZ = genWave(fragCoord.x);\n\n\tfloat waveHeightA = halfPoint+waveHeightX;\n\tfloat waveHeightB = (halfPoint-waveStep)+waveHeightY;\n\tfloat waveHeightC = (halfPoint-(waveStep*2.0))+waveHeightZ;\n\n    if (fragCoord.y < waveHeightC) {\n\t\tfragColor = vec4(uv.y+0.2, uv.y+0.2, uv.y+0.5, 1.0);\n    } else if (fragCoord.y < waveHeightB) {\n\t\tfragColor = vec4(uv.y, uv.y, uv.y+0.4, 1.0);\n    } else if (fragCoord.y < waveHeightA) {\n\t\tfragColor = vec4(uv.y-0.2, uv.y-0.2, uv.y+0.2, 1.0);\n    } else {\n\t\tfragColor = vec4(0.4, 0.4, 0.8, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}