{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const int n = 20;\nconst int m = 10;\n\n//super unoptimized...\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy/2.0;\n\tfloat x = uv.x;\n\tfloat y = uv.y;\n    \t\n\t\n\n//    //check coordinates\n//\tif ((x > 50.01) &&\n//\t\t(x < 60.01) &&\n//\t\t(y > 70.01) &&\n//\t\t(y < 80.01) \n//\t   ){\n//\t\tcolor = vec4(1.0, 0.0, 0.0, 0.5);\n//\t}\n\t\n\n\t\n\t//rotation\n\tfloat theta = 2.0*3.14159265359/float(n);\n\tfloat c = cos(theta);\n\tfloat s = sin(theta);\n    \n\t//max radius\n\tfloat mr = 100.0;\n\t\n\t//color\n\tfloat alpha = 0.0;\n    float da = 2.0/float(n*m);\t\n\n\tfor (int j = 0; j < m; j++) {\n\t\tfloat a = 1.0;\n\t\tfloat b = 0.0;\n\t\tfloat r = mr/float(m)*float(j);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a*x+b*y - r > 0.0) {\n\t\t\t\talpha = alpha + da;\n\t\t\t}\n\t\t\tfloat ta = c*a-s*b;\n\t\t\tb = s*a + c*b;\n\t\t\ta = ta;\n\t\t}\n\n\t}\n\n\t//Note for others: to better understand geometry, make t a constant.\n\tfloat t = 0.5 + 1.5*(sin(iTime) + 0.5*sin(2.0*iTime)); \n\tvec4 color = vec4(t, t, t, alpha);\n\t\n\tvec4 background = vec4(1.0,0.0, 0.0, 1.0);\n\tvec4 blend = color*color.w + background*background.w*(1.0-color.w);\n\tblend.w = color.w + background.w*(1.0-color.w);\n\t\n\t\n\tfragColor = blend;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdXXR7","date":"1398363573","viewed":153,"name":"Origins","username":"lilinjn","description":"Iterated, transparent half-planes\n\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["procedural"],"hasliked":0,"parentid":"","parentname":""}}