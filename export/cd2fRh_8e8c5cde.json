{"ver":"0.1","info":{"id":"cd2fRh","date":"1689429687","viewed":44,"name":"tutotr","username":"andreaferrario","description":"afasf","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t ){\nvec3 a = vec3(0.094, 0.194, 0.543);\nvec3 b = vec3(0.762, 0.956, 0.066);\nvec3 c = vec3(1.070, 0.653, 0.010);\nvec3 d = vec3(4.514, 2.696, 1.185);\n\nreturn a + b*cos( 6.28318*(c*t+d) );\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \nfor (float i = 0.0; i < 4.0; i++){\n    \n    uv = fract(uv * 1.2) - 0.5;\n\n   float d = length(uv) * exp(-length(uv0*.3));\n   \n   vec3 col = palette(length(uv0) + i*.3 + iTime*.4);\n\n   d = sin(d*8.0 + iTime)/8.0;\n   d = abs(d);\n   d = 0.02 / d;\n   \n   finalColor += col * d;\n   \n   }\n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}