{"ver":"0.1","info":{"id":"tsSyR3","date":"1587043738","viewed":607,"name":"Webcam glow #2","username":"rasmuskaae","description":"Simple hollywood glow","likes":3,"published":3,"flags":2,"usePreview":0,"tags":["glow","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float glow_radius = 0.2;\nfloat glow_intens = 0.00125;\nfloat glow_blur_step = 0.05;\nfloat glow_num_steps = 1.0; // 1.0 is hollywood glow :)\n\nfloat fixcolor(float x) {\n    return 1.0-round(x*glow_num_steps)/glow_num_steps;\n}\n\nfloat getcolor(vec2 uv) {\n    vec4 c = texture(iChannel0, uv);\n    return max(fixcolor(c.r),max(fixcolor(c.g),fixcolor(c.b)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 c = texture(iChannel0, uv);\n\n    \n\tfloat d = 0.0;    \n    for (float x=0.0; x<1.0; x+=glow_blur_step) \n        for (float y=0.0; y<1.0; y+=glow_blur_step) {\n            d += getcolor(uv+glow_radius*vec2(x-0.5, y-0.5));\n        }\n    \n    \n    d *= glow_intens;\n    \n    fragColor = vec4(d,d,d,d)+c;\n}","name":"Image","description":"","type":"image"}]}