{"ver":"0.1","info":{"id":"tdVGD3","date":"1571118608","viewed":218,"name":"Fractal Kifs","username":"Passion","description":"A fractal based off https://www.youtube.com/watch?v=il_Qg9AqQkE","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","texture","kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.0)\n#define TWO_PI PI*2.0\n\nvec2 N(float angle){\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy)-.5;\n    float bars = abs(uv.y);\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 1.0 + dot(uv,uv)*.33;\n\tvec3 col = vec3(0.0);\n    \n    uv.x = abs(uv.x);\n    uv.y += tan((5./6.)*PI)*.5;\n    \n    vec2 n = N((5./6.)*PI);  \n    float d = dot(uv-vec2(0.5,0.0), n);\n    uv -= n*max(0.0,d)*2.0;\n        \n    n = N(cos(iTime/3.5)-sin(iTime/2.)+(2./3.)*PI);\n    float scale = 1.0;\n    float size = 3.0;\n    \n    uv.x += .5;\n    for(int i = 0; i<8; i++){\n        uv*=size;\n        scale*=size;\n        uv.x -= 1.5;\n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n*min(0.0,dot(uv, n))*2.0;\n    }\n\t\n    col += texture(iChannel0, .115*iTime-(uv/scale)).rgb;//-d;\n    \n    fragColor = vec4(col,1.0);\n    fragColor = bars > .45 ? vec4(0.0) : fragColor;\n}\n","name":"Image","description":"","type":"image"}]}