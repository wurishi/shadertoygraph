{"ver":"0.1","info":{"id":"lc3XDl","date":"1714597066","viewed":82,"name":"figures and ficus 2","username":"olokio","description":"very inerersting","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["r2d2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 center = vec2(0., 0.); // центр экрана\n\n   \n    // позиционирование\n    vec2 center1 = vec2(sin(time * 0.7) * 0.5, cos(time * 0.5) * 0.2 - 0.3); \n    vec2 center2 = vec2(cos(time * 0.3) * 0.3 - 0.2, sin(time * 0.3) * 0.5 + 0.3);\n    vec2 center3 = vec2(sin(time * 0.5) * 0.4, cos(time * 0.4) * 0.4); // траектория круга\n    vec2 pRect2 = vec2(0.3 * cos(time * 0.2), -.2); // движение прямоугольника по гоизонтали\n    vec2 pRect1 = vec2(0., -0.35); // положение прямоугольника\n\n    // расстояния между фигурами\n    float dCircle1 = length(uv - center1) - 0.1;\n    float dCircle2 = length(uv - center2) - 0.1;\n    float dCircle3 = length(uv - center3) - 0.1;\n    float dRect1 = (abs(uv.x + pRect1.x) - 0.05, abs(uv.y - pRect1.y) - 0.1);\n    float dRect2 = max(abs(uv.x - pRect2.x) - 0.05, abs(uv.y - pRect2.y) - 0.5);\n\n    vec3 color = vec3(1.0); // задний фон\n\n    float d = min(min(dCircle1, dCircle2), min(dCircle3, min(dRect1, dRect2)));\n\n    if (d == dCircle1) {\n        color = vec3(0.5 + 0.5 * cos(6.2831 * length(uv - center1) + time), 0, 0); // красный градиент\n    } else if (d == dCircle2) {\n        color = vec3(0, 0.5 + 0.5 * sin(6.2831 * length(uv - center2) + time), 0); // зеленый градиент\n    } else if (d == dCircle3) {\n        color = vec3(0, 0, 0.5 + 0.5 * sin(6.2831 * length(uv - center3) + time)); // синий градиент\n    } else if (d == dRect1) {\n        color = vec3(0.4, 0.6, 0.8);\n    } else if (d == dRect2) {\n        color = vec3(0.8, 0.6, 0.4);\n    }\n\n    if (d < 0.0)\n        fragColor = vec4(color, 1.0);\n    else\n        fragColor = vec4(vec3(.4), .0); // цвет заднего фона\n}","name":"Image","description":"","type":"image"}]}