{"ver":"0.1","info":{"id":"wdccDr","date":"1600780033","viewed":230,"name":"A ColorfulÂ Intro-Sepia","username":"RupertOnTheLoose","description":"Used for Sepia and Function tutorial","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sepiafilter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://www.imagemagick.org/Usage/color_mods/#hald-clut \n\n// sepia matrix\nvec3 Sepia(vec3 inputColor)\n{\n\tconst mat3 Mat = mat3(\n  \t\t0.393, 0.769, 0.189,\n \t\t0.349, 0.686, 0.168,\n \t\t0.272, 0.534, 0.131);\n\treturn inputColor * Mat;\n}\n\n// same as matrix written out\nvec3 SepiaChannels(vec3 inputColor)\n{\n    vec3 outputColor;\n    outputColor.r = (inputColor.r * 0.393) + (inputColor.g * 0.769) + (inputColor.b * 0.189);\n    outputColor.g = (inputColor.r * 0.349) + (inputColor.g * 0.686) + (inputColor.b * 0.168);    \n    outputColor.b = (inputColor.r * 0.272) + (inputColor.g * 0.534) + (inputColor.b * 0.131);\n    \n    return outputColor;\n}\n\nconst vec3 red = vec3(1.0, 0.0, 0.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // get pixel information from uv location\n    vec4 texColor = texture(iChannel0, uv);\n    \n    // make a sepia tone color\n    vec3 sepia = vec3(1.2, 1.0, 0.8);\n    \n    // get gray/intensity scale\n    float gray = (texColor.r + texColor.g + texColor.b) / 3.0;\n    \n    // combine\n    vec3 color = gray * sepia;\n    \n    \n    // Another way: from matrix function \n    // color = Sepia(texture(iChannel0, uv).rgb);\n    \n    // Another way: from channels function \n    // color = SepiaChannels(texture(iChannel0, uv).rgb);\n    \n    // Output to screen\n    fragColor = vec4(vec3(color), texColor.a);\n}","name":"Image","description":"","type":"image"}]}