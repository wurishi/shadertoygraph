{"ver":"0.1","info":{"id":"lccczl","date":"1731011784","viewed":40,"name":"#Crhomakey 2","username":"Secretstar","description":"moving background","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromakey"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Input video su iChannel0\n// Cubemap su iChannel1\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Calcola le coordinate UV\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Colore del pixel del video\n    vec4 videoColor = texture(iChannel0, uv);\n    \n    // Colore verde da rimuovere\n    vec3 greenKey = vec3(0.0, 1.0, 0.0);\n\n    // Parametri di controllo per il chroma key\n    float threshold = 0.66; // Sensibilità al verde, aumenta per rimuovere più verde\n    float fadeWidth = 0.2;    // Sfuma i bordi per eliminare l'alone, aumenta per un bordo più morbido\n    \n    // Calcola la distanza dal colore verde\n    float diff = length(videoColor.rgb - greenKey);\n    \n    // Calcola il valore alpha usando il threshold e il fadeWidth\n    float alpha = smoothstep(threshold, threshold + fadeWidth, diff);\n\n    // Calcola la direzione per campionare il cubemap con una rotazione lenta\n    float angle = iTime * 0.1; // Velocità di rotazione (più lento con valori minori)\n    mat3 rotation = mat3(\n        cos(angle), 0.0, -sin(angle),\n        0.0,        1.0,  0.0,\n        sin(angle), 0.0,  cos(angle)\n    );\n\n    // Direzione della vista per il cubemap, con rotazione applicata\n    vec3 viewDir = rotation * normalize(vec3(uv - 0.5, 0.5));\n\n    // Colore del cubemap nella direzione rotata\n    vec4 cubemapColor = texture(iChannel1, viewDir);\n\n    // Combinazione del video con il cubemap rotato\n    vec3 finalColor = mix(cubemapColor.rgb, videoColor.rgb, alpha);\n\n    // Output del colore finale\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}