{"ver":"0.1","info":{"id":"Wlf3W2","date":"1557607730","viewed":130,"name":"Asensio - Keyboard control","username":"Asensio12","description":"This is my first shader code trying to manage keyboard input","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["tutorial","keyboard","guide"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\nbool inCirc(in vec2 pos, in vec2 center, in float r)\n{\n    return (length(center-pos)<r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 xy = fragCoord/iResolution.xy;\n\tvec4 bufPos = texture(iChannel0,xy);\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+vec3(xy,1.0)+vec3(0.0,M_PI*0.5,M_PI));\n    \n\tfragColor =  vec4(col,1.0);\n        \n    if(inCirc(fragCoord, bufPos.xy, dot(vec2(1.,1.),iResolution.xy)*0.1))\n    {\n        fragColor = vec4(min(vec3(1.0),fragColor.xyz+0.1),1.0);\n        //fragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float KEY_A     = 65.5/256.0;\nconst float KEY_D     = 68.5/256.0;\nconst float KEY_S     = 83.5/256.0;\nconst float KEY_W     = 87.5/256.0;\n\n\nbool isKeyPressed(float key)\n{\n\treturn texture( iChannel1, vec2(key, 0.0) ).x > 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 xy = fragCoord.xy / iChannelResolution[0].xy;\n    fragColor = texture(iChannel0,vec2(0));\n    \n    vec2 v = vec2(int(isKeyPressed(KEY_D))-int(isKeyPressed(KEY_A)),int(isKeyPressed(KEY_W))-int(isKeyPressed(KEY_S)));\n\n    fragColor.xy += 200.0*v*iTimeDelta;\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"}]}