{"ver":"0.1","info":{"id":"st3BR8","date":"1662740257","viewed":106,"name":"Window Test","username":"will_mckinnon","description":"Playground for window fx","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// adapted from https://www.shadertoy.com/view/ltS3zW\n\nconst float borderThickness = 10.0;\nconst float radius = 20.0;\nconst vec4 borderColor = vec4(1.0, 1.0, 0.0, 1.0);\nconst vec4 windowColor = vec4(1.0, 0.0, 0.0, 1.0);\nconst float width = 300.0;\nconst float height = 200.0;\n\nconst float halfBorderThickness = borderThickness / 2.0;\nconst vec2 halfWindowSize = vec2(width, height) / 2.0;\n\nfloat RectSDF(vec2 p, vec2 b, float r) {\n    vec2 d = abs(p) - b + vec2(r);\n\treturn min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - r;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 centeredPos = (fragCoord - iResolution.xy / 2.0);\n\n    float dist = RectSDF(centeredPos, halfWindowSize + halfBorderThickness, radius - halfBorderThickness);\n    \n    vec4 fromColor = borderColor;\n    vec4 toColor = vec4(0.0);\n    \n    if (halfBorderThickness > 0.0) {\n        if (dist < 0.0) {\n            toColor = windowColor;   \n        } \n        \n        dist = abs(dist) - halfBorderThickness;\n    } else {\n        fromColor = windowColor;\n    }\n    \n    float blendAmount = smoothstep(-1.0, 1.0, dist);\n    fragColor = mix(fromColor, toColor, blendAmount);\n}","name":"Image","description":"","type":"image"}]}