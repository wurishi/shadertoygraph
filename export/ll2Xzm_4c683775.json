{"ver":"0.1","info":{"id":"ll2Xzm","date":"1442599957","viewed":824,"name":"Emboss (Anastadunbar)","username":"anastadunbar","description":"A simple shader for emboss effect that people can use.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","filter","effect","bevel","depth","photoshop","deboss","videos","pictures"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float time = iTime;\n    \n    //---------------------------------------------\n    // 135  90  45\n    //    \\  |  /\n    //180 -  .  - 360/0\n    //    /  |  \\\n    // 225  270  315\n    \n    float dir = time*30.; //Degrees\n    float dist = 2.+sin(time*2.); //Distance\n    \n    float strength = 2.;\n    float invert = 0.; //0, 1\n    \n    float BnW = 0.; //Black and white? 0, 1\n    \n    //Tips: 0 = False, 1 = True.\n    //---------------------------------------------\n    \n    //Draw out the outputs\n    vec4 draw = vec4(0.);\n    dist *= 0.001; //Make distance smaller\n    \n    if (invert < 1.) {\n\tdraw = vec4(0.5+((texture(iChannel0,uv).rgb-texture(iChannel0,uv+(vec2(cos(radians(dir)),sin(radians(dir)))*dist)).rgb)*strength),1.0);\n    } else {\n    draw = vec4(0.5+((texture(iChannel0,uv+(vec2(cos(radians(dir)),sin(radians(dir)))*dist)).rgb-texture(iChannel0,uv).rgb)*strength),1.0);    \n    }\n    \n    if (BnW >= 1.) { \n        draw = vec4((draw.r+draw.g+draw.b)/vec3(3.),draw.a);\n    }\n    \n    fragColor = draw;\n}","name":"","description":"","type":"image"}]}