{"ver":"0.1","info":{"id":"llB3DW","date":"1429204896","viewed":205,"name":"Mod Pseudo 3D","username":"Slyth","description":"Testing pseudo 3D with mod","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","mod"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float fovVal = 0.4; // not really fov, but meh\nconst float doRadical = 1.0; // 0.0 to disable, 1.0 for regular, 100.0 for acid trip\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv.y = uv.y * 2.0 - 1.0 + cos(iTime * 1.5) * 0.5; // y rot\n    uv.x = uv.x * 2.0 - 1.0 + sin(iTime * 1.5) * 0.5; // x rot\n    \n    float xMod = doRadical != 0.0 ? 1.0 / (uv.x * fovVal) * doRadical : uv.x * fovVal;\n        \n    float a = mod(xMod, abs(uv.y)); // main func w/ radical\n    \n    a *= doRadical != 0.0 ? 1.0 + smoothstep(0.0, 0.5, uv.x) - smoothstep(0.0, 0.5 + (1.0 - fovVal), uv.x + 0.5 + (1.0 - fovVal)) : 1.0; // fog X\n    \n    a *= 1.0 + smoothstep(0.0, 0.5, uv.y) - smoothstep(0.0, 0.5 + (1.0 - fovVal), uv.y + 0.5 + (1.0 - fovVal)); // fog Y    \n    \n    vec3 color = vec3(cos(iTime * 2.0), sin(iTime * 0.5), 0.5); // diffuse\n    \n\tfragColor = vec4(color * vec3(a, a, a), 1.0);\n}","name":"","description":"","type":"image"}]}