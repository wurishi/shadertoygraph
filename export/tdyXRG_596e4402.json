{"ver":"0.1","info":{"id":"tdyXRG","date":"1574333140","viewed":168,"name":"don - Place Circle With Mouse","username":"koktszfung","description":"Draw with circle\nEsc - reset (remove my drawing by resetting)\n0-9 - choose layer, 1 layer 1 circle\nmouse - drag to draw circle\nBottom: memory (0-9:layer chosen, 10-19:circle vec4(a, b), 20:mouse vec4(zwxy))","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["draw","drawing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord / iResolution.y;  // square normalized frame\n\tfragColor = vec4(0);\n    \n    for (int i = 0; i < 10; i++) {  // display a circle\n        vec4 ab = getPixel(iChannel0, COORD_SAVE + ivec2(i, 0));\n        vec2 c = (ab.xy + ab.zw) * .5;\n        float R = length(ab.xy - c);\n        float r = length(uv - c);\n        if (r - R < 0.) fragColor = vec4(1.);\n    }\n    \n    fragColor += getPixel(iChannel0, fragCoord/10.);  // display memory\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void demo(inout vec4 fragColor, vec2 fragCoord) {\n    // change value in buffer A directly\n    // xy is center of circle\n    // length(zw - xy) is radius of circle\n    if (int(fragCoord.y) == COORD_SAVE.y) {\n        switch (int(fragCoord.x) - COORD_SAVE.x) {\n            case 0:\n            fragColor.xy = vec2(330, 260) - 18.;\n            fragColor.zw = fragColor.xy + 36.;\n            break;\n            case 1:\n            fragColor.xy = vec2(374, 290) - 18.;\n            fragColor.zw = fragColor.xy + 36.;\n            break;\n            case 2:\n            fragColor.xy = vec2(426, 290) - 18.;\n            fragColor.zw = fragColor.xy + 36.;\n            break;\n            case 3:\n            fragColor.xy = vec2(470, 260) - 18.;\n            fragColor.zw = fragColor.xy + 36.;\n            break;\n            \n            case 4:\n            fragColor.xy = vec2(400, 200) - 35.;\n            fragColor.zw = fragColor.xy + 70.;\n            break;\n            case 5:\n            fragColor.xy = vec2(375, 180) - 25.;\n            fragColor.zw = fragColor.xy + 50.;\n            break;\n            case 6:\n            fragColor.xy = vec2(425, 180) - 25.;\n            fragColor.zw = fragColor.xy + 50.;\n            break;\n            \n            case 7:\n            fragColor.xy = vec2(470, 120) - 8.;\n            fragColor.zw = fragColor.xy + 16.;\n            break;\n        default:\n            break;\n        }\n        fragColor /= 450.;\n    }\n}\n\nvoid reset(inout vec4 fragColor, vec2 fragCoord) {\n    if (ivec2(fragCoord) == COORD_NUMBER) {\n        fragColor = COLOR_ON;\n    } else {\n    \tfragColor = COLOR_OFF;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    if (iFrame == 0) {  // for the thumbnail\n        demo(fragColor, fragCoord);\n        return;\n    }\n    \n    if (getPixel(iChannel1, 27, 1).r != 0.) {  // reset\n        reset(fragColor, fragCoord);\n        return;\n    }\n    \n    fragColor = getPixel(iChannel0, fragCoord);  // copy last frame    \n    \n    \n    \n    int x = int(fragCoord.x), y = int(fragCoord.y);\n    \n    // number\n    if (y == COORD_NUMBER.y && x - COORD_NUMBER.x < 10) {\n        for (int i = 48; i < 58; i++) {\n            if (getPixel(iChannel1, i, 1).r != 0.){  // check for keypress\n                if (i - 48 == x - COORD_NUMBER.x) {  // check if equal after offset to start at 0\n                    fragColor =  COLOR_ON;\n                } else {\n                    fragColor = COLOR_OFF;\n                }\n                return;\n            }\n        }\n    }\n    \n    // mouse\n    if (ivec2(x, y) == COORD_MOUSE) {\n        if (iMouse.z > 0.) fragColor = iMouse.zwxy/iResolution.y;  // iMouse.zw < 0 at first\n        return;\n    }\n\n\t// save\n    if (y == COORD_SAVE.y && x - COORD_SAVE.x < 10) {\n        if (getPixel(iChannel0, x - COORD_SAVE.x, COORD_NUMBER.y).r != 0.) {\n        \tfragColor = getPixel(iChannel0, COORD_MOUSE);  // copy from mouse\n            return;\n        }\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\nconst vec4 COLOR_ON = vec4(.1, .8, .1, 1.);\nconst vec4 COLOR_OFF = vec4(0);\n\n// coordinate in memory\nconst ivec2 COORD_NUMBER = ivec2(0, 3);\nconst ivec2 COORD_SAVE  = ivec2(10, 3);\nconst ivec2 COORD_MOUSE = ivec2(20, 3);\n\n// read memory\nvec4 getPixel(sampler2D channel, ivec2 fragCoord) {\n\treturn texelFetch(channel, fragCoord, 0);\n}\n\nvec4 getPixel(sampler2D channel, vec2 fragCoord) {\n\treturn texelFetch(channel, ivec2(fragCoord), 0);\n}\n\nvec4 getPixel(sampler2D channel, int x, int y) {\n\treturn texelFetch(channel, ivec2(x, y), 0);\n}\n","name":"Common","description":"","type":"common"}]}