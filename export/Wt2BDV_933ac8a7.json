{"ver":"0.1","info":{"id":"Wt2BDV","date":"1599898544","viewed":202,"name":"Black BG EQ","username":"Meji","description":"Test","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["eq"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ampl 1.\n#define seuil .0\n#define steps 100.\n#define space .1\n#define def .2\n#define opacity .8\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float sound = texture(iChannel0,vec2(floor(steps*uv.x)/steps,0)).r;\n    sound *=ampl;\n    sound -=seuil;\n    sound = max(def, sound);\n    if (uv.x*steps-floor (uv.x*steps)<space)sound = 0.;\n\n    vec4 color = texture(iChannel1,uv);\n       // uv.y +=texture(iChannel0,vec2(floor(steps*uv.x)/steps,1)).r/20.; // make the spectrum analysis dance with the waveform â™«â™¥\n    if (abs((0.,5.*uv.y-1.5))< sound*sound*sound)color =mix(color, vec4(1),opacity);\n\tfragColor =color;\n}","name":"Image","description":"","type":"image"}]}