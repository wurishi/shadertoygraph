{"ver":"0.1","info":{"id":"ldKSzm","date":"1463716091","viewed":310,"name":"sans.","username":"rimbas4","description":"Square region filling. \n\nAttempting to learn how shaders work.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["2d","pixelart","undertale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897931\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 uvz = vec3(fragCoord.xy / iResolution.xy * 2.0 - vec2(1.0, 1.0), 0.0);\n    uvz.z =  uvz.x*iResolution.x/iResolution.y;\n\tvec4 sans = texture(iChannel0, uv);\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    if (sans.w == 1.0) \n    \tfragColor = sans;\n    else {        \n        fragColor.z=(uvz.x*uvz.x+uvz.y*uvz.y)*(abs(uvz.x)*abs(uvz.y))/2.0;\n        //fragColor.z=max(uvz.x*uvz.x, uvz.y*uvz.y)/3.0;\n\t}\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define scale 0.04\n#define TW(cy, cx) if (y==cy && sx < cx) fragColor = W;\n\n// EYE - 1 for the spooky iris, 2 for no irises, 3 - alternating\n#define EYE 3\n\nconst vec4 B = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec4 W = vec4(1.0, 1.0, 1.0, 1.0);\nconst vec4 Y = vec4(1.0, 1.0, 0.25, 1.0);\nconst vec4 C = vec4(0.5, 1.0, 1.0, 1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // x = x, y = y, z = x scaled without aspect ratio\n    vec3 uvz = vec3(fragCoord.xy / iResolution.xy * 2.0 - vec2(1.0, 1.0), 0.0);\n    uvz.z =  uvz.x*iResolution.x/iResolution.y;\n    // uncomment if you want middle (0, 0) pixel completely centered\n    //uv += vec2(scale*0.5, scale*0.5);\n    // add or subtract if you want to shift the image\n    int x = int(floor(uvz.z / scale));\n    int y = int(floor(uvz.y / scale));\n    \n    int sx = x >= 0 ? x : -x - 1; //easier symmetrical shaping\n    \n    fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    \n    // don't bother checking outside bounds\n    if (sx < 15 && y < 14 && y > -15) {\n    // skull shape\n    TW(13, 6) TW(12, 9) TW(11, 11) TW(10, 12)\n    TW(9, 13) TW(8, 14) TW(7, 14)\n\tif (y < 7 && y > -1 && sx < 15) fragColor = W;\n    TW(-1, 14) TW(-2, 14) TW(-3, 13) TW(-4, 13)\n    if (y < -4 && y > -9 && sx < 14) fragColor = W;\n    if (y < -8 && y > -11 && sx < 13) fragColor = W;\n    TW(-11, 12) TW(-12, 11) TW(-13, 9) TW(-14, 6)\n    \n    // eyes\n    if (y == 4 && sx > 3 && sx < 10) fragColor = B;\n    if (y == 3 && sx > 2 && sx < 12) fragColor = B;\n    if (y < 3 && y > -1 && sx > 2 && sx < 13) fragColor = B;\n    if (y == -1 && sx > 3 && sx < 12) fragColor = B;\n    if (y == -2 && sx > 3 && sx < 10) fragColor = B;\n    if (y == -3 && sx == 5) fragColor = B;\n    if (y == -4 && sx > 5 && sx < 8) fragColor = B;\n\n    //nose\n    if (y < 0 && y > -3 && sx == 0) fragColor = B;\n    if (y < -2 && y > -6 && sx < 2) fragColor = B;\n\n    //mouth\n    if (y == -5 && sx == 9) fragColor = B;\n    if (y == -6 && ((x < -8 && x > -11) || (x > 8 && x < 11))) fragColor = B;\n    if (y == -7 && sx < 12 && sx > 5 && x != -9 && x != 6) fragColor = B;\n    if (y == -8 && sx < 10 && x != -9 && x != -7 && x != 7) fragColor = B;\n    if (y == -9 && (sx==3 || x==-9 || x==-8 || x==-1 || x==6 || x==8)) fragColor = B;\n    if (y == -10 && (sx==3 || x==-7 || x==-8 || x==-1 || x==6 || x==7)) fragColor = B;\n    if (y == -11 && (sx==3 || x==-6 || x==-5 || x==-1 || x==6 || x==5)) fragColor = B;\n    if (y == -12 && sx < 5 && x != -5) fragColor = B;  \n\n    //eye\n    #if EYE == 1\n    vec4 eye = C;\n    if (mod(iTime, 2.0) > 1.0) eye = Y;\n    if (y == 3 && x > 5 && x < 9 ) fragColor = eye;\n    if (y == 2 && x > 4 && x < 10 ) fragColor = eye;\n    if (y == 1 && x > 3 && x < 11 && x != 7) fragColor = eye;    \n    if (y == 0 && x > 4 && x < 10 ) fragColor = eye;    \n    if (y == -1 && x > 5 && x < 9 ) fragColor = eye;\n    #elif EYE == 2\n    #elif EYE == 3\n    vec4 eye = C;\n    if (mod(iTime, 2.0) > 1.0) eye = Y;\n    if (mod(iTime, 3.0) < 1.0) {\n    \tif (y == 3 && x > 5 && x < 9 ) fragColor = eye;\n    \tif (y == 2 && x > 4 && x < 10 ) fragColor = eye;\n    \tif (y == 1 && x > 3 && x < 11 && x != 7) fragColor = eye;    \n    \tif (y == 0 && x > 4 && x < 10 ) fragColor = eye;    \n    \tif (y == -1 && x > 5 && x < 9 ) fragColor = eye;\n    }\n\telse\n        if (y > -1 && y < 2 && sx > 5 && sx < 8) fragColor = W;\n    #else\n    if (y > -1 && y < 2 && sx > 5 && sx < 8) fragColor = W;\n    #endif\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}