{"ver":"0.1","info":{"id":"WttyRX","date":"1609688681","viewed":596,"name":"Simple Lava Lamp ","username":"PQuinn","description":"A shader that simulates a lava lamp.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["lavalamp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(int i) {  // produce some \"random\" numbers to vary the blobs\n    return sin(float(i) * 1.64);\n}\n\nvec3 get_blob(int i, float time){\n    // Blob movement parameters\n    float spd = .25;\n    float move_range = .5;\n    // ---\n    float x = float(i);    \n    vec2 center = vec2(.5,.5) + .1 * vec2(rand(i),rand(i+42));    \n    center += move_range * vec2(sin(spd * time * rand(i+2)) * rand(i + 56), -sin(spd * time) * rand(i*9));\n    float radius = .1 * abs(rand(i+3));    \n    return vec3(center.xy,radius);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // Shading parameters\n    vec3 blob_color_center = vec3(0,0,1); // blue center\n    vec3 blob_color_edge = vec3(1,0,1); // magenta edges\n    vec3 bg_col = vec3(255, 244, 122)/256.; // background color is light orange  \n    int num_blobs = 10;    \n    float thresh = 3000.; // determine size of balls  (larger num = smaller balls)\n    \n    vec2 uv = fragCoord/iResolution.xy;   \n    float aspect = iResolution.y/iResolution.x;\n    uv.y *= aspect;      \n    \n    float dist_sum = 0.;\n    // use metaballs for blobs\n    for (int  i = 0; i < num_blobs; i++){      \n        vec3 blob = get_blob(i,iTime);\n        float radius = blob.z;\n        vec2 center = blob.xy;       \n        center.y *= aspect;\n        float dist_to_center = max(length(center - uv)+radius/2.,0.); // add some radius to vary blob size\n        float tmp =  (dist_to_center * dist_to_center) ;\n        dist_sum += 1. / (tmp*tmp);   \n      }\n       \n    fragColor = vec4(bg_col, 0); \n    if (dist_sum > thresh){\n        float t = smoothstep(thresh, 0., dist_sum-thresh);\n        vec3 col = mix(blob_color_center, blob_color_edge, t);\n        fragColor = vec4(col, 0);\n    }   \n       \n}","name":"Image","description":"","type":"image"}]}