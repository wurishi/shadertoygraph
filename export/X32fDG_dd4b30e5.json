{"ver":"0.1","info":{"id":"X32fDG","date":"1733529839","viewed":76,"name":"Round Sobel TryroT136","username":"TryroT136","description":"a","likes":0,"published":3,"flags":2,"usePreview":0,"tags":["sobel","circle","edge"],"hasliked":0,"parentid":"4XjfDG","parentname":"Round Blur TryroT136"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float NUM = 30.0;\nfloat DIST = 0.01;\nfloat THRESH = 0.03;\n\nconst float pi = 3.14159265358;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0.0);\n    float place = 0.0;\n    \n    for (float i=1.0; i<=NUM; i++) {\n        place = ((2.0*pi)/(NUM/i))+(pi/2.0);\n        col += texture(iChannel0, uv+DIST*vec2(cos(place)*(iResolution.y/iResolution.x),sin(place))).rgb;\n    }\n    \n    col /= NUM;\n    \n    col = texture(iChannel0, uv).rgb - col;\n    \n    if ((col.r+col.g+col.b)/3.0 > THRESH) {\n        col = vec3(1.0);\n    } else {\n        col = vec3(0.0);\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}