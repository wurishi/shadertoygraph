{"ver":"0.1","info":{"id":"4ffBRB","date":"1731925440","viewed":54,"name":"Modified sobel shader for webcam","username":"alexChecker","description":"sobel shader but with modified kernel","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["sobel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t)\n{\n    vec3 a= vec3(0.5,0.5,0.5);\n    vec3 b= vec3(0.5,0.5,0.5);\n    vec3 c= vec3(1.0,1.0,1.0);\n    vec3 d= vec3(0.263,0.416,0.557);\n    \n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy*2.0-iResolution.xy)/iResolution.y;\n    vec2 uv0=fragCoord.xy/iResolution.xy;\n\n    \n    mat3 sobelX = mat3(-1.0,-2.5,-1.0,0.0,0.5,0.0,1.0,2.5,1.0);\n    mat3 sobelY = mat3(-1.0,0.0,1.0,-2.5,0.5,2.5,-1.0,0.0,1.0);\n    \n    float sumX=0.0;\n    float sumY=0.0;\n    \n    for(int i=-1;i<=1;i++)\n    {\n        for(int j=-1;j<=1;j++)\n        {\n            float x =(fragCoord.x+float(i))/iResolution.x;\n            float y =(fragCoord.y+float(j))/iResolution.y;\n            \n            sumX+=length(texture(iChannel0,vec2(x,y)).xyz)*float(sobelX[1+i][1+j]);\n            sumY+=length(texture(iChannel0,vec2(x,y)).xyz)*float(sobelY[1+i][1+j]);\n        }\n    }\n    \n    float g = abs(sumX)+abs(sumY);\n    \n    \n    float d = length(uv);\n    vec3 col = palette(d);\n    d=sin(d*8.+iTime)/8.;\n    d=abs(d);\n    d=0.2/d;\n    col*=d;\n    \n    //fragColor=vec4(g,g,g,1.0);\n    if(g>0.5)\n    {\n        fragColor = vec4(texture(iChannel0,uv0));//fragColor = vec4(col,1.0); // vec4(palette(g*8.+iTime)/3.0,1.0); // vec4(0);\n    }\n    else\n    {\n        fragColor = vec4(0.0); //vec4(texture(iChannel0,uv0));\n    }\n    //fragColor =vec4(palette((0.2/g)*8.+iTime)/8.0,1.0);\n}","name":"Image","description":"","type":"image"}]}