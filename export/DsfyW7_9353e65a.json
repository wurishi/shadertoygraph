{"ver":"0.1","info":{"id":"DsfyW7","date":"1686843876","viewed":56,"name":"Metaball Flames","username":"ascomycody","description":"Crude implementation of metaballs and an LCG to generate random positions and velocities.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["metaballs","fire","flames"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_PARTICLES 200\n\n#define RAD 0.1\n#define VEL_LIM 0.1\n#define VEL_OFF 1.75\n\n#define BASE_SEED 277\n\n#define LCGDIV  0.000007437377283274825965371571369072\n#define FOP 1.2732395447351626861510701069801\n\nvec2 randNum(int seed )\n{\n    int m = 134456;\n    int a = 8121;\n    int c = 28411;\n    int x = seed;\n    \n    int its = 2;\n    \n    for( int i = 0; i < its; i++ ){\n        x = int( floor( mod( float( (a * x) + c), float(m) ) ) );\n    }\n    \n    float posx = float(x) * LCGDIV;\n    posx *= iResolution.x/iResolution.y;\n    \n    for( int i = 0; i < its; i++ ){\n        x = int( floor( mod( float( (a * x) + c), float(m) ) ) );\n    }\n    \n    float posy = float(x) * LCGDIV;\n    \n    vec2 pos = vec2(posx, posy);\n    \n    return pos;\n}\n\nmat2 particles;\nmat2 velocities;\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n    float ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    \n    float EDGE = 0.325;\n    float ERAD = RAD + EDGE;\n    \n    \n    vec3 col = vec3( 0.5, 0.45, 0.4 );\n\n    for( int i = 0; i < NUM_PARTICLES; i++ ){\n    \n        int genseed = int( floor( mod( float(BASE_SEED) * float(i), 134456.0) ) );\n    \n        particles[i] = randNum(genseed);\n        particles[i].x = particles[i].x * (2. * (ratio + (ERAD * 2.))) - (ratio + (ERAD * 2.));\n        particles[i].y = particles[i].y * (2. + (ERAD * 4.)) - (1. + (ERAD * 2.));\n        \n        genseed = int( floor( mod( float(BASE_SEED) * float(i*2), 134456.0) ) );\n        \n        velocities[i] = (randNum(genseed) * 3. - 1.) * VEL_LIM;\n        velocities[i].y += VEL_OFF;\n        velocities[i].y += (particles[i].y + 1.) * 0.25;\n        \n        particles[i] = particles[i] + velocities[i] * iTime;\n        particles[i].x = mod(particles[i].x + (ratio + (ERAD * 2.)), (ratio + (ERAD * 2.)) * 2.) - (ratio + (ERAD * 2.));\n        particles[i].y = mod(particles[i].y + (1. + (ERAD * 2.)), (2. + (ERAD * 4.))) - (1. + (ERAD * 2.));\n        \n        float radius = RAD * (particles[i].y + 1.) * 1. - 0.325;\n        float eradius = radius + ((EDGE * (particles[i].y + 1.)) * 0.25 + 0.5);\n        \n        col *= smoothstep(radius, eradius, length(uv - particles[i]));\n    }\n    \n    // Output to screen\n    fragColor = vec4(smoothstep(0.25, 0.1, col + 0.15) + smoothstep(0.35, 0.01, sqrt(smoothstep(ERAD, RAD, col))),1.0);\n}","name":"Image","description":"","type":"image"}]}