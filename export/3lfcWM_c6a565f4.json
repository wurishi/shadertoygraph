{"ver":"0.1","info":{"id":"3lfcWM","date":"1592166903","viewed":58,"name":"tic waves","username":"tic_is_mad","description":"breathe","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ticnoisetest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat rand(in float t) {\n    return fract(sin(t * 10000.));\n}\n\n// 2D value noise function\nfloat noise(in vec2 st)\n{\n    //st += iTime;\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    \n    float c = rand(i);\n    float d = rand(i + vec2(1.0, 0.0));\n    float a = rand(i + vec2(0.0, 1.0));\n    float b = rand(i + vec2(1.0, 1.0));\n    \n    // smooth interpolation\n    \n    // cubic hermine curve (smoothstep)\n    vec2 u = f * f * (3.0 - 2.0*f);\n    // bilinear interpolation\n    float n = ((b - d - a + c) * u.x * u.y + (d - c) * u.x + (a - c) * u.y + c);\n    \n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord / iResolution.xy;\n    st.x *= iResolution.x / iResolution.y;\n    \n    vec2 grid = vec2(10.0, 10.0);\n    st *= grid;\n    \n    float n = noise(vec2(distance( st, vec2(3.0 * sin(iTime) - 5.0, 5.0) ) ));\n    \n    float val = 1.0;\n    for(int i = 0; i < 20; ++i)\n    {\n        for(int j = 0; j < 20; ++j)\n        {\n            val *= smoothstep(0.4 * n, 0.1 + 0.4 * n,distance(st, vec2(float(i), float(j))));\n        }\n    }\n   \n    float offset = 0.2;\n    vec3 color;\n    color.r = val - offset;\n    color.g = val;\n    color.b = val + offset;\n    \n    //color = vec3(n);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}