{"ver":"0.1","info":{"id":"7lVGDw","date":"1637992038","viewed":84,"name":"Mandelbrot x4 Animated","username":"adamjmurray","description":"Animated version of https://www.shadertoy.com/view/7lKGDw","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"7lKGDw","parentname":"Mandelbrot x4"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float iterations = 40.;\nconst float zoom = 1.2;\nconst float quality = 2.;\n\nvec2 cmul(vec2 a, vec2 b) { // complex multiplication\n    return vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x);\n}\nvec2 cdiv(vec2 a, vec2 b) { // complex division\n    return vec2(a.x*b.x+a.y*b.y, -a.x*b.y+a.y*b.x) / (b.x*b.x+b.y*b.y);\n}\n\nvec3 hsl2rgb(float h, float s, float l) {\n  float hp = 6. * mod(h,1.);\n  float c = s - s * abs(2.*l - 1.);\n  float x = c - c * abs(mod(hp,2.) - 1.);\n  float m = l - c/2.;\n  if      (hp <= 1.) return vec3(c,x,0) + m;\n  else if (hp <= 2.) return vec3(x,c,0) + m;\n  else if (hp <= 3.) return vec3(0,c,x) + m;\n  else if (hp <= 4.) return vec3(0,x,c) + m;\n  else if (hp <= 5.) return vec3(x,0,c) + m;\n  else               return vec3(c,0,x) + m;\n}\n\nvec3 draw(vec2 c) {\n    vec2 z = vec2(1, 0);\n    vec2 shift = vec2(cos(iTime/5.)/2., 0);\n        \n    float i = 0.;    \n    while (i < iterations) {\n        vec2 z2 = cmul(z, z);\n        z =  cmul(c, (z2 + cdiv(vec2(1, 0), shift + z2)));\n        \n        if (length(z) > 16.) break;\n        i++;\n    }\n  \n    if (i >= iterations) {\n        return vec3(0,0,0);\n    } else {\n        float hue = (i - log2(log(length(z))))/iterations;\n        return hsl2rgb(hue, 0.5, 0.5);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {     \n    vec3 color = vec3(0,0,0);\n    float samples = 0.;\n  \n    float subpixel = 1./quality;\n    for (float x=0.; x<1.; x+=subpixel) {\n        for (float y=0.; y<1.; y+=subpixel) {\n            vec2 subCoord = fragCoord + vec2(x,y);\n            vec2 coord = (2.*subCoord - iResolution.xy)/iResolution.y;\n            color += draw(coord/zoom);\n            samples++;\n        }\n    }\n    fragColor = vec4(color/samples, 1);\n}","name":"Image","description":"","type":"image"}]}