{"ver":"0.1","info":{"id":"fl2BRt","date":"1652619829","viewed":67,"name":"xor pattern experiment","username":"_JZ","description":"modulo + xor experiment\np = (abs(x)*1000) ^ (i*100)) * sqrt(abs(y))/(8+1000*(sin(t/3-pi)+1.2))*2\nq = (p%(i-sin(t/10)*10))/i-1;","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","xor"],"hasliked":0,"parentid":"sdVGWV","parentname":"(x^y)%9"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float time = iTime;\n    time = abs(time);\n    //zoom\n    float coords_div = (0.1+sqrt(abs(sin(time/(6.28*2.0)))*3.0)*1.0);\n    \n    //pan\n    vec2 coords_base = vec2(-50.0,-100.0);\n    float coords_add_x = 115.0*sin(time/10.0)*10.0;\n    float coords_add_y = 15.0*sqrt(time*16.0)+(time/3.0)*(time/(time-2.0))*20.0+sin(max(0.0,(time-2.0)*100.0)/1000.0)*200.0;\n    vec2 coords_add = coords_base + vec2(coords_add_x,coords_add_y)+vec2(-iResolution.x/2.0,-iResolution.y/2.0);//vec2(12,12)*time*4.0+vec2(-iResolution.x/2.0,-iResolution.y/2.0);\n    vec2 new_coords = (fragCoord/1000.0)*1000.0/coords_div+coords_add;\n    \n    \n    //mouse input influence\n    vec2 m_pos = iMouse.xy/coords_div+coords_add;\n    bool is_pressed = iMouse.z>0.0;\n    \n    float mouse_influence_mult = 0.0;\n    if(is_pressed){\n        mouse_influence_mult = 0.0;\n        time = time+10.0;\n    }\n    \n    float mouse_influence = pow((max(0.0,min(300.0, (200.0/coords_div - abs(length(new_coords-m_pos))))))/(20.0-abs(sin(time/2.0)*20.0)),2.1);\n    \n    \n    //polar coords for color\n    float r = sqrt(new_coords.x*new_coords.x+new_coords.y*new_coords.y);\n    float phi = acos(new_coords.x/r);\n    if(r<0.0){\n        phi = -phi;\n    }\n    vec2 newcords_polar = vec2(r,phi);\n    \n\n    vec3 col = vec3(0,0,0); //0.5 + 0.5*cos(time-abs(uv.xyx-vec3(0.5,0.5,0.5))*vec3(1,2,4));\n    //index of pixel\n    int i_index = int(new_coords.y*iResolution.x/1.0+new_coords.x);\n    \n    //pattern\n    int xor_res = (int(abs(new_coords.x)*1000.0) ^ int(float(i_index*100)*sqrt(abs(new_coords.y))/2.0/(8.0+1000.0*(sin(time/3.0-3.14)+1.2))));\n    float pattern1 = float(xor_res%(int(float(i_index)-sin(time/10.0))*10)/i_index-1);\n    float pattern2 = 1.0-float(int(float(xor_res)*time/10.0)%(int(float(i_index/2)-sin(time/10.0))*5)/i_index-1);\n    float pattern2_mult = float(int(int(pattern2)==0));\n    \n    float phase = max(0.0,min(1.0,sin(time/8.0)*2.0));\n   \n    float red = pattern1/2.0*phase+(0.5 + 0.1*mouse_influence_mult*mouse_influence)*(1.0-phase);\n    float green = pattern1/2.0*(1.0-phase)+(0.5*phase-mouse_influence_mult*(mouse_influence));//1.0*phase + 0.1*mouse_influence_mult*mouse_influence;\n    float blue =  sqrt(pattern2)*1.0;//sqrt(pattern2)*1.0;\n    \n    col = vec3(red,green,blue);\n    \n    if(int(pattern1)==0){\n        col = min(vec3(0.5,0.5,1.0),1.0-col/0.3);\n        if(int(pattern2)==0){\n            col = min(vec3(1.0,1.0,1.0),col*1.3);\n        }\n    }else{\n            col = min(vec3(1.0,1.0,1.0),col*0.1);\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}