{"ver":"0.1","info":{"id":"wsBcW1","date":"1586537746","viewed":60,"name":"pattern_practice_01","username":"bhuwan0000","description":"pattern practice","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pattern","rotation","tile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nvec2 rotate2D(vec2 st, float angle, vec2 rot_cent){\n    vec2 rt = rot_cent;\n    st -= rt;\n    st =  mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle)) * st;\n    st += rt;\n    return st;\n}\n\nfloat box(vec2 st, vec2 size)\n{\n    \n    float asp = iResolution.x/iResolution.y;\n    st = rotate2D(st, PI*0.25, vec2(asp, 1.));\n    st += vec2(-asp, -1.0);\n    \n    vec2 s = size;\n    size = (vec2(1.0)-size)*0.88888888889;\n    float aa = 0.01;\n    vec2 uv = smoothstep(-s*0.88888888889, -(s*0.88888888889)+aa, st);\n    uv *= smoothstep(size, size+aa, vec2(1.)-st);\n    \n    return uv.x*uv.y;\n}\n\nfloat line(vec2 st, float size)\n{\n    size -= 0.05;\n    //st += vec2(0.5, 0.0);\n    float d = smoothstep(size, size+0.01, st.x);\n    d+= smoothstep(size/1.8, (size/1.8)+0.01, st.y);\n    return d;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float scale = 8.0;\n    uv = fract(uv*scale);\n    uv -= 0.5;\n    uv *= 2.0;\n    \n    float asp = iResolution.x/iResolution.y;\n    uv.x *= asp;\n    vec3 col = vec3(uv, 0.0);\n    \n\t\n    //box\n    vec2 size = vec2(0.5);\n    float rect1 = box(abs(uv), size);\n    float rect2 = box(abs(uv), size-0.08);\n    float rect = rect1-rect2;\n    rect = 1.0-rect;\n    \n    //line\n    float lin = line(abs(uv), asp)*(1.0-rect1);\n    lin = 1.0-lin;\n    \n    // Output to screen\n    col = vec3(rect*lin)*1. + vec3(uv, 0.0)*0.;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}