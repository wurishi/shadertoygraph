{"ver":"0.1","info":{"id":"lffcDl","date":"1722017422","viewed":90,"name":"Spiral of Circles","username":"incre_ment","description":"Just some more daily code.  Nothing new or fancy.","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["domainrepetition","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159;\nfloat TAU = 2.*3.14159;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = ( fragCoord - .5* iResolution.xy ) /iResolution.y;\n   vec3 col = vec3(0.);   \n   float tt = fract(-.5*iTime);   \n   \n   // Domain repetition and cellID\n   float scale = 10.;\n   uv *= scale;  \n   vec2 cellID = floor(uv + .5);\n   uv = fract(uv - .5) - .5;  \n  \n   // Neighbor checking\n   float c1 = 1e20;\n   float c2 = 1e20;\n   for (int i = -1; i <= 1; i++)\n     for (int j = -1; j <= 1; j++){\n       vec2 nCheck = vec2(i,j);\n       // Offset for trig functions (spiral)\n       float trigOff = length(cellID + nCheck) + atan(cellID.y + nCheck.y, cellID.x + nCheck.x);        \n       float cRad = .4 + .3*sin(PI + TAU*tt + trigOff);\n       float n1 = abs(length(uv - nCheck) - cRad) - .015 + .015*sin(TAU*tt + trigOff);\n       c1 = min(c1,n1);\n       float n2 = length((uv) - nCheck) - .15 + .15*sin(TAU*tt + trigOff);\n       c2 = min(c2,n2);\n     }    \n   float w = 10./iResolution.y;  \n   col += smoothstep(w,-w,c1);\n   col += smoothstep(w, -w, c2);\n   col += abs(.02/c2);\n\n   // Output to screen\n   fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}