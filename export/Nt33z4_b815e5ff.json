{"ver":"0.1","info":{"id":"Nt33z4","date":"1635755673","viewed":96,"name":"Voronoi Patterns Shader","username":"arjunpandey","description":"Playing around with Voronoi","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hash3( vec2 p )\n{\n    vec3 q = vec3( dot(p,vec2(100,300)), \n\t\t\t\t   dot(p,vec2(250,150)), \n\t\t\t\t   dot(p,vec2(400,500)) );\n\treturn fract(sin(q) * 40000.54);\n}\n\nfloat voronoise( in vec2 p, float u, float v )\n{\n\tfloat k = 1.0 + 63.0 * pow(1.0 - v,6.0);\n\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    \n\tvec2 a = vec2(0.0,0.0);\n    for( int y=-2; y<=2; y++ )\n    for( int x=-2; x<=2; x++ )\n    {\n        vec2  g = vec2( y, x );\n\t\tvec3  o = hash3( i + g ) * vec3(u,u,1.0);\n\t\tvec2  d = g - f + o.xy;\n\t\tfloat w = pow( 1.0 - smoothstep(0.0,1.005, length(d)), k );\n\t\ta += vec2(o.z * w,w);\n    }\n\t\n    return a.x/a.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.xx;\n\n    vec2 p = 0.5 - 0.5 * sin( iTime * vec2(1.0,0.5) );\n    \n\tif( iMouse.w > 0.1 ) p = vec2(0.0,1.0) + vec2(1.0,-1.0) * iMouse.xy/iResolution.xy;\n\t\n\tp = p*p*(2.5 - 1.5 * p);\n\tp = p*p*(2.5 - 1.5 * p);\n\tp = p*p*(2.5 - 1.5 * p);\n\t\n\tfloat f = voronoise( 45.0 * uv, p.x, p.y );\n\t\n\tfragColor = vec4( f, f, f, 1.0 );\n}","name":"Image","description":"","type":"image"}]}