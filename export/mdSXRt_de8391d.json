{"ver":"0.1","info":{"id":"mdSXRt","date":"1670772328","viewed":228,"name":"imagemorphwowcool","username":"AlreadyTaken","description":"if this works out i have a beier neely like morphing. if not i have something else. \nLater:  I have something else. xD\nUpdate: wow. ok this really kinda works.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["morph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define maxmorph 800\n#define pi 3.1415926\n\nfloat avg(vec3 v) { return (v.x + v.y + v.z) / 3.0; }\n\nbool inRange(vec2 coord, vec2 iRes) {\nreturn ((coord.x/iRes.x) > 0. && !((coord.x/iRes.x)> 1.0) && (coord.y/iRes.y) > 0. && !((coord.y/iRes.y)> 1.0) );\n\n}\n\nbool isContour(vec2 fragCoord, sampler2D sam, vec2 iRes, float limit) {\n\n    float src = avg(texture(sam, fragCoord/iRes).rgb);\n    float src_sx = avg(texture(sam, (fragCoord + vec2(2.0, 0.0))/iRes).rgb);\n    float src_sy = avg(texture(sam, (fragCoord + vec2(0.0, 2.0))/iRes).rgb);\n    vec2 edges = vec2(src - src_sx, src - src_sy);\n    \n    float mag = length(edges);\n    \n    vec3 contour = vec3(mag/src);\n    bool result = false;\n    if (contour.r >= limit) result = true;\n    return result;\n}\n\nvec2 distortPos (vec2 current, vec2 target) {\nfloat radius = 10.;\nfloat dist = distance(current,target);\nfloat radiusDist = 0.5*abs(radius-dist);\nfloat distort = 1.- ((sin(radiusDist)+1.0)*0.5);\nreturn current*distort;\n}\n\n\nvec2 pointAtAngle(vec2 pos, float radius, float angle) {\nvec2 result = pos;\nresult.x = pos.x + (radius*cos(angle));\nresult.y = pos.y +(radius*sin(angle));\nreturn result;\n\n}\n\n\n\nvec4 wrapping(sampler2D origin, vec2 fragCoord, sampler2D morphSource, vec2 iRes, float limit) {\n     \nvec4 result = vec4(0.,0.,0.,0.);\n result = vec4(texture(origin, fragCoord/iRes).rgb, 1.);\nbool cont = isContour(fragCoord, morphSource, iRes, limit);\n//nothing to do\n\n\nif(cont) {\nresult = vec4(texture(origin, fragCoord/iRes).rgb, 1.);\nreturn result;\n}\nelse {\nvec2 pos = fragCoord/iRes;\nbool abort = false;      \nfor(int r = 2; r < maxmorph+2;r++ ) {\n \n  for(int deg = 0; deg<180; deg+=45) {\n   float rad = (float(deg)*(pi/180.));\n  vec2 fRad = pointAtAngle(fragCoord,float(r),rad);  \n\n  if(inRange(fRad, iRes) && isContour(fRad, morphSource, iRes, limit)) {\n   vec2 distortPos = distortPos(pos,fRad/iRes.xy);\n   result = vec4(texture(origin,distortPos).rgb, 1.0);\n   abort = true;  \n}\n if(abort) break;\n}\n\n if(abort) break;\n  \n}\n\nreturn result;\n\n}\n\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n     vec4 greenTest = vec4(0.0,1.,0.,1.);\n     float timeforward = 1.0 - ((1.+cos(iTime))*0.5);\n     vec4 origA= texture(iChannel1,fragCoord/iResolution.xy );\n     vec4 contA = wrapping(iChannel1, fragCoord, iChannel0, iResolution.xy, 0.125);\n     vec4 origB= texture(iChannel0,fragCoord/iResolution.xy );\n     vec4 contB = wrapping(iChannel0, fragCoord, iChannel1, iResolution.xy, 0.0625);\n     vec4 from = mix(origA,contB, timeforward);\n     vec4 to = mix(contA,origB, timeforward);\n     fragColor = mix(from,to,1.*timeforward);\n     vec4 m = iMouse / iResolution.x;\n     if(m.z > 0.) { \n      //sanity check\n          fragColor = mix(origA,origB,1.*timeforward);\n     }else {\n          fragColor = mix(from,to,1.*timeforward);\n     }\n\n    \n}","name":"Image","description":"","type":"image"}]}