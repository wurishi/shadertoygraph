{"ver":"0.1","info":{"id":"Xt3BDH","date":"1539311545","viewed":112,"name":"Moon Prototype","username":"Besisi","description":"Moon Prototype","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["moon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec2 p) \n{\n\treturn fract(sin(dot(p.xy, vec2(5.34, 7.13)))*5865.273458);   \n}\n\nvec2 hash2(vec2 p ) \n{\n\treturn fract(sin(vec2(dot(p, vec2(123.4, 748.6)), dot(p, vec2(547.3, 659.3))))*5232.85324);   \n}\n\nfloat noise(vec2 p) \n{\n    vec2 n = floor(p);\n    vec2 f = fract(p);\n    f = f * f * f * (3.0 - 2.0 * f);\n    vec2 add = vec2(1.0, 0.0);\n    float h = mix( mix(hash(n+add.yy), hash(n+add.xy), f.x), \n                   mix(hash(n+add.yx), hash(n+add.xx), f.x), f.y);\n        \n    return h;\n}\n\n//inspiration and a few lines of code from IQ's Pirates https://www.shadertoy.com/view/ldXXDj\nfloat fbm(vec2 p) \n{\n\tfloat h = 0.0;\n\tfloat a = 0.5;\n\tfor (int i = 0;i<4;i++) \n    {\n      //h+=noise(p)*a;\n\t\th+= texture(iChannel0, p).x*a; \n\t\tp*=2.0;\n\t\ta*=0.5;\n    }\n\treturn h;\n}\n\nvec3 project(vec2 p) \n{\n \treturn vec3(p.x, p.y, sqrt(-(p.x*p.x+p.y*p.y-0.24)));   \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     //set uv coordinates\n\tvec2 uv = (-iResolution.xy+2.0*fragCoord.xy) / iResolution.y;\n    //project regular coordinates onto curved surface\n    vec3 n = project(uv);\n    //vec3 n = vec3(1.0f, 1.0f, 1.0f);\n    \n    //compute shading for curved moon\n    float angle = iTime;\n    vec3 sun = vec3(sin(angle*0.5)*2.0, 0.0, cos(angle*0.5)*2.0);\n    //vec3 sun = vec3(0.0f, 1.0f, 0.0f);\n    vec3 I = sun;\n    I = normalize(I);\n    float s = dot(n, I);\n    s = clamp(s*1.9, 0.0, 1.0);\n\n    //moon\n    float dist = length(uv);\n    vec3 moon = vec3(0.99, 0.99, 0.9);\n    moon = moon*(1.0-0.2*smoothstep(0.4, 0.44, dist));\n    //vec3 vtex = vec3(0.9+0.1*voronoi(uv*10.0));\n    vec3 vtex = vec3(0.0f, 0.0f, 0.0f);\n\tfragColor = vec4(((mix(moon, vtex, fbm(uv*0.02))))*s, 1.0);   \n   \n}","name":"Image","description":"","type":"image"}]}