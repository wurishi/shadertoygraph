{"ver":"0.1","info":{"id":"dtX3R7","date":"1671491516","viewed":61,"name":"attempt at colorizing b/w","username":"ianertson","description":"Tried to colorize a black and white video","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorizing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 RED = vec3(1.0, 0.0, 0.0);\nconst vec3 GREEN = vec3(0.0, 1.0, 0.0);\nconst vec3 BLUE = vec3(0.0, 0.0, 1.0);\n\n\nvec3 fix(vec3 x) {\n  return x / (x + 0.155) * 1.019;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;  \n    vec3 video = texture(iChannel0, uv).rgb;\n    \n    vec3 R = mix(video, video*RED, luma(video*RED));\n    vec3 G = mix(video, video*GREEN, luma(video*GREEN));\n    vec3 B = mix(video, video*BLUE, luma(video*BLUE));\n    vec3 col = (video+(R+G+B)) / 1.6;\n    \n    col = pow(col, vec3(1.0 / 0.006));\n    \n    col = fix(col);\n    \n    col = video*col;\n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float luma(vec3 color) {\n  return dot(color, vec3(0.299, 0.587, 0.114));\n}","name":"Common","description":"","type":"common"}]}