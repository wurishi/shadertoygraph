{"ver":"0.1","info":{"id":"ldyyRK","date":"1522661886","viewed":830,"name":"M.A.M.","username":"leon","description":"Tribute to Marc-Antoine Mathieu.  \nShadertoy version of a 8k party prod made for Revision 2018.  \nMusic by Alkama.","likes":36,"published":1,"flags":64,"usePreview":0,"tags":["raymarching","demoscene","revision"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"lsSXDw","filepath":"https://soundcloud.com/leon-denise/sweet-hug-by-alkama","previewfilepath":"https://soundcloud.com/leon-denise/sweet-hug-by-alkama","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// M.A.M. by Leon Denise aka ponk 01 / 04 / 2018\n// Tribute to Marc-Antoine Mathieu.\n// Shadertoy version of a 8k party prod made for Revision 2018.\n// Thanks to koltes, lamogui, wsmind, halcy, iq, LJ, Duke, mercury, blueberry, mentor.\n\n#define time mod(iTime,103.)\n//#define HD\n\n#ifdef HD\n#define RAY_STEP 100.\n#define RAY_DAMPING .5\n#else\n#define RAY_STEP 50.\n#define RAY_DAMPING .8\n#endif\n\nconst float PI = 3.14159;\nconst float TAU = 6.28318;\nconst float aFadeIn1 = 6.;\nconst float aLampsIn = 20.;\nconst float aLibraryIn = 28.;\nconst float aLibrarySwingIn = 50.;\nconst float aLibraryTwistIn = 40.;\nconst float aRotate = 80.;\nconst float aDoor = 60.;\nconst float aPaper1 = 64.;\nconst float aPaper2 = 68.;\nconst float aPaper3 = 75.;\nconst float aPaper4 = 80.;\nconst float aDoor1 = 60.;\nconst float aDoor2 = 70.;\nconst float aDoor3 = 75.;\nconst float aDoor4 = 80.;\nconst float aDoor5 = 85.;\nconst float toroidalRadius = 30.;\nconst float innerRadius = 15.;\nconst vec2 roomCount = vec2(58., 90.);\nconst float roomHeight = 1.;\nconst float roomThin = .01;\n\n#define anim(start,delay) smoothstep(start, start+delay, time)\n#define repeat(p,c) (mod(p,c)-c/2.)\n#define sdist(p,r) (length(p)-r)\n\nfloat rng (vec2 seed) { return fract(sin(dot(seed*.1684,vec2(54.649,321.547)))*450315.); }\nmat2 rot (float a) { float c=cos(a),s=sin(a); return mat2(c,-s,s,c); }\nfloat sdBox( vec3 p, vec3 b ) { vec3 d = abs(p) - b; return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0)); }\nfloat amod (inout vec2 p, float count) { float an = TAU/count; float a = atan(p.y,p.x)+an/2.; float c = floor(a/an); c = mix(c,abs(c),step(count*.5,abs(c))); a = mod(a,an)-an/2.; p.xy = vec2(cos(a),sin(a))*length(p); return c; }\nfloat amodIndex (vec2 p, float count) { float an = TAU/count; float a = atan(p.y,p.x)+an/2.; float c = floor(a/an); c = mix(c,abs(c),step(count*.5,abs(c))); return c; }\nvec2 toroidal (vec2 p, float r) { return vec2(length(p.xy)-r, atan(p.y,p.x)); }\nvec3 getCamera (vec3 eye, vec3 lookAt, vec2 uv) {\n\tvec3 forward = normalize(lookAt - eye);\n\tvec3 right = normalize(cross(forward, vec3(0,1,0)));\n\tvec3 up = normalize(cross(right, forward));\n\treturn normalize(.6 * forward + uv.x * right + uv.y * up);\n}\n\nfloat mapRooms (vec3 pos) {\n\n\tfloat scene = 1000.;\n\tvec3 p = pos;\n\tvec3 pRoom = pos;\n\tvec3 pWall = pos;\n\tvec2 seed;\n\tfloat repeaty = toroidalRadius*TAU/roomCount.y;\n\n\t// toroidal distortion\n\tvec3 pTorus = p;\n\tpTorus.y += innerRadius + roomHeight / 2.75;\n\tpTorus.x += toroidalRadius;\n\tpTorus.xz = toroidal(pTorus.xz, toroidalRadius);\n\tpTorus.z += time * .03 + anim(aDoor2, 20.);\n\tpTorus.z *= toroidalRadius;\n\tpTorus.xzy = pTorus.xyz;\n\tpTorus.xz *= rot(anim(aDoor4, 30.) * 5.);\n\n\t// walls\n\tp = pTorus;\n\tp.y = repeat(p.y, repeaty);\n\tvec2 wall = vec2(1000.);\n\twall.x = max(abs(p.y)-roomThin, sdist(p.xz, innerRadius));\n\tamod(p.xz, roomCount.x);\n\tp.x -= innerRadius;\n\twall.y = max(abs(p.z)-roomThin, p.x);\n\tpWall = p;\n\n\t// room cell\n\tp = pTorus;\n\tp.xz *= rot(PI/roomCount.x);\n\tfloat py = p.y+repeaty/2.;\n\tseed.y = floor(py/repeaty);\n\tp.y = repeat(py, repeaty);\n\tseed.x = amod(p.xz, roomCount.x);\n\tp.x -= innerRadius-roomHeight/2.;\n\n\tpRoom = p;\n\tfloat chairSide = step(0., p.x);\n\n\tfloat salt = rng(seed);\n\tfloat pepper = rng(seed+vec2(.612,0.5023));\n\tfloat spice = rng(seed+vec2(.698,0.756));\n\n\t// ground\n\tscene = min(scene, p.x+roomHeight*.5);\n\n\tfloat table = 1000.;\n\tfloat tableHeight = .2+.1*salt;\n\tfloat tableThin = .001+.001*pepper;\n\tfloat tableWidth = .1+.2*spice;\n\tfloat tableLegThin = .005+.003*pepper;\n\tp = pRoom;\n\tp.x += roomHeight/2.-tableHeight;\n\tp.yz *= rot((salt*2.-1.)*.2);\n\ttable = min(table, max(abs(p.x)-tableThin, sdist(p.yz, tableWidth)));\n\tp.yz *= rot(pepper*TAU);\n\tp.yz = abs(p.yz)-tableWidth*.5+tableLegThin;\n\tp.x += tableHeight*.5;\n\ttable = min(table, sdBox(p, vec3(tableHeight*.5, tableLegThin, tableLegThin)));\n\n\tfloat chair = 1000.;\n\tp = pRoom;\n\tfloat chairHeight = .15+.07*mix(salt, pepper, chairSide);\n\tfloat chairWidth = .06+.07*mix(pepper, spice, chairSide);\n\tfloat chairLegThin = .002+.005*mix(spice, salt, chairSide);\n\tfloat chairSitThin = .01;\n\tfloat chairBackHeight = .05;\n\tp.yz *= rot(sin(salt * TAU));\n\tp.z = abs(p.z) - tableWidth - chairWidth*2.;\n\tp.yz *= rot(sin(mix(salt, pepper, chairSide)*TAU)*.6 + PI/2.);\n\tp.x -= chairHeight;\n\tp.x += roomHeight/2.;\n\tchair = min(chair, sdBox(p, vec3(chairSitThin, chairWidth, chairWidth)));\n\tchair = min(chair, sdBox(p+vec3(-chairHeight+chairBackHeight,chairWidth-chairLegThin,0), vec3(chairBackHeight, chairLegThin, chairWidth)));\n\tfloat chairArm = step(0.,p.y);\n\tp.yz = abs(p.yz)-chairWidth+chairLegThin;\n\tp.x += chairArm * chairHeight * .5;\n\tchair = min(chair, sdBox(p, vec3(chairHeight*mix(1.,.5,chairArm), chairLegThin, chairLegThin)));\n\n\tfloat door = 1000.;\n\tp = pTorus;\n\tseed.y = floor(p.y/repeaty);\n\tp.y = repeat(p.y, repeaty);\n\tp.xz *= rot(PI/roomCount.x);\n\tseed.x = amodIndex(p.xz, roomCount.x);\n\tsalt = rng(seed);\n\tpepper = rng(seed+vec2(.132,0.9023));\n\tspice = rng(seed+vec2(.672,0.1973));\n\tfloat doorWidth = .2+.05*pepper;\n\tfloat doorHeight = .3+.15*spice;\n\tamod(p.xz, roomCount.x);\n\tp.x -= innerRadius-roomHeight+doorHeight;\n\twall.x = max(wall.x, -sdBox(p, vec3(doorHeight, .1, doorWidth)));\n\tp.x += .2;\n\tp.z = abs(p.z)-.4;\n\twall.x = max(wall.x, -sdBox(p, vec3(doorHeight, .1, doorWidth * .5)));\n\n\t// window\n\tp = pTorus;\n\tseed.x = amodIndex(p.xz, roomCount.x);\n\tseed.y = floor((p.y+repeaty/2.)/repeaty);\n\tsalt = rng(seed);\n\tpepper = rng(seed+vec2(.132,0.9023));\n\tspice = rng(seed+vec2(.672,0.1973));\n\tvec2 windowRepeatWidth = vec2(.2+.2*salt, .4+.4*pepper);\n\tp.y = repeat(p.y+repeaty/2., repeaty);\n\tamod(p.xz, roomCount.x);\n\tp.x -= innerRadius-roomHeight/2.;\n\twall.y = max(wall.y, -sdBox(p, vec3(windowRepeatWidth.x, windowRepeatWidth.y, 1.)));\n\n\treturn min(scene, min(chair, min(table, min(wall.x, wall.y))));\n}\n\nfloat sdStairs (vec3 p) {\n\tfloat stairs = max(abs(p.x)-1., abs(p.y + 1. + floor(p.z) * .2)-.2);\n\tstairs = max(stairs, -(p.y + p.z * .2 + 1.));\n\tstairs = max(stairs, p.z-aDoor);\n\treturn stairs;\n}\n\nfloat sdPaper (vec3 pos) {\n\tpos.z -= 3.;\n\tfloat z = pos.z;\n\tfloat door = 1.-smoothstep(aDoor - 6., aDoor - 3., pos.z) * (1.-smoothstep(aDoor + 3., aDoor + 6., pos.z));\n\tpos.z -= time * 2.;\n\tfloat id = floor(pos.z/.5);\n\tpos.y += min(id, aDoor) * .1 + .35 + min(time, aDoor+1.) * .4 + sin(id*.5+time) * .3 * door;\n\tpos.y -= anim(aDoor, 1.);\n\tpos.xy *= rot(sin(pos.z * .3 + time));\n\tpos.x += sin(id*.5+time*2.+sin(pos.y+time))*.6*door;\n\tpos.z = repeat(pos.z, .5);\n\tvec3 p = pos;\n\tfloat d = sin(pos.x*2. - time);\n\tp.x = mix(p.x, abs(p.x), step(aPaper1, z)) - 2. * (1.-smoothstep(z - 10., z, aPaper1));\n\tp.y = mix(p.y, abs(p.y), step(aPaper2, z)) - 2. * (1.-smoothstep(z - 10., z, aPaper2));\n\tp.x = mix(p.x, abs(p.x), step(aPaper3, z)) - 2. * (1.-smoothstep(z - 10., z, aPaper3));\n\tp.y = mix(p.y, abs(p.y), step(aPaper4, z)) - 2. * (1.-smoothstep(z - 10., z, aPaper4));\n\tp.xz *= rot(d*.9);\n\tp.yz *= rot(d*2.6+id);\n\tfloat paper = max(0.,max(abs(p.y),max(abs(p.x)-.1, abs(p.z)-.1)));\n\tpaper = max(paper, id+8.);\n\treturn paper;\n}\n\nfloat sdLibrary (vec3 pos) {\n\tfloat scene = max(0., -abs(pos.x) + 1.5);\n\tfloat a = 1.-anim(aLibraryIn + abs(floor(pos.z)-25.)*.4, 10.);\n\tpos.y += a * 50.;\n\tpos.y -= 2.5;\n\tvec3 id = vec3(floor(pos.yz),0);\n\tpos.y += mix(1.,-1.,mod(id.y, 2.))*sin(time) * anim(aLibrarySwingIn, 5.);\n\tvec3 p = pos;\n\tp.y += id.y * .2;\n\tfloat y = p.y;\n\tid.x = floor(p.y);\n\tp.yz = repeat(p.yz, 1.);\n\tscene = max(scene, min(-abs(p.y) + .49, -abs(p.z) + .49));\n\tid.z = floor(pos.z/.1);\n\tfloat offset = .05 * sin((id.z+id.y+id.x) * 4.);\n\tp = pos;\n\tp.z = repeat(p.z, .1);\n\tscene = min(scene, max(-abs(p.x) + 1.7 - offset, abs(p.z)-.04));\n\tscene = max(scene, abs(pos.x) - 2.);\n\tscene = max(scene, y);\n\tscene = max(scene, pos.z-aDoor);\n\treturn scene;\n}\n\nfloat sdLamp (vec3 pos) {\n\tvec3 p = pos;\n\tfloat a = anim(aLampsIn, 5.);\n\tfloat z = floor(pos.z/2.);\n\tp.y -= 20. - 18. * a - z * .2*2.;\n\tp.z = repeat(p.z, 2.);\n\tp.y -= 10.;\n\tp.xy *= rot(sin(time * 2. + z)*.07);\n\tp.y += 10.;\n\tp.xz *= rot(p.y * 8. + time);\n\tfloat scene = sdist(p,.2);\n\tamod(p.xz, 5.);\n\tp.x -= max(.01, .19 * (1.-clamp(p.y*2., 0., 1.)));\n\tscene = min(scene, max(sdist(p.xz, .01*a), -p.y));\n\tscene = mix(10., scene, anim(aLampsIn, 1.));\n\tscene = max(scene, pos.z - aDoor);\n\treturn scene;\n}\n\nfloat sdDoor (vec3 pos) {\n\tpos.z -= aDoor;\n\tpos.y += .1 + aDoor*.2;\n\tvec3 p = pos;\n\tp.x = abs(p.x) - .5;\n\tp.x -= .5;\n\tp.xz *= rot(.6+smoothstep(aDoor-2., aDoor + 2., time) * 1.5);\n\tp.x += .5;\n\tp.y -= .5;\n\tfloat scene = sdBox(p, vec3(.5,1,.02));\n\tscene = min(scene, max(sdist(p.xy-vec2(0,1.), .5), abs(p.z)-.02));\n\tfloat x = p.x;\n\tp.x = repeat(p.x, .2);\n\tscene = max(scene, -abs(p.x)+.02);\n\tp.x = x;\n\tp.z += .04;\n\tp.y = abs(p.y)-.775;\n\tp.xy *= rot(-.1);\n\tscene = min(scene, sdBox(p, vec3(.39,.1,.01)));\n\tp.x = abs(p.x) - .2;\n\tscene = min(scene, max(sdist(p.xy, .02), abs(p.z)-.04));\n\treturn scene;\n}\n\nvec2 map (vec3 pos) {\n\tvec3 p = pos;\n\tfloat fade = (1.-smoothstep(aPaper1, aPaper1 + 5.,time));\n\tp.xz *= rot(sin(p.z * .2 + time) * .35*(1.-clamp(length(pos.z)/50., 0., 1.)));\n\tp.xy *= rot(sin(-p.z * .2 + time)*.5 * anim(aLibraryTwistIn, 5.) * fade);\n\tp.y -= min(time, aDoor) * .2;\n\tp.y -= sin(pos.z * .4) * .3 + pos.z * pos.z * .01;\n\tp.z += time;\n\tfloat paper = sdPaper(p);\n\tfloat dist = 100.;\n\tvec2 sdf = vec2(0);\n\tif (time < aDoor + 2.) {\n\t\tdist = min(min(min(sdLamp(p), sdStairs(p)), sdLibrary(p)), sdDoor(p));\n\t\tsdf.y = step(dist, paper);\n\t} else {\n\t\tpos.zy *= rot(.3);\n\t\tpos.y -= 1.7;\n\t\tdist = mapRooms(pos+vec3(0,.25,0));\n\t\tsdf.y = step(dist, paper) * 2.;\n\t}\n\tsdf.x = min(paper, dist);\n\treturn sdf;\n}\n\nvoid animCamera (inout vec3 eye, inout vec3 target) {\n\teye.y = mix(eye.y, 1., anim(aDoor1, 5.));\n\ttarget.y = mix(target.y, 1.1, anim(aDoor1, 5.));\n\teye = mix(eye, vec3(0,.9,-1.5), anim(aDoor1, 5.));\n\teye = mix(eye, vec3(0,12.,-1.5), anim(aDoor4, 5.));\n\teye = mix(eye, vec3(6,12.,-1.5), anim(aDoor5, 5.));\n\ttarget = mix(target, vec3(0,1,3), anim(aDoor3, 5.));\n\ttarget = mix(target, vec3(0,1,8), anim(aDoor4, 5.));\n\ttarget = mix(target, vec3(-15,0,3), anim(aDoor5, 5.));\n}\n\nvec4 raymarch () {\n\tvec2 uv = (gl_FragCoord.xy-.5*iResolution.xy)/iResolution.y;\n\tfloat dither = rng(uv.xx+uv.yy);\n\tvec3 eye = vec3(0,1,-1);\n\tvec3 target = vec3(0,0,1);\n\tanimCamera(eye, target);\n\tvec3 ray = getCamera(eye, target, uv);\n\tvec3 pos = eye;\n\tfloat shade = 0.;\n\tfloat total = 0.;\n\tvec2 sdf;\n\tfor (float i = 0.; i <= 1.; i += 1./RAY_STEP) {\n\t\tsdf = map(pos);\n\t\tfloat dist = sdf.x;\n\t\tif (dist < .0001) { shade = 1.-i; break; }\n\t\tif (total > 100.) { shade = 0.; break; }\n\t\ttotal += dist;\n\t\tdist *= RAY_DAMPING + .1 * dither;\n\t\tpos += ray * dist;\n\t}\n\n\tshade *= 1. - smoothstep(50., 99., total);\n\tshade *= mix(step(sdf.y,0.5), 1., anim(aFadeIn1, 5.));\n\tshade *= mix(anim(aDoor + 1., 5.), 1., step(sdf.y, 1.5));\n\tshade *= smoothstep(0.1, 1., time) * (1.-smoothstep(100., 103., time));\n\treturn vec4(smoothstep(.0, .8, shade));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = raymarch();\n}","name":"Image","description":"","type":"image"}]}