{"ver":"0.1","info":{"id":"sdKSRw","date":"1634438208","viewed":210,"name":"Aandeel","username":"Hamish","description":"For Aandeel","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["aandeel"],"hasliked":0,"parentid":"7lfXWS","parentname":"Falling Coloured Circles"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p) // https://www.shadertoy.com/view/XdGfRR\n{\n    #define UI0 1597334673U\n    #define UI1 3812015801U\n    #define UI2 uvec2(UI0, UI1)\n    #define UIF (1.0 / float(0xffffffffU))\n    uvec2 q = uvec2(ivec2(p)) * UI2;\n\tuint n = (q.x ^ q.y) * UI0;\n\treturn float(n) * UIF;\n}\n\nfloat circle(vec2 uv, float r, float b) {\n      \n    float d = length(uv);\n    \n    //it uses smoothstep to create a circle\n    //r is radius. b is blur\n    return smoothstep(r, r-b, d);\n}\n\nvec3 Layer(vec2 uv) {\n\n    vec3 col = vec3(0.);\n    \n    //gv creates coord system for each box\n    //id creates the (5,7) type coord system for all boxes.\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    //iterates through boxes (-1,-1) to (1,1) and adds the colour\n    //basically takes into account all the neighbouring boxes\n    //otherwise it just cuts off part of the circle at the box boundary\n    for (int y=-1;y<=1;y++) {\n        for (int x=-1;x<=1;x++) {\n            vec2 offs = vec2(x, y);\n            float n = Hash21(vec2(id+offs)); //pseudo rand between 0 and 1\n            float size = fract(n*420.);\n            float circle = circle( (gv-offs-vec2(n, fract(n*69.))+.5) , .25*n, .1);\n            //randomises the location in the box\n            vec3 colour = vec3(.8,.9,1.)*3.;\n            \n            col += circle*size*colour;\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y; \n    uv *= .5;\n    vec3 col = vec3(.03,.03,.08);\n        \n    //layers stuff\n    for (float i=0.; i<1.; i+=1./10.) {\n        float depth = fract(i);\n        float scale = mix(20., .5, depth) ;\n        float fade = depth*smoothstep(.9,.3,depth);\n        \n        col += Layer(vec2(uv.x*scale+i*256.,uv.y*scale+i*iTime))*fade;\n    }\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}