{"ver":"0.1","info":{"id":"43SGDh","date":"1708387623","viewed":76,"name":"Asahi illusion3","username":"altunenes","description":"Notice the central area remains constant white yet may seem brighter/darker over time :)\nother forms:\nhttps://www.shadertoy.com/view/MX23Wz\nhttps://www.shadertoy.com/view/DsfyRX","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["illusion","perception","psychophysics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//yet another \"brightness\" illusion...\nfloat PI = 3.14159265359;\n\nfloat curve(float x, float a, float b) {\n    float y = smoothstep(a, b, x) * smoothstep(b, a, x);\n    return pow(y, 0.08);\n}\n\nvec3 drawLeaf(vec2 uv, float ls, float le, float lw, float ang, float time, bool isLeft) {\n    \n    float cosA = cos(ang);\n    float sinA = sin(ang);\n    vec2 rotuv = vec2(cosA * uv.x - sinA * uv.y, sinA * uv.x + cosA * uv.y);\n    float angle = atan(rotuv.y, rotuv.x);\n    float radius = 1.0*length(rotuv);\n    angle = mod(angle, 2.0 * PI);\n    float normalang = angle / (2.0 * PI);\n    float leafRadius = mix(ls, le, curve(normalang, 0.5 - (lw / 2.0), 0.5 + (lw / 2.0)));\n    bool withinLeaf = radius >= ls && radius <= leafRadius;\n    float firstcol = smoothstep(ls, le, radius);\n    float colorShift = 0.5 + 0.5 * sin(time * 2.0 * PI); \n    float animcol = firstcol;\n    if (isLeft) {\n        animcol = mix(firstcol, 1.0 - firstcol, colorShift);\n    } else {\n        animcol = mix(1.0 - firstcol, firstcol, colorShift);\n    }\n    vec3 first_color = isLeft ? vec3(1.0, 1.0, 0.0) : vec3(0.0, 0.0, 0.0); \n    vec3 ended_color = isLeft ? vec3(0.0, 0.0, 0.0) : vec3(1.0, 1.0, 0.0); \n    vec3 leafColor = withinLeaf ? mix(first_color, ended_color, animcol) : vec3(1.0);\n    return leafColor;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = 1.8*(fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    uv.y += 0.25;\n    vec3 col = vec3(1.0);\n    int n = 16;\n    vec2 uvLeft = uv - vec2(-0.80, 0.25);\n    vec2 uvRight = uv - vec2(0.80, 0.25);;\n\n    for (int i = 0; i < n; ++i) {\n        float oriant = 2.0 * PI * float(i) / float(n);\n        vec3 lefone = drawLeaf(uvLeft, 0.2, 0.8, 0.05, oriant, iTime/8.0, true); \n        vec3 rightone = drawLeaf(uvRight, 0.2, .8,  0.05, oriant, -iTime/8.0, false); \n        col = min(col, lefone);\n        col = min(col, rightone);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}