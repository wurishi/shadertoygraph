{"ver":"0.1","info":{"id":"DsVGzd","date":"1678958118","viewed":119,"name":"Chladni simple","username":"jcponcemath","description":"A test to simulate Chaldni figures with rainbow colors :)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hsv","modelling","chladni"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat a = 1.5;\nfloat b = 2.0;\nfloat m = 1.0;\nfloat n = 2.0;\nfloat p1 = 1.0;\nfloat p2 = 1.0;\nfloat p3 = -1.0;\nfloat p4 = -1.0;\n\n// A function to generate Chladni patterns :)\nfloat Chladni(float a, float b, float m, float n, vec4 p, vec2 z, float t) {\n  float v1 = a * sin(PI * n * z.x + p.x * t ) * sin(PI * m * z.y + p.y * t);\n  float v2 = b * sin(PI * m * z.x + p.z * t) * sin(PI * n * z.y + p.w * t);\n  return v1 + v2;\n} \n\n// A mapping function from p5js\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\n // Convert from Hue,Saturation/Value to RGB\n // http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\n vec3 hsv2rgb(vec3 c) {\n   vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n   vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord -.5* iResolution.xy ) / iResolution.y;\n    \n    vec4 po = vec4(p1, p2, p3, p4);\n    float col = Chladni(a, b, m, n, po, uv, float(iTime) * 0.3);\n    \n    float c1 = map(col, -1.0, 1.0, 0.0, 0.9);\n    \n    vec3 hsv = vec3(c1, 1.0, 0.9);\n    //vec3 hsv = vec3(_arg, 1.0, 1.0);\n    vec3 rgb = hsv2rgb( hsv );\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}