{"ver":"0.1","info":{"id":"WsBcRh","date":"1586026951","viewed":103,"name":"Associated Legendre Polynomials","username":"jesusdz","description":"Several bands (l=0, l=1, l=2) of the associated Legendre Polynomials.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["basis","polynomials","legendre"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat P(int l, int m, float x)\n{\n    float pmm = 1.0;\n    if (m > 0)\n    {\n        float somx2 = sqrt((1.0-x)*(1.0+x));\n        float fact  = 1.0;\n        for (int i = 1; i <= m; i++)\n        {\n            pmm *= (-fact) * somx2;\n            fact += 2.0;\n        }\n    }\n    if (l == m) return pmm;\n    float pmmp1 = x * float(2*m + 1) * pmm;\n    if (l == m+1) return pmmp1;\n    float pll = 0.0;\n    for (int ll = m+2; ll <= l; ll++)\n    {\n        pll = (float(2*ll-1)*x*pmmp1-float(ll+m-1)*pmm) / float(ll - m);\n        pmm = pmmp1;\n        pmmp1 = pll;\n    }\n    return pll;\n}\n\nvec4 alphaOverCC(vec4 col1, vec4 col2)\n{\n    return mix(col1, col2, col2.a);\n}\n\nvec4 alphaOverCCA(vec4 col1, vec4 col2, float a)\n{\n    return mix(col1, col2, a);\n}\n\nvec4 line(float sd, vec3 color)\n{\n    return vec4(color, 1.0 - smoothstep(0.0, 0.02, abs(sd)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float x  = (0.6 * uv.x);\n \n    vec4 col = vec4(1.0);\n    \n    // l=0, m=0\n    col = alphaOverCCA(col, alphaOverCC(col, line(uv.y - P(0, 0, x) * 0.30, vec3(0.0, 0.0, 0.0))), step(0.0, mod(iTime, 4.0)));\n    // l=1, m=0, and 1\n    col = alphaOverCCA(col, alphaOverCC(col, line(uv.y - P(1, 0, x) * 0.30, vec3(0.5, 0.0, 0.0))), step(1.0, mod(iTime, 4.0)));\n    col = alphaOverCCA(col, alphaOverCC(col, line(uv.y - P(1, 1, x) * 0.30, vec3(0.0, 0.5, 0.0))), step(1.0, mod(iTime, 4.0)));\n    // l=2, m=0, 1, and 2\n    col = alphaOverCCA(col, alphaOverCC(col, line(uv.y - P(2, 0, x) * 0.30, vec3(1.0, 0.0, 0.0))), step(2.0, mod(iTime, 4.0)));\n    col = alphaOverCCA(col, alphaOverCC(col, line(uv.y - P(2, 1, x) * 0.30, vec3(0.0, 1.0, 0.0))), step(2.0, mod(iTime, 4.0)));\n    col = alphaOverCCA(col, alphaOverCC(col, line(uv.y - P(2, 2, x) * 0.30, vec3(0.0, 0.0, 1.0))), step(2.0, mod(iTime, 4.0)));\n    \n    // clipping x range [-1, 1]\n    col = mix(col, vec4(1.0), step(1.0, abs(x)));\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}