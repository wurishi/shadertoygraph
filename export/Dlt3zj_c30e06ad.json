{"ver":"0.1","info":{"id":"Dlt3zj","date":"1682741135","viewed":77,"name":"Eye fractal","username":"Ciubix8513","description":"A cool fractal I came across","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"sttXDB","parentname":"Mandelbrot set plotting"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 getCol(float coord,int ColNum) //From my other shader https://www.shadertoy.com/view/fdScRt\n{ \n    vec4[] cols =vec4[] (vec4(85,205,252,255),vec4(247,168,184,255),vec4(255),vec4(247,168,184,255),vec4(85,205,252,255));       \n    int arrLength = 5;\n    \n    if(ColNum == 1) \n        return cols[0];\n        \n    float cstep1 = 1.0 / float(ColNum - 1);//Num of subgradients = num of colors - 1\n    \n    for(int i = 1; i < ColNum; i++)\n    {\n        if(coord < cstep1 * float(i))\n        return mix(cols[int(mod(float(i-1),float(arrLength)))],cols[int(mod(float(i),float(arrLength)))], coord / cstep1 - float (i - 1));\n    }    \n    return vec4(coord);\n}\n\n\nvec2 complex_square(vec2 z){\n    return vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y);\n}\n\nvec2 complex_div(vec2 a, vec2 b){\n    float denumenator = 1.0 / (b.x * b.x + b.y * b.y);\n    return vec2((a.x * b.x + a.y * b.y) * denumenator, (a.y * b.x - a.x * b.y) * denumenator);\n}\n\nvec4 GetColor(vec2 uv,float i,float maxI)\n{\n   if(i == maxI)\n       return vec4(0);    \n    \n    return getCol((maxI * .15 + i)  / maxI,200) / 255.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 MinVals = vec2(-0.5,-0.5); \n    vec2 uv = (fragCoord / iResolution.y);//Get ss coords\n    uv = (uv + MinVals) * 4.0; //Offset and scale ss coords     \n    \n    vec2 coords = vec2(0);    \n    int iter = 0;\n    int maxIter = 1000;\n\n    //Some simple optimisations\n    if(uv.x < -1.34 || uv.x > 4.0 || abs(uv.y) > 1.65)\n        iter = maxIter;\n\n        \n    while(dot(coords,coords)<= 300.0 && iter < maxIter)\n    {\n        coords = complex_square(complex_div(coords,uv)) + uv;\n        iter++;\n    }    \n    // Output to screen\n    fragColor = GetColor(uv,float(iter) , float(maxIter));\n  \n}\n","name":"Image","description":"","type":"image"}]}