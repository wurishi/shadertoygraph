{"ver":"0.1","info":{"id":"7dGfRw","date":"1657830669","viewed":367,"name":"Polaroid Gyroidoscopic","username":"leon","description":"another gyroid toy","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["simple","gyroid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// playing with gyroid cyclic noise and polar coordinates\n// trying to find elegance with simplicity\n\n#define t iTime*.1\n\nfloat gyroid (vec3 seed) { return dot(sin(seed),cos(seed.yzx)); }\nfloat fbm (vec3 seed) {\n    float result = 0.;\n    float a = .5;\n    for (int i = 0; i < 3; ++i) {\n        result += sin(gyroid(seed/a)*3.+t/a)*a;\n        a /= 2.;\n    }\n    return result;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec3 p = vec3((fragCoord-iResolution.xy/2.)/iResolution.y,0);\n    vec3 color = vec3(p*.5+.5);\n    \n    p = vec3(\n        atan(p.y,p.x) * .5,\n        log(length(p)) - t,\n        t+p.y );\n    \n    float shade = (fbm(p)+1.)/2.;\n    fragColor = vec4(mix(color,vec3(1),shade)*shade, 1);\n}","name":"Image","description":"","type":"image"}]}