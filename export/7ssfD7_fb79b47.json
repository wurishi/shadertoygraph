{"ver":"0.1","info":{"id":"7ssfD7","date":"1644968539","viewed":201,"name":"Beats 'N Types #01","username":"Flopine","description":"Inspired by the Beats & Types playlist from 20syl\nhttps://www.youtube.com/playlist?list=PLF3lu5b2iqGUPzfHL2CNu__WT6xAImRXW","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","shadow","animation","outline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n// Inspired by the Beats & Types playlist from 20syl\n// https://www.youtube.com/playlist?list=PLF3lu5b2iqGUPzfHL2CNu__WT6xAImRXW\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define dt(sp, off) fract((iTime+off)*sp)\n#define bounce(sp,off) sqrt(sin(dt(sp,off)*PI))\n\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre)))\n#define crep(p,c,l) p-=c*clamp(round(p/c),-l,l)\n#define hash21(x) fract(sin(dot(x,vec2(13.4,21.8)))*4678.1)\n\nstruct obj{\n    float d;\n    int mat;\n    vec3 col;\n};\n\nobj minobj (obj a, obj b)\n{\n    if(a.d<b.d) return a;\n    else return b;\n}\n\nfloat box (vec3 p, vec3 c)\n{\n    vec3 q = abs(p)-c;\n    return min(0.,max(q.x,max(q.y,q.z)))+length(max(q,0.));\n}\n\nfloat sc (vec3 p, float d)\n{\n    p = abs(p);\n    p = max(p,p.yzx);\n    return min(p.x,min(p.y,p.z))-d;\n}\n\nobj ground (vec3 p)\n{\n    float d = abs(p.y+4.)-0.05;\n    return obj(d,1,vec3(0.4));\n}\n\nobj prim1 (vec3 p)\n{\n    float per = 3.5;\n    vec2 id = round(p.xz/per);\n    crep(p.xz,per,2.);\n    \n    float d = box(p,vec3(1.))-0.02;\n    if (mod(id.x,2.)>0.5 && mod(id.y,2.)>0.5) d = max(-sc(p,0.5),d);\n    \n    return obj(d,2,vec3(0.95));\n}\n\nobj prim2 (vec3 p)\n{\n    float off1 = 1.5, off2 = -1.8,\n    a = (TAU/4.)*(floor(iTime+off1)+dt(1.,off1)), a2 = (TAU/4.)*(floor(iTime+off2)+dt(1.,off2));\n    p.y -= 1.6; \n    vec3 pp = p;\n    \n    p.y -= bounce(2.,2.5)*1.5;   \n    float d = length(p)-0.7;\n    \n    p = pp;\n    p.y -= bounce(1.,off1)*3.;\n    p.xz += vec2(cos(a),sin(a))*3.5;\n    d = min(d,length(p)-0.5);\n    \n    p = pp;\n    p.y -= bounce(1.,off2)*4.;\n    p.xz += vec2(cos(a2),sin(a2))*7.;\n    d = min(d,length(p)-0.4);\n    \n    return obj(d, 3, vec3(1.,0.7,0.1));\n}\n\nobj SDF (vec3 p)\n{\n    p.yz *= rot(-atan(1./sqrt(2.)));\n    p.xz *= rot(PI/4.);\n\n    obj scene = prim1(p);\n    scene = minobj(scene,ground(p));\n    scene = minobj(scene, prim2(p));\n    \n    return scene;\n}\n\nvec3 gn (vec3 p, vec2 eps)\n{return normalize(SDF(p).d-vec3(SDF(p-eps.xyy).d,SDF(p-eps.yxy).d,SDF(p-eps.yyx).d));}\n\nvoid shadow (inout float s, vec3 ro, vec3 rd)\n{\n    float t;\n    vec3 p;\n    for (int i=0; i<20; i++)\n    {\n        p = ro+rd*t;\n        float d = SDF(p).d;\n        if (d<0.001)\n        {\n            s = .05;\n        }\n        if (t > 15.) break;\n        t += max(t,d+hash21(rd.xy)*0.01);\n    }\n}\n\nfloat AO (float e, vec3 p, vec3 n)\n{return SDF(p+e*n).d/e;}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 ro=vec3(uv*9.5,-50.), rd=vec3(0.,0.0,1.),p=ro, \n    col=vec3(0.5), l=vec3(3,10.,-5.);\n\n    bool hit = false; obj O; float s = 1.;\n    for (float i=0.;i<64.;i++)\n    {\n        O = SDF(p);\n        if (O.d<0.001)\n        {\n            hit=true;break;\n        }\n        p += O.d*rd;\n    }\n    \n    if (hit)\n    {\n        col = O.col;\n        vec3 n1 = gn(p,vec2(1e-1,0.));\n        vec3 n2 = gn(p,vec2(1e-3,0.));\n        float light = max(dot(n1,normalize(l)),0.01);\n        float ao = AO(0.1,p,n1)+AO(0.25,p,n1)+AO(0.5,p,n1);\n        \n        if (O.mat == 1) \n        {\n            shadow(s,p+0.07,l);\n            col *= s;\n        }\n        \n        else if (O.mat == 2)\n        {           \n            // thanks 0b5vr for this trick <3\n            float edgemask = clamp(1.-AAstep(0.04,length(n1-n2)),0.,1.);            \n            col *= light;\n            col *= edgemask;\n            col *= ao/3.;\n        }\n        \n        else if (O.mat == 3) \n        {\n            col *= light+0.3;\n        }        \n        col = clamp(col,0.,1.);\n    }\n\n    // Output to screen\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}