{"ver":"0.1","info":{"id":"Wl3Xz7","date":"1580592721","viewed":122,"name":"Logistic map smoothing","username":"dkmoore101","description":"Quick logistic map experiment","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["logistic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Modification of https://www.shadertoy.com/view/4sGfDW\n//You can smooth out your logistic map render by using other plot points than just 0.5.\n//In chaotic regions, there are period n orbits for each n>0, so if your starting point\n//happens to sit on one of these orbits your results won't be the best.\n\n#define Samples 1200  // Adjust to your gpu resources\nconst int preN = 200;   \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aaSize = iResolution.x;\n    vec2 p = vec2(0.15,1.0)*fragCoord.xy/iResolution.xy+vec2(3.675, 0.0);\n    float subsamples=1.0+float(int(iTime/1.5)%6);\n    float f = 0.0;\n    \n    for(float x0=0.1; x0<1.0; x0+=0.8/subsamples){\n        float x=x0;\n        for( int i=0; i<preN; i++ ) x = p.x*x*(1.0-x);\n        for(int i=0; i<Samples; i++ ) {\n            x = p.x*x*(1.0-x);\n            f += exp(-aaSize*1800.0*(p.y-x)*(p.y-x));\n        }\n    }\n\n    f = pow(20.0 * f / (float(Samples)*subsamples)+0.001,1.0/3.2);\n\tfragColor = vec4( f, f, f, 1.0 );\n}","name":"Image","description":"","type":"image"}]}