{"ver":"0.1","info":{"id":"dlj3Dw","date":"1673429367","viewed":231,"name":"Thin Spiral","username":"mla","description":"Drawing as thin a spiral as possible, while minimizing aliasing artefacts. k chosen to balance out the various effects that do appear.\n\nObviously this could be made shorter, I'm not particularly interested in suggestions for doing so.","likes":11,"published":3,"flags":16,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Thin Spiral, mla, 2023\n\nconst float PI = 3.141592654;\nfloat spiral = 1.0; // Number of arms on spiral, 0 for no spiral\nfloat scale = 1.0;  // This can be any value in fact\nfloat k = 0.6;      // Magic number - determined by experiment\n\nvoid mainImage(out vec4 o, vec2 p) {\n    if (iMouse.x > 1.0) k = iMouse.x/iResolution.x; // Set k from mouse\n    p -= 0.5*iResolution.xy;\n    p /= scale;\n    float d = length(p);\n    float px = fwidth(p.x); // Same as 1.0/scale\n    o = vec4(0.5+0.5*cos(k*PI*d/px-2.0*PI*iTime+spiral*atan(p.y,p.x)));\n    //o *= 2.0/(1.0+o); // Maybe simple tone-mapping?\n    float g = 0.4545; // 0.7 for more balanced stripes\n    //if (iMouse.y > 0.0) g = iMouse.y/iResolution.y;\n    if (!key(CHAR_X)) o = pow(o,vec4(g)); // Gamma correction always nice.\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const int CHAR_X = 88;\nconst int CHAR_Y = 89;\nconst int CHAR_Z = 90;\n\n#define key(code) (texelFetch(iChannel3, ivec2((code),2),0).x != 0.0)\n","name":"Common","description":"","type":"common"}]}