{"ver":"0.1","info":{"id":"7ddyDs","date":"1654278309","viewed":140,"name":"Drip drip drip","username":"020406","description":"Droplets.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["droplets"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// hash taken from: https://www.shadertoy.com/view/XlXcW4\n\n  const uint k = 1103515245U;  // GLIB C\n//const uint k = 134775813U;   // Delphi and Turbo Pascal\n//const uint k = 20170906U;    // Today's date (use three days ago's dateif you want a prime)\n//const uint k = 1664525U;     // Numerical Recipes\n\nvec3 hash(uvec3 x)\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n}\n\nconst float PI = 3.14159;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float n = 90.;\n    float sc = 0.1;\n    float PI6 = PI * PI * PI * PI * PI * PI;\n    float fd = 0.0;\n    for (float i = 1.; i <+ n; i++) {\n        vec3 off = hash(uvec3(i, i * 37., i * 547.));\n        vec2 uv = fragCoord/iResolution.xy;\n        float down = fract(off.y + float(iTime * 5.) * (1. + off.z) * 0.01);\n        vec2 uv2 = uv - vec2(off.x, 1.1 - 1.2 * pow(down, 3.));\n        float th = abs(atan(uv2.x, -uv2.y));\n        float fth = th * th * th * th * th * th / PI6;\n        float r = sc * (0.10 + 0.8 * fth);\n        float d = length(uv2);\n        fd = fd + 1. - min(abs(0.5 - d * d / (r * r)), 1.0);\n    }\n\n    vec3 col = vec3(fd * 0.3, fd * 0.6, 0.2 + fd);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}