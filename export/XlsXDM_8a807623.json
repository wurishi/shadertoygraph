{"ver":"0.1","info":{"id":"XlsXDM","date":"1437154919","viewed":269,"name":"AA line shader mask experiment","username":"Wicpar","description":"a line shader I will use in my Sinking Simulator 2 project.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["line","aa","sinking","simulator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec2 Coordinates;\n\nfloat minimum_distance( in vec2 a, in vec2 b, in vec2 p ){\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat DrawLine(vec2 a, vec2 b, float t, vec2 co){\n    float dst = minimum_distance(a,b,co);\n    return 1.0-smoothstep( t, t+1.0, dst );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 Coordinates = gl_FragCoord.xy;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0)*DrawLine(iResolution.xy/2.-iMouse.xy/2., iResolution.xy/2.+iMouse.xy/2., 30., Coordinates);\n}","name":"","description":"","type":"image"}]}