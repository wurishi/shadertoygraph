{"ver":"0.1","info":{"id":"fs2Bzh","date":"1645699752","viewed":297,"name":"Simple scanlines","username":"tuxifan","description":"Just a super simple scanlines shader. Nothing more to say about that.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["simulation","scanlines","crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Public Domain, feel free to use whereever and however you want.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv) - sin(uv.y * iResolution.x) * 0.04;\n}\n","name":"Image","description":"","type":"image"}]}