{"ver":"0.1","info":{"id":"ftVyRK","date":"1661826580","viewed":249,"name":"Mine [299 chars]","username":"Xor","description":"Tonight's mini shader is like a tiny remake of my 2015 [url=https://www.shadertoy.com/view/Xsd3z7]\"Cave Pillars\"[/url]:","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["mine","cave","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"Mine\" by @XorDev\n\n    Tonight's mini shader is like a tiny remake of my 2015 \"Cave Pillars\":\n\n    https://www.shadertoy.com/view/Xsd3z7\n    -3 Thanks to FabriceNeyret2\n    \n    <300 chars playlist: https://www.shadertoy.com/playlist/fXlGDN\n*/\n\n//Texture for SDF\n#define T texture(iChannel0, p\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    //Resolution for scaling\n    vec3 r = iResolution,\n    //Camera position\n    c = iTime/r/r*.1,\n    //Sample point\n    p = c;\n    \n    //Raymarcher loop\n    for(;r.z++<3e2;)\n    \n        //Ray direction\n        p += (vec3(roundEven(I),r)-r*(.6-cos(c.z*3.)*.1))/r.x/5e1 *\n        //Triplanar texture SDF\n        (T.xy+T.zx/.1).r/7e1)+T.zy-T.xy*3e1).r/6e2)+T.zx+.1)-1.4).r;\n        \n    //Generate colors from deriviative\n    O = sqrt(texture(iChannel1, p.zy/.1)/r.y/fwidth(p.z))/exp(++p-c).z;\n}\n\n///Original [302 chars]\n/**\n#define T texture(iChannel0, p\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    //Resolution for scaling\n    vec3 r = iResolution,\n    //Camera position\n    c = iTime/r/r*.1,\n    //Sample point\n    p = c;\n    \n    //Raymarcher loop\n    for(;r.z++<3e2;)\n    \n        //Ray direction\n        p += (vec3(roundEven(I),r)-r*(.6-cos(iTime*.3)*.1))/r.x/5e1 *\n        //Triplanar texture SDF\n        (T.xy+T.zx/.1).r/7e1)+T.zy-T.xy*3e1).r/6e2)+T.zx+.1)-1.4).r;\n        \n    //Generate colors from deriviative\n    O = sqrt(texture(iChannel1, p.zy/.1)/r.y/fwidth(p.z))/exp(p-c+1.).z;\n}\n*/","name":"Image","description":"","type":"image"}]}