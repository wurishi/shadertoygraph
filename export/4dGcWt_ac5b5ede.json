{"ver":"0.1","info":{"id":"4dGcWt","date":"1523639878","viewed":332,"name":"simple crosshair","username":"laserdog","description":"nothing fancy, just testing out a UI effect for my game.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["game","ui"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define pi 3.14159265359\n\nfloat rr(vec2 uv, float halfExtent, float borderRadius, float anim)\n{\n    halfExtent += sin(iTime * 6.) * .05 * anim;\n    return smoothstep(.02, .01, \n                      length(max(abs(uv) - halfExtent, 0.)) - borderRadius);\n}\n\nfloat outerNotch(vec2 uv, float angle) \n{\n    const float notchSize = .045;\n    const float skew = 1.3;\n    uv *= rot(angle);\n    uv.y -= .55 + sin(iTime * 12.) * .095;\n    uv.x /= ((uv.y + notchSize) / (2. * notchSize)) * (skew - 1.) + 1.;\n    uv.y /= 2.75;\n    return smoothstep(.018, .01, length(max(abs(uv) - notchSize, 0.)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float inner = rr(uv, .18, .02, 1.) * (1. - rr(uv, .12, .02, 1.));\n    float dawt = rr(uv, .03, .02, 0.);\n    float notch = outerNotch(uv, 0.) + outerNotch(uv, pi / 2.)\n        + outerNotch(uv, pi) + outerNotch(uv, 1.5 * pi);\n    fragColor.rgb = (notch + dawt + inner + rr(uv, .35, .05, 1.) * (1. - rr(uv, .275, .05, 1.))\n        * step(.15, min(abs(uv.x), abs(uv.y)))) * vec3(0., 1., 0.);\n}","name":"Image","description":"","type":"image"}]}