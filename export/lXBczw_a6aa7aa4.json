{"ver":"0.1","info":{"id":"lXBczw","date":"1727098414","viewed":43,"name":"Fake Thermal","username":"Ridah","description":"maybe ..","likes":3,"published":3,"flags":2,"usePreview":0,"tags":["filter","image","thermal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 thermal(vec3 color)\n{\nvec3 invColor = vec3(1.)- color;\nfloat len = pow((length(invColor*2.2))/3.,2.);\nvec3 col = vec3(len,len*pow((1.-color.r),2.),0.);\nreturn vec3(len*1.5,len*pow((1.-color.r),2.),0)+dot(col,vec3(0,1,0))/1.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 inColor = texture(iChannel0, uv).xyz;\n    // Output to screen\n    fragColor = vec4(thermal(inColor),1.0);\n}","name":"Image","description":"","type":"image"}]}