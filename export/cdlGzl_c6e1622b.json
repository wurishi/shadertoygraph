{"ver":"0.1","info":{"id":"cdlGzl","date":"1666669851","viewed":251,"name":"Light Bundle","username":"ChunderFPV","description":"I finally got around to trying the buffer.","likes":13,"published":1,"flags":32,"usePreview":0,"tags":["spiral","light","buffer","fractions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 RGBA, in vec2 XY)\n{\n    vec2 mc = (M.xy-0.5*R)/R.y*2.0; // mouse coords\n    float z = (M.z > 0.0) ? pow(1.0-abs(mc.y), 3.0*sign(mc.y)): 1.0; // zoom\n    float e = (M.z > 0.0) ? -mc.y: E; // exponent\n    vec2 sc = SC*SCALE*z; // screen coords\n    float px = PX; // pixel radius\n    float zt = cos(T*TAU/60.0); // zoom time\n    float gc = 1.1-((zt+1.0)/2.0); // green color\n    vec3 c = vec3(0.1, gc/6.0, 0.18)*pow(min(length(sc), 1.0/length(sc)), 3.0)*0.75;\n\tfloat lim = 10.0;\n\tfor(float i = 0.0; i < 1.0; i += 1.0/lim)\n    {\n        //vec3 h = vec3(i, 1.0-abs(i+i-1.0), 1.0-i); // Xor's chromatic\n        vec3 h = vec3(i, gc, 1.0-i)*(1.1-i);\n\t\tc += texture(iChannel0, mix(XY/R, vec2(0.5), 0.5*i*zt), AA).rgb*h*0.15;\n    }\n    c += FS(px*2.0)*0.75; // end points\n    RGBA = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define M iMouse\n#define T iTime\n#define SCALE 2.0\n#define E (-1.0/4.0)\n#define N (T/60.0+1.0)\n#define PI radians(180.0)\n#define TAU (PI*2.0)\n#define CS(a) vec2(cos(a), sin(a))\n#define FS(w) fs(sc, e, N, w, N*10.0)\n#define SC ((XY-0.5*R)/R.y)\n#define PX length(fwidth(sc/1.414))\n#define AA 0.5\n\n// fraction spiral: decimal(n) to visual fraction\n// screen coords, exponent, value, width, rotation\nfloat fs(vec2 sc, float e, float n, float w, float ro)\n{\n    float t = TAU*sqrt(abs(n))*sign(n);\n    float r = round(exp(log(length(sc))/e));\n    vec2 xy = sc-CS(ro-t*sqrt(r*2.0))*pow(r, e);\n    return max(0.0, 1.0-length(xy/w));\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 RGBA, in vec2 XY)\n{\n    vec2 mc = (M.xy-0.5*R)/R.y*2.0; // mouse coords\n    float z = (M.z > 0.0) ? pow(1.0-abs(mc.y), 3.0*sign(mc.y)): 1.0; // zoom\n    float e = (M.z > 0.0) ? -mc.y: E; // exponent\n    vec2 sc = SC*SCALE*z; // screen coords\n    float px = PX; // pixel radius\n    vec3 c = vec3(texture(iChannel0, mix(XY/R, vec2(0.5), -0.01), AA).rgb); // scale smear\n    c += FS(px*2.0); // spiral\n    \n    // dark border around screen edges to fix negative radial blur issue\n    vec2 b = abs(fract(XY/R+0.5)-0.5)/fwidth(XY/R)/10.0; // black border\n    c = min(c, min(b.x, b.y)*0.2); // blend with border\n    \n    RGBA = vec4(c, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}