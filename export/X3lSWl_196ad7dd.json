{"ver":"0.1","info":{"id":"X3lSWl","date":"1710728420","viewed":158,"name":"The Universe Within taoc","username":"akr51","description":"LiveCoding The Universe Within from The Art of Code yt channel","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\nfloat n21(vec2 p)\n{\n\n    p = fract(p * vec2(243.34, 814.73));\n    p += dot(p, p + 42.34);\n    return fract(p.x * p.y);\n\n\n}\n\n\n\nvec2 n22(vec2 p)\n{\n\n    float f = n21(p);\n    return vec2(f, n21(p + f));\n\n}\n\n\nfloat ldist(vec2 p, vec2 a, vec2 b)\n{\n\n\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    \n    float t = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * t);\n}\n\n\n\n\nvec2 getpos(vec2 id, vec2 offset)\n{\n\n    vec2 n = n22(id + offset) * iTime;\n    return offset + sin(n) * 0.4;\n\n}\n\n\n\nfloat line(vec2 p, vec2 a, vec2 b)\n{\n\n\n    float d = ldist(p, a, b);\n    float m = smoothstep(0.03, 0.01, d);\n    float dst = distance(a, b);\n    m *= smoothstep(1.2, 0.8, dst) + smoothstep(0.05, 0.03, abs(dst - 0.75));\n    return m;\n\n}\n\n\n\n\n\nfloat layer(vec2 uv)\n{\n\n    float m = 0.0;\n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n  \n    vec2 p[9];\n    \n    int i = 0;\n    \n    for (float y = -1.0; y <= 1.0; ++y)\n    {\n    \n        for (float x = -1.0; x <= 1.0; ++x)\n        {\n            \n            p[i++] = getpos(id, vec2(x, y));\n        \n        }\n    \n    }\n    \n    float t = iTime * 2.0;\n    for (int i = 0; i < 9; ++i)\n    {\n    \n        m += line(gv, p[4], p[i]);\n        \n        vec2 j = (p[i] - gv) * 20.0;\n        float sparkle = 1.0 / dot(j, j);\n        \n        m += sparkle * (sin(t + fract(p[i].x) * 20.0) * -0.5 + 0.5);\n    \n    }\n    \n    \n    m += line(gv, p[1], p[3]);\n    m += line(gv, p[1], p[5]);\n    m += line(gv, p[5], p[7]);\n    m += line(gv, p[7], p[3]);\n    \n    \n    return m;\n\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    vec3 col = vec3(0.0);\n    \n    float m = 0.0;\n    float t = iTime * 0.1;\n    \n    float s = sin(t);\n    float c = cos(t);\n    \n    mat2 rot = mat2(c, -s, s, c);\n    uv *= rot;\n    \n    for (float i = 0.0; i <= 1.0; i += 1.0 / 4.0)\n    {\n    \n        float z = fract(i + t);\n        float size = mix(10.0, 0.5, z);\n        float fade = smoothstep(0.0, 0.45, z) * smoothstep(1.0, 0.8, z);\n        m += layer(uv * size + i * 25.0) * fade;\n        \n    }\n    \n\n    col = vec3(m);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}