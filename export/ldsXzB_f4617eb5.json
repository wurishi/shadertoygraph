{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//Based on \"Warping - procedural 1\" by by inigo quilez  - https://www.shadertoy.com/view/4s23zz\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float a = texture(iChannel0,(p+vec2(0.5,0.5))/256.0,-32.0).x;\n\tfloat b = texture(iChannel0,(p+vec2(1.5,0.5))/256.0,-32.0).x;\n\tfloat c = texture(iChannel0,(p+vec2(0.5,1.5))/256.0,-32.0).x;\n\tfloat d = texture(iChannel0,(p+vec2(1.5,1.5))/256.0,-32.0).x;\n    return mix(mix( a, b,f.x), mix( c, d,f.x),f.y);\n}\n\nconst mat2 mtx = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat fbm4( vec2 p )\n{\n    float f = 0.0;\n\n    f += 0.5000*(-1.0+2.0*noise( p )); p = mtx*p*2.02;\n    f += 0.2500*(-1.0+2.0*noise( p )); p = mtx*p*2.03;\n    f += 0.1250*(-1.0+2.0*noise( p )); p = mtx*p*2.01;\n    f += 0.0625*(-1.0+2.0*noise( p ));\n\n    return f/0.9375;\n}\n\nfloat fbm6( vec2 p )\n{\n    float f = 0.0;\n\n    f += 0.500000*noise( p ); p = mtx*p*2.02;\n    f += 0.250000*noise( p ); p = mtx*p*2.03;\n    f += 0.125000*noise( p ); p = mtx*p*2.01;\n    f += 0.062500*noise( p ); p = mtx*p*2.04;\n    f += 0.031250*noise( p ); p = mtx*p*2.01;\n    f += 0.015625*noise( p );\n\n    return f/0.96875;\n}\n\nfloat func( vec2 q )\n{\n    float ql = length( q );\n    q.x += 0.5*sin(0.11*iTime+ql*20.0);\n    q.y += 0.5*sin(0.13*iTime+ql*20.0);\n    q *= 0.7 + 0.2*cos(0.05*iTime);\n\n    q = (q+1.0)*0.5;\n\n    vec2 p = 4.0*q;\n\n    float f = 0.5 + 0.5*fbm4( p );\n    float g = 0.5+0.5*sin(4.0*p.x)*sin(4.0*p.y);\n    f *= 1.0-0.5*pow( g, 8.0 );\n\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\tvec2 q = (-iResolution.xy + 2.0*fragCoord.xy) /iResolution.y;\n\t\n    float f = func(q);\n    vec3 col = vec3(0.0);\n\n    col = mix( vec3(0.2,0.1,0.4), vec3(0.3,0.05,0.05), f );\n\n    col *= f*2.0;\n\n    col = vec3(1.0)-col;\n\n    col = col*col;\n\n    col *= vec3(1.2,1.25,1.2);\n\t\n\tcol *= 0.5 + 0.5 * sqrt(16.0*p.x*p.y*(1.0-p.x)*(1.0-p.y));\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldsXzB","date":"1403703646","viewed":175,"name":"circular-thing","username":"thelinked","description":"circular-thing","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}