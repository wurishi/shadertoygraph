{"ver":"0.1","info":{"id":"4ltXRl","date":"1481207196","viewed":689,"name":"Metal Cathedral","username":"zackpudil","description":"Yep","likes":34,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float time() { return iTime; }\nvec2 res() { return iResolution.xy; }\n\nvec3 nor = vec3(0, 0, -1);\n\nfloat formula(vec2 p) {\n    p *= 0.6;\n\tp.x += time()*0.3;\n\tp.y += sin(time()*0.4);\n\tp.x = mod(p.x + 1.0, 2.0) - 1.0;\n\tfloat d = 100.0;\n\n\tfor(int i = 0; i < 6; i++) {\n\t\tp = abs(p)/clamp(dot(p, p), 0.4, 1.0) - vec2(0.6);\n\t\td = min(d, 0.5*abs(p.y));\n\t}\n\t\n\treturn d;\n}\n\nvec3 bump(vec2 p) {\n\tvec2 h = vec2(0.008, 0.0);\n\tvec3 g = vec3(\n\t\tformula(p + h.xy) - formula(p - h.xy),\n\t\tformula(p + h.yx) - formula(p - h.yx),\n\t\t-0.3);\n\treturn normalize(g);\n}\n\nvec3 render(vec2 p) {\n\tvec3 col = vec3(0);\n\tvec3 rd = normalize(vec3(p, 2.0));\n\tvec3 sn = normalize(bump(p));\n\t\n\tvec3 ref = reflect(rd, sn);\n\n\tcol += pow(clamp(dot(-(normalize(rd + vec3(cos(time()), 0, 0))), ref), 0.0, 1.0), 10.0);\n    return col;\n    \n    // Cool effect by Trisomie21, definitley gonna use this in the future.\n\t//return mix(col, vec3(2.0, 0.2, 0.2), clamp(formula(p)*2.,.2,1.2)-.2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = (-res() + 2.0*fragCoord)/res().y;\n\t\n\tvec3 col = render(p);\n\tcol = pow(col, vec3(1.0/2.2));\n\tfragColor = vec4(col, 1);\t\t  \n}\n","name":"Image","description":"","type":"image"}]}