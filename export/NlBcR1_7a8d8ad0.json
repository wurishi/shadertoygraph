{"ver":"0.1","info":{"id":"NlBcR1","date":"1649185628","viewed":163,"name":"Double Slit Experiment (roughly)","username":"SandyOwa","description":"title says it all","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Mapping of double slit experiment.\n\nfloat slitPositions[2] = float[](0.4, 0.5 );\n\nint numSlits = 2;\n\nfloat wavelength = 0.006;\n\nfloat exposure = 0.125;\n\nfloat getDistance(vec2 a, vec2 b) {\n    vec2 p = b - a;\n    return length(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float defaultX = 0.0;\n    \n    vec3 result = vec3(0.0);\n    \n    float timeBias = -iTime * 4.0;\n    \n    for (int i = 0; i < numSlits; i++) {\n        vec2 slitPosA = vec2(defaultX, slitPositions[i]);\n        float distA = getDistance(slitPosA, uv);\n        float lumA = 1.0 / (distA * distA);\n        lumA *= dot(uv - slitPosA, vec2(1.0, 0.0));\n        distA /= wavelength;\n        for (int j = 0; j < numSlits; j++) {\n            vec2 slitPosB = vec2(defaultX, slitPositions[j]);\n            float distB = getDistance(slitPosB, uv);\n            float lumB = 1.0 / (distB * distB);\n            lumB *= dot(uv - slitPosB, vec2(1.0, 0.0));\n            distB /= wavelength;\n            \n            if (i != j) {\n                result = vec3(abs(sin(distA + timeBias) * lumA + sin(distB + timeBias) * lumB)); // absolute value because light intensity has to do with wave amplitude\n            }\n        }\n    }\n    \n    result *= exposure;\n    \n    // Output to screen\n    fragColor = vec4(result, 1.0);\n}","name":"Image","description":"","type":"image"}]}