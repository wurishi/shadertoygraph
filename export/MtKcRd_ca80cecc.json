{"ver":"0.1","info":{"id":"MtKcRd","date":"1537393760","viewed":70,"name":"Color Pattern","username":"t3knomanser","description":"A simple shifting color pattern, mostly to get more comfortable with using distance fields.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","testing","demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 xy, vec2 center, float r, float fuzz) {\n    float d = distance(xy, center);\n    float s = smoothstep(0., 1., d);\n    float h = step(r, d);\n    return mix(h,s,fuzz);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fract(fragCoord/iResolution.xy * smoothstep(-1., 1., sin(iTime*0.25)) * 60.);\n\n    // Time varying pixel color\n    vec3 red = vec3(1., 0., 0.);\n    vec3 blue = vec3(0., 0., 1.0);\n    vec3 green = vec3(0., 1., 0.);\n    float rc = circle(uv, vec2(0.25+sin(iTime*0.5)/3., 0.75+cos(iTime*0.5)/3.), 0.5, 1.);\n    float bc = circle(uv, vec2(0.75+sin(iTime*0.5)/3., 0.75+cos(iTime*0.5)/3.), 0.5, 1.);\n    float gc = circle(uv, vec2(0.5+sin(iTime*0.5)/3., 0.25+cos(iTime*0.5)/3.), 0.5, 1.);\n\n    vec3 col = (red * rc) + (blue * bc) + (green * gc);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}