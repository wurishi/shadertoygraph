{"ver":"0.1","info":{"id":"NdG3zG","date":"1631709485","viewed":72,"name":"  Basic transformation example","username":"pleroma","description":"Examples of basic transformations, translation, rotation, and scaling","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["transformation2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n//Draw a box shape\nfloat box(in vec2 _st, in vec2 _size)\n{\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n//Draw a cross shape\nfloat cross(in vec2 _st, float _size) \n{\n    return  box(_st, vec2(_size,_size/4.)) +\n            box(_st, vec2(_size/4.,_size));\n}\n//Rotation matrix\nmat2 rotate2d(float _angle)\n{\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n//Scale matrix\nmat2 scale(vec2 _scale)\n{\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 color = vec3(0.0);\n\n    // Move space from the center to the vec2(0.0)\n    uv-=vec2(0.5);\n    // Rotate the space\n    uv *= rotate2d( sin(iTime)*PI );\n    // Move it back to the original place\n    uv += vec2(0.5);\n\n    // Scale the space\n    uv -= vec2(0.5);\n    uv = scale( vec2(sin(iTime)) ) * uv;\n    uv += vec2(0.5);\n\n    // Translate the space\n    uv += (vec2(sin(iTime))/10.);\n  \n    // Add the shape on the foreground\n    color += vec3(cross(uv,0.4));\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}