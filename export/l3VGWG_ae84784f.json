{"ver":"0.1","info":{"id":"l3VGWG","date":"1718180953","viewed":146,"name":"Fractal Glass Effect","username":"goodhoko","description":"a \"fractal glass\" effect","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["glass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float NUM_STRIPES = 25.0;\nconst float STRRENGTH = 1.0;\nconst float SOFTNESS = 0.0005;\n\nfloat displacement(float x, float num_stripes, float strength) {\n\n    float modulus = 1.0 / num_stripes;\n    \n    return mod(x, modulus) * strength;\n}\n\nfloat fractal_glass(float x) {\n\n    float d = 0.0;\n    for (int i = -5; i <= 5; i++) {\n       d += displacement(x + float(i) * SOFTNESS, NUM_STRIPES, STRRENGTH);\n    }\n\n    d = d / 11.0;\n    \n    return x + d;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n \n    uv.x = fractal_glass(uv.x);\n    \n    \n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}