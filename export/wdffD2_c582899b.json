{"ver":"0.1","info":{"id":"wdffD2","date":"1589090779","viewed":60,"name":"It's a MAN","username":"gurudevbk","description":"MAN","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["man"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    float thickness = 0.1;\n    float t_usec = (iTime) * .0001;\n    vec2 origin = vec2(.24)+t_usec;\n    const float pi = 3.14159265;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y - 0.5;\n    uv.x -= .29;\n    \n    // rotation matrix for funzies\n    float theta = (3./4.)*pi;\n    mat2 rot = mat2( sin(theta), cos(theta),\n                    -cos(theta), sin(theta));\n    \n    uv = rot * uv;\n    uv *= length(uv-origin);\n   \n    //uv = mat2(sin(t_usec), cos(t_usec), sin(t_usec), -cos(t_usec)) * uv;\n    float radius = .07*atan(uv.x*uv.y,pow(t_usec,.2))/pow(sin(t_usec),2.4);\n    \n    vec3 col = vec3(t_usec+.1, .5*(cos(iTime)*.5+.5),.5); //color \n    vec3 color_scale = length(uv*radius-origin)*uv.yxy;\n    \n    col.rgb = 0.5*sin(length(uv*radius-origin)+col.rgb);\n    \n    col *= length(uv*radius-origin)*color_scale;\n    \n    // Time varying pixel color\n//col.b += pow(sin(iTime*.2),2.);\n\n\n    //col.g += atan(sin(iTime),abs(cos(iTime)));\n    \n   // col.rgb += mix(col.rbg, col.bgr, length(uv-origin)/4.);\n    \n   // col.g *= 0.05;\n\n    // Output to screen\n   // col.rg = rot * col.rg;\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}