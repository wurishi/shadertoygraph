{"ver":"0.1","info":{"id":"sl2BD3","date":"1652917520","viewed":202,"name":"binary decomposition thingy","username":"bward194","description":"i don't know","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["binary","inverse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi acos(-1.)\n#define val 2. //thanks Xor //cos(iTime/pi*2.)+1.\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = 2.*(2.*fragCoord-iResolution.xy)/iResolution.x;\n    vec2 mo=2.*(2.*iMouse.xy-iResolution.xy)/iResolution.x;\n   uv-=0.25*vec2(cos(iTime+pi/2.),sin(iTime+pi/2.));\n   uv=uv/dot(uv,uv)+val*vec2(cos(iTime+pi/2.),sin(iTime+pi/2.));\n   uv/=dot(uv,uv);\n\nfloat a =mod((atan(uv.y,uv.x)/pi*2.)*pow(2.,floor(-log2(abs(0.5-length(uv))))),1.);\n\n    vec3 col = vec3(round(a));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}