{"ver":"0.1","info":{"id":"4sVGRd","date":"1455910255","viewed":930,"name":"[Osu!toy] Choucho-Dreamriser","username":"casty","description":"To make sure music is sync'd: 1) Reset Time and Pause, 2) Make sure the music time is equal to the global time, otherwise goto 1 (sometimes there is a 0.5 seconds shift). If it crashes, try this one instead https://www.shadertoy.com/view/XsVGRy","likes":19,"published":1,"flags":96,"usePreview":0,"tags":["game","music","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsB3Rh","filepath":"https://soundcloud.com/take_314/dreamriser-massive-8bit-arrange","previewfilepath":"https://soundcloud.com/take_314/dreamriser-massive-8bit-arrange","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Eduardo Castineyra - casty/2015\n// Creative Commons Attribution 4.0 International License\n\n/// Render\n\n//#define DRAWHELPER\n\nfloat RADIUS = 0.1; /// Don't forget to change it in the other buffers\n#define BACKGROUNDCOLOR pow(vec4(0.5, 0.5, 1.0, 1.0), vec4(2,2,2,1))\n\nvec2 coord = vec2(0);\nvec2 tc = vec2(0);\nvec2 texel = vec2(0);\nfloat globalTime;\n\n#define PREVMOUSE 11\n#define MOUSEEVENT 12\n#define NEXTHIT 13\n#define HELPERPOS 14\n#define COL0 15\n#define COL1 16\n#define COL2 17\n#define COL3 18\n#define SCORE 19\n\nvec4 getTexel(vec2 t){\n    return texture(iChannel1, (t + vec2(.5)) * texel, -100.0);\n\t}\n\n/// shapes\n\nfloat dline(in vec2 a, in vec2 b){\n    vec2 p = coord;\n    vec2 pa = p - a, ba = b - a;\n\tfloat h = clamp(dot(pa,ba) / dot(ba,ba), 0., 1.);\n    return length(pa-ba*h);\n\t}\n\nfloat line2R(in vec2 a, in vec2 b, float r1, float r2){\n    vec2 p = coord;\n    vec2 pa = p - a, ba = b - a;\n\tfloat h = clamp(dot(pa,ba) / dot(ba,ba), 0., 1.);\n    float r = mix(r1, r2, h);\n    return step(-r, -length(pa - ba * h));\n\t}\n\nvec4 texQuad(vec2 p, vec2 r, vec2 tlb, vec2 ttr){\n    vec2 lb = p - r;\n    vec2 tr = p + r;\n    vec2 t = mix(tlb, ttr, (coord - lb)/(tr - lb));\n    t = clamp(t, tlb, ttr);\n    return texture(iChannel2, t);\n\t}\n\nvec4 circle(vec2 p, float r){\n   \tvec4 color = vec4 (0.0);\n    p = vec2(p.x, p.y);\n    color = vec4(1) * step(-r, -length(coord - p));\n    return color ;\n\t}\n\nvec4 ring(vec2 p, float r1){\n    vec4 color = vec4(0);\n    p = vec2(p.x, p.y);\n    float r2 = r1 + 0.01;\n    float d = length(coord - p);\n    float w = fwidth(d);\n    color = vec4(1) * smoothstep(-w, w, r2 - d);\n    color *= smoothstep(-w, w, d - r1);\n    return color;\n\t}\n\n\nvec4 ball(vec2 uv, float r, float size){\n    \n    float HALFPI = 3.141592 * .5;\n    \n    vec4 c = vec4(0);\n    \n    uv += size / 2.0;\n  \tuv /= size;\t\n    r /= size;\n    vec2 suv = uv * 2.0 - vec2(1.0);\n        \n    float z = sqrt(1.0 - suv.x*suv.x - suv.y*suv.y);\n    float rp = -atan((suv.x)/z) - HALFPI;\n    float d = sin(length((rp ) / (HALFPI) + r) * 5.0 + HALFPI);\n    \n    float w = fwidth(d);\n    \n\tc = mix(vec4(1,0,0,1), vec4(1,1,0,1), smoothstep(-w, w,  d) * vec4(1));\n    \n    d = length(uv * vec2(2.0, 2.0) + vec2(-1.0, -1.0));\n    w = fwidth(d);\n    c.rgb *= 1.0 - d * 0.9;\n    c.a *= smoothstep(-w, w, 1. - d);\n    return c;    \n\t}\n\nvec4 ballpos(vec2 p0, vec2 p1, float t){\n    vec2 p2 = vec2(p1.y - p0.y, -p1.x + p0.x) + p0;\n    float size = RADIUS * 1.9;\n    \n    vec2 p0p1 = normalize(p1 - p0);\n    vec2 p0p2 = normalize(p2 - p0);\n\tvec2 nuv = vec2(dot(coord - p0, p0p1), dot(coord - p0, p0p2));\n    nuv.x -= mix(0.0, length(p1 - p0), t);\n    return ball(nuv, mix(0.0, length(p1 - p0), t), size);\n\t}\n\n/// draw game\n\nbool hitUndefined(vec4 score){\n    return score.a < 1.0;\n    }\n\nvec4 blend(vec4 b, vec4 f){\n    vec4 c = mix(b, f, f.a);\n    c.a = max(b.a, f.a);\n    return c;\n\t}\n\nvec4 printDigit(float digit, vec2 p){\n    return texQuad(p, vec2(0.05), vec2(digit, 0.2), vec2(digit + 0.1, 0.3));\n\t}\n\nvec4 drawHitShape(vec4 hit, vec4 slide){\n    \n    vec4 comboCol = getTexel(vec2(float(COL0) + floor(hit.a / 100.0), 0.0));\n    float t = hit.z - globalTime;\n    float mask = clamp((2.0 - t*2.0), 0.0, 1.0) * step(-0.5, t);\n    \n    vec2 slidePos = mix(hit.xy, slide.xy, clamp((slide.z - t + 0.6) / slide.z, 0.0, 1.0));\n\n    float dl = dline(hit.xy, slidePos.xy);\n    float wdl = fwidth(dl);\n    \n    vec4 c = vec4(0);\n    vec4 l = vec4(0);\n    \n    l = vec4(vec3(comboCol.rgb) , smoothstep(-wdl, wdl,RADIUS*0.95 - dl));\n    c = blend(c,l);\n    l = ring(hit.xy, RADIUS + t * 0.2) * comboCol;\n    c = blend(c, l);\n      \n    l = texQuad(vec2(slidePos.xy), vec2(0.2), vec2(0.0, 0.4), vec2(0.4, 0.8));\n    l.rgb = l.r * vec3(1) + l.g * comboCol.rgb;\n    c = blend(c, l);\n    l = texQuad(vec2(hit.xy), vec2(0.2), vec2(0.0, 0.4), vec2(0.4, 0.8));\n    l.rgb = l.r * vec3(1) + l.g * comboCol.rgb;\n    c = blend(c, l);\n \n    l = printDigit(fract(hit.a/10.0), hit.xy);\n    c = blend(c, l);\n\t\n    \n    if ((globalTime > hit.z) && (globalTime < hit.z + slide.z)){\n        l = ballpos(hit.xy, slide.xy, (globalTime - hit.z) / (slide.z));\n        c = blend(c,l);\n        }\n    c.a *= mask;\n        \n    return c;\n    \n\t}\n\nvec4 drawScore(vec4 hit, vec4 slide, vec4 score){\n    return texQuad(vec2(slide.xy), vec2(0.1), vec2(score.x, 0), vec2(score.x+0.2, 0.2));\n\t}\n\nvec4 drawHit(vec4 hit, vec4 slide, vec4 score){\n    float t = hit.z - globalTime;\n    if (t + slide.z > -1.0){\n        if (hitUndefined(score))\n            return drawHitShape(hit, slide) ;\n        return drawScore(hit, slide, score);\n\t    }\n    return vec4(0);\n\t}\n\nvec4 currBlock(){\n    vec4 color = BACKGROUNDCOLOR;\n    \n    for (int j = 1; j >= -2; j--){ /// Draw seconds n-2 to n+1\n\t    float second = floor(globalTime) + float(j);\n        for (int i = 8; i >= 0; i-=2){\n            vec4 hit = texture(iChannel0, (vec2(i,second) + vec2(0.5)) / iResolution.xy );\n            if (hit.z != 0.0){\n                hit.z += second;\n                if (length(hit.xy - coord) < 10.0 * RADIUS){ /// 2 extra fps in Atom x7\n\t\t            vec4 slide = texture(iChannel0, (vec2(i + 1,second) + vec2(0.5)) / iResolution.xy );\n        \t\t    vec4 score = texture(iChannel1, (vec2(i,second) + vec2(0.5)) / iResolution.xy );\n                    vec4 c = drawHit(hit, slide, score);\n                \tcolor = mix(color, c, c.a);\n                \t}\n                }\n            }\n    \t}\n    return color;\n\t}\n\nvec4 drawHelper(){\n\n    vec4 pos = getTexel(vec2(HELPERPOS, 0));\n    \n    if (pos.xy == vec2(0))\n        return vec4(0);\n#ifdef DRAWHELPER    \n   \treturn ring(pos.xy, RADIUS * 1.5) * vec4(1,1,0,1);\n#else\n    return vec4(0);\n#endif\n\t}\n\nvec4 drawScoreN(float score, float y){\n    \n    float pos = floor((coord.x + 0.025) * 20.0);\n    float ppos = pos + 9.0;\n        \n    if (ppos < 0.0 || ppos > 2.0)  /// draw only 3 digits\n        return vec4(0);\n    \n    float sub = floor(score / pow(10.0, 3.0 - ppos));\n    float n = floor(score / pow(10.0, 2.0 - ppos)) - sub * 10.0;\n    \n    vec4 c = printDigit(n/10.0, vec2(pos * 0.05, y));\n    \n    return c;\n\t}\n\nvec4 drawScore(){\n    vec4 c = BACKGROUNDCOLOR*.75;\n    c = blend(c, vec4(0,0,0,smoothstep(-0.33, -0.25, coord.x)));\n    vec4 score = getTexel(vec2(SCORE, 0));\n    vec4 l = vec4(0);  \n\n    l += drawScoreN(score.x, 0.8);\n    l += texQuad(vec2(-0.40,0.9), vec2(0.1), vec2(0.4, 0), vec2(0.6, 0.2));\n    l += drawScoreN(score.y, 0.6);\n    l += texQuad(vec2(-0.40,0.7), vec2(0.1), vec2(0.2, 0), vec2(0.4, 0.2));\n    l += drawScoreN(score.z, 0.1);\n    l += texQuad(vec2(-0.40,0.1), vec2(0.1), vec2(0.0, 0), vec2(0.2, 0.2));\n    return blend(c, l);\n\t}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    globalTime = iTime * 1.0625;\n    coord = (fragCoord.xy - vec2((iResolution.x - iResolution.y)*0.66,0)) / iResolution.y;\n    texel = 1.0/iResolution.xy;\n    vec4 l = vec4(0);\n\tvec4 c = vec4(0);\n    \n    //c = texture(iChannel0, (1.0/8.0) * fragCoord.xy/ iResolution.xy );\n    //c = texture(iChannel1, (1.0/8.0) * fragCoord.xy/ iResolution.xy );\n    //vec4 sprites = texture(iChannel2, coord );\n    //c = mix(vec4(0,1,0,1), sprites, sprites.a);\n\n    \n    if(coord.x < -0.3){\n    \tl = drawScore();\n    \t}\n    else{\n\t    l = currBlock();    \n        c = blend(c,l);\n\t    l = drawHelper();\n    \t}\n     \n    c = mix(c, l, l.a);\n        \n    fragColor = sqrt(c);\n    \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/// The Song\n/// Mostly auto-generated from the original beatmap\n/// http://osu.ppy.sh/s/68916\n\n#define IDONTHAVEACHEAPINTEL\n\nfloat c = 0.0;\nfloat lm = 0.0;\nfloat second = 0.0;\nvec2 coord = vec2(0.0);\nvec4 color = vec4(0.0);\n\nvoid P(vec2 h){\n    float x = floor(h.x);\n    float y = fract(h.x) * 1000.0;\n    float hitTime = second + fract(h.y) * 10.0;\n    float d = fract(hitTime);\n    float p = floor(h.y);\n    if (coord.x > c && coord.x < c + 1.0)\n        color = vec4(x/512.0, 1.0 - y/384.0, d, p);\n\t}\n\nvoid slider(vec2 s){\n    float x = floor(s.x);\n    float y = fract(s.x) * 1000.0;\n    float repeats = floor(s.y);\n    float slideTime = fract(s.y) * 10.0;\n    if (coord.x > c && coord.x < c + 1.0)\n        color = vec4(x/512.0, 1.0 - y/384.0, slideTime, repeats);\n\t}\n\nvoid H(vec4 hit){\n    float hitTime = second + fract(hit.y) * 10.0;\n    float m = floor(hitTime);\n    if (coord.y > m && coord.y < m + 1.0){\n        if (m != lm)\n            c = 0.0;\n        else \n            c += 1.0;\n        P(hit.xy);\n        c += 1.0;\n        slider(vec2(hit.zw));\n    \t}\n    lm = m;\n\t}\n\n/// 10 data -> 1 vec4\n/// H (hitX.hitY, block|blockend|hitNumber.fract(hitTime/10), slideX.slideY, slideRepeats.(slideTime/10) )\n\nvoid B(){\nif (coord.y < 10.0){ \n\tsecond = 0.0;\n\tH(vec4(360.056,001.1684,476.120,1.0364));\n\tH(vec4(277.098,012.2593,404.128,0.0364));\n\tH(vec4(112.096,101.3320,076.181,0.0182));\n\tH(vec4(080.236,102.3684,224.188,0.0364));\n\tH(vec4(204.272,113.4230,296.284,0.0182));\n\tH(vec4(360.328,201.4593,476.264,1.0364));\n\tH(vec4(277.285,212.5502,404.256,0.0364));\n\tH(vec4(124.276,301.6230,124.180,0.0182));\n\tH(vec4(136.120,302.6593,280.160,0.0364));\n\tH(vec4(276.076,313.7139,316.076,2.0090));\n\tH(vec4(352.076,001.7502,468.180,0.0364));\n\tH(vec4(348.324,002.8230,348.324,0.0000));\n\tH(vec4(272.352,003.8411,272.352,0.0000));\n\tH(vec4(188.344,004.8593,188.344,0.0000));\n\tH(vec4(112.312,005.8775,137.182,0.0364));\n\tH(vec4(132.112,006.9320,132.112,0.0000));\n\tH(vec4(064.064,007.9502,200.072,0.0364));\n\t}\nelse if (coord.y < 20.0){ \n\tsecond = 10.0;\n\tH(vec4(272.068,018.0048,312.068,2.0090));\n\tH(vec4(348.072,101.0411,373.157,0.0182));\n\tH(vec4(376.220,102.0775,376.220,0.0000));\n\tH(vec4(372.304,103.0957,286.329,0.0182));\n\tH(vec4(224.332,104.1320,224.332,0.0000));\n\tH(vec4(144.328,105.1502,118.242,0.0182));\n\tH(vec4(112.180,106.1866,112.180,0.0000));\n\tH(vec4(116.096,107.2048,201.070,0.0182));\n\tH(vec4(264.064,108.2411,264.064,0.0000));\n\tH(vec4(348.072,119.2593,460.156,0.0364));\n\tH(vec4(220.128,201.3320,124.160,0.0182));\n\tH(vec4(076.192,202.3684,076.192,0.0000));\n\tH(vec4(148.232,203.3866,219.255,0.0182));\n\tH(vec4(256.328,204.4230,256.328,0.0000));\n\tH(vec4(292.256,205.4411,388.224,0.0182));\n\tH(vec4(436.192,206.4775,436.192,0.0000));\n\tH(vec4(364.152,207.4957,293.129,0.0182));\n\tH(vec4(252.056,208.5320,252.056,0.0000));\n\tH(vec4(168.056,219.5502,105.186,0.0364));\n\tH(vec4(326.253,301.6230,256.281,0.0182));\n\tH(vec4(312.172,302.6593,312.172,0.0000));\n\tH(vec4(186.131,303.6775,255.102,0.0182));\n\tH(vec4(198.207,304.7139,198.207,0.0000));\n\tH(vec4(318.211,305.7320,318.211,0.0000));\n\tH(vec4(444.268,306.7502,312.268,0.0364));\n\tH(vec4(256.246,307.8048,256.246,0.0000));\n\tH(vec4(184.288,308.8230,063.266,0.0364));\n\tH(vec4(112.188,319.8775,072.160,2.0090));\n\tH(vec4(040.156,001.9139,008.239,0.0182));\n\tH(vec4(016.300,002.9502,087.306,0.0182));\n\tH(vec4(172.284,003.9866,292.356,0.0364));\n\t}\nelse if (coord.y < 30.0){ \n\tsecond = 20.0;\n\tH(vec4(316.288,004.0411,316.288,0.0000));\n\tH(vec4(396.272,005.0593,396.176,0.0182));\n\tH(vec4(396.112,006.0957,432.000,0.0364));\n\tH(vec4(208.020,017.1684,208.020,0.0000));\n\tH(vec4(148.160,101.2048,160.256,0.0182));\n\tH(vec4(224.260,102.2411,293.225,0.0182));\n\tH(vec4(360.260,103.2775,232.340,0.0364));\n\tH(vec4(172.348,104.3320,172.348,0.0000));\n\tH(vec4(096.312,105.3502,055.249,0.0182));\n\tH(vec4(048.172,106.3866,156.096,0.0364));\n\tH(vec4(356.192,117.4593,356.192,0.0000));\n\tH(vec4(412.080,201.4775,412.080,0.0000));\n\tH(vec4(328.072,202.4957,268.188,0.0364));\n\tH(vec4(336.152,203.5502,387.264,0.0364));\n\tH(vec4(336.316,204.6048,336.316,0.0000));\n\tH(vec4(256.328,205.6230,176.233,0.0364));\n\tH(vec4(252.188,206.6775,252.188,0.0000));\n\tH(vec4(336.152,207.6957,256.057,0.0364));\n\tH(vec4(168.060,208.7502,168.060,0.0000));\n\tH(vec4(100.120,219.7684,100.120,0.0000));\n\tH(vec4(044.192,301.7866,173.167,0.0364));\n\tH(vec4(224.244,302.8411,268.364,0.0364));\n\tH(vec4(189.328,313.8957,328.272,0.0364));\n\tH(vec4(328.272,001.9684,328.272,0.0000));\n\t}\nelse if (coord.y < 40.0){ \n\tsecond = 30.0;\n\tH(vec4(360.112,012.0048,444.140,0.0182));\n\tH(vec4(188.108,101.0775,276.132,0.0182));\n\tH(vec4(144.176,102.1139,060.156,0.0182));\n\tH(vec4(060.240,103.1502,060.240,0.0000));\n\tH(vec4(264.288,104.1866,336.307,0.0182));\n\tH(vec4(448.260,105.2230,375.242,0.0182));\n\tH(vec4(408.168,106.2593,328.064,0.0364));\n\tH(vec4(268.056,107.3139,268.056,0.0000));\n\tH(vec4(188.064,108.3320,188.064,0.0000));\n\tH(vec4(108.092,119.3502,108.092,0.0000));\n\tH(vec4(124.172,201.3684,100.252,0.0182));\n\tH(vec4(007.280,202.4048,028.208,0.0182));\n\tH(vec4(076.324,203.4411,207.333,0.0364));\n\tH(vec4(292.332,204.4957,361.336,0.0182));\n\tH(vec4(429.256,205.5320,360.252,0.0182));\n\tH(vec4(256.116,206.5866,256.116,0.0000));\n\tH(vec4(180.192,207.6048,180.192,0.0000));\n\tH(vec4(256.268,208.6230,256.268,0.0000));\n\tH(vec4(332.192,219.6411,332.192,0.0000));\n\tH(vec4(180.192,301.6593,102.303,0.0364));\n\tH(vec4(100.220,302.7139,222.306,0.0364));\n\tH(vec4(296.344,303.7684,296.344,0.0000));\n\tH(vec4(380.348,304.7866,449.240,0.0364));\n\tH(vec4(368.244,305.8411,368.244,0.0000));\n\tH(vec4(353.140,306.8593,284.248,0.0364));\n\tH(vec4(422.119,317.9139,353.140,0.0182));\n\tH(vec4(308.056,001.9502,308.056,0.0000));\n\tH(vec4(144.128,002.9866,144.128,0.0000));\n\t}\nelse if (coord.y < 50.0){ \n\tsecond = 40.0;\n\tH(vec4(256.321,003.0230,256.321,0.0000));\n\tH(vec4(368.132,004.0593,368.132,0.0000));\n\tH(vec4(144.128,015.0957,144.128,0.0000));\n\tH(vec4(256.192,111.1139,256.192,0.0000));\n\tH(vec4(168.072,201.2775,064.032,0.0272));\n\tH(vec4(084.144,202.3502,084.144,0.0000));\n\tH(vec4(004.240,203.3866,108.280,0.0272));\n\tH(vec4(246.360,204.4411,164.308,0.0272));\n\tH(vec4(312.312,205.4957,312.312,0.0000));\n\tH(vec4(440.220,216.5320,440.220,0.0000));\n\tH(vec4(312.312,301.5684,416.352,0.0272));\n\tH(vec4(488.236,302.6411,384.196,0.0272));\n\tH(vec4(248.188,313.7139,184.188,0.0136));\n\tH(vec4(096.336,001.7684,032.272,0.0182));\n\tH(vec4(060.200,002.8048,084.056,0.0364));\n\tH(vec4(144.060,003.8593,280.060,0.0364));\n\tH(vec4(416.156,014.9320,416.156,0.0000));\n\tH(vec4(272.236,101.9684,208.195,0.0182));\n\t}\nelse if (coord.y < 60.0){ \n\tsecond = 50.0;\n\tH(vec4(248.124,102.0048,311.164,0.0182));\n\tH(vec4(428.280,113.0593,372.344,1.0182));\n\tH(vec4(448.200,201.1139,400.128,0.0182));\n\tH(vec4(324.124,202.1502,324.124,0.0000));\n\tH(vec4(288.200,203.1684,160.096,0.0364));\n\tH(vec4(088.112,204.2229,088.112,0.0000));\n\tH(vec4(052.188,205.2411,108.316,0.0364));\n\tH(vec4(120.236,216.2957,120.236,0.0000));\n\tH(vec4(256.192,311.3320,256.192,0.0000));\n\tH(vec4(408.064,001.6229,344.064,2.0090));\n\tH(vec4(328.064,012.6593,264.092,0.0182));\n\tH(vec4(232.168,101.6957,101.167,0.0364));\n\tH(vec4(168.104,102.7502,168.256,0.0364));\n\tH(vec4(244.304,103.8048,244.304,0.0000));\n\tH(vec4(328.332,104.8229,429.218,0.0364));\n\tH(vec4(440.132,105.8775,348.044,0.0364));\n\tH(vec4(268.048,116.9320,188.048,1.0182));\n\tH(vec4(264.140,201.9866,096.140,0.0364));\n\t}\nelse if (coord.y < 70.0){ \n\tsecond = 60.0;\n\tH(vec4(060.212,202.0411,148.308,0.0364));\n\tH(vec4(152.216,203.0957,152.216,0.0000));\n\tH(vec4(224.272,204.1139,368.288,0.0364));\n\tH(vec4(420.336,205.1684,436.216,0.0364));\n\tH(vec4(428.140,206.2229,428.140,0.0000));\n\tH(vec4(372.072,217.2411,332.072,2.0090));\n\tH(vec4(288.072,301.2775,214.086,0.0182));\n\tH(vec4(124.104,302.3139,124.104,0.0000));\n\tH(vec4(044.064,303.3320,091.182,0.0364));\n\tH(vec4(180.204,304.3866,228.324,0.0364));\n\tH(vec4(144.288,305.4411,139.375,1.0182));\n\tH(vec4(228.324,306.4957,300.292,0.0182));\n\tH(vec4(426.268,317.5320,380.328,0.0182));\n\tH(vec4(496.212,001.5684,368.172,0.0364));\n\tH(vec4(340.084,002.6229,204.068,0.0364));\n\tH(vec4(124.100,003.6775,124.100,0.0000));\n\tH(vec4(080.180,004.6957,064.324,0.0364));\n\tH(vec4(164.332,005.7502,244.348,0.0182));\n\tH(vec4(320.344,006.7866,360.336,2.0090));\n\tH(vec4(400.320,017.8229,440.296,2.0090));\n\tH(vec4(460.264,101.8593,450.120,0.0364));\n\tH(vec4(398.059,102.9139,396.192,0.0364));\n\tH(vec4(288.140,103.9684,288.140,0.0000));\n\tH(vec4(228.072,104.9866,084.104,0.0364));\n\t}\nelse if (coord.y < 80.0){ \n\tsecond = 70.0;\n\tH(vec4(136.176,105.0411,144.328,0.0364));\n\tH(vec4(204.256,106.0957,204.256,0.0000));\n\tH(vec4(216.344,117.1139,264.344,2.0090));\n\tH(vec4(292.344,201.1502,396.248,0.0364));\n\tH(vec4(404.180,202.2048,404.180,0.0000));\n\tH(vec4(244.096,203.2411,146.012,0.0364));\n\tH(vec4(096.184,204.3139,000.208,1.0182));\n\tH(vec4(004.340,205.3866,004.340,0.0000));\n\tH(vec4(084.296,216.4048,124.296,2.0090));\n\tH(vec4(168.296,301.4411,248.296,0.0182));\n\tH(vec4(328.280,302.4775,408.240,0.0182));\n\tH(vec4(432.168,303.5139,432.168,0.0000));\n\tH(vec4(436.080,314.5320,368.032,1.0182));\n\tH(vec4(356.124,001.5866,288.153,0.0182));\n\tH(vec4(220.093,002.6229,288.064,0.0182));\n\tH(vec4(140.064,003.6593,116.152,0.0182));\n\tH(vec4(064.250,014.6957,040.184,0.0182));\n\tH(vec4(144.296,101.7320,304.312,0.0364));\n\tH(vec4(352.288,102.7866,384.160,0.0364));\n\tH(vec4(296.152,103.8411,296.152,0.0000));\n\tH(vec4(320.064,104.8593,160.048,0.0364));\n\tH(vec4(116.080,105.9139,116.080,0.0000));\n\tH(vec4(156.160,106.9320,156.160,0.0000));\n\tH(vec4(064.164,107.9502,040.252,0.0182));\n\tH(vec4(072.316,118.9866,160.324,0.0182));\n\t}\nelse if (coord.y < 90.0){ \n\tsecond = 80.0;\n\tH(vec4(224.304,201.0229,288.248,0.0182));\n\tH(vec4(368.196,202.0593,312.136,0.0182));\n\tH(vec4(280.044,203.0957,220.100,0.0182));\n\tH(vec4(132.144,204.1320,188.203,0.0182));\n\tH(vec4(272.256,205.1684,352.256,0.0182));\n\tH(vec4(348.164,216.2048,416.134,0.0182));\n\tH(vec4(400.044,301.2411,272.072,0.0325));\n\tH(vec4(256.192,312.3139,256.192,0.0000));\n\t//H(vec4(256.192,011.3320,256.192,0.0000));\n\t}\n    \n\nelse if (coord.y < 100.0){ \n\tsecond = 90.0;\n\tH(vec4(416.336,101.4775,432.240,0.0182));\n\tH(vec4(296.237,102.5139,356.276,0.0182));\n\tH(vec4(368.196,103.5502,289.080,0.0364));\n\tH(vec4(220.080,104.6048,220.080,0.0000));\n\tH(vec4(136.084,105.6229,064.140,0.0182));\n\tH(vec4(155.302,106.6593,140.164,0.0364));\n\tH(vec4(296.036,117.7320,296.036,0.0000));\n\tH(vec4(072.060,201.7684,056.156,0.0182));\n\tH(vec4(189.155,202.8048,128.116,0.0182));\n\tH(vec4(108.200,203.8411,228.272,0.0364));\n\tH(vec4(272.336,204.8957,272.336,0.0000));\n\tH(vec4(352.308,205.9139,424.252,0.0182));\n\tH(vec4(352.091,206.9502,348.224,0.0364));\n\t}\nelse if (coord.y < 110.0){ \n\tsecond = 100.0;\n\tH(vec4(140.260,217.0229,140.260,0.0000));\n\tH(vec4(272.336,301.0411,272.336,0.0000));\n\tH(vec4(352.308,302.0593,474.221,0.0364));\n\tH(vec4(392.232,303.1139,305.109,0.0364));\n\tH(vec4(260.136,304.1684,260.136,0.0000));\n\tH(vec4(196.080,305.1866,044.061,0.0364));\n\tH(vec4(068.144,306.2411,068.144,0.0000));\n\tH(vec4(036.220,307.2593,081.337,0.0364));\n\tH(vec4(160.356,318.3139,160.356,0.0000));\n\tH(vec4(244.360,001.3320,244.360,0.0000));\n\tH(vec4(324.344,002.3502,403.245,0.0364));\n\tH(vec4(372.172,003.4048,372.172,0.0000));\n\tH(vec4(440.124,004.4229,408.100,2.0090));\n\tH(vec4(376.088,015.4593,328.072,2.0090));\n\tH(vec4(304.072,101.4957,304.072,0.0000));\n\tH(vec4(156.080,102.5320,156.080,0.0000));\n\tH(vec4(156.232,113.5684,071.203,0.0182));\n\tH(vec4(428.344,201.6411,352.316,0.0182));\n\tH(vec4(268.264,202.6775,338.238,0.0182));\n\tH(vec4(324.156,203.7139,324.156,0.0000));\n\tH(vec4(184.068,204.7502,088.052,0.0182));\n\tH(vec4(035.120,205.7866,108.132,0.0182));\n\tH(vec4(032.204,206.8229,112.312,0.0364));\n\tH(vec4(184.320,207.8775,184.320,0.0000));\n\tH(vec4(256.284,208.8957,256.284,0.0000));\n\tH(vec4(300.212,219.9139,300.212,0.0000));\n\tH(vec4(368.260,301.9320,372.172,0.0182));\n\tH(vec4(257.158,302.9684,300.212,0.0182));\n\t}\nelse if (coord.y < 120.0){ \n\tsecond = 110.0;\n\tH(vec4(316.100,303.0048,180.116,0.0364));\n\tH(vec4(104.088,304.0593,108.158,0.0182));\n\tH(vec4(055.244,315.0957,124.240,0.0182));\n\tH(vec4(256.116,001.1502,256.116,0.0000));\n\tH(vec4(332.191,002.1684,332.191,0.0000));\n\tH(vec4(256.268,003.1866,256.268,0.0000));\n\tH(vec4(180.192,014.2048,180.192,0.0000));\n\tH(vec4(350.318,101.2229,230.332,0.0364));\n\tH(vec4(160.332,102.2775,048.216,0.0364));\n\tH(vec4(080.144,103.3320,080.144,0.0000));\n\tH(vec4(120.072,104.3502,258.104,0.0364));\n\tH(vec4(332.092,105.4048,332.092,0.0000));\n\tH(vec4(412.116,106.4229,440.243,0.0364));\n\tH(vec4(297.272,117.4775,372.272,0.0182));\n\tH(vec4(256.192,201.5139,256.192,0.0000));\n\tH(vec4(372.100,202.5502,372.100,0.0000));\n\tH(vec4(140.100,203.5866,140.100,0.0000));\n\tH(vec4(256.300,204.6229,256.300,0.0000));\n\tH(vec4(372.100,215.6593,372.100,0.0000));\n\t//H(vec4(256.192,311.6775,256.192,0.0000));\n\tH(vec4(336.288,001.8411,432.352,1.0272));\n\tH(vec4(468.204,002.9502,468.204,0.0000));\n\tH(vec4(312.196,003.9866,312.196,0.0000));\n\t}\nelse if (coord.y < 130.0){ \n\tsecond = 120.0;\n\tH(vec4(236.216,004.0048,124.188,0.0272));\n\tH(vec4(152.120,005.0593,152.120,0.0000));\n\tH(vec4(028.044,016.0957,028.044,0.0000));\n\tH(vec4(056.200,101.1320,152.264,1.0272));\n\tH(vec4(200.140,102.2411,200.140,0.0000));\n\tH(vec4(348.084,113.2775,412.084,0.0136));\n\tH(vec4(280.257,201.3320,220.212,0.0182));\n\tH(vec4(368.252,202.3684,249.336,0.0364));\n\tH(vec4(196.320,203.4229,064.308,0.0364));\n\tH(vec4(065.308,214.4957,065.308,0.0000));\n\tH(vec4(220.232,301.5320,295.232,0.0182));\n\tH(vec4(296.148,302.5684,221.148,0.0182));\n\tH(vec4(060.112,313.6229,116.048,1.0182));\n\tH(vec4(068.196,001.6775,116.268,0.0182));\n\tH(vec4(188.280,002.7139,188.280,0.0000));\n\tH(vec4(220.204,003.7320,332.300,0.0364));\n\tH(vec4(416.276,004.7866,416.276,0.0000));\n\tH(vec4(456.204,005.8048,400.076,0.0364));\n\tH(vec4(340.072,006.8593,340.072,0.0000));\n\tH(vec4(256.076,007.8775,256.076,0.0000));\n\tH(vec4(180.108,008.8957,100.156,0.0182));\n\tH(vec4(160.216,019.9320,225.179,0.0182));\n\t//H(vec4(256.192,111.9684,256.192,0.0000));\n\t}\n    #ifdef IDONTHAVEACHEAPINTEL\n    \nelse if (coord.y < 140.0){ \n\tsecond = 130.0;\n\tH(vec4(168.072,201.1866,112.088,2.0090));\n\tH(vec4(100.104,212.2229,076.200,0.0182));\n\tH(vec4(064.260,301.2593,216.300,0.0364));\n\tH(vec4(296.316,302.3139,432.244,0.0364));\n\tH(vec4(368.204,303.3684,368.204,0.0000));\n\tH(vec4(456.180,304.3866,448.028,0.0364));\n\tH(vec4(360.024,305.4411,360.024,0.0000));\n\tH(vec4(272.032,306.4593,272.032,0.0000));\n\tH(vec4(184.052,307.4775,120.116,0.0182));\n\tH(vec4(079.233,318.5139,136.188,0.0182));\n\tH(vec4(036.312,001.5502,204.312,0.0364));\n\tH(vec4(272.344,002.6048,344.304,0.0182));\n\tH(vec4(451.258,003.6411,424.328,0.0182));\n\tH(vec4(396.184,004.6775,424.042,0.0364));\n\tH(vec4(360.096,005.7320,218.068,0.0364));\n\tH(vec4(152.072,006.7866,152.072,0.0000));\n\tH(vec4(108.152,017.8048,060.152,2.0090));\n\tH(vec4(024.152,101.8411,024.152,0.0000));\n\tH(vec4(032.244,102.8593,108.297,0.0182));\n\tH(vec4(172.312,103.8957,308.248,0.0364));\n\tH(vec4(388.248,104.9502,388.248,0.0000));\n\tH(vec4(444.176,105.9684,444.176,0.0000));\n\tH(vec4(452.088,116.9866,452.088,0.0000));\n\t}\nelse if (coord.y < 150.0){ \n\tsecond = 140.0;\n\tH(vec4(301.037,201.0048,372.048,0.0182));\n\tH(vec4(328.124,202.0411,200.076,0.0364));\n\tH(vec4(120.080,203.0957,120.080,0.0000));\n\tH(vec4(040.120,214.1139,040.120,0.0000));\n\tH(vec4(092.192,301.1320,032.320,0.0364));\n\tH(vec4(012.240,302.1866,168.276,0.0364));\n\tH(vec4(248.292,303.2411,248.292,0.0000));\n\tH(vec4(336.284,304.2593,429.179,0.0364));\n\tH(vec4(428.096,305.3139,428.096,0.0000));\n\tH(vec4(372.024,306.3320,372.024,0.0000));\n\tH(vec4(280.024,307.3502,240.024,2.0090));\n\tH(vec4(204.024,318.3866,156.024,2.0090));\n\tH(vec4(128.024,001.4229,032.120,0.0364));\n\tH(vec4(096.168,002.4775,096.168,0.0000));\n\tH(vec4(044.244,003.4957,116.308,0.0182));\n\tH(vec4(184.332,004.5320,184.332,0.0000));\n\tH(vec4(272.344,005.5502,328.232,0.0364));\n\tH(vec4(408.188,006.6048,408.188,0.0000));\n\tH(vec4(428.100,007.6229,428.100,0.0000));\n\tH(vec4(360.040,008.6411,272.048,0.0182));\n\tH(vec4(132.064,019.6775,196.024,0.0182));\n\tH(vec4(044.044,101.7139,012.132,0.0182));\n\tH(vec4(064.192,102.7502,064.192,0.0000));\n\tH(vec4(064.192,103.7684,064.192,0.0000));\n\tH(vec4(160.344,104.8048,160.344,0.0000));\n\tH(vec4(252.348,105.8230,252.348,0.0000));\n\tH(vec4(340.324,106.8411,476.292,0.0364));\n\tH(vec4(436.208,107.8957,436.208,0.0000));\n\tH(vec4(476.128,108.9139,348.056,0.0364));\n\tH(vec4(284.048,119.9684,244.048,2.0090));\n\t}\nelse if (coord.y < 160.0){ \n\tsecond = 150.0;\n\tH(vec4(200.048,201.0048,150.097,0.0182));\n\tH(vec4(068.128,202.0411,068.128,0.0000));\n\tH(vec4(068.220,203.0593,101.358,0.0364));\n\tH(vec4(180.368,204.1139,180.368,0.0000));\n\tH(vec4(268.360,205.1320,268.360,0.0000));\n\tH(vec4(352.324,216.1502,352.324,0.0000));\n\tH(vec4(424.268,301.1684,440.171,0.0182));\n\tH(vec4(452.112,302.2048,344.016,0.0364));\n\tH(vec4(360.104,303.2593,360.104,0.0000));\n\tH(vec4(272.112,314.2775,272.112,0.0000));\n\tH(vec4(184.136,001.2957,160.280,0.0364));\n\tH(vec4(072.312,002.3502,208.336,0.0364));\n\tH(vec4(260.276,003.4048,260.276,0.0000));\n\tH(vec4(348.300,004.4229,396.172,0.0364));\n\tH(vec4(484.140,005.4775,484.140,0.0000));\n\tH(vec4(440.060,006.4957,440.060,0.0000));\n\tH(vec4(348.064,007.5139,252.072,0.0182));\n\tH(vec4(221.162,018.5502,296.156,0.0182));\n\tH(vec4(132.172,101.5866,192.232,0.0182));\n\tH(vec4(260.312,102.6229,320.252,0.0182));\n\tH(vec4(416.216,103.6593,356.156,0.0182));\n\tH(vec4(308.064,104.6957,248.124,0.0182));\n\tH(vec4(208.220,105.7320,120.220,0.0182));\n\tH(vec4(124.128,116.7684,053.102,0.0182));\n\tH(vec4(120.040,201.8048,244.100,0.0325));\n\tH(vec4(256.192,212.8775,256.192,0.0000));\n\t//H(vec4(256.192,311.8957,256.192,0.0000));\n\t}\nelse if (coord.y < 180.0){ \n\tsecond = 170.0;\n\tH(vec4(168.072,001.0775,064.144,0.0364));\n\tH(vec4(216.192,002.1502,216.192,0.0000));\n\tH(vec4(061.255,003.1866,168.312,0.0364));\n\tH(vec4(244.280,004.2411,396.312,0.0364));\n\tH(vec4(420.232,005.2957,420.232,0.0000));\n\tH(vec4(404.152,016.3139,404.152,0.0000));\n\tH(vec4(344.096,101.3320,256.120,0.0182));\n\tH(vec4(172.156,102.3684,242.182,0.0182));\n\tH(vec4(116.096,103.4048,028.120,0.0182));\n\tH(vec4(044.280,104.4411,044.280,0.0000));\n\tH(vec4(016.200,105.4593,136.280,0.0364));\n\tH(vec4(208.300,106.5139,208.300,0.0000));\n\tH(vec4(292.296,107.5320,292.296,0.0000));\n\tH(vec4(368.260,108.5502,374.188,0.0182));\n\tH(vec4(362.106,119.5866,302.146,0.0182));\n\tH(vec4(184.068,201.6229,104.112,0.0182));\n\tH(vec4(176.192,202.6593,176.192,0.0000));\n\tH(vec4(120.280,203.6775,185.316,0.0182));\n\tH(vec4(256.236,204.7139,256.236,0.0000));\n\tH(vec4(326.316,205.7320,392.280,0.0182));\n\tH(vec4(336.192,206.7684,336.192,0.0000));\n\tH(vec4(392.104,207.7866,326.067,0.0182));\n\tH(vec4(256.148,208.8229,256.148,0.0000));\n\tH(vec4(160.104,209.8411,080.124,0.0182));\n\tH(vec4(008.192,210.8775,077.223,0.0182));\n\tH(vec4(160.212,301.9139,248.212,0.0182));\n\tH(vec4(316.212,302.9502,416.212,0.0182));\n\tH(vec4(456.280,303.9866,416.296,2.0090));\n\t}\nelse if (coord.y < 190.0){ \n\tsecond = 180.0;\n\tH(vec4(380.296,304.0229,336.300,2.0090));\n\tH(vec4(300.300,305.0593,260.300,2.0090));\n\tH(vec4(220.296,316.0957,064.240,0.0727));\n\tH(vec4(068.080,011.2048,068.080,0.0000));\n\tH(vec4(364.104,101.7139,364.104,0.0000));\n\tH(vec4(148.104,102.7502,148.104,0.0000));\n\tH(vec4(256.296,113.7866,256.296,0.0000));\n\tH(vec4(180.192,211.8775,332.192,0.0364));\n\t}\nelse if (coord.y < 200.0){ \n\tsecond = 190.0;\n\tH(vec4(364.280,301.0048,364.280,0.0000));\n\tH(vec4(148.280,312.0411,148.280,0.0000));\n\tH(vec4(256.124,001.0775,120.116,0.0364));\n\tH(vec4(060.128,002.1320,179.160,0.0364));\n\tH(vec4(200.240,003.1866,200.240,0.0000));\n\tH(vec4(164.316,004.2048,324.316,0.0364));\n\tH(vec4(396.186,005.2593,384.260,0.0182));\n\tH(vec4(408.096,006.2957,368.096,2.0090));\n\tH(vec4(328.096,017.3320,280.096,2.0090));\n\tH(vec4(248.096,101.3684,112.152,0.0364));\n\tH(vec4(028.148,102.4229,047.293,0.0364));\n\tH(vec4(116.312,103.4775,116.312,0.0000));\n\tH(vec4(204.336,104.4957,317.268,0.0364));\n\tH(vec4(332.192,105.5502,332.192,0.0000));\n\tH(vec4(400.136,106.5684,400.136,0.0000));\n\tH(vec4(456.208,107.5866,480.120,0.0182));\n\tH(vec4(392.034,118.6229,460.060,0.0182));\n\tH(vec4(316.084,201.6593,148.084,0.0364));\n\tH(vec4(192.172,202.7139,192.172,0.0000));\n\tH(vec4(036.264,203.7502,133.345,0.0364));\n\tH(vec4(192.172,204.8229,096.196,1.0182));\n\tH(vec4(228.348,205.8957,228.348,0.0000));\n\tH(vec4(320.348,216.9139,360.348,2.0090));\n\tH(vec4(404.348,301.9502,476.314,0.0182));\n\tH(vec4(455.181,302.9866,420.244,0.0182));\n\t}\nelse if (coord.y < 210.0){ \n\tsecond = 200.0;\n\tH(vec4(432.096,303.0229,432.096,0.0000));\n\tH(vec4(360.040,314.0411,289.025,1.0182));\n\tH(vec4(304.112,001.0957,216.128,0.0182));\n\tH(vec4(108.085,002.1320,176.052,0.0182));\n\tH(vec4(096.176,003.1684,096.176,0.0000));\n\tH(vec4(060.260,014.1866,016.184,1.0182));\n\tH(vec4(148.284,101.2411,236.268,0.0182));\n\tH(vec4(363.286,102.2775,296.320,0.0182));\n\tH(vec4(392.200,103.3139,392.200,0.0000));\n\tH(vec4(444.128,114.3320,480.196,1.0182));\n\tH(vec4(384.060,201.3866,304.060,0.0182));\n\tH(vec4(224.076,202.4229,174.150,0.0182));\n\tH(vec4(100.180,203.4593,100.180,0.0000));\n\tH(vec4(092.267,214.4775,028.236,1.0182));\n\tH(vec4(164.324,301.5320,164.324,0.0000));\n\tH(vec4(248.292,302.5502,336.316,0.0182));\n\tH(vec4(404.296,303.5866,476.168,0.0364));\n\tH(vec4(432.104,304.6411,432.104,0.0000));\n\tH(vec4(352.064,315.6593,352.064,0.0000));\n\tH(vec4(260.064,001.6775,260.064,0.0000));\n\tH(vec4(172.084,002.6957,148.156,0.0182));\n\tH(vec4(224.192,003.7320,104.272,0.0364));\n\tH(vec4(084.360,014.7866,164.360,0.0182));\n\tH(vec4(248.364,101.8229,360.260,0.0364));\n\tH(vec4(448.276,102.8775,337.199,0.0364));\n\tH(vec4(316.112,103.9320,316.112,0.0000));\n\tH(vec4(300.024,104.9502,140.024,0.0364));\n\t}\nelse if (coord.y < 220.0){ \n\tsecond = 210.0;\n\tH(vec4(072.068,105.0048,072.068,0.0000));\n\tH(vec4(060.156,106.0229,060.156,0.0000));\n\tH(vec4(100.236,107.0411,182.286,0.0182));\n\tH(vec4(305.226,118.0775,232.236,0.0182));\n\tH(vec4(388.188,201.1139,468.164,0.0182));\n\tH(vec4(348.128,202.1502,420.064,0.0182));\n\tH(vec4(292.084,203.1866,324.004,0.0182));\n\tH(vec4(220.084,204.2230,188.004,0.0182));\n\tH(vec4(164.128,205.2593,092.064,0.0182));\n\tH(vec4(124.188,216.2957,044.164,0.0182));\n\tH(vec4(194.259,301.3320,328.248,0.0325));\n\tH(vec4(256.192,312.4048,256.192,0.0000));\n\t//H(vec4(256.192,011.4229,256.192,0.0000));\n\tH(vec4(304.272,101.6957,400.240,0.0182));\n\tH(vec4(436.192,102.7320,436.192,0.0000));\n\tH(vec4(367.147,103.7502,304.112,0.0182));\n\tH(vec4(256.044,104.7866,256.044,0.0000));\n\tH(vec4(208.112,105.8048,144.147,0.0182));\n\tH(vec4(076.192,106.8411,076.192,0.0000));\n\tH(vec4(144.236,107.8593,208.272,0.0182));\n\tH(vec4(256.340,108.8957,256.340,0.0000));\n\tH(vec4(340.328,119.9139,403.198,0.0364));\n\tH(vec4(244.088,201.9866,314.105,0.0182));\n\t}\nelse if (coord.y < 230.0){ \n\tsecond = 220.0;\n\tH(vec4(256.192,202.0229,256.192,0.0000));\n\tH(vec4(268.296,203.0411,197.278,0.0182));\n\tH(vec4(256.192,204.0775,256.192,0.0000));\n\tH(vec4(360.180,205.0957,342.250,0.0182));\n\tH(vec4(256.192,206.1320,256.192,0.0000));\n\tH(vec4(152.204,207.1502,169.133,0.0182));\n\tH(vec4(256.192,208.1866,256.192,0.0000));\n\tH(vec4(352.240,219.2048,416.204,1.0182));\n\tH(vec4(164.312,301.2775,139.227,0.0182));\n\tH(vec4(136.164,302.3139,136.164,0.0000));\n\tH(vec4(136.080,303.3320,222.055,0.0182));\n\tH(vec4(284.056,304.3684,284.056,0.0000));\n\tH(vec4(368.060,305.3866,394.146,0.0182));\n\tH(vec4(400.208,306.4229,400.208,0.0000));\n\tH(vec4(400.292,307.4411,315.318,0.0182));\n\tH(vec4(252.320,308.4775,252.320,0.0000));\n\tH(vec4(164.316,309.4957,114.241,0.0182));\n\tH(vec4(116.172,310.5320,116.172,0.0000));\n\tH(vec4(276.112,001.5684,328.232,0.0364));\n\tH(vec4(236.272,012.6229,180.152,0.0364));\n\tH(vec4(256.192,111.6775,256.192,0.0000));\n\t//H(vec4(256.192,201.6957,256.192,0.0000));\n\t}\n#endif\n\t}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    coord = fragCoord;\n    if (coord.x > 10.0)\n        fragColor = vec4(0);  /// Intel doesn't like discards\n    \n    if (iFrame == 0){\n    \tB();\n    \tfragColor = color;\n    \t}\n    else\n        fragColor = texture(iChannel0, fragCoord.xy/iResolution.xy);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"/// The Game\n\nfloat RADIUS = 0.1; /// Don't forget to change it in the other buffers\n\n#define TIMEOUT 0.3\n\n#define PREVMOUSE 11\n#define MOUSEEVENT 12\n#define NEXTHIT 13\n#define HELPERPOS 14\n#define COL0 15\n#define COL1 16\n#define COL2 17\n#define COL3 18\n#define SCORE 19\n#define LASTVALUE 20\n\n/// Colors extracted from the .osu file format ([Colours] section)\n/// Change them consequently if you use another song\n/// Only exactly 4 colors are supported though :(\n#define COMBO_COLOR0 pow(vec4(173./255.,79./255.,71./255.,1.0), vec4(2))\n#define COMBO_COLOR1 pow(vec4(39./255.,205./255.,64./255.,1.0), vec4(2))\n#define COMBO_COLOR2 pow(vec4(49./255.,49./255.,196./255.,1.0), vec4(2))\n#define COMBO_COLOR3 pow(vec4(43./255.,179./255.,202./255.,1.0), vec4(2))\n\nvec2 coord = vec2(0);\nvec2 tc = vec2(0);\nvec2 texel = vec2(0);\nfloat globalTime;\n// Utils\n\nbool texelXIs(int x){\n    float f = float(x);\n    return (coord.x > f && coord.x < (f + 1.0));\n\t}\n\nvec4 getSongTexel(vec2 t){\n    return texture(iChannel0, (t + vec2(.5)) * texel, -100.0);\t\n\t}\n\nvec4 getGameTexel(vec2 t){\n    return texture(iChannel1, (t + vec2(.5)) * texel, -100.0);\n\t}\n\n/// Game state\n\nvec4 prevMouse = vec4(0);\nint mouseClick = 0;\nint mouseUp = 0;\nvec4 nextHit = vec4(0);\nvec4 nextHitP = vec4(0);\nvec2 mouse;\nvec4 score;\n\nvoid loadGameState(){\n    score = getGameTexel(vec2(SCORE, 0));\n    prevMouse = getGameTexel(vec2(PREVMOUSE, 0));    \n    mouseClick = iMouse.z > prevMouse.z ? 1 : 0;\n    mouseUp = prevMouse.z > iMouse.z ? 1 : 0;\n    mouse = (vec2(iMouse.xy) - vec2((iResolution.x - iResolution.y)*.66,0)) / iResolution.y;\n \n    /// Pointers in GLSL ? You saw them here first! #probablynot\n    nextHitP = getGameTexel(vec2(NEXTHIT, 0));\n    nextHit = texture(iChannel0, (nextHitP.xy + vec2(0.5)) * texel);\n\t}\n\nbool mouseInHit(vec4 hit){\n    return length(hit.xy - mouse.xy) < RADIUS*1.2; /// Let's make it easier....\n\t}\n\nvec4 getBallPos(vec4 hit, vec4 slide){\n    float hitTime = hit.z + nextHitP.y;\n           \n    float interp = clamp((globalTime - hitTime)/slide.z, 0.0, 1.0);\n    vec2 pos = mix(hit.xy, slide.xy, interp);\n    \n   \treturn vec4(pos, interp, 0);\n\t}\n\nvec4 resolveScore(vec4 score, vec4 slide){\n    float clickLag = score.x - 1.0;\n    float timeIn = score.y; \n    float timeOut = score.z;\n    float totalTime = timeIn + timeOut + 0.1;\n    \n    float inRatio = timeIn/totalTime;\n    \n    if (abs(clickLag) < 0.075 && inRatio > 0.75 )\n        return vec4(0.4,0,0,1);\t\t\t\t\t\t/// PERFECT!!!\n    if (abs(clickLag) > TIMEOUT && inRatio < 0.1)\n        return vec4(0,0,0,1);\t\t\t\t\t\t/// FAIL\n    return vec4(0.2,0,0,1);\t\t\t\t\t\t\t/// MEH...\n\t}\n\n\nbool checkFinish(inout vec4 score, vec4 hit, vec4 slide, float second){\n    float hitTime = second + hit.z; \n    float hitEnd = 0.0;\n    \n    if (slide.z > 0.0)\n        hitEnd = hitTime + slide.z;\n    else\n        hitEnd = hitTime + (score.x == 0.0 ? TIMEOUT : (score.x - 1.0));\n        \n    score.a = 0.0;\n    if (globalTime < hitEnd)\n    \treturn false;\n\n    score = resolveScore(score, slide);    \n    return true;\n\t}\n\nvec4 checkHit(vec4 hit, vec4 hitScore, float second){\n    float hitTime = second + hit.z; \n    float t = hitTime - globalTime;\n    \n\tif (hit != nextHit)\n        return hitScore;\n    \n\tvec4 slide = texture(iChannel0, (nextHitP.xy + vec2(1.5, 0.5)) * texel );\n    vec4 nextPos = getBallPos(hit, slide);\n    \n    if (mouseClick == 1 && mouseInHit(hit)){\n        if (hitScore.x == 0.0){\n        \thitScore.x = -t + 1.0;\n            hitScore.y += 1.0;\n        \t}\n    \t}\n\n    if (globalTime >= hitTime && globalTime <= hitTime + slide.z){\n\t    if (iMouse.z > 0.0 && mouseInHit(nextPos))\n   \t    \thitScore.y += 1.0;\n   \t\telse\n        \thitScore.z += 1.0;\n    \t}\n    \n    if (!checkFinish(hitScore, hit, slide, second))\n        hitScore.a == 0.0;\n    return hitScore;\n\t}\n\nbool isValid(vec4 hit){\n    return hit.a > 0.0;\n\t}\n\nbool isResolved(vec4 score){\n    return score.a == 1.;\n\t}\n\n/// Find the first unresolved hit\nvec4 getNextHit(){  \n    vec4 hit = vec4(0);\n    for (int j = -2; j <= 1; j++){ /// Check seconds n-1, n and n+1\n\t    float second = floor(globalTime) + float(j);\n            for (int i = 0; i < 10; i+=2){\n            hit = texture(iChannel0, (vec2(i,second) + vec2(0.5)) * texel );\n            vec4 score = texture(iChannel1, (vec2(i,second) + vec2(0.5)) * texel );\n            if (isValid(hit) && !isResolved(score))\n                return vec4(i, second, 0, 0);\n            }\n    \t}\n    return vec4(0);\n\t}\n\nvec4 getNextPos(){\n    vec4 nextSlide = texture(iChannel0, (nextHitP.xy + vec2(1.5,0.5)) * texel);\n    \n    return getBallPos(nextHit, nextSlide);\n\t}\n\nvec4 getScore(){\n    \n    vec4 nextHitScore = texture(iChannel1, (nextHitP.xy + vec2(0.5)) * texel);\n    \n    vec4 check;\n    \n    if (nextHit.xy == vec2(0))\n        return score;\n    \n    if (!isResolved(nextHitScore)){\n        check = checkHit(nextHit, nextHitScore, nextHitP.y);\n        if (check.a == 1.0)\n            return score + vec4(check.x == 0.4 ? 1.0: 0.0,\n                        check.x == 0.2 ? 1.0: 0.0,\n                        check.x == 0.0 ? 1.0: 0.0,\n                        1.0);\n    \t}\n\t\n    \n    return score ;\n\t}\n\nvec4 saveGameState(){\n    vec4 color = vec4(0);\n\n    \n    if (coord.x < 10.0){\t\t/// hit\t\n        \n        vec4 hit = texture(iChannel0, coord * texel, -100.0);\n        vec4 hitScore = texture(iChannel1, coord * texel, -100.0);\n        \n    \tif (hit.r > 0.0 && hitScore.a < 1.0)\n            color = checkHit(hit, hitScore, coord.y - 0.5);\n        else\n            color = hitScore;   //// Why do I have to do this ?\n    \t}\n    else if (coord.y > 0.0 && coord.y < 1.0){ /// General Row\n        if (texelXIs(PREVMOUSE))\n            color = iMouse;\n        if (texelXIs(MOUSEEVENT))\n            color = vec4(mouseClick, mouseUp, 0, 1.0);\n        if (texelXIs(NEXTHIT))\n            color = getNextHit();\n        if (texelXIs(HELPERPOS))\n            color = getNextPos();\n        if (texelXIs(SCORE))\n            color = getScore();\n        if (texelXIs(COL0))\t\t\t/// FIXME This should be in the song buffer\n            return COMBO_COLOR0;\n        if (texelXIs(COL1))\n            return COMBO_COLOR1;\n        if (texelXIs(COL2))\n            return COMBO_COLOR2;\n        if (texelXIs(COL3))\n            return COMBO_COLOR3;\n      \t}\n    return color;    \n\t}\n\nvec4 processFrame(){\n    loadGameState();\n    \n    return saveGameState();\n\t}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    globalTime = iTime * 1.0625;\n    coord = fragCoord;\n    tc = fragCoord/iResolution.xy;\n    texel = 1.0/iResolution.xy;\n\n    if (fragCoord.x > float(LASTVALUE))\n        discard;\n    \n    if (iFrame < 2)\n        fragColor = vec4(0);\n    else\n        fragColor = processFrame();\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"/// The Sprites\n/// Quite boring, mainly a bunch of calls to these 2 functions\n\nfloat RADIUS = 0.1; /// Don't forget to change it in the other buffers\n\n/// Segment with two radius\nfloat df_line2(in vec2 p, in vec2 a, in vec2 b, float r1, float r2){\n    vec2 pa = p - a, ba = b - a;\n\tfloat h = clamp(dot(pa,ba) / dot(ba,ba), 0., 1.);\n    float r = mix(r1, r2, h);\n    float d = length(pa - ba * h);\n    float w = fwidth(d) * .5;\n    return smoothstep(-w, w, r -d);\n\t}\n\nvec4 blend(vec4 b, vec4 f){\n    vec4 c = mix(b, f, f.a);\n    c.a = 1.0 - ((1.0 - f.a) * (1.0 - b.a));\n    return c;\n\t}\n\n/////////////////////////////////////////////////////////////////////////\n/// Text Render\n/// Blantaly stolen from dine909 (https://www.shadertoy.com/view/MsyGzz)\n\nfloat res=0.;\nvec2 cpos=vec2(0.);\n\nfloat opU( float d1, float d2 )\n{\n    return min(d1,d2);\n}\n\nfloat width;\nfloat kern = 1.0;\n\nfloat line( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float d = length( pa - ba*h );\n\n    //return  1.00 + width - d;\n    return d;\n    \n}\n// CHAR: 32 : \nvoid char_32(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    cpos.x+=16.0*s.x*kern;\n}\n\n// CHAR: 48 :0\nvoid char_0(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(9.0,21.0)*s,vec2(6.0,20.0)*s));\n    res=opU(res,line(p,vec2(6.0,20.0)*s,vec2(4.0,17.0)*s));\n    res=opU(res,line(p,vec2(4.0,17.0)*s,vec2(3.0,12.0)*s));\n    res=opU(res,line(p,vec2(3.0,12.0)*s,vec2(3.0,9.0)*s));\n    res=opU(res,line(p,vec2(3.0,9.0)*s,vec2(4.0,4.0)*s));\n    res=opU(res,line(p,vec2(4.0,4.0)*s,vec2(6.0,1.0)*s));\n    res=opU(res,line(p,vec2(6.0,1.0)*s,vec2(9.0,0.0)*s));\n    res=opU(res,line(p,vec2(9.0,0.0)*s,vec2(11.0,0.0)*s));\n    res=opU(res,line(p,vec2(11.0,0.0)*s,vec2(14.0,1.0)*s));\n    res=opU(res,line(p,vec2(14.0,1.0)*s,vec2(16.0,4.0)*s));\n    res=opU(res,line(p,vec2(16.0,4.0)*s,vec2(17.0,9.0)*s));\n    res=opU(res,line(p,vec2(17.0,9.0)*s,vec2(17.0,12.0)*s));\n    res=opU(res,line(p,vec2(17.0,12.0)*s,vec2(16.0,17.0)*s));\n    res=opU(res,line(p,vec2(16.0,17.0)*s,vec2(14.0,20.0)*s));\n    res=opU(res,line(p,vec2(14.0,20.0)*s,vec2(11.0,21.0)*s));\n    res=opU(res,line(p,vec2(11.0,21.0)*s,vec2(9.0,21.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 49 :1\nvoid char_1(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(6.0,17.0)*s,vec2(8.0,18.0)*s));\n    res=opU(res,line(p,vec2(8.0,18.0)*s,vec2(11.0,21.0)*s));\n    res=opU(res,line(p,vec2(11.0,21.0)*s,vec2(11.0,0.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 50 :2\nvoid char_2(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(4.0,16.0)*s,vec2(4.0,17.0)*s));\n    res=opU(res,line(p,vec2(4.0,17.0)*s,vec2(5.0,19.0)*s));\n    res=opU(res,line(p,vec2(5.0,19.0)*s,vec2(6.0,20.0)*s));\n    res=opU(res,line(p,vec2(6.0,20.0)*s,vec2(8.0,21.0)*s));\n    res=opU(res,line(p,vec2(8.0,21.0)*s,vec2(12.0,21.0)*s));\n    res=opU(res,line(p,vec2(12.0,21.0)*s,vec2(14.0,20.0)*s));\n    res=opU(res,line(p,vec2(14.0,20.0)*s,vec2(15.0,19.0)*s));\n    res=opU(res,line(p,vec2(15.0,19.0)*s,vec2(16.0,17.0)*s));\n    res=opU(res,line(p,vec2(16.0,17.0)*s,vec2(16.0,15.0)*s));\n    res=opU(res,line(p,vec2(16.0,15.0)*s,vec2(15.0,13.0)*s));\n    res=opU(res,line(p,vec2(15.0,13.0)*s,vec2(13.0,10.0)*s));\n    res=opU(res,line(p,vec2(13.0,10.0)*s,vec2(3.0,0.0)*s));\n    res=opU(res,line(p,vec2(3.0,0.0)*s,vec2(17.0,0.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 51 :3\nvoid char_3(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(5.0,21.0)*s,vec2(16.0,21.0)*s));\n    res=opU(res,line(p,vec2(16.0,21.0)*s,vec2(10.0,13.0)*s));\n    res=opU(res,line(p,vec2(10.0,13.0)*s,vec2(13.0,13.0)*s));\n    res=opU(res,line(p,vec2(13.0,13.0)*s,vec2(15.0,12.0)*s));\n    res=opU(res,line(p,vec2(15.0,12.0)*s,vec2(16.0,11.0)*s));\n    res=opU(res,line(p,vec2(16.0,11.0)*s,vec2(17.0,8.0)*s));\n    res=opU(res,line(p,vec2(17.0,8.0)*s,vec2(17.0,6.0)*s));\n    res=opU(res,line(p,vec2(17.0,6.0)*s,vec2(16.0,3.0)*s));\n    res=opU(res,line(p,vec2(16.0,3.0)*s,vec2(14.0,1.0)*s));\n    res=opU(res,line(p,vec2(14.0,1.0)*s,vec2(11.0,0.0)*s));\n    res=opU(res,line(p,vec2(11.0,0.0)*s,vec2(8.0,0.0)*s));\n    res=opU(res,line(p,vec2(8.0,0.0)*s,vec2(5.0,1.0)*s));\n    res=opU(res,line(p,vec2(5.0,1.0)*s,vec2(4.0,2.0)*s));\n    res=opU(res,line(p,vec2(4.0,2.0)*s,vec2(3.0,4.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 52 :4\nvoid char_4(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(13.0,21.0)*s,vec2(3.0,7.0)*s));\n    res=opU(res,line(p,vec2(3.0,7.0)*s,vec2(18.0,7.0)*s));\n    res=opU(res,line(p,vec2(13.0,21.0)*s,vec2(13.0,0.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 53 :5\nvoid char_5(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(15.0,21.0)*s,vec2(5.0,21.0)*s));\n    res=opU(res,line(p,vec2(5.0,21.0)*s,vec2(4.0,12.0)*s));\n    res=opU(res,line(p,vec2(4.0,12.0)*s,vec2(5.0,13.0)*s));\n    res=opU(res,line(p,vec2(5.0,13.0)*s,vec2(8.0,14.0)*s));\n    res=opU(res,line(p,vec2(8.0,14.0)*s,vec2(11.0,14.0)*s));\n    res=opU(res,line(p,vec2(11.0,14.0)*s,vec2(14.0,13.0)*s));\n    res=opU(res,line(p,vec2(14.0,13.0)*s,vec2(16.0,11.0)*s));\n    res=opU(res,line(p,vec2(16.0,11.0)*s,vec2(17.0,8.0)*s));\n    res=opU(res,line(p,vec2(17.0,8.0)*s,vec2(17.0,6.0)*s));\n    res=opU(res,line(p,vec2(17.0,6.0)*s,vec2(16.0,3.0)*s));\n    res=opU(res,line(p,vec2(16.0,3.0)*s,vec2(14.0,1.0)*s));\n    res=opU(res,line(p,vec2(14.0,1.0)*s,vec2(11.0,0.0)*s));\n    res=opU(res,line(p,vec2(11.0,0.0)*s,vec2(8.0,0.0)*s));\n    res=opU(res,line(p,vec2(8.0,0.0)*s,vec2(5.0,1.0)*s));\n    res=opU(res,line(p,vec2(5.0,1.0)*s,vec2(4.0,2.0)*s));\n    res=opU(res,line(p,vec2(4.0,2.0)*s,vec2(3.0,4.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 54 :6\nvoid char_6(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(16.0,18.0)*s,vec2(15.0,20.0)*s));\n    res=opU(res,line(p,vec2(15.0,20.0)*s,vec2(12.0,21.0)*s));\n    res=opU(res,line(p,vec2(12.0,21.0)*s,vec2(10.0,21.0)*s));\n    res=opU(res,line(p,vec2(10.0,21.0)*s,vec2(7.0,20.0)*s));\n    res=opU(res,line(p,vec2(7.0,20.0)*s,vec2(5.0,17.0)*s));\n    res=opU(res,line(p,vec2(5.0,17.0)*s,vec2(4.0,12.0)*s));\n    res=opU(res,line(p,vec2(4.0,12.0)*s,vec2(4.0,7.0)*s));\n    res=opU(res,line(p,vec2(4.0,7.0)*s,vec2(5.0,3.0)*s));\n    res=opU(res,line(p,vec2(5.0,3.0)*s,vec2(7.0,1.0)*s));\n    res=opU(res,line(p,vec2(7.0,1.0)*s,vec2(10.0,0.0)*s));\n    res=opU(res,line(p,vec2(10.0,0.0)*s,vec2(11.0,0.0)*s));\n    res=opU(res,line(p,vec2(11.0,0.0)*s,vec2(14.0,1.0)*s));\n    res=opU(res,line(p,vec2(14.0,1.0)*s,vec2(16.0,3.0)*s));\n    res=opU(res,line(p,vec2(16.0,3.0)*s,vec2(17.0,6.0)*s));\n    res=opU(res,line(p,vec2(17.0,6.0)*s,vec2(17.0,7.0)*s));\n    res=opU(res,line(p,vec2(17.0,7.0)*s,vec2(16.0,10.0)*s));\n    res=opU(res,line(p,vec2(16.0,10.0)*s,vec2(14.0,12.0)*s));\n    res=opU(res,line(p,vec2(14.0,12.0)*s,vec2(11.0,13.0)*s));\n    res=opU(res,line(p,vec2(11.0,13.0)*s,vec2(10.0,13.0)*s));\n    res=opU(res,line(p,vec2(10.0,13.0)*s,vec2(7.0,12.0)*s));\n    res=opU(res,line(p,vec2(7.0,12.0)*s,vec2(5.0,10.0)*s));\n    res=opU(res,line(p,vec2(5.0,10.0)*s,vec2(4.0,7.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 55 :7\nvoid char_7(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(17.0,21.0)*s,vec2(7.0,0.0)*s));\n    res=opU(res,line(p,vec2(3.0,21.0)*s,vec2(17.0,21.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 56 :8\nvoid char_8(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(8.0,21.0)*s,vec2(5.0,20.0)*s));\n    res=opU(res,line(p,vec2(5.0,20.0)*s,vec2(4.0,18.0)*s));\n    res=opU(res,line(p,vec2(4.0,18.0)*s,vec2(4.0,16.0)*s));\n    res=opU(res,line(p,vec2(4.0,16.0)*s,vec2(5.0,14.0)*s));\n    res=opU(res,line(p,vec2(5.0,14.0)*s,vec2(7.0,13.0)*s));\n    res=opU(res,line(p,vec2(7.0,13.0)*s,vec2(11.0,12.0)*s));\n    res=opU(res,line(p,vec2(11.0,12.0)*s,vec2(14.0,11.0)*s));\n    res=opU(res,line(p,vec2(14.0,11.0)*s,vec2(16.0,9.0)*s));\n    res=opU(res,line(p,vec2(16.0,9.0)*s,vec2(17.0,7.0)*s));\n    res=opU(res,line(p,vec2(17.0,7.0)*s,vec2(17.0,4.0)*s));\n    res=opU(res,line(p,vec2(17.0,4.0)*s,vec2(16.0,2.0)*s));\n    res=opU(res,line(p,vec2(16.0,2.0)*s,vec2(15.0,1.0)*s));\n    res=opU(res,line(p,vec2(15.0,1.0)*s,vec2(12.0,0.0)*s));\n    res=opU(res,line(p,vec2(12.0,0.0)*s,vec2(8.0,0.0)*s));\n    res=opU(res,line(p,vec2(8.0,0.0)*s,vec2(5.0,1.0)*s));\n    res=opU(res,line(p,vec2(5.0,1.0)*s,vec2(4.0,2.0)*s));\n    res=opU(res,line(p,vec2(4.0,2.0)*s,vec2(3.0,4.0)*s));\n    res=opU(res,line(p,vec2(3.0,4.0)*s,vec2(3.0,7.0)*s));\n    res=opU(res,line(p,vec2(3.0,7.0)*s,vec2(4.0,9.0)*s));\n    res=opU(res,line(p,vec2(4.0,9.0)*s,vec2(6.0,11.0)*s));\n    res=opU(res,line(p,vec2(6.0,11.0)*s,vec2(9.0,12.0)*s));\n    res=opU(res,line(p,vec2(9.0,12.0)*s,vec2(13.0,13.0)*s));\n    res=opU(res,line(p,vec2(13.0,13.0)*s,vec2(15.0,14.0)*s));\n    res=opU(res,line(p,vec2(15.0,14.0)*s,vec2(16.0,16.0)*s));\n    res=opU(res,line(p,vec2(16.0,16.0)*s,vec2(16.0,18.0)*s));\n    res=opU(res,line(p,vec2(16.0,18.0)*s,vec2(15.0,20.0)*s));\n    res=opU(res,line(p,vec2(15.0,20.0)*s,vec2(12.0,21.0)*s));\n    res=opU(res,line(p,vec2(12.0,21.0)*s,vec2(8.0,21.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 57 :9\nvoid char_9(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(16.0,14.0)*s,vec2(15.0,11.0)*s));\n    res=opU(res,line(p,vec2(15.0,11.0)*s,vec2(13.0,9.0)*s));\n    res=opU(res,line(p,vec2(13.0,9.0)*s,vec2(10.0,8.0)*s));\n    res=opU(res,line(p,vec2(10.0,8.0)*s,vec2(9.0,8.0)*s));\n    res=opU(res,line(p,vec2(9.0,8.0)*s,vec2(6.0,9.0)*s));\n    res=opU(res,line(p,vec2(6.0,9.0)*s,vec2(4.0,11.0)*s));\n    res=opU(res,line(p,vec2(4.0,11.0)*s,vec2(3.0,14.0)*s));\n    res=opU(res,line(p,vec2(3.0,14.0)*s,vec2(3.0,15.0)*s));\n    res=opU(res,line(p,vec2(3.0,15.0)*s,vec2(4.0,18.0)*s));\n    res=opU(res,line(p,vec2(4.0,18.0)*s,vec2(6.0,20.0)*s));\n    res=opU(res,line(p,vec2(6.0,20.0)*s,vec2(9.0,21.0)*s));\n    res=opU(res,line(p,vec2(9.0,21.0)*s,vec2(10.0,21.0)*s));\n    res=opU(res,line(p,vec2(10.0,21.0)*s,vec2(13.0,20.0)*s));\n    res=opU(res,line(p,vec2(13.0,20.0)*s,vec2(15.0,18.0)*s));\n    res=opU(res,line(p,vec2(15.0,18.0)*s,vec2(16.0,14.0)*s));\n    res=opU(res,line(p,vec2(16.0,14.0)*s,vec2(16.0,9.0)*s));\n    res=opU(res,line(p,vec2(16.0,9.0)*s,vec2(15.0,4.0)*s));\n    res=opU(res,line(p,vec2(15.0,4.0)*s,vec2(13.0,1.0)*s));\n    res=opU(res,line(p,vec2(13.0,1.0)*s,vec2(10.0,0.0)*s));\n    res=opU(res,line(p,vec2(10.0,0.0)*s,vec2(8.0,0.0)*s));\n    res=opU(res,line(p,vec2(8.0,0.0)*s,vec2(5.0,1.0)*s));\n    res=opU(res,line(p,vec2(5.0,1.0)*s,vec2(4.0,3.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 65 :A\nvoid char_A(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(9.0,21.0)*s,vec2(1.0,0.0)*s));\n    res=opU(res,line(p,vec2(9.0,21.0)*s,vec2(17.0,0.0)*s));\n    res=opU(res,line(p,vec2(4.0,7.0)*s,vec2(14.0,7.0)*s));\n    cpos.x+=18.0*s.x*kern;\n}\n\n// CHAR: 66 :B\nvoid char_B(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(4.0,21.0)*s,vec2(4.0,0.0)*s));\n    res=opU(res,line(p,vec2(4.0,21.0)*s,vec2(13.0,21.0)*s));\n    res=opU(res,line(p,vec2(13.0,21.0)*s,vec2(16.0,20.0)*s));\n    res=opU(res,line(p,vec2(16.0,20.0)*s,vec2(17.0,19.0)*s));\n    res=opU(res,line(p,vec2(17.0,19.0)*s,vec2(18.0,17.0)*s));\n    res=opU(res,line(p,vec2(18.0,17.0)*s,vec2(18.0,15.0)*s));\n    res=opU(res,line(p,vec2(18.0,15.0)*s,vec2(17.0,13.0)*s));\n    res=opU(res,line(p,vec2(17.0,13.0)*s,vec2(16.0,12.0)*s));\n    res=opU(res,line(p,vec2(16.0,12.0)*s,vec2(13.0,11.0)*s));\n    res=opU(res,line(p,vec2(4.0,11.0)*s,vec2(13.0,11.0)*s));\n    res=opU(res,line(p,vec2(13.0,11.0)*s,vec2(16.0,10.0)*s));\n    res=opU(res,line(p,vec2(16.0,10.0)*s,vec2(17.0,9.0)*s));\n    res=opU(res,line(p,vec2(17.0,9.0)*s,vec2(18.0,7.0)*s));\n    res=opU(res,line(p,vec2(18.0,7.0)*s,vec2(18.0,4.0)*s));\n    res=opU(res,line(p,vec2(18.0,4.0)*s,vec2(17.0,2.0)*s));\n    res=opU(res,line(p,vec2(17.0,2.0)*s,vec2(16.0,1.0)*s));\n    res=opU(res,line(p,vec2(16.0,1.0)*s,vec2(13.0,0.0)*s));\n    res=opU(res,line(p,vec2(13.0,0.0)*s,vec2(4.0,0.0)*s));\n    cpos.x+=21.0*s.x*kern;\n}\n\n// CHAR: 67 :C\nvoid char_C(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(18.0,16.0)*s,vec2(17.0,18.0)*s));\n    res=opU(res,line(p,vec2(17.0,18.0)*s,vec2(15.0,20.0)*s));\n    res=opU(res,line(p,vec2(15.0,20.0)*s,vec2(13.0,21.0)*s));\n    res=opU(res,line(p,vec2(13.0,21.0)*s,vec2(9.0,21.0)*s));\n    res=opU(res,line(p,vec2(9.0,21.0)*s,vec2(7.0,20.0)*s));\n    res=opU(res,line(p,vec2(7.0,20.0)*s,vec2(5.0,18.0)*s));\n    res=opU(res,line(p,vec2(5.0,18.0)*s,vec2(4.0,16.0)*s));\n    res=opU(res,line(p,vec2(4.0,16.0)*s,vec2(3.0,13.0)*s));\n    res=opU(res,line(p,vec2(3.0,13.0)*s,vec2(3.0,8.0)*s));\n    res=opU(res,line(p,vec2(3.0,8.0)*s,vec2(4.0,5.0)*s));\n    res=opU(res,line(p,vec2(4.0,5.0)*s,vec2(5.0,3.0)*s));\n    res=opU(res,line(p,vec2(5.0,3.0)*s,vec2(7.0,1.0)*s));\n    res=opU(res,line(p,vec2(7.0,1.0)*s,vec2(9.0,0.0)*s));\n    res=opU(res,line(p,vec2(9.0,0.0)*s,vec2(13.0,0.0)*s));\n    res=opU(res,line(p,vec2(13.0,0.0)*s,vec2(15.0,1.0)*s));\n    res=opU(res,line(p,vec2(15.0,1.0)*s,vec2(17.0,3.0)*s));\n    res=opU(res,line(p,vec2(17.0,3.0)*s,vec2(18.0,5.0)*s));\n    cpos.x+=21.0*s.x*kern;\n}\n\n// CHAR: 83 :S\nvoid char_S(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(17.0,18.0)*s,vec2(15.0,20.0)*s));\n    res=opU(res,line(p,vec2(15.0,20.0)*s,vec2(12.0,21.0)*s));\n    res=opU(res,line(p,vec2(12.0,21.0)*s,vec2(8.0,21.0)*s));\n    res=opU(res,line(p,vec2(8.0,21.0)*s,vec2(5.0,20.0)*s));\n    res=opU(res,line(p,vec2(5.0,20.0)*s,vec2(3.0,18.0)*s));\n    res=opU(res,line(p,vec2(3.0,18.0)*s,vec2(3.0,16.0)*s));\n    res=opU(res,line(p,vec2(3.0,16.0)*s,vec2(4.0,14.0)*s));\n    res=opU(res,line(p,vec2(4.0,14.0)*s,vec2(5.0,13.0)*s));\n    res=opU(res,line(p,vec2(5.0,13.0)*s,vec2(7.0,12.0)*s));\n    res=opU(res,line(p,vec2(7.0,12.0)*s,vec2(13.0,10.0)*s));\n    res=opU(res,line(p,vec2(13.0,10.0)*s,vec2(15.0,9.0)*s));\n    res=opU(res,line(p,vec2(15.0,9.0)*s,vec2(16.0,8.0)*s));\n    res=opU(res,line(p,vec2(16.0,8.0)*s,vec2(17.0,6.0)*s));\n    res=opU(res,line(p,vec2(17.0,6.0)*s,vec2(17.0,3.0)*s));\n    res=opU(res,line(p,vec2(17.0,3.0)*s,vec2(15.0,1.0)*s));\n    res=opU(res,line(p,vec2(15.0,1.0)*s,vec2(12.0,0.0)*s));\n    res=opU(res,line(p,vec2(12.0,0.0)*s,vec2(8.0,0.0)*s));\n    res=opU(res,line(p,vec2(8.0,0.0)*s,vec2(5.0,1.0)*s));\n    res=opU(res,line(p,vec2(5.0,1.0)*s,vec2(3.0,3.0)*s));\n    cpos.x+=20.0*s.x*kern;\n}\n\n// CHAR: 120 :x\nvoid char_x(vec2 uv,vec2 s){\n    vec2 p=uv-cpos;\n    res=opU(res,line(p,vec2(3.0,14.0)*s,vec2(14.0,0.0)*s));\n    res=opU(res,line(p,vec2(14.0,14.0)*s,vec2(3.0,0.0)*s));\n    cpos.x+=17.0*s.x*kern;\n}\n/////////////////////////////////////////////////////////////////////////\n\nvec4 threeHundred(vec2 uv){\n    vec3 outline=vec3(0.,0.,0.);\n\n    vec3 col=vec3(1.,fract(uv.y * 10.0 + 0.6),0.03);\n    res=1000.; width=0.01; kern = 0.9; cpos=vec2(0.41 ,0.06);\n    vec2 s=vec2(0.003);    \n\n    char_3(uv,s);\n    char_0(uv,s);\n    char_0(uv,s);    \n    float w = fwidth(res) ;\n\tfloat b = smoothstep( -w, w, width * 1.3 - res);\n    float f = smoothstep( -w, w, width - res);\n    \n    return blend(vec4(0,0,0,b), vec4(col,f));\n\t}\n\nvec4 oneHundred(vec2 uv){\n    vec3 outline=vec3(0.,0.,0.);\n\n    vec3 col=vec3(fract(uv.y * 10.0 + 0.6),1.,fract(uv.y * 10.0 + 0.7));\n    res=1000.; width=0.01; kern = 0.9; cpos=vec2(0.21 ,0.06);\n    vec2 s=vec2(0.003);    \n\n    char_1(uv,s);\n    char_0(uv,s);\n    char_0(uv,s);    \n\n    float w = fwidth(res) ;\n\tfloat b = smoothstep( -w, w, width * 1.3 - res);\n    float f = smoothstep( -w, w, width - res);\n    \n    return blend(vec4(0,0,0,b), vec4(col,f));\n\t}\n\nvec4 numbers(vec2 uv){\n    vec3 outline=vec3(0.,0.,0.);\n\n    vec3 col=vec3(1);\n    res=1000.; width=0.003; kern = 2.0; cpos=vec2(0.025,0.225);\n    vec2 s=vec2(0.0025);    \n\n    char_0(uv,s);\n    char_1(uv,s);\n    char_2(uv,s);\n    char_3(uv,s);    \n    char_4(uv,s);    \n    char_5(uv,s);    \n    char_6(uv,s);    \n    char_7(uv,s);    \n    char_8(uv,s);    \n    char_9(uv,s);\n    float w = fwidth(res) ;\n\tfloat b = smoothstep( -w, w, width * 2.0 - res);\n    float f = smoothstep( -w, w, width - res);\n    \n    return blend(vec4(0,0,0,b), vec4(col,f));\n\t}\n\nvec4 fail(vec2 uv){\n    vec4 c = vec4(0);\n    float o = df_line2(uv, vec2(0.03, 0.17), vec2(0.17, 0.03), 0.02, 0.01);\n    o += df_line2(uv, vec2(0.03, 0.03), vec2(0.17, 0.17), 0.01, 0.02);\n    float i = df_line2(uv, vec2(0.03, 0.17), vec2(0.17, 0.03), 0.015, 0.005);\n    i += df_line2(uv, vec2(0.03, 0.03), vec2(0.17, 0.17), 0.005, 0.015);\n    o = clamp(o, 0.0, 1.0);\n    i = clamp(i, 0.0, 1.0);\n    \n    c = blend(c, vec4(0,0,0,o));\n    c = blend(c, vec4(1,0,0,i));\n    return c;\n\t}\n\n\nvec4 hitCircle(vec2 uv){\n    vec2 p = vec2(0.2, 0.6);\n    vec4 c = vec4(0);\n    vec4 l = vec4(0);\n    float d = length(p - uv);\n    float w = fwidth(d);\n\n    float glossD = length(p + vec2(0,0.5) - uv);\n    float glossW = fwidth(glossD);\n    \n   \tfloat gloss = smoothstep(-glossW, glossW, 0.5 - glossD);\n    gloss = gloss * 0.2 + 0.8;\n    \n    l = vec4(0,0,0,smoothstep(RADIUS * .5, -RADIUS * .2, d - RADIUS));\n    c = mix(c, l, l.a);\n    \n    l = vec4(gloss,0,0,smoothstep(-w, w, RADIUS - d));\n    float saveCa = c.a;\n    c = mix(c, l, l.a);\n    c.a = 1.0 - ((1.0 - saveCa) * (1.0 - l.a));\n    \n    l = vec4(0,gloss,0,smoothstep(-w, w, RADIUS * .9 - d));\n    \n    saveCa = c.a;\n    c = mix(c, l, l.a);\n    c.a = 1.0 - ((1.0 - saveCa) * (1.0 - l.a));\n        \n    return c;\n\t}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 c = vec4(0);\n    vec4 l = vec4(0);\n\n    if (iFrame == 0){\n    \tl = threeHundred(uv);\n    \tc = mix(c, l, l.a);\n    \tl = oneHundred(uv);\n    \tc = mix(c, l, l.a);\n    \tl = fail(uv);\n    \tc = mix(c, l, l.a);\n    \tl = numbers(uv);\n    \tc = mix(c, l, l.a);\n    \tl = hitCircle(uv);\n    \tc = mix(c, l, l.a);\n    \t}\n    else\n    \tc = texture(iChannel0, fragCoord.xy/iResolution.xy);\n    fragColor = c;\n\n\t}","name":"Buf C","description":"","type":"buffer"}]}