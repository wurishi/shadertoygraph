{"ver":"0.1","info":{"id":"Ms2yDw","date":"1492451753","viewed":405,"name":"Slow Flame","username":"animatedlew","description":"This shader is meant to be a slow stylized flame that should be combined with particle sparks.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["flame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float norm(float a, float b, float t) {\n\treturn (t - a) / (b - a);\n}\n\nfloat map(float a, float b, float c, float d, float t) {\n\treturn norm(a, b, t) * (d-c) + c;\n}\n\nfloat bar(float t, float s, float e, float blur) {\n    //blur = 0.001; // for testing strips\n    return smoothstep(s-blur, s+blur, t) * smoothstep(e+blur, e-blur, t);\n}\n\nvec3 blurredBar(vec2 uv, vec2 p, vec2 blur, vec3 color) {    \n    float b = map(1.0, -1.0, blur.s, blur.t, uv.t);    \n    b = pow(b, 2.0);\n\treturn bar(uv.s, p.s, p.t, b) * color;\n}\n\nvec3 fire(vec2 uv) {\n    \n    const float maxblur = 1.0;\n    const float minblur = 0.001;\n    const float start = -0.1;\n    const float end = 0.1;\n    \n    float y = uv.y;    \n    float m = sin(y * 10.0 + iTime * 6.0) * 0.01;\n    float x = uv.x - m;\n    \n    vec3 mask = blurredBar(vec2(x, y), vec2(start, end), vec2(maxblur, minblur), vec3(1.0, 1.0, 0.0)) +\n        blurredBar(vec2(x, y), vec2(start-0.1, end+0.1), vec2(maxblur+0.2, minblur-0.2), vec3(1.0, 0.0, 0.0));\n    \n    vec3 fade = vec3(0.5) - y;\n    \n    return mask * fade;\n}\n\nvec3 distortion(vec2 uv, vec3 image) {\n\tvec2 d = uv.xy;    \n\td.y += iChannelResolution[0].y * -sin(iTime / 800.0);\n\tvec4 c = texture(iChannel0, d);\n    \n    // pulse a composite mask\n    float blur = map(-1.0, 1.0, 0.30, 0.5, sin(iTime * 4.0));\n    \n    // make the mask wave as function of uv.y\n    uv.x += sin(uv.y * 10.0 + iTime * 6.0) * 0.01;\n    \n    // shift the mask up a bit\n    uv.y -= 0.5;\n    \n    // taper start and end x components as a function of uv.y and taper attennuation\n    float taper = 0.05;    \n    float mask = bar(uv.x, -5.0 * -uv.y * taper, 5.0 * -uv.y * taper, blur / 5.0);\n    \n    //return vec3(mask); // for testing\n\treturn mask * (image - vec3(c) * .2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\tfragColor = vec4(distortion(uv, fire(uv)), 1.0);\n}","name":"Image","description":"","type":"image"}]}