{"ver":"0.1","info":{"id":"XtySWz","date":"1483741112","viewed":130,"name":"Function Plotting","username":"sakib","description":"Function plotter","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["function"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Function to plot\nfloat f(float x)\n{\n    return 1.0/x;\n}\n\n// Main\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Pre-defined colors\n\tvec3 gridColor = vec3(0.5,0.5,0.5);\n    vec3 axisColor = vec3(0.0,0.0,1.0);\n    vec3 plotColor = vec3(1.0,0.0,0.0);\n    \n    // Background color\n    vec3 pixelColor = vec3(1.0);\n    \n    // Normalized coordinates\n    vec2 r = (2.0 * fragCoord.xy - iResolution.xy) / (0.25*iResolution.y);\n    \n    // Draw grid & axes\n    if(mod(r.x, 0.1) < 0.008) pixelColor = gridColor;\n    if(mod(r.y, 0.1) < 0.008) pixelColor = gridColor;\n    if(abs(r.x) < 0.04) pixelColor = axisColor;\n    if(abs(r.y) < 0.04) pixelColor = axisColor;\n    \n    // Function \n    // Thanks Iq for the thickness correction \n    // https://iquilezles.org/articles/distance\n    //float alpha = smoothstep(abs(r.y - f(r.x)), 0.0, 0.02);\n    float px = 2.0/(0.25*iResolution.y);\n    float dx = dFdx(f(r.x))/px;\n    float de = sqrt(1.0 +dx*dx);\n    float alpha = smoothstep(abs(r.y - f(r.x))/de, 0.0, 0.01);\n    pixelColor = alpha * pixelColor + (1.0 - alpha) * plotColor;\n    \n    fragColor = vec4(pixelColor,1.0);\n}","name":"Image","description":"","type":"image"}]}