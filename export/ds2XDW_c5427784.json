{"ver":"0.1","info":{"id":"ds2XDW","date":"1670428337","viewed":75,"name":"voronoi_noise_simple","username":"sorooshzix","description":"voronoi noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_CELLS 3\n\nvec3 hash(vec3 p) {\n    p = vec3(dot(p, vec3(127.1, 311.7, 181.3)), dot(p, vec3(269.5, 183.3, 182.1)), dot(p, vec3(307.7, 109.1, 301.3)));\n    return fract(sin(p) * 43758.5453123);\n}\n\nfloat voronoi(in vec3 x) {\n    vec3 n = floor(x);\n    vec3 f = fract(x);\n\n    float mindist = 1.0e20;\n    for (int j = -1; j <= 1; j++) {\n        for (int i = -1; i <= 1; i++) {\n            for (int k = -1; k <= 1; k++) {\n                vec3 g = vec3(i, j, k);\n                vec3 offset = g + hash(n + g);\n                vec3 r = offset - f;\n                float dist = dot(r, r);\n                mindist = min(dist, mindist);\n            }\n        }\n    }\n\n    return sqrt(mindist);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 uv = vec3(fragCoord.xy / iResolution.xy, iTime * 0.1);\n\n    float noise = 0.0;\n    for (int i = 0; i < NUM_CELLS; i++) {\n        noise = voronoi(uv * pow(2.0, float(i)));\n    }\n    //noise = noise / (float(NUM_CELLS) + 1.0);\n\n    fragColor = vec4(vec3(noise), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}