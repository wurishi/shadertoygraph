{"ver":"0.1","info":{"id":"fsV3DD","date":"1631580854","viewed":52,"name":"more polar stuff","username":"SnoopethDuckDuck","description":"e","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n\nfloat myLength(vec2 uv) {\n    return abs(uv.x) + abs(uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy ) / iResolution.y;\n    uv *= 2.;\n    \n    float a = atan(uv.y, uv.x);\n    float t = 0.5 * iTime;\n    \n    float d = myLength(uv * vec2(cos(2. * a), sin(a)));   \n    d *= 1. + sin(a + t) * cos(a + t);\n    \n    vec3 p = 0.3 + 0.1 * vec3(cos(t), cos(t + 0.025 * pi), cos(t + 0.02 * pi));\n    vec3 col = 1. - smoothstep(vec3(d), p, vec3(0.28));\n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}