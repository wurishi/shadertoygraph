{"ver":"0.1","info":{"id":"lcyczK","date":"1732092131","viewed":311,"name":"Starfield #2 :)","username":"vanshika","description":"Fork of the starfield shader.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","parallax","star"],"hasliked":0,"parentid":"XcVcRh","parentname":"Starfield tutorial :)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define NUM_LAYERS 8.\n\nmat2 Rot(float a) {\n    float s=sin(a),c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Star(vec2 uv, float flare) {\n    float d = length(uv);\n    float m = .1/d;    \n    float rays = max(0., 1.-abs(uv.x*uv.y*500.));\n    m += rays*flare;\n    //uv *= Rot(3.1415/8.*sin(length(uv)+iTime)); // 45 degg, pi/4 radians\n    rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m += rays*.3*flare;\n    m *= smoothstep(1.,.2,d);\n    \n    return m;\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(424.34,342.21));\n    p += dot(p, p+34.32);\n    return fract(p.x*p.y);\n}\n\nvec3 StarLayer(vec2 uv) {\n    vec3 col = vec3(0);\n    uv *= .2;\n    vec2 gv = fract(uv)-.5; //gv=grid uv\n    vec2 id = floor(uv);\n    \n    for(int y=-1;y<=1;y++) {\n        for(int x=-1;x<=1;x++) {\n            vec2 offs = vec2(x,y);\n            \n            float n = Hash21(id+offs); // pseudorandom fract\n            float size = fract(n*345.32);\n\n            float star = Star(gv-offs-vec2(n,fract(n*34.))+.5, smoothstep(.85,1.,size));\n            \n            vec3 color = sin(vec3(.5,.2,.8)*fract(n*3245.23)*11.33)*.5+.5;\n            color *= vec3(1.,.5,1.+size);\n            \n            star *= sin(iTime*3.+n*6.2831)*.5+1.;\n            \n            col += star*size*color;\n       }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 M = (iMouse.xy-iResolution.xy*.5)/iResolution.y;\n    float t = iTime * .02;\n    \n    uv += -M*3.;\n    uv *= 3.;\n    uv -= 6.5;\n    uv *= Rot(t+length(uv));\n    \n    vec3 col = vec3(0);\n    \n    for(float i=0.;i<1.;i+=1./NUM_LAYERS){\n        float depth = fract(i+t);\n        float scale = mix(20., .5, depth);\n        float fade = depth* smoothstep(1., .9, depth);\n        col += StarLayer(uv*scale+i*454.23-M*3.)*fade;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}