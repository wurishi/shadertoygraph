{"ver":"0.1","info":{"id":"fsVXDG","date":"1635221653","viewed":120,"name":"Simplex noise gradient","username":"genwaver","description":"Example to create noisy gradient","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["example","noise","gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 center = vec2(0.0, 0.0);\n    float radius = 0.25;\n    \n    float dist = length(uv - center);\n    float intensity = smoothstep(radius, radius - 0.005, dist);\n    \n    float noiseIntensity = mix(0.0, 5.5, smoothstep(radius, -radius, uv.y));\n    float noise = mix(0.0, 1.0, smoothstep(radius * 1.5, -radius, uv.y)) * noiseIntensity;\n    \n    vec3 colorA = vec3(0.9, 0.1, 0.5);\n    vec3 colorB = vec3(0.5, 0.403, 0.81);\n    \n    vec3 color = mix(colorA, colorB, smoothstep(radius, -radius, uv.y));\n    color *= intensity;\n    color *= 1.0 - (abs(snoise(uv * 300.0)) * noise);\n\n  \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}