{"ver":"0.1","info":{"id":"Nsd3Dr","date":"1629588915","viewed":98,"name":"Matrixish","username":"goodingc","description":"matrix looking shader made using hashing","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["matrix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const uint GLYPH_SIZE = 5u;\nconst uint GLYPH_SEP = 2u;\n\n// https://nullprogram.com/blog/2018/07/31/\nuint triple32(uint x) {\n    x ^= x >> 17;\n    x *= 0xed5ad4bbU;\n    x ^= x >> 11;\n    x *= 0xac4c1b51U;\n    x ^= x >> 15;\n    x *= 0x31848babU;\n    x ^= x >> 14;\n    return x;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    uvec2 cellIndex = uvec2(fragCoord / 5.);\n    \n    uint colIndex = uint(float(cellIndex.x) / float(GLYPH_SIZE + GLYPH_SEP));\n    \n    \n    cellIndex.y += uint(iTime * (float(triple32(colIndex)) / float( 0xffffffffU ) * 10. + 5.));\n\n    vec3 col = vec3(0.);\n    \n    vec2 glyphCellIndex = mod(vec2(cellIndex), vec2(float(GLYPH_SIZE + GLYPH_SEP)));\n    \n    if(!(glyphCellIndex.x < float(GLYPH_SEP) || glyphCellIndex.y < float(GLYPH_SEP))) {\n        col = step(0.5, float(triple32(cellIndex.x + triple32(cellIndex.y))) / float( 0xffffffffU )) * vec3(0., 1., 0.);\n    }\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}