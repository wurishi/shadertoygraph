{"ver":"0.1","info":{"id":"3sycDV","date":"1603736745","viewed":128,"name":"Pixel Blur","username":"Dogemaster09","description":"Pixelates the input of iChannel0. See comments for details. Yes I have noticed that it breaks a little with textures, not really sure how to fix that.","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["blur","pixel","pixelation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Number of vertical pixels. If you set this to 450 you will get the input image (as long as you're not in fullscreen)\n#define PIXELS 50.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Normalized UV\n    vec2 uv = fragCoord/iResolution.xy;\n    //This pixelates while correcting for aspect ratio to get square pixels rather than rectangles\n    uv = floor(vec2(uv.x*(iResolution.x/iResolution.y), uv.y)*PIXELS)/PIXELS;\n    uv.x /= iResolution.x/iResolution.y;\n\t\n    //Output to screen\n    vec4 col = texture(iChannel0, uv);\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}