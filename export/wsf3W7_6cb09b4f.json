{"ver":"0.1","info":{"id":"wsf3W7","date":"1546507148","viewed":86,"name":"Sphere_test","username":"huating","description":"test example","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//距离场\nfloat dist_estimator(in vec3 pos)\n{\n    return length(pos) - 1.0;\n}\n\n\n//光线模型求交\nfloat intersects(in vec3 src, in vec3 drt)\n{\n    float t;\n    for (int i = 0; i < 255; ++i)\n    {\n        float delta = dist_estimator(src + t * drt);\n        t += delta;\n        if (delta < 1e-5)\n            return t;\n    }\n    return 1e+5;\n}\n\n//ray casting过程\nvec4 trace(in vec3 src, in vec3 dst)\n{\n    vec3 drt = normalize(dst - src);\n    vec3 light = vec3(1.5, 0.3, 0.3);\n    float t = intersects(src, drt);\n    if (t <= 1e+4)\n    {\n        vec3 surface_pos = src+ drt * t;\n        float strenth = dot(-drt, normalize(light - surface_pos));\n        return vec4(1, 1, 1, 1) * strenth;\n    }\n    else\n        return vec4(0, 0, 0, 1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (vec2(fragCoord.x - iResolution.x / 2.0, fragCoord.y - iResolution.y / 2.0) / max(iResolution.x, iResolution.y)) * 2.0;\n    vec3 src = vec3(5.0, 0.0, 0.0);\n    vec3 dst = vec3(4.0, uv * 0.4);\n    fragColor = trace(src, dst);\n}\n","name":"Image","description":"","type":"image"}]}