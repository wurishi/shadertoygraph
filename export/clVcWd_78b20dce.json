{"ver":"0.1","info":{"id":"clVcWd","date":"1700812365","viewed":54,"name":"simple circle frosted glass","username":"Norgerman","description":"simple frosted glass","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["glass","frosted","blurred"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(in vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec2 noise(in vec2 uv) {\n    vec2 s = (uv - 0.5) * 5.0;\n    return vec2(random(s)) * 0.01;\n}\n\nfloat circle(in vec2 coord, in vec2 center, in float radius, in float border) {\n    float dist = distance(coord, center);\n    return 1.0 - smoothstep(radius - border, radius, dist);\n}\n\nfloat circle_sin_interpolate(in vec2 coord, in vec2 center, in float radius, in float border) {\n    float dist = radius - distance(coord, center);\n    float t = 0.0;\n    if (dist > border) {\n        t = 1.0;\n    } else if (dist > 0.0) {\n        t = sin(dist / border * 3.141592654 / 2.0);\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float radius = 50.0;\n    float border = 4.0;\n    vec2 center = iResolution.xy / 2.0 + vec2(cos(iTime), sin(iTime)) * radius * cos(iTime) * 2.0;\n\n    float t = circle_sin_interpolate(fragCoord, center, radius, border); // circle border aa, circle works well too.\n\n    // Output to screen\n    fragColor = mix(texture(iChannel0, uv), texture(iChannel0, uv + noise(uv)), t);\n}","name":"Image","description":"","type":"image"}]}