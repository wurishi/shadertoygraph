{"ver":"0.1","info":{"id":"3dlBR8","date":"1587676631","viewed":183,"name":"Struct Based SDF","username":"MasterQ32","description":"SDF with structs","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","struct"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define MTL_RED  0\n#define MTL_BLUE 1\n\nstruct Hit\n{\n    float dist;\n    int material;\n};\n    \nHit Red(float d) {\n    return Hit(d, MTL_RED);\n}\n\nHit Blue(float d) {\n    return Hit(d, MTL_BLUE);\n}\n\nHit circ(vec2 p, int mtl)\n{\n \treturn Hit(length(p) - 1.0, mtl);   \n}\n\nHit sdf_union(Hit a, Hit b) // prefers a\n{\n    if(a.dist <= b.dist)\n        return a;\n    else\n        return b;\n}\n\nHit sdf(vec2 p)\n{\n \treturn sdf_union(\n        circ(p - vec2(0.5, 0.), MTL_RED),\n        circ(p + vec2(0.5, 0.), MTL_BLUE)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 xy = 4.0 * uv - 2.0;\n    xy.x *= iResolution.x / iResolution.y;\n    \n    Hit h = sdf(xy);\n\n    if(h.dist < 0.0) {\n        vec3 col;\n        switch(h.material) {\n         \tcase MTL_RED:  col = vec3(1,0,0); break;\n         \tcase MTL_BLUE: col = vec3(0,0,1); break;\n        }\n        float a = pow(clamp(1.0 + 2.0 * h.dist, 0., 1.), 4.0);\n        fragColor = vec4(mix(vec3(0.7, 0.7, 0.8), col, a), 1);\n    } else {\n     \tfragColor = vec4(0, 0, 0, 1);   \n    }\n}","name":"Image","description":"","type":"image"}]}