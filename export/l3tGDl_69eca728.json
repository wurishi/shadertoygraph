{"ver":"0.1","info":{"id":"l3tGDl","date":"1717158625","viewed":27,"name":"Circle for Aim","username":"akinato","description":"TLOU referenced aim. Tweak values and remove cos animation. Pass phase from CPU.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","aim"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    //REMOVE THIS. In game aim is quad with aspect ration == 1\n    uv.x *= 800./450.;\n    uv.x -= 0.4;\n    \n    \n    vec2 p = uv - vec2(0.5); //center point\n    \n    \n    float phase = abs(cos(iTime * 1.0)); //instead of time, use this as parameter to change between point and circle\n    \n    \n    //Tweak values in lerp to customize \n    float r = mix(0.001, 0.4, phase);  //radius \n    float t = mix(0.08, 0.06, phase); //thikness\n    \n    float d = length(p)-r; //signed distance field\n    d = abs(d);\n    d = smoothstep(t, t + 0.005, d); //antialiased circle\n    d = 1. - d;\n    \n    fragColor = vec4(d, d, d, 1.0);\n}","name":"Image","description":"","type":"image"}]}