{"ver":"0.1","info":{"id":"4l3XD2","date":"1481565151","viewed":2223,"name":"Jumping cards","username":"zachernuk","description":"I was explaining SDF shapes to someone and thought I'd make a demo out of it.","likes":66,"published":1,"flags":0,"usePreview":0,"tags":["sdf","shadow","cards"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst vec4 backgroundColor = vec4(0.,0.,0.4,1.);\nconst vec4 foregroundColor = vec4(0.4, 0.4, 0.6, 1.);\n\nconst vec4 color3 = vec4(0.7, 0.4, 0.4, 1.);\nconst float radius = 0.06;\nconst float thickness2 =0.015;\nconst vec2 center = vec2(0.51);\n\nconst vec2 center2 = vec2(0.24,0.16);\n\nvec2 vUV;\n\nconst float scale = 0.32;\nvec4 circle( in vec4 background, \n            in vec4 circleColor,\n            in vec2 position,\n            in float radius,\n           in float thickness) {\n  vec2 relative = vUV-position;\n  float distance = length(relative);\n  distance = smoothstep(distance-thickness/2., distance+thickness/2.,radius);\n  \n  vec4 outColor = mix( circleColor,background,distance);\n  return outColor;\n}\n\n\nvec4 circleBox( in vec4 background, \n            in vec4 circleColor,\n            in vec2 position,\n            in float radius,\n           in float thickness,\n            in vec2 sideLength  \n              ) {\n\n  vec2 relative = vUV-position;\n  float distance = length(max(vec2(0.), abs(relative)-sideLength));\n\n  \n  \n   distance = smoothstep(distance-thickness/2., distance+thickness/2.,radius);\n  vec4 outColor = mix( circleColor,background,distance);\n  return outColor;\n}\n\n  \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n  float aspect = iResolution.x/iResolution.y;\n  vUV= fragCoord.xy/iResolution.xy;\n  float thicknessTheta = iTime*5.;\n  thicknessTheta+= vUV.x*10.;\n  thicknessTheta+=floor(vUV.y/scale)*4.*scale;  \n\n  float thickness = 0.06+0.05*sin(thicknessTheta);  \n  // vUV+=time;\n  float amt = (13.+floor(vUV.y/scale)*10.)/14.;\n  vUV.x-=iTime/7.*amt;\n  fragColor = vec4(1.);\n  vUV = mod(vUV/vec2(scale*1.0, scale*1.),1.);\n  vUV.x*=aspect;\n\tvUV.y = 1.-vUV.y;\n\tvec2 relative = vUV-center;  \n\tfragColor = mix( circleBox(backgroundColor, foregroundColor, center+vec2(thickness)*0.3, radius,thickness,center2),foregroundColor,thickness*4.);\n\n  \n  fragColor = circleBox(color3,fragColor , center-vec2(thickness), radius,thickness2, center2);\n\n  \n}","name":"Image","description":"","type":"image"}]}