{"ver":"0.1","info":{"id":"MtjSRd","date":"1445987367","viewed":164,"name":"Lighted sphere","username":"Swax97","description":"A sphere with directional lighting. My first shader!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["light","sphere","directional"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float scale = 10.0 / min(iResolution.x, iResolution.y);\nfloat radius = 4.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 light = normalize(vec3(iMouse.xy / iResolution.xy - 0.5, 0.5));\n    \n    \n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n    uv *= scale;\n    uv /= radius;\n    \n    \n    float m = dot(uv, uv);\n    \n    if (m < 1.0){\n        vec3 p = vec3(uv.x,\n                      uv.y,\n                      sqrt(1.0 - m));\n        \n        float b = dot(p, light);\n        \n     \tfragColor = vec4(b);   \n    } else {\n        fragColor = vec4(0.25, 0.25, 0.25, 1.0);\n    }\n}","name":"","description":"","type":"image"}]}