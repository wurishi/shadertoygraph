{"ver":"0.1","info":{"id":"Xd2fDc","date":"1589557255","viewed":262,"name":"Shockwave Effect - Step 3","username":"remonvv","description":"Shockwave Effect - Step 3 : Feathering to simulate a wave front","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fbm","effect","shockwave","fractalnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n#define M_TWO_PI (M_PI * 2.0)\n\nvec3 hash(vec3 p3)\n{    \n\tp3 = fract(p3 * vec3(.1031,.11369,.13787));\n    p3 += dot(p3, p3.yxx+19.19);\n    return -1.0 + 2.0 * fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\n\nfloat noise(vec2 n, float t) {\n    \n    vec3 p = vec3(n.x, n.y, t);\n    const float K1 = 0.333333333;\n    const float K2 = 0.166666667;\n    \n    vec3 i = floor(p + (p.x + p.y + p.z) * K1);\n    vec3 d0 = p - (i - (i.x + i.y + i.z) * K2);\n    \n    vec3 e = step(vec3(0.0), d0 - d0.yzx);\n\tvec3 i1 = e * (1.0 - e.zxy);\n\tvec3 i2 = 1.0 - e.zxy * (1.0 - e);\n    \n    vec3 d1 = d0 - (i1 - 1.0 * K2);\n    vec3 d2 = d0 - (i2 - 2.0 * K2);\n    vec3 d3 = d0 - (1.0 - 3.0 * K2);\n    \n    vec4 h = max(0.6 - vec4(dot(d0, d0), dot(d1, d1), dot(d2, d2), dot(d3, d3)), 0.0);\n    vec4 q = h * h * h * h * vec4(dot(d0, hash(i)), dot(d1, hash(i + i1)), dot(d2, hash(i + i2)), dot(d3, hash(i + 1.0)));\n    \n    return dot(vec4(50.), q);\n\n}\n\n\nfloat fbm(vec2 p, float time, float scale)\n{\n    float f = 0.0;\n    float a = 1.0;\n    p.xy *= scale;\n    \n    for (int i = 0; i < 6; i++) {\n\t    f += a * abs(noise(p, time)); \n        p = 2.0 * p;\n        a /= 2.0;\n    }\n    \n    return 1.0 - f;\n}\n\nfloat feather(float y, float t, float a, float f) {\n    \n    float d = abs(y - t);\n    \n    d /= pow(a, f);\n    d = 1.0 - d;\n\n    d = clamp(d, 0.0, 1.0);\n    \n    float c = d;\n    \n    \n    return c;\n}\n\nvec4 shade(vec2 uv, float t) {\n    \n    if(uv.x < 0.0 || uv.y < 0.0 || uv.x > 1.0 || uv.y > 1.0)\n        return vec4(0.0);\n    \n    float d = t;\n    float s = 10.0;\n    \n    vec2 fp = uv;\n    fp.y += d;\n    fp *= s;\n    \n    float f = fbm(fp, t, 0.5);\n    float brightness = (1.0 - t) * feather(1.0 - uv.y, t, 0.1 + t / 2.0, 1.0 + t);\n\n    float shade = f * brightness;\n    \n    return vec4(vec3(shade), 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n        \n\tfragColor = shade(uv, mod(iTime, 1.0));\n}","name":"Image","description":"","type":"image"}]}