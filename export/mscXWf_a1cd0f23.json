{"ver":"0.1","info":{"id":"mscXWf","date":"1680728386","viewed":91,"name":"Line Segment SDF (Basic)","username":"curtisjhu","description":"Basic display of a line segment","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lineSDF(in vec2 p, in vec2 a, in vec2 b) {\n    // line defined by points a and b.\n    \n    // percent along the b-a vector that is closest\n    // use the dot product\n    // pa * ba = |pa||ba|cos(t)\n    // pa * ba / |pa| = |ba|cos(t)\n    // |ba|cos(t) / length(ba) is the percent of the vector from a\n    float percent = dot(p-a, b-a) / dot(b-a, b-a);  \n    \n    // we don't want to go past the line's length\n    percent = clamp(percent, 0.0, 1.0);\n    \n    vec2 finalPos = percent * (b-a) + a;\n    \n    return length(p - finalPos);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) /iResolution.y;\n    \n    vec2 a = vec2(-0.5, 0.0);\n    vec2 b = vec2(0.5, 0.0);\n    \n    float d = lineSDF(uv, a, b);\n    \n    float quality = 10.0;\n    vec3 col =  mix(vec3(0.3, 0.1, 0.4), vec3(0.2, 0.3, 0.6), floor(d * quality)/quality  );\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}