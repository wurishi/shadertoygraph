{"ver":"0.1","info":{"id":"3tlfW7","date":"1596902702","viewed":324,"name":"Radiance","username":"kylehovey","description":"Just some fun with interference patterns","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["interference","array","phased"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n#define COUNT_RADIUS 5\n\nvec4 colorSin(float value) {\n    vec4 preNormal =  vec4(\n        sin(value),\n        sin(value - TAU/3.0),\n        sin(value - 2.0 * TAU/3.0),\n        1.0\n    );\n    \n    return 2.0 * preNormal - 1.0;\n}\n\nfloat sinSource(vec2 origin, float frequency, float phase, vec2 point) {\n    float t = distance(origin, point);\n\n    return sin(TAU * (frequency * t - phase) - iTime*5.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 xy = 2.0 * fragCoord - iResolution.xy;\n    float sum = 0.0;\n\n    for (int i = -COUNT_RADIUS; i < COUNT_RADIUS; ++i) {\n        sum += sinSource(vec2(100*i, 0.0), 0.02, sin(iTime / 5.0), xy);\n    }\n\n    \n    for (int i = -COUNT_RADIUS; i < COUNT_RADIUS; ++i) {\n        sum += sinSource(vec2(0.0, 100*i), 0.02, cos(iTime / 5.0), xy);\n    }\n    \n    float envelope = 1.0 / (1.0 + exp(pow(length(xy) / 300.0, 2.0)));\n\n    fragColor = colorSin(envelope * sum);\n    fragColor = vec4(vec3(sum / 6.0), 1.0) + 0.1 * fragColor;\n}","name":"Image","description":"","type":"image"}]}