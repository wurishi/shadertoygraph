{"ver":"0.1","info":{"id":"slBGWG","date":"1624581829","viewed":61,"name":"Almond Sandwich","username":"azirafail","description":"A simple mandelzoom","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 csq(vec2 z) {\n    return vec2(z.x * z.x - z.y * z.y, z.x * z.y * 2.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) * 2./iResolution.x;\n    \n    \n    \n    float t0 = iTime / 30.;\n    \n    float t = fract(t0);\n    float p = floor(t0);\n    \n    \n    vec2 c0 = .26 * vec2(sin(p), cos(p)) + vec2(-1,0.);\n    \n    float d = 1. * exp(-t * 9.);\n    \n    vec2 c = c0 + uv * d;\n    vec2 z = c;\n    float i = 0.;\n    \n    float MAX = min(1000., ceil(60./d));\n    \n    while (i < MAX && length(z) < 2.) {\n        z = csq(z)+c;\n        i++;\n    } \n    \n    float n = (1000. - i)/ 29.;\n    \n    float b = 1.-fract(n);\n    float a = floor(n)+ p;\n    \n    vec3 x = vec3(.5 *sin(a) + .5, .5*cos(a) + .5, .2 * sin(a * 5. + 40.) + .5);\n    \n    \n    fragColor.rgb = x * b;\n    \n    if (i == MAX) fragColor.rgb = vec3(0.,0.,0.);\n}\n\n","name":"Image","description":"","type":"image"}]}