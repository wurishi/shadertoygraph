{"ver":"0.1","info":{"id":"mdSyWD","date":"1687714402","viewed":150,"name":"Subpixel Rendering For SDF","username":"Envy24","description":"Experimenting with this shader: https://www.shadertoy.com/view/4dsSzs","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","antialiasing","font","rasterization","subpixel"],"hasliked":0,"parentid":"4dsSzs","parentname":"Subpixel Rendering"},"renderpass":[{"inputs":[],"outputs":[],"code":"#define UNIT                      ( 4.0 / iResolution.y  )\n#define SMAA(d)                   ( smoothstep(UNIT, 0., d) )\n\nfloat diskSDF_L2(in vec2 NDC, in vec2 C, in float r) { return length(C - NDC)-r; }\nfloat segmentSDF_L2(in vec2 NDC, in vec2 B, in vec2 E, in float r)\n{\n    vec2 BP = NDC - B, BE = E - B;\n    return length(BP - BE * clamp(dot(BP, BE) / dot(BE, BE), 0.0, 1.0)) - r;\n}\n\nfloat analytical(vec2 P)\n{\n    float d = segmentSDF_L2(P, vec2(-0.2,-1), vec2(0.2, 1), 0.001);\n    \n    return smoothstep(4.0/iResolution.y, 0., d+0.0041);\n    //return smoothstep(3./iResolution.y, -3./iResolution.y, d);\n}\n\n// Some SDF to anti-alias\nfloat sdf(vec2 P)\n{\n    float d = segmentSDF_L2(P, vec2(-0.2,-1), vec2(0.2, 1), 0.001);\n    \n    return smoothstep(1./iResolution.y, 0., d);\n    //return smoothstep(8./iResolution.y, 0., d);\n}\n\n// source: https://www.shadertoy.com/view/4dsSzs\nvec4 sampleAliased(vec2 pixels)\n{\n\tif (sdf(pixels) >= 0.1) return vec4(0, 0, 0, 1);\n\telse return vec4(1, 1, 1, 1);\n}\n// source: https://www.shadertoy.com/view/4dsSzs\nvec4 sampleAntialiased(vec2 pixels)\n{\n\tconst int size = 1;              // higher = smoother\n\tfloat disp = 3./iResolution.y;   // higher = smoother\n\tfloat contrb = 0.0;\n\tfloat maxContrb = 0.0;\n\t\n\tfor (int j = -size; j <= size; j++)\n\t{\n\t\tfor (int i = -size; i <= size; i++)\n\t\t{\n\t\t\tcontrb += sdf(pixels + vec2(float(i) * (disp * 0.33), float(j) * disp));\n\t\t\tmaxContrb += 1.0;\n\t\t}\n\t}\n\t\n\tfloat c = 1.0 - (contrb / maxContrb);\n\treturn vec4(c, c, c, 1);\n}\n// source: https://www.shadertoy.com/view/4dsSzs\nfloat sampleSubpixel(vec2 pixels)\n{\n\tconst int size = 1;              // higher = smoother\n\tfloat disp = 3./iResolution.y;   // higher = smoother\n\tfloat contrb = 0.0;\n\tfloat maxContrb = 0.0;\n\t\n\tfor (int j = -size; j <= size; j++)\n\t{\n\t\tfor (int i = -size; i <= size; i++)\n\t\t{\n\t\t\tcontrb += sdf(pixels + vec2(float(i) * (disp * 0.33), float(j) * disp));\n\t\t\tmaxContrb += 1.0;\n\t\t}\n\t}\n\t\n\treturn 1.0 - (contrb / maxContrb);\n}\n// source: https://www.shadertoy.com/view/4dsSzs\nvec4 sampleAntialiasedSubpixel(vec2 pixels)\n{\n\treturn vec4(sampleSubpixel(pixels - vec2(1./iResolution.x, 0)),\n\t\t\t\tsampleSubpixel(pixels),\n\t\t\t\tsampleSubpixel(pixels + vec2(1./iResolution.x, 0)),\n\t\t\t\t1);\n}\n\n/* https://www.shadertoy.com/view/DdsGDj */\n#define MOUSE_OFFSET ( iMouse.z > 0. ? iMouse.xy - iResolution.xy * 0.5 : vec2(0) )\nvec2 map_to_centered_ndc(in vec2 SC, in float scale, in vec2 origin, in bool mouse_drag)\n{\n    vec2 M = MOUSE_OFFSET * (mouse_drag == true ? 1. : 0.);\n    return ((2. * (SC - M) - iResolution.xy) / iResolution.y) * scale + origin;\n}\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 NDC = map_to_centered_ndc(SC, 1.2, vec2(0), false);\n\tfloat case_ = floor(mod(iTime * 0.5, 4.));\n\t\t \n    // Red circle.\n\tO = mix(vec4(1), vec4(1,0,0,1), SMAA(diskSDF_L2(NDC, vec2(-2.0 + (4./3.) * case_, -1.1), 0.025)));\n   \n    /**/\n    if (case_ == 0.0)      { O = mix(vec4(0), O, sampleAliased(NDC)); }\n    else if (case_ == 1.0) { O = mix(O, vec4(0), analytical(NDC)); }\n\telse if (case_ == 2.0) { O = mix(vec4(0), O, sampleAntialiased(NDC)); }\n\telse                   { O = mix(vec4(0), O, sampleAntialiasedSubpixel(NDC)); }         \n    /**/\n\n    //O = mix(vec4(0), O, sampleAntialiased(NDC));\n    //O = mix(vec4(0), O, sampleAntialiasedSubpixel(NDC));\n}","name":"Image","description":"","type":"image"}]}