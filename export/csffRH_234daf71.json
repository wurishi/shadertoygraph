{"ver":"0.1","info":{"id":"csffRH","date":"1688426495","viewed":66,"name":"Smooth checker","username":"Envy24","description":".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["radial","checker","smooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define UNIT                      ( 4.0 / iResolution.y )          // Affects AA and thickness\n#define SMAA(x)                   ( smoothstep(UNIT, 0., x) )\nfloat segmentSDF_L2(in vec2 NDC, in vec2 B, in vec2 E, in float r)\n{\n    vec2 BP = NDC - B, BE = E - B;\n    return length(BP - BE * clamp(dot(BP, BE) / dot(BE, BE), 0.0, 1.0)) - r;\n}\n\nvec3 checker(vec2 NDC)\n{\n    float count = 1.; // 1x1 number of squares fit in unit square\n    //float count = 2.; // 2x2 number of squares fit in unit square\n    // e.t.c.\n    NDC = mod(NDC * count, 2.0);\n      \n    return vec3((NDC.x < 1.0) ^^ (NDC.y < 1.0));\n}\nvec3 smooth_checker(vec2 NDC)\n{\n    const float tau = 6.2831853071795862;\n    \n    float count = 0.5;\n    NDC = mod(NDC * count, 2.0);\n      \n    float d = sin(tau/2.+NDC.x*tau) * cos(-tau/4.+NDC.y*tau),\n          fw = .8*fwidth(d);\n          //fw = 32./iResolution.y;\n    return vec3(smoothstep(-fw, fw, d));\n}\n\n/* https://www.shadertoy.com/view/DdsGDj */\n#define MOUSE_OFFSET ( iMouse.z > 0. ? iMouse.xy - iResolution.xy * 0.5 : vec2(0) )\nvec2 map_to_centered_ndc(in vec2 SC, in float scale, in vec2 origin, in bool mouse_drag)\n{\n    vec2 M = MOUSE_OFFSET * (mouse_drag == true ? 1. : 0.);\n    return ((2. * (SC - M) - iResolution.xy) / iResolution.y) * scale + origin;\n}\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 NDC = map_to_centered_ndc(SC, 3., vec2(0), true);\n\n    /* Scene 1 */\n    vec2 ndc0 = NDC;         \n         ndc0 = vec2(0.5*log(dot(ndc0,ndc0)),atan(ndc0.y,ndc0.x));\n         ndc0 = (16.0*ndc0)/6.2831853071795862;\n\n    vec3 color = NDC.x > 0. ?\n        smooth_checker(ndc0) :\n        checker(ndc0);\n    /* Scene 2 *\n    vec2 ndc0 = 2.*NDC;       \n\n    vec3 color = NDC.x > 0. ?\n        smooth_checker(ndc0) :\n        checker(ndc0);\n    /* */\n    \n    color = mix(color, vec3(1,0,0), SMAA(segmentSDF_L2(NDC, vec2(0, -10), vec2(0, 10), 0.01)));\n    O = vec4(color, 1.);\n    //O = vec4(checker(NDC), 1.);\n    //O = vec4(smooth_checker(NDC), 1.);\n}","name":"Image","description":"","type":"image"}]}