{"ver":"0.1","info":{"id":"3s3SDn","date":"1571743077","viewed":546,"name":"bench exp2 vs mul vs pow","username":"FabriceNeyret2","description":"2^10 ...\n as exp2:  6.7 fps ->  1.5 us ( us = microsecond. NB: only quali-comparative, due to anti-optimizer traps).\n as pow(2,10): 4.3 fps -> 2.3 us\n as explicit multiplications: 3.2 fps -> 3.1 us  4mul=6.7fps\n as loop multiplications: 0.8 fps -> 12.4 us","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["benchglsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TEST 1\n#define N 1e5\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = vec4(2);\n    \n#if TEST==0                 // reference ( to estimate overheads )\n    \n    for (float i=0.; i < N; i++) {\n        float Z = min(0.,iTime+O.r);  // to forbid the optimizer to simplify\n        O = vec4( 10. + Z );\n    }\n    \n#elif TEST==1               // exp2\n    \n    for (float i=0.; i < N; i++) {\n        float Z = min(0.,iTime+O.r);  // to forbid the optimizer to simplify\n        O = vec4( exp2(10. + Z) );\n    }\n    \n#elif TEST==2               // pow\n    \n    for (float i=0.; i < N; i++) {\n        float Z = min(0., iTime+O.r);\n      //O = vec4( pow(2., 10. + Z ) ); // NB: pow2 auto-detected\n        O = vec4( pow(2.+ Z , 10.) );\n      //O = vec4( pow(2.+ Z , 10.+Z) );\n    }\n    \n#elif TEST==3               // explicit mul\n    \n    for (float i=0.; i < N; i++) {\n        float Z = min(0.,iTime+O.r);\n        O = vec4(2.+ Z); \n        O = O*O*O*O*O*O*O*O*O*O;\n    }\n    \n#else                       // loop mul\n    \n    for (float i=0.; i < N; i++) {\n      //float Z = min(0.,iTime+O.r);\n        for (float j=1.; j < 10.; j++)  {\n            float Z = min(0.,iTime+O.r);\n            O *=  vec4(2. + Z);\n        }\n    }\n \n#endif\n}","name":"Image","description":"","type":"image"}]}