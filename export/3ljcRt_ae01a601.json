{"ver":"0.1","info":{"id":"3ljcRt","date":"1595097814","viewed":44,"name":"Berx_Circle_02","username":"berzerkey","description":"More Practice with circles,  this time with cleaner edges.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define res iResolution.xy\n#define t iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Remaps coordinates to center.\n    uv -=.5;\n    \n    // Aspect Ratio fix along x.\n    uv.x *= res.x/res.y;\n    \n    // Driving Functions\n    float d = length(uv);\n    float rr = 0.3;\n    float rg = .2;\n    float rb = .05;\n    float red = smoothstep(rr, rr-.01, sin(d*t));\n    float green = smoothstep(rg, rg-.01, cos(d*t));\n    float blue = smoothstep(rb, rb-.01, d*sin(t));\n    \n    //if (d < .3) c = 1.; else c = 0.;\n\n    // Output to screen\n    fragColor = vec4(vec3(red,green,blue),1.0);\n}","name":"Image","description":"","type":"image"}]}