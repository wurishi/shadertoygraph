{"ver":"0.1","info":{"id":"X3BfWz","date":"1729312950","viewed":27,"name":"wtf**k is it?","username":"Viqwy","description":"???","likes":2,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// distance field from iq https://www.shadertoy.com/view/Xds3zN\nfloat random2 (vec2 st) \n{\n    return fract(sin(dot(st.xy,\n                     vec2(12.9898,78.233)))\n                      * 43758.5453123);\n}\nfloat sdSphere( vec3 p, float s )\n{\n    return length(p)-s;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n    vec3 d = abs(p) - b;\n    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat sdOctahedron(vec3 p, float s)\n{\n    p = abs(p);\n    float m = p.x + p.y + p.z - s;\n\n    // exact distance\n    #if 0\n    vec3 o = min(3.0*p - m, 0.0);\n    o = max(6.0*p - m*2.0 - o*3.0 + (o.x+o.y+o.z), 0.0);\n    return length(p - s*o/(o.x+o.y+o.z));\n    #endif\n    \n    // exact distance\n    #if 1\n \tvec3 q;\n         if( 3.0*p.x < m ) q = p.xyz;\n    else if( 3.0*p.y < m ) q = p.yzx;\n    else if( 3.0*p.z < m ) q = p.zxy;\n    else return m*0.57735027;\n    float k = clamp(0.5*(q.z-q.y+s),0.0,s); \n    return length(vec3(q.x,q.y-s+k,q.z-k)); \n    #endif\n}\n\n#define R(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    float color = 0.0;\n    vec3 col;\n    \n    // screen to world\n    vec3 rd = vec3((fragCoord - 0.5 * iResolution.xy) / iResolution.y, 1);\n    rd = normalize(rd);\n    //rd.xz *= R(iTime * 0.2);\n    //rd.yz *= R(iTime * 0.3);\n    //vec3 ro = vec3(0.5*cos(iTime*0.3),0.5*sin(iTime*0.3), 0.);\n    //vec3 ro = vec3(0., 0., 0.05*sin(iTime * 0.5));\n    vec3 ro = vec3(0.3*cos(iTime*0.7), 0.3*sin(iTime*0.7), 0.);\n    float l = 0.0;\n    \n    for(float i = 1.0; i < 50.0; i++)\n    {\n        vec3 p = ro+rd * l;\n        vec2 a = p.xy;\n        p = mod(p+100.*random2(a), 0.26);\n        p -= 0.18+1.*random2(a);\n        float d = sdSphere(p + 1000.*random2(a), 0.05+0.05*sin(iTime*0.5634));\n        //float d = sdSphere(p + 1000.*random2(a), 0.07);\n        //d = sdOctahedron(p + 1000.*random2(a), 0.07+0.057*sin(iTime));\n        //d = sdOctahedron(p, 0.005+0.005*sin(iTime));\n        //d = sdBox(p, vec3(0.025));\n        l += clamp(d, 0.0, 0.2);\n\n        if(d < 0.00001) {\n            color += 1.0/i;\n            //color = 1./l/l/25.; break;\n        }\n    }\n    color = pow(color, 1./2.2);\n    // Time varying pixel color\n    vec3 col_1 = 0.5 + 0.5*cos(iTime+rd.xyx+vec3(0,2,4));\n    fragColor = vec4(vec3(color) - col_1, 1.);\n    //fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}