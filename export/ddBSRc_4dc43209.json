{"ver":"0.1","info":{"id":"ddBSRc","date":"1670616449","viewed":136,"name":"Pixelated Transition v2","username":"animtor120","description":"fork of https://www.shadertoy.com/view/4tfBR8 with some better annotated controls","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["squares"],"hasliked":0,"parentid":"4tfBR8","parentname":"pixellated transition"},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n//const float amt = 0.1;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    float squares = 36.;\n    float speed = 1.2;\n    vec2 tc = uv;\n    float m = .9;\n    // move texcoords to center\n    tc -= 0.5;\n    \n    // adjust for perfect circle\n    tc.x *= aspect;    \n    \n    // pixellate\n    tc = floor(tc * squares + 0.5) / squares;\n    \n    // create the circle mask\n    float mask = mod(length(tc), m);\n\n    // mod the mask so that we get alternating rings\n    mask =  mod(mask - iTime*speed, 2.0);\n    \n    // step the mask to threshold it to black and white\n    mask = step(mask, 1.0);\n    \n    vec2 ttc = uv;\n  \tttc.x *= aspect;\n    //ttc = ttc * 2.0 - 1.0;\n    //vec2 tile = mod( ttc * squares - vec2(aspect*2.0,0.5) , 1.0) *amt;\n    \n\t//tile = tile *0.5 + 0.5;\n    \n    //uv = uv + tile;\n    // sample textures and choose mask\n\tfragColor =mix(texture(iChannel0, uv ), texture(iChannel1, uv), mask);\n\n}\n\n\n","name":"Image","description":"","type":"image"}]}