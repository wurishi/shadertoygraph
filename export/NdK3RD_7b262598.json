{"ver":"0.1","info":{"id":"NdK3RD","date":"1631196790","viewed":108,"name":"string theory","username":"nexor","description":".","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["sdf","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/max(iResolution.x,iResolution.y);\n    \n    \n    uv *= 4.;\n    vec2 p =uv;\n    vec3 col = vec3(0);\n    uv *= 3.5;\n    float a = atan(uv.y,uv.x),b=a;\n    a -= iTime*.2;\n    vec2 pol = vec2(cos(a),sin(a));\n    float s = snoise(pol-5.);\n    a -= iTime*(-.2+s*5.);\n    uv *= 1.+s*.1;\n    float d = length(uv)-.75+cos(iTime)*.5;\n    b -= iTime+s*.2;\n    pol = vec2(cos(b),sin(b));\n    d -= .4+snoise(pol-5.)*.15;\n    float k = smoothstep(fwidth(d)*1.5,0.,d);\n    d = (abs(d)-fwidth(d)*.5);\n    \n    d = smoothstep(fwidth(d)*1.5,0.,d);\n    col += d;\n    col += (1.-k);\n    col *= smoothstep(.0,.1,length(p));\n    \n\n    fragColor = vec4(col,k);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float f = float(iFrame);\n    fragColor = texelFetch(iChannel1,ivec2(fragCoord),0);\n    fragCoord -= iResolution.xy/1.5;\n    fragCoord.x = mod(fragCoord.x-cos(f/50.)*iResolution.x/4.-f, iResolution.x);\n    fragCoord.y = mod(fragCoord.y-cos(sin(f/300.+cos(f/4000.)*40.)*25.)*iResolution.y/10. - f, iResolution.y);\n    vec4 buf = texelFetch(iChannel0,ivec2(fragCoord),0);\n    fragColor=mix(fragColor,buf,.05*buf.a);//fragColor = mix(fragColor,buf,.0015);\n    \n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"mat2 rot(float a){float c=cos(a),s=sin(a);return mat2(c,-s,s,c);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 original = fragCoord;\n    fragCoord = (2.*fragCoord-iResolution.xy)/iResolution.x;\n    float a = float(iFrame)/200.;\n    \n    //fragCoord += snoise(vec2(cos(a),sin(a)))*.02;\n    fragCoord = rot(55.*(.2+snoise(vec2(cos(a),sin(a)))*.012))*fragCoord;\n    \n    fragCoord.x -= iTime/5.;\n    \n    fragCoord = (iResolution.x*fragCoord + iResolution.xy)/2.;\n    \n    fragCoord = mod(fragCoord,iResolution.xy);\n\n    fragColor = mix(texelFetch(iChannel0,ivec2(fragCoord),0),\n     texelFetch(iChannel1,ivec2(original),0), .5);\n}","name":"Buffer C","description":"","type":"buffer"}]}