{"ver":"0.1","info":{"id":"4sKBzc","date":"1529843907","viewed":841,"name":"Waves propagation","username":"afl_ext","description":"Use mouse to make waves","likes":12,"published":3,"flags":32,"usePreview":0,"tags":["waves","mouse","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 data = texture(iChannel0, uv).rg;\n\n    fragColor = vec4(max(data.x, data.y));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float waterWaves(vec2 q, vec3 e){\n\tfloat s = texture(iChannel0, q).z;\n\t\n\tvec2 tmp0 = texture(iChannel0, q).rg;\n\tvec2 tmp1 = texture(iChannel0, q + e.xz).rg;\n\tvec2 tmp2 = texture(iChannel0, q - e.xz).rg;\n\tvec2 tmp3 = texture(iChannel0, q + e.zy).rg;\n\tvec2 tmp4 = texture(iChannel0, q - e.zy).rg;\n\t\n\tfloat p0 = mix(tmp0.g, tmp0.r, s);\n\tfloat p1 = mix(tmp1.r, tmp1.g, s);\n\tfloat p2 = mix(tmp2.r, tmp2.g, s);\n\tfloat p3 = mix(tmp3.r, tmp3.g, s);\n\tfloat p4 = mix(tmp4.r, tmp4.g, s);\t\n\t\n\treturn -p0 + (p1 + p2 + p3 + p4) * 0.49999;\n}\n\nvec4 shade(vec2 uv){\n\tvec2 q = uv;\n\tvec3 e = vec3(vec2(1.0)/iResolution.xy,0.);\n\tvec4 c = texture(iChannel0, q);\n\t\n\tfloat p11 = mix(c.y, c.x, c.z);\n\tfloat d = waterWaves(q, e);\n\n    vec2 mouse = iMouse.xy / iResolution.xy;\n\t\n\td += 1.0 - smoothstep(0.0, 0.01, distance(mouse, uv)); \n\t\n\tc.x = mix(c.x, d, c.z);\n\tc.y = mix(c.y, d, 1.0 - c.z);\n\tc.z = 1.0 - c.z;\n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = clamp(shade(uv), 0.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}