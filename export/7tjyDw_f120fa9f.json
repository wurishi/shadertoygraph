{"ver":"0.1","info":{"id":"7tjyDw","date":"1649917170","viewed":171,"name":"noise compression","username":"Jodie","description":"removes entropy for compression and then adds it back in","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["totalvariancedenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// curve matched with turingbot\nvec3 srgbToLinear(const vec3 x){\n    return 0.315206*x*((2.10545+x)*(0.0231872+x));\n}\nvec3 linearToSrgb(const vec3 x){\n    return (1.14374*(-0.126893*x+sqrt(x)));\n}\nivec3 srgbToLinear(ivec3 srgb){\n    return ivec3(\n        srgbToLinear(vec3(srgb)/255.)*255.\n    );\n}\nivec3 linearToSrgb(ivec3 linear){\n    return ivec3(\n        linearToSrgb(vec3(linear)/255.)*255.\n    );\n}\n\nivec3 foo(vec2 uv,int x,int y,int bit){\n    return srgbToLinear(ivec3(texelFetch(iChannel0,ivec2(uv)+ivec2(x,y),0).rgb*255.))>>bit&1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;//iResolution.xy;\n\n    for(int bit = 0;bit<8;bit++){\n    ivec3 c = foo(uv,0,0,bit);\n    ivec3 tv=ivec3(0);\n    int a=0;\n    for(int x=-4;x<4;x++){\n        for(int y=-4;y<4;y++){\n            int w = int[8](1,7,21,35,35,21,7,1)[x+4]*int[8](1,7,21,35,35,21,7,1)[y+4];\n            tv+=abs(foo(uv,x,y,bit)-foo(uv,x+1,y,bit))*w;\n            tv+=abs(foo(uv,x,y,bit)-foo(uv,x,y+1,bit))*w;\n            a+=w;\n            a+=w;\n        }\n    }\n\n    int quality=45;\n    \n    /*\n    if(bit==7){\n        fragColor=vec4(c.r);\n        if(tv.r>a*quality/100){\n            fragColor=vec4(0.5);\n        }\n        return;\n    }*/\n    \n    fragColor.rgb+=mix(\n        float(1<<bit)/255.*texture(iChannel1,vec3(fragCoord/32.0,float(bit)/8.)).rgb,\n        vec3(c<<bit)/255.,\n        vec3(lessThan(tv,ivec3(a*quality/100)))\n    );\n    }\n    fragColor.rgb=vec3(linearToSrgb(ivec3(fragColor.rgb*255.)))/255.;\n}","name":"Image","description":"","type":"image"}]}