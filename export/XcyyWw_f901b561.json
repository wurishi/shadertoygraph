{"ver":"0.1","info":{"id":"XcyyWw","date":"1731934087","viewed":43,"name":"Cheap 2D Metaballs","username":"Saphirah","description":"A cheap/fast implementation of 2D Metaballs with aspect correction and aliasing","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float mask = 0.5;\n\nfloat distanceSqr(vec2 p1, vec2 p2) {\n    vec2 d = p1 - p2;\n    return dot(d, d); // Squared distance\n}\n\nfloat circle(vec2 uv, vec2 center) {\n    return pow(clamp(1. - distanceSqr(uv, center), 0., 1.), 125.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - vec2(.25, 0) * iResolution.xy) / iResolution.y;\n\n    float f1 = circle(uv, vec2(0.3 + sin(iTime) * 0.2, 0.5));\n    float f2 = circle(uv, vec2(0.7, 0.5 + sin(iTime) * 0.2));\n    float f3 = circle(uv, vec2(0.5 + sin(iTime) * 0.2, 0.7 + sin(iTime) * 0.2));\n\n    float field = f1 + f2 + f3;\n    \n    for(float x = 0.; x < 6.; x++){\n        field += circle(uv, vec2(0.5 + sin(iTime + x) * 0.3, 0.5 + cos(iTime + x) * 0.3));\n    }\n    field = clamp(field - mask, 0., 1.);\n\n    fragColor = vec4(vec3(field / fwidth(field)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}