{"ver":"0.1","info":{"id":"lX2cDh","date":"1727229738","viewed":5,"name":"Crazy circles","username":"franco1234811","description":"Rotation, distortion, space full of circles, background and circle colors matching after some time","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","distortion","colorful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Wavy checkboard\" by franco1234811. https://shadertoy.com/view/l3jyRW\n// 2024-09-25 01:22:40\n\n#define OFFSET_SCALE_X 0.1f\n#define OFFSET_SCALE_Y 0.1f\n\n#define OFFSET_FREQUENCY_X 10.2f\n#define OFFSET_FREQUENCY_Y 7.2f\n\n#define OFFSET_SPEED_X 0.2f\n#define OFFSET_SPEED_Y 0.2f\n\n#define FALL_SPEED 0.05f\n#define ROTATION_SPEED 0.4f\n\n#define CELL_COUNT 16.0f\n\n#define TWO_PI 6.283185307f\n\n#define CIRLCE_RADIUS 0.9f\n#define CIRCLE_EDGE_SMOOTHING 0.05f\n\n\n\nvec3 sampleColor(float t)\n{\n    return vec3(\n        sin(t * TWO_PI + 2.094f) * 0.5f + 0.5f,\n        sin(t * TWO_PI + 0.000f) * 0.5f + 0.5f,\n        sin(t * TWO_PI + 4.188f) * 0.5f + 0.5f);\n}\n\n\nmat2 create_rotation_matrix(float angle)\n{\n    float c_angle = cos(angle);\n    float s_angle = sin(angle);\n    return mat2(\n        vec2(c_angle, -s_angle),\n        vec2(s_angle, c_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 centered_uv = uv * 2.0f - vec2(1.0f);\n    \n    mat2 rotation_matrix = create_rotation_matrix(iTime * ROTATION_SPEED);\n    vec2 centered_rotated_uv = rotation_matrix * centered_uv;\n    vec2 rotated_uv = centered_rotated_uv * 0.5f + vec2(0.5f);\n    \n    float aspect_ratio = iResolution.x / iResolution.y;\n    \n    uv = rotated_uv / aspect_ratio;\n    uv.y += iTime * FALL_SPEED;\n    \n   \n    vec2 uv_offset = vec2(\n        sin(uv.y * OFFSET_FREQUENCY_X + iTime * OFFSET_SPEED_X * TWO_PI) * OFFSET_SCALE_X,\n        sin(uv.x * OFFSET_FREQUENCY_Y + iTime * OFFSET_SPEED_Y * TWO_PI) * OFFSET_SCALE_Y);\n        \n    vec2 distorted_uv = uv + uv_offset;\n       \n    vec2 local_cell_uv = mod(distorted_uv * CELL_COUNT, vec2(1.0f));\n    vec2 local_centered_uv = local_cell_uv * 2.0f - vec2(1.0f);\n    float r = length(local_centered_uv);\n    float t = smoothstep(CIRLCE_RADIUS, CIRLCE_RADIUS - CIRCLE_EDGE_SMOOTHING, r);\n    \n    // Color\n    float color_t = (uv.x + uv.y) * 5.0f;\n    vec3 background_color = mix(sampleColor(color_t), vec3(1.0f), 0.4f);\n    vec3 circle_color = sampleColor(color_t + iTime * 0.25f);\n    vec3 col = mix(background_color, circle_color, t);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}