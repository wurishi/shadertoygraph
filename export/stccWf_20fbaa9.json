{"ver":"0.1","info":{"id":"stccWf","date":"1660664344","viewed":123,"name":"squares highway","username":"geoffroy","description":"objective: to manipulate simple shapes (squares) and animate them","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec2 box(float scale, vec2 uv, float thk, float dark)\n{\n    uv *= scale;\n    \n    float dispx = 1.0 - step(1.0, abs(uv.x) - thk);\n    float dispy = 1.0 - step(1.0, abs(uv.y) - thk);\n    float disp = min(1.0, (dispx * dispy) + 0.05);\n\n    \n    \n    float e1 = smoothstep(thk + 0.02, thk, abs(cos(uv.x*PI*0.5)));\n    float e2 = smoothstep(thk + 0.02, thk, abs(cos(uv.y*PI*0.5)));\n    float o = mix((e1*e2)*disp, (e1+e2)*disp, (1.0+sin(iTime*0.4))*0.5);\n    o *= dark;\n    return vec2(o, disp);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1-1 to 11)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5);\n    uv *= 2.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float o = 0.0;\n    float m = 1.0;\n    \n    // Time varying pixel color\n    uv *= rotate2d(17.0+PI*iTime*0.1);\n    float off = mod(iTime*(2.0), 1.0);\n    \n    for (float i = -2.0 - off; i < 10.2 ; i+= 0.2)\n    {\n        if (i < 0.0) continue;\n        uv *= rotate2d(i*0.03*PI*0.1*sin(2.0+iTime*0.2));\n        uv.x += i * 0.015 * sin(0.2);\n        //uv.y += i * 0.012 * sin(i*2.0+iTime*2.0);\n        vec2 b = box(i, uv, 0.022, i/10.0);\n        o += b.x * m;\n        m *= b.y;\n    }\n\n    fragColor = vec4(mix(1.0-vec3(o), vec3(o), sin(iTime*0.3+0.5)), 1.0);\n}","name":"Image","description":"","type":"image"}]}