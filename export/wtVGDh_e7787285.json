{"ver":"0.1","info":{"id":"wtVGDh","date":"1578949257","viewed":163,"name":"riff #1320","username":"nabr","description":"very simpel very minimal","likes":6,"published":1,"flags":8,"usePreview":0,"tags":["sound","synth","organ","guitar","scetch","heavymetal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// -----------------------------------------------------\n// riff #1320 by nabr\n// https://www.shadertoy.com/view/wly3z1\n// License Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)\n// https://creativecommons.org/licenses/by-nc/4.0/\n// -----------------------------------------------------\n\n\nfloat message(vec2 uv);\n\n// -------- line\nfloat ln(vec2 a, vec2 b, vec2 p, float t)\n{\n    b -= a;p -= a;\n    return t * length(p - b * clamp(dot(p, b) / dot(b, b), 0., 1.));\n}\n// -------- mainImage\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    vec2 R = iResolution.xy;\n    // -------- sound in msg\n    float c0 = message(59.25*U/R.y), c1 = message(60.*U/R.y);\n    if(c0>.0||c1>.0){O.xyz = max(vec3(.85*c0, 0, 0),vec3(.85*c1, .85*c1, 0));return;}\n    // -------- window coords\n    U = (U - .5 * R) / min(R.x, R.y);\n\t// -------- background tex\n    #define f(_u)sin(.5*fract(_u/5.).x + 1.25 * fract(_u/3.).y)\n\tfloat ptrn = abs(fract(f(gl_FragCoord)+sin(iTime+24.*(1.5-U.y)) )*fract(f(gl_FragCoord)+cos(16.*U.x)));\n    // -------- frame\n    if (abs(U.x) > .5){O = vec4(ptrn);return;}\n\t// -------- noise -ftw\n    float a = sin((1.32038*(abs(floor(U.x * R.y) - .501f) * abs(floor(U.y * R.y) - .5)))); \n    // -------- draw line\n    #define tau (8. * atan(1.))\n    float t = 1.25 * iTime;\n    vec2 ol = .125 * vec2(sin(t + tau * a), sin(t) - cos(tau * a));\n    vec2 dl =  .45 * vec2(cos(t-tau * a), sin( tau * a)) ;\n    float f = ln(ol,dl, U, .25*R.y);\n    // -------- out\n    O.xyz = max(.2*ptrn, float(f < 4.)) + vec3(.125, 0, .5);\n    O.w = 1.;\n}\n// -------- from https://www.shadertoy.com/view/XljSD3\nfloat message(vec2 v){\n    ivec2 u=ivec2(v.x, v.y-50.);\n    if(abs(1-u.y)>1)return-1.;\n    int b=2<<int(2.*iTime)-u.x,i=928473456/b;\n    if(u.y==0)i=1735745872/b;if(u.y==1)i=626348112/b;\n    return float(i-2*(i/2));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// -----------------------------------------------------\n// riff #1320 by nabr\n// https://www.shadertoy.com/view/wtVGDh\n// License Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)\n// https://creativecommons.org/licenses/by-nc/4.0/\n// -----------------------------------------------------\n\n\n#define VOL .5\n\nfloat synth(in int h, in float tm, in float rt)\n{\n\tconst float pi = acos(-1.);\n    \n    float hz = float(h);\n    float ftm = ((tm > 7.) ? 3.5 : .5); // chorus alike\n    \n    float s = 0.;\n    //saw\n    s = mod((sin(pi * hz * tm) - ftm * tm) + (cos(3. * pi * hz * tm) - ftm * tm), 4.8+sin(tm)/*clean -dist */ ); \n   \n    if(rt<8.5)//intro pluck\n    s *= exp(-1.*fract(.5*tm));\n \t\n    s = pow(1.6, s); //amp\n    s = sin(s);\n    return s;\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    // return vec2( sin(6.2831*440.0*time)*exp(-3.0*time) );\n\t\n    float rtime = time; \n    vec2 s = vec2(0);\n    float ta = 0., tm = 0., spd = 0.; \n    \n    if(rtime<11.5)//intro\n    { tm = time*.5;spd = 9.;}\n    else\n    {\n    ta = float[](.5, .3333, .666)[int(6. * time) % 3];\n    time = mod(time, 8.);\n    tm = time * ta; //playtime time modulation\n    spd = ((mod(time, 2.) < 1.) ? .888 : 9.); //speed of note change\n    }\n   \n    const int x[] = int[](10, 3, 4, 12, 5, 6, 4, 10);//pitch\n    for (uint i = 0u; i <= 3u; ++i)\n    {\n        s.x += .16 * synth((135 * x[i]),\n                           max((tm) - float(i) / spd, 0.), rtime);//0123 return zero when negative\n        s.y += .04 * synth((100 * x[i + 4u]),\n                           max(abs((1.33333+2. * tm) - float(i+4u) / spd), 6.),rtime);//4567\n    }\n\t\n    // -------- out    \n    return VOL * (vec2(s.y + .78 * s.x, \n                       s.x * .95 - s.y));//no mono compatibility\n}","name":"Sound","description":"","type":"sound"}]}