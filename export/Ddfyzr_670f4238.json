{"ver":"0.1","info":{"id":"Ddfyzr","date":"1686503349","viewed":97,"name":"fractal spiral rotate","username":"nayk","description":"fractal spiral rotate","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractalspiralrotate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 palette (float t) {\n\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(1.5, 1.5, 0.5);\n    vec3 c = vec3(1., 1., 1.);\n    vec3 d = vec3(1.263, 2.416, 0.557);\n\n    return a + b*cos(16.28318 * (c * t + d));\n}\n\n\n\n\nconst float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, s, -s, c );\n}\n\n\n    \n   \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n   \n    vec3 finalColor = vec3(0,0,0);\n    finalColor+=vec3(0.5,0.5,0.5);\n    \n     uv *= rotationMatrix( 10.0 * iTime );\n    for (float i = 0.0; i < 20.0; i++) {\n    \n    \n        uv = fract(uv * 1.7) - 0.5;\n     uv *= rotationMatrix( 10.0 * -iTime );\n        uv *= rotationMatrix( 5.0 * iTime );\n        float d = abs(length(uv)) * exp(0.302*cos(-length(uv0)*15.1));\n    \n   \n      \n        d = sin(d * 10. + iTime)/.5;\n        d = abs(-d/0.5);\n    \n        d = pow(0.03/d, 1.2);\n        \n \n    \n           finalColor+=d;\n    \n       \n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}