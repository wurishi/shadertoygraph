{"ver":"0.1","info":{"id":"MscGWn","date":"1448908249","viewed":200,"name":"LineCircleIntersection","username":"jt","description":"Visualization of line-circle intersection. Click mouse to move line.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["visualization","line","intersection","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Line Circle Intersection - written 2015 by JT\n\nfloat DistanceAlong(vec2 a, vec2 u, vec2 c)\n{\n    return dot(u, c - a) / dot(u, u);\n}\n\nvec2 ProjectAlong(vec2 a, vec2 u, vec2 c)\n{\n    return a + u * DistanceAlong(a, u, c);\n}\n\nfloat PointLineDistance(vec2 a, vec2 u, vec2 c)\n{\n    return length(c - ProjectAlong(a, u, c));\n}\n\nvec4 LineCircleIntersections(vec2 a, vec2 u, vec2 m, float r)\n{\n    float distradial = length(ProjectAlong(a, u, m) - m);\n    float disttangent = sqrt(r * r - distradial * distradial);\n    return\n        vec4(\n        \tProjectAlong(a, u, m) + normalize(u) * disttangent,\n            ProjectAlong(a, u, m) - normalize(u) * disttangent);\n}\n\n#define draw(q) o *= smoothstep(0.0, 0.01, abs(q))\n\nvoid mainImage(out vec4 o, vec2 I)\n{\n    vec2 R = iResolution.xy; \n    I = (I+I-R)/R.y;\n\n    //vec2 a = vec2(0.25,0.75);\n    vec2 u = vec2(3,2);\n    \n    vec2 m = vec2(0.1,0.2);\n    float r = 0.5;\n    \n    vec2 a = (2.*iMouse.xy-R)/R.y;\n\n    vec4 i = LineCircleIntersections(a, u, m, r);\n\n    o = vec4(1);\n    draw(PointLineDistance(a, u, I)); // line\n    draw(length(I - m) - r); // circle\n    draw(length(I - m)-.01); // center\n    //draw(length(I - ProjectAlong(a, u, m))-.01); \n    if(PointLineDistance(a, u, m) < r)\n    {\n        draw(length(I - i.xy)-.02); // Intersection\n        draw(length(I - i.zw)-.02); // Intersection\n        o.b += 1.0;\n    }\n}\n","name":"","description":"","type":"image"}]}