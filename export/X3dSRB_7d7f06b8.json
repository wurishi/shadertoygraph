{"ver":"0.1","info":{"id":"X3dSRB","date":"1719236387","viewed":29,"name":"Mouse move with key mod","username":"smarchevsky","description":"You can move 2d values with mouse and pressed modifiers (ctrl, alt, shift).\nE.g. pan (no mod), zoom (alt), rotate (shift) of scene.","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["mouse","navigation","viewport","modifier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv) { return 1.0-smoothstep(0.3,0.31,length(uv)); }\n\nfloat grid(vec2 uv) { \n    vec2 g = abs(fract(uv) * 2. - 1.);\n\n    return clamp(max(g.x,g.y) * 20. - 19., 0.,1.);\n}\n\n#define DATA_BUFFER iChannel0\nvec2 toNormalizedCoord(vec2 fragCoord) {\n    vec2 n = fragCoord/iResolution.xy;\n    n.x *= iResolution.x / iResolution.y;\n    return n;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = toNormalizedCoord(fragCoord);\n    \n    vec3 mouseData = TEXEL_FROM(MOUSE_POS_TEXEL).rgb;\n    vec2 posNomod = TEXEL_FROM(POS_NOMOD_TEXEL).rg;\n    vec2 posShift = TEXEL_FROM(POS_SHIFT_TEXEL).rg;\n    vec2 posCtrl = TEXEL_FROM(POS_CTRL_TEXEL).rg;\n    vec2 posAlt = TEXEL_FROM(POS_ALT_TEXEL).rg;\n    float gridNomod = grid((uv - toNormalizedCoord(posNomod)) * 2.0);\n    float gridShift = grid((uv - toNormalizedCoord(posShift)) * 2.2);\n    float gridCtrl  = grid((uv - toNormalizedCoord(posCtrl)) * 2.4);\n    float gridAlt   = grid((uv - toNormalizedCoord(posAlt)) * 2.6);\n    \n    fragColor = vec4(0);\n    fragColor += vec4(gridShift,gridCtrl,gridAlt,1);\n    fragColor += vec4(vec3(gridNomod)*0.5,1);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEYBOARD(key) bool(texelFetch(iChannel0, ivec2(key, 0), 0).x > 0.5);\n\n#define IS_TEXEL(texelPos) (int(fragCoord.x) == texelPos && int(fragCoord.y) == 0)\n\n#define DATA_BUFFER iChannel1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (int(fragCoord.x) > ALL_DATA_TEXELS)\n        return;\n    vec2 uv = fragCoord/iResolution.xy; uv.x *= iResolution.x / iResolution.y;\n    \n    float digit = 0.; \n    \n    float keyPressed = texelFetch( iChannel0, ivec2(fragCoord.x,0), 0 ).x;\n    // keyPressed += float(int(fragCoord.x) == 14);\n\n    bool shift = KEYBOARD(KEY_SHIFT);\n    bool ctrl  = KEYBOARD(KEY_CTRL);\n    bool alt   = KEYBOARD(KEY_ALT);\n    bool mousePress = (iMouse.z > 0.5f);\n    \n    vec3 mouseData = TEXEL_FROM(MOUSE_POS_TEXEL).rgb;\n    vec2 posNomod = TEXEL_FROM(POS_NOMOD_TEXEL).rg;\n    vec2 posShift = TEXEL_FROM(POS_SHIFT_TEXEL).rg;\n    vec2 posCtrl = TEXEL_FROM(POS_CTRL_TEXEL).rg;\n    vec2 posAlt = TEXEL_FROM(POS_ALT_TEXEL).rg;\n    \n    bool prevMousePressed = mouseData.z > 0.5;\n    if(mousePress && prevMousePressed) {\n        vec2 delta = iMouse.xy - mouseData.xy;\n        if(shift)\n            posShift += delta;\n        else if (ctrl)\n            posCtrl += delta;\n        else if (alt)\n            posAlt += delta;\n        else\n            posNomod += delta;   \n    }\n    \n    //digit = max(digit, PrintValue( (uv-vec2(0,0.5)) * 10., num, 4., 1.));\n    //fragColor = vec4(shift, ctrl, alt, 1.);\n\n    \n    if(IS_TEXEL(MOUSE_POS_TEXEL)){\n        fragColor = vec4(iMouse.xyz, 0);\n        \n    } else if(IS_TEXEL(POS_NOMOD_TEXEL)){\n        fragColor = vec4(posNomod, 0,0);\n        \n    } else if(IS_TEXEL(POS_SHIFT_TEXEL)){\n        fragColor = vec4(posShift, 0,0);\n        \n    } else if(IS_TEXEL(POS_CTRL_TEXEL)){\n        fragColor = vec4(posCtrl, 0,0);\n        \n    } else if(IS_TEXEL(POS_ALT_TEXEL)){\n        fragColor = vec4(posAlt, 0,0);\n\n    } \n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const int KEY_SHIFT = 16;\nconst int KEY_CTRL  = 17;\nconst int KEY_ALT   = 18;\n\n/*const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;*/\n\nconst int SCREEN_RES_TEXEL = 0;\nconst int MOUSE_POS_TEXEL = 1;\n\nconst int POS_NOMOD_TEXEL = 2;\nconst int POS_SHIFT_TEXEL = 3;\nconst int POS_CTRL_TEXEL = 4;\nconst int POS_ALT_TEXEL = 5;\n\nconst int ALL_DATA_TEXELS = 10;\n\n#define TEXEL_FROM(texelPos) texelFetch(DATA_BUFFER, ivec2(texelPos, 0), 0)\n\n","name":"Common","description":"","type":"common"}]}