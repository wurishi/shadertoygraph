{"ver":"0.1","info":{"id":"msdSRB","date":"1680050834","viewed":111,"name":"Cobble texture with normals","username":"ianertson","description":"This is the texture I made for this scene over here:\n[url]https://www.shadertoy.com/view/msdXzS[/url]","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["textures","normal","bumpmap","cobble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R (iResolution.xy)\n#define T (iTime)\n#define M_PI (3.14159265359)\n#define TAU (M_PI * 2.0)\n#define ZERO (min(0, int(iTime)))\n#define rgb(a,b,c) (vec3(a, b, c) / 255.0)\nmat2 rot(in float a) { float c = cos(a); float s = sin(a); return mat2(c, s, -s, c); }\nvec3 mix4(vec3 c1, vec3 c2, vec3 c3, vec3 c4, vec3 m) {\n    return mix(mix(mix(c1, c2, m.x), c3, m.y), c4, m.z);\n}\n\nfloat hash21Fast(in vec2 p, in float seed) {\n    float ma = 64.092391;\n    float x = mod(p.x*4.0291, ma) / ma;\n    float y = mod(p.y*5.5920, ma) / ma;\n    vec2 p2 = mix(vec2(x,y), vec2(y, x), fract(seed*10.29891231))*2.0-1.0;\n    float r1 = mod(100.2891382*fract(seed+(dot(p, p2)*16.2099123)), ma)/ma;\n    float r2 = fract((p.x*3.392912+p.y)*distance(p2, p-seed));\n    return fract(dot(p, vec2(r1, r2)));\n}\n\n#define NOISE(p, seed, lod) (textureLod(iChannel3, (p + (seed*1.9287827185))/256.0, lod).rgb)\n\nvec3 snoise(in vec2 p, in float seed, in float lod) {\n    p += 0.99288124;\n    vec2 id = floor(p);\n    vec2 lv = fract(p); lv = lv*lv*(3.0-2.0*lv);\n    return mix(\n        mix(NOISE(id, seed, lod), NOISE(id + vec2(1, 0), seed, lod), lv.x),\n        mix(NOISE(id + vec2(0, 1), seed, lod), NOISE(id + vec2(1, 1), seed, lod), lv.x),\n        lv.y\n    );\n}\n\nvec3 snoise(in vec2 p, in float seed, in float lod, in float freq, const in int octaves) {\n    p += 0.99288124;\n    float div = 0.0;\n    float amp = 1.0;\n    vec3 n = vec3(0.0);\n    for (int i = ZERO; i < octaves; i++) {\n        n += amp * snoise(p*freq, seed, lod); div += amp; amp /= 2.0; lod /= 2.0; freq *= 2.0;\n    }\n    return n / div;\n}\n\nvec3 stoneBrickTexture(in vec2 uv, inout float z) {\n    vec3 col = vec3(0.0);\n    vec3 c1 = rgb(143, 134, 121);\n    vec3 c2 = rgb(130, 128, 124);\n    vec3 c3 = rgb(71, 67, 62);\n    vec3 c4 = rgb(164, 145, 122);\n    \n    vec3 g1 = rgb(58, 76, 39);\n    vec3 g2 = rgb(77, 75, 54);\n    vec3 g3 = rgb(107, 102, 72);\n    vec3 g4 = rgb(85, 107, 44);\n    \n    vec3 lf1 = snoise(uv, 0.0392219, 0.2, 16.0, 6);\n    vec3 lf2 = snoise(uv, 7.7777793, 0.2, 8.0, 6);\n    vec3 hf1 = snoise(uv, 5.5598393, 0.5, 64.0, 6);\n    vec3 hf2 = snoise(uv, 16.956838, 0.0, 128., 6);\n    vec3 grain = abs(normalize(cross(hf1*2.0-1.0, hf2*2.0-1.0)));\n    \n    float cracks = 1.0-smoothstep(0.04, 0.1, abs((lf2.y+(lf1.y*2.0-1.0))*2.0-1.0));\n    cracks *= smoothstep(0.4, 0.7, lf2.z);\n    \n    \n    vec3 grassCol1 = mix4(g1, g2, g3, g4, smoothstep(0.19, 0.3, hf2*lf1));\n    vec3 grassCol2 = mix4(g4, g3, g2, g1, hf2);\n    vec3 grassCol = mix(grassCol1, grassCol2, lf2.x);\n    float grassGrain = grain.x*0.4;\n    grassCol = mix(grassCol, grassCol*grassCol, grassGrain);\n    \n    vec3 col1 = mix4(c1, c2, c3, c4, hf1);\n    vec3 col2 = mix4(c4, c3, c2, c1, hf1);\n    vec3 colA = (col1+col2)*0.5;\n    \n    vec3 col3 = mix4(c1, c2, c3, c4, smoothstep(0.4, 0.7, lf1));\n    vec3 col4 = mix4(c4, c3, c2, c1, smoothstep(0.4, 0.7, lf1));\n    vec3 colB = (col3+col4)*0.5;\n    \n    col = mix(colA, colB, smoothstep(0.4, 0.7, lf2.x));\n    \n    \n    float tile = 4.0;\n    float idy = floor(uv.y*tile);\n    vec2 uuv = uv;\n    uuv.x += idy/tile/2.;\n    vec2 id = floor(uuv*tile);\n    vec2 lv = fract(uuv*tile);\n    vec2 alv = abs(lv*2.0-1.0);\n    \n    float idr = hash21Fast(id*4.492921, 3.32092912+id.x+id.y);\n    float idr2 = hash21Fast(id*6.694912, 7.7779894+id.x-id.y+idr);\n    float idr3 = hash21Fast(id*10.293123, 0.0923811+idr+idr2);\n    \n    vec3 idf = vec3(idr, idr2, idr3);\n    vec3 idcol1 = mix4(c1, c2, c3, c4, idf);\n    vec3 idcol2 = mix4(c4, c3, c2, c1, idf);\n    vec3 idcol = (idcol1+idcol2)*0.5;\n\n    float stoneR = mix(1.4, 0.5, smoothstep(0.4, 0.7, lf1.x));\n    float stoneRX = mix(-0.01, 0.2, idr);\n    float stoneRY = mix(-0.01, 0.2, idr2);\n    stoneR = max(0.02, stoneR-0.5);\n    float stoneArea = clamp((1.0-max(\n        smoothstep(0.48-stoneR, 0.55, alv.x-(0.5-stoneRX)),\n        smoothstep(0.48-stoneR, 0.55, alv.y-(0.5-stoneRY))))*3., 0.0, 1.0);\n    \n    float grassArea = max(0.0, 1.0-stoneArea);\n    cracks *= stoneArea;\n    \n    float stoneGrain = grain.y*0.4*stoneArea*max(0.25, smoothstep(0.4, 0.7, lf2.z));\n    \n    col = mix(col, idcol, stoneArea);\n\n    float edge = 1.0-smoothstep(-0.1, 0.9, abs(stoneArea - grassArea));\n    \n    grassArea *= smoothstep(0.2, 0.7, lf1.z);\n    col = mix(col, grassCol, grassArea);\n    \n    col = mix(col, col*col, edge);\n    float corner = (edge+stoneR*0.05)*max(smoothstep(0.33, 0.54, lv.x-(0.3-stoneRX)),\n                            smoothstep(0.33, 0.54, lv.y-(0.3-stoneRY)));\n    corner = corner*corner;\n    col = mix(col, clamp(col+col+col, 0.0, 1.0), corner*0.8);\n    col = mix(col, colA*colB, cracks);\n    col = mix(col, col*col*col, stoneGrain);\n    \n    \n    z = (stoneArea-grassArea)-(cracks*0.15);\n    return col;\n}\n\nvec3 makeNormal(in float z, in float s) {\n    if (abs(z) <= 0.0000001) return vec3(0.0);\n    vec2 dx = vec2(dFdx(z), 0.0001);\n    vec2 dy = vec2(0.0001, dFdy(z));\n    float bumpScale = s;\n    vec3 cp = cross(vec3(dx, bumpScale), vec3(dy, bumpScale));\n    if (length(cp) <= 0.00002) return vec3(0.0);\n    return normalize(cp).yxz;\n}\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = fc/R.y;\n    float z = 0.0;\n    \n    col = stoneBrickTexture(uv, z);\n    \n    float c = mix(R.x/2., R.x, 0.5+sin(T+3.90)*0.5);\n   \n    if (fc.x > c) {\n        vec3 n = makeNormal(z, 0.5);\n\n        col = n;\n    }\n    \n    O = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}