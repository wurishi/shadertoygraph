{"ver":"0.1","info":{"id":"wlKfDm","date":"1614521713","viewed":416,"name":"Draw with mouse [antialiased]","username":"avin","description":"Simple demo for learning purposes","likes":10,"published":3,"flags":32,"usePreview":0,"tags":["mouse","draw","buffer","learn"],"hasliked":0,"parentid":"tlK3WK","parentname":"Draw with mouse [lined]"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{          \n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define S(d,r,pix) smoothstep( .75, -.75, (d)/(pix)-(r))\nfloat line(vec2 p, vec2 a,vec2 b) {\n    p -= a, b -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n    return length(p - b * h);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ouv = (fragCoord.xy)/iResolution.y;\n       \n    vec2 pos1 = iMouse.xy/iResolution.y;\n    vec4 prevMouse = texture(iChannel1, ouv).rgba;\n    vec2 pos2 = prevMouse.rg;\n       \n    vec3 backCol = texture(iChannel0, fragCoord/iResolution.xy).rgb;\n                \n    float d = 0.;\n    if(prevMouse.w > 0.){\n        // d = clamp(drawLine(pos2, pos1, ouv, 3., 1.), 0., 1.);\n        d = S( line( ouv,pos2, pos1), 3., 2./iResolution.x);\n    }  \n    \n    // vec3 col = backCol + vec3(d);\n    \n    vec3 col = max(backCol, vec3(d));\n    \n    fragColor = vec4(col, 1.);    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(iMouse.xy/iResolution.y,1.0,iMouse.z);    \n}","name":"Buffer B","description":"","type":"buffer"}]}