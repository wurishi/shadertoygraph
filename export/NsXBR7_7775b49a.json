{"ver":"0.1","info":{"id":"NsXBR7","date":"1685641412","viewed":68,"name":"Fork Fork Night Doc_gdi 084","username":"Doc_gdi","description":"Night vision device","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"sslBz8","parentname":"Fork Night visi Doc_gdi 541"},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    uv = vec2(uv.x, 1. - uv.y);\n\tfloat wide = iResolution.x / iResolution.y;\n\t\n\tvec2 position = vec2(uv.x * wide, uv.y);\n\t\n\tfloat greenness = 0.4;\n    float intensity = 1.0;\n\tvec4 coloring = vec4(1.0 - greenness, 1.0, 1.0 - greenness, 1.0) * intensity;\n\t\n    //Rand funct values\n    vec2 n = uv * vec2(0.1, 1.0);\n    float time = iTime * 5.0;\n    //Rand funct\n\tfloat noise =  0.5 + 0.5 * fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453 + time);\n    \n\tfloat noiseColor = 1.0 - (1.0 - noise) * 0.3;\n\tvec4 noising = vec4(noiseColor, noiseColor, noiseColor, 1.0);\n\t\n\tfloat warpLine = fract(-iTime * 0.5);\n\t\n\tfloat warpLen = 0.1;\n    //Remap funct values\n    float value = clamp((position.y - warpLine) - warpLen * 0.5, 0.0, warpLen);\n    float inputMin = 0.0;\n    float inputMax = warpLen;\n    float outputMin = 0.0;\n    float outputMax = 1.0;\n    //Remap funct\n    \n\tfloat warpArg01 = (value - inputMin) * ((outputMax - outputMin) / (inputMax - inputMin)) + outputMin;\n    //End remap\n    \n    float f1 = -4.0 * pow(warpArg01 - 0.5, 2.0) + 1.0;\n\tfloat offset = sin(warpArg01 * 10.0)  * f1;\n\t\n\t\n\tvec4 lineNoise = vec4(1.0, 1.0, 1.0, 1.0);\n\tif(abs(uv.y - fract(-iTime * 19.0)) < 0.0005)\n\t{\n\t\tlineNoise = vec4(0.5, 0.5, 0.5, 1.0);\n\t}\n\t\n\tvec4 base = texture(iChannel0, uv + vec2(offset * 0.02, 0.0));\n\tfragColor = base * coloring * noising * lineNoise;\n\n}","name":"Image","description":"","type":"image"}]}