{"ver":"0.1","info":{"id":"3styWr","date":"1600762973","viewed":371,"name":"flow19","username":"tomviolin","description":"full screen it for best results. .Webcam required","likes":4,"published":3,"flags":34,"usePreview":0,"tags":["flow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //if (uv.x>CAMSTRIP/iResolution.x && (uv.y>.95 || uv.y <0.05)) {\n    //    fragColor = vec4(1);\n    //    return;\n    //}        \n    fragColor = texture(iChannel0,uv);\n    if (uv.x < (CAMSTRIP+1.)/iResolution.x &&\n        uv.x > (CAMSTRIP-2.0)/iResolution.x) {\n        fragColor=fragColor+0.3;\n    }\n    if (uv.x < (CAMSTR+1./iResolution.x) &&\n        uv.x > (CAMSTR)) {\n        fragColor=fragColor+0.3;\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 vecpow(vec4 v, float p) {\n    return vec4(\n        pow(v.x,p),\n        pow(v.y,p),\n        pow(v.z,p),\n        v.w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 cam=vecpow(texture(iChannel0, vec2(.6-uv.x,uv.y)),1.0);\n    cam.a=1.0;\n    vec4 lup = vec4(0,0,0,0);\n    if (uv.x > (CAMSTRIP+5.0)/iResolution.x) {\n    \tlup=texture(iChannel1, uv+vec2(-2.0/iResolution.x,0.0));\n    \tfragColor = lup;\n    } else if (uv.x > (CAMSTRIP+3.0)/iResolution.x) {\n    \tlup=texture(iChannel1, uv+vec2(-1.2/iResolution.x,0.0));\n    \tfragColor = lup;\n    } else if (uv.x > (CAMSTRIP+1.0)/iResolution.x) {\n    \tlup=texture(iChannel1, uv+vec2(-0.96/iResolution.x,0.0));\n    \tfragColor = lup;\n    } else if(uv.x > CAMSTRIP/iResolution.x) {\n    \tlup=texture(iChannel1, vec2(CAMSTR,uv.y));\n    \tfragColor = lup;\n    } else {\n        fragColor = (cam);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float CAMFRAC=0.25;\n\n    \n    \n    \n#define CAMSTRIP  (iResolution.x*CAMFRAC)\n\n\nfloat camstr(float iTime, vec3 iResolution) {\n    float ts=iTime*CAMFRAC/iResolution.x*3000.;\n    float phase=mod(ts+2.0,4.)>=2.0?1.0:-1.0;\n    float wavefunc=( ((mod(ts,2.0))/2.0-0.5)*phase);\n    float wavefun=sin(iTime/0.9)/2.0;\n    return CAMFRAC/2.0+ wavefun*CAMFRAC;\n\t//return (CAMSTRIP/2.0)+pow(sin(5.0*iTime/3.14159/1.),1.0)*CAMSTRIP/2.0;\n}\n\n\n#define CAMSTR (camstr(iTime,iResolution))\n\n//#define CAMSTRIP camstr(iTime)","name":"Common","description":"","type":"common"}]}