{"ver":"0.1","info":{"id":"ldKXWt","date":"1467474814","viewed":679,"name":"Gabor illusion 1b","username":"FabriceNeyret2","description":"inspired from https://www.youtube.com/watch?v=Jri0del_6t4","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["illusion","gabor","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// inspired from https://www.youtube.com/watch?v=Jri0del_6t4\n// variant of https://www.shadertoy.com/view/XdVXWd\n\n// Gabor kernel\n#define G(U,a,v) exp(-.5*dot(U,U)*1e3) * sin( 100.*dot(U,sin(a+vec2(1.57,0)))-10.*(v)*sin(.5*iDate.w) ) \n\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\tU = (U+U - (O.xy=iResolution.xy) ) / O.y;\n    O -= O;\n    \n    for (float k=0.; k<3.; k++)    // 3 squares\n        for (float i=-3.; i<4.; i++) {   // 4 lines of 7 splats\n            float s = .5+.2*k,      // line pos\n                  d = i*(3.+k)/20., // splat pos\n                  v = i*(2.*mod(k,2.)-1.);\n            O +=   G( U-vec2(d, s), 1.57,-v)\n                 + G( U-vec2(d,-s), 1.57,-v)\n                 + G( U-vec2(-s,d), 0.  , v)\n                 + G( U-vec2( s,d), 0.  , v);\n            }\n\n\tO = .5 + .5*O; \n}","name":"Image","description":"","type":"image"}]}