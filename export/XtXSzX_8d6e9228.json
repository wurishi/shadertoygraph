{"ver":"0.1","info":{"id":"XtXSzX","date":"1472117168","viewed":132,"name":"Basic Polygons","username":"sohail05","description":"Basic Polygons functions to build on.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["basic","polygons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Hold global fragCoord for functions\nvec2 Coord;\n\nfloat pi = 3.1416;\n\nvec4 Polygone( vec2 position, float size, int edges, vec4 color){\n\n    float dx = distance( position.x , Coord.x );\n    float dy = distance( position.y , Coord.y ); \n    \n   \tfloat angle = pi * 2.0 / float(edges);\n    float x,y;\n    \n    return vec4(x,y,0,1);\n}\n\n\n//Make Square/Rectangle\nvec4 Quad( vec2 position , vec2 size , vec4 color){\n\n  float dx = distance( position.x , Coord.x );\n  float dy = distance( position.y , Coord.y ); \n    \n    if( dx < size.x &&  dy < size.y ) {\n      return color;\n    }else{\n      return vec4(0,0,0,1);\n    }\n         \n}\n\nvec4 Circle( vec2 position , float radius , vec4 color){\n\n  float d = distance( position , Coord ); \n    \n    if( d < radius ) {\n      return color;\n    }else{\n      return vec4(0,0,0,1);\n    }\n         \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    /**\n    Coord =  fragCoord ;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n   \n   float Hcenter = float(iResolution.x) / 2.0;\n   float Vcenter = float(iResolution.y) / 2.0;\n    \n   //float horizontal = Hcenter+sin(iTime*2.0)*100.0;\n   //float vertical = Vcenter+cos(iTime*2.0)*100.0;\n  \n    \n   //vec2 position = vec2(horizontal ,vertical);\n    \n   vec2 position = vec2(Hcenter ,Vcenter); \n   vec2 size = vec2(100.0, 100.0);\n   vec4 color = vec4(0.0, 0.0, 1.0 ,1.0 );\n   vec4 quad =  Quad( position+vec2(-150.0,0.0), size, color) ;\n    \n   vec4 circle =  Circle( position+vec2(50.0,0.0), 100.0, color) ; \n    \n   vec4 polygone = Polygone(position+vec2(-50.0,0.0) , 1.0 , 3 , color );\n    \n   fragColor = vec4(0.0,0,0,1) + quad + circle + polygone ;\n\t**/\n    \n}","name":"Image","description":"","type":"image"}]}