{"ver":"0.1","info":{"id":"llBSWt","date":"1447263304","viewed":360,"name":"LineSegment","username":"jt","description":"A bouncing line segment.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["linesegment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Line Segment (bouncing) written 2015 by Jakob Thomsen\n\n// mirror/bounce inside -1,+1\nvec2 mirror(vec2 pos)\n{\n    return (2.0 * abs(2.0 * fract(pos) - 1.0) - 1.0);\n}\n\n// Cleaned up by Fabrice ;)\nfloat PointLineSegDist2d(vec2 a, vec2 b, vec2 p)\n{\n    p -= a; b -= a;                        // go to A referential\n    float q = dot(p, b) / dot(b, b) ;      // projection of P on line AB: normalized ordinate\n    b *= clamp(q, 0., 1.);                 // point on segment AB closest to P \n    return length( p - b);                 // distance to P\n}\n\nvoid mainImage( out vec4 o, in vec2 I )\n{\n    vec2 speed0 = vec2(0.0432, 0.0123);\n    vec2 speed1 = vec2(0.0257, 0.0332);\n    I = 2. * I / iResolution.xy - 1.;\n    vec2 a = mirror(iTime * speed0);\n    vec2 b = mirror(iTime * speed1);\n    float d = PointLineSegDist2d(a, b, I);\n\to = vec4(1.0 - smoothstep(0.0, 0.01, d)); // line\n    //o = vec4(pow(1.0 - d, 17.0)); // glow\n}\n","name":"Image","description":"","type":"image"}]}