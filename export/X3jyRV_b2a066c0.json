{"ver":"0.1","info":{"id":"X3jyRV","date":"1728021643","viewed":15,"name":"Hollow_Purple","username":"jingles5","description":"gojo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Global Constants\n    float underPos = -1.0;//used for the starting position of points\n    float vSpeed = 0.45;//used for speed of vertical points\n    float durationX = 5.0;//used for time of x oscillation\n    float dp = mod(iTime+durationX, durationX);//mod used to loop the points\n    float t = dp/durationX;//essentially sets the speed for horizontal change\n    float betterT = pow(t,2.0);//ease (:\n    float q = mod(iTime, 10.0);//vertical change\n    float hSpeed = 20.0;//horizontal speed\n    \n    /*functions used and why\n        mod - looping sections\n        sin - to create oscillation\n        pow - for ease of a number multiplying with itself\n        step - to create solid circles\n        distance - to base circle off of the center of the screen\n    */\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0; //-1 to 1\n    uv.x*=iResolution.x / iResolution.y; // aspect ratio\n    \n    //Math!\n    \n    //red dot\n    vec2 cenR = vec2(sin(iTime*hSpeed) * betterT,vSpeed*(q)+underPos);//causes it to oscillate and rise\n    //red circle drawing\n    float r = distance(uv, cenR);\n    r = step(0.1, r);\n    \n    //blue dot\n    vec2 cenB = vec2(-sin(iTime*hSpeed) * betterT,vSpeed*(q)+underPos);//causes it to oscillate and rise but negative\n    //blue circle drawing\n    float b = distance(uv, cenB);\n    b = step(0.1, b);\n    \n    //gojo\n    vec2 cenP = vec2(0,-vSpeed*(q)*1.5+5.0);//causes it to oscillate and rise but negative\n    //PURPLE\n    cenP += vec2(cos(iTime*100.0)*0.1,sin(iTime*100.0)*0.1);//fast small rotate\n    float p = distance(uv, cenP);\n    p = smoothstep(0.0, pow(0.5,sin(betterT)*5.0), p);//make purple shrink\n    \n    //white effects\n    vec2 cenW = vec2(cos(iTime*iTime) * betterT,sin(iTime*iTime)* betterT);//fast spin   \n    cenW += vec2(0,0);//no rotate\n            float w = distance(uv, cenW);\n            w = smoothstep(0.0, 0.25, w);//white glow\n    \n    // Output to screen\n    vec3 col = vec3(1.0);//bg color\n    \n    if (t>=0.5 && q >= 5.0){//so this only happens on the second loop with the pruple coming down\n        \n        col = vec3(0.0, 0.0, 0.0);//yowaimobg\n            //effects\n                col = mix(vec3(1.0, 1.0, 1.0), col, w);//these 3 just look cool\n                col = mix(vec3(1.0, 1.0, 1.0), col, w);\n                col = mix(vec3(1.0, 1.0, 1.0), col, w);\n                p = step(0.0, p);//make purple shrink\n        }\n    \n    col = mix(vec3(1.0, 0.0, 0.0), col, b);//blue\n    col = mix(vec3(0.0, 0.0, 1.0), col, r);//red\n    col = mix(vec3(0.65, 0.0, 1.0), col, p);//yowaimo\n    fragColor = vec4(col, 1.0);//yippee!\n}","name":"Image","description":"","type":"image"}]}