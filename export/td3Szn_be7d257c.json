{"ver":"0.1","info":{"id":"td3Szn","date":"1571287384","viewed":143,"name":"Game of Life zooming","username":"matthen","description":"adapted from https://www.shadertoy.com/view/XstGRf by inigo quilez ","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["2d","conway","automaton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// modified from https://www.shadertoy.com/view/XstGRf - Created by inigo quilez - iq/2016\n\n\nfloat getCell(in vec2 p) {\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    ivec2 pi = ivec2(p);\n    pi = (pi + r) % r;    \n    return texelFetch(iChannel0, pi, 0).x;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)  {\n    vec2 uv = fragCoord -.5 * iResolution.xy;\n    vec3 col;\n    \n    uv /= 15. * (.5 + .4 * sin(iTime));\n    \n    uv += 4. * iTime;\n    \n    float cell = getCell(uv);\n    \n    float r = length(fract(uv) - 0.5);\n    \n    cell *= smoothstep(0.5, 0.7, 1. - r);\n    cell *= .8 + .1 * sin(6.28 * float(iFrame) / 10.);\n    \n    col += cell;\n    \n    fragColor = vec4(col, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// modified from https://www.shadertoy.com/view/XstGRf - Created by inigo quilez - iq/2016\n\nint getCell(in ivec2 p) {\n    // do wrapping\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    \n    // fetch texel\n    return (texelFetch(iChannel0, p, 0 ).x > 0.5 ) ? 1 : 0;\n}\n\nfloat hash(vec2 v) {\n    return fract(\n        sin(196.6 * v.x + 723.3 * v.y) * 128.921 + 238.6 * v.x\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 px = ivec2( fragCoord );\n    \n    int thisCell = getCell(px);\n    \n    if (iFrame % 10 != 0) {\n        fragColor = vec4(thisCell, 0., 0., 0.);\n        return;\n    }\n    \n    ivec3 c = ivec3(1, -1, 0);\n\tint numNeighbours =   (\n        getCell(px+c.yy) + getCell(px+c.zy) + getCell(px+c.xy)\n      + getCell(px+c.yz)\t\t\t\t    + getCell(px+c.xz)\n      + getCell(px+c.yx) + getCell(px+c.zx) + getCell(px+c.xx)\n    );\n\n\n    float newCell = (\n        ((numNeighbours == 2) && (thisCell == 1)) || (numNeighbours == 3)\n    ) ? 1.0 : 0.0;\n    \n    \n    if(iFrame == 0) {\n        newCell = step(0.8, hash(fragCoord.xy)); \t   \n    }\n\t\n\tfragColor = vec4(newCell, 0., 0., 0.);\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}