{"ver":"0.1","info":{"id":"4tdGR7","date":"1468474183","viewed":227,"name":"nVortices","username":"akohdr","description":"First attempt creating multiple vortices (currently independent with naive blending)\nThree vortices twist the RGB fields and move together over time.\nMouse split screen shows procedural dot field (left) and noise texture lookup (right)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","vortex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Andrew Wild - akohdr/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n#define T (iTime/3.)\n#define R iResolution.xy\n\n#define O clamp(99.-15.*T,.1,99.)\n#define V(a) (vec2(-.8, .8)+a)\n#define PI2_3 (6.28/3.)\n\n#define dotGrid(p,g,r) vec4(1.-length(mod(p,g)-1.5*r)/r)\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n#define ROT_VORTICES\n\nfloat twist(vec2 c, vec2 p, float a)\n{\n//\t    p += sin(a*99.*T) *1./T*3.;\t\t\t\t\t// jiggle\n        vec2 q = p+p-R;\t\t\t\t\t\t\t\t// -R..R\n    \tq -= c;\t\t\t\t\t\t\t\t\t\t// center the twist\n    \n\t    q *= rot(2.*a+T*R.y/length(q));\t\t\t\t// twist (radially decreasing rotation)\n//\t    q *= rot(2.*a+T*R.y/pow(length(q),1./T));\t// dynamic rotation    \n//\t    q *= rot(2.*a+T/pow(length(q),1./T));\t\t// variation dynamic rotation    \n    \n    \treturn\n            p.x<iMouse.x || (p.x<R.x/2.&&iMouse.x<1.) ?\t\n            dotGrid(q, vec2(250),78.+T/15.).x :\t\t// procedural texture (left)\n            texture(iChannel0, q/(R*9.)).x;\t\t// texture noise lookup (right)\n}\n\nvoid mainImage( out vec4 k, in vec2 p )\n{\n    k = vec4(\n#ifdef ROT_VORTICES\n        twist(O*sin(0.*PI2_3 + T+V(.1)), p, .1),\t// vortices centers spiral in\n        twist(O*sin(1.*PI2_3 + T+V(.2)), p, .2),\n        twist(O*sin(2.*PI2_3 + T+V(.3)), p, .3),\n#else\n        twist(vec2( 0, O), p,.1),\t\t\t\t\t// no spiral\n        twist(vec2( O,-O), p,.2),\n        twist(vec2(-O,-O), p,.3),\n#endif\n        1);\n    \n//\tk *= .5+sin(k+2.*T*PI2_3*vec4(0,1,2,0));\t\t// fade through each field\n//\tk = vec4(sin(k*7.));\t\t\t\t\t\t\t// oil like marbling\n//\tk = .8-vec4(dot(k,sin(vec4(.3,.6,.9,0))))/3.;\t// recombines rgb fields to monochrome\n}\n","name":"Image","description":"","type":"image"}]}