{"ver":"0.1","info":{"id":"fl3GDl","date":"1636929477","viewed":204,"name":"Water Wave attempt","username":"Wildric","description":"I think it's I failure, I will improve it later","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","water","shockwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n#define STATIC\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec2[6] centers = vec2[](\n                  vec2(0.5,0.5),\n                  vec2(0.1,0.3),\n                  vec2(0.3,0.1),\n                  vec2(0.4,0.15),\n                  vec2(0.9,0.2),\n                  vec2(0.2,0.2)\n);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    float xMultiplier = iResolution.x/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse.x *= iResolution.x/iResolution.y;\n\n\n    float staticMovPeriod = 20.0;\n    float staticIntensity = 0.1;\n    float disRadius = 0.03;\n    float ringSize = 0.1;\n    float reach = 2.0;\n    int ringNum = 3;\n    float timeBetweenTwoRings = 3.0;\n    float mixValue = 0.05;\n    vec3 finalColor = vec3(170,213,219)/255.0;\n    float spd = .3;\n\n\n\n    vec3 bgTex;\n    vec2 center = vec2(0.5*xMultiplier,0.5);\n    float minRadius = 0.0;\n    float maxRadius = 0.0;\n\n    \n    vec2 staticDistortion = vec2(sin(iTime*2.0*PI/staticMovPeriod));\n    staticDistortion.x *= xMultiplier;\n    \n    \n    //center = mouse;\n    #ifdef STATIC\n    float disPower = staticIntensity*exp(-distance(uv, staticDistortion));\n    uv +=disPower;\n    #endif\n\n\n    \n    for (int i = 0; i<6; i++)\n    {\n              float offset = 0.0;\n              center = centers[i];\n              center.x *=xMultiplier;\n              float j = float(i)/(timeBetweenTwoRings);\n              if (abs(reach*sin(spd*iTime+j+offset))-abs(reach*sin(spd*(iTime-iTimeDelta)+offset+j))>0.0){\n                minRadius = abs(reach*sin(spd*iTime+  j+offset));  //j is time offset\n                }\n                else {\n                minRadius = 0.0;\n                offset = float(offset == 0.0)*(PI/4.0);\n                }\n                maxRadius = (minRadius + ringSize)*(float(minRadius !=0.0));\n\n\n          float dis = distance(uv,center);\n          float current =dis - minRadius; //Doing polynomial interpolation\n          float diff = maxRadius - minRadius;\n          float middle = diff/2.0;\n          float factor = disRadius/(middle*(middle-diff));\n          vec2 direction = (uv-center)/abs(uv-center);\n          direction = vec2(1.0,1.0);\n          uv += direction.x * max(0.0,factor*current*(current-diff))/max(1.0,dis*2.0);\n          if (dis> minRadius && \n              dis< maxRadius)\n          {\n              mixValue = 0.0;\n          }\n    };\n    bgTex = textureLod(iChannel0, uv, 1.0).xyz;\n    //bgTex = mix(bgTex, texture(iChannel1, uv).xyz, 0.5);\n    fragColor = vec4(mix(bgTex,finalColor,mixValue),1.0);\n}","name":"Image","description":"","type":"image"}]}