{"ver":"0.1","info":{"id":"3dXSzM","date":"1550795804","viewed":1622,"name":"Jelly Cubes","username":"cbrpnk","description":"Everyday.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nfloat field(vec3 p)\n{\n    p.x -= 2.;\n    p.y += sin(p.z*.2+iTime)*2.;\n    p.y += cos(p.x*.2-iTime)*2.;\n    p.z += iTime;\n    p.xz = mod(p.xz+vec2(2.), 4.)-vec2(2.);\n    vec3 bp = abs(p) - 1.;\n    return min(max(max(bp.x, bp.y), bp.z), p.y+.9);\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    for(int i=0; i<228; ++i) {\n    \tfloat d = field(ro+rd*t);\n        if(d < .0001 || d > 200.) break;\n        t += d*.5;\n    }\n    return t;\n}\n\nvec3 getNormal(vec3 p)\n{\n    vec2 eps = vec2(3.*pow(length(p), .001), 0.);\n    return normalize(vec3(\n    \tfield(p+eps.xyy) - field(p-eps.xyy),\n        field(p+eps.yxy) - field(p-eps.yxy),\n        field(p+eps.yyx) - field(p-eps.yyx)\n    ));\n}\n\nfloat getSss(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    for(float i=0.; i<2.; i+=.1) {\n    \tt += field(ro+rd*i);\n    }\n    return clamp(exp(t*.1), 0., 1.);\n}\n\nfloat getAo(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    ro += rd*.002;\n    int i;\n    for(i=0; i<64; ++i) {\n    \tfloat d = field(ro+rd*t);\n        if(d < .001 || d > 100.) break;\n        t += d;\n    }\n    return float(i);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n\n    vec3 cam = vec3(0, 2, 6);\n    vec3 dir = normalize(vec3(uv, -1));\n    dir.yz *= rot(.2);\n    cam.z -= iTime*5.;\n    dir.xz *= rot(iTime*.1);\n    float d = march(cam, dir);\n    vec3 col = vec3(0.);\n    if(abs(uv.y) < .85) {\n        col = vec3(.2, .06, .1) * uv.y+.25;\n\n        if(d < 100.) {\n            vec3 p = cam+dir*d;\n            vec3 normal = getNormal(p);\n            col += vec3(.5, .2, .2) * (pow(1.-max(0., dot(normal, -dir)), .6));\n            col = vec3(1.)-pow(col, vec3(.1));\n            float ss = getSss(p, dir);\n            col += .2*vec3(pow(ss, .5));\n            float ao = getAo(p, normal);\n            col *= vec3(1.-ao/428.);\n            col += .5*vec3(.3, .2, .4) * (pow(max(0., dot(normal, normalize(vec3(-2., 2., 2.)))), 2.));\n            col += .5*vec3(1., .1, .3) * (pow(max(0., dot(normal, normalize(vec3(-2., 2., -2.)))), 2.));\n            col = mix(col, vec3(.27, .24, .25), d/100.);\n        }\n        col = pow(col, vec3(2));\n    }\n\n    // Output to screen\n    col *= 1.-length(uv)*.4;\n    fragColor = vec4(pow(col, vec3(1./2.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}