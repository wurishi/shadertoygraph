{"ver":"0.1","info":{"id":"tlXXRs","date":"1563898607","viewed":103,"name":"Rotating Tetrahedron ","username":"96logda","description":"A rotating tetrahedron.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","tetrahedron","pyramid","primitive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright (c) 2019-07-23 by Angelo Logahd\n//Portfolio: https://angelologahd.wixsite.com/portfolio\n//My Original version: http://glslsandbox.com/e#56328.1\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\nmat2 rotate(float angle)\n{\n    return mat2(cos(angle + vec4(0.0, 33.0, 11.0, 0.0)));\n}\n\nvec3 hsv(float hue, float saturation, float value)\n{\n    vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(hue) + t.xyz) * 6.0 - vec3(t.w));\n    return value * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), saturation);\n}\n\nfloat plane(vec3 p, vec3 orgin, vec3 normal) \n{\n\treturn dot(p - orgin, normal);\n}\n\nfloat tetrahedron(vec3 p, float scale) \n{\n    float a = plane(p, vec3( scale,  scale,  scale), vec3(-1.0,  1.0,  1.0));\n\tfloat b = plane(p, vec3( scale, -scale, -scale), vec3( 1.0, -1.0,  1.0));\n\tfloat c = plane(p, vec3(-scale,  scale, -scale), vec3( 1.0,  1.0, -1.0));\n\tfloat d = plane(p, vec3(-scale, -scale,  scale), vec3(-1.0, -1.0, -1.0));\n\treturn max(max(a, b), max(c, d));\n}\n\nfloat map(vec3 p) \n{\n    p.xy *= rotate(iTime * 0.6);\n\tp.xz *= rotate(iTime * 0.6);\n    return tetrahedron(p, 0.5);\t\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\t\n\tvec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / min(iResolution.x, iResolution.y);\n\t\n\tvec3 color = vec3(0.0);\n    \n\tvec3 ro = vec3(uv, -1.0);\n\tvec3 rd = vec3(0,0, 0.5);\n\t\n\tfloat t = 0.0;\n\tfor (int i = 0; i < 35; ++i) \n\t{\n\t    vec3 p = ro + rd * t;\n\t    float d = map(p);\n\t    t += d;\n\t    color += 1.0 / t;\n\t    color *= hsv(uv.x * 10.0, 0.5, 1.0);\n\t    color *= hsv(uv.y * 10.0, 0.5, 1.0);\n\t}\n\t\n\tif (uv.y > 0.0)\n\t{\n\t    color *= 0.5;\n\t}\n\telse\n\t{\n\t    color += vec3(0.0, 0.0, 0.1);\n\t}\n    \n\tfragColor = vec4(pow(color, vec3(0.4545)), 1.0);\n}","name":"Image","description":"","type":"image"}]}