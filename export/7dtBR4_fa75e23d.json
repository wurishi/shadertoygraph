{"ver":"0.1","info":{"id":"7dtBR4","date":"1656155635","viewed":95,"name":"A cube","username":"Markitok","description":"Is a cube","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 res_inv = vec2(1.0/800.0, 1.0/450.0);\n\nmat2 rotMat(float rot) {\n    return mat2(cos(rot), -sin(rot),\n                sin(rot), cos(rot));\n}\n\nfloat line(vec2 p1, vec2 p2, vec2 frag_pos, float width) {\n    vec2 line_track = p2 - p1;\n    vec2 hip = frag_pos - p1;\n    float proj = clamp(dot(hip, line_track) / dot(line_track, line_track), 0.0, 1.0);\n    vec2 perp_pos = p1 + line_track * proj;\n    float line_distance = length(line_track);\n    float semi_line =  step(0.0, sin(length(line_track * proj) * 9.0 / line_distance));\n    \n    return (1.0 - step(width * res_inv.x, distance(perp_pos, frag_pos))) * semi_line;\n}\n\nvoid transformCube(in vec3 cube[8], out vec3 transformed[8]) {\n    for(int i = 0; i < 8; ++i) {\n    \n        cube[i].xz *= rotMat(iTime);\n        cube[i].xy *= rotMat(iTime * 0.5);\n        \n        cube[i].xy /= cube[i].z -4.0;\n        transformed[i] = cube[i] * 250.0 + vec3(400.0, 225.0, 1.0);\n        transformed[i].xy *= res_inv;\n        \n    }\n}\n\nfloat cubeCalc(in vec3 cube[8], vec2 frag_pos) {\n    float is_cube = 0.0;\n    \n    for(int i = 0; i < 4; ++i) {\n        int next_index = (i+1)*int(i+1<4);\n        is_cube += line(cube[i].xy, cube[next_index].xy, frag_pos, 3.0);\n        is_cube += line(cube[i].xy, cube[i + 4].xy, frag_pos, 3.0);\n        is_cube += line(cube[i + 4].xy, cube[next_index + 4].xy, frag_pos, 3.0);\n    }\n    \n    return min(is_cube, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec3 cube[8] = vec3[8](vec3(1.0, 1.0, 1.0),\n                           vec3(1.0, -1.0, 1.0),\n                           vec3(-1.0, -1.0, 1.0),\n                           vec3(-1.0, 1.0, 1.0),\n                           vec3(1.0, 1.0, -1.0),\n                           vec3(1.0, -1.0, -1.0),\n                           vec3(-1.0, -1.0, -1.0),\n                           vec3(-1.0, 1.0, -1.0));\n    vec3 transformed[8];\n                                 \n    transformCube(cube, transformed);\n    float is_cube = cubeCalc(transformed, fragCoord.xy * res_inv);\n    \n    vec3 final_color = vec3(1.0 - is_cube);\n    \n    fragColor = vec4(final_color,1.0);\n}","name":"Image","description":"","type":"image"}]}