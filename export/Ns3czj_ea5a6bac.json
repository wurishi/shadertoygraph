{"ver":"0.1","info":{"id":"Ns3czj","date":"1653685554","viewed":109,"name":"Moire tile study","username":"ChunderFPV","description":"A study in finding the length between tiling moire patterns.\nMouse Y to zoom.  G key toggles grid.\nUpdated: Jan 7 2023","likes":2,"published":1,"flags":16,"usePreview":0,"tags":["grid","math","moire","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define T iTime\n#define KT(i) texelFetch(iChannel0, ivec2(i, 2), 0).x\n\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    vec2 m = iMouse.xy/R; // mouse coords\n    float s = sqrt(R.y)/1.2, // scale\n          z = 1./(1.-m.y); // zoom from mouse y\n    vec2 uv = (XY-.5*R)/R.y*s*z, // screen coords\n         fw = fwidth(uv); // pixel size\n    vec3 c = vec3(0); // background color\n    \n    if (KT(71) < 1.) // g key toggle\n    {\n        vec2 g = abs(fract(uv+.5)-.5)/fw; // grid\n        c += max(0., 1.-min(g.x, g.y))*.2; // lines\n        c += max(0., 1.-max(g.x, g.y)/2.)*.4; // points\n    }\n    \n    float b = 0.75, // brightness\n          x = uv.x, \n          y = uv.y;\n    \n    c.r += fract( (x*x+y*y)-T )*b; // squared sum\n    \n    float rp = R.y/z/s, // unit circle radius in pixels\n          dt = rp/2.; // distance to next tile\n    c.rg += max(0., 1.-length(uv)*5.)*2.; // point at 0\n    c.rg += max(0., 1.-length(uv-vec2(dt, 0))*5.)*2.; // point at tile\n    if (x > 0. && x < dt)\n        c.rg += max(vec2(0.), 1.-abs(uv.y)/fw/2.)*b; // line to next tile\n    \n    RGBA = vec4(c*c*1.5, 1.);\n}","name":"Image","description":"","type":"image"}]}