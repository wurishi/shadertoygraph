{"ver":"0.1","info":{"id":"mlsSzs","date":"1675262075","viewed":237,"name":"Log spirals","username":"ChunderFPV","description":"mouse rotates","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["3d","spiral","aa","logarithmic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(a) (sin(vec3(0,1.047,2.094)+vec3(a*6.2832))*.5+.5) // color\n#define RT(a) mat2(cos(m.a*1.5708+vec4(0,-1.5708,1.5708,0))) // rotate\nvoid mainImage(out vec4 RGBA, in vec2 XY)\n{\n    vec3  c = vec3(0), u, v;\n    vec2  R = iResolution.xy,\n          m = (iMouse.xy/R*4.)-2.,\n          o;\n    float p = 2., // aa pass (1=off)\n          t = (iTime-10.)/5.,\n          a;\n    if (iMouse.z < 1.) m = vec2(sin(t/2.)*.2, sin(t)*.1); // rotate with time\n    mat2  pitch = RT(y),\n          yaw   = RT(x);\n    for (int k = 0; k < int(p*p); k++) // aa loop\n    {\n        o = vec2(k%2, k/2)/p; // aa offset\n        u = normalize(vec3((XY-.5*R+o)/R.y, 1));\n        u.yz *= pitch;\n        u.xz *= yaw;\n        a = atan(u.y, u.x)/2.;\n        u.xy = tan(log(length(u.xy)) + vec2(a*2., -a*5.)); // form spirals\n        v = min(1.-abs(sin((u-t)*3.1416)), 1./abs(u));     // gridify\n        c += H(u.x-t) * min(v.x, v.y) / min(max(v.x, v.y), 1.-v.x)*.5; // colors\n    }\n    c /= p*p; // fix brightness after aa\n    RGBA = vec4(c+c*c, 1.);\n}","name":"Image","description":"","type":"image"}]}