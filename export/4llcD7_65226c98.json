{"ver":"0.1","info":{"id":"4llcD7","date":"1505105771","viewed":97,"name":"Checkerboard_Shader","username":"matt_aquino0802","description":"A shader that creates a black-and-white checkerboard pattern. The board size can be changed by manipulating the cols and rows variables at the top. Colors can be changed as well by changing the RGB values at the top, if desired.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Checkerboard Shader\n\n// variables for tile sizes\nfloat cols = 10.0;\nfloat rows = 5.0;\n\n// tile colors\nvec4 color1 = vec4(0.0, 0.0, 0.0, 1.0); \nvec4 color2 = vec4(1.0, 1.0, 1.0, 1.0); \n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv =  fragCoord.xy / iResolution.xy;\n        \n\tvec2 box =  vec2 (mod(uv.x * cols, 2.0), mod(uv.y * rows, 2.0)); // create boxes\n    \n    // determine box color\n    if (box.x > 1.0 && box.y > 1.0 || box.x < 1.0 && box.y < 1.0)\n        fragColor = color1;\n    \n    else\n        fragColor = color2;\n}\n","name":"Image","description":"","type":"image"}]}