{"ver":"0.1","info":{"id":"lcByWh","date":"1722224591","viewed":21,"name":"gray hatches","username":"mikegao45","description":"goyard, hex","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hex","hexagonal","goyard"],"hasliked":0,"parentid":"MfSyWh","parentname":"GOYARD BOYZ"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\n#define PI 3.14159265359\n\nfloat hash(vec2 p) {\n    p = fract(p * vec2(123.34, 456.21));\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\nfloat noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    f = f * f * (3.0 - 2.0 * f);\n    return mix(\n        mix(hash(i), hash(i + vec2(1.0, 0.0)), f.x),\n        mix(hash(i + vec2(0.0, 1.0)), hash(i + vec2(1.0, 1.0)), f.x),\n        f.y\n    );\n}\n\nfloat circuit(vec2 uv) {\n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    \n    float n = hash(id);\n    float thickness = 0.1 + 0.2 * n;\n    \n    float line = smoothstep(thickness, thickness * 0.5, abs(gv.x)) +\n                 smoothstep(thickness, thickness * 0.5, abs(gv.y));\n    return clamp(line, 0.0, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float time = iTime * 0.3;\n    \n    // Base circuit pattern\n    float pattern = circuit(uv * 3.0) * 0.5;\n    \n    // Add flowing data streams\n    for (float i = 0.0; i < 3.0; i++) {\n        float t = time * (1.0 + i * 0.3);\n        vec2 offset = vec2(sin(t * 0.8), cos(t * 0.6)) * 0.2;\n        pattern += circuit((uv + offset) * (5.0 + i * 2.0)) * 0.3;\n    }\n    \n    // Add pulsing nodes\n    for (float i = 0.0; i < 5.0; i++) {\n        vec2 nodePos = vec2(\n            sin(time * (0.5 + i * 0.1)) * 0.5,\n            cos(time * (0.4 + i * 0.15)) * 0.5\n        );\n        float node = length(uv - nodePos);\n        node = smoothstep(0.1, 0.05, node);\n        node *= 0.3 + 0.2 * sin(time * 3.0 + i);\n        pattern += node * 0.5;\n    }\n    \n    // Add subtle background noise\n    pattern += (noise(uv * 10.0 + time) - 0.5) * 0.15;\n    \n    // Create softer glowing effect\n    pattern = smoothstep(0.2, 0.8, pattern);\n    \n    // Add scanning line effect\n    float scan = smoothstep(0.0, 0.7, abs(fract(uv.y * 5.0 - time * 0.5) - 0.5));\n    pattern = mix(pattern, pattern * 1.1, scan);\n    \n    // Adjust contrast and brightness\n    pattern = pattern * 0.5 + 0.15;\n    \n    // Add vignette effect\n    float vignette = 1.0 - smoothstep(0.5, 1.5, length(uv));\n    pattern *= mix(0.8, 1.0, vignette);\n    \n    // Output\n    fragColor = vec4(vec3(pattern), 1.0);\n}","name":"Image","description":"","type":"image"}]}