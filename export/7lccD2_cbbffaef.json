{"ver":"0.1","info":{"id":"7lccD2","date":"1660562620","viewed":100,"name":"interactive_hsv","username":"beetom","description":"color picker of interactive hsv pad","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hsv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c) // http://stackoverflow.com/a/17897228/605869\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat sdf_point(vec2 pos, vec2 uv)\n{\n    return length(pos - uv);\n}\n\nfloat Hue_2_RGB(float p,float q,float tc)\n{\n   float Val;\n    \n   if ( tc < 0.0 )\n   {       \n       tc += 1.0;\n   }\n   \n   if( tc > 1.0 ) \n   {\n       tc = tc - 1.0;\n   }\n   \n   if ( ( 6.0 * tc ) < 1.0 ) \n   {\n       Val =  ( p + ( q - p ) * 6.0 * tc );\n       return (Val);\n   }\n   \n   if ( ( 2.0 * tc ) < 1.0 ) \n   {\n       return ( q );\n   }\n   \n   if ( ( 3.0 * tc ) < 2.0 ) \n   {\n       Val =  ( p + ( q - p ) * (((2.0/3.0)) - tc ) * 6.0 );\n       return (Val);\n   }\n   \n   return p;\n}\n\nvec3 HSLtoRGB(float h, float s, float l)\n{\n    float Hk;\n    float S;\n    float L;\n    \n    float p;\n    float q;\n    float r,g,b;\n    \n    Hk = (h / 360.0);        // h must be [0-360]\n    S = ((s) / 1.0);           // s must be [1-100]\n    L = ((l) / 1.0);           // l must be [1-100]\n    \n    if (S == 0.0)\n    {\n        r = L;\n        g = L;\n        b = L; \n    }\n    else\n    {\n        if ( L < 0.5 ) \n        {\n            q = L * ( 1.0 + S );\n        }\n        else  \n        {\n            q = ( L + S ) - ( L * S );\n        }\n               \n        p = 2.0 * L - q;\n        \n        r = Hue_2_RGB( p, q, Hk + ( 1.0 / 3.0 ) );\n        g = Hue_2_RGB( p, q, Hk );\n        b = Hue_2_RGB( p, q, Hk - ( 1.0 / 3.0 ) );\n    }\n    return vec3(r,g,b);\n}\n\nvec3 HSVtoRGB(float h, float s, float v)\n{\n    int i;\n    float f,a,b,c;\n    float rr,gg,bb;\n    h = mod(h, 360.0);\n    \n    \n    if (h >= 360.0)\n    {\n        h = 0.0;\n    }\n    \n    if (s == 0.0)\n    {\n        rr = v;\n        gg = v;\n        bb = v;\n    }\n    else\n    {\n        i = int(h/60.0);    // 取整数\n        h = (h / 60.0);        // 值带小数    \n        f = h - float(i);\n        \n        a = v * (1.0 - s);\n        b = v * (1.0- (s * f));\n        c = v * (1.0-(s*(1.0 - f)));\n        \n        if(i ==0)\n        {\n            rr = (v);\n            gg = (c);\n            bb = (a);\n        }\n        else if(i == 1)\n        {\n            rr = (b);\n            gg = (v);\n            bb = (a);\n        }\n        else if(i == 2)\n        {\n            rr = (a);\n            gg = (v);\n            bb = (c);\n        }\n        else if(i == 3)\n        {\n            rr = (a);\n            gg = (b);\n            bb = (v);\n        }\n        else if(i == 4)\n        {\n            rr = (c);\n            gg = (a);\n            bb =(v);\n        }\n        else if(i == 5)\n        {\n            rr = (v);\n            gg = (a);\n            bb = (b);\n        }\n        else\n        {\n            rr = 0.0;\n            gg = 0.0;\n            bb = 0.0;\n        }\n            \n    }\n    return vec3(rr,gg,bb);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n\tuv = uv*2.0-vec2(1,1);\n    vec2 mouseUv = iMouse.xy / iResolution.yy;\n    mouseUv = mouseUv * 2.0 - vec2(1.0, 1.0);\n\tfloat a = atan(uv.x,uv.y);\n\ta =(a / 3.14159*0.5)+1.0 ;\n\tfloat d = length(uv);\n\tvec3 c = hsv2rgb(vec3(a,d,1.0));\n    \n    float a1 = atan(mouseUv.x, mouseUv.y);\n    //a1 =(a1 / 3.14159*0.5)+1.0 ;\n    a1 = a1 * 180.0 / (3.14159);\n    float d1 = length(mouseUv);\n    //vec3 c1 = hsv2rgb(vec3(a1,d1,1.0));\n    //vec3 c1 = HSLtoRGB(a1, d1, 0.7);\n    vec3 c1 = HSVtoRGB(a1, d1, 1.0);\n    \n    vec4 outColor = vec4(0.0, 0.0, 0.0, 0.0);\n    \n\tif(uv.x > 1.5) // remove this if you don't want the 'V' component gradient\n\t{\n\t\tfloat b = (uv.y+1.0)/2.0;\n\t\toutColor += vec4(b,b,b,1.0);\n\t}\n\telse if(d > 1.0)\n\t{\n        outColor += vec4(c1, 1.0);\n\t\t//discard;\n\t}\n\telse\n\t{\n\t\toutColor += vec4(c,1.0);\n\t}\n    \n    if(sdf_point(uv, mouseUv) < 0.1)\n    {\n        if(sdf_point(uv, mouseUv) > 0.095)\n        {\n            outColor += vec4(-3, -3 , -3, 1.0);\n        }\n        else \n        {\n            outColor = vec4(c1, 1.0);\n        }\n        \n    }\n    \n    fragColor = outColor;\n}","name":"Image","description":"","type":"image"}]}