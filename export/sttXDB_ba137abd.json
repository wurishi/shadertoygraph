{"ver":"0.1","info":{"id":"sttXDB","date":"1639745993","viewed":111,"name":"Mandelbrot set plotting","username":"Ciubix8513","description":"Just a quick Mandelbrot set shader (thx wikipedia)\n\nUpdate: \nI turned this into a bigger program, with mouse movement, other fractals and an option to change the colors\n https://github.com/Ciubix8513/Fractals","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 getCol(float coord,int ColNum) //From my other shader https://www.shadertoy.com/view/fdScRt\n{ \n    vec4[] cols =vec4[] (vec4(85,205,252,255),vec4(247,168,184,255),vec4(255),vec4(247,168,184,255),vec4(85,205,252,255));       \n    \n    int arrLength = 5;\n    \n    if(ColNum == 1) \n        return cols[0];\n        \n    float cstep1 = 1.0 / float(ColNum - 1);//Num of subgradients = num of colors - 1\n    \n    for(int i = 1; i < ColNum; i++)\n    {\n        if(coord < cstep1 * float(i))\n        return mix(cols[int(mod(float(i-1),float(arrLength)))],cols[int(mod(float(i),float(arrLength)))], coord / cstep1 - float (i - 1));\n    }    \n    return vec4(coord);\n}\n\n\n\n\nvec4 GetColor(vec2 uv,float i,float maxI)\n{\n   if(i == maxI)\n       return vec4(0);    \n    \n    return getCol((maxI * .15 + i)  / maxI,200) / 255.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 MinVals = vec2(-1.0,-0.5); \n    vec2 uv = (fragCoord / iResolution.y);//Get ss coords\n    uv = (uv + MinVals)  / 0.42; //Offset and scale ss coords     \n    \n    vec2 coords = vec2(0);    \n    vec2 coords2 = vec2(0);\n    int iter = 0;\n    int maxIter = 1000;\n    //Thank you wikipedia\n    while(dot(coords,coords)<= 4.0 && iter < maxIter)\n    {\n        coords.y = 2.0* coords.x * coords.y + uv.y;\n        coords.x = coords2.x - coords2.y + uv.x;\n        coords2 = coords * coords;\n        iter++;\n    }    \n    // Output to screen\n    fragColor = GetColor(uv,float(iter) , float(maxIter));\n}","name":"Image","description":"","type":"image"}]}