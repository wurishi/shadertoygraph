{"ver":"0.1","info":{"id":"slcXRB","date":"1639318423","viewed":72,"name":"sinX","username":"thodd_riction","description":"exercise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Band(float t, float start, float end, float blur)\n{\n\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    \n    return step1*step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur)\n{\n    \n    float band1 = Band(uv.x, left, right, blur); \n    float band2 = Band(uv.y, bottom, top, blur);\n    \n    return band1*band2;\n}\n\nfloat remap01(float a, float b, float t){ // si t = a, a = 0; la distance entre a et b =1; de a à b = de  à ;\n    return (t-a) / (b-a);                 // t-a = 0, (t=a) = (a-a = 0);\n                                          // si t = 0, t-a/t-a = un chiffre divisé par lui même = 1\n}\n\nfloat remap(float a, float b, float c, float d, float t){\n    return remap01(a,b,t) * (d-c) +c;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv.x = abs(uv.x);\n    float t = iTime;\n    float x = uv.x;\n    float m = cos(t+x*1.)*0.1;\n    float y = uv.y+m;\n    float d = length(uv);\n    float c = 0.;\n    float blur = remap(0., .1, .01, .35, x);\n    blur *= blur;\n    c = Rect(vec2(x,y), 0., 1., -.02, .02, blur);\n    float a = Rect(vec2(x,y+.2), 0., 1., -.02, .02, blur);\n    float b = Rect(vec2(x,y-.2), 0., 1., -.02, .02, blur);\n\n    vec3 col = vec3(1., 0., 0.)*(c+a+b);\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}