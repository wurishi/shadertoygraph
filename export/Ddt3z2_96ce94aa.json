{"ver":"0.1","info":{"id":"Ddt3z2","date":"1677547992","viewed":427,"name":"Cubic","username":"Xor","description":"Experimenting with raymarching AO tonight","likes":26,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","sdf","shading","ao"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    Experimenting with raymarching AO tonight\n\n*/\n#define EPS .001\n#define MAX 300.\n\nmat2 rotate(float r)\n{\n    return mat2(cos(r),-sin(r),sin(r),cos(r));\n}\nfloat dist(vec3 p)\n{\n    float d = 1e4;\n    \n    for(float i  = 1.0;i<4.0;i++)\n    {\n        float r = exp(i*0.5);\n        p.xz *= mat2(-.6,-.8,.8,-.6);\n        p.zy *= mat2(.6,-.8,.8,.6);\n        vec3 m = mod(p+iTime*vec3(.1,0,0),r*2.)-r;\n        d = min(d,length(max(abs(m)-r*.3,0.0)));\n    }\n    return d;\n}\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(2,-2)*EPS;\n    return normalize(dist(p+e.xxy)*e.xxy+dist(p+e.xyx)*e.xyx+\n    dist(p+e.yxx)*e.yxx+dist(p+e.y)*e.y);\n}\nfloat ao(vec3 p, vec3 n)\n{\n    float w = 0.0;\n    float s = 1.0;\n    for(float d = EPS*40.; d<2.; d*=2.)\n    {\n        s *= clamp(dist(p+n*d)/d*0.5+0.5, 0.0, 1.0);\n        w++;\n    }\n    \n    return pow(s,2.0/w);\n}\nvec3 color(vec3 p)\n{\n    vec3 n = normal(p);\n    return vec3(ao(p,n));\n}\nvec4 march(vec3 p,vec3 r)\n{\n    vec4 m = vec4(p+r,1);\n    for(int i = 0;i<200;i++)\n    {\n        float s = dist(m.xyz);\n        m += vec4(r,1)*s;\n        \n        if (m.w>MAX) return m;\n    }\n    return m;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 r = normalize(vec3(fragCoord-.5*iResolution.xy,iResolution.y));\n    r.yz *= rotate(0.3);\n    r.xz *= rotate(iTime*0.1);\n    \n    vec4 m = march(vec3(0,0,0),r);\n    vec3 c = color(m.xyz);\n    c *= smoothstep(MAX,0.,m.w);\n    \n    fragColor = vec4(c,1);\n}","name":"Image","description":"","type":"image"}]}