{"ver":"0.1","info":{"id":"WsyyRz","date":"1602068473","viewed":48,"name":"Voronoi Sample Test 4","username":"beherca","description":"Voronoi Sample Test 4","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.youtube.com/watch?v=l-07BXzNdPw&t=129s\n\nvec2 N22(vec2 p){\n    vec3 a = fract(p.xyx * vec3(123.34,234.34,345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv *=  20.* sin(0.1*iTime);\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    vec2 cid = vec2(0);\n    float minDist = 100.;\n    \n    for(float y=-1.;y<=1.;y++){\n        for(float x=-1.;x<=1.;x++){\n\t\t\tvec2 offs = vec2(x, y);\n            vec2 nv = N22(id+offs);\n            vec2 p = offs + sin(nv * iTime) * .5;\n            float d = length(gv -p);\n            if(d < minDist){\n                minDist = d;\n                cid = id+offs;\n            }\n        }\n    }\n    \n    \n    vec3 col = vec3(1.- minDist/0.37, 1. - minDist/0.79, 1. - minDist/0.94);\n    // Output to screen\n    fragColor = vec4(col ,1.0);\n}","name":"Image","description":"","type":"image"}]}