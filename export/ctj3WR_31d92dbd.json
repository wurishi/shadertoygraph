{"ver":"0.1","info":{"id":"ctj3WR","date":"1673131913","viewed":117,"name":"Antipod - MAGFest #01","username":"Flopine","description":"One of the piece I made for ThronoCrigger's set at MAGFest 2023! ","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation","hexagon","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n\n#define hr vec2(sqrt(3.), 1.)\n#define hex(u) max(abs(u.y), dot(abs(u), normalize(hr)))\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a), cos(a))\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.02,fwidth(val-thre)))\n#define noise(u) textureLod(iChannel0, u, 0.).x\n#define anim(of,st,po) ( (TAU/st)*(floor(iTime+of)+pow(fract(iTime+of), po)) )\n\nfloat moda (vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = atan(p.y,p.x)+per*.5;\n    float c = floor(a/per);\n    a = mod(a-per*.5,per)-per*.5;\n    if (abs(c) >= (rep*.5)) c = abs(c);\n    p = vec2(cos(a), sin(a))*length(p);\n    return c;\n}\n\nvec4 hexgrid (vec2 uv)\n{\n    vec2 ga=mod(uv, hr)-hr*.5, gb=mod(uv-hr*.5, hr)-hr*.5,\n    guv= dot(ga,ga)<dot(gb,gb)?ga:gb,\n    gid = uv-guv;\n    \n    return vec4(guv,gid);\n}\n\nfloat frame (vec2 uv)\n{\n    uv *= rot(anim(0., 4., 20.));\n    uv.y += iTime;\n    \n    vec4 huv = hexgrid(uv);\n    vec2 id = huv.zw;\n    float d, aid, thre, n=noise(id*.2);\n    \n    if(n <= .33) \n    {\n        huv = hexgrid(huv.xy*1.5);\n        thre = sin(length(huv.zw)+anim(.25, 6., 15.));\n        aid = moda(huv.xy, 3.);\n        d = aid*.5+.35;\n        d += AAstep(abs(thre)*.45, hex(huv.xy));\n    }\n    else if (n > .33 && n <= .6)\n    {\n        huv = hexgrid(huv.xy*2.);\n        thre = sin(length(huv.zw)+anim(.5, 6., 15.));\n        aid = moda(huv.xy, 3.);\n        d = aid*.5+.35;\n        d += AAstep(abs(thre)*.45, hex(huv.xy));\n    }\n    else if (n > .6)\n    {\n        aid = moda(huv.xy, 3.);\n        thre = sin(length(huv.zw)+anim(.75, 6., 15.));\n        d = aid*.5+.35;\n        d -= AAstep(abs(thre)*.45, hex(huv.xy));\n    }\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 col = mix(vec3(0.9, .8, 1.), vec3(.99, .65, .8), frame(uv*2.));\n\n    fragColor = vec4(sqrt(col), 1.0);\n}","name":"Image","description":"","type":"image"}]}