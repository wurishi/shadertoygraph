{"ver":"0.1","info":{"id":"WttXzS","date":"1581219341","viewed":90,"name":"Sum&Product duality","username":"DanYeaD","description":"groovy","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 MyFunc (vec3 stuff)\n{\n    mat3 sum = mat3(stuff.x + stuff, stuff.y + stuff, stuff.z + stuff);\n    mat3 product = mat3(stuff.x * stuff, stuff.y * stuff, stuff.z * stuff);\n    vec2 matchNum = vec2(0.0);\n    for(int x = 0; x < 3; x++)\n    {\n\t\tfor(int y = 0; y < 3; y++)\n    \t{\n            float match_s = sum[x][y];\n            float match_p = product[x][y];\n        \tfor(int x1 = 0; x1 < 3; x1++)\n    \t\t{\n            \tfor(int y1 = 0; y1 < 3; y1++)\n    \t\t\t{\n        \t\t\tint myYead = 2;\n                    if (abs(match_s - product[x1][y1]) < 0.1)\n                    {\n                        matchNum.x++;\n                    }\n                    if (abs(match_p - sum[x1][y1]) < 0.1)\n                    {\n                        matchNum.y++;\n                    }\n    }\n    }\n            matchNum--;\n    }\n    }\n    return matchNum * matchNum;\n    \n}\n\nvec3 spectrum(float x) {\n    float pi = 3.14159;\n    x = x * 2.1 - 0.555;\n    vec4 v = vec4(clamp(x, -.6, 0.6), clamp(x, 0.05, 1.05), clamp(x, 0.65, 1.55), clamp(x, 1.16, 1.55));\n    v += vec4(0.0, -0.55, -1.1, -1.35);\n    v *= vec4(0.8, 1.0, 1.1, 2.5);\n    v = (cos(v * v * pi * 4.) * 0.5 + 0.5);\n    v.r += v.a * 0.5;\n    return v.rgb;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    \n    vec2 col = MyFunc(vec3(uv *3.0-0.5,sin(iTime * 1.0 ) * 1.0 + 1.0));\n\n    // Output to screen\n    fragColor = vec4(spectrum(abs(col.x + col.y) * 0.005), 1.0);\n    \n    \n}\n\n    \n","name":"Image","description":"","type":"image"}]}