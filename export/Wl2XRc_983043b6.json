{"ver":"0.1","info":{"id":"Wl2XRc","date":"1566633013","viewed":83,"name":"Mandelbrot Art","username":"96logda","description":"My first fractal art shader to use more than one mandelbrot in the same image.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","painting","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright (c) 2019-08-23 - 2019-08-31 by Angelo Logahd\n//Portfolio: https://angelologahd.wixsite.com/portfolio\n\nconst float mandelbrotZoom = 0.95;\nconst float mandelbrotScale = 0.015;\n\nconst int maxIterations = 255;\n\nvec2 complexZ(const in vec2 z)\n{\n\treturn vec2\n    (\n \t\tz.x * z.x - z.y * z.y,\n \t\tz.x * z.y * 2.0\n\t);\n}\n\nvec3 mandelbrot(vec2 uv, vec2 z, vec2 c, float scale, bool flipX)\n{\n    vec3 col = vec3(0.0);\n    int count = 0;\n\tfor (; count < maxIterations; ++count) \n    {\n        if (!flipX)\n        {\n \t\t\tz = complexZ(z) + c;\n        }\n        else\n        {\n            z = complexZ(z) - c;\n        }\n        \n \t\tif (dot(z, z) > 4.0)\n        {\n            break;\n \t\t}\n    \n        col = texture(iChannel0, uv).rgb;\n        \n        float d = abs(dot(z, vec2(0.05)));\n    \tfloat f = step(d, 1.0);\n        col -= f;\n        \n        col = mix(col, vec3(0.2, 0.2, 0.6), 0.8);\n    }\n    return col * float(count) * scale;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\tuv *= 2.0 / min( iResolution.x, iResolution.y );\n    \n    vec2 c = uv * mandelbrotZoom;\n    vec2 z = vec2(0.0);\n    float scale = mandelbrotScale;\n\n    vec3 fractal1Col = mandelbrot(uv, z, c, scale, false);\n    fractal1Col += mandelbrot(uv, z, c, scale, true) * vec3(1.0, 1.0, 0.0);\n        \n    vec3 backColor = texture(iChannel0, uv).rgb;    \n    vec3 fractalResCol = fractal1Col;   \n    vec3 resCol = mix(backColor, fractalResCol, 0.5);\n    fragColor.rgb = vec3(pow(resCol.rgb, vec3(0.4545)));\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}