{"ver":"0.1","info":{"id":"4dtSzM","date":"1458369517","viewed":641,"name":"permutation map2","username":"FabriceNeyret2","description":"distribution of the 64 values in the permutation map :-(\nHow to use it as a permutation table, then ?\n\nSOLVED after regeneration of the permutation texture :-) ","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["permutations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cf https://en.wikipedia.org/wiki/Ordered_dithering\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\tO-=O; vec2 R = iResolution.xy;\n    for (int j=0; j<8; j++)\n        for (int i=0; i<8; i++) {\n\t        float T = texture(iChannel0,(vec2(i,j)+.5)/8.).x*R.x ;\n            T = floor(T*63./R.x+.5)/64.*R.x ;\n          //T = floor(T/8.)*8.;\n            if (U.x-.5==floor(T)) O++;\n        }\n    U /= R; \n    if (U.y<.5 ) O.r = mod(floor(U*64.).x,2.)*.5;\n    if (U.y<.25) O.b = mod(floor(U*8. ).x,2.)*.5;\n}","name":"Image","description":"","type":"image"}]}