{"ver":"0.1","info":{"id":"lcsGzM","date":"1702934091","viewed":27,"name":"2D Ripple Test (RS)","username":"roey_shap","description":"Test!\nSorta did what I wanted? I guess I actually should've defined it in my head as a 'shockwave'. I'll do that next.\nAlso... deviated very very far from realism, very very quickly.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RED vec3(1.0, 0.0, 0.0)\n#define GREEN vec3(0.0, 1.0, 0.0)\n#define BLUE vec3(0.0, 0.0, 1.0)\n#define WHITE vec3(1.0)\n\n#define PI 3.1415926535\n\nfloat map(float min1, float max1, float value, float min2, float max2)\n{\n    float d2 = max2 - min2;\n    float d1 = max1 - min1;\n    float sizeRatio = d2 / d1;\n\n    return (value * sizeRatio) - (min1 * sizeRatio) + min2;\n}\n\nfloat floorTo(float val, float snap)\n{\n    return floor(val / snap) * snap;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float smallerAxis = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / smallerAxis;\n    \n    vec2 rippleCenter = vec2(0.0, 0.0);\n    float rippleDurationBase = 0.7;\n    float rippleDurationWait = 1.5;\n    float rippleTotalDuration = rippleDurationBase + rippleDurationWait;\n    float frequency = 0.95;\n    float waveOutputFreq = 1.2;\n    \n    vec2 deltaFromCenter = uv - rippleCenter;\n    vec2 dirFromCenter = normalize(deltaFromCenter);\n    \n    float currentRippleTime = iTime - floorTo(iTime, rippleTotalDuration);\n    float remainingRippleTime = rippleTotalDuration - currentRippleTime;\n    float lengthInfluence = map(rippleDurationBase, 0.0, currentRippleTime, 0.7, 0.5) * 1.0;\n    float amplitude = sin(frequency * (((-length(deltaFromCenter) * lengthInfluence) + (currentRippleTime)) * (2.0 * PI * waveOutputFreq) / rippleDurationBase));\n    amplitude *= (0.3 * remainingRippleTime) / (1.0 + (10.0 * lengthInfluence) + (length(deltaFromCenter)));\n    vec2 offsetUV = uv + (dirFromCenter * amplitude);\n    \n    \n    vec3 col = texture(iChannel0, offsetUV).rgb;\n    col = mix(col, vec3(0.0), clamp(amplitude * 8.0, 0.0, 1.0));  //1.0 - currentRippleTime / rippleTotalDuration\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}