{"ver":"0.1","info":{"id":"mlBSzV","date":"1676320724","viewed":120,"name":"animated 4 Color gradient","username":"nobody","description":"simple animated background color gradient","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float SPEED = 0.001;\n\n\n\n\nvec3 startColor = vec3(1.0, 0.0, 0.0);\nvec3 midColor1 = vec3(1.0, 1.0, 1.0);\nvec3 midColor2 = vec3(0.0, 1.0, 0.0);\nvec3 endColor = vec3(1.0, 1.0, 0.0);\n\nvec3 gradient(float t, float time) {\nt = t + time * SPEED; // Bewegung des Farbverlaufs Ã¼ber die Zeit\nt = fract(t); // Normalisierung des Parameters auf den Bereich [0,1]\n\nif (t < 0.25)\nreturn mix(startColor, midColor1, t * 4.0);\nelse if (t < 0.5)\nreturn mix(midColor1, midColor2, (t - 0.25) * 4.0);\nelse if (t < 0.75)\nreturn mix(midColor2, endColor, (t - 0.5) * 4.0);\nelse\nreturn mix(endColor, startColor, (t - 0.75) * 4.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = fragCoord/iResolution.xy;\n\nvec3 color = gradient(uv.x, iTime);\n\nfragColor = vec4(color, 1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}