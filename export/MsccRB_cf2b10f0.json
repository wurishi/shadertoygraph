{"ver":"0.1","info":{"id":"MsccRB","date":"1520268955","viewed":311,"name":"Color gradients","username":"Hedaro","description":"A simple color gradient shader made while learning.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","gradient","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 xy )\n{\n    xy /= iResolution.xy;\n    \n    float factor = 1.0;\n    vec2 start = vec2(1, 1);\n\n    //Linear gradient\n    //start.x = xy.x; //(xy.x) => right; //(1.0 - xy.x) => left;\n    //start.y = 1.0 - xy.y; //(xy.y) => top;   //(1.0 - xy.y) => bottom;\n    //factor = (start.x + start.y) / 2.0;\n\n    //Trigonometric gradient\n    start.x = (1.0 + cos(3.1415*xy.x*4.0)) / 2.0;\n    start.y = (1.0 + sin(3.1415*xy.y*3.0)) / 2.0;\n \tfactor = (start.x * start.y);\n    \n    \n    //vec4 color1 = vec4(1.0,1.0,0.0,1.0) * factor;\n    //vec4 color2 = vec4(0.0,0.0,1.0,1.0) * (1.0 - factor);\n    //vec4 pixelColor = (color1 + color2);\n    vec4 color1 = vec4(1,1,0,1);\n    vec4 color2 = vec4(0,0,1,1);\n    fragColor = mix(color2,color1,factor);\n}","name":"Image","description":"","type":"image"}]}