{"ver":"0.1","info":{"id":"XstXDl","date":"1462182443","viewed":132,"name":"Gradient_001","username":"Harunx9","description":"Gradient test for my game","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GAMMA 1.0 / 2.2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float pixelSeparation = 6.0;\n    \n    fragCoord -= 0.5;\n    \n    vec2 diagxy = mod(fragCoord.x + (vec2(fragCoord.y, -fragCoord.y) * iTime) * 0.1, pixelSeparation);\n    \n    float grad = 1.0; // no gradient\n    grad = uv.y * (pixelSeparation);\n    \n    float diag = clamp(grad - min(diagxy.x, diagxy.y), 0.0, 1.0); // use saturate instead of clamp in hlsl\n    \n    #ifdef GAMMA\n    diag = pow(diag, GAMMA);\n    #endif\n    \n    fragColor = vec4(diag);\n}","name":"Image","description":"","type":"image"}]}