{"ver":"0.1","info":{"id":"7ltGDB","date":"1636674738","viewed":121,"name":"PATARTY instrumental mix","username":"phase","description":"spread the Patarty!","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["amiga","remix","fork","boom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Patarty Remix\" by Lanza. https://www.shadertoy.com/view/3lXGD4\n// Fork of \"Patarty\" by MrsBeanbag. https://shadertoy.com/view/wtXGWr\n// 2019-04-26 12:45:38\n\nfloat random (in vec2 st){\n    // Wrapping the random value to work within\n    // the specified range.\n    st = mod(st, 24.);\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(mix(a, b, u.x), mix(c, d, u.x), u.y);\n}\n\nfloat plasma (in vec2 st) {\n    // Mapping the angle to a similar integer range.\n    float value = 4.*noise(st/6.2831*6.);\n    // Triangle function based smoothstep with derivative \n    // smoothing factor.\n    value = abs(fract(value) - .5)*2. - .5;\n    return smoothstep(0., fwidth(value), value);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float bounce = fract(iTime*1.2)-0.5; //\n    bounce *= bounce;\n\tfloat boomr = pow(cos(bounce), 15.);\n\tfloat boomg = pow(cos(bounce), 25.);\n\tfloat boomb = pow(cos(bounce), 35.);\n\n    vec2 st0 = vec2(.9, .5) - fragCoord.xy/iResolution.y;\n    vec2 st = vec2(length(st0), atan(st0.x, st0.y));\n\n\tvec3 color = vec3((1.- boomg));\n//    color += plasma(vec2(log(st.x) * boomr, st.y + iTime*0.1)*4.0);\n    color.x += plasma(vec2(log(st.x) * boomr, st.y + iTime*0.1)*4.0);\n    color.y += plasma(vec2(log(st.x) * boomg, st.y + iTime*0.1)*4.0);\n    color.z += plasma(vec2(log(st.x) * boomb, st.y + iTime*0.1)*4.0);\n\n\tfragColor = vec4(color*0.5,1.0);\n    return;\n}\n","name":"Image","description":"","type":"image"}]}