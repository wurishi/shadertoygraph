{"ver":"0.1","info":{"id":"llV3R1","date":"1502745936","viewed":188,"name":"Gamma Function","username":"rory618","description":"Based on http://en.cppreference.com/w/c/numeric/complex","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["complex","gamma","library"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I vec2(0,1)\n#define R vec2(1,0)\n#define PI 2.*asin(1.)\n#define E exp(1.)\n\n//cproj\nfloat creal(vec2 z) {\n    return z.x;\n}\nfloat cimag(vec2 z) {\n    return z.y;\n}\nvec2 conj(vec2 z) {\n    return vec2(z.x,-z.y);\n}\nvec2 cprod(vec2 a, vec2 b){\n    return mat2(a,-a.y,a.x) * b;\n}\nvec2 csqr(vec2 a){\n    return cprod(a,a);\n}\nfloat cabs(vec2 z) {\n    return length(z);\n}\nfloat cabs2(vec2 z) {\n    return dot(z,z);\n}\nvec2 cinv(vec2 z){\n    return conj(z)/cabs2(z);\n}\nvec2 cdivide(vec2 a, vec2 b){\n    return cprod(a,cinv(b));\n}\nfloat carg(vec2 z) {\n    return atan(z.y,z.x);\n}\nvec2 cis(float t){\n    return cos(t - I*PI/2.);\n}\nvec2 cexp(vec2 z) {\n    return exp(z.x)*cis(z.y);\n}\nvec2 clog(vec2 z) {\n    return R*log(cabs(z))+I*carg(z);\n}\nvec2 cpow(vec2 a, vec2 b) {\n    return cexp(cprod(b,clog(a)));\n}\nvec2 csqrt(vec2 z){\n    return cpow(z, .5*R);\n}\nvec2 csinh(vec2 z){\n    return (cexp(z)-cexp(-z))/2.;\n}\nvec2 ccosh(vec2 z){\n    return (cexp(z)+cexp(-z))/2.;\n}\nvec2 ctanh(vec2 z){\n    return cdivide(csinh(z),ccosh(z));\n}\nvec2 casinh(vec2 z){\n    return clog(z + csqrt(R + cprod(z,z)));\n}\nvec2 cacosh(vec2 z){\n    return clog(z + csqrt(z + R) + csqrt(z - R));\n}\nvec2 catanh(vec2 z){\n    return (clog(z + R) + clog(z - R))/2.;\n}\nvec2 csin(vec2 z){\n    return cprod(-I,csinh(cprod(I,z)));\n}\nvec2 ccos(vec2 z){\n    return ccosh(cprod(I,z));\n}\nvec2 ctan(vec2 z){\n    return cprod(-I,ctanh(cprod(I,z)));\n}\nvec2 casin(vec2 z){\n    return cprod(-I,casinh(cprod(I,z)));\n}\nvec2 cacos(vec2 z){\n    return R*PI/2.+cprod(I, clog(cprod(I,z) + csqrt(R + cprod(z,z))));\n}\nvec2 catan(vec2 z){\n    return cprod(-I,catanh(cprod(I,z)));\n}\nvec2 gammagth(vec2 z) {\n    return cprod(cpow(cprod(z/E,csqrt(cprod(z,csinh(cinv(z))))),z),csqrt(cdivide(R*2.*PI,z)));\n}\nvec2 gamma(vec2 z){\n    if(z.x<.5){\n        return cdivide(PI*R,cprod(csin(cprod(PI*R,z)), gammagth(R-z)));\n    } else {\n        return gammagth(z);\n    }\n}\n//////////////////////\n\nvec2 Dirichletn(vec2 s){\n    vec2 z = vec2(0);\n    for (int j = 1; j <= 32; j++){\n        z += cpow(vec2(j,0),-s) * (j%2==0?-1.:1.);\n    }\n    return z;\n}\nvec2 zetaLargeS( vec2 s ) {\n    vec2 z = vec2(0);\n    for (int j = 1; j <= 32; j++){\n        z += cpow(vec2(j,0),-s);\n    }\n    return z;\n}\nvec2 zetaSmallS( vec2 s ) {\n    vec2 z = vec2(0);\n    \n    return cdivide(Dirichletn(s),vec2(1,0) - cpow(vec2(2,0),vec2(1,0)-s) );\n}\nvec2 zetagtz( vec2 s ) {\n    return mix(zetaSmallS(s),zetaLargeS(s),smoothstep(1.5,2.5,s.x));\n    /*if(s.x>4.){\n        return zetaLargeS(s);\n    } else {\n        return zetaSmallS(s);\n    }*/\n}\nvec2 zeta( vec2 s ) {\n    vec2 a = zetagtz(s);\n    vec2 sr = vec2(1,0)-s;\n    vec2 b = cprod(cprod(zetagtz(sr),gamma(sr)),cprod(ccos(PI/2.*sr),2.*cpow(vec2(2.*PI,0),-sr) ));\n    if(s.x>.75){\n        return a;\n    }\n    if(s.x<.25){\n        return b;\n    }\n    \n    return mix(b,a,smoothstep(.25,.75,s.x));\n}\n\n\n\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec4 color( vec2 z ){\n    return vec4( hsv2rgb(vec3(\n        fract(carg(z)/(2.*PI)),\n        1.0,\n        .75+.25*sin(5.*log(cabs(z)))\n    \n    )), 1. );\n}\n\nvec2 f(vec2 x) {\n    return gamma(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.xx;\n\n    \n\tfragColor = color(f(uv*20.));\n    \n    \n}","name":"Image","description":"","type":"image"}]}