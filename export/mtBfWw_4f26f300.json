{"ver":"0.1","info":{"id":"mtBfWw","date":"1694483605","viewed":12,"name":"扇形计算","username":"Jatpeng","description":"扇形计算","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fanshap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float PI = 3.141592653;\nfloat smoothstep_custom(float edge0, float edge1,float x) {\n    // 将输入值限制在边界范围内\n    float t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n    \n    // 定义自定义的非等比变化形状\n    if (t < 0.2) {\n        return t * t * (3.0 - 2.0 * t) * 0.2;\n    } else {\n        return t * t * (3.0 - 2.0 * t);\n    }\n}\nfloat sector(vec2 c, vec2 p, float r, float sa, float alpha){\n    float bl = 0.4;\n    float l  = abs(distance(p, c ));\n    float t  = smoothstep(r-bl, r + bl, l); \n    vec2  uv = p - c;\n    //float a = atan(uv.y, uv.x);\n    //if (a < 0.0) a += 2.0*PI;\n    float a = PI - atan(uv.y, -uv.x);\n    \n    \n    float delta = (alpha-sa)*0.5;\n    float rad;\n    if(a >= sa && a< sa+delta)\n    {\n        rad = 1.0 -smoothstep(sa,  sa+delta, a);\n        \n    }\n    else if(a>=sa+delta && a<alpha)\n    {\n        rad = smoothstep(sa+delta,  alpha, a);\n    }else\n    {\n        rad = 1.0;\n    }\n    rad = smoothstep(0.8,  1.0, rad);\n    \n    t  = a >= sa-0.5*delta         ? t : 1.0;\n    t  = a <= sa + alpha ? t : 1.0;\n    \n\n    //rad = clamp(rad,0.0 ,1.2);\n    return rad+t;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     float time = iTime * 0.3 + iMouse.x*0.01;\n     vec4 white = vec4(1.0,1.0,1.0,1.0);\n     vec4 black = vec4(0.0,0.0,0.0,1.0);\n  \t\n     vec2 uv = fragCoord/min(iResolution.x,iResolution.y);\n     \n     vec2 p  = (fragCoord.xy * 2.0 - iResolution.xy)/min(iResolution.x,iResolution.y);\n  \n     //float t = sector(vec2(0.5), uv, 0.9, 0.0, mod(time, 2.0*PI));\n     //圆心位置,起始角度，终点角度\n     vec4 fan = vec4(0.5,0.5,0.0,90.0);\n     vec2 center = vec2(fan.x,fan.y)*2.0-vec2(1.0);\n     //半径\n     float radius = 0.4;\n     \n     float t = sector(vec2(center), p, radius, radians(fan.z), radians(fan.w));\n    // white*(1−t)+black*t\n     fragColor = vec4(t);\n     \n        // fragColor =vec4(p,0.0,1.0);\n\n}","name":"Image","description":"","type":"image"}]}