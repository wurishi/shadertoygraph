{"ver":"0.1","info":{"id":"mddBzX","date":"1697484454","viewed":176,"name":"Complementary Flow","username":"fishy","description":"Just a little experiment. Colors are chosen such that when they add together they become 1. If it's laggy you can reduce the number of substeps in Buffer A","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["blur","buffer","trails","substep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = 1.0-exp(-texture(iChannel0, fragCoord/iResolution.xy));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SUBSTEPS 8.0\n\n#define COLOR_0 vec3(1.000,0.525,0.000)\n#define COLOR_1 (1.0-COLOR_0)\n\nvec2 curve(float t, float k)\n{\n    return vec2(sin(t) - cos(t + k), cos(3.0*t) + sin(4.0 * - k))*0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec3 store = texture(iChannel0, fragCoord/iResolution.xy, 0.1).rgb;\n    \n    for(float i = 0.0; i < SUBSTEPS; i++)\n    {\n        float offset = i / SUBSTEPS * max(0.0, iTimeDelta);\n        float t = max(0.0001, iTime) * 0.5;\n        float k = max(0.0001, iTime) * 0.25;\n        float p0 = 0.3/distance(uv, curve(t + offset, k + offset));\n        float p1 = 0.3/distance(uv, curve(t + offset + 0.5, k + offset + 0.5));\n\n        vec3 col = COLOR_0 * p0 + COLOR_1 * p1;\n\n        store = mix(col, store, pow(0.5, max(0.0, iTimeDelta) / SUBSTEPS));\n    }\n    \n    fragColor = vec4(store, 1);\n}","name":"Buffer A","description":"","type":"buffer"}]}