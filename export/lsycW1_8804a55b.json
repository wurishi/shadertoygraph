{"ver":"0.1","info":{"id":"lsycW1","date":"1521792293","viewed":292,"name":"a sunny day of sea","username":"FishMan","description":"a sunny day of sea","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","sea","sun","cloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// a sunny day of sea - by JiepengTan - 2018\n// jiepengtan@gmail.com\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n#define LAYER 22.0\n#define lerp mix\nfloat Wave(float layer,vec2 uv,float val){\n\tfloat amplitude =  layer*layer*0.00004;\n\tfloat frequency = val*200.*uv.x/layer;\n\tfloat phase = 9.*layer+ iTime/val;\n\treturn amplitude*sin(frequency+phase); \n}\nfloat Circle(vec2 uv,vec2 center,float size,float blur){\n\tuv = uv - center;\n\tuv /= size;\n\tfloat len = length(uv);\n\treturn smoothstep(1.,1.-blur,len);\n}\nfloat AngleCircle(vec2 uv,vec2 center,float size,float blur){\n\tuv = uv - center;\n\tuv /= size;\n\tfloat deg = atan(uv.y,uv.x) + iTime * -0.1;\n\tfloat len = length(uv);\n\tfloat offs =( sin(deg*9.)*3.+sin(deg*11.+sin(iTime*6.)*.5))*0.05;\n\treturn smoothstep(1.+offs,1.-blur+offs,len);\n}\nfloat Remap(float a,float b,float c,float d,float val){\n\treturn (val-a)/(b-a) * (d-c) + c;\n}\nfloat DrawCloud(vec2 uv,vec2 center,float size){\n\tuv = uv - center;\n\tuv /= size;\n\tfloat col = Circle(uv,vec2(0.,0.),0.2,0.05);\n\tcol =col *  smoothstep(-0.1,-0.1+0.01,uv.y);\n\tcol += Circle(uv,vec2(0.15,-0.05),0.1,0.05);\n\tcol += Circle(uv,vec2(0.,-0.1),0.11,0.05);\n\tcol += Circle(uv,vec2(-0.15,-0.1),0.1,0.05);\n\tcol += Circle(uv,vec2(-0.3,-0.08),0.1,0.05);\n\tcol += Circle(uv,vec2(-0.2,0.),0.15,0.05);\n\treturn col;\n}\nfloat DrawClouds(vec2 uv){\n\tuv.x += 0.03*iTime;\n\tuv.x = fract(uv.x+0.5) - 0.5;\n\tfloat col = DrawCloud( uv,vec2(-0.4,0.3),0.2);\n\tcol += DrawCloud( uv,vec2(-0.2,0.42),0.2);\n\tcol += DrawCloud( uv,vec2(0.0,0.4),0.2);\n\tcol += DrawCloud( uv,vec2(0.15,0.3),0.2);\n\tcol += DrawCloud( uv,vec2(0.45,0.45),0.2);\n\treturn col;\n}\nvec4 DrawSun(vec2 uv,vec2 center){\n\tvec2 sunPos = center;\n\tfloat sun = Circle(uv,sunPos,0.06,0.05);\n\tfloat sunCircle = AngleCircle(uv,sunPos,0.08,0.05);\n\tvec3 col = sunCircle * vec3(0.9,0.6,0.15);\n\tcol = lerp( col ,vec3(0.98,0.9,0.1),sun);\n    return vec4(col,clamp(sun+sunCircle,0.,1.));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.x*= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(0.0,LAYER*.03,1.);\n    float num = 0.;\n    \n    //get the layer id\n    //ref :https://www.shadertoy.com/view/XlsXRM\n    for (float i=1.; i < LAYER; i++) {\n    \tfloat wave = 2.*Wave(i,uv,1.)+Wave(i,uv,1.8)+.5*Wave(i,uv,3.);\n    \tfloat layerVal = 0.2-0.03*i + wave;\n        if(uv.y <layerVal){\n            num = i;\n        }\n    }\n    num = LAYER - num;\n    //1.draw sea\n    col += num * vec3(.04,.013,.04);\n    \n\t//2.draw sky \n\tif(num ==LAYER){\n\t\tfloat ry = Remap(0.2,0.5,1.0,0.0,uv.y);\n\t\tcol = lerp(vec3(0.1,0.6,0.9),vec3(0.1,0.7,0.9),ry);\n\t\tcol += pow(ry,10.)*vec3(0.9,0.2,0.1)*0.2;\n\t}\n\t\n\t//3.draw sun\n    vec4 sunCol = DrawSun(uv,vec2(0.4,0.35));\n\tcol = lerp( col ,sunCol.xyz,sunCol.w);\n    \n\t//4.draw clouds\n\tcol += DrawClouds(uv);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}