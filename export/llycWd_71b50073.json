{"ver":"0.1","info":{"id":"llycWd","date":"1538132839","viewed":1048,"name":"shaping functions","username":"Simplyfire","description":"There are only so many things you can say about playing with various ways to calculate distance from center","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["distance","trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision highp float;\n#endif\n\n#define pi 3.14159265359\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvec3 hsb2rgb( in vec3 c){\n vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0), 6.0)-3.0)-1.0, 0.0, 1.0 );\n rgb = rgb*rgb*(3.0-2.0*rgb);  return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvec3 rect(vec2 uv, vec2 c, vec2 s, vec2 off){\n  float p = max(smoothstep(c.x+s.x,c.x+s.x+off.x, uv.x),\n                smoothstep(c.y+s.y,c.y+s.y+off.y,uv.y));\n  float q = max(smoothstep(c.x-s.x,c.x-s.x-off.x, uv.x),\n                smoothstep(c.y-s.y,c.y-s.y-off.y,uv.y));\n  return vec3(1.-max(p,q));\n}\n\nfloat map(float x, float a1, float a2, float b1, float b2){\n  return b1 + (b2-b1) * (x-a1) / (a2-a1);\n}\n\nvec3 ellipse(vec2 uv, vec2 c, float r){\n  float d = distance(uv,c);\n  return vec3(1.-smoothstep(r, r+0.08, d));\n}\n\nvec3 shape(vec2 st, int N, float scl, float smth, float rot){\n  // Remap the space to -1. to 1.\n  st = st *2.-1.;\n  // Angle and radius from the current pixel\n  float a = atan(st.x,st.y)+pi+u_time*rot;\n  float r = pi*2./float(N);\n  // Shaping function that modulate the distance\n  float d = cos(floor(.5+a/r)*r-a)*length(st*2.)/scl;\n  return vec3(1.0-smoothstep(r,r+smth,d));\n}\n\nfloat maxrect(vec2 uv, vec2 c){\n\treturn max(abs(c.x-uv.x), abs(c.y-uv.y));\n}\n\nfloat minrect(vec2 uv, vec2 c){\n\treturn min(abs(c.x-uv.x), abs(c.y-uv.y));\n}\n\nfloat dist(vec2 uv, vec2 c){\n\treturn distance(uv,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   float t = iTime;\n   vec2 uv = fragCoord.xy / iResolution.xy;\n   vec2 c = vec2(.5);\n   float d0 = dist(uv, c);\n   float d1 = maxrect(uv, c);\n   float d2 = minrect(uv, c);\n   vec3 color = vec3(0.,0.,0.);\n   float v = .5+.5*sin(d2/d1/d0*.8+(t*1.5));\n   color.r = map(d0/2.+t/30., 0., 0.5, .0, 1.);\n   color.g = 1.-d0*.5;\n   color.b = .6-d0*2.+v;\n\n   fragColor = vec4(hsb2rgb(color),1.);\n }\n\n\n","name":"Image","description":"","type":"image"}]}