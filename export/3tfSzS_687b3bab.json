{"ver":"0.1","info":{"id":"3tfSzS","date":"1592400453","viewed":44,"name":"heart fishes","username":"inbisibler","description":"marching fishes","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hart(vec2 p,vec2 c,float scale,float th){\n    float a=1.0;\n    vec2 pos = p - c;\n    pos = pos/scale;\n    pos = vec2(pos.x*cos(th)-pos.y*sin(th),pos.x*sin(th)+pos.y*cos(th));\n\tfloat val = pos.x*pos.x + (pos.y-sqrt(abs(pos.x)))*(pos.y-sqrt(abs(pos.x))) - a*a;\n    if (length(pos)<0.1){\n    \tval=0.0;\n    }\n\treturn val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 position = fragCoord/iResolution.xy-0.5;\n    // vec2 position = (fragCoord - iResolution.xy *0.5)/ min(iResolution.x,iResolution.y);\n\n    \n    \n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+position.xyx+vec3(0,2,4));\n    float n=10.0;\n    for(float j=0.0;j<n;j++){\n    for(float i=0.0;i<=n;i++){\n//        vec2 center = vec2(sin(iTime+6.28*i/n)+3.5,cos(iTime+6.28*i/n))*0.2;\n        vec2 center = vec2(-iTime*0.1+0.5+fract(i*0.5)*0.1+j/n*1.4,i/n*1.0-0.5);\n        center.x = mod(center.x,1.4)-0.7;\n        col *= smoothstep(-0.3,0.3,abs(hart(position,center,0.03,sin(iTime*8.0)*0.3+1.57)));\n    }}\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}