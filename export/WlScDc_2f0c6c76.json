{"ver":"0.1","info":{"id":"WlScDc","date":"1595537789","viewed":79,"name":"truchet tiling! v2","username":"Sergiced","description":"hehe","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["truchettiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p) // noise two one\n{\n\tp = fract(p*vec2(234.34, 435.345));\n\tp += dot(p, p+34.23);\n\treturn fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec2 UV = fragCoord.xy/iResolution.xy;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\t//vec3 col = vec3(0);\n\n    uv *= 10.;\n    uv += iTime;\n\tvec2 gv = fract(uv)-.5;\n\tvec2 id = floor(uv);\n\n\tfloat n = Hash21(id); // random number between 0 and 1.\n\n\t\n    if(n<.5) gv.x *= -1.;\n    float width = 0.1;\n\tfloat d = abs(abs(gv.x+gv.y)-.5);\n    \n    vec2 cUv = gv-sign(gv.x+gv.y+.001)*.5;\n    d = length(cUv);\n\tfloat mask = smoothstep(.01, -.01, abs(d-.5)-width);\n    \n    float angle = atan(cUv.x, cUv.y);// measure an angle with atan!\n    // ^ -pi to pi\n\tfloat  checker = mod(id.x + id.y, 2.)*2.-1.;\n    float flow = sin(iTime*10. + (sign(checker) * angle*10.));\n    \n    float x = (checker*angle/1.57-iTime*.3); // fract brings everything in the 0 to 1 range.\n    float y = (d-(.5-width))/(2.*width);\n    y = abs(y-.5)*2.;\n    \n    vec2 tUv = vec2(x,y);\n\n\t//col += texture(iChannel0, tUv).rgb * mask;\n    //col *=  mask;\n\t//col *= 1.-tUv.y;   \n    col.rg += tUv*mask;\n\t//col += flow*mask;\n\t//col.rg += n;\n    //col += checker;\n\n    //if(gv.x>.48 ||gv.y>.48) col = vec3(1,0,0);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}