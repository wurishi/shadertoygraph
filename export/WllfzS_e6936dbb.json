{"ver":"0.1","info":{"id":"WllfzS","date":"1597043911","viewed":301,"name":"Sweet road","username":"gaz","description":"fractal","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Scale;\nfloat map(vec3 p)\n{\n   float s=2.;\n    for(int i = 0; i < 4; i++) {\n        p=mod(p-1.,2.)-1.;\n\t\tfloat r2=1.2/dot(p,p);\n    \tp*=r2;\n    \ts*=r2;\n    }\n    Scale=log2(s);\n    p = abs(p)-0.8;\n    if (p.x < p.z) p.xz = p.zx;\n    if (p.y < p.z) p.yz = p.zy;\n    if (p.x < p.y) p.xy = p.yx;\n    return length(cross(p,normalize(vec3(0,.5,1))))/s-Scale*.0015;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=(2.*fragCoord-iResolution.xy)/iResolution.y;\n\tvec3 p,\n  \t\tro=vec3(1.,1.,iTime),\n  \t\tw=normalize(vec3(.1*sin(iTime*.5),.3,1)),\n  \t\tu=normalize(cross(w,vec3(cos(-iTime*.16),sin(-iTime*.16),0))),\n  \t\trd=mat3(u,cross(u,w),w)*normalize(vec3(uv,2));\n\tfloat h=0.,d,i;\n\tfor(i=1.;i<100.;i++)\n    {\n    \tp=ro+rd*h;\n\t\td=map(p);\n    \tif(d<.0001)break;\n    \th+=d;\n\t}\n    fragColor.xyz=35.*vec3(vec3(.7,.9,.7)*cos(Scale*.3)+(cos(p.xyy)*.5+.5))/i;\n}\n","name":"Image","description":"","type":"image"}]}