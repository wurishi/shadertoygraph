{"ver":"0.1","info":{"id":"M3jczy","date":"1727413401","viewed":21,"name":"Eight Glorious Sides","username":"floopfloop","description":"hey how it's goin', i'm jack","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","octagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// WTFPL\n#define S(d)  smoothstep( 1.5/R.y, -1.5/R.y, d) \n\nfloat octagon(vec2 p, float r) {\n    const float SHRINK_FUDGE = 0.5;\n    const float K = sqrt(2.);\n    \n    p = abs(p);\n    return max(p.x+p.y, max(p.x, p.y) * K) \n        - r*cos(radians(22.5+SHRINK_FUDGE)) * K;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 R = iResolution.xy;\n    vec2 uv = ( 2.*fragCoord - R ) / R.y;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float r = (sin(iTime)+4.0)*0.125;\n    float od = octagon(uv, r);\n    \n    float sd = length(uv)-r;\n    \n    vec4 oc = vec4(1.0, 0.0, 0.0, S(od));\n    vec4 sc = vec4(1.0, 1.0, 1.0, S(sd));\n    vec4 color = vec4(0.); \n    \n    color += (1.-color.a) * vec4( oc.rgb, 1 ) *oc.a;\n    color += (1.-color.a) * vec4( sc.rgb, 1 ) *sc.a;\n    \n    fragColor = vec4(color);\n}","name":"Image","description":"","type":"image"}]}