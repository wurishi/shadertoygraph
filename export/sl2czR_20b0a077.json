{"ver":"0.1","info":{"id":"sl2czR","date":"1649371318","viewed":53,"name":"Mandelbrot.SV","username":"turtlelover891","description":"I'm back and I attempt to make the Mandelbrot set\n(I learned about imaginary numbers)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define scale 5000000000.*pow(1.75, fract(iTime/36.)*36.)\n#define offset vec2(.36636285, .59153375)\n\nfloat circle(vec2 uv, vec2 pos, float r){\n    vec2 a = uv - pos/scale;\n    return smoothstep((r+.5)/scale, (r-.5)/scale, sqrt(a.x*a.x+a.y*a.y));\n}\n\nvec2 mult(vec2 num1, vec2 num2){\n    float a = num1.x*num2.x;\n    float b = num1.x*num2.y;\n    float c = num1.y*num2.x;\n    float d = num1.y*num2.y;\n    return vec2(a-d, b+c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 R = iResolution.xy;\n    vec2 uv = (fragCoord-R/2.)/scale + offset;\n    vec3 col = vec3(0);\n    vec2 p = uv;\n    \n    float steps = 255.;\n    for(int i=0; i<int(steps); i++){\n        p = mult(p, p) + uv;\n        if(length(p) > 1000.) break;\n        col += 1./steps;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}