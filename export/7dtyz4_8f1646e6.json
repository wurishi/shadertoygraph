{"ver":"0.1","info":{"id":"7dtyz4","date":"1653160859","viewed":93,"name":"CMYK offset","username":"vibromatic","description":"CMYK offset","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["print"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float DEF = 300.;\nconst float PI = 3.14159;\n\nfloat luminance(vec3 rgb)\n{\n    // Algorithm from Chapter 10 of Graphics Shaders.\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgb, W);\n}\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nvec4 rgbToCMYK(vec3 color){\n    float k = 1. - max(color.r, max(color.g, color.b));\n    float c = (1. - color.r - k) / (1. - k);\n    float m = (1. - color.g - k) / (1. - k);\n    float y = (1. - color.b - k) / (1. - k);\n    return vec4(c, m, y, k);\n}\n\nfloat point(vec2 uv, float rotation, float size){\n    vec2 st = rotateUV(uv, rotation);\n    st = fract(st * DEF);\n    float dist = distance(st, vec2(0.5));\n    return step(dist, 1.  * size);\n}\n\nvec4 CMYK(vec2 uv, float rotation){\n    vec2 st = rotateUV(uv, rotation);\n    vec2 id = floor(st * DEF) / DEF;\n    id = rotateUV(id, -rotation);\n    vec4 tex = texture(iChannel0, id);\n    return rgbToCMYK(tex.rgb);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float c = point(uv, PI * -.125, CMYK(uv, PI * -.125).x);\n    float m = point(uv, PI * .125, CMYK(uv, PI * .125).y);\n    float y = point(uv, 0., CMYK(uv, 0.).z);\n    float k = point(uv, PI * .25, CMYK(uv, PI * .25).w *.7);\n    \n    vec3 mixed = vec3(1.,1.,1.);\n    mixed.r -= c;\n    mixed.g -= m;\n    mixed.b -= y;\n    mixed *= 1. - k;\n  \n    // Output to screen\n    fragColor = vec4(mixed, 1.);\n}","name":"Image","description":"","type":"image"}]}