{"ver":"0.1","info":{"id":"Xs3GWM","date":"1449836688","viewed":307,"name":"Cubenx - A Sheltering Sky","username":"shezard","description":"fft","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dsGz8","filepath":"https://soundcloud.com/infine-music/cubenx-a-sheltering-sky","previewfilepath":"https://soundcloud.com/infine-music/cubenx-a-sheltering-sky","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"mat2 rotate(in float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nfloat noise(in vec2 uv) {\n\treturn sin(1.5*uv.x) * sin(1.5*uv.y);\n}\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat fbm(vec2 uv) {\n    float f = 0.0;\n    f += 0.5000*noise(uv); uv = m*uv*2.02;\n    f += 0.2500*noise(uv); uv = m*uv*2.03;\n    f += 0.1250*noise(uv); uv = m*uv*2.01;\n    f += 0.0625*noise(uv);\n    return f/0.9375;\n}\n\nfloat fbm2(in vec2 uv) {\n   vec2 p = vec2(fbm(uv + vec2(0.0,0.0)),\n                 fbm(uv + vec2(5.2,1.3)));\n\n   return fbm(uv + 4.0*p);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec2 p = -1. + 2. * uv;\n    p.x *= iResolution.x / iResolution.y;\n\n    float mp = cos(iTime + length(p));\n    \n    p *= rotate(length(p * .1));\n    \n    p = mod(p, .25 * mp) * mod(-p, .25 * mp);\n    \n    float d = length(p + fbm2(abs(p) + iTime * .3) * .02  );\n    \n\tfloat fft = texture(iChannel0, vec2(d,0.25)).x;\n    \n    vec3 col = vec3(.2, 1. * fft, .4 * fft) * fft;\n\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}