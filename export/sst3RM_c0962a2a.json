{"ver":"0.1","info":{"id":"sst3RM","date":"1629426834","viewed":70,"name":"小作业:变换","username":"keyuliang","description":"小作业","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox(in vec2 p, in vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x,d.y), 0.0);\n}\n\nmat2 rot(float a) {\n    float cs = cos(a);\n    float ss = sin(a);\n    return mat2(cs, ss, -ss, cs);\n}\n\nmat2 scale(float sx, float sy) {\n    return mat2(sx, 0., 0., sy);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime * 0.2);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    uv += vec2(0.8, 0.5);\n    \n    float a1 = clamp(t,0.0,0.2);\n    uv += vec2(0.0, -1.0) *  a1 / 0.2;\n    \n    float a2 = clamp(t,0.2,0.4);\n    uv *= rot( (a2 - 0.2) / 0.2 * 3.14156);\n    \n    float a3 = clamp(t,0.4,0.5);\n    \n    uv += vec2(1.6, -1.0) *(a3 - 0.4) / 0.1;\n    \n    float a4 = clamp(t,0.4,0.5);\n     \n     \n    \n     \n    float a = sdBox(uv, vec2(0.2,0.2));\n    // Time varying pixel color\n    vec3 col = mix(vec3(0.0,0.0,0.0),vec3(1.0,1.0,1.0),smoothstep(0.01,0.02,a));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}