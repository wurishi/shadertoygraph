{"ver":"0.1","info":{"id":"4tSyz3","date":"1509406702","viewed":271,"name":"Hello Neighbor","username":"timeiskey","description":"arbitrary smileys in arbitrary positions;\nperformance is questionable;","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["2d","primitive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MslXDs","filepath":"https://soundcloud.com/royaltyfreebackgroundmusic/creative-commons-music-5045","previewfilepath":"https://soundcloud.com/royaltyfreebackgroundmusic/creative-commons-music-5045","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle( vec2 uv, vec2 pos, float r, float blur )\n{\n\tfloat d = length( pos - uv );\n    float cm = smoothstep( r, r-blur, d );\n    return cm;\n}\n\nfloat smiley( vec2 uv, vec2 pos, float size, float ar )\n{\n    //\ttransform coords relative to origin to relative to pos\n    uv /= size;\n    uv -= pos / size - vec2( 0.5 * ar, 0.5 );\n    \n    float col = 0.0;\n\tfloat blr = 0.0042;\n    \n    //\tleft eye\n    float lex = 0.4 * ar;\n    float lem \t= circle( uv, vec2( lex, 0.7 ), 0.1, blr );\t//\twhites\n    float lem2 \t= circle( uv, vec2( lex, 0.6 + sin(iTime * 1.0) * 0.03 ), 0.1, blr );\t//\tlower lid\n    float lem3 \t= circle( uv, vec2( lex, 0.7 + -max( sin(iTime * 1.1) * 0.03, 0.0 ) -0.03), 0.1, blr );\t//\tupper lid\n    float lem4 \t= circle( uv, vec2( lex, 0.65 ), 0.04 + 0.01*sin(iTime), blr );\t//\tpupil\n    //\tcomposite\n    float lec = 0.0;\n    lec += lem3;\n    lec *= lem;\n    lec -= lem2;\n    lec = max( lec, 0.0 );\n    lec += lem4;\n    col += lec;\n    \n    //\tright eye\n    float rex = 0.6 * ar;\n    float rem \t= circle( uv, vec2( rex, 0.7 ), 0.1, blr );\t//\twhites\n    float rem2 \t= circle( uv, vec2( rex, 0.6 + sin(iTime * 1.0) * 0.03 ), 0.1, blr );\t//\tlower lid\n    float rem3 \t= circle( uv, vec2( rex, 0.7 + -max( sin(iTime * 1.1) * 0.03, 0.0 ) -0.03), 0.1, blr );\t//\tupper lid\n    float rem4 \t= circle( uv, vec2( rex, 0.65 ), 0.04 + 0.01*sin(iTime), blr );\t//\tpupil\n    //\tcomposite\n    float rec = 0.0;\n    rec += rem3;\n    rec *= rem;\n    rec -= rem2;\n    rec = max( rec, 0.0 );\n    rec += rem4;\n    col += rec;\n    \n    //\tmouth\n\tfloat mx = 0.5 * ar;\n    float mm \t= circle( uv, vec2( mx, 0.4 ), 0.1, blr );\n    float mm2 \t= circle( uv, vec2( mx, 0.5 + sin(iTime * 10.0) * 0.03 ), 0.15, blr );\n    //\tcomposite\n    float mc = 0.0;\n    mc += mm;\n    mc -= mm2;\n    col += mc;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //\tget normalized pixel coordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //\tcorrect aspect ratio distortion\n    float ar = iResolution.x / iResolution.y;\n    uv.x *= ar;\n    \n    //\t-----\tDRAW\t-----\t//\n    //\tcolor container\n    vec3 col = vec3( 0.0 );\n    \n    //\tdraw a bunch of smilies\n    for( float x = 0.0; x < 1.0 * ar; x+= 0.1 )\n    {\n        float smx = x + 0.1;\n        float smy = tan((iTime / 10.0 + x) * 10.0) / 2.0 + 0.5;\n        float sms = cos((iTime / 10.0 + x) * 10.0) / (2.0) + 0.2;\n        \n    \tfloat sm = smiley( uv, vec2( smx, smy ), sms, ar);\n    \tcol += sm;\n    }\n\n    //\tfinal output\n\tfragColor = vec4( col ,1.0);\n}","name":"Image","description":"","type":"image"}]}