{"ver":"0.1","info":{"id":"lfsyWf","date":"1721716332","viewed":38,"name":"Normal Map Sphere","username":"knotaiBEAR","description":"Normal map sphere reference image.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sphere","normalmap","circle","normal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 center = vec2(-1.0,-1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Pixel coordinates adjusted for aspect ratio for uniform circle\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 UV = fragCoord/iResolution.xy;\n    // UV coorinates in clip space (from -1 to 1)\n    vec2 uv0 = (uv-0.5)*2.0;\n\n    // Distance to edge of circle\n    float d = distance(center, uv0);\n    \n    float height = sqrt(1.0-(d*d));\n    vec3 col = vec3(UV.x,UV.y,height);\n    if (d >= 1.0){\n        col = vec3(0.5,0.5,1.0);\n    };\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}