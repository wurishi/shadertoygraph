{"ver":"0.1","info":{"id":"ltjSWt","date":"1447584935","viewed":124,"name":"mandelbrot dojo","username":"pmilian","description":"mandelbrot fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractalmandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const int NB_ITER = 100;\n\nvec2 pow2(vec2 z) {\n  \t//xÂ² - yÂ² + 2ixy\n  \treturn vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y);\n}\n\nvec3 mandelbrot(vec2 c) {\n  \tvec2 z = vec2(0.0, 0.0);\n  \tint i = 0;\n    for (int j = 0; j < NB_ITER; j++) {\n        z = pow2(z) + c;\n        \n        if (length(z) > 2.0) {\n            i = j;\n            break;\n        }\n    }\n    \n    float color = float(i) / float(NB_ITER);\n    \n    return vec3(pow(color, 2.0), pow(color, 2.0), color);\n  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat ratio = iResolution.x/iResolution.y;\n\tvec2 uv = fragCoord.xy/iResolution.y - vec2(3.5 + ratio - cos(iTime) / 2.0, 0.5);\n    \n    float zoom = 0.3 + cos(iTime) / 50.0;\n    \n    uv *= zoom;\n    \n\tfragColor = vec4(mandelbrot(uv), 1.0);\n}","name":"Image","description":"","type":"image"}]}