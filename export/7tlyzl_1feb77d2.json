{"ver":"0.1","info":{"id":"7tlyzl","date":"1648570200","viewed":560,"name":"Energy beam","username":"fydrenak","description":"Made for use in a magic beam spell in a game. The goal was to make something lightning-like with a sense of forward motion. I also needed the beginning and end to stay mostly in the same place.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["game","vfx","beam","fx","magic","lightning","effects","energy","spell"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED 15.0\n#define FREQ 8.\n#define MAX_HEIGHT 0.3\n#define THICKNESS 0.005\n#define BLOOM 0.65 // above 1 will reduce\n#define WOBBLE 0.1 // how much each end wobbles\n\nfloat beam(vec2 uv, float max_height, float offset, float speed, float freq, float thickness) {\n\tuv.y -= 0.5;\n\n\tfloat height = max_height * (WOBBLE + min(1. - uv.x, 1.));\n\n\t// Ramp makes the left hand side stay at/near 0\n\tfloat ramp = smoothstep(0., 2.0 / freq, uv.x);\n\n    height *= ramp;\n\tuv.y += sin(uv.x * freq - iTime * speed + offset) * height;\n\n\tfloat f = thickness / abs(uv.y);\n\tf = pow(f, BLOOM);\n\t\n\treturn f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float f = beam(uv, MAX_HEIGHT, 0., SPEED, FREQ * 1.5, THICKNESS * 0.5) + \n\t\t\t  beam(uv, MAX_HEIGHT, iTime, SPEED, FREQ, THICKNESS) +\n\t\t\t  beam(uv, MAX_HEIGHT, iTime + 0.5, SPEED + 0.2, FREQ * 0.9, THICKNESS * 0.5) + \n\t\t\t  beam(uv, 0., 0., SPEED, FREQ, THICKNESS * 3.0);\n    \n    fragColor = vec4(f * vec3(0.5, 0.05, 0.15), 1.0);\n}","name":"Image","description":"","type":"image"}]}