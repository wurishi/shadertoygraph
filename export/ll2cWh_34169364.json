{"ver":"0.1","info":{"id":"ll2cWh","date":"1508428093","viewed":854,"name":"Warp My Britney 2","username":"aiekick","description":"\tuse mouse for warp in.\n\tpress space key for warp out during mouse move\n","likes":6,"published":3,"flags":48,"usePreview":0,"tags":["warping","warp","britney","gravity","morphing","my","electrostatic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Stephane Cuillerdier - Aiekick/2017 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Tuned via SoShade Beta\n\n/*\n\ton a idea of FabriceNeyret2\n\n\ton the buffer map i draw a uv map\n\tused in image for deform the video\n\n\tuse mouse for warp in.\n\tpress space key for warp out during mouse move\n\n\tyou can stop the video for deform a frame or lets play for see the deformation over the video :)\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = texture(iChannel0, fragCoord / iResolution.xy).rg;\n    \n    fragColor = texture(iChannel3, uv);\n    \n    //uncomment for seeing the uvmap\n    //fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Created by Stephane Cuillerdier - Aiekick/2017 (twitter:@aiekick)\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Tuned via SoShade Beta\n\n#define WARP_FORCE 0.05\n#define WARP_RADIUS 0.1\n\nvec2 warp(vec2 uv, vec2 mo, float force, float radius) \n{\n    vec2 mouv = mo-uv;\n    \n    // electro static formula\n\treturn uv - force * exp(-dot( mouv, mouv)/abs(radius)) * mouv;\n}\n\n//////////////////////////////////////////////////////////////\n// keyboard from FabriceNeyret2\nbool KeyIsPressed(int ascii) \n{\n\treturn (texture(iChannel1,vec2((.5+float(ascii))/256.,0.25)).x > 0.);\n}\n//////////////////////////////////////////////////////////////\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uvBottomleft = fragCoord / iResolution.xy;\n    \n    // warp force => in\n    float force = WARP_FORCE; // warp in\n    \n    // space key for warp out\n    if (KeyIsPressed(32)) \n    \tforce = -WARP_FORCE; // warp out\n            \n    if (iFrame < 10)\n    {\n        // write the uv on canals RG\n        fragColor.rg = uvBottomleft;\n    }\n    else\n    {\n        if (iMouse.z > 0.)\n        {\n            // i was doing that for try to use the size of the video\n            // for avoid some bluirng during warping, but i not sure, \n            // how i can do that, something escape me :)\n            vec2 size = iResolution.xy;\n            \n            // centered uv for fragCoord and Mouse pos\n            vec2 uvc = (2. * fragCoord - size.xy)/size.y;\n\t\t\tvec2 moc = (2. * iMouse.xy - size.xy)/size.y;\n\n            // warping via electro static formula\n        \tvec2 uvWarp = warp(uvc, moc, force, WARP_RADIUS);\n            \n            // centered uv to bottom left uv\n        \tuvWarp.x *= size.y/size.x;\n        \tuvWarp *= 0.5;\n        \tuvWarp += 0.5;\n\n            // warp the buffer A\n        \tfragColor = texture(iChannel0, uvWarp);\n        }\n        else\n        {\n            // reconduct the buffer A wihtout warping change\n            fragColor = texture(iChannel0, uvBottomleft);\n        }\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}