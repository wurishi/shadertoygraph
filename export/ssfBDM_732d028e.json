{"ver":"0.1","info":{"id":"ssfBDM","date":"1646931787","viewed":82,"name":"circlesZone","username":"RedWool","description":"daw","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["zone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float a)\n{\n    return mat2(cos(a), -sin(a),\n                sin(a), cos(a));\n}\n\nmat2 scale(float a)\n{\n    return mat2(a, 0,\n                0, a);\n}\n\nfloat openCircle (vec2 uv, vec2 c, float r, float o)\n{\n    //a = mod(a, 6.283);\n    float ar = distance(uv, c);\n    \n    uv = uv - c;\n    float ang = atan(uv.y, uv.x);\n    if (uv.y < 0.0)\n    {\n         ang = 6.28 + ang;\n    }\n    \n    return (step(ar - 0.01, r) - step(ar + 0.01, r)) * float(int(ang < 0. || ang > o));\n            //step(ang, a) - (ang + o, a);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2;\n    \n    float pct = 0.;\n    \n    for (int i = 0; i < 50; i++)\n    {\n        uv2 = uv - vec2(0.5);\n        uv2 = rotate(float(i) * 23.2 + iTime * 1.3) * uv2; \n        //float s = mod(float(i) - iTime * 3., 50.);\n        uv2 = scale(mod(float(i) - iTime * 3., 50.)) * uv2;\n        uv2 = uv2 + vec2(0.5);\n\n        pct = openCircle(uv2, vec2(0.5), 0.2, 2.5 * sin(float(i)*93.26 + iTime * 2.) + 2.5);\n        if (pct > 0.5)\n        {\n            break;\n        }\n    \n    }\n    \n    // Time varying pixel color\n    vec3 col = pct * (0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4.)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}