{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"\n//---------------------------------------------------------\n// Shader:   RaytraceMorphingFractal.glsl\n// http://glslsandbox.com/e#17593.1\n// added normal color\n//---------------------------------------------------------\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n//varying vec2 surfacePosition;\n//varying vec2 surfaceSize;\n\n#define resolution iResolution \n#define time iTime \n\n//---------------------------------------------------------\n\n// http://www.fractalforums.com/movies-showcase-%28rate-my-movie%29/very-rare-deep-sea-fractal-creature/\n\nconst int Iterations=25;\nconst float Scale=1.27;\nconst vec3 Julia=vec3(-2.,-1.5,-.5);\nconst vec3 RotVector=vec3(0.5,-0.05,-0.5);\nconst float RotAngle=40.;\nconst float Speed=0.1;\nconst float Amplitude=0.45;\nconst float detail=.025;\nconst vec3 lightdir=-vec3(0.5,1.,0.5);\n\nmat2 rot;\n\nfloat de(vec3 p); \n\nvec3 normal(vec3 p) \n{\n\tvec3 e = vec3(0.0,detail,0.0);\n\t\n\treturn normalize(vec3(\n\t\t\tde(p+e.yxx)-de(p-e.yxx),\n\t\t\tde(p+e.xyx)-de(p-e.xyx),\n\t\t\tde(p+e.xxy)-de(p-e.xxy)\n\t\t\t)\n\t\t);\t\n}\n\nfloat softshadow( in vec3 ro, in vec3 rd, float mint, float k )\n{\n    float res = 1.0;\n    float t = mint;\n    for( int i=0; i<48; i++ )\n    {\n        float h = de(ro + rd*t);\n\t\th = max( h, 0.0 );\n        res = min( res, k*h/t );\n        t += clamp( h, 0.01, 0.5 );\n    }\n    return clamp(res,0.0,1.0);\n}\n\nfloat light(in vec3 p, in vec3 dir) \n{\n\tvec3 ldir=normalize(lightdir);\n\tvec3 n=normal(p);\n\tfloat sh=softshadow(p,-ldir,1.,20.);\n\tfloat diff=max(0.,dot(ldir,-n));\n\tvec3 r = reflect(ldir,n);\n\tfloat spec=max(0.,dot(dir,-r));\n\treturn diff*sh+pow(spec,30.)*.5*sh+.15*max(0.,dot(normalize(dir),-n));\t\n}\n\nfloat raymarch(in vec3 from, in vec3 dir, out vec3 hitpos)\n{\n\tfloat st,d=1.0,col,totdist=st=0.0;\n\n\tfor (int i=0; i<70; i++) \n\t{\n\t  if (d>detail && totdist<50.)\n\t  {\n\t\thitpos = from+totdist*dir;\n\t\td = de(hitpos);\n\t\ttotdist += d;\n\t  }\n\t}\n\tfloat backg=0.0;\n\tif (d<detail)\n\t     col=light(hitpos-detail*dir, dir); \n\telse col=backg;\n\tcol = mix(col, backg, 1.0-exp(-.000025*pow(totdist,3.5)));\n\treturn col;\n}\n\nmat3  rotationMatrix3(vec3 v, float angle)\n{\n\tfloat c = cos(radians(angle));\n\tfloat s = sin(radians(angle));\n\treturn mat3(c + \n\t\t\t\t(1.0 - c) * v.x * v.x,\n\t\t\t\t(1.0 - c) * v.x * v.y - s * v.z, \n\t\t\t\t(1.0 - c) * v.x * v.z + s * v.y,\n\t\t\t\t(1.0 - c) * v.x * v.y + s * v.z, \n\t\t    c + (1.0 - c) * v.y * v.y, \n\t\t\t\t(1.0 - c) * v.y * v.z - s * v.x,\n\t\t\t\t(1.0 - c) * v.x * v.z - s * v.y, \n\t\t\t\t(1.0 - c) * v.y * v.z + s * v.x, \n\t\t    c + (1.0 - c) * v.z * v.z\n\t\t);\n}\n\nfloat de(vec3 p) \n{\n\tp=p.zxy;\n\tfloat a=1.5+sin(time*0.1)*0.1;\n\tp.xy=p.xy*mat2(cos(a),sin(a),-sin(a),cos(a));\n\tp.x*=.75;\n\tfloat time=time*Speed;\n\tvec3 ani;\n\tani=vec3(sin(time),sin(time),cos(time))*Amplitude;\n\tp+=sin(p*3.+time*6.)*.04;\n\tmat3 rot = rotationMatrix3(normalize(RotVector+ani), RotAngle+sin(time)*10.);\n\tvec3 pp=p;\n\tfloat l;\n\tfor (int i=0; i<Iterations; i++) \n\t{\n\t\tp.xy=abs(p.xy);\n\t\tp=p*Scale+Julia;\n\t\tp*=rot;\n\t\tl=length(p);\n\t}\n\treturn l*pow(Scale, -float(Iterations))*.9;\n}\n\nvec4 normalColor(in vec3 p) \n{\n\tvec3 norm = normal(p);\n\treturn vec4(norm*norm,1.)*0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t=time*.3;\n\tvec2 uv = fragCoord.xy / resolution.xy*2.-1.;\n\tuv.y*=resolution.y / resolution.x;\n\tvec3 from=vec3(0.,-.7,-20.);\n\tvec3 dir=normalize(vec3(uv*.7,1.));\n\trot=mat2(cos(-.5),sin(-.5),-sin(-.5),cos(-.5));\n\tdir.yz=dir.yz*rot;\n\tfrom.yz=from.yz*rot;\n\tvec3 hitpos;\n\tfloat col = raymarch(from,dir, hitpos); \n\tfragColor = vec4(col) + normalColor(hitpos);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"llf3DH","date":"1421596786","viewed":291,"name":"RaytraceMorphingFractal","username":"tholzer","description":"animated fractal with rgb normal coloration","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["3d","fractal","raytrace","rgb","morphing"],"hasliked":0,"parentid":"","parentname":""}}