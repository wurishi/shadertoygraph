{"ver":"0.1","info":{"id":"ld2yWV","date":"1493941838","viewed":254,"name":"SpikeRoom","username":"dila","description":"Raymarched walls and spikes!","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat sdBoxXZ( vec3 p, vec3 b )\n{\n  vec2 d = abs(p.xz) - b.xz;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat spike(vec3 p, vec3 b) {\n    float w = clamp(b.y - abs(p.y), 0.0, b.y) / b.y;\n\tfloat d = sdBox(p, b * vec3(w, 1.0, w));\n    //d = max(d, -p.y);\n    return d;\n}\n\nvec3 stx = vec3(0.0);\n\nfloat spikesector(vec3 p, float h, float l) {\n    vec3 q = p;\n    q.y = abs(q.y) - 2.0;\n    float v = sdBox(q, vec3(10.0, 1.5, l));\n    stx = q;\n\n    float k = 0.5;\n    vec3 qa = (fract(p / k) - 0.5) * k;\n    vec3 qb = (fract((p + vec3(0.25, 0.0, 0.0)) / k) - 0.5) * k;\n    qa.y = p.y;\n    qb.y = p.y;\n\n    vec3 so = vec3(0.0, h * 0.6, 0.0);\n    vec3 sw = vec3(0.125, 1.0, 0.125);\n    float sa = spike(qa + so, sw);\n    vec3 sc = qb * vec3(1.0, -1.0, 1.0) + so;\n    float sb = spike(sc, sw);\n\n    float sp = sa;// = min(sa, sb);\n    stx = qa + so;\n    if (sb < sp) {\n        sp = sb;\n        stx = sc;\n    }\n    float clp = abs(q.z) - l;\n    //sp = max(sp, clp);\n    if (clp > sp) {\n        sp = clp;\n        stx = q;\n    }\n    \n    float skr = 0.08;\n    float sk = sdBoxXZ(qa + so, vec3(skr));\n    sk = min(sk, sdBoxXZ(sc, vec3(skr)));\n    v = max(v, -sk);\n    \n    //sp = min(v, sp);\n    if (v < sp) {\n        sp = v;\n        stx = q;\n    }\n    \n    return sp;\n}\n\nvec3 wt = vec3(0.0);\n\nfloat map(vec3 p) {\n    float k = 0.25;\n    \n    vec3 qa = p;\n    vec3 qb = p + vec3(0.0, 0.0, 2.0);\n    \n    qa.z = (fract(qa.z * k) - 0.5) / k;\n    qb.z = (fract(qb.z * k) - 0.5) / k;\n\n    float pz = floor(p.z * 2.0) / (3.141592 * 2.0);\n    float spk = sin(pz * 6.0 + iTime * 4.0)*0.5+0.5;\n    float h = mix(1.7, 2.3, smoothstep(0.0, 1.0, spk));\n\n    float u = spikesector(qa, h, 1.0);\n    wt = stx;\n    \n    qb.xy *= rot(3.141592 * 0.5);\n    float v = spikesector(qb, h, 1.0);\n    //u = min(u, v);\n    if (v < u) {\n        u = v;\n        wt = stx;\n    }\n\n    return u;\n}\n\nvec3 normal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for (int i = 0; i < 30; ++i) {\n        t += map(o + r * t);\n    }\n    return t;\n}\n\nvec3 tex(vec3 p) {\n    vec3 ta = texture(iChannel0, p.yz).xyz;\n    vec3 tb = texture(iChannel0, p.xz).xyz;\n    vec3 tc = texture(iChannel0, p.xy).xyz;\n    return (ta * ta + tb * tb + tc * tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 o = vec3(0.125, 0.125, -6.0 + iTime);\n    vec3 r = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.33));\n    \n    r.xy *= rot(iTime * 0.25);\n    r.xz *= rot(iTime * 0.5);\n    \n    float t = trace(o, r);\n    \n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    float aoc = map(w + sn * 0.1);\n    float fd = map(w);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.1 + fd * 100.0);\n    \n    float prod = dot(sn, -r);\n    \n    fog *= prod;// * aoc;\n    \n    vec3 tx = tex(wt);\n    \n    tx *= fog;\n    \n\tfragColor = vec4(sqrt(tx), 1.0);\n}","name":"Image","description":"","type":"image"}]}