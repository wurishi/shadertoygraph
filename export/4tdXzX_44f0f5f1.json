{"ver":"0.1","info":{"id":"4tdXzX","date":"1480888215","viewed":1252,"name":"XY oscilloscope","username":"inka","description":"XY oscilloscope work in progress","likes":14,"published":1,"flags":64,"usePreview":0,"tags":["oscilloscope","lissajous"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Md2GD1","filepath":"https://soundcloud.com/jerobeamfenderson/jerobeam-fenderson-nuclear","previewfilepath":"https://soundcloud.com/jerobeamfenderson/jerobeam-fenderson-nuclear","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n\nBASED ON: https://www.shadertoy.com/view/MsXGDn\n\nReference: https://www.youtube.com/watch?v=YqSvkNjWnnQ\n\nW I P. Please help out with the code if you have any tips on removing\nthe straight lines popping up, speeding up the code (can the for loop be avoided?)\nand straightening up the shape.. it seems to have some offset problem (compare with ref)\n\njust getting started with shaders i am very happy for all the help :)\n\n\n*/\n\n#define ReturnTuning .224399476\n#define PhaseScaling 2.0\n#define PointSmallness 100.0\n#define NumSamples 100\n\n#define PI 3.141592654\n\nvec2 getPoint(float x) {\n    float scale = 3.0;\n    \n    float pointX=(texture(iChannel0,vec2(x,1.0)).x) * scale;\n    float pointY=(texture(iChannel0,vec2(fract(x - ReturnTuning),1.0)).x) * scale;\n\t//float pointX = sin(x * PI * 2.);\n    //float pointY = cos(x * PI * 2.);\n    return vec2(pointX, pointY) - scale / 2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy)*2.0-1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n    //uv.x -= 0.8;\n    \n\tfloat c=0.0;\n\tfloat m = 1.0;\n    \n    vec2 pointA = getPoint(0.); //getPoint(0.);\n    \n\tfor(int i=0;i<NumSamples;i++)\n\t{\n\t\tfloat x = float(i)/float(NumSamples);\n        vec2 pointB = getPoint(x);\n\n        vec2 pa = uv - pointB; \n        vec2 ba = pointA - pointB;\n        \n        float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n        \n        vec2 q = pa - ba * h;\n        \n        m = min( m, dot( q, q ) );\n\t\t\n        pointA = pointB;\n        \n\t}\n    \n    m = sqrt( m );\n\tm = smoothstep(0.01, 0.0, m);\n\n\tfragColor = mix(vec4(0.0), vec4(0.2, 1.0, 0.1, 1.0), m);\n}\n","name":"Image","description":"","type":"image"}]}