{"ver":"0.1","info":{"id":"mtGBDW","date":"1702060222","viewed":34,"name":"moon's orbit around earth","username":"tsakal","description":"moon's orbit around earth","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["moon","moonphases"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//inspiration from https://www.shadertoy.com/view/cdKyRw\nconst float pi = acos(-1.);\nconst float pd = 2.*pi;\nconst float ph = pi/2.;\nconst float deg = pi/180.;\nconst float scale = 5.;\n\nvec3 backColor = vec3(0.0, 0.0, 0.05); // background\nvec3 earthColor = vec3(0.0, 0.55, 0.0); // earth\nvec3 moon_LightColor = vec3(1., 1., .0625); // moon light fill\nvec3 moon_ShadeColor = vec3(2./3.); // moon shade fill\n\nfloat sdCircle( vec2 p, float r ) {\n    return length(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n    float aspect = iResolution.x / iResolution.y; \n    p *= scale;\n    float earth_Radius = scale/3.;\n    float earth_Gap = scale - earth_Radius;\n    float earth_sd = sdCircle(p, earth_Radius); \n    vec3 col = (scale - length(p)) * backColor; // background\n    if(earth_sd < 0.0) col = vec3(smoothstep(.2, earth_sd*2., .0)) * earthColor;\n\n    float moon_Radius = earth_Gap/4.;\n  \tfloat moon_Gap = moon_Radius/6.;\n    float moon_Angle = mod(6.*iTime, 360.)*deg;\n    vec2 moon_pos = vec2((aspect*scale-moon_Gap-moon_Radius) * cos(moon_Angle), (scale-moon_Gap-moon_Radius) * sin(moon_Angle));\n    float moon_sd = sdCircle(p - moon_pos, moon_Radius);\n    \n    float moon_ShadeRadius = moon_Radius;\n  \tfloat moon_LightAngle = (moon_Angle<=pi?0.:pd)+(ph-.5*moon_Angle);\n  \tfloat moon_Illumination = 1. - 2.*cos(moon_LightAngle); \n    vec2 moon_Shade_pos = vec2(\n      \t\t\t(aspect*scale-moon_Gap-moon_Radius*moon_Illumination) * cos(moon_Angle), \n      \t\t\t(scale-moon_Gap-moon_Radius*moon_Illumination) * sin(moon_Angle));\n    float moon_Shade_sd = sdCircle(p - moon_Shade_pos, moon_ShadeRadius);\n  \tif(moon_sd < 0.) col = vec3(smoothstep(.3, moon_Shade_sd/2., 0.0)) * moon_ShadeColor;\n  \tif(moon_Shade_sd > 0. && moon_sd < 0.) col = vec3(smoothstep(.3, moon_sd/2., 0.0)) * moon_LightColor;\n       \n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}