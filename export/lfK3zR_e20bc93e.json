{"ver":"0.1","info":{"id":"lfK3zR","date":"1712340584","viewed":50,"name":"power on sequence","username":"int_45h","description":"hex grid shenanigans","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec2 s = vec2(1., 1.73205);\n\n// https://www.shadertoy.com/view/XdGfRR\nfloat hash12(vec2 p)\n{\n\tuvec2 q = uvec2(ivec2(p)) * uvec2(1597334673U, 3812015801U);\n\tuint n = (q.x ^ q.y) * 1597334673U;\n\treturn float(n) * 2.328306437080797e-10;\n}\n\nvec2 direction(float f)\n{\n    float t = f*2.0*PI;\n    return vec2(cos(t), sin(t));\n}\n\nfloat perlin_2d(vec2 p)\n{\n    vec2 p_grid = floor(p);\n    vec2 p_cell = fract(p);\n    \n    float p0 = dot(direction(hash12(p_grid + vec2(0,0))), p_cell - vec2(0,0));\n    float p1 = dot(direction(hash12(p_grid + vec2(1,0))), p_cell - vec2(1,0));\n    float p2 = dot(direction(hash12(p_grid + vec2(0,1))), p_cell - vec2(0,1));\n    float p3 = dot(direction(hash12(p_grid + vec2(1,1))), p_cell - vec2(1,1));\n    \n    p_cell = p_cell * p_cell * (3.-2.*p_cell);\n    \n    return mix(\n        mix(p0,p1,p_cell.x),\n        mix(p2,p3,p_cell.x),\n        p_cell.y\n    );\n}\n\n// https://www.shadertoy.com/view/NstBDB\nvec4 get_hex(vec2 uv)\n{\n    vec4 hexID = floor(vec4(uv, uv - vec2(.5, 1))/s.xyxy) + .5;\n    vec4 hexUV = vec4(uv - hexID.xy*s, uv - (hexID.zw + .5)*s);\n    \n    return dot(hexUV.xy, hexUV.xy) < dot(hexUV.zw, hexUV.zw)\n        ? vec4(hexUV.xy, hexID.xy) \n        : vec4(hexUV.zw, hexID.zw + .5);    \n}\n\nfloat sd_circle(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\nfloat sd_hexagon(vec2 p)\n{\n    p = abs(p);\n    return 2.*max(dot(s*.5, p),p.x);\n}\n\nfloat sd_hex_grid(vec2 p)\n{\n    vec4 h = get_hex(p);\n    return sd_hexagon(h.xy);\n}\n\n// https://www.shadertoy.com/view/wtt3z2\nvec2 distort_uv(vec2 uv, float fact)\n{\n    float d = length(uv);\n    float p = atan(uv.x,uv.y);\n    d = d*(1.+fact*d*d);\n    return d*vec2(sin(p),cos(p))+.5;\n}\n\nfloat screen_dist(vec2 uv)\n{\n    return length(uv-.5*vec2(1., iResolution.y/iResolution.x));\n}\n\n#define BLUR .1\n#define CHROMA 1.015\n// https://www.shadertoy.com/view/DlfSz8\nvec3 crt(vec2 uv, float amt)\n{\n    vec2 fragCoord = uv*iResolution.xy;\n    vec2 edge = smoothstep(0., BLUR, uv)*(1.-smoothstep(1.-BLUR, 1., uv));\n    vec3 col_orig = texture(iChannel0, uv).rgb;\n    amt = clamp(amt, 0., .75);\n    \n    vec3 col = vec3(\n        texture(iChannel0, (uv-.5)*CHROMA+.5).r,\n        texture(iChannel0, uv).g,\n        texture(iChannel0, (uv-.5)/CHROMA+.5).b\n    )*edge.x*edge.y;\n    \n    if(mod(fragCoord.y, 2.)<1.) col.rgb*=.7;\n    else if(mod(fragCoord.x, 3.)<1.) col.rgb*=.7;\n    else col*=1.1;\n    \n    return mix(col, col_orig, amt);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 uv_t = fragCoord/iResolution.xy;\n    vec2 uv2 = distort_uv(uv, -0.2);\n    vec2 uv2_t = distort_uv((uv_t*2.-1.)*.5, -0.2);\n    \n    float size = 10.;\n    vec4 hx = get_hex(uv2*size);\n    float d = sd_hexagon(hx.xy);\n    \n    float hd_mask = screen_dist((hx.zw)/size)*(perlin_2d(hx.zw/1.)*.5+.5);\n    \n    float o = cos(iTime+PI)*.5+.5;\n    float screen_mask = mix(1., length(uv), o);\n    \n    vec3 col = crt(uv2_t, 1.-screen_mask);\n    \n    float offset = .015;\n    col = (mix(col, vec3(0.05), smoothstep((0.-offset)+o, (0.025-offset)+o, hd_mask)));\n    //col = vec3(mix(col, vec3(.8), smoothstep(.95,1.,d)*screen_mask));\n    col = vec3(mix(col, (1.-col), smoothstep(.95,1.,d)*screen_mask));\n    \n    //col = vec3(d);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}