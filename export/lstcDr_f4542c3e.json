{"ver":"0.1","info":{"id":"lstcDr","date":"1518564376","viewed":403,"name":"light rays","username":"BadBadDog","description":"screen space light shafts","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["lightraysraysrays"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n   \tvec4 orig = texture(iChannel0, uv);\n   \tvec4 rays = texture(iChannel1, uv);\n    \n    vec4 color = mix( orig*1.2-vec4(0.2), rays, 0.03 );\n  \t\n   \tfragColor = vec4( color.rgb, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// as per GPU Gems\n\nconst float NUM_SAMPLES = 30.0;\n\nfloat threshold = 0.95;\nfloat Density = 0.5;\nfloat Weight = 0.9; \nfloat Decay = 0.9;\nfloat Exposure = 5.5;\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 ScreenLightPos = vec2( sin(iTime), 0.8 );\n    \n\n\t// Calculate vector from pixel to light source in screen space.\n   \tvec2 deltaTexCoord = (uv - ScreenLightPos.xy);\n  \t\n    // Divide by number of samples and scale by control factor.\n  \tdeltaTexCoord *= 1.0 / NUM_SAMPLES * Density;\n  \t\n    // Store initial sample.\n   \tvec3 color = smoothstep( threshold, 1.0, texture(iChannel0, uv).xyz );\n  \t\n    // Set up illumination decay factor.\n   \tfloat illuminationDecay = 1.0;\n  \t\n    // Evaluate summation from Equation 3 NUM_SAMPLES iterations.\n   \tfor (float i = 0.0; i < NUM_SAMPLES; i++){\n    \t// Step sample location along ray.\n    \tuv -= deltaTexCoord;\n    \t// Retrieve sample at new location.\n   \t\tvec3 smpl = smoothstep( threshold, 1.0, texture(iChannel0, uv).xyz );\n    \t// Apply sample attenuation scale/decay factors.\n    \tsmpl *= illuminationDecay * Weight;\n    \t// Accumulate combined color.\n    \tcolor += smpl;\n    \t// Update exponential decay factor.\n    \tilluminationDecay *= Decay;\n  \t}\n  \t// Output final color with a further scale control factor.\n   \tfragColor = vec4( vec3(color.g*Exposure-0.2), 1.0 );\n}","name":"Buf A","description":"","type":"buffer"}]}