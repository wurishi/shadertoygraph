{"ver":"0.1","info":{"id":"ddBXDm","date":"1670390682","viewed":421,"name":"Cut glass","username":"ChunderFPV","description":"A slight modification of my last raymarch but with cubes, a smaller loop and AA.","likes":27,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","glass","aa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(a) (cos(radians(vec3(90, 30, -30))-((a)*6.2832))*.5+.5)  // hue pallete\n#define RT(a) mat2(cos(m.a*1.571+vec4(0,-1.571,1.571,0)))          // rotate\nfloat cubes(vec3 p) { p = abs(p-round(p)); return max(p.x, max(p.y, p.z)); }\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float aa = 2., // anti-aliasing (1 = off)\n          d, s;\n    vec2 R = iResolution.xy,\n         m = (iMouse.xy/R*4.)-2.,\n         o;\n    vec3 c = vec3(0), // black background\n         cam = vec3(vec2(.5), iTime/4.),\n         u, v;\n    if (iMouse.z < 1.) m = vec2(cos(iTime/8.)*.5+.5); // rotate with time\n    mat2 pitch = RT(y), \n         yaw   = RT(x);\n    for (int k = 0; k < int(aa*aa); k++) // aa loop\n    {\n        o = vec2(k%2, k/2)/aa; // aa offset\n        u = normalize(vec3((U-.5*R+o)/R.y, .7));\n        u.yz *= pitch;\n        u.xz *= yaw;\n        d = 0.; // step dist for raymarch\n        for (int i = 0; i < 50; i++) // raymarch loop\n        {\n            s = smoothstep(.2, .25, cubes(cam+u*d)-.05);\n            if (s < 0.01) break;\n            d += s;\n        }\n        v = d*.01*H(length(u.xy)); // objects & color\n        c += v + max(v, .5-H(d));  // add to bg\n    }\n    c /= aa*aa;\n    C = vec4(exp(log(c)/2.2), 1);\n}","name":"Image","description":"","type":"image"}]}