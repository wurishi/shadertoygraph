{"ver":"0.1","info":{"id":"NtXSz2","date":"1626028815","viewed":152,"name":"AntiPod - Electrophoresis","username":"Flopine","description":"A shader made as a loop for a track from ThronoCrigger, check out his album!!! \nhttps://thronocrigger.bandcamp.com/track/electrophoresis","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["3d","raymarching","glow","chromatic","diffract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings and FabriceNeyret for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv_centered = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    vec2 uv = fragCoord.xy/iResolution.xy; \n    \n    fragColor = vec4(texture(iChannel0, uv).r,\n        \t\ttexture(iChannel0, uv+length(uv_centered*0.006)).g,\n        \t\ttexture(iChannel0, uv+length(uv_centered*0.006)).b,\n                1.);\n                \n    fragColor = sqrt(fragColor);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define cyl(p,r,h) max(length(p.xy)-r,abs(p.z)-h)\n#define mo(p,d) p=abs(p)-d;if(p.y>p.x)p=p.yx;\n\n#define hash21(x) fract(sin(dot(x,vec2(23.5,32.5)))*1253.6)\n#define hash11(x) fract(sin(x)*19.5)\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre)))\n\n#define dt(sp,off) fract((iTime+off)*sp)\n#define easeout(sp,off) easeOutExpo(dt(sp,off))\n#define ANIM\n\nfloat easeOutExpo (float x)\n{ return x == 1. ? 1. : 1. - exp2(-10. * x); }\n\nfloat stmin (float a, float b, float k, float n)\n{\n  float st = k/n;\n  float u = b-k;\n  return min(min(a,b),0.5*(u+a+mod(u-a+st,2.*st)-st));\n}\n\nfloat sc (vec3 p, float d)\n{\n  p = abs(p);\n  p = max(p,p.yzx);\n return min(p.x,min(p.y,p.z))-d;\n}\n\nfloat g1=0.;\nfloat SDF (vec3 p)\n{\n  float per = 3.3;\n  float id = floor((p.x-per*.5)/per);\n  p.x = mod(p.x-per*.5,per)-per*0.5;\n  vec3 pp = p;\n\n  float r = 0.05;\n  #ifdef ANIM\n      r += sin(p.y+dt(5.,hash11(id))*6.28)*0.03;\n  #endif\n  float lasers = cyl(p.xzy,r,5.);\n  g1 += 0.01/(0.01+lasers*lasers);\n  float d = lasers;\n\n  p.y = abs(p.y)-(1.+sin(id*2.)+3.*1.5);\n  float c1 = cyl(p.xzy,.5,1.5);\n  vec3 newp = p.xzy-vec3(0.,0.,2.);\n  c1 = stmin(c1,cyl(newp,.7,.2),.3,4.);\n  d = min(d,c1);\n\n  mo(p.zy,vec2(.4));\n  mo(p.zx,vec2(.5,.7));\n  mo(p.yx,vec2(.3));\n  d = min(d,cyl(p.yzx,.1,1.));\n\n  return d;\n}\n\nfloat diffract (vec2 uv)\n{\n    float r = 5.;\n    #ifdef ANIM\n        r = dt(.3,0.);\n    #endif\n    float m = sin(length(uv-(floor(atan(uv.y,uv.x)*7.)))-r*6.28);\n    m = 1.-AAstep(0.05,abs(m)-0.3);\n    m *= length(uv)-0.8;\n    return m;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) \n{\n  vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n  uv += diffract(uv)*0.5;\n\n  vec3 ro = vec3(0.0,0.0,-7.),rd=normalize(vec3(uv*0.92,1.)),col=vec3(0.),p=ro;\n  float shad, dither=hash21(uv);\n  bool hit = false;\n\n  for(float i=0.;i<80.;i++)\n  {\n    float d = SDF(p);\n    if(d<0.001)\n    {\n      hit = true;\n      shad = i/80.;\n      break;\n    }\n    d *= .7+dither*.2;\n    p += d*rd;\n  }\n\n  if (hit)\n  {\n    col = vec3(shad*.4);\n  }\n  col += g1;\n  fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}