{"ver":"0.1","info":{"id":"ltBSDw","date":"1444086122","viewed":374,"name":"Vault","username":"dila","description":"My GPU can't take anymore :(","likes":22,"published":1,"flags":0,"usePreview":1,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"float cosh2(float x, float a)\n{\n    float xa = x / a;\n \treturn 0.5 * a * (exp(xa) + exp(-xa));   \n}\n\nfloat map(vec3 p)\n{\n    vec3 fp = fract(p);\n    vec3 pa = p + 0.5;\n    vec3 fpa = fract(pa);\n    vec3 q = vec3(fpa.x, pa.y, fpa.z) * 2.0 - 1.0;\n    vec3 cq = vec3(fp.x, p.y, fp.z) * 2.0 - 1.0;\n    \n    float ctx = cosh2(q.x, 0.5);\n    float ctz = cosh2(q.z, 0.5);\n    q.y += mix(ctx, ctz, 0.5);\n    \n    float cx = length(q) - 2.0;\n    \n    float blend = 1.0 / (1.0 + max(p.y + 0.5, 0.0));\n    \n    float vp = length(cq.xz) - 0.3;\n    \n    cx = mix(-cx, vp, blend);\n    \n    float cl = p.y + 0.5;\n\n    return min(cx, cl);\n}\n\nvec3 normal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n \tfloat t = 0.0;\n    for (int i = 0; i < 64; ++i) {\n     \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.3;\n        if (d < 0.001) {\n            break;\n        }\n    }\n    return t;\n}\n\nmat2 rot(float t)\n{\n\treturn mat2(cos(t), sin(t), -sin(t), cos(t));\n}\n\nvec3 dolight(vec3 o, vec3 w, vec3 r, vec3 sn)\n{\n    vec3 lp = vec3(0.0, 0.0, 0.0);\n    vec3 del = lp - w;\n    float len = dot(del, del);\n    float ld = sqrt(len);\n    del /= ld;\n    float lt = trace(lp+sn*0.01, -del);\n    float lm = 1.0;\n    if (lt < ld) {\n    \tlm = 0.0;\n    }\n    vec3 lf = -r;\n    float la = pow(max(dot(lf, del), 0.0), 4.0);\n    float fo = 1.0 / (1.0 + len * 0.01);\n    float fl = la * lm * fo * max(dot(sn, del), 0.0);\n    vec3 lcol = vec3(1.0, 1.0, 0.5);\n    vec3 wc = mix(vec3(0.9,0.9,1.0), lcol, 0.5+0.5*sn.y);\n    vec3 fc = mix(wc, lcol*fl, 0.95);\n    return fc;\n}\n\nvec3 _texture(vec3 p)\n{\n \tvec3 ta = texture(iChannel0, p.yz).xyz;\n    vec3 tb = texture(iChannel0, p.xz).xyz;\n    vec3 tc = texture(iChannel0, p.xy).xyz;\n    return (ta + tb + tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.3));\n    vec3 o = vec3(0.0, 0.0, -1.3);\n    \n    r.yz *= rot(3.14159*0.125);\n    o.xz *= rot(iTime*0.75);\n    r.xz *= rot(iTime*0.75);\n    \n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    float fd = map(w);\n\n    vec3 tex = _texture(w);\n    float bmp = dot(tex*2.0-1.0,vec3(1.0));\n    sn.y = sign(sn.y) * abs(sn.y * bmp);\n    sn = normalize(sn);\n    \n    vec3 lit = dolight(o, w, r, sn);\n    float fog = 1.0 / (1.0 + t * t * 0.1 + fd * 100.0);\n    vec3 fc = fog * tex * lit;\n\tfragColor = vec4(sqrt(fc),1.0);\n}","name":"Image","description":"","type":"image"}]}