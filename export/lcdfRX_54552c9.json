{"ver":"0.1","info":{"id":"lcdfRX","date":"1733347752","viewed":35,"name":"My first shader demo ever","username":"Rogprog","description":"My first shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["newbie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\n\nfloat cnv(float val) {\n\n    return (1.0 + sin(val))/2.0;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 1.0 - 2.0*fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(cnv(2.77*uv.x + 1.66*iTime),cnv(uv.y + iTime),cnv(uv.x*1.88 + uv.y* 3.88 + sin(iTime)));\n\n    vec3 col2 = vec3(cnv(uv.x*sin(uv.y+PI*iTime)),0.0,0.0);\n\n\n    vec2 mask = vec2(sin(1.777 * uv.y + sin(0.5555*uv.x + iTime*1.321) + iTime),sin(uv.x * 2.99 + iTime*1.4444));\n\n    //if ((mask.x < 0.0) && (mask.y < 0.0)) col = col2;\n    \n    if (length(mask) < 0.5) col = col2;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}