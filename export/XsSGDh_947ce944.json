{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":1,"type":"texture","id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"cubemap","id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":3,"type":"cubemap","id":"4sfGzn","filepath":"/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"vec3 roty(float th, vec3 p) { \r\n\tfloat c=cos(th),s=sin(th); \r\n\treturn vec3(c*p.x-s*p.z,p.y,c*p.z+s*p.x); \r\n}\r\nvec3 rotx(float th, vec3 p) { \r\n\tfloat c=cos(th),s=sin(th); \r\n\treturn vec3(p.x,c*p.y-s*p.z,c*p.z+s*p.y); \r\n}\r\n\r\n\r\nfloat hash(float n) {return fract(sin(n * 0.1346) * 43758.5453123);}//from iq\r\nvec2 noise( in vec3 x )\r\n{\r\n    vec3 p = floor(x);\r\n    vec3 f = fract(x);\r\n\tf = f*f*(3.0-2.0*f);\r\n\t\r\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\r\n\tvec4 rg = texture( iChannel0, (uv+ 0.5)/256.0, -100.0 ).yxwz;\r\n\treturn mix( rg.xz, rg.yw, f.z );\r\n}\r\n\r\nfloat map(vec3 p) {\r\n\treturn length(p)-1.0;\r\n}\r\nvec3 nor(vec3 p) {\r\n\tfloat h=map(p);\r\n\tvec2 d=vec2(0.01,0.0);\r\n\treturn normalize(vec3(map(p+d.xyy),map(p+d.yxy),map(p+d.yyx))-h);\r\n}\r\nvec3 glasscol=vec3(0.06,0.1,0.15);\r\n\r\n//Rotation matrix by Syntopia\r\nmat3 rotmat(vec3 v, float angle)\r\n{\r\n\tfloat c = cos(angle);\r\n\tfloat s = sin(angle);\r\n\t\r\n\treturn mat3(c + (1.0 - c) * v.x * v.x, (1.0 - c) * v.x * v.y - s * v.z, (1.0 - c) * v.x * v.z + s * v.y,\r\n\t\t(1.0 - c) * v.x * v.y + s * v.z, c + (1.0 - c) * v.y * v.y, (1.0 - c) * v.y * v.z - s * v.x,\r\n\t\t(1.0 - c) * v.x * v.z - s * v.y, (1.0 - c) * v.y * v.z + s * v.x, c + (1.0 - c) * v.z * v.z\r\n\t\t);\r\n}\r\n\r\nvec4 warp(vec3 p)\r\n{\r\n\tp=rotmat(normalize(vec3(1.0,0.0,0.0)),p.x*1.5)*p;\r\n\tfloat cyr=sqrt(1.0-p.x*p.x)*0.6;\r\n\tcyr*=0.6+0.4*sin(7.0*atan(p.y,p.z));\r\n\tfloat dd=smoothstep(cyr*1.1,cyr,length(p.yz));\r\n\treturn vec4(p,dd);\r\n}\r\nfloat glassstep=0.05;\r\nfloat refr=1.04;\r\nvec4 trace(vec3 rs, vec3 rd, vec2 fragCoord ) \r\n{\r\n\tfloat t=0.0;\r\n\tvec3 p=rs;\t\r\n\tfloat inside=1.0;\r\n\tvec4 col=vec4(0.0,0.0,0.0,1.0);\r\n\t\r\n\tfloat A=dot(rd,rd);\r\n\tfloat B=2.0*dot(rd,rs);\r\n\tfloat C=dot(rs,rs)-1.0;\r\n\tfloat q=B*B-4.0*A*C;\r\n\tfloat spheret=(-B-sqrt(max(0.0,q)))/(2.0*A);\r\n\t//return vec4(q);\r\n\tp+=rd*spheret;\r\n\tfor (int i=0;i<64;++i) {\r\n\t\tfloat h=map(p);\r\n\t\th*=inside;\r\n\t\tif (h<=0.0) {\r\n\t\t\t// surface intersection\r\n\t\t\tp+=h*rd;\r\n\t\t\tvec3 n=nor(p);\r\n\t\t\tfloat nrd=dot(n,rd)*inside;\r\n\t\t\tif (nrd<0.0) \r\n\t\t\t{\r\n\t\t\t\tvec3 rr=reflect(rd,n);\r\n\t\t\t\tfloat rocc=max(0.0,rr.y*1.*inside);\r\n\t\t\t\tfloat fr=pow(1.0+nrd,5.0)*0.99+0.01;\r\n//\t\t\t\tif (inside<0.0)\r\n\t\t\t\t\r\n\t\t\t\tcol.xyz+=col.w*fr*3.0*rocc*pow(texture(iChannel3,rr).xyz,vec3(2.2));\r\n//\t\t\t\tcol.w=1.0;\r\n//\t\t\t\treturn col;\r\n//\t\t\t\tif (inside>0.0)\r\n\t\t\t\tif (q>0.1) rd=inside*normalize(refract(rd*inside,n,(inside<0.0)?refr:(1.0/refr)));\r\n\t\t\t\tinside=-inside;\r\n\t\t\t\tif (inside<0.0) h=hash(fragCoord.x+fragCoord.y*117.0)*glassstep;\r\n\t\t\t\tcol.w*=0.95;\r\n//\t\t\t\tcol.xyz+=0.2*glasscol;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfloat step=max(0.01,abs(h)*0.95);\r\n\t\tif (inside<0.0) {\r\n\t\t\tstep=min(step,glassstep);\r\n\t\t\tvec4 warp0 = warp(p);\r\n\t\t\tfloat warp1 = warp(p+vec3(0.0,0.02,0.0)).w;\r\n\t\t\tvec3 gcol=texture(iChannel1,warp0.yz*0.3+0.1).xyz;\r\n\t\t\tgcol=mix(gcol,vec3(0.5),-1.9);\r\n\t\t\tgcol*=vec3(0.5-(warp1-warp0.w));\r\n\t\t\tfloat dd=warp0.w*4.0;\r\n\t\t\tfloat k=exp(-step*dd);\r\n\t\t\tcol.xyz+=(1.0-k)*col.w*gcol;\r\n\t\t\tcol.w*=k;\r\n\t\t\t\r\n\t\t\tk=exp(-step*0.5);\r\n\t\t\tcol.xyz+=(1.0-k)*col.w*glasscol;\r\n\t\t\tcol.w*=k;\r\n\t\t}\r\n\t\telse step=min(step,5.0);\r\n\t\tp+=step*rd;\r\n\t}\r\n\tcol.w=1.0-col.w;\r\n\t//col=vec4(1.0);\r\n\tcol.xyzw*=smoothstep(0.0,0.1,q); // anti-aliasing!!!\r\n///\tif (fragCoord.x>iResolution.x*0.5) return col.wwww;\r\n\tcol.w=1.0-col.w;\r\n\t//return normalize(rd.xyz).xyzz*col.w;\r\n\tfloat flot=(-1.0-p.y)/rd.y;\r\n\tvec3 flo=p+flot*rd;\r\n\tvec3 bg=vec3(1.0);\r\n\tif (dot(rd,flo-rs)>0.0) \r\n\t{\r\n\t\tbg.xyz=vec3(sqrt(1.05-1.0/dot(flo,flo)));\r\n\t\tbg=mix(bg,vec3(1.0),smoothstep(0.,0.1,q));\r\n//\t\t\r\n//\t\tbg.xyz=fract(flo+0.5);\r\n\t}\r\n//\telse\t\t\r\n//\tbg*=0.6+0.5*\r\n//\t\tpow(texture(iChannel2,rd)*0.5 + 0.5*texture(iChannel3,rd),vec4(2.2)).xyz;\r\n\tvec2 strip;\r\n\tfloat sca=2.;\r\n\tstrip.x=(atan(rd.x,rd.z)*sca*24.0/3.141592);\r\n\tstrip.y=(asin(rd.y)*10.0*sca);\r\n\tfloat f=hash(floor(strip.x)+floor(strip.y)*117.0);\r\n\tstrip=fract(strip);\r\n\tif (f<0.5) strip.x=1.0-strip.x;\r\n\r\n\tfloat stripe=smoothstep (0.05,0.08,abs(length(strip)-0.5));\r\n\t\t  stripe*=smoothstep(0.05,0.08,abs(length(1.0-strip)-0.5));\r\n\tstripe=1.0-stripe;\r\n\tstripe*=smoothstep(0.0,0.9,rd.y);\r\n\tbg*=1.0-stripe*0.2;\r\n\tcol.xyz+=col.w *bg;\r\n\treturn col;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 uv = (fragCoord.xy-iResolution.xy*0.5) / iResolution.yy * 2.0;\r\n\tvec2 m=iMouse.xy/iResolution.xy;\r\n\tfloat th=(m.y*0.1-0.5)*1.0;\r\n\tvec3 rs=rotx(th,vec3(0,0,-2.0));\r\n\tvec3 re=rotx(th,vec3(uv*3.0,2.0));\r\n\tth=(m.x-0.5)*6.0+iTime*0.071-5.1;\r\n\trs=roty(th,rs);\r\n\tre=roty(th,re);\t\r\n\tvec3 rd=normalize(re-rs);\r\n\tvec4 col=trace(rs,rd,fragCoord);//*vec4(0.4,0.5,0.8,1.0);\r\n\tcol+=4.0/255.0*hash(fragCoord.x+fragCoord.y*117.0);\r\n\tcol=mix(col,smoothstep(0.0,1.0,col),0.5); // everything looks better with an s curve ;)\r\n\tcol=pow(col,vec4(0.4));\r\n\tcol*=vec4(smoothstep(2.0,0.0,length(uv*vec2(0.25,0.5))));\r\n\tfragColor = col;\r\n}\r\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsSGDh","date":"1386631859","viewed":9852,"name":"marble","username":"mmalex","description":"improvised glass marble","likes":189,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","glass","marble"],"hasliked":0,"parentid":"","parentname":""}}