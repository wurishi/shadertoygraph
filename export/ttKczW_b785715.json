{"ver":"0.1","info":{"id":"ttKczW","date":"1610629831","viewed":363,"name":"Simple 1-bit Image Filter","username":"jtodaone","description":"A fragment shader that transforms a texture to 1-bit style via random dithering. This does not work well with a moving image, because it relies on randomness.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d","retro","filter","dither","image","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat randomBounds(float lower, float upper, vec2 st) {\n    return random(st) * (upper - lower) + lower;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).xyz;\n    \n    const vec3 tint = vec3(0.85, 0.95, 1);\n    \n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    float luminance = dot(col, W);\n    \n    luminance += randomBounds(-0.5, 1.0, uv);\n    \n    if (luminance > 0.9) {\n        luminance = 1.0;\n    } else {\n        luminance = 0.0;\n    }\n    \n    col = vec3(luminance);\n    col = col * tint;\n    \n    fragColor = vec4(col,1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}