{"ver":"0.1","info":{"id":"3tjGWm","date":"1559793655","viewed":496,"name":"The most compact hueshift","username":"Artleet","description":"Hue shift by rotating color vector around diagonal unit vector.","likes":8,"published":1,"flags":0,"usePreview":1,"tags":["hue","hueshift","shift","colorprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hs(vec3 c, float s){\n    vec3 m=vec3(cos(s),s=sin(s)*.5774,-s);\n    return c*mat3(m+=(1.-m.x)/3.,m.zxy,m.yzx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    vec3 hue = hs(vec3(1., 0., 0.), -uv.x * 6.283);\n    col = mix(hue, col, floor(uv.y + .95));\n    fragColor = vec4(hs(col, iTime), 1.);\n    \n}","name":"Image","description":"","type":"image"}]}