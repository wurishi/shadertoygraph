{"ver":"0.1","info":{"id":"sdS3zh","date":"1616954973","viewed":459,"name":"relaxing patern","username":"mdb","description":"just sit, put a Head phone and put the shader full screen and you can just lisen to the music and relax","likes":18,"published":3,"flags":64,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XtfSWM","filepath":"https://soundcloud.com/ceket/peter-von-poehl-the-story-of","previewfilepath":"https://soundcloud.com/ceket/peter-von-poehl-the-story-of","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//////////////////////////////////////////////////////////////////////\nuint seed = 0u;\nvoid hash(){\n    seed ^= 2747636419u;\n    seed *= 2654435769u;\n    seed ^= seed >> 16;\n    seed *= 2654435769u;\n    seed ^= seed >> 16;\n    seed *= 2654435769u;\n}\nvoid initRandomGenerator(vec2 uv){\n    seed = uint(uv.y*iResolution.x + uv.x);\n}\n\nfloat random(){\n    hash();\n    return float(seed)/4294967295.0;\n}\n/////////////////////////////////////////////////////////////////////\nfloat noise(vec2 pos)\n{\n    vec2 id, id2, pt;\n    float d;\n    float dist = 1e5;\n    \n    id = floor(pos);\n    \n    for(float x = -1.0; x < 2.0; x++){\n    for(float y = -1.0; y < 2.0; y++){\n        id2 = id + vec2(x, y);\n        initRandomGenerator(id2);\n        pt = vec2(random(), random());\n        d = distance(pos, pt + id2);\n        dist = min(dist, d);\n    \n    }}\n    return max(0.0, 1.0 - dist);\n    \n}\nfloat fbm( vec2 pos )\n{\n    float f = 0.0;\n    float a = 1.0;\n    float d = 0.5;\n    a*=d;\n    f += a*noise(pos); pos*=2.01; a *= d;\n    f += a*noise(pos); pos*=2.01; a *= d;\n    f += a*noise(pos); pos*=2.01; a *= d;\n    f += a*noise(pos); pos*=2.01; a *= d;\n    f += a*noise(pos); pos*=2.01; a *= d;\n    f += a*noise(pos);\n    return f;\n}\nvec3 patern(vec2 pos){\n    float beat = texture(iChannel0, vec2(0.5, 0.0)).x;\n    float k = fbm(pos - vec2(0.0, 0.6*pow(texture(iChannel0, vec2(0.1, 0.0)).x, 8.0)));\n    float k2 = fbm(pos + 338.78 + k*4.0 + iTime*0.03);\n    k2*=0.7+beat*0.3;\n    return sin(vec3(k2*9.0, k2*7.0+beat*0.3, k2*6.0))*0.5+ 0.5;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    vec3 col = patern(uv*3.0);\n    //col +=  + texture(iChannel0, vec2(0.5, 0.0)).x*0.1;\n    //vec3 col = texture(iChannel0,vec2(fragCoord.x/iResolution.x*0.1, 0.0)).xyz;\n    uv.x *= iResolution.y/iResolution.x;\n    col *= (1.0 + pow(4.0*max(texture(iChannel0, vec2(0.95, 0.0)).x - texture(iChannel0, vec2(0.85, 0.0)).x, 0.0), 3.0));\n    col *= 0.5 + 0.5*pow( 16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y), texture(iChannel0, vec2(0.01, 0.0)).x*0.005 );\n    \n    float beat = texture(iChannel0, vec2(0.5, 0.0)).x;\n    col *= 1.0 + beat*1.5;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}