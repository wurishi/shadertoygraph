{"ver":"0.1","info":{"id":"cltfRf","date":"1701441689","viewed":866,"name":"Shield [284]","username":"Xor","description":"Inspired by @cmzw's [url=https://twitter.com/cmzw_/status/1729148918225916406]work[/url]","likes":93,"published":1,"flags":0,"usePreview":0,"tags":["3d","sphere","scifi","hex","golf","sub300"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"Shield\" by @XorDev\n    \n    Inspired by @cmzw's work: witter.com/cmzw_/status/1729148918225916406\n    \n    X: X.com/XorDev/status/1730436700000649470\n    Twigl: twigl.app/?ol=true&ss=-NkYXGfK5wEl4VaUQ9zS\n*/\nvoid mainImage( out vec4 O,vec2 I)\n{\n    //Iterator, z and time\n    float i,z,t=iTime;\n    //Clear frag and loop 100 times\n    for(O*=i; i<1.; i+=.01)\n    {\n        //Resolution for scaling\n        vec2 v=iResolution.xy,\n        //Center and scale outward\n        p=(I+I-v)/v.y*i;\n        //Sphere distortion and compute z\n        p/=.2+sqrt(z=max(1.-dot(p,p),0.))*.3;\n        //Offset for hex pattern\n        p.y+=fract(ceil(p.x=p.x/.9+t)*.5)+t*.2;\n        //Mirror quadrants\n        v=abs(fract(p)-.5);\n        //Add color and fade outward\n        O+=vec4(2,3,5,1)/2e3*z/\n        //Compute hex distance\n        (abs(max(v.x*1.5+v,v+v).y-1.)+.1-i*.09);\n    }\n    //Tanh tonemap\n    O=tanh(O*O);\n}","name":"Image","description":"","type":"image"}]}