{"ver":"0.1","info":{"id":"NdlBWl","date":"1645545540","viewed":105,"name":"rings and rays","username":"mathfigure","description":"Merely, a random visualization of a complex function.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["function","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by mathfigure 2022.02.22\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // input\n    vec2 p = (2.0*fragCoord - iResolution.xy) / iResolution.y;\n    float t = iTime;\n\n\t// z = (x + I y)^0.001 * 10000\n\tfloat z_abs = pow(p.x*p.x + p.y*p.y, 0.0005)*10000.0;\n\tfloat z_arg = atan(p.y,p.x) * 0.001;\n\tfloat z_re = z_abs * cos(z_arg);\n\tfloat z_im = z_abs * sin(z_arg);\n\n\t// colorization\n\tfloat c1 = sin(z_re-t);\n\tfloat c2 = sin(z_im-t);\n\tvec3 w = sin(t*vec3(0.3, 0.4, 0.5));\n\tvec4 c = vec4(c1, c2, 2.0*c1*c2, c1*c1 - c2*c2);\n\tvec3 rgb = c.zwx*w + c.wzy*(1.0-w);\n\n    // output\n    fragColor = vec4(rgb, 1.0) * length(p);\n}","name":"Image","description":"","type":"image"}]}