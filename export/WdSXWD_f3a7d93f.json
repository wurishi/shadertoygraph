{"ver":"0.1","info":{"id":"WdSXWD","date":"1553734443","viewed":914,"name":"Angled Directional Blur","username":"chibi_jame","description":"based off code from https://www.shadertoy.com/view/3s2Gzt\ntesting here before moving it to touchdesigner","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["blur","directional"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//looks good @50, can go pretty high tho\nconst int samples = 50;\n\nvec4 dirBlur(sampler2D tex, vec2 uv, vec2 angle)\n{\n    vec3 acc = vec3(0);\n    \n    const float delta = 2.0 / float(samples);\n    \n    for(float i = -1.0; i <= 1.0; i += delta)\n    {\n        acc += texture(tex, uv - vec2(angle.x * i, angle.y * i)).rgb;\n    }\n    \n    \n    return vec4(delta * acc, 0);\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    //quick converter so that I can input an angle and it'll always\n    float angle = 45.0;\n    float strength = 0.05;\n    \n    float r = radians(angle);\n    vec2 direction = vec2(sin(r), cos(r));\n    \n    fragColor = dirBlur(iChannel0, uv, strength*direction);\n}","name":"Image","description":"","type":"image"}]}