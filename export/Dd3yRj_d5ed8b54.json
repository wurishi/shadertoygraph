{"ver":"0.1","info":{"id":"Dd3yRj","date":"1695219465","viewed":27,"name":"irradiance","username":"suttree","description":"sit & wait","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["prototype"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(123.34, 456.21));\n    p += dot(p, p+45.32);\n    return fract(p.x*p.y);\n}\n\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 1.0);\n    vec3 d = vec3(0.50, 0.20, 0.25);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 normalizedCoord = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    uv *= .25;\n    uv *= 1.-fract(Hash21(vec2(-0.5, 2.75)));\n    \n    vec2 gv = fract(uv)-.5;\n    \n    float t = iTime*.05;\n    gv *= Rot(t);\n    \n    float d = length(uv) * 1.5-length(uv); // change colour and pattern\n    \n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float rays = 1.-fract(gv.x * gv.y*500.);\n    col += rays;\n    \n    vec2 id = floor(uv);\n    for(int y=-1;y<1;y++) {\n        for(int x=-1;x<1;x++) {\n            vec2 offs = vec2(x, y);\n            float n = cos(Hash21(id+offs));\n            col *= cos(iTime*.75+n*6.2831)*.5+1.;\n        }\n    }\n    \n    // Time varying pixel color\n    col -= 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}