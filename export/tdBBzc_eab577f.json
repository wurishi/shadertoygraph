{"ver":"0.1","info":{"id":"tdBBzc","date":"1590507692","viewed":61,"name":"Mandelbrot zoom(26.5.20)","username":"LucasWilson","description":"Mandelbrot shader, floating precision problems atm","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float bigmag = 3000.;\nfloat scale = 0.;\nconst float maxtimescale = 15.;\n\nvec2 cmpxmul(in vec2 a, in vec2 b) {\n\treturn vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\n}\n\nvec2 calcm(vec2 num) {\n    float i=0.;\n    vec2 num2 = vec2(0.,0.);\n    \n    while (length(num2) < bigmag && i < 500.) {\n    \tnum2 = cmpxmul(num2,num2) + num/scale;\n        i+=1.;\n    }\n    \n\treturn vec2(1.-length(num2)/bigmag, i);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    scale = 29. + (cos(iTime/20. - 3.142)+1.)*maxtimescale;\n    fragCoord.xy = (fragCoord.xy/iResolution.xy - vec2(.5))*iResolution.xy;\n    \n    vec3 camPos = vec3( vec2(-.000136705,0.00198882)*scale * iResolution.xy , pow(1.5, scale-20.)/10.);\n    vec2 fragOffset = (fragCoord-camPos.xy)/camPos.z;\n    \n\tfragColor = vec4(calcm(camPos.xy + fragOffset) / vec2(1.,200.), 0., 1.);\n}","name":"Image","description":"","type":"image"}]}