{"ver":"0.1","info":{"id":"lfdBRM","date":"1732873343","viewed":169,"name":"basic rompecabezas (205 chars)","username":"FabriceNeyret2","description":"short version inspired from jorge2017a2's 3895ch https://www.shadertoy.com/view/MftfzN","likes":16,"published":3,"flags":0,"usePreview":0,"tags":["2tweets","golf","rompecabezas"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// inspiration: https://www.shadertoy.com/view/MftfzN\n\n/**\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 4.*u/R.y,\n         I = ceil(U);                                                      // tile Id\n    U -= I-.5;                                                             // centered tile coordinates\n    U = length(U) * cos( mod(atan(U.y,U.x)+.785,1.57)-.785 + vec2(0,11) ); // 4-rotational symmetry\n    O = vec4( smoothstep(3./R.y, -3./R.y,length(U-vec2(.385,.1))-.15) );   // draw antialiased disc\n    mod(I.x+I.y,2.) < 1. ? O = 1.-O : O;                                   // checkered inversion    \n}\n\n/**/\n\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 4.*u/R.y,\n         I = ceil(U);                                                      // tile Id              \n    U =   length( U -= I-.5 )                                              // centered tile coordinates\n        * cos( mod(atan(U.y,U.x)+.8,1.57) + vec2(0,11) );                  // 4-rotational symmetry\n    O = .5 -   ( length(U-vec2(.34,.21))-.15 ) * R.yyyy/3.                 // draw antialiased disc\n             * ( mod(I.x+I.y,2.) - .5 );                                   // checkered inversion  \n}","name":"Image","description":"","type":"image"}]}