{"ver":"0.1","info":{"id":"wtj3R3","date":"1560558895","viewed":115,"name":"Daylight","username":"pi","description":"A simple daylight cycle thing.\n\nClick for a ball obstacle.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","shadows","daylight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat map(vec2 o)\n{\n    vec2 q = o - (iMouse.xy/iResolution.xy*2.-1.)*vec2(iResolution.x/iResolution.y,1.);\n    float l =length(q)-.1;\n    \n\treturn min(min(l,o.y-((sin(o.x*5.))/5.)+.3), length(o-0.2)-.1);    \n}\nfloat trace(vec2 o, vec2 d, out float m)\n{\n\tfloat t = 0.0;\n    m=1.;\n    for (int i = 0; i < 32; i++)\n    {\n        float d = map(o+d*t);\n        if (d < .001) break;\n        m=min(m,d/t);\n        t += d;\n    }\n    \n    return t;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy * 2. - 1.;\n    vec2 m = iMouse.xy /iResolution.xy * 2. - 1.;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    m.x *= iResolution.x/iResolution.y;\n\tvec2 hx = vec2(.5)/iResolution.y;\n    \n    vec3 fin = vec3(0);\n    \n    vec3 col = clamp(vec3(pow(map(uv),1./15.)),0.,1.);\n    \n    float a = (map(uv-hx)<0.?.5:0.)+(map(uv+hx)<0.?.5:0.);\n    if (a>0.) col=mix(col, 2. * texture(iChannel0, uv).rgb * (clamp(-map(uv)*5.,0.,1.)*0.3+.7), a);    \n    \n    vec2 ldir = vec2(cos(iTime/3.),sin(iTime/3.));\n\t\n    \n    fin = col * .3 * (vec3(1,1.1,1.15) + vec3(1.2,1.1,1.0)*.2 * max(0.,ldir.y));\n    \n    \n    float light = max(ldir.y,0.)/3.;//length(vec3(m-uv,1.));\n    float mp = 0.0;\n    float lightDist = trace(uv, normalize(ldir), mp); \n    \n    bool hit = map(uv + normalize(ldir) * lightDist) < .001;\n    if (!hit || lightDist > length(ldir))\n    {\n        fin += col * light * vec3(1.2,1.1,1.0) * mp;\n    }\n    \n    \n    fragColor = vec4(fin,1.0);\n}","name":"Image","description":"","type":"image"}]}