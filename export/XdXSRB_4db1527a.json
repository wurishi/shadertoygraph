{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n#define SinLayerX(frequency, amplitude, delta) amplx += amplitude; colorx += (sin(uv.x*6.28*frequency*correct + (iTime*delta*timeMultiplier))*(amplitude*0.5)+(amplitude*0.5));\n#define SinLayerY(frequency, amplitude, delta) amply += amplitude; colory += (sin(uv.y*6.28*frequency + (iTime*delta*timeMultiplier))*(amplitude*0.5)+(amplitude*0.5));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tconst float timeMultiplier = 1.0;\n\t\n\tfloat correct = iResolution.x / iResolution.y;\n\t\n\tfloat colorx = 0.0;\n\tfloat colory = 0.0;\n\tfloat amplx  = 0.0;\n\tfloat amply  = 0.0;\n\t\n\tSinLayerY( 8.0, 0.5 , -0.6);\n\tSinLayerY( 3.0, 0.3 ,  2.0); \n\tSinLayerY( 7.0, 0.15, -3.0);\n\tSinLayerY(17.0, 0.05,  5.0);\n\n\tSinLayerX( 8.0, 0.05,  3.0);\n\tSinLayerX( 3.0, 0.5,  -5.0); \n\tSinLayerX( 7.0, 0.3,   0.6);\n\tSinLayerX( 5.0, 0.15, -2.0);\n\t\n\t#if 1\n\t\tfloat color = colorx/amplx * colory/amply;\n\t#else\n\t\tfloat color = (colorx + colory) / (amplx + amply);\n\t#endif\n\t\n\tcolor = clamp(color, 0.0, 1.0);\n\t\n\tfloat red = color;\n\tfloat green = color;\n\tfloat blue = color;\n\t\n\t\n\tfragColor = vec4(red,green,blue,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdXSRB","date":"1403065532","viewed":350,"name":"Sine Noise","username":"demofox","description":"Trying to make some monochromatic noise using the sum and product of sine waves of various frequencies and amplitudes.\n\nGot a completely different effect though and I can't seem to be able to rename a shader once it's a draft!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}