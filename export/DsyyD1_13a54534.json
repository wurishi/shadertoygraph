{"ver":"0.1","info":{"id":"DsyyD1","date":"1696019173","viewed":79,"name":"great crash!!","username":"chenxianming","description":"made this stone try it fractal but NOT MATCH","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["marble","stone","rgbanoise3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define rot( r ) mat2(cos(r), sin(r), -sin(r), cos(r) )\n\nfloat cu( vec3 p ){\n    float d = .1,\n          py = p.y;\n\n    py = abs( py ) - .5; // equal to each side\n    py = abs( py );\n    \n    d = max(\n      max( abs( p.x ) - .5 * py, abs( p.z ) - .5 * py ),\n      abs( p.y ) - .5\n    );\n    \n    return d;\n}\n\nfloat mp( vec3 p ){\n    \n    float c = 8.;\n    \n    for( float i = 0.; i < c; i++ ){\n        p.xz = abs( p.xz );\n        p.x += texture( iChannel1, p ).g * .012;\n        p.xy *= rot( i / c );\n        p.x = abs( p.x );\n        p.xz *= rot( i / c );\n    }\n\n    return cu( p );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = ( (fragCoord/I.xy - .5) * 2. ) * vec2( I.x / I.y, 1. );\n    \n    vec3 c, p, o = vec3( 0., 0., -17. ), r = vec3( u * .02, 1. );\n    float t, d, i;\n    for( ; i < 64.; i++ )\n        p = o + r * t,\n        p.xz *= rot( iTime ),\n        p.yz *= -rot( iTime ),\n        d = mp( p ),\n        t += d * .5556;\n    \n    if( d < 1e-3 )\n        c += dot( p, vec3( 0, 2, 0 ) ) * .2,\n        c += texture( iChannel0, (p.xy + p.xz + p.yx ) * 2. ).rgb * .4;\n\n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}