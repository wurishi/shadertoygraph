{"ver":"0.1","info":{"id":"stf3Dl","date":"1623087155","viewed":214,"name":"Smoky Farini 600","username":"Farini","description":"Slight changes from this shader:  https://www.shadertoy.com/view/wlVGWd, created by latyr.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","smoke"],"hasliked":0,"parentid":"wlVGWd","parentname":"CineShader Test"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Inspired by CineShader: https://www.shadertoy.com/view/wlVGWd\n\n// Scale\n#define ZOOM 8.\n\n// FBM Scale\n#define FBMZ 2.5\n\nfloat rand(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p) {\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u*u*(3.0-2.0*u);\n\n    float res = mix(\n        mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n        mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n    return res*res;\n}\n\nconst mat2 m2 = mat2(0.8,-0.2,0.6,0.8);\n\nfloat fbm( in vec2 p ){\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = m2*p*2.02;\n    f += 0.2500*noise( p ); p = m2*p*2.03;\n    f += 0.1250*noise( p ); p = m2*p*2.01;\n    f += 0.0625*noise( p );\n\n    return f/0.769;\n}\n\nfloat pattern( in vec2 p ) {\n  vec2 q = vec2(fbm(p + vec2(0.0,0.0)));\n  vec2 zm = q * FBMZ;\n  \n  vec2 r = vec2( fbm( p + zm + vec2(1.1,8.2)));\n  r+= iTime * 0.1;\n  return fbm( p + 1.760*r );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  \tvec2 uv = fragCoord/iResolution.xy;\n    \n    uv *= ZOOM;\n  \tfloat displacement = pattern(uv);\n  \tvec4 color = vec4(displacement * 0.8, displacement * 0.8, displacement * 1.2, 1.);\n    \n    color.a = min(color.r * 0.75, 1.); // Depth for CineShader\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}