{"ver":"0.1","info":{"id":"3sK3zz","date":"1569609366","viewed":60,"name":"09-27-2019","username":"McGeek07","description":"Simple Mandelbrot Fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float\n        zoom = iTime * iTime,\n        sx = 4.0 / iResolution.x,\n        sy = 4.0 / iResolution.y,\n        scale = max(sx, sy) / zoom,\n        center_x = iResolution.x * scale / 2.0,\n        center_y = iResolution.y * scale / 2.0,\n        offset_x = -0.7453,\n        offset_y =  0.1127;\n    vec2\n        center = vec2(center_x, center_y),\n        offset = vec2(offset_x, offset_y);\n    vec2 \n        uv = (fragCoord * scale) - center + offset;\n    float\n        \tresolution = iTime * 10.0,\n\t\t\ta = uv.x,\n\t\t\tb = uv.y,\n\t\t\tc = uv.x,\n\t\t\td = uv.y,\n        \ti;\n    for(i = 0.0; i < resolution; i ++) {\n        float r = c*c + d*d;\n        if(r > 4.0) break;\t\t\t\t\n        float\n            j = (c*c - d*d),\n            k = (c*d + d*c);\n        c = a + j;\n        d = b + k;\n    }    \n       \n    vec3 col = vec3(i/resolution);    \n    \n    \n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}