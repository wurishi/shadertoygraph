{"ver":"0.1","info":{"id":"wtjXWK","date":"1567169526","viewed":696,"name":"2D Lowpoly water texture","username":"vamoss","description":"Low poly water texture","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["pattern","tile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\nconst vec2 vel = vec2(1., 0.);\nconst float tiles = 8.;\nconst vec3 color = vec3(.0, 1., 1.);\n\nfloat random(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    //wave\n    vec2 wave = uv;\n    wave.x += sin(uv.y*5.+iTime)*0.1;\n    wave.y += cos(uv.x*5.+iTime)*0.1;\n    uv += wave;\n    \n    uv+=vel*iTime;\n    \n    vec2 index = floor(tiles * uv)/tiles;\n    float t = floor(random(index)*4.)/4.;\n    \n    uv = 2.0 * fract(tiles * uv) - 1.0;\n    uv *= rotate2d(t*pi*2.);\n    \n    float c = step(uv.x, uv.y)*0.9;\n    c=abs(sin(iTime*fract((random(index+c)+0.1))));\n\tfragColor = vec4((c*.5+0.5) * color,1.0);\n}","name":"Image","description":"","type":"image"}]}