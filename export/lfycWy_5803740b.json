{"ver":"0.1","info":{"id":"lfycWy","date":"1732311530","viewed":79,"name":"MagnifyColorGlass","username":"qalqi","description":"Magnify Color Glass - Press and move the magnifier","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["magnify"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize coordinates\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Center of the magnification\n    vec2 center = iMouse.xy/iResolution.xy;\n    if (iMouse.z <= 0.0) center = vec2(0.5, 0.5);  // Default center if mouse is not pressed\n    \n    // Magnification parameters\n    float radius = 0.2;\n    float strength = 0.5;  // Increased for stronger magnification\n    \n    vec2 d = uv - center;\n    float r = length(d);\n    \n    if (r < radius) {\n        // Improved fish-eye distortion\n        float theta = atan(d.y, d.x);\n        float r2 = r * (1.0 - strength * (1.0 - r / radius));\n        vec2 distortedUV = center + r2 * vec2(cos(theta), sin(theta));\n        \n        // More subtle rainbow effect\n        vec3 rainbow = vec3(1.0) + 0.2 * cos(6.28318 * (vec3(0.0, 0.33, 0.67) + r / radius));\n        \n        // Sample the texture\n        vec4 color = texture(iChannel0, distortedUV);\n        \n        // Apply stylized color glass effect\n        vec3 glassColor = vec3(0.8, 0.9, 1.0);  // Light blue tint\n        color.rgb = mix(color.rgb, color.rgb * glassColor, 0.3);\n        \n        // Add a subtle highlight\n        float highlight = smoothstep(radius, radius - 0.05, r);\n        color.rgb += highlight * 0.2;\n        \n        // Apply the subtle rainbow and glass effect\n        fragColor = vec4(color.rgb * rainbow, 1.0);\n    } else {\n        // Add a subtle border around the magnified area\n        float border = smoothstep(radius, radius + 0.01, r) - smoothstep(radius + 0.02, radius + 0.03, r);\n        vec4 color = texture(iChannel0, uv);\n        fragColor = mix(color, vec4(1.0), border * 0.5);\n    }\n}","name":"Image","description":"","type":"image"}]}