{"ver":"0.1","info":{"id":"WsKcDR","date":"1602598779","viewed":76,"name":"AAA-canto-test","username":"jorge2017a1","description":"AAA-canto","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["aaacanto"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n///-------------------------------------\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110);C(115);C(105);C(100);C(101); // message \"Sound inside\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n///-------------------------------------\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+mod(iTime,20.0)*dot(uv.xxy,vec3(0.5,2,4))  )-vec3(0.5,0.5,0.1);\n\n    \n    \n     if (iResolution.y<2000.) \n     {\n      float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);\n      if(c>=0.)\n      {fragColor=vec4(c);return;}\n     }\n\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//modificado por jorgeflores\n//https://www.shadertoy.com/view/Xs3GWX\n// 2009-2016 David A Roberts <https://davidar.io>\n\n#define PI 3.141592653589793\n#define PI2 2.0*3.141592653589793\n\n#define ITERATIONS 8\n#define MOD3 vec3(443.8975,397.2973, 491.1871)\n\n/*\nstruct Formant {\n    int f1, f2, f3, A1, A2, A3, noise;\n};\n*/\n\n    \n// 1 out, 2 in... <https://www.shadertoy.com/view/4djSRW>\nfloat hash12(vec2 p) {\n\tvec3 p3 = fract(vec3(p.xyx) * MOD3);\n    p3 += dot(p3.zxy, p3.yzx+19.19);\n    return fract((p3.x + p3.y)*p3.z);\n}\nfloat noise(float time) {\n    float audio = 0.;\n    for (int t = 0; t < ITERATIONS; t++) {\n        float v = float(t)*3.21239;\n\t\taudio += hash12(vec2(time + v, time*1.423 + v)) * 2.0 - 1.0;\n    }\n    audio /= float(ITERATIONS);\n    return audio;\n}\n\nfloat midi_freq(int m) {\n    /* converts a MIDI note number to a frequency\n       <http://en.wikipedia.org/wiki/MIDI_Tuning_Standard> */\n    return 440. * pow(2., float(m-69)/12.);\n}\n\n\n\nfloat sin_wav(float w) { return sin(2.*PI*w ); }\nfloat rec_wav(float w) { return (mod(w,1.) < 0.5) ? -1. : 1.; }\nfloat saw_wav(float w) { return 1. - mod(w,1.); }\n\n\n\nfloat synthFreq( float f1,float  f2,float  f3,float  a1,float  a2,float a3, int note, float time) \n{\n    float pitch = midi_freq(note) - time;\n    float t = mod(time, 1./pitch);\n    \n    float s1, s2;\n    \n    s2=0.0;\n    float vib = 2.0 * sin_wav( t * 1.0 );\n    //float vib =0.0;\n    \n    s2=s2+ a1*sin_wav(t*f1+vib);\n    s2=s2+ a2*saw_wav(t*f2+vib);\n    s2=s2+ a3*rec_wav(t*f3+vib);\n    \n    //s2=s2 + float(1.0)*noise(time)/70.;\n    \n    s2=s2*saw_wav(t*pitch)*0.5;\n        \n return s2;\n        \n}\n\n\n\n\n\n#define FRAMEFreq(f1,f2,f3,a1,a2,a3, duration, note) { if(time > float(i)*30e-3) r = synthFreq(f1,f2,f3,a1,a2,a3, note, time); i += duration; }\n\nvec2 mainSound( in int samp,float time) {\n    float r;\n    int i = 0;\n    \n    \n float f1, f2, f3,  a1,  a2, a3;\n    \n    //FRAMEFreq(f1,f2,f3,a1,a2,a3, duration, note)\n    ///letra A\n    f1=1002.9;\n    f2=1549.95;\n    f3=2959.7;\n    a1=1.0;\n    a2=1.0;\n    a3=1.0;\n    \n    //beat\n    /*\n    f1=270.0;\n    f2=2300.0;\n    f3=3000.0;\n    a1=1.0;\n    a2=1.0;\n    a3=1.0;\n    */\n    \n    time=mod(time,7.0);\n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 65);\n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 60);\n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 70);\n    \n    \n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 65);\n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 60);\n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 70);\n    \n    \n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 75);\n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 70);\n    FRAMEFreq(f1,f2,f3,a1,a2,a3, 15, 72);\n        \n    \n    \n    //return vec2(r * (1. - smoothstep(55.,60.,time)));\n    return vec2(r  );\n}","name":"Sound","description":"","type":"sound"}]}