{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// 2014.12.06, steve@vuo.org\n// License: CC BY 4.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= vec2(.5,.5);\n    float aspect = iResolution.x/iResolution.y;\n    uv.x *= aspect;\n\n    float ringColor[3];\n    for (int i=0; i<3; ++i)\n    {\n\t    vec2 center = vec2(\n            cos(iTime/4. +float(i*20)       )/2.,\n            sin(iTime/4.3+float(i*20) + 100.)/2.);\n\n        float dist = distance(uv,center);\n        float frequency = (sin(iTime/4.7+float(i*3))/2.+.6)*32.;\n   \t\tfloat sdist = sin(dist*frequency + 3.14/2.);\n   \t\tfloat delta = fwidth(sdist);\n        float pulseWidth = sin(iTime/5.+float(i*13))/1.01;\n   \t\tringColor[i] = smoothstep(sdist-delta,sdist,pulseWidth);\n    }\n    \n\tfragColor = vec4(\n        ringColor[0],\n        ringColor[1],\n        ringColor[2],\n        1);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mlf3zr","date":"1417905965","viewed":181,"name":"Op art onion","username":"smokris","description":"3 layers of simple 2D rings.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","rings"],"hasliked":0,"parentid":"","parentname":""}}