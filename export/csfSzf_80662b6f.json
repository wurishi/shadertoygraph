{"ver":"0.1","info":{"id":"csfSzf","date":"1669273478","viewed":116,"name":"any-image-3d","username":"Kolya142","description":"3\nto matrix: FabriceNeyret2;","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos( a+ vec4(0,33,11,0) ))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 vuv = fragCoord/iResolution.xy;\n    vuv.x *= iResolution.x / iResolution.y;\n    vuv.x -= .5;\n    vec2 uv = vuv * 2. - 1.;\n    vec2 M = (iMouse.xy/iResolution.xy - .5) * 2.;\n    vec3 rd = normalize(vec3(uv, 1.));\n    rd.yz *= rot(M.y);\n    rd.xz *= rot(M.x);\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, vec2(atan(rd.x/rd.z), asin(rd.y))).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}