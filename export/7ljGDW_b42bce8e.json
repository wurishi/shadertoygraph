{"ver":"0.1","info":{"id":"7ljGDW","date":"1623937148","viewed":208,"name":"Film Noir with color accents","username":"bboettcher3","description":"saturation animation ","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["saturation"],"hasliked":0,"parentid":"lsscWf","parentname":"noir"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define THRESH1 0.65\n#define THRESH2 0.25\n#define GRAIN 10.0\n\nvec3 COLOR_MASKS[6] = vec3[6](\n  vec3( 1.0, 0.0, 0.0 ),\n  vec3( 1.0, 1.0, 0.0 ),\n  vec3( 1.0, 0.0, 1.0 ),\n  vec3( 0.0, 1.0, 0.0 ),\n  vec3( 0.0, 1.0, 1.0 ),\n  vec3( 0.0, 0.0, 1.0 ));\n\nbool shouldBeLit(vec4 col)\n{\n   float average = (col.r+col.g+col.b)/3.0; \n   if (average < THRESH2) return false;\n   for (int i = 0; i < COLOR_MASKS.length(); ++i)\n   {\n       vec3 mask = COLOR_MASKS[i];\n       float dist = sqrt(pow(col.r-mask.r,2.0)+pow(col.g-mask.g,2.0)+pow(col.b-mask.b,2.0));\n       if (dist <= THRESH1) return true;\n   }   \n   return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; \n    vec4 texColor = texture(iChannel0,uv);\n    \n    if (shouldBeLit(texColor))\n    {\n        fragColor = texColor;\n    }\n    else\n    {\n        float x = (uv.x + 4.0 ) * (uv.y + 4.0 ) * (iTime * 10.0);\n        vec4 grain = vec4(mod((mod(x, 13.0) + 1.0) * (mod(x, 123.0) + 1.0), 0.01)-0.005) * GRAIN;\n        float average = (texColor.r+texColor.g+texColor.b)/4.0;  \n        vec4 grayScale = vec4(average,average,average,1.0); \n        fragColor = grayScale + grain; \n    }\n\n}","name":"Image","description":"","type":"image"}]}