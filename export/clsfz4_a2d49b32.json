{"ver":"0.1","info":{"id":"clsfz4","date":"1692934652","viewed":158,"name":"Spectral flower","username":"ChunderFPV","description":"Similar to my Cosmic Clock series, the number spiral's appearance is based on the current time.  I'm using a buffer to blur it inwards.","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["blur","clock","spiral","buffer","fractions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// combine blurred & non-blurred versions\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec3 c = texture(iChannel1, U/R).rgb;\n    C = vec4(.1*H(.6+T/60.)+c+c*c+texture(iChannel0, U/R).r*2., 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// form point spiral\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 m = iMouse.xy/R,\n         u = (U-.5*R)/R.y,\n         v = u;\n    float t = mod(T/3600., 12.); // value from 12 hour cycle\n    if (t < 1.) t += 12.; // change 0 to 12\n    if (iMouse.z < 1.) m = cos(T*6.2832/60.-vec2(1.5708, 0))*.4+.4; // move with time\n    u *= pow(1.1-m.y, 3.);             // zoom from mouse y\n    float l = 90.,                     // detail loop\n          e = -.35-m.y,                // exponent\n          r = -sqrt(t*6.2832)*50.+m.x, // rotation\n          p = R.y/9e2,                 // point size\n          f = fs(u, t, e, r, p, l);    // point spiral\n    f *= length(v)*4.; // darken inner, brighten outer\n    C = vec4(f);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// inward frame blur\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 v = abs(fract(U/R+.5)-.5)/fwidth(U/R); // vignette\n    float r = length((U-.5*R)/R.y),      // radius\n          a = texture(iChannel0, U/R).r; // bufA\n    vec3 c = texture(iChannel1, mix(U/R, vec2(.5), -.004/sqrt(r))).rgb*.98; // blur bufB\n    c += H(.6+T/60.-a+r*.6)*a*a;  // color & add bufA to bufB\n    c = min(c, min(v.x, v.y)*.1); // darken screen edges\n    c += clamp(.0001/r, 0., 1.);  // center point\n    C = vec4(c, 1);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T iDate.w\n#define R iResolution.xy\n#define CS(a) vec2(cos(a), sin(a))\n#define H(a) (cos(radians(vec3(-10, 70, 140))+(a)*6.2832)*.5+.5)\n\n// fraction spiral (coords, value, exponent, rotation, size, detail loop)\nfloat fs(vec2 u, float t, float e, float a, float s, float l)\n{\n    float p = 6.2832,\n          r = pow(length(u), 1./e),\n          i = 0., c = i, h;\n    vec2 w = fwidth(u);\n    for (; i++<l;) // cell overlap loop\n        h = round((r-i)/l)*l+i,\n        c = max(c, s/length((u-CS(a+p*sqrt(t*h*2.))*pow(h, e))/w));\n    return clamp(c, 0., 1.);\n}\n","name":"Common","description":"","type":"common"}]}