{"ver":"0.1","info":{"id":"3llcDS","date":"1592957941","viewed":49,"name":"Circle from Textures","username":"Mischawake","description":"drawing circles based on (pos x, pos y, radius, hue) in a buffer","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Metaball{\n    vec2 pos;\n    float r;\n    vec3 col;\n};\n\n\n// Official HSV to RGB conversion \nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n  \n\n// x, y, radius, hue\n\nvec4 calcInfluence( vec4 ball, vec2 uv)\n{\n    float dst = ( ball.b * ball.b ) / (pow(abs(uv.x - ball.r), 2.) + pow(abs(uv.y - ball.g), 2.));\n    \n    //for falloff\n    //return vec4( hsv2rgb( vec3( ball.a, 1.0, 1.0 )) * dst, dst );\n    \n    if( dst > 1.0 )\n        return vec4( hsv2rgb( vec3( ball.a, 1.0, 1.0 )), 1.0 );\n    else \n        return vec4(0);\n\n}\n\n  \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 totalColor;\n    float bars = 8.0;\n    int i_bars = int(bars);\n    \n    for( int i = 0; i < i_bars; i++ ){\n        float i_float = float(i);\n        vec4 p0 = texture(iChannel0, vec2(i_float/bars + (1.0/bars*0.5),0.0));\n        vec4 ball0 = calcInfluence(p0, uv);\n       \t//only draw if current pixel is still blank\n        if( totalColor.a == 0.0)\n        \ttotalColor += ball0;    \n    }\n    \n    \n    vec4 color = totalColor;\n    \n    \n    // Output to screen\n    fragColor = color;\n    //fragColor = texture(iChannel0, uv);\n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 color;\n    \n    if(uv.x < 1.0/8.0)\n        color = vec4(0.2,0.8,0.1,0.0);\n    \n    else if(uv.x < 2.0/8.0)\n        color = vec4(0.8,0.2,0.08,0.25);\n        \n    else if(uv.x < 3.0/8.0)\n        color = vec4(0.8,0.8,0.05,0.5);\n        \n   \telse if(uv.x < 4.0/8.0)\n        color = vec4(0.2,0.2,0.05,0.1);\n        \n    else if(uv.x < 5.0/8.0)\n        color = vec4(0.2,0.5,0.12,0.3);\n        \n    else if(uv.x < 6.0/8.0)\n        color = vec4(0.4,0.5,0.12,0.5);\n        \n    else if(uv.x < 7.0/8.0)\n        color = vec4(0.6,0.5,0.12,0.7);\n        \n   \telse \n    \tcolor = vec4(0.8,0.5,0.12,0.9);\n    \n        \n    fragColor = color;\n\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}