{"ver":"0.1","info":{"id":"ldSBRc","date":"1501427035","viewed":615,"name":"Ship HUD","username":"amitpanna","description":"Inspired by https://www.shadertoy.com/view/4s2SRt and http://gmunk.com/OBLIVION-GFX","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["hud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getBox(vec2 st, float left, float bottom, float width, float height) {\n    float sm = 0.002;\n    float x_range = smoothstep(left - sm, left, st.x) - smoothstep(left + width, left + width + sm, st.x);\n    float y_range = smoothstep(bottom - sm, bottom, st.y) - smoothstep(bottom + height,bottom + height + sm, st.y);\n    \n    return x_range * y_range;\n}\n\nfloat getCircle(vec2 st, vec2 center, float radius, float thickness, float sm) {\n    float distance = distance(st, center);\n    return smoothstep(radius, radius + sm, distance) - smoothstep(radius + thickness, radius + thickness + sm, distance);\n}\n\nfloat getDottedCircle(vec2 st, vec2 center, float radius, float thickness, float sm) {\n    float distance = distance(st, center);\n    float circle = smoothstep(radius, radius + sm, distance) - smoothstep(radius + thickness, radius + thickness + sm, distance);\n    \n    vec2 vector = center - st;\n    float angle = atan(vector.y, vector.x);\n    angle = ((angle * 0.5) + (3.14 * 0.5)) / 3.14;\n    circle *= step(8., mod(floor(angle / 0.001), 10.0));\n    \n    return circle;\n}\n\nmat2 rotate(in float angle) {\n    return mat2(\n                cos(angle), -sin(angle), \n                sin(angle), cos(angle)\n    \t\t);\n}\n\nvec2 getRotation(vec2 st, vec2 origin, float angle) {\n    vec2 rotatedCoord = st - vec2(origin);\n    rotatedCoord = rotate(angle) * rotatedCoord;\n    rotatedCoord += vec2(origin);\n    \n    return rotatedCoord;\n}\n\nmat2 scale(in float x, in float y) {\n    return mat2(\n        \t\tx, 0.0, \n                0.0, y\n        \t);\n}\n\nvec2 getScaling(vec2 st, vec2 origin, float x, float y) {\n    vec2 scaledCoord = st - vec2(origin);\n    scaledCoord = scale(x, y) * scaledCoord;\n    scaledCoord += vec2(origin);\n    \n    return scaledCoord;\n}\n\nfloat getInnetDial(vec2 st, float center, float radius) {\n \tfloat lineThickness = 0.002;\n    float sm = 0.003;\n    \n    float circle2 = getCircle(st, vec2(center), radius - 0.015, lineThickness, sm);\n    circle2 *= step(st.x, -0.254);\n    \n    float circle2dash1 = getBox(st, -0.254, 0.134, 0.100, lineThickness);\n    circle2 += circle2dash1;\n    float circle2dash1_2 = getBox(st, -0.204, 0.134, 0.052, lineThickness * 2.);\n    circle2 += circle2dash1_2;\n    float circle2dash2 = getBox(st, -0.288, 0.068, 0.031, lineThickness);\n    circle2 += circle2dash2;\n    float circle2dash2_2 = getBox(st, -0.247, 0.068, 0.096, lineThickness);\n    circle2 += circle2dash2_2;\n    float circle2dash3 = getBox(st, -0.350, 0.0, 0.215, lineThickness);\n    circle2 += circle2dash3;\n    float circle2dash3_2 = getBox(st, -0.19, 0.0, 0.055, lineThickness * 2.);\n    circle2 += circle2dash3_2;\n    float circle2dash3_3 = getBox(st, -0.36, 0.0, lineThickness * 2., lineThickness * 2.);\n    circle2 += circle2dash3_3;\n    float circle2dash4 = getBox(st, -0.288, -0.068, 0.031, lineThickness);\n    circle2 += circle2dash4;\n    float circle2dash4_2 = getBox(st, -0.247, -0.068, 0.096, lineThickness);\n    circle2 += circle2dash4_2;\n    \n    float circle2dash5 = getBox(st, -0.13, 0.0, 0.01, lineThickness);\n    circle2 += circle2dash5;\n    float circle2dash5_1 = getBox(st, -0.12, -0.03, lineThickness, 0.06);\n    circle2 += circle2dash5_1;\n    float circle2dash5_2 = getBox(st, -0.118, 0.03, 0.01, lineThickness);\n    circle2 += circle2dash5_2;\n    float circle2dash5_3 = getBox(st, -0.118, -0.03, 0.01, lineThickness);\n    circle2 += circle2dash5_3;\n    \n    return circle2;\n}\n\nfloat getSideLine(vec2 st, float left, float top, float lineThickness) {\n    float lineEdgeLength = 0.008;\n    float sideLine = getBox(st, left, top, lineThickness, 0.236);\n    sideLine += getBox(st, left + lineThickness, top + 0.234, lineEdgeLength, lineThickness);\n    sideLine += getBox(st, left + lineThickness, top, lineEdgeLength, lineThickness);\n    sideLine += getBox(st, left + lineThickness + 0.006, 0.0, lineThickness, lineThickness);\n    \n    return sideLine;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st = fragCoord.xy / iResolution.xy;\n    st -= 0.5;\n    st.x *= iResolution.x/iResolution.y;\n\tfragColor = vec4(st,0.5+0.5*sin(iTime),1.0);\n    \n    float center = 0.0;\n    float radius = 0.3;\n    float sm = 0.003;\n    float lineThickness = 0.002;\n    float angle = atan(st.y, st.x);\n    angle = (angle + 3.1416) / (2.0 * 3.1416);\n\n    vec3 color = vec3(0.);\n    \n    st = getRotation(st, vec2(center), -iTime);\n    float circle1 = getCircle(st, vec2(0.), radius, lineThickness, sm);\n    circle1 *= (step(st.x, -0.25) + step(0.25, st.x));\n    st = getRotation(st, vec2(center), iTime);\n    \n    \n    \n    float dottedCircle = getDottedCircle(st, vec2(center), radius + 0.015, lineThickness + 0.002, sm);\n    dottedCircle *= (\n        (step(0.02, angle) - step(0.08, angle)) +\n        (step(0.09, angle) - step(0.16, angle)) +\n        (step(0.32, angle) - step(0.4, angle)) +\n        (step(0.41, angle) - step(0.48, angle)) +\n        \n        (step(0.52, angle) - step(0.59, angle)) +\n        (step(0.6, angle) - step(0.66, angle)) +\n        (step(0.83, angle) - step(0.89, angle)) +\n        (step(0.9, angle) - step(0.98, angle))\n    );\n    \n    float timeFactor = 3.14 * 0.2 * cos(iTime * 0.5);\n    st = getRotation(st, vec2(center), timeFactor);\n    float dial1 = getDottedCircle(st, vec2(center), radius + 0.04, lineThickness + 0.01, sm);\n    \n    float dial2 = getDottedCircle(st, vec2(center), radius + -0.04, lineThickness + 0.01, sm);\n    dial2 += getDottedCircle(st, vec2(center), radius + -0.02, lineThickness + 0.001, sm);\n    st = getRotation(st, vec2(center), -timeFactor);\n    \n    \n    dial1 *= (step(0.662, angle) - step(0.84, angle));\n    dial2 *= (step(0.682, angle) - step(0.82, angle));\n    \n    \n    float sideLine = getSideLine(st, -0.4, -0.116, 0.002);\n    st = getScaling(st, vec2(0.0), -1.0, 1.0);\n    sideLine += getSideLine(st, -0.4, -0.116, 0.002);\n    st = getScaling(st, vec2(0.0), -1.0, 1.0);\n    \n    st = getRotation(st, vec2(center), 3.14 * 0.1 * sin(iTime));\n    \n    float innerDial = getInnetDial(st, center, radius);\n    st = getScaling(st, vec2(0.0), -1.0, 1.0);\n    innerDial += getInnetDial(st, center, radius);\n    st = getScaling(st, vec2(0.0), -1.0, 1.0);\n    \n    \n    st = getRotation(st, vec2(center), 3.14 / 4.);\n    float box = getBox(st, -0.068, -0.057, 0.004, 0.115);\n    box += getBox(st, 0.066, -0.057, 0.004, 0.115);\n    box += getBox(st, -0.057, 0.070, 0.115, 0.004);\n    box += getBox(st, -0.057, -0.070, 0.115, 0.004);\n    box -= getBox(st, -0.036, -0.036, 0.072, 0.072);\n    \n    box += getBox(st, -0.05, -0.05, 0.006, 0.006);\n    box += getBox(st, 0.048, -0.05, 0.006, 0.006);\n    box += getBox(st, 0.048, 0.046, 0.006, 0.006);\n    box += getBox(st, -0.05, 0.046, 0.006, 0.006);\n    \n    float innerBox = getBox(st, -0.04, -0.04, 0.08, 0.08);\n    innerBox -= getBox(st, -0.036, -0.036, 0.072, 0.072);\n    innerBox += getBox(st, -0.07, -0.07, 0.006, 0.006);\n    innerBox += getBox(st, 0.066, -0.07, 0.006, 0.006);\n    innerBox += getBox(st, 0.066, 0.066, 0.006, 0.006);\n    innerBox += getBox(st, -0.07, 0.066, 0.006, 0.006);\n    st = getRotation(st, vec2(center), -3.14 / 4.);\n    \n    st = getRotation(st, vec2(center), -3.14 * 0.1 * sin(iTime));\n    \n    float sideMarks = step(18., mod(floor((st.y + 0.1 * sin(iTime)) / 0.002), 20.0));\n    sideMarks *= (\n        (step(-0.44, st.x) - step(-0.415, st.x)) +\n        (step(0.415, st.x) - step(0.44, st.x))\n    );\n    sideMarks *= (step(-0.12, st.y) - step(0.12, st.y));\n    \n    float sideMarksBox = getBox(st, -0.45, -0.015, 0.04, 0.03);\n    sideMarksBox -= getBox(st, -0.448, -0.013, 0.036, 0.026);\n    st = getScaling(st, vec2(0.0), -1.0, 1.0);\n    sideMarksBox += getBox(st, -0.45, -0.015, 0.04, 0.03);\n    sideMarksBox -= getBox(st, -0.448, -0.013, 0.036, 0.026);\n    st = getScaling(st, vec2(0.0), -1.0, 1.0);\n    \n    sideMarksBox += getBox(st, -0.0025, 0.33, 0.005, 0.005);\n    sideMarksBox += getBox(st, -0.0025, 0.25, 0.005, 0.005);\n    \n    box *= (0.2 + 0.8 * pow(abs(sin(iTime * 4.)), 2.));\n\n    color += vec3(1.000,0.345,0.287) * circle1;\n    color += vec3(0.39,0.61,0.65) * dottedCircle;\n    color += vec3(0.39,0.61,0.65) * dial1;\n    color += vec3(0.39,0.61,0.65) * dial2;\n    color += vec3(0.39,0.61,0.65) * innerDial;\n    color += vec3(0.39,0.61,0.65) * sideLine;\n    color += vec3(0.39,0.61,0.65) * sideMarks;\n    color += vec3(0.39,0.61,0.65) * sideMarksBox;\n    color += vec3(0.995,0.425,0.003) * box;\n    color += vec3(0.96, 0.98, 0.8) * innerBox;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}