{"ver":"0.1","info":{"id":"sssyRB","date":"1642345991","viewed":115,"name":"Clock by Vicking","username":"vicking","description":"Just for fun!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n\nmat2 Rotate(float angle) {\n    float s = sin(angle), c = cos(angle);\n    return mat2(c, -s, s, c);\n\n}\n\nfloat line(vec2 uv, float len, float width) {\n    \n    float d = length(uv - vec2(0, clamp(uv.y, 0.0, len))) ;\n    float w = mix(width, 0.001, S(0.0, 0.45, uv.y));\n    d = S(0.005, 0.0, d-w);\n    return d;\n}\n\nfloat divs(vec2 uv, float len) {\n\n    float d = length(uv - vec2(0, clamp(uv.y, 0.45-len, 0.45))) ;\n    d = S(0.005, 0.0, d);\n    return  d;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    \n\n    // Time varying pixel color\n    \n    float board = 0.;\n    \n    for (float i = 0.; i < 2.0*3.141927; i += 2.0*3.141927/60.) {\n        board = max(board, divs(uv*Rotate(i), 0.03));        \n    }\n    \n    for (float i = 0.; i < 2.0*3.141927; i += 2.0*3.141927/12.) {\n        board = max(board, divs(uv*Rotate(i), 0.05));        \n    }\n\n    \n    \n    float s = floor(iDate.w)/60.*2.0*3.1415927;\n    float arrowS = line(uv*Rotate(s), 0.45, 0.01);\n\n    float m = iDate.w/3600.*2.0*3.1415927;\n    float arrowM = line(uv*Rotate(m), 0.40, 0.02)*0.9;\n\n    float h = iDate.w/3600./12.*2.0*3.1415927;\n    float arrowH = line(uv*Rotate(h), 0.35, 0.03)*0.8;\n\n    float arrow = max(arrowS, arrowM);\n    arrow = max(arrow, arrowH);\n    \n    \n    vec3 col = vec3(max(arrow,board));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}