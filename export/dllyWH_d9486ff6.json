{"ver":"0.1","info":{"id":"dllyWH","date":"1690731477","viewed":69,"name":"blinn-phong sphere with shadows","username":"arkhan99","description":"Just messing around","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["phong","basic","sdf","sphere","shadows","blinn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ro: ray origin\n// rd: ray direction\n// p: point to test\n// all in world coordinates\nfloat dist_ray_point(vec3 ro, vec3 rd, vec3 p){\n    p = p - ro;\n    return length(cross(p, rd));\n}\n\nvec3 sphere(in vec2 p_, float r, vec3 lo, vec3 ro){\n    vec3 p = vec3(p_, sqrt(r*r - p_.x*p_.x - p_.y*p_.y));\n    if(length(p_) > r) {\n        vec3 col = vec3(1., 0., 0.);\n        float d = dist_ray_point(lo, normalize(vec3(p.xy, -0.5)-lo), vec3(0., 0., 0.));\n        if(d<r) {\n            d*=2.;\n            d = pow(d, 10.);\n            d += 1.*0.05;\n            col.x *= d;\n        }\n        return col;\n    }\n    float baseColor = 0.7;\n    // diffuse\n    vec3 ld = normalize(lo - p);\n    vec3 surf_norm = normalize(p);\n    baseColor *= dot(ld, surf_norm);\n    // specular\n    vec3 half_v = normalize(lo + ro - 2.*p);\n    baseColor = baseColor + baseColor * pow(dot(half_v, surf_norm), 12.) * 0.4;\n    return vec3(baseColor, baseColor, baseColor);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 lo = vec3(4. * sin(0.6*iTime), 4.* cos(0.6*iTime), 7.);\n    vec3 ro = vec3(0., 0, -2.);\n    vec2 uv = 2.*(fract(fragCoord/iResolution.xy * 2.) - 0.5);\n    //aspect ratio correction\n    float a_r = iResolution.x/iResolution.y;\n    uv.x *= max(1., a_r);\n    uv.y /= min(1., a_r);\n    fragColor = vec4(sphere(uv, 0.5, lo, ro), 1.);\n    \n}","name":"Image","description":"","type":"image"}]}