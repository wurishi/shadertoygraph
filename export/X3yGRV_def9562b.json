{"ver":"0.1","info":{"id":"X3yGRV","date":"1717871669","viewed":59,"name":"sparkle in triagles","username":"nayk","description":"hard work can be easy in all the world, my account can be retrive!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","sparkle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*originals \ncopy-paste from many sources Iâ€™m just learning myself\n\nMIT LICENSE  =( retreve my account please  https://web.archive.org/web/20240329132628/https://www.shadertoy.com/user/nayk\n*/\n\n\n\n#define S(v)      smoothstep(  9./R.y+0.3, 0., v )\n\n#define S2(r)  smoothstep(  1./R2.x+0.3, 0.2, abs( U2.x  ) -0.2 )\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\nfloat sparkle(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n \nvoid mainImage( out vec4 O, vec2 U )\n{\n vec4 O2;\n vec2 u ;\n   vec2 uv = (U * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv4 = (U * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv5 = (U * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv6 = (U * 2.0 - iResolution.xy) / iResolution.y;\n     vec2 uv3 = (U * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    uv5.x+=cos(iTime);\n    uv5.y+=sin(iTime);\n        uv6.x-=cos(iTime);\n    uv6.y-=sin(iTime);\n    vec3 finalColor = vec3(0.0);\n       vec2 uv02 = uv;\n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n      vec3 finalColor3 = vec3(0.0);\n    for (float i = 0.0; i < 10.0; i++) {\n        uv3 = fract(uv3 * 10.5) - 0.5;\n\n        float d2 = length(uv3) * exp(-length(uv02));\n\n        vec3 col3 = palette(length(uv02) + i*.4 + iTime*.4);\n\n        d2 = sin(d2*8. + iTime)/8.;\n        d2 = abs(d2);\n\n        d2 = pow(0.01 / d2, 1.2);\n\n        finalColor3 += col3 * d2;\n    }\n vec2 R2 = iResolution.xy,\n         U2 =2.* ( u+u - R2 ) /R2.y;;\n        \n    U2 =  length(U+U)/R2.y-1.5    \n         *cos( ( mod( 1.155*atan(U2.y,U2.x) - iTime*0. ,0.5) - .1 ) *1.0 -vec2(0,1.0));\n          U2.x-=1.5;\n          U2.y-=1.5;\n    O2 += mix( .5* S2(.5)*finalColor.x, S2(.7), .5+.5*U2.y )  ;\n    \n    \n    \n    vec2 R = iResolution.xy;\n    U = 2.* ( U+U - R ) /R.y;\n    float a = atan(U.y,U.x) - iTime, l = length(U), PI = 3.14;\n    a = ( mod( 3.*a +PI, 2.*PI ) - PI ) /3.;\n    U = l * vec2(cos(a),sin(a));\n    O-=O;\n    \n    O +=    S( abs(U.x-.7)-.1 ) * (.5+.5*U.y)\n      + .5* S( abs(U.x-.5)-.1 ) * (.5-.5*U.y)* finalColor3.x;\n       O+=O2;\n        uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n   O+= vec4(sparkle(uv4, anim) * vec3(0.55,0.5,0.5)*0.1, 1.0);\n    O+= vec4(sparkle(uv5, anim) * vec3(0.55,0.5,0.5)*0.1, 1.0);\n     O+= vec4(sparkle(uv6, anim) * vec3(0.55,0.5,0.5)*0.1, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}