{"ver":"0.1","info":{"id":"Dts3z8","date":"1671298030","viewed":158,"name":"Inverse Hash","username":"PrzemyslawZaworski","description":"Left Side: original textures\nCenter: hashed textures\nRight Side: unhashed textures","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","inverse","hash","encode","rgba","seed","decode","reverse","uint","unhash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://stackoverflow.com/questions/664014/what-integer-hash-function-are-good-that-accepts-an-integer-hash-key\n\nuint Hash(uint x) \n{\n    x = ((x >> 16) ^ x) * 0x45d9f3bu;\n    x = ((x >> 16) ^ x) * 0x45d9f3bu;\n    x = ((x >> 16) ^ x);\n    return x;\n}\n\nuint Unhash(uint x) \n{\n    x = ((x >> 16) ^ x) * 0x119de1f3u;\n    x = ((x >> 16) ^ x) * 0x119de1f3u;\n    x = ((x >> 16) ^ x);\n    return x;\n}\n\nuint RGBAToUint(vec4 rgba) // encode normalized RGBA in range [0..1] to UInt32\n{ \n    uint w = uint(rgba.w * 255.0) << 24u; \n    uint z = uint(rgba.z * 255.0) << 16u;\n    uint y = uint(rgba.y * 255.0) << 8u;  \n    uint x = uint(rgba.x * 255.0);\n    return w + z + y + x;\n}\n\nvec4 UintToRGBA(uint u)  // decode UInt32 to normalized RGBA in range [0..1]\n{\n    float w = float((u & 0xff000000u) >> 24) / 255.0;\n    float z = float((u & 0x00ff0000u) >> 16) / 255.0;\n    float y = float((u & 0x0000ff00u) >>  8) / 255.0;\n    float x = float((u & 0x000000ffu)      ) / 255.0;\n    return vec4(x, y, z, w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * vec2(3.0, 2.0);\n    int tile = int(floor(uv.x) + 3.0 * floor(uv.y));\n    vec4 color = vec4(0.0);\n    if (tile == 0) color = texture(iChannel0, uv);\n    if (tile == 1) color = UintToRGBA(Hash(RGBAToUint(texture(iChannel0, uv))));\n    if (tile == 2) color = UintToRGBA(Unhash(Hash(RGBAToUint(texture(iChannel0, uv)))));    \n    if (tile == 3) color = texture(iChannel1, uv);\n    if (tile == 4) color = UintToRGBA(Hash(RGBAToUint(texture(iChannel1, uv))));\n    if (tile == 5) color = UintToRGBA(Unhash(Hash(RGBAToUint(texture(iChannel1, uv)))));\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}