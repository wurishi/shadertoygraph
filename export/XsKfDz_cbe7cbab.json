{"ver":"0.1","info":{"id":"XsKfDz","date":"1528373105","viewed":200,"name":"WigglingTentacles","username":"OursBleu","description":"Tentacle","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tentacle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nvec2 getPolarUV(in vec2 uv)\n{\n    float angle = atan(uv.y, uv.x);\n    angle += PI;\n    angle /= (2.*PI);\n    \n    float dist = distance(vec2(0.), uv);\n    \n    return vec2(angle, dist);\n}\n\nvec4 drawTentacle( in vec2 uv, in float inTime)\n{\n    uv.x -= .5;\n    uv.y -= 1.;\n    uv = getPolarUV(uv);\n    \n    //global\n    \n    vec2 subdivs = vec2(24., 12.);\n    \n    // anim\n    \n    float time = mod(inTime, 2. * PI);\n    uv.x += sin(uv.y * 10. - time * 4.) * (1. - uv.y) * .03;\n    \n    // tentacle\n    \n    float start = 0.25;\n    float width = 1./subdivs.x;\n    float tentacle =  step (start - width, uv.x) * step(uv.x, start + width);\n    \n    // tentacleShadow\n    \n    tentacle *= fract((uv.x + 0.094) / 2. * subdivs.x);\n    tentacle = min(tentacle, 1. - tentacle) * 2.;\n    \n    // cups\n    \n    vec2 gridUV = vec2(fract(uv * subdivs));\n    float d =  distance(vec2(.5), gridUV);\n    float cups = step(d, 0.4);\n    cups *= d * 1./0.4;\n    \n    // cups masking\n    \n    float tipMask =  step(2./subdivs.y, uv.y);\n    cups *= tipMask;\n   \n    // layering\n    \n    vec4 tentacleColor = vec4(1., 0., 0., 1.);\n    vec4 tentacleColor2 = vec4(.5, 0., 0., 1.);\n    vec4 cupsColor = vec4(.8, .8, .4, 1.);\n    vec4 bgColor = vec4(0., 0., 0., 0.);\n    \n    vec4 color = bgColor;\n    \n    float tentacleHard = 1. - step(tentacle, 0.);\n    color = mix(color, tentacleColor2, tentacleHard);\n    color = mix(color, tentacleColor, tentacle);\n    color = mix(color, cupsColor, tentacleHard * cups);\n    \n    //color = vec3(tentacleHard);\n    //color = vec3(tentacleHard * cups);\n    //color = vec3(tentacle);\n    //color = vec3(cups);\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 uv = fragCoord/iResolution.xy;\n    \n    // first layer\n    \n    vec2 uv2 = uv;\n    uv2.x = fract(uv.x * 6.);\n    uv2.y *= 1.5;\n    fragColor = drawTentacle(uv2, iTime);\n    \n    // second layer\n    \n    uv.x += .25f;\n    uv.y += .1f;\n    \n    uv2 = uv;\n    uv2.x = fract(uv.x * 6.);\n    uv2.y *= 1.5;\n    \n    vec4 c = drawTentacle(uv2, iTime + 2.);\n    c *= .7;\n    fragColor = mix(fragColor, c, step(fragColor.a, c.a));\n    \n    // bg\n    \n    fragColor = mix(fragColor, vec4(.0, .0, (1. - uv.y) * 0.3, 1.), step(fragColor.a, 0.));\n    \n    \n}\n","name":"Image","description":"","type":"image"}]}