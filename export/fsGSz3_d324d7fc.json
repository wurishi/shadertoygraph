{"ver":"0.1","info":{"id":"fsGSz3","date":"1634978268","viewed":43,"name":"Point Reflection","username":"graygoose","description":"reflection of a singularity?","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["root","distancemethod"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T iTime\n#define Tc cos(T)\n#define Ts sin(T)\n#define Tcs Tc*Ts\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord/iResolution.xy);\n    \n    uv -= vec2(.5, 0.5);\n    uv *= 3.5;\n\n    vec2 roots[3] = vec2[3](vec2(    0.5,     0.),\n                            vec2(Ts*-.5, Tc* 1.),\n                            vec2(Tc* .5, Ts*-1.));\n    \n    vec3 col = vec3(1.);\n    \n    vec2 z = uv;\n    float dist = 1.;\n    float d = 0.;\n    for(int i=0;i<3;i++){\n        d = length(z - roots[i]) - d;\n        if (d < dist){\n            z = (z - (roots[i])) * (d/dist);\n            //z -= (z.xy*d/dist)/(z.yx-dist)*(d);\n            z *= length(z);\n            dist = d;\n            col += vec3(z, z.y+z.x);\n        }\n    }\n  ;\n    \n    // Output to screen\n    fragColor = vec4(col-vec3(1.), 1.);\n}","name":"Image","description":"","type":"image"}]}