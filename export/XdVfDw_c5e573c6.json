{"ver":"0.1","info":{"id":"XdVfDw","date":"1529090303","viewed":322,"name":"Ray marching practice 1","username":"lnae","description":"my first attempt at ray marching","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEPS 150.\n#define EPS 0.001\n#define EPSN 0.01\n\nmat2 rot(float angle){\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nfloat distSphere(vec3 pos, float radius){\n\treturn length(pos) - radius;\n}\n\nfloat distScene(vec3 pos){\n    vec3 twistedPos = vec3(rot(1.5 * sin(0.1 * pos.z + iTime)) * pos.xy, pos.z);\n    vec3 repeatPos = mod(twistedPos, 1.) - 0.5;\n    float dist = distSphere(repeatPos, 0.1 + 0.1 * sin(pos.z + 2. * iTime));    \n    return dist;\n}\n\nvec3 getNormal(vec3 pos){\n\treturn normalize(vec3(distScene(pos + vec3(EPSN, 0., 0.)) - distScene(pos - vec3(EPSN, 0., 0.)),\n               distScene(pos + vec3(0., EPSN, 0.)) - distScene(pos - vec3(0., EPSN, 0.)),\n               distScene(pos + vec3(0., 0., EPSN)) - distScene(pos - vec3(0., 0., EPSN))));\n}\n\nvec3 render(vec2 uv){\n    vec3 bgcol = vec3(1. - length(uv)) + length(uv) * vec3(0., 0., 0.3);\n    vec3 eye = vec3(0., 0., 3.);\n    vec3 ray = normalize(vec3(uv, 0.) - eye);\n    vec3 pos = eye;\n    float dist, step;\n    bool hit = false;\n    \n    for(step = 0.; step < STEPS; step++){\n    \tdist = distScene(pos);\n        if(abs(dist) < EPS){\n            hit = true;\n        \tbreak;\n        }\n        pos += ray * dist;\n    }\n    float totalDist = length(pos - eye);\n    vec3 col = vec3(step / STEPS, 0.33, 0.66);\n    if(hit && totalDist < 30.)col = mix(col, getNormal(pos) * 0.5 + 0.5, 0.7);\n    col = mix(bgcol, col, 1./exp(totalDist * totalDist * 0.0006)); //fog\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.x;    \n    vec3 col = render(uv);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}