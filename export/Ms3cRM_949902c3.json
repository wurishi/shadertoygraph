{"ver":"0.1","info":{"id":"Ms3cRM","date":"1518154757","viewed":95,"name":"cd drive","username":"XBA","description":"simple beginner shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat hash( vec2 p ) {\n\tfloat h = dot(p,vec2(127.1,311.7));\t\n    return fract(sin(h)*43758.5453123);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float speed = 5.;\n    float t = sin(speed * iTime) * 3.141;\n    float t2 = cos(speed * iTime) * 3.141;\n    float t3 = sin( speed * 2. * iTime + 50.) * 3.141;\n    float t4 = cos( speed * 2. * iTime - 50.) * 3.141;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    \n    float noise = 0.15 * hash(uv);\n    \n    float r = sqrt(uv.x*uv.x + uv.y * uv.y);\n    fragColor = vec4(0);\n    \n    float tt = uv.y / uv.x;\n    if (r < 0.1 && abs(tt - tan(t)) < (noise+0.05))\n        fragColor += vec4(uv.y + 0.5, uv.x + 0.5, 0.2, 1);\n    \n    if (r > 0.1 && r < 0.3 && abs(tt - tan(t2)) < (noise+0.05))\n        fragColor += vec4(0.1, 0.1, sqrt(uv.x *uv.x + uv.y * uv.y), 1);\n    \n    \n    if (r > 0.1 && r < 0.3 && abs(tt - tan(t3)) < (noise+0.05))\n        fragColor += vec4(sqrt(uv.x *uv.x + uv.y * uv.y), 0.1, 0.1, 1); \n    \n    \n    if (r > 0.1 && r < 0.3 && abs(tt - tan(t4)) < (noise+0.05))\n        fragColor += vec4(0.1, abs(uv.x), 0.1, 1); \n    \n    fragColor *= 3.;\n}","name":"Image","description":"","type":"image"}]}