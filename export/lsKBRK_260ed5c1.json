{"ver":"0.1","info":{"id":"lsKBRK","date":"1529871665","viewed":544,"name":"The Rainbow Scope","username":"slerpy","description":"A scrolling fft, that showes you more than just the length of the vector!","likes":4,"published":1,"flags":36,"usePreview":0,"tags":["fft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = 40. * texelFetch(iChannel0, ivec2(fragCoord), 0) / texelFetch(iChannel0, ivec2(0), 0).x;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define TAU 6.28318530718\n\n#define SAMPLES 512\n\n#define SPEED 2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    if(ivec2(fragCoord) == ivec2(0))\n    {\n        float amp = .0;\n        \n        for(int i=0; i<SAMPLES; i++)\n        {\n            amp = max(amp, abs(2. * texelFetch(iChannel1, ivec2(i, 1), 0).x - 1.));\n        }\n        \n        amp += 0.999 * texelFetch(iChannel0, ivec2(0), 0).x;\n        \n        fragColor = vec4(amp);\n        return;\n    }\n    \n    if(fragCoord.x > float(SPEED) + 1.)\n    {\n        fragColor = texelFetch(iChannel0, ivec2(fragCoord) - ivec2(SPEED, 0), 0);\n        return;\n    }\n    \n    float f = 0.5 * TAU * (2.*uv.y-1.);\n    vec2 p = vec2(0);\n    \n    for(int i=0; i<SAMPLES; i++)\n    {\n        float y = 2. * texelFetch(iChannel1, ivec2(i, 1), 0).x - 1.;\n        float a = f * float(i);\n        vec2 d = vec2( sin(a), cos(a) );\n        \n        p += y * d;\n    }\n    \n    p = abs(p);\n    fragColor = vec4(p, p.x+p.y, 1);\n}","name":"Buf A","description":"","type":"buffer"}]}