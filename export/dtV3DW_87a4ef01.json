{"ver":"0.1","info":{"id":"dtV3DW","date":"1684054405","viewed":145,"name":"Fork Staircase","username":"Carandiru","description":"a different take on the staircase paradox shader linked above....","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["fractal","geometry","paradox"],"hasliked":0,"parentid":"DlGGDh","parentname":"Staircase paradox"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// original shader \"staircase paradox\"  https://www.shadertoy.com/view/DlGGDh\n\n// never ends? no, runs out of precision at ~165s @ 75fps\n// *edit       *maybe, increased precision, still going >500s @ 75fps\n\n\n\n// Thanks to iapafoto for helping minify it\n#define S(x) (abs(round(x) - x) + abs(x - round(x)))\n\nvoid mainImage( out vec4 k, in vec2 c)\n{\n    float t0 = iTime + 1.0;\n    float tspan = pow(t0,sqrt(t0)*0.5);\n    \n    vec2 u = c / iResolution.x;\n    u = u * 2.0f - 1.0f;\n    u /= tspan;\n    \n    float f, D = 1., i = D, p = D, T = S(0.618) * (t0 + t0 * 0.5);\n    for (; i++ < T; p += p)\n        f = S(u.x * p) / p, // Take triangle waves w/ power of 2 frequencies as the lines\n        D = min(D, abs(u.y + f));\n        \n    k = 1.0 - vec4(2e2 * tspan * min(D, abs(u.y + mix(f, S(u.x * p) / p, fract(T))))); // Draw wave\n}","name":"Image","description":"","type":"image"}]}