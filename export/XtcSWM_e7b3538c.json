{"ver":"0.1","info":{"id":"XtcSWM","date":"1479778864","viewed":2072,"name":"churning hue cycle","username":"aferriss","description":"Moving texture coordinates in a circle based on hue.","likes":40,"published":3,"flags":32,"usePreview":1,"tags":["hue","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float amt = 15.0;\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 uv = fragCoord / res;\n    uv = -1.0 + 2.0 * uv;\n    uv *= 0.995;\n    uv = uv *0.5 + 0.5;\n    uv.y *= 0.998;\n    \n    vec4 rand = texture(iChannel2, uv*0.5 + iTime);\n    vec4 fb = texture(iChannel0, uv);\n\n    vec4 colOut = texture(iChannel0, uv + vec2(fb.g - fb.r, fb.b - fb.g)*(1.0/res));\n    \n    colOut.rgb = rgb2hsv(colOut.rgb);\n    \n    colOut.r += 0.005;\n    //colOut.r = mod(colOut.r, 1.0);\n    \n    colOut.g += 0.005;\n    //colOut.g = mod(colOut.g, 1.0);\n    \n    colOut.b += 0.005;\n    //colOut.b = mod(colOut.b, 1.0);   \n  \n    colOut.rgb = hsv2rgb(colOut.rgb);\n    colOut.rgb = fract(colOut.rgb);\n    \n    //colOut.rgb += rand.rgb *0.01;\n    \n    if(iFrame < 10 || iMouse.z > 0.0){\n        fragColor = texture(iChannel1, uv );\n    } else {\n    \tfragColor = colOut;\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}