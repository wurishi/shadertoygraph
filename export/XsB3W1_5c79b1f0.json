{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Copyright Johan Maasing 2013\n// This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat getCheckerboard(vec2 uv) {\n\tif (uv.x > 0.5) {\n\t\tif (uv.y > 0.5) {\n\t\t\treturn 1.0 ;\n\t\t} else {\n\t\t\treturn 0.0 ;\n\t\t}\n\t} else {\n\t\tif (uv.y > 0.5) {\n\t\t\treturn 0.0 ;\n\t\t} else {\n\t\t\treturn 1.0 ;\n\t\t}\n\t}\n}\n\t\t\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 world = fragCoord.xy / iResolution.xy;\n\t// Simulate we are moving\n\tworld.x = world.x + iTime/16.0 ;\n\tworld.y = world.y + sin(mod(iTime, 6.2)) / 4.0 ;\n\t\n\tvec2 uv1 = mod(world*8.0, 1.0) ;\n\tfloat colorComp1 = getCheckerboard(uv1) ;\n\t\n\tvec2 uv2 = mod(world*16.0, 1.0) ;\n\tfloat colorComp2 = getCheckerboard(uv2) ;\n\t\n\tvec2 uv3 = mod(world*32.0, 1.0) ;\n\tfloat colorComp3 = getCheckerboard(uv3) ;\n\t\n\tfloat colorComp = (4.0*colorComp1 + 2.0*colorComp2 + colorComp3) / 7.0;\n\t\n\tfloat red = clamp(colorComp-0.05, 0.0, 1.0) ;\n\tfloat green = clamp(colorComp, 0.0, 1.0) ;\n\tfloat blue = clamp(colorComp+0.1, 0.0, 1.0) ;\n\tfragColor = vec4(red,green,blue,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsB3W1","date":"1386702495","viewed":286,"name":"2D Simple checkerboard","username":"jmaasing","description":"Simple checkerboard adding scales with weighted sums ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","texturegenerator"],"hasliked":0,"parentid":"","parentname":""}}