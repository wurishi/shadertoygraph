{"ver":"0.1","info":{"id":"llfyz4","date":"1503633960","viewed":1241,"name":"Needs More JPEG","username":"rory618","description":"Check out [url]https://en.wikipedia.org/wiki/JPEG[/url] for a great explanation of the algorithm.","likes":22,"published":1,"flags":32,"usePreview":0,"tags":["jpeg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 2.*asin(1.)\n    \n\nvec3 toRGB(vec3 ybr)\n{\n    return (ybr-vec3(0,.5,.5))*mat3(1.,0.,1.402,1.,-.344136,-0.714136,1.,1.772,0.);\n}\n\nvec3 inp(vec2 coord){\n    return texelFetch(iChannel0, ivec2(coord),0).xyz;\n}\n\nvec3 IDCT8x8( vec2 coord, vec2 xy ) {\n    vec3 res = vec3(0);\n    #define a(x) (x!=0.?1.:1./sqrt(2.))\n    for(float u = 0.; u < 8.; u++){\n    \tfor(float v = 0.; v < 8.; v++){\n            res += inp(coord + vec2(u,v)) *\n                a(u) * a(v) * \n                cos((2.*xy.x+1.)*u*pi/16.) * \n                cos((2.*xy.y+1.)*v*pi/16.); \n    \t}\n    }\n    return res * .25;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mouse = iMouse.z==0.?iResolution.xy/2.:iMouse.xy;\n    fragColor.w = 0.;\n    vec2 uv = floor(fragCoord-8.*floor(fragCoord/8.));\n    if(fragCoord.x>mouse.x){\n        fragColor.xyz = toRGB(IDCT8x8(8.*floor(fragCoord/8.),uv)/256.+.5);\n    } else {\n        fragColor.xyz = texture(iChannel1, fragCoord/iResolution.xy).xyz;\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define pi 2.*asin(1.)\n\n\nvec3 toYCbCr(vec3 rgb)\n{\n    return rgb*mat3(0.299,0.587,0.114,-0.168736,-0.331264,0.5,0.5,-0.418688,-0.081312)+vec3(0,.5,.5);\n}\n\nvec3 pre( vec2 coord ){\n    return floor(256.*(toYCbCr(texture(iChannel0, coord/iResolution.xy).xyz) - .5));\n}\n\nvec3 DCT8x8( vec2 coord, vec2 uv ) {\n    vec3 res = vec3(0);\n    for(float x = 0.; x < 8.; x++){\n    \tfor(float y = 0.; y < 8.; y++){\n            res += pre(coord + vec2(x,y)) *\n                cos((2.*x+1.)*uv.x*pi/16.) * \n                cos((2.*y+1.)*uv.y*pi/16.); \n    \t}\n    }\n    #define a(x) (x!=0.?1.:1./sqrt(2.))\n    return res * .25 * a(uv.x) * a(uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mouse = iMouse.z==0.?iResolution.xy/2.:iMouse.xy;\n    \n    fragColor.w = 0.;\n    vec2 uv = floor(fragCoord-8.*floor(fragCoord/8.));\n    float q = (1.+mouse.y/iResolution.y*20.)*float(\nint[](\n  16,  11,  10,  16,  24,  40,  51,  61,\n  12,  12,  14,  19,  26,  58,  60,  55,\n  14,  13,  16,  24,  40,  57,  69,  56,\n  14,  17,  22,  29,  51,  87,  80,  62,\n  18,  22,  37,  56,  68, 109, 103,  77,\n  24,  35,  55,  64,  81, 104, 113,  92,\n  49,  64,  78,  87, 103, 121, 120, 101,\n  72,  92,  95,  98, 112, 100, 103,  99\n)[int(uv.x+uv.y*8.)]);\n    fragColor.xyz = (floor(.5+DCT8x8(8.*floor(fragCoord/8.),uv)/q))*q;\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Buf B","description":"","type":"buffer"}]}