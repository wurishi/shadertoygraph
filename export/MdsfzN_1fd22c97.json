{"ver":"0.1","info":{"id":"MdsfzN","date":"1495198799","viewed":1273,"name":"Octahedron Environment Mapping","username":"hypersomniac","description":"Taken from http://www.vis.uni-stuttgart.de/~engelhts/paper/vmvOctaMaps.pdf\n\nInverted sampling function to map texel coordinates to a  cubemap vector.\n\nEdit: now with edge mirroring to fix linear interpolation (see paper)\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["mapping","environment","pbr","octahedral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 octahedral_mapping(vec3 co)\n{\n    // projection onto octahedron\n\tco /= dot( vec3(1), abs(co) );\n\n    // out-folding of the downward faces\n    if ( co.y < 0.0 ) {\n\t\tco.xy = (1.0 - abs(co.zx)) * sign(co.xz);\n    }\n\n\t// mapping to [0;1]Ë†2 texture space\n\treturn co.xy * 0.5 + 0.5;\n}\n\nvec3 octahedral_unmapping(vec2 co)\n{\n    co = co * 2.0 - 1.0;\n\n    vec2 abs_co = abs(co);\n    vec3 v = vec3(co, 1.0 - (abs_co.x + abs_co.y));\n\n    if ( abs_co.x + abs_co.y > 1.0 ) {\n        v.xy = (abs(co.yx) - 1.0) * -sign(co.xy);\n    }\n\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 0.5 + vec2(uv - 0.5)*(1.6+0.6*sin(iTime));\n\t\n    /* edge mirroring */\n    vec2 m = abs(uv - 0.5) + 0.5;\n    vec2 f = floor(m);\n    float x = f.x - f.y;\n    bool mirror = (x != 0.0); \n\n    if (mirror) {\n        uv.xy = 1.0-uv.xy;\n    }\n\n    uv = fract(uv);\n\n\tvec3 co = octahedral_unmapping(uv);\n    \n\tfragColor = vec4(texture(iChannel0, co).rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}