{"ver":"0.1","info":{"id":"dsdSzM","date":"1679595908","viewed":140,"name":"colordrip","username":"pb","description":"click on different areas of the screen to get it moving in different directions","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","fbm","colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//philip.bertani@gmail.com\n\nfloat numOct  = 3. ;  //number of fbm octaves\n#define pi  3.14159265\n\nfloat random(vec2 p) {\n    //a random modification of the one and only random() func\n    return fract( sin( dot( p, vec2(12., 90.)))* 1e6 );\n}\n\nfloat noise(vec3 p, float k) {\n    int kk = int(k)%3, jj= (int(k)+1)%3;\n    vec2 i = floor( vec2(p[kk],p[jj]) );\n    vec2 f = fract( vec2(p[kk],p[jj]) );\n    float a = random(i + vec2(0.,0.));\n    float b = random(i + vec2(1.,0.));\n    float c = random(i + vec2(0.,1.));\n    float d = random(i + vec2(1.,1.));\n    vec2 u =  f*f*(3.-2.*f); //smoothstep here\n    \n    return mix(a,b,u.x) + (c-a)*u.y*(1.-u.x) + (d-b)*u.x*u.y;\n}\n\nfloat fbm3d(vec3 p, float i) {\n    float v = 0.;\n    float a = .5;    \n\n    for (float i=0.; i<numOct; i++) {\n        v += a * noise(p, i);\n        p = p * 2. + p/(1.+i); \n    }\n    return v;\n}\n\nmat2 rotg(float an) {\n     float cc=cos(an),ss=sin(an); \n     return mat2(cc,-ss,ss,cc);\n}\n\nmat3 rxz(float an){\n    float cc=cos(an),ss=sin(an);\n    return mat3(cc,0.,-ss,\n                0.,1.,0.,\n                ss,0.,cc);                \n}\nmat3 ryz(float an){\n    float cc=cos(an),ss=sin(an);\n    return mat3(1.,0.,0.,\n                0.,cc,-ss,\n                0.,ss,cc);\n}                \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y*2.;\n    vec2 mm = (2.*iMouse.xy-iResolution.xy)/iResolution.y/40.;\n\n    if ( iMouse.w == 0. )  mm += vec2(.1,0.); \n\n\n    vec3 rd = normalize( vec3(uv, -2.) );  \n    vec3 ro = vec3(0.,1.,0.);\n    \n    float delta = mod(iTime,30.);\n    mat3 rot = rxz(-mm.x*delta) * ryz(-mm.y*delta);\n       \n    ro -= rot[2]*iTime/6.;\n    \n    vec3 p = ro + rot*rd;\n    \n    vec3 q;\n    \n    vec3 cc = vec3(0.);\n    float stepsize = 1.5;\n    \n    for (float i=0.; i<3.; i++) {\n        q.x = fbm3d(p,i);\n        q.y = fbm3d(p.yzx,i);\n        q.z = fbm3d(p.zxy,i);\n        float f = fbm3d(p + q,i);\n        p += stepsize * rd;\n        cc += q * f * exp(-i*i/4.);        \n    }\n\n    cc = 1. - exp(-cc);    \n    cc = pow(cc,vec3(3.));\n    fragColor = vec4(cc,1.0);\n    \n}\n\n","name":"Image","description":"","type":"image"}]}