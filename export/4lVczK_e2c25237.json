{"ver":"0.1","info":{"id":"4lVczK","date":"1537287938","viewed":87,"name":"Vein Pipeline","username":"Shadeyboi","description":"based off of sphere project","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){\n    return mat2(cos(a), sin(a),\n                sin(a), cos(a));\n}\n\nvoid pMod1(inout float p, float size) {\n\tfloat halfsize = size*.5;\n\tp = mod(p + halfsize, size) - halfsize;\n}\n\nvoid pMod3(inout vec3 p, vec3 size) {\n\tp = mod(p + size*0.5, size) - size*0.5;\n}\n\nfloat sphere(vec3 p, float radius){\n    return length(p)-radius;\n\n}\n\n\nfloat map(vec3 p)\n{\n    vec3 q = p;\n\n    pMod3(q, vec3(.75, .75, .2));\n    pMod3(q, vec3(0.75, 1., 0.6));\n    \n    pMod1(p.x, 1.);\n    \t//q.y = abs(q.y)-0.1;\n    \n    float s1 = sphere(p, 0.75); \n    float s2 = sphere(q, 0.5);\n    float s3 = sphere(q, 0.5);\n    \n    float disp = min(2. * (abs(sin(p.x*iTime/2.)) *\n                       abs(sin(p.y*iTime/2.)) *\n                       (sin(p.z*15.)) ), 30.);\n    \ts1 += disp;\n    \ts2 -= disp;\n    \ts3 *= disp;\n    \t//s1 -= disp;\n    \t\n    \n    \n  \tfloat df1 = min(s1, s2); // Union\n    float df2 = max(s2, s1); // Intersection\n    float df3 = max(s1, s3); // Difference\n    \n    return df2;\n}\n\n\nfloat trace(vec3 origin, vec3 r) \n{\n  float t = 0.0;\n    for (int i = 0; i < 64; ++i) {\n        vec3 p = origin + r * t;\n        float d = map(p);\n        t += d*.5;\n        }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(.9, -abs(sin(iTime)), 0.3);\n    uv = uv *2.-1.; // Remap the space to -1. to 1.\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \t\n   \tfloat FOV = 1.;\n   \tvec3 ray = normalize(vec3(uv, FOV));\n    ray.xy *= abs(sin(iTime)) * .25;\n    \n    \n    vec3 origin = vec3(-iTime*.5, 0., -1.75);\n    float t = trace(origin, ray);\n    \n    float expFog = .3 / (t* t* 0.4);\n    \n    vec3 fc = vec3(expFog);\n    \n\n    //fragColor = vec4((fc+color),1.0);\n    fragColor = vec4(tan(fc+color),1.);\n}","name":"Image","description":"","type":"image"}]}