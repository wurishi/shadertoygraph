{"ver":"0.1","info":{"id":"DlBSzR","date":"1675537961","viewed":103,"name":"Filtro verde Matrix - #CG","username":"jeffersonl22","description":"Grupo: Jairo Pedro, Jefferson Lopes, Yan Silveira","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Atividade prática I de Computação Gráfica \n// Grupo: Jairo, Jefferson e Yan\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    // Normaliza os pixeis na tela\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Cria vetores que assumirão a cor original e a cor fonte da imagem / video\n    vec4 corOriginal = texture(iChannel0, uv);   \n    vec4 sourceColor = texture(iChannel0, uv);\n\n\n    // Manipulando o rgb de acordo com a expresão matemática para criar o aspecto verde\n    corOriginal.r = pow(corOriginal.r, 3.0/2.0);\n    corOriginal.g = pow(corOriginal.g, 4.0/5.0);\n    corOriginal.b = pow(corOriginal.b, 3.0/2.0);\n\n\n    // Chamando o resultado na tela\n    fragColor = mix(sourceColor, corOriginal, step(iMouse.x/iResolution.x, uv.x));\n}","name":"Image","description":"","type":"image"}]}