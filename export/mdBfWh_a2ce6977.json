{"ver":"0.1","info":{"id":"mdBfWh","date":"1689674495","viewed":41,"name":"CellCollission","username":"MrHAX00","description":"Wanted to see if I could make a very specific effect I wanted and it kinda works.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mouse","circle","monochrome"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    vec2 Mouse = (iMouse.xy - iResolution.xy * .5) / iResolution.y;\n\n    // Time varying pixel color\n    //float Dist2 = length(uv - Mouse);\n    \n    vec2 nMouse = normalize(Mouse);\n    float Slope = -nMouse.y / nMouse.x;\n    float Dist1 = smoothstep(\n        .01,\n        .0,\n        (Slope * (uv.y - Mouse.y * .5) - (uv.x - Mouse.x * .5)) * -sign(nMouse.x) + .01\n    );\n    float Dist2 = smoothstep(\n        .0,\n        .01,\n        (Slope * (uv.y - Mouse.y * .5) - (uv.x - Mouse.x * .5)) * -sign(nMouse.x)\n    );\n    \n    float Cell1 = smoothstep(.26, .25, length(uv)) * Dist1;\n    float Cell2 = smoothstep(.26, .25, length(Mouse - uv)) * Dist2;\n    \n    vec3 col = vec3(Cell1 + Cell2);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}