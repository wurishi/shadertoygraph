{"ver":"0.1","info":{"id":"lXX3WH","date":"1707396038","viewed":66,"name":"Optical Illuzion","username":"Shin0155","description":"Colorful Optical Illuzions","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["opticalillusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Aurora Borealis Shadertoy\n// Adapted from https://www.shadertoy.com/view/Xds3zN\n\n#define TIME iTime \n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 col = vec3(0.0);\n\n    // Aurora colors\n    col += hsv2rgb(vec3(sin(TIME) + 0.5, 1.0, 1.0)); \n    col += hsv2rgb(vec3(sin(TIME + 0.5) + 0.5, 1.0, 1.0));\n    col += hsv2rgb(vec3(sin(TIME + 1.0) + 0.5, 1.0, 1.0));\n\n    // Aurora waves\n    float x = uv.x + sin(uv.y * 10.0 + TIME) * 0.01;\n    float y = uv.y + cos(uv.x * 10.0 + TIME) * 0.01;\n    col += sin(x * 100.0) + cos(y * 100.0);\n\n    // Output color\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}