{"ver":"0.1","info":{"id":"3sdyRH","date":"1600388567","viewed":388,"name":"Magnifying Glass Effect","username":"oneshade","description":"I though it would be cool to do a magnifying glass shader so here one is. Drag the mouse to move the magnifying glass. When you release the mouse the magnifying glass will move in a figure eight. Thanks FabriceNeyret2 for the suggestion.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["effect","glass","magnifying"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 lensBorderColor = vec3(0.0, 0.0, 0.0);\nconst float lensBorderWidth = 4.0;\nconst float lensRadius = 50.0;\nconst float lensMag = 5.0;\n\nconst float _halfBorderWidth = lensBorderWidth / 2.0;\nconst float _innerRadius = lensRadius - _halfBorderWidth;\nconst float _outerRadius = lensRadius + _halfBorderWidth;\n\nvec3 shade(in vec2 fragCoord) {\n    float sinTime = sin(0.25 * iTime);\n    float cosTime = cos(0.25 * iTime);\n    vec2 mousePos = 0.5 * iResolution.xy + vec2(cosTime * iResolution.x * 0.390625, sinTime * cosTime * iResolution.y * 0.520833);\n    if (iMouse.z > 0.0) {\n        mousePos = iMouse.xy;\n    }\n\n    float dist = sqrt(pow(fragCoord.x - mousePos.x, 2.0) + pow(fragCoord.y - mousePos.y, 2.0));\n\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 outColor = texture(iChannel0, uv).xyz;\n\n    if (dist <= _innerRadius) {\n        uv = (mousePos + ((fragCoord - mousePos) / lensMag)) / iResolution.xy;\n        outColor = texture(iChannel0, uv).xyz;\n    }\n    \n    if (dist > _innerRadius && dist <= _outerRadius) {\n        outColor = lensBorderColor;\n    }\n\n    return outColor;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 color = shade(fragCoord);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}