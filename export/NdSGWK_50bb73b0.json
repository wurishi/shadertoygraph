{"ver":"0.1","info":{"id":"NdSGWK","date":"1617919337","viewed":74,"name":"Jeffrey","username":"SnoopethDuckDuck","description":"idk how this works","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159;\nconst float pi2 = 1. * pi / 3.;\nconst float pi3 = 2. * pi / 3.;\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\nvec2 dir = uv.xy- 0.5;\ndir *= 5. + 2.5 * cos(0.3 * iTime);\n\nfloat d = length(dir);\n\nfloat theta = atan( dir.y,dir.x);\n\nfloat b = 0.5 + 0.5 * cos(iTime);\nfloat t= iTime + pi * cos(iTime) / 3.;\nfloat t2 = iTime + pi * cos(iTime + pi2) / 3. + pi2;\nfloat t3 = iTime + pi * cos(iTime + pi3) / 3. + pi3;\n\nfloat p =cos(0.5 * (1. + cos(t)) * d - theta + 0.5 * cos( t - 2. * theta)) * cos(d- 0.5 + 1.5 * cos(0.25 * t));\nfloat p2 =  cos(0.5 * (1. + cos(t2)) * d - theta + 0.5 * cos(t2 - 2. * theta)) * cos(d - 0.5 + 1.5 * cos(0.25 * t2 + pi2 / 2.));\nfloat p3 =  cos(0.5 * (1. + cos(t3)) * d - theta + 0.5 * cos(t3 - 2. * theta)) * cos(d - 0.5 + 1.5 * cos(0.25 * t3 - pi2/2.));\nfloat val = max(1. - p,p * p2);\nfloat val2 = max(1. -p2,p2 * p3);\nfloat val3 = max(1. -p3,p3 * p);\n\n    // Time varying pixel color\n    vec3 col = 1. - vec3(\n    smoothstep(val + val2, d * p, d * sqrt(val * val + val3 * val3)),\n    smoothstep(val2 + val3, d * p2, d * sqrt(val2 * val2 + val * val)),\n    smoothstep(val3 + val, d * p3, d * sqrt(val3 * val3 + val2 * val2)));\n    \n    vec3 col2 =  mix(1. - vec3(0.2126* col.x + 0.7152 * col.y + 0.0722 * col.z),\n     vec3(step(col.x,0.5 + 0.25 * cos(t)),\n     step(col.y,0.5 + 0.25 * cos(t2)),\n     step(col.z,0.5 + 0.25 * cos(t3))), d * b);\n    //col2 = vec3(step(col.x,b));\n    col =   1. - min(col,0.58 *  sqrt( 1. - col * col + col2 * col2));\ncol = mix(col, vec3( col.x * col.z, col.y * col.x, col.z * col.y), b);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}