{"ver":"0.1","info":{"id":"4csyWs","date":"1721877414","viewed":23,"name":"dynamic 3D point cloud3","username":"ShaddyNormals","description":"\n A basic shader that creates a animated 3d point cloud.\n Shader created as a first attempt to create a shader based simulation with shadertoy, inspired by code written by @KomaTebe  https://x.com/KomaTebe/status/1811370026420600848","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3dpointcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord - iResolution.xy * 0.5;\n    uv /= iResolution.y;\n    \n    float k = 88.0;\n    float d = 3.14159265359 / 35.0;\n    float f = iTime * 1.0;\n    \n    vec3 col = vec3(0.0);\n    float circleCount = 0.0;\n    \n    for (float u = 0.0; u <= 10.28318530718; u += d) {\n        for (float v = 0.0; v <= 3.14159265359; v += d) {\n            for (float i = 0.0; i < 6.28318530718; i += 3.14159265359 / 2.0) {\n                float I = sin(i / 9.5 + v + f);\n                float Y = k * sin(u) * sin(v) * I;\n                vec3 point = vec3(\n                    k * cos(u) * sin(v) + k * sin(i),\n                    k * sin(u) * cos(v) * I + k * cos(i),\n                    Y\n                );\n                \n                vec2 proj = point.xy / (point.z + 300.0);\n                proj.x /= (10.0 / 17.0);\n                proj = proj * 0.8;\n                proj += vec2(-8.0 / iResolution.y, -9.0 / iResolution.y);\n                proj += 0.0009;\n                \n                float circleSize = 0.008 * (1.0 - fract(circleCount * 0.01 + iTime * 0.5));\n                if (distance(proj, uv) < circleSize) {\n                    col += vec3(4.0 * Y);\n                }\n                \n                circleCount += 10.0;\n            }\n        }\n    }\n    \n    // Apply contrasting colors\n    vec3 color1 = vec3(2.0, 0.1, 0.7);  // pink\n    vec3 color2 = vec3(3.0, 3.0, 5.0);  // Orange\n    \n    col = mix(color1, color2, col.r);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}