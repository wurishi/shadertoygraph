{"ver":"0.1","info":{"id":"ldtSRX","date":"1460951444","viewed":830,"name":"Poorly implemented 2D metaballs","username":"tomator","description":"Click to move subtractive metaball. Change ANTIALIAS to 1 for better performance or comment it out to disable it entirely.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","metaballs","newbie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Metaball{\n    vec2 pos;\n    float r;\n    vec3 col;\n};\n\nvec4 calcball( Metaball ball, vec2 uv)\n{\n    float dst = ball.r / (pow(abs(uv.x - ball.pos.x), 2.) + pow(abs(uv.y - ball.pos.y), 2.));\n    return vec4(ball.col * dst, dst);\n}\n\nvec3 doballs( vec2 uv )\n{\n    Metaball mouse;\n    mouse.pos = iMouse.xy / iResolution.yy;\n    mouse.r = .015;\n    mouse.col = vec3(.5);\n    \n    Metaball mb1, mb2, mb3, mb4;\n    mb1.pos = vec2(1.3, .55+.2*sin(iTime*.5)); mb1.r = .05; mb1.col = vec3(0., 1., 0.);\n    mb2.pos = vec2(.6, .45); mb2.r = .02; mb2.col = vec3(0., .5, 1.);\n    mb3.pos = vec2(.85, .65); mb3.r = .035; mb3.col = vec3(1., .2, 0.);\n    mb4.pos = vec2(1.+.5*sin(iTime), .2); mb4.r = .02; mb4.col = vec3(1., 1., 0.);\n    \n    vec4 ball1 = calcball(mb1, uv);\n    vec4 ball2 = calcball(mb2, uv);\n    vec4 ball3 = calcball(mb3, uv);\n    vec4 ball4 = calcball(mb4, uv);\n    \n    vec4 subball1 = calcball(mouse, uv);\n    \n    float res = ball1.a + ball2.a + ball3.a + ball4.a;\n    res -= subball1.a;\n    float threshold = res >= 1.5 ? 1. : 0.;\n    \n    vec3 color = (ball1.rgb + ball2.rgb + ball3.rgb + ball4.rgb - subball1.rgb) / res;\n    color *= threshold;\n    color = clamp(color, 0., 1.);\n\treturn color;\n}\n\n#define ANTIALIAS 2\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    \n    vec3 color = doballs(uv);\n    \n    #ifdef ANTIALIAS\n    float uvs = .75 / iResolution.y;\n    color *= .5;\n    color += doballs(vec2(uv.x + uvs, uv.y))*.125;\n\tcolor += doballs(vec2(uv.x - uvs, uv.y))*.125;\n    color += doballs(vec2(uv.x, uv.y + uvs))*.125;\n    color += doballs(vec2(uv.x, uv.y - uvs))*.125;\n    \n    #if ANTIALIAS == 2\n  \tcolor *= .5;\n    color += doballs(vec2(uv.x + uvs*.85, uv.y + uvs*.85))*.125;\n    color += doballs(vec2(uv.x - uvs*.85, uv.y + uvs*.85))*.125;\n    color += doballs(vec2(uv.x - uvs*.85, uv.y - uvs*.85))*.125;\n    color += doballs(vec2(uv.x + uvs*.85, uv.y - uvs*.85))*.125;\n    #endif\n    #endif\n    \n\tfragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}