{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Adapted by S.Guillitte from Fire by @301z\n\nconst mat2 m2 = mat2(.8,.6,-.6,.8);\n\n\nfloat noise(in vec2 p){\n\n    float res=0.;\n    float f=1.;\n\tfor( int i=0; i< 2; i++ ) \n\t{\t\t\n        p=m2*p*f+.6;     \n        f*=1.2;\n        res+=sin(p.x+sin(2.*p.y));\n\t}        \t\n\treturn abs(res/4.);\n}\n\nfloat fbm(in vec2 p){\n\t\n    float res=0.;\n    float f=1.;\n\tfor( int i=0; i< 7; i++ ) \n\t{\n        res+=noise(f*p)/f;\n        f*=2.;\n\t}        \t\n\treturn res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n\tvec2 p = fragCoord.xy * 8.0 / iResolution.xx;\n    float t = iTime;\n\tfloat q = fbm(p - t * 0.1);\n\tvec2 r = vec2(fbm(q - p.yx + t * 0.7 ), fbm(p + q - t * 0.4));\n    float s = fbm(p + r);\n\tvec3 c = clamp(vec3(0.1+s*.7+r.x-.7*r.y, r.x-r.y, 0.)*1.1,0.,1.);\n\tfragColor = vec4(c * cos(1.57 * fragCoord.y / iResolution.y), 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xts3DX","date":"1425720657","viewed":771,"name":"Fire revisited","username":"guil","description":"A remake of Fire by @301z with sine wave noise (https://www.shadertoy.com/view/Xsl3zN)","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","fire"],"hasliked":0,"parentid":"","parentname":""}}