{"ver":"0.1","info":{"id":"lfyXD3","date":"1715849711","viewed":57,"name":"my rotate square","username":"phantopia","description":"矩形的原位置旋转，并保持图形原始大小不变","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate (vec2 uv, float theta){\n    return mat2(cos(theta), sin(theta), -sin(theta), cos(theta)) * uv;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n        \n\n    //render square\n    float size = 0.15;\n    //需要在旋转变换之前把x，y的uv坐标比例变换到一致\n    uv.x = uv.x * iResolution.x/iResolution.y;\n    //move the square in screen center\n    float CenterOffset = 0.5;\n    float x = uv.x - 0.89;\n    float y = uv.y - CenterOffset;\n    vec2 rota = rotate(vec2(x,y), iTime);\n   \n    if(max(abs(rota.x), abs(rota.y)) - size < 0.0){\n    \n   \n    col = vec3(1.0, 1.0, 1.0) - col;\n    //uv = rotate(uv, iTime);\n    \n    \n    \n    }\n\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}