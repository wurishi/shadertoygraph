{"ver":"0.1","info":{"id":"lsc3DN","date":"1449660556","viewed":177,"name":"Outer brush : MdSGDm+lt2XRD","username":"PeterVivo","description":"Experimental painting stuff. \n\nI would like try shader programming ( work with JS , AS ), so i try to combine two shader and it is work :D \nBase idea is make a small drawing program with couple of animated brush.\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["paintmouseinteraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// begining of my shader learning this is = https://www.shadertoy.com/view/MdSGDm + https://www.shadertoy.com/view/lt2XRD\n\nvec3 diskWithMotionBlur( vec3 col, in vec2 uv, in vec3 sph, in vec2 cd, in vec3 sphcol )\n{\n\tvec2 xc = uv - sph.xy;\n\tfloat a = dot(cd,cd);\n\tfloat b = dot(cd,xc);\n\tfloat c = dot(xc,xc) - sph.z*sph.z;\n\tfloat h = b*b - a*c;\n\tif( h>0.0 )\n\t{\n\t\th = sqrt( h );\n\t\t\n\t\tfloat ta = max( 0.0, (-b - h)/a );\n\t\tfloat tb = min( 1.0, (-b + h)/a );\n\t\t\n\t\tif( ta < tb ) // we can comment this conditional, in fact\n\t\t    col = mix( col, sphcol, clamp(2.0*(tb-ta),0.0,1.0) );\n\t}\n\n\treturn col;\n}\n\n\nvec3 hash3( float n ) { return fract(sin(vec3(n,n+1.0,n+2.0))*43758.5453123); }\nvec4 hash4( float n ) { return fract(sin(vec4(n,n+1.0,n+2.0,n+3.0))*43758.5453123); }\n\nconst float speed = 8.0;\nvec2 getPosition( float time, vec4 id ) { return vec2(       0.9*sin((speed*(0.75+0.5*id.z))*time+20.0*id.x),        0.75*cos(speed*(0.75+0.5*id.w)*time+20.0*id.y) ); }\nvec2 getVelocity( float time, vec4 id ) { return vec2( speed*0.9*cos((speed*(0.75+0.5*id.z))*time+20.0*id.x), -speed*0.75*sin(speed*(0.75+0.5*id.w)*time+20.0*id.y) ); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy) / iResolution.y;\n\t\n\tvec3 col = vec3(0.2) + 0.05*p.y;\n\t\n\tfor( int i=0; i<16; i++ )\n\t{\t\t\n\t\tvec4 off = hash4( float(i)*13.13 );\n        vec3 sph = vec3( getPosition( iTime, off ), 0.02+0.1*off.x );\n        vec2 cd = getVelocity( iTime, off ) /24.0 ;\n\t\tvec3 sphcol = 0.7 + 0.3*sin( 3.0*off.z + vec3(4.0,0.0,2.0) );\n\t\t\n        col = diskWithMotionBlur( col, p, sph, cd, sphcol );\n\t}\t\t\n\n    col += (1.0/255.0)*hash3(p.x+13.0*p.y);\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // ---- painter \n    \n    float distance = length( fragCoord.xy - iMouse.xy );\n\n    if( iMouse.z > 0.01 && distance < abs(sin(iTime)*200.0+50.0) ) discard;\n    \n    float pulse = 0.75 + 0.25 * sin( iTime );\n    \n    fragColor = vec4(col+cos( iResolution.x/ (iMouse.x+0.00001)),1.0) + vec4( sin( distance * pulse ), cos( distance * pulse ), pulse, 1.0 ) ;\t    \n    \n}","name":"","description":"","type":"image"}]}