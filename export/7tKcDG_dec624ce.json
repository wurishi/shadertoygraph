{"ver":"0.1","info":{"id":"7tKcDG","date":"1662141336","viewed":102,"name":"Swirling Rainbow Fractal","username":"spenceryonce","description":"Simple swirling rainbow fractal","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","simple","swirl","warping","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Setup the coordinates & base color\n    vec2 uv = (fragCoord.xy / iResolution.xy)*2.0-1.0;\n    vec3 color = vec3(0.0);\n    float a = 0.2 + sin(iTime+cos(iTime))*0.2;\n    \n    //Fractalize the coordinates\n    uv *= 0.8+sin(iTime+uv.x-uv.y)*0.2;\n    for(int i = 0; i < 4; i++) {\n        uv = abs(uv);\n        uv -= 0.5;\n        uv *= 1.1;\n        uv *= mat2(cos(a), -sin(a), sin(a), cos(a));\n        uv += 0.5;\n    }\n    \n    \n    //Setup the angle of rotation & the center of the circle\n    float angle = atan(-uv.y,uv.x-0.5)*0.1;\n    float len = length(uv-vec2(0.2,0.5));\n\n    //Rotate the UV coordinates as color\n    color.r += sin(len*40.0+angle*40.0+iTime);\n    color.g += cos(len*30.0+angle*50.0-iTime);\n    color.b += sin(len*50.0+angle*60.0+3.0);\n\n    //Add in the fractal component\n    color = color * fract(color * 3.0);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}