{"ver":"0.1","info":{"id":"Mcffz8","date":"1723326125","viewed":53,"name":"mimimi","username":"ArthurTent","description":"little mimimi! I'm new to shader programming and I've tried something different... but it didn't worked out as designed. so I was in \"mimimi-mood\".\nugly code, ugly mimimi\nThanks@\"PixcelRick\" Shader by leviathwaite (hair) and jorge2017a2 for \"pantera rosa\"","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mimimi"],"hasliked":0,"parentid":"lfXfz8","parentname":"test-little-mole01"},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MIMIMI 1\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(1.0/antialiasing(0.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\n// Define colors\nvec3 bellyColor = vec3(0.5, 0.5, 0.5);   // Dark gray belly\nvec3 faceColor = vec3(0.9, 0.9, 0.9);    // White face\nvec3 noseColor = vec3(0.8, 0.1, 0.1);    // Red nose\nvec3 eyeColor = vec3(1.0, 1.0, 1.0);     // White eyes\nvec3 pupilColor = vec3(0.0, 0.0, 0.0);   // Black pupils\nvec3 skinColor = vec3(0.97,0.61,0.7);\nvec3 orange = vec3(1.0, 0.5, 0.0);\nvec3 black = vec3(0.0);\nvec3 mouthColor = vec3(0.8,0.2,0.);\n// Parameters for position and size\n vec2 nosePosition = vec2(0.5, 0.62);\n float noseSize = 0.125;\n vec2 mouthCenter = vec2(0.5, 0.3);\n float mouthRadius = 0.25;\n vec2 leftEyePosition = vec2(0.4, 0.8);\n vec2 rightEyePosition = vec2(0.6, 0.8);\n float eyeSize = 0.1;\n float pupilSize = 0.03;\n\nfloat SpikeyCircle(vec2 p, float points)\n{\n   vec2 st = vec2(atan(p.x, p.y + 0.1), length(p));\n\n  // float t = mod(st.x, 0.05);\n  // float t = st.x + st.y * 5.0;\n  float t = 1.0 - st.y * 0.2;\n\n  st = vec2(st.x / 6.2831 + 0.5 * t, st.y);\n\n  float x = st.x * points;\n  float m = min(fract(x), fract(1.0 - x));\n  float spikeLength = 0.7 - st.y;\n  float centerRadius = 0.25;\n  float c = smoothstep(0.0, 0.02, m * spikeLength + centerRadius - st.y);\n\n\n  return c;\n\n}\nfloat DrawHair(vec2 uv)\n{\n    uv.y*=1.65;\n    // uv *= -1.0;\n    // translate\n    uv.y -= 0.75;\n    // scale larger at top than bottom\n    uv.x *= uv.y - 0.99;\n  \treturn SpikeyCircle(uv, 11.0);\n}\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  //colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat divf(float a, float b)\n{\n    //evita crash por 1/0.0 =Infinito=error, en compilar\n    if(b==0.0)\n    {b=0.00001;}\n    return a/b;\n}\nvec3 face(vec2 p, vec3 colout)\n{\n    vec2 A,B, med,pr;\n    float dfin;\n    float  r1 ;\n\n    vec3 colc=skinColor;\n\n   \n    A=vec2(0.5,0.1);\n    med=vec2(0.28,0.315734);\n    float d1=sdBox(p-A,med);\n    colout= DFB(colc, colout, d1);\n        return colout;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec3 color=vec3(0.);\n    vec2 center = iResolution.xy / 2.0;\n    float vidWidth = iResolution.x*.5;\n    float vidHeight = iResolution.y*.5;\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    vec2 bg_uv = fragCoord - (center - vec2(vidWidth, vidHeight) / 2.0);\n    bg_uv.y+=((iResolution.y/100.)*30.);\n    bg_uv.y*=.45;\n\n    vec2 vidUV = bg_uv / vec2(vidWidth, vidHeight);\n    if (bg_uv.x >= 0.0 && bg_uv.x <= vidWidth && bg_uv.y >= 0.0 && bg_uv.y <= vidHeight) {\n        color += texture(iChannel1, vidUV).r;\n    }else{\n        color+=vec3(0.051,0.051,0.051);\n    }\n    \n    uv.x+=.4;\n    float audio = texture(iChannel0,uv).r/2.;\n    uv.x-=.4;\n    \n\n    uv.y+=.85;\n    color = mix(color, orange, DrawHair(uv));\n    \n    uv.x+=.47;\n    color = face(uv, color);\n    uv.x-=.5;\n    \n    uv.x+=.5;\n    uv.y+=.5;\n\n    // Draw the mouth\n    float mouth = distance(uv, mouthCenter);\n    if (mouth < mouthRadius) {\n        //color = bellyColor;\n        color = mouthColor;\n    }\n    \n    \n    // Draw the throat\n    float throatSize = mouthRadius * 0.38;\n    float distThroat = distance(uv, mouthCenter + vec2(0.0, throatSize));\n    if (distThroat < throatSize) {\n        color = black;\n    }\n\n    // draw the... dunno the name\n    uv.y-=0.15;\n    float dunnoSize = mouthRadius *0.1;\n    float distDunno = distance(uv, mouthCenter + vec2(0., dunnoSize));\n    if(distDunno < dunnoSize) {\n        color=mouthColor;\n    }\n    uv.y+=0.15;\n    \n    //moving lips\n    uv.y+=audio/10.;\n    color = face(uv, color);\n    uv.y-=audio/10.;\n\n    \n    // Draw the eyes\n    float distLeftEye = distance(uv, leftEyePosition);\n    float distRightEye = distance(uv, rightEyePosition);\n    if (distLeftEye < eyeSize || distRightEye < eyeSize) {\n        color = eyeColor;\n    }\n\n    // Draw the pupils\n    if (distLeftEye < pupilSize) {\n        color = pupilColor;\n    }\n    if (distRightEye < pupilSize) {\n        color = pupilColor;\n    }\n    // Draw the nose\n    float distNose = distance(uv, nosePosition);\n    if (distNose < noseSize) {\n        //color = noseColor;\n        color = orange;\n    }\n\n\n    // Output the final color\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}