{"ver":"0.1","info":{"id":"WsSBRy","date":"1590242524","viewed":101,"name":"Area of possible colors","username":"codaaaaa","description":"The color space in:\nhttps://www.shadertoy.com/view/3dSfDW\nWith varying luma over time, all pixels that produce impossible colors are discarded","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorconversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord; //Pixel Coords\n    uv.x -= ( iResolution.x - iResolution.y ) / 2.0; //Centre\n    uv = uv / iResolution.yy; //0 to 1\n    uv *= 2.0; uv -= vec2(1.0); //-1 to +1\n    //uv.y *= -1.0; //Vertical mirror\n    uv /= vec2(0.95); //Scale\n    \n    \n    \n    vec3 lu = vec3(2126., 7152., 0722.);\n    lu /= lu.r + lu.g + lu.b;\n    float luYel = lu.r + lu.g;\n    \n    mat3 toColCoord = transpose(mat3(\n         //Luma\n         lu.r, lu.g, lu.b,\n        //Blue-Yellow opponent\n        -lu.r / luYel, -lu.g / luYel, 1.0,\n        //Red-Green opponent\n        +1.0, -1.0, 0.0\n    ));\n    \n    //mat3 toRGB = inverse(toColCoord);\n    //Calculate it manually because GL ES\n    mat3 toRGB = transpose(mat3(\n    \t1., -361./5000.,   3576./4639.,\n        1., -361./5000.,  -1063./4639.,\n        1.,  4639./5000., 0.\n    ));\n    \n    vec3 col = toRGB * vec3(cos(iTime*1.5)/2.+.5, uv.x, uv.y);\n    \n    vec3 colDiff = col - clamp(col, vec3(0.), vec3(1.));\n    if (dot(colDiff, vec3(1.)) != 0.0) {\n        col = vec3(0.);\n    }\n    \n    \n    \n    // Output to screen\n    if (abs(uv.x) > 1.0 || abs(uv.y) > 1.0) {\n        col = vec3(0);\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}