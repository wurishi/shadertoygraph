{"ver":"0.1","info":{"id":"4tKfzD","date":"1542038994","viewed":195,"name":"Freeform gradient","username":"nkint","description":"illustrator freeform gradient trial","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 black = vec3(0.0, 0.0, 0.0);\nvec3 white = vec3(1.0, 1.0, 1.0);\nvec3 red = vec3(1.0, 0.0, 0.0);\nvec3 blue = vec3(0.0, 0.0, 1.0);\nvec3 green = vec3(0.0, 1.0, 0.0);\n\nfloat dst(vec2 a, vec2 b) {\n  //return pow(1. - distance(a, b) / sqrt(2.), 100.);\n  //float delta = mix(100., 10., atan(distance(a, b)) / 1.57);\n  return pow(1. - distance(a, b), 10.);\n  //return 1. - distance(a, b);\n  //return exp(1. - distance(a, b));\n  //return 1. / (1. + distance(a, b));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    vec2 p = fragCoord.xy / iResolution.xy;\n\n  vec2 points[4];\n  points[0] = vec2(0.48, 0.75); // mouse;//\n  points[1] = vec2(0.5, 0.22);\n  points[2] = vec2(0.5, 0.5);\n  points[3] = vec2(0.5, 0.75);\n\n  vec3 colors[4];\n  colors[0] = red;\n  colors[1] = blue;\n  colors[2] = green;\n  colors[3] = black;\n\n  const int len = 4;\n\n  float weight = 0.0;\n  vec3 sum = vec3(0.0);\n  for (int i = 0; i < len; ++i) {\n    float lw = dst(p, points[i]);\n    sum += lw * colors[i];\n    weight += lw;\n  }\n  vec3 color = sum / weight;\n  fragColor = vec4(color, 1.0);\n\n  for (int i = 0; i < 4; i++) {\n    if(distance(p, points[i]) < .003) {\n      fragColor = vec4(white, 1.0);\n    }\n  }\n\n}","name":"Image","description":"","type":"image"}]}