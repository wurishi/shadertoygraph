{"ver":"0.1","info":{"id":"MfBfRD","date":"1724707799","viewed":24,"name":"Binary Godel Sentences By RikR","username":"rikr","description":"Crude starting point to explore model theory and formal systems to generate new patterns, ideas from:\nwiki/GÃ¶del%27s_incompleteness_theorems\nSince encoding mathematical reasoning is possible in similar ways it should have some parameters that look novel.\n","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["math","experimental","visualisation","primes","system","logic","statistics","chaotic","paradox","godel","formal","provability"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Binary Godel Sentences By Rik Riesmeijer, 2024 - No Rights Reserved.\n// License: Copyright Free (cc0), No Citation Necessary. (Have at it!)\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 u = fragCoord.yx * iResolution.xy + fragCoord;\n    vec2 v = 2.0 * u + 1.0;\n    vec4 result = vec4(u, v);\n    vec4 prm1 = vec4(  3.0,   5.0,   7.0,  11.0),\n         prm2 = vec4( 13.0,  17.0,  19.0,  23.0),\n         prm3 = vec4( 29.0,  31.0,  37.0,  41.0),\n         prm4 = vec4( 43.0,  47.0,  53.0,  59.0);\n    vec4 prc1 = vec4( 61.0,  67.0,  71.0,  73.0),\n         prc2 = vec4( 79.0,  83.0,  89.0,  97.0),\n         prc3 = vec4(101.0, 103.0, 107.0, 109.0),\n         prc4 = vec4(113.0, 127.0, 131.0, 137.0);\n    vec4 scl1 = vec4(32768, 16384,  8192,  4096),\n         scl2 = vec4( 2048,  1024,   512,   256),\n         scl3 = vec4(  128,    64,    32,    16),\n         scl4 = vec4(    8,     4,     2,     1);\n    float t1 = iTime, t2 = t1, t3 = t2, t4 = t3;\n    vec4 mix1 = abs(t1 - fract(floor(v.x / scl1) * 0.5)),\n         mix2 = abs(t2 - fract(floor(v.x / scl2) * 0.5)),\n         mix3 = abs(t3 - fract(floor(v.x / scl3) * 0.5)),\n         mix4 = abs(t4 - fract(floor(v.x / scl4) * 0.5));\n    mat4 primes = mat4(  mix(prm1, prc1, mix1)\n                       , mix(prm2, prc2, mix2)\n                       , mix(prm3, prc3, mix3)\n                       , mix(prm4, prc4, mix4));\n    fragColor = 0.5 + 0.5 * sin(primes * result);\n}","name":"Image","description":"","type":"image"}]}