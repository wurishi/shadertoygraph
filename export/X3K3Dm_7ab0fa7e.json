{"ver":"0.1","info":{"id":"X3K3Dm","date":"1717960033","viewed":35,"name":"raymarched thingamajiggy","username":"subzerocatalyst","description":"fully procedural textures! :)","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["procedural","raymarching","cube","pyramid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord/iResolution.xy);\n    vec3 samp = texture(iChannel0,uv / floor(iResolution.x/512.0)).rgb;\n    //fragColor.rgb = vec3(samp.rg,0.0);\n    fragColor.rgb = mix(vec3(0.0,0.0,0.0), vec3(0.75,0.67,0.33), floor((samp.r*samp.g)*1.0 + texture(iChannel1,fragCoord / 8.0).r)/1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define EPSILON 0.0001\n#define LIGHTING\n\nstruct sdfData\n{\n    vec2 dis;\n    vec2 uv;\n};\n\n// sdfs from inigo quilez\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdPlane( vec3 p, vec3 n, float h)\n{\n  return dot(p,n) + h;\n}\n\nfloat sdCappedCylinder( vec3 p, float h, float r )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\nvec2 uvPlane(vec3 p, vec3 n){\n    return p.xz;\n}\n\nvec2 uvCappedCylinder(vec3 p, float h, float r){\n    if(abs(p.y-h)-EPSILON < EPSILON){\n        return (p.xz/r)*0.5 +0.5;\n    }\n    return vec2(atan(p.x/p.z)*0.31830988,(p.y)*0.5 + 0.5);\n    \n}\n\nvec2 uvBox(vec3 p, vec3 b){\n    float m = max(max(abs(p.x),abs(p.y)),abs(p.z));\n    if(m == abs(p.x)){\n        return (p.zy)*0.5;\n    }\n    if(m == abs(p.y)){\n        return (p.xz)*0.5;\n    }\n    return (p.yx)*0.5;\n}\n\nmat3 rotateY(float yaw){\n    return mat3(cos(yaw),0.0,-sin(yaw),\n        0.0,1.0,0.0,\n        sin(yaw),0.0,cos(yaw)\n    );\n}\n\nmat3 rotateX(float pitch){\n    return mat3(cos(pitch),-sin(pitch),0.0,\n        sin(pitch),cos(pitch),0.0,\n        0.0,0.0,1.0\n    );\n}\n\nmat3 rotateZ(float pitch){\n    return mat3(1.0,0.0,0.0,\n        0.0,cos(pitch),-sin(pitch),\n        0.0,sin(pitch),cos(pitch)\n    );\n}\n\nvec4 join(vec4 a,vec4 b){\n    return a.x < b.x ? a : b;\n}\n\nvec4 sub(vec4 a, vec4 b){\n    return -a.x > b.x ? -a : b;\n}\n\nvec4 inter(vec4 a, vec4 b){\n    return a.x > b.x ? a : b;\n}\n\nvec4 combined(vec3 pos){\n    vec4 res = vec4(256.0,0.0,0.0,0.0);\n    res = join(res,vec4( -sdBox(pos,vec3(24.0)),0.0,uvBox(pos,vec3(2.0))*0.125 ) );\n    res = sub(vec4(sdCappedCylinder(pos * rotateY(3.14159265*0.25) *rotateX(3.14159265*0.5),96.0,4.0),0.0,uvCappedCylinder(pos  * rotateY(3.14159265*0.25) *rotateX(3.14159265*0.5),96.0,4.0)*0.125),res);\n    res = sub(vec4(sdBox((pos+vec3(0.0,4.0,0.0))* rotateY(3.14159265*0.25),vec3(96.0,4.0,4.0)),0.0,uvBox((pos+vec3(0.0,4.0,0.0))* rotateY(3.14159265*0.25),vec3(96.0,4.0,4.0)) * 0.125),res);\n\n    res = sub(vec4(sdCappedCylinder(pos * rotateY(3.14159265*0.75) *rotateX(3.14159265*0.5),96.0,4.0),0.0,uvCappedCylinder(pos  * rotateY(3.14159265*0.75) *rotateX(3.14159265*0.5),96.0,4.0)*0.125),res);\n    res = sub(vec4(sdBox((pos+vec3(0.0,4.0,0.0))* rotateY(3.14159265*0.75),vec3(96.0,4.0,4.0)),0.0,uvBox((pos+vec3(0.0,4.0,0.0))* rotateY(3.14159265*0.75),vec3(96.0,4.0,4.0)) * 0.125),res);\n\n\n    res = join(res,vec4(sdBox(pos*rotateX(iTime)*rotateZ(iTime), vec3(1.0)), 2.0, uvBox(pos*rotateX(iTime)*rotateZ(iTime),vec3(1.0)) * 0.5 ));\n\n    res = sub(vec4(sdSphere(pos,1.4),2.0,res.zw),res);\n    \n    res = join(res,vec4(sdCappedCylinder(pos+vec3(0.0,6.0,0.0),1.0,4.0),1.0, uvCappedCylinder(pos+vec3(0.0,6.0,0.0),1.0,4.0)));\n    res = join(res,vec4(sdCappedCylinder(pos+vec3(6.0,-2.0,0.0),12.0,1.0),0.0, (uvCappedCylinder(pos+vec3(6.0,-2.0,0.0),12.0,1.0) + vec2(0.5,0.0)) * vec2(0.25,0.125) ));\n    res = join(res,vec4(sdCappedCylinder(pos+vec3(-6.0,-2.0,0.0),12.0,1.0),0.0,(uvCappedCylinder(pos+vec3(-6.0,-2.0,0.0),12.0,1.0) + vec2(0.5,0.0)) * vec2(0.25,0.125) ));\n    res = join(res,vec4(sdCappedCylinder(pos+vec3(0.0,-2.0,6.0),12.0,1.0),0.0, uvCappedCylinder(pos+vec3(0.0,-2.0,6.0),8.12,1.0) * vec2(0.25,0.125) ));\n    res = join(res,vec4(sdCappedCylinder(pos+vec3(0.0,-2.0,-6.0),12.0,1.0),0.0, uvCappedCylinder(pos+vec3(0.0,-2.0,-6.0),12.0,1.0) * vec2(0.25,0.125) ));\n    res = join(res,vec4(sdPlane(pos,vec3(0.0,1.0,0.0),7.0),0.0, pos.xz*0.06125));\n    return res;\n}\n\nvec3 checker(vec2 uv, vec3 c1, vec3 c2){\n    return mix(c1,c2,float(int(step(fract(uv.x),0.5)) ^ int(step(fract(uv.y),0.5))));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy)*floor(iResolution.x/512.0);\n    if(uv.x > 1.0 || uv.y > 1.0){discard;}\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 view = vec3(uv,1.0);\n    view *= 0.70710678/dot(view,view);\n    float dis = 0.0;\n    view = view * rotateZ(sin(3.14159265*iTime * 0.125)*0.02 + 0.5) * rotateY(3.14159265-(0.25*iTime*1.57079632));\n    uv = view.xy + 0.5;\n    vec3 rayPos = vec3(sin(0.25*iTime*1.57079632)*10.0,4.0,cos(0.25*iTime*1.57079632)*10.0) + view * 1.5;\n    vec4 s;\n    for(int i = 0; i < 70; i++){\n        s = combined(rayPos);\n        if(dis > 96.0){\n            fragColor = vec4(0.0);\n            return;\n        }\n        if(s.x < EPSILON)\n            break;\n        rayPos += view * s.x;\n        dis += s.x;\n\n    }\n    vec3 noise = texture(iChannel0,s.zw).rgb;\n    fragColor = vec4(\n        vec3(\n        mix(\n        mix(\n        ((texture(iChannel0,s.zw*vec2(2.0,2.0)).r *  0.1 + 0.9) + noise.g * 0.1)\n        * (step(0.04,fract(s.z * 2.0 + (noise.r*0.025))) * 0.5 + 0.5) \n        * (step(0.04,fract(s.w * 2.0 + (noise.g*0.025))) * 0.5 + 0.5)\n        ,\n        ((texture(iChannel0,s.zw*vec2(2.0,2.0)).r *  0.1 + 0.9) + noise.g * 0.1)\n        * (step(length((fract(s.zw)-0.5)+((noise.rg-0.5)*0.025)),0.45) * 0.5 + 0.5)\n        ,\n        step(1.0,s.y))\n        ,\n        ((texture(iChannel0,s.zw*vec2(2.0,2.0)).r *  0.1 + 0.9) + noise.g * 0.1)\n        * (step(0.04,fract(s.z * 2.0 + (noise.r*0.025))) * 0.5 + 0.5) \n        * (step(0.04,fract(s.w * 2.0 + (noise.g*0.025))) * 0.5 + 0.5)\n        ,\n        step(2.0,s.y))\n        )\n    ,1.0);\n    \n    #ifdef LIGHTING\n    if(s.y == 2.0){\n        fragColor.g = 1.0;\n        return;\n    }\n    fragColor.g = dis;\n    float lit = 1.0/length(rayPos);\n    float shade = 1.0;\n    dis = 0.0;\n    vec3 tpos = rayPos;\n    rayPos = vec3(0.0);\n    view = normalize(tpos);\n    for(int i = 0; i < 70 && dis < 64.0; i++){\n        s = combined(rayPos);\n        if(distance(rayPos,tpos)-0.1 < EPSILON)\n            break;\n        shade = min(shade, s.x * 64.0 / dis);\n        rayPos += view * s.x;\n        dis += s.x;\n    }\n    \n    fragColor.g = max(shade * (lit*8.0) * (1.0 / (fragColor.g / 8.0)),0.0);\n    #endif\n}","name":"Buffer A","description":"","type":"buffer"}]}