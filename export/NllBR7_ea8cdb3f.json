{"ver":"0.1","info":{"id":"NllBR7","date":"1650657123","viewed":86,"name":"RayMarching_scene","username":"ArthurDetaille","description":"just a little scene using ray marching technique","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf_sphere(vec3 p, float r) { return length(p) - r; }\n\nfloat sdf_Torus( vec3 p, vec2 t ) {\n    vec2 q = vec2(length(p.xz)-t.x,p.y);\n    return length(q)-t.y;\n}\n\nfloat sdf_scene(vec3 p) {\n    float d = sdf_Torus(p, vec2(-cos(iTime * 2.0) * 0.3 + 1.0, 0.1));\n    float d1 = sdf_sphere(p - vec3(.0, cos(iTime), 0.0) * 2.0, 0.5f);\n    \n    return min(d, d1);\n}\n\nvec3 compute_normal(vec3 p) {\n    float EPSILON = 0.001;\n    \n    return normalize(vec3(\n        sdf_scene(vec3(p.x + EPSILON, p.y, p.z)) - sdf_scene(vec3(p.x - EPSILON, p.y, p.z)),\n        sdf_scene(vec3(p.x, p.y + EPSILON, p.z)) - sdf_scene(vec3(p.x, p.y - EPSILON, p.z)),\n        sdf_scene(vec3(p.x, p.y, p.z  + EPSILON)) - sdf_scene(vec3(p.x, p.y, p.z - EPSILON))\n    ));\n}\n\nfloat ligthing(vec3 normal, vec3 p, vec3 light) {\n    float d = dot(normal, normalize(light));\n    float b = max(0.0, d);\n    \n    vec3 ray = p + normal * 0.001;\n    for (int i = 0; i < 50; i++) {\n        float d = sdf_scene(ray);\n        if (d < 0.0001) { return 0.0; }\n        \n        ray += normalize(light) * d;\n    }\n    \n    return b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 rayDirection = vec3(\n        (fragCoord.x - iResolution.x / 2.0) / iResolution.x,\n        (fragCoord.y - iResolution.y / 2.0) / iResolution.x,\n        1.0\n    );\n    rayDirection = normalize(rayDirection);\n    \n    vec3 p = vec3(0, 1, -8);\n    \n    float s = fragCoord.y / iResolution.y;\n    \n    fragColor = vec4(.0,.0,.0, 1.0);\n    \n    for (int i = 0; i < 100; i ++) {\n        float d = sdf_scene(p);\n        \n        if (d < 0.0001) {\n            vec3 normal = compute_normal(p);\n            \n            float b = ligthing(normal, p, vec3(1, 1, .0));\n            float b2 = ligthing(normal, p, vec3(-1.0, -.2, -.3));\n            \n            vec3 color = vec3(1.0, 0.5, 0.2) * b2 * .5;\n            \n            fragColor = vec4(b*.7, b*.8, b, 1.0) + vec4(0.01, 0.01, 0.05, 1.0) + vec4(color, 1.0);\n            break;\n        }\n        \n        p += rayDirection * d;\n    }\n}","name":"Image","description":"","type":"image"}]}