{"ver":"0.1","info":{"id":"fdVBDK","date":"1658869350","viewed":153,"name":"how-to-render-a-smooth-ellipse","username":"Gotanod","description":"how-to-render-a-smooth-ellipse\nhttps://stackoverflow.com/questions/73127443/how-to-render-a-smooth-ellipse","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ellipse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    int tiling = 4;\n    float width = 0.5;\n    float height = 0.2;\n    float smoothness = 0.9;\n    float outerRatio = 1.0;\n    float innerRatio = 0.75;\n    vec2 offset = vec2(0.25, 0.75);\n    //offset = iMouse.xy / iResolution.xy;\n    \n    vec2 center = vec2(0.5, 0.5);\n    vec2 axis = vec2(width, height);\n\n    vec2 pos = float(tiling) * (fragCoord.xy);\n    pos = mod(pos / iResolution.xy, 1.0);            \n    pos = mod(pos - offset, 1.0);\n    pos = pos - center;\n    pos = (pos * pos) / (axis * axis);\n    float distance = pos.x + pos.y;\n    float alpha;\n    if ( distance > outerRatio ) { alpha = 0.0; }\n    else if ( distance < innerRatio ) { alpha = 1.0; }\n    else { alpha = smoothstep(outerRatio, innerRatio, distance); }\n    \n    fragColor = vec4(vec3(alpha), 1.0);\n}","name":"Image","description":"","type":"image"}]}