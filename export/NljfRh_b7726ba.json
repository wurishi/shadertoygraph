{"ver":"0.1","info":{"id":"NljfRh","date":"1651772313","viewed":337,"name":"Squares All Sliding About","username":"DJDoomz","description":"Funky little effect. Mess with the params in Buffer A\nHigh number of squares + fast wiggle time gives a cool watery effect.\n\n#define SQUARES 45.0\n#define WIGGLE 45.0","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["2d","texture","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SQUARES 14.0\n#define WIGGLE 24.\n#define SPEED 1.4\n\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvoid mainImage( out vec4 O, in vec2 u )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = u/iResolution.xy;\n    \n    vec2 a = hash22(floor(uv*SQUARES) + floor(WIGGLE*iTime))-.5;\n    a *= SPEED;\n    \n    if (u==R-.5) { O.a = iChannelResolution[1].x; return; }\n    if ( iFrame <= 60 || texture(iChannel1, 1.-.5/R, 0. ).a == 0. ) {\n        O = texture(iChannel1, uv);\n    }\n    else\n    {\n        O = texture(iChannel0, uv+a/R.xy);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}