{"ver":"0.1","info":{"id":"4lGBRd","date":"1543551718","viewed":116,"name":"The night landscape","username":"Polytope","description":"Simple landscape using noise","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","draw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(vec2 uv, float y)\n{\n  return smoothstep(uv.y-.01,uv.y,y)-smoothstep(uv.y,uv.y+.01,y);\n}\n\nfloat R1D(float x, float factor)\n{\n  return fract(sin(x)*factor);\n}\n\nfloat b[6];\nfloat a[6];\nfloat m[6];\n\nvec4 col1 = vec4(0.83137254901960784313725490196078, 0.56470588235294117647058823529412, 0.31372549019607843137254901960784, 1.);\nvec4 col2 = vec4(0.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;;\n    vec2 st = uv;\n    uv = uv*2.-.25;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec4 c = mix(mix(col2,col1,st.y),col1.bgra,uv.y);\n\n    uv *= 4.5;\n\n    vec2 i_uv = floor(uv*2.);\n    float p = 0.;\n    vec4 cc;\n\n    float s = length(uv-vec2(4.,7.));\n    s = 1.-step(.75,s);\n\n    float interpolator = smoothstep(.0,1.,fract(uv.x*2.));\n    for (int i = 0; i < 6; i++)\n    {\n    \tint ss = i+1;\n     \tfloat fac = 43758.5453123/float(ss);\n     \tb[i] = R1D(i_uv.x,fac);\n        a[i] = R1D(i_uv.x+1.,fac);\n        m[i] = mix(b[i],a[i],interpolator);\n\n        if (i < 5)\n          p += step(uv.y-(float(ss)),m[i]);\n        else\n          p += step(-1.,st.y);\n    }\n    vec4 col = vec4(.0);\n\n  \tcol += c/p+s;\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}