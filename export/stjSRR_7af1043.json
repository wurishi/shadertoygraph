{"ver":"0.1","info":{"id":"stjSRR","date":"1626967866","viewed":291,"name":"Histogram Scan","username":"ozzy","description":"Versatile method for interpolating between textures using a mask. Based on the 'Histogram Scan' node in Substance Designer.\n\nUse the mouse to preview the interpolation mask at a certain position (y) and smoothness (x).","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float saturate(float x)\n{\n    return clamp(x, 0.0, 1.0);\n}\n\nfloat scanMask(float mask, float position, float smoothing)\n{\n    smoothing *= 0.5;\n    float low = saturate(position - smoothing);\n    float high = saturate(position + smoothing); \n    \n    position = position * 2.0 - 1.0;\n    \n    return smoothstep(low, high, mask + position);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float mask = texture(iChannel0, uv).r;\n    float position = iMouse.y/iResolution.y;\n    float smoothing = iMouse.x/iResolution.x;\n    \n    float res = scanMask(mask, position, smoothing);\n    \n    fragColor = vec4(res);\n}","name":"Image","description":"","type":"image"}]}