{"ver":"0.1","info":{"id":"M3cSR2","date":"1719267120","viewed":28,"name":"Batman logo attempt 3","username":"Cotterzz","description":"Playing around with different functions with time as well","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math","graph","equations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define x2 x*x\n#define x3 x*x*x\n#define x4 x*x*x*x\n#define x5 x*x*x*x*x\n#define x6 x*x*x*x*x*x\n#define x7 x*x*x*x*x*x*x\n\n#define y2 y*y\n#define y3 y*y*y\n#define y4 y*y*y*y\n#define y5 y*y*y*y*y\n#define y6 y*y*y*y*y*y\n#define y7 y*y*y*y*y*y*y\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 guv = (uv*40.0)-20.0;\n    float x = guv.x;\n    float y = guv.y;\n\n    float A = iTime;\n    float B = iTime*iTime;\n    float C = sin(iTime);\n    float D = C*C;\n    float E = cos(iTime);\n    float F = E*E;\n    float G = C*E;\n\n    float ys = sin(y);\n    float y2s = sin(2.0*y);\n    float yc = cos(y);\n    float ycc = yc*yc;\n    float yss = ys*ys;\n    \n    float xs = sin(x);\n    float x2s = sin(2.0*x);\n    float xc = cos(x);\n    float xcc = xc*xc;\n    float xss = xs*xs;\n    \n   \n    \n    float result = (xcc*y4*D)+(ys+x2/G)-(y2+x2/C);\n\n    // Output to screen\n    float blue = abs(min(result, 0.0))/1000.0;\n    float red = max(result, 0.0)/100.0;\n    float white = 1.0/(abs(result)+0.001);\n\n    fragColor = vec4(red, white, blue,1.0);\n}","name":"Image","description":"","type":"image"}]}