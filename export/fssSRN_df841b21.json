{"ver":"0.1","info":{"id":"fssSRN","date":"1618339494","viewed":219,"name":"Some hexagon grid","username":"Krafpy","description":"Simple 2D hexagon tiling inspired from https://www.shadertoy.com/view/Xljczw","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","sdf","hexagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 s = vec2(1., 1.7320508);\n\nfloat hexSDF(vec2 p){\n    p = abs(p);\n    return max(dot(p, s * 0.5), p.x);\n}\n\nvec4 hexTiling(vec2 p){ \n    vec4 centers = round(vec4(p, p - vec2(0.5, 1.)) / s.xyxy);\n    vec4 offsets = vec4(p - centers.xy * s, p - (centers.zw + 0.5) * s);\n    \n    vec2 oxy = offsets.xy;\n    vec2 ozw = offsets.zw;\n    \n    //return dot(oxy, oxy) > dot(ozw, ozw) ? vec4(ozw, centers.zw * s) : vec4(oxy, centers.xy * s);\n    \n    // branchless version of the above ternary operator\n    float comp = step(0., dot(oxy, oxy) - dot(ozw, ozw));\n    return vec4(ozw, centers.zw * s) * comp + vec4(oxy, centers.xy * s) * (1.-comp);\n}\n\nfloat hash(vec2 p){\n    return fract(sin(dot(p,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat clamp01(float x){\n    return clamp(x, 0., 1.);\n}\n\nmat2 rot(float a){\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c,-s,s,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = vec3(0.);\n    \n    vec4 h = hexTiling(uv*rot(sin(iTime*0.2)*0.5)*5. + iTime*0.3);\n    float d = hexSDF(h.xy);\n    \n    float rand = hash(h.wz);\n    \n    float w = 6.283*12.;\n    float i = clamp01(sin(d*w)+0.8);\n    float t = mod(floor(iTime*10.+rand*123.475), 6.);\n    float clear = step(0.5, rand);\n    float unc = 1. - clear;\n    float q = step(0.076*t, d) * step(d, 0.076*(t+1.)) * unc;\n    \n    col = vec3(1.,0.5,0.5);\n    float shad = step(0., dot(h.xy, vec2(0.5, 0.8660254))) * clear;\n    \n    vec3 stripes = mix(vec3(1.,0.,0.), vec3(0.,0.2,1.), rand);\n    col = stripes * q + col * (1.-q) * (2.*unc*d+1.-unc-d);\n    col *= i;\n    \n    float glow = step(0.9, rand) * (clear > 0. ? 1. : 0.);\n    col *= shad > 0. ? vec3(0.5,0.6,0.7) : vec3(1.);\n    \n    float g = clamp01(pow(abs(sin(iTime)), 12.)+0.1);\n    if(glow > 0.) col = mix(col, col + vec3(0.6, 0.1, 0.29), g);\n    \n    float k = clear * 0.08;\n    col *= 1.-pow(abs(d+k)+0.5, 12.);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}