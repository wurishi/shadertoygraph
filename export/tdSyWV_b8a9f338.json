{"ver":"0.1","info":{"id":"tdSyWV","date":"1587321615","viewed":504,"name":"Sound tutorial #1","username":"NonGrate","description":"This is a first lesson of a procedural sound generation tutorial.\nIs plays an A (440Hz) note with fade out effect.","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["procedural","sound","tutorial","audio","generation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp,float time) {\n    // 6.2831 = 2pi\n    // 440 = 440Hz = 'A' note\n    // exp() goes exponentially down to fade out the volume\n    return vec2(sin(6.2831 * 440.0 * time) * exp(-2.0 * time));\n}","name":"Sound","description":"","type":"sound"}]}