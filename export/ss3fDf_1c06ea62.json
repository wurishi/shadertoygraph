{"ver":"0.1","info":{"id":"ss3fDf","date":"1657320728","viewed":151,"name":"Scrolling and scaling polka dots","username":"arma","description":"Cobbled from many other shaders.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["grid","dots","scaling","scrolling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ZOOM 1.0\n\nconst float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float grid = 5.0;\n    float speed = 0.5;\n\n    vec2 uv = fragCoord/iResolution.y*grid;\n    vec2 uvSpace = fragCoord/iResolution.x;\n    \n    uv.x -= iTime * grid / 5.0 * speed;\n    uv.y -= iTime * grid / 5.0 * speed;\n    \n    uv *= rotationMatrix(45.0) * ZOOM;\n    \n    uv = fract(uv);\n    \n    float radius = mix(2.0,0.5,length(uvSpace));\n    \n    vec2 uv1 = (uv - vec2(0.5)) * 2.0 - 1.0;\n    vec2 uv2 = (uv + vec2(0.5)) * 2.0 - 1.0;\n    vec2 uv3 = (uv - vec2(0.5,-0.5)) * 2.0 - 1.0;\n    vec2 uv4 = (uv - vec2(-0.5,0.5)) * 2.0 - 1.0;\n    \n    float distance1 = length(uv1);\n    float distance2 = length(uv2);\n    float distance3 = length(uv3);\n    float distance4 = length(uv4);\n    \n    float d1 = smoothstep(radius, radius - 3.0, distance1);\n    float d2 = smoothstep(radius, radius - 3.0, distance2);\n    float d3 = smoothstep(radius, radius - 3.0, distance3);\n    float d4 = smoothstep(radius, radius - 3.0, distance4);\n    \n    vec3 color = mix(vec3(0), vec3(1),abs(smoothstep(0.001,0.005,(d1-.01))));\n    color = mix(color,vec3(1),abs(smoothstep(0.001,0.005,(d2-.01))));\n    color = mix(color,vec3(1),abs(smoothstep(0.001,0.005,(d3-.01))));\n    color = mix(color,vec3(1),abs(smoothstep(0.001,0.005,(d4-.01))));\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}