{"ver":"0.1","info":{"id":"4lcyzn","date":"1531180910","viewed":1473,"name":"Ordered dithering","username":"luka712","description":"Ordered dithering shader","likes":10,"published":3,"flags":0,"usePreview":1,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst mat4x4 threshold = mat4x4(0., 8., 2., 10., \n                                12., 4., 14., 6.,\n                                3.,11.,1.,9.,\n                                15.,7.,13., 5.);\n\n\nfloat findClosest(int x, int y, float v)\n{\n    mat4x4 thresholdT = transpose(threshold);\n    float t = (thresholdT[x][y]) / 16.;\n    if(v < t)\n    {\n      \treturn 0.;   \n    }\n    else\n    {\n     \treturn 1.;   \n    }\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n\n    // https://en.wikipedia.org/wiki/Ordered_dithering\n   \tint x = int(fragCoord.x) % 4;\n    int y = int(fragCoord.y) % 4;\n    \n    // https://en.wikipedia.org/wiki/Luma_(video)\n\tfloat lum = dot(vec3(0.2126, 0.7152, 0.0722), col.rgb);\n    lum = findClosest(x,y, lum);\n \n\t// Output to screen\n\tfragColor = vec4(lum);\n}","name":"Image","description":"","type":"image"}]}