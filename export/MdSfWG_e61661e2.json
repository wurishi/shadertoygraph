{"ver":"0.1","info":{"id":"MdSfWG","date":"1501873020","viewed":663,"name":"Glow shader test 2","username":"remonvv","description":"Just some experimenting, ignore the magic numbers :)","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["sun","fbm","fire","edgeglow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat rand(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898,12.1414))) * 83758.5453);\n}\n\nfloat noise(vec2 n) {\n    const vec2 d = vec2(0.0, 1.0);\n    vec2 b = floor(n);\n    vec2 f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n    return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nvec3 ramp(float t) {\n\treturn t <= .5 ? vec3( 1. - t * 1.4, 1.0, .2 ) / t : vec3( .3 * (1. - t) * 2., 1.0, .2 ) / t;\n}\n\nfloat fire(vec2 n) {\n    return noise(n) + noise(n * 5.1) * .52 + noise(n * 14.4) * .12;\n}\n\nfloat df(vec2 uv) {\n    \n    uv -= vec2(0.5 * iResolution.x / iResolution.y, 0.5);\n \n    vec2 circle1 = vec2(-0.3, 0.0);\n    vec2 circle2 = vec2(0.4, 0.0);\n    \n    float d1 = distance(uv, circle1);\n    float d2 = distance(uv, circle2) * 2.0;\n    \n    return min(d1, d2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n    float t = iTime;\n    vec2 uv = fragCoord / iResolution.y;\n    \n    float d = pow(df(uv) + 0.5, 15.0);\n    \n    uv *= 5.0;\n    \n    float q = fire(uv + t * .2);\n    vec2 r = vec2(fire(uv + q / 2.0 + t / 2.0), fire(uv - q + t / 1.8) + fire(uv + q - t / 1.7));\n    vec3 color = vec3(1.0 / (pow(vec3(0.5, 0.0, .1) + 1.61, vec3(4.0))));\n    \n    float grad = pow((r.y + r.y) * max(.0, d) + .1, 4.0);\n    color = ramp(grad);\n    color /= (1.50 + max(vec3(0), color));\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}