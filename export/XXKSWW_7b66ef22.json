{"ver":"0.1","info":{"id":"XXKSWW","date":"1720019481","viewed":64,"name":"projective cellular automaton","username":"Boogaloo","description":"A cellular automaton in which both the cell space and the state space is the real projective plane.\nMouse to paint on cells, space to restart.","likes":5,"published":1,"flags":48,"usePreview":0,"tags":["automata","cellular","projective"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv( in vec3 c ){\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\trgb = rgb*rgb*(3.0-2.0*rgb);\n\treturn c.z * mix( vec3(1.0), rgb, c.y);}\n    //smooth hsv from iq https://www.shadertoy.com/view/MsS3Wc\n\ngo{\nvec3 me = tex(C0,ivec2(I)).xyz;\nO=vec4(hsv(vec3(atan(me.y,me.z)*.159,1.,1.-me.x)),0.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define go void mainImage( out vec4 O, in vec2 I )\n#define R iResolution\n#define M iMouse\n#define C0 iChannel0\n#define C1 iChannel1\n#define tex(x,y) texelFetch(x,y,0)","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 proj(vec3 a){vec3 b=normalize(a);\nif(isnan(b.x)||isnan(b.y)||isnan(b.z)){\nreturn vec3(1.,0.,0.);}\nif(b.x==0.){\nif(b.y==0.){\nreturn vec3(0.,0.,1);\n}\nif(b.y<0.){return -b;}\nreturn b;\n}\nif(b.x<0.){return -b;}\nreturn b;\n}\n\nivec2 wrap(vec2 v){\nvec2 m = vec2(mod(v.x,R.x),mod(v.y,R.y));\nvec2 w = m;\nif(v.x>R.x||v.x<0.){w.y=R.y-m.y;}\nif(v.y>R.y||v.y<0.){w.x=R.x-m.x;}\nreturn ivec2(w);\n}\n\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return 1.-2.*fract((p3.xxy + p3.yxx)*p3.zyx);\n}\n//random hash from Dave_Hoskins https://www.shadertoy.com/view/4djSRW\n\ngo{\nvec3 a=vec3(0.);\nvec3 b=vec3(0.);\nvec3 c=vec3(0.);\nfor(float i=-1.;i<=1.;i++){\nfor(float j=-1.;j<=1.;j++){\nif(i==0.&&j==0.){\na=tex(C0,wrap(I)).xyz;\nb-=3.*a;\ncontinue;}\nif(abs(i)==abs(j)){\nb+=.25*tex(C0,wrap(I+vec2(i,j))).xyz;\nc+=tex(C0,wrap(I+vec2(i,j))).xyz;\ncontinue;\n}\nb+=.5*tex(C0,wrap(I+vec2(i,j))).xyz;\nc-=tex(C0,wrap(I+vec2(i,j))).xyz;\n}\n}\nif(distance(a,proj(c))<1.4){c*=-1.;}\nO=vec4(proj(a+.1*b+.1*c),0.);\nif(iFrame<1||tex(C1,ivec2(32,1)).x!=0.){\nif(distance(I,.5*R.xy)<1.){O=vec4(proj(hash33(vec3(I,iDate[3]))),0.);}else{O=vec4(1.,0.,0.,0.);}\n}\nif(M.z>0.&&distance(M.xy,I)<2.){\nO=vec4(proj(hash33(vec3(I,iDate[3]))),0.);\n}\n\n}","name":"Buffer A","description":"","type":"buffer"}]}