{"ver":"0.1","info":{"id":"McySDV","date":"1715779516","viewed":103,"name":"gaussian kernel","username":"Treu","description":"A Blure Filter using a gaussian kernel 3x3","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["kernel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 sizeOfTexture = vec2(textureSize(iChannel0, 0));\n    \n    vec2 onePixel = vec2(1.0, 1.0) / sizeOfTexture;\n    \n    vec4 up_left = texture(iChannel0, uv + onePixel * vec2(-1, 1));\n    vec4 up = texture(iChannel0, uv + onePixel * vec2(0, 1));\n    vec4 up_right = texture(iChannel0, uv + onePixel * vec2(1, 1));\n    vec4 left = texture(iChannel0, uv + onePixel * vec2(-1, 0));\n    vec4 center = texture(iChannel0, uv);\n    vec4 right = texture(iChannel0, uv + onePixel * vec2(1, 0));\n    vec4 down_left = texture(iChannel0, uv + onePixel * vec2(-1, -1));\n    vec4 down = texture(iChannel0, uv + onePixel * vec2(0, -1));\n    vec4 down_right = texture(iChannel0, uv + onePixel * vec2(1, -1));\n    \n    vec4 gaussBlur = (up_left + up_right + down_left + down_right) / 16.\n                   + (up + left + right + down) / 8.\n                   + (center) / 4.;\n    // Output to screen\n    \n    // Disable gaussian kernel.\n    // fragColor = texture(iChannel0,uv);\n    // Enable gaussian kernel.\n    fragColor = vec4(gaussBlur.r, gaussBlur.g, gaussBlur.b, 1.0);\n}","name":"Image","description":"","type":"image"}]}