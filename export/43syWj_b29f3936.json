{"ver":"0.1","info":{"id":"43syWj","date":"1726672053","viewed":12,"name":"antonkrynitsyn_008","username":"antonkrynitsyn","description":"test","likes":0,"published":1,"flags":1,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"4dfGDr","parentname":"Tunnel #1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 colour(float depth) {\n\tdepth *= 4.0;\n    return vec4(1.0,1.0,1.0,1.0) / depth;\n}\n\nfloat pi = 3.141592;\n\n\n\nfloat distfunc(vec3 pos) {\n    float delta = 100.0;\n\n    // draw circle\n    vec3 A = vec3(5.0 + 5.0*cos(iTime), 5, 15.0 + 5.0*sin(iTime));\n    float R = 3.0;\n    float dist = distance(A, pos);\n    delta = min(delta, dist - R);\n    \n    // draw rect\n    vec3 r1 = vec3(-5.0 - 5.0*sin(iTime), -5, 10);\n    vec3 r2 = vec3(0.0- 5.0*sin(iTime), 0, 15);\n    if (\n        pos.x > r1.x && pos.x < r2.x &&\n        pos.y > r1.y && pos.y < r2.y &&\n        pos.z > r1.z && pos.z < r2.z\n    ) {\n        delta = min(delta, 0.0);\n    }\n    \n    \n    return delta;\n}\n\nvoid mainVR(out vec4 fragColor, in vec2 fragCoord, in vec3 pos, in vec3 dir) {\n    int steps = 200;\n\tfloat depth = float(steps) ;\n\tfor(int j = 0; j < steps;j++) {\n\t\tfloat dist = distfunc(pos);\n\t\tif(dist < 0.01) {\n            depth = float(j);\n            break;\n        }\n        pos += dir/8.0;\n\t}\n\tfragColor = colour(depth / float(steps));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 coords = (fragCoord / iResolution.x + vec2(-0.5, -0.25))*1.0;\n\n\tvec3 ray_dir=normalize(vec3(coords,0.5));\n\tvec3 ray_pos=vec3(4, 2, -3);\n\n\n    mainVR(fragColor, fragCoord, ray_pos, ray_dir);\n}\n\n\n","name":"Image","description":"","type":"image"}]}