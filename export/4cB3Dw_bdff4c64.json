{"ver":"0.1","info":{"id":"4cB3Dw","date":"1704264184","viewed":43,"name":"rx-test 001","username":"rxchit","description":"Test shader #001\nlearning shader lang (GLSL)\n\nfollowing https://www.youtube.com/watch?v=f4s1h2YETNY","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","001"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\norignal: https://www.shadertoy.com/view/mtyGWy\nVideo URL: https://youtu.be/f4s1h2YETNY\n*/\n#define PI 3.14159265358979323846264338327950\n//https://iquilezles.org/articles/palettes/\nvec3 palette(float t ){\n    vec3 a = vec3(0.610, 0.498 ,0.9650);\n    vec3 b = vec3(0.388, 0.498, 0.7350);\n    vec3 c = vec3(0.8530 ,0.498 ,0.620);\n    vec3 d = vec3(3.309, 6.066, 4.801);\n    \n    return a+b*cos(2.*PI*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0=uv;\n    vec3 finalCol = vec3(0.);\n    \n    for (float i =0.; i<3.0;i++){\n        uv = fract(uv*7./PI)-0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n        vec3 col = palette(length(uv0) +i*.4+ iTime*.35);\n\n        d=sin(d*8. + iTime)/8.;\n        d=abs(d);\n        d= pow(0.012/d,1.2);\n\n        finalCol += col*d;\n    }\n    \n    fragColor = vec4(finalCol,1.0);\n}","name":"Image","description":"","type":"image"}]}