{"ver":"0.1","info":{"id":"Mtc3RB","date":"1469968154","viewed":3085,"name":"Signed Distance Field Generator","username":"BAZ","description":"For generating SDF Maps for text or vector images","likes":22,"published":3,"flags":0,"usePreview":0,"tags":["2d","sdf","text","distance","field","vector","bruteforce","signed","valve","scaling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nbool isIn(vec2 uv)\n{\n\tvec4 texColor = texture(iChannel0, uv);\n\tvec4 white = vec4(1.0);\n    if (texColor.r != white.r || texColor.b != white.b || texColor.g != white.g )\n        return false;\n    else\n        return true;\n}\n\nfloat squaredDistanceBetween(vec2 uv1, vec2 uv2)\n{\n    vec2 delta = uv1 - uv2;\n    float dist = (delta.x * delta.x) + (delta.y * delta.y);\n    return dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    const float range = 64.0;\n    const int iRange = int(range);\n    float halfRange = range / 2.0;\n    vec2 startPosition = vec2(fragCoord.x - halfRange, fragCoord.y - halfRange);\n    \n    bool fragIsIn = isIn(uv);\n    float squaredDistanceToEdge = (halfRange*halfRange)*2.0;\n    \n    for(int dx=0; dx < iRange; dx++)\n    {\n        for(int dy=0; dy < iRange; dy++)\n        {\n            vec2 scanPositionUV = startPosition + vec2(dx, dy);\n            \n            bool scanIsIn = isIn(scanPositionUV / iResolution.xy);\n            if (scanIsIn != fragIsIn)\n            {\n                float scanDistance = squaredDistanceBetween(fragCoord, scanPositionUV);\n                if (scanDistance < squaredDistanceToEdge)\n                    squaredDistanceToEdge = scanDistance;\n            }\n        }\n    }\n    \n\tfloat normalised = squaredDistanceToEdge / ((halfRange*halfRange)*2.0);\n    float distanceToEdge = sqrt(normalised);\n    if (fragIsIn)\n        distanceToEdge = -distanceToEdge ;\n    normalised = 0.5 - distanceToEdge;\n    \n    //if (normalised > 0.5)\n    //   fragColor = vec4(1.0);\n    //else\n    \tfragColor = vec4(normalised, normalised, normalised, 1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}