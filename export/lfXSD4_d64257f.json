{"ver":"0.1","info":{"id":"lfXSD4","date":"1705289835","viewed":65,"name":"Animate circle with sine wave","username":"AgateDragon","description":"Animate a circle using time and a sine wave to create a spotlight effect.\nhttps://agatedragon.blog/2024/01/17/shadertoy-spotlight/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","animate","sinewave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 pos, float radius)\n{\n    return length(pos) - radius;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Calculate position\n    vec2 pos = uv;\n    pos -= 0.5;\n    \n    // Aspect ratio\n    vec2 aspect = iResolution.xy / min(iResolution.x, iResolution.y);\n    pos *= aspect;\n    \n    // Animate using a sine wave\n    pos.x -= sin(iTime) * 0.5;\n    \n    // Create a circle\n    float spotlight = circle(pos, 0.36);\n    spotlight = 1.0 - smoothstep(0.0, 0.1, spotlight);\n    \n    // Ambient light\n    spotlight += 0.1f;\n    \n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n    fragColor.rgb *= spotlight;\n    \n    //fragColor = vec4(vec3(spotlight), 1.0);\n}","name":"Image","description":"","type":"image"}]}