{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\nvec4 circle (vec2 uv, vec2 coord, vec2 pos, float r) {\n    \n \tfloat dist = length(pos - coord) - r; // Calculate distance from center\n    if (dist > 1.0) { // Check if inside circle\n     \treturn vec4 (200, 149, 235, 256) / 256.0;   // Red\n    } else {\n        return texture(iChannel0, uv);\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 pos = iResolution.xy / 2.0; // Center of screen\n    float r = iResolution.y * 0.2; // Circle radius\n    \n    float x = pos.x + pos.x * (cos(iTime) * 0.5);\n    float y = pos.y + pos.y * (sin(iTime) * 0.5);\n    \n    pos = vec2(x, y);\n    vec4 color = circle(uv, fragCoord.xy, pos, r * (sin(iTime * 2.0) + 1.0));\n    \n\tfragColor = vec4(color);\n} ","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsBXWD","date":"1412070603","viewed":148,"name":"cercle","username":"Malhar","description":"coucou","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","maths"],"hasliked":0,"parentid":"","parentname":""}}