{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Doesn't look too great when it's paused, but comes alive in its own little way \n// when the play button is pressed :)\n\n// Wikipedia http://en.wikipedia.org/wiki/Barnsley_fern\n\n// Mutate into other ferns by changing coefficients when calculating zx and zy below.\n\n\nconst float iterations = 250.0;\nconst float tolerance = 0.006;\nfloat x = 0.0;\nfloat y = 0.0;\n\n\nfloat rand( vec2 uv, float time){\n\treturn fract( sin( time/uv.x*uv.y));\n}\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t// let's not waste time trying to calculate for a region that is never used\n\tif( uv.x>0.76 || uv.x<0.18 /*|| uv.y>0.9*/){\n\t\tfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\treturn;\n\t}\n\t\n\t// Zoom in on the fern\n\tuv.x=(uv.x*9.0)-4.0;\n\tuv.y=uv.y*12.0-0.5;\n\t\n\t\n\t//uv*=sin(iTime/10.0);\n\t\t\n\tfloat zx;\n\tfloat zy;\n\t\n\t\n\t// result\n\tfloat result = 1.0;\n\t\n\t// initial random number (per frame and pixel)\n\tfloat p=rand( uv, iTime);\n\t\n\t// Any set of parenthesis containing an F is a departure from standard barnsley alorithm\n\t// remove F and surrounding parenthesis to obtain static image\n\tfloat F = sin( iTime*5.0);\n\t\n\t// by stepping in these terms the final tolerance check is quicker\n\tfor ( float i = 0.0; i < tolerance; i+=tolerance/iterations) {\n     \t\n\t\t // we need a new random number for this iteration to use as our probability selector\n\t\t p=fract( p/0.123454);\n\t\n\t\t\n         // Standard Barnsley Fern probabilities based on this fiddle http://jsfiddle.net/hnTfj/3/  \n\t\t if (p < 0.01) {\n           \n        \tzx = 0.0 ;\n        \tzy = 0.16  * y ;\n\t\t\t \n\t\t\tx=zx;\n\t\t\ty=zy;\n\t\t\t\n\t\t\t\n         } else if (p < 0.86) {\n            \n        \tzx = 0.85 * x + 0.04 * y;\n        \tzy = -0.04 *( 0.8*F)*x + 0.85 * y + 1.6;\n\t\t\t \n\t\t\tx=zx;\n\t\t\ty=zy;\n\t\t\n\t\t\t \n         } else if (p < 0.93) {   // i think the jsfiddle gets this wrong by 1 percent (no biggie)\n           \n        \tzx = 0.2 * (1.0-F/6.0) *x - 0.26 * y;\n        \tzy = 0.23 * x + 0.22 * y + 1.6;\n\t\t\t\n\t\t\tx=zx;\n\t\t\ty=zy;\n\t\t\t \n\t\t\t \n         } else {\n            \n        \tzx = -0.15 * x + 0.28 * y;\n        \tzy = 0.26*x + 0.24 *y + 0.44;\n\t\t\t \n\t\t\tx=zx;\n\t\t\ty=zy;\n\t\t\t \n         }\n\t\t\n\t\t// if current pixel is near the result (based on tolerance, then plot it)\n\t\tresult=(uv.x-x)*(uv.x-x)+(uv.y-y)*(uv.y-y);\n\t\t \n\t\tif( result<tolerance-i/iterations){\n\t\t\t\n\t\t\t fragColor = vec4(0.0, 1.0, 0.0, 1.0);\n\t\t\t return;\n\t\t}\n\t\t\n    }\n\t\n\t// Default background color (black)\n\tfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldsGzs","date":"1377642917","viewed":405,"name":"Barnsley Fern","username":"alun_davies","description":"Number 2.  Barnsley fern, struggling to get the right balance between iterations, next random number in each iteration and the tolerance at which to stop...any suggestions?","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","barnsley","fern"],"hasliked":0,"parentid":"","parentname":""}}