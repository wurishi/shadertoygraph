{"ver":"0.1","info":{"id":"tsy3D1","date":"1570095662","viewed":138,"name":"Honeycomb test","username":"Sobaya","description":"Just a test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["honeycomb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    const float r = 0.1f;\n    const vec2 a = vec2(3, sqrt(3.)) * r;\n    \n    ivec2 i0 = ivec2(floor(uv/a + 0.0));\n    ivec2 i1 = ivec2(floor(uv/a + 0.5));\n    \n    vec2 c0 = (vec2(i0) + 0.5) * a;\n    vec2 c1 = (vec2(i1) + 0.0) * a;\n    \n    \n    if (length(c0 - uv) < length(c1 - uv)) {\n        fragColor = texelFetch(iChannel0, i0*2+0, 0).rrrr;\n    } else {\n        fragColor = texelFetch(iChannel0, i1*2+1, 0).rrrr;\n    }\n}","name":"Image","description":"","type":"image"}]}