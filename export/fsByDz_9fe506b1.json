{"ver":"0.1","info":{"id":"fsByDz","date":"1662148815","viewed":442,"name":"Pebble Fire (134 chars)","username":"ruudhelderman","description":"Using the pebbles texture as a noise pattern saved me a lot of code. It doesn't come much smaller than this.","likes":18,"published":3,"flags":64,"usePreview":1,"tags":["fire","flames","codegolf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ll2XRm","filepath":"https://soundcloud.com/user-918612934-506355840/fire-sfx","previewfilepath":"https://soundcloud.com/user-918612934-506355840/fire-sfx","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Pebble Fire - simple and compact 2D fire implementation\n//\n// Similar to \"Burn down the gym\" https://www.shadertoy.com/view/fdtczl\n// but this time using a texture (pebbles) instead of simplex noise.\n// See also: https://helderman.github.io/blend-fire/\n//\n// Copyright 2022 Ruud Helderman\n// MIT License\n\n// 134 chars - codegolfed by @spalmer, slightly changed the movement\n/**/\n#define n texture(iChannel0, u - iTime*o.ga++*.2).r + u.y\n\nvoid mainImage(out vec4 o, vec2 u)\n{\n    u /= iResolution.x;\n    \n    o = vec4(3, .5, 2, 5);\n    o -= (n + n)*2.;\n}\n/**/\n\n// 139 chars - codegolfed by @Xor\n/**\n#define n texture(iChannel0, u - iTime*o.ga++*.2).r + u.y\n\nvoid mainImage(out vec4 o, vec2 u)\n{\n    u /= iResolution.x;\n    \n    o = vec4(3, -.5, 2, 4.5);\n    o -= (n + n)*2.; n;\n}\n/**/\n\n// 148 chars - original code by @ruudhelderman\n/**\n#define n(d) texture(iChannel0, u - iTime * (vec2(0, 1) + d)).r * 2.\n\nvoid mainImage(out vec4 o, vec2 u)\n{\n    u /= iResolution.x;\n    o = vec4(3, 2.5, 2, 9) - n(.1) - n(-.1) - u.y * 4.;\n}\n/**/\n","name":"Image","description":"","type":"image"}]}