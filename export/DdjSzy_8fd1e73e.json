{"ver":"0.1","info":{"id":"DdjSzy","date":"1670465578","viewed":204,"name":"vhs bad lag","username":"guisende","description":"if you use credits for me","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["badlag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":2,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":3,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float noiseQuality = 30.0;\nconst float noiseIntensity = 0.0088;\nconst float offsetIntensity = 0.0;\nconst float colorOffsetIntensity = 0.0600;\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat verticalBar(float pos, float uvY, float offset)\n{\n    float x = (pos, uvY) * offset;\n    x -= (pos, uvY) * offset;\n    return x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    for (float i = 0.0; i < 0.71; i += 0.1313)\n    {\n        float d = mod(iTime * i, 1.7);\n        float o = sin(1.0 - tan(iTime * 0.24 * i));\n        o *= offsetIntensity;\n        uv.x += verticalBar(d, uv.y, o);\n    }\n    \n    float uvY = uv.y;\n    uvY *= noiseQuality;\n    uvY = float(int(uvY)) * (1.0 / noiseQuality);\n    float noise = rand(vec2(iTime * 0.00001, uvY));\n    uv.x += noise * noiseIntensity;\n\n    vec2 offsetR = vec2(0.006 * sin(iTime), 0.0) * colorOffsetIntensity;\n    vec2 offsetG = vec2(0.0073 * (cos(iTime * 0.97)), 0.0) * colorOffsetIntensity;\n    \n    float r = texture(iChannel0, uv + offsetR).r;\n    float g = texture(iChannel0, uv + offsetG).g;\n    float b = texture(iChannel0, uv).b;\n\n    vec4 tex = vec4(r, g, b, 1.0);\n    fragColor = tex;\n}","name":"Image","description":"","type":"image"}]}