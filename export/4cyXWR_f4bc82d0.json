{"ver":"0.1","info":{"id":"4cyXWR","date":"1715005671","viewed":37,"name":"Gaussian blur高斯模糊","username":"pozhu15","description":"高斯模糊","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col = texture(iChannel0,uv).rgb;\n    \n    vec2 tex_offset = 1.0/iResolution.xy; // gets size of single texel\n    vec3 result = texture(iChannel0, uv).rgb * weight[0]; \n    \n    for(int i = 1; i < 5; ++i)\n    {\n        result += texture(iChannel0, uv + vec2(tex_offset.x * float(i), 0.0)).rgb * weight[i];\n        result += texture(iChannel0, uv - vec2(tex_offset.x * float(i), 0.0)).rgb * weight[i];\n    }\n    if(cos(iTime)>0.0){\n        // Output to screen\n        fragColor = vec4(result,1.0);\n    }else{\n        fragColor = vec4(col,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}