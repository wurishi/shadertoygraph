{"ver":"0.1","info":{"id":"MfVcWm","date":"1731976126","viewed":10,"name":"Cool beginner circle by joebiden","username":"joebiden89725983","description":"Simple circle with shadertoy's tutorial fade","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 center = vec2( 600, 675 / 2 );\nint radius = 100;\nint width = 100;\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    radius = radius * radius;\n    width = width * width;\n\n    vec2 diff = fragCoord - center;\n    int radius2 = int( diff.x * diff.x + diff.y * diff.y );\n    \n    float a_mod = 0.;    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n\n    if ( radius2 < radius + width / 2 && radius2 >= radius ) {\n        a_mod = 1. - float( radius2 - radius ) / float( width );\n    } else if ( radius2 > radius - width ) {\n        a_mod = float( radius2 - radius ) / float( width );\n    }\n    \n    a_mod = clamp(a_mod, 0., 1.);\n    col *= a_mod;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4( col, a_mod );\n}","name":"Image","description":"","type":"image"}]}