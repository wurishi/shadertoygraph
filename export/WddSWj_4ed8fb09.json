{"ver":"0.1","info":{"id":"WddSWj","date":"1572899400","viewed":250,"name":"braincells","username":"julianlumia","description":"or tentacles or something..","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["snake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define TAU PI*2.\n#define t iTime\n#define MAX_STEPS 64\n#define MAX_DIST 200.\n#define SURF_DIST .5\n#define FAR 4.\n\nmat2 rz2 (float a) { float c=cos(a), s=sin(a); return mat2(c,s,-s,c); }\nfloat cyl (vec2 p, float r) { return length(p)-r; }\nfloat cube (vec3 p, vec3 r) { return length(max(abs(p)-r,0.)); }\n\nvec2 path(float z){\n float x = sin(z) - 4.0 * cos(z * 0.3) - .5 * sin(z * 0.12345);\n float y = cos(z) - 4. * sin(z * 0.3) - .5 * cos(z * 2.12345);\n return vec2(x,y);\n}\n\nvec2 path2(float z){\n float x = sin(z) + 4.0 * cos(z * 0.3) + .5 * sin(z * 0.12345);\n float y = cos(z) + 4. * sin(z * 0.3) + .3 * cos(z * 2.12345);\n return vec2(x,y);\n}\n\n\nvec2 modA (vec2 p, float count) {\n float an = TAU/count;\n float a = atan(p.y,p.x)+an*.5;\n a = mod(a, an)-an*.5;\n return vec2(cos(a),sin(a))*length(p);\n}\n\nfloat smin (float a, float b, float r)\n{\n float h = clamp(.5+.5*(b-a)/r,0.,1.);\n return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat GetDist (vec3 p)\n{\n vec2 o = path(p.z) / 4.0;\n p = vec3(p.x,p.y,p.z)-vec3(o.x,o.y,0.);  \n vec2   o2 = path2(p.z) / 4.0;\n vec3 q = vec3(p.x,p.y,p.z)-vec3(o2.x,o2.y,0.);\n p.xy *= rz2(p.z*sin(t*0.002+250.));    \n q.xy *= rz2(q.z*sin(-t*0.002+250.));\n float cyl2wave = .3+1.5*(sin(p.z+t*0.5)*.1);\n float cylfade = 2.-smoothstep(.0,8.,abs(p.z));\n float cyl2r = 0.02*cyl2wave*cylfade;\n float cylT = 1.;\n float cylC = 1.;\n vec2 cyl2p = modA(p.xy, (abs(sin(t*0.1)+3.)))-vec2(cyl2wave, 0)*cylfade;\n float cyl2 = cyl(cyl2p, cyl2r);\n cyl2p = modA(p.xy*rz2(-p.z*cylT), cylC)-vec2(cyl2wave, 0)*cylfade; \n vec3 cubP = p;\n float cubC = 0.1;\n cubP.z = mod(cubP.z, cubC)-cubC*1.;\n cubP.xy *= rz2(t*3.);\n float cyl2a = smin(cyl2, cube(cubP,vec3(.1*cyl2wave*cylfade)),.5);\n cyl2wave = .3+1.5*(sin(q.z+t*0.5)*.1);\n cylfade = 2.-smoothstep(.0,8.,abs(q.z));\n cyl2r = 0.06*cyl2wave*cylfade;\n cylT = 1.;\n cylC = 1.;\n cyl2p = modA(q.xy, (abs(sin(t*0.1)+3.)))-vec2(cyl2wave, 0)*cylfade;\n cyl2 = cyl(cyl2p, cyl2r);\n cyl2p = modA(q.xy*rz2(-q.z*cylT), cylC)-vec2(cyl2wave, 0)*cylfade;\n cubP = q;\n cubC = 0.1;\n cubP.z = mod(cubP.z, cubC)-cubC*1.;\n cubP.xy *= rz2(t*3.);\n float cyl22 = smin(cyl2, cube(cubP,vec3(.1*cyl2wave*cylfade)),.5); \n return smin(cyl2a,cyl22,0.5);\n}\n\nfloat marchCount;\n\nfloat RayMarch (vec3 ro, vec3 rd) \n{\n float dO = 0.;       \n marchCount = 0.0;       \n for (int i=0; i<68; i++) \n  {\n   vec3 p = ro + dO * rd;\n   float dS = GetDist (p);\n   dO += dS;\n   if (dS<0.001 || dO>100.) break;\n   marchCount+= 1./dS*0.02;\n  }\n return dO;\n}\n \nvec3 GetNormal(vec3 p){\n float d = GetDist(p);\n vec2 e = vec2(0.1,0);\n vec3 n = d - vec3(\n  GetDist(p-e.xyy),\n  GetDist(p-e.yxy),\n  GetDist(p-e.yyx));\n    \n return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -.5*iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0);\n    vec3 ro = vec3(0.,0.,-t);\n    vec3 rd = normalize(vec3(uv.x,uv.y,1.));\n    float the = iTime *0.01;\n    rd.yx *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    float d = RayMarch (ro,rd);\n    vec3 p = ro + rd *d;\n    float fog = 1.2 / (1. + d * d *.3);\n    vec3 fc = vec3(fog);\n    fc += marchCount * vec3((cos(t +-p.z)*2.), 0.15,0.)*0.02;\n    fc *= vec3(fog);\n    fragColor = vec4(fc,1.0);\n}\n","name":"Image","description":"","type":"image"}]}