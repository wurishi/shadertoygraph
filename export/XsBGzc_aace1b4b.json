{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nfloat bit(float c1, float c2, float c3, float c4, float c5, vec2 p) {\n\tfloat chr=0.0;\n\tif (p.x==1.0) chr=c1;\n\tif (p.x==2.0) chr=c2;\n\tif (p.x==3.0) chr=c3;\n\tif (p.x==4.0) chr=c4;\n\tif (p.x==5.0) chr=c5;\n\treturn floor(fract(chr/pow(10.0,p.y))*10.0);\n}\n\nfloat writestr(vec2 p, vec2 fragCoord) {\n\tp=floor(fragCoord.xy-p+1.0);\n\tif (p.y<1.0 || p.y>7.0) return 0.0;\n\t\n\t  \t    //M\n\t  float b= bit( 1111111.0, 0100000.0, 0010000.0, 0100000.0, 1111111.0, p );\n\t\t\t//I\n\t\t\tp.x-=6.0;\n\t  \t\tb+=bit( 1000001.0, 1111111.0, 1000001.0, 0000000.0, 0000000.0, p );\n\t\t\t//N\n\t\t\tp.x-=4.0;\n\t  \t\tb+=bit( 1111111.0, 0100000.0, 0011100.0, 0000010.0, 1111111.0, p );\t\n\t\t\t//I\n\t \t\tp.x-=6.0;\n\t    \tb+=bit( 1000001.0, 1111111.0, 1000001.0, 0000000.0, 0000000.0, p );\n\t\t\t//F\n\t \t\tp.x-=4.0;\n\t    \tb+=bit( 1111111.0, 1001000.0, 1001000.0, 1000000.0, 0000000.0, p );\n\t\t\t//O\n\t \t\tp.x-=5.0;\n\t    \tb+=bit( 0111110.0, 1000001.0, 1000001.0, 1000001.0, 0111110.0, p );\n\t\t\t//N\n\t \t\tp.x-=6.0;\n\t  \t\tb+=bit( 1111111.0, 0100000.0, 0011100.0, 0000010.0, 1111111.0, p );\t\n\t\t\t//T\n\t \t\tp.x-=6.0;\n\t    \tb+=bit( 1000000.0, 1000000.0, 1111111.0, 1000000.0, 1000000.0, p );\n\t\t\t//space\n\t\t\tp.x-=4.0;\n\t\t\t//B\n\t \t\tp.x-=6.0;\n\t    \tb+=bit( 1111111.0, 1001001.0, 1001001.0, 0111001.0, 0000110.0, p );\n            //Y\n\t \t\tp.x-=5.0;\t\t\t\t\t//rounding bug.. fract should be 0 but...\n\t    \tb+=bit( 1100000.0, 0010000.0, 0001111.1, 0010000.0, 1100000.0, p );\n\t\t\t//space\n\t\t\tp.x-=4.0;\t\n\t\t\t//A\n\t      \tp.x-=6.0;\n\t\t  \tb+= bit( 0111111.0, 1001000.0, 1001000.0, 1001000.0, 0111111.0, p );\n\t\t\t//V\n\t\t  \tp.x-=6.0;\n\t      \tb+=bit( 1111100.0, 0000010.0, 0000001.0, 0000010.0, 1111100.0, p );\n\t\t\t//I\n\t\t  \tp.x-=6.0;\n\t      \tb+=bit( 1000001.0, 1111111.0, 1000001.0, 0000000.0, 0000000.0, p );\n\t\t  \t//X\n\t\t  \tp.x-=4.0;\n\t      \tb+=bit( 1000001.0, 0100010.0, 0011100.0, 0100010.0, 1000001.0, p );\n\t\n\treturn b;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv=fragCoord.xy / iResolution.xy;\n\t\n\t\n\tvec2 strpos=vec2( iResolution.x/2.0-50.0, iResolution.y/2.0);\n\t\n\tvec3 col=vec3( writestr( strpos, fragCoord ) );\n\n\tif (col.x==0.0) {\n\t\tcol=vec3(uv, 0.5+0.5*sin(iTime));\n\t}\n\t\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsBGzc","date":"1391441370","viewed":927,"name":"MiniFont","username":"avix","description":"A lil test of how to write string...  \neasy code and realtively fast so can be used for signing shaders or something...  whatever...","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["text","experiment","font"],"hasliked":0,"parentid":"","parentname":""}}