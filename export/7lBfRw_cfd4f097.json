{"ver":"0.1","info":{"id":"7lBfRw","date":"1651915566","viewed":71,"name":"fade in/out - alpha ani","username":"fufeng","description":"淡入淡出的 alpha 动画","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["non"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat delay = 0.7;\nvec3 fragmentColor = vec3(0.82, 0.89, 0.94);\n\nfloat saturate(float x)\n{\n  float max = x > 1. ? 1. : x;\n  float min = max < 0. ? 0. : max;\n  return min;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // test background\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    // test inputTime; inputTime should be between 0 and (1 + delay / 2) in formal\n    int divi = int(iTime / 4.);\n    float inputTime = iTime - float(divi * 4) - 1.;\n    if ((float(divi) / 2. - float(divi / 2)) < 0.5) {\n        inputTime = 3. - inputTime;\n    }\n    if (inputTime < 0.) {\n        inputTime = 0.;\n    }\n    \n    float sub = (uv.x + (1. - uv.y)) - inputTime * 2.;\n    float alpha = saturate((sub + delay) * (1. / delay));\n    \n    fragColor = vec4(fragmentColor * alpha + col * (1.-alpha), 1.0);\n    // in formal\n    // fragColor = vec4(fragmentColor, alpha);\n}","name":"Image","description":"","type":"image"}]}