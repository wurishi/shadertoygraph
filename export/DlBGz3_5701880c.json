{"ver":"0.1","info":{"id":"DlBGz3","date":"1673581453","viewed":85,"name":"Rabbit","username":"swpuhu","description":"A rabbit for celebrating Chinese year","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rabbit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define PI 3.1415926\n\nfloat Hash21(vec2 p) {\n    p = fract(p * vec2(123.45, 234.21));\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n\n}\nmat2 Rot(float a) {\n    a = a / 180. * PI;\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nvec2 withInBox(vec2 uv, vec4 rect) {\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n}\n\nfloat line(vec2 p, vec2 a, vec2 b) {\n    vec2 ap = p - a;\n    vec2 ab = b - a;\n    float proj = clamp(dot(ab, ap) / dot(ab, ab), 0.0, 1.0);\n    return length(ap - proj * ab);\n}\n\nvec4 Head(vec2 uv, float time) {\n    vec4 col = vec4(vec3(1.0, 0.976, 0.96), 0.);\n\n    float y = uv.y + (uv.x * uv.x) * 0.5;\n    vec2 nuv = vec2(uv.x, y);\n    float d = length(nuv);\n    float blur = 0.005;\n    float m = S(0.2, 0.2 - blur, d);\n    float size = 0.;\n\n    float side = sign(uv.x);\n    uv.x = abs(uv.x);\n    float t = fract(time * 0.3);\n    float rt = smoothstep(0.1, 0.22, t) * smoothstep(0.25, 0.22, t);\n    float rt2 = smoothstep(0.22, 0.34, t) * smoothstep(0.46, 0.34, t);\n    rt += rt2;\n    float rotation = mix(-13., -15., rt);\n    vec2 ruv = uv * Rot(rotation);\n    vec4 rect = vec4(0.0, 0.0, 0.5, 0.5);\n    nuv = withInBox(ruv - vec2(0.08, 0.2), rect);\n    nuv = vec2(nuv.x, nuv.y - (nuv.x * nuv.x) * 20.);\n    nuv *= vec2(4.0, 1.0);\n    d = length(nuv);\n\n    size = 0.4;\n    blur = 0.01;\n    m += S(size, size - blur, d);\n\n    // 耳朵\n    m = clamp(m, 0., 1.);\n    col.a = max(col.a, m);\n    vec3 pink = vec3(255, 182, 195) / 255.;\n    blur = 0.05;\n    nuv = withInBox(ruv * vec2(2.) - vec2(0.15, 0.55), rect);\n    nuv = vec2(nuv.x, nuv.y - (nuv.x * nuv.x) * 10.);\n    nuv *= vec2(4.0, 1.0);\n\n    d = length(nuv);\n    m = S(size, size - blur, d);\n    col.rgb = mix(col.rgb, pink, m);\n\n    // 眼睛\n    blur = 0.05;\n    size = 0.37;\n    rect = vec4(0.0, 0.0, 0.1, 0.1);\n    vec2 offs = vec2(0.12, -0.03);\n    rect.xy += offs;\n    rect.zw += offs;\n    nuv = withInBox(uv, rect);\n    d = length(nuv);\n    m = S(size, size - blur, d);\n    col.rgb = mix(col.rgb, vec3(0.2), m);\n\n    // 眼睛高光\n    blur = 0.05;\n    size = 0.15;\n    rect = vec4(0.0, 0.0, 0.1, 0.1);\n    offs = vec2(0.12, -0.03);\n    rect.xy += offs;\n    rect.zw += offs;\n    nuv = withInBox(uv, rect);\n\n    t = smoothstep(0.5, 0.6, fract(time * 0.5)) * 3.14159 * 2.;\n    float xx = 0.1 * cos(t + 1.);\n    float yy = 0.1 * sin(t + 1.);\n    d = length(nuv - vec2(xx * side, yy));\n    m = S(size, size - blur, d);\n    col.rgb = mix(col.rgb, vec3(1.0), m);\n\n    // 腮红\n    blur = 0.5;\n    size = 0.68;\n    rect = vec4(0.0, 0.0, 0.1, 0.1);\n    offs = vec2(0.12, -0.03);\n    rect.xy += offs;\n    rect.zw += offs;\n    nuv = withInBox(uv, rect);\n    d = length(nuv - vec2(0.2, -0.9));\n    m = S(size, size - blur, d);\n    col.rgb = mix(col.rgb, pink * 1.2, m);\n\n    blur = 0.01;\n    size = 0.015;\n    rect = vec4(0.0, 0.0, 0.5, 0.5);\n    offs = vec2(0.0, -0.0);\n    rect.xy += offs;\n    rect.zw += offs;\n    nuv = withInBox(uv, rect);\n    nuv.y += -6. * ((nuv.x - 0.05) * (nuv.x - 0.05));\n    nuv.y -= -0.18;\n    d = line(nuv, vec2(0.), vec2(0.08, 0.0));\n    m = S(size, size - blur, d);\n    col.rgb = mix(col.rgb, vec3(0.), m);\n\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n    float gradient = smoothstep(-0.5, 0.2, uv.y);\n    vec3 col = mix(vec3(1.0, 0.8, 0.9), vec3(0.7, 0.9, 1.0), gradient);\n    vec4 head = Head(uv, iTime);\n\n    uv *= 5.;\n    vec2 id = floor(uv);\n    float n = Hash21(id);\n    vec2 st = fract(uv) - 0.5;\n    float vn = smoothstep(0.2, 0.8, n) * 0.5 + 0.1;\n    st *= Rot(fract(iTime * vn) * 360. + n * 123.4);\n\n    vec4 fractHead = Head(st, 0.);\n    col = mix(col, fractHead.rgb, fractHead.a);\n    col = mix(col, head.rgb, head.a);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}