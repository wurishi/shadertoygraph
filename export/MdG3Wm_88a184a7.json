{"ver":"0.1","info":{"id":"MdG3Wm","date":"1454753688","viewed":435,"name":"Strange Sound 2","username":"tholzer","description":"sound with constant spectrum melody.\nNote: mouse.x position changes wave display scaling!\n","likes":14,"published":1,"flags":8,"usePreview":0,"tags":["sound","wave","experiment","effect","visual"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//---------------------------------------------------------\n// Shader:   Strange Sound 2                     2016-02-06\n// https://en.wikipedia.org/wiki/Constant_spectrum_melody\n//---------------------------------------------------------\n\n// This is a copy of the original sound generator.\n#define N      12.\n#define harmon 8.\n#define df     0.1\n\nvec2 mainSound( in int samp,float time)\n{\n\tfloat v = 0., f; \n    \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++)\n            f = ( 55. + i*df ) * j,\n\t\t    v += sin(2.*3.1415927*f*time); \n    \n    return vec2( v / (N*harmon));  \n}\n//---------------------------------------------------------\n\n#define AMP 3.0\n#define FREQ 3.1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat mx = iMouse.x / iResolution.x;\n    float scale = 0.002 + mx*0.1;\n    int samp = 0;\n    vec2 ms = mainSound(samp,iTime + fragCoord.x / iResolution.x *scale);\n    float a1 = (fragCoord.y / iResolution.x -0.28) * AMP;\n    fragColor = vec4(1.0 - abs(a1 - ms.x * 2.03) * FREQ\n                    ,1.0 - abs(a1 - ms.y *  1.2) * FREQ\n                    ,1.0 - abs(a1 - ms.y * -1.6) * FREQ, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"// original see https://www.shadertoy.com/view/XdsXDf\n\n#define N      12.\n#define harmon 18.\n#define df     0.1\n\nvec2 mainSound( in int samp,float time)\n{\n\tfloat v = 0., f; \n    \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++)\n            f = ( 55. + i*df ) * j,\n\t\t    v += sin(6.*f*time); \n    \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++)\n            f = ( floor(77.*sin(time)/5.) + i*df ) * j,\n\t\t    v += sin(12.*f*time); \n    \n    return vec2( v / (N*harmon));  \n}","name":"Sound","description":"","type":"sound"}]}