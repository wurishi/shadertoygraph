{"ver":"0.1","info":{"id":"Mcdcz4","date":"1730356287","viewed":28,"name":"SAC","username":"rntrn","description":"Shader Art Coding","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["6"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalcolor = vec3(0.0);\n    \n    for(float i=0.0; i<2.0; i++){    \n        uv *= 2.0;\n        uv = fract(uv);\n        uv -=0.5;\n\n        float d = length(uv);\n        vec3 col = palette(+length(uv0)+iTime/4.0);\n\n        d = sin(d*8.0 + iTime)/8.0;\n        d = abs(d);\n        d = 0.02/d;\n\n        finalcolor += col*d;    \n    }\n\n    \n    fragColor = vec4(finalcolor, 1.0);\n}","name":"Image","description":"","type":"image"}]}