{"ver":"0.1","info":{"id":"7lcGWn","date":"1635957352","viewed":161,"name":"Rotating circle in circle","username":"LargeBee","description":"my first attempt at making a shader","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["beginner","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nUsed Part 1 and 2 of the tutorial by the art of code\nhttps://www.youtube.com/watch?v=u5HAYVHsasc\nhttps://www.youtube.com/watch?v=GgGBR4z8C9o\n\nand borrowed some code from this shader\nhttps://www.shadertoy.com/view/XsGfWw\n*/\n\nfloat Circle (vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv - p);\n    float c = smoothstep(r, r - blur, d);\n\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Normalize coordinates to values 0 -> 1\n    vec2 uv = fragCoord/iResolution.xy; //0 -> 1\n\n    //Map centre to origin\n    uv -= 0.5;                           //-0.5 -> 0.5\n\n    //Multiply uv.x by aspect ratio of screen\n    uv.x *= iResolution.x/iResolution.y;\n\n    float c = Circle(uv, vec2(0, 0), 0.4, 0.05);\n\n    float speed = 1.0;\n    float rotDist = 4.0;\n    vec2 pos = vec2(sin(iTime * speed) / rotDist, cos(iTime * speed) / rotDist);\n    c -= Circle(uv, pos, 0.1, 0.01);\n\n    //Output colour per pixel\n    fragColor = vec4(vec3(c), 1.0);\n}","name":"Image","description":"","type":"image"}]}