{"ver":"0.1","info":{"id":"3lXyWH","date":"1592169451","viewed":198,"name":"The Factory Must Grow !","username":"Terah","description":"The Factory Must Grow !","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","infinite","conveyor","factory"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// utils\n\nconst float pi = acos(-1.);\nconst float tau = 2.*pi;\n\nfloat rand(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvec2 a;\n\n#define chance(seed,pct)        rand(seed) < pct \n#define blink(x,delay,duration) step(mod(x, delay), duration)\n#define stairs(x,t)          \t(floor(x) + smoothstep(t*.5, 1.-t*.5, fract(x)))\n#define linearstep(a, b, x) \tclamp(((x)-(a))/((b)-(a)), 0., 1.)  \n#define aastep(s,x)\t\t\t\tlinearstep((s)-(.5*scale)/iResolution.y, (s)+(.5*scale)/iResolution.y, x)\n#define square(p,r)             ( a = aastep(abs(p),r), a.x*a.y )\n#define disc(p,r)               aastep(length(p), r)\n\nvoid paint(inout vec4 canvas, vec3 color, float mask) {\n\tcanvas = vec4(mix(canvas.xyz, color, mask), min(1.,canvas.w+mask));\n}\nvoid paint(inout vec4 canvas, vec4 shape) {\n\tpaint(canvas, shape.xyz, shape.w);\n}\n\n// shader\n\nfloat scale = 10.;\n\n\nvec4 node(vec2 p, vec2 id) {\n    vec4 canvas = vec4(0);\n        \n    \n    float c = rand(id.x);\n    float visible = step(chance(c*13., .5)?.2:.8, rand(id.x*15.));\n    \n    \n    float type = rand(5.7*id.y);\n    bool r = chance(3.7*id.y, .5);\n    \n    if (type < .3) { // bobine\n        paint(canvas, r?vec3(.7,.3,.1):vec3(.9,.7,.1), disc(p, .35)*visible);\n        paint(canvas, vec3(.2), disc(p, .28)*visible);\n        paint(canvas, vec3(.05), disc(p, .15)*visible);\n    } else if (type < .7) { // cargo\n        paint(canvas, r?vec3(.1,.1,.3):vec3(.1,.1,.15), square(p, vec2(.51, .35))*visible);\n        p.x = mod(p.x+.025, .2);\n        paint(canvas, r?vec3(.2,.2,.4):vec3(.2,.2,.25), square(p, vec2(.06, .30))*visible);\n    } else { // chip\n        paint(canvas, r?vec3(.1,.3,.1):vec3(.25,.15,.1), square(p, vec2(.35, .35))*visible);\n        paint(canvas, vec3(.5), square(abs(p)-vec2(.1,.0), vec2(.03, .35))*visible);\n        paint(canvas, vec3(.1), square(p, vec2(.25, .25))*visible);\n        paint(canvas, vec3(.4), square(abs(p)-vec2(.0,.1), vec2(.15, .02))*visible);\n    }\n            \n    return canvas;\n}\n\nvec4 belt(vec2 p, vec2 id, float way) {\n        \n \tvec4 canvas = vec4(0);\n    \n    for(int i=-1; i<7; ++i) {\n        \n        vec3 col = mix(vec3(.4), vec3(.7), aastep(0., mod(abs(float(i)), 2.)-.5));\n        \n        vec2 c = (p-way*vec2(float(i)*.25, .0));\n        \n        paint(canvas, col, disc(c, .5));\n    }\n    \n    \n    paint(canvas, node(p, id));\n        \n    return canvas;\n}\n\nvec4 border(vec2 p, vec2 id) {\n    \n    vec4 canvas = vec4(0);\n       \n\n    vec3 col = vec3(.1);   \n    float mask = aastep(.4, abs(p.y));\n    \n    paint(canvas, col, mask);\n    \n    return canvas;\n}\n\nvec3 grid(vec2 p) {\n       \n    vec4 canvas = vec4(0);\n    \n    vec2 id = vec2(0., floor(p.y*scale));\n    \n    p.y = fract(p.y*scale)-.5;\n\n    float dx = rand(id.y)*2.-1.;\n        \n    vec4 b = border(p, id);\n    \n    p.x += stairs(dx*iTime*.15, .5);\n    \n    id.x = floor(p.x*scale + id.y*100.);\n    \n    p.x = fract(p.x*scale)-.5;\n    \n     \n    paint(canvas, belt(p, id, sign(dx)));\n    paint(canvas, b);\n    \n    //col.xy = p;\n    \n    return canvas.xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec3 col = vec3(0);\n        \n    float t = iTime;\n    \n    scale = 4.+10.*floor(mod(t/4., 3.));\n\n    t = stairs(-t, .25);\n    \n    \n    uv += vec2(0., -t/scale);\n    col = grid(uv);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}