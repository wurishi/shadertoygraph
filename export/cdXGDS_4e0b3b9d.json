{"ver":"0.1","info":{"id":"cdXGDS","date":"1666695333","viewed":168,"name":"SDF rings","username":"rs_creative","description":"simple sdf ring functions","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdfrings"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#ifndef PI\n#define PI 3.141592653589793\n#endif\n\n//https://github.com/glslify/glsl-easings/blob/master/bounce-out.glsl\n\nfloat bounceOut(float t) {\n  const float a = 4.0 / 11.0;\n  const float b = 8.0 / 11.0;\n  const float c = 9.0 / 10.0;\n\n  const float ca = 4356.0 / 361.0;\n  const float cb = 35442.0 / 1805.0;\n  const float cc = 16061.0 / 1805.0;\n\n  float t2 = t * t;\n\n  return t < a\n    ? 7.5625 * t2\n    : t < b\n      ? 9.075 * t2 - 9.9 * t + 3.4\n      : t < c\n        ? ca * t2 - cb * t + cc\n        : 10.8 * t * t - 20.52 * t + 10.72;\n}\n\nfloat circle(in vec2 _st, in float _radius){\n    vec2 dist = _st-vec2(0.5);\n\treturn 1.-smoothstep(_radius-(_radius*0.01),\n                         _radius+(_radius*0.01),\n                         dot(dist,dist)*4.0);\n}\n\nfloat ring( vec2 st, float scale, float ringThickness ) {\n\n    float d1 = circle( st, scale );\n    float d2 = circle( st, scale - ringThickness );\n    \n    return d1 * ( 1.0 - d2 );\n    \n}\n\nfloat bounceInOut(float t) {\n  return t < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n       \n    vec2 st1 = uv;\n    \n    st1 -= 0.5;\n    st1.x *= iResolution.x / iResolution.y;\n    //st1 *= mix( 1.0, 1.4, bounceInOut( sin( iTime * 6.0 ) * 0.5 + 0.5 ) );\n    st1 += 0.5;\n    \n    vec2 st2 = uv;\n    \n    st2 -= 0.5;\n    st2.x *= iResolution.x / iResolution.y;\n    //st2 *= mix( 1.0, 1.4, bounceInOut( sin( ( iTime * 3.0 ) + 2.0 ) * 0.5 + 0.5 ) );\n    st2 += 0.5;\n    \n    float d1  = ring( st1, 0.5, 0.02 );\n    float d2 = ring( st2, 0.1, 0.02 );\n    \n    vec2 st = uv;\n    \n    st.x -= 0.5;\n    st.x *= iResolution.x / iResolution.y;\n    st.x += 0.5;\n    \n    st -= 0.5;\n    st = rotate2d( mod( iTime * 6.0, PI * 2.0 ) ) * st;\n    st += 0.4;// final pivot point \n    \n    float c = circle( st, 0.01 );\n\n    // Output to screen\n    fragColor = vec4( vec3( 1.0 ) - vec3( c + d1 + d2  ) ,1.0);\n}","name":"Image","description":"","type":"image"}]}