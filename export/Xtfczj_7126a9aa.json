{"ver":"0.1","info":{"id":"Xtfczj","date":"1505401724","viewed":306,"name":"Disco webcam","username":"alxio","description":"Applying chaotic stuff to video","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["2d","video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.14159265358979323846\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 orig = texture(iChannel0, uv); //Google video\n    \n    float frame = mod(floor(60.0 * iTime), 3.0);\n    \n    if(frame > 1.0) frame = 0.0;\n    \n    float t = iTime * (2.0 + 0.05 * frame * sin(iTime));\n    \n    vec2 center = vec2(0.5, 0.5);\n    \n    uv = uv - center;\n    uv = (2.0 + sin(t)) * uv;\n    uv = mod(uv, 2.0);\n    uv = abs(uv - vec2(1.0, 1.0));\n    \n    vec2 rot;\n    rot.x = 0.5 + (uv.x - 0.5) * cos(t) - (uv.y - 0.5) * sin(t);\n    rot.y = 0.5 + (uv.y - 0.5) * cos(t) + (uv.x - 0.5) * sin(t);\n    uv = rot;\n    \n    vec4 tex, tex0, tex1, tex2, tex3;\n    vec4 test = texture(iChannel2, vec2(0.0, 0.0));\n    if(test.r >= 0.01){\n        tex = texture(iChannel2, uv); //Webcam\n        tex0 = texture(iChannel2, vec2(uv.x + 1.0 / iResolution.x, uv.y + 1.0 / iResolution.y));\n        tex1 = texture(iChannel2, vec2(uv.x - 1.0 / iResolution.x, uv.y + 1.0 / iResolution.y));\n        tex2 = texture(iChannel2, vec2(uv.x - 1.0 / iResolution.x, uv.y - 1.0 / iResolution.y));\n        tex3 = texture(iChannel2, vec2(uv.x + 1.0 / iResolution.x, uv.y - 1.0 / iResolution.y));\n    }\n    else{\n        tex = texture(iChannel1, uv); //Webcam\n        tex0 = texture(iChannel1, vec2(uv.x + 1.0 / iResolution.x, uv.y + 1.0 / iResolution.y));\n        tex1 = texture(iChannel1, vec2(uv.x - 1.0 / iResolution.x, uv.y + 1.0 / iResolution.y));\n        tex2 = texture(iChannel1, vec2(uv.x - 1.0 / iResolution.x, uv.y - 1.0 / iResolution.y));\n        tex3 = texture(iChannel1, vec2(uv.x + 1.0 / iResolution.x, uv.y - 1.0 / iResolution.y));\n    }\n\n    vec4 d = vec4(length(tex - tex0),length(tex - tex1),length(tex - tex2),1.0);\n    \n    float r1 = pow(0.5 + 0.5 * sin(t * 1.1 + 0.3 * uv.x), 200.0);\n    float r2 = pow(0.5 + 0.5 * sin(t * 1.4 - 0.3 * uv.x), 200.0);\n    float r3 = pow(0.5 + 0.5 * sin(t * 1.3 + 0.3 * uv.y), 200.0);\n    \n    float r4 = pow(0.5 + 0.5 * sin(t * 21.0), 500.0);\n    float r5 = pow(0.5 + 0.5 * sin(t * 33.4), 500.0);\n    float r6 = pow(0.5 + 0.5 * sin(t * 47.4), 500.0);\n    \n    float r00 = 2.0 + sin(t * 2.0);\n    float r01 = 2.0 + sin(t * 3.4);\n    float r02 = 2.0 + sin(t * 5.4);\n    \n    \n    float x = 0.5 + 0.5 * sin(10.0 * pow(length(uv), 0.25) - 13.0 * iTime);\n    float y = mod(1.0 + atan(uv.x, uv.y) / M_PI + 0.5 * iTime, 1.0);\n    \n    fragColor = 0.25 * tex + vec4(r00, r01, r02, 1.0) * d + vec4(r1, r2, r3, 1.0) * orig + vec4(r4, r5, r6, 1.0) * orig;\n    if(frame > 10.5){\n      \tfragColor = 0.25 * (vec4(1.0, 1.0, 1.0, 2.0) - fragColor);\n    }\n}","name":"Image","description":"","type":"image"}]}