{"ver":"0.1","info":{"id":"NlGfDz","date":"1664312634","viewed":76,"name":"plane transformation chart","username":"jzimm","description":"graphing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["none"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat2 mixmat(mat2 a, mat2 b, float t)\n{\n    return mat2(\n        mix(a[0][0], b[0][0], t), mix(a[1][0], b[1][0], t),\n        mix(a[0][1], b[0][1], t), mix(a[1][1], b[1][1], t)\n    );\n}\n\n#define SPEED 2.\n\nconst mat2 identity = mat2(\n        1, 0,\n        0, 1\n    );\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = tanh(SPEED * mod(iTime, 4.) - 1.57) * .5 + .5;\n    vec2 fc = fragCoord;\n    vec2 ir = iResolution.xy;\n    \n    float mindim = min(ir.x, ir.y);\n    float maxdim = min(ir.x, ir.y);\n    vec2 uv = (fragCoord.xy - iResolution.xy * .5) / mindim;\n    \n    mat2 transform = mat2(\n        1. + t , t * 2.,\n        0, 1.\n    );\n    \n    uv *= mixmat(identity, transform, t);\n    \n    vec3 col = vec3(0);\n\n    if (abs(mod(uv.y, .05)) < 0.01)\n        col = vec3(0, 0, .75);\n    if (abs(mod(uv.x, .05)) < 0.01)\n        col = vec3(0, 0, .75);\n    if (abs(mod(uv.y, .2)) < 0.01) \n        col = vec3(.75, 0, 0);\n    if (abs(mod(uv.x, .2)) < 0.01)\n        col = vec3(.75, 0, 0);\n    if (abs(uv.x) < 0.01)\n        col = vec3(.5, .8, .5);\n    if (abs(uv.y) < 0.01)\n        col = vec3(.5, .8, .5);\n    if (length(uv - vec2(.25, 0)) < 0.02 || (abs(uv.y) < 0.01 && (uv.x) < .25) && uv.x > 0.)\n        col = vec3(1.);\n    \n        \n    float fade = max(pow(2. * fc.x / ir.x - 1., 8.), pow(2. * fc.y / ir.y - 1., 8.));\n       \n    col = mix(col, vec3(0), fade);\n        \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}