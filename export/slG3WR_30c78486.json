{"ver":"0.1","info":{"id":"slG3WR","date":"1637472081","viewed":163,"name":"Dark Energy","username":"rmmcal","description":"Dark Energy","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["energy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////////\n//              ...  Dark Energy ...                     ////\n/////////////////////////////////////////////////////////////\n// Brasil/Amazonas/Manaus\n// Created by Rodrigo Cal (twitter: @rmmcal)\n// - Published: 2021/11\n// https://www.shadertoy.com/view/slG3WR\n//\n/////////////////////////////////////////////////////////////\n//-----------------------------------------------------------\n\n\n// https://www.shadertoy.com/view/4ddXW4\nmat3 m = mat3( 0.00,  0.80,  0.60,\n              -0.80,  0.36, -0.48,\n              -0.60, -0.48,  0.64 );\nfloat hash( float n )\n{\n    return fract(sin(n)*12345.54321);\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    //float n = p.x + fract((p.y+.54321)*57.0) + fract((113.0+.98765)*p.z);\n\n    float n = p.x + (p.y)*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\nfloat fbm( vec3 p )\n{\n  \n    float f;\n    f  = 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); \n    return f;\n}\n//////////////////////////////////////////\n\nvec3 hsv2rgb(float v){\n\treturn abs(fract(v + vec3(3, 2, 1) / 3.) - .5) * 6. - 1.;\n}\n\n// by iq. https://iquilezles.org/articles/smin\nfloat smax(float a, float b, float k) {\n\tfloat h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n\treturn mix(a, b, h) + k * h * (1.0 - h);\n}\n\nfloat dist(vec3 p) {\n    float d = (fbm(p*1.0)-.4)*2.;\n    float d2 = length(p.xy ) - .2;\n\td = smax(d, -d2, 2.0);\n    return d;\n}\nmat2 rotate(float x){\n    float c = cos(x);\n    float s = sin(x);\n    return mat2(c,s,-s,c);\n}\n  \nvec3 getNormal(vec3 p)\n{\n    vec2 d = vec2(0., 0.01);\n    float x = dist(p-d.yxx);\n    float y = dist(p-d.xyx);\n    float z = dist(p-d.xxy);\n    return normalize(vec3(x,y,z)-dist(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 c1 = texture(iChannel0,fragCoord/iResolution.xy);\n    vec4 c = texture(iChannel0,fragCoord/iResolution.xy,0.4);\n   \n    fragColor = vec4(c.rgb, 1.0);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pc = (uv-.5)*vec2(1, iResolution.y/iResolution.x);\n    float    t = 0.;\n    vec3 p = vec3(0,0.,-10);\n   \n    p.z += iTime*2.1;\n    vec3 ps = p;\n   \n    vec3 d = normalize(vec3(pc,1.0));\n    vec3 cb ;\n    float len = 128.0;\n    float hm =  1.0;\n    vec3 bloom ;\n    for (int i = 0 ; i < int(len); i++)\n    {\n        float h =  dist(p);\n        //float h2 =  dist(p+d*h);\n        //h = (h + h2) /4.0;\n        \n        if (h <= 0.0)\n          break;\n        h = max(.0,h);\n        hm = min(hm,h);\n        bloom += (clamp(hsv2rgb(h*2.), 0.0, 1.0)*2.+.5) * hm * (length(p.xy )+1.0 );\n        t+=h;\n        p += d*h;\n        \n        cb += vec3(1)*h;\n    }\n    \n    float k = len*6.5;\n    c *= 0.0;\n    \n    vec3 pn = max(getNormal(p),0.0);\n    \n    c +=  .2 * pow(pn.z,64.0)*(sin(iTime*.2)*.5+.5);\n   \n    c -= smoothstep(82.5,.0, abs( p.z - ps.z + fract(iTime*.05)*900.0-750.0));\n    c += vec4( log(bloom)/3.0, 1.);\n    \n    c = c / (cos(iTime)*.5+2.-c);\n    c = clamp(c, 0.0, 1.0);\n    c = c / (cos(iTime)*.5+1.5-c);\n    fragColor = c;\n    \n    vec3 pb = p;\n    pb.xy *= rotate(atan(pb.x,pb.y)*3.0+length(pb.xy)*14.0-iTime*5.0);\n    float intensity = noise(pb+vec3(iTime));\n    fragColor = fragColor+ (intensity*.1*(1.-(cos(iTime)*.5+.5)));\n \n}","name":"Image","description":"","type":"image"}]}