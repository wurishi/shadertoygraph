{"ver":"0.1","info":{"id":"McKSWG","date":"1715717202","viewed":105,"name":"Camera Game Of Life","username":"ademdj12","description":"a clone of iq game of life but with camera as seed\nhttps://www.shadertoy.com/view/XstGRf","likes":3,"published":1,"flags":34,"usePreview":0,"tags":["interactive","ca","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4( texelFetch( iChannel0, ivec2(fragCoord), 0 ).xxx, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\nint cell( in ivec2 p )\n{\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    return (texelFetch(iChannel0, p, 0 ).x > 0.5 ) ? 1 : 0;\n}\n\nfloat hash1( float n )\n{\n    return fract(sin(n)*138.5453123);\n}\nfloat camera(vec2 fc,vec3 res){\n    \n    float h = 1.0;\n    \n    vec4 o = texture(iChannel1, (fc + vec2( 0, 0))/res.xy);\n\tvec4 n = texture(iChannel1, (fc + vec2( 0, h))/res.xy);\n    vec4 e = texture(iChannel1, (fc + vec2( h, 0))/res.xy);\n    vec4 s = texture(iChannel1, (fc + vec2( 0,-h))/res.xy);\n    vec4 w = texture(iChannel1, (fc + vec2(-h, 0))/res.xy);\n    \n    vec4 dy = (n - s)*.5;\n    vec4 dx = (e - w)*.5;\n    \n    vec4 edge = sqrt(dx*dx + dy*dy);\n    vec4 angle = atan(dy, dx);\n   \n    return (edge.x + edge.y + edge.z)* 5.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 px = ivec2( fragCoord );\n    \n\tint k =   cell(px+ivec2(-1,-1)) + cell(px+ivec2(0,-1)) + cell(px+ivec2(1,-1))\n            + cell(px+ivec2(-1, 0)) + cell(px)*9           + cell(px+ivec2(1, 0))\n            + cell(px+ivec2(-1, 1)) + cell(px+ivec2(0, 1)) + cell(px+ivec2(1, 1));\n    float f = (k==3 || k==11 || k==12) ? 1.0 : 0.0;\n\n    \n    if( iMouse.z < 0.5) f = step(0.2,camera(fragCoord,iResolution));\n\tfragColor = vec4( f, 0.0, 0.0, 0.0 );\n}","name":"Buffer A","description":"","type":"buffer"}]}