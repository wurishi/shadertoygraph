{"ver":"0.1","info":{"id":"4lBXR1","date":"1441342692","viewed":834,"name":"Microphone-Controlled Orb","username":"jackdavenport","description":"Control a giant Michael Bay style anamorphic lens flare with your microphone! Swap out iChannel0 for some music for a cool light show!","likes":5,"published":1,"flags":4,"usePreview":0,"tags":["lens","orb","flare","control","microphone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"float sqr(float x) {\n \n    return x * x;\n    \n}\n\nfloat dist(vec2 a, vec2 b) {\n \n    float x = sqr(a.x - b.x);\n    float y = sqr(a.y - b.y);\n    return sqrt(x + y);\n    \n}\n\nvec3 sun(vec2 uv, float time) {\n    \n    float y = uv.y;\n    \n    vec4 a = texture(iChannel0, vec2(.2));\n    vec4 b = texture(iChannel0, vec2(.3));\n    float sunX = (a.x + a.y + a.z) / 3.;\n    float sunY = (b.x + b.y + a.z) / 3.;\n    \n    vec2 sunPos = vec2(.2 + sunX, .2 + sunY);\n    float flareSize = .2;\n    float sunFlare = max(1. - (length(sunPos - uv) / flareSize), 0.);\n    \n    float distToSun = dist(sunPos, uv);\n    float anaSize = uv.x > .3 || uv.x < .3 ? 3. : 3. * (1. - distToSun * 4.);\n    float anaFlare = distToSun > .2 ? 1. - (distToSun + .15) : 1.;\n    float anaLens = sunPos.y > y - (flareSize / anaSize) && sunPos.y < y + (flareSize / anaSize) ? anaFlare : 0.;\n    \n    vec3 s = vec3(1., .7, 0.) * sunFlare;\n    s += vec3(.0, .0, .4) * anaLens;\n    \n    return s;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel1, vec2(uv.x, 1. - uv.y)) + vec4(sun(uv, iTime), 1.);\n    \n}","name":"","description":"","type":"image"}]}