{"ver":"0.1","info":{"id":"Dl2cRt","date":"1692181654","viewed":23,"name":"mandelbrot set by mauminimus","username":"mauminimus","description":"mandelbrot set","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-(iResolution.xy/vec2(2))+vec2(-200, 0.))/300.;//iResolution.xy/vec2(iResolution.z/2., 1.5-iResolution.z)-vec2(.5, 0);\n\n    // Mandelbrot\n    vec2 z = vec2(0);\n    int i = 0;\n    vec3 col = vec3(1);\n    int limit = 30;\n    \n    while ( i < limit && sqrt(z.x*z.x + z.y*z.y) < 2.) {\n        z = vec2( pow(z.x, 2.) - pow(z.y, 2.) + uv.x, 2.*z.x*z.y + uv.y );\n        i++;\n    }\n    \n    if (i == limit) {\n        col *= 0.;\n    } else {\n        col = vec3(sqrt(z.x*z.x + z.y*z.y)/3., sqrt(z.x*z.x + z.y*z.y)/10., 0.);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}