{"ver":"0.1","info":{"id":"4sy3Dz","date":"1453927623","viewed":411,"name":"WiFi Beamforming visualization","username":"Andre","description":"I made a 2D visualization of wifistrength and beamforming using 2 antenna's. The view is 8M wide and the antenna's are 130mm apart. You can change the parameters if you like. Also added an option to add a middle antenna (half out of phase).","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","educational","visualisation","wifi","beamforming"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Parameters for the calculation, you can change them to see the effect\nconst float waveLength = 125.0; // Wavelength at 2.4 GHz is 125mm\nconst float viewDistance = 4000.0; // Distance in mm, view from center of antenna's\nconst float antennaDistance = 125.0; // Distance between antenna's\n#define middleAntenna 0\n        \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 antenna1 = (2.0*fragCoord-iResolution.xy) / iResolution.x; // -1.0 .. 1.0\n    antenna1 *= (1.0 / waveLength) * 6.28 * viewDistance; // put viewDistance into view\n    \n    vec2 antenna2 = antenna1;\n#if middleAntenna    \n    vec2 antenna3 = antenna1;\n#endif    \n    \n    // Put distance between antanna's\n    float dist = 0.5 * (1.0 / waveLength) * 6.28 * antennaDistance; \n    antenna1.x += dist;\n    antenna2.x -= dist;\n    \n    // Phase shift is used to steer beamforming\n    float phaseShift = sin(iTime)*3.14;\n    \n    // Calculate color so you can see where they cancel each other (black area)\n    fragColor = vec4(vec3(abs(\n                sin(iTime*-4.+length(antenna1)+phaseShift)\n              + sin(iTime*-4.+length(antenna2))\n#if middleAntenna    \n              + sin(iTime*-4.+length(antenna3)+phaseShift*.5))) * .33\n#else                     \n              )) * .5\n#endif    \n                ,1.0);\n}","name":"","description":"","type":"image"}]}