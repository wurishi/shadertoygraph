{"ver":"0.1","info":{"id":"wlS3W1","date":"1559314669","viewed":94,"name":"Z depth equation (red ring)","username":"anclin","description":"Z depth equation (red ring)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ring","red","depth","equation","z"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0,0,0);\n    \n    float x = uv.x - 0.5;\n    float y = uv.y - 0.5;\n \n    float z = sin(iTime * 2.0) * 14.0 + 15.0;//mod(iTime, 5.0) * 3.0;// sin(iTime) * 0.2 + 0.5;\n    \n    float fx = z / acos(60.0 / 540.0);\n    float fy = z / acos(60.0 / 540.0);\n    \n    x *= fx;\n    y *= fy;\n    \n    float r = sqrt(x*x + y*y);\n    if (r > 0.2 && r < 0.3)\n        col = vec3(1,0,0);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}