{"ver":"0.1","info":{"id":"4ttyRH","date":"1531541381","viewed":90,"name":"Binary Zone Plate Aliasing","username":"Xerophyte","description":"Zooming in and out on a binary zone plate (a concentric square wave of increasing frequency). Move the center point by click and drag.\n\nIntended to be a simple demo showing aliasing.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aliasing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////\n// Controls\n\n// Maximum zoom out.\nconst float MAX_SCALE = 100.0;\n\n// Maximum zoom in.\nconst float MIN_SCALE = 5.0;\n\n// Speed of the animation.\nconst float SPEED = 1.0;\n\n\n///////////////////\n// Implementation\n\n// A binary zone plate function\nfloat zonePlate(vec2 p) {\n    // Doesn't have the same period as the traditional Fresnel, since I'm ignoring\n    // the sine. This is just a scale difference and doesn't impact the overall shape.\n    float psq = dot(p, p);\n    return floor(mod(psq, 2.0));\n}\n\n\n// Scale the input by a somewhat arbitrary time-varying sine function that oscillates\n// from MIN_SCALE to MAX_SCALE.\nvec2 scaleByTime(vec2 p) {    \n    const float AMP = MAX_SCALE - MIN_SCALE;    \n    return AMP * (0.5 * -cos(SPEED * iTime / 10.0) + 0.5) * p + MIN_SCALE  * p;\n}\n\n\n// Compute a normalized pixel position relative to the last mouse event.\nvec2 mouseRelativePosition(vec2 pos) {\n    float minRes = min(iResolution.x, iResolution.y);\n    return (pos - iMouse.xy) / minRes;    \n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Get the normalized image space position relative to the mouse\n    vec2 pos = mouseRelativePosition(fragCoord);\n    \n    // Scale the with something time-varying\n    pos = scaleByTime(pos);    \n\n    // Compute the black/white binary zone plate at the scaled position\n    vec3 col = vec3(zonePlate(pos));    \n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}