{"ver":"0.1","info":{"id":"wsd3zH","date":"1567848901","viewed":328,"name":"Grid_","username":"xiahogzhi","description":"Grid","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float GetGrid(vec2 uv){\n    \n    int flag = int(floor(iTime * 0.5)) % 2;\n    float time = fract(iTime*0.5);\n    \n    int invertFlag = (flag -1) * -1;\n    \n\tint tx =  (int(fract(uv.x)*10.0) % 2) * 2 -1;\n    \n    \n    int vy = int(fract(uv.y + time * float(invertFlag) * float(tx))*10.0);\n    \n    \n    int ty = (vy % 2) * 2 - 1;\n    \n    int vx = int(fract(uv.x + time * float(flag) * float(ty))*10.0);\n    \n    \n\treturn float((vx  + vy) % 2);\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy) /iResolution.y;\n\n\tfloat c = GetGrid(uv);\n    \n    // Output to screen\n    fragColor = vec4(c,c,c,1.0);\n}","name":"Image","description":"","type":"image"}]}