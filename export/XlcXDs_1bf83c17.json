{"ver":"0.1","info":{"id":"XlcXDs","date":"1482068910","viewed":246,"name":"Audio Strings","username":"ptrgags","description":"Decided to try making an audio visualization. The orange wave reminds me of a vibrating string in string theory.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fft","audio","waveform","strings"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Center and fix aspect ratio\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    //Get polar coordinates\n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n    if (theta < 0.0)\n        theta += 2.0 * PI;\n    \n    //map 0.1 around the circle\n    float theta_uv = theta / (2.0 * PI);\n    \n    //Get the audio waveform\n    float wave = texture(iChannel0, vec2(theta_uv, 0.75)).r - 0.5;\n    \n    //map the wave around the circle\n    float rest_radius = 0.3;\n    float wave_height = 1.0 - abs(r + wave - rest_radius);\n    //Only show a thin line\n    float brightness = smoothstep(0.98, 0.99, wave_height);\n    //Color the wave circle orange\n    vec4 wave_circle = brightness * vec4(1.0, 0.5, 0.0, 1.0);\n    \n    //Now let's get the fft data. but only do the first half of the spectrum\n    //since audio tends to be in the lower half\n    float amplitude = texture(iChannel0, vec2(theta_uv / 2.0, 0.25)).r * 0.75;\n    //color in from center to the amplitude\n    float amp_radius = 1.0 - step(amplitude, r);\n    //Color it blue\n    vec4 amp_bar = amp_radius * vec4(0.0, 0.5, 1.0, 1.0);\n    \n    //Display both the waveform and FFT bars.\n    fragColor = wave_circle + amp_bar;\n}","name":"Image","description":"","type":"image"}]}