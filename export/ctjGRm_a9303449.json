{"ver":"0.1","info":{"id":"ctjGRm","date":"1673044399","viewed":94,"name":"PowerPÃ¥ff","username":"Emil","description":"popping bubbles. Remake of one of my earlier experiments","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","animated","bubbles","popping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3zn","filepath":"/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","previewfilepath":"/media/ap/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653\n\nvec3 sphereNormal(vec2 uv) {\n    return normalize(vec3(sin(uv.x),sin(uv.y),sqrt(cos(1.5*length(uv)))));\n}\n\n\nvec2 randVec(float inVal){\n    if(inVal==0.0){\n        return vec2(0.0);\n    }\n    return vec2(fract(sin(dot(vec2(inVal*1.1,2352.75053) ,vec2(12.9898,78.233))) * 43758.5453)-0.5,\n                fract(sin(dot(vec2(715.23515, inVal) ,vec2(27.2311,31.651))) * 65161.6513)-0.5);\n                \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime-(PI*0.5);\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    float size = 14.0 + sin(time)*5.0;\n    float timeRand = ceil(iTime*0.5/PI);\n    float pulse = 3.0+3.*sin(time);\n    vec2 closest_cell, closest_cell_id;\n    float closest_len = 1.0;\n    for (int x = -1; x<=1; x++){\n        for (int y = -1; y<=1; y++){\n            vec2 offset = vec2(-x,-y);\n            vec2 cell_id = ceil(uv*size-offset);\n            vec2 cell_rand = randVec(timeRand+cell_id.x + cell_id.y*1000.0);\n            if(length(cell_id+cell_rand*2.)>pulse){\n                continue;\n            }\n            vec2 cell = (fract(uv*size)-0.5)+offset+cell_rand;\n            float len = length(cell);\n            if (closest_len>len){\n                closest_len = len;\n                closest_cell = cell;\n                closest_cell_id = cell_id;\n            }\n        }\n    }\n    \n    vec3 normals = sphereNormal(closest_cell);\n    \n    vec3 camRay = normalize(vec3(uv, 1.0));\n    float h = smoothstep(pulse-3., pulse+2.6, length(closest_cell_id));\n    vec3 r = refract(camRay, normals, -1. + h);\n    //r = reflect(camRay, normals);\n    float headLight = dot(camRay, normals);\n    float fresnel = 1.0-headLight;\n    \n    vec4 fin = texture(iChannel0, r)+smoothstep(0.7, 0.8, h)*fresnel;\n    if (mod(iTime*0.5, PI*2.0) > PI){\n    \n    fragColor = vec4(headLight);\n    } else{\n    fragColor = fin;\n    }\n}","name":"Image","description":"","type":"image"}]}