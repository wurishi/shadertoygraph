{"ver":"0.1","info":{"id":"Xf3SR7","date":"1713706130","viewed":37,"name":"Calming Flow","username":"1Noxah","description":"a smooth blue calming flow","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blue","flow","smooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying parameter\n    float time = iTime;\n\n    // Calculate wave patterns\n    float wave1 = sin(uv.x * 10.0 + time * 1.5);\n    float wave2 = sin(10.0 * (uv.x * sin(time * 0.5) + uv.y * cos(time * 0.3)) + time);\n    \n    // Combine waves\n    float wavePattern = wave1 * 0.5 + wave2 * 0.5;\n\n    // Simple water-like color, feel free to change the base color\n    vec3 color = vec3(0.0, 0.2, 0.7) + vec3(0.5, 0.7, 0.9) * wavePattern * 0.5;\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}