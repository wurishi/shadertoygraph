{"ver":"0.1","info":{"id":"XtBXDy","date":"1446120114","viewed":414,"name":"BrokenVoronoiGlass","username":"jt","description":"Broken glass effect using animated voronoi cells.\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","glass","cells"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Broken Voronoi Glass - written 2015 by Jakob Thomsen\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec2 refl2(vec2 v)\n{\n    return abs(2.0 * fract(v * 0.5) - 1.0);\n}\n\nvec3 voronoi(vec2 pos)\n{\n    float t = 0.1 * iTime;\n    int nearest = 0;\n    float mindist = 1000.0;\n    const int n = 100;\n    for(int i = 0; i < n; i++)\n    {\n        //vec2 pt = texture(iChannel0, vec2(float(i) / float(n), t)).xy;\n        vec2 p = texture(iChannel0, vec2(float(i) / float(n), 0.0)).xy;\n        vec2 v = texture(iChannel0, vec2(float(i) / float(n), 0.5)).xy;\n        vec2 pt = refl2(p + t * v);\n        float d = length(pos - pt);\n        if(d < mindist)\n        {\n            mindist = d;\n            nearest = i;\n        }\n    }\n    \n    return texture(iChannel1, vec2(float(nearest) / float(n))).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //float t = fract(iTime * 0.1);\n    float t = 0.5 - 0.5 * cos(iTime * 0.5);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //fragColor = voronoi(uv).b * texture(iChannel2, -uv + (voronoi(uv).xy - 0.5) * t);\n    fragColor = voronoi(uv).b * texture(iChannel2, uv + 0.1 * (voronoi(uv).xy - 0.5));\n}\n","name":"Image","description":"","type":"image"}]}