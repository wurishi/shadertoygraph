{"ver":"0.1","info":{"id":"Xs3GWs","date":"1452646524","viewed":315,"name":"Pixel-to-pixel mapping","username":"kig","description":"Draw texture centered to screen.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Animated cat\n    vec2 nyanXY = vec2(floor(mod(iTime * 12.0 * 4.0, iResolution.x+80.0))-40.0, 0.0);\n    vec2 frameUV = floor(fragCoord.xy - nyanXY) / iChannelResolution[0].xy;\n    vec2 frameScale = vec2(40.0 / iChannelResolution[0].x, 1.0);\n    if (all(lessThanEqual( abs(frameUV-frameScale*0.5), frameScale*0.5))) {\n        frameUV.x += frameScale.x * floor(mod(iTime * 12.0, 6.0));\n        fragColor = texture(iChannel0, frameUV);\n        return;\n    }\n\n    \n    // Centered cat\n    vec2 corner = floor(0.5 * (iResolution.xy - iChannelResolution[0].xy));\n    \n    vec2 uv = floor(fragCoord.xy - corner) / iChannelResolution[0].xy;\n    \n    fragColor *= 0.0;\n\n    if ( any(greaterThan( abs(uv-0.5), vec2(0.5))) ) {\n        return;\n    }\n    \n\tfragColor = texture(iChannel0, uv);\n}","name":"","description":"","type":"image"}]}