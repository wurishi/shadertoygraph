{"ver":"0.1","info":{"id":"Nl3GWf","date":"1636807848","viewed":172,"name":"Fractal 91_gaz","username":"gaz","description":"fractal","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void rot(inout vec3 p,vec3 a,float r){\n\ta=normalize(a);\n\tp=mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a);\n}\n\n#define sabs(p,k)sqrt((p)*(p)+(k))\n\nvoid sfold(inout vec2 p, vec2 v, float k)\n{\n    float g=dot(p,v);\n    p-=(g-sabs(g,k))*v;\n}\n\nvoid sfold90(inout vec2 p, float k)\n{\n    vec2 v=normalize(vec2(1,-1));\n    sfold(p,v,k);\n}\n\nfloat lpNorm(in vec2 p, in float n)\n{\n\tp = pow(abs(p), vec2(n));\n\treturn pow(p.x+p.y, 1.0/n);\n}\n\n#define hash(n) fract(sin(n*5555.5))\n\nfloat pt(vec2 uv)\n{\n    vec3 p=(vec3(uv,0));\n    p.z-=iTime*.05;\n    p.z=sin(p.z);\n    //p=asin(cos(p*3.));\n    float s=2.,e,res;\n    for(int i=0;i<10;i++)\n        p=abs(p)-1.2,\n        s*=e=5./clamp(dot(p,p),.8,4.),\n        p=p*e-3.;\n    e=(p.z/s)*.4;\n    return e;\n}\n\n\nfloat map(in vec3 p)\n{\n\trot(p,vec3(cos(iTime*.1),sin(iTime*.1),.7).xzy,iTime*.2);\n    p=abs(p)-vec3(2.);\n    float k=1e-7;\n    sfold90(p.xz,k);\n\tsfold90(p.yz,k);\n\tsfold90(p.xy,k);\n    p.x=abs(p.x)-.3;\n \n\tfloat d= lpNorm(p.xy,5.)-.05;\n    float q=pt(p.yz);\n    return min(d,lpNorm(vec2(q,p.x-clamp(p.x,-.01,.01)),5.)-.005 +hash(q*.1)*.005)*.7;\n  \n\t\n}\n\nvec3 calcNormal(vec3 p)\n{\n  vec3 n=vec3(0);\n  for(int i=0; i<4; i++){\n    vec3 e=1e-5*(vec3(9>>i&1, i>>1&1, i&1)*2.-1.);\n    n+=e*map(p+e);\n  }\n  return normalize(n);\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<70;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<.001) return t;\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nvec3 doColor(vec3 p)\n{\n    return vec3(.3,.5,.8)+cos(p)*.5+.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy*2.-iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0,0,-3);\n    vec3 rd = normalize(vec3(uv,2));\n    vec3 col= vec3(0);\n\tconst float maxd=50.;\n    float g=march(ro,rd,0.,maxd);\n    if(g<maxd)\n    {\n        vec3 p=ro+rd*g;\n        col=doColor(p); \n        vec3 n=calcNormal(p);      \n\t\tvec3 lightPos=ro+vec3(2,5,2);\n    \tvec3 li=lightPos-p;\n\t\tfloat len=length(li);\n\t\tli/=len;\n\t\tfloat dif=clamp(dot(n,li),0.,1.);\n        col*=max(dif,.3);\n        float rimd=pow(clamp(1.-dot(reflect(-li,n),-rd),0.,1.),2.5);\n\t\tfloat frn=rimd+2.2*(1.-rimd);\n    \tcol*=frn*.6;\n        col*=max(.5+.5*n.y,.4);\n        col*=exp2(-2.*pow(max(0.,1.-map(p+n*.8)/.8),2.));\n        col+=vec3(.8,.6,.2)*pow(clamp(dot(reflect(rd,n),li),0.,1.),10.);\n        col *= exp(-.1 * g * g);\n        //col = pow(col,vec3(1.5))*3.;\n    }\n    fragColor=vec4(col,1);\n}\n\n","name":"Image","description":"","type":"image"}]}