{"ver":"0.1","info":{"id":"XXfGDs","date":"1708863030","viewed":22,"name":"Circle z1","username":"julcasans","description":"circle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 p, vec2 c, float r, float b)\n{\n    float d = length(p - c);\n    return 1. - smoothstep(r, r-b, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Move coordinate (0,0) to the center\n    uv -= .5;\n    \n    // Apply ratio over x;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col1 = 0.5 + 0.5*cos(0.61*iTime+uv.xyx+vec3(0,2,4));\n\n    float c = circle(uv, vec2(0,0), .43, .02);\n    vec3 col2 = vec3(c, 0, c);\n    \n    vec3 col = col1 + col2;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}