{"ver":"0.1","info":{"id":"ml2cRG","date":"1691970516","viewed":63,"name":"Coral w/ equations","username":"matheusbr16","description":"Based on https://twitter.com/naderi_yeganeh/status/1690296100496838656?t=zJWdCL6ybibRgTIQ8g9yAw&s=08","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["twitter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float P( int s, float x, float y)\n{\n    float sf = float(s);\n    return sin(5.*(x + 0.2*(sin(7.*sf*sf)+sin(x + sf*sf)-3.)*y + sin(sf*sf) - 0.08*sin(5.*y+sin(4.*sf*sf))));\n}\n\nfloat Q( int s, float x, float y)\n{\n    float sf = float(s);\n    return y + 0.6*x + 0.1*pow(x+1.,2.)-1.8*(1.-pow(1.-sf/150.,1.6))+1.7+0.3*sin(sf*sf*sf);\n}\n\nfloat PsQs(int s, float x, float y)\n{\n    return 30.*pow(abs(P(s,x,y)),3.)+pow(Q(s,x,y),4.)-0.6;\n}\n\nfloat F( float x )\n{\n    return floor(255.*exp(-1.*exp(-1000.*x))*pow(abs(x),exp(-1.*exp(1000.*(x-1.)))));\n}\n\nfloat J( int s, float x, float y)\n{\n    if(s == 0) return 0.;\n\n    return exp(-1.*exp(50.*PsQs(s,x,y)));\n}\n\nfloat K( float x, float y)\n{\n    return (0.5 + 2.*(y-0.6))*(1.-0.3*pow(sin(120.*(y-0.6)*exp(10.*(x-1.)*(x-1.))),8.))\n            *exp(-1.*exp((170.-160.*exp(-500.*pow(x-19./20.,4.)))*(0.6*(x-1.)*(x-1.)+14.\n                        *(100./(100.-99.*exp(-10.*pow(x-23./20.,2.))))*pow(abs(y-0.6),2.+3.*(x-0.6))-0.05)));\n}\n\nfloat U( int s, float x, float y)\n{\n    float sf = float(s);\n    float sum = 0.0;\n    float product = 1.0;\n\n    for(int r = 1; r <= 150; r++)\n    {\n        float rf = float(r);\n        for(int k = 0; k <= r - 1; k++)\n        {\n            product *= (1. - J(k,x,y));\n        }\n\n        sum += (4.*exp(-1.*exp(100.*PsQs(r,x,y))\n                        -1.*exp(-5.*(20.*pow(abs(P(r,x,y)),3.)+pow(0.02+Q(r,x,y),4.)-0.6))\n                        -1.*exp(-1000.*Q(r,x,y)))\n                    +(1.+pow(2.-sf,2.)/20.+0.2*sin((5.+5.*sf)*rf))*(0.3*Q(r,x,y)+exp(-1.*exp(PsQs(r,x,y)))))\n                *(1.+P(r,x,y))*J(r,x,y)*product;\n    }\n\n    return sum;\n}\n\nfloat H( int s, float x, float y )\n{\n    float sf = float(s);\n\n    float product = 1.0;\n\n    for(int r = 1; r <= 150; r++)\n    {\n        product *= (1. - J(r,x,y));\n    }\n\n    return (1. + pow(-1.,sf)*0.5 * sf)*U(s,x,y) + \n    (0.1 + 0.25 * sf + (y - (x * x)/3. - 0.5)*(0.04+17./300.*(sf*sf - sf)))*product\n    +(2.5-1.75*sf)*K(x,y)-exp(-1.*exp(100.*(sqrt(pow(x-41./50.,2.)+pow(y-3./5.,2.))-0.01)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // original image was created with a 2000x1200 resolution\n    vec2 aspectRatio = vec2(2000.0,1200.0) / iResolution.xy;\n    \n    // integer range [1, 800]x[1, 450]\n    float m = float(int(fragCoord.x + 0.5));\n    float n = float(int(fragCoord.y + 0.5));\n    \n    float x = (m * aspectRatio.x - 1000.)/400.;\n    float y = (n * aspectRatio.y - 801.)/400.;\n\n    vec3 col = vec3(F(H(0,x,y)),F(H(1,x,y)),F(H(2,x,y)));\n\n    // Output to screen - scale rgb range from [0,255] to [0.0,1.0]\n    fragColor = vec4(col/255.,1.0);\n}","name":"Image","description":"","type":"image"}]}