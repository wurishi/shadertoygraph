{"ver":"0.1","info":{"id":"3sSSDK","date":"1554907562","viewed":130,"name":"Shaderwave Â· 20190410","username":"JacobJoaquin","description":"An experiment in compositing two layers.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["waves","checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TAU 6.283185307179586\n#define PI 3.141592653589793\n\nfloat maskIt(in float mask, in float v0, in float v1)\n{\n\treturn mask * v0 + (1.0 - mask) * v1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Phase\n    float phase = iTime * 0.5;\n    \n    // Colors\n\tvec3 c0 = vec3(1.0, 0.5, 0.0);\n\tvec3 c1 = vec3(0.8, 0.1, 0.3);\n\n    // Waves\n\tvec2 st = fragCoord.xy / iResolution.xy;\n\tfloat m = sin(phase * TAU) * 0.5 + 1.0;\n\tm = m * 1.0 + 8.0;\n\tfloat x = fract(cos((2.0 * (st.x) + phase) * TAU) * 3.0 + m * st.y);\n\tfloat y = fract(sin((1.0 * st.y + 0.0 * phase) * TAU) * 1.0);\n\tx = step(0.5, x);\n\n    // Checkerboard\n\tfloat nTiles = 2.5;\n\tfloat x1 = step(0.5, fract(st.x * nTiles));\n\tfloat y1 = step(0.5, fract(st.y * nTiles));\n\tfloat n = mod(x1 + y1, 2.0);\n\n    // Create composite\n\tfloat v = maskIt(n, mod(x + y, 2.0), n);\n\tvec3 composite = vec3(mix(c1, c0, v));\n\n    // Output\n\tvec3 color = vec3(composite);\n\tfragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}