{"ver":"0.1","info":{"id":"7tyBDR","date":"1668791757","viewed":62,"name":"Koch -- Messing with ","username":"Sent","description":"mouse y to change reflection angle. koch bastard. symmetry is fun. sierpinski surprise!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    //uv.xy = uv.yx;\n\n    vec3 col = vec3(0.);\n    \n    float phi = mouse.y * 2./3. * 3.14159265;\n    vec2 n = vec2(sin(phi), cos(phi));\n    \n    float scale = 1.;\n    uv *= .6;\n    scale *= .6; \n    \n    //uv.x += .5;\n    for (int i = 0; i < 5; i ++) {\n        scale *= 3.;\n        uv *= 3.;\n        //uv.x -= 1.5;\n        \n        uv.xy = abs(uv.xy);\n        uv.x -= .5;\n        uv -= n*min(0., dot(uv, n))*2.;\n    }\n  \n     float d = length(uv - vec2(clamp(uv.x, -1., 1.), 0.));\n    col += smoothstep(1./iResolution.y, .0, d/scale);\n    col.rg += uv;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}