{"ver":"0.1","info":{"id":"4ccSRN","date":"1713801107","viewed":33,"name":"Project shader","username":"kraboviy_salat","description":"daf","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map( in vec3 pos )\n{\n    float d1 = length(pos)-.25;\n    \n    float d2 = pos.y + .26;\n    return min(d1, d2);\n}\n\nvec3 calcNormal ( in vec3 pos )\n{\n    vec2 e = vec2(.0001, 0.);\n    return normalize( vec3(map(pos+e.xyy)-map(pos-e.xyy),\n                           map(pos+e.yxy)-map(pos-e.yxy),\n                           map(pos+e.yyx)-map(pos-e.yyx)));\n}\nfloat castRay (in vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    for( int i=0; i<100; i++ )\n    {\n        vec3 pos = ro + t*rd;\n        \n        float h = map( pos );\n        if( h< .001 )\n            break;\n        \n        t += h;\n        if( t>20. ) break;\n    }\n    if( t>20.) t=-1.;\n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    float an = 10.*iMouse.x/iResolution.x;//.1*iTime;\n\n    vec3 ro = vec3(2.*cos(an), 0., 2.*sin(an));\n    vec3 ta = vec3(0., 0., 0.);\n    \n    vec3 ww = normalize( ta- ro);\n    vec3 uu = normalize( cross(ww, vec3(0,1,0)));\n    vec3 vv = normalize( cross(uu,ww) );\n    \n    vec3 rd = normalize( p.x*uu + p.y*vv + 1.5*ww );\n    \n    \n    vec3 col = vec3(.4, .75, 1.) - .7*rd.y;\n    col = mix( col, vec3(.7, .75, .8), exp(-10.*rd.y) );\n    \n    float t = castRay( ro, rd);\n    if( t>0. )\n    {\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal(pos);\n        \n        vec3 mate = vec3(.2, .2, .2);\n        \n        vec3 sun_dir = normalize(vec3(.8, .4, .2));\n        float sun_dif = clamp( dot(nor, sun_dir), 0., 1.);\n        float sun_sha = step(castRay( pos+nor*.001, sun_dir ), 0.);\n        float sky_dif = clamp( .5+.5*dot(nor, vec3(0., 1., 0.)), 0., 1.);\n        float bou_dif = clamp( .5+.5*dot(nor, vec3(0., -1., 0.)), 0., 1.);\n        \n        col  = mate*vec3(7., 5., 3.)*sun_dif*sun_sha;\n        col += mate*vec3(.5, .8, .9)*sky_dif;\n        col += mate*vec3(.7, .3, .2)*bou_dif;\n    }\n\n    col = pow( col, vec3(.4545));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}