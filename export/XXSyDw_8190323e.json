{"ver":"0.1","info":{"id":"XXSyDw","date":"1727312350","viewed":7,"name":"morphorked","username":"pb","description":"use the mouse","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","raymarch","kifs","fork"],"hasliked":0,"parentid":"sttfD4","parentname":"morphable kifs"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//philip.bertani@gmail.com\n//kifs dist func taken from Shane's - https://www.shadertoy.com/view/XsKXzc - and modified\n//Code was graciously golfed and refactored by FabriceNeyret2 (see https://www.shadertoy.com/view/7tcBDn)\n\n#define R(a)  mat2(cos(a + 1.57*vec4(0,-1,1,0)))  //rotation matrix using pi/2 phase offset for sin\n#define N     normalize\n\nfloat t, e=1., l=0., d, i=0.; // globals\nvec2 mm;  //Mouse\n\nfloat sdTriPrism( vec3 p, vec2 h )\n{\n  vec3 q = abs(p);\n  return max(q.z-h.y,max(q.x*0.866025+p.y*0.5,-p.y)-h.x*0.5);\n}\n\nfloat f(vec3 p) {\n    vec3  o = vec3(.5,.2,.1), q;\n    float d=1e6, s=-.15, a=1., i=0., k = o.z*s;\n    for( p.xz *= R(t/5.) ; i++<4. ; )\n        a *= 1.-s,\n        p.xy *= R(mm.x), p.yz *= R(mm.y), // rotations here have large impact on shape\n        p = abs(p),\n#define S(p) p.x < p.y ? p = p.yx : p     \n        S(p.xy), S(p.xz), S(p.yz),  // sort\n        p = mix( p, o, s),\n        p.z < k*.5 ? p.z -= k : d,\n        q = p = abs(p),\n        S(q.xy), S(q.xz), S(q.yz),  // sort\n\n        d = min(d,  sdTriPrism(q.xyz, vec2(.015,.015) ) );\n\n    return d;\n}\n\nvoid mainImage(out vec4 O, vec2 U) {\n    t = iTime;\n    vec3 R = iResolution, E = vec3(1,-1,-1), n,\n         L =  vec3(sin(t*2.),0.,-1.),        // light pos\n         D = N( vec3( U+U,-R.y) - R.xyy ),   // ray pos and dir\n         g , P = R-R;\n    mm = 5.*(iMouse.xy-2.*R.xy)/R.y; if(iMouse.w==0.)mm=5.*vec2(.5,-.23);\n    \n    vec3 bg = vec3(0,.1-D.y,.4);\n    O = vec4(bg,0);\n\n    P.z = .02 ; \n    \n    for (  ; i++<1e2 && l<6. && e>0.; P += d*D ) {\n        l += d = f(P)*.7;\n        e = d - 1e-4; //(1.+l*l)/1e4;\n        \n        if( e < 0. ) {\n            P += e*D;\n            L = N(L-P);\n#define F(x)  x* f( P + 2e-4 *x )\n            n = N( F(E.x)+F(E.yyx)+F(E)+F(E.yxy) );  // normal vec\n            O.rgb =  .3* max(0.,dot(-n,L)) *vec3(.7,.5,0.)\n                    +.7* pow(max(0.,dot(reflect(-D,n),L)),4.) *vec3(.9,.8,.3)\n                \n                    ;        \n\n            O =  \n                pow( 5.*(1.-exp(-O*O)) /exp(l*l*50.),vec4(.5) );\n                \n            O.rgb = mix(O.rgb,bg*exp(-l*l*5.),l*l*15.);\n            break; \n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}