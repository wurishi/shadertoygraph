{"ver":"0.1","info":{"id":"XXtSR4","date":"1731524478","viewed":27,"name":"sandbagging / gap tolerance","username":"RoFL","description":"демонстрация перекрытия зазоров, каждый этап длится ~4сек. Во время первых 4х секунд левой кнопкой мыши выберете стартовую точку заливки. шейдер начиная с этой точки выделит область узкие места которой не будут меньше чем указанный зазор.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*     ^^^\n       |||\ngo to common if you want to change tolerance\n\nat the left corner of shader screen you can reset time or pause\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel1,uv);\n}\n\n\n\n\n\n\n\n\n\n\n//here at left corner of shader code compile button, don't forget to compile after change","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 iRes = iResolution.xy;\n    vec2 pix = 1.0/iRes;\n    vec2 uv = fragCoord/iRes;\n    vec4 texColor = texture(iChannel1,uv);\n    fragColor = texColor;\n    \n    #define col_rel_cord(a,b) texture(iChannel1,vec2(uv.x + a*pix.x,uv.y + b*pix.y))\n    #define Chk(x,y,z) col_rel_cord(x,y)[z] > 0.99 ||\n    #define invChk(n,m,z) Chk(m,n,z)\n    \n    if(iFrame < 2) // стартовое перекрашивание\n    {\n        if(iFrame == 0)\n        {\n        fragColor = texture(iChannel0,uv);\n        }\n        else\n        {\n        vec4 texColor = texture(iChannel1,uv); \n        \n        if (texColor.r > 160.0/255.0 && texColor.r < 210.0/255.0 )\n            fragColor = vec4(0,1,0,1);\n        else\n            fragColor = vec4(0,0,0,1);\n        //if(abs(400.0 - fragCoord.x - 0.5) < 0.9 && abs(300.0 - fragCoord.y - 0.5) < 0.9)\n        //    fragColor = vec4(0,0,1,1);\n        }\n    }\n    else if(iFrame < steps-2) // заливка\n    {\n        if(abs(iMouse.x - fragCoord.x - 0.5) < 0.5 && abs(iMouse.y - fragCoord.y - 0.5) < 0.5)\n            fragColor = vec4(0,0,1,1);\n        else\n        {\n            if(texColor.g > 0.66)\n            {\n                    if(\n    //---------------------------------------- rhombus\n                    Chk( 0.,-1.,2)\n                    Chk( 0., 1.,2)\n                    Chk(-1., 0.,2)\n                    Chk( 1., 0.,2) /* */\n\n                    false)\n                fragColor = vec4(0,0,1,1);\n                else\n                fragColor = texColor;\n            }\n        }\n    }\n    else if(iFrame < steps-1) // оставляем залитое\n    {\n        if(texColor.g > 0.66) fragColor = vec4(0,0,0,1);\n        \n    }\n    else if(iFrame < steps) // контур\n    {\n        if(texColor.b < 0.66)\n        {\n                if(\n//---------------------------------------- rhombus\n                Chk( 0.,-1.,2)\n                Chk( 0., 1.,2)\n                Chk(-1., 0.,2)\n                Chk( 1., 0.,2) /* */\n\n                false)\n            fragColor = vec4(1,0,0,1);\n        }\n    }\n    else if(iFrame < steps + tolerance) // утолщение\n    {\n        if(true)\n        {\n                if(\n//---------------------------------------- rhombus\n                Chk( 0.,-1.,0)\n                Chk( 0., 1.,0)\n                Chk(-1., 0.,0)\n                Chk( 1., 0.,0) /* */\n\n                false)\n            fragColor += vec4(1,0,0,1);\n        }\n    }\n    else if(iFrame < steps + tolerance + 1) // стартовая область\n    {\n        if(abs(iMouse.x - fragCoord.x - 0.5) < 0.5 && abs(iMouse.y - fragCoord.y - 0.5) < 0.5)\n            fragColor = vec4(0,1,0,1);\n    }\n    else if(iFrame < steps + steps + tolerance + 1) // заливка того что точно выделено, зеленым\n    {\n        if(texColor.r < 0.66)\n        {\n                if(\n//---------------------------------------- rhombus\n                Chk( 0.,-1.,1)\n                Chk( 0., 1.,1)\n                Chk(-1., 0.,1)\n                Chk( 1., 0.,1) /* */\n\n                false)\n            fragColor = vec4(0,1,0,1);\n        }\n    }\n    else if(iFrame < steps + steps + tolerance + 2) // меняем цвета\n    {\n        if(texColor.r > 0.66 )//&& texColor.b < 0.66)\n        {\n            if(texColor.b > 0.66)\n            fragColor = vec4(1,0,0,1);\n            else\n            fragColor = vec4(0,0,0,1);\n        }\n    }\n    else if(iFrame < steps + steps + tolerance + tolerance + 2) // вычисляем отсеченные области\n    {\n       if(texColor.r > 0.66)\n        {\n                if(\n//---------------------------------------- rhombus\n                Chk( 0.,-1.,2)\n                Chk( 0., 1.,2)\n                Chk(-1., 0.,2)\n                Chk( 1., 0.,2)\n\n                false)\n            fragColor = vec4(0,0,1,1);\n        }\n    }\n    else if(iFrame < steps + steps + steps + tolerance + tolerance + 2) // завершаем\n    {\n       if(texColor.r > 0.66)\n        {\n                if(\n//---------------------------------------- rhombus\n                Chk( 0.,-1.,1)\n                Chk( 0., 1.,1)\n                Chk(-1., 0.,1)\n                Chk( 1., 0.,1)\n\n                false)\n            fragColor = vec4(0,1,0,1);\n        }\n    }\n    else\n    if(texColor.r > 0.66)\n    fragColor = vec4(0,0,1,1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"int tolerance = 2;\nint steps = 600;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//at the left corner of shader screen you can reset time or pause\n\n//here at left corner of shader code compile button, don't forget to compile after change","name":"Common","description":"","type":"common"}]}