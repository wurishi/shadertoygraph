{"ver":"0.1","info":{"id":"wtdGR4","date":"1576229549","viewed":244,"name":"Parallelograms","username":"tombla","description":"independent R-G-B functions","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["colors","parallel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= vec2(2000.0, 2000.0/iResolution.x*iResolution.y);\n    \n    float step = iTime * 100.0;\n    float blue = uv.x + uv.y + 1.25 * step;\n    blue = mod(blue, 256.0) / 256.0;\n    \n    float green = uv.y/2.0 + (1.0 + sin(step*3.0/8.0/60.0)) * uv.x / 2.0;\n    green = mod(green, 256.0) / 256.0;\n    \n    float red = 480.0 + (1.0+cos(step*0.75/90.0))*uv.x/2.0 - uv.y/2.0;\n    red = mod(red, 256.0) / 256.0;\n\n    // Time varying pixel color\n    vec3 col = vec3(red, green, blue);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}