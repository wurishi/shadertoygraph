{"ver":"0.1","info":{"id":"XffyRf","date":"1721371390","viewed":44,"name":"Raymatching_ImanityV2","username":"Imanity","description":"a mouse custom rotate raymatch","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymatching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TMIN 0.1\n#define TMAX 40.\n#define RAYMARCH_TIME 256\n#define PRECISION .0001\n\nvec3 PointLightPos=vec3(-1.,1.,1.);\nvec3 SkylightColor=vec3(0.08,0.1,0.1);\nvec3 rp=vec3(0.,0.,0.);\nvec3 cta=vec3(0.,0.,0.);\n\n\nvec3 Sphere1pos=vec3(0.,0.,0.);\nfloat Sphere1R=0.5;\n\nvec3 Cube1pos=vec3(0.,0.,0.);\nvec3 Cube1Size=vec3(0.3,0.3,0.3);\nvec3 Cube1Rot=vec3(0.,0.,0.)*6.2831;\n\nvec3 BaseColor=vec3(0.4,0.4,0.4);\n\n\nvec2 fixUV(in vec2 c)\n{\n    return (-iResolution.xy+2.0*c)/min(iResolution.x,iResolution.y);\n}\n\nvec3 lerp(in vec3 A,in vec3 B,in float alpha)\n    {\n    return A*alpha+B*(1.-alpha);\n    }\n\n\nvec3 RotateY(in vec3 WSpos,in float th)\n{\n    vec3 W=WSpos.xyz;\n    float rx=W.x;\n    float ry=W.z;\n    return vec3(rx*cos(th)+ry*sin(th),W.y,ry*cos(th)-rx*sin(th));\n}\n\nvec3 RotateX(in vec3 WSpos,in float th)\n{\n    vec3 W=WSpos.xyz;\n    float rx=W.y;\n    float ry=W.z;\n    return vec3(W.x,rx*cos(th)+ry*sin(th),ry*cos(th)-rx*sin(th));\n}\nvec3 RotateZ(in vec3 WSpos,in float th)\n{\n    vec3 W=WSpos.xyz;\n    float rx=W.x;\n    float ry=W.y;\n    return vec3(rx*cos(th)+ry*sin(th),ry*cos(th)-rx*sin(th),W.z);\n}\n\n\n\n    //-----PUT SDF HERE----\n    \nfloat CubeSDF(in vec3 pos,in vec3 offset,in vec3 Scale,in vec3 Rot)\n{\n    vec3 C1p=vec3(pos.xyz-offset.xyz);\n    vec3 C1r=RotateX(RotateY(C1p,Rot.y),Rot.x);\n    float CSDF=max(max(abs(C1r.x)-Scale.x,abs(C1r.y)-Scale.y),abs(C1r.z)-Scale.z);\n    return CSDF;\n}\nfloat Cylinder(in vec3 pos,in vec2 RD,in vec3 offset,in vec3 Rot)\n{\n    vec3 C1p=vec3(pos.xyz-offset.xyz);\n    vec3 pos1=RotateX(RotateY(C1p,Rot.y),Rot.x);\n    float C=max((length(pos1.xz)-RD.x),abs(pos1.y)-RD.y);\n    return C;\n}\n\n\n\nfloat SDF(in vec3 pos)\n{\n    float MX=-(iMouse.x/iResolution.x-0.5)*2.;\n    float MY=(iMouse.y/iResolution.y-0.5)*2.;\n\n    vec3 pos1=RotateY(pos.xyz,iTime*0.);\n    vec2 Cube1SDF=vec2(CubeSDF(pos1.xyz,vec3(0.,0.,0.),vec3(0.3,0.3,0.3),vec3(MY,MX,0.)),1.);\n    vec2 Cube2SDF=vec2(CubeSDF(pos1.xyz,vec3(0.,-0.8,0.),vec3(1.9,0.2,1.3),vec3(0.)),2.);\n    \n    float cylinder1=Cylinder(pos1.xyz,vec2(0.3,0.3),vec3(0.,0.,0.),vec3(MY,MX,0.));\n    \n    return min(cylinder1,Cube2SDF.x);   \n}\n    //-----SDF END------\n    \n\nmat3 setCamera(vec3 ta ,vec3 ro ,float cr)\n{\n    vec3 z=normalize(ta-ro);\n    vec3 cp=vec3(sin(cr),cos(cr),0.);\n    vec3 x=normalize(cross(z,cp));\n    vec3 y=cross(x,z);\n    return mat3(x,y,z);\n}\n\nvec3 CameraTrans(in vec3 p)\n{\n    \n    vec3 COV= RotateY(vec3(0.,0.,1.),0.);\n    return p-COV;\n}\n\nvec3 CameraTarget(in vec3 p)\n{\n\n    vec3 CT=vec3(0.,0.,0.);\n    return CT+p;\n}\n\n\n\n\n    \nfloat rayMarch(in vec3 ro,in vec3 rd)\n{\n    float t =TMIN;\n    for(int i =0;i<RAYMARCH_TIME && t<TMAX;i++)\n    {\n        vec3 p=ro+t*rd;\n        float d=SDF(p);\n        if(d<PRECISION)\n        {\n        break;\n        }\n        t+=d;\n    }\n    return t;\n}\n\nvec3 calcNormal(in vec3 p)\n{\n    const float h=0.001;\n    const vec2 k = vec2(1,-1);\n    return normalize( k.xyy*SDF(p+k.xyy*h)+\n                      k.yyx*SDF(p+k.yyx*h)+\n                      k.yxy*SDF(p+k.yxy*h)+\n                      k.xxx*SDF(p+k.xxx*h));\n}\n\nfloat softShadow(in vec3 ro,in vec3 rd,float k)\n{\n    float res =1.0;\n    for(float t =TMIN;t<TMAX;)\n       {float h = SDF(ro+rd*t);\n    if(h <.01)\n        return 0.0;\n       res= min(res,k*h/t);\n       t +=h;\n    }\n    return res;\n}\n\nvec3 render(in vec2 uv,in vec3 lightpos)\n{\n    vec3 ro=CameraTrans(rp);\n    vec3 color=vec3(0.);\n    vec3 ta=CameraTarget(vec3(0.));\n    mat3 cam=setCamera(ta,ro,0.);\n    vec3 rd=normalize(cam*vec3(uv,1.));\n    float t = rayMarch(ro,rd);\n    \n    if(t<TMAX)\n    {\n        vec3 p=ro+t*rd;\n        vec3 n=calcNormal(p);\n        vec3 light=lightpos;\n        float dif=clamp(dot(normalize(light-p),n),0.,1.);\n        \n        p += PRECISION*n;\n        float st=rayMarch(p,normalize(light-p));\n        \n        //float st =softShadow(p,normalize(light-p),5.);\n            //dif *=st;\n           if (st<TMAX)\n            {\n                dif *=0.5;\n            }\n        //float amb=0.5+0.5*dot(n,vec3(0.,1.,0.));\n        //color= amb*vec3(0.23)+dif*vec3(1.);\n        color=dif*vec3(2.);\n    }\n    return color;\n}\n\nvec3 VNormal(in vec2 uv)\n{\n    vec3 ro=CameraTrans(rp);\n    vec3 color=vec3(0.);\n    vec3 ta=CameraTarget(vec3(0.));\n    mat3 cam=setCamera(ta,ro,0.);\n    vec3 rd=normalize(cam*vec3(uv,1.));\n    float t = rayMarch(ro,rd);\n    \n    if(t<TMAX)\n    {\n        vec3 p=ro+t*rd;\n        vec3 n=calcNormal(p);\n        vec3 Nor=normalize(n);\n        color=Nor;\n    }\n    return color;\n}\n\nvec3 Alpha(vec2 uv)\n{\n    vec3 ro=CameraTrans(rp);\n    vec3 color=vec3(0.);\n    vec3 ta=CameraTarget(vec3(0.));\n    mat3 cam=setCamera(ta,ro,0.);\n    vec3 rd=normalize(cam*vec3(uv,1.));\n    float t = rayMarch(ro,rd);\n    \n    if(t<TMAX)\n    {\n        color=vec3(1.);\n    }\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float MR=iMouse.x/iResolution.x;\n    \n    vec2 uv = fixUV(fragCoord.xy);\n    vec3 color =render(uv,RotateY(vec3(1.,2.,-1.),iTime));\n    vec3 cameraVectorZ=clamp(render(uv,vec3(0.,0.,-2.)),0.,1.);\n    \n                       \n    vec3 AM=Alpha(uv);\n    vec3 Res=(color+0.5)/2.;\n    vec3 N=VNormal(uv)*AM;\n    vec3 skylight=vec3(dot(N,vec3(0.,-1.,0.)))*SkylightColor;\n    vec3 highlight=vec3(clamp(pow(color.x-0.3,5.),0.,1.));\n    vec3 Frensel=vec3(pow(1.-cameraVectorZ.x,3.))*0.1*AM;\n    vec3 SkyColor=(lerp(vec3(0.02,0.3,0.6),vec3(0.2,0.6,0.9),uv.y))*(1.-AM);\n    \n    vec3 Diffuse=AM*BaseColor*Res*2.+clamp(skylight,0.,1.)+highlight+Frensel+SkyColor;\n    fragColor=vec4(Diffuse,1.);\n}\n\n","name":"Image","description":"","type":"image"}]}