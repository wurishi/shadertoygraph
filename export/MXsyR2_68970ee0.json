{"ver":"0.1","info":{"id":"MXsyR2","date":"1726454631","viewed":19,"name":"Trying 2d noise","username":"CoffeeCatRailway","description":"Trying noise generation following https://thebookofshaders.com/11/\nDesmos graph I made before trying shader code: https://www.desmos.com/calculator/puyn26tzfs","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat rand(in vec2 st)\n{\n    return fract(sin(dot(st, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat noise(in vec2 st)\n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    \n    float a = rand(i);\n    float b = rand(i + vec2(1., 0.));\n    float c = rand(i + vec2(0., 1.));\n    float d = rand(i + vec2(1., 1.));\n    \n    vec2 u = f * f * (3. - 2. * f);\n    //vec2 u = f * f * f * (f * (f * 6. - 15.) + 10.);\n    \n    return mix(a, b, u.x) + (c - a) * u.y * (1. - u.x) + (d - b) * u.x * u.y;\n}\n\nfloat noiseLayered(in vec2 st, in float frequency, in float amplitude)\n{\n    const int OCTAVES = 5;\n    float value = 0.;\n    for (int i = 0; i < OCTAVES; i++)\n    {\n        value += noise(st * frequency) * amplitude;\n        amplitude *= .5;\n        frequency *= 2.;\n    }\n    return value * (float(OCTAVES) * .1);\n}\n\nvec2 skew(vec2 st)\n{\n    vec2 r = vec2(0.);\n    r.x = 1.1547 * st.x;\n    r.y = st.y + .5 * r.x;\n    return r;\n}\n\nvec3 simplexGrid(vec2 st)\n{\n    vec3 xyz = vec3(0.);\n    \n    vec2 p = fract(skew(st));\n    if (p.x > p.y)\n    {\n        xyz.xy = 1. - vec2(p.x, p.y - p.x);\n        xyz.z = p.y;\n    } else\n    {\n        xyz.yz = 1. - vec2(p.x - p.y, p.y);\n        xyz.x = p.x;\n    }\n    \n    return fract(xyz);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mouse01 = iMouse.xy / iResolution.xy;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    if (iMouse.z > 0.)\n    {\n        uv -= mouse01;\n    } else\n    {\n        uv -= vec2(.5);\n    }\n    \n    vec2 pos = vec2(uv * 10.);\n    //pos.x += iTime * 1.;\n    float n = noise(pos);\n    //n += noise(pos * 2.) * .2;\n    \n    n = noiseLayered(pos, 1., 1.);\n    \n    //if (n > mouse01.x)\n    //{\n    //    n = 0.;\n    //}\n\n    fragColor = vec4(vec3(n), 1.);\n    //fragColor = vec4(uv, 0., 1.);\n    \n    //vec3 color = vec3(0.);\n    \n    //uv *= 10.;\n    \n    //color.rg = fract(uv);\n    //color.rg = fract(skew(uv));\n    \n    //color = simplexGrid(uv);\n    \n    //color = vec3(noise(color.rg/color.b));\n    \n    //fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}