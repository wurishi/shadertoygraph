{"ver":"0.1","info":{"id":"XcVXRR","date":"1714713983","viewed":40,"name":"Metaballs without color blend","username":"nocluk","description":"Metaballs shader without color blending","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct MetaBall{\n    vec2 pos;\n    vec3 col;\n};\n\nvec3 renderMetaBall(vec2 uv, MetaBall[6] balls){\n    float radius = 0.1;\n    float factor = 2.6;\n\n    float totalInfluence = 0.;\n    float maxInfluence = 0.;\n    vec3 color = balls[0].col;\n    \n    for (int i = 0; i < 6; i++)\n    {\n        float distance = length(balls[i].pos - uv);\n        float influence = radius / pow(distance, factor);\n        \n        totalInfluence += influence;\n        \n        if (influence > maxInfluence)\n        {\n            maxInfluence = influence;\n            color = balls[i].col;\n        }\n    }\n    \n    totalInfluence /= 6.;\n    \n    if (totalInfluence < 1.)\n        return vec3(0.);\n        \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    MetaBall balls[6];\n    balls[0].pos = 0.7 * sin(iTime*.15 + vec2(4.0, 0.5) + 6.0); balls[0].col = vec3(1., 0., 0.);\n    balls[1].pos = 0.7 * sin(iTime*.18 + vec2(1.0, 25) + 2.0); balls[1].col = vec3(0., 1., 0.);\n    balls[2].pos = 0.7 * sin(iTime*0.12 + vec2(3.0, 2.5) + 4.0); balls[2].col = vec3(0., 0., 1.);\n    balls[3].pos = 0.7 * sin(iTime*.25 + vec2(5.0, 0.5) + 6.0); balls[3].col = vec3(1., 1., 0.);\n    balls[4].pos = 0.7 * sin(iTime*.28 + vec2(2.0, 25) + 2.0); balls[4].col = vec3(0., 1., 1.);\n    balls[5].pos = 0.7 * sin(iTime*0.22 + vec2(4.0, 2.5) + 4.0); balls[5].col = vec3(1., 0., 1.);\n         \n    col = renderMetaBall(uv, balls);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}