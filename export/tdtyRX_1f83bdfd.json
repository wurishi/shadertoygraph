{"ver":"0.1","info":{"id":"tdtyRX","date":"1601435930","viewed":178,"name":"Triangle space","username":"avinitzca","description":"A triangle tunnel using triangles 2D SDF","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["sdf","triangle","abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n#define SIN60 0.86602540378\n\nvec2 rotate2D(vec2 coordinates, float angle){\n    float sinA = sin(angle);\n    float cosA = cos(angle);\n    coordinates =  mat2(cosA,-sinA,\n      sinA,cosA) * coordinates;\n    return coordinates;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;    \n    \n    uv *= 2.0;\n    uv -= 1.0;\n    uv.x /= iResolution.y / iResolution.x;\n    uv = rotate2D(uv, iTime * 0.45);\n    \n    float finalRed = 0.0;\n    \n    float finalWhite = 0.0;\n    for(float x = -1.; x <= 1.; x++)\n        for(float y = -1.; y <= 1.; y++)\n        {\n\t\t\tvec2 coordinates = uv + vec2(x, y) * 0.002;    \n\n            float sideA = dot(coordinates, vec2(SIN60, 0.5));\n            float sideB = dot(coordinates, vec2(-SIN60, 0.5));\n            float bottom = -coordinates.y;\n\n            float triangle = max(sideA, max(sideB, bottom));\n\n            float sinIncrement = (sin(iTime * 4.0) + 1.0 + cos(iTime * 2.0)) * 0.8;\n\t\t\tfloat fractalTriangle = fract(1.0 / triangle + iTime * 3.0 + sinIncrement);\n            float white = fract(1.0 / triangle + iTime * 3.0 + sinIncrement);\n            white = step(white, 0.1);\n            finalRed += step(triangle, 0.0995);\n            \n            float angle = atan(coordinates.x, coordinates.y) / PI;\n                        \n            for(float n = 1.0; n >= -1.0; n -= 0.2/3.0)\n                white += step(angle, n + 0.005) * (1.0 - step(angle, n - 0.005)) * 0.75;                \n                                    \n            white = clamp(white, 0., 1.);\n            float innerTriangleRed = step(triangle, 0.09);\n            float innerTriangleWhite = step(triangle, 0.098);\n            white -= innerTriangleWhite;\n            finalRed -= innerTriangleRed;\n            \n            white = clamp(white, 0.0, 1.0);\n            finalWhite += white;\n            \n        }\n   \n    finalRed /= 9.0;\n    finalWhite /= 9.0;\n    fragColor = vec4(vec3(finalWhite) + vec3(finalRed, 0.0, 0.0),1.0);\n}\n","name":"Image","description":"","type":"image"}]}