{"ver":"0.1","info":{"id":"l3XfRS","date":"1728517814","viewed":25,"name":"purple meow","username":"olchik","description":"meow meow meow meow","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["meow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv =  (fragCoord*2. - iResolution.xy) / iResolution.y*1. - 5.;\n    vec2 uv0 = uv;\n    vec3 color = vec3(0.);\n    float time = iTime * 2.0;\n    mat2 rotation = mat2(cos(time), -sin(time), sin(time), cos(time));\n    \n    for (float i = 0.0; i < 3.0; ++i){\n        uv = fract(uv*1.) -0.5;\n\n        float d = length(uv);\n\n        vec3 col =sin(vec3(0.400,0.000,1.000));\n\n        d = tan(d*5. + 2.*iTime)/5.;\n        \n        \n        \n        float noise = random(uv0 * 4.*iTime);\n        vec3 colornoize = vec3(noise);\n        \n        color += col*d;\n        vec2 triUV = uv;\n        triUV = mod(triUV * 3.0, 2.0) - 1.0;\n        triUV *= rotation;\n        float triangle = max(abs(triUV.x) + triUV.y * 0.57735, 0.0) - 0.3;\n        vec3 col2 = vec3(0.400,0.000,1.000);\n        \n        triangle = sin(triangle + iTime);\n        \n        col2*=cos(iTime + triangle * 1.0) + colornoize;\n        color+= col2*triangle;\n       \n    }\n     fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}