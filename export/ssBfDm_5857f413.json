{"ver":"0.1","info":{"id":"ssBfDm","date":"1646414201","viewed":135,"name":"UFO 6436873456","username":"ganerCodes","description":"UFO","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ufo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\nprecision mediump int;\n#endif\n\nfloat PI=3.14159;float sq(float x){return x*x;}float hypot(vec2 p){return sqrt(sq(p.r)+sq(p.g));}float dist(vec2 p1,vec2 p2){return hypot(p2-p1);}float angle(vec2 p){return atan(p.g,p.r);}float angle_between(vec2 p1,vec2 p2){return atan(p2.g-p1.g,p2.r-p1.r);}float pml(float x,float a,float b){float t=abs(b-a);return mod(-x*sign(mod(floor(x/t),2.0)-0.5),t)+a;}vec2 ptc(float d,float a){return vec2(d*cos(a),d*sin(a));}vec3 rgb2hsv(vec3 c){vec4 K=vec4(0.0,-1.0/3.0,2.0/3.0,-1.0),p=mix(vec4(c.bg,K.ab),vec4(c.gb,K.rg),step(c.b,c.g)),q=mix(vec4(p.rga,c.r),vec4(c.r,p.gbr),step(p.r,c.r));float d=q.r-min(q.a,q.g),e=1e-10;return vec3(abs(q.b+(q.a-q.g)/(6.0*d+e)),d/(q.r+e),q.r);}vec3 hsv2rgb(vec3 c){vec4 K=vec4(1.0,0.66666,0.33333,3.0);vec3 p=abs(fract(c.rrr+K.rgb)*6.0-K.aaa);return c.b*mix(K.rrr,p-K.rrr,c.g);}\n\nfloat smoothMax(float a, float b, float k) {\n    return max(a, b) - k * 0.166666666 * pow(\n        max(0.0, k - abs(a - b)) / k,\n        3.0\n    );\n}\n\nfloat g(vec3 p) {\n    return (\n        abs(p.x) + abs(p.y) + abs(p.z) - 1.0\n    );\n}\n\nfloat f(vec3 p) {\n    float r = iTime / 2.0;\n    float a = sin(iTime) / 8.0 + 0.05;\n    \n    vec3 o = p;\n    \n    p += vec3(\n        0.0,\n        0.5 + 0.5 * (sin(iTime / 2.0) - 1.0),\n        0.0\n    );\n    p = vec3(\n        p.x*cos(r) - p.z*sin(r),\n        p.y,\n        p.x*sin(r) + p.z*cos(r)\n    );\n    \n    float ang = atan(p.x, p.z);\n    float ang_mod = mod(ang + PI / 10.0, PI / 5.0) - PI / 10.0;\n    float d = length(p.xz);\n    vec2 rc = ptc(d, ang_mod);\n    \n    p = vec3(\n        p.x,\n        p.y*cos(a) - p.z*sin(a),\n        p.y*sin(a) + p.z*cos(a)\n    );\n    p = vec3(\n        p.x*cos(a) - p.y*sin(a),\n        p.x*sin(a) + p.y*cos(a),\n        p.z\n    );\n    \n    vec3 ball = (p + vec3(\n        0.0, -0.05, 0.0\n    )) * vec3(\n        1.0, 1.5, 1.0\n    );\n    \n    return max(\n        length(p.xy) - 1.0,\n        abs(p.y) - 0.2 + max(\n            0.2 * (pow(p.x, 2.0) + pow(p.z, 2.0)),\n            0.05 + p.y + 0.2 * pow(length(p.xz), 2.0)\n        )\n    ) <= 0.0 ? (\n        (1.0 - 50.0 * abs(p.y + 0.02) >= 0.0) ? (\n            -mod(ang / (PI) - iTime / 3.0, 1.0)\n        ) : (\n            (p.y >= 0.0) ? (\n                mod(length(p - ang_mod * vec3(0.0, 1.0, 0.0)), 0.1) >= 0.05 ? (\n                    -3.07\n                ) : -3.02\n            ) : (\n                length(p - vec3(0.0, -0.6, 0.0)) <= 0.45 ? (\n                    -1.3\n                ) : (\n                    -(3.0 + abs(p.z) / 15.0)\n                )\n            )\n        )\n    ) : ((\n        length(\n            ball\n        ) - pow(0.6, 2.0)\n    ) <= 0.0 ? (\n        0.1 + 0.4 * p.y - 0.9\n    ) : (\n        length(\n            vec3(rc.x, p.y, rc.y) - \n            vec3(0.75, -0.07, 0.0)\n        ) - pow(0.2, 2.0)\n    ) <= 0.0 ? (\n        sign(cos(4.0 * iTime)) * sin(5.0 * (ang + PI / 10.0)) <= 0.0 ? (\n            -0.3\n        ) : (-8.3)\n    ) : (\n        1.0\n    ));\n}\n\nvec2 raycast(vec3 s, vec3 e, vec3 par) {\n    bool b = f(mix(s, e, par.x)) >= 0.0;\n    vec3 l = mix(s, e, par.x + par.y);\n    if(f(l) >= 0.0 == b) {\n        return vec2(par.x + par.y, par.y);\n        \n        // float d = par.y * par.z;if(f(l + vec3(-d,  0,  0)) >= 0 == b &&f(l + vec3( d,  0,  0)) >= 0 == b &&f(l + vec3( 0, -d,  0)) >= 0 == b &&f(l + vec3( 0,  d,  0)) >= 0 == b &&f(l + vec3( 0,  0, -d)) >= 0 == b &&f(l + vec3( 0,  0,  d)) >= 0 == b) {return vec2(par.x + par.y, par.y);}else{return vec2(par.x + par.y / 1.0, par.y);}\n    }\n    return vec2(par.x, par.y / 1.5);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 p = vec3(\n        2.0 * ((fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y),\n        20.0 * 0.25\n    );\n    \n    int itters = 350;\n    float reachPer = 1.0;\n    \n    vec3 cast_s = vec3(0.0 * p.x, 0.0 * p.y, p.z);\n    vec3 cast_e = vec3(3.0 * p.xy, -10.0);\n    vec3 ray = vec3(\n        0.0,\n        reachPer / float(itters),\n        length(cast_e - cast_s)\n    );\n    for(int i = 0; i < itters; i++) {\n        ray.xy = raycast(cast_s, cast_e, ray);\n        if(ray.y < 0.0001) {\n            break;\n        }\n    }\n    \n    vec3 loc = mix(cast_s, cast_e, ray.x + ray.y * 2.0);\n    float v = abs(f(loc));\n    float bm = 1.0 / (1.0 + floor(v));\n    v = mod(v, 1.0);\n    \n    vec3 clr = vec3(0.0);\n    if(ray.x < reachPer - 0.01) {\n        clr = hsv2rgb(vec3(\n            v,\n            0.6, \n            min(\n                50.0 * pow(max(0.0, 0.7 - ray.x), 3.0) * bm,\n                1.0\n            )\n        ));\n    }\n    \n    fragColor = vec4(clr, 1.0);\n}","name":"Image","description":"","type":"image"}]}