{"ver":"0.1","info":{"id":"WdK3zt","date":"1570758177","viewed":376,"name":"Distortion Breath","username":"shadeThrower","description":"Distorted breathing kaleidoscopic plane","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["kaleidoscope","trig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tme = iTime*.5;\n    float scale = 0.125;\n   \n    vec2 adjVec = vec2((sin(tme)*.5), (cos(tme)*.5));\n    vec2 uv = fragCoord/iResolution.xy;    \n    vec2 uvM;\n    float posMod;\n\n    uvM = mod(uv + normalize(uv-0.5)*adjVec, scale);\n    uv = normalize(uvM-vec2(scale/2.))*(adjVec+vec2(.5));\n\n    if(mod(floor((uv.x)/scale),2.) == 0.)\n            uvM.x = scale - uvM.x;\n    if(mod(floor((uv.y)/scale),2.) == 0.)\n            uvM.y = scale - uvM.y;\n\n    uvM += adjVec*length(uvM + adjVec - vec2(0.5));\n\n    // Time varying pixel color\n    vec3 col = vec3(0.5 + 0.5*tan((cos(tme)+2.)*8.*(uvM.x/sin(uvM.y+0.2+(cos(tme)/2.+1.)))),\n                    0.5 + 0.5*tan((sin(tme*1.2)+2.)*8.*(uvM.x/sin(uvM.y+0.2+(cos(tme)/2.+1.)))),\n                    0.5 + 0.5*tan((cos(tme*1.3)+3.)*8.*(uvM.x/sin(uvM.y+0.2+(sin(tme)/2.+1.)))));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}