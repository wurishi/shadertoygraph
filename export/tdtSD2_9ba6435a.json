{"ver":"0.1","info":{"id":"tdtSD2","date":"1572946892","viewed":104,"name":"Furthest segment voronoi","username":"Ultraviolet","description":"Inspired by [url] https://members.loria.fr/SHornus/fpvd/ [/url].\nPress [b]space[/b] for switching between furthest/closest.\nUse mouse for changing curve parameters.","likes":5,"published":1,"flags":16,"usePreview":0,"tags":["voronoi","segment","furthest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst float PI = 3.14159;\n\n//const int nbSpire = 5;\n//const int nbSubdiv = 30;\n#define nbSpire   (iMouse.z>0.5?int(1.+iMouse.y/iResolution.y*10.):5)\n#define nbSubdiv  (iMouse.z>0.5?int(iMouse.x/iResolution.x*50.+2.):30)\n\n//const float theta_max = 2.*PI;\n//#define theta_max  (iMouse.x/iResolution.x*2.*PI)\n#define theta_max  (cos(iTime*.2)*1.8*PI)\nconst float rho_min = 0.1;\nconst float rho_max = 1.;\n\nconst float lineWidth = 1.;\n\n//const bool minMax = false;\n#define minMax  (texelFetch(iChannel0, ivec2(32,2), 0).x>0.5)\n\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n\tvec2 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h );\n}\n\nvec2 pol2cart(float theta, float rho)\n{\n    return vec2(cos(theta), sin(theta))*rho;\n}\n\nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nfloat theta(int spire, int subdiv)\n{\n    return float(spire)/float(nbSpire)*2.*PI + float(subdiv)/float(nbSubdiv-1)*theta_max;\n}\n\nfloat rho(int spire, int subdiv)\n{\n    return rho_min+(rho_max-rho_min)*float(subdiv)/float(nbSubdiv-1);\n}\n\nvec3 spireColor(int spire, float dist)\n{\n    return hsv2rgb_smooth(vec3(float(spire)/float(nbSpire), 0.8, exp(-dist)*.8+.2));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord/iResolution.xy - 0.5)*2.*vec2(iResolution.x/iResolution.y, 1.)*1.0;\n\n    vec3 col = vec3(1.);\n\n    float d_min_min = 1000.;\n    float d_max_min = -1000.;\n    float d_min_max = 1000.;\n    float d_max_max = -1000.;\n    \n    int i_min_min = -1;\n    int i_max_min = -1;\n    int i_min_max = -1;\n    int i_max_max = -1;\n    \n    for(int i=0; i<nbSpire; ++i)\n    {\n        \n        float d_i_min = 1000.;\n        float d_i_max = -1000.;\n        for(int j=0; j<nbSubdiv-1; ++j)\n        {\n\t\t\tvec2 p0 = pol2cart(theta(i,j), rho(i,j));\n\t\t\tvec2 p1 = pol2cart(theta(i,j+1), rho(i,j+1));\n            float d = sdSegment(p, p0, p1);\n            \n            d_i_min = min(d_i_min, d);\n            d_i_max = min(d_i_max, d);\n        }\n\n        if(d_i_min<d_min_min)\n        {\n            d_min_min = d_i_min;\n            i_min_min = i;\n        }\n\n        if(d_i_min>d_max_min)\n        {\n            d_max_min = d_i_min;\n            i_max_min = i;\n        }\n\n        if(d_i_max<d_min_max)\n        {\n            d_min_max = d_i_max;\n            i_min_max = i;\n        }\n\n        if(d_i_max>d_max_max)\n        {\n            d_max_max = d_i_max;\n            i_max_max = i;\n        }\n    }\n    \n    float dist = d_max_min;\n    int i = i_max_min;\n    \n    if(minMax)\n    {\n        dist = d_min_min;\n        i = i_min_min;\n    }\n    \n    vec3 n = normalize(vec3(dFdx(dist), dFdy(dist), .02));\n    vec3 l = normalize(vec3(cos(iTime*.5), sin(iTime*.5), 1.1));\n    float phong = max(dot(n,l), 0.0);\n    float spec = 0.5*pow(max(dot(reflect(vec3(0.0, 0.0, -1.0),n),l), 0.0), 256.);\n    col = spireColor(i, 0.) * phong + vec3(spec);\n    \n    col=mix(col,vec3(0.),mix(1.,0.,clamp(d_min_min*iResolution.y/2. -  lineWidth, -1., 1.)*.5+.5));\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}