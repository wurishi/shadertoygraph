{"ver":"0.1","info":{"id":"WtKSzd","date":"1583397332","viewed":315,"name":"Galaxy Sim","username":"bloxard","description":"Added an intro animation to an existing shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["galaxy","particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Branched from: https://www.shadertoy.com/view/XlfGRj\n// Star Nest by Pablo Roman Andrioli\n// This content is under the MIT License.\n\n#define iterations 17\n#define formuparam 0.53\n#define volsteps 20\n#define stepsize 0.1\n#define tile   0.850\n#define speed  0.010 \n#define brightness 0.0015\n#define darkmatter 0.300\n#define distfading 0.730\n#define saturation 0.850\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv = (-iResolution.xy+2.*gl_FragCoord.xy)/iResolution.y;\n    float hTime = iTime*0.5;\n\tfloat animValue = smoothstep(0.5,3.2,0.7+hTime*0.1);\n\tvec3 dir = vec3(uv*animValue*0.5,1.);\n\tfloat time = hTime*speed+.25;\n\tfloat value = max(-5.0+hTime*0.2,0.);\n\tfloat a1 = .5+hTime*1e-4;\n\tfloat a2 = .8-hTime*3e-4;\n\tmat2 rot1 = mat2(cos(a1),sin(a1),-sin(a1),cos(a1));\n\tmat2 rot2 = mat2(cos(a2),sin(a2),-sin(a2),cos(a2));\n\tdir.xz *= rot1;\n\tdir.xy *= rot2;\n\tvec3 from = vec3(0.,0.,sin(-0.15+hTime*0.005)*-0.30);\n    float animTime = 0.7 + 0.27 * max(-4.0+hTime*0.2,0.);\n\tanimTime += value;\n\tfrom += vec3(cos(animTime)*0.3,sin(animTime*0.73)*0.2,0.);\n\tfrom.xz *= rot1;\n\tfrom.xy *= rot2;\n    from.x -= 1e-1;\n\tfloat s = 1e-1;\n\tfloat fade = 1.;\n\tvec3 v = vec3(0.);\n\tfor (int r = 0; r < volsteps; r++)\n\t{\n\t\tvec3 p = from+s*dir*.5;\n\t\tp = abs(vec3(tile)-mod(p,vec3(tile*2.)));\n\t\tfloat pa = 0.;\n\t\tfloat a = 0.;\n\t\tfor (int i=0; i<iterations; i++)\n\t\t{ \n\t\t\tp = abs(p)/dot(p,p)-formuparam;\n\t\t\ta += abs(length(p)-pa);\n\t\t\tpa = length(p);\n\t\t}\n\t\tfloat dm = max(0.,darkmatter-a*a*1e-3);\n\t\ta *= a*a;\n\t\tif (r > 6)\n\t\t{\n\t\t\tfade *= 1.-dm;\n\t\t}\n\t\tv += fade;\n\t\tv += vec3(s,s*s,s*s*s*s)*a*brightness*fade;\n\t\tfade *= distfading;\n\t\ts += stepsize;\n\t}\n\tv = mix(vec3(length(v)),v,saturation);\n\tfragColor = vec4(v*1e-2,1.);\t\n}\n","name":"Image","description":"","type":"image"}]}