{"ver":"0.1","info":{"id":"cdKXRm","date":"1680880804","viewed":55,"name":"Game of Life upward growth","username":"izutionix","description":"it sometimes creates a sierpinski triangle\nfollowing along this tutorial: [url=https://www.youtube.com/watch?v=xh61Ol2X4GA]\nCoding the Game of Life by The Art of Code[/url]","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["interactive","automata","gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define brushSize 20.0\n\nint GetNeighbors(ivec2 P, ivec2 bias) {\n    int num = 0;\n    \n    for (int y=-1; y<=1; y++) {\n        for (int x=-1; x<=1; x++) {\n            if (x==0 && y==0) continue; // ignore current pixel\n            num += texelFetch(iChannel0, P + ivec2(x, y) + bias, 0).r > 0.5 ? 1 : 0; // increment if this neighbor is alive\n        }\n    }\n    return num;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 UV = ivec2(fragCoord);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = vec4(0);\n    \n    if(iFrame<10)\n        col = texture(iChannel1, vec2(UV)); // initialize with a very small texture\n    else {\n        bool alive = texelFetch(iChannel0, UV, 0).r > 0.5; // is current pixel alive?\n        int num = GetNeighbors(UV, ivec2(0,-1)); // get the number of alive neighbors\n        \n        int next = 0;\n        \n        if (alive && (num==2 || num==3))\n            next = 1;\n        else if (!alive && num==3)\n            next = 1;\n        else\n            next = 0;\n            \n        // carve out a circle if the mouse is clicked\n        if(distance(iMouse.xy, fragCoord) < brushSize)\n            if (iMouse.z > .0)\n                next = 1;\n        \n        col = vec4(next);\n    }\n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}