{"ver":"0.1","info":{"id":"ds2BDK","date":"1690999529","viewed":59,"name":"Sketch #1","username":"MOONtyzoo","description":"Created by following youtube tutorial https://www.youtube.com/watch?v=f4s1h2YETNY\n\nThis was a very nice tutorial that inspired me to learn more about shaders. I like how complex the end product can become with so little lines of code.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(in float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = 3.14159;\n    float ringNum = 1.5;\n    float ringSize = 4.0;\n    float ringSpeed = 0.7;\n    vec3 ringColor = vec3(0.0);\n\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0, 0.0, 0.0);\n    \n    for (float i = 0.0; i < 3.0; i++)\n    {\n        uv = fract(uv * 1.5) - 0.5;\n        float d = length(uv) * exp(-length(uv0));\n        ringColor = palette(length(uv0) + i*0.4 + ringSpeed*iTime);\n    \n        d = abs(cos(ringNum*2.0*pi*d + 0.8*ringSpeed*iTime));\n        d = pow((ringSize*0.02)/d, 1.3);\n        finalColor += ringColor * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}