{"ver":"0.1","info":{"id":"Nl33D2","date":"1636707251","viewed":148,"name":"Neon6","username":"Jzscwhat","description":"Simple 2D cel shading effect based on sobel filter","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","celshading","edgedetection","sobelfilter"],"hasliked":0,"parentid":"7sGXDt","parentname":"Neon5"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define i 1.8*cos(6.*iTime)\n#define j 3.2*sin(6.*iTime)\nfloat lum(vec4 c) \n{\n\treturn dot(c.rgb, vec3(0.3, 0.59, 0.11));\n}\n\nfloat cau = sqrt(2.), civ = 250.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t\n\tvec2 imageIncrement = vec2(1.0, 1.0) / iResolution.xy;\n\t\n\tfloat t00 = lum(texture(iChannel0, uv + imageIncrement * vec2(-i, -i)));\n\tfloat t10 = lum(texture(iChannel0, uv + imageIncrement * vec2( 0.0, -i)));\n\tfloat t20 = lum(texture(iChannel0, uv + imageIncrement * vec2( j, -i)));\n\tfloat t01 = lum(texture(iChannel0, uv + imageIncrement * vec2(-i,  0.0)));\n\tfloat t21 = lum(texture(iChannel0, uv + imageIncrement * vec2( j,  0.0)));\n\tfloat t02 = lum(texture(iChannel0, uv + imageIncrement * vec2(-i,  j)));\n\tfloat t12 = lum(texture(iChannel0, uv + imageIncrement * vec2( 0.0,  j)));\n\tfloat t22 = lum(texture(iChannel0, uv + imageIncrement * vec2( j,  j)));\n\t\n\tvec2 grad;\n\tgrad.x = t00 + 2.0 * t01 + t02 - t20 - 2.0 * t21 - t22;\n\tgrad.y = t00 + 2.0 * t10 + t20 - t02 - 2.0 * t12 - t22;\n\t\n\tvec3 c = vec3(0);\n    vec2 alpha = uv*2.-1.;\n    float beta = length(alpha/2.);\n    beta=pow(beta,3.);\n    beta*=abs(sin(2.*iTime))*23.;\n    beta/=cau;\n    vec3 af = vec3(0);\n    float ci = (1./civ)*beta;\n    af.x=texture(iChannel0,uv+vec2(-2./cau)*ci).r;\n    af.y=texture(iChannel0,uv+vec2(-1.,3.)/cau*ci).g;\n    af.z=texture(iChannel0,uv+vec2(i,0)*ci).b;\n    c = af;\n    float len = length(grad);\n    if(sin(2.*iTime)>0.4 && sin(2.*iTime)<0.8){\n\tfragColor = pow(vec4( len*len*sin(8.4), len*len*sin(2.8), len*len*sin(3.2), len*len*sin(5.6)) , texture(iChannel0, uv));\n\t\n    }else{\n    fragColor = c.rgbr;\n    }\n}\n","name":"Image","description":"","type":"image"}]}