{"ver":"0.1","info":{"id":"7tVXWm","date":"1640846249","viewed":75,"name":"PointInPolygon_gggab","username":"gggab","description":"判断点是否在多边形形内","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define arraySize 5\nvec3 vec3Array[arraySize];\n\nbool pointInPolygon(vec3 p, vec3[arraySize] points){\n    bool inside = false;\n    for(int i =0; i<arraySize;i++){\n        float xi = points[i].x;\n        float yi = points[i].y;\n        float xj,yj;\n        \n        if(i == 0){\n            xj = points[arraySize - 1].x;\n            yj = points[arraySize - 1].y;\n            \n        }else{\n            xj = points[i - 1].x;\n            yj = points[i - 1].y;\n        }\n        bool intersect = ((yi > p.y)!=(yj > p.y)) && (p.x < (xj - xi)*(p.y - yi)/(yj - yi) + xi);\n        if(intersect){\n            inside = !inside;\n        }\n    }\n    return inside;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3Array[0] = vec3(0.0,0.5,0.0);\n    vec3Array[1] = vec3(-0.2,0.1,0.0);\n    vec3Array[2] = vec3(-0.4,-0.6,0.0);\n    vec3Array[3] = vec3(0.3,-0.5,0.0);\n    vec3Array[4] = vec3(0.5,-0.1,0.0);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy-0.5)*2.0;\n\n    // Time varying pixel color\n    //vec3 col = vec3(0.5 + 0.5*cos(uv.xyx));\n    \n    bool r = pointInPolygon(vec3(uv.xy,0.0), vec3Array);\n    \n    if(r){\n        fragColor = vec4(1.0,0.0,0.0,1.0);\n    }else{\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n\n    // Output to screen\n    //fragColor = vec4(abs(uv.xy),0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}