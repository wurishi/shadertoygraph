{"ver":"0.1","info":{"id":"wlX3W8","date":"1556263160","viewed":57,"name":"ShowDigit","username":"olm_shadertoy","description":"ShowDigit","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["showdigit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUMBER 94524\n\nvec3 getColorToShowDigit(vec2 uv, uint number)\n{\n  vec3 col = vec3(1.0, 0.0, 0.0);\n\n  if (number == uint(0))\n  {\n\treturn col;\n  }\n    \n  uint div = uint(1);\n  uint nbDigits = uint(0);\n  while (div <= number)\n  {\n\tdiv *= uint(10);\n    nbDigits++;\n  }\n    \n  if (nbDigits == uint(0))\n  {\n\treturn col;\n  }\n  \n  uint digitIndex = uint(0);\n  while (div >= uint(10))\n  {\n    div /= uint(10);\n          \n    uint digit = number / div;\n          \n    // Show digit here\n    float uInterval = 1.0 / float(nbDigits);\n    vec2 bottomLeft = vec2(float(digitIndex) * uInterval + uInterval / 10.0, 0.0);\n    vec2 topRight = vec2(bottomLeft.x + uInterval - uInterval / 10.0, 1.0);\n  \n    if (uv.x >= bottomLeft.x &&\n        uv.x < topRight.x &&\n        uv.y < topRight.y &&\n        uv.y >= bottomLeft.y)\n    {\n      switch (digit)\n      {\n        case uint(0):\n          col = vec3(1.0, 0.0, 0.0); // Red\n          break;\n        case uint(1):\n          col = vec3(1.0, 0.5, 0.0); // Orange\n          break;\n        case uint(2):\n          col = vec3(1.0, 1.0, 0.0); // Yellow\n          break;\n        case uint(3):\n          col = vec3(0.0, 1.0, 0.0); // Green\n          break;\n        case uint(4):\n          col = vec3(0.0, 1.0, 1.0); // Cyan\n          break;\n        case uint(5):\n          col = vec3(0.0, 0.0, 1.0); // Blue\n          break;\n        case uint(6):\n          col = vec3(0.5, 0.0, 1.0); // Purple\n          break;\n        case uint(7):\n          col = vec3(1.0, 0.0, 1.0); // Pink\n          break;\n        case uint(8):\n          col = vec3(0.65, 0.17, 0.17); // Brown\n          break;\n        case uint(9):\n          col = vec3(0.25, 0.25, 0.25); // Grey\n          break;\n      }\n      \n      break;\n    }\n  \n    number -= digit * div;\n          \n    digitIndex++;\n  }\n  \n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Time varying pixel color\n    vec3 col = getColorToShowDigit(uv, uint(NUMBER));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}