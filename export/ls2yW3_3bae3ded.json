{"ver":"0.1","info":{"id":"ls2yW3","date":"1494180465","viewed":117,"name":"Playing with polars","username":"liamegan","description":"Playing around with texture generation using polar coordinates","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 uv1 = uv - vec2(0.3, 0.5); // pole one\n    vec2 uv2 = uv - vec2(0.7, 0.5); // pole two\n    \n    float modifiedTime = iTime * 0.1;\n   \n    float multiplier = 20.0 + (sin(modifiedTime) * 15.0);\n    //multiplier = 1.0;\n    \n    float r = sin(length(uv1) * multiplier);\n    float theta = atan(uv1.y, uv1.x);\n//    theta += sin(modifiedTime) * r;\n    \n    float r2 = sin(length(uv2) * multiplier);\n    float theta2 = atan(uv2.y, uv2.x);\n//    theta2 += sin(modifiedTime) * r2;\n    \n    r -= r2;\n    theta -= theta2;\n    \n    vec2 _uv = vec2(r * cos(theta), r * sin(theta));\n    vec4 tex = texture(iChannel0, _uv);\n    \n\tfragColor = tex;\n}","name":"Image","description":"","type":"image"}]}