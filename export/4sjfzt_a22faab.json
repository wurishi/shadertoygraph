{"ver":"0.1","info":{"id":"4sjfzt","date":"1502558928","viewed":261,"name":"Effects playground","username":"Abvadabra","description":"Just trying out various screen effects","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["posteffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void applyDistortion(inout vec2 uv, vec2 pos, float power){\n    float noiseX = texture(iChannel1, pos.xy / 768. + vec2(iTime * .01)).x;\n    float noiseY = texture(iChannel1, pos.xy / 4096. + vec2(iTime * .01)).x;\n \tuv += vec2((noiseX - 0.5) * power, (noiseY - 0.5) * power);   \n}\n\nvoid applyGray(inout vec3 color, float gray){\n    float g = dot(color.rgb, vec3(.299, .587, .114));\n    color = mix(color, vec3(g), gray);\n}\n\nvec4 getColorAt(vec2 pos, vec2 fragCoord){\n    vec2 uv = vec2(pos);\n    applyDistortion(uv, fragCoord, .008);\n    \n    vec4 color = texture(iChannel0, uv);\n    \n    applyGray(color.rgb, abs(sin(iTime)));\n    return color;\n}\n\n\nfloat impulse( float k, float x )\n{\n    float h = k*x;\n    return h*exp(1.0-h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;    \n\t\n    vec4 color = getColorAt(uv, fragCoord);\n    //some kind of random chromatic abberation\n    float abbPower = .01 * sin(iTime) * sin(uv.y * iTime * 10.);\n    color.r = getColorAt(uv - vec2(abbPower, .0), fragCoord).r;\n    color.b = getColorAt(uv + vec2(abbPower, .0), fragCoord).b;\n                 \n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}