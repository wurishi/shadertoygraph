{"ver":"0.1","info":{"id":"NdcfWn","date":"1656301770","viewed":514,"name":"Julia Sets of the Burning Ship","username":"zenzicubic","description":"These are the julia sets of the burning ship. Move your mouse to explore","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// parameters for the render\n#define MAX 100\n#define BAIL 4.0\n#define SCALE 2.0\n#define SHIP_WT 3.0\n\n// colors\nvec3 col1 = vec3(15.0 / 255.0, 3.0 / 255.0, 38.0 / 255.0);\nvec3 col2 = vec3(239.0 / 255.0, 229.0 / 255.0, 220.0 / 255.0);\n\nint testAt(vec2 z, vec2 c)\n{\n    // test if a point falls within the fractal by applying the map\n    int i = 0;\n    float re, im;\n    while (i < MAX) {\n        re = z.x * z.x - z.y * z.y;\n        im = abs(2.0 * z.x * z.y);\n        \n        z = vec2(re, im) + c;\n        if (dot(z, z) > BAIL) {\n            break;\n        }\n        i ++;\n    }\n    return i;\n}\n\nvec2 map(vec2 fragCoord)\n{\n    // map UV coords to mandelbrot coords\n    vec2 pos = fragCoord/iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    \n    vec2 z = (2.0 * SCALE * pos) - SCALE;\n    z.x *= ratio;\n    \n    return z;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // get positions\n    vec2 z = map(fragCoord);\n    vec2 mPos = vec2(iMouse.x, iMouse.y);\n    vec2 c = map(mPos);\n    \n    // test and color the fractals\n    int i = testAt(z, c);\n    int j = testAt(z, z);\n    \n    float t1 = float(i) / float(MAX);\n    float t2 = float(j) / float(MAX);\n    \n    vec3 colA = mix(col1, col2, t1);\n    vec3 colB = mix(col1, col2, t2);\n    \n    // combine the colors\n    fragColor = vec4(colA + (colB / SHIP_WT), 1.0);\n}","name":"Image","description":"","type":"image"}]}