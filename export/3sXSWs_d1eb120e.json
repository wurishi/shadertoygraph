{"ver":"0.1","info":{"id":"3sXSWs","date":"1552463850","viewed":260,"name":"neon bulbs","username":"jcyuan","description":"pratice, neon waves","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["pratice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIZE 12.\n#define BGCOLOR vec3(.0, .0, .0)\n\n// hueShift: https://www.shadertoy.com/view/MsjXRt\nvec3 hueShift(in vec3 col, in float shift) {\n    vec3 P = vec3(0.55735) * dot(vec3(0.55735), col);\n    vec3 U = col - P;\n    vec3 V = cross(vec3(0.55735), U);    \n    col = U * cos(shift * 6.2832) + V * sin(shift * 6.2832) + P;\n    return col;\n}\n\nfloat sdCircle(in vec2 p) {\n    return length(p - .5);\n}\n\nfloat radialMask(in vec2 p) {\n    return vec2(sdCircle(p), atan(p.y, p.x)).x * 4.;\n}\n\nfloat sphereMask(in vec2 p, in float r, in float hard) {\n    float dist = sdCircle(p);\n    return 1. - smoothstep(r - (r * hard), r + (r * hard), dist);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y + .5;\n    vec2 ouv = uv;\n    \n    uv = fract(uv * SIZE);\n    ouv = floor(ouv * SIZE) / SIZE;\n    \n    float spMask = sphereMask(uv, .5, .3);\n    \n    vec3 color = vec3(spMask);\n\n    float flow = abs(sin(1. - radialMask(ouv) + iTime * 4.));\n    flow = pow(flow, 2.);\n    vec3 rainbow = hueShift(vec3(1., 0., 0.), flow);\n    \n    float flow2 = abs(sin(1. - radialMask(ouv) + iTime * 1.5));\n    flow2 = pow(flow2, 3.);\n\n    color *= rainbow * flow2;\n\n    color = mix(BGCOLOR, color, spMask);\n    \n    fragColor = vec4(color, 1.);\n}\n","name":"Image","description":"","type":"image"}]}