{"ver":"0.1","info":{"id":"dlfcDs","date":"1693422481","viewed":21,"name":"ek_rainbow","username":"emrekovanci","description":"ek_rainbow","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rainbowColors[7] = vec3[]\n(\n    vec3(0.58, 0.0, 0.82), // violet\n    vec3(0.33, 0.0, 0.50), // indigo\n    vec3(0.0, 0.0, 1.0),   // blue\n    vec3(0.0, 1.0, 0.0),   // green\n    vec3(1.0, 1.0, 0.0),   // yellow\n    vec3(1.0, 0.50, 0.0),  // orange\n    vec3(1.0, 0.0 , 0.0)   // red\n);\n\nvec2 rainbowCenter = vec2(0.5, 0.5);\n\nfloat ringRadius = 0.1;\nfloat ringThickness = 0.05;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 color = vec3(0.0);\n    \n    if (uv.y >= rainbowCenter.y)\n    {\n\n        float d = distance(uv, rainbowCenter);\n\n        for (int i = 0; i < 7; ++i)\n        {\n            color = mix(color, rainbowColors[i], step(ringRadius - ringThickness, d) - step(ringRadius, d));\n            ringRadius += ringThickness;\n        }\n    }\n        \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}