{"ver":"0.1","info":{"id":"cdySRW","date":"1680759084","viewed":119,"name":"Riemann Sums","username":"curtisjhu","description":"Riemann sums 3b1b style","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define E 2.71828\n\nfloat f(float x) {\n    return 0.6*pow(x-0.4, 3.0) + pow(x-0.4, 2.0) + 0.5;\n}\n\n// from a to b using rects of width w\nfloat RiemannSums(float a, float b, float w, vec2 pos) {\n\n    // miss\n    if (pos.x > b || pos.x < a) return -1.0;\n\n    float i = floor((pos.x - a) / w);\n    float y = f(a+i*w);\n    \n    if ( pos.y <= y && pos.y >= 0.0 || pos.y >= y && pos.y <= 0.0) {\n        return i/((b-a)/w);\n    }\n    \n    return -1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    \n    // GRID LINES\n    if (abs(uv.x) < 0.01 || abs(uv.y) < 0.01)\n        col = vec3(0.2, 0.4, 0.5);\n        \n    // RECTS\n    float TotalAnimationLength = 3.0;\n    float time = mod(iTime, TotalAnimationLength);\n    \n    // using f(x) = e^-x^2 (gaussian bell)\n    float w = 0.2 * pow(E, - pow(time, 2.0) );\n    float shade = RiemannSums(-0.6, 0.6, w, uv);\n    if (shade >= 0.0)\n        col = mix(vec3(0.9, 0.9, 0.12), vec3(0.9, 0.72, 0.1), shade);\n    \n    // PLOT FUNC\n    if (abs(uv.y - f(uv.x)) < 0.01)\n        col = vec3(0.7, 0.3, 0.3);\n\n    \n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}