{"ver":"0.1","info":{"id":"XdXfzM","date":"1495209679","viewed":805,"name":"pirates - sunset","username":"trebuhd","description":"daytime version of iq's pirates shader.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["procedural","sun","ocean","pirates","flyover"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by inigo quilez - iq/2014\n// Modified by Hubert Dworczynski\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// daytime version of iq's pirates shader.\n\nfloat fbm( vec2 p )\n{\n    return 0.5000*texture( iChannel1, p*1.00 ).x + \n           0.2500*texture( iChannel1, p*2.02 ).x + \n           0.1250*texture( iChannel1, p*4.03 ).x + \n           0.0625*texture( iChannel1, p*8.04 ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod( iTime, 60.0 );\n\tvec2 p = (-iResolution.xy+2.0*fragCoord.xy) / iResolution.y;\n    vec2 i = p;\n\n    // camera\n    p += vec2(1.0,3.0)*0.001*2.0*cos( iTime*5.0 + vec2(0.0,1.5) );    \n    p += vec2(1.0,3.0)*0.001*1.0*cos( iTime*9.0 + vec2(1.0,4.5) );    \n    p *= 0.85 + 0.1*length(p);\n    float an = -0.3 * sin( 0.05*time );\n    float co = cos(an);\n    float si = sin(an);\n    p = mat2( co, -si, si, co )*p;\n    \n    // water\n    vec2 q = vec2(p.x,1.0)/p.y;\n    q.y -= 1.2*time;    \n    vec2 off = texture( iChannel0, 0.1*q*vec2(1.0,2.0) - vec2(0.0,0.007*iTime) ).xy;\n    q += 0.4*(-1.0 + 2.0*off);\n    vec3 col = texture( iChannel0, 0.1*q *vec2(.5,8.0) + vec2(0.0,0.01*iTime) ).zyx;\n    col *= 0.4;\n    float re = 1.0-smoothstep( 0.0, 0.7, abs(p.x-0.6) - abs(p.y)*0.5+0.2 );\n    col += 1.0*vec3(1.0,0.9,0.73)*re*0.2*off.y*5.0*(1.0-col.x);\n    float re2 = 1.0-smoothstep( 0.0, 2.0, abs(p.x-0.6) - abs(p.y)*0.85 );\n    col += 0.7*re2*smoothstep(0.35,1.0,texture( iChannel1, 0.1*q *vec2(0.5,8.0) ).x);\n    \n    // sky\n    vec3 sky = vec3(0.0,0.05,0.1)*1.4;\n    // clouds    \n    float f = fbm( 0.005*vec2(p.x,1.0)/p.y );\n    vec3 cloud = vec3(0.3,0.4,0.5)*0.6*(1.0-0.85*sqrt(smoothstep(0.4,1.0,f)));\n    sky = mix( sky, cloud, 0.95*smoothstep( 0.4, 0.6, 2. ) );\n    sky = mix( sky, vec3(0.33,0.34,0.35), pow(1.0-max(0.0,p.y),2.0) );\n    col = mix( col, sky, smoothstep(0.0,0.05,p.y) );\n    \n    // horizon\n    col += 0.3*pow(clamp(1.1-abs(p.y),1.8,1.0),9.0);\n\n    // sun\n    float d = length(p-vec2(0.3,0.1));\n    float g = 1.0 - smoothstep( 0.2, 0.22, d );\n    vec3 sun = vec3(1.04,1.,0.8)*(0.95-0.1*smoothstep(0.1,1.,f));\n    col += .5*sun*exp(-4.0*d)*vec3(2.5,1.5,0.9);\n    col += 0.1*sun*exp(-3.0*d);\n    col = mix( col, sun, .4 );\n    \n    // postprocess\n    col *= 1.5;\n    col = pow( col, vec3(2.2,1.2,0.9) );    \n    col *= clamp(1.0-0.3*length(i), 0.0, 0.81 );\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}