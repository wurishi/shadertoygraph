{"ver":"0.1","info":{"id":"7lBcWt","date":"1650392710","viewed":92,"name":"Load page v2","username":"MelisaHot","description":"Animation for loading page v2.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","sdf","load"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\n\n\nfloat hash(in vec2 uv){\n    return fract(cos(fract(iTime) ) * dot(uv, vec2(23.788952, 87.4554)) * 61111.78996625); \n}\n\nmat2 rot(float a){\nreturn mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nfloat sc (vec3 p, float d)\n{\n  p = abs(p);\n  p = max(p,p.yzx);\n  return min(p.z,min(p.x,p.z))-d;\n}\n\nfloat sdf(vec3 p)\n{\n  float dt = fract(iTime*2.);\n  p.xy *= rot(sin(p.z+dt*(2.*PI)));\n  float per = 8.;\n  p = mod(p,per)-per*0.5;\n  float d = sc(p,.8);\n  return d+sin(iTime)-0.9;\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.0025, -0.0025); \n    return normalize(\n        e.xyy * sdf(p + e.xyy) + \n        e.yyx * sdf(p + e.yyx) + \n        e.yxy * sdf(p + e.yxy) + \n        e.xxx * sdf(p + e.xxx));    \n}\n\nvec3 phong(vec3 lightDir, vec3 normal, vec3 rd) {\n  // ambient\n  float k_a = 0.4989;\n  vec3 i_a =0.49687 + 0.5*cos(iTime*0.5+vec3(1,2,3));;\n  vec3 ambient = k_a * i_a;\n\n  // diffuse\n  float k_d = 0.9;\n  float dotLN = clamp(dot(lightDir, normal), 0., 1.);\n  vec3 i_d = vec3(0.869, 0.3366, 0.54588)*dot(sin (iTime), cos(iTime*1.25));\n  vec3 diffuse = k_d * dotLN * i_d;\n\n  // specular\n  float k_s = 0.4699;\n  float dotRV = clamp(dot(reflect(lightDir, normal), -rd), 0., 1.);\n  vec3 i_s = vec3(.2, .4, .6);\n  float alpha = 2.;\n  vec3 specular = k_s * pow(dotRV, alpha) * i_s;\n\n  return ambient+diffuse+specular ;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n  float rand = hash(uv);\n  vec3 ro = vec3 (0.5,0.5, -5.);\n  vec3 rd = normalize(vec3(uv,1.));\n  vec3 p = ro;\n  vec3 col = vec3(0.);\n\n  float t=0.; bool hit=false;\n\n  for(float i=0.;i<128.;i++)\n  {\n    p = ro+t*rd;\n    float d = sdf(p);\n    d = abs(d)-.5;\n    d *= 0.3+rand*0.001;\n    t += d;\n    \n  }\n  vec3 n = normal(p);\n \n  vec3 lightPosition1 = vec3(0, 120, 20);\n      vec3 lightDirection1 = normalize(lightPosition1 - p);\n      float lightIntensity1 = 1.;\n       col += lightIntensity1 * phong(lightDirection1, n, rd);\n  \n  fragColor = vec4(sqrt(col),1.);\n}","name":"Image","description":"","type":"image"}]}