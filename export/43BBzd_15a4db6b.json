{"ver":"0.1","info":{"id":"43BBzd","date":"1729821949","viewed":59,"name":"Circle Noise Background","username":"LeftCircle","description":"A simple circle noise background. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 color_1 = vec3(255,0,0);\nvec3 color_2 = vec3(0,255,0);\nvec3 color_3 = vec3(0,0,255);\nfloat spin_speed = 0.25;\nfloat PI = 3.1415926535897;\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(vec2(cos(_angle), sin(_angle)), vec2(-sin(_angle), cos(_angle)));\n}\n\nfloat shape(vec2 st, float radius, float t_offset, float freq_mod, float speed) {\n\tst = vec2(0.5)-st;\n    float r = length(st)*2.0;\n    float a = atan(st.y,st.x);\n\t//float a = asinh(st.y + st.x + fract(TIME / 50.0));\n    //float a = asinh(st.y);\n\tfloat m = abs(mod(a + t_offset + iTime * speed, 3.14*freq_mod)-3.14)/3.6;\n    float f = radius;\n    m += noise(st+iTime*1.0)*0.1;\n    //a *= 1.+abs(atan(TIME*0.2))*.1;\n    //a *= 1.+noise(st+TIME*0.1)*0.1;\n    //f += sin(a*50.)*noise(st+TIME*.2)*.1;\n    f += 0.35*(sin(a * 5.0)* 0.15 *pow(m,1.0));\n    return 1.-smoothstep(f,f+0.007,r);\n}\n\nfloat shapeBorder(vec2 st, float radius, float width, float t_offset, float freq_mod, float speed) {\n    return shape(st,radius, t_offset, freq_mod, speed) - shape(st, radius-width, t_offset, freq_mod, speed);\n}\n\nvoid vertex() {\n\t// Called for every vertex the material is visible on.\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 UV = fragCoord/iResolution.y;\n    \n    // fmod of 0.5 creates 4 rotations which is pretty cool.\n\n\t// translate the UV coordinates so that all coordinates move in a noisy circle pattern\n\tvec2 tr1 = 0.1 * vec2(noise(vec2(1.0) * iTime * 0.1), noise(vec2(1.0) * iTime * 0.1));\n\ttr1 = rotate2d(iTime * 0.1) * tr1;\n\tvec2 uv_1 = UV + tr1;\n\tvec2 uv_2 = UV + rotate2d(iTime * 0.2 + 4.0 * PI / 3.0) * tr1;\n\tvec2 uv_3 = UV + rotate2d(iTime * 0.3 + 2.0 * PI / 3.0) * tr1;\n\n\tvec2 r0 = rotate2d(-iTime * spin_speed) * (vec2(0.5) - uv_1) + vec2(0.5);\n\tvec2 r1 = rotate2d(iTime * spin_speed * 1.25) * (vec2(0.5) - uv_2) + vec2(0.5);\n\tvec2 r2 = rotate2d(iTime * spin_speed * 1.5) * (vec2(0.5) - uv_3) + vec2(0.5);\n\tvec4 ac1 = vec4(color_1, 0.333) * shapeBorder(r0, 0.8, 0.12, 0.0, 2.0, 0.25);\n\tvec4 ac2 = vec4(color_2, 0.333) * shapeBorder(r1, 0.8, 0.12, 4.0 * PI / 3.0, 2.0, 0.5);\n\tvec4 ac3 = vec4(color_3, 0.333) * shapeBorder(r2, 0.8, 0.12, 2.0 * PI / 3.0, 2.0, spin_speed * 0.75);\n\tfragColor = ac1 + ac2 + ac3;\n\tfragColor.a = clamp(fragColor.a, 0.0, 0.8);\n}\n\n\n//void mainImage( out vec4 fragColor, in vec2 fragCoord )\n//{\n//    // Normalized pixel coordinates (from 0 to 1)\n//    vec2 uv = fragCoord/iResolution.xy;\n//\n//    // Time varying pixel color\n//    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n//    fragColor = vec4(col,1.0);\n//}","name":"Image","description":"","type":"image"}]}