{"ver":"0.1","info":{"id":"XdVfW3","date":"1531912341","viewed":253,"name":"Mandelbrot : Smooth Coloring","username":"Gijs","description":"Most basic example of smooth iteration/coloring. https://iquilezles.org/articles/mset_smooth/mset_smooth.htm","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","iteration","smooth","coloring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int   MAX_ITERATIONS = 300;\nconst float BAILOUT        = 16.;\n\nfloat smooth_ite(vec2 c){\n    //calculate fractal orbit\n    vec2 z = vec2(0);\n    int N;\n    for(N=1;N<MAX_ITERATIONS && dot(z,z)<BAILOUT*BAILOUT;N++){\n        z = mat2(z,-z.y,z.x)*z+c;\n    }\n\n    //smooth iteration calculation\n    float K = float(N);\n    if(dot(z,z)>BAILOUT*BAILOUT){\n        K -= log2(log(length(z))/log(BAILOUT));\n    }\n    \n    //return palette color from smooth iteration\n    return K;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    //scale pixel such that the origin is in the middle of the screen\n    vec2 sp = (fragCoord*2.-iResolution.xy)/iResolution.y*2.;\n    \n    //animation\n    sp *= pow(.5,fract(iTime*0.05)*13.);\n    sp -= vec2(1.5019,0);\n    \n    //get smooth iteration\n    float i = smooth_ite(sp);\n    \n    vec3 col = vec3(0);\n    if(i!=float(MAX_ITERATIONS)){\n        col = vec3(cos(log(i)*3.)*.4 + .5);\n    }\n\n    fragColor = vec4(col, 0.);\n}","name":"Image","description":"","type":"image"}]}