{"ver":"0.1","info":{"id":"ld2cDD","date":"1492241800","viewed":108,"name":"Colorful Swirl 2","username":"ccorcos","description":"working on  it","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// HSL colorspace:\n// https://www.shadertoy.com/view/XljGzV\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // normalized\n    vec2 p = vec2(fragCoord.xy / iResolution.xy);\n    \n    // Polar coordinates:\n    // https://www.shadertoy.com/view/ltlXRf\n    vec2 relativePos = fragCoord.xy - (iResolution.xy / 2.0);\n    vec2 polar;\n    polar.y = sqrt(relativePos.x * relativePos.x + relativePos.y * relativePos.y);\n    polar.y /= iResolution.x / 2.0;\n    polar.y = 1.0 - polar.y;\n\n    polar.x = atan(relativePos.y, relativePos.x);\n    polar.x -= 1.57079632679;\n    if(polar.x < 0.0){\n\t\tpolar.x += 6.28318530718;\n    }\n    polar.x /= 6.28318530718;\n    polar.x = 1.0 - polar.x;\n    \n    float speed = 0.3;\n    float arms = 3.0;\n    float tau = 6.28318530718;\n    \n    // Compute swirl:\n    //float hue = polar.x * floor(sin(iTime) * 30.0) + iTime * 3.0 + polar.y;\n    float hue = polar.x * arms + iTime * speed + pow(polar.y, sin(iTime) * tau / 2.0);\n    \n    // Compute rgb:\n    vec3 rgb = hsl2rgb(vec3(hue, 1.0, 0.6));\n    fragColor = vec4(rgb, 1.0);\n    \n    // TODO:\n    // - How can I tile these swirls?\n    // - How can I create a continuous 2D function that cycles through these colors?\n}","name":"Image","description":"","type":"image"}]}