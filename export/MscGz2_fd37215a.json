{"ver":"0.1","info":{"id":"MscGz2","date":"1450859090","viewed":723,"name":"Peacock Feather","username":"BigWIngs","description":"My gf challenged me to make a peacock feather. Here is the result. I really wanna get rid of the aliasing at the bottom but its late :) You can change the number of strands with the define on 4. Watch fullscreen for less aliasing","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["2d","feather"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// \"Peacock Feather\" by Martijn Steinrucken aka BigWings - 2015\n// Email:countfrolic@gmail.com Twitter:@The_ArtOfCode\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define NUMSTRANDS 150.\n#define PI 3.1415\n#define MOD3 vec3(.1031,.11369,.13787)\n\n//----------------------------------------------------------------------------------------\n//  1 out, 1 in...\nfloat hash11(float p)\n{\n    // From Dave Hoskins\n\tvec3 p3  = fract(vec3(p) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat point(vec2 uv, vec2 p, float intensity) {\n\tuv -=p;\n    return intensity/dot(uv,uv);\n    //return distance(uv, p)*intensity;\n}\n\nfloat bandstep(float v, float c, float w) {\n\tfloat e1 = c-w;\n    float e2 = c+w;\n    float e = fwidth(v);\n    \n    float o = smoothstep(e1, e1+e, v); \n    o *= smoothstep(e2+e, e2, v);\n    \n    return o;\n}\n\nfloat line( in vec2 p, in vec2 a, in vec2 b ) {\n    // From IQ\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float d = length( pa - ba*h );\n    \n    return d;\n}\n\nfloat circ(vec2 uv, vec2 p, float sag) {\n\tuv -= p;\n    uv.x *= 1.+uv.y*sag;\n    return length(uv);\n}\n\nfloat circmask(vec2 uv, vec2 p, float sag, float start, float finish) {\n\tfloat c = circ(uv, p, sag);\n    \n    return smoothstep(start, finish, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t= iTime;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.x-=.5;\n    uv.x *= 16./9.;\n    \n    uv*=3.;\n    \n    float wiggle = sin(uv.y+t)*.1; \n    uv.x += wiggle;\n    \n    vec2 m = iMouse.xy/iResolution.xy;\n    \n    vec2 up = vec2(1., 0.);\n    vec2 p =  vec2(0., .0);\n    \n    vec2 v = p-uv;\n    float len = length(v);\n    float x = uv.y;\n    x = x*(x-1.);\n    float topStraight = 1.-smoothstep(1.75, 3., uv.y);\n    float bend = 1.- x*(1.-len*.5)*topStraight;\n    \n    v /= pow(len,bend);\n    \n    //v.y+=l;\n    \n    float c = abs(dot(up, v));\n    \n    float id = c*PI*NUMSTRANDS;\n    float featherLines = cos(id);\n    \n    //spalmer suggestion for anti aliasing\n    featherLines = mix(featherLines, .75, min(1., .44*fwidth(id)));\n    \n    id = floor(id/PI - PI*.5);\n    float sN = hash11(id*sign(uv.x));\n    \n    float outline1 = smoothstep(1., .95, c);\n    \n    c= featherLines*outline1;\n    \n    float outline2 = circ(uv, vec2(0., 1.4), 0.5)*.7;\n   \n    c *= smoothstep(1.5, 0.5, outline2);\n    float core = circ(uv, vec2(0., .95), 0.1)*.7;\n    core = smoothstep(.9, 0.3, core)*outline1*.9;\n    c = max(c, core);\n    \n    vec3 baseCol = vec3(.118, 1., .051);\n    vec3 eyeCol = vec3(.024, .118, .878);\n    vec3 eyeLightCol = vec3(.0, .89, .95);\n    vec3 brownCol = vec3(.965, .459, .384);\n    vec3 pupilCol = vec3(.1, .1, .12);\n    \n    vec3 col = baseCol;\n    float brownMask =  circmask(uv, vec2(0., 1.2+sN*.05*uv.y), 0.4, .95, .85);\n    col = mix(col, brownCol, clamp(0., 1., brownMask));\n    \n    float eyeMask = circmask(uv, vec2(0., 1.1+sN*.02), 0.4, .7, .65);\n    float eyeMask2 =  circmask(uv, vec2(0., .4+sN*.03), -0.1, 1., .98);\n    eyeMask *= eyeMask2;\n    col = mix(col, eyeLightCol, eyeMask);\n    \n    eyeMask = circmask(uv, vec2(0., 1.1+sN*.02), 0.4, .69, .6);\n    eyeMask2 = circmask(uv, vec2(0., .48+sN*.03), -0.1, .9, .88);\n    eyeMask *= eyeMask2;\n    col = mix(col, eyeCol, eyeMask);\n    \n    float cutMask = circ(uv*vec2(.75, 1.), vec2(0., .6), -0.6);\n    cutMask += line(uv, vec2(0., 3.), vec2(0., .0));\n    cutMask = smoothstep(.35, .25, cutMask);\n    \n    float pupilMask = circmask(uv, vec2(0., 1.1+sN*.05), 0.4, .5, .45);\n    pupilMask *= circmask(uv, vec2(0., .55+sN*.03), -0.1, .8, .78);\n    pupilMask *= 1.-cutMask;\n    col = mix(col, pupilCol, clamp(pupilMask, 0., 1.));\n    \n    float strandFade = circmask(uv, vec2(0.), 0., 0., 1.5);\n    col *= mix(1., sN+.25*strandFade, strandFade);\n    \n    col += clamp(sin(max(0.8, outline2+(sN+wiggle*10.)*.1)*15.), 0., 1.)*sN*strandFade;\t// highlights\n    \n    vec4 fg = vec4(col*c, c);\n    \n    float bgFade = uv.y/3.;\n    \n    vec4 bg = mix(vec4(eyeCol*.5, 0.), vec4(0.), 1.-bgFade);\n    fragColor = mix(bg, fg, fg.a);\n}","name":"Image","description":"","type":"image"}]}