{"ver":"0.1","info":{"id":"DtjfWw","date":"1694148560","viewed":74,"name":"Wake/rise up: Fractal 2","username":"seven_dc","description":"This is the \"fractal\" effect from Wake up / rise up demo.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return mat2(c, -s, s, c);\n}\n\n\nvec3 doBallFractal(vec4 fragCoord, vec2 r, float time) {\n    vec3 point,color;\n    float e,g,S,u;\n    for(float i=0.;i<9.;i++){\n\n        float zoom = 0.05 + sin(time) * 0.9;\n        point=vec3((fragCoord.xy-.5*r.xy)/r.y*g,g-zoom);\n        point.xz*=rotate(time*.2);\n        point.xy*=rotate(time*.5);\n        point--;\n        S=6.;\n\n        for(int j=0;j<10;j++) {\n            u = dot(point,point)*(.7-(1.0/5.0));\n            S /= u;\n            point /= u;\n            point = abs(point+.99999)-.999999;\n        }\n        e = abs(point.y)/S;\n        g += e;\n      }\n\n     color += normalize(++point).y;\n        \n     color += point*.05;\n     color.r += e;\n     color.b += e;  \n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{        \n    vec3 color = doBallFractal(gl_FragCoord.xyxy, iResolution.xy, iTime);\n         \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}