{"ver":"0.1","info":{"id":"fl3GzS","date":"1636221160","viewed":401,"name":"Syracuse problem / Collatz con 3","username":"FabriceNeyret2","description":"https://en.wikipedia.org/wiki/Collatz_conjecture\n\nin this variant we display the \"orbit hair\" of each value (in first line of buffA) as curve which step turn left for evens and right for odds. see https://community.wolfram.com/groups/-/m/t/558256\nWIP.","likes":13,"published":3,"flags":32,"usePreview":0,"tags":["collatzconjecture","syracuseproblem","ulamconjecture","hailstonesequence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/Nlc3RS\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n        O = T(U/1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\nvec3 ihash( uvec3 x ) {              // quality interger hash from https://www.shadertoy.com/view/XlXcW4\nconst uint k = 1103515245U;  // GLIB C\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    return vec3(x) / float(0xffffffffU);\n}\n#define hash(p)   ihash(uvec3(U.x,U.x*11.,U.x+717.)).x\n*/\n\n#define hash(p)  fract(sin( (p) *  78.233 ) * 43758.5453) // old school hash\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    U -= .5;\n    if (U.y > 0.) return;            // we simulates only 1st line \n    \n    if (iFrame==0) {                 // --- initialization\n        O = vec4(0);\n     // O.x = U.x + U.y*R.x;         // each pixel represent one integer\n        O.x = floor(1e5*hash(U.x));\n        return;\n    }\n                                     // --- Syracuse steps\n    O = T(U);                        // previous state\n    int i = int(O.x+.5);\n    if ( i==1 ) return;              // already converged\n    \n    i   = i/2*2==i ? i/2 : 3*i+1;    // hearth of the model\n    O.x = float(i);                  // store current value\n    O.a += i/2*2==i ? .14 : -.24;    // AnglePath orbit: turn left if even or right if odd\n    \n    O.yz += vec2(cos(O.a),sin(O.a)) *10. / pow(U.x+1.,1.2); // new point on orbit hair, see https://community.wolfram.com/groups/-/m/t/558256 \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(U) texelFetch( iChannel0, ivec2(U), 0 )","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float line(vec2 p, vec2 a,vec2 b) { \n    p -= a, b -= a;\n    float h = dot(p, b) / dot(b, b),\n          c = clamp(h, 0., 1.);\n    p -= b*h;\n    return h==c ? dot(p,p) : 1e5; \n // return dot(p,p);                   // with round ends\n}\n\n// #define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5;\n    if (U.y==0.) { O = texelFetch(iChannel1, ivec2(U.x,0),0); return; } // store the previous point\n    \n    vec2 R = iResolution.xy;\n\n    float d = 99.,x, z = 12.;\n    O = T(U);\n    U = ( U - vec2(.1,.5)*R ) / z ;\n    for ( x=0.; x < R.x; x++ )  // for each simulated number\n        if ( T(vec2(x,0.)).x  > 1. ) // if not yet converged\n        d = min(d, line(U, texelFetch(iChannel0, ivec2(x,0),0).yz, // draw current hair segment\n                           texelFetch(iChannel1, ivec2(x,0),0).yz ) ); \n \n    O += .5* smoothstep(1.5,0.,sqrt(d) *z );\n}","name":"Buffer B","description":"","type":"buffer"}]}