{"ver":"0.1","info":{"id":"3ddGD8","date":"1568380364","viewed":188,"name":"Floaty Cell","username":"MasterQ32","description":"A simpe shader for the outline of a cell","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["animated","worm","outline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst vec3 wormColor = vec3(0.4, 0.9, 1.0);\n\n\nfloat sdf(vec2 pos, float r)\n{\n    return length(pos) - r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = 2.0 * uv - 1.0;\n    \n    uv.x *= (iResolution.x / iResolution.y);\n\n    vec4 bg = max(texture(iChannel0, 0.5 * uv + vec2(0.03 * iTime, -0.01 * iTime)).rbba,\n        \ttexture(iChannel0, 0.5 * uv + vec2(0.03 * iTime, 0.01 * iTime)).brba);\n    \n    \n    bg = texture(iChannel1, bg.xy);\n    bg.rgb = pow(bg.rgb, vec3(2.0));\n    \n    bg.rgb = mix(vec3(0.1, 0.1, 0.4), vec3(0.3, 0.4, 0.9), bg.r);\n    \n    \n    vec3[] worm = vec3[](\n    \tvec3(-0.4, 0.0, 0.25),\n        vec3(-0.2, 0.0, 0.25),\n        vec3( 0.0, 0.0, 0.25),\n        vec3( 0.2, 0.0, 0.25),\n        vec3( 0.4, 0.0, 0.25)\n    );\n    \n    for(int i = 0; i < worm.length(); i++)\n    {\n        worm[i].x *= 1.0 + 0.2 * cos(iTime);\n        worm[i].y += 0.3 * sin(iTime + worm[i].x);\n    }\n    \n    float d = 10000.0;\n    for(int i = 0; i < worm.length(); i++)\n    {\n        d = min(d, sdf(worm[i].xy - uv, worm[i].z)); \n    }\n    vec4 wc;\n    if(d < 0.0) {\n    \twc = vec4(wormColor, pow(clamp(1.0 + 10.0 * d, 0.0, 1.0), 2.0));\n    } else {\n        wc = vec4(wormColor, 1.0 - 50.0 * d);\n    }\n    wc.a = clamp(wc.a, 0.0, 1.0);\n    \n    \n    // Output to screen\n    fragColor = mix(bg, wc, wc.a);\n}","name":"Image","description":"","type":"image"}]}