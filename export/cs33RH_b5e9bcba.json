{"ver":"0.1","info":{"id":"cs33RH","date":"1676940694","viewed":233,"name":"Valkyrie Camera Rainbow Six","username":"ChutneyPot","description":"Camera filter inspired by Valkyrie's camera gadget from Rainbow Six.","likes":3,"published":1,"flags":2,"usePreview":1,"tags":["camera","rainbowsix","siege","valkyrie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Valkyrie Camera Rainbow Six, February 2023\n// by Tito Morab - ChutneyPot\n// https://www.shadertoy.com/view/cs33RH\n//--------------------------------------------------------------------------\n#define SC vec4(0.0, 0.1, 0.3, 0.3)\n#define BC vec4(0.0, 0.2, 1.0, 1.0)\n#define VC vec4(0.0, 0.4, 0.7, 1.0)\n#define NC vec4(0.5, 0.5, 0.5, 0.3)\n#define UC vec4(1.0, 1.0, 1.0, 1.0)\n\n#define GL 0.4\n#define LD 1.5\n\n#define BL 3.0 / iResolution.y\n#define ss(a, b, x) smoothstep(a, b, x)\n#define st(x) clamp(x, 0.0, 1.0)\n\nfloat c(in vec2 uv, float r)\n{\n    return length(uv) - r;\n}\n\nfloat b(in vec2 uv, in vec2 s)\n{\n    vec2 d = abs(uv) - s;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n\nvec2 rt(in vec2 uv, float d)\n{\n    float rd = radians(d);\n    return uv * mat2(cos(rd), sin(rd), -sin(rd), cos(rd));\n}\n\nfloat rn(in vec2 uv)\n{\n    return fract(sin(uv.x * 123.0 + uv.y * 456.0) * 789.0);\n}\n\nfloat vg(in vec2 uv)\n{  \n    float v = uv.x * uv.y * (1.0 - uv.x) * (1.0 - uv.y);\n    return st(pow(v * 30.0, 0.1));\n}\n\nvec4 vc(in vec2 uv)\n{\n    float sl = step(0.5, fract(uv.y * 420.0 + iTime * 4.2));;\n    \n    float bt1 = ss(1.0, 1.0 - BL, c(uv - vec2(0.5, 6.95), 5.0));\n    float bt2 = ss(1.0, 1.0 - BL, c(uv - vec2(0.5, 6.955), 5.0));\n    \n    uv.y = 1.0 - uv.y;\n    float bb1 = ss(1.0, 1.0 - BL, c(uv - vec2(0.5, 6.95), 5.0));\n    float bb2 = ss(1.0, 1.0 - BL, c(uv - vec2(0.5, 6.955), 5.0));\n       \n    vec4 col = vec4(0);\n    col = mix(col, SC, sl);\n    col = mix(col, BC, max(bt1 - bt2, bb1 - bb2));\n    col = mix(VC, col, vg(uv));\n    return col;\n}\n\nvec4 ld(in vec2 uv)\n{    \n    float t = mod(iTime, 60.0);\n    \n    vec4 k = vec4(rn(uv), rn(uv + 2.1), rn(uv + 1.0), 0.0);\n    k = k * round(rn(uv + 2.2 + step(fract(t), 0.5)) - 0.499);\n    \n    float puo = ss(0.0, 0.0 - BL, b(uv - 0.5, vec2(0.2, 0.1)));\n    float pui = ss(0.0, 0.0 - BL, b(uv - 0.5, vec2(0.195, 0.09)));\n    float lbo = ss(0.0, 0.0 - BL, b(uv - 0.5, vec2(0.15, 0.01)));\n    float lbi = ss(0.0, 0.0 - BL, b(uv - 0.5, vec2(0.149, 0.009)));\n    float lb = ss(0.0, 0.0 - BL, b(uv - vec2(0.5, 0.5), vec2(mix(0.0, 0.15, st(t / LD)), 0.008)));\n    \n    uv += vec2(0.3, 0.4);\n    uv *= 15.0;\n    uv = round(uv);\n    uv /= 15.0;\n    \n    float lg = mix(t, 0.0, st(t / GL));\n    float gf = round(rn(uv + lg) - mix(0.5, 0.1, st(t / LD))) * 0.3;    \n    float l = mix(gf, (puo - pui) + (lbo - lbi) + lb, puo);\n       \n    return st(k + l);\n}\n\nvec4 ui(in vec2 uv)\n{  \n    uv.y -= 0.5;\n    float hl = ss(0.0, 0.0 - BL, b(abs(uv - vec2(0.06, 0.0)) - vec2(0.0065, 0.349), vec2(0.005, 0.004)));\n    float hr = ss(0.0, 0.0 - BL, b(abs(uv - vec2(0.94, 0.0)) - vec2(0.0065, 0.349), vec2(0.005, 0.004)));\n    \n    uv.x -= 0.5;\n    float nbc = ss(0.3, 0.1, b(uv - vec2(0.0, 0.4), vec2(0.03, 0.1)));\n    float nbe = ss(0.0, 0.0 - BL, b(uv - vec2(0.0, 0.4), vec2(0.34, 0.025)));\n    float nb = nbe * nbc;\n    \n    vec2 suv = vec2(uv.x + sin(iTime * 0.2) * 0.12, uv.y);\n    suv.x = abs(suv.x);\n    float nm1 = ss(0.0, 0.0 - BL, b(suv - vec2(0.075, 0.414), vec2(0.0025, 0.006)));\n    float nm2 = ss(0.0, 0.0 - BL, b(suv - vec2(0.2, 0.414), vec2(0.0025, 0.006)));\n    float nm3 = ss(0.0, 0.0 - BL, b(suv - vec2(0.35, 0.414), vec2(0.0025, 0.006)));\n    \n    uv.x = abs(uv.x);\n    float v = ss(0.0, 0.0 - BL, b(uv - vec2(0.44, 0.0), vec2(0.003, 0.35)));\n    \n    vec2 pq = vec2(uv.x * iResolution.x / iResolution.y, uv.y);\n    float pnc = ss(0.01, 0.0 - BL, c(pq - vec2(0.2, -0.33), 0.05));\n    float ao = ss(0.0, 0.0 - BL, b(rt(pq - vec2(0.185, -0.33), 45.0), vec2(0.03, 0.03)));\n    float ai = ss(0.0, 0.0 - BL, b(rt(pq - vec2(0.185, -0.33), 45.0), vec2(0.012, 0.012)));\n    float ac = ss(0.0, 0.0 - BL, b(pq - vec2(0.16, -0.33), vec2(0.032, 0.045)));\n    float a = ao - ai;\n    \n    uv.y = abs(uv.y);\n    float ch = ss(0.0, 0.0 - BL, b(uv - 0.25, vec2(0.013, 0.004)));\n    float cv = ss(0.0, 0.0 - BL, b(uv - 0.25, vec2(0.003, 0.02)));\n    \n    vec4 col = vec4(0.0);\n    col = mix(col, UC, hl + hr + v + ch + cv);\n    col = mix(col, NC, pnc + nb);\n    col = mix(col, UC, a * (pnc - (ac * pnc)));\n    col = mix(col, UC, (nm1 + nm2 + nm3) * nbe);\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n        \n    vec4 vc = vc(uv);\n    vec4 ui = ui(uv);\n    vec4 ld = ld(uv);\n    \n    float t = mod(iTime, 60.0);\n    \n    vec4 col = vec4(pow(texture(iChannel0, uv).rgb, vec3(2.2)), 2.0);    \n    col = mix(col, ui, ui.w);\n    col = mix(col, vc, vc.w);\n    col = mix(ld, col, step(2.0, t));\n    \n    fragColor = pow(col, vec4(0.4545));\n}","name":"Image","description":"","type":"image"}]}