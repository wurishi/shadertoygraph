{"ver":"0.1","info":{"id":"fdKczm","date":"1654625685","viewed":223,"name":"Broken video filter","username":"Envy24","description":"Just some useless filter, nothing interesting.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["distortion","filter","broken","useless","nonlinear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define READ_PIXEL(SC) (TEX0(TO_TEX_COORDS(SC)))\n\nvec2 broken_video_filter(in vec2 SC, float order)\n{\n    int r = int(READ_PIXEL(SC).b * (order * order - 1.0));\n    int y = r / int(order);\n    int x = r % int(order);\n    \n    y -= y>>1; x -= x>>1;\n    \n    return SC + vec2(x, y);\n}\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 P = SC;\n    \n    float order = LMB_IS_HOLD ?\n        NMY * 100. :\n        30.0;\n    \n    float num_of_iterations = 0.;\n    transition(iFrame, 300, num_of_iterations);\n    \n    for (int i = 0, e = max(1, int(num_of_iterations) & 7); i < e; ++i)\n    {\n        P = broken_video_filter(P, order);\n    }\n\n    O = READ_PIXEL(P);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R                           iResolution\n#define TO_TEX_COORDS(SC)         ( (SC) / (R.xy) )                  // in range x=[0.0; 1.0], y=[0.0; 1.0]\n#define TEX0(TC)                  ( texture(iChannel0, (TC)) )\n#define NMY                       ( iMouse.y / R.y )                 // in range [0.0; 1.0]\n#define LMB_IS_HOLD               ( iMouse.z > 0.0 )\n\n/* Every num_of_frames returns true \nand number of detected transitions. */\nbool transition(\n    in int frame,\n    in int num_of_frames,\n    inout float quotent)\n{\n    // Convert to float.\n    float f = float(frame);\n    float inv = 1.0 / float(num_of_frames);\n    \n    // Calculate previous and current quotents.\n    float prev = floor(f * inv);\n    quotent = floor((f - 1.0) * inv);\n    \n    return quotent < prev;\n}","name":"Common","description":"","type":"common"}]}