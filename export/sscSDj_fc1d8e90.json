{"ver":"0.1","info":{"id":"sscSDj","date":"1633954152","viewed":52,"name":"badbeafHash","username":"Envy24","description":"just some hash","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","hash","badbeaf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n    Returns hash in range [0; UINT32_MAX].\n*/\nuint badbeafHash_original(uint x, uint enthropy)\n{\n    uint beaf = 0xbeafbadbu;\n    uint bad = 0xbadbeafbu;\n    uint seed = enthropy ^ ((bad & 0xbeafbeafu) + (beaf | 0x0badbadbu));\n\n    uint L = x + (x * (x & 85u)) ^ (bad & 0x0000ffffu);\n    uint R = x - (x * (x & 21760u)) ^ (beaf & 0xffff0000u);\n\n    return seed + (L | R) * seed;\n}\n\n/* \n    Returns hash in range [0; UINT32_MAX].\n*/\nuint badbeafHash(uint x, uint seed)\n{\n    // Variants.\n    //return (((x * (x & 85u)) | (x * (x & 21760u)) ) ^ 0xbeafeafbu) * (seed ^ 0x7a3b6586u);\n    //return ((x * ((x & 85u) | (x & 21760u)) ) ^ 0xbeafeafbu) * (seed ^ 0x7a3b6586u);\n    //return (x * ((x & 85u) | (x & 21760u)) ) * (seed ^ 0xc4948f7du);\n    //return (x * ((x & 9386u) | (x & 43592u)) ) * (seed ^ 0xc4948f7du);\n    //return (x * ((x & 9386u) | (x & 43592u)) ) * (seed ^ 0xc4948f7du);\n    return (x * ((x & 9386u) | (x & 43592u)) ) * (seed ^ 0xc4948f7du) * x;\n}\n\n/* \n    Returns hash in range [0.; 1.].\n*/\nfloat badbeafHashf(uint x, uint seed)\n{\n    // Variants.\n    //return (((x * (x & 85u)) | (x * (x & 21760u)) ) ^ 0xbeafeafbu) * (seed ^ 0x7a3b6586u);\n    //return ((x * ((x & 85u) | (x & 21760u)) ) ^ 0xbeafeafbu) * (seed ^ 0x7a3b6586u);\n    //return (x * ((x & 85u) | (x & 21760u)) ) * (seed ^ 0xc4948f7du);\n    //return (x * ((x & 9386u) | (x & 43592u)) ) * (seed ^ 0xc4948f7du);\n    //return (x * ((x & 9386u) | (x & 43592u)) ) * (seed ^ 0xc4948f7du);\n    return float((x * ((x & 9386u) | (x & 43592u)) ) * (seed ^ 0xc4948f7du) * x) * 2.3283064370807974e-10;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 P )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = P/iResolution.xy;\n    \n    uint v = uint(P.x * 800.0 + P.y);\n    uint seed = uint(iTime);\n    \n    /* Feedback test *\n    uint h = badbeafHash(v, seed);\n    for (uint r = 0u; r < 1u; ++r) { h = badbeafHash(h, r); }\n    float gray = float(h) * 2.3283064370807974e-10;\n    /* Feedback test */\n    \n    float gray = badbeafHashf(v, seed);\n\n    // Output to screen\n    fragColor = vec4(vec3(gray),1.0);\n}","name":"Image","description":"","type":"image"}]}