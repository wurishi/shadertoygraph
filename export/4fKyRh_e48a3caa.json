{"ver":"0.1","info":{"id":"4fKyRh","date":"1731476324","viewed":109,"name":"The eye of Sauron","username":"rulerofcakes","description":"Following tutorials by iq\nhttps://www.shadertoy.com/view/lsfGRr\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","fbm","eye"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Credits go to iq\n// Original: https://www.shadertoy.com/view/lsfGRr\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec2 x )\n{\n    vec2 i = floor(x);\n    vec2 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = i.x + i.y*57.0;\n\n    return mix(mix( hash(n+ 0.0), hash(n+ 1.0),f.x),\n               mix( hash(n+57.0), hash(n+58.0),f.x),f.y);\n}\n\n// Fractional Brownian Motion\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n    f += 0.50000*noise( p ); p = m*p*2.02;\n    f += 0.25000*noise( p ); p = m*p*2.03;\n    f += 0.12500*noise( p ); p = m*p*2.01;\n    f += 0.06250*noise( p ); p = m*p*2.04;\n    f += 0.03125*noise( p );\n    return f/0.984375;\n}\n\nfloat length2( vec2 p )\n{\n    vec2 q = p*p*p*p;\n    return pow( q.x + q.y, 1.0/4.0 );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // remap coordinates to [-1,1] range\n    vec2 p = -1. + 2.* fragCoord/iResolution.xy;\n    \n    // fix aspect ratio\n    p.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(1.);\n    \n    float r = sqrt(dot(p,p)); // distance to center of screen\n    float a = atan(p.y,p.x); \n    \n     a += 0.05*fbm(15.*p);\n    \n    if (r < 0.8) \n    {\n        col = vec3(0.8,0.6,0.1);\n        float f = fbm(5.*p);\n        col = mix(col, vec3(0.9,0.3,0.2),f);\n        \n        f = 1. - smoothstep(0.2,0.5,r);\n        col = mix(col,vec3(0.9,0.2,0.05),f);\n        \n        f = smoothstep(0.3,1.0,fbm(vec2(5.*r, 20.*a)));\n        col = mix(col,vec3(1.0),f);\n        \n        f = smoothstep(0.4,0.9,fbm(vec2(10.*r,15.*a)));\n        col*=1.-f;\n        \n        f = smoothstep(0.5,0.8,r);\n        col *= 1.0-0.5*f;\n        \n        f = smoothstep(0.2,0.3,r);\n        col*=f;\n        \n        f = 1.- smoothstep(0.,0.5,length(p-vec2(0.24,0.2)));\n        col+=vec3(1.,0.9,0.8)*f*0.9;\n        \n        f = smoothstep(0.75,0.8,r);\n        col = mix(col,vec3(1.),f);\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}