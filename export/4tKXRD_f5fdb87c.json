{"ver":"0.1","info":{"id":"4tKXRD","date":"1483330875","viewed":873,"name":"Radial Segments","username":"cacheflowe","description":"Trying out more radial mod logic for concentric layout. Also playing with color fade.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["blackandwhite","polar","dazzle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.14159265358\n#define TWO_PI 6.28318530718\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime * 4.;\t\t\t\t\t\t\t\t\t// adjust time\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\t// center coordinates\n    float radsPercent = atan(uv.x, uv.y) / TWO_PI;           \t\t// get angle to center\n    float dist = length(uv) * 5.; // distance(uv, center);   \t\t// multiply radius to achieve smaller rings\n    float ringSegments = 1. + floor(dist * 4.);\t\t\t\t \t\t// number of ring segments depends on radius\n    if(mod(ringSegments, 2.) == 0.) time = -time;            \t\t// reverse time for even-numbered rings\n    time *= ringSegments * 0.2;                              \t\t// increase time/spin moving out from center\n    time = 0.02 * sin(time);\t\t\t\t\t\t\t\t \t\t// remap time into an oscillation\n    float ringRadsOffset = 0.; // 6. * sin(ringSegments);    \t\t// possible unique offset per ring\n    radsPercent = mod(time + radsPercent + ringRadsOffset, 1.); \t// rotate individual rings\n    if(mod(ringSegments, 2.) == 1.) ringSegments++; \t\t\t\t// make sure we have even number of segments\n    float segment = radsPercent * ringSegments;\t\t\t\t\t\t// progress around circle\n    float segmentNumber = floor(segment);\t\t\t\t\t\t\t// iterate over ring segments - get segment number\n    float colFade = pow(fract(segment), 10.);\t\t\t\t\t\t// go from black to white on a curve at the end\n    vec3 col = vec3(colFade);\t\t\t\t\t\t\t\t\t\t// default to black\n    if(mod(segmentNumber, 2.) == 0.) col = vec3(1. - colFade);\t\t// color every other segment white\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}