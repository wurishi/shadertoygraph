{"ver":"0.1","info":{"id":"43scRn","date":"1725737993","viewed":66,"name":"Polar truchet - filled mushroom","username":"Elsio","description":".","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["mushroom","champignon","cogumelo"],"hasliked":0,"parentid":"lcBBDc","parentname":"Polar truchet"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SmoothBump(hi, lo, w, x) \\\n    smoothstep(w, -w, abs(x - (hi + lo) / 2.) - (hi - lo) / 2.) \n\n#define h21(p) fract(sin(dot(p, vec2(12.34,26.534))) * 987.23)\n#define r iResolution.xy\n#define t iTime\n#define pi acos(-1.)\n#define TAU (2.* pi)\n\nfloat truchet(vec2 p, bool coin1, bool coin2){\n    p.y *= coin1 ? 1. : -1.;\n    \n    float a = SmoothBump(4., 1.5, .05, acos(cos(t * .3))) * .1,\n          d = smoothstep(.4, .6, \n                  min(\n                     length(p + .5), \n                     length(p - .5)\n                  ) - a\n              );\n    \n    return coin1 ^^ coin2 ?  1. - d :  d;\n}\n            \nvoid mainImage(out vec4 o, vec2 u) {\n    float T = SmoothBump(4., 2.5, .4, acos(cos(t * .5)));\n          \n    u = 4. * (u - r / 2.) / r.y \n            + vec2(mix(0., 5., T), 0);\n            \n    u = mix(\n            vec2(\n                log(length(u)), \n                atan(u.y, u.x)\n            ), u,\n            T\n        );\n    \n    u = 12. * fract((u - t * .5) / TAU); \n        \n    vec2 q = floor(u) / 2.;\n         u = fract(u) - .5;\n    \n    bool coin1 = h21(q) < .5,\n         coin2 = fract(q.y + q.x) * 2. < .5;\n    \n    o = smoothstep(30. / r.y, .0, \n               truchet(u, coin1, coin2)\n           )  * vec4(.75) + .25;\n    \n    if(iMouse.z > 0.)\n        T = smoothstep(30. / r.y, .0, max(abs(u.x), abs(u.y)) - .4),\n        o = mix(o, vec4(T), 1. - T);\n}\n","name":"Image","description":"","type":"image"}]}