{"ver":"0.1","info":{"id":"Dd2SRK","date":"1670533578","viewed":83,"name":"sound shader abbabaabbaababba","username":"3759guy","description":"sacred music","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\nfloat end = 171.;\nfloat at = mod(time,4.);\nat=mod(at+3.,at);\nat=mod(at+6.,at);\nat=at/7.;\nat=at+mod(at,3.141);\nat=at-mod(at,0.618);\n    return vec2( sin(6.2831*end*at)*exp(-3.) );\n}","name":"Sound","description":"","type":"sound"}]}