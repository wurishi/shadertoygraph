{"ver":"0.1","info":{"id":"ssS3zm","date":"1643912379","viewed":40,"name":"Complex roots practice 3","username":"shahidgulzar","description":"Complex roots practice 3\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["practice3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// See also:\n//\n// Input - Keyboard    : https://www.shadertoy.com/view/lsXGzf\n// Input - Microphone  : https://www.shadertoy.com/view/llSGDh\n// Input - Mouse       : https://www.shadertoy.com/view/Mss3zH\n// Input - Sound       : https://www.shadertoy.com/view/Xds3Rr\n// Input - SoundCloud  : https://www.shadertoy.com/view/MsdGzn\n// Input - Time        : https://www.shadertoy.com/view/lsXGz8\n// Input - TimeDelta   : https://www.shadertoy.com/view/lsKGWV\n// Inout - 3D Texture  : https://www.shadertoy.com/view/4llcR4\n\n\nvec2 cplx_mult(vec2 z, vec2 w)\n{\n    //               ac - bd            ad + bc        \n    return vec2(z.x*w.x - z.y*w.y, z.x*w.y + z.y*w.x);\n}\n\nvec2 cplx_div(vec2 z, vec2 w)\n{\n    return cplx_mult(z, vec2(w.x,-w.y)) / (w.x*w.x + w.y*w.y);\n}\n\nvec2 f(vec2 z)\n{\n    return cplx_mult(z,cplx_mult(z,z)) - cplx_mult(z,z) + z - vec2(1,0);\n}\n\nvec2 df(vec2 z)\n{\n    return 3.0*cplx_mult(z,z) - 2.0*z + vec2(1,0);\n}\n\nvec2 View(vec2 pixel)\n{\n    // Image rectangle corners are touching unit circle\n    vec2 pn = (2.*pixel-iResolution.xy)/length(iResolution.xy);\n    return (3.+sin(iTime))*pn;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 z = View(fragCoord);\n    vec3 col = vec3(0);\n\n    vec2 x = z;\n    int i=0;\n    for(int i=0; i<10; ++i)\n    {\n        x = x - cplx_div(f(x),df(x));\n        if(distance(x,vec2(+1,0))<0.01) break;\n        if(distance(x,vec2(0,+1))<0.01) break;\n        if(distance(x,vec2(0,-1))<0.01) break;\n    }\n    z = x;\n    \n    float gray = 1.-float(i)/10.;\n    \n    if(distance(z,vec2(+1,0))<0.01) col = vec3(gray,0,0);\n    if(distance(z,vec2(0,+1))<0.01) col = vec3(0,gray,0);\n    if(distance(z,vec2(0,-1))<0.01) col = vec3(0,0,gray);\n    \n\t//vec3 col = vec3(1., df2(p)/15.0);\n\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}