{"ver":"0.1","info":{"id":"7ttyWj","date":"1660584122","viewed":101,"name":"Nice Gemstone","username":"TimurAB","description":"colorful stone procedural material using surface coordinates and refractions","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d","rainbow","stone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));\n}\nfloat getDist (vec3 p, vec3 dim) {\n    float k0 = length(p/dim);\n    return k0*(k0-1.0)/length(p/(dim*dim));\n}\nvec3 getNorm (vec3 p, vec3 dim) {\n   return normalize(getDist(p, dim) - vec3(\n\t\tgetDist(p - vec3(0.01,0,0),dim),\n\t\tgetDist(p - vec3(0,0.01,0),dim),\n\t\tgetDist(p - vec3(0,0,0.01),dim)\n\t));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 _mouse = iMouse.xy / iResolution.xy - .5;\n    _mouse *= 4.;\n    vec2 uv = (fragCoord/iResolution.xy) * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n    vec3 col = vec3(.3, .6, .9);\n    vec3 cam = vec3(.0, .0, -1.);\n    vec3 dir = normalize(vec3(uv, 1.)), point;\n    cam.yz *= rotate2d(_mouse.y);\n    dir.yz *= rotate2d(_mouse.y);\n    cam.xz *= rotate2d(_mouse.x);\n    dir.xz *= rotate2d(_mouse.x);\n    vec3 dimm = vec3(.4,.5,.25);\n    float d = 0., total = 0.;\n    for(int i = 0; i < 100; i ++) {\n        point = cam + total * dir;\n        d = getDist(point, dimm);\n        total += d;\n        if (d < 0.01 || total > 50.0)\n            break;\n    }\n    if (total < 50.0) {\n        point = cam + dir * total;\n        vec3 normal = getNorm(point, dimm);\n        float F = dot(normal, -dir);\n        F = smoothstep(.9, -.4, F);\n        float s = .1;\n        vec3 rd = refract(dir, normal, F), p;\n        p = fract(.5 + .5 * (point + rd * s));\n        col.r = texture(iChannel0, p.xy).r;\n        col.g = texture(iChannel0, p.xz).r;\n        col.b = texture(iChannel0, p.yz).r;\n\n        rd = reflect(rd, normalize(col - .5));\n        p += rd * .2 * F;\n        col.r = texture(iChannel0, p.xz).r;\n        col.g = texture(iChannel0, p.xy).r;\n        col.b = texture(iChannel0, p.zy).r;\n        col = mix(col, vec3(1), F);\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}