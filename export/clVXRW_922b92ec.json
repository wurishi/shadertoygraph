{"ver":"0.1","info":{"id":"clVXRW","date":"1685974706","viewed":56,"name":"First ever shader by Jonhcar","username":"jonhcar","description":"This is my first ever shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dot2( in vec2 v ) { return dot(v,v); }\nvec3 palette( float t)\n{\n    vec3 a = vec3(0.898, 0.000, 0.188);\n    vec3 b = vec3(0.000, 0.500, 0.448);\n    vec3 c = vec3(0.520, 0.800, 0.520);\n    vec3 d = vec3(-0.430, -0.397, -0.083);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord *2. - iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalCol = vec3(0.0);\n    \n    for (float i = 0.0; i < 1.75; i++){ \n        uv = fract(uv *2.) - 0.5;\n        uv.y += 0.5;\n\n        float d = sdHeart(uv);\n        vec3 col = palette(sdHeart(uv0) + i*0.2 + iTime);\n\n        d = sin(d*4.5 + iTime*1.5)/4.5;\n        d = abs(d);\n        d = pow(0.015 / d, 1.5);\n        finalCol = col * d;\n    }\n    // Output to screen\n    fragColor = vec4(finalCol,1.0);\n}","name":"Image","description":"","type":"image"}]}