{"ver":"0.1","info":{"id":"Ws3fDf","date":"1606119018","viewed":54,"name":"Graph of Functions","username":"zhengzhehui","description":"Graph of functions","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(vec2 st, float y)\n{\n    return smoothstep(y-0.02, y, st.y)-smoothstep(y, y+0.02, st.y);\n    //1.如果st落在函数y=f(x)上方，则返回0~1之间的值，否则返回0\n    //2.如果st落在函数y=f(x)下方，则返回0~1之间的值，否则返回0\n    //3.1和2相减，使得只有落在y=f(x)附近的点才能返回0~1之间的值\n}    \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = iTime;\n    float p = sin(t)*3.0+3.5;//0.5<p<6.5\n    \n    float y = pow(uv.x,p); //y=x^p\n    float z = sin(uv.x*15.0-t)/4.0+0.5;\n    \n    vec3 color;\n    float line_y = plot(uv,y);\n    float line_z = plot(uv,z);\n    color += line_y;\n\tcolor += line_z;\n    if(line_y > 0.3 && line_z > 0.3)  //绘制两线交点\n    {\n        color = vec3(0.,0.5,0.5);\n    }    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}