{"ver":"0.1","info":{"id":"lflSz7","date":"1705089769","viewed":60,"name":"My First shader was taken","username":"bobcatnoah","description":"My First Shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["waves","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 point, vec2 center, float r) {\n    return (distance(point, center) - r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (origin in center)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 rotatedUV = vec2(uv.x*cos(iTime)-uv.y*sin(iTime), uv.y*cos(iTime)+uv.x*sin(iTime));\n    uv -= 0.5;\n    uv.y *= iResolution.y/iResolution.x;\n    \n    // Circle two/big background waves\n    float distance2 = circle(uv, vec2(-0.5, 0.0), 0.25);\n    vec3 col = vec3((sin(60.0*distance2+iTime*-2.0) + 1.0)/2.0) * vec3(rotatedUV,1.0);\n    \n    \n    // Circle one/small background waves\n    vec2 center = vec2(0.1,0.0);\n    float radius = 0.15;\n    float distance = circle(uv, center, radius);\n    col += vec3((sin(10000.0*distance+iTime*-100.0) + 1.0)/2.0) * vec3(rotatedUV,1.0);\n    \n    // Circle two\n    \n    col = smoothstep(0.0, 0.05, distance2) * col;\n    \n    // Circle one\n    \n    col = smoothstep(0.0, 0.05, distance) * col;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}