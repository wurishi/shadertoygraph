{"ver":"0.1","info":{"id":"fdVfR3","date":"1658613025","viewed":200,"name":"liquid nightmare swirl","username":"uiop","description":"some fake fluid sim","likes":8,"published":1,"flags":32,"usePreview":1,"tags":["simulation","fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col;\n    vec4 col2;\n    vec4 raw = texture(iChannel0, uv);\n    vec4 t = texelFetch(iChannel0, ivec2(fragCoord) + ivec2(1,0),0);\n    vec4 u = texelFetch(iChannel0, ivec2(fragCoord) + ivec2(-1,0),0);\n vec4 v = texelFetch(iChannel0, ivec2(fragCoord) + ivec2(0,1),0);\n    vec4 w = texelFetch(iChannel0, ivec2(fragCoord) + ivec2(0,-1),0);\n\n    vec3 dir = vec3(0,0,1.3);\n    col = raw*0.9+0.3;\n    dir.r = (t.b-u.b)*20.;\n    dir.g = (v.b-w.b)*20.;\n    //col.b = 1.-col.b * 1.5;\n    //if(length(vec2(dir) - vec2(-0.1,-0.1))<0.1){\n      //  col += texture(iChannel1,dir);\n    //}\n    //col.r = 0.0;\n    //col.g = 0.0;\n    //col.b = 0.0;\n    col = clamp(col,0.,1.);\n            col += texture(iChannel1,dir);\n    col = clamp(col,0.,1.);\n\n    fragColor =col;\n    //fragColor =  texture(iChannel1, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 tf(ivec2 p, int i, int j){\n    return texelFetch(iChannel0,p+ivec2(i,j),0);\n}\nvec4 state(ivec2 p){\n    //vec4 colNow = vec4(0,0,0,0);\n    vec4 r = tf(p,0,0);\n    vec4 colNow;\n    float d0 = 0.6;\n    int i0 = int(r.x * d0 + 1.)-1;\n    int i1 = i0 + 1;\n    int j0 = int(r.y * d0 + 1.)-1;\n    int j1 = j0 + 1;\n    float s1 = r.x*d0 - float(i0);\n    float s0 = 1.- s1;\n    float t1 = r.y*d0 - float(j0);\n    float t0 = 1. - t1;\n    colNow = t0*(s0 * tf(p,i0,j0) + s1 * tf(p,i1,j0)) +\n        t1 *(s0 * tf(p,i0,j1) + s1 * tf(p,i1,j1));\n    \n    \n    \n    //for(int i = 0; i < 2; i++){\n      //  for(int j = 0; j < 2; j++){\n        //    colNow += tf(p, tx + i, ty + j) * 0.1 * abs((r.x*0.1 - float(tx - i)) - 1.) * abs((r.y*0.1- float(ty - j)) - 1.);\n       // }\n   // }\n    \n    \n    \n    for(int i = -4; i < 5; i++){\n        for(int j = -4; j < 5; j++){\n            //colNow += texelFetch(iChannel0, p + ivec2(i,j),0).rgba;\n            \n            \n            \n                //int tx = floor()\n                vec4 l = tf(p,i,j);\n                float infl = -float(i) * l.x + -float(j) * l.y;\n                colNow += infl * l * -0.0014; // special number wave dies off\n                float d = (l.z - r.z)*-0.001;  // wave whatever\n                colNow += vec4(d*float(i),d*float(j),-d*0.2,0);// make waves bigger\n            \n            \n        }\n    }\n    if(r.z > 0.){\n        colNow+= vec4(0,0,-0.0001,0);\n         \n    }\n    //colNow+= vec4(sin(colNow.y*60.)*0.15,0,0,0);\n    \n    \n        if(p.x < 1 || p.y < 1 || p.x > int(iResolution.x) - 2 || p.y > int(iResolution.y) -2){\n    //return vec4(0,0,0.3,0);\n    }\n    colNow.x = clamp(colNow.x*1.,-0.95,0.95);\n    colNow.y = clamp(colNow.y*1.,-0.95,0.95);\n\n    colNow.z = clamp(colNow.z*1.,-20.,20.);\n\n    return colNow;\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Amount, XV, YV, Tempurature;\n    fragColor = vec4(0.1,0.0,0.0,0.0);\n    \n    vec4 col = state(ivec2(fragCoord));\n    \n     vec2 uv = fragCoord/iResolution.xy;\n    if(iFrame < 1){\n      col = texture(iChannel1, uv*0.5)*0.5-0.25;\n\n}\n    //col+= texture(iChannel2, uv);\n    \n    \n    if(length((iMouse.zw)-fragCoord)<3.){\n        col = vec4(5.*sin(iTime*5.),5.*cos(iTime*5.),5.,0);\n    }\n    for(float i = 0.; i < 3.; i++){\n    if(length(uv-vec2(0.4*sin(iTime*0.5+i*2.1) + 0.5,0.4*cos(iTime*0.5+i*2.1) + 0.5))<0.005){\n        col = vec4(1.*sin(iTime*0.5+i*2.1+0.8),1.*cos(iTime*0.5+i*2.1+0.8),0.5,0);\n    }\n    }\n  \n    fragColor = col;\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}