{"ver":"0.1","info":{"id":"sl2fzt","date":"1661464957","viewed":75,"name":"shadertoy tutorial part 2","username":"zdgra","description":"part 2","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginnings"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 sdfCircle(vec2 uv, float r, vec2 offset)\n{\n    float x = uv.x - offset.x;\n    float y = uv.y - offset.y;\n    \n    float d = length(vec2(x, y)) - r;\n    \n    // return d > 0.0 ? vec3(1) : vec3(0, 0, 1);\n    return d > 0.0 ? vec3(0) : 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // normalizing\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n\n    // vec3 col = vec3(0);\n    \n    /*\n    if (uv.x > 0.5)\n        col = vec3(1);\n    */\n    \n    // col = vec3(step(0.5, uv), 0);\n    \n    vec2 offset = vec2(sin(iTime * 2.)*0.2, cos(iTime * 2.)*0.2);\n    \n    vec3 col = sdfCircle(uv, 0.2, offset);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}