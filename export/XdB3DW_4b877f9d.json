{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// credit to iq & gopher(electron) for noise functions. a lot of junk code in here but \n// I wanted to release something :)\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453123);\n}\n\n// 3d noise function\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 mpos = vec2(iMouse.x/iResolution.x, iMouse.y/iResolution.y);\n\tvec2 center = vec2(.5,.5);\n\tfloat dcenter = distance(mpos, center);\n\tvec2 uvdiff = uv - center;\n\tvec4 col = vec4(0.0,0.0,0.0,1.0);\n\tfloat val = 0.0;\n\tfloat val2 = 0.0;\n\tfloat t = iTime+1000.;\n\tfloat t2 = iTime+2000.0 ;\n\t\n\t\tvec3 v = vec3(uvdiff.x * cos(t*.1)*5.0, uvdiff.y* sin(t*.1)*5.0/t, t/10.0);\n\t\tvec3 v2 = vec3(uvdiff.x* sin(t*.1)*5.0, uvdiff.y* cos(t*.1)*5.0, t/9.0);\n\n\t\tfloat n = noise(v);\n\t\tfloat n2 = noise(v2);\n\t\tfloat diff = abs(n - n2);\n\t\t\n\t\tif (diff < .4 + dcenter + v.z)\n\t\t{\n\t\t\tval = 1.0-diff*(n * v.z * dcenter);\n\t\t}\n\t\n\tcol = vec4(0.0, 0.0, val, 1.0);\n\t\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdB3DW","date":"1387802810","viewed":447,"name":"BlueNoise","username":"Grendor","description":"Uses 2 noise variables and gets the difference.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","plasma","blue"],"hasliked":0,"parentid":"","parentname":""}}