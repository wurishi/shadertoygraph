{"ver":"0.1","info":{"id":"csKyzh","date":"1695782971","viewed":48,"name":"Gradient Sunrise","username":"drichman","description":"A sunrise of different gradients","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize fragment coordinates\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Rotate UV coordinates with time-based rotation\n    float angle = iTime * 0.1;\n    mat2 rotation = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    uv = rotation * uv;\n    \n    // Apply UV coordinate manipulation\n    uv.x += 0.2 * sin(uv.y * 3.0 + iTime * 0.3);\n    uv.y += 0.2 * sin(uv.x * 2.0 + iTime * 0.2);\n    \n    // Create a mesmerizing gradient with random-like noise\n    vec3 gradientColor = vec3(0.5 + 0.5 * sin(uv.x + uv.y),\n                             0.5 + 0.5 * sin(uv.x - uv.y),\n                             0.5 + 0.5 * sin(uv.x * uv.y));\n    \n    // Add a random-like noise effect\n    float noiseValue = random(uv * 10.0);\n    gradientColor += noiseValue * 0.1;\n    \n    // Output the final color\n    fragColor = vec4(gradientColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}