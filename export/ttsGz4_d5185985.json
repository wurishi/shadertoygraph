{"ver":"0.1","info":{"id":"ttsGz4","date":"1555790995","viewed":61,"name":"Yet another Mandelbrot Set","username":"Ducalius","description":"Bla-bla-bla","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float mandelbrot(int maxiters, vec2 num)\n{\n    vec2 comp;\n    float temp;\n\tfor(int i = 0; i < maxiters; i++)\n    {\t\n    \ttemp = comp.x * comp.x - comp.y * comp.y + num.x;\n        comp.y = 2.0 * comp.x * comp.y + num.y;\n        comp.x = temp;\n        if(comp.x * comp.x + comp.y * comp.y > 4.0) return float(i);\n    }\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= 1.6;\n    uv.y *= 0.9;\n    vec2 mand_coords = (vec2(uv.x-1.0,uv.y-0.45))* 2.5;\n\n    // Time varying pixel color\n    float mand = mandelbrot(50,mand_coords);\n    vec3 col;\n    if(mand != 0.0)\n    {\n        col =  mand/50.0 + 0.5*cos(iTime-mand/4.0+uv.xyx+vec3(0,2,4));\n    }\n    else col = vec3(0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}