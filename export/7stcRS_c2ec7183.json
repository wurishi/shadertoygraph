{"ver":"0.1","info":{"id":"7stcRS","date":"1653659287","viewed":96,"name":"bubbles :D","username":"auurora","description":"cool bubbles","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct bubble\n{\n    vec2 pos;\n    float radius;\n};\n\nconst vec4 bubble_blue = vec4(0.017, 0.673, 0.743, 1.);\nconst vec4 bubble_pale = vec4(0.57, 0.673, 0.743, 1.);\nconst vec4 bubble_indigo = vec4(0.27, 0.073, 0.543, 1.);\n\nvec4 render_bubble(in vec2 coord, in bubble object)\n{\n    float zw = distance(coord, object.pos) / (object.radius*2.);\n    float alpha = 1.-smoothstep(0.49, 0.59, zw);\n\n    vec4 color = bubble_blue;\n    \n    color = mix(color, bubble_indigo, (5.*sqrt(distance(coord, object.pos)))/object.radius);\n    color = \n        mix(\n            color, \n            bubble_pale, \n            max(\n                (coord.y - object.pos.y) / object.radius,\n                (object.pos.y - coord.y) / object.radius\n            )\n        );\n    vec2 lw = (coord - object.pos) / object.radius;\n        \n    vec4 wlc = vec4(0.5 + 0.5*cos(iTime+(coord/iResolution.yx).xyx/0.1+vec3(atan(lw.y,lw.x),2,4)), 1.);\n    color = mix(color, wlc, (5.*sqrt(distance(coord, object.pos)))/object.radius);\n        \n    float ralpha = (\n                alpha * \n                max(\n                    smoothstep(0.,1.,zw), \n                    (coord.y - object.pos.y) / object.radius\n                )\n            );\n            \n    return vec4(color.rgb+(ralpha/2.), ralpha);\n    \n}\n\nfloat fluctuation(float r, float r2)\n{\n    return sin(10.f*r + iTime/(2.f+(r*5.f))) * (30.f + (60.f*r2));\n}\n\n\n\nfloat prand(in vec2 n)\n{\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat prand(in float modifier)\n{\n    return prand(vec2(modifier, 1.));\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(prand(ip),prand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(prand(ip+vec2(0.0,1.0)),prand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nconst vec4 water_color = vec4(0.12, 0.21, 0.613, 1.);\nconst vec4 water_color_2 = vec4(0.12, 0.41, 0.713, 1.);\n\nmat2 rmat(float w){\n    return mat2(vec2(cos(w), -sin(w)), vec2(sin(w), cos(w)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 c = (uv-(vec2(0.5, 1.)));\n    float m = atan(c.y,c.x);\n    float rayx = sin(m)*cos(m);\n    \n    fragColor = mix(water_color, water_color_2, smoothstep(0.,1.,noise(vec2(rayx*20. + iTime, 1.))));\n    \n    fragColor = mix(fragColor, vec4(0.), 1.-uv.y);\n    for (int i = 1; i < 25; ++i)\n    {\n        float bw = float(i);\n        float r1 = prand(bw);\n        float r2 = prand(bw + .21);\n        float r3 = prand(bw + .69);\n        float r4 = prand(bw + .82) + 0.1;\n        bubble w = \n            bubble(\n                vec2(\n                    r1 * iResolution.x + fluctuation(r1, r2), \n                    mod(((10.+(50.*r4))*iTime*(0.3+prand(bw+.11)*1.9)) - (r3*iResolution.y), iResolution.y + 100.) - 50.\n                ),\n                40.+(prand(bw+.91)*10.)*(iResolution.x/500.)\n            );\n            \n        vec4 c = render_bubble(fragCoord, w);\n        fragColor = vec4(mix(fragColor.rgb, c.rgb, c.a), 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}