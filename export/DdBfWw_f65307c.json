{"ver":"0.1","info":{"id":"DdBfWw","date":"1689755369","viewed":72,"name":"Pixel Grid Animation","username":"aria","description":"2D Pixel Grid animation.\n\nForked from: https://www.shadertoy.com/view/tlcGDX","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","pixel","rainbow"],"hasliked":0,"parentid":"tlcGDX","parentname":"Learning Code [02]"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int max_i = 30;\nconst int max_j = 30;\n\n#define      PI 3.14159265358979323 // mm pie\n#define     TAU 6.28318530717958647 // pi * 2\n#define HALF_PI 1.57079632679489661 // pi / 2\n\nvec3 hsv2rgb(vec3 c) {\n  // Íñigo Quílez\n  // https://www.shadertoy.com/view/MsS3Wc\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\n  rgb = rgb * rgb * (3. - 2. * rgb);\n  return c.z * mix(vec3(1.), rgb, c.y);\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat Box(vec2 uv, vec2 p, float radius, float blur){\n\n    float d = sdBox(uv - p, vec2(radius));    \n    float c = smoothstep(blur,0.,abs(d-0.001));\n   // c -= smoothstep(radius - blur, radius - 2. * blur, d);\n       \n    return c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    vec2 uv = (fragCoord - .5* iResolution.xy) / iResolution.x;\n    float c = 0.;\n    vec2 p ;\n\n\n\n    float dist = 1. / float(max_i);\n    float radius = dist;\n    float speed = -2.;\n    \n    for (int i=0; i<max_i; i++){\n            p.x = float(i) * dist -.5 + dist / 2.;\n        for (int j=0; j<max_j; j++){\n\n            p.y = float(j) * dist -.5 + dist / 2.;\n       \t\tfloat t = sin(speed * iTime + float(i) * .03);\n       \t\tradius = t * (sin(float(i/max_i)) +.5) * dist;\n\t\t\tfloat blur = 1.5/ iResolution.y;\n\n            \n            float box = Box(uv, p, radius, blur);\n            c +=box;\n        }\n     }\n    vec2 pq = vec2(atan(uv.x, uv.y) / TAU + .5, length(uv));\n    float h = pq.x - iTime * .1;\n    vec3 col = hsv2rgb(vec3(h, 1., 1.0));\n    fragColor = vec4(c * col,1.0);\n}","name":"Image","description":"","type":"image"}]}