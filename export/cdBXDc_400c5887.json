{"ver":"0.1","info":{"id":"cdBXDc","date":"1670971845","viewed":156,"name":"ChatGPT - Snow","username":"sub7","description":"ChatGPT attempts to make a snowfall shader. Looks like it didn't work.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chatgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Calculate the position of the current pixel on the screen\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Initialize the final pixel color to the background color\n    vec3 color = vec3(0, 0, 0);\n\n    // Loop through all the snowflakes\n    for (float i = 0.0; i < 10.0; i += 1.0) {\n        // Calculate the position of the snowflake based on the time and its index\n        float snowY = mod(iTime * 0.5 + i * 0.0001 + uv.y * 5.0, 1.0);\n\n        // Calculate the distance of the current pixel from the center of the snowflake\n        float distance = length(uv - vec2(0.5, snowY));\n\n        // Calculate the color of the snowflake based on its position and distance from the center\n        vec3 snowColor = mix(vec3(1), vec3(1, 1, 1), pow(snowY, 0.5) * smoothstep(0.01, 0.0, distance));\n\n        // Add the snowflake color to the final pixel color\n        color += snowColor;\n    }\n    \n    // Set the final pixel color\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}