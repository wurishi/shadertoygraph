{"ver":"0.1","info":{"id":"wdVXzc","date":"1574676383","viewed":324,"name":"floating colors: blue on green","username":"FabriceNeyret2","description":"top: isoluminance colors seem to float    ( assuming your screen gamma is correclty set ;-) ).\nbottom: not isoluminant. \npure green is perceived as 5x more luminous than blue, which ease the mostly B&W human vision shape segmentation.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["perception","isoluminance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/tdKXzc\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\n// UIT-R BT 601 def of luma https://fr.wikipedia.org/wiki/Luminance#Matri%C3%A7age\n// Y '= .299  R' + .587  G' + .114  B'\n    \n// choose G=g with same luminance than B=1:\n    float g = .114/.587;     //  ( = .195 )\n    \n// choose B=1, G=gr with same luminance than G=1:  .144 +.587*br = .587 \n    float gb = 1.- .114/.587; // ( = .805 ) \n//  float gb = iMouse.y/R.y;\n    \n    vec2 R = iResolution.xy;\n    if ( U.x-.5 == floor(R.x/2.) || U.y-.5 == floor(R.y/2.) ) { O-=O; return; } // black lines\n    U = ( 2.*U - R ) / R.y;\n    \n    float m = smoothstep(0.,6./R.y,length(U)-.5);\n    \n    if ( U.y < 0. ) gb = 0., g = 1.;\n    O = U.x < 0.\n       ? mix( vec4(0,gb,1,1), vec4(0,1,0,1), m )\n       : mix( vec4(0,0,1,1), vec4(0,g,0,1), m );\n\n    \n    O = pow( O, vec4(1./2.2) ); // gamma correction\n}","name":"Image","description":"","type":"image"}]}