{"ver":"0.1","info":{"id":"stXyW4","date":"1647998773","viewed":204,"name":"The Julia sets","username":"Bedhead","description":"Drag your mouse to find Julia sets, make it fullscreen for a higher quality image.   \n\nMost recent update: 8/27/2022 More zoomed out render and an animation plays after loading.\nReleased: 2022-03-23","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","interactive","juliasets"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//based of off my other shader:\n//https://www.shadertoy.com/view/7lXyWH\n\n\n//distance function\nfloat dist(vec2 x)\n{\n    return sqrt((x.x * x.x) + (x.y * x.y));\n}\n\n\n//lerp\nfloat lerp(float a, float b, float x)\n{\n    return x * (b - a) + a;\n}\n\n\n//function for coloring the mandelbrot set\nvec3 colorJuliaSet(vec2 c, vec2 a)\n{\n    //past z and z variables\n    vec2 z = c;\n    vec2 pastZ = c;\n    \n    //run over every iteration in this case 400 iterations\n    for(float i = 0.0; i<400.0; i++){\n        //update z\n        z.x = pastZ.x * pastZ.x - pastZ.y * pastZ.y + a.x;\n        z.y = 2.0 * pastZ.x * pastZ.y + a.y;\n        \n        \n        if(dist(z) > 2.0){\n            //simple coloring\n            return vec3(0, i/50.0, i/50.0);\n        }\n        \n        pastZ = z;\n    }\n    \n    //color inside of fractal\n    return vec3(dist(z), dist(z), dist(z));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n\n\n\n    float r = iResolution.x/iResolution.y;\n    //modified normal coordinate\n    vec2 uv = vec2(lerp(-1.0*r, 1.0*r, fragCoord.x/iResolution.x), lerp(-1.0, 1.0, fragCoord.y/iResolution.y));\n    \n    vec2 m = vec2(lerp(-1.0*r, 1.0*r, iMouse.x/iResolution.x)*1.2, lerp(-1.0, 1.0, iMouse.y/iResolution.y)*1.2);\n    \n    //thank you FabriceNeyret2\n    if(iMouse.xy == vec2(0)){\n        \n        //My animation code:\n        m = vec2(sin(iTime) * cos(iTime + sin(iTime)/3. + cos(iTime)*2.), cos(iTime));\n    }\n    \n    vec3 col = colorJuliaSet(vec2(uv.x*1.5, uv.y*1.5), m);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}