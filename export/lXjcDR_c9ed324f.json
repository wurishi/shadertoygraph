{"ver":"0.1","info":{"id":"lXjcDR","date":"1727158224","viewed":38,"name":"Posterize of quad interpolation","username":"HyperQuantum","description":"posterize gradient","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["phong","barycentric","interpolation","posterize","generalization","vertexcolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 mainfunction(vec2 uv , vec3 scattered[6], vec3 color[6]){\n\n\n    vec3 ourpoint = vec3(uv.x,uv.y,0);\n    vec3 si[6];\n    float ri[6];\n    for(int i=0;i<6;i++){\n        si[i] = scattered[i] - ourpoint;\n        ri[i] = length(si[i]);\n    }\n\n    float area[5];\n    float di[5];\n\n    float radian = acos(dot(normalize(si[1]),normalize(si[2]))) + acos(dot(normalize(si[3]),normalize(si[2])))+acos(dot(normalize(si[3]),normalize(si[4])))+acos(dot(normalize(si[1]),normalize(si[4])));\n    if(radian <= 3.1415 * 2.0f){return vec3(0);}\n    \n    for(int i=0;i<5;i++){\n        area[i] = length(cross(si[i],si[i+1]))/2.0f;\n        di[i] = dot(si[i],si[i+1]);\n        if(ri[i]<=0.0015f){\n            return color[i];\n        }\n        if(area[i]<=0.0003f && di[i]<=0.00001f){\n            return (ri[i+1]*color[i]+ri[i]*color[i+1]) / (ri[i+1] + ri[i]);\n        }\n    }\n                \n    vec3 F;\n    float W;\n    \n    for(int i=1;i<=4;i++){\n        float w;\n        if(area[i-1]!=0.0f){\n            w = w + (ri[i-1]-di[i-1]/ri[i])/area[i-1];\n        }\n        if(area[i]!=0.0f){\n            w = w + (ri[i+1]-di[i]/ri[i])/area[i];\n        }\n        F = F + w * color[i];\n        W = W + w;\n    }\n    return F/W;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 red = vec3(1,0,0);\n    vec3 orange = vec3(0.8,0.5,0);\n    vec3 azure = vec3(0,0.1,1);\n    vec3 purple = vec3(1,0,0.8);\n    vec3 green = vec3(0,1,0);\n    vec3 yellow = vec3(0.8,1,0);\n    \n    \n    vec3 RED = vec3(1,0,0);\n    vec3 GREEN = vec3(0,1,0);\n    vec3 BLUE = vec3(0,0,1);\n    vec3 WHITE = vec3(1,1,1);\n    \n    vec3 leftbottom = vec3(0.1,0.1,0);\n    vec3 lefttop = vec3(0.1,0.9,0);\n    vec3 midtop = vec3(0.5,0.9,0);\n    vec3 midbottom = vec3(0.5,0.1,0);   \n    \n    \n    vec3 p1 = leftbottom;\n    vec3 p2 = midtop;\n    vec3 pa = midbottom;\n    vec3 pb = lefttop;    \n    \n    \n    vec3 receive = mainfunction(fragCoord/iResolution.xy , \n    vec3[6](\n        p1,\n        pb,\n        p2,\n        pa,\n        p1,\n        pb\n    ),\n    //color\n    vec3[6](\n        RED,\n        GREEN,\n        BLUE,\n        WHITE,\n        RED,\n        GREEN\n    )\n    );\n    \n    float power = 2.0f;\n    float posterize = 20.0f;\n\n    // Output to screen\n    receive = ceil(receive*posterize)/posterize;\n    receive.x = pow(receive.x,power);\n    receive.y = pow(receive.y,power);\n    receive.z = pow(receive.z,power);\n\n    \n    fragColor = vec4(receive,1.0f);\n}","name":"Image","description":"","type":"image"}]}