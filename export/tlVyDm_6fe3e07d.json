{"ver":"0.1","info":{"id":"tlVyDm","date":"1611166567","viewed":50,"name":"crap Julia/Mandelbrot","username":"liggxibbler","description":"visualize julia set for C=normalized mouse position (sort of)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 256\n#define PI 3.14159265\n#define PI_3 PI / 2.0\n#define STRETCH 2.0\n\nvec2 iterate(vec2 z, vec2 c)\n{\n    return vec2(z.x * z.x - z.y * z.y + c.x, +2.0 * z.x * z.y + c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    //vec2 offset = 2.0 * vec2(/*cos(19.0*iTime/40.0)*/-.5f, sin(.5*iTime));\n    vec2 offset = STRETCH * (iMouse.xy - .5f * iResolution.xy) / iResolution.xy;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5*iResolution.xy) / 300.0;\n    vec2 uv_prev = uv;\n    vec2 uv_prevprev = uv;\n    \n    //STRETCH * (iMouse.xy - .5f * iResolution.xy) / iResolution.xy\n    \n    vec2 c = offset; // uncomment for julia\n    //vec2 c = uv; // uncomment for mandelbrot\n    \n    vec3 col = vec3(0.0f);\n    int i = 0;\n    for (i = 0; i < MAX_ITER; ++i)\n    {\n        uv = iterate(uv, c);\n        if (dot(uv, uv) >= 4.0)\n            break;\n        uv_prevprev = uv_prev;\n        uv_prev = uv;\n    }\n    \n    float j = float(i);\n    if(i < MAX_ITER)\n        //col = 1.0 - vec3(float(j)/1000.0);\n        //col = vec3(sin(PI/j), sin(j*PI_3),sin(j*PI_3));\n        col = vec3(j/float(MAX_ITER));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}