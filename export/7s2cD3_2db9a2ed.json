{"ver":"0.1","info":{"id":"7s2cD3","date":"1644258599","viewed":110,"name":"Fork SPECTRA :::.","username":"saltire","description":"function for a reasonably accurate optical spectrum","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spectrum","light","optical","rainbow","spectra"],"hasliked":0,"parentid":"fs2cD3","parentname":"SPECTRA :::."},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T iTime\n#define M iMouse.xy\n#define R iResolution.xy\n#define PI 3.1415926535897932384626433832795028841971693993751058209749445923\n\n// special quotients (was custom fixed-point LUT)\n#define q5d3   .1666666\n#define q5d6   .8333333\n#define q1d12  .0833333\n#define q1d3   .3333333\n#define q1d2   .5\n\nvec3 spectra(float x, float l) {\n    // (optional) rectangular expand\n    x = mix((x * .5) + .25, x, 1. - l);\n    \n    return vec3(\n        // RED + VIOLET-FALLOFF\n        -q1d12 * (l - 1.) * (\n        cos(PI * max(0., min(1., 12. * abs((q1d12 * l + x - q5d6) / (l + 2.))))) + 1.)\n        + q1d2 * cos(PI * min(1., (l + 3.) * abs(-q5d3 * l + x - q1d3))) + q1d2,\n\n        // GREEN, BLUE\n        q1d2 + q1d2 * cos(PI * min(\n        vec2(1.), abs(vec2(x) - vec2(q1d2, (1. - ((2. + l) / 3.) * q1d2)))\n        * vec2(3. + l)))\n    );\n}\n\nvec3 spectrum(float x, float l) {\n    l = (2. + l) / 3.;\n    vec3 rgb = .5 + .5 * cos(PI * \n        clamp(abs(2. * (vec3(x) - vec3(l * .5, .5, 1. - l * .5)) / l), 0., 1.));\n        \n    return vec3(\n        rgb.r + (1. - l) * .25 * (1. + cos(PI * \n            clamp(abs(4. * (x - 1. + l / 4.) / l), 0., 1.))), \n        rgb.gb);\n}\n\nvoid mainImage(out vec4 O, in vec2 I) {\n    vec2 uv = I / R;\n    vec2 mouse = M / R;\n    \n    vec2 v = uv.y < .25\n        ? vec2(mouse.x, 1. - clamp((mouse.y - .25) * 2., 0., 1.))\n        : (uv.y > .75 \n            ? (uv.y > .875 \n                ? vec2((1.-cos(T))*.5, 0.) // full spectrum\n                : vec2((1.-cos(T))*.5, .75)) // warm to cold, sunset/sunrise\n            : vec2(uv.x, 1. - (uv.y - .25) * 2.));\n        \n    O = vec4(spectra(v.x, v.y), 1.);\n}","name":"Image","description":"","type":"image"}]}