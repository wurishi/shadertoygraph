{"ver":"0.1","info":{"id":"tl33Wj","date":"1577566214","viewed":279,"name":"Color Wave (Practice #4)","username":"Coda_","description":"Color Wave (Practice #4)","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["wave","distortion","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define time iTime\n\nfloat cube(vec3 p, vec3 s)\n{\n   \tfloat v = 0.78; \n   \tp.xy *= mat2(cos(v),-sin(v),sin(v),cos(v)) ;\n   \tvec3 q = fract(p)*2.0 -1.0;\n\treturn length(max(abs(q)-s,0.0));\n}\n    \nfloat trace(vec3 o, vec3 r)\n{\n\tfloat t =0.0;\n    for(int i = 0; i < 100;i++)\n    {\n    \tvec3 p = o+r*t;\n        float d = cube(p-vec3(-2,0.5,0),vec3(0.01,0.05,3));\n        t += d * 0.25;         \n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\n    vec2 uv = vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n    uv -= 0.5;\n    uv /= vec2(iResolution.y/iResolution.x,1.0);\n\tuv.y *= (sin(5.0*uv.y+ time)*0.5+0.5)/5.0;\n    vec3 r = normalize(vec3(uv,1.0)); \n    r.xy*= mat2(cos(0.79),-sin(0.79),sin(0.79),cos(0.79)) ;\n    vec3 o = vec3(-0.75,0,0);\n    float t = trace(o,r);\n    \n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float fog = 1.0/(1.0+t*t*0.01);\n\n\n    fragColor = vec4(vec3(fog*col),1.0);\n}","name":"Image","description":"","type":"image"}]}