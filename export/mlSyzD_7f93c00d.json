{"ver":"0.1","info":{"id":"mlSyzD","date":"1691519498","viewed":45,"name":"Bruv the boy mandel made a brot ","username":"DaveGaming99","description":"bruh its a mandelbrot\n\nfirst two mandelbruv functions from: https://arukiap.github.io/fractals/2019/06/02/rendering-the-mandelbrot-set-with-shaders.html","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 squareImaginary(vec2 number) {\n\treturn vec2(\n\t\tnumber.x * number.x - number.y * number.y,\n\t\t2.0 * number.x * number.y\n\t);\n}\n\nfloat iterateMandelbrot(vec2 coord, float maxIterations) {\n\tvec2 z = vec2(0);\n    \n\tfor(float i = 0.0; i < maxIterations; i++){\n\t\tz = squareImaginary(z) + coord;\n        \n\t\tif(dot(z, z) > 4.0)\n            return i / maxIterations;\n\t}\n\treturn maxIterations;\n}\n\nvec2 getZoomUV(vec2 uv, vec2 center, float amount) {\n    return (uv - center) * amount + center;\n}\n\nfloat ease(float x) {\n    return sqrt(1.0 - (x-1.0)*(x-1.0));\n}\n\nfloat calcZoom(float t, float min, float max) {\n    float zoom = -ease(t) + 1.0;\n    return mix(min, max, zoom);\n}\n\nfloat calcIterations(float t) {\n    return 10.0 + t * 1250.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    vec2 scaleCenter = vec2(0.36032, 0.35469);\n    \n    float t = 0.5 + 0.5 * sin(iTime);\n    float zoom = calcZoom(t, 0.000005, 0.8);\n    \n    vec2 zoomUV = getZoomUV(uv, scaleCenter, zoom);\n    float iterations = calcIterations(t);\n    \n    float mandelValue = iterateMandelbrot(zoomUV, iterations);\n    \n    fragColor = texture(iChannel0, vec2(mandelValue, 0));\n}","name":"Image","description":"","type":"image"}]}