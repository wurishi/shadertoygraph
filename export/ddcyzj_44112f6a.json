{"ver":"0.1","info":{"id":"ddcyzj","date":"1695231979","viewed":41,"name":"07 - noise","username":"thomasfriday","description":"My seventh shader.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 p) {\n  return fract(sin(p.x * 123.45 + p.y * 6789.01) * 12345.67);  \n}\n\nfloat noise(vec2 uv, float scale, float intensity) {\n  vec2 id = floor(uv * scale);\n  vec2 pos = smoothstep(0., 1., fract(uv * scale));\n  \n  float bottomL = rand(id);\n  float bottomR = rand(id + vec2(1, 0));\n  float bottom = mix(bottomL, bottomR, pos.x);\n  \n  float topL = rand(id + vec2(0, 1));\n  float topR = rand(id + vec2(1, 1));\n  float top = mix(topL, topR, pos.x);\n  \n  return mix(bottom, top, pos.y) * intensity;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n  uv = uv * 3.;\n  \n  vec3 col = vec3(0);\n  for (float i = 1.; i <= 5.; i++) {\n    vec2 t = iTime * i / 20. * vec2(-1., 0);\n    col += noise(uv + t, pow(2., i-1.),  pow(2., -i));\n  }\n  \n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}