{"ver":"0.1","info":{"id":"ltKSzK","date":"1485123159","viewed":114,"name":"Assignment 1 Bonus","username":"IllusoryOrchestra","description":"My first assignment for Graphics/Game Programming I class. This is the bonus for the first assignment: \"Use two textures, one for black and one for white. Allow one to 'see-through' the other in a checker-board pattern.\"","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","textures","checkerboard","assignment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nAuthor: Megan Hoins\nClass: CSI-200-01\nAssignment: Assignment 1 - The Checkerboard Bonus\nDate Assigned: January 20, 2017\nDue Date: January 23, 2017 at 11:59 PM\n\nDescription:\nThis program will create a black-and-white chess style checkerboard pattern.\nThe number of rows and columns will be variable, or able to be changed by\nchanging the value of a variable defined at the top of the shader. In this bonus\nassignment, the black and white colors are replaced by textures using the iChannels.\n\nCertification of Authenticity: I certify that this is entirely my own work,\nexcept where I have given fully-documented references to the work of others.\nI understand the definition and consequences of plagiarism and acknowledge\nthat the assessor of this assignment may, for the purpose of assessing this\nassignment:\n- Reproduce this assignment and provide a copy to another member of academic\nstaff; and/or\n- Communicate a copy of this assignment to a plagiarism checking service\n(which may then retain a copy of this assignment on its database for the\npurpose of future plagiarism checking)\n\n*/\n\nconst float evenCheck = 2.0; // Create a constant variable to hold the number that will be used\n\t\t\t\t\t\t\t // to check if the current uv position is even or not\n\nfloat rows = 4.0,\n      columns = 7.0; // Create variables to hold the number of boxes in each row and column\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Create two variables to hold the current row and column of the uv\n    float currentRow = floor(uv.y * rows);\n    float currentCol = floor(uv.x * columns);\n    \n    // Depending on if the current position is even or not, change the color of the current \n    // square to the first or second texture, making sure to alternate the textures by position\n    if(mod(currentRow, evenCheck) == 0.0)\n    {\n        if(mod(currentCol, evenCheck) == 0.0)\n        {\n            // Change the current color to the first texture\n            fragColor = texture(iChannel0, uv);\n        }\n        else\n        {\n            // Change the current color to second texture\n            fragColor = texture(iChannel1, uv);\n        }\n    }\n    else if(mod(currentCol, evenCheck) == 0.0)\n    {\n        // Change the current color to second texture\n    \tfragColor = texture(iChannel1, uv);\n    }\n    else\n    {\n        // Change the current color to first texture\n    \tfragColor = texture(iChannel0, uv);\n    }\n}","name":"Image","description":"","type":"image"}]}