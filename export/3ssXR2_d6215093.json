{"ver":"0.1","info":{"id":"3ssXR2","date":"1551704901","viewed":62,"name":"Midterms_Co_Design6","username":"johannco98","description":"asd","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["asd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Spikes(float angle, float armSpeed, float armNum, float armWidth, float size)\n{\n    float spikes =  1.0 / (abs(cos(angle * 0.5 + (iTime * armSpeed)) \n                        * sin(angle * armNum )))\n        \t\t\t\t\t\t\t\t\t\t\t* armWidth +      size;\n    \n    return spikes;\n    \n}\n\nfloat GetRate(float rate)\n{\n    float s = clamp(sin(rate),0.1, 1.0);\n    return s;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    \n    vec2 shapePos = vec2((0.5 * ratio) /*plus minus something to adjust Pos*/, 0.5);\n    float dist = distance(shapePos , uv) * 2.50;\n    \n    vec3 black = vec3(0.0 , 0.0, 0.0);\n    \n    uv -= shapePos;\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = sin(4.0 * angle);\n    \n    float radius2 =  1.0 /  abs(cos(angle * 100.0 ) \n                           * sin(angle * 2.0 ))\n        \t\t\t\t\t\t\t\t\t\t* 0.5 + 0.1;\n    \n    float cross;\n\n    float rate = GetRate(15.0);\n   \n    \n    float value =  step(( radius2 * rate * rate * iTime) * 0.02, dist);\n    \n    \n        \n    // Output to screen\n    fragColor = vec4(value + vec4(vec3(0.4, 0.2, 0.2) , 1.0));\n    \n    \n}","name":"Image","description":"","type":"image"}]}