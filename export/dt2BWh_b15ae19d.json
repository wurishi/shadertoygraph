{"ver":"0.1","info":{"id":"dt2BWh","date":"1694007603","viewed":21,"name":"Uv","username":"Alex_mengistu","description":"Uv sphere for wire","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Generated by Material Maker */\n\n#define SEED_VARIATION 0.0\n\n\n\n\nfloat dot2(vec2 x) {\n\treturn dot(x, x);\n}\n\nfloat rand(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(mod(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t      dot(x, vec2(3.4562, 17.398))), vec2(3.14))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(mod(vec3(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)),\n                              dot(x, vec2(13.254, 5.867))), vec3(3.14))) * 43758.5453);\n}\n\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat param_rnd(float minimum, float maximum, float seed) {\n\treturn minimum+(maximum-minimum)*rand(vec2(seed));\n}\n\nfloat param_rndi(float minimum, float maximum, float seed) {\n\treturn floor(param_rnd(minimum, maximum + 1.0, seed));\n}\nconst float p_o38524_c = 0.290000000;\nconst float p_o20800_r = 0.400000000;\nvec2 o58455_input_sdf(vec3 p, float _seed_variation_) {\nfloat o20800_0_1_sdf3d = length((p))-p_o20800_r;\nvec2 o38524_0_1_sdf3dc = vec2(o20800_0_1_sdf3d, p_o38524_c);\n\nreturn o38524_0_1_sdf3dc;\n}\nvec2 raymarch_o58455(vec2 uv, float _seed_variation_) {\n\tvec3 ro = vec3(uv-vec2(0.5), 1.0);\n\tvec3 rd = vec3(0.0, 0.0, -1.0);\n\tfloat dO = 0.0;\n\tfloat c = 0.0;\n\tfor (int i=0; i < 100; i++) {\n\t\tvec3 p = ro + rd*dO;\n\t\tvec2 dS = o58455_input_sdf(p, _seed_variation_);\n\t\tdO += dS.x;\n\n\t\tif (dO >= 1.0) {\n\t\t\tbreak;\n\t\t} else if (abs(dS.x) < 0.0001) {\n\t\t\tc = dS.y;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn vec2(dO, c);\n}\n\nvec3 normal_o58455(vec3 p, float _seed_variation_) {\n\tif (p.z <= 0.0) {\n\t\treturn vec3(0.0, 0.5, 1.0);\n        //this is the background color\n\t}\n\n\tfloat d = o58455_input_sdf(p, _seed_variation_).x;\n\tfloat e = .001;\n\t\n\tvec3 n = d - vec3(\n\t\to58455_input_sdf(p-vec3(e, 0.0, 0.0), _seed_variation_).x,\n\t\to58455_input_sdf(p-vec3(0.0, e, 0.0), _seed_variation_).x,\n\t\to58455_input_sdf(p-vec3(0.0, 0.0, e), _seed_variation_).x);\n\t\n\treturn vec3(-1.0, -1.0, -1.0)*normalize(n);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nfloat _seed_variation_ = SEED_VARIATION;\nvec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (fragCoord-0.5*(iResolution.xy-vec2(minSize)))/minSize;\nvec2 o58455_0_d = raymarch_o58455((UV), _seed_variation_);\nvec3 o58455_1_1_rgb = vec3(0.5)+0.5*normal_o58455(vec3((UV)-vec2(0.5), 1.0-o58455_0_d.x), _seed_variation_);\nfragColor = vec4(o58455_1_1_rgb, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}