{"ver":"0.1","info":{"id":"fdBBR1","date":"1650394607","viewed":374,"name":"StarSkyGalaxy","username":"MelisaHot","description":"Sky stars\nfrom https://www.youtube.com/watch?v=rvDo9LvfoVE","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["sky","galaxy","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_LAYER 8.\n\n\nmat2 Rot(float angle){\n    float s=sin(angle), c=cos(angle);\n    return mat2(c, -s, s, c);\n}\n\n//random number between 0 and 1\nfloat Hash21(vec2 p){\n    p = fract(p*vec2(123.34, 456.21));\n    p +=dot(p, p+45.32);\n    return  fract(p.x*p.y);\n}\n\nfloat Star(vec2 uv, float flare){\n    float d = length(uv);//center of screen is origin of uv -- length give us distance from every pixel to te center\n    float m = .05/d;\n    float rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m +=rays*flare;\n    \n    uv *=Rot(3.1415/4.);\n    rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m +=rays*.3*flare;\n    m *=smoothstep(1., .2, d);\n    return m;\n}\n\nvec3 StarLayer(vec2 uv){\n   \n   vec3 col = vec3(0.);\n   \n    vec2 gv= fract(uv)-.5; //gv is grid view\n    vec2 id= floor(uv);\n    \n    for(int y=-1; y<=1; y++){\n        for(int x=-1; x<=1; x++){\n            \n            vec2 offset= vec2(x, y);\n            float n = Hash21(id+offset);\n            float size = fract(n*345.32);\n                float star= Star(gv-offset-(vec2(n, fract(n*34.))-.5), smoothstep(.9, 1., size)*.6);\n            vec3 color = sin(vec3(.2, .3, .9)*fract(n*2345.2)*123.2)*.5+.5;\n            color = color*vec3(1., .25, 1.+size);\n            \n            star *=sin(iTime*3.+n*6.2831)*.5+1.;\n            col +=star*size*color; \n            \n         }\n     }\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float t=  iTime*.02;\n    vec2 M = (iMouse.xy-iResolution.xy*.5)/iResolution.y;\n    uv *=Rot(t);\n    uv +=M*4.;\n    \n    vec3 col = vec3(0.);\n    \n    for(float i =0.; i<1.; i += 1./NUM_LAYER){\n        float depth = fract(i+t);\n        float scale= mix(20.,.5, depth);\n        float fade = depth*smoothstep(1., .9, depth);\n        col += StarLayer(uv*scale+i*453.32-M)*fade;\n    }\n    fragColor = vec4(col,1.0);\n    }","name":"Image","description":"","type":"image"}]}