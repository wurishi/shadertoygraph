{"ver":"0.1","info":{"id":"DddyD4","date":"1695072031","viewed":74,"name":"05 - tiles","username":"thomasfriday","description":"My fifth shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float square(in vec2 p, in float s) {\n    vec2 d = abs(p) - s;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n  uv = uv * 5.5;\n  \n  float a = iTime * 0.1;\n  uv *= mat2(cos(a), -sin(a), sin(a), cos(a)); \n  uv += 0.5;\n\n  vec2 id = floor(uv);\n  vec2 pos = fract(uv) - 0.5;\n  \n  float s = sin(iTime * 0.5 + exp(length(id)));\n  s = clamp(s, 0.02, 0.5);\n  float d = square(pos, s);\n  \n  vec3 col = vec3(0);\n  col += smoothstep(0.01, 0., d);\n  \n  fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}