{"ver":"0.1","info":{"id":"XdtSz4","date":"1457988518","viewed":136,"name":"Color bypass","username":"gigatron","description":"Bypass colors","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["red","blue","ignore","component","tagsgreen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Gigatron quick color by-passer !!!\n// uncomment for different fx\n//#define fx1\n//#define fx2\n//#define fx3\n//#define fx4\n#define fx5\n\n\n\n#define DIR_RIGHT -1.\n#define DIR_LEFT 1.\n#define DIRECTION DIR_LEFT\n\n#define LAYERS 8\n#define SPEED 40.\n#define SIZE 5.\n\n\n\n\nfloat rand (in vec2 uv) { return fract(sin(dot(uv,vec2(12.4124,48.4124)))*48512.41241); }\nconst vec2 O = vec2(0.,1.);\nfloat noise (in vec2 uv) {\n\tvec2 b = floor(uv);\n\treturn mix(mix(rand(b),rand(b+O.yx),.5),mix(rand(b+O),rand(b+O.yy),.5),.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 tc=texture(iChannel0,uv).rgb;\n    \n    #ifdef fx1    \n     if(tc.r>0.6)\tfragColor = vec4(tc, vec2(0.0,0.0));\n    #endif \n    \n    #ifdef fx2\n    float M = max(tc.r,max(tc.g,tc.b)), m = min(tc.r,min(tc.g,tc.b));\n    if(tc.r>0.6) fragColor = vec4((tc-m)/(M-m), 1.0);\n    #endif\n    // alien formula from Master Fabrice and Orion ;)\n    // the result will be Random , for gfx cards !!\n    #ifdef fx3\n     if(tc.b>0.2) fragColor = vec4(pow(sin(64.*(iTime/tc)),vec3(.3)), 1.0);\n    #endif\n    \n    #ifdef fx4\n    float stars = 0.;\n\tfloat fl, s;\n\tfor (int layer = 0; layer < LAYERS; layer++) {\n\t\tfl = float(layer);\n\t\ts = (400.-fl*20.);\n\t\tstars += step(.1,pow(noise(mod(vec2(uv.x*s + iTime*SPEED*DIRECTION - fl*100.,uv.y*s),iResolution.x)),18.)) * (fl/float(LAYERS));\n\t}\n    \n    if(tc.b>0.159)\tfragColor = vec4(tc, vec2(0.0,0.0));else fragColor = vec4( vec3(stars), 1.0 );\n     \n     #endif\n    \n    \n    #ifdef fx5\n    float stars = 0.;\n\tfloat fl, s;\n\tfor (int layer = 0; layer < LAYERS; layer++) {\n\t\tfl = float(layer);\n\t\ts = (400.-fl*20.);\n\t\tstars += step(.1,pow(noise(mod(vec2(uv.x*s + iTime*SPEED*DIRECTION - fl*100.,uv.y*s),iResolution.x)),18.)) * (fl/float(LAYERS));\n\t}\n    \n    if(tc.b<0.199)\tfragColor = vec4(tc, vec2(0.5,0.0));else fragColor =  vec4( vec3(stars), 1.0 );\n                  \n    if(tc.g<0.399)\tfragColor += vec4(tc, vec2(-0.5,0.0));else fragColor =  vec4( vec3(stars), 1.0 );\n    \n     #endif\n    \n    \n}","name":"Image","description":"","type":"image"}]}