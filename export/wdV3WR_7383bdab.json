{"ver":"0.1","info":{"id":"wdV3WR","date":"1571378443","viewed":124,"name":"Distance Estimation isosurface","username":"nurof3n","description":"Nice shape","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","distanceestimation","function"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tDistance estimation \n\thttps://iquilezles.org/articles/distance\n\tWe compute the distance to the isosurface f(uv) = 0\n*/\n#define PI 3.14159265359\n\nfloat eps;\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat f(vec2 x)                                 \n{\n    float r = length(x);\n    float a = atan(x.y,x.x);\n    return r - 1.0 + 0.5*sin(3.0*a+2.0*r*r);\n}     \n\n//analytical gradient\nvec2 grad1(vec2 x)\t\t\t\t\t\t\t\t\t\t\t\t \n{\n    float r = length(x);\n    float a = atan(x.y,x.x);\n    vec2 da = vec2(x.y,-x.x)/(r*r);\n    return (x/r) + (1.5*da+2.0*x)*cos(3.0*a+2.0*r*r);\n}\n\n//central differences method: numerical gradient\nvec2 grad2(vec2 uv) {\n \tvec2 h = vec2( 0.01, 0.0 );\n    return vec2(f(uv+h.xy) - f(uv-h.xy),\n                f(uv+h.yx) - f(uv-h.yx)) / (2.0*h.x);\n}\n\n//with distance estimation (good)\nfloat getde(vec2 uv, vec2 g) {\n \tfloat v = f(uv);\n   // if(v < .0)\n        //return vec3(.0, .5, .0) * abs(v);\n    \n    float de = abs(v)/length(g);\n    return de; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    float scale = 3.;\n    eps = scale / iResolution.y; \t//pixel size, for constant thickness independent of resolution\n    \n    uv.x *= aspect;\n    uv -= vec2(aspect/2., .5);\n\tuv *= scale;\n    //uv = rotate2d(sin(iTime) * PI) * uv;\n    \n    vec2 g = mix(grad2(uv), vec2(1., 0.), mod(floor(fract(iTime / 3.) * 2.), 2.));\n    float de = getde(uv, g);\n    vec3 color;\n    //color = vec3(smoothstep(.0, .01, de));\t//thickness changes with resolution\n    color = vec3(smoothstep(.0, 2.0*eps, de));\t//thickness remains independent of resolution\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}