{"ver":"0.1","info":{"id":"dtlGRn","date":"1671202928","viewed":330,"name":"x % k % j % i","username":"FabriceNeyret2","description":"x %k %Â j % i  allows for complex griding.\nMouse.x to scale.  Uncomment #10 for normalized version.\n( thanks SnoopethDuckDuck. [url]https://shadertoy.com/view/dsjXWt[/url]  for the idea )","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["maths","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/Dts3zr\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    \n    ivec2 I = ivec2(U),\n          T = ivec2( U / ( iMouse.z>0. ? iMouse.x : iResolution.y*.1 )) +2;\n\n    O = vec4( I.x % I.y % T.x % T.y ); \n//  O /= float( max(1,min(I.y,min(T.x,T.y))-1) );\n}","name":"Image","description":"","type":"image"}]}