{"ver":"0.1","info":{"id":"MXKGRm","date":"1717461020","viewed":52,"name":"Smooth Step Upsampler","username":"SergeyMakeev","description":"left = bilinear upsampler\nright = smoothstep upscampler","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["upsampling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smootherstep_lerp(float from, float to, float x)\n{\n\n  // Scale, and clamp x to 0..1 range\n  x = clamp(x, 0.0, 1.0);\n\n  // Evaluate polynomial\n  float blendK = x*x*x*(x*(x*6.0 - 15.0) + 10.0);\n\n  return mix(from, to, blendK);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\n    if (uv.x > 0.5)\n    {\n        // position in pixels (in low res texture)\n        vec2 pixelPositionInLowRes = uv * iChannelResolution[0].xy;\n        \n        // fractional part\n        vec2 pixelPositionFrac = fract(pixelPositionInLowRes);\n        \n        // whole number\n        pixelPositionInLowRes = (pixelPositionInLowRes - pixelPositionFrac);\n        \n        vec2 pixelSize = 1.0 / iChannelResolution[0].xy;\n        \n        vec2 uv0 = (pixelPositionInLowRes + vec2(0.5, 0.5)) * pixelSize;\n        vec2 uv1 = uv0  + vec2(pixelSize.x, 0.0);\n        vec2 uv2 = uv0  + vec2(0.0, pixelSize.y);\n        \n        // smoothstep interpolation\n        // the result is still filtered but not too blurry \n        float u = smootherstep_lerp(uv0.x, uv1.x, pixelPositionFrac.x);\n        float v = smootherstep_lerp(uv0.y, uv2.y, pixelPositionFrac.y);\n        \n\t    uv = vec2(u,v);\n    }\n    \n    vec4 col = texture(iChannel0, uv);\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}