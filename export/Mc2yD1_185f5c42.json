{"ver":"0.1","info":{"id":"Mc2yD1","date":"1722288115","viewed":60,"name":"Voxel gyroid with bug","username":"Elsio","description":"esses paralelepípedos enormes, não são decoração. era pra serem cubos.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","3d","raymarching","voxel","occlusion","dda"],"hasliked":0,"parentid":"MfjyDz","parentname":"Voxel DDA (rd = (0, 0) problem)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define sgn(p) (step(0., p) * 2. - 1.)\n#define t iTime * .4\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2  r = iResolution.xy; o *= 0.;\n          u.xy = (u - r / 2.) / r.y;\n\n    vec3 D = normalize(vec3(u, 1.2)),\n         p = vec3(-3.1415/2., 0, t * 6.),\n         q = floor(p), N;\n         \n\n    D.yz *= rot(cos(3. * t) * .6);\n    D.xz *= rot(sin(2. * t) * .7);\n    \n    //p = (sgn(D) + q - p) / D;\n    \n    p = (q - p) / D +   .5 / D + .5 / abs(D) ;\n    \n    float i, d = 1., s = .2;\n    \n    while(i++ < 140. && d > .99){\n\n        N = step(p, min(p.yzx, p.zxy)),\n\n        q += N * sgn(D) * s,\n        p += N * sgn(D) / D * s;\n        \n        d = abs(dot(\n                sin(q.zxy),\n                cos(q)\n            ) - 1.3) / s;\n    }\n\n    o.rgb = vec3(d * N) * (1. - i/140.);\n    \n    if(abs(D.x) < .001 || abs(D.y) < .001) \n        o.rgb = vec3(1);\n}\n","name":"Image","description":"","type":"image"}]}