{"ver":"0.1","info":{"id":"tlKyW1","date":"1611027058","viewed":125,"name":"domain warping  study","username":"treize","description":"Domain Warping  study,\nBut I'm not sure I understand.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","noise","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p = fragCoord.xy/min(iResolution.x, iResolution.y);\n    p *= 5.;\n    float col;\n    if(fragCoord.x < 0.33 * iResolution.x)\n    {\n        col = DomainWarp(p, 5.0,3);\n    }\n    else if(fragCoord.x < 0.66 * iResolution.x)\n    {\n        col =mix(DomainWarp(p, 5.0,3),DomainWarp2(p, 5.0,3),sin(iTime));\n    }\n    else\n    {\n        col =DomainWarp2(p, 5.0,3);\n    }\n    fragColor = vec4(vec3(col), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Pattern 1\nfloat random_seed2(vec2 uv)\n{\n\treturn fract(sin(dot(uv.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\nfloat ValueNoise(vec2 uv)\n{\n\tvec2 i = floor(uv);\n\tvec2 f = fract(uv);\n\tf = f * f * (3.0 - 2.0 * f);\n\tfloat r0 = random_seed2(i);\n\tfloat r1 = random_seed2(i + vec2(1.0, 0.0));\n\tfloat r2 = random_seed2(i+vec2(0.0, 1.0));\n\tfloat r3 = random_seed2(i + vec2(1.0, 1.0));\n\tfloat bottomOfGrid =mix(r0, r1, f.x);\n\tfloat topOfGrid = mix(r2, r3, f.x);\n\tfloat t = mix(bottomOfGrid, topOfGrid, f.y);\n\treturn t;\n}\nfloat FBM24(vec2 uv, float amplitude, float frequency)\n{\n\tfloat result = 0.;\n\tfloat amplitude2 = amplitude;\n\tfloat frequency2 = frequency;\n\tfor (int i = 0; i < 4; i++)\n\t{\n        result += ValueNoise(uv * frequency2) * amplitude2;\n\t\tamplitude2 *= 0.5;\n\t\tfrequency2 *= 2.0;\n\t}\n\treturn result;\n}\nfloat DomainWarp(vec2 p, float G,int loop)\n{\n    float val = 0.0;\n    for (int i = 0; i < loop; i++)\n    {\n        vec2 dir = vec2(sin(G * val), cos(G * val));\n        val = FBM24(p + dir,1.0,1.0);\n    }\n    return val;\n}\n//Pattern 2\nfloat hash12(vec2 p) \n{\n\tvec3 p3 = fract(vec3(p.xyx) * .1031);\n\tp3 += dot(p3, p3.yzx + 33.33);\n\treturn fract((p3.x + p3.y) * p3.z);\n}\nfloat ValueNoise21(vec2 p) \n{\n    vec2 i = floor(p);\n    float v00 = hash12(i);\n    float v01 = hash12(i + vec2(0.0, 1.0));\n    float v10 = hash12(i + vec2(1.0, 0.0));\n    float v11 = hash12(i + vec2(1.0, 1.0));\n    vec2 f = fract(p);\n    f = f * f * (3.0 -2.0 * f); \n    return mix(mix(v00, v10, f.x), mix(v01, v11, f.x), f.y)-0.5;\n}\nfloat FBM24_2(vec2 uv, float amplitude, float frequency)\n{\n\tfloat result = 0.;\n\tfloat amplitude2 = amplitude;\n\tfloat frequency2 = frequency;\n\tfor (int i = 0; i < 4; i++)\n\t{\n        result += ValueNoise21(uv * frequency2) * amplitude2;\n\t\tamplitude2 *= 0.5;\n\t\tfrequency2 *= 2.0;\n\t}\n\treturn result;\n}\nfloat DomainWarp2(vec2 p, float G,int loop)\n{\n    float val = 0.0;\n    for (int i = 0; i < loop; i++)\n    {\n        vec2 dir = vec2(sin(G * val), cos(G * val));\n        val = FBM24_2(p + dir,1.0,1.0);\n    }\n    return val;\n}\n","name":"Common","description":"","type":"common"}]}