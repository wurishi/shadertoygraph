{"ver":"0.1","info":{"id":"Xf23DW","date":"1704257688","viewed":32,"name":"Pixel Art Shader and Gamut","username":"Zentient","description":"A simple shader to color grade, color band, pixelate, and dither the image. Came up with a custo color curve I'm super happy with\n\nSuper jank, but I'm happy with the results. Color curve is here: https://www.desmos.com/calculator/o5vitca5ag","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["stylized","pixelart","tonemap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 col, in vec2 fragCoord )\n{\n\n    //Parameters: quantPos adjusts pixelation, and should be a power of 2, quantCol is color bits.\n    float contrast = 1.0;\n    float quantCol = 16.0;\n    float quantPos = 1.0 / 4.0;\n   \n     \n    // Normalized Coordinates\n    vec2 iR = iResolution.xy;\n    vec2 uv = fragCoord/iR;\n    \n    //distorts quantized pixel sampler based on an rgb noise map\n    vec2 quant = round(fragCoord*quantPos)/(iR * quantPos);\n    vec4 noiseQuant = ((texture(iChannel1, quant)) - 0.5) / 150.0; \n    \n    \n    \n    //various definitions\n    vec4 texQuant = texture(iChannel0, noiseQuant.xy + quant);\n    vec4 ditherQuant = texture(iChannel1, noiseQuant.xy + quant);\n    vec4 texCol = texture(iChannel0, uv);\n    vec2 mv = iMouse.xy/iR;\n    \n    \n    //Contrast Curve and Color Quantization\n    col = pow(texQuant, vec4(contrast)) * (0.95 + (ditherQuant/20.0));\n    col = round(col * (quantCol - 1.0)) / (quantCol - 1.0);\n    \n    //tonemapper\n    col = ((pow(col, vec4(12.0)) / 1.77) + 1.0) \n       * (0.85 * pow(sin (2.0* col), vec4(1.5, 2.0, 1.7, 0.0)) );\n    \n    //Before/After comparison + screen output\n    if(mv.x > uv.x)\n        {\n            \n            col = vec4(texCol);\n        }\n}","name":"Image","description":"","type":"image"}]}