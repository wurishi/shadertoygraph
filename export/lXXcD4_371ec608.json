{"ver":"0.1","info":{"id":"lXXcD4","date":"1726187731","viewed":13,"name":"Test 1 Hard isosceles","username":"zhavoronoki","description":"-","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lines(vec2 p){\n  return smoothstep(.05,0.,p.y);\n}\n\nfloat sides(vec2 p){\n  return smoothstep(0.02,0.0, -p.x + 0.5*p.y)*smoothstep(0.03,0.02, p.x - 0.5*p.y)+smoothstep(1.0,0.97, p.x + 0.5*p.y)*(1.0 -smoothstep(0.97,0.95, p.x +0.5*p.y)); \n//return smoothstep(1.0,0.97, p.x + 0.5*p.y)*(1.0 -smoothstep(0.97,0.95, p.x +0.5*p.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n \n    uv *= 10.0;\n    //offset pattern\n    uv.x += step(1., mod(uv.y,2.0)) * 0.5;\n\n    vec2 grid = fract(uv);\n    \n    float ln=lines(grid);\n    float plt=sides(grid);\n    \n    //draw triangle \n    float a = step(grid.x + 0.5*grid.y, 1.0);\n    float b = step(0.0, grid.x -0.5*grid.y);\n    float triangle = a * b;\n\n\n    vec3 color=vec3(triangle);  \n    color=mix(vec3(.95,1.,.04),vec3(.2,.46,.97),triangle);\n    color=mix(color,vec3(0.),ln);\n    color=mix(color,vec3(0.),plt);\n    \n    fragColor = vec4(vec3(color), 1.0);\n}","name":"Image","description":"","type":"image"}]}