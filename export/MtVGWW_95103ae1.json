{"ver":"0.1","info":{"id":"MtVGWW","date":"1474734657","viewed":161,"name":"Tentacular Julia","username":"stduhpf","description":"I wondered wow would looks like orbit traps with gradient noise.\nI disabled antialiasing because of the low fps.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ss 1 //anti aliasing\n#define iterations 128\n\nfloat startRandom ;\nvec2 rand(vec2 co, float t)\n{\nfloat s = t+startRandom;\n    return fract(s+vec2(sin(s+dot(co,vec2(75542.8974,99846.16956))),sin(2.*s+dot(co,vec2(75589.1688,9846.16956))))*4849456.48456)-.5;\n}\n\nvec2 perlin(vec2 c, float t)\n{\nvec2 i= floor(c);\nfloat dt = fract(t);\n t =floor(t);\nvec2 f = fract(c);\nvec2 m1 = vec2(dot(f,rand(i,t)),dot(f,rand(i,t+100.5)));\nvec2 m2 = vec2(dot(f-vec2(1,0),rand(i+vec2(1,0),t)),dot(f-vec2(1,0),rand(i+vec2(1,0),t+100.5)));\nvec2 m3 = vec2(dot(f-vec2(0,1),rand(i+vec2(0,1),t)),dot(f-vec2(0,1),rand(i+vec2(0,1),t+100.5)));\nvec2 m4 = vec2(dot(f-1.,rand(i+1.,t)),dot(f-1.,rand(i+1.,t+100.5)));\n    \n    t+=1.;\n\nvec2 tm1 = vec2(dot(f,rand(i,t)),dot(f,rand(i,t+100.5)));\nvec2 tm2 = vec2(dot(f-vec2(1,0),rand(i+vec2(1,0),t)),dot(f-vec2(1,0),rand(i+vec2(1,0),t+100.5)));\nvec2 tm3 = vec2(dot(f-vec2(0,1),rand(i+vec2(0,1),t)),dot(f-vec2(0,1),rand(i+vec2(0,1),t+100.5)));\nvec2 tm4 = vec2(dot(f-1.,rand(i+1.,t)),dot(f-1.,rand(i+1.,t+100.5)));\n    \n    \n\nreturn mix(mix(mix(m1,m2,smoothstep(0.,1.,f.x)),mix(m3,m4,smoothstep(0.,1.,f.x)),smoothstep(0.,1.,f.y)),\n           mix(mix(tm1,tm2,smoothstep(0.,1.,f.x)),mix(tm3,tm4,smoothstep(0.,1.,f.x)),smoothstep(0.,1.,f.y)),smoothstep(0.,1.,dt));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    startRandom = fract(sin(floor(iDate.w-iTime)*9756962.215)*15465.486);\n      vec2 p = iMouse.xy / iResolution.y-vec2(.5+(iResolution.x-iResolution.y)/(2.*iResolution.y),.5);\n    if(iMouse.xy==vec2(0))\n        p=vec2(-.75,.05);\n    vec3 fcol=vec3(0);\n    for(int i =0;i<ss*ss;i++)\n    {\n    vec2 uv = (fragCoord.xy+(vec2(mod(float(i),float(ss)),floor(float(i)/float(ss)))+.5)/float(ss))\n        / iResolution.y-vec2(.5+(iResolution.x-iResolution.y)/(2.*iResolution.y),.5);\n            float dmin=1000.;\n        vec2 c=p;\n        vec2 z=uv*2.6;\n    for(int i =0;i<iterations;i++)\n    {\n        z=z*mat2(z.x,-z.y,z.yx)+c;\n        vec2 z1 = z+perlin(z+iTime,.1*iTime+float(i));\n\t\tdmin=min(dmin, min(abs(z1.y),abs(z1.x)));\n    }    \n        dmin=1.+log(dmin)/6.;\n        vec3 col=mix(vec3(.2,.25,.4),vec3(1,.7,.5),dmin);\n        fcol+=col/float(ss*ss);\n    }\n\tfragColor = vec4(fcol,1.0);\n}","name":"Image","description":"","type":"image"}]}