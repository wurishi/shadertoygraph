{"ver":"0.1","info":{"id":"XdKfDR","date":"1528331767","viewed":105,"name":"noisy image sampling","username":"trisslotten","description":"Testing an idea","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noisy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_SAMPLES 1.0\n\n//https://www.shadertoy.com/view/4djSRW\n#define HASHSCALE1 412.1975\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 sampleTex(vec2 uv)\n{\n\treturn texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    \n    vec2 sampleUV = 0.2*fragCoord/iResolution.x + sin(iTime*0.05);\n\n    vec3 col = vec3(0);\n    if(uv.x < 0.5)\n    {\n        vec2 t = 1.0/iChannelResolution[0].xy;\n        const float numSamples = 1.0;\n        for(float i = 0.0; i < numSamples; i++)\n        {\n            vec2 offset;\n        \toffset.x = (hash12(uv + 7.0*i)-0.5);\n        \toffset.y = (hash12(uv + 13.0 + 7.0*i)-0.5);\n        \toffset = 1.0*t*hash12(uv - 13.0 + 7.0*i) * normalize(offset);\n            col += texture(iChannel0, sampleUV + offset).rgb / numSamples;\n        }\n    }\n    else\n    {\n        col = texture(iChannel0, sampleUV).rgb;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}