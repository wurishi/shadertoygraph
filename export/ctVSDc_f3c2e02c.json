{"ver":"0.1","info":{"id":"ctVSDc","date":"1686563895","viewed":96,"name":"billish john","username":"lolrred","description":"a little billie jean, with some visuals as a proof of concept for me","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["music","glitch","visualiser"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\n\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.8,0.7,1.48);\n    vec3 b = vec3(0.0,0.24,0.5);\n    vec3 c = vec3(0.0,0.5,0.33);\n    vec3 d = vec3(0.0,0.5,0.667);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p2 = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    \n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    for(float i = 0.0; i <5.0; i++){\n        mainSound( 0, iTime+.3 );\n        vec2 p = fract(p2*2.0*(i*iTime)/1024.)-0.5;\n        p += soundout.g/64.;\n        float bass = soundout.r;\n        bass = (bass/64.)+0.5;\n        float d = sdCircle(p,0.5);\n        float d2 = sdCircle(p2,bass*2.);\n        float snare = 8.*soundout.a+ 2.*soundout.b;\n        snare = -abs(snare);\n        snare = (snare/16.)+0.5;\n\n        d = cos(d*.25*iTime/.5);\n\n        d2 = cos(d2*1.*iTime/18.);\n        d = snare*abs(d);\n        d= 0.01/d;\n        d = smoothstep(0.0,0.1,d);\n        //\n        col.rgb += palette(noteout+d2/2.-d)*vec3(d);\n    }\n    col = smoothstep(0.2,0.9,col/3.);\n     // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"const float bassnotes[] = float[](\n369.99,\n277.18,\n329.63,\n369.99,\n329.63,\n277.18,\n246.94,\n277.18);\nint note = 0;\nvec4 soundout = vec4(0.0);\nfloat noteout = 0.0;\nconst float chords[] = float[](\n369.99,440.00,554.37,\n415.30,493.88,622.25,\n440.00,554.37,659.25\n);\nint chordalt = 0;\nvec2 mainSound( int samp, float time )\n{\n    float bpmconst = 40.;\n    // A 440 Hz wave that attenuates quickly overt time\n    float wave = sin(6.2831*55.0*time);\n    float sawtooth = mod(time*bpmconst/2.,10.);\n    float bpm = 0.5*sawtooth;//clamp(.5*sawtooth,-2.0,1.0);\n    float env = exp(-3.0*bpm);\n    float fold = sin(4.*wave*env);\n    float bd = 2.*tanh(fold*2.);\n    \n    sawtooth = mod(time*bpmconst/4.+bpmconst/8.,10.);\n    bpm = 0.5*sawtooth;\n    env = exp(-6.0*bpm);\n    float noise = sin(1000.*sin(1000.*time)*sin(6.2831*110.0*time));\n    wave = sin(6.2831*225.0*time);\n    float snare = tanh((noise+wave*env)*env*1.);\n    \n    sawtooth = mod(time*bpmconst,10.);\n    bpm = 0.5*sawtooth;\n    \n    env = exp(-12.*bpm);\n    float hat = env*noise;\n    \n    sawtooth = mod(time*bpmconst/1.,10.);\n    bpm = 0.5*sawtooth;\n    env = exp(-.5*bpm);\n    note = int(time*bpmconst/10.);\n    note = note;\n    wave = sin(6.2831*bassnotes[note%8]/4.*time);\n    float bass = 0.0;\n    float bass2 = 0.0;\n    if(time > bpmconst/10.){\n        bass = tanh(sin(env*wave*2.)*4.);\n        wave = sin(6.2831*bassnotes[note%8]/8.*time);\n        bass2 = 0.25*tanh(sin(env*wave*2.)*16.);\n    }\n    float piano = 0.0;\n        \n    sawtooth = mod(time*bpmconst/8.,10.);\n    note = int(time*bpmconst/8./10.);\n    bpm = 0.5*sawtooth;\n    env = bpm*exp(-7.*bpm);\n    wave = 0.;\n    \n    chordalt = int(bpmconst*time/16.)%2;\n    chordalt *=6;\n    for(int chordnote = 0; chordnote<3; chordnote++){\n        wave += sin(3.*sin(6.2831*chords[chordnote+chordalt]*time));\n    }\n    float piano1 = wave*env;\n    \n    float offset = 5.*(bpmconst/32.);\n    sawtooth = mod(time*bpmconst/8.+offset,10.);\n    note = int(time*bpmconst/8.+offset/10.);\n    bpm = 0.5*sawtooth;\n    env = bpm*exp(-7.*bpm);\n    wave = 0.;\n    \n    for(int chordnote = 0; chordnote<3; chordnote++){\n        wave += sin(3.*sin(6.2831*chords[chordnote+4]*time));\n    }\n    float piano2 = wave*env;\n    if(time > bpmconst/5.){\n        piano = piano1 + piano2;\n        piano = tanh(piano*2.)*4.;\n    }\n    noteout = bassnotes[note%8];\n    soundout = vec4(bass,piano,bd,snare);\n    return vec2((bass+bass2+hat+bd+snare+piano)/4.);\n}","name":"Common","description":"","type":"common"}]}