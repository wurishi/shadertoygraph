{"ver":"0.1","info":{"id":"WsdyzX","date":"1601411129","viewed":238,"name":"Helios - Workshop Results","username":"BackwardsCap","description":"Results of day 1 of my shader workshop.\nIt was a 1 hr session where I walked my co-workers through the basics of shader programming on Shadertoy\nThis is what we made","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["helios"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define size 7.\n#define SS(U) smoothstep((size*1.5)/iResolution.y,0.,U)\n\nfloat hash21(vec2 p)\n{\n    return fract(sin(dot(p.xy,vec2(1879.13287,5712.1273)))*12893.1278);\n}\n\nfloat circle(vec2 p, float r)\n{\n    return SS(length(p)-r);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv-=.5;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv *= size;\n        \n    float id = hash21(floor(uv));\n    \n    uv = fract(uv)-.5;\n\n    //red circle\n    vec2 pos = uv - vec2(sin(iTime*2.*id),cos(iTime-id*100.))/3.;\n    float c = circle(pos, .1);\n    \n    //green circle\n    vec2 pos2 = uv - vec2(sin(iTime-id*50.),cos(iTime*id))/3.;\n    float c2 = circle(pos2, .1);\n    \n    //blue circle\n    vec2 pos3 = uv - vec2(sin(iTime-id*20.),cos(iTime/2.-id))/3.;\n    float c3 = circle(pos3, .1);\n    \n    \n    //add our colors together\n    vec3 col = vec3(c,c2,c3);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}