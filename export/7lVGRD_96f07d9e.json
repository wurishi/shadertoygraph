{"ver":"0.1","info":{"id":"7lVGRD","date":"1637306760","viewed":66,"name":"Purple Ugly Shader","username":"wumz","description":"Purple and really ugly","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["ugly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a,b,t)\n#define sat(x) clamp(x,0.0,1.0)\n\n\n// remap 0 1\nfloat remap01(float a, float b, float t){\n    // values should be between 0 and 1\n    return sat((t-a) / (b-a));\n\n}\n\n\nfloat remap(float a, float b, float c, float d, float t){\n\n    return sat((t-a) / (b-a)) * (d - c) + c;\n\n}\n\nvec2 within (vec2 uv, vec4 rect){\n\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n\n}\n\n\n\nvec4 Mouth(vec2 uv){\n\n    uv -= 0.5;\n\n    vec4 col = vec4(0.5, 0.18, 0.05, 1);\n    \n     uv.y *= 1.3;\n    \n    uv.y -= uv.x * uv.x * 2.0;\n    \n    float d = length(uv);\n    \n    col.a = S(0.5, 0.48, d);\n    \n    float td = length(uv - vec2(0.0, 0.6));\n    \n    vec3 toothCol = vec3(1.0) * S(0.6, 0.35,d);\n    \n    col.rgb = mix(col.rgb, toothCol, S(0.4, 0.37,td));\n    \n    td = length(uv + vec2(0.0, 0.5));\n    \n    col.rgb = mix(col.rgb, vec3(1.0, 0.5,0.5), S(0.5, 0.2,td));\n    \n    return col;   \n\n}\n\nvec4 Eye(vec2 uv){\n  // move the eye into position\n  \n    uv -= 0.5;\n    \n    float d = length(uv / 0.8);\n    \n    vec4 irisColor = vec4(0.3, 0.5, 1.0, 1.0);\n    \n    \n    vec4 col = mix(vec4(1.0), irisColor, S(0.1, 0.7, d ) * 0.5);\n    \n    col.rgb *= 1.0 - S(0.45, 0.5, d) * 0.5 * sat(-uv.x - uv.y); \n    \n    // eye outline\n    \n    col.rgb = mix(col.rgb, vec3(0.0), S(0.3, 0.28,d));\n    \n    irisColor.rgb *= 1.0 + S(0.3, .05, d);\n    \n    col.rgb = mix(col.rgb, irisColor.rgb, S(0.28, 0.25,d));\n    \n    col.rgb = mix(col.rgb, vec3(0.0), S(0.16, 0.14,d));\n    \n    float highlight =  S(0.07, 0.05, length(uv + vec2(-0.08, 0.08)));\n    \n  //  highlight +=  S(0.07, 0.05, length(uv + vec2(-0.08, 0.08)));\n     \n    \n    col.rgb = mix(col.rgb, vec3(1.0), highlight);\n    \n   \n   \n    col.a = S(0.5, 0.48, d);\n    \n    return col; \n}\n\n\n\nvec4 Head(vec2 uv){\n\n    vec4 col = vec4(0.4, 0.1, 0.7, 1.0);\n    \n    float d = length(uv);\n    \n    // make a circle\n    col.a = S(.5, .49, d);\n    \n    float edgeShade = remap01(0.35, 0.5,d);\n    \n    edgeShade *= edgeShade;\n    \n    col.rgb *= 1.0 -  edgeShade * 0.4;\n    \n    // make an outline\n    \n    col.rgb = mix(col.rgb, vec3(0.4, 0.1, 1.0), S(0.48, 0.48, d));\n    \n    \n    // make the highlight\n    \n    float highlight = S(0.41, 0.405, d);\n    \n    // fade in down the head\n    \n    highlight *= remap(0.41, - 0.1, 0.75, 0.0, uv.y);\n    \n    col.rgb = mix(col.rgb, vec3(0.8), highlight);\n    \n    // cheeks\n    \n    // position of the cheek\n    \n    d = length(uv - vec2(0.25, -0.2));\n    \n    float cheek = S(0.2, 0.01, d) * 0.4;\n    \n    cheek *= S(0.17, 0.16, d);\n    \n    col.rgb = mix(col.rgb, vec3(0.0, 0.1,1.1), cheek);\n    \n    \n    return col;  \n\n}\n\nvec4 Smiley(vec2 uv){\n\n    vec4 col = vec4(0.0);\n    \n    // mirror x coordinate \n     \n     uv.x= abs(uv.x);\n    \n    // the head \n    vec4 head = Head(uv);\n    \n    // blend the head \n    col = mix(col, head, head.a);\n    \n     // the eye \n    vec4 eye = Eye(within(uv, vec4(0.03, -0.1, 0.37, 0.25)));\n    \n     // blend the eye \n    col = mix(col, eye, eye.a);\n    \n    // the mouth \n    vec4 mouth = Mouth(within(uv, vec4(-0.3, -0.4, 0.3, -0.1)));\n    \n    // blend the mouth \n    col = mix(col, mouth, mouth.a);\n    \n    return col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // move to center\n    uv -= 0.5;\n    \n    \n    // maintain aspect ratio\n    uv.x *= iResolution.x /iResolution.y;\n\n\n    // Output to screen\n    fragColor = Smiley(uv);\n}","name":"Image","description":"","type":"image"}]}