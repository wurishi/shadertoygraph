{"ver":"0.1","info":{"id":"ts3Szs","date":"1572615604","viewed":180,"name":"\"working\" \"voxel\" sdf","username":"sasha_sortai","description":"got it kinda working, it's a prototype and technically not voxel-based","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat SDF(vec3 pos);\nvec3 SDFg(vec3 pos);\nvec4 march(vec3 pos, vec3 tar, vec2 uv, float fd);\nvec4 march(vec3 pos, vec3 tar, vec2 uv);\nvec4 march(vec3 pos, vec3 ray);\nfloat obst(vec3 op, vec3 lp, float k);\nfloat sdBox( vec3 p, vec3 b );\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)*2./min(iResolution.x,iResolution.y)*.6;\n    vec3 cpos = vec3(cos(iTime),sin(iTime),1)*1.5;\n    vec3 lpos = vec3(2.);\n    vec4 mres = march(cpos,vec3(0),uv);\n    \n    if (mres.w<0.) fragColor = vec4(\n        mix(vec3(.1),vec3(.2),smoothstep(0.,.1,texture(iChannel0,fragCoord/iResolution.xy).rgb))\n    ,1);\n    else fragColor = vec4(.5*(normalize(SDFg(mres.xyz))+1.)*obst(mres.xyz,lpos,dot(normalize(lpos-mres.xyz),normalize(SDFg(mres.xyz)))),1);\n}\n\nfloat SDF(vec3 pos){\n    float bd = -sdBox(pos,vec3(5)); bd = 1000.;\n    float ins = sdBox(pos,vec3(1))-.001;\n    if (ins>0.) return min(bd,ins+.1);\n    else return min(bd,texture(iChannel0,(pos.xy+1.)*.5).x+abs(pos.z));\n}\nvec3 SDFg(vec3 pos){\n    vec3 er = vec3(.001,0,0);\n    return vec3(\n        SDF(pos+er.xyz)-SDF(pos-er.xyz),\n        SDF(pos+er.yzx)-SDF(pos-er.yzx),\n        SDF(pos+er.zxy)-SDF(pos-er.zxy)\n        )/(er.x*2.);\n}\nvec4 march(vec3 pos, vec3 ray){\n    float d;\n    float td = 0.;\n    int imax = 1000;\n    int i;\n    for (i = 0; i<imax; i++){\n        d = SDF(pos+td*ray)/10.;\n        if (d<=0.00005) break;\n        td+=d;\n    }\n    if (i<imax-1) return vec4(pos+td*ray,float(i)/float(imax-2));\n    else return vec4(pos+td*ray,-1);\n}\nvec4 march(vec3 pos, vec3 tar, vec2 uv, float fd){\n    vec3 fo = normalize(tar-pos);\n    vec3 ri = cross(fo,vec3(0,0,1));\n    vec3 up = cross(ri,fo);\n    vec3 ray = normalize(mat3(ri,up,fo)*vec3(uv,fd));\n    return march(pos,ray);\n}\nvec4 march(vec3 pos, vec3 tar, vec2 uv){\n    return march(pos, tar, uv, 1.);\n}\nfloat obst(vec3 op, vec3 lp, float k){\n    float off = .01;\n    vec3 rd = lp-op;\n    float md = length(rd);\n    float res = 1.;\n    float d;\n    for(float t=.000000001; t<1.;){\n        d = SDF(op + rd*t);\n        if(d<0.0){\n            res=0.;\n            break;\n        }\n        //res = min(res, k*d/t/md);\n        t+=off;\n    }\n    return res*k;\n}\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.*(fragCoord-iResolution.xy*.5)/iResolution.xy;\n    float d = min(distance(uv,vec2(cos(iTime*2.14),sin(iTime*2.14))*.3),distance(uv,-vec2(cos(iTime*2.14),sin(iTime*2.14))*.3))-.4;\n    fragColor = vec4(vec3(d\n                          -texture(iChannel1,fragCoord/iResolution.xy)*sin(iTime*10.)/10.\n                         ),1.0);\n\t\n}","name":"Buffer A","description":"","type":"buffer"}]}