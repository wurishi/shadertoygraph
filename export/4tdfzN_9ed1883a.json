{"ver":"0.1","info":{"id":"4tdfzN","date":"1538913083","viewed":467,"name":"Dancing_circle","username":"Cheburum","description":"nothing special","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float M_PI = 3.1415926535897932384626433832795;\n\n\nvec2 get_normalized_coords(vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy*2.0 - vec2(1.0);\n    uv.x*=iResolution.x/iResolution.y;\n    return uv;\n}\n\nvec3 background(vec2 uv){\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float tex = texture( iChannel0, uv*vec2(0.3,0.5)+vec2(0.5,0.5)).r;\n    //vec3 also_tex = texture(iChannel1, uv*10.0).rgb;\n    // Output to screen\n    return mix(col,vec3(uv,0.5)*tex,0.5);\n}\n\nvec3 soundEffect(){\n    float forced=clamp(iTime/5.0,0.3,2.0);\n    float add=texture( iChannel0, vec2( 0.01, 0.25) ).x*forced;\n    float add2=texture( iChannel0, vec2( 0.07, 0.25 ) ).x*forced;\n\tfloat add3 = texture( iChannel0, vec2( 0.15,0.25 ) ).x*forced;\n    return vec3(add,add2,add3);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 sound_effect = soundEffect();\n    \n    int number_of_circles = int(sound_effect.x*10.0)+1;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = get_normalized_coords(fragCoord);\n    \n    vec2 uv2 = uv*sin(sound_effect.xy*uv*cos(iTime));\n    uv2*=atan(uv2.y,uv2.x)/M_PI;\n    \n    vec2 uv3 = uv*atan(uv.y,uv.x)/M_PI;\n    uv3*=sin(sound_effect.xy*uv3*cos(iTime));\n    \n    uv = mix(uv2,uv3,cos(iTime/5.0)*0.5+0.5);\n    \n    \n    uv*=sin(atan(uv.x,uv.y)*sound_effect.x);\n    \n    vec3 back = background(uv).xyz;\n    \n    \n    vec2 circle_center = vec2(0.0,0.0);\n    float max_radius = 0.4;\n    \n    \n    vec2 center_delta = uv-circle_center;\n    float dist = length(center_delta);\n    float cosine = cos(iTime);\n    float radius = (cosine*cosine*0.5+sound_effect.x)*max_radius;\n    \n    mat2 rotate_mat = mat2(cos(iTime), -sin(iTime),\n                           sin(iTime), cos(iTime));\n    \n    if(dist<radius){\n        int cycle_id = int(round(dist / radius * float(number_of_circles)));\n        float fractional;\n        \n        if(cycle_id - cycle_id/2>0)\n            fractional = dist - float(cycle_id) * radius / float(number_of_circles);\n        else\n            fractional = float(cycle_id) * radius / float(number_of_circles) - dist;\n            \n        fractional/=radius/float(number_of_circles);\n        fractional=abs(fractional);\n        fractional*=fractional*4.0;\n\n        vec2 direction = normalize(center_delta);\n        direction*=rotate_mat;\n\n        float fractional_rot=atan(direction.y,direction.x)/M_PI+0.5;\n\n\n        vec3 col = mix(vec3(1.0),back,1.0-fractional);\n\n        col = mix(col,vec3(fractional),fractional_rot);\n\n        fragColor = vec4(col,1.0);\n    }\n    else\n        fragColor = vec4(back,1.0);\n        \n}","name":"Image","description":"","type":"image"}]}