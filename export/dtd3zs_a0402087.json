{"ver":"0.1","info":{"id":"dtd3zs","date":"1682968520","viewed":74,"name":"Conf_2('Y') \\simeq S^1","username":"Ignotius","description":"This simple animation shows how the space of configurations of two points on the letter 'Y' has the same homotopy type as a circle.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["math","topology","homeomorphism","homotopytype"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Define a global function that will be used later\nfloat distanceToSegment(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * h);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Split the display screen in half\n    vec3 backgroundColor = uv.x < 0.5 ? vec3(0.0) : vec3(1.0);\n\n    // Draw the capital letter 'Y'\n    float Ysize = 0.3;\n    vec2 Ypos = vec2 (0.25, 0.5);\n    vec2 p1 = Ypos + vec2 (0.0, -Ysize / 1.414);\n    vec2 p2 = Ypos + vec2 (-Ysize * 0.5, Ysize * 0.5);\n    vec2 p3 = Ypos + vec2 (Ysize * 0.5, Ysize * 0.5);\n\n    float Ylinewidth = 0.01;\n    float Ydist = min(min(distanceToSegment(uv, p1, Ypos), distanceToSegment(uv, p2, Ypos)), distanceToSegment(uv, p3, Ypos));\n\n    // Draw the thin black annulus\n    float annulusCenter = 0.75;\n    float annulusRadius = 0.15;\n    float annulusThickness = 0.005;\n    float annulusDist = abs(length(uv - vec2(annulusCenter, 0.5)) - annulusRadius);\n    \n    float alpha = 0.0;\n    if (uv.x < 0.5 && Ydist < Ylinewidth) {\n        backgroundColor = vec3(1.0);\n    } else if (uv.x > 0.5 && annulusDist < annulusThickness) {\n        backgroundColor = vec3(0.0);\n    }\n    \n    // Draw two red dots traversing each of the three legs of the 'Y' sequentially\n    float timeFactor = mod(iTime * 0.5, 6.28); // Repeat every 6.28 seconds\n    \n    float leg1 = smoothstep(0.0, (1.0 * 6.28) / 6.0, timeFactor);\n    float leg2 = smoothstep((1.0 * 6.28) / 6.0, (2.0 * 6.28) / 6.0, timeFactor);\n    float leg3 = smoothstep((2.0 * 6.28) / 6.0, (3.0 * 6.28) / 6.0, timeFactor);\n    float leg4 = smoothstep((3.0 * 6.28) / 6.0, (4.0 * 6.28) / 6.0, timeFactor);\n    float leg5 = smoothstep((4.0 * 6.28) / 6.0, (5.0 * 6.28) / 6.0, timeFactor);\n    float leg6 = smoothstep((5.0 * 6.28) / 6.0, 6.28, timeFactor);\n\n    vec2 redDot1 = -Ypos - Ypos - Ypos - p2 - p3 + mix(p1, Ypos, leg1) + mix(Ypos, p2, leg2) + mix(p2, Ypos, leg3) + mix(Ypos, p3, leg4) + mix(p3, Ypos, leg5) + mix(Ypos, p1, leg6);\n    vec2 redDot2 = -Ypos - Ypos - p1 - p2 - p3 + mix(Ypos, p3, leg1) + mix(p3, Ypos, leg2) + mix(Ypos, p1, leg3) + mix(p1, Ypos, leg4) + mix(Ypos, p2, leg5) + mix(p2, Ypos, leg6);\n\n    float redDotRadius = 0.01;\n    float redDotDist1 = length(uv - redDot1);\n    float redDotDist2 = length(uv - redDot2);\n\n\n    // Draw one red point on the right half of the screen\n    float angle =  1.05 * (-leg1 - leg2 - leg3 - leg4 - leg5 - leg6);\n    vec2 redPoint3 = vec2(annulusCenter, 0.5) + vec2(cos(angle), sin(angle)) * annulusRadius;\n    float redPoint3Dist = length(uv - redPoint3);\n\n\n    // Draw a red line segment connecting the two moving red points on the letter 'Y'\n    float connectingLineWidth = 0.005;\n    float connectingLineDist = distanceToSegment(uv, redDot1, redDot2);\n    \n    if (connectingLineDist < connectingLineWidth) {\n        backgroundColor = vec3(0.0, 1.0, 0.0);\n    }\n       if (redDotDist1 < redDotRadius) {\n        backgroundColor = vec3(1.0, 0.0, 0.0);\n    }\n    else if (redDotDist2 < redDotRadius){\n        backgroundColor = vec3(0.0,0.0,1.0);\n    }\n\n    if (redPoint3Dist < redDotRadius) {\n        backgroundColor = vec3(1.0, 0.0, 1.0);\n    }\n\n    fragColor = vec4(backgroundColor, 0.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}