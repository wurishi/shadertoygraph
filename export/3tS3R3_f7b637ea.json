{"ver":"0.1","info":{"id":"3tS3R3","date":"1560357382","viewed":226,"name":"Falling into fractals","username":"MaxMaletin","description":"Simple animated pattern with a couple of sine functions","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    float w = iResolution.x;\n    float h = iResolution.y;\n    \n    float aspectRatio = h / w;\n    \n    uv.y *= aspectRatio;\n    uv.y -= (aspectRatio - 1.) * .5;\n    \n    vec2 cUV = uv - .5;\n    \n    float _WaveA = .15;\n    float _WaveB = 2.1;\n    \n    vec4 _ColorA = vec4(.5, .4, .5,  1);\n    vec4 _ColorB = vec4(.1, .1, .5,  1);\n\n    float w0 = sin(_WaveA / abs(cUV.x) + iTime * _WaveB);\n\tfloat w1 = sin(_WaveA / abs(cUV.y) + iTime * _WaveB);\n\tfloat w2 = sin(_WaveB / abs(cUV.x) + iTime * _WaveA);\n\tfloat w3 = sin(_WaveB / abs(cUV.y) + iTime * _WaveA);\n    \n    vec4 c = _ColorA * w0 * w1 + _ColorB * w2 * w3;\n    \n    // Output to screen\n    fragColor = vec4(c.xyz * clamp(c.a, 0., 1.) ,1.);\n}","name":"Image","description":"","type":"image"}]}