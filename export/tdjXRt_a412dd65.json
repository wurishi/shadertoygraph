{"ver":"0.1","info":{"id":"tdjXRt","date":"1554752406","viewed":148,"name":"Dancing rectangles","username":"jblanper","description":"Music minimal visualizer.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","fvisualization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n//https://gist.github.com/companje/29408948f1e8be54dd5733a74ca49bb9\nfloat map(float value, float min1, float max1, float min2, float max2)\n{\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat fillRect(vec2 uv, vec2 p, float w, float h, float blur) \n{\n    vec2 d = vec2(length(uv.x - p.x), length(uv.y - p.y));\n    \n    float mask = smoothstep(w, w - .002 - blur, d.x) *\n        \t\t smoothstep(h, h - .002 - blur, d.y);\n    return mask;\n}\n\nfloat strokeRect(vec2 uv, vec2 p, float w, float h, float lw, float blur)\n{\n    vec2 d = vec2(length(uv.x - p.x), length(uv.y - p.y));\n    \n    float mask = (smoothstep(w, w - .002 - blur, d.x) *\n                  smoothstep(h, h - .002 - blur, d.y)) -\n                 (smoothstep(w - lw, w - lw - .002 - blur, d.x) *\n        \t\t  smoothstep(h - lw, h - lw - .002 - blur, d.y));\n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= .5;\n    uv.x *= (iResolution.x / iResolution.y);\n    \n    // https://colorhunt.co/palette/142677\n    vec3 blue = vec3(0., .919, .803);\n    vec3 red = vec3(.952, 0., .403);\n    vec3 white = vec3(.917);\n    vec3 black = vec3(.266);\n    \n    // bottom visualization\n    float txt = (uv.x + 1.) * .512;\n    float fftAll = map(texture(iChannel0, vec2(txt, 0.)).x, 0., 1., 0., .03);\n    \n    vec3 bg = mix(black, white, length(uv) - .8);\n    bg = mix(bg, white, vec3(texture(iChannel0, vec2(txt, 0.)).x) * .45);\n    \n    vec3 col = bg;\n    //col += fillRect(uv - vec2(0, fftAll), vec2(0., -.5), 1., fftAll, 0.);\n\n    \n    // rectangles\n    float fft1 = map(texture(iChannel0, vec2(.01, 0.)).x, 0., 1., .08, .4);\n    float fft2 = map(texture(iChannel0, vec2(.17, 0.)).x, 0., 1., 0., .23);\n    float fft3 = map(texture(iChannel0, vec2(.34, 0.)).x, 0., 1., 0., .23);\n    \n    // .4x.4 > .08x.08\n    float fr1 = fillRect(uv, vec2(0.), \n                         fft1,\n                         //sin(iTime) * .16 + .24,\n                         fft1,\n                         //sin(iTime) * .16 + .24,\n                         0.01);\n    // .08x.23 > .08x.08\n    float fr2 = fillRect(uv - vec2(0., fft3 - .23),\n                         //- vec2(0., sin(iTime + PI) * .08 + .16 - .23),\n                         vec2(.16, 0.),\n                         .08, fft3,\n                         //sin(iTime + PI) * .08 + .16,\n                         .008);\n    float fr3 = fillRect(uv + vec2(0., fft2 - .23),\n                         //+ vec2(0., sin(iTime + PI) * .08 + .16 - .23), \n                         vec2(-.16, 0.), \n                         .08, fft2,\n                         //sin(iTime + PI) * .08 + .16,\n                         .008);\n    \n    float fr4 = fillRect(uv, vec2(.16, 0.), .12, .27, 0.05);\n    float fr5 = fillRect(uv, vec2(-.16, 0.), .12, .27, 0.05);\n    \n    float sr1 = strokeRect(uv, vec2(0.), .42, .42, .02, 0.);\n    float sr2 = strokeRect(uv, vec2(.16, 0.), .1, .25, .02, 0.);\n    float sr3 = strokeRect(uv, vec2(-.16, 0.), .1, .25, .02, 0.);\n    \n    col = mix(col.rgb, blue + fract(uv.y + .4) - .5, fr1);\n    col = mix(col.rgb, bg, fr4);\n    col = mix(col.rgb, bg, fr5);\n    col = mix(col.rgb, red + fract(uv.y + .4) - .3, fr2);\n    col = mix(col.rgb, red + fract(uv.y + .4) - .3, fr3);\n    \n    col = mix(col.rgb, white, sr1);\n    col = mix(col.rgb, white, sr2);\n    col = mix(col.rgb, white, sr3);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}