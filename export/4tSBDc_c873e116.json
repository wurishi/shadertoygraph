{"ver":"0.1","info":{"id":"4tSBDc","date":"1517356126","viewed":275,"name":"trippy shape","username":"laserdog","description":"I made a psychedelic pinwheel thing. I couldn't figure out how to get the polygon function to do rounded corners... anyone have ideas?","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["simple","trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tau 6.2831\n#define steps 8.\n#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a)) // col1a col1b col2a col2b\n#define p0 0.5, 0.5, 0.5,  0.5, 0.5, 0.5,  1.0, 1.0, 1.0,  0.0, 0.33, 0.67\t\n\nvec3 palette( in float t, in float a0, in float a1, in float a2, in float b0, in float b1, in float b2,\n              in float c0, in float c1, in float c2,in float d0, in float d1, in float d2)\n{\n    return vec3(a0,a1,a2) + vec3(b0,b1,b2)*cos( tau*(vec3(c0,c1,c2)*t+vec3(d0,d1,d2)) );\n}\n\nfloat polygon(vec2 p, float vertices, float size) \n{\n    float a = atan(p.x, p.y);\n    float b = tau / vertices;\n    return cos(round(a / b) * b - a) * length(p) - size;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 1.4 * (uv * 2. - 1.);\n    uv.x *= iResolution.x / iResolution.y;\n    float len = length(uv);\n    uv *= rot(iTime + 2. *  sin(len + iTime * 2.));\n    float val = 1. - polygon(uv, 6., -.2 + .6 * sin(iTime));\n    \n    vec3 col = palette((ceil(val * steps) / steps * 2.), p0);\n    \n    fragColor.rgb = smoothstep(-.01, .01, val) * col;\n}","name":"Image","description":"","type":"image"}]}