{"ver":"0.1","info":{"id":"DdV3zG","date":"1678749344","viewed":245,"name":"SDF Interpolation Experiment","username":"incre_ment","description":"Attempt at lerp-ing between a circle and a square","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["lerp","learning","interpolaton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circleSDF(vec2 coords, float rad, vec2 offset){\n  return (length(coords-offset) - rad);\n}\n\nfloat boxSDF(vec2 coords, in vec2 b )\n{\n    vec2 d = abs(coords)-b;\n    return (length(max(d,0.)) + min(max(d.x,d.y),0.));\n}\n\n// Easing Function: www.easings.net\nfloat easeInOutCubic(float x){\nreturn x < 0.5 ? 4. * x * x * x : 1. -pow(-2. * x + 2., 3.) / 2.;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   vec2 uv = ( fragCoord - .5* iResolution.xy ) /iResolution.y;\n   \n   float tt = easeInOutCubic(fract(iTime));\n   uv *= rotation(TAU*tt);\n   \n   vec3 col = vec3(0.);\n   \n   float t = .5 + .5*sin(TAU*iTime);\n   \n   //  Loop over different radii.  Can this be done with repetition aka no foor loop?\n   for(float rr = 0.; rr <= .10; rr+=.02){ \n     float cSDF = circleSDF(uv, .25-rr, vec2(0.,0.));   \n     float bSDF = boxSDF(uv, vec2(.10-rr,.10-rr));\n     float lerpSDF = mix(cSDF, bSDF, t); \n     \n     // Outline only, Thanks FN for th iRes.y tip\n     col += smoothstep(1.0/iResolution.y, 0., abs(lerpSDF)-.005);\n   }\n     \n   fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define rotation(angle) mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n\nfloat PI = 3.14159256;\nfloat TAU = 2.0*3.14159256;\n\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}","name":"Common","description":"","type":"common"}]}