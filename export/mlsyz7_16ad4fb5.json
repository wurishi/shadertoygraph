{"ver":"0.1","info":{"id":"mlsyz7","date":"1690552926","viewed":51,"name":"Spline Animation Three","username":"Benji_w","description":".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["curve","splines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 p, vec2 c) {\n    float d = length(p-c);\n    return smoothstep(fwidth(d), 0., d-.015);\n    \n}\n\nfloat Line(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p-a, ba = b-a;\n    float t  = clamp(dot(pa, ba)/dot(ba, ba), 0., 1.);\n    vec2 c = a+ba*t;\n    float d = length(c-p);\n    return smoothstep(fwidth(d), 0., d-0.01);\n}\n\n\nvec2 Curve(vec2 a, vec2 b, vec2 c, vec2 d, float t) {\n    return mix(mix(mix(a, c, t), mix(c, d, t), t), mix(d, b, t), t);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.x;\n\n    vec3 col = vec3(0.0);\n    \n    float t = sin(iTime/2.)*.5+.5;\n    float r = sin(iTime*4.)*.5+.5;\n        r *=.5;\n    \n    vec2\n        A = vec2(-.4, .125), \n        B = vec2(-.3, -.1),\n        C = vec2(-.2, .125),\n        D = vec2(-.1 ,-.1),//(iMouse.xy - iResolution.xy*.5)/iResolution.x,\n        E = vec2(0, .125),\n        F = vec2(.1, -.1),\n        G = vec2(.2, .125),\n        H = vec2(.3, -.1),\n        \n        AB = mix(A, B, t),\n        BC = mix(B, C, t),\n        CD = mix(C, D, t),\n        DE = mix(D, E, t),\n        EF = mix(E, F, t),\n        FG = mix(F, G, t),\n        GH = mix(G, H, t),\n        \n        ABBC = mix(AB, BC, t),\n        BCCD = mix(BC, CD, t),\n        CDDE = mix(CD, DE, t),\n        DEEF = mix(DE, EF, t),\n        EFFG = mix(EF, FG, t),\n        FGGH = mix(FG, GH, t),\n        \n        ABBCBCCD = mix (ABBC, BCCD, t),\n        BCCDCDDE = mix (BCCD, CDDE, t),\n        CDDEDEEF = mix (CDDE, DEEF, t),\n        DEEFEFFG = mix (DEEF, EFFG, t),\n        EFFGFGGH = mix (EFFG, FGGH, t), \n        \n        ABBCBCCDBCCDCDDE = mix (ABBCBCCD, BCCDCDDE,t),\n        BCCDCDDECDDEDEEF = mix (BCCDCDDE, CDDEDEEF,t),\n        CDDEDEEPDEEFEFFG = mix (CDDEDEEF, DEEFEFFG,t),\n        DEEFEFFGEFFGFGGH = mix (DEEFEFFG, EFFGFGGH,t),\n        \n        ABBCBCCDBCCDCDDEBCCDCDDECDDEDEEF = mix (ABBCBCCDBCCDCDDE, BCCDCDDECDDEDEEF,t),\n        BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG = mix (BCCDCDDECDDEDEEF, CDDEDEEPDEEFEFFG,t),\n        CDDEDEEPDEEFEFFGDEEFEFFGEFFGFGGH = mix (CDDEDEEPDEEFEFFG, DEEFEFFGEFFGFGGH,t),\n        \n        ABBCBCCDBCCDCDDEBCCDCDDECDDEDEEFBCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG = mix(ABBCBCCDBCCDCDDEBCCDCDDECDDEDEEF, BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG,t),\n        BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFGCDDEDEEPDEEFEFFGDEEFEFFGEFFGFGGH = mix(BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG, CDDEDEEPDEEFEFFGDEEFEFFGEFFGFGGH,t),\n        \n        FinalPoint = mix(ABBCBCCDBCCDCDDEBCCDCDDECDDEDEEFBCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG, BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFGCDDEDEEPDEEFEFFGDEEFEFFGEFFGFGGH,t);\n       \n        \n    col += vec3(1,0,0)*Circle(uv, A);\n    col += vec3(1,0,0)*Circle(uv, B);\n    col += vec3(1,0,0)*Circle(uv, C);\n    col += vec3(1,0,0)*Circle(uv, D);\n    col += vec3(1,0,0)*Circle(uv, E);\n    col += vec3(1,0,0)*Circle(uv, F);\n    col += vec3(1,0,0)*Circle(uv, G);\n    col += vec3(1,0,0)*Circle(uv, H);\n    \n    col += vec3(0,0,1)*Circle(uv, AB);\n    col += vec3(0,0,1)*Circle(uv, BC);\n    col += vec3(0,0,1)*Circle(uv, CD);\n    col += vec3(0,0,1)*Circle(uv, DE);\n    col += vec3(0,0,1)*Circle(uv, EF);\n    col += vec3(0,0,1)*Circle(uv, FG);\n    col += vec3(0,0,1)*Circle(uv, GH);\n    \n    col += vec3(0,1,0)*Circle(uv, ABBC);\n    col += vec3(0,1,0)*Circle(uv, BCCD);\n    col += vec3(0,1,0)*Circle(uv, CDDE);\n    col += vec3(0,1,0)*Circle(uv, DEEF);\n    col += vec3(0,1,0)*Circle(uv, EFFG);\n    col += vec3(0,1,0)*Circle(uv, FGGH);\n    \n    col += vec3(1,1,0)*Circle(uv, ABBCBCCD);\n    col += vec3(1,1,0)*Circle(uv, BCCDCDDE);\n    col += vec3(1,1,0)*Circle(uv, CDDEDEEF);\n    col += vec3(1,1,0)*Circle(uv, DEEFEFFG);\n    col += vec3(1,1,0)*Circle(uv, EFFGFGGH);\n    \n    col += vec3(1,0,1)*Circle(uv, ABBCBCCDBCCDCDDE);\n    col += vec3(1,0,1)*Circle(uv, BCCDCDDECDDEDEEF);\n    col += vec3(1,0,1)*Circle(uv, CDDEDEEPDEEFEFFG);\n    col += vec3(1,0,1)*Circle(uv, DEEFEFFGEFFGFGGH);\n    \n    //col += vec3(0,1,1)*Circle(uv, ABBCBCCDBCCDCDDEBCCDCDDECDDEDEEF);\n    //col += vec3(0,1,1)*Circle(uv, BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG);\n    //col += vec3(0,1,1)*Circle(uv, CDDEDEEPDEEFEFFGDEEFEFFGEFFGFGGH);\n    \n    //col += vec3(1,.5,1)*Circle(uv, ABBCBCCDBCCDCDDEBCCDCDDECDDEDEEFBCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG);\n    //col += vec3(1,.5,1)*Circle(uv, BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFGCDDEDEEPDEEFEFFGDEEFEFFGEFFGFGGH);\n    \n    //col += vec3(1,1,1)*Circle(uv, FinalPoint);\n    \n    \n    //col += vec3(1,1,1)*Line(uv, A, B);\n    //col += vec3(1,1,1)*Line(uv, B, C);\n    //col += vec3(1,1,1)*Line(uv, C, D);\n    //col += vec3(1,1,1)*Line(uv, D, E);\n    //col += vec3(1,1,1)*Line(uv, E, F);\n    //col += vec3(1,1,1)*Line(uv, F, G);\n    //col += vec3(1,1,1)*Line(uv, G, H);\n    \n    //col += vec3(1,1,1)*Line(uv, AB, BC);\n    //col += vec3(1,1,1)*Line(uv, BC, CD);\n    //col += vec3(1,1,1)*Line(uv, CD, DE);\n    //col += vec3(1,1,1)*Line(uv, DE, EF);\n    //col += vec3(1,1,1)*Line(uv, EF, FG);\n    //col += vec3(1,1,1)*Line(uv, FG, GH);\n    \n    //col += vec3(0,0,1)*Line(uv, ABBC, BCCD);\n    //col += vec3(0,0,1)*Line(uv, BCCD, CDDE);\n    //col += vec3(0,0,1)*Line(uv, CDDE, DEEF);\n    //col += vec3(0,0,1)*Line(uv, DEEF, EFFG);\n    //col += vec3(0,0,1)*Line(uv, EFFG, FGGH);\n    \n    //col += vec3(1,1,0)*Line(uv, ABBCBCCD, BCCDCDDE);\n    //col += vec3(0,1,0)*Line(uv, BCCDCDDE, CDDEDEEF);\n    //col += vec3(1,0,1)*Line(uv, CDDEDEEF, DEEFEFFG);\n    //col += vec3(0,0,1)*Line(uv, DEEFEFFG, EFFGFGGH);\n    \n    //col += vec3(1,1,1)*Line(uv, ABBCBCCDBCCDCDDE, BCCDCDDECDDEDEEF);\n    //col += vec3(1,1,1)*Line(uv, BCCDCDDECDDEDEEF, CDDEDEEPDEEFEFFG);\n    //col += vec3(1,1,1)*Line(uv, CDDEDEEPDEEFEFFG, DEEFEFFGEFFGFGGH);\n    \n    //col += vec3(1,1,1)*Line(uv, ABBCBCCDBCCDCDDEBCCDCDDECDDEDEEF, BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG);\n    //col += vec3(1,1,1)*Line(uv, BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG, CDDEDEEPDEEFEFFGDEEFEFFGEFFGFGGH);\n    \n    //col += vec3(1,1,0)*Line(uv, ABBCBCCDBCCDCDDEBCCDCDDECDDEDEEFBCCDCDDECDDEDEEFCDDEDEEPDEEFEFFG, BCCDCDDECDDEDEEFCDDEDEEPDEEFEFFGCDDEDEEPDEEFEFFGDEEFEFFGEFFGFGGH);\n\n    \n    int NUM_SEGS = 128;\n    \n    \n    vec2 P, PP=A;\n    for(int i=1; i<=NUM_SEGS; i++) {\n      t = float(i)/float(NUM_SEGS);\n      P = Curve(A, B, C, D,t);\n      //col +=  vec3(1,0,0)*Line(uv, P, PP);\n      PP = P;\n    }\n    \n    \n   \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}