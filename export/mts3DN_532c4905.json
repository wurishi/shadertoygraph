{"ver":"0.1","info":{"id":"mts3DN","date":"1671807879","viewed":193,"name":"less bits effect","username":"SONENEIS","description":"nothing here.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","ray","round","cube","pixel","bit","bit","dark","pixelated","purpple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){return mat2(cos(a),-sin(a),sin(a),cos(a));}\n\nconst float pixBits = 32.0;\nconst float colBits = 8.0;\n\nvoid mainImage(out vec4 fragColor,vec2 fragCoord){\n  vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n  vec3 col = vec3(0.0);\n  \n  uv = floor(uv * pixBits) / pixBits;\n  \n  {\n    float d = 0.0;\n    for(float i=0.0;i<16.0;i++){\n      vec3 p = vec3(0.0,0.0,3.0) + normalize(vec3(uv*0.6,-2.0)) * d;\n      p.yz *= rot(iTime); p.zx *= rot(iTime); p.xy *= rot(iTime);\n      float h = length(max(abs(p)-0.25,0.0)) - 0.25;\n      d += h;\n      if(h < 0.001 || d > 4.0) break;\n    }\n    if(d < 4.0){\n      vec3 p = vec3(0.0,0.0,3.0) + normalize(vec3(uv,-2.0)) * d;\n      col = vec3(1,1,2) * p.z;\n    }\n  }\n\n  col = floor(col * colBits) / colBits;\n\n  fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}