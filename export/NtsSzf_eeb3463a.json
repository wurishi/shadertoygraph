{"ver":"0.1","info":{"id":"NtsSzf","date":"1626636504","viewed":231,"name":"Aliasing zoom","username":"Alexwing","description":"Explore the cosine aliasing with the mouse.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["mouse"],"hasliked":0,"parentid":"ld2yz3","parentname":"First alexwing"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define VELOCITY    500.0\n#define ANTI_ALIASING_FACTOR    0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy; //We obtain our coordinates for the current pixel\n    \n\n    xy.x = xy.x / (iResolution.x-iMouse.x); //We divide the coordinates by the screen size \n    xy.y = xy.y / (iResolution.y-iMouse.y);\n    \n    // Now x is 0 for the leftmost pixel, and 1 for the rightmost pixel\n    vec4 solidRed = vec4(0,0.0,0.0,0.0); //This is actually black right now\n    \n\tif(iMouse.z>0.0 ) { // button is down\n     fragCoord -= 0.5*(fragColor.xy=(iMouse.xy*2.0));\n    }else{\n     fragCoord -= 0.5*(fragColor.xy=(iResolution.xy));\n    }\n    \n    // inversion\n    fragCoord = cos(iTime*  fragCoord*VELOCITY* xy /dot(fragCoord,fragCoord)) ;\n        \n    // anti-aliasing and color post\n\tsolidRed += ANTI_ALIASING_FACTOR-  fragCoord.x / fwidth(fragCoord.x  -fragColor );      \n    \n    //solidRed.x += ANTI_ALIASING_FACTOR-  fragCoord.x / fwidth(fragCoord  -xy ).x;       \n   // solidRed.y += ANTI_ALIASING_FACTOR-  fragCoord.x / fwidth(fragCoord  -xy ).y;      \n   // solidRed.z += ANTI_ALIASING_FACTOR-  fragCoord.x / fwidth(fragCoord  -xy ).x;  \n    \n\n    fragColor = solidRed;\n    \n    \n}","name":"Image","description":"","type":"image"}]}