{"ver":"0.1","info":{"id":"ltK3DR","date":"1474243004","viewed":1347,"name":"Voronoi Raymarching","username":"rory618","description":"Raymarch through 3d space, using 3D Voronoi for distance map. Move around and look using the mouse.","likes":70,"published":1,"flags":32,"usePreview":0,"tags":["3d","voronoi","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n\tfragColor = texture(iChannel0,fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = ((fragCoord.xy+hash33(vec3(fragCoord.xy,iFrame)).xy)-iResolution.xy/2.) / iResolution.xx;\n    vec3 p = iTime*vec3(.35, .47, .79)+vec3(iMouse.xy/50., .4);\n    float l = .0;\n    vec3 d = vec3(.36, .48, .80);\n    vec3 r = vec3(0.48, -0.36, 0);\n    vec3 rd = normalize(r*uv.x+cross(r,d)*uv.y + d*(1.-.6*iMouse.x/ iResolution.x));\n    for(int i = 0; i < 40; i++){\n        float closest = 1.;\n        for(int nx = -1; nx < 1; nx++){\n        for(int ny = -1; ny < 1; ny++){\n        for(int nz = -1; nz < 1; nz++){\n            vec3 np = ceil(p+l*rd) + vec3(nx,ny,nz);\n            np += (hash33(np)-.5)*.8*smoothstep(-.5,.5,clamp(sin(.5*iTime),-.5,.5));\n            closest = min(closest, length(p+l*rd-np));\n            //Cubes:\n            //closest = min(closest, dot(abs(p+l*rd-np),vec3(.5)));\n        }\n        }\n        }\n        l += .8*closest-(l+1.)/100.;\n    }\n    l=(l*l+5.)/(l+1.);\n\tfragColor = .7*texture(iChannel0,fragCoord.xy/iResolution.xy) + .3*vec4(0.5+0.5*sin(l*vec3(.3,.4,.5)),1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}