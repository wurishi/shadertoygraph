{"ver":"0.1","info":{"id":"l3VXWh","date":"1719915536","viewed":64,"name":"ShaderArtSus","username":"sushihunter","description":"ShaderArt intro","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t)\n{\n    vec3 a = vec3(0.838, 0.388, 0.558);\n    vec3 b = vec3(0.500, 0.500, 0.500);\n    vec3 c = vec3(1.838, 1.000, 1.000);\n    vec3 d = vec3(-0.032, -0.922, 0.667);\n    \n    return a + b * cos(6.28318 * (c * t * d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoor)\n{\n    vec2 uv = (fragCoor * 2.0 - iResolution.xy)/ iResolution.y;\n    \n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    for(float i = 0.0; i < 3.0; i++)\n    {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n        vec3 color = palette(length(uv0) + iTime * 1.0);\n        \n        d = sin(d * 8. + iTime * 2.0);\n        d = abs(d);\n\n        d= 0.05/d;\n\n        finalColor += color * d;\n    }\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}