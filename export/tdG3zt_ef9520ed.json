{"ver":"0.1","info":{"id":"tdG3zt","date":"1570807431","viewed":350,"name":"koch snowflake visuals dark","username":"henrybergstrom","description":"Kock snowflake for @gr__or","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["snowflake","koch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(in float angle) {\n\treturn vec2(sin(angle), cos(angle));\n}\n\nmat2 Rot(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5 * iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    // annoying rotation\n    //uv *= Rot(3.1415 * 0.5* sin(iTime*0.1) * abs(dot(uv,uv))); \n    uv *= 2.0;\n    \n    vec3 col = vec3(0);\n    \n    uv.x = abs(uv.x); // reflect\n    uv.y += 0.5 * tan((5./6.) * 3.1415); // centralize\n    \n    vec2 n = N((5./6.) * 3.1415);\n    float d = dot(uv-vec2(0.5, 0.0), n);\n  \n    // bend space\n    uv -= n * max(0.0, d)*2.0;\n    \n    uv.x += 0.5;\n    float scale = 1.0;\n    n = N((2.0/3.0) * 3.1415);\n    for (int i = 0; i < 10; i++) {\n        uv *= 3.0;\n        scale *= 3.0;\n        uv.x -= 1.5;\n        uv.x = abs(uv.x);\n        uv.x -= 0.5;\n        uv -= n * min(0.0, dot(uv, n)) * 2.0;  // ?\n    }\n\t\n    \n    d = length(uv - vec2(clamp(uv.x, -1.0, 1.0), 0.0));\n    uv /= scale;\n    col -= smoothstep(1./iResolution.y, 0.5, d/scale); // line\n    float modifer = sin(iTime*0.1) + mouse.x * sin(iTime * 0.03);\n    col += texture(iChannel1, uv * modifer).rgb; // colors\n \t//col += texture(iChannel0, uv).rgb;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}