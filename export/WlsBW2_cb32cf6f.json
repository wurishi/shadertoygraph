{"ver":"0.1","info":{"id":"WlsBW2","date":"1597967304","viewed":332,"name":"rounded pixels 2","username":"sympou","description":"another attempt !\n","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["roundpixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//thanks FabriceNeyret2 for optimisations !\n\nfloat pixSize = 15.;\n\n#define lum(pix) dot( pix, vec4(.3,.59,.11,0) )  //luminance\n#define T(x,y)   texture( iChannel0, uv2 + vec2(x,y) )        \n\nvoid mainImage( out vec4 O,  vec2 u ) {\n\n    vec2 R = iResolution.xy,\n         U = u / pixSize,\n       div = pixSize / R,\n       uv2 = floor(U)*div,\n      diff = fract(U);\n\t\n    //checkerboard pattern : half of the pixels are not changed\n    if (fract( dot(floor(U),vec2(.5)) ) < .5) \n        { O = T(0,0); return; }\n\n    // neighbors\n\tvec4[4] pix = vec4[4]( T( 0,     div.y),\n                           T( div.x, 0    ),\n                           T( 0,    -div.y),\n                           T(-div.x, 0    ) );\n    \n    //where is the biggest contrast ?   \n    int comp = int (  abs( lum(pix[0]) - lum(pix[2]) )\n                    > abs( lum(pix[1]) - lum(pix[3]) ) );\n    vec2   d = abs(diff-.5) - vec2(1-comp,comp); // offset = 0,1 or 1,0\n    ivec2  v = ivec2( vec2(3.5,2.5) - diff*2. );\n   \n    O = dot(d,d) < .5 \n        ? pix[ v[comp] ]                                 // 2 circles on the borders\n        : mix( pix[comp+2], pix[comp] , diff[1-comp] );  // a gradient in between        \n}","name":"Image","description":"","type":"image"}]}