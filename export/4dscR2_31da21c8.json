{"ver":"0.1","info":{"id":"4dscR2","date":"1515686456","viewed":591,"name":"Greetings, Still","username":"Zavie","description":"This shader draws the logo of the German demogroup \"Still\".\n\nIt served as a prototype for a procedural texture during the creation of the 64kB intro \"H - Immersion\". The logo appeared, hidden in plain sight, as a nod to the group.\n","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["demoscene","logo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nThis shader draws the logo of the German demogroup \"Still\".\n\nIt served as a prototype for a procedural texture during the\ncreation of the 64kB intro \"H - Immersion\". The logo appeared,\nhidden in plain sight, as a nod to the group.\n\n\nH - Immersion, by Ctrl-Alt-Test:\n > http://www.ctrl-alt-test.fr/?page_id=444\n > https://www.youtube.com/watch?v=27PN1SsXbjM\n   (logo visible at 2mn28s)\n\n\nStill:\n > http://www.still-scene.org/\n > https://vimeo.com/122704394\n\n-- \nZavie / Ctrl-Alt-Test\n\n*/\n\nvec3 debugDistance(float d, vec3 color)\n{\n    float iso =\n        smoothstep(0.92, 0.98, abs(fract(d) * 2. - 1.)) +\n        smoothstep(0.8, 0.95, abs(fract(5.*d) * 2. - 1.))*0.5;\n    return mix(vec3(1.), color, iso)* mix(0.8, 1., float(d > 0.)) * smoothstep(0.02,0.06, abs(d));\n}\n\nfloat Box(vec2 p, vec2 size)\n{\n    vec2 u = abs(p) - size;\n    return max(u.x, u.y);\n}\n\nfloat StillLogo(vec2 p)\n{\n    float h = 0.15;\n\n    vec2 pIII = p;\n    pIII.x = (fract(pIII.x * 5. + 0.5)-0.5) / 5.;\n    float d = Box(pIII, vec2(0.33/5., h));\n\n    d = max(d, -Box(p + vec2(3./5., 0.), vec2(0.1, h*1.2)));\n    d = max(d, -Box(p + vec2(2./5., h*-0.7), vec2(0.1, h*0.5)));\n    d = max(d, -Box(p + vec2(0., h*-0.4), vec2(0.1, h*0.2)));\n    d = min(d, Box(p + vec2(1./5., 0.), vec2(1./5., h*0.2)));\n    d = min(d, Box(p + vec2(2.5/5., h*0.8), vec2(0.5/5., h*0.2)));\n\n    d = max(d, Box(p + vec2(1./10., 0.), vec2(0.6, 0.2)));\n    return d;\n}\n\nfloat StillStill(vec2 p)\n{\n    p = fract(p);\n    float d = StillLogo(1.6 * (p - vec2(0.81, 0.2)));\n    d = min(d, StillLogo(1.6 * (1. - p - vec2(0.81, 0.8))));\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n\n#if 1\n    float d = StillLogo(uv - vec2(0.75, 0.5));\n#else\n    float d = StillStill(uv);\n#endif\n\n    vec3 color = debugDistance(10.*d, vec3(0.8, 0.5, 1.));\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}