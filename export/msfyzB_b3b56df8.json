{"ver":"0.1","info":{"id":"msfyzB","date":"1686918074","viewed":54,"name":"Learning glsl - mandelbrot zoom","username":"PMYR","description":"Learning glsl - how to use double precision vecs in glsl?","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette(float t){\n    vec3 a = vec3(0.588, 1.528, -0.172);\n    vec3 b = vec3(0.338, 1.328, 1.098);\n    vec3 c = vec3(1.118, 0.048, 0.498);\n    vec3 d = vec3(1.728, 0.338, -0.342);\n    return 0.3/(a + b * cos(t * c + iTime * 1.0 * d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord*2.4 - 1.2 * iResolution.xy) / iResolution.y ;\n    uv = vec2(uv.x - 0.6, uv.y);\n    \n    float e = exp(1.0);\n    \n    vec2 zoomPoint = vec2(-0.10109636384562, 0.95628651080914);\n    mat3 zoomMatrix;\n    mat3 translateMatrix;\n    mat3 negTranslateMatrix;\n    translateMatrix[0] = vec3(1.0, 0.0, 0.0);\n    translateMatrix[1] = vec3(0.0, 1.0, 0.0);\n    translateMatrix[2] = vec3(zoomPoint ,1.0);\n    negTranslateMatrix[0] = vec3(1.0, 0.0, 0.0);\n    negTranslateMatrix[1] = vec3(0.0, 1.0, 0.0);\n    negTranslateMatrix[2] = vec3(-1.0 * zoomPoint ,1.0);\n    zoomMatrix[0] = vec3(10.0/(exp(iTime) + 10.0), 0.0, 0.0);\n    zoomMatrix[1] = vec3(0.0, 10.0/(exp(iTime) + 10.0), 0.0);\n    zoomMatrix[2] = vec3(0.0, 0.0, 1.0);\n    uv = (translateMatrix * zoomMatrix * negTranslateMatrix * vec3(uv, 1.0)).xy;\n\n\n    float real = 0.0;\n    float imag = 0.0;\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    for (float i = 0.0; i < 1000.0; i++){\n        float newReal = real * real - imag * imag + uv.x;\n        float newImag = 2.0 * real * imag + uv.y;\n        real = newReal;\n        imag = newImag;\n        if (length(vec2(real, imag)) > 2.0) {\n            // col = vec3(0.0, 0.0, 0.0);\n            col = palette(i);\n            break;\n        }\n    }\n    fragColor = vec4(col, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}