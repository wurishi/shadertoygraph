{"ver":"0.1","info":{"id":"flcyD8","date":"1659688369","viewed":62,"name":"Very simple audio visualization","username":"Mablung","description":"It's a very simple audio visualization","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cl(float a){\n    return min( max(0.0, a), 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy/2.0)/iResolution.y*2.0;\n\n    // Time varying pixel color\n    vec4 col = vec4(0.0, 0.0, 0.0, 0.0) ;\n    \n    for( float i = 0.0; i < 1.0; i += 0.01 ){\n        if( length(uv) < pow( texture( iChannel0, vec2(i, 0) ).x + 0.1 , 2.0) * ( 1.0 + 0.1*sin( 20.0*atan(uv.x, uv.y) + 5.0*iTime ) ) ) {\n            col += vec4((sin(10.0*i) + 1.0)*0.01, (sin(13.0*i) + 1.0)*0.01, (sin(7.0*i) + 1.0)*0.01, 0.01);\n        }\n    }\n\n    // Output to screen\n    \n    float d = pow( length(uv), 5.0);\n    \n    col -= vec4(d,d,d,d);\n    \n    float b = 1.0/(d*1000000.0);\n    \n    col += vec4(b, b, b, b);\n    \n    col = vec4( cl(col.x), cl(col.y), cl(col.z), cl(col.w) );\n    \n    col += vec4(0.1333, 0.1333, 0.1333, 0.1333);\n    \n    //if( d > 1.0 ) {\n    //    col = vec4(1.0,0.0,1.0,0.0);\n    //}\n    \n    fragColor = col;\n    \n    \n}","name":"Image","description":"","type":"image"}]}