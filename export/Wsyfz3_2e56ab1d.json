{"ver":"0.1","info":{"id":"Wsyfz3","date":"1607593433","viewed":46,"name":"ssraytrace","username":"shiauming","description":"raytrace","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","previewfilepath":"/media/ap/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nstruct camera_s\n{\n\tfloat fov;\n\tvec3 eye;\n    vec3 front;\n    vec3 up;\n    vec3 right;\n    vec3 refup;\n};\n\nstruct ray_s\n{\n\tvec3 o;\n    vec3 dir;\n};\n\nstruct plane_s\n{\n\tfloat d;\n\tvec3 pos;\n    vec3 normal;\n};\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n\n\n\tcamera_s camera;\n    camera.eye = vec3(0.0, 0.0, 15.0);\n    camera.fov = 90.0f;\n    camera.front = normalize(vec3(0.0, -5.0, 0.0) - camera.eye);\n    camera.refup = vec3(0.0, 1.0, 0.0);\n    camera.right = normalize(cross(camera.front,camera.refup));\n    camera.up = normalize(cross(camera.right, camera.front));\n    \n    ray_s ray;\n    ray.o = camera.eye;\n    float fovscale = tan(camera.fov * 180.0 / 3.1415926 * 0.5) * 2.0;\n    vec3 r = camera.right * (uv.x - 0.5) * fovscale * aspect;\n    vec3 u = camera.up * (uv.y - 0.5) * fovscale;\n    ray.dir = normalize(camera.front + r + u);\n\t\n    plane_s plane;\n    plane.d = 5.0;\n   \tplane.normal = vec3(0.0, 1.0, 0.0);\n    plane.pos = plane.normal * plane.d;\n    \n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    float a = dot(ray.dir, plane.normal);\n    if(a != 0.0)\n    {\n    \tfloat b = dot(plane.normal, (ray.o - plane.pos));\n        float dist = -b / a;\n        vec3 pos = ray.o + ray.dir * dist;\n        if(pos.x >= -15.0 && pos.x <= 15.0 && pos.z >= 0.0 && pos.z <= 10.0)\n        {\n        \tvec2 uv = vec2((pos.x + 15.0) / 30.0, (pos.z) / 10.0);\n        \tcol = vec3(uv.x, 0.0, uv.y);\n            \n            col = vec3(texture(iChannel0, uv) + texture(iChannel1, uv));\n        }\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}