{"ver":"0.1","info":{"id":"wdGcD3","date":"1603922760","viewed":267,"name":"dot9999","username":"tripzilch","description":"yeaaaa GLSL stippling","likes":5,"published":1,"flags":2,"usePreview":0,"tags":["flarmclaarm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PHI1 0.6180339887498949\n#define PHI4096 6627.4672179195695\n\nvec2 hash(vec2 seed)\n{\n    return fract(sin(seed - PHI1 * seed.yx)*PHI4096);\n}\n\nfloat stip(vec2 p, float r) {\n\treturn smoothstep(.9 * r, r, length(p));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.y;\n    float R = 32.0;\n\n//    float sa = hash( dot( fragCoord, vec2(12.9898, 78.233) ) + 1113.1*hash(iTime));\n    \n    float cam = smoothstep(.6, .05, dot(texture( iChannel0, fragCoord / iResolution.xy).xyz, vec3(.3,.6,.1)));\n    float col = 1.0;\n    for (float i = -1.; i < 2.; i++) {\n        for (float j = -1.; j < 2.; j++) {\n            vec2 ij = vec2(i, j);\n            for (float k = 0.; k < 4.; k++) {\n                float t = (1. + k) * 0.25;\n                vec2 xf = uv * R + vec2(0, iTime * t * 1.);\n                vec2 xi = floor(xf);\n                xf -= xi + .5;\n                vec2 off = 1. * (hash(xi + ij + t * vec2(2223.5, 3125.0)) - .5);\n                col *= stip(xf + off - ij, cam * .7 * t * t);\n            }\n        }\n    }\n    // Output to screen\n    fragColor = vec4(col,col,col,1.0);\n}","name":"Image","description":"","type":"image"}]}