{"ver":"0.1","info":{"id":"DdSGzm","date":"1667359172","viewed":76,"name":"Fog Line","username":"janeiyang","description":"Fog line","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(in float a){float c = cos(a), s = sin(a);return mat2(c,s,-s,c);}\n\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    float z = 0.7f;\n    float res = 0.0f;\n    vec2 p = (fragCoord  - iResolution.xy * 0.5f)* 0.015f;\n    float trk = 1.0f;\n    \n    for(int i = 0; i < 5; ++i)\n    {\n        p += cos(p.yx * trk * 0.9) * z;\n        res += abs(dot(cos(p), sin(p.yx))) * 0.3f;\n        z *= 0.77f;\n        p *= -rot(iTime * 0.1f * trk) * 0.9;\n        trk *= 1.3f;\n    }\n\n    // tone mapping\n    res = 1. - res / (res + 1.0f);\n    \n    vec3 col = vec3(res, res, res);//palette(res * 0.8f, vec3(0.5, 0.5, 0.5), vec3(0.5, 0.5, 0.5), vec3(1.0f, 1.0f ,0.5f), vec3(0.80, 0.90, 0.30));\n    \n    col = pow(col, vec3(0.5f)) * 0.7;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}