{"ver":"0.1","info":{"id":"dsB3RW","date":"1667290152","viewed":139,"name":"Mandelbrot Set(simple 2d)","username":"kanayuki","description":"Mandelbrot Set","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.y;\n    //float a0 = uv.x * 3. - 2.5;\n    //float b0 = uv.y * 3. -1.5;\n    \n    vec2 uv = (2.*fragCoord-iResolution.y)/iResolution.y;\n    float a0 = uv.x-1.;\n    float b0 = uv.y;\n    \n    \n    float a = a0;\n    float b = b0;\n\n    for(int k=0; k<500; k++){\n\n      float as = a0 + a*a-b*b;\n\n      b = b0 + 2.*a*b;\n\n      a = as;\n\n      if( a*a + b*b > 3. ){\n\n        // colour = factor(k);\n        \n        vec3 col = vec3(255,0,255);\n\n        // plotPointAt( a0, b0 );\n        \n        fragColor = vec4(col,1.0);\n\n        return;\n\n      }\n\n    }\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n   \n}","name":"Image","description":"","type":"image"}]}