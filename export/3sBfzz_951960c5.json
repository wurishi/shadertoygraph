{"ver":"0.1","info":{"id":"3sBfzz","date":"1589337822","viewed":201,"name":"Volume Rendering Test","username":"okdalto","description":"Volume Rendering test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["volumerendering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sdf(vec3 p){\n    return length(p) - 3.0;\n}\n\n\nvec4 sampleDensity(vec3 p){\n    float density = clamp(-sdf(p) * 1000.0, 0.0, 1.0);\n    vec3 color = clamp(abs(p * 0.3), 0.0, 1.0);\n    return vec4(color, density);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy - 0.5) * 2.0;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = vec3(0.0);\n    vec3 cameraPos = vec3(cos(iTime), sin(iTime), sin(iTime)) * 5.0;\n    vec3 rayPos = cameraPos;\n    vec3 up = vec3(0,1,0);\n    vec3 front = normalize(-cameraPos);\n    vec3 left = normalize(cross(up, front));\n    up = normalize(cross(front, left));\n    \n    vec3 rayDir = normalize(up * uv.y + left * uv.x + front);\n    \n    float deltaStep = 0.05;\n    vec3 accCol = vec3(0.0);\n    float accDensity = 0.0;\n    \n    for(int i = 0; i < 128; i++){\n        vec4 raw = sampleDensity(rayPos);\n        float density = raw.w;\n        vec3 volumeCol = raw.xyz;\n        \n        accCol += exp(-accDensity) * (1.0 - exp(-density * deltaStep)) * volumeCol;\n        accDensity += density * deltaStep;\n        rayPos = cameraPos + rayDir * float(i) * deltaStep;\n    }\n\n    // Output to screen\n    fragColor = vec4(accCol, 1.0);\n}","name":"Image","description":"","type":"image"}]}