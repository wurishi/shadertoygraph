{"ver":"0.1","info":{"id":"sdjyDV","date":"1644163235","viewed":272,"name":"procedural marble","username":"Angramme","description":"f","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["f"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    \n    for(int i=0; i<5; i++){\n        uv += vec2(.37, -.3);\n        uv = vec2(sin(uv.x*6.+uv.y*9.8)*.5+.5, cos(uv.y*6.68+uv.x*7.3)*.5*.5);\n    }\n    \n    float x = smoothstep(.4, .9, sin((uv.x-uv.y)*2.*3.1415)*.5+.5);\n    vec3 col = mix(vec3(27./255., 20./255., 33./255.), vec3(225./255., 253./255., 249./255.), x);\n    \n    // float y = smoothstep(.4, .9, sin(iTime+ (uv.x+uv.y)*2.*3.1415)*.5+.5);\n    // col += .5*mix(vec3(27./255., 20./255., 33./255.), vec3(225./255., 253./255., 249./255.), y);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}