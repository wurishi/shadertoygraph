{"ver":"0.1","info":{"id":"4lXyWX","date":"1506544760","viewed":609,"name":"Fat Mouse","username":"lordbunson","description":"Draws a mouse pointer using basic geometric shapes. Click and drag to update the mouse position.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["mouse","shapes","input"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 drawColor = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec4 bgColor = vec4(1.0, 1.0, 1.0, 1.0);\n\nfloat drawTriangle(vec2 position, vec2 uv, float size, float base){\n\treturn step(distance(position.x, uv.x), -size * base * (uv.y - position.y)) * step(distance(position.y, uv.y), size);\n}\n\nfloat drawSquare(vec2 position, vec2 uv, float size){\n    return step(distance(position.x,uv.x), size) * step(distance(position.y,uv.y), size);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float mx = max(iResolution.x, iResolution.y);\n\tvec2 uv = fragCoord.xy / mx;\n    vec2 nMouse =  distance(iMouse.xy, vec2(0.0, 0.0)) > 0.0 ? iMouse.xy / mx: vec2(0.5, 0.35);\n    vec2 offset = vec2(nMouse.x, nMouse.y - 0.06);\n\tvec4 tri = drawColor * drawTriangle(nMouse, uv, 0.05, 10.0);\n    vec4 square = drawColor * drawSquare(offset, uv, 0.01);\n    \n    vec4 shape = tri + square;\n\n\tfragColor = mix(bgColor, shape, shape.a);\n}","name":"Image","description":"","type":"image"}]}