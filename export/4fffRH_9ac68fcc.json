{"ver":"0.1","info":{"id":"4fffRH","date":"1723309792","viewed":102,"name":"Gaussian vs Mean Curvature","username":"luckyballa","description":"just trying to figure out the right way\nthis paper seems helpful https://u.cs.biu.ac.il/~katzmik/goldman05.pdf","likes":9,"published":1,"flags":16,"usePreview":0,"tags":["sdf","gaussian","curvature","differential"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rotate(vec3 p, vec3 axis, float angle) {\n    return mix(dot(p, axis) * axis, p, cos(angle)) + sin(angle) * cross(axis, p);\n}\n\nvec3 calcNormal(vec3 p) {\n    const vec2 e = vec2(0.001, 0);\n    return normalize(vec3(\n        scene(p + e.xyy) - scene(p - e.xyy),\n        scene(p + e.yxy) - scene(p - e.yxy),\n        scene(p + e.yyx) - scene(p - e.yyx)\n    ));\n}\n\n//https://www.shadertoy.com/view/dlXBWN\nfloat calcGaussianCurvature(vec3 ro, float eps) {    \n    vec3 p = vec3(1, 1, 1) * eps;\n    vec3 q = vec3(1, -1, -1) * eps;\n    vec3 r = vec3(-1, -1, 1) * eps;\n    vec3 s = vec3(-1, 1, -1) * eps;\n    \n    float s1 = scene(ro + p + p);\n    float s2 = scene(ro + p + q);\n    float s3 = scene(ro + p + r);\n    float s4 = scene(ro + p + s);\n    float s5 = scene(ro + q + q);\n    float s6 = scene(ro + q + r);\n    float s7 = scene(ro + q + s);\n    float s8 = scene(ro + r + r);\n    float s9 = scene(ro + r + s);\n    float s10 = scene(ro + s + s);\n    \n    mat3 H;    \n    vec3 P = vec3(1, 1, 1);\n    vec3 Q = vec3(1, -1, -1);\n    vec3 R = vec3(-1, -1, 1);\n    vec3 S = vec3(-1, 1, -1);\n    \n    H[0] = (P * (s1 * P + s2 * Q + s3 * R + s4 * S).x\n          + Q * (s2 * P + s5 * Q + s6 * R + s7 * S).x\n          + R * (s3 * P + s6 * Q + s8 * R + s9 * S).x\n          + S * (s4 * P + s7 * Q + s9 * R + s10 * S).x);\n    H[1] = (P * (s1 * P + s2 * Q + s3 * R + s4 * S).y\n          + Q * (s2 * P + s5 * Q + s6 * R + s7 * S).y\n          + R * (s3 * P + s6 * Q + s8 * R + s9 * S).y\n          + S * (s4 * P + s7 * Q + s9 * R + s10 * S).y);\n    H[2] = (P * (s1 * P + s2 * Q + s3 * R + s4 * S).z\n          + Q * (s2 * P + s5 * Q + s6 * R + s7 * S).z\n          + R * (s3 * P + s6 * Q + s8 * R + s9 * S).z\n          + S * (s4 * P + s7 * Q + s9 * R + s10 * S).z);\n    \n    H /= 2.0 * eps;\n    \n    vec3 dDE = (s1 * P + s5 * Q + s8 * R + s10 * S);\n    \n    mat4 K = mat4(\n        H[0][0], H[1][0], H[2][0], dDE.x,\n        H[0][1], H[1][1], H[2][1], dDE.y,\n        H[0][2], H[1][2], H[2][2], dDE.z,\n        dDE.x, dDE.y, dDE.z, 0.0\n    );\n    \n    return -determinant(K) / pow(dot(dDE, dDE), 2.0);\n}\n\n\n//https://www.shadertoy.com/view/Xts3WM\nfloat calcMeanCurvature(vec3 p, float w) {\n    vec3 e = vec3(w, 0, 0);\n    float t1 = scene(p + e.xyy), t2 = scene(p - e.xyy);\n    float t3 = scene(p + e.yxy), t4 = scene(p - e.yxy);\n    float t5 = scene(p + e.yyx), t6 = scene(p - e.yyx);\n    return 0.25 / w * (t1 + t2 + t3 + t4 + t5 + t6 - 6.0 * scene(p));\n}\n\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 mouse = (iMouse.xy - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec3 rd = normalize(vec3(1.5, uv));\n    vec3 ro = vec3(-3.0, 0.0, 0.0);\n    \n    float yrot = 0.0;\n    float zrot = -2.0 + iTime * 0.2;\n    if (iMouse.z > 0.0) {\n        yrot += -4.0 * mouse.y;\n        zrot = 4.0 * mouse.x;\n    }\n    rd = rotate(rd, vec3(0, 1, 0), yrot);\n    ro = rotate(ro, vec3(0, 1, 0), yrot);\n    rd = rotate(rd, vec3(0, 0, 1), zrot);\n    ro = rotate(ro, vec3(0, 0, 1), zrot);\n    \n    vec3 p = ro;\n    bool hit = false;\n    for (int i = 0; i < 150 && !hit; i++) {\n        float dist = scene(p);\n        hit = dist * dist < 1e-6;\n        p += dist * rd;\n        if (distance(p, ro) > 5.0) break;\n    }\n    \n    bool transition =  uv.x > sin(iTime) * 0.5;\n    vec3 col = vec3(0.0);\n    float gaussianCurvature = calcGaussianCurvature(p, 0.01);\n    float meanCurvature = calcMeanCurvature(p, 0.01);\n\n    float curvature = transition ? gaussianCurvature * 0.01 : meanCurvature * 15.0;\n    // float mappedCurvature = atan(curvature) / 3.14159 + 0.0;\n    // col = pal(mappedCurvature,  vec3(0.5),  vec3(0.5),  vec3(1.0), vec3(0.00, 0.33, 0.67));\n    col = vec3(curvature);\n    \n    float spacePressed = texelFetch(iChannel0, ivec2(32, 0), 0).x;\n\n    if (spacePressed > 0.5) {\n        col = calcNormal(p);\n    }\n    vec3 bg = vec3(0.1, 0.1, 0.11);\n    fragColor.xyz = hit ? col : bg;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//https://www.shadertoy.com/view/wtVyWK\nfloat scene(vec3 p) {\n    //sdf is undefined outside the unit sphere, uncomment to witness the abominations\n    if (length(p) > 1.) {\n        return length(p)-.8;\n    }\n    //neural networks can be really compact... when they want to be\n    vec4 f00=sin(p.y*vec4(-3.02,1.95,-3.42,-.60)+p.z*vec4(3.08,.85,-2.25,-.24)-p.x*vec4(-.29,1.16,-3.74,2.89)+vec4(-.71,4.50,-3.24,-3.50));\n    vec4 f01=sin(p.y*vec4(-.40,-3.61,3.23,-.14)+p.z*vec4(-.36,3.64,-3.91,2.66)-p.x*vec4(2.90,-.54,-2.75,2.71)+vec4(7.02,-5.41,-1.12,-7.41));\n    vec4 f02=sin(p.y*vec4(-1.77,-1.28,-4.29,-3.20)+p.z*vec4(-3.49,-2.81,-.64,2.79)-p.x*vec4(3.15,2.14,-3.85,1.83)+vec4(-2.07,4.49,5.33,-2.17));\n    vec4 f03=sin(p.y*vec4(-.49,.68,3.05,.42)+p.z*vec4(-2.87,.78,3.78,-3.41)-p.x*vec4(-2.65,.33,.07,-.64)+vec4(-3.24,-5.90,1.14,-4.71));\n    vec4 f10=sin(mat4(-.34,.06,-.59,-.76,.10,-.19,-.12,.44,.64,-.02,-.26,.15,-.16,.21,.91,.15)*f00+\n        mat4(.01,.54,-.77,.11,.06,-.14,.43,.51,-.18,.08,.39,.20,.33,-.49,-.10,.19)*f01+\n        mat4(.27,.22,.43,.53,.18,-.17,.23,-.64,-.14,.02,-.10,.16,-.13,-.06,-.04,-.36)*f02+\n        mat4(-.13,.29,-.29,.08,1.13,.02,-.83,.32,-.32,.04,-.31,-.16,.14,-.03,-.20,.39)*f03+\n        vec4(.73,-4.28,-1.56,-1.80))/1.0+f00;\n    vec4 f11=sin(mat4(-1.11,.55,-.12,-1.00,.16,.15,-.30,.31,-.01,.01,.31,-.42,-.29,.38,-.04,.71)*f00+\n        mat4(.96,-.02,.86,.52,-.14,.60,.44,.43,.02,-.15,-.49,-.05,-.06,-.25,-.03,-.22)*f01+\n        mat4(.52,.44,-.05,-.11,-.56,-.10,-.61,-.40,-.04,.55,.32,-.07,-.02,.28,.26,-.49)*f02+\n        mat4(.02,-.32,.06,-.17,-.59,.00,-.24,.60,-.06,.13,-.21,-.27,-.12,-.14,.58,-.55)*f03+\n        vec4(-2.24,-3.48,-.80,1.41))/1.0+f01;\n    vec4 f12=sin(mat4(.44,-.06,-.79,-.46,.05,-.60,.30,.36,.35,.12,.02,.12,.40,-.26,.63,-.21)*f00+\n        mat4(-.48,.43,-.73,-.40,.11,-.01,.71,.05,-.25,.25,-.28,-.20,.32,-.02,-.84,.16)*f01+\n        mat4(.39,-.07,.90,.36,-.38,-.27,-1.86,-.39,.48,-.20,-.05,.10,-.00,-.21,.29,.63)*f02+\n        mat4(.46,-.32,.06,.09,.72,-.47,.81,.78,.90,.02,-.21,.08,-.16,.22,.32,-.13)*f03+\n        vec4(3.38,1.20,.84,1.41))/1.0+f02;\n    vec4 f13=sin(mat4(-.41,-.24,-.71,-.25,-.24,-.75,-.09,.02,-.27,-.42,.02,.03,-.01,.51,-.12,-1.24)*f00+\n        mat4(.64,.31,-1.36,.61,-.34,.11,.14,.79,.22,-.16,-.29,-.70,.02,-.37,.49,.39)*f01+\n        mat4(.79,.47,.54,-.47,-1.13,-.35,-1.03,-.22,-.67,-.26,.10,.21,-.07,-.73,-.11,.72)*f02+\n        mat4(.43,-.23,.13,.09,1.38,-.63,1.57,-.20,.39,-.14,.42,.13,-.57,-.08,-.21,.21)*f03+\n        vec4(-.34,-3.28,.43,-.52))/1.0+f03;\n    f00=sin(mat4(-.72,.23,-.89,.52,.38,.19,-.16,-.88,.26,-.37,.09,.63,.29,-.72,.30,-.95)*f10+\n        mat4(-.22,-.51,-.42,-.73,-.32,.00,-1.03,1.17,-.20,-.03,-.13,-.16,-.41,.09,.36,-.84)*f11+\n        mat4(-.21,.01,.33,.47,.05,.20,-.44,-1.04,.13,.12,-.13,.31,.01,-.34,.41,-.34)*f12+\n        mat4(-.13,-.06,-.39,-.22,.48,.25,.24,-.97,-.34,.14,.42,-.00,-.44,.05,.09,-.95)*f13+\n        vec4(.48,.87,-.87,-2.06))/1.4+f10;\n    f01=sin(mat4(-.27,.29,-.21,.15,.34,-.23,.85,-.09,-1.15,-.24,-.05,-.25,-.12,-.73,-.17,-.37)*f10+\n        mat4(-1.11,.35,-.93,-.06,-.79,-.03,-.46,-.37,.60,-.37,-.14,.45,-.03,-.21,.02,.59)*f11+\n        mat4(-.92,-.17,-.58,-.18,.58,.60,.83,-1.04,-.80,-.16,.23,-.11,.08,.16,.76,.61)*f12+\n        mat4(.29,.45,.30,.39,-.91,.66,-.35,-.35,.21,.16,-.54,-.63,1.10,-.38,.20,.15)*f13+\n        vec4(-1.72,-.14,1.92,2.08))/1.4+f11;\n    f02=sin(mat4(1.00,.66,1.30,-.51,.88,.25,-.67,.03,-.68,-.08,-.12,-.14,.46,1.15,.38,-.10)*f10+\n        mat4(.51,-.57,.41,-.09,.68,-.50,-.04,-1.01,.20,.44,-.60,.46,-.09,-.37,-1.30,.04)*f11+\n        mat4(.14,.29,-.45,-.06,-.65,.33,-.37,-.95,.71,-.07,1.00,-.60,-1.68,-.20,-.00,-.70)*f12+\n        mat4(-.31,.69,.56,.13,.95,.36,.56,.59,-.63,.52,-.30,.17,1.23,.72,.95,.75)*f13+\n        vec4(-.90,-3.26,-.44,-3.11))/1.4+f12;\n    f03=sin(mat4(.51,-.98,-.28,.16,-.22,-.17,-1.03,.22,.70,-.15,.12,.43,.78,.67,-.85,-.25)*f10+\n        mat4(.81,.60,-.89,.61,-1.03,-.33,.60,-.11,-.06,.01,-.02,-.44,.73,.69,1.02,.62)*f11+\n        mat4(-.10,.52,.80,-.65,.40,-.75,.47,1.56,.03,.05,.08,.31,-.03,.22,-1.63,.07)*f12+\n        mat4(-.18,-.07,-1.22,.48,-.01,.56,.07,.15,.24,.25,-.09,-.54,.23,-.08,.20,.36)*f13+\n        vec4(-1.11,-4.28,1.02,-.23))/1.4+f13;\n    return dot(f00,vec4(.09,.12,-.07,-.03))+dot(f01,vec4(-.04,.07,-.08,.05))+\n        dot(f02,vec4(-.01,.06,-.02,.07))+dot(f03,vec4(-.05,.07,.03,.04))-0.16;\n}\n\n\nmat3 outer(vec3 a, vec3 b) {\n    return mat3(\n        a.x * b.x, a.x * b.y, a.x * b.z,\n        a.y * b.x, a.y * b.y, a.y * b.z,\n        a.z * b.x, a.z * b.y, a.z * b.z\n    );\n}\n\n\nfloat calcGaussianCurvature2(vec3 p, float eps) {\n    vec3 e = vec3(eps, -eps, 0);\n\n    vec3 grad;\n    float t1 = scene(p + e.xzz), t2 = scene(p - e.xzz);\n    float t3 = scene(p + e.zxz), t4 = scene(p - e.zxz);\n    float t5 = scene(p + e.zzx), t6 = scene(p - e.zzx);\n    grad.x = (t1 - t2) / (2.0 * eps);\n    grad.y = (t3 - t4) / (2.0 * eps);\n    grad.z = (t5 - t6) / (2.0 * eps);\n\n    float center = scene(p);\n    mat3 hess;\n    hess[0][0] = (t1 + t2 - 2.0 * center) / (eps * eps);\n    hess[1][1] = (t3 + t4 - 2.0 * center) / (eps * eps);\n    hess[2][2] = (t5 + t6 - 2.0 * center) / (eps * eps);\n    float t7 = scene(p + e.xyz), t8 = scene(p - e.xyz);\n    float t9 = scene(p + e.xzy), t10 = scene(p - e.xzy);\n    float t11 = scene(p + e.yxz), t12 = scene(p - e.yxz);\n    hess[0][1] = hess[1][0] = ((t7 + t8) - (t1 + t2) - (t3 + t4) + 2.0 * center) / (4.0 * eps * eps);\n    hess[0][2] = hess[2][0] = ((t9 + t10) - (t1 + t2) - (t5 + t6) + 2.0 * center) / (4.0 * eps * eps);\n    hess[1][2] = hess[2][1] = ((t11 + t12) - (t3 + t4) - (t5 + t6) + 2.0 * center) / (4.0 * eps * eps);\n\n    mat4 K = mat4(\n        hess[0][0], hess[1][0], hess[2][0], grad.x,\n        hess[0][1], hess[1][1], hess[2][1], grad.y,\n        hess[0][2], hess[1][2], hess[2][2], grad.z,\n        grad.x, grad.y, grad.z, 0.0\n    );\n\n    float detK = determinant(K);\n    float gradMagnitudeSq = dot(grad, grad);\n    return -detK / (gradMagnitudeSq * gradMagnitudeSq);\n}\n\nfloat calcGaussianCurvature1(vec3 p, float eps) {\n    vec3 e = vec3(eps, 0.0, 0.0);\n    \n    float s0 = scene(p);\n    float s1 = scene(p + e.xyy);\n    float s2 = scene(p - e.xyy);\n    float s3 = scene(p + e.yxy);\n    float s4 = scene(p - e.yxy);\n    float s5 = scene(p + e.yyx);\n    float s6 = scene(p - e.yyx);\n    float s7 = scene(p + e.xxy);\n    float s8 = scene(p - e.xxy);\n    float s9 = scene(p + e.xyx);\n    float s10 = scene(p - e.xyx);\n    float s11 = scene(p + e.yxx);\n    float s12 = scene(p - e.yxx);\n    \n    vec3 grad;\n    grad.x = (s1 - s2) / (2.0 * eps);\n    grad.y = (s3 - s4) / (2.0 * eps);\n    grad.z = (s5 - s6) / (2.0 * eps);\n    \n    mat3 hess;\n    hess[0][0] = (s1 + s2 - 2.0 * s0) / (eps * eps);\n    hess[1][1] = (s3 + s4 - 2.0 * s0) / (eps * eps);\n    hess[2][2] = (s5 + s6 - 2.0 * s0) / (eps * eps);\n    hess[0][1] = hess[1][0] = (s7 + s8 - s1 - s2) / (4.0 * eps * eps);\n    hess[0][2] = hess[2][0] = (s9 + s10 - s1 - s2) / (4.0 * eps * eps);\n    hess[1][2] = hess[2][1] = (s11 + s12 - s5 - s6) / (4.0 * eps * eps);\n    \n    mat3 adjHess;\n    adjHess[0][0] = hess[1][1] * hess[2][2] - hess[1][2] * hess[2][1];\n    adjHess[0][1] = hess[0][2] * hess[2][1] - hess[0][1] * hess[2][2];\n    adjHess[0][2] = hess[0][1] * hess[1][2] - hess[0][2] * hess[1][1];\n    adjHess[1][0] = hess[1][2] * hess[2][0] - hess[1][0] * hess[2][2];\n    adjHess[1][1] = hess[0][0] * hess[2][2] - hess[0][2] * hess[2][0];\n    adjHess[1][2] = hess[0][2] * hess[1][0] - hess[0][0] * hess[1][2];\n    adjHess[2][0] = hess[1][0] * hess[2][1] - hess[1][1] * hess[2][0];\n    adjHess[2][1] = hess[0][1] * hess[2][0] - hess[0][0] * hess[2][1];\n    adjHess[2][2] = hess[0][0] * hess[1][1] - hess[0][1] * hess[1][0];\n    \n    float gradMagnitudeSq = dot(grad, grad);\n    return dot(grad, adjHess * grad) / (gradMagnitudeSq * gradMagnitudeSq);\n}\n\nfloat calcGaussianCurvature0(vec3 p, float eps) {\n    vec3 e = vec3(eps, -eps, 0);\n    vec3 grad;\n    float t1 = scene(p + e.xzz), t2 = scene(p - e.xzz);\n    float t3 = scene(p + e.zxz), t4 = scene(p - e.zxz);\n    float t5 = scene(p + e.zzx), t6 = scene(p - e.zzx);\n    \n    grad.x = (t1 - t2) / (2.0 * eps);\n    grad.y = (t3 - t4) / (2.0 * eps);\n    grad.z = (t5 - t6) / (2.0 * eps);\n    float center = scene(p);\n\n\n    mat3 hess;\n    hess[0][0] = ((t1 + t2) - 2.0 * center) / (eps * eps);\n    hess[1][1] = ((t3 + t4) - 2.0 * center) / (eps * eps);\n    hess[2][2] = ((t5 + t6) - 2.0 * center) / (eps * eps);\n    \n    hess[0][1] = hess[1][0] = (scene(p + e.xxz) + scene(p - e.xxz) - scene(p + e) - scene(p - e)) / (4.0 * eps * eps);\n    hess[0][2] = hess[2][0] = (scene(p + e.xzx) + scene(p -  e.xzx) - scene(p +  e.xzy) - scene(p - e.xzy)) / (4.0 * eps * eps);\n    hess[1][2] = hess[2][1] = (scene(p + e.zxx) + scene(p - e.zxx) - scene(p + e.zxy) - scene(p - e.zxy)) / (4.0 * eps * eps);\n                              \n    mat3 S = hess - dot(grad, hess * grad) / dot(grad, grad) * mat3(1.0);\n\n    mat3 P = mat3(1.0) - outer(grad, grad) / dot(grad, grad);\n    mat3 B = P * S * P;\n\n    float F = B[0][0] * B[1][1] + B[1][1] * B[2][2] + B[2][2] * B[0][0] - B[0][1] * B[1][0] - B[1][2] * B[2][1] - B[2][0] * B[0][2];\n    \n    return -F / (dot(grad, grad) * dot(grad, grad));\n}","name":"Common","description":"","type":"common"}]}