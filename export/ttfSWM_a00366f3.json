{"ver":"0.1","info":{"id":"ttfSWM","date":"1563146650","viewed":338,"name":"2D distance estimation","username":"zzggbb","description":"https://iquilezles.org/articles/distance/distance.htm","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["distanceestimation","scalarfields"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sigmoid(float x) {\n\treturn 1.0 / (1.0 + exp(-x));\n}\n\nfloat shape(vec2 p) {\n\tfloat r = length(p);\n    float a = atan(p.y, p.x);\n    return r - 1.0 + 0.5*sin(3.0*a + 2.0*r*r);\n}\n\nvec2 gradient(vec2 p) {\n\tfloat r = length(p);\n    float a = atan(p.y, p.x);\n    vec2 da = vec2(p.y, -p.x)/(r*r);\n    return (p/r) + (1.5*da+2.0*p)*cos(3.0*a+2.0*r*r);\n}\n\nfloat color(vec2 p) {\n\tfloat v = shape(p);\n\tvec2 g = gradient(p);\n    float de = abs(v) / length(g);\n    float eps = 0.01;\n    return step(eps, de);\n}\n\nvec2 screen_coord(vec2 xy, vec2 dim) {\n    return (xy - 0.5*dim) / min(dim.x, dim.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 3.0*screen_coord(fragCoord.xy, iResolution.xy);\n\n    float col = color(uv);\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}