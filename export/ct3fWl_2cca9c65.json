{"ver":"0.1","info":{"id":"ct3fWl","date":"1703944850","viewed":61,"name":"Geometric semicircles","username":"Saimon","description":"Animated reproductin of this image: https://www.posterlounge.fr/p/711186.html#paid=19198 by Jazzberry Blue, check his other graphical work here: https://www.jazzberryblue.com/","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["color","moving","semicircle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \"Geometric semi circles\"\n * I wanted to practice GLSL and the primitives describe in https://thebookofshaders.com/07/\n * so I started looking for art images to try to reproduce.\n * This one is part of my practice serie, it is based on this image: \n * https://www.posterlounge.fr/p/711186.html#paid=19198\n * It was made by Jazzberry Blue, check his other graphical work here: https://www.jazzberryblue.com/\n * (November 2023 - Updated 03/01/24 with massive help from FabriceNeyret2)\n */\n\nfloat HALF_PI = 1.57,  PI = 3.14;\n#define R       iResolution.xy\n// Clamp the color to make sure it's between [0;1]\n#define clampColor(C) clamp(C,0.,1.)\n//https://www.shadertoy.com/view/XlsyWX\n#define rot(a)  mat2(cos(a+vec4(0,33,11,0)))\n\nfloat semiCircle(vec2 st, float radius, float rotAngle){\n  float angle = atan(st.x, st.y),\n        w = .8/R.y;\n  return sin(angle+rotAngle) > 0.\n        ? smoothstep(-w,  w, length(st) - sqrt(radius)/2.)\n        : 1.;\n}\n\n//https://shadertoyunofficial.wordpress.com/2019/01/02/programming-tricks-in-shadertoy-glsl/\nfloat segment(vec2 p, vec2 a, vec2 b, float th) {\n  b -= a;\n  p -= a;\n  float h =clamp( dot(p,b)/dot(b,b), 0., 1. ), // proj coord on line\n        w = .8/R.y;\n  return smoothstep( -w,w , length(p-h*b) - th ); // dist to segment\n}\n\nfloat semiCircleBorder(vec2 st, float radius, float rotAngle, float borderSize){\n  // Segment stuff\n  st *= rot(-rotAngle);\n  vec2  v1 = -vec2(0, radius),\n        v2 =  vec2(0, radius);\n  float th = borderSize/3.272;\n\n  return (semiCircle(st, radius, 0.)\n          + 1. - (semiCircle(st, radius - borderSize, 0.)))\n          * segment(st, v1, v2, th);\n}\n\n// Simplify version of code: https://thebookofshaders.com/edit.php?log=160909065147\n// and http://www.kynd.info\nfloat easeInOutExpo(float t) {\n  t = exp2(40.*t-10.);\n  return t < 1.\n      ?      .5 * t\n      : 1. - .5 / t;\n}\n\n#define tweenEaseInOutExpo(t) easeInOutExpo(min(t, 1. -t))\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord ){\n  vec2 st = ( fragCoord -.5*R.xy ) /R.y + vec2(.4,.7);\n  float t = fract((iTime)/3.);\n\n  vec3 YELLOW = vec3(0.902,0.549,0.102),\n       ORANGE = vec3(0.984,0.416,0.09),\n       BEIGE = vec3(0.941,0.671,0.455);\n\n  float rotAngle = tweenEaseInOutExpo(t) * HALF_PI;\n  float c1 = semiCircleBorder(st - vec2(0.562,(0.685)), 0.24, rotAngle, 0.008),\n       c2 = semiCircleBorder(st - vec2(0.320,(0.928)), 0.24,-rotAngle -HALF_PI, 0.008),\n       c3 = semiCircleBorder(st - vec2(0.320,0.4415), 0.24, rotAngle + HALF_PI, 0.008),\n       c4 = semiCircle(st - vec2(0.562,(0.928)), 0.24, -rotAngle - HALF_PI),\n       c6 = semiCircle(st - vec2(0.32,(0.685)) + vec2(tweenEaseInOutExpo(t)/4.5,0.), 0.24, PI),\n       c5 = semiCircle(st - vec2(0.562,(0.4415)), 0.24, rotAngle + HALF_PI);\n\n  fragColor.rgb =       c1\n                 *      c2\n                 *      c3\n                 * clampColor(c4 + ORANGE )\n                 * clampColor(c5 + BEIGE  )\n                 * clampColor(c6 + YELLOW );\n}\n","name":"Image","description":"","type":"image"}]}