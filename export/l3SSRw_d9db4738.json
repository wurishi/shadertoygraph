{"ver":"0.1","info":{"id":"l3SSRw","date":"1710363117","viewed":45,"name":"Spotlight Sheet","username":"kkhuet","description":"My first shader, I'm trying to play with a noise texture. \nIt looks like a sheet under a spotlight","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rays","shadow","spotlight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// First shader, trying to do smth nice with the noise\n// texture can be change for various effects\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y; // To center in [-1;1] without distortion\n    vec2 center = vec2(0.,0.);\n    float d = sqrt(pow(uv.x-center.x,2.) + pow(uv.y-center.y, 2.)); // distance to the center\n    \n    vec4 coolColor1 = vec4(0.75,0.345,0.318,1); // darker ball color\n    vec4 coolColor2 = vec4(0.753,0.561,0.549,1); // shadow color\n    \n    uv = (uv + 1.) / 2.; // move the origin to center in [0,1], but can also stay like that to have a geometrical shape\n    float randomValue = texture(iChannel0, vec2(sqrt(1. / (1. + pow(uv.y/uv.x,2.))), sqrt(1. / (1. + pow(uv.x/uv.y,2.))))).r;\n    // random value but the same for each specific theta, to have the \"rays\"\n    randomValue = sin(10. * randomValue + iTime);\n    \n    float randomHighlight = d*(randomValue+1.)/2.; // to to add more highlight or not to a ray\n    // multiply by d to darken the center\n    \n    randomValue /= 15.;\n    if (d + randomValue < .79) { // interior\n        float r = coolColor1.r + randomHighlight;\n        fragColor = vec4(r, coolColor1.g * r / coolColor1.r, coolColor1.b * r / coolColor1.r, 1);\n    } else if (d + randomValue < .81) { // black stroke\n        fragColor = vec4(0,0,0,1);\n    } else if (d + randomValue < 1.) { // shadow\n        fragColor = coolColor2;\n    } else { // background\n        fragColor = vec4(sqrt(1.8 - d), sqrt(1.6 - d), sqrt(1.6 - d), 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}