{"ver":"0.1","info":{"id":"XdfyzH","date":"1486927322","viewed":663,"name":"ESO0932a: The Milky Way panorama","username":"marciot","description":"My attempt to recreate https://www.eso.org/public/usa/images/eso0932a","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","galaxy","astronomy","milkyway","eso0932a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* This shader is an attempt to recreate the image at https://www.eso.org/public/usa/images/eso0932a */\n\nvec4 noise(in vec2 uv ) {\n    return\n        texture(iChannel0, uv * 0.0625) *  0.65  +\n        texture(iChannel0, uv * 0.125)  *  0.25  +\n        texture(iChannel0, uv * 0.5)    * -0.35  +\n        texture(iChannel0, uv * 4.0)    *  0.55  ;\n}\n\nvec4 noise2(in vec2 uv ) {\n    return\n        texture(iChannel0, uv * 0.125)                      * 0.35 +\n        smoothstep(0.2,0.8,texture(iChannel0, uv * 0.25))   * 0.20 +\n        texture(iChannel0, uv * 1.)                         * 0.15 +\n    \ttexture(iChannel0, uv * 2.0)                        * 0.30;\n}\n\n\nfloat gaussian(const float x, const float a, const float b, const float c) {\n    // a = Height of peak of curve\n    // b = Position of center of curve\n    // c = SD, width of bell\n    const float e = 2.71828;\n    return a*pow(e,-(x-b)*(x-b)/(2.*c*c));\n}\n\nfloat envelopeGaussian(vec2 uv) {\n    return gaussian(uv.x, 0.5, 0.0, 0.15)+0.5;\n}\n\nfloat envelopeHalf(vec2 uv, float height) {\n    return pow((1.0 - clamp(clamp(uv.y, 0., 1.)/(height*envelopeGaussian(uv)), 0.04, 0.5) * 2.0), 3.5);\n}\n\nvec4 envelopeNoise(vec2 uv) {\n    return noise(uv*3.);\n}\n\nvec2 mirror(vec2 uv) {\n    return uv * vec2(1.,-1.);\n}\n\nvec4 envelopeFull(vec2 uv) {\n    return envelopeHalf(uv,0.6) * envelopeHalf(mirror(uv),0.25) * envelopeNoise(uv);\n}\n\nfloat matterBand(vec2 uv, const float verticalJog, const float height, const float falloff) {\n    return smoothstep(0., falloff, 1.0 - abs( uv.y - envelopeGaussian(uv)*verticalJog )/height);\n}\n\nvec4 matterNoise(vec2 uv, float a, float b, float c) {\n    return 0.\n        // Purplish tint\n        + smoothstep(a*0.125, 0.8, noise2(uv*vec2(b*0.25, c*.5))) * vec4(0.1, 0.2, 0., 1.0)\n        \n        // Blueish tint\n        + smoothstep(a*0.125, 0.8, noise2(uv*vec2(-b*0.5, c*.5))) * vec4(0.2, 0.1, 0., 1.0)\n        \n        // Dark reddish splotches:\n        + smoothstep(a*0.5,  1.0, noise2(uv*vec2(b, c))) * vec4(1.)\n            * gaussian(uv.x, 1.5, 0.0, 0.20)\n        + smoothstep(a*1.5,  1.0, noise2(uv*vec2(b, c))) * vec4(0., 0.45, 1.0, 1.0);\n}\n\n// Stars from https://www.shadertoy.com/view/4lBXRR\nfloat hash(vec2 p) {\n  return fract(sin(dot(p.xy, vec2(5.34, 7.13)))*5865.273458);   \n}\n\nfloat stars(vec2 uv) {\n    return smoothstep(0.999, 1.0, hash(uv)) +\n           smoothstep(0.995, 1.0, hash(uv)) * 0.5 +\n           smoothstep(0.980, 1.0, hash(uv)) * 0.0625;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - iResolution.xy*0.5)/iResolution.y;\n   \n    vec4  darkBand1  = vec4(1.0) - matterNoise(uv, 0.2, 1.2, 1.5) * matterBand(uv,  .08,  .07, 0.8);\n        \n    vec4  darkBand2  = vec4(1.0) - matterNoise(uv, 0.4, 1.0, 1.5) * matterBand(uv, -.015, .07, 0.8)\n        // Brighten up the center (KylBlz's suggestion)\n        * matterBand(uv, -.7, .5, 0.5);\n    \n    fragColor = (envelopeFull(uv) + stars(uv)) * darkBand1 * darkBand2;\n}\n","name":"Image","description":"","type":"image"}]}