{"ver":"0.1","info":{"id":"4f2SDt","date":"1707261053","viewed":181,"name":"Sinusoidal Visulizer","username":"Jinkweiq","description":"Shader practice, Cloning shader Discoteq 2 https://www.shadertoy.com/view/DtXfDr","likes":6,"published":1,"flags":64,"usePreview":0,"tags":["2d","music","practice","sinusoidal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"lscGDS","filepath":"https://soundcloud.com/millionrecordsmusic/vynek-you-me","previewfilepath":"https://soundcloud.com/millionrecordsmusic/vynek-you-me","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Shader practice: sins and sStep\" by TheHarmacist. https://shadertoy.com/view/lfBSWd\n// 2024-02-03 18:19:21\n\nfloat Line(vec2 uv, float speed, float height)\n{\n    float fft  = texture( iChannel0, vec2(height/6.,0.25) ).x; \n    \n    float wave = sin(uv.x*fft*height+iTime*(1.5 + speed)+10.) //actual wave\n                 *smoothstep(.9, 0., abs(uv.x))*0.45; //amplitude ramp \n    \n    float line = smoothstep(0.12* //creates the line \n                 smoothstep(0.2, 1., abs(uv.x))+0.016, .0, abs(uv.y+wave))* //modulating thickness\n                 smoothstep(1.1, .5, abs(uv.x)); //value fade\n                 \n    return line; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv*2.0 -1.0;\n    float value= 0.;\n    for(float i = 0.; i<=6.; i+=1.0)\n    {\n        value+= Line(uv, i*0.1, i+4.0)*(1.1-(i*0.15));\n    }\n    \n    float vol  = texture( iChannel0, vec2(0.1,0.25) ).x; \n            \n    vec3 col = vec3(value*mix(vec3(0.102,0.227,0.600), vec3(0.741,0.157,0.471), abs(uv.x*1.5) * vol));\n    col+= 0.1;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}