{"ver":"0.1","info":{"id":"dt3SzB","date":"1685526067","viewed":111,"name":"Graphing Calculator (shiv)","username":"shivbhatia10","description":"A basic graphing calculator","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(float x) {\n    return 6.0 * sin(1. * sin(iTime) * x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv = uv * vec2(20) - vec2(10);\n\n    float col = 1.0 - step(0.001, uv.x * uv.x);\n    col += 1.0 - step(0.001, uv.y * uv.y);\n    col = 1.0 - col;\n\n    float v = uv.y - f(uv.x);\n    v = smoothstep(1.5, 0., abs(v)/fwidth(v));\n\n\n    // Output to screen\n    fragColor = vec4(col, col-v, col-v, 1.0);\n}","name":"Image","description":"","type":"image"}]}