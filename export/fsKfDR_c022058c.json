{"ver":"0.1","info":{"id":"fsKfDR","date":"1659197552","viewed":179,"name":"Letters Dist","username":"KrutoyVanya2008","description":"Exact SDF for english letters","likes":7,"published":1,"flags":0,"usePreview":1,"tags":["sdf","fonts"],"hasliked":0,"parentid":"ssyBWz","parentname":"ABOBA dist"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float engLetterDist(vec2 pos, int letter, float size) {\n    if (letter == 0) return letterADist(pos, size);\n    if (letter == 1) return letterBDist(pos, size);\n    if (letter == 2) return letterCDist(pos, size);\n    if (letter == 3) return letterDDist(pos, size);\n    if (letter == 4) return letterEDist(pos, size);\n    if (letter == 5) return letterFDist(pos, size);\n    if (letter == 6) return letterGDist(pos, size);\n    if (letter == 7) return letterHDist(pos, size);\n    if (letter == 8) return letterIDist(pos, size);\n    if (letter == 9) return letterJDist(pos, size);\n    if (letter == 10) return letterKDist(pos, size);\n    if (letter == 11) return letterLDist(pos, size);\n    if (letter == 12) return letterMDist(pos, size);\n    if (letter == 13) return letterNDist(pos, size);\n    if (letter == 14) return letterODist(pos, size);\n    if (letter == 15) return letterPDist(pos, size);\n    if (letter == 16) return letterQDist(pos, size);\n    if (letter == 17) return letterRDist(pos, size);\n    if (letter == 18) return letterSDist(pos, size);\n    if (letter == 19) return letterTDist(pos, size);\n    if (letter == 20) return letterUDist(pos, size);\n    if (letter == 21) return letterVDist(pos, size);\n    if (letter == 22) return letterWDist(pos, size);\n    if (letter == 23) return letterXDist(pos, size);\n    if (letter == 24) return letterYDist(pos, size);\n    if (letter == 25) return letterZDist(pos, size);\n    \n    return 1e12;\n}\n\nfloat getDist(vec2 coord) {\n    float d = 1e12;\n    float sus = 1.0; abs(sin(iTime * 0.2)) * 1.5;\n    //d = smin(d, letterMDist(coord - vec2(0.7 * 1.0 * -2.0 * sus, 0.0), 0.4), 0.0);\n    //d = smin(d, letterNDist(coord - vec2(0.7 * 1.0 * -1.0 * sus, 0.0), 0.4), 0.0);\n    //d = smin(d, engLetterDist(coord - vec2(0.7 * 1.0 * 0.0 * sus, 0.0), 0, 0.7), 0.0);\n    //d = smin(d, letterPDist(coord - vec2(0.7 * 1.0 * 1.0 * sus, 0.0), 0.4), 0.0);\n    //d = smin(d, letterRDist(coord - vec2(0.7 * 1.0 * 2.0 * sus, 0.0), 0.4), 0.0);\n    \n    for (int l = 0; l < 26; ++l) {\n        d = smin(d,\n            engLetterDist(\n                coord - vec2(0.7 * 1.0 * float(l % 13 - 6) * sus * 0.15 / 0.4, (0.5 - float(l / 13)) * 0.15 / 0.4),\n                l, 0.15), 0.0);\n    }\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 coord = (fragCoord / iResolution.y) * 2.0 - iResolution.xy / iResolution.y;\n    vec2 mouseCoord = (iMouse.xy / iResolution.y) * 2.0 - iResolution.xy / iResolution.y;\n    \n    \n    coord = move(coord, vec2(0.00127, 0.00372));\n    mouseCoord = move(mouseCoord, vec2(0.00227, 0.00372));\n    \n    float d = getDist(coord);\n    \n    float mouseD = 1e12;\n    if (iMouse.z > 0.001) {\n        float dist = getDist(mouseCoord);\n        mouseD = sphereDist(coord - mouseCoord, abs(dist));\n    }\n    \n    vec3 bcol = mix(vec3(1), vec3(0.9, 0.97, 1.0), step(d, 0.0));\n    \n    vec3 col1 = clamp(vec3(pow(abs(d), 0.1)), 0.0, 1.0);\n    //col1 *= clamp(vec3(smoothstep(0.0, 0.005, abs(d))), 0.0, 1.0);\n    //col1 *= vec3(mod(floor(d * 100.0), 2.0)) * 0.2 + 0.6;\n    \n    \n    \n    vec3 col2 = clamp(vec3(smoothstep(0.0, 0.005, abs(mouseD))), 0.0, 1.0);\n    vec3 col3 = clamp(vec3(smoothstep(0.0, 0.005, abs(boxDist(coord, vec2(0.7 * 0.7, 0.7))))), 0.0, 1.0);\n    vec3 col = col1 * col2;\n    //col *= col3;\n    col *= bcol;\n    \n    \n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float lengthPow(vec2 pos, float pw) {\n    return pow(pow(abs(pos.x), pw) + pow(abs(pos.y), pw), 1.0 / pw);\n}\nfloat mlength(vec2 pos) {\n    return lengthPow(pos, 2.5);\n}\n//#define length mlength\n\nfloat dot2(vec2 v) {\n    return dot(v, v);\n}\n\nfloat cosd(float angle) {\n    return cos(radians(angle));\n}\nfloat sind(float angle) {\n    return sin(radians(angle));\n}\nfloat tand(float angle) {\n    return tan(radians(angle));\n}\n\nfloat sphereDist(vec2 pos, float r) {\n    return length(pos) - r;\n}\nfloat boxDist(vec2 pos, vec2 r) {\n    vec2 d = abs(pos) - r;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\nfloat spiralDist(vec2 pos) {\n    float r = length(pos);\n    float a = atan(pos.y, pos.x);\n    return r - 1.0 + sin(8.0 * a + 2.0 * pow(r, 2.0)) / 2.0;\n}\nfloat segmentDist(vec2 pos, vec2 A, vec2 B) {\n    return length(pos - mix(A, B, clamp(dot(B - A, pos - A) / dot(B - A, B - A), 0.0, 1.0)));\n}\nfloat circleSegmentDist(vec2 pos, vec2 c, vec2 A, vec2 B) {\n    pos -= c;\n    A -= c;\n    B -= c;\n    float a1 = atan(A.y, A.x);\n    float a2 = atan(B.y, B.x);\n    float a = clamp(atan(pos.y, pos.x), min(a1, a2), max(a1, a2));\n    return length(pos - vec2(cos(a), sin(a)) * length(A));\n}\nfloat ellipseDist(in vec2 p, in vec2 ab) {\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\nfloat checkSegment(vec2 pos, vec2 A, vec2 B) {\n    return step(pos.y, max(A.y, B.y)) * step(min(A.y, B.y), pos.y) *\n        step(pos.x, mix(A.x, B.x, (pos.y - A.y) / (B.y - A.y)));\n}\nfloat checkCircleSegment(vec2 pos, vec2 c, vec2 A, vec2 B) {\n    pos -= c;\n    A -= c;\n    B -= c;\n    \n    float ans = \n        step(pos.y, max(A.y, B.y)) *\n        step(min(A.y, B.y), pos.y) *\n        step(pos.x, 0.0) *\n        step(length(A), length(pos));\n    A.y += 1e-6;\n    B.y += 1e-6;\n    A = mix(A, vec2(0, sign(A.y) * length(A)), step(A.x, 0.0));\n    B = mix(B, vec2(0, sign(B.y) * length(B)), step(B.x, 0.0));\n    \n    ans +=\n        step(pos.y, max(A.y, B.y)) *\n        step(min(A.y, B.y), pos.y) *\n        step(length(pos), length(A));\n        \n    return min(ans, 1.0);\n}\n\nmat2 rotate(float angle) {\n    return mat2(\n        cos(angle), sin(angle),\n        -sin(angle), cos(angle));\n}\n\nfloat smax( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) + k*h*(1.0-h); \n}\nfloat smin( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); \n}\n\nvec2 rotate(vec2 pos, float angle) {\n    return rotate(angle) * pos;\n}\nvec2 move(vec2 pos, vec2 vec) {\n    return pos - vec;\n}\n\n\nvoid addSegment(vec2 pos, vec2 A, vec2 B, inout float d, inout float cnt) {\n    d = min(d, segmentDist(pos, A, B));\n    cnt += checkSegment(pos, A, B);\n}\nvoid addCircleSegment(vec2 pos, vec2 c, vec2 A, vec2 B, inout float d, inout float cnt) {\n    d = min(d, circleSegmentDist(pos, c, A, B));\n    cnt += checkCircleSegment(pos, c, A, B);\n}\n\nfloat letterADist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.x = abs(pos.x);\n    \n    d = min(d, segmentDist(pos, size * vec2(0.7, -1), size * vec2(0.1, 1.0)));\n    cnt += checkSegment(pos, size * vec2(0.7, -1), size * vec2(0.1, 1.0));\n    d = min(d, segmentDist(pos, size * vec2(0.5, -1), size * vec2(0.26, -0.2)));\n    cnt += checkSegment(pos, size * vec2(0.5, -1), size * vec2(0.26, -0.2));\n    d = min(d, segmentDist(pos, size * vec2(0.2, 0.0), size * vec2(0.0, 4.0 / 6.0)));\n    cnt += checkSegment(pos, size * vec2(0.2, 0.0), size * vec2(0.0, 4.0 / 6.0));\n    d = min(d, segmentDist(pos, size * vec2(0.0, 1.0), size * vec2(0.1, 1.0)));\n    d = min(d, segmentDist(pos, size * vec2(0.7, -1.0), size * vec2(0.5, -1.0)));\n    d = min(d, segmentDist(pos, size * vec2(0.0, 0.0), size * vec2(0.2, 0.0)));\n    d = min(d, segmentDist(pos, size * vec2(0.0, -0.2), size * vec2(0.26, -0.2)));\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterBDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.y = abs(pos.y);\n    \n    d = min(d, segmentDist(pos, size * vec2(-0.7, 0), size * vec2(-0.7, 1)));\n    cnt += checkSegment(pos, size * vec2(-0.7, 0), size * vec2(-0.7, 1));\n    d = min(d, segmentDist(pos, size * vec2(-0.5, 0.1), size * vec2(-0.5, 0.8)));\n    cnt += checkSegment(pos, size * vec2(-0.5, 0.1), size * vec2(-0.5, 0.8));\n    d = min(d, segmentDist(pos, size * vec2(-0.7, 1), size * vec2(0.15, 1)));\n    d = min(d, segmentDist(pos, size * vec2(-0.5, 0.8), size * vec2(0.15, 0.8)));\n    d = min(d, segmentDist(pos, size * vec2(-0.5, 0.1), size * vec2(0.15, 0.1)));\n    d = min(d, circleSegmentDist(pos, \n        size * vec2(0.15, 0.45),\n        size * vec2(0.15 + sqrt(0.55 * 0.55 - 0.45 * 0.45), 0.0),\n        size * vec2(0.15, 1.0)));\n    cnt += checkCircleSegment(pos, \n        size * vec2(0.15, 0.45),\n        size * vec2(0.15 + sqrt(0.55 * 0.55 - 0.45 * 0.45), 0.0),\n        size * vec2(0.15, 1.0));\n    d = min(d, circleSegmentDist(pos, \n        size * vec2(0.15, 0.45), size * vec2(0.15, 0.1), size * vec2(0.15, 0.8)));\n    cnt += checkCircleSegment(pos, \n        size * vec2(0.15, 0.45), size * vec2(0.15, 0.1), size * vec2(0.15, 0.8));\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterCDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.y = abs(pos.y);\n    \n    \n    d = min(d, circleSegmentDist(pos,\n                size * vec2(0.3, 0.0),\n                size * vec2(0.7, sqrt(1.0 - 0.4 * 0.4)),\n                size * vec2(-0.7, 0.0)));\n    cnt += checkCircleSegment(pos,\n                size * vec2(0.3, 0.0),\n                size * vec2(0.7, sqrt(1.0 - 0.4 * 0.4)),\n                size * vec2(-0.7, 0.0));\n    d = min(d, circleSegmentDist(pos,\n                size * vec2(0.3, 0.0),\n                size * vec2(0.7, sqrt(0.8 * 0.8 - 0.4 * 0.4)),\n                size * vec2(-0.5, 0.0)));\n    cnt += checkCircleSegment(pos,\n                size * vec2(0.3, 0.0),\n                size * vec2(0.7, sqrt(0.8 * 0.8 - 0.4 * 0.4)),\n                size * vec2(-0.5, 0.0));\n    d = min(d, segmentDist(pos,\n                size * vec2(0.7, sqrt(1.0 - 0.4 * 0.4)),\n                size * vec2(0.7, sqrt(0.8 * 0.8 - 0.4 * 0.4))));\n    cnt += checkSegment(pos,\n                size * vec2(0.7, sqrt(1.0 - 0.4 * 0.4)),\n                size * vec2(0.7, sqrt(0.8 * 0.8 - 0.4 * 0.4)));\n    \n    \n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterDDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.y = abs(pos.y);\n    \n    \n    addSegment(pos, size * vec2(-0.7, 1.0), size * vec2(-0.7, 0.0), d, cnt);\n    addSegment(pos, size * vec2(-0.5, 0.8), size * vec2(-0.5, 0.0), d, cnt);\n    addSegment(pos, size * vec2(-0.7, 1.0), size * vec2(-0.3, 1.0), d, cnt);\n    addSegment(pos, size * vec2(-0.5, 0.8), size * vec2(-0.3, 0.8), d, cnt);\n    addCircleSegment(pos,\n        size * vec2(-0.3, 0.0), size * vec2(0.7, 0.0), size * vec2(-0.3, 1.0),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(-0.3, 0.0), size * vec2(0.5, 0.0), size * vec2(-0.3, 0.8),\n        d, cnt);\n    \n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterEDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.y = abs(pos.y);\n    \n    addSegment(pos, size * vec2(-0.7, 1.0), size * vec2(-0.7, 0.0), d, cnt);\n    addSegment(pos, size * vec2(-0.5, 0.8), size * vec2(-0.5, 0.1), d, cnt);\n    addSegment(pos, size * vec2(-0.7, 1.0), size * vec2(0.7, 1.0), d, cnt);\n    addSegment(pos, size * vec2(-0.5, 0.8), size * vec2(0.7, 0.8), d, cnt);\n    addSegment(pos, size * vec2(-0.5, 0.1), size * vec2(0.7, 0.1), d, cnt);\n    addSegment(pos, size * vec2(0.7, 1.0), size * vec2(0.7, 0.8), d, cnt);\n    addSegment(pos, size * vec2(0.7, 0.1), size * vec2(0.7, 0.0), d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterFDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    //pos.y = abs(pos.y);\n    \n    addSegment(pos, size * vec2(-0.7, 1.0), size * vec2(-0.7, -1.0), d, cnt);\n    addSegment(pos, size * vec2(-0.5, 0.8), size * vec2(-0.5, 0.1), d, cnt);\n    addSegment(pos, size * vec2(-0.5, -1.0), size * vec2(-0.5, -0.1), d, cnt);\n    addSegment(pos, size * vec2(-0.7, -1.0), size * vec2(-0.5, -1.0), d, cnt);\n    addSegment(pos, size * vec2(-0.7, 1.0), size * vec2(0.7, 1.0), d, cnt);\n    addSegment(pos, size * vec2(-0.5, 0.8), size * vec2(0.7, 0.8), d, cnt);\n    addSegment(pos, size * vec2(-0.5, 0.1), size * vec2(0.5, 0.1), d, cnt);\n    addSegment(pos, size * vec2(-0.5, -0.1), size * vec2(0.5, -0.1), d, cnt);\n    addSegment(pos, size * vec2(0.7, 1.0), size * vec2(0.7, 0.8), d, cnt);\n    addSegment(pos, size * vec2(0.5, 0.1), size * vec2(0.5, -0.1), d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterGDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    //pos.y = abs(pos.y);\n    \n    addCircleSegment(pos,\n        size * vec2(0.3, 0.0),\n        size * vec2(0.7, sqrt(1.0 - 0.4 * 0.4)),\n        size * vec2(-0.7, 0.0),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.3, 0.0),\n        size * vec2(-0.7, 0.0 - 1e-3),\n        size * vec2(0.7, -sqrt(1.0 - 0.4 * 0.4)),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.3, 0.0),\n        size * vec2(0.7, sqrt(0.8 * 0.8 - 0.4 * 0.4)),\n        size * vec2(-0.5, 0.0),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.3, 0.0),\n        size * vec2(-0.5, 0.0 - 1e-3),\n        size * vec2(0.5, -sqrt(0.8 * 0.8 - 0.2 * 0.2)),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, sqrt(1.0 - 0.4 * 0.4)),\n        size * vec2(0.7, sqrt(0.8 * 0.8 - 0.4 * 0.4)),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, -sqrt(1.0 - 0.4 * 0.4)),\n        size * vec2(0.7, -0.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, -sqrt(0.8 * 0.8 - 0.2 * 0.2)),\n        size * vec2(0.5, -0.2),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.1, -0.0),\n        size * vec2(0.7, -0.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.1, -0.0),\n        size * vec2(0.1, -0.2),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, -0.2),\n        size * vec2(0.1, -0.2),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterHDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos = abs(pos);\n    \n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.7, 0.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, 1.0), size * vec2(0.5, 0.1),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.0, 0.1), size * vec2(0.5, 0.1),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterIDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos = abs(pos);\n    \n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.0, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, 0.8), size * vec2(0.1, 0.8),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.1, 0.8), size * vec2(0.1, 0.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.7, 0.8),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterJDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    \n    addCircleSegment(pos,\n        size * vec2(0.0, -0.3),\n        size * vec2(-0.7, -0.3 - 1e-5),\n        size * vec2(0.7, -0.3),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.0, -0.3),\n        size * vec2(-0.5, -0.3 - 1e-5),\n        size * vec2(0.5, -0.3),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.7, -0.3),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.7, -0.3), size * vec2(-0.5, -0.3),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, 0.8), size * vec2(0.5, -0.3),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(-0.7, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, 0.8), size * vec2(-0.7, 0.8),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.7, 0.8), size * vec2(-0.7, 1.0),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterKDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.y = abs(pos.y);\n    \n    addSegment(pos,\n        size * vec2(-0.7, 1.0), size * vec2(-0.7, 0.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.5, 1.0), size * vec2(-0.5, 0.19),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.7, 1.0), size * vec2(-0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.5, 0.19), size * vec2(0.4, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.5 + 0.1 * 1.0 / 0.9, 0.0), size * vec2(0.7, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.4, 1.0), size * vec2(0.7, 1.0),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterLDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    \n    addSegment(pos,\n        size * vec2(-0.7, 1.0), size * vec2(-0.7, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.5, 1.0), size * vec2(-0.5, -0.8),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.7, 1.0), size * vec2(-0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.7, -1.0), size * vec2(0.7, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.5, -0.8), size * vec2(0.7, -0.8),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, -1.0), size * vec2(0.7, -0.8),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterMDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.x = abs(pos.x);\n    \n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.7, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, 0.8), size * vec2(0.5, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.4, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, -1.0), size * vec2(0.5, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.4, 1.0), size * vec2(0.0, 0.2),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, 0.8), size * vec2(0.1, 0.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.0, 0.0), size * vec2(0.1, 0.0),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterNDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.x *= -1.0;\n    \n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.7, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, 0.8), size * vec2(0.5, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, 1.0), size * vec2(0.4, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.7, -1.0), size * vec2(0.5, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.7, 1.0), size * vec2(-0.7, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.5, -0.8), size * vec2(-0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.7, -1.0), size * vec2(-0.4, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.7, 1.0), size * vec2(-0.5, 1.0),\n        d, cnt);\n    addSegment(pos, \n        size * vec2(0.4, 1.0), size * vec2(-0.5, -0.8),\n        d, cnt);\n    addSegment(pos, \n        size * vec2(0.5, 0.8), size * vec2(-0.4, -1.0),\n        d, cnt);\n    \n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterODist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    pos = abs(pos);\n    \n    addSegment(pos,\n        size * vec2(0.7, 0.0), size * vec2(0.7, 0.3),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.5, 0.0), size * vec2(0.5, 0.3),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.0, 0.3), size * vec2(0.7, 0.3), size * vec2(0.0, 1.0),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.0, 0.3), size * vec2(0.5, 0.3), size * vec2(0.0, 0.8),\n        d, cnt);\n    \n    \n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterPDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    \n    addSegment(pos,\n        size * vec2(-0.7, 1.0), size * vec2(-0.7, -1.0),\n        d, cnt);\n    addSegment(vec2(pos.x, abs(pos.y + 0.1 * size) - 0.1 * size),\n        size * vec2(-0.5, 0.0), size * vec2(-0.5, 0.8),\n        d, cnt);\n    addSegment(vec2(pos.x, abs(pos.y)),\n        size * vec2(-0.7, 1.0), size * vec2(-0.5, 1.0),\n        d, cnt);\n    addSegment(vec2(pos.x, abs(abs(pos.y - 0.4 * size) - 0.5 * size) + 0.9 * size),\n        size * vec2(-0.5, 1.0), size * vec2(0.1, 1.0),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.1, 0.4), size * vec2(0.1, -0.2), size * vec2(0.1, 1.0),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.1, 0.4), size * vec2(0.1, 0.0), size * vec2(0.1, 0.8),\n        d, cnt);\n    \n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterQDist(vec2 pos, float size) {\n    pos /= size;\n\n    float d = 1e12;\n    float cnt = 0.0;\n    vec2 p = pos;\n    pos = abs(pos);\n    \n    vec2 p1 = normalize(vec2(0.495, -0.795) - vec2(0.0, -0.3)) * 0.7 + vec2(0.0, -0.3);\n    vec2 p2 = normalize(vec2(0.35, -0.65) - vec2(0.0, -0.3)) * 0.5 + vec2(0.0, -0.3);\n    vec2 p3 = normalize(vec2(0.24, -0.74) - vec2(0.0, -0.3)) * 0.5 + vec2(0.0, -0.3);\n    vec2 p4 = normalize(vec2(0.39, -0.89) - vec2(0.0, -0.3)) * 0.7 + vec2(0.0, -0.3);\n    \n    addSegment(pos,\n        vec2(0.7, 0.0), vec2(0.7, 0.3),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.5, 0.0), vec2(0.5, 0.3),\n        d, cnt);\n    addCircleSegment(p,\n        vec2(0.0, 0.3), vec2(0.7, 0.3), vec2(-0.7, 0.3),\n        d, cnt);\n    addCircleSegment(p,\n        vec2(0.0, 0.3), vec2(0.5, 0.3), vec2(-0.5, 0.3),\n        d, cnt);\n    addCircleSegment(p,\n        vec2(0.0, -0.3), p1, vec2(0.7, -0.3),\n        d, cnt);\n    addCircleSegment(p,\n        vec2(0.0, -0.3), vec2(-0.7, -0.3 - 1e-5), p4,\n        d, cnt);\n    addCircleSegment(p,\n        vec2(0.0, -0.3), p2, vec2(0.7, -0.3),\n        d, cnt);\n    addCircleSegment(p,\n        vec2(0.0, -0.3), vec2(-0.5, -0.3 - 1e-5), p3,\n        d, cnt);\n    addSegment(p,\n        vec2(0.7, -1.0), vec2(0.5, -1.0),\n        d, cnt);\n    addSegment(p,\n        vec2(0.2, -0.5), vec2(0.0, -0.5),\n        d, cnt);\n    addSegment(p,\n        vec2(0.7, -1.0), p1,\n        d, cnt);\n    addSegment(p,\n        p2, vec2(0.2, -0.5),\n        d, cnt);\n    addSegment(p,\n        p3, vec2(0.0, -0.5),\n        d, cnt);\n    addSegment(p,\n        vec2(0.5, -1.0), p4,\n        d, cnt);\n    \n    \n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    d *= size;\n    return d;\n}\nfloat letterRDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    \n    addSegment(pos,\n        size * vec2(-0.7, 1.0), size * vec2(-0.7, -1.0),\n        d, cnt);\n    addSegment(vec2(pos.x, abs(pos.y + 0.1 * size) - 0.1 * size),\n        size * vec2(-0.5, 0.0), size * vec2(-0.5, 0.8),\n        d, cnt);\n    addSegment(vec2(pos.x, abs(pos.y)),\n        size * vec2(-0.7, 1.0), size * vec2(-0.5, 1.0),\n        d, cnt);\n    addSegment(vec2(pos.x, abs(pos.y - 0.9 * size) + 0.9 * size),\n        size * vec2(-0.5, 1.0), size * vec2(0.1, 1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.5, 0.0), size * vec2(0.1, 0.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.5, -0.2), size * vec2(-0.14, -0.2),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.46, -1.0), size * vec2(0.7, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(0.1, -0.2), size * vec2(0.7, -1.0),\n        d, cnt);\n    addSegment(pos,\n        size * vec2(-0.14, -0.2), size * vec2(0.46, -1.0),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.1, 0.4), size * vec2(0.1, -0.2), size * vec2(0.1, 1.0),\n        d, cnt);\n    addCircleSegment(pos,\n        size * vec2(0.1, 0.4), size * vec2(0.1, 0.0), size * vec2(0.1, 0.8),\n        d, cnt);\n    \n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\nfloat letterSDist(vec2 pos, float size) {\n    pos /= size;\n\n    float d = 1e12;\n    float cnt = 0.0;\n    //pos *= sign(pos.y);\n    \n    float angle = radians(22.0);\n    \n    vec2 p1 = vec2(-0.2, 1.0);\n    vec2 p2 = vec2(-0.2 - sin(angle) * 0.5, (1.0 - cos(angle)) * 0.5);\n    vec2 p3 = vec2(0.7, p1.y);\n    vec2 p4 = vec2(p2.x + p2.y / tan(angle), 0.0);\n    \n    \n    addSegment(pos,\n        p1, p3,\n        d, cnt);\n    addSegment(pos,\n        p2, p4,\n        d, cnt);\n    addSegment(pos,\n        p3, p3 - vec2(0, 1) * 0.2,\n        d, cnt);\n    addSegment(pos,\n        (p2 - vec2(-0.2, 0.5)) * 0.3 / 0.5 + vec2(-0.2, 0.5),\n        p4 * vec2(-1, 1),\n        d, cnt);\n    addSegment(pos,\n        (p1 - vec2(-0.2, 0.5)) * 0.3 / 0.5 + vec2(-0.2, 0.5),\n        p3 - vec2(0, 1) * 0.2,\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(-0.2, 0.5),\n        p1,\n        vec2(-0.7, 0.5),\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(-0.2, 0.5),\n        vec2(-0.7, 0.5 - 1e-5),\n        p2,\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(-0.2, 0.5),\n        vec2(-0.5, 0.5 - 1e-5),\n        (p2 - vec2(-0.2, 0.5)) * 0.3 / 0.5 + vec2(-0.2, 0.5),\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(-0.2, 0.5),\n        vec2(-0.5, 0.5),\n        (p1 - vec2(-0.2, 0.5)) * 0.3 / 0.5 + vec2(-0.2, 0.5),\n        d, cnt);\n        \n    pos *= -1.0;\n    addSegment(pos,\n        p1, p3,\n        d, cnt);\n    addSegment(pos,\n        p2, p4,\n        d, cnt);\n    addSegment(pos,\n        p3, p3 - vec2(0, 1) * 0.2,\n        d, cnt);\n    addSegment(pos,\n        (p2 - vec2(-0.2, 0.5)) * 0.3 / 0.5 + vec2(-0.2, 0.5),\n        p4 * vec2(-1, 1),\n        d, cnt);\n    addSegment(pos,\n        (p1 - vec2(-0.2, 0.5)) * 0.3 / 0.5 + vec2(-0.2, 0.5),\n        p3 - vec2(0, 1) * 0.2,\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(-0.2, 0.5),\n        p1,\n        vec2(-0.7, 0.5),\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(-0.2, 0.5),\n        vec2(-0.7, 0.5 - 1e-5),\n        p2,\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(-0.2, 0.5),\n        vec2(-0.5, 0.5 - 1e-5),\n        (p2 - vec2(-0.2, 0.5)) * 0.3 / 0.5 + vec2(-0.2, 0.5),\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(-0.2, 0.5),\n        vec2(-0.5, 0.5),\n        (p1 - vec2(-0.2, 0.5)) * 0.3 / 0.5 + vec2(-0.2, 0.5),\n        d, cnt);\n    \n    \n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    d *= size;\n    return d;\n}\nfloat letterTDist(vec2 pos, float size) {\n    pos /= size;\n\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.x = abs(pos.x);\n    \n    addSegment(pos,\n        vec2(0.0, 1.0), vec2(0.7, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.7, 0.8), vec2(0.7, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.7, 0.8), vec2(0.1, 0.8),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.1, -1.0), vec2(0.1, 0.8),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.1, -1.0), vec2(0.0, -1.0),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    d *= size;\n    return d;\n}\nfloat letterUDist(vec2 pos, float size) {\n    pos /= size;\n\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.x = abs(pos.x);\n    \n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.7, -0.3),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.5, 1.0), vec2(0.5, -0.3),\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(0.0, -0.3), vec2(0.7, -0.3), vec2(0.0, -1.0),\n        d, cnt);\n    addCircleSegment(pos,\n        vec2(0.0, -0.3), vec2(0.5, -0.3), vec2(0.0, -0.8),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    d *= size;\n    return d;\n}\nfloat letterVDist(vec2 pos, float size) {\n    pos /= size;\n\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.x = abs(pos.x);\n    \n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.1, -1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.5, 1.0), vec2(0.0, -1.0 + 2.0 / 6.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.1, -1.0), vec2(0.0, -1.0),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    d *= size;\n    return d;\n}\nfloat letterWDist(vec2 pos, float size) {\n    pos /= size;\n\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.x = abs(pos.x);\n    \n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.4, -1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.5, 1.0), vec2(0.3, -1.0 + 2.0 / 3.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.1, 1.0), vec2(0.3, -1.0 + 2.0 / 3.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.1, 1.0), vec2(0.0, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.2, -1.0), vec2(0.4, -1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.2, -1.0), vec2(0.0, 1.0 - 2.0 / 3.0),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    d *= size;\n    return d;\n}\nfloat letterXDist(vec2 pos, float size) {\n    pos /= size;\n\n    float d = 1e12;\n    float cnt = 0.0;\n    pos = abs(pos);\n    \n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.1, 0.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.0, 1.0 - 1.0 / 1.2), vec2(0.5, 1.0),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    d *= size;\n    return d;\n}\nfloat letterYDist(vec2 pos, float size) {\n    pos /= size;\n\n    float d = 1e12;\n    float cnt = 0.0;\n    pos.x = abs(pos.x);\n    \n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.1, 0.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.7, 1.0), vec2(0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.0, 1.0 - 1.0 / 1.2), vec2(0.5, 1.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.1, -1.0), vec2(0.1, 0.0),\n        d, cnt);\n    addSegment(pos,\n        vec2(0.1, -1.0), vec2(0.0, -1.0),\n        d, cnt);\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    d *= size;\n    return d;\n}\nfloat letterZDist(vec2 pos, float size) {\n    float d = 1e12;\n    float cnt = 0.0;\n    \n    d = min(d, segmentDist(abs(pos), size * vec2(0.0, 1.0), size * vec2(0.7, 1.0)));\n    d = min(d, segmentDist(pos * sign(pos.y), size * vec2(-0.7, 0.8), size * vec2(0.5, 0.8)));\n    d = min(d, segmentDist(abs(pos), size * vec2(0.7, 1.0), size * vec2(0.7, 0.8)));\n    cnt += checkSegment(abs(pos), size * vec2(0.7, 1.0), size * vec2(0.7, 0.8));\n    d = min(d, segmentDist(pos, size * vec2(-0.5, -0.8), size * vec2(0.7, 0.8)));\n    cnt += checkSegment(pos, size * vec2(-0.5, -0.8), size * vec2(0.7, 0.8));\n    d = min(d, segmentDist(pos, size * vec2(-0.7, -0.8), size * vec2(0.5, 0.8)));\n    cnt += checkSegment(pos, size * vec2(-0.7, -0.8), size * vec2(0.5, 0.8));\n    \n    d *= 1.0 - mod(cnt, 2.0) * 2.0;\n    return d;\n}\n","name":"Common","description":"","type":"common"}]}