{"ver":"0.1","info":{"id":"clfyz2","date":"1690931635","viewed":101,"name":"MrFuzz - Test3","username":"MrFuzz32","description":"test","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec3 palette(float t){\n    vec3 a = vec3(0.968, 1.118, 1.278);\n    vec3 b = vec3(0.268, 0.318, 0.448);\n    vec3 c = vec3(-0.342, -0.162, 0.158);\n    vec3 d = vec3(-0.582, -0.452, -0.452);\n\n    return a + b*cos(2.0*PI*(c*t+d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n \n    //Conform pixel coordinates to -1 to 1, and adjust for aspect ratio\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 finalColour = vec3(0.0);\n    float pixel_angle = mod(atan(uv.x,uv.y),2.0*PI);\n    float pixel_distance =  length(uv)* 2.0;\n    float line_angle = mod(iTime,2.0*PI);\n\n    vec3 col = palette((abs(uv.y)-0.5)*(sin(iTime/4.0)*4.0));\n    col *= 0.05/mod(abs(line_angle-pixel_angle),2.0*PI);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}