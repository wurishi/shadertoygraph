{"ver":"0.1","info":{"id":"4stGzM","date":"1448629231","viewed":211,"name":"2D table sphere","username":"tholzer","description":"fork of https://www.shadertoy.com/view/4d33RM","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//-------------------------------------------------------\n// 2DtableSphere.glsl\n// fork of https://www.shadertoy.com/view/4d33RM\n//-------------------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 offs = vec2(cos(iTime * 0.5), 0.0);\n\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y; // adjust for aspect\n\n    // scroll sphere around with offset\n    uv += offs * 0.5;\n\n    float rr = dot(uv, uv);\n    float t = abs(1.0 - rr);\n\tfloat z = sqrt(t);\n    if (rr<1.0)        // inside sphere?\n        uv *= 1.5 - z;\n    \n\tfragColor = texture(iChannel0, uv * 0.25 + offs * 0.5);\n    \n    // darken a bit along the seam (gamma-correct-ish)\n    fragColor = sqrt(fragColor * fragColor * t);\n}","name":"Image","description":"","type":"image"}]}