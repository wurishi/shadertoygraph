{"ver":"0.1","info":{"id":"ttlfz2","date":"1597241957","viewed":84,"name":"fork-Chords Experiment","username":"jorge2017a1","description":"//Modificado por jorge2017a1\n//Creado por MysteryPancake en 2020-07-06\n//Chords Experiment\n//https://www.shadertoy.com/view/WtByDR\n","likes":4,"published":1,"flags":8,"usePreview":0,"tags":["forkchordsexperiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// From https://www.shadertoy.com/view/ltfSRr\nfloat message(vec2 uv) {\n\tuv -= vec2(1.0, 10.0);\n\tif ((uv.x < 0.0) || (uv.x >= 32.0) || (uv.y < 0.0) || (uv.y >= 3.0)) return -1.0;\n\tint i = 1, bit = int(pow(2.0, floor(32.0 - uv.x)));\n\tif (int(uv.y) == 2) i = 928473456 / bit;\n\tif (int(uv.y) == 1) i = 626348112 / bit;\n\tif (int(uv.y) == 0) i = 1735745872 / bit;\n\treturn float(i - 2 * (i / 2));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n\t\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\tif (iResolution.y < 2000.0) \n    {\n\t\tfloat c = message(fragCoord.xy / 8.0);\n\t\tif (c >= 0.0)\n        {\n            vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n            vec3 colout=col+c;\n\t\t\tfragColor = vec4(colout,1.0);\n\t\t\treturn;\n\t\t}\n\t}\n\t//vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv, 0.5 + 0.5 * mod(iTime, 0.25), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Modificado por jorge2017a1\n//Creado por MysteryPancake en 2020-07-06\n//Chords Experiment\n//https://www.shadertoy.com/view/WtByDR\n\n\n#define pi 3.1415926538\n\nfloat noteFreq(float n) {\n\treturn 440.0 * pow(2.0, floor(n) / 12.0);\n}\n\n// From https://www.shadertoy.com/view/llByWR\nfloat sawtooth(float d, float x) {\n\treturn (1.0 - 2.0 * acos((1.0 - d) * -cos(x / 2.0)) / pi) * (2.0 * atan(sin(x / 2.0) / d) / pi);\n}\n\n// Time, base note, range, notes per second, mod\nfloat arpeggiate(float t, float b, float r, float n, float m) {\n\treturn mod(floor(t / n), m) * r + b;\n}\n\nvec2 mainSound( in int samp,float time) {\n\t\n\tconst float phaseOffset = 0.01;\n\n\tfloat bass = arpeggiate(time, 20.0, 3.0, 2.0, 12.0);\n\tfloat low = arpeggiate(time, 12.0, 40.0, 2.0, 2.0);\n\tfloat mid = arpeggiate(time, 16.0, 2.0, 1.0, 4.0);\n\tfloat high = arpeggiate(time, 24.0, 3.0, 2.0, 2.0);\n\tfloat higher = arpeggiate(time, 28.0, 2.0, 1.0, 40.0);\n\tif (mod(floor(time / 16.0), 2.0) != 0.0) {\n\t\tbass = arpeggiate(time, 0.0, 4.0, 2.0, 2.0);\n\t\tlow = arpeggiate(time, 12.0, 2.0, 2.0, 2.0);\n\t\tmid = arpeggiate(time, 12.0, 2.0, 2.0, 4.0);\n\t\thigh = arpeggiate(time, 24.0, 2.0, 2.0, 2.0);\n\t\thigher = arpeggiate(time, 36.0, 2.4, 0.25, 4.0);\n\t}\n\t\n\tfloat[] notes = float[] (bass, low, mid, high, higher);\n\tfloat[] amplitudes = float[] (1.2, 1.0, 1.2, 0.6, 0.3);\n\t\n\tfloat left = 0.0;\n\tfloat right = 0.0;\n    \n    float left2 = 0.0;\n\tfloat right2 = 0.0;\n\t\n\tfor (int i = 0; i < notes.length(); i++)\n    {\n\t\tfloat repeat = mod(time, 0.25) * (5.0 - cos(time) * 2.0);\n\t\t\n        if (i == 0) \n        {\n\t\t\trepeat = mod(time, 0.125) * (2.0 - cos(time+cos(time)));\n\t\t}\n        \n        repeat = min(repeat, 0.7 + cos(time * 0.25) * 0.3);\n\t\tfloat offset = sin(float(i)) * phaseOffset;\n\t\tleft += sawtooth(repeat, (time + offset) * noteFreq(notes[i])) * amplitudes[i];\n\t\tfloat offset2 = cos(float(i)) * phaseOffset;\n\t\tright += sawtooth(repeat, (time + offset2) * noteFreq(notes[i])) * amplitudes[i];\n        \n        //left2 += sin(repeat* (time + offset) * noteFreq(notes[i])) * amplitudes[i];\n        //right2 += sin(repeat* (time + offset2) * noteFreq(notes[i])) * amplitudes[i];\n        \n        left2 += sin( (time + offset) * noteFreq(notes[i])+ 2.0*cos( noteFreq(notes[i]))) * amplitudes[i];\n        right2 += sin( (time + offset2) * noteFreq(notes[i]+ 2.0*cos( noteFreq(notes[i])))) * amplitudes[i];\n        \n\t}\n\treturn vec2(left+left2*0.5, right+right2*0.5) / float(notes.length());\n}","name":"Sound","description":"","type":"sound"}]}