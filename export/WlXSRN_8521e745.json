{"ver":"0.1","info":{"id":"WlXSRN","date":"1562180622","viewed":138,"name":"Crummy Blur","username":"zheck","description":"A crummy but relatively quick \"blur\"","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NEIGHBOR_DIST      4.0\n#define SOURCE_WEIGHT      0.3\n#define ANIMATION_SPEED    5.0\n\nconst float numSamples = 4.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float neighbor_weight = (1.0f - SOURCE_WEIGHT) / numSamples; //automatically calculated based on source weight, no need to change\n    \n    vec2 v_texCoord = fragCoord.xy / iResolution.xy;\n    float xOffset = 1.0f / iResolution.x * NEIGHBOR_DIST;\n    float yOffset = 1.0f / iResolution.y * NEIGHBOR_DIST;\n\tvec4 sourcePixel = texture( iChannel0, v_texCoord );\n        \n    sourcePixel = sourcePixel * SOURCE_WEIGHT;\n    \n    vec4 leftPixel = texture( iChannel0, vec2( v_texCoord.x - xOffset, v_texCoord.y ) );\n    sourcePixel += leftPixel * neighbor_weight;\n    \n    vec4 rightPixel = texture( iChannel0, vec2( v_texCoord.x + xOffset, v_texCoord.y ) );\n    sourcePixel += rightPixel * neighbor_weight;\n    \n    vec4 topPixel = texture( iChannel0, vec2( v_texCoord.x, v_texCoord.y - yOffset ) );\n    sourcePixel += topPixel * neighbor_weight;\n    \n    vec4 bottomPixel = texture( iChannel0, vec2( v_texCoord.x, v_texCoord.y + yOffset ) );\n    sourcePixel += bottomPixel * neighbor_weight;\n\n    float firstTime = ( sin(iTime * ANIMATION_SPEED) + 1.0f ) * 0.5f;          // goes from 0 to ANIMATION_SPEED\n    float secondTime = 1.0f -  ( sin(iTime * ANIMATION_SPEED) + 1.0f ) * 0.5f; // goes from ANIMATION_SPEED to 0\n    \n    // output color is basically fluctuating between 100% the original and 100% the blurred image\n    fragColor = (sourcePixel * firstTime ) + (texture( iChannel0, v_texCoord ) * secondTime);\n\n}","name":"Image","description":"","type":"image"}]}