{"ver":"0.1","info":{"id":"7tXBDB","date":"1651393038","viewed":107,"name":"Mix function","username":"Behzod","description":"for explaning use of mix func","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["online"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Line(in vec2 p, in vec2 a, in vec2 b) {\n\tvec2 ba = b - a;\n\tvec2 pa = p - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n\treturn length(pa - h * ba);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n    \n    vec2 v1 = vec2(-0.9, 0.0);\n    vec2 v2 = vec2( 0.9, 0.0);\n    \n    float a = Line(p, v1, v2);\n    a = smoothstep(0.0, 0.01, a);\n    \n    \n    float rp = 0.03;\n    float pa1 = smoothstep(0.0, 0.01, length(p - v1) - rp);\n    float pa2 = smoothstep(0.0, 0.01, length(p - v2) - rp);\n    float pa = smoothstep(0.0, 0.01, length(p - m) - rp);\n    \n    vec2 v3 = mix(v1, v2, (m.y + 1.0) / 2.0);\n    float b = Line(p, v1, v2);\n    b = smoothstep(0.0, 0.01, b);\n    \n    \n    float pb1 = smoothstep(0.0, 0.01, length(p - v3) - rp);\n    \n    float cout = a;\n    cout = min(cout, pa1);\n    cout = min(cout, pa2);\n    cout = min(cout, pa);\n    cout = min(cout, pb1);\n    \n    vec3 col = vec3(cout);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}