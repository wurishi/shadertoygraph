{"ver":"0.1","info":{"id":"MdtXD2","date":"1461681354","viewed":2976,"name":"Two lines atmospheric scattering","username":"Bananaft","description":"Attmpt to make fast and simple atmosphere shader.","likes":52,"published":1,"flags":0,"usePreview":0,"tags":["sun","sky","atmosphericscattering","atmosphere","rayleigh","mie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    \n    // animation\n    vec2 sunVec;\n    if (iMouse.x<20.0)\n    {\n     \t   sunVec = vec2((0.8+0.5 * sin(iTime)),( 0.44 + 0.4 * cos( 2.0 * iTime)));\n    }else{\n    \tsunVec = iMouse.xy/iResolution.y;\n    }\n     \t\n   \n    //Mie mask\n    float sun = max(1.0 - (1.0 + 10.0 * sunVec.y + 1.0 * uv.y) * length(uv - sunVec),0.0)\n        + 0.3 * pow(1.0-uv.y,12.0) * (1.6-sunVec.y);\n\t\n    //the sauce\n    fragColor = vec4(mix(vec3(0.3984,0.5117,0.7305), vec3(0.7031,0.4687,0.1055), sun)\n              * ((0.5 + 1.0 * pow(sunVec.y,0.4)) * (1.5-uv.y) + pow(sun, 5.2)\n              * sunVec.y * (5.0 + 15.0 * sunVec.y)),1.0);\n    \n    //fragColor = vec4(sun);\n   \n}","name":"Image","description":"","type":"image"}]}