{"ver":"0.1","info":{"id":"mt3XWl","date":"1685855678","viewed":63,"name":"LivingShpere","username":"Redsun","description":"A living 3D sphere","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","blue","purple","shpere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    // The factor 2.0 increases the color intensity.\n    return mix(2.0 * vec3(0.2, 0.7, 0.9), 2.0 * vec3(1., 0., 1.), t);\n}\n\nvec2 rotate(vec2 p, float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return p*mat2(c, -s, s, c);\n}\n\nfloat map(vec3 p) {\n    for( int i = 0; i<6; ++i){\n        float t = iTime*0.2;\n        p.xz =rotate(p.xz,t);\n        p.xy =rotate(p.xy,t*1.89);\n        p = abs(p) - 0.4;\n    }\n    return length(p);\n}\n\nvec4 rm(vec3 ro, vec3 rd) {\n    float t = 0.;\n    vec3 col = vec3(0.);\n    float d;\n    for(float i =0.; i<64.; i++){\n\t\tvec3 p = ro + rd*t;\n        d = map(p)*.5;\n        if(d<0.02){\n            break;\n        }\n        if(d>100.){\n        \tbreak;\n        }\n        // The factor 1.5 increases the color intensity in the rendered object.\n        col+= 1.8 * palette(length(p)*.1)/(500.*(d));\n        t+=d;\n    }\n    return vec4(col,2./(d*100.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-(iResolution.xy/2.))/iResolution.x;\n\tvec3 ro = vec3(0.,0.,-50.);\n    ro.xz = rotate(ro.xz,iTime);\n    vec3 cf = normalize(-ro);\n    vec3 cs = normalize(cross(cf,vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cf,cs));\n    vec3 uuv = ro+cf*3. + uv.x*cs + uv.y*cu;\n    vec3 rd = normalize(uuv-ro);\n    vec4 col = rm(ro,rd);\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}