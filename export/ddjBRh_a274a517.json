{"ver":"0.1","info":{"id":"ddjBRh","date":"1689440187","viewed":135,"name":"Color torus ","username":"SUBAUX","description":"Its a thing ","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["poo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdd3Dr","filepath":"https://soundcloud.com/marcizle-15-1/solstice-rework","previewfilepath":"https://soundcloud.com/marcizle-15-1/solstice-rework","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette (float t) {\n    vec3 a = vec3(.5, .5, .5);\n    vec3 b = vec3(.5, .5, .5);\n    vec3 c = vec3(1., 1., 1.);\n    vec3 d = vec3(0.263, .416, .557);\n    \n   return a + b*cos(6.28318*(c*t+d));\n   }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float t = iTime * .2;\n    vec3 finalColor = vec3(0.0);\n    \n    uv *= mat2(cos(t), -sin(t), sin(t), cos(t));\n    \n    vec3 ro = vec3(0, 0, -1);\n    vec3 lookat = mix(vec3(0), vec3(-1, 0, -1), sin(t*1.56)*.5+.5);\n    float zoom = mix(.2, .7, sin(t)*.5+.5);\n   \n    vec3 f = normalize(lookat-ro),\n        r = normalize(cross(vec3(0, 1., 0.), f)), \n        u = cross(f, r),\n        c = ro + f * zoom,\n        i = c + uv.x * r + uv.y * u, \n        rd = normalize(i-ro);\n    \n    float radius = mix(.3, 1.5, sin(t*1.4)*.5+.5);\n    float ds, dO;\n    vec3 p; \n    \n   for(int i=0; i<100; i++) {\n  \n       p = ro + rd * dO;\n       ds = -(length(vec2(length(p.xz)-1., p.y))-radius);\n       if(ds<.001) break;\n       dO += ds;\n       \n       \n   }\n    \n    \n    \n    if(ds<.001) {\n        float x = atan(p.x, p.x)+cos(t)*.5;\n        float y = atan(length(p.yz)-1., p.y);\n       \n        float bands = sin(y*10.+x*10.);\n        float ripples = sin((x*10.-y*30.)*3.)*.5+.5;\n        float waves = sin(x-y*6.+t*20.);\n        \n        float b1 = smoothstep(-.2, .2, bands);\n        float b2 = smoothstep(-.2, .2, bands-.05);\n         for(float i = 0.0; i < 3.0; i++){  \n    uv = fract(uv * 1.5) - .5;\n    \n    float d = length(uv)*exp(-length(b1));\n    \n    vec3 col = palette(length(b2)+ i * .4 + iTime*.4);\n    \n    d = sin(d*8. + iTime)/8.;\n    d = abs(d)*sqrt(col.x);\n    \n    d = pow(.01/d, 1.2);\n    \n    finalColor += col * d;\n   } \n\n        \n        float m = b1*(1.-b2);\n        m = max(m, ripples*b2*max(0., waves));\n        m += max(0., waves*.3*b2);\n        \n     //col += mix(m, 1.-m, smoothstep(-.3, .3, sin(x+t))); \n    }\n\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}