{"ver":"0.1","info":{"id":"dttcDs","date":"1699854441","viewed":89,"name":"GptLSL","username":"jackjackdev","description":"Gpt made the first version of this shader, then I helped a little","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["gpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n    // uv.x *= iResolution.x / iResolution.y;\n\n    float color = 0.0;\n    vec2 p = uv * 2.0;\n    float time = iTime * 0.5;\n\n    for (int i = 0; i < 20; i++) {\n        p = abs(sin(p)) / dot(p, p) - vec2(cos(time * 0.5) + 1., sin(time * 0.5));\n        color += exp(-length(p*10.0 - vec2(0.8, 0.2)));\n    }\n\n    color = sqrt(color);\n    float grayscale = 0.8 + 0.5 * cos(color + time);\n\n    fragColor = vec4(vec3(grayscale), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}