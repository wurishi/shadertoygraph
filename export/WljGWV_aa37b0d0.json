{"ver":"0.1","info":{"id":"WljGWV","date":"1561167662","viewed":277,"name":"Mandelbrot texture orbit trap","username":"matistjati","description":"A mandelbrot set colord by indexing a texture with the coordinates of orbit traps","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","texture","orbittrap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 origin = vec2(-.92885, -0.3119);\n//const vec2 origin = vec2(-.5, 0.);\n\nvec3 render(vec2 pos)\n{\n\tvec2 z = pos;\n    vec2 trap = vec2(1000.);\n    const float maxIter = 1024.;\n    const float escapeRadius = 8.;\n    float iP;\n    vec3 col = vec3(0.);\n    for (float i = 0.;i < maxIter; i++) \n    {\n        if (dot(z,z)> escapeRadius) break;\n        z = mat2(z, -z.y, z.x) * z + pos; // Z -> Z^2+C\n        trap = min(trap, vec2(length(z), length( fract(z)-.5)));\n\n\n        iP++;\n     }\n    \n\n    //return vec3(iP*z.x, iP*length(z), iP*z.y);\n    //return (iP == 1.) ? vec3(0.) : texture(iChannel0, z/escapeRadius, 0.0).xyz;\n    return (iP == maxIter) ? texture(iChannel0, abs(z)).xyz : texture(iChannel0, trap).xyz;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tz = 0.5-0.5*cos(0.225*iTime);\n    float zoom = pow( 0.5, 13.0*tz );\t\n// Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = (2. * fragCoord - iResolution.xy ) / iResolution.y;\n    \n    vec2 c = origin + uv*zoom;\n    // Time varying pixel color\n    //uv += iMouse.xy/iResolution.xy*4.-1.;\n\n    vec3 col = (render(c));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}