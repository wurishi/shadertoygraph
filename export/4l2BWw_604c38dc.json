{"ver":"0.1","info":{"id":"4l2BWw","date":"1516036716","viewed":134,"name":"Pondy Ring","username":"YsmrRy","description":"Delicious Pondy Ring!!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lightDir = normalize(vec3(5.,5.,1.));\n\nvec3 onRep( vec3 p, float interval )\n{ return mod(p, interval) - interval * 0.5; }\n\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat f( vec3 pos )\n{\n    float cos4 = 2.*pow((pos.x*pos.x-pos.y*pos.y)/(pos.x*pos.x+pos.y*pos.y),2.)-1.;\n    float res = pow(length(pos.xy)-8.-abs(cos4/2.),2.)+pos.z*pos.z-pow(2.+3.*abs(cos4/2.),2.);\n   \t//float res = length(pos)-10.;    \n    \n    return res;\n}\n\nvec3 grad( in vec3 x )\n{\n    vec2 h = vec2( 0.0001, 0.0 );\n    return vec3( f(x+h.xyy) - f(x-h.xyy),\n                 f(x+h.yxy) - f(x-h.yxy), f(x+h.yyx) - f(x-h.yyx) )/(1.0*h.x);\n}\n\nfloat distFunc( vec3 pos )\n{\n    /*pos.xz = mod(pos.xz,1.)-0.5*1.;\n    pos /= 0.5;\n    vec2 t = vec2(0.6,0.10);\n    float amp = 0.6*sin(iTime)+0.3;\n    pos.y -= amp;\n    vec2 q = vec2(length(pos.xz)-t.x,pos.y);\n\tfloat res = min( length(vec3(pos.x, pos.y, pos.z))-.2, pos.y+amp );\n    res = min( res, length(q)-t.y );\n    //res = min( res, pos.x-3. );\n    return res*0.5;*/\n    \n    float scale = 0.04, rep = 1.2;\n    pos.xyz = pos.xzy;\n    pos.xy = mod(pos.xy,rep)-0.5*rep;\n    pos /= scale;\n    vec2 t = vec2(0.6,0.10);\n    float amp = 4.*sin(iTime)+0.3;\n    pos.z -= amp;\n    float v = f( pos );\n    vec3  g = grad( pos );\n    float de = abs(v)/length(g);\n    \n    return min(de,pos.z+amp)*scale;\n}\n\nvec3 getNormal( vec3 pos )\n{\n    float eps = 0.0001;\n    \n    return normalize( vec3( distFunc(pos)-distFunc(vec3( pos.x-eps, pos.y, pos.z )),\n                                              distFunc(pos)-distFunc(vec3( pos.x, pos.y-eps, pos.z )),\n                          \t\t\t\t\t  distFunc(pos)-distFunc(vec3( pos.x, pos.y, pos.z-eps ))) );\n}\n\nfloat softshadow( in vec3 ro, in vec3 rd, in float mint, in float tmax )\n{\n\tfloat res = 1.0;\n    float t = mint;\n    for( int i=0; i<16; i++ )\n    {\n\t\tfloat h = distFunc( ro + rd*t );\n        res = min( res, 8.0*h/t );\n        t += clamp( h, 0.02, 0.10 );\n        if( h<0.001 || t>tmax ) break;\n    }\n    return clamp( res, 0.0, 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy*2.-iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    vec3 col = vec3( 0. );\n    \n    vec3 camPos = vec3( 1., 6., 10. );\n    vec3 ray = normalize( vec3( uv, 0. ) - camPos );\n    vec3 cur = camPos, curM;\n    vec3 normal = vec3(0.);\n    float diff = 0.0;\n    bool hit = false;\n    float ite;\n    \n    for( int j = 0; j < 2; ++j )\n    {\n    \tfor( int i = 0; i < 200; ++i )\n    \t{\n            float d = distFunc( cur );\n            if( d < 0.0001 )\n            {\n                normal = getNormal( cur );\n                diff += 0.9*dot( normal, lightDir );\n                hit = true;\n                ite = float(i);\n                break;\n            }\n\n            cur += ray * d;\n        }\n        \n        if( j == 0 )\n            curM = cur;\n       \t\n        if( !hit || curM.y <= 0.01 )\n            break;\n        \n        cur += normal*0.01;\n        ray = reflect( ray, normal );\n    }\n    \n    if( curM.y <= 0.01 )\n    {\n        float f = mod( floor(5.0*cur.z) + floor(5.0*cur.x), 2.0);\n        col = 0.1 + 0.1*f*vec3(1.0);\n    }\n    \n    vec3 ref = reflect( ray, normal );\n    float spe = pow(clamp( dot( ref, lightDir ), 0.0, 1.0 ),16.0);\n    \n    col += 1.2*vec3( 0.7, 0.8, 0.9 )*1.3*vec3( diff )/*hsv2rgb(vec3(curM.z/4.,0.8,1.0))*/*vec3(216./255.,96./255.,16./255.)*softshadow( cur, lightDir, 0.02, 2.5 )+vec3(0.1);\n    col += spe*vec3( diff );\n    col += 0.1*softshadow( cur, ref, 0.02, 2.5 );\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}