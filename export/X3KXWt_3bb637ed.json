{"ver":"0.1","info":{"id":"X3KXWt","date":"1720636500","viewed":32,"name":"Pulsating Hexagons","username":"Dipper98","description":"My first shader, a simple 2D animation.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nMy first shader!\n\nCredit to this tutorial for multiple functions.\nhttps://inspirnathan.com/posts/47-shadertoy-tutorial-part-1\nCredit to Inigo Quilez for the hexagon primitive.\nhttps://iquilezles.org/articles/distfunctions2d/\n*/\nconst float PULSATE = 20.;\nvec3 getBackgroundColor(vec2 uv) {\n  uv = uv * 0.5 + 0.5; // remap uv from <-0.5,0.5> to <0.25,0.75>\n  vec3 gradientStartColor = vec3(1., 0., 1.);\n  vec3 gradientEndColor = vec3(0., 1., 1.);\n  return vec3(0.,0.,0.); // gradient goes from bottom to top\n}\nfloat sdHexagon( in vec2 p, in float r ){\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p+sin(iTime)/PULSATE)*sign(p.y);\n}\nfloat opRep(vec2 p, float r, vec2 c){\n  vec2 q = mod(p+0.5*c,c)-0.5*c;\n  return sdHexagon(q, r);\n}\nvec3 drawScene(vec2 uv) {\n  vec3 col = getBackgroundColor(vec2(0, 0));\n\n  float res; // result\n  res = opRep(uv, 0.05-sin(iTime)/PULSATE, vec2(0.25-sin(iTime)/PULSATE, 0.25-sin(iTime)/PULSATE));\n  res = smoothstep(0., 0.03, res);\n  col = mix(vec3(sin(iTime),cos(iTime),tan(iTime)), col, res);\n  return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n  vec3 col = drawScene(uv);\n  fragColor = vec4(col,1.0); // Output to screen\n}","name":"Image","description":"","type":"image"}]}