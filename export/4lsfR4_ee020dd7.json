{"ver":"0.1","info":{"id":"4lsfR4","date":"1511183594","viewed":277,"name":"box cloud","username":"aadebdeb","description":"box cloud","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec4 p) {\n    vec2 uv = p.xy + vec2(13.0, 37.0) * p.zw;\n\treturn texture(iChannel0, uv / 256.0).x;\n    //return fract(sin(dot(p, vec4(12.435, 69.432, 27.345, 31.480))) * 4324.6554);\n}\n\nfloat noise(vec4 p) {\n\tvec4 i = floor(p);\n\tvec4 f = fract(p);\n\t\n\tf = f * f * (3.0 - 2.0 * f);\n\t\n\treturn mix(mix(mix(mix(random(i + vec4(0.0, 0.0, 0.0, 0.0)), random(i + vec4(1.0, 0.0, 0.0, 0.0)), f.x), \n\t\t                   mix(random(i + vec4(0.0, 1.0, 0.0, 0.0)), random(i + vec4(1.0, 1.0, 0.0, 0.0)), f.x), f.y),\n\t\t           mix(mix(random(i + vec4(0.0, 0.0, 1.0, 0.0)), random(i + vec4(1.0, 0.0, 1.0, 0.0)), f.x), \n\t\t                  mix(random(i + vec4(0.0, 1.0, 1.0, 0.0)), random(i + vec4(1.0, 1.0, 1.0, 0.0)), f.x), f.y), f.z),\n\t\t   mix(mix(mix(random(i + vec4(0.0, 0.0, 0.0, 1.0)), random(i + vec4(1.0, 0.0, 0.0, 1.0)), f.x), \n\t\t                   mix(random(i + vec4(0.0, 1.0, 0.0, 1.0)), random(i + vec4(1.0, 1.0, 0.0, 1.0)), f.x), f.y),\n\t\t           mix(mix(random(i + vec4(0.0, 0.0, 1.0, 1.0)), random(i + vec4(1.0, 0.0, 1.0, 1.0)), f.x), \n\t\t                  mix(random(i + vec4(0.0, 1.0, 1.0, 1.0)), random(i + vec4(1.0, 1.0, 1.0, 1.0)), f.x), f.y), f.z), f.w);\n}\n\nfloat fbm(vec4 p) {\n\tfloat v = 0.0;\n\tfloat a = 0.5;\n\tp += 100.0;\n\tfor (int i = 0; i < 5; i++) {\n\t\tv += a * noise(p);\n\t\ta *= 0.5;\n\t\tp *= 2.0;\n\t\tp += 100.0;\n\t}\n\treturn v;\n}\n\nvec4 map(vec3 p) {\n\tfloat d = length(max(abs(p) - 0.6, 0.0)) - 0.1 > 0.01 ? 0.0 : fbm(vec4(p * 4.0, iTime));\n\td = pow(d, 3.5);\n\tvec3 c = mix(vec3(1.0), vec3(0.2), d);\n\treturn vec4(c, d);\n}\n\nvec3 raymarch(vec3 ro, vec3 rd) {\n\n\tfloat t = 1.0;\n\tvec4 sum = vec4(0.0);\n\tfor (int i = 0; i < 100; i++) {\n\t\tvec3 p = ro + t * rd;\n\t\tvec4 res = map(p);\n\t\tvec3 c = res.rgb;\n\t\tfloat a = res.a * 0.5;\n\t\tfloat alpha = (1.0 - sum.a) * a;\n\t\tsum += vec4(c * alpha, alpha);\n\t\tt += 0.02;\n\t}\n\t\n\tvec3 sky = mix(vec3(0.95, 0.62, 0.5), vec3(0.08, 0.01, 0.12), clamp(rd.y * 0.5 + 1.0, 0.0, 1.0));\n\t\n\tvec3 col = sum.xyz + sky * (1.0 - sum.a);\n\t\n\treturn col;\n\t\n}\n\nmat3 camera(vec3 ro, vec3 ta, vec3 up) \n{\n\tvec3 nz = normalize(ta - ro);\n\tvec3 nx = cross(nz, normalize(up));\n\tvec3 ny = cross(nx, nz);\n\treturn mat3(nx, ny, nz);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.yy;\n    vec2 mo = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n    \n    vec3 ro = vec3(2.0 * cos(mo.x), mo.y * 1.0, 2.0 * sin(mo.x));\n    vec3 ta = vec3(0.0, 0.0, 0.0);\n \tvec3 rd = camera(ro, ta, vec3(0.0, 1.0, 0.0)) * vec3(st, 1.0);\n    \n\tvec3 col = raymarch(ro, rd);\n\tfragColor = vec4(col, 1.0);\n    \n   //\tvec2 uv = fragCoord.xy / iResolution.xy;\n//\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}","name":"Image","description":"","type":"image"}]}