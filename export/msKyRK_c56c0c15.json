{"ver":"0.1","info":{"id":"msKyRK","date":"1696343057","viewed":60,"name":"2D Lighting by willeves07","username":"willeves07","description":"Epic Lighting Shader","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["simple","lighting","lights","2dlighting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define lightCount 2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // light data\n    vec3 len_wid_ang[lightCount] = vec3[lightCount](\n        vec3(1.0, 45.0, cos(iTime)*360.0),\n        vec3(0.5, 999999.0, 0.0)\n    );\n    vec3 lightpos_int[lightCount] = vec3[lightCount](\n        vec3(0.5, 0.5, 1.0),\n        vec3(cos(iTime*1.321)*0.5+0.5,sin(iTime*1.94)*0.5+0.5, 2.0)\n    );\n    vec3 lightcol[lightCount] = vec3[lightCount](\n        vec3(1.0, 0.3, 0.0),\n        vec3(1.0, 1.0, 1.0)\n    );\n    \n    // ambient light\n    vec3 totalLight = vec3(0.1, 0.15, 0.3);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float off = iResolution.x / iResolution.y;\n    \n    // do the lighting calculations\n    for(int i = 0; i < lightCount; i++){\n        float angle = len_wid_ang[i].z / 180.0 * 3.14159;\n    \n        vec2 disp = (uv - lightpos_int[i].xy);\n        disp.x *= off;\n    \n        vec3 col = vec3( pow( clamp( (1.0 - length(disp) / len_wid_ang[i].x), 0.0, 1.0 ), 1.5 ) );\n    \n        float dotp = clamp( dot( vec2(cos(angle), sin(angle)), disp / length(disp) ), 0.0, 1.0);\n        float div = 1.0 - len_wid_ang[i].y / 180.0;\n        float d = smoothstep(div, 1., dotp);\n        col *= pow(d,1.0) * vec3(0.75,0.75,0.75) * lightcol[i] * lightpos_int[i].z;\n    \n        totalLight += col;\n    }\n    \n    fragColor = texture(iChannel0, uv) * vec4(totalLight, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}