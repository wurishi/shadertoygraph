{"ver":"0.1","info":{"id":"Xt23WK","date":"1432487303","viewed":570,"name":"Simple 2d Light","username":"TheJimJames40","description":"Simple 2d raytracing","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define lpos (2.*iMouse.xy-iResolution.xy) / iResolution.x\n\nfloat distCube(vec2 p, vec2 size){\n    return length(max(abs(p)-size,0.0));\n}\n\n\nfloat distCircle(vec2 p, float r){\n\treturn max(0.,length(p)-r);\n}\n\nfloat distLight(vec2 p){\n\treturn distCircle(p-lpos,0.01);\n}\n\nfloat distW(vec2 p){\n\tfloat v = 10000.;\n    float t = iTime; \n    for(int i = 0; i < 8; i++){\n    \tvec2 p2 = p + vec2(cos(t+float(i)/8.*6.28),sin(t+float(i)/8.*6.28))/3.;\n    \tv = min(v,distCube(p2,vec2(0.05)));\n    }\n    return v;\n}\n\nfloat iter(vec2 p){\n    vec2 dir = normalize(lpos-p);\n    vec2 pos = p;\n    float depth = 0.;\n    for (int i = 0; i < 64; i++){\n        float dw = distW(pos);\n        float dl = distLight(pos);\n        float d = min(dw,dl);\n        if (dw < 0.0001){\n        \treturn 0.;\n        }else if(dl < 0.0001){\n        \treturn 1.-depth;\n        }\n        \n        depth += d;\n        pos += dir*d;\n    }\n    \n\treturn 0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.*fragCoord.xy-iResolution.xy) / iResolution.x;\n    \n    float d = iter(uv);\n    float c = d;\n\tfragColor = vec4(vec3(c),1.0);\n}","name":"","description":"","type":"image"}]}