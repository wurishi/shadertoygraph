{"ver":"0.1","info":{"id":"ldtGD4","date":"1449767000","viewed":11577,"name":"barebones ray marching","username":"nicoptere","description":"this is a miniaml example of ray marching used as an illustration for this article: http://barradeau.com/blog/?p=575","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//the signed distance field function\n//used in the ray march loop\nfloat sdf(vec3 p) {\n\n    //a sphere of radius 1.\n    return length( p ) - 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n//1 : retrieve the fragment's coordinates\n\tvec2 uv = ( fragCoord.xy / iResolution.xy ) * 2.0 - 1.0;\n\t//preserve aspect ratio\n\tuv.x *= iResolution.x / iResolution.y;\n\n\n//2 : camera position and ray direction\n\tvec3 pos = vec3( 0.,0.,-3.);\n\tvec3 dir = normalize( vec3( uv, 1. ) );\n\n\n//3 : ray march loop\n    //ip will store where the ray hits the surface\n\tvec3 ip;\n\n\t//variable step size\n\tfloat t = 0.0;\n\tfor( int i = 0; i < 32; i++) {\n\n        //update position along path\n        ip = pos + dir * t;\n\n        //gets the shortest distance to the scene\n\t\tfloat temp = sdf( ip );\n\n        //break the loop if the distance was too small\n        //this means that we are close enough to the surface\n\t\tif( temp < 0.01 ) break;\n\n\t\t//increment the step along the ray path\n\t\tt += temp;\n\n\t}\n\n//4 : apply color to this fragment\n    //we use the result position as the color\n\tfragColor = vec4( ip, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}