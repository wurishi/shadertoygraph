{"ver":"0.1","info":{"id":"md23RV","date":"1667904560","viewed":146,"name":"CrossChain ","username":"ayaha401","description":"I didn't know how to change the direction of the vertical and horizontal chains.\nI had no choice but to use mod and if.\nI really wanted to move the camera around figure eight, but I couldn't think of it.\n(GoogleTranslated)","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["3d","chain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//define=============================================================================\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n//const==============================================================================\nconst float PI=3.1415926536;\nconst float eps=0.0001;\n//Math===============================================================================\nvec3 rep(vec3 p,float n)\n{\n    return abs(mod(p,n))-n*.5;\n}\n\n//SDF================================================================================\nfloat chain(vec3 p, vec3 s)\n{\n    p.x-=clamp(p.x, -s.x, s.x);\n    return length(vec2(length(p.xy)-s.y,p.z))-s.z;\n}\n\n//Map================================================================================\nfloat map(vec3 p)\n{\n    p.y-=1.;\n    if(mod(p.y,4.)<2.){\n        if(mod(p.x,4.)<2.) p.z+=iTime*3.1;\n        else p.z-=iTime*2.1;\n        p.xz*=rot(PI/2.);\n    }\n    else{\n        if(mod(p.z,4.)<2.) p.x+=iTime*1.5;\n        else p.x-=iTime*.5;\n    }\n    \n    //vec3 pp=rep(p,2);\n    vec3 pp=abs(mod(p-.1,2.))-1.;\n\n    vec3 a=pp;   a.x=mod(a.x,1.)-.5;\n    vec3 b=pp;   b.x=mod(b.x+.5,1.)-.5;\n    \n    a.yz*=rot(iTime);\n    b.yz*=rot(iTime);\n    vec3 chainS=vec3(.2,.2,.1);\n    float sdfChain=min(chain(a.xyz,chainS), chain(b.xzy,chainS));\n    return sdfChain;\n}\n\n//Normal=============================================================================\n\nvec3 makeN(vec3 p)\n{\n    vec2 eps = vec2(.0001, 0.);\n    return normalize(vec3(map(p+eps.xyy)-map(p-eps.xyy),\n                          map(p+eps.yxy)-map(p-eps.yxy),\n                          map(p+eps.yyx)-map(p-eps.yyx)));\n}\n\n//Main==============================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    float zfac=(1.-.5*length(uv))*1.3;\n    float dist,hit,i=0.;\n    vec3 cPos=vec3(0,sin(iTime)*2.3,-iTime);\n    vec3 cDir=normalize(vec3(0,0,-1));\n    vec3 cUp=vec3(0,1,0);\n    vec3 cSide=cross(cDir,cUp);\n    vec3 ray=normalize(cSide*uv.x+cUp*uv.y+cDir*zfac);\n    vec3 L=normalize(vec3(1));\n    vec3 col=vec3(0);\n    for(;i<64.;i++)\n    {\n        vec3 rp=cPos+ray*hit;\n        dist=map(rp);\n        hit+=dist;\n        if(dist<eps)\n        {\n            vec3 N=makeN(rp);\n            float diff=dot(N,L);\n            col=vec3(1)*diff;\n        }\n    }\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}