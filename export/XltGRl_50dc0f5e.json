{"ver":"0.1","info":{"id":"XltGRl","date":"1470885878","viewed":191,"name":"2: B&W + Contrast PP","username":"andgokevin","description":"Turning textures into grayscale and then increasing contrast.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * Grayscaling textures.\n * \n * min - Returns smaller of two values.\n * max - Returns larger of two values.\n *\n * Function overload errors can indicate incorrect argument types (e.g., int instead of float).\n * Compiler will complain if types are mixed.\n */\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n  vec2 xy = fragCoord.xy / iResolution.xy;  // Normalized.    \n  vec4 texColor = texture(iChannel0, xy);  // Get color of image at coordinate.\n  \n  // Get average value to grayscale\n  float average = (texColor.r + texColor.g + texColor.b) / 3.0;\n\n  // Increase contrast.\n  float contrastFactor = 1.6;\n  average += (average - 0.5) * contrastFactor;\n   \n  fragColor = vec4(average, average, average, 1.0);\n}","name":"Image","description":"","type":"image"}]}