{"ver":"0.1","info":{"id":"43GSDy","date":"1720414391","viewed":36,"name":"Hyperbolic Mod Inverse Fractal","username":"robfast","description":"modular conformal mapping","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","riemann","modular","fastaro"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec2 complexMul(vec2 a, vec2 b) {\n    return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n\nvec2 complexDiv(vec2 a, vec2 b) {\n    float denom = b.x*b.x + b.y*b.y;\n    return vec2(\n        (a.x*b.x + a.y*b.y) / denom,\n        (a.y*b.x - a.x*b.y) / denom\n    );\n}\n\nvec2 complexExp(vec2 z) {\n    return exp(z.x) * vec2(cos(z.y), sin(z.y));\n}\n\nvec2 transform(vec2 z) {\n    float q = 21.0;\n    float logp = log(3.0);\n    \n    vec2 qPower = complexExp(complexMul(z, vec2(log(cos(iTime*000.5)+21.0) / logp, 0.0)));\n    vec2 term1 = complexMul(qPower, z);\n    vec2 term2 = complexMul(vec2(-1.0 + qPower.x, qPower.y), vec2(logp, 0.0));\n    vec2 denominator = term1 + term2;\n    \n    vec2 result = vec2(log(cos(iTime*000.5)+21.0), 0.0) - complexDiv(vec2(1.0, 0.0), denominator);\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    uv *= 0.1; // Adjust scale\n    \n    // Create grid\n    vec2 gridSize = vec2(2222.0, 2222.0);\n    vec2 cell = fract(uv * gridSize) - 0.5;\n    vec2 cellIndex = floor(uv * gridSize);\n    \n    // Apply transformation\n    vec2 z = cellIndex / gridSize * vec2(1.0 * log(cos(iTime*000.5)+3.0) / log((77.0+sin(iTime))/2.0));\n    vec2 transformed = transform(z);\n    \n    // Draw grid lines\n    float lineWidth = 0.005;\n    float line = smoothstep(lineWidth, 0.0, abs(cell.x)) + smoothstep(lineWidth, 0.0, abs(cell.y));\n    \n    // Color based on transformed position\n    vec3 col = 0.5 + 0.5 * cos(transformed.xyx + vec3(0, 2, 4));\n    \n    // Combine grid and color\n    col = mix(col, vec3(1.0), line);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}