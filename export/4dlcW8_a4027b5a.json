{"ver":"0.1","info":{"id":"4dlcW8","date":"1487969952","viewed":196,"name":"Simple Solar System","username":"rhino1181","description":"Circles around circles\n\nMy first shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This method smooths the edges without smoothstep()\nvec4 circle(vec2 uv,vec2 pos, vec3 col, float radius)\n{\n    float c = length(pos - uv) - radius;\n    float alpha = clamp(c, 0.0, 1.0);\n    return vec4(col, 1.0 - alpha);\n}\n\n// Struggling to get a ring working properly\nvec4 ring(vec2 uv,vec2 pos, vec3 col, float radius, float thickness)\n{\n    float c = length(pos - uv) - radius;\n    float alpha = clamp(c, 0.0, 1.0);\n   \tif((radius + thickness) < c)\n    {\n       alpha = 0.0;\n    }\n    \n    return vec4(col, 0.0 + alpha);\n}\n\nvec2 rotateAroundPoint(vec2 p, vec2 o, float offset, float speed)\n{\n    vec2 newPos;\n    newPos.x = sin((iTime * speed) + offset) * (p.x - o.x) - cos((iTime * speed) + offset) * (p.y - o.y) + o.x;\n    newPos.y = cos((iTime * speed) + offset) * (p.x - o.x) + sin((iTime * speed) + offset) * (p.y - o.y) + o.y;\n    return newPos;\n}\n\nvec4 addLayer(vec4 currentLayer, vec4 newLayer)\n{\n    return mix(currentLayer, newLayer, newLayer.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord.xy;\n    vec2 pos = iResolution.xy * 0.5;   \n    \n    //pos = iMouse.xy;\n    \n    //Color init\n    vec3 backCol = vec3(64.0/255.0,sin(fragCoord.x / iResolution.x),141.0/255.0);\n\n    vec3 firstCircleCol = vec3(244.0/255.0,158.0/255.0,10.0/255.0);\n    vec3 secondCircleCol = vec3(189.0/255.0,72.0/255.0,157.0/255.0);                 \n    vec3 thirdCircleCol = vec3(127.0/255.0,75.0/255.0,139.0/255.0);\n    vec3 fourthCircleCol = vec3(253.0/255.0,106.0/255.0,9.0/255.0);\n  \n    vec2 secondPos = rotateAroundPoint(pos * 0.82, pos, 0.0, 1.0);\n    vec2 thirdPos = rotateAroundPoint(pos * 0.70, pos, 100.0, 2.0);\n    vec2 fourthPos = rotateAroundPoint(pos * 0.50, pos, 0.0, 0.7);\n \n    vec4 backLayer = vec4(backCol, 1.0);\n    //vec4 circleLayer = ring(uv, pos, firstCircleCol, 0.1 * iResolution.y, -10.03);\n    vec4 circleLayer = circle(uv, pos, firstCircleCol, 0.1 * iResolution.y);\n    vec4 circleLayerTwo = circle(uv, secondPos, secondCircleCol, 0.02 * iResolution.y);\n    vec4 circleLayerThree = circle(uv, thirdPos, thirdCircleCol, 0.03 * iResolution.y);\n    vec4 circleLayerFour = circle(uv, fourthPos, fourthCircleCol, 0.04 * iResolution.y);\n\n\tvec4 layerOne = addLayer(backLayer, circleLayer);\n    vec4 layerTwo = addLayer(layerOne, circleLayerTwo);\n    vec4 layerThree = addLayer(layerTwo, circleLayerThree);\n    fragColor = addLayer(layerThree, circleLayerFour);\n}","name":"Image","description":"","type":"image"}]}