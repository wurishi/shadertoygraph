{"ver":"0.1","info":{"id":"MfsyRn","date":"1720719265","viewed":40,"name":"Fork Voronoise: Wobbly Blob","username":"MajorCallisto","description":"Fork of iq's Voronoise. Produce a pleasingly wobbly blob that has fluid like behaviour by mixing Voronoise and a simplified ellipse. Ellipse script generate with chatgpt for expediency.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","voronoi","noise","perlin","worley"],"hasliked":0,"parentid":"Xd23Dh","parentname":"Voronoise"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHOWNOISE 0\n#define SHOWELLIPSE 0\nvec3 hash3( vec2 p )\n{\n    vec3 q = vec3( dot(p,vec2(127.1,311.7)), \n\t\t\t\t   dot(p,vec2(269.5,183.3)), \n\t\t\t\t   dot(p,vec2(419.2,371.9)) );\n\treturn fract(sin(q)*43758.5453);\n}\nfloat voronoise( in vec2 p, float u, float v )\n{\n\tfloat k = 1.0+63.0*pow(1.0-v,6.0);\n\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    \n\tvec2 a = vec2(0.0,0.0);\n    for( int y=-2; y<=2; y++ )\n    for( int x=-2; x<=2; x++ )\n    {\n        vec2  g = vec2( x, y );\n\t\tvec3  o = hash3( i + g )*vec3(u,u,1.0);\n\t\tvec2  d = g - f + o.xy;\n\t\tfloat w = pow( 1.0-smoothstep(0.0,1.414,length(d)), k );\n\t\ta += vec2(o.z*w,w);\n    }\n\t\n    return a.x/a.y;\n}\n\n\n// Function to draw an ellipse\nfloat ellipse(vec2 uv, vec2 center, float width, float height) {\n    // Translate coordinates to the ellipse's center\n    vec2 pos = uv - center;\n\n    // Calculate the ellipse equation\n    return (pos.x * pos.x) / (width * width) + (pos.y * pos.y) / (height * height);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    \n    float wobbleSpeed = 0.25;\n    vec2 offset = fragCoord.xy / iResolution.xx+ vec2((iTime/1.), 0.) * wobbleSpeed;\n    \n    vec2 center = vec2(0.5, 0.5); // Center of the ellipse\n    float width = 0.15;  // Width of the ellipse\n    float height = 0.4; // Height of the ellipse\n\n    // Get the ellipse value\n    float ellipseValue = ellipse(uv, center, width, height);\n    \n    vec2 p = vec2(cos(0.)*0.5,0.5);//0.5 - 0.5*cos( iTime+vec2(0.0,2.0) );\n    \n\tp = p*p*(3.0-2.0*p);\n\tp = p*p*(3.0-2.0*p);\n\tp = p*p*(3.0-2.0*p);\n\t\n\tfloat f = voronoise( 6.0*offset, p.x, p.y );\n    vec4 finalColor = vec4(mix(f, ellipseValue, 0.6) < 0.5?0.:1.);\n#if (SHOWNOISE == 1)\n    fragColor = vec4(f);\n#elif (SHOWELLIPSE == 1 && SHOWNOISE == 0)\n    fragColor = vec4(ellipseValue);\n#else\n    fragColor = vec4(finalColor);\n#endif\n\n    \n}\n","name":"Image","description":"","type":"image"}]}