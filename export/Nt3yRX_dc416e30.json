{"ver":"0.1","info":{"id":"Nt3yRX","date":"1660184359","viewed":246,"name":"Bilinear Mosaic Blur (Pixelate)","username":"MysteryPancake","description":"Cheap blur using bilinear interpolation, similar to using a lower LOD level","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["blur","pixel","linear","pixelate","mosaic","bilinear","pixelize","pixelization","pixelise","pixelisation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define USE_SMOOTHSTEP\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    float pixels = mod(iTime * 10.0, 50.0);\n    \n    vec2 rounded = floor(uv * pixels);\n    vec4 topLeft = textureLod(iChannel0, rounded / pixels, 0.0);\n    vec4 topRight = textureLod(iChannel0, (rounded + vec2(1.0, 0.0)) / pixels, 0.0);\n    vec4 bottomLeft = textureLod(iChannel0, (rounded + vec2(0.0, 1.0)) / pixels, 0.0);\n    vec4 bottomRight = textureLod(iChannel0, (rounded + vec2(1.0, 1.0)) / pixels, 0.0);\n    \n    vec2 fraction = fract(uv * pixels);\n    #ifdef USE_SMOOTHSTEP\n    fraction = smoothstep(0.0, 1.0, fraction);\n    #endif\n    \n    vec4 top = mix(topLeft, topRight, fraction.x);\n    vec4 bottom = mix(bottomLeft, bottomRight, fraction.x);\n    fragColor = mix(top, bottom, fraction.y);\n}","name":"Image","description":"","type":"image"}]}