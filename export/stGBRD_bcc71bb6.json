{"ver":"0.1","info":{"id":"stGBRD","date":"1670884806","viewed":80,"name":"Mandelbrot -- Simple","username":"Sent","description":"Simple mandelbrot","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N_ITER 20\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    float ar = iResolution.x/iResolution.y;\n    uv -= vec2(.5*ar, .5);\n    uv *= 3.;\n    \n    float t = .1*iTime;\n    \n    vec2 z = vec2(0.);//.5*vec2(cos(t), sin(t));\n    int n = N_ITER;\n    float xtemp = 0.;\n    for (int i = 0; i < N_ITER; ++i) {\n        xtemp = z.x*z.x - z.y*z.y + uv.x;\n        z.y = 2.*z.y*z.x + uv.y;\n        z.x = xtemp;\n        if (length(z) > 2.) \n        {\n            n = min(n, i);\n        }\n    }\n\n    float c = mix(0., 1., float(n)/float(N_ITER));\n    c = pow(c, 2.);\n    vec3 col = vec3(c);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}