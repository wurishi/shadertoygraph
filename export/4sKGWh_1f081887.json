{"ver":"0.1","info":{"id":"4sKGWh","date":"1454254972","viewed":293,"name":"ColorWheel","username":"Emil","description":"Needed a dynamic color picker.., anybody has simple solution to antialiasing between color pieces?\nedit: added simple solution to blending colors","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","wheel","colorpicker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pieCount = 2.0 + ceil(4.0*fract((iTime*0.01)+0.9));\n\tvec2 uv = (2.*fragCoord.xy - iResolution.xy) / iResolution.y;\n    float rad = 0.0;\n    if(uv.y>0.0){ // top\n        // 1 / 6 parts (stretched) (1.0-(1.0/pieCount)) -> 1.0\n    \trad = ((atan(uv.y,uv.x)*0.31830988618379067153776752674503));\n        rad *= (1.0/pieCount);\n        rad += (1.0-(1.0/pieCount));\n        \n    } else { // bottom\n        // 5 / 6 parts (compressed) 0.0 -> (1.0-(1.0/pieCount))\n        rad = (((atan(uv.y,uv.x)*0.31830988618379067153776752674503)))+1.0;\n        rad *= (1.0-(1.0/pieCount));\n    }\n    vec3 finCol = vec3(0.0,0.0,0.0), tempCol = vec3(0.0,0.0,0.0);\n    const float numSamples = 6.0;\n    float moBlur = 0.01;//+clamp(0.1*sin(iTime),0.0,1.0);\n    rad = fract(rad+0.2+1.0*iTime*0.1);\n    for(float f = 0.0; f<=1.0; f+=(1.0/numSamples)){\n        rad = fract(rad+moBlur/numSamples/length(uv));\n        if(rad<=(1.0/pieCount)){\n            tempCol = vec3(252.,163.,17.)/255.; // orange\n        } else if(rad<=(2.0/pieCount)){\n            tempCol = vec3(252.,45.,29.)/255.; // red\n        } else if(rad<=(3.0/pieCount)){\n            tempCol = vec3(0.,174.,65.)/255.; // green\n        } else if(rad<=(4.0/pieCount)){\n            tempCol = vec3(46.,41.,37.)/255.; // black\n        } else if(rad<=(5.0/pieCount)){\n            tempCol = vec3(0.,168.,198.)/255.; // blue\n        } else {\n            tempCol = vec3(240.,3.,127.)/255.; // pink\n        }\n        finCol += vec3(pow(tempCol.x,2.2),pow(tempCol.y,2.2),pow(tempCol.z,2.2));\n    }\n    finCol /= numSamples;\n    \n    finCol = vec3(pow(finCol.x,.454545),pow(finCol.y,.454545),pow(finCol.z,.454545));\n    fragColor = length(uv)<1.0&&length(uv)>0.3?vec4(finCol.xyz,1.0):vec4(1.0);\n    if(abs(uv.x)<uv.y-0.9){ // making triangleTop\n    \tfragColor = vec4(1.0);\n    }\n    //fragColor = vec4(rad);\n}","name":"Image","description":"","type":"image"}]}