{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float dist(vec2 p1, vec2 p2) {\n\tfloat dx = p2.x - p1.x;\n\tfloat dy = p2.y - p1.y;\n\treturn sqrt(dx * dx + dy * dy);\t\n}\n\nfloat sqmag(vec2 p) {\n\treturn p.x * p.x + p.y * p.y;\t\n}\n\nfloat dotp(vec2 p1, vec2 p2) {\n\treturn p1.x * p2.x + p1.y * p2.y;\t\n}\n\nfloat getR(float h) {\n\treturn cos(h*6.283185307179586476925286766559)*0.5+0.5;\n}\n\nfloat getG(float h) {\n\treturn cos((h+1.0/3.0)*6.283185307179586476925286766559)*0.5+0.5;\n}\n\nfloat getB(float h) {\n\treturn cos((h+2.0/3.0)*6.283185307179586476925286766559)*0.5+0.5;\n}\n\nvec2 immul(vec2 p1, vec2 p2) {\n\treturn vec2(p1.x*p2.x-p1.y*p2.y,p1.x*p2.y+p1.y*p2.x);\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pp = fragCoord.xy / iResolution.xy - vec2(0.5,0.5);\n\tvec2 origin = vec2(0.0,0.0);\n\tfloat t = iTime;\n\tfloat c = 0.0;\n\t\n\tvec2 uv = pp * 3.0 * pow(0.8,t) - vec2(0.729,0.2014);\n\t\n\tvec2 tmp = uv;\n\tfor(int i=0;i<65;i++){\n\t\tif(i==64){c=0.0;break;}\n\t\ttmp = immul(tmp,tmp)+uv;\n\t\ttmp = immul(tmp,tmp)+uv;\n\t\tc+=1.0/64.0;\n\t\tif(sqmag(tmp)>4.0)break;\n\t}\n\t\n\tfragColor = vec4(getR(c), getG(c), getB(c), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4df3D7","date":"1371554737","viewed":174,"name":"Mandelbrot zoom","username":"bildramer","description":"Yay fractals","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""}}