{"ver":"0.1","info":{"id":"WsBBzG","date":"1590235114","viewed":307,"name":"Vector Median Filter","username":"mbeytekin","description":"I tried to implement https://www.academia.edu/1752964/GPU_Accelerated_Vector_Median_Filter .. I am not sure this works well. :)","likes":5,"published":1,"flags":0,"usePreview":1,"tags":["filter","vector","median"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Original Cuda Code : https://www.academia.edu/1752964/GPU_Accelerated_Vector_Median_Filter \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat sumOfDistance;\n    float minDistance=100.;\n    vec3 col1;\n    vec3 col2;\n    vec3 col3;\n    vec3 clr;\n  int MEDIAN_RADIUS=2;\n    for(int row=-MEDIAN_RADIUS;row<=MEDIAN_RADIUS;row++)\n    {\n    for(int j=-MEDIAN_RADIUS;j<=MEDIAN_RADIUS;j++)\n    {\n        for(int i=-MEDIAN_RADIUS;i<=MEDIAN_RADIUS;i++)\n            {\n\t\t\t\tsumOfDistance=0.;\n                    for(int m=-MEDIAN_RADIUS;m<=MEDIAN_RADIUS;m++)\n                        {\n                            for(int n=-MEDIAN_RADIUS;n<=MEDIAN_RADIUS;n++)\n                                {\n\n                                            vec2 uv1=vec2((fragCoord.x+0.5+float(j+MEDIAN_RADIUS+i))/iResolution.x,(fragCoord.y+float(j+MEDIAN_RADIUS+i+row)+0.5)/iResolution.y);\n                                            vec2 uv2=vec2((fragCoord.x+0.5+float(m+MEDIAN_RADIUS+n))/iResolution.x,(fragCoord.y+float(m+MEDIAN_RADIUS+n+row)+0.5)/iResolution.y);\n                                            col1=texture(iChannel0,uv1).rgb;\n                                            col2=texture(iChannel0,uv2).rgb;\n\n                                            sumOfDistance+=distance(col1,col2);\n                                    \n                                    \n                                }\n                            \n                           if (sumOfDistance<minDistance)\n                            {\n                                minDistance=sumOfDistance;\n                                clr=col1;\n                            }\n                        }\n                \t\t\t\n                \n            }\n        \n        \n    }\n    \n}\n    \n\n    fragColor = vec4(clr, 1.);\n}","name":"Image","description":"","type":"image"}]}