{"ver":"0.1","info":{"id":"cdsyRH","date":"1686583089","viewed":110,"name":"intro to shaders var","username":"Partail","description":"followed the tutorial by kishimisu. made some alterations.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n#define r iResolution.xy\nprecision highp float;\n\nvec3 p( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.3, 0.7, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-r)/r.x,\n         uvX= exp(uv),\n         uv0= uv;     \n    float ra=(0.1*sin(t*0.5)+0.9*20.)*abs(sin(t*0.1))+(70.*(0.1*sin(t*0.3)+0.6)),d, ux=exp(length(uv)), uvc=exp(-length(uv0)), un=length(sin(uv*ra)), uu;                   \n    vec3 fc, c;\n             \n    for (float i;i<4.;i++){\n    \n    uv = (fract(uv*1.2)-0.5)*(0.2*un+0.7)*(abs(sin(t*0.3))+0.3);\n    \n    uu = 0.2*sin(length(-uv)*8.)+0.5;\n    \n    d = length(uv) * uvc - ux;\n    \n    c = p(length(ux)+t*0.4);\n    d = sin(d*8.+t)/8.;\n    d = abs(d);\n    d = 0.007*(uvc*abs(sin(t*0.5))+0.5) / d;\n    \n    fc += c * d;\n\n    }\n    // Output to screen\n    fragColor = vec4(fc/uu,t);\n}","name":"Image","description":"","type":"image"}]}