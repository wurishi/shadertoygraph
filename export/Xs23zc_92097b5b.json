{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"const float PI=3.14159265358979323846;\n\n\nfloat snoise(vec3 uv, float res)\t// by trisomie21\n{\n\tconst vec3 s = vec3(1e0, 1e2, 1e4);\n\t\n\tuv *= res;\n\t\n\tvec3 uv0 = floor(mod(uv, res))*s;\n\tvec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\n\t\n\tvec3 f = fract(uv); f = f*f*(3.0-2.0*f);\n\t\n\tvec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\n\t\t      \t  uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n\t\n\tvec4 r = fract(sin(v*1e-3)*1e5);\n\tfloat r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\t\n\tr = fract(sin((v + uv1.z - uv0.z)*1e-3)*1e5);\n\tfloat r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\t\n\treturn mix(r0, r1, f.z)*2.-1.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\t\n\t\n\t//float t = iTime * 0.025;   \t   \t// draw rotating lines\n\tfloat t = PI/4.0;\t               \t// perfectly diagonal\n\tfloat w = 2.0;\t\t\t           \t// width (larger value = smaller width)\n\tfloat stripeVal = cos( (fragCoord.x * cos(t) * w) + (fragCoord.y * sin(t) * w));\n\tstripeVal = clamp(round(stripeVal), -1.0, 0.0); // clamping gets rid of the random white lines\n\n\t// moves the lightness\n\tstripeVal *= sin((iTime * 0.1)+(fragCoord.y + fragCoord.x ) * 0.01) - 0.1;\n\t\t\t\n\tvec4 col = vec4( stripeVal ) * 0.1;\t\t\t\t\t\t\t\t// contrast\n\tcol += vec4( 0.03, 0.4, 0.95, 0.0) * (sin(fragCoord.y * 0.01)); // blueness\n\t\n\tfloat change = (iTime*0.004);\n\tcol *= snoise(vec3((uv.x * 0.05) + (change*1.5), (uv.y * 0.05) + change, change*0.1), 40.0) + 0.7;\n\t\n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xs23zc","date":"1392048215","viewed":429,"name":"Frosty Lines","username":"TheGrego","description":"Frosty diagonal lines. The color slowly undulates in and out using a noise function.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["noise","lines","frosty"],"hasliked":0,"parentid":"","parentname":""}}