{"ver":"0.1","info":{"id":"NtyyWm","date":"1661532755","viewed":264,"name":"namble bamble","username":"elenzil","description":"just fooling around.\nthe phase of a circle's pulse depends on the texture beneath it.","likes":10,"published":3,"flags":32,"usePreview":0,"tags":["video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 RGBA, in vec2 XY )\n{\n    float cellSize = 20.0;\n    \n    vec2 p = mod(XY + cellSize / 2.0, cellSize) - cellSize / 2.0;\n    vec2 cellP = floor(XY / cellSize + 0.5) * cellSize;\n    \n    float margin = 1.0;\n    float t = iTime * 4.92;\n    \n    float q = texelFetch(iChannel0, ivec2(cellP), 0).r;\n    float rate = q * 0.2 + 0.8;\n    rate *= 20.0;\n    \n    float pulse = sin(t + rate) * 0.3 + 0.6;\n    float d = abs(length(p)) - ((cellSize - margin) / 2.0 * pulse);\n    \n    float c = smoothstep(margin, 0.0, d);\n    \n    RGBA = vec4(c, c, c, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame % 1 == 0) {\n        fragColor = texture(iChannel0, vec2(fragCoord)/iResolution.xy, 0.0);\n    }\n    else {\n        fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}