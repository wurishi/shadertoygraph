{"ver":"0.1","info":{"id":"XfGSW1","date":"1715084447","viewed":46,"name":"lzh-一维噪声","username":"anyuanlzh","description":"噪声学习","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lzh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// 自己定义伪随机函数\n// 要求：随机且确定\nfloat random(float x)\n{\n    return fract(sin(x*1000.0)*43457.5453); // fract为小数\n}\n\n// 实现一个噪声函数\nfloat noise(float x)\n{\n    float i = floor(x); // 取整数部分\n    float f = fract(x); // 取小数部分 (0-1)\n    \n    // 为i，和i+1.0 两点，获取指定的值\n    float a = random(i);\n    float b = random(i+1.0);\n    \n    // 插值:\n    float u = f * f * (3.0 - 2.0 * f);\n    return mix(a,b,u);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    // Output to screen\n    //fragColor = vec4(col,1.0);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    // fragColor = mix(vec4(1.0), vec4(vec3(0.0),1.0), step(0.5,uv.y));\n    \n    const float kBaseLine = 0.5;\n    const float kMaxOffset = 0.2;\n    const float kNoiseScale = 10.0;\n    float c = noise(uv.x * kNoiseScale + iTime);\n    float noiseValue = c * kMaxOffset;    \n    fragColor = mix(vec4(1.0), vec4(vec3(0.0),1.0), step(kBaseLine + noiseValue, uv.y));\n}","name":"Image","description":"","type":"image"}]}