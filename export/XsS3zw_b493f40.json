{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"//\"Glass Field\" by Kali\n\n#define lightcol1 vec3(1.0,0.02,.025)\n#define lightcol2 vec3(0.2,.05,0.02)\n\n\n\n\n//Rotation matrix by Syntopia\nmat3 rotmat(vec3 v, float angle)\n{\n\tfloat c = cos(angle);\n\tfloat s = sin(angle);\n\t\n\treturn mat3(c + (1.0 - c) * v.x * v.x, (1.0 - c) * v.x * v.y - s * v.z, (1.0 - c) * v.x * v.z + s * v.y,\n\t\t(1.0 - c) * v.x * v.y + s * v.z, c + (1.0 - c) * v.y * v.y, (1.0 - c) * v.y * v.z - s * v.x,\n\t\t(1.0 - c) * v.x * v.z - s * v.y, (1.0 - c) * v.y * v.z + s * v.x, c + (1.0 - c) * v.z * v.z\n\t\t);\n}\n\n//Smooth min by IQ\nfloat smin( float a, float b )\n{\n    float k = 0.5;\n\tfloat h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\n\n//Distance Field\nfloat de(vec3 pos) {\n\tvec3 noiseShift = 0.001*texture(iChannel0, vec2(1.0, 1.0)).xyz; \n\tvec3 A=vec3(9.+texture(iChannel1, pos.xy*0.0001).x*3.2);\n\tvec3 p = abs(7.4-mod(pos,2.0*A));\n\tp.x +=  2.1*texture(iChannel1, pos.yz*0.013+noiseShift.xy).x; //tiling fold by Syntopia\n\tp.y +=  2.1*texture(iChannel1, pos.xz*0.013+noiseShift.yz).y; //tiling fold by Syntopia\n\tp.z +=  2.1*texture(iChannel1, pos.xy*0.013+noiseShift.xz).z; //tiling fold by Syntopia\n\t//p.z +=  2.1*texture(iChannel1, pos.xz*0.013+0.01*texture(iChannel0, vec2(1.0, 1.0)).xy).z*1.1; //tiling fold by Syntopia\n\tfloat sph=length(p)-1.7\n\t\t               -0.4*texture(iChannel2, pos.xy*0.1).y \n\t\t               -0.4*texture(iChannel2, pos.xz*0.1).y \n\t\t               -8.4*texture(iChannel0, vec2(vec2(1.0, 1.0))).y ;\n\tfloat cyl;\n\tcyl=length(p.xy)-1.8;\n\tcyl=smin(cyl,length(p.xz))-1.3;\n\tcyl=smin(cyl,length(p.yz))-1.9;\n    return smin(cyl,sph);\n}\n\n// finite difference normal\nvec3 normal(vec3 pos) {\n\tvec3 e = vec3(0.0,0.001,0.0);\n\t\n\treturn normalize(vec3(\n\t\t\tde(pos+e.yxx)-de(pos-e.yxx),\n\t\t\tde(pos+e.xyx)-de(pos-e.xyx),\n\t\t\tde(pos+e.xxy)-de(pos-e.xxy)\n\t\t\t)\n\t\t);\t\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = iTime*.6; \n\n\t//camera\n\tmat3 rotview=rotmat(normalize(vec3(1.)),sin(time*.6));\n\tvec2 coord = fragCoord.xy / iResolution.xy *2. - vec2(1.);\n\tcoord.y *= iResolution.y / iResolution.x;\n\tfloat fov=min((time*.1+.05),0.2); //animate fov at start\n\tvec3 from = vec3(cos(time)*2.,sin(time*.5)*10.,time*9.);\n\n\t//raymarc\n\tfloat totdist=100.;\n\tfloat distfade=1.0;\n\tfloat glassfade=1.0;\n\tfloat intens=13.;\n\tfloat maxdist=200.;\n\tfloat vol=10.;\n\tvec3 spec=vec3(0.1);\n\tvec3 dir=normalize(vec3(coord.xy*fov,1.))*rotview; \n\tfloat ref=0.;\n\tvec3 light1=normalize(vec3(cos(time),sin(time*3.)*.5,sin(time)));\n\tvec3 light2=normalize(vec3(cos(time),sin(time*3.)*.5,-sin(time)));\n\tfor (int r=0; r<70; r++) {\n\t\tvec3 p=from+totdist*dir;\n\t\tfloat d=de(p);\n\t\tfloat distfade=exp(-1.5*pow(totdist/maxdist,1.5));\n\t\tintens=min(distfade,glassfade);\n\n\t\t// refraction\n\t\tif (d>0.0 && ref>.5) {\n\t\t\tref=0.;\n\t\t\tvec3 n=normal(p);\n\t\t\tif (dot(dir,n)<-.5) dir=normalize(refract(dir,n,1./.87));\n\t\t\tvec3 refl=reflect(dir,n);\n\t\t\tspec+=lightcol1*pow(max(dot(refl,light1),0.0),40.)*intens*.7;\n\t\t\tspec+=lightcol2*pow(max(dot(refl,light2),0.0),40.)*intens*.7;\n\n\t\t}\n\t\tif (d<0.0 && ref<.05) {\n\t\t\tref=1.;\n\t\t\tvec3 n=normal(p);\n\t\t\tif (dot(dir,n)<-.05) dir=normalize(refract(dir,n,.87));\n\t\t\tvec3 refl=reflect(dir,n);\n\t\t\tglassfade*=.75;\n\t\t\tspec+=lightcol1*pow(max(dot(refl,light1),0.0),40.)*intens;\n\t\t\tspec+=lightcol2*pow(max(dot(refl,light2),0.0),40.)*intens;\n\t\t}\n\t\t\n\t\ttotdist+=max(0.005,abs(d)); //advance ray \n\t\tif (totdist>maxdist) break; \n\n\t\tvol+=intens; //accumulate current intensity\n\t}\n\t\n\tvol=pow(vol,1.5)*.001;\n\tvec3 col=vec3(vol)+vec3(spec)*.4+vec3(.05);\n\n\t//lights\n\tcol+=2.8*lightcol1*pow(max(0.,max(0.,dot(dir,light1))),10.)*glassfade; \n\tcol+=2.5*lightcol2*pow(max(0.,max(0.,dot(dir,light2))),10.)*glassfade; \n\t//col+=vec3(sin(time*10.)+1.,0.,0.)*.8*pow(max(0.,max(0.,dot(dir,vec3(0.,0.,1.)))),5.)*glassfade; \n\n\t\n\tcol*=min(1.,time); //fade in\n\n\tfragColor = vec4(col,1.0);\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsS3zw","date":"1384908287","viewed":234,"name":"GlassNoise2","username":"Zou","description":"Refraction i+ noise distribution.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise","refraction"],"hasliked":0,"parentid":"","parentname":""}}