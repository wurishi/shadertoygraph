{"ver":"0.1","info":{"id":"sdjXzm","date":"1619963835","viewed":80,"name":"Octocube","username":"jamque","description":"First attempt for SDF raymarching.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 3 cubes and 4 spheres rotating \n// Thx to IQ, Flopine, Evvvvil. My Teachers\n// Greetings: Fubu, JosSs, Napalm, duhow :3, Bran\n\nmat2 rot (float a) { return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nvec3 col = vec3 (0.4);\nfloat shade = 0., st= 64., pres=0.01; \nbool hit = false;\n\n#define PI acos(-1.)\n\nfloat box_point (vec3 p, vec3 size)\n{\n\tvec3 q = abs(p);\n\treturn length(q-size);\n}\n\nfloat box (vec3 p, vec3 size)\n{\n\tvec3 q = abs(p) - size;\n\treturn length(max(q,0.0));\n}\n\nfloat sph (vec3 p, float r)\n{\n\treturn length(p)-r;\n}\n\nfloat SDF(vec3 p){\n\tvec3 po = p;\n\tfloat r = 1.0;\n\t\n\tp.xz*= rot (iTime);\n\tp.xy*= rot (iTime);\n\t\n\tvec3 p_rot= p;\n\t//r = sph(p,0.1);\n\tfor (float i=0.f; i< 10.f; ++i) {\n\tp_rot.xy*= rot (0.5*iTime);\n\tr = min(r,box_point (p_rot,vec3(0.1*i+0.1*sin(3.0*iTime-0.2*i))));\n\t}\n\tr = min(r,box(p,vec3(0.3)));\n\tp.y += 0.3;\n\tr = min(r,sph(p,0.2));\n\tp.y -= 0.6;\n\tr = min(r,sph(p,0.2));\n\tp.y += 0.3;p.x += 0.3;\n\tr = min(r,sph(p,0.2));\n\tp.x -= 0.6;\n\tr = min(r,sph(p,0.2));\n\tp.x += 0.3; p.z +=0.25;\n\tp.xy*=rot(3.0*iTime);p.yz*=rot(PI/4.);p.xz*=rot(PI/4.);\n\tr = min(r,box(p,vec3(0.1)));\n\tp= po;\n\tp.xz*= rot (iTime);\n\tp.z -=0.3;\n\tp.xy*=rot(3.0*iTime);p.yz*=rot(PI/4.);p.xz*=rot(PI/4.);\n\tr = min(r,box(p,vec3(0.1)));\n\t\n\treturn r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n\tuv -= 0.5;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n\n\tvec3 ro = vec3(0.0,0.,-3);\n\tvec3 rd = normalize(vec3(uv,1.0));\n\tvec3 rp = ro;\n\tfloat r = 0.0;\n\tfor (float i=0.f; i<st;++i)\n\t{\n\t   r = SDF(rp);\n\t  if (r < pres)\n\t  {\n\t\thit =true;\n\t\tshade=i/st;\n\t\t break;\n\t  }\n\t  rp += rd*r;\n\t}\t\n\t\n\tif (hit) col = vec3(sqrt(1.0-shade));\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}