{"ver":"0.1","info":{"id":"NsfBRB","date":"1644990869","viewed":137,"name":"chaos texture scale","username":"cxm","description":"chaos texture","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["texture","chaos","scale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define scale .8\n#define count 51.\n\nmat2 _rot1(float a) {\n  float s = sin(a), c = cos(a);\n  return mat2(c,s,-s,c);\n}\n\nfloat noise(vec3 v){\n    \n    float r;\n    \n    for( float i = 1.; i < 4.; i++ ){\n        v.x += sin( v.x ) * sin( v.y ) * i / 4.;\n        v.y += clamp( v.x / v.y, -1., 1. );\n        v.z += cos( v.y * i * v.x ) * cos( v.y / i * 20. ) * i / 4.;\n    }\n\n    return v.z;\n}\n\nfloat getPrint( in vec2 uv, float rot, float size ){\n\n    float p;\n    \n    uv -= .5;\n    uv *= _rot1( rot );\n    uv += .5;\n    \n    \n    p += noise( vec3( uv.x, rot, size ) ) * .25; // chaos basic on this line\n    p += abs( uv.x - .5 );\n    \n    p = mix(\n        p,\n        0.,\n        smoothstep( 0., .5 * size, distance( vec2( uv.x, uv.y / 2. + .25 ), vec2( .5 + cos( rot ) * size * .01, .5 + sin( rot ) * size * .01 ) ) )\n    );\n    \n    /*\n    // disco ball without pin lighting\n        p = mix(\n            p,\n            0.,\n            smoothstep( .0, .5, distance( uv, vec2( .5 ) ) )\n        );\n    */\n    \n    p *= size * .000001;\n    \n    return p;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.yy;\n    float resRa = ( iResolution.x / iResolution.y );\n    \n    uv.x -= ( iResolution.x - iResolution.y ) / iResolution.y * .5;\n\n\n    // Time varying pixel color\n    vec3 col;\n    \n    float p;\n\n    for( float i = 0.; i < count; i++ ){\n    \n        p = mix(\n            p,\n            i / count,\n            abs( p - getPrint( uv, .1 + i - ( iTime + 4. ), .5 + ( i / count ) * scale * .9 + abs( cos( iTime ) * .15 ) ) )\n        );\n        \n    }\n    \n    // p = getPrint( uv, iTime, 1. );\n    \n    col += p;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}