{"ver":"0.1","info":{"id":"MdyXzd","date":"1466023068","viewed":262,"name":"Temporal Capture","username":"akohdr","description":"Shirley demonstrating Worhol 'It girl' appeal :)","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["2d","video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Andrew Wild - akohdr/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Uses buffer loop memory generated in Buf A\n\nvoid mainImage( out vec4 k, in vec2 p )\n{\n\tk = texture(iChannel0, p/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Created by Andrew Wild - akohdr/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Simple example of grid based temporal capture in buffer loop\n\n// grid size\n#define G vec2(5,4)\n#define MAX G.x*G.y\n\n// provides 1D discrete index of position(p) within 2D space size(r) overlaid with grid(g)\n#define P2I(p,r,g) dot(vec2(1,g.x),floor(g*p/r))\n\n// temporal cut predicate\n#define CUT(t,i,o) (t>i&&t<o)\n\n#define R iResolution.xy\n#define T iTime\n\nvoid mainImage( out vec4 k, in vec2 p )\n{\n    // basically we switch on position between scaled sample and captured memory loop\n    \n    k = (T>16.)||\t\t\t\t\t\t\t\t\t\t// limit of capture\n        (floor(mod(T*G.x/2., \t\t\t\t\t\t\t// scaled time (sample interval)\n                   MAX)\t\t\t\t\t\t\t\t\t// max grid index\n              )!= P2I(p,R,G))\t\t\t\t\t\t\t// current 1D grid index\n        ?\n    \t\tk = texture(iChannel0, p/R)\t\t\t\t// retain capture from buffer loop\n    \t:\n        \tmix(\n                vec4(p/R,.5+.5*sin(T),1.), \t\t\t\t// default 'New Shader'\n                texture(iChannel1, mod(p*G,R)/R), \t// sample video from buffer\n            \tCUT(T,8.,16.) ? .4:1.);\t\t\t\t\t// colour highlight a 'cut'\n\n    k += (T<17.) ? 0. : -.005*sign(T-21.);\t\t\t\t// fade to white then black\n\n    //k = clamp(k,0.,1.);\t\t// comment to keep Shirley around for fade to black\n}\n","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Created by Andrew Wild - akohdr/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// Uses buffer loop memory generated in Buf A\n\nvoid mainImage( out vec4 k, in vec2 p )\n{\n\tk = texture(iChannel0, p/iResolution.xy);\n}","name":"Buf B","description":"","type":"buffer"}]}