{"ver":"0.1","info":{"id":"MldXD2","date":"1481723931","viewed":108,"name":"Sunset + Sun Pulse","username":"AFlorent","description":"Test d'un sunset","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cours"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 color, in vec2 pixCoords )\n{\n\tcolor = vec4(1.0, 0.4, 0.0, 1.0);\n    vec2 center = iResolution.xy / 2.0;\n    float distance = sqrt(pow(pixCoords.x - iResolution.x, 2.0) + cos(2.0 * 3.14 / 180.0 * pixCoords.x * iTime) + pow(pixCoords.y - iResolution.y / 2.0, 2.0) + sin(2.0 * 3.14 / 180.0 * pixCoords.y * iTime));\n       \n     float distanceve = length( pixCoords - center);\n    float rayon = iResolution.x/8.0 + 10.0*cos(iTime);\n    \n    \n    if (distanceve < rayon ) {\n        color = vec4(1.0, 1.0, 0.0, 1.0);\n       }\n\n  \n    \n    \n     if (pixCoords.y <  6.0 * cos(4.0 * 3.14 / 160.0 * pixCoords.x + 3.0*(iTime)) + iResolution.y / 3.0){\n        color = vec4(0.5, 0.5, 1.0, 1.0);\n    }\n    \n    if (pixCoords.y <  6.0 * cos(3.0 * 3.14 / 170.0 * pixCoords.x + 3.0*(iTime)) + iResolution.y / 3.5){\n        color = vec4(0.0, 0.0, 1.0, 1.0);\n    }\n    if (pixCoords.y <  6.0 * cos(2.0 * 3.14 / 180.0 * pixCoords.x + 3.0*(iTime)) + iResolution.y / 4.5){\n        color = vec4(0.0, 0.0, 0.5, 1.0);\n    }\n    \n}\n// 3e partie affichier 3 vagues\n// 4e partie : faire une mère homogène : vague de la même taille\n// 5e : faire 1 fonction 1 vague\n//après la fonction n'a qu'1 paramètre","name":"Image","description":"","type":"image"}]}