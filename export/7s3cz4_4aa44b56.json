{"ver":"0.1","info":{"id":"7s3cz4","date":"1653060682","viewed":79,"name":"my f(x)","username":"pannous","description":"A small graphing tool that does multisampling. Press 1 for mouse control.","likes":5,"published":1,"flags":16,"usePreview":0,"tags":["2d","graphing","subpixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Fork of \"Precise Graphing\" by mu6k. https://shadertoy.com/view/4dS3WG\n\n#define grid\n\nfloat f(float x) \n{\n\treturn sin(x*4.0+iTime) + sin(x*3.0+iTime);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \tvec2 uv = fragCoord.xy;\n    uv = uv/iResolution.xy-.5;\n\tuv.x = uv.x*iResolution.x/iResolution.y;\n\tuv*=2.0;\n\tfloat pixel = 4.0/iResolution.y;\n\tuv*=4.0; \n\tvec3 c = vec3(.0); // color\n\tfor (float fi=.0; fi<1.0; fi += 1.0)\n\t{\n\t\t\n\t\tfloat x = uv.x;// + hash(uv.y*41.0+fi)*pixel*float(smoothness);\n\t\tfloat y = uv.y;// + hash(uv.x*41.0+fi)*pixel*float(smoothness);\n\t\t\n\t\tfloat s0 = f(x-pixel);\n\t\tfloat s1 = f(x+pixel);\n\t\t\t\n\t\tif (s0-pixel <= y && y < s1+pixel || s1-pixel <= y && y < s0+pixel)\n\t\t\tc += vec3(1.0);\n\t\t\n\t}\n\t\n\t\n\t#ifdef grid\n\tc += max(.0,1.0-abs(mod(uv.x+.5,1.0)-.5)/pixel*0.5)*.1/(.5+abs(uv.x)*.5);\n\tc += max(.0,1.0-abs(mod(uv.y+.5,1.0)-.5)/pixel*0.5)*.1/(.5+abs(uv.y)*.5);\n\t#endif\n\t\n\tfragColor = vec4(pow(c,vec3(.6)),1.0);\n}","name":"Image","description":"","type":"image"}]}