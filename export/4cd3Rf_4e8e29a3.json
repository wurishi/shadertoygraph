{"ver":"0.1","info":{"id":"4cd3Rf","date":"1712000630","viewed":22,"name":"Polar, XY fade test","username":"yuki_hata","description":"Polar coordinates","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\nconst vec3[3] baseColor = vec3[](\n        vec3(1.0, 0.0, 0.0),\n        vec3(0.0, 1.0, 0.0),\n        vec3(0.0, 0.0, 1.0)\n    );\n\nfloat atan2(float y, float x){\n   return x == 0.0 ? sign(y)*PI/2.0 : atan(y, x);\n}\n\nvec2 xy2pol(vec2 xy){\n    return vec2( atan2(xy.y, xy.x),length(xy));\n}\n\nvec2 pol2xy(vec2 pol){\n    return pol.y * vec2(cos(pol.x),sin(pol.x));\n}\n\nvec3 gradation3color(float g){\n    int ind = int(g);\n    return mix(baseColor[ind], baseColor[(ind+1)], fract(g));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 pos = 1.0 - fragCoord/iResolution.xy;\n\n\n    // polar\n    vec2 polpos = xy2pol(pos * 2.0 - 1.0);\n\n\n    vec3 col = gradation3color(mix(polpos.s / PI + 1.0, pos.x * 2.0, abs(sin(iTime* 0.5))));\n\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}