{"ver":"0.1","info":{"id":"DlcyDB","date":"1699573868","viewed":41,"name":"Umbrella company logo","username":"gjtqiyue","description":"Umbrella logo with simple animation effect","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shape","umbrella","re"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Practicing shaping functions and rotation matrix\n//it is probably not efficient as it composes multiple shapes together\n//umbrella logo\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat crossBox(vec2 st, float w) {\n    float f1 = max(step(w, 1.-st.x), step(w, st.x));\n    float f2 = max(step(w, 1.-st.y), step(w, st.y));\n    return f1 * f2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.x;\n    st.y += 0.23;\n    vec3 color = vec3(0.0);\n    \n    \n    st -= vec2(0.5);\n    // rotate the space\n    st = rotate2d( 0.01*iTime*3.14 ) * st;\n    // move it back to the original place\n    st += vec2(0.5);\n\n    vec2 pos = vec2(0.5)-st;\n\n    //get the length to the center\n    float r = length(pos)*1.2;\n    //convert uv to spherical angle\n    float a = atan(pos.y,pos.x);\n\n    //the shaping function to create the triangle shape\n    float f = max((0.168*fract(sin(a * 4.)))-sign(sin(a * 4.)) , 0.0) * 0.1;\n\n    //blur the controls the bluring effect\n    float blur1 = max(sin(2.256*iTime) * 0.05 + 0.05, 0.0);\n    float blur2 = max(cos(2.256*iTime) * 0.05 + 0.05, 0.0);\n    \n    //the red component, apply the shaping function to the spherical uv\n    float f1 = max((0.184*fract(sin(a * 4.)))-sign(sin(a * 4.)) , 0.0) * 0.200;\n    vec3 color1 = vec3(1.- smoothstep(f1,f1+blur1,r) ) * vec3(1.0,0.0,0.0);\n    \n    //the white component\n    float f2 = max((0.184*fract(sin((a+3.132/4.) * 4.)))-sign(sin((a+3.14/4.) * 4.)) , -2.) * 0.200;\n    vec3 color2 = vec3(1.- smoothstep(f2,f2+blur2,r) ) * vec3(1.0,1.0,1.0);\n    \n    //combine them together\n    color = color1 + color2;\n    \n    //the border division\n    float w = 0.504;\n    //create a cross shape for vertical and horizontal\n    vec3 color3 = vec3(crossBox(st, w));\n    \n    //create the cross shape and rotate for the diagonal\n\tst -= vec2(0.5);\n    vec2 st_rot = rotate2d(0.25 * 3.14) * st;\n    st += vec2(0.5);\n    st_rot += vec2(0.5);\n    \n    vec3 color4 = vec3(crossBox(st_rot, w));\n    \n\t//output\n    color = (color1 + color2) * color4 * color3;\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}