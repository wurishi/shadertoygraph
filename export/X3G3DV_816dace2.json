{"ver":"0.1","info":{"id":"X3G3DV","date":"1718215368","viewed":89,"name":"Pixel Fight 0 - DJ","username":"DjBlueBear","description":"Each frame every pixel's color changes to that of one of it's neighbors","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["simulation","pixelfight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const vec3 color_0 = vec3(1.0,0.0,0.0);\n\nconst vec3 color_1 = vec3(0.0,1.0,0.0);\n\nconst vec3 color_2 = vec3(0.0,0.0,1.0);\n\nuint hash(inout uint x ) {\n    x += ( x << 10u );\n    x ^= ( x >>  6u );\n    x += ( x <<  3u );\n    x ^= ( x >> 11u );\n    x += ( x << 15u );\n    return x;\n}\n\nfloat rand(inout uint seed)\n{\n    return fract(float(hash(seed)) / 4294967295.0);//4294967296 2 ^ 32 / 32 bit unsigned integer limit\n}\n\nvec2 randVec2(inout uint seed)\n{\n    float x = rand(seed) * 2.0 - 1.0;\n    float y = rand(seed) * 2.0 - 1.0;\n    return vec2(x,y);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float safeFrame = mod(float(iFrame + 2) + iDate.w, 1000.0);\n    uint seed = uint((fragCoord.x * iResolution.y + fragCoord.y) * safeFrame);\n    \n    if(iFrame == 0)\n    {\n        float value = rand(seed);\n        vec3 col = value < 0.333 ? color_0 : value < 0.666 ? color_1 : color_2;\n        fragColor = vec4(col, 1.0);\n        return;\n    }\n    \n    vec2 offset = randVec2(seed);\n    \n    vec4 buffer;\n    \n    if(offset + fragCoord != clamp(offset + fragCoord, vec2(0.0), iResolution.xy))\n    {\n        buffer = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    }\n    else\n    {\n        buffer  = texelFetch(iChannel0, ivec2(fragCoord + offset), 0);\n    }\n    \n    fragColor = buffer;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float safeFrame = mod(float(iFrame + 3) + iDate.w, 1000.0);\n    uint seed = uint((fragCoord.x * iResolution.y + fragCoord.y) * safeFrame);\n    \n    vec2 offset = randVec2(seed);\n    \n    vec4 buffer;\n    \n    if(offset + fragCoord != clamp(offset + fragCoord, vec2(0.0), iResolution.xy))\n    {\n        buffer = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    }\n    else\n    {\n        buffer  = texelFetch(iChannel0, ivec2(fragCoord + offset), 0);\n    }\n    \n    fragColor = buffer;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float safeFrame = mod(float(iFrame + 4) + iDate.w, 1000.0);\n    uint seed = uint((fragCoord.x * iResolution.y + fragCoord.y) * safeFrame);\n    \n    vec2 offset = randVec2(seed);\n    \n    vec4 buffer;\n    \n    if(offset + fragCoord != clamp(offset + fragCoord, vec2(0.0), iResolution.xy))\n    {\n        buffer = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    }\n    else\n    {\n        buffer  = texelFetch(iChannel0, ivec2(fragCoord + offset), 0);\n    }\n    \n    fragColor = buffer;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float safeFrame = mod(float(iFrame + 5) + iDate.w, 1000.0);\n    uint seed = uint((fragCoord.x * iResolution.y + fragCoord.y) * safeFrame);\n    \n    vec2 offset = randVec2(seed);\n    \n    vec4 buffer;\n    \n    if(offset + fragCoord != clamp(offset + fragCoord, vec2(0.0), iResolution.xy))\n    {\n        buffer = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    }\n    else\n    {\n        buffer  = texelFetch(iChannel0, ivec2(fragCoord + offset), 0);\n    }\n    \n    if(buffer == vec4(0.0))\n    {\n       fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n       return;\n    }\n    fragColor = buffer;\n}","name":"Buffer D","description":"","type":"buffer"}]}