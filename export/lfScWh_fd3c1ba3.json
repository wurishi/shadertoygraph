{"ver":"0.1","info":{"id":"lfScWh","date":"1722228559","viewed":19,"name":"Line Drawing Macros / WIP","username":"rbdotus","description":"Drawing some figures (circles, infinite lines) using `#define` macros","likes":2,"published":1,"flags":16,"usePreview":0,"tags":["wip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 RGBA, in vec2 fragCoord ){\n    \n    RGBA = vec4(1.0);\n    RGBA.rgb *= 0.2;\n    \n    \n    \n    #define COLOR_WHT vec3(1.)\n    #define COLOR_RED vec3(1.,0.,0.)\n    #define COLOR_GRN vec3(0.,1.,0.)\n    #define COLOR_BLU vec3(0.,0.,1.)\n    \n    vec3 draw_color = COLOR_WHT;\n    \n    \n    vec2 uv = (fragCoord-iResolution.xy*0.5)/min(iResolution.x, iResolution.y);\n    \n    uv *= 1024.;\n    \n    \n    RGBA.rgb += -0.04 * (\n        1.\n        +cos(1.234*uv.x)\n        +cos(uv.y)\n    );\n    \n    \n    vec2 abs_uv = uv;\n    \n    \n    #define CIRC(R) draw_color/max(0.001, abs(length(uv) - R))\n    \n    draw_color = COLOR_RED;\n    RGBA.rgb += CIRC(128.);\n    \n    #define LINEabc(A, B, C) draw_color/max(0.001, abs(A*uv.x+B*uv.y+C)/sqrt(A*A+B*B))\n    // RGBA.rgb += LINEabc(1., cos(iTime*10.)*10., 1.);\n    /*\n    # > ax + by + c = 0\n    # => y = (-1/b)*(ax + c)\n    \n    # > y = Mx + B\n    # => M = -a/b\n    # => B = -c/b\n    \n    # => a = -M*b\n    # => c = -B*b\n    */\n    #define LINEmb(M, B) LINEabc(-M, 1., -B)\n    \n    \n    draw_color = COLOR_WHT;\n    \n    // y=x, crossing <0,0>\n    RGBA.rgb += LINEmb(1., 0.);\n    // y=-x, crossing <0,0>\n    RGBA.rgb += LINEmb(-1., 0.);\n    \n    \n    draw_color = COLOR_BLU;\n    \n    // y=constant, crossing <0,128>\n    RGBA.rgb += LINEmb(0., 128.);\n    // y=constant, crossing <0,-128>\n    RGBA.rgb += LINEmb(0., -128.);\n    \n    // x=constant, crossing <128,0>\n    RGBA.rgb += LINEabc(1., 0., 128.);\n    // x=constant, crossing <-128,0>\n    RGBA.rgb += LINEabc(1., 0., -128.);\n    \n    \n    \n    \n    uv = abs_uv + 350.*vec2(cos(iTime), sin(iTime));\n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}