{"ver":"0.1","info":{"id":"tscSzs","date":"1572730928","viewed":80,"name":"CheckBoard using Mod","username":"joshBogin","description":"Creating a checkerboard multiplying uv dimensions to make the tiles.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["checkerboardmod"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variables to specify column and row numbers\nfloat cols = 10.0;\nfloat rows = 8.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = fragCoord/iResolution.xy;\n\n\tuv.x *= cols; // change number of columns\n\tuv.y *= rows; // change number of rows\n    \n\t// determine whether uv position is even or odd and store it in a variable\n\tvec3 blackOrWhite = vec3(mod(floor(uv.x) + floor(uv.y),2.0));\n    \n    // fract uv to draw multiple tiles\n\tuv = fract(uv);\n\n\tvec3 color;\n    \n    // first color\n    vec3 color1 = vec3(0.0,0.0,0.0);\n    // second color\n    vec3 color2 = vec3(1.0,1.0,1.0);\n    \n   \t// background color\n    color = color1 * blackOrWhite + color2 * (1.0 - blackOrWhite);\n    \n\t// Output to screen\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}