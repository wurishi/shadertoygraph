{"ver":"0.1","info":{"id":"XflcDB","date":"1721538713","viewed":30,"name":"repeated texture effect plus cur","username":"laside777","description":"repeating","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["repeated","curv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float x = 0.0;       // Adjust these values as needed\nconst float y = 0.0;\nconst float zoom = 1.0;\nconst float angle = 0.0;  // Angle in degrees\nconst float curvature = 1.0; // Curvature factor (adjust to control distortion)\n\n// Function to repeat UV coordinates for edge cloning\nvec2 repeatUV(vec2 uv) {\n    return mod(uv, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized texture coordinates\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Center the coordinates and apply rotation\n    uv -= 0.5;\n    \n    // Convert angle from degrees to radians\n    float rotation = radians(-angle);\n    float c = cos(rotation);\n    float s = sin(rotation);\n    \n    // Aspect ratio correction\n    float aspectRatio = iResolution.x / iResolution.y;\n    \n    // Rotation matrix\n    mat2 rotationMatrix = mat2(\n        vec2(c, -s / aspectRatio),\n        vec2(s * aspectRatio, c)\n    );\n    \n    // Apply rotation\n    uv *= rotationMatrix;\n    \n    // Apply zoom and translation\n    uv = mod(uv * zoom + 0.5 + vec2(x, y), 2.0);\n    \n    // Adjust for UV wrap around\n    uv = abs(uv - floor(uv) * 2.0);\n    \n    // Apply curvature distortion\n    vec2 center = vec2(0.5); // Center of the UV space\n    vec2 dist = uv - center;\n    float radius = length(dist) * curvature;\n    vec2 uvDistorted = center + dist * (1.0 + radius);\n    \n    // Repeat UV coordinates to handle edge cloning\n    vec2 uvRepeated = repeatUV(uvDistorted);\n    \n    // Fetch color from texture (iChannel0)\n    vec4 color = texture(iChannel0, uvRepeated);\n    \n    // Output the color\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}