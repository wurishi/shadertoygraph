{"ver":"0.1","info":{"id":"4cjfRt","date":"1725369348","viewed":42,"name":"Faux shadows of a depth map","username":"ernest3rd","description":"Simple example on how to create a layered surface with fake shadows.\n\nHold down mouse button to change the direction of the shadow","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getStepValue(float v, int stepCount){\n    return floor(v*float(stepCount))/float(stepCount);\n}\n\nfloat getDepth(vec2 pos){\n    return 1.-pow(((sin(pos.x*5.*cos(pos.y*2.+iTime*0.2)+iTime*0.13)*sin(pos.y*5.*cos(pos.x*3.+iTime*0.15)+iTime*0.23)*sin(pos.y*5.+iTime+sin(iTime*0.13+33.33)*3.)*sin(pos.x*7.+iTime*0.33+sin(iTime*0.13)*4.))/2.+0.5),0.75);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    int layerCount = 16;\n\n    // Some value (from 0 and 1)\n    float depth = getDepth(uv); \n    float depthStep = getStepValue(depth, layerCount);\n    \n    // Base shade\n    float shade = 0.3 + 0.8 * depthStep;\n    \n    // Shadow\n    vec2 shadowOffset = (iMouse.xy/iResolution.xy-vec2(0.5)) * vec2(-.025);\n    // Get offsetted depth value to see if there is something\n    // on a higher step that would cast a shadow\n    float shadow = getDepth(uv + shadowOffset);\n    float shadowStep = getStepValue(shadow, layerCount);\n    // If there is a step difference darken the shade\n    if(shadowStep > depthStep){\n        shade *= 0.5;\n    }\n\n    // Output to screen\n    fragColor = vec4(vec3(shade),1.0);\n}","name":"Image","description":"","type":"image"}]}