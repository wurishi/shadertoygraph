{"ver":"0.1","info":{"id":"fdBfRR","date":"1645579084","viewed":318,"name":"Starburst glare","username":"Dubswitcher","description":"Control focus with mouse and values with constants at top of code.\n\nDeveloped for use in ZGameEditor Visualizer","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["postprocess","bloom","glow","flare","glare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//----SETTINGS----------------------\nfloat starg = 0.5;    // Scale target (inverse zoom amount)\nfloat iter = 30.;     // Iterations\nfloat lean = 1.0;     // Skewing value for iteration mixing\nfloat jitter = 0.1;   // Jittering scale\nfloat jspeed = 20.;   // Jittering speed\nfloat glow = 0.2;     // Flare strength\nfloat alpha = 1.0;    // Mix amount\n//----------------------------------\n\nfloat hash (in vec2 uv) {\n    vec3 p = vec3(dot(uv.xy,vec2(123.,456.)),dot(uv.xy,vec2(789.,112.)),dot(uv.xy,vec2(345.,678.)));\n    return fract(dot(fract(sin(p*10.)*5000.),vec3(987.,654.,321.)));\n}\n\nfloat ease (in float x) {\n    return pow(x,2.)*(3.-2.*x);\n}\n\nvec2 resize (in vec2 uv, in vec3 p)\n{\n    vec2 k = vec2(mix(0.,(p.z-1.),p.x),mix(0.,(p.z-1.),p.y));\n    return uv*p.z - k;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 focus = vec2(iMouse.xy/iResolution.xy);\n    vec2 rtime = vec2(iTime/100.,iTime/100.+1.);\n    vec2 jc1 = vec2(hash(floor(rtime.xx*(100.*jspeed))/(100.*jspeed)),\n                    hash(floor(rtime.yy*(100.*jspeed))/(100.*jspeed)))*jitter-(jitter/2.);\n    vec2 jc2 = vec2(hash(ceil(rtime.xx*(100.*jspeed))/(100.*jspeed)),\n                    hash(ceil(rtime.yy*(100.*jspeed))/(100.*jspeed)))*jitter-(jitter/2.);\n    vec2 jcenter = mix (jc1,jc2,ease(fract(iTime*jspeed)));\n    \n    focus += jcenter;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 layeruv = uv;    \n    vec3 layercol;\n    float c, sc, L;\n    int layermax = int(ceil(iter+0.001));    \n    \n    for (int i = 0; i < layermax; i++)\n    {\n        sc = float(i)/float(layermax);\n        L = mix(1.,starg,sc);\n        layeruv = resize(uv,vec3(focus,L));\n        layercol += mix(vec3(0.),texture(iChannel0,layeruv).rgb*2.,mix(sc,1.-sc,lean));\n        c += 1.;\n    }\n    \n    float strength = 1./(1.-glow);\n    \n    layercol /= c;\n    layercol = clamp(layercol*strength-strength/2.,0.,1.);\n        \n    vec3 col = texture(iChannel0,uv).rgb;\n    col += layercol*alpha;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}