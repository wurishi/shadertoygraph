{"ver":"0.1","info":{"id":"l3ffR2","date":"1728605145","viewed":54,"name":"Warp noise demo","username":"__blob","description":"Use one value noise as the offset for the sample of another and you get some nice warpy cloud noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","perlin","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Free to use in your projects given ATTRIBUTION\n// You must copy this entire comment block wherever this algorithm is in use\n// Author: Mat <mat.reiner@icloud.com>\n//   aka BlobKat (https://github.com/BlobTheKat)\n\n\n// Simple value noise\nvec2 valnoise(vec2 uv){\n    vec2 fa = floor(uv);\n    uv -= fa;\n\tuvec2 i = uvec2(ivec2(fa));\n\tuint x = uhash(i);\n    float a = float(x&0xffffu)/65535., b = float(x>>16)/65535.;\n    i.x++; x = uhash(i);\n    a = lerp(a, float(x&0xffffu)/65535., uv.x); b = lerp(b, float(x>>16)/65535., uv.x);\n    i.y++; x = uhash(i);\n    float a2 = float(x&0xffffu)/65535., b2 = float(x>>16)/65535.;\n    i.x--; x = uhash(i);\n    a2 = lerp(float(x&0xffffu)/65535., a2, uv.x); b2 = lerp(float(x>>16)/65535., b2, uv.x);\n    return vec2(lerp(a, a2, uv.y), lerp(b, b2, uv.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/20.;\n    vec2 uv2 = uv + iTime*-vec2(3,4);\n    // The algorithm in question\n    \n    // Optional: substract .5 to make mean(off) = 0\n    vec2 off = valnoise(uv*2.-uv2);\n    // Mouse view\n    if(fragCoord.x < iMouse.x){\n        if(fragCoord.y < iMouse.y) fragColor = vec4(0,off,1);\n        else fragColor = vec4(valnoise(vec2(uv2.x+uv2.y, uv2.x-uv2.y)/2.8).x,0,0,1);\n        return;\n    }\n    float a = valnoise(vec2(uv2.x+uv2.y, uv2.x-uv2.y)/2.8+off).x;\n    // Scale and display\n    a = (a-.5)*10.+.5;\n    fragColor = vec4(a,a,a,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"uint uhash(uvec2 a){\n\tuint x = ((a.x * 1597334673U) ^ (a.y * 3812015801U));\n\tx = x * 0x7feb352du;\n\tx = x ^ (x >> 15u);\n\tx = x * 0x846ca68bu;\n\treturn x;\n}\nfloat lerp(float a, float b, float l){return l*l*(3.f-2.f*l)*(b-a)+a;}","name":"Common","description":"","type":"common"}]}