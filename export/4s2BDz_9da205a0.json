{"ver":"0.1","info":{"id":"4s2BDz","date":"1500077710","viewed":87,"name":"My first shadertoy","username":"leetnightshade","description":"This is my first time playing around with shader toy, still playing around with it.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["draft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GAMMA_CORRECT 1\n#define DEBUG_LINES   0\n\n// Doesn't do anything yet \n#define CHECKERBOARD 1\n#define SCREEN_DOOR  2\n\n#define MODE CHECKERBOARD\n//\n\nvec3 rotateY(vec3 p, float a)\n{\n    float sa = sin(a);\n    float ca = cos(a);\n    return vec3(ca*p.x + sa*p.z, p.y, -sa*p.x + ca*p.z);\n}\n\nvoid mainImage( out vec4 c, in vec2 fragCoord )\n{\n    float asp = iResolution.x / iResolution.y;\n\tvec2 uv = (fragCoord.xy / iResolution.xy)*2.0-1.0;\n    \n    vec2 mouse = iMouse.xy / iResolution.xy;\n\tfloat roty;\n    float zoom = 2.0;\n\tif (iMouse.z <= 0.0) {\n\t\troty = iTime*0.25;\t\n\t} else {\n\t\t//rotx = (mouse.y-0.5)*3.0;\n\t\troty = (mouse.x-0.5)*6.0;\n        zoom = (mouse.y)*4.0;\n\t}\n    \n    vec3 rayDir = normalize(vec3(asp*uv.x, uv.y, zoom));\n    rayDir = rotateY(rayDir, roty);\n    \n    \n    //float yDiv = 4.0;\n    //float xDiv = yDiv*asp;\n    \n   // float stepX = ( iResolution.x - 1.0 ) / xDiv;\n    //float stepY = ( iResolution.y - 1.0 ) / yDiv;\n    \n    float stepX = 4.0;\n    float stepY = 4.0;\n    float yDiv  = iResolution.y / stepY;\n    float xDiv  = iResolution.x / stepX;\n    \n    float gamma = 2.2;\n    float linear = 1.0 / gamma;\n    \n    \n#if defined(DEBUG_LINES) && DEBUG_LINES\n    if ( floor(mod( fragCoord.x, stepX )) == 0.0 )\n    {\n        c = vec4( 0.0, 0.0, 0.0, 1.0);\n    }\n    else if ( floor(mod( fragCoord.y, stepY )) == 0.0 )\n    {\n        c = vec4( 0.0, 0.0, 0.0, 1.0);\n    }\n    else\n#endif //defined(DEBUG_LINES) && DEBUG_LINES\n    {\n        c=texture( iChannel0, rayDir);\n        \n        if ( ( int( mod( floor( fragCoord.x / iResolution.x * xDiv), 2.0 ) ) ^ \n                 int( mod( floor( fragCoord.y / iResolution.y * yDiv), 2.0 ) ) ) == 0 )\n        {\n            c = mix( c, c*c, sin(roty));\n        }\n        else\n        {\n            c = mix( c*c, c, sin(roty));\n        }\n        \n#if defined(GAMMA_CORRECT) && GAMMA_CORRECT\n        c = pow( c, vec4( 1.0 / linear ) );\n#endif\n    }\n    \n    // do stuff\n    \n#if defined(GAMMA_CORRECT) && GAMMA_CORRECT\n    float newGamma = 2.4;\n    c = pow( c, vec4( 1.0 / newGamma ) );\n#endif\n}","name":"Image","description":"","type":"image"}]}