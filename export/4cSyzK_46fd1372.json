{"ver":"0.1","info":{"id":"4cSyzK","date":"1722556184","viewed":91,"name":"Fork Circular m synthetix 145","username":"synthetix","description":"Yet another sound visualization.","likes":0,"published":3,"flags":40,"usePreview":0,"tags":["sound","spectrum","music","audio"],"hasliked":0,"parentid":"4sSGD3","parentname":"Circular music spectrum"},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n# define RADIUS_MIN\t50.0\n# define RADIUS_MAX 100.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2\tcenter = vec2(iResolution.x / 2.0, iResolution.y / 2.0);\n\tvec2\tvecPix = center - fragCoord.xy;\n\tvec2\tnormVecPix = normalize(vecPix);\n\tvec2\tnormVecRef = normalize(center - vec2(0.0, center.y));\n\t\n\tfloat\tcosAngle = dot(normVecPix, normVecRef);\n\tfloat\tangle = (degrees(acos(cosAngle)) + 360.0) / 1080.0;\n\tfloat\tvalue = texture(iChannel0, vec2(angle, 0.0)).x;\n\tvalue = value * 100.0;\n\t\n\t\n\tfloat\tvecLength = length(vecPix);\n\n\tif (vecLength > RADIUS_MIN + value && vecLength < RADIUS_MAX + value)\n\t{\n\t\tvec4\tcolor = vec4(1.0);\n\t\tfor (float i = RADIUS_MIN ; i < RADIUS_MAX; i += 1.0)\n\t\t{\n\t\t\tif (vecLength > i + value && vecLength < (i + 1.0) + value)\n\t\t\t{\n\t\t\t\tfloat\tintensity = (i - RADIUS_MIN) / (RADIUS_MAX - RADIUS_MIN);\n\t\t\t\tcolor -= vec4(intensity);\n\t\t\t}\n\t\t}\n\t\tfragColor = color * vec4(0.40, 0.50, 0.90, 0.0);\n\t}\n\telse\n\t\tfragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    return vec2( sin(6.2831*440.0*time)*exp(-3.0*time) );\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"void mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n    // Ray direction as color\n    vec3 col = 0.5 + 0.5*rayDir;\n\n    // Output to cubemap\n    fragColor = vec4(col,1.0);\n}","name":"Cube A","description":"","type":"cubemap"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}