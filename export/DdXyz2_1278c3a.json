{"ver":"0.1","info":{"id":"DdXyz2","date":"1686959128","viewed":45,"name":"What the frequency?","username":"graygoose","description":"Stupid stuffs.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["lel"],"hasliked":0,"parentid":"csfcR2","parentname":"playing_w_moirre"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 9\n#define FREQ_SCALE 1.\n\nfloat frequencies[N] = float[N](1.0, 3.0, 5.0, 7.0, 9.0, 11., 13., 15., 17.);\nfloat[N] redPatterns;\nfloat[N] greenPatterns;\nfloat[N] bluePatterns;\n\nfloat[N] redFrequencies;\nfloat[N] greenFrequencies;\nfloat[N] blueFrequencies;\n\nvoid update_frequencies() {\n    for (int i = 0; i < N; i++) {\n        redFrequencies[i] = frequencies[i] + sin(iTime + float(i)) * FREQ_SCALE;\n        greenFrequencies[i] = frequencies[i] + sin(iTime + float(i) + 0.333) * FREQ_SCALE;\n        blueFrequencies[i] = frequencies[i] + sin(iTime + float(i) + 0.666) * FREQ_SCALE;\n    }\n}\n\nvoid create_patterns(vec2 uv, float[N] frequencies, out float[N] patterns) {\n    vec2 polar = vec2(length(uv+cos(iTime)), atan(uv.y, uv.x));\n    for (int i = 0; i < N; i++) {\n        patterns[i] = sin(frequencies[i] * (polar.x + polar.y + cos(iTime * 0.5)));\n        patterns[i] += sin(iTime * 0.5 + uv.x + uv.y * float(i) / float(N));\n    }\n}\n\nvec3 calculateMoirePattern(float[N] redPatterns, float[N] greenPatterns, float[N] bluePatterns) {\n    vec3 colorSum = vec3(0.0);\n    for (int i = 0; i < N; i++) {\n        colorSum.r += redPatterns[i];\n        colorSum.g += greenPatterns[i];\n        colorSum.b += bluePatterns[i];\n    }\n    return fract(colorSum / float(N));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    update_frequencies();\n    create_patterns(uv, redFrequencies, redPatterns);\n    create_patterns(uv, greenFrequencies, greenPatterns);\n    create_patterns(uv, blueFrequencies, bluePatterns);\n\n    vec3 moirePattern = calculateMoirePattern(redPatterns, greenPatterns, bluePatterns);\n\n    vec3 color = vec3(0.5) + 0.5 * moirePattern;\n    color *= smoothstep(vec3(0.0), vec3(1.0), color);\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}