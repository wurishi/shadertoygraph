{"ver":"0.1","info":{"id":"XcjfDR","date":"1724801577","viewed":75,"name":"Rubik Swarovski","username":"Elsio","description":"Ã© assim: vc aprende uma coisa nova e cria uma coisa com o que aprendeu.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["fractal","test","raymarch","rubik","rotation","blackboard","cubo","estudy","cudomagico","lousa"],"hasliked":0,"parentid":"Xc23WK","parentname":"Swarovski"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// same ideia of: https://www.shadertoy.com/view/XfjBRD\n#define h11(k) fract(sin(k * 12345.) * 4567.)\n#define rot(a) mat2(cos(a + vec4(0, 3.5 * pi, 10.5 * pi, 0)))\n#define pi acos(-1.)\n#define t iTime\n\nvoid rot3D(inout vec3 p, vec3 n, float z) {\n    p.xy *= rot(n.z * z);\n    p.zx *= rot(n.y * z);\n    p.yz *= rot(n.x * z);\n}\n\nvec3 rxyz(vec3 p) {\n    p.xy *= rot(t * .2);\n    p.yz *= rot(t * .3);\n    \n    float theta,\n          T = sin(t * .3) * 3. + 3.,\n          i = floor(T) + 1.;\n    \n    while(--i > 0.) {\n        vec3 n;\n        n [ int(h11(i) * 3.) ] = floor(.5 + h11(i)) * 2. - 1.;\n        \n        theta = pi / 2. \n            * (i == floor(T) ? \n                         min(fract(T) * 3., 1.) : 1.);\n                         \n        rot3D(p, n, theta * length(step(.295,  p * n)));\n    }\n    return p;\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy;\n         u = (u - r / 2.) / r.y;\n         o *= 0.; \n    \n    float d, s, i, j,\n          e = 5e-3;\n    \n    vec3 cor, m, q, p, D = vec3(u, 1);\n    \n    \n    while(i++ < 44. && d < 4.) {\n        p = d * D,\n        p.z -= 2.,\n        \n        p = rxyz(p);\n\n        q = p;\n        \n        cor = sign(q - .3) + floor((abs(q) - .3)) + 1.;\n        \n        q = abs(q) - .3;\n        q = abs(q) - .3;\n        s = length(q) - .3;\n        \n        for(j = 1.; j < 8.; j += j) \n            q *= j * 2., \n            s += .018 * abs(dot(sin(q), p / p)) / j;\n        \n        s = abs(s),\n        \n        s < e\n            ? o += (cor.rgbb * i / d + i ) / 4000.\n            : o += vec4(.02);\n        \n        d += max(s, e / 12.);\n    }\n}","name":"Image","description":"","type":"image"}]}