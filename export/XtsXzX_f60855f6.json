{"ver":"0.1","info":{"id":"XtsXzX","date":"1438572340","viewed":185,"name":"Creepers","username":"dirkadirkadan","description":"creepin'","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define eps 0.05\n\nvec3 mat;\n\nfloat noise (vec2 p)\n{\n    p += 0.00132*iTime;\n\treturn sin(5355.*p.x)+sin(5494.*p.y)+cos(345.*p.x)+cos(3572.*p.y);\n}\n\nfloat fbm(vec3 p)\n{\n\tfloat lacunarity = 2.2;\n\tfloat gain = .5832;\n\tfloat total = 0.0;\n\tfloat frequency = .00012;\n\tfloat amplitude = gain;\n                \n\tfor (int i = 0; i < 4; ++i)\n\t{\n        total += noise(p.xz*frequency) * amplitude;         \n        frequency *= lacunarity;\n        amplitude *= gain;\n\t}\n\t\n\treturn total;\n}                       \n\nfloat de(vec3 z)\n{\t\n    float flr = z.y + .3+.2*sin(z.z+z.x)+.125*cos(2.+z.z);\n\tfloat creeper = z.y + 2.3 + flr +fbm(z);\n    \n    float sandiness = step(flr, creeper);\n    float creeperness = 1.-sandiness;\n    mat = sandiness*vec3(.7,.6,.3) + creeperness*vec3(.1);\n    \n\treturn min(creeper, flr);\n}\n\nvec3 norm(vec3 p)\n{\n\tfloat d = de(p);\n\tfloat x = de(vec3(p.x+eps,p.y,p.z))-d;\n\tfloat y = de(vec3(p.x,p.y+eps,p.z))-d;\n\tfloat z = de(vec3(p.x,p.y,p.z+eps))-d;\n\t\n\treturn normalize(vec3(x,y,z));\n}\n\nvoid fog(in vec3 fog_color, in float dist, inout vec3 col)\n{\n\tfloat amount = 1.-exp(-dist*dist*.00052);\n\tcol = mix(col, fog_color, amount);\n}\n\nvoid trace(in vec3 ro, in vec3 rd, out vec3 col)\n{\n\tfloat d = 0.;\n\t\t\n\tvec3 fog_color = vec3(.8, .7, .1);\n\tcol = vec3(0.);\n\t\t\n\tfor (int i = 0; i < 120; i++)\n\t{\n\t\tvec3 pt = ro+rd*d;\n\t\t\n\t\tfloat s = de(pt);\n\t\n\t\td += .91*s;\n\t\t\n\t\tif (s < eps)\n\t\t{\n\t\t\tvec3 n = norm(pt);\n\t\t\t\n\t\t\tfloat light = pow(dot(-n, normalize(vec3(-1.))), 1.);\n\t\t\tcol += .7*vec3(light);\n\t\t\t\t\t\t\n\t\t\tfloat edge = 1.-abs(dot(normalize(pt-ro), n));\n\t\t\t\n\t\t\tcol += .9*edge*edge*edge;\n\t\t\tcol *= mat;\t\t\t\n\t\t\n            fog(fog_color, d, col);\n            \n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tvec3 sky_color = vec3(.0, .0, .9);//+vec3(1.)*abs(.2*noise(rd.xz*.007));\n\t\n\tif (dot(col, col) == 0.) col = mix(fog_color, sky_color, rd.y*5.);\t\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.*uv-1.;\n    \n    vec3 col;\n    \n    trace(vec3(uv+vec2(0.,1.), 10.), normalize(vec3(uv, -1.)), col);\n    \n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}