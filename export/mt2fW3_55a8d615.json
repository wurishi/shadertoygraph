{"ver":"0.1","info":{"id":"mt2fW3","date":"1694582713","viewed":123,"name":"FBM Clouds","username":"pugly","description":"My first tests into fractional brownian motion using noise.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["clouds","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(in vec2 p) {\n    return fract(sin(dot(p,\n        vec2(16.12327, 27.4725))) *\n        29322.1543424);\n}\n\nfloat noise(in vec2 p) {\n\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    \n    float a = random(i);\n    float b = random(i + vec2(1., 0.));\n    float c = random(i + vec2(0., 1.));\n    float d = random(i + vec2(1., 1.));\n    \n    vec2 u = smoothstep(0., 1., f);\n    \n    return mix(a, b, u.x) +\n        (c - a) * u.y * (1.0-u.x) +\n        (d - b) * u.x * u.y;\n\n}\n\n#define OCTAVES 6\n\nfloat fbm(in vec2 p) {\n\n/*\n    mat2 rot = mat2(\n        4./5., -3./5.,\n        3./5., 4./5.\n    );\n*/\n\n\n    float t = iTime / 8.;\n    mat2 rot = mat2(\n        cos(t), -sin(t),\n        sin(t), cos(t)\n    );\n    \n    float shift = iTime/2.;\n\n    float value = 0.;\n    float amp = .5;\n    float freq = 0.;\n    \n    for (int i = 0; i < OCTAVES; i++) {\n    \n        value += amp * noise(p * rot + shift);\n        p *= 2.;\n        amp *= .5;\n    \n    }\n    \n    return value;\n}\n\nfloat repFbm(in vec2 p, int l) {\n    \n    float o = 0.;\n    \n    for (int i = 0; i < l; i++) {\n    \n        o = fbm(vec2(p+o));\n    \n    }\n    \n    return o;\n    \n}\n\nconst vec3 col1 = vec3(0.278,1.000,1.000),\n           col2 = vec3(0.424,0.431,0.855),\n           col3 = vec3(0.192,0.212,0.267);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy) / iResolution.y;\n\n    float v = repFbm(uv, 3);\n\n    vec3 col = mix(\n        col1,\n        col2,\n        clamp(v/3.,0.,.5));\n        \n    col = mix(\n        col,\n        col3,\n        mix(v*3.,.2,.66));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}