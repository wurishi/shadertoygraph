{"ver":"0.1","info":{"id":"wt3GR8","date":"1575554393","viewed":79,"name":"SRGB Scaler","username":"zeljkog","description":"Demonstration of the wrong color space used for scaling textures","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["mipmap","scale","colorspace","srgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // This shows texture scaling done by GPU, with normal texture (left side),\n    // and linear color space texture converted to SRGB (right side)\n    // When scaled down, it should be gray, but as you can see, the standard\n    // scaling used makes it green.\n    \n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float zoom=sin(iTime/2.0)/2.0+0.625;\n//    float zoom=0.125;\n    vec3 col = textureLod(iChannel0,fragCoord/(zoom*iResolution).xy,log2(1.0/zoom)).xyz;\n//    vec3 col = texture(iChannel0,fragCoord/(zoom*iResolution).xy).xyz;\n    // Output to screen\n    vec3 col2 = textureLod(iChannel1,fragCoord/(zoom*iResolution).xy,log2(1.0/zoom)).xyz;\n    if(fragCoord.x<iResolution.x/2.0)\n    \tfragColor = vec4(col,1.0);\n    else\n    {\n        float r1=col2.x;\n        float g1=col2.y;\n        float b1=col2.z;\n        \n        if(r1<0.0031308)\n            r1=r1*12.92;\n        else\n            r1=1.055*pow(r1,1.0/2.4)-0.055;\n        if(g1<0.0031308)\n            g1=g1*12.92;\n        else\n            g1=1.055*pow(g1,1.0/2.4)-0.055;\n        if(b1<0.0031308)\n            b1=b1*12.92;\n        else\n            b1=1.055*pow(b1,1.0/2.4)-0.055;\n        \n    \tfragColor = vec4(vec3(r1,g1,b1),1.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat h1 = 0.735357;\n    float odd = round(mod(floor(fragCoord.y),8.0)/7.0);\n    vec3 col = vec3(odd,h1,odd);\n    fragColor = vec4(col,1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat h1 = 0.5;\n    float odd = round(mod(floor(fragCoord.y),8.0)/7.0);\n    vec3 col = vec3(odd,h1,odd);\n    fragColor = vec4(col,1.0);\n}\n","name":"Buffer B","description":"","type":"buffer"}]}