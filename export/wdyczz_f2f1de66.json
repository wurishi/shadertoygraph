{"ver":"0.1","info":{"id":"wdyczz","date":"1602127644","viewed":82,"name":"searching","username":"shortwavedave","description":"space time space time","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["time","space"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nmat3 m = mat3(\n  vec2(0.,1.), 1.,    // first column\n  vec2(0.,0.), 0.,    // second column\n  vec2(0.,0.), 0.);   // third column\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n/*bool sq (vec2 st, float t) {\n    vec2 stx = vec2(-.7+.1*random(st)*cos(1.2*iTime+st.y*5.),\n                    .7+.1*random(st)*cos(iTime+st.y*5.))\n        +.1*random(st)*clamp(cos(.8*iTime+random(st)),-.5,.5);\n    \n    vec2 sty = vec2(-.3+.1*random(st)*cos(1.2*iTime+st.x*5.),\n                    .1+.1*random(st)*cos(1.4*iTime+st.x*5.))\n        +.1*random(st)*clamp(cos(iTime+random(st)),-.5,.5);\n    return (st.y > sty.x && st.x > stx.x && st.x < stx.y && st.y < sty.y);\n    //(uv.x > 0. && uv.x < .3 && uv.y > -.1 && uv.y < .2)\n}*/\n\nbool sq (vec2 st, float t) {\n    float vx = 0.;\n    float vy = 0.;\n    //float vx = -.2 + .5*pow(sin(iTime*.95),25.);\n    //float vy = -.2+.3*pow(cos(iTime*.9),15.);\n    vec2 stx = vec2(-.3+.1*random(st)*cos(1.2*iTime+st.y*5.),\n                    .3+.1*random(st)*cos(iTime+st.y*5.)) + vx\n        +.1*random(st)*clamp(cos(.8*iTime+random(st)),-.5,.5);\n    \n    vec2 sty = vec2(-.3+.1*random(st)*cos(1.2*iTime+st.x*5.),\n                    .1+.1*random(st)*cos(1.4*iTime+st.x*5.)) + vy\n        +.1*random(st)*clamp(cos(iTime+random(st)),-.5,.5);\n    return (st.y > sty.x && st.x > stx.x && st.x < stx.y && st.y < sty.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord/iResolution.xy)-0.5)*vec2(iResolution.x/iResolution.y,1.);\n    \n    if (sq(uv, iTime)) {\n    \tuv += vec2(0., -0.01); \n        m = mat3(\n          vec2(1.,.1*random(uv)), 0.,    // first column\n          vec2(0.,0.), 0.,    // second column\n          vec2(0.,0.), 0.);   // third column\n    }\n    \n    uv += vec2(0., .005*cos(50.*uv.x)*tan(50.*uv.x));\n    \n    vec3 viewDir = normalize(vec3(uv+vec2(0.0,-.4),.5));\n    \n    vec2 planarUV = viewDir.xz/abs(viewDir.y);\n    \n    float depth = planarUV.y;\n    \n    planarUV += vec2(iTime*0., iTime*.1);\n    \n    vec3 albedo = m*texture( iChannel0, planarUV*2.5 ).rgb;\n    //vec3 albedo = texture( iChannel0, uv).rgb;\n    \n    float light = 1.5/(depth*depth)*viewDir.z;\n    \n    fragColor = vec4(light*albedo,1.);\n    //fragColor = vec4(albedo,1.0);\n}","name":"Image","description":"","type":"image"}]}