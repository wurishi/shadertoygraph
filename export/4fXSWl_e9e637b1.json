{"ver":"0.1","info":{"id":"4fXSWl","date":"1705844248","viewed":107,"name":"Rotate + Touch","username":"Volbla","description":"Discovered here: https://twitter.com/Yugemaku/status/1323533649891913728","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Can range between 0 and 1/sqrt(2) ~ 0.707\n// Now animated in mainImage().\n//#define SEPARATION 0.4\n\n\nconst float sqrttwo = sqrt(2.);\n//const float sephyp = sqrt(1. - SEPARATION*SEPARATION);\n\n// Signs and angles for different orientations\nconst vec4 s1 = vec4(1, -1, 1, -1);\nconst vec4 s2 = vec4(0, 0, 1, 1);\nconst vec4 s3 = vec4(1, 1, -1, -1);\nconst vec4 ang = vec4(0, asin(1.), 0, asin(1.));\n\n\nvec3 hsv(float h, float s, float v) {\n    vec3 channels = h - vec3(0., 1./3., 2./3.);\n    vec3 triangle = abs(6.*mod(channels,1.) - 3.);\n    vec3 trapezoid = clamp(triangle-1., 0., 1.);\n    \n    vec3 rgb = ((trapezoid-1.)*s + 1.)*v;\n    return rgb;\n}\n\n\nfloat repeat(float axis, float loop) {\n    return mod(axis, loop) - loop/2.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n    uv *= 2.;\n    vec3 col = vec3(1);\n    float pixelSize = 4. / iResolution.y;\n    pixelSize *= 1.5;\n    \n    float separation = 0.5*(sin(0.5*iTime)+1.) / sqrttwo;\n    float ysep = sqrt(1. - separation*separation);\n    \n    \n    float x0, y0, T, value, edge;\n    \n    for (int i=0; i<4; i++) {\n        x0 = repeat(\n            sqrttwo*uv.x - s1[i]/2. - s2[i]*(1.+separation),\n            2.*(1.+separation)\n        );\n        y0 = repeat(\n            sqrttwo*uv.y - s3[i]/2.*ysep,\n            2.*ysep\n        );\n        \n        T = iTime + ang[i];\n        value = x0*x0 + y0*y0 + sqrttwo*abs(-sin(T)*x0 + cos(T)*y0);\n        \n        // Implicit boundary: value < 0.5\n        edge = smoothstep(0.5+pixelSize, 0.5-pixelSize, value);\n        col = mix(col, hsv(float(i)/4., 0.75, 0.85), edge);\n    }\n\n    fragColor = vec4(col,1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}