{"ver":"0.1","info":{"id":"lf23WW","date":"1704244426","viewed":35,"name":"Dithering Progress","username":"blubbers122","description":"dithering","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat4 ditherMatrix = mat4(\n  0, 8, 2, 10,\n  12, 4, 14, 6,\n  3, 11, 1, 9,\n  15, 7, 13, 5\n);\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float matrixSize = 4.;\n    \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float scale = 1. + floor(15. * ((sin(iTime / 2.) + 1.) / 2.));\n    vec2 virtualResolution = iResolution.xy / scale;\n    int x = int(fragCoord.x / scale);// + int(sin(iTime) * pow(matrixSize, 2.));\n    int y = int(fragCoord.y / scale);\n    \n    \n    \n    vec3 col1 = palette(.2);//orange\n    vec3 col2 = palette(.8);//blue\n    \n    //float progress = (sin(iTime) + 1.) / 2.;\n    float progress = float(x) / virtualResolution.x;\n\n    float t = -1. + (progress) * (pow(matrixSize, 2.) + 1.);\n    \n    float threshold = ditherMatrix[x % 4][y % 4];\n\n\n    vec3 col = mix(col1, col2, step(t, threshold));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}