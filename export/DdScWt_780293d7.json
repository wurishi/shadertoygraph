{"ver":"0.1","info":{"id":"DdScWt","date":"1688308062","viewed":27,"name":"Sides of a die","username":"ojaoweir","description":"A shader that scrolls through the sides of a die","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","dots","die"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author @patriciogv - 2015\n// http://patriciogonzalezvivo.com\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nfloat shaping (float x) {\n   return pow(min(cos(3.14 * x / 2.0), 1.0 - abs(x)), 3.0);\n}\n\nfloat circleValue(vec2 st, vec2 circleCenter) {\n    return distance(st,circleCenter);\n}\n\nfloat unEvenDots(float middleMiddle,\n                float topLeft,\n                float bottomRight,\n                float bottomLeft,\n                float topRight,\n                float currentSide) {\n    middleMiddle = 6.0 * (1.0 - step(0.2, middleMiddle * 2.0));\n    topLeft = 4.0 * (1.0 - step(0.2, topLeft * 2.0));\n    bottomRight = 4.0 * (1.0 - step(0.2, bottomRight * 2.0));\n    bottomLeft = 2.0 * (1.0 - step(0.2, bottomLeft * 2.0));\n    topRight = 2.0 * (1.0 - step(0.2, topRight * 2.0));\n    return step(currentSide, middleMiddle + topLeft + bottomRight + bottomLeft + topRight);\n}\n    \n    \nfloat evenDots(float topLeft,\n               float bottomRight,\n               float bottomLeft,\n               float topRight,\n               float middleLeft,\n               float middleRight,\n               float currentSide) {\n    bottomLeft = 5.0 * (1.0 - step(0.2, bottomLeft * 2.0));\n    topRight = 5.0 * (1.0 - step(0.2, topRight * 2.0));\n    topLeft = 3.0 * (1.0 - step(0.2, topLeft * 2.0));\n    bottomRight = 3.0 * (1.0 - step(0.2, bottomRight * 2.0));\n    middleLeft = 1.0 * (1.0 - step(0.2, middleLeft * 2.0));\n    middleRight = 1.0 * (1.0 - step(0.2, middleRight * 2.0));\n    return step(currentSide, topLeft + bottomRight + bottomLeft + topRight + middleLeft + middleRight);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    float numSides = 6.0;\n    float currentSide = 1.0 + numSides - mod(iTime * 2.0 / (PI), 1.0 + numSides);\n    float aspectRatio = (iResolution.x / iResolution.y);\n    \n    float x1 = 0.2 * aspectRatio;\n    float x2 = 0.5 * aspectRatio;\n    float x3 = 0.8 * aspectRatio;\n    \n    float y1 = 0.2;\n    float y2 = 0.5;\n    float y3 = 0.8;\n    \n\tvec2 st = fragCoord.xy/iResolution.xy;\n    st.x = st.x * (iResolution.x / iResolution.y);\n\n    vec2 movementDirectionDiag = vec2(x1 - x2, y1 - y2);\n    vec2 movementDirectionDiagOppo = vec2(x3 - x2, y1 - y2);\n    vec2 movementHorizontal = vec2(x3 - x2,x2 - x2);\n    vec2 movementHorizontalOppo = vec2(x1 - x2, x2 - x2);\n    vec2 movementMiddle = vec2(x2 - x2,y2 - y2);\n    \n    float timeFactor = shaping(sin(iTime * 2.0));\n    vec2 topLeft = vec2(x1, y3) + (movementDirectionDiagOppo * timeFactor);\n    vec2 middleLeft = vec2(x1, y2) + (movementHorizontal * timeFactor);\n    vec2 bottomLeft = vec2(x1, y1) - movementDirectionDiag * timeFactor;\n    \n    \n    vec2 middleMiddle = vec2(x2, y2) - movementMiddle * timeFactor;\n    \n    vec2 topRight = vec2(x3, y3) + movementDirectionDiag * timeFactor;\n    vec2 middleRight = vec2(x3, y2) + (movementHorizontalOppo * timeFactor);\n    vec2 bottomRight = vec2(x3, y1) - (movementDirectionDiagOppo * timeFactor);\n    \n    float uneven = unEvenDots(circleValue(middleMiddle, st), circleValue(topLeft,st), circleValue(bottomRight,st), circleValue(st,bottomLeft), circleValue(st,topRight), currentSide);\n    float even = evenDots(circleValue(topLeft,st), circleValue(bottomRight,st), circleValue(st,bottomLeft), circleValue(st,topRight), circleValue(st,middleLeft), circleValue(st,middleRight), currentSide);\n\t\n    float pct = 1.0 - mix(even, uneven, floor(mod(currentSide,2.0)));\n    pct = step(0.2, pct * 2.0);\n\n    vec3 color = vec3(pct);\n\n\tfragColor = vec4( color, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}