{"ver":"0.1","info":{"id":"4ljXDc","date":"1446998107","viewed":171,"name":"BinaryTree","username":"jt","description":"A simple binary tree. Based on [url]https://www.shadertoy.com/view/4t2SWc[/url].\nSee [url]https://www.shadertoy.com/view/ltjXW3[/url] for smooth variant.\nSee [url]https://www.shadertoy.com/view/MljXDV[/url] for a different variant.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["binarytree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Binary Tree - written 2015 by Jakob Thomsen\n// Thanks to FabriceNeyret2 for optimizing the code.\n\n/*\nvec2 BinaryTreeSubDiv(float n, vec2 v) // original version\n{\n    return vec2(fract(exp2(ceil(v.y * n)) * v.x / 2.0), fract(v.y * n));\n}\n\nfloat mirror(float x)\n{\n    return 1.0 - 2.0 * abs(x - 0.5);\n}\n\nvoid mainImage( inout vec4 o, vec2 U )\n{\n    const float n = 5.0;\n    U /= iResolution.xy;\n    float y = U.y * n;\n\tvec2 uv = BinaryTreeSubDiv(n, U.xy);\n    uv.x = mirror(uv.x);\n    float val = 1.0 - smoothstep(0.0, 0.1 * (2.0 - uv.y), abs(2.0 * (1.0 - uv.x) - uv.y));\n\to = vec4(val);\n}\n*/\n/*\nconst float n = 5.;\n\nvec2 BinaryTreeSubDiv(float n, vec2 v) // optimized version\n{\n    v.y *= n; \n    v.x *= exp2(ceil(v.y))/2.;\n    return fract(v);\n}\n\nvoid mainImage( inout vec4 o, vec2 U )\n{\n    U = BinaryTreeSubDiv(n, U/iResolution.xy);\n    o += 1. - smoothstep(0., .2-.1*U.y, abs(4.*abs(U.x-.5) - U.y));\n}\n*/\n\n// jt's BinaryTree compactified by 834144373 and FabriceNeyret2   \nvoid mainImage( out vec4 o, in vec2 U )\n//void mainImage( inout vec4 o, vec2 U ) // ERROR: overloaded functions must have the same parameter qualifiers\n{\n    U /= iResolution.xy;\n    U.x *= exp2(ceil(U.y *= 5.))/2.;\n    U = fract(U);\n    o -= o;\n    o += 1. - smoothstep(0., .2 - .1 * U.y, abs(4. * abs(U.x - .5) - U.y)); // straight lines\n    //o += 1. - smoothstep(0., .2 - .1 * U.y, abs(4. * abs(U.x - .5) - 1. - log2(.5 * (U.y + 1.0)))); // smooth\n}\n","name":"","description":"","type":"image"}]}