{"ver":"0.1","info":{"id":"4lsXz2","date":"1438138590","viewed":525,"name":"cymatics wave tank kindof","username":"iterationsteppa","description":"Mouse Interaction. Some wave machines with variable distance from centre and wave speed (period), similar to sound waves bouncing inside a square plate in cymatics. Similar to animal pigments for example in fish. ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["cymatics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\n//using a wave tank emulation, with 4 wave engines  placed in symmetry the waves meet in the middle. when wave engines are far away, the lines made by the\n//wave engines are nearly straight and the middle is same as in the pic.\n//Please share developments from this work on this page in comments. \n//Prizes for you if you can make a linear-tile-version using square waves instead of sines or somthing.\n//Creative Commons â€” Attribution 3.0 Antony Stewart\n//overall formula is a variable patterned alternataive to perlin noise function\n//and can be used for iso-surfaces i.e multiply in 3d with a sphere.\n\n\nvoid mainImage( out vec4 color, vec2 UVcoords )\n{\n   float d3 = iResolution.y*.5 ,//number to move pic upwards\n         d4 =  iResolution.x*.5 ,//number to move pic sideways\n         d2 = 8.0 - 4.0 * sin(iTime*.07 ) + iMouse.y*0.0021, //number to move 5 wave machines outwards\n    \td1 = .5; ;// wave width\n   UVcoords = .5*(UVcoords - vec2(d4,d3)); //move pic around\n    \n    \n\t//function to make color concentric sinewaves like water drop waves radiating from a pt:   \n#define S(X, Y, period)   color += sin(length(UVcoords + vec2(X,Y)*d2)*period);    // sin(length()*p2)+v2\n\t//see end for full formula including angular coordinates as well as concentric\n\t//Tip: to remix the code, you can try mixing 3/4/8 \n    //wave machines in different symmetries and vary their distance and amplitudes\n  \n\n   \n//make 5 wave machines where the color is added t*d2ogether on coordinates of pentagon:\n    \n    //central wave machine on origin\n    S(0.0,0.0,iMouse.x*0.01)\n        \n    //4 other wave machines on axes\n    S(0,1.0*d2,d1)  S(0,-1.0*d2,d1)  S(-1.0*d2,-0.0,d1)  S(1.0*d2,0.0,d1)   \n}\n    \n\n//NOTE: original version had concentric wave forms in this fasion:\n\n//float2 xy2 = IN.uv_MainTex + float2(-0.5, -0.5*d3 ) + float2(k1,j1)*d2; \n//position of the point\n\n//float c2 = length(xy2);//polar coordinates (x axis becomes radial)\n\n//ht+=  (sin(c2 * p2)  *v2) ;//angular coordinates (y becomes angle)\n    \n    \n\n","name":"Image","description":"","type":"image"}]}