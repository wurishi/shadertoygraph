{"ver":"0.1","info":{"id":"lfVGWh","date":"1712870787","viewed":32,"name":"Circle screen transition","username":"AgateDragon","description":"Circle screen transition\nhttps://agatedragon.blog/2024/04/11/shadertoy-circle-transition/","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["screen","circle","transition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Apply easing. Range: 0 to 2.\n#define EASING 2\n\n// Edge smoothing\nconst float SMOOTHING = 1.0;\n\n// Transition speed\nconst float SPEED = 0.68;\n\n// Background colour\nconst vec4 BACKGROUND = vec4(0.0, 0.0, 0.0, 1.0);\n\n// https://easings.net/#easeInCubic\nfloat EaseInCubic(float x)\n{\n    return x * x * x;\n}\n\n// https://easings.net/#easeOutCubic\nfloat EaseOutCubic(float x)\n{\n    return 1.0 - pow(1.0 - x, 3.0);\n}\n\n// https://easings.net/#easeInOutCubic\nfloat EaseInOutCubic(float x)\n{\n    return x < 0.5 ? 4.0 * x * x * x : 1.0 - pow(-2.0 * x + 2.0, 3.0) / 2.0;\n}\n\nfloat Circle(vec2 pos, float radius)\n{\n    return length(pos) - radius;\n}\n\nvoid mainImage(out vec4 fragColour, in vec2 fragCoord)\n{\n    // Normalised pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Calculate aspect ratio\n    float aspect = 1.0 / min(iResolution.x, iResolution.y);\n    \n    // Position\n    vec2 pos = uv - 0.5;\n    pos *= aspect * iResolution.xy;\n    \n    // Progress\n    float progress = sin(iTime * SPEED) * 0.5 + 0.5;\n    \n    // Sync texture switching with scaling\n    float p = abs(progress - 0.5) * 2.0;\n    \n    // Apply easing\n    switch(EASING)\n    {\n        case 0:\n        p = EaseInCubic(p);\n        break;\n        case 1:\n        p = EaseOutCubic(p);\n        break;\n        case 2:\n        p = EaseInOutCubic(p);\n        break;\n    }\n    \n    // Animate the circle radius\n    float radius = mix(0.0, 1.1, p);\n    \n    // Create circle\n    float c = Circle(pos, radius);\n    \n    // Edge smoothing\n    float s = SMOOTHING * aspect;\n    c = smoothstep(s, -s, c);\n    \n    // Get texture colours\n    vec4 from = texture(iChannel0, uv);\n    vec4 to = texture(iChannel1, uv);\n    \n    // Output\n    vec4 col = mix(from, to, step(0.5, progress));\n    fragColour = mix(BACKGROUND, col, c);\n}","name":"Image","description":"","type":"image"}]}