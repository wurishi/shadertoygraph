{"ver":"0.1","info":{"id":"wlsSz7","date":"1562715014","viewed":124,"name":"acidity","username":"hodapp","description":"Another one of the standard ripply hacks that I implement to test a system. Mostly useful for staring at. Click around. Called Acidity after an old DOS demo called \"Acid Warp\".","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["warping","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// (c) 2019, Chris Hodapp\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.141592654\n\nvec2 rect2polar(in vec2 p) {\n    return vec2(sqrt(p.x*p.x + p.y*p.y), atan(p.y, p.x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 px = fragCoord.xy/iResolution.xy;\n    vec2 pn = vec2((px.x - 0.5) * iResolution.x/iResolution.y,\n               \t   px.y - 0.5);\n    vec2 m = iMouse.xy/iResolution.xy;\n    if (iMouse.xy == vec2(0, 0)) {\n        m = vec2(0.5, 0.5);\n    }\n    pn *= 10.0;\n    \n    vec2 pol = rect2polar(pn);\n    \n    pol.t = mod(pol.t + iTime*0.87 + pol.s*0.1*cos(iTime*0.9) + 2.0*cos(iTime)/(pol.s+0.2) + 0.5*cos(pol.s*5.0*cos(iTime*0.11) - iTime*1.1)*cos(iTime*0.13+m.x), PI);\n    float d = m.y * 1.5;\n    float g = smoothstep(0.0, d, pol.t) - smoothstep(d, d*2.0, pol.t);\n    vec3 color = vec3(g);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}