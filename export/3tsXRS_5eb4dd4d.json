{"ver":"0.1","info":{"id":"3tsXRS","date":"1563380816","viewed":171,"name":"RayMarchingBand003","username":"Hirai_worthless","description":"003","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p){\n    p = fract(p) * 2.0 - 1.0;\n    p.xz *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n        p.yz *= mat2(cos(1.0),-sin(1.0)\n             ,sin(1.0),cos(1.0));\n    float cil_side = length(p.xz) - abs(sin(iTime))/1.0;\n    float cil_top_bottom = abs(p.y) - abs(cos(iTime)) * 2.0;\n    float cil = max(cil_side,cil_top_bottom);\n    float holes = 10000000.0;\n    float d1 = abs(sin(iTime));\n    float d2 = abs(cos(iTime));\n    for(float xi = -10.0; xi < 10.0; xi++){\n        for(float yi = -10.0; yi < 10.0; yi++){\n        \tfloat h1 = length(p.xy - (xi * 0.4*d1,yi * 0.4*d2)) -0.1 * d1;\n            holes = min(holes,h1);\n        }\n    }\n        p.yz *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n    for(float xi = -10.0; xi < 10.0; xi++){\n        for(float yi = -10.0; yi < 10.0; yi++){\n        \tfloat h1 = length(p.xy - (xi * 0.4*d1,yi * 0.4*d2)) -0.1 * d1;\n            holes = min(holes,h1);\n        }\n    }\n        p.xy *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n    for(float xi = -10.0; xi < 10.0; xi++){\n        for(float yi = -10.0; yi < 10.0; yi++){\n        \tfloat h1 = length(p.xy - (xi * 0.4*d1,yi * 0.4*d2)) -0.1 * d1;\n            holes = min(holes,h1);\n        }\n    }\n    float sph = length(p) - 10.5;\n\treturn max(holes,sph);\n}\n\nfloat trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i){\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.0));\n    \n    vec3 o = vec3(0,0,-2.0);\n    float t = trace(o,r);\n    float fog = 1.0 / (1.0 + t * t * 0.2);\n    vec3 fc = vec3(fog);\n\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}