{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n#define TIME_MULT 1.\n\n#define MAXSTEPS 30\n#define MINSTEP 0.0005\n#define MAXDIST 100.0\n#define NORMALSTEP MINSTEP\n\nfloat t;\n\nfloat distfield( vec3 pos )\n{\n\tfloat R = 1.+cos(pos.z*pos.z*15.+2.*t)*0.01 + sin((sin(pos.x*2.+t*0.2)-pos.z+pos.y)*7.+cos(pos.z*pos.z*15.+2.*t)*10.)*0.002;\n\treturn length(pos)-R;\n}\n\nfloat trace( vec3 from, vec3 ray, inout vec3 n )\n{\n\tn = vec3(0,0,1);\n\tfloat dist = from.z / -ray.z;\n\tif (dist < 0.) return MAXDIST;\n\treturn dist;\n}\n\nfloat raymarch( vec3 from, vec3 ray, float maxdist )\n{\n    float dist = 0.0, d;\n    vec3 curpos = from;\n\n    for (int j=0; j<MAXSTEPS; ++j)\n    {\n        d = distfield(curpos);\n        if (dist > maxdist) break;\n        if (d < 0.0) break;\n        d = max(d, MINSTEP);\n        dist += d;\n        curpos += ray*d;\n    }\n    if (d >= 0.0) dist = MAXDIST;\n\n    return dist;\n}\n\nvec3 distfield_normal( vec3 p )\n{\n\t// This is taken from \"GENERATORS REDUX\" by Kali\n\t\n    vec3 e = vec3(0.0, NORMALSTEP, 0.0);\n    return normalize(vec3(\n        distfield(p+e.yxx)-distfield(p-e.yxx),\n        distfield(p+e.xyx)-distfield(p-e.xyx),\n        distfield(p+e.xxy)-distfield(p-e.xxy)\n        ));\t\n}\n\nvec3 water_texture( vec3 pos )\n{\n\tfloat w = 0.05 / (length(pos)*3.+1.);\n\tfloat gx = sin(20.*pos.x + cos(pos.y)*2. + t);\n\tfloat gy = cos(pos.y*5.+2.*t + sin(pos.x+1.*t))+ cos((pos.x-pos.y+sin(pos.x+.2*t)*0.5)*(1.+.3*cos(.2*t+3.*pos.x))*25.)*0.2;\n\treturn normalize( vec3(gx*gy*w, (gy+gy)*w*.5, 1) );\n}\n\nvec3 trace_col( vec3 ray, vec3 pos )\n{\n\tconst vec3 diffuse_color = vec3(1, .9, .8)*1.2;\n\tconst vec3 unnorm_light_dir = vec3(-1,3,5);\n\t\n    vec3 col = vec3(1,1,1), n, isec, diff_col = diffuse_color;\n\tcol = mix(col, vec3(0,0,1), ray.z);\n\n\tfloat dist1 = trace(pos, ray, n);\n    float dist2 = raymarch(pos, ray, dist1);\n\tbool refl = false, hit = false;\n\t\n\tfloat dist = min(dist1, dist2);\n\t\n\tif (dist < MAXDIST)\n\t{\n\t\tisec = dist*ray+pos;\n\t\t\n\t\tif (dist2 < dist1)\n\t\t{\n\t\t\tn = distfield_normal( isec );\n\t\t\thit = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpos = isec;\n\t\t\tn = water_texture( pos );\n\t\t\tdiff_col = vec3(.3,.3,.5);\n\t\t\tray = reflect( ray, n );\n\t\t\tdist2 = raymarch(pos, ray, MAXDIST);\n\t\t\tif (dist2 < MAXDIST)\n\t\t\t{\n\t\t\t\tisec = dist2*ray+pos;\n\t\t\t\tn = distfield_normal( isec );\n\t\t\t\tdist = dist + dist2;\n\t\t\t\trefl = true;\n\t\t\t\thit = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiff_col = mix(diff_col,vec3(.9,.9,1),ray.z);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfloat l = dot(n, normalize(unnorm_light_dir));\n\t\tcol = diff_col * max(l,0.0);\n\t\tcol = mix(vec3(1,1,1), col, exp(-dist*.1));\n\t\tif (hit) col *= 1.0-exp(-isec.z*20.);\n\t\tif (refl) col = mix(col, vec3(1,1,1), 0.15);\n\t}\n\t\t\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat aspect = iResolution.x / iResolution.y;\n\t\n\tconst float view_plane_dist = 1.6;\n\tconst vec3 camera_pos = vec3(0,0,-3);\n\t\n\tvec3 ray = vec3(\n\t\t((fragCoord[0] / iResolution.x)*2.0-1.0)*aspect,\n\t\t((fragCoord[1] / iResolution.y)*2.0-1.0),\n\t\tview_plane_dist );\n\n\tfloat h = iMouse.x/iResolution.x * 8.0 + 1.1;\n\tfloat p = -(iMouse.y/iResolution.y - 0.5) * 4.0;\n\t\n\tfloat c = cos(h), s = sin(h);\n\tt = iTime  * TIME_MULT;\n\n\tmat4 hrot = mat4(c, -s, 0, 0, s,c,0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\n\tc = cos(p);\n\ts = sin(p);\n\t\n\tmat4 prot = mat4(1,0,0, 0, 0, c,  s, 0, 0, -s, c, 0, 0,0,0,1);\n\n\n\tvec4 r = hrot * prot * vec4(ray,1);\n\tray = vec3(r.x,r.y,r.z);\n\tvec4 cp = hrot * prot * vec4(camera_pos,1);\n\n\tvec3 pos = vec3(cp.x,cp.y,cp.z);\n\tray = normalize(ray);\n\n\tfragColor = vec4(trace_col(ray, pos),1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldj3RR","date":"1382898590","viewed":183,"name":"Icecream","username":"oseiskar","description":"just testing...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","distancefield"],"hasliked":0,"parentid":"","parentname":""}}