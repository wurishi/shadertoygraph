{"ver":"0.1","info":{"id":"llXfz7","date":"1511383486","viewed":124,"name":"Voronoi cells Test","username":"bytewave","description":"Some quick testing","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoitest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Rand(vec2 p,float seed)\n{ \n    return fract(95.12*sin( (dot (vec2(p.x,p.y),vec2(3.654,6.987)+seed))));\n}\n\nvec2 LocalPosInCell(vec2 CellIndex) \n{\n    float x = Rand(CellIndex,1.);\n    float y = Rand(CellIndex,1.);\n    \n    return vec2(x,y);\n}\n\nfloat CellAtGridIndex(vec2 pos,vec2 off,float minSize,float maxSize)\n{\n    vec2 GridIndex = floor(pos);\n    vec2 LocalPos = fract(pos);\n    float randSize = Rand(GridIndex-off,1.);\n    randSize = mix(minSize,maxSize,randSize);\n    \n    vec2 SpherePos = LocalPosInCell( floor(GridIndex - off) );\n    float Sphere = (randSize - length( (LocalPos+off-SpherePos) ));    \n    return smoothstep(0.,1.,Sphere*0.5+0.5);\n}\n\nfloat Voronoi(vec2 uv,float Size,float cellMinSize,float cellMaxSize)\n{\n    uv *= Size * 1.;\n    float SphereCenter = CellAtGridIndex(uv, vec2(0.,0.), cellMinSize, cellMaxSize );\n    \n    float SphereUp = CellAtGridIndex(uv , vec2(0.,1.), cellMinSize, cellMaxSize);\n    float SphereDown = CellAtGridIndex(uv , vec2(0.,-1.), cellMinSize, cellMaxSize);\n    float SphereLeft = CellAtGridIndex(uv , vec2(-1.,0.), cellMinSize, cellMaxSize);\n    float SphereRight = CellAtGridIndex(uv , vec2(1.,0.), cellMinSize, cellMaxSize);\n    \n    float SphereUpRight = CellAtGridIndex(uv , vec2(1.,1.), cellMinSize, cellMaxSize);\n    float SphereDownRight = CellAtGridIndex(uv , vec2(1.,-1.), cellMinSize, cellMaxSize);\n    float SphereUpLeft = CellAtGridIndex(uv , vec2(-1.,1.), cellMinSize, cellMaxSize);\n    float SphereDownLeft = CellAtGridIndex(uv , vec2(-1.,-1.), cellMinSize, cellMaxSize);\n    \n    float mixCells = \n        \t   max(SphereCenter,SphereUp);\n    mixCells = max(mixCells,SphereDown);\n    mixCells = max(mixCells,SphereLeft);\n    mixCells = max(mixCells,SphereRight);\n    \n    mixCells = max(mixCells,SphereUpRight);\n    mixCells = max(mixCells,SphereDownRight);\n    mixCells = max(mixCells,SphereUpLeft);\n    mixCells = max(mixCells,SphereDownLeft);\n    \n    return mixCells;\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n    \n    float mixCells = Voronoi(uv,15.,sin(iTime)*0.5+0.5,1.);\n    \n  \tif(uv.x < .5)\n        mixCells = 1. - mixCells;\n    \n    fragColor = vec4(mixCells);\n}","name":"Image","description":"","type":"image"}]}