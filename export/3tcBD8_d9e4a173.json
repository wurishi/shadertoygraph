{"ver":"0.1","info":{"id":"3tcBD8","date":"1612573112","viewed":131,"name":"Circular cross hatch","username":"pacaro","description":"Cross hatching using concentric circles. Centered on the top left, top right and center bottom for the red, green and blue channels respectively. All centers follow the mouse when MLB is down","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["crosshatch","concentric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float kSep = 4.0;\nconst vec4 kGreen = vec4(0.0, 1.0, 0.0, 1.0);\nconst vec4 kDampGreen = vec4(1.0, 0.85, 1.0, 1.0);\nconst int kStepsInt = 8;\nconst float kStepsFloat = float(kStepsInt);\n\nfloat gamma(float v) {\n    return round(kStepsFloat * (1.0 + pow(v, 1.0)) / 2.0) / kStepsFloat;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 quarter = iResolution.xy / 4.0;\n    \n    float d1 = distance(fragCoord, vec2(iResolution.x, iResolution.y));\n    float d2 = distance(fragCoord, vec2(0, iResolution.y));\n    float d3 = distance(fragCoord, vec2(iResolution.x  / 2.0, 0));\n    \n    if (iMouse.z > 0.0) {\n        d1 = d2 = d3 = distance(fragCoord, iMouse.xy);\n    }\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 tex = texture(iChannel0, uv);\n    float kSep= 4.0 * (sin(iTime * 0.5) + 1.0) + 2.0;\n    float power = 1.0;\n    \n    vec4 diff = tex - kGreen;\n    float step = smoothstep(0.45, 0.55, dot(diff, diff));\n    tex = mix(texture(iChannel1, uv * 2.0),tex * kDampGreen, step);\n    fragColor = vec4(0, 0, 0, 1.0);\n    if ((pow(sin(d1 / kSep), power) + 1.0) / 2.0 < tex.x) {\n     fragColor.x = gamma(tex.x);\n    } \n    if ((pow(sin(d2 / (kSep)), power) + 1.0) / 2.0 <  tex.y) {\n      fragColor.y = gamma(tex.y);\n    }\n    if ((pow(sin(d3 / (kSep)), power) + 1.0) / 2.0 <  tex.z) {\n      fragColor.z = gamma(tex.z);\n    }\n}\n    ","name":"Image","description":"","type":"image"}]}