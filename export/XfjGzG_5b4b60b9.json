{"ver":"0.1","info":{"id":"XfjGzG","date":"1704375356","viewed":182,"name":"perf : f*f*v  vs  v*f*f","username":"FabriceNeyret2","description":"obvious when you think about it - but do you take this into account in your codes ?  ;-)  \nfloat*float* vec is a lot faster than vec * float * float !\n","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["glsl","perf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    O *= 0.;\n    float t = iTime;\n    for(float i; i < 1e5; i++,t++ )\n    //  O += O*t*t;  // 20 fps  37.7 ms  // costlier since vec*float is vec\n        O += t*t*O;  // 30 fps  28.2 ms\n  //  O.r += t*t*O.r; //        19   ms  // hey, compiler didn't see O.r=O.g=O.b !\n       \n    //  O += O*i*i;  // 20 fps  35.5 ms  // i*i ~= t*t : loop probably not unrolled\n    //  O += i*i*O;  // 25 fps  23.7 ms  \n    \n    //  O += O*i;    // 30 fps  19.6 ms  // for control ( no difference, as expected )\n    //  O += i*O;    // 30 fps  19.6 ms\n    \n    //  O *= O+i;    // 20 fps  33.6 ms\n}","name":"Image","description":"","type":"image"}]}