{"ver":"0.1","info":{"id":"sly3Dm","date":"1637810457","viewed":239,"name":"spacey","username":"Carandiru","description":"fork of : Just infinity circles\n\ngot lucky!","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["fractal","circles","inversion"],"hasliked":0,"parentid":"7tKGR1","parentname":"Infinity Circles"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define R iResolution\nfloat dot2(vec2 x){\n    return dot(x,x);\n}\nvoid mainImage( out vec4 O, in vec2 C ){\n\n    vec4 fetch = textureLod(iChannel0, C.xy/R.xy, 0.0f);\n    fetch.r = dot(fetch.rgb, vec3(0.25f));\n    O = vec4(fetch.rrr,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n#define R iResolution\nfloat dot2(vec2 x){\n    return dot(x,x);\n}\n\n#define fma(a,b,c) a * b + c\nvec2 rotate( in vec2 p, in float angle )\n{\n\t#define c_ x\n\t#define s_ y\n\tvec2 cossin = vec2(cos(angle), sin(angle));\n\treturn( vec2(fma(p.x, cossin.c_, p.y * cossin.s_), fma(p.x, -cossin.s_, p.y * cossin.c_)) );\n\n\t#undef c_\n\t#undef s_\n}\n\nvoid mainImage( out vec4 O, in vec2 C ){\n    float pp=3./R.y;\n    vec2 uv=(C*2.-R.xy)/R.y;\n    \n    vec2 bn = textureLod(iChannel0, C.xy/1024.0f, 0.0f).rg * 2.0f - 1.0f;\n       \n    \n    float w=dot2(uv);\n    \n    uv=uv.xy+(bn);\n    uv/=dot(uv,uv);\n    \n    uv += 0.25f * iTime;\n    \n    vec3 col=vec3(0);\n    \n    col+=smoothstep(1.,0.,abs(uv.y-1.)*w/pp);\n\n    uv = C.xy/R.xy;\n    vec3 old = textureLod(iChannel1, uv, 0.0f).rgb * 0.24999f;    \n    old += textureLod(iChannel1, uv, 1.0f).rgb * 0.2499f;\n    old += textureLod(iChannel1, uv, 2.0f).rgb * 0.249f;\n    old += textureLod(iChannel1, uv, 3.0f).rgb * 0.2489f;\n    col = old.rgb + col.rgb;\n    \n    uv = 2.0f * uv - 1.0f;\n    \n    O = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}