{"ver":"0.1","info":{"id":"4ldGz8","date":"1467924874","viewed":296,"name":"Julia Set Infinite zoom","username":"rory618","description":"Press the mouse down in the center of the dark region and move it around to try to keep it near the border of the generation. Pause and move the mouse slowly if it is too fast.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["2d","fractal","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 c = texture(iChannel0, uv);\n    fragColor = vec4(sin(c.z*.1),sin(c.z*.2),sin(c.z*.1)*4.,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 julia (vec2 z, vec2 s){\n    return vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+s;\n}\nvec2 ballFold(float r, vec2 v) {\n    float m = length(v);\n    if (m < r) {\n        m = m/(r*r);\n    } else if(m<1.) {\n        m = 1./m;\n    }\n    return m*normalize(v);\n}\nvec2 boxFold(vec2 v) {\n    \n    if (v.x>1.) v.x=2.-v.x;\n    else if (v.x<-1.) v.x=-2.-v.x;\n        \n    if (v.y>1.) v.y=2.-v.y;\n    else if (v.y<-1.) v.y=-2.-v.y;\n        \n    return v;\n}\n\nvec2 mandelbox (vec2 v, vec2 c){\n    float s=2., r=-0.3, f=1.;\n    return s*ballFold(r, f*boxFold(v))+c;\n}\n\nvec4 sampl(vec2 uv ) {\n    float zoomSpeed = 0.96;\n    vec4 prev = texture(iChannel0, zoomSpeed*(uv-iMouse.xy/iResolution.xy)+iMouse.xy/iResolution.xy);\n    if(iResolution.y < 400.){\n        prev = texture(iChannel0, zoomSpeed*(uv-.5)+.5);\n    }\n    \n    vec2 s = vec2(-.8448,0.2033);\n    //vec2 s = vec2(0.285,0.01);\n   // vec2 s = vec2(0.28,0.01);\n    //vec2 s = vec2(-0.055,-0.81);\n    //vec2 s = iMouse.xy/iResolution.xy*40.0-vec2(20.0);\n    \n    \n    vec2 c = (6.0*(uv-vec2(.5,.5))*iResolution.xy/iResolution.xx);\n    \n    \n    vec2 z =prev.xy;\n    \n    float res = prev.w;\n    \n    float done = prev.z;\n    \n    if(length(z)<40. && done < .99 ){\n    \t//z = mandelbox(z, s);\n    \tz = julia(z, s);\n    } else {\n        if (done < .99) {\n            res = iTime;\n        }\n        done += 1.0;\n    }\n    \n    \n    if(iMouse.z > 0.0 ||  iResolution.x < 500. && iFrame > 1){\n        return vec4(z,done,res);\n    } else {\n    \treturn vec4(c*1.,0,0.0);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int m = 1;\n    fragColor = vec4(0.0);\n    \n    for(int h = 0; h < m; h++){\n    \tfor(int v = 0; v < m; v++){\n           vec2 o = vec2(h, v)/float(m);\n    \t\tvec2 uv = (o+fragCoord.xy) / iResolution.xy;\n    \t\tfragColor += sampl(uv)/(float(m)*float(m));\n        }\n    }\n\n}\n","name":"Buf A","description":"","type":"buffer"}]}