{"ver":"0.1","info":{"id":"ll3fRX","date":"1540409343","viewed":205,"name":"BrightSky","username":"Vizalkar","description":"Free as a numerical bird","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n                 43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n        (c - a)* u.y * (1.0 - u.x) +\n        (d - b) * u.x * u.y;\n}\n\n#define NUM_OCTAVES 5\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 st = gl_FragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n    float rotime = iTime*0.05;\n    mat2 rot = mat2(cos(rotime), -sin(rotime), sin(rotime), cos(rotime));\n    st *= 6.;\n    st = rot*st+0.5;\n    st.y += iTime;\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 0.00*iTime);\n    q.y = fbm( st + vec2(1.0));\n\n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(1.7,9.2)+ 0.05*iTime );\n    r.y = fbm( st + 1.0*q + vec2(8.3,2.8)+ 0.026*iTime);\n\n    float f = fbm(st+r);\n\n    color = mix(vec3(f + 0.5 ,1.,.9 -f*f*0.3),\n                vec3(0.1,0.4,0.8),\n                clamp(length(smoothstep(r.x, r.x/q.x, q.x*2.3)),0.0,1.0));\n\n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}