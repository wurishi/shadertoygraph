{"ver":"0.1","info":{"id":"4ttXR7","date":"1478751204","viewed":96,"name":"Diffuse lighting sample","username":"emaldonado_gamedev","description":"Just for fun","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distanceSquaredBetween2Points2D(in vec2 a, in vec2 b)\n{\n    float result = 0.0;\n    \n    float deltaX = a.x - b.x;\n    float deltaY = a.y - b.y;\n    \n    result = (deltaX * deltaX) + (deltaY * deltaY);\n    \n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    vec2 mousePos = iMouse.xy;\n    float lightHeight = -28.2;\n    \n    vec3 Kd = texture( iChannel1, uv ).xyz;\n    vec3 Ks = texture( iChannel3, uv).xyz;\n    float ns = 10.0;\n    vec3 N  = normalize( vec3(0, 0, -1.0) );\n    vec3 V = normalize(vec3(iResolution.x/2.0, iResolution.y/2.0, lightHeight) - vec3(fragCoord.xy, 0.0) );\n    vec3 R = normalize( (2.0 * dot(V, N) * N) - V);\n    vec3 L = normalize(vec3(mousePos, lightHeight) - vec3(fragCoord.xy, 0.0));\n    \n    //prepare to calculate spotlight effect\n    float spotLightEffect = 1.0;\n    float inner = 0.0;\n    float outer = 2.0;\n    float fallOff = 0.39;\n    vec3 D = vec3(0.0, 0.0, -1.0);\n    \n    float dDotL = dot(D, L);\n    \n    if(dDotL < cos(outer) )\n        spotLightEffect = 0.0;\n    else if(dDotL > cos(inner) )\n        spotLightEffect = 1.0;\n    else\n    {\n        spotLightEffect = cos(dDotL) - cos(outer);\n        spotLightEffect = cos(inner) - cos(outer);\n        \n        spotLightEffect = pow(spotLightEffect, fallOff);\n    }\n    \n    fragColor =\n        (\n           spotLightEffect * \n            (\n                vec4(vec3(Kd * max(dot(N,L), 0.0)), 1.0) + \n                vec4(vec3(Ks * pow(max(dot(R,V), 0.0), ns)), 1.0)\n            )\n        );\n    \n    \n    return;\n                     \n                     \n    float d = distanceSquaredBetween2Points2D(mousePos, fragCoord.xy);\n    \n    float acceptedRange = 78.0;\n    \n    if(d < acceptedRange * acceptedRange)\n    {\n        fragColor = texture( iChannel1, uv );\n    }\n    \n    else\n    {\n        fragColor = texture( iChannel0, uv );\n    }\n}","name":"Image","description":"","type":"image"}]}