{"ver":"0.1","info":{"id":"4stBWj","date":"1526761771","viewed":197,"name":"Dellen Tartan","username":"xinux","description":"https://www.tartanregister.gov.uk/tartanDetails?ref=11271","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tartan","kilt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// thanks to mercury (hg_sdf)\nvoid pR(inout vec2 p, float a) {\n\tp = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\nvec2 repeat(inout vec2 uv, float times)\n{\n    uv *= times;\n    vec2 cell = floor(uv);\n    uv = fract(uv);\n    return cell;\n}\n\nfloat hline(vec2 uv, float startY, float endY)\n{\n    float line = step(uv.y, startY) * step(-uv.y, -endY);\n    line *= smoothstep(0.43, 0.5, fract((uv.x + uv.y) * 100.)); // diagonal line skip\n    line *= smoothstep(0.45, 0.55, fract(uv.y * 540.)); // horizontal line skip\n    return line;\n}\n\nvec3 dellenline(vec2 uv)\n{\n    uv *= 0.7;\n    vec3 red = vec3(0.680,0.129,0.123);\n    vec3 green = vec3(0.000,0.170,0.000);\n    vec3 white = vec3(0.910,0.910,0.910);\n    \n    vec3 c = vec3(0.);\n    c += hline(uv, 0.573, 0.542) * red;\n    c += hline(uv, 0.542, 0.527) * green;\n    c += hline(uv, 0.527, 0.46) * red;\n    c += hline(uv, 0.45, 0.44) * white;\n    c += hline(uv, 0.43, 0.366) * red;\n    c += hline(uv, 0.366, 0.352) * green;\n    c += hline(uv, 0.352, 0.32) * red;\n    \n    return c;\n}\n\nfloat rand1d(float n)\n{\n\treturn fract(sin(n) * 43758.5453);\n}\n\nfloat noise(vec2 uv, float intensity)\n{\n    return min(1., (1. / (rand1d(uv.x * 20. + 1.) + rand1d(uv.y * 40.))) * intensity);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy - (iResolution.xy * 0.5)) / iResolution.yy;\n    float ltrbox = step(0.35, abs(uv.y));\n    float vignette = \n        smoothstep(0.5, 1.2, abs(uv.x)) + \n        smoothstep(0.2, 0.6, abs(uv.y)) * 1.;\n    float ambient = sin(iTime * 0.5) * 0.013;\n    \n    pR(uv.xy, 0.2 + iTime * 0.02);\n\n    uv *= sin(iTime * 0.3 + 1.) * 0.5 + 1.4;\n    float ray = 1. - smoothstep(0., 0.9, abs(uv.x - uv.y * 0.5 + tan(iTime * 0.1)));\n    uv.x += iTime * 0.05;\n    uv.y -= iTime * 0.02;\n    \n    uv.y += sin(iTime * 0.4 + uv.x * 1.) * 0.07;\n    uv.x += sin(iTime * 0.3 + uv.x + uv.y) * 0.02;\n    \n    repeat(uv, 1.);\n    \n    vec3 black = vec3(0.025, 0.005, 0.);    \n    vec3 c = black;\n    \n    c += dellenline(uv);\n    uv = vec2(-uv.y, 1. -uv.x); // flip\n    c += dellenline(uv);\n\t\n    float pattern = 0.;\n    pattern += fract((uv.x + uv.y) * 150.) * 0.17;\n    pattern += fract((uv.x) * 120.) * 0.12;\n    \n    c += noise(uv, 0.5) * 0.02;\n    c = mix(c, black, 0.15);\n    c = mix(c, vec3(0.5), pattern - 0.1);\n    \n    c += ambient;\n    c += ray * 0.03;\n    c *= 1. - ltrbox;\n    c *= 1. - vignette;\n    \n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}