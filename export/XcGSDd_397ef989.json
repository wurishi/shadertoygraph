{"ver":"0.1","info":{"id":"XcGSDd","date":"1715896209","viewed":49,"name":"Julia Set Plot","username":"ademdj12","description":"The shader calculates and displays a Julia set\n    based on a complex constant a and the pixel \n    coordinates within the viewport.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["math","complex","multipass","sets"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    The shader calculates and displays a Julia set\n    based on a complex constant a and the pixel \n    coordinates within the viewport.\n*/\n\nvec3 palette(float x) {\n    float v = pow(sin(3.1415926*x), 2.);\n    return v * vec3(1., .5*v, .25*v);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float col = texelFetch(iChannel0, ivec2(fragCoord), 0).x;\n    \n    //fragColor = vec4(pow(palette(col), vec3(.454545454545454545455)),1.0);\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  fragCoord / iResolution.xy;\n    \n    // zoom i cant seem to get it right\n    float x = 0.05*(uv.x * 3.4  - 1.4)  ;\n    float y = 0.05*(uv.y * 3.4  - 1.4) ;\n    \n    // initalize the values\n    fragColor = vec4(\n        x / 10.0,\n        y / 10.0,\n        0,\n        1.0\n    );\n    fragColor = vec4(x,y,0.0,0.0);\n    \n    \n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define maxIter 70\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int iterTillDiv = 0;\n    vec4 c = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    vec2 z = c.xy * 10.0;\n    vec2 a = vec2(-0.744, 0.148);\n\tfor(int i = 0; i < maxIter; i++){\n\t\t// z = z**2 + a\n        // z * a(zx + i*zy) (ax + i*ay) = (zx*ax - zy*ay) + i(zx*ay + zy*ax)\n        // calculating z*z;\n        z = vec2(   \n                z.x * z.x - z.y * z.y, \n                z.x * z.y + z.y * z.x\n        ); \n        //  adding a\n        z = z + a; \n        \n        // conjugate of z\n        vec2 z_conj = vec2(z.x, -z.y);\n        \n        \n        if(dot(z,z_conj) > 4.0){\n            iterTillDiv = i;\n            break;\n        }\n    }\n    \n\n    fragColor = vec4(float(iterTillDiv) / float(maxIter));\n    \n    \n}","name":"Buffer B","description":"","type":"buffer"}]}