{"ver":"0.1","info":{"id":"3tjGRt","date":"1560721058","viewed":121,"name":"Surprised emoji","username":"aiody","description":"Surprised emoji\n\nI refer this tutorial : https://www.shadertoy.com/view/lsXcWn\nIf you want to give me some feedback or other ideas, welcome.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["emoji","surprised"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0., 1.);\n\nfloat remap01(float a, float b, float t)\n{\n    return sat((t - a) / (b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t)\n{\n    return remap01(a, b, t) * (d - c) + c;\n}\n\nvec4 Mouth(vec2 uv)\n{\n    float d = length(uv + vec2(0., .2));\n    vec4 col = vec4(.26, .15, .06, 1.); // base color\n    col.a = S(.12, .11, d);\n    \n    // highlight\n    float highlight = S(.11, .085, d);\n    highlight *= remap(.2, .05, 1., 0., -uv.y);\n    col.rgb = mix(col.rgb, vec3(.57, .33, .13), highlight);\n    \n    // outline\n    col.rgb = mix(col.rgb, vec3(.98, .89, .35), S(.105, .11, d));\n    \n    return col;\n}\n\nvec4 Eye(vec2 uv)\n{\n    uv.x *= 1.3;\n    float d = length(uv + vec2(-.17, -.09));\n    \n    vec4 col = vec4(.57, .33, .13, 1.); // base color\n    col.a = S(.08, .07, d);\n    \n    // edge shade\n    float edgeShade = remap01(.01, .07, d);\n    edgeShade *= edgeShade;\n    col.rgb *= 1. - edgeShade * .4;\n    \n    // outline\n    col.rgb = mix(col.rgb, vec3(.98, .89, .35), S(.063, .07, d));\n    \n    return col;\n}\n\nvec4 Head(vec2 uv)\n{\n    float d = length(uv);\n    \n    vec4 col = vec4(1., .78, .16, 1.); // base color\n    col.a = S(.5, .49, d);\n    \n    // edge shade\n    col.rgb = mix(col.rgb, vec3(.92, .51, .22), S(.4, .5, d));\n    \n    // highlight\n    d = length(uv - vec2(0., .03));\n    float highlight = S(.41, .395, d);\n    highlight *= remap(.4, .05, .75, 0., uv.y);\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    return col;\n}\n\nvec4 SmileEmoji(vec2 uv)\n{\n    vec4 col = vec4(0.);\n    \n    uv.x = abs(uv.x);\n    \n    vec4 head = Head(uv);\n    vec4 eye = Eye(uv);\n    vec4 mouth = Mouth(uv);\n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // Normalized pixel coordinates (from 0 to 1)\n\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    fragColor = SmileEmoji(uv); // Output to screen\n}","name":"Image","description":"","type":"image"}]}