{"ver":"0.1","info":{"id":"tdd3Rl","date":"1571130728","viewed":221,"name":"Dancing circles","username":"nurof3n","description":"Sum circles fuckening","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["circles","fx","boom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float nrcircles = 7.;\nconst float pi = 3.141592;\nconst vec3 color = vec3(236.0 / 255.0, 71.0 / 255.0, 140.0 / 255.0);\nconst float innerradius = 0.5;\nconst float outerradius = 0.02;\n\nvec2 shake(vec2 uv) {\n\treturn vec2(uv.x + .1*sin(1. * pow(3., pi - mod(iTime, pi))), uv.y - .1*sin(1. * pow(2.5, pi - mod(iTime, pi))));\n}\n\nfloat edge(vec2 pixel, vec2 offset, float outerradius, float innerradius) {\n    return clamp(outerradius / abs(length(pixel + offset) - innerradius), 0.0, 3.0);\n}\n\nfloat fade(float radius) {\n    return 2. - radius;\n}\n\nfloat sonicboom(vec2 uv, float radius) {\n    return edge(uv, vec2(.0), outerradius + (1. - .5*radius), radius) * fade(radius);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pixel = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\t//centered, unstretched pixel coordinates: (0; 0) is the center of the viewport\n    pixel = shake(pixel);\n    float s;\n    float c;\n    float f;\n    for(float i = 0.0; i < nrcircles; i++){\n        s = cos(iTime + i * 2.0 * pi / nrcircles) * abs(sin(iTime)) * 0.4;\n        c = sin(iTime + i * 2.0 * pi / nrcircles) * abs(sin(iTime)) * 0.4;\n        f += edge(pixel, vec2(c, s), outerradius, innerradius);\n    }\n\n    //if(f < 1.0)\t//Clamp the color so that it stays the same value, not brightened up\n    vec3 destColor = color * f;\n    float radius = 1.*mod(iTime + .01, pi) + innerradius;\n    destColor += color * sonicboom(pixel, radius);\n    \n    // Output to screen\n    fragColor = vec4(destColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}