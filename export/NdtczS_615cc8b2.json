{"ver":"0.1","info":{"id":"NdtczS","date":"1653662114","viewed":66,"name":"mnikn-round-hpbar","username":"mnikn","description":"test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rect(vec2 uv, vec2 size) {\n    float blur = 0.0;\n    // 让 size 成正比\n    size = 0.5 - size * 0.5;\n    // 先画一边\n    vec2 r = vec2(smoothstep(size.x, size.x+blur, uv.x), smoothstep(size.y, size.y+blur, uv.y));\n    // 再画相反的边，相乘得出相交位置就是对应的矩形\n    r *= vec2(smoothstep(size.x, size.x+blur, 1.0 - uv.x), smoothstep(size.y, size.y+blur, 1.0 - uv.y));\n    // x 和 y 相乘得出矩形的像素点值\n    return r.x * r.y;\n}\n\nfloat circle(vec2 uv, float r) {\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // 用 uv 做长度,点距离零点的距离会呈圆形递增\n    float d = length(uv);\n    d = step(d,r);\n    return d;\n}\n\nfloat round_rect(vec2 uv, vec2 size) {    \n    float radius = size.y/2.0;\n    float c1 = circle(vec2(uv.x+0.5-radius*0.5-radius/16.0+(size.x-1.0)*radius*2.0, uv.y), radius);\n    float c2 = circle(vec2(uv.x-0.5+radius*0.5+radius/16.0+(1.0-size.x)*radius*2.0, uv.y), radius);\n    \n    float r = rect(vec2(uv.x, uv.y), vec2(size.x-radius, size.y));\n\n\n    return min(c1+r+c2, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    vec3 base_color = vec3(1.0, 0.2, 0.1);\n    \n    vec2 size = vec2(1.0, 0.4);\n    \n    \n    float t = round_rect(uv, size);\n    vec3 col = vec3(t);\n    col *= base_color;\n    \n    // highlight\n    float hy = uv.y;\n    hy += sin(iTime*6.+uv.x*12.0) * sin(iTime*3.0) * 0.08;\n    float highlight = smoothstep(0.6, 0.6, hy);\n    highlight *= 3.0;\n    if (hy >= 0.63) {\n        col *= 2.0;\n    }\n    \n    // outline\n    float osize = 0.04;\n    float outline = round_rect(uv, size + osize)-t;\n    vec3 outline_color = base_color*0.8;\n    col = mix(col, outline_color, outline);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}