{"ver":"0.1","info":{"id":"tlB3D1","date":"1559327894","viewed":244,"name":"Mandelbrot <=> Julia","username":"illinad","description":"Representation of changing state of one fractal to another.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ISJ 1\n\n# define SQR(x) ((x) * (x))\nconst vec4 bitEnc = vec4(1. ,255. ,65025. ,16581375.);\nconst vec4 bitDec = 1. / bitEnc;\n\nvec4 myt(float ij)\n{\n float a;\n float r;\n float g;\n float b;\n\n a = ij - mod(ij, 65536. * 256.);\n r = (ij - a) - mod(ij, 65536.);\n g = (ij - a - r) - mod(ij, 256.);\n b = (ij - a - r - g);\n return (vec4(r / 16581375., g / 65535., b / 255., 1.));\n}\n\nvec2 cidef(vec2 fragCoord, vec2 cf, float zoom)\n{\n if (ISJ == 1)\n {\n  return cos(iTime * 0.5) * (vec2(0.92, 0.0))\n  + sin(iTime * 0.5) * (fragCoord.xy / zoom - cf);\n  //return (gl_FragCoord.xy / zoom - cf);\n }\n else\n {\n  return (fragCoord.xy / zoom - cf);\n }\n}\n\nvec2 zidef(vec2 fragCoord, vec2 c, vec2 cf, float zoom)\n{\n if (ISJ == 1)\n {\n  //==return sin(iTime) * (vec2(cos(iTime), sin(iTime)))\n  //+ cos(iTime) * (gl_FragCoord.xy / zoom - cf);\n  //return (vec2(sin(iTime), cos(iTime)));\n  return (fragCoord.xy / zoom - cf);\n  }\n  else\n  {\n  return (fragCoord.xy / zoom - cf);\n  }\n}\n\n#define MSAA 4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n float zoom = iResolution.y * 0.4;\n int maxk = 50;\n float o1 = -0.25;\n float o2 = 0.25;\n vec2 msaa[4];\n    \n msaa[0] = vec2( o1,  o2);\n msaa[1] = vec2( o2, -o1);\n msaa[2] = vec2(-o1, -o2);\n msaa[3] = vec2(-o2,  o1);\n vec3 color = vec3(0.);\n\n int k = 0;\n vec2 ct; \n vec2 c;\n vec2 z;\n vec2 zsq;\n for (int i = 0; i < MSAA; ++i)\n {\n  ct = iResolution.xy / 2. / zoom;\n  c = cidef(fragCoord - msaa[i], ct, zoom);\n  z =(zidef(fragCoord - msaa[i], c, ct, zoom));\n  zsq = z * z;\n  k = 0;\n  while (k < maxk)\n  {\n   z = vec2(zsq.x, (SQR((z.x) + (z.y)) - zsq.x)) - zsq.y + c;\n   zsq = z * z;\n   if (zsq.x + zsq.y > 4.)\n    break;\n   k++;\n  }\n  if (k >= maxk)\n   color += vec3(0.);\n  else\n   color += vec3(myt(float(k * 50000000)).rgb);\n }\n fragColor = vec4(color / float(MSAA), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}