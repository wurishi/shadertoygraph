{"ver":"0.1","info":{"id":"3scyRf","date":"1601357920","viewed":313,"name":" y = x & -x ","username":"FabriceNeyret2","description":"analysing i&-i in ttg \"short scale pattern\" [url]https://shadertoy.com/view/3d3czX[/url]\nbottom:  blue = i, yellow = -i\nmiddle : i & -i  ( red = i )\ntop: i ^ -i  \n\nso (i&-i) is the 1st non-0 bit from right.\nDo you know other cool bitwise constructions ?","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["bits"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// analysing i&-i in \"short scale pattern\" by ttg. https://shadertoy.com/view/3d3czX\n\n\nvoid mainImage(out vec4 O, vec2 U) {\nint x = int(U.x), y = int(U.y)/4,\n    h = int(iResolution.y)/12;\n  O.gr += float(  x & 1<<y  );\n  O.gb += float( -x & 1<<y  );\n  if    (y > 2*h) O = vec4(  (x ^ -x) & 1<<y%h  );\n  else if (y > h) O = vec4(  (x & -x) & 1<<y%h  );\n  O.r = float(  x & 1<<y%h  ); }","name":"Image","description":"","type":"image"}]}