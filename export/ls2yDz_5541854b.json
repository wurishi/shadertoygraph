{"ver":"0.1","info":{"id":"ls2yDz","date":"1537868856","viewed":128,"name":"aud001 learning ropes","username":"ollj","description":"learning the ropes of audio f(x)","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 mainSound2( float time ){\n float wavelength=acos(-1.)*2.*440.0;//without unit of measure.\n time=mod(time,wavelength*.5);\n float base=sin(wavelength*time);\n base*=.2;\n return vec2(base);\n}\n\n//damnit i need a graph plotter for this shit\nfloat cbehull(float x){\n x-=1.;\n x*=x;\n return -x;\n}\n\n//goal is to never cut off a wave.\n//so i calculate the width of a wavelength as [section]\n//and mod() to that\n\n#define zoomscroll\n\nvec2 mainSound( in int samp, float x ){float dim=1.;\n float wavelength=acos(-1.)*2.*440.;//without unit of measure.\n float section=1e-3*asin(1.)*1.446*2.;\n x=mod(x,section);\n dim=cbehull((x-section*1.5)/section)*.2;\n x*=wavelength;\n \n //dim=exp(-.2*x);\n return vec2(sin(x),sin(x+acos(-1.)))*dim;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 i ){\n    float s=sin(iTime);\n    \n    #ifdef zoomscroll\n    i-=iMouse.xy*vec2(10,1.);\n    i/=iResolution.xy;\n    #else    \n    i/=iResolution.xy;\n    #endif\n    i*=5.;\n    i.x*=iResolution.y/iResolution.x;\n    #ifdef zoomscroll\n    //i.y+=11.;\n    #else\n    i.y+=.1;\n    #endif\n    i*=vec2(2.e-2,4.)*.1;\n    \n    vec2 d=mainSound( in int samp,i.x)+vec2(i.y);\n    \n    if(abs(d.x)>1.)d.x=0.;if(abs(d.y)>1.)d.y=0.;\n\tfragColor = vec4(d.x,0.,d.y,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"//fadeoff <-> *exp(-2.0*time);\n\n\nfloat cbehull(float x){\n x+=1.;\n x*=x;\n return -x;\n}\n\nvec2 mainSound2( float time ){\n float wavelength=acos(-1.)*2.*440.0;//without unit of measure.\n time=mod(time,wavelength*.5);\n float base=sin(wavelength*time);\n base*=.01;\n //base=0.;//silence!\n return vec2(base);\n}\n\nvec2 mainSound( in int samp, float x ){\n float wavelength=acos(-1.)*2.*440.;//without unit of measure.\n float section=1e-3*asin(1.)*1.446*2.;\n x=mod(x,section);\n //float dim=cbehull(x);\n x*=wavelength;\n float dim=1.;\n dim=exp(-.2*x);\n return vec2(sin(x),sin(x+acos(-1.)))*dim;\n}\n","name":"Sound","description":"","type":"sound"}]}