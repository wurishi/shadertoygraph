{"ver":"0.1","info":{"id":"sssXRj","date":"1618907643","viewed":141,"name":"PsyFeedback","username":"tarnith","description":"Playing around with feedback mixing textures with coordinate transforms\n\nHappy Bicycle Day","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["psychedelicfeedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy) /iResolution.y;\n\tvec3 col = vec3(0.);\n\tvec2 gv = fract(uv*20.)-.5;\n    vec2 av = fract(uv*20.)-1.;\n\tvec3 loopOut = vec3(0.,0.,0.);\n\tfloat m,n,o = 0.;\n\tfloat delayAmt = iTime*.5;\n\tfloat otherTime = (iTime+5.);\n    float t = iTime+50.;\n\tfloat tDel = (iTime-(t*delayAmt))*.1;\n\tfloat tDel2 = (iTime-(delayAmt*2.))*.1;\n\tfor (float y=-1.; y<=1.; y++){\n        for (float x=-1.; x<=1.; x++){\n            vec2 offset = vec2(x, y);\n            //float d = length(gv-offset);\n\t\t\tfloat d = length(sin(gv-offset)*5.);\n            float altD = length(av-offset);\n\t\t\tfloat r = mix(.32, .5, sin((-t*.5+.5)+length(sin(gv))*20.));\n            m += smoothstep(r, r*.9, d);\n\t\t\tfloat rDel = mix(.2, .5, sin((tDel*.5+.5)+length(sin(uv*10.))*20.));\n\t\t\tn += mod(smoothstep(rDel, rDel*.9,altD),100.);\n\t\t\tfloat rDel2 = mix(.3, .5, sin((tDel2*.5+.5)+length(uv)*20.));\n\t\t\to += mod(smoothstep(rDel2, rDel2*.9,d), 2.);\n\t\t\tloopOut += vec3(abs(n*sin(m*iTime))*abs(sin(iTime)),abs(n*sin(o*iTime))*abs(sin(otherTime)*.5),m*sin(n*o*iTime)*2.);\n        }\t\n\t}\n\t\n\tcol += m;\n\tvec4 color = vec4(loopOut, 1.0);\n    vec2 altuv = fragCoord.xy / iChannelResolution[0].xy;\n    vec4 feedback = texture(iChannel0, altuv);\n    fragColor = color+feedback*.1;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy) /iResolution.y;\n\tvec3 col = vec3(0.);\n\t//uv *= scale(vec2(.7,.7));\n\tvec2 gv = fract(uv*20.)-.5;\n    vec2 av = fract(uv*20.)-1.;\n\tvec3 loopOut = vec3(0.,0.,0.);\n\tfloat m,n,o = 0.;\n\tfloat delayAmt = iTime*.5;\n\tfloat otherTime = (iTime+5.);\n    float t = iTime+50.;\n\tfloat tDel = (iTime-(t*delayAmt))*.1;\n\tfloat tDel2 = (iTime-(delayAmt*2.))*.1;\n\tfor (float y=-1.; y<=1.; y++){\n        for (float x=-1.; x<=1.; x++){\n            vec2 offset = vec2(x, y);\n\t\t\tfloat d = length(gv-offset);\n            float altD = length(av-offset);\n\t\t\tfloat r = mix(.32, .5, sin((-t*.5+.5)+length(sin(gv))*20.));\n            m += smoothstep(r, r*.9, d);\n\t\t\tfloat rDel = mix(.2, .5, sin((tDel*.5+.5)+length(sin(uv*10.))*20.));\n\t\t\tn += mod(smoothstep(rDel, rDel*.9,altD),100.);\n\t\t\tfloat rDel2 = mix(.3, .5, sin((tDel2*.5+.5)+length(uv)*20.));\n\t\t\to += mod(smoothstep(rDel2, rDel2*.9,d), 2.);\n\t\t\tloopOut += vec3(abs(n*sin(m*iTime))*abs(sin(iTime)),abs(n*sin(o*iTime))*abs(sin(otherTime)*.5),m*sin(n*o*iTime)*2.);\n        }\t\n\t}\n\n\tcol += m;\n\tvec4 color = vec4(loopOut, 1.0);\n    vec2 altuv = fragCoord.xy / iChannelResolution[0].xy;\n    altuv += vec2(-.5);\n    altuv *= 1.2;\n    altuv += vec2(+.5);\n    vec4 feedback = texture(iChannel0, altuv);\n    fragColor = color+feedback*.5;\n}","name":"Buffer A","description":"","type":"buffer"}]}