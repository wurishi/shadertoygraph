{"ver":"0.1","info":{"id":"4lXfRs","date":"1512839813","viewed":616,"name":"Rainbow Ripple","username":"nmacholl","description":"This is my first shader. Just the default \"new\" shader with a rotating center point that anchors some ripples. The ripples are generated using the tan() function with varying frequencies.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["beginner","colorful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tJust a colorful shader.\n*/\n\n#define M_PI 3.14159\n\nint numRipples = 12;\n\nvec2 center ()\n{\n    // Center point that orbits the screen center.\n\tvec2 c = vec2(0.5, 0.5);\n    c.x += 0.1 * cos(iTime);\n    c.y += 0.1 * sin(iTime);\n    return c;\n}\n\nbool inRange(float n, float lower, float upper)\n{\n\treturn n > lower && n < upper;    \n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Color w/ White Center\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n\tfragColor = vec4(uv, 0.5 + 0.2*sin(iTime), 1.0);\n    fragColor = fragColor / distance(uv, center());\n    float d = distance(uv, center());\n    \n    // Ripples\n    for (int u = 0; u < numRipples; u++)\n    {    \n        float phi = M_PI/float(u) * iTime;\n        float width = float(u) / float(numRipples);\n        vec2 ripple = vec2(0.1 * float(u) + 0.1*tan(phi), 0.1*float(u) + width + 0.1*tan(phi));\n        if (inRange(d, ripple.x, ripple.y))\n        {\n            fragColor = 0.9*fragColor;   \n        }\n    }\n}","name":"Image","description":"","type":"image"}]}