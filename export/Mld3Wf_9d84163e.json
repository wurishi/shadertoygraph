{"ver":"0.1","info":{"id":"Mld3Wf","date":"1472230248","viewed":633,"name":"koalastothemax, part 1, quadtree","username":"realazthat","description":"http://www.koalastothemax.com/ Gonna try to remake this in shadertoy\n\nThis is the quadtree part. Click around, watch the quadtree deepen around the mouse clicks. Lighter blue means a larger depth.\n\n\n","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["quadtree","koalastothemax"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n    //fragColor = vec4(iMouse.xy/iResolution.xy, 0, 1);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n#define MIN_CELL_RADIUS 2.0\n\nbool contains(ivec2 lower, ivec2 upper, ivec2 p){\n    return p.x >= lower.x && p.x < upper.x && p.y >= lower.y && p.y < upper.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 xy = ivec2(fragCoord.xy);\n    ivec2 mxy = ivec2(iMouse.zw);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    int height = int(floor(log2(min(iResolution.x,iResolution.y))));\n    \n    int side = int(pow(2.0,float(height)));\n    \n    ivec2 draw_area = ivec2(side,side);\n    \n    if (int(fragCoord.x) > side || int(fragCoord.y) > side)\n    {\n        fragColor = vec4(0,0,0,1);\n     \treturn;\n    }\n    \n    if (iFrame == 0)\n    {\n        fragColor = vec4(0,0,0,1);\n     \treturn;\n    }\n    \n    bool mouse_down = iMouse.w >= 0.0;\n    \n    vec4 color = texture(iChannel0,uv);\n    vec4 new_color = vec4(0,0,0,1);\n    \n    int depth = int(color.r*255.0);\n    \n    int cell_side = side / int(ceil(pow(2.0,float(depth))));\n    float cell_radius = float(cell_side) / 2.0;\n    ivec2 cell_lower = ivec2(floor(vec2(xy) / vec2(cell_side))) * cell_side;\n    ivec2 cell_upper = cell_lower + ivec2(cell_side);\n    \n    \n    \n    bool mouse_in_cell = contains(cell_lower, cell_upper, mxy);\n    if (mouse_down && mouse_in_cell && cell_radius > MIN_CELL_RADIUS) {\n        depth += 1;\n    }\n    \n    \n    new_color.r = float(depth)/255.0;\n    new_color.g = mouse_in_cell ? 1.0 : 0.0;\n    new_color.b = float(depth)/10.0;\n\tfragColor = new_color;\n}\n\n","name":"Buf A","description":"","type":"buffer"}]}