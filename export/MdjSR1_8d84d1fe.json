{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"cubemap","id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"cubemap","id":"4sfGzn","filepath":"/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\n//turn on/off the pixelization\n#define PIX\n\nfloat hash( float n ) { return fract(sin(n)*43758.5453123); }\nvec2 hash2( float n )\n{\n    return fract(sin(vec2(n,n+1.0))*vec2(43758.5453123,22578.1459123));\n}\n\nvec3 hash3( float n )\n{\n    return fract(sin(vec3(n,n+1.0,n+2.0))*vec3(43758.5453123,22578.1459123,19642.3490423));\n}\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    float n = p.x + p.y*157.0 + 113.0*p.z;\n    return mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                   mix( hash(n+157.0), hash(n+158.0),f.x),f.y),\n               mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                   mix( hash(n+270.0), hash(n+271.0),f.x),f.y),f.z);\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) +\n         length(max(d,0.0));\n}\nfloat sdSphere( vec3 p, float s )\n{\n    return length(p)-s;\n}\nvec2 opU( vec2 d1, vec2 d2 )\n{\n\treturn (d1.x<d2.x) ? d1 : d2;\n}\nfloat opS( float d1, float d2 )\n{\n    return max(-d2,d1);\n}\nvec3 opRep( vec3 p, vec3 c )\n{\n    return mod(p,c)-0.5*c;\n}\n\nfloat sdCylinder( vec3 p, vec2 h )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - h;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nvec3 opTwist( vec3 p )\n{\n    float  c = cos(p.y-iTime*2.);\n    float  s = sin(p.y-iTime*2.);\n    mat2   m = mat2(c,-s,s,c);\n    return vec3(m*p.xz,p.y);\n}\n\nmat2 rot2( float angle ) {\n\tfloat c = cos( angle );\n\tfloat s = sin( angle );\n\t\n\treturn mat2(\n\t\t c, s,\n\t\t-s, c\n\t);\n}\n\n//from gltracy's Cook-Torrance Sample \nvec3 newTwist2(vec3 p)\n{\n    vec3 q = p;\n    q.xz = rot2(q.y*2.)*q.xz;\n    return q;\n}\n\nvec2 map(in vec3 p)\n{\n    float c = cos(iTime); float s = sin(iTime);\n    mat3 r = mat3(c, 0., -s,\n                  0., 1., 0.,\n                  s, 0., c);\n    return vec2(sdBox(newTwist2(p*r), vec3(1., 1., 1.)), 1.);\n}\n\nvec2 castRay( in vec3 ro, in vec3 rd, in float maxd )\n{\n\tfloat precis = 0.001;\n    float h=precis*2.0;\n    float t = 0.0;\n    float m = -1.0;\n    for( int i=0; i<60; i++ )\n    {\n        if( abs(h)<precis||t>maxd ) break;\n        t += h;\n        vec3 p = ro+rd*t;\n\t    vec2 res = map( p );\n        h = res.x;\n\t    m = res.y;\n    }\n\n    if( t>maxd ) m=-1.0;\n    return vec2( t, m );\n}\n\nvec3 calcNormal( in vec3 pos )\n{\n\tvec3 eps = vec3( 0.001, 0.0, 0.0 );\n\tvec3 nor = vec3(\n\t    map(pos+eps.xyy).x - map(pos-eps.xyy).x,\n\t    map(pos+eps.yxy).x - map(pos-eps.yxy).x,\n\t    map(pos+eps.yyx).x - map(pos-eps.yyx).x );\n\treturn normalize(nor);\n}\n\nfloat calcAO( in vec3 pos, in vec3 nor )\n{\n\tfloat totao = 0.0;\n    float sca = 1.0;\n    for( int aoi=0; aoi<5; aoi++ )\n    {\n        float hr = 0.01 + 0.05*float(aoi);\n        vec3 aopos =  nor * hr + pos;\n        float dd = map( aopos ).x;\n        totao += -(dd-hr)*sca;\n        sca *= 0.75;\n    }\n    return clamp( 1.0 - 4.0*totao, 0.0, 1.0 );\n}\n\nvec3 surfcol(in float id, in vec3 p)\n{\n    if(id == 1.) \n    {\n        return vec3(.8, .3, 0.);\n    }\n    return vec3(1.);\n}\n\nvec3 render(vec3 ro, vec3 rd)\n{\n    vec2 r = castRay(ro, rd, 1000.);\n    if(r.y >= 0.)\n    {\n        vec3 l = normalize(vec3(sin(iTime*.4), .5, cos(iTime*.4)));\n        vec3 p = ro+rd*r.x;\n        vec3 n = calcNormal(p);\n        vec3 sc = surfcol(r.y, p);\n        vec3 h = normalize(l-rd);\n        float sh = 1.;\n        if(castRay(p+l*.01, l, 100.).y >= 0.) sh = 0.2;\n        vec3 ambient = (sc*.4)*calcAO(p, n);\n        vec3 diffuse = sc*max(0., dot(n, l));\n        //vec3 specular = vec3(1.)*pow(dot(n,h),60.));\n        vec3 specular = vec3(pow(max(0., dot(n,h)), 70.0))*vec3(.4, .7, .8);\n        vec3 refl = texture(iChannel0, reflect(-rd, n)).xyz*.08;\n        vec3 c = ambient + refl + ((diffuse+specular)*sh);//((sc*dot(n,l) + (sc*4.)*pow(dot(n, h), 60.))*sh)+(sc*.2)*calcAO(p, n);\n        return c;\n    }\n    else { return texture(iChannel0, rd).xyz; }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy/iResolution.xy;\n    vec2 p = -1.0+2.0*q;\n\tp.x *= iResolution.x/iResolution.y;\n    #ifdef PIX\n    p = floor(p*30.)*.035;\n    #endif\n    vec2 mo = iMouse.xy/iResolution.xy;\n\t\t \n\tfloat time = 15.0 + iTime + mo.x*180.;\n\n    float pt = 4.+mo.x*30.;\n\t// camera\t\n\tvec3 ro = vec3(2.6*sin(pt), 0., 2.6*cos(pt));//vec3( -0.5+3.2*cos(0.1*time + 6.0*mo.x), -2.0 + 10.0*mo.y, 0.5 + 3.2*sin(0.1*time + 6.0*mo.x) );\n\tvec3 ta = vec3( 0. );\n\t\n\t// camera tx\n\tvec3 cw = normalize( ta-ro );\n\tvec3 cp = vec3( 0.0, 1.0, 0.0 );\n\tvec3 cu = normalize( cross(cw,cp) );\n\tvec3 cv = normalize( cross(cu,cw) );\n    \n    vec3 col = vec3(0.);\n    for(int i = 0; i < 5; ++i)\n    {\n        vec2 sp = p + hash2(float(i))*.005;\n\t\tvec3 rd = normalize( sp.x*cu + sp.y*cv + 2.5*cw );\n    \tcol += render( ro, rd );\n    }\n    col /= 5.;\n    col = sqrt(col);\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdjSR1","date":"1409181423","viewed":228,"name":"Raymarched Twisty","username":"squid","description":"Lighting and Twist operator are both broken. This is a actually a twisted box with very little actual twist applied, which was rather unfortunate. Twisty though. Added a new twist operator (newTwist2) that seems better","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""}}