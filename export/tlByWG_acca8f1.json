{"ver":"0.1","info":{"id":"tlByWG","date":"1595208399","viewed":104,"name":"HSB Function plot","username":"douira","description":"Plots the given function using a HSB color.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorful","function","repeating","mathematical"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tileSize = 1000.0;\nfloat scale = 20.0;\nfloat rangeEnd = 1.0;\nfloat rangeStart = -1.0;\n\n//some nice functions to try\n//sin(x) * ((sin(y) + cos(x)) * sin(y) + cos(x)) * cos(y)\n//sin(cos(x) * sin(y) * x) * cos(sin(y) * cos(x) * y)\n//sin(cos(x) * sin(y) * 2.0 * sin(x * 0.2)) * cos(sin(y) * cos(x) * 2.0 * sin(y * 0.2))\n//sin(cos(iTime * 0.5 + x) * sin(iTime * 0.2 + y) * 2.0 * sin(x * 0.5) + cos(x * 0.25) * 0.3) * cos(sin(y) * cos(iTime - x) * 2.0 * sin(iTime * 0.3 + y * 0.2) + 2.0)\n\n\n//hsv2rgb is from https://gist.github.com/yiwenl/745bfea7f04c456e0101\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float x = mod(uv.x, tileSize) * scale;\n    float y = mod(uv.y, tileSize) * scale;\n    \n    //=== put the function to plot here ===\n    float value = sin(cos(x) * sin(y) * 2.0 * sin(x * 0.2)) * cos(sin(y) * cos(x) * 2.0 * sin(y * 0.2));\n    \n    value = (value - rangeStart) / (rangeEnd - rangeStart);\n    vec3 col = hsv2rgb(vec3(value, 1.0, 1.0));\n\n    // Output to screen\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}