{"ver":"0.1","info":{"id":"Dls3Wn","date":"1671594294","viewed":130,"name":"Musical sine flower","username":"josplode","description":"Used: https://chat.openai.com/chat to write this","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["music","flower","ai"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xl2Xzc","filepath":"https://soundcloud.com/chrischristodouloumusic/evapotranspiration-1?in=chrischristodouloumusic/sets/risk-of-rain-2&si=7fe0936ef78949cab60f11fc5bf96e97&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/chrischristodouloumusic/evapotranspiration-1?in=chrischristodouloumusic/sets/risk-of-rain-2&si=7fe0936ef78949cab60f11fc5bf96e97&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265358979323846;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float t = iTime;\n \n \n  // Add CRT scanline effect\n  float scanlineIntensity = mod(fragCoord.y, 2.0) < 1.0 ? 1.0 : 0.5;\n\n  // Compute UV coordinates\n  vec2 uv = (fragCoord + vec2(sin(t), cos(t)) * 0.1) / iResolution.xy;\n  uv -= 0.5;\n  uv.x *= iResolution.x / iResolution.y;\n\n  // Add sinusoidal offsets to the x and y coordinates\n  uv.x += sin(t + uv.y * 5.0) * 0.1;\n  uv.y += cos(t + uv.x * 5.0) * 0.1;\n  \n  // Use the x component of iChannel0 to control the value of t\n  vec2 musicUv;\n  musicUv.y = atan(uv.y, uv.x) / (2.0 * PI);\n  musicUv.x = length(uv);\n  \n  float musicControl = texture(iChannel0, musicUv).x;\n  t = musicControl * 5.0 + iTime;\n\n  // Kaleidoscope effect\n  float angle = atan(uv.y, uv.x) + sin(t) * 0.1;\n  float scale = 1.0 + mod(angle, PI / (10.0 * musicControl)) / (PI / (10.0 * musicControl));\n  uv = vec2(uv.x * scale, uv.y * scale);\n\n  // Add distortion effect\n  uv += sin(t + uv.xy * 20.0) * 0.1;\n\n  // Compute distance from the center\n  float r = length(uv);\n\n  // Set the pixel color\n  if (r < 0.3) {\n    fragColor = vec4(vec3(sin(t + uv.x * 10.0), sin(t + uv.y * 10.0), cos(t + uv.x * 10.0)) * scanlineIntensity, 1);\n  } else if (r < 0.5) {\n    fragColor = vec4(vec3(sin(t + uv.x * 10.0), sin(t + uv.y * 10.0), cos(t + uv.x * 10.0)) * scanlineIntensity, 1);\n  } else {\n    fragColor = vec4((vec3(sin(t + uv.x * 5.0) * 0.1) + sin(t + uv.y * 30.0) * 0.2) * scanlineIntensity, 1);\n  }\n  \n  // Make the image brighter\n  fragColor *= musicControl * 5.0;\n}","name":"Image","description":"","type":"image"}]}