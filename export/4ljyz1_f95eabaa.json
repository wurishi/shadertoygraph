{"ver":"0.1","info":{"id":"4ljyz1","date":"1507502318","viewed":111,"name":"Two Texture blur ","username":"patrickS1997","description":"This is for a project ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["myshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat circleRadius = 0.1;\nint textureTypeA = 3;\nint textureTypeB = 4;\n\n//1\nmat3 texBlur = mat3(\n 0.111, 0.111, 0.111, // first column (not row!)\n 0.111, 0.111, 0.111, // second column\n 0.111, 0.111, 0.111 // third column\n);\n\n//2\nmat3 texSharp = mat3(\n 0., -1, 0.0, // first column (not row!)\n -1, 5, -1, // second column\n 0., -1, 0.0 // third column\n);\n\n//3\nmat3 texEmboss = mat3(\n -2.0, -1.0, 0, // first column (not row!)\n -1.0, 1.0, 1.0, // second column\n 0.0, 1.0, 2.0 // third column\n);\n\n//4\nmat3 texEdge = mat3(\n-1.0, -1.0, -1.0, // first column (not row!)\n -1.0, 8.0, -1.0, // second column\n -1.0, -1.0, -1.0 // third column\n);\n\n//5\nmat3 texNoise = mat3(\n1.0, 1.0, 1.0, // first column (not row!)\n1.0, 1.0, 1.0, // second column\n 1.0, 1.0, 1.0 // third column\n);\n\n\n//Sets up the texture \nvec3 aSample(const int x, const int y, in vec2 fragCoord, sampler2D channel)\n{\n vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n uv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n return texture(channel, uv).xyz;\n}\n\n//Builds the filter\nvec3 aFilter(in vec2 fragCoord, mat3 kernel, in sampler2D channel)\n{\nvec3 sum = vec3 (0.0,0.0,0.0);\n    \n for (int i = 0; i < 3; i++)\n {\n     for(int j = 0; j < 3; j++)\n     {\n      sum += aSample(i-1,j-1, fragCoord,  channel) * kernel[i][j];\n     }\n }      \n return sum;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    vec2 circlePos = iMouse.xy/iResolution.xy;\n    \n    float aspectRatio = iResolution.y/iResolution.x;\n    \n    uv.y*=aspectRatio;\n    circlePos.y *=aspectRatio;\n    \n    vec4 layer0;\n    vec4 layer1;\n    \n//Sets the main Texture     \n    switch(textureTypeA)\n    {\n        case 1: \n        layer0 = vec4(aFilter(fragCoord, texBlur, iChannel1), 1.0);\n       \tbreak;\n        \n        case 2: \n        layer0 = vec4(aFilter(fragCoord, texSharp, iChannel1), 1.0);\n       \tbreak;\n        \n      \tcase 3: \n        layer0 = vec4(aFilter(fragCoord, texEmboss, iChannel1), 1.0);\n       \tbreak;\n        \n        case 4: \n        layer0 = vec4(aFilter(fragCoord, texEdge, iChannel1), 1.0);\n       \tbreak;\n        \n        case 5: \n        layer0 = vec4(aFilter(fragCoord, texNoise, iChannel1), 1.0);\n       \tbreak;\n        \n    }\n    \n    //Sets the bottom texture \n    switch(textureTypeB)\n    {\n        case 1: \n        layer1 = vec4(aFilter(fragCoord, texBlur, iChannel0),1.0 - step(circleRadius, length(circlePos.xy - uv)));\n       \tbreak;\n        \n        case 2: \n        layer1 = vec4(aFilter(fragCoord, texSharp, iChannel0),1.0 - step(circleRadius, length(circlePos.xy - uv)));\n       \tbreak;\n        \n      \tcase 3: \n        layer1 = vec4(aFilter(fragCoord, texEmboss, iChannel0),1.0 - step(circleRadius, length(circlePos.xy - uv)));\n       \tbreak;\n        \n        case 4: \n        layer1 = vec4(aFilter(fragCoord, texEdge, iChannel0),1.0 - step(circleRadius, length(circlePos - uv)));\n       \tbreak;\n        \n        case 5: \n        layer1 = vec4(aFilter(fragCoord, texNoise, iChannel0),1.0 - step(circleRadius, length(circlePos.xy - uv)));\n       \tbreak;\n        \n    }\n    fragColor = mix(layer0, layer1, layer1.a);\n\n}","name":"Image","description":"","type":"image"}]}