{"ver":"0.1","info":{"id":"mldGR7","date":"1682156823","viewed":265,"name":"Eighties Gradient Camera","username":"iyadahmed","description":"Python version: https://github.com/iyadahmed/EightiesGradientCam","likes":1,"published":3,"flags":2,"usePreview":0,"tags":["camera","effect","artistic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Smooth HSV to RGB conversion from: https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Discretize coordinates\n    uv.y = floor(uv.y / 0.05) * 0.05;\n    \n    // Sample camera texture\n    vec4 col = texture(iChannel0, uv);\n    \n    // Convert to grayscale\n    // Reference: https://gist.github.com/Volcanoscar/4a9500d240497d3c0228f663593d167a#file-greyscale-frag-L20\n    float c = dot(col.rgb, vec3(0.21, 0.71, 0.07));\n    \n    // Blend between colors\n    //col.rgb = mix(vec3(1, 0, 0), vec3(0, 0, 1), c);\n    \n    // Or use grayscale as hue\n    col.rgb = hsv2rgb_smooth(vec3(c * .5, 1.0, 1.0));\n    \n    // Output\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}