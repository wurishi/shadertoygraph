{"ver":"0.1","info":{"id":"MsGfD3","date":"1530758243","viewed":516,"name":"simple cloud","username":"MonterMan","description":"cloud stuff","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["volumetric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(in vec2 uv)\n{\n    vec2 res = fract(uv * vec2(821.143, 173.321));\n    res += dot(res, res+23.13);\n    return fract(res.x*res.y);\t\n}\n\nfloat noise(in vec2 uv)\n{\n    vec2 ipos = floor(uv);\n    vec2 fpos = fract(uv);\n    \n    float a = hash(ipos + vec2(0, 0));\n    float b = hash(ipos + vec2(1, 0));\n    float c = hash(ipos + vec2(0, 1));\n    float d = hash(ipos + vec2(1, 1));\n    \n    vec2 t = smoothstep(0.0, 1.0, fpos);\n    return mix(mix(a, b, t.x), mix(c, d, t.x), t.y);\n}\n\nfloat fbm(in vec2 p)\n{\n    float res = 0.0;\n    float amp = 0.5;\n    float freq = 2.0;\n    for (int i = 0; i < 4; ++i)\n    {\n        res += amp*noise(freq*p);\n        amp *= 0.5;\n        freq *= 2.0;\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    vec3 ro = vec3(0, 0.8, iTime);\n    vec3 at = ro + vec3(0, -0.2, 1);\n    \n    vec3 cam_z = normalize(at - ro);\n    vec3 cam_x = normalize(cross(vec3(0,1,0), cam_z));\n    vec3 cam_y = cross(cam_z, cam_x);\n    vec3 rd = normalize(uv.x * cam_x + uv.y * cam_y + 2.0 * cam_z);\n    \n    vec3 sky_col = vec3(0.6, 0.7, 0.8);\n    vec3 col = sky_col;\n    col -= 0.7*rd.y;\n    \n    for (float i = 170.0; i > 0.0; --i)\n    {\n        vec3 p = ro + 0.05*i*rd;\n        float f = p.y - 1.2*fbm(0.6*p.xz);\n        float density = -f;\n        if (density > 0.0)\n        {\n            col = mix(col, 1.0 - density*sky_col.bgr, min(1.0, density*0.4));\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}