{"ver":"0.1","info":{"id":"ls3Gz2","date":"1450847012","viewed":358,"name":"faux-scanline renderer","username":"zachernuk","description":"Playing with ways of using shaders to pretend to display things like progressive loading, mostly for the purpose of learning about shaders.\n","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["scanline","old","loading","reveal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const float speed = 2.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float time = iTime*speed;\n    float f = 1.-floor(time)*4.+(1.-uv.y)*300.;\n    f = clamp (f,0.,1.);\n    fragColor = texture(iChannel0, uv );\n    float f2 = (fract(time)>uv.x)?1.:0.;\n    vec4 rowColor = mix(vec4(0.), fragColor, f2);\n    fragColor = mix(fragColor, rowColor, f);\n\n    f = 1.-floor(time+1.)*4.+(1.-uv.y)*300.;\n    f = clamp (f,0.,1.);\n\n    fragColor = mix(fragColor, vec4(0.), f);\n}\n\n\n\n\n","name":"","description":"","type":"image"}]}