{"ver":"0.1","info":{"id":"mstXz2","date":"1680137450","viewed":107,"name":"circle-k","username":"Carandiru","description":"circle spawn!","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// don't let it run for too long...\n\n#define PI 3.1415926538\n\nfloat sdCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat HoleCircle(vec2 p, float r1, float r2) {\n    return abs(sdCircle(p, r1)) - r2;\n}\n\n#define RING_COUNT (iTime)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.y * 2.0f - 1.0f;\n    uv.x -= 0.75f;\n\n    float sdf = 999999.999999f;\n    float ring_count = RING_COUNT;\n    \n    if (iTimeDelta > (1.0f / 60.0f) )\n        ring_count *= 0.5f;  // mitigate\n        \n    float tt = float(ring_count) + float(ring_count) * fract(iTime);\n    int count = int(floor(tt));\n    \n    float major_angle = 0.0f;\n    int major_samples = 0;\n    \n    for(float t = tt; t >= 0.0f; --t) {\n            \n        for(int i = 0; i < count; i++) {\n            float j = fract(t);\n            float angle = (float(i) + j) / float(count - 1) * 2.0f * PI + iTime;\n            vec2 pos = vec2(cos(angle), sin(angle));\n            float c = HoleCircle(uv - pos, 0.999, 0.001);\n\n            sdf = min(sdf, c);\n            \n            major_angle += angle;\n        }\n        \n        ++major_samples;\n    }\n\n    major_angle = major_angle / float((count - 1) * major_samples);\n    \n    vec2 pos = vec2(cos(major_angle), sin(major_angle));\n    float c = HoleCircle(uv - pos, 0.999, 0.001);\n    sdf = sdf * c;\n    \n    float glow = pow(0.0014f / abs(sdf), 0.5f);\n    \n    float hw = 0.5f * fwidth(sdf);\n    vec3 color = vec3(0);\n    color = glow + mix(vec3(glow), vec3(0), smoothstep(-hw, hw, sdf));\n    \n    fragColor = vec4(color,1.0f);\n}\n","name":"Image","description":"","type":"image"}]}