{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec2 fold = vec2(0.5, -0.5);\nvec2 translate = vec2(1.5);\nfloat scale = 1.3;\n\nvec3 hsv(float h,float s,float v) {\n\treturn mix(vec3(1.),clamp((abs(fract(h+vec3(3.,2.,1.)/3.)*6.-3.)-1.),0.,1.),s)*v;\n}\n\nvec2 rotate(vec2 p, float a){\n\treturn vec2(p.x*cos(a)-p.y*sin(a), p.x*sin(a)+p.y*cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = -1.0 + 2.0*fragCoord.xy/iResolution.xy;\n\tp.x *= iResolution.x/iResolution.y;\n\tp *= 0.003;\n\tfloat x = p.y;\n\tp = abs(mod(p, 8.0) - 4.0);\n\tfor(int i = 0; i < 36; i++){\n\t\tp = abs(p - fold) + fold;\n\t\tp = p*scale - translate;\n\t\tp = rotate(p, 3.14159/(8.0+sin(iTime*0.001+float(i)*0.1)*0.5+0.5));\n\t}\n\tfloat i = x*10.0 + atan(p.y, p.x) + iTime*0.5;\n\tfloat h = floor(i*6.0)/5.0 + 0.07;\n\th += smoothstep(0.0, 0.4, mod(i*6.0/5.0, 1.0/5.0)*5.0)/5.0 - 0.5;\n\tfragColor=vec4(hsv(h, 1.0, smoothstep(-1.0, 3.0, length(p))), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdlXzM","date":"1398631560","viewed":1031,"name":"Persian Carpet","username":"gleurop","description":"I really like the color quantization in this one.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","fractal"],"hasliked":0,"parentid":"","parentname":""}}