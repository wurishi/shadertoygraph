{"ver":"0.1","info":{"id":"X3c3Wl","date":"1717105448","viewed":131,"name":"try chords","username":"jorge2017a2","description":"try chords","likes":12,"published":1,"flags":8,"usePreview":0,"tags":["2d","sound","chords","mickey","trychords"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///......try chords\n//30-may-2024-\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(0.25/antialiasing(0.5),0. , d - (b) )\n\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat divf(float a, float b)\n{\n    //evita crash por 1/0.0 =Infinito=error, en compilar\n    if(b==0.0)\n    {b=0.00001;}\n    return a/b;\n}\n\n\nvec3 mouse(vec2 p, vec3 colout)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.33547,0.59829);\nmed=vec2(0.11752,0.10684);\n d1=sdEllipse(p-A,med);\n\n\nA=vec2(0.44444,0.54487);\nmed=vec2(0.02991,0.05342);\nfloat ang=45.0 * PI / 180.0;\nvec2 pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\ndfin=Sdf_U(d1,d2);\ncolout= DFB(vec3(1.0), colout, dfin);\n\n\nA=vec2(0.51496,0.5812);\nmed=vec2(0.02137,0.03632);\n ang=45.0 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d3=sdEllipse(pr,med);\ncolout= DFB(vec3(0.0), colout, d3);\n\n    return colout;\n}\n\n\nvec3 Cabeza_Oreja(vec2 p, vec3 colout)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\nvec2 pr;\n\n//oreja der\nA=vec2(0.27564,0.74786);\nmed=vec2(0.07906,0.0641);\nd1=sdEllipse(p-A,med);\n\n//oreja izq\nA=vec2(0.14957,0.59188);\nmed=vec2(0.07051,0.07265);\nfloat d2=sdEllipse(p-A,med);\n\n\n//diferencia cabeza\nA=vec2(0.33547,0.59829);\nmed=vec2(0.11966,0.1047);\nfloat d3=sdEllipse(p-A,med);\n\n//diferencia pelo1\nA=vec2(0.39316,0.62179);\nmed=vec2(0.08333,0.05556);\nfloat ang=48.0 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d4=sdEllipse(pr,med);\n\n//cabeza\nA=vec2(0.34615,0.56838);\nmed=vec2(0.11752,0.07265);\nfloat d5=sdEllipse(p-A,med);\n\n\ndfin=d1;\ndfin=Sdf_U(dfin,d2);\ndfin=Sdf_U(dfin,d3);\nd4=Sdf_I(d3,d4);\ndfin=Sdf_D(dfin,d4);\n\ndfin=Sdf_D(dfin,d5);\n\ncolout= DFB(vec3(0.0), colout, dfin);\n    return colout;\n    \n}\n\n\nvec3 ojo(vec2 p, vec3 colout)\n{\nvec2 A,B, med;\nfloat dfin;\nfloat d1, r1 ;\n\nA=vec2(0.43376,0.61752);\nmed=vec2(0.01496,0.03846);\n d1=sdEllipse(p-A,med);\ncolout= DFB(vec3(0.0), colout, d1);\n    return colout;\n}\n\n\nvec3 sonrisa(vec2 uv, vec3 colout)\n{\nuv.x-=0.07;\nvec2 pc1p1=vec2(.262,.639);\nvec2 pc1p2=vec2(.275,.590);\nvec2 pc1p3=vec2(.298,.575);\n\nvec2 pc2p1=vec2(.218,.566);\nvec2 pc2p2=vec2(.232,.611);\nvec2 pc2p3=vec2(.254,.611);\n\nvec2 pc3p1=vec2(.238,.592);\nvec2 pc3p2=vec2(.243,.541);\nvec2 pc3p3=vec2(.294,.511);\n\nfloat d1= sdBezier(uv,pc1p1,pc1p2,pc1p3);\nfloat d2= sdBezier(uv,pc2p1,pc2p2,pc2p3);\nfloat d3= sdBezier(uv,pc3p1,pc3p2,pc3p3);\n\ncolout= DFB(vec3(0.0), colout, d1);\ncolout= DFB(vec3(0.0), colout, d2);\ncolout= DFB(vec3(0.0), colout, d3);\n\n    return colout;\n}\n\n\nvec3 brazo(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nvec2 p0=p;\n\np.x-=0.01;\n//brazo izq\nA=vec2(0.30342,0.43803);\nmed=vec2(0.01496,0.0641);\nfloat d1=sdBox(p-A,med);\ncolout= DFB(vec3(0.0), colout, d1);\n\nA=vec2(0.45085,0.58333);\nr1=0.07692;\nfloat d2=sdCircle(p-A,r1);\n\n\nA=vec2(0.4594,0.56624);\nr1=0.08974;\nfloat d3=sdCircle(p-A,r1);\n\n\n\nA=vec2(0.46368,0.50855);\nmed=vec2(0.06838,0.02991);\nfloat d4=sdBox(p-A,med);\n\ndfin=Sdf_D(d3,d2);\ndfin=Sdf_I(dfin,d4);\ncolout= DFB(vec3(0.0), colout, dfin);\n\nreturn colout;\n}\n\n\nvec3 cuerpo(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\n//camisa\nA=vec2(0.39316,0.3953);\nmed=vec2(0.07265,0.11966);\nfloat ang=-20.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d1=sdEllipse(pr,med);\n\n//short\nA=vec2(0.40171,0.36325);\nr1=0.09402;\nfloat d2=sdCircle(p-A,r1);\n\n//resta\nA=vec2(0.39103,0.48718);\nr1=0.09402;\nfloat d3=sdCircle(p-A,r1);\n\ndfin=Sdf_D(d2,d3);\ncolout= DFB(vec3(0.0,1.0,0.0), colout, dfin);\n\ndfin=Sdf_I(d1,d3);\ncolout= DFB(vec3(1.0,0.0,0.0), colout, dfin);\n\n\n\n//boton izq\nA=vec2(0.41239,0.3547);\nmed=vec2(0.02137,0.02991);\nfloat d4=sdEllipse(p-A,med);\ncolout= DFB(vec3(0.0), colout, d4);\n\n//boton der\nA=vec2(0.46581,0.37393);\nmed=vec2(0.01709,0.02564);\nfloat d5=sdEllipse(p-A,med);\ncolout= DFB(vec3(0.0), colout, d5);\n\n    return colout;\n}\n\n\nvec3 manoizq(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\np.y-=0.018;\n\nA=vec2(0.29487,0.30342);\nmed=vec2(0.05983,0.04701);\nfloat ang=-10.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d1=sdEllipse(pr,med);\n\nA=vec2(0.25,0.24573);\nmed=vec2(0.03419,0.06838);\n ang=40.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\nA=vec2(0.34615,0.28419);\nmed=vec2(0.01709,0.04274);\n ang=0.000 * PI / 180.0;\npr = Rotate(p-A, med/2.0, ang);\nfloat d3=sdEllipse(pr,med);\n    dfin=Sdf_U(d1,d3);\n    \n    colout= DFB(vec3(0.5), colout,dfin);\n    return colout;\n    \n}\n\nvec3 manoder(vec2 p,vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\np.x+=0.01;\nA=vec2(0.60684,0.54915);\nmed=vec2(0.07265,0.03846);\nfloat d1=sdEllipse(p-A,med);\n\nA=vec2(0.59829,0.60684);\nmed=vec2(0.02564,0.03846);\nfloat d2=sdEllipse(p-A,med);\n    dfin=Sdf_U(d1,d2);\n    colout= DFB(vec3(0.5), colout,dfin);\n    \n    return colout;\n}\n\n\nvec3 piernaIzq(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.39957,0.21154);\nmed=vec2(0.01496,0.04701);\nfloat d1=sdBox(p-A,med);\ncolout= DFB(vec3(0.0), colout, d1);\n\nA=vec2(0.1541,0.15795);\nmed=vec2(0.01496,0.07479);\nfloat ang=25.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdBox(pr-A,med);\ncolout= DFB(vec3(0.0), colout, d2);\n\n    return colout;\n}\n\nvec3 zapatoizq(vec2 p, vec3 colout)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\np.y-=0.02;\nA=vec2(0.31838,0.08974);\nmed=vec2(0.09402,0.03846);\nfloat d1=sdEllipse(p-A,med);\n\nA=vec2(0.34402,0.09615);\nmed=vec2(0.09402,0.04274);\nfloat ang=-10.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\nA=vec2(0.28846,0.13889);\nmed=vec2(0.03846,0.02564);\nfloat d3=sdEllipse(p-A,med);\n    \n    dfin=Sdf_U(d1,d2);\n    dfin=Sdf_U(dfin,d3);\n    colout= DFB(vec3(0.5), colout,dfin);\n    return colout;\n}\n\n\nvec3 zapatoder(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.40171,0.15385);\nmed=vec2(0.03846,0.02564);\nfloat d1=sdEllipse(p-A,med);\n\nA=vec2(0.49359,0.13034);\nmed=vec2(0.06624,0.0406);\nfloat ang=-10.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d2=sdEllipse(pr,med);\n\nA=vec2(0.44231,0.11752);\nmed=vec2(0.08761,0.0406);\nfloat d3=sdEllipse(p-A,med);\n    \n    dfin=Sdf_U(d1,d2);\n    dfin=Sdf_U(dfin,d3);\n    colout= DFB(vec3(0.5), colout,dfin);\n    return colout;\n}\n\n\nvec3 mickey(vec2 p, vec3 col)\n{\n    \n    col=brazo(p, col);\n    col= piernaIzq(p, col);\n    col=cuerpo(p, col);\n    \n    col=mouse(p, col);\n    col=Cabeza_Oreja(p, col);\n    col=ojo(p, col);\n    col=sonrisa(p, col);\n    \n    col=manoizq(p, col);\n    col=manoder(p, col);\n    col=zapatoder(p, col);\n    col=zapatoizq(p, col);\n    return col;\n\n}\n\nvec3 DosMouse(vec2 uv, vec3 col)\n{\n    col= mickey(uv,col);\n    return col;\n}\n\nvec3 montes(vec2 p, vec3 colout)\n{\n//Mountains\n    ///https://www.shadertoy.com/view/MfyGW1\n    float y = abs(fract(p.x*5.0)-0.5)*0.1;\n    y+=abs(fract(p.x*12.0)-0.5)*0.05+0.75;\n    y+=sin(p.x*8.0)*0.05;\n    y+=sin(p.x*15.0)*0.02;\n    y+=0.01;\n    float m1 = smoothstep(y-0.003,y+0.003,p.y);\n    colout = mix(vec3(0.4,0.2,0.1)-p.y*0.125,colout,m1);\n    \n    float d1=p.y-0.4;\n    colout= DFB(vec3(0.8,0.5,0.2)-p.y, colout,d1);\n    \n    return colout;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    vec2 uv0=uv;\n    \n    uv-=vec2(-0.5,-1.0);\n    float esc=0.5;\n    uv*=esc;\n    \n    vec3 col=vec3(1.0);\n    col=vec3(0.0,0.0,1.0)-uv.y+0.75; \n    col= montes(uv, col);\n    col=DosMouse(uv+vec2(0.21+0.5*sin(iTime),0.0),col);\n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//iq\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\nfloat sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        //float h = acos(q/c3)/3.0;\n        float h = acos(clamp(q/c3, -1., 1.))/3.0;\n\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\n\n\n//Quadratic Bezier - exact   (https://www.shadertoy.com/view/MlKcDD)\n\nfloat sdBezier( in vec2 pos, in vec2 A, in vec2 B, in vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.0*B + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n    float kk = 1.0/dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n    float kz = kk * dot(d,a);      \n    float res = 0.0;\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx-3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n    if( h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        float t = clamp( uv.x+uv.y-kx, 0.0, 1.0 );\n        res = dot2(d + (c + b*t)*t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp(vec3(m+m,-n-m,n-m)*z-kx,0.0,1.0);\n        res = min( dot2(d+(c+b*t.x)*t.x),\n                   dot2(d+(c+b*t.y)*t.y) );\n        // the third root cannot be the closest\n        // res = min(res,dot2(d+(c+b*t.z)*t.z));\n    }\n    return sqrt( res );\n}\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"//Referencia de sonido \n//IQ,AeroShark333, Gaz ,etc. muchos :)\n\n#define PI acos(-1.)\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n#define TWO_PI 6.2831\n\n\nconst float ttotal=15.0; \nconst float pi = 3.1415927;\nconst float tau = 6.283185;\nfloat ms;\nfloat mresp;\nfloat mtime;\nfloat mtempo;\n\n\n//https://www.shadertoy.com/view/ss3cDN\n// Created by AeroShark333\nfloat squareWave750( float f, float x)\n{ return (min(1.0, floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 3.0 ))); }\n\nfloat squareWave500( float f, float x)\n{ return (floor( 2.0 * floor( f * x ) - floor( 2.0 * f * x ) + 1.0 )); }\n\nfloat squareWave250( float f, float x)\n{ return (max(0.0, floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 ))); }\n\nvec2 squareWave250( vec2 f, float x)\n{ return (max(vec2(0.0), floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 ))); }\n\nfloat triangleWave500( float q, float x)\n{ float f = 1.0-2.0*abs(0.5-mod(q*x,1.0));  return (f); }\n\nfloat triangleWave250( float q, float x)\n{ float f = max(0.0,1.0-2.0*abs(0.5-2.0*mod(q*x,1.0))); return (f); }\n\nfloat convertBassFreq (float f)\n{ return (f/2.0); }\n\nfloat  sawf(float t , float freq)\n{  return fract(t * freq) - 0.5; }\n\nfloat wave1( float x, float dxdt, in vec2 v, float t , float w)\n{   float f2;\n    float sampleX=0.0;\n    float f=w;\n    sampleX =squareWave250(f,t)*triangleWave250(f,t) *exp(-2.5*t);\n    f2=(sampleX+sawf(t,f));\n    float fx=f2*1.5;\n    return fx;\n}\n\n\nfloat D3(float ton, float tid, float toff)\n{   vec3 n3;\n    float resp;\n    n3=vec3(ton,tid, toff);\n    \n    \n    if(ms>=ton && ms<=toff)\n    {      // lower one octave\n      n3.y -=12.; //12 notas\n      //n3.y +=12.; //12 notas\n\n      // compute note frequency and time  \n      float f = 440.0*pow( 2.0, float(n3.y-69.)/12.0 );\n      float t = mtime - float(n3.x)/mtempo;\n      if( n3.x==0.0 ) return 0.0;\n\n      // prepare wave parameters\n      float w = tau*f;\n      \n      float dwdt = w/iSampleRate; // derivative\n\n      // mix between bandlimited and raw saw waves  \n      vec2 v = smoothstep(-0.2,0.2,sin(t*vec2(1.0,0.5)) );\n      // build instrument\n\n      float f1,y;\n      f1=wave1(w*t,1.00*dwdt,v,t,w);\n      float wf  = 0.4*f1;\n      y=f1*wf;\n      float offset=n3.x;\n       y*=exp(-1.0/n3.z * (t -offset) );\n        \n       mresp+=y;\n    }\n    \n}\n\n\n\nfloat SoundIq(float time)\n{ ///referencia de notas musicales... iq \n  time = mod( time+1.0, ttotal);\n // tune\n  float tempo = 0.5;\n  float s = time*tempo;\n vec3 n3=vec3(0.0);\n \n //variables globales\n ms=s;\n mresp=0.0;\n mtime=time;\n mtempo=tempo;\n\n D3(0.000,40.0,0.500); D3(0.000,44.0,0.500); D3(0.000,47.0,0.500); D3(0.000,37.0,0.500); D3(0.000,52.0,0.250); D3(0.000,56.0,0.250);\n D3(0.000,59.0,0.250); D3(0.000,49.0,0.250); D3(0.500,50.0,1.000); D3(0.500,54.0,1.000); D3(0.500,57.0,1.000); D3(0.500,59.0,1.000);\n D3(0.500,41.0,0.750); D3(0.500,45.0,0.750); D3(0.500,36.0,0.750); D3(0.500,38.0,0.750); D3(1.000,38.0,1.500); D3(1.000,43.0,1.500);\n D3(1.000,45.0,1.500); D3(1.000,36.0,1.500); D3(1.000,53.0,1.250); D3(1.000,55.0,1.250); D3(1.000,48.0,1.250); D3(1.000,51.0,1.250);\n D3(1.500,52.0,2.000); D3(1.500,54.0,2.000); D3(1.500,59.0,2.000); D3(1.500,50.0,2.000); D3(1.500,41.0,1.750); D3(1.500,43.0,1.750);\n D3(1.500,36.0,1.750); D3(1.500,39.0,1.750); D3(2.000,55.0,2.250); D3(2.000,57.0,2.250); D3(2.000,50.0,2.250); D3(2.000,53.0,2.250);\n D3(2.000,40.0,2.500); D3(2.000,45.0,2.500); D3(2.000,47.0,2.500); D3(2.500,43.0,2.750); D3(2.500,36.0,2.750); D3(2.500,38.0,2.750);\n D3(2.500,48.0,3.000); D3(2.500,51.0,3.000); D3(3.000,36.0,3.500); D3(3.000,40.0,3.500); D3(3.000,43.0,3.500); D3(3.000,46.0,3.500);\n D3(3.000,38.0,3.500); D3(3.000,48.0,3.250); D3(3.000,51.0,3.250); D3(3.000,55.0,3.250); D3(3.500,50.0,4.000); D3(3.500,54.0,4.000);\n D3(3.500,57.0,4.000); D3(3.500,48.0,4.000); D3(3.500,52.0,4.000); D3(3.500,38.0,3.750); D3(3.500,42.0,3.750); D3(3.500,46.0,3.750);\n D3(4.000,40.0,4.500); D3(4.000,44.0,4.500); D3(4.000,47.0,4.500); D3(4.000,38.0,4.500); D3(4.000,42.0,4.500); D3(4.000,55.0,4.250);\n D3(4.000,59.0,4.250); D3(4.000,51.0,4.250); D3(4.500,53.0,5.000); D3(4.500,57.0,5.000); D3(4.500,48.0,5.000); D3(4.500,51.0,5.000);\n D3(4.500,55.0,5.000); D3(4.500,40.0,4.750); D3(4.500,43.0,4.750); D3(4.500,46.0,4.750); D3(5.000,43.0,5.500); D3(5.000,47.0,5.500);\n D3(5.000,38.0,5.500); D3(5.000,41.0,5.500); D3(5.000,45.0,5.500); D3(5.000,52.0,5.250); D3(5.000,54.0,5.250); D3(5.000,59.0,5.250);\n D3(5.500,57.0,5.750); D3(5.500,49.0,5.750); D3(5.500,52.0,5.750); D3(5.500,55.0,5.750); D3(5.500,59.0,5.750);\n \n  return mresp;\n}\n\nvec2 mainSound( in int samp, float time )\n{ float t1=mod(time, ttotal);\n  float y= SoundIq(t1)*0.5;\n  return vec2(y);\n}   \n\n","name":"Sound","description":"","type":"sound"}]}