{"ver":"0.1","info":{"id":"MlGXWc","date":"1486217297","viewed":210,"name":"Motion Blurring","username":"pineapplemachine","description":"Blur a video, with blur intensity increasing with the intensity of motion.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 get(in vec2 coord){\n    return texture(iChannel0, (coord / iResolution.xy) * 0.5);\n}\nvec4 bsample(in vec2 origin, in int radius){\n    vec4 mean = vec4(0.0);\n    float rad2 = float(2 * radius * radius);\n    float weight = 0.0;\n    if(radius == 1){\n        for(int i = -1; i <= 1; i++){\n            for(int j = -1; j <= 1; j++){\n                vec2 offset = vec2(float(i), float(j));\n                float wt = rad2 - (offset.x * offset.x + offset.y * offset.y);\n                mean += get(origin + offset) * wt;\n                weight += wt;\n            }\n        }\n    }else if(radius == 2){\n        for(int i = -2; i <= 2; i++){\n            for(int j = -2; j <= 2; j++){\n                vec2 offset = vec2(float(i), float(j));\n                float wt = rad2 - (offset.x * offset.x + offset.y * offset.y);\n                mean += get(origin + offset) * wt;\n                weight += wt;\n            }\n        }\n    }\n    return mean / weight;\n}\n\nvoid mainImage(out vec4 color, in vec2 coord){\n    vec2 uv = coord / iResolution.xy;\n    vec2 thisuv = uv * 0.5; // This frame\n    vec2 prevuv = thisuv + 0.5; // Previous frame\n    vec4 thiscolor = texture(iChannel0, thisuv);\n    vec4 prevcolor = texture(iChannel0, prevuv);\n\tfloat motion = distance(thiscolor, prevcolor);\n    if(motion <= 0.25){\n        color = thiscolor;\n    }else if(motion <= 0.5){\n        color = bsample(coord, 1);\n    }else{\n        color = bsample(coord, 2);\n    }\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 color, in vec2 coord){\n    vec2 uv = coord / iResolution.xy;\n    if(uv.x < 0.5){\n        if(uv.y < 0.5){ // Upper-left quadrant: Current frame content\n            color = texture(iChannel0, uv * 2.0);\n        }else{ // Lower-left quadrant: Take from upper right\n            color = texture(iChannel1, uv + vec2(+0.5, -0.5));\n        }\n    }else{\n        // Upper-right quadrant: Take from upper left\n        // Lower-right quadrant: Take from lower left\n        color = texture(iChannel1, vec2(uv.x - 0.5, uv.y));\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}