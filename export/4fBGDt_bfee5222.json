{"ver":"0.1","info":{"id":"4fBGDt","date":"1704763032","viewed":192,"name":"neural worms","username":"HoosierTransfer","description":"cellular automata that uses convolutions. click to randomize","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["convolution"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = vec4(texture(iChannel0, uv).x, 0, 0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float hash( vec2 f )\n{   uvec2 //x = vec2BitsToUvec2 uvec2( floatBitsToUint(f.x), floatBitsToUint(f.y) ),\n          x = floatBitsToUint(f),\n          q = 1103515245U * ( x>>1U ^ x.yx    );\n    return float( 1103515245U * (q.x ^ q.y>>3U) ) / float(0xffffffffU);\n}\n\nvec2 getCoords(vec2 coord, vec2 offset){\n    return mod(coord + (1./iResolution.xy) * offset, 1.0);\n}\n\nfloat inverse_gaussian(float x) {\n  return -1./pow(2., (0.6*pow(x, 2.)))+1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    if (iFrame == 0 || iMouse.w > 0.) {\n        fragColor = vec4(hash(fragCoord + iTime));\n        return;\n    }\n    float kernel[9] = float[9](0.68, -0.9, 0.68, -0.9, -0.66, -0.9, 0.68, -0.9, 0.68);\n    vec2 uv = fragCoord/iResolution.xy;\n    float sum = \n                  texture(iChannel0, getCoords(uv, vec2( 1.,-1.))).x * kernel[0] \n                + texture(iChannel0, getCoords(uv, vec2( 0.,-1.))).x * kernel[1]\n                + texture(iChannel0, getCoords(uv, vec2(-1.,-1.))).x * kernel[2]\n                + texture(iChannel0, getCoords(uv, vec2( 1., 0.))).x * kernel[3]\n                + texture(iChannel0, getCoords(uv, vec2( 0., 0.))).x * kernel[4]\n                + texture(iChannel0, getCoords(uv, vec2(-1., 0.))).x * kernel[5]\n                + texture(iChannel0, getCoords(uv, vec2( 1., 1.))).x * kernel[6]\n                + texture(iChannel0, getCoords(uv, vec2( 0., 1.))).x * kernel[7]\n                + texture(iChannel0, getCoords(uv, vec2(-1., 1.))).x * kernel[8];\n    fragColor = vec4(clamp(inverse_gaussian(sum), 0., 1.));\n}","name":"Buffer A","description":"","type":"buffer"}]}