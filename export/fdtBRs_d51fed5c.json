{"ver":"0.1","info":{"id":"fdtBRs","date":"1657030317","viewed":30,"name":"mandelbulb no 3","username":"testertestertester","description":"mandelbulb","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbulb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX 50\n#define BAIL 1.5\n#define POWER 8.0\n\nvec3 power(vec3 v, float n) \n{\n    float r = pow(length(v), n);\n    float l = sqrt(v.x * v.x + v.y * v.y);\n    float theta = atan(l / v.z);\n    float phi = atan(v.y, v.x);\n    \n    float x = sin(n * theta) * cos(n * phi);\n    float y = sin(n * theta) * sin(n * phi);\n    float z = cos(n * theta);\n    return r * vec3(x, y, z);\n}\n\nint test(vec3 c) \n{\n    vec3 v = vec3(0, 0, 0);\n    int i = 0;\n    while (i < MAX)\n    {\n        v = power(v, POWER) + c;\n        if (length(v) > BAIL) break;\n        i ++;\n    }\n    return i;\n}\n\nvec2 scale(vec2 fragCoord)\n{\n    vec2 pos = fragCoord/iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    \n    vec2 z = 2.0 * pos - 1.0;\n    z.x *= ratio;\n    \n    return z;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 s = scale(fragCoord);\n    vec3 c = vec3(s, 0.);\n    int i = test(c);\n    \n    vec3 col = vec3(0);\n    if (i == MAX) \n    {\n        col = vec3(1);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}