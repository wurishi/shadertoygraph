{"ver":"0.1","info":{"id":"4tdyRl","date":"1533661071","viewed":163,"name":"DoF","username":"ShadowFlare","description":"depth of filed","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["depthoffiled"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec4 origCol = texture(iChannel0, uv);\n    vec4 blurCol = texture(iChannel1, uv);\n    \n   \tfloat blurAmount = min(0.99, max(texture(iChannel2, uv).r, 0.01));//distance(uv, iMouse.xy/iResolution.xy)\n    blurAmount = clamp(blurAmount, 0.01, 0.99);\n    vec4 col = mix(origCol, blurCol, blurAmount);\n    /*if (col.rgb == vec3(0.0)) {   \n    \tcol = texture(iChannel0, uv);\n    }*/\n   \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float blur_amount = 1.0;\nfloat kernal_num = 20.;\nconst float pi = 3.14159;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    blur_amount = texture(iChannel1, uv).r;\n    //kernal_num = floor(texture(iChannel1, uv).r*25.);\n    float blurSize = (1.0/iResolution.x * blur_amount);//*distance(fiMouse.xy, fragCoord.xy*iResolution.xy);\n    vec4 sum = vec4(0.0);\n       float sigma = round(kernal_num);\n    if (sigma/2.-floor(sigma/2.) == 0.) {\n         sigma -= 1.;   \n    }\n    float eul = 2.71828;\n    float segP = floor(sigma/2.);\n       float kern[640];\n    int count = 0;\n    for (float i = -segP; i <= segP; i++) {\n            //exp(-power(i,2)/(2*power(sigPrime,2)))/(sqrt(2*pi)*sigPrime)\n            kern[count] = exp(-((i/sigma)*(i/sigma))/(2.*(segP*segP)))/(sqrt(2.*pi)*segP);;\n        count++;\n    }\n    for (float i = -(kernal_num/2.); i < kernal_num/2.; i++) {\n            sum += texture(iChannel0, vec2(uv.x, uv.y+i*blurSize))*kern[int(i+(kernal_num/2.))];\n    }\n    fragColor = sum;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float blur_amount = 1.0;\nfloat kernal_num = 20.;\nconst float pi = 3.14159;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n     blur_amount = texture(iChannel1, uv).r;\n     //kernal_num = floor(texture(iChannel1, uv).r*25.);\n    float blurSize = (1.0/iResolution.x * blur_amount);//*distance(fiMouse.xy, fragCoord.xy*iResolution.xy);\n    vec4 sum = vec4(0.0);\n       float sigma = round(kernal_num);\n    if (sigma/2.-floor(sigma/2.) == 0.) {\n         sigma -= 1.;   \n    }\n    float eul = 2.71828;\n    float segP = floor(sigma/2.);\n       float kern[640];\n    int count = 0;\n    for (float i = -segP; i <= segP; i++) {\n            //exp(-power(i,2)/(2*power(sigPrime,2)))/(sqrt(2*pi)*sigPrime)\n            kern[count] = exp(-((i/sigma)*(i/sigma))/(2.*(segP*segP)))/(sqrt(2.*pi)*segP);;\n        count++;\n    }\n    for (float i = -(kernal_num/2.); i < kernal_num/2.; i++) {\n            sum += texture(iChannel0, vec2(uv.x+i*blurSize, uv.y))*kern[int(i+(kernal_num/2.))];\n    }\n    fragColor = sum;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = vec4(clamp(abs(0.5-uv.x)*2., 0.0, 1.0));\n    //col = texture(iChannel0, uv);\n    // Output to screen\n    fragColor = col;\n}","name":"Buffer C","description":"","type":"buffer"}]}