{"ver":"0.1","info":{"id":"dtfGW4","date":"1671741285","viewed":119,"name":"asdasdasd_glitch_based on three ","username":"mishazawa","description":"glitch based on three js glitch postfx","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["glitch","threejs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float amount = 0.08;\n    float angle = 0.02;\n\tfloat seed = rand(vec2(int(iTime)%iFrame, iFrame%int(iTime)));\n\tfloat seed_x = rand(vec2(seed));\n\tfloat seed_y = rand(vec2(seed_x));\n\tfloat distortion_x = rand(vec2(seed_y, seed_x));\n\tfloat distortion_y = .6;\n\tfloat col_s = rand(vec2(0.06*iTime));\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\n    \n    float bypass = rand(vec2(20* iFrame % int(24.+col_s)));\n    \n    if(bypass<.005) {\n        vec2 p = uv;\n        float xs = floor(gl_FragCoord.x / 0.5);\n        float ys = floor(gl_FragCoord.y / 0.5);\n\t\n        float disp = texture(iChannel1, p*seed*seed).r;\n\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n\t\t\t\t\tif(seed_x>0.){\n\t\t\t\t\t\tp.y = 1. - (p.y + distortion_y);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp.y = distortion_y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\n\t\t\t\t\tif(seed_y>0.){\n\t\t\t\t\t\tp.x=distortion_x;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp.x = 1. - (p.x + distortion_x);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tp.x+=disp*seed_x*(seed/5.);\n\t\t\t\tp.y+=disp*seed_y*(seed/5.);\n\t\t\t\t//base from RGB shift shader\n\t\t\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));\n\t\t\t\tvec4 cr  = texture(iChannel0, p + offset);\n\t\t\t\tvec4 cga = texture(iChannel0, p);\n\t\t\t\tvec4 cb  = texture(iChannel0, p - offset);\n\t\t\t\tfragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n\t\t\t\t//add noise\n\t\t\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\n\t\t\t\t// fragColor += snow;\n    } else {\n        fragColor = texture (iChannel0, uv);\n    }\n \n\n}","name":"Image","description":"","type":"image"}]}