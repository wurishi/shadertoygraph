{"ver":"0.1","info":{"id":"XddGD4","date":"1449684019","viewed":323,"name":"All my shaders (so far)","username":"RenoM","description":"all 9 of my shaders so far\nclick on the menu in the bottom left to change shader","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"/*\n     Use the mouse to click in the bottom left menu\n*/\n\n#define C(A,B,C) if(p.x==(A).x&&p.y==(A).y&&T>float(B)){if(B==16&&T>81.||B==61&&T>70.)return false;float d=distance(f,vec2(.5));if(d<=.5){pl=C;pl=B==int(T)&&abs(f.x-.5)<=.2&&abs(f.y-.5)<=.2?1.-pl:pl;return true;}}\n\n#define T (mod(iTime,55.)*2.)\nmat4 g[3];\n\nvec2 coord(float x, float n)\n{\n    float s=.0;\n    for(float i=4.;i>=0.;i--)\n    {\n        if(x>=n)\n        {\n            x-=n;\n            s+=pow(2.,i);\n        }\n        n*=.5;\n    }\n    return vec2(x,s);\n}\n\nvec4 convert(float x)\n{\n    vec4 s;\n    vec2 co=coord(x,524288.); s.x=co.y;\n    co=coord(co.x,16384.); s.y=co.y;\n    co=coord(co.x,512.); s.z=co.y;\n    co=coord(co.x,16.); s.w=co.y;\n\treturn s;\n}\n\nbool move(vec2 p, out float pl)\n{\n    g[0]=mat4(102916.,167024.,540849.,109098.\n             ,462342.,363985.,509392.,571500.\n             ,174417.,176689.,477775.,573006.\n             ,443949.,606768.,607794.,538156.);\n    g[1]=mat4(474544.,508338.,510546.,411055.\n             ,410030.,506223.,411972.,331044.\n             ,526627.,398662.,203172.,429124.\n             ,103523.,100456.,70730.,74857.);\n    g[2]=mat4(76938.,109707.,143436.,43179.\n             ,208009.,73897.,113807.,112720.\n             ,209098.,205066.,81038.,144429.\n             ,79043.,200932.,198883.,169507.);\n    vec2 f=fract(p);\n    p=ceil(p);\n    for(int i=0;i<3;i++)\n    {\n        for(int j=0;j<4;j++)\n        {\n            for(int k=0;k<4;k++)\n            {\n                int nb=2*k+8*j+32*i;\n                vec4 conv=convert(g[i][j][k]);\n                C(conv.xy,nb,.0) C(conv.zw,nb+1,1.)\n            }\n        }\n    }\n    return false;\n}\n\nvec3 white(vec2 p)\n{\n    p=2.*fract(p)-1.;\n    float r=length(p);\n    vec3 c=1.3*vec3(.6,.45,.15);\n    if(r<1.)\n    {\n        float f=smoothstep(1.,.9,r);\n        c=mix(c,vec3(.7,.7,.6),f);\n        c*=1.2-r/5.;\n        f=smoothstep(.98,.0,length(p-vec2(.2,.24)));\n        c+=f*.4;\n    }\n    return c;\n}\n\nvec3 black(vec2 p)\n{\n    p=2.*fract(p)-1.;\n    float r=length(p);\n    vec3 c=vec3(.6,.45,.15);\n    if(r<1.)\n    {\n        float f=smoothstep(1.,.85,r);\n        c=mix(c,vec3(0),f);\n        f=smoothstep(.0,.98,r);\n        c=mix(c,vec3(0,0,.2),1.-f);\n        f=smoothstep(.98,.0,length(p-vec2(.2,.24)));\n        c+=f*.7;\n    }\n    return c;\n}\n\nvec3 board(vec2 p)\n{\n    if(p.x>=.5&&p.x<18.5&&p.y>=.5&&p.y<18.5)\n    {\n        float d;\n        vec2 f=fract(p);\n        if(distance(p,vec2(9.5))<=.15\n         ||distance(p,vec2(3.5,9.5))<=.15\n         ||distance(p,vec2(9.5,3.5))<=.15\n         ||distance(p,vec2(3.5,3.5))<=.15\n         ||distance(p,vec2(15.5,9.5))<=.15\n         ||distance(p,vec2(9.5,15.5))<=.15\n         ||distance(p,vec2(15.5,15.5))<=.15\n         ||distance(p,vec2(3.5,15.5))<=.15\n         ||distance(p,vec2(15.5,3.5))<=.15)\n            return vec3(0);\n        if(abs(.5-f.x)<=.07||abs(.5-f.y)<=.07)\n            return mix(vec3(0),vec3(.6,.45,.15),smoothstep(.0,.07,min(abs(.5-f.x),abs(.5-f.y))));\n    }\n    return p.x>=-.5&&p.x<19.5&&p.y>=-.5&&p.y<19.5?vec3(.6,.45,.15):vec3(.1);\n}\n\nvec3 shusaku(vec2 U)\n{\n    vec2 R=iResolution.xy,\n         p=11.*(U+U-R)/R.y+9.5;\n    float pl;\n    vec3 c=board(p);\n    if(move(p,pl))c=pl==1.?white(p):black(p);\n    vec2 q=(p+22.)/24.;\n    return sqrt(q.x*q.y)*.8*c;\n}\n\n#define SCALE 20.\n#define SPEED 9.\n#define FREQUENCY .3\n\nfloat d;\n#define X(p)  min(1., sqrt(10.*abs(length(p-.5)-.4)))\n#define D(p,o)  ( (d=length(p-o)*5.)<=.6 ? d:1. )\n\nvec3 CircleWave(vec2 U, vec2 F)\n{\n    vec2 p = SCALE*(U+U/F)/F.y,\n         f = fract(p);\n    p=floor(p);\n    float t=(p.x+p.y)*FREQUENCY\n           +iTime*SPEED;\n    vec2 o=vec2(cos(t),sin(t))*.4+.5;\n    return vec3(X(f)*D(f,o));\n}\n\n#define TAU 6.283185\n#define A(a) if(a>.25)a=.5-a;\n#define B(a,b) sqrt(max(.0,1.-a*length(uv-vec2(b))))\n#define R (iResolution.xy)\n\nvec2 rot(vec2 uv,float theta)\n{\n    vec2 t=vec2(cos(theta),sin(theta));\n    return uv*mat2(t,-t.y,t.x);\n}\n\nvec3 image(vec2 uv,bool inv,out float d)\n{\n    uv.x*=R.x/R.y;\n    d=length(uv);\n    uv/=4.5*sin(iTime)+5.5;\n    uv=rot(uv,mod(iTime,TAU));\n    if(inv)\n        uv*=pow(.4/length(uv),2.);\n    uv=mod(abs(uv),.5);\n    A(uv.x) A(uv.y)\n    return vec3(B(4.,.0)+B(1./(sqrt(0.125)-.25),.25));\n}\n\nvec3 icg(vec2 U, vec2 F)\n{\n    vec2 uv=2.*U/F-1.;\n    float d;\n    // split screen\n    return uv.x<.0?image(2.*uv+vec2(1,0),false,d):image(uv-vec2(.5,0),true,d)*min(d,1.);\n    // full screen\n    \t// before inversion\n    //return image(2.*uv,false,d);\n    \t// after inversion\n    //return image(uv,true,d)*min(d,1.);\n}\n\n#define scale 25.\n\nfloat superellipse(vec2 uv,vec2 o,float r,float n)\n{\n    float res=pow(abs((uv.x-o.x)/r),n)+pow(abs((uv.y-o.y)/r),n);\n    return res<=1.?sqrt(1.-res):.0;\n}\n\nvec3 putPixel(vec2 uv)\n{\n    return superellipse(fract(uv),vec2(.5),.5,3.5)*vec3(.1,.9,.07);\n}\n\nvec3 mpb(vec2 U, vec2 F)\n{\n    vec2 uv=(2.*U-F)/F.y*scale,\n        fuv=floor(uv)+.5,\n          t=vec2(sin(iTime),cos(iTime))*scale/2.,\n         o1=vec2(0,t.x),\n         o2=vec2(1.7*t.x,0),\n         o3=2.*t.yx;\n    vec3 l=vec3(distance(o1,fuv),distance(o2,fuv),distance(o3,fuv)),\n    \t g=scale*vec3(.5/(l.x*l.x),1./(l.y*l.y),.75/(l.z*l.z));\n    return g.x+g.y+g.z>10./scale?putPixel(uv):vec3(0);\n}\n\nconst float lim=1000.;\n\nbool isPrime(float n)\n{\n    n=floor(n);\n    if(n==2.)return true;\n    if (n==1.||mod(n,2.)==.0)return false;\n    for(float i=3.;i<=6000.;i+=2.)\n    {\n        if(i*i>n)\n            break;\n        if(mod(n,i)==.0)\n            return false;\n    }\n    return true;\n}\n\nvec3 pv(vec2 U, vec2 F)\n{\n    vec2 u=floor(150.*U/F.y);\n\tfloat n=(u.x+u.y+1.)*(u.x+u.y+2.)/2.-u.y;\n    return vec3(0,isPrime(n)&&n<500.*iTime,0);\n}\n\n#define size 33.\n\nfloat hash12(vec2 p)\n{\n    return  fract(sin(dot(p.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec3 hash32(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(443.8975,397.2973, 491.1871));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\nvec3 rsug(vec2 U, vec2 F)\n{\n\tvec2 uv = U/F.y;\n    uv *= size;\n    float d=length(uv);\n    uv *= pow(size/d, 2.);\n    vec2 frac = fract(uv);\n    uv = floor(uv);\n    vec3 col = vec3(.0);\n    float time = ceil(iTime);\n    float res = superellipse(frac, vec2(.5), .5, 4. * hash12(uv * time));\n    vec3 hash = hash32(uv);\n\tcol = mod(time, 2.) == .0 ? hash * res : (1. - hash) * res;\n    return col*d/size;\n}\n\nvec2 sFract(vec2 x) // sFract function by Shane\n{\n\tx = fract(x);\n\treturn min(x, x*(1.-x)*16.); // The last term controls falloff.\n}\n\nvec3 snc(vec2 U, vec2 F)\n{\n    vec2 p=abs(U+U-F)/F.y;   \n    float b=length(p*=length(p)),\n          a=length(--p),\n          t=iTime;    \n    p*=20.*(p+1.)*abs(sin((a-t)/2.)*sin(b+t/4.))+abs(sin(a*b+2.*t/3.));\n    return length(sFract(p))*(1.-b)*(.5+.5*sin(t/vec3(3,7,17)));\n}\n\n#define PI 3.14159265\n#define Z(a,b) 1.-abs(2.*(a-b.x)/(b.y-b.x)-1.)\n#define S(op,a,b) l=vec2(op(uv.x+iTime*a))+vec2(-eps,eps);if(uv.y>l.x&&uv.y<l.y)b+=Z(uv.y, l);\n#define s sin(iTime)\n#define eps (.1+.25*s*s)\n\nvec3 sci(vec2 U, vec2 F)\n{\n\tvec2 uv=3.*U/F-1.5,l;\n    uv.x*=2.*F.x/F.y;\n    uv*=pow(5./length(uv),2.);\n    vec3 c=vec3(0);\n    S(sin,.25,c.r)\n    S(sin,.5,c.g)\n    S(sin,.75,c.b)\n    S(cos,.25,c.rg)\n    S(cos,.5,c.rb)\n    S(cos,.75,c.gb)\n    return min(c,1.);\n}\n\nfloat fbm(vec2 p)\n{\n    mat2 m=mat2(.8,.6,-.6,.8);\n    p/=300.;\n    float f=.5*texture(iChannel0,p).x; p*=m*2.02;\n    f+=.25*texture(iChannel0,p).x; p*=m*2.03;\n    f+=.125*texture(iChannel0,p).x; p*=m*2.01;\n\tf+=.0625*texture(iChannel0,p).x;\n    return f/.9375;\n}\n\nvec3 marble(vec2 U, vec2 F)\n{\n    vec2 p=U/R.y,q=(U+U-F)/F.y;\n    vec3 c=vec3(.1);\n    float r=length(q),\n          r2=length(p),\n          a=atan(p.y,p.x);\n    if(r<.8)\n    {\n        c=vec3(.1,.2,.8);\n        float f=fbm(p*5.);\n        c=mix(c,vec3(.3,.9,.1),f);\n        a+=.9*fbm(3.*p)+.1*fbm(30.*p);\n        f=smoothstep(.0,.8,fbm(vec2(6.*r2,20.*a)));\n        c=mix(c,vec3(1),f);\n        f=fbm(vec2(r2*7.,a*12.));\n        c=mix(c,vec3(.9,.3,.2),f);\n        f=smoothstep(.9,.0,r);\n        c*=f;\n        f=smoothstep(.5,.0,length(q-vec2(.3,.4)));\n        c+=vec3(.9,.8,.7)*.8*f;\n        f=smoothstep(.75,.8,r);\n        c=mix(c,vec3(.1),f);\n    }\n    return c;\n}\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 r=iResolution.xy/8.,\n         s2=r/3.;\n    vec3 c=vec3(0);\n    if(U.x<r.x && U.y<r.y)\n    {\n        c=U.x<s2.x?(U.y<s2.y?board(11.*(U+U-s2)/s2.y+9.5):U.y<2.*s2.y?CircleWave(vec2(U.x,U.y-s2.y),s2):icg(vec2(U.x,U.y-2.*s2.y),s2)):\n          U.x<2.*s2.x?(U.y<s2.y?mpb(vec2(U.x-s2.x,U.y),s2):U.y<2.*s2.y?pv(U-s2,s2):rsug(vec2(U.x-s2.x,U.y-2.*s2.y),s2)):\n          U.y<s2.y?snc(vec2(U.x-2.*s2.x,U.y),s2):U.y<2.*s2.y?sci(vec2(U.x-2.*s2.x,U.y-s2.y),s2):marble(U-2.*s2,s2);\n    }\n    else if(iMouse.x<R.x && iMouse.y<R.y)\n    {\n        c=iMouse.x<s2.x?(iMouse.y<s2.y?shusaku(U):iMouse.y<2.*s2.y?CircleWave(U,R):icg(U,R)):\n          iMouse.x<2.*s2.x?(iMouse.y<s2.y?mpb(U,R):iMouse.y<2.*s2.y?pv(U,R):rsug(U,R)):\n          iMouse.y<s2.y?snc(U,R):iMouse.y<2.*s2.y?sci(U,R):marble(U,R);\n    }\n    O.xyz=c;\n}","name":"Image","description":"","type":"image"}]}