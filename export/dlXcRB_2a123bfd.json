{"ver":"0.1","info":{"id":"dlXcRB","date":"1690881333","viewed":65,"name":"Swirl Projector","username":"float1987","description":"Fun Effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COUNT 128.\n#define TAU 6.283185\n#define PI 3.141592\n\nvec2 N(float a) {\n    return vec2(sin(a),cos(a));\n}\n\nmat2 Rot(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c,-s,s,c);\n}\n\nfloat DrawDot(vec2 uv, vec2 offs, float r,float blur) {\n    float s = .01;\n    vec2 p = uv -offs;\n    float d = smoothstep(s, s - blur,length(p)-r);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    float b = 1.5/iResolution.y;\n    \n    for(float i = 0.; i < COUNT; i++) {\n        float t = (fract(iTime/3.) + i / COUNT);\n\n        vec2 dir = N(6.2831 * 4.*i/ COUNT);\n        vec2 offset = dir * t;\n        float s = sin(i / COUNT * PI)* .5 + .5;\n        float c = cos(i / COUNT * PI)* .5 + .5;\n        float s2 = sin(i / COUNT * TAU)* .5 + .5;\n        col += DrawDot(uv,vec2(offset),.005,b) * vec3(s,c,s2);\n        \n        t -= 1.;\n        t = max(0.,t);\n        offset = dir * t;\n        col += DrawDot(uv,vec2(offset),.005,b) * vec3(s,c,s2);\n    }  \n    \n    fragColor = vec4(col,1.0);\n   \n}","name":"Image","description":"","type":"image"}]}