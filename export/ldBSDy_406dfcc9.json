{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"precision highp float;\n\nconst int mi = 40;\nconst float zoom = 1.0;\nvec2 c;\n\nvec3 lerp(float n) {\n\treturn vec3(sin(n)+1.0,\n               sin(n+3.1415926*2.0/3.0)+1.0,\n               sin(n+3.1415926*4.0/3.0)+1.0)/2.0;\n}\n\n//---------cplx functions--------------------------------\n\nvec2 mult(vec2 a, vec2 b) {\n\treturn vec2(a.x*b.x - a.y*b.y, a.x*b.y + b.x*a.y);\n}\nvec2 div(vec2 a, vec2 b) {\n\treturn vec2(a.x*b.x + a.y*b.y, a.y*b.x - a.x*b.y)/(b.x*b.x + b.y*b.y);\n}\nvec2 powC() {\n    return vec2(0.0, 0.0);\n}\n\n//------------end cplx-----------------------------------\n\nvec2 f(vec2 z) {\n\treturn mult(mult(z+c.x, z-c.x), mult(vec2(z.x, z.y-c.y), vec2(z.x, z.y+c.y)));\n}\nvec2 fp(vec2 z) {\n    float l = 0.01;\n    return (f(z+l)-f(z))/l;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    c = (iMouse.xy-iResolution.xy/2.0)/iResolution.xy*3.0;\n    vec2 z = (fragCoord.xy-(iResolution/2.0).xy)/iResolution.x*zoom, oz;\n    float i;\n    for(int iters = 0; iters < mi; iters++){\n        i = float(iters);\n        oz = z;\n        z -= div(f(z), fp(z));\n        if(abs(length(z)-length(oz)) < 0.000001) break;;\n    }\n    fragColor = vec4(lerp(i/100.0 + z.x), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldBSDy","date":"1415462812","viewed":234,"name":"Newton Fractals","username":"puzzleweaver","description":"just a newton fractal.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["newtonsmethod"],"hasliked":0,"parentid":"","parentname":""}}