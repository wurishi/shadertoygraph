{"ver":"0.1","info":{"id":"Wt33zN","date":"1581322649","viewed":140,"name":"Fenderson Shrooms","username":"a1pha1","description":"A Jerobeam Fenderson inspired shader","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["oscilloscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getGrid(vec2 q)\n{\n    float grid = 1.0;\n    grid *= 1.0-smoothstep( 0.98, 0.99, 2.0*abs(fract( q.x*10.0 )-0.5) );\n    grid *= 1.0-smoothstep( 0.96, 0.98, 2.0*abs(fract( q.y*6.0 )-0.5) );\n    grid *= 1.0-smoothstep( 0.90, 0.92, 2.0*abs(fract( q.x*50.0 )-0.5) )*\n                smoothstep( 0.84, 0.85, 2.0*abs(fract( q.y* 6.0 )-0.5) );\n    grid *= 1.0-smoothstep( 0.91, 0.92, 2.0*abs(fract( q.y*30.0 )-0.5) )*\n                smoothstep( 0.85, 0.86, 2.0*abs(fract( q.x*10.0 )-0.5) );\n    return grid;\n}\n\nfloat sdLine( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat getIntensity(vec2 p, float start, float stop)\n{\n    float segments = SEGMENTS_PER_SECOND * FRAME_LENGTH;\n    float total = 0.;\n    float duration = stop-start;\n    float steps = duration / segments;\n    for(float i = 0.; i < segments-1.; i++)\n    {\n        vec2 pos1 = map(start+steps*i);\n      \n        if(length(pos1 - p)<0.1)\n        {\n            vec2 pos2 = map(start+steps*(i+1.));\n        \tfloat d = sdLine(p, pos1, pos2);\n            float l = length(pos1 - pos2);\n            \n            float intensity = exp( -1000.0*d )*1.00 + \n                 exp( - 150.0*d )*0.005;\n            \n            if(intensity > 0.1)\n            {\n                i+=1.;\n            }\n            intensity *= exp(-60.*l)*1.3;\n\n            total += intensity * duration*100.;\n        }\n    }\n    return 0.01* total / duration;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.2, 0.7, 0.2) * (0.01+getIntensity(uv,  iTime, iTime+FRAME_LENGTH));\n    \n    col *= 0.9+getGrid(fragCoord.xy/iResolution.xy);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp, float time )\n{\n    vec2 sound = map(time);\n    return vec2(sound.x+sound.y)*1.;\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"const float PI = 3.14159265359;\nconst float TWO_PI = PI*2.;\nconst float FRAME_LENGTH = 0.025;\nconst float SEGMENTS_PER_SECOND = 100000.;\nfloat MUSHROOM_COUNT = 1.;\n\nvec2 ring(float time)\n{\n    float f1 = 75.;\n    float f2 = f1*1.99;\n    return (vec2(sin(time*TWO_PI*f1), 0.7*cos(time*TWO_PI*f1))*0.3+vec2(sin(time*TWO_PI*f2), cos(time*TWO_PI*(f2*2.)))*0.2);\n}\n\nvec2 spiral(float time)\n{\n    float f = 150.;\n    float f2 = 30.5;\n    float saw = mod(time*f2, 1.);\n    vec2 circle = vec2(sin(time*TWO_PI*f), cos(time*TWO_PI*f))*(saw*saw*0.5);\n    return circle;\n}\n\nvec2 shroom(float time, float speed)\n{\n     float f = 75.;\n    float freq = 60.;\n    vec2 circle = vec2(cos(time*freq*f*TWO_PI)*0.6/freq, sin(time*freq*f*TWO_PI)*0.3/freq)-vec2(0., 0.4);\n    float saw = mod(time*f, 1.);\n    vec2 shroom = circle + vec2(0., saw*0.8);\n    if(mod(time*f+0.25, 1.)<0.25)\n    {\n        shroom.x *= 13.*abs(sin(time*f*TWO_PI));\n    }\n    shroom += vec2(saw*cos(time*f*TWO_PI*(speed)/MUSHROOM_COUNT)*0.3, 0.);\n    return shroom.xy;\n}\n\nvec2 graph(float time)\n{\n    float speed = 0.98;\n    MUSHROOM_COUNT = 1.;\n    if(sin(time*0.5*TWO_PI)>0.)\n    {\n        MUSHROOM_COUNT = 2.;\n        speed = 1.;\n    }\n    \n    vec2 shroom = shroom(time, speed);\n    \n   \n    if(sin(time*0.5*TWO_PI)>0.)\n    {\n        shroom *= float(sin(time*6.*TWO_PI)>0.6);\n    }\n    return shroom.xy;\n}\n\nvec2 map(float time)\n{\n    return shroom(time, 0.99);\n    //return ring(time);\n    //return spiral(time);\n    //return graph(time);\n}","name":"Common","description":"","type":"common"}]}