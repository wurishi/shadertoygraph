{"ver":"0.1","info":{"id":"4Xy3RG","date":"1717770021","viewed":108,"name":"Basic Grid Shader","username":"gllama","description":"Learning slowly, wanted to make a grid. CC0-1.0 ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// üèÅ Basic Grid Shader\n// License CC0-1.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    // How often to draw lines \n    float interval = .07;\n    // Line thiccness\n    float thicc = .005;\n\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy; \n    // Start with black\n    vec3 col = vec3(0,0,0);\n\n\n    // Draw gridlines based on UV (float offset used to center the grid)\n    float offset = (thicc/2.0) - ((1.-interval)/2.);\n    if(mod(uv.x+offset,interval)<thicc || mod(uv.y+offset,interval)<thicc){\n        col = vec3(1,0,1);\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}