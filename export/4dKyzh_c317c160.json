{"ver":"0.1","info":{"id":"4dKyzh","date":"1521604303","viewed":319,"name":"waveform / spectrogram","username":"ItsOnlyKatniss","description":"Drag the mouse to switch between waveform / FFT.\n\nreplace iChannel0 with your own soundcloud link","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["wave","soundcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = vec4(texture(iChannel0, fragCoord/iResolution.xy).rgb, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float wave(float x) {\n    float mx = iMouse.x;\n    if(mx < 50.0) mx = 0.0;\n    if(mx > iResolution.x - 50.0) mx = iResolution.x;\n    return (texture(iChannel0, vec2((x + 1.0) / 2.0, (mx / (iResolution.x - 2.0)) < (x / 2.0) + 0.5 ? 1.0 : 0.0)).x * 2.0) - 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = ((fragCoord/iResolution.xy) * 2.0) - 1.0;\n    \n    // Time varying pixel color\n    \n    float x1 = uv.x;\n    \n    float f1 = wave(x1);\n    float f2 = wave(x1 + (2.0 / iResolution.x));\n    \n    float f3 = min(f1, f2);\n    float f4 = max(f1, f2);\n    \n    float y = clamp(uv.y, f3, f4);\n    \n    float width = 0.1;\n    float d = abs(uv.y - y);\n    float l = width / sqrt(d);\n    \n    //l = 0.0;\n    //if(uv.y >= f3 && uv.y <= f4) l =1.0;\n    //l = d < 0.1 ? 1.0 : 0.0;\n    vec3 col = vec3(0.2, 0.8, 0.3) * (l * l);\n    col = clamp(col, 0.0, 1.0);\n\tvec3 last = texelFetch(iChannel1, ivec2(fragCoord), 0).rgb;\n    // Output to screen\n    fragColor = vec4(last * 0.5 + col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}