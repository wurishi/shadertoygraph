{"ver":"0.1","info":{"id":"DtcXzf","date":"1685697009","viewed":100,"name":"Fork Laser Tunn Netgfx 510","username":"Netgfx","description":"Just a quick little shader I made when I was bored. I think it looks pretty good.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","abstract","moving","neon","dark"],"hasliked":0,"parentid":"XdfSz7","parentname":"Laser Tunnel"},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define PI 3.14159265359\n#define REC_PI .3183098862\nfloat lenSq(vec2 c) {\n\treturn dot(c,c); //c.x*c.x + c.y*c.y;\n}\nvec2 get_polar(vec2 cart) {\n\tvec2 pol = vec2(atan(cart.y, cart.x), log(lenSq(cart)));\n\tpol.x = pol.x * REC_PI * 0.5 + 0.5;\n\treturn pol;\n}\nfloat roundTo(float x, float prec) {\n\treturn round(x*prec)/prec; //(floor(x*prec)+.5)/prec;\n}\nfloat get_beam(vec2 pol, float prec) {\n\treturn texture(iChannel1, vec2(roundTo(pol.x, prec), roundTo((pol.y+pol.x*0.1)*.01-iTime*.1,prec)*0.5)).r;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 2. - 1.;\n\tvec2 pol = get_polar(uv);\n\tfloat prec = 256.0;//iChannelResolution[1].x;\n\tfloat beam = get_beam(pol, prec);\n\tbeam = clamp(beam * 1024. - 880., 0.00, 0.5);\n\tbeam *= sin((pol.x * prec - 0.5) * PI * 2.) * .5 + 2.0;\n    \n\tfragColor = vec4(beam*1.0, beam*1.0, beam*1.0, 1.0);\n    //vec4(beam*1.0, beam*1.0, beam*1.0, 1.0);//vec4(0.0, clamp(beam * 0.5, beam * 1.0, 1.0), beam*1.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}