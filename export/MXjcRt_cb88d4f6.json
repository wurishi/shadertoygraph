{"ver":"0.1","info":{"id":"MXjcRt","date":"1727612341","viewed":22,"name":"ripple3436765050373775","username":"HaleyHalcyon","description":"asasasasas","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["asasasasa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU (3.14159265 * 2.)\n#define R(x) mat2(cos(x + TAU * vec4(0,.25,-.25,0)))\n\nvec3 color(vec2 uv, float t) {\n    uv *= R(0.4);\n    uv += vec2(2, 3) * t;\n    vec2 ab = step(fract(uv.xy), vec2(0.5));\n    return mix(\n      mix(\n        vec3(0,0,0),\n        vec3(1,0,0.75),\n        ab.r\n      ), mix(\n        vec3(0,0.7,1),\n        vec3(1,1,1),\n        ab.r\n      ), ab.g\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime / 3.);\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    vec2 uvTilt = uv * R(-0.2) / (uv.y - 1.5);\n    uvTilt.y += 0.75;\n    float ripple = sin(TAU * fract(\n        3. * length(uvTilt)\n        - 4. * t\n    ));\n    uvTilt *= 1. + ripple * 0.15;\n    uvTilt += vec2(0.02, 0.08) * ripple;\n\n    // Time varying pixel color\n    vec3 col = color(uvTilt, t);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}