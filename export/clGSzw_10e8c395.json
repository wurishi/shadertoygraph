{"ver":"0.1","info":{"id":"clGSzw","date":"1686069881","viewed":136,"name":"kaleidoscope6678","username":"orpheus6678","description":"i merely followed along this gem of a tutorial https://youtu.be/f4s1h2YETNY\nlost sight of logic after i included fractals. after that, it was pure tweaking.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    \n    return a + b * cos(6.28318 * (t*c+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv0 = (fragCoord * 2.0 - iResolution.xy) / iResolution.y,\n          uv = uv0;\n    vec3 color = vec3(0.0);\n    for (float i=0.0; i<4.0; i++) {\n        uv = fract(1.5 * uv) - 0.5;\n        float d0 = length(uv0);\n        float d = length(uv) * exp(-d0);\n        color += pow(0.01 / abs(sin(8.0 * d + iTime) / 8.0), 1.2)\n              *  palette(d0 + (i + iTime) * 0.4);\n    }\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}