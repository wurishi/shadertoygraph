{"ver":"0.1","info":{"id":"4clSzs","date":"1705600946","viewed":73,"name":"#016","username":"jvincent","description":"Featuring Seb's Colors function (just rainbow but at seizure speeds, toned down here because I care about aesthetics)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fast","spiral","rainbow","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi    3.14159265358\n#define tpi   (2.0*pi)\n#define pi_6  pi/6.0\n\nvec3 sebs_colors(float offset, float speed)\n{\n    return 1.0 - sin(offset + speed * iTime * vec3(3.0, 7.0, 11.0)/pi_6);\n}\n\nfloat circle(vec2 uv, float angle, float radius, vec2 wiggle)\n{\n    return 0.0025/abs(length(uv) - radius + wiggle[0] * sin(iTime) * sin(10.0 * (angle - 10.0 * iTime) + wiggle[1]));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    vec3 color = vec3(0.0);\n    \n    float angle = pi*mod(atan(uv.x, uv.y)/tpi, 1.0);\n    \n    for(float i = 1.0; i < 10.0; i++)\n    {\n        color += sebs_colors(0.0, 25.0) * circle(uv, angle + 3.0*pi_6, i/7.0, vec2(i, i));\n    }\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}