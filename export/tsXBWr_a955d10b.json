{"ver":"0.1","info":{"id":"tsXBWr","date":"1588017926","viewed":125,"name":"challenge 2","username":"TosterMocy","description":"wip","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["dna"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox(in vec2 p, in vec2 b)\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float angle = 0.2; //kat w radianach\n    \n    vec2 uv = (fragCoord *2.0 - iResolution.xy) / iResolution.y;\n    \n    \n    uv *= mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    uv*=3.0;\n    uv.x+=iTime*3.0;\n    float uvID = floor(uv.x);\n    uv.x = fract(uv.x);\n    \n    float pixelSize = 2.0 / iResolution.y;\n    \n    \n    \n    \n    float squareSDF = sdBox(vec2(uv.x-0.5,uv.y), abs(vec2(0.05, sin(uvID/2.0+iTime))));\n    float square = 1.0 - smoothstep(-pixelSize, pixelSize, squareSDF);\n    float radius1 = abs(sin(abs(uv.x)+iTime/2.0+3.14)/3.0);\n    float radius2 = abs(cos(abs(uv.x)+iTime/2.0+3.14)/3.0);\n   \n    float sin1 = 1.0 - smoothstep(radius1-pixelSize, radius1 + pixelSize, distance(uv, vec2(0.5, sin(uvID/2.0+iTime))));\n    //float cos1 = 1.0 - step(0.3, distance(uv, vec2(0.5, cos(uvID/2.0+iTime))));\n    float sin2 = 1.0 - smoothstep(radius2-pixelSize, radius2 + pixelSize, distance(uv, vec2(0.5, -sin(uvID/2.0+iTime))));\n   \n    \n    vec4 uvVisualisation = clamp(vec4(uv, 0.0, 0.0), 0.0, 1.0);\n    \n    fragColor =  vec4(square+sin1+sin2) ;\n   \n    \n}","name":"Image","description":"","type":"image"}]}