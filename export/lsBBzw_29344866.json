{"ver":"0.1","info":{"id":"lsBBzw","date":"1500282502","viewed":131,"name":"[SH17A] Shaded Spheres","username":"theGiallo","description":"First attempt at 2 tweets shadertoy. Best viewed in 1920x1080.\nExploiting the [url=https://www.shadertoy.com/view/Xd2BWh]Tiniest Shadertoy Trick[/url] by pellicus and theGiallo.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spheres","sh17a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 o,vec2 c){vec3 r = (vec3(c - vec2(960,540),1920))*5e-4,S = r-r,P;float t = 0., s,l, T = 4e3;for(S.x = -iTime*T;t < 1e6;t += l < .1?(T = max( 0., dot( S = P / s * .5 + .5, vec3(.6,.6,-.6) ) ),o = ( T + .5 + 2. * pow( T, 15. ) ) * vec4(.8,.32,0,0),1e7) : l )P = mod(r * t - S,T) - .5 * T,s = length( P ),l = s - 9e2;}\n/*\nvoid mainImage( out vec4 o, in vec2 c )\n{\n    vec3 r = (vec3(c - vec2(960,540),1920))*5e-4,\n         S = r-r,\n         P;\n    float t = 0., s,l, T = 4e3;\n    for(S.x = -iTime*T;\n        t < 1e6;\n        t += l < .1?\n        (\n            T = max( 0., dot( S = P / s * .5 + .5, vec3(.6,.6,-.6) ) ),\n            o = ( T + .5 + 2. * pow( T, 15. ) ) * vec4(.8,.32,0,0),\n            1e7\n        ) : l )\n    \n        P = mod(r * t - S,T) - .5 * T,\n        s = length( P ),\n        l = s - 9e2;\n}\n*/\n\n/*\n// Original submission.\n#define mainImage(o,c) vec3 S, r = (vec3(c - vec2(960,540),1920))*5e-4,P;S-=S;float t = 0., s,l, T = 4e3;S.x = -iTime*T;for(;t < 1e6;)P = mod(r * t - S,T) - .5 * T,s = length( P ),l = s - 9e2,t = (l < .1?(        \tS = P / s * .5 + .5,P = vec3(.6,.6,-.6),T = max( 0., dot( S, P ) ),P = vec3(1,.4,0),o.rgb = ( .8 * T + .4 ) * P +1.6 * pow( T, 15. ) * P,1e7) :  t + l );\n*/\n/*\nvoid mainImage( out vec4 o, in vec2 c )\n{\n    vec3 S,\n         //r = normalize(vec3(c - iResolution.xy*.5,iResolution.x)),\n         r = (vec3(c - vec2(960,540),1920))*5e-4,\n         P;\n    S-=S;\n    float t = 0., s,l, T = 4e3;\n    S.x = -iTime*T;\n    for(;t < 1e6;)\n    \n        P = mod(r * t - S,T) - .5 * T,\n        s = length( P ),\n        l = s - 9e2,\n        t = (l < .1?\n        (\n        \tS = P / s * .5 + .5,\n            \n            //float w = 1.0 - shadow( point, -sun_light_dir );\n            //S.x = .5; // diffuse_reflection\n            //S.y = 1.; // specular_reflection\n            //S.z = 1.; // ambient_reflection\n            //rp = 15.; // shininess\n            //t = .4; // ambient\n    \t\t//S = vec3(.8,1,1); // sun_specular_color\n            //o.rgb = vec3(1,.4,0), // object color\n            //s = 1.6; // shadow\n            //vec3 L = normalize(vec3(-1,-1,1)); // light direction\n            P = vec3(1,1,-1)*.6, // light direction (normalized) .577\n            //float d = ; // diffuse term\n            \n            // specular is now fake because it needs reflect(r,S)\n            T = max( 0., dot( S, P ) ),\n            P = vec3(1,.4,0),\n            //s = s * pow( rp, 15. ); \n            o.rgb = ( .8 * T + .4 ) * P +\n                    1.6 * pow( T, 15. ) * P,//vec3(.8,1,1),\n            1e7 // break\n        ) :  t + l );\n    \n        /*\n        if ( l < .1 )\n        {\n        \tS = P / s * .5 + .5;\n            \n            //float w = 1.0 - shadow( point, -sun_light_dir );\n            //S.x = .5; // diffuse_reflection\n            //S.y = 1.; // specular_reflection\n            //S.z = 1.; // ambient_reflection\n            //rp = 15.; // shininess\n            //t = .4; // ambient\n    \t\t//S = vec3(.8,1,1); // sun_specular_color\n            o.rgb = vec3(1,.4,0); // object color\n            //s = 1.6; // shadow\n            //vec3 L = normalize(vec3(-1,-1,1)); // light direction\n            P = vec3(1,1,-1)*.58; // light direction (normalized)\n            //float d = ; // diffuse term\n            \n            // specular is now fake because it needs reflect(r,S)\n            T = max( 0., dot( S, P ) );\n            \n            //s = s * pow( rp, 15. ); \n            o.rgb = ( .8 * T + .4 ) * o.rgb + 1.6 * pow( T, 15. ) * vec3(.8,1,1);\n            break;\n        }\n        t +=l;\n}\n        */","name":"Image","description":"","type":"image"}]}