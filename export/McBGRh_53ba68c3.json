{"ver":"0.1","info":{"id":"McBGRh","date":"1703796688","viewed":88,"name":"Fork conway representation","username":"antonOTI","description":"I randomly glimpsed at this type of presentation for game of life and I wanted to code it myself (and also it has been a while since I did a shader).","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["gameoflife","multipass"],"hasliked":0,"parentid":"4ddSRM","parentname":"My own conway's Game of Life"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = mix(vec4(.1),vec4(.9),smoothstep(.5, .525, texture(iChannel0,uv)));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define lookup(pos) texture(iChannel0,pos).x\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 invResolution = 1. / iResolution.xy;\n    vec2 uv = fragCoord.xy * invResolution;\n    \n    float prevState = texture(iChannel0,uv).x;\n    \n    float e = 0.;\n    for (float x = -1.; x <= 1.; ++x)\n    {\n        for (float y = -1.; y <= 1.; ++y)\n        {\n            if (x == 0. && y == 0.)\n            {\n                continue;\n            }\n            \n            e+= lookup(uv + vec2(x, y) * invResolution);\n        }\n    }\n    \n    if( e == 2. && prevState == 1. || e == 3. )\n    \tfragColor= vec4(1.);\n    else\n    \tfragColor= vec4(0.);\n    \n    if(iMouse.z > .5)\n    \tfragColor= max(fragColor,vec4(step(length(iMouse.xy - fragCoord), 5.)));\n    else if (iFrame < 10)\n        fragColor = step(.5, texture(iChannel1, uv)).rrrr;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 invResolution = 1. / iResolution.xy;\n    \n    fragColor = vec4(0.);\n    \n    float kernelSize = 2.;\n    for (float x = -kernelSize; x <= kernelSize; ++x)\n    {\n        for (float y = -kernelSize; y <= kernelSize; ++y)\n        {\n            fragColor += texture(iChannel1, uv + vec2(x, y) * invResolution);\n        }\n    }\n    \n    float side = kernelSize * 2. + 1.;\n    fragColor /= (side * side);\n    fragColor *= .99;\n    \n\tfragColor = max(fragColor, texture(iChannel0,uv));\n}","name":"Buffer B","description":"","type":"buffer"}]}