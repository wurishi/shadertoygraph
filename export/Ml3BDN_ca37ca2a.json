{"ver":"0.1","info":{"id":"Ml3BDN","date":"1539638655","viewed":97,"name":"Hyperbole","username":"t3knomanser","description":"More spinning lines","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","lines","demo","geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat line(vec2 uv, float m, float b, float thickness, float fuzz) {\n    float y = m * uv.x + b;\n    float d = thickness - distance(uv, vec2(uv.x, y));\n    d =  smoothstep(0., thickness, d);\n    if (uv.y >= y - thickness && uv.y <= y + thickness) {\n        return mix(1., d, fuzz);\n    }\n    return 0.;\n}\n\nfloat line(vec2 uv, float m, float b) {\n    return line(uv, m, b, iResolution.y / 100000., 0.);\n}\n\nfloat line(vec2 uv, float m, float b, float thickness) {\n    return line(uv, m, b, thickness, 0.);\n}\n\nfloat line(vec2 uv, float thickness) {\n    return line(uv, 0., 0., thickness);\n}\n\nvec2 translate(vec2 uv, vec2 offset) {\n    return uv - offset;\n}\n\nvec3 p = vec3(1.0, 0.3333, 1.0);\nvec3 b = vec3(0.3333, 1.0, 1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float numLines = 30. * smoothstep(0.0, 1., abs(sin(iTime*0.15)));\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = translate(uv, vec2(0.5, 0.5));\n    uv *= rotate2d(-iTime);\n\tvec3 col;\n    for (float i = -numLines; i < numLines; i++) {\n        vec2 shift = uv * rotate2d(i * 2. * 3.14 / numLines);\n        shift += translate(uv, vec2(0., 0.1));\n        col += vec3(\n            line(shift, 1.5/iResolution.x)\n        ) * (i < 0. ? p : b);\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}