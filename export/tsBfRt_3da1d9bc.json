{"ver":"0.1","info":{"id":"tsBfRt","date":"1590589130","viewed":362,"name":"multicenters bispirale 102 chars","username":"FabriceNeyret2","description":"reference: [url]https://cdn.futura-sciences.com/buildsv6/images/mediumoriginal/b/b/f/bbf7f1f5c8_50163809_parcdeladistance-precht-3.jpg[/url]","likes":15,"published":3,"flags":0,"usePreview":0,"tags":["short","onetweet","golf","spirale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  ---------- readable commented version at bottom\n\n// ---  -3 by iapafoto\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  R = iResolution.xy,\n          U = u+u - R;\n    O = .5 - cos( 58.6* length( U/R.y+ (U.x>U.y?.265:-.265) )) + O*0.; }  /*\n // O += .5 - cos( 58.6* length( U/R.y+ (U.x>-U.y?.265:-.265) * vec2(1,-1) ))  /*\n\n\n\n\n\n// --- 105 chars\n\n#define mainImage(O,u)                               \\\n    vec2  R = iResolution.xy,                        \\\n          U = ( u+u - R ) / R.y;                     \\\n    U +=   U.x> U.y ? .265:-.265;                    \\\n /* U += ( U.x>-U.y ? .265:-.265 ) * vec2(1,-1); * /  \\\n     O += .5 - cos( 58.6* length(U) )               /* \n\n\n\n\n\n// --- 122 chars\n\n#define mainImage(O,u)                                \\\n    vec2  R = iResolution.xy,                         \\\n          U = ( u+u - R ) / R.y * mat2(1,-1,1,1)/1.4; \\\n    U.x += sign(U.y)*.375;                            \\\n    O += .5 - cos( 58.6* length(U) )                 /* \n\n\n\n\n\n// --- 135 chars\n\n#define mainImage(O,u)                          \\\n    vec2  R = iResolution.xy,                   \\\n          U = ( u+u - R ) / R.y                 \\\n             * mat2(cos(-.75+vec4(0,11,33,0))); \\\n    U.x += sign(U.y)*.375;                      \\\n    O += .5 - cos( 58.6* length(U) )           /* \n\n\n\n\n\n// --- 194 chars ---------- readable commented version\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy,\n          U = ( 2.*u - R ) / R.y                // normalized coordinates\n             * mat2(cos(-.75+vec4(0,11,33,0))); // rot\n    float N = 7.,                               // number of row between poles\n          Z = 3., l;                            // scale\n          \n    U.x += sign(U.y)/8.*Z;                      // spiral = 1/2 circle + offset\n    l = cos( 4.*N*6.28* length(U)/Z );          // circles\n    O = vec4( .5 - l / fwidth(l) );             // antialiased strips\n}\n\n/**/","name":"Image","description":"","type":"image"}]}