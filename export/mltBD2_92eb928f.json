{"ver":"0.1","info":{"id":"mltBD2","date":"1701632994","viewed":94,"name":"Shattered circles","username":"ahsan2649","description":"A mix of wavy lines breaking up concentric circles making for a nice trippy outline effect. My first foray into shader coding!","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["2d","circle","outlines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    uv = rotate2d(iTime*0.5) * uv;\n    float waves1 = sin(uv.x * -7. + cos(uv.y * 7.1) + iTime * 1.5);\n \n    float waves2 = sin(uv.y * 5. + cos(uv.x * -3.9) + iTime * 5.5);\n    float circles = length(uv) - 0.5;\n    circles = sin(circles * 11. + iTime*2.);\n    circles = abs(circles);\n    circles = smoothstep(0.002,1.,circles);\n    circles = 0.075/circles;\n    circles = pow(circles, 0.95);\n    float d = waves1 * (1. - waves2) * circles;\n    \n\n    // Output to screen\n    fragColor = vec4(vec3(d,d,d),1.0);\n}","name":"Image","description":"","type":"image"}]}