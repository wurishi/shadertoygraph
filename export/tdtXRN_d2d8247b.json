{"ver":"0.1","info":{"id":"tdtXRN","date":"1571616516","viewed":113,"name":"Mozaic Patern","username":"Numero7","description":"Well my atempt at smoothnoise that did not turn well but I tried to give a fun/glitchyness of it.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["colors","patern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 2.0*asin(1.0)\n\nvec2 rotate(vec2 p, float angle)\n{\n    return vec2(p.x * cos(angle) - p.y * sin(angle), p.x * sin(angle) + p.y * cos(angle));\n}\n\nfloat noise(vec2 p)\n{\n    return fract(sin(p.x * 31536.0656341 - p.y * 14503.056430) * 35014.0);\n}\n\nfloat smoothNoise(vec2 p)\n{\n    vec2 sq = (fract(p) - 0.5) * 2.0;\n    float c = 0.0;\n    float s = 0.0;\n    for (float x = -1.0; x <= 1.0; x++)\n    {\n        for (float y = -1.0; y <= 1.0; y++)\n        {\n            vec2 id = floor(p + vec2(x, y)) - 0.5;\n            float ne = length(abs(vec2(x,y)) - abs(sq));\n            \n            c += noise(id) * ne;\n            s += ne;\n        }\n    }\n    \n    return c / s;\n}\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    uv *= 16.0;\n    uv += iTime * 3.0;\n    uv += rotate(uv, smoothNoise(vec2(sin(iTime * 0.91), cos(iTime * 0.23))));\n    float n = smoothNoise(uv);\n    vec3 col = vec3(sin(1.6 * pi * n), sin(6.3 * pi * n), sin(11.6 * pi * n));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}