{"ver":"0.1","info":{"id":"Nt33RN","date":"1644098797","viewed":252,"name":"nuquerie","username":"louis_C","description":"Fork of the livecoding made during the inercia demoparty, The itereation of the effect has been increased to try to get a smoother result, it may lag more..\nThe effect can be optimize if it's lagging by decreasing the iteration at line 66.","likes":11,"published":1,"flags":40,"usePreview":0,"tags":["raymarching","sound","raycasting","livecoding","voice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 r,in vec2 c){r=texture(iChannel0,c/iResolution.xy);}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 rot(float t){ float c = cos(t); float s = sin(t); return mat2(c,-s,s,c);}\nfloat zl;\nfloat box(vec3 p ,vec3 b){ vec3 q = abs(p)-b;\n  return length(max(q,vec3(0.)))-min(0.,max(q.x,max(q.y,q.z)));}\nfloat map(vec3 p,vec4 ta){\n  vec3 pp = vec3(ta.x,0.,ta.y);\n  float t1 = ta.z;\n  float d4 = length(p*vec3(0.1,5.,0.1)+vec3(0.,-10.-(1.-t1)*100.,0.))-2.;\n  float d1 =  length(p+vec3(0.,2.,0.)+pp)-t1*5.;\n  float d2 = p.y-1.\n +pow(texture(iChannel1,p.xz*0.1).x,0.25)*2.\n  +pow(texture(iChannel1,p.xz*0.5).x,0.25)*2.\n  //+sin(length((p.xz+ta.xy)*2.)-iTime*5.)*t1*0.25\n  -smoothstep(t1*5.,t1*5.+3.,length(p.xz+pp.xz))\n  -smoothstep(t1*5.+1.,t1*5.,length(p.xz+pp.xz))*0.5;\n  vec3 pr = p;\n  pr.xz *=  rot((-p.y)-t1);\n  float d3 = distance(p.y,0.25)-texture(iChannel1,pr.xz*0.05).x+0.55;\n  zl = min(d1,d4); \n  return min(min(d1,min(d3,d2)),d4);}\n  \n  float rm(vec3 p,vec3 r,vec4 ta){\n    float dd = 0.;\n    for(int  i =0 ; i <24 ; i++){\n      float d = map(p,ta);\n      if(dd>20.){dd=20.; break;}\n      if(d<0.01){break;}\n      p += r*d;\n      dd += d;\n    }\n    return dd;\n  }\n  vec3 nor(vec3 p,vec4 ta){vec2 e = vec2(0.01,0.); return normalize(map(p,ta)-vec3(map(p-e.xyy,ta),map(p-e.yxy,ta),map(p-e.yyx,ta)));}\n  float rd(float t){ return fract(sin(dot(floor(t),45.))*7845.26);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv  = fragCoord/iResolution.xy;\n  vec2 uc = uv;\n\tuv -= 0.5;\n  uv *= 2.;\n\tuv /= vec2(iResolution.y / iResolution.x, 1);\n  float tm = smoothstep(0.1,0.,fract(iTime));\n    vec2 pm  = (vec2(texture(iChannel1,vec2(0.5,iTime*5.)).x,texture(iChannel1,vec2(0.25,iTime*5.)).x)-0.5)*0.1;\n  float l2  =step(0.75,fract(iTime*0.5))*step(5.,iTime)*step(0.5,rd(iTime*0.5));\n  float l1 = mix(0.,step(0.5,uc.y),l2);\n  float mmv= pow(texture(iChannel1,vec2(iTime,0.3)).x,0.5);\n  vec3 p = vec3(0.,0.,-2.*mmv-4.);\n  \n\n  vec3 r = normalize(vec3(uv+vec2(0.,-mix(0.5,mix(-0.2,0.5,l1),l2))+tm*pm,rd(iTime)*0.7+0.7));\n  float tt = mix(iTime,-iTime,l1);\n  r.xz *= rot(tt);\n  p.xz *= rot(tt);\n  \n  float tx = fract(floor(iTime)*0.1)*10.;\n  vec2 px  = (vec2(texture(iChannel1,vec2(0.5,tx)).x,texture(iChannel1,vec2(0.25,tx)).x)-0.5)*5.;\n  vec4 ta = vec4(px,pow(fract(iTime*0.7),3.),0.);\n  \n\n\tfloat r2 = 0.;\n  float se = fract(sin(uv.x*iResolution.y+uv.y)*7845.236);\n  float se2 = se*6.28;\n  float a = sqrt(1.-se*se);\n  vec3 rn = vec3(a*cos(se2),a*sin(se2),(se-0.5)*2.);\n  rn *= sqrt(se);\n  for(int  i = 0 ; i < 6 ; i++){\n    float d = rm(p,r,ta);\n    if(step(0.1,zl)>0.2){\n      vec3 pp = p+ r*d;\n      vec3 n = nor(pp,ta);\n      r = n*rn;\n      p = pp+r*0.1;\n    }\n    else{r2=1.;break;}\n  }\n  float b = sqrt(32.);\n  float c = 0.;\n  float d = pow(length(uv.y+0.55),2.)*texture(iChannel1, vec2(0.75,iTime)).x*0.02+0.0003;\n  for(float i = -0.5*b;  i<= 0.5*b ; i +=1.)\n  for(float j = -0.5*b ; j<=0.5*b ; j +=1.){\n    c += texture(iChannel0,uc+vec2(i,j)*d).a;\n  }\n   c*=0.025;\n  float  c2 = c+r2*0.25;\n  vec3 c3 = mix(vec3(1.),3.*abs(1.-2.*fract(c2*0.5+0.4+vec3(0.,-1./3.,1./3.)))-1.,0.1)*c2;\n\tfragColor = vec4(c3,r2);\n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float rd(float t){ return fract(sin(dot(floor(t),45.))*7845.236);}\nfloat no(float t){return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat it(float t, int n){float r = 0.;float a = 0.5;for(int i=0 ; i <n ;i++){\nr += no(t/a)*a; a*=0.5;} return r;}\nvec2 ba1(float time){  vec2 t1 = vec2(0.);\n    float ta =  pow(fract(time*2.),0.6);\n    vec2 tt = vec2(it(ta*10.,5),it(ta*10.+452.236,5))-0.5;\n    vec2 hs = vec2(fract(sin(vec2(dot(45.,time),dot(46.,time)))*7845.236)\n    *0.0015*(1.-ta));\n    for(int  i = 0 ; i < 5 ; i++){\n    float j = float(i);float r1 = 0.2*j;\n    vec2 r2 = (200.+100.*j+tt*(3.+j*0.5))*2.857;\n    vec2 br = 0.2+j*(0.1+hs);\n    t1 += vec2(sin(pow(fract(time*0.5     ),r1)*r2))*br;\n    t1 += vec2(sin(pow(fract(time*0.5+0.25),r1)*r2))*br;\n    t1 += vec2(sin(pow(fract(time*0.5+0.5 ),r1)*r2))*br;\n    t1 += vec2(sin(pow(fract(time*0.5+0.75),r1)*r2))*br;\n    }\n    t1 /=5.;\n    return t1;}\nfloat hash(float x){return fract(sin(x) * 897612.531);}\nfloat epo(float i,float t){float br = step(rd(t*0.1)*8.,i);\nfloat t1 = max(mix(br,1.-br,rd(t*0.1+596.)),smoothstep(0.7,0.8,no(t*0.2)));\nreturn t1;}\nfloat voc(float t, float f, float ft){float x = fract(t * f) / f;\nfloat a=(sin(x*6.5*ft)*.4+sin(x*13.*ft)+sin(x*24.*ft)*.2);\nfloat e=(sin(x*4.*ft)*.4+sin(x*22.*ft)+sin(x*25.*ft)*.2); \nfloat o=(sin(x*5.*ft)*.4+sin(x*10.*ft)+sin(x*25.*ft)*.2);\nfloat r = mix(mix(e,o,smoothstep(0.7,0.8,no(t+236.))),a,smoothstep(0.7,0.8,no(t+956.)));\n   return r* min(x * 1000., 1.) * exp(x * -200.);}\nvec2 form(float t, float var){\n    vec2 v = vec2(0., 0.);\n    for(int i = 0; i < 16; ++i){\n        float h = float(i);\n       \tfloat m = voc(t + h / 3., 60. + pow(2.01, (h - 8.) * .2), var);\n        float pan = hash(h);\n        v.x += m * pan;\n        v.y += m * (1. - pan);\n    }\n    return v * .1;\n   }\n   \nvec2 ba2 (float time){\nvec2 v1 = vec2(0.);float nb = 0.01;\nfor(int  i = 1 ; i <=8 ; i++){\nfloat it = float(i);float bi = epo(it,time);\n nb += bi;\n   v1 +=  form(time,100.*it+50.*sin(time+it*3.14+(1.-fract(time*0.7))))\n   *sin((time+it)/3.14)*bi*smoothstep(0.2,0.8,no(it*45.+time*0.3));\n   }\n  return (v1/nb)*1.5; }\nvec2 ba3 (float time){\nvec2 r = ba2(time);\nfor(float i = 0. ; i<= 8. ; i+=0.25){\nr +=ba2(time+i)/(1.+i*0.2);}return r;}\nvec2 mainSound( int samp, float time )\n{\n   vec2 d = vec2(0.);\n    vec2 t1 = ba1(time*0.5*0.7);\n\td += t1;\n    vec2 t2 =ba3(time)*clamp(time*0.1,0.,1.);\n   d += t2;\n   float tt = step(5.,time)*step(0.5,rd(time*0.5));\n   d += (hash(time*1000000.)-0.5)*0.25*pow(1.-distance(0.75,fract(time*0.5)),500.)*tt;\n   d += (hash(time*1000000.)-0.5)*0.25*pow(1.-distance(0.,fract(time*0.5)),500.)*tt;\n  return d;\n}","name":"Sound","description":"","type":"sound"}]}