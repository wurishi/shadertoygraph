{"ver":"0.1","info":{"id":"4sByzG","date":"1492502903","viewed":245,"name":"Starting Raytracing","username":"Torumu106","description":"Starting raytracing.\nI'll improve this shader.\nBe carefull! Maybe you get sick.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct HitInfo\n{\n\tvec4 color;\n    float dist;\n};\nHitInfo map(vec3 p){\n    vec4 defo = vec4(0.0, 0.0, 0.0, 0.005);\n    vec3 q = fract(p) * 2.0 - 1.0;\n    HitInfo hit;\n    hit.dist = 10000.0;\n    hit.color = defo;\n    float sphere = length(q) - 0.25;\n    /*if(sphere <= 0.01)\n    {\n\t\thit.dist = sphere;\n        hit.color = vec4(1.0, 1.0, 1.0, 1.0);\n    }*/\n    float xaxis = length(vec3(0.0, q.y, q.z)) - 0.15;\n    if(xaxis <= 0.01)\n    {\n\t\t//hit.dist = xaxis;\n        hit.color += vec4(1.0, 0.0, 0.0, 0.05);\n    }\n    float yaxis = length(vec3(q.x, 0.0, q.z)) - 0.15;\n    if(yaxis <= 0.01)\n    {\n\t\t//hit.dist = yaxis;\n        hit.color += vec4(0.0, 1.0, 0.0, 0.05);\n    }\n    float zaxis = length(vec3(q.x, q.y, 0.0)) - 0.15;\n    if(zaxis <= 0.01)\n    {\n\t\t//hit.dist = zaxis;\n        hit.color += vec4(0.0, 0.0, 1.0, 0.05);\n    }\n    hit.dist = min(min(hit.dist, xaxis - 0.01), min(yaxis - 0.01, zaxis - 0.01));\n    return hit;\n}\nvec3 trace(vec3 o, vec3 r)\n{\n    vec3 color = vec3(0.0, 0.0, 0.0);\n    vec3 p = o + r * 6.4;\n    HitInfo mapp = map(p);\n\tfor(float i = 6.4; i > 0.0; i -= max(0.0125, mapp.dist-1.0)){\n    \tvec3 p = o + r * i;\n        HitInfo d = map(p);\n        mapp = d;\n        float dist = length(p-o);\n        if(d.dist <= 0.01){\n            color = d.color.xyz * 1.0 / (1.0 + dist * dist * 0.1) * d.color.w + color * (1.0 - d.color.w);\n        }\n    }\n    return color;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv, 1.0));\n    r += vec3(0.0, r.x * 0.5 * sin(iTime * 2.0) + r.x * 0.1 * sin(iTime * 2.0), 0.0);\n    \n    float the = iTime * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    vec3 o = vec3(0.0, iTime + 0.5, iTime);\n    \n\tfragColor = vec4(trace(o, r),1.0);\n}","name":"Image","description":"","type":"image"}]}