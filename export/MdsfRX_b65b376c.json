{"ver":"0.1","info":{"id":"MdsfRX","date":"1497334876","viewed":263,"name":"Fibonacci/Golden Filling","username":"phi16","description":"Is there an O(1) method to render this pattern??? (like green pattern, but draw circles correctly)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","fibonacci"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy, \n\tuv = (2.*fragCoord.xy - R)/R.y;\n    uv *= 20.;\n \tvec3 col = vec3(0.);\n    float rat = 2.*3.1415926535/((1.+sqrt(5.))/2.);\n \n    for(int i=0;i<400;i++){ // brute force\n        float a = float(i)*rat;\n        float c = cos(a), s = sin(a);\n        vec2 p = sqrt(float(i))*vec2(cos(a),sin(a));\n        if(length(uv-p)<0.5)col.b += 1.;\n    }\n    \n    float ip = pow(length(uv),2.); // estimated index\n    float ap = atan(uv.y,uv.x);\n    int is = int(ip)-5; // search from ip-5 to ip+5\n    for(int i=0;i<=10;i++){\n        int ix = is + i;\n        float a = float(ix)*rat;\n        float c = cos(a), s = sin(a);\n        vec2 p = sqrt(float(ix))*vec2(cos(a),sin(a));\n        if(length(uv-p)<0.5)col.g += 1.;\n    }\n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}