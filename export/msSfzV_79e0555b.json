{"ver":"0.1","info":{"id":"msSfzV","date":"1689883956","viewed":57,"name":"Bars and Noise","username":"SunsetQuasar","description":"played around with the base shader until i got something interesting enough","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pseudo(float h){\nreturn fract(sin(h*12.44)*120836.1294);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.yyx+vec3(1,2,3));\n        \n    //if (uv.y >= sin(iTime + uv.x*10.0)*0.5+0.5) col *= 2.0;\n    float d1 = pseudo(floor(iTime)+(floor(uv.x*16.0)/16.0));\n    float d2 = pseudo(floor(iTime+1.0)+(floor(uv.x*16.0)/16.0));\n    float a = mix(d1, d2, mod(iTime / 2.0, 1.0));\n    float b = mix(d1, d2, mod(iTime, 1.0));\n    if(uv.y + sin(uv.y*75.0+iTime)*0.2 >= b) col /= a;\n    \n    col *= smoothstep(0.0, 1.0, smoothstep(0.0, 1.0, uv.x+(sin(iTime+uv.y*uv.y*0.3)*0.3)));\n    \n    float iTime2 = floor(iTime*8.0)/8.0;\n    vec2 uv2 = floor(uv*(iResolution.xy/4.0))/(iResolution.xy/4.0);\n    \n    col = col+vec3(pseudo(iTime2*uv2.x+uv2.y+0.1)*0.1, pseudo(iTime2*uv2.x+uv2.y+0.4)*0.1, pseudo(iTime2*uv2.x+uv2.y+0.7)*0.1);\n    \n    col = floor(col * 8.0) / 8.0;\n        \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}