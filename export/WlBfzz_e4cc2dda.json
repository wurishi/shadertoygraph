{"ver":"0.1","info":{"id":"WlBfzz","date":"1598176457","viewed":125,"name":"Double pendulum zeroes","username":"neurofuzzy","description":"The classic double pendulum system is examined. Bluish areas are areas where the double pendulum is nearly periodic in time t=iTime/3.0. That is, where it nearly winds up at the same initial conditions.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nThe classic double pendulum system is examined. Bluish areas are areas where \nthe double pendulum is nearly periodic in time t=iTime/3.0. That is, where it \nnearly winds up at the same initial conditions. The starting configuration is \nalways the same, and the canonical momenta p1 and p2 depend on the uv coordinates\nof each pixel.\n\nAs you would expect, things get chaotic for large t.\n*/\n\n\n\nfloat metric(float a1,float b1,float c1,float d1,float a2,float b2,float c2,float d2){\n    return 4.0-2.0*cos(a1-a2)-2.0*cos(b1-b2)+(c1-c2)*(c1-c2)+(d1-d2)*(d1-d2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float colorCutoff=0.0; //Set this to 0 to not have the colors be so washed out. Set it to 1 to make it clear where things are almost periodic\n    float totaltime=iTime/3.0;\n    int ntimesteps=800;\n    float dt=totaltime/float(ntimesteps);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 p=uv*20.5;\n    \n    float theta10=1.0;\n    float theta20=0.0;\n    float p10=(uv.x-1.0)*7.0;\n    float p20=(uv.y-0.9)*7.0;\n    \n    float theta1=theta10;\n    float theta2=theta20;\n    float p1=p10;\n    float p2=p20;\n    \n    \n    /* Leapfrog method for the double pendulum. Code used to generate this is at the end of the file. */\n    for(int i=0;i<ntimesteps;i++){\n       \tfloat theta1tmp = theta1 + (2.*dt*(-1.*p1 + p2*cos(theta1 - 1.*theta2)))/(-3. + cos(2.*(theta1 - 1.*theta2)));\n        float theta2tmp = theta2 + (2.*dt*(-2.*p2 + p1*cos(theta1 - 1.*theta2)))/(-3. + cos(2.*(theta1 - 1.*theta2)));\n        theta1 = theta1tmp;\n        theta2 = theta2tmp;\n        float p1tmp = p1 + dt*(-2.*sin(theta1) - (2.*(-2.*(((p1)*(p1)) + 2.*((p2)*(p2)))*cos(theta1 - 1.*theta2) + p1*p2*(5. + cos(2.*(theta1 - 1.*theta2))))*sin(theta1 - 1.*theta2))/((-3. + cos(2.*(theta1 - 1.*theta2)))*(-3. + cos(2.*(theta1 - 1.*theta2)))));\n        float p2tmp = p2 + dt*((2.*(-2.*(((p1)*(p1)) + 2.*((p2)*(p2)))*cos(theta1 - 1.*theta2) + p1*p2*(5. + cos(2.*(theta1 - 1.*theta2))))*sin(theta1 - 1.*theta2))/((-3. + cos(2.*(theta1 - 1.*theta2)))*(-3. + cos(2.*(theta1 - 1.*theta2)))) - 1.*sin(theta2));\n        p1=p1tmp;\n        p2=p2tmp;\n    }\n    \n    float dist=min(metric(theta10,theta20,p10,p20,theta1,theta2,p1,p2),1.0);\n    \n    \n    \n    fragColor = vec4(max(colorCutoff,0.5*(1.0+cos(theta1)))*dist,max(colorCutoff,0.5*(1.0+sin(theta1)))*dist,1.0-dist,1.0);\n    //fragColor = vec4(max(colorCutoff,0.5*(1.0+cos(theta1)))*dist,max(colorCutoff,0.5*(1.0+sin(theta1)))*dist,dist*max(colorCutoff,0.5*(1.0+sin(theta2))),1.0);\n    //fragColor = vec4(dist,dist,dist,1.0);\n    \n}\n\n\n/* Code used to generate the C Form of the code.\n\ndirection[theta_]={Sin[theta],-Cos[theta]};\npos1=direction[theta1];\npos2=pos1+direction[theta2];\nlagrangian=FullSimplify[1/2 Dt[pos1].Dt[pos1]+1/2 Dt[pos2].Dt[pos2]-pos1[[2]]-pos2[[2]]];\nhamiltonian=FullSimplify[Dt[theta1] p1+Dt[theta2]p2-lagrangian /.First[Solve[{D[lagrangian,Dt[theta1]]==p1,D[lagrangian,Dt[theta2]]==p2},{Dt[theta1],Dt[theta2]}]]];\neoms[t_]=(({Dt[p1]==-D[hamiltonian,theta1],Dt[p2]==-D[hamiltonian,theta2],Dt[theta1]==D[hamiltonian,p1],Dt[theta2]==D[hamiltonian,p2]}//FullSimplify )/. {p1->p1[t],p2->p2[t],theta1->theta1[t],theta2->theta2[t]})/.{Dt[t]->1};\nics[t_]={theta1[0]==1,theta2[0]==0,p1[0]==0,p2[0]==1};\nStringReplace[StringReplace[StringRiffle[{\"float theta1tmp = theta1 + \"<>ToString[CForm[N@FullSimplify@D[hamiltonian,p1]dt]]<>\";\",\n\"float theta2tmp = theta2 + \"<>ToString[CForm[N@FullSimplify@D[hamiltonian,p2]dt]]<>\";\",\n\"theta1 = theta1tmp;\",\n\"theta2 = theta2tmp;\",\n\"float p1tmp = p1 + \"<>ToString[CForm[N@FullSimplify@D[-hamiltonian,theta1]dt]]<>\";\",\n\"float p2tmp = p2 + \"<>ToString[CForm[N@FullSimplify@D[-hamiltonian,theta2]dt]]<>\";\",\n\"p1=p1tmp;\",\n\"p2=p2tmp;\"\n},\"\\n\"] ,{Shortest[\"Power(\"~~x__~~\",2)\"]->\"((\"<>x<>\")*(\"<>x<>\"))\"}],{\"Cos\"->\"cos\",\"Sin\"->\"sin\"}]\n*/\n\n","name":"Image","description":"","type":"image"}]}