{"ver":"0.1","info":{"id":"4sBfWz","date":"1499994378","viewed":420,"name":"Procedural Pseudo-Julias","username":"Ebanflo","description":"What happens when instead of adding a set complex number you add a random one for each iteration? Most of these look pretty messed up but a few look interesting.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["procedural","2d","fractal","experiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.141592654\n\nvec2 cSqr(vec2 c){return vec2(c.x * c.x - c.y * c.y, 2. * c.y * c.x);}\n\nvec2 hash21(float p)//Dave_Hoskins https://www.shadertoy.com/view/4djSRW\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvec4 getCol(vec3 n, int iterations){ //smoother coloration\n    float s = 0.08 * (4.0-length(n.xy)) + n.z;\n    if (n.z==float(iterations))return vec4(0);\n    float arg = pi * s * 2. / float(iterations);\n    vec3 col = sin(vec3(arg - pi / 2., arg - pi, arg - 3. * pi / 2.)) * 0.5 + 0.5;\n    return vec4(col*col, 1.);\n}\n\nvec3 fractal(vec2 z, vec2 center, int iterations){\n    for(int n = 0; n < iterations; n++){\n        z = cSqr(z);\n        vec2 h = hash21(float(n));\n        vec2 c = center + .25 * h.x * sin(7.0 * h.y + vec2(0, .5 * pi));\n        z += c;\n        if(dot(z, z) > 16.){\n        \treturn vec3(z, float(n));\n        }\n    }\n    return vec3(z, float(iterations));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 z = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    int iterations = 10 + int(8.0 * mod(iTime, 5.0));\n    vec2 center = hash21(floor(.2 * iTime));\n    center *= 2.0;\n    center--;\n    vec3 data = fractal(z, center, iterations);\n    fragColor = getCol(data, iterations);\n}","name":"Image","description":"","type":"image"}]}