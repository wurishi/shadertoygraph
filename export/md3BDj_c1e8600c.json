{"ver":"0.1","info":{"id":"md3BDj","date":"1697642724","viewed":21,"name":"chromatic abrrr","username":"yuhanl","description":"Featuring Diana shampoouyang","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sqWave(float x, float freq, float amp) {\n    return abs(mod(floor(x * freq), 2.f * amp));\n}\n\nfloat sawtooth(float x, float freq, float amp) {\n    return (x * freq - floor(x * freq)) * amp;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    \n    float stripeBottom = 5. + sawtooth(iTime, 0.2, iResolution.y);\n    float stripeTop = 80. + sawtooth(iTime, 0.2, iResolution.y);\n    \n    float dist = abs(fragCoord.y - stripeTop);\n    \n    if (fragCoord.y > stripeBottom && fragCoord.y < stripeTop) {\n        warpedUv += 0.002 * dist * tan(fragCoord.y);\n    }\n           \n   \n    vec2 offset1 = vec2(0., sin(iTime * 2.) * 0.01);\n    vec2 offset2 = vec2(0.02, 0.);\n    vec2 offset3 = vec2(-0.02, sqWave(sin(iTime),10.,1.5) * 0.01 - 0.02);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                  \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}