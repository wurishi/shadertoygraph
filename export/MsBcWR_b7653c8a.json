{"ver":"0.1","info":{"id":"MsBcWR","date":"1686186843","viewed":76,"name":"Motion Blur Test","username":"MartinRGB","description":"blur","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["motionblurtest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = m_time;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 backbuffer = texture(iChannel0,uv).rgb;\n    vec3 video = texture(iChannel1,uv).rgb;\n    fragColor = vec4(mix(video,backbuffer,0.89),1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\n\nfloat gauss(float x) {\n    return exp(-x*x*3.1415926535897932384626433);\n}\n\n\nvec3 gamma(vec3 c,float g) { return vec3(pow(c.r,g), pow(c.g,g), pow(c.b,g)); }\n\n\n// testimage generation, by hornet: https://www.shadertoy.com/view/Xd33Dl\n\n\nfloat circle(in vec2 _st, in float _radius,in vec2 position){\n    \n    vec2 dist = _st - vec2(position);\n       \n    return 1.-smoothstep(_radius-(_radius*0.01),\n                             _radius+(_radius*0.01),\n                             dot(dist,dist)*4.0);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 suv = fragCoord / iResolution.xx; \n    vec2 uv = fragCoord / iResolution.xx;\n    vec3 sumcol;\n\n    sumcol = vec3(circle( suv,0.05,vec2(0.25+0.4*sin(m_time*2.),0.25+0.4*sin(m_time*2.)) ))* vec3(0.0,1.,0.);\n    sumcol += vec3(circle( suv,0.05,vec2(0.35+0.4*sin(m_time*2.),0.35+0.4*sin(m_time*2.)) ))* vec3(1.0,0.,0.);\n    sumcol += vec3(circle( suv,0.05,vec2(0.4+0.4*sin(m_time*2.),0.25+0.4*sin(m_time*2.)) ))* vec3(0.0,0.,1.);\n        \n    fragColor = vec4(gamma(sumcol, 2.2),1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define m_time iTime + 0.15","name":"Common","description":"","type":"common"}]}