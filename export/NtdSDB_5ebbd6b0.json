{"ver":"0.1","info":{"id":"NtdSDB","date":"1639717307","viewed":87,"name":"test_test3","username":"lewis_z","description":"666","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["flowmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float FLOW_DISTANCE = 0.2;\nconst float FLOW_SPEED = 0.15;\n\nfloat saturate(float x)\n{\n    return clamp(x, 0.0, 1.0);\n}\n\nvec2 flowmap(in vec2 uv)\n{\n    vec2 dir = uv - vec2(0.5, 0.5);\n    vec2 flow = normalize(vec2(dir.y, -dir.x));\n    \n    flow *= saturate(1.0 - 4.0*abs(0.25 - length(dir))) * 1.0;  // circular swirly motion\n    flow = mix(vec2(0.0, 0.5), flow, saturate(length(flow)*2.0));  // linear movement up\n\n    return flow;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 flow = -flowmap(uv);\n    \n    float phase0 = fract(iTime*FLOW_SPEED + 0.5);\n    float phase1 = fract(iTime*FLOW_SPEED + 1.0);\n\n    vec2 f0 = flow * phase0 * FLOW_DISTANCE;\n    vec2 f1 = flow * phase1 * FLOW_DISTANCE;\n   \n    vec3 s0 = texture(iChannel0, uv + f0).xyz;\n    vec3 s1 = texture(iChannel0, uv + f1).xyz;\n    \n    float lerp = saturate(abs((0.5 - phase0) / 0.5));\n   \n    vec3 col = mix(s0, s1, lerp);\n    \n    float anim_separator = max(0.0, sin(iTime*0.5));\n    \n    //if(uv.x < anim_separator) col = vec3(flow*0.5 + 0.5,0.0);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}