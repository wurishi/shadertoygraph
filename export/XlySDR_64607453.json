{"ver":"0.1","info":{"id":"XlySDR","date":"1483879336","viewed":226,"name":"State with multipass","username":"Seledorn","description":"Just a simple shader that keeps tracks of the last few clicks in by using multiple passes. Mostly everything is iq's code.\n\nWas going to do a harmonic table, but sound can't access renderbuffers, (for good reason, otherwise we couldn't buffer sound).\n\n\n","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Magic.\n// Taken from iq's \"Hexagons - distance\" https://www.shadertoy.com/view/Xd2GR3\nvec4 hexagon( vec2 p ) \n{\n\tp=p/iResolution.y*10.;\n\n    vec2 q = vec2( p.x*2.0*0.5773503, p.y + p.x*0.5773503 );\n\t\n\tvec2 pi = floor(q);\n\tvec2 pf = fract(q);\n\n\tfloat v = mod(pi.x + pi.y, 3.0);\n\n\tfloat ca = step(1.0,v);\n\tfloat cb = step(2.0,v);\n\tvec2  ma = step(pf.xy,pf.yx);\n\t\n    // distance to borders\n\tfloat e = dot( ma, 1.0-pf.yx + ca*(pf.x+pf.y-1.0) + cb*(pf.yx-2.0*pf.xy) );\n\n\t// distance to center\t\n\tp = vec2( q.x + floor(0.5+p.y/1.5), 4.0*p.y/3.0 )*0.5 + 0.5;\n\tfloat f = length( (fract(p) - 0.5)*vec2(1.0,0.85) );\t\t\n\t\n\treturn vec4( pi + ca - cb*ma, e, f );\n}\n\n\n\n// from Gijs Twin Dragon  https://www.shadertoy.com/view/MtXSWj\nvec3 rainbow(float t){\n    return sin(t+vec3(0,.33,.66)*6.28)*.5+.5;\n}\n\n//from iq's Bricks Game https://www.shadertoy.com/view/MddGzf\nvec4 loadValue( in float id )\n{\n    vec2 re = vec2(id,.0);\n    return texture( iChannel0, (0.5+re) / iChannelResolution[0].xy, -100.0 );\n}\n\nvoid mainImage(out vec4 o, vec2 uv)\n{\n    vec2 p = uv/iResolution.y*10.;\n    vec4 hex = hexagon(uv);\n    o = vec4(vec3(rainbow((hex.x+6.*hex.y)/40.)),1.); \n    o = o*.5+.5; //brighten colors\n    for(float i = 0.; i<5.5;i++)\n    {\n        vec4 loaded = loadValue(i);\n        vec2 hex_coords = hexagon(loaded.xy).xy;\n\t\tfloat dt = iTime-loaded.z;\n\t\t\n        // fade from white(isch) to color based on how long ago we clicked\n\t \tif(hex.xy == hex_coords)o = pow(o,vec4(.2+.8*smoothstep(0.,1.0,dt)));\n        \n        if(distance(hex.xy, vec2(1.,8.))<0.1)\n        {\n            o = vec4(1.0);\n            return;\n        }\n    }\n    o=mix(o,vec4(1.0),smoothstep(0.04,0.0,hex.z)); // mix in the borders\n}\n\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//from iq's Bricks Game https://www.shadertoy.com/view/MddGzf\nfloat isInside( vec2 p, vec2 c ) { vec2 d = abs(p-0.5-c) - 0.5; return -max(d.x,d.y); }\n//from iq's Bricks Game https://www.shadertoy.com/view/MddGzf\nvec4 loadValue( in float id )\n{\n    vec2 re = vec2(id,.0);\n    return texture( iChannel0, (0.5+re) / iChannelResolution[0].xy, -100.0 );\n}\n//from iq's Bricks Game https://www.shadertoy.com/view/MddGzf\nvoid storeValue( in float id, in vec4 va, inout vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 re = vec2(id,.0);\n    fragColor = ( isInside(fragCoord,re) > 0.0 ) ? va : fragColor;\n}\n\n\n#define store(id,v) storeValue(id,v,fragColor,fragCoord)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tif(iFrame < 5)\n    {\n        for(float i = 0.; i<10.5;i++)store(i,vec4(-4.));\n        store(11.,vec4(iMouse));\n    }\n    float id = floor(fragCoord.x);\n    if(id > 11.)discard;\n    float last_click_reg = 11.;\n    \n    \n    //mouse.zw is the click pos, sign whether mouse is down\n    if(loadValue(last_click_reg).zw!=abs(iMouse.zw)) \n    {\n        if(id<10.)\n        {\n            if(id >= 1.0)\n               store(id,loadValue(id-1.));\n            else \n                store(0.,vec4(iMouse.xy,iTime,0.));\n        }\n        store(last_click_reg,iMouse);\n    }\n    else\n    {\n        store(id,loadValue(id));\n    }\n}\n\n\n\n","name":"Buffer A","description":"","type":"buffer"}]}