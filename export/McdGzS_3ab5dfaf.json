{"ver":"0.1","info":{"id":"McdGzS","date":"1711884827","viewed":38,"name":"3D to 2D","username":"mrboggieman","description":"Convert between 3d and 2d in a map","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float num_pixels = 64.0;\nconst float num_block_pixels = 8.0;\n\nvec3 to_3d(in vec2 uv) {\n    vec2 coord = uv * num_pixels;\n\n    float z_x = floor(coord.x / num_block_pixels);\n    float z_y = floor(coord.y / num_block_pixels);\n    \n    float z = (z_y * num_block_pixels + z_x) / num_pixels;\n\n    float x = mod(coord.x, num_block_pixels) / num_block_pixels;\n    float y = mod(coord.y, num_block_pixels) / num_block_pixels;\n\n    return vec3(x, y, z);\n}\n\nvec2 to_2d(in vec3 coord) {\n    float z_index = floor(coord.z * num_pixels);\n    \n    float z_y = floor(z_index / num_block_pixels) / num_block_pixels;\n    float z_x = mod(z_index, num_block_pixels) / num_block_pixels;\n\n    float x = z_x + (coord.x / num_block_pixels);\n    float y = z_y + (coord.y / num_block_pixels);\n    \n    return vec2(x, y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 coord = to_3d(uv);\n    \n    // create a hollow sphere to show the layers in 3d\n    if (distance(coord, vec3(0.5)) < 0.5 && distance(coord, vec3(0.5)) > 0.4) {\n        fragColor = vec4(vec3(0.0), 1.0);\n        return;\n    }\n\n    fragColor = vec4(to_3d(to_2d(coord)),1.0);\n}\n","name":"Image","description":"","type":"image"}]}