{"ver":"0.1","info":{"id":"4f3fRj","date":"1733248392","viewed":160,"name":"galaxy combination ","username":"nayk","description":"source combination of https://www.shadertoy.com/view/Msl3WH  https://www.shadertoy.com/view/fs2yRD https://www.shadertoy.com/view/MdXSzS","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["color","galaxy","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/MdXSzS\n// The Big Bang - just a small explosion somewhere in a massive Galaxy of Universes.\n// Outside of this there's a massive galaxy of 'Galaxy of Universes'... etc etc. :D\n\n// To fake a perspective it takes advantage of the screen being wider than it is tall.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) - .5;\n\tfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .57)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n    vec4 o=fragColor;\nvec2 u=fragCoord ;\nfloat time = (-iTime+29.) * 0.0;\n\n    float s4 = 0.0, v = 0.0;\n   \n\tfloat t4 = time*0.005;\n\tuv.x += sin(t4) * .3;\n\tfloat si4 = sin(t4*1.5); // ...Squiffy rotation matrix!\n\tfloat co4 = cos(t4);\n\tuv *= mat2(co4, si4, -si4, co4);\n\tvec3 col = vec3(0.0);\n\tvec3 init = vec3(0.25, 0.25 + sin(time * 0.001) * .1, time * 0.0008);\n\tfor (int r = 0; r < 100; r++) \n\t{\n\t\tvec3 p = init + s4 * vec3(uv, 0.143);\n\t\tp.z = mod(p.z, 2.0);\n\t\tfor (int i=0; i < 10; i++)\tp = abs(p * 2.04) / dot(p, p) - 0.75;\n\t\tv += length(p * p) * smoothstep(0.0, 0.5, 0.9 - s4) * .002;\n\t\t// Get a purple and cyan effect by biasing the RGB in different ways...\n\t\tcol +=  vec3(v * 0.8, 1.1 - s4 * 0.5, .7 + v * 0.5) * v * 0.013;\n\t\ts4 += .01;\n\t}\n\tfragColor = vec4(col, 1.0);\n  u=8.*u/iResolution.x-4.;\n  u*=ma;\n    float t3=iTime, h=.5, a=1., b=a, c=a, d=0.;\n    for(int i=0;i<7;i++)\n        o=sin(1.57*vec4(1,0,2,0)+u.yxxx*a-d+t3/b)/c,\n        u+=o.xy+o.zx*.3,\n        a*=1.93,\n        b*=1.15,\n        c*=1.7,\n        d+=.05+.1*t3*b;\n    o=sin(vec4(u.x-t3, (u.x+u.y+sin(t*h))*h, u.y+t3, 1))*h+h;\n\tfloat v1, v2, v3;\n\tv1 = v2 = v3 = 0.0;\n\t\n\tfloat s = 0.0;\n\tfor (int i = 0; i < 90; i++)\n\t{\n\t\tvec3 p = s * vec3(uv, 0.0);\n\t\t\n\t\tp += vec3(.22, .3, s - 1.5 - sin(iTime * .13) * .1)*o.xyz*col;\n\t\tfor (int i = 0; i < 8; i++)\tp = abs(p) / dot(p,p) - 0.659;\n\t\tv1 += dot(p,p) * .0015 * (1.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\n\t\tv2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\n\t\tv3 += length(p.xy*10.) * .0003;\n\t\ts  += .035;\n\t}\n\t\n\tfloat len = length(uv);\n\tv1 *= smoothstep(.7, .0, len);\n\tv2 *= smoothstep(.5, .0, len);\n\tv3 *= smoothstep(.9, .0, len);\n\t\n\tvec3 col4 = vec3( v3 * (1.5 + sin(iTime * .2) * .4),\n\t\t\t\t\t(v1 + v3) * .3,\n\t\t\t\t\t v2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3)*o.xyz*10. * .3;\n\n\tfragColor=vec4(min(pow(abs(col4+col), vec3(1.2)), 1.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}