{"ver":"0.1","info":{"id":"4tByRR","date":"1507304551","viewed":86,"name":"Reveal for Graphics","username":"Kellers176","description":"Reveal texture beneath other texture","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mouse","graphics","mouserevealforgraphics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Originally by Nikos Papadopoulos, 4rknova / 2015\n// Heavily modified by Dr. Sajid Farooq, 2016\n//The blur matrix. Since there are 9 pixels, each weight is 1/9 = 0.111 \n// to ensure that each pixel is averaged properly\n//variables and filters\nfloat circleRadius = 0.1;\nmat3 blur = mat3(\n    0.111, 0.111, 0.111, \n    0.111, 0.111, 0.111, \n    0.111, 0.111, 0.111\n);\n\nmat3 sharpen = mat3(\n    0.0, -1, 0.0, \n    -1, 5, -1, \n    0.0, -1, 0.0 \n);\n\nmat3 emboss = mat3(\n    -2.0, -1.0, 0.0,\n    -1.0, 1.0, 1.0,\n    0.0, 1.0, 2.0\n);\nmat3 outline = mat3(\n    -1.0, -1.0,-1.0,\n    -1.0, 8.0, -1.0,\n    -1.0, -1.0, -1.0\n);\n\nmat3 topSobel = mat3(\n    1.0, 2.0, 1.0,\n    0.0, 0.0, 0.0,\n    -1.0, -2.0, -1.0\n);\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord, in sampler2D mysample)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n    uv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n    return texture(mysample, uv).xyz;\n}\n//uses the filter\nvec3 aFilter(in vec2 fragCoord, mat3 kernel, in sampler2D mySample)\n{\n    int i;\n    int j;\n    vec3 sum = vec3(0.0,0.0,0.0);\n    for(i = 0; i < 3; i++)\n    {\n        for(j = 0; j < 3; j++)\n        {\n\n            sum += aSample(i-1, j-1, fragCoord, mySample) * kernel[i][j];\n        }\n    }\n\n    return sum;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //change these values in order to change the filters\n    mat3 switch1 = blur;\n    mat3 switch2 = sharpen;\n  \n    //get the mouse information\n    vec2 downSampleMouse = floor(iMouse.xy/iResolution.xy*10.0)*0.1;\n    vec2 mousePosition = vec2(iMouse.xy/iResolution.xy);\n    \n    //Aspect ratio\n\t vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n     mousePosition.y = mousePosition.y * (iResolution.y / iResolution.x);\n    \n\tvec3 circleColor;\n    \n    vec2 fc = fragCoord.xy;\n\n    vec3 cf = aFilter(fc, switch1, iChannel0);\n    vec3 cf2 = aFilter(fc, switch2, iChannel1);\n\n    vec4 layer1 = vec4(cf, 1);\n    vec4 layer2 = vec4(cf2, 1.0 - step(circleRadius, length(mousePosition - uv)));\n  \n    vec4 Composite = mix(layer1, layer2, layer2.a);\n    fragColor = Composite;\n}","name":"Image","description":"","type":"image"}]}