{"ver":"0.1","info":{"id":"csGyRW","date":"1695826657","viewed":24,"name":"first shader George 1010101010","username":"solidaqua","description":"basic example","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["newbie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n  vec3 a = vec3(0.5,0.5,0.5);\n  vec3 b = vec3(0.5,0.5,0.5);\n  vec3 c = vec3(1.0,1.0,1.0);\n  vec3 d = vec3(0.263,0.416,0.599);\n  return a + b*cos(6.28*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord *2.0 -iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    vec3 col;\n    \n    \n    for (float i =0.0; i<4.0; i++){\n    \n        uv = fract(uv *1.5) - 0.5;\n\n        float d = length(uv);\n        col = palette(length(uv0) + i*0.4 + 0.3*iTime);\n        d = sin(8.0*d+ iTime)/8.;\n        d = abs(d);\n        d = 0.01/d;    \n        finalColor += col *d;\n    }\n    \n    fragColor = vec4(finalColor,1.0);\n    \n       \n}","name":"Image","description":"","type":"image"}]}