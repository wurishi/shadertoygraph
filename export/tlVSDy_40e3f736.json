{"ver":"0.1","info":{"id":"tlVSDy","date":"1583530841","viewed":54,"name":"gradient folds","username":"iamsaitam","description":"folding gradient","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535897932384626433832795;\n\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 rgb2hsv(vec3 c){\n\tvec4 K=vec4(0.,-1./3.,2./3.,-1.),\n\t     p=mix(vec4(c.bg ,K.wz),vec4(c.gb,K.xy ),step(c.b,c.g)),\n\t     q=mix(vec4(p.xyw,c.r ),vec4(c.r ,p.yzx),step(p.x,c.r));\n\tfloat d=q.x-min(q.w,q.y),\n\t      e=1e-10;\n\treturn vec3(abs(q.z+(q.w-q.y)/(6.*d+e)),d/(q.x+e),q.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 st = (2.0 * fragCoord - iResolution.xy)/iResolution.x;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float h = 1.0 / 360.0;\n    \n    float c = mod(length(-st * cos(uv.x*PI*2.0) * uv.y) + iTime * 0.1, h * 90.0);\n    \n    vec3 mag = rgb2hsv(vec3(0.792, 0.282, 0.478));\n    vec3 blue = rgb2hsv(vec3(0.173, 0.216, 0.278));\n\n    // Time varying pixel color\n    float hue = c + uv.x;\n    \n    vec3 col = vec3(sin(iTime * 0.1), 1.0, 1.0 - c);\n\n    // Output to screen\n    fragColor = vec4(hsv2rgb(col),1.0);\n}","name":"Image","description":"","type":"image"}]}