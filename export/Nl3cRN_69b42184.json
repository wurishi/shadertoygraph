{"ver":"0.1","info":{"id":"Nl3cRN","date":"1659307109","viewed":171,"name":"Fractal Checkers","username":"gurudevbk","description":"Modified some parameters from Pretty Hip  (https://www.shadertoy.com/view/XsBfRW) ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","cineshader"],"hasliked":0,"parentid":"fl3cRN","parentname":"Fork Fork Prett gurudevbk 885"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.y/iResolution.x; //aspect ratio of viewport\n    float value; //var\n\tvec2 uv = fragCoord.xy / iResolution.x; //vec ratio of fragment coordinate to width of viewport\n \n    \n    float rot = radians(45.0); // radians(45.0*sin(iTime)); //radians(45.0)\n    float rot2 = radians(45.0*sin(iTime)); // radians(45.0*sin(iTime)); //radians(45.0)\n    \n    uv -= vec2(0.5, 0.5*aspect); //transform\n\n\n    mat2 m = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n   \tuv  = m * uv;\n    uv *= vec2(0.5, 0.9*aspect);\n    uv.y+=0.01*(2.0-aspect);\n    vec2 pos = 200.0*uv;\n    vec2 rep = fract(cos(rot2)-0.9*tan(rot2)+cos(rot2/2.0)*pos);\n    float dist = min(min(rep.x, 1.0-rep.x), min(rep.y, 1.0-rep.y));\n    float squareDist = length((floor(pos)+vec2(0.5)) - vec2(1.0) );\n    \n    float edge = 4.*sin(squareDist*0.5)*0.5;\n    \n    edge = (iTime/20.-squareDist*0.5)*0.5;\n    edge = 2.0*fract(edge*squareDist);\n    //value = 2.0*abs(dist-0.5);\n    //value = pow(dist, 2.0);\n    value = fract (dist*2.0);\n    value = mix(value, 1.0-value, step(1.0, edge));\n    //value *= 1.0-0.5*edge;\n    edge = pow(abs(1.0-edge), 2.0);\n    \n    //edge = abs(1.0-edge);\n    value = smoothstep( edge-0.05, edge, 0.95*value);\n    \n    \n    value += squareDist*.1;\n    //fragColor = vec4(value);\n    fragColor = mix(vec4(1.0,edge/2.,value/4.,1.0)*(cos(rot2)/4.0),vec4(0.5,0.75,1.0,1.), edge);\n    fragColor.a = 0.25*clamp(edge, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"void mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n    // Ray direction as color\n    vec3 col = 0.5 + 0.5*rayDir;\n\n    // Output to cubemap\n    fragColor = vec4(col,1.0);\n}","name":"Cube A","description":"","type":"cubemap"}]}