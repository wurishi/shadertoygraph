{"ver":"0.1","info":{"id":"WsySWz","date":"1573839372","viewed":679,"name":"Solar Flares","username":"andremichelle","description":"First approach to get my fingers burned.","likes":11,"published":3,"flags":64,"usePreview":0,"tags":["noise","sun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XlfGDl","filepath":"https://soundcloud.com/andremichelle/space-walk","previewfilepath":"https://soundcloud.com/andremichelle/space-walk","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI_INV 0.318309\n#define PI_TWO_INV 0.15915\n#define clip(x) clamp(x, 0., 1.)\n\nfloat Hash(in vec2 p, in float scale) {\n\treturn fract(sin(dot(mod(p, scale), vec2(27.16898, 38.90563))) * 5151.5473453);\n}\n\nvec3 check(vec2 uv, float s) {\n    return vec3(.12+0.06*mod(floor(s*uv.x)+floor(s*uv.y),2.0));\n}\n\nfloat Noise(in vec2 p, in float scale ) {\n\tvec2 f;\n\tp *= scale;\n\tf = fract(p);\n    p = floor(p);\n    f = f*f*(3.0-2.0*f);\n    return mix(mix(Hash(p, scale),\n\t\t\tHash(p + vec2(1.0, 0.0), scale), f.x),\n\t\t\tmix(Hash(p + vec2(0.0, 1.0), scale),\n\t\t\tHash(p + vec2(1.0, 1.0), scale), f.x), f.y);\n}\n\nfloat fbm(in vec2 p, float scale) {\n\tfloat f = 0.0;\n    p = mod(p, scale);\n\tfloat amp   = .6;\n\tfor (int i = 0; i < 5; i++)\n\t{\n\t\tf += Noise(p, scale) * amp;\n\t\tamp *= .5;\n\t\tscale *= 2.;\n\t}\n\treturn min(f, 1.0);\n}\n\nvec4 over( in vec4 a, in vec4 b ) {\n    return mix(a, b, 1.-a.w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y*3.;\n\n    float l = length(uv);\n    float a = atan(uv.y, uv.x);\n\tfloat t = iTime;\n    float p = sin(t*.25);\n    vec4 c = vec4(0.);\n    \n\tc = over(vec4(vec3(1., .8, .6), pow(distance(uv, vec2(.98, .3)), -.5)*.01), c);\n\tc = over(vec4(vec3(1., .8, .6), pow(distance(uv, vec2(-.98, -.8)), -.5)*.01), c);\n    \n    vec2 ws;\n    ws = normalize(uv)*((2.+p*.1)*asin(length(uv)*2.) * PI_INV);\n    ws.x += t*.04;\n    float r;\n    vec3 sun;\n    vec3 \n        c0 = vec3(.2, .0, .0), \n        c1 = vec3(1., .1, .0),\n        c2 = vec3(1., .5, .0),\n        c3 = vec3(1., 1., 1.);\n    r = smoothstep(.4+p*.1, 1., fbm(ws, 20.));\n    sun = mix(c0, mix(c1, mix(c2, c3, clip(r*3.-2.)), clip(r*3.-1.)), clip(r*3.));\n    c = over(vec4(sun, smoothstep(.01, .0, l-.493)), c);\n\n    ws = vec2(a*PI_TWO_INV+l*sin(t*.1)*.004, l*.01);\n    ws.y -= t*.008;\n    r = smoothstep(.6, .0, fbm(ws, 20.) * smoothstep(.2, .9, l)*1.25);\n    sun = mix(c0, mix(c1, mix(c2, c3, clip(r*3.-2.)), clip(r*3.-1.)), clip(r*3.));\n    c = over(vec4(sun, pow(smoothstep(.1, .6, l), 4.) * r), c);\n    \n    r = smoothstep(.9, .0, fbm(ws+.25, 5.) * smoothstep(.4, .6, l*1.1));\n    sun = mix(c0, mix(c1, mix(c2, c3, clip(r*3.-2.)), clip(r*3.-1.)), clip(r*3.));\n    c = over(vec4(sun, pow(smoothstep(.0, .8, l*1.2), .2) * r * .1), c);\n    \n    fragColor = c;\n}","name":"Image","description":"","type":"image"}]}