{"ver":"0.1","info":{"id":"lcK3Rd","date":"1713186960","viewed":63,"name":"Halftone RGB spiral","username":"scouttea","description":"A simple spiral animation using a halftone inspired pattern","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["spiral","animated","rgb","halftone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 S( vec2 inP )\n{\n    return 2.F * round( inP / 2.F );\n}\n\nvec2 W( vec2 inP )\n{\n    return inP - S( inP );\n}\n\nfloat smoothCutOff( float inVal )\n{\n    return .5F + clamp( inVal / .05F, -.5F, .5F );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Mapped coords such that the square (-1,-1) -> (1,1) fits on screen\n    vec2 ab = (2.*fragCoord - iResolution.xy )/min(iResolution.x,iResolution.y);\n    \n    ab *= 60.F;\n    \n    vec2 sAb = S( ab );\n    \n    float angle = atan( sAb.y, sAb.x );\n    float dist = length( sAb );\n    \n    float pi2_3 = 2.09439510239;\n    \n    float overlap = .5F;\n    \n    float sizeR = clamp( cos( angle * 3.F + dist / 10.F - iTime + 0.F*pi2_3 ) + overlap, 0.F, 1.F );\n    float sizeG = clamp( cos( angle * 3.F + dist / 10.F - iTime + 1.F*pi2_3 ) + overlap, 0.F, 1.F );\n    float sizeB = clamp( cos( angle * 3.F + dist / 10.F - iTime + 2.F*pi2_3 ) + overlap, 0.F, 1.F );\n    \n    float valueR = smoothCutOff( sizeR - distance( W( ab ), vec2(0.F) ) );\n    float valueG = smoothCutOff( sizeG - distance( W( ab ), vec2(0.F) ) );\n    float valueB = smoothCutOff( sizeB - distance( W( ab ), vec2(0.F) ) );\n    \n    fragColor = vec4( vec3( valueR, valueG, valueB ), 1. );\n}","name":"Image","description":"","type":"image"}]}