{"ver":"0.1","info":{"id":"7lcBWB","date":"1663595535","viewed":35,"name":"Challenge 2 Sept19","username":"zachna1","description":"challenge for class","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 sdfCircle(vec2 uv, float r, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  \n  float d = length(vec2(x, y)) - r;\n  \n  return d > 0. ? vec3(0.) : vec3(1., 0., 0.);\n}\nvec3 sdfCircle2(vec2 uv, float r, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  \n  float d = length(vec2(x, y)) - r;\n  \n  return d > 0. ? vec3(0.) : vec3(0, 1., 0.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; // <0,1>\n  uv -= 0.5;\n  uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n  \n  vec2 offset = vec2(0.5, 0.0); // move the circle 0.2 units to the right and 0.2 units up\n  \n  vec2 offset2 = vec2(-0.5, 0.0);\n  \n  vec3 col = sdfCircle(uv, .2, offset);\n  \n  vec3 col2 = sdfCircle2(uv, .2, offset2);\n  col += col2;\n  // Output to screen\n  fragColor = vec4(col,1);\n}\n","name":"Image","description":"","type":"image"}]}