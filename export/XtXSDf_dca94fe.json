{"ver":"0.1","info":{"id":"XtXSDf","date":"1440038339","viewed":527,"name":"Dizzy Worms","username":"TheEgghead","description":"My first shader! fun to see it running so fast! More interesting things to come.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"    \n\n#define SETTLE 0.0\n#define SAMPLES 512.0\n\nvoid colorCount( out vec4 fragColor, in float count, float evenOdd)\n{\n    //float q = 1.0-clamp(count/256.0, 0.0, 1.0);\n\n    float q = clamp(count/SAMPLES, 0.0, 1.0);\n\n    \n    if (count == 0.0) fragColor = vec4(1.0,0.0,0.0,1.0);\n    else if (count == SAMPLES)\n    {\n        // okay, this code doesn't do what I was intending, but looks kinda cool anyway\n        //if (evenOdd > -1.0)\n        if (mod(evenOdd, 2.0) == 0.0)\n\n\t        fragColor = vec4(0.0,1.0,0.0,1.0);\n        else\n            fragColor = vec4(1.0,1.0,0.0,1.0);\n\n\n    }\n    else\n\t\tfragColor = vec4(q,q,q,1.0);\n}\n\nvoid iter(out float count, out float evenOdd, float rate, float lo, float hi)\n{   \n\t//float p = 0.5;\n\tfloat p = (sin(iTime*0.05)+1.0)/2.0;\n\tfloat lowHit = SAMPLES;\n\n    count = 0.0;\n    evenOdd = 0.0;\n    \n    for (float i = 0.0; i < SETTLE;  ++i)\n    \tp = p*(1.0-p)*rate;\n    \n    for (float i = 0.0; i < SAMPLES; ++i)\n    {\n        p = p*(1.0-p)*rate;\n        if (p <= hi && p > lo) \n        {\n            ++count;\n            if ( i < lowHit) lowHit = i;\n        }    \n        //if (mod (evenOdd,2.0) == 1.0)\n        if (p>= hi) ++evenOdd;\n        //if (p<lo) --evenOdd;\n    }\n    count = lowHit;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//OLD float q = sin((fragCoord.x/2.0)*(fragCoord.y/2.0)+iTime*3.0);\n    \n    float myRate = (fragCoord.x/iResolution.x)*1.3+2.8;\n    float s = 100.0*(1.0+sin(iTime));\n    float count = 0.0;\n    float evenOdd = 0.0;\n    \n    iter(count, evenOdd, myRate, fragCoord.y/iResolution.y, (fragCoord.y+1.0)/iResolution.y);\n\t\n    colorCount(fragColor, count, evenOdd);\n    \n    /*\n    if (fragCoord.x/iResolution.x <= 0.5) \n        fragColor = vec4(1.0,0.0,0.0,1.0);\n    else\n    \tfragColor = vec4 (0.0,1.0,0.0,1.0);\n\t*/\n    \n    // OLDfragColor = vec4(q,q,0.5, 1.0);\n//\tfragColor = vec4(c, sxy.x, sxy.y, 1.0);\n}","name":"","description":"","type":"image"}]}