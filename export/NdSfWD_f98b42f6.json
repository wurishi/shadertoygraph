{"ver":"0.1","info":{"id":"NdSfWD","date":"1646293512","viewed":174,"name":"SimpleSaturn","username":"BadBadDog","description":"Simple 2d saturn","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["saturn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265359;\nfloat d2r( float d ){\treturn (d*PI)/180.0; }\nfloat r2d( float r ){\treturn (r*180.0)/PI; }\n\nfloat vec2deg( vec2 uv )\n{\n\treturn atan(uv.x,uv.y);\n}\n\nvec2 pln2pol( vec2 uv )\n{\n    vec2 suv = texture( iChannel0, uv*0.3 ).xy;\n    suv = mix( vec2(1.0), suv, 0.3*smoothstep(0.5,0.0,abs(uv.y-0.2)));\n    return suv * vec2( uv.x*0.02, 0.33 + asin(uv.y-0.5 * smoothstep(4.5,0.0,abs(asin(uv.x/(0.3-0.4*pow(asin(abs(uv.y*2.0)),2.0)))))));\n}\n\n\nvec3 Saturn(vec2 uv)\n{\n\tfloat scale = 1.0;\n    float tilt = -0.3;\n    float pitch = 0.3;\n    \n    uv = (vec2(0.5,0.5) - uv) * 2.0 * vec2(1.0/(iResolution.y/iResolution.x),1.0);\n    uv = uv * 100.0 * scale;\n    vec2 luv = uv;\n    vec2 suv = uv;\n    uv.x = distance(vec2(0.0, 0.0), uv) * sin( vec2deg(uv) + tilt );\n    uv.y = distance(vec2(0.0, 0.0), uv) * cos( vec2deg(uv) + tilt );\n    suv.x = distance(vec2(0.0, 0.0), suv) * sin( vec2deg(suv) + tilt -0.13 );\n    suv.y = distance(vec2(0.0, 0.0), suv) * cos( vec2deg(suv) + tilt -0.13 );\n    \n    vec2 puv = pln2pol( uv/190.0 );\n\n    float dist = distance(vec2(0.0, 0.0), uv);\n    vec2 dmult = vec2(1.0,1.0/pitch);\n\n    // main body\n\tvec3 bcol = texture( iChannel0, puv ).xyz;\n\tfloat body = smoothstep( 50.1, 50.0, distance(vec2(0.0, 0.0), uv ) );\n    float bmask = smoothstep( 50.1, 50.0, distance(vec2(0.0, 0.0), uv ) ) * float(uv.y<0.0);\n    \n     // atmo fade\n    bcol = mix( bcol, vec3(0.6,0.4,0.3), 0.8 * smoothstep( 0.0-luv.x*0.7, 52.0, distance(vec2(0.0, 0.0), luv ) )  );\n     // atmo glow\n    bcol = mix( bcol, vec3(0.6,0.4,0.4), 0.2 * smoothstep( 40.0, 52.0, distance(vec2(0.0, 0.0), luv*vec2(1.0,0.8) ) ) * smoothstep( 50.0, 0.0, luv.x )  );\n     \n     \n     // self shadow\n    bcol = mix( bcol, vec3(0.0), smoothstep( 0.0, 52.0, distance(vec2(0.0, 0.0), vec2(20.0,0.0) + luv*vec2(1.0,0.6) ) ) * smoothstep( -50.0, 0.0, luv.x ) * (0.6+0.4*smoothstep( 150.0, -20.0, uv.x )) );\n \n    // shadow from the disc\n    vec3 dscol = texture( iChannel0, vec2(0.5,-30.0 + distance(vec2(0.0, 0.0), uv*dmult))*0.01 ).xyz;\n    float dshd = (1.0-bmask) * smoothstep(0.0,0.5,dscol.x) * smoothstep( 131.0, 130.0, distance(vec2(0.0, 0.0), (uv+vec2(0.0,5.0))*dmult )) * smoothstep( 61.0, 66.0, distance(vec2(0.0, 0.0), (uv+vec2(0.0,5.0))*dmult ));\n    bcol = mix( bcol, vec3(0.0), 0.8*dshd );\n \n \n    // disc\n    vec3 dcol = texture( iChannel0, vec2(0.5,-30.0 + distance(vec2(0.0, 0.0), uv*dmult))*0.01 ).xyz;\n    float disc = 0.8 * (1.0-bmask) * smoothstep(0.0,0.8,dcol.x) * smoothstep( 131.0, 130.0, distance(vec2(0.0, 0.0), uv*dmult) ) * smoothstep( 61.0, 62.0, distance(vec2(0.0, 0.0), uv*dmult) );\n    \n    // shadow on the disc from the body\n    float dshad = smoothstep( 131.0, 130.0, distance(vec2(0.0, 0.0), suv*vec2(1.2,7.7) ) ) * smoothstep( 0.0, 0.1, suv.x );\n    dcol = mix( dcol, vec3(0.0), 0.8*dshad );\n    \n    \n\treturn mix( dcol*disc, bcol*body, 1.0-disc );\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n// Time varying pixel color\n    vec3 col = Saturn( uv );\n\n\n\n\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}