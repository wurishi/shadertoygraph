{"ver":"0.1","info":{"id":"lclcRB","date":"1721276010","viewed":47,"name":"Distance Quadtree Test","username":"CollinInMySternum","description":"Quadtree Test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["quadtree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DistanceMultiplier 2.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.x;\n    float scaleDiv = 1.;\n    float level = 0.;\n    \n    vec2 quadCenter = (floor(uv * scaleDiv) + 0.5) / scaleDiv;\n    vec4 quadColor;\n    \n    vec2 subdivisionPoint = vec2(.5, .25) + .25 * vec2(cos(iTime), sin(iTime));\n    \n    for(int i = 0; i < 15; i++)\n    {\n        if(distance(subdivisionPoint, quadCenter) > 1.0 / (scaleDiv) * DistanceMultiplier) break;\n        \n        scaleDiv *= 2.0;\n        level += 0.1;\n        quadCenter = (floor(uv * scaleDiv) + 0.5) / scaleDiv;\n    }\n    \n    \n    fragColor = vec4(level);\n}","name":"Image","description":"","type":"image"}]}