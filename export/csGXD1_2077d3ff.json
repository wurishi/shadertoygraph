{"ver":"0.1","info":{"id":"csGXD1","date":"1681001048","viewed":89,"name":"loading circle (schzna)","username":"schzna","description":"description","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI  = 3.14159;\n \nfloat atan2(vec2 p){\n    float x = p.x;\n    float y = p.y;\n    return x == 0.0 ? sign(y) * PI / 2.0 : atan(y, x);\n}\n\nfloat range(float from, float to, float x){\n    return smoothstep( 0., - 1.5, abs( x - (from+to)/2. ) - (to-from)/2. );\n}\n\nfloat range_ease(float from, float to, float x, float k){\n    float yf = sqrt(k*max(0.0, x-from));\n    float yt = sqrt(k*max(0.0, to-x));\n    return min(min(yf, yt), 1.0);\n}\n\nfloat remain(float x, float r){\n    return (x/r - floor(x/r)) * r;\n}\n\nfloat convert_angle(float p, float x){\n    return mod(x-p +PI, 2.*PI) -PI;\n}\n\nfloat abs_angle(float a1, float a2){\n    return abs(2.*PI + a1 - a2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 coord = fragCoord;\n    vec2 c = iResolution.xy/2.0;\n    \n    float ang = atan2(coord - c);\n    \n    float freq = 2.0*PI;\n    float time = iTime * 1.0;\n    \n    float phase = remain(time * 8.0, freq) - PI;\n    float r = iResolution.x/9.0;\n    float disang = abs_angle(ang,phase);\n    //float rot = max(exp(-0.2 * disang * disang)-0.5, 0.0);\n    float fromang = -1.0 + 0.2*sin(4.0*time);\n    float toang = 1.0 + 1.0*cos(4.0*time);\n    float k = 10.0;\n    float rot = range_ease(fromang, toang, convert_angle(phase, ang), k);\n    \n    float ring = range(r - rot * 10.0, rot * 10.0 + r, distance(c, coord));\n    // Time varying pixel color\n    vec3 col = mix(vec3(1.0),(uv.xyx * 0.6 + (0.4 + rot)*vec3(0.0, 0.3, 0.8)),ring);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}