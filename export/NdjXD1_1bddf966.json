{"ver":"0.1","info":{"id":"NdjXD1","date":"1620149639","viewed":85,"name":"Optimal Location (APHG)","username":"19UV","description":"Optimal location of a factory based on Weber Location Theory. The upper points are resource origins, and the bottom point is a market. Darker areas are more optimal for a factory.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aphg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float removePrecision(float num, float amount) {\n    return floor(num * amount) / amount / (amount / 10.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const bool dark_optimal = true;\n    const float tess_amount = 15.0;\n    const float coll_thresh = 0.025;\n    \n    // Point Data - x, y, amount, rate\n    const vec4 r1 = vec4(0.5, 0.75, 6, 5);\n    const vec4 r2 = vec4(1.25, 0.75, 7, 5);\n    const vec4 market = vec4(0.875, 0.25, 10, 7); // Costs more to transport to market = Bulk Gain\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float distR1 = distance(uv, r1.xy), distR2 = distance(uv, r2.xy), distMark = distance(uv, market.xy);\n    \n    if((distR1 < coll_thresh) || (distR2 < coll_thresh) || (distMark < coll_thresh)) {\n        fragColor = vec4(1,0,0,1);\n        return;\n    }\n    \n    float r1_cost = distR1 * r1[2] * r1[3];\n    float r2_cost = distR2 * r2[2] * r2[3];\n    float mark_cost = distMark * market[2] * market[3];\n    \n    float optimal = r1_cost + r2_cost + mark_cost;\n    optimal /= 120.0;\n    optimal = removePrecision(optimal, tess_amount);\n    \n    if(!dark_optimal) { optimal = 1.0 - optimal; }\n    \n    fragColor = vec4(vec3(optimal) ,1.0);\n}","name":"Image","description":"","type":"image"}]}