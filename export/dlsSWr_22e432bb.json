{"ver":"0.1","info":{"id":"dlsSWr","date":"1674613508","viewed":245,"name":"Simple Texture Stippling ","username":"Markant","description":"Simple Voronoi Texture Stippling ","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","dots","stippling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// voronoi from: https://thebookofshaders.com/12/\n\n//resloution\n#define RES 80. \n\nvec2 random2( vec2 p ) {\n    return texture(iChannel0,p).xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/ iResolution.xy;\n    vec3 color = vec3(.0);\n    // Scale\n    st *= RES;\n    // Tile the space\n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n    float m_dist = 1.;  // minimum distance\n\n    for (int y= -1; y <= 1; y++) {\n        for (int x= -1; x <= 1; x++) {\n            // Neighbor place in the grid\n            vec2 neighbor = vec2(float(x),float(y));\n            // Random position from current + neighbor place in the grid\n            vec2 point = random2((i_st + neighbor)/RES);\n\t\t\t// Animate the point\n            point = 3.14 * point - 1.15;\n\t\t\t// Vector between the pixel and the point\n            vec2 diff = neighbor + point - f_st;\n            // Distance to the point\n            float dist = length(diff);\n            // Keep the closer distance\n            m_dist = min(m_dist, dist);\n        }\n    }\n\n    // Draw cell center\n    color += 1.-step(0.25, m_dist);\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}