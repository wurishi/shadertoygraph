{"ver":"0.1","info":{"id":"4dByzK","date":"1492991523","viewed":453,"name":"Point to Tesseract","username":"balkhan","description":"point\t\t-->\tsegment\nsegment\t-->\tsquare\nsquare\t-->\tcube\ncube\t\t-->\ttesseract\nDidn't saw one already.","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","translation","tesseract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\n#define I_MAX\t100\n#define E\t\t0.001\n\n#define L1\tvec3(0., 0., 4.)\n#define L2\tvec3(st*3.,0.,4.+ct*3.)\n\nvec3\tP00;\nvec3\tP01;\nvec3\tP02;\nvec3\tP03;\nvec3\tP04;\nvec3\tP05;\nvec3\tP06;\nvec3\tP07;\nvec3\tP08;\nvec3\tP09;\nvec3\tP10;\nvec3\tP11;\nvec3\tP12;\nvec3\tP13;\nvec3\tP14;\nvec3\tP15;\n\nvoid\trotate(inout vec2 v, float angle);\nfloat\tsdCapsule( vec3 p, vec3 a, vec3 b, float r );\nvec2\tmarch(vec3 pos, vec3 dir);\nvec3\tcamera(vec2 uv);\nvec3\tblackbody(float Temp);\nfloat\tscene(vec3 p);\nvoid\tolala();\n\n// --globals-- //\nvec3\th;\nfloat\tg; //coloring id\nfloat\tt; // time\nfloat\tmine;\nfloat\tst;\nfloat\tct;\nvec3\te;\nvec3\ts;\n// --globals-- //\n\nconst vec3\tlightCol1 = vec3(.1,.3,.7);\nconst vec3\tlightCol2 = vec3(.5,.3,.2);\n\n// blackbody by aiekick : https://www.shadertoy.com/view/lttXDn\n\n// -------------blackbody----------------- //\n\n// return color from temperature \n//http://www.physics.sfasu.edu/astro/color/blackbody.html\n//http://www.vendian.org/mncharity/dir3/blackbody/\n//http://www.vendian.org/mncharity/dir3/blackbody/UnstableURLs/bbr_color.html\n\nvec3 blackbody(float Temp)\n{\n\tvec3 col = vec3(255.);\n    col.x = 56100000. * pow(Temp,(-3. / 2.)) + 148.;\n   \tcol.y = 100.04 * log(Temp) - 623.6;\n   \tif (Temp > 6500.) col.y = 35200000. * pow(Temp,(-3. / 2.)) + 184.;\n   \tcol.z = 194.18 * log(Temp) - 1448.6;\n   \tcol = clamp(col, 0., 255.)/255.;\n    if (Temp < 1000.) col *= Temp/1000.;\n   \treturn col;\n}\n\n// -------------blackbody----------------- //\n\n// sebH's volumetric light : https://www.shadertoy.com/view/XlBSRz\n\n// ------------volumetric light----------- //\n\nvec3 evaluateLight(in vec3 pos)\n{\n    float distanceToL = length(L1-pos);\n    float distanceToL2 = length(L2-pos);\n    return (\n        \tlightCol2 * 1.0/(distanceToL*distanceToL)\n           +lightCol1 * 1.0/(distanceToL2*distanceToL2)\n        \t)*.5;\n}\n\n// ------------volumetric light----------- //\n\t\nvoid mainImage(out vec4 o, in vec2 f )\n{\n    t = iTime;\n\tP00 = vec3( -1., -1., -1. );\n    e = vec3(exp(-t+2.19), exp(-t+4.57), exp(-t+8.00));\n    s = vec3(step(2.19,t), step(4.57,t), step(8.00,t));\n    olala();\n    mine = 1e5;\n    st = sin(t);\n    ct = cos(t);\n\n    vec2 R = iResolution.xy,\n          uv  = vec2(f-R/2.) / R.y;\n    h = vec3(0.);\n    \n    vec3\tdir = camera(uv);\n    vec3\tpos = vec3(.0, .0, 15.0);\n    vec2\tinter = (march(pos, dir));\n\n    o.xyz = blackbody(((h.x+h.y+h.z) )*100.);\n    o.xyz += vec3(abs(sin(t+1.04+g)), abs(sin(t+2.09+g)), abs(sin(t+3.14+g)))*(1.-inter.y*.0515);\n    o.xyz *= (1.-length(uv)*1.); // vignette\n    o.xyz += h*1.;\n}\n\nfloat\ttesseract(vec3 p)\n{\n\tfloat\tr = 1e5;\n\n    p.z+=-4.;\n\n    rotate(p.yx, (t)*.25);\n    rotate(p.zx, (t)*.25);\n\n    r = min(r, sdCapsule(p, P00, P01, .1) );\n    r = min(r, sdCapsule(p, P00, P02, .1) );\n    r = min(r, sdCapsule(p, P01, P03, .1) );\n    r = min(r, sdCapsule(p, P02, P03, .1) );\n\n    r = min(r, sdCapsule(p, P04, P05, .1) );\n    r = min(r, sdCapsule(p, P04, P06, .1) );\n    r = min(r, sdCapsule(p, P05, P07, .1) );\n    r = min(r, sdCapsule(p, P06, P07, .1) );\n\n    r = min(r, sdCapsule(p, P00, P04, .1) );\n    r = min(r, sdCapsule(p, P01, P05, .1) );\n    r = min(r, sdCapsule(p, P02, P06, .1) );\n    r = min(r, -1e5*s.y+s.x*1e5+sdCapsule(p, P03, P07, .1) );\n\n    //\n\n    r = min(r, sdCapsule(p, P08, P09, .1) );\n    r = min(r, sdCapsule(p, P08, P10, .1) );\n    r = min(r, sdCapsule(p, P09, P11, .1) );\n    r = min(r, sdCapsule(p, P10, P11, .1) );\n\n    r = min(r, sdCapsule(p, P12, P13, .1) );\n    r = min(r, sdCapsule(p, P12, P14, .1) );\n    r = min(r, sdCapsule(p, P13, P15, .1) );\n    r = min(r, sdCapsule(p, P14, P15, .1) );\n\n    r = min(r, sdCapsule(p, P08, P12, .1) );\n    r = min(r, sdCapsule(p, P09, P13, .1) );\n    r = min(r, sdCapsule(p, P10, P14, .1) );\n    r = min(r, sdCapsule(p, P11, P15, .1) );\n\n    //\n\n    r = min(r, sdCapsule(p, P00, P08, .1) );\n    r = min(r, sdCapsule(p, P01, P09, .1) );\n    r = min(r, sdCapsule(p, P02, P10, .1) );\n    r = min(r, 1e5*s.y+s.x*1e5-s.z*1e5*2.+sdCapsule(p, P03, P11, .1) );\n\tr = min(r, 1e5*s.y+s.x*1e5-s.z*1e5*2.+sdCapsule(p, P04, P12, .1) );\n    r = min(r, 1e5*s.y+s.x*1e5-s.z*1e5*2.+sdCapsule(p, P05, P13, .1) );\n    r = min(r, 1e5*s.y+s.x*1e5-s.z*1e5*2.+sdCapsule(p, P06, P14, .1) );\n    r = min(r, 1e5*s.y+s.x*1e5-s.z*1e5*2.+sdCapsule(p, P07, P15, .1) );\n    \n    return (r);\n}\n\nfloat\tscene(vec3 p)\n{\n    float\tmind;\n    mind = 1e5;\n\n\tmine = p.z+1.;\n    mine = min(mine, +(p.x)+6.);\n    mine = min(mine, -(p.x)+6.);\n    mine = min(mine, +(p.y)+5.5);\n    mine = min(mine, -(p.y)+5.5);\n    mine = min(mine, length(p-L1)-.1);\n\n    mind = tesseract(p);\n\n    p-= L2;\n\n    mind = min(mind, length(p)-.1);\n    mind = min(mine, mind);\n\n    return mind;\n}\n\nvec2\tmarch(vec3 pos, vec3 dir)\n{\n    vec2\tdist = vec2(0.0);\n    vec3\tp = vec3(0.0);\n    vec2\ts = vec2(0.0);\n    \n    for (int i = 1; i < I_MAX; ++i)\n    {\n    \tp = pos + dir * dist.y;\n        dist.x = scene(p);\n        dist.y += dist.x;\n        h += evaluateLight(p)*.251125;\n        if (dist.x < E || dist.y > 20.)\n        {\n            if(dist.x != mine)\n                p=vec3(0.);\n\t        g +=  (step(sin(20.*abs(p.y) ), .5) \n                  + step(sin(20.*abs(p.x) ), .5)\n                  + step(sin(20.*abs(p.z) ), .5)\n                 );\n           break;\n        }\n        s.x++;\n    }\n    s.y = dist.y;\n    return (s);\n}\n\nvoid\tolala()\n{\n\tP01 = P00+vec3(2.-2.*exp(-t), 0., 0. );\n    P02 = P00+s.x*vec3(0., 2.-2.*e.x, 0. );\n    P03 = P00+s.x*vec3(2., 2.-2.*e.x, 0. );\n    P04 = P00+s.y*vec3(0., 0., 2.-2.*e.y );\n    P05 = P00+s.y*vec3(2., 0., 2.-2.*e.y );\n    P06 = P00+s.y*vec3(0., 2., 2.-2.*e.y );\n    P07 = P00+s.y*vec3(2., 2., 2.-2.*e.y );\n    P08 = P00+s.z*vec3(-2.+2.*e.z, -2.+2.*e.z, -2.+2.*e.z );\n    P09 = P00+s.z*vec3(4.-2.*e.z, -2.+2.*e.z, -2.+2.*e.z );\n    P10 = P00+s.z*vec3(-2.+2.*e.z, 4.-2.*e.z, -2.+2.*e.z );\n    P11 = P00+s.z*vec3(4.-2.*e.z, 4.-2.*e.z, -2.+2.*e.z );\n    P12 = P00+s.z*vec3(-2.+2.*e.z, -2.+2.*e.z, 4.-2.*e.z );\n    P13 = P00+s.z*vec3(4.-2.*e.z, -2.+2.*e.z, 4.-2.*e.z );\n    P14 = P00+s.z*vec3(-2.+2.*e.z, 4.-2.*e.z, 4.-2.*e.z );\n    P15 = P00+s.z*vec3(4.-2.*e.z, 4.-2.*e.z, 4.-2.*e.z );\n}\n\n\n// Utilities\n\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n\tvec3 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h ) - r;\n}\n\n\nvec3\tcamera(vec2 uv)\n{\n    float   fov = 1.;\n\tvec3    forw  = vec3(0.0, 0.0, -1.0);\n\tvec3    right = vec3(1.0, 0.0, 0.0);\n\tvec3    up    = vec3(0.0, 1.0, 0.0);\n\n    return (normalize((uv.x) * right + (uv.y) * up + fov * forw));\n}\n\nvoid rotate(inout vec2 v, float angle)\n{\n\tv = vec2(cos(angle)*v.x+sin(angle)*v.y,-sin(angle)*v.x+cos(angle)*v.y);\n}","name":"Image","description":"","type":"image"}]}