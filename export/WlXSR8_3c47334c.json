{"ver":"0.1","info":{"id":"WlXSR8","date":"1561947468","viewed":174,"name":"multibrot","username":"nicknytko","description":"multibrot set","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int max_iter = 500;\nconst float min_pow = 0.0;\nconst float max_pow = 10.0;\nconst float mid_pow = (min_pow + max_pow) * 0.5;\n\nvec2 comp_pow(vec2 c, float n) {\n    /*demoivre*/\n    float theta = atan(c.y, c.x);\n    float absv = sqrt((c.x * c.x) + (c.y * c.y));\n    return pow(absv, n) * vec2(cos(theta * n), sin(theta * n));\n}\n\nfloat mandelbrot(vec2 c, float n, int maxIter) {\n    vec2 z = vec2(0.0, 0.0);\n    for (int i = 0; i < maxIter; i++) {\n        vec2 zn = comp_pow(z, n) + c;\n        if (zn.x > 2.0 || zn.y > 2.0) {\n\t        return float(i) / float(maxIter);\n\t    }\n        z = zn;\n    }\n    return 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 coord = ((fragCoord / iResolution.xy) * vec2(3.5, 2.0)) - vec2(2.0, 1);\n    float power = mid_pow - cos(iTime * 0.1) * mid_pow;\n    float val = sqrt(mandelbrot(coord, power, max_iter));\n    fragColor = vec4(val, val, val, 1.0);\n}","name":"Image","description":"","type":"image"}]}