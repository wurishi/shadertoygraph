{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Each pixel is a cell. Each cell belongs to a team. \n// Each team has one other team that they can attack, \n// and one team that they can be attacked by -- similar \n// to rock paper scissors (Rochambeau). If the \n// enough attackers surround a defending cell, it is \n// converted to the attackers' team. \n\n// Parameters can be changed in Common pass \n\n#define TAU 6.283185307\n#define SIXTY_DEG 1.047197551\n\nvec4 hsv2rgb(float h, float s, float v) {\n    float h_norm = mod(h,TAU);\n    float c = v * s;\n    float m = v - c;\n    float j = h_norm/SIXTY_DEG;\n    float x = c * (1. - abs(mod(j,2.) - 1.));\n    int r = int(floor(j));\n    return m + vec4[] (\n        vec4(c,x,0,0),vec4(x,c,0,0),\n        vec4(0,c,x,0),vec4(0,x,c,0),\n        vec4(x,0,c,0),vec4(c,0,x,0)\n    )[r];\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float val = texture(iChannel0, uv).r;\n    \n    fragColor = hsv2rgb(2.*val+TAU/2.,0.6,1.);\n}","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define RXY iResolution.xy\n\nfloat snoise(in vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / RXY;\n    if (iFrame < 4) {\n        fragColor = vec4(round(snoise(fragCoord) * float(N_TEAMS))/float(N_TEAMS),0,0,1);  \n        return;\n    } \n    int num_att = 0;\n    float att_teamval = 0.;\n    int c = int(round(texture(iChannel0,uv).r * float(N_TEAMS)));\n    for (int i = -RAD; i < RAD; i++) {\n        for (int j = -RAD; j < RAD; j++) {\n            if (i==0 && j==0) continue;\n            vec2 wuv = mod(fragCoord+vec2(i,j),RXY)/RXY;\n            float nb = texture(iChannel0,wuv).r;\n            int n = int(round(nb * float(N_TEAMS)));\n            if ((c + 1) % N_TEAMS == n) {\n                att_teamval = nb;\n                num_att += 1;\n            }\n        }        \n    }\n    if (num_att > H) {\n        fragColor = vec4(att_teamval,0,0,1);\n    } else {\n        fragColor = texture(iChannel0,uv);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[],"inputs":[],"code":"// The number of different factions/teams/groups\n#define N_TEAMS 3\n\n// The minimum distance that a cell can be attacked from.\n#define RAD 2\n\n// The number of attackers required to overwhelm a cell.\n#define H 4\n\n\n#define fl_mod(a,b) a - b * floor(a/b)","name":"Common","description":"","type":"common"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"MfKBRt","date":"1734502798","viewed":26,"name":"Rochambeautomaton","username":"wxllbxrr","description":"A cute cellular automaton inspired by rock paper scissors. See explanation in Image pass.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["automaton"],"hasliked":0,"parentid":"XfyBzd","parentname":"automan"}}