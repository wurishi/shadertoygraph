{"ver":"0.1","info":{"id":"tlcBW8","date":"1612672127","viewed":123,"name":"Feathers","username":"misfit","description":"Animation by me, feather object made following live coding example: https://www.youtube.com/watch?v=hlM940IqpRU\n\nNew to shaders any advice or tips more than welcome","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n\n// Return a 2x2 rotation matrix for an input angle\nmat2 Rot(float a){\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\n// Returns 2 random floats between 0. and 1.\nvec2 HASH12(float i)\n{\n    float x = fract(823446.789*sin(i * 3245.234));\n    float y = fract(784645.15*cos(i * 9087.45));\n    return vec2(x, y); \n}\n\n// Return 1 random float between 0. and 1.\nfloat HASH11(float i)\n{\n    float x = fract(4677.65 * sin(i*4356.23));\n    return x;\n}\n\nfloat Feather(vec2 p) {\n        // Draw the feather base shape\n       float d = length(p-vec2(0., clamp(p.y, -.3, .3)));\n       float r = mix(.1, .005, S(-.3, .3, p.y));\n       float m = S(.01, .0, d-r);\n       // Draw the feather strands\n       float side = sign(p.x);\n       float x = .9*abs(p.x)/r;\n       float wave = (1.-x)*sqrt(x) + x*(1.-sqrt(1.-x));\n       float numStrands = 500.;\n       float strandAngle = .2;\n       float y = (p.y-wave*strandAngle) * numStrands + side*56.;\n       float id = floor(y+20.);\n       float n = fract(sin(id*564.32)*763.);            // Get a random number\n       float shade = mix(.3, 1., n);\n       float strandMin = .8;\n       float strandMax = 1.5;\n       float strandLength = mix(strandMin, strandMax, fract(n*10.));\n       \n       float strand = S(.95, .05, abs(fract(y) - .5)-.3);\n       strand *= S(.01, .0, x-strandLength);\n       \n       d = length(p-vec2(0., clamp(p.y, -.45, .1)));\n       float stem = S(.004, .0, d+p.y*.0125);\n       \n       return max(m * strand * shade, stem);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -.5 to .5)\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    // Draw the background color\n    vec3 col = vec3(222. / 255., 248. / 255., 1.);\n    vec3 c1 = vec3(32. / 255., 165. / 255., 201. / 255.);\n    col = mix(c1, col, (uv.y + .5));\n    \n    int fc = 250;\n    // Draw the Features\n    for(int i = 0; i < fc; i++)\n    {\n        // Setup feather UV\n        vec2 fUV = uv;\n        \n        // Scale the feather\n        float rand1 = HASH11(float(i));           // Random between 0 and 1\n        rand1 = 10. * rand1 + .5;\n        float uvScale = 2. * rand1;\n        fUV *= uvScale;\n        \n        \n        // Set the Start time for x and y animation\n        vec2 rand2 = HASH12(float(i));\n        // Apply \"gravity\" to each feather\n        float yScale = uvScale * 3.;\n        fUV.y -= yScale * .5;\n        float t1 = iTime + rand2.y * 250.;\n        fUV.y += 2. * yScale * sin(fract(t1*.25/yScale));       // Move largers feathers faster\n        // Apply octaves to y\n        float y1 = .001 * yScale * sin(fract(t1 * .25/yScale) * 2. * 3.141593);\n        float y2 = .005 * yScale * sin(2. * fract(t1 * .125/yScale) * 2. * 3.141593);\n        fUV.y += y1 + y2;\n        // Apply random x-distribution\n        float t2 = (iTime + rand2.x + 250.) * .5;\n        float x1 = uvScale * sin(fract(t2*.25/uvScale) * 2. * 3.141593);\n        float x2 = .05 * uvScale * sin(2. * fract(t2*.05/uvScale) * 2. * 3.141593);\n        float x3 = .025 * uvScale * sin(4. * fract(t2*.025/uvScale) * 2. * 3.141593);\n        float x4 = .0125 * uvScale * sin(8. * fract(t2*.0125/uvScale) * 2. * 3.141593);\n        fUV.x -= x1 + x2 + x3 + x4;\n        \n        \n        // Rotate the feather's UV\n        float fR = fract(rand2.x * 1012.) * iTime;\n        fUV *= Rot(fR * 2. * 3.141593 * .25);\n\n        // Bend the feather\n        fUV -= vec2(0, -.45);\n        float d = length(fUV);\n        float rb = fract(rand1 * 2451.);        // Random number between 0. and 1.\n        fUV *= Rot(sin(iTime * rb) * d);\n        fUV += vec2(0, -.45);\n\n\n        col = mix(vec3(col), vec3(1), Feather(fUV));\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}