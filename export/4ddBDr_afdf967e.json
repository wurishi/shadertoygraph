{"ver":"0.1","info":{"id":"4ddBDr","date":"1527626946","viewed":84,"name":"Mandelbrot generator 2018","username":"lokmeinmatz","description":"gens a set","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["imaginary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst int MAX_IT = 255;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n    \n{\n    float ZOOM = 10.0 / (iTime * 1.0 + 1.0);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.y) * vec2(ZOOM);\n    uv = uv - vec2(ZOOM / 2.0);\n    uv += vec2(-1.0 - sqrt(iTime) * 0.08, 0.0);\n    \n    int n = 0;\n    vec2 C = uv;\n    \n    while(n < MAX_IT) {\n    \t\n        float aa = uv.x * uv.x - uv.y * uv.y;\n        float bb = 2.0 * uv.x * uv.y;\n        \n        uv.x = aa + C.x;\n        uv.y = bb + C.y;\n        \n        if(abs(uv.x + uv.y) > 16.0) {\n        \tbreak;   \n        }\n        \n        n += 1;\n        \n    }\n\t\n    float brightness = mix(0.0, 1.0, float(n) / float(MAX_IT));\n    \n    \n    vec3 col = vec3(brightness);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}