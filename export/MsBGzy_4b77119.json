{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define SIMULATION_FRAMES 300\n#define FRAMERATE 60.0\n#define RADIUS 0.05\n#define TRAIL_RADIUS_MULT 0.25\n#define START_FORCE 0.05\n#define GRAVITY_X 0.000\n#define GRAVITY_Y -0.001\n#define RESTITUTION_X 0.95\n#define RESTITUTION_Y 0.75\n\nvec2 hash( vec2 p )\n{\n    p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\treturn fract(sin(p)*43758.5453);\n}\n\nvec4 physics(vec2 p, int physicsStep, float radius)\n{\n\tvec4 c = vec4(0.0);\n\t\n\tint stepNumber = int(mod(float(physicsStep), float(SIMULATION_FRAMES)));\n\tfloat frameSeed = float(physicsStep/SIMULATION_FRAMES);\n\tvec2 startVelocity = hash(vec2(frameSeed, frameSeed));\n\t\n\tvec2 ballOrigin  = vec2(0.5, 0.5);\n\tvec2 ballVelocity = (startVelocity - 0.5) * START_FORCE;\n\tint count = 0;\n\tfor (int count = 0; count < SIMULATION_FRAMES; count++)\n\t{\n\t\tif (distance(ballOrigin, p) < radius)\n\t\t{\n\t\t\tc += TRAIL_RADIUS_MULT * vec4(1.0 - distance(ballOrigin, p) / radius);\n\t\t}\n\t\tif (count > stepNumber)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif (ballOrigin.y - radius < 0.0)\n\t\t{\n\t\t\tballOrigin.y = radius;\n\t\t\tballVelocity.y = -ballVelocity.y * RESTITUTION_Y;\n\t\t}\n\t\telse if (ballOrigin.y + radius > 1.0)\n\t\t{\n\t\t\tballOrigin.y = 1.0 - radius;\n\t\t\tballVelocity.y = -ballVelocity.y * RESTITUTION_Y;\n\t\t}\n\t\t\n\t\tif (ballOrigin.x - radius < 0.0)\n\t\t{\n\t\t\tballOrigin.x = radius;\n\t\t\tballVelocity.x = -ballVelocity.x * RESTITUTION_X;\n\t\t}\n\t\telse if (ballOrigin.x + radius > 1.0)\n\t\t{\n\t\t\tballOrigin.x = 1.0 - radius;\n\t\t\tballVelocity.x = -ballVelocity.x * RESTITUTION_X;\n\t\t}\n\t\t\n\t\tballOrigin += ballVelocity;\n\t\tballVelocity += vec2(GRAVITY_X, GRAVITY_Y);\n\t\t\n\t}\n\tif (distance(ballOrigin, p) < radius)\n\t{\n\t\tc = vec4(1.0, 0.0, 0.0, 1.0);\n\t}\n\treturn c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat aspect = iResolution.x / iResolution.y;\n\tuv.x *= aspect;\n\t\n\n\tfloat frameLength = 1.0/FRAMERATE;\n\t\n\tint simulationStep = int(iTime / frameLength);\n\n\t\n\tif (uv.x > 1.0)\n\t{\n\t\tfragColor = vec4(0.5);\n\t\treturn;\n\t}\n\t\n\tfragColor = physics(uv, simulationStep, RADIUS);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsBGzy","date":"1389986374","viewed":798,"name":"Simulated Ball","username":"Protarget","description":"Simulating random ball bounces for 300 frames at 60 fps","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["simulation","physics"],"hasliked":0,"parentid":"","parentname":""}}