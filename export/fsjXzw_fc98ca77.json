{"ver":"0.1","info":{"id":"fsjXzw","date":"1619947533","viewed":59,"name":"Black Flag","username":"shophorn","description":"Skibidi skoo, its a flag","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sdf","sinewave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float v)\n{\n    return fract(sin(v * 13212.4)*2130.13);\n}\n\nfloat smooths(float v)\n{\n    return v * v * (-2.0 * v + 3.0);\n}\n\nfloat noise(float v)\n{\n//    float \n\n    float v0 = floor(v);\n    float v1 = v0 + 1.0;\n    float t  = v - v0;\n    \n    return mix(random(v0), random(v1), smooths(t));\n}\n\nfloat circle(vec2 st, float size)\n{\n    return length(st) - size;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)) * 0.3;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n\n    float w = (uv.x - 0.2) / 0.6;\n\n  //  float H = uv.y;\n    \n//    uv.x += H;\n\n    float yOffset = 0.;\n    yOffset += sin(-iTime * 2. + uv.x * 10.) * cos(-iTime + uv.x) * 0.2 * w;\n    yOffset += sin(-iTime * 7. + uv.x * 27.7) * 0.05 * w;\n    \n    uv.y += yOffset;\n\n    uv.x += random(fragCoord.x * 0.01) * 0.5 * pow(sin(iTime), 9.) * w;\n\n\n    vec2 flagUv = (uv - 0.2) / 0.6;\n\n    float h = (uv.y - 0.2) / 0.6  * 2. - 1.;\n    h = abs(h);\n    h = smoothstep(0., 1., h);\n\n    uv.x -= (1. - h) * 0.1 * (1. - w);\n    \n\n\n    //uv.y += noise(fragCoord.x * 0.02 + iTime * 1.) * 0.2;// * pow(cos(iTime), 9.);   \n    \n\n    vec2 st = flagUv * 2. - 1.;\n    st.x *= iResolution.x / iResolution.y;\n       \n    vec3 flagColorA = vec3(0.98, 0.95, 0.92);\n    vec3 flagColorB = vec3(0.1, 0.12, 0.15);\n    \n    float size = 0.5;\n    \n    float cranium = circle(st, size);\n    float jaw = circle(st - vec2(0, -0.2), 0.35);\n    float skull = min(cranium, jaw);\n\n    float eye1 = circle(st -vec2(0.22, -0.1), 0.15);\n    float eye2 = circle(st -vec2(-0.22, -0.1), 0.15);\n    float eyes = min(eye1, eye2);\n    \n    float flagPattern = max(skull, -eyes);\n    \n    flagPattern = smoothstep(-0.01, +0.01, flagPattern);\n    \n    //flagPattern = smoothstep(-0.01, 0.01, circle(st - 0.2, size));\n       \n    vec3 flagColor = mix(flagColorA, flagColorB, flagPattern);\n    //flagColor -= yOffset;\n\n    float flag = step(0.2, uv.x) * step(uv.x, 0.8)\n                * step(0.2, uv.y) * step(uv.y, 0.8);\n    fragColor.rgb = mix(fragColor.rgb, flagColor, flag);\n    \n    \n\n    \n}","name":"Image","description":"","type":"image"}]}