{"ver":"0.1","info":{"id":"mlcfzB","date":"1701404103","viewed":16,"name":"A gradient sphere","username":"koho","description":"A gradient sphere.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Convert screen coordinates to coordinates in the range [-1, 1]\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n\n    // Calculate distance to the center\n    float distance = length(uv);\n\n    // Calculate a simple colored gradient\n    vec3 gradientColor = vec3(uv, 1.0);\n\n    // Check if inside the sphere\n    if (distance < 1.0)\n    {\n        // Inside the sphere, set color to the simple colored gradient\n        fragColor = vec4(gradientColor, 1.0);\n    }\n    else\n    {\n        // Outside the sphere, set background color to black\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}