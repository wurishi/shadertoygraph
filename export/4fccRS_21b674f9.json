{"ver":"0.1","info":{"id":"4fccRS","date":"1731068609","viewed":33,"name":"CLOUDS LEOP","username":"sugatakenji","description":"CLOUDS","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(vec2 pq)\n{\n    return fract(sin(pq.x* 124. + pq.y * 215.) * 322.44 );\n}\n\nfloat noiseSmooth(vec2 pq)\n{\n    vec2 index = floor(pq);\n    vec2 frag = fract(pq);\n    frag = smoothstep(0., 1., frag);\n    \n   \n    float topLeft = noise(index);\n    float topRight = noise(index + vec2(1,0));\n    float top = mix(topLeft, topRight, frag.x);\n    \n    float bottomLeft = noise(index + vec2(0,1));\n    float bottomRight = noise(index + vec2(1,1));\n    float bottom = mix(bottomLeft, bottomRight, frag.x);\n    \n    \n    return mix(top, bottom, frag.y);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = uv.x * (iResolution.x/iResolution.y);\n    uv.x += iTime /20.;\n    uv.y -= 0.9;\n\n\n    vec3 sky = vec3(0.5, 0.7, 0.85) ;\n    // Time varying pixel color\n    vec3 col = vec3(noise(uv*4.));\n    col += vec3(noiseSmooth(uv*8.)) * 0.5;\n    col += vec3(noiseSmooth(uv*16.)) * 0.25;\n    col += vec3(noiseSmooth(uv*32.)) * 0.125;\n    col += vec3(noiseSmooth(uv*64.)) * 0.075;\n    col /= 2.;\n    col -= uv.y - 0.2;\n    col = smoothstep(0.333, 0.9,col);\n    // Output to screen\n    \n    col = mix(vec3(1.), sky, col);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}