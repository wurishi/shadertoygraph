{"ver":"0.1","info":{"id":"st3cDj","date":"1660551924","viewed":66,"name":"autogen 82","username":"asynth","description":"Generated by a program written in Rust.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tvec3 a1 = sin(vec3(uv.y)*1.0818 + 0.0768 + iTime*0.3533);\n\tuv = xywarp(uv, vec2(0.5892, 0.5256), a1.xy);\n\tvec3 b1 = mix2(uv, vec3(0.5583, 0.1283, 0.4779), vec3(0.5495, 0.9865, 0.9049), vec3(0.9987, 0.7341, 0.8474), vec3(0.4563, 0.2843, 0.0724));\n\treturn b1;\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = (mat2(-1.0131,0.7316,-1.3441,-1.1408)*(uv-vec2(0.7319,-0.8531)));\n\treturn vec3(uv.x);\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = vec3(0.4890, 0.9540, 0.8456);\n\tvec3 a2 = noise(uv, vec2(1.0099318, 0.42543566), 0.258402);\n\tvec3 a3 = well(mod(max(mix(vec3(uv.y), vec3(atan(uv.y, uv.x)), vec3(uv.y)), abs(a1)), max(abs(vec3(length(uv))), min(vec3(length(uv)), a2)))*4.3164 + 0.6566 + iTime*0.0991);\n\treturn mod(sq(uni(a3)), mod(vec3(length(uv)), vec3(atan(uv.y, uv.x))));\n}\n\nvec3 node_4(vec2 uv) {\n\tvec3 a1 = well(vec3(atan(uv.y, uv.x))*5.4059 + 0.3064 + iTime*0.3628);\n\tuv = xywarp(uv, vec2(-0.3036, 0.5815), a1.xy);\n\tvec3 b1 = mix2(uv, vec3(0.9981, 0.9950, 0.0796), vec3(0.3071, 0.2019, 0.6968), vec3(0.2134, 0.5095, 0.1301), vec3(0.8657, 0.7890, 0.5489));\n\treturn b1;\n}\n\nvec3 node_5(vec2 uv) {\n\tvec3 a1 = sin(vec3(uv.y)*2.9360 + 0.5147 + iTime*0.2473);\n\tuv = xywarp(uv, vec2(-0.1019, -0.2533), a1.xy);\n\tvec3 b1 = noise(uv, vec2(2.4080782, 2.4338021), 0.112589);\n\tvec3 b2 = tri(abs(pthresh(0.1023, b1, vec3(atan(uv.y, uv.x)), vec3(atan(uv.y, uv.x))))*2.2895 + 0.6840 + iTime*0.2273);\n\tvec3 b3 = sin(b2*4.9893 + 0.9379 + iTime*0.1476);\n\treturn b3;\n}\n\nvec3 node_6(vec2 uv) {\n\tvec3 a1 = vec3(0.2469, 0.6071, 0.1122);\n\tuv = xywarp(uv, vec2(-0.3435, 0.3388), a1.xy);\n\tvec3 b1 = tri(node_5(uv)*5.9067 + 0.7613 + iTime*0.2172);\n\treturn b1;\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = (mat2(-0.8796,-1.3187,-1.0185,-0.7482)*(uv-vec2(-0.9942,0.1397)));\n\treturn (-vec3(length(uv)));\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.5766, -0.1218), abs(node_6(uv)).xy);\n\tvec3 b1 = noise(uv, vec2(2.2508605, 0.42391425), 0.803367);\n\treturn min(max(b1, node_7(uv)), vec3(atan(uv.y, uv.x)));\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.2921, 0.5367), vec3(length(uv)).xy);\n\tvec3 b1 = mix2(uv, vec3(0.7968, 0.4697, 0.7590), vec3(0.6404, 0.4176, 0.7986), vec3(0.0033, 0.4827, 0.8221), vec3(0.2974, 0.0554, 0.7582));\n\treturn sigmoid(quant(uni(vec3(length(uv))), b1));\n}\n\nvec3 node_10(vec2 uv) {\n\tvec3 a1 = noise(uv, vec2(2.7179978, 2.5408387), 0.893867);\n\tvec3 a2 = mix2(uv, vec3(0.6437, 0.1869, 0.6009), vec3(0.1322, 0.7429, 0.4268), vec3(0.5555, 0.2646, 0.6261), vec3(0.9337, 0.2586, 0.7998));\n\tuv = xywarp(uv, vec2(-0.8152, 0.5587), (node_3(uv) + abs((-(a1 + a2)))).xy);\n\tvec3 b1 = vec3(0.3755, 0.5104, 0.6671);\n\tvec3 b2 = noise(uv, vec2(0.39919254, 1.1672714), 0.349273);\n\tvec3 b3 = well(mod((b1 * b2), vec3(uv.y))*5.4865 + 0.1627 + iTime*0.0512);\n\tvec3 b4 = vec3(0.4285, 0.0861, 0.4677);\n\tvec3 b5 = noise(uv, vec2(0.7960819, 0.6285221), 0.496747);\n\tvec3 b6 = vec3(0.3031, 0.0314, 0.1140);\n\tvec3 b7 = vec3(0.5787, 0.3973, 0.0593);\n\treturn min(min(uni(b3), quant(vec3(uv.y), mix(node_4(uv), mod(b4, vec3(length(uv))), mod(vec3(uv.x), b5)))), max(abs(pthresh(0.6966, node_8(uv), mod(b6, vec3(uv.x)), min(vec3(uv.y), max(vec3(length(uv)), b7)))), uni(node_9(uv))));\n}\n\nvec3 node_11(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.4071, 0.3430, 0.3642), vec3(0.4291, 0.1892, 0.7378), vec3(0.3622, 0.8335, 0.2829), vec3(0.1681, 0.6848, 0.0404));\n\tvec3 a2 = mix2(uv, vec3(0.8510, 0.4460, 0.1342), vec3(0.9681, 0.3927, 0.5520), vec3(0.8866, 0.5277, 0.2202), vec3(0.9693, 0.7257, 0.1941));\n\tvec3 a3 = vec3(0.6920, 0.8245, 0.4520);\n\tuv = xywarp(uv, vec2(0.3913, -0.4526), pthresh(0.6989, mix(sq(a1), vec3(uv.x), vec3(uv.y)), pthresh(0.4127, a2, uni(quant(vec3(length(uv)), vec3(uv.y))), a3), pthresh(0.3262, vec3(uv.y), mix(vec3(atan(uv.y, uv.x)), vec3(uv.x), vec3(length(uv))), vec3(uv.x))).xy);\n\tvec3 b1 = mix2(uv, vec3(0.6436, 0.3925, 0.3657), vec3(0.8438, 0.0023, 0.9862), vec3(0.1891, 0.9978, 0.5932), vec3(0.6894, 0.9373, 0.1761));\n\treturn b1;\n}\n\nvec3 top(vec2 uv) {\n\tvec3 a1 = vec3(0.3312, 0.2107, 0.5617);\n\tvec3 a2 = vec3(0.5224, 0.8586, 0.7413);\n\tvec3 a3 = noise(uv, vec2(2.8722804, 1.9177456), 0.558490);\n\tvec3 a4 = tri(vec3(atan(uv.y, uv.x))*2.5606 + 0.3593 + iTime*0.3186);\n\tvec3 a5 = sin(quant(node_2(uv), sigmoid(pthresh(0.6998, min(vec3(length(uv)), a3), a4, vec3(uv.y))))*4.2671 + 0.7731 + iTime*0.1091);\n\tvec3 a6 = well(uni(sigmoid(a5))*1.2158 + 0.3727 + iTime*0.2883);\n\tvec3 a7 = noise(uv, vec2(0.98290896, 2.5173428), 0.275226);\n\tvec3 a8 = mix2(uv, vec3(0.5689, 0.8858, 0.8310), vec3(0.5037, 0.5704, 0.4462), vec3(0.6954, 0.0706, 0.0484), vec3(0.2557, 0.1139, 0.2574));\n\tvec3 a9 = sin(node_10(uv)*1.5397 + 0.5441 + iTime*0.2266);\n\tvec3 a10 = sin((a9 - (-(-node_11(uv))))*2.4535 + 0.1246 + iTime*0.3121);\n\tvec3 a11 = sin(a10*3.8833 + 0.8488 + iTime*0.1555);\n\tvec3 a12 = mix2(uv, vec3(0.6283, 0.8113, 0.0182), vec3(0.0151, 0.1976, 0.3691), vec3(0.8231, 0.5101, 0.0116), vec3(0.8436, 0.8852, 0.0214));\n\tvec3 a13 = mix2(uv, vec3(0.3171, 0.9940, 0.4625), vec3(0.6291, 0.1365, 0.5548), vec3(0.0782, 0.7875, 0.4716), vec3(0.9696, 0.2373, 0.0063));\n\tvec3 a14 = mix2(uv, vec3(0.4898, 0.4070, 0.2182), vec3(0.2354, 0.7869, 0.1117), vec3(0.1129, 0.5876, 0.0950), vec3(0.4614, 0.2379, 0.2112));\n\tvec3 a15 = well(max(min(a12, vec3(uv.y)), (quant(vec3(length(uv)), a13) - max(vec3(atan(uv.y, uv.x)), a14)))*4.4740 + 0.2547 + iTime*0.2893);\n\tvec3 a16 = tri(mod(a11, a15)*4.2329 + 0.4730 + iTime*0.0506);\n\treturn (bi(max(mix(min(a1, max(node_1(uv), a2)), sq(a6), sigmoid(pthresh(0.6070, a7, a8, vec3(length(uv))))), a16)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}