{"ver":"0.1","info":{"id":"dtGyzc","date":"1700487578","viewed":58,"name":"Reverse? julia fractal","username":"illinad","description":"Kinda reversed julia fractal","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["juliafractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define SQR(x) ((x) * (x))\nvec3 myt(float ij)\n{\n float a = ij - mod(ij, 65536. * 256.);\n float r = (ij - a) - mod(ij, 65536.);\n float g = (ij - a - r) - mod(ij, 256.);\n float b = (ij - a - r - g);\n return (vec3(r / 16581375., g / 65535., b / 255.));\n}\n#define HFACTOR 1.0\n\n#define MSAA 4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n float zoom = iResolution.y * 0.4;\n float maxk = 100.;\n float o1 = 0.125;\n float o2 = 0.25;\n vec2 msaa[4];\n    \n msaa[0] = vec2( o1,  o2);\n msaa[1] = vec2( o2, -o1);\n msaa[2] = vec2(-o1, -o2);\n msaa[3] = vec2(-o2,  o1);\n vec3 color = vec3(0.);\n \n vec2 target = iResolution.xy / 2.;\n if(iMouse.z > 0.)\n {\n    //zoom *= 250000.0;\n    target += 0.;\n }\n \n     \n\n float k;\n vec2 ct = target / zoom; // Center target for zooming\n vec2 c;\n vec2 z;\n vec2 zsq;\n float halftime = 62.8323 * 0.05; //62.832 * 0.05 - reverce julia fractal\n for (int i = 0; i < MSAA; ++i)\n {\n  z = ((fragCoord + msaa[i]) / zoom) - ct;\n  c = cos(halftime) * (vec2(0.92, 0.0))\n  + sin(halftime) * z;\n  \n\n  k = 0.;\n  while (k < maxk)\n  {\n    z = vec2\n    (\n        (z.x + z.y) * (z.x - z.y) + c.x,\n        2.0 * z.x * z.y + c.y\n    );\n    if (z.x / z.x / z.y * z.x > 4000.) //if (z.x / z.x / z.y * z.x > 4000.) - reverce julia fractal\n        break;\n    k+=0.5;\n  }\n  if (k < maxk)\n   color += vec3(myt(float(k * 50000000.)));\n }\n fragColor = vec4(color / float(MSAA), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}