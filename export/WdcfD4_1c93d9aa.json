{"ver":"0.1","info":{"id":"WdcfD4","date":"1605052900","viewed":118,"name":"Inescapable Light","username":"ShaderPrankster","description":"[WARNING]: Effect may be harmful to those who react badly to flashing patterns. Turn off SAFEMODE to have the intended speed if you don't have such condition.\nWheeeeewwww! This blackhole seems to travel faster than the light it consumes. Ain't that weird?","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","blackhole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based off an implementation by Inigo Quilez\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define SAFEMODE 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized coordinates (-1 to 1 vertically)\n    vec2 p = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n\n    // angle of each pixel to the center of the screen\n    float a = atan(p.y + sin(iTime),p.x + cos(iTime)) + (sin(iTime) * 1.0);\n\n    // cylindrical tunnel\n    float r = length(p.xy) - 0.1;\n    \n    #if SAFEMODE\n    float speed = 0.1;\n    #else\n    float speed = 0.03;\n    #endif\n    \n    // index texture by (animated inverse) radious and angle\n    vec2 uv = vec2( speed/r + 0.1*iTime, a/3.1415927 );\n\n    // fetch color with correct texture gradients, to prevent discontinutity\n    vec2 uv2 = vec2( uv.x, atan(p.y,abs(p.x))/3.1415927 );\n    vec3 col = textureGrad( iChannel0, uv, dFdx(uv2), dFdy(uv2) ).xyz;\n    \n    fragColor = vec4(col * r, 1.0 );\n}","name":"Image","description":"","type":"image"}]}