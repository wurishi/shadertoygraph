{"ver":"0.1","info":{"id":"7lyBWK","date":"1665235093","viewed":364,"name":"A.I. Lucifer","username":"Radical_Ed","description":"the A.I. Lucifer, is an Evil Artificial Intelligence that resides in the Nexus levels of the Netsphere, from where  dominates the Silicon Life Society and the City-Labyrinth, controlling the Silicon Creatures and the Safeguard System; ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["blampunk","akirabasho"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//rework of this shader https://www.shadertoy.com/view/3llGzH created by Vovosunt\n\n#define thick   0.04\n#define smooth  (16.0 / iResolution.x)\n#define PI      3.1415926535\n#define S(x) smoothstep(-smooth, smooth, x)\n#define SR(x, y) smoothstep(-smooth * y, smooth * y, x)\n#define scalex 5.\n#define scaley 5.\n#define scx (scalex * PI * 2.)\n\n//Palettes by Inigo Quilez https://iquilezles.org/articles/palettes\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 pal1(in float t){\n    return pal(t, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.4,0.03,0.77)) ;\n}\n\nfloat rand(vec3 v){\n    return fract(cos(dot(v,vec3(13.46543,67.1132,123.546123)))*43758.5453);\n}\n\nfloat rand(vec2 v){\n    return fract(sin(dot(v,vec2(5.11543,71.3177)))*43758.5453);\n}\n\nfloat rand(float v){\n    return fract(sin(v * 71.3132)*43758.5453);\n}\n\nvec2 rand2(vec2 v){\n    return vec2(\n        fract(sin(dot(v,vec2(5.11543,71.3132)))*43758.5453),\n        fract(sin(dot(v,vec2(7.3113,21.5723)))*31222.1234)\n        );\n}\nvec2 rotate(vec2 st, float angle){\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2(c, -s, s, c) * st;\n}\nfloat smrand(float v){\n    float vv = floor(v);\n    return mix(rand(vv),rand(vv+1.0),fract(v));\n}\n\nvec3 eye(vec2 fst, vec2 cst, vec2 mouse){\n    float mouseDown = clamp(iMouse.z, 0.0, 1.0);\n    float noise = rand(cst);\n    \n    float nt = iTime*0.3 * (noise + 0.8 ) +noise * 100.0;\n    float fnt = floor(nt);\n    vec2 noise2 = rand2(cst + vec2(fnt));\n    vec2 noise22 = rand2(cst + vec2(fnt + 1.));\n    float pinoise = noise2.x * PI * 2.0;\n    float pinoise2 = noise22.x * PI * 2.0;\n    float move = 1.0 - (cos(fract(nt)*PI)+1.0) /2.0;\n    move = pow(move,4.0);\n    \n    float eyeOpen = (sin(iTime*0.1 + noise * 100.0) + 1.0) / 2.0;\n    eyeOpen = mix(eyeOpen,0.0, mouseDown);\n    eyeOpen = 1.0 - pow(eyeOpen, 3.0);\n    \n    float col = (sin(fst.x) + 1.)/2.0;\n    //col = pow(col,0.9);\n    float col2 = col* eyeOpen + fst.y*2.1 - 0.1;\n    col = col* eyeOpen - fst.y*2.1 - 0.1;\n    float cs1 = min(col - 0.1, col2- 0.1);\n    float cs2 = S(cs1);\n    col = S(min(col, col2));\n    \n    float grad = min(eyeOpen * 1.2, 1.);\n    //grad = min(1.0 - pow(1.0 -abs(fst.y),10.) + 0.3,1.0);\n    \n    vec2 loc = vec2(fract(fst.x/PI/2.0 + PI*2.0) - 0.53,fst.y*iResolution.y/iResolution.x);\n    \n    vec2 pin2 = mix(vec2(cos(pinoise),sin(pinoise))*((noise2.y +1.0) / 2.0),\n                    vec2(cos(pinoise2),sin(pinoise2))*((noise22.y +1.0) / 2.0),move);\n    pin2 *= 0.25;\n    pin2 =  mix(pin2, mouse, max(mouseDown - 0.05,0.));\n    \n    float lloc = length(loc);\n    float irisn = mix(1.0,mix(noise2.x, noise22.x, move),0.25);\n    float iris = length(loc - pin2 * (0.5 -lloc) );\n    float irisWhite = length(loc - pin2 * (0.2 -lloc) );\n    float irisDark = SR(length(loc - pin2 * (0.4 -lloc) ) - 0.05 * irisn,0.5);\n    float irisShadow = SR(-irisWhite + 0.07,15.);\n    irisWhite = SR(-irisWhite + 0.03,1.4);\n    \n    vec3 irisColor = irisDark *pal1( irisShadow + nt/10.0);\n    irisColor = max(irisColor, irisWhite*0.9);\n    vec3 baseCol = vec3(SR(-lloc+ .25,15.));\n    baseCol = baseCol + 0.15*pal1( baseCol.x + nt/10.0);\n    \n    vec3 finCol = mix(baseCol, irisColor, S(-iris + 0.15));\n    finCol = mix(pal1(noise + nt/10.0) * grad,finCol, cs2);\n    finCol = min(finCol, col);\n   \n    \n    return finCol;\n}\n\nvec3 textex(sampler2D channel, vec3 p)\n{\n    vec3 ta = texture(channel, p.xy).xyz;\n    vec3 tb = texture(channel, p.xz).xyz;\n    vec3 tc = texture(channel, p.yz).xyz;\n    return (ta * ta + tb * tb + tc * tc) / 3.0;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st = (fragCoord.xy)/ iResolution.xy;\n    vec2 mouse = (iMouse.xy)/ iResolution.xy;\n    \n  \n    \n    //st*=rotate(st,sin(iTime));\n    \n    \n    \n    \n    float fsty = fract(st.y * scaley) - 0.5;\n    float fsty2 = fract(st.y * scaley  + 0.5) - 0.5;\n    float csty = floor(st.y * scaley);\n    float csty2 = floor(st.y * scaley + 0.5);\n    float cstx = floor(st.x * scalex);\n    float cstx2 = floor(st.x * scalex + 0.5);\n    vec2 cst = vec2(cstx,csty);\n    vec2 cst2 = vec2(cstx2,csty2 + 1234.);\n    vec2 fst = vec2(st.x * scx - 0.5 * PI, fsty);\n    vec2 fst2 = vec2(st.x * scx + 0.5 * PI, fsty2);\n\n    \n    vec2 m1 = mouse - vec2((cstx + 0.5)/scalex, (csty + 0.5)/scaley);\n    vec2 m2 = mouse - vec2((cstx2 + 0.5)/scalex, (csty2 + 0.5)/scaley);\n    \n  \n    \n    vec3 col = eye(fst, cst, m1) + eye(fst2,cst2,m2);\n    col+=vec3(0.0,0.0,0.5);\n    col+=col*vec3(0.1,0.0,0.2);\n    col*=vec3(0.1,0.0,0.7);\n   \n    vec3 col2 = vec3(0.15,0.0,0.0);\n    \n    col2 += texture(iChannel0, vec2(st.x*cos(iTime/70.),st.y*cos(iTime/70.))).rgb -(0.0,0.3,0.3);\n    \n    //col2*=rotate(col2,sin(iTime));\n    \n    col = col + col2;\n    \n    //col = max(col,col2);\n    \n  \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}