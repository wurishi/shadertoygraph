{"ver":"0.1","info":{"id":"XttyD2","date":"1534158499","viewed":138,"name":"waveform renderer","username":"jimmyjimmy","description":"Basic waveform rendering with crappy anti-aliasing.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["audio","waveform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float one_hx = 1.0 / iResolution.x;\n    float one_vx = 1.0 / iResolution.y;\n\n   \n    float a = texture(iChannel0, vec2(uv.x, 1.0)).x;\n    float b = texture(iChannel0, vec2(uv.x, 1.0) + vec2(one_hx, 0.0)).x;\n   \n    float der = (a-b);\n    \n    if(der < 0.0) {\n        \n        float c = texture(iChannel0, vec2(uv.x, 1.0) - vec2(one_hx, 0.0)).x;\n        \n        der = (a-c);\n    } else if(der == 0.0) {\n        der = one_vx;\n    }\n    \n    \n    der = abs(der);\n    \n   \n#if 0\n    float dist = (uv.y - a);\n#else\n    float sign_val = (uv.y - 0.5);\n    float dist;// = 0.0;\n\n    if(sign_val > 0.0){\n       dist = uv.y - (0.5 + (a*0.5));    \n    } else {    \n       dist =  -(uv.y - ((0.5 - (a*0.5))));\n    }\n    \n#endif\n   \n    \n    // Time varying pixel color\n    vec3 col1 = vec3(0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)));\n\n    float epsilon = one_vx;//0.01;\n   \n    \n    vec3 col2 = vec3(1.0) - col1;//vec3(cos(iTime*2.0)+uv.x);//vec3(0.0);// mix(vec3(255.0/255.0, 143.0/255.0, 64.0/255.0), vec3(255.0/255.0, 104.0/255.0, 64.0/255.0), ((uv.y)/0.4));\n    \n    float t = 0.0;\n\n    \n    \n    if(dist < 0.0) {\n        t = 1.0;       \n        //col2 = vec3(1.0, 0.0, 0.0); \n        \n        if(abs(dist) < abs(der)) {            \n            der = abs(der);\n            t =  (abs(dist) / der);\n        } else if(abs(dist) < abs(epsilon)) {\n            dist /= epsilon;\n\n            float pixel_opacity = 1.0-clamp(0.5 - dist, 0.0, 1.0);\n            t = pixel_opacity; \n        \n        } else { \n\n        }\n    } \n   \n    // Output to screen\n    fragColor = vec4(mix(col2, col1, t), 1.0);//vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}