{"ver":"0.1","info":{"id":"ctccW4","date":"1699175108","viewed":42,"name":"line_noise_2","username":"yufengjie","description":"the book of shader homework","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n#define PI 3.1415926;\n\n\nfloat pix;\n\nfloat SMOOTH(float D, float d, float pixNum) {\n  return smoothstep(D - pixNum * pix, D + pixNum * pix, d);\n}\n\n// rand and noise is from https://thebookofshaders.com/11/?lan=ch\nfloat rand(float x) {\n  return fract(sin(x + iTime * 0.1) * 1.0);\n}\nfloat noise(float x) {\n  float i = floor(x);\n  float f = fract(x);\n  return mix(rand(i), rand(i + 1.0), smoothstep(0., 1., f));\n}\n\nfloat plot(vec2 st, float k) {\n  return 1. - SMOOTH(0., abs(st.y - noise(st.x + k)), 100.);\n}\n\n// https://iquilezles.org/articles/palettes/\nvec3 palette(float t) {\n  vec3 a = vec3(0.186, 0.966, 0.731);\n  vec3 b = vec3(0.199, 0.400, 0.604);\n  vec3 c = vec3(1.432, 0.024, 0.755);\n  vec3 d = vec3(0.048, 2.989, 2.952);\n\n  float TWO_PI = 2.0 * PI;\n  return a + b * cos(TWO_PI * (c * t + d));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 st = fragCoord.xy / iResolution.y;\n  pix = 1. / iResolution.y;\n  vec3 finc = vec3(0.0);\n\n  float ratio = 4.;\n\n  st *= ratio;\n  st.y -= 1.;\n  st.x += iTime;\n\n  for(float k = 0.; k < 2.; k += .5) {\n    vec3 c = palette(noise(st.x - k +iTime*0.001));\n    finc += c * plot(st, k);\n  }\n\n  fragColor = vec4(finc, 1.0);\n}","name":"Image","description":"","type":"image"}]}