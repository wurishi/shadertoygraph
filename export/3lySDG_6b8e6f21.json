{"ver":"0.1","info":{"id":"3lySDG","date":"1583437312","viewed":139,"name":"BuzzyFloor","username":"antoinefortin","description":"dddd","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["buzzyfloor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n  \tvec2 uv = (fragCoord-.5 * iResolution.xy) /iResolution.y;\n\tvec2 uv2= uv;\n    \n    uv.x = mod(uv.x+ .25, .5) -.25;\n\tuv.y = mod(uv.y + .25, .5) - .25;\n    uv.x = abs(uv.x);\n    \n    uv2.x = mod(uv2.x+ .12, .24) -.12;;\n    \n    \n    uv.xy *= 5.0;\n    // Time varying pixel color\n    vec2 d= vec2(length(uv) * (abs(sin(iTime / 5.))  * 2.5) + 1.5);\n    d.x = mod(d.x+ .5, 1.) -.5;\n    d.y = mod(d.y+ .3, 0.6) -.3;\n    d.x = abs(d.y+ abs(sin((iTime))) * d.x + abs(cos(iTime) / 2.));\n    \n    // Tile 2\n    vec2 d2 = vec2(length(uv2) * (abs(cos(iTime / 2.5))  * 1.75) + 12.5);\n    d2.x = mod(d2.x+ 1., .5) - 1.;\n    d2.y = mod(d2.y+ .3, 0.6) -.3;\n    d2.x = abs(d2.y+ abs(sin((iTime))) * d2.x + abs(cos(iTime) / 2.));\n \t\n    \n    \n\n    vec3 col = vec3(d.y, d.x, sin(d.x));\n\tvec3 col2 = vec3(d2.x, d2.y, 0.25);\n\t\n    col += (col2 * sin(iTime));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}