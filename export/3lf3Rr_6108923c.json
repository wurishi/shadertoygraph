{"ver":"0.1","info":{"id":"3lf3Rr","date":"1555430284","viewed":456,"name":"Toonish Shader","username":"DanBrink","description":"Testing Sobel Shader","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["sobel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;   \n    \n    float x = 5.0 / iResolution.x;\n    float y = 5.0 / iResolution.y;\n    vec3 color_resolution = vec3(6.0, 6.0, 6.0);\n\tvec3 color_bands = floor(texture(iChannel0, uv).rgb * color_resolution) / (color_resolution - 1.0);\n\n    vec4 horizEdge = vec4( 0.0 );\n    horizEdge -= texture( iChannel0, vec2( uv.x - x, uv.y - y ) ) * 1.0;\n    horizEdge -= texture( iChannel0, vec2( uv.x - x, uv.y     ) ) * 2.0;\n    horizEdge -= texture( iChannel0, vec2( uv.x - x, uv.y + y ) ) * 1.0;\n    horizEdge += texture( iChannel0, vec2( uv.x + x, uv.y - y ) ) * 1.0;\n    horizEdge += texture( iChannel0, vec2( uv.x + x, uv.y     ) ) * 2.0;\n    horizEdge += texture( iChannel0, vec2( uv.x + x, uv.y + y ) ) * 1.0;\n    vec4 vertEdge = vec4( 0.0 );\n    vertEdge -= texture( iChannel0, vec2( uv.x - x, uv.y - y ) ) * 1.0;\n    vertEdge -= texture( iChannel0, vec2( uv.x    , uv.y - y ) ) * 2.0;\n    vertEdge -= texture( iChannel0, vec2( uv.x + x, uv.y - y ) ) * 1.0;\n    vertEdge += texture( iChannel0, vec2( uv.x - x, uv.y + y ) ) * 1.0;\n    vertEdge += texture( iChannel0, vec2( uv.x    , uv.y + y ) ) * 2.0;\n    vertEdge += texture( iChannel0, vec2( uv.x + x, uv.y + y ) ) * 1.0;\n    vec3 edge = sqrt((horizEdge.rgb * horizEdge.rgb) + (vertEdge.rgb * vertEdge.rgb));\n\t\n    if (length(edge) >= 2.8)\n    {\n    \tfragColor = vec4( vec3(0, 0, 0), texture( iChannel0, uv ).a );\n    }\n    else\n    {\n       \n\t\tfragColor =  vec4(min(color_bands, 1.0), texture(iChannel0, uv).a);\n    }\n}\n","name":"Image","description":"","type":"image"}]}