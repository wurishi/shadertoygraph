{"ver":"0.1","info":{"id":"flcyR2","date":"1660090506","viewed":110,"name":"Fluid flow simulation + shaping","username":"mattdeeds","description":"Simple simulation of fluid flow without momentum.  Click to push the ground level down.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const bool showProfile = false;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  if (showProfile) {\n    ivec2 iFragCoord = ivec2(fragCoord);\n\n    // int y = int(iResolution.y * 0.5);\n    int y = iFrame % int(iResolution.y);\n\n    vec4 cur = texelFetch(iChannel0, ivec2(fragCoord.x, y), 0);\n  \n    if (fragCoord.y < cur.r * 100.0) {\n      fragColor = vec4(0.5, 0.2, 0.0, 1.0);\n    } else if (fragCoord.y < cur.r * 100.0 + cur.b) {\n      fragColor = vec4(0.0, 0.0, 1.0, 1.0);\n    } else {\n      fragColor = vec4(0.6, 0.8, 1.0, 1.0);\n    }\n  } else {\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n  }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\nfloat inFlow(in vec4 sink, in ivec2 source_pos) {\n  vec4 source = texelFetch(iChannel0, source_pos, 0);\n\n  float flow = 0.2 * ((source.b + 100.0 * source.r) - (sink.b + 100.0 * sink.r));\n  flow = clamp(flow, -sink.b * 0.125, source.b * 0.125);\n  return flow;\n}\n\n\nfloat deltaWater(in ivec2 fragCoord) {\n  vec4 sink = texelFetch(iChannel0, fragCoord, 0);\n  \n  float in_flow = 0.0;\n  in_flow += inFlow(sink, fragCoord + ivec2(1,0));\n  in_flow += inFlow(sink, fragCoord + ivec2(-1,0));\n  in_flow += inFlow(sink, fragCoord + ivec2(0, 1));\n  in_flow += inFlow(sink, fragCoord + ivec2(0, -1));\n\n  in_flow += 0.707 * inFlow(sink, fragCoord + ivec2(1, 1));\n  in_flow += 0.707 * inFlow(sink, fragCoord + ivec2(-1, 1));\n  in_flow += 0.707 * inFlow(sink, fragCoord + ivec2(-1, -1));\n  in_flow += 0.707 * inFlow(sink, fragCoord + ivec2(1, -1));\n\n\n  return in_flow;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  if (iFrame == 0) {\n    float r = length(fragCoord - iResolution.xy * 0.5);\n    \n    float r2 = length(fragCoord - vec2(100.0, 100.0));\n    \n    float h = 0.003 * r;\n    float water = max(0.1, 10.0 * smoothstep(10.0, 5.0, r2));\n  \n    fragColor = vec4(h, 0.0, water, 1.0);\n  } else {\n    vec4 col = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    col.b += deltaWater(ivec2(fragCoord));\n    \n    float mr = length(fragCoord - iMouse.xy);\n    if (mr < 10.0) {\n      col.r = max(0.0, col.r - (10.0 - mr) * 0.001);\n    }\n    \n    fragColor = col;\n  }\n}","name":"Buffer A","description":"","type":"buffer"}]}