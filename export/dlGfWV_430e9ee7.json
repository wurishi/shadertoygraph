{"ver":"0.1","info":{"id":"dlGfWV","date":"1702488023","viewed":609,"name":"Wet neural network interactive","username":"gena","description":"Add small interaction to https://www.shadertoy.com/view/mlBXRK. Pause and drag to rotate / drag.","likes":38,"published":1,"flags":0,"usePreview":0,"tags":["neuron"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on the follow tweet:\n// https://twitter.com/zozuar/status/1625182758745128981\n\n// gena: added interactivity, tuned colors a bit\n// original shader: https://www.shadertoy.com/view/mlBXRK\n\nmat2 rotate2D(float r) {\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    float t = iTime;\n    \n    vec2 n = vec2(0),q;\n    vec2 N = vec2(0);\n    vec2 p = uv + sin(t*0.1)/10.;\n    float S = 10.;\n    mat2 m = rotate2D(1. - iMouse.x * 0.0001);\n\n    for(float j=0.;j++<30.;){\n      p*=m;\n      n*=m;\n      q=p*S+j+n+t;\n      n+=sin(q);\n      N+=cos(q)/S;\n      S*=1.2;\n      \n    }\n    \n    col = vec3(1, 2, 4) * pow((N.x + N.y + 0.2)+.005/length(N), 2.1);\n    \n    //col=pow(max(vec3(0),(N.x+N.y+.5)*.1*vec3(6,1,2)+.003/length(N)),vec3(.45));\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}