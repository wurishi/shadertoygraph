{"ver":"0.1","info":{"id":"sldcWM","date":"1659963497","viewed":206,"name":"Checkerboard SDF","username":"TheTurk","description":"Distance function for a checkerboard (side length = 1).","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["distancefield","grid","sdf","checkerboard","square","distance","tiling","squaretiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float checkerboard(vec2 position) {\n    position *= 0.5;\n    vec2 d = abs(fract(position) * 2.0 - 1.0) - 0.5;\n    float s = sign(d.x * d.y);\n    return min(abs(d.x), abs(d.y)) * s;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 position = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    float scale = 1.0;\n    float d = checkerboard(position / scale) * scale;\n    \n    // same colorization that Inigo Quilez uses in his shaders\n    vec3 color = vec3(1.0) - sign(d) * vec3(0.1, 0.4, 0.7); // base color\n    color *= 1.0 - exp(-4.0 * abs(d)); // gradient\n\tcolor *= 0.8 + 0.2 * cos(120.0 * d); // ripples\n\tcolor = mix(color, vec3(1.0), 1.0 - smoothstep(0.0, 3.0, (abs(d) - 0.002) * iResolution.y));\n    if (iMouse.z > 0.0) {\n        vec2 mousePosition = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n        float d = checkerboard(mousePosition / scale) * scale;\n        color = mix(color, vec3(1.0, 1.0, 0.0), 1.0 - smoothstep(0.0, 3.0, abs(length(position - mousePosition) - abs(d)) * iResolution.y - 1.0));\n    }\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}