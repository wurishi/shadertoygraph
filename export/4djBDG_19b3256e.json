{"ver":"0.1","info":{"id":"4djBDG","date":"1502013357","viewed":324,"name":"Radial Pattern Test","username":"TambakoJaguar","description":"Just some easy shader to test how to radially fill a big circle with smaller ones, I did all from scratch without ready any other post!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","test","circles","radial","pattern","surface","disk","filling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159;\n\nconst int nbs = 12;\nconst int ncr0 = 6;\nconst float cd = 2.1;\nconst float cdm = 0.014;\nconst float psm = 0.0007;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float l = length(uv)*cd;\n    float sn = floor(0.5 + l*float(nbs));\n    if (sn<=float(nbs))\n    {\n       float ccr = sn/(cd*float(nbs));\n       float ncr = sn*float(ncr0);\n       float ncr2p = ncr/(2.*pi);\n       float a0 = atan(uv.x, uv.y);\n       float a = (floor(a0*ncr2p) + 0.5)/ncr2p;\n       vec2 cpos = ccr*vec2(sin(a), cos(a));\n        \n       float ic = smoothstep(-psm, psm, distance(uv, cpos) - cdm);\n       vec3 col = mix(vec3(1.), vec3(0.5), ic); \n       float ic2 = smoothstep(-psm, psm, length(uv) - cdm);\n       vec3 col2 = mix(vec3(1.), vec3(0.5), ic2); \n\n       fragColor = vec4(sn==0.?col2 : col, 1.);\n    }\n    else\n       fragColor = vec4(0., 0., 0., 1.);\n}","name":"Image","description":"","type":"image"}]}