{"ver":"0.1","info":{"id":"4XdSW7","date":"1719147209","viewed":59,"name":"Fork square tun Arbethi 186","username":"Arbethi","description":"Version with mouse control","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","pattern","recursion","2tweets","squares","short"],"hasliked":0,"parentid":"4lBfRD","parentname":"square tunnel ( 191 chars )"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, in vec2 u) {\n    vec2 R = iResolution.xy,\n         U = u+u-R, V; \n\n    vec2 M = iMouse.xy - .5*R ;\n    float t = atan(M.y, M.x) / 4.;\n    float res;\n    float c=cos(t);\n    float s=sin(t);\n    float r=1.;\n    \n    for(float i=r; ++i < 19.; )\n    {\n      // rotation matrix\n      U *= mat2(c,s,-s,c);\n      // convert to mirrored matrix transformation\n      V = abs(U);\n      // down scaling factor\n      r /= (abs(c)+abs(s));\n      // maximum coordinate of V to get square shape\n      res = max(V.x, V.y);\n      // ellipsoid shape\n      //res = (V.x*V.x+2.*V.y*V.y)/500.;\n      // substract Resolution to adapt to the embedded frame\n      res-= R.y*r;\n      O = clamp(1.-res,0.,1.)-O;\n    }\n  }","name":"Image","description":"","type":"image"}]}