{"ver":"0.1","info":{"id":"Mddfzr","date":"1523982714","viewed":598,"name":"2.5D Water","username":"Rafbeam","description":"Very simple 2D water. Fixed those weird waves... + Added 3D effect to reflection.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d","reflection","simple","pixel","water","waving","over"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 drawWater(vec4 water_color, sampler2D color, float transparency, float height, float angle, float wave_strength, float wave_ratio, vec2 uv);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float WATER_HEIGHT = 0.2;\n    vec4 WATER_COLOR = vec4(0.5, 0.5, 0.53, 1.0);\n    float WAVE_STRENGTH = 3.0;\n    float WAVE_FREQUENCY = 8.0;\n    float WATER_TRANSPARENCY = 0.4;\n    float WATER_ANGLE = 2.0;\n    \n    fragColor = drawWater(WATER_COLOR, iChannel0, WATER_TRANSPARENCY, WATER_HEIGHT, WATER_ANGLE, WAVE_STRENGTH, WAVE_FREQUENCY, uv);\n}\n\nvec4 drawWater(vec4 water_color, sampler2D color, float transparency, float height, float angle, float wave_strength, float wave_frequency, vec2 uv)\n{\n    angle *= uv.y/height+angle/1.5; //3D effect\n    wave_strength /= 1000.0;\n    float wave = sin(10.0*uv.y+10.0*uv.x+wave_frequency*iTime)*wave_strength;\n    wave += sin(20.0*-uv.y+20.0*uv.x+wave_frequency*1.0*iTime)*wave_strength*0.5;\n    wave += sin(15.0*-uv.y+15.0*-uv.x+wave_frequency*0.6*iTime)*wave_strength*1.3;\n    wave += sin(3.0*-uv.y+3.0*-uv.x+wave_frequency*0.3*iTime)*wave_strength*10.0;\n    \n    if(uv.y - wave <= height)\n        return mix(\n        mix(\n            texture(color, vec2(uv.x, ((1.0 + angle)*(height + wave) - angle*uv.y + wave))),\n            water_color,\n            0.6-(0.3-(0.3*uv.y/height))),\n        texture(color, vec2(uv.x + wave, uv.y - wave)),\n        transparency-(transparency*uv.y/height));\n    else\n        return texture(color, vec2(uv.x, uv.y));\n}","name":"Image","description":"","type":"image"}]}