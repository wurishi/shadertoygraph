{"ver":"0.1","info":{"id":"l3VSzK","date":"1720376866","viewed":30,"name":"Lights rotating around","username":"phluso","description":"My first shader here. It took more work than i expected, but i liked the result :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","lights"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //the following values can be changed\n        const int qtd \t= 3;\n        float radius \t= .35;\n        float lightSize = .04;\n        float speed \t= 1.;\n        vec2  axys \t\t= vec2(1, 1);\n        vec3  color     = vec3(1., 1., 1.);\n\n    vec2 pos = fragCoord.xy/iResolution.xy;\n    vec4 finalColor = vec4(0.);\n    \n    for (int i = 0; i < qtd; i++){\n        \n        float angle = (360. / float(qtd)) / 57.3;\n\n        vec2 dis = vec2(\n        \tiTime * speed + angle * float(i),\n            iTime * speed + angle * float(i)\n    \t);\n        \n        vec2 light_pos = vec2( \n            .5 + (radius * sin(dis.x) * axys.x), \n            .5 + (radius * cos(dis.y) * axys.y)\n        );\n        \n        float lightIntensity = smoothstep(lightSize, .0, distance(pos, vec2(\n            light_pos.x, \n            light_pos.y\n        )));\n        \n    \tvec4 lightColor = vec4(vec3(color), lightIntensity);\n        finalColor += lightColor * lightIntensity;\n    }\n\n    fragColor = vec4(finalColor);\n}","name":"Image","description":"","type":"image"}]}