{"ver":"0.1","info":{"id":"MtXSzB","date":"1437537180","viewed":485,"name":"fwidth aa","username":"rcread","description":"left half reduced aliasing using fwidth","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d","aa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Created by randy read - rcread/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat sum( vec2 a ) { return a.x + a.y; }\n\n//\tmodified dgreensp/kali shader https://www.shadertoy.com/view/4ljGDd\n\nconst int MAGIC_BOX_ITERS = 13;\nconst float MAGIC_BOX_MAGIC = 0.76;\n\nfloat magicBox(vec3 p) {\n    p = 1.0 - abs(1.0 - mod(p, 2.0));\n    \n    float lastLength = length(p);\n    float tot = 0.0;\n    for (int i=0; i < MAGIC_BOX_ITERS; i++) {\n      p = abs(p)/(lastLength*lastLength) - MAGIC_BOX_MAGIC;\n      float newLength = length(p);\n      tot += abs(newLength-lastLength);\n      lastLength = newLength;\n    }\n\n    return tot;\n}\n\nconst mat3 M = mat3(0.28862355854826727, 0.6997227302779844, 0.6535170557707412,\n                    0.06997493955670424, 0.6653237235314099, -0.7432683571499161,\n                    -0.9548821651308448, 0.26025457467376617, 0.14306504491456504);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 modp = mod( floor( fragCoord.xy ), 2. );\n\tfloat m = mod( sum( modp ), 2. ) * 1.5 - .5;\n    \n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    uv.x += iTime * .01;\n    vec3 p = 0.5*M*vec3(uv, 0.0);\n    float result = magicBox(p);\n    result *= 0.03;\n    result = clamp( result, 0., 1. );\n    if ( fragCoord.x < iResolution.x / 2. ) {\n        fragColor = vec4(vec3(min( result, fwidth( m * result ) / 3. )),1.0);\n    } else {\n\t\tfragColor = vec4(vec3(result),1.0);\n    }\n}","name":"","description":"","type":"image"}]}