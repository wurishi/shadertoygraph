{"ver":"0.1","info":{"id":"XXS3DV","date":"1708875343","viewed":49,"name":"RPG nightmare background","username":"retchut","description":"This is what I imagine the background looks like in nightmare sequencce inside an old-school RPG game.\nSome inspirations were the Pokemon Mystery Dungeon Red/Blue Rescue Team dream sequences, and the Dark Sanctuary scenes of the Yu-Gi-Oh anime and manga.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dream","nightmare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //Code \n    \n    // Calculate uv coordinates with displacement\n    float variationFactor = 0.5;\n    float amplitude = 0.2 + 0.1 * sin(iTime * variationFactor);\n    float xDisplacementFactor = 7.0 + 2.5*sin(iTime * variationFactor);\n    float yDisplacementFactor = 7.0 + 2.5*cos(iTime * variationFactor);\n    float xDisplacement = sin(iTime + uv.x * xDisplacementFactor);\n    float yDisplacement = cos(iTime + uv.y * yDisplacementFactor);\n    float displacement = amplitude * xDisplacement * yDisplacement;\n    vec2 displacedUV = fragCoord.xy / iResolution.xy + displacement;\n    \n    // Calculate R and B color variations\n    float factorR = 0.1+ 0.15 * sin(iTime); // introduces a variation of -0.05 to 0.25\n    float factorB = 0.1 + 0.1 * sin(iTime * variationFactor); // introduces a variation of 0.0 to 0.2, slowed down based on the variationFactor\n\n    // Sample texture from displaced UV position\n    vec3 texColor = texture(iChannel0, displacedUV).rgb;\n    vec3 alteredColor = vec3(texColor.r + factorR,0.0,texColor.b + factorB);\n\n    // Set fragment color\n    fragColor = vec4(alteredColor,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}