{"ver":"0.1","info":{"id":"XljyRw","date":"1507916644","viewed":457,"name":"Information Paradox","username":"isak","description":"2D black hole, Hawking evaporation trip art","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["noise","colorful","rainbow","symmetry","lowres","buffers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfragColor = texture(iChannel0, fragCoord.xy/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define LOW_RES 40.0\n#define COLOR vec4(0.0, 0.5, 0.5, 0.0)\n\nmat2 rot(float a) {\n\tfloat c = cos(a); float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n    // Low resolution uv coords\n    vec2 uv = fragCoord.xy - 0.5*iResolution.xy;\n    uv *= 2.0/iResolution.y;\n    uv *= 3.0 + 0.5*sin(iTime);       // Global scaling and rotation\n    uv *= rot(2.0*floor(12.0*iTime));\n    float N = floor(LOW_RES*(1.0 + 0.2*mod(iTime, 1.0))); // Lower resolution\n    uv = 2.0*floor(0.5*N*uv + 0.5)/N;\n    \n    // Texture UV coordinates\n    float scale_f = 0.99;\n    vec2 UV = scale_f*(fragCoord.xy/iResolution.xy - 0.5) + 0.5;\n\n    vec2 UV_S = UV - 0.5;\n    UV_S *= 0.7;\n    UV_S += 0.5;\n    \n    // Getting from previous frame and distorting\n    fragColor =  0.985*texture(iChannel0, UV) - 0.0*texture(iChannel0, UV_S); ; \n    fragColor.gb *= rot(0.05 + 0.01*floor(1.0 + 3.0*sin(iTime)));\n    fragColor.rg *= rot(0.05 + 0.01*floor(1.0 + 3.0*sin(iTime)));\n    \n    // Adding new stuff to this frame\n    float R = 1.0;    \n\tfragColor += COLOR*step(length(uv), R); // Disc\n   \tfragColor += 0.05*COLOR*step(length(uv*0.5), R); // Blurred disc\n    fragColor -= 1.05*COLOR*step(length(uv), R*0.99); // Black centre \n    fragColor = clamp(fragColor, -2.0, 2.0); \n}","name":"Buf A","description":"","type":"buffer"}]}