{"ver":"0.1","info":{"id":"XlK3Dm","date":"1475037760","viewed":239,"name":"inspired by dragon curve","username":"public_int_i","description":"saw rory's dragon curve post and was inspired to try something like it.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["dragon","curve","inspired","by"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Ethan Alexander Shulman 2016\n\n#define df 0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    #ifdef df\n    fragColor = vec4(max(0.,1.-(texture(iChannel0,uv).x)*length(iResolution.xy)*0.01));\n    #else\n\tfragColor = texture(iChannel0, uv);\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Ethan Alexander Shulman 2016\n\n\n#define seed_size vec2(0.4,0.3)\n\n\n#define seg_time 0.2\n\n\n#define pi 3.1415926\n\n\n\n\nvec2 rot2d(vec2 p, float a) {\n    return p*mat2(sin(a),cos(a),-cos(a),sin(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if (iTime < 1.) {\n        //seed with cube\n        fragColor = vec4(length(max(abs(uv-0.5)-seed_size/iResolution.xy*min(iResolution.x,iResolution.y), 0.)));\n        //fragColor = texture(iChannel1, uv);\n        return;\n    }\n    \n    vec4 i = texture(iChannel0, uv);\n    \n    //shift in rotated stripes\n    float timePerSeg = seed_size.y*iResolution.y/min(iResolution.x,iResolution.y)*iResolution.y/60./2.;//assumes running at 60fps\n    float t = max(0.,iTime-1.)/timePerSeg,\n          s = floor(t)+2.,\n          n = pow(s,2.),\n          a = mod(s+1.,8.)*pi/4.4254;\n    vec2 lp = rot2d(uv-0.5,mod(a,pi)+pi/2.)+0.5;\n    float q = mod(floor((lp.x)*n+0.5*max(0.,1.-mod(floor(s/2.),2.))),2.)*pi;\n    \n    if (mod(t,1.) > 4./n || s > 25.) {\n        fragColor = i;\n        return;\n    }\n    \n    a += q;\n    \n   \tvec2 suv = uv+vec2(sin(a),cos(a))/iResolution.xy;\n    i = mix(i,texture(iChannel0, suv),1.0-abs(mod(lp.x*n,2.)-1.));\n    \n    fragColor = i;\n}","name":"Buf A","description":"","type":"buffer"}]}