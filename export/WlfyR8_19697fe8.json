{"ver":"0.1","info":{"id":"WlfyR8","date":"1611709886","viewed":112,"name":"fbm_trials","username":"wnu","description":"s","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["s"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\n#define NUM_OCTAVES 4\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2. + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 R = iResolution.xy;\n    vec2 st = fragCoord.xy/R.xy;\n    \n    st -= 0.5;\n    st*= iTime/12.;\n    //float s = length(st-1.5);\n    // st += st * abs(sin(u_time*0.1)*3.0);\n    st.x *= R.x/R.y;\n    st = rotate2d(1./length(st*1./(iTime+10.)/0.002)*(iTime+10.))*st;\n    \n    vec3 color = vec3(0.0);\n\tfloat cVal = 0.;\n    int num = 5;\n    for(int i = -2; i<3;i++){\n        for(int j = -2; j<3;j++){\n        \tcVal += fbm(st+ vec2(float(i)/R.x*4.,float(j)/R.y*4.)+ fbm(st+ vec2(float(i)/R.x*4.,float(j)/R.y*4.))*10. + iTime*0.5);\n        }\n    }\n    \n    //float val = fbm(st+ fbm(st)*10. + iTime*0.5);\n    float val = cVal/25.;\n    \n    \n    //color = vec3(0.666667,1,1);\n    color = hsl2rgb(vec3(length(st)/val,0.5,val));\n    \n    vec3 c1 = vec3((139./255.),(69./255.),(19./255.));\n    float wVal = smoothstep(0.5,0.0,val);\n    //color = val*c1+wVal*length(st/iTime*12.);\n\n    \n    \n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}