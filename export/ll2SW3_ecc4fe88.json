{"ver":"0.1","info":{"id":"ll2SW3","date":"1447005100","viewed":197,"name":"BinarySubDiv2","username":"jt","description":"A binary subdivided pattern. See also [url]https://www.shadertoy.com/view/4t2SWc[/url]\n([url]https://www.shadertoy.com/view/4dcGzS[/url] for polar variant)","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["subdivision","short","binarytree","dyadicseries"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Binary Sub-Division Pattern - written 2015 by Jakob Thomsen\n\n\nvoid mainImage( out vec4 o, vec2 U )\n//void mainImage( inout vec4 o, vec2 U ) // ERROR: overloaded functions must have the same parameter qualifiers\n{\n    U /= iResolution.xy;\n    o -= o;\n    o += step(.5, fract(exp2(ceil(-log2(U.y))) * U.x / 2.));\n}\n\n\n/*\nvoid mainImage( out vec4 o, vec2 U ) // infinite zoom variant by FabriceNeyret2\n{\n    U /= exp2(fract(iTime)); // need fract - otherwise problem if iTime >= 126 (approx.)\n    o = texture(iChannel0, fract(exp2(ceil(-log2(U.y))) * U / 2.));\n}\n*/\n","name":"","description":"","type":"image"}]}