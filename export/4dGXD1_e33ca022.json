{"ver":"0.1","info":{"id":"4dGXD1","date":"1463997811","viewed":355,"name":"Hangout Self Projection Webcam","username":"maldicion069","description":"Self projection webcam example","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["webcam","hangouts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool insideRectangle(in vec2 uv, in vec2 location, in vec2 size) {\n    return \n        uv.x >= location.x && \n        uv.x <= location.x + size.x && \n        uv.y >= location.y && \n        uv.y <= location.y + size.y ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec2 start_incr = vec2(0.125,0.125);\n    vec2 size_incr = vec2(0.85,0.85);\n    \n    vec2 location = vec2(0.0);\n    vec2 size = vec2(1.0);\n    for(int i = 0; i < 7; i++) {\n        if (insideRectangle(uv, location, size)) {\n            fragColor = texture(iChannel0, (uv - location)/size);\n        }\n        location += start_incr / size_incr * 0.5;\n        size += size_incr - vec2(1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}