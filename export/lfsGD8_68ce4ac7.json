{"ver":"0.1","info":{"id":"lfsGD8","date":"1703033116","viewed":30,"name":"Deslizando","username":"Sumar","description":"Tentando mover linhas e colunas de forma independente. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAM 12.\n\nfloat rand(vec2 p){\n    return fract(sin(dot(p,vec2(134.51, 398.23))));\n}\n\nfloat movement(float t){\n    t /= 2.;\n    return (floor(t) + smoothstep(0.5, .9, fract(t)));\n}\n\n// From https://www.shadertoy.com/view/ll2GD3\nvec3 pal(in float t)\n{\n    vec3 a = vec3(0.5,0.5,0.5),\n         b = vec3(0.5,0.5,0.5),\n         c = vec3(2.0,1.0,0.0),\n         d = vec3(0.5,0.20,0.25);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){  \n    vec2 uv = .5*fragCoord/iResolution.y, uv2 = uv;\n    uv *= TAM;\n    \n    float t = iTime/5.;\n    \n    if( mod(uv.y, 2.) < 1.)\n        uv.x = TAM*fract(uv2.x - movement(t));\n    \n    \n    if( mod(uv.x, 2.) < 1.)\n        uv.y -= .5*TAM*movement(t - 1.);\n    \n    \n    uv.y += fract(uv.x) + 3.* floor(uv.y);\n    \n    fragColor = vec4(pal(rand(floor(uv))), 1.);\n}","name":"Image","description":"","type":"image"}]}