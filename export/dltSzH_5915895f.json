{"ver":"0.1","info":{"id":"dltSzH","date":"1685042314","viewed":61,"name":"Demo masks","username":"solquemal","description":"Rapid prototyping for mixing 2 textures","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["videomixing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy *2.-1.;\n    vec2 uvN = fragCoord/iResolution.xy;\n    \n    //Read first video\n    vec4 vid = texture(iChannel0, uvN) * vec4(0.0,0.,1.,1.);\n   \n    //Read second video\n    vec4 vid2 = texture(iChannel0, uvN) * vec4(1.0,0.,0.,1.);\n    \n    //Just a number for the demo\n   \tfloat beat  = max(min(abs(tan(iTime*3.14)*120./60.),1.),0.);\n    \n    //Apply any transformation in the space\n    float a = iTime;\n    uv *= mat2(cos(a),sin(a),-sin(a),cos(a));\n    \n    //Define the mask\n    float mask = step(mix(-0.15,0.15,beat),uv.x);\n\n    //Mix the videos accordin to the mask\n    vec3 col = mix(vid, vid2, mask).rgb;\n    \n \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}