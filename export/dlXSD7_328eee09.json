{"ver":"0.1","info":{"id":"dlXSD7","date":"1674866093","viewed":82,"name":"Anti-aliased disc(wip)","username":"stduhpf","description":"Trying to get analytical antialiasing of a disc. Still need to handle some edge cases, for example when the disc is to small (radius less than a single pixel diagonal). ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["subpixel","integration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float indef(float x, float y, float r2){\n    //indefinite integral of sqrt(r2-xÂ²)-y dx \n    float l = sqrt(r2-x*x);\n    return .5*((x*l)+r2*atan(x/l))-y*x;\n}\n\nfloat smoothDisc(vec2 c, float r){\n    // c: coordinates of circle center relative to the pixel (origin at pixel's \"corner\")\n    // r: radius of the circle in pixels\n    vec2 s = sign(c);\n    if(s.x==0.)s.x=1.;\n    if(s.y==0.)s.y=1.;\n    \n    float r2 = r*r;\n    float y1 = c.y+1.;\n    \n    float edge0 = y1*y1>=r2?.5-.5*s.x:clamp(s.x*sqrt(r2-y1*y1)-c.x,0.,1.);\n    float e1 = c.y*c.y>=r2?.5-.5*s.x:clamp(s.x*sqrt(r2-c.y*c.y)-c.x,0.,1.);\n    float edge1 = max(edge0,e1);\n    edge0 = min(edge0,e1);\n    \n    float Y = s.y>0.?c.y:-y1;\n    float integ = (indef(edge1+c.x,Y,r2)-indef(edge0+c.x,Y,r2));\n    \n    return clamp((s.x>0.?edge0:1.-edge1)+ integ,0.,1.);\n}\n\nfloat smoothCircle(vec2 xy, float r){\n    //Circle is a ring of width 1 pixel diagonal\n    float w = sqrt(2.);\n    return (1.-smoothDisc(xy,r-w*.5))*smoothDisc(xy,r+w*.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    \n    \n    float gr = 1./32.;\n    float pixel = gr*iResolution.x;\n    float r = .25+.25*cos(iTime*.25);\n    vec2 center = (iMouse.xy-.5*iResolution.xy)/iResolution.x;\n    if(iMouse.xy==vec2(0))center *=0.;\n\n    vec3 col = \n        smoothDisc(floor(uv*pixel)-center*pixel,r*pixel)\n    *vec3(1.);\n\n    fragColor = vec4(col,1.);\n    fragColor = mix(fragColor,vec4(1.,0.,0.,1.),smoothCircle((uv-center)/fwidth(uv),r/fwidth(uv).x));\n    fragColor = pow(fragColor,vec4(1./2.2));\n}","name":"Image","description":"","type":"image"}]}