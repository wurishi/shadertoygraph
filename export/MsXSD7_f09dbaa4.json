{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat ball(vec3 position, vec3 coord, float r)\n{\n    return length(position - coord) - r;\n}\n\nfloat scene(vec3 position)\n{\n    return min\n    (\n        ball(position, vec3((sin(iTime*0.4)*0.6), (cos(iTime*0.4)*0.6), (2.0 + (sin(iTime)*1.7))), 0.3),\n        ball(position, vec3((sin(iTime*0.8)*0.8), (cos(iTime*0.8)*0.8), (2.0+(sin(iTime*1.1)*1.8))), 0.4)\n    );\n}\n\nfloat march(vec3 ray, vec3 cam)\n{\n    vec3 position = cam;\n    for(int i=0; i<14; i++)\n    {\n        float dist = scene(position);\n        position += dist * ray;\n    }\n    return length(position - cam);\n}\n\nfloat raymarcher(vec2 fragCoord )\n{\n    vec2 pos = (fragCoord.xy / iResolution.yy) - vec2((iResolution.x/iResolution.y) * 0.5, 0.5);\n    \n    vec3 cam = vec3(0.0, 0.0, -2.0);\n    vec3 ray = normalize(vec3(pos, 1.0));\n    float lum = (1.0 / sqrt(march(ray, cam)));\n    return lum + (lum*rand(pos+iTime)*0.4);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime * 0.4;\n    vec2 pos = fragCoord.xy / iResolution.xy;\n    float a = sin(t * 1.2);\n    pos.x -= pos.x*1.8;\n    pos.x *= (pos.y * 1.6); \n    pos *= (2.5 + (sin(t)*1.7)); //zoom\n    pos = vec2((pos.x * cos(a)) - (pos.y * sin(a)), (pos.x * sin(a)) + (pos.y * cos(a))); // pyÃ¶ritys\n    \n    float l = 0.5 + (sin(pos.y*20.0)*0.5) +\n                    (cos(pos.x*20.0)*0.5);\n                    \n    l = 0.5 + (sin(l * ((20.0 * sin(t/2.0)) + 24.0)) * 0.5);\n\n    l += 0.5 + (cos(pos.y*1.1*(50.0+sin(t)*10.0))*0.5);    \n    l += 0.5 + (cos(pos.x*0.9*(40.0+sin(t)*20.0))*0.5);    \n\n    l *= 0.5;\n    l += (0.1 * rand(pos+t));\n\n    l *= 0.9 + (sin(pos.y*1.3*(2.0+(sin(iTime)*0.9)))*0.05) +\n               (cos(pos.x*1.5*(3.0+(sin(iTime)*0.4)))*0.05);\n\n    fragColor = vec4((0.5+sin(t+(sin(pos.x*(sin(t)*3.8))*0.5)))*l,\n                        (0.5+cos(t+(cos(pos.y*(cos(t/2.0)*4.4)*0.8))))*l,\n                        ((0.5+sin(t/3.0)*0.5)*l + (0.08*rand(pos + t))),\n                        1.0);\n    fragColor *= raymarcher(fragCoord );\n    fragColor *= mod(fragCoord.y, 2.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsXSD7","date":"1402187703","viewed":161,"name":"Plasmarch","username":"luutifa","description":"Just a little experiment. Had fun coding.\nNot properly optimized, though :D\n(Also, one of my first shaders ever)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","plasma"],"hasliked":0,"parentid":"","parentname":""}}