{"ver":"0.1","info":{"id":"4tyGR1","date":"1472956496","viewed":1065,"name":"Enter the Matrix","username":"stduhpf","description":"Not really finished, but it may never be.\nSprites and decoder from wordtoy : Xst3zX","likes":9,"published":1,"flags":34,"usePreview":0,"tags":["text","effect","characters","marix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float i = length(texture(iChannel1,uv).rgb);\n\tfragColor =mix(\n        texture(iChannel0,uv)*i\n        ,texture(iChannel1,uv),1.-clamp(0.,1.,iTime*.25));\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"struct list\n{\n    float ch_a;\nfloat ch_b ;\nfloat ch_c ;\nfloat ch_d;\nfloat ch_e;\nfloat ch_f;\nfloat ch_1;\nfloat ch_2;\nfloat ch_3;\nfloat ch_4;\nfloat ch_5;\nfloat ch_6;\nfloat ch_7 ;\nfloat ch_8 ;\nfloat ch_9 ;\nfloat ch_0 ;\n};\n\nlist ch = list(712557.0, 1760622.0, 706858.0, 1760110.0,2018607.0, 2018596.0,730263.0,693543.0, 693354.0, 1496649.0, 1985614.0, 707946.0, 1873042.0,\n 709994.0, 710250.0,711530.0);\n#define seed floor(iDate.w-iTime)\n\nfloat rand(float a)\n{\n    return fract(seed+sin(seed+a*753.5453123));\n}\nfloat rand(vec2 a)\n{\n    return fract(seed+656.56*sin(seed+dot(a,vec2(995454.5454,.785))));\n}\nfloat extract_bit(float n, float b)\n{\n\treturn floor(mod(floor(n / pow(2.0,floor(b))),2.0));   \n}\nfloat sprite(float spr, vec2 size, vec2 uv)\n{\n    uv = floor(uv);\n    //Calculate the bit to extract (x + y * width) (flipped on x-axis)\n    float bit = (size.x-uv.x-1.0) + uv.y * size.x;\n    \n    //Clipping bound to remove garbage outside the sprite's boundaries.\n    bool bounds = all(greaterThanEqual(uv,vec2(0)));\n    bounds = bounds && all(lessThan(uv,size));\n    \n    return bounds ? extract_bit(spr, bit) : 0.0;\n}\nfloat char(float ch, vec2 uv, in vec2 cursor)\n{\n    float c = sprite(ch, vec2(3,7), 0.5 * (uv - cursor));\n    cursor += vec2(7, 0.0);\n    return c;\n}\n\nfloat selch(vec2 uv)\n{\n    float r = floor(16.*rand(uv+floor(4.*(iTime+rand(rand(uv.x))))));\n    float  c=  0.;\n    if(r==0.)\n        c=ch.ch_0;\n        if(r==1.)\n        c=ch.ch_1;\n        if(r==2.)\n        c=ch.ch_2;\n        if(r==3.)\n        c=ch.ch_3;\n        if(r==4.)\n        c=ch.ch_4;\n        if(r==5.)\n        c=ch.ch_5;\n        if(r==6.)\n        c=ch.ch_6;\n    if(r==7.)\n        c=ch.ch_7;\n    if(r==8.)\n        c=ch.ch_8;\n    if(r==9.)\n        c=ch.ch_9;\n    if(r==10.)\n        c=ch.ch_a;\n    if(r==11.)\n        c=ch.ch_b;\n    if(r==12.)\n        c=ch.ch_c;\n    if(r==13.)\n        c=ch.ch_d;\n    if(r==14.)\n        c=ch.ch_e;\n    if(r==15.)\n        c=ch.ch_f;\n        \n\n    return c;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y+=.035*floor(15.*iTime)+10.*rand(100.*floor(uv.x*45.));\n    uv*=500.;\n    vec2 scale =vec2(9.,150.+10.*rand(152.545+100.*floor(uv.x/9.)));\n    float c=selch(floor(uv/scale));\n    uv=mod(uv,scale);\n    fragColor = vec4(char(c,uv,vec2(0)));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    fragColor = vec4(0,.85,0,0)*texture(iChannel1,uv)+vec4(texture(iChannel0,uv));\n}","name":"Buffer B","description":"","type":"buffer"}]}