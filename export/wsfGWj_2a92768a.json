{"ver":"0.1","info":{"id":"wsfGWj","date":"1547498545","viewed":478,"name":"Circles mathoverflow","username":"vchizhov","description":"For a mathoverflow question.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d","circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nvec3 hash3( uint n ) \n{\n    // integer hash copied from Hugo Elias\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    uvec3 k = n * uvec3(n,n*16807U,n*48271U);\n    return vec3( k & uvec3(0x7fffffffU))/float(0x7fffffff);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.0*uv-1.0;\n    uv *= vec2(iResolution.x/iResolution.y,1.0);\n\n    const uint n = 8u;\n    float R = 0.5;// + 0.3*sin(0.5*iTime);\n    float r = 0.13 + 0.1*sin(iTime);\n    \n    vec2 bigCircleCenter = vec2(0);\n    \n    vec3 col = vec3(1.0);\n    if(dot(uv-bigCircleCenter,uv-bigCircleCenter)<R*R)\n        col = vec3(0.0,0.0,1.0);\n    else\n    {\n        float delta = 2.0*PI/float(n);\n        float phi = iTime;\n        for(uint i=0u;i<n;++i)\n        {\n            vec2 smallCircleCenter = (R+r)*\n                vec2(cos(delta*float(i)+phi),\n                     sin(delta*float(i)+phi));\n            if(dot(uv-smallCircleCenter,uv-smallCircleCenter)<r*r)\n            {\n                col = hash3(i);\n            }\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}