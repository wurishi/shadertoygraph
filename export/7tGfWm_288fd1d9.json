{"ver":"0.1","info":{"id":"7tGfWm","date":"1665305380","viewed":654,"name":"MacOS Monterey wallpaper","username":"vincentdchan","description":"MacOS Monterey wallpaper","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["wave","wallpaper","mac","monterey"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = fragCoord/iResolution.xy;\n  fragColor = texture(iChannel0, uv);\n\n  fragColor.xyz *= (uv.y * 1.08 + 0.65);\n  // fragColor = vec4(col); // Output to screen\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\nvec3 sin_shape(in vec2 uv, in float offset_y) {\n  // Time varying pixel color\n  float y = sin((uv.x + iTime * -0.06 + offset_y) * 5.5);\n\n  float x = uv.x * 8.;\n  float a=1.;\n\tfor (int i=0; i<5; i++) {\n\t\tx*=0.53562;\n\t\tx+=6.56248;\n\t\ty+=sin(x)*a;\t\t\n\t\ta*=.5;\n\t}\n\n  float y0 = step(0.0, y * 0.08 - uv.y + offset_y);\n  return vec3(y0, y0, y0);\n}\n\nvec2 rotate(vec2 coord, float alpha) {\n  float cosA = cos(alpha);\n  float sinA = sin(alpha);\n  return vec2(coord.x * cosA - coord.y * sinA, coord.x * sinA + coord.y * cosA);\n}\n\nvec3 scene(in vec2 uv) {\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    col += sin_shape(uv, 0.3) * 0.2;\n    col += sin_shape(uv, 0.7) * 0.2;\n    col += sin_shape(uv, 1.1) * 0.2;\n\n    vec3 fragColor;\n\n    if (col.x >= 0.6 ) {\n      fragColor = vec3(0.27, 0.11, 0.64);\n    } else if (col.x >= 0.4) {\n      fragColor = vec3(0.55, 0.19, 0.69);\n    } else if (col.x >= 0.2) {\n      fragColor = vec3(0.68, 0.23, 0.65);\n    } else {\n      fragColor = vec3(0.86, 0.57, 0.68);\n    }\n    return fragColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord = rotate(fragCoord + vec2(0.0, -300.0), 0.5);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec3 col0 = scene((fragCoord * 2.0)/iResolution.xy);\n    vec3 col1 = scene(((fragCoord * 2.0) + vec2(1.0, 0.0))/iResolution.xy);\n    vec3 col2 = scene(((fragCoord * 2.0) + vec2(1.0, 1.0))/iResolution.xy);\n    vec3 col3 = scene(((fragCoord * 2.0) + vec2(0.0, 1.0))/iResolution.xy);\n\n    // Output to screen\n    fragColor = vec4((col0 + col1 + col2 + col2) / 4.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}