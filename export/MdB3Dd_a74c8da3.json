{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define BLOB_COUNT 32\n\n//utils:\nconst float PI = 3.141592653589793238;\n\nvec2 getUV(vec2 fragCoord) //(-x,0)->(1.0 + x,1.0); x < 1\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.y = 1.0 - uv.y;\n\tfloat ratio = iResolution.x / iResolution.y;\n\tuv.x *= ratio;\n\tuv.x -= (ratio - 1.0) * 0.5;\n\treturn uv;\n}\n\n//textures:\nvec3 tx0(vec2 uv)\n{\n\treturn texture(iChannel0,uv).rgb;\n}\nvec3 tx0(float u)\n{\n\treturn texture(iChannel0,vec2(u,0.0)).rgb;\n}\n\n//geometry:\nfloat sph(vec2 pos, vec2 xy, float radius)\n{\n\treturn 1.0 / (length(xy - pos) / radius);\n}\n\n//math:\nfloat sum(vec3 c)\n{\n\treturn (c.x + c.y + c.z);\n}\nfloat rand(float v)// 0 .. 1\n{\n\treturn sum(tx0(v)) * 0.6666666666;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = getUV(fragCoord) - vec2(0.1,0.0);\n\t\n\tconst int count = BLOB_COUNT;\n\tconst float fcount = float(count);\n    vec3 g_final_color = vec3(0.0);\n    \n\tfor( int i = 0; i < count; i++ )\n\t{\n\t\tfloat ind = float(i);\n\t\t//timing\n\t\tfloat t = (iTime + 100.0) * ind  * 0.42156 / fcount ;\n\t\tfloat ts = fract(t);\n\t\tfloat tz = t - ts;\n\t\t\n\t\t//angle\n\t\tfloat angle;\n\t\tangle = rand(tz * 0.67889 + ind + uv.y) * PI * 2.0;\n\t\tangle += rand(tz * 0.123456 - ind + uv.x) * PI * 2.0;\n\t\tangle += (rand(ind * 0.1664) * 2.0 - 1.0) * (ts + ind) * PI * 0.5;\n\t\t\t\n\t\t//distance and diretion vector\n\t\tvec2 dir = vec2(cos(angle),sin(angle));\n\t\tfloat distance = cos(ts * PI) * 0.5 + 0.5;\n\t\t\n\t\tvec3 color = vec3(rand(ind * 0.1553),rand(ind * 0.6631),rand(ind * 0.91223)) * 1.25;\n\t\tfloat c0 = sph(vec2(rand(ind * 0.1234),rand(ind * 0.6543)) * 0.5 + dir * distance ,uv,mix(0.0,distance * 0.5,ts));\n\t\t\n\t\tg_final_color += (c0 * color);\n        \n\t}\n\t\n\tfragColor = vec4(4.0 * g_final_color / fcount,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdB3Dd","date":"1395154926","viewed":2739,"name":"Random Blob Movement","username":"Raxvan","description":"My first post on ShaderToy, it's nothing special, i took the idea from https://www.shadertoy.com/view/lsfGzr to draw some blobs and introduce some random movement. I found the \"windows\" effect by mistake by adding uv.x and uv.y to the random angle.","likes":76,"published":1,"flags":0,"usePreview":0,"tags":["2dblobs"],"hasliked":0,"parentid":"","parentname":""}}