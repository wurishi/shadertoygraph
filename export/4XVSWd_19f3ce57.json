{"ver":"0.1","info":{"id":"4XVSWd","date":"1720642611","viewed":86,"name":"test_static_rng","username":"tetrismegistus","description":"a test of rng to make static on a per pixel basis","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hash_f_s(s)  ( float( hashi(uint(s)) ) / float( 0xffffffffU ) )\n#define hash_f()  ( float( seed = hashi(seed) ) / float( 0xffffffffU ) )\n#define hash_v2()  vec2(hash_f(),hash_f())\n#define hash_v3()  vec3(hash_f(),hash_f(),hash_f())\n#define hash_v4()  vec3(hash_f(),hash_f(),hash_f(),hash_f())\n\nuint seed;\nuint hashi(uint x) {\n    x ^= x >> 16;\n    x *= 0x7feb352dU;\n    x ^= x >> 15;\n    x *= 0x846ca68bU;\n    x ^= x >> 16;\n    return x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{     \n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;            \n    ivec2 i_coords = ivec2(fragCoord);    \n    float timeFractional = fract(iTime);\n    float timeIntegral = floor(iTime);        \n    int id = i_coords.x + i_coords.y * int(iResolution.x);\n    seed = 1235125u + uint(id) + uint(timeIntegral * 1000.0) + uint(timeFractional * 1000000.0);   \n    fragColor = vec4(vec3(hash_f()),  1.0);\n}","name":"Image","description":"","type":"image"}]}