{"ver":"0.1","info":{"id":"MsVcWR","date":"1521646716","viewed":799,"name":"HypnoCol","username":"pomb","description":"I don't know what I'm doing... but look deep into my eyes!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rings"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\nstruct ray\n{\n\tvec3 origin;\n    vec3 direction;\n};\n\nray GetRay(vec2 uv, vec3 campos, vec3 lookat, float zoom)\n{\n    ray a;\n    a.origin = campos;\n\tvec3 forward = normalize(lookat-campos);\n    vec3 right = cross(vec3(0.,1.,0.), forward);\n    vec3 up = cross(forward, right);\n    vec3 center = a.origin + forward * zoom;\n    vec3 intersectionPoint = center + uv.x * right + uv.y * up;\n    \n    a.direction = normalize(intersectionPoint-a.origin);\n    \n    return a;\n}\n\nvec3 ClosestPoint(ray r, vec3 p)\n{\n\treturn r.origin + max(0., dot(p-r.origin, r.direction))*r.direction;\n}\n\nfloat DistRay(ray r, vec3 p)\n{\n\treturn length(p-ClosestPoint(r, p));\n}\n\nfloat Ring(ray r, vec3 p, float size, float blur)\n{\n    \n    float d = DistRay(r, p);\n    \n    float c = S(size, size*(1.-blur), d);\n    c *= S(size*.8, size*.99, d);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 mouse = iMouse.xy / iResolution.xy;\n    mouse -= 0.5;\n    \n    vec3 camPos = vec3(0, .2, 0);\n    vec3 lookat = vec3(0, .2, 1.);\n    \n    float circleMoveSize = 0.02;\n    float circleMoveSpeed = iTime * 2.0f;\n    \n    lookat.x += sin(circleMoveSpeed) * circleMoveSize;\n    lookat.y += cos(circleMoveSpeed) * circleMoveSize;\n    \n    camPos.x += cos(iTime) * .2;\n    camPos.y += cos(iTime + 5.) * .1;\n\n    float speed = .05f;\n    float t = iTime * speed;\n    float s = 1./100.;\n    ray r = GetRay(uv, camPos, lookat, 2.);\n    float m = 0.;\n    \n    for(float i=0.; i<1.; i+=s)\n    {    \n        float ti = fract(t+i);\n        float z = 100.-ti*100.;\n        float fade =  ti * ti * ti * ti;\n        float focus = S(.8, 1., ti);\n        vec3 p = vec3(mouse.x, mouse.y, z);    \n        float size = mix(1.5, 10., focus * .02);         \n    \tm += Ring(r, p, size, .05) * fade;\t                \n    }\n    \n    float bgRing = S(0.95, .01, length(uv));     \n    vec3 bg = vec3(1., .9, .9) * bgRing;        \n    vec3 mask = (bg * .2) + m;\n        \n    vec3 col = 0.5 + 0.5 * sin(iTime-uv.xyx+vec3(2,4,0));\n    vec3 col2 = vec3(0.8, .85, .86);    \n    col = mix(col, col2, mask);\n    col *= mask;\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}