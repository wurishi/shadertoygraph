{"ver":"0.1","info":{"id":"4fBfzV","date":"1725237443","viewed":23,"name":"2D_simu_3D_plane","username":"arena","description":"How a plane in 3D space looks like in 2D screen","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265358979323\n\nstruct ray{\n    vec3 o,d;\n};\n\nray GetRay(vec2 uv, vec3 camPos, vec3 lookAt, float zoom){\n    ray a;\n    a.o = camPos;\n    \n    vec3 f = normalize(lookAt-camPos);\n    vec3 r = cross(vec3(0.0,1.0,0.0),f);\n    r = normalize(r);\n    vec3 u = cross(f,r);\n    vec3 c = camPos + f * zoom;\n    vec3 i = c + uv.x * u + uv.y * r;\n    \n    a.d = normalize(i-a.o);\n    \n    return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.*fragCoord-1.*iResolution.xy)/iResolution.y;\n    \n    //describe the camera\n    vec3 camPos = vec3(0.0,0.0,0.0);\n    vec3 lookAt = vec3(0.0,0.0,1.0);\n    \n    //get the ray of current pixel\n    ray r = GetRay(uv, camPos, lookAt, 0.5);\n    \n    //rotation angle\n    //float rotat = pi/2.0 * fract(iTime*.1);\n    float rotat = 0.0;\n    //describe the plane\n    vec3 tar_point=vec3(1.0,-1.0,1.0);\n    vec3 tar_normal=vec3(0.0,sin(rotat),-cos(rotat));\n    \n    //calculate the hitPoint\n    float dividend=dot(tar_normal,(tar_point-r.o));\n    float divider=dot(tar_normal,r.d);\n    float t=0.0;\n    vec3 col=vec3(0.0);\n    vec3 hitPoint;//hitPoint=r.o+t*r.d\n    //if one of both is zero, there is no single hitPoint, ignore it\n    if (abs(divider)>=1e-6 && abs(dividend)>=1e-6){\n        t=dividend/divider;\n        hitPoint=r.o+t*r.d;\n    }else{\n        return;\n    }\n    //four vertices of the texture(rectangle)\n    vec3 text_xy_00_point=vec3(-1.0,-1.0,1.0);\n    vec3 text_xy_10_point=vec3(-1.0,2.*cos(rotat)-1.0,1.0+2.*sin(rotat));\n    vec3 text_xy_11_point=vec3(1.0,2.*cos(rotat)-1.0,1.0+2.*sin(rotat));\n    vec3 text_xy_01_point=vec3(1.0,-1.0,1.0);\n    float text_x=dot((hitPoint-text_xy_00_point),(text_xy_10_point-text_xy_00_point));\n    float text_y=dot((hitPoint-text_xy_00_point),(text_xy_01_point-text_xy_00_point));\n    //plane is 2*2, so the result is 2*2, ranging in (0,4)\n    if(text_x>4.0 || text_y>4.0 || text_x<0.0 || text_y<0.0)\n    {\n        return;\n    }\n    vec2 tex_coord=vec2(text_x,text_y);\n    col=vec3(texture(iChannel0,tex_coord).x);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}