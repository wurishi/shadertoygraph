{"ver":"0.1","info":{"id":"ltjSRc","date":"1445571959","viewed":517,"name":"Clamping Gradient Circle","username":"lowww","description":"this is an experiment to generate a gradient circle, so I can use the color as clamp values. This is my first shadertoy experiment :)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circle","gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec4 circle(vec2 uv, vec2 pos, float rad) {    \n    return vec4(1.-length(uv-pos)/rad);\n}\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord ) {\n    //original code:\n    //float aspect = iResolution.x/iResolution.y;\n    //vec2 uv = fragCoord .xy / iResolution.xy;\n    //uv.x *= aspect;\n    //vec2 pos = iMouse.xy/iResolution.xy;\n    //pos.x *=aspect;\n    //fragColor = circle(uv, pos, 0.3);\n    \n    //Fabrice Neyret suggestion:\n    //vec2 R = iResolution.xy;\n\t//vec2 uv = fragCoord/R.y;\n\t//vec2 pos = iMouse.xy / R.y;\n    //fragColor = circle(uv, pos, 0.3);\n    \n    //final optimised code.\n    fragColor = vec4(1. - length( fragCoord - iMouse.xy )/iResolution.y / .3);\n\n}\n","name":"","description":"","type":"image"}]}