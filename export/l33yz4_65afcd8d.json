{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n#define Q(p) p *= 2.*r(round(atan(p.x, p.y) * 4.) / 4.)\n#define r(a) mat2(cos(a + asin(vec4(0,1,-1,0))))\n//https://www.shadertoy.com/view/mtyGWy\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n \n    vec3 finalColor = vec3(0.0);\n            float d = length(uv) * exp(-length(uv0));\n            float t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .007)) * 1.2;\nfloat si = sin(t);\nfloat co = cos(t);\nmat2 ma = mat2(co, si, -si, co);\n   \n uv*=mat2(cos(iTime), sin(iTime), -sin(iTime), cos(iTime));\n\n \n \n     float time = iTime * 0.0;\n    float angle = atan(uv.y, uv.x) + time;\n    float radius = length(uv);\n\n    // Complex pattern blending\n    float wave1 = sin(radius * 10.0 - iTime * 2.0);\n    float wave2 = cos(angle * 6.0 + iTime * 1.5);\n    float pattern = wave1 * wave2;\n\n    // Color modulation with gradient and patterns\n    vec3 baseColor = vec3(0.2, 0.3, 0.6);\n    vec3 gradient = 0.5 + 0.5 * vec3(sin(angle * 2.0), cos(angle * 2.0), sin(radius * 5.0));\n    vec3 color =  0.4 * gradient * pattern;\n\n    // Add dynamic light streaks\n    float streaks = abs(sin(angle * 8.0 - iTime * 2.0)) * exp(-radius * 10.0);\n    color += vec3(streaks, streaks * 0.8, streaks * 0.6);\n\n    // Subtle noise\n    float noise = fract(sin(dot(uv * 80.0, vec2(12.9898, 78.233))) * 43758.5453);\n    color += 0.05 * vec3(noise);\n    for (float i = 0.0; i < 4.0; i++) {\n     \n     uv*=mat2(1., 1., -1.,1. );\n        uv = fract(uv * 0.5) - 0.5;\n       \n Q(uv.xy);\n      d+= length(uv) * exp(-length(uv0*ma));\n d+=mod(d,0.21);\n        vec3 col = palette(length(uv0*ma) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d+color;\n    }\n       \n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"l33yz4","date":"1734780728","viewed":158,"name":"rainbow shine","username":"nayk","description":"originals https://www.shadertoy.com/view/mtyGWy https://www.shadertoy.com/view/McyBWd","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["fractal","color","rainbow","neon"],"hasliked":0,"parentid":"","parentname":""}}