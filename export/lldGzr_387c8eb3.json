{"ver":"0.1","info":{"id":"lldGzr","date":"1467779949","viewed":2835,"name":"Pixel Explosion","username":"Leukbaars","description":"improved version of my fireworks. Better spread, added gravity and flicker\nTo be used as retro effect shader.\n","likes":72,"published":1,"flags":0,"usePreview":0,"tags":["explosion","pixel","fireworks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float seed = 0.32; //----------------------------------------------------------starting seed\nconst float particles = 32.0; //----------------------------------------------change particle count\nfloat res = 32.0; //-----------------------------------------------------------pixel resolution\nfloat gravity = 0.72; //-------------------------------------------------------set gravity\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n   \tfloat clr = 0.0;  \n    float timecycle = iTime-floor(iTime);  \n    seed = (seed+floor(iTime));\n    \n    //testing\n    float invres=1.0/res;\n    float invparticles = 1.0/particles;\n\n    \n    for( float i=0.0; i<particles; i+=1.0 )\n    {\n\t\tseed+=i+tan(seed);\n        vec2 tPos = (vec2(cos(seed),sin(seed)))*i*invparticles;\n        \n        vec2 pPos = vec2(0.0,0.0);\n        pPos.x=((tPos.x) * timecycle);\n\t\tpPos.y = -gravity*(timecycle*timecycle)+tPos.y*timecycle+pPos.y;\n        \n        pPos = floor(pPos*res)*invres; //-----------------------------------------comment this out for smooth version \n\n    \tvec2 p1 = pPos;\n    \tvec4 r1 = vec4(vec2(step(p1,uv)),1.0-vec2(step(p1+invres,uv)));\n    \tfloat px1 = r1.x*r1.y*r1.z*r1.w;\n        float px2 = smoothstep(0.0,200.0,(1.0/distance(uv, pPos+.015)));//added glow\n        px1=max(px1,px2);\n        \n\t    clr += px1*(sin(iTime*20.0+i)+1.0);\n    }\n    \n\tfragColor = vec4(clr*(1.0-timecycle))*vec4(4, 0.5, 0.1,1.0);\n}","name":"Image","description":"","type":"image"}]}