{"ver":"0.1","info":{"id":"4t2SRm","date":"1442508024","viewed":274,"name":"Basic : Fractal Noise","username":"Gijs","description":"Messing around with fractal noise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float octaves = 4.;\n\nfloat noise(vec2 p){\n    return texture(iChannel0,p).x;\n}\n\n\nfloat fractalnoise(vec2 p){\n    float sum = 0.;\n    \n    float amplitude = 1.;\n    float frequency = 1.;\n    float sumamplitudes = 0.;\n    for(float o = 0.; o < octaves; o++){\n        sumamplitudes += amplitude;\n        \n    \tsum += noise(p * frequency) * amplitude;\n        amplitude /= 2.;\n        frequency *= 2.;\n    }\n    \n    return sum / sumamplitudes;\n        \n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 sp  = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    \n    fragColor = vec4(vec3(fractalnoise(sp*0.1+iTime*.01)),1.);\n}","name":"Image","description":"","type":"image"}]}