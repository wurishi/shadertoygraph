{"ver":"0.1","info":{"id":"sdy3WD","date":"1631555075","viewed":291,"name":"Very Cheap Upscaling","username":"lieks","description":"This is a tiny, fast, texture upscaler. Drag the mouse sideways to compare with bilinear filtering. Disable mipmapping for best results.\n\nIt generates some aliasing, but might still be useful to dynamically upscale somewhat low-resolution textures.","likes":7,"published":1,"flags":0,"usePreview":1,"tags":["texture","upscaling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(vec4 a, vec4 b)\n{\n    return abs((a.r+a.g+a.b) - (b.r+b.g+b.b))/3.0;\n}\n\nvec4 texturevcus(sampler2D s, vec2 uv)\n{\n    vec2 res = vec2(textureSize(s, 0));\n    vec2 iuv = floor(uv * res - 0.5) + 0.5;\n\n    vec4 col = texture(s, uv);\n    vec4 col0 = vec4(1.0);\n    for (int x = 0; x <= 1; x++) {\n        for (int y = 0; y <= 1; y++) {\n            vec4 coln = texture(s, (iuv + vec2(x, y)) / res);\n            if (dist(col, col0) > dist(col, coln))\n                col0 = coln;\n        }\n    }\n    return col0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord.x < iMouse.x) {\n        fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    } else {\n        fragColor = texturevcus(iChannel0, fragCoord/iResolution.xy);\n    }\n}","name":"Image","description":"","type":"image"}]}