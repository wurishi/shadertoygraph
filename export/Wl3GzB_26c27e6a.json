{"ver":"0.1","info":{"id":"Wl3GzB","date":"1576655633","viewed":125,"name":"Noise in 3d","username":"yp3y5akh0v","description":"Noise in 3d","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","noise","rand"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI radians(180.)\n\nfloat rand(vec3 p) {\n    return fract(sin(dot(sin(p), vec3(12.9898, 78.233, 37.719))) * 143758.5453);\n}\n\nfloat noise(vec3 p, float scale) {\n    vec3 ps = p * scale;\n\tvec3 id = floor(ps);\n    vec3 q = smoothstep(0., 1., fract(ps));\n    vec2 e = vec2(1., 0.);\n    \n    float n1 = smoothstep(0., 1., mix(rand(id), rand(id + e.xyy), q.x));\n    float n2 = smoothstep(0., 1., mix(rand(id + e.yyx), rand(id + e.xyx), q.x));\n    float n3 = smoothstep(0., 1., mix(rand(id + e.yxy), rand(id + e.xxy), q.x));\n    float n4 = smoothstep(0., 1., mix(rand(id + e.yxx), rand(id + e.xxx), q.x)); \n    float n12 = smoothstep(0., 1., mix(n1, n2, q.z));\n    float n34 = smoothstep(0., 1., mix(n3, n4, q.z));\n    \n    return smoothstep(0., 1., mix(n12, n34, q.y));\n}\n\nmat3 rot(float a, float b, float g) {\n\tfloat ca = cos(a);\n    float sa = sin(a);\n\tfloat cb = cos(b);\n    float sb = sin(b);\n    float cg = cos(g);\n    float sg = sin(g);\n    mat3 ma = mat3(ca, sa, 0., -sa, ca, 0., 0., 0., 1.);\n    mat3 mb = mat3(cb, 0., sb, 0., 1., 0., -sb, 0., cb);\n    mat3 mg = mat3(1., 0., 0., 0., cg, sg, 0, -sg, cg);\n    return ma * mb * mg;\n}\n\nfloat snoise(vec3 p, float scale, float steps) {\n\tfloat s = 0., sk = 0.; \n    for (float i = 0.; i < steps; i++) {\n        float k = pow(2., i);\n    \ts += noise(p, scale * k) / k;\n        sk += 1. / k;\n        float a = 2. * PI * (i + 1.) / steps;\n        p *= rot(a, a, a);\n    } \n    return smoothstep(0., 1., s / sk);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;    \n\tfloat n = snoise(vec3(uv, iTime * 0.035), 8., 32.);\n    vec3 col = vec3(n);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}