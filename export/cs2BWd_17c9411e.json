{"ver":"0.1","info":{"id":"cs2BWd","date":"1690544789","viewed":60,"name":"Trippy Sinus","username":"fojciko","description":"Trippy shader effect using sin(), fract()\nFrom video: https://www.youtube.com/watch?v=f4s1h2YETNY&list=LL&index=9&t=816s","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.500, 0.500, 0.500);\n    vec3 b = vec3(0.500, 0.500, 0.500);\n    vec3 c = vec3(0.800, 0.800, 0.500);\n    vec3 d = vec3(0.000, 0.200, 0.500);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.x;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 4.0; i++) {\n    uv = fract(uv*sin(iTime*.6) / .6) - .5 ;\n\n    float d = length(uv) * exp(-length(uv0));\n\n    vec3 col = palette(length(uv0)+ i/.4 + iTime / .4);\n\n    d = sin(d*8. + iTime)/8.;\n\n\n    // Turn negative vaules to positive\n    d = abs(d);\n    \n    d = pow(0.01 / d, 1.3);\n\n    finalColor += col * d;\n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}