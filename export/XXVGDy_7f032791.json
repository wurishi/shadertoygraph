{"ver":"0.1","info":{"id":"XXVGDy","date":"1718176990","viewed":38,"name":"grid and selections","username":"nmcapule","description":"https://thebookofshaders.com/07/","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COLS 40.\n#define PI 3.1415926538\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x / iResolution.y;\n    \n    vec2 grid = vec2(COLS, floor(COLS / ar)); \n    vec2 cell = floor(uv*grid);\n    \n    vec2 mv = vec2(cos(iTime)/PI, sin(iTime*2.)/PI) + 0.5;\n    vec2 selectedCell = floor(mv*grid);\n    bvec2 isSelectedCell = equal(cell, selectedCell);\n    \n    vec2 isOdd = step(1., mod(cell, 2.));\n    \n    vec3 color = vec3(min(0.1, step(1., mod(isOdd.x+isOdd.y, 2.))));\n    if(all(isSelectedCell)) {\n        color = vec3(0.9, 0.9, 0.9);\n    } else if (any(isSelectedCell)) {\n        color = vec3(0.5, 0.5, 0.5);\n    }\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}