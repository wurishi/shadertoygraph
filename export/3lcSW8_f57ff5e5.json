{"ver":"0.1","info":{"id":"3lcSW8","date":"1580814471","viewed":92,"name":"(  )","username":"rotmoset","description":"Description 2","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["trig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(vec2 p1, vec2 p2)\n{\n\tfloat dx = p1.x - p2.x;\n    float dy = p1.y - p2.y;\n    return sqrt(dx*dx + dy*dy);\n}\n\nfloat circles(vec2 p, float spacing, float radius)\n{\n\tint overlaps = 0;\n    float results[4];\n    float mx = mod(p.x, spacing);\n    float my = mod(p.y, spacing);\n    float d = dist(vec2(mx,my), vec2(0.0,0.0));\n    \n    if (d < radius)\n    {\n        results[overlaps++] = smoothstep(0.0,1.0,max(1.0 - d / radius, 0.0));\n    }\n    \n    mx = mod(p.x, -spacing);\n    my = mod(p.y, spacing);\n    d = dist(vec2(mx,my), vec2(0.0,0.0));\n    \n    if (d < radius)\n    {\n        results[overlaps++] = smoothstep(0.0,1.0,max(1.0 - d / radius, 0.0));\n        \n    }\n    \n    mx = mod(p.x, spacing);\n    my = mod(p.y, -spacing);\n    d = dist(vec2(mx,my), vec2(0.0,0.0));\n    \n    if (d < radius)\n    {\n        results[overlaps++] = smoothstep(0.0,1.0,max(1.0 - d / radius, 0.0));\n    }\n    \n    mx = mod(p.x, -spacing);\n    my = mod(p.y, -spacing);\n    d = dist(vec2(mx,my), vec2(0.0,0.0));\n    \n    if (d < radius)\n    {\n        results[overlaps++] = smoothstep(0.0,1.0,max(1.0 - d / radius, 0.0));\n    }\n    \n    float result = 0.0;\n    \n    for (int i=0;i<overlaps;i++)\n    {\n     \tif (results[i] > result)\n            result = results[i];\n    }\n    \n    return min(result, 1.0);\n}\n\nvec3 colorD(float d)\n{\n    vec3 c1 = texture(iChannel0, vec2(d,sin(d * 4.0 + iTime / 5.0) + 1.0) / 16.0).rgb;\n    vec3 c2 = texture(iChannel1, vec2(d,sin(d * 4.0 + iTime / 5.0) + 1.0) / 16.0).rgb;\n    return mix(c1,c2, 0.3);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\tfragColor = vec4(0.08,0.25,0.5,1.0);\n    \n    uv.x -= 0.5;\n    uv.y -= 0.5;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    float spacing = 1.1 + sin(iTime / 14.0 + 3.0);\n    float radius = 1.2 + cos(iTime / 19.0 + 3.0);\n\t\n    float d = circles(uv, spacing,radius);\n    if (d > 0.01)\n    {\n        fragColor.rgb = mix(fragColor.rgb, colorD(d), d);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}