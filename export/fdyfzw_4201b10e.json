{"ver":"0.1","info":{"id":"fdyfzw","date":"1715275533","viewed":34,"name":"Floating DVD Logo","username":"stevenschronk","description":"dvd logo","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["logo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TWO_PI 6.28318530718\n#define PI 3.14159265359\n\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec3 circle(vec2 st, vec2 center, vec2 radii, vec3 color)\n{\n    float len = length(st - center);\n    if(len > radii.x && len < radii.y)\n    {\n        return color;\n\t}\n    return vec3(0.2, 0.2, 0.2);\n}\n\nfloat rectangle(vec2 st, vec2 point_1, vec2 point_2)\n{\n    vec2 val1 = smoothstep(0.0, .00001, st - point_1) * ( 1. - smoothstep(0.0, .00001, st - point_2));\n    return val1.x * val1.y;\n}\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvec3 d(vec2 st)\n{\n    vec3 color;\n    vec2 temp = st;\n    vec2 scaleRectangle = vec2(float(13.200),float(2.868));\n    \n    /*Left back piece*/\n    float yrectangle = -0.554 + sin(iTime) * 0.5;\n    float xrectangle = -0.348;\n    st.x += xrectangle;\n    st.y += yrectangle;\n    st *= scaleRectangle;\n\n\tcolor = vec3(rectangle(st, vec2(float(-0.2),float(0.000)) , vec2(0.2,float(0.296))));    \n    \n    /*Bottom piece*/\n    st = temp;\n    yrectangle = -0.554 + sin(iTime) * 0.5;\n    xrectangle = -0.340;\n\n    st.x += xrectangle;\n    st.y += yrectangle;\n\tst *= rotate2d(PI/2.);\n    st *= scaleRectangle;\n    color += rectangle(st, vec2(-0.2, float(-0.042)) , vec2(0.2,float(0.168)) ); \n    \n    /*Top piece*/\n    st = temp;\n    yrectangle = -0.650 + sin(iTime) * 0.5;\n    xrectangle = -0.340;\n\n    st.x += xrectangle;\n    st.y += yrectangle;\n\tst *= rotate2d(PI/2.);\n    st *= scaleRectangle;\n    color += rectangle(st, vec2(-0.2, float(-0.042)) , vec2(0.2,float(0.168)) );\n    \n    /*Right piece*/\n    st = temp;\n    yrectangle = -0.554 + sin(iTime) * 0.5;\n    xrectangle = -0.396;\n\n    st.x += xrectangle;\n    st.y += yrectangle;\n\n    st *= scaleRectangle;\n    color += rectangle(st, vec2(-0.2, float(-0.042)) , vec2(0.2,float(0.320)) );\n    \n    return color;\n}\n\nvec3 v(vec2 st)\n{\n    vec3 color;\n    vec2 temp = st;\n    vec2 scaleRectangle = vec2(float(13.200),float(2.868));\n    \n    /*Left piece*/\n    float yrectangle = -0.554 + sin(iTime) * 0.5;\n    float xrectangle = -0.5;\n    st.x += xrectangle;\n    st.y += yrectangle;\n\tst *= rotate2d(-PI/4.200);\n    st *= scaleRectangle;\n\tcolor =vec3(rectangle(st, vec2(float(-0.2),float(0.000)) , vec2(0.2,float(0.296))));   \n    \n    /*Right piece*/\n    st = temp;\n    yrectangle = -0.554 + sin(iTime) * 0.5;\n    xrectangle = -0.500;\n\n    st.x += xrectangle;\n    st.y += yrectangle;\n\tst *= rotate2d(PI/4.);\n    st *= scaleRectangle;\n    color += rectangle(st, vec2(-0.2, float(-0.042)) , vec2(0.2,float(0.296)) ); \n    \n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\n    vec2 st = gl_FragCoord.xy/iResolution.xy;\n    float aspectRatio = iResolution.x/iResolution.y;\n    st.x *= aspectRatio;\n    vec2 temp = st;\n    vec3 color = vec3(0.0);\n    \n    /*Change position of both the center of the color wheel, and the position of our objects*/\n    float ycircle = sin(iTime) * 0.5;\n    float xcircle = 0.0;\n    st.x += xcircle;\n    st.y += ycircle;\n\n    /*Get angle from vector (0, 1) to the current fragment*/\n    vec2 toCenter = st - vec2(0.5);\n    float angle = atan(toCenter.y,toCenter.x) + iTime;\n\n    /*set color based on the angle*/\n    color = hsb2rgb(vec3((angle/TWO_PI),1.0,1.0));\n    \n    /*Scale our objects*/\n    vec2 scaleCircle = vec2(1.004, 4.040);\n    vec2 radii = vec2(0.05, 0.07) * scaleCircle;\n    vec2 circleCenter = vec2(0.5) * scaleCircle;\n    st *= scaleCircle;\n    /*Draw a circle and some rectangles*/\n\tcolor = circle(st, circleCenter, radii, color);\n    \n\tcolor += v(temp) + d(temp) + d(temp + vec2(float(-0.260),0.000));\n\n    fragColor = vec4(color, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}