{"ver":"0.1","info":{"id":"wdccDn","date":"1716376005","viewed":53,"name":"SmileTesting","username":"Spawni","description":"Smile","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["smile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0., 1.)\n\nfloat remap01(float a, float b, float t) {\n\treturn sat((t - a) / (b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n    return remap01(a, b, t) * (d - c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect) {\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n}\n\nvec4 Eye(vec2 uv) {\n    uv -= 0.5;\t\t\t// remap after within func;\n    float d = length(uv);\n\n    vec4 irisCol = vec4(.3,.5, 1.,  1.);\n    vec4 col = mix(vec4(1.), irisCol, S(.1, .7, d) * .4);\n    \n\tcol.rgb *= 1. - S(.45, .5, d) * .5 * sat(-uv.y);\n    \n    // iris outline\n    col.rgb = mix(col.rgb, vec3(0.), S(.3, .25, d));\n    \n    irisCol.rgb *= 1. + S(.3, .05, d);\n    col.rgb = mix(col.rgb, irisCol.rgb, S(.28, .25, d));\n    \n    // pupil\n    col.rgb = mix(col.rgb, vec3(0.), S(.16, .14, d));\n\n    float highlight = S(.1, .09, length(uv - vec2(-.15, .15)));\n    highlight += S(.07, .05, length(uv + vec2(-.09, .08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    col.a = S(.5, .48, d);\n    return col;\n}\n\nvec4 Mouth(vec2 uv) {\n    uv -= 0.5;\n    uv.y *= 1.5;\n    uv.y -= uv.x * uv.x * 2.;\n    \n\tvec4 col = vec4(0.5, .18, .05, 1.);\n    float d = length(uv);\n    \n    col.a = S(.5, .48, d);\n    \n    // teeth\n    float td = length(uv - vec2(0., .6));\n    vec3 toothCol = vec3(1.) * S(.6, .35, d);\n    \n    col.rgb = mix(col.rgb, toothCol, S(.4, .37, td));\n    \n    // tongue\n    td = length(uv + vec2(0., .5));\n    col.rgb = mix(col.rgb, vec3(1., .5, .5 ), S(.5,.2, td) * .6);\n    return col;\n}\n\nvec4 Head(vec2 uv) {\n\tvec4 col = vec4(0.9, .65, .1, 1.);\n    float d = length(uv);\n   \t\n    col.a = S(.5, .49, d);\n    // smooth edges\n    float edgeShade = remap01(.35, .5, d);\n    edgeShade *= edgeShade;\n    \n    col.rgb *= 1. - edgeShade * .5;\n    // outline\n    col.rgb = mix(col.rgb, vec3(.6, .3, .1), S(.47, .48, d));\n    // highlight\n    float highlight = S(.41, .405, d) * .75;\n    highlight *= remap(.42, -.1, .75, .0, uv.y);\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    // cheeks\n    d = length(uv - vec2(.25, -.2));\n    float cheek = S(.2, .01, d) * .4;\n    cheek *= S(.18, .16, d);\n    \n    col.rgb = mix(col.rgb, vec3(1., .1, .1), cheek);\n    return col;\n}\n\nvec4 Smiley(vec2 uv) {\n\tvec4 col = vec4(0.);\n   \n    uv.x = abs(uv.x);\n    \n    vec4 head = Head(uv);\n    vec4 eye = Eye(within(uv, vec4(.03, -.1, .37, .25)));\n    vec4 mouth = Mouth(within(uv, vec4(-.3, -.4, .3, -.1)));\n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \t\n\tuv -= 0.5;\t\t\t\t\t\t\t\t\t// -0.5 <> 0.5\n\tuv.x *= iResolution.x / iResolution.y;\n\n    fragColor = Smiley(uv);\n}","name":"Image","description":"","type":"image"}]}