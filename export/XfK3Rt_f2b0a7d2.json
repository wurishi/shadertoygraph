{"ver":"0.1","info":{"id":"XfK3Rt","date":"1722887349","viewed":15,"name":"Bouncing Ball 2","username":"Yeeun","description":"Physically based bouncing ball","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float gravity = -0.98; \nconst float restitution = 0.8; \nconst float timeStep = 0.016;\nconst float radius = 0.1; \n\n\nvec2 pos = vec2(0.0, 0.4); \nvec2 vel = vec2(0.4, 0.0); \n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float time = mod(iTime, 12.0); \n\n    int numSteps = int(time / timeStep);\n\n    for(int i = 0; i < numSteps; i++) {\n    \n\n        vel.y += gravity * timeStep;\n        pos += vel * timeStep;\n\n        if (abs(pos.x) + radius > 0.5) {\n            pos.x = sign(pos.x) * (0.5 - radius);\n            vel.x *= -restitution;\n        }\n        if (abs(pos.y) + radius > 0.5) {\n            pos.y = sign(pos.y) * (0.5 - radius);\n            vel.y *= -restitution; \n        }\n    }\n\n\n    float ballDistance = length(uv - pos); \n    float ballEdge = smoothstep(radius, radius - 0.01, ballDistance);\n    vec3 color = mix(vec3(0.5, 0.5, 0.7), vec3(0.0), ballEdge); \n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}