{"ver":"0.1","info":{"id":"3dtyRH","date":"1600384747","viewed":318,"name":"Experimental techno","username":"jarble","description":"This is a visualization of some \"bytebeat\" music.\nThe sound is in the \"common\" buffer.","likes":4,"published":3,"flags":8,"usePreview":0,"tags":["music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(mod(uv,sound(iTime+uv.x)),1.0,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// http://countercomplex.blogspot.jp/2011/10/algorithmic-symphonies-from-one-line-of.html\n// http://wurstcaptures.untergrund.net/music/\n\nvec2 mainSound( in int samp, float time )\n{\n    return sound(time);\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"\nvec2 sound1( float time )\n{\n    int t = int(time * 1000.0);\n    t = t%8000;\n    t = (t>>6&t*(-(t%4))&t/1024)-1;\n    return vec2(float(t & 0xff - 128) / 128.);\n}\n\nvec2 sound(float time){\n    float factor = 1.0;\n    vec2 result = vec2(0.0);\n    for(int i = 0; i < 5; i++){\n    \tresult += sound1(time*factor)/(factor*3.0);\n        factor *= 1.5;\n    }\n    return result;\n}","name":"Common","description":"","type":"common"}]}