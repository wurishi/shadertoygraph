{"ver":"0.1","info":{"id":"Msd3Rs","date":"1451893212","viewed":362,"name":"Brush Dab","username":"vrav","description":"Trying to cobble together a parametric brush engine for a painting program external to shadertoy. The application draws this to an FBO. I'm not an expert or anything, just toying.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"/*\n\tGLSL Brush Engine test\n\tby vrav, 2016\n*/\n\n// from https://github.com/stackgl/glsl-easings\nfloat cubicIn(float t) {\n  return t * t * t;\n}\n\n// from https://www.shadertoy.com/view/XtsSzH\nvec4 mixGammaCorrect(vec4 a, vec4 b, float t) {\n    vec4 ab = a*(1.-t) + pow(b,vec4(2.2))*t;\n    return pow(ab,vec4(1.0/2.2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float px = 1. / iResolution.y;\n    vec2 uv = fragCoord.xy / iResolution.yy;\n    vec4 canv = texture( iChannel0, uv);\n    \n    float slowsine = (sin(iTime*0.2) + 1.0)*0.5;\n    float fastsine = (sin(iTime*2.5) + 1.0)*0.5;\n    \n    // brush input values\n    vec4 col = vec4( 1., .0, .0, 1. );\n    vec2 pos = iMouse.xy / iResolution.yy;\n    float sm = .7;\n    float mx = .6;\n    float rad = 128. + sin(iTime)*64.;\n    \n    // canvas mix color, from texture LOD\n    float lod = sqrt(rad*0.25) * mx;\n    vec4 mxcol = texture( iChannel0, uv, lod );\n    \n    // TODO here: mix blurring per LOD texture samples\n    //\n    //\n    \n    rad *= px;\n    // smoothness amount, cuts into smooth radius\n    float aa = cubicIn(sm)*rad + px;\n    float smrad = rad - aa*.5;\n    \n    // final aa-applied smooth circle\n    uv -= pos;\n    float dist = sqrt( dot(uv,uv) );\n    float t = smoothstep( smrad + aa, smrad - aa, dist );\n    \n    fragColor = mix( canv, mixGammaCorrect( col, mxcol, mx), t );\n    \n    // debug circle\n    float hl = smoothstep( rad, rad+px*2., dist) \n             - smoothstep( rad-px*2., rad, dist);\n    fragColor += hl * -1.;\n}\n","name":"","description":"","type":"image"}]}