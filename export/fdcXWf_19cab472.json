{"ver":"0.1","info":{"id":"fdcXWf","date":"1638262253","viewed":133,"name":"[spaz] spiky palette zoom","username":"HaleyHalcyon","description":"brdb","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["crrhr"],"hasliked":0,"parentid":"sdGGRW","parentname":"zooming into the stars"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smootherstep(float edge0, float edge1, float x) {\n  // Scale, and clamp x to 0..1 range\n  x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n  // Evaluate polynomial\n  return x * x * x * (x * (x * 6. - 15.) + 10.);\n}\n\nfloat softsquare(float x) {\n    float x2 = abs(2. * fract(x) - 1.);\n    return smoothstep(0.1, 0.9, x2);\n}\n\nvec3 gradient(float r, float palette) {\n    float mix0 = step(0.5, r);\n    \n    vec3 color0 = vec3(0, 192, 255) / 255.;\n    vec3 color1 = vec3(255, 0, 128) / 255.;\n    vec3 color2 = vec3(220, 255, 0) / 255.;\n    vec3 color3 = vec3(64, 0, 128) / 255.;\n    \n    return mix(\n        mix(color0, color1, mix0),\n        mix(color2, color3, mix0)\n    , palette);\n}\n\nfloat spikes(float x) {\n    x = 1. - abs(sin(x));\n    return x * x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float time = fract(iTime / 5.);\n    const float PI = 3.14159265;\n    float hue = time * 2. * PI;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = distance(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float dist = log(uv.x*uv.x+uv.y*uv.y);\n    float angle = atan(uv.y, uv.x);\n    const float spokes = float(6) / 2.;\n    const float spokes2 = float(30) / 2.;\n    \n    float s1 = spikes(angle * spokes  + time * 2. * PI);\n    float s2 = spikes(angle * spokes2 - 5. *  time * 2. * PI);\n    float spiral = fract(\n        3. * angle / (PI * 2.)\n        + dist * 0.4\n        + time * 18.\n    );\n    \n    vec3 color = gradient(fract(\n        (0.4 * dist * cos(3.0 * (time - 0.5)))\n        + (3. * tan((time - 0.5) * 2.2))\n        \n      //  - 0.6 * s1\n        - 0.2 * s2\n    ), floor(0.5 + spiral));\n    \n    // Output to screen\n    fragColor = vec4(\n        color,\n        1\n    );\n}","name":"Image","description":"","type":"image"}]}