{"ver":"0.1","info":{"id":"3dsfWj","date":"1589102027","viewed":94,"name":"black-hole-3.0","username":"feefi","description":"blackhole render with gravity and ray marching\ndisc & jets","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","blackhole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat maxDist = 100.0;\nconst int maxStep = 300;\nconst float EP = 0.0001;\nvec3 bh_pos = vec3(0,-0.5,0.5);\nconst float Pi = 3.1415926;\nfloat sdf_sphere(vec3 pos,float radius)\n{\n    return length(pos-bh_pos) - radius;\n}\nfloat sdf_torus(vec3 pos,vec2 radius)\n{\n    vec2 p1 = normalize(pos.xz) * radius.x ;\n    return length(pos-vec3(p1.x,0,p1.y)) - radius.y;\n}\nfloat sdf_scene(vec3 pos)\n{\n    return sdf_sphere(pos,0.15);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2. - 1.;\n    uv.x *= iResolution.x/ iResolution.y;\n    \n    vec3 eye = vec3(0,0,-2.5);\n    vec3 dir = normalize(vec3(uv,0) - eye);\n    \n    vec3 col = vec3(0);\n    \n    vec3 s = eye;\n    float dt = 0.012;\n    float GM   = 0.3;\n    //a = F/m = GM/r^2\n    //v = v + a * dt;\n    //s = s + vt;\n    vec3 v = dir;\n    float hitbh = 0.;\n    bh_pos = vec3(sin(iTime*0.3),cos(iTime*0.4),0.5);\n    for(int i = 0;i<maxStep;++i)\n    {\n        vec3 tobh = bh_pos - s;\n        float a = GM/dot(tobh,tobh);\n        v = v + a* normalize(tobh) * dt;\n        s = s + v * dt;\n        float d = sdf_scene(s);\n        hitbh = max(hitbh,smoothstep(0.02,-0.01,d));\n        float rotangle = Pi/2.0 + Pi/24.0;\n        mat3 torRot = mat3(\n            vec3(sin(rotangle),cos(rotangle),0),\n            vec3(-cos(rotangle),sin(rotangle),0),\n            vec3(0,0,1)\n        );\n        vec3 torPos = s ;\n        d = sdf_torus(torRot*(torPos-bh_pos)*vec3(1,8,1),vec2(0.9,0.6));\n        float hitTor = smoothstep(0.02,-0.01,d);\n        vec3 uvPos = torPos-bh_pos;\n        uvPos = torRot*uvPos;\n    \tfloat distTor = length(uvPos)/0.7;\n    \tdistTor = smoothstep(0.0,1.,distTor);\n    \tvec3 torCol = mix(vec3(1.0,0.4,0.4),vec3(0.9,0.35,0.1),distTor);\n    \tfloat dis = length(uvPos);\n            \n        float t1 = smoothstep(0.2,1.,length(uvPos.xz)/1.5);\n        float t2 = (atan(uvPos.z,uvPos.x)/Pi *0.5 + 0.5)-iTime*0.2;\n        float t3 = (uvPos.y*.5)/0.6+0.5;\n        float torTex1 = texture(iChannel1,vec2(0.5,t3)).r;\n        vec2 toruv = vec2(t1,t2)*vec2(1.,1.);\n\t\tfloat torTex = texture(iChannel0,vec3(toruv,t3)).r;\n    \ttorCol *=  max(0.,torTex) * 1.0/pow(dis,0.58);\n    \tvec3 glow = 0.01/(dis*dis)*vec3(0.9,0.8,0.8);\n    \tcol += hitTor*torCol*(1.0-hitbh)*0.1*smoothstep(1.5,.0,dis);\n        col += glow*0.1*(1.0-hitbh);\n        float jets = 0.0002/dot(uvPos.xz,uvPos.xz)*(1.0-hitbh)*step(0.25,abs(uvPos.y));\n        float t = iTime;\n        float anim = (0.5*sin(t+sin(t+sin(t+sin(t*2.))))+0.5) ;\n        anim = smoothstep(0.5,0.6,anim);\n        col += jets*mix(vec3(0.1,0.1,0.8),vec3(0.8,0.3,0.3),abs(uvPos.y)/1.5)*anim;\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}