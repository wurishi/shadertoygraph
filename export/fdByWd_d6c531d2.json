{"ver":"0.1","info":{"id":"fdByWd","date":"1644293249","viewed":112,"name":"3+s","username":"natnatnat","description":"3+s","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle","eclipse","3"],"hasliked":0,"parentid":"fd2yRG","parentname":"neon eclipse"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nconst float PI = 3.14;\nconst float e = 2.71;\n\nconst float R = 0.8 * e/PI;\n\nconst mat3 colors = mat3(0., 0., 1., 0., 1., 0., 1., 0., 0.);\n\nconst vec2 pointA = vec2(-R, 0.);\nconst vec2 pointB = vec2(R, 0.);\n\nvec3 draw(vec2 uv, float R, float angle, vec3 color, float decay) {\n    float r = length(uv);\n \n    vec2 pointC = vec2(R * cos(angle), R * sin(angle));\n    float s = pow(e, -abs(distance(uv, pointC)) * 10.);\n\n    vec3 circleColor = vec3(pow(e, -abs(R - r) * decay));\n    vec3 snakeColor = vec3(s);\n\n    vec3 snakeHeadColor = vec3(pow(e, -abs(distance(uv, pointC)) * 20.));\n\n    return color * (circleColor + snakeColor);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n \n    float angle = iTime * R;\n    \n    vec3 color = vec3(0.);\n    for(int i=0;i<3;++i) {\n      color += draw(uv, R * (float(i) -50. * abs(sin(iTime/4.)))/50., (float(i) + 1.) * 2. * PI/4. + angle, colors[i], 2.);\n    }\n\n    fragColor = vec4(color, 1.) + vec4(draw(uv, R, angle + PI, vec3(1.), 50.), 1.);\n}","name":"Image","description":"","type":"image"}]}