{"ver":"0.1","info":{"id":"lctXWX","date":"1714647382","viewed":122,"name":"Gray-Scott Turing Pattern","username":"o0CHT0o","description":"Da = 1., Db = .5, f = .04, k = .06, // can get A stable img\nDa = 1., Db = .5, f = .015, k = .05, // can get  A dynamic img","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["turingpattern","grayscott"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 Clr, in vec2 Crd){\n    Clr = vec4(TF.bgr, 1);\n    Clr.g *= 3.;\n    Clr.r *= 10.;\n    \n    //float tmp = min(abs(Crd.x-iResolution.x/2.),abs(Crd.y-iResolution.y/2.));\n    //Clr *= exp(-.5/pow(tmp,2.));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define RS iResolution.xy\n#define TFE(x0,y0) TFN(x0,y0)\n#define TFP(x0,y0) texelFetch(iChannel0,ivec2(mod(Crd+vec2(x0,y0)+RS,RS)),0)\n#define TFR(x0,y0) texelFetch(iChannel0,ivec2(abs(RS-abs(Crd+vec2(x0,y0)-RS))),0)\n#define TFN(x0,y0) texelFetch(iChannel0,ivec2(Crd+vec2(x0,y0)),0)\n\nvec4 diff(vec2 Crd){\n    int r = 6;\n    float sw = 0.;\n    vec4 sum = vec4(0);\n    for(int i=0;i*i<r;i++){\n        for(int j=1;i*i+j*j<r;j++){\n            float w = 1./float(i*i+j*j);\n            sum += (TFE(i,j)+TFE(j,-i)+TFE(-i,-j)+TFE(-j,i))*w;\n            sw += w*4.;\n        }\n    }\n    return sum / sw - TF;\n}\n\nvoid mainImage(out vec4 Clr, in vec2 Crd){\n    if(\tiFrame==0 ) {\n        ivec2 tC = ivec2(Crd);\n        Clr = texture(iChannel1,Crd/RS);\n/*        if(tC.x<2 && tC.y<2){\n            switch(tC.y*2+tC.x){\n                case 0:\n                    Clr.a = 1.;\n                    break;\n                case 1:\n                    Clr.a = 1.;\n                    break;\n                case 2:\n                    Clr.a = 1.;\n                    break;\n                case 3:\n                    Clr.a = 1.;\n                    break;\n                default:\n                    break;\n            }\n        }*/\n        return;\n    }\n    vec4 old = TF;\n    float\n        //Da = 1., Db = .5, f = .04, k = .06, // A stable img\n        //Da = 1., Db = .5, f = .015, k = .05, // A dynamic img\n        Da = 1.,\n        Db = .5,\n        f = .04,//+ .02*(Crd.x/iResolution.x-.5),\n        k = .06,//+ .03*(Crd.y/iResolution.y-.5),\n        t = old.x*old.y*old.y;\n        //*(Crd.x/iResolution.x-.5),*(Crd.y/iResolution.y-.5)\n    Clr = diff(Crd);\n    Clr.x = Da * Clr.x - t + f * (1.-old.x);\n    Clr.y = Db * Clr.y + t - (k + f) * old.y;\n    if(\tiMouse.z>1.){\n        vec2 tmp = Crd - vec2(iMouse.xy);\n        Clr.x += exp(-dot(tmp,tmp)/100.);\n        Clr.y += .5*exp(-dot(tmp,tmp)/10.);\n    }\n    Clr = clamp(TF + Clr,0.,1.);\n    Clr.z = t;\n    Clr.w = old.w;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define TF texelFetch(iChannel0,ivec2(Crd),0)\n","name":"Common","description":"","type":"common"}]}