{"ver":"0.1","info":{"id":"MffGDs","date":"1703678153","viewed":30,"name":"function_mix_smoothstep","username":"rhett","description":"show what can we do use a mix and smoothstep function","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["function","webgl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// while y > x + width return 0\n// while y < x - width return 0\n// while y = x return 1\n// while y in [x-width, x], interpolation from 0 -> 1  \n// while y in [x, x+width], interpolation from 1 -> 0  \nfloat plot (float y, float x, float width){\n  return  smoothstep( x-width, x, y) -\n          smoothstep( x, x+width, y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // left color\n    vec3 colorA = vec3(0.149,0.141,0.912);\n    \n    // right color\n    vec3 colorB = vec3(1.000,0.833,0.224);\n    \n    // line_width: pixel / screenWidth\n    float line_width = 4. / iResolution.x;\n\n    // result color\n    vec3 color = vec3(0.0);\n\n    // get a vec2 from (0, 0) -> (1, 1) \n    vec2 st = fragCoord.xy/iResolution.xy;\n    \n    // get a number from 0(left)->1(right)\n    vec3 pct = vec3(st.x);\n    \n    // interpolation color from left to right\n    color = mix(colorA, colorB, pct);\n\n    // Plot transition lines for each channel\n    // while st.y not in [st.x - width, st.x + width], get the background color\n    // while st.y = st.x, get the line color we want\n    // while st.y in [st.x - width, st.x + width], get the interpolation \n    // between  background color and line color\n    color = mix(color,vec3(1.0,0.0,0.0),plot(st.y,st.x, line_width));\n    color = mix(color,vec3(0.0,1.0,0.0),plot(st.y,st.x, line_width));\n    color = mix(color,vec3(0.0,0.0,1.0),plot(st.y,st.x, line_width));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}