{"ver":"0.1","info":{"id":"mssyzS","date":"1686939761","viewed":50,"name":"glitched pixels","username":"boytoy","description":"created during exploration of randomness","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic","glitch","pixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// parameters\nconst vec2 pixels = vec2(70.,70.); // really, its around 210x210\nconst float s = 0.1; //  effect\n\n///\nfloat random (vec2 uv) {\n    return fract(sin(dot(uv.xy,\n        vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nconst float PI = 3.14159265359;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 UV = fragCoord/iResolution.xy;\n    float TIME = iTime;\n    UV.x /= iResolution.y/iResolution.x;\n    vec2 uv = 2.*UV-1.;\n    uv*= 1.5;\n\t\n\t//uv.x *= TEXTURE_PIXEL_SIZE.y/TEXTURE_PIXEL_SIZE.x;\n\tvec2 uvp = (floor(uv*pixels)+0.5)/pixels;\n\t\n\tvec3 color = vec3(1.);\n\tfloat r = random(uvp);\n\tvec2 disp = s * vec2(cos(r),sin(r));\n\t\n\tfor(float i=1.; i<=10.;i++){\n\t\tfloat sig = cos(i*PI);\n        // note: glitch effect is by randomly `disp`lacing red channel !\n\t\tfloat red   = sig*(length(cos((i*4.*uvp-disp))+cos(TIME+2.*i)))/(pow(i,1.5));\n        \n\t\tfloat blue  = sig*(length(cos((i*4.*uvp))+cos(TIME+2.*i)))/(pow(i,1.5));\n\t\tfloat green = sig*(length(cos((i*4.*uvp))+cos(TIME+2.*i)))/(pow(i,1.5));\n        \n\t\tcolor += vec3(red,green,blue);\n\t}\n    \n    // color tweaks, play here !\n\t\n\tfloat len = length(color);\n\tfloat sum = color.x+color.y+color.z;\n\t\n    vec3 color2 = color;\n    color = sum < 0.1|| sum > 0.9 ? color/sum : vec3(0.);\n\tcolor+=color2*0.7;\n\t//color = color*0.5 + (1.-color*color);\n    color = 1.-color*color;\n    //color+=color2*0.3;\n    \n\t\n\tfragColor = vec4(color,1.);\n\n}","name":"Image","description":"","type":"image"}]}