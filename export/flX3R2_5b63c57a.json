{"ver":"0.1","info":{"id":"flX3R2","date":"1622398726","viewed":349,"name":"Hugo Elias's hash.","username":"Envy24","description":"noise, random, hash\n\nHugo Elias's hash.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n    Hugo Elias's hash.\n    \n    Returns hash in range [-1.0f; 1.0f]. \n*/\nfloat noise1D(uint x)\n{\n     x = (x << 13) ^ x;\n     \n     float t = float((x * (x * x * 15731u + 789221u) + 1376312589u) & 0x7fffffffu);\n     \n     return 1.0f - (t / 1073741824.0f);\n}\n\nfloat noise2D(vec2 p, float enthropy)\n{\n     uint offset = uint((floor(p.y) * enthropy) + floor(p.x));\n\n     return noise1D(offset);\n}\n\n#define GOOD_ENTHROPY_VALUE 800.0\n#define BAD_ENTHROPY_VALUE 40.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float u = fragCoord.x / iResolution.x;\n    float gray = 0.0f;\n\n    if (u < 0.33)\n    {\n       gray = (noise2D(fragCoord, GOOD_ENTHROPY_VALUE) + 1.0f) * 0.5f;\n    }\n    else if (u >= 0.33 && u < 0.66)\n    {\n       gray = (noise2D(fragCoord, iTime * 1.0) + 1.0f) * 0.5f; \n    }\n    else\n    {\n       gray = (noise2D(fragCoord, BAD_ENTHROPY_VALUE) + 1.0f) * 0.5f;\n    }\n\n    // Output to screen\n    fragColor = vec4(gray, gray, gray, 1.0);\n}","name":"Image","description":"","type":"image"}]}