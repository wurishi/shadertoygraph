{"ver":"0.1","info":{"id":"7tjGzw","date":"1623613102","viewed":98,"name":"repetición animada","username":"tebicap","description":"Alternating test","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["grid","webcam"],"hasliked":0,"parentid":"sd2Szt","parentname":"Alternating grid test"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //cantidad de cuadritos (puede ser un numero estático):\n    float cells = sin(iTime)*sin(iTime)*6.+1.0;\n    \n    vec2 grid0 = fract(uv * cells);\n    vec2 grid1 = fract(vec2(1.0 - uv.x, uv.y) * cells);\n    \n    float everyOther = mod( floor(uv.x * cells) + floor(uv.y * cells), 2.0);\n    \n    \n    vec2 coord = grid0 * everyOther + grid1 * (1.0-everyOther);\n\n    fragColor = texture(iChannel0, coord);\n}","name":"Image","description":"","type":"image"}]}