{"ver":"0.1","info":{"id":"XsV3RK","date":"1455371758","viewed":107,"name":"Ãœbung Krempel","username":"cardmechanic","description":"hui","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rundeecken","parallelogrammevtlundandererkram"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Rect {\n\tvec2 pos,\n    \t ext;\n    mat2 kord;\n    vec4 col;\n};\n\n    Rect R1 = Rect (vec2(-.2,.2), vec2 (.2*iTime,.8), mat2 (1.,0.,0.,1.), vec4 (.15,.75,.013,1.)),\n \t\t K1 = Rect (vec2(-.2,-.6), vec2 (.8,.8), mat2 (1.,0.,0.,1.), vec4 (.5,.25,.413,1.)),\n    \t RK = Rect (vec2(-.8,-.1), vec2 (.5,.5), mat2 (1.,0.,0.,1.), vec4 (.85,.05,.013,1.)),\n    \t RKk = Rect (vec2(-.8,-.1), vec2 (.1,.1), mat2 (1.,0.,0.,1.), vec4 (.0,.9,.4,1.)),\n    \t RP = Rect (vec2(.2,-.4), vec2 (.075,1.9), mat2 (1.,0.,0.,1.), vec4 (.2,.4,.913,1.));\n\t\t \nmat2 Rot (in float alpha){\n    float s = sin(alpha),\n    \t  c = cos(alpha);\n    \n    return mat2 (c,-s,s,c);\n        \n        }\n    \t  \n\nvoid Rotvec (in float alpha, inout Rect reco){\n\n    reco.kord = Rot(alpha) * reco.kord;\n\n}\n\n\nvec4 intersec (in vec2 p_uv, in Rect reco){\n\tvec2 xynew = p_uv - reco.pos;\n    vec2 mat = reco.kord * xynew;\n    \n    if ( abs(mat.x) >.5*reco.ext.x || abs(mat.y) >.5*reco.ext.y)\n        return vec4 (0.);\n\t\n        if (abs(mat.x)+ mat.y <.01 * 20.*iTime)\n        return reco.col;\n    \t\n    return vec4(.0);\n\n}\n\nvec4 intersecKr (in vec2 p_uv, in Rect reco){\n\tvec2 xynew = p_uv - reco.pos;\n    vec2 mat = reco.kord * xynew;\n    \n    if ( abs(mat.x) >.5*reco.ext.x && abs(mat.y) >.5*reco.ext.y){\n        return vec4 (0.);\n    \t}\n       \n    \tif (abs(1.8*mat.x)+ (mat.y) <.55 && 1.8*mat.y >.011*reco.ext.y-1.8)\n        return reco.col;   \t    \t\n\n    \t\n    return vec4(.0);\n\n}\n\nvec4 intersecKr2 (in vec2 p_uv, in Rect reco){\n\tvec2 xynew = p_uv - reco.pos;\n    vec2 mat = reco.kord * xynew;\n    \n    if ( abs(mat.x) >.5*reco.ext.x && abs(mat.y) >.5*reco.ext.y){\n        return vec4 (0.);\n    \t}\n        if (mat.x*mat.x+mat.y*mat.y <.0095)\n        return reco.col;\n    \t\n    return vec4(.0);\n\n}\n\nvec4 intersecKr3 (in vec2 p_uv, in Rect reco){\n\tvec2 xynew = p_uv - reco.pos;\n    vec2 mat = reco.kord * xynew;\n    \n    if ( abs(mat.x) >.5*reco.ext.x && abs(mat.y) >.5*reco.ext.y){\n        return vec4 (0.);\n    \t}\n        if (mat.x*mat.x+mat.y*mat.y <.295 && mat.y > mat.x)\n        return reco.col;\n    \t\n    return vec4(.0);\n\n}\n\n\nvec4 intersecPf (in vec2 p_uv, in Rect reco){\n\tvec2 xynew = p_uv - reco.pos;\n    vec2 mat = reco.kord * xynew;\n    \n    if ( abs(mat.x) >.5*reco.ext.x || abs(mat.y) >.5*reco.ext.y)\n        return vec4 (0.);\n\t\n        if (abs(1.4*mat.x)+ mat.y <.8)\n        return reco.col;\n    \t\n    return vec4(.0);\n\n}\n\nvec2 Flch (in Rect rA){\n\tfloat A = .5*rA.ext.x*rA.ext.y;\n    \n    if (A >.31)\n         return vec2 (abs(sin(iTime))*.4+.5037,.3+.8*abs(cos(iTime)));\n    return vec2 (.2*iTime,.8);\n}\n\nvoid Mov2 (inout Rect rA){\n\n\trA.pos = vec2 (-sin(5.*iTime),cos(3.*iTime));\n}\n\nvoid Mov1 (inout Rect rA){\n\n\trA.pos = vec2 (sin(3.*iTime), cos(3.*iTime));\n          \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n    \n{\n    vec2 uv = (2.*fragCoord.xy / iResolution.xy-1.)*vec2 (iResolution.x/iResolution.y,1.);\n    \n\t   fragColor = vec4(.2,.1,.6,1.);\n    \n  \tRotvec (1.6*iTime, R1);\n    Rotvec (iTime, RP);\n    Rotvec (iTime, RK);\n\tRotvec (25.*iTime, RKk);    \n    Rotvec (9.6*iTime, K1);\n    vec2 extnew = Flch (R1);\n        R1.ext = extnew;\n  \n    \n    float state = sin(iTime);\n    if (state >0.)\n        Mov1(RP);\n    else\n     Mov2(RP);\n    \n        \n    \n    vec4 r1col = intersec (uv,R1);\n    vec4 r2col = intersecPf (uv,RP);\n    vec4 r3col = intersecKr (uv,RK);\n    vec4 r4col = intersecKr2(uv, RKk);\n    vec4 r5col = intersecKr3(uv, K1);\n    \n    \n    float fakt = r1col.a + r2col.a+r3col.a+r4col.a +r5col.a;\n    \n    vec4 cols =r1col + r1col;\n         \n    if (fakt < 1.)\n        fragColor = vec4 (.2,.1,.6,1.);\n    else\n    \tfragColor = (r1col + r2col + r3col  + r4col+ r5col);\n    \n \n    \n\n    \n}","name":"Image","description":"","type":"image"}]}