{"ver":"0.1","info":{"id":"3ldyWl","date":"1610205111","viewed":77,"name":"hal_bucd","username":"xinux","description":"first effect of hal_bucd demo\nhttps://www.youtube.com/watch?v=QciWSONmr-0\n\nevery line of code is either prodecurally generated or rushed. not cleaned, and missing credits.\nhorrible performance which is why the demo is rendered in low res.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["procedural"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float beats()\n{\n    float beat = 0.9375;\n    return (iTime / beat) * 2.0;\n}\n\nvec2 pR(vec2 p, float a)\n{\np = ((p * cos(a)) + (vec2(p.y, (-p.x)) * sin(a)));\nreturn p;\n\n}\n\nfloat rand1d(float n)\n{\nreturn fract((sin(n) * 43758.55));\n\n}\n\nfloat noise(vec2 uv, float intensity)\n{\nreturn min(1.0, ((1.0 / (rand1d(((uv.x * 20.0) + 1.0)) + rand1d((uv.y * 40.0)))) * intensity));\n\n}\n\nfloat spikeFunc(float x)\n{\nreturn max(min(min(fract(x / -2.) * 2. -1., sin((x + 1.) / 0.31831 ) + 1.), sin((x - 1.278) / 0.31831) + 0.645), 0.);\n\n}\n\nfloat superclamp(float val, float start, float end)\n{\nfloat dur = (end - start);\nfloat halfdur = (dur / 2.0);\nfloat prog = (clamp(val, start, end) - start);\nreturn ((halfdur - abs((prog - halfdur))) / halfdur);\n\n}\n\nfloat sphere(vec3 p, float radius)\n{\nreturn length(p) - radius;\n\n}\n\n\nvec3 gp;\n\nvoid pRx(inout vec2 p, float a)\n{\n\tp = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\nfloat elipse(vec3 p, vec3 r )\n{\n    float k0 = length(p/r);\n    float k1 = length(p/(r*r));\n    return k0*(k0-1.0)/k1;\n}\n\nfloat box(vec3 p, vec3 b)\n{\n\treturn length(max(abs(p) - b, 0.0));\n}\n\nfloat vmax(vec3 v) {\n\treturn max(max(v.x, v.y), v.z);\n}\n\nfloat box2(vec3 p, vec3 b) {\n\treturn vmax(abs(p) - b);\n}\n\nfloat box3( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return length(max(d,0.0));\n         + min(max(d.x,max(d.y,d.z)),0.0);\n}\n\nfloat gSPACE(vec3 p)\n{\n    gp.x -= 0.10;\n    \n    return 1.0 / 0.00000000000000001;\n}\n\nfloat gA(vec3 p)\n{\n    gp.x -= 0.30;\n    float d = 1.0 / 0.00000000000000001;\n    d = min( d, box( p, vec3( 0.12, 0.18, 0.07 )) );\n\n    p.y -= 0.06;\n    d = max( d, -box2( p, vec3( 0.02, 0.06, 0.1 )) );\n\n    p.y += 0.18;\n    d = max( d, -box2( p, vec3( 0.02, 0.08, 0.1 )) );\n\n    p.y -= 0.30;\n    p.x -= 0.12;\n    vec3 t = p;\n    pRx( t.xy, 3.14592/4.0 );\n    d = max( d, -box2(t,vec3( 0.05, 0.05, 0.1)) );\n\n    p.x += 0.24;\n    t = p;\n    pRx( t.xy, 3.14592/4.0 );\n    d = max( d, -box2(t,vec3( 0.05, 0.05, 0.1)) );\n\n    return d;\n}\n\nfloat gB(vec3 p)\n{\n    gp.x -= 0.30;\n    float d = 1.0 / 0.00000000000000001;\n    d = min( d, box( p, vec3( 0.12, 0.18, 0.07 )) );\n\n    p.y -= 0.06;\n    d = max( d, -box2( p, vec3( 0.02, 0.06, 0.1 )) );\n\n    p.y += 0.15;\n    d = max( d, -box2( p, vec3( 0.02, 0.05, 0.1 )) );\n\n    p.y -= 0.30;\n    p.x -= 0.12;\n    vec3 t = p;\n    pRx( t.xy, 3.14592/4.0 );\n    d = max( d, -box2(t,vec3( 0.05, 0.05, 0.1)) );\n\n    p.y += 0.42;\n    t = p;\n    pRx( t.xy, 3.14592/4.0 );\n    d = max( d, -box2(t,vec3( 0.05, 0.05, 0.1)) );\n\n    p.y -= 0.19;\n    p.x -= 0.04;\n    t = p;\n    pRx( t.xy, 3.14592/4.0 );\n    d = max( d, -box2(t,vec3( 0.05, 0.05, 0.1)) );\n\n    return d;\n}\n\nfloat gC(vec3 p)\n{\n    gp.x -= 0.30;\n    float d = 1.0 / 0.00000000000000001;\n    d = min( d, box( p, vec3( 0.12, 0.18, 0.07 )) );\n\n    p.y -= 0.00;\n    p.x -= 0.06;\n    d = max( d, -box2( p, vec3( 0.08, 0.14, 0.1 )) );\n\n    p.y += 0.22;\n    //d = max( d, -box2( p, vec3( 0.02, 0.08, 0.1 )) );\n\n    return d;\n}\n\nfloat gD(vec3 p)\n{\n    gp.x -= 0.30;\n    float d = 1.0 / 0.00000000000000001;\n    d = min( d, box( p, vec3( 0.12, 0.18, 0.07 )) );\n\n    d = max( d, -box2( p, vec3( 0.02, 0.14, 0.1 )) );\n\n    p.y -= 0.20;\n    p.x -= 0.12;\n    vec3 t = p;\n    pRx( t.xy, 3.14592/4.0 );\n    d = max( d, -box2(t,vec3( 0.05, 0.05, 0.1)) );\n\n    p.y += 0.40;\n    t = p;\n    pRx( t.xy, 3.14592/4.0 );\n    d = max( d, -box2(t,vec3( 0.05, 0.05, 0.1)) );\n\n    return d;\n}\n\nfloat gH(vec3 p)\n{\n    gp.x -= 0.30;\n    float d = 1.0 / 0.00000000000000001;\n    d = min( d, box( p, vec3( 0.12, 0.18, 0.07 )) );\n\n    p.y -= 0.10;\n    d = max( d, -box2( p, vec3( 0.02, 0.10, 0.1 )) );\n\n    p.y += 0.22;\n    d = max( d, -box2( p, vec3( 0.02, 0.08, 0.1 )) );\n\n    return d;\n}\n\nfloat gL(vec3 p)\n{\n    gp.x -= 0.30;\n    float d = 1.0 / 0.00000000000000001;\n    d = min( d, box( p, vec3( 0.12, 0.18, 0.07 )) );\n\n    p.y -= 0.10;\n    p.x -= 0.06;\n    d = max( d, -box2( p, vec3( 0.08, 0.24, 0.1 )) );\n\n    p.y += 0.22;\n    //d = max( d, -box2( p, vec3( 0.02, 0.08, 0.1 )) );\n\n    return d;\n}\n\nfloat gU(vec3 p)\n{\n    gp.x -= 0.30;\n    float d = 1.0 / 0.00000000000000001;\n    d = min( d, box( p, vec3( 0.12, 0.18, 0.07 )) );\n\n    p.y -= 0.10;\n    d = max( d, -box2( p, vec3( 0.02, 0.24, 0.1 )) );\n\n    return d;\n}\n\nfloat smin( float a, float b, float k )\n{\n    float res = exp2( -k*a ) + exp2( -k*b );\n    return -log2( res )/k;\n}\n\nvec3 crap\n;\nvec4 scene(vec3 p)\n{\nfloat d = 10.0;\nfloat sphere = sphere(p, 1.0);\nfloat beats = beats();\nvec3 r = (vec3(length(vec2(pR(vec2(pR((p.zx * 2.0), pR(vec2(pR((p.xy * 1.5), pR(vec2((p.x * 1.0), pR((p.zy * 1.5), sin((sin(((beats * 1.57) * 0.5)) * 4.0))).x), (p.z / 1.0)).x).y, (p.y / 1.0)), (beats * 0.25)).x).x, (tan(((beats * 3.14) * 0.5)) / 2.0)), (beats * 0.25)).y, (max(0.0, (0.2 - fract((((beats * 4.0) + 0.12) - 0.4)))) * 0.6)))) * vec3(1.0, 0.0, 0.0));\nvec3 g = (vec3(pR(vec2((tan(pR(vec2((p.y * 1.0), (round((pR(vec2((sin(((beats * 1.57) * 0.25)) + (p.x / 1.0)), sin(((beats * 1.57) * 0.25))), (beats * 0.25)).y * 7.0)) / 7.0)), (max(0.0, (0.2 - fract(((beats * 4.0) + 0.12)))) * 0.6)).y) / 2.0), (p.y / 1.0)), (beats * 0.25)).x) * vec3(0.0, 1.0, 0.0));\nvec3 b = (vec3(cos(pR(vec2((p.x * 1.0), pR((p.zy * 1.5), (round((((tan(((beats * 3.14) * 0.5)) / 2.0) + (max(0.0, (0.2 - fract(((beats * 4.0) + 0.12)))) * 0.6)) * 7.0)) / 7.0)).x), (sin(((beats * 1.57) * 0.5)) * 4.0)).x)) * vec3(0.0, 0.0, 1.0));\nvec3 c = clamp(((r + g) + b), 0.1, 1.0);\n\nfloat t1 = (pR(vec2(pR(vec2((p.z * 1.0), ((floor(((floor(((round((pR(vec2(pR((p.xy * 1.5), (-pR(vec2(smoothstep(cos(pR(vec2(pR((p.zx * 2.0), pR((p.zx * 2.0), pR(vec2(((round(((-pR((p.xy * 1.5), (-(round((pR((p.xy * 1.5), pR((p.zx * 2.0), ((pR(vec2((p.x * 1.0), pR(vec2((p.x * 1.0), (floor((pR(vec2((p.x * 1.0), (tan(((beats * 3.14) * 0.5)) / 2.0)), (p.z / 1.0)).x * 7.0)) / 7.0)), (max(0.0, (0.2 - fract((((beats * 4.0) + 0.12) - 0.4)))) * 0.6)).x), (max(0.0, (0.2 - fract((((beats * 4.0) + 0.12) - 0.4)))) * 0.6)).x / (1.3 / (sin(((beats * 1.57) * 0.5)) * 4.0))) - sin(((beats * 1.57) * 0.25)))).x).y * 7.0)) / 7.0))).y) * 7.0)) / 7.0) / (1.3 / (sin(((beats * 1.57) * 0.5)) * 4.0))), (length(p) * 10.0)), (beats * 0.25)).x).x).x, (max(0.0, (0.2 - fract(((beats * 4.0) + 0.12)))) * 0.6)), (beats * 0.25)).x), 0.0, 0.1), (length(p) * 10.0)), (beats * 0.25)).x)).y, (p.y / 1.0)), (beats * 0.25)).x * 7.0)) / 7.0) * 7.0)) / 7.0) * 7.0)) / 7.0) + (max(0.0, (0.2 - fract((((beats * 4.0) + 0.12) - 0.4)))) * 0.6))), 3.1416).y, sin(((beats * 1.57) * 0.25))), (beats * 0.25)).y + sphere);\nd = smin(d, t1, beats - 0.);\n\nreturn vec4(c, min(0.01, d));\n\n}\n\nvec3 march(vec2 uv)\n{\nfloat beaty = ((sin(((beats() * 3.14) * 0.1)) - 0.5) * 1.0);\nvec3 cameraOrigin = (vec3(((0.0 + 0.0) + beaty), (0.0 + 0.0), 4.0) * (1.0 + (1.0 * 1.0)));\nvec3 cameraTarget = vec3(0.0, 0.0, 0.0);\nvec3 upDirection = vec3(0.0, 1.0, 0.0);\nvec3 cameraDir = normalize((cameraTarget - cameraOrigin));\nvec3 cameraRight = normalize(cross(upDirection, cameraOrigin));\nvec3 cameraUp = cross(cameraDir, cameraRight);\nvec3 rayDir = normalize((((cameraRight * uv.x) + (cameraUp * uv.y)) + cameraDir));\nfloat MAX_DIST = 1000.0;\nfloat EPSILON = 0.001;\nfloat totalDist = 0.0;\nvec3 p = cameraOrigin;\nfloat dist = EPSILON;\nvec3 resultColor = vec3(0.0);\nfor(int index = 0;(index < 1000);index = (index + 1))\n{\nif (dist < EPSILON || totalDist > MAX_DIST) break;\nvec4 result = scene(p);\ndist = result.w;\nresultColor = result.xyz;\ntotalDist = (totalDist + dist);\np = (p + (vec3(dist) * rayDir));\n\n}\n\nvec3 c = vec3(0.0);\nif(totalDist < MAX_DIST) {;\nvec2 eps = vec2(0.0, 0.8);\nvec3 normal = normalize(vec3((scene((p + eps.yxx)).w - scene((p - eps.yxx)).w), (scene((p + eps.xyx)).w - scene((p - eps.xyx)).w), (scene((p + eps.xxy)).w - scene((p - eps.xxy)).w)));\nfloat diffuse = max(0.0, dot((-rayDir), normal));\nfloat specular = pow(diffuse, 10.0);\nc = (c + (smoothstep(0.0, 1.2, (diffuse + 0.05)) * 0.85));\nc = (c + (smoothstep(0.0, 1.0, specular) * 0.1));\nc = (sqrt((c - vec3(0.1))) * 1.05);\nc = (c * resultColor);\n} else {;\n};\nreturn c;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//vec2 uv = fsin_Position;\nvec2 uv = fragCoord/iResolution.xy;\nuv -= 0.5;\nuv = -uv;\nuv = vec2((uv.x * 1.777778), uv.y);\nfloat audio1 = (max(0.0, (0.2 - fract(((beats() * 4.0) + 0.12)))) * 0.6);\nuv = vec2((uv.x + (audio1 * (noise(pR(vec2(uv.y), iTime), 0.2) - 0.2))), uv.y);\nuv = vec2((uv.x + (audio1 * 0.2)), uv.y);\nfloat audio2 = (max(0.0, (0.2 - fract((((beats() * 4.0) + 0.12) - 0.4)))) * 0.6);\nuv = vec2((uv.x - (audio2 * (noise(pR(vec2(uv.y), iTime), 0.2) - 0.2))), uv.y);\nuv = vec2((uv.x - (audio2 * 0.2)), uv.y);\nfloat audio3 = (step(6.25, ((fract((beats() / 2.0)) * 2.0) * 4.0)) - step(8.0, ((fract((beats() / 2.0)) * 2.0) * 4.0)));\nuv = vec2((uv.x + (audio3 * (noise(pR(vec2(uv.y), iTime), 0.2) - 0.12))), uv.y);\nvec3 c = vec3(0.0);\nc = march(uv);\nfragColor = vec4(c, 1.0);\n\n}\n\n","name":"Image","description":"","type":"image"}]}