{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Iain Melvin 2014\n\n//#define RADIAL\n#define REFLECT\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float a = 1.0;\n#ifdef REFLECT\n\tuv=abs(2.0*(uv-0.5));\n#endif\n\t\n#ifdef RADIAL\n    float theta = 1.0*(1.0/(3.14159/2.0))*atan(uv.x,uv.y);\n    float r = length(uv);\n\ta=1.0-r;//vignette\n    uv = vec2(theta,r);\t\n#endif\n\t\t\n\tvec4 t1 = texture(iChannel0, vec2(uv[0],0.1) );\n    vec4 t2 = texture(iChannel0, vec2(uv[1],0.1) );\n   \tfloat fft = t1[0]*t2[0]*a;\n\tfragColor = vec4( sin(fft*3.141*2.5), sin(fft*3.141*2.0),sin(fft*3.141*1.0),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dsSDn","date":"1402714645","viewed":1205,"name":"fft matrix product","username":"pixelbeast","description":"Multiply fft by itself.","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["2dfftaudioviz"],"hasliked":0,"parentid":"","parentname":""}}