{"ver":"0.1","info":{"id":"mtd3Rr","date":"1690496117","viewed":42,"name":"Fork Art of the sleeplessm 908","username":"sleeplessmonk","description":"made animation, added color nd audioreactivity","likes":0,"published":1,"flags":64,"usePreview":0,"tags":["2d","short","golf","reproduction"],"hasliked":0,"parentid":"DsGXWy","parentname":"Art of the Day: \"Infinity (1995)"},"renderpass":[{"inputs":[{"id":"Msc3W8","filepath":"https://soundcloud.com/mindfulnomads/primal-horizon","previewfilepath":"https://soundcloud.com/mindfulnomads/primal-horizon","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, vec2 u)\n{\n    vec2 R = iResolution.xy;\n    vec2 U = abs(u + u - R) / R.y;             // normalized coordinates\n    vec2 A = abs(U - 1.5);                     // 2 symmetries\n    vec2 V = U + vec2(-U.y, U);                // 45Â°-tilted coords\n    float d = max(A.x, A.y);                   // distance to square borders\n    d = d > 10.5 ? 0. : max(V.x, V.y) > 0.75 ? d : min(V.x, V.y) / 2.; // Moire pattern calculation\n\n    // Create a trippy effect using time-based animation\n    float timeFactor = sin(iTime * 2.0);        // Vary between -1 and 1 over time\n    d += timeFactor * 0.5;                     // Add animation to the pattern\n\n    // Sample audio input from iChannel0 and apply audioreactive effect\n    vec2 audioData = texture(iChannel0, vec2(iTime * 1.1, 0.5)).rg;\n    float audioInput = 0.5 + 0.5 * audioData.x; // Map audio input to range 0 to 1\n    d += audioInput * 0.3;                     // Add audioreactive effect\n\n    d = cos(150.0 * d);                        // Apply wave pattern\n\n    // Create psychedelic colors by modulating RGB channels with audio input\n    vec3 psychedelicColor = vec3(sin(audioData.x * 10.0), cos(audioData.y * 50.0), sin((audioData.x + audioData.y) * 150.0));\n\n    // Convert the 'd' value to a vec3 and then add it to the vec4\n    vec4 finalColor = vec4(psychedelicColor, 10.0) + vec4(vec3(d / 200.0 * R.y), 01.0);\n\n    O = finalColor; // Turned to antialiased strips\n}\n","name":"Image","description":"","type":"image"}]}