{"ver":"0.1","info":{"id":"tddfWB","date":"1605931457","viewed":217,"name":"Looping 1D noise","username":"airtight","description":"Looping 1D noise. Based on: https://twitter.com/grifdail/status/1329456356240334849","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","loop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n\n//2D gradient noise from https://www.shadertoy.com/view/XdXGW8\nvec2 hash( vec2 x ) {\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\n//returns 0 <-> 1\nfloat noise2dgrad( in vec2 p ){\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    float n = mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n    \n    return (n * 0.5) + 0.5; //normalize\n}\n\n//n: output loops over 0-1 input\n//scale: higher for more variation over 0-1 range\n//seed: arbitary value to generate different loop\n//returns 0 <-> 1\nfloat loopNoise1d(in float n, in float scale, in float seed){\n    float x = cos(n * TWO_PI) + seed;\n    float y = sin(n * TWO_PI) + seed;\n    return noise2dgrad(vec2(x,y) * scale);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //looping 1d noise every 2 seconds\n    float nloop = loopNoise1d(uv.x + iTime / 2., 1.8, 1.2);\n    vec3 col = vec3(step(nloop,uv.y));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}