{"ver":"0.1","info":{"id":"4cc3W8","date":"1711591033","viewed":45,"name":"2D SDF Shuriken","username":"akr51","description":"A 2D SDF Shuriken","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nfloat smoothplot(vec2 p, float f)\n{\n\n\n\n    float dl = 0.5;\n    float du = 0.5;\n    \n    return smoothstep(p.y - dl, p.y, f) - smoothstep(p.y, p.y + du, f);\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    \n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    \n    uv *= 40.0;\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    float j = -0.7;\n    float d = -2.2;\n    float t = -0.9;\n    float n = 1.0;\n    float c_1 = 2.0;\n    float c_2 = 1.0;\n    \n    float v = x * sin(t) + y * cos(t);\n    float u = x * cos(t) - y * sin(t);\n    \n    float w = x * sin(d) + y * cos(d);\n    float k = x * cos(d) - y * sin(d);\n    \n    float s = x * sin(n) + y * cos(n);\n    float z = x * cos(n) - y * sin(n);\n    \n    float f = max(abs(v), abs(u)) + j * max(abs(w), abs(k)) - c_1;\n    \n    float ff = smoothplot(vec2(1.0), max(abs(s), abs(z)) - c_2);\n    float fofx = smoothplot(vec2(1.0), f); \n    \n    fragColor = vec4(vec3(fofx + ff), 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}