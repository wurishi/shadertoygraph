{"ver":"0.1","info":{"id":"4dsfDN","date":"1496257179","viewed":229,"name":"Random dithering experiments","username":"theGiallo","description":"My intuitive idea for dithering. I had to try. Now I can study literature :D","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#if 0\n#define COLOR_TOP vec3(1.0,0.0,1.0)\n#define COLOR_BOTTOM vec3(0.0,1.0,0.0)\n#else\n#define COLOR_TOP vec3(1.0,0.0,0.0)\n#define COLOR_BOTTOM vec3(1.0,1.0,0.0)\n#endif\n\n/*\n From left to right:\n       Gradient     |    round    | texture noise | pseudo blue noise | cheap gaussian noise\n*/\n\n\nfloat mask(vec2 p) // see https://www.shadertoy.com/view/ldyXDd\n{\n#define T(l) textureLod(iChannel1,U/256.,l)\n#define DMUL  8.12235325   \n#define SIZE  5.5\n    vec2 U = floor(p/SIZE)*SIZE;\n    p += ( T(0.).xy - .5 ) *DMUL;\n    return fract( p.x*1.705 + p.y*.5375 ); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float p = 0.5 + dot( uv - vec2( ceil( uv.x * 3.0 ) / 3.0 - 0.16666, 0.5), vec2(sin(iTime), 1.0));\n    fragColor = vec4( mix( COLOR_TOP, COLOR_BOTTOM, p ), 1.0 );\n\n    if ( uv.x > 0.333333 )\n    {\n        float m =\n           uv.x < 0.5 ? 0.5 :\n         ( uv.x < 0.666 ? texture(iChannel0, fragCoord.xy/iChannelResolution[0].xy).r :\n         ( uv.x < 0.8333 ? mask( fragCoord ) :\n         ( texture(iChannel1, fragCoord.xy/iChannelResolution[0].xy).r +\n           texture(iChannel1, fragCoord.xy/iChannelResolution[0].xy).g +\n           texture(iChannel1, fragCoord.xy/iChannelResolution[0].xy).b ) / 3.0\n            ) );\n         \n\t\tfragColor.rgb = m > p ? COLOR_TOP : COLOR_BOTTOM;\n    }\n}\n","name":"Image","description":"","type":"image"}]}