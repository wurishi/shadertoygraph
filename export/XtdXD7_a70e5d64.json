{"ver":"0.1","info":{"id":"XtdXD7","date":"1480210620","viewed":442,"name":"Scary sound","username":"ttoinou","description":"Some oscilloscope and random sound generator","likes":5,"published":1,"flags":40,"usePreview":0,"tags":["oscilloscope","sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = fragCoord.xy / iResolution.xy;\n   fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"#define TAU 6.2831\n\nprecision highp float;\n\nfloat gen(float t,float s){\n    return mix(  step(fract(t),.5 )*2.-1.\n               , sin(t*TAU)\n               , s );\n    //return sin(t*TAU);\n}\n\nvec2 render( float t , float freq , float s )\n{\n    float env = 1.;//exp(-9.0*(cos(t*TAU/30.)-1.) );\n    float env_dephasage = mix(.0,8.,cos(t*TAU/4.)*.5 + .5);\n    float dephasage = cos(t*TAU*1.)*env_dephasage;\n    \n    return env*vec2( gen(freq*t - dephasage,s) , gen(freq*t + dephasage,1.-s) );\n}\n\nvec2 mainSound( in int samp, float t )\n{\n    float ot = t;\n    \n    t = mod(t,6.);\n    vec2 r = vec2(0.);\n    \n    //r += render(t, 440., .3);\n    float mainfreq = mix(122.,106.,cos(ot/60.*TAU)*.5+.5);\n    \n    const int iter = 6;\n    float s = 0.;\n    for( int k = 0 ; k < iter ; k++ ){\n        float dk = float(k)/float(iter);\n    \t//r += render(t, mix(60.,180.,dk), mix(.3,.8,dk) );\n    \tr += render(t, mainfreq*pow(2.,float(k)), mix(.25,.75,dk) )*exp(-3.*abs( (dk-.35)*(dk-.6)) );\n        s++;\n    }\n    \n    float c = r.x+r.y;\n    r = mix(r,vec2(c),.333);\n    \n    r = 2./(1. + exp(-r/s*3.)) - 1.;\n    \n    return r*.2;\n}","name":"Sound","description":"","type":"sound"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define TAU 6.2831\n#define NBSAMPLES 11\n\n\nfloat gen(float t,float s){\n    return mix(  step(fract(t),.5 )*2.-1.\n               , sin(t*TAU)\n               , s );\n    //return sin(t*TAU);\n}\n\nvec2 render( float t , float freq , float s )\n{\n    float env = 1.;//exp(-9.0*(cos(t*TAU/30.)-1.) );\n    float env_dephasage = mix(.0,8.,cos(t*TAU/4.)*.5 + .5);\n    float dephasage = cos(t*TAU*1.)*env_dephasage;\n    \n    return env*vec2( gen(freq*t - dephasage,s) , gen(freq*t + dephasage,1.-s) );\n}\n\nvec2 mainSound( in int samp, float t )\n{\n    float ot = t;\n    \n    t = mod(t,6.);\n    vec2 r = vec2(0.);\n    \n    //r += render(t, 440., .3);\n    float mainfreq = mix(122.,106.,cos(ot/60.*TAU)*.5+.5);\n    \n    const int iter = 6;\n    float s = 0.;\n    for( int k = 0 ; k < iter ; k++ ){\n        float dk = float(k)/float(iter);\n    \t//r += render(t, mix(60.,180.,dk), mix(.3,.8,dk) );\n    \tr += render(t, mainfreq*pow(2.,float(k)), mix(.25,.75,dk) )*exp(-3.*abs( (dk-.35)*(dk-.6)) );\n        s++;\n    }\n    \n    float c = r.x+r.y;\n    r = mix(r,vec2(c),.333);\n    \n    r = 2./(1. + exp(-r/s*3.)) - 1.;\n    \n    return r;\n}\n\nvec2 sampleAudio(float t,float dt){\n    vec2 r = vec2(0.);\n    float s = 0.;\n    float c;\n    float di;\n    \n    for( int i = 0 ; i < NBSAMPLES ; i++ ){\n        di = float(i)/float(NBSAMPLES);\n        c = di-.5;\n        c = exp( -.5*c*c );\n        r += mainSound( in int samp,t + (di*2. - 1.)*dt )*c;\n        s += c;\n    }\n    \n    return r/s;\n}\n\n// -------------------------\n\nvec2 nearestVec(vec2 v,vec2 w,vec2 p){\n    w -= v;\n    v -= p;\n    return v + clamp( -dot(v, w) / dot(w,w) , 0. , 1. ) * w;\n}\n\n#define linear(x,a,b,c,d) ((x-a)/(b-a)*(d-c)+c)\n#define linear2(xx,n) linear(xx,n.x,n.y,n.z,n.w)\n#define linear22(xx,n,m) vec2(linear2(xx.x,n),linear2(xx.y,m))\n\n#define linearf(f,g,x,a,b,c,d) g((f(x)-f(a))/(f(b)-f(a))*(f(d)-f(c))+f(c))\n\nvoid plot(float t,vec2 uv,out vec4 color,float dt,float di){\n    float dtcoeff = iResolution.x/mix(16.,1.,iMouse.y/iResolution.y);\n    \n    vec2 k = 1.- abs( sampleAudio(t,dt/dtcoeff)*sqrt(1.4+5.*di)-vec2(uv.y))*10.;\n                     \n    color = mix(color , vec4(1.,0.,0.,1.) , clamp( k.x , 0. , 1. ) );\n    color = mix(color , vec4(0.,1.,0.,1.) , clamp( k.y , 0. , 1. ) );\n    //color *= clamp( (k-.8)/.2 , 0. , 1. );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(0.);\n\n    \n    \n    float fps = 60.;\n    float time = floor(iTime*fps)/fps;\n    \n    const int nbOscillos = 11;\n    float dt0 = .0135;\n    dt0 *= .5 + iMouse.x/iResolution.x;\n    float muldt = 128.;\n    \n    for( int i = 0 ; i < nbOscillos ; i++ ){\n        float di = float(i)/float(nbOscillos);\n        \n        float dt;\n        dt = linearf(log,exp,di+1./float(nbOscillos),1./float(nbOscillos),1.,dt0,dt0*muldt);\n        //dt = linear(di,0.,1.,dt0,dt0*muldt);\n    \n    \t//vec4 viewT = vec4(0.,1., time-dt , time );\n    \tvec4 viewT = vec4(0.,1., time-dt/2. , time+dt/2. );\n    \tvec4 viewX = vec4(0.,1.,0.,1.);\n    \t//vec4 viewY = vec4( float(i)/float(nbOscillos) , float(i+1)/float(nbOscillos) ,-1.,1.);\n    \tvec4 viewY = vec4( float(i)/float(nbOscillos) , float(i+1)/float(nbOscillos) ,-1.,1.);\n        \n        \n        plot(linear2(uv.x,viewT),\n             linear22(uv,viewX,viewY),\n             fragColor,\n             dt,\n             di);\n    }\n    \n    fragColor = mix( clamp(fragColor,0.,1.) , texture(iChannel0,uv) , .333 );\n}","name":"Buf A","description":"","type":"buffer"}]}