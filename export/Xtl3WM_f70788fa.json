{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float durration = 1.0;\nfloat effect = 10.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 offset = texture(iChannel2, uv);\n    float amount = mod(iTime, durration) / effect;\n    vec4 src_color = texture(iChannel0, uv + ((offset.xy - vec2(0.5)) * amount));\n    vec4 dst_color = texture(iChannel1, uv + ((offset.xy - vec2(0.5)) * ((1.0/effect) - amount)));\n    fragColor = mix(src_color, dst_color, amount * effect);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xtl3WM","date":"1422474447","viewed":438,"name":"Displacement Transition","username":"CloneDeath","description":"Uses the input from channel 2 to determine the displacement effect.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["transitiondisplacement"],"hasliked":0,"parentid":"","parentname":""}}