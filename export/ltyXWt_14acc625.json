{"ver":"0.1","info":{"id":"ltyXWt","date":"1486399940","viewed":115,"name":"Transformed Triangles","username":"remony","description":"My First Shader!\nuse your mouse to change the two centers","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangle","sinus","fragment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RS(a,b,x) (smoothstep(a-1.0, a+1.0,x)*1.0-smoothstep(b-1.0, b+1.0, x))\n#define blue4 vec3(0.953,0.969,0.89)\n#define red   vec3(1.00,0.38,0.227)\n\nvec3 triangleUP(vec2 uv, vec2 center, float radius, float height){\n     vec2 d = uv - center;\n    return RS(0.0, height, d.y+radius) * blue4\n        +(1.0-smoothstep( height-1.0-d.y-radius,height-1.0-d.y-radius, abs(d.x)))*red;\n    //replace plus with * to get triangle\n}\n\nvec3 triangleDOWN(vec2 uv, vec2 center, float radius, float height){\n     vec2 d = uv - center;\n    return RS(-height, 0.0, d.y-radius) * blue4\n        +(1.0-smoothstep( height-1.0+d.y-radius,height-1.0+d.y-radius, abs(d.x)))*red;\n    //replace plus with * to get triangle\n}\n\nvec3 triangleLEFT(vec2 uv, vec2 center, float radius, float height){\n     vec2 d = uv - center;\n    return RS(-height, 0.0, d.x-radius) * blue4\n        +(1.0-smoothstep( height-1.0+d.x-radius,height-1.0+d.x-radius, abs(d.y)))*red;\n    //replace plus with * to get triangle\n}\n\nvec3 triangleRIGHT(vec2 uv, vec2 center, float radius, float height){\n     vec2 d = uv - center;\n    return RS(0.0, height, d.x+radius) * blue4\n        +(1.0-smoothstep( height-1.0-d.x-radius,height-1.0-d.x-radius, abs(d.y)))*red;\n    //replace plus with * to get triangle\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy;\n    vec2 c = iMouse.xy;\n\tvec3 finalColor = vec3(0.0);\n    vec2 m = iMouse.xy/iResolution.xy;\n    finalColor += triangleDOWN(uv, c, sin(iTime)*100.0, 100.0)*0.2;\n    finalColor += triangleUP(uv, c, sin(iTime)*100.0, 100.0)*0.2;\n    finalColor += triangleLEFT(uv, c, sin(iTime)*100.0, 100.0)*0.2;\n    finalColor += triangleRIGHT(uv, c, sin(iTime)*100.0, 100.0)*0.2;\n\t\n    c=iResolution.xy-c;\n    finalColor += triangleDOWN(uv, c, sin(iTime)*100.0, 100.0)*0.2;\n    finalColor += triangleUP(uv, c, sin(iTime)*100.0, 100.0)*0.2;\n    finalColor += triangleLEFT(uv, c, sin(iTime)*100.0, 100.0)*0.2;\n    finalColor += triangleRIGHT(uv, c, sin(iTime)*100.0, 100.0)*0.2;\n    \n\tfragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}