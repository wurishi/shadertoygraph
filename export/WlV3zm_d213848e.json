{"ver":"0.1","info":{"id":"WlV3zm","date":"1578559122","viewed":200,"name":"Default radial blur","username":"RomeCore","description":"Just shader with radial blur function!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur","effects","radialblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEPS 100.0\n\nvec4 blurEffect( sampler2D sourceImage, vec2 inUV, vec2 innerPoint ){\n    \n    vec2 targetVector = innerPoint - inUV;\n    float shineFactor = 1.0 - length(targetVector) / sqrt(2.0);\n    \n    vec4 result = texture(sourceImage, inUV);\n    \n    // Turn on to overlay blur over texture\n    bool textureOverlay = true;\n    \n    if(!textureOverlay)\n    \tresult = vec4(0.0);\n    \n    for(float dist = 0.0; dist < 1.0; dist += 1.0 / STEPS){\n    \t\n        result += texture(sourceImage, inUV + targetVector * dist) * shineFactor / STEPS;\n        \n    }\n    \n    result.w = 1.0;\n    return result;\n    \n}\n\n// Move mouse around to set inner point of radial blur!\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Normalized inner point of radial blur\n    vec2 innerPoint = iMouse.xy / iResolution.xy;\n\n    fragColor = blurEffect(iChannel1, uv, innerPoint);\n}","name":"Image","description":"","type":"image"}]}