{"ver":"0.1","info":{"id":"MlXcWM","date":"1505018171","viewed":410,"name":" - Lamp Raymarch - ","username":"FranciscoGarcia","description":"Raymarch basic experiment.\nThis is my first consciously raymarching.\nI also played with the music buffer.\nLighting based on the IQ presentation called \"Do you know what a fragment shader can do?\".","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPS 0.001\nvec2 rot(in vec2 uv, float angle) {\n\tfloat s = sin(angle);\n    float c = cos(angle);\n    return mat2(c,-s,s,c)*uv;\n}\n\nfloat plane(in vec3 p) {\n\treturn p.y + 1.0;\n}\n\nfloat sph(in vec3 p, float rad) {\n    p.xz = rot(p.xz, iTime);\n    p.xy = rot(p.xy, iTime);\n    p.yz = rot(p.yz, iTime);\n\tvec4 snd = texture(iChannel0, vec2(0.01, 0.02));\n    p += 0.2*snd.x*sin(4.2*snd.x*snd.x*p.x);\n\treturn length(p) -rad;\n}\n\nfloat map(in vec3 p){    \n\tfloat sp = sph(p, 1.2);\n    float pl = plane(p);\n    return min(sp,pl);\n}\nvec3 normal(in vec3 p){\n\tvec2 e = vec2(EPS, 0.00);\n    return normalize(vec3(map(p+e.xyy)-map(p-e.xyy),\n                          map(p+e.yxy)-map(p-e.yxy),\n                          map(p+e.yyx)-map(p-e.yyx)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0*uv;\n    p.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(0.0, 0.0, 2.0);\n    //ro += vec3(0.0 + sin(iTime), 0.0 + 0.3*sin(iTime), 0.0);\n    vec3 rd = normalize(vec3(p,-1.0));\n    vec3 col = vec3(0.0);\n    vec3 lig = vec3(0.5763);\n    \n    float t = 0.0;\n    for(int i=0; i<100; i++){\n        float d = map(ro + t*rd);\n        if(d<EPS) {\n\t\t\t vec3 pos = ro + t*rd;\n       \t\t vec3 nor = normal(pos);\n             //Diffuse light\n        \t col = vec3(.2, 0.3, 0.4)*clamp(dot(nor,lig),0.0, 1.0); \n             //Ambient Light\n             col += vec3(0.3,0.7,0.6)*clamp(nor.y,0.0,1.0);\n             float movL = 3.5*length(nor.z*sin(0.5*iTime));\n             movL += 3.5*(nor.y*sin(0.5*iTime));\n       \t     col += vec3(1.0,1.0,0.1)*clamp(0.4*movL,0.,1.0); \n             col += 0.15; \n             col *= exp(-t*1.2);\n             \n            break;\n        }\n        t += d;\n    }\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}