{"ver":"0.1","info":{"id":"lfdSzl","date":"1714334154","viewed":65,"name":"lattice shader mod3","username":"darkfox","description":"reference: https://twitter.com/Pixelated_Donut/status/1783606215517360277","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["lattice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getInd0(in vec2 v) {\n  v.x = mod(v.x, 3.0);\n  v.y = mod(v.y, 3.0);\n  if (v.x == 1.0 && v.y == 1.0) return 0.0;\n  if (v.x == 2.0 && v.y == 1.0) return 1.0;\n  if (v.x == 2.0 && v.y == 2.0) return 2.0;\n  if (v.x == 1.0 && v.y == 2.0) return 3.0;\n  return -1.0;\n}\n\nfloat getInd1(in vec2 v) {\n  v.x = mod(v.x, 3.0);\n  v.y = mod(v.y, 3.0);\n  if (v.x == 0.0 && v.y == 1.0) return 0.0;\n  if (v.x == 2.0 && v.y == 0.0) return 1.0;\n  if (v.x == 0.0 && v.y == 2.0) return 2.0;\n  if (v.x == 1.0 && v.y == 0.0) return 3.0;\n  return -1.0;\n}\n\nvec3 hsb2rgb(float h, float s, float b){\n  vec3 c = vec3(h, s, b);\n  vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n  rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n  return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord*2.0 - iResolution.xy)/min(iResolution.x, iResolution.y);\n\n  uv *= 8.0;\n  float t = fract(iTime/3.0);\n  float a = pow(3.0+2.0*sqrt(2.0),t);\n  float b = pow(3.0-2.0*sqrt(2.0),t);\n  vec2 va = vec2(0.5*(a+b), 0.25*sqrt(2.0)*(a-b));\n  vec2 vb = vec2(0.5*sqrt(2.0)*(a-b), 0.5*(a+b));\n  float det = va.x*vb.y-va.y*vb.x;\n  vec2 w = (1.0/det) * vec2(vb.y * uv.x - vb.x * uv.y, -va.y * uv.x + va.x * uv.y);\n\n  vec2 wi = floor(w);\n  vec2 target = vec2(0.0);\n  float d = 9999.0;\n  // targetは最近格子点、dはそれとの距離\n  for(float i=-1.0; i<=1.0; i += 1.0){\n    for(float k=-1.0; k<=1.0; k += 1.0){\n      vec2 targetTmp = vec2(wi.x + i, wi.y + k);\n      vec2 p = targetTmp.x * va + targetTmp.y * vb;\n      float dTmp = length(p - uv);\n      if (dTmp < d) {\n      d = dTmp;\n      target = targetTmp;\n      }\n    }\n  }\n  float luminosity = pow(2.5*max(0.5-d, 0.0), 3.0);\n  vec3 baseColor = vec3(1.0);\n  float offset = mod(floor(iTime/3.0), 4.0);\n\n  float ind0 = getInd0(target);\n  float ind1 = getInd1(target);\n  if (ind0 > -0.5) {\n    ind0 += offset;\n    ind0 = mod(floor(ind0), 4.0);\n    //baseColor = vec3(1.0, 0.5, 0.0);\n    if (ind0 == 0.0) baseColor = hsb2rgb(0.0, 1.0, 1.0);\n    if (ind0 == 1.0) baseColor = hsb2rgb(0.1, 1.0, 1.0);\n    if (ind0 == 2.0) baseColor = hsb2rgb(0.2, 1.0, 1.0);\n    if (ind0 == 3.0) baseColor = hsb2rgb(0.3, 1.0, 1.0);\n  } else if (ind1 > -0.5) {\n    ind1 += offset;\n    ind1 = mod(ind1, 4.0);\n    //baseColor = vec3(0.0, 0.5, 1.0);\n    if (ind1 == 0.0) baseColor = hsb2rgb(0.45, 1.0, 1.0);\n    if (ind1 == 1.0) baseColor = hsb2rgb(0.55, 1.0, 1.0);\n    if (ind1 == 2.0) baseColor = hsb2rgb(0.7, 1.0, 1.0);\n    if (ind1 == 3.0) baseColor = hsb2rgb(0.8, 1.0, 1.0);\n  }\n\n  baseColor *= luminosity;\n\n  fragColor = vec4(baseColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}