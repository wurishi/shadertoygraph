{"ver":"0.1","info":{"id":"cttSRB","date":"1685615759","viewed":43,"name":"Newton Fractal (move cursor)","username":"jan_Horseman","description":"del belfine","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 zexp(vec2 A)\n{\n    return vec2(pow(2.719, A.x)*cos(A.y), pow(2.719, A.x)*sin(A.y));\n}\nvec2 zlog(vec2 A)\n{\n    return vec2(log(A.x*A.x+A.y*A.y)/log(2.719)/2., atan(A.y, A.x));\n}\nvec2 mult(vec2 A, vec2 B)\n{\n    return vec2(A.x*B.x-A.y*B.y, A.x*B.y+A.y*B.x);\n}\nvec2 zinvert(vec2 A)\n{\n    return vec2(1./sqrt(A.x*A.x+A.y*A.y)*cos(-atan(A.y, A.x)), 1./sqrt(A.x*A.x+A.y*A.y)*sin(-atan(A.y, A.x)));\n}\nvec2 div(vec2 A, vec2 B)\n{\n    return mult(A, zinvert(B));\n}\nvec2 zpow(vec2 A, vec2 B)\n{\n    return zexp(mult(zlog(A), B));\n}\nvec2 zsin(vec2 A)\n{\n    return vec2(sin(A.x)*cosh(A.y), cos(A.x)*sinh(A.y));\n}\nvec2 zcos(vec2 A)\n{\n    return vec2(cos(A.x)*cosh(A.y), -sin(A.x)*sinh(A.y));\n}\nvec2 ztan(vec2 A)\n{\n    return div(cos(A), sin(A));\n}\nfloat zabs(vec2 A)\n{\n    return sqrt(A.x*A.x+A.y*A.y);\n}\nvec2 f(vec2 A, vec2 B)\n{\n    return zsin(A);\n}\nvec2 df(vec2 A, vec2 B)\n{\n    return div(f(vec2(A.x+0.0001, A.y+0.0001), B) - f(A,B), vec2(0.0001, 0.0001));\n}\nvec2 newton(vec2 A, vec2 B)\n{\n    return A - div(f(A,B), df(A,B));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 m = vec2(iMouse.x/iResolution.x, iMouse.y/iResolution.y);\n    float scale = 1.;\n    m -= 0.5;\n    m *= 1.0/0.4;\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= scale;\n    float maxi = 24.;\n    float i = 0.;\n    uv = zinvert(uv)+m;\n    vec2 c = vec2(m.x, 2.0);\n    vec2 p = vec2(1.0,0.0);\n    while(i < maxi){\n        uv = newton(uv, c);\n        uv.x = (uv.x);\n        uv.y = (uv.y);\n        i = i+1.;\n    }\n    if(i<maxi)\n    {\n        float zn = log(uv.x*uv.x+uv.y*uv.y);\n        float noose = log(zn/zabs(zlog(p)))/zabs(zlog(p));\n        i = i-noose + 1.0;\n    }\n    vec4 colourA = vec4(uv.x, uv.y, 0, 0);\n    vec4 colourB = vec4(pow(i,0.5)/4.0, pow(i,0.4)/6.0, pow(i,0.6)/4.0, pow(i,0.5)/5.0);\n    vec4 colourC = vec4(sin(7.0*abs(uv.x/3.14159)/100.0), sin(2.5*abs(uv.x/3.14159)/100.0)/0.6, pow(sin(3.8*abs(uv.x/3.14159)/100.0), 0.9), 0.0);\n    // Output to screen\n    fragColor = colourC;\n}","name":"Image","description":"","type":"image"}]}