{"ver":"0.1","info":{"id":"ldyXRR","date":"1462393220","viewed":532,"name":"super simple liquid warp","username":"jmickle","description":"really fucken simple liquid warp like in quake or whatever","likes":13,"published":1,"flags":0,"usePreview":1,"tags":["liquid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// set up constants, effects ripple behaviour\nfloat violence = 0.02;\nfloat levelOfExtreme = 6.0;\n\n// function warp x or y coordinate based on time and sin that shit\nfloat warp( float a )\n{\n    float timeMod = iTime + a;\n    return a + sin( timeMod * levelOfExtreme ) * violence;\n}\n\n// main thing\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // get 0..1 uv coords instead of pixel coords\n    vec2 uv = (fragCoord.xy / iResolution.xy);\n    \n    // warp each uv coord seperately using our cool function\n    uv.x = warp(uv.x);\n    uv.y = warp(uv.y);\n    \n    // return the color from the texture with the warped uv\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}