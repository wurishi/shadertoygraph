{"ver":"0.1","info":{"id":"fsBczD","date":"1643160897","viewed":56,"name":"skyMoons","username":"greyDogFish","description":"skymoons","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["skymoon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat MakeCircle(float center, float radius){\n      \n    // Step will return 0.0 unless the value is over 0.5,\n    // in that case it will return 1.0\n   //float y = step(0.5,pct);\n   \n    float y = smoothstep(radius-.20,radius,center);\n      \n        return 1.-y;     //inverse it\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord.xy/iResolution.xy;   \n\n    // a. The DISTANCE from the pixel to the center\n    float cc = distance(uv,vec2(0.5)); \n    \n    // b. The LENGTH of the vector\n    //    from the pixel to the center\n    // vec2 toCenter = vec2(0.5)-st;\n    // pct = length(toCenter);\n\n    // c. The SQUARE ROOT of the vector\n    //    from the pixel to the center\n     //vec2 tC = vec2(0.5)-st;\n    // pct = sqrt(tC.x*tC.x+tC.y*tC.y);        \n\n    \n    //first circle\n    float circle = MakeCircle(cc,0.30);    \n     vec3 color = vec3(0.,0.1,0.1);    \n     color += vec3(circle);   //add circle to color\n     \n         //2nd circle\n      float cc2 = distance(uv,vec2(0.2)); //use diffrent center pos\n     float circle2 = MakeCircle((cc2), 0.10); \n     color += circle2;  //add 2nd circle to color\n     \n     //3rd\n      float cc3 = distance(uv,vec2(0.82,0.15)); //use diffrent center pos\n     float circle3 = MakeCircle((cc3), 0.20); \n     color += circle3;  //add circle\n    \n\tfragColor = vec4( color, 1.0 );\n}\n\n","name":"Image","description":"","type":"image"}]}