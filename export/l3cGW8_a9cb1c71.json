{"ver":"0.1","info":{"id":"l3cGW8","date":"1716485749","viewed":27,"name":"modified_shader island","username":"refler","description":"modified from tutorial from iq: https://www.shadertoy.com/view/XssSRX\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["painting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = fragCoord.xy / iResolution.xy;\n    vec2 d = p - vec2 (0.4 , 0.7);\n    vec3 col = mix(vec3(0.1, 0.7, 1), vec3(1, 1, 1), exp(0.9*p.y)-1.0);\n\n    float r = 0.02;\n    r += 0.003 * cos(120.0*d.y);\n    r += exp(-40.0 * p.y);\n\n    vec3 backgroundColor = vec3(0.0, 0.0, 0.0);\n    vec3 waveColor = vec3(0.0, 0.5, 1.0);\n\n    // wave parameters\n    float waveHeight1 = 0.05;\n    float waveFrequency1 = 3.0;\n    float waveSpeed1 = 1.0;\n\n    float waveHeight2 = 0.02;\n    float waveFrequency2 = 6.0;\n    float waveSpeed2 = 1.5;\n\n    float waveHeight3 = 0.01;\n    float waveFrequency3 = 9.0;\n    float waveSpeed3 = 2.0;\n\n    // wave\n    float wave1 = waveHeight1 * sin(p.x * waveFrequency1 + iTime * waveSpeed1);\n    float wave2 = waveHeight2 * sin(p.x * waveFrequency2 + iTime * waveSpeed2);\n    float wave3 = waveHeight3 * sin(p.x * waveFrequency3 + iTime * waveSpeed3);\n\n    float wave = wave1 + wave2 + wave3;\n    float lineThickness = 0.05;\n    // waveline\n    for (int i = 0; i < 5; i++) {\n        float waveOffset = float(i) * 0.2 ; \n        float waveLine = mod( -0.2 * iTime + waveOffset,1.0);\n        float mixFactor = (1.0 - smoothstep(-lineThickness, lineThickness, abs(p.y + 0.25 * p.x - waveLine)));\n        vec3 color = mix(backgroundColor, waveColor, mixFactor);\n        col += color;\n    }\n\n    //sea \n    col *= 1.0-(1.0-(1.0-smoothstep(r, r+0.0001, abs(d.x+0.3*sin(-2.0*d.y)))) * (1.0-smoothstep(0.0,0.001,d.y)) * (1.0-smoothstep(0.09,0.091,p.y)))*(1.0-smoothstep(0.,0.9,p.y));\n    col += vec3(0.0, 0.3, 0.7) * (1.0-(1.0-smoothstep(r, r+0.0001, abs(d.x+0.3*sin(-2.0*d.y)))) * (1.0-smoothstep(0.0,0.001,d.y)) * (1.0-smoothstep(0.09,0.091,p.y)))*(1.0-smoothstep(0.89,0.9,p.y));\n    \n\n    //trunk\n    col *= 1.0-(1.0-smoothstep(r, r+0.0001, abs(d.x+0.3*sin(-2.0*d.y)))) * (1.0-smoothstep(0.0,0.001,d.y));\n    col += vec3(0.6,0.3,0.1)*(1.0-smoothstep(r, r+0.0001, abs(d.x+0.3*sin(-2.0*d.y)))) * (smoothstep(-0.0,-0.01,d.y));\n    col += vec3(0.3,0.3,0.1)*(1.0-smoothstep(r, r+0.0001, abs(d.x+0.3*sin(-2.0*d.y)))) * (smoothstep(-0.0,-0.01,d.y) * smoothstep(-0.0,-0.01,cos(100.0*p.y)));\n    //land\n    col *= (1.0-(1.0-smoothstep(r, r+0.0001, abs(d.x+0.3*sin(-2.0*d.y)))) * (1.0-smoothstep(0.0,0.001,d.y)) * (1.0-smoothstep(0.09,0.091,p.y))) ;\n    col += vec3(0.9,0.7,0.3)*(1.0-smoothstep(r, r+0.0001, abs(d.x+0.3*sin(-2.0*d.y)))) * (1.0-smoothstep(0.0,0.001,d.y)) * (1.0-smoothstep(0.09,0.091,p.y));\n    //light\n    col += 0.2*( 0.1 * cos(atan(d.x,d.y)*10.0 -  20.0 * d.x + 60.0));\n\n    // leaves with sway effect\n    float sway = 0.01 * sin(iTime + d.y * 5.0); // sway factor\n    r = 0.2 + 0.1 * cos(atan(d.x + sway, d.y) * 10.0 - 20.0 * (d.x + sway) + 1.0);\n    col *= smoothstep(r, r + 0.01, length(d));\n    col += vec3(0.7, 0.9, 0.3) * (1.0 - smoothstep(r, r + 0.01, length(d)));\n\n    fragColor = vec4(col, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}