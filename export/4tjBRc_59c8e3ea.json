{"ver":"0.1","info":{"id":"4tjBRc","date":"1516822165","viewed":81,"name":"AUCS Playground - Circular","username":"ilmikko","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897\n\nvec3 circle(vec2 uv,vec2 position)\n{\n    float len = clamp(1.-length(uv-position)/1.5,-0.1,1.);\n\treturn vec3(len);\n}\nvec3 circle(vec2 uv,vec2 position, vec3 color)\n{\n\treturn circle(uv,position)*color;\n}\n\nvec3 noise(vec3 vec)\n{\n   \tvec.x+=sin(iTime)*0.1;\n    vec.y+=cos(iTime)*0.324;\n    vec.z+=sin(iTime)*0.4;\n    return vec;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.*fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n    vec3 color = vec3(0);\n    \n    float circles=11.;\n    \n    for (float i; i<circles; i++)\n    {\n        float p=i/circles;\n        \n        float r=sin(cos(p+iTime/3.12));\n        float g=cos(sin(r+0.5+iTime/2.));\n        float b=sin(g+0.5+iTime);\n        \n        vec2 pos;\n        \n        float angle=iTime/2.;\n        float radius=1.5+cos(iTime/4.)/10.;\n            \n        pos.x=sin(2.*PI*p+angle)*radius;\n        pos.y=cos(2.*PI*p+angle)*radius;\n        \n    \tvec3 circ = circle(uv,pos,vec3(r,g,b));\n    \n    \tcolor += circ;\n    }\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}