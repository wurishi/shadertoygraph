{"ver":"0.1","info":{"id":"sl23R1","date":"1623381069","viewed":81,"name":"Diff Light w/ Cheap Toon Effect","username":"trigophers","description":"MOVE YOUR MOUSE!!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ray","diffuse","toon","madness"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define maxDist 10000.\n#define specAmount 0.988\n#define toonAmount 4.\nvec3 center;\nvec3 ray;\nfloat rdist;\nvec3 color;\nvec3 normal;\n\nvoid sphere(vec4 posRad, vec3 sColor) {\n    vec3 obj = posRad.xyz - center;\n    vec3 temp = vec3(dot(obj, ray), dot(obj, obj), 0.);\n    if ((temp.x>0.0) && (posRad.w*posRad.w > (temp.y - temp.x*temp.x))) {\n        temp.z = sqrt(posRad.w*posRad.w - (temp.y - temp.x*temp.x));\n        if ((temp.y > posRad.w*posRad.w) && rdist > temp.x - temp.z) {\n            rdist = temp.x - temp.z;\n            normal = normalize(center+ray*rdist-posRad.xyz);\n            color = sColor;\n        }\n    }\n}\n\nvoid scene() {\n    sphere(vec4(0, 5, 30, 5), vec3(1, 0, 0));\n    sphere(vec4(5, 4, 30, 4), vec3(0, 1, 0));\n    sphere(vec4(0, -1000000, 30, 1000000), vec3(0.2, 0.5, 0.5));\n}\n\nvec3 raytrace(vec2 uv) {\n    center = vec3(iMouse.x-iResolution.x/2., 5, iMouse.y-iResolution.y/2.);\n    ray = normalize(vec3(uv, 1));\n    rdist = maxDist;\n    scene();\n    if (rdist<maxDist) {\n        vec3 light = vec3(cos(iTime)*10., 30., sin(iTime)*10.+30.);\n        vec3 lightVec = normalize(light-(center+rdist*ray));\n        vec3 saveC = vec3(clamp(dot(lightVec, normal), 0., 1.));\n        vec3 saveOC = color;\n        vec3 specRef = normalize(reflect(ray, normal));\n        center = center+rdist*ray+normal/100000.;\n        ray = lightVec;\n        rdist = maxDist;\n        scene();\n        if (rdist<maxDist && rdist < length(center-light)) {\n            return saveOC*0.02;\n        } else {\n            float spec = dot(specRef, lightVec);\n            if (spec>specAmount) {return vec3(1.0);}\n        }\n        return vec3((saveC+0.02)*saveOC);\n    } else {\n        return vec3(0);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-iResolution.xy/2.)/iResolution.yy;\n    vec3 superSample = vec3(0.);\n    superSample += raytrace(uv+vec2(1./iResolution.x/2., -1./iResolution.x/2.));\n    superSample += raytrace(uv+vec2(-1./iResolution.x/2., -1./iResolution.x/2.));\n    superSample += raytrace(uv+vec2(1./iResolution.x/2., 1./iResolution.x/2.));\n    superSample += raytrace(uv+vec2(-1./iResolution.x/2., 1./iResolution.x/2.));\n    superSample /= 4.;\n    fragColor = vec4(pow(round(superSample*vec3(toonAmount))/vec3(toonAmount), vec3(0.4545)), 1.0);\n}","name":"Image","description":"","type":"image"}]}