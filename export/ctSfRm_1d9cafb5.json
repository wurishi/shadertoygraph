{"ver":"0.1","info":{"id":"ctSfRm","date":"1693859346","viewed":126,"name":"Approximate Snow/VHS noise","username":"untodesu","description":"A peculiar effect I came up whilst playing with GIMP: specks (white noise with a threshold applied) passed through a horizontal blur effect.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["noise","approximation","analog","snow","vhs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 target, in vec2 frag)\n{\n    const int steps = 16;\n    const float fsteps = float(steps);\n    vec2 uv = frag / iResolution.xy;\n    float st = 1.0 / iResolution.x;\n    for(int i = 1; i <= steps; ++i)\n        target += texture(iChannel0, uv - vec2(float(i) * st, 0.0)) / float(i) * 16.0;\n    target += texture(iChannel0, uv);\n    target /= fsteps;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec3 value)\n{\n    vec3 sv = sin(value);\n    float random = dot(sv, vec3(12.9898, 78.233, 37.719));\n    return fract(sin(random) * 143758.5453);\n}\n\nfloat getThreshold()\n{\n    if(iMouse.z > 0.0)\n        return 1.0 - iMouse.x / iResolution.x;\n    return 0.95;\n}\n\nvoid mainImage(out vec4 target, in vec2 frag)\n{\n    float threshold = getThreshold();\n    vec2 uv = frag / iResolution.xy;\n    float cutoff = smoothstep(0.98, 0.97, uv.x);\n    float noise = step(threshold, rand(vec3(100.0 * uv, iTime / 1000.0)));\n    float color = 5.0 * cutoff * noise;\n    target = vec4(vec3(color), 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}