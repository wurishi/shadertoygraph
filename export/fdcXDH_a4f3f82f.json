{"ver":"0.1","info":{"id":"fdcXDH","date":"1633011868","viewed":147,"name":"Watercolor (no worky)","username":"Protowalker","description":"First attempt at a watercolor shader. Don't have the time to think harder about it or I'll never do my job. Hopefully I actually come back to it.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["draft","watercolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float xResScale=0.1;\nconst float yResScale=0.1;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    float modifier = -0.1 + texture(iChannel1, uv*vec2(xResScale, yResScale)).x * 0.2;\n    \n    vec4 colorHsv = texture(iChannel0, uv);\n    colorHsv.xyz = rgb2hsv(colorHsv.xyz);\n   \n    colorHsv.y = stepInterval(colorHsv.y, 0.1);\n    colorHsv.z = stepInterval(colorHsv.z, 0.25);\n\n    vec4 colorRgb = vec4(hsv2rgb(colorHsv.xyz), colorHsv.a);\n\n    // Output to screen\n    \n    fragColor = colorRgb;\n}\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// All components are in the range [0…1], including hue.\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n \n\n// All components are in the range [0…1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nfloat stepInterval(float value, float interval) {\n    return value - mod(value, interval);\n}\n\n\nvec2 stepInterval(vec2 value, float interval) {\n    return value - mod(value, interval);\n}\n\n\nvec3 stepInterval(vec3 value, float interval) {\n    return value - mod(value, interval);\n}","name":"Common","description":"","type":"common"}]}