{"ver":"0.1","info":{"id":"XsXyzH","date":"1486917296","viewed":244,"name":"Dishonored 2 Spyglass Effect","username":"drummertom999","description":"Quick attempt at Dishonored 2 Spyglass Effect","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["dishonored"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate_point(vec2 p, float angle, vec2 centre)\n{\n  float s = sin(angle);\n  float c = cos(angle);\n  p -= centre;\n  p = vec2(p.x * c - p.y * s, p.x * s + p.y * c);\n  p += centre;\n  return p;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Config\n    float GRAD_DIST = iResolution.y * 0.15;\n    float REFRACT_DIST = iResolution.y * 0.15;\n    float CLEAR_DIST = iResolution.y * 0.45;\n    \n    // Radial distance\n    vec2 centre_to_frag = fragCoord.xy-(iResolution.xy/2.0);\n    float angle = atan(centre_to_frag.x / centre_to_frag.y);\n    float rdist = length(centre_to_frag);\n    float rdist_grad_lin = clamp((rdist-CLEAR_DIST)/GRAD_DIST, 0.0, 1.0);\n    float rdist_grad = pow(rdist_grad_lin, 1.4);\n    \n    // Refract gradient\n    float refract_dist = clamp((rdist - (CLEAR_DIST - (REFRACT_DIST*0.03)))/(REFRACT_DIST * 0.5), 0.0, 1.0);\n    refract_dist = sin(refract_dist * 1.0 * 3.414);\n    refract_dist = pow(refract_dist, 3.0);\n    \n    // UV\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 texel_size = 1.0 / iResolution.xy;  \n    uv = rotate_point(uv, -0.08 * refract_dist, vec2(0.5, 0.5));\n    \n    // Animate movement\n    float t = iTime - 2.0;\n    uv.x += texel_size.x * 100.0 * texture(iChannel1, vec2(0.0, t * 0.01)).x;\n    uv.y += texel_size.y * 130.0 * texture(iChannel1, vec2(0.0, 0.25 + t * 0.01)).x;\n\n    // Animate zoom\n    float zoom = (1.0 + sin(t)) * 0.5;\n    uv = mix(uv * 0.7, uv * 0.5, zoom);\n    \n    // Blur weights\n    float w_0 = mix(0.0, 0.003765, rdist_grad);\n    float w_1 = mix(0.0, 0.015019, rdist_grad);\n    float w_2 = mix(0.0, 0.023792, rdist_grad);\n    float w_3 = mix(0.0, 0.059912, rdist_grad);\n    float w_4 = mix(0.0, 0.094907, rdist_grad);\n    float w_main = mix(1.0, 0.150342, rdist_grad);\n    \n    // Blur\n    vec4 t_00 = texture(iChannel0, uv - (texel_size * 2.0));\n    vec4 t_01 = texture(iChannel0, uv - vec2(texel_size.x, -texel_size.y * 2.0));\n    vec4 t_02 = texture(iChannel0, uv + vec2(0.0, -texel_size.y * 2.0));\n    vec4 t_03 = texture(iChannel0, uv + vec2(texel_size.x, -texel_size.y * 2.0));\n    vec4 t_04 = texture(iChannel0, uv + vec2(texel_size.x * 2.0, -texel_size.y * 2.0));\n    \n    vec4 t_10 = texture(iChannel0, uv - vec2(texel_size.x * 2.0, -texel_size.y));\n    vec4 t_11 = texture(iChannel0, uv - texel_size);\n    vec4 t_12 = texture(iChannel0, uv + vec2(0.0, -texel_size.y));\n    vec4 t_13 = texture(iChannel0, uv + vec2(texel_size.x, -texel_size.y));\n    vec4 t_14 = texture(iChannel0, uv + vec2(texel_size.x * 2.0, -texel_size.y));\n                          \n    vec4 t_20 = texture(iChannel0, uv - vec2(texel_size.x * 2.0, 0.0));\n    vec4 t_21 = texture(iChannel0, uv - vec2(texel_size.x, 0.0));\n    vec4 t_22 = texture(iChannel0, uv + vec2(0.0, -texel_size.y));\n    vec4 t_23 = texture(iChannel0, uv + vec2(texel_size.x, 0));\n    vec4 t_24 = texture(iChannel0, uv + vec2(texel_size.x * 2.0, 0));\n                          \n    vec4 t_30 = texture(iChannel0, uv + vec2(-texel_size.x * 2.0, texel_size.y));\n    vec4 t_31 = texture(iChannel0, uv + vec2(-texel_size.x, texel_size.y));\n    vec4 t_32 = texture(iChannel0, uv + vec2(0.0, texel_size.y));\n    vec4 t_33 = texture(iChannel0, uv + vec2(texel_size.x, texel_size.y));\n    vec4 t_34 = texture(iChannel0, uv + vec2(texel_size.x * 2.0, texel_size.y));\n                          \n    vec4 t_40 = texture(iChannel0, uv - (texel_size * 2.0));\n    vec4 t_41 = texture(iChannel0, uv + vec2(-texel_size.x, texel_size.y * 2.0));\n    vec4 t_42 = texture(iChannel0, uv + vec2(0.0, texel_size.y * 2.0));\n    vec4 t_43 = texture(iChannel0, uv + vec2(texel_size.x, texel_size.y * 2.0));\n    vec4 t_44 = texture(iChannel0, uv + (texel_size * 2.0));  \n    \n    vec4 blurred_sample = (t_00 * w_0) + (t_01 * w_1) + (t_02 * w_2) + (t_03 * w_1) + (t_04 * w_0) +\n                          (t_10 * w_1) + (t_11 * w_3) + (t_12 * w_4) + (t_13 * w_3) + (t_14 * w_1) +\n                          (t_20 * w_2) + (t_21 * w_4) + (t_22 * w_main) + (t_23 * w_4) + (t_24 * w_2) +\n                          (t_30 * w_1) + (t_31 * w_3) + (t_32 * w_4) + (t_33 * w_3) + (t_34 * w_1) +\n                          (t_40 * w_0) + (t_41 * w_1) + (t_42 * w_2) + (t_43 * w_1) + (t_44 * w_0);\n    \n    // Ring noise\n    float ring_step = step(0.001, rdist_grad);\n    vec4 ring_noise = texture(iChannel1, vec2(0.0, (rdist_grad / 2.8)+0.1));\n    vec4 angular_noise = texture(iChannel1, vec2(angle + (rdist_grad / 0.3), 0.0));\n    \n    // Vignette\n    vec4 raw = mix(blurred_sample, vec4(0.0), rdist_grad);\n\tfragColor = mix(raw, raw * ring_noise, rdist_grad_lin);\n}","name":"Image","description":"","type":"image"}]}