{"ver":"0.1","info":{"id":"3tKGWm","date":"1579102339","viewed":98,"name":"Spinning spiral","username":"dtsmio","description":"spiral","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n\n    vec2 st = rotate(uv, PI * 8. * (-iTime / 8. + length(uv)));\n\n    float line1 = smoothstep(-0.25, 0.25, st.x);\n    float line2 = 1. - line1;\n\t\n    float h = 1.4 * smoothstep(-1., 1., sin(st.x * PI / 2. + 0.75 * PI));\n    h -= 1.4 * smoothstep(-1., 1., sin(st.x * PI / 2. + 0.25 * PI));\n    \n    vec3 c1 = vec3(0.8, 0.2, 0.3);\n    vec3 c2 = vec3(0.9, 0.92, 0.96);\n    \n    // how to create normal normal?\n    vec3 normal = normalize(vec3( uv.x, h, uv.y));\n    vec3 light = normalize(vec3(0.2 * sin(iTime/2.), 2.0, 1. * cos(iTime/2.)));\n    float shading = dot(normal, light) * 0.5;\n    shading += (1. - length(light.xz - uv) * 2.) * 0.4; \n\tfloat spec = smoothstep(0.46, 1., shading);\n    \n    col = 1.2 * max(0.2, shading) * (c1 * line1 + c2 * line2);\n    col += 2. * smoothstep(0.46, 1., shading);\n    col += 0.2 * smoothstep(0.4, 1., shading);\n    col += 0.1 * smoothstep(0.3, 1., shading);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}