{"ver":"0.1","info":{"id":"4lGcRc","date":"1537048216","viewed":80,"name":"CheckerBoard_ChunTao","username":"chuntao_lin","description":"Displays a checkerboard Pattern","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 stripes(vec2 uv, vec4 fragColorP, vec4 fragColorP2);\nfloat dimensions = 20.0;//change to determine the amount of row and column\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n  \n    // the floor rounds values down to 0, ceil rounds values up to 1;\n     \n    \n    vec4 newColor = vec4(1.0,1.0,1.0,1.0);//white\n    vec4 newColor2 = vec4(0.0,0.0,0.0,1.0);//black              \n \n    fragColor = stripes(uv,newColor, newColor2);//assign frag color to return value of stripes function\n}\nvec4 stripes(vec2 uv, vec4 fragColorP, vec4 fragColorP2) \n{\n    float temp3 = (floor(uv.x * dimensions), 2.0);//helps create the initial row\n    float temp2 = (ceil(uv.x * dimensions), 2.0);//helps fill in the row with another color\n    float temp =  (floor(uv.y * dimensions), 2.0);//helps fill in regards to y\n \n    vec4 newColorP;//create a new vec4 color that will be returned\n    \n \n    if (temp3 != 0.0 && temp == 0.0)\n    {\n          newColorP = fragColorP2;\n    }\n    else\n    {\n          newColorP = (temp * fragColorP) + (temp3 * fragColorP);//assign new color values based on the math calcs.\n    }\n      \n    return newColorP;//return the new color\n       \n}\n\n","name":"Image","description":"","type":"image"}]}