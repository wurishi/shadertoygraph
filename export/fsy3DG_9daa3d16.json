{"ver":"0.1","info":{"id":"fsy3DG","date":"1632085595","viewed":56,"name":"Line Reflections. ","username":"plosique","description":"Follows a line bouncing off the inside of a square.I kept the external lines to illustrate the idea. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lineEq(const vec2 p,const vec2 q){\n    \n    float a = p.y- q.y;\n    float b = q.x - p.x;\n    float c = -a*p.x-b*p.y; \n    return vec3(a,b,c); \n    \n}\n\nbool onLine(const vec3 coeff,const vec2 pt){\n    const float tol = .001;\n    \n    return abs(coeff.x*pt.x+coeff.y*pt.y+coeff.z)<tol;\n}\n\nfloat det(vec2 p,vec2 q){\n    return p.x*q.y-p.y*q.x; \n}\n\nbool isOnSegment(vec2 l,vec2 r,vec2 uv,vec3 lineCoeff,float dist){\n    vec2 lr = r-l; \n    vec2 luv = uv-l; \n    vec2 lrt = lr.yx; \n    \n    return onLine(lineCoeff,uv) && det(lrt,luv)<0. && length(luv)<dist; \n}\n\nvec2 Rx(float c,vec2 p){\n    return vec2(2.*c-p.x,p.y); \n}\nvec2 Ry(float c,vec2 p){\n    return vec2(p.x,2.*c-p.y); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = fragCoord/iResolution.y;\n    p-=vec2(0.5*iResolution.x/iResolution.y,0.5);\n    p*=2.; \n    \n    vec2 r1p = Rx(0.5,p);\n    vec2 r2p = Ry(0.5,r1p);\n    vec2 r3p = Rx(1.5,r2p); \n    vec2 r4p = Ry(1.5,r3p); \n    vec2 r5p = Rx(2.5,r4p); \n    \n    vec3 color = white;\n    \n    vec2 l = vec2(0.); \n    vec2 r = vec2(1.,.7); \n\n    vec3 lineCoeff = lineEq(l,r); \n    const float tol = .01; \n    bool inSquare = max(abs(p.x),abs(p.y)) < 0.5;  \n    bool onAxis = abs(p.x) < tol*.5 || abs(p.y)<tol*.5;\n    bool onSquare = abs(max(abs(p.x),abs(p.y))-0.5)<tol; \n    \n    float dist = mod(iTime*.1,3.5);  \n    bool onSegment = isOnSegment(l,r,p,lineCoeff,dist);\n    onSegment = onSegment || isOnSegment(l,r,r1p,lineCoeff,dist);\n    onSegment = onSegment || isOnSegment(l,r,r2p,lineCoeff,dist);\n    onSegment = onSegment || isOnSegment(l,r,r3p,lineCoeff,dist);\n    onSegment = onSegment || isOnSegment(l,r,r4p,lineCoeff,dist);\n    onSegment = onSegment || isOnSegment(l,r,r5p,lineCoeff,dist);\n    \n    \n    if( onSegment || onAxis || onSquare){\n        color = black; \n    }\n \n    fragColor = vec4(color,1.0); \n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 black=vec3(0.);\nvec3 white=vec3(1.);","name":"Common","description":"","type":"common"}]}