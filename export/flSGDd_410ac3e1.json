{"ver":"0.1","info":{"id":"flSGDd","date":"1624941419","viewed":721,"name":"Glowing Star ðŸŒŸ","username":"inspirnathan","description":"Glowing star ðŸŒŸ. Check out my tutorial on glow to learn more: [url]https://inspirnathan.com/posts/65-glow-shader-in-shadertoy[/url]","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["star","glow","inspirnathan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Check out my tutorial to learn more: https://inspirnathan.com/posts/65-glow-shader-in-shadertoy\n\nvec2 rotate(vec2 uv, float th) {\n  return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\n\nfloat sdStar5(vec2 p, float r, float rf)\n// Credit: https://iquilezles.org/articles/distfunctions2d\n{\n  const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n  const vec2 k2 = vec2(-k1.x,k1.y);\n  p.x = abs(p.x);\n  p -= 2.0*max(dot(k1,p),0.0)*k1;\n  p -= 2.0*max(dot(k2,p),0.0)*k2;\n  p.x = abs(p.x);\n  p.y -= r;\n  vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n  float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n\n  return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; // x: <0, 1>, y: <0, 1>\n  uv -= 0.5; // x: <-0.5, 0.5>, y: <-0.5, 0.5>\n  uv.x *= iResolution.x/iResolution.y; // x: <-0.5, 0.5> * aspect ratio, y: <-0.5, 0.5>\n\n  float d = sdStar5(rotate(uv, iTime), 0.12, 0.45); // signed distance function\n\n  vec3 col = vec3(step(0., -d));\n  \n  col += clamp(vec3(0.001/d), 0., 1.) * 12.; // add glow\n\n  col *= vec3(1, 1, 0);\n\n  fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}