{"ver":"0.1","info":{"id":"ssSSRm","date":"1658387840","viewed":123,"name":"Interlocking Rectangles","username":"Reynolds","description":"I wanted to improve this but I no longer understand my own code","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","interlocking"],"hasliked":0,"parentid":"NdjXzW","parentname":"L shaped rep-tiles"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 U = fragCoord/iResolution.y - vec2(0.33, 0);\n \n    vec3 col = vec3(1.0, 0.4, 0.4);\n    \n    float l = 0.25;\n    float r = 0.75;\n    \n    float t = 0.6;\n    float tD = 0.05;\n    \n    float b = 0.35;\n    float bD = 0.05;\n    \n    float s = 0.025;\n    \n    int n = 4;\n \n    for(int i = 0; i < n; ++i) {\n\n        if(U.x > l - s && U.x < r+s && U.y > l - s && U.y < r + s) {\n            if(!(U.x > l + s && U.x < r-s && U.y > l + s && U.y < r - s)) {\n                \n                if(i > 0 && U.y > 0.4 && U.y < 0.6 && U.x > 0.5) {\n                \n                    if(U.y > 0.45 && U.y < 0.5495) {\n                        col = vec3(1.);\n                    } else {\n                        float x = (U.y - 0.4) / 0.2;\n                        \n                        if(U.y < 0.5) {\n                            x = 1.0 - x;\n                        }\n                        col = vec3(smoothstep(0.0, 1.0, x));\n                    }           \n                    \n                } else if(i != (n-1) && U.y > b && U.y < (b + bD)) {\n                    float x = (U.y - b) / bD;\n                        \n                    if(U.y < (b + bD*0.5)) {\n                        x = 1.0 - x;\n                    }\n                    col = vec3(x);\n                } else if(i != (n-1) && U.y > t && U.y < (t + tD)) {\n                    float x = (U.y - t) / tD;\n                        \n                    if(U.y < (t + 0.5*tD)) {\n                        x = (1.0 - x);\n                    }\n                    col = vec3(x);\n                \n                } else {\n                    col = vec3(1.);\n                }\n\n            }\n        } \n            \n        if(U.x < 0.5) {\n            U.x *= 2.0;\n        } else {\n            U.x = (U.x - 0.5) * 2.0;\n            U.x = 1.0 - U.x;\n        }\n        \n        if(U.y < 0.5) {\n            U.y *= 2.0;\n        } else {\n            U.y = (U.y - 0.5) * 2.0;\n        }\n        \n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}