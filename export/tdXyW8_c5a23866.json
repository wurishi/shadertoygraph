{"ver":"0.1","info":{"id":"tdXyW8","date":"1584640216","viewed":103,"name":"atry","username":"singoltone","description":"simple try","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["try"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st) \n{\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec2 Tile(vec2 uv, float zoom)\n{\n    uv *= zoom;\n    return fract(uv)-.5;\n}\n\nvec2 Tile2(vec2 _st, float zoom)\n{\n    _st *= zoom;\n\n    float choice = 0.;\n    float ret = 0.;\n\n    choice = sin(iTime*10.);\n    ret = cos(iTime);\n\n    if (choice > 0.)\n    {\n        if ( mod(_st.x, 2.0) < 1.)\n            _st.y += sin(iTime*1.5);\n        else\n            _st.y -= sin(iTime*1.5); \n    }\n\telse\n    {\n        if ( mod(_st.y, 2.0) < 10.)\n            _st.x += sin(iTime);\n        else\n            _st.x -= sin(iTime); \n    }     \n    \n    if (ret > 0.)\n    \treturn fract(_st)*sin(iTime*20.);\n    else\n        return floor(_st)*sin(iTime*20.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\tuv *= 20000.;\n    vec2 uvT = uv * 20.;\n    vec2 uvO = uv;\n\tvec2 uvP = uv + uvT;\n    \n    float ret = 0.;\n    ret = sin(iTime*2.)-cos(iTime*2.);\n\tif (ret < 0.2)\n    {\n        uv = uvP;\n        uv = abs(uv);\n    }\n    else if (ret > 0.2 && ret < 0.5)\n    {\n        uv = uvT-(sin(iTime)+20.);\n    }\n    else if (ret > 0.5 && ret < 0.8)\n    {\n        uv = uvO * uvP * random(uvP)+20.;\n    }\n    \n    uv += uvT;\n    uv -= uvT;\n    \n    uv = abs(uv);\n\n    vec2 uv_int = floor(uv);\n    vec2 uv_fract = 1.-fract(uv);\n    uv = Tile2(vec2(random(uv_fract)), uv_int.y*uv_int.x);\n    \n    float color = smoothstep(uv.x-0.1,uv.x,uv.y)*\n                smoothstep(uv.x,uv.x,uv.y);\n    \n    float color2 = step(uv.x-0.1,uv.y)*\n                step(uv.x,uv.y);\n    \n    fragColor = vec4(vec3(1.- color2), 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}