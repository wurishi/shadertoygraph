{"ver":"0.1","info":{"id":"mdt3W4","date":"1677286714","viewed":170,"name":"Particles dance","username":"Ignitron","description":"dance dance","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define resolution iResolution\n#define so abs(sin(time*10.2) + cos(time*3.4)) * 0.5\n#define st abs(sin(time*5.2) + abs(cos(time*1.4))) * 0.5\n\nfloat det=.001, br=0., ct = 0., cs = 0., cbs = 0., cls = 0., cld = 0., clf = 0.;\nvec3 pos, sphpos;\nmat3 lookat(vec3 dir, vec3 up) {\n  vec3 rt=normalize(cross(dir,up));\n  return mat3(rt,cross(rt,dir),dir);\n}\nvec3 path(float t) {\n  return vec3(sin(t+cos(t)*.1)*.2,cos(t*.2),t);\n}\nmat2 rot(float a) {\n  float s=sin(a);\n  float c=cos(a);\n  return mat2(c,s,-s,c);\n}\n\nfloat tt(vec3 pp, bool dualRot) {\n\n  pp.x+=sin(ct*.5);\n  pp.y+=sin(ct*.3);\n  pp*=cs;\n  \n  pp.xy*=rot(pp.z*2.);\n  pp.xz*=rot(ct*2.);\n  pp.yz*=rot(ct);\n  \n  if(dualRot)\n  {\n      pp.xy*=rot(pp.x*2.);\n      pp.xz*=rot(pp.z*2.);\n      pp.yz*=rot(pp.y*2.);\n  }\n\n  float br2=length(pp)-cbs;\n  \n  br2=min(br2,length(pp.xy)+cld);\n  br2=min(br2,length(pp.xz)+cld);\n  br2=min(br2,length(pp.yz)+cld);\n  \n  br2=min(br2,length(pp.yy)+clf);\n  br2=min(br2,length(pp.zz)+clf);\n  br2=min(br2,length(pp.xx)+clf);\n  \n  br2=max(br2,length(pp)-cls);\n  \n  br=min(br2,br);\n  float d=br2;\n  return d;\n}\n\nstruct Information\n{\n    float d;\n    int i;\n};\n\nInformation de(vec3 p) {\n  br=1000.;\n  vec3 pp=p-sphpos;\n  \n  float result, co;\n  \n  ct = iTime + abs(sin(iTime*0.2) + cos(iTime*.4)) + 2.25;\n  cs = 1.0;\n  cbs = 0.15;\n  cls = 0.77;\n  cld = .007;\n  clf = .02;\n  co=tt(pp, true);\n  \n  float pos = sin(iTime*1.1);\n  pp = vec3(pp.x + 0.2*pos, pp.y - 0.2*pos, pp.z - 0.4*pos);\n  ct = iTime + abs(sin(iTime*0.5)) + 2.55;\n  cs = 1.2;\n  cbs = 0.075;\n  cls = 0.37;\n  cld = .01;\n  clf = .015;\n  result=min(tt(pp, true), co);\n  int index = result < co ? 1 : 0;\n    \n  pos = sin(iTime*.7);\n  pp = vec3(pp.x - 0.15*pos, pp.y + 0.15*pos, pp.z + 0.3*pos);\n  ct = iTime + abs(sin(iTime*0.2)) + 2.55;\n  cs = 1.2;\n  cbs = 0.05;\n  cls = 0.34;\n  cld = .01;\n  clf = .015;\n  co=min(tt(pp, true), result);\n  index = co < result ? 1 : index;\n    \n  pos = sin(iTime*.5);\n  pp = vec3(pp.x - .2*pos, pp.y - 0.1*pos, pp.z + 0.2*pos);\n  ct = iTime + abs(sin(iTime*0.7)) + 2.55;\n  cs = 1.2;\n  cbs = 0.05;\n  cls = 0.27;\n  cld = .01;\n  clf = .015;\n  result=min(tt(pp, true), co);\n  index = result < co ? 1 : index;\n  \n  pp = vec3(pp.x - 0.2*pos, pp.y -0.1 *pos , pp.z);\n  ct = iTime-3.;\n  cs = 1.8;\n  cbs = 0.25;\n  cls = 0.67;\n  cld = .007;\n  clf = .5;\n  co=min(tt(pp, false), result);\n  index = co < result ? 2 : index;\n  \n  Information info;\n  info.d = co*(index==2?.2:.7);;\n  info.i = index;\n  \n  return info;\n}\n\nvec3 march(vec3 from, vec3 dir) {\n  vec2 uv=vec2(atan(dir.x,dir.y)+time*.5,length(dir.xy)+sin(time*.2));\n  vec3 col=vec3(0,0,0);\n  float d=0.,td=0.,g=0., ltd=0.;\n  Information info;\n  vec3 p=from;\n  int i;\n  for (int it=0;it<100; it++) {\n    p+=dir*d;\n    info=de(p);\n    d=info.d;\n    if (d<det)\n    {\n        i = info.i;\n        break;\n    }\n    if(td>5.)\n    {\n        i = 4;\n        break;\n    }\n        \n    td+=d;\n    g+=.1/(br*40.0);\n  }\n\n  const vec3 nC = vec3(0.0,0.0,0.0);\n  const vec3 nH = vec3(0.5,0.25,0.5);\n  const vec3 c0 = vec3(0.25,0.45,0.75);\n  const vec3 c1 = vec3(0.65,0.55,0.25);\n  const vec3 c2 = vec3(0.75,0.25,0.25);\n  const vec3 c4 = vec3(2.0,1.0,2.0);\n  vec3 color = (i==0?c0:nC)+(i==1?c1:nC)+(i==2?c2:nC);\n  \n  vec3 glo=g*(.5+so)*.15*(i==4?c4:nH) + color*(1.+.5*st);\n  glo.rb*=rot(dir.y*1.5);\n  col+=glo;\n  col*=vec3(.8,.7,.7);\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y);\n  uv -= 0.5;\n  uv /= vec2(resolution.y / resolution.x, 1);\n  float t=time;\n  vec3 from= path(t);\n  sphpos=path(t+.5);\n  from.z-=2.2;\n  vec3 fw=normalize(path(t+.5)-(from));\n  vec3 up=vec3(fw.x*2.,1.,0.);\n  vec3 dir=normalize(vec3(uv,1.));\n  dir=lookat(fw,up)*dir;\n  float timeFactor = 2.0f;\n  vec3 col=march(from,dir);\n  fragColor =vec4(col,1.);\n}\n\n","name":"Image","description":"","type":"image"}]}