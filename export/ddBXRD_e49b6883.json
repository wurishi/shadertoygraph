{"ver":"0.1","info":{"id":"ddBXRD","date":"1669983711","viewed":152,"name":"Ground RayMarching Study","username":"pdcxs","description":"Just for study","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3dgroundraymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPSILON 0.001\n#define MAX_DIST 200.\n\nvec2 fixUV(vec2 uv) {\n    return (2. * uv - iResolution.xy) / iResolution.x;\n}\n\nfloat ground(vec2 p) {\n    return sin(p.x) * sin(p.y);\n}\n\nfloat rayMarch(vec3 ro, vec3 rd) {\n    float t = 0.;\n    for (int i = 0; i < 128; i++) {\n        vec3 p = ro + t * rd;\n        float h = p.y - ground(p.xz);\n        if (abs(h) < EPSILON || t > MAX_DIST)\n            break;\n        t += h;\n    }\n    return t;\n}\n\nvec3 calcNorm(vec3 p) {\n    vec2 epsilon = vec2(1e-5, 0);\n    return normalize(vec3(\n        ground(p.xz + epsilon.xy) - ground(p.xz - epsilon.xy),\n        2.0 * epsilon.x,\n        ground(p.xz + epsilon.yx) - ground(p.xz - epsilon.yx)\n    ));\n}\n\nmat3 setCamera(vec3 ro, vec3 target, float cr) {\n    vec3 z = normalize(target - ro);\n    vec3 up = normalize(vec3(sin(cr), cos(cr), 0));\n    vec3 x = cross(z, up);\n    vec3 y = cross(x, z);\n    return mat3(x, y, z);\n}\n\nvec3 render(vec2 uv) {\n    vec3 col = vec3(0);\n\n    float an = 0.2 * iTime;\n    float r = 10.;\n    vec3 ro = vec3(r * sin(an), 5, r * cos(an));\n    vec3 target = vec3(0, 0, 0);\n    mat3 cam = setCamera(ro, target, 0.);\n\n    float fl = 1.;\n    vec3 rd = normalize(cam * vec3(uv, fl));\n\n    float t = rayMarch(ro, rd);\n\n    if (t < MAX_DIST) {\n        vec3 p = ro + t * rd;\n        vec3 n = calcNorm(p);\n        vec3 difColor = vec3(0.9, 0.8, 0.);\n        col = difColor * dot(n, vec3(0, 1, 0));\n    }\n\n    return sqrt(col);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fixUV(fragCoord);\n    vec3 col = render(uv);\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}