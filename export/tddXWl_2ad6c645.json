{"ver":"0.1","info":{"id":"tddXWl","date":"1573170051","viewed":670,"name":"Vogel disc","username":"Wunkolo","description":"Vogel's method of placing approximately evenly-spaced points equidistantly across the surface of a circle","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265f;\nconst float GoldenAngle = PI * (3.0 - sqrt(5.0));\nconst float PointRadius = 2.0 + 2.0/3.0;\n\nconst vec2 DropShadow = vec2(-0.25, 0.75);\n\nvec2 Vogel(uint sampleIndex, uint samplesCount, float Offset)\n{\n  float r = sqrt(float(sampleIndex) + 0.5f) / sqrt(float(samplesCount));\n  float theta = float(sampleIndex) * GoldenAngle + Offset;\n  return r * vec2(cos(theta), sin(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float Size = iResolution.y / 2.0;\n    vec2 UV = fragCoord/iResolution.xy;   \n    vec3 Color = mix(vec3(0.75), vec3(0.5), distance(UV,vec2(0.5)));\n    \n    Color = mix(\n        Color,vec3(0.0),\n        smoothstep(PointRadius*2.0, -PointRadius*2.0, abs(Size * 0.90 - distance(fragCoord + DropShadow, iResolution.xy/2.0)))\n    );\n    Color = mix(\n        Color,vec3(1.0),\n        smoothstep(PointRadius*2.0, -PointRadius*2.0, abs(Size * 0.90 - distance(fragCoord, iResolution.xy/2.0)))\n    );\n    \n    UV.x *= iResolution.x / iResolution.y;\n    float Pulse = sin(iTime * 0.0125 * PI * 2.0);\n    uint Samples = uint(1024.0 * Pulse * Pulse);\n    \n    for( uint i = 0u; i < Samples; ++i )\n    {\n        float Phase = float(i) / float(Samples - 1u);\n        vec2 VogelPos =\n            iResolution.xy / 2.0\n            + Vogel(i, Samples, iTime * 0.5)\n            * Size * 0.85;\n        Color = mix(\n            Color,vec3(0.0),\n            smoothstep(PointRadius + 1.0, PointRadius - 1.0, length((fragCoord + DropShadow) - VogelPos))\n       \t);\n        Color = mix(\n            Color,vec3(1.0),\n            smoothstep(PointRadius + 1.0, PointRadius - 1.0, length(fragCoord - VogelPos))\n        );\n    }\n    \n    fragColor = vec4(Color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}