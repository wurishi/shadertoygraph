{"ver":"0.1","info":{"id":"mslXz8","date":"1668523165","viewed":193,"name":"random wave ","username":"jonasfrey","description":"random sine","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"mssXR8","parentname":"interpolated noise tutorial"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f_n_rand(vec2 o){\n    return fract(cos(o.x*3123.123+o.y*4321.234)*123.123);\n}\nfloat f_n_hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nfloat f_n_noise_smooth(vec2 o_pix_coo_nor){\n    //vec2 o_cells = vec2(10.,10.);\n    \n    //vec2 o_coo_big_mod = fract(o_pix_coo_nor*o_cells);\n    //vec2 o_coo_big_mod = smoothstep(0.,1.,fract(o_pix_coo_nor*o_cells));\n    vec2 o_coo_big_mod = smoothstep(0.,1.,fract(o_pix_coo_nor));\n    \n    vec2 o_coo_big_flo = floor(o_pix_coo_nor);\n    //float n_index = o_coo_big_flo.x + o_coo_big_flo.y * o_cells.x;\n    \n    float o_col = f_n_hash12(o_coo_big_flo);\n    float o_col_xp1 = f_n_hash12(o_coo_big_flo + vec2(1,0));\n    float o_col_mix_xp1 = mix(o_col, o_col_xp1, o_coo_big_mod.x);\n    \n    float o_col_yp1 = f_n_hash12(o_coo_big_flo+ vec2(0, 1));\n    float o_col_xp1_yp1 = f_n_hash12(o_coo_big_flo + vec2(1,1));\n    float o_col_mix_yp1_xp1_yp1 = mix(o_col_yp1, o_col_xp1_yp1, o_coo_big_mod.x);\n    \n    float o_col_mix = mix(o_col_mix_xp1, o_col_mix_yp1_xp1_yp1, o_coo_big_mod.y);\n    return o_col_mix;\n}\n\nfloat f_n_noise_smooth_layered(\n    vec2 o_pix_coo_nor,\n    float n_freq_start, \n    float n_layers\n){\n    float n_freq = n_freq_start;\n    float n_noise_smooth = f_n_noise_smooth(o_pix_coo_nor*n_freq);\n\n    float n_amp = 0.5; \n    float n_amp_sum = 0.0;\n    for(\n        float n_layer_nor = 0.0;\n        n_layer_nor < 1.0;\n        n_layer_nor += (1.0/n_layers)\n    ){\n        n_freq *= 2.0;\n        n_noise_smooth += f_n_noise_smooth(o_pix_coo_nor*n_freq)*n_amp;\n        n_amp_sum += n_amp;\n        n_amp*=0.5;\n    }\n    \n    n_noise_smooth /= 1.0+n_amp_sum;\n    \n    return n_noise_smooth;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_pix_coo_nor = (fragCoord.xy - iResolution.xy*0.5) / iResolution.y;\n    \n    float n_noise_smooth_layered = f_n_noise_smooth_layered(\n        //o_pix_coo_nor+vec2(0.0, iTime*2.0),\n        vec2(o_pix_coo_nor.x+iTime, 0.0),\n        2.0,\n        3.0\n    );\n    if(o_pix_coo_nor.x>0.0){\n    n_noise_smooth_layered = f_n_noise_smooth_layered(\n        o_pix_coo_nor+vec2(0.0, iTime*2.0),\n        //vec2(o_pix_coo_nor.x+iTime, 0.0),\n        2.0,\n        3.0\n    );\n    }\n    \n    float n_tau = 6.2831;\n    float n_rand = 1.0-n_noise_smooth_layered;\n    float n_freq = n_rand*2.0;\n    float n_amp = 0.5+n_rand;\n    float n_y = sin(n_freq)*(n_amp/2.0)*(n_amp/2.0);\n    \n    float n_dist = abs(o_pix_coo_nor.y - n_y+n_amp*0.1); \n    \n    float n_dist2 = abs(o_pix_coo_nor.y - n_y+n_amp*0.1); \n    fragColor = vec4(1.-sqrt(n_dist));\n}","name":"Image","description":"","type":"image"}]}