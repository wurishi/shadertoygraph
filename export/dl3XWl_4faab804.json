{"ver":"0.1","info":{"id":"dl3XWl","date":"1685856377","viewed":41,"name":"Heavenly Astral Pattern","username":"jesubohr","description":"A pattern composed by octagons and circles to create an astral-like animation.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pattern","astral","greenblue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Figure1(in vec2 p, in float r) {\n    const vec3 k = vec3(-0.9238795325, 0.3826834323, 0.4142135623 );\n    p = abs(p);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nfloat Figure2(in vec2 p, in float r) {\n    return length(p) - r;\n}\n\nvec3 palette(float t) {\n    vec3 a = vec3(0.14, 0.73, 0.49);\n    vec3 b = vec3(0.08, 0.37, 0.46);\n    vec3 c = vec3(1.2, 0.5, 0.16);\n    vec3 d = vec3(5.25, 5.5, 5.9);\n    \n    return a + b * sin(10.28318 * (c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 2.0; i++) {\n        // Fractalize the figure\n        uv = fract(uv * 2.0) - 0.5;\n\n        // Sine Distance\n        float fig1 = Figure1(uv, 0.5);\n        float fig2 = Figure2(uv, 1.0) * exp(-length(uv0));\n\n        // Color Palette\n        vec3 color = palette(length(uv0) + i*0.25 + iTime*0.5);\n\n        fig1 = sin(fig1 * 10.0 + iTime*2.0) / 10.0;\n        fig1 = abs(fig1);\n        fig1 = pow(0.025 / fig1, 1.25);\n        \n        fig2 = sin(fig2 * 8.0 + iTime) / 8.0;\n        fig2 = abs(fig2);\n        fig2 = pow(0.015 / fig2, 1.5);\n\n        finalColor += color * (fig1 + fig2);\n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}