{"ver":"0.1","info":{"id":"Mlc3Ds","date":"1472400414","viewed":416,"name":"Beer-Lambert Law","username":"nlguillemot","description":"Hold left click to play with the Beer-Lambert law. Mouse X determines length of medium, Mouse Y determines extinction factor of medium. See how the amount of light transmitting through the medium falls off exponentially.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beerlambertlaw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float BeerLambert(float sigma_t, float d)\n{\n    return exp(-sigma_t * d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // compute length of medium from mouse X\n    float d = iMouse.x / iResolution.x * 5.0;\n    // compute extinction factor from mouse Y\n\tfloat sigma_t = iMouse.y / iResolution.y * 20.0;\n    \n    // default input (for shadertoy preview)\n    if (iMouse.xy == vec2(0.0)) {\n        d = 2.0;\n        sigma_t = 5.0;\n    }\n    \n    // how far the current pixel has traveled in the medium\n    float x = fragCoord.x / iResolution.x * d;\n    // compute the extinction function for this pixel's distance in the medium\n    float T = BeerLambert(sigma_t, x);\n    \n    // convert to a color\n    vec4 color = vec4(vec3(T),1.0);\n    // gamma-correct it\n    color.rgb = pow(color.rgb, vec3(1.0/2.2));\n    \n    // display color\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}