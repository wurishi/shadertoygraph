{"ver":"0.1","info":{"id":"ctdyWs","date":"1699904804","viewed":59,"name":"Jimbo Carowsky","username":"TooMuchBasil","description":"gaga gougou","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float sphereRad = 0.3;\nconst vec2 sphereCenter = vec2(0.);\nconst float sphereThikness = 0.05;\nvec3 universeSize = vec3(1.,1.,1.);\nmat3 transformMatrix = mat3(\n                                1.01,0.,0.,\n                                0.,1.01,0.,\n                                0.,0.,1.\n                            );\nmat3 universeMatrix = mat3(\n                                1.,0.,0.,\n                                0.,1.,0.,\n                                0.02,0.13,1.\n                            );\nfloat speed = 0.1*113./355.;\n\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.0, 0.1, 0.2);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat rect( in vec2 pos, in vec2 dims )\n{\n    vec2 dist = abs(pos)-dims;\n    return length(max(dist,0.0)) + min(max(dist.x,dist.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 uv = vec3(1.0);\n    uv.xy = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    vec3 color = vec3(0.);\n\n    for (float i = 1.; i <16.; i++) {\n    // for (float i = 1.; i <3.; i++) {\n        // universeMatrix[0].xy = vec2(cos(speed * iTime + i*0.3),-sin(speed * iTime + i*0.3));\n        // universeMatrix[1].xy = vec2(sin(speed * iTime + i*0.3),cos(speed * iTime + i*0.3));\n        universeMatrix[0].xy = vec2(cos(speed * iTime),-sin(speed * iTime));\n        universeMatrix[1].xy = vec2(sin(speed * iTime),cos(speed * iTime));\n\n        // universeMatrix[2].xy = iTime*vec2(0.0026, 0.01087);\n\n        // vec2 mouseUV = 2. * (iMouse.xy*2.0-iResolution.xy)/iResolution.y;\n        // // universeMatrix[0].y = mouseUV.x;\n        // // universeMatrix[1].x = mouseUV.y;\n        // universeMatrix[0].z = mouseUV.x;\n        // universeMatrix[1].z = mouseUV.y;\n\n        // universeSize = universeMatrix * uv;\n        // universeSize = universeSize/universeSize.z;\n\n        uv = universeMatrix * uv;\n        uv = uv/uv.z;\n\n        float d = length(uv.xy);\n        // uv.xy = fract(uv.xy);\n        // uv.xy = mod(uv.xy,uv.xy);\n        uv.xy = mod(uv.xy,universeSize.xy);\n        transformMatrix[2].x = -0.5 + 0.1*cos(iTime*1.);\n        transformMatrix[2].y = -0.5 + 0.1*sin(iTime*1.);\n        // transformMatrix[0].z = i*0.1;\n        // vec3 space = transformMatrix*uv;\n        vec3 space = universeMatrix*transformMatrix*uv;\n        space = space/space.z;\n        // float col = sin(5.*(distance(space.xy,sphereCenter)+iTime*0.42));\n        // float col = abs(distance(space.xy,sphereCenter)-sphereRad);\n        float col = rect(space.xy,vec2(0.1));\n        col = 0.01/sin(col);\n        color += col*palette(d+iTime*0.1+i*exp(-i*0.3)*0.3);\n        // color = uv;\n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}