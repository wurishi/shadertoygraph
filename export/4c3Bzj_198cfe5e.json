{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float hash21(vec2 p) {\n    p = fract(p*vec2(234.34, 435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    uv *= 10.0;\n    uv.y -= iTime ;\n    \n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    \n    float n = hash21(id);\n\n    vec3 col = vec3(0.);\n    \n    float mask = 0.0;\n    \n    float checker = mod(id.x + id.y, 2.0);\n    \n    if (n > 0.5) {\n       gv.x *= -1.0;\n    }\n    \n    //vec2 cUv = gv-sign(gv.x+gv.y+0.001)*0.5;\n    //float ang = atan(cUv.x, cUv.y);\n    \n    mask = smoothstep(0.01, -0.01, abs(abs(gv.x - gv.y)-0.5)-0.1);\n    //mask *= round(sin(atan(-gv.x, gv.y) * 2.0));\n    //mask += sin(iTime+checker*ang*1.0)*mask;\n    \n    float v = 1.0;\n    if (checker == 0.0) v = -1.0;\n    \n    col += mask * vec3(0.7, 0.8, 1.0);\n    \n    col += sin(atan(v*gv.x, v*gv.y) + iTime) * mask;\n    \n    \n    if (n > 0.6) {\n        col += smoothstep(0.01, -0.01, length(gv)-(sin(iTime + sin(uv.y + 3.0)) * 0.125 + 0.125)) * (sin(iTime + sin(uv.y + 3.0)) * checker * 0.5 + 0.5);\n    }\n    \n    //if (gv.x > 0.45 || gv.y > 0.45) col = vec3(1.0, 0.0, 0.0);\n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4c3Bzj","date":"1734366931","viewed":38,"name":"asdasdasdsadgggffg","username":"noxfy","description":"sadasdasd","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["asdasd"],"hasliked":0,"parentid":"","parentname":""}}