{"ver":"0.1","info":{"id":"3s2XDK","date":"1554973682","viewed":748,"name":"HelloBy8Observer8","username":"8Observer8","description":"First letters","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["helloworld"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Background Color\n    vec3 backgroundColor = vec3(1, 0.964, 0.803);\n\n    // Letter Color\n    vec3 letterColor = vec3(0.576, 0.6, 0.239);\n    \n    // Result Color\n    vec3 resultColor = backgroundColor;\n\n    // Vertical Line\n    float vertLinePosX = 0.05;\n    float vertLinePosY = 0.25;\n    float vertLineLength = 0.5;\n    float vertLineThickness = 0.05;\n    float letterWidth = 0.12;\n    \n    // Horizontal Line\n    float horLinePosX = 0.5;\n    const float horLineOrigPosY = 0.45;\n    float horLinePosY = horLineOrigPosY;\n    float horLineLength = 0.5;\n    float horLineThickness = letterWidth - vertLineThickness;\n    \n    // H\n    // Vertical Lines\n    if (vertLinePosX < uv.x && uv.x < vertLinePosX + vertLineThickness &&\n        vertLinePosY < uv.y && uv.y < vertLinePosY + vertLineLength)\n    {\n        resultColor = letterColor;\n    }\n    float startPos = vertLinePosX;\n    vertLinePosX += letterWidth;\n    if (vertLinePosX < uv.x && uv.x < vertLinePosX + vertLineThickness &&\n        vertLinePosY < uv.y && uv.y < vertLinePosY + vertLineLength)\n    {\n        resultColor = letterColor;\n    }\n    // Horizontal Line\n    horLinePosX = startPos + vertLineThickness;\n    if (horLinePosX < uv.x && uv.x < horLinePosX + horLineThickness &&\n        horLinePosY < uv.y && uv.y < horLinePosY + horLineThickness)\n    {\n        resultColor = letterColor;\n    }\n    \n    // E\n    // Vertical Line\n    vertLinePosX += 2.0 * vertLineThickness;\n    if (vertLinePosX < uv.x && uv.x < vertLinePosX + vertLineThickness &&\n        vertLinePosY < uv.y && uv.y < vertLinePosY + vertLineLength)\n    {\n        resultColor = letterColor;\n    }\n    // Horizontal Lines\n    horLinePosX = vertLinePosX + vertLineThickness;\n    horLinePosY = vertLinePosY + vertLineLength - horLineThickness;\n    if (horLinePosX < uv.x && uv.x < horLinePosX + horLineThickness &&\n        horLinePosY < uv.y && uv.y < horLinePosY + horLineThickness)\n    {\n        resultColor = letterColor;\n    }\n    horLinePosY = horLineOrigPosY;\n    if (horLinePosX < uv.x && uv.x < horLinePosX + horLineThickness &&\n        horLinePosY < uv.y && uv.y < horLinePosY + horLineThickness)\n    {\n        resultColor = letterColor;\n    }\n    horLinePosY = vertLinePosY;\n    if (horLinePosX < uv.x && uv.x < horLinePosX + horLineThickness &&\n        horLinePosY < uv.y && uv.y < horLinePosY + horLineThickness)\n    {\n        resultColor = letterColor;\n    }\n    \n    // L\n    // Vertical Line\n    vertLinePosX += letterWidth + vertLineThickness;\n    if (vertLinePosX < uv.x && uv.x < vertLinePosX + vertLineThickness &&\n        vertLinePosY < uv.y && uv.y < vertLinePosY + vertLineLength)\n    {\n        resultColor = letterColor;\n    }\n    horLinePosX = vertLinePosX + vertLineThickness;\n    horLinePosY = vertLinePosY;\n    if (horLinePosX < uv.x && uv.x < horLinePosX + horLineThickness &&\n        horLinePosY < uv.y && uv.y < horLinePosY + horLineThickness)\n    {\n        resultColor = letterColor;\n    }\n\n    // L\n    // Vertical Line\n    vertLinePosX += letterWidth + vertLineThickness;\n    if (vertLinePosX < uv.x && uv.x < vertLinePosX + vertLineThickness &&\n        vertLinePosY < uv.y && uv.y < vertLinePosY + vertLineLength)\n    {\n        resultColor = letterColor;\n    }\n    horLinePosX = vertLinePosX + vertLineThickness;\n    horLinePosY = vertLinePosY;\n    if (horLinePosX < uv.x && uv.x < horLinePosX + horLineThickness &&\n        horLinePosY < uv.y && uv.y < horLinePosY + horLineThickness)\n    {\n        resultColor = letterColor;\n    }\n    \n    // O\n    // Vertical Line\n    vertLinePosX += letterWidth + vertLineThickness;\n    if (vertLinePosX < uv.x && uv.x < vertLinePosX + vertLineThickness &&\n        vertLinePosY < uv.y && uv.y < vertLinePosY + vertLineLength)\n    {\n        resultColor = letterColor;\n    }\n    // Horizontal Lines\n    horLinePosX = vertLinePosX + vertLineThickness;\n    horLinePosY = vertLinePosY + vertLineLength - horLineThickness;\n    if (horLinePosX < uv.x && uv.x < horLinePosX + horLineThickness &&\n        horLinePosY < uv.y && uv.y < horLinePosY + horLineThickness)\n    {\n        resultColor = letterColor;\n    }\n    horLinePosY = vertLinePosY;\n    if (horLinePosX < uv.x && uv.x < horLinePosX + horLineThickness &&\n        horLinePosY < uv.y && uv.y < horLinePosY + horLineThickness)\n    {\n        resultColor = letterColor;\n    }\n    // Vertical Line\n    vertLinePosX += letterWidth;\n    if (vertLinePosX < uv.x && uv.x < vertLinePosX + vertLineThickness &&\n        vertLinePosY < uv.y && uv.y < vertLinePosY + vertLineLength)\n    {\n        resultColor = letterColor;\n    }\n\n    // Output to screen\n    fragColor = vec4(resultColor,1.0);\n}","name":"Image","description":"","type":"image"}]}