{"ver":"0.1","info":{"id":"MXl3RN","date":"1707226630","viewed":64,"name":"Simple Sunset with tiling","username":"GreenPONY","description":"hello, shadertoy!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","sunset","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 colorA = vec3(0.0,0.0,1.10);\nvec3 colorB = vec3(1.000,0.971,0.012);\n\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n\nfloat snoise(vec2 v) {\n    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\n//  Function from IÃ±igo Quiles\n//  www.iquilezles.org/www/articles/functions/functions.htm\nfloat pcurve( float x, float a, float b ){\n    float k = pow(a+b,a+b) / (pow(a,a)*pow(b,b));\n    return k * pow( x, a ) * pow( 1.0-x, b );\n}\n\n// https://www.shadertoy.com/view/NdKyz1\nvec2 get_waves(vec2 uv) {\n    float X = uv.x*25.+iTime;\n    float Y = uv.y*25.+iTime;\n    uv.y += cos(X+Y)*0.05*cos(Y);\n    uv.x += sin(X-Y)*0.05*sin(Y);\n    \n    return uv;\n}\n\n\nvec2 get_see_tile(vec2 st) {\n    float num_of_peaks = 2.;\n\tfloat peak_width = 0.25;\n    \n    vec2 res;\n    \n    res.x = st.x;\n\n\tres.y = mod(pow(st.y, peak_width * num_of_peaks)*num_of_peaks,1.);\n\n\tfloat mask = 1. - step(peak_width, st.y);\n    \n\tfloat first_peak = (1.- res.y * mask) * mask;\n\n    res.y = mix(res.y, first_peak, mask);\n    \n    vec2 waves = get_waves(res);\n    \n    res = mix(res, waves, mask);\n    \n\treturn res;\n}\n\nfloat get_circle_mask(vec2 st, vec2 p) {\n    float len = length(st - p);\n    \n    return smoothstep(0.052, 0.026, len);\n}\n\nfloat get_sunset_mask(vec2 st) {\n\tfloat sunset = pcurve(st.x, 0.944, 0.360);\n    \n    float circle = get_circle_mask(st, vec2(0.730,0.060));\n    \n    return circle + smoothstep(sunset, sunset + -0.804, 1. - st.y);\n}\n\n\n// https://thebookofshaders.com/edit.php#11/lava-lamp.frag\nfloat get_clouds(vec2 st) {\n    vec2 pos = st*3.;\n\n    float DF = 0.0;\n\n    // Add a random position\n    float a = 0.0;\n    vec2 vel = vec2(iTime*-0.116);\n    DF += snoise(pos+vel)*-0.134+8.362;\n\n    // Add a random position\n    a = snoise(pos*vec2(cos(iTime*0.0118),sin(iTime*0.3))*0.01)*.1415;\n    vel = vec2(cos(a),sin(a));\n    \n    DF += snoise(pos+vel)*0.146+0.346;\n    \n    return smoothstep(.7,.75,fract(DF));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n    \n    vec2 see_tile = get_see_tile(st);\n    \n\tfloat sunset = get_sunset_mask(see_tile);\n    float clouds = get_clouds(see_tile);\n    \n    float red_mask = sunset + clouds;\n    \n    vec3 gradient;\n    gradient.r = red_mask;\n    gradient.g = clouds - 0.00;\n    gradient.b = red_mask;\n    \n    color = mix(colorA, colorB, gradient);\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}