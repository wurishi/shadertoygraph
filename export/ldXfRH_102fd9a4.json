{"ver":"0.1","info":{"id":"ldXfRH","date":"1494802559","viewed":885,"name":"uintBitsToFloat/floatBitsToUint","username":"SudoNhim","description":"These should come in handy. I never actually noticed that the buffers were 128 bits deep - there must be some cool occupancy tricks to be done with this","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["test","encoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 data = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    uint u = floatBitsToUint(data[0]);\n    uint v = floatBitsToUint(data[1]);\n\tfragColor = vec4(sin(vec2(u, v)/64.0 + vec2(0.5, -0.7)*iTime), data[2] ,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uint u = uint(fragCoord.x);\n    uint v = uint(fragCoord.y);\n    float checker = ((u & 32u) != 0u) ^^ ((v & 32u) != 0u) ? 0.8 : 0.2;\n    fragColor = vec4(uintBitsToFloat(u),uintBitsToFloat(v),checker,1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}