{"ver":"0.1","info":{"id":"4fdXzM","date":"1713735713","viewed":67,"name":"Rotate landscape texture","username":"AgateDragon","description":"Rotate whilst keeping the landscape texture the same size","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["texture","rotate","landscape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 RotateUV(vec2 uv, float rotation)\n{\n    return vec2(\n        cos(rotation) * uv.x + sin(rotation) * uv.y,\n        cos(rotation) * uv.y - sin(rotation) * uv.x\n    );\n}\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat Rectangle(in vec2 pos, in vec2 size)\n{\n    vec2 d = abs(pos) - size;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n\nvoid mainImage(out vec4 fragColour, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord;\n    \n    vec2 halfSize = iResolution.xy * 0.5;\n    \n    // Offset towards the centre, then rotate\n\tuv -= halfSize;\n    float rotationSpeed = iTime * 0.5;\n\tuv = RotateUV(uv, rotationSpeed);\n\tuv += halfSize;\n    \n    // Create rectangle rotation mask\n    vec2 pos = uv - halfSize;\n    vec2 size = halfSize;\n    float b = Rectangle(pos, size);\n    \n    // Edge smoothing\n    const float s = 0.5;\n    b = smoothstep(s, -s, b);\n    \n    // Normalised pixel coordinates (from 0 to 1)\n    uv /= iResolution.xy;\n    \n    // Get the texture colour\n    fragColour = texture(iChannel0, uv) * b;\n}","name":"Image","description":"","type":"image"}]}