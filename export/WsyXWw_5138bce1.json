{"ver":"0.1","info":{"id":"WsyXWw","date":"1574118666","viewed":64,"name":"robotj's value noise","username":"robotjatek","description":"Value noise with pseudorandom values from cosine function","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin","value"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 uv)\n{    \n    float ret = fract(abs(cos(uv.x * 242.0f + uv.y * 336.f) * 523.0));\n    return ret;\n}\n\nfloat Noise(vec2 uv)\n{\n    vec2 r = vec2(floor(uv));\n    vec2 r1 = vec2(floor(uv) + vec2(1,0));\n    vec2 r2 = vec2(floor(uv) + vec2(0,1));\n    vec2 r3 = vec2(floor(uv) + vec2(1,1));\n    \n    float c = rand(r.xy);\n    float c1 = rand(r1.xy);\n    float c2 = rand(r2.xy);\n    float c3 = rand(r3.xy);\n\n    float i = mix(c, c1, smoothstep(0.,1.,fract(uv.x)));\n    float i1 = mix(c2, c3, smoothstep(0.,1.,fract(uv.x)));\n    \n    float z = mix(i, i1, smoothstep(0.,1.,fract(uv.y)));\n    \n    return z;\n}\n\nfloat layeredNoise(vec2 uv)\n{\n    float z = 0.0;\n    z += Noise(uv * 4.0);\n    z+= Noise(uv * 8.0) * 0.5;\n    z+= Noise(uv * 16.0) * 0.25;\n    z+= Noise(uv * 32.0) * 0.125;\n    z+= Noise(uv * 64.0) * 0.0625;\n    z+= Noise(uv * 128.0) * 0.03125;\n    z *= 0.5;\n    return z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float val = layeredNoise(uv * 2.5);\n    vec3 col = vec3(val);\n    \n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}