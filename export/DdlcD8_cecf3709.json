{"ver":"0.1","info":{"id":"DdlcD8","date":"1686768837","viewed":108,"name":"sci fi Neon circles","username":"24abrama","description":"Fun experimentation with neon color scheme","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#define PI 3.1415926535\n\nconst vec3 offset = vec3(0.678,0.678,0.604);\nconst vec3 amp = vec3(-0.467, 0.571, 0.881);\nconst vec3 freq = vec3(1.448, 0.724, 1.418);\nconst vec3 phase = vec3(1.387, 0.428, 1.527);\n\nvec3 col(float x){\n  float r = -0.4671448739820992*cos(1.3868146928204168+x*6.283185307*1.5041577301999638)+0.6784073464102071;\n  float g = 0.;\n  float b = 0.;\n  return amp*sin(phase+freq*x*PI)+offset;\n}\n\n\nfloat random(float st){\n  return fract(293487.923*sin(293235.123*st));\n}\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvec2 random2(vec2 st){\n  st=  vec2(dot(st,vec2(238.231,561.23)),dot(st,vec2(-253.123,486.239)) );\n  return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n  \n}\n\nfloat noise(vec2 st){\n  vec2 i = floor(st);\n  vec2 f = fract(st);\n\n  vec2 a = random2(i);\n  vec2 b = random2(i + vec2(1.0, 0.0));\n  vec2 c = random2(i + vec2(0.0, 1.0));\n  vec2 d = random2(i + vec2(1.0, 1.0));\n  \n  vec2 u = f*f*(3.0-2.0*f);\n  \n    return 0.5+0.5*mix( mix( dot( a, f - vec2(0.0,0.0) ),\n                     dot( b, f - vec2(1.0,0.0) ), u.x),\n                mix( dot( c, f - vec2(0.0,1.0) ),\n                     dot( d, f - vec2(1.0,1.0) ), u.x), u.y);\n}\nvec3 random2(vec3 st){\n  st=  vec3(dot(st ,vec3(238.231,561.23,384.489) ),dot(st,vec3(-253.123,486.239,482.96)),dot(st,vec3(234.675,856.23,683.347)) );\n  \n  return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n  \n}\n\nfloat noise(vec3 st){\n  vec3 i = floor(st);\n  // vec3 i = floor(st*10.)/10.;\n  // i=st;\n  vec3 f = fract(st);\n\n  vec3 a = random2(i);\n  vec3 b = random2(i + vec3(1.0, 0.0,0.));\n  vec3 c = random2(i + vec3(0.0, 1.0,0.));\n  vec3 d = random2(i + vec3(1.0, 1.0,0.));\n  vec3 a2 = random2(i + vec3(0.,0.,1.));\n  vec3 b2 = random2(i + vec3(1.0, 0.0,1.));\n  vec3 c2 = random2(i + vec3(0.0, 1.0,1.));\n  vec3 d2 = random2(i + vec3(1.0, 1.0,1.));\n  \n  vec3 u = f*f*(3.0-2.0*f);\n  // vec3 u = f*f*(3.-2.*f);\n  \n  float top = mix( mix( dot( a, f - vec3(0.0,0.0,0.) ),\n                     dot( b, f - vec3(1.0,0.0,0.) ), u.x),\n                mix( dot( c, f - vec3(0.0,1.0,0.) ),\n                     dot( d, f - vec3(1.0,1.0,0.) ), u.x), u.y);\n  \n    float bottom = mix( mix( dot( a2, f - vec3(0.0,0.0,1.) ),\n                     dot( b2, f - vec3(1.0,0.0,1.) ), u.x),\n                mix( dot( c2, f - vec3(0.0,1.0,1.) ),\n                     dot( d2, f - vec3(1.0,1.0,1.) ), u.x), u.y);\n\n    return 0.5+0.5*mix(top,bottom,u.z);\n}\nfloat noise(vec2 st, float t){\n  return noise(vec3(st,t));\n}\n#define OCTAVES 7\nfloat fbm (vec2 st) {\n    // Initial values\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    //\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(st);\n        st *= 2.;\n        amplitude *= 0.8/float(i+1);\n    }\n    return value;\n}\nfloat fbm (vec3 st) {\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(st);\n        st *= 2.5;\n        amplitude *= 0.4;\n    }\n    return value;\n}\nfloat fbm (vec2 st,float t) {\n  return fbm(vec3(st,t));\n}\n\n\n\n\nfloat cnoise(float theta,float m,float seed){\n  // theta = theta<0.?2.*PI-theta:theta;\n  // theta = theta/PI*m*5.;\n  float x = 0.;\n  for(float i = 1.0;i<5.0;i+=1.0){\n    x+=sin(theta*floor(pow(m,i))+seed+iTime*((mod(i,2.0)==0.0)?1.:-1.)+random(i)*0.4)/pow(2.0234,i);\n  }\n\n  return x/2.0+0.5;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 v_uv = fragCoord/iResolution.xy;\n  vec2 uv = v_uv*2.0-1.0;\n  \n  // fragColor = vec4(col(uv.x),1.);\n  // return;\n  \n  \n  \n  uv.x*=iResolution.x/iResolution.y;\n  float t = 0.1+(sin(iTime)/2.+0.5);\n  // uv = vec2(-1.,1.)*sin(time/2.)*uv.xy+cos(t)*uv.yx;\n  \n  float z = 2.0;\n  float f = 0.05;\n  \n  \n  vec3 color = vec3(0.);\n  vec3 c1 = 0.1*f/abs(fract(1./uv.x*3.)-0.5)*vec3(1.);\n  c1 += abs(uv.x)*f/(   abs(   fract(uv.y*3./uv.x)-0.5   )    )*vec3(1.);\n\n    // c1+=vec3(0.5,0.9,0.5)*min((-0.1-uv.y)/abs(uv.x),1.5);\n\n  c1=((-0.1-uv.y)/abs(uv.x)>1.3?vec3(0.):c1);\n  c1=((uv.y)/abs(uv.x)>2.5?vec3(0.1/((uv.y)/abs(uv.x)-2.5))+vec3(random(uv)>0.98?1.:0.):c1);\n  // c1=((0.1+uv.y)/abs(uv.x)>15.?vec3(1.):c1);\n\n  c1+=vec3(0.5,1.0,0.5)*max(0.,min((-0.1-uv.y)/abs(uv.x),1.4));\n  // c1+=vec3(0.5,0.9,0.5)*min((-0.2-uv.y)/abs(uv.x),1.1);\n  f*=1.2;\n\n  \n  float d =abs(length(uv) -0.5-(cnoise(atan(uv.x,uv.y),1.7,0.)/2.+0.5)/2.0 );\n  // d+= 0.6*abs(fbm(uv*10.,time));\n  d=f/d; \n  color+=d*vec3(0.2,0.5,0.7);\n  for(int i=-3;i<4;i++){\n    f*=1.;\n    uv = (uv)*2.0;\n    d =abs(length(uv) - 0.5-(cnoise(atan(uv.x,uv.y),1.7,float(i)*23.34)/2.+0.5)/4. );\n    d=f/d; \n    color+=d*col(float(i)/3.);\n  }\n  \n  \n  // vec3 color = vec3(0.2,0.5,0.7)*d;\n  \n   fragColor = vec4(max(color,c1),1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}