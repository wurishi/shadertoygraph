{"ver":"0.1","info":{"id":"XXlcD7","date":"1726257797","viewed":60,"name":"basic loop color ball","username":"chenxianming","description":"this shade is an screen color tester and using fractal.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","colors","loop","screentester"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define R min( I.x, I.y )\n#define PI 3.1415926\n#define TAU 2. * PI\n#define T( s ) fract( iTime * s + .3 ) * PI * 4.\n#define rot( a ) mat2( cos( a ), sin( a ), -sin( a ), cos( a ) )\n\n\nfloat smin(float a, float b, float c) {\n  float d = clamp(.5 + .5 * (b - a) / c, 0., 1.);\n  return mix(b, a, d) - c * d * (1. - d);\n}\n\nfloat rep(inout vec2 u, float rep) {\n\n  float r = 6.28 / rep; // each radian\n\n  float a = round(atan(u.y, u.x) / r) * r; // aligned uv\n\n  u = vec2(dot(u, vec2(cos(a), sin(a))), dot(u, vec2(-sin(a), cos(a))));\n\n  return floor(mod((round(a / r) + rep * .5), rep)); // index\n}\n\n\nfloat s( vec3 p, vec3 o, float s ){\n    \n    return length( p ) - s * .75;\n}\n\nvec3 ref;\n\nfloat cc( vec3 p, int b ){\n    vec3 pc = p;\n    float d = .1;\n    \n    p.xz *= rot( T( .025 ) );\n    \n    for( float i = 0.; i < 3.; i++ ){\n        p.yz *= rot( T( .05 ) * i );\n        p.xy *= rot( T( .075 ) * i );\n        p.x = abs( p.x ) - i * .07;\n        p.xz *= rot( T( -.075 ) * i );\n        p.z = abs( p.z ) - i * .07;\n    }\n    \n    rep( p.yz, 2. );\n    p.y -= .05;\n    \n    ref = p;\n    \n    if( b == 0 )\n        return s( p, vec3( 0. ), .1 );\n    else \n    d = smin(\n        s( p, vec3( 0. ), abs( p.y ) * .1 ),\n        s( pc, vec3( 0. ), .6 ),\n        .3\n    );\n    \n    return d;\n}\n\nfloat cl( vec3 p ){\n    \n    // p.xz *= rot( iTime );\n    // p = reflect( p, ref );\n    p.xz *= rot( T( .025 ) );\n    \n    for( float i = 0.; i < 3.; i++ ){\n        p.yz *= rot( T( .05 ) * i );\n        p.xy *= rot( T( .075 ) * i );\n        p.x = abs( p.x ) - i * .15;\n        p.xz *= rot( T( -.075 ) * i );\n        p.z = abs( p.z ) - i * .15;\n    }\n    \n    \n    // p.xy = normalize( p.xy ); // direction to center\n\n    return length( p.xz ) - ( abs( p.y ) - cos( iTime ) ) + .1;\n}\n\nfloat cm( vec3 p ){\n    p.xy *= rot( T( .025 ) );\n    return min( \n        cc( p * .8, 0 ),\n        cl( p )\n    );\n}\n\nfloat df( vec3 p ){\n    return length( p ) - .7;\n}\n\n\nvec3 n(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * .2) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * .2));\n}\n\nfloat bg( vec2 u ){\n\n    u.x += sin( u.y - T( .025 ) ) * .5;\n    u.y += cos( u.x - T( .025 ) ) * .5;\n\n    u = mod( u\n    // + .3\n    , .6 ) - .3;\n\n    return smoothstep( 5. / R, -5. / R, length( u ) - cos( atan( u.x, u.y ) * 5. ) * .3 );\n}\n\nvec3 ac(vec3 x){\n    float a = 2.51;\n    float b = 0.03;\n    float c = 2.43;\n    float d = 0.59;\n    float e = 0.14;\n    return (x*(a*x+b))/(x*(c*x+d)+e);\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n\n    vec2 u = (V + V - I.xy) / R;\n    \n    vec3 c, p, ra, spot, ca = vec3( -.4, -.5, -1. ), o = vec3( 0., 0., -1. ), r = vec3( u, 1. );\n    \n    c = vec3( 1,3,4 ) * .1;\n    c += ( smoothstep( .7, 0., length( u * vec2( .5, 1. ) + vec2( 0., .5 ) )-.1 ) ) * .3;\n\n    ca.xy *= rot( T( .125 ) );\n\n    float t, d, i, dp, e = sqrt( 1e-5 );\n    \n    while ( i++ < 32. )\n        p = o + r * t,\n        d = df(p),\n        t += d;\n    \n        \n    if( d < 1e-3 ){\n        float co = 3., i;\n        \n        for( ; i < co; i++ ){\n            \n            ca.xy *= rot( i * PI / co );\n            vec3 h = normalize( normalize( ca ) - r );\n            \n            ra = mix(\n                ra,\n                vec3( pow(clamp(dot(n( p ), h), 0.0, 1.0), 2. ) ) * clamp( dot( n( p ), ca ), 0., 1. ) * .1,\n                clamp(dot(n( p ), h), 0.0, 1.0)\n            );\n            \n        }\n        \n        float ss = clamp( pow( dot( n( p ), ( normalize( vec3( 3.2, 2.5, .1 ) - r ) ) ), 9. ), 0., 1. );\n        \n        spot += dot( ss, ss );\n        \n        c += clamp( dot( reflect( n( p ), ra ), vec3( .1, 1., 1. ) ), 0., 1. ) - .05;\n        c += bg( reflect( ( p.xy * 2. ), ra.xy ) ) * abs( p.x ) * .05; // raymarch FE lens\n        c += spot * c * .4;\n    }\n    \n    c -= bg( u ) * ( step( 0., length(u) - .98 ) ) * .02;\n    \n    p = vec3(0);\n    i = 0.,\n    e = sqrt( 1e-2 ),\n    dp = 0.;\n    \n    \n    while( i++ < 24. )\n        p = o + r * t,\n        d = cm( p ),\n        dp = ( 1. - abs( d ) / e ),\n        c += ( dp > 0. ) ? ra * 5. * vec3( sin( T( .25 ) ), ( p.x / 2. + .5 ), cos( T( .25 ) ) ) * ( p.z / 2. + .5 ) * .1 * dp / t : vec3( 0 ),\n        t += max( abs( d ) * .55556, e * .5 );\n    \n    c = ac( c );\n    \n    i = 0.,\n    e = sqrt( 1e-5 ),\n    t = 0.,\n    dp = 0.;\n\n    while( i++ < 32. )\n        p = o + r * t,\n        d = cc( p, 1 ),\n        dp = ( 1. - abs( d ) / e ),\n        c += ( dp > 0. ) ? ref * vec3( cos( T( .25 ) ), ( p.x / 2. + .5 ), cos( T( -.25 ) ) ) * ( p.z / 2. + .5 ) * .8 * dp / t : vec3( 0 ),\n        t += max( abs( d ) * .8889, e * .8 );\n    \n    i = 0.,\n    t = 0.,\n    dp = 0.;\n      \n    while( i++ < 16. )\n        p = o + r * t,\n        d = cc( p, 0 ),\n        dp = ( 1. - abs( d ) / e ),\n        c += ( dp > 0. ) ? ref * vec3( cos( T( .25 ) ), ( p.x / 2. + .5 ), cos( T( -.25 ) ) ) * ( p.z / 2. + .5 ) * 1. * dp / t : vec3( 0 ),\n        t += max( abs( d ) * .8889, e * .8 );\n    \n    \n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}