{"ver":"0.1","info":{"id":"4sVBWt","date":"1531048784","viewed":528,"name":"perf: textureSize vs  iChannelRe","username":"FabriceNeyret2","description":"switch comments & #if.\n\n#else:\niChannelResolution[0] is slightly less costly than uniform or textureSize.\nNote textureSize is probably factored out of loop anyway.\n#if:\ntry to force evaluation in loop. Then textureSize is slightly better (why ?).","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["test","glsl","perf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    ivec2 I=ivec2(0); int k=0;\n    \n#if 1    \n    \n    for(int i=0; i<int(1e4); i++)\n        k = (int(U.x)+i)%2,\n      //O.xy += vec2(i);                           // 60   fps ->  17 ms\n      //O.xy += vec2(k);                           // 20   fps ->  50 ms\n        O.xy += iChannelResolution[k].xy;          //  6.3 fps -> 159 ms\n      //O.xy += vec2(textureSize(iChannel0,k));    //  6.7 fps -> 149 ms\n\n#else\n    \n    for(int i=0; i<int(1e5); i++)\n  //for(float i=0.; i<1e5; i++)\n       //O.xy += vec2(i);                           //  2.5 fps int loop\n       //O.xy += vec2(i);                           //  4.3 fps float loop\n       //I += ivec2(i);                             //  2.6 fps int/float loop\n       //O.xy += vec2(1);                           // 60 fps\n       //O.xy += U;                                 //  5 fps\n         O.xy += iChannelResolution[0].xy;          //  6 fps\n       //O.xy += vec2(textureSize(iChannel0,0));    //  5 fps\n       //I += textureSize(iChannel0,0);             //  5 fps\n\n    \n#endif \n    \n    O.xy+=vec2(I); \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define T(U) texelFetch(iChannel0, ivec2(U), 0)\n#define R iResolution","name":"Common","description":"","type":"common"}]}