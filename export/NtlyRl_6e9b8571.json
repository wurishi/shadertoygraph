{"ver":"0.1","info":{"id":"NtlyRl","date":"1675768547","viewed":38,"name":"Basic Colors, UV ect.","username":"EmmFloD","description":"Lesson 1 in Shaders 29/3-22","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colorsuvceiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//GLSL-Code\n//Main-function for Image Color\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    //Vektorer\n     vec4 LilaRosa = vec4(1.0,0.0,1.0,1.0);\n     vec4 Yellow = vec4(1.0,1.0,0.0,1.0);\n     vec4 Grey = vec4(0.5,0.5,0.5,1.0);\n     vec4 red = vec4(1.0,0.0,0.0,1.0);\n     vec4 green = vec4(.0,1.0,.0,1.0);\n     vec4 blue = vec4(.0,.0,1.0,1.0);\n     \n     \n     //Output to screen\n     //fragColor = Grey;\n     \n\n     //Mix(vec X, vec Y, float A) där A är Alpha\n     // A = 0.0 : 100% X\n     // A = 1.0 : 100% Y\n     \n     //OutputMix:\n     //fragColor = mix(red, blue, 0.5);\n     \n     \n     //fragcoord (klicka på Shader Inputs för att hitta vektorer)\n     //Normalize pixel coordinates (between 0-1)\n     vec2 uv = fragCoord / iResolution.xy;  \n     \n     //UV del 2:\n     vec2 uvTwo = (fragCoord - iResolution.xy*0.5) / iResolution.xy;\n     \n     //Output from black to red in X\n     fragColor = vec4(uv.x, 0.0, 0.0, 1.0);\n     //Output from black to red in Y\n    //fragColor = vec4(uv.y, 0.0, 0.0, 1.0);\n    \n    //Output av glassiga färger x-röd, y-grön\n   //  fragColor = vec4(uv.x, uv.y, 0.0, 1.0); \n     //fragColor = vec4(uv.y, 0.0, uv.x, 1.0);\n    // fragColor = vec4(uv.y, 1.0, 1.0, 1.0);\n    // fragColor = vec4(uv.y, uv.x, 1.0, 1.0);\n     fragColor = vec4(uv.y, 0.5, uv.x, 1.0);\n     \n     //Output UV del 2:\n    // fragColor = vec4(uvTwo.y, 0.0, uvTwo.x, 1.0);\n     \n     //Output Ceiling (Se hemsida länkat\n     fragColor = vec4(ceil(uvTwo.x), ceil(uvTwo.y), 0.0, 1.0);\n     \n     \n}\n\n//Compile by clicking alt+enter med markering inom måsvingarna\n","name":"Image","description":"","type":"image"}]}