{"ver":"0.1","info":{"id":"tllBWf","date":"1597970746","viewed":230,"name":"Bokeh dilate","username":"ttyy","description":"dilate with bokeh circle of confusion","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["bokeh","dilate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int useBokeh = 0; \t// 0 to use square kernel\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float spread = iMouse.x / iResolution.x; \n   \tvec2 res = iResolution.xy;\n    vec2 step = spread / res;\n    vec2 uv = fragCoord / res;        \n    vec4 sum = texture(iChannel0, uv);\n   \n    if (useBokeh == 0){\n        // 49 taps gives us better results but you could probably find settings that work with less\n        for(int y = -7; y <= 7; y++){\n            for(int x = -7; x <= 7; x++){\n                vec4 color = texture(iChannel0, uv + vec2(x, y) * step);\n               sum = max(color, sum);\n            }\n        }\n    }\n    else {\n    \n        // circle of confusion \n\n        // main square\n        for (float y=-4.; y<= 4.; y++) {\n            for (float x=-4.; x<=4.; x++) {\n                vec4 color = texture(iChannel0, uv + vec2(x, y) * step);\n                sum = max(color, sum);\n            }\n        }\n\n        // vertical\n        for (float x=-2.; x<=2.; x++) {\n            vec4 color = texture(iChannel0, uv + vec2(x, -5.) * step);\n            sum = max(color, sum);\n            color = texture(iChannel0, uv + vec2(x, 5.) * step);\n            sum = max(color, sum);\n        }\n\n        // horizontal\n        for (float y=-2.; y<=2.; y++) {\n            vec4 color = texture(iChannel0, uv + vec2( -5., y) * step);\n            sum = max(color, sum);\n            color = texture(iChannel0, uv + vec2( 5., y) * step);\n            sum = max(color, sum);\n        }\n    }\n    \n    fragColor = sum;\n\n}","name":"Image","description":"","type":"image"}]}