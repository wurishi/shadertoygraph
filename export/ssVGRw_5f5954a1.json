{"ver":"0.1","info":{"id":"ssVGRw","date":"1631310749","viewed":112,"name":"Mandlebrot set with Perturbation","username":"MrCHB1","description":"Just a shader test for the Mandelbrot set with Perturbation theory","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","fractals","perturbation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int iters = 50;\nconst int refIters = 20;\n\nvec2 Reference[refIters];\n\nvec2 cmul(vec2 a, vec2 b) {\n    return vec2(a.x*b.x-a.y*b.y,a.y*b.x+a.x*b.y);\n}\n\nvoid calcOrbits(vec2 c) {\n    vec2 z = vec2(0.0);\n    Reference[0] = z;\n    for (int i = 1; i < refIters; i++) {\n        z = cmul(z,z)+c;\n        Reference[i] = z;\n    }\n}\n\nvec2 getElement(vec2[refIters] lst, int idx) {\n    for (int i = 0; i < refIters; i++) {\n        if (i == idx) return lst[i];\n    }\n}\n\nfloat perturbMandel(vec2 c, vec2 dc) {\n    vec2 dz = vec2(0.0);\n    calcOrbits(c);\n    int rN = 0;\n    int n = 0;\n    for (int i = 0; i < iters; i++) {\n        dz = cmul(2.0*dz,getElement(Reference,rN))+cmul(dz,dz)+dc;\n        rN++;\n        vec2 z = getElement(Reference, rN)+dz;\n        if (dot(z,z) > 4.0) break;\n        if (dot(z,z) < dot(dz,dz) || rN == refIters) {\n            dz = z;\n            rN = 0;\n        }\n        n++;\n    }\n    return float(n)/float(iters);\n}\n\nfloat mandel(vec2 c) {\n    int n = 0;\n    vec2 z = vec2(0.0);\n    for (int i = 0; i < iters; i++) {\n        z = cmul(z,z)+c;\n        if (dot(z,z) > 4.0) break;\n        n++;\n    }\n    return float(n)/float(iters);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/160000000.0;\n\n    float t = (fragCoord.x<0.5*iResolution.x)?perturbMandel(vec2(-1.9,0.0), uv):mandel(uv+vec2(-1.9,0.0));\n\n    // Output to screen\n    fragColor = vec4(t,t,t,1.0);\n}","name":"Image","description":"","type":"image"}]}