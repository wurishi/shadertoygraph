{"ver":"0.1","info":{"id":"ftdSDr","date":"1638962775","viewed":94,"name":"Zoom Scroll","username":"rtsonneveld","description":"Zoom Scroll Test","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["zoom","uv","scroll"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float angle = atan(uv.y-0.5,uv.x-0.5);\n    float time = iTime*0.5;\n\n    float offset1 = mod(time, 1.0);\n    float offset2 = -1.0+(mod(time, 1.0));\n\n    float noise1 = texture(iChannel0, (uv * 1.0) + vec2(cos(angle), sin(angle)) * offset1).x;\n    float noise2 = texture(iChannel0, (uv * 1.0) + vec2(cos(angle), sin(angle)) * offset2).x;\n\n    // interpolate between two layers to create a seamless fade\n\n    float noise = mix(noise1, noise2, mod(time, 1.0));\n\n    // Output to screen\n    fragColor = vec4(noise, noise, noise, 1.0);\n}","name":"Image","description":"","type":"image"}]}