{"ver":"0.1","info":{"id":"4ctcRl","date":"1731023684","viewed":177,"name":"Segmented spiral whirlpool","username":"ChunderFPV","description":"2d sdf: https://www.shadertoy.com/view/XftcRl","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["3d","example","raymarch","vortex","whirlpool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T (iTime*5.)\n#define A(v) mat2(cos(m.v*3.1416 + vec4(0, -1.5708, 1.5708, 0)))       // rotate\n#define H(v) (cos(((v)+.5)*6.2832 + radians(vec3(60, 0, -60)))*.5+.5)  // hue\n\nfloat map(vec3 u)\n{\n    float t = T,  // speed\n          l = 4.,        // loop to reduce clipping\n          w = 40.,       // z warp size\n          s = .4,        // object size (max)\n          f = 1e20, i = 0., y, z;\n    \n    u.yz = -u.zy;\n    u.xy = vec2(atan(u.x, u.y), length(u.xy));  // polar transform\n    u.x += t/6.;                                // counter rotation\n    \n    vec3 p;\n    for (; i++<l;)\n    {\n        p = u;\n        y = round(max(p.y-i, 0.)/l)*l+i;      // segment y & skip rows\n        p.x *= y;                             // scale x with y\n        p.x -= sqrt(y*t*t*2.);                // move x\n        p.x -= round(p.x/6.2832)*6.2832;      // segment x\n        p.y -= y;                             // move y\n        p.z += sqrt(y/w)*w;                   // curve inner z down\n        z = cos(y*t/50.)*.5+.5;               // cos wave\n        p.z += z*2.;                          // wave z\n        p = abs(p);\n        f = min(f, max(p.x, max(p.y, p.z)) - s*z);  // cubes\n    }\n    \n    return f;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float l = 50.,  // loop\n          i = 0., d = i, s, r;\n    \n    vec2 R = iResolution.xy,\n         m = iMouse.z > 0. ? \n                 (iMouse.xy - R/2.)/R.y:\n                 vec2(0, -.17);\n    \n    vec3 o = vec3(0, 20, -120),  // camera\n         u = normalize(vec3(U - R/2., R.y)),  // 3d coords\n         c = vec3(0), p;\n    \n    mat2 v = A(y),  // pitch\n         h = A(x);  // yaw\n    \n    for (; i++<l;)  // raymarch\n    {\n        p = u*d + o;\n        p.yz *= v;\n        p.xz *= h;\n        \n        s = map(p);\n        r = (cos(round(length(p.xz))*T/50.)*.7 - 1.8)/2.;  // color gradient\n        c += min(s, exp(-s/.07))  // black & white\n           * H(r) * (r+2.4);      // color\n        \n        if (s < 1e-3 || d > 1e3) break;\n        d += s*.7;\n    }\n    \n    C = vec4(exp(log(c)/2.2), 1);\n}","name":"Image","description":"","type":"image"}]}