{"ver":"0.1","info":{"id":"McVGWm","date":"1712866265","viewed":35,"name":"Prak2.0 Shumkina","username":"Shumkina","description":"shum shum shum","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shumshum"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool point_in_figure (int i, float x, float y, float z, vec3 center[5], float radius[5]){\n    vec3 r = vec3(x, y, z) - center[i];\n    if (dot(r, r) <= radius[i] * radius[i]){\n        return true; //просто проверка на принадлежность к сфере\n    } return false;\n}\n\nvec3 color (int i, float x, float y, float z, vec3 center[5], float radius[5]){\n    vec3 r = vec3(x, y, z) - center[i];\n    r /= vec3(length(r)); //нормировка, чтобы цвета норм были\n    return vec3(r.x * r.z * -cos(float(-876 * i)) * 23.45 + r.z * r.y * sin(-float(256 * i)) * cos(float(19 * i)), r.y * r.y, r.z * r.x + r.y * -sin(float(8 * i)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy - vec2(0.5,0.5)) * vec2(iResolution.x/iResolution.y, 1.0); //перенос центра и представление \n    vec3 col = vec3(.3, .3, .3);\n    vec3 center[5];\n    center[0] = vec3(-0.3 + 0.1 * sin(1.4*iTime), -0.3 + 0.1*cos(2.8*iTime), 0.1*cos(1.9*iTime));\n    center[1] = vec3( -0.6 + 0.3 * sin(2.1*iTime), -0.3 + 0.1*cos(1.3*iTime), 0.1*sin(1.9*iTime));\n    center[2] = vec3(0.2 + 0.3 * sin(1.3*iTime), 0.2 + 0.2*cos(2.6*iTime), 0.2*sin(2.0*iTime));\n    center[3] = vec3(0.2 + 0.2 * sin(1.2*iTime), 0.2*cos(1.4*iTime), 0.2*sin(2.0*iTime));\n    center[4] = vec3(0.3 * sin(2.3*iTime), 0.3 + 0.1*cos(0.8*iTime), 0.2*sin(4.0*iTime));\n\n    float radius[5];\n    radius[0] = 0.11;\n    radius[1] = 0.05;\n    radius[2] = 0.1;\n    radius[3] = 0.099;\n    radius[4] = 0.12;\n\n\n    float z;\n    bool flag = false;\n    for (z = 0.5; z >= -0.5; z-=0.01){\n        int i;\n        for (i = 0; (i < 5) && flag!=true;  i++){\n            if (point_in_figure(i, uv.x, uv.y, z, center, radius)){\n                col = color(i, uv.x, uv.y, z, center, radius);\n                flag = true;\n            }\n        }\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}