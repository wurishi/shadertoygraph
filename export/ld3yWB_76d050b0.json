{"ver":"0.1","info":{"id":"ld3yWB","date":"1519997226","viewed":241,"name":"Ikeda pattern","username":"kesson","description":"Ikeda inspired test pattern, learning shaders.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["test","generative","pattern","minimal","ikeda"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author @kesson - 2018\n// Title: Ikeda inspired test pattern\n// Edit from: https://thebookofshaders.com/edit.php#10/ikeda-00.frag by @patriciogv\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat random (in float x) {\n    return fract(sin(x)*1e4);\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat randomSerie(float x, float freq, float t) {\n    return step(.8,random( floor(x*freq)-floor(t) ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\n    vec3 color = vec3(0.0);\n\n    float cols = 1.0;\n    if (floor(iTime) < 20.0) {\n        cols = floor(iTime);\n    } else {\n        cols = 20.0;\n    }\n    \n    float freq = random(floor(iTime))+abs(atan(iTime)*0.1);\n    float t = iTime*(1.0-freq)*30.;\n\n    if (fract(st.x*cols* 0.5) < 0.5){\n        t *= -random(1.0);\n    }\n\n    freq += random(floor(st.y));\n\n    float offset = .25;\n    color = vec3(randomSerie(st.y, freq*100., t+offset),\n                 randomSerie(st.y, freq*100., t),\n                 randomSerie(st.y, freq*100., t-offset));\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}