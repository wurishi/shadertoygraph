{"ver":"0.1","info":{"id":"stSBDR","date":"1652017712","viewed":207,"name":"Cone Step Map Generation","username":"raypop","description":"Texture Creation Tool for CSM\n\nhttps://github.com/Rabbid76/graphics-snippets/blob/master/documentation/normal_parallax_relief.md#cone-step-mapping","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["parallax","cone","relief","csm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Use Height Map\nfloat get_height(in vec2 coord)\n{    \n    return texelFetch( iChannel0, ivec2(coord), 0 ).x;\n}\n\nconst float max_cone_c = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy;\n    \n    int texture_size = 512; // Input Texture Size\n    int cx = texture_size; \n    int cy = texture_size;\n    float step_x = 1.0/float(cx);\n    float step_y = 1.0/float(cy);\n    float step = max(step_x,step_y);\n    int x = int(uv.x);\n    int y = int(uv.y);\n    \n    float h = get_height(uv);\n    float c        = max_cone_c;\n    float max_h    = 1.0 - h;\n    float max_dist = min(max_cone_c * max_h, 1.0);\n    \n    for( float dist = step; dist <= max_dist && c > dist / max_h; dist += step )\n    {\n        int d2 = int(round((dist*dist) / (step*step)));\n        int dy = int(round(dist / step_y));\n        float sample_h = 0.0;\n        for( int dx = 0; sample_h < 1.0 && float(dx) / float(cx) <= dist; ++ dx )\n        {\n            if ( (dx*dx + dy*dy) < d2 && dy < cy-1 )\n                dy ++;\n            do\n            {\n                int sx_n = ((cx + x - dx) % cx);\n                int sx_p = ((cx + x + dx) % cx);\n                int sy_n = ((cy + y - dy) % cy);\n                int sy_p = ((cy + y + dy) % cy);\n\n                sample_h = max( sample_h, get_height(vec2(sx_p, sy_p)) );\n                sample_h = max( sample_h, get_height(vec2(sx_p, sy_n)) );\n                sample_h = max( sample_h, get_height(vec2(sx_n, sy_p)) );\n                sample_h = max( sample_h, get_height(vec2(sx_n, sy_n)) );\n\n                dy --;\n            }\n            while ( dy > 0 && (dx*dx + dy*dy) >= d2 );\n        }\n        if ( sample_h > h )\n        {\n            float d_h = float(sample_h - h);\n            float sample_c = dist / d_h; \n            c = min(c, sample_c);\n        }\n    }\n    \n    fragColor = vec4(h, sqrt(c), 0.0, 0.0); // Final // R Channel : Height Map, G Channel : Cone Step Map    \n    \n    if (iMouse.z > 0.) { // Cone Step Map Debug : Mouse Click\n        fragColor = vec4(fragColor.y,fragColor.y,fragColor.y,0.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}