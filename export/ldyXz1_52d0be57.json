{"ver":"0.1","info":{"id":"ldyXz1","date":"1462910809","viewed":389,"name":"EuropeanCobblestoneTiles","username":"kuvkar","description":"Fan-shaped european cobblestone tiles. ","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["procedural","texture","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// reference : http://www.pavingexpert.com/setts01.htm\n// the \"formula\" is there at the end :)\n\nfloat fan(vec2 uv)\n{\n    uv *= 1.002;\n    float l = (length(uv) - 0.5);\n    vec2 corner = sign(vec2(uv.x, -abs(uv.y))) * vec2(0.5, 0.25);\n    float x = max(0.5 - length (uv - corner), .0);\n    x = smoothstep(0.0, 0.001, x);\n    l = smoothstep(0.0, 0.001, l);\n    l = max(l, x);\n    return 1.0 - clamp(l, 0.0, 1.0);\n}\n\nvec4 texProceduralTiles(vec2 uv)\n{\n    // these variables can be tweaked\n    float floors = 8.0; \n    float width = 1.2;\n    //\n    \n    float yblock = floor(uv.y * floors);\n    float y = mod(uv.y, 1.0 / floors) * floors;\n    \n    vec4 color = vec4(.9, 0.5, 0.25, 0.0);\n\n    float x = mod(uv.x * (2.0 + (yblock * width)), width) / width;\n    float xblock = mod( floor(uv.x * (2.0 + yblock * width) / width), 4.0);\n    \n    if(xblock == 1.0) color = vec4(1.0, 0.52, .2, 0.0);\n    else if(xblock == 2.0) color = vec4(1.0, 0.57, .2, 0.0);\n    else if(xblock == 3.0) color = vec4(1.0, 0.5, .2, 0.0);\n    \n    if (yblock == floors / 2. - 1.) color = vec4(0.9, 0.4, 0.4, 0.0);\n    \n    x = abs(x - 0.5);\n    y = abs(y - 0.5);\n    \n    return color * mix(1.0, 1.0 - smoothstep(0.4, .5, max(x, y)), 0.3);\n}\n\nvec4 getTexture(vec2 uv)\n{\n    uv = vec2(atan(uv.y, uv.x  ), length(uv));\n\treturn texProceduralTiles(uv);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= vec2(0.5);\n    uv.y /= iResolution.x / iResolution.y;\n    uv *= 5.5 + sin(iTime * 0.2) * 0.7;\n    vec4 color = vec4(0.0);\n    \n    vec2 uvmod = vec2(1., 0.5);\n    for (int i = 0; i < 2; ++i)\n    {\n        vec2 _uv = uv + float(i) * uvmod * 0.5;\n        _uv = (mod(_uv, uvmod) / uvmod) * uvmod;\n        _uv -= vec2(0.5, .0);\n        \n\t    vec4 c = vec4(fan(_uv));\n        c.rgb *= getTexture(_uv).rgb;\n        color += c;\n    }\n    color = clamp(color, 0.0, 1.0);\n    fragColor = mix(vec4(.7, .6, .5, .0), color, step(1.0 - color.a, 0.));\n}","name":"Image","description":"","type":"image"}]}