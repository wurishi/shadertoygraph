{"ver":"0.1","info":{"id":"dtKcWz","date":"1732031066","viewed":65,"name":"cloud map and water effect","username":"bythesword","description":"cloud map and water effect\n I forgot that the 2D water surface form who ,sorry\n If you konw who is the owner,pls tell me,i will add copy right to code and desription","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["water","surface","cloudmap"],"hasliked":0,"parentid":"dtGcRm","parentname":"CM Simple water surface nobuffer"},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// I forgot that the 2D water surface form who ,sorry\n// If you konw who is the owner,pls tell me,i will add copy right to code and desription\n\nfloat avg(vec4 color) {\n    return (color.r + color.g + color.b)/3.0;\n}\n\nvec4 CMC(  vec2 uv )\n{\n\n    if(uv.x < .0)\n        uv.x = .0;\n    if(uv.y < .0)\n        uv.y = .0;\n    if(uv.x > 1.0)\n        uv.x = 1.0;\n    if(uv.y > 1.0)\n        uv.y = 1.0;\n      \n    float step=12.0;\n\n    vec3 CM=vec3(1.0,0.50,.0);\n    vec4 C1=vec4(1.,0.5,1.0,0.5);\n    vec3 C2=vec3(5.,1.,.5);\n\n\n\n\n    float w1 = (1.0 - uv.x);\n    float w2 = (uv.x - uv.y);\n    float w3 = uv.y;\n    \n    float v = w1*CM[0] + w2*CM[1] + w3*CM[2];\n    \n    float dv = 1.0 / step;\n\n    float vv = v;\n    \n    vec4 fragColor=vec4(1,0,0,1);\n\n    if(vv <= 1.0 / 6.0 && vv >= 0.) {\n        fragColor = vec4(float(203.0 / 255.0), float(225.0 / 255.0), float(246.0 / 255.0), 1.0);\n    } else if(vv > 1.0 / 6.0 && vv <= 2.0 / 6.0) {\n        fragColor = vec4(float(160.0 / 255.0), float(210.0 / 255.0), float(234.0 / 255.0), 1.0);\n    } else if(vv > 2.0 / 6.0 && vv <= 0.5) {\n        fragColor = vec4(float(135.0 / 255.0), float(212.0 / 255.0), float(241.0 / 255.0), 1.0);\n    } else if(vv > 0.5 && vv <= 4.0 / 6.0) {\n        fragColor = vec4(float(75.0 / 255.0), float(148.0 / 255.0), float(192.0 / 255.0), 1.0);\n    } else if(vv > 4.0 / 6.0 && vv <= 5.0 / 6.0) {\n        fragColor = vec4(float(31.0 / 255.0), float(119.0 / 255.0), float(172.0 / 255.0), 1.0);\n    } else if(vv > 5.0 / 6.0 && vv <= 1.0) {\n        fragColor = vec4(float(17.0 / 255.0), float(100.0 / 255.0), float(165.0 / 255.0), 1.0);\n    } else {\n        fragColor = vec4(.0, 0, 1., 1.0);\n    }\n\n     return fragColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Flow Speed, increase to make the water flow faster.\n    float speed = 1.3150;//原值=1.0 //如果噪点小，channel 0 和 2都可以更好，可以选择0.5的值\n    \n    // Water Scale, scales the water, not the background.\n    float scale = 0.58;//噪点的尺寸\n    \n    // Water opacity, higher opacity means the water reflects more light.\n    float opacity = 0.235;//原值=0.5时，会有白色斑块\n \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy);\n    vec2 scaledUv = uv*scale;\n\n    // Water layers, layered on top of eachother to produce the reflective effect\n    // Add 0.1 to both uv vectors to avoid the layers stacking perfectly and creating a huge unnatural highlight\n    vec4 water1 = texture(iChannel0, scaledUv + iTime*0.02*speed - 0.1);\n    vec4 water2 = texture(iChannel0, scaledUv.xy + iTime*speed*vec2(-0.02, -0.02) + 0.1);\n    \n    // Water highlights\n    vec4 highlights1 = texture(iChannel2, scaledUv.xy + iTime*speed / vec2(-10, 100));\n    vec4 highlights2 = texture(iChannel2, scaledUv.xy + iTime*speed / vec2(10, 100));\n    \n    // Background image\n    //vec4 background = texture(iChannel1, vec2(uv) + avg(water1) * 0.05);     //buffer版本\n    //vec4 background = CMC(uv);                                               //无波纹\n    vec4 background = CMC(vec2(uv) + avg(water1) * 0.05);                      //有波纹 \n    \n    //vec4 background =vec4(0,0,1,1);\n    \n    // Average the colors of the water layers (convert from 1 channel to 4 channel\n    water1.rgb = vec3(avg(water1));\n    water2.rgb = vec3(avg(water2));\n    \n    // Average and smooth the colors of the highlight layers\n    highlights1.rgb = vec3(avg(highlights1)/1.5);\n    highlights2.rgb = vec3(avg(highlights2)/1.5);\n    \n    float alpha = opacity;\n    \n    if(avg(water1 + water2) > 0.3) {\n        alpha = 0.0;\n    }\n    \n    if(avg(water1 + water2 + highlights1 + highlights2) > 0.75) {\n        alpha = 5.0 * opacity;\n    }\n\n    // Output to screen\n    fragColor = (water1 + water2) * alpha + background;\n}\n","name":"Image","description":"","type":"image"}]}