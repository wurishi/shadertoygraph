{"ver":"0.1","info":{"id":"MsdBzX","date":"1526237924","viewed":505,"name":"Complex Tanh","username":"pyBlob","description":"Changes view between real complex tanh(x). Up is real component. Right is imaginary component for complex tanh (and identity for real tanh).","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal","complex","complexnumbers","tanh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 emul(vec2 a, vec2 b)\n{\n    return vec2(+a.x*b.x-a.y*b.y, +a.x*b.y+a.y*b.x);\n}\nvec2 ediv(vec2 a, vec2 b)\n{\n    return vec2(+a.x*b.x+a.y*b.y, -a.x*b.y+a.y*b.x) / dot(b, b);\n}\nvec2 eexp(vec2 z)\n{\n    vec2 ret = vec2(0);\n    vec2 pow = vec2(1, 0);\n    for (int i=0 ; i<100 ; i++)\n    {\n        if (i > 0)\n        \tpow /= float(i);\n        ret += pow;\n        pow = emul(pow, z);\n    }\n    return ret;\n}\n\n// tanh(z) = -1 + 2/(1 + e^(-2 z))\n// tanh(z) = 1 - 2/(1 + e^(2 z))\nvec2 etanh(vec2 z)\n{\n    return vec2(1,0) - ediv(vec2(2,0), vec2(1,0) + eexp(2.0 * z));\n}\nvec2 etanhmf(vec2 z, float mf)\n{\n    //if (min(abs(z.x), abs(z.y))<0.02)\n    //    return z*0.0;\n\n    return mix(\n        etanh(z),\n    \tvec2(tanh(z.x), z.y),\n        mf\n    );\n}\n\nvoid pixel(vec2 uv, out vec4 fragColor)\n{\n    float f = step(0.05, min(\n        abs(round(uv.x)-uv.x),\n        abs(round(uv.y)-uv.y)\n    ));\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime/5.0+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(mix(vec3(0), col, f), 1.0);\n\n    float grid=texture(iChannel0, uv).r;\n    fragColor = vec4(normalize(col) * grid, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-iResolution.xy/2.0)/iResolution.yy;\n    uv.yx = uv;\n    \n    uv *= 6.28;\n    float mf = smoothstep(-1.0, 1.0, -cos(iTime/20.0 * 6.14) * 1.5);\n    //mf = 1.0;\n\n    uv = etanhmf(uv, mf);\n    //uv = mix(uv, etanh(uv), mf);\n    \n    pixel(uv, fragColor);\n}","name":"Image","description":"","type":"image"}]}