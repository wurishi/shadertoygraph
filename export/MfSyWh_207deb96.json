{"ver":"0.1","info":{"id":"MfSyWh","date":"1722224381","viewed":33,"name":"GOYARD BOYZ","username":"mikegao45","description":"goyard, hex","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hex","hexagonal","goyard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\n#define PI 3.14159265359\n\n// Rotation matrix\nmat2 rotate2D(float angle) {\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\n// Function to create a hexagonal grid\nvec2 hexCoords(vec2 uv) {\n    vec2 r = vec2(1.0, sqrt(3.0));\n    vec2 h = r * 0.5;\n    vec2 a = mod(uv, r) - h;\n    vec2 b = mod(uv - h, r) - h;\n    return dot(a, a) < dot(b, b) ? a : b;\n}\n\n// Distance to line segment\nfloat sdSegment(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * h);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float time = iTime * 0.2;\n\n    // Kaleidoscopic effect\n    vec2 kaleidoscope = uv;\n    kaleidoscope *= rotate2D(time * 0.1);\n    kaleidoscope = abs(kaleidoscope);\n    kaleidoscope = rotate2D(PI / 6.0) * kaleidoscope;\n\n    // Hexagonal grid\n    vec2 hex = hexCoords(kaleidoscope * 10.0);\n    float hexPattern = length(hex);\n\n    // Dynamic line pattern\n    float linePattern = 0.0;\n    for (int i = 0; i < 6; i++) {\n        float angle = float(i) * PI / 3.0 + time;\n        vec2 dir = vec2(cos(angle), sin(angle));\n        linePattern += smoothstep(0.02, 0.01, sdSegment(hex, dir * -0.5, dir * 0.5));\n    }\n\n    // Combine patterns\n    float pattern = mix(hexPattern, linePattern, 0.5 + 0.5 * sin(time));\n\n    // Color\n    vec3 color = vec3(0.5) + 0.5 * cos(time + uv.xyx + vec3(0, 2, 4));\n    color = mix(color, 1.0 - color, pattern);\n\n    // Add some glow\n    color += 0.1 / (0.1 + hexPattern);\n\n    // Output\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}