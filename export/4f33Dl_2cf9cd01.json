{"ver":"0.1","info":{"id":"4f33Dl","date":"1712237245","viewed":69,"name":"simple kaleidoscope","username":"marud","description":"Just a simple kaleidoscope effect.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat PI = 3.14159;\nfloat COPIES = 3.5;\nfloat COPIES2 = 4.;\n\nvec2 rotate(float angle, vec2 v) {\n    mat2 r = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    return r*v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy);\n    \n    uv = rotate(iTime*0.15, uv-0.5);\n    uv = fract(uv*COPIES);\n    uv = rotate(iTime*0.23, abs(uv-0.5));\n    uv = fract(uv*COPIES2);\n    uv = rotate(iTime, abs(uv-0.5));\n    uv = uv * pow(distance(uv, rotate(iTime * 2., vec2(0.4))), 2.) * distance(uv, vec2(0.));\n\n    vec3 col = vec3(sin(uv.x * 20.*PI), sin(uv.x * 20.*PI + iTime), sin(cos(uv.x * 15.*PI + iTime)));\n    col = smoothstep(0.1, 0.9, col);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}