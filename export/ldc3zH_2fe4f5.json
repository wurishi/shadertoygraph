{"ver":"0.1","info":{"id":"ldc3zH","date":"1448058599","viewed":903,"name":"Movement game","username":"Izokina","description":"Just try to stay in circle as long as possible. Also, path functions are welcome :)","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["game","interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec3 getCircle() {\n    float r = .3 * pow(iTime + .001, -.8);\n    float t = iTime * .5;\n    vec2 pos = vec2(sin(t), cos(t)) / 2. + vec2(.5); // let's play a game\n    return vec3(pos, r * r);\n}\n\nfloat min1(const in vec2 v) {\n    return min(v.x, v.y);\n}\n\nfloat max1(const in vec2 v) {\n    return max(v.x, v.y);\n}\n\nvec2 getPos(const in vec2 xy) {\n    vec2 size = vec2(min1(iResolution.xy));\n    vec2 off = (iResolution.xy - size) / 2.;\n    return (xy - off) / size;\n}\n\nbool isInside(const in vec3 circle, const in vec2 pos) {\n    vec2 off = circle.xy - pos;\n    return dot(off, off) < circle.z;\n}\n\nfloat getIntensity(const in vec2 pos) {\n    vec3 circle = getCircle();\n    if (!isInside(circle, pos))\n        return 0.;\n    float visible = 0.;\n    vec2 mouse = getPos(iMouse.xy);\n    if (isInside(circle, mouse))\n        visible = 1.;\n    return max(visible, 1. - iTime * .3);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 pos = getPos(fragCoord);\n    fragColor = vec4(1., vec2(1. - getIntensity(pos)), 1.);\n}","name":"Image","description":"","type":"image"}]}