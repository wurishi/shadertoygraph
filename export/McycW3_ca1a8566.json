{"ver":"0.1","info":{"id":"McycW3","date":"1732497796","viewed":46,"name":"3Am idk what am doing! ","username":"ademdj12","description":"lighting with wave simulation. light is waves right!!","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["lighting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = texelFetch(iChannel0, ivec2(fragCoord), 0);\n\n    // Output to screen\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\n    this buffer is laying out the scene\n    r : tint\n    g : density\n    b : metalic\n    a : emission\n*/\n#define air        vec4(   .5, 0.005,   0., 0.)\n#define wood       vec4( 0.05,   1., 0.01, 0.)\n#define lightBulbe vec4(0.277,   0.,   0., 1.)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 colBase = air; // air\n    // cloud rect\n    for(int i = 0; i < 5; i ++){\n        for(int j = 0; j < 5; j ++){\n            vec4 rect1 = vec4(200.+55.*float(i),20.+55.*float(j),30.,30.);\n            float bounds = box(rect1, fragCoord);\n            colBase = mix(colBase, wood, bounds);\n        }\n    }\n    // light source\n    float bounds = circle(vec2(50., 120.), fragCoord, 10.);\n    colBase = mix(colBase, lightBulbe, bounds);\n    bounds = circle(vec2(620., 340.), fragCoord, 10.);\n    colBase = mix(colBase, lightBulbe, bounds);\n\n\n    fragColor = colBase;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"/*\n    lighting buffer using waves\n*/\n\n/*\n    r channel for -value\n    g channel for -speed\n*/\n\n#define sin_of_45_deg 0.70710678118 \n\n\n// radius of the brush, cant be 0.\n#define paintRadius 10.\n\n#define AUTO 1\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 base = texelFetch(iChannel1, ivec2(fragCoord.xy),0);\n    vec4 Cell = texelFetch(iChannel0, ivec2(fragCoord.xy),0); \n    float damping = 1. - base.g;\n    float s = 0.;\n    \n    for(int x = -1; x < 2; x++){\n        for(int y = -1; y < 2; y++){\n            \n            if(x == 0 && y == 0) continue;\n            \n            float neighborValue = texelFetch(\n                    iChannel0, \n                    ivec2(fragCoord.xy) + ivec2(x,y),\n                    0\n                ).r;\n            float neighborDensity = texelFetch(\n                    iChannel1, \n                    ivec2(fragCoord.xy) + ivec2(x,y),\n                    0\n                ).g;\n            if(abs(x)+abs(y) == 2) neighborValue *= sin_of_45_deg;\n            \n            s += neighborValue*(1.-neighborDensity);\n        }\n    }\n    \n    float offset = (s/8.) - Cell.r;\n    Cell.g = Cell.g + offset;\n    Cell.r = Cell.g + Cell.r;\n    \n    if(iMouse.z > 0.){\n        float d = distance(iMouse.xy, fragCoord.xy) / paintRadius < 1. ? 1. : 0.;\n        Cell += vec4(d,d,0.,0.);\n    }\n    if( base.a > 0.){\n        Cell += vec4(base.a,base.a,0,0.);\n        Cell.b = Cell.b*.7 + base.r*.3;\n    }else{\n        Cell.rg *= damping;\n    }\n    fragColor = vec4(Cell.rgb, 0.);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float box(vec4 rect , vec2 pos)\n{\n    float d = (pos.x < rect.x+rect.z && \n             pos.y < rect.y+rect.w &&\n             pos.x > rect.x &&\n             pos.y > rect.y) ? 1. : 0.;\n    return d;\n\n}\n\nfloat circle(vec2 circlePos, vec2 pos, float radius){\n    float d = distance(pos, circlePos) > radius ? 0. : 1.;\n    return d;\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"/*\n    accumulating light buffer\n*/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 lightWaveBuffer = texelFetch(iChannel0, ivec2(fragCoord.xy), 0);\n    float newLightValue = clamp(lightWaveBuffer.r,.0,10.);\n   \n    vec4 current = texelFetch(iChannel1, ivec2(fragCoord.xy), 0) ;\n    if(iFrame == 0){\n        current = lightWaveBuffer.rrbb;\n    }\n    fragColor = current+vec4(newLightValue,newLightValue,0.,0.);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"/*\n    combaining all previous\n*/\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 matBuffer = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    vec4 lightAccBuffer = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    \n    float lum = lightAccBuffer.r/(1.+lightAccBuffer.r); // tonemapped value\n    float sat = 1.-matBuffer.b;\n    float hue = matBuffer.r;\n    vec3 col = hsv2rgb(vec3(hue, sat,lum));\n    fragColor = vec4(col,1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}