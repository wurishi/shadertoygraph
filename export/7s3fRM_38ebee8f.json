{"ver":"0.1","info":{"id":"7s3fRM","date":"1656207724","viewed":89,"name":"SIGGRAPH logo","username":"YutingYang","description":"SIGGRAPH logo with some animation to change the geometry.\nShader parameters obtained from Adelta framework:\nhttps://github.com/yyuting/Adelta","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["siggraph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This is a combination of a compiler-generated GLSL program for a raymarching shader with optimized parameters to best match the SIGGRAPH logo, and manual written functions to animate the shader.\n// Optimized parameters and code generated using paper:\n// Aùõø: Autodiff for Discontinuous Programs ‚Äì Applied to Shaders \n// Github: https://github.com/yyuting/Adelta\n\n// The compiler-generated GLSL code is less readable,\n// a more readable version of the shader written in DSL can be found here:\n// https://github.com/yyuting/Adelta/blob/main/apps/render_test_finite_diff_raymarching_siggraph_cone.py\n\n// Shader program modified from \n// https://www.shadertoy.com/view/4sl3zn\n\n// Target image: SIGGRAPH logo\n// https://www.siggraph.org/wp-content/uploads/2012/12/org.blend_.logo_.400.jpg\n\n// Shader parameters obtained using the Adelta framework\n// https://github.com/yyuting/Adelta\n\n#define width 960.\n#define height 960.\n\n    \n\n// If true, aspect ratio in the original optimization will be preserved, but extra space outside original FOV might reveal artifact.\n// If false, FOV is the same as original optimization, but aspect ratio will not be preserved.\n#define preserve_aspect_ratio true\n\n// Smaller factor will zoom in the rendering, larger factor will zoom out\nfloat scale_factor = 0.75;\n\n#define X float[](3.714410010070169e-05, 0.0013399580502048945, 1.7243700132573803, 3.1403042105064913, -0.0008196218627876087, -0.05607332584124326, -0.5221833835775358, 0.36092580418657527, 0.7770762866634079, 0.09263424042109428, 0.18905312048399958, 0.4004769800122732, 0.2141507443120837, 0.13405683704848798, 1.0056982546643702, 4.03397005149028, 0.2584207898026207, 4.5296735142841795, 0.6155772275965394, -0.1737463852271963, 0.25841736288434325, 0.757353767742992, 1.5600687197004282, 0.36589141160487754, 0.6574273946281929, 0.6617318558591988, 0.061247778267786, 0.19037822921486316, 0.11133915600574305, 0.4114105867824495, 0.6684968174333683, 0.22042608187667606, 0.6480734304458431, 0.41155909281083203, 0.5345939575232426, 0.31637711980992783, 0.1884772772240139, 0.17541278959113005, 0.5128862955034146, 0.31995939105479343, 0.791766817850187, 0.48453680226569634, 0.2867233988026921)\n\n\n#define origin_x_idx 0\nfloat origin_x = X[origin_x_idx];\n\n#define origin_y_idx 1\nfloat origin_y = X[origin_y_idx];\n\n#define origin_z_idx 2\nfloat origin_z = X[origin_z_idx];\n\n#define ang_x_idx 3\nfloat ang_x = X[ang_x_idx];\n\n#define ang_y_idx 4\nfloat ang_y = X[ang_y_idx];\n\n#define ang_z_idx 5\nfloat ang_z = X[ang_z_idx];\n\n#define ax_ang_x_idx 6\nfloat ax_ang_x = X[ax_ang_x_idx];\n\n#define ax_ang_y_idx 7\nfloat ax_ang_y = X[ax_ang_y_idx];\n\n#define cone_ang_x_idx 8\nfloat cone_ang_x = X[cone_ang_x_idx];\n\n#define cone_ang_y_idx 9\nfloat cone_ang_y = X[cone_ang_y_idx];\n\n#define cone_ang_z_idx 10\nfloat cone_ang_z = X[cone_ang_z_idx];\n\n#define ellipse_ratio_idx 11\nfloat ellipse_ratio = X[ellipse_ratio_idx];\n\n#define cone_ang_w_idx 12\nfloat cone_ang_w = X[cone_ang_w_idx];\n\n#define d_thre_x_idx 13\nfloat d_thre_x = X[d_thre_x_idx];\n\n#define d_thre_y_idx 14\nfloat d_thre_y = X[d_thre_y_idx];\n\n#define angs_lig0_x_x_idx 15\nfloat angs_lig0_x_x = X[angs_lig0_x_x_idx];\n\n#define angs_lig0_x_y_idx 16\nfloat angs_lig0_x_y = X[angs_lig0_x_y_idx];\n\n#define angs_lig0_y_x_idx 17\nfloat angs_lig0_y_x = X[angs_lig0_y_x_idx];\n\n#define angs_lig0_y_y_idx 18\nfloat angs_lig0_y_y = X[angs_lig0_y_y_idx];\n\n#define pos_lig1_x_x_idx 19\nfloat pos_lig1_x_x = X[pos_lig1_x_x_idx];\n\n#define pos_lig1_x_y_idx 20\nfloat pos_lig1_x_y = X[pos_lig1_x_y_idx];\n\n#define pos_lig1_x_z_idx 21\nfloat pos_lig1_x_z = X[pos_lig1_x_z_idx];\n\n#define pos_lig1_y_x_idx 22\nfloat pos_lig1_y_x = X[pos_lig1_y_x_idx];\n\n#define pos_lig1_y_y_idx 23\nfloat pos_lig1_y_y = X[pos_lig1_y_y_idx];\n\n#define pos_lig1_y_z_idx 24\nfloat pos_lig1_y_z = X[pos_lig1_y_z_idx];\n\n#define amb_x_x_idx 25\nfloat amb_x_x = X[amb_x_x_idx];\n\n#define amb_x_y_idx 26\nfloat amb_x_y = X[amb_x_y_idx];\n\n#define amb_x_z_idx 27\nfloat amb_x_z = X[amb_x_z_idx];\n\n#define amb_y_x_idx 28\nfloat amb_y_x = X[amb_y_x_idx];\n\n#define amb_y_y_idx 29\nfloat amb_y_y = X[amb_y_y_idx];\n\n#define amb_y_z_idx 30\nfloat amb_y_z = X[amb_y_z_idx];\n\n#define kd0_x_x_idx 31\nfloat kd0_x_x = X[kd0_x_x_idx];\n\n#define kd0_x_y_idx 32\nfloat kd0_x_y = X[kd0_x_y_idx];\n\n#define kd0_x_z_idx 33\nfloat kd0_x_z = X[kd0_x_z_idx];\n\n#define kd0_y_x_idx 34\nfloat kd0_y_x = X[kd0_y_x_idx];\n\n#define kd0_y_y_idx 35\nfloat kd0_y_y = X[kd0_y_y_idx];\n\n#define kd0_y_z_idx 36\nfloat kd0_y_z = X[kd0_y_z_idx];\n\n#define kd1_x_x_idx 37\nfloat kd1_x_x = X[kd1_x_x_idx];\n\n#define kd1_x_y_idx 38\nfloat kd1_x_y = X[kd1_x_y_idx];\n\n#define kd1_x_z_idx 39\nfloat kd1_x_z = X[kd1_x_z_idx];\n\n#define kd1_y_x_idx 40\nfloat kd1_y_x = X[kd1_y_x_idx];\n\n#define kd1_y_y_idx 41\nfloat kd1_y_y = X[kd1_y_y_idx];\n\n#define kd1_y_z_idx 42\nfloat kd1_y_z = X[kd1_y_z_idx];\n\n\n\n\n\n\n\nvoid animate_params() {\n    cone_ang_w = X[cone_ang_w_idx] + (0.025 - 0.025 * cos(iTime));\n    //ax_ang_y = X[ax_ang_y_idx] + 0.1 * sin(iTime);\n}\n                    \nvoid animate_raymarching(\ninout float  normalize_final0_surface_normal, \ninout float  normalize_final1_surface_normal, \ninout float  normalize_final2_surface_normal, \nin float  pos_x, \nin float  pos_y, \nin float  pos_z){\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    fragCoord.y = iResolution.y - fragCoord.y;\n    \n    float current_u;\n    float current_v;\n    \n    if (preserve_aspect_ratio) {\n        float max_scale = max(width / iResolution.x, height / iResolution.y) * scale_factor;\n        \n        vec2 padding = (vec2(width, height) - max_scale * iResolution.xy) / 2.;\n        \n        current_u = fragCoord.x * max_scale + padding.x;\n        current_v = fragCoord.y * max_scale + padding.y;\n    } else {\n        current_u = fragCoord.x / iResolution.x * width;\n        current_v = fragCoord.y / iResolution.y * height;\n    }\n\n                animate_params();\n    \n    \n    float var00011_cos2 = cos(float(ang_y));          \n    float var00012_cos3 = cos(float(ang_z));          \n    float var00009 = ((var00011_cos2)*(var00012_cos3));\n    float var00015 = ((width)*(float(0.5)));          \n    float var00013 = ((current_u)-(var00015));        \n    float var00019 = pow(var00013, float(2));         \n    float var00022 = ((height)*(float(0.5)));         \n    float var00021 = ((current_v)-(var00022));        \n    float var00020 = pow(var00021, float(2));         \n    float var00017 = ((var00019)+(var00020));         \n    float var00018 = pow(var00015, float(2));         \n    float var00016_rd_norm2 = ((var00017)+(var00018));\n    float var00014 = pow(var00016_rd_norm2, float(-0.5));\n    float var00010_raw_rd0 = ((var00013)*(var00014)); \n    float var00007 = ((var00009)*(var00010_raw_rd0)); \n    float var00029_cos1 = cos(float(ang_x));          \n    float var00027 = (-(float(var00029_cos1)));       \n    float var00028_sin3 = sin(float(ang_z));          \n    float var00025 = ((var00027)*(var00028_sin3));    \n    float var00031_sin1 = sin(float(ang_x));          \n    float var00032_sin2 = sin(float(ang_y));          \n    float var00030 = ((var00031_sin1)*(var00032_sin2));\n    float var00026 = ((var00030)*(var00012_cos3));    \n    float var00023 = ((var00025)+(var00026));         \n    float var00024_raw_rd1 = ((var00021)*(var00014)); \n    float var00008 = ((var00023)*(var00024_raw_rd1)); \n    float var00005 = ((var00007)+(var00008));         \n    float var00035 = ((var00031_sin1)*(var00028_sin3));\n    float var00037 = ((var00029_cos1)*(var00032_sin2));\n    float var00036 = ((var00037)*(var00012_cos3));    \n    float var00033 = ((var00035)+(var00036));         \n    float var00034_raw_rd2 = ((var00015)*(var00014)); \n    float var00006 = ((var00033)*(var00034_raw_rd2)); \n    float var00004_rd0 = ((var00005)+(var00006));     \n    float var00043 = ((var00011_cos2)*(var00028_sin3));\n    float var00041 = ((var00043)*(var00010_raw_rd0)); \n    float var00045 = ((var00029_cos1)*(var00012_cos3));\n    float var00046 = ((var00030)*(var00028_sin3));    \n    float var00044 = ((var00045)+(var00046));         \n    float var00042 = ((var00044)*(var00024_raw_rd1)); \n    float var00039 = ((var00041)+(var00042));         \n    float var00050 = (-(float(var00031_sin1)));       \n    float var00048 = ((var00050)*(var00012_cos3));    \n    float var00049 = ((var00037)*(var00028_sin3));    \n    float var00047 = ((var00048)+(var00049));         \n    float var00040 = ((var00047)*(var00034_raw_rd2)); \n    float var00038_rd1 = ((var00039)+(var00040));     \n    float var00056 = (-(float(var00032_sin2)));       \n    float var00054 = ((var00056)*(var00010_raw_rd0)); \n    float var00057 = ((var00031_sin1)*(var00011_cos2));\n    float var00055 = ((var00057)*(var00024_raw_rd1)); \n    float var00052 = ((var00054)+(var00055));         \n    float var00058 = ((var00029_cos1)*(var00011_cos2));\n    float var00053 = ((var00058)*(var00034_raw_rd2)); \n    float var00051_rd2 = ((var00052)+(var00053));     \n    float var00060_sin_theta = sin(float(ax_ang_x));  \n    float var00061_cos_phi = cos(float(ax_ang_y));    \n    float var00059_ax0 = ((var00060_sin_theta)*(var00061_cos_phi));\n    float var00063_cos_theta = cos(float(ax_ang_x));  \n    float var00062_ax1 = ((var00063_cos_theta)*(var00061_cos_phi));\n    float var00064_ax2 = sin(float(ax_ang_y));        \n    float var00065_cos_cone_ang = cos(float(cone_ang_w));\n    float var00067_cone_v2_1 = sin(float(cone_ang_x));\n    float var00068_cone_v0_2 = cos(float(cone_ang_y));\n    float var00066_cone_v1_0 = ((var00067_cone_v2_1)*(var00068_cone_v0_2));\n    float var00070_cos_cone_theta = cos(float(cone_ang_x));\n    float var00069_cone_v1_1 = ((var00070_cos_cone_theta)*(var00068_cone_v0_2));\n    float var00072_sin_cone_phi = sin(float(cone_ang_y));\n    float var00071_cone_v1_2 = (-(float(var00072_sin_cone_phi)));\n    float var00073_cos_cone_alpha = cos(float(cone_ang_z));\n    float var00074_cone_v2_0 = (-(float(var00070_cos_cone_theta)));\n    float var00075_sin_cone_alpha = sin(float(cone_ang_z));\n    float var00076_sin_cone_ang = sin(float(cone_ang_w));\n    float var00077_cone_v0_0 = ((var00067_cone_v2_1)*(var00072_sin_cone_phi));\n    float var00078_cone_v0_1 = ((var00070_cos_cone_theta)*(var00072_sin_cone_phi));\n    float _t_raymarching_0 = float(0);\n    float _t_closest_raymarching_0 = _t_raymarching_0;\n    float _res0_closest_raymarching_0 = float(10.0);\n    float[6] var00003;\n    for (int raymarching_loop_i = 0; raymarching_loop_i < 64; raymarching_loop_i++) {\n        float var00099 = ((var00004_rd0)*(_t_raymarching_0));\n        float var00098 = ((float(origin_x))+(var00099));  \n        float var00097_deriv_d2_pos0_x = ((var00098)*(float(1.0)));\n        float var00096 = ((var00097_deriv_d2_pos0_x)*(var00059_ax0));\n        float var00094 = ((float(0))+(var00096));         \n        float var00102 = ((var00038_rd1)*(_t_raymarching_0));\n        float var00101 = ((float(origin_y))+(var00102));  \n        float var00100_deriv_d2_pos1_x = ((var00101)*(float(1.0)));\n        float var00095 = ((var00100_deriv_d2_pos1_x)*(var00062_ax1));\n        float var00092 = ((var00094)+(var00095));         \n        float var00105 = ((var00051_rd2)*(_t_raymarching_0));\n        float var00104 = ((float(origin_z))+(var00105));  \n        float var00103_deriv_d2_pos2_x = ((var00104)*(float(1.0)));\n        float var00093 = ((var00103_deriv_d2_pos2_x)*(var00064_ax2));\n        float var00091 = ((var00092)+(var00093));         \n        float var00089_d1_x = ((var00091)-(float(d_thre_x)));\n        float var00110_pos0_squared_x = ((var00097_deriv_d2_pos0_x)*(var00097_deriv_d2_pos0_x));\n        float var00111_pos1_squared_x = ((var00100_deriv_d2_pos1_x)*(var00100_deriv_d2_pos1_x));\n        float var00108 = ((var00110_pos0_squared_x)+(var00111_pos1_squared_x));\n        float var00109_pos2_squared_x = ((var00103_deriv_d2_pos2_x)*(var00103_deriv_d2_pos2_x));\n        float var00107_dist2_x = ((var00108)+(var00109_pos2_squared_x));\n        float var00106_dist_x = sqrt(var00107_dist2_x);   \n        float var00090_d2_x = ((var00106_dist_x)-(float(d_thre_y)));\n        bool var00088 = ((var00089_d1_x)>(var00090_d2_x));\n        float var00086_select = bool(var00088) ? var00089_d1_x : var00090_d2_x;\n        float var00130 = ((var00098)-(float(origin_x)));  \n        float var00129_q0_x = ((float(1.0))*(var00130));  \n        float var00128 = ((var00129_q0_x)*(var00066_cone_v1_0));\n        float var00126 = ((float(0))+(var00128));         \n        float var00132 = ((var00101)-(float(origin_y)));  \n        float var00131_q1_x = ((float(1.0))*(var00132));  \n        float var00127 = ((var00131_q1_x)*(var00069_cone_v1_1));\n        float var00124 = ((var00126)+(var00127));         \n        float var00134 = ((var00104)-(float(origin_z)));  \n        float var00133_q2_x = ((float(1.0))*(var00134));  \n        float var00125 = ((var00133_q2_x)*(var00071_cone_v1_2));\n        float var00123_q1_x = ((var00124)+(var00125));    \n        float var00121 = ((var00123_q1_x)*(var00073_cos_cone_alpha));\n        float var00140 = ((var00129_q0_x)*(var00074_cone_v2_0));\n        float var00138 = ((float(0))+(var00140));         \n        float var00139 = ((var00131_q1_x)*(var00067_cone_v2_1));\n        float var00136 = ((var00138)+(var00139));         \n        float var00137 = ((var00133_q2_x)*(float(0.0)));  \n        float var00135_q2_x = ((var00136)+(var00137));    \n        float var00122 = ((var00135_q2_x)*(var00075_sin_cone_alpha));\n        float var00120_r1_x = ((var00121)+(var00122));    \n        float var00119 = ((var00120_r1_x)*(float(ellipse_ratio)));\n        float var00117 = ((var00119)*(var00119));         \n        float var00142 = ((var00123_q1_x)*(var00075_sin_cone_alpha));\n        float var00143 = ((var00135_q2_x)*(var00073_cos_cone_alpha));\n        float var00141_r2_x = ((var00142)+(var00143));    \n        float var00118 = ((var00141_r2_x)*(var00141_r2_x));\n        float var00116 = ((var00117)+(var00118));         \n        float var00115_scaled_dist_x = sqrt(var00116);    \n        float var00113 = ((var00065_cos_cone_ang)*(var00115_scaled_dist_x));\n        float var00149 = ((var00129_q0_x)*(var00077_cone_v0_0));\n        float var00147 = ((float(0))+(var00149));         \n        float var00148 = ((var00131_q1_x)*(var00078_cone_v0_1));\n        float var00145 = ((var00147)+(var00148));         \n        float var00146 = ((var00133_q2_x)*(var00068_cone_v0_2));\n        float var00144_q0_x = ((var00145)+(var00146));    \n        float var00114 = ((var00076_sin_cone_ang)*(var00144_q0_x));\n        float var00112_d3_x = ((var00113)+(var00114));    \n        float var00087 = (-(float(var00112_d3_x)));       \n        bool var00085 = ((var00086_select)>(var00087));   \n        float var00083_select = bool(var00085) ? var00086_select : var00087;\n        float var00162_deriv_d2_pos0_y = ((var00098)*(float(-1)));\n        float var00161 = ((var00162_deriv_d2_pos0_y)*(var00059_ax0));\n        float var00159 = ((float(0))+(var00161));         \n        float var00163_deriv_d2_pos1_y = ((var00101)*(float(-1)));\n        float var00160 = ((var00163_deriv_d2_pos1_y)*(var00062_ax1));\n        float var00157 = ((var00159)+(var00160));         \n        float var00164_deriv_d2_pos2_y = ((var00104)*(float(1)));\n        float var00158 = ((var00164_deriv_d2_pos2_y)*(var00064_ax2));\n        float var00156 = ((var00157)+(var00158));         \n        float var00154_d1_y = ((var00156)-(float(d_thre_x)));\n        float var00169_pos0_squared_y = ((var00162_deriv_d2_pos0_y)*(var00162_deriv_d2_pos0_y));\n        float var00170_pos1_squared_y = ((var00163_deriv_d2_pos1_y)*(var00163_deriv_d2_pos1_y));\n        float var00167 = ((var00169_pos0_squared_y)+(var00170_pos1_squared_y));\n        float var00168_pos2_squared_y = ((var00164_deriv_d2_pos2_y)*(var00164_deriv_d2_pos2_y));\n        float var00166_dist2_y = ((var00167)+(var00168_pos2_squared_y));\n        float var00165_dist_y = sqrt(var00166_dist2_y);   \n        float var00155_d2_y = ((var00165_dist_y)-(float(d_thre_y)));\n        bool var00153 = ((var00154_d1_y)>(var00155_d2_y));\n        float var00151_select = bool(var00153) ? var00154_d1_y : var00155_d2_y;\n        float var00189 = ((var00098)-(float(origin_x)));  \n        float var00188_q0_y = ((float(-1))*(var00189));   \n        float var00187 = ((var00188_q0_y)*(var00066_cone_v1_0));\n        float var00185 = ((float(0))+(var00187));         \n        float var00191 = ((var00101)-(float(origin_y)));  \n        float var00190_q1_y = ((float(-1))*(var00191));   \n        float var00186 = ((var00190_q1_y)*(var00069_cone_v1_1));\n        float var00183 = ((var00185)+(var00186));         \n        float var00193 = ((var00104)-(float(origin_z)));  \n        float var00192_q2_y = ((float(1))*(var00193));    \n        float var00184 = ((var00192_q2_y)*(var00071_cone_v1_2));\n        float var00182_q1_y = ((var00183)+(var00184));    \n        float var00180 = ((var00182_q1_y)*(var00073_cos_cone_alpha));\n        float var00199 = ((var00188_q0_y)*(var00074_cone_v2_0));\n        float var00197 = ((float(0))+(var00199));         \n        float var00198 = ((var00190_q1_y)*(var00067_cone_v2_1));\n        float var00195 = ((var00197)+(var00198));         \n        float var00196 = ((var00192_q2_y)*(float(0.0)));  \n        float var00194_q2_y = ((var00195)+(var00196));    \n        float var00181 = ((var00194_q2_y)*(var00075_sin_cone_alpha));\n        float var00179_r1_y = ((var00180)+(var00181));    \n        float var00178 = ((var00179_r1_y)*(float(ellipse_ratio)));\n        float var00176 = ((var00178)*(var00178));         \n        float var00201 = ((var00182_q1_y)*(var00075_sin_cone_alpha));\n        float var00202 = ((var00194_q2_y)*(var00073_cos_cone_alpha));\n        float var00200_r2_y = ((var00201)+(var00202));    \n        float var00177 = ((var00200_r2_y)*(var00200_r2_y));\n        float var00175 = ((var00176)+(var00177));         \n        float var00174_scaled_dist_y = sqrt(var00175);    \n        float var00172 = ((var00065_cos_cone_ang)*(var00174_scaled_dist_y));\n        float var00208 = ((var00188_q0_y)*(var00077_cone_v0_0));\n        float var00206 = ((float(0))+(var00208));         \n        float var00207 = ((var00190_q1_y)*(var00078_cone_v0_1));\n        float var00204 = ((var00206)+(var00207));         \n        float var00205 = ((var00192_q2_y)*(var00068_cone_v0_2));\n        float var00203_q0_y = ((var00204)+(var00205));    \n        float var00173 = ((var00076_sin_cone_ang)*(var00203_q0_y));\n        float var00171_d3_y = ((var00172)+(var00173));    \n        float var00152 = (-(float(var00171_d3_y)));       \n        bool var00150 = ((var00151_select)>(var00152));   \n        float var00084_select = bool(var00150) ? var00151_select : var00152;\n        bool var00082 = ((var00083_select)<(var00084_select));\n        float var00080_select = bool(var00082) ? var00083_select : var00084_select;\n        bool var00210 = ((var00080_select)<(_res0_closest_raymarching_0));\n        float var00209_select = bool(var00210) ? _t_raymarching_0 : _t_closest_raymarching_0;\n        float var00081 = ((float(0.0004))*(var00209_select));\n        bool var00079 = ((var00080_select)<(var00081));   \n        float var00211_select = bool(var00210) ? var00080_select : _res0_closest_raymarching_0;\n        float var00212 = ((_t_raymarching_0)+(var00080_select));\n        float var00215 = ((var00084_select)-(var00083_select));\n        bool var00214_cond_xy = ((var00215)>(float(0)));  \n        float var00213_combined_res1 = bool(var00214_cond_xy) ? float(0.0) : float(1.0);\n        float[6] var00216 = float[](float(var00079), float(var00209_select), float(var00211_select), float(var00212), float(var00080_select), float(var00213_combined_res1));\n        var00003 = var00216;\n        _t_closest_raymarching_0 = var00003[1];\n        _res0_closest_raymarching_0 = var00003[2];\n        _t_raymarching_0 = var00003[3];\n    }\n    bool var00001_is_valid = bool(var00003[int(float(0))]);\n    float var00255 = float(var00003[int(float(1))]);  \n    float var00254 = ((var00004_rd0)*(var00255));     \n    float var00253 = ((float(origin_x))+(var00254));  \n    float var00252_deriv_d2_pos0_y = ((var00253)*(float(-1)));\n    float var00250 = ((var00252_deriv_d2_pos0_y)*(var00059_ax0));\n    float var00258 = ((var00038_rd1)*(var00255));     \n    float var00257 = ((float(origin_y))+(var00258));  \n    float var00256_deriv_d2_pos1_y = ((var00257)*(float(-1)));\n    float var00251 = ((var00256_deriv_d2_pos1_y)*(var00062_ax1));\n    float var00248 = ((var00250)+(var00251));         \n    float var00260 = ((var00051_rd2)*(var00255));     \n    float var00259 = ((float(origin_z))+(var00260));  \n    float var00249 = ((var00259)*(var00064_ax2));     \n    float var00247 = ((var00248)+(var00249));         \n    float var00245_d1_y = ((var00247)-(float(d_thre_x)));\n    float var00265_pos0_squared_y = pow(var00252_deriv_d2_pos0_y, float(2));\n    float var00266_pos1_squared_y = pow(var00256_deriv_d2_pos1_y, float(2));\n    float var00263 = ((var00265_pos0_squared_y)+(var00266_pos1_squared_y));\n    float var00264_pos2_squared_y = pow(var00259, float(2));\n    float var00262_dist2_y = ((var00263)+(var00264_pos2_squared_y));\n    float var00261_dist_y = pow(var00262_dist2_y, float(0.5));\n    float var00246_d2_y = ((var00261_dist_y)-(float(d_thre_y)));\n    bool var00244 = ((var00245_d1_y)>(var00246_d2_y));\n    float var00242_select = bool(var00244) ? var00245_d1_y : var00246_d2_y;\n    float var00284 = ((var00253)-(float(origin_x)));  \n    float var00283_q0_y = ((float(-1))*(var00284));   \n    float var00281 = ((var00283_q0_y)*(var00066_cone_v1_0));\n    float var00286 = ((var00257)-(float(origin_y)));  \n    float var00285_q1_y = ((float(-1))*(var00286));   \n    float var00282 = ((var00285_q1_y)*(var00069_cone_v1_1));\n    float var00279 = ((var00281)+(var00282));         \n    float var00287 = ((var00259)-(float(origin_z)));  \n    float var00280 = ((var00287)*(var00071_cone_v1_2));\n    float var00278_q1_y = ((var00279)+(var00280));    \n    float var00276 = ((var00278_q1_y)*(var00073_cos_cone_alpha));\n    float var00289 = ((var00283_q0_y)*(var00074_cone_v2_0));\n    float var00290 = ((var00285_q1_y)*(var00067_cone_v2_1));\n    float var00288 = ((var00289)+(var00290));         \n    float var00277 = ((var00288)*(var00075_sin_cone_alpha));\n    float var00275_r1_y = ((var00276)+(var00277));    \n    float var00274 = ((var00275_r1_y)*(float(ellipse_ratio)));\n    float var00272 = pow(var00274, float(2));         \n    float var00292 = ((var00278_q1_y)*(var00075_sin_cone_alpha));\n    float var00293 = ((var00288)*(var00073_cos_cone_alpha));\n    float var00291_r2_y = ((var00292)+(var00293));    \n    float var00273 = pow(var00291_r2_y, float(2));    \n    float var00271 = ((var00272)+(var00273));         \n    float var00270_scaled_dist_y = pow(var00271, float(0.5));\n    float var00268 = ((var00065_cos_cone_ang)*(var00270_scaled_dist_y));\n    float var00297 = ((var00283_q0_y)*(var00077_cone_v0_0));\n    float var00298 = ((var00285_q1_y)*(var00078_cone_v0_1));\n    float var00295 = ((var00297)+(var00298));         \n    float var00296 = ((var00287)*(var00068_cone_v0_2));\n    float var00294_q0_y = ((var00295)+(var00296));    \n    float var00269 = ((var00076_sin_cone_ang)*(var00294_q0_y));\n    float var00267_d3_y = ((var00268)+(var00269));    \n    float var00243 = (-(float(var00267_d3_y)));       \n    bool var00241 = ((var00242_select)>(var00243));   \n    float var00239_select = bool(var00241) ? var00242_select : var00243;\n    float var00307 = ((var00253)*(var00059_ax0));     \n    float var00308 = ((var00257)*(var00062_ax1));     \n    float var00306 = ((var00307)+(var00308));         \n    float var00305 = ((var00306)+(var00249));         \n    float var00303_d1_x = ((var00305)-(float(d_thre_x)));\n    float var00312_pos0_squared_x = pow(var00253, float(2));\n    float var00313_pos1_squared_x = pow(var00257, float(2));\n    float var00311 = ((var00312_pos0_squared_x)+(var00313_pos1_squared_x));\n    float var00310_dist2_x = ((var00311)+(var00264_pos2_squared_y));\n    float var00309_dist_x = pow(var00310_dist2_x, float(0.5));\n    float var00304_d2_x = ((var00309_dist_x)-(float(d_thre_y)));\n    bool var00302 = ((var00303_d1_x)>(var00304_d2_x));\n    float var00300_select = bool(var00302) ? var00303_d1_x : var00304_d2_x;\n    float var00327 = ((var00284)*(var00066_cone_v1_0));\n    float var00328 = ((var00286)*(var00069_cone_v1_1));\n    float var00326 = ((var00327)+(var00328));         \n    float var00325_q1_x = ((var00326)+(var00280));    \n    float var00323 = ((var00325_q1_x)*(var00073_cos_cone_alpha));\n    float var00330 = ((var00284)*(var00074_cone_v2_0));\n    float var00331 = ((var00286)*(var00067_cone_v2_1));\n    float var00329 = ((var00330)+(var00331));         \n    float var00324 = ((var00329)*(var00075_sin_cone_alpha));\n    float var00322_r1_x = ((var00323)+(var00324));    \n    float var00321 = ((var00322_r1_x)*(float(ellipse_ratio)));\n    float var00319 = pow(var00321, float(2));         \n    float var00333 = ((var00325_q1_x)*(var00075_sin_cone_alpha));\n    float var00334 = ((var00329)*(var00073_cos_cone_alpha));\n    float var00332_r2_x = ((var00333)+(var00334));    \n    float var00320 = pow(var00332_r2_x, float(2));    \n    float var00318 = ((var00319)+(var00320));         \n    float var00317_scaled_dist_x = pow(var00318, float(0.5));\n    float var00315 = ((var00065_cos_cone_ang)*(var00317_scaled_dist_x));\n    float var00337 = ((var00284)*(var00077_cone_v0_0));\n    float var00338 = ((var00286)*(var00078_cone_v0_1));\n    float var00336 = ((var00337)+(var00338));         \n    float var00335_q0_x = ((var00336)+(var00296));    \n    float var00316 = ((var00076_sin_cone_ang)*(var00335_q0_x));\n    float var00314_d3_x = ((var00315)+(var00316));    \n    float var00301 = (-(float(var00314_d3_x)));       \n    bool var00299 = ((var00300_select)>(var00301));   \n    float var00240_select = bool(var00299) ? var00300_select : var00301;\n    float var00238 = ((var00239_select)-(var00240_select));\n    bool var00235_cond_xy = ((var00238)>(float(0)));  \n    float var00236_deriv_t_shell_pos0_x = bool(var00302) ? var00059_ax0 : var00253;\n    float var00339_deriv_t_shell_pos0_y = bool(var00244) ? var00059_ax0 : var00252_deriv_d2_pos0_y;\n    float var00237 = (-(float(var00339_deriv_t_shell_pos0_y)));\n    float var00233_deriv_sdf0 = bool(var00235_cond_xy) ? var00236_deriv_t_shell_pos0_x : var00237;\n    float var00343_normalize_in_squared0_surface_normal = pow(var00233_deriv_sdf0, float(2));\n    float var00346_deriv_t_shell_pos1_x = bool(var00302) ? var00062_ax1 : var00257;\n    float var00348_deriv_t_shell_pos1_y = bool(var00244) ? var00062_ax1 : var00256_deriv_d2_pos1_y;\n    float var00347 = (-(float(var00348_deriv_t_shell_pos1_y)));\n    float var00345_deriv_sdf1 = bool(var00235_cond_xy) ? var00346_deriv_t_shell_pos1_x : var00347;\n    float var00344_normalize_in_squared1_surface_normal = pow(var00345_deriv_sdf1, float(2));\n    float var00341 = ((var00343_normalize_in_squared0_surface_normal)+(var00344_normalize_in_squared1_surface_normal));\n    float var00350_deriv_t_shell_pos2_x = bool(var00302) ? var00064_ax2 : var00259;\n    float var00351_deriv_t_shell_pos2_y = bool(var00244) ? var00064_ax2 : var00259;\n    float var00349_deriv_sdf2 = bool(var00235_cond_xy) ? var00350_deriv_t_shell_pos2_x : var00351_deriv_t_shell_pos2_y;\n    float var00342_normalize_in_squared2_surface_normal = pow(var00349_deriv_sdf2, float(2));\n    float var00340_normalize_norm2_surface_normal = ((var00341)+(var00342_normalize_in_squared2_surface_normal));\n    float var00234_normalize_inv_norm_surface_normal = pow(var00340_normalize_norm2_surface_normal, float(-0.5));\n    float var00231_normalize_final0_surface_normal = ((var00233_deriv_sdf0)*(var00234_normalize_inv_norm_surface_normal));\n    float var00352_normalize_final1_surface_normal = ((var00345_deriv_sdf1)*(var00234_normalize_inv_norm_surface_normal));\n    float var00353_normalize_final2_surface_normal = ((var00349_deriv_sdf2)*(var00234_normalize_inv_norm_surface_normal));\n    float var00354_pos_x = ((float(origin_x))+(var00254));\n    float var00355_pos_y = ((float(origin_y))+(var00258));\n    float var00356_pos_z = ((float(origin_z))+(var00260));\n    animate_raymarching(var00231_normalize_final0_surface_normal, var00352_normalize_final1_surface_normal, var00353_normalize_final2_surface_normal, var00354_pos_x, var00355_pos_y, var00356_pos_z);\n    float var00357_sin_theta_lig0_x = sin(float(angs_lig0_x_x));\n    float var00358_cos_phi_lig0_x = cos(float(angs_lig0_x_y));\n    float var00232_dir_lig0_x0 = ((var00357_sin_theta_lig0_x)*(var00358_cos_phi_lig0_x));\n    float var00229 = ((var00231_normalize_final0_surface_normal)*(var00232_dir_lig0_x0));\n    float var00360_cos_theta_lig0_x = cos(float(angs_lig0_x_x));\n    float var00359_dir_lig0_x1 = ((var00360_cos_theta_lig0_x)*(var00358_cos_phi_lig0_x));\n    float var00230 = ((var00352_normalize_final1_surface_normal)*(var00359_dir_lig0_x1));\n    float var00227 = ((var00229)+(var00230));         \n    float var00361_dir_lig0_x2 = sin(float(angs_lig0_x_y));\n    float var00228 = ((var00353_normalize_final2_surface_normal)*(var00361_dir_lig0_x2));\n    float var00226_dot_lig0_x = ((var00227)+(var00228));\n    bool var00225_cond_dif0_x = ((var00226_dot_lig0_x)>(float(0)));\n    float var00224_dif0_x_sc = bool(var00225_cond_dif0_x) ? var00226_dot_lig0_x : float(0);\n    float var00223 = ((var00224_dif0_x_sc)*(float(kd0_x_x)));\n    float var00221 = ((float(amb_x_x))+(var00223));   \n    float var00370_dir_lig1_x_diff0 = ((float(pos_lig1_x_x))-(var00253));\n    float var00375_normalize_in_squared0_dir_lig1_x_diff = pow(var00370_dir_lig1_x_diff0, float(2));\n    float var00377_dir_lig1_x_diff1 = ((float(pos_lig1_x_y))-(var00257));\n    float var00376_normalize_in_squared1_dir_lig1_x_diff = pow(var00377_dir_lig1_x_diff1, float(2));\n    float var00373 = ((var00375_normalize_in_squared0_dir_lig1_x_diff)+(var00376_normalize_in_squared1_dir_lig1_x_diff));\n    float var00378_dir_lig1_x_diff2 = ((float(pos_lig1_x_z))-(var00259));\n    float var00374_normalize_in_squared2_dir_lig1_x_diff = pow(var00378_dir_lig1_x_diff2, float(2));\n    float var00372_normalize_norm2_dir_lig1_x_diff = ((var00373)+(var00374_normalize_in_squared2_dir_lig1_x_diff));\n    float var00371_normalize_inv_norm_dir_lig1_x_diff = pow(var00372_normalize_norm2_dir_lig1_x_diff, float(-0.5));\n    float var00369_dir_lig1_x0 = ((var00370_dir_lig1_x_diff0)*(var00371_normalize_inv_norm_dir_lig1_x_diff));\n    float var00367 = ((var00231_normalize_final0_surface_normal)*(var00369_dir_lig1_x0));\n    float var00379_dir_lig1_x1 = ((var00377_dir_lig1_x_diff1)*(var00371_normalize_inv_norm_dir_lig1_x_diff));\n    float var00368 = ((var00352_normalize_final1_surface_normal)*(var00379_dir_lig1_x1));\n    float var00365 = ((var00367)+(var00368));         \n    float var00380_dir_lig1_x2 = ((var00378_dir_lig1_x_diff2)*(var00371_normalize_inv_norm_dir_lig1_x_diff));\n    float var00366 = ((var00353_normalize_final2_surface_normal)*(var00380_dir_lig1_x2));\n    float var00364_dot_lig1_x = ((var00365)+(var00366));\n    bool var00363_cond_dif1_x = ((var00364_dot_lig1_x)>(float(0)));\n    float var00362_dif1_x_sc = bool(var00363_cond_dif1_x) ? var00364_dot_lig1_x : float(0);\n    float var00222 = ((var00362_dif1_x_sc)*(float(kd1_x_x)));\n    float var00219_col_x0 = ((var00221)+(var00222));  \n    float var00381 = float(var00003[int(float(5))]);  \n    float var00220 = ((float(1.0))-(var00381));       \n    float var00217 = ((var00219_col_x0)*(var00220));  \n    float var00394_sin_theta_lig0_y = sin(float(angs_lig0_y_x));\n    float var00395_cos_phi_lig0_y = cos(float(angs_lig0_y_y));\n    float var00393_dir_lig0_y0 = ((var00394_sin_theta_lig0_y)*(var00395_cos_phi_lig0_y));\n    float var00391 = ((var00231_normalize_final0_surface_normal)*(var00393_dir_lig0_y0));\n    float var00397_cos_theta_lig0_y = cos(float(angs_lig0_y_x));\n    float var00396_dir_lig0_y1 = ((var00397_cos_theta_lig0_y)*(var00395_cos_phi_lig0_y));\n    float var00392 = ((var00352_normalize_final1_surface_normal)*(var00396_dir_lig0_y1));\n    float var00389 = ((var00391)+(var00392));         \n    float var00398_dir_lig0_y2 = sin(float(angs_lig0_y_y));\n    float var00390 = ((var00353_normalize_final2_surface_normal)*(var00398_dir_lig0_y2));\n    float var00388_dot_lig0_y = ((var00389)+(var00390));\n    bool var00387_cond_dif0_y = ((var00388_dot_lig0_y)>(float(0)));\n    float var00386_dif0_y_sc = bool(var00387_cond_dif0_y) ? var00388_dot_lig0_y : float(0);\n    float var00385 = ((var00386_dif0_y_sc)*(float(kd0_y_x)));\n    float var00383 = ((float(amb_y_x))+(var00385));   \n    float var00407_dir_lig1_y_diff0 = ((float(pos_lig1_y_x))-(var00253));\n    float var00412_normalize_in_squared0_dir_lig1_y_diff = pow(var00407_dir_lig1_y_diff0, float(2));\n    float var00414_dir_lig1_y_diff1 = ((float(pos_lig1_y_y))-(var00257));\n    float var00413_normalize_in_squared1_dir_lig1_y_diff = pow(var00414_dir_lig1_y_diff1, float(2));\n    float var00410 = ((var00412_normalize_in_squared0_dir_lig1_y_diff)+(var00413_normalize_in_squared1_dir_lig1_y_diff));\n    float var00415_dir_lig1_y_diff2 = ((float(pos_lig1_y_z))-(var00259));\n    float var00411_normalize_in_squared2_dir_lig1_y_diff = pow(var00415_dir_lig1_y_diff2, float(2));\n    float var00409_normalize_norm2_dir_lig1_y_diff = ((var00410)+(var00411_normalize_in_squared2_dir_lig1_y_diff));\n    float var00408_normalize_inv_norm_dir_lig1_y_diff = pow(var00409_normalize_norm2_dir_lig1_y_diff, float(-0.5));\n    float var00406_dir_lig1_y0 = ((var00407_dir_lig1_y_diff0)*(var00408_normalize_inv_norm_dir_lig1_y_diff));\n    float var00404 = ((var00231_normalize_final0_surface_normal)*(var00406_dir_lig1_y0));\n    float var00416_dir_lig1_y1 = ((var00414_dir_lig1_y_diff1)*(var00408_normalize_inv_norm_dir_lig1_y_diff));\n    float var00405 = ((var00352_normalize_final1_surface_normal)*(var00416_dir_lig1_y1));\n    float var00402 = ((var00404)+(var00405));         \n    float var00417_dir_lig1_y2 = ((var00415_dir_lig1_y_diff2)*(var00408_normalize_inv_norm_dir_lig1_y_diff));\n    float var00403 = ((var00353_normalize_final2_surface_normal)*(var00417_dir_lig1_y2));\n    float var00401_dot_lig1_y = ((var00402)+(var00403));\n    bool var00400_cond_dif1_y = ((var00401_dot_lig1_y)>(float(0)));\n    float var00399_dif1_y_sc = bool(var00400_cond_dif1_y) ? var00401_dot_lig1_y : float(0);\n    float var00384 = ((var00399_dif1_y_sc)*(float(kd1_y_x)));\n    float var00382_col_y0 = ((var00383)+(var00384));  \n    float var00218 = ((var00382_col_y0)*(var00381));  \n    float var00002_col_obj0 = ((var00217)+(var00218));\n    float var00000_col_R = bool(var00001_is_valid) ? var00002_col_obj0 : float(1.0);\n    float var00425 = ((var00224_dif0_x_sc)*(float(kd0_x_y)));\n    float var00423 = ((float(amb_x_y))+(var00425));   \n    float var00424 = ((var00362_dif1_x_sc)*(float(kd1_x_y)));\n    float var00422_col_x1 = ((var00423)+(var00424));  \n    float var00420 = ((var00422_col_x1)*(var00220));  \n    float var00429 = ((var00386_dif0_y_sc)*(float(kd0_y_y)));\n    float var00427 = ((float(amb_y_y))+(var00429));   \n    float var00428 = ((var00399_dif1_y_sc)*(float(kd1_y_y)));\n    float var00426_col_y1 = ((var00427)+(var00428));  \n    float var00421 = ((var00426_col_y1)*(var00381));  \n    float var00419_col_obj1 = ((var00420)+(var00421));\n    float var00418_col_G = bool(var00001_is_valid) ? var00419_col_obj1 : float(1.0);\n    float var00437 = ((var00224_dif0_x_sc)*(float(kd0_x_z)));\n    float var00435 = ((float(amb_x_z))+(var00437));   \n    float var00436 = ((var00362_dif1_x_sc)*(float(kd1_x_z)));\n    float var00434_col_x2 = ((var00435)+(var00436));  \n    float var00432 = ((var00434_col_x2)*(var00220));  \n    float var00441 = ((var00386_dif0_y_sc)*(float(kd0_y_z)));\n    float var00439 = ((float(amb_y_z))+(var00441));   \n    float var00440 = ((var00399_dif1_y_sc)*(float(kd1_y_z)));\n    float var00438_col_y2 = ((var00439)+(var00440));  \n    float var00433 = ((var00438_col_y2)*(var00381));  \n    float var00431_col_obj2 = ((var00432)+(var00433));\n    float var00430_col_B = bool(var00001_is_valid) ? var00431_col_obj2 : float(1.0);\n    vec3 var00442 = vec3(float(var00000_col_R), float(var00418_col_G), float(var00430_col_B));\n    \n        fragColor = vec4(var00442, 1.0);\n        return;\n    }","name":"Image","description":"","type":"image"}]}