{"ver":"0.1","info":{"id":"wtdyRj","date":"1609529626","viewed":73,"name":"glitchy sin noise","username":"sawtoothm","description":"first shader, trying to convert old c code.  absolute beginner, so any tips or advice would be helpful.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float cc = 127.5;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float x = (fragCoord.x)+iResolution.x/2.0;\n    float y = (fragCoord.y)+iResolution.y/2.0;\n\n    // Time varying pixel color\n\n    float t = sin(iTime)+0.5;\n    float layer1 = cc + (cc * sin(x / t));\n    float layer2 = cc + (cc * cos(y + x / t));\n    float layer3 = cc + (cc * sin(sqrt(x * x + y * y) / t));\n    \n    float c = (layer3 + layer2 + layer1) / 3.0;\n    \n    vec3 col =vec3(c/256.0, 0,0); \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}