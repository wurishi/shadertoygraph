{"ver":"0.1","info":{"id":"Nsd3RH","date":"1629153925","viewed":176,"name":"Wobbly colour wheel","username":"mira","description":"Spinning wobbly colour wheel thing recreating something I saw a cutie on fedi make.\n\nOnly difference is this one is wildly inefficient lmao","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["colour"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle( vec2 tr , float r ) {\n    float v = abs( r - tr.y ) ;\n    return 1.0 - smoothstep( 0.0 , 0.005 , v ) ;\n}\n\n#define PI 3.14159265\n\nfloat angle( vec2 uv ) {\n    vec2 id = vec2( 1.0 , 0 ) ;\n    float a = acos( dot( uv , id ) / ( length( uv ) * length( id ) ) ) ;\n    if ( uv.y < 0.0 ) a = 2.0 * PI - a ;\n    return a ;\n}\n\nvoid mainImage( out vec4 fragColor , in vec2 fragCoord ) {\n    // Normalized pixel coordinates\n    vec2 uv = ( fragCoord - 0.5 * iResolution.xy) / iResolution.y ;\n    // polar coordinates\n    vec2 tr = vec2( angle( uv ) , length( uv ) ) ;\n    \n    float c = 0.0 ;\n    \n    // haha this is a terrible idea\n    const float N = 1200.0 ;\n    \n    for ( float i = 0.0 ; i > -N ; i -- ) {\n        float T = iTime + i * 0.003 ;\n        float radius = ( 0.29 // base\n                     + ( 0.12 * sin( T * 1.5 ) ) ) // in/out\n                     * ( 1.0 + 0.15 * sin( tr.x  * 10.0 - ( T * 7.0 ) ) ) ; // wobbles\n        c = max( c , circle( tr , radius ) + i / N ) ;\n    }\n    \n    vec3 col = vec3(\n        sin( tr.x + iTime            ) / 2.5 + 0.8 ,\n        sin( tr.x + iTime + PI / 0.8 ) / 2.5 + 0.8 ,\n        sin( tr.x + iTime + PI / 1.5 ) / 2.5 + 0.8\n    ) * c ;\n    \n    //col = vec3( angle( uv ) / 4.0 ) ;\n\n    // Output to screen\n    fragColor = vec4( col , 1.0 ) ;\n}","name":"Image","description":"","type":"image"}]}