{"ver":"0.1","info":{"id":"ctsfRH","date":"1692614302","viewed":106,"name":"Better Water Effect","username":"saalty","description":"A fork of my previous shader, but looks nicer","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float WATER_SCALE = 0.04;\nconst float WATER_SPEED = 0.03;\n\nfloat waterHeight(vec2 At)\n{\n    At /= iResolution.xy;\n    float phase = cos(iTime * 3.0) * 0.5 + 0.5;\n    float x0 = texture(iChannel0, At * WATER_SCALE + iTime * WATER_SPEED).x;\n    float x1 = texture(iChannel1, At * WATER_SCALE + iTime * WATER_SPEED).x;\n    float mul = texture(iChannel0, At * WATER_SCALE * 2.0 + iTime * WATER_SPEED + 0.5).x * 2.0;\n    return (x0 + phase * (x1 - x0)) * mul;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float waterDepth = 16.0; \n\n    float x = waterHeight(fragCoord);\n    vec3 x3 = vec3(fragCoord.x, x * 4.0, fragCoord.y);\n    float xx = waterHeight(fragCoord + vec2(1.0, 0.0));\n    vec3 xx3 = vec3(fragCoord.x + 0.2, xx * 4.0, fragCoord.y);\n    float xy = waterHeight(fragCoord + vec2(0.0, 1.0));\n    vec3 xy3 = vec3(fragCoord.x, xy * 4.0, fragCoord.y + 0.2);\n    \n    vec3 normal = normalize(cross(xx3 - x3, xy3 - x3));\n    \n    vec2 dir = iMouse.z > 0.0 ? normalize(iMouse.xy / iResolution.xy - vec2(0.5)) : vec2(1.0, 0.0); \n    \n    vec3 RayDir = vec3(0, -1.0, 0);\n    RayDir = reflect(RayDir, normal);\n    float waterLums = max(dot(normalize(vec3(dir.x, 0.2, dir.y)), RayDir), 0.0) * 0.4;\n    \n    RayDir = vec3(0, -1.0, 0);\n    RayDir = refract(RayDir, normal, 1.0 / 1.33);\n    \n    fragCoord.x += RayDir.x * (x + waterDepth);\n    fragCoord.y += RayDir.z * (x + waterDepth);\n    \n    vec4 outColor = texture(iChannel2, fragCoord.xy / iResolution.xy) * (1.0 - waterLums) + waterLums;\n    \n    fragColor = outColor;\n}","name":"Image","description":"","type":"image"}]}