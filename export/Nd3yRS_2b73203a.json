{"ver":"0.1","info":{"id":"Nd3yRS","date":"1653582710","viewed":70,"name":"new new new shader","username":"jiaolyulu1","description":"metaball","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.shadertoy.com/view/lsXGzM reference\n\nfloat speed=1.;\nfloat n=2.0;\nfloat smoothsteporiginsize=0.5;\nfloat smoothstepsize=0.65;\nfloat N21 (vec2 p){\n\tfloat d = fract(sin(p.x*110.+(8.21-p.y)*331.)*1218.);\n    return d;\n}\n\nfloat Noise2D(vec2 uv){\n    vec2 st = fract(uv);\n    vec2 id = floor(uv);\n    st = st*st*(3.0-2.0*st);\n    float c=mix(mix(N21(id),N21(id+vec2(1.0,0.0)),st.x),mix(N21(id+vec2(0.0,1.0)),N21(id+vec2(1.0,1.0)),st.x),st.y);\n\treturn c;\n}\n\n\nfloat blob(float x,float y,float fx,float fy,float size){\n   float xx = x+abs(iMouse.x/ iResolution.x-0.5)*sin(iTime/speed*size+fx)*size*5.;\n   float yy = y+abs(iMouse.x/ iResolution.x-0.5)*cos(iTime/speed*size+fy)*size*5.;\n   float value=pow(xx*xx+yy*yy,1.);\n\n   return min(90.,20./value)/5.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n   vec2 position = ( fragCoord.xy / iResolution.xy )-0.5;\n   position*=vec2(iResolution.x/iResolution.y,1.);\n   float mouseX=abs(iMouse.x/ iResolution.x-0.5);\n   float mouseY=abs(iMouse.y/ iResolution.y);\n   position+=(Noise2D(position*2.+vec2(iTime/9.))-0.5)/2.*mouseX;\n   position*=0.7;\n   \n   position*=1.0*pow((1.5-mouseX),2.);\n   float x = position.x*2.0;\n   float y = position.y*2.0;\n   float a[7];\n   a[0]=blob(0.4*x,0.4*y,mouseX*1.+1.,1.9-mouseX,0.9);\n   a[1] = blob(x,y,mouseX*1.+3.,1.9,0.6);\n   a[2]= blob(x,y,1.,0.9,0.75);\n   a[3]= blob(0.2*x,y,-mouseX*0.8+1.,1.9-1.4*mouseX,0.77) ; \n   a[4]=blob(x,y,2.,1.9,0.95);\n   a[5]=blob(x,y,-mouseX*0.4+1.,1.9,0.85);\n   a[6]=1.;\n   float alphaSum=0.;\n   for (int i=0;i<6;i++){\n       alphaSum+=a[i];\n   }\n   float alpha=smoothstep(0.9,4.6,alphaSum);\n   vec3 color[6];\n   color[0]=vec3(0.,0.,-1.);\n   color[1]=vec3(0.0,0.9,0.0);\n   color[2]=vec3(0.6,0.0,0.6);\n   color[3]=vec3(-0.5,-0.4,0.);\n   color[4]=vec3(0.0,0.7,0.2);\n   color[5]=vec3(0.7,0.2,0.0);\n   vec4 colorSum;\n   for (int i=0;i<6;i++){\n       colorSum+=vec4(a[i]*color[i],a[i]);\n   }\n   colorSum=min(vec4(6.),colorSum);\n   colorSum-= vec4(0.09*vec3(0.,0.,4.0)*max(0.,6.-abs(colorSum.r-colorSum.g)-abs(colorSum.b-colorSum.g)),colorSum.a);\n   vec4 colorFinal=colorSum/6.;\n\n  // originColor=min(vec4(1.),originColor);\n   //originColor=max(vec4(0.),originColor);\n   colorFinal=1.2-0.9*colorFinal;\n   vec4 d = vec4(Noise2D(position*1.+vec2(iTime/speed)),0.,1.,1.);\n   d=mix(d,colorFinal,alpha);\n   \n   \n\n   fragColor = d;\n}","name":"Image","description":"","type":"image"}]}