{"ver":"0.1","info":{"id":"lcjczd","date":"1722877766","viewed":45,"name":"Formas 4.2","username":"jpupper","description":"\n//4.2\n//Formas\n//Uso de radio y angulo como osciladores","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["mix","tutorial","sin","color","cos","shaders","shaders","livecoding","functions","taller","tutoriales","osciladores"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define resolution iResolution\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = gl_FragCoord.xy / resolution.xy; // De esta manera obtenemos las coordenadas cartesianas\n    \n    \n    vec2 p = vec2(0.5) - uv; //Genero un punto en el espacio(en este caso en el medio.\n    float r = length(p);  //Obtengo el radio\n    float a = atan(p.x,p.y);//obtengo el angulo. \n    \n    //Tambi√©n puedo utilizarlas de la misma manera que hice con las uv.x y uv.y para generar formas mas complejas.\n    \n    vec3 forma_radioangulocompleja = vec3(\n                                     sin(r*20.-time\n                                     +sin(a*10.+time\n                                     +sin(r*100.-time\n                                     +sin(a*10.\n                                     +sin(r*100.\n                                     +sin(a*10.))))))*0.5+0.5);\n    fragColor = vec4(forma_radioangulocompleja,1.0); \n\n}","name":"Image","description":"","type":"image"}]}