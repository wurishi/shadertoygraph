{"ver":"0.1","info":{"id":"ts3yRs","date":"1601494686","viewed":181,"name":"Portal transition","username":"RodzLabs","description":"This shader was generated using Material Maker, and is a port of @NaturallyCG Substance Designer Beginner Quick Tip 64 (Portal Transition).\nSource (for MM0.93): https://pastebin.com/raw/fm977MkX","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["generated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//---\n\nfloat rand(vec2 x) {\n    return fract(cos(dot(x, vec2(13.9898, 8.141))) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(vec3(dot(x, vec2(13.9898, 8.141)),\n                          dot(x, vec2(3.4562, 17.398)),\n                          dot(x, vec2(13.254, 5.867)))) * 43758.5453);\n}\n\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat shape_circle(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float distance = length(uv);\n    return clamp((1.0-distance/size)/edge, 0.0, 1.0);\n}\n\nfloat shape_polygon(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = atan(uv.x, uv.y)+3.14159265359;\n    float slice = 6.28318530718/sides;\n    return clamp((size-cos(floor(0.5+angle/slice)*slice-angle)*length(uv))/(edge*size), 0.0, 1.0);\n}\n\nfloat shape_star(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = atan(uv.x, uv.y);\n    float slice = 6.28318530718/sides;\n    return clamp((size-cos(floor(1.5+angle/slice-2.0*step(0.5*slice, mod(angle, slice)))*slice-angle)*length(uv))/(edge*size), 0.0, 1.0);\n}\n\nfloat shape_curved_star(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = max(edge, 1.0e-8);\n    float angle = 2.0*(atan(uv.x, uv.y)+3.14159265359);\n    float slice = 6.28318530718/sides;\n    return clamp((size-cos(floor(0.5+0.5*angle/slice)*2.0*slice-angle)*length(uv))/(edge*size), 0.0, 1.0);\n}\n\nfloat shape_rays(vec2 uv, float sides, float size, float edge) {\n    uv = 2.0*uv-1.0;\n\tedge = 0.5*max(edge, 1.0e-8)*size;\n\tfloat slice = 6.28318530718/sides;\n    float angle = mod(atan(uv.x, uv.y)+3.14159265359, slice)/slice;\n    return clamp(min((size-angle)/edge, angle/edge), 0.0, 1.0);\n}\n\nvec2 transform2_clamp(vec2 uv) {\n\treturn clamp(uv, vec2(0.0), vec2(1.0));\n}\n\nvec2 transform2(vec2 uv, vec2 translate, float rotate, vec2 scale) {\n \tvec2 rv;\n\tuv -= translate;\n\tuv -= vec2(0.5);\n\trv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;\n\trv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;\n\trv /= scale;\n\trv += vec2(0.5);\n\treturn rv;\t\n}const float p_o380674_contrast = 1.000000000;\nconst float p_o67156_translate_x = 0.000000000;\nconst float p_o67156_translate_y = 0.000000000;\nconst float p_o67156_scale_x = 1.000000000;\nconst float p_o67156_scale_y = 1.000000000;\nconst float p_o69819_sides = 6.000000000;\nconst float p_o69819_radius = 1.440000057;\nconst float p_o69819_edge = 1.000000000;\nconst float p_o231147_gradient_0_pos = 0.254545455;\nconst float p_o231147_gradient_0_r = 0.000000000;\nconst float p_o231147_gradient_0_g = 0.000000000;\nconst float p_o231147_gradient_0_b = 0.000000000;\nconst float p_o231147_gradient_0_a = 1.000000000;\nconst float p_o231147_gradient_1_pos = 0.309418002;\nconst float p_o231147_gradient_1_r = 1.000000000;\nconst float p_o231147_gradient_1_g = 1.000000000;\nconst float p_o231147_gradient_1_b = 1.000000000;\nconst float p_o231147_gradient_1_a = 1.000000000;\nvec4 o231147_gradient_gradient_fct(float x) {\n  if (x < p_o231147_gradient_0_pos) {\n    return vec4(p_o231147_gradient_0_r,p_o231147_gradient_0_g,p_o231147_gradient_0_b,p_o231147_gradient_0_a);\n  } else if (x < p_o231147_gradient_1_pos) {\n    return mix(vec4(p_o231147_gradient_0_r,p_o231147_gradient_0_g,p_o231147_gradient_0_b,p_o231147_gradient_0_a), vec4(p_o231147_gradient_1_r,p_o231147_gradient_1_g,p_o231147_gradient_1_b,p_o231147_gradient_1_a), ((x-p_o231147_gradient_0_pos)/(p_o231147_gradient_1_pos-p_o231147_gradient_0_pos)));\n  }\n  return vec4(p_o231147_gradient_1_r,p_o231147_gradient_1_g,p_o231147_gradient_1_b,p_o231147_gradient_1_a);\n}\nconst float p_o112336_default_in1 = 0.000000000;\nconst int seed_o156195 = 4417;\nconst float p_o156195_tx = 30.000000000;\nconst float p_o156195_ty = 30.000000000;\nconst float p_o156195_overlap = 2.000000000;\nconst float p_o156195_scale_x = 1.000000000;\nconst float p_o156195_scale_y = 1.000000000;\nconst float p_o156195_fixed_offset = 0.500000000;\nconst float p_o156195_offset = 0.300000012;\nconst float p_o156195_rotate = 0.000000000;\nconst float p_o156195_scale = 0.200000003;\nconst float p_o156195_value = 1.000000000;\nconst float p_o431480_gradient_0_pos = 0.000000000;\nconst float p_o431480_gradient_0_r = 0.000000000;\nconst float p_o431480_gradient_0_g = 0.000000000;\nconst float p_o431480_gradient_0_b = 0.000000000;\nconst float p_o431480_gradient_0_a = 1.000000000;\nconst float p_o431480_gradient_1_pos = 0.518181818;\nconst float p_o431480_gradient_1_r = 1.000000000;\nconst float p_o431480_gradient_1_g = 1.000000000;\nconst float p_o431480_gradient_1_b = 1.000000000;\nconst float p_o431480_gradient_1_a = 1.000000000;\nconst float p_o431480_gradient_2_pos = 1.000000000;\nconst float p_o431480_gradient_2_r = 0.000000000;\nconst float p_o431480_gradient_2_g = 0.000000000;\nconst float p_o431480_gradient_2_b = 0.000000000;\nconst float p_o431480_gradient_2_a = 1.000000000;\nvec4 o431480_gradient_gradient_fct(float x) {\n  if (x < p_o431480_gradient_0_pos) {\n    return vec4(p_o431480_gradient_0_r,p_o431480_gradient_0_g,p_o431480_gradient_0_b,p_o431480_gradient_0_a);\n  } else if (x < p_o431480_gradient_1_pos) {\n    return mix(vec4(p_o431480_gradient_0_r,p_o431480_gradient_0_g,p_o431480_gradient_0_b,p_o431480_gradient_0_a), vec4(p_o431480_gradient_1_r,p_o431480_gradient_1_g,p_o431480_gradient_1_b,p_o431480_gradient_1_a), ((x-p_o431480_gradient_0_pos)/(p_o431480_gradient_1_pos-p_o431480_gradient_0_pos)));\n  } else if (x < p_o431480_gradient_2_pos) {\n    return mix(vec4(p_o431480_gradient_1_r,p_o431480_gradient_1_g,p_o431480_gradient_1_b,p_o431480_gradient_1_a), vec4(p_o431480_gradient_2_r,p_o431480_gradient_2_g,p_o431480_gradient_2_b,p_o431480_gradient_2_a), ((x-p_o431480_gradient_1_pos)/(p_o431480_gradient_2_pos-p_o431480_gradient_1_pos)));\n  }\n  return vec4(p_o431480_gradient_2_r,p_o431480_gradient_2_g,p_o431480_gradient_2_b,p_o431480_gradient_2_a);\n}\nconst float p_o60972_sides = 6.000000000;\nconst float p_o60972_edge = 1.000000000;\nfloat o156195_input_in(vec2 uv) {\nfloat o60972_0_1_f = shape_circle((uv), p_o60972_sides, (0.1+0.02*sin(iTime*10.0))*1.0, p_o60972_edge*1.0);\nvec4 o431480_0_1_rgba = o431480_gradient_gradient_fct(o60972_0_1_f);\n\nreturn (dot((o431480_0_1_rgba).rgb, vec3(1.0))/3.0);\n}\nfloat o156195_input_mask(vec2 uv) {\n\nreturn 1.0;\n}\nvec4 tiler_o156195(vec2 uv, vec2 tile, int overlap, vec2 _seed) {\n\tfloat c = 0.0;\n\tvec3 rc = vec3(0.0);\n\tvec3 rc1;\n\tfor (int dx = -overlap; dx <= overlap; ++dx) {\n\t\tfor (int dy = -overlap; dy <= overlap; ++dy) {\n\t\t\tvec2 pos = fract((floor(uv*tile)+vec2(float(dx), float(dy))+vec2(0.5))/tile-vec2(0.5));\n\t\t\tvec2 seed = rand2(pos+_seed);\n\t\t\trc1 = rand3(seed);\n\t\t\tpos = fract(pos+vec2(p_o156195_fixed_offset/tile.x, 0.0)*floor(mod(pos.y*tile.y, 2.0))+p_o156195_offset*seed/tile);\n\t\t\tfloat mask = o156195_input_mask(fract(pos+vec2(0.5)));\n\t\t\tif (mask > 0.01) {\n\t\t\t\tvec2 pv = fract(uv - pos)-vec2(0.5);\n\t\t\t\tseed = rand2(seed);\n\t\t\t\tfloat angle = (seed.x * 2.0 - 1.0) * p_o156195_rotate * 0.01745329251;\n\t\t\t\tfloat ca = cos(angle);\n\t\t\t\tfloat sa = sin(angle);\n\t\t\t\tpv = vec2(ca*pv.x+sa*pv.y, -sa*pv.x+ca*pv.y);\n\t\t\t\tpv *= (seed.y-0.5)*2.0*p_o156195_scale+1.0;\n\t\t\t\tpv /= vec2(p_o156195_scale_x, p_o156195_scale_y);\n\t\t\t\tpv += vec2(0.5);\n\t\t\t\t \n\t\t\t\tseed = rand2(seed);\n\t\t\t\tfloat c1 = o156195_input_in(pv)*mask*(1.0-p_o156195_value*seed.x);\n\t\t\t\tc = max(c, c1);\n\t\t\t\trc = mix(rc, rc1, step(c, c1));\n\t\t\t}\n\t\t}\n\t}\n\treturn vec4(rc, c);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nvec2 UV = fragCoord/iResolution.xy;\nfloat o69819_0_1_f = shape_circle((UV), p_o69819_sides, p_o69819_radius*1.0, p_o69819_edge*1.0);\nvec4 o156195_0_rch = tiler_o156195((transform2_clamp(transform2((UV), vec2(p_o67156_translate_x*(2.0*1.0-1.0), p_o67156_translate_y*(2.0*1.0-1.0)), (sin(iTime)*50.0+180.0)*0.01745329251*(2.0*o69819_0_1_f-1.0), vec2(p_o67156_scale_x*(2.0*1.0-1.0), p_o67156_scale_y*(2.0*1.0-1.0))))), vec2(p_o156195_tx, p_o156195_ty), int(p_o156195_overlap), vec2(float(seed_o156195)));float o156195_0_1_f = o156195_0_rch.a;\nfloat o112336_0_clamp_false = o156195_0_1_f*(sin(iTime)*0.4+0.6);\nfloat o112336_0_clamp_true = clamp(o112336_0_clamp_false, 0.0, 1.0);\nfloat o112336_0_2_f = o112336_0_clamp_false;\nvec4 o231147_0_1_rgba = o231147_gradient_gradient_fct(o112336_0_2_f);\nvec4 o67156_0_1_rgba = o231147_0_1_rgba;\nvec4 o380674_0_1_rgba = vec4(clamp(o67156_0_1_rgba.rgb*p_o380674_contrast+vec3((sin(iTime)))+0.5-p_o380674_contrast*0.5, vec3(0.0), vec3(1.0)), o67156_0_1_rgba.a);\nfragColor = mix(texture(iChannel0, UV), texture(iChannel1, UV), o380674_0_1_rgba.x);\n}\n\n","name":"Image","description":"","type":"image"}]}