{"ver":"0.1","info":{"id":"Xs3GD8","date":"1449165227","viewed":165,"name":"Rotating dist map","username":"hamoid","description":"Rotating distance map","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["learning","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec2 toCartesian(in float radius, in float angle) {\n\treturn vec2(0.5, 0.5) + \n        radius * vec2(sin(angle), cos(angle));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 st = fragCoord.xy / iResolution.xy;\n    \n    float r, g, b;\n\n    float t = iTime * 3.0;\n    float t0 = 6.28 * texture(iChannel0, vec2(0.2)).r;\n    float t1 = 6.28 * texture(iChannel0, vec2(0.5)).r;\n    float t2 = 6.28 * texture(iChannel0, vec2(0.8)).r;\n\n    vec2 p0 = toCartesian(0.35, t0);\n    vec2 p1 = toCartesian(0.25, t1);\n    vec2 p2 = toCartesian(0.45, t2);\n        \n\tfloat d = distance(st, p0) + \n        distance(st, p1) + \n        distance(st, p2);\n    r = abs(sin(d * 15.0 + t));\n    g = abs(sin(d * 15.3 + t));\n    b = abs(sin(d * 15.6 + t));\n    \n\tfragColor = vec4(vec3(r, g, b),1.0);\n    \n}","name":"","description":"","type":"image"}]}