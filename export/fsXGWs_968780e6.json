{"ver":"0.1","info":{"id":"fsXGWs","date":"1616698971","viewed":74,"name":"something simple","username":"sullly","description":"first shader post","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","abstract","idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265358979\n#define time iTime\n\n\n//useful functions\nvec2 rotate(vec2 v, float a) { return mat2(cos(a), -sin(a), sin(a), cos(a))*v; }\nfloat remap(float v, float a, float b, float c, float d) { return (v - a) / (b - a) * (d - c) + c; }\nfloat divMod(float a, float m) { return remap(mod(a, m), 0.0, m, -1.0, 1.0); }\n\n\nvoid mainImage( out vec4 p, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n  uv -= 0.5;\n  uv.x = divMod(uv.x, 0.3);\n  uv.y = divMod(uv.y, 0.3);\n  \n  for (int i = 0; i < 8; ++i){\n    uv = abs(uv) - 0.09;\n    uv = rotate(uv, 0.5*time);\n    //uv = rotate(uv, abs(uv.y)- 0.2);\n    //uv = rotate(uv, abs(uv.x) + 0.1);\n  }\n  \n  p = vec4(sqrt(uv.x+uv.y),uv.x*uv.y, 0.1 / sqrt(uv.x+uv.y), 1.);\n}","name":"Image","description":"","type":"image"}]}