{"ver":"0.1","info":{"id":"XtfSR8","date":"1434235508","viewed":368,"name":"2dDrawTest_1","username":"gcorallo","description":"2d drawing test.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","symmetry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 rgb = vec3(0.,0.,0.);\n\t\n\t\n\tfloat time = iTime*.1;\t\n\t\n\tfloat f = iResolution.x/iResolution.y; \n\n\n\tfloat s = .3;\n\n\tvec2 pos  = mod( vec2(uv.x*f,uv.y)+vec2(time,0.) , vec2(s,s))- vec2(s*.5,s*.5);\n\tvec2 pos2  = mod( vec2(uv.x*f,uv.y)+vec2(-time,s*.5), vec2(s,s))- vec2(s*.5,s*.5);\n\tfloat d1 =dot(pos,pos)*uv.x*1000.;\n\tfloat d2 =dot(pos2,pos2)*(1000.-uv.x*1000.);\n\n\trgb.r+=(1.-step(0.0015*iResolution.x, d1 ))*(1.-uv.x);\n\trgb.g+=(1.-step(0.0015*iResolution.x, d2 ))*uv.x;\n\n\trgb.b = (rgb.r+rgb.g)*  (uv.y*.7+.3);\n\n\tfragColor = vec4(rgb,1.) ;\n    \n    \n   \n}","name":"Image","description":"","type":"image"}]}