{"ver":"0.1","info":{"id":"mdScRV","date":"1687899014","viewed":76,"name":"Chaos game fractal","username":"SnackEater","description":"fun with chaos","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["chaos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 DividedVec(vec2 a,vec2 b, float divisor){\n    vec2 c = vec2((a.x + b.x)/divisor,(a.y + b.y)/divisor);\n    return c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy - .5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 2.5;\n    vec3 col;\n    float Size = .006;\n    \n    vec2 p1 = vec2(-1,-1);   \n    vec2 p2 = vec2(0,1);   \n    vec2 p3 = vec2(1.,-1.);\n    if(length(uv - p1) < Size || length(uv - p2) < Size||length(uv - p3) < Size){\n        col.b = 1.;\n    }\n    \n   \n    vec2 p = vec2(0,0);\n    vec2 c;\n    float divisor = 2.;\n    for(float i = 1.; i <iTime * 50.;i++){\n        \n        float r = 2. * sin(i * sin(i *cos(i)));\n        if(r > 1.){\n            c = DividedVec(p,p1,divisor);\n        }\n        if(r < -1.){\n            c = DividedVec(p,p2,divisor);\n        }\n        if(r > -1. && r < 1.){\n            c = DividedVec(p,p3,divisor);\n        }\n        \n        if(length(uv - p) < Size || length(uv - c) < Size){\n            col.g = 1.;\n         }\n         p = c;\n        \n     } \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}