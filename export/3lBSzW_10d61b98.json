{"ver":"0.1","info":{"id":"3lBSzW","date":"1568812601","viewed":168,"name":"90's Mirrored Squares","username":"104","description":"Love 90's style","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float PI = 3.14159;\nconst float PI2 = PI*2.;\n\nvec3 dtoa(float d, vec3 amount){\n    return vec3(1. / clamp(d*amount, vec3(1), amount));\n}\nmat2 rot2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\nvec3 hash32(vec2 p) {\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\nfloat opUnion( float d1, float d2 ) { return min(d1,d2); }\n\nfloat sdSquare(vec2 p, vec2 center, float s) {\n\tvec2 d = abs(p-center) - s;\n\treturn min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n}\n\nconst float th = 1./3.;\nfloat hello(float sd, vec2 uv, float off, float a, vec2 sgn) {\n    sd = opUnion(sd, sdSquare((uv + sgn*vec2(.5,.5)+vec2(-off,0)) * rot2D(a), vec2(-th*.5), th*.5));\n    sd = opUnion(sd, sdSquare((uv + sgn*vec2(-.5,.5)+vec2(0,-off)) * rot2D(a+PI*.5), vec2(-th*.5), th*.5));\n    sd = opUnion(sd, sdSquare((uv + sgn*vec2(.5,-.5)+vec2(0,off)) * rot2D(a-PI*.5), vec2(-th*.5), th*.5));\n    sd = opUnion(sd, sdSquare((uv + sgn*vec2(-.5,-.5)+vec2(off,0)) * rot2D(a-PI), vec2(-th*.5), th*.5));\n    return sd;\n}\n\nfloat scurve(float x, float p) {\n    x = x / p * PI2;\n    return (x + sin(x+PI)) / PI2;\n}\n\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv *= 2.2;\n    float tsteady = iTime*.3;\n    float t = -scurve(tsteady, th);\n    \n    float seg = mod(t, 3.);\n    float aout = fract(seg)*PI*.5;\n    float ain = -(aout+PI*.5);\n    float offout = 0.;\n    float offin = th*2.;\n    if (seg >= 2.) {\n\t\taout = (fract(seg)-.5)*PI;\n        ain = PI;\n    } else if (seg >= 1.) {\n        offout = th*2.;\n    } else {\n        offout = th;\n        offin = th;\n    }\n\n    float sd = 1e6;\n    float sdout = 1e6;\n    sd = sdSquare(uv, vec2(0),.5); // base sq\n    \n    sdout = hello(sdout, uv, offout, aout, vec2(1)); // inner sq\n    sdout = hello(sdout, uv, offin, ain, vec2(1));\n\n    o.rgb = .8-dtoa(sd, 50.*vec3(50.,100.,200.)) * vec3(.3,.6,.3);\n    vec3 alout = dtoa(sdout, 2.*vec3(40.,200.,40.));\n    o.rgb = mix(o.rgb, vec3(.2,.7,.5), alout);\n    \n    o = clamp(o,o-o,o-o+1.);\n    \n    vec2 N = fragCoord / iResolution.xy-.5;\n    o = pow(o,o-o+.7);\n    o *= 1.-dot(N,N);\n    o.a = 1.;\n}\n\n","name":"Image","description":"","type":"image"}]}