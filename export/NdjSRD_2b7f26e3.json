{"ver":"0.1","info":{"id":"NdjSRD","date":"1619790771","viewed":410,"name":"1-bit noise","username":"redline2466","description":"1-bit greyscale effect based on a noise funciton","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["postprocessing","greyscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float randF(vec2 co){\n\treturn fract(sin(dot(co,vec2(12.9898,78.233)))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord/iResolution.xy;\n\tvec3 video = texture(iChannel0, uv).rgb;\n\tfloat grey = (video.r + video.g + video.b) / 3.;\n\n\t// increase contrast\n\tgrey = smoothstep(1., 0., grey);\n\n\t// convert to 1-bit based on noise\n\tgrey = step(grey, randF(uv+iTime/1000.));\n\n\tfragColor = vec4(vec3(grey),1.);\n}","name":"Image","description":"","type":"image"}]}