{"ver":"0.1","info":{"id":"XdyBDd","date":"1530977952","viewed":100,"name":"Efekti","username":"Lazzux","description":"Trying to make a demo effect.\n\nA friend of mine is having hard time getting this to work. Dunno why. Apparently in some cases on chrome you need to push pause and play again to make it run.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["attempt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float time = 0.0;\nvec2 uv;\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\n\nvec4 effect1(vec2 fragCoord)\n{\n    float edge1Pos = 0.15;\n    float edge2Pos = 0.35;\n    float edge3Pos = 0.65;\n    float edge4Pos = 0.85;\n    float edgeSize = 0.001;\n    float middle = sign(mix(-1.0, 1.0, uv.x));\n    float localTime = mod(time + 500.0, 2000.0);\n    float musicWave = texture(iChannel0, vec2(1.0 - uv.y, 0.0)).r * 100.0;\n    float musicBass = pow(texture(iChannel0, vec2(0.0, 1.0)).r, 0.5);\n    float waveSpeed = 0.5 +(cos(localTime + uv.x) * 2.0) + (min(0.0, middle) * (sin(localTime * 0.3 + uv.x))) + (max(0.0, middle) * mod(cos(localTime * 6.33 + sin(uv.x * 0.5 + musicBass * musicWave) + uv.y + musicBass + musicWave), 1.1));\n    float colorPosition = uv.x + (musicBass * 0.05) + sin((localTime + uv.y) * 5.0) * 0.025 * waveSpeed * middle; \n    \n    float firstColorChange = smoothstep(edge1Pos - edgeSize, edge1Pos + edgeSize, colorPosition);\n    float secondColorChange = smoothstep(edge2Pos - edgeSize, edge2Pos + edgeSize, colorPosition);\n    float thirdColorChange = smoothstep(edge3Pos - edgeSize, edge3Pos + edgeSize, colorPosition);\n    float fourthColorChange = smoothstep(edge4Pos - edgeSize, edge4Pos + edgeSize, colorPosition);\n    \n    vec4 background = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 color1 = vec4(0.9, 0.5412, 0.2, 1.0);\n    vec4 color2 = vec4(1.0, 1.0, 1.0, 2.0) - color1;\n    \n    vec4 pixelColor = mix(mix(background, color1, firstColorChange), mix(background, mix(color2, background, fourthColorChange), thirdColorChange), secondColorChange);\n    float colorVariance = ((mod(musicBass * 0.1 + colorPosition + localTime * 0.1 + waveSpeed * 0.001, 0.2) * 5.0) + 1.0) * 0.5;\n\n    return pixelColor * colorVariance;\n}\n\nvec4 effect2(vec2 fragCoord)\n{\n    fragCoord = (fragCoord/iResolution.xy - vec2(0.5, 0.5)) * vec2(iResolution.x/iResolution.y, 1.0);\n    float musicUV = abs((atan(fragCoord.x, fragCoord.y)) * (1.0 / 3.14));\n    float musicWave = texture(iChannel0, vec2(musicUV, 1.0)).r;\n    float bassWave = (texture(iChannel0, vec2(0.0, 0.0)).r);\n    float midWave = (texture(iChannel0, vec2(0.2, 0.0)).r);\n    float highWave = (texture(iChannel0, vec2(0.5, 0.0)).r);\n    float l = length(fragCoord);\n    float d = min(1.0, max(0.0,(l - musicWave * 0.5) * 15.0));\n    vec3 colorOffset = vec3((bassWave * 2.0), (midWave * 2.0), ((highWave) * 2.0)) * 0.5;\n    vec3 outcolor = min(vec3(1.0), max(vec3(0.0), pow(d + colorOffset * d, vec3(10.0))));\n    return vec4(outcolor, 1.0);\n}\n\nvec4 effect3(vec2 fragCoord)\n{\n    float soundWave = (texture(iChannel0, vec2(0.0, 1.0)).r);\n    float loopLength = 5.0;\n    float localTime = mod(time, loopLength);\n    float timeBetween = loopLength / 4.0;\n    float transitionTime = 0.25;\n    float rotation = 0.0;\n    for(float i = 0.0; i < 4.0; i+=1.0)\n    {\n        rotation = rotation + smoothstep(timeBetween * i, timeBetween * i + transitionTime, localTime);\n    }\n    rotation = rotation * 3.14 * 0.5;\n    vec2 localCoord = rotateUV(uv, rotation);\n    float ypos = texture(iChannel0, vec2(localCoord.x, 1.0)).r * 0.5 + 0.25;\n    ypos = smoothstep(ypos, ypos, localCoord.y);\n    vec3 color1 = vec3(0.5, 0.05, 1.0);\n    vec3 color2 = vec3(1.0, 1.0, 1.0) - color1;\n    return vec4(mix(color1, color2, ypos), 1.0);\n}\n\nvec4 effect4(vec2 fragCoord)\n{\n    fragCoord = (fragCoord/iResolution.xy - vec2(0.5, 0.5)) * vec2(iResolution.x/iResolution.y, 1.0);\n    float musicUV = abs((atan(fragCoord.x, fragCoord.y)) * (1.0 / 3.14));\n    float musicWave = texture(iChannel0, vec2(musicUV, 0.0)).r;\n    float bassWave = (texture(iChannel0, vec2(0.0, 0.0)).r);\n    float midWave = (texture(iChannel0, vec2(0.2, 0.0)).r);\n    float highWave = (texture(iChannel0, vec2(0.5, 0.0)).r);\n    float l = length(fragCoord);\n    float d = min(1.0, max(0.0,(l - musicWave * 0.5) * 5.0));\n    vec3 colorOffset = vec3((bassWave * 2.0), (midWave * 2.0), ((highWave) * 2.0)) * 0.5;\n    vec3 outcolor = min(vec3(1.0), max(vec3(0.0), pow(d + colorOffset * d, vec3(10.0))));\n    return vec4(vec3(1.0) - outcolor, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uv = fragCoord/iResolution.xy;\n    time = iChannelTime[0];\n    \n    // Calculate the effect results\n    vec4 effects[] = vec4[](\n        effect1(fragCoord),\n        effect2(fragCoord),\n        effect3(fragCoord),\n        effect4(fragCoord)\n    );\n    \n    // Some settings\n    float musicLength = 452.0;\n    float loopCount = 20.0;\n    float effectTransitionTime = 1.5;\n    \n    // How long one loop takes time, and clamp our timer to that\n    float showTime = musicLength / loopCount;\n    float effectTimer = mod(time, showTime);\n    float effectDuration = showTime / float(effects.length());\n    \n    // Switch between the effects\n    vec4 outColor = vec4(0.0);\n    for(int i = 0; i < effects.length(); i++)\n    {\n        float effectStartTime = effectDuration * float(i);\n        outColor = mix(outColor, effects[i], smoothstep(effectStartTime - effectTransitionTime, effectStartTime, effectTimer));\n    }\n    \n    // Loop around to the first effect at end\n    outColor = mix(outColor, effects[0], smoothstep(showTime - effectTransitionTime, showTime, effectTimer));\n    \n    //outColor = effects[0];\n    \n    fragColor = outColor;\n}","name":"Image","description":"","type":"image"}]}