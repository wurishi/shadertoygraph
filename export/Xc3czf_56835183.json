{"ver":"0.1","info":{"id":"Xc3czf","date":"1730933189","viewed":38,"name":"Deformed Kleinian Fractal","username":"IgorZdrowowicz","description":"weird fractal - similar to kleinian","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","kleinian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//use mouse (right top and bottom corners look the best)\n\nvec2 complex_pow(vec2 z1, vec2 z2)\n\n{\n    float a2b2 = z1.x*z1.x+z1.y*z1.y;\n    \n    float t1 = pow(a2b2,z2.x/2.0)*exp(-z2.y*atan(z1.y,z1.x));\n    \n    float t2 = z2.x*atan(z1.y,z1.x)+0.5*z2.y*log(a2b2);\n    \n    return vec2(t1*cos(t2),t1*sin(t2));\n}\n\nvec2 circinv(vec2 z)\n\n{\n    \n    float dotz = dot(z, z);\n    \n    return vec2(z.x / dotz,  -z.y / dotz);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;    \n    \n    vec2 z = (uv * 1.9)-0.;    \n    \n    vec2 power_base = vec2(2., 0.0);\n    \n    float scale_factor = 0.1;\n\n    vec2 mouse = iMouse.xy;\n   \n    if (length(iMouse.xy) < 30.0) \n    \n    {\n    \n    mouse.x = cos(iTime * 0.23) * 0.5 + 0.5;\n    \n    mouse.y = sin(iTime * 0.21) * 0.5 + 0.5;\n    \n    mouse *= iResolution.xy;\n    \n    }\n\nmouse = (mouse.xy / iResolution.xy - 0.5) / 5.0; \n    \n    for (int i = 0; i < 25; i++)\n    \n    {\n                      \n        z = circinv(z);\n        \n        vec2 z_pow = complex_pow(power_base, z);\n        \n        z = z_pow;\n        \n        z = z + circinv(z_pow);\n        \n        z *= scale_factor;  \n\n        z += mouse;       \n                        \n    } \n    \n    vec3 col = vec3(z.x , z.y, 0.2);\n    fragColor = vec4(col, 0.0);\n\n}","name":"Image","description":"","type":"image"}]}