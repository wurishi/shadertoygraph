{"ver":"0.1","info":{"id":"WlXXW8","date":"1563914869","viewed":306,"name":"~Circle0","username":"sequential","description":"a circle with blurred edges","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Aspect ratio of the screen\n\tfloat aspect_ratio = iResolution.x / iResolution.y;\n    \n    // Center coordinates around (0, 0)\n    vec2 offset = vec2(-0.5, -0.5);\n    uv = uv + offset;\n    \n    // Equalize width and height\n    uv.x = uv.x * aspect_ratio;\n    \n\t// Distance from center to the pixel\n    float d = length(uv * aspect_ratio);\n    \n    // Radius of the desired circle\n\tfloat r = 0.4;\n    \n    // smoothstep(a, b, value) <=> easeInOut(a, b, value)\n\tfloat c = smoothstep(r, r-0.02, d);\n    \n    // Create the pixel color (rgb)\n    vec3 color = vec3(c);\n    \n    // Output to screen\n    fragColor = vec4(color, 0.5);\n}","name":"Image","description":"","type":"image"}]}