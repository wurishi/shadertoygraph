{"ver":"0.1","info":{"id":"ddGcDd","date":"1696735196","viewed":125,"name":"BokehBlur-test","username":"nomkcode_g","description":"散景模糊，圆形散景，基于对大量离散螺旋型分布的点的渲染，不同的模糊半径变化，可以控制不同的Bokeh半径的变化","likes":0,"published":3,"flags":32,"usePreview":1,"tags":["bokehblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    if(uv.x > iMouse.x / iResolution.x){\n        col = texture(iChannel0, uv).rgb;\n    }else{\n        col = texture(iChannel1, uv).rgb;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float _BlurRadius = 1.0;\nint _Iteration = 32;\nmat2 _Rot = mat2(cos(2.39996323), sin(2.39996323), -sin(2.39996323), cos(2.39996323));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 accumulator = vec3(0.0);\n    vec3 divisor = vec3(0.0);\n    \n    float r = 1.0;\n    vec2 angle = vec2(0.0, _BlurRadius);\n    for(int j = 0; j < _Iteration; j++)\n    {\n        r += 1.0 / r;\n        angle = angle*_Rot;\n        vec3 bokeh = texture(iChannel0, uv + (r-1.0)*angle/vec2(iResolution.x,iResolution.y)).rgb;\n        accumulator += bokeh * bokeh;\n        divisor += bokeh;\n    }\n    vec3 col = accumulator / divisor;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}