{"ver":"0.1","info":{"id":"l3sfzs","date":"1728809127","viewed":360,"name":"trick or treat","username":"yasuo","description":"halloweeeeeeeen","likes":27,"published":3,"flags":0,"usePreview":0,"tags":["graphicdesign","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S2(d,b) smoothstep(1.,-1., (d - b) / fwidth(d) )\n#define S(d,b) smoothstep(antialiasing(2.),-antialiasing(2.),d - b)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define deg45 .707\n#define R45(p) (( p + vec2(p.y,-p.x) ) *deg45)\n#define Tri(p,s) max(R45(p).x,max(R45(p).y,B(p,s)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define SkewY(a) mat2(1.0,0.0,tan(a),1.0)\n// https://en.wikipedia.org/wiki/Log-polar_coordinates\n#define PUV(p)vec2(log(length(p)),atan(p.y/p.x))\n\nfloat Hash(vec2 p){\n    vec2 randP = fract(sin(p*123.456)*567.89);\n    randP += dot(randP,randP*34.56);\n    float n = fract(randP.x*randP.y); \n    return n;\n}\n\n\n// thx iq! https://iquilezles.org/articles/distfunctions/\nfloat smin( float d1, float d2, float k )\n{\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nfloat bat(vec2 p){\n    p.x*=1.+sin(iTime*5.)*0.05;\n    vec2 prevP = p;\n\n    p.x*=1.2;\n    p.y*=-0.8;\n    p-=vec2(0.,0.1);\n    \n    float d = Tri(p,vec2(0.1));\n    p = prevP;\n    p.x*=1.2;\n    p.y*=-1.;\n    p-=vec2(0.,0.03);\n    float m = Tri(p,vec2(0.1));\n    d = max(-m,d);\n    p = prevP;\n    p.x = abs(p.x)-0.11;\n    p.y-=0.01;\n    p.y*=0.7;\n    p*=Rot(radians(-2.));\n    float d2 = Tri(p,vec2(0.1));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.11;\n    p.y+=0.05;\n    p.y*=0.7;\n    p*=Rot(radians(-2.));\n    m = Tri(p,vec2(0.1));\n    d = max(-m,d);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.23;\n    p.y*=-1.0;\n    p-=vec2(0.,0.12);\n    p*=SkewY(radians(35.));\n    p*=Rot(radians(-12.));\n    p*=vec2(0.7,0.55);\n    d2 = Tri(p,vec2(0.1));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.21;\n    p.y*=-1.0;\n    p-=vec2(0.015,0.07);\n    p*=SkewY(radians(35.));\n    p*=Rot(radians(-12.));\n    p*=vec2(0.7,0.55);\n    p*=1.8;\n    m = Tri(p,vec2(0.1));\n    d = max(-m,d);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.35;\n    p-=vec2(0.035,0.041);\n    p*=Rot(radians(-237.));\n    p.x*=0.75;\n    d2 = Tri(p,vec2(0.05));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.35;\n    p-=vec2(-0.025,-0.06);\n    p*=Rot(radians(-237.));\n    p.x*=0.75;\n    d2 = Tri(p,vec2(0.05));\n    d = min(d,d2);    \n    \n    p = prevP;\n    p.x = abs(p.x)-0.045;\n    p.x*=2.5;\n    p.y*=0.9;\n    p*=SkewX(radians(-60.));\n    p-=vec2(0.,0.098);\n    d2 = Tri(p,vec2(0.08));\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=-1.;\n    p.x*=1.8;\n    p-=vec2(0.,0.235);\n    d2 = Tri(p,vec2(0.08));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat punpkinBody(vec2 p){\n    p.y*=1.15;\n    vec2 prevP = p;\n    float d = B(p,vec2(0.08));\n    p.y = abs(p.y)-0.14;\n    \n    float d2 = B(p,vec2(0.08));\n    float a = radians(10.);\n    p.x = abs(p.x)-0.07;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.165;\n    d2 = B(p,vec2(0.07,0.08));\n    d = min(d,d2);\n    p.y = abs(p.y)-0.15;\n    p.y*=1.1;\n    p.x+=0.012;\n    p*=SkewX(radians(9.));\n    d2 = B(p,vec2(0.07,0.08));\n    a = radians(30.);\n    p.x-=0.045;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y = abs(p.y)-0.09;\n    d = max(-B(p,vec2(10.,0.01)),d);\n    return d;\n}\n\nfloat punpkin(vec2 p){\n    vec2 prevP = p;\n    float d = punpkinBody(p);\n    p.x = abs(p.x)-0.1;\n    p.x*=1.2;\n    p.y-=0.14;\n    p.y*=0.8;\n    float m = Tri(p,vec2(0.08));\n    d = max(-m,d);\n    \n    p = prevP;\n    p.x*=1.5;\n    p.y-=0.04;\n    m = Tri(p,vec2(0.06));\n    d = max(-m,d);\n    \n    p = prevP;\n    p.y+=0.12;\n    m = B(p,vec2(0.038,0.026));\n    d = max(-m,d);\n    p.x = abs(p.x)-0.1;\n    p.y-=0.023;\n    p*=Rot(radians(-20.));\n    p*=SkewX(radians(-50.));\n    \n    m = B(p,vec2(0.1,0.025));\n    \n    p = prevP;\n    m = max(-(p.y+0.145),m);\n    d = max(-m,d);\n    \n    p.x = abs(p.x)-0.035;\n    p.y+=0.06;\n    p*=Rot(radians(-20.));\n    m = Tri(p,vec2(0.04));\n    d = max(-m,d);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.11;\n    p.y+=0.03;\n    p*=Rot(radians(-20.));\n    m = Tri(p,vec2(0.04));\n    d = max(-m,d);    \n    \n    p = prevP;\n    p.x = abs(p.x)-0.11;\n    p.y+=0.15;\n    p.y*=-1.;\n    p*=Rot(radians(20.));\n    m = Tri(p,vec2(0.04));\n    d = max(-m,d);   \n    \n    p = prevP;\n    \n    p.y-=0.25;\n    p*=SkewX(radians(-15.));\n    p.x -=0.01;\n    float d2 = B(p,vec2(0.05,0.04));\n    float a = radians(10.);\n    p.x = abs(p.x)-0.03;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat stripes(vec2 p, float dir){\n    vec2 prevP = p;\n    \n    p*=Rot(radians(30.));\n    p.x+=iTime*0.03*dir;\n    p.x = mod(p.x,0.02)-0.01;\n    \n    float d = B(p,vec2(0.003,10.));\n    return d;\n}\n\nfloat dots(vec2 p, float dir){\n    p*=Rot(radians(30.));\n    p.x+=iTime*0.03*dir;\n    p = mod(p,0.04)-0.02;\n    \n    float d = length(p)-0.012;\n    return d;\n}\n\nfloat candyParts(vec2 p){\n    vec2 prevP = p;\n    p.x = abs(p.x)-0.08;\n    p.y*=1.3;\n    p*=Rot(radians(-90.));\n    float d = Tri(p,vec2(0.1));\n    p.x*=0.3;\n    p.y+=0.07;\n    float m = Tri(p,vec2(0.1));\n    d = max(-m,d);\n    p = prevP;\n    p.x = abs(p.x)-0.18;\n    p.y*=1.3;\n    p*=Rot(radians(90.));\n    float d2 = Tri(p,vec2(0.05));\n    d = min(d,d2);\n    return d;\n}\n\nfloat candy(vec2 p){\n    vec2 prevP = p;\n    p.x*=0.7;\n    float d = length(p)-0.08;\n    p = prevP;\n    float d2 = candyParts(p);\n    d = min(d,d2);\n    d = abs(d)-0.002;\n    \n    p.x*=0.7;\n    d2 = max(min(d2,length(p)-0.08),stripes(p,1.));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat candy2(vec2 p){\n    vec2 prevP = p;\n    float d = abs(length(p-vec2(0.0,0.05))-0.05)-0.02;\n    d = max(-p.y+0.05,d);\n    float d2 = B(p-vec2(-0.05,-0.045),vec2(0.02,0.1));\n    d = min(d,d2);\n    \n    return min(abs(d)-0.002,max(stripes(p,-1.),d));\n}\n\nfloat coffin(vec2 p){\n    p*=Rot(radians(sin(iTime*5.)*5.));\n    vec2 prevP = p;\n    float d = B(p,vec2(0.1,0.2));\n    float a = radians(15.);\n    p.x = abs(p.x)-0.1;\n    p.y-=0.05;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    p = prevP;\n    \n    a = radians(-10.);\n    p.x = abs(p.x)-0.1;\n    p.y-=0.04;\n    d = abs(abs(max(dot(p,vec2(cos(a),sin(a))),d))-0.012)-0.005;\n    \n    p = prevP;\n    p*=Rot(radians(sin(iTime*4.)*5.));\n    p.y-=0.075;\n    float d2 = B(p,vec2(0.05,0.01));\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(sin(iTime*4.)*5.));\n    p.y-=0.025;\n    d2 = B(p,vec2(0.01,0.1));\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat spiderNetParts(vec2 p){\n    vec2 prevP = p;\n    p.x = abs(p.x)-0.06;\n    p*=Rot(radians(30.));\n    float d = B(p,vec2(0.005,0.13));\n    \n    float k = 10.0;\n    \n    p = prevP;\n    p.y+=0.05;\n    \n    float c = cos(k*p.x);\n    float s = sin(k*p.x);\n    mat2  m = mat2(c,s,-s,c);\n    p*=m;\n    float d2 = B(p,vec2(0.04,0.004));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x*=0.45;\n    p*=m;\n    \n    d2 = B(p,vec2(0.06,0.004));\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y-=0.049;\n    p.x*=0.18;\n    p*=m;\n    \n    d2 = B(p,vec2(0.05,0.004));\n    d = min(d,d2);    \n    \n    return d;\n}\n\nfloat spiderNet(vec2 p){\n    vec2 prevP = p;\n    p*=1.+sin(iTime*5.)*0.05;\n    p = DF(p,vec2(1.5));\n    p-=0.07;\n    p*=Rot(radians(45.));\n    float d = spiderNetParts(p);\n    return d;\n}\n\nfloat ghostBase(vec2 p){\n    vec2 prevP2 = p;\n    p.x = abs(p.x);\n    p*=SkewX(radians(10.));\n    vec2 prevP = p;\n    p.y-=0.05;\n    float d = length(p)-0.1;\n    p = prevP;\n    p.y+=0.03;\n    float d2 = B(p,vec2(0.1,0.08));\n    d = min(d,d2);\n    d = max(-p.x,d);\n    p = prevP2;\n    d2 = length(p-vec2(0.,0.07))-0.085;\n    d = smin(d,d2,0.01);\n    d2 = B(p-vec2(0.,-0.03),vec2(0.05,0.08));\n    d = min(d,d2);\n    return d;\n}\n\nfloat ghost(vec2 p){\n    p.y*=1.+sin(iTime*5.)*0.05;\n    vec2 prevP = p;\n    float d = ghostBase(p);\n    p.x-=iTime*0.05;\n    p.x = mod(p.x,0.08)-0.04;\n    p.y+=0.125;\n    float d2 = length(p)-0.04;\n    d = max(-d2,d);\n    \n    p = prevP;\n    p.x*=1.8;\n    p.x = abs(p.x)-0.045;\n    p.y-=0.05;\n    d2 = length(p)-0.03;\n    d = max(-d2,d);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.11;\n    p.y-=0.04;\n    p*=Rot(radians(40.));\n    p*=SkewY(radians(40.));\n    p.x*=1.8;\n    d2 = length(p)-0.04;\n    d = min(d,d2);\n    \n    p = prevP;\n    return max(stripes(p,-1.),d);\n}\n\nfloat hatBase(vec2 p){\n    vec2 prevP = p;\n    p-=vec2(0.,0.23);\n    p.y*=0.5;\n    float d = Tri(p,vec2(0.1));\n    p = prevP;\n    float d2 = B(p,vec2(0.1,0.03));\n    d = min(d,d2);\n    p-=vec2(0.,0.07);\n    p.x*=0.7;\n    d2 = Tri(p,vec2(0.15));\n    d = abs(min(d,d2))-0.005;\n    \n    p = prevP;\n    p-=vec2(0.,0.22);\n    p.y*=0.5;\n    d = max(-Tri(p,vec2(0.1)),d);\n    \n    p = prevP;\n    p-=vec2(0.,0.015);\n    d2 = abs(B(p,vec2(0.098,0.017)))-0.005;\n    d = min(d,d2);\n    \n    p = prevP;\n    \n    p-=vec2(0.116,0.262);\n    p*=Rot(radians(63.));\n    p.x*=1.5;\n    p.y*=0.4;\n    d2 = abs(Tri(p,vec2(0.05)))-0.006;\n    d2 = max(-p.y-0.045,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p-=vec2(0.,0.23);\n    p.y*=0.5;\n    d2 = Tri(p,vec2(0.1));\n    d = min(d,max(dots(prevP,1.),d2));\n    \n    p = prevP;\n    p-=vec2(0.,0.07);\n    p.x*=0.7;\n    d2 = Tri(p,vec2(0.15));\n    d2 = max(p.y+0.075,d2);\n    d = min(d,max(stripes(prevP,-1.),d2));\n    return d;\n}\n\nfloat hat(vec2 p){\n    vec2 prevP = p;\n    float d = hatBase(p);\n    return d;\n}\n\nfloat star(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(-18.));\n    p = DF(p,vec2(1.25));\n    p-=0.1;\n    p*=Rot(radians(45.));\n    p.x*=1.5;\n    \n    float d = Tri(p,vec2(0.15));\n    return d;\n}\n\nfloat moon(vec2 p){\n    vec2 prevP = p;\n    float d = length(p)-0.15;\n    float d2 = length(p-vec2(-0.08,0.))-0.15;\n    d = max(-d2,d);\n    return d;\n}\n\nfloat centerGraphics(vec2 p){\n    vec2 prevP = p;\n    \n    p*=Rot(radians(10.*iTime));\n    p = DF(p,vec2(4.));\n    p-=0.2;\n    p*=Rot(radians(45.));\n    p*=3.;\n    float d = moon(p);\n    p = prevP;\n    \n    p*=2.;\n    float d2 = bat(p);\n    d = min(d,d2);\n    p = prevP;\n    \n    p*=Rot(radians(-5.*iTime));\n    p = DF(p,vec2(5.));\n    p-=0.26;\n    p*=Rot(radians(50.));\n    p*=5.;\n    d2 = star(p);\n    d = min(d,d2);\n    p = prevP;\n    \n    p*=Rot(radians(7.*iTime));\n    p = DF(p,vec2(5.));\n    p-=0.3;\n    p*=Rot(radians(135.));\n    p*=-3.;\n    d2 = candy2(p);\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(-10.*iTime));\n    p = DF(p,vec2(4.));\n    p-=0.14;\n    p*=Rot(radians(50.));\n    p*=7.;\n    d2 = abs(star(p))-0.01;\n    d = min(d,d2);\n    \n    p = prevP;\n    p*=Rot(radians(-120.*sin(iTime*0.2)));\n    p = DF(p,vec2(8.));\n    p-=0.335;\n    p*=Rot(radians(50.));\n    p*=5.;\n    d2 = abs(length(p)-0.06)-0.01;\n    d2 = min(length(p)-0.02,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x = abs(p.x)-0.5;\n    p.y = abs(p.y)-0.37;\n    p*=Rot(radians(80.));\n    p*=2.;\n    d2 = spiderNet(p);\n    d = min(d,d2);\n    \n    return d;\n}\n\nvec3 bg(vec2 p, vec3 col){\n    p*=Rot(radians(10.*iTime));\n    p = PUV(p);\n    \n    p.x-=iTime*0.25;\n    \n    p*=2.54;\n    vec2 id = floor(p);\n    \n    p = fract(p)-0.5;\n    \n    float n = Hash(id);\n    \n    p = mod(p,0.1)-0.05;\n    float d = length(p)-0.005;\n    col = mix(col,vec3(0.95,1.,0.95)*0.6,S2(d,0.0));\n    \n    return col;\n}\n\nvec3 drawTex(vec2 p, vec3 col) {\n    vec2 prevP = p;\n    p*=Rot(radians(10.*iTime));\n    p = PUV(p);\n    \n    p.x-=iTime*0.2;\n    \n    p*=2.54;\n    vec2 id = floor(p);\n    \n    p = fract(p)-0.5;\n    \n    float n = Hash(id);\n    \n    float d = 10.;\n    p*=Rot(radians(90.));\n    p*=0.5+(min(n,0.2));\n    if(n<0.2){\n        p*=1.6;\n        d = bat(p);\n    } else if(n>=0.2 && n<0.4) {\n        d = punpkin(p);\n    } else if(n>=0.4 && n<0.5) {\n        d = candy(p);\n    } else if(n>=0.5 && n<0.6) {\n        d = coffin(p);\n    } else if(n>=0.6 && n<0.8) {\n        p*=0.7;\n        d = spiderNet(p);\n    } else if(n>=0.8 && n<0.9) {\n        p*=0.5;\n        d = ghost(p);\n    } else if(n>=0.9 && n<1.) {\n        d = hat(p);\n    }\n    \n    col = mix(col,vec3(0.95,1.,0.95)*0.6,S(d,0.0));\n    \n    p = prevP;\n    d = length(p)-0.01;\n    col = mix(col,vec3(0.0),1.-smoothstep(0.,1.,d));\n    \n    d = centerGraphics(p);\n    col = mix(col,vec3(0.95,1.,0.95),S(d,0.0));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.);\n    col = bg(uv,col);\n    col = drawTex(uv,col);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}