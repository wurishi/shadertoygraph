{"ver":"0.1","info":{"id":"MdGXRy","date":"1464973341","viewed":1217,"name":"Sine Spikes","username":"AV2012","description":"Adapted from some shader code on youtube, but I tweaked a bit and was happy with what I came up with. ","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["backgroundanimation","sinespike"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p)\n{\n\tvec3 q = fract(p) * 2.0 - 1.0;\n\treturn length(q) - 0.25;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n\tfloat t = 0.0;\n\tfor (int i=0; i<16; i++) {\n\tvec3 p = o + r * t;\n\tfloat d = map(p);\n\tt += d * 0.5;\n\t\n\t}\n\treturn t;\n}\n\nvoid mainImage ( out vec4 fragColour, in vec2 fragCoord )\n{\n\t\n   \tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    uv = uv * 2.0 - 1.0;\n\t\n    uv.x *= iResolution.x / iResolution.y;\n\n\tvec3 r = normalize(vec3(uv, 1.0));\n    \n\n\tfloat the = iTime * 0.25;\n\tr.xz *= mat2(cos(the), sin(the), -sin(the), -cos(the));\n\n\tvec3 o = vec3(0.0, iTime, iTime);\n\n\tfloat t = trace(o,r);\n\n\tfloat fog = 1.0 / (1.0 +t *t * 0.1);\n\tvec3 fc = vec3(fog);\n\tfragColour = vec4(fc,1.0);\n\n}","name":"Image","description":"","type":"image"}]}