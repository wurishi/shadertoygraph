{"ver":"0.1","info":{"id":"4sKcRh","date":"1521007819","viewed":212,"name":"ninja-star","username":"arxyz","description":"spin thingy","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["spinner","loader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n#define SPEED 2.8\n#define PI 3.141593\n\n\n//signed distance to a 2D triangle by iq : https://www.shadertoy.com/view/XsXSz4\nfloat sdTriangle( in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p )\n{\n    vec2 e0 = p1 - p0;\n    vec2 e1 = p2 - p1;\n    vec2 e2 = p0 - p2;\n\n    vec2 v0 = p - p0;\n    vec2 v1 = p - p1;\n    vec2 v2 = p - p2;\n\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    \n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min( min( vec2( dot( pq0, pq0 ), s*(v0.x*e0.y-v0.y*e0.x) ),\n                       vec2( dot( pq1, pq1 ), s*(v1.x*e1.y-v1.y*e1.x) )),\n                       vec2( dot( pq2, pq2 ), s*(v2.x*e2.y-v2.y*e2.x) ));\n\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat pit = PI*2.0/3.0; \n\nfloat a0 = 0.*PI*2.0/3.0;\nfloat a1 = 1.*PI*2.0/3.0; \nfloat a2 = 2.*PI*2.0/3.0;\n\n\nfloat b = 0.01;\nfloat r = 0.1;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float t = iTime*SPEED;\n    float rot = sin(t);\n    vec2 uv = vec2(fragCoord/iResolution.y);\n    uv.y -= 0.5;\n    uv.x -= iResolution.x/iResolution.y/2.;\n    uv*=0.5;\n    float dist = pow(length(uv*5.0),.5);\n    float twist = (rot/pit) * 6.0;\n    float bend = dist * twist - twist*.75;\n\n    float angle_offset = mod(sin(t),pit) - bend;\n    vec2 v0 = vec2(cos(a0-angle_offset)*r,sin(a0-angle_offset)*r);\n    vec2 v1 = vec2(cos(a1-angle_offset)*r,sin(a1-angle_offset)*r);\n    vec2 v2 = vec2(cos(a2-angle_offset)*r,sin(a2-angle_offset)*r);\n\n    float d = sdTriangle( v0, v1, v2, uv);   \n    float col = clamp(d*500.0,.0,1.);\n    fragColor = vec4(1.0-vec3(col)*1.5,1.0);\n}","name":"Image","description":"","type":"image"}]}