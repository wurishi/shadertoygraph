{"ver":"0.1","info":{"id":"7ltyDl","date":"1660795144","viewed":94,"name":"Advection 3 (b&w illusion)","username":"Rugged","description":"I'm working on fluids but thought it was interesting. Haven't been coding for a few days now thought I should get back to working on making fluids.\n\nAny ideas? Also every pixel is just black or white if you pause it but is colored while running.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0, uv);\n    \n    \n    \n    fragColor = vec4(col.z);//vec4(pow(length(col), 2.) / 60.);\n    //vec4(dot(normalize(col.xy), normalize(uv - vec2(0.5))));//vec4(1./length(col));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"precision highp float;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"precision highp float;\n\nfloat hash3(vec2 xy){\n    xy = mod(xy, .19);\n    float h = dot(xy.yyx,vec3(.013, 27.15, 2027.3));\n    h *= h;\n    h *= fract(h);\n    \n    return fract(h);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 uvc = uv - vec2(0.5);\n    \n    vec4 col = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    \n    ivec2 fragI = ivec2(fragCoord);\n    \n    if(iFrame == 0){\n        col = normalize(vec4(-uvc.y, uvc.x, 0., 0.));\n        //col *= col * col;\n        col.z = distance(uvc, vec2(0.)) + hash3(uv);\n    }\n    else if(distance(uvc, vec2(0.)) < 1.) {\n        \n        ivec2 ex = ivec2(1, 0);\n        ivec2 ey = ivec2(0, 1);\n        \n        vec4 u = texelFetch(iChannel0, fragI, 0);\n        //vec4 uf = texelFetch(iChannel0, ivec2(fragCoord + u.xy), 0);\n        //vec4 ub = texelFetch(iChannel0, ivec2(fragCoord - u.xy), 0);\n        \n        vec4 Ufx = texelFetch(iChannel0, fragI + ex, 0);\n        vec4 Ubx = texelFetch(iChannel0, fragI - ex, 0);\n        vec4 Ufy = texelFetch(iChannel0, fragI + ey, 0);\n        vec4 Uby = texelFetch(iChannel0, fragI - ey, 0);\n        \n        vec4 Uavg = ((Ufx + Ubx + Ufy + Uby) - (4. * u)) / 4.;\n        \n        //vec4 ud = u - ub;\n        \n        u = Uavg;//-ud * iTimeDelta * 1.;\n        \n        col = u;\n        \n    }\n    \n    \n    \n    fragColor = col;\n}","name":"Buffer B","description":"","type":"buffer"}]}