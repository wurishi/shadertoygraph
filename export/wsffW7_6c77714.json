{"ver":"0.1","info":{"id":"wsffW7","date":"1588359101","viewed":134,"name":"#gravity","username":"bkpjjj","description":".","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["gravity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec2 uv){\n \treturn fract(sin(dot(uv,vec2(154.45,64.548))) * 124.54)  ; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspec = iResolution.x / iResolution.y;\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    col += pow(hash(uv),200.) * 0.5;\n    col += texture(iChannel1,uv).rgb;\n    col += texture(iChannel0,uv).rgb * 0.15;\n    //col += texture(iChannel2,uv).rgb;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Trail\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel1,fragCoord.xy / iResolution.xy);\n    fragColor += texture(iChannel0,fragCoord.xy / iResolution.xy) * 0.95;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//Drawing\nvec3 circle(vec2 uv,float a,vec2 pos,vec3 color,vec2 size,float bl){\n    pos.x *= a;\n \tfloat dist = length(uv - pos);\n    float circle = smoothstep(size.x,size.y,dist);\n    float flare = smoothstep(size.x,0.01,dist) * (0.3 + bl);\n    vec3 c_circle = circle * color + flare;   \n    return c_circle;\n}\n\nvec2 get_pos(int id){\n    \n    vec2 pos = texture(iChannel0,vec2(1. / 9. * 0.5 + (1. / 9. * 3.) * float(id),0.)).rg;\n    return pos;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspec = iResolution.x / iResolution.y;\n    uv.x *= aspec;\n\n    uv = mix(uv,vec2(0.5 * aspec,0.5),-2.);\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    \n    \n\tcol += circle(uv,aspec,get_pos(0),vec3(0.5,0.1,0.1),vec2(0.05,0.01),0.);\n    col += circle(uv,aspec,get_pos(1),vec3(0.1,0.5,0.1),vec2(0.05,0.01),0.);\n    col += circle(uv,aspec,get_pos(2),vec3(1.5,1.4,0.1),vec2(0.15,0.01),0.2);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"#define ATTRACTOR 1\n\nconst float G = 6.67408;\n\nstruct Body{\n    vec2 pos;\n    vec2 acc;\n    float mass;\n};\n\n\nBody[3] bodys = Body[3](\n\tBody(vec2(-0.1,0.25),vec2(0.1,1.2),0.0008),\n    Body(vec2(0.85,0.25),vec2(1.9,0.7),0.0015),\n    Body(vec2(0.5,0.5),vec2(0.0),1.7)\n);\n    \nvec4 draw_data(vec2 uv,int id){\n    vec4 fragColor;\n \tBody body = bodys[id];\n    fragColor.xy += body.pos * step(0.,uv.x) * step(1. / 3. * 2.,1.-uv.x);\n    fragColor.xy += body.acc * step(1. / 3.,uv.x) * step(1. / 3.,1.-uv.x);\n    fragColor += body.mass   * step(1. / 3. * 2.,uv.x) * step(0.,1.-uv.x);   \n    return fragColor;\n}\n\nBody get_data(int id){\n    Body body;\n    body.pos = texture(iChannel0,vec2(1. / 9. * 0.5 + (1. / 9. * 3.) * float(id),0.)).rg;\n\tbody.acc = texture(iChannel0,vec2(1. / 9. * 1.5 + (1. / 9. * 3.) * float(id),0.)).rg;\n    body.mass = texture(iChannel0,vec2(1. / 9. * 2.5 + (1. / 9. * 3.) * float(id),0.)).r;\n    return body;\n}\n\n//Physics\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float asp = iResolution.x / iResolution.y;\n    \n    int id = int(floor(uv * 3.));\n    uv = fract(uv * 3.);\n    \n    for(int i = 0;i < 3;i++){\n        if(iFrame != 0)\n    \t\tbodys[i] = get_data(i);\n        \n        for(int id = 0;id < 3;id++){\n         \tif(id == i)\n                continue;\n            float R = distance(bodys[i].pos,bodys[id].pos);\n            float F = G * ((bodys[i].mass * bodys[id].mass) / (R * R));\n            \n            bodys[id].acc += normalize(bodys[i].pos - bodys[id].pos) * F;\n        }\n        #if ATTRACTOR\n        bodys[2].acc = vec2(0);\n        #endif\n        bodys[i].pos += bodys[i].acc * 0.01;\n        \n\t\t\n    }\n  \n\t\n   \tfragColor = draw_data(uv,id);\n}","name":"Buffer C","description":"","type":"buffer"}]}