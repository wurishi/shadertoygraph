{"ver":"0.1","info":{"id":"7tSGRV","date":"1624247236","viewed":180,"name":"20210620_training_SPACE_GARDEN","username":"FMS_Cat","description":"Actual outcome: https://www.shadertoy.com/view/stSGRV","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarcher"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define lofi(i,j) (floor((i)/(j))*(j))\n#define fs(i) (fract(sin((i)*114.514)*1919.810))\n\nconst float PI=acos(-1.);\nconst float TAU=PI*2.;\n\nfloat time;\nfloat seed;\n\nfloat random(){\n  seed=fs(seed+1.);\n  return seed;\n}\n\nmat2 r2d(float t){\n  return mat2(cos(t),sin(t),-sin(t),cos(t));\n}\n\nmat3 orthBas(vec3 z){\n  z=normalize(z);\n  vec3 x=normalize(cross(abs(z.y)>.99?vec3(0,0,1):vec3(0,1,0),z));\n  return mat3(x,cross(z,x),z);\n}\n\nvec3 randomSphere(){\n  float phi=TAU*random();\n  float theta=acos(random()*2.-1.);\n  return vec3(cos(phi)*sin(theta),sin(phi)*sin(theta),cos(theta));\n}\n\nvec3 sampleLambert(vec3 n){\n  float phi=TAU*random();\n  float cosTheta=random();\n  cosTheta=cos(asin(sqrt(cosTheta)));\n  float sinTheta=sqrt(1.0-sqrt(cosTheta*cosTheta));\n  return orthBas(n)*vec3(\n    cos(phi)*sinTheta,\n    sin(phi)*sinTheta,\n    cosTheta\n  );\n}\n\nvec3 randomHemisphere(vec3 n){\n  vec3 d=randomSphere();\n  \n  return dot(d,n)<.0?-d:d;\n}\n\nfloat sdbox(vec3 p,vec3 s){\n  vec3 d=abs(p)-s;\n  return min(0.,max(d.x,max(d.y,d.z)))+length(max(d,vec3(0.)));\n}\n\nvec3 ifs(vec3 p,vec3 r,vec3 s){\n  mat3 b=orthBas(r);\n  for(int i=0;i<7;i++){\n    p.xyz=p.zyx;\n    s*=b;\n    s*=0.58;\n    p=abs(p)-abs(s);\n    p.xy=p.x<p.y?p.yx:p.xy;\n    p.yz=p.y<p.z?p.zy:p.yz;\n    p.zx=p.z<p.x?p.xz:p.zx;\n  }\n  return p;\n}\n\nfloat ease(float t){\n  return 0.5+0.5*cos(PI*exp(-t*5.0));\n}\n\nvec4 map1(vec3 p){\n  vec3 pt=p;\n  pt.zx=r2d(0.1*time)*pt.zx;\n  vec3 cell=lofi(pt+1.0,2.0);\n  pt-=cell;\n  float w=abs(pt.x+pt.y+pt.z);\n  float ph=time+step(0.0,sign(p.y))*0.5;\n  ph*=140.0/120.0;\n  vec3 rot=2.0+mix(\n    fs(vec3(.7,.5,-.3)+sign(p.y)+floor(ph)),\n    fs(vec3(.7,.5,-.3)+sign(p.y)+floor(ph+1.0)),\n    ease(fract(ph))\n  );\n  vec3 s=1.0+1.0*mix(\n    fs(vec3(.1,.5,.7)+sign(p.y)+floor(ph)),\n    fs(vec3(.1,.5,.7)+sign(p.y)+floor(ph+1.0)),\n    ease(fract(ph))\n  );\n  pt=ifs(pt,rot,s);\n  pt=mod(pt-0.2,0.4)-0.2;\n  float d=sdbox(pt,vec3(.05));\n  d=max(d,0.2-abs(p.y));\n  //d=min(d,1.0-abs(p.y));\n  return vec4(d,1,min(abs(pt.x),abs(pt.z)),w);\n}\n\nvec4 map(vec3 p){\n  vec4 isect=map1(p);\n  //vec4 isectb=map2(p);\n  //isect=isectb.x<isect.x?isectb:isect;\n  return isect;\n}\n\nvec3 nmap1(vec3 p,vec2 d){\n  return normalize(vec3(\n    map1(p+d.yxx).x-map1(p-d.yxx).x,\n    map1(p+d.xyx).x-map1(p-d.xyx).x,\n    map1(p+d.xxy).x-map1(p-d.xxy).x\n  ));\n}\n\nfloat aomap(vec3 p,vec3 n){\n  float accum=0.;\n  for(int i=0;i<20;i++){\n    vec3 pt=p+sampleLambert(n)*(0.1+0.5*random()*random());\n    accum+=smoothstep(0.0,-0.01,map(pt).x)/20.;\n  }\n  return 1.0-sqrt(2.*accum);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  vec2 p=uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n  \n  seed=10.0*texture(iChannel0,4.0*uv).x;\n  seed+=fract(iTime);\n\n  vec3 col=vec3(0);\n  vec3 colRem=vec3(1);\n  \n  time=iTime;\n  time+=0.02*random();\n  \n  vec3 rd=normalize(vec3(p,-1.+0.5*length(p)));\n  rd.xy=r2d(0.1*iTime)*rd.xy;\n  vec3 ro=vec3(0,0,5);\n  \n  for(int iR=0;iR<2;iR++){\n    float rl=1E-2;\n    vec3 rp=ro+rd*rl;\n    vec4 isect;\n    \n    for(int i=0;i<96;i++){\n      isect=map(rp);\n      rl+=.7*isect.x;\n      rp=ro+rd*rl;\n      \n      if(abs(isect.x)<1E-4){break;}\n    }\n    \n    float fog=exp(-0.02*max(rl-0.0,0.0));\n    col+=colRem*(1.0-fog)*10.0*vec3(0.8,1.1,1.8);\n\n    vec3 n=nmap1(rp,vec2(0,1E-4));\n    float f=1.0-max(0.0,dot(rd,-n));\n    f=pow(f,5.0);\n    col+=colRem*f*vec3(0.8,1.1,1.8);\n    \n    if(abs(isect.x)<1E-3){\n      if(isect.y==1.){\n        float ao=1.0;//aomap(rp,n);\n        float edge=smoothstep(0.001,0.0005,isect.z);\n        col+=colRem*vec3(0.1)*(1.0-edge)*fog*vec3(ao);\n        col+=colRem*4.0*vec3(.2,.8,2.1)*fog*edge*exp(-5.0*fract(isect.w+time));\n        colRem*=0.1+0.9*f;\n        \n        ro=rp+n*1E-2;\n        rd=reflect(rd,n);\n        rd=normalize(rd+0.04*randomSphere());\n      }\n    }else{\n      break;\n    }\n  }\n  \n  col=pow(col,vec3(.4545));\n  col*=1.-.2*length(p);\n  col=vec3(\n    smoothstep(0.1,0.96,col.x),\n    smoothstep(0.06,0.98,col.y),\n    smoothstep(-0.04,1.04,col.z)\n  );\n  \n  fragColor = vec4(col,1);\n}\n","name":"Image","description":"","type":"image"}]}