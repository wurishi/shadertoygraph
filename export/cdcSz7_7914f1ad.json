{"ver":"0.1","info":{"id":"cdcSz7","date":"1679523808","viewed":68,"name":"Invert Color Filter","username":"tr0sle","description":"testing stuff","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["invert","filter","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Get the color of the video at the current pixel\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Invert the color\n    col = vec3(1.0) - col;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}