{"ver":"0.1","info":{"id":"3sBSWW","date":"1553702046","viewed":428,"name":"Saturated Mounts","username":"eliemichel","description":"Raymarching glitch\nReleased for the Cookie Fanzine #2 about Glitches\n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"Saturated Mounts\"\n// Released for the Cookie Fanzine #2 -- Glitches\n// Copyright (c) May 2019 - Alt144 (Elie Michel)\n// License: CC 3.0 BY - Please notify me when using it\n\nfloat mountsTime = 0.1;\nfloat stepTime = 2.7;\nfloat shapeTime = 10.0;\nfloat colorTime = 6.0;\n\nfloat sphere(vec3 p, float r) {\n    return length(p) - r;\n}\n\nfloat mounts(vec3 p) {\n    p.x += iTime * .1;\n    float h = sin(p.x) * sin(p.z * 10.) * 1.5 + 0.3 * sin(mountsTime * 2.3);\n    return p.y - h;\n}\n\nfloat merge(float a, float b) {\n    return min(a, b);\n}\n\nfloat scene(vec3 p) {\n    float s = sphere(p, 1.5);\n    s = merge(s, mounts(p));\n    s = merge(s, sphere(p - vec3(0.,-1.,5.), 5.0));\n    return s;\n}\n\nmat2 rot2(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat2(c, s, -s, c);\n}\n\nvec3 march(vec2 uv) {\n    vec3 p = vec3(0.,1.,-5.);\n    vec3 d = vec3(uv, 1.);\n\n    d.yz *= rot2(-0.2);\n    d = normalize(d);\n    \n    float st = mix(.01, .1, abs(uv.x + .5*uv.y + sin(stepTime)));\n    \n    float i = 0.;\n    for (;i < 1.;i+=st) {\n        float s = scene(p);\n        p += s * d * 0.95;\n        if (s<.01) break;\n    }\n\n    vec3 col = 0.5 + 0.5*cos(colorTime+i*3.+uv.xyx+vec3(0,2,4));\n    \n    col -= step(1., i);\n    col *= 1. - i;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 nuv = fragCoord/iResolution.xy;\n    vec2 uv = (nuv - 0.5) * iResolution.xy/iResolution.y;\n    \n    vec3 e = vec3(1./iResolution.x, 1./iResolution.y, 0.);\n    \n    vec3 col = vec3(0.);\n    int aasteps = 6;\n    for (int x = 0 ; x < aasteps ; ++x)\n        for (int y = 0 ; y < aasteps ; ++y)\n            col += march(uv + vec2(x, y) * e.xy / float(aasteps));\n    col /= float(aasteps * aasteps);\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}