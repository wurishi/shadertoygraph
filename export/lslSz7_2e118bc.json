{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\nfloat progress;\nfloat randomSeed;\n\nfloat LinearTween(float t, float start, float end)\n{\n\treturn t * start + (1. - t) * end;\n}\n\nfloat quadraticEaseIn(float t, float start, float end)\n{\n\treturn LinearTween(t * t, start, end);\n}\n\nfloat quadraticEaseInOut(float t, float start, float end)\n{\n\tfloat middle = (start + end)/2.;\n\tt = 2. * t;\n\tif( t <= 1.)\n\t\treturn LinearTween( t * t, start, middle);\n\tt -= 1.;\n\treturn LinearTween(t * t, middle, end);\n}\n\t\nvec4 RadialBlur(vec2 uv)\n{\n    vec2 center = vec2(0.5,0.5);\n    vec2 toUV = uv - center;\n    vec2 normToUV = toUV;\n    \n    \n    vec4 c1 = vec4(0.);\n    int count = 24;\n    float s = progress * 0.02;\n    \n    for(int i=0; i<24; i++)\n    {\n        c1 += texture(iChannel0, uv - normToUV * s * float(i)); \n    }\n    \n    c1 /= 24.;\n    vec4 c2 = texture(iChannel1, uv);\n\n    return mix(c1, c2, progress);\n}\n\nvec4 RadialWiggle(vec2 uv)\n{\n    vec2 center = vec2(0.5,0.5);\n    vec2 toUV = uv - center;\n    float distanceFromCenter = length(toUV);\n    vec2  normToUV = toUV / distanceFromCenter;\n    float angle = (atan(normToUV.y, normToUV.x) + 3.141592) / (0.2 * 3.141592);\n    float offset1 = texture(iChannel2, vec2(angle, fract(progress/3. + distanceFromCenter/5. + randomSeed))).x * 2.0 - 1.0;\n    float offset2 = offset1 * 2.0 * min(0.3, (1.-progress)) * distanceFromCenter;\n    offset1 = offset1 * 2.0 * min(0.3, progress) * distanceFromCenter;\n    \n    vec4 c1 = texture(iChannel1, fract(center + normToUV * (distanceFromCenter + offset1))); \n    vec4 c2 = texture(iChannel0, fract(center + normToUV * (distanceFromCenter + offset2)));\n\n    return mix(c1, c2, progress);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  randomSeed = 3.14159 ;\n  progress\t = clamp(fract(iTime/1.5),0.0,1.0);\n  progress\t = quadraticEaseIn(progress, 0.0, 1.0);\n  // progress  *= progress;\n\t   \n  vec2 p = fragCoord.xy / iResolution.xy;\n  fragColor = RadialWiggle(p);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lslSz7","date":"1398667384","viewed":925,"name":"Disintegration Transition","username":"raja","description":"Disintegration transition","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["transition"],"hasliked":0,"parentid":"","parentname":""}}