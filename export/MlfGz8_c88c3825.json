{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//TODO length squared ? \n//also there is another aproach to set a position and use distance then \n//here:https://www.shadertoy.com/view/Msf3z7\n\nvec2 cur = vec2(0.);\nvec3 cl = vec3(0.);\n\nfloat wave = 0.;\nfloat cshift = 0.1;\nbool bSmall = false;\n\nfloat focus = .5;\nfloat size = 1.;\n\n//float focus_c = .0;\n//float size_c = 0.;\n\n\n//https://www.shadertoy.com/view/4sXSWs strength= 16.0\nvec3 filmGrain(vec2 uv, float strength ){       \n    float x = (uv.x + 4.0 ) * (uv.y + 4.0 ) * (iTime * 10.0);\n\treturn  vec3(mod((mod(x, 13.0) + 1.0) * (mod(x, 123.0) + 1.0), 0.01)-0.005) * strength;\n\n}\n\nfloat hash(vec2 p){\n    return fract(sin(dot(p,vec2(127.1,311.7))) * 43758.5453123);\n}\n\n\n\nvec3 circleGlow( vec2 pos ){ //, float size, float focus\n\n    //c = pow(c, focus);\n    //vec3 col = vec3(c );    \n    \n    //float c = 20. / length(pos*size_c);\n    //vec3 col = vec3(\n    //\tpow(c, focus_c - .5),\n    //    pow(c, focus_c ),\n    //    pow(c, focus_c + .5)\n    //);\n\n    //float c = 20. / length(pos*size_c);\n\n    vec3 col = vec3(\n    \tpow(20. / length((pos+vec2(cshift,0.))*size), focus - .5),\n        pow(20. / length(pos*size), focus ),\n        pow(20. / length((pos-vec2(cshift,0.))*size), focus + .5)\n    );\n    \n\treturn col;\n}\n\n\nvec3 bm(vec3 c1, vec3 c2){\n\treturn 1.- (1.-c1)*(1.-c2);\n}\n\nvoid C(vec2 fragCoord, bool s){\n\tcur.x--;\n    if(!s) return;\n    //if(s){\n        //48 - is the length\n        vec2 pos = vec2((fragCoord.xy - iResolution.xy/2. + (cur+vec2(48.2/2., -2.5))*10.) / 15.);\n        \n        \n        //focus_c = floor( focus *  sin(fragCoord.y - iResolution.y) *1.)/1.;\n        //size_c = size*filmGrain(cur, 1.0).x*1000.; //floor( size *  sin(fragCoord.x - iResolution.x) *1.)/1. ;\n        \n        //float var = clamp(hash(cur)*10., .1, 1.); //variations\n        float var = hash(cur)*.5;\n        //float var = hash2(cur)*.5;\n\n        \n        float t = var + iTime;\n        \n        if(bSmall) {\n            wave = 4.*abs( sin(t)*sin(t*3.) );\n            cshift = .12;\n        }else{\n        \twave = .4*sin(t)*sin(t*3.);\n        \tcshift = .0; //.1?\n        }\n        \n        size = 200.*( 1.-.3+ wave); //br =.4\n        focus = 2.*(.82 + .02*sin(t*40.)*sin(30.+t*20.)); \n        \n        vec3 c = circleGlow(pos);\n        cl = bm(cl, c);\n        //cl = cl*c;         \n        //cl = cl+c;         \n        //cl = max(cl*.5, circleGlow( pos ));\n\n    //}\n} \n\n//next line\nvoid NL(){\n    cur.y++;\n    cur.x=0.;\n}\n\n\n#define X C(fragCoord,true);\n#define _ C(fragCoord,false);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\t\n    //size =200.*(1.-iMouse.x/iResolution.x); //size\n    //focus = 2.*(iMouse.y/iResolution.y); // focus\n\n    //prev pulse\n    //size = 200.*(1.-.3+ .4*sin(iTime)*sin(iTime*3.));\n    //focus = 2.*(.82 + .02*sin(iTime*40.)*sin(30.+iTime*20.)); //\n    \n    //flicker - pulse\n    //y = mod(iTime, 1.);\n    \n\ncur = vec2(0.);\ncl = vec3(.0);\n\n// arc\ncur.y-=10.;\nbSmall = true;\n\t\t\t\t\t_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;X;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;NL();\n\t\t\t\t\t_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;X;X;X;_;_;_;X;X;X;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;NL();\n\t\t\t\t\t_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;X;X;X;_;_;_;_;_;_;_;_;_;_;_;X;X;X;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;NL();\n\t\t\t\t\t_;_;_;_;_;_;_;_;_;_;_;_;X;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;X;_;_;_;_;_;_;_;_;_;_;_;_;NL();\n\t\t\t\t\t_;_;_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;_;_;NL();\n\t\t\t\t\t_;_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;_;NL();\n\t\t\t\t\t_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;NL();\n\t\t\t\t\t_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;NL();\n\t\t\t\t\tNL();\n\t\t\t\t\tNL();\n\t\t\t\t\tNL();\n\t\t\t\t\t  \n\t\t\t\t\t//printed mars    \n\t\t\t\t\tbSmall = false;\n\t\t\t\t\tX;X;_;_;X;X;_;_;X;X;X;_;X;_;_;X;_;X;X;X;_;X;X;X;_;X;X;_;_;_;_;X;_;_;_;X;_;_;X;_;_;X;X;_;_;X;X;_;NL();\n\t\t\t\t\t_;_;X;_;_;_;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;_;_;_;_;_;_;_;_;_;_;_;_;_;_;_;X;_;_;_;_;NL();\n\t\t\t\t\tX;X;_;_;X;X;_;_;_;X;_;_;X;X;_;X;_;_;X;_;_;X;X;X;_;_;_;X;_;_;_;X;X;_;X;X;_;X;X;X;_;X;X;_;_;X;X;_;NL();\n\t\t\t\t\tX;_;_;_;_;X;_;_;_;X;_;_;X;_;X;X;_;_;X;_;_;X;_;_;_;_;_;X;_;_;_;X;_;X;_;X;_;X;_;X;_;_;X;_;_;_;_;X;NL();\n\t\t\t\t\tX;_;_;_;_;_;X;_;X;X;X;_;X;_;_;X;_;_;X;_;_;X;X;X;_;X;X;_;_;_;_;X;_;X;_;X;_;X;_;X;_;_;_;X;_;X;X;_;NL();\n\t\t\t\t\tNL();    \n\t\t\t\t\tNL();\n\t\t\t\t\tNL();\n\t\t\t\t\t    \n\t\t\t\t\t//chapter one    \n\t\t\t\t\tbSmall = true;\n\t\t\t\t\t_;_;X;X;X;_;X;_;X;_;_;X;_;_;X;X;X;_;X;X;X;_;X;X;X;_;X;X;X;_;_;_;_;_;X;X;X;_;X;X;X;_;X;X;X;_;_;NL();\n\t\t\t\t\t_;_;X;_;_;_;X;X;X;_;X;X;X;_;X;X;X;_;_;X;_;_;X;X;_;_;X;_;_;_;_;_;_;_;X;_;X;_;X;_;X;_;X;X;_;_;_;NL();\n\t\t\t\t\t_;_;X;X;X;_;X;_;X;_;X;_;X;_;X;_;_;_;_;X;_;_;X;X;X;_;X;_;_;_;_;_;_;_;X;X;X;_;X;_;X;_;X;X;X;_;_;NL();\n\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 fg = filmGrain(uv,  20.0);\n    cl = bm(cl, fg);//1.- (1.-cl)*(1.-fg); \n    fragColor = vec4(cl, 1.);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MlfGz8","date":"1418406513","viewed":1696,"name":"Game Logo","username":"vladstorm","description":"a game logo for my game #printedmars\nstill gotta test it on different systems ... ","likes":52,"published":1,"flags":0,"usePreview":1,"tags":["text","logo","glow","font","pixels"],"hasliked":0,"parentid":"","parentname":""}}