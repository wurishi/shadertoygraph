{"ver":"0.1","info":{"id":"cljyWt","date":"1692444365","viewed":24,"name":"cardoid","username":"pwyvern","description":"a cardoid","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cardoid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 heart(float theta, float rotation) {\n    float x = 16.0 * pow(sin(theta), 3.0);\n    float y = 13.0 * cos(theta) - 5.0 * cos(2.0*theta) - 2.0 * cos(3.0*theta) - cos(4.0*theta);\n    vec2 rotated = mat2(cos(rotation), -sin(rotation), sin(rotation), cos(rotation)) * vec2(x,y);\n    return 0.03 * rotated;\n}\n\nbool checkHeart(vec2 uv, float rotation, out float fadeFactor) {\n    float thickness = 0.015;\n    fadeFactor = 0.0;\n\n    for (float theta = 0.0; theta <= 6.2831853; theta += 0.01) {\n        vec2 hPoint = heart(theta, rotation);\n        if (length(uv - hPoint) < thickness) {\n            fadeFactor = 1.0;\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.y = uv.y * iResolution.y / iResolution.x;\n\n    uv += vec2(0.0, 0.0 * iResolution.y / iResolution.x); \n\n    float timePeriod = mod(iTime, 7.0);\n    float rotation = timePeriod > 2.0 ? (timePeriod - 2.0) * 2.0 * 3.14159265359 / 5.0 : 0.0;\n\n    vec3 accumulatedColor = vec3(0.0); \n    bool onHeart = false;\n    const int TRAIL_SAMPLES = 5;\n    float fadeFactor;\n\n    onHeart = checkHeart(uv, rotation, fadeFactor);\n    if(onHeart) {\n        accumulatedColor = 5.0 * (0.7 + 0.7 * cos(iTime + uv.xyx + vec3(4, 4, 8)));  // Doubled the brightness for increased luminosity\n    }\n\n    float blurFade = smoothstep(2.0, 2.8, timePeriod) - smoothstep(4.2, 5.0, timePeriod); // Adjusted the fade-out timing\n\n    for (int i = 1; i <= TRAIL_SAMPLES; i++) {\n        float sampleRotation = rotation - float(i) * 2.0 * 3.14159265359 / 15.0;\n        float tempFade;\n        bool onSampleHeart = checkHeart(uv, sampleRotation, tempFade);\n        vec3 sampleCol = 2.0 * (0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4))); // Doubled the brightness for increased luminosity\n\n        float sampleFade = blurFade * (1.0 - float(i) / float(TRAIL_SAMPLES + 1));\n        accumulatedColor += sampleFade * tempFade * sampleCol;\n    }\n\n    vec3 col = accumulatedColor / float(TRAIL_SAMPLES + 2); // Slight normalization adjustment\n    fragColor = onHeart ? vec4(col, 1.0) : vec4(0.0, 0.0, 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}