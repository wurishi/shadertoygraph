{"ver":"0.1","info":{"id":"md2fzD","date":"1689520883","viewed":102,"name":"Implicit Plotter by RayWorld","username":"RayWorld","description":"A simple shader that draws a plot of an algebraic curve (the roots of a polynomial of 2 variables)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["math","algebraiccurves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define scale 3.0\n\nfloat curve(float x, float y) {\n    return x * x * x + y * y * y - 3.0 * x * y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = scale * ((2.0 * fragCoord / iResolution.y) - vec2(iResolution.x / iResolution.y, 1.0));\n    float x = xy.x;\n    float y = xy.y;\n    float d = scale / iResolution.y;\n    float m = sign(curve(x, y));\n    float bl = sign(curve(x - d, y - d));\n    float br = sign(curve(x + d, y - d));\n    float tl = sign(curve(x - d, y + d));\n    float tr = sign(curve(x + d, y + d));\n    // if any 2 of the 4 corners are different sign or middle is zero,\n    // then curve passes throught this pixel.\n    bool pass = (bl != br) || (bl != tl) || (bl != tr) || (m == 0.0);\n    \n    vec3 color = pass ? vec3(0.0, 0.0, 0.0) : vec3(1.0, 1.0, 1.0);\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}