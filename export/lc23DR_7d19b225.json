{"ver":"0.1","info":{"id":"lc23DR","date":"1704107848","viewed":68,"name":"new colorful thing","username":"nayk","description":"colorful, neon, new rotate","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["colorful","neon","newrotate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*originals https://www.shadertoy.com/view/lfS3Wz https://www.shadertoy.com/view/DtGyWh*/\nconst float pi = acos(-1.0);\n\nfloat t=0.0, g=0.0;\nint mat=0;\n\n#define sat(a) clamp(a,0.,1.)\n#define rep(p,r) (mod(p,(r))-(r)*.5)\nmat2 rot(float a) { float c=cos(a),s=sin(a); return mat2(c,s,-s,c); }\n\nfloat box(vec3 p, vec3 s) {\n    vec3 b=abs(p)-s*.5;\n    return length(max(b,0.0)) + min(0.0, max(max(b.x, b.y), b.z));\n}\n\nvec2 moda(vec2 p, float r) {\n    r = 2.0*pi/r;\n    float a= mod(atan(p.y, p.x), r) - r*0.5;\n    return vec2(cos(a), sin(a)) * length(p);\n}\n\nfloat hash(float a) { return fract(sin(a*2958.9281)*5493.913); }\n\nvec3 tex(vec3 p) {\n    const float s = 0.2;\n    const float s2 = 0.005;\n    const float it = 10.;\n    float c = 0.0;\n    for(float i=1.0; i<it+1.0; i++) {\n        float h = 5.0*hash(i);\n        vec3 v = vec3(fract(     h*i+h*p.x),\n                      fract(0.50*h*i+h*p.y),\n                      fract(0.75*h*i+h*p.z));\n        float l=s-s2*h;\n        float r=s+s2*h;\n    \n        float a = 1.0;\n        a *= smoothstep(l,r,v.x)*smoothstep(l,r,12.0-v.x);\n        a *= smoothstep(l,r,v.y)*smoothstep(l,r,12.0-v.y);\n        a *= smoothstep(l,r,v.z)*smoothstep(l,r,12.0-v.z);\n        c += a/it;\n    }\n    return vec3(sat(c));\n}\n\nfloat city(vec3 p) {\n    p.y+=250.0;\n    float d=100.0;\n    float s=1.5;\n    float ss=s-0.15;\n    vec2 id=floor(p.xz/s);\n    float den = texture(iChannel0, id*0.001).r;\n    den=pow(den, 2.0)*0.4+.1;\n    float h=pow(10.0*den, 3.0)+sin(t*2.0+id.x*id.y*0.01);\n    p.xz=rep(p.xz,s);\n    d = min(d,box(p, vec3(ss,h,ss)));\n    return d;\n}\n\nfloat hplus(vec3 p) {\n    vec3 pp=p;\n    const float s = .3;\n    p.xz *= rot(1.25*iTime);\n        p.zy *= rot(1.25*iTime);\n         p.xy *= rot(1.25*iTime);\n    p.xz = moda(p.xz, 5.+1.+sin(iTime));\n     p.xy = moda(p.xy, 5.+1.+cos(iTime));\n    p -= .1*(tex(pp*.4)-.5);\n    float o = box(p, vec3(2.,.8,2.));\n    o = min(o, box(p-vec3(1.5,0,0), vec3(3,s,s)));\n    o = min(o, box(p-vec3(2.8,0,0), vec3(1.4,.8,1.)));\n    return o;\n}\n\nfloat pawtickles(vec3 p) {\n    vec3 pp = p;\n    pp.xz *= rot(.25*pi);\n    pp.xz = moda(pp.xz, 8.);\n    float o = length(vec3(mod(pp.x+3.0*fract(abs(t)*2.0),3.0)-1.5, pp.y, pp.z))-0.05;\n    float a = sin(2.0*sin(t*2.0))*sin(t+pp.x*pp.z*(10.0*fract(t*2.0)));\n    g+=1.0/(0.01+pow(abs(o),2.0)*(10.0+9.7*a));\n    return o;\n}\n\nfloat scene(vec3 p) {\n    float d = 100.;\n    p.xz *= rot(t*.0);\n    vec3 pp=p;\n    float a = pow(sin(2.0*sin(t*0.)), 2.0);\n    pp.xz *= rot(a*0.05*sin(3.0*(p.y+t*0.0)));\n    pp.yz *= rot(a*0.05*sin(2.0*(p.x+t*0.)));\n\n    float o = hplus(pp);\n    if(o<d) { d=o;mat=1; }\n\n    float ptk=pawtickles(p);\n    d = min(d,max(ptk, .1));\n\n    float c = city(p);\n    if(c<d) { d=c;mat=2; }\n\n    return d;\n}\n\nvec3 march(vec3 o, vec3 rd, float tr, float md) {\n    float d=0.0;\n    float ii=0.0;\n    for(float i=0.0; i<100.0; i++) {\n        float h=scene(o+rd*d)*0.8;\n        if(abs(h)<tr) return vec3(d,i,1.0);\n        if(d>md) return vec3(d,i,0.0);\n        d+=h;\n        ii=i;\n    }\n    return vec3(d,ii,0.0);\n}\n\nvec3 normal(vec3 p) {\n    vec2 e=vec2(0.01,0.0);\n    return normalize(scene(p)-vec3(scene(p-e.xyy), scene(p-e.yxy), scene(p-e.yyx)));\n}\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv /= vec2(iResolution.y / iResolution.x, 1.0);\n    vec4 O=fragColor;\n    vec2 C =fragCoord;\n    O=vec4(0);\n   \n    t=mod(-iTime*0.1, 5.);\n    uv *= 1. - length(uv)*.25;\n    vec3 eye = 5.5*vec3(1.,.6+.4*sin(t),-1.);\n    eye.xz+= 0.*vec2(sin(t), cos(t));\n    vec3 tg = vec3(0);\n    vec3 f=normalize(tg-eye);\n    vec3 s=normalize(cross(vec3(-.25+.5*sin(t),1,0), f));\n    vec3 u=normalize(cross(f, s));\n    vec3 dir=normalize(f*.6+uv.x*s+uv.y*u);\n  \n    vec3 lp = vec3(3);\n    lp.xyz-= 2.*vec3(sin(t), cos(t), cos(t));\n\n    vec3 col = vec3(0);\n    float ddd = 0.0;\n\n    vec3 m = march(eye, dir, .001, 500.);\n    ddd = m.x;\n    if(m.z == 1.0) {\n        vec3 p = eye+dir*m.x;\n        vec3 n=normal(p);\n        vec3 ld=normalize(lp-p);\n        float diff = (abs(dot(n, ld)));\n        float spec = (pow(abs(dot(dir, reflect(ld, n))), 30.0));\n        float fres = sat(pow(max(0.0, 1.0-dot(n, -dir)), 1.0));\n        if(mat == 1) {\n            col += sat(vec3(diff+spec)*fres);\n        }\n        if(mat == 2) {\n          col += 0.005*vec3(spec)*acos(-dir);\n        }\n        col *= pow(m.y/50., 2.);\n    } else {\n        col += smoothstep(0.,.3,dir.y+.07)*acos(-dir);\n    }\n    col += acos(-dir)*g*.01;\n     vec3 nat,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n       nat=g*d+col;\n        nat.z+=iTime*0.1;\n        a=10.;\n        nat=mod(nat-a,a*2.)-a;\n        s=6.;\n        for(int i=0;i++<8;){\n            nat=.3-abs(nat);\n            \n            nat.x<nat.z?nat=nat.zyx:nat;\n            nat.z<nat.y?nat=nat.xzy:nat;\n            nat.y<nat.x?nat=nat.zyx:nat;\n            \n            s*=e=1.4+sin(iTime*.234)*.1;\n            nat=abs(nat)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    120,\n                    8.+cos(iTime*.5)*5.\n                 )+col;\n         }\n        g+=e=length(nat.yz)/s;\n       \n    }\n    fragColor.rgb = pow(col*O.xyz, vec3(1./2.2));\n}","name":"Image","description":"","type":"image"}]}