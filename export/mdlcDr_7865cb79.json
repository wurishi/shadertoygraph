{"ver":"0.1","info":{"id":"mdlcDr","date":"1686743326","viewed":65,"name":"brand new test you will never se","username":"TheDarkKnight12318","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.394, 0.241, 0.426);\n    vec3 b = vec3(0.042, 0.472, 0.586);\n    vec3 c = vec3(0.906, 0.312, 0.388);\n    vec3 d = vec3(3.034, 2.593, 0.681);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColour, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColour = vec3(0.0);\n    \n    for (float i = 0.00; i < 3.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i * 0.4 + iTime * 0.7);\n\n        d = sin(d * 12.0 + iTime) / 4.0;\n        d = abs(d);\n        d = 0.02 / d;\n        finalColour += col * d;\n    }\n    \n    fragColour = vec4(finalColour, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}