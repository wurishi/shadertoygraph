{"ver":"0.1","info":{"id":"wlSfz3","date":"1599472635","viewed":121,"name":"Black and white 2d sdf stuff","username":"Tatti","description":"Black and white 2d sdf stuff","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// Thank you FabriceNeyret2!\n//\nfloat smoothUnion(float d1, float d2, float k){\n    float h = clamp( .5 + .5*(d2-d1)/k, 0., 1. );\n    return mix( d2, d1, h ) - k*h*(1.-h); \n}\n#define smoothIntersection(d1,d2,k) smoothUnion(d1,d2,-k)\n\n#define sphereSdf(center,radius,pos) ( length(center - pos) - radius )\n#define halfSdf(pos) ( pos.y - R.y/2. )\n#define CS(a)          vec2( cos(a),sin(a) )\n\nvoid mainImage( out vec4 O, vec2 U ){\n    vec2 R = iResolution.xy,\n         P = R/2. -CS(iTime*2.) * R/3.;\n  \n    float sphere = sphereSdf( P, R.y/6., U),\n          f = smoothUnion(sphere, halfSdf(U), R.y/10.),\n         f2 = smoothIntersection(sphere, halfSdf(U), R.y/10.);\n    \n    O = vec4( mix( 1., clamp(f,0.,1.), clamp(f2,0.,1.) ) );\n}","name":"Image","description":"","type":"image"}]}