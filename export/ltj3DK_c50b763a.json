{"ver":"0.1","info":{"id":"ltj3DK","date":"1432672276","viewed":1497,"name":"solar flare in starfield","username":"rcread","description":"modified bsdbeard/nimitz shader to be all procedural and added my own starfield","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["2d","stars","flare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Created by randy read - rcread/2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//\tmodified to be all procedural and added my own starfield\n//\t\tbsdbeard -- https://www.shadertoy.com/view/4d2XR1\n//\t\tnimitz -- https://www.shadertoy.com/view/lsSGzy\n\n//\thash22() from Dave_Hoskins -- https://www.shadertoy.com/view/ltfGDs\nvec2 hash22( vec2 p ) {\n\tp\t\t= fract( p * vec2( 5.3983, 5.4427 ) );\n    p\t\t+= dot( p.yx, p.xy + vec2( 21.5351, 14.3137 ) );\n\treturn fract( vec2( p.x * p.y * 95.4337, p.x * p.y * 97.597 ) );\n}\nfloat sum( vec2 p ) { return p.x + p.y; }\nfloat stars( vec2 p, float density, float brightness ) {\n\treturn 1. / ( 1. + brightness * exp( pow( 2., density ) * sum( hash22( p ) ) ) );\n}\nfloat noise( vec2 p ) {\n\treturn .5 + ( sin( p.x ) + sin( p.y  ) ) / 4.;\n}\nmat2 m2 = mat2( 0.80,  0.60, -0.60,  0.80 ) * 2.;\nfloat fbm( in vec2 p ) {\n\tfloat z\t\t=2.;\n\tfloat rz\t= -0.05;\n\tp\t\t\t*= 0.25;\n\tfor (int i= 0 ; i < 4 ; i++) {\n\t\trz\t\t+= abs( ( noise( p * vec2( .741, .0217 ) ) - 0.5 ) * 2. ) / z;\n\t\tz\t\t= z * 2.;\n\t\tp\t\t= p * 2. * m2;\n\t}\n\treturn rz;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat t\t\t= -iTime * .2; \n\tvec2 p\t\t= fragCoord;\n\tvec2 uv\t\t= p / iResolution.xy - 0.5;\n\tuv.x\t\t*= iResolution.x / iResolution.y;\n\tuv\t\t\t*= 15. * 0.1;\n\t\n\tfloat r\t\t= length( uv );\n\tfloat x\t\t= dot( normalize( uv ), vec2( .5, 0. ) ) + t;\n\tfloat y\t\t= dot( normalize( uv ), vec2( 0., .5 ) ) + t;\n \n    float val;\n    val\t\t\t= fbm( vec2( r + y * 4.5, r + x * 4.5 ) );\n\tval\t\t\t= smoothstep( 5. * .02 - .1, 10. + ( 5. * 0.02 - .1 ) + .001, val );\n\tval\t\t\t= sqrt( val );\n\t\n\tvec3 col\t= val / vec3( 4., 1., .3 );\n\tcol\t\t\t= 1. - col;\n\tcol\t\t\t= mix( col, vec3( 1. ), 5. - 266.667 * r );\n\tfloat a\t\t= col.x;\n    a\t\t\t= clamp( a, 0., 1. );\t//\tcomment out for smoky effect\n\tcol\t\t\t= clamp( col, 0., 1. );\n\n\t//fragColor.rgb = mix( vec3( stars( p, 5., .25 ) ), col, a );\n    fragColor.rgb = mix( vec3( clamp( pow( 1.3 * stars( p, 5., .25 ), 3. ), 0., 1. ) ), col, a );\n}","name":"","description":"","type":"image"}]}