{"ver":"0.1","info":{"id":"dldGzS","date":"1682728154","viewed":42,"name":"alive","username":"Bhar","description":"simple CA","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["neural"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = texture(iChannel1,uv);\n    col.r+=0.5;\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n        vec2 uv = fragCoord/iResolution.xy;\n        \n        vec4 prevColLeft = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(-1,0),0);\n        vec4 prevColCenter = texelFetch(iChannel0,ivec2(fragCoord),0);\n        vec4 prevColRight = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(1,0),0);\n        vec4 prevColDown = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(0,-1),0);\n        vec4 prevColUp = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(0,1),0);\n        vec4 prevColB = texelFetch(iChannel1,ivec2(fragCoord),0);\n\n        vec4 col = prevColCenter;\n        \n        col.r = clamp(col.r,-1000.0,1000.0);\n        col.g = clamp(col.g,-1000.0,1000.0);\n        col.b = clamp(col.b,-1000.0,1000.0);\n        \n        \n        \n        fragColor = col;\n        if (iFrame==1){\n        fragColor.rgb = vec3(fragCoord.y/iResolution.y,0,0);\n        }\n\n\n    \n}\n\n//home-cooked\n//col.r += (col.r*col.z*0.5)*iTimeDelta;\n//col.g += (0.3*col.b)*iTimeDelta;\n//col.b += (-0.4*col.g)*iTimeDelta;\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\n\nfloat tanhAct(float x){\n    return (exp(x)-exp(-x))/(exp(x)+exp(-x));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n        vec2 uv = fragCoord/iResolution.xy;\n        \n        vec4 prevColLeft = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(-1,0),0);\n        vec4 prevColCenter = texelFetch(iChannel0,ivec2(fragCoord),0);\n        vec4 prevColRight = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(1,0),0);\n        vec4 prevColDown = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(0,-1),0);\n        vec4 prevColUp = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(0,1),0);\n        vec4 prevColA = texelFetch(iChannel1,ivec2(fragCoord),0);\n        float keyUp = texelFetch(iChannel2,ivec2(KEY_UP,0),0).x;\n\n        vec4 col = prevColCenter;\n        \n        if(fragCoord.x<600.0 && fragCoord.x>400.0 && fragCoord.y<300.0 &&fragCoord.y>250.0){\n            col.r -= 0.01*keyUp*(sin(100.0*fragCoord.x/iResolution.x)+cos(80.0*fragCoord.y/iResolution.y))*keyUp;\n            //col.b*=0.95;\n            \n        }\n        col.r +=tanhAct(prevColLeft.r*3.0*prevColRight.r-2.0*prevColUp.r*prevColDown.r)*iTimeDelta;\n        //col.b +=(prevColLeft.r-prevColRight.r)*iTimeDelta;\n        //col.g +=(-2.0*prevColUp.r)*iTimeDelta;\n        \n        \n        \n       \n\n        col.r = clamp(col.r,-1.0,1.0);\n        col.g = clamp(col.g,-1000.0,1000.0);\n        col.b = clamp(col.b,-1000.0,1000.0);\n        \n        \n        \n        \n        fragColor = col;\n        if (iFrame==1){\n        fragColor.rgb = vec3(sin(10.0*fragCoord.x/iResolution.x)+cos(10.0*fragCoord.y/iResolution.y),0,0);\n        }\n\n\n    \n}\n\n//home-cooked\n//col.r += (col.r*col.z*0.5)*iTimeDelta;\n//col.g += (0.3*col.b)*iTimeDelta;\n//col.b += (-0.4*col.g)*iTimeDelta;\n\n//lifelike\n//col.r +=(prevColLeft.r*3.0*prevColRight.r-2.0*prevColUp.r*prevColDown.r)*iTimeDelta;","name":"Buffer B","description":"","type":"buffer"}]}