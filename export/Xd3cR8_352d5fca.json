{"ver":"0.1","info":{"id":"Xd3cR8","date":"1517852022","viewed":2957,"name":"Rounded Loading Spinner","username":"Kosro","description":"Could be optimized quite a lot...","likes":30,"published":3,"flags":0,"usePreview":0,"tags":["2d","loading","pureevil"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\n#define THICCNESS 0.03\n#define RADIUS 0.2\n#define SPEED 4.0\n\n#define aa 2.0 / min(iResolution.x,iResolution.y)\n\nvec2 remap(vec2 coord) {\n\treturn coord / min(iResolution.x,iResolution.y);\n}\n\nfloat circle(vec2 uv, vec2 pos, float rad) {\n\treturn 1.0 - smoothstep(rad,rad+0.005,length(uv-pos));\n}\n\nfloat ring(vec2 uv, vec2 pos, float innerRad, float outerRad) {\n\treturn (1.0 - smoothstep(outerRad,outerRad+aa,length(uv-pos))) * smoothstep(innerRad-aa,innerRad,length(uv-pos));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n vec2 uv = remap(fragCoord.xy);\n uv -= vec2(0.5 / iResolution.y * iResolution.x,0.5);\n\n float geo = 0.0;\n\n geo += ring(uv,vec2(0.0),RADIUS-THICCNESS,RADIUS);\n\n float rot = -iTime * SPEED;\n\n uv *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n\n float a = atan(uv.x,uv.y)*PI*0.05 + 0.5;\n\n a = max(a,circle(uv,vec2(0.0,-RADIUS+THICCNESS/2.0),THICCNESS/2.0));\n\n fragColor = vec4(a*geo);\n}","name":"Image","description":"","type":"image"}]}