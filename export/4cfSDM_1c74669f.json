{"ver":"0.1","info":{"id":"4cfSDM","date":"1705409743","viewed":53,"name":"Polynomial plotting","username":"CrumblingAway","description":"Plot any polynomial you want by providing:\n- The polynomial degree set in the POLY_DEGREE variable at the top.\n- The polynomial coefficients inside the mainImage function.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["none"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Rect\n{\n    float left, right, top, bottom;\n};\n\nconst int POLY_DEGREE = 9;\n\nfloat applyPolynomial(float x, float[POLY_DEGREE + 1] polynomial)\n{\n    float y = 0.0;\n    for (int i = 0; i < POLY_DEGREE + 1; ++i)\n    {\n        float curr = pow(abs(x), float(i));\n        if (x < 0.0 && ((i & 1) != 0))\n        {\n            curr = -curr;\n        }\n        y += polynomial[i] * curr;\n    }\n\n    return y;\n}\n\nfloat applyRectMask(vec2 coords, Rect rect)\n{\n    return step(rect.left, coords.x) *\n           (1.0 - step(rect.right, coords.x)) *\n           step(rect.bottom, coords.y) *\n           (1.0 - step(rect.top, coords.y));\n}\n\nvec2 getNormalizedCoordinates(vec2 coords, vec2 resolution)\n{\n    coords /= resolution;\n    coords -= 0.5;\n    coords.y *= (resolution.y / resolution.x);\n    return coords;\n}\n\nvec2 getGraphCoordinates(vec2 coords, Rect graphBounds)\n{\n    coords.x *= 2.0 * graphBounds.right;\n    coords.y *= graphBounds.top / (iResolution.y / iResolution.x);\n    return coords;\n}\n\nvoid mainImage(\n    out vec4 fragColor,\n    in vec2 fragCoord\n)\n{\n    float[POLY_DEGREE + 1] polynomial = float[POLY_DEGREE + 1](\n        0.0,\n        1.0,\n        0.0,\n        -0.16666666667,\n        0.0,\n        0.00833333333,\n        0.0,\n        -0.0001984126,\n        0.0,\n        0.00000275573\n    );\n\n    float GRAPH_X = 10.0;\n    float GRAPH_Y = GRAPH_X * (iResolution.y / iResolution.x);\n    float HALF_GRAPH_LINE_WIDTH = 0.1;\n    Rect graphRect = Rect(\n        -GRAPH_X,\n        GRAPH_X,\n        GRAPH_Y,\n        -GRAPH_Y\n    );\n    Rect graphLine = Rect(\n        -GRAPH_X,\n        GRAPH_X,\n        HALF_GRAPH_LINE_WIDTH,\n        -HALF_GRAPH_LINE_WIDTH\n    );\n\n    vec2 normCoords = getNormalizedCoordinates(fragCoord, iResolution.xy);\n    vec2 graphCoords = getGraphCoordinates(normCoords, graphRect);\n    float polyValue = applyPolynomial(graphCoords.x, polynomial);\n    graphCoords.y -= polyValue;\n\n    fragColor = vec4(vec3(applyRectMask(graphCoords, graphLine)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}