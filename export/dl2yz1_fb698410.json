{"ver":"0.1","info":{"id":"dl2yz1","date":"1691498075","viewed":88,"name":"simple step function","username":"odid2730","description":"step function","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["stepfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define INNER .1 \n#define OUTTER .3\n#define PIECE 10.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    \n    float d = length(uv);\n    float fd = step( d, INNER );\n    \n    for ( float i = 1.; i <= PIECE; i+=1. )\n    {\n        fd = max( fd, ( PIECE - i ) / PIECE\n        * ( step( d, INNER + ( OUTTER - INNER ) / PIECE * i ) ) );\n    }\n    \n    vec4 col = texture( iChannel0, fragCoord / iResolution.xy );\n    \n    fragColor = mix( vec4(0.), col, fd );\n}","name":"Image","description":"","type":"image"}]}