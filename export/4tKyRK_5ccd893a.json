{"ver":"0.1","info":{"id":"4tKyRK","date":"1536933052","viewed":585,"name":"random walk / diffusion 2","username":"FabriceNeyret2","description":"variant of [url]https://shadertoy.com/view/llGczV[/url] ( see description there).\nHere, draw in blue the cumulated memory of visited locations. ( memory duration: #define MEM in common )\n","likes":6,"published":3,"flags":32,"usePreview":0,"tags":["brownian","diffusion","short","randomwalk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// memory variant of https://shadertoy.com/view/llGczV\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = texelFetch( iChannel0, ivec2(U), 0 );\n#if MEM == 0 \n    O += O.a /100. * vec4(1,2,4,0);\n#else\n    O.gb += O.a * vec2(1,4)/sqrt(float(MEM));\n#endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define rnd(x) fract(3e4*sin((x+iTime)*mat2(1,13.51,73.37,-57.17)))\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    O = texelFetch( iChannel0, ivec2(U), 0 );\n    \n#if 0                              // x-y separable random walk\n\n    O.xy += sign(2.*rnd(U)-1.);              \n\n#else                              // isotropic random walk\n\n    float a = 6.28319 * rnd(U).x;\n    O.xy += vec2(cos(a),sin(a));\n\n#endif\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define N 48                        // simulates N*N particles\n\n#define S(v) smoothstep(1.,0.,abs(v))\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O -= O;\n    O.a = texelFetch( iChannel1, ivec2(u), 0 ).a;\n#if MEM >= 0 \n    O.a *= 1. - 1./float(MEM);                 // relaxation\n#endif\n    \n    vec2 R = iResolution.xy,\n         U = floor(u - R/2.), P;\n    float d = 0., p = 0.;\n    \n    for (int i=0; i<N*N; i++) {       // seek for dots reaching the pixel\n        P = texelFetch(iChannel0,ivec2(i%N,i/N),0).xy;\n      //if ( P == U ) O++;\n        if (length(P-U) < .5) O++;             // draw dot\n        if ( abs(P-U).x < .5) p++;             // horiz proj\n        if (round(length(P))==floor(u.x)) d++; // bin u.x for stat of distances\n    }\n\n    // --- display stats\n    float l = length(U), t = float(iFrame);\n    O.b += S(l-t);                             // max reachable dist\n    O = mix( O, vec4(1,0,0,0), S(l-sqrt(t)) ); // average dist\n    if (u.y < p) O.b++;                        // horiz proj\n    if (abs(u.y - 1./sqrt(3.14*t) * exp(-U.x*U.x/t)*float(N*N)) < .5 ) O.bg++; // Gaussian\n    \n    if (u.y < d) O.g++;                        // dist histogram\n    if (abs(u.y - 2.*u.x/t * exp(-u.x*u.x/t)*float(N*N)) < 1. ) O.r++; // Rayleigh\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define MEM 100   // paint memory ( 0 = infinity )","name":"Common","description":"","type":"common"}]}