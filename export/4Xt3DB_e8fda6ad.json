{"ver":"0.1","info":{"id":"4Xt3DB","date":"1716968173","viewed":39,"name":"bae #013 ~ Do Not Eat","username":"BretHudson","description":"Learned how to use truchet tiles & am having a lot of fun :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a), sin(a), -sin(a), cos(a))\n#define PI 3.141592\n\nfloat hash(vec2 p)\n{\n    p = fract(p * vec2(123.345, 734.6897));\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    uv *= 3.5;\n    uv *= rot(.1);\n    uv.x += iTime;\n    \n    vec2 id = floor(uv);// for a loop: mod(floor(uv) + 15., 30.) - 15.;\n    id.y -= 3.;\n    vec2 gv = fract(uv) - .5;\n    gv.y *= sign(hash(id) - .5);\n    \n    float width = .375;\n    float thick = width * .5;\n    \n    vec2 cUv = gv - .5 * sign(gv.x + gv.y + .001);\n    float angle = atan(cUv.y, cUv.x);\n    float d = length(cUv);\n    \n    float mask = abs(d - .5) - (thick * .8);\n    mask = smoothstep(0.01, 0., mask);\n    \n    float extra = 0.7;\n    vec2 tUv = vec2(\n        mod((angle + PI) / 1.57079, 1.),\n        (d - (.5 - thick * extra)) / (width * extra)\n    );\n    tUv.x = abs(mod(id.x + id.y, 2.) - tUv.x);\n    \n    bool a = mod(id.x + id.y, 2.) < 1.;\n    bool b = sign(hash(id) - .5) < 0.;\n    bool xx = a ^^ b;\n    if (xx)\n    {\n        tUv.y = 1. - tUv.y;\n    }\n    \n    vec3 col = vec3(0);\n    float s = sin((tUv.x + tUv.y * 0.7) * 6.28 + iTime);\n    col += pow(mask * (s + 1.) * .5, 1. / 0.3);\n    if (mask == 0.) {\n        //col += vec3(.1, .15, .5);\n    } else {\n        //col += vec3(.7, .55, .5);\n        col += vec3(1., .8, .5);\n    }\n    \n    mask = 1. - (2. * abs(clamp(tUv.y, 0., 1.)  - .5));\n    mask = smoothstep(0., .1, mask);\n    col = mix(vec3(.1, .15, .5), col, mask);\n    \n    mask = abs(abs(d - .5) - thick) - .01;\n    mask = smoothstep(0.01, 0., mask);\n    col += mask * .7;\n    \n    //if (max(abs(gv.x), abs(gv.y)) > 0.48) col = vec3(0, 1, 0);\n    \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}