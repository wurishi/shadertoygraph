{"ver":"0.1","info":{"id":"MldSzr","date":"1477930819","viewed":1879,"name":"PÃ¨re Truchet's Psychedelic Maze","username":"s23b","description":"A variation on [url=https://www.shadertoy.com/view/4tG3DW]Saint George Ripples[/url]\n\nmusic by [url=https://www.youtube.com/watch?v=JwL5JY-Qq3I]The nobody elses[/url]","likes":25,"published":3,"flags":96,"usePreview":0,"tags":["visualizer","ripple","maze","truchettile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE_FACTOR 5.\n#define CHANNEL_LOWS vec3(.4, .3, .5)\n#define CHANNEL_HIGHS vec3(.8, .7, 1.)\n\nvec3 maze(vec2 uv, int id, vec3 value) {\n    if (id == 0) {\n    \tuv.y = 1.-uv.y;\n    }\n    float data = abs(.5 - abs(uv.y - uv.x));\n    float w = fwidth(data);\n    return 1. - smoothstep(value - w, value + w, vec3(data));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv =  uv * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= SCALE_FACTOR;\n    \n    // get current maze tile\n    int tileId = int(texture(iChannel0, floor(uv * 2.) / iChannelResolution[0].xy).x > .5);\n    \n    // get fft ripple values\n\tvec3 value = texture(iChannel1, fragCoord.xy / iResolution.xy).rgb;\n    // smoothstep them between limits\n    value = smoothstep(CHANNEL_LOWS, CHANNEL_HIGHS, value) * .7 - .1;\n    \n    uv = fract(uv);\n    \n    // get maze tile at position\n\tfragColor = vec4(maze(uv, tileId, value),1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtfGzs","filepath":"https://soundcloud.com/thenobodyelses/01-1a","previewfilepath":"https://soundcloud.com/thenobodyelses/01-1a","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define FREQ_R .30\n#define FREQ_G .75\n#define FREQ_B .10\n\n#define RADIUS .04\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2. - 1.;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    float l = length(uv);\n    \n    // get fft values at the preset spots\n\tvec4 _sample = vec4(\n        texture(iChannel1, vec2(FREQ_R, .25)).x,\n        texture(iChannel1, vec2(FREQ_G, .25)).x,\n        texture(iChannel1, vec2(FREQ_B, .25)).x,\n        0);\n    \n    if (l < RADIUS) {\n\t    // if in the center push out current fft values\n        fragColor = _sample;\n    } else if (l < 2. * RADIUS) {\n        // if next to the center interpolate between the old and the current values\n    \tvec4 old = texture(iChannel0, vec2(.5, .5));\n    \tfragColor = mix(_sample, old, l / RADIUS - 1.);\n    } else {\n        // otherwise copy the values from the next circle\n        uv -= uv / l * RADIUS;\n        uv.x /= iResolution.x / iResolution.y;\n        uv = (uv + 1.) / 2.;\n        fragColor = texture(iChannel0, uv);\n    }\n    \n    // push sound data to alpha channel as is\n    fragColor.a = texture(iChannel1, fragCoord.xy / iResolution.xy).x;\n}","name":"Buffer A","description":"","type":"buffer"}]}