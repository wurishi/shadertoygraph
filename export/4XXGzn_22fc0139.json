{"ver":"0.1","info":{"id":"4XXGzn","date":"1707033811","viewed":46,"name":"visual deviation cross / plus 3D","username":"chenxianming","description":"hard to get each cross position from 2d in this aligned, but running with raymarching was fine. \n2d ver see.\nhttps://www.shadertoy.com/view/lfjSRt","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","deviation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define A max(I.x, I.y)\n#define T iTime\n#define PI 3.1415926\n\n#define v( a ) clamp( a, 0., 1. )\n#define g( a ) sin( a * 1.5 ) / .96\n#define h(u) fract(dot(u.yxx * .1234, sign(u.yxx) + 1.12) * 123.456)\n#define inv g(T) > 0.\n//#define inv false\n#define rot( r ) mat2(cos(r), sin(r), -sin(r), cos(r) )\n#define add( a, b, c ) c == 0 ? max( a, b ) : min( a, b )\n\nfloat tex( vec2 u, float s ){\n\n    vec2 t = round(u / -s);\n\n    float r = round( h( ( t * 5. ) ) );\n\n    u -= s * round( u / s ); // hp mod\n\n    if( r > 0. )\n      u.x *= -1.;\n\n    if( abs(u.x + u.y) < .15 )\n      u += s * ( ( u.x + u.y > 0. ) ? -.5 : .5 );\n    \n    return (length(u) - s * .5) * ( r != mod( t.x + t.y, 2. ) ? 1. : -1. );\n\n}\n\nfloat f( vec3 p ){\n    return max(\n        min(\n            max( abs(p.x) - .05, abs(p.y) - .15 ),\n            max( abs(p.x) - .15, abs(p.y) - .05 )\n        ),\n        abs( p.z ) - .01\n    );\n}\n\n\n// plus storage\nvec4 list[14] = vec4[14](\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0),\n    vec4(0)\n);\n\nfloat plus( vec3 p, float i ){\n    \n    \n    p.xy += vec2( -.1, .3 ) * i;\n\n    float t = round( p.x / .3 );\n\n    p.x -= .3 * t;\n    \n    p.y -= t * .1;\n    \n    p.xy *= rot( g( T ) * PI / 2. );\n    \n    \n    list[ int( i + 7. ) ] = vec4(\n        inv ? 1.-f( p ) : f(p),\n        ( mod( t, 2. ) == 0. ) ? p.xy : p.yx,\n        i+7.\n    );\n    \n    return list[ int( i + 7. ) ].x;\n}\n\nfloat pp( vec3 p ){\n    float d = ( inv ) ? -.1 : .1, i = -7.;\n    \n    if( inv )\n        p.xy -= vec2( -.6, .3 );\n\n    for( ; i < 7.; i++ )\n        d = add(\n            d,\n            plus( p, i ),\n            ( inv ? 0 : 1 )\n        );\n    \n    \n    return d;\n}\n\nfloat df( vec3 p ){\n    return pp( p );\n}\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nvec3 trace( vec2 u ){\n    vec3 c, p, o = vec3( 0., 0., -1.4 ), r = vec3( u * .9, 1. );\n    float t, d, i;\n    for( ; i < 128.; i++ ){\n        p = o + r * t,\n        p.yz *= rot( PI * .15 ),\n        d = df( p ), \n        t += ( inv ? ( 1. - d ) : d ) * .2222;\n        if( abs(t) < .022 || abs(d) < 5e-7 )\n            break ;\n    }\n\n    \n    if( d < 1e-3 ){\n        c += .5;\n        /*\n        // shaded cross ( brighness )\n        vec3 n = l( p );\n        \n        if( inv == false ){\n            for( float i = -7.; i < 7.; i++ ){\n                vec4 res = list[ int( i+7. ) ];\n                if( mod( res.w, 2. ) == 0. )\n                    res.yz = res.zy;\n                if( df( p ) == res.x )\n                    c += step( tex( res.yz / .25, .2 ) , 0. ) * max( -n.z, 0. ) * g( T );\n            }\n        }\n        */\n    }\n    \n    return c;\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    U = vec4( trace( ( V * 2. - I.xy ) / A ).x );\n}\n","name":"Image","description":"","type":"image"}]}