{"ver":"0.1","info":{"id":"MlBGDc","date":"1433015546","viewed":199,"name":"ImageProcessing_Blur","username":"foad1989","description":"This is a gaussian blur","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gaussianblur","bluralgorithm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec2 stepSize = vec2(1.0) / iResolution.xy; \nconst float two_pi = 6.28318530718;\nconst int size = 3;\nfloat gauss(in float sigma, in float x, in float y)\n{\n    float sigma2 = sigma * sigma;\n \tfloat pwr = -((x * x) + (y * y)) / (2.0 * sigma2);\n    return (exp(pwr) / (two_pi * sigma2));\n}\nfloat total_weight(in float sigma)\n{\n    float sum = 0.0;\n    for(int i = 0; i < size; i++)\n        for(int j = 0; j < size; j++)\n            sum += gauss(sigma, float(i), float(j));\n    return sum;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float sigma = 20.0;\n    vec4 color = vec4(0.0);\n    float k = total_weight(sigma);\n    for(int i = -size / 2; i <= size / 2; i++)\n    {\n        for(int j = -size / 2; j <= size / 2; j++)\n        {\n            vec2 coord = uv + vec2(i, -j) * stepSize;\n            float weight = gauss(sigma, float(i), float(j)) / k;\n            color += texture(iChannel0, coord) * weight;\n        }\n    }\n    if(uv.x <= iMouse.x / iResolution.x)\n        fragColor = texture(iChannel0, uv);\n    else\n\t\tfragColor = color;\n}","name":"","description":"","type":"image"}]}