{"ver":"0.1","info":{"id":"ssjBWh","date":"1646931772","viewed":87,"name":"RainbowBricks","username":"RedWool","description":"brick stack","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 bricks(vec2 uv, float p, float o)\n{\n    uv *= p;\n    uv = mod(uv, 2.0);\n    if (uv.y > 1.0)\n    {\n        uv.x += o;\n    }\n    else\n    {\n        uv.x -= o;\n    }\n    \n    return fract(uv);\n}\n\nfloat box (vec2 uv)\n{\n    uv = step(0.1, uv) - step(0.9, uv);\n    return uv.x * uv.y;\n}\n\nfloat blink(vec2 uv1, vec2 uv2, float t, float i, float s, float m)\n{\n    float eval = (uv1.x + uv2.x) * 4. / i + ((uv1.y * 10. + uv2.y) / i) + iTime * t;\n    return step(m, mod(eval, s));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = bricks(uv, 10.0, iTime);\n    \n    float pct = box(uv2);\n    float b = blink(uv, uv2,0.4, 10., 1., 0.5);\n    \n    // Time varying pixel color\n    vec3 col = ((1. - pct) * vec3(0.)) + (pct * b * (cos(uv.xyx * 5. + iTime + vec3(1, 2, 4))*0.5 + 0.5));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}