{"ver":"0.1","info":{"id":"M3XGRS","date":"1707595827","viewed":49,"name":"shaded plastic","username":"ggoedert","description":"shaded plastic tutorial","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","shaded","plastic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lightDir = vec3(0.57735, 0.57735, 0.57735);\nvec3 ambientColor = vec3(1.0, 0.0, 0.0);\nvec3 diffuseColor = vec3(0.75 ,0.0, 0.0);\nvec3 specularColor = vec3(0.5 ,0.5, 0.5);\n\nfloat ambient()\n{\n    return 0.1;\n}\n\nfloat diffuse(vec3 n)\n{\n    float off = 0.03;\n    return max(0., dot(n,lightDir)*.9)+off;\n}\n\nfloat specular(vec3 n, vec3 v, float shininess) {\n    //shininess = 1.0/pow(roughness, 2.0)) | <shininess>16.0 == <roughness>0.25\n    vec3 h = normalize(v + lightDir);\n    return pow(max(dot(h, n), 0.0), shininess);\n}\n\nvec3 plastic(vec3 n, vec3 v)\n{\n    return ambientColor * ambient() +\n        diffuseColor * diffuse(n) +\n        specularColor * specular(n, v, 16.0);\n}\n\n//=====================================================\n\nfloat sphIntersect(vec3 ro, vec3 rd, vec4 sph)\n{\n\tvec3 oc = ro - sph.xyz;\n\tfloat b = dot( oc, rd );\n\tfloat c = dot( oc, oc ) - sph.w*sph.w;\n\tfloat h = b*b - c;\n\tif( h<0.0 ) return -1.0;\n\treturn -b - sqrt( h );\n}\n\nvec3 sphNormal(vec3 pos, vec4 sph)\n{\n    return normalize(pos-sph.xyz);\n}\n            \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  uv = fragCoord     / iResolution.xy;\n    float AR = iResolution.x / iResolution.y;\n    vec3 ro = vec3(0.0, 0.0, 4.0);\n\tvec3 rd = normalize(vec3((uv.x-0.5)*AR, uv.y-0.5, -1.0));\n\n    vec3 color = vec3(0.0);\n    vec4 sph = vec4( 0.0, 0.0, 0.0, 1.0 );\n    float t = sphIntersect(ro, rd, sph);\n    if (t > 0.) {\n        color = plastic(sphNormal(ro + t * rd, sph), -rd);\n    }\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}