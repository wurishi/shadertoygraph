{"ver":"0.1","info":{"id":"wdyfDV","date":"1607978489","viewed":319,"name":"Simple 2D Star noise","username":"tyron","description":"Just some simple stars. Would probably want to use a noise texture as input so you don't need 500 iterations per fragment.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","stars","night"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat noise(float p){\n\tfloat fl = floor(p);\n  float fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 offset = vec2(sin(iTime / 5.0), cos(iTime / 5.0)) / 10.0 + iMouse.xy/1000.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 col = vec3(0);\n    for (float i = 0.; i < 500.; i++) {\n        vec2 star = mod(vec2(noise(i), noise(i * 23.)) + offset, vec2(1.0));\n        \n        float intensity = 0.5 + noise(i * 17.) * 0.5;\n        \n        col += clamp(intensity * pow(1. - distance(star, uv)/2., 1200.0), 0., 1.);\n        \n        // First 100 stars are yellow\n        if (i < 100.) {\n            col.b = 0.;\n        }\n    }\n\n    // Add some contrast\n    col = (col - 0.2) * 1.5;\n    \n    fragColor = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}