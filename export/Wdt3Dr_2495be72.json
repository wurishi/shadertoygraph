{"ver":"0.1","info":{"id":"Wdt3Dr","date":"1568228832","viewed":88,"name":"Polar Grid","username":"erikccoder","description":"Polar Grid experiment.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.14159265359;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 cuv = (fragCoord-.5*iResolution.xy)/iResolution.xy;\n    \n    \n    vec2 uv = cuv + .5;\n    vec2 pUV = vec2(uv.x, 1.0 - uv.y) - .5;\n\n    pUV = cuv;\n    \n    float angle = atan(pUV.y, pUV.x);\n    \n    vec2 p = vec2(\n        angle/(2.0*pi),\n        length(pUV)\n    );\n    \n    \n    p *= vec2(6, 3.3);\n\n    vec2 pid = floor(p);\n\n    p -= vec2( .13, .23)*iTime;\n\n    p = fract(p);\n\n\n\tvec3 c = vec3(p.x);\n    \n    c = texture(iChannel0, p).rgb;\n    \n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}