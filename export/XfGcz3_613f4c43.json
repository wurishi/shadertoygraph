{"ver":"0.1","info":{"id":"XfGcz3","date":"1732130229","viewed":100,"name":"ceil cells","username":"sleeping","description":"approximate voronoi\n\nlattice points should be possibly iterated twice to make it accurate","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","hexagonal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 C, vec2 U )\n{\n    vec2 m,e,o,w=U/99.;\n    m.y=9.;\n    float d,f,h;\n    \n    for (e.x=-4.;++e.x<4.;)\n    for (e.y=-4.;++e.y<4.;) {\n        o = ceil(w+e);\n        h = mod(o.x,2.);\n        f = iTime/.7 + o.x*o.y*3.7;\n        o -= w - 1.4 * vec2(sin(f),cos(f)) * pow(cos(iTime),3.);\n        o.y -= h*.5; // this is for hexagons\n\n        d = dot(o,o);\n\n        if (d < m.y) \n            m = vec2(m.y-d,d);\n    }\n    \n    C = vec4(step(m.x,.2)*.7)+.2;\n  \n    //C.r=1.; C.g*=3.; // to make it honey\n        \n}","name":"Image","description":"","type":"image"}]}