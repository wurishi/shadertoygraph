{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"vec2 IterPlx (in vec2 UV, in float HRatio, in float Offset, in float MipLvl, in sampler2D height, in vec3 vEye)\n{\n    const int s = 12;\n          \n    vec2 UVM = vec2(UV.x+fract(iTime*0.1),UV.y+0.1*sin(iTime));    \n    \n    for (int i=0; i<s; i++)\n    {    \n        float H = dot(texture(height,UVM,MipLvl).xyz,vec3(0.33,0.34,0.33));\n        UVM += (H-Offset)*vEye.xy*HRatio/float(s);\n    }\n    return UVM;   \n}\n\nvec3 Normals (in vec2 UV, in float Strength, in float T, in float MipLvl, in sampler2D height)\n{\n    float dx = -Strength*(texture(height,UV+vec2(T,0.0),MipLvl).x - texture(height,UV-vec2(T,0.0),MipLvl).x);\n    \n    float dy = -Strength*(texture(height,UV+vec2(0.0,T),MipLvl).x - texture(height,UV-vec2(0.0,T),MipLvl).x);    \n    \n    vec3 Normal = normalize(vec3(dx,dy,sqrt(clamp(1.0-dx*dx-dy*dy,0.0,1.0))));\n\n    return Normal;   \n}\n\n\nfloat hr = 0.15;\nfloat rp = 0.4;\nfloat hmip = 6.0;\nfloat nmip = 2.5;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \nfloat ts = 1.0/iChannelResolution[0].x;\n\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    vec3 vLight = normalize(vec3(iResolution.xy/2.0,iResolution.x*0.3333)-vec3(fragCoord.xy,0.0));\n    \n    vec3 vEye = vLight;\n    vec3 vNormal = Normals(IterPlx(uv,hr,rp,hmip,iChannel0,vEye), 1.25, ts*pow(2.0,nmip), nmip, iChannel0);\n\n    float Shading = clamp(dot(vNormal,vLight),0.0,1.0);\n    \n    vec4 Diffuse = pow(texture(iChannel0, IterPlx(uv,hr,rp,hmip,iChannel0,vEye)),vec4(0.6));\n    \n    vec4 Specular = pow(clamp(dot(vLight,reflect(vec3(0.0,0.0,-1.0),vNormal)),0.0,1.0),25.0)*Diffuse*0.5;\n    \n    fragColor = Shading*Diffuse+Specular;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsSXzc","date":"1414539340","viewed":685,"name":"Iterative Parallax Mapping","username":"mAlk","description":"Iterative parallax mapping with normals and specular.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","parallax"],"hasliked":0,"parentid":"","parentname":""}}