{"ver":"0.1","info":{"id":"Xs2yRG","date":"1492555836","viewed":666,"name":"quasicrystal","username":"jes5199","description":"based on https://mainisusuallyafunction.blogspot.co.uk/2011/10/quasicrystals-as-sums-of-waves-in-plane.html","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["2d","quasicrystal","trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 0.5;\n\tvec2 uv = zoom * (fragCoord.xy - iResolution.xy / 2.0);\n        \n    float t = iTime * 3.1415;\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    \n    float pi = acos(-1.);\n        \n   \n    float m = 1.;\n    float n = 8.;\n    float p = 1.;\n    \n    float r = sqrt(x*x+y*y);\n    float th = atan(y, x);\n   \n    \n    float value = 0.;\n    \n    const int points = 7;\n    \n    for(int i = 0; i < points ; i++){\n      float angle = pi / float(points) * float(i);\n\n      float w = x * sin(angle) + y * cos(angle);\n\n\t  value += sin(w + t);\n    };\n\n        \n    float color = (sin(value * pi / 2.) + 1.) * 1.5;\n    \n    if(color > 0.0) {\n      fragColor = color - vec4(0,1.5,2,0); \n    } else {\n      //fragColor = vec4(med, med, low,1.0);\n      fragColor = -color - vec4(1,1.5,0,0); \n    }\n}","name":"Image","description":"","type":"image"}]}