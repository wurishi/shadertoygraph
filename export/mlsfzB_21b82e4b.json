{"ver":"0.1","info":{"id":"mlsfzB","date":"1693151065","viewed":67,"name":"Lelabah","username":"zhonkvision","description":"Inspired by \"Labah-Labah","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["glsl","zhonk","zhonkvision","vjloop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MstGDN","filepath":"https://soundcloud.com/sentimony/psydewise-milkdrop?in=sentimony/sets/psydewise-gain-of-funktion&si=ba2a91c530d64bfb8f82df825090ac56&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/sentimony/psydewise-milkdrop?in=sentimony/sets/psydewise-gain-of-funktion&si=ba2a91c530d64bfb8f82df825090ac56&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n    vec3 col = vec3(0.0);\n    float t = iTime;\n\n    vec2 n = vec2(0.0);\n    vec2 q = vec2(0.0);\n    vec2 p = uv;\n    float d = dot(p, p);\n    float S = 14.0;\n    float a = 0.002;\n    mat2 m = mat2(2.0, 0.0, 0.0, 1.0); // Identity matrix\n\n    // Apply mirroring transformations for each quadrant\n    if (uv.x < 2.0) {\n        uv.x = -uv.x;\n        m[0][0] = -m[0][0];\n    }\n    if (uv.y < 1.0) {\n        uv.y = -uv.y;\n        m[1][1] = -m[1][1];\n    }\n\n    // Apply shape scaling and rotation\n    p *= 1.0; // Change the initial shapeScale here\n    p = mat2(cos(0.0), -sin(0.0), sin(0.0), cos(0.0)) * p; // Change the initial shapeRotation here\n\n    // Audio input\n    float audioValue = texture(iChannel0, vec2(0.5)).r; // Sample audio input\n    float numIterations = mix(2.1, 20.0, audioValue); // Modify the number of iterations based on audio\n    float animationSpeed = mix(1.01, 1.2, audioValue); // Modify the animation speed based on audio\n\n    for (float j = 2.1; j < numIterations; j++) {\n        p = m * p;\n        n = m * n;\n        q = p * S + t * 3.8 + sin(t * 2.15 - d * 8.0) * 4.0 + j + a - n;\n        a += dot(cos(q) / S, vec2(0.4));\n        n -= sin(q);\n        S *= animationSpeed; // Adjust animation speed\n\n        // Apply zoom-in effect by increasing the shapeScale\n        p *= 1.01; // Adjust this increment to control the zoom speed\n\n        m = mat2(m[0][0] * 2.05, m[0][1] * 1.05, m[1][0] * 1.05, m[1][1] * 1.05);\n    }\n\n    col = vec3(1.1, 2.6, 3.4) * ((a * 3.0) + 0.2) + a + a - d;\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}