{"ver":"0.1","info":{"id":"tdd3RB","date":"1569327101","viewed":114,"name":"testing art of code","username":"hexdump","description":"Just a simple circle shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 drawCircle(vec2 center, vec2 uv, float radio, vec4 color)\n{\n    float d = length(uv-center);\n    float c = 1.0-smoothstep(radio-0.01, radio,d);\n\n    color *= c;\n    color.w = 1.0;\n    return color;\n}\n\nvec4 drawVBand(vec2 uv, float x, float width, vec4 color, float blur)\n{\n   \tfloat halfWidth = width/2.;\n    float rightBand = smoothstep(x-halfWidth,x-halfWidth+blur, uv.x);\n    float leftBand = 1.-smoothstep(x+halfWidth,x+halfWidth+blur, uv.x);\n    \n    return leftBand*rightBand*color;\n}\n\nvec4 drawHBand(vec2 uv, float y, float width, vec4 color, float blur)\n{\n   \tfloat halfWidth = width/2.;\n    float dithering = width/100.;\n    float rightBand = smoothstep(y-halfWidth,y-halfWidth+blur, uv.y);\n    float leftBand = 1.-smoothstep(y+halfWidth,y+halfWidth+blur, uv.y);\n    \n    return leftBand*rightBand*color;\n}\n\nvec4 drawRect(vec2 uv, float centerX, float centerY, float widthX, float widthY, vec4 color, float blur)\n{\n\tvec4 fragColor = drawHBand(uv, centerX, widthY, color, blur);\n    fragColor *= drawVBand(uv, centerY, widthX, color, blur);\n    return fragColor;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Output to screen\n    vec2 uv = fragCoord.xy/iResolution.xy; // 0 - 1\n\tuv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \n    uv.y += cos(uv.x*10.+iTime*5.)*0.2;\n    \n    /*fragColor = drawHBand(uv, 0., 0.3, vec4(1.,0.,0.,1.));\n    fragColor = drawHBand(uv, 0., 0.01, vec4(1.,0.,0.,1.));*/\n    \n    float widthX = 0.8;\n    float blur = smoothstep(0.,0.5,uv.x)/0.5;\n    fragColor = drawRect(uv, 0., 0.,widthX,0.2, vec4(1.,0.,0.,1.), blur);\n    \n}\n\n\n\n\n/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Output to screen\n    vec2 uv = fragCoord.xy/iResolution.xy; // 0 - 1\n\tuv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    fragColor = drawCircle(vec2(0,0), uv, 0.5, vec4(1,1,0,1));\n    fragColor -= drawCircle(vec2(0,0), uv, 0.4, vec4(1,1,1,1));\n    fragColor += drawCircle(vec2(0,0.1), uv, 0.4, vec4(1,1,0,1));\n    fragColor -= drawCircle(vec2(0.2,0.3), uv, 0.1, vec4(1,1,1,1))*2.0;\n    fragColor -= drawCircle(vec2(-0.2,0.3), uv, 0.1, vec4(1,1,1,1))*2.0;\n}*/","name":"Image","description":"","type":"image"}]}