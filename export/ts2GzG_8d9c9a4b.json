{"ver":"0.1","info":{"id":"ts2GzG","date":"1549237992","viewed":335,"name":"evankh_Underwater","username":"evankh","description":"Playing around with a noise function and made this somewhat messy underwater distortion.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 size = vec2(8.,6.);\nvec2 otherlocation = vec2(100.0, 100.0);\n\nfloat rand(float seed) {\n    // Deterministically produce noise in the range [0, 1].\n    // No idea how it's actually distributed but it looks ok.\n    return fract(15547.3 * sin(fract(94.3*seed + 10579.6) * fract(76.5*seed + 8437.2)));\n}\n\nfloat rand(vec2 seed) {\n    // Turn a pair of floats into a single float in an isotropic, asymmetric way\n    //return mix(seed.x, seed.y, seed.x / seed.y);\t// Good for most areas, except around the axes\n    if (seed.y > seed.x)\n    \treturn mix(seed.x, seed.y, (seed.x + 50.) / (seed.y + 250.));\t// Good for most reasonable y\n    return mix(seed.x, seed.y, (seed.y + 50.) / (seed.x + 250.));;\n}\n\nfloat smooth1(float x) {\n    // Cubic smoothing, same as smoothstep\n    return x * x * (3.0 - 2.0 * x);\n}\n\nfloat smooth2(float x) {\n    // Ken Perlin's Famous Quintic Smoothing\n    return x * x * x * (x * (x * 6.0 - 15.0) + 10.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pos = uv * size;\t// Position in the grid\n    pos.x += iTime;\n    vec2 cell = floor(pos);\t// Grid cell number\n    vec2 offs = fract(pos);\t// Location in grid cell\n    offs.x = smooth2(offs.x);\n    offs.y = smooth2(offs.y);\n    \n    vec2 right = vec2(1.0, 0.0);\n    vec2 up = vec2(0.0, 1.0);\n    float val1 = mix(rand(rand(cell)), rand(rand(cell + right)), offs.x);\n    float val2 = mix(rand(rand(cell + up)), rand(rand(cell + up + right)), offs.x);\n    cell += otherlocation;\n    float val3 = mix(rand(rand(cell)), rand(rand(cell + right)), offs.x);\n    float val4 = mix(rand(rand(cell + up)), rand(rand(cell + up + right)), offs.x);\n    //float dy = val2 - val1;\n    float valx = mix(val1, val2, offs.y);\n    float valy = mix(val3, val4, offs.y);\n    //val = smooth2(val);\t// Makes it look like the whites are clipping, but apparently not\n    \n    //vec3 col = vec3(valx);\n    //vec3 col = vec3(0.0, dy, 0.0);\n    //vec2 texoff = vec2(rand(rand(cell)), rand(rand(cell + otherlocation)));\n    vec2 texoff = vec2(valx, valy);\n    vec3 col = texture(iChannel0, uv + texoff * 0.1).rgb;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}