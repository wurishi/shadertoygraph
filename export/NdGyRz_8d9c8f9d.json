{"ver":"0.1","info":{"id":"NdGyRz","date":"1654312328","viewed":55,"name":"Xor operation2","username":"tk87","description":"pseudo xor","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pxor(float x, float y) {\n    float ret = 0.0;\n    float a = 1.0;\n    for(int i = 0; i < 5; ++i){\n        ret += mod(x + y, 2.0) * a;\n        a *= 2.0;\n        x = floor(x * 0.5);\n        y = floor(y * 0.5); \n    }\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    float t = iTime;\n    \n    float m = mod(floor(t*3.0), 30.0) + 2.0;\n    uv += iResolution.x;\n    uv *= 50.0;\n    uv = floor(uv);\n    float cnt = 0.0;\n    for(float i = -10.0; i <= 10.0; i += 1.0) {\n        for(float j = -10.0; j <= 10.0; j += 1.0) {\n            float n = pxor(uv.x - i, uv.y - j);\n            cnt += step(0.1, mod(n, m));\n        }\n    }\n    fragColor = vec4(vec3(mod(cnt, 2.0)), 1.0);\n}","name":"Image","description":"","type":"image"}]}