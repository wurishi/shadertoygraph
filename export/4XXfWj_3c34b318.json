{"ver":"0.1","info":{"id":"4XXfWj","date":"1728896232","viewed":33,"name":"Line and rotation in the center","username":"darkomtc","description":"Making a line rotate in the center of the screen but keeping the aspect ratio of the line.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["aspectratio","line","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14;\n// Take this and multiply your UV by the resulting mat2 to get the rotation\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float sine = sin(angle), cosine = cos(angle);\n    return mat2( cosine, -sine,\n                 sine,    cosine );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspectRatio = iResolution.y / iResolution.x;\n    vec2 uv = fragCoord/iResolution.x;\n    uv.y -= 0.5 * aspectRatio;\n    // vec2 uv = fragCoord/iResolution.xy;\n    // uv.y -= 0.5;\n    uv.x -= 0.5;\n    uv *= rotationMatrix(75.0 * sin(2.0 * 3.14 * iTime * 0.2));\n    uv.x += 0.5;\n\n    float c = smoothstep(1.0/iResolution.y, 0.0, abs(uv.x - 0.5) - 0.01);\n    vec3 col = vec3(c, 0, 0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}