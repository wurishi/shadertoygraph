{"ver":"0.1","info":{"id":"cdtSR4","date":"1679465681","viewed":174,"name":"Digital Glitch","username":"Albarnie","description":"Procedural glitch effect, two pass","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["postprocessing","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 Sample (vec2 uv)\n{\n    return texture(iChannel0, uv).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec3 maxBrightness = vec3(0.0f);\n    vec3 totalBrightness = vec3(0.0f);\n    \n    float random = texture(iChannel1, uv).r;\n\n    for(float i = 0.0f; i < SampleCount; i++)\n    {\n        vec2 uv2 = uv - vec2(random /  SampleCount * i, 0);\n        vec3 brightness = Sample(uv2);\n        maxBrightness = max(maxBrightness, clampVec(brightness * 3.0f-1.5f, 0.0f, 1.0f)*texture(iChannel1, uv2).rgb);\n        totalBrightness += brightness;\n    }\n\n\n    // Output to screen\n    fragColor = vec4(maxBrightness.rgb, 0.0f);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 Sample (vec2 uv)\n{\n    return texture(iChannel0, uv).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n        vec3 maxBrightness = vec3(0.0f);\n    vec3 totalBrightness = vec3(0.0f);\n    \n        float random = texture(iChannel1, uv+ vec2(0.16f, 0.586f)).r;\n\n    for(float i = 0.0f; i < SampleCount; i++)\n    {\n        vec2 uv2 = uv - vec2(0, random /  SampleCount * i);\n        vec3 brightness = Sample(uv2);\n        maxBrightness = max(maxBrightness, clampVec(brightness * 3.0f -1.5f, 0.0f, 1.0f)*texture(iChannel1, uv2 + vec2(0.4f, 0.526f)).rgb);\n        totalBrightness += brightness;\n    }\n\n\n    // Output to screen\n    fragColor = vec4(maxBrightness.rgb, 0.0f);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float SampleCount = 32.0f;\n\nvec3 clampVec (vec3 funcInput, float minimum, float maximum)\n{\n    return min(max(funcInput, vec3(minimum)),vec3(maximum));\n}","name":"Common","description":"","type":"common"}]}