{"ver":"0.1","info":{"id":"XtjBz3","date":"1516822150","viewed":99,"name":"AUCS Playground - Radial Test","username":"ilmikko","description":"Radial stuff and how it differs from others","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["flower","radial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897\n\n// You can use smoothstep for blurry/antialiased edges, or step for crisp edges.\nfloat contour( float d, float width )\n{\n    return smoothstep(0.0, 0.04, d) - smoothstep(width, 0.04+width, d);\n}\n\nfloat fill( float d )\n{\n    return smoothstep(0.0, 0.04, d);\n}\n\nfloat radial( vec2 uv, vec2 position, float radius )\n{\n    \n    float angle = atan(uv.y,uv.x);\n    \n    // Add time to the angle to make the shape spin\n    angle+=iTime/5.;\n    \n    // Make angle 0..1 (atan returns radians)\n    //angle/=(2.*PI);\n    //angle+=0.5;\n    \n    // Add some waves!\n    float wavyDelta = sin((angle+iTime)*5.)/15.;\n    \n    float split = 2.*PI / 5.;\n    \n    float len = 1. - length(uv-position)*cos(split*floor(0.5+angle/split)-angle)/radius;\n    \n    len+=wavyDelta;\n  \t\n    return len;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Realign UV's just like we did the last time\n\tvec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n    \n    vec3 color = vec3(0);\n    \n    color += contour(radial(uv,vec2(0,0),0.5), 0.22);\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}