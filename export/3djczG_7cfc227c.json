{"ver":"0.1","info":{"id":"3djczG","date":"1586866720","viewed":139,"name":"Rocky Cave","username":"omeometo","description":"result of some playing around","likes":3,"published":1,"flags":1,"usePreview":0,"tags":["something"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(in vec3 pos){return 0.8+0.2*cos(pos.z*9.);}\n\nmat2 rot(in float t){return mat2(cos(t),-sin(t),sin(t),cos(t));}\n\nfloat lat(in vec3 p){return length(p-round(p));}\nfloat dist(in vec3 p){\n\tvec3 q=p;\n    p.xy *= rot(0.1);\n    p += 0.5;\n    q -= 3.4;\n    q.xy *= rot(2.1);\n    q.yz *= rot(1.1);\n    q.zx *= rot(1.3);\n    return (lat(p)-lat(q*1.2)/1.2)*0.5;\n}\n\nvec3 getNormal(in vec3 pos){\n    float eps=0.001;\n    vec2 s = vec2(eps, -eps);\n    return normalize(dist(pos+s.xxx)*s.xxx\n                    +dist(pos+s.xyy)*s.xyy\n                    +dist(pos+s.yxy)*s.yxy\n                    +dist(pos+s.yyx)*s.yyx);\n}\n\nfloat getAO(in vec3 pos, in vec3 nor){\n\tfloat ao=1.0;\n    float wt=1.0;\n    for(int i=1;i<=5;i++){\n    \tfloat t=float(i)*0.01;\n        float d=dist(pos+t*nor);\n        ao -= (t-d)*wt;\n        wt*=0.5;\n    }\n    return clamp(ao, 0.0, 1.0);\n}\n\nvoid getColor(out vec4 fragColor, in vec3 cen, in vec3 rd){\n\tfragColor = vec4(vec3(0), 1.0);\n    float t=0.01;\n    for(int i=0;i<100;i++){\n    \tvec3 pos = cen + t * rd;\n        float d = dist(pos);\n        if(d<1e-3){\n            vec3 nor = getNormal(pos);\n\t\t\tfloat occ = getAO(pos, nor);\n            fragColor = vec4(vec3(1.5,0.15,0.0)*noise(pos)*(dot(nor, -rd)*0.8+0.2)*occ, 1);\n            fragColor *= (1.0-0.01*float(i));\n\t\t\t//fragColor = vec4(v02c3(occ), 1);\n            //fragColor = vec4(vec3(1.0-float(i)/64.0), 1);\n            \n            break;\n        }\n        t += d;\n        if(t>=1e2){\n        \tbreak;\n        }\n    }\n    \n    fragColor = pow(fragColor, vec4(0.45));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\t\n    vec3 cam = vec3(0,0,-iTime);\n    vec3 fwd = normalize(vec3(sin(iTime*0.2),sin(iTime*0.3),-5));\n    vec3 up = vec3(0,1,0);\n    vec3 right = cross(fwd, up);\n    \n    vec3 rd = normalize(fwd + 0.3 * (uv.x * right + uv.y * up));\n    \n    getColor(fragColor, cam, rd);\n}\n\nvoid mainVR(out vec4 fragColor, in vec2 fragCoord, in vec3 cam, in vec3 rd){\n\tgetColor(fragColor, cam, rd);\n}","name":"Image","description":"","type":"image"}]}