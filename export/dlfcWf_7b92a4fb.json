{"ver":"0.1","info":{"id":"dlfcWf","date":"1691269384","viewed":72,"name":"cybertrash","username":"pik","description":"sample","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sample"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//THX https://www.shadertoy.com/view/lstGRB\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define M mat3(0.,0.8,0.6,-0.8,0.36,-0.48,-0.6,-0.48,0.64)\n#define MIN w*=sc;q*=M*sc;q=abs(q)-vec3(r,r,r);d=min(d,object(q,r)/w);\n#define MAX w*=sc;q*=M*sc;q=abs(q)-vec3(r,r,r);d=max(d,-object(q,r)/w);\n//CHANGE\n//#define transparent 0\n#define COLOR 1\nvec3 hash(vec3 p){\n    return fract(sin(p*vec3(87.,-513.,87.5))*8721.);\n}\n\nvoid transform(inout vec3 p){\n    float t=iTime*0.1;\n    p.xy*=rot(t);\n    p.xz*=rot(t);\n    //p-=hash(vec3(fract(iTime*18.)))*0.005*vec3(1.-pow(sin(iTime)*0.5+0.5,10.));\n}\n//https://iquilezles.org/articles/distfunctions/\nfloat sdBoxFrame( vec3 p, vec3 b, float e )\n{\n       p = abs(p  )-b;\n  vec3 q = abs(p+e)-e;\n  return min(min(\n      length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n      length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n      length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n}\n\nfloat object(vec3 p,float r){\n    //vec3 q=abs(p)-vec3(r);\n    //return abs(length(max(q,0.))+min(max(max(q.x,q.y),q.z),0.))-r;\n    //return length(p)-r;\n    return sdBoxFrame(p,vec3(r),r*0.1);\n}\n\nfloat map(in vec3 p,float r,float sc){\n    float w=1.,d=10.;vec3 q=p;\n    transform(q);\n    MIN MAX MAX MAX MIN MIN MAX MIN MIN MIN\n    return d;\n}\n\nvec3 normal(vec3 p,float r,float sc){\n    vec2 e=vec2(0.01,0.);\n    float f=map(p,r,sc);\n    return normalize(vec3(f-map(p-e.xyy,r,sc),\n                          f-map(p-e.yxy,r,sc),\n                          f-map(p-e.yyx,r,sc)));\n}\n\n\nvoid raymarch(inout vec3 p,in vec3 rd,inout float l,inout float t){\n    t=0.;\n    for(float i=0.;i<56.;i++){\n        p+=rd*t;\n        t=map(p,1.,2.);\n        if(t<0.001 || l>10.)break;\n        l+=t;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n    uv.x*=iResolution.x/iResolution.y;\n    float POS= iMouse.z>0. ? 1. : 2.;\n    vec3 col;\n    vec3 ro= (POS ==1.) ? vec3(0.,0.,-2.5) : vec3(0.5*sin(iTime*0.1),0.,1.*cos(iTime*0.1));\n    vec3 rd=normalize(vec3(uv,1.));\n    float l=0.;\n    float t=0.;\n    vec3 p=ro;\n\n    #ifdef COLOR\n        raymarch(p,rd,l,t);\n        float n=length(normal(p+vec3(0.01),1.,2.)-normal(p,1.,2.));\n        col=vec3(abs(sin(p*5.)))*step(t,0.001)*0.7;\n        col-=vec3(1.)*step(0.9,n)*step(t,0.001)*0.8;\n    #endif\n    //transparent\n    #ifdef transparent\n        vec3 c;\n        for(float i=0.;i<56.;i++){\n            if(c.x*c.y*c.z>1. || t>10.) break;\n            p=ro+rd*l;\n            float d=map(p,1.,2.);\n            float near=(0.001-abs(d))/0.001;\n            if(near>0.){\n                c+=near/(1.+l*l*0.1)*0.35;\n            }\n            l+=max(abs(d),0.02);\n        }\n        col+=c;\n        col*=1.2;\n    #endif\n    col=pow(col,vec3(1./2.2));\n    fragColor=vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}