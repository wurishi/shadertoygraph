{"ver":"0.1","info":{"id":"sllSWB","date":"1626473954","viewed":77,"name":"Bezier Curvature","username":"zheck","description":"Bezier curve between three points","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define UV_ORIGIN 0.5\n#define DOT_SIZE 0.02\n#define LINE_THICKNESS 0.0025\n#define ANIMATION_DURATION 5.0\n\nfloat df_line(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p - a, ba = b - a;\n\tfloat h = clamp(dot(pa,ba) / dot(ba,ba), 0.0, 1.0);\t\n    float edge = 1.0/min(iResolution.x, iResolution.y);\n    return smoothstep(edge, -edge, length(pa - ba * h) - LINE_THICKNESS);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Offset fragCoord so that 0.0 is the center of the screen\n    float smaller = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord-UV_ORIGIN*iResolution.xy)/smaller;\n    \n    // Define some points\n    vec2 pointA = vec2( 0.6, -0.3);\n    vec2 pointB = (iMouse.xy-UV_ORIGIN*iResolution.xy)/min(iResolution.x, iResolution.y);\n    vec2 pointC = vec2(-0.6, -0.3);\n    \n    // I multiply by two and do some simple maths to get an animation that pings back and forth\n    float t = ( ANIMATION_DURATION * 2.0 ) - ANIMATION_DURATION;\n    t = mod(iTime, ANIMATION_DURATION * 2.0);\n    t -= ANIMATION_DURATION;\n    t = abs(t);\n    t /= ANIMATION_DURATION;\n    \n    // Calculate some lines\n    vec2 atob = mix(pointA, pointB, t);\n    vec2 btoc = mix(pointB, pointC, t);\n    vec2 bezier = mix(atob, btoc, t);\n    \n    // Get a value that represents each point on the canvas\n    vec3 col = vec3(0);\n    float edge = 1.0/smaller;\n    float dotA = smoothstep(edge, -edge, length(uv - pointA) - DOT_SIZE);\n    float dotB = smoothstep(edge, -edge, length(uv - pointB) - DOT_SIZE);\n    float dotC = smoothstep(edge, -edge, length(uv - pointC) - DOT_SIZE);\n    float bezierDot = smoothstep(edge, -edge, length(uv - bezier) - DOT_SIZE);\n    \n    // Define some colors\n    vec3 endPointColor = vec3(0.3, 0.35, 0.7);\n    vec3 centerPointColor = vec3(0.7, 0.65, 0.3);\n    vec3 bezierPointColor = vec3(1.0, 0.1, 0.1);\n    vec3 greenColor = vec3(0.2, 0.7, 0.4 );\n    \n    // Add each point's visual to the canvas and shade them each a unique color\n    col += dotA * endPointColor;\n    col += dotB * centerPointColor;\n    col += dotC * endPointColor;\n    col += bezierDot * bezierPointColor;\n    col += df_line(uv, pointA, pointB);\n    col += df_line(uv, pointB, pointC);\n    col += df_line(uv, atob, btoc) * greenColor;\n    \n    col = sqrt(col);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}