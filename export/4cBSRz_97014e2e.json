{"ver":"0.1","info":{"id":"4cBSRz","date":"1705968825","viewed":131,"name":"Cheap Glare","username":"Nikio","description":"Cheap glare that checks the luminosity of a small number of points and spawns a starburst at that point if it's bright enough.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["starburst","lensflare","glare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265;\nfloat select_range(float x, float a, float b) {\n    return (x < a) ? 0.0 : (x > b) ? 0.0 : 1.0;\n}\nfloat vec_angle(vec2 v) {\n\tv = normalize(v);\n\tif(v.y>0.0){ return acos(v.x); } else { return -acos(v.x); }\n}\nfloat point(vec2 uv) {\n    float n = texture(iChannel0, uv).x;\n    n = select_range(n,0.45,0.451);\n    return n;\n}\n/*\nfloat thumbs(float x) {\n    return pow(log((x-0.5)*0.9+0.1)+1.,0.25);\n}*/\nfloat starburst(vec2 uv, vec2 p, float s) {\n    vec2 q = p - uv;\n    float a = vec_angle(q) * 3. + iTime;\n    //float a2 = vec_agle(q) * 64. + iTime;\n    float w = 0.001 * s;\n    a = (2.0 / w) * (pow(sin(a), 2.) - (1.0 - w)) * 1.0;\n    float r = 1.0-clamp(length(q)*(2./s),0.,1.);\n    float n = s*0.2*pow(2.,-pow(length(q*32.),2.));\n    float m = pow(r, 32.0);\n    return n + clamp(m * mix(a * 4., r * 10. * s, r), 0., 1.);\n}\nfloat lum(vec3 v) {\n    return v.x + v.y + v.z;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float x = 0.;\n    int n = 8;\n    float da = 2.*PI / float(n);\n    float r_max = 8.;\n    float dr = 1.;\n    fragColor = texture(iChannel1, uv);\n    int nx = 8;\n    int ny = 8;\n    for(int i = 0; i < nx; i += 1) {\n        for(int j = 0; j < ny; j += 1) {\n            vec2 t = vec2(i,j)/vec2(nx,ny);\n            vec2 o = texture(iChannel2,t+0.1*vec2(iTime/iChannelResolution[0].x,.0)).xy;\n            t += o * 0.55;\n            float l = lum(texture(iChannel1, t).xyz);\n            float tr = 1.8;\n            float s = (l - tr)/(3.0-tr);\n            if(l > 1.8) {\n                x += starburst(uv, t, s*2.);\n            }\n        }\n    }\n    fragColor.xyz += vec3(x);\n}","name":"Image","description":"","type":"image"}]}