{"ver":"0.1","info":{"id":"NlVBWw","date":"1664621067","viewed":178,"name":"Artober - Baskets ","username":"Flopine","description":"First shader of - I hope - an everyday series :D (no special prompt, am lazy) Fall here I come ヾ(≧▽≦*)o  ","likes":25,"published":1,"flags":0,"usePreview":1,"tags":["raymarching","animation","truchet","isometric","pattern","everyday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define circle(u,r) (length(u)-r)\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre))) \n\n#define rando(u) textureLod(iChannel0, u*0.1,1.).x\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define PI acos(-1.)\n\n#define dt(sp,off) fract((iTime+off)*sp)\n\n\nstruct obj{\n    float d;\n    vec3 c;\n};\n\nobj minobj(obj a, obj b)\n{\n    if (a.d<b.d) return a;\n    else return b;\n}\n\n// iq's distance function\n// https://iquilezles.org/articles/distfunctions/\nfloat extrude (vec3 p, float d, float h)\n{\n    vec2 w = vec2( d, abs(p.z) - h );\n    return min(max(w.x,w.y),0.0) + length(max(w,0.0));\n}\n\nfloat truchet (vec2 uv)\n{\n    vec2 id = floor(uv);\n    uv = fract(uv)-.5;\n    if (rando(id)>.5) uv.x = -uv.x;\n    float s = (uv.x > -uv.y) ? 1. : -1.;\n    uv -= 0.5*s;\n    \n    return abs(circle(uv,0.5));\n}\n\nfloat box (vec3 p, vec3 c)\n{\n    vec3 q = abs(p)-c;\n    return min(0.,max(q.x,max(q.y,q.z)))+length(max(q,0.));\n}\n\nfloat per = .5;\nobj ground (vec3 p)\n{\n    float t = truchet(p.xz);\n    p.y += 0.2+t*0.5;\n    p.xz = mod(p.xz-per*.5, per)-per*.5;\n    float d = box(p,vec3(0.24));\n    \n    return obj(d,vec3(1.));\n}\n\nobj truch (vec3 p)\n{\n    float t = extrude(p.xzy, truchet(p.xz), 0.1)-0.03; \n    return obj(t, vec3(0.,1.,0.5));\n}\n\nobj balls (vec3 p)\n{\n    vec2 id = floor((p.xz-per)/(per*2.));\n    p.y -= 0.01;\n    p.xz = mod(p.xz-per, per*2.)-per;\n    \n    p.xz *= rot(dt(1.,length(id*0.4))*2.*PI );\n    p.xz -= 0.15;\n    float s = length(p)-0.15;\n    return obj(s, vec3(1.,.5,.8));\n}\n\nobj SDF (vec3 p)\n{\n    \n    p.yz *= rot(-atan(1./sqrt(2.)));\n    p.xz *= rot(PI/4.);\n    \n    obj scene = ground(p);\n    scene = minobj(scene, truch(p));\n    scene = minobj(scene, balls(p));\n    \n    return scene;\n}\n\nvec3 gn (vec3 p)\n{\n    vec2 e = vec2(0.01,0.);\n    return normalize(SDF(p).d-vec3(SDF(p-e.xyy).d,SDF(p-e.yxy).d,SDF(p-e.yyx).d));\n}\n\nfloat ao(float e, vec3 p, vec3 n)\n{return clamp(SDF(p+e*n).d/e, 0., 1.);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(uv*2.,-50.), rd=vec3(0.,0.,1.),p=ro,\n    col=vec3(0.), l=normalize(vec3(1.,2.,-1.));\n    \n    bool hit = false;\n    obj O;\n    for(float i=0.; i<64.; i++)\n    {\n        O = SDF(p);\n        if (O.d<0.001)\n        {\n            hit=true; break;\n        }\n        p += O.d*rd;\n    }\n    \n    if (hit)\n    {\n        vec3 n = gn(p);\n        float dli = dot(n,l)*.5+.5; \n        float AO = ao(0.03, p, n) + ao(0.15, p, n) + ao(0.2, p, n);\n        col = mix(vec3(0.,0.1,0.4),O.c,dli)*(AO/3.+0.15);\n    } \n    // Output to screen\n    fragColor = vec4(sqrt(clamp(col, 0., 1.)),1.0);\n}","name":"Image","description":"","type":"image"}]}