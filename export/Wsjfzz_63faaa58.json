{"ver":"0.1","info":{"id":"Wsjfzz","date":"1589389382","viewed":144,"name":"ShATI - Contraste","username":"Flopine","description":"My former school named ATI decided to launch an everyday challenge from 4th may to 24th may, here is the 9th subject: contrast :) ","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","color","puzzle","eschertiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n// Shader made for Everyday ATI challenge\n\n#define TAU 6.2831853071\n#define dt mod(iTime-TAU/8.,TAU)\n#define scale 0.08\n\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(.001,fwidth(val-thre)))\n#define square(u,s) AAstep(s, max(abs(u.x),abs(u.y)))\n#define circle(u,s) AAstep(s, length(u))\n\n\nfloat piece (vec2 uv)\n{\n   \tvec2 offsetX = vec2 (scale,0.);\n    vec2 offsetXY = vec2 (scale*0.2, scale);\n    return square(uv, scale)\n        * circle(uv-offsetX,scale*0.4)\n        * circle(uv-offsetXY, scale*0.4)\n        +(1.-circle(uv+offsetX,scale*0.4))\n        +(1.-circle(uv+offsetXY,scale*0.4));\n}\n\nfloat pattern (vec2 uv)\n{return piece(uv)*piece(vec2(-uv.x,-uv.y)+vec2(-scale*2.,scale*2.));}\n\nfloat grid (vec2 uv)\n{\n    uv = mod(uv,scale*4.)-scale*2.;\n    float d = 1.;\n    for (int i=-1; i<=1; i++)\n    {\n        for(int j=-1; j<=1;j++)\n        {\n            vec2 offset = vec2(float(i),float(j));\n            d *= pattern(uv+offset*(scale*4.));\n        }\n    }  \n    return clamp(d,0.,1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy);\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 centered_uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n \tvec3 col = mix(vec3(1.,0.,.5),vec3(.95),grid(uv));\n    \n    float mask = piece(centered_uv*sin(length(centered_uv*0.7)-dt)*0.2);\n    col = mix(col, 1.-col, clamp(mask,0.,1.));\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}