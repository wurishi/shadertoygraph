{"ver":"0.1","info":{"id":"4flXDs","date":"1705910923","viewed":48,"name":"background 8","username":"wainggan","description":"eehhh. I tried, but it came out only kinda okay. I'll tinker with it more later","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["game","background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat random(vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nmat2 rotate(float r) {\n    return mat2(\n        cos(r), -sin(r),\n        sin(r), cos(r)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float len = distance(uv, vec2(0.0));\n    \n    float r = random(uv);\n    \n    float direction = r * 3.1415 * 2.0;\n    direction += (sin(iTime / 7.0 + r * 3.141 * 2.0) / 2.0 + 0.5);\n    vec2 off = vec2(0.5, 0.0) * rotate(direction);\n    uv += off * (sin(iTime) / 2.0 + 0.5 + 0.25) * pow(len / 6.0, 2.0);\n    \n    \n    vec2 nuv = uv * mat2(0.71, -0.71, 0.71, 0.71);\n    \n    vec2 id = floor(nuv * 2.0 + 0.5);\n    \n    nuv = fract(nuv * 2.0 + 0.5);\n    \n    float dist = distance(nuv, vec2(0.5));\n    \n    \n    float melt = distance(uv, vec2(0.0)) * ((sin(iTime / 33.0) / 2.0 + 0.5) * 0.5 + 0.5);\n    float size = 0.5 + sin(iTime / 2.0 + melt * 40.0) * 0.1;\n    \n    float mask = smoothstep(size, size + 0.02, dist);\n    \n    float hash = random(id);\n    \n    vec3 color = vec3(\n        sin(iTime / 4.0 + 3.14 * 2.0 / 3.0 * 1.0 + hash * 3.14) / 2.0 + 0.5,\n        sin(iTime / 4.0 + 3.14 * 2.0 / 3.0 * 2.0 + hash * 3.14) / 2.0 + 0.5,\n        sin(iTime / 4.0 + 3.14 * 2.0 / 3.0 * 3.0 + hash * 3.14) / 2.0 + 0.5\n    );\n    color *= vec3(0.8, 0.2, 0.8);\n    \n    vec3 col = min(vec3(mask) + color, vec3(1.0));\n    \n    \n    vec3 m = vec3(mask);\n    \n    vec2 muv = uv - uv / len * 0.8;\n    \n    vec3 c0 = vec3(0.5, 0.5, 0.5) * (sin(abs(muv.y * 10.0) + iTime / 2.1) / 2.0 + 0.5);\n    vec3 c1 = vec3(0.5, 0.5, 0.5) * (sin(abs(muv.x * 10.0) + iTime / 1.9) / 2.0 + 0.5);\n    \n    m *= max(c0, c1);\n    m = pow(m * 0.75, vec3(2.0));\n    \n    \n    col = mix(col, m, mask);\n    \n    fragColor = vec4(col, 1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}