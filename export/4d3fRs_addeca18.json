{"ver":"0.1","info":{"id":"4d3fRs","date":"1526294491","viewed":151,"name":"Learning the ropes","username":"Kaspars","description":"Testing buffers","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n    float t = iTime;\n    float len = 230.0;\n    fragColor *= clamp(mod(t, len) / 10.0, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 Data = texture(iChannel2, uv);\n    vec2 Scale;\n\tvec2 Pos;\n\tfloat Prop = 1.0;\n    Scale.x = 50.0;\n    Scale.y = 50.0;\n\tfloat t = iTime * 0.997;\n    vec4 Audio = texture(iChannel1, vec2(0.8, 0.01 ));\n    Prop *= Audio.x;\n    fragColor = clamp(Data, 0.0, 1.0) * Prop;\n    //Scale.x = (1.5 + sin(t * 2.0)) * iResolution.x / 8.0;\n    //Scale.y = (1.5 + sin(t * 2.0)) * iResolution.y / 8.0;\n\tif(iMouse.x == 0.0 && iMouse.y == 0.0){\n\t\tPos.x = iResolution.x / 2.0;\n\t\tPos.y = iResolution.y / 2.0;\n\t}\n\telse {\n\t\tPos = iMouse.xy;\n\t}\n\tfor(int i=0;i<=2;i++){\n\t\tt += Audio.x / 16.0;\n\t\tScale.x = 30.0 * (1.5 + sin(t * 2.0));\n\t\tScale.x += distance(20.0 - (fragCoord.x / iResolution.x * 40.0), Pos.x / iResolution.x);\n\t\tScale.y = 30.0 * (1.5 + sin(t * 2.0));\n\t\tScale.y += distance(20.0 - (fragCoord.y / iResolution.y * 40.0), Pos.y / iResolution.y);\n\t\tvec3 col = vec3(1.0, 1.0, 1.0);\n\t\tfloat x = fragCoord.x/Scale.x - Pos.x / Scale.x;\n\t\tfloat y = fragCoord.y/Scale.y - Pos.y / Scale.y;\n\t\tfloat pulse = t/2.0;\n\t\tuv.x = x * cos(pulse) + y * sin(pulse);\n\t\tuv.y =  y*cos(pulse) - x * sin(pulse);\n\t\tvec4 image = texture(iChannel0, uv);\n\t\tfragColor[i] += image[i] * (1.0 - Prop);\n\t\tif((int(x * cos(pulse) + y * sin(pulse)) + int(y*cos(pulse) - x * sin(pulse))) % 2 != 0){\n\t\t\t\n\t\t\tfragColor[i] *= 2.0 * (1.35 - Prop);\n\t\t}\n\t}\n    fragColor = clamp(fragColor, 0.0, 1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}