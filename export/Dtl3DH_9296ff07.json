{"ver":"0.1","info":{"id":"Dtl3DH","date":"1671700907","viewed":88,"name":"Explore a Julia Fractal","username":"Giraugh","description":"Click and drag to try different `c` values!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float julia(vec2 uv, float scale) {\n    vec2 z = vec2(mix(-1.5, 1., uv.x), mix(-1., 1., uv.y));\n    \n    // Mouse controls\n    float cx = iMouse.x / iResolution.x;\n    float cy = iMouse.y / iResolution.y;\n \n    // Animated Demo\n    if (iMouse.xy == vec2(0)) {\n        float a = iTime;\n        float l = .5; //min(.35, sin(iTime / 3.) * .2 + .2);\n        cx = cos(a / 1.5) * l;\n        cy = sin(a) * 1.3 * l;\n    }\n    \n    \n    vec2 c = vec2(cx, cy);\n    float its = 0.;\n    \n    while (true) {\n        // Gone to inf?\n        if (length(z) > 2.) {\n            return its;\n        }\n        \n        // Out of time?\n        its += 1.;\n        if (its > 500.) {\n            return 0.;\n        }\n        \n        // perform op\n        float x_t = (z.x*z.x) - (z.y*z.y) + c.x;\n        z.y = (2. * z.x * z.y) + c.y;\n        z.x = x_t;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float its = julia(uv, iTime) / 100.;\n    vec3 col = mix(vec3(.1, .1, 0), vec3(.2, .8, .7), its);\n    //vec3 col = vec3(its);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}