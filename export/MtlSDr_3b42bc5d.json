{"ver":"0.1","info":{"id":"MtlSDr","date":"1436033448","viewed":418,"name":"Drawing a rounded line","username":"lightbits","description":"Useful for GPU-accelerated painting tool","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float drawLine(vec2 p, vec2 p1, vec2 p2, float r)\n{\n    vec2 l = p2 - p1;\n    float L = length(l);\n    float L2 = L*L;\n    \n    float d1 = length(p - p1);\n    float d2 = length(p - p2);\n    float d  = min(d1, d2);\n    float ds = dot(p - p1, l);\n    if (ds >= 0.0 && ds <= L2)\n    {\n        vec2 n = vec2(-l.y, l.x) / L;\n        d = min(d, abs(dot(p - p1, n)));\n    }\n    \n    // blurry\n    //return 1.0 - smoothstep(0.0, 0.5, d - r);\n    \n    // antialiased\n    return 1.0 - smoothstep(0.0, 0.01, d - r);\n    \n    // binary\n    if (d <= r) return 1.0;\n    else return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = gl_FragCoord.xy / iResolution.xy;\n    p.x *= iResolution.x / iResolution.y;\n  \tvec2 p1 = vec2(0.8 + sin(iTime)*0.5, 0.8);\n \tvec2 p2 = vec2(0.8 + cos(iTime)*0.5, 0.2);\n  \tfragColor = vec4(drawLine(p, p1, p2, 0.03));\n}\n","name":"","description":"","type":"image"}]}