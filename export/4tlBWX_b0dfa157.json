{"ver":"0.1","info":{"id":"4tlBWX","date":"1513633555","viewed":712,"name":"Spiral 1 (Horror)","username":"lsdlive","description":"Twisted menger cube.\n\nShort menger formula borrowed from aiekick/coyote.","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 r2d(float a) {\n\tfloat c = cos(a), s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\nfloat de(vec3 p) {\n\n\tp.y += cos(iTime*2.) * .2;\n\n\tp.xy *= r2d(iTime + p.z);\n\n\tvec3 r;\n\tfloat d = 0., s = 1.;\n\n\tfor (int i = 0; i < 3; i++)\n\t\tr = max(r = abs(mod(p*s + 1., 2.) - 1.), r.yzx),\n\t\td = max(d, (.9 - min(r.x, min(r.y, r.z))) / s),\n\t\ts *= 3.;\n\n\treturn d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - .5;\n\tuv.x *= iResolution.x / iResolution.y;\n\n\tvec3 ro = vec3(.1*cos(iTime), 0, -iTime), p;\n\tvec3 rd = normalize(vec3(uv, -1));\n\tp = ro;\n\n\tfloat it = 0.;\n\tfor (float i=0.; i < 1.; i += .01) {\n        it = i;\n\t\tfloat d = de(p);\n\t\tif (d < .0001) break;\n\t\tp += rd * d*.4;\n\t}\n\tit /= .4 * sqrt(abs(tan(iTime) + p.x*p.x + p.y*p.y));\n\n\tvec3 c = mix(vec3(.1, .1, .3), vec3(.7, .1, .3), it*sin(p.z));\n\n\tfragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}