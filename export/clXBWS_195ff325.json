{"ver":"0.1","info":{"id":"clXBWS","date":"1693375650","viewed":55,"name":"Analog Watch","username":"ramansinghdhiman","description":"Analog Watch","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["analogwatch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nfloat deg2Rad(float degrees)\n{\n    return degrees * 0.0174533;\n}\n\nvec2 rotate(vec2 vec, float angle)\n{\n    mat2 rotMat = mat2(cos(angle), -sin(angle),\n        sin(angle), cos(angle));\n\n    return vec * rotMat;\n}\n\nfloat circleShape(vec2 center, vec2 uv, float radius)\n{\n    float dist = length(uv - center);\n    return 1.0 - smoothstep(radius - 0.0025, radius + 0.0025, dist);\n}\n\nfloat rectShape(vec2 center, vec2 size, vec2 uv, float rotation)\n{\n    vec2 le = center - size / 2.0;\n    vec2 ue = center + size / 2.0;\n\n    uv -= 0.5;\n    uv = rotate(uv, deg2Rad(rotation));\n    uv.y += size.y / 2.0;\n    uv += 0.5;\n\n    float smoothness = 0.0025;\n\n    float rect = smoothstep(le.x - smoothness, le.x + smoothness, uv.x);\n    rect *= smoothstep(le.y - smoothness, le.y + smoothness, uv.y);\n\n    rect *= 1.0 - smoothstep(ue.x - smoothness, ue.x + smoothness, uv.x);\n    rect *= 1.0 - smoothstep(ue.y - smoothness, ue.y + smoothness, uv.y);\n\n    return rect;\n}\n\nfloat angleCoords(vec2 uv, float rotation) \n{\n    uv -= 0.5;\n    uv = rotate(uv, deg2Rad(rotation));\n    float angle = atan(uv.x, uv.y);\n    angle /= PI;\n    angle += 1.0;\n    angle /= 2.0;\n    return angle;\n}\n\nfloat clockMarkings(vec2 uv, vec2 center, float count, float thickness, \n    float radius, float lngth, float smoothness)\n{\n    float seg = cos(angleCoords(uv, 0.0) * PI * 2.0 * count);\n    float ring = circleShape(vec2(0.5, 0.5), uv, radius);\n    ring -= circleShape(vec2(0.5, 0.5), uv, radius - lngth);\n    return smoothstep(1.0 - thickness, 1.0 + smoothness - thickness, seg) * ring;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float scale = 0.9;\n\n    uv -= 0.5;\n    uv *= 1.0 / scale;\n    uv.x *= iResolution.x / iResolution.y;\n    uv = rotate(uv, deg2Rad(180.0));\n    uv += 0.5;\n\n    vec2 center = vec2(0.5, 0.5);\n\n    //Base color\n    float mask = circleShape(center, uv, 0.525);\n    vec3 col = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), mask);\n\n    //Minute markings\n    vec3 markColor = vec3(0.1, 0.1, 0.1);\n    float mark = clockMarkings(uv, center, 60.0, 0.1, 0.5, 0.02, 0.1);\n    col = mix(col, markColor, mark);\n\n    //5 minutes markings\n    vec3 mark1Color = vec3(0.0, 0.0, 0.0);\n    float mark1 = clockMarkings(uv, center, 12.0, 0.02, 0.5, 0.035, 0.01);\n    col = mix(col, mark1Color, mark1);\n\n    //Time calculation\n    float hours = iDate.w / 3600.0;\n    float minutes = iDate.w / 60.0;\n    float seconds = iDate.w;\n\n    //Hours hand\n    vec3 hand1Color = vec3(0.0, 0.0, 0.0);\n    float hand1 = rectShape(center, vec2(0.025, 0.3), uv, hours * 360.0 / 12.0);\n    col = mix(col, hand1Color, hand1);\n    \n    //Circle\n    vec3 circleColor = vec3(0.0, 0.0, 0.0);\n    float circle = circleShape(center, uv, 0.03);\n    col = mix(col, circleColor, circle);\n\n    //Minutes hand\n    vec3 hand2Color = vec3(0.2, 0.2, 0.2);\n    float hand2 = rectShape(center, vec2(0.02, 0.4), uv, minutes * 360.0 / 60.0);\n    col = mix(col, hand2Color, hand2);\n    \n    //Circle\n    circleColor = vec3(0.2, 0.2, 0.2);\n    circle = circleShape(center, uv, 0.025);\n    col = mix(col, circleColor, circle);\n\n    //Seconds hand\n    vec3 hand3Color = vec3(1.0, 0.0, 0.0);\n    float hand3 = rectShape(center, vec2(0.01, 0.475), uv, seconds * 360.0 / 60.0);\n    col = mix(col, hand3Color, hand3);\n\n    //Circle\n    circleColor = vec3(1.0, 0.0, 0.0);\n    circle = circleShape(center, uv, 0.02);\n    col = mix(col, circleColor, circle);\n    \n    //Circle\n    circleColor = vec3(1.0, 1.0, 1.0);\n    circle = circleShape(center, uv, 0.0125);\n    col = mix(col, circleColor, circle);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}