{"ver":"0.1","info":{"id":"3l23zt","date":"1560750299","viewed":106,"name":"Mushroom 2D","username":"lucastakejame","description":"cogumelinho","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","mushroom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ss(a,b,c) smoothstep(a,b,c)\n#define SIN(a) (.5 + .5*sin(a))\n#define COS(a) (.5 + .5*cos(a))\n#define PI 3.1415\n\nstruct Circle\n{\n    vec2 c;\n    float r;\n};\n\n// complex number multiplication\nvec2 zm(vec2 a, vec2 b)\n{\n    return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n    \n// returns 1 for values inside a and b value.\nfloat band(float a, float b, float x)\n{\n    return step(a,x) * step(x,b);\n}\n\n// like band, but will make gradient from 0 to 1 and 0 again inside [a,b]\nfloat sband(float a, float b, float x)\n{\n    float n = (x-a)/(b-a);\n    return (1.- 2.*abs(n-.5))*band(a,b,x);\n}\nfloat opSmoothUnion( float d1, float d2, float k )\n{\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    \n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nfloat fCircle(vec2 uv, Circle c)\n{\n   return length(uv - c.c) - c.r;\n}\n\nfloat fBox(vec2 uv, vec2 b)\n{\n\tvec2 d = max(abs(uv) - b,0.);\n    return length(d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord - iResolution.xy)/iResolution.y;\n    vec2 muv = (2.*iMouse.xy - iResolution.xy)/iResolution.y;\n\n    // mushroom head\n    Circle c0 = Circle(vec2(.0,.3), .4);\n    Circle c1 = Circle(vec2( .55,.1), .4);\n    Circle c2 = Circle(vec2(-.55,.1), .4);\n    Circle c3 = Circle(vec2(0,.06), .4);\n    \n    float an = .6*SIN(iTime);//angle\n    vec2 cuv = zm(uv, vec2(cos(an),sin(an))) + vec2(.0,-.2);\n    float head = fCircle(cuv, c0);\n    head = opSmoothUnion(head, fCircle(cuv, c1), .3);\n    head = opSmoothUnion(head, fCircle(cuv, c2), .3);\n    head = opSmoothUnion(head, fCircle(cuv, c3), .4);\n    \n    // sdf to mask\n    float headMask = 1.- ss(0.,.01,head);\n    \n    // mushroom head pattern\n    Circle cm = Circle(vec2(.1,.1), .09);\n    vec2 uvM = cuv * (1. - SIN(head*15. + 4.*iTime)*3.)\n        \t\t+ .031*vec2( 1.9*sin(cuv.y*10. + iTime),\n                        \t .5*cos(cuv.x*59.) )\n        \t\t+ vec2(1. - cuv.x*(cuv.x - 5.)*(cuv.y)*.5);\n    float mask = fCircle( mod(uvM*.9, .4 ), cm);\n    float hh = 1.- ss(0.,.051, mask);\n    \n    \n    // mushroom body\n    float dx = (.5 - ss(.6,-.6,uv.y)*.3*sin(uv.y*2.5 + .5*sin(iTime) ) ); \n    vec2 buv = uv*vec2(1.5,1.5) + vec2(dx, 0.) + vec2(-.6,.6);\n    float body = fBox(buv, vec2(.15,.5))-.3*ss(.6,-.6,uv.y);\n    float bodyMask = ss(0.04,.02, body);\n    \n    // eyes\n    vec2 eluv = vec2(abs(buv.x),buv.y);\n    eluv *= 2.*vec2(2.,1.);\n    eluv += vec2(-.3,-1.2);\n    \n    float blink = max(sband(.2, .4, mod(iTime, 5.)), sband(1., 1.2, mod(iTime, 3.)));\n    float eyes = fCircle(eluv * vec2(1., blink*20. + 1.), Circle(vec2(0.), .01));\n    float pupils = fCircle(eluv*vec2(1.,2.)*2. + vec2(.1 + .1*sin(iTime),.1 + 0.2*sin(3.*iTime)), Circle(vec2(0.), .01 + blink*.3));\n    float eyesMask = ss(.25, .2, eyes);\n    \n    \n    // mouth\n    vec2 mouv = vec2(abs(buv.x),buv.y + .04*cos(uv.x*1.));\n\tfloat mouth = fBox(mouv, vec2(.3,.01 + .015*cos(uv.x*14.)));\n    float mouthMask = ss(.01,.0, mouth);\n    \n    // beck\n    vec2 beuv = buv + vec2(.6, .03);\n    float bgrad = ss(-0.02,-.09, uv.x*.1);\n    float beck = fBox(beuv, vec2(.3, .001 + .001*bgrad ))- bgrad*bgrad*.3;\n    float beckMask = ss(.01,.0, beck);\n    \n    // add beck\n    float tipCircle = fCircle(buv, Circle(vec2(-1.,-.05), .04));\n    float bg = ss(.2,.14, tipCircle);\n    vec3 tip = mix(vec3(.9,.9,.1), vec3(1.,0.,0.), SIN(tipCircle*200.+ 10.*iTime));\n    \n    // smoke\n    float noise = texture(iChannel0, 5.*fragCoord.xy/iResolution.xy).r;\n    vec2 smuv = uv-vec2(.1,.3);\n    smuv *= vec2(1. + (uv.y+.3)*SIN(uv.y*5. + iTime*2.), .3*abs(uv.y));\n    float smokeCircle = fCircle(smuv, Circle(vec2(-.9,.2), .04));\n    float smokeMask = ss(.2,.1, smokeCircle);\n    smokeCircle = fCircle(smuv, Circle(vec2(-.7,.1), .04));\n    smokeMask = mix(smokeMask, ss(.2,.1, smokeCircle),.5);\n    smuv = uv*vec2(1. + (uv.y+.4)*SIN(uv.y*15. + iTime*2.), .3*abs(uv.y));\n    smokeCircle = fCircle(smuv, Circle(vec2(-.6,.4), .2));\n    smokeMask = mix(smokeMask, ss(.4,.0, smokeCircle),.5);\n   \n    \n    float cloud0 = ss(0., 0.1, uv.y - .50 - .07*sin(uv.x * 05. + iTime*0.5) - .07*sin(uv.x*2.2) );\n    float cloud1 = ss(0., 0.1, uv.y - .60 - .10*sin(uv.x * 07. + iTime*0.8) - .10*sin(uv.x*4.2) );\n    float cloud2 = ss(0., 0.1, uv.y - .70 - .08*sin(uv.x * 09. + iTime*0.5) - .15*sin(uv.x*5.2) );\n    float cloud3 = ss(0., 0.1, uv.y - .75 - .10*sin(uv.x * 11. + iTime*0.8) - .20*sin(uv.x*6.2) );\n   \n    vec4 clouds;\n    \n    clouds = mix(vec4(0.), vec4(.3), cloud0);\n    clouds.a += cloud0;\n    clouds = mix(clouds, vec4(.5), cloud1);\n    clouds.a += cloud1;\n    clouds = mix(clouds, vec4(.7), cloud2);\n    clouds.a += cloud2;\n    clouds = mix(clouds, vec4(.9), cloud3);\n    clouds.a += cloud3;\n    \n    \n    clouds.a = clamp(0., 1., clouds.a);\n    \n    vec2 skyuv = uv + .2*vec2(0.,-cos(uv.x) - 1.);\n    vec3 skyGrad = \n        .67*vec3(1., 0., 0.)*SIN(skyuv.y*2.20 + .3) +\n        .75*vec3(0., 1., 0.)*SIN(skyuv.y*2.41 + .6) +\n        .81*vec3(0., 0., 1.)*SIN(skyuv.y*1.92 + .9) ;\n    \n    vec3 sky = mix(skyGrad, clouds.xyz, clouds.a);\n    \n    // Composing\n    vec3 col;\n    \n    col = mix(sky, mix(vec3(.7,0.,0.), vec3(.9,.9,0.8),hh), headMask );\n    \n    // add body\n    \n    col = mix(col, vec3(.8,.8,.0), bodyMask);\n    \n    \n    // add eyes\n    col = mix(col,\n\t\t\tmix(vec3(0.),mix(vec3(1.), vec3(1.,0.,0.),eyes*eyes*5.), ss(0.,0.3, pupils)),\n            eyesMask);\n\n    // add mouth \n    col = mix(col,vec3(0.),mouthMask);\n    \n    col = mix(col,mix(vec3(1.), tip, bg), beckMask);\n    \n    col += mix(vec3(0.), vec3(1.), smokeMask);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    //fragColor = vec4(ss(.05,.0,body));\n    //fragColor = vec4(smokeCircle);\n}","name":"Image","description":"","type":"image"}]}