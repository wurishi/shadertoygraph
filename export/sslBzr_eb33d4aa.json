{"ver":"0.1","info":{"id":"sslBzr","date":"1644434958","viewed":231,"name":"color gradient but bad","username":"sbryan","description":"swag","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["postprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// change the ramp values for colors\n// a is the position on the gradient. \n// 69 in r = return the original color\n\nvec3 zurple = vec3(0.65, 0.1921, 0.4235);\n\n\nvec4 ramp[10] = vec4[10](\n    vec4(vec3(0.65, 0.1921, 0.4235), 0.0), // zurple\n    vec4(vec3(0.65, 0.1921, 0.4235), 0.2), // zurple\n    vec4(vec3(102.0, 255.0, 237.0), 0.4), // bb blue\n    vec4(vec3(0.65, 0.1921, 0.4235), 0.5), // zurple\n    vec4(vec3(69.0, 0.0, 0.0), 0.6),  // 69 in r = show texture (webcam) color!\n    vec4(vec3(0.8, 1.0, 0.007), 1.0), // wow yellow\n    vec4(vec3(1.0, 1.0, 1.0), 2.0), // white, maxed out\n    vec4(vec3(1.0, 1.0, 1.0), 2.0), // white, maxed out\n    vec4(vec3(1.0, 1.0, 1.0), 2.0), // white, maxed out\n    vec4(vec3(1.0, 1.0, 1.0), 2.0) // white, maxed out\n);\n// change ramp count if you add more points on the gradient\nint rampCount = 10;\n\n\nint getLowerRampIndex(in float key){\n    for (int i = 0; i < rampCount - 1; i++) {\n        float lowerBound = ramp[i].a;\n        float upperBound = ramp[i + 1].a;\n        if (key <= ramp[i + 1].a) {\n            return i;\n        }\n    }\n    return rampCount - 1;\n}\n\nfloat easeInOutCubic(in float x) {\n    if (x < 0.5) {\n        return 4.0 * x * x * x;\n    }    \n    return 1.0 - pow(-2.0 * x + 2.0, 3.0) / 2.0;\n}\n\nfloat getLum(in vec3 color) {\n    return 0.2126*color.r + 0.7152*color.g + 0.0722*color.b;\n}\n\nvec4 evalSpecials(in vec4 color, in vec3 tex_col) {\n    if (color.r > 68.5 && color.r < 69.5) {\n        return vec4(tex_col, color.a);\n    }\n    else if (color.r > 1.0 && color.g > 1.0 && color.b > 1.0) {\n        return vec4(color.r/255.0, color.g/255.0, color.b/255.0, color.a);\n    }\n    return color;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 min = ramp[0];\n    vec4 max = ramp[1];\n    // ramp[1] = vec4(ramp[1].rgb, (sin(iTime * 0.5)/4.0) + 1.0);\n    // vec4 color1 = vec4(vec3(0.0, 1.0, 0.0), 1.0);\n    bool found = false;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\n    \n    vec3 tex_col = texture(iChannel0, uv).rgb;\n    float mixVal = getLum(tex_col);\n    \n    // debug show gradient, try commenting this out\n    if (uv.x > 0.95) { mixVal = uv.y; }\n    // end show gradient\n    \n    int lowerRampIndex = getLowerRampIndex(mixVal);\n    min = ramp[lowerRampIndex];\n    max = ramp[lowerRampIndex + 1];\n    mixVal = ((mixVal-min.a)/(max.a - min.a));\n    mixVal = easeInOutCubic(mixVal);\n    // Normalized pixel coordinates (from 0 to 1)\n    // r value of 69 = get the texture color\n    min = evalSpecials(min, tex_col);\n    max = evalSpecials(max, tex_col);\n    vec3 color = mix(min.rgb, max.rgb, mixVal);\n\n    // Time varying pixel color\n\n    // Output to screen\n    fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}]}