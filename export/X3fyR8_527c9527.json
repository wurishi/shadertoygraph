{"ver":"0.1","info":{"id":"X3fyR8","date":"1725782838","viewed":32,"name":"sep62024v3","username":"brendanluu","description":"system of objects","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 rotate2D(float angle) {\n    float s = sin(angle), c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nfloat rectangle(vec2 uv, vec2 size, float angle) {\n    uv *= rotate2D(angle);\n    vec2 d = abs(uv) - size;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    vec3 color = vec3(0.0); // Background color (black)\n    vec3 orangeColor = vec3(1.000,0.302,0.180); // Bright orange color\n    \n    float baseRectWidth = 0.2;\n    float baseRectHeight = 0.13;\n    float growthBase = 1.15; // Base for exponential growth\n    \n    float angleStep = PI / -7.5;\n    float strokeWidth = 0.0015; // Width of the orange stroke\n    \n    float rotationSpeed = -1.5; // Adjust this to change rotation speed\n    \n    for (int i = 30; i >= 0; i--) {\n        float baseAngle = float(i) * angleStep;\n        float rotationAngle = iTime * rotationSpeed; // Time-based rotation\n        float angle = baseAngle + rotationAngle;\n        \n        // Calculate exponential growth\n        float growthFactor = pow(growthBase, float(i)) - 1.0;\n        vec2 rectSize = vec2(baseRectWidth, baseRectHeight) * (1.0 + growthFactor);\n        \n        float rect = rectangle(uv, rectSize, angle);\n        float stroke = rectangle(uv, rectSize + strokeWidth, angle);\n        \n        vec3 rectColor = (i % 2 == 0) ? vec3(1.0) : orangeColor;\n        color = mix(color, orangeColor, smoothstep(strokeWidth, strokeWidth - 0.001, stroke)); // Orange stroke\n        color = mix(color, rectColor, smoothstep(0.001, 0.0, rect)); // Rectangle fill\n    }\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}