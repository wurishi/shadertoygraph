{"ver":"0.1","info":{"id":"clfXR8","date":"1674235214","viewed":58,"name":"VoronoiTecnic","username":"Raistlin_fuego","description":"learningshaders","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learningshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2(vec2 st){\n    return fract(sin(vec2(dot(st, vec2(30.23, 80.234)), dot(st, vec2(34.234, 80.234))))*2333.233);\n}\n\nvec3 circleBright(float size, vec3 color, float c)\n{\n    vec3 colorC = mix(vec3(1.), color, smoothstep(0.0, size, c));\n    return colorC;\n}\n\nfloat distancePixel(vec2 st)\n{\n    vec2 cell = floor(st);\n    vec2 cellF = fract(st);\n    \n    float d_min = 1.;\n    \n    for(int x = -1; x <= 1; x++){\n        for(int y = -1; y <= 1; y++){\n            \n            vec2 neighbour = vec2(float(x), float(y));\n            vec2 point = random2(cell + neighbour);\n            point = 0.5+0.5*sin(iTime + point * 1011.137);\n            vec2 diff = neighbour + point - cellF;\n            float f = length(diff);\n            d_min = min(f, d_min);\n        }\n    }\n    \n    return d_min;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n\n    st.x *= iResolution.x/iResolution.y;\n    st *= 3.;\n    \n    vec3 background = mix(vec3(0.124,0.670,0.990), vec3(0.995,0.681,0.585), st.x) *  mix(vec3(0.990,0.5*cos(iTime)/2.,0.149), vec3(2.*cos(iTime/5.),0.625,0.995), st.y);\n    \n    float d_min = distancePixel(st);\n    vec3 colorC = circleBright(0.144, vec3(0.413,0.468,0.935), d_min);\n    \n    d_min= step(d_min, 0.165);\n    vec3 color = mix(background, colorC, d_min);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}