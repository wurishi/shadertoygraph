{"ver":"0.1","info":{"id":"43B3Wh","date":"1708386772","viewed":136,"name":"hamon","username":"tono","description":"i drew this shader during a Twhich stream\nhttps://www.twitch.tv/videos/2067402534","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["rain","ripple","live"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\n#define ID_FLOOR 1.\n#define ID_RAIN 2.\n\nfloat pi = acos(-1.);\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy,vec2(32.31254,35.1354))) * 542525.3242 );\n}\n\nfloat span = 1.;\nvec2 sdRain(vec3 p){\n\tvec2 o = vec2(10.,ID_RAIN);\n    vec2 id = floor(p.xz / span);\n    vec2 grid = mod(p.xz , span) - span/2.;\n    \n    vec3 color = vec3(0.);\n    float localRandomValue = rand(vec2(floor((iTime + rand(id) * 360. + pi)/ (pi * 2.) )) ) ; \n    grid += (localRandomValue-0.5) * 3.;\n    \n    float len = length(grid);\n    float rainTime = iTime + rand(id) * 360.;\n    \n    float waveSeed = floor(rainTime / (pi * 1.) );\n\tfloat waveToggle = step(rand(vec2(waveSeed)) , 0.5);\n    //p.xz = mod(p.xz , span) - span/2.;\n    p.y -= 1.;\n    p.y += sin(rainTime) * 165.;\n    p.y -= clamp(p.y , 0.,6. * waveToggle);\n    o.x = length(vec3(grid,p.y).xzy) - 0.01;\n    \n    return o;\n}\n\nvec2 sdFloor(vec3 p){\n\tvec2 o = vec2(10.,ID_FLOOR);\n    vec3 s = vec3(1.);\n    \n    //p.y += 5.;\n    p.xz = mod(p.xz , span) - span/2.;\n    p -= clamp(p,-s,s);\n    o.x = length(p);\n    return o;\n}\n\nvec2 map(vec3 p){\n\tvec2 o = vec2(10.,0.);\n    \n    //o.x = length(p) - 1.;\n    //p.xz *= rot(time);\n    o = sdFloor(p);\n    vec2 rain = sdRain(p);\n    o = mix(rain,o,step(o.x,rain.x));\n    o.x = o.x;\n    return o;\n}\n\nvec2 march(vec3 cp , vec3 rd){\n\tfloat depth = 0.;\n    for(int i = 0 ; i < 256; i++){\n    \tvec2 d = map(cp + rd * depth);\n        if(abs(d.x) < 0.01){\n        \treturn vec2(depth , d.y);\n        }\n        if(depth > 100.)break;\n        depth += d.x;\n    }\n    return vec2(-depth);\n}\n\nvec3 wave(vec3 pos){\n\tvec2 id = floor(pos.xz / span);\n    vec2 grid = mod(pos.xz , span) - span/2.;\n    \n    vec3 color = vec3(0.);\n    //grid += (rand(id)-0.5) * 0.5;\n    for(int x = -2 ; x < 3 ; x++)\n    {\n        for(int y = -2 ; y < 3 ; y++){\n            vec2 currentID = id + vec2(x,y);\n            vec2 currentGrid = grid - vec2(x,y) * span;\n            \n            float localRandomValue = rand(vec2(floor((iTime + rand(currentID) * 360. + pi)/ (pi * 2.) )) ) ; \n            currentGrid += (localRandomValue-0.5) * 3.;\n            \n            float len = length(currentGrid);\n            float rainTime =  iTime + rand(currentID) * 360.;\n            \n            float waveSeed = floor(rainTime / (pi * 1.) );\n            float waveToggle = step(rand(vec2(waveSeed)) , 0.5);\n        \tcolor += waveToggle * vec3(1.) * step(0.999, cos(-len * 5.+ rainTime*2.) ) * mix(1.,0.,min(1.,len * 1.)) ;\n        }\n    }\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\t\n    vec3 cp = vec3(0.,5.,-5.);\n    vec3 target = vec3(0.,1.4,0.);\n    vec3 cd = normalize(target - cp);\n    vec3 cu = normalize(vec3(0.,1.,0.) );\n    vec3 cs = normalize(cross(cu,cd));\n    \n    float fov = 2.5;\n    vec3 rd = normalize(cs * p.x + cu * p.y + cd * fov);\n    vec3 color = vec3(0.);\n    \n    vec2 d = march(cp, rd);\n    if(d.x > 0.){\n        vec3 pos = cp + rd * d.x;\n        vec2 e = vec2(0.,0.001);\n        vec3 n = -normalize(map(pos).x - vec3(map(pos - e.xyy).x,map(pos - e.yxy).x,map(pos - e.yyx).x ));\n        \n        vec3 sun = normalize(vec3(2.,4.,8.));\n\t\tfloat diff = max(0.3,dot(n , sun));\n        float sp = max(0.,dot(rd , reflect(n,sun)));\n        \n        //float rim = clamp(1.-dot(n,-rd),0.,1.);\n        //rim = 1. - rim;\n        //rim = pow(rim , 1.);\n        sp = pow(sp , 6.6);\n    \tvec3 mat = vec3(1.);\n        if(d.y == ID_FLOOR){\n        \tmat = wave(pos);\n        \tcolor = mat * diff + mat * sp;\n        }else if(d.y == ID_RAIN){\n        \tcolor = vec3(.3);\n        }\n    }\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}