{"ver":"0.1","info":{"id":"MtBfR3","date":"1516650876","viewed":230,"name":"Displacement  Shader","username":"Coolok","description":"Displacement  Shader\nbased on https://www.shadertoy.com/view/ll2Bzy","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["displacementshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define MAGENTA vec3(.24, .1, .35)\n#define WHITE vec3(1.)\n#define REPETITIONS 12\n#define DELTA PI/float(REPETITIONS)\n#define THICKNESS 0.05\n#define ES .15\n#define rMat(x) mat2(cos(x), -sin(x), sin(x), cos(x))\n\nfloat remap(float value, float min, float max) {\n    return clamp((value - min) / (max - min), 0., 1.);\n}\n\n\nfloat makeSignWave(vec2 st, float waveCenter, float waveLength, float addWave){\n    float xSign = sign(st.x);\n    float s = sin(st.x * 6. + iTime * 1. * xSign + addWave) * (.15 + pow(remap(length(st), waveCenter - waveLength, waveCenter + waveLength), 1.5) * .2);\n    float curWidth = pow(1. - remap(abs(waveCenter - abs(st.x)), 0., waveLength), 1.5) * THICKNESS* (0.5+ cos(iTime));\n    return (1. - smoothstep(s, s + ES, st.y - curWidth)) * smoothstep(s - ES, s, st.y + curWidth)\n        * smoothstep(waveCenter - waveLength - ES, waveCenter - waveLength, abs(st.x)) * (1. - smoothstep(waveCenter + waveLength, waveCenter + waveLength + ES, abs(st.x)));\n}\n\n\nfloat clr(vec2 st){\n    float color = 0.;\n    for(int i=0; i<12; i++)\n        color += makeSignWave(st, 0.2+ 1.5*sin(iTime*0.3) + .1 * float(i), 1.0, PI/12.*float(i));\n    return min(color, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st = fragCoord.xy/iResolution.xy*2.-1.;\n    st.x *= iResolution.x/iResolution.y;\n    st *= 1.2+0.1*sin(iTime);\n    float color = clr(st);\n    for(int i=0; i<REPETITIONS-1; i++){\n        st *= rMat(DELTA);\n        color += clr(st);\n    }\n    \n    vec3 displace = mix(MAGENTA, WHITE, color)*vec3(sin(iTime*0.1),cos(iTime*0.1),sin(iTime*0.1));\n\t\n\tdisplace.xy *= 1.2;\t\n\tfragColor = texture(iChannel0,st+ displace.xy);\n \n}","name":"Image","description":"","type":"image"}]}