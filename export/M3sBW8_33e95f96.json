{"ver":"0.1","info":{"id":"M3sBW8","date":"1728336919","viewed":26,"name":"retrowave for cg","username":"seku345","description":"abc","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["retrowave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getBackgroundColor(vec2 uv) {\n    uv += 0.5;\n    vec3 gradientStartColor = vec3(31.0/255.5 + sin(iTime * 0.5) * 0.2, 29.0/255.0, 12.0/255.0 + sin(iTime * 0.5) * 0.2);\n    vec3 gradientEndColor = vec3(226.0/255.0, 45.0/255.0, 134.0/255.0);\n    return mix(gradientStartColor, gradientEndColor, uv.y-0.5);\n}\n\nfloat sdfMountain(vec2 uv) {\n    float mountainHeight = 0.5;\n    float mountainWidth = 0.2;\n    float mountainBase = 0.2;\n\n    float mountain1 = sin(uv.x * 5.0 - 1.0) * mountainHeight;\n    float mountain2 = sin(uv.x * 5.0 + 4.0) * mountainHeight;\n\n    float base1 = uv.y + mountainBase;\n    float base2 = uv.y + mountainBase;\n\n    float sdf1 = base1 - (mountain1 + 0.3);\n    float sdf2 = base2 - (mountain2 + 0.4);\n\n    return min(sdf1, sdf2);\n}\n\nfloat sdfCircle(vec2 uv, vec2 center, float r) {\n    return length(uv - center) - r;\n}\n\nfloat sdfLine(vec2 uv, float k, float b) {\n    return abs(k * uv.x - uv.y + b) / sqrt(k * k + 1.0);\n}\n\nfloat sdfLineVertical(vec2 uv, float b) {\n    return abs(uv.x - b);\n}\n\nvec3 getColor(float position) {\n    float r =  smoothstep(-1.0, 1.0, position);\n    float g = 0.0;\n    float b = 0.0;\n    return vec3(r, g, b);\n}\n\nfloat getSunBrightness(float time) {\n    return 0.9 + 0.3 * sin(time * 0.5);\n}\n\nvec3 drawScene(vec2 uv) {\n    vec3 col = getBackgroundColor(uv);\n\n    float lineWidth = 0.005;\n\n    \n    float line1 = sdfLine(uv, 1.5, 0.6);\n    float line2 = sdfLine(uv, -1.5, 0.6);\n    float line3 = sdfLineVertical(uv, 0.0);\n\n    float horizon = sdfLine(uv, 0.0, 0.2);\n    vec3 horizonColor = vec3(1, 0, 0);\n\n    float sun = smoothstep(0.0, 2.0, sdfCircle(uv, vec2(0.0, 0.25), 0.5));\n    float brightness = getSunBrightness(iTime);\n\n\n    vec3 sunColor = vec3(215.0/255.0, 16.0/255.0, 66.0/255.0) * brightness;\n\n    float dashLength = 0.2;\n    float spaceLength = 0.05;\n    float pattern1 = sin(uv.x * (1.0 / (dashLength + spaceLength)) + iTime * 2.0);\n    float pattern2 = sin(-uv.x * (1.0 / (dashLength + spaceLength)) + iTime * 2.0);\n\n    float dashLengthV = 0.2;\n    float spaceLengthV = 0.5;\n    float patternOffset = mod(uv.y + iTime * 0.3, dashLengthV + spaceLengthV);\n    float pattern3 = step(0.0, dashLengthV - patternOffset) * step(patternOffset, dashLengthV + spaceLength);\n\n    vec3 lineColor1 = vec3(1, 0, 0) * smoothstep(lineWidth, 0.0, line1) * pattern1;\n    vec3 lineColor2 = vec3(1, 0, 0) * smoothstep(lineWidth, 0.0, line2) * pattern2;\n    vec3 lineColor3 = vec3(1, 0, 0) * smoothstep(lineWidth, 0.0, line3) * (-0.1 + pattern3);\n\n    col = mix(col, horizonColor, smoothstep(lineWidth, 0.0, horizon));\n\n    if (uv.y < 0.2) {\n        col = mix(col, lineColor1, smoothstep(lineWidth, 0.0, line1) * smoothstep(0.0, 0.5, pattern1));\n        col = mix(col, lineColor2, smoothstep(lineWidth, 0.0, line2) * smoothstep(0.0, 0.5, pattern2));\n        col = mix(col, lineColor3, smoothstep(lineWidth, 0.0, line3) * smoothstep(0.0, 0.5, pattern3));\n    }\n    if ((uv.y >= 0.21 && uv.y < 0.25) || (uv.y >= 0.3 && uv.y <= 0.35) || (uv.y >= 0.4 && uv.y <= 0.45) || (uv.y >= 0.5 && uv.y <= 0.55) || (uv.y >= 0.6 && uv.y <= 0.65) || (uv.y >= 0.7 && uv.y <= 1.0)) {\n        col = mix(col, sunColor, smoothstep(lineWidth, 0.0, sun));\n    }\n    float mountain = sdfMountain(uv);\n    vec3 mountainColor = vec3(72.0/255.0, 32.0/255.0, 80.0/255.0) / 1.8;\n    \n    if (uv.y >= 0.205)\n    col = mix(col, mountainColor, smoothstep(0.02, 0.0, mountain));\n    \n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = drawScene(uv);\n\n  // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}