{"ver":"0.1","info":{"id":"flXBzM","date":"1666139845","viewed":61,"name":"Fork Complex Ex KingHashis 626","username":"KingHashish","description":"w = e^z","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","complex"],"hasliked":0,"parentid":"7tjcWK","parentname":"Complex Exp"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323\n#define T .02\n//#define ZOOM 200.\n#define ZOOM (0.85*iResolution.y)\n\n#define tt (float(int(iTime)%25)/1.)\n\n\n#define hue(a) (.6 + .6*cos(2.*PI*a + vec3(0,-2.*PI/3.,2.*PI/3.)))\n#define cmul(z1, z2) (mat2(z1, -z1.y, z1.x)*z2)\n#define cdiv(z1, z2) (z1*mat2(z2, -z2.y, z2.x)/dot(z2, z2))\n#define clog(z) vec2(0.5*log(dot(z,z)), atan(z.y, z.x))\n\nvec2 cexp(vec2 z, vec2 c)\n{\n    float argz, m, a;\n    float lnz = dot(z,z);\n    \n    if (lnz == 0.) return vec2(0., 0.);\n    else {\n        lnz = 0.5*log(lnz);\n        argz = atan(z.y, z.x);\n        \n        m = exp(c.x*lnz - c.y*argz);\n        a = c.x*argz + c.y*lnz;\n        \n        return m*vec2(cos(a), sin(a));\n    }\n}\n\n\nvec3 hrgb(vec2 w)\n{\n    //float m = log(1. + 100.*length(w));\n    float m = length(w);\n    float a = (PI + atan(w.y, w.x))/(2.0*PI);\n\n    float mm = fract(m);\n    float p = fract(mod(a, 1.0/16.0));\n\n    vec3 c;\n\n    c.r =  0.5 - 0.5*sin(2.0*PI*a - PI/2.0);\n    c.g = (0.5 + 0.5*sin(2.0*PI*a*1.5 - PI/2.0)) * float(a < 0.66);\n    c.b = (0.5 + 0.5*sin(2.0*PI*a*1.5 + PI/2.0)) * float(a > 0.33);\n    \n    //c = 0.5*(c + hue(a));\n    \n    //c -= 0.3*mm + 2.*p;\n    \n    \n    //if (//length(w) + T/2. > 1. &&\n    //    (fract(w.x) < T || fract(-w.x) < T ||\n    //     fract(w.y) < T || fract(-w.y) < T)) c -= 0.4;\n    \n    return c;\n}\n\nvec2 f(vec2 z, int n)\n{\n    vec2 w;\n    \n    z*=float(n);\n\n    //w = cexp( vec2(exp(1.), 0.), z );\n    \n    //w = z - vec2(0.5, 0.);\n    //w = cdiv( w, (z - vec2(-0.35,-0.35)) );\n    //w = cdiv( w, (z - vec2(-0.35, 0.35)) );\n    \n    //w = cmul( (z - vec2(-0.35,-0.35)),\n    //          (z - vec2(-0.35, 0.35)) );\n    //w = cdiv( w, (z - vec2(0.5, 0.)));\n    \n    w = vec2(1., 0.);\n    \n    float ftl = 1.;\n    \n    for (int i=1; i<n; i++) {\n        //w += cmul(w, w);\n        w += cexp(z, vec2(float(i), 0.))/ftl;\n        \n        //w /= ftl;\n        \n        ftl = ftl*(float(i) + 1.);\n        //w += z;\n    }\n    \n    //w = cexp(w, vec2(fract(iTime), 0.));\n    //w = cexp(w, vec2(1. + fract(tt), 0.));\n    //w += z*fract(tt);\n    \n    \n    return w;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 z, w, w1, w2, w3, w4;\n    int n = 5;\n    \n    z = fragCoord - iResolution.xy/2.;\n    \n\n    //if (iMouse.xy != vec2(0., 0.)) //to center at origin\n    //    z -= iMouse.xy - iResolution.xy/2.;\n    \n    \n    //z /= ZOOM;\n    //z -= vec2(0.5, 0.);\n    n = 2 + int(tt);\n    w = f(z, n);\n    //fragColor = vec4(hrgb(w), 1.0);\n    \n \n \n //   z -= vec2(0.5, 0.)*ZOOM;\n    \n    w  = f( z/ZOOM, n );\n    w1 = f( (z + vec2(-.25,-.25))/ZOOM, n );\n    w2 = f( (z + vec2(-.25, .25))/ZOOM, n );\n    w3 = f( (z + vec2( .25,-.25))/ZOOM, n );\n    w4 = f( (z + vec2( .25, .25))/ZOOM, n );\n    \n    \n    fragColor = vec4(0.2*(hrgb(w) +\n                          hrgb(w1) + hrgb(w2) + \n                          hrgb(w3) + hrgb(w4)), 1.0);\n}","name":"Image","description":"","type":"image"}]}