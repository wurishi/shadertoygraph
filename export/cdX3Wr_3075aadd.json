{"ver":"0.1","info":{"id":"cdX3Wr","date":"1665929996","viewed":151,"name":"2D Light Chain","username":"johnao","description":"2D Light Chain","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926536\n\nfloat light(vec2 p, float r) {\n    float d = length(p);\n    if (d <= r) {\n        return 1.;\n    }\n    return asin(r / d) / PI;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    float col = 0.;\n    for (int i = 0; i < 64; ++i) {\n        float t = 2. * PI * float(i) / 64. + iTime * .2;\n        vec2 p = .2 * vec2(1.5 * cos(t) + 2.5 * cos(-2. * t), 1.5 * sin(t) + 2.5 * sin(-2. * t));\n        t = iTime * .6;\n        p = mat2(cos(t), sin(t), -sin(t), cos(t)) * p;\n        col += light(uv - p, .01);\n    }\n    fragColor = vec4(vec3(col), 1.0);\n}","name":"Image","description":"","type":"image"}]}