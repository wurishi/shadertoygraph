{"ver":"0.1","info":{"id":"mlVGWV","date":"1684727598","viewed":222,"name":"Fork Shader Art sleeplessm 695","username":"sleeplessmonk","description":"added audioreactivity and value changes","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["fractal","sdf","tutorial","intro","repetition","code","youtube","tuto","creative"],"hasliked":0,"parentid":"mtyGWy","parentname":"Shader Art Coding Introduction"},"renderpass":[{"inputs":[{"id":"Msc3R4","filepath":"https://soundcloud.com/ethereios/floating-in-the-tranquil","previewfilepath":"https://soundcloud.com/ethereios/floating-in-the-tranquil","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n// https://iquilezles.org/articles/palettes/\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 9.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i * 0.004 + iTime * 0.004);\n\n        d = sin(d * 8.0 + iTime) / 7.0;\n        d = abs(d);\n\n        d = pow(0.005 / d, .9);\n\n        finalColor += col * d;\n    }\n\n    // Apply audio-reactivity\n    float audioLevel = texture(iChannel1, vec2(0.5)).r;  // Fetch audio level from iChannel1\n    finalColor *= audioLevel;\n\n    // Enhance psychedelic colors\n    finalColor = pow(finalColor, vec3(1.2, 1.5, 1.8));\n\n    // Enhance kaleidoscope effect\n    finalColor *= pow(3.2, abs(sin(iTime)));\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}