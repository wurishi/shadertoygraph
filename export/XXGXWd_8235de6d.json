{"ver":"0.1","info":{"id":"XXGXWd","date":"1720619651","viewed":35,"name":"计时器","username":"langzai","description":"用序列帧动画和uv排版做计时器","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["uv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 CenterUV(vec2 fragCoord )//uv的居中与反拉伸https://www.shadertoy.com/view/M3cSDS\n{\n    return (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n}\n\n//（图片uv，相对于最小帧的当前帧，最小帧，最大帧，序列图列数，序列帧行数）https://www.shadertoy.com/view/4XVSDc\nvec2 SequenceUV(vec2 uv,float nowNum,float minNum,float maxNum,float colNum,float rowNum)\n{\n    nowNum = mod(floor(nowNum),abs(maxNum - minNum))+ min(minNum,maxNum);\n    uv.x = uv.x/colNum + nowNum /colNum;\n    uv.y = uv.y/rowNum + (rowNum - floor(nowNum/colNum)  - 1.)/rowNum;\n    return uv;\n}\n\nvec2 MoveTexUV(vec2 uv,vec2 TexSize,vec2 TexPos,float TexSacle)//图片排版\n{\n    vec2 texUV = uv;\n    if(TexSize.x>TexSize.y){\n        texUV.x *= TexSize.y/TexSize.x;\n        TexPos.x *= TexSize.y/TexSize.x;\n        }\n    else{\n       texUV.y *= TexSize.x/TexSize.y;\n       TexPos.y *= TexSize.x/TexSize.y;\n       }\n    \n    texUV /= TexSacle;//图片缩放，以图片的中心点\n    texUV += 0.5;//将图片原点从左下角移动到中心点\n    texUV -= TexPos / TexSacle ;//将图片的原点移动到uv为坐标系的TexPos处\n    return texUV;\n}\n\nfloat CutUV(vec2 uv,vec2 minPos,vec2 maxPos)\n{\n    float mask = (1.- step(uv.x,minPos.x)) * step(uv.x,maxPos.x);\n    mask *= (1.- step(uv.y,minPos.y)) * step(uv.y,maxPos.y);\n    return mask;\n}\n\nvec4 CutTex(sampler2D tex,vec2 texuv,vec2 posUV)//裁剪图片，是得只有0-1的uv上显示\n{\n    return texture(tex,texuv) * CutUV(posUV,vec2(0.),vec2(1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = CenterUV(fragCoord );\n    vec3 color = vec3(0.,0.,0.);\n    //vec2 uv = fragCoord/iResolution.xy;\n    vec2[5] posUV,TextUV;\n    for(int i=0;i<5;i++){\n        posUV[i] = MoveTexUV(uv,vec2(1.,1.),vec2(float(i)*0.5-1.,0),.5);\n    }\n    TextUV[0] = SequenceUV(posUV[0],mod(iTime*0.001666667,6.),48.,58.,16.,16.);\n    TextUV[1] = SequenceUV(posUV[1],mod(iTime*0.01666667,10.),48.,58.,16.,16.);\n    TextUV[2] = SequenceUV(posUV[2],0.,58.,59.,16.,16.);\n    TextUV[3] = SequenceUV(posUV[3],mod(iTime*0.1,6.),48.,58.,16.,16.);\n    TextUV[4] = SequenceUV(posUV[4],mod(iTime,10.),48.,58.,16.,16.);\n    for(int i=0;i<5;i++){\n     color += CutTex(iChannel0,TextUV[i],posUV[i]).rrr;\n     }\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}