{"ver":"0.1","info":{"id":"4dVcDy","date":"1523217285","viewed":87,"name":"Cosine in polar space","username":"wiklow","description":"Modulated cosine represented in polar space.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cosine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n//https://thebookofshaders.com/07/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n    \n    //distance to coordinates from the center\n    vec2 pos = vec2(0.5)-uv;\n    \n    //modulate the distance from the center\n    pos *= 0.01*sin(iTime) - 1.1;\n    \n    //convert to polar coords\n    float radius = length(pos)*2.0;\n    float angle = atan(pos.y,pos.x);\n    \n    //Make a cosine shape using polar coordinates\n    float f = cos(angle*13.0);\n    \n    //Modulate the shape\n    f *= sin(iTime)*sin(angle*3.)*.8+.1;\n    \n    //Fold the negative values into positive\n    f = abs(f);\n\n    float blur_offset = 0.2;\n    \n    color = vec3( 1.-smoothstep(f,f+blur_offset,radius) );\n    \n    fragColor = vec4(color,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}