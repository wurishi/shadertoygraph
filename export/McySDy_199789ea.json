{"ver":"0.1","info":{"id":"McySDy","date":"1715699495","viewed":31,"name":"Fork 2D Rounded shivang 913","username":"shivang","description":"Rounded corners for UI purpose\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","square","rectangle","quad","rounded"],"hasliked":0,"parentid":"WtdSDs","parentname":"2D Rounded Rectangle"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float roundedBoxSDF(vec2 CenterPosition, vec2 Size, float Radius) {\n    return length(max(abs(CenterPosition)-Size+Radius,0.0))-Radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    float ar = iResolution.x / iResolution.y;\n    vec4 radi = vec4(0.25, 0.25, 0.25f, 0.25f);   \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 size = vec2(1.f);    \n    float edgeSoftness  = 0.002f;\n    float radius = 0.f;\n    \n    if(uv.y > 0.5){\n        radius = (uv.x < 0.5) ? radi[0] : radi[1]; \n    }else{\n        radius = (uv.x < 0.5) ? radi[3] : radi[2]; \n    }\n    \n    uv.x *= ar;\n    \n    size /= 2.f;\n    size.x *= ar;\n    \n    float dis = roundedBoxSDF(uv.xy - size, size, radius);\n    \n    float alpha =  1.0f - smoothstep(0.0f, edgeSoftness * 2.0f,dis);\n    \n    \n    vec4 quadColor = mix(vec4(.0f, .0f, .0f, alpha), vec4(0.0f, 0.2f, 1.0f, alpha), alpha);\n    fragColor = quadColor;\n}","name":"Image","description":"","type":"image"}]}