{"ver":"0.1","info":{"id":"MdVfWz","date":"1528440657","viewed":102,"name":"june 8 2018","username":"hellochar","description":"fun with cos","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["domainwarp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv *= 40. + 4. * cos(iTime);\n    uv += vec2(6. + cos(iTime / 9.) * 6., 2.);\n    \n    vec2 uvCore = uv;\n    \n    uv *= 1. / (1. + pow(length(uvCore), 2.) * 0.2);\n    \n    uv += 1. + cos(iTime / 10.) * 0.5;\n    \n    //uv *= cos(uv.yx);\n    uv += cos(uv.yx * 2.) * 0.5;\n    //uv *= cos(uv.yx);\n    uv += cos(uv.yx * 5.) * 0.25;\n    //uv *= cos(uv.yx);\n    uv += cos(uv.yx * 20.) * 0.125;\n    \n    float iTimeSlow = iTime * 2.;\n    uv *= cos(uv.yx * (iMouse.xy / iResolution.xy - vec2(0.5)) * 1. + iTime);\n    uv *= cos(uv.yx + iTimeSlow) * 5.;\n    uv *= cos(uv.yx + iTimeSlow);\n    uv *= cos(uv.yx + iTimeSlow);\n    uv *= cos(uv.yx * 4. + iTimeSlow);\n    \n    vec3 col1 = 1. - ((1. + cos(uv)) / 2.).xyy;\n    \n    vec3 col = col1;//mix(bg, col1, 1. / (1. + pow(length(uvCore), 2.)) * 1.3); // * 1. / (1. + pow(length(uvCore), 2.) * 0.1);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}