{"ver":"0.1","info":{"id":"XtlcD4","date":"1505216297","viewed":1319,"name":"Marisa's Master Spark","username":"0x384c0","description":"Always lowed this spell card from Touhou. Trying to render this with OpenGL.","likes":3,"published":3,"flags":64,"usePreview":1,"tags":["2d","touhou"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4ssSWf","filepath":"https://soundcloud.com/0x384c0/ms-for-shadertoy","previewfilepath":"https://soundcloud.com/0x384c0/ms-for-shadertoy","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float audio_ampl( in sampler2D channel) {\n    return texture( channel, vec2(0, 0.0) ).x; \n}\n\n\nvec3 rayDistortion(vec2 uv,float timeScale){\n    vec2 d = uv.xy;    \n\td.x += iChannelResolution[0].x * -(iTime * timeScale / iResolution.y);\n\treturn vec3(texture(iChannel0, d));\n}\n\nvec3 ray(vec2 uv, vec2 fragCoord, vec3 color, float hOffset ,float speed){\n    float\n        hOffsetPix = iResolution.x * hOffset,\n        angleOffset = fragCoord.x * (hOffsetPix + sin(iTime)*10.) * -0.01,\n        x = fragCoord.x,\n        y = fragCoord.y + angleOffset,\n        rayWidth = .001,\n        halfResolution = (iResolution.y / 2.0) + hOffsetPix,\n        curve = sqrt(x) * rayWidth - abs(y - halfResolution);\n    \n    //GLOW\n    float i = clamp(curve, 0.0, 1.0);\n    float glowIntensity = 3.0;\n    float glowSize = 0.03;\n    float glowPixelSize = (glowSize + sqrt(x * 0.0005)) * iResolution.y;\n    i += clamp((glowPixelSize + curve) / glowPixelSize, 0.0, 1.0) * glowIntensity;\n    \n    vec3 d = rayDistortion(uv,speed) * (0.05 + speed * 0.05);\n    return i * (color - d) * 0.28; \n}\n\n\nvec3 rayOrigin(in vec2 fragCoord){\n    float theta = atan(iResolution.y / 2.0 - fragCoord.y, fragCoord.x + 15. );\n    float len = iResolution.y * (3.0 + sin(theta * 7.0 + float(int(iTime * 20.0)) * -35.0)) / 3.0;\n    float d = max(-0.6, 1.0 - (sqrt(pow(abs(fragCoord.x), 2.5) + pow(abs(iResolution.y / 2.0 - ((fragCoord.y - iResolution.y / 2.0) * 4.0 + iResolution.y / 2.0)), 2.0)) / len));\n    return vec3(\n        d * (1.0 + sin(theta * 10.0 + floor(iTime * 10.0) * 10.77) * 0.3), \n        d * (1.0 + cos(theta * 8.0 - floor(iTime * 20.0) * 8.77) * 0.3), \n        d * (1.0 + sin(theta * 6.0 - floor(iTime * 30.0) * 134.77) * 0.3)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 c = vec3(0.,0.,0.);\n    c += ray(uv,fragCoord, vec3(1.0, 0.0, 0.0) * 1.2, \t.03,\t0.5);\n    c += ray(uv,fragCoord, vec3(0.5, 0.5, 0.0),     \t.01,\t1.0);\n    c += ray(uv,fragCoord, vec3(0.0, 1.0, 0.0),       \t.0,\t\t3.0);\n    c += ray(uv,fragCoord, vec3(0.0, 0.5, 1.0),    \t\t-.01,\t1.0);\n    c += ray(uv,fragCoord, vec3(1.0, 0.5, 1.0) * 1.2,\t-.03,\t0.5);\n    c += clamp(rayOrigin(fragCoord), 0.0, 1.0);\n    \n    float a = audio_ampl(iChannel1);\n    c *= a;\n    \n    fragColor = vec4(c, 1.);\n    \n}","name":"Image","description":"","type":"image"}]}