{"ver":"0.1","info":{"id":"4lfyRn","date":"1502968379","viewed":144,"name":"ball in hall","username":"archibate","description":"a new version from https://www.shadertoy.com/view/4stXRN\nadd specular light power to make more reality|ies.\nadd yellow and siviler mixin for ambient light.\nthe ball was made in metel :)\nalso added mouse handling.\ncool?","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 ray(mat4 transformation, mat4 inv) {\n \n  // Sphere collision\n  vec4 p = transformation * vec4(0,0,0,1);\n  float distance_squared = dot(p.xy, p.xy);\n    \n  if (distance_squared < 0.99) {\n      // calculate collision position\n      vec3 norm = vec3(-p.x, -p.y, - sqrt(1.0 - distance_squared));\n      vec3 spec = reflect(vec3(0, 0, 1), norm);\n      return pow(texture(iChannel0, (inv * vec4(spec, 0)).xyz), vec4(1.45 - 0.25 * distance_squared)) * 0.8 +\n           vec4(0.11, 0.10, 0.09, 0.0); // ambient light\n  }\n\n  return texture(iChannel0, (inv * vec4(0,0,1,0)).xyz);\n}\n\nmat4 Transpose(mat4 v) {\n    return\n        mat4(v[0].x, v[1].x, v[2].x, v[3].x,\n         v[0].y, v[1].y, v[2].y, v[3].y,\n         v[0].z, v[1].z, v[2].z, v[3].z,\n         v[0].w, v[1].w, v[2].w, v[3].w);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.x;\n\n    vec2 y = normalize(vec2(uv.x, 1));\n    vec2 x = normalize(vec2(-uv.y, 1));\n    \n    float angle = iTime + 2.4 * iMouse.x / iResolution.x;\n    \n    float c = cos(angle);\n    float s = sin(angle);\n    mat4 t = mat4(1, 0, 0, 0,\n                  0, 1, 0, 0,\n                  0, 0, 1, 0,\n                  0, 0, 3.0 + 0.3 * s, 1);\n    mat4 tr = mat4(c, 0, s, 0,\n         0, 1, 0, 0,\n         -s,0, c, 0,\n         0, 0, 0, 1);\n         \n    mat4 xr = mat4(1, 0, 0, 0,\n             0, x.y, x.x, 0,\n             0, -x.x, x.y, 0,\n             0, 0, 0, 1) * t;\n    mat4 yr = mat4(y.y, 0, y.x, 0,\n             0, 1, 0, 0,\n             -y.x, 0, y.y, 0,\n             0, 0, 0, 1);\n\n    // Cast a ray, see if we hit anything.\n    fragColor = ray(yr * xr * t * tr,\n                   Transpose(tr) * Transpose(t) * Transpose(xr) * Transpose(yr));\n    // fragColor = vec4(uv, 0,1);\n}","name":"Image","description":"","type":"image"}]}