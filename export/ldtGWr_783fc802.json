{"ver":"0.1","info":{"id":"ldtGWr","date":"1449097661","viewed":1041,"name":"Pseudo 3D Tunnel III","username":"4rknova","description":"The classic tunnel effect with bump mapping.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by nikos papadopoulos, 4rknova / 2015\n// Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define SAMPLES 64\n#define OFFSET_X .005\n#define OFFSET_Y .005\n#define DEPTH\t  15.\n\nvec3 texsample(float x, float y, in vec2 uv)\n{\n\treturn texture(iChannel1, uv + vec2(x,y)).xyz;\n}\n\nfloat luminance(vec3 c)\n{\n\treturn dot(c, vec3(.2126, .7152, .0722));\n}\n\nvec3 normal(in vec2 uv)\n{\n\tfloat R = abs(luminance(texsample( OFFSET_X,0., uv)));\n\tfloat L = abs(luminance(texsample(-OFFSET_X,0., uv)));\n\tfloat D = abs(luminance(texsample(0., OFFSET_Y, uv)));\n\tfloat U = abs(luminance(texsample(0.,-OFFSET_Y, uv)));\n\t\t\t\t \n\tfloat X = (L-R) * .5;\n\tfloat Y = (U-D) * .5;\n\n\treturn normalize(vec3(X, Y, 1. / DEPTH));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  o = fragCoord.xy / iResolution.xy;\n    float a = iResolution.x / iResolution.y; \n\tvec2  p = (2. * o - 1.)\n\t\t    * vec2(a,1.);\n    vec2  v = p * p * vec2(1.,2.);\n    vec2  t = vec2(atan(p.x, p.y) / 3.1416, 1. / length(p));\n\t\n\tvec2  z = vec2(4, .6);\n\tvec3  r = vec3(0);    \n    vec2  s = iTime * vec2(.1, 1);\n    \n    for (int i = 0; i < SAMPLES; ++i)\n    {\n    \tr += texture(iChannel0, t * z + s + float(i)*.01).xyz / (t.y + .5) / float(SAMPLES); \n    }\n\n    vec3 lp = vec3((.5-o) * iChannelResolution[0].xy, 200.);\n\t\n    vec3 n = normal(t * z + s);\n    fragColor = vec4(r * dot(n, normalize(lp)), 1);\n}","name":"Image","description":"","type":"image"}]}