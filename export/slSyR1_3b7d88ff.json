{"ver":"0.1","info":{"id":"slSyR1","date":"1649154217","viewed":195,"name":"LightWrap w/ Fast G-Blur & gamma","username":"LoganOracio","description":"desciption or smt ","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["blur","fast","gaussian","comp","lightwrap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//comp\n\n\nvec3 screen( vec3 s, vec3 d )\n{\n\treturn s + d - s * d;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix_l = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord*pix_l;\n    \n    vec4 raw = texture(iChannel0, uv);\n    \n    vec3 key = raw.xyz;\n    float magenta =(key.r+key.b)/2.0;\n    float k = raw.a;\n    \n    vec3 lightwrap = texture(iChannel1,uv).xyz;\n    \n    key = screen(key,LIGHTWRAP_INTENSITY*lightwrap);\n    \n    vec3 comp = mix(key,texture(iChannel2,uv).xyz,k);\n    \n    fragColor = vec4(comp,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//despill + chroma key\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix_l = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord*pix_l;\n    \n    vec3 key = texture(iChannel0, uv).xyz;\n    float magenta =(key.r+key.b)/2.0;\n    float k = smoothstep(.0,.35,key.g-magenta);\n    \n    key.g = magenta > key.g ? key.g : magenta;\n    \n    \n    fragColor = vec4(key,k);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//gamma + hole\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix_l = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord*pix_l;\n    \n    vec4 raw = texture(iChannel0, uv);\n    \n    vec3 key = raw.xyz;\n    float magenta =(key.r+key.b)/2.0;\n    float k = raw.a;\n    \n    float gamma = LIGHTWRAP_GAMMA;\n    vec3 lightwrap = texture(iChannel1,uv).xyz;\n    \n    lightwrap = vec3(pow(lightwrap.x,gamma),pow(lightwrap.y,gamma),pow(lightwrap.z,gamma));\n    \n    fragColor = vec4(k*lightwrap,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//fast gaussian blur X\nconst float PI = 3.141592653589793238462;\nconst float inv_sqrt_2pi = 0.3989422804014327;\n\nfloat gaussianf(float sigma, float dist)\n{\n    float a = dist / sigma;\n    return (inv_sqrt_2pi / sigma ) * exp( -0.5 * a * a );\n}\nvec4 fast_gaussian_blur(sampler2D image, vec2 uv,vec2 resolution, vec2 direction, float blur)\n{\n    vec4 color = vec4(0.0);\n    float coef = gaussianf(blur,0.0);\n    color += texture(image, uv) * coef;\n    int kernel_s = int(blur*2.0);\n\n    float weights[2048];\n    //weights\n    for (int i = 0; i < 2048; i++)\n    {\n        if (i >= kernel_s+1) { break;}\n        weights[i] = gaussianf(blur,float(i));\n    }\n\n    for (int i = 0; i < 2047; i++)\n    {\n        if (i >= kernel_s) { break;}\n        float c = weights[i] + weights[i+1];\n        vec2 off1 = vec2((float(i)*weights[i]+float(i+1)*weights[i+1])/c) * direction / resolution;\n        color += texture(image, uv + off1 ) * c;\n        color += texture(image, uv - off1 ) * c;\n        coef += c+c;\n    }\n    return color/coef;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix_l = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord*pix_l;\n    \n    \n    fragColor = fast_gaussian_blur(iChannel0,uv,iResolution.xy,vec2(1.0,0.0),LIGHTWRAP_SPREAD);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"//fast gaussian blur Y\nconst float PI = 3.141592653589793238462;\nconst float inv_sqrt_2pi = 0.3989422804014327;\n\nfloat gaussianf(float sigma, float dist)\n{\n    float a = dist / sigma;\n    return (inv_sqrt_2pi / sigma ) * exp( -0.5 * a * a );\n}\nvec4 fast_gaussian_blur(sampler2D image, vec2 uv,vec2 resolution, vec2 direction, float blur)\n{\n    vec4 color = vec4(0.0);\n    float coef = gaussianf(blur,0.0);\n    color += texture(image, uv) * coef;\n    int kernel_s = int(blur*2.0);\n\n    float weights[2048];\n    //weights\n    for (int i = 0; i < 2048; i++)\n    {\n        if (i >= kernel_s+1) { break;}\n        weights[i] = gaussianf(blur,float(i));\n    }\n\n    for (int i = 0; i < 2047; i++)\n    {\n        if (i >= kernel_s) { break;}\n        float c = weights[i] + weights[i+1];\n        vec2 off1 = vec2((float(i)*weights[i]+float(i+1)*weights[i+1])/c) * direction / resolution;\n        color += texture(image, uv + off1 ) * c;\n        color += texture(image, uv - off1 ) * c;\n        coef += c+c;\n    }\n    return color/coef;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix_l = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord*pix_l;\n    \n    \n    fragColor = fast_gaussian_blur(iChannel0,uv,iResolution.xy,vec2(0.0,1.0),LIGHTWRAP_SPREAD);\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define LIGHTWRAP_INTENSITY 1.0\n#define LIGHTWRAP_SPREAD 3.0\n#define LIGHTWRAP_GAMMA 2.5","name":"Common","description":"","type":"common"}]}