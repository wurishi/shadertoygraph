{"ver":"0.1","info":{"id":"fs2SDw","date":"1620373947","viewed":210,"name":"2D to 3D cube mapping","username":"TimurAB","description":"What if you have only 2d texture, but you want to make a cube?","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["cube","texture","map"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getImage (vec2 uv) {\n    return texture(iChannel0, uv).rgb;\n}\n\nvec2 minLen (vec2 a, vec2 b) {\n    //if (length(a) > length(b)) return a; // maximum (weird effect)\n    if (length(a) < length(b)) return a;\n    return b;\n}\n\nmat2 rotation (float a) {\n    return mat2(cos(a),-sin(a),sin(a),cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a = iResolution.x / iResolution.y;\n    vec2 uv = (fragCoord/iResolution.xy)*2. - 1.;\n    uv.x *= a;\n    vec3 col = vec3(0.);\n    // view direction\n    vec3 d = normalize(vec3(uv,1.2));\n    // rotation\n    vec2 m;\n    if (iMouse.z > 0.)\n        m = (iMouse.xy / iResolution.xy)*3. - 1.5;\n    else\n        m = vec2(6.2832 * sin(0.05 * iTime));\n    d.zy *= rotation(-m.y);\n    d.xz *= rotation(m.x);\n    // texture\n    vec2 v1 = sign(d.z)*d.xy / d.z,\n         v2 = sign(d.y)*d.xz / d.y,\n         v3 = sign(d.x)*d.zy / d.x;\n    m = minLen(minLen(v1,v2),v3)*0.5 + 0.5;\n    col = getImage(m);\n    // shading\n    col*=0.7-length(m-0.5);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}