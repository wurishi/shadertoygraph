{"ver":"0.1","info":{"id":"Ws3GW4","date":"1568467363","viewed":173,"name":"Fractal Mandelbrot ","username":"aaraomelo","description":"Mandelbrot fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","complexnumbers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    The Mandelbrot set is defined as the set of points c in the complex plane to which the \n    recursively defined sequence:\n        z_0 = 0\n        z_{n+1} = z_n*z_n + c\n    it does not tend to infinity.\n*/\n\nvec2 multiply(vec2 x,vec2 y){\n    return vec2(x.x*y.x-x.y*y.y,x.x*y.y+x.y*y.x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 4.*(fragCoord/iResolution.x-vec2(.5,.27));\n    vec2 col;\n    \n    vec2 z0 = vec2(0.2*cos(iTime),0.2*sin(iTime));\n    for(int i = 0; i < 1000;i++){\n        vec2 z = multiply(z0,z0)+uv;\n        float mq = dot(z,z);\n        if( mq > 1000.0){\n            col = vec2(float(i)/30.0,0.0);\n            break;\n        } else {\n            z0 = z;\n        }\n        col =  vec2(mq/2.0,mq/2.0);\n    }\n    fragColor = vec4(col,0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}