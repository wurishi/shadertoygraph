{"ver":"0.1","info":{"id":"wltyzf","date":"1609658870","viewed":86,"name":"Intersection Box","username":"gorgh","description":"My attempt in making fog like effect by calculating intersection points of the box made of 6 quads.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","light","intersection","fog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float remap01(float a,float b, float t){\nreturn (t-a)/(b-a);\n}\nmat2 Rot(float a){\nfloat s=sin(a);\nfloat c=cos(a);\nreturn mat2(c,-s,s,c);\n\n}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\nfloat udQuad( vec3 p, vec3 a, vec3 b, vec3 c, vec3 d )\n{\n  vec3 ba = b - a; vec3 pa = p - a;\n  vec3 cb = c - b; vec3 pb = p - b;\n  vec3 dc = d - c; vec3 pc = p - c;\n  vec3 ad = a - d; vec3 pd = p - d;\n  vec3 nor = cross( ba, ad );\n\n  return sqrt(\n    (sign(dot(cross(ba,nor),pa)) +\n     sign(dot(cross(cb,nor),pb)) +\n     sign(dot(cross(dc,nor),pc)) +\n     sign(dot(cross(ad,nor),pd))<3.0)\n     ?\n     min( min( min(\n     dot2(ba*clamp(dot(ba,pa)/dot2(ba),0.0,1.0)-pa),\n     dot2(cb*clamp(dot(cb,pb)/dot2(cb),0.0,1.0)-pb) ),\n     dot2(dc*clamp(dot(dc,pc)/dot2(dc),0.0,1.0)-pc) ),\n     dot2(ad*clamp(dot(ad,pd)/dot2(ad),0.0,1.0)-pd) )\n     :\n     dot(nor,pa)*dot(nor,pa)/dot2(nor) );\n}\n\nfloat getDist(vec3 uv,int x,float start,float end){\n float m=0.;\n  if(x==0){\n   m=udQuad(uv,vec3(2.5,0.+end,0),vec3(2.5,1.-end,0),vec3(0,1.-start,0),vec3(0,0.+start,0));\n}\n  if(x==1){\n   m=udQuad(uv,vec3(0,1.-start,0),vec3(0,1.-start,1),vec3(0,0.+start,1),vec3(0,0.+start,0));\n}\n   if(x==2){\n   m=udQuad(uv,vec3(0,0.+start,1),vec3(2.5,0.+end,1),vec3(2.5,0.+end,0),vec3(0,0.+start,0));\n}\n  if(x==3){\n   m=udQuad(uv,vec3(0,1.-start,1),vec3(2.5,1.-end,1),vec3(2.5,1.-end,0),vec3(0,1.-start,0));\n}\n  if(x==4){\n   m=udQuad(uv,vec3(2.5,0.+end,1),vec3(2.5,1.-end,1),vec3(0,1.-start,1),vec3(0,0.+start,1));\n}\n  if(x==5){\n   m=udQuad(uv,vec3(2.5,1.-end,0),vec3(2.5,1.-end,1),vec3(2.5,0.+end,1),vec3(2.5,0.+end,0));\n}\n  return m;\n}\n\nvec2 RayMarch(vec3 ro,vec3 rd,int x){\n\n    float dist=0.;\n    float currentDist=0.;\n    for(int i=0;i<100;i++){\n        vec3 currentPoint= ro+dist*rd;       \n        currentPoint.xz*=Rot(iTime*.4);\n        currentPoint.yz*=Rot(iTime*.2);        \n        float end=sin(iTime)*.45;\n        float start=cos(iTime)*.45;\n        currentDist= getDist(currentPoint,x,end,start);\n        dist+=currentDist;\n        if(currentDist<.001 || dist> 30.)break;\n        }\n        return vec2(dist,currentDist);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col=vec3(.13,.25,.49);\n    vec3 unit=vec3(1,0,0);\n    unit.zy*=Rot(iTime*.2);\n    unit.zx*=Rot(iTime*.4);    \n    vec3 ro=vec3(0,0,-3.5);\n    vec3 rd=normalize(vec3(uv.x,uv.y,1.));\n    vec3 box=vec3(1,1.2,1);\n    \n    \n    vec3 quads[6]=vec3[](vec3(100.,100.,100.),vec3(100.,100.,100.),\n    vec3(100.,100.,100.),vec3(100.,100.,100.),\n    vec3(100.,100.,100.),vec3(100.,100.,100.));\n\n    int y=0;\n    float d=30.;\n for(int x=0;x<6;x++){\n    vec2 dm=RayMarch(ro,rd,x);\n   \n        if(dm.x<29.){\n        quads[y]=ro+rd*dm.x;\n        y++;\n                     }\n                     }\n        \n        if(length(quads[0])<4.5 && length(quads[1])<4.5){\nfloat c=max(remap01(.0,3.,(dot(quads[0],unit)+dot(quads[1],unit))*.5),0.);        \n        col+=vec3(c,c*.4,c*.42);\n        }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}