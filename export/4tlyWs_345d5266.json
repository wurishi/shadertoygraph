{"ver":"0.1","info":{"id":"4tlyWs","date":"1506979945","viewed":602,"name":"Dithering, Random","username":"4rknova","description":"Simple random dithering","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["random","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by Nikos Papadopoulos, 4rknova / 2017\n// WTFPL\n\n#define SPATIAL\n\n#define LUMINANCE(x) (dot(x, vec3(.2126, .7152, .0722)))\n#define RANDOMIZE(x) (fract(sin(dot(x,vec3(283.6,127.1,311.7))) * 43758.5453123))\n\nvec3 dither(vec3 col, vec2 uv)\n{\n    // For each pixel, generate a random value.\n    // If that value is greater than the luminance of the pixel,\n    // plot 0, otherwise plot 1.\n    float threshold = RANDOMIZE(\n    #ifdef SPATIAL\n  \t\tvec3(uv,0)\n    #else\n    \tcol\n    #endif    \n    );\n        \n    return vec3(LUMINANCE(col) > threshold ? 1. : 0.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv  = fragCoord.xy / iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    fragColor = vec4(dither(col, uv),1);\n}","name":"Image","description":"","type":"image"}]}