{"ver":"0.1","info":{"id":"7ldyD8","date":"1659740172","viewed":112,"name":"Somesort of lense distortion","username":"akin","description":"simple toy","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid lense(in vec2 lensPosition, in float rad, in vec2 fragCoord, inout vec2 distortion)\n{\n    vec2 totalCenterDir = lensPosition - fragCoord;\n    vec2 lensCenterDirection = normalize(totalCenterDir);\n    float dist = distance(lensPosition, fragCoord);\n    \n    float radius = iResolution.x / 5.0;\n    \n    float power = (max(radius - dist, 0.0)) / radius;\n    \n    if(power > 0.0)\n    {\n        float depth = 0.95 - power;\n        power = pow(depth, 2.0) * 0.80;\n        \n        distortion += lensCenterDirection * power;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 distorted = vec2(0.0);\n    \n    lense(\n        vec2(sin(iTime) / 2.0 + 0.5, cos(iTime) / 2.0 + 0.5) * iResolution.xy, \n        iResolution.x / 5.0, \n        fragCoord,\n        distorted);\n    \n    \n    lense(\n        vec2(sin(iTime) / 2.0 + 0.5, cos(iTime + 3.141) / 2.0 + 0.5) * iResolution.xy, \n        iResolution.x / 5.0, \n        fragCoord,\n        distorted);\n\n    \n    vec4 tex = texture(iChannel0, uv + distorted);\n\n    // Output to screen\n    fragColor = vec4(tex.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}