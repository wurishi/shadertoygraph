{"ver":"0.1","info":{"id":"DttGDs","date":"1683344536","viewed":73,"name":"Simple Cubes tunnel","username":"rafaelbeckel","description":"Simple cubes tunnel experiment for learning purposes","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","cubes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, vec2 u) {\n    vec3 R = iResolution, C,\n         P = vec3(0,0, iTime*2.),\n         D = normalize(vec3( u, R.y ) -.5*R );\n    \n    float t = 0., d=1., i=0.;\n    for ( ; i++ < 80. && d > .001 ; P += d * D )\n        C = ceil(P) - .5,  \n        C = abs(P-C) - .03 - .17 * fract(sin(dot(C, R+71.)) * 1e4),\n        t += d = min(max(C.x, max(C.y, C.z)), 0.) + .8*length(max(C, 0.));\n\n    O = t > 0.\n    ?   ( .5 + .5 * cos(P.z * .1) )\n      * ( .5 + .5 * sin(floor(P.z)*.1 * vec4(1,2,3,0) + vec4(0,2,4,0)) )\n      + vec4(0.2, 0.2, 0.2, 0.0) // Add a small constant value to RGB channels\n    : O*0.;;\n}","name":"Image","description":"","type":"image"}]}