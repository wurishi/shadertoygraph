{"ver":"0.1","info":{"id":"MlVyR1","date":"1535138946","viewed":864,"name":"FlatCubes","username":"dila","description":"Some kind of projection illusion. I hope you can see it :))","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x) {\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nvec2 tuv = vec2(0.0);\nfloat mat = 0.0;\n\nfloat pmap(vec3 p) {\n    tuv = p.xy;\n\treturn -p.z;\n}\n\nfloat sdBox( vec3 p, vec3 b ) {\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat rmap(vec3 p, vec3 w) {\n    p.z += 0.5;\n    vec3 s = w;\n \tfloat b = sdBox(p, w);\n    w.x *= 2.0;\n    w.yz *= 0.75;\n    b = max(b, -sdBox(p, w));\n    b = max(b, -sdBox(p.yzx, w));\n    b = max(b, -sdBox(p.zxy, w));\n   \treturn b;\n}\n\nfloat fmap(vec3 p) {\n    tuv = p.xy;\n    vec3 q = p;\n    q.xy -= 1.0;\n    q.xy = (fract(q.xy * 0.5) - 0.5) * 2.0;\n\tfloat b = max(rmap(q, vec3(0.5)), -sdBox(p, vec3(1.25)));\n    float g = -p.z;\n    if (g < b) {\n        mat = 0.0;\n        return g;\n    }\n    mat = 1.0;\n    return b;\n}\n\nvec3 rnormal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    vec3 s = vec3(0.5);\n    return normalize(vec3(rmap(p+o.xyy, s) - rmap(p-o.xyy, s),\n                          rmap(p+o.yxy, s) - rmap(p-o.yxy, s),\n                          rmap(p+o.yyx, s) - rmap(p-o.yyx, s)));\n}\n\nvec3 fnormal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(fmap(p+o.xyy) - fmap(p-o.xyy),\n                          fmap(p+o.yxy) - fmap(p-o.yxy),\n                          fmap(p+o.yyx) - fmap(p-o.yyx)));\n}\n\nvec3 ray(vec2 uv) {\n    return normalize(vec3(uv, 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float gt = iTime - 10.0 + 6.0;\n    \n\tvec3 r = ray(uv);\n    vec3 o = vec3(0.0, 0.0, -3.0);\n    \n    vec3 rr = r;\n    vec3 ro = o;\n    \n    float theta = (0.5 + 0.5 * cos(gt * 3.141592 * 0.5)) * 3.141592 * 0.3;\n    r.yz *= rot(theta);\n    o.yz *= rot(theta);\n    \n    r.xy *= rot(gt * 0.5);\n    o.xy *= rot(gt * 0.5);\n    \n\tfloat pt = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        pt += pmap(o + r * pt);\n    }\n    \n    vec2 fr1 = (o.xy - tuv) / o.z;\n    vec2 fr2 = (ro.xy - tuv) / ro.z;\n    float ef = mod(floor(gt * 0.25 + 0.5), 2.0);\n    vec3 fr = ray(mix(fr1, fr2, ef));\n    vec3 fo = mix(o, ro, ef);\n    \n    float ft = 0.0, rt = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        ft += fmap(fo + fr * ft);\n        rt += rmap(o + r * rt, vec3(0.5));\n    }\n    \n    float cmat = mat;\n    vec2 ctuv = tuv;\n    \n    float st = length(fo + fr * ft - o);\n    float t = min(rt, st);\n    float mask = max(sign(st - rt), 0.0);\n    cmat = max(mask, cmat);\n    \n    vec3 fn = fnormal(fo + fr * ft);\n    vec3 rn = rnormal(o + r * t);\n    vec3 n = mix(fn, rn, mask);\n    \n    vec3 tex = texture(iChannel0, ctuv * 0.5).xyz;\n    tex = mix(tex, vec3(1.0), cmat);\n    \n    float k = 1.0 / (1.0 + t * t * 0.05);\n    \n    k *= max(dot(vec3(1.0), -n), 0.0);\n    \n    vec3 fc = tex * vec3(k);\n    \n    fragColor = vec4(fc, 1.0);\n}","name":"Image","description":"","type":"image"}]}