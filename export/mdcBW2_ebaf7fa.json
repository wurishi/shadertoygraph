{"ver":"0.1","info":{"id":"mdcBW2","date":"1697642568","viewed":14,"name":"Fork Damaged VC jeffling 558","username":"Jeffling","description":"Simulating a damaged VCR playing a video","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Scanline effect\n    vec2 warpedUv = uv;\n    float temp = smoothstep(0.1, 0.01, abs(uv.y - fract(iTime / 10.0)));\n    warpedUv += temp * vec2(tan(uv.y * 100.0 + iTime / 10.0) * 0.1, 0.0);\n    \n    // Color offset for RGB\n    float timeOffset = mod(iTime, 5.0) / 5.0;\n    vec2 offset1 = vec2(0.005 * sin(timeOffset * 2.0 * 3.14159), 0.);\n    vec2 offset2 = vec2(0.005 * sin((timeOffset + 0.33) * 2.0 * 3.14159), 0.);\n    vec2 offset3 = vec2(0.005 * sin((timeOffset + 0.66) * 2.0 * 3.14159), 0.);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}