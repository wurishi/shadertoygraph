{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// variant of \"wireframe dodecahedron 3\" https://shadertoy.com/view/4XfcR8\n\n\n#define rot(a) mat2(cos(a+vec4(0,33,11,0)))\n#define F(A)   dot(q,A) < 0. ?  q = reflect(q,A) : q \n\nvoid mainImage( out vec4 O, vec2 u ) {\n\n    vec3 R = iResolution,\n         P = vec3(0, 0, 2.5), q,\n         D = normalize(vec3( u - .5*R.xy, -R.y )),\n         M = iMouse.z > 0. ? iMouse.xyz/R -.5 :           // comment for no mouse cam\n                 vec3( .15,.07,0) * cos(.3*iTime + vec3(0,11,0)),\n         C = vec3(-.81,-.47, .36);\n          \n    float h=1., i;\n    for ( O=vec4(1); O.x > 0. && h > .01; O-=.01 ) {      // --- march scene\n        q = P,\n        q.yz *= rot(6.*M.y),                             // rotations\n        q.xz *= rot(6.*M.x);\n                                                          //  --- dodecahedron edges  \n        for (int i; i++ < 5; )                            // cascaded folding  p = fold(p) \n            F( vec3( 1  , 0  , 0  ) ), \n            F( vec3(-.5 , .87, 0  ) ),\n            F( C );   \n\n        q.z--;                                              \n        h = min( length(q + C*.72 * clamp(-dot(q,C*1.44) , 0., 1.) ) - .03, // draw edge \n                  abs(q.z+.5)-.3 );                       // plane ( â†’ icosahedron )\n       P += .5* h*D;\n    }\n    O *= O*O * 1.2;                                       // color scheme\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfyBRR","date":"1733676365","viewed":170,"name":"wireframe dodecahedron + icos 5 ","username":"FabriceNeyret2","description":"variant of https://shadertoy.com/view/4XfcR8","likes":17,"published":3,"flags":0,"usePreview":0,"tags":["wireframe","dodecahedron"],"hasliked":0,"parentid":"","parentname":""}}