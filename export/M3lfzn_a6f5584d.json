{"ver":"0.1","info":{"id":"M3lfzn","date":"1728065369","viewed":133,"name":"Shifting polyhedra","username":"ChunderFPV","description":"I'm using the radial blur jitter method from anthofoxo which makes the blurs more efficient (smaller loop) and wireframe method from FabriceNeyret.\nEvery 45 sec the polyhedron switches between dodeca/stellated icosa & icosa/stellated dodeca.\n\n","likes":17,"published":1,"flags":32,"usePreview":0,"tags":["2d","3d","blur","lines","radial","vectors","polyhedron","jitter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// radial blur\n// jitter method from anthofoxo: https://www.shadertoy.com/view/MXlyW8\n// more blur with a smaller loop (it's a bit grainy but the performance is better)\n\n#define H(a) (cos(radians(vec3(0, 60, 120))+(a)*6.2832)*.5+.5)  // hue\n#define T(p) texture(iChannel0, mix(u, m, (v+j)/l*p)).rgb       // scale texture\n\nfloat hash12(vec2 p)  // noise\n{\n\tvec3 p3 = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float l = 20.,  // scale loop\n          s = 1.,   // step size\n          t = iTime/6.,  // color cycle\n          j = hash12(U + t),  // jitter\n          i = 0., v = i, d, r;\n    \n    vec2 R = iResolution.xy,\n         u = U/R,\n         m = (iMouse.z > 0.) ? iMouse.xy/R: vec2(.5);  // blur center from mouse\n    \n    r = length((U-R/2.)/R.y);\n    vec3 c = H(t-r/3.)*.2;  // background color\n    \n    for (i; i<l; i++)  // blur loop\n        d = 1.-i/l,     // gradual darkening\n        c += T( 1.) * H(t-d+.5) * d,  // blur out\n        c += T(-1.) * H(t-d   ) * sqrt(d),  // blur in\n        v += s;  // step\n    \n    c *= 1.-sqrt(texture(iChannel0, u).rgb);  // dark lines\n    c += texture(iChannel1, u).rgb * min(pow(r*2., 3.), 1.);  // buffer b\n    \n    C = vec4(tanh(c*c), 1);  // c squared for contrast, limit blowout with tanh (trick I got from Xor)\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// polyhedra\n// wireframe code from FabriceNeyret2: https://www.shadertoy.com/view/XfS3DK\n\n#define O(x,a,b) (smoothstep(0., 1., cos(x*6.2832)*.5+.5)*(a-b)+b)  // oscillate x between a & b\n#define A(v) mat2(cos((v*3.1416) + vec4(0, -1.5708, 1.5708, 0)))          // rotate\n#define s(a, b) c = max(c, .006/abs(L( u, K(a, v, h), K(b, v, h) )+.02)); // segment\n\n// line\nfloat L(vec2 p, vec3 A, vec3 B)\n{\n    vec2 a = A.xy, \n         b = B.xy - a;\n         p -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n    return length(p - b*h) + .01*mix(A.z, B.z, h);\n}\n\n// cam\nvec3 K(vec3 p, mat2 v, mat2 h)\n{\n    p.zy *= v; // pitch\n    p.zx *= h; // yaw\n    p *= 5. / (p.z+5.); // perspective view\n    return p;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 R = iResolution.xy,\n         u = (U-R/2.)/R.y*5.,\n         m = (iMouse.xy*2.-R)/R.y;\n    \n    float t = iTime/180.,\n          o = t*8., // shape shift timer\n          c = 0., x, y, z;\n    \n    if (iMouse.z < 1.) // not clicking\n        m = vec2(sin(t*6.2832)*2., sin(t*6.2832*2.)*.7); // fig-8 movement\n    \n    mat2 v = A(m.y), // pitch\n         h = A(m.x); // yaw\n    \n    if (mod(o, 4.) < 2.)  // swap between polyhedra\n    {\n        // dodecahedron to stellated icosahedron\n        x = O(o,  .382,   1.);\n        y = O(o, -.618, .618);\n        z = O(o,    1., .382);\n\n        s( vec3(-z,  x,  0), vec3(-z, -x,  0) )\n        s( vec3( z,  x,  0), vec3( z, -x,  0) )\n        s( vec3(-z,  x,  0), vec3( y, -y, -y) )\n        s( vec3(-z,  x,  0), vec3( y, -y,  y) )\n        s( vec3(-z, -x,  0), vec3( y,  y, -y) )\n        s( vec3(-z, -x,  0), vec3( y,  y,  y) )\n        s( vec3( z,  x,  0), vec3(-y, -y,  y) )\n        s( vec3( z,  x,  0), vec3(-y, -y, -y) )\n        s( vec3( z, -x,  0), vec3(-y,  y,  y) )\n        s( vec3( z, -x,  0), vec3(-y,  y, -y) )\n        s( vec3( x,  0, -z), vec3(-x,  0, -z) )\n        s( vec3( x,  0,  z), vec3(-x,  0,  z) )\n        s( vec3( x,  0, -z), vec3(-y,  y,  y) )\n        s( vec3( x,  0, -z), vec3(-y, -y,  y) )\n        s( vec3(-x,  0, -z), vec3( y, -y,  y) )\n        s( vec3(-x,  0, -z), vec3( y,  y,  y) )\n        s( vec3( x,  0,  z), vec3(-y,  y, -y) )\n        s( vec3( x,  0,  z), vec3(-y, -y, -y) )\n        s( vec3(-x,  0,  z), vec3( y,  y, -y) )\n        s( vec3(-x,  0,  z), vec3( y, -y, -y) )\n        s( vec3( 0,  z,  x), vec3( 0,  z, -x) )\n        s( vec3( 0, -z,  x), vec3( 0, -z, -x) )\n        s( vec3( 0,  z,  x), vec3( y, -y, -y) )\n        s( vec3( 0,  z,  x), vec3(-y, -y, -y) )\n        s( vec3( 0,  z, -x), vec3( y, -y,  y) )\n        s( vec3( 0,  z, -x), vec3(-y, -y,  y) )\n        s( vec3( 0, -z,  x), vec3( y,  y, -y) )\n        s( vec3( 0, -z,  x), vec3(-y,  y, -y) )\n        s( vec3( 0, -z, -x), vec3(-y,  y,  y) )\n        s( vec3( 0, -z, -x), vec3( y,  y,  y) )\n    }\n    else\n    {\n        // icosahedron to stellated dodecahedron\n        x = 0.;\n        y = O(o, 1., .618);\n        z = O(o, -.618, 1.);\n\n        s( vec3(-y,  z,  0), vec3( 0, -y, -z) )\n        s( vec3(-y,  z,  0), vec3( 0, -y,  z) )\n        s( vec3( y,  z,  0), vec3( 0, -y, -z) )\n        s( vec3( y,  z,  0), vec3( 0, -y,  z) )\n        s( vec3(-y, -z,  0), vec3( 0,  y, -z) )\n        s( vec3(-y, -z,  0), vec3( 0,  y,  z) )\n        s( vec3( y, -z,  0), vec3( 0,  y, -z) )\n        s( vec3( y, -z,  0), vec3( 0,  y,  z) )\n        s( vec3(-y,  z,  0), vec3( z,  0, -y) )\n        s( vec3(-y,  z,  0), vec3( z,  0,  y) )\n        s( vec3( y,  z,  0), vec3(-z,  0, -y) )\n        s( vec3( y,  z,  0), vec3(-z,  0,  y) )\n        s( vec3(-y, -z,  0), vec3( z,  0, -y) )\n        s( vec3(-y, -z,  0), vec3( z,  0,  y) )\n        s( vec3( y, -z,  0), vec3(-z,  0, -y) )\n        s( vec3( y, -z,  0), vec3(-z,  0,  y) )\n        s( vec3( y,  z,  0), vec3( y, -z,  0) )\n        s( vec3(-y, -z,  0), vec3(-y,  z,  0) )\n        s( vec3( 0, -y, -z), vec3( 0, -y,  z) )\n        s( vec3( 0,  y, -z), vec3( 0,  y,  z) )\n        s( vec3( 0,  y, -z), vec3( z,  0,  y) )\n        s( vec3( 0,  y, -z), vec3(-z,  0,  y) )\n        s( vec3( 0, -y, -z), vec3( z,  0,  y) )\n        s( vec3( 0, -y, -z), vec3(-z,  0,  y) )\n        s( vec3(-z,  0, -y), vec3( z,  0, -y) )\n        s( vec3(-z,  0,  y), vec3( z,  0,  y) )\n        s( vec3(-z,  0, -y), vec3( 0,  y,  z) )\n        s( vec3(-z,  0, -y), vec3( 0, -y,  z) )\n        s( vec3( z,  0, -y), vec3( 0,  y,  z) )\n        s( vec3( z,  0, -y), vec3( 0, -y,  z) )\n    }\n    c *= pow( O(t*4., 0., 1.), .1 );  // darken at shape swap\n    \n    C = vec4(c);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Pearly Ropes by me: https://www.shadertoy.com/view/DtlXWB\n\n#define H(a) (cos(radians(vec3(-90, -30, 30))+(a)*6.2832)*.5+.5)  // hue\n#define Q(v) max(H(u.v-t), H(1./u.v+t)) * g(u.v, t)  // quick func\n\nfloat g(float x, float t) // grid\n{\n    if (abs(x) < 1.) x = -1./x; // reciprocals\n    return (1.-abs(sin((x-t)*3.1416))) / abs(x);\n}\n\nvoid mainImage(out vec4 C, in vec2 U)\n{\n    vec2 R = iResolution.xy;\n    \n    vec3 u = normalize(vec3((U-R/2.)/R.y, 1))*8., c;\n    \n    float t = iTime/6.,\n          a = atan(u.y, u.x) + t/3.1416,  // arc\n          r = length(u.xy);    // radius\n    \n    u.xy = tan( log(r) + vec2(a, -a*3.)/2. ); // log spiral transform\n    c = max( Q(x), .5*Q(y) );  // two spiral sets\n    c = min(c, H(r-t*4.) * g(r, t*4.) + .25) + pow(c, vec3(5)); // rings\n    \n    C = vec4(c*c*c*4., 1);\n}","name":"Buffer B","description":"","type":"buffer"}]}