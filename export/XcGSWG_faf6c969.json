{"ver":"0.1","info":{"id":"XcGSWG","date":"1715656640","viewed":81,"name":"Shadow Visualizer","username":"Rugged","description":"Not meant to be efficient, just a line of sight visualizer for another project I' working on.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["shadows","raytrace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    vec4 col = vec4(0.);\n    \n    \n    \n    \n    \n    \n    vec2 p = fragCoord;\n    \n    vec2 dir = normalize(iMouse.xy - fragCoord);\n    \n    float d = distance(p, iMouse.xy);\n    \n    float dinit = d;\n    \n    int n = int(iResolution.y / 8.0);\n    \n    for(int i = 0; i < 1000 && col.x < 0.1 && d > 1.0; i++){\n        \n        \n        \n        if(texelFetch(iChannel0, ivec2(p), 0).x > 0.0){\n            col = vec4(0.);\n            break;\n        }\n        \n        \n        \n        p+= dir;\n        \n        d = distance(p, iMouse.xy);\n        if(d < 1.0){\n            col = vec4(0.7, 0.7, 0.1, 0.0) / (dinit / float(n));\n        }\n    }\n    \n    \n    \n    \n    col += texture(iChannel0, uv);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec4 col = vec4(0.);\n    \n    \n    float density = 0.5;\n    \n    if(uv.x > 0.5){\n        density = 0.9;\n    }\n    \n    col = vec4(floor(pow(texture(iChannel0, uv).r, 5.0) + density));\n    \n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}