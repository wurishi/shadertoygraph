{"ver":"0.1","info":{"id":"XX33zf","date":"1716807194","viewed":53,"name":"{Bio-Leak}","username":"inverse_transpose","description":"Ray marching a sphere and using texture to mutate space.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSphere(in vec3 p, in float r)\n{\n    vec3 q = normalize(p);\n    vec2 tuv = vec2(atan(q.z, q.x), acos(q.y));\n    return length(p)-r - texture(iChannel0, tuv).r*.09;// + (.1*cos(tuv.x*4.2345+iTime*.5));\n}\n\nvec3 roty(in vec3 p, in float t)\n{\n    float st = sin(t);\n    float ct = cos(t);\n    mat3 mat = mat3(\n        ct, 0.0, st,\n       0.0, 1.0, 0.0,\n       -st, 0.0, ct\n    );\n    return mat*p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n  \n    vec3 ro = vec3(.0, .0, 1.5);\n    vec3 rd = normalize(vec3(uv.x, uv.y, -1.0));\n  \n    vec3 col = vec3(.9);\n    float td = .0;\n    for (int i = 0; i < 50; ++i)\n    {\n        vec3 p = roty(ro + td*rd, iTime*.1);\n        float d = sdSphere(p, .5)*.8;\n        td += d;\n        if (d < .00001)\n        {\n            vec3 q = normalize(p);\n            vec2 tuv = vec2(atan(q.z, q.x), acos(q.y));\n            col = mix(vec3(.3, .7, .6),texture(iChannel0, tuv).ggg, 1.0-(float(i)/10.0));\n            break;\n        }\n        \n        if (td > 100.0)\n            break;\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}