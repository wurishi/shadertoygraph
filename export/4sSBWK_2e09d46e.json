{"ver":"0.1","info":{"id":"4sSBWK","date":"1589557320","viewed":182,"name":"Shockwave Effect - Step 1","username":"remonvv","description":"Shockwave Effect - Step 1 : Making a simple polar mapping","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","fbm","effect","shockwave","fractalnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n#define M_TWO_PI (M_PI * 2.0)\n\nvec4 shade(vec2 uv) {\n    \n    if(uv.x < 0.0 || uv.y < 0.0 || uv.x > 1.0 || uv.y > 1.0)\n        return vec4(0.0);\n    \n    vec2 c = uv;\n    \n    float f = sin(c.x) * sin(c.y);\n    \n    return vec4(uv.x, uv.y, 1.0, 1.0);\n}\n\nvec2 polarMap(vec2 uv, float inner) {\n\n    uv = vec2(0.5) - uv;\n    \n    float px = 1.0 - fract(atan(uv.y, uv.x) / M_TWO_PI + 0.25);\n    float py = (sqrt(uv.x * uv.x + uv.y * uv.y) * (1.0 + inner * 2.0) - inner) * 2.0;\n    \n    return vec2(px, py);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    uv.x -= iResolution.x / iResolution.y / 2.0 - 0.5;\n    \n\tfragColor = shade(polarMap(uv, 0.0));\n}","name":"Image","description":"","type":"image"}]}