{"ver":"0.1","info":{"id":"dsGXzc","date":"1681387862","viewed":122,"name":"energy drinks","username":"104","description":"hi shadertoy here's another 2D tiling sketch","likes":10,"published":1,"flags":0,"usePreview":1,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pix = 24.;\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\n\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // panning scaling etc\n    vec2 t = iTime * vec2(2.5, 2.2);\n    uv += (t + sin(t)*2.)*.03;\n    uv *= vec2(19.,9.) * .4;\n    \n    // cell seeds\n    vec2 id = floor(uv);\n    vec2 p = uv - id;\n    vec4 h = hash42(id);\n    \n    vec4 rowh = hash42(id.y * vec2(1.333,2.333));\n    \n    uv.x += (rowh.x-.5) + (t.x * (rowh.y-.5)) * 1.;\n    \n    id = floor(uv); // recalc cell based on new coords\n    p = uv - id;\n    h = hash42(id);\n\n    o = h;\n    \n    for (float i = 0.0; i < 1.0; i += 0.2)\n    {\n        uv = floor(uv*pix)/pix; // pixellate coords\n        uv -= uv.yx * (h.yx) * sign(h.z-.5); // skew\n        uv += iTime * .5* (h.z - .5); // animate\n        id = floor(uv);\n        \n        h = hash42(id);\n\n        o += h*i;\n\n        if (i > h.w) break;\n    }\n\n    vec2 p2 = abs(p-.5);\n    float pd = 1.0-max(p2.x, p2.y);\n    pd = sqrt(pd);\n    pd *= 1.-abs(p.x-.5); // x shade\n    o *= pow(pd,2.5);\n}\n","name":"Image","description":"","type":"image"}]}