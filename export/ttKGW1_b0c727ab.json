{"ver":"0.1","info":{"id":"ttKGW1","date":"1578861420","viewed":104,"name":"Simple Camera Struct","username":"sbrown2","description":"a simple 3d skeleton soon to add camera structure.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct CAMERA{\n\tvec3  camPos;\n    vec3  rd;\n    \n};\n    \nfloat shortestDistToRay(CAMERA c, vec3 p){\n    \n    \n      return    length(cross(p-c.camPos,c.rd))/length(c.rd);\n}\n\nfloat DrawPoint(CAMERA c, vec3 p){\n\n    float  d       =  shortestDistToRay(c,p);\n\t       d       =  smoothstep(.06,.05,d);\n    \n    return d;\n}\nvec3 getCameraRayDirection(vec2 uv, vec3 lookat, vec3 ro, float zoom){\n\t\n    vec3   f       =  normalize(lookat-ro);\n    vec3   r       =  cross(vec3(0.,1.,0.),f);\n    vec3   u       =  cross(f,r);\n    vec3   sc      =  ro + f*zoom;\n    vec3   i       =  sc + uv.x*r + uv.y*u;\n    vec3   rd      =  i-ro;\n    return rd;\n}\n\nCAMERA createCamera(vec2 uv,vec3 lookat,vec3 ro,float zoom){\n\t\n    vec3   rd      =  getCameraRayDirection(uv,lookat,ro,zoom);\n    \n    CAMERA c       =  CAMERA(ro,rd);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2   uv      =  fragCoord/iResolution.xy;\n\t       uv     -=  .5;\n           uv.x   *=  iResolution.x/iResolution.y;\n    \n    //create camera\n\tvec3   lookat  =  vec3(.5);    \n    vec3   camPos      =  vec3(3.0*sin(iTime),2.,-3.*cos(iTime));\n    vec3   loc     =  camPos;\n    float  zoom    =  .8;\n    \n    CAMERA c       =  createCamera(uv,lookat,camPos,zoom);\n    \n\t       c       =  createCamera(uv,lookat,camPos\n                                   ,zoom);    \n   \t//draw cube by placing 8 points\n    float  d       =  0.;\n    \n           d       +=  DrawPoint(c,vec3(0.,0.,0.));\n           d       +=  DrawPoint(c,vec3(0.,0.,1.));\n           d       +=  DrawPoint(c,vec3(0.,1.,0.));\n           d       +=  DrawPoint(c,vec3(0.,1.,1.));\n           d       +=  DrawPoint(c,vec3(1.,0.,0.));\n           d       +=  DrawPoint(c,vec3(1.,0.,1.));\n           d       +=  DrawPoint(c,vec3(1.,1.,0.));\n           d       +=  DrawPoint(c,vec3(1.,1.,1.));\n\n    vec3   hue     =  vec3(1.);\n    \n    \n    fragColor    =  vec4(d);\n}","name":"Image","description":"","type":"image"}]}