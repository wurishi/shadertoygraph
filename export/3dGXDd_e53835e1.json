{"ver":"0.1","info":{"id":"3dGXDd","date":"1575293384","viewed":74,"name":"bob_drawRect","username":"zhaxiu3","description":"learn to draw Rect\nI will try to understand the following articlesï¼š\nhttps://stackoverflow.com/questions/30545052/calculate-signed-distance-between-point-and-rectangle\nhttps://iquilezles.org/articles/distfunctions2d/distfunctions2d.htm\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define a1 1.8\n#define b1 0.0\n#define c1 0.0\n#define width 0.003\n\n// y = ax^2 + bx + c\nfloat sdfLine(vec2 uv, float a, float b, float c) {\n    vec2 line = vec2(uv.x, a*uv.x*uv.x+b*uv.x + c);\n    //return step(distance(uv, line), width);    \n    return 1.0-distance(uv, line);    \n}\n\nfloat rect(vec2 uv, vec2 center, vec2 halfSize) {\n    vec2 leftBottom = center-halfSize;\n    vec2 size = halfSize*2.0;\n    return 0.5*step(0.0, min(uv.x-leftBottom.x, leftBottom.x+size.x-uv.x))*\n        step(0.0, min(uv.y-leftBottom.y, leftBottom.y+size.y-uv.y));\n    //return min(uv.x-leftBottom.x, leftBottom.x+size.x-uv.x) * min(uv.y-leftBottom.y, leftBottom.y+size.y-uv.y);\n}\n\nfloat sdfIQRect(vec2 uv, vec2 center, vec2 halfSize) {\n    vec2 d = abs(uv) - (center+halfSize);\n    return length(max(vec2(0.0), d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float line = sdfLine(uv,a1,b1, c1);\n    float line2 = sdfLine(uv,a1,b1, c1-0.2);\n    float box = rect(uv, vec2(0.0,0.0), vec2(0.5, 0.3));\n    float box2 = sdfIQRect(uv, vec2(0.0,0.0), vec2(0.5,0.5));\n    \n    // Output to screen\n    fragColor = vec4(box2+box);\n}\n","name":"Image","description":"","type":"image"}]}