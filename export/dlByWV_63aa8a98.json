{"ver":"0.1","info":{"id":"dlByWV","date":"1692288819","viewed":23,"name":"Fork Tileable W Gian 422","username":"GIan","description":"Found this on GLSL sandbox. I really liked it, changed a few things and made it tile-able. \nCheck out the #define to see the tiling.\nSee it full-screen if you can.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["water","caustic"],"hasliked":0,"parentid":"MdlXz8","parentname":"Tileable Water Caustic"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Found this on GLSL sandbox. I really liked it, changed a few things and made it tileable.\n// :)\n// by David Hoskins.\n// Original water turbulence effect by joltz0r\n\n\n// Redefine below to see the tiling...\n//#define SHOW_TILING\n\n#define TAU 6.28318530718\n#define MAX_ITER 5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tfloat time = iTime * .2+23.0;\n    // uv should be the 0-1 uv of texture...\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n#ifdef SHOW_TILING\n\tvec2 p = mod(uv*TAU*2.0, TAU)250.0;\n#else\n    vec2 p = mod(uv*TAU, TAU)-250.0;\n#endif\n\tvec2 i = vec2(p);\n\tfloat c = 1.0;\n\tfloat inten = .004;\n\n\tfor (int n = 0; n < MAX_ITER; n++) \n\t{\n\t\tfloat t = time * (1.0 - (2.0 / float(n+1)));\n\t\ti = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n\t\tc += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\n\t}\n\tc /= float(MAX_ITER);\n\tc = 1.17-pow(c, 1.2);\n\tvec3 colour = vec3(pow(abs(c), 12.0));\n                colour = clamp(colour + vec3(1.0, 0.9, 0.9), 1.0, 0.0);\n\n\n\t\n\n\tfragColor = vec4(colour, 0.0);\n}","name":"Image","description":"","type":"image"}]}