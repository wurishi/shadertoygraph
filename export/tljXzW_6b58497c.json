{"ver":"0.1","info":{"id":"tljXzW","date":"1565273686","viewed":112,"name":"Screen Gamma","username":"MasterQ32","description":"Measure your screen gamma by clicking and dragging until both upper and lower part have the same shade of gray","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["screen","gamma","mouseinput"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// ---- 8< ---- GLSL Number Printing - @P_Malin ---- 8< ----\n// Creative Commons CC0 1.0 Universal (CC-0) \n// https://www.shadertoy.com/view/4sBSWW\n\nfloat DigitBin( const int x )\n{\n    return x==0?480599.0:x==1?139810.0:x==2?476951.0:x==3?476999.0:x==4?350020.0:x==5?464711.0:x==6?464727.0:x==7?476228.0:x==8?481111.0:x==9?481095.0:0.0;\n}\n\nfloat PrintValue( vec2 vStringCoords, float fValue, float fMaxDigits, float fDecimalPlaces )\n{       \n    if ((vStringCoords.y < 0.0) || (vStringCoords.y >= 1.0)) return 0.0;\n    \n    bool bNeg = ( fValue < 0.0 );\n\tfValue = abs(fValue);\n    \n\tfloat fLog10Value = log2(abs(fValue)) / log2(10.0);\n\tfloat fBiggestIndex = max(floor(fLog10Value), 0.0);\n\tfloat fDigitIndex = fMaxDigits - floor(vStringCoords.x);\n\tfloat fCharBin = 0.0;\n\tif(fDigitIndex > (-fDecimalPlaces - 1.01)) {\n\t\tif(fDigitIndex > fBiggestIndex) {\n\t\t\tif((bNeg) && (fDigitIndex < (fBiggestIndex+1.5))) fCharBin = 1792.0;\n\t\t} else {\t\t\n\t\t\tif(fDigitIndex == -1.0) {\n\t\t\t\tif(fDecimalPlaces > 0.0) fCharBin = 2.0;\n\t\t\t} else {\n                float fReducedRangeValue = fValue;\n                if(fDigitIndex < 0.0) { fReducedRangeValue = fract( fValue ); fDigitIndex += 1.0; }\n\t\t\t\tfloat fDigitValue = (abs(fReducedRangeValue / (pow(10.0, fDigitIndex))));\n                fCharBin = DigitBin(int(floor(mod(fDigitValue, 10.0))));\n\t\t\t}\n        }\n\t}\n    return floor(mod((fCharBin / pow(2.0, floor(fract(vStringCoords.x) * 4.0) + (floor(vStringCoords.y * 5.0) * 4.0))), 2.0));\n}\n\n// ---- 8< -------- 8< -------- 8< -------- 8< ----\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    bool a = (mod(fragCoord.x, 2.0) < 0.75);\n    bool b = (mod(fragCoord.y, 2.0) < 0.75);\n    \n    float gamma = 1.0 + 2.0 * iMouse.x / iResolution.x;\n    if(gamma == 1.0)\n        gamma = 2.2; // assume sRGB\n    \n    if(fragCoord.y >= iResolution.y * 0.5) {\n        if((a == b) == (iFrame % 2 == 0))\n            fragColor = vec4(1);\n        else\n            fragColor = vec4(0);\n    } else {\n        fragColor = vec4(pow(0.5, 1.0 / (gamma)));\n    }\n    \n    fragColor = mix( fragColor, vec4(1.0, 0.0, 1.0, 1.0), PrintValue(\n        (fragCoord - vec2(184.0 + 48.0, 5.0)) / 16.0,\n        gamma, \n        2.0, \n        3.0));\n}","name":"Image","description":"","type":"image"}]}