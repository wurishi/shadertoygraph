{"ver":"0.1","info":{"id":"WlcXz2","date":"1581323240","viewed":196,"name":"Image fourier transform","username":"a1pha1","description":"This shader represent an Image as the sum of a set of cosine functions.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["fourier","dft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord)/iResolution.xy;\n    \n    vec2 c = transform(uv, iChannel0);\n    \n    vec3 col = vec3(abs(c.x)/(N*N));\n    \n    //col = log(vec3(texture(iChannel0, uv).r));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord)/iResolution.xy-0.5;\n\tvec2 com;\n    \n    if(length(uv)>2.)\n    {\n        com = vec2(0.);\n    }else\n    {\n        com = transform(uv, iChannel0);\n    }\n    \n    fragColor = vec4(com, 0. ,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float N = 128.;\n\nvec2 transform( vec2 uv, sampler2D tex)\n{\n    float re = 0.;\n    float im = 0.;\n    \n    vec2 texSize = vec2(textureSize(tex, 0));\n    \n    for(float x = 0.; x < N; x++)\n    {\n       for(float y = 0.; y < N; y++)\n       {\n\t      vec2 val = texelFetch(tex, ivec2(x*texSize.x/N, y*texSize.y/N), 0).xy;\n          float alpha = 2.*3.14159*((x*uv.x+y*uv.y));\n          re += val.x * cos(alpha);\n          im += val.y * sin(alpha);\n       } \n    }\n    return vec2(re, im);\n}","name":"Common","description":"","type":"common"}]}