{"ver":"0.1","info":{"id":"7sBBDD","date":"1646310009","viewed":306,"name":"more moire","username":"ChunderFPV","description":"Another example of how well these root grid patterns are duplicated via the moirÃ© effect.  Mouse down to zoom out.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["math","moire","roots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 10.0\n#define PI radians(180.0)\n\n// grid ( color, value, brightness 1=bright 2=dark )\n#define G(c,v,b) col = mix(col, vec3(c), pow(sin(fract(v)*b*PI), 4.0))\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 m = vec2((iMouse.xy-0.5*iResolution.xy)*2.0/iResolution.y);\n    float zoom = (iMouse.z > 0.0) ? pow(pow(1.0-abs(m.y), 2.0), sign(m.y)): 1.0;\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y*SCALE*zoom;\n    \n    uv *= abs(uv); // square the screen space (which roots the grids)\n    vec2 u = abs(uv); // abs(uv) is used often enough to define it\n    float t = iTime;\n    vec3 col = vec3(0);\n    \n    // the grids\n    float xg = u.x; // x\n    float yg = u.y; // y\n    float sg = u.x+u.y; // sum\n    float dg = u.x-u.y; // difference\n    float mg = sign(uv.x)*sign(uv.y)*sqrt(u.x*u.y); // multiply\n    \n    //G(1.0, xg-t, 1.0); // x grid\n    //G(1.0, yg+t, 1.0); // y grid\n    //G(0.0, xg-t, 2.0); // x shadow\n    //G(0.0, yg+t, 2.0); // y shadow\n    \n    G(1.0, dg-t, 1.0); // difference grid\n    G(0.0, dg-t, 2.0); // difference shadow\n    G(1.0, sg-t, 1.0); // sum grid\n    G(0.0, sg-t, 2.0); // sum grid shadow\n    \n    //G(vec3(1), mg-t, 1.0); // multiply grid\n    //G(vec3(0), mg-t, 2.0); // multiply shadow\n    \n    fragColor = vec4(col*1.25, 1.0);\n}","name":"Image","description":"","type":"image"}]}