{"ver":"0.1","info":{"id":"4fVXDc","date":"1715872421","viewed":58,"name":"Triple Screen","username":"nextrix","description":"shader effect for keyframes (vrchat)\nsuggested by xaio","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["screen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iM iMouse\n#define R iResolution\n\n#define _barSize 0.05 + (iM.y / R.y) * 0.5\n#define _barPos 0.55\n\n#define _vig 0.\n\nvec3 barColor = vec3(1.);\nvec3 bgColor = vec3(0.1);\n\n\n// very bad way of doing multiscreen -temmie\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv0 = I/R.xy-0.5;\n    vec2 uv1 = I/R.xy-0.5;\n    vec2 uv2 = I/R.xy-0.5;\n    \n    vec2 barUV = I/R.xy;\n    \n    uv0 *= 3.; // zoom middle\n    uv1 *= 4.; // zoom bottom\n    uv2 *= 4.; // zoom top\n    \n    uv0 += 0.5; // recenter after zoom\n    uv1 += 0.5; // recenter after zoom\n    uv2 += 0.5; // recenter after zoom\n    \n    uv0 -= 0.; // move middle\n    \n    vec2 moveMid, moveBot, moveTop;\n    \n    if (iM.z >= 1.) { // if clicked\n        uv1.x += (iM.x/R.x+.35); // move bottom\n        uv2.x -= (iM.x/R.x+.35); // move top\n        uv1.y +=  (iM.y/R.y) * 1.35; \n        uv2.y -=  (iM.y/R.y) * 1.35; \n        \n        \n    } else { // default\n        uv1.xy += 1.35; // default bottom pos\n        uv2.xy -= 1.35; // default top pos\n    }\n    \n    // bars\n    vec3 col = mix(vec3(-0.1), barColor, vec3(step(smoothstep(abs(uv0.y-0.5), _barSize+_barPos, _barPos), _barSize))); // bars\n\n    // apply all uvs together\n    col = mix(col, texture(iChannel0, uv0).rgb, step(0., -max(abs(uv0.x - 0.5), abs(uv0.y - 0.5)) + 0.5));\n    col = mix(col, texture(iChannel0, uv1).rgb, step(0., -max(abs(uv1.x - 0.5), abs(uv1.y - 0.5)) + 0.5));\n    col = mix(col, texture(iChannel0, uv2).rgb, step(0., -max(abs(uv2.x - 0.5), abs(uv2.y - 0.5)) + 0.5));\n    \n    col = (col.r == -0.1 && col.g == -0.1 && col.b == -0.1) ? bgColor : col;\n    \n    float vignette = clamp(length(uv0-0.5) - mix(-1., 2., _vig), 0., 1.);\n    \n    // Output to screen\n    O = vec4(col,1.0) * vignette;\n}","name":"Image","description":"","type":"image"}]}