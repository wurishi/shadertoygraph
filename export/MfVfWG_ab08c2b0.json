{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"vec3 palette( float t) {\n\n    // original signature: palette( float t, vec3 a, vec3 b, vec3 c, vec3 d)\n    //[[0.218 1.108 0.778] [0.472 0.351 0.445] [-0.001 0.949 0.930] [-0.223 -0.443 1.057]]\n    //[[0.108 0.698 0.608] [0.808 0.351 0.445] [0.448 1.899 1.861] [-0.223 -0.443 1.057]]\n    //[[-0.020 0.648 0.558] [2.138 0.351 0.445] [0.888 1.888 1.861] [-0.450 -0.443 1.057]]\n    \n    vec3 a = vec3(-0.020, 0.648, 0.558);\n    vec3 b = vec3(2.138, 0.351, 0.445);\n    vec3 c = vec3(0.888, 1.888, 1.861);\n    vec3 d = vec3(-0.450, -0.443, 1.057);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    \n    for( float i = 0.0; i < 5.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n        \n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime *.2);\n\n        d = sin(d*8. + iTime*.2)/8.;\n        d = abs(d);\n\n        d = pow(0.003 / d, 1.2);\n\n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfVfWG","date":"1734430171","viewed":63,"name":"dcb_kishimisu_first_shader","username":"drewbcodes","description":"from kishimisu's video on youtube","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["kishimisu"],"hasliked":0,"parentid":"","parentname":""}}