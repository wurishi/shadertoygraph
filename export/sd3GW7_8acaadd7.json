{"ver":"0.1","info":{"id":"sd3GW7","date":"1629946831","viewed":39,"name":"learning-the simplest 3d","username":"luoruchong","description":"learning-the simplest 3d","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float LineDist(vec3 ro, vec3 rd, vec3 p)\n{\n    return length(cross(rd, p-ro))/length(rd);\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p)\n{\n    float d = LineDist(ro, rd, p);\n    d = smoothstep(0.05, 0.04, d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(3.*sin(t), 0., -3.*cos(t));\n    //vec3 rd = vec3(uv.x, uv.y, -2.)-ro;\n    \n    float zoom = 1.;\n    \n    vec3 lookat = vec3(.5);\n    vec3 f = normalize(lookat-ro);\n    vec3 r = cross(vec3(0., 1., 0.), f);\n    vec3 u = cross(f, r);\n    vec3 c = ro+f*zoom;\n    vec3 i = c+uv.x*r+uv.y*u;\n    vec3 rd = i-ro;\n    \n    float d = 0.;\n    d += DrawPoint(ro, rd, vec3(0., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 1.));\n    \n    vec3 col = vec3(d);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}