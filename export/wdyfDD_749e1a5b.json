{"ver":"0.1","info":{"id":"wdyfDD","date":"1607145182","viewed":716,"name":"Convolution Audio Pulse","username":"jackwitherell","description":"I copied sam and also copied convolution from https://www.shadertoy.com/view/XsSfWR\n\ncomputer graphics has always been gatekept\n\nuploaded from a church","likes":7,"published":3,"flags":36,"usePreview":0,"tags":["test","camera","audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //uv = vec2(uv.x,mod(uv.y+texelFetch(iChannel1,ivec2(uv.x*512.0,0),0).x,1.0));\n    vec2 offset_uv = (uv-0.5);\n    uv-=length(offset_uv) * normalize(offset_uv)*texelFetch(iChannel1,ivec2((((atan(-abs(offset_uv.x),offset_uv.y)/(2.0*3.141592))+1.0)/1.0)*512.0,0),0).x;\n    \n    vec3 a = texture(iChannel0,uv).rgb;\n    \n    // Time varying pixel color\n    vec3 col = a;\n    if(uv.y<0.0){\n        col=1.0-col;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// LICENSE:\n// Creative Commons Attribution 4.0 International License.\n// https://creativecommons.org/licenses/by/4.0/\n\n#define T(x) texture(iChannel0, fract((x)/iResolution.xy))\n\nvoid mainImage(out vec4 c, vec2 u)\n{   \n    //c=1./u.yyyx;\n    c=u.yyyx/1e4;///iTime;\n    //for(float t=1.4; t<1e2; t+=t)\n    //    c += (c.gbar-c)/3.+T(u-c.wz*t);\n    for(float t=.6; t<4e2; t+=t)\n    \tc += c.gbar/4.-c*.3+T(u-c.wz*t);\n    \n\tc = mix(T(u+c.xy), cos(c), .07);\n}","name":"Buffer A","description":"","type":"buffer"}]}