{"ver":"0.1","info":{"id":"mtcSDn","date":"1685252907","viewed":39,"name":"2D rectangle plot","username":"felipecsl","description":"Playing with plotting 2d rectangles with step and smoothstep","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","learning","box"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LINE_WIDTH 0.004\n\nfloat plot_horiz(vec2 st, float pct) {\n  return  smoothstep(pct-LINE_WIDTH, pct, st.y) -\n          smoothstep(pct, pct+LINE_WIDTH, st.y);\n}\n\nfloat plot_vert(vec2 st, float pct) {\n  return  smoothstep(pct-LINE_WIDTH, pct, st.x) -\n          smoothstep(pct, pct+LINE_WIDTH, st.x);\n}\n\n// creates a rectangle with a size between 0-1 centered at the center of the screen\nfloat box(vec2 st, float size) {\n  // map from [0-1] to [0.5-1]\n  float actual_size = 0.5 + (0.5 * size);\n  vec2 bottom_left = step(vec2(1. - actual_size), st);\n  vec2 top_right = step(vec2(1. - actual_size), 1.0 - st);\n  return bottom_left.x * bottom_left.y * top_right.x * top_right.y;\n}\n\n// creates a rectangle outline with a size between 0-1 centered at the center of the screen\nfloat box_outline(vec2 st, float size) {\n  // map from [0.5-1] to [0-1]\n  size = 0.5 - (0.5 * size);\n  float rectangle = plot_horiz(st, 1. - size);\n  rectangle += plot_horiz(st, size);\n  rectangle += plot_vert(st, size);\n  rectangle += plot_vert(st, 1. - size);\n  vec2 outer_bl = step(vec2(size - 0.001), st);\n  vec2 outer_tr = step(vec2(size - 0.001), 1.0 - st);\n  rectangle *= outer_bl.x * outer_bl.y * outer_tr.x * outer_tr.y;\n  return rectangle;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 st = fragCoord/iResolution.xy;\n  float rectangle = box_outline(st, abs(sin(iTime)));\n  rectangle += box(st, abs(cos(iTime / 2.)));\n  vec3 color = vec3(rectangle * -1. + 1.);\n  fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}