{"ver":"0.1","info":{"id":"lfdXRB","date":"1714410455","viewed":59,"name":"SMPTE color bars test","username":"hasenpfote","description":"SMPTE Color Bars.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["testpattern","colorbars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * SMPTE Color Bars test\n *\n * ===\n * https://en.wikipedia.org/wiki/SMPTE_color_bars\n */\n\n/**\n * 0: SMPTE ECR 1-1978\n * 1: SMPTE RP 219:2002 (75%)\n * 2: SMPTE RP 219:2002\n */\n#define TEST_PATTERN 2\n\nconst vec3 CB_GRAY_40 = vec3(104.) / 255.;\nconst vec3 CB_WHITE_75 = vec3(180.) / 255.;\nconst vec3 CB_YELLOW_75 = vec3(180., 180., 16.) / 255.;\nconst vec3 CB_CYAN_75 = vec3(16., 180., 180.) / 255.;\nconst vec3 CB_GREEN_75 = vec3(16., 180., 16.) / 255.;\nconst vec3 CB_MAGENTA_75 = vec3(180., 16., 180.) / 255.;\nconst vec3 CB_RED_75 = vec3(180., 16., 16.) / 255.;\nconst vec3 CB_BLUE_75 = vec3(16., 16., 180.) / 255.;\nconst vec3 CB_WHITE_100 = vec3(235., 235., 235.) / 255.;\nconst vec3 CB_YELLOW_100 = vec3(235., 235., 16.) / 255.;\nconst vec3 CB_CYAN_100 = vec3(16., 235., 235.) / 255.;\nconst vec3 CB_RED_100 = vec3(235., 16., 16.) / 255.;\nconst vec3 CB_BLUE_100 = vec3(16., 16., 235.) / 255.;\nconst vec3 CB_Q = vec3(72., 16., 118.) / 255.;\nconst vec3 CB_MI = vec3(16., 70., 106.) / 255.;\nconst vec3 CB_GRAY_15 = vec3(49.) / 255.;\nconst vec3 CB_BLACK_0 = vec3(16.) / 255.;\nconst vec3 CB_BLACK_2 = vec3(20.) / 255.;\nconst vec3 CB_BLACK_M2 = vec3(12.) / 255.;\nconst vec3 CB_BLACK_4 = vec3(25.) / 255.;\nconst vec3 CB_BLACK_M4 = vec3(7.) / 255.;\n\nvec3 cb_smpte_ecr_1_1978(in vec2 uv){\n    // [0, 1/4)\n    if(uv.y < 0.25){\n        float x = 84. * uv.x;\n\n        if(x < 15.) return CB_MI;\n        if(x < 30.) return CB_WHITE_100;\n        if(x < 45.) return CB_Q;\n        if(x < 60.) return CB_BLACK_0;\n        if(x < 64.) return CB_BLACK_M4;\n        if(x < 68.) return CB_BLACK_0;\n        if(x < 72.) return CB_BLACK_4;\n\n        return CB_BLACK_0;\n    }\n\n    // [1/4, 1/4 + 1/12)\n    if(uv.y < 0.33333333){\n        float x = 7. * uv.x;\n\n        if(x < 1.) return CB_BLUE_75;\n        if(x < 2.) return CB_BLACK_0;\n        if(x < 3.) return CB_MAGENTA_75;\n        if(x < 4.) return CB_BLACK_0;\n        if(x < 5.) return CB_CYAN_75;\n        if(x < 6.) return CB_BLACK_0;\n\n        return CB_WHITE_75;\n    }\n\n    // [1/4 + 1/12, 1)\n    {\n        float x = 7. * uv.x;\n\n        if(x < 1.) return CB_WHITE_75;\n        if(x < 2.) return CB_YELLOW_75;\n        if(x < 3.) return CB_CYAN_75;\n        if(x < 4.) return CB_GREEN_75;\n        if(x < 5.) return CB_MAGENTA_75;\n        if(x < 6.) return CB_RED_75;\n\n        return CB_BLUE_75;\n    }\n}\n\nvec3 cb_smpte_rp_219_2002_75(in vec2 uv){\n    float x = 56. * uv.x;\n\n    if(x <  7.) return CB_GRAY_40;\n    if(x < 13.) return CB_WHITE_75;\n    if(x < 19.) return CB_YELLOW_75;\n    if(x < 25.) return CB_CYAN_75;\n    if(x < 31.) return CB_GREEN_75;\n    if(x < 37.) return CB_MAGENTA_75;\n    if(x < 43.) return CB_RED_75;\n    if(x < 49.) return CB_BLUE_75;\n\n    return CB_GRAY_40;\n}\n\nvec3 cb_smpte_rp_219_2002(in vec2 uv){\n    // [0, 1/5)\n    if(uv.y < 0.2){\n        float x = 168. * uv.x;\n\n        if(x <  21.) return CB_GRAY_15;\n        if(x <  48.) return CB_BLACK_0;\n        if(x <  84.) return CB_WHITE_100;\n        if(x < 102.) return CB_BLACK_0;\n        if(x < 108.) return CB_BLACK_M2;\n        if(x < 114.) return CB_BLACK_0;\n        if(x < 120.) return CB_BLACK_2;\n        if(x < 126.) return CB_BLACK_0;\n        if(x < 132.) return CB_BLACK_4;\n        if(x < 147.) return CB_BLACK_0;\n\n        return CB_GRAY_15;\n    }\n\n    // [1/5, 3/10)\n    if(uv.y < 0.3){\n        float x = 56. * uv.x;\n\n        if(x <  7.) return CB_YELLOW_100;\n        if(x < 13.) return CB_Q;\n        if(x < 49.) return mix(CB_BLACK_0, CB_WHITE_100, (x - 13.) / 36.);\n\n        return CB_RED_100;\n    }\n\n    // [3/10, 4/10)\n    if(uv.y < 0.4){\n        float x = 56. * uv.x;\n\n        if(x <  7.) return CB_CYAN_100;\n        if(x < 13.) return CB_MI;\n        if(x < 49.) return CB_WHITE_75;\n\n        return CB_BLUE_100;\n    }\n\n    // [4/10, 1)\n    return cb_smpte_rp_219_2002_75(uv);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n#if (TEST_PATTERN == 0)\n#define ASPECT ASPECT_4_3\n#define SCALE(x) (x)\n#else\n#define ASPECT ASPECT_16_9\n#define SCALE(x) ((x) * (aspect < ASPECT_16_9 ? 0.75 : 1.))\n#endif\n\n    const float ASPECT_4_3 = 4. / 3.;\n    const float ASPECT_16_9 = 16. / 9.;\n\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float aspect = iResolution.x / iResolution.y;\n    float f = ASPECT / aspect;\n    float margin = 0.5 * (1. - f);\n    float p = uv.x - 0.5;\n    vec3 color;\n\n    if(abs(p) > SCALE(0.5 - margin)){\n        color = vec3(0.);\n    }else{\n        uv.x = p / f + 0.5;\n#if (TEST_PATTERN == 0)\n        color = cb_smpte_ecr_1_1978(uv);\n#elif (TEST_PATTERN == 1)\n        color = cb_smpte_rp_219_2002_75(uv);\n#else\n        color = cb_smpte_rp_219_2002(uv);\n#endif\n    }\n\n    fragColor = vec4(color, 1.);\n}\n","name":"Image","description":"","type":"image"}]}