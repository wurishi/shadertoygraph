{"ver":"0.1","info":{"id":"cdVcW1","date":"1700744901","viewed":47,"name":"Test231","username":"atkar","description":"test shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t)\n{\n    vec3 a = vec3(0.848, 0.500, 0.588);\n    vec3 b = vec3(0.718, 0.500, 0.500);\n    vec3 c = vec3(0.750, 1.000, 0.667);\n    vec3 d = vec3(-0.082, -0.042, 0.408);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;    \n    uv.x *= iResolution.x / iResolution.y;\n    vec2 uv0=uv;    \n    vec3 y = vec3(0.);    \n    \n    for(float x = 0.; x < 4.; x++){\n    \n    uv = fract(uv * 0.7)- 0.5;\n    float a = length(uv) - exp(-length(uv));\n    \n    vec3 col = palette(length(uv0) + iTime);\n\n    a = sin(a * 12. + iTime);    \n    a = abs(a);    \n    a = pow(0.1 / a, 1.5);\n   \n    y += col * a;  \n    }\n         \n    fragColor = vec4(y, 1.0);\n}","name":"Image","description":"","type":"image"}]}