{"ver":"0.1","info":{"id":"3ldczl","date":"1609723079","viewed":242,"name":"z Snowflake generator","username":"illus0r","description":"z Snowflake generator\nFor the snowflake chrome plugin by Mikhail Kalygin and Natalia Stepanova\nhttps://codepen.io/illus0r/pen/mdrxzVx","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rnd(float x) {return 2.*fract(54321.987 * sin(987.12345 * x))-1.;}\nvec2 p2d(vec2 polar) {\n    float alpha = polar.x;\n    float R = polar.y;\n    float x = sin(alpha) * R;\n    float y = cos(alpha) * R;\n    return vec2(x, y);\n}\nvec2 d2p(vec2 decart) {\n    float alpha = atan(decart.x, decart.y);\n    float R = length(decart);\n    return vec2(alpha, R);\n}\nvec2 snowflakeSymmetry(vec2 p, float rays){\n\tvec2 ar = d2p(p);\n\tfloat astep = 2. * 3.1415 / rays;\n\tfloat a = ar.x, r = ar.y;\n\ta = mod(a, astep);\n\ta -= astep / 2.;\n\ta = abs(a);\n\tp = p2d(vec2(a, r));\t\n\treturn p;\n}\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,-s,s,c);}\nfloat snowflake(vec2 uv, float id) {\n    uv /= 1.6;\n    for (float i = 0.; i < 3.; i++) {\n        uv *= 2.;\n        uv = snowflakeSymmetry(uv, 6.);\n        if (i == 0. && uv.y > 1.) return 0.;\n        uv *= rot(-rnd(id+i)*.3);\n        uv -= vec2(0.,.4+.1*rnd(id+i));\n    }\n    return step(.9,1.-uv.x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    float col = snowflake(uv, floor(iTime*4.));\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}