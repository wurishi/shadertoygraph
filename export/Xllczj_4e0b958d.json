{"ver":"0.1","info":{"id":"Xllczj","date":"1505597679","viewed":661,"name":"Time's Ticking","username":"Vovosunt","description":"Tick-Tock goes the Clock.\n\nFocused on idea only.\nNothing optimized, everything dirty as hell, don't even talk about the noise.","likes":35,"published":1,"flags":0,"usePreview":0,"tags":["2d","text","clock","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define smooth (2.0/iResolution.y)\n#define thick 0.5\n#define timeScale 1.0\n#define rt (iTime * timeScale)\n\n#define PI      3.14159265359\n\nfloat rand(vec3 v){\n    return fract(cos(dot(v,vec3(13.46543,67.1132,123.546123)))*43758.5453);\n}\n\nfloat rand(vec2 v){\n    return fract(sin(dot(v,vec2(5.11543,71.3132)))*43758.5453);\n}\n\nfloat getNum(vec2 uv, int x, float smoothT){\n        vec2 uvm = uv / vec2(16.0) + vec2(x,12.) * 1. / 16.;\n        float dist = texture( iChannel0, uvm).a;\n        float sm = smoothT;\n        return smoothstep(sm,-sm,dist - thick)+\n        \tsmoothstep(8. * sm,-3.0 * sm,dist - thick)*dist;\n}\n\nfloat getNum2(vec2 uv, int x, float smoothT){\n    if(x < 10){\n        return getNum(uv, x, smoothT);\n    } else{\n        if(uv.x < 0.5){\n            return getNum(vec2(fract(uv.x * 2.0) * 0.5  +0.22,uv.y),x/10,smoothT);\n        }else{\n            return getNum(vec2(fract(uv.x * 2.0) * 0.5 +0.28,uv.y),x%10,smoothT);\n        }\n        \n    }\n}\n\nfloat noise(vec2 uv){\n    vec2 off = vec2(1,0);\n    vec2 fuv = floor(uv);\n    \n    float tl = rand(fuv);\n    float tr = rand(fuv + off.xy);\n    float bl = rand(fuv + off.yx);\n    float br = rand(fuv + off.xx);\n    \n    vec2 fruv = fract(uv);\n    fruv = fruv * fruv * (2.0 - fruv);\n    \n    return mix(mix(tl,tr,fruv.x), mix(bl,br,fruv.x),fruv.y);\n}\n\nfloat octNoise(vec2 uv, int octaves){\n    float sum = 0.0;\n    float f = 1.0;\n    for (int i = 0; i < octaves; ++i){\n        sum += (noise(uv*f) - 0.5) * 1. /f;\n        f *= 2.0;\n    }\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - 0.5* iResolution.xy) / iResolution.y;\n    uv += octNoise(uv*1.6 + rt*0.1,2) * 0.1 * ( 0.5 + length(uv));\n    float a = (atan(uv.x,uv.y) + PI) /PI /2.;\n    float l = length(uv);\n    \n    float ll = a * 2.0 + pow(l,0.3) * 7.0;\n    float trueSm = smooth * 16.0 / ll;\n    float fll = floor(ll);\n    ll = fract(ll);\n    float cll = clamp((ll-0.46)*3.0,0.0,1.0);\n    float ra = a *24.0 - rt;\n        \n    float bgline = smoothstep(trueSm,-trueSm,abs(ll - 0.65)-0.35);\n    float bgline2 = smoothstep(trueSm,-trueSm,abs(ll - 0.6)-0.27);\n    float bgline3 = smoothstep(trueSm,-trueSm,abs(ll - 0.65)-0.3);\n    float bgwhite = smoothstep(trueSm,-trueSm,abs(ll - 0.6)-0.25);\n    float bgstrips = smoothstep(trueSm,-trueSm,abs(ll - 0.81)-0.03);\n    float bgstrips2 = smoothstep(trueSm,-trueSm,abs(ll - 0.81)-0.018);\n    float bgstrips3 = smoothstep(trueSm,-trueSm,abs(fract(ra * 5.0 + 0.5)-0.5)-0.45);\n    float bgstrips4 = smoothstep(trueSm,-trueSm,abs(fract(ra + 0.5)-0.5)-0.45);\n  \tfloat fresnel = smoothstep(0.2,-0.26,abs(ll - 0.8));\n\n    float fra = floor(ll*1.5) + \n        fract(a *3.0 - mix(floor(rt) - 3./12.,floor(rt)+ 1.- 3./12.,  pow(fract(rt),2.0)) * 3./12.);\n    \n    float arrow =abs(fra-0.5)*2.0 * (ll+0.25) * length(vec2(fra,ll+0.25)-0.5);\n    \n    float num = getNum2(vec2(clamp(fract(ra) *2. - 0.5,0.01,0.99),cll),\n                        int(mod(floor(ra),12.)) + 1,trueSm);\n    \n    float blick = abs(a-0.5)*2.0;\n    vec3 finCol = vec3(fract(a*30.0-l*40.0)*0.1);\n    finCol = mix(finCol, vec3(blick), bgline);\n    finCol = mix(finCol, vec3(1.0-blick), bgline2);\n    finCol = mix(finCol, vec3(1.0), bgwhite);\n    finCol = mix(finCol, vec3(0.0), bgstrips-bgstrips2 * min(bgstrips3,bgstrips4));\n    finCol = mix(finCol, vec3(0.0), num);\n    finCol = mix(finCol, vec3(0.0), fresnel +pow((1.0- l),8.0));\n    finCol = mix(finCol, vec3(smoothstep(0.003,-0.0,arrow)) * 0.5, smoothstep(0.002,0.0015,arrow));\n    \n\tfragColor = vec4(finCol,1.0);\n}\n","name":"Image","description":"","type":"image"}]}