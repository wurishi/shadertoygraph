{"ver":"0.1","info":{"id":"ftBczc","date":"1650002045","viewed":101,"name":"RGB Life","username":"Boogaloo","description":"Colored variant of Conway's Game of Life based on an implementation by Chronos.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["2d","simple","game","automata","life","reference","cellular","buffer","gameoflife","multipass","gol"],"hasliked":0,"parentid":"MtdXRn","parentname":"Introduction to Game of Life"},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 color = texture(iChannel0, uv);\n    \n    \n\tfragColor = vec4(color.x,color.y,color.z, 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    \n    vec3 color = vec3(0.0);\n\n    \n    vec3 neighbors = vec3(0.,0.,0.);\n    \n    for(float i = -1.0; i <= 1.0; i += 1.0)\n    {\n        for( float j = -1.0; j <= 1.0; j += 1.0)\n        {\n        \tvec2 offset = vec2(i, j) / iResolution.xy;\t\t \n        \tvec4 lookup = texture(iChannel0, uv + offset); \n        \tneighbors.x += lookup.x;\n            neighbors.y += lookup.y;\n            neighbors.z += lookup.z;\n        }\n    }\n\n   \n    vec4 cell = texture(iChannel0, uv);\n    \n    \n    \n    if(cell.x > 0.0) {\n        if(neighbors.x >= 3.0 && neighbors.x <= 4.0) {\n            color.x = 1.;\n        }\n    } else if(neighbors.y > 2.0 && neighbors.y < 4.0) {\n    \tcolor.x = 1.;\n    }\n    \n    if(cell.y > 0.0) {\n        if(neighbors.y >= 3.0 && neighbors.y <= 4.0) {\n            color.y = 1.;\n        }\n    } else if(neighbors.z > 2.0 && neighbors.z < 4.0) {\n    \tcolor.y = 1.;\n    }\n    \n    if(cell.z > 0.0) {\n        if(neighbors.z >= 3.0 && neighbors.z <= 4.0) {\n            color.z = 1.;\n        }\n    } else if(neighbors.x > 2.0 && neighbors.x < 4.0) {\n    \tcolor.z = 1.;\n    }\n\n    \n    if(iFrame < 10) { \n        color = vec3(round(texture(iChannel1, fragCoord.xy / iResolution.xx).x),round(texture(iChannel1, fragCoord.xy / iResolution.xx).y),round(texture(iChannel1, fragCoord.xy / iResolution.xx).z));\n    }\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}