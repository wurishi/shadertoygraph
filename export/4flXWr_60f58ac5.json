{"ver":"0.1","info":{"id":"4flXWr","date":"1705152500","viewed":90,"name":"vera molnar boxes","username":"rucksack","description":"Supposed to be in the style of Vera Moln√°r","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["genuary","genuary5","genuary2024","molnar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cube(vec2 uv, vec2 p, float s) {\n    return max(abs(uv.x) - p.x - s, abs(uv.y) - p.y - s);\n}\n\nfloat random(vec2 uv) {\n    return fract(sin(dot(uv, vec2(43.3333, 53.8123))) * 42348.234);\n}\n\nfloat random2(vec2 uv) {\n    return fract(sin(dot(uv, vec2(97.4654, 23.4854))) * 173535.973);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    \n    float scale = 4.*ceil(iResolution.y/200.);\n    \n    uv.x += iTime*.1;\n    uv *= scale;\n    \n    vec2 ij = vec2(floor(uv));\n    float r = random(ij);\n    float r2 = random2(ij);\n\n    uv = fract(uv) - .5;\n    \n    // Square shape\n    float d = max(abs(uv.x), abs(uv.y)) * (.5+(r+r2+.5)*.5);\n    \n    // Random periodic gradient\n    float g = sin((r+.3)*d*30. + r2*3.) + .5*sin(r2*d*20. + r*(1.-.9*d)*4.);\n    g = abs(.5*(g + 1.));\n\n    // To color\n    vec3 a = vec3(.9, .8, .9*(.5+g*.5));\n    vec3 b = vec3(.7, .9*(.5+g*.5), .5);\n    vec3 col =  g * mix(a, b, r2);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}