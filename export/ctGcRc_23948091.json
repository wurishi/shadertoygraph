{"ver":"0.1","info":{"id":"ctGcRc","date":"1700468300","viewed":115,"name":"Simple Marching Ants Selection","username":"FatalSleep","description":"Left-Click and drag with mouse to select. Basic selection box, e.g. marching ants.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["marching","ants","selection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WIDTH 1.0\n#define COUNT 16.0\n#define SPEED 4.0\n#define REVERSE false\n\n// Distance to Rectangle (rounded)\n//float sdBox(vec2 p, vec2 wh) {\n//    vec2 d = abs(p) - wh;\n//    return length(max(d,0.)) + min(max(d.x, d.y),0.);\n//}\n\n// Source: https://www.shadertoy.com/view/7l2Xzt\nfloat sdBox(vec2 position, vec2 halfSize) {\n    position = abs(position) - halfSize;\n    return max(position.x, position.y);\n}\n\n// Convert Screen Space to shifting diagonal lines.\nvec3 diagonals(vec2 pos, bool reverse) {\n    int w = 0;\n    float time = SPEED * 10.0 * ((reverse)?iTime:-iTime);\n    w = (int(pos.x - pos.y + time) & int(COUNT));\n    return vec3(w,w,w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Convert Screen Space to shifting diagonal lines.\n    vec3 col = diagonals(fragCoord, REVERSE);\n    \n    // Get the iMouse Box Positions.\n    vec4 m = vec4(iMouse.xy, abs(iMouse.zw));\n    vec2 rectMin = vec2(min(m.x, m.z), min(m.y, m.w));\n    vec2 rectMax = vec2(max(m.x, m.z), max(m.y, m.w));\n    \n    // Get Center of iMouse Box.\n    vec2 center = (rectMax + rectMin) * 0.5;\n    // Get Size of iMouse Box for sdBox().\n    vec2 boxlen = (rectMax - rectMin);\n    // Get Distance to iMouse Box.\n    float dist = abs(sdBox(fragCoord - center, boxlen * 0.5));\n    \n    // Black out Pixels outside distance to iMouse Box.\n    col *= (dist <= WIDTH)? 1.0 : 0.0;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}