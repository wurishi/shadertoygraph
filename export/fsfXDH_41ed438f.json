{"ver":"0.1","info":{"id":"fsfXDH","date":"1618535850","viewed":97,"name":"Pablo's scary cousin","username":"SnoopethDuckDuck","description":"e","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float taxi(vec2 v) { return abs(v.x) + abs(v.y); }\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat f (float x) { return 16. * x * x * (1.-x) * (1.-x);}\n\nfloat func(vec2 uv, float t)\n{\nvec2 dir = uv - .5;\nfloat b = f(2.5 * (1. + cos(t)));\nfloat d = b *  f(fract(3.5 * length(dir))) + (1.-b) * f(fract(3.5 * taxi(dir)));\nd *=8. + 5. * cos(0.5 * t);\nfloat theta = atan(dir.y,dir.x);\n\nfloat b2 = 0.5 * (1. + cos(0.313 * t));\n   return (1.-b2) * (1. - smoothstep(d,-0.9,f(0.3 + 0.05 * cos(0.5 * t))))\n   + b2 * step(d,0.3 + 0.05 * cos(0.5 * t));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y - vec2( 0.375,0.);\n     \n      float t2 = 0.1 * iTime;\nuv -= 0.5;\n    uv = 0.5 + vec2(uv.x * cos(t2) - uv.y * sin(t2),\n    uv.x * sin(t2) + uv.y *cos(t2));\n     float t = iTime + 0.05 * random(uv);//vec2(floor(396. * uv)));\n\nfloat b = 0.5 * (1. + cos(.13149 * t));\n//float p = 2. * 3.14159 / 3.;\nfloat col = func(uv,t + 0.115 + 0.015 * b);\nfloat col2 = func(uv,t);\nfloat col3 = func(uv,t - 0.115 - 0.015 * b);\n\n\n\n    // Output to screen\n    fragColor = vec4(col,col2,col3,1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}