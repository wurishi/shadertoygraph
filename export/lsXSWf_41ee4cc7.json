{"ver":"0.1","info":{"id":"lsXSWf","date":"1524226308","viewed":243,"name":"Egg","username":"Lanza","description":"I once had plans for thisâ€¦ Never took time to let it hatch.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rays","egg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"/* Just an egg */\n\n#define EPS \t0.001\n#define MAX_I \t50\n\nfloat egg(vec3 p, float r)\n{\n    p -= vec3(0.0, 0.3, 0.0);\n    return length(p) - r * 1.7 * cos(p.y + 1.36 );\n}\n\nfloat scene(vec3 p)\n{\n    return egg(p, 0.5);\n}\n\nfloat shade(vec3 n, vec3 rd)\n{\n\tvec3 light\t = vec3(2.0, -2.0, 5.0);\n    vec3 ld \t = normalize(light);\n    \n    float intensity = dot(n, -ld);\n    return intensity;\n}\n\n// Get normal of a point.\nvec3 normal( vec3 p )\n{\n    vec2 n = vec2( EPS, 0.0 );\n    return normalize( vec3 (\n        scene( p + n.xyy ) - scene( p - n.xyy ),\n        scene( p + n.yxy ) - scene( p - n.yxy ),\n        scene( p + n.yyx ) - scene( p - n.yyx )\n        )\n    );\n}\n\nvec3 march(vec3 ro, vec3 rd) {\n\t\n    float t = scene(ro);\n    \n    for(int i = 0; i < MAX_I; i++)\n    {\n    \tvec3 p\t= ro + rd * t;\n        float d\t= scene(p);\n        \n        t \t   += d;\n        \n        if( d < EPS )\n        {\n            float l = shade(normal(p), rd);\n            return vec3(1.0, 0.95, 0.95) * l * 0.7 + vec3(1.0, 0.8, 0.8) * 0.3;\n        }\n    }\n    \n    return vec3(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // coord system adjust.\n\tvec2 uv\t = (2. * fragCoord - iResolution.xy) / iResolution.x;\n    \n    vec3 cam = vec3(0.0, 0.0, -1.5);\n    vec3 ctg = vec3(0.0);\n    vec3 up  = vec3(0.0, -1.0, 0.0);\n    vec3 dir = normalize(ctg - cam);\n    vec3 right = normalize(cross(up, dir));\n    \n    up = normalize(cross(right, dir));\n    \n    vec3 rd = normalize(dir + uv.x * right + uv.y * up);\n    \n    // vignettage du fond vert.\n    vec3 bg  = vec3(0.1, 0.5, 0.3);\n\n    vec3 c = march(cam, rd);\n    \n    vec4 color;\n    \n    if( c != vec3(0.0) )\n\t\tcolor = vec4(c, 1.0);\n    else\n        color = vec4(bg ,1.0);\n    \n    fragColor = color * cos(length(uv + vec2(0.0, 0.3)));\n}","name":"Image","description":"","type":"image"}]}