{"ver":"0.1","info":{"id":"XfXXz2","date":"1715869942","viewed":39,"name":"Fork planarUV","username":"darkomtc","description":"just an example of fake 3d plane","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["projection","plane","perspective"],"hasliked":0,"parentid":"MclXDM","parentname":"planarUV example"},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy; // normalize XY \n    vec3 viewDir = vec3(uv - 0.5, 0.5); // move X and Y to center and add fake Z   \n    vec2 planarUV = viewDir.xz / abs(viewDir.y); // drop XZ into Y: XYZ -> XY  \n    //vec2 planarUV = viewDir.yz / abs(viewDir.x); // drop YZ into X: XYZ -> XY\n    \n    planarUV += vec2(0.0, iTime * 0.2); // changes Y depending on time, so it zooms in constantly   \n    \n    vec3 txtre = texture(iChannel0, planarUV).rgb; // puts texture into dropped XY  \n    \n    fragColor = vec4(txtre, 1.0);\n}","name":"Image","description":"","type":"image"}]}