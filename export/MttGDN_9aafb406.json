{"ver":"0.1","info":{"id":"MttGDN","date":"1469434952","viewed":278,"name":"010 box's correct sdf","username":"kakaxizhhgjh","description":"box's correct sdf","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sdf","box"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line_segment(vec2 p, vec2 a, vec2 b) {\n\tvec2 ab = b - a, ap = p - a;\n    return length(ap - ab * clamp(dot(ab, ap) / dot(ab, ab), 0.0, 1.0));\n}\n\nfloat box(vec2 p) {\n    vec2 d = abs(p) - 0.3;\n    return min(max(d.x, d.y),0.0) + length(max(d,0.0));\n}\n\nfloat circle(vec2 p, float r) {\n\treturn length(p) - r;\n}\n\nfloat plot_edge(float d) {\n\treturn smoothstep(3.0 / iResolution.y, 0.0, abs(d));\n}\n\nfloat plot_solid(float d) {\n\treturn smoothstep(3.0 / iResolution.y, 0.0, max(0.0, d));\n}\n\nfloat plot_solid_with_blooming(float d) {\n\treturn 1.0 - clamp(d, 0.0, 1.0);\n}\n\nvec3 plot_contour(float d) {\n\tvec3 bg = mix(vec3(0.3, 0.8, 1.0), vec3(1.0, 0.8, 0.6), plot_solid_with_blooming(d));\n    bg = mix(bg, vec3(1.0, 0.44, 0.33), plot_solid(d));\n    bg = mix(bg, vec3(0.0), plot_edge(d));\n    bg -= vec3(0.1) * plot_edge(mod(d + 0.025, 0.05) - 0.025);\n    bg -= vec3(0.3) * plot_edge(mod(d + 0.1, 0.2) - 0.1);\n    return bg;\n}\n\nvec3 plot_trace(vec2 p) {\n\tvec2 ro = (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 rd = normalize(vec2(0.2, 0.4) - ro);\n    vec2 o = ro;\n    float bg = 0.0;\n    for(int i = 0; i < 20; ++i) {\n    \tfloat t = box(ro);\n        bg += pow(1.0 - bg, 3.0) * 0.8 * plot_solid(circle(p - ro, 0.015));\n        bg += pow(1.0 - bg, 3.0) * 0.2 * plot_solid(circle(p - ro, abs(t)));\n        bg += pow(1.0 - bg, 3.0) * 0.8 * plot_edge(circle(p - ro,abs(t)));\n        ro += rd * t;\n        if(abs(t) < 0.01) break;\n    }\n    bg += pow(1.0 - bg, 2.2) * 0.4 * plot_edge(line_segment(p, o, ro));\n    return vec3(bg);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    fragColor = vec4(plot_contour(box(uv)) - plot_trace(uv), 1.0);\n}","name":"Image","description":"","type":"image"}]}