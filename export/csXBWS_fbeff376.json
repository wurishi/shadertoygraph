{"ver":"0.1","info":{"id":"csXBWS","date":"1689093971","viewed":57,"name":"Newton fractal, Julia sets","username":"SnackEater","description":"there are hidden Julia sets in newton fractals ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define r1 vec2(1.7,0) + .08 * vec2(cos(iTime),sin(iTime))\n#define R2 vec2(-.5,-.5)\n#define r3 vec2(-.5,.5)\nvec2 Mul(vec2 a,vec2 b){\n    float theta = atan(a.y,a.x);\n    float r = length(a);\n    float theta2 = atan(b.y,b.x);\n    float r2 = length(b);\n    theta += theta2;\n    r *= r2;\n    return r * vec2(cos(theta),sin(theta));\n}\nvec2 Div(vec2 a,vec2 b){\n    float theta = atan(a.y,a.x);\n    float r = length(a);\n    float theta2 = atan(b.y,b.x);\n    float r2 = length(b);\n    theta -= theta2;\n    r /= r2;\n    return r * vec2(cos(theta),sin(theta));\n}\nvec2 F(vec2 z){\n    \n    \n    z = Mul(Mul(z - r1,z - R2),(z-r3));\n    return z;\n   \n}\nvec2 FPrime(vec2 z){\n    z = 3. * Mul(z,z) - vec2(1,0);\n    return z;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n     vec3 col;\n     \n     uv *= 2.;\n   \n    if(length(uv-r1)<0.1){\n       col += 1.;\n    }\n    if(length(uv-R2)<0.1){\n        col += 1.;\n    }\n    if(length(uv-r3)<0.1){\n        col += 1.;\n    }\n    for(float i = 0.;i<100.;i++){\n        uv -= Div(F(uv),FPrime(uv));\n       \n        if(length(uv) <.1){\n         col.gb += i * 0.001;\n        }\n \n    }\n   \n    if(length(uv-r1)<0.1){\n        col.r = 1.;\n    }\n    if(length(uv-R2)<0.1){\n        col.g = 1.;\n    }\n    if(length(uv - r3)<0.1){\n        col.b = 1.;\n    }\n    \n\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}