{"ver":"0.1","info":{"id":"wlB3Wc","date":"1561347847","viewed":168,"name":"IFS with scaling","username":"edo_m18","description":"IFS with scaling","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["ifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define repeat(p, span) mod(p, span) - (0.5 * span)\n\nconst float pi = acos(-1.);\nconst float pi2= pi * 2.;\n\nmat2 rot(float a)\n{\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\nmat3 camera(vec3 ro, vec3 ta)\n{\n    vec3 up = vec3(0, 1, 0);\n    vec3 cw = normalize(ta - ro);\n    vec3 cu = normalize(cross(cw, up));\n    vec3 cv = normalize(cross(cu, cw));\n    return mat3(cu, cv, cw);\n}\n\nfloat sdBox(vec3 p, vec3 b)\n{\n    return length(max(abs(p) - b, 0.0));\n}\n\nfloat map(vec3 p)\n{\n    vec3 z = p;\n    \n    float scale = 2.0;\n    float sum = scale;\n    float d = 1e5;\n    \n    float time = abs(sin(iTime * 0.5) * 4.0);\n    float s = min(floor(time), 3.0) + 1.0;\n    \n    for (float i = 0.; i < s; i++)\n    {\n        float td = sdBox(z, vec3(0.5)) / sum;\n        \n        z = abs(z) - vec3(0, 2.0, 0);\n        d = min(td, d);\n        \n        z.xy *= rot(pi * 0.25);\n        z *= scale;\n        sum *= scale;\n    }\n    \n    return d;\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(0.0001, 0.0);\n    float d = map(p);\n    vec3 n = d - vec3(\n        map(p - e.xyy),\n        map(p - e.yxy),\n        map(p - e.yyx));\n    return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n\n\tvec3 col = vec3(0);\n\n    float dist = 5.0;\n    vec3 ro = vec3(cos(iTime) * dist, 1, sin(iTime) * dist);\n    vec3 ta = vec3(0, 0, 0);\n    \n    vec3 ray = camera(ro, ta) * normalize(vec3(uv, 1.8));\n    \n    vec3 p = ro;\n    float d = 0., t = 0.;\n    \n    for (int i = 0; i < 64; i++)\n    {\n        d = map(p);\n        if (d < 0.01) break;\n        p += ray * d;\n    }\n    \n    if (d < 0.01)\n    {\n        vec3 n = normal(p) * 0.5 + 0.5;\n        col = n;\n    }\n    else\n    {\n        col = vec3(0.5, 0.8, 1.5) * abs(uv.y * 0.5 - 1.0) ;\n    }\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}