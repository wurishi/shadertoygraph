{"ver":"0.1","info":{"id":"X3dSWs","date":"1719796109","viewed":57,"name":"lights colors","username":"laside777","description":"moving lights ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["movement"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 calcLight(vec4 color, vec2 pos, vec2 coord) {\n    return color * 0.04 / distance(pos / iResolution.y, coord / iResolution.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 texColor = texture(iChannel0, uv); // Obtener el color de textura de iChannel0\n\n    fragColor = vec4(0.0);\n\n    // Suma de las contribuciones de luz para cada llamada a calcLight\n    fragColor += calcLight(\n        vec4(abs(cos(iTime)), abs(sin(iTime)), abs(sin(iTime/2.0)), 0.5),\n        vec2(abs(sin(iTime/1.3)) * iResolution.x, 200.0 + 10.0 * sin(iTime*12.0)),\n        fragCoord\n    );\n    \n    fragColor += calcLight(\n        vec4(abs(cos(iTime)), abs(sin(iTime)), 0.0, 0.5),\n        vec2(200.0 + 15.0 * sin(iTime*6.0), abs(sin(iTime*3.4)) * iResolution.y),\n        fragCoord\n    );\n\n    // Continuar agregando las llamadas restantes a calcLight...\n\n    // Mezcla con texColor de iChannel0\n    fragColor *= texColor;\n\n    // Aplicar efectos adicionales o ajustes según sea necesario aquí\n}","name":"Image","description":"","type":"image"}]}