{"ver":"0.1","info":{"id":"Dls3RS","date":"1671947180","viewed":261,"name":"SDF Writer - Distance 2D","username":"MysteryPancake","description":"Click and drag to draw :) RIP interior distance","likes":13,"published":3,"flags":32,"usePreview":0,"tags":["2d","distancefield","sdf","line","circle","distance","sketch","drawer","drawer","sketcher","drawable","writer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    float d = texelFetch(iChannel0, ivec2(fragCoord), 0).x;\n    \n\t// Coloring, ripped from Inigo Quilez\n\tvec3 col = vec3(1.0) - sign(d) * vec3(0.1, 0.4, 0.7);\n\tcol *= 1.0 - exp(-6.0 * abs(d));\n\tcol *= 0.8 + 0.2 * cos(120.0 * d);\n\tcol = mix(col, vec3(1.0), 1.0 - smoothstep(0.0, 0.015, abs(d)));\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Larger brush sizes are OK, but have wrong interior distances\nconst float brushSize = 0.0;\n\n// From https://iquilezles.org/articles/distfunctions2d/\nfloat line(vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * h);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    // Initialize with invalid blank SDF\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    if (iFrame < 1) {\n        fragColor.x = length(p) + 999.9;\n        return;\n    }\n    \n    // Store previous mouse position (thanks Envy24 for improving)\n    vec2 m = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n    fragColor.yzw = vec3(m, iMouse.z > 0.0);\n    \n    // Read previous SDF\n    vec4 data = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    fragColor.x = data.x;\n    if (iMouse.z > 0.0) {\n        // Draw line between previous and current mouse position\n        float d = line(p, data.w > 0.0 ? data.yz : m, m);\n        fragColor.x = min(fragColor.x, d - brushSize);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}