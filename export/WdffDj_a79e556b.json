{"ver":"0.1","info":{"id":"WdffDj","date":"1589042223","viewed":505,"name":"Audio Glitch Blobs","username":"itgaz","description":"Playing around making an audio visualiser thing","likes":3,"published":3,"flags":4,"usePreview":0,"tags":["audio","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotate(vec2 v, float a, vec2 origin) {\n    v = v - origin;\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn (m * v) + origin;\n}\n\nfloat circleDistance( in vec2 origin, float r, in vec2 p ) {\n  float dis = distance(origin, p);\n  return dis < r ? 1.0 : dis;\n}\n\nbool circle( in vec2 origin, float r, in vec2 p ) {\n  return distance(origin, p) < r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // read frequency info (for le bass)\n    vec4 bassFFT1 = texture( iChannel0, vec2(0.05, 0.25) );\n    vec4 bassFFT2 = texture( iChannel0, vec2(0.10, 0.25) );\n    vec4 bassFFT3 = texture( iChannel0, vec2(0.15 , 0.25) );\n    \n\t// Mirror\n    uv = uv.x > 0.5 ? vec2(1.0 - uv.x, uv.y) : uv.xy;\n    \n    // Rotate around the center\n    uv = rotate(uv,(2.0 * sin(iTime * 0.5)) + (bassFFT1.x), vec2(0.0, 0.0));\n    \n    // Mirror again <3\n    uv = uv.y > 0.5 ? vec2(uv.x, 1.0 - uv.y) : uv.xy;\n    \n    // Zoom/Repeat effect\n    uv = fract(uv + cos(iTime / 8.0) + ((bassFFT2.x * bassFFT1.x) / 2.0));\n    \n    // read frequency data from texture\n    vec4 fft = texture( iChannel0, vec2(uv.x, uv.y) );\n    \n    vec3 targetColour = vec3(fft.x * sin(sqrt(uv.y)), fft.x * cos(iTime), fft.x * sin(iTime * 4.0));\n    \n    vec3 baseColour = vec3(1.0) - targetColour; //vec3(0.0, 0.0, 0.0);\n    \n    vec3 col = mix(baseColour, targetColour, sqrt(uv.y));\n    \n    float stencil = circleDistance( vec2(0.3, 0.3), 0.1 * bassFFT2.x + fft.x * 0.1, uv.xy ) +\n                    circleDistance( vec2(0.7, 0.3), 0.1 * bassFFT2.x + fft.x * 0.1, uv.xy ) +\n        \t\t\tcircleDistance( vec2(0.3, 0.7), 0.1 * bassFFT2.x + fft.x * 0.1, uv.xy ) +\n        \t\t\tcircleDistance( vec2(0.7, 0.7), 0.1 * bassFFT2.x + fft.x * 0.1, uv.xy )\n        \t\t\t/ 4.0;\n    \n    vec3 backgroundColour = vec3(0.0, 0.0, 0.0);\n    // vec3 backgroundColour = vec3(0.8) - targetColour;\n    col = mix(backgroundColour, col, stencil);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n \n","name":"Image","description":"","type":"image"}]}