{"ver":"0.1","info":{"id":"wlfSz2","date":"1563544224","viewed":318,"name":"factor decomposition","username":"FabriceNeyret2","description":"shows the number of factors in decomposition. bottom-left=0, then scan to right then up.\nblack: 1 (prime)\nred: 2,   yellow: 3,   green: 4,   cyan: 5,   blue: 6,   violet: 7,   white/blink: > 7\nDeep ones are rare: most whites =multiples of 16","likes":6,"published":3,"flags":32,"usePreview":0,"tags":["primes","decomposition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// I finally don't use Buf A (procedural construction of primes)\nint primes[] = int[]( 2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,\n               127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,\n               283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,\n               467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,\n               661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,\n               877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,\n               1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,\n               1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,\n               1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,\n               1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,\n               1987,1993,1997,1999);\n\n#define SCALE 4\n#define isqrt(i) int(sqrt(float(i)))\n#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) ) // https://www.shadertoy.com/view/ll2cDc\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    ivec2 I = ivec2(U)/SCALE;\n    int i = I.x + int(iResolution.x)/SCALE*I.y, c=0, p,\n        M = isqrt(i);\n    O = vec4(0); if (i<4) return;\n    \n    for (int n=0; n < primes.length(); n++) {\n        p = primes[n]; if (p>M) break;\n        if (i%p==0) c++, i/=p, M = isqrt(i), n--; // n-- for multiple factors\n    }      // NB: not counting the last factor in c.\n // c=I.x;                                        // test color chart \n // O = vec4( fract(iTime/4.*float(c)) < .5 );    // visu by blink speed\n    O =   c==0 ? vec4(0)\n        : c>6  ? vec4(fract(iTime)<.5)\n        :        hue(float(c-1)/6.3);             // *0. to show only > 6\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// prepare a table of primes\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if (iFrame==0) {\n        O = vec4(1,0,0,0);\n        ivec2 I = ivec2(U);\n        int i = I.x + int(iResolution.x)*I.y;\n        if (i>4000) return;                    // security limit\n        for (int n=2; n <= int(sqrt(float(i))); n++)\n            if (i/n*n==i) { O.x=0.; return; }\n    }\n    else O = texelFetch(iChannel0,ivec2(U),0);\n}","name":"Buffer A","description":"","type":"buffer"}]}