{"ver":"0.1","info":{"id":"llscDH","date":"1504879955","viewed":79,"name":"whCheckerboard","username":"walth23","description":"A simple 2d checkerboard shader with scalable input variables. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","assignment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 setCheckerboard(float row, float column, vec2 uv)\n{\n    vec4 checkerboard = vec4(1.0, 0.5, 1.0, 1.0); //default purple\t  \n    vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\n   \n    float xIndex = mod(row*uv.x, 2.0);\n    float yIndex = mod(column*uv.y, 2.0);\n   \n    if(xIndex > 1.0 ^^ yIndex > 1.0)\n     \tcheckerboard = white;   \n \telse\n     \tcheckerboard = black;   \n    \n    return checkerboard;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy; //normalization\n    float aspectRatio = iResolution.y / iResolution.x;\n   \tuv.y *= aspectRatio; //set aspect ratio\n    \n    float row = 10.0, column = 10.0;\n    vec4 checkerboard;\n    \n    checkerboard = setCheckerboard(row, column, uv);\n    \n    fragColor = checkerboard;\n}\n\n//Help recieved from Bahbar on StackOverflow @ http://bit.ly/2w868dz  \n//XOR reference http://www.cplusplus.com/doc/boolean/ ","name":"Image","description":"","type":"image"}]}