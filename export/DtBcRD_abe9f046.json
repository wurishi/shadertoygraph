{"ver":"0.1","info":{"id":"DtBcRD","date":"1691508128","viewed":215,"name":"Black & White smoke","username":"motus_art","description":"Modified water turbulence effect shader originally by joltz0r.\nAlso see David Hoskins's implementation https://www.shadertoy.com/view/MdlXz8","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["smoke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Modified water turbulence effect shader originally by joltz0r\n// Also see David Hoskins's implementation https://www.shadertoy.com/view/MdlXz8\n#define TAU 6.28318530718\n#define MAX_ITER 5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float time = iTime * .125 + 23.0;\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 p = mod(uv*TAU, TAU) - 213.0;\n    vec2 i = vec2(p);\n    float c = 1.0;\n    float inten = .005;\n\n    for (int n = 0; n < MAX_ITER; n++) {\n        float t = time * (1.0 - (3.5 / float(n + 1)));\n        i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n        c += 1.0 / length(vec2(p.x / (sin(i.x + t) / inten), p.y / (cos(i.y + t) / inten)));\n    }\n    c /= float(MAX_ITER);\n    c = 1.17 - pow(c, 1.4);\n    vec3 colour = vec3(pow(abs(c), 10.0));\n    colour *= 0.75;\n    colour = clamp(colour + vec3(0.095), 0.0, 1.0);\n\n    fragColor = vec4(colour, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}