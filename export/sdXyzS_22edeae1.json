{"ver":"0.1","info":{"id":"sdXyzS","date":"1642258614","viewed":58,"name":"Mouse Controlled Time Ferret","username":"d3v_null","description":"Original here: https://www.shadertoy.com/view/ssdSDN \nThanks to https://www.shadertoy.com/user/ollj for the idea to use the mouse","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["timeferrets"],"hasliked":0,"parentid":"ssdSDN","parentname":"TIME FERRETS"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define tau 6.283185307\n#define pi tau/2.\n#define sharp 0\n#define arms 2.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float m = max(iResolution.x, iResolution.y);\n    vec2 uv = 0.5 * (fragCoord.xy - (0.5 * iResolution.xy)) / m;\n    // uv = uv * 2.0 - vec2(1.0);\n    \n    // rt is (r, Î¸) but both normalized [0,1]\n    vec2 rt = vec2(length(uv),atan(uv.y, uv.x)/tau + 0.5);\n    // float a = 10.0 * cos(iTime/2.);\n    // float b = iTime/3.;\n    // float c = sin(iTime);\n    \n    // for mouse input, thanks https://www.shadertoy.com/user/ollj\n   // float a = 10.0 * cos(iMouse.x*3.14/iResolution.x);\n    float a = 10.*((iMouse.x/iResolution.x)*2.-1.);\n    float b = iTime/3.;\n    float c = iMouse.y*2./iResolution.y;\n    \n    \n    float d = mod((4.0 * rt.y) + rt.x * a + c, 2.0);\n#if sharp\n    if (d < 0.5) {\n        d = 0.;\n    } else {\n        d = 1.;\n    }\n#endif\n    fragColor = vec4(\n        0.5 + 0.5 * sin(d * pi) , \n        0., \n        0.5 + 0.5 * sin((2.-d) * pi), \n        1.\n    );\n}","name":"Image","description":"","type":"image"}]}