{"ver":"0.1","info":{"id":"4tSSDh","date":"1443064869","viewed":2731,"name":"2D Wave interference","username":"rory618","description":"2D linear sin waves added together at different angles, some music to match at 128 bpm, double click the pause/play button until the music is synced up https://www.youtube.com/watch?v=_9IBbMW2o_o https://www.youtube.com/watch?v=kGt6bfaI1y8","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#define M_PI 3.1415926535897932384626433832795\n\nconst int waves = 40; //LAGGING? LOWER THIS VALUE TO LIKE 40 OR SOMETHING\nconst float wl = 15.0;\nconst float rs = 0.002;\nconst float speed = -0.01;\nconst float twist = 0.1;\nconst float bpm = 128.0 / 2.0;\n\n\nfloat saw(float s){\n    return mod(s,1.0);\n}\n\nfloat tri(float s){\n    return asin(sin(s));\n}\n\nfloat sqr(float s){\n    return sin(s)/abs(sin(s));\n}\n\nfloat wave( float angle, float phase, vec2 pos, float wavelength) {\n\t//if ( abs(2.0*M_PI/wavelength*(pos.x * cos(angle) - pos.y * sin(angle))) < sqrt(sqrt(.01+pos.y*pos.y + pos.x*pos.x))) {\n\t//\treturn -1000.0;\t\n\t//}\n\treturn .5+.5*sin(2.0*M_PI/wavelength*(phase + abs(pos.x * cos(angle) - pos.y * sin(angle))));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 center = vec2(.5*iResolution.x/iResolution.y,.5);\n\t\n\tvec2 position = ( fragCoord.xy / iResolution.xy );\n\tposition -=  vec2(.5, .5);\n\t//position +=  -1.0 * iMouse.xy / iResolution.xy;\n\tposition.x *= iResolution.x/iResolution.y;\n\tfloat color = 0.0;\n    \n    position *= vec2(2.0, 2.0);\n    \n    float t = 15.0*(iTime*100.0 - mod(iTime,60.0/bpm) * 99.0);\n    \n    float ex = 1.5 + .5*sin(.1*t);\n\tfor (int i = 1; i < waves; i+=1) {\n\t\tcolor += wave(twist * float(i) + rs * t * float(i), speed * t * float(1), position, wl/(pow(float(i),2.0)))/pow(float(i),1.0);\n\t}\n\t//if(color < 0.0) {\n\t//\tcolor /= 3.0;\t\n\t//}\n\t\n    color = pow(2.0,color);\n    t = t*.1;\n    \n    fragColor = vec4(.5+.5*sin(color+4.0*sin(t*.1)),\n                     .5+.5*sin(color+3.0*sin(t*.11)),\n                     .5+.5*sin(color+2.0*sin(t*.111)),\n                     1.0);\n    \n\t//fragColor = vec4( vec3(sqrt(.6*sin(color*1.1)*sin(t/2.0) + .4*sin(color*1.2)*sin(t/7.0)), \n\t//\t\t\t  sqrt(.6*sin(color*1.3)*sin(t/3.0) + .4*sin(color*1.4)*sin(t/11.0)), \n\t//\t\t\t  sqrt(.6*sin(color*1.5)*sin(t/5.0) + .4*sin(color*1.6)*sin(t/13.0) )), 1.0 );\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}