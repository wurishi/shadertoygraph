{"ver":"0.1","info":{"id":"XlVczG","date":"1536791860","viewed":71,"name":"Functional Checkerboard Shader","username":"cjramsden","description":"A simple checkerboard shader, written by Connor Ramsden for EGP-200-03, Intro to Modern Graphics Programming","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\t- All code written by me, Connor Ramsden (Updated Last: September 12, 2018)\n\t- Utilizing modulus functionality taught in our September 12th class\n\t- Creates a black 'background' and overlays white boxes in rows and columns\n*/\n\n// Constant floats for createBoard(), allows for adjustment of board order\nconst vec4 BLACK_COL = vec4(0.0,0.0,0.0,1.0);\nconst vec4 WHITE_COL = vec4(1.0,1.0,1.0,1.0);\n\n// Allows for adjustment of # of Columns\nfloat numColumn = 10.0;\n\n// Allows for adjustment of # of Rows\nfloat numRow = 10.0;\n\n/*\nConstant float for stripeX and stripeY, below 2.0 and its only a single color\nAbove 2.0 and it no longer looks like a checkerboard\n*/\nconst float MOD_BY = 2.0;\n\n// Returns a vec4, takes two float parameters\nvec4 createBoard(float x, float y)\n{\n    vec4 outColor; // the color to be returned\n   \n    \n    if(x == 0.0 && y > 0.0) // Creates columns of white boxes\n    {\n        outColor = WHITE_COL;\n    }\n    else if(x > 0.0 && y == 0.0) // Creates rows of white boxes\n    {\n        outColor = WHITE_COL;\n    }\n    else // Creates a general \"black background\" to overlay white boxes on\n    {\n        outColor = BLACK_COL;\n    }\n    // Returns a vec4 for fragColor to interpret in mainImage()\n    return outColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // gives us normalized coordinates for our board\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // first float for createBoard(), controls rows for the CheckerBoard\n    float stripeX = mod(floor(uv.x * numRow), MOD_BY); \n    \n    // second float for createBoard(), controls columns for the CheckerBoard\n    float stripeY = mod(floor(uv.y * numColumn), MOD_BY);\n    \n    // Output to screen, taking the vec4 that createBoard() gives us\n    fragColor = createBoard(stripeX, stripeY);\n}","name":"Image","description":"","type":"image"}]}