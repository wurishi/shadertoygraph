{"ver":"0.1","info":{"id":"lccGWX","date":"1712179616","viewed":122,"name":"NotSoGreeeen - Solar System","username":"NotSoGreeeen","description":"While working my model of a sphere, I went on a side tangent to create a quick solar system.\n\nSoon I will post a new sphere using this model.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["circles","beginner","solarsystem"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 planet(vec2 uv, float offset, float speed, float dist, vec3 color) {\n    return vec3(smoothstep(.89, .8, length(vec2(uv.x + sin((iTime + offset) * speed) * dist, uv.y + cos((iTime + offset) * speed) * dist)))) * color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    uv *= 25.;\n    \n    // Time varying pixel color\n    vec3 col = vec3(1.6);\n    col += planet(uv, .7, 1.2, 6., vec3(.7, 1.5, .7));\n    col += planet(uv, 3.1, 1., 8.5, vec3(1.7, 2.5, 2.7));\n    col += planet(uv, .4, .5, 11., vec3(4.7, 2.5, 1.7));\n    col += planet(uv, 1.5, .7, 14., vec3(2.7, 1.5, 5.7));\n    col += planet(uv / 2., 5.4, 1.387, 8.5, vec3(4., 2.8, 2.));\n    col += planet(uv / 1.4, 2.4, .92, 14.57, vec3(1., 10., 1.));\n    col += planet(uv * 1.5, 1.87, 2., 37.45, vec3(1., 1., 4.8));\n    col /= vec3(1.15, 1.15, 1.2);\n    col /= vec3(length(uv.xy));\n    col = pow(col, vec3(2.));\n    col = pow(col, vec3(0.554545));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}