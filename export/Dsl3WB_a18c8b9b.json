{"ver":"0.1","info":{"id":"Dsl3WB","date":"1666786618","viewed":166,"name":"Lyapunov's fractal","username":"fuvesib","description":"Lyapunov's Fractal inspired by: https://www.youtube.com/watch?v=yGwy2WyQCQE&ab_channel=Desdenova\nThe logistic map function changed.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","lyapunov"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Created by fuvesib 2022\n//Inspired by: https://www.youtube.com/watch?v=yGwy2WyQCQE&ab_channel=Desdenova\n//Licens Creative Commons Attribution-NonCommercial-ShareAlike\n\n#define N 100\n#define S 8\n#define PI 3.1415926538\n\nint s[] = int[S](0,0,0,1,0,1,1,1);\n\n//Function\nfloat fcn(float x, float r, float c)\n{\n    float y = c+r*sin(x)+sin(c*0.0314)*r*cos(x);\n    return y;\n}\n\n//Function derivate\nfloat fcnd(float x, float r, float c)\n{\n    float y = r*cos(x)-sin(c*0.0314)*r*sin(x);\n    return y;\n}\n\nfloat Stability(vec2 a)\n{\n    float c = 0.5*iTime+1.373;\n    \n    float x = 0.5;\n    float sum = 0.0;\n    for(int i=0; i<N; i++)\n    {\n        for(int j=0; j<S; j++)\n        {\n            float r = a.x*float(s[j])+a.y*float(1-s[j]);\n            sum += log(abs(fcnd(x,r,c)));\n            x = fcn(x,r,c);\n        }\n    }\n    return sum/float(N*S);\n}\n\nvec3 ColorGrad(float t)\n{\n    //t = t*2.6-0.8;\n    return 0.5 + 0.5*sin( vec3(0.0,0.4,0.7) + 2.5*t );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5,0.5);\n\tuv.x *= iResolution.x / iResolution.y;\n\n    uv *= 2.0*(0.5*sin(iTime)+0.5)+2.0;\n    \n    //From cartesion to polar\n    float r=length(uv);\n    float fi=(atan(uv.y, uv.x));\n    uv = vec2(2.0*r,sin(3.0*fi));\n\n    float t = Stability(uv);\n    #if 1\n        t += Stability(uv+vec2(0.1,0.9));\n        t += Stability(uv-vec2(0.1,0.9));\n        t *= 0.333;\n    #endif\n    \n    t = abs(t);\n    vec3 col = ColorGrad(t);\n\tcol = pow(col, vec3(1.0 / 2.2));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}