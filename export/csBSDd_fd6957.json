{"ver":"0.1","info":{"id":"csBSDd","date":"1671064300","viewed":43,"name":"Ray Marching visualization","username":"thom_bahm","description":"WIP, Trying to visualize how Ray Marching works in 2D. Not marching along the ray the correct distance for each iter, assuming that the pos value passed in to circleSDF needs to be different. If anyone has a fix, Any advice is welcome!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","ray","marching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Ray marching visualization\nfloat circleSDF (vec2 p, vec3 circle) {\n    return length(p.xy-circle.xy)-circle.z;\n}\n\nfloat circleSDF(vec2 p) {\n    return length(p.xy);\n}\n\nfloat sceneSDF (vec2 p) {\n    vec3 c1 = vec3(-0.6, 0.35, 0.4);\n    vec3 c2 = vec3(-0.5, -0.45, 0.3);\n    vec3 c3 = vec3(0.5, 0.0, 0.2);\n    float circleMin = min(circleSDF(p,c1), circleSDF(p,c2));\n    return min(circleSDF(p,c3),circleMin);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\n#define MAX_DIST 100.0\n#define STEPS 30\nfloat rayMarch (vec2 p, vec4 m) {\n    float scene = sceneSDF(p);\n    vec2 origin = vec2(0.9, 0.5);//origin at upper right side of screen    \n    vec2 dir = normalize(vec2(-1.0,-sin(iTime/2.0)*3.0));\n    float depth = 0.0;\n    \n    for (int i = 0; i < STEPS; i++) {\n        vec2 pos = origin + depth * dir;\n        float sceneDist = sceneSDF(pos);\n        depth += sceneDist;\n        float sdfCircle = circleSDF(p, vec3(pos,sceneDist));\n        scene = min(scene, sdfCircle);\n        if (depth > MAX_DIST) break;\n    }\n    return scene;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec4 m = iMouse / iResolution.x;\n\n\n    float dist = rayMarch(uv, m);\n    // create disk(s) based on the distance function\n    vec3 scene = (dist>0.0 || dist < -0.01) ? vec3(0.02) : vec3(0.90);\n    \n    fragColor = vec4(scene,1.0);\n}","name":"Image","description":"","type":"image"}]}