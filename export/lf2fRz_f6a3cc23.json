{"ver":"0.1","info":{"id":"lf2fRz","date":"1724602541","viewed":46,"name":"glitch_cy","username":"cyj1116","description":"try\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["glitch2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define TIMESCALE 0.25\n#define TILES 8\n#define COLOR 0.7, 1.6, 2.8\n\nfloat sat( float t ) {\n\treturn clamp( t, 0.0, 1.0 );\n}\n\nvec2 sat( vec2 t ) {\n\treturn clamp( t, 0.0, 1.0 );\n}\n\n//remaps inteval [a;b] to [0;1]\nfloat remap  ( float t, float a, float b ) {\n\treturn sat( (t - a) / (b - a) );\n}\n\n//note: /\\ t=[0;0.5;1], y=[0;1;0]\nfloat linterp( float t ) {\n\treturn sat( 1.0 - abs( 8.0*t - 1.0 ) );\n}\n\nvec3 spectrum_offset( float t ) {\n\tvec3 ret;\n\tfloat lo = step(t,0.5);\n\tfloat hi = 1.0-lo;\n\tfloat w = linterp( remap( t, 1.0/6.0, 5.0/6.0 ) );\n\tfloat neg_w = 1.0-w;\n\tret = vec3(lo,1.0,hi) * vec3(neg_w, w, neg_w);\n\treturn pow( ret, vec3(1.0/2.2) );\n}\n\n//note: [0;1]\nfloat rand1( vec2 n ) {\n  return fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\n//note: [-1;1]\nfloat srand( vec2 n ) {\n\treturn rand1(n) * 2.0 - 1.0;\n}\n\nfloat mytrunc( float x, float num_levels )\n{\n\treturn floor(x*num_levels) / num_levels;\n}\n\nvec2 mytrunc( vec2 x, float num_levels )\n{\n\treturn floor(x*num_levels) / num_levels;\n}\n\nfloat randomRange(float x, float y, vec2 seed) {\n    // 0 - 1\n    float randomValue = fract(sin(dot(seed.xy, vec2(12.9898, 78.233))) * 43758.5453);\n\n    // 0 - 1, x - y \n    return mix(x, y, randomValue);\n}\n\nvec3 cyGray(vec3 sampleColor) {\n   vec2 seed = sampleColor.xy;\n  float gray = dot(sampleColor, vec3(0.2126, 0.7152, 0.0722));\n  float enhancedGray = gray * (1.0 + 0.5 * randomRange(-2.,2.,seed)); // contrast\n  // float enhancedGray = gray * (1.0 + 0.5 * 0.1); // contrast\n  vec3 enhancedColor = vec3(enhancedGray);\n  return enhancedColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y = uv.y;\n\t\n\tfloat time = mod(iTime*100.0, 32.0)/110.0; // + modelmat[0].x + modelmat[0].z;\n\n\tfloat GLITCH = 0.1 -.5;\n\t\n\tfloat gnm = sat( GLITCH );\n\tfloat rnd0 = rand1( mytrunc( vec2(time, time), 6.0 ) );\n\tfloat r0 = sat((1.0-gnm)*0.7 + rnd0);\n\tfloat rnd1 = rand1( vec2(mytrunc( uv.x, 10.0*r0 ), time) ); //horz\n\t//float r1 = 1.0f - sat( (1.0f-gnm)*0.5f + rnd1 );\n\tfloat r1 = 0.5 - 0.5 * gnm + rnd1;\n\tr1 = 1.0 - max( 0.0, ((r1<1.0) ? r1 : 0.9999999) ); //note: old drivers bug\n\tfloat rnd2 = rand1( vec2(mytrunc( uv.y, 40.0*r1 ), time) ); //vert\n\tfloat r2 = sat( rnd2 );\n\n\tfloat rnd3 = rand1( vec2(mytrunc( uv.y, 10.0*r0 ), time) );\n\tfloat r3 = (1.0-sat(rnd3+0.8)) - 0.1;\n\n\tfloat pxrnd = rand1( uv + time );\n\n\tfloat ofs = 0.05 * r2 * GLITCH * ( rnd0 > 0.5 ? 1.0 : -1.0 );\n\tofs += 0.5 * pxrnd * ofs;\n\n\tuv.y += 0.1 * r3 * GLITCH;\n\n  const int NUM_SAMPLES = 20;\n  const float RCP_NUM_SAMPLES_F = 1.0 / float(NUM_SAMPLES);\n    \n\tvec4 sum = vec4(0.0);\n\tvec3 wsum = vec3(0.0);\n\tfor( int i=0; i<NUM_SAMPLES; ++i )\n\t{\n\t\tfloat t = float(i) * RCP_NUM_SAMPLES_F;\n\t\tuv.x = sat( uv.x + ofs * t );\n\t\tvec4 samplecol = texture( iChannel0, uv, -1.0 );\n\t\tvec3 s = spectrum_offset( t );\n\t\tsamplecol.rgb = cyGray(samplecol.rgb) * s;\n\t\tsum += samplecol;\n\t\twsum += s;\n\t}\n\tsum.rgb /= wsum;\n\tsum.a *= RCP_NUM_SAMPLES_F;\n\n\tfragColor.a = sum.a;\n\tfragColor.rgb = sum.rgb; // * outcol0.a;\n}","name":"Image","description":"","type":"image"}]}