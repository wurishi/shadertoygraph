{"ver":"0.1","info":{"id":"7sdGDn","date":"1629601349","viewed":63,"name":"Rectangle twist","username":"blastbuilder","description":"Rectangle version","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rot(vec2 uv,float a){\n\treturn vec2(uv.x*cos(a)-uv.y*sin(a),uv.y*cos(a)+uv.x*sin(a));\n}\n\nfloat draw(vec2 uv) {\n    uv -= vec2(0.75, 0.5);\n    uv = abs(uv);\n    float c = abs(max(uv.x, uv.y) - 0.15);\n    return clamp(10.0 * c, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = vec2(fragCoord.x/iResolution.y - 0.5, fragCoord.y/iResolution.y - 0.5);\n\n    float s=1.3;\n    float c = draw(uv);\n    for(int i=0;i<300;i++){\n\t\tuv=uv * 1.04;\n\t\tuv=rot(uv, iTime / 105.0);\n\t\t//s=s/2.1;\n        c = min(c, draw(uv));\n\t}\n\n    // Output to screen\n    fragColor = vec4(c, c, c, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}