{"ver":"0.1","info":{"id":"tdKXWK","date":"1575038722","viewed":62,"name":"HyperCol Logo 2D","username":"Ovizro","description":"The logo of HyperCol Studio.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","logo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\nconst float size = 5.0;\n\n#define animationTimeCounter mod(iTime+6.2831*iMouse.x/iResolution.x, 10.0)\n\nvec2 fuv_build(in vec2 uv) {\n    vec2 fuv = uv * 2.0 - 1.0;\n    fuv *= max(iResolution.xy / iResolution.yx, vec2(1.0));\n    return fuv;\n}\n\nmat2 mRotate(float theter) {\n    float c = cos(theter);\n    float s = sin(theter);\n    return mat2(c, -s,\n                s, c);\n}\n\nvoid rotate(inout vec2 uv, in float theter) {\n    uv = mRotate(theter) * uv;\n}\n\nfloat triangle(in vec2 puv) {\n\tfloat e1 = 0.57735 * (1.0 - puv.x) - abs(puv.y); \n    float e2 = puv.x + 1.0; \n\treturn min(smoothstep(0.0, 0.05, e1), smoothstep(0.0, 0.0443, e2));\n}\n\nfloat triangle(in vec2 puv, in float d) {\n    puv.x -= d;\n\treturn triangle(puv);\n}\n\nfloat cdot(in vec2 puv) {\t\t\t//Just a light dot\n    float dist = length(puv);\n\tdist = smoothstep(0.0, 2.4, 2.4 - dist) * 1.1;\n    return pow(dist, 2.4);\n}\n\nfloat cdot(in vec2 puv, in float d) {\n    puv.x += d;\n\treturn cdot(puv);\n}\n\nfloat track(float animationTime) {\t\t\t\t//Running track of graph\n    const float edge0 = log(size) / log(1.618) * 1.3333;\t\t//The angle of beginning\n    const float edge = floor(edge0) * PI * 0.25;\t\t\t\t//Correct rotation angle\n    \n    float frametime = (smoothstep(-5.0, 5.0, animationTime) - 0.5) * 8.0;\n    float theter = edge * (3.0 - frametime);\n    float r = pow(1.618, 2.0 * theter / PI);\t\t\t//Fibonacci helix\n    return max(r, 1.0);\n}\n\nvec2 getPuv(in vec2 fuv, int t, vec2 p, mat2 m) {\n    float r = track(animationTimeCounter - float(t) * 0.2);\n    \n    vec2 puv = (fuv * size - r * p) / 0.4142;\n    return m * puv;\n}\n\nvoid ot(inout float tri, vec2 fuv) {\n\tconst vec4 trianglePos[] = vec4[16] (\t\t//Center position(x,y), 1/size, angle\n\t\tvec4(-1.17, \t-0.464, 4.348, \t1.4),\n\t\tvec4(-0.3356, \t1.176, \t2.1739,\t1.05),\n\t\tvec4(-1.73, \t0.3, \t5.376, \t-0.4),\n\t\tvec4(1.42578,\t-0.042,\t3.760, \t1.24),\n\t\tvec4(0.711,\t\t-0.92,\t4.7619,\t-0.3),\n\t\tvec4(0.551, \t0.64, \t16.667,\t-0.5),\n\t\tvec4(-0.117, \t-0.672,\t25.0, \t1.1),\n\t\tvec4(-1.56, \t-0.17,\t24.39,\t1.15),\n\t\tvec4(-1.26, \t0.728,\t26.3,\t-0.2),\n\t\tvec4(0.86,\t\t-0.7,\t12.5,\t0.0),\n\t\tvec4(1.4933,\t1.14,\t3.70,\t-0.9),\n\t\tvec4(1.36889,\t-0.362,\t14.3,\t1.26),\n\t\tvec4(-0.89245,\t0.1,\t50.0,\t0.1),\n\t\tvec4(1.3511,\t-0.814,\t37.453,\t0.01),\n\t\tvec4(-1.45778,\t-1.16,\t58.82,\t-0.2),\n\t\tvec4(1.39,\t\t-0.722,\t100.0,\t1.25)\n\t);\n\n\tfloat frametime = smoothstep(0.0, 7.0, animationTimeCounter);\n\t\n\tfor (int i = 0; i < trianglePos.length(); ++i) {\n\t\tvec4 pos = trianglePos[i];\n\t\tpos.w -= (1.0 - frametime) * pos.z;\n\t\tvec2 puv = (fuv - pos.xy / frametime) * pos.z;\n\t\trotate(puv, pos.w);\n\t\t\n\t\ttri += triangle(puv, 0.3333);\n\t}\n}\n\nvoid HyperCol_Logo(inout vec3 fcolor, in vec2 fuv0) {\n    vec2 fuv = fuv0;\n    const vec3 logoColor = vec3(0.0, 0.62, 0.9);\n    float logo = 0.0;\n    \n    const float sqrt2 = inversesqrt(2.0);\n    const mat2 rot45 = mat2(sqrt2, -sqrt2,\n                           sqrt2, sqrt2);\n    const float edge0 = log(size) / log(1.618) * 1.3333;\t\t//The angle of beginning\n    const float edge = floor(edge0) * PI * 0.25;\t\t\t\t//Correct rotation angle\n    \n    float frametime = (smoothstep(-6.0, 6.0, animationTimeCounter) - 0.5) * 8.0;\n    float theter = edge * (3.0 - frametime);\n    vec2 p = vec2(cos(theter), sin(theter));\n    mat2 m = mRotate(theter - PI * 0.5);\n   \t\n    for (int i = 0; i < 8; ++i) {\n        fuv = rot45 * fuv;\n        \n        vec2 puv = getPuv(fuv, i, p, m);\n        logo += mix(cdot(puv, 0.3333), triangle(puv), smoothstep(1.5, 3.0, animationTimeCounter));\n    }\n    \n    ot(logo,fuv0);\n    fcolor = mix(fcolor, logoColor, logo);\n}\n\nvec4 HyperCol_Logo_Build(in vec2 uv) {\n    vec2 fuv = fuv_build(uv);\n    vec3 background = vec3(1.0) * smoothstep(1.0, 3.0, animationTimeCounter);\n    \n    HyperCol_Logo(background, fuv);\n    return vec4(background, 1.0) * (1.0 - smoothstep(9.0, 10.0, animationTimeCounter));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = HyperCol_Logo_Build(uv);\n}","name":"Image","description":"","type":"image"}]}