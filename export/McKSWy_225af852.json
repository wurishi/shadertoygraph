{"ver":"0.1","info":{"id":"McKSWy","date":"1715726255","viewed":327,"name":"uh oh","username":"01000001","description":"run, the ground is cracking!","likes":17,"published":3,"flags":32,"usePreview":1,"tags":["experiment"],"hasliked":0,"parentid":"md3BDS","parentname":"minitemplate"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U ){\n\n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;\n    vec2 cuv = (2.*U-r)/r.y;\n    vec2 muv = (2.*iMouse.xy-r)/r.y;\n    \n    O = texture(iChannel0, uv);\n    float x = 0.;\n    int i = 0;\n    \n    if (O.w < 1.){\n        for (; i++<32;){\n            x = texelFetch(iChannel0, ivec2(U) + ivec2(0,i), 0).w;\n            if (x > 0.) break;\n        }\n    }\n    \n    O = texelFetch(iChannel0, ivec2(U)+ivec2(0,i), 0)*exp(-float(i)/16.);\n    \n    if (i > 32) O = vec4(0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float pi = 3.1415926;\nfloat cracks(vec2 p){\n    float r = atan(p.y,p.x);\n    return step(.2,length(p)\n    - abs(fract(r/pi*4.)-.5)*.4 \n    - abs(fract(r/pi*12.)-.5)*.5\n    - abs(fract(r/pi*1.5)-.5)*.4\n    );\n}\n\nfloat checkerboard(vec2 p){\n    p *= 3.;\n    return mod(floor(p.x) + floor(p.y), 2.);\n}\n\nmat2 rot(float t){\n    return mat2(\n        cos(t), sin(t),\n        -sin(t), cos(t)\n    );\n}\n\nvoid mainImage( out vec4 O, vec2 U ){\n\n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;\n    vec2 cuv = (2.*U-r)/r.y;\n    vec2 muv = (2.*iMouse.xy-r)/r.y;\n    \n    O = texture(iChannel0, uv);\n    O.w = cracks((vec2(cuv.x / cuv.y, (cuv.y + 3.) / cuv.y)*.7 + vec2(-.1, 2.3))*rot(.6));\n}","name":"Buffer A","description":"","type":"buffer"}]}