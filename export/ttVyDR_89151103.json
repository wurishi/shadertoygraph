{"ver":"0.1","info":{"id":"ttVyDR","date":"1611687839","viewed":55,"name":">HYPER_TERRABYTE_","username":"vlams1","description":"Data storage in 32MB chunks","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["raymarcher"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define IT 128\n#define MD 20.\n\nvec3 P,D,C;\n\nmat2 r(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c,-s,s,c);\n}\n\nmat3 look(vec3 o, vec3 t) {\n    vec3 f = normalize(t-o);\n    vec3 r = normalize(cross(f,vec3(0,1,0)));\n    vec3 u = cross(r,f);\n    return mat3(r,u,f);\n}\n\nfloat h31(vec3 p) {\n    p += dot(p,abs(p)+3817.34);\n    p = fract(sin(p)*5823.35);\n    return fract(p.x*-p.y+p.y*-p.z+dot(p,p.yzx+336.33));\n}\n\nfloat n31(vec3 p) {\n    vec3 m = sin(fract(p)*3.14159-1.57079)*.5+.5;\n    vec2 o = vec2(1,0);\n    p = floor(p);\n    float a = mix(h31(p),h31(p+o.yyx),m.z);\n    float b = mix(h31(p+o.xyy),h31(p+o.xyx),m.z);\n    float c = mix(h31(p+o.yxy),h31(p+o.yxx),m.z);\n    float d = mix(h31(p+o.xxy),h31(p+o.xxx),m.z);\n    return mix(mix(a,c,m.y),mix(b,d,m.y),m.x);\n}\n\nvec3 h33(vec3 p) {\n    p = fract(p*365.8193+95.);\n\tp *= 17.;\n    return fract(vec3(p.x*p.y,p.y*p.z,p.z*p.x)+(p.x+p.y+p.z));\n}\n\nfloat box(vec3 p, float b) {\n    vec3 q = abs(p)-b;\n    return length(max(vec3(0.),q)) + min(0.,max(q.x,max(q.y,q.z)));\n}\n\nfloat voronoi(vec3 p) {\n    vec3 c = floor(p);\n    float d = 10.;\n    vec3 s;\n    for (s.x = -1.; s.x < 2.; s.x++)\n        for (s.y = -1.; s.y < 2.; s.y++)\n            for (s.z = -1.; s.z < 2.; s.z++)\n            \td = min(d,box(p-c-.5-s+sin(h33(c+s)*(iTime*.5+10.))*.5,.01));\n    return d+.02;\n}\n\nfloat dist(vec3 p) {\n    vec3 gp = mod(p,2.)-1.;\n    float d = min(length(gp.xy),min(length(gp.yz),length(gp.zx)))+.02;\n    return min(d,voronoi(p));\n}\n\nfloat raymarch(vec3 p, vec3 d, float l) {\n    for (int i; i<IT; i++) {\n        float d = dist(p+d*l);\n        l += d;\n        float n = smoothstep(.3,.7,n31((P+D*l)*.5));\n        C += exp(-d*30.)*(pow((MD-(l))/MD,5.)) * mix(vec3(.6,.2,.2),vec3(.2,.2,1),n);\n        if (l > MD) break;\n    }\n    return l;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 m = (iMouse.xy-.5*iResolution.xy)/iResolution.y;\n    P = vec3(m,iTime);\n    //P.xy *= r(iTime*.2*3.14);\n    D = normalize(vec3(uv,1));\n    D.zy *= r(-m.y);\n    D.xz *= r(m.x);\n    float l = raymarch(P,D,.01);\n    fragColor = vec4(C,1) + texelFetch(iChannel0, ivec2(fragCoord), 0)*.7;\n}","name":"Buffer A","description":"","type":"buffer"}]}