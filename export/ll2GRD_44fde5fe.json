{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Ripple effect by Mahmud Yuldashev. Math from Adrian Boeing Blog\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //variables\n    vec2 mouse=iMouse.xy;\n    float time=iTime;\n    \n    float intensity=0.09;\n    \n    \n\tvec2 p =-1.+2.*fragCoord.xy / iResolution.xy-vec2(0,-mouse.y*.001);\n     \n    \n    float cLength=length(p);\n    \n    vec2 uv=(fragCoord.xy / iResolution.xy)/-1.\n        +(p/cLength)*cos(cLength*15.0-iTime*4.0)*intensity;\n    \n    vec3 col=smoothstep(0.1,.91,texture(iChannel0,uv).xyz);\n    \n    col.r=0.01;\n    col.g=0.;\n        \n    \n    \n    \n\tfragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ll2GRD","date":"1427390347","viewed":2845,"name":"Water Ripple effect","username":"mahmud9935","description":"Simple ripple effect","likes":9,"published":1,"flags":0,"usePreview":1,"tags":["ripple","webgl","opengl","rippleopengl","refractionshader"],"hasliked":0,"parentid":"","parentname":""}}