{"ver":"0.1","info":{"id":"DllXzX","date":"1675124170","viewed":116,"name":"ChatGPT Lens Distortion","username":"jakedowns","description":"a shader made with ChatGPT\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bubble","checker","chatgpt"],"hasliked":0,"parentid":"cllXzX","parentname":"Fork Fork ChatG jakedowns 700"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float squareSize = 10.0;\nfloat sphereRadius = 0.2;\nfloat distortionStrength = 15.0;\n\nfloat getCheckeredColor(vec2 checker)\n{\n    int colorIndex = int( floor( checker.x * squareSize ) + floor( checker.y * squareSize ) );\n    return ( colorIndex % 2 == 0 ) ? 1.0 : 0.0;\n}\n\nvec2 getDistortedUV(vec2 uv, vec2 center, float strength)\n{\n    vec2 delta = center - uv;\n    float dist = length(delta);\n    float distort = dist * strength * (sphereRadius - dist) / sphereRadius;\n    return uv + delta * distort;\n}\n\nfloat getSphereColor(vec2 uv, vec2 center)\n{\n    vec2 delta = center - uv;\n    return (length(delta) < sphereRadius) ? 1.0 : 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 mouse = (iMouse.xy / iResolution.xy - 0.5) * vec2(iResolution.x / iResolution.y, 1.0) + 0.5;\n\tvec2 uv = (fragCoord.xy / iResolution.xy - 0.5) * vec2(iResolution.x / iResolution.y, 1.0) + 0.5;\n\t\n\tvec2 center = mouse;\n\tfloat sphereColor = getSphereColor(uv, center);\n\tif (sphereColor > 0.0) {\n\t\tuv = getDistortedUV(uv, center, distortionStrength * sphereColor);\n\t}\n\n\tvec2 checker = fract( uv );\n\tfloat checkerColor = getCheckeredColor(checker);\n\n\t//vec3 color = mix(vec3(checkerColor), vec3(1.0, 0.0, 0.0), sphereColor);\n    vec3 color = vec3(checkerColor);\n\t\n\tfragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}