{"ver":"0.1","info":{"id":"MXB3Dt","date":"1709016635","viewed":93,"name":"shifting panes","username":"elias_n_d","description":"mondrian slides around a bit. can you blame him?","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["destijl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // [0-1]\n    float speed = 0.2;\n    \n    // Limits\n    \n    float y1 = (-abs(sin(iTime*1.5*speed))+1.)/2.+.5;\n    float y2 = sin(iTime*2.3*speed)/4.+.25;\n    float y3 = abs(sin(iTime*.9*speed));\n    float y4 = -abs(sin(iTime*1.4*speed))+1.;\n    float y5 = sin(iTime*1.5*speed)/2.+.5;\n    \n    float min_y = min(min(min(y1,y2),y3),y4);\n    float max_y = max(max(max(y1,y2),y3),y4);\n    \n    float x1 = abs(sin(iTime*speed))/2.;\n    float x2 = sin(iTime*1.2*speed)/2.+.5;\n    float x2_2 = x2 -.035 - .06 * (sin(iTime*speed)/2.+.5);\n    \n    float x3 = sin(iTime*.9*speed)/4.+.75;\n    float x4 = -abs(sin(iTime*.7*speed))+1.;\n    float x5 = sin(iTime*.8*speed)/2.+.5;\n    \n    float min_x = min(min(min(min(x1,x2),x2_2),x3),x4);\n    float max_x = max(max(max(max(x1,x2),x2_2),x3),x4);\n    \n    // -- HORIZONTAL LINES -- //\n    \n    float l_y1 = 1.-(step(uv.y-.01, y1) * step(y1, uv.y+.01));\n    float l_y2 = 1.-(step(uv.y-.01, y2) * step(y2, uv.y+.01));\n    \n    // l_y3 go to leftmost side of vertical lines\n    float l_y3 = 1.-(step(min_x, uv.x) * step(uv.y-.01, y3) * step(y3, uv.y+.01));\n    \n    float l_y4 = 1.-(step(uv.y-.01, y4) * step(y4, uv.y+.01));\n    \n    // l_y5 stick between x1 and x4\n    float l_y5 = 1.-(step(min(x1,x4),uv.x) * step(uv.x,max(x1,x4)) * step(uv.y-.01, y5) * step(y5, uv.y+.01));\n    \n    // -- VERTICAL LINES -- //\n    \n    float l_x1   = 1.-(step(uv.x-.005, x1) * step(x1, uv.x+.005));\n    \n    // x2 go down to lowest of y1, y2, y3, y4, double line\n    float l_x2   = 1.-(step(min_y, uv.y) * step(uv.x-.005, x2) * step(x2, uv.x+.005));\n    float l_x2_2 = 1.-(step(uv.x-.005, x2_2) * step(x2_2, uv.x+.005));\n    \n    // x3 only down up to max y\n    float l_x3 = 1.-(step(max_y, uv.y) * step(uv.x-.005, x3) * step(x3, uv.x+.005));\n    \n    float l_x4 = 1.-(step(uv.x-.005, x4) * step(x4, uv.x+.005));\n    \n    // x3 only exist between y1 and y2\n    float l_x5 = 1.-(step(uv.y, y1) * step(y2, uv.y) * step(uv.x-.005, x5) * step(x5, uv.x+.005));\n        \n    // --- SHAPES --- //\n    \n    // Red square x2, x2_2, y1, y2\n    vec3 s_r1 = 1.-step(min(x2,x2_2),uv.x) * step(uv.x,max(x2,x2_2)) * step(min(y1,y2),uv.y) * step(uv.y,max(y1,y2)) * (1.-vec3(.9,0.,0.));\n    \n    // Red square x4, x1, y3, y4\n    vec3 s_r2 = 1.-step(min(x4,x1),uv.x) * step(uv.x,max(x4,x1)) * step(min(y3,y4),uv.y) * step(uv.y,max(y3,y4)) * (1.-vec3(.9,0.,0.));\n    \n    // Yellow square top, max_y, x2, x3\n    vec3 s_y1 = 1.-step(min(x2,x3),uv.x) * step(uv.x,max(x2,x3)) * step(max_y,uv.y) * step(uv.y,1.) * (1.-vec3(.9,.9,0.));\n    \n    // Yellow square y4, y5, x2_2, x1\n    vec3 s_y2 = 1.-step(min(x4,x1),uv.x) * step(uv.x,max(x4,x1)) * step(min(y3,y5),uv.y) * step(uv.y,max(y3,y5)) * (1.-vec3(.9,.9,0.));\n    \n    // Blue square bottom, y3, x2_2, x4\n    vec3 s_b1 = 1.-step(min(x2_2,x4),uv.x) * step(uv.x,max(x2_2,x4)) * step(0.,uv.y) * step(uv.y,min_y) * (1.-vec3(0.,0.,.7));\n    \n    \n        \n    float lineCol = l_y1 * l_y2 * l_y3 * l_y4 * l_y5 * l_x1 * l_x2 * l_x3 * l_x2_2 * l_x4 * l_x5;\n    fragColor = vec4(min(vec3(lineCol), (s_r1*s_r2*s_y1*s_y2*s_b1)),1.);\n}\n","name":"Image","description":"","type":"image"}]}