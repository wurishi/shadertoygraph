{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float intersect(vec4 lsphere, vec3 ray){\n// camera pos is origo\nvec4 sphere= lsphere;\nfloat a = dot(ray,ray);\nfloat b = dot(ray, -2.0* sphere.xyz);\nfloat c = dot(sphere.xyz,sphere.xyz)-dot(sphere.a,sphere.a);\nfloat determinant = b*b-4.0*a*c;\nif (determinant < 0.0) return -1.0;\nfloat t2 = (-b-sqrt(determinant))/(2.0*a);\nif(t2 > 0.001) return t2;\nfloat t1 = (-b+sqrt(determinant))/(2.0*a);\nif(t1 > 0.001) return t1;\nreturn -1.0;\n}\nvec3 F(vec3 normal, vec3 light,vec3 F0){\nfloat cos_a = abs(dot(normal,light));\n\tif (cos_a < 0.0) return vec3(0.0);\nreturn F0+(vec3(1.0) - F0)*pow(1.0-cos_a,5.0);\n}\n\nvec3 calcColor(vec3 view, vec3 normal, vec3 light,float lightintensity){\nvec3 nview = normalize(view);\nvec3 nnormal = normalize(normal);\nvec3 nlight = normalize(light);\nvec3 ambient = vec3(0.12,0.12,0.12);\nvec3 nhalf = normalize(nview+nlight);\nvec3 reflected = reflect(nnormal*-1.0,nlight);\n\t\nreturn ambient+(max(dot(nnormal,nlight),0.0)*0.3+0.4*pow(max(dot(reflected,nview),0.0),2.0))*lightintensity;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n  vec3 ray = vec3(fragCoord.xy/iResolution.xx,-3.0);\n  vec4 light0 = vec4(sin(5.4*cos(iTime/2.0))*4.0,4.0+sin(5.4*sin(iTime/2.0))*4.0,5.0,1.0);\n\n\n  vec4 sphere = vec4(0.5,0.0,-10.0,0.5);\n  ray*=vec3(-1.0,-1.0,1.0);\n  ray+=vec3(0.5,0.3,0.0);\n  fragColor = vec4(vec3(0.0),0.6);\n  float t=intersect(sphere,ray);\n\tif (t > 0.0){\n\n\t  // calc intersection point\n\t  vec3 point = (t+0.0)*ray;\n\t  // calc normal\n\t  vec3 normal = point - sphere.xyz;\n\t  // calc lightvector\n\t  vec3 lightvector = light0.xyz - point; \n\t  fragColor  = vec4(calcColor(-1.0*ray,normal,lightvector,light0.a),1.0);\n\n\t}\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dj3W3","date":"1394371806","viewed":818,"name":"Simple sphere raycasting","username":"greg_o","description":"My first working raycaster - simple, not well structured and have some bug, but mine :D","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d","raytracing","simple","sphere"],"hasliked":0,"parentid":"","parentname":""}}