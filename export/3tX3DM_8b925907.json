{"ver":"0.1","info":{"id":"3tX3DM","date":"1556451670","viewed":195,"name":"Simulation of the wave-equation","username":"Seledorn","description":"Simulation of the wave-equation. Aka why good reverb is hard to do. Click to add more starting waves.\n","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["waveequation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0).xxxx*10.; \t\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// just a few buffers to sim multiple times per frame. \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(sim(iChannel0,fragCoord, iFrame, iResolution.xy),1.0,1.0); \n   \t   vec4  m  = iMouse / iResolution.xyxy;\n    if(m.z > 0.0){   \n\t    vec2 uv = fragCoord/iResolution.xy;\n        float d = distance(uv,m.xy);\n    \tfragColor.xy += vec2(smoothstep(0.015,0.005,d),0.);\n    }\n   \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// just a few buffers to sim multiple times per frame. \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(sim(iChannel0,fragCoord, iFrame, iResolution.xy),1.0,1.0); \n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// just a few buffers to sim multiple times per frame. \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(sim(iChannel0,fragCoord, iFrame, iResolution.xy),1.0,1.0); \n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"// just a few buffers to sim multiple times per frame. \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(sim(iChannel0,fragCoord, iFrame, iResolution.xy),1.0,1.0); \n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float dt = 0.1;\nfloat spread = 10.;\n\nvec2 sim(sampler2D tex,vec2 fragCoord, int frame, vec2 res)\n{\n    vec2 c;\n    \n\n\tc = texelFetch(tex,ivec2(fragCoord),0).xy;\n\n    float l = -4.*c.x; //laplacian\n\tl += texelFetch(tex,ivec2(fragCoord) + ivec2(0,1),0).x;\n\tl += texelFetch(tex,ivec2(fragCoord) + ivec2(1,0),0).x;\n\tl += texelFetch(tex,ivec2(fragCoord) + ivec2(0,-1),0).x;\n\tl += texelFetch(tex,ivec2(fragCoord) + ivec2(-1,0),0).x;\n    \n\tc.y += spread*l*dt; \n    c.x += c.y*dt;\n    c.y *= 0.9995;\n    \n    if(frame < 10){   \n\t    vec2 uv = fragCoord/res;\n        float d = distance(uv,vec2(0.5,0.2));\n    \tc = vec2(smoothstep(0.045,0.035,d),0.);\n    }\n    \n    return c;\n}\n","name":"Common","description":"","type":"common"}]}