{"ver":"0.1","info":{"id":"4sKGRR","date":"1452997734","viewed":128,"name":"Hollow Man","username":"YS","description":"Hollow Man","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["hollowman"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec2 muv;\nvec4 r;\nvec4 diff;\n\nvec3 bgColor(vec2 p){\n    return texture(iChannel0,vec2(0.5,0.)+vec2(p.x-0.5,p.y)*vec2(iResolution.x/iResolution.y/3.,1.)).xyz;\n}\n\nfloat noise( in vec3 x )//https://www.shadertoy.com/view/4sfGzS\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\t\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = texture( iChannel3, (uv+0.5)/256.0, -100.0 ).xy;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\nfloat waterProp(vec2 p){\n    return noise(vec3(p*8.+vec2(0.,iTime*6.),0.)) * length(diff) + r.x ;\n}\n\nvec2 norm(vec2 p){\n    vec2 e = vec2(0.01,0);\n    return vec2(\n        waterProp(p+e.xy)-waterProp(p-e.xy),\n        waterProp(p+e.yx)-waterProp(p-e.yx));\n}\n\nvec3 color(vec2 p){\n    float w = waterProp(p);\n    if(w < 0.3){\n        return bgColor(p);\n    }else if(w < 0.4){\n        return bgColor(p) * ((0.4-w)*10./2.+0.5);\n    }\n    float pro = smoothstep(0.,.6,(waterProp(p)-0.4)*10./6.);\n    pro = sqrt(pro);\n    vec3 n = normalize(vec3(norm(p),pro*pro/4.));\n    vec3 o = vec3(p,-pro);\n    vec3 v = vec3(0,0,1);\n    v = refract(v,n,1.3);\n    o += v*pro/20.;\n    v = refract(v,vec3(n.xy,-n.z),1./1.3);\n    //if(p.x < 0.5)o += v*((-3.-o.z)/v.z)/40.;\n    vec3 base = vec3(1.,1.,3.) * (pro*0.5+0.5) * bgColor(o.xy);\n    float sp1 = pow(max(0.,dot(normalize(vec3(0,-1,0.5)),n)),8.);\n    float sp2 = pow(max(0.,dot(normalize(vec3(-2.,1,1.)),n)),3.)/3.;\n    return base + sp1 + sp2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    muv = fragCoord.xy / iResolution.xy;\n    r = texture(iChannel2,muv);\n    muv = muv + vec2(r.x *.1,r.y * .1);\n    fragColor = texture(iChannel0,muv);\n    diff = texture(iChannel1,muv);\n\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv = uv * 0.5 + 0.5;\n\tfragColor = vec4(color(muv),1.0);\n    \n\t//fragColor = diff * 3.5;\n\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0,uv)-texture(iChannel1,uv);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define FRAME_INTERVAL 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (mod(float(iFrame), float(FRAME_INTERVAL)) == 0.) // init with britney\n    {\n        fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n    }\n    else\n    {\n        fragColor = texture(iChannel1, fragCoord / iResolution.xy); // read buffer and keep britney\n    }\n    \n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Buf C","description":"","type":"buffer"}]}