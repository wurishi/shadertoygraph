{"ver":"0.1","info":{"id":"7sScWh","date":"1643407677","viewed":221,"name":"Sea of Modulation","username":"ruudhelderman","description":"Just playing around with frequency modulation on a 2D surface. Inspired by old-school plasma effects.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["plasma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float time_offset = 0.0;\nconst float speed = 0.2;\nconst float horizon = 0.51;\nconst float elevation = 30.0;\nconst float contrast = 15.0;\nconst float fog = 0.5;\nconst float modulation1 = 1.2;\nconst float modulation2 = 2.0;\n\nmat2 rotate(float t)\n{\n    float c = cos(t);\n    float s = sin(t);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy - 0.5;    // coordinates [-0.5, +0.5]\n    uv *= elevation / (horizon - uv.y);            // simple 3D projection\n    float t = (iTime + time_offset) * speed;       // time\n    \n    vec2 m = t + sin(uv + sin(uv * rotate(t) * modulation1));\n    float f = sin(length(m) * modulation2) * contrast / (elevation + uv.y * fog);\n\n    fragColor = vec4(0.5 + f, 0.0, 0.5 - f, 1.0);\n}","name":"Image","description":"","type":"image"}]}