{"ver":"0.1","info":{"id":"MlfyWf","date":"1506638217","viewed":299,"name":"Programming socks","username":"luluco250","description":"Don't ask","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["2d","stripes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXXDl","filepath":"https://soundcloud.com/crystalmist/macintosh-plus-420","previewfilepath":"https://soundcloud.com/crystalmist/macintosh-plus-420","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tDedicated to />p/\n*/\n\nconst float stripe_color_speed = 0.01;\nconst float stripe_color_saturation = 0.45;\n\nconst float stripe_scale = 32.0;\nconst float inv_stripe_scale = 1.0 / stripe_scale;\n\nconst vec2 stripe_movement = vec2(2.0, 0.0);\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat wrap(float v, float _min, float _max) {\n\treturn mod(_min + (v - _min), _max - _min);\n}\n\nvoid mainImage(out vec4 col_out, vec2 coords) {\n    vec2 ps = vec2(1.0) / iResolution.xy;\n    vec2 uv = coords * ps;\n    \n    //move stripes\n    coords += vec2(iFrame) * stripe_movement;\n\n    //get \"blurred\" music frequency, so that it's not \"pointy\"\n    float music_wave = 0.0;    \n    const int samples = 6;\n    for (int i = 0; i < samples; ++i) {\n        music_wave += texture(iChannel0, vec2(uv.x * 0.16 + ps.x * float(i))).x;\n    }\n    music_wave /= float(samples);\n    music_wave *= 100.0;\n    \n    float distortion = 0.0;\n    distortion += sin(coords.x * 10.0) * 4.0;  //small noise\n    distortion += sin(coords.x * 0.03) * 8.0;  //medium noise\n    distortion += sin(coords.x * 0.01) * -50.0; //big noise\n    distortion += sin(coords.x * 0.01) * music_wave;\n    coords.y += distortion * 0.25;\n    \n    bool a_or_b = mod(coords.y * inv_stripe_scale, 2.0) < 1.0;\n    \n    float sock_hue = 0.0;\n    \n    //if the left mouse button is pressed\n    if (iMouse.z > 0.0)             //get a color hue from the mouse X position\n        sock_hue = iMouse.x * ps.x;\n    else                            //get a color hue from 0.0 to 1.0 based on time\n\t\tsock_hue = wrap(iTime * stripe_color_speed, 0.0, 1.0);\n    \n    //generate a RedGreenBlue color from a HueSaturationValue color\n    vec3 col_sock = hsv2rgb(vec3(sock_hue, stripe_color_saturation, 1.0));\n    \n    col_out.rgb = a_or_b ? col_sock : vec3(1.0);\n    col_out.a = 0.0;\n}\n","name":"Image","description":"","type":"image"}]}