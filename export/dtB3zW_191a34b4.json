{"ver":"0.1","info":{"id":"dtB3zW","date":"1672927593","viewed":73,"name":"\"More realistic\" buttocks","username":"rivas","description":"The result after asking for a \"more realistic\" image of a pair of buttocks","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ai","buttocks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This function returns the distance between a point and a circle with a given center and radius\nfloat circle(vec2 p, vec2 c, float r) {\n  return length(p - c) - r;\n}\n\n// This function returns the distance between a point and a semi-circle with a given center, radius, and width\nfloat semiCircle(vec2 p, vec2 c, float r, float w) {\n  vec2 d = abs(p - c) - vec2(r, w);\n  return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n}\n\nfloat buttocks(vec2 p) {\n  // Create a circular shape for each buttock\n  float left = circle(p, vec2(-0.5, 0), 0.5);\n  float right = circle(p, vec2(0.5, 0), 0.5);\n  \n  // Create a semi-circular shape to represent the crease between the buttocks\n  float crease = semiCircle(p, vec2(0, -0.5), 0.5, 0.5);\n  \n  // Use max() to select the farthest distance\n  float d = max(left, right);\n  d = max(d, crease);\n  \n  // Offset the distance based on the y-coordinate\n  d -= smoothstep(-0.5, 0.5, p.y) * 0.2;\n  \n  return d;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // Convert from screen space to world space\n  vec2 p = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n  // Calculate the distance from the fragment to the buttocks\n  float d = buttocks(p);\n\n  // Use the distance to interpolate between two colors\n  if (d < 0.0) {\n    // The fragment is inside the buttocks, so draw it as skin color\n    fragColor = vec4(1.0, 0.8, 0.7, 1.0);\n  } else {\n    // The fragment is outside the buttocks, so draw it as a gradient from white to black\n    fragColor = mix(vec4(1.0), vec4(0.0), d);\n  }\n\n}","name":"Image","description":"","type":"image"}]}