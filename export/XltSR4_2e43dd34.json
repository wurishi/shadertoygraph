{"ver":"0.1","info":{"id":"XltSR4","date":"1478440747","viewed":1004,"name":"Kindergarten Art Class II","username":"huwb","description":"On the path towards a new experiment i found an interesting variation of my last shader.","likes":32,"published":1,"flags":96,"usePreview":1,"tags":["fluid","curl","paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ldSGDz","filepath":"https://soundcloud.com/prettylights/around-the-block-feat-talib","previewfilepath":"https://soundcloud.com/prettylights/around-the-block-feat-talib","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // blur code borrowed from wriggly: https://www.shadertoy.com/view/ld3SW7\n    \n    fragColor = vec4(0.);\n    \n    float uvr = 2.*length(uv-.5);\n    float v = pow(uvr,2.);\n    v = max(v,0.05);\n    vec3 bg = .15-.07*vec3(uvr);\n    bg.r *= .75;\n    bg = vec3(1.);\n    \n    // crude blur. not quite box, cut off the corners to reduce boxyness\n    #define R 3.\n    float twt = 0.;\n    for( float i = -R; i <= R; i++ )\n    {\n        for( float j = -R; j <= R; j++ )\n        {\n            if( abs(i)+abs(j) > 5. ) continue; // corners not welcome\n            \n            vec4 s = texture( iChannel0, uv + 2.*v*vec2(i,j)/iResolution.xy );\n            s = smoothstep(0.,.5,s); // blow it out a bit\n            \n\t\t    fragColor += s;\n            twt += 1.;\n        }\n    }\n    \n    /*\n\t//tonemapping-y version, gets much more even spread of color, but i think i like the contrast.\n    fragColor = log(1.+fragColor);\n    //fragColor /= twt;\n    fragColor *= .25;\n    fragColor = smoothstep(0.,1.,fragColor);\n    /*/\n    fragColor /= twt;\n    fragColor *= 2.;\n    fragColor = smoothstep(0.,1.,fragColor);//*/\n    \n    // bg, vign\n    fragColor.xyz = .99*vec3(1.,.98,.97) - fragColor.xyz;\n    fragColor.xyz *= pow(1. - 1.9*dot(uv-.5,uv-.5),.07);\n    // black bars for max drama\n    //float yd = min(fragCoord.y,iResolution.y-fragCoord.y);\n    //if( yd < 40. ) fragColor *= 0.;\n    \n    // blemishes\n    //fragColor *= .5+.5*smoothstep(0.03,.05,texture(iChannel2,uv).x);\n    //fragColor *= .7+.3*smoothstep(0.15,.17,texture(iChannel2,uv*.3).x);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec2 hash2( float n ) { return fract(sin(vec2(n,n+1.0))*vec2(43758.5453123,22578.1459123)); }\n\nvec4 ssamp( vec2 uv, float oct )\n{\n    return texture( iChannel1, uv/oct );\n}\n\nvec2 e = vec2(1./256., 0.);\nvec4 dx( vec2 uv, float oct ) { return (ssamp(uv+e.xy,oct) - ssamp(uv-e.xy,oct)) / (2.*e.x); }\nvec4 dy( vec2 uv, float oct ) { return (ssamp(uv+e.yx,oct) - ssamp(uv-e.yx,oct)) / (2.*e.x); }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 res = vec4(0.);\n    \n    // random paint drops\n    float fr = float(iFrame);\n    float period = iTime < 2.9 ? 30. : iTime < 47. ? 8. : 3.;\n    if( mod(fr,period) == 0. )\n    {\n        vec2 sparkPos = hash2(iTime+1.11) * iResolution.xy;\n        if( length(sparkPos-fragCoord)<5. && fragCoord.x > 1. && fragCoord.y > 1. )\n        {\n            // everyones favourite colour gradient\n            res += 2.5*vec4(uv,0.5+0.5*sin(iTime),1.0);\n        }\n    }\n    \n    // mouse paint\n    if( length(fragCoord-iMouse.xy) < 5. && iMouse.z > 0. )\n    {\n        // added sin gives pulsing feel\n        res += .7*vec4(uv,0.5+0.5*sin(iTime),1.0)*(.6+.5*-sin(iTime*10.5));\n    }\n    \n    // lookup offset\n    vec2 off = 0.* (vec2(128.)/iResolution.xy) * iTimeDelta;\n    \n    float oct = .25;\n    vec2 curl1 = .001*vec2( dy(uv,oct).x, -dx(uv,oct).x )*oct;\n    oct = 5.; float sp = 0.1;\n    curl1 += .0002*vec2( dy(uv+sp*iTime,oct).x, -dx(uv+sp*iTime,oct).x )*oct;\n    \n    off += curl1;\n    off *= .4;\n    \n    //off *= .4+(length(texture(iChannel0,uv).xyz));\n    \n    res += .999*texture( iChannel0, uv - off );\n    \n    fragColor = res;\n}\n","name":"Buf A","description":"","type":"buffer"}]}