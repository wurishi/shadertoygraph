{"ver":"0.1","info":{"id":"dtKXDy","date":"1686360392","viewed":56,"name":"First art shader","username":"FrederickAmpsUp","description":"wow cool neon art","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sigmoid(float x) {\n    return 1.0 / (1.0 + exp(-x));\n}\n\nvec3 palette( float t ) {\n    // [[0.500 0.500 0.500] [0.500 0.500 0.500] [1.000 1.000 1.000] [0.000 0.333 0.667]]\n    vec3 a = vec3(.5,.5,.5);\n    vec3 b = vec3(.5,.5,.5);\n    vec3 c = vec3(1.,1.,1.);\n    vec3 d = vec3(0.,.3,.6);\n    \n    return a+b*cos(6.28*(c*t+d));\n    \n}\n\nvec2 rotatePoint(vec2 point, float angle) {\n    float cosAngle = cos(angle);\n    float sinAngle = sin(angle);\n    return vec2(point.x * cosAngle - point.y * sinAngle, point.x * sinAngle + point.y * cosAngle);\n}\n\nfloat sdf(vec2 p) {\n    return sin(length(p)*8. + iTime) / 8.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    float oD = length(uv);\n    vec3 finalCol = vec3(0.);\n    \n    for(float i = 0.; i < 4.; i += 1.) {\n        uv = fract(uv * 1.5) - .5;\n\n        float d = sdf(uv);\n        vec3 col = palette((iTime / 4.) - (oD / 2.) + d) * 1.5;\n\n        d = abs(d);\n        d = .005 / d;\n        \n\n        col *= d;\n        finalCol += col;\n    }\n    \n    fragColor = vec4(finalCol,1.);\n}","name":"Image","description":"","type":"image"}]}