{"ver":"0.1","info":{"id":"7ttGRr","date":"1635632078","viewed":276,"name":"dok @ Inércia Shader Royale 21","username":"dok","description":"Live coded on 30.10.21\nfor the Shader Royale @ Inércia Demoparty https://inercia.pt/\n(streamed on https://www.twitch.tv/inerciademoparty)\n","likes":9,"published":1,"flags":4,"usePreview":0,"tags":["liveshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* shadertoy glue wrapping for bonzomatic */\n#define fGlobalTime iTime\n#define v2Resolution iResolution\n#define texFFT iChannel0\n#define texFFTSmoothed iChannel0\n#define gl_FragCoord fragCoord\n#define out_color fragColor\n\n/* bonzomatic source */\n#define PI 3.1416\n#define PI2 (2.0*PI)\n#define gain 0.1\n\nvec2 pol2(vec2 uv) {\n        return vec2(length(uv), fract(atan(uv.x,uv.y)/PI2));\n}\nmat2 rot2(float a) { return mat2(cos(a), sin(a), -sin(a), cos(a));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        vec2 uv = (gl_FragCoord.xy - 0.5 * v2Resolution.xy) / v2Resolution.y;\n        vec3 col = vec3(0);\n        float ef = fGlobalTime/2.0;\n        vec2 ev = pol2(uv + vec2(sin(ef), cos(ef)) * 0.1);\n        vec2 cv = pol2(uv);\n        vec2 lv = ev;\n        vec2 UV = uv;\n        uv.y += mix(0.95, 0.85, abs(sin(fGlobalTime))) * sign(uv.y);\n        vec2 pv = pol2(uv);\n\n        float ff = texture(texFFTSmoothed, vec2(0.1)).r * gain;\n        float ey = step(pv.x, 1.0);\n        float ni = ey;\n        float nl = mix(10.0, 15.0, ff);\n        float pr = mix(0.25, 0.05, 5.0*ff);\n        ni = ni * step(pr, ev.x) + (1.0-ni)*step(fract(nl*pv.x), mix(0.1, 0.05, ff));\n\n        float li = step(fract(25.0*lv.y + sin(50.0*(lv.x) - fGlobalTime)), mix(0.05, 0.1, ff));\n        float ci = step(fract(50.0*cv.y + sin(10.0*(cv.x) - fGlobalTime)), mix(0.05, 0.1, ff));\n        col.r = ni + ey * li + ci * li;\n        col.r += 2.0*texture(texFFT, vec2(pv.x)).r * gain;\n\n        float r = 0.0;\n        for (float i = 0.0; i < 1.0; i += 0.1) {\n                float rr = mix(0.5, 0.75, sin(fGlobalTime/4.0));\n                r += step(pol2(UV + vec2(rr,0.0)*rot2(fGlobalTime + i*PI2)).x, 0.05+ff);\n        }\n        if (sign(UV.y) > 0.0)\n                col.r += r;\n\n        r = 0.0;\n        for (float i = 0.0; i < 1.0; i += 0.1) {\n                float rr = mix(0.5, 0.75, sin(fGlobalTime/4.0));\n                r += step(pol2(UV + vec2(rr,0.0)*rot2(-fGlobalTime + i*PI2)).x, 0.05+ff);\n        }\n        if (sign(UV.y) < 0.0)\n                col.r += r;\n\n\n        float sp= fGlobalTime/2.0;\n        vec2 sv = UV+vec2(sin(sp),cos(sp))*0.04;\n        r = 0.0;\n        for (float i = 0.0; i < 10.0; i += 0.11) {\n                float rr = mix(0.2, 1.0, sin(i+fGlobalTime/4.0));\n                r += step(pol2(sv + vec2(rr,0.0)*rot2(-fGlobalTime + i*PI2)).x, 0.01+ff);\n        }\n        if (r > 0.0)\n                col.r = 1.0 - col.r;\n\n        col.rgb = col.rrr;\n\n        out_color = vec4(col, 1);\n}\n\n\n","name":"Image","description":"","type":"image"}]}