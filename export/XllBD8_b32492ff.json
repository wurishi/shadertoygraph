{"ver":"0.1","info":{"id":"XllBD8","date":"1511767443","viewed":89,"name":"felipepantone3","username":"nshelton","description":"experiment3","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["felipepantone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n    #define lineRot(a) mat2( sin(a), cos(a), cos(a), -sin(a))\n\nfloat line(vec2 uv)   \n{\n    float a = iTime;\n    uv -= 1.0;\n    uv =  lineRot(iTime*0.1) * uv;\n   \tfloat v = 1.5* abs(uv.y );\n    \n    return pow(v, 0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 nuv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float n = 0.09;\n    uv.x = n * round(uv.x /n);\n    \n    vec2 delta = lineRot(iTime*0.03) * vec2(0.2, 0.2);\n    \n    //uv.y += round(sin(uv.x * 4.0 + iTime) * 2.0 + sin(uv.x* 84.0+ iTime* 6.0)) / 10.0;\n    uv.y = fract(uv.y/2.0  ) * 4.0 - 1.0;\n    uv.y = round(uv.y / n)*n;\n     \n    \n    uv.y += nuv.x;\n    \n    if( sin( 10.0 * lineRot(iTime*0.1) * (uv - 1.0) + iTime ). x > 0.0)\n    {\n     \tdelta = vec2(0.0);   \n    }\n\n    \n    vec3 col;\n    col.r = line(uv - delta);\n    col.g = line(uv);\n    col.b = line(uv + delta);\n    \n    col = pow(col, vec3(4.0));\n    fragColor = vec4(col, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}