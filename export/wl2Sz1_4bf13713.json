{"ver":"0.1","info":{"id":"wl2Sz1","date":"1565107897","viewed":100,"name":"blackHoll","username":"foran","description":"blackHoll","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["blackholl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nvec3 hsv(in float h, in float s, in float v) {\n\treturn mix(vec3(1.0), clamp((abs(fract(h + vec3(1, 2, 1) / 2.0) * 5.0 - 3.0) - 1.0), 0.0 , 1.0), s) * v;\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n\n {\nvec3 p = vec3 ((-1.0+fragCoord.xy-0.5*iResolution.xy), 0.0)/100.0;\n\tvec4 color = vec4(0);\n\tfloat m = 1.0;\n\tfloat t = iTime*0.1;\n\tvec2 c = vec2(sin(t), cos(t));\n\n\tfloat n = 18.5;\n\tconst int iter = 2;\n\tfor (int i = 0; i < iter; i++) {\n\t\tfloat l = length(p);\n\t\tm *= smoothstep(0.0, 1.0, l);\n\t\tp /= l*l*0.06;\n\t\tp.xy = vec2(tan(c.x*c.y)*p.x - cos(c.x)*p.y, sin(c.x)*p.y-cos(c.x)*p.x);\n\t\tp.xz = vec2(tan(c.x*c.y)*p.x - cos(c.y)*p.z, sin(c.y)*p.z-cos(c.y)*p.x);\n\t\tp = abs(mod((p), n)-n/2.0);\n\t\t\n\t\tcolor += vec4(hsv(l, 1.30, 1.0), 1.0);\n\t}\n\n\tfragColor = vec4( color/float(iter) )*m;\n\n}","name":"Image","description":"","type":"image"}]}