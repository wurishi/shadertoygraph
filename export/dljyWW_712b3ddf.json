{"ver":"0.1","info":{"id":"dljyWW","date":"1691966504","viewed":88,"name":"#013","username":"jvincent","description":"Rotating field of rainbow square","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["square","rainbow","rotating","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265359\n#define tpi (2.0*pi)\n#define color(offset) abs(sin(offset + vec3(3, 7, 11)*pi/6.0))\n#define rotate(angle) mat2(cos(pi*angle), sin(pi*angle), -sin(pi*angle), cos(pi*angle))\n\nfloat squareField(vec2 space, float size, float rSpeed)\n{\n    float col = 0.0;\n    for(float i = 0.0; i <= 10.0; i++)\n    {\n        col += 0.005/abs(length(space.x) + length(space.y) - size*pow(2.0, 0.5*i));\n        space *= rotate(0.25 - rSpeed*iTime);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 3.0*(fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    float root2 = fract(pow(2.0, 0.5));\n    \n    for(float i = 0.0; i <= 0.5; i += 0.1)\n    {\n        col += squareField(vec2(uv.x, uv.y), i, i);\n        col += squareField(vec2(-uv.x, uv.y), i, i);\n    }\n    \n    col = 0.25*length(uv) * col * color(iTime + length(uv));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}