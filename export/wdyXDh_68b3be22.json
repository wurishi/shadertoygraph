{"ver":"0.1","info":{"id":"wdyXDh","date":"1573872693","viewed":691,"name":"3D Sine Puke","username":"senzheng","description":"Add some fake 3d lighting to the Sine Puke Fuild from twitter@WAHa_06x36. \n","likes":16,"published":1,"flags":32,"usePreview":0,"tags":["3d","fluid","sinepuke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\n// Get Fake Height\nfloat getFakeHeight(vec2 uv)\n{\n    return texture(iChannel0, uv).r;\n}\n\n// Get Fake Normal by Fake Height\nvec3 getNormal2(vec2 uv)\n{\n    vec2 step = 1.0 / iResolution.xy;\n    vec3 x = vec3(step.x, getFakeHeight(uv + vec2(step.x, 0.0)) - getFakeHeight(uv - vec2(step.x, 0.0)), 0.0);\n    vec3 z = vec3(0.0, getFakeHeight(uv + vec2(0.0, step.y)) - getFakeHeight(uv - vec2(0.0, step.y)), step.y);\n    vec3 n = -normalize(cross(x, z));\n    return normalize(n);\n}\n// Get Custom Color by Transformed Position \nvec3 getMyColor(vec3 p)\n{\n    vec2 o = mod(p.xy+time*0.01, vec2(2.0));\n    o = min(o, 2.0 - o);\n    o *= vec2(1.0, 0.7);\n    o.y += 0.2;\n    vec3 col = vec3(o, 0.85)*0.9;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 data = texture(iChannel0, uv);\n    vec3 col = getMyColor(data.yzw*2.0);\n    \n    // N: Fake Normal\n    vec3 N = normalize(getNormal2(uv));\n    // L: Light Dir\n    vec3 L = normalize(vec3(1.0));\n    // E: Eye Dir\n    vec3 E = normalize(vec3(0.0, -1.0, 0.0));\n    // H: Half Vector\n    vec3 H = normalize(-E + L);\n    // Calculate Fake Specular\n    float spec = min(1.0, pow(max(0.0, dot(N, H)), 1.4));\n    // Just Add It to Color\n    col += spec * vec3(0.5);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = uv;\n    float speed = 0.25;\n    for (int i = 1; i < 60; i++)\n    {\n        vec2 newp = p;\n        newp.x += 0.5 / float(i) * sin(float(i) * p.y + time * speed + 0.03 * float(i) ) + 10.0;\n        newp.y += 0.5 / float(i) * cos(float(i) * p.x + time * speed + 0.03 * float(i + 10)) + 15.0;\n        \n        p = newp;\n    }\n    vec3 col = vec3(0.5 * cos(3.0 * p.x) + 0.5, 0.5 * sin(3.0 * p.y) + 0.5, 0.5);\n\n   \t// R: The Fake Height of Fuild;\n   \t// G: Pos.x after Sine Puke Transform;\n   \t// B: Pos.y after Sine Puke Transform;\n    fragColor = vec4((col.r + col.g) * 0.5, p.x , p.y, 0.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}