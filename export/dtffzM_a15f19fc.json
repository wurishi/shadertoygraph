{"ver":"0.1","info":{"id":"dtffzM","date":"1692749729","viewed":82,"name":"First Shader - 20230822","username":"DiogoMJP","description":"My first shader.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 vert_offset = vec3(0.5, 0.5, 0.5);\n    vec3 amplitude = vec3(0.5, 0.5, 0.5);\n    vec3 frequence = vec3(1, 1, 1);\n    vec3 phase = vec3(0, 0.33, 0.66);\n    \n    return vert_offset + amplitude * cos(6.28318 * (frequence * t + phase));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float angle = (uv.y > 0.0 ? 1.0 : -1.0) *  acos(uv.x/length(uv));\n    uv = vec2(cos(iTime + angle), sin(iTime + angle)) / length(uv);\n    vec2 uv0 = uv;\n    vec3 finalCol = vec3(0);\n    \n    for (int i = 0; i < 2; i++) {\n        uv = fract(2.0 * uv) - 0.5;\n\n        float dist = length(uv);\n\n        vec3 col = palette(length(uv0) + iTime);\n\n        // Time varying pixel color\n        float val = sin(10.0*dist + iTime)/8.0;\n        val = abs(val);\n        val = 0.02/val;\n\n        finalCol += col * val;\n    }\n    \n    finalCol *= 1.0 - smoothstep(0.0, 8.0, length(uv0));\n\n    // Output to screen\n    fragColor = vec4(finalCol, 0);\n}","name":"Image","description":"","type":"image"}]}