{"ver":"0.1","info":{"id":"Wl3fWS","date":"1613320717","viewed":225,"name":"Happy Chinese New Year ","username":"Learner_CC","description":"Learn from olympus223’s Fireworks night, and make some adjustment.\nAt last, happy Chinese new year. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["firework","2dparticle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define s(a, b, t) smoothstep(a, b, t)\n#define g -9.81\n\n// -------- 随机数 -------- //\nfloat N21(vec2 p) {\n\tp = fract(p * vec2(233.34, 851.73));\n    p += dot(p, p + 23.45);\n    return fract(p.x * p.y);\n}\n\nvec2 N22(vec2 p) {\n\tfloat n = N21(p);\n    return vec2(n, N21(p + n));\n}\n\nfloat N11(float n) {\n    return fract(sin(dot(vec2(cos(n), sin(n)) ,vec2(27.9898, 38.233))) * 88.5453);\n}\n\n// -------- 烟花相关的三个函数 -------- //\nvec2 p1(vec2 p, float h, float t) {\n    // 返回烟花绽放前的高度\n    // p 烟花初始位置\n    // h 上升的高度\n    // t 时间\n    return vec2(p.x, p.y + clamp(pow(t, 5.0), 0.0, h));\n}\nvec2 p2(vec2 p, float h, float t) {\n    // 上升中烟花尾部的位置\n    return vec2(p.x, p.y + clamp(pow(0.95 * t, 5.0), 0.0, h));\n}\nfloat endTime(float h) {\n    // 计算烟花绽放的时间\n    return pow(h, 1.0 / 5.0) * 1.1;\n}\nfloat seed = 0.0;\nfloat particle(vec2 uv, vec2 p, vec2 v, float r, float t) {\n    float x = p.x + v.x * t;\n    float y = p.y + v.y * t + g / 2.0 * t * t;\n    vec2 j = (vec2(x, y) - uv) * 20.0;\n    float sparkle = 1.0 / dot(j, j);\n    return sparkle;\n}\nfloat explosion(vec2 uv, vec2 p, float s, float n, float t) {  \n    // n 生成粒子的个数\n    // t 烟花出现的时间\n    float m = 0.0;\n    float dt = 0.5;\n    // 通过循环分出粒子\n    for(float i = 0.0; i < n; i++) {\n        seed += i;\n        vec2 rand = vec2(1.0, 1.8) * (vec2(-1.0, 1.0) + 2.0 * N22(vec2(seed, i)));\n        vec2 v = vec2(cos(seed), sin(seed)) + rand;\n        // 第一个s控制烟花粒子出现时机\n        // 第二个s控制烟花粒子消失的时机\n        m += particle(uv, p, v, s, t)\n            * s(0.0, dt, t)\n            * s(1.0, 1.0 - dt, t);\n    }\n    return m;\n}\n\nfloat fireworks(vec2 uv, vec2 p, float h, float n, float s, float t) {\n    vec2 p1 = p1(p, h, t);\n    float e = endTime(h);\n    return explosion(uv, p1, s, n, t - e * 0.9);\n}\n\nfloat distLine(vec2 p, vec2 a, vec2 b) {\n\tvec2 pa = p - a;\n    vec2 ba = b - a;\n    float t = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * t);\n}\n\nfloat line(vec2 uv, vec2 a, vec2 b, float w) {\n    return w / distLine(uv, a, b);\n}\n\nfloat shaft(vec2 uv, vec2 p, float w, float h, float t) {\n    vec2 head = p1(p, h, t) + vec2(0.0, 0.3);\n    vec2 tail = p2(p, h, t);\n    float e = 1.0 / 0.95 * endTime(h);\n    vec2 j = (head - uv) * 15.0;\n    float sparkle = 1.0 / dot(j, j);\n    return (line(uv, head, tail, w) + sparkle) * s(e, e - 0.5, t) * 0.5;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\n    float pct = 0.0;\n\n    vec2 st = uv - 0.5;\n    float t = iTime / 10.0;\n    float scale = 10.0;\n    \n    st *= scale;\n    \n    vec3 color = mix(vec3(0.1515, 0.2375, 0.5757), vec3(0.0546, 0.0898, 0.1953), uv.y);\n    \n    for (float i = 0.0; i < 1.0; i += 0.125) {\n        float ti = mod(t * 9.0 - i * 5.0, 4.0);\n        float scale = mix(2.0, 0.3, ti / 4.0);\n        vec2 uvs = st * scale;\n        float rand = N11(i);\n        float h = 10.0 + rand * 4.0;\n        float w = 0.02;\n        float n = 80.0;\n        float s = 0.9;\n        vec2 p = vec2(mix(-8.0, 8.0, rand), -10.0);\n\n        pct += fireworks(uvs, p, h, n, s, ti) + shaft(uvs, p, w, h, ti);\n        vec3 sparkColor = vec3(0.0);\n        rand = N11(rand);\n        sparkColor.x = rand;\n        rand = N11(rand);\n        sparkColor.y = rand;\n        rand = N11(rand);\n        sparkColor.z = rand;\n\n        color += fireworks(uvs, p, h, n, s, ti) * sparkColor + shaft(uvs, p, w, h, ti);\n    }\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}