{"ver":"0.1","info":{"id":"wsVyR3","date":"1603406909","viewed":143,"name":"glooob","username":"adr","description":"...","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["blob","glob","booolg","bloblle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED 0.5\n#define SCALE 1.5\n#define INTENSITY 0.2\n// noise from https://www.shadertoy.com/view/ldscWH\nvec3 hash33(vec3 p) { \n    float n = sin(dot(p, vec3(7, 157, 113)));    \n    return fract(vec3(2097152, 262144, 32768)*n)*2. - 1.;\n}\nfloat tetraNoise(in vec3 p)\n{\n    vec3 i = floor(p + dot(p, vec3(0.333333)) );  p -= i - dot(i, vec3(0.166666)) ;\n    vec3 i1 = step(p.yzx, p), i2 = max(i1, 1.0-i1.zxy); i1 = min(i1, 1.0-i1.zxy);    \n    vec3 p1 = p - i1 + 0.166666, p2 = p - i2 + 0.333333, p3 = p - 0.5;\n    vec4 v = max(0.5 - vec4(dot(p,p), dot(p1,p1), dot(p2,p2), dot(p3,p3)), 0.0);\n    vec4 d = vec4(dot(p, hash33(i)), dot(p1, hash33(i + i1)), dot(p2, hash33(i + i2)), dot(p3, hash33(i + 1.)));\n    return clamp(dot(d, v*v*v*8.)*1.732 + .5, 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    uv +=  2. * INTENSITY * tetraNoise(vec3(SCALE * uv, SPEED * iTime)) - INTENSITY;\n    float noise = tetraNoise(vec3(SCALE * uv, SPEED * iTime));\n    \n    vec4 layers = texture(iChannel0, uv);\n    vec4 shift = texture(iChannel0, vec2(uv.x - 0.05, uv.y + 0.05));\n\n    vec2 circ = 2. * uv - 1.;\n    float val = pow(circ.x, 2.) + pow(circ.y, 2.);\n    val -= 0.1;\n    val *= 5.8;\n    \n    vec3 col = vec3(\n        0.8 + 0.4 * (1. - val),\n        0.3 + 0.4 * (1. - val),\n        0.5 + 0.2 * (1. - val));\n   \tcol = mix(col, vec3(1., 0.9, 0.8), smoothstep(2. * shift.y, 0., 1.));\n    \n    float highlight = floor(mix(shift.y  * val, 0., layers.x) + 0.5);\n    col += highlight;\n    col += floor(mix(shift.w * (1. - val), 0., layers.x) + 0.25);\n    \n    const vec3 background = vec3(0.5, 1., 1.);\n    if (val < 0.) {\n        col = background;\n        \n    }\n    if (val > 1.) {\n        col = background;\n        \n    }\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = 2.0 * uv - 1.0;\n    uv2 = abs(uv2);\n    float val = 1.0 - (pow(uv2.x, 2.0) + pow(uv2.y, 2.0));\n    vec4 col = vec4(0);\n    col.x = 2.0 * pow(sin(15.0 * val), 4.0);\n    col.x = clamp(col.x, 0.0, 1.0);\n    col.y = clamp(sin(12.0 * val), 0.0, 1.0);\n    col.y += clamp(sin(14.2 * val), 0.0, 1.0);\n    col.z = uv.x;\n    col.w = clamp(sin(21.5 * val), 0.0, 1.0);\n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}