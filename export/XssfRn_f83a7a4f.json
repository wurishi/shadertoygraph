{"ver":"0.1","info":{"id":"XssfRn","date":"1494611548","viewed":223,"name":"Lights in the smoke","username":"liamegan","description":"Using cellular voronoi noise in fun ways","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","cellular","cells","cellularnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvec4 cells(in vec2 uv) {\n    \n    vec2 i_uv = floor(uv);\n    vec2 f_uv = fract(uv);\n    \n    float m_dist = 2.;\n    float second_m_dist = 0.0;\n    float attr = 0.0;\n    \n    for( int y = -1; y<= 1; y++ ) {\n        for( int x = -1; x <= 1; x++ ) {\n            vec2 neighbour = vec2(float(x), float(y));\n            vec2 n = i_uv + neighbour;\n            vec2 point = random2(i_uv + neighbour);\n            vec2 point2 = random2(i_uv + neighbour);\n            vec2 point3 = random2(i_uv + neighbour);\n            point = 0.5 + 0.5*sin(iTime * 0.5 + 6.2831*point);\n            point2 = 0.5 + 0.5*sin(iTime * 0.253 + 9.2831*point2);\n            point3 = 0.5 + 0.5*sin(iTime * 0.1 + 3.2831*point3);\n            vec2 diff = neighbour + point - f_uv;\n            vec2 diff2 = neighbour + point2 - f_uv;\n            vec2 diff3 = neighbour + point3 - f_uv;\n            \n            m_dist = min(m_dist, length(diff)*m_dist);\n            m_dist = min(m_dist, length(diff2)*m_dist);\n            m_dist = min(m_dist, length(diff3)*m_dist);\n            \n        }\n    }\n    \n    attr = smoothstep(0.01, 0.999, second_m_dist);\n    \n    return vec4(sqrt(m_dist*5.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (gl_FragCoord.xy -.5 * iResolution.xy) / iResolution.y;\n//    uv.x -= iTime / 10.;\n    \n    fragColor = 1.-smoothstep(0., 0.9, cells(uv * 5.));\n}","name":"Image","description":"","type":"image"}]}