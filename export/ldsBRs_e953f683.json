{"ver":"0.1","info":{"id":"ldsBRs","date":"1497640490","viewed":1295,"name":"Music Vinylizer","username":"rodolphito","description":"Amazing.","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["music","visualizer","good","verygood"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfSRj","filepath":"https://soundcloud.com/jaurhead/prometheus-trailer-music","previewfilepath":"https://soundcloud.com/jaurhead/prometheus-trailer-music","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n#define HASHSCALE1 .1031\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\n#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)\n\nfloat hash11(float p)\n{\n\tvec3 p3  = fract(vec3(p) * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * HASHSCALE3);\n\tp3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * HASHSCALE3);\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n\n}\nvec3 hash31(float p)\n{\n   vec3 p3 = fract(vec3(p) * HASHSCALE3);\n   p3 += dot(p3, p3.yzx+19.19);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}\n\n\nvec3 decode(vec2 n)\n{\n    float z=.5-dot(n,n);\n    return vec3(n*sqrt(z+.5),z)*2.;\n}\n\nvec2 encode(vec3 n)\n{\n    return n.xy/sqrt(n.z*2.0+2.0);\n}\n\nvec3 r(vec3 v, vec2 r)\n{\n\tvec4 t = sin(vec4(r, r + PI*0.5));\n    vec4 g = vec4(v, dot(v.yz, t.yw));\n    return vec3(g.x * t.z - g.w * t.x,\n                g.y * t.w - g.z * t.y,\n                g.x * t.x + g.w * t.z);\n}\n\nvoid mainImage(out vec4 o, vec2 i)\n{\n    vec2 size = iResolution.xy * 0.5;\n\tvec2 uv = (i - size) / size.y;\n    vec3 s = decode(uv);\n    vec2 m = 2.0 * (iMouse.xy - size) / size.y;\n    float a = atan(uv.x, uv.y) / PI;\n    float g = hash11(floor(a*10.0));\n    float f1 = texture(iChannel1, vec2(hash11(floor(a * 30.0)),0.2)).r;\n    float f = texture(iChannel1, vec2(length(uv)*0.3 + max(f1,0.5) * (g + 0.5) * 0.1,0.2)).r;\n    s = r(s, vec2(0.05,-0.1) + vec2(f * pow(2.0 - length(uv), 2.0)));\n    vec2 nuv = encode(s);\n\t//o = texture(iChannel0, nuv * 0.5 + 0.5);\n    o = (nuv - uv).yxyx;\n}","name":"Image","description":"","type":"image"}]}