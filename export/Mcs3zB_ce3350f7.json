{"ver":"0.1","info":{"id":"Mcs3zB","date":"1703228031","viewed":34,"name":"ShaderArt1","username":"rghdrizzle","description":"Beginner shader art learnt from a tutorial","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t)\n        {\n    vec3 a = vec3(0.500, 0.500 ,0.500);\n    vec3 b = vec3(0.500, 0.500 ,0.500);\n    vec3 c = vec3(1.000 ,1.000 ,1.000);\n    vec3 d = vec3(0.000, 0.333 ,0.667);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n        uv.x *= iResolution.x/iResolution.y;\n        vec2 uv0 = uv;\n        vec3 finalcol = vec3(0);\n        \n        for(float i=0.0;i<4.;i++){\n        \n            uv *= 1.7;\n            uv = fract(uv);\n            uv -= 0.5;\n            float d = length(uv) * exp(-length(uv0));\n            vec3 col = palette(length(uv0) + i*.4* iTime*.9);\n            d = (sin(d*8. + iTime)* cos(d*8.+iTime)+mod(d,0.5))/8.;\n            d= abs(d);\n            d=pow(0.01/d,2.0);\n            finalcol += col * d;\n            \n            }\n            fragColor = vec4(finalcol,1);\n}","name":"Image","description":"","type":"image"}]}