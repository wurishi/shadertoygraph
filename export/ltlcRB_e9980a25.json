{"ver":"0.1","info":{"id":"ltlcRB","date":"1505352433","viewed":119,"name":"Hexa bla","username":"isak","description":"Hexagon distance function with character","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdfsdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define bg_color vec4(0.0)\n#define red vec4(1,0,0,1)\n#define blue vec4(0,0,1,1)\n#define green vec4(0,1,0,1)\n#define white vec4(1,1,1,1)\n#define d_pix (1.0/iResolution.y)\n\n\n#define pi 3.14159265358979323846\n\n\n\nfloat plot(float d) {\n\treturn smoothstep(8.0 / iResolution.y, 0.0, abs(d));\n}\n\nfloat segment(vec2 p, vec2 a, vec2 b) {\n    vec2 ab = b - a, ap = p - a;\n    return length(ap - ab * clamp(dot(ab, ap) / dot(ab, ab), 0.0, 1.0));\n}\n\nmat2 rot(float a){\n    float c = cos(a); float s = sin(a);\n \treturn mat2(c, -s, s, c);\n}\n\nfloat point(vec2 uv, vec2 p){\n    return smoothstep(14.0*d_pix, 2.0*d_pix, length(uv - p));\n}\n\nvec2 hexa_vec(vec2 uv, float a){\n    float w = 0.5*a; // Size\n    \n    mat2 R = rot(2.0*pi/3.0); // Edge relative rotation\n    \n    vec2 dir_1 = vec2(1.0, 0.0); // Edge directions ...\n    vec2 dir_2 = R*dir_1;\n    vec2 dir_3 = R*dir_2;\n    \n    vec2 d_vec = + dir_1*clamp( dot(uv, dir_1), -w, w) \n                 + dir_2*clamp( dot(uv, dir_2), -w, w) \n                 + dir_3*clamp( dot(uv, dir_3), -w, w) ;\n    return d_vec;\n}\n\nfloat d_hexagon(vec2 uv, float a){\n    float w = 0.5*a; // Size\n    \n    mat2 R = rot(2.0*pi/3.0); // Edge relative rotation\n    \n    vec2 dir_1 = vec2(1.0, 0.0); // Edge directions ...\n    vec2 dir_2 = R*dir_1;\n    vec2 dir_3 = R*dir_2;\n    \n    float d = length(uv - dir_1*clamp( dot(uv, dir_1), -w, w) \n                        - dir_2*clamp( dot(uv, dir_2), -w, w) \n                    \t- dir_3*clamp( dot(uv, dir_3), -w, w) );\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0*(fragCoord.xy / iResolution.xy) - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 2.0;\n    \n    float size = 1.0;\n    float dist = d_hexagon(uv, size);\n\n    \n    fragColor = bg_color;\n    fragColor += vec4(tanh(dist), 0.5, 0,1) * sin(50.0 * dist);\n    fragColor += 0.5*white*smoothstep(100.0*d_pix, 0.0, dist );\n    \n    \n    vec2 mo = 2.0*(iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    fragColor += (white - fragColor)*plot(segment(uv, mo, hexa_vec(mo,size)));\n    fragColor += (red - fragColor)*point(uv, hexa_vec(mo, size));\n\n    \n}","name":"Image","description":"","type":"image"}]}