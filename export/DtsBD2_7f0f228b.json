{"ver":"0.1","info":{"id":"DtsBD2","date":"1693570477","viewed":45,"name":"Frost","username":"PaulTony","description":"Testing generation of diffusion limited aggregation.\nCode based on: https://www.shadertoy.com/view/ldK3RW\nTo generate a different pattern press \"Reset time\"","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["frost","brownianmotion","diffusionlimitedaggregation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    fragColor = vec4(vec3(texture(iChannel1, uv).y),0.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0,0,0,1);\n    // define initial shape\n    if (iFrame < 2)\n    {\n        if(length(fragCoord-iResolution.xy*0.5) < 2.)\n            fragColor.xy = vec2(1.);\n           return;\n    }\n    \n    vec2 p = fragCoord.xy;\n    vec4 c  = texture(iChannel0, (p + vec2( 0, 0)) / iResolution.xy);\n    vec4 n  = texture(iChannel0, (p + vec2( 0, 1)) / iResolution.xy);\n    vec4 ne = texture(iChannel0, (p + vec2( 1, 1)) / iResolution.xy);\n    vec4 e  = texture(iChannel0, (p + vec2( 1, 0)) / iResolution.xy);\n    vec4 se = texture(iChannel0, (p + vec2( 1,-1)) / iResolution.xy);\n    vec4 s  = texture(iChannel0, (p + vec2( 0,-1)) / iResolution.xy);\n    vec4 sw = texture(iChannel0, (p + vec2(-1,-1)) / iResolution.xy);\n    vec4 w  = texture(iChannel0, (p + vec2(-1, 0)) / iResolution.xy);\n    vec4 nw = texture(iChannel0, (p + vec2(-1, 1)) / iResolution.xy); \n    \n    fragColor.y = clamp(c.y + c.x * (n.y + ne.y + e.y + se.y + s.y + sw.y + w.y + nw.y), 0., 1.);\n    \n    // diffusion\n    fragColor.x = clamp(\n    \t(n.x + e.x + s.x + w.x ) * step(1.-DIFFUSION_DENSITY,gold_noise(p,iTime)),\n         0., 1.);\n\n    fragColor.x *= 1. - fragColor.y;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0,0,0,1);\n    // define initial shape\n    if (iFrame < 2)\n    {\n        if(length(fragCoord-iResolution.xy*0.5) < 2.)\n            fragColor.xy = vec2(1.);\n           return;\n    }\n    \n    vec2 p = fragCoord.xy;\n    vec4 c  = texture(iChannel0, (p + vec2( 0, 0)) / iResolution.xy);\n    vec4 n  = texture(iChannel0, (p + vec2( 0, 1)) / iResolution.xy);\n    vec4 ne = texture(iChannel0, (p + vec2( 1, 1)) / iResolution.xy);\n    vec4 e  = texture(iChannel0, (p + vec2( 1, 0)) / iResolution.xy);\n    vec4 se = texture(iChannel0, (p + vec2( 1,-1)) / iResolution.xy);\n    vec4 s  = texture(iChannel0, (p + vec2( 0,-1)) / iResolution.xy);\n    vec4 sw = texture(iChannel0, (p + vec2(-1,-1)) / iResolution.xy);\n    vec4 w  = texture(iChannel0, (p + vec2(-1, 0)) / iResolution.xy);\n    vec4 nw = texture(iChannel0, (p + vec2(-1, 1)) / iResolution.xy); \n    \n    fragColor.y = clamp(c.y + c.x * (n.y + ne.y + e.y + se.y + s.y + sw.y + w.y + nw.y), 0., 1.);\n    \n    // diffusion\n    fragColor.x = clamp(\n    \t(n.x + e.x + s.x + w.x ) * step(1.-DIFFUSION_DENSITY,gold_noise(p,iTime)),\n         0., 1.);\n\n    fragColor.x *= 1. - fragColor.y;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// https://www.shadertoy.com/view/ltB3zD\n#define DIFFUSION_DENSITY .54\nconst float PHI = 1.61803398874989484820459; // Î¦ = Golden Ratio \n\nfloat gold_noise(in vec2 xy, in float seed)\n{\nreturn fract(tan(distance(xy*PHI, xy)*seed)*xy.x);\n}\n","name":"Common","description":"","type":"common"}]}