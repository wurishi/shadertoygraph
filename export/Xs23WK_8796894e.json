{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define ITERS 8\n#define SCALE 2.0\n#define SPEED 0.25;\n\nvec3 hsv(float h,float s,float v) {\n\treturn mix(vec3(1.),clamp((abs(fract(h+vec3(3.,2.,1.)/3.)*6.-3.)-1.),0.,1.),s)*v;\n}\n\nfloat col(vec2 p, float t) {\n\tfloat a = length(p)-p.x;\n\tfloat b = max(abs(p.x-1.0),abs(p.y-1.0));\n\tfloat c = max(p.x, p.y);\n\tfloat d = b*a;\n\treturn t*0.1 + mix(mix(a, b, sin(t*2.31)*0.5+0.5), mix(c, d, sin(t+1.0)*0.5+0.5), sin(t*0.46)*0.5+0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat aspect = iResolution.x/iResolution.y;\n\tvec2 p = (-1.0+2.0*fragCoord.xy / iResolution.xy);\n\tp.x *= aspect;\n\tp += 1.0;\n\tvec3 c = vec3(0);\n\tfloat t = 5.0+iTime*SPEED;\n\tfor (int j = 0; j < ITERS; j++) {\n\t\tp = abs(p-1.0);\n\t\tfloat h = col(p, t);\n\t\tc += hsv(sin(h*4.0)*0.5+0.5, 1.0, 1.0);\n\t\tp *= SCALE;\n\t}\n\tfragColor = vec4(cos(c*0.3+0.4)*0.5+0.5, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xs23WK","date":"1393564691","viewed":435,"name":"Sacred Geometry","username":"gleurop","description":"Can you tell how much I like bright colours?","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""}}