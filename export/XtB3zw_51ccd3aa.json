{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// use the hardware bilinear filter to do all the work, \n// but remap the uv coords to move along in a kind of 'bumpy' way to give anti-aliased point sampling\n\n// now with 3 splits: on the left, no anti-aliasing. in the middle, smoothstep ('softer'). on the right, linear ('sharper').\n\n#define split (floor(iResolution.x/5.))\n\nvec4 AntiAlias_None(vec2 uv, vec2 texsize) {\n    return texture(iChannel0, uv / texsize, -99999.0);\n}\n\nvec4 AntiAliasPointSampleTexture_None(vec2 uv, vec2 texsize) {\t\n\treturn texture(iChannel0, (floor(uv+0.5)+0.5) / texsize, -99999.0);\n}\n\nvec4 AntiAliasPointSampleTexture_Smoothstep(vec2 uv, vec2 texsize) {\t\n\tvec2 w=fwidth(uv);\n\treturn texture(iChannel0, (floor(uv)+0.5+smoothstep(0.5-w,0.5+w,fract(uv))) / texsize, -99999.0);\t\n}\n\nvec4 AntiAliasPointSampleTexture_Linear(vec2 uv, vec2 texsize) {\t\n\tvec2 w=fwidth(uv);\n\treturn texture(iChannel0, (floor(uv)+0.5+clamp((fract(uv)-0.5+w)/w,0.,1.)) / texsize, -99999.0);\t\n}\n\nvec4 AntiAliasPointSampleTexture_ModifiedFractal(vec2 uv, vec2 texsize) {\t\n    uv.xy -= 0.5;\n\tvec2 w=fwidth(uv);\n\treturn texture(iChannel0, (floor(uv)+0.5+min(fract(uv)/min(w,1.0),1.0)) / texsize, -99999.0);\n}\n\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n\tif (floor(uv.x)==split || floor(uv.x)==split*2. || floor(uv.x)==split*3. || floor(uv.x)==split*4.) { \n        fragColor=vec4(1.); return ; \n    }\n    \n    //uv*=((1.0+sin(iTime*0.5))*5.+1.);\n\t\n\t// rotate the uv with time\t\t\n\tfloat c=cos(iTime*0.1),s=sin(iTime*0.1);\n\tuv=uv*mat2(c,s,-s,c)*0.05;\t\n\t\n\t// sample the texture!\n\tfloat anisotest=1.0; // if you want stretchy pixels, try change this number to 0.1 \n\tuv*=vec2(1.0,anisotest);\n    \n    vec2 tessize = vec2(256.0, 256.0);\n\t\n    if (fragCoord.x<split)\n\t\tfragColor = AntiAlias_None(uv,tessize);\t\n\telse if (fragCoord.x<split*2.)\n\t\tfragColor = AntiAliasPointSampleTexture_None(uv,tessize);\t\n\telse if (fragCoord.x<split*3.)\n\t\tfragColor = AntiAliasPointSampleTexture_Smoothstep(uv,tessize);\t\n\telse if (fragCoord.x<split*4.)\n\t\tfragColor = AntiAliasPointSampleTexture_Linear(uv,tessize);\t\n\telse\n\t\tfragColor = AntiAliasPointSampleTexture_ModifiedFractal(uv,tessize);\n    \n    fragColor = pow(fragColor, vec4(1./2.2));\n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XtB3zw","date":"1427468483","viewed":4256,"name":"Point Sampled AA","username":"candycat","description":"Inspired by https://www.shadertoy.com/view/ldsSRX and https://www.shadertoy.com/view/ldlSzS","likes":31,"published":1,"flags":0,"usePreview":1,"tags":["antialias"],"hasliked":0,"parentid":"","parentname":""}}