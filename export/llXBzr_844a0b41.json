{"ver":"0.1","info":{"id":"llXBzr","date":"1510768083","viewed":223,"name":"river ripple","username":"ukeyshima","description":"First post","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    float boxDistFunc(vec3 p,vec3 b,vec3 c){\n        return length(max(abs(p-c)-b,0.0));\n    }\n    float floorDistFunc(vec3 p){\n        vec3 q=p;\n        q.xz=mod(p.xz,1.0)-0.5;\n        float width=clamp(sin(-length(floor(p.xz)/2.0)+iTime*4.0)*0.48,0.2,0.48);\n        float height=4.0*(abs(sin(iTime*2.0))+1.0)+width*10.0+length(floor(p.xz))/5.0;\n        return boxDistFunc(q,vec3(width,height,width),vec3(0.0,0.0,0.0));\n    }\n    float distFunc(vec3 p){\n        return floorDistFunc(p);\n    }\n    vec3 genNormal(vec3 p){\n        float d=0.001;\n        return normalize(vec3(\n            distFunc(p+vec3(d,0.0,0.0))-distFunc(p+vec3(-d,0.0,0.0)),\n            distFunc(p+vec3(0.0,d,0.0))-distFunc(p+vec3(0.0,-d,0.0)),\n            distFunc(p+vec3(0.0,0.0,d))-distFunc(p+vec3(0.0,0.0,-d))\n            ));\n    }\n    vec3 getRayColor(inout vec3 ray,inout vec3 origin,out bool hit){\n        float distance=0.0;\n        float rLen=0.0;\n        vec3 rPos=origin;\n        vec3 color=vec3(1.0);\n        float maxDist=1000.0;\n        float marchCount=0.0;\n        for(int i=0;i<150;i++){\n            distance=distFunc(rPos);\n            if(abs(distance)<0.01){\n                if(distance==floorDistFunc(rPos)){\n                    color=vec3(0.7-0.1*abs(sin(length(floor(rPos.xz))/2.0+iTime)),1.0-0.7*abs(sin(length(floor(rPos.xz))/3.0+iTime)),0.9-0.2*abs(sin(length(floor(rPos.xz))+iTime)));\n                }\n                break;\n            }\n            rLen += min(min((step(0.0,ray.x)-fract(rPos.x))/ray.x, (step(0.0,ray.z)-fract(rPos.z))/ray.z)+0.01,distance);\n            \n            rPos=origin+rLen*ray;\n            if(rLen>maxDist){\n                break;\n            }\n            marchCount++;\n        }\n        hit=false;\n    if(abs(distance)<0.01){\n        color+=marchCount/100.0/pow(rLen,2.0);\n        vec3 normal=genNormal(rPos);\n        origin=rPos+normal*0.02;\n        ray=normalize(reflect(ray,normal));\n        hit=true;\n    }\n        return color;\n    }\n    vec3 pixelColor(vec2 p){\n        vec3 cPos=vec3(cos(iTime)*2.0,19.0+cos(iTime/3.0)*5.0,-5.0+sin(iTime/2.0)*5.0);\n        vec3 cDir=vec3(sin(iTime/5.0),-0.5+0.3*cos(iTime),1.0);\n        vec3 cUp=mat3(1.0,0.0,0.0,\n                      0.0,0.0,-1.0,\n                      0.0,1.0,0.0)*cDir;\n        vec3 cSide=cross(cDir,cUp);\n        float depth=1.0;\n        vec3 ray=normalize(cSide*p.x+cUp*p.y+cDir*depth);\n        vec3 origin=cPos;\n        vec3 color=vec3(0.0);\n        float alpha=242.0/255.0;\n        bool hit;\n        for(int i=0;i<3;i++){\n            color+=alpha*getRayColor(ray,origin,hit);\n            alpha*=0.2;\n            if(!hit)break;\n        }\n       return color;\n    }\n    \n    void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n        vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x,iResolution.y);\n        vec3 color=pixelColor(p);\n        fragColor=vec4(color,1.0);\n    }","name":"Image","description":"","type":"image"}]}