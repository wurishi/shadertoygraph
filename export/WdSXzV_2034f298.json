{"ver":"0.1","info":{"id":"WdSXzV","date":"1554362701","viewed":95,"name":"D&D 001 - Mandelbr√∂t","username":"Ryp","description":"Basic stuff","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 black = vec3(0.0,0.0,0.0);\nvec3 blue = vec3(0.0,0.0,1.0);\nvec3 red = vec3(0.2,0.2,0.0);\n\nvec2 isqr(vec2 lhs)\n{\n \treturn vec2(-lhs.y * lhs.y + lhs.x * lhs.x, 2.0 * lhs.x * lhs.y);   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col2 = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    const vec2 brotStart = vec2(-0.761574,-0.0847596);\n    \n    uv = uv * 2.0 - 1.0;\n    uv = uv * abs(sin(1.0 / exp2(1.0 + iTime* 0.5))) + brotStart;\n\tvec2 z = uv;\n\n    vec3 color = col2;\n    int iterations = 1000;\n        \n    vec2 add = vec2(0.0,0.0);\n    for (int i = 0; i < iterations; i++)\n    {\n     \tif (abs(z.y) > 10.f || abs(z.y) > 10.f)\n        {   \n    \t\tcolor = 0.5 + 0.5*cos(float(i)* 0.1+uv.xyx+vec3(0,2,4));\n\n          \tbreak;  \n        }\n\t\t\n       \tvec2 newZ = isqr(add) + uv;\n        add = newZ; // Save prev result\n        z = newZ; // replace current result for next frame\n    }\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}