{"ver":"0.1","info":{"id":"McSGRV","date":"1704405460","viewed":25,"name":"Movable_mask","username":"Rankin","description":"Movable rectangle mask","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Half width for rectangle to illuminate.\n    float aperture = 0.02;\n    // All measured in frames:\n    int on_time = 100;\n    int off_time = 100;\n    int period = on_time + off_time;\n\n    // Start with background color.\n    vec3 col= vec3(1.0, 1.0, 1.0);\n    // Then choose on/off colors for rectangle.\n    vec3 on_color = vec3(0.0, 0.0, 0.0);\n    vec3 off_color = vec3(0.0, 0.0, 0.0);\n\n    // Normalized pixel coordinates (from 0 to 1).\n    vec2 ab = vec2(-0.4,0.35);\n    vec2 uv = fragCoord/iResolution.xy;\n    if (uv.x + ab.x > 0.5 - aperture &&\n        uv.x + ab.x < 0.5 + aperture &&\n        uv.y + ab.y > 0.5 - aperture &&\n        uv.y + ab.y < 0.5 + aperture) {\n        \n        col = on_color;\n        \n    }\n    // Output to screen.\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}