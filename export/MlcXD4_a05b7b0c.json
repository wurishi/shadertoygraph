{"ver":"0.1","info":{"id":"MlcXD4","date":"1479811087","viewed":332,"name":"domain repetition","username":"balkhan","description":"experimenting with de's\ncomment line 8 for another shape","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","domainrepetition","mandelbulb","de"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n*/\n\n#define PI\t\t3.14\n#define I_MAX\t50\n#define E_BULB\t0.001\n#define BULB // comment this line to see something else\n\nfloat\tbulb(vec3 pos);\nfloat\tde(vec3 pos);\nmat4\tlookat(vec3 eye, vec3 target, vec3 up);\nvec2 \tcmult(vec2 a, vec2 b);\nvec4\tmarch(vec3 pos, vec3 dir);\n\n/*\n* Taken from an iq's shader\n*/\n\nvec3 calcNormal( in vec3 pos, float e, vec3 dir)\n{\n    vec3 eps = vec3(e,0.0,0.0);\n\n\treturn normalize(vec3(\n           march(pos+eps.xyy, dir).w - march(pos-eps.xyy, dir).w,\n           march(pos+eps.yxy, dir).w - march(pos-eps.yxy, dir).w,\n           march(pos+eps.yyx, dir).w - march(pos-eps.yyx, dir).w ));\n}\n\nvec3\tcamera(vec2 uv)\n{\n    float   fov = 1.;\n\tvec3    forw  = vec3(0.0, 0.0, -1.0);\n\tvec3    right = vec3(1.0, 0.0, 0.0);\n\tvec3    up    = vec3(0.0, 1.0, 0.0);\n\n    return (normalize((uv.x-0.5) * right + (uv.y-0.5) * up + fov * forw));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4\tcol = vec4(0.0);\n    vec3\tpos = vec3(0.0, 0.0, 0.0);\n    vec3\tlight = vec3(-30.0, 30.0, -20.0);\n\tvec2\tuv = fragCoord.xy / iResolution.xy;\n    vec3\tdir = camera(uv);\n\n    vec4\tinter = (march(pos, dir));\n    vec3\tn = calcNormal(pos, E_BULB, dir);\n    // phong shading\n    if (inter.x < float(I_MAX))\n    {\n        vec3 vd = normalize(light - (pos+inter.w*dir));\n        float vdn = dot(vd, n);\n\t    col.xyz = vec3(1.0, 0.50, .25) * vd + dot(dir, n) * vdn;\n\t    col.xyz += vec3(dot(-dir, 2.0 * vdn * n - vd));\n    }\n   \tfragColor = col;\n}\n\nvec4\tmarch(vec3 pos, vec3 dir)\n{\n    vec2\tdist = vec2(0.0);\n    vec3\tp = vec3(0.0);\n    vec4\tstep = vec4(0.0);\n\n    for (int i = -1; i < I_MAX; ++i)\n    {\n    \tp = pos + dir * dist.y;\n        dist.x = de(p);\n        dist.y += dist.x;\n        if (dist.x < E_BULB)\n           break;\n        step.x++;\n    }\n    step.w = dist.y;\n    return (step);\n}\n\n/*\n*\tMandelbulb DE taken from Syntopia\n*/\n\nfloat\tde(vec3 pos)\n{\n#ifdef\tBULB\n    pos.x = 2.0*sin(pos.x+iTime/2.0);\n    pos.z = 2.0*sin(pos.z+iTime/2.0);\n    pos.y = sin(pos.y+iTime/2.0)+cos(pos.y+iTime/2.0);\n\n    vec3 z = pos;\n    float theta;\n    float phi;\n    float zr;\n\tfloat dr = 1.0;\n\tfloat r = 0.0;\n\tfor (int i = 0; i < 10 ; i++)\n    {\n\t\tr = length(z);\n\t\tif (r > 2.0)\n            break;\n\t\ttheta = acos(z.z/r);\n\t\tphi = atan(z.y, z.x);\n        zr = r * r;\n        zr *= zr;\n        zr *= zr;\n\t\tdr =  zr * 8.0 * dr + .50;\n\t\tzr *= r;\n\t\ttheta = theta * 8.0;\n\t\tphi = phi * 8.0 + 30.0 * cos(iTime/3.0);\n\t\tz = zr*vec3(sin(theta)*cos(phi), sin(phi)*sin(theta), cos(theta));\n\t\tz += pos;\n\t}\n\treturn (0.5*log(r)*r/dr);\n#endif\n#ifndef\tBULB\n    pos.x = cos(pos.x-pos.y+iTime/4.0)*cos(pos.x+pos.y-iTime/4.0);\n    pos.z = cos(pos.z+iTime/4.0)*cos(pos.z-iTime/4.0);\n    pos.y = cos(pos.y-pos.x+iTime/4.0)*cos(pos.y+pos.x-iTime/4.0);\n    return (length(pos)-0.125);\n#endif\n}\n","name":"Image","description":"","type":"image"}]}