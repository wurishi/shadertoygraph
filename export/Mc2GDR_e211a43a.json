{"ver":"0.1","info":{"id":"Mc2GDR","date":"1704105947","viewed":90,"name":"Happy new YEAR","username":"nayk","description":"new year, fireworks, colorful, neon,stars","likes":5,"published":1,"flags":1,"usePreview":0,"tags":["colorful","stars","fireworks","neon","newyear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*originals  https://www.shadertoy.com/view/lslyRn https://www.shadertoy.com/view/7ddGRn https://www.shadertoy.com/view/XfS3Wz*/\n\n#define iterations 17\n#define formuparam 0.53\n\n#define volsteps 20\n#define stepsize 0.1\n\n#define zoom   0.800\n#define tile   0.850\n#define speed  0.000 \n\n#define brightness 0.0015\n#define darkmatter 0.300\n#define distfading 0.730\n#define saturation 0.850\n\n#define AA 1.5/min(iResolution.y,iResolution.x)\n\n\n#define NUM_EXPLOSIONS 20.\n#define NUM_PARTICLES 100.\n#define inv_nparticels (1./NUM_PARTICLES)\n#define PI 3.1415926\n\nfloat Hash11(float t){\n    return fract(sin(t*613.2)*614.8);\n}\nvec2 Hash12(float t){\n  return vec2(fract(sin(t*213.3)*314.8)-0.5,fract(sin(t*591.1)*647.2)-0.5);\n}\n\nvec2 Hash12_Polar(float t){\n    float o = fract(sin(t*213.3)*314.8)*PI*2.0;\n    float r = fract(sin(t*591.1)*647.2);\n    return vec2(sin(o)*r,cos(o)*r);\n}\n\nfloat Explosion(vec2 uv, float t)\n{\n    float fract_t=fract(t);\n    float floor_t=floor(t);\n    float power=0.3+Hash11(floor_t);\n    float sparks=0.;\n    for(float i=0.;i<NUM_PARTICLES;i++)\n    {\n        vec2 dir=Hash12_Polar(i*floor_t)*1.;\n        float inv_d=1./(length(uv-dir*sqrt(fract_t)));\n        float brightness2=mix(0.3,0.09,smoothstep(0.,0.1,fract_t))*(1.0-(0.5+0.5*Hash11(i))*fract_t);\n        float sparkling= .5+.5*sin(t*10.2+floor_t*i);\n        sparks+=power*brightness2*sparkling*inv_nparticels*inv_d;\n    }\n    return sparks;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n    \n}\n\nvec4 texChar(float char, vec2 uv) {\n    vec2 pt = uv/16.0;\n    pt.x += char/16.0;\n    pt.y += 12.0/16.0;\n    return texture(iChannel0, pt);\n}\n\nfloat sdTextBox ( vec2 p, vec2 b, float char ) {\n    float l = sdBox(p,b);\n    vec2 pn = (p.xy / b.xy) * .5 + .5;\n    float lt = (texChar(char, pn).w - 0.5);\n    return max(lt,l); \n}\n\n\nvec3 palette( float t, float speed2 ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d*speed2));\n}\n\nvoid mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 ro, in vec3 rd )\n{\n\t//get coords and direction\n\tvec3 dir=rd;\n\tvec3 from=ro;\n\t\n\t//volumetric rendering\n\tfloat s=0.1,fade=1.;\n\tvec3 v=vec3(0.);\n\tfor (int r=0; r<volsteps; r++) {\n\t\tvec3 p=from+s*dir*.5;\n\t\tp = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold\n\t\tfloat pa,a=pa=0.;\n\t\tfor (int i=0; i<iterations; i++) { \n\t\t\tp=abs(p)/dot(p,p)-formuparam;\n            p.xy*=mat2(cos(iTime*0.02),sin(iTime*0.02),-sin(iTime*0.02),cos(iTime*0.02));// the magic formula\n\t\t\ta+=abs(length(p)-pa); // absolute sum of average change\n\t\t\tpa=length(p);\n\t\t}\n\t\tfloat dm=max(0.,darkmatter-a*a*.001); //dark matter\n\t\ta*=a*a; // add contrast\n\t\tif (r>6) fade*=1.2-dm; // dark matter, don't render near\n\t\t//v+=vec3(dm,dm*.5,0.);\n\t\tv+=fade;\n\t\tv+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance\n\t\tfade*=distfading; // distance fading\n\t\ts+=stepsize;\n\t}\n\tv=mix(vec3(length(v)),v,saturation); //color adjust\n\tfragColor = vec4(v*.005,1.);\t\n}\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(3,10,31))*.5+.5)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//get coords and direction\n\tvec2 uv=fragCoord.xy/iResolution.xy-.5;\n\tuv.y*=iResolution.y/iResolution.x;\n\tvec3 dir=vec3(uv*zoom,1.);\n\tfloat time=iTime*speed+.25;\nvec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec4 O= fragColor;\n   \n\n    vec3 col=vec3(0);    \n\n    for(float i=0.;i<NUM_EXPLOSIONS;i++){\n        float t=iTime*(0.3+0.4*Hash11(i))+i/NUM_EXPLOSIONS;\n        float fract_t=fract(t);\n        float floor_t=floor(t);\n    \n        vec3 color=0.7+0.3*sin(vec3(.34,.54,.43)*floor_t*i);\n        vec2 center = Hash12(i+10.+5.*floor_t);\n        col+=Explosion(uv-center,t)*color;\n    }                    vec2 C=fragCoord;\n O=vec4(0);\n    vec3 p2,q,r=iResolution,\n    d2=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    \n    //background\n    vec3 color = palette(length(p), -iTime*0.4);\n    \n       \n   //year font\n    vec2 font_size = vec2(0.34);\n    \n    vec2 offset = vec2(font_size.x*(3.0*0.5),0.0);\n    offset.x+=0.2*cos(iTime*1.21);\n     offset.y+=0.2*sin(iTime*1.21);\n    float gap = -font_size.x;\n\n    float char2 = sdTextBox(p+offset, font_size, 2.0);\n    offset.x+=gap;\n    \n    float char0 = sdTextBox(p+offset, font_size, 0.0);\n    float d=min(char2,char0);\n    \n    offset.x+=gap;\n    \n    char2 = sdTextBox(p+offset, font_size, 2.0);\n    d=min(d, char2);\n    \n    offset.x+=gap;\n    float char4 = sdTextBox(p+offset, font_size, 4.0);\n    d=min(d, char4);\n    \n    float size = 0.02;\n    float year = smoothstep(size,size-AA+O.y,d+O.y);    \n    \n    // Glow effect\n    float glowStrength = 0.5;\n    float glowSize = 0.014;\n    float glow = smoothstep(size+glowSize, size, d);\n    \n\n    color = mix(color, vec3(1.0), (year + glow * glowStrength));\n\t\n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        p2=g*d2;\n        p2.z+=iTime*0.1;\n        a=10.;\n          float t = mod(iTime*0.1,4.);\n     \n     \n        p2=mod(p2-a,a*2.)-a;\n        s=5.;\n       \n        for(int i=0;i++<8;){\n            p2=.3-abs(p2);\n           \n            p2.x<p2.z?p2=p2.zyx:p2;\n            p2.z<p2.y?p2=p2.xzy:p2;\n             \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p2=abs(p2)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    60,\n                    8.+cos(iTime*.5)*1.\n                 )*color;\n         }\n         g+=e=length(p2.yz)/s;\n    }\n\tvec3 from=vec3(1.,.5,0.5)*O.xyz;\n\tfrom+=vec3(time*2.,time,-2.);\n\t\n\t\n\tmainVR(fragColor, fragCoord, from, dir);\n    fragColor+=vec4(O.xyz*col,1.);\n}\n","name":"Image","description":"","type":"image"}]}