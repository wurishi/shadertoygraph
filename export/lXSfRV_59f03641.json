{"ver":"0.1","info":{"id":"lXSfRV","date":"1729686548","viewed":93,"name":"Trilines","username":"JennySchub","description":"Tri","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["tri"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIZE 130.\n#define minScale 0.5\n#define THIC 10.\n#define movement 30.\n\n#define PI 3.14159265358\n#define Y_DIFF 0.5*SIZE\n#define X_DIFF sqrt(SIZE*SIZE*0.75)\n#define DIFF vec2(X_DIFF, Y_DIFF)\n\nfloat line(in vec2 p, in vec2 a, in vec2 b) {\n\tvec2 ba = b - a;\n\tvec2 pa = p - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n\treturn length(pa - h * ba) + p.y*0.01;\n}\n\nfloat smoothThresh(float v, float t){\n    return 1.-smoothstep(t-1., t+1., v);\n}\n\nvec3 mapColor(float v){\n    return vec3(\n\t\tsin((v-.6)),\n\t\tsin((v)),\n\t\tsin((v+.6))\n\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 tuv = mod(fragCoord + vec2(iTime*movement, -iTime*movement), DIFF*2.);\n    \n    float timing = (uv.x+uv.y)*2.+iTime;\n    float scaling = (cos(timing)+1.)*0.5*(1.-minScale) + minScale;\n    scaling*=0.5;\n    vec2 center = vec2(X_DIFF, Y_DIFF*0.7771067811865476);\n    float b=0.;\n    vec2 offset = vec2(X_DIFF*scaling, -Y_DIFF*scaling);\n\n    for(float i=0.; i<1.5; i++){\n      \n    // vertical\n        b += smoothThresh(line(tuv, center, center-vec2(0.,-SIZE*scaling)),THIC);\n    // to right\n        b += smoothThresh(line(tuv, center+offset, center),THIC);\n    // to left\n        b += smoothThresh(line(tuv, center+offset*vec2(-1.,1), center),THIC);\n        tuv = mod(tuv+DIFF, DIFF*2.);\n    }\n\n    // Time varying pixel color\n    vec3 col = clamp(b, 0., 1.)*vec3(mapColor(12.-scaling*10.));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}