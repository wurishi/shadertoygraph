{"ver":"0.1","info":{"id":"MfsXRs","date":"1705615039","viewed":51,"name":"ant highway","username":"Zokalyx","description":"recreation of a shader found in the book of shaders, for learning purposes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["animated","abstract","ants"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: zokalyx\n// Title: ant highway\n// Comment: recreation of a shader found in the book of shaders, for learning purposes\n\n#define ROWS 20.0\n#define COLS 80.0\n\n// https://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat rect(in vec2 size, in vec2 _st) {\n    vec2 condition = step(_st, 0.5 - 0.5 * size) - step(_st, 0.5 + 0.5 * size);\n    return condition.x * condition.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy / iResolution.y;\n\tst *= vec2(COLS, ROWS);\n    \n    float speed = 20.0 * rand(vec2(0.0, floor(st.y))) + 10.0;\n    st.x += speed * iTime;\n    float show = step(0.5, rand(floor(st)));\n    \n    st = fract(st);\n\n    vec3 color = 1.0 - show * vec3( rect( vec2(1.05, 0.5), st ) );\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}