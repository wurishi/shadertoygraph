{"ver":"0.1","info":{"id":"mllcRl","date":"1691069448","viewed":235,"name":"cheap bluenoise 2","username":"FabriceNeyret2","description":"( easy extend to nD )\nleft to right:  with noise ,   pseudo-blue with LOD0 - LOD1   ,  with 9 points FD  ,       ref blue noise.\ncenter line: thresholding.\nbottom half: zoom.\nâ†’ Not so good for thresholding.","likes":19,"published":3,"flags":0,"usePreview":0,"tags":["hash","bluenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// various variants             https://www.shadertoy.com/view/tllcR2\n// LOD0-LOD1 on 9 points + FFT  https://www.shadertoy.com/view/7dyfzW\n   \n#define H(p)  fract(sin(mod(dot(p, vec2(12.9898, 78.233)),6.283)) * 43758.5453)\n\n#define blue(p) (  \\\n          (  H(p+vec2(-1,-1)) + H(p+vec2(0,-1)) + H(p+vec2(1,-1))  \\\n           + H(p+vec2(-1, 0)) - 8.* H( p )      + H(p+vec2(1, 0))  \\\n           + H(p+vec2(-1, 1)) + H(p+vec2(0, 1)) + H(p+vec2(1, 1))  \\\n          ) *.5/9. *2.1 +.5 )\n   \n#define T(l) texelFetch(iChannel0, (ivec2(u)%256) >> l, l )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    u -= .5;\n    if ( int(u) % int(iResolution/4.) == 0 ) { O = vec4(1,0,0,1); return; } // red separator\n    vec2 U = u/iResolution.xy;\n    int i = int(4.*U.x); \n    if (U.y<.5) u = floor(u/2.);          // bottom: zoom\n    \n    O =  i==0 ? vec4(H(u))                // left to right: white, cheapblue1, 2, ref blue\n       : i==1 ?.5 + (T(0) -  T(1))\n       : i==2 ? vec4(blue(u))\n       :        texelFetch(iChannel1, ivec2(u)%1024,0);\n    \n    if (abs(U.y-.5)<.25) O = step(.9,O);  // center line: thresholding\n    \n    O = O.rrrr;                           // grey\n}","name":"Image","description":"","type":"image"}]}