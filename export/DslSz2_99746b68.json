{"ver":"0.1","info":{"id":"DslSz2","date":"1669227137","viewed":139,"name":"Fence Squeezer","username":"SnoopethDuckDuck","description":"e","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"DssXzj","parentname":"broken version looks cool"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n#define thc(a,b) tanh(a*cos(b))/tanh(a)\n\nfloat seg( in vec2 p, in vec2 a, in vec2 b, float o )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    //h += 0.01 * cos(4. * iTime + 16. * h);\n    return (4. + 3.4 * thc(4., pi * o + .75 * length(ba) * pi * h)) * length( pa - ba*h );\n}\n\nfloat bleh(vec2 uv) { \n    uv.x += 0.1 * iTime;\n\n    float sc = 16.;\n    uv *= sc;\n    float ix = floor(uv.x);\n    uv.x = fract(uv.x) - 0.5;\n    \n    float t = 1.5 * iTime + 0.25 * ix;\n    float o = 0.125 * cos(0.125 * uv.y + 1.5 * t);\n    uv.x += o;\n    uv.y -= 0.1 * sc * sin(uv.x);\n    \n    vec2 p = vec2(0, 0.35 * sc * cos(pi * t * 0.125));\n    vec2 q = vec2(0, 0.15 * sc * cos(pi * t * 0.3 - 0.25 * pi));\n    float d = seg(uv, p, q, ix);\n    // no smoothstep because modified seg() function isn't an SDF\n    return step(d, (0.02 + 0.015 * cos(0.5 * t)) * sc);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 uv = (fragCoord - 0.5 * res) / res.y;\n\n    float s = 0., s2 = 0.;\n    float n = 5.;\n    float zm = mix(2., 1., tanh(0.4 * iTime));\n    for(float i = 0.; i < n; i++) {\n        s  += bleh(uv * (zm + 0.02 * i / n)) / n;\n        s2 += bleh(uv * (zm + 0.02 * i / n) - vec2(.015,0)) / n;\n    }\n    vec3 col = (1.-s) * mix(vec3(210), vec3(240), 0.5 - uv.y) / 255.;\n    vec3 col2 = (0.5 + 0.5 * cos(0.75 * iTime)) * vec3(1,.5,.15);\n    col = mix(col, (uv.x + 0.5 * res.x/res.y) * col2, s2);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}