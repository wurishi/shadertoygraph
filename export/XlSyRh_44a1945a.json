{"ver":"0.1","info":{"id":"XlSyRh","date":"1507286038","viewed":121,"name":"Sin Circles","username":"pedrogarlaschi","description":"Trying to learn Shaders with some simple playgrounds","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spheres"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Circle(U,p,r,b) smoothstep(r , r - (b) , length(U - (p)))\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n\tvec2 R = iResolution.xy,\n         U = u / R.y;\n \n    float  n = 20.,\n           T = abs(sin(iTime)) * length(U - abs(sin(iTime) / 2.)),\n           t1 = 0.,\n           t2 = 0.,\n    \t   b = 2./iResolution.y;\n   \n    U -= ( floor( U * n ) + .5 ) / n;\n    \n    float c = Circle( U, t1, .015 + (.01 * T) , b) -  Circle( U, t1, .01 * (1. - T) , b);\n    \n    O =  vec4(c);\n}\n\n/*float Circle(vec2 uv , vec2 p , float r , float b)\n{\n    float d = length(uv - p);\n    float c = smoothstep(r , r - b , d);\n    \n    return c;\n}*/\n\n\n/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    float c = .0;\n    \n    vec2 p;\n    \n    int lin = 20;\n    int col = 20;\n    \n    float xd = 1.0 / float(lin); \n    xd *= iResolution.x / iResolution.y;\n    \n    float yd = 1.0 / float(lin); \n    \n    float t1 = abs(sin(iTime)) * (1.0 - length((fragCoord.xy / iResolution.xy) - 0.5));\n    \n    \n    for(int x = 0;x < col;x++)\n    {\n        for(int y = 0;y < lin;y++)\n        {\n\n           p.x = (xd / 2.0) + (float(x) * xd);\n           p.y = (yd / 2.0) + (float(y) * yd);\n           \n           c += Circle(uv , p,0.01 + (0.02 * t1),0.005);\n        }\n        \n    }\n    \n    float t2 = 1.0 - abs(sin(iTime));\n    \n     for(int x = 0;x < col;x++)\n    {\n        for(int y = 0;y < lin;y++)\n        {\n\n           p.x = (xd / 2.0) + (float(x) * xd);\n           p.y = (yd / 2.0) + (float(y) * yd);\n           \n           c -= Circle(uv , p,0.01 +(0.01 * t2),0.01);\n        }    \n    }\n    \n    fragColor = vec4(vec3(c) , 1);\n}*/\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}