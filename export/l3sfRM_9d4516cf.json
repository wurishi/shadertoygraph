{"ver":"0.1","info":{"id":"l3sfRM","date":"1728207544","viewed":24,"name":"Distorted Lines [Epilepsy Warn]","username":"nextrix","description":"inspired by the snares on this edit:\nhttps://www.instagram.com/p/C_vxUreuD80/","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["distorted"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// color shit\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 uv = I/iR.xy, uv0 = uv;\n    \n    // girlscam on video\n    float girlscam = hash21mybeloved(vec2(uv.y *  .04, iTime * 0.1)) - .5;\n    girlscam *= girlscamamnt / 100.;\n    vec2 girlscamUv = vec2(uv.x - girlscam / 2., uv.y);\n    \n    // video + grayscale\n    vec3 tex = texture(iChannel0, girlscamUv).rgb;\n    float gray = (tex.r + tex.g + tex.g) / 3.;\n    \n    // distort lines by video\n    uv.x *= mix(1., smin(tex.r, gray, mod(round(iTime), 3.)), distortamnt * .001);\n    \n    // girlscam on lines\n    girlscamUv = vec2(uv.x - girlscam, uv.y);\n    \n    // col\n    tex = clamp(tex / mod(iTime, iTime / 2.),0.25,1.);\n    \n    // color correction\n    vec3 col = mix(tex, vec3(gray / tex), grayscale) * texture(iChannel1, girlscamUv).rgb * brightness;\n    \n    // static\n    float staticshit = hash21mybeloved(uv * iTime);\n    vec3 finalcol = mix(col / smin(col.r, staticshit, clamp(round(iTime) / 6., 0.2, .5)), texture(iChannel0, uv0).rgb, 0.);\n\n    O = vec4(finalcol,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// defines\n#define iM iMouse\n#define iR iResolution\n#define aspect iR.x / iR.y\n\n// lines\n//  * clamp(dot(round(mod(iTime * 2.5, 4.)), iTime * 0.0025) / 4., 1., 2.5)\n#define lines 60.\n#define spacing .8\n#define smoothness 0.3\n#define rot_deg 93.\n#define movespeed .04\n\n// distortion\n#define distortamnt 90.\n\n// waves\n#define waves 4.\n#define wavepow .75\n\n// girlscam\n#define girlscamamnt 0.5\n\n// color\n#define brightness 2.5\n#define grayscale 1.\n\nmat2 r2d (float a) {\n    a = radians(a);\n    return mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n\n// https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nfloat hash21mybeloved(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\n// https://iquilezles.org/articles/smin/\nfloat smin( float a, float b, float k )\n{\n    k *= 2.0;\n    float x = b-a;\n    return 0.5*( a+b-sqrt(x*x+k*k) );\n}\n\n// https://iquilezles.org/articles/voronoilines/\nfloat smoothVoronoi( in vec2 x , in float time)\n{\n    time = round(time); // idk why iTime is undeclared (atleast for me)--so i made iTime an input...\n    x.y += (time / 1.);\n    x.x -= (sin(time) / 6.);\n    vec2 p = floor( x );\n    vec2 f = fract( x );\n\n    float res = 0.0;\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        vec2 b = vec2( i, j );\n        vec2  r = vec2( b ) - f + hash21mybeloved( p + b );\n        float d = dot( r, r );\n\n        res += 1.0/pow( d, 8.0 );\n    }\n    return pow( 1.0/res, 1.0/16.0 );\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// lines\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 uv = I/iR.xy, uv0 = uv;\n    vec2 voro = vec2(smoothVoronoi(uv, iTime));\n    \n    // waves\n    uv.x += sin((uv.y * waves) + round(iTime)) * wavepow / 10.;\n    \n    // distortion\n    uv.x *= aspect;\n    uv *= mix(vec2(1.), (voro), 3.14159 / 8.);\n    uv.x /= aspect;\n    \n    // movement\n    uv.y += round(iTime*5.) + (iTime * movespeed / 15.);\n    \n    // rotation\n    uv -= 0.5;\n    uv *= r2d(rot_deg);\n    uv += 0.5;\n\n    float line = (uv.y - .5) * lines;\n    \n    vec3 col = mix(vec3(0.), vec3(1.), mod(vec3(line), abs(spacing)));\n    \n    //col += vec3(1.,0.,0.);\n\n    col = mix(round(col), col, smoothness);\n\n    O = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}