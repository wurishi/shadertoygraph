{"ver":"0.1","info":{"id":"DsfBDl","date":"1689264965","viewed":76,"name":"[steve] Fake Hopes","username":"import_shader_steve","description":"Inspired by Zach Lieberman and Max Drekker: https://www.instagram.com/p/CuFPZXlIlZ9/?hl=en.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fake","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 FakeLight(vec2 uv, float t) {\n    vec2 id = floor(uv);\n    uv = fract(uv) - .5;\n    // uv = S(0., 1., uv);\n    // uv = S(blur, -blur, uv); \n    \n    if (id == vec2(0., 0.)) {\n        uv = Rot(uv, -45. + t);\n    } else if (id == vec2(0., -1.)) {\n        uv = Rot(uv, 45. + t);\n        uv.y *= -1.;\n    } else if (id == vec2(-1., -1.)) {\n        uv = Rot(uv, 135. + t);\n    } else if (id == vec2(-1., 0.)) {\n        uv = Rot(uv, -135. + t);\n        uv.y *= -1.;\n    }\n    return uv;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    float t = iTime * 100.;\n    t = 0.;\n\n    vec3 col = vec3(0.);\n    \n    //col.rg = uv;\n    \n    vec2 st = FakeLight(uv, t);\n    //col.rg = st;\n    \n    float brightness = atan(st.x, st.y);\n    brightness = Remap01(brightness, -PI, PI);\n    vec3 hue = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col += brightness * hue * 1.5;\n    \n    // 2 black rects covering the left & right parts of the screen\n    if (uv.x < -1. || uv.x > 1.) {\n        col = vec3(0.);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define blur 0.02\n#define PI 3.14159\n#define S(a, b, n) smoothstep(a, b, n)\n\nfloat Remap01(float x, float low, float high) {\n    return clamp((x-low)/(high-low), 0., 1.);\n}\n\nvec2 Rot(vec2 uv, float a) {\n    a = radians(a);\n    return mat2(cos(a), -sin(a), sin(a), cos(a)) * uv;\n}","name":"Common","description":"","type":"common"}]}