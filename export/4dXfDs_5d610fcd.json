{"ver":"0.1","info":{"id":"4dXfDs","date":"1498732362","viewed":146,"name":"Grayscale blending","username":"Schorsch","description":"Simple test, it blends a texture between normal colors and grayscale","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void grayscale(inout vec4 color)\n{\n    float value = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\n    color.r = value;\n    color.g = value;\n    color.b = value;\n}\n\nvoid blendColors(out vec4 color, in vec4 color1, in vec4 color2, in float factor)\n{\n    color = color1 * factor + color2 * (1.0 - factor);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy / iResolution.xy; // Condensing this into one line\n    vec4 texColor = texture(iChannel0,xy); // Get the pixel at xy from iChannel0\n    vec4 gsColor = texColor;\n    grayscale(gsColor);\n    vec4 color;\n    blendColors(color, gsColor, texColor, sin(iTime));\n    fragColor = color; // Set the screen pixel to that color\n}","name":"Image","description":"","type":"image"}]}