{"ver":"0.1","info":{"id":"3t3fzX","date":"1615699990","viewed":157,"name":"Blur filtering - separable","username":"kgussan","description":"[ GPU Optimization Nyumon sample ] Simple Blur filtering by separable method.\n\nreference : Simple Blur filtering by non-separable method\nhttp://www.shadertoy.com/view/Wt3fzX","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["bloom"],"hasliked":0,"parentid":"3l3BzX","parentname":"Bloom effect org "},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//horizontal blur after vertical blue\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col;\n    vec2 uv;\n    vec2 st;\n    //float ratio = iResolution.x/iResolution.y;\n    const float blurSteps = 15.0;\n\tfor(float i = 0.0; i < blurSteps; i++){\n        uv = vec2(fragCoord.x,\n                  fragCoord.y - ((blurSteps-1.0)/2.0) + i );\n        if(uv.y<0.5){\n            uv.y = 0.5;\n        }else if(uv.y>iResolution.y-0.5){\n            uv.y = iResolution.y-0.5;\n        }\n        st = uv / iResolution.xy;\n        col += texture( iChannel0, st );        \n    }\n    col /= blurSteps;\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// create framebuffer size texture data\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, st);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//vertical blur\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col;\n    vec2 uv;\n    vec2 st;\n    const float blurSteps = 15.0;\n\tfor(float i = 0.0; i < blurSteps; i++){\n        uv = vec2(fragCoord.x - ((blurSteps-1.0)/2.0) + i,\n                  fragCoord.y );\n        if(uv.x<0.5){\n            uv.x = 0.5;\n        }else if(uv.x>iResolution.x-0.5){\n            uv.x = iResolution.x-0.5;\n        }\n        st = uv / iResolution.xy;\n        col += texture( iChannel0, st );\n\t}\n    col /= blurSteps;\n    fragColor = col;\n}","name":"Buffer B","description":"","type":"buffer"}]}