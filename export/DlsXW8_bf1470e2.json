{"ver":"0.1","info":{"id":"DlsXW8","date":"1674680471","viewed":114,"name":"Fluid noise","username":"ianertson","description":"Fluid noise","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","waves","fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define T (iTime)\n#define M_PI (3.1416)\n#define TAU (M_PI * 2.0)\n\n\nfloat hash21(vec2 p) {\n    p += 0.509182;\n    p /= vec2(1.0) + abs(p*p);\n    float x = fract(mix(-TAU, TAU, p.x) * TAU) * 1.18918;\n    float y = fract(mix(-TAU, TAU, p.y) * TAU) * 1.11131;\n    float z = fract(3.1928*atan(x, y) + 0.29185);\n    p += vec2(cos(x), sin(y)) * tan(z);\n    return fract(33.291*cos(z*32.28918) * dot(p, vec2(x, y)));\n}\n\nfloat valueNoise(vec2 p) {\n    vec2 id = floor(p);\n    vec2 lv = smoothstep(0.0, 1.0, fract(p));\n    float a = hash21(id);\n    float b = hash21(id+vec2(1.0, 0.0));\n    float c = hash21(id+vec2(0.0, 1.0));\n    float d = hash21(id+vec2(1.0, 1.0));\n    return mix(mix(a, b, lv.x), mix(c, d, lv.x), lv.y);\n}\n\nfloat noise(vec2 p, float freq, int depth) {\n    float n = 0.0;\n    \n    for (int i = 0; i < depth; i++) {\n        n += valueNoise(p*freq);\n        freq *= 2.0;\n        p += n / float(depth);\n    }\n    \n    return n / float(depth);\n\n}\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = fc/R.xy;\n    \n    uv += vec2(cos(T*0.1), sin(T*0.1))*TAU;\n    \n    col = vec3(noise(uv, TAU, 3));\n    \n    O = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}