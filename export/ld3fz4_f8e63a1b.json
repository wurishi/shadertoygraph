{"ver":"0.1","info":{"id":"ld3fz4","date":"1524201844","viewed":224,"name":"3-Bit Colour","username":"zoweb","description":"Converts an input to 3-bit colour. As it can only display ON or OFF for each colour, it spaces the colours out in an attempt to display shades. Can be set to split the colours out into \"pixels\", where each pixel on your display only ever shows one colour.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["color","separate","colour","3bit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Separate the colours out into \"subpixels\"\n//#define SEPARATE\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Get the input texture\n    vec4 text = texture(iChannel0, uv);\n    \n    // Make sure the input is between 0 and 1\n    text = min(vec4(1.), text);\n    text = max(vec4(0.), text);\n    \n    // Output, defaults to black\n    vec4 op = vec4(0.);\n    \n    #ifdef SEPARATE\n    // Because we can display 3 colours, and we want each pixel to display only one colour,\n    // we will mod the coordinate to figure out what colour to display\n    vec2 modded = mod(fragCoord, 3.);\n    // Don't display colours in columns, offset it by y\n    modded.x += modded.y;\n    modded.x = mod(modded.x, 3.);\n    \n    // Calculate the position in our fake display, by removing \"subpixels\"\n    vec2 pos = (fragCoord - modded) / 3.;\n    \n    // Set the output colour depending on the brightness and what colour we want\n         if (modded.x < 1.) { if (fract(pos.x * text.r) < text.r) op.r = 1.; }\n    else if (modded.x < 2.) { if (fract(pos.x * text.g) < text.g) op.g = 1.; }\n    else if (modded.x < 3.) { if (fract(pos.x * text.b) < text.b) op.b = 1.; }\n    #else\n    // Set the output colour. fract finds out the distance we want.\n    if (fract(fragCoord.x * text.r) < text.r) op.r = 1.;\n    if (fract(fragCoord.x * text.g) < text.g) op.g = 1.;\n    if (fract(fragCoord.x * text.b) < text.b) op.b = 1.;\n    #endif\n    \n    fragColor = op;\n}\n","name":"Image","description":"","type":"image"}]}