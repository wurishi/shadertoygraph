{"ver":"0.1","info":{"id":"7l3cWr","date":"1659568689","viewed":120,"name":"Simple water shader","username":"Krug_er","description":"Simple water shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //gerenal wave parameters (frequency, speed, amplitude)\n    float spd, frq, amp, wave1, wave2;\n    spd = 5.0;\n    frq = 40.0;\n    amp = 0.01;\n    \n    //generate the offset based on Y \n    wave1 =   \n    (sin(uv.y*frq+iTime*spd)+\n     cos(uv.y*frq+iTime*spd))*amp;\n     \n    // second wave \n    spd = 0.0;\n    frq = 0.0;\n    amp = 0.01;\n    \n    wave2 =   \n    (sin(uv.x*frq+iTime*spd)+\n     cos(uv.x*frq+iTime*spd))*amp;\n    \n    //apply the offset on the X\n    vec2 pos = vec2(wave1, wave2);\n    uv += pos;\n    \n    //sample the texture based on the new offset \n    vec4 frag_col = texture(iChannel0, uv);\n    \n    //water color tint\n    float tint_fac = 0.5;\n    frag_col.rgb = mix(frag_col.rgb, vec3(33.,98.,227.)/255.0, tint_fac);\n    \n    //make it black if get out of borders (optional)\n    if (uv != clamp(uv, 0.0, 1.0)) {\n        //frag_col = vec4(0.0);\n    }\n    \n    //some cool patterns\n    //frag_col = vec4(wave2*200.0);\n    \n    fragColor = frag_col;\n}","name":"Image","description":"","type":"image"}]}