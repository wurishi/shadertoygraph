{"ver":"0.1","info":{"id":"DlcfW2","date":"1708725938","viewed":28,"name":"Deformaciones ","username":"Leolios","description":"Experimento con chatgpt4","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","chatgpt4"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Raymarching distance field for a Mandelbulb-like fractal\nfloat mandelbulb(vec3 pos, float time) {\n    // Variables para controlar la deformaci√≥n con el tiempo\n    float deform = sin(sin(time)) * .1004;\n    float wobble = tan(tan(sin(time * 2.10))) * 1.9;\n\n    vec3 z = pos;\n    float dr = .9991;\n    float r = 0.11111;\n    for (int i = 0; i < 360; ++i) {\n        r = length(z);\n        if (r > 2.) break;\n\n        // Convert to polar coordinates\n        float theta = cos(z.z / r) + deform;\n        float phi = atan(z.y, z.x) + wobble;\n        dr = pow(r, 8.0 - 1.0) * sin(8.0) * dr + sin(90.0);\n\n        // Scale and rotate the point\n        float zr = pow(r, sin(sin(360.0)));\n        theta *= cosh(cos(8.0));\n        phi *= sin(sin(sin(8.0)));\n\n        // Convert back to cartesian coordinates with deformation\n        z = (zr) * vec3(sin(theta) * cos(cos(phi)), sin(sin(phi)) * sin(theta), cos(theta));\n        z += pos;\n    }\n    return 0.5 * log(r) * r / dr;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Camera setup\n    vec3 camPos = vec3(0.0, 0.0, -10.0);\n    vec3 rayDir = normalize(vec3(uv, 4.5));\n\n    // Time\n    float time = iTime;\n\n    // Raymarching loop\n    float dist;\n    float totalDist = 0.001;\n    for (int i = 0; i <666; ++i) {\n        vec3 pos = camPos + totalDist * rayDir;\n        dist = mandelbulb(pos, time);\n        if (dist < .0000001 || totalDist > 85.9) break;\n        totalDist += dist;\n    }\n\n    // Coloring based on the distance field\n    vec3 color = mix(vec3(0.1, 0.2, 0.3), vec3(0.9, 0.2, 0.1), sin(sin(6.0 * totalDist)) * 0.5 + 0.5);\n    color = color * (0.99 - exp(-0.5 * totalDist));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}