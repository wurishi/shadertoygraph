{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = 0.2 * iTime;\n    vec2 scale = iResolution.xy / 40.0 + abs( mod( time, 8.0 ) - 4.0 );\n    vec2 pos = fragCoord.xy / iResolution.x;\n\n    float v = 0.0;\n    vec2 p = pos * scale - scale/2.0;\n    \n    // x-direction\n    v += sin( ( p.x + 3.0*time ) );\n    \n    // y-direction\n    v += sin( ( p.y + 6.0*time ) / 2.0 );\n    \n    // diagonal\n    v += sin( ( p.x + p.y + 2.0*time ) / 2.0 );\n    \n    // rotational movement\n    p += scale / 2.0 * vec2( sin( time / 3.0 ), cos( time / 2.0 ) );\n    v += sin( sqrt( p.x*p.x + p.y*p.y + 1.0 ) + time );\n    \n    // smoothing\n    //v = v / 2.0;\n\n    // color blending\n    vec3 col = vec3( sin( 0.2 * PI * v ), cos( 0.75 * PI * v ), sin( 0.9 * PI * v ) );\n\n    fragColor = vec4( col * 0.5 + 0.5, 1 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsSXRc","date":"1414295664","viewed":185,"name":"basic.plasma","username":"joates","description":"learning GLSL","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["plasma"],"hasliked":0,"parentid":"","parentname":""}}