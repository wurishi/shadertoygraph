{"ver":"0.1","info":{"id":"cscfzn","date":"1696773538","viewed":47,"name":"Pentagon pulse","username":"selimsheta","description":"pentagon > hexagon","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pentagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t)\n{\n    vec3 a = vec3(0.938, 0.328, 0.718);\n    vec3 b = vec3(0.659, 0.438, 0.328);\n    vec3 c = vec3(0.388, 0.388, 0.296);\n    vec3 d = vec3(2.538, 2.478, 0.168);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nfloat sdPentagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(0.809016994,0.587785252,0.726542528);\n    p.x = abs(p.x);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= vec2(clamp(p.x,-r*k.z,r*k.z),r);    \n    return length(p)*sign(p.y);\n}\n\nfloat sinusoid(float pos, float amplitude, float frequency, float phaseOffset, float exponent){\n    return amplitude * pow(abs(sin(6.28318*frequency*pos+phaseOffset)),exponent);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int numWaves = 10;\n    float wavelengths[numWaves] = float[numWaves](0.1, 0.2, 0.3, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1);\n    float directions[numWaves] = float[numWaves](1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0);\n    \n    vec2 uv0 = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    float d = abs(sdPentagon(-uv0,10.0));\n    \n    float sumSines = 0.0;\n    float sumAmplitudes = 0.0;\n    for (int i = 0; i < numWaves; i++){\n        float biasedCoord = directions[i]*uv0.x+(1.0-directions[i])*uv0.y;\n        float amplitude = wavelengths[i];\n        float frequency = 1.0/wavelengths[i];\n        float speed = sqrt(wavelengths[i]);\n        sumSines += sinusoid(d, amplitude, frequency, directions[i]*iTime*speed, 200.0*sqrt(wavelengths[i]));\n        sumAmplitudes += amplitude*amplitude;\n    }\n    \n    sumSines /= sqrt(sumAmplitudes);\n    vec3 finalColor = palette(0.5*(d+sumSines+iTime));\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}