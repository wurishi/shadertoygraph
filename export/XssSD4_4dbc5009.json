{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// webgl mandelbrot shader test\n// by Franc[e]sco\n\n// it's 5AM and I'm bored\n// also, this code is kinda messy\n\nconst vec2 pan = vec2(-0.41950015, 0.606); // does anyone have a good point to zoom on?\nconst int maxIterations = 256;\nconst vec3 tint = vec3(1.0 / float(maxIterations - 1), 0.0, 0.0);\n\nconst float initialZoom = 3.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float aspectRatio = iResolution.x / iResolution.y;\n\t\n\t// randomly tweaked the calculations for semi-constant zooming\n\t// I don't really know what I'm doing here, but it works\n\tfloat zoom = pow(initialZoom, (-iTime + initialZoom + 1.0) / 5.0);\n\t\n\tvec2 Z = vec2(0), C = vec2(0);\n\tint iterations;\n\tbool ignore = false;\n\t\n\t// convert to texels, center the set on screen and apply zoom\n\tC = (fragCoord.xy / iResolution.xy - 0.5) * zoom; \n\tC -= pan;\n\tC.y /= aspectRatio; // fix aspect ratio\n\t\n\tfor (int i = 0; i < maxIterations; i++) {\n\t\tif (ignore)\n\t\t\tbreak;\n\t\t\n\t\t// complex number operations\n\t\t// Z = Z*Z + C\n\t\tZ = vec2(\n\t\t\tZ.x * Z.x - Z.y * Z.y, \n\t\t\tZ.x * Z.y * 2.0\n\t\t) + C; // apply panning\n\t\t\n\t\t// stop immediately if the point is not in the Mandelbrot set (which is 4x4)\n\t\t// dot product of the same vector = length of the vector to the power of two\n\t\tif (Z.x * Z.x + Z.y * Z.y >= 4.0)\n\t\t\tignore = true;\n\t\t\n\t\titerations = i;\n\t}\n\t\n\tif (iterations == maxIterations - 1) {\n\t\tfragColor = vec4(1.0, 1.0, 1.0, 0.0);\n\t\treturn;\n\t}\n\t\n\tfragColor = vec4(tint.xyz * float(iterations), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XssSD4","date":"1401331124","viewed":821,"name":"WebGL Mandelbrot Test","username":"francesco149","description":"A simple mandelbrot test with the best performance I could come up with. Watch as float runs out of precision as the zoom gets deeper :P","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""}}