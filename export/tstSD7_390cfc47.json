{"ver":"0.1","info":{"id":"tstSD7","date":"1615141226","viewed":86,"name":"Next Gen Clock","username":"Tesselator","description":"clock shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 tmat(vec2 t)\n{\n  mat3 r;\n  r[0] = vec3(1.0, 0.0, 0.0);\n  r[1] = vec3(0.0, 1.0, 0.0);\n  r[2] = vec3(t, 1.0);\n  return r;\n}\n\nmat3 rmat(float a)\n{\n    mat3 r;\n    float s = sin(a);\n    float c = cos(a);\n    r[0] = vec3(c, s, 0.0);\n    r[1] = vec3(-s, c, 0.0);\n    r[2] = vec3(0.0, 0.0, 1.0);\n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float R = 0.5 * min(iResolution.x, iResolution.y) - 10.0;\n    float l1 = R * 0.1;\n    float l2 = R * 0.2;\n    float W = 2.0;\n    \n    float time = iDate.w;\n    \n    float hours = time / 3600.0;\n    float sec = time - trunc(hours) * 3600.0;\n    float minutes = sec / 60.0;\n    sec = sec - trunc(minutes) * 60.0;\n    \n\tmat3 t = tmat(-iResolution.xy * 0.5);\n    mat3 hm = rmat(radians(-90.0 + hours / 12.0 * 360.0)) * t;\n    vec3 hp = hm * vec3(fragCoord, 1.0);\n    mat3 mm = rmat(radians(-90.0 + minutes / 60.0 * 360.0)) * t;\n    vec3 mp = mm * vec3(fragCoord, 1.0);\n    mat3 sm = rmat(radians(-90.0 + sec / 60.0 * 360.0)) * t;\n    vec3 sp = sm * vec3(fragCoord, 1.0);\n    \n    vec3 col = vec3(1.0);\n    if(hp.x > 0.0 && hp.x < R && abs(hp.y) < 5.0) \n        col = mix(vec3(0.0), col, smoothstep(2.0, 4.0, abs(hp.y)));\n    if(mp.x > 0.0 && mp.x < R && abs(mp.y) < 3.0) \n        col = mix(vec3(0.0), col, smoothstep(1.0, 2.0, abs(mp.y)));\n    if(sp.x > 0.0 && sp.x < R && abs(sp.y) < 2.0) \n        col = mix(vec3(0.0), col, smoothstep(0.0, 1.0, abs(sp.y)));\n    \n    float d = abs(distance(fragCoord, iResolution.xy * 0.5) - R - 5.0);\n    if (d < 2.0) col = mix(vec3(0.0), col, smoothstep(0.0, 1.0, d)); \n    \n    for(float i = 0.0; i < 60.0; i++)\n    {\n\t    sm = rmat(radians(-90.0 + i / 60.0 * 360.0)) * t;\n    \tsp = sm * vec3(fragCoord, 1.0);\n        if(sp.x > 0.9 * R && sp.x < R && abs(sp.y) < 2.0) \n            col = mix(vec3(0.0), col, smoothstep(0.0, 1.0, abs(sp.y)));\n    }\n    \n    for(float i = 0.0; i < 12.0; i++)\n    {\n\t    sm = rmat(radians(-90.0 + i / 12.0 * 360.0)) * t;\n    \tsp = sm * vec3(fragCoord, 1.0);\n        if(sp.x > 0.8 * R && sp.x < R && abs(sp.y) < 3.0) \n            col = mix(vec3(0.0), col, smoothstep(0.0, 2.0, abs(sp.y)));\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}