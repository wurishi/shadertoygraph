{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define isScaled\t0\n#define isRippled\t1\n#define\tisBlurred\t1\n\nconst float PI = 3.14159265359;\n\nfloat getWave( float len )\n{\n\tfloat wave = sin(15.0 * PI * (len - iTime * .1));\n\treturn wave * wave;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv \t\t= fragCoord.xy / iResolution.xy;\n\t\t\n\tfloat pixelSize\t= 2.0 / iResolution.x;\n\t\n\t#if isScaled\n\tmat2 scale\t\t= mat2( -2., 0, 0, 2.0 );\n\tuv\t\t\t\t= uv * scale;\n\tuv.x \t\t\t+= 1.5;\t\n\tuv.y\t\t\t+= 1.5;\n\t#endif\n\t\n\t#if isRippled\n\tvec2 mp\t\t\t= iMouse.xy / iResolution.xy;\n\tvec2 origin\t\t= vec2( uv - mp );\n\tvec2 mpn\t\t= normalize( origin );\n\tfloat len\t\t= length( origin );\n\tfloat wave\t\t= getWave( len );\n\tuv\t\t\t\t+= mpn * ( wave * 0.075 * len );\n\t#endif\n\t\n\t#if isBlurred\n\t//for the sake of clarity I used pixels that were three \n\t//pixels away from the current.\n\tfloat pxlDist\t= 3.0;\n\tvec4 tex\t\t= vec4( 0.0 );\n\t//take the pxl on the left top corner.\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x - pxlDist * pixelSize, uv.y - pxlDist * pixelSize ) ) * 0.1;\n\t//take the pxl on the left.\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x - pxlDist * pixelSize, uv.y ) ) * 0.1;\n\t//take the pxl on the left bot corner.\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x - pxlDist * pixelSize, uv.y + pxlDist * pixelSize ) ) * 0.1;\n\t//take the pxl on the top.\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x, uv.y - pxlDist * pixelSize ) ) * 0.1;\n\t//take the current pxl.\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x, uv.y ) ) * 0.2;\n\t//take the pxl on the right top pxl.\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x + pxlDist * pixelSize, uv.y - pxlDist * pixelSize ) ) * 0.1;\n\t//take the pxl on the right.\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x + pxlDist * pixelSize, uv.y ) ) * 0.1;\n\t//take the pxl on the right bot corner.\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x + pxlDist * pixelSize, uv.y + pxlDist * pixelSize ) ) * 0.1;\n\t//take the pxl on the bot\n\ttex\t\t\t\t+= texture( iChannel0, vec2( uv.x, uv.y + pxlDist * pixelSize ) ) * 0.1;\n\t#else\n\tvec4 tex\t\t= texture( iChannel0, uv );\n\t#endif\t\n\t\n\t#if isScaled\n\t\tif ( uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0 )\n\t\t\ttex\t= vec4( 0.0 );\n\t#endif\n\t\n\tfragColor \t= tex;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ld2Gzt","date":"1392886313","viewed":791,"name":"Water Ripples and Scale","username":"deleo","description":"I got some help from https://www.shadertoy.com/view/XdXGR7","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}