{"ver":"0.1","info":{"id":"MtcBRn","date":"1538350197","viewed":366,"name":"Sierpinski Carpet Fractal Zoom","username":"koi","description":"A simple looping Sierpinski Carpet fractal zoom animation.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["procedural","fractal","zoom","animated","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord - iResolution.xy / 2.0;\n    vec2 offset = vec2(-0.5);\n    \n    float col = 0.0;\n    float t = iTime / 1.5;\n    \n    float scale = pow(3.0, mod(t, 2.0) + 1.0);\n    float size = iResolution.y * scale;\n    float rot = t / 2.0;\n\n    pos = mat2(cos(-rot), sin(-rot), -sin(-rot), cos(-rot)) * pos;\n    pos += offset * iResolution.y * (scale * 0.5 - 0.5);\n\n    while(size > 1.0) {\n        size /= 3.0;\n        ivec2 ip = ivec2(round(pos / size));\n\n        if(ip.x == 0 && ip.y == 0) {\n            col = min(size*size, 1.0);\n            break;\n        } else {\n            pos -= vec2(ip) * size;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col, col, col, 1.0);\n}","name":"Image","description":"","type":"image"}]}