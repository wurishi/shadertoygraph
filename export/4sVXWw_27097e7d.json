{"ver":"0.1","info":{"id":"4sVXWw","date":"1464751473","viewed":443,"name":"hjyShaderTest01","username":"hongjeongyun","description":"test01","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["hjy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    float aspectRatio = iResolution.x / iResolution.y; // ë¹„ìœ¨ ê³„ì‚°ê°’\n    \n    uv -= vec2(0.5,0.5); // ì›ì ì„ ì¤‘ì•™ìœ¼ë¡œ\n    uv.x *= aspectRatio; // ë¹„ìœ¨ì„¤ì •\n    \n    \n    float L = length(uv);\n    \n    float theta = atan(uv.y, uv.x);\n    \n    vec3 color;\n    \n    float r = 0.5 + 0.1 * sin(iTime);\n    \n    //float r = 0.5 + 0.1 * cos(iTime) * sin((theta * iTime) * 8.0);\n    \n    if(L > r)\n    {\n        color = vec3(1.0,0.0,0.0);\n    }\n    else\n    {\n        color = vec3(0.0,1.0,0.0);\n    }\n    \n    fragColor = vec4(color,1.0);\n    \n    //fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}","name":"Image","description":"","type":"image"}]}