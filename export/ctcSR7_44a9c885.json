{"ver":"0.1","info":{"id":"ctcSR7","date":"1685142079","viewed":67,"name":"the calling","username":"boytoy","description":"first shader, based on a cool tutorial i saw on youtube (hi kishimisu)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite","mystical"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    return vec3(1.,1.,1.);\n}\n\nconst float M_PI = 3.14159265358979323846264338327950288;\n\nfloat sstep(float threshold,float width, float x){\n    return smoothstep(threshold+width,width,x)-smoothstep(threshold,width,x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.y);\n    vec3 final_color = vec3(0.);\n    \n    float passes = 5.;\n    float frequency = 2.;\n    float phase = 1.25;\n    float speed = 2.;\n    float rot = M_PI*0.5;\n    \n    for(float i = 1.0 ; i<=passes; i++){\n        uv = 3.*uv;\n        uv = vec2(cos(rot)*uv.x - sin(rot)*uv.y, sin(rot)*uv.x + cos(rot)*uv.y);\n        \n        vec2 f = 2.*fract(uv) -1.;\n        \n        float lum = 0.6*(1.+sin(i*M_PI*phase - speed*iTime + M_PI * frequency*length(f)));\n        \n        float d = sstep(0.2,0.9,lum);\n        final_color += d/(passes*pow(1.01,i));\n    }\n    \n    \n    fragColor = vec4(final_color,1.0);\n}","name":"Image","description":"","type":"image"}]}