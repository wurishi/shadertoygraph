{"ver":"0.1","info":{"id":"4fBXRc","date":"1706640171","viewed":56,"name":"cirlccleMaking","username":"jessesound","description":"just testing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Circle(vec2 uv,vec2 p, float r,float blur){\n\n    float d = length(uv-p);\n      \n      \n      \n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    \n     \n     float nsin = sin(iTime) * 0.15 +.05;\n      uv -= .5;\n     uv.x *= iResolution.x/iResolution.y;\n     \n     vec2 p = vec2(.2,-.1);\n     \n     vec3 col =  vec3(0.);\n    float mask = Circle(uv, p, .4, .15);\n      mask -= Circle(uv, vec2(.05,-.01),.1, .03);\n      mask -= Circle(uv, vec2(.35,-.01),.1, .03);\n   // if(d < .3) c = 1.; el2e c = 0.;\n    // Output to screen\n    \n    float mouth =  Circle(uv, vec2(0.2,-.42),.3, .03);\n    mouth *=  Circle(uv, vec2(0.2,-.0112),.3, .03);\n    col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)) *mask ;\n    \n    \n    mask -= mouth;\n   \n     col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)) *mask ;\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}