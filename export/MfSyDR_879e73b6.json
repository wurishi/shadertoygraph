{"ver":"0.1","info":{"id":"MfSyDR","date":"1722131195","viewed":68,"name":"Corre! 3","username":"Elsio","description":"o caminho para o inferno!","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["fractal","path","tunel","espinhos","fumaca","while"],"hasliked":0,"parentid":"Dd3fRr","parentname":"Corre! 2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a + vec4(0, 33, 11, 0)))\n#define path(z) 2. * vec2(sin(z * .3), cos(z * .2))\n#define t iTime\n#define r iResolution\n\n// Corre! 1: https://www.shadertoy.com/view/ddVczW\n\nfloat map(vec3 p, vec3 k, float a){\n        float d, dd = length(p - k) - .25;\n        p.xy -= path(p.z);\n\n        a = 1.; // bola\n        while((a += a) < 17.) \n            dd += abs(\n                      dot(\n                          cos(p     * a * 1.), \n                          sin(p.zxy * a * 4. + t * 3.)\n                      )) / a * .2;\n                  \n        a /= a; // tunel\n        d = length(path(p.z)*.1) - length(p.xy);\n        while((a += a) < 64.) \n            d -= abs(\n                    dot(\n                        sin(p * a * 1.), \n                        vec3(8)\n                    )) / a * .2 - .4;\n\n        return min(d, dd);\n}\n\nvoid mainImage(out vec4 o, vec2 u) {    \n    o -= o;\n    u = (u - r.xy / 2.) / r.y;\n    \n    vec3 D = vec3(u, 1);     \n    \n    float a, i, s, dd, d = 1., T;\n\n    // camera\n    vec3 lookAt   = vec3(0., 0., -iTime * 3.),\n         ro       = lookAt + vec3(0., 0., -.1),\n         lightPos = \n             cos(vec3(3, 4, 1) * t + vec3(0, 3.14/2., 0))\n             * vec3(.5, .5, 2) + vec3(0, 0, 3) + ro;\n\n    lookAt.xy   += path(lookAt.z);\n    ro.xy       += path(ro.z);\n    lightPos.xy += path(lightPos.z);\n\n    vec3 fw = normalize(lookAt - ro),\n         rt = vec3(fw.z, 0., -fw.x),\n         up = cross(fw, rt),\n         rd = fw + (u.x * rt + u.y * up) / 1.4;\n\n    // raymarch\n    while(i++ < 300. && d > .01)\n        d = map(ro, lightPos, a),\n        ro += rd * d * .08;\n    \n    o += (5.+ cos(t*.6)*4.) / i \n         + vec4(6, 7, 8, 0) / length(ro - lightPos) * .04 \n         - 5. * d; \n}","name":"Image","description":"","type":"image"}]}