{"ver":"0.1","info":{"id":"XXyGWz","date":"1717484663","viewed":48,"name":"First Boxer","username":"plasmo310","description":"my first shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","character"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// draw circle2d (0.0 ~ 1.0)\nfloat circle2d(vec2 r, float radius, vec2 center)\n{\n    float blur = 0.005;\n    return 1.0 - smoothstep(radius-blur, radius+blur, length(r-center));\n}\n\n// draw rect2d (0.0 ~ 1.0)\nfloat rect2d(vec2 r, vec2 size, vec2 center) {\n    vec2 topRight = center + size;\n    vec2 bottomLeft = center - size;\n    \n    vec2 d = r-center;\n    float blur = 0.005;\n    \n    float ret;\n\tret  = smoothstep(bottomLeft.x-blur, bottomLeft.x+blur, d.x);\n\tret *= smoothstep(bottomLeft.y-blur, bottomLeft.y+blur, d.y);\n\tret *= 1.0 - smoothstep(topRight.y-blur, topRight.y+blur, d.y);\n\tret *= 1.0 - smoothstep(topRight.x-blur, topRight.x+blur, d.x);\n\treturn ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // colors\n    vec3 colBg = vec3(0.2);\n    vec3 colBg2 = vec3(0.5);\n    vec3 colBlack = vec3(0.1);\n    vec3 colWhite = vec3(1.0, 1.0, 1.0);\n    vec3 colBlue = vec3(0.216, 0.471, 0.698);\n    vec3 colRed = vec3(1.00, 0.329, 0.298);\n    vec3 colYellow = vec3(0.867, 0.910, 0.247);\n    \n    // output pixel\n    vec3 ret = colBg;\n    float bgTileSize = 30.0f;\n    vec2 bgOffset = iTime * vec2(-10.0f, 10.0f);\n    if (mod((fragCoord.x + bgOffset.x) / bgTileSize, 2.0) < 1.0 && mod((fragCoord.y + bgOffset.y) / bgTileSize, 2.0) < 1.0)\n    {\n        ret =colBg2;\n    }\n\n    // distance by center\n    vec2 r = 2.0 * vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    // draw face\n    vec2 faceCenter = vec2(0.0, 0.1 * (sin(2.0*iTime) + 1.0) / 2.0);\n    vec2 rightEyeCenter = faceCenter + vec2(0.35, 0.2);\n    vec2 leftEyeCenter = rightEyeCenter * vec2(-1.0, 1.0);\n    vec2 mouseCenter = faceCenter + vec2(0.0, -0.2);\n    ret = mix(ret, colBlue, circle2d(r, 0.8, faceCenter));\n    ret = mix(ret, colWhite, circle2d(r, 0.2, rightEyeCenter));\n    ret = mix(ret, colWhite, circle2d(r, 0.2, leftEyeCenter));\n    ret = mix(ret, colBlack, circle2d(r, 0.05, rightEyeCenter + vec2(0.02*sin(5.0*iTime), 0.02*cos(6.0*iTime))));\n    ret = mix(ret, colBlack, circle2d(r, 0.05, leftEyeCenter + vec2(0.02*cos(6.0*iTime), 0.02*sin(5.0*iTime))));\n    ret = mix(ret, colWhite, rect2d(r, vec2(0.15, 0.1), mouseCenter));\n    \n    // draw punch\n    float maxPunchRadius = 0.5;\n    float rightPunchRadius = maxPunchRadius * smoothstep(-2.5, 1.0, sin(5.5*iTime));\n    float leftPunchRadius = maxPunchRadius * smoothstep(-2.5, 1.0, cos(4.0*iTime));\n    ret = mix(ret, colRed, circle2d(r, rightPunchRadius, vec2(0.9, -0.4)));\n    ret = mix(ret, colRed, circle2d(r, leftPunchRadius, vec2(-0.9, -0.4)));\n    \n    // draw particle\n    float angle1 = iTime*2.0;\n    float angle2 = iTime*3.5;\n    float angle3 = iTime*3.0;\n    mat2 rot1 = mat2(cos(angle1), -sin(angle1), sin(angle1), cos(angle1));\n    mat2 rot2 = mat2(cos(angle2), -sin(angle2), sin(angle2), cos(angle2));\n    mat2 rot3 = mat2(cos(angle3), -sin(angle3), sin(angle3), cos(angle3));\n    ret = mix(ret, colYellow, rect2d(rot1*(r-vec2(1.2 , 0.3)), vec2(0.1, 0.1), vec2(0.0, 0.0)));\n    ret = mix(ret, colYellow, rect2d(rot1*(r-vec2(-0.95 , 0.55)), vec2(0.08, 0.08), vec2(0.0, 0.0)));\n    ret = mix(ret, colYellow, rect2d(rot2*(r-vec2(1.45 , 0.7)), vec2(0.08, 0.08), vec2(0.0, 0.0)));\n    ret = mix(ret, colYellow, rect2d(rot3*(r-vec2(-1.3 , 0.2)), vec2(0.06, 0.06), vec2(0.0, 0.0)));\n    ret = mix(ret, colYellow, rect2d(rot2*(r-vec2(-1.45 , 0.8)), vec2(0.06, 0.06), vec2(0.0, 0.0)));\n    \n    fragColor = vec4(ret, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}