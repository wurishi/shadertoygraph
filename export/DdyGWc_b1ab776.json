{"ver":"0.1","info":{"id":"DdyGWc","date":"1679087664","viewed":69,"name":"WiA Tutorial","username":"gserena","description":"Basic shader made in a WiA Workshop!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["basics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 movingCircles(vec2 uv, float scale, float speed) \n{\n    uv *= scale;\n    float time = iTime * speed;\n    \n    // Horizontal Movement\n    if (fract(uv.y * 0.25) > 0.5) {\n        uv.x += 0.2 * sin(time);\n    } else {\n        uv.x -= 0.2 * sin(time);\n    }\n    \n    // Vertical Movement\n    if (fract(uv.x * 0.25) > 0.5) {\n        uv.y += 0.2 * sin(time);\n    } else {\n        uv.y -= 0.2 * sin(time);\n    }\n    \n    return fract(uv);\n}\n\nfloat circle(vec2 uv, float radius) \n{\n    float dist = distance(vec2(0.5), uv);\n    if (dist <= radius) {\n        return 1.0;\n    }\n    \n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv = movingCircles(uv, 10.0, 1.0);\n    \n    // Calculate output color\n    float c = circle(uv, 0.3);\n    vec3 color = vec3(0.0);\n    if (c > 0.0) {\n        color = vec3(c, 0.0, 0.0);\n    } else {\n        color = vec3(1.0);\n    }\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}