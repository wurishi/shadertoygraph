{"ver":"0.1","info":{"id":"fs2SRW","date":"1619778352","viewed":75,"name":"my version of a cardiogram","username":"rockstep","description":"looks sort of like a heartbeat but not really, apparently the pulses are supposed to have a slightly more complex structure\n\narguably the real thing isn't as aesthetic","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_X 3.14159\n#define MAX_Y 1.5\n\nfloat pi = radians(180.);\n\nfloat pixelHeight() {\n    return (2. * MAX_Y) / iResolution.y;\n}\n\nfloat pixelWidth() {\n    return (2. * MAX_X) / iResolution.x;\n}\n\nfloat near(float a, float b) {\n    float diff = abs(a - b);\n    return smoothstep(4.*pixelHeight(), 0., diff);\n}\n\nfloat triWave(float theta) {\n    return (2. / pi) * asin(sin(theta));\n}\n\nfloat pulse(float theta) {\n    return step(mod(theta, 8. * pi), 2. * pi) * triWave(theta);\n}\n\nvoid mainImage(out vec4 rgba, in vec2 xy) {\n    vec2 uv = xy - 0.5 * iResolution.xy;\n    uv.x *= pixelWidth();\n    uv.y *= pixelHeight();\n    \n    float theta = uv.x + 2. * iTime;\n    float p = pulse(5. * theta);\n    vec3 col = vec3(0.,1.,0.) * vec3(near(p, uv.y));\n    rgba = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}