{"ver":"0.1","info":{"id":"ddlcWB","date":"1687186014","viewed":61,"name":"0psycadelic7","username":"0unkown7","description":"First shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","geometric","sfd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1., 1., 1.);\n    vec3 d = vec3(0.00, 0.10, 0.20);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    vec3 col;\n    \n    for (float v = 0.0; v < 4.0; v++){\n        vec2 uv1 = fract(uv * 2.5) - 0.5;\n\n        float r = (length(uv1.x) + length(uv1.y)) * exp(-length(uv));\n        r = abs(r);\n        r = sin(r * 8. + iTime * 1.5) / 8.;\n        r = 0.05/r;\n\n        vec2 i = abs(uv) - 0.3;\n        float q = length(max(i, 0.0)) + min(max(i.x, i.y), 0.0);\n        q = abs(q);\n        q = sin(q * 5. + iTime * 2.) / 8.;\n        q = 0.1 / q;\n\n        col = palette(q + v * 4. + iTime);\n\n        col *= q * r;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}