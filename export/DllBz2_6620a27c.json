{"ver":"0.1","info":{"id":"DllBz2","date":"1693203433","viewed":113,"name":"RGB trig doorway","username":"akr51","description":"My philosophy is to start off \"knowing what I'm doing\" and then to slowly lose control from there.\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["rgb","trig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec2 nfragCoords(vec2 fragCoord)\n{\n\n\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= (iResolution.x / iResolution.y);\n    return uv;\n\n}\n\n\n\nfloat plot(vec2 uv, float thickness, float y)\n{\n\n   \n    \n    float shade = step(uv.y - thickness, y) - step(uv.y + thickness, y);\n    return shade;\n\n}\n\n\nfloat smoothplot(vec2 uv, float thickness, float y)\n{\n\n\n    float shade = smoothstep(y - thickness, y, uv.y) - smoothstep(y, y + thickness, uv.y);\n    return shade;\n\n\n}\n\n\n\n\nfloat fneon(float shade, float amount)\n{\n\n\n    shade = clamp(shade, 0.000001, 1.0);\n    return amount / shade;\n\n\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n   \n    vec2 uv = nfragCoords(fragCoord);\n    \n    vec3 rgb_channels = vec3(0.0);\n    \n    float iterations = 31.0;\n    \n    \n  \n    for (float i = 0.0; i < iterations; ++i)\n    {\n   \n       \n        uv = vec2(sin(length(vec2(uv.x, 0.0)) / length(vec2(uv.x - 1.0, 0.75 + sin(iTime) / 4.0))) * 1.0, uv.y);     \n          \n        float radxr_ic = 0.5;\n        float radxr = abs(sin(iTime + i * radxr_ic) * 2.0);\n        \n        float radyr_ic = 0.35;\n        float radyr = abs(sin(iTime + 2.0 + i * radyr_ic) * 3.0);\n    \n        \n        float uvdr_ca = 1.2;\n        float uvdr_cb = 1.5;\n        vec2 uvdr = vec2(cos(uv.x + iTime + 2.0 * i * uvdr_ca) * radxr, sin(uv.y + iTime + uvdr_cb * i) * radyr);\n        rgb_channels.r += pow(fneon(distance(uv, uvdr), 0.095), 3.0);\n        \n        float radxg_ic = 0.25;\n        float radxg = abs(sin(iTime + i * radxg_ic) * 2.0);\n        \n        float radyg_ic = 0.35;\n        float radyg = abs(sin(iTime + 2.0 + i * radyg_ic) * 3.0);\n    \n        \n        float uvdg_ca = 2.2;\n        float uvdg_cb = 0.5;\n        vec2 uvdg = vec2(cos(uv.x + iTime + 2.0 * i * uvdg_ca) * radxg, sin(uv.y + iTime + uvdg_cb * i) * radyg);\n        rgb_channels.g += pow(fneon(distance(uv, uvdg), 0.095), 3.0);\n        \n        \n        float radxb_ic = 0.75;\n        float radxb = abs(sin(iTime + i * radxb_ic) * 2.0);\n        \n        float radyb_ic = 0.88;\n        float radyb = abs(sin(iTime + 2.0 + i * radyb_ic) * 3.0);\n    \n        \n        float uvdb_ca = 1.0 + sin(iTime / 5.0);\n        float uvdb_cb = 1.0; + cos(iTime / 13.0);\n        vec2 uvdb = vec2(cos(uv.x + iTime + 2.0 * i * uvdb_ca) * radxb, sin(uv.y + iTime + uvdb_cb * i) * radyb);\n        rgb_channels.b += pow(fneon(distance(uv, uvdb), 0.095), 3.0);\n        \n        \n    }\n    \n    \n    fragColor = vec4(rgb_channels, 1.0);\n\n}\n\n\n\n\n","name":"Image","description":"","type":"image"}]}