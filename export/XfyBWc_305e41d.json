{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"\n\n\nconst float stretch = 0.25;\nconst float shift   = 0.00;\n\n\n\n// adapted from https://github.com/python/cpython/blob/3.13/Lib/colorsys.py\nvec3 hsv_to_rgb(vec3 hsv) {\n\n    if (hsv.y == 0.0)\n        return hsv.zzz;\n    \n    hsv.x = mod(hsv.x, 1.);\n\n    int i = int(hsv.x*6.0);\n    float f = (hsv.x*6.0) - float(i);\n    float p = hsv.z*(1.0 - hsv.y);\n    float q = hsv.z*(1.0 - hsv.y*f);\n    float t = hsv.z*(1.0 - hsv.y*(1.0-f));\n    i = i % 6;\n\n    vec4 vtpq = vec4(hsv.z, t, p, q);\n    vec3 a[6] = vec3[](vtpq.stp, vtpq.qsp, vtpq.pst, vtpq.pqs, vtpq.tps, vtpq.spq);\n    \n    return a[i];\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv;\n    if (iResolution.y < iResolution.x)\n        uv = (fragCoord-vec2(iResolution.x-iResolution.y,0.)/2.)/iResolution.yy;\n    else\n        uv = (fragCoord-vec2(0.,iResolution.y-iResolution.x)/2.)/iResolution.xx;\n    \n    vec3 col;\n    \n    if (uv.x <= 1. && uv.x >= 0.)\n        col = hsv_to_rgb(vec3(shift + stretch*(uv.y-0.5),uv.xy));\n    else\n        col = vec3(0.);\n\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XfyBWc","date":"1734503378","viewed":44,"name":"HSV Hue-shift plot","username":"PureAsbestos","description":"A simple HSV tint/shade/tone square, with hue-shifting. Change the stretch and shift to change the hue behavior. Not optimized.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color","hsv"],"hasliked":0,"parentid":"","parentname":""}}