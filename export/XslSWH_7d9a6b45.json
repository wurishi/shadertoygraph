{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//Discs? by nimitz (twitter: @stormoid)\n\n/*\n\tThis shader was just featured, but was made a while ago.\n\n\tIn retrospect, I could have used domain repetition (or mirroring)\n\tto avoid drawing every disc individually and would get ~5x perf\n\tboost for a very similar effect.\n*/\n\n#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy-0.5;\n\tp.x *= iResolution.x/iResolution.y;\n\tvec2 mo = iMouse.xy / iResolution.xy-0.5;\n\tmo *= 1.-step(abs(iMouse.z),0.);\n\t\n\t//background color\n\tvec3 col = vec3(.04,0.1,0.18)-(p.x-p.y-0.2)*0.1;\n\t//slight faked projection\n\tp *= (dot(p,p)+10.)*2.;\n\t\n    //p = abs(p)-6.;\n    \n\tfloat rz = 0.;\n\tvec3 ligt = normalize(vec3(-0.5,.6,.5));\n\tvec3 haf = normalize(vec3(0.,0.,1.)+ligt);\n\tfor(float i=0.;i<120.;i++)\n\t{\n\t\tfloat cntd = (120.-i)*0.005;\n\t\t//draw disc\n\t\tfloat rz2 = 1.-clamp(pow(dot(p,p)*(cntd+1.),2.),0.,1.);\n\t\t//base color\n\t\tvec3 col2 = (sin(vec3(.9,.25,.2)*i*.15)*.5+0.5)*(smoothstep(0.,.3,rz2))*.18;\n\t\t\n\t\t\t//branching painter's algo\n\t\t//if (rz2 > 0.) col = col2;\n\t\t\t//step version\n\t\t//col = col*step(rz2,0.)+col2;\n\t\t\t//smoothstep version\n\t\tcol = col*(1.-smoothstep(0.0,.4+mo.x*0.6,rz2))+col2;\n\t\t\n\t\tvec3 norm = normalize(vec3(p*1.5,rz2+i*.005));\n\t\t//diffuse\n\t\tcol += rz2*(dot(norm,ligt))*col2*6.2;\n\t\t//specular\n\t\tcol += rz2*pow(clamp((dot(norm,haf)),0.,1.),300.);\n\t\t\n\t\t//move the next disc\n\t\tfloat i2 = i*(sin(time*0.4)*0.1+1.5);\n\t\tp.x += sin(i2*.5-time*0.2)*i*0.04+sin(time*0.35)*0.1;\n\t\tp.y += cos(i2*.5+time*0.2)*i*0.04+cos(time*0.33)*0.06;\n\t}\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XslSWH","date":"1400162826","viewed":804,"name":"Discs?","username":"nimitz","description":"Demonstration of a branchless painter's algorithm and lighting on 2d objects. \n\nDrag mouse left/right to change the blending \"hardness\".","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","2dlighting"],"hasliked":0,"parentid":"","parentname":""}}