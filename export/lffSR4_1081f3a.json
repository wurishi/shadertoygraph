{"ver":"0.1","info":{"id":"lffSR4","date":"1704985993","viewed":95,"name":"Mandelbrot Miniprojekt","username":"Biedermann","description":"Denkweisen der Informatik - Miniprojekt","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 150\n\nfloat map(int value, int min1, int max1, float min2, float max2) {\n    return min2 + (float(value) - float(min1)) * (max2 - min2) / float(max1 - min1);\n}\n\nvec3 palette(float t) {\n    vec3 a = vec3(0.0, 0.5, 0.5);\n    vec3 b = vec3(0.0, 0.5, 0.5);\n    vec3 c = vec3(0.0, 0.5, 0.333);\n    vec3 d = vec3(0.0, 0.5, 0.677);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    uv = uv * 2.0;\n    uv = uv * exp(-0.15 * iTime);\n    uv = uv + vec2(-0.670214677, 0.458060711);\n    \n    int n = 0;\n    vec2 c = uv;\n    vec2 z = uv;\n    \n    while (n < MAX_ITER) {\n        float x = z.x * z.x - z.y * z.y;\n        float y = 2.0 * z.x * z.y;\n        \n        z = vec2(x, y) + c;\n        \n        if(abs(z.x + z.y) > 30.0) {\n            break;\n        }\n        n++;\n    }\n    \n    \n    float v = map(n, 0, MAX_ITER, 0.0, 1.0);    \n    \n    if (n == MAX_ITER) {\n        v = 0.0;    \n    }\n    \n    fragColor = vec4(palette(sqrt(v)), 1.0);\n}","name":"Image","description":"","type":"image"}]}