{"ver":"0.1","info":{"id":"7dG3RW","date":"1631241411","viewed":81,"name":"slanted squares","username":"HaleyHalcyon","description":"a","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fold(float x) {\n    return 2.0 * abs(0.5 - fract(x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = fract(iTime / 2.);\n    // Scales coords so that the diagonals are all dist 1 from center\n    float scale = length(iResolution.xy);\n    vec2 uv = (fragCoord / scale\n\t- (iResolution.xy / scale / 2.)) * 15.;\n    \n    // diagonal grid\n    vec2 slantUV = vec2(uv.x + uv.y, uv.x - uv.y);\n    vec2 slantRnd = floor(slantUV);\n    slantUV = fract(slantUV + 0.5) - 0.5;\n    \n    // spiral\n    float r = length(slantRnd);\n    float angle = atan(slantRnd.y, slantRnd.x) / 2.0 / 3.14159265358979;\n    float spiral = fold(r * 0.15 + angle + time - cos(time * 3.1415927));\n\n    float thres = \n        min(abs(slantUV.x), abs(slantUV.y));\n        float zig = step(1., 1.5 * fract(time * 1. + abs(floor(0.25 + slantRnd.y - slantRnd.x)) / 6.));\n\n    vec3 col = mix(\n        mix(vec3(0.3, 0.1, 0.1), vec3(0.5, 0.2, 0.0), zig),\n        mix(vec3(0.1, 0.5, 0.8), vec3(0.0, 0.8, 1.0), zig),\n        \n        smoothstep(\n            0.7, 0.8,\n            spiral + thres\n        )\n    );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}