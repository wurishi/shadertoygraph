{"ver":"0.1","info":{"id":"lllyWr","date":"1504442384","viewed":78,"name":"lighting practice","username":"Torumu106","description":"light","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.1415926535;\nint stop = 0;\nvec3 col = vec3(1.0, 1.0, 1.0);\nvec3 stoppos = vec3(0.0);\nbool shadow = false;\nfloat map(vec3 p){\n    float d = length(p) - 1.0;\n    if(d < 0.001) stop = 1;\n    if(!shadow)\n    \td = min(d, dot(p,vec3(0.0, 1.0, 0.0)) + 1.0);\n    if(d < 0.001 && stop != 1) stop = 2;\n    return d;\n}\nfloat trace(vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p;\n    for(int i = 0; i < 128; ++i){\n    \tp = o + r * t;\n        float d = map(p);\n        if(d < 0.001){\n        \tbreak;\n        }\n        t += d * 0.9;\n    }\n    stoppos = p;\n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv - vec2(0.0, PI / 3.0), 1.0));\n    \n    float the = iTime;\n    vec3 o = vec3(0.0,10.0, -10.0);\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    o.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    float t = trace(o, r);\n    \n    float light;\n    if(stop == 1) light =0.9 * max(dot(normalize(vec3(1.0)), normalize(stoppos)), 0.0) + 0.1;\n    else if(stop == 2) {\n    \tstop = 0;\n        shadow = true;\n        trace(stoppos, normalize(vec3(1.0)));\n        if(stop == 1) light = 0.1;\n        else light = 0.8;\n    }\n    else light = 0.0;\n    \n    vec3 fc = vec3(light) * col;\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}