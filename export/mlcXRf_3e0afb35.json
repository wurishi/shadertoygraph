{"ver":"0.1","info":{"id":"mlcXRf","date":"1685647098","viewed":42,"name":"patrón de rayas horizontales:","username":"Crofts","description":"patrón de rayas horizontales:","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["patrnderayashorizontales"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Define el color de las rayas\n    vec3 stripeColor = vec3(0.8, 0.2, 0.4);\n    \n    // Define el número de rayas y su ancho\n    int numStripes = 50;\n    float stripeWidth = 0.005;\n    \n    // Calcula la posición normalizada del píxel\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Calcula el índice de la raya actual\n    int stripeIndex = int(floor(uv.y * float(numStripes)));\n    \n    // Calcula la posición de la raya actual\n    float stripePos = float(stripeIndex) / float(numStripes);\n    \n    // Comprueba si el píxel está dentro de la raya actual\n    if (abs(uv.y - stripePos) < stripeWidth) {\n        fragColor = vec4(stripeColor, 1.0);\n    } else {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}