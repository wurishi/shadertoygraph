{"ver":"0.1","info":{"id":"4lcyWr","date":"1532139620","viewed":128,"name":"Concentric Octagons","username":"CALI","description":"This is a recreation of this post made here \n\nhttp://thedotisblack.com/post/175853882018/201533016337frame0002-made-with-code","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","octagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int STEPS =10;\nfloat RAD = .5;\n\nfloat grad(vec2 center, vec2 pt){\n\treturn 1.-pow(min(1.,floor(length(pt-center)/RAD*float(STEPS))/float(STEPS)),.8);\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y+.5;\n\tfloat dark = 0.;\n    // Time varying pixel color\n    float sides = 0.;\n    for(int i = 0; i < 8; i++){\n        vec2 pt = vec2(sin(float(i)/4.0*3.14159),cos(float(i)/4.0*3.14159))/2.0+.5;\n    \tdark+= grad(uv,pt);\n        if(i%2==0){sides+=grad(uv,pt);}\n    }\n    vec3 col = mix(vec3(0.,0.,.2),vec3(.8,.8,.6),1.-dark/1.5);\n    float corner = 0.;\n\tfor(int i = 0; i < 2; i++){\n       \tfor(int j = 0; j < 2; j++){\n        vec2 a = vec2(i,j)-uv;\n            if(abs(a.x)+abs(a.y)<1.-pow(2.0,.5)/2.0){corner = 1.;}\n    }\n    }\n    \n    col = mix(col,mix(vec3(1),vec3(1,.6,.1),sides/.75),corner);\n    \n    if(abs(uv.x-.5)>.5){col*=0.;}\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}