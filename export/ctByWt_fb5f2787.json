{"ver":"0.1","info":{"id":"ctByWt","date":"1692388968","viewed":82,"name":"Spybot companay_bkg_2 (animated)","username":"rtburns","description":"High-res animated version of a background from Spybotics: The Nightfall Incident. This background is used for the Cellular Automata Research in-game company; file resource named companay_bkg_2.jpg [sic]. Added subtle animations for a more dynamic feel.\n\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","perspective","cyberpunk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 tileSize = vec2(0.015, 0.025);\nconst float borderSize = 0.98;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.);\n    \n    vec4 col = vec4(.1, .35, .45, 0.5);\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = 1. - uv.x;\n\n    {\n        float lx = -2.2 + .01 * cos(iTime * 0.3);\n        float ly = .08 + .02 * sin(iTime * 0.3);\n        mat3 persp = mat3(1., lx/2., lx,\n                          ly/2. - .12, 1., ly,\n                          0., 0., 1.);\n        vec3 proj = persp * vec3(uv, 1.0);\n        proj /= proj.z;\n\n        vec2 size = (proj.xy / tileSize) / 2.0;\n        vec2 grid = abs(fract(size - 0.5) - 0.5) / fwidth(size);\n        float line = (min(grid.x, grid.y) * borderSize);\n        float color = pow(1.0 - min(line, 1.0), 1./2.2);\n\n        if (proj.x > -1.505 && proj.x < .81 &&\n            proj.y > -0.5 && proj.y < 1.4) {\n            fragColor += vec4(color) * col;\n        }\n    }\n    \n    {\n        vec2 tileSize = vec2(0.015, 0.015);\n\n        float lx = -.18 + .02 * sin(iTime * 0.3);\n        float ly = -1.9 + .02 * cos(iTime * 0.3);\n        mat3 persp = mat3(1., lx/2. + .15, lx,\n                          ly/2. - .08, 1., ly,\n                          0., 0., 1.);\n        vec3 proj = persp * vec3(uv, 1.0);\n        proj /= proj.z;\n\n        vec2 size = (proj.xy / tileSize) / 2.0;\n        vec2 grid = abs(fract(size - 0.5) - 0.5) / fwidth(size);\n        float line = (min(grid.x, grid.y) * borderSize);\n        float color = pow(1.0 - min(line, 1.0), 1./2.2);\n\n        if (proj.x > 0.1 && proj.x < 1. &&\n            proj.y > -1.41 && proj.y < .51) {\n            fragColor += vec4(color) * col;\n        }\n    }\n\n}","name":"Image","description":"","type":"image"}]}