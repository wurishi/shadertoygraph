{"ver":"0.1","info":{"id":"msX3WN","date":"1666189668","viewed":389,"name":"Ghost Got Game","username":"leon","description":"ðŸ‘»","likes":17,"published":3,"flags":32,"usePreview":1,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Ghost Got Game ðŸ‘»\n//\n// weird variation of Cream Crane Consultant\n// https://www.shadertoy.com/view/ddX3WN\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 data = texture(iChannel0, uv);\n    vec3 color = vec3(0);\n    \n    // noise\n    vec3 blue = texture(iChannel1, fragCoord/1024.).xyz;\n    \n    // normal\n    vec3 unit = vec3(vec2(.01*blue.x), 0.);\n    vec3 normal = normalize(vec3(T(uv-unit.xz)-T(uv+unit.xz),\n                                 T(uv-unit.zy)-T(uv+unit.zy),\n                                 .1));\n    \n    // lighting\n    color += dot(normal, N(0,1,1))*.5+.5;\n    \n    // shadow\n    color *= ss(.0,.1,data.r);\n    \n    fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n#define R iResolution.xy\n#define ss(a,b,t) smoothstep(a,b,t)\n#define N(a,b,c) normalize(vec3(a,b,c))\n#define T(uv) texture(iChannel0, uv).r\n\n// Dave Hoskins https://www.shadertoy.com/view/4djSRW\nfloat hash13(vec3 p3)\n{\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.zyx + 31.32);\n    return fract((p3.x + p3.y) * p3.z);\n}\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // coordinates\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (2.*fragCoord-R)/R.y;\n    float a = 0.;\n    \n    // noise\n    float rng = hash13(vec3(fragCoord, iFrame));\n    \n    // normal\n    vec3 unit = vec3(vec2(.05*rng), 0.);\n    vec3 normal = normalize(vec3(T(uv-unit.xz)-T(uv+unit.xz),\n                                 T(uv-unit.zy)-T(uv+unit.zy),\n                                 .5));\n    \n    // ground collision\n    vec3 edge = (vec3(0,ss(.1,.0,uv.y),0.));\n    normal = normalize(normal+edge);\n    \n    // cursor motion\n    if (iMouse.z > 0.) {\n        p -= (2.*iMouse.xy-R)/R.y;\n    } else {\n        float time = iTime*2.;\n        float index = floor(time);\n        float anim = fract(time);\n        vec2 offset = mix(hash21(index), hash21(index+1.), anim)*2.-1.;\n        p += offset*.5*vec2(3.,1.);\n        p.y -= .4;\n        a = iTime * 10.;\n        p += vec2(cos(a),sin(a))*.05;\n    }\n    \n    // shape\n    float shade = ss(.1,.0,abs(length(p)));\n            \n    // neighboring\n    vec4 frame = texture(iChannel0, uv);\n    float life = frame.r;\n    unit = vec3(vec2(.1*rng), 0.);\n    life += T(uv-unit.xz)+T(uv+unit.xz)+T(uv-unit.zy)+T(uv+unit.zy)\n           +T(uv+unit.xy)+T(uv+vec2(unit.x,-unit.y))+T(uv+vec2(-unit.x,unit.y))+T(uv-unit.xy);\n    \n    // leaking\n    uv += life * normal.xy * .005 * dot(normal.xy, vec2(0,1));\n    \n    // ground collision\n    uv -= normal.xy * .005 * edge.y;\n    \n    // framebuffer fading\n    frame = texture(iChannel0, uv);\n    shade = frame.r - .005 + shade;\n    shade = max(shade, 0.);\n    \n    // fix ceiling stuck\n    if (fragCoord.y > R.y-1.) shade = 0.;\n\n    fragColor = vec4(shade, life, 0, 1);\n}","name":"Buffer A","description":"","type":"buffer"}]}