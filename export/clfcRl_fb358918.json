{"ver":"0.1","info":{"id":"clfcRl","date":"1691067800","viewed":48,"name":"Mandelbrot Loop","username":"solarflare","description":"simple mandelbrot shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float isInSet(vec2 c){\n    vec2 f = vec2(0.0, 0.0);\n    for(float i = 0.0; i < 300.0; i+=1.0){\n        f = vec2(f.x*f.x-f.y*f.y+c.x, 2.0*f.x*f.y+c.y);\n        if(abs(f.x) > 4.0){\n            return i;\n        }\n    }\n    return 200.0;\n}\n\nvec3 getColor(float n, vec3 c1, vec3 c2){\n    return vec3((c1.x*n) + (c2.x*(1.0-n)), (c1.y*n) + (c2.y*(1.0-n)), (c1.z*n) + (c2.z*(1.0-n)));\n}\nvec3 getColor(float n, vec3 c1, vec3 c2, vec3 c3){\n    return vec3((c1.x*n) + (c2.x*(1.0-n)) + c3.x*(1.0-smoothstep(0.0, 0.5, abs(0.5-n))), (c1.y*n) + (c2.y*(1.0-n)), (c1.z*n) + (c2.z*(1.0-n)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 zoom_point = vec2(-0.7472, 0.098);\n    //vec2 zoom_point = vec2(-1.25, 0.0);\n    float range = smoothstep(-1.0, 1.0,cos(iTime/2.0))+0.005;\n    uv*=range;\n    uv-=range/2.0;\n    uv+=zoom_point;\n    float n = isInSet(uv);\n    n = smoothstep(0.0, 200.00, n);\n\n    // Output to screen2\n    fragColor = vec4(getColor(n, vec3(0.0, 0.0, 0.0), vec3(0.086, 0.55, 0.86), vec3(0.95, 0.0, 0.0)), 1.0);\n}","name":"Image","description":"","type":"image"}]}