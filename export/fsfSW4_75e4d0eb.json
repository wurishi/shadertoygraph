{"ver":"0.1","info":{"id":"fsfSW4","date":"1618605983","viewed":102,"name":"FeelSickTunnel314","username":"Domain314","description":"pls, dont look at it for too long.\n\nparts from \nhttps://thebookofshaders.com/10/\n\nupdated a \"lensing\" (not really) effect. Change \"lensing\" to 1. for original output.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SSV 0.00001\n#define TWO_PI 6.2831853\n\nfloat N11(float i){\n    return fract(sin(dot(vec2(fract(i*912.212357), fract(i*4567.34526)), vec2(13.7137,67.798) * 977.75973)));\n}\n\nfloat N21(vec2 v){\n    return fract(sin(dot(v.xy, vec2(13.7137,67.798))) * 977.75973);\n}\n\nvec2 tile(vec2 _uv, float _zoom){\n    _uv *= _zoom;\n    return fract(_uv);\n}\n\nfloat pattern(vec2 _uv, vec2 _v, float _t){\n    vec2 p = floor(_uv+_v);\n    return step(_t, N21(100.+p*SSV)+N11(p.x)*0.5 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    float t = sin(iTime*0.3);\n    float s = sign(t);\n    \n    // was \"mouse\" and managed mouse input. Turned out to be not as cool as imagined => recycled variable.\n    float m = 1.-abs(t);\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 st = vec2(atan(uv.x, uv.y), length(uv));\n    \n    // change lensing to 1. for original output\n    float lensing = (t*2.-st.y); //1.; \n    uv = vec2(st.x/TWO_PI, st.y*lensing);\n    \n    vec3 col = vec3(0.);\n    vec2 grid = vec2(100., 50.);\n    uv *= grid;\n    \n    vec2 ipos = floor(uv);\n    vec2 vel = vec2((s*iTime+0.02)*.2*max(grid.x, grid.y));\n    vel *= vec2(-1., 0.)*N11(1.0 + ipos.y);\n    \n    vec2 offset = vec2(.3, 0.);\n    \n    col.r = pattern(uv+offset, vel, 0.5+m);\n    col.g = pattern(uv, vel, 0.5+m);\n    col.b = pattern(uv-offset, vel, 0.5+m)*1.5;\n    \n    col.b += (fract(uv.y)*(1.-m));\n    col.g += (fract(uv.y)*(1.-m))*0.8;\n    \n    col -= smoothstep(41.,42. , uv.x)*2.;\n    col -= smoothstep(-41., -42., uv.x)*2.;\n    col -= smoothstep(1.,.0, uv.y);\n    \n    fragColor = vec4(col*0.9,1.0);\n}","name":"Image","description":"","type":"image"}]}