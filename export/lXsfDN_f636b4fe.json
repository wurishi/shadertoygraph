{"ver":"0.1","info":{"id":"lXsfDN","date":"1728428703","viewed":10,"name":"Shapes - Shadetober24 #9","username":"franke333","description":"Day 9 of shadetober","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shadetober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distToCircle(vec2 pos, float r){\n    return length(pos) - r;\n}\n\n//taken from https://iquilezles.org/articles/distfunctions2d/\nfloat distToBox( vec2 p, float r )\n{\n    vec2 d = abs(p)-vec2(r);\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n//taken from https://iquilezles.org/articles/distfunctions2d/\nfloat distToHexagram( in vec2 p, in float r )\n{\n    const vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n    p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n    return length(p)*sign(p.y);\n}\n//taken from https://iquilezles.org/articles/smin/\nvec2 smin( float a, float b, float k )\n{\n    float h = 1.0 - min( abs(a-b)/(4.0*k), 1.0 );\n    float w = h*h;\n    float m = w*0.5;\n    float s = w*k;\n    return (a<b) ? vec2(a-s,m) : vec2(b-s,1.0-m);\n}\n\nfloat nsin(float x){\n    return sin(x)*0.5 + 0.5;\n}\n\nfloat ncos(float x){\n    return cos(x)*0.5 + 0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float k = 0.05;\n    // x, y, r, type\n    vec4 data[] = vec4[](\n        vec4(nsin(iTime),0.5,k,1.),\n        vec4(ncos(iTime*1.77)+0.2,0.5,k,3.),\n        vec4(ncos(iTime),ncos(iTime + 2.11),k,2.),\n        vec4(nsin(iTime),nsin(iTime*2.),1.5*k,1.),\n        vec4(0.7,0.7,k,2.),\n        vec4(-0.1,0.8,2.*k,1.),\n        vec4(0.6,0.7*nsin(0.27*iTime),k,3.)\n    );\n    \n    vec3 colors[] = vec3[](\n        vec3(0.9,.8,0.2),\n        vec3(.6,0.5,1.),\n        vec3(1.,0.2,0.2),\n        vec3(.45,0.87,0.26),\n        vec3(0.,0.7,0.9),\n        vec3(0.9,0.6,0.45),\n        vec3(0.,0.1,1.)\n    );\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = uv.x *iResolution.x/iResolution.y - (iResolution.x - iResolution.y)/(2.*iResolution.y);\n    // Time varying pixel color\n    int size = data.length();\n    float a = 10000.;\n    vec3 col = vec3(0.);\n    \n    for(int i = 0; i < size; i++){\n        vec2 xy = data[i].xy;\n        float r = data[i].z;\n        float type = data[i].w;\n        float dist;\n        if(type == 1.)\n            dist = distToCircle(xy-uv,r);\n        else if(type == 2.)\n            dist = distToHexagram(xy-uv,r);\n        else\n            dist = distToBox(xy-uv,r);\n        vec2 res = smin(a,dist,k);\n        a = res.x;\n        col = col * (1.-res.y) + colors[i] * res.y;\n    }\n    \n    // Output to screen\n    fragColor = vec4(a < 0. ? col : vec3(.5-a)*col,1.0);\n}","name":"Image","description":"","type":"image"}]}