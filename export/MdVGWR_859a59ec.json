{"ver":"0.1","info":{"id":"MdVGWR","date":"1454653202","viewed":1743,"name":"Iterations - circles","username":"iq","description":"One more to my collection \"Iterations\" ( ldl3W4, 4sXGDN, MssGW4, XdXGDS, MslXz8, Mdl3RH). Improvised doodling again.","likes":24,"published":3,"flags":0,"usePreview":0,"tags":["procedural","2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by inigo quilez - iq/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n// Other \"Iterations\" shaders:\n//\n// \"trigonometric\"   : https://www.shadertoy.com/view/Mdl3RH\n// \"trigonometric 2\" : https://www.shadertoy.com/view/Wss3zB\n// \"circles\"         : https://www.shadertoy.com/view/MdVGWR\n// \"coral\"           : https://www.shadertoy.com/view/4sXGDN\n// \"guts\"            : https://www.shadertoy.com/view/MssGW4\n// \"inversion\"       : https://www.shadertoy.com/view/XdXGDS\n// \"inversion 2\"     : https://www.shadertoy.com/view/4t3SzN\n// \"shiny\"           : https://www.shadertoy.com/view/MslXz8\n// \"worms\"           : https://www.shadertoy.com/view/ldl3W4\n// \"stripes\"         : https://www.shadertoy.com/view/wlsfRn\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord / iResolution.x + 0.01*iTime;\n    uv *= 0.75;\n    \n    vec2 gra = vec2(0.0);\n    vec3 col = vec3(0.0);\n    vec2 ouv = uv;\n    for( int i=0; i<64; i++ )\n    {\n        uv += (0.1/64.0)*cos( 6.2831*cos(6.2831*uv.yx + 0.02*iTime*vec2(1.7,2.1)) + 0.1*iTime*vec2(2.1,1.3) );\n        vec3 tex = texture( iChannel0, uv ).xyz;\n        col += tex*(1.0/64.0);\n        gra += vec2( tex.x - texture( iChannel0, uv+vec2(1.0/iChannelResolution[0].x,0.0) ).x,\n                     tex.x - texture( iChannel0, uv+vec2(0.0,1.0/iChannelResolution[0].y) ).x );\n    }\n    \n    col *= 12.0*length( uv - ouv );\n    col += 0.08*(gra.x + gra.y);\n    \n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}