{"ver":"0.1","info":{"id":"wtGGRW","date":"1578389652","viewed":98,"name":"Mandelbrot (random blue colors)","username":"onlinerocker","description":"it's been done to death but i had to render it at least once.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define AA_SCALE 5.0\nvec2 squareComplex(vec2 val)\n{\n    float a = val.x;\n    float b = val.y;\n    return vec2(a*a - b*b, 2.0*a*b);\n}\n\nvec3 checkDiv(vec2 c)\n{\n    vec3 ret;\n    vec2 val = vec2(0.0);\n \tfloat it;\n    for(float x=0.; x<200.; x++)\n    {\n    \tval = squareComplex(val);\n        val += c;\n        \n        it++;\n    \tif(length(val) > 2.5)\n            break;\n    }\n    \n    ret.x = length(val);\n    ret.y = it;\n    ret.z = length(val) - 2.5;\n    return ret;\n}\n\nvec2 random(vec2 pos, vec2 range, vec2 start)\n{\n    float newX = sin(dot(pos, vec2(32.1232, 7.324)))*23432.4;\n    float newY = cos(dot(pos, vec2(432.23, 21.4)))*32145.4;\n    \n    newX = start.x + mod(newX, range.x);\n    newY = start.y + mod(newY, range.y);\n    \n    return vec2(newX, newY);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0);    \n    \n    //thanks to iq for AA implementaion\n    for(float x1=0.0; x1<AA_SCALE; x1++){\n    \tfor(float y=0.0; y<AA_SCALE; y++){\n    \n            vec2 uv = (2.0*(fragCoord + (vec2(x1,y)/10.0) ) - iResolution.xy)/iResolution.y;\n            vec2 mouse = (2.0*iMouse.xy - iResolution.xy)/iResolution.y;//(2.0*iMouse.xy - iResolution.xy) / iResolution.y;\n\n            float scale = pow(1.1, 56.0 + 55.0*-cos(iTime/12.0));\n            float ang = PI/2.0;\n            //uv = mat2(cos(ang), sin(ang), -sin(ang), cos(ang)) * uv;\n            uv/=scale;\n\n            //vec2 offset = vec2(-0.105978, -0.91228);\n            //vec2 offset = vec2(-0.107548, -0.91228);\n            //vec2 offset = vec2(-1.5,0);\n            //vec2 offset = mix(vec2(-0.7,0), vec2(-1.50181,0), smoothstep(0.0, 1.0, iTime/3.0));\n            //vec2 offset = vec2(0.4351,0.3415);\n            //vec2 offset = vec2(0.407099, 0.30862);\n            //vec2 offset = mix(vec2(0.3, 0.30862), vec2(0.407099, 0.30862), (55.0 + 55.0*-cos(iTime/12.0)) / 55.0);\n            vec2 offset = vec2(-0.150225, 0.89982);\n\t\t\t//offset = vec2(0);\n            \n            uv += offset;\n            \n            vec3 ret = checkDiv(uv);\n\n            vec3 tempCol;\n            float x = ret.y;\n            tempCol = mix(vec3(random(vec2(x+1.0,x+2.0), vec2(1), vec2(0)), 1), \n                          vec3(random(vec2(x,x+1.0), vec2(1), vec2(0)), 1), \n                          smoothstep(0.0, 2.0, ret.z));\n            \n            col += tempCol;\n\t\t\t//col += vec3(0, 0.02,.02)*(x - log(log(ret.x)/log(2.5))/log(2.0));\n    \t}\n    }\n    \n    fragColor = vec4(col/(AA_SCALE*AA_SCALE), 1);\n}","name":"Image","description":"","type":"image"}]}