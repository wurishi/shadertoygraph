{"ver":"0.1","info":{"id":"4cSBDw","date":"1724972846","viewed":39,"name":"Mini March Template","username":"Elsio","description":"test","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["test","raymarch","rotation","estudy"],"hasliked":0,"parentid":"4csfDB","parentname":"Mini march p += s * D, 1/exp(d)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define r iResolution\n#define t iTime\n\nfloat map(vec3 p){\n    float d = 1e5;\n    \n    p.yz *= rot(t * .4);\n    \n    for(float i; i < 6.; i++){\n        d = min(d, \n                length(p + vec3(\n                               .4 * cos(3. * (i + t)),\n                               .3 * sin(2. * (i + t)), \n                               cos((i + t)\n                           )\n                       )\n                ) - .3\n            );\n    }\n    \n    return d;\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    o *= 0.;\n    u = (u - r.xy / 2.) / r.y;\n\n    vec3 p = vec3(0, 0, -3.4),\n         D = normalize(vec3(u, 2.));\n\n    float i, s, d;\n\n    while(i++ < 30.)\n       s = map(p),\n       p += s * D,\n       d += s;\n\n    o.rg += exp(-4. * d) * 4900.;\n}","name":"Image","description":"","type":"image"}]}