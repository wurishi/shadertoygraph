{"ver":"0.1","info":{"id":"3s3GWr","date":"1568155865","viewed":238,"name":"Playing with Weaving","username":"gressettd","description":"Clarified version of Fabrice's twill weaving shader, for us mere mortals who don't play golf. Fabrice, use goggles or the long variable names may blind you. ;-)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["weaving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// adapted from https://www.shadertoy.com/view/ltXcDn\n// with props / respect to Fabrice Neyret\n\n#define PI 3.14159\n\n//////////////////////////////////////////\n// if you want to try without animating the parameters,\n// try these\n\n// scale. 5 - 30 seems to work\n#define SCALE 5.0\n\n// strip width, 0.1 - 1\n#define WIDTH 1.0\n\n// gap between weaves, 0.0 - 0.5\n#define GAP 0.4\n\n// how many threads to skip in the weave\n#define SKIP 1.0\n/////////////////////////////////////////////\n\n\n// on given coords, create a vertical strip\n// that waves up and down. \nfloat WeaveStrip(\n    float x, float y, // position coords\n    float phase, // adjust position of the wave\n    float stripWidth, \n    float skips, // how many thread positions to skip (wave frequency)\n    float gap)   \n{\n    float stripPos = abs(fract(x)- (stripWidth*0.5));\n    float i = 0.0;\n    \n    //  bias (base) + amp(highlight / shadow amount)\n    i = 0.7 + 0.3 * // 0.3 times -1 to 1 == -0.3 to 0.3\n        sin( (PI / skips) // PI = 1 skip, PI / 2 = skip two, PI / 4 = skip four\n            * ( y + phase - ceil(x) ));\n    // y is the main independent variable\n    // phase param is a phase shift by one turn (PI/skips) or zero\n    // subtracting ceil(x) moves the wave phase up or down according to which strip\n    \n    i *= step(stripPos, gap);\n   \n   \n    return i;\n}\n\n// create both horizontal and vertical strips that wave\n// up and down. \n// offset the wave phases so that they interlace.\n// the highest intensity (brightness) is our color here\nfloat Weave(vec2 p, float scale, float width, float skips, float gap)\n{\n    p *= scale;\n    float vertStrips = WeaveStrip( p.x,p.y,0.0, width, skips, gap);\n    \n    // use y,x coords to create horizontal strips. \n    // adding wave phase of 1.0 to have interleaving weaving\n    float horizStrips = WeaveStrip(p.y,p.x,1.0, width, skips, gap);\n    \n    // brightest intensity wins\n    return max(vertStrips,horizStrips);\n}\n\n// antialias.\nfloat SmoothWeave(\n    vec2 uv, \n    float scale, float width, float skips, float gap,\n\tfloat res)\n{\n    // using AA by Shane:\n    // https://www.shadertoy.com/view/4d3SWf\n    \n    const float AA = 4.0; \n\tconst int AA2 = int(AA*AA);\n\tfloat col = 0.0;\n\tvec2 pix = 2.0 / vec2(res,res) / AA; \n\n\tfor (int i = 0; i < AA2; i++) \n    {\n\n\t\tfloat k = float(i);\n        \n\t\tvec2 uvOffs = uv + vec2(floor(k / AA), mod(k, AA)) * pix;\n\t\tcol += Weave(uv,scale,width,skips,gap);\n        \n\t}\n\n\tcol /= (AA*AA);\n\treturn col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    \n    // parameter animation:\n    \n    float scale = SCALE +  mod(floor(iTime / 8.0), 25.0);\n    \n    float width = 0.6 + 0.4*(sin(iTime / 4.0));\n    width = clamp(width,0.1,1.0);\n    \n    float gap = 0.6 + 0.4*(sin(iTime / 3.5));\n    gap = min(gap,width - 0.1);\n    gap = clamp(gap, 0.1,0.5);\n    \n    float skip = ceil(0.5 + 0.5 * 8.0 * (sin(iTime / 2.0)));\n    skip= max(skip,1.0);\n\n\t// render weaving.\n    vec3 col = SmoothWeave(uv, scale, width, skip, gap, iResolution.y) * vec3(1.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}