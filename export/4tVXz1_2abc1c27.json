{"ver":"0.1","info":{"id":"4tVXz1","date":"1482956753","viewed":173,"name":"Flower Orbit Traps hhhzzzsss","username":"hhhzzzsss","description":"This is a fourth power Mandelbrot set rendered with orbit traps. It isn't determined with exact distance, but it works.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","flower","orbit","orbittraps","trap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n#define iterations 30\n\nvec3 huetorgb(float hue) {\n    float h = mod(hue,1.0);\n    h *= 3.0;\n    float sgmt = floor(h);\n    h = fract(h);\n    vec3 rgb;\n    if      (sgmt == 0.0) rgb = vec3(mix(1.0,0.0,h), mix(0.0,1.0,h), 0.0          ) ;\n    else if (sgmt == 1.0) rgb = vec3(0.0,            mix(1.0,0.0,h), mix(0.0,1.0,h));\n    else                  rgb = vec3(mix(0.0,1.0,h), 0.0,            mix(1.0,0.0,h));\n    return pow(normalize(rgb),vec3(0.5));\n}\n\nfloat atan2(vec2 vec) {\n    if (vec.x == 0.0) {\n    \tif (vec.y>0.0) return PI;\n        else return -PI;\n    }\n    else return atan(vec.y,vec.x);\n}\n\nvec2 cmplxPOW(vec2 z, float exponent) {\n    float r = length(z);\n    float o = atan2(z);\n    r = pow(r, exponent);\n    o = exponent*o;\n    return vec2(r*cos(o),r*sin(o));\n}\n\nfloat calcdist(vec2 p) {\n    //float line1 = abs(p.x+0.2);\n    //float line2 = abs(p.y);\n    float r = length(p);\n    float o = atan2(p);\n    float flower1 = abs(0.5*sin(4.0*o+iTime)-r);\n    float flower2 = abs(0.5*sin(4.0*o+PI+iTime)-r);\n    return min(flower1,flower2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.0*uv-1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 1.0/pow(2.0,4.0*sin(iTime*0.2)+4.0);\n    uv.x += -0.9;\n    uv.y += 0.2;\n    \n    vec3 col = vec3(0.8);\n    \n    \n    vec2 z = vec2(0.0);\n    vec2 c = uv;\n    bool inset = true;\n    float orbit = 999999.9;\n    float f = 0.0;\n    for (int i = 0; i < iterations; i ++) {\n        z = cmplxPOW(z,4.0/*+2.0*sin(0.2*iTime)*/) + c;\n        orbit = min(orbit,calcdist(z));\n        ++f;\n        if (dot(z,z)>4.0) {\n            inset = false;\n            break;\n        }\n    }\n    \n    col = huetorgb(1.0/(1.0+orbit*10.0)+0.6);\n    //if (inset) col = vec3(0.0);\n    \n    fragColor = vec4(col, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}