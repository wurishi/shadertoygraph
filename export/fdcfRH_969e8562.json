{"ver":"0.1","info":{"id":"fdcfRH","date":"1655985117","viewed":66,"name":"test SDF","username":"anse","description":"SDF Modle + Indirection Diffuse Lighting","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","distancefields"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//modles\nfloat sdSphere(vec3 p , float r){\n    return length(p) - r;\n}\nfloat sdPlane(vec3 p, vec3 n , float h){\n    //n 必须是单位化的\n    return dot(p,n) + h;\n}\n\n//scene map \nfloat map(vec3 p){\n    float d = sdSphere(p - vec3(0.0 , 0.0 , -3.0) , 0.3);\n    d = min(sdPlane(p - vec3(0.0 , 0.0 , 0.0) , vec3(0.0 , 1.0 , 0.0) , 3.0) , d);\n    return d;\n}\n\n//calc normal dir\nvec3 calcNormal(vec3 p){\n    vec2 e = vec2(1.0,-1.0) * 0.0005;\n    return normalize(\n        e.xyy * map(p + e.xyy) +\n        e.yyx * map(p + e.yyx) +\n        e.yxy * map(p + e.yxy) +\n        e.xxx * map(p + e.xxx)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //------------------\n    vec4 col = vec4(0.0,0.0,0.0,1.0);\n    \n    //camera\n    \n    //light\n    vec3 lDir = vec3(0.7, -1.0 , -1.0);\n    lDir = normalize(lDir);\n    \n    //ray \n    vec3 ro = vec3(0.0 , 0.0 , 1.0);\n    vec2 q = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 rd = normalize(vec3(q.xy , 0.0) - ro);\n    \n    float h = 1.;\n    float t = 1.;\n    //marching\n    for(int i=0;i < 256;i++){\n        vec3 p = ro + rd * t;\n        h = map(p);\n        t += h;\n        //is Closeness face\n        if(h < 0.01){\n            vec3 n = calcNormal(p);\n            float dif = clamp (dot(n ,-lDir) , 0.0 , 1.0);\n            col = vec4(dif,dif,dif,1.0);\n            break;\n        }\n    }\n    \n    fragColor = col;\n}\n\n\n","name":"Image","description":"","type":"image"}]}