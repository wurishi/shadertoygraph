{"ver":"0.1","info":{"id":"flKyDh","date":"1661386934","viewed":112,"name":"Simple Fractal 4 All (03)","username":"spenceryonce","description":"Here is an easy fractal to learn from.\n\nThe code is very small and easy to digest. In this version, I have added colors.\nProps to @Radian628 for coming up with this technique.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","fractals","trippy","geometry","easy","easy","art"],"hasliked":0,"parentid":"ftKyDh","parentname":"Simple Fractal 4 All (02)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float angle = 0.2 *iTime * 0.1;\n    vec2 normalizedCoords = fragCoord / iResolution.xy*2.0-1.0;\n    \n    for(float i = 0.0; i < 64.0; i += 1.0) {\n        normalizedCoords = abs(normalizedCoords);\n        normalizedCoords -= 0.5;\n        normalizedCoords = normalizedCoords + sin(iTime*0.3)*0.1;\n        normalizedCoords *= 1.105;\n        normalizedCoords *= mat2(\n            cos(angle), -sin(angle),\n            sin(angle), cos(angle)\n        );\n        normalizedCoords -= 0.5;\n    }\n    vec3 col = vec3(0.9);\n    vec3 color = col - vec3(\n        length(normalizedCoords+vec2(-0.7,0.6)),\n        length(normalizedCoords+vec2(-0.3,0.1)),\n        length(normalizedCoords +vec2(-0.2,0.5))\n        );\n    color *= 1.1;\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}