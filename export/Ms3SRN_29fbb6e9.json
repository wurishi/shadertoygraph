{"ver":"0.1","info":{"id":"Ms3SRN","date":"1457932116","viewed":566,"name":"dumbpixels","username":"floatvoid","description":"simple pixelate/lowres shader","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["pixelate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    float aspectRatio = iResolution.x / iResolution.y;\n   \n    vec2 newRes = vec2(24);\n \t\n    //uncomment this for animated resolution\n    //newRes = vec2(sin(iTime*0.45)*0.5 +0.5) * 32.0 + 8.0 ;\n    \n    newRes.x *= aspectRatio;\n  \n    vec3 pal = vec3(6, 6, 6 ); //levels per color channel\n    \n    uv = floor( uv * newRes ) / newRes; //the actual magic. \n    vec4 color = texture( iChannel0, uv ); \n           \n    color.xyz = floor( color.xyz * pal  ) / pal.xyz;\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}