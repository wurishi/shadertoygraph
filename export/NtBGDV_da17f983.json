{"ver":"0.1","info":{"id":"NtBGDV","date":"1624698471","viewed":119,"name":"mandelbrot 001 perturbation","username":"RiceFields","description":" mandelbrot perturbation","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","perturbation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define B 4.0\n#define N 200\n#define PERIOD 12.0\n#define C_MUL(a,b) vec2(a.x*b.x - a.y*b.y, a.x*b.y+a.y*b.x)\n\n\n// Ref:\n// https://www.shadertoy.com/view/ttVSDW\n// https://mathr.co.uk/blog/2018-03-12_perturbation_algebra.html\n\nfloat mandelbrot_pert(vec2 c, vec2 dc) {\n   vec2 z = vec2(.0);\n   vec2 dz = vec2(.0);\n   float n = .0;\n   for(int i = 0; i < N; ++i) {\n     // p(Z) = 2*Z*dz + dz^2 + c \n     dz = C_MUL((2.0*z+dz),dz) + dc;\n     // f(z) = z^2 + c\n     z = C_MUL(z, z) + c; \n     // check if perturbation escapes\n     if( dot(dz,dz)>(B*B) ) {\n         n = float(i)/float(N);\n         break;\n     }\n   }\n   return n;\n}\n\nvec3 image(vec2 fragCoord) {\n    vec2 uv = (fragCoord / iResolution.xy) * 2.0 - 1.0; // remap uv to [-1, 1]\n    uv.x *= iResolution.x / iResolution.y;\n        \n    // calculate and apply zoom\n    float fzoom = .62 + .38*cos(iTime/PERIOD);\n    float zoom = pow(fzoom, 12.0);\n    \n    vec2  c = vec2(-.745,.186);\n    vec2 dc = uv*zoom;\n    \n    float f = mandelbrot_pert(c, dc)*2.0*fzoom-0.7; \n    \n    // calculate color\n    vec3 col = mix(vec3(.81,.06,.13), vec3(.80,.40,.0), f*f);\n\n    return (f*f*(2.0 - 4.0*f))*col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t// anti-aliasing\n\tfragColor = vec4(image(fragCoord.xy + vec2(0,0)), 1.0f);\n\tfragColor.rgb += image(fragCoord.xy + vec2(.5,.0));\n\tfragColor.rgb += image(fragCoord.xy + vec2(.0,.5));\n\tfragColor.rgb += image(fragCoord.xy + vec2(.5,.5));\n    fragColor.rgb += image(fragCoord.xy + vec2(.25,.25));\n\tfragColor.rgb += image(fragCoord.xy + vec2(.75,.25));\n\tfragColor.rgb += image(fragCoord.xy + vec2(.25,.75));\n\tfragColor.rgb += image(fragCoord.xy + vec2(.75,.75));\n\tfragColor.rgb /= 8.0;\n}","name":"Image","description":"","type":"image"}]}