{"ver":"0.1","info":{"id":"WdcBR7","date":"1604623157","viewed":96,"name":"Mobiustrans","username":"branc116","description":"Shader that performs mobius transformation over some area","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["complexanalysis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float mask(vec4 rect, vec2 point) {\n    return rect.x >= point.x && rect.z <= point.x && rect.y >= point.y && rect.w <= point.y ? 1.0 : 0.0;\n}\nvec2 not_cmplx(vec2 a) {\n    return vec2(a.x, -a.y);\n}\nvec2 mul_cmplx(vec2 a, vec2 b) {\n    return vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\n}\nvec2 div_cmplx(vec2 a, vec2 b) {\n    return mul_cmplx(a, not_cmplx(b))/(b.x*b.x + b.y*b.y);\n}\nvec2 mobi(vec2 z, vec2 a, vec2 b, vec2 c, vec2 d) {\n    vec2 up = a * z + b;\n    vec2 down = c * z + d;\n    return up / down;\n}\nvec2 mobi_inv(vec2 m, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return div_cmplx(mul_cmplx(m, d) - b, a - mul_cmplx(c, m));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 a, b, c, d;\n    vec2 uv_mouse = (iMouse.xy / iResolution.xy - vec2(0.5)) * 12.0;\n    a = vec2(1.0, 1.0); \n    b = vec2(0.0, 0.0); \n    c = vec2(sin(iTime*3.14), cos(iTime*2.0)); \n    d = vec2(1.0, 0.0) + c;\n    float show_og = 0.1;\n    float zoom = .2;\n    vec2 uv =(fragCoord/iResolution.xy - vec2(0.5, 0.5)) / zoom;\n    float m = 0.02;\n    vec2 shade = mod(uv, m);\n    float shadex = mod(uv.x, m);\n    float shadey = mod(uv.y, m);\n    vec4 bounds = vec4(1.0, 1.0, -1.0, -1.0);\n    vec3 col = vec3(uv.y > 0.0 ? 1.0 : 0.0);\n    vec2 uv_mobi = mobi(uv, a, b, c, d); \n    col = vec3(mask(bounds, uv) * (shadex < m / 10.0 ? 1.0 : 0.0)  );\n    col = clamp(col + vec3(mask(bounds, uv) * (shadey < m / 10.0 ? 1.0 : 0.0)), 0.0, 1.0);\n\tcol *= show_og;\n    \n    vec2 mobi_i = mobi_inv(uv, a, b, c, d);\n    vec2 shadem = mod(mobi_i, m);\n    col = clamp(col + vec3(mask(bounds, mobi_i) * (shadem.x < m / 10.0 ? 1.0 : 0.0), 0.0, 0.0), 0.0, 1.0);\n    col = clamp(col + vec3(mask(bounds, mobi_i) * (shadem.y < m / 10.0 ? 1.0 : 0.0), 0.0, 0.0), 0.0, 1.0);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}