{"ver":"0.1","info":{"id":"3tSSRh","date":"1564904213","viewed":83,"name":"Britney abstract","username":"foran","description":"Britney abstract","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["britneyabstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// Sidescroller WTF, by @rianflo\n//\n// @danbri added running man from http://glsl.heroku.com/e#10532.6 \n// which in turn took it from David Hoskins shadertoy, https://www.shadertoy.com/view/MdsGRS\n// dashxdr ripped out all but running man 20140519\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D bb;\nconst float smokeIntensity=2.;\nconst float offset=.5;\nconst vec2 smokeDirection=vec2(.05,.75);//point2D\nconst vec4 smokeColor=vec4(.75,.75,.75,.75);//color\n\nfloat runnerHeight;\nfloat runCycle;\n\n\n//----------------------------------------------------------------------------\nvec2 Segment( vec2 a, vec2 b, vec2 p )\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn vec2( length( pa - ba*h ), h );\n}\n\n//----------------------------------------------------------------------------\nfloat Head( vec2 p, float s )\n{\n\tp *= vec2(1.4, 1.1);\n\treturn length(p)-s;\n}\n\n//----------------------------------------------------------------------------\nvec2 Rotate(vec2 pos, vec2 piv, float ang)\n{\n\tmat2 m = mat2(cos(ang), sin(ang), -sin(ang), cos(ang));\n\tpos = (m * (pos-piv))+piv;\n\treturn pos;\n}\n\n//----------------------------------------------------------------------------\nfloat Smin( float a, float b )\n{\n    float k = 0.025;\n\tfloat h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\t\n//----------------------------------------------------------------------------\nvec2 Running( vec2 p)\n{\n\t// Oh the horror! - of magic numbers. ;)\n\tfloat material = 0.0;\n\tfloat d;\n\tfloat ang = -.4;\n\tmat2 leanM = mat2(cos(ang), sin(ang), -sin(ang), cos(ang));\n\trunnerHeight = -.5 + .05*min(.7, cos(runCycle*2.0+.5));\n\n\tp += vec2(0.0, runnerHeight);\n\tp *= leanM;\n\tfloat headX = sin(runCycle*.55)*.035;\n\td = Head(p-vec2(.44+headX, -0.02-headX*.5), .08);\n\t\n\tfloat arm1 = sin(runCycle)*.6*(.2+1.0);\n\tfloat leg1 = sin(runCycle)*.7*(.05+.5);\n\t\n\t// Neck...\n\tvec2 h = Segment( vec2(0.4,-0.1-0.01-headX*.5), vec2(0.42+headX,-.04), p );\n\tfloat d2 = h.x - 0.03 + h.y*0.005;\n\td = Smin(d, d2 );\n\t// Body...\n\th = Segment( vec2(0.4,-0.17), vec2(0.4,-.37), p );\n\td2 = h.x - 0.065 + h.y*0.03;\n\td = Smin(d, d2 );\n\t\n\t// Upper arm...\n\tvec2 elbow = Rotate(vec2(0.4,-.3), vec2(.4,-0.14), arm1);\n\th = Segment(vec2(0.4,-0.14),  elbow, p );\n\td2 = h.x - 0.04 + h.y*0.01;\n\td = min(d, d2 );\n\t// Lower arm...\n\tvec2 wrist = Rotate(elbow+vec2(.13, -.02), elbow, arm1*1.5-.3);\n\th = Segment(elbow,  wrist, p );\n\td2 = h.x - 0.03 + h.y*0.01;\n\td = min(d, d2 );\n\t// Hand...\n\tvec2 hand = Rotate(wrist+vec2(.005, -0.0), wrist, arm1*1.5-.3);\n\th = Segment(wrist,  hand, p );\n\td2 = h.x - 0.03 + h.y*0.001;\n\td = min(d, d2 );\n\t\n\t// Upper leg...\n\tvec2 knee = Rotate(vec2(0.4,-.55), vec2(.4,-0.35), -leg1+.5);\n\th = Segment(vec2(0.4,-.35), knee, p );\n\td2 = h.x - 0.05 + h.y*0.015;\n\td = Smin(d, d2 );\n\t\n\t// Lower leg...\n\tvec2 rotFoot = Rotate(knee+vec2(.0, -.22), knee, -(-leg1*.3+1.6));\n\trotFoot = Rotate(rotFoot, knee, smoothstep(-.2, .2, -(leg1)*.15)*5.2-1.2);\n\th = Segment(knee, rotFoot , p );\n\td2 = h.x - 0.03+ h.y*0.008;\n\td = Smin(d, d2 );\n\t\n\t// Foot...\n\tvec2 toes = Rotate(rotFoot+vec2(.09, 0.0), rotFoot, smoothstep(-.1, .15, -leg1*.2)*2.4-1.7-leg1);\n\th = Segment(rotFoot, toes, p );\n\td2 = h.x - 0.018 + h.y*0.005;\n\td = Smin(d, d2 );\n\t\n\tif (d > 0.005)\n\t{\n\t\t// Do shadowed back limbs if others haven't been hit...\n\t\t// Upper arm 2...\n\t\telbow = Rotate(vec2(0.4,-.3), vec2(.4,-0.14), -arm1);\n\t\th = Segment(vec2(0.4,-0.14), elbow, p );\n\t\td2 = h.x - 0.04 + h.y*0.01;\n\t\td = min(d, d2 );\n\t\t// Lower arm 2...\n\t\twrist = Rotate(elbow+vec2(.13, -.01), elbow, -arm1*1.5+.1);\n\t\th = Segment(elbow,  wrist, p );\n\t\td2 = h.x - 0.03 + h.y*0.01;\n\t\td = min(d, d2 );\n\t\t// Hand...\n\t\tvec2 hand = Rotate(wrist+vec2(.005, -0.0), wrist, -arm1*1.5-.3);\n\t\th = Segment(wrist,  hand, p );\n\t\td2 = h.x - 0.03 + h.y*0.001;\n\t\td = min(d, d2 );\n\t\t// Upper leg...\n\t\tknee = Rotate(vec2(0.4,-.55), vec2(.4,-0.35), leg1+.5);\n\t\th = Segment(vec2(0.4,-.35), knee, p );\n\t\td2 = h.x - 0.05 + h.y*0.02;\n\t\td = min(d, d2 );\n\t\t// Lower leg...\n\t\trotFoot = Rotate(knee+vec2(.0, -.22), knee, -(leg1*.3+1.6));\n\t\trotFoot = Rotate(rotFoot, knee, smoothstep(-.2, .2, leg1*.15)*5.2-1.2);\n\t\th = Segment(knee, rotFoot, p );\n\t\td2 = h.x - 0.03+ h.y*0.008;\n\t\td = Smin(d, d2 );\n\t\n\t\t// Foot...\n\t\ttoes = Rotate(rotFoot+vec2(.09, 0.0), rotFoot, smoothstep(-.1, .15, leg1*.2)*2.4-1.7+leg1);\n\t\th = Segment(rotFoot, toes, p );\n\t\td2 = h.x - 0.018 + h.y*0.005;\n\t\td = Smin(d, d2 );\n\t\tmaterial = 2.0;\n\t}\n\n\treturn vec2(d, material);\n}\nfloat random(vec2 co){\n\treturn fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453);\n}\n\nfloat noise(vec2 p){\n\t\n\treturn random(vec2(p.x+p.y*10000.,p.y+p.x*10000.));\n\t\n}\n\nvec2 sw(vec2 p){return vec2(floor(p.x),floor(p.y));}\nvec2 se(vec2 p){return vec2(ceil(p.x),floor(p.y));}\nvec2 nw(vec2 p){return vec2(floor(p.x),ceil(p.y));}\nvec2 ne(vec2 p){return vec2(ceil(p.x),ceil(p.y));}\n\nfloat smoothNoise(vec2 p){\n\t\n\tvec2 interp=smoothstep(0.,1.,fract(p));\n\tfloat s=mix(noise(sw(p)),noise(se(p)),interp.x);\n\tfloat n=mix(noise(nw(p)),noise(ne(p)),interp.x);\n\treturn mix(s,n,interp.y);\n\t\n}\n\nfloat fractalNoise(vec2 p){\n\t\n\tfloat n=0.;\n\tn+=smoothNoise(p);\n\tn+=smoothNoise(p*2.)/2.;\n\tn+=smoothNoise(p*4.)/4.;\n\tn+=smoothNoise(p*8.)/8.;\n\tn+=smoothNoise(p*16.)/16.;\n\tn/=1.+1./2.+1./4.+1./8.+1./16.;\n\treturn n;\n\t\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n\n{\n\t\n\tvec2 p = (-iResolution.xy + 2.0 * fragCoord.xy) / min(iResolution.x, iResolution.y);\n\t\nvec2 sd=(smokeDirection-vec2(.5));\t\t\nvec2 nuv=vec2(p.x-sd.x*iTime/3.,p.y-sd.y*iTime/3.);\n\tvec3 col;\n\trunCycle = iTime*4.0;\n\tfloat x=fractalNoise(nuv*6.);\n\tvec4 inputPixel=texture(iChannel0,(fragCoord/iResolution.xy)*.93+.051);\n\n\tvec2 res = Running(p * .5);\n\tcol=vec3(smoothstep(0.0, .0005, res.x));\t\n\t\n\tvec4 final=mix(vec4(x*col,max(x,inputPixel.a)),inputPixel,pow(abs(p.y),pow(smokeColor.a*smokeIntensity*x,2.)));\n\t\n\tfragColor=vec4(final);\n}","name":"Image","description":"","type":"image"}]}