{"ver":"0.1","info":{"id":"tslcDn","date":"1655415695","viewed":247,"name":"CRT effect - tony","username":"TonyIlersich","description":"old timey crt warp with static and screen tear","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(float bias)\n{\n    float t = iTime * .2 + 100.0 * bias;\n    return mod(1000.0 * sin(t) + 100.0 * sin(10.0 * t), 1.0);\n}\n\nvec2 crt(vec2 p)\n{\n    vec2 center = vec2(0.5, 0.5);\n    vec2 d = (p - center) * 2.0;\n    float manhat = abs(d.x) + abs(d.y);\n    float mag = length(d);\n    float t = .3;\n    vec2 d1 = d * (sqrt(1.0 + mag * mag) / sqrt(2.0) * t + (1.0 - t)); // <-- crt effect\n    vec2 p1 = d1 / 2.0 + center;\n    return p1;\n}\n\nvec3 desat(vec3 col, float t)\n{\n    float avg = (col.x + col.y + col.z) / 3.0;\n    return avg * t + col * (1.0 - t);\n}\n\nvec3 tear(vec3 col, float bias)\n{\n    float t = .15 * mod(iTime * .1 + bias, 2.0) / 2.0;\n    return col * (1.0 - t) + vec3(0.5, 0.5, 0.5) * t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 crt = crt(uv);\n    \n    float bias = trunc(uv.y * 1000.0) / 10.0 + trunc(uv.x * 100.0) / 100.0;\n    float rnd = .6 * noise(bias) + .3;\n    \n    vec3 col = desat(texture(iChannel0, crt).xyz, 0.5) * rnd\n        + vec3(0.5, 0.5, 0.5) * (1.0 - rnd);\n    \n    col = tear(col, uv.y);\n\n    if (clamp(crt, vec2(0.0, 0.0), vec2(1.0, 1.0)) != crt)\n    {\n        col = vec3(0.0, 0.0, 0.0);\n    }\n    \n    col = pow(col, vec3(1.0, 1.0, 1.0) * 1.1) * 1.1;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}