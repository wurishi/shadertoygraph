{"ver":"0.1","info":{"id":"Nl2XRw","date":"1627511163","viewed":228,"name":"Intersection Line - Line","username":"Yusef28","description":"Basic Line-Line Intersection with a new style based on https://www.shadertoy.com/view/4tXcDl by paniq","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","intersection","graph","lineintersection","lineline"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n/////////////////////////////////////////////////////////////\n//                                                         //\n// Author:Yusef28                                          //\n// Start Date: 26-07-2021                                  //\n// Status: On Going                                        //\n// Topic: Line-Line Intersection                           //\n// Sources: Rudimentary Concept (Google/Wikipedia/Youtube) //\n// Listening to: Andromida - Hellscape (FULL ALBUM STREAM) //\n//                                                         // \n/////////////////////////////////////////////////////////////\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -0.5,0.5)\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    \n      ////////////////////////////////////////////\n      //                                       //\n////////  BACKGROUND GRID DESIGN             //\n      //                                   //\n      /////////////////////////////////////\n      \n    vec2 st = uv;//save the unscaled uv\n    //I'm only making an 8(*aspect)x8 grid, higher variables\n    //may end up with graphs completely outside it\n    uv*=8.;\n    //graph background\n    vec3 col = vec3(0.1);\n    //center highlights\n    col = mix(col,vec3(0.16),1.0-length(uv/8.));\n    //dust \n    float specks = fract(sin(dot(uv,vec2(123.,16.)))*433413.);\n    //nice soft texture \n    float tex = texture(iChannel0,st).x;\n    col = mix(col,vec3(0.25),pow(tex,2.));\n    //small grid lines\n    vec2 lines = fract(uv*5.);\n    lines = smoothstep(0.45,0.52,abs(lines-0.5));\n    col = mix(col,vec3(0.24),lines.x);\n    col = mix(col,vec3(0.24),lines.y);\n    //larger grid lines\n    lines = fract(uv);\n    lines = smoothstep(0.47,0.52,abs(lines-0.5));\n    col = mix(col,vec3(0.5),lines.x);\n    col = mix(col,vec3(0.5),lines.y);\n    //axis lines\n    lines = smoothstep(0.0,0.02,abs(uv));\n    col = mix(col,vec3(0.6),1.0-lines.x);\n    col = mix(col,vec3(0.6),1.-lines.y);\n    col = mix(col,vec3(0.1),step(0.1,specks)*0.2);\n    \n    \n      ////////////////////////////////////////////\n      //                                       //\n////////  LINE INTERSECTION CALCULATIONS     //\n      //                                   //\n      /////////////////////////////////////\n    \n    \n    //Line variables (slopes and y intersects)\n    float m1 = sin(iTime)*2.;\n    float m2 = cos(iTime);\n    float b1 = cos(iTime+0.4)*2.;\n    float b2 = sin(iTime+1.3)*3.;\n    \n    //calculate the intersection point\n    float xVal = (b2-b1)/(m1-m2);\n    float yVal = m1*xVal + b1;\n    \n    vec2 intersectionPoint = vec2(xVal,yVal);\n    \n        \n      ////////////////////////////////////////////\n      //                                       //\n////////        DRAWING EVERYTHING           //\n      //                                   //\n      /////////////////////////////////////\n    \n    \n    //line 1\n    float f;// = 1.0-smoothstep(0.02,0.06,abs(uv.x*m1 + b1 - uv.y));\n    f = 1.0-smoothstep(0.05,0.1,abs(uv.x*m1 + b1 - uv.y)/fwidth(uv.x*m1 + b1 - uv.y)/20.);\n    \n    col = mix(col, vec3(1.,.2,0.5), f);\n    \n    //line 2\n    //f = 1.0-smoothstep(0.02,0.06,abs(uv.x*m2 + b2 - uv.y));\n    f = 1.0-smoothstep(0.05,0.1,abs(uv.x*m2 + b2 - uv.y)/fwidth(uv.x*m2 + b2 - uv.y)/20.);\n    col = mix(col, vec3(1.,.3,.3), f);\n    \n    //intersection point\n    f = 1.-smoothstep(0.02,0.04,abs(length(uv-intersectionPoint)-0.15));\n    col = mix(col, vec3(1.,0.7,0.), f);\n    f = 1.-smoothstep(0.03,0.08,length(uv-intersectionPoint)-0.015);\n    col = mix(col, vec3(1.,0.7,0.), f);\n    \n        \n      ////////////////////////////////////////////\n      //                                       //\n////////          POST PROCESSING            //\n      //                                   //\n      /////////////////////////////////////\n        \n    \n    //vignette\n    uv = fragCoord/iResolution.xy;\n    uv *=  1.0 - uv.yx;\n    float vig = uv.x*uv.y * 15.0; // multiply with sth for intensity\n    \n    vig = pow(vig, 0.15); // change pow for modifying the extend of the  vignette\n\n    // Output to screen\n    fragColor = vec4(col*vig,1.0);\n}\n","name":"Image","description":"","type":"image"}]}