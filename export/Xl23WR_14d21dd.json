{"ver":"0.1","info":{"id":"Xl23WR","date":"1428110209","viewed":2363,"name":"ngMir2","username":"netgrind","description":"webcam thing\nmouse x is fun","likes":14,"published":3,"flags":2,"usePreview":0,"tags":["camera","webcam","cam","mirror","netgrind"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const int loops = 3;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;   \n    vec2 f = vec2(1.)/iResolution.xy;\n    vec4 c = vec4(0.);\n    \n    float d = 0.;\n    for(int i = 0; i<loops;i++){\n        uv+=f;\n        c+=texture(iChannel0,uv);\n        uv-=f*2.;\n        c+=texture(iChannel0,uv);\n        uv+=f;\n        f+= vec2(1.)/iResolution.xy;\n        d+=2.;\n    }   \n    c/=d;\n    \n    c+=iMouse.x/ iResolution.x*3.;\n    c.r = mod(c.r,(1.));\n    c.g = mod(c.g,(2.));\n    c.b = mod(c.b,(1.));\n    \n    c /= pow(c,vec4(20.));\n    c.rgb = normalize(c.rgb);\n    \n    c.a = 1.;\n\tfragColor = c;\n}","name":"","description":"","type":"image"}]}