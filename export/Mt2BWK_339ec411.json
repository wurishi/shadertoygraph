{"ver":"0.1","info":{"id":"Mt2BWK","date":"1517263420","viewed":206,"name":"Camera Fractile","username":"rasimon22","description":"A simple texture over the camera input using mouse input","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["camera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv2 = fract(uv * tan(iMouse.x/10.0) + iTime);\n\tfragColor = vec4(uv2,0.5+0.5*sin(iTime),1.0);\n    fragColor.xy += cos(iTime);\n    fragColor += texture(iChannel0, uv) * sin(iTime)/ 4.0;\n    if(sin(fragColor.x) == 0.1){\n        fragColor += texture(iChannel0, uv);\n    }\n}","name":"Image","description":"","type":"image"}]}