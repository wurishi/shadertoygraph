{"ver":"0.1","info":{"id":"4tjyR1","date":"1507445966","viewed":265,"name":"Simplest sunset","username":"azymohliad","description":"One of my first shaders. Made as an excercise for thebookofshaders.com","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 coord;\n\n\nfloat plot_sun(vec2 center, float radius) {\n    return 1.0 - smoothstep(radius * 0.7, radius * 1.1, distance(coord, center));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    coord = fragCoord.xy/iResolution.yy;\n    \n    // Sea parameters\n    bool is_sea = false;    \n    float sea_line = 0.3;\n\n    // Sun parameters\n\tfloat sun_size = 0.1;\n    \n    vec2 sun_pos;\n    sun_pos.x = 0.9;\n    sun_pos.y = 1.0 - fract(iTime * 0.1);\n    \n\tvec3 sun_color;\n    sun_color.r = 1.000;\n    sun_color.g = clamp(sun_pos.y * 1.2, 0.3, 1.0);\n    sun_color.b = clamp(sun_pos.y * 1.0, 0.2, 1.0);\n    \n    // Sky parameters\n\tvec3 sky_color = vec3(0.5, 0.6, 0.9);\n    \n    if (coord.y < sea_line) {\n    \tcoord.y = sea_line + (sea_line - coord.y) / 4.0;   \n        is_sea = true;\n    }\n    \n    float ratio = pow(abs(1.0 - distance(coord, sun_pos)), 1.5);\n\n    vec3 color;\n    color = mix(sky_color, sun_color, ratio);\n    color = mix(color,sun_color, plot_sun(sun_pos, sun_size));\n    if (is_sea) color -= 0.02;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}