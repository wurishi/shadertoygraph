{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float density( vec3 p, float distortion )\n{\n\tvec3 tiled = ( ( p + vec3( 2.0 ) ) * 0.25 );\n\ttiled = fract( tiled );\n\ttiled = 4.0 * tiled - vec3( 2.0 );\n\tfloat variation = distortion * ( \n\t\tsin( 24.0 * atan( tiled.x / tiled.y ) ) + \n\t\tsin( 24.0 * atan( tiled.y / tiled.z ) ) + \n\t\tsin( 24.0 * atan( tiled.z / tiled.x ) ) );\n\treturn 1.0 + variation - length( tiled );\n}\nvec2 rotate( vec2 inVec, float angle )\n{\n\tvec2 sincos = vec2( sin(angle), cos(angle) );\n\treturn vec2( inVec.x * sincos.y - inVec.y * sincos.x, \n\t\t\t\tinVec.x * sincos.x + inVec.y * sincos.y );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2( .5, .5 );\n\tuv *= vec2( 1.0, .6 );\n\tvec3 dir = normalize( vec3( uv.x, uv.y, -1.0 ) );\n\t\n\tfloat progress = .03 * iTime;\n\t\n\tdir.yz = rotate( dir.yz, .3 * sin( .5 * progress ) );\n\tdir.zx = rotate( dir.zx, .7 * progress );\n\t\n\tfloat mask = .5 + .5 * sin( length( sin( uv * 7.0) + vec2( 3.0 * progress, progress ) ) * 6.28  + 10.0 * progress );\n\tmask = pow( mask, 6.0)* .4 +.3;\n\tfloat x = progress * 4.0;\n\tfloat z = 10.0 * sin( .3 * progress );\n\tfloat y = 2.0 + 1.0 * sin( 2.0 * progress );\n\t\n\t\n\tvec3 pos = vec3(x,y,z);\n\t\n\t\n\tfloat stepLen = 0.3;\n\tvec3 step = dir * stepLen;\n\tfloat acumulate = .0;\n\tfloat bluredAcumulate = .0;\n\tfloat dist = .0;\n\t\n\tfor( int i = 0; i < 100; ++i )\n\t{\n\t\tpos += step;\n\t\tif( density(pos, .05) > .0 )\n\t\t{\n\t\t\tbluredAcumulate = (50.0 - dist ) * .02;\n\t\t\tbreak;\n\t\t}\n\t\tdist += stepLen;\n\t}\n\tdist = .0;\n\tpos = vec3(x,y,z);\t\n\tfor( int i = 0; i < 100; ++i )\n\t{\n\t\tpos += step;\n\t\tif( density(pos, .2) > .0 )\n\t\t{\n\t\t\tacumulate = (50.0 - dist ) * .02;\n\t\t\tbreak;\n\t\t}\n\t\tdist += stepLen;\n\t}\n\t\n\tacumulate = pow(acumulate, 2.5);\n\tbluredAcumulate = pow(bluredAcumulate, 2.5);\n\tvec3 colorHard =( 1.0 - mask )* vec3( 1.2, 1.6, 0.6 ) * ( 1.0 - acumulate);\n\tvec3 colorChill = mask * vec3( 0.6, 1.5, 1.5) * ( 1.0 - bluredAcumulate);\n\tfragColor = vec4( colorChill + colorHard, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XslGR7","date":"1378918828","viewed":277,"name":"Have some life","username":"mare","description":"Do you feel chill or warm? Don't go to sleep. Don't panic. Have yourselve some life.\n\n-- \nshader is pretty heavy, and abstract, however it's one of my first peaces, so try to enjoy the purity of unpolished chaos of random creation :D","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","abstract","heavy"],"hasliked":0,"parentid":"","parentname":""}}