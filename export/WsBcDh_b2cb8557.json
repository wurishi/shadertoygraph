{"ver":"0.1","info":{"id":"WsBcDh","date":"1586501544","viewed":315,"name":"doppler + sound barrier","username":"matthen","description":"demonstration of doppler effect + breaking sound barrier","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["doppler"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n#define ROTATIONS 3.\n#define WAVES 16.0\n#define C 3.88651\n#define FREQ 8.0\n#define SPEED 0.33\n\nvec3 gradient(in float t){        \n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3 (0.5,0.5,0.5);\n    vec3 c = vec3(2.0,1.0,1.0);\n    vec3 d = vec3(0.2,0.20,0.25);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\n\nfloat interp(in float t) {\n    // this code is wild, and is generated by Mathematica\n    t = mod(t + 2., 7.);\n    float a = 0.103093;\n    if (t <= 1.) {\n    \treturn a * t * t * t * t * (1.5 + (-1.8 + 0.6 * t) * t);   \n    }\n    if (t <= 2.) {\n    \treturn a * (-0.3+0.6 * t);\n    }\n    if (t <= 3.) {\n        return a * (279.7 + t * (-716.2 + t * (756. + t*(-420.+t*(129.5+t*(-21.+1.4*t))))));\n    }\n    if (t <= 4.) {\n    \treturn a * (-3.8 + 2.* t);   \n    }\n    if (t <= 5.) {\n        return a * (7804.2 + t * (-10622.+ t * (6000.+t*(-1800.+t*(302.5+(-27.+t)*t)))));\n    }\n    if (t <= 7.) {\n        float tt = t - 6.;\n        \n        return 0.95167525773194 + \n            tt * (0.1546391752577319 + tt * (-0.14497422680412372 + \n    0.04832474226804124  * tt * tt - 0.009664948453608248 * tt * tt * tt * tt));\n            \n   }\n    return 1.;\n}\n\n\nvec2 pos(in float t) {\n\tfloat theta = 6.2831853 * ROTATIONS * interp(t);\n    \n    return vec2(\n    \tsin(theta),\n        cos(theta)\n    );\n    \n    \n}\n\nfloat wave(in float t, in vec2 uv) {\n    float result = 0.;\n    for (float i = 0.; i < WAVES; ++i) {\n        float td = t - i / FREQ;\n        td -= mod(td, 1. / FREQ);\n        vec2 ptd = pos(td);\n        float r =  (t - td) * C;\n        float d = distance(uv, ptd) - r;\n        // disappating gaussian wave front\n        result += exp(- 180. * d * d / (0.2 + r)) / (5. + 5. * r);\n        \n        \n    }\n    return 2. * result + 0.2;\n    \n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = 2. * (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    uv *= 2.5;\n    \n    float t =  iTime * SPEED;\n \t\n    vec3 col = gradient(wave(t, uv));\n    \n    col += 1. - smoothstep(\n        0.145, 0.16,\n        abs(distance(uv, pos(t)))    \n    );\n    \n    col += 1. - smoothstep(\n        0.0, 0.05,\n        abs(dot(uv, uv) - 1.)    \n    );\n    \n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}