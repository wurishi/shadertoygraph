{"ver":"0.1","info":{"id":"tdcXW8","date":"1571855944","viewed":74,"name":"RCField","username":"lunar","description":"world is round","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["ui"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b)\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdRoundBoxSupreme( in vec2 p, in vec2 b, in vec4 r ) \n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\n\n// screenPos - box(vec2) - center(vec2) - radius(float) - rotation(float)\nfloat sdRoundCorner(in vec2 p,in vec2 b, in vec2 c, in float r, in float rot)\n{\n\tp -= c;\n    p = vec2(cos(rot) * p.x + sin(rot) * p.y, cos(rot) * p.y - p.x * sin(rot));\n  \treturn r - sdBox(p, b * .5);\n}\n\n// screenPos - box(vec2) - center(vec2) - radius(vec4) - rotation(float)\nfloat sdRoundCornerX(in vec2 p,in vec2 b, in vec2 c, in vec4 r, in float rot)\n{\n\tp -= c;\n    p = vec2(cos(rot) * p.x + sin(rot) * p.y, cos(rot) * p.y - p.x * sin(rot));\n    // can check this before passing to GPU\n    // vec4 r4 = min(r, min(b.x, b.y));\n    return -sdRoundBoxSupreme( p, b * .5, r );\n}\n\nconst vec4 borderColor = vec4(1., 1., 1., 1.);\nconst vec4 fillColor = vec4(0., 0.8, 1., 1.);\n\n// internal passes thru\nconst vec2 box = vec2(200., 240.);\nconst vec2 center = vec2(280., 270.);\nconst float rotation = 0.7853981;\nconst float borderSize = 10.;\nconst vec4 radius4 = vec4(50.,30.,0.,15.);\n// internal passes thru\n\n// new param\nconst float radius = 20.;\nconst vec2 shadowOffset = vec2(20., 0.); // this need to get transformed\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n\n    //float f = clamp(sdRoundCorner(uv, box, center, radius, rotation), 0., 1.);\n    float f = clamp(sdRoundCornerX(uv, box, center, radius4, rotation), 0., 1.);\n    float b = clamp(sdRoundCornerX(uv, box + vec2(2. * borderSize), center, radius4 + vec4(borderSize), rotation), 0., 1.);\n    float s = clamp(sdRoundCornerX(uv, box + vec2(2. * borderSize), center + shadowOffset, radius4 + vec4(borderSize), rotation) * .02, 0., 1.); \n    fragColor = f * fillColor + (1. - f) * b * borderColor + /*shadow and background*/(1. - b) * (1. - s) * vec4(.8); \n}","name":"Image","description":"","type":"image"}]}