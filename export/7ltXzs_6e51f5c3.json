{"ver":"0.1","info":{"id":"7ltXzs","date":"1639652658","viewed":111,"name":"CornellBoxPanorama","username":"JackSH3","description":"Generate a panorama image of cornel box.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\n// Reference:\n//  IBL Baker https://github.com/derkreature/IBLBaker\n\nvec2 panoramaUvToLatLong(vec2 panoramaUv) {\n    float longitude = (panoramaUv.x - 0.5) * (-2.0 * PI); // longitude 経度 [-PI, +PI] 標準子午線(中央の垂直線)がゼロ\n    float latitude = (panoramaUv.y - 0.5) * (-1.0 * PI); // latitude 緯度 [-PI/2, +PI/2] 赤道(中央の水平線)がゼロ\n    return vec2(latitude, longitude);\n}\n\n\nvec3 latLongToDir(vec2 latLong) {\n    return vec3(\n        sin(latLong.y) * cos(latLong.x),\n\t\tsin(latLong.x),\n\t\tcos(latLong.y) * cos(latLong.x)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 latLong = panoramaUvToLatLong(uv);\n    vec3 dir = latLongToDir(latLong);\n    float angles[6] = float[6](\n        dot(dir, vec3(1,0,0)),\n        dot(dir, vec3(-1,0,0)),\n        dot(dir, vec3(0,1,0)),\n        dot(dir, vec3(0,-1,0)),\n        dot(dir, vec3(0,0,1)),\n        dot(dir, vec3(0,0,-1))\n    );\n    vec4 colors[6] = vec4[6](\n        vec4(1, 1, 1, 1),\n        vec4(0, 0, 1, 1),\n        vec4(0, 0, 0, 1),\n        vec4(0, 1, 0, 1),\n        vec4(1, 0, 0, 1),\n        vec4(1, 1, 0, 1)\n    );\n    \n    int index = 0;\n    float angle = -PI;\n    fragColor = vec4(0,0,0,1);\n    for (int i=0; i<6; i++) {\n        if (angles[i] >= angle) {\n            angle = angles[i];\n            fragColor = colors[i];\n        }\n    }\n    \n}\n","name":"Image","description":"","type":"image"}]}