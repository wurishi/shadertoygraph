{"ver":"0.1","info":{"id":"4Xc3Dl","date":"1717107566","viewed":62,"name":"crystaleyes","username":"technowizard","description":"following a tutorial from kishimisu\nhttps://www.youtube.com/watch?v=f4s1h2YETNY","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette (float t){\n vec3 a = vec3(0.498, 0.588, 1.128);\n vec3 b = vec3(0.303, 0.388, 0.273);\n vec3 c = vec3(1.763, 0.938, 0.787);\n vec3 d = vec3(-2.982, 1.818, 1.948);\n \n return a + b * cos (6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) /iResolution.y;\n    float t = sin(iTime/4.);\n    float grid = 64.-32.*cos(iTime/4.);\n    uv = floor(uv*grid)/grid;\n    vec2 uv0 = uv * vec2(1.+uv.x+ cos(uv.y+iTime),1.+sin(uv.x+iTime)+uv.y);\n    vec3 finalColor = vec3(0.0);\n    \n    float loops = 2.0;\n    \n    for(float i = 0.0; i<loops;i++){\n            uv = fract(uv * 2.3  * (sin(iTime/4.)+.5)*3. )  - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col =palette(length(uv0) + i*.01+  iTime/4.);\n        d = sin(d * 8.0+iTime*2.)/8.;\n        d = abs(d);\n\n        d = smoothstep (0.0,0.3,d);\n\n         d = pow(0.01/d, 1.03);\n        \n        d*=((loops-i)/(loops));\n\n        finalColor += col *d;\n    }\n\n    // Output to screen\n    if(uv.x>.9) finalColor.r += 1.;\n    \n    fragColor = vec4(finalColor,1.0);\n}\n","name":"Image","description":"","type":"image"}]}