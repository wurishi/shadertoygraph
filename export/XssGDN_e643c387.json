{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"const float scale = 0.02;\n\n\nvec2 getOffset(float time, vec2 uv)\n{\n  float a = 1.0 + 0.5 * sin(time + uv.x * 10.0);\n  float b = 1.0 + 0.5 * cos(time + uv.y * 10.0);\n\t\n  return scale * vec2(a + sin(b), b + cos(a));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n  float speed = 5.0;\n\n  vec2 uv = -fragCoord.xy / iResolution.xy;\n\n  float time= speed * iTime;\n  float prevTime= speed * (iTime-1.0);\n\n  // current offset\n  vec2 offset= getOffset(time, uv);\t\n\t\n  // offset at prev frame\n  vec2 prevOffset= getOffset(prevTime, uv);\t\n\n  // motion vector from previous to current frame\n  vec2 delta= offset - prevOffset;\n\n  uv += offset;\n\t\n  vec4 color= vec4(0.0, 0.0, 0.0, 0.0);\n\t\n  // some iterations of unweighted blur\n  const int steps= 20;\n  float factor= 1.0 / float(steps);\n  \n  for (int i=0; i<steps; i++)\n  {\n     color += texture(iChannel0, uv);\n\t uv += delta * factor;\n  }\n\t\n  vec4 whoaColor = color;\n  float whoa = 0.1 + 0.01 * (1.0 + cos(10.0 * sin(time)));\n\n  fragColor = (whoa * whoaColor) * color * factor;\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XssGDN","date":"1370887160","viewed":879,"name":"shroom test","username":"mueslee","description":"shader quicky to simulate dizzyness","likes":30,"published":1,"flags":0,"usePreview":0,"tags":["2d","blur","plasma"],"hasliked":0,"parentid":"","parentname":""}}