{"ver":"0.1","info":{"id":"Mc3cR7","date":"1730393229","viewed":56,"name":"wubbly","username":"clara_bnuuy","description":"just playing around","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.2, 0.5, 0.5);\n    vec3 b = vec3(0.2, 0.5, 0.5);\n    vec3 c = vec3(1.0, .8, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\n// took these from https://www.shadertoy.com/view/tdG3Rd\nfloat rand(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u*u*(3.0-2.0*u);\n\n    float res = mix(\n        mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n        mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n    return res*res;\n}\n\n\n// started with that one shader tutorial on yt as base\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.);\n    \n    for (float i = 0.; i < 4.; i++) {\n        float d = length(uv) * exp(-length(uv0));\n        \n        vec3 col = palette(length(uv0) + iTime * .4);\n\n        d = sin(d * 8. + i * .4 + iTime * .4) / 8.;\n    \n        d += .05 * noise(uv + i * iTime * .3);\n        // positive values only (for color)\n        d = abs(d);\n        // make darks more dark\n        d = pow(.01 / d, 1.2);\n\n\n        finalColor += col * d;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}