{"ver":"0.1","info":{"id":"4tVSzt","date":"1485455317","viewed":218,"name":"AA Sin Scroller 2","username":"gigatron","description":"will include some other fx later ;","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["oldschool","amiga","demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ls23z3","filepath":"https://soundcloud.com/dremix2012/hyperbased","previewfilepath":"https://soundcloud.com/dremix2012/hyperbased","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//---------------------------------------------------------\n// AA_Sinus_Scroller.glsl\n// scroller: https://www.shadertoy.com/view/XtyXzt\n// aa font:  https://www.shadertoy.com/view/4ltXzl\n//---------------------------------------------------------\n\n#define SCROLL_SPEED 2.0\n#define FONT_SIZE 0.80\n#define SIN_AMP 1.0\n#define SIN_FREQ 0.75\n#define SIN_SPEED 3.0\n#define SCROLL_LEN 70.\n#define COLOR 1.0\n\n#define S(a) c+=char(float(a)); uv.x-=0.5;\n#define _ S(32);\n#define _or S(33);\n#define _add S(43);\n#define _dot S(46);\n\n#define _A S(65);\n#define _B S(66);\n#define _C S(67);\n#define _D S(68);\n#define _E S(69);\n#define _F S(70);\n#define _G S(71);\n#define _H S(72);\n#define _I S(73);\n#define _J S(74);\n#define _K S(75);\n#define _L S(76);\n#define _M S(77);\n#define _N S(78);\n#define _O S(79);\n#define _P S(80);\n#define _Q S(81);\n#define _R S(82);\n#define _S S(83);\n#define _T S(84);\n#define _U S(85);\n#define _V S(86);\n#define _W S(87);\n#define _X S(88);\n#define _Y S(89);\n#define _Z S(90);\n\n#define _a S(97);\n#define _b S(98);\n#define _c S(99);\n#define _d S(100);\n#define _e S(101);\n#define _f S(102);\n#define _g S(103);\n#define _h S(104);\n#define _i S(105);\n#define _j S(106);\n#define _k S(107);\n#define _l S(108);\n#define _m S(109);\n#define _n S(110);\n#define _o S(111);\n#define _p S(112);\n#define _q S(113);\n#define _r S(114);\n#define _s S(115);\n#define _t S(116);\n#define _u S(117);\n#define _v S(118);\n#define _w S(119);\n#define _x S(120);\n#define _y S(121);\n#define _z S(122);\n\nvec2 uv = vec2(0);\n\nfloat char(float ch)\n{\n  return texture(iChannel0,clamp(uv+SIN_AMP*sin(uv.y*SIN_FREQ+iTime*0.0005),0.0,1.00)/16.0\n           + fract(floor(vec2(ch,15.999-ch/16.))/16.0)).x ;\n          \n     //  texture(iChannel0,clamp(uv*1.10+SIN_AMP*sin(uv.y*SIN_FREQ+iTime*0.0001),0.,1.00)/16.0\n      //     + fract(floor(vec2(ch,15.999-ch/16.))/16.0)).x/2.0 ;\n      \n     // texture(iChannel0,clamp(uv*1.30+SIN_AMP*sin(uv.y*SIN_FREQ+iTime*0.00015),0.,1.00)/16.0\n       //    + fract(floor(vec2(ch,15.999-ch/16.))/16.0)).x/2.5\n      \n      ;  \n}\n\nfloat Scroll()\n{\n    float c=0.;\n    _ _ _ _ _ _ _H _e _l _l _o \n        \n    _  _s _h _a _d _e _r _t _o _y _ _or _or\n    \n    _ _T _h _i _s _ _i _s _ _a _ _b _a _s _i _c\n        \n    _ _e _x _a _m _p _l _e _ _o _f _ _a _ _b _i _t _m _a _p\n        \n    _ _s _i _n _u _s _ _s _c _r _o _l _l\n        \n    _ _add _ _l _a _m _e _ _r _a _i _n _b _o _w \n        \n    _ _dot _dot _dot _dot _ _u _s _e\n        \n    _ _i _t _ _a _t _ _y _o _u _r _ _o _w _n\n        \n    _ _r _i _s _k _ _dot _dot _dot _dot\n        \n    return c;\n}\n\n// custom copper gigatron\nfloat copper(vec2 uv, vec2 pos,float b){\n\n \tfloat d  = distance(vec2(uv.x,pos.y),uv-pos);\n        float cl = 1.0-(smoothstep(0.004,b,d)); \n        return cl;\n}  \n\nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tuv = (fragCoord / iResolution.y*2.-1.) / FONT_SIZE;\n    uv.x+=-4.+mod(iTime*SCROLL_SPEED,SCROLL_LEN);\n    uv.y+=0.5+SIN_AMP*sin(uv.x*SIN_FREQ+iTime*SIN_SPEED);\n    \n   // uv *=fract(2.*uv*0.99);\n   // uv *= fract(floor(vec2(4.,15.999-4./16.))/16.0) ;\n    \n     float clr =2.0*uv.y-(iTime/2.0); \n     vec3 hsvColor = hsv2rgb_smooth(vec3(clr, 1.0, 1.0)); \n    fragColor = Scroll() * vec4(hsvColor, 1.0)  ;\n\n    \n  \n       \n //  fragColor *=vec4(hsvColor, 1.0);\n    \n    \n    // copper layer\n    // fract here but later ;    \n   float t = mod(iTime/6.0,1.0);//  no sine here !!\n    \n     int copst = int(floor(t * 1.0));\n    \n    vec2 cl = fragCoord / iResolution.xy;\n   \n    for(float yy=0.0;yy<16.0;yy++){\n    \n       float cop1 = copper(cl,vec2(0.,0.0+(yy/30.)),0.03);\n  \n        if (copst == 0) { fragColor += vec4(cop1/2.,0.,0.,1.0);}\n        if (copst == 1) { fragColor += vec4(0.0,cop1,0.0,1.0);}\n        if (copst == 2) { fragColor += vec4(0.0,0.0,cop1,1.0);}\n        if (copst == 3) { fragColor += vec4(cop1,cop1,0.,1.0);}\n        if (copst == 4) { fragColor += vec4(0.0,cop1,cop1,1.0);}\n        if (copst == 5) { fragColor += vec4(cop1,0.0,cop1,1.0);}\n        if (copst == 6) { fragColor += vec4(cop1,cop1,cop1,1.0);}\n     \n\t\n    }\n   \n\t\n}","name":"Image","description":"","type":"image"}]}