{"ver":"0.1","info":{"id":"dsGGzm","date":"1678358579","viewed":62,"name":"New German Flag LGBTQ+ 3000","username":"Mojomajor","description":"read somewhere about a new german flag\nhttps://www.deutschlandfunknova.de/beitrag/deutschlandflagge-neues-design-mit-froehlichen-farben","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["flag","germany"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"ltBXDt","filepath":"https://soundcloud.com/randallcpc-kolektifoditif/randall-cpc-feat-trackwasher","previewfilepath":"https://soundcloud.com/randallcpc-kolektifoditif/randall-cpc-feat-trackwasher","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define ORANGE vec3(255., 154., 48.) / 255.\n#define GREEN vec3(9., 137, 1.) / 255.\n#define NAVY_BLUE vec3(0., 0., 137.) / 255.\n#define BLACK vec3(0., 0., 0.) / 255.\n#define RED vec3(204., 43., 29.) / 255.\n#define DARK_RED vec3(139., 0., 0.) / 255.\n#define YELLOW vec3(248., 207., 70.) / 255.\n\n#define LGBTQ 1\n#define NUM_STRIPES 5\n#define NYAN 1\n#define CAT_SCALE 2.\n\n\nvec4 nyan(vec2 p)\n{\n\tvec2 uv = p*vec2(0.4,1.0);\n\tfloat ns=2.0;\n\tfloat nt = iTime*ns; nt-=mod(nt,240.0/256.0/6.0); nt = mod(nt,240.0/256.0);\n\tfloat ny = mod(iTime*ns,1.0); ny-=mod(ny,0.75); ny*=-0.05;\n\tvec4 color = texture(iChannel1,vec2(uv.x/3.0+210.0/256.0-nt+0.05,.5-uv.y-ny));\n\tif (uv.x<-0.3) color.a = 0.0;\n\tif (uv.x>0.2) color.a=0.0;\n\treturn color;\n}\n\nfloat inverseLerp(float v, float minValue, float maxValue) {\n  return (v - minValue) / (maxValue - minValue);\n}\n\nfloat remap(float v, float inMin, float inMax, float outMin, float outMax) {\n  float t = inverseLerp(v, inMin, inMax);\n  return mix(outMin, outMax, t);\n}\n\nvec4 rainbow(vec2 p)\n{\n\t\n\tp.x-=mod(p.x,0.05);\n\tfloat q = max(p.x,-0.1);\n\tfloat s = sin(p.x*(4.0)+iTime*4.0)*0.09;\n\ts-=mod(s,0.05);\n\tp.y+=s;\n\t\n\tvec4 sound = texture(iChannel1,p);\n    p.y += sin(p.x*sound.x*40.+iTime)*sound.x/30.;\n\t\n\tvec4 c;\n\t\n\tif (p.x>0.0) c=vec4(0,0,0,0); else\n\tif (0.0/6.0<p.y&&p.y<1.0/6.0) c= vec4(255,43,14,255)/255.0; else\n\tif (1.0/6.0<p.y&&p.y<2.0/6.0) c= vec4(255,168,6,255)/255.0; else\n\tif (2.0/6.0<p.y&&p.y<3.0/6.0) c= vec4(255,244,0,255)/255.0; else\n\tif (3.0/6.0<p.y&&p.y<4.0/6.0) c= vec4(51,234,5,255)/255.0; else\n\tif (4.0/6.0<p.y&&p.y<5.0/6.0) c= vec4(8,163,255,255)/255.0; else\n\tif (5.0/6.0<p.y&&p.y<6.0/6.0) c= vec4(122,85,255,255)/255.0; else\n\t\tc=vec4(0,0,0,0);\n\treturn c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv2 = uv;\n    float t = uv.x*7.-2.*iTime+uv.y*3.;\n\n    uv.y += sin(t)*.03;\n    #if LGBTQ==0\n    // Determine the size of each stripe\n    float stripeSize = 1.0 / 3.0;\n    \n    // Determine which stripe the current pixel falls in\n    float stripeIndex = floor(uv.y / stripeSize);\n    \n    // Calculate the color for each stripe\n    vec3 black = vec3(.3, .3, .3);\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 yellow = vec3(1.0, 1.0, 0.0);\n    \n    \n    // Set the color based on the stripe index\n    vec3 color = stripeIndex == 0.0 ? YELLOW : stripeIndex == 1.0 ? RED : black;\n\n    #else\n    \n    // Determine the size of each stripe\n    float stripeSize = 1.0 / float(NUM_STRIPES);\n    \n    // Determine which stripe the current pixel falls in\n    int stripeIndex = int(floor(uv.y / stripeSize));\n    \n    // Calculate the color for each stripe\n    vec3 colors[NUM_STRIPES];\n    colors[0] = YELLOW;//vec3(0.0, 0.0, 1.0); // blue\n    colors[1] = ORANGE;//vec3(0.0, 1.0, 1.0); // cyan\n    colors[2] = RED;//vec3(1.0, 1.0, 0.0); // yellow\n    colors[3] = DARK_RED; // red\n    colors[4] = vec3(0.5, 0.0, 0.5); // purple\n    \n    // Set the color based on the stripe index\n    vec3 color = colors[stripeIndex];\n    \n    #endif\n    \n    float y = sin(uv.y*3.1415*6.);\n    float w = fwidth(y);\n    \n    // cutoff\n    color *= smoothstep(w, .0, abs(uv.y-.5)-.5+w);\n    \n    \n    vec4 outCol=vec4(color,1.);\n    uv/=1.;\n    #if NYAN == 1\n\n    \n    //vec4 ny = nyan(vec2(uv.x-0.6, uv.y-0.5 ));\n    \n    vec4 ny = nyan(uv*CAT_SCALE+vec2(-0.55,-0.5)*CAT_SCALE);\n    ny*=1.05;\n    vec3 catCol = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    ny.rgb/=catCol;\n    vec4 rb = rainbow(uv*CAT_SCALE*2.-vec2(CAT_SCALE*.35*2.,CAT_SCALE*.38*2.));\n\n    outCol= mix(outCol,rb, rb.a);\n    outCol= mix(outCol,ny, ny.a);\n    \n    #endif\n    // shadow\n    outCol *= .7+cos(t)*.3;\n    \n    // Output the color\n    fragColor = outCol;\n     //float tt = remap(mod(iTime*2.,8.),0.,2.,0., 1. );\n}","name":"Image","description":"","type":"image"}]}