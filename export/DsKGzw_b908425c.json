{"ver":"0.1","info":{"id":"DsKGzw","date":"1678330416","viewed":87,"name":"Pixel strip crossfade","username":"kig","description":"Crossfade experiment from https://www.shadertoy.com/view/dtjSDt","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fx","pixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// pixelization fx experiment 2\n\nvec4 pixelStripsSwap(in vec2 uv) {\n    // Transform the UV to create a distorted pixel grid\n    vec2 tuv = uv;\n    tuv.y += sin(0.5*iTime) * tuv.x * tuv.x;\n    float f = clamp(sin(iTime) * 2.0, -1.0, 1.0);\n    tuv *= vec2(48.0+abs(cos(4.0*iTime))*16.0, 64.0)*4.0*sin(iTime);\n    // Take the in-pixel coordinate.\n    vec2 fuv = fract(tuv);\n    // Invert the transform to find the bottom-left untransformed UV coord\n    // to fill the distorted pixel with the color its bottom-left corner lands on.\n    vec2 iuv = floor(tuv);\n    vec2 pixelSize = vec2(48.0+abs(cos(4.0*iTime))*16.0, 64.0)*4.0*sin(iTime);\n    iuv /= pixelSize;\n    iuv.y -= sin(0.5*iTime) * iuv.x * iuv.x;\n    vec4 col1 = texelFetch(iChannel0, clamp(ivec2(512.0*iuv), ivec2(0), ivec2(511)), 0); //0.5 + 0.5*cos(iTime+ff.xyx+vec3(0,2,3));\n    vec4 col2 = texelFetch(iChannel1, clamp(ivec2(512.0*iuv), ivec2(0), ivec2(511)), 0); //0.5 + 0.5*cos(iTime+ff.xyx+vec3(0,2,3));\n    vec4 col = mix(col1, col2, clamp((f+1.), 0., 1.)); \n    // Darken the pixel border to create a more graphic look.\n    if (fuv.x > -0.1+0.0*abs(sin(4.0*uv.x)) && fuv.x < 1.0 && fuv.y > 0.2+0.5*uv.x && fuv.y < 1.0) {\n        col.rgb = (0.5+0.5*abs(f)) * col.rgb;\n    }\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = pixelStripsSwap(uv);\n}","name":"Image","description":"","type":"image"}]}