{"ver":"0.1","info":{"id":"WdX3DH","date":"1643008016","viewed":246,"name":"worley Noise 3D (WTF...)","username":"eoviya","description":"unexpected, but looks not bad. no desc ;)","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float modValue = 512.0f;\n\nfloat permuteX(float x)\n{\n    float t = ((x * 67.0) + 71.0) * x;\n\treturn mod(t, modValue);\n}\n\nfloat permuteY(float x)\n{\n    float t = ((x * 73.0) + 83.0) * x;\n\treturn mod(t, modValue);\n}\n\nfloat permuteZ(float x)\n{\n    float t = ((x * 103.0) + 109.0) * x;\n\treturn mod(t, modValue);\n}\n\nfloat shiftX(float value)\n{\n    return fract(value * (1.0 / 73.0));\n}\n\nfloat shiftY(float value)\n{\n    return fract(value * (1.0 / 69.0));\n}\n\nfloat shiftZ(float value)\n{\n    return fract(value * (1.0 / 89.0));\n}\n\nvec3 rand(vec3 v)\n{\n    v = mod(v, modValue);\n    float rX = permuteX(permuteX(permuteX(v.x) + v.y) + v.z);\n    float rY = permuteY(permuteY(permuteY(v.x) + v.y) + v.z);\n    float rZ = permuteZ(permuteZ(permuteZ(v.x) + v.y) + v.z);\n    return vec3(shiftX(rX), shiftY(rY), shiftZ(rZ));\n}\n\nvec3 worleyNoise(vec3 uvw, float worleyNoise)\n{\n    vec3 p = floor(uvw);\n    vec3 f = fract(uvw);\n    \n    float dis = 1e9f;\n    float result;\n    int range = 1;\n    for(int i = -range; i <= range; i++)\n    {\n        for(int j = -range; j <= range; j++)\n        {\n            for(int k = -range; k <= range; k++)\n            {\n                vec3 b = vec3(i, j, k);\n                vec3 r = rand(p + b);\n                \n                //vec3 m = b - f + r * worleyNoise;\n                vec3 m = abs(b - f + r * worleyNoise);\n                \n                //float len = length(m);\n                //float len = dot(m, m) + m.x * m.y + m.x * m.z  + m.y * m.z;\n                float tolerance = 0.0f;\n                float powVal = 2.0f;\n                float len = pow(pow(m.x, powVal) + pow(m.y, powVal) + pow(m.z, powVal), 1.0f / powVal) - tolerance;\n                \n                if (dis > len)\n                {\n                    dis = len;\n                    //result = r.x;\n                    result = dis;\n                }\n            }\n        }\n    }\n    \n    return vec3(1.0f - result);\n}\n\nvec3 noise_sum(vec3 p, float worleyScale, int depth, float scale, float spread)\n{\n    vec3 f = vec3(0.0);\n    for(int i = 0; i < depth; i++)\n    {\n    \tf += scale * worleyNoise(p, worleyScale); \n        p.z += 50.0f * f.x; // 关键语句 WTF？\n        p *= spread;\n        scale *= 0.5f;\n    }\n    \n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (fro m 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx;\n    \n    vec3 col = worleyNoise(vec3(uv * 12.0f, iTime * 0.2), 1.0f);\n    //col = worleyNoise(vec3(col * 0.5f), length(col));\n    \n    col = noise_sum(vec3(uv * 12.0f, iTime * 0.2), 1.0f, 5, 0.5f, 2.0f);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0f);\n} ","name":"Image","description":"","type":"image"}]}