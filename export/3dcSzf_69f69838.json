{"ver":"0.1","info":{"id":"3dcSzf","date":"1572461420","viewed":114,"name":"Deep Trip","username":"jin_x","description":"My first shader!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_ITER = 128;\nconst int LIM = MAX_ITER / 2;\n\nconst float PARAM = 0.387;\nconst float COEF = 0.80;\n\nconst float ROT = 5.0;\n\nconst float PRE = 15.0;\nconst float DUR = 60.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float t = iTime - PRE;\n    if (t > 0.0) {\n        t = mod(t, DUR);\n    \tif (t >= DUR / 2.0) { t = DUR - t; }\n    }\n    float zoom = pow(COEF, t + PRE);\n    \n    float mxy = min(iResolution.x, iResolution.y);\n    vec2 cxy = iResolution.xy / mxy;\n    vec2 uv = (fragCoord / mxy - 0.5 * cxy) * 75.0 * zoom;\n    \n    // Rotate : x' = x*cos(a) - y*sin(a), y' = x*sin(a) + y*cos(a)\n    \n    float sa = sin(iTime/ROT), ca = cos(iTime/ROT);\n    uv *= mat2(ca, -sa, sa, ca);\n    \n    // Julia : x = x^2 - y^2 + x, y = 2 * x * y + y\n    \n    vec2 xy = uv;\n    int iter = 0;\n    for (int i = 0; i < MAX_ITER; ++i) {\n        vec2 xy2 = xy * xy;\n        if (xy2.x + xy2.y > 4.0) { break; }\n        xy = vec2(xy2.x - xy2.y + (PARAM + zoom), 2.0 * xy.x * xy.y + (PARAM + zoom));\n        ++iter;\n    }\n\n    if (iter < LIM) {\n        fragColor = vec4(0.0, 1.0 - float(iter)/float(LIM), float(iter)/float(LIM), 1.0);\n    } else if (iter == MAX_ITER) {\n        fragColor = vec4(vec3(0.0), 1.0);\n    } else {\n        fragColor = vec4(1.0 - float(iter-LIM)/float(LIM), 0.0, 1.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}