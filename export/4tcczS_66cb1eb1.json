{"ver":"0.1","info":{"id":"4tcczS","date":"1532956339","viewed":852,"name":"Simple pattern","username":"xiaoiver","description":"Just a simple pattern. Learn from https://thebookofshaders.com/09/","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(in vec2 _st, in float _radius) {\n    vec2 l = _st-vec2(0.5);\n    //return 1.-smoothstep(_radius-9./iResolution.y,\n      //                   _radius+9./iResolution.y,\n       //                  dot(l,l)*4.0);\n    return smoothstep(_radius+9./iResolution.y,\n                         _radius-9./iResolution.y,\n                         dot(l,l)*4.0);\n}\n\nfloat circlePattern(vec2 st, float r) {\n    return  circle(st+vec2(0.,-.5), r)+\n            circle(st+vec2(0.,.5), r)+\n            circle(st+vec2(-.5,0.), r)+\n            circle(st+vec2(.5,0.), r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    uv *= 3.0;      // Scale up the space by 3\n    uv = fract(uv); // Wrap arround 1.0\n\n    // Now we have 3 spaces that goes from 0-1\n    //vec3 col = mix(vec3(0),\n    //               vec3(0.973,0.843,0.675),\n    //               circlePattern(uv,1.0));\n\n    fragColor = vec4(0.973,0.843,0.675,1.0) * circlePattern(uv, 1.0);\n}","name":"Image","description":"","type":"image"}]}