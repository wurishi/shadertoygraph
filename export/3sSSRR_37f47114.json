{"ver":"0.1","info":{"id":"3sSSRR","date":"1554033866","viewed":205,"name":"isolines'","username":"wj","description":"Slightly customized  iq's shader https://www.shadertoy.com/view/MsXGz8 to create the \"isolines\" audio visualization effect on my page http://www.wothke.ch/playmod/","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["audiovisualization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// isolines'\n// by wj\n\n\n// a slightly adapted version of https://www.shadertoy.com/view/MsXGz8\n// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec2 doit( in vec2 p, in float off, float amp )\n{\n    float f = 0.0;\n\tfloat a = 0.0;\n    for( int i=0; i<10; i++ )\n    {\n  \t    float h = float(i)/10.0;\n  \t    float g = texture( iChannel1, vec2(0.01+h*0.5, 0.25)).x;\n  \t    float k = 1.0 + 0.4*g*g;\n\n        vec2 q;\n        q.x = sin(iTime*0.015+0.67*g*(1.0+amp) + off + float(i)*121.45) * 0.5 + 0.5;\n        q.y = cos(iTime*0.016+0.63*g*(1.0+amp) + off + float(i)*134.76) * 0.5 + 0.5;\n\t    vec2 d = p - q;\n\t\tfloat at = 1.0/(0.01+dot(d,d));\n        f += k*0.1*at;\n\t\ta += 0.5 + 0.5*sin(2.0*atan(d.y,d.x))*sin(at);\n    }\n\t\n    return vec2(f,a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\n\tfloat isTripy = smoothstep( 86.5, 87.5, iChannelTime[1] ) - \n\t\t            smoothstep( 100.5, 108.0, iChannelTime[1] );\n\n    vec2 ref = doit( p, 0.0, isTripy );\n    float b = ref.x;\t\n\n\t\n//    vec3 col = texture( iChannel0,vec2(pow(0.25*ref.x,0.25), 0.5)).xyz\n//             * texture( iChannel0,vec2(0.1*pow(ref.y,1.2), 0.6)).xyz;\n\nvec3 col = texture( iChannel0,vec2(pow(0.33*ref.x,0.25), 0.5 + 0.01 * iTime)).xyz\n             * texture( iChannel0,vec2(0.1*pow(ref.y,1.2), 0.6 - 0.02 * iTime)).xyz;\n    \n    col = sqrt(col)*2.0;\n\t\n\tvec3 col2 = col;\n\tcol2 = 4.0*col2*(1.0-col2);\n\tcol2 = 4.0*col2*(1.0-col2);\n  \n\tcol = mix( col, col2, isTripy );\n\n    float useLights = 0.4 + 2.5*smoothstep( 45.0, 45.2, iChannelTime[1] );\n\tcol += useLights*0.03*pow( b*0.1, 4.0 ) * pow( texture( iChannel1, vec2(0.1,0.25) ).x, 2.0 );\n\n\tfragColor = vec4( col, 1.0 );;\n}\n","name":"Image","description":"","type":"image"}]}