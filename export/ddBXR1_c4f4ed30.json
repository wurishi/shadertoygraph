{"ver":"0.1","info":{"id":"ddBXR1","date":"1669895585","viewed":153,"name":"Mandelbrot set out of Julia sets","username":"iluha168","description":"Drag mouse to set size of grid element","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["fractal","julia","grid","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 100\n#define JULIA_SCALE 1.7\n#define I_SQUARED -1.\n\nfloat julia(vec2 z, vec2 c){\n    int i = 0;\n    while(dot(z,z) <= 4. && i < MAX_ITER){\n        z = vec2(z.x*z.x + I_SQUARED*z.y*z.y, 2.*z.x*z.y) + c;\n        i++;\n    }\n    return float(i)/float(MAX_ITER);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates\n    vec2 uv = 2.*(fragCoord - .5*iResolution.xy)/iResolution.y - vec2(.5,0);\n    // Output to screen\n    float s = iMouse.x/1000.;\n    if(s == 0.) s = (sin(iTime)+1.)/2.0;\n    float m = julia((fract(uv/s)-0.5)*JULIA_SCALE, s*floor(uv/s));\n    float col = 1.-m;\n    fragColor.rgb = vec3(col);\n}","name":"Image","description":"","type":"image"}]}