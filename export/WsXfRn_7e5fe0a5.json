{"ver":"0.1","info":{"id":"WsXfRn","date":"1587714284","viewed":160,"name":"izvor","username":"merrecurent_","description":"vefneqv","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n   \n    \n    \n    //resize space\n    uv *= 13.;\n    \n    vec2 st = vec2(atan(cos(uv.x*(1.-.2*cos(.6*iTime))), cos(uv.y*(1.-.2*cos(.6*iTime)))), length(uv));\n    \n    uv = vec2(st.x/6.2831*10. + 3.*sin(iTime), st.y*sin(.2*iTime - st.y*.1));\n    \n    //tile the space\n    vec2 i_uv = floor(uv);\n    vec2 f_uv = fract(uv);\n    \n    \n    \n    float minDist = 1.;\n    \n    for (int y = -1; y <= 1; y++)\n    \tfor (int x = -1; x <= 1; x++)  \n    \t{\n    \t\tvec2 neighbor = vec2(float(x), float(y));\n            \n            \n            //random position from current + neighbor place in the grid\n            vec2 point = random2(i_uv + neighbor);\n            \n            point = .5 + .5*sin(iTime + 6.2831*point);\n            \n            //vector between the pixel and the point\n            vec2 diff = neighbor + point - f_uv;\n            \n            float dist = length(diff);\n            \n        \tminDist = min(minDist, dist);\n        \n         \n    \t}\n\t\n    vec3 color = 1.2*minDist*vec3(.85 + .2*uv.x, .7, .65 + .1*uv.y);\n    \n    //draw cell center\n    color += .9 * smoothstep(.09, .01, minDist);\n    //color += step(.98, f_uv.x) + step(.98, f_uv.y);\n    \n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}