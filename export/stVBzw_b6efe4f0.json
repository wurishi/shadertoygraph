{"ver":"0.1","info":{"id":"stVBzw","date":"1664276261","viewed":172,"name":"concave / convex lens effect","username":"tangmr2333","description":"Click to control centre position, change type value to see concave/convex lens effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["liquefactionlens"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float intensity = 0.5;\n    float type = 0.0; // 0 means inner, 1 means outer\n    vec2 center = iMouse.xy / iResolution.xy;\n    float radius = 0.2, inverse_radius = 1.0 / radius;\n    float ratio = iResolution.y / iResolution.x;\n    float dist = distance(vec2(center.x, center.y * ratio), vec2(uv.x, uv.y * ratio));\n    \n    if (dist < radius) {\n        uv -= center;\n        float factor = 1.0 - ((radius - dist) * inverse_radius) * pow(intensity, 2.0);\n        float strength = pow(factor, 2.0);\n        uv = type > 0.5 ? uv * strength : uv / strength;\n        uv += center;\n    }\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}