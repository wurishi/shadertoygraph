{"ver":"0.1","info":{"id":"wtXyWB","date":"1592924964","viewed":407,"name":"angular blue noise from bluenois","username":"FabriceNeyret2","description":"- Left: blue noise, two sub-bluenoise\n- Right: (WIP) try to turn flat bluenoise into angular ( i.e. cyclical in value space )\n\nwas just trying :-) ( how to test, angular blueness / low-discrepancy, BTW ? )\n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["bluenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy/vec2(6,2), U=u;\n    int x = int(U/R);                               // subwindow index\n    if (U.y < R.y) U /= 4.;                         // bottom: zoom\n    ivec2 I = ivec2(U);\n    \n    O = texelFetch(iChannel0, I%1024, 0).xxxx;      // left: base blue noise,\n    vec4 H = texelFetch(iChannel0, (I+512)%1024, 0).xxxx;\n    \n    if      (x==1)  O = fract(O*4.);                // then two sub-bluenoises  \n    else if (x==2)  O = floor(O*8.)/8.;             // ( LSB & MSB )       \n    else if (x==3)  I = I%2, O = .5*O + .5*vec4(I.x==I.y); // three rights: \n    else if (x==4)  O = .5*O + .5*fract(H*4.);      // trying to make angular bluenoise\n    else if (x==5)  O = .5*O + .5*floor(H*8.)/8.; \n     \n    if ( int(u)%int(R ) == 0  ) O = vec4(1,0,0,1);  // red separators\n    if ( abs(u-R).x      < 2. ) O = vec4(1,0,0,1); \n    if ( abs(u+1.-3.*R).x< 2. ) O = vec4(1,0,0,1); \n}","name":"Image","description":"","type":"image"}]}