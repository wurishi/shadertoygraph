{"ver":"0.1","info":{"id":"ct3GWS","date":"1682970652","viewed":65,"name":"Cloudy Mandelbrot Bounce House","username":"Pizza","description":"My take on GLSL's \"Hello World\". Hope you like it :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 complex(float x, float y) {return vec2(x,y);}\nvec2 complex_product(vec2 a, vec2 b) {\n    return complex(\n        a.x * b.x - a.y * b.y,\n        a.x * b.y + a.y * b.x\n     );\n}\nvec2 complex_sum(vec2 a, vec2 b) {return complex(a.x+b.x, a.y+b.y);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * vec2(4,2.5) ;\n    uv += vec2(-2.0,-1.5);\n    uv = complex_product(uv, (10.0/(iTime+10.0))*complex_product(complex(sin((iTime)),cos(cos(iTime))),complex(1.0,0.0)));\n    uv += vec2(-0.2,0.9);\n    \n    vec2 xy = complex(uv.x,uv.y);\n    vec2 z = complex(0.0,0.0);\n    float i = 0.0;\n    for (; i < 1000.0; i+=1.0)\n    {\n        z = complex_product(z, z) + xy;\n        if (length(z) > 2.0)\n        {\n            break;\n        }\n    }\n    fragColor = vec4(10.0/i,(uv.x+4.0)/6.0,(uv.y+1.5)/3.0,1.0);\n}","name":"Image","description":"","type":"image"}]}