{"ver":"0.1","info":{"id":"Ms2fWt","date":"1502910429","viewed":257,"name":"kernel fun","username":"bytearray","description":"a","likes":6,"published":1,"flags":2,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(\n        fragCoord.x / iResolution.x,\n        fragCoord.y / iResolution.y * \n        \tCAM_COMPENSATION_X + (1. - CAM_COMPENSATION_X) / 2.\n    );\n    \n    uv.x = 1. - uv.x;\n    vec2 mpos = iMouse.xy / iResolution.xy;\n    if(mpos.x < 0.01) mpos = vec2(0.65, 0.3);\n    \n    mat3 kernelr = mat3(\n        vec3(-1., -1., -1.),\n        vec3( 2.,  2.,  2.),\n        vec3(-1., -1., -1.)\n    );\n    \n    mat3 kernelg = mat3(\n        vec3(-1.,  2., -1.),\n        vec3(-1.,  2., -1.),\n        vec3(-1.,  2., -1.)\n    );\n    \n    mat3 kernelb = mat3(\n        vec3( 0.,  0.,  0.),\n        vec3( 0.,  0.,  0.),\n        vec3( 0.,  0.,  0.)\n    );\n    \n    vec3 sum = vec3(0);\n    \n\tfor(int x = -1; x <= 1; ++x)\n    {\n        for(int y = -1; y <= 1; ++y)\n    \t{\n            vec3 val3 = texture(iChannel0, vec2(x,y) / 1000. + uv).rgb;\n            float val = (val3.r + val3.g + val3.b) / 3.;\n            \n            sum.r += val * kernelr[x][y];\n            sum.g += val * kernelg[x][y];\n            sum.b += val * kernelb[x][y];\n        }\n    }\n    \n    vec3 act = sum * mpos.x * 5. - mpos.y / 3.;\n    \n    fragColor = vec4(act, 1.);\n}\n","name":"Image","description":"","type":"image"}]}