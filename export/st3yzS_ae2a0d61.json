{"ver":"0.1","info":{"id":"st3yzS","date":"1661341175","viewed":108,"name":"Ikeda map test","username":"zenzicubic","description":"I think this sorta worksâ€½","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ikeda"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float a = 1., b = 0.9, c = 0.4, d = 6.;\n\nvec2 map(vec2 z) {\n    float tn = c - (d / (1. + z.x * z.x + z.y * z.y));\n    \n    float nx = a + b * (z.x * cos(tn) - z.y * sin(tn));\n    float ny = b * (z.x * sin(tn) + z.y * cos(tn));\n    return vec2(nx, ny);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = 4.* ( fragCoord - .5* iResolution.xy ) / iResolution.y; // suggested by FabriceNeyret2\n    \n    vec2 op = p;\n    for (int i = 0; i < 10; i ++) {\n        p = map(p);\n    }\n\n    vec3 col = vec3(distance(p, op));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}