{"ver":"0.1","info":{"id":"wljyDw","date":"1594578784","viewed":57,"name":"Julia Sets On Main Cardioid","username":"centrinia","description":"Julia sets with parameters on the boundary of the main cardioid of the Mandelbrot set.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float M_LN2 = 0.69314718055994530941723212145817656807;\nconst int M = 256;\nfloat mandelbrot(vec2 z, vec2 c) {\n\n    int i;\n    for(i=0;i<M;i++) {\n        z = vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y) + c;\n        if(dot(z,z) > 4.0) {\n            break;\n        }\n    }\n    if(i < M) {\n        float log_zn = log(dot(z,z))/4.0;\n        float nu = log(log_zn / M_LN2) / M_LN2;\n        return float(i + 1) - nu;\n    } else {\n        return float(M);\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    float t = iTime/4.0;\n    \n    vec2 c = vec2(cos(t),sin(t));\n    c = vec2(1.0,0.0)-c;\n    c = vec2(c.x*c.x-c.y*c.y,2.0*c.x*c.y);\n    c = (vec2(1.0,0.0)-c)/4.0;\n        \n\tfloat m = mandelbrot(uv*4.0,c);\n    fragColor = vec4(mod(m,1.0),(sin(m)+1.0)/2.0,(sin(m*9.0)+1.0)/2.0,1);\n}","name":"Image","description":"","type":"image"}]}