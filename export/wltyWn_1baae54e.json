{"ver":"0.1","info":{"id":"wltyWn","date":"1608828489","viewed":100,"name":"Disco tiles","username":"Tarquin","description":"Easy shader using basics of trigonometry (sin, cos)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sin","cos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Arthur Jacquin - 2020\n// https://www.linkedin.com/in/arthur-jacquin-631921153/\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = vec2(fragCoord.xy / iResolution.xy);\n    st.x *= iResolution.x/iResolution.y;\n\n    float pattern1 = sin((st.x ) * 100.0);\n    float pattern2 = cos((1.0 - st.y) * 100.0);\n\n    vec3 col1 = 0.5 + 0.2 * cos(iTime + st.xyx + vec3(0,2,4));\n    vec3 col2 = 0.2 + 0.5 * cos(iTime + st.xyx + vec3(0,2,4));\n\n    vec3 a = (pattern1 * pattern2) * col1;\n    vec3 b = (pattern1 + pattern2) * col2;\n\n    vec3 finalColor = a + b;\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}