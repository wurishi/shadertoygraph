{"ver":"0.1","info":{"id":"3tGBRm","date":"1614046924","viewed":144,"name":"Jupiter-ish Domain Warping","username":"pvnetto","description":"Just some simple domain warping exercise inspired on the gas giants","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noisefbmwarping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 p) {\n    return fract(\n        cos(\n            dot(p, vec2(5981.43, 85749.43))\n        ) * 28497.41\n    );\n}\n\nfloat noise(vec2 p) {\n    vec2 pi = floor(p);\n    vec2 pf = fract(p);\n    \n    float ca = rand(pi);\n    float cb = rand(pi + vec2(1., 0.));\n    float cc = rand(pi + vec2(0., 1.));\n    float cd = rand(pi + vec2(1., 1.));\n    \n    vec2 u = smoothstep(0., 1., pf);\n    return mix(\n        mix(ca, cb, u.x),\n        mix(cc, cd, u.x),\n        u.y\n    );\n}\n\nfloat fbm(vec2 p) {\n    const int octaves = 12;\n    const float lacunarity = 2.;\n    const float gain = 0.55;\n    \n    float freq = 1.;\n    float amp = 0.5;\n    \n    float n = 0.;\n    for(int i = 0; i < octaves; i++) {\n        n += noise(p * freq) * amp;\n    \n        freq *= lacunarity;\n        amp *= gain;\n    }\n    \n    return n;\n}\n\nfloat pattern(vec2 p, out vec2 q, out vec2 r) {\n    q = vec2(\n        fbm(p + vec2(4., 0.5) + iTime * 0.2),\n        fbm(p + vec2(2., 32.))\n    );\n    \n    r = vec2(\n        fbm(p + q + iTime * 0.3),\n        fbm(p + q + vec2(1.3, 2.4))\n    );\n    \n    return fbm(p + r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = uv * 8.;\n    vec2 q, r;\n    float pct = pattern(p, q, r); \n    vec3 col = mix(vec3(0.8), vec3(1., 0.43, 0.), q.x);\n    col = mix(col, vec3(1.0, 0.75, 0.4), p.x / q.x * r.x / 12.);\n    col *= pct;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}