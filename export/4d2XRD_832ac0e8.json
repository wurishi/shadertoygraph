{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float hash (float n)\n{\n\treturn fract(sin(n)*43758.5453);\n}\n\nfloat noise (in vec3 x)\n{\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\n\tf = f*f*(3.0-2.0*f);\n\n\tfloat n = p.x + p.y*57.0 + 113.0*p.z;\n\n\tfloat res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n\t\t\t\t\t\tmix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n\t\t\t\t\tmix(mix( hash(n+113.0), hash(n+114.0),f.x),\n\t\t\t\t\t\tmix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n\treturn res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    float ratio = iResolution.x / iResolution.y;\n    \n    vec3 center = vec3(0.5, 0.5, 0.2);\n    vec3 v = vec3(uv, 0.0);\n    vec3 rot = vec3(1.0 + 0.1 * cos(iTime * 2.0));\n    \n    v.x = v.x * ratio;\n    v.x -= center.x * 0.75;\n    \n    float radius = 0.1 + 0.4 * abs(cos(pow(sin(iTime), 2.0)));\n    \n    \n    if (length(v - center) <= radius) {\n        v = vec3(uv * length(center -v) + radius, length(center - v) + radius);\n    \tv *= (rot);\n    } else {\n        v.xyz += 1.0;\n    }\n    \n    \n    \n    \n    fragColor = vec4(texture(iChannel0, v.xy * v.z ));\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4d2XRD","date":"1409711929","viewed":163,"name":"I'm not good at this","username":"axelduch","description":"Sphere","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""}}