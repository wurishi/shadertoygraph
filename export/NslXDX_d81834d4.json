{"ver":"0.1","info":{"id":"NslXDX","date":"1619441666","viewed":66,"name":"Smiley Bebeuz","username":"Bebeuz","description":"Smiley","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["smiley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n#define sat(x) clamp(x, 0., 1.)\n\nfloat remap01(float a, float b, float t){\n    return sat((t-a)/(b-a));\n}\nfloat remap(float a, float b, float c, float d, float t){\n    return remap01(a,b,t) * (d-c) + c;\n}\nvec2 within(vec2 uv, vec4 rect){\n    return (uv-rect.xy)/(rect.zw-rect.xy);\n}\n\nfloat oscillator(float min, float max, float stepsPerSec){\n    float fraction = cos(iTime*stepsPerSec)/2. + .5;\n    return remap(0., 1., min, max, fraction);\n}\n\nfloat oscillate(){\n    return oscillator(1., 2., 10.);\n}\n\nvec4 Eye(vec2 uv){\n    uv -= .5;\n    \n    float d = length(uv * oscillator(0.75, 1.0, 10.));\n    \n    vec4 irisCol = vec4(.3, .6, 1., 1.);\n    irisCol.rgb *= 1. + S(.3 , .05, d);\n    \n    vec4 col = mix(vec4(1.), irisCol, S(.1, .7, d)*.5) ;\n   \n    col.rgb *= 1. - S(.45, .5, d) * sat(-uv.y -uv.x) * .5 ;\n    \n    // iris outline\n    col.rgb = mix(col.rgb, vec3(0.), S(.3,.28,d));\n    \n    // iris color\n    col.rgb = mix(col.rgb, irisCol.rgb, S(.28,.26,d));\n    \n    // pupils\n    col.rgb = mix(col.rgb, vec3(0.), S(.16, .14, d));\n    \n    // highlight\n    /*\n    float highlight = S(.1, .09, length(uv-vec2(-.15, .15)));\n    highlight += S(.07, .05, length(uv+vec2(-.08, .08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    */\n    col.a = S(.5, .48, d);\n    return col;\n}\n\nvec4 Mouth(vec2 uv){\n    uv -= .5;\n    vec4 col = vec4(.5, .18, .05, 1.);\n    \n    uv.y *= 1.5;\n    uv.y -= uv.x * uv.x * oscillator(0.5, 2., 10.);\n    \n    float d = length(uv);\n    col.a = S(.5, .48, d);\n    \n    vec3 toothCol = vec3(1.) * S(.6, .34, d);\n    float teeth = length(uv-vec2(0., .6));\n    col.rgb = mix(col.rgb, toothCol, S(.4, .37, teeth));\n    \n    float tongue = length(uv + vec2(0., .5 * oscillate() ));\n    col.rgb = mix(col.rgb, vec3(1., .5, .5), S(.5, .2, tongue));\n    return col;\n}\n\nvec4 Head(vec2 uv){\n    vec3 colDark = vec3(.6, .3, .1);\n    vec4 col = vec4(.9, .65, .1, 1.);\n    \n    float d = length(uv);\n    \n    col.a = S(.5, .49, d);\n    \n    // edgeShade\n    float edgeShade = remap01(.35, .5, d);\n    edgeShade *= edgeShade;\n    col.rgb *= 1. - edgeShade * .5;\n    \n    // outline\n    col.rgb = mix(col.rgb, colDark, S(.47, .48, d));\n    \n    // highlight\n    float highlight = S(.42, .405, d) ;\n    highlight *= remap(.41, -.1, .75, 0.,uv.y);\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    // cheek\n    d = length(uv -vec2(.25,-.2));\n    float cheek = S(.2, .01, d) * .4 ;\n    cheek *= S(.18, .16, d);\n    col.rgb = mix(col.rgb, vec3(1.,0.,0.), cheek);\n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv){\n    vec4 col = vec4(0.);\n     \n    uv.x = abs(uv.x); // mirror\n    vec4 head = Head(uv);\n    vec4 eye = Eye(within(uv, vec4(.03, -.1, .37, .25)));\n    vec4 mouth = Mouth(within(uv, vec4(-.3, -.4, .3, -.1)));\n    \n    col = mix(col, head, head.a);\n    col = mix(col, mouth, mouth.a);\n    col = mix(col, eye, eye.a);\n \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    fragColor = Smiley(uv);\n}","name":"Image","description":"","type":"image"}]}