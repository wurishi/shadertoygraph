{"ver":"0.1","info":{"id":"mstGWj","date":"1677863352","viewed":76,"name":"Just messing around.","username":"UsamagorQ","description":"I've never actually used ShaderToy that much  before so I made this as a test to see what would happen if i just messed around with the default shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noidea"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 thing (float x, float y, vec2 v)\n{\nfloat z = x+y/sin(iTime-v.y);\nvec2 res = v*vec2(x-y/2.,z+(iTime/x));\nreturn min(max(abs(res),cos(iTime-z)), iTime+x)/v.x*v.y/y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = fragCoord.x/iTime-0./*01*/*cos(iTime/2.);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    vec3 col = vec3(0.5*tan(uv/fragCoord)-r, r-uv.y*(0.5/fragCoord.x-iTime/fragCoord.y));\n    \n    //0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec2 math = thing(col.x,col.z,uv);\n    // Output to screen\n    fragColor = vec4(math,col.y,1.0);\n}","name":"Image","description":"","type":"image"}]}