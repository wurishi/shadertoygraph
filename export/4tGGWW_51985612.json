{"ver":"0.1","info":{"id":"4tGGWW","date":"1474532124","viewed":818,"name":" Blue noise comparison +1","username":"TomF","description":"Comparison of few noise generation / sampling techniques, modified from https://www.shadertoy.com/view/MtV3W1","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["sampling","rendering","dithering","bluenoise","highpass","uniform","bayer","interleavedgradientnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Blatant copy-pasta from https://www.shadertoy.com/view/MtV3W1, just adding method #8\n\n\n\n// Shader comparing some noise functions for disk sampling\n// 1. No noise\n\n// 2. Simple random \"bad\" noise; second coordinate via re-hashing\n\n// 3. Blue noise generated by https://github.com/bartwronski/BlueNoiseGenerator/ single float; second coordinate via re-hashing\n\n// 4. Blue noise generated by https://github.com/bartwronski/BlueNoiseGenerator/ 2 component vector\n\n// 5. High-pass treated normal noise by Timothy Lottes https://www.shadertoy.com/view/4sBSDW \n// disclaimer - I didn't fully understand the implementation, so noise is shifted... Will try to fix it later.\n\n// 6. 16x16 Bayer matrix by patapom https://www.shadertoy.com/view/Mlt3z8 ; second coordinate via re-hashing.\n\n// 7. Interleaved Gradient noise by Jorge Jimenez http://advances.realtimerendering.com/s2014/index.html ; second coordinate via re-hashing.\n\n// 8. Triangle noise taken from https://www.shadertoy.com/view/4t2SDh, which itself is taken from https://www.shadertoy.com/view/4ssXRX\n\n\n#define F1 float\n#define F2 vec2\n#define F3 vec3\n#define F4 vec4\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\nF1 Noise(F2 n,F1 x){n+=x;return fract(sin(dot(n.xy,F2(12.9898, 78.233)))*43758.5453);}\n\n// Step 1 in generation of the dither source texture.\nF1 Step1(F2 uv,F1 n){\n F1 a=1.0,b=2.0,c=-12.0,t=1.0;   \n return (1.0/(a*4.0+b*4.0-c))*(\n  Noise(uv+F2(-1.0,-1.0)*t,n)*a+\n  Noise(uv+F2( 0.0,-1.0)*t,n)*b+\n  Noise(uv+F2( 1.0,-1.0)*t,n)*a+\n  Noise(uv+F2(-1.0, 0.0)*t,n)*b+\n  Noise(uv+F2( 0.0, 0.0)*t,n)*c+\n  Noise(uv+F2( 1.0, 0.0)*t,n)*b+\n  Noise(uv+F2(-1.0, 1.0)*t,n)*a+\n  Noise(uv+F2( 0.0, 1.0)*t,n)*b+\n  Noise(uv+F2( 1.0, 1.0)*t,n)*a+\n 0.0);}\n    \n// Step 2 in generation of the dither source texture.\nF1 Step2(F2 uv,F1 n){\n F1 a=1.0,b=2.0,c=-2.0,t=1.0;   \n return (4.0/(a*4.0+b*4.0-c))*(\n  Step1(uv+F2(-1.0,-1.0)*t,n)*a+\n  Step1(uv+F2( 0.0,-1.0)*t,n)*b+\n  Step1(uv+F2( 1.0,-1.0)*t,n)*a+\n  Step1(uv+F2(-1.0, 0.0)*t,n)*b+\n  Step1(uv+F2( 0.0, 0.0)*t,n)*c+\n  Step1(uv+F2( 1.0, 0.0)*t,n)*b+\n  Step1(uv+F2(-1.0, 1.0)*t,n)*a+\n  Step1(uv+F2( 0.0, 1.0)*t,n)*b+\n  Step1(uv+F2( 1.0, 1.0)*t,n)*a+\n 0.0);}\n\nbool sampleDist(vec2 uv)\n{\n    float radius = 0.1;\n    return sqrt(dot(uv, uv)) < radius;\n}\n\nbool sampleDistComp(vec2 uv, float radius_)\n{\n    float threshold = 0.005;\n    float radius = 0.1 + radius_;\n    \n    return sqrt(dot(uv, uv)) < radius*(1.0+threshold) && sqrt(dot(uv, uv)) > radius * (1.0-threshold);\n}\n\nfloat interleavedGradientNoise(vec2 pos)\n{\n  float f = 0.06711056 * pos.x + 0.00583715 * pos.y;\n  return fract(52.9829189 * fract(f));\n}\n    \nfloat B2( vec2 _P ) {\n//    return ((_P.y << 1) + _P.x + 1) & 3;    <= This would fare much better than modulos and floors :(\n    return mod( 2.0*_P.y + _P.x + 1.0, 4.0 );\n}\n\n// Generates the 16x16 matrix\nfloat B16( vec2 _P ) {\n    vec2    P1 = mod( _P, 2.0 );                    // (P >> 0) & 1\n    vec2    P2 = floor( 0.5 * mod( _P, 4.0 ) );        // (P >> 1) & 1\n    vec2    P4 = floor( 0.25 * mod( _P, 8.0 ) );    // (P >> 2) & 1\n    vec2    P8 = floor( 0.125 * mod( _P, 16.0 ) );    // (P >> 3) & 1\n    return 4.0*(4.0*(4.0*B2(P1) + B2(P2)) + B2(P4)) + B2(P8);\n}\n\nvec2 randBlue2(vec2 coord)\n{\n    int i = int(mod(coord.x, 16.0));\n    int j = int(mod(coord.y, 16.0));\n    ivec2 finalDist = ivec2(i, j);\n    \n    if (finalDist.x ==   0 && finalDist.y ==   0) return vec2(0.519444, 0.430787);\nif (finalDist.x ==   1 && finalDist.y ==   0) return vec2(0.94036, 0.604582);\nif (finalDist.x ==   2 && finalDist.y ==   0) return vec2(0.136051, 0.933598);\nif (finalDist.x ==   3 && finalDist.y ==   0) return vec2(0.768417, 0.765048);\nif (finalDist.x ==   4 && finalDist.y ==   0) return vec2(0.476575, 0.580816);\nif (finalDist.x ==   5 && finalDist.y ==   0) return vec2(0.735127, 0.0823978);\nif (finalDist.x ==   6 && finalDist.y ==   0) return vec2(0.947883, 0.744003);\nif (finalDist.x ==   7 && finalDist.y ==   0) return vec2(0.185367, 0.689624);\nif (finalDist.x ==   8 && finalDist.y ==   0) return vec2(0.595857, 0.077371);\nif (finalDist.x ==   9 && finalDist.y ==   0) return vec2(0.711087, 0.829571);\nif (finalDist.x ==  10 && finalDist.y ==   0) return vec2(0.95083, 0.371572);\nif (finalDist.x ==  11 && finalDist.y ==   0) return vec2(0.555808, 0.0310745);\nif (finalDist.x ==  12 && finalDist.y ==   0) return vec2(0.372489, 0.69976);\nif (finalDist.x ==  13 && finalDist.y ==   0) return vec2(0.254158, 0.179917);\nif (finalDist.x ==  14 && finalDist.y ==   0) return vec2(0.0860418, 0.599345);\nif (finalDist.x ==  15 && finalDist.y ==   0) return vec2(0.670646, 0.00749567);\nif (finalDist.x ==   0 && finalDist.y ==   1) return vec2(0.32096, 0.00623767);\nif (finalDist.x ==   1 && finalDist.y ==   1) return vec2(0.0210884, 0.593488);\nif (finalDist.x ==   2 && finalDist.y ==   1) return vec2(0.319716, 0.388667);\nif (finalDist.x ==   3 && finalDist.y ==   1) return vec2(0.695496, 0.279704);\nif (finalDist.x ==   4 && finalDist.y ==   1) return vec2(0.343685, 0.914388);\nif (finalDist.x ==   5 && finalDist.y ==   1) return vec2(0.1338, 0.337367);\nif (finalDist.x ==   6 && finalDist.y ==   1) return vec2(0.504128, 0.361907);\nif (finalDist.x ==   7 && finalDist.y ==   1) return vec2(0.541537, 0.911524);\nif (finalDist.x ==   8 && finalDist.y ==   1) return vec2(0.853208, 0.585241);\nif (finalDist.x ==   9 && finalDist.y ==   1) return vec2(0.475666, 0.500984);\nif (finalDist.x ==  10 && finalDist.y ==   1) return vec2(0.137552, 0.0988023);\nif (finalDist.x ==  11 && finalDist.y ==   1) return vec2(0.570744, 0.877687);\nif (finalDist.x ==  12 && finalDist.y ==   1) return vec2(0.607811, 0.370296);\nif (finalDist.x ==  13 && finalDist.y ==   1) return vec2(0.882298, 0.917002);\nif (finalDist.x ==  14 && finalDist.y ==   1) return vec2(0.584608, 0.539685);\nif (finalDist.x ==  15 && finalDist.y ==   1) return vec2(0.260077, 0.877162);\nif (finalDist.x ==   0 && finalDist.y ==   2) return vec2(0.539775, 0.700926);\nif (finalDist.x ==   1 && finalDist.y ==   2) return vec2(0.906721, 0.187922);\nif (finalDist.x ==   2 && finalDist.y ==   2) return vec2(0.844824, 0.958392);\nif (finalDist.x ==   3 && finalDist.y ==   2) return vec2(0.420928, 0.105003);\nif (finalDist.x ==   4 && finalDist.y ==   2) return vec2(0.707214, 0.655164);\nif (finalDist.x ==   5 && finalDist.y ==   2) return vec2(0.917461, 0.261371);\nif (finalDist.x ==   6 && finalDist.y ==   2) return vec2(0.100823, 0.904086);\nif (finalDist.x ==   7 && finalDist.y ==   2) return vec2(0.293766, 0.0354781);\nif (finalDist.x ==   8 && finalDist.y ==   2) return vec2(0.000705271, 0.708442);\nif (finalDist.x ==   9 && finalDist.y ==   2) return vec2(0.82093, 0.190662);\nif (finalDist.x ==  10 && finalDist.y ==   2) return vec2(0.128805, 0.881162);\nif (finalDist.x ==  11 && finalDist.y ==   2) return vec2(0.854812, 0.524597);\nif (finalDist.x ==  12 && finalDist.y ==   2) return vec2(0.186375, 0.326874);\nif (finalDist.x ==  13 && finalDist.y ==   2) return vec2(0.0859888, 0.997248);\nif (finalDist.x ==  14 && finalDist.y ==   2) return vec2(0.916206, 0.402359);\nif (finalDist.x ==  15 && finalDist.y ==   2) return vec2(0.634878, 0.237737);\nif (finalDist.x ==   0 && finalDist.y ==   3) return vec2(0.289515, 0.291971);\nif (finalDist.x ==   1 && finalDist.y ==   3) return vec2(0.163678, 0.86093);\nif (finalDist.x ==   2 && finalDist.y ==   3) return vec2(0.647548, 0.509798);\nif (finalDist.x ==   3 && finalDist.y ==   3) return vec2(0.144273, 0.209434);\nif (finalDist.x ==   4 && finalDist.y ==   3) return vec2(0.233115, 0.703952);\nif (finalDist.x ==   5 && finalDist.y ==   3) return vec2(0.968716, 0.941437);\nif (finalDist.x ==   6 && finalDist.y ==   3) return vec2(0.633509, 0.15018);\nif (finalDist.x ==   7 && finalDist.y ==   3) return vec2(0.63141, 0.452538);\nif (finalDist.x ==   8 && finalDist.y ==   3) return vec2(0.260199, 0.307881);\nif (finalDist.x ==   9 && finalDist.y ==   3) return vec2(0.640967, 0.747011);\nif (finalDist.x ==  10 && finalDist.y ==   3) return vec2(0.408107, 0.187179);\nif (finalDist.x ==  11 && finalDist.y ==   3) return vec2(0.765765, 0.0331389);\nif (finalDist.x ==  12 && finalDist.y ==   3) return vec2(0.74895, 0.738358);\nif (finalDist.x ==  13 && finalDist.y ==   3) return vec2(0.537171, 0.215598);\nif (finalDist.x ==  14 && finalDist.y ==   3) return vec2(0.159844, 0.660211);\nif (finalDist.x ==  15 && finalDist.y ==   3) return vec2(0.71829, 0.910537);\nif (finalDist.x ==   0 && finalDist.y ==   4) return vec2(0.763894, 0.244516);\nif (finalDist.x ==   1 && finalDist.y ==   4) return vec2(0.951578, 0.564248);\nif (finalDist.x ==   2 && finalDist.y ==   4) return vec2(0.569248, 0.855797);\nif (finalDist.x ==   3 && finalDist.y ==   4) return vec2(0.751494, 0.0402213);\nif (finalDist.x ==   4 && finalDist.y ==   4) return vec2(0.932372, 0.491541);\nif (finalDist.x ==   5 && finalDist.y ==   4) return vec2(0.301404, 0.398025);\nif (finalDist.x ==   6 && finalDist.y ==   4) return vec2(0.593026, 0.835442);\nif (finalDist.x ==   7 && finalDist.y ==   4) return vec2(0.963531, 0.619577);\nif (finalDist.x ==   8 && finalDist.y ==   4) return vec2(0.285555, 0.871115);\nif (finalDist.x ==   9 && finalDist.y ==   4) return vec2(0.00123374, 0.49048);\nif (finalDist.x ==  10 && finalDist.y ==   4) return vec2(0.968624, 0.388761);\nif (finalDist.x ==  11 && finalDist.y ==   4) return vec2(0.443713, 0.626192);\nif (finalDist.x ==  12 && finalDist.y ==   4) return vec2(0.26775, 0.905721);\nif (finalDist.x ==  13 && finalDist.y ==   4) return vec2(0.983236, 0.226383);\nif (finalDist.x ==  14 && finalDist.y ==   4) return vec2(0.502999, 0.518875);\nif (finalDist.x ==  15 && finalDist.y ==   4) return vec2(0.173362, 0.0408018);\nif (finalDist.x ==   0 && finalDist.y ==   5) return vec2(0.360261, 0.664469);\nif (finalDist.x ==   1 && finalDist.y ==   5) return vec2(0.0441827, 0.378261);\nif (finalDist.x ==   2 && finalDist.y ==   5) return vec2(0.496398, 0.307573);\nif (finalDist.x ==   3 && finalDist.y ==   5) return vec2(0.028116, 0.892124);\nif (finalDist.x ==   4 && finalDist.y ==   5) return vec2(0.296635, 0.079263);\nif (finalDist.x ==   5 && finalDist.y ==   5) return vec2(0.662544, 0.277276);\nif (finalDist.x ==   6 && finalDist.y ==   5) return vec2(0.0429294, 0.76796);\nif (finalDist.x ==   7 && finalDist.y ==   5) return vec2(0.390276, 0.23285);\nif (finalDist.x ==   8 && finalDist.y ==   5) return vec2(0.746325, 0.0661838);\nif (finalDist.x ==   9 && finalDist.y ==   5) return vec2(0.666276, 0.544414);\nif (finalDist.x ==  10 && finalDist.y ==   5) return vec2(0.211955, 0.0657468);\nif (finalDist.x ==  11 && finalDist.y ==   5) return vec2(0.670296, 0.211445);\nif (finalDist.x ==  12 && finalDist.y ==   5) return vec2(0.0455895, 0.584416);\nif (finalDist.x ==  13 && finalDist.y ==   5) return vec2(0.369694, 0.155462);\nif (finalDist.x ==  14 && finalDist.y ==   5) return vec2(0.995318, 0.765216);\nif (finalDist.x ==  15 && finalDist.y ==   5) return vec2(0.0383798, 0.839799);\nif (finalDist.x ==   0 && finalDist.y ==   6) return vec2(0.74366, 0.70821);\nif (finalDist.x ==   1 && finalDist.y ==   6) return vec2(0.429876, 0.0612517);\nif (finalDist.x ==   2 && finalDist.y ==   6) return vec2(0.938774, 0.952894);\nif (finalDist.x ==   3 && finalDist.y ==   6) return vec2(0.758436, 0.439963);\nif (finalDist.x ==   4 && finalDist.y ==   6) return vec2(0.677177, 0.821359);\nif (finalDist.x ==   5 && finalDist.y ==   6) return vec2(0.23532, 0.858948);\nif (finalDist.x ==   6 && finalDist.y ==   6) return vec2(0.794111, 0.608807);\nif (finalDist.x ==   7 && finalDist.y ==   6) return vec2(0.105287, 0.0732006);\nif (finalDist.x ==   8 && finalDist.y ==   6) return vec2(0.69112, 0.919451);\nif (finalDist.x ==   9 && finalDist.y ==   6) return vec2(0.42776, 0.36209);\nif (finalDist.x ==  10 && finalDist.y ==   6) return vec2(0.0760397, 0.880454);\nif (finalDist.x ==  11 && finalDist.y ==   6) return vec2(0.889423, 0.697522);\nif (finalDist.x ==  12 && finalDist.y ==   6) return vec2(0.581252, 0.404848);\nif (finalDist.x ==  13 && finalDist.y ==   6) return vec2(0.627564, 0.908344);\nif (finalDist.x ==  14 && finalDist.y ==   6) return vec2(0.690562, 0.504839);\nif (finalDist.x ==  15 && finalDist.y ==   6) return vec2(0.590197, 0.175616);\nif (finalDist.x ==   0 && finalDist.y ==   7) return vec2(0.838594, 0.283763);\nif (finalDist.x ==   1 && finalDist.y ==   7) return vec2(0.0184355, 0.678756);\nif (finalDist.x ==   2 && finalDist.y ==   7) return vec2(0.358637, 0.784264);\nif (finalDist.x ==   3 && finalDist.y ==   7) return vec2(0.682388, 0.129352);\nif (finalDist.x ==   4 && finalDist.y ==   7) return vec2(0.0279632, 0.418804);\nif (finalDist.x ==   5 && finalDist.y ==   7) return vec2(0.946668, 0.0965927);\nif (finalDist.x ==   6 && finalDist.y ==   7) return vec2(0.546907, 0.439891);\nif (finalDist.x ==   7 && finalDist.y ==   7) return vec2(0.554822, 0.152766);\nif (finalDist.x ==   8 && finalDist.y ==   7) return vec2(0.385799, 0.724579);\nif (finalDist.x ==   9 && finalDist.y ==   7) return vec2(0.872305, 0.243487);\nif (finalDist.x ==  10 && finalDist.y ==   7) return vec2(0.450859, 0.112245);\nif (finalDist.x ==  11 && finalDist.y ==   7) return vec2(0.00935972, 0.214239);\nif (finalDist.x ==  12 && finalDist.y ==   7) return vec2(0.338534, 0.904729);\nif (finalDist.x ==  13 && finalDist.y ==   7) return vec2(0.805919, 0.132883);\nif (finalDist.x ==  14 && finalDist.y ==   7) return vec2(0.268085, 0.26728);\nif (finalDist.x ==  15 && finalDist.y ==   7) return vec2(0.233583, 0.869162);\nif (finalDist.x ==   0 && finalDist.y ==   8) return vec2(0.0638022, 0.113477);\nif (finalDist.x ==   1 && finalDist.y ==   8) return vec2(0.937023, 0.645149);\nif (finalDist.x ==   2 && finalDist.y ==   8) return vec2(0.289637, 0.289103);\nif (finalDist.x ==   3 && finalDist.y ==   8) return vec2(0.669286, 0.571303);\nif (finalDist.x ==   4 && finalDist.y ==   8) return vec2(0.376855, 0.125375);\nif (finalDist.x ==   5 && finalDist.y ==   8) return vec2(0.270693, 0.677177);\nif (finalDist.x ==   6 && finalDist.y ==   8) return vec2(0.872021, 0.927235);\nif (finalDist.x ==   7 && finalDist.y ==   8) return vec2(0.046752, 0.931941);\nif (finalDist.x ==   8 && finalDist.y ==   8) return vec2(0.854334, 0.551352);\nif (finalDist.x ==   9 && finalDist.y ==   8) return vec2(0.071126, 0.381849);\nif (finalDist.x ==  10 && finalDist.y ==   8) return vec2(0.649319, 0.702417);\nif (finalDist.x ==  11 && finalDist.y ==   8) return vec2(0.99022, 0.383073);\nif (finalDist.x ==  12 && finalDist.y ==   8) return vec2(0.435282, 0.533371);\nif (finalDist.x ==  13 && finalDist.y ==   8) return vec2(0.142709, 0.664623);\nif (finalDist.x ==  14 && finalDist.y ==   8) return vec2(0.833663, 0.899798);\nif (finalDist.x ==  15 && finalDist.y ==   8) return vec2(0.512392, 0.59605);\nif (finalDist.x ==   0 && finalDist.y ==   9) return vec2(0.577357, 0.944455);\nif (finalDist.x ==   1 && finalDist.y ==   9) return vec2(0.537293, 0.366672);\nif (finalDist.x ==   2 && finalDist.y ==   9) return vec2(0.0939091, 0.941222);\nif (finalDist.x ==   3 && finalDist.y ==   9) return vec2(0.926197, 0.254739);\nif (finalDist.x ==   4 && finalDist.y ==   9) return vec2(0.415614, 0.958793);\nif (finalDist.x ==   5 && finalDist.y ==   9) return vec2(0.862828, 0.493765);\nif (finalDist.x ==   6 && finalDist.y ==   9) return vec2(0.272609, 0.259233);\nif (finalDist.x ==   7 && finalDist.y ==   9) return vec2(0.569957, 0.7969);\nif (finalDist.x ==   8 && finalDist.y ==   9) return vec2(0.285365, 0.0426297);\nif (finalDist.x ==   9 && finalDist.y ==   9) return vec2(0.688665, 0.166525);\nif (finalDist.x ==  10 && finalDist.y ==   9) return vec2(0.200408, 0.895049);\nif (finalDist.x ==  11 && finalDist.y ==   9) return vec2(0.599342, 0.305403);\nif (finalDist.x ==  12 && finalDist.y ==   9) return vec2(0.297344, 0.0204257);\nif (finalDist.x ==  13 && finalDist.y ==   9) return vec2(0.934242, 0.638565);\nif (finalDist.x ==  14 && finalDist.y ==   9) return vec2(0.491159, 0.129527);\nif (finalDist.x ==  15 && finalDist.y ==   9) return vec2(0.925625, 0.0312776);\nif (finalDist.x ==   0 && finalDist.y ==  10) return vec2(0.303601, 0.0847153);\nif (finalDist.x ==   1 && finalDist.y ==  10) return vec2( 0.795, 0.189821);\nif (finalDist.x ==   2 && finalDist.y ==  10) return vec2(0.450837, 0.657842);\nif (finalDist.x ==   3 && finalDist.y ==  10) return vec2(0.810162, 0.836983);\nif (finalDist.x ==   4 && finalDist.y ==  10) return vec2(0.312126, 0.37326);\nif (finalDist.x ==   5 && finalDist.y ==  10) return vec2(0.655422, 0.194787);\nif (finalDist.x ==   6 && finalDist.y ==  10) return vec2(0.0481789, 0.655964);\nif (finalDist.x ==   7 && finalDist.y ==  10) return vec2(0.5436, 0.311359);\nif (finalDist.x ==   8 && finalDist.y ==  10) return vec2(0.991793, 0.190022);\nif (finalDist.x ==   9 && finalDist.y ==  10) return vec2(0.721371, 0.597265);\nif (finalDist.x ==  10 && finalDist.y ==  10) return vec2(0.679102, 0.986419);\nif (finalDist.x ==  11 && finalDist.y ==  10) return vec2(0.0187193, 0.657786);\nif (finalDist.x ==  12 && finalDist.y ==  10) return vec2(0.843819, 0.222738);\nif (finalDist.x ==  13 && finalDist.y ==  10) return vec2(0.119968, 0.98326);\nif (finalDist.x ==  14 && finalDist.y ==  10) return vec2(0.721912, 0.539308);\nif (finalDist.x ==  15 && finalDist.y ==  10) return vec2(0.324247, 0.647565);\nif (finalDist.x ==   0 && finalDist.y ==  11) return vec2(0.0344369, 0.663832);\nif (finalDist.x ==   1 && finalDist.y ==  11) return vec2(0.880728, 0.482424);\nif (finalDist.x ==   2 && finalDist.y ==  11) return vec2(0.459158, 0.161253);\nif (finalDist.x ==   3 && finalDist.y ==  11) return vec2(0.0711394, 0.394396);\nif (finalDist.x ==   4 && finalDist.y ==  11) return vec2(0.978181, 0.00991647);\nif (finalDist.x ==   5 && finalDist.y ==  11) return vec2(0.547589, 0.617845);\nif (finalDist.x ==   6 && finalDist.y ==  11) return vec2(0.980612, 0.545397);\nif (finalDist.x ==   7 && finalDist.y ==  11) return vec2(0.723423, 0.910511);\nif (finalDist.x ==   8 && finalDist.y ==  11) return vec2(0.157638, 0.711773);\nif (finalDist.x ==   9 && finalDist.y ==  11) return vec2(0.378678, 0.333999);\nif (finalDist.x ==  10 && finalDist.y ==  11) return vec2(0.0868492, 0.0825771);\nif (finalDist.x ==  11 && finalDist.y ==  11) return vec2(0.573067, 0.531382);\nif (finalDist.x ==  12 && finalDist.y ==  11) return vec2(0.683895, 0.776158);\nif (finalDist.x ==  13 && finalDist.y ==  11) return vec2(0.147227, 0.324534);\nif (finalDist.x ==  14 && finalDist.y ==  11) return vec2(0.575377, 0.268762);\nif (finalDist.x ==  15 && finalDist.y ==  11) return vec2(0.796699, 0.820195);\nif (finalDist.x ==   0 && finalDist.y ==  12) return vec2(0.153431, 0.25417);\nif (finalDist.x ==   1 && finalDist.y ==  12) return vec2(0.603043, 0.762626);\nif (finalDist.x ==   2 && finalDist.y ==  12) return vec2(0.181759, 0.83294);\nif (finalDist.x ==   3 && finalDist.y ==  12) return vec2(0.601912, 0.443505);\nif (finalDist.x ==   4 && finalDist.y ==  12) return vec2(0.658808, 0.875305);\nif (finalDist.x ==   5 && finalDist.y ==  12) return vec2(0.408903, 0.102595);\nif (finalDist.x ==   6 && finalDist.y ==  12) return vec2(0.267165, 0.856999);\nif (finalDist.x ==   7 && finalDist.y ==  12) return vec2(0.232533, 0.168827);\nif (finalDist.x ==   8 && finalDist.y ==  12) return vec2(0.744515, 0.251048);\nif (finalDist.x ==   9 && finalDist.y ==  12) return vec2(0.381705, 0.930107);\nif (finalDist.x ==  10 && finalDist.y ==  12) return vec2(0.897526, 0.424056);\nif (finalDist.x ==  11 && finalDist.y ==  12) return vec2(0.650047, 0.14997);\nif (finalDist.x ==  12 && finalDist.y ==  12) return vec2(0.104188, 0.805568);\nif (finalDist.x ==  13 && finalDist.y ==  12) return vec2(0.433153, 0.0306593);\nif (finalDist.x ==  14 && finalDist.y ==  12) return vec2(0.955828, 0.164799);\nif (finalDist.x ==  15 && finalDist.y ==  12) return vec2(0.272007, 0.881776);\nif (finalDist.x ==   0 && finalDist.y ==  13) return vec2(0.668061, 0.272214);\nif (finalDist.x ==   1 && finalDist.y ==  13) return vec2(0.841036, 0.0175017);\nif (finalDist.x ==   2 && finalDist.y ==  13) return vec2(0.953269, 0.756305);\nif (finalDist.x ==   3 && finalDist.y ==  13) return vec2(0.932418, 0.27839);\nif (finalDist.x ==   4 && finalDist.y ==  13) return vec2(0.0272413, 0.897086);\nif (finalDist.x ==   5 && finalDist.y ==  13) return vec2(0.232241, 0.435204);\nif (finalDist.x ==   6 && finalDist.y ==  13) return vec2(0.82436, 0.128188);\nif (finalDist.x ==   7 && finalDist.y ==  13) return vec2(0.602627, 0.514709);\nif (finalDist.x ==   8 && finalDist.y ==  13) return vec2(0.855969, 0.626017);\nif (finalDist.x ==   9 && finalDist.y ==  13) return vec2(0.381109, 0.104078);\nif (finalDist.x ==  10 && finalDist.y ==  13) return vec2(0.0369322, 0.562734);\nif (finalDist.x ==  11 && finalDist.y ==  13) return vec2(0.997939, 0.786987);\nif (finalDist.x ==  12 && finalDist.y ==  13) return vec2(0.331926, 0.402456);\nif (finalDist.x ==  13 && finalDist.y ==  13) return vec2(0.690981, 0.488288);\nif (finalDist.x ==  14 && finalDist.y ==  13) return vec2(0.927822, 0.667175);\nif (finalDist.x ==  15 && finalDist.y ==  13) return vec2(0.394217, 0.203269);\nif (finalDist.x ==   0 && finalDist.y ==  14) return vec2(0.00199748, 0.814877);\nif (finalDist.x ==   1 && finalDist.y ==  14) return vec2(0.662194, 0.522616);\nif (finalDist.x ==   2 && finalDist.y ==  14) return vec2(0.483088, 0.90556);\nif (finalDist.x ==   3 && finalDist.y ==  14) return vec2(0.262776, 0.287951);\nif (finalDist.x ==   4 && finalDist.y ==  14) return vec2(0.606009, 0.283144);\nif (finalDist.x ==   5 && finalDist.y ==  14) return vec2(0.616587, 0.668045);\nif (finalDist.x ==   6 && finalDist.y ==  14) return vec2(0.70496, 0.975043);\nif (finalDist.x ==   7 && finalDist.y ==  14) return vec2(0.429806, 0.3194);\nif (finalDist.x ==   8 && finalDist.y ==  14) return vec2(0.0336706, 0.83157);\nif (finalDist.x ==   9 && finalDist.y ==  14) return vec2(0.890292, 0.986491);\nif (finalDist.x ==  10 && finalDist.y ==  14) return vec2(0.629915, 0.621903);\nif (finalDist.x ==  11 && finalDist.y ==  14) return vec2(0.839003, 0.128757);\nif (finalDist.x ==  12 && finalDist.y ==  14) return vec2(0.597585, 0.961039);\nif (finalDist.x ==  13 && finalDist.y ==  14) return vec2(0.0932793, 0.933657);\nif (finalDist.x ==  14 && finalDist.y ==  14) return vec2(0.0662161, 0.000106951);\nif (finalDist.x ==  15 && finalDist.y ==  14) return vec2(0.345098, 0.525813);\nif (finalDist.x ==   0 && finalDist.y ==  15) return vec2(0.704657, 0.97248);\nif (finalDist.x ==   1 && finalDist.y ==  15) return vec2(0.238335, 0.140215);\nif (finalDist.x ==   2 && finalDist.y ==  15) return vec2(0.658233, 0.11824);\nif (finalDist.x ==   3 && finalDist.y ==  15) return vec2(0.127873, 0.651251);\nif (finalDist.x ==   4 && finalDist.y ==  15) return vec2(0.974751, 0.473858);\nif (finalDist.x ==   5 && finalDist.y ==  15) return vec2(0.264737, 0.0914546);\nif (finalDist.x ==   6 && finalDist.y ==  15) return vec2(0.172004, 0.999706);\nif (finalDist.x ==   7 && finalDist.y ==  15) return vec2(0.842717, 0.347111);\nif (finalDist.x ==   8 && finalDist.y ==  15) return vec2(0.173883, 0.273313);\nif (finalDist.x ==   9 && finalDist.y ==  15) return vec2(0.605555, 0.322822);\nif (finalDist.x ==  10 && finalDist.y ==  15) return vec2(0.206948, 0.845629);\nif (finalDist.x ==  11 && finalDist.y ==  15) return vec2(0.281722, 0.34557);\nif (finalDist.x ==  12 && finalDist.y ==  15) return vec2(0.860357, 0.576756);\nif (finalDist.x ==  13 && finalDist.y ==  15) return vec2(0.66678, 0.235467);\nif (finalDist.x ==  14 && finalDist.y ==  15) return vec2(0.615107, 0.752722);\nif (finalDist.x ==  15 && finalDist.y ==  15) return vec2(0.902189, 0.350245);\nreturn vec2(0.0);\n}\n\nfloat randBlue(vec2 coord)\n{\n    int i = int(mod(coord.x, 16.0));\n    int j = int(mod(coord.y, 16.0));\n    ivec2 finalDist = ivec2(i, j);\nif (finalDist.x ==   0 && finalDist.y ==   0) return 0.878208;\nif (finalDist.x ==   1 && finalDist.y ==   0) return 0.679809;\nif (finalDist.x ==   2 && finalDist.y ==   0) return 0.344661;\nif (finalDist.x ==   3 && finalDist.y ==   0) return 0.93038;\nif (finalDist.x ==   4 && finalDist.y ==   0) return 0.541595;\nif (finalDist.x ==   5 && finalDist.y ==   0) return 0.331024;\nif (finalDist.x ==   6 && finalDist.y ==   0) return 0.437378;\nif (finalDist.x ==   7 && finalDist.y ==   0) return 0.00948766;\nif (finalDist.x ==   8 && finalDist.y ==   0) return 0.823374;\nif (finalDist.x ==   9 && finalDist.y ==   0) return 0.510364;\nif (finalDist.x ==  10 && finalDist.y ==   0) return 0.423638;\nif (finalDist.x ==  11 && finalDist.y ==   0) return 0.219556;\nif (finalDist.x ==  12 && finalDist.y ==   0) return 0.837093;\nif (finalDist.x ==  13 && finalDist.y ==   0) return 0.264773;\nif (finalDist.x ==  14 && finalDist.y ==   0) return 0.071331;\nif (finalDist.x ==  15 && finalDist.y ==   0) return 0.367231;\nif (finalDist.x ==   0 && finalDist.y ==   1) return 0.459811;\nif (finalDist.x ==   1 && finalDist.y ==   1) return 0.212179;\nif (finalDist.x ==   2 && finalDist.y ==   1) return 0.0149191;\nif (finalDist.x ==   3 && finalDist.y ==   1) return 0.806545;\nif (finalDist.x ==   4 && finalDist.y ==   1) return 0.180018;\nif (finalDist.x ==   5 && finalDist.y ==   1) return 0.69454;\nif (finalDist.x ==   6 && finalDist.y ==   1) return 0.899607;\nif (finalDist.x ==   7 && finalDist.y ==   1) return 0.614141;\nif (finalDist.x ==   8 && finalDist.y ==   1) return 0.36027;\nif (finalDist.x ==   9 && finalDist.y ==   1) return 0.159552;\nif (finalDist.x ==  10 && finalDist.y ==   1) return 0.770221;\nif (finalDist.x ==  11 && finalDist.y ==   1) return 0.606106;\nif (finalDist.x ==  12 && finalDist.y ==   1) return 0.47418;\nif (finalDist.x ==  13 && finalDist.y ==   1) return 0.924862;\nif (finalDist.x ==  14 && finalDist.y ==   1) return 0.586919;\nif (finalDist.x ==  15 && finalDist.y ==   1) return 0.794431;\nif (finalDist.x ==   0 && finalDist.y ==   2) return 0.554611;\nif (finalDist.x ==   1 && finalDist.y ==   2) return 0.908587;\nif (finalDist.x ==   2 && finalDist.y ==   2) return 0.423082;\nif (finalDist.x ==   3 && finalDist.y ==   2) return 0.589262;\nif (finalDist.x ==   4 && finalDist.y ==   2) return 0.360301;\nif (finalDist.x ==   5 && finalDist.y ==   2) return 0.504896;\nif (finalDist.x ==   6 && finalDist.y ==   2) return 0.397522;\nif (finalDist.x ==   7 && finalDist.y ==   2) return 0.139228;\nif (finalDist.x ==   8 && finalDist.y ==   2) return 0.93802;\nif (finalDist.x ==   9 && finalDist.y ==   2) return 0.456896;\nif (finalDist.x ==  10 && finalDist.y ==   2) return 0.994109;\nif (finalDist.x ==  11 && finalDist.y ==   2) return 0.0312021;\nif (finalDist.x ==  12 && finalDist.y ==   2) return 0.34544;\nif (finalDist.x ==  13 && finalDist.y ==   2) return 0.134035;\nif (finalDist.x ==  14 && finalDist.y ==   2) return 0.419029;\nif (finalDist.x ==  15 && finalDist.y ==   2) return 0.179052;\nif (finalDist.x ==   0 && finalDist.y ==   3) return 0.347396;\nif (finalDist.x ==   1 && finalDist.y ==   3) return 0.77123;\nif (finalDist.x ==   2 && finalDist.y ==   3) return 0.153044;\nif (finalDist.x ==   3 && finalDist.y ==   3) return 0.882892;\nif (finalDist.x ==   4 && finalDist.y ==   3) return 0.0819732;\nif (finalDist.x ==   5 && finalDist.y ==   3) return 0.96231;\nif (finalDist.x ==   6 && finalDist.y ==   3) return 0.219908;\nif (finalDist.x ==   7 && finalDist.y ==   3) return 0.840264;\nif (finalDist.x ==   8 && finalDist.y ==   3) return 0.550961;\nif (finalDist.x ==   9 && finalDist.y ==   3) return 0.297924;\nif (finalDist.x ==  10 && finalDist.y ==   3) return 0.883024;\nif (finalDist.x ==  11 && finalDist.y ==   3) return 0.251642;\nif (finalDist.x ==  12 && finalDist.y ==   3) return 0.694992;\nif (finalDist.x ==  13 && finalDist.y ==   3) return 0.960848;\nif (finalDist.x ==  14 && finalDist.y ==   3) return 0.294562;\nif (finalDist.x ==  15 && finalDist.y ==   3) return 0.670472;\nif (finalDist.x ==   0 && finalDist.y ==   4) return 0.089045;\nif (finalDist.x ==   1 && finalDist.y ==   4) return 0.974622;\nif (finalDist.x ==   2 && finalDist.y ==   4) return 0.485652;\nif (finalDist.x ==   3 && finalDist.y ==   4) return 0.335071;\nif (finalDist.x ==   4 && finalDist.y ==   4) return 0.813636;\nif (finalDist.x ==   5 && finalDist.y ==   4) return 0.448641;\nif (finalDist.x ==   6 && finalDist.y ==   4) return 0.641479;\nif (finalDist.x ==   7 && finalDist.y ==   4) return 0.368667;\nif (finalDist.x ==   8 && finalDist.y ==   4) return 0.739633;\nif (finalDist.x ==   9 && finalDist.y ==   4) return 0.179976;\nif (finalDist.x ==  10 && finalDist.y ==   4) return 0.399236;\nif (finalDist.x ==  11 && finalDist.y ==   4) return 0.555797;\nif (finalDist.x ==  12 && finalDist.y ==   4) return 0.167443;\nif (finalDist.x ==  13 && finalDist.y ==   4) return 0.501523;\nif (finalDist.x ==  14 && finalDist.y ==   4) return 0.0104769;\nif (finalDist.x ==  15 && finalDist.y ==   4) return 0.873615;\nif (finalDist.x ==   0 && finalDist.y ==   5) return 0.225913;\nif (finalDist.x ==   1 && finalDist.y ==   5) return 0.397085;\nif (finalDist.x ==   2 && finalDist.y ==   5) return 0.662739;\nif (finalDist.x ==   3 && finalDist.y ==   5) return 0.124663;\nif (finalDist.x ==   4 && finalDist.y ==   5) return 0.541383;\nif (finalDist.x ==   5 && finalDist.y ==   5) return 0.178583;\nif (finalDist.x ==   6 && finalDist.y ==   5) return 0.9312;\nif (finalDist.x ==   7 && finalDist.y ==   5) return 0.133433;\nif (finalDist.x ==   8 && finalDist.y ==   5) return 0.479713;\nif (finalDist.x ==   9 && finalDist.y ==   5) return 0.96049;\nif (finalDist.x ==  10 && finalDist.y ==   5) return 0.0930953;\nif (finalDist.x ==  11 && finalDist.y ==   5) return 0.83929;\nif (finalDist.x ==  12 && finalDist.y ==   5) return 0.360832;\nif (finalDist.x ==  13 && finalDist.y ==   5) return 0.90836;\nif (finalDist.x ==  14 && finalDist.y ==   5) return 0.426395;\nif (finalDist.x ==  15 && finalDist.y ==   5) return 0.58461;\nif (finalDist.x ==   0 && finalDist.y ==   6) return 0.93559;\nif (finalDist.x ==   1 && finalDist.y ==   6) return 0.792277;\nif (finalDist.x ==   2 && finalDist.y ==   6) return 0.281147;\nif (finalDist.x ==   3 && finalDist.y ==   6) return 0.954606;\nif (finalDist.x ==   4 && finalDist.y ==   6) return 0.760545;\nif (finalDist.x ==   5 && finalDist.y ==   6) return 0.400243;\nif (finalDist.x ==   6 && finalDist.y ==   6) return 0.581743;\nif (finalDist.x ==   7 && finalDist.y ==   6) return 0.341324;\nif (finalDist.x ==   8 && finalDist.y ==   6) return 0.822326;\nif (finalDist.x ==   9 && finalDist.y ==   6) return 0.2825;\nif (finalDist.x ==  10 && finalDist.y ==   6) return 0.637923;\nif (finalDist.x ==  11 && finalDist.y ==   6) return 0.451877;\nif (finalDist.x ==  12 && finalDist.y ==   6) return 0.219807;\nif (finalDist.x ==  13 && finalDist.y ==   6) return 0.658472;\nif (finalDist.x ==  14 && finalDist.y ==   6) return 0.338578;\nif (finalDist.x ==  15 && finalDist.y ==   6) return 0.136228;\nif (finalDist.x ==   0 && finalDist.y ==   7) return 0.438959;\nif (finalDist.x ==   1 && finalDist.y ==   7) return 0.174018;\nif (finalDist.x ==   2 && finalDist.y ==   7) return 0.571408;\nif (finalDist.x ==   3 && finalDist.y ==   7) return 0.372467;\nif (finalDist.x ==   4 && finalDist.y ==   7) return 0.211562;\nif (finalDist.x ==   5 && finalDist.y ==   7) return 0.87589;\nif (finalDist.x ==   6 && finalDist.y ==   7) return 0.0585987;\nif (finalDist.x ==   7 && finalDist.y ==   7) return 0.702753;\nif (finalDist.x ==   8 && finalDist.y ==   7) return 0.515295;\nif (finalDist.x ==   9 && finalDist.y ==   7) return 0.00553114;\nif (finalDist.x ==  10 && finalDist.y ==   7) return 0.932023;\nif (finalDist.x ==  11 && finalDist.y ==   7) return 0.77291;\nif (finalDist.x ==  12 && finalDist.y ==   7) return 0.119715;\nif (finalDist.x ==  13 && finalDist.y ==   7) return 0.993993;\nif (finalDist.x ==  14 && finalDist.y ==   7) return 0.538039;\nif (finalDist.x ==  15 && finalDist.y ==   7) return 0.833842;\nif (finalDist.x ==   0 && finalDist.y ==   8) return 0.641068;\nif (finalDist.x ==   1 && finalDist.y ==   8) return 0.877806;\nif (finalDist.x ==   2 && finalDist.y ==   8) return 0.0542825;\nif (finalDist.x ==   3 && finalDist.y ==   8) return 0.925361;\nif (finalDist.x ==   4 && finalDist.y ==   8) return 0.509964;\nif (finalDist.x ==   5 && finalDist.y ==   8) return 0.320287;\nif (finalDist.x ==   6 && finalDist.y ==   8) return 0.453087;\nif (finalDist.x ==   7 && finalDist.y ==   8) return 0.185973;\nif (finalDist.x ==   8 && finalDist.y ==   8) return 0.883939;\nif (finalDist.x ==   9 && finalDist.y ==   8) return 0.400377;\nif (finalDist.x ==  10 && finalDist.y ==   8) return 0.17591;\nif (finalDist.x ==  11 && finalDist.y ==   8) return 0.588842;\nif (finalDist.x ==  12 && finalDist.y ==   8) return 0.407487;\nif (finalDist.x ==  13 && finalDist.y ==   8) return 0.715149;\nif (finalDist.x ==  14 && finalDist.y ==   8) return 0.180159;\nif (finalDist.x ==  15 && finalDist.y ==   8) return 0.268853;\nif (finalDist.x ==   0 && finalDist.y ==   9) return 0.957783;\nif (finalDist.x ==   1 && finalDist.y ==   9) return 0.351564;\nif (finalDist.x ==   2 && finalDist.y ==   9) return 0.242855;\nif (finalDist.x ==   3 && finalDist.y ==   9) return 0.419406;\nif (finalDist.x ==   4 && finalDist.y ==   9) return 0.667085;\nif (finalDist.x ==   5 && finalDist.y ==   9) return 0.123069;\nif (finalDist.x ==   6 && finalDist.y ==   9) return 0.946557;\nif (finalDist.x ==   7 && finalDist.y ==   9) return 0.639703;\nif (finalDist.x ==   8 && finalDist.y ==   9) return 0.0982463;\nif (finalDist.x ==   9 && finalDist.y ==   9) return 0.330846;\nif (finalDist.x ==  10 && finalDist.y ==   9) return 0.480441;\nif (finalDist.x ==  11 && finalDist.y ==   9) return 0.867819;\nif (finalDist.x ==  12 && finalDist.y ==   9) return 0.260971;\nif (finalDist.x ==  13 && finalDist.y ==   9) return 0.930359;\nif (finalDist.x ==  14 && finalDist.y ==   9) return 0.38568;\nif (finalDist.x ==  15 && finalDist.y ==   9) return 0.476644;\nif (finalDist.x ==   0 && finalDist.y ==  10) return 0.108351;\nif (finalDist.x ==   1 && finalDist.y ==  10) return 0.688159;\nif (finalDist.x ==   2 && finalDist.y ==  10) return 0.495431;\nif (finalDist.x ==   3 && finalDist.y ==  10) return 0.797808;\nif (finalDist.x ==   4 && finalDist.y ==  10) return 0.18026;\nif (finalDist.x ==   5 && finalDist.y ==  10) return 0.389973;\nif (finalDist.x ==   6 && finalDist.y ==  10) return 0.832318;\nif (finalDist.x ==   7 && finalDist.y ==  10) return 0.363904;\nif (finalDist.x ==   8 && finalDist.y ==  10) return 0.528793;\nif (finalDist.x ==   9 && finalDist.y ==  10) return 0.939865;\nif (finalDist.x ==  10 && finalDist.y ==  10) return 0.66952;\nif (finalDist.x ==  11 && finalDist.y ==  10) return 0.142645;\nif (finalDist.x ==  12 && finalDist.y ==  10) return 0.555255;\nif (finalDist.x ==  13 && finalDist.y ==  10) return 0.0239847;\nif (finalDist.x ==  14 && finalDist.y ==  10) return 0.804232;\nif (finalDist.x ==  15 && finalDist.y ==  10) return 0.598321;\nif (finalDist.x ==   0 && finalDist.y ==  11) return 0.427431;\nif (finalDist.x ==   1 && finalDist.y ==  11) return 0.853411;\nif (finalDist.x ==   2 && finalDist.y ==  11) return 0.14782;\nif (finalDist.x ==   3 && finalDist.y ==  11) return 0.95267;\nif (finalDist.x ==   4 && finalDist.y ==  11) return 0.00583321;\nif (finalDist.x ==   5 && finalDist.y ==  11) return 0.555402;\nif (finalDist.x ==   6 && finalDist.y ==  11) return 0.230171;\nif (finalDist.x ==   7 && finalDist.y ==  11) return 0.147241;\nif (finalDist.x ==   8 && finalDist.y ==  11) return 0.740541;\nif (finalDist.x ==   9 && finalDist.y ==  11) return 0.256603;\nif (finalDist.x ==  10 && finalDist.y ==  11) return 0.427615;\nif (finalDist.x ==  11 && finalDist.y ==  11) return 0.346169;\nif (finalDist.x ==  12 && finalDist.y ==  11) return 0.980419;\nif (finalDist.x ==  13 && finalDist.y ==  11) return 0.487902;\nif (finalDist.x ==  14 && finalDist.y ==  11) return 0.356681;\nif (finalDist.x ==  15 && finalDist.y ==  11) return 0.199546;\nif (finalDist.x ==   0 && finalDist.y ==  12) return 0.536633;\nif (finalDist.x ==   1 && finalDist.y ==  12) return 0.342791;\nif (finalDist.x ==   2 && finalDist.y ==  12) return 0.615468;\nif (finalDist.x ==   3 && finalDist.y ==  12) return 0.438269;\nif (finalDist.x ==   4 && finalDist.y ==  12) return 0.290439;\nif (finalDist.x ==   5 && finalDist.y ==  12) return 0.702651;\nif (finalDist.x ==   6 && finalDist.y ==  12) return 0.886189;\nif (finalDist.x ==   7 && finalDist.y ==  12) return 0.451659;\nif (finalDist.x ==   8 && finalDist.y ==  12) return 0.978826;\nif (finalDist.x ==   9 && finalDist.y ==  12) return 0.177659;\nif (finalDist.x ==  10 && finalDist.y ==  12) return 0.892861;\nif (finalDist.x ==  11 && finalDist.y ==  12) return 0.0590227;\nif (finalDist.x ==  12 && finalDist.y ==  12) return 0.224225;\nif (finalDist.x ==  13 && finalDist.y ==  12) return 0.747934;\nif (finalDist.x ==  14 && finalDist.y ==  12) return 0.134787;\nif (finalDist.x ==  15 && finalDist.y ==  12) return 0.886863;\nif (finalDist.x ==   0 && finalDist.y ==  13) return 0.0795196;\nif (finalDist.x ==   1 && finalDist.y ==  13) return 0.729167;\nif (finalDist.x ==   2 && finalDist.y ==  13) return 0.211086;\nif (finalDist.x ==   3 && finalDist.y ==  13) return 0.908088;\nif (finalDist.x ==   4 && finalDist.y ==  13) return 0.132081;\nif (finalDist.x ==   5 && finalDist.y ==  13) return 0.499302;\nif (finalDist.x ==   6 && finalDist.y ==  13) return 0.347242;\nif (finalDist.x ==   7 && finalDist.y ==  13) return 0.805922;\nif (finalDist.x ==   8 && finalDist.y ==  13) return 0.316816;\nif (finalDist.x ==   9 && finalDist.y ==  13) return 0.542886;\nif (finalDist.x ==  10 && finalDist.y ==  13) return 0.790025;\nif (finalDist.x ==  11 && finalDist.y ==  13) return 0.47287;\nif (finalDist.x ==  12 && finalDist.y ==  13) return 0.863587;\nif (finalDist.x ==  13 && finalDist.y ==  13) return 0.406975;\nif (finalDist.x ==  14 && finalDist.y ==  13) return 0.576706;\nif (finalDist.x ==  15 && finalDist.y ==  13) return 0.31248;\nif (finalDist.x ==   0 && finalDist.y ==  14) return 0.828537;\nif (finalDist.x ==   1 && finalDist.y ==  14) return 0.404017;\nif (finalDist.x ==   2 && finalDist.y ==  14) return 0.560346;\nif (finalDist.x ==   3 && finalDist.y ==  14) return 0.79002;\nif (finalDist.x ==   4 && finalDist.y ==  14) return 0.381703;\nif (finalDist.x ==   5 && finalDist.y ==  14) return 0.6408;\nif (finalDist.x ==   6 && finalDist.y ==  14) return 0.953981;\nif (finalDist.x ==   7 && finalDist.y ==  14) return 0.10936;\nif (finalDist.x ==   8 && finalDist.y ==  14) return 0.689324;\nif (finalDist.x ==   9 && finalDist.y ==  14) return 0.391197;\nif (finalDist.x ==  10 && finalDist.y ==  14) return 0.268515;\nif (finalDist.x ==  11 && finalDist.y ==  14) return 0.631665;\nif (finalDist.x ==  12 && finalDist.y ==  14) return 0.174832;\nif (finalDist.x ==  13 && finalDist.y ==  14) return 0.00188184;\nif (finalDist.x ==  14 && finalDist.y ==  14) return 0.936502;\nif (finalDist.x ==  15 && finalDist.y ==  14) return 0.654748;\nif (finalDist.x ==   0 && finalDist.y ==  15) return 0.249175;\nif (finalDist.x ==   1 && finalDist.y ==  15) return 0.965481;\nif (finalDist.x ==   2 && finalDist.y ==  15) return 0.145426;\nif (finalDist.x ==   3 && finalDist.y ==  15) return 0.469195;\nif (finalDist.x ==   4 && finalDist.y ==  15) return 0.0824172;\nif (finalDist.x ==   5 && finalDist.y ==  15) return 0.847741;\nif (finalDist.x ==   6 && finalDist.y ==  15) return 0.244575;\nif (finalDist.x ==   7 && finalDist.y ==  15) return 0.555372;\nif (finalDist.x ==   8 && finalDist.y ==  15) return 0.18913;\nif (finalDist.x ==   9 && finalDist.y ==  15) return 0.914464;\nif (finalDist.x ==  10 && finalDist.y ==  15) return 0.0982982;\nif (finalDist.x ==  11 && finalDist.y ==  15) return 0.958425;\nif (finalDist.x ==  12 && finalDist.y ==  15) return 0.359101;\nif (finalDist.x ==  13 && finalDist.y ==  15) return 0.710142;\nif (finalDist.x ==  14 && finalDist.y ==  15) return 0.486321;\nif (finalDist.x ==  15 && finalDist.y ==  15) return 0.156663;\nreturn 0.0;\n}\n\n//note: uniformly distributed, normalized rand, [0;1[\nfloat nrand( vec2 n )\n{\n\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\nfloat triangleNoise(vec2 n)\n{\n#if 0\n    // for temporal noise.\n\tfloat t = fract( iTime );\n\tfloat nrnd0 = nrand( n + 0.07*t );\n#else\n    // static noise.\n\tfloat nrnd0 = nrand(n);\n#endif\n    \n\n    // Convert uniform distribution into triangle-shaped distribution.\n    float orig = nrnd0*2.0-1.0;\n    nrnd0 = orig*inversesqrt(abs(orig));\n    nrnd0 = max(-1.0,nrnd0); // Nerf the NaN generated by 0*rsqrt(0). Thanks @FioraAeterna!\n    nrnd0 = nrnd0-sign(orig)+0.5;\n    \n#if 0\n    // Result is range [-0.5,1.5] which is\n    // useful for actual dithering.    \n    return nrnd0;\n#else\n    // Or convert to [0,1] for these purposes.\n    return (nrnd0+0.5) * 0.5;\n#endif\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uvMod = fragCoord.xy / iResolution.xy;\n    uvMod -= 0.5;\n    uvMod.y *= iResolution.y / iResolution.x;\n    uvMod.y += 0.05;\n\tvec2 fragCoordRescale = fragCoord.xy * 0.25 - fract(fragCoord.xy * 0.25);\n    vec2 fragCoordMod = mod(fragCoordRescale.xy, 16.0);\n    \n    float angle = 0.0;\n    float r = 0.0;\n    float time = fract(iTime/16.0)*16.0;\n    \n    if (time > 2.0)\n    {\n        angle = Noise(fragCoordRescale.xy, 0.0);\n        r = rand(angle);\n    }\n    if (time > 4.0)\n    {\n        angle = randBlue(fragCoordMod.xy);\n        r = rand(angle);\n    }\n    if (time > 6.0)\n    {\n        vec2 b2 = randBlue2(fragCoordMod.xy);\n        angle = b2.x;\n        r = b2.y;\n    }\n    if (time > 8.0)\n    {    \n        angle = Step2(fragCoordMod.xy,0.0)+0.5;\n        r = Step2(fragCoordMod.xy,0.11)+0.5;\n    }\n\tif (time > 10.0)\n    {\n        angle = B16(fragCoordMod.xy)/ 256.0; \n        r = rand(angle);\n    }\n    if (time > 12.0)\n    {\n        angle = interleavedGradientNoise(fragCoordRescale.xy);\n        r = rand(angle);\n    }\n    if (time > 14.0)\n    {\n        angle = triangleNoise(fragCoordRescale.xy);\n        r = rand(angle);\n    }\n    \n    float s = sin(angle * 2.0 * 3.1415926);\n    float c = cos(angle * 2.0 * 3.1415926);\n    \n    vec4 col = sampleDist(uvMod + vec2(s,c) * sqrt(r) * 0.1) ? vec4(1.0) : vec4(0.0);\n    \n    col += sampleDistComp(uvMod, 0.0) ? vec4(1.0,0.0,0.0,0.0) : vec4(0.0);\n    col += sampleDistComp(uvMod, 0.1) ? vec4(0.0,1.0,0.0,0.0) : vec4(0.0);\n    \n    if (fragCoord.y / iResolution.y > 0.8)\n    {\n        col = vec4(angle, r, 0, 0);\n    }\n\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}