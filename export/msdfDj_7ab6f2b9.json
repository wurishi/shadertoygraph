{"ver":"0.1","info":{"id":"msdfDj","date":"1697663311","viewed":19,"name":"Fork Damaged VC keyulu lab04","username":"keyulu","description":"Simulating a damaged VCR playing a video","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n       // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    float lowerBound = 0.7 + (tan(iTime) / 7.0);\n    float upperBound = 0.9 + (tan(iTime) / 7.0);\n\n    if (uv.y > lowerBound && uv.y < upperBound) {\n        float offset = lowerBound;\n        while (offset < upperBound) {\n            if (uv.y > offset && uv.y < offset + 0.01) {\n                warpedUv.x += (0.1 * offset * cos(iTime * cos(offset) * 25.0));\n            }\n            offset += 0.01;\n        }\n    }\n\n    \n    vec2 offset1 = vec2(0.018);\n    vec2 offset2 = vec2(0.043);\n    vec2 offset3 = vec2(0.025);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}