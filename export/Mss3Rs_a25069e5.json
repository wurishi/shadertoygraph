{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"/*\n\tMunching Squares example Shader\n    Copyright (C) 2013  Daniel Hedeblom <maxifoo@gmail.com>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nvec3 color;\nfloat c,p;\nvec2 b;\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat scale = iResolution.x / iResolution.y;\n\tuv = uv-0.5;\n\tuv.y/=scale;\n \n\tb    = uv*256.0+256.0;\n\tc = 0.0;\n \n \n\tfor(float i=16.0;i>=1.0;i-=1.0)\n\t{\n\t\tp = pow(2.0,i);\n \n\t\tif((p < b.x) ^^\n\t\t   (p < b.y))\n\t\t{\n\t\t\tc += p;\n\t\t}\n \n\t\tif(p < b.x)\n\t\t{\n\t\t\tb.x -= p;\n\t\t}\n \n\t\tif(p < b.y)\n\t\t{\n\t\t\tb.y -= p;\n\t\t}\n \n\t}\n \n\tc=mod(c/128.0,1.0);\n \n\tcolor = vec3(sin(c+uv.x*cos(uv.y*1.2)), tan(c+uv.y-0.3)*1.1, cos(c-uv.y+0.9));\n \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mss3Rs","date":"1377616537","viewed":247,"name":"Munching Squares example","username":"spekkio","description":"Munching Squares ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["munchingsquares"],"hasliked":0,"parentid":"","parentname":""}}