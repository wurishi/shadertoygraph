{"ver":"0.1","info":{"id":"4lByR1","date":"1507307969","viewed":144,"name":"Click and Drag Circle Layers","username":"joshuamahler","description":"This shader has a click and drag function where you can see through iChannel0 into iChannel1.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mouse","circle","layers","click"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//You must click first to show the full project\nfloat blurFilter = 1.0;\nfloat sharpFilter = 1.0;\nfloat radius = .1;\n\nmat3 blur = mat3(\n 0, 1, 0, // first column\n 1, -3, 1, // second column\n 0, 1, 0 // third column \n);\n\nmat3 sharp = mat3(\n    0, -1, 0, \n    -1, 5, -1,\n    0, -1, 0\n);\n\nvec3 aSample(const int x, const int y, const int i, in vec2 fragCoord)\n{\n vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n uv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n if(i == 0)   \n \t return texture(iChannel0, uv).xyz;\n else\n     return texture(iChannel1, uv).xyz;\n}\n\nvec3 aFilter(in vec2 fragCoord, mat3 kernel, const int i)\n{\n vec3 sum = vec3 (0.0,0.0,0.0);\n    \n for (int first = 0; first < 3; first++)\n {\n     for(int second = 0; second < 3; second++)\n     {\n \t\tsum += aSample(first-1,second-1,i, fragCoord) * kernel[first][second];\n     }\n }\n        \n return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 m = iMouse / iResolution.xxxx;\n    float aspectRat = iResolution.y/iResolution.x;\n    m.y *= aspectRat;\n    uv.y *= aspectRat;\n\n    vec4 tex1 = texture(iChannel0, uv);\n    vec4 tex2 = texture(iChannel1, uv);\n    \n\tvec2 fc = fragCoord.xy;\n\tvec3 getBlur = aFilter(fc, blur * blurFilter, 0);\n    vec3 getSharp = aFilter(fc, sharp * sharpFilter, 1);\n    vec4 finalTex1 = vec4(getBlur.r, getBlur.g, getBlur.b, 1.0);\n    vec4 finalTex2 = vec4(getSharp.r, getSharp.g, getSharp.b, 1.0);\n    \n    vec4 mouseCircle = vec4(step(length(m.xy - uv),radius),0.0,0.0,0.0);\n    \n    vec4 comp = mix(finalTex1, finalTex2, finalTex2.a);\n    if(m.x > mouseCircle.x && m.y > mouseCircle.y)\n        comp = mix(finalTex2, finalTex1, finalTex1.a);\n    fragColor = comp;\n}","name":"Image","description":"","type":"image"}]}