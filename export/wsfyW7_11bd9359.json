{"ver":"0.1","info":{"id":"wsfyW7","date":"1584891018","viewed":75,"name":"Animated Fractal Julia ","username":"SimpleMurad","description":"Fractal Julia","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float MaxIteration = 100.0f;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/(iResolution.xy/2.5f)-1.25f;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    vec2 c0 = vec2(cos(iTime/3.0f), sin(iTime/3.0f));\n    vec2 z = uv;\n    \n    float i =0.0f;\n\n    for ( i = 0.0f; i < MaxIteration; i++)\n    {\n        z = vec2(pow( z.x, 3.) - 3. *  z.x * pow( z.y, 2.),  3. * pow( z.x, 2.) *  z.y - pow( z.y, 3.)) + c0;\n\n        if (length(z) > 2.0f) break;\n    }\n\n    while (i > 10.0f)\n    {\n        i -= 20.0f;\n    }\n\n    fragColor = vec4(i/10.+(cos(iTime)/3.)+ fragCoord.x/iResolution.x*.5, 0.,  i/30.+(sin(iTime)/2.) + fragCoord.y/iResolution.y*.5, 1.0f);           \n}","name":"Image","description":"","type":"image"}]}