{"ver":"0.1","info":{"id":"3ly3zV","date":"1579317701","viewed":104,"name":"GoL","username":"funnbot","description":"Conways game of life","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["cellularautomata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 singleStep = vec2(1, 1)/iResolution.xy;\n    vec4 col = texture(iChannel0, fragCoord*singleStep);\n    fragColor = vec4(col.xyz,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define UP vec2(1, 0)\n#define DOWN vec2(-1, 0)\n#define RIGHT vec2(0, 1)\n#define LEFT vec2(0, -1)\n\n#define NEXT(dir) int(round(texture(iChannel0, (fragCoord+(dir))*singleStep).x))\n\nbool InMouse(vec2 fragCoord, int range) {\n\tvec2 pos = iMouse.xy / vec2(range, range);\n    vec2 coord = fragCoord / vec2(range, range);\n    return int(pos.x)==int(coord.x)&&int(pos.y)==int(coord.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n    \n{\n    vec2 singleStep = vec2(1, 1)/iResolution.xy;\n    \n    int state = NEXT(vec2(0,0));\n    if (mod(float(iFrame), 1.0) == 0.0 && iMouse.z < 0.5) {    \n    \n        int up = NEXT(UP);\n        int down = NEXT(DOWN);\n        int right = NEXT(RIGHT);\n        int left = NEXT(LEFT);\n        int upRight = NEXT(UP+RIGHT);\n        int upLeft = NEXT(UP+LEFT);\n        int downRight = NEXT(DOWN+RIGHT);\n        int downLeft = NEXT(DOWN+LEFT);\n\n        int neighbors = up + down + right + left + upRight + upLeft + downRight + downLeft;\n\n        if (neighbors <= 1) state = 0;\n        else if (neighbors == 3) state = 1;\n        else if (neighbors >= 4) state = 0;\n\n\n    }\n    \n    if (iMouse.z > 0.5 && InMouse(fragCoord, 10)) {\n            state = state == 0 ? 1 : 0;\n        }\n    \n    fragColor = vec4(state, 0, 0, 1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).xyz;\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}