{"ver":"0.1","info":{"id":"Xl3cWB","date":"1533796983","viewed":463,"name":"Colorful Ring","username":"momoro","description":"Simple math with colors","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sin01(float n) {\n    return sin(n)/2.+.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\n  \t vec3 color = vec3(1.);\n    \n    float f = length(st);\n\n    f += sin01(atan(st.x, st.y) * 3.) / 10. * sin(iTime);\n    \n    f = 1.0 - smoothstep(0.292, 0.301, f);\n\n    f -= 1.0 - smoothstep(0.140, 0.378, length(st));\n    \n    color = vec3(1.000,0.968,0.978) - vec3(st.x,st.y,abs(sin(iTime))) * f;\n\n        \n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}