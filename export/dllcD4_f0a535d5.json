{"ver":"0.1","info":{"id":"dllcD4","date":"1690774813","viewed":40,"name":"移动与旋转","username":"Leslie","description":"未使用齐次坐标。","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 常规化分数为分辨率x,y分量中最小的那个\n    float frac = min(iResolution.x,iResolution.y);\n    \n    // 对frag坐标进行常规化\n    vec2 uv = fragCoord/frac;\n    // 对分辨率进行常规化\n    vec2 res = iResolution.xy/frac;\n\n    // 利用正弦函数在窗口左下角与右上角之间往复移动画线坐标系原点\n    uv-=abs(sin(iTime))*res;\n    \n    \n    float an = iTime;\n    \n    \n    vec2 uvLine=vec2(1.,0.);\n    vec2 uvLf=vec2(0.,1.);\n    \n    // 逆时针旋转an弧度的矩阵\n    mat2 m1=mat2(cos(an), -sin(an),\n             sin(an), cos(an));\n             \n    // 水平放大为2倍的矩阵，在此例中无法正常工作\n    // 因为此例不是采用图形管线标准方式来判断当前fragment是否在有效范围内\n    mat2 m2=mat2(\n        20., 0.,\n        0., 1.\n    );\n    uvLine*=m1*m2;\n    uvLf*=m1*m2;\n    \n    float halfWidth = 5./frac;// 对宽度进行常规化\n    \n    \n    //float clr = float(dot(uv,uvLine)>=0. && abs(dot(uv,uvLf))<=halfWidth);\n    float clr = float(uv.x>=0. && abs(uv.y)<=halfWidth); // @FabriceNeyret2: Not some thing.\n\n    // Output to screen\n    fragColor = vec4(vec3(clr),1.0);\n}","name":"Image","description":"","type":"image"}]}