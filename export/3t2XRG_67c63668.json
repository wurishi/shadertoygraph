{"ver":"0.1","info":{"id":"3t2XRG","date":"1566265474","viewed":211,"name":"Square Kaleidoscope","username":"domorin","description":"square kaleidoscope","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope","square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float in_square(vec2 uv, float square_size)\n{\n    // Changing this value causes some funky shit\n    float a = iTime + length(uv) * 3.141592653589 * sin(iTime * 0.12316);\n    float s = sin(a);\n    float c = cos(a);\n    \n    uv *= mat2(c, -s, s, c);\n    \n    return float(uv.x > -square_size && uv.x < square_size && uv.y > -square_size && uv.y < square_size);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy);\n    vec3 color = vec3(0.0,0.0,1);\n    \n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    \n    float ratio = iResolution.x / iResolution.y;\n    \n    uv *= 6.0;\n    \n    float a = iTime * 0.4 + length(uv) * 0.005 * sin(iTime * 0.25);\n    float s = sin(a);\n    float c = cos(a);\n    \n    uv *= mat2(c, -s, s, c);\n    \n    vec2 guv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    \n    float square_size = 1.00 + (sin(iTime * 0.623) + 1.0) * 0.5 * length(uv) * 0.125;    \n    \n    \n    \n    float square = 0.0;\n    for(float col = -1.0; col < 2.0; col += 1.0)\n    {\n        for(float row = -1.0; row < 2.0; row += 1.0)\n        {            \n            square += in_square(vec2(guv.x + col, guv.y + row), square_size);\n        }\n        \n    }    \n    vec3 col = 0.5 + sin(iTime + vec3(square * 0.25, square * 2.354126, square * 13.42)) * 0.5;\n    \n  \n   \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}