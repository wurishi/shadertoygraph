{"ver":"0.1","info":{"id":"7dSfDV","date":"1647091246","viewed":221,"name":"parallax mountains","username":"Not_an_apple_a_stone","description":"an idea i had","likes":7,"published":1,"flags":32,"usePreview":1,"tags":["2d","parallax","depth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//apply shadows\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 shadow_color = vec4(0, 0, 0, 0.8);\n    vec2 light_direction = vec2(0.9, 0.1);//direction of lighting\n    \n    vec3 current = texture(iChannel0, fragCoord/iResolution.xy).xyz;    \n    float depth = current.r;\n    \n    vec2 offset = light_direction * (1.*depth);\n    \n\tvec3 source = texture(iChannel0, (fragCoord + offset) / iResolution.xy).xyz;\t\n\n\tfloat dif = source.r - depth;//get the diffrence in depth between the current pixel and the source of the shadow\n    \n    float shadow_alpha =  shadow_color.a * clamp(sign(dif), 0., 1.);\n    //currently its just either dark or not cause i cant figure out how to have it blend well\n    \n\tfragColor = vec4(mix(current, shadow_color.rgb, shadow_alpha), 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//create the mountains\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{       \n    \n    \n    int height = int(iResolution.y);\n\t\n    vec2 r = fragCoord/iResolution.xy;\n    \n\tint depth = -1;\n\t\n    float xPos =fragCoord.x + float(iFrame); \n    \n\tfor(int i = 0; i < height; i++)\n\t{\n\t\tif(depth == -1)\n\t\t{\n            float x = xPos + (float(i)*r.x * 1.8); //parallax;\n        \n            vec2 from = vec2(x, float(i))/iResolution.xy;\n\t\t\tfloat source = texture(iChannel0, from).x;\n            \n            source *= (float(i)/iResolution.y);//make it so mountains are smaller the closer they are to the camera\n            \n\t\t\tif(r.y < source)\n\t\t\t\tdepth = i;\t\n\t\t}\n\t}\n\t\n\tif(depth == -1) depth = height;\n\n    float dp = float(depth)/float(height);\n\n\tfloat d = 1.-dp;\n\tvec3 color = vec3(clamp(d, 0., 1.), 0, 0);\n\n\tfragColor = vec4(color, 1);\n}","name":"Buffer A","description":"","type":"buffer"}]}