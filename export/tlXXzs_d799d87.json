{"ver":"0.1","info":{"id":"tlXXzs","date":"1564002881","viewed":98,"name":"Necromurlok - 2D basic primitive","username":"Necromurlok","description":"Basic 2d primitives","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","primitive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n/////////////////////////////////////////////////////////////////////\nfloat quad(in vec2 uv, float size, in vec2 off)\n{\n    vec2 d = step(abs(uv - off) - size, vec2(0.0));\n    return d.x * d.y;\n    \n}\n\n/////////////////////////////////////////////////////////////////////\nfloat rectangle(in vec2 uv, in vec2 size, in vec2 off)\n{\n    vec2 d = step(abs(uv - off) - size, vec2(0.0));\n    return d.x * d.y;\n}\n\n/////////////////////////////////////////////////////////////////////\nfloat circle(in vec2 uv, float radius, in vec2 off)\n{    \n    vec2 d = off - uv;\n    return step(dot(d, d), radius * radius);\n}\n\n/////////////////////////////////////////////////////////////////////\nfloat line(in vec2 uv, in vec2 p0, in vec2 p1, float pointSize)\n{    \n    vec2 line = p1 - p0;\n    vec2 dir = uv - p0;\n    \n    pointSize *= pointSize;\n    \n    float h = clamp(dot(dir, line) / dot(line, line), 0.0, 1.0);\n    dir -= line * h;\n    \n    return step(dot(dir, dir)/* - pointSize*/, pointSize);\n}\n\n/////////////////////////////////////////////////////////////////////\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.yy;\n\n    vec3 col = vec3(1.0);\n    \n    float shape = rectangle(uv, vec2(0.2, 0.1), vec2(0.1));\n    shape += quad(uv, 0.1, vec2(0.5));\n    shape += circle(uv, 0.1, vec2(0.7));\n    \n    shape += line(uv, vec2(1.0, 0.5), vec2(1.2, 0.2), 0.01);\n\n    // Output to screen\n    fragColor = vec4(col * shape,1.0);\n}","name":"Image","description":"","type":"image"}]}