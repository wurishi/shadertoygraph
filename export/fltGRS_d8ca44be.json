{"ver":"0.1","info":{"id":"fltGRS","date":"1636276290","viewed":609,"name":"Syracuse problem / Collatz con 5","username":"FabriceNeyret2","description":"https://en.wikipedia.org/wiki/Collatz_conjecture\nasync variant: infinite sampling\n\"orbit hair\" of each value (buffA line#0): curve which step turn left for evens and right for odds. \ncf https://community.wolfram.com/groups/-/m/t/558256\nclick: show storage","likes":28,"published":3,"flags":32,"usePreview":0,"tags":["collatzconjecture","syracuseproblem","ulamconjecture","hailstonesequence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/ftc3zS\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n        O = T(U/1.);\n        if ( iMouse.z > 0.) O =  T1(U);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// --- compute the Collatz sequence\n\n\nvec3 ihash( uvec3 x ) {              // quality interger hash from https://www.shadertoy.com/view/XlXcW4\nconst uint k = 1103515245U;  // GLIB C\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    return vec3(x) / float(0xffffffffU);\n}\n#define hash(p,s)   ihash(uvec3(U.x,U.x*s,s)).x\n\n//#define hash(p,s)  fract(sin( ( p- .17542*s ) *  78.233 ) * 43758.5453) // old school hash\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5;\n    if (U.y > 0.) return;            // we simulates only 1st line \n    \n    O = T(U);                        // previous state\n    int i = int(O.x+.5);\n    \n    if ( iFrame==0 || (i==1 && O.y==2.) || O.z > R.y ) {        // --- initialization\n        O = vec4(0);\n     // O.x = U.x + U.y*R.x;         // each pixel represent one integer\n        O.a = O.x = floor(1e5*hash(U.x , float(iFrame) ));\n        return;\n    }\n                                     // --- Syracuse steps\n    O.z++;                           // step counter\n    if ( i==1 ) { O.y++; return; }   // already converged ( O.y counts after converged )\n\n    i   = i/2*2==i ? i/2 : 3*i+1;    // hearth of the model\n    O.x = float(i);                  // store current value\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R     iResolution.xy\n#define T(U)  texelFetch( iChannel0, ivec2(U), 0 )\n#define T1(U) texelFetch( iChannel1, ivec2(U), 0 )\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// --- store the whole sequence\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec4 T = T1(vec2(U.x,0));\n    float v = U.y-.5- T.z;\n    O = v==0.  ? T : v < 0. ? T(U) : vec4(0);   // update the front storage\n    O.z = T.z;                                  // keep sequence counter\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// --- draw the AnglePath orbit of the reversed sequence \n//     see see https://community.wolfram.com/groups/-/m/t/558256\n\nfloat line(vec2 p, vec2 a,vec2 b) {           // --- draw line\n    p -= a, b -= a;\n    float h = dot(p, b) / dot(b, b),\n          c = clamp(h, 0., 1.);\n    p -= b*h;\n    return h==c ? dot(p,p) : 1e5; \n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T1(U);                                // previous image\n // O = T1(U)*.99;                             \n    vec2 P, _P;\n    float d = 99.,x, a,r,t, z = R.y/7.;\n    U = ( U - vec2(.1,.45)*R ) / z ;\n    \n    for ( x=0.; x < min(R.x,640.); x++ ) {    // for each simulated number\n        t = T(vec2(x,0)).z;                   // current sequence counter\n        vec4 T = T(vec2(x,t));                // last record\n        if ( T.y != 1. ) continue;            // draw curve when sequence just finished\n        a = 0.; P = vec2(0); r = .05; \n        for ( int i,t = int(t); t >= 0; t-- )  {   // for each value in the sequence\n            _P = P;\n            T = T(vec2(x,t)); i = int(T.x+.5);// current value in the reversed sequence\n            a += i/2*2==i ? .14 : -.26;       // AnglePath from the sequence:\n            P += vec2(cos(a),sin(a)) * r;     // curve turns left it even or right if odd\n            d = min(d, line(U,_P,P) );        // draw current hair segment\n        }\n    }\n    O += .2* smoothstep(1.5,0.,sqrt(d) *z ) * vec4(.5,.7,1,1);\n}","name":"Buffer C","description":"","type":"buffer"}]}