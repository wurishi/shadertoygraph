{"ver":"0.1","info":{"id":"wsdXzl","date":"1625846187","viewed":66,"name":"HypnotoadEye","username":"bryan_smyth","description":"Can I make the Hypnotoad's eye?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.14159;\n\nfloat midpupil(vec2 uv, float time, float lr_split)\n{\n    // Time varying pixel color\n    uv.y += sin(time*10.0+lr_split)*0.06;\n    uv.y *= 1.1 + (cos(time*3.0)*0.25);\n    uv.x += sin(time*4.0+(pi*lr_split))*0.03;\n    float iris = smoothstep(0.0, 0.38, length(uv));\n    uv.x *= 0.6;\n    float sidemove = cos(time*3.33+uv.x*(lr_split-0.5))*0.12;\n    uv.x -= sidemove;\n    float liris = smoothstep(0.0, 0.17, length(uv));\n    uv.x += sidemove*2.0;\n    uv.y += sin(time*(11.0*(lr_split-0.5)))*0.022;\n    float riris = smoothstep(0.0, 0.17, length(uv));\n    return iris * liris * riris;\n    \n}\n\nfloat roundeye(vec2 uv)\n{\n \treturn smoothstep(0.0, 0.7, length(uv));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float lr_split = step(uv.x, 0.5);\n    uv.x *= (iResolution.x/iResolution.y);\n    uv.x = fract(uv.x);\n    uv -= 0.5;\n    uv *= 2.0;\n    uv.x += 0.2;\n    \n    vec3 skin = vec3(0.3, 0.25, 0.07);\n    vec3 iris = vec3(0.6, 0.58, 0.03);\n    vec3 yellow = vec3(1.0, 0.88, 0.1);\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    \n    float pupil = midpupil(uv, iTime, lr_split);\n    float pupil_max = 1.0 - step(pupil, 0.9);\n    float pupil_mid = 1.0 - step(pupil, 0.75);\n    float pupil_min = 1.0 - step(pupil, 0.45);\n    \n    float eye = roundeye(uv);\n    float eye_big_circle = 1.0 - step(eye, 0.99);\n    float eye_small_circle = step(eye, 0.986);\n    skin *= eye_big_circle;\n    skin += iris * eye_small_circle * pupil_max;\n    float flicker = 1.0 - ((sin(iTime*30.0) + (pi*0.5)) / (pi*2.0));\n    skin += yellow * (1.0 - pupil_max) * flicker;\n    skin *= pupil_mid;\n    skin += red * (1.0 - pupil_mid) * flicker;\n    skin *= pupil_min;\n\n    // Output to screen\n    fragColor = vec4(skin, 1.0);\n}","name":"Image","description":"","type":"image"}]}