{"ver":"0.1","info":{"id":"WsK3zd","date":"1570774124","viewed":1168,"name":"The Schrodinger equation","username":"michael0884","description":"quantum mechanical wibbly-wobbly wave function simulation\nThe color represents the phase of the wave function, the opacity - probability density\nThis is a simulation of a single free particle inside a box. The wave function is not normalized though","likes":21,"published":3,"flags":32,"usePreview":0,"tags":["waves","simulation","particles","physics","droplets","nonlinear","classicalfieldtheory","hydrodynamics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 pos )\n{\n    vec4  field = SAMPLR(F1, pos);\n  \n    vec2 psi = field.xy; //probablility amplitude\n  \n     vec2 red = vec2(1,0), green = vec2(-0.5,sqrt(3.)*0.5), blue = vec2(-0.5,-sqrt(3.)*0.5);\n   \n    vec3 RGB =  vec3(dot(psi, red),dot(psi, green),dot(psi, blue));\n    fragColor.xyz = RGB*RGB*2.;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define size iResolution.xy\n#define SAMPLR(a, pos) texture((a), (pos)/size)\n#define SAMPLRs(a, pos,sz) texture((a), (pos)/sz)\n#define F1 iChannel0\n#define F2 iChannel1\n\n//scales\n#define dt sqrt(2.)/7.8\n#define dx 1.\n#define border 0.01\n#define PI 3.14159265\n\n\nvec4 Laplacian(sampler2D F, vec2 pos, vec2 sz)\n{\n    vec4 a = SAMPLRs(F, pos,sz);\n    vec3 k = vec3(-1./12., 4./3., -5./2.);\n\tvec4 x_l1 = SAMPLRs(F, pos + vec2(-1,0),sz);\n    vec4 x_l2 = SAMPLRs(F, pos + vec2(-2,0),sz);\n    vec4 x_r1 = SAMPLRs(F, pos + vec2(1,0),sz);\n    vec4 x_r2 = SAMPLRs(F, pos + vec2(2,0),sz);\n    vec4 y_l1 = SAMPLRs(F, pos + vec2(0,-1),sz);\n    vec4 y_l2 = SAMPLRs(F, pos + vec2(0,-2),sz);\n    vec4 y_r1 = SAMPLRs(F, pos + vec2(0,1),sz);\n    vec4 y_r2 = SAMPLRs(F, pos + vec2(0,2),sz);\n \n\treturn ((x_l2+x_r2+y_l2+y_r2)*k.s + (x_l1+x_r1+y_l1+y_r1)*k.y + a*2.*k.z)/(dx*dx);\n}\n\n\nvec4 adam(sampler2D F, sampler2D Fp, vec2 pos, vec2 sz)\n{\n    return Laplacian(F, pos, sz);\n}\n\nfloat gaussian(vec2 pos, float r)\n{\n    pos /= r;\n    return exp(-dot(pos,pos));\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 field, in vec2 pos)\n{   \n    field = SAMPLR(F1, pos);\n    \n    //mouse interaction\n    if(iMouse.z>0.)\n        field.x += gaussian(pos-iMouse.xy, 10.);\n    \n    field.x += dt*adam(F1, F2, pos,size).y;\n    \n    if(iFrame < 1)\n    {\n        field = 5.*vec4(gaussian(pos-size*0.4, 10.)+gaussian(pos-size*0.6, 10.));\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 field, in vec2 pos)\n{   \n    field = SAMPLR(F1, pos);\n    \n    field.y += -dt*adam(F1, F2, pos,size).x;\n      if(iFrame < 1)\n    {\n        field = 5.*vec4(gaussian(pos-size*0.4, 10.)+gaussian(pos-size*0.6, 10.));\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 field, in vec2 pos)\n{   \n    field = SAMPLR(F1, pos);\n    \n    //mouse interaction\n    if(iMouse.z>0.)\n        field.x += gaussian(pos-iMouse.xy, 10.);\n    \n    field.x += dt*adam(F1, F2, pos,size).y;\n      if(iFrame < 1)\n    {\n        field = 5.*vec4(gaussian(pos-size*0.4, 10.)+gaussian(pos-size*0.6, 10.));\n    }\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 field, in vec2 pos)\n{   \n    field = SAMPLR(F1, pos);\n    \n    field.y += -dt*adam(F1, F2, pos,size).x;\n    \n      if(iFrame < 1)\n    {\n        field = 5.*vec4(gaussian(pos-size*0.4, 10.)+gaussian(pos-size*0.6, 10.));\n    }\n}","name":"Buf D","description":"","type":"buffer"}]}