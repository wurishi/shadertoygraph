{"ver":"0.1","info":{"id":"DtGXD3","date":"1686393956","viewed":63,"name":"iPlay","username":"XienXien","description":"Following Inigo Quilez's eye tutorial. Help appreciated.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["test","eye","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// rand and noise from: https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nfloat rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n\nmat2 m = mat2 ( 0.8, 0.6, -0.6, 0.8 );\n\n//Functional Brownian Motion\nfloat fbm(vec2 p){\n    float f = 0.0;\n    f += 0.5000*noise(p); p *= m*2.02;\n    f += 0.2500*noise(p); p *= m*2.03;\n    f += 0.1250*noise(p); p *= m*2.01;\n    f += 0.0625*noise(p); p *= m*2.04;\n    f /= 0.9375; \n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 p = -1.0 + 2.0*uv;\n    p.x *= iResolution.x/iResolution.y;    \n    \n    float background = 1.0;\n    \n    float r = sqrt( dot(p,p) );\n    float a = atan( p.y, p.x );\n    \n    vec3 col = vec3( 1.0 );\n    \n    float ss = (2.0*cos(fract(0.9 + 0.5*sin(1.0*iTime))));\n    float anim = 1.0 + 0.1*ss*clamp(1.0 - r,0.0, 1.0);\n    r *= anim;\n    \n    if( r<0.8 ){\n        col = vec3( 0.0, 0.3, 0.4 );\n        \n        float f = fbm (5.0*p);\n        col = mix (col, vec3(0.2,0.75,0.4), f );\n        \n        f = 1.0 - smoothstep( 0.2, 0.5, r);\n        col = mix(col, vec3(0.9,0.65,0.2), f );\n        \n        a += 0.05*fbm( 20.0*p );\n        \n        f = smoothstep( 0.25, 0.75, fbm( vec2(6.0*r,20.0*a) ) );\n        col = mix( col, vec3(1.0), f );\n        \n        f = smoothstep( 0.15, 0.9, fbm( vec2(8.0*r,30.0*a) ) );\n        col *= 1.1 - f;\n        \n        f = smoothstep( 0.6, 0.8, r );\n        col *= 1.0 - 0.5*f;\n        \n        f = smoothstep( 0.2, 0.25, r );        \n        col *= f;\n        \n        f = 1.0 - smoothstep(0.0, 0.5, length( p - vec2(0.24,0.2) ) );\n        col += vec3(1.0, 0.9, 0.8)*f*.7;\n        \n        f = smoothstep ( 0.75, 0.8, r );\n        col = mix( col, vec3(1.0), f );\n    }\n    fragColor = vec4(col*background, 1.0);\n}","name":"Image","description":"","type":"image"}]}