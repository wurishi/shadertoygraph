{"ver":"0.1","info":{"id":"WdS3Rh","date":"1548067394","viewed":119,"name":"R estimation","username":"uynet","description":"blue circle overlaps the triangle formed by three moving points.\nsquare point is barycenter of the triangle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 c2 = vec3(.6,0.9,1.);//points\nvec3 c1 = vec3(1.,0.9,.7);//tradict\nvec3 c0 = vec3(.7,0.7,1.);//barycenterCircle\nvec3 c3 = vec3(0.97,0.98,1);//background\nvec3 c4 = vec3(1.,0.5,.7);//barycenter\n\nfloat time;\n\n\nfloat cLength(vec2 p){\n    float po = p.x;\n    float a =  time*6. + sin(time*6.)*0.6;\n    a = -a;\n    p.x = p.x*cos(a)- p.y*sin(a);\n    p.y = po*sin(a)+ p.y*cos(a);\n\n  if(abs(p.x)>abs(p.y))return abs(p.x);\n  return abs(p.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float asp = iResolution.y/iResolution.x;\n    uv-=0.5;\n    uv.y *= asp;\n    \n    time = iTime*0.8;\n    \n    float r = 0.1;\n    \n    vec2 p0 = vec2(r*sin(time*3.14),r*cos(time*3.14));\n    vec2 p1 = vec2(r*sin(time),r*cos(time));\n    vec2 p2 = vec2(r*sin(time*2.82),r*cos(time*2.82));\n    //barycebnter\n    vec2 g = (                                                                                                                                                 \n      p0+\n      p1+\n      p2)/3.;\t\t\n    float size = 0.01 + 0.002*sin(iTime*16.);\n    if(cLength(uv-g)<size){\n        fragColor = vec4(c4,1);\n        return;\n    }\n    \n    float m0 = (p1.y-p0.y)/(p1.x-p0.x);\n    float m1 = (p2.y-p1.y)/(p2.x-p1.x);\n    float m2 = (p0.y-p2.y)/(p0.x-p2.x);\n    \n    //ax + by + c = 0\n    //y = m(x-p.x) + p.y ;\n    //mx + (-1)y + ( -mp.x + p.y ) = 0;\n\n    float d0 = abs(m0*uv.x + (-1.)*uv.y+ (-m0*p0.x+p0.y))\n                     /length(vec2(m0,-1));\n    float d1 = abs(m1*uv.x + (-1.)*uv.y+ (-m1*p1.x+p1.y))\n                     /length(vec2(m1,-1));\n    float d2 = abs(m2*uv.x + (-1.)*uv.y+ (-m2*p2.x+p2.y))\n                     /length(vec2(m2,-1));\n\n    float w = 0.003;\n    if((abs(d0)<w ||\n         abs(d1)<w||\n        abs(d2)<w)\n      &&length(uv)<0.1){\n        fragColor = vec4(c0,1);\n        return;\n    }\n    \n    float l=1.;\n\n\n    l = \n      1./length(uv-p0)+\n      1./length(uv-p1)+\n      1./length(uv-p2);\n    \n    if(l>120.){\n        fragColor = vec4(c0,1);\n        return;\n    }    \n \n    /*\n    float R = (\n     length(p0-g)+\n     length(p1-g)+\n        length(p2-g)\n    )/3.;\n    */\n       float R = max(max(\n           length(p0-g),\n           length(p1-g)\n           ),\n           length(p2-g)\n        );\n    \n    if(l<0.01)l=0.;\n    else l=1.;\n    \n    // Output to screen\n    \n    fragColor = vec4(c3*l,1.0);\n    if(abs(length(uv)-r)<0.007)fragColor=vec4(c1,1);\n    if(abs(length(uv-g)-R)<0.007)fragColor=vec4(c2,1);\n}","name":"Image","description":"","type":"image"}]}