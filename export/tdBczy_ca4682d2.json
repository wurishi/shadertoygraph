{"ver":"0.1","info":{"id":"tdBczy","date":"1586853926","viewed":247,"name":"invisible ink","username":"nexor","description":"Click and hold to paint.\nSpace toggles the ink's flow.","likes":6,"published":1,"flags":48,"usePreview":0,"tags":["reactiondiffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    vec3 col = vec3(.8);\n    vec2 p = (fragCoord.xy-.5*resolution)/resolution.y;\n    vec3 buf = texture(iChannel0,fragCoord/iResolution.xy).rgb;\n    float ink = buf.b;\n    col = mix(col,vec3(.0 ,.3,buf.b+buf.g*buf.r),ink);\n    col = pow(col,vec3(1./2.2));\n \tfragColor = vec4(col,1.);   \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define time iTime\n#define resolution iResolution.xy\n\n#define replim(x,n,a,b) ((p)-(n)*clamp(round(p/n),(a),(b)))\n#define fetch(pass,uv) texelFetch(pass,ivec2(mod(vec2(uv),(res))),0)\n\n\n\nfloat rect(vec2 p, vec2 s)\n{\n    p=abs(p)-s;\n    return max(p.x,p.y);\n}\n\nfloat circle(vec2 p,float r)\n{\n    return length(p)-r;\n}\n\nvec2 laplace(out vec2 prev, sampler2D pass, vec2 res)\n{\n    vec2 lap=vec2(0.);\n    ivec2 fc = ivec2(gl_FragCoord.xy);\n    ivec3 off = ivec3(-1.,0.,1.);\n    vec2 w = vec2(.2,.05);\n    \n    lap += fetch(pass,fc+off.xx).xy*w.y;\n    lap += fetch(pass,fc+off.xy).xy*w.x;\n    lap += fetch(pass,fc+off.xz).xy*w.y;\n    lap += fetch(pass,fc+off.yx).xy*w.x;\n    prev = fetch(pass,fc+off.yy).xy;\n    lap += fetch(pass,fc+off.yz).xy*w.x;\n    lap += fetch(pass,fc+off.zx).xy*w.y;\n    lap += fetch(pass,fc+off.zy).xy*w.x;\n    lap += fetch(pass,fc+off.zz).xy*w.y;\n    lap += -prev;\n    \n    return lap;\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 get_params(vec2 p)\n{\n    \n\tfloat A = .2;\n\tfloat B = .4;\n\tfloat F = .095;\n\tfloat K = .05225;\n    \n    return clamp(vec4(A,B,F,K),0.,1.);   \n}\n\nfloat get_dt(vec2 p)\n{\n \treturn 1.75;   \n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec2 seed(vec2 p)\n{\n    return vec2(1.,.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/resolution;\n    vec2 p = (fragCoord.xy-.5*resolution)/resolution.y;\n    \n    vec3 col = vec3(0.);\n    float space = texelFetch(iChannel1,ivec2(32,2),0).x;\n    \n    vec2 mouse = (iMouse.xy-.5*resolution)/resolution.y;\n    vec2 last = texelFetch(iChannel0,ivec2(0),0).xy;\n    last = last*2.-1.;\n    \n    if(iFrame==0)\n    {\n        col.rg = seed(p);\n    }\n    else\n    {   \n        if(iMouse.z >.0)\n        {\n            float d = circle(p-mouse,.00);\n            if (last.x > -1. && last.y > -1.)\n            \td = sdSegment(p,mouse,last)-smoothstep(.4,.0,length(p-last))*.0015;\n            \n            col += smoothstep(.01,.0,d);\n        }\n        else\n        {\n         \tmouse = vec2(-1.);   \n        }\n        \n        float dt = get_dt(p);\n        \n        if(space>0.)\n        {\n            dt = .0;\n        }\n            \n        vec2 curr = vec2(0.);\n        vec2 prev = vec2(0.);\n        vec2 lap = laplace(prev,iChannel0,resolution);\n        vec4 pms = get_params(p);\n        float da=pms.x,db=pms.y;\n        float f=pms.z, k=pms.w;\n        \n        float pr = prev.x*prev.y*prev.y;\n        \n        curr.x = da * lap.x - pr + f * (1.-prev.x);\n        curr.y = db * lap.y + pr - (k + f) * prev.y;\n   \n        curr = prev + curr*dt;\n        \n        col += vec3(curr.xy,1.-curr.x+curr.y);\n        col = clamp(col,.0,1.);\n    }\n    \n   \tfragColor = vec4(col,1.);\n    if( ivec2(gl_FragCoord.xy) == ivec2(0))\n    {\n     \tfragColor.xy = mouse*.5+.5;   \n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}