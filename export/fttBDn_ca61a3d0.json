{"ver":"0.1","info":{"id":"fttBDn","date":"1663005612","viewed":71,"name":"Checkerboard playground","username":"dgobera","description":"A checkerboard shader, just for learning.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Flip Y and move the origin to the center\n    vec2 pxCoord;\n    pxCoord.x = fragCoord.x - (iResolution.x / 2.0);\n    pxCoord.y = (iResolution.y / 2.0) - fragCoord.y;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = pxCoord/iResolution.xy;\n\n    // Make square size oscillate between 20 and 40\n    float sqSize = ((sin(iTime / 5.0) + 1.0) * 20.0) + 20.0;\n    \n    // Determine if this is a black or colored pixel, cross-checking even/odd row and column\n    float colIndex = floor(pxCoord.x / sqSize);\n    float rowIndex = floor(pxCoord.y / sqSize);\n    float evenRow = mod(rowIndex, 2.0);\n    float pattern = mod(colIndex + evenRow, 2.0) + 0.3;\n\n\n    // Time varying pixel base color\n    vec3 col = 0.5 * cos(iTime + uv.xyx + vec3(0,2,4));\n    // brighten colors\n    col += 0.5;\n    \n    // Apply the checkerboard texture to the base color\n    col *= pattern;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}