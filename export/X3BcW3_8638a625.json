{"ver":"0.1","info":{"id":"X3BcW3","date":"1727819097","viewed":23,"name":"funny merge goes brbrbrbr","username":"donerfornothing","description":"страдаю херней","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["fun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// IMPORTANT - I am an idiot and I exclusively chase fun. ГЛУПЕНЬКОСТЬ ВЕЧНА\n// Move the circle with WASD and enjoy pt\n\nvec2 rotate(in vec2 vec, in float angle)\n{\n    return mat2(cos(angle), sin(angle), -sin(angle), cos(angle)) * vec;\n}\n\nfloat EqT(in vec2 pos, in vec2 cp, in float r, in float T)\n{\n    vec2 p = cp - pos;\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat circle(in vec2 position, in vec2 cur_pixel, in float R)\n{\n    float d = length(position - cur_pixel);\n    \n    return d - R; \n}\n\nfloat rect(in vec2 position, in vec2 cur_pixel, in vec2 size, in float T)\n{\n   cur_pixel = rotate(cur_pixel, T);\n   vec2 D = cur_pixel - position;\n   vec2 k = abs(D) - size;\n   return length(max(k,0.0)) + min(max(k.x,k.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.0f * fragCoord - iResolution.xy) / iResolution.y;\n    \n    \n    float p_x = texelFetch(iChannel0, ivec2(0, 0), 0).x;\n    float p_y = texelFetch(iChannel0, ivec2(0, 1), 0).x;\n    \n    vec2 position = vec2(p_x, p_y);\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float R1 = rect(vec2(0.0), uv, vec2(0.11, 0.7), iTime * 0.6);\n    float R2 = circle(position, uv, 0.3);\n    float T1 = EqT(vec2(0.f), rotate(uv - vec2(0.f, -0.58), -iTime), 0.2, -iTime);\n    \n    float d = min(R1, min(R2, T1));\n    if(R1 <= 0.0009f / min(R2, T1) || R2 <= 0.0009 / min(R1, T1))\n    {\n        d = 0.f;\n    }\n\n    // Output to screen\n    if(d <= 0.f)\n    {\n        fragColor = vec4(col, 1.f);\n    }\n    else\n    {\n        fragColor = vec4(0.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void save_at_ivec(in ivec2 desired_pos, in vec4 data, inout vec4 fragColor, in ivec2 current_pos)\n{\n    fragColor = (desired_pos.x==current_pos.x && desired_pos.y==current_pos.y ) ? data : fragColor;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int a_key = 65;\n    const int d_key = 68;\n    const int w_key = 87;\n    const int s_key = 83;\n    const float move_speed = 0.05f;\n    vec4 velocity = vec4(0.01, 0.0, 0.0, 0.0);\n    \n    \n    vec4 position_x = texelFetch(iChannel0, ivec2(0, 0), 0);\n    vec4 position_y = texelFetch(iChannel0, ivec2(0, 1), 0);\n    \n    //horizontal\n    if(texelFetch(iChannel1, ivec2(d_key, 0), 0).x != 0.f)\n    {\n        position_x += velocity;\n    }\n    else if (texelFetch(iChannel1, ivec2(a_key, 0), 0).x != 0.f)\n    {\n        position_x -= velocity;\n    }\n    // vertical\n    if(texelFetch(iChannel1, ivec2(w_key, 0), 0).x != 0.f)\n    {\n        position_y += velocity;\n    }\n    else if (texelFetch(iChannel1, ivec2(s_key, 0), 0).x != 0.f)\n    {\n        position_y -= velocity;\n    }\n    \n    \n    if(position_x.x >= 2.5f)\n    {\n        position_x.x = -2.49;\n    }\n    else if(position_x.x <= -2.5f)\n    {\n        position_x.x = 2.49;\n    }\n    \n    ivec2 int_fc = ivec2(fragCoord);\n    save_at_ivec(ivec2(0, 0), position_x, fragColor, int_fc);\n    save_at_ivec(ivec2(0, 1), position_y, fragColor, int_fc);\n}","name":"Buffer A","description":"","type":"buffer"}]}