{"ver":"0.1","info":{"id":"ll3GWM","date":"1469629449","viewed":724,"name":"Polar Coordinates Motion","username":"Ark","description":"Polar Coordinates Motion\n\nreference: \nhttp://foxcodex.html.xdomain.jp/PolarCoordinates.html","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["coordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n\nfloat getT() {\n    float t = mod(iTime/1.5, 2.0);\n    return (t < 1.0) ? t : 2.0-t;\n}\n\nfloat easeInOutQuart(float t) {\n    t *= 2.0;\n    if (t < 1.0) {\n        return 0.5 * t*t*t*t;\n    } else {\n        t -= 2.0;\n        return -0.5 * (t*t*t*t - 2.0);\n    }\n}\n\nvec2 convert(vec2 uv, vec2 origin) {\n    float s = 2.0/PI;\n    float r = length(uv-origin);\n    float theta = mod(atan(uv.y - origin.y, uv.x - origin.x) + PI/2.0 + PI, 2.0*PI) - PI;\n    return vec2(s * theta, -r*3.0) + origin;\n}\n\nfloat calc(vec2 p, vec2 origin, float t) {\n    vec2 q = convert(p, origin);\n    vec2 uv = mix(p, q, t);\n    \n    float diff = 0.2;\n    float a = 0.4;\n    uv += vec2(diff);\n    float d_x = min(mod(uv.x, a), mod(-uv.x, a));\n    float d_y = min(mod(uv.y, a), mod(-uv.y, a));\n    float d = min(d_x, d_y);\n    return 0.02/d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (2.0*fragCoord.xy-iResolution.xy) / min(iResolution.x, iResolution.y);\n    float t = easeInOutQuart(getT());\n    float col = calc(uv, vec2(0, 0), t);\n    fragColor = vec4(col*vec3(0.2, 0.45, 0.8), 1.0);\n}","name":"Image","description":"","type":"image"}]}