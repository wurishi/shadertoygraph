{"ver":"0.1","info":{"id":"7scyDX","date":"1654141250","viewed":94,"name":"30 Minutes 6/1","username":"scry","description":"https://twitter.com/Scrygl/status/1532205763501838337","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["3dlightreflection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//////////////////////////////////////////////////\n#define time iTime*1.\n#define pi 3.14159265\n#define deg pi/180.\n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nfloat sdBox(vec3 p, vec3 s) {\n    return max(abs(p.z)-s.z,max(abs(p.x)-s.x,abs(p.y)-s.y));\n}\n\nvec3 lpos(void) {\n    vec3 l = vec3(0.,0.,9.);\n    l.xz *= r2d(time/3.);\n    l.xy *= r2d(time/6.);\n    \n    //l.xy += vec2(sin(time),cos(time))*0.5;\n    //l.xz += vec2(sin(time),cos(time))*0.5;\n    return l;\n}\n\nvec4 map(vec3 p) {\n    vec3 o = p;\n    p.z -= 5.;\n    float d = length(p);\n    float s = 0.3;\n    p.xz *= r2d(deg*45.+sin(o.y+time/2.));\n    for (int i=0;i<5;i++) {\n        p.xy = abs(p.xy)-s*2.5;\n        p.xz *= r2d(deg*90.+sin(o.y+time/3.));\n        d = min(d,sdBox(p,vec3(s/1.1)));\n        s *= 0.7;\n    }\n    float id = 0.;\n    if (d > 0.1) {\n        id = 1.;\n    }\n    d = min(d,-sdBox(o,vec3(10.)));\n    //d = min(d,o.y+2.);\n    return vec4(p.xy,id,d);\n}\n\nvec2 RM(vec3 ro, vec3 rd, float side) {\n    float dO = 0.0;\n    float ii = 0.;\n    for (int i=0;i<90;i++) {\n        vec3 p = ro+rd*dO;\n        float dS = map(p).w*side;\n        dO += dS;\n        ii += 0.01;\n        if (dO > 100. || dS < 0.001) {break;}\n    }\n    return vec2(dO,ii);\n}\n\nvec3 calcNorm(vec3 p) {\n    vec2 h = vec2(0.001,0.);\n    return normalize(vec3(\n        map(p-h.xyy).w-map(p+h.xyy).w,\n        map(p-h.yxy).w-map(p+h.yxy).w,\n        map(p-h.yyx).w-map(p+h.yyx).w\n    ));\n}\n\nvec3 sh(vec3 p, vec3 n) {\n    vec3 l = lpos();\n    vec3 rd = normalize(l-p);\n    vec2 d = RM(p-n*0.003,rd,1.);\n    float s = 0.;\n    if (length(l-p) > d.x) { \n        s = 1.;\n    }\n    float dif = clamp(dot(rd,n),0.,1.);\n    return vec3(s,dif,d.x);\n}\n\nfloat point(vec3 p, vec3 rd) {\n    vec3 l = lpos();\n    float l1 = clamp(length(l-p)*0.5,0.,1.);\n    float l2 = pow(1.-length(l.xy-rd.xy*l.z),3.);\n    return clamp(l2,0.,1.);\n}\n\nvec3 colo(vec3 p, vec3 n, vec2 d, vec3 rd) {\n    vec3 col = vec3(0.5);\n    col.b += (n.x+n.y+n.z)*0.2;\n    col.gr += n.zy*0.1;\n    vec3 s = sh(p,n);\n    float l = point(p,rd);\n    col += pow(l,5.)+l;\n    col -= s.y;\n    col -= s.x*0.2;\n    col = clamp(col,0.,1.);\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 R = iResolution.xy;\n    float ar = R.x/R.y;\n    uv -= 0.5;\n    uv.x *= ar;\n    vec3 col = vec3(0.);\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv,1.));\n    vec2 d = RM(ro,rd,1.);\n    vec3 p = ro+rd*d.x;\n    vec3 n = calcNorm(p);\n    vec3 mp = map(p).xyz;\n    vec3 oro = ro;\n    vec3 ord = rd;\n    vec2 od = d;\n    col += colo(p,n,d,rd);\n    float rl = 1.;\n    for (int i=0;i<3;i++) {\n        ro = p-n*0.003;\n        rd = reflect(rd,n);\n        d = RM(ro,rd,1.);\n        p = ro+rd*d.x;\n        n = calcNorm(p);\n        mp = map(p).xyz;\n        if (mp.z > 0.) {rl = 0.3;}\n        col += colo(p,n,d,rd)*rl*0.9;\n        rl *= 0.9;\n    }\n    \n    for (int i=0;i<1;i++) {\n        ro = p+n*0.003;\n        rd = refract(rd,n,1./1.);\n        d = RM(ro,rd,1.);\n        p = ro+rd*d.x;\n        n = calcNorm(p);\n        mp = map(p).xyz;\n        if (mp.z > 0.) {rl = 0.3;}\n        col += colo(p,n,d,rd)*rl*0.9;\n        rl *= 0.9;\n    }\n    col -= 0.6;\n    col *= 0.8;\n    //col += 1.-d.xxx*0.15;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}