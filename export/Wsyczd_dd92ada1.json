{"ver":"0.1","info":{"id":"Wsyczd","date":"1603453932","viewed":188,"name":"stereogramJfig","username":"nicolasray","description":"Time varying basic stereogram image using the JFIG logo and a wave as depth map.\nSpecial tribute to the incredible rendering option in the game Magic carpet.\n\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["stereogram"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// defines the jfig bitarray\nfloat jfig(uint x, uint y) {\n\tconst uint JFIGW = 32u;\n\tconst uint JFIGH = 18u;\n\tuint[] jfig_bitfield = uint[]( \n    \t0x0u,0x0u,0xf97800u,0x90900u,0xc91800u,0x890900u,0xf90900u,0x180u,\n    \t0x0u,0x30e30e0u,0x4904900u,0x49e49e0u,0x4824820u,0x31e31e0u,0x0u,0x0u,0x0u );\n    if (x>15u ) x-=2u;\n    uint id = x + (JFIGH-1u-y)*JFIGW;\n    if (id>=JFIGW*JFIGH) return 0.;\n    if (0u == (jfig_bitfield[id/32u] & (1u << (id&31u)))) return 1.;\n    return 0.;\n}\n\n// defines a depth map\nfloat depth(vec2 uv){\n    vec2 d =vec2(uv.x*32.,uv.y*18.); \n    uint i=uint(d.x);\n    uint j=uint(d.y);\n    d -= vec2(i,j); \n    // bilinear interpolation of jfig bitarray  \n    float val =\n        (1.-d.x)*(1.-d.y)*jfig(i,j)\n        +(d.x)*(1.-d.y)*jfig(i+1u,j)\n        +(1.-d.x)*(d.y)*jfig(i,j+1u)\n        +(d.x)*(d.y)*jfig(i+1u,j+1u);\n    val=pow(val,2.);\n    \n    // add a wave in background to help wioth headache\n    float wave = sin(1.*iTime+10.*uv.y);\n    val = min(val,.8+.2*wave);\n\n    // get nice range of depth for common inter-eye distance and computer screen \n    return .05+.01*val;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    // propagate the stereovison constraints to the center\n    while (uv.x>.5+depth(uv)/2.)uv.x -= depth(uv);\n   \twhile (uv.x<.5-depth(uv)/2.)uv.x += depth(uv);\n\tfragColor = vec4(texture(iChannel0, 5.*uv+vec2(.1,.1)).xyz,0);\n}\n","name":"Image","description":"","type":"image"}]}