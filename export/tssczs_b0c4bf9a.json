{"ver":"0.1","info":{"id":"tssczs","date":"1603763537","viewed":96,"name":"mandelbrot-testing","username":"vizaxo","description":"mandlelbrot","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int maxIters = 100;\nfloat bandingRatio = 0.1;\n\nvec2 complexSquare(vec2 z) {\n    float a = z.x;\n    float b = z.y;\n    return vec2(a*a - b*b, 2.0*a*b);\n}\n\nvec2 f(vec2 c, vec2 z) {\n    return complexSquare(z) + c;\n}\n\nfloat square(float x) { return x*x; }\n\nvec3 bandColour(int i) {\n    vec3 col;\n    float x = float(i) / float(maxIters);\n    \n   // col.r = sin(1.0/x);\n    \n    col.g = x;\n    \n    return col;\n}\n\nvec3 mandelbrot(vec2 c) {\n    vec2 z = vec2(0.0);\n    int i;\n    for(i = 0; i < maxIters; i++) {\n\t\tz = f(c, z);\n        if (length(z) >= 2.0) {\n            return bandColour(i);\n        }\n    }\n    return vec3(0);//vec3(i / maxIters);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 centre = vec2(-0.5,0.0);\n    float size = 5.0;\n    vec2 uv = (fragCoord/iResolution.xy - 0.5) * size + centre;\n    uv.y *= iResolution.y/iResolution.x;\n \n    vec3 col = mandelbrot(uv);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}