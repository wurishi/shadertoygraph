{"ver":"0.1","info":{"id":"Ndtyzr","date":"1652972143","viewed":75,"name":"first 3d attempt lphix 003","username":"LpHiX","description":"003","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["lphix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float segment(vec2 P, vec2 A, vec2 B, float r) \n{\n    vec2 g = B - A;\n    vec2 h = P - A;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n    return clamp(0.,r-d,1.);\n}\n\nconst vec3 backColor  = vec3(0.3);\nconst vec3 lineColor1 = vec3(0.35,0.95,0.51);\nconst vec3 lineColor2 = vec3(0.95,0.95,0.10);\n\nvec2 tPoint(vec3 P, vec3 input3D){\n    float tZ = input3D.x;\n    float tX = input3D.y;\n    float d = input3D.z;\n    float premult = (P.x * sin(tZ) + P.y * cos(tZ) * cos(tX) - P.z * sin(tX) + d);\n    float mult = d / premult;\n    return mult * vec2(P.x * cos(tZ) - P.y * sin(tZ),(P.x * sin(tZ) + P.y * cos(tZ)) * sin(tX) + P.z * cos(tX));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 render3D = vec3(iTime, 0.5, 1000);\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy);\n    float thickness = 5.;\n    vec3 color = backColor;\n    \n    // draw line segment\n    float intensity = 0.;\n    \n    for(int lineX=-5;lineX<=5;lineX++){\n        intensity += segment(uv, tPoint(vec3(50 * lineX, -250,0), render3D), tPoint(vec3(50 * lineX, 250,0), render3D), thickness);\n    }\n    for(int lineY=-5;lineY<=5;lineY++){\n        intensity += segment(uv, tPoint(vec3(-250, 50 * lineY,0), render3D), tPoint(vec3(250, 50 * lineY,0), render3D), thickness);\n    }\n    \n    color = mix(vec3(0,0,0), vec3(0,1,0), intensity);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}