{"ver":"0.1","info":{"id":"Dtj3RR","date":"1679166547","viewed":67,"name":"Raycasting Light","username":"Wildric","description":"A shader with ray casted light","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raycasting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Circle {\n    vec2 pos;\n    float rad;\n    vec3 col;\n};\n\n\nstruct Light {\n    vec2 pos;\n    vec3 col;\n};\n\nfloat FadeLight(float x) {\n    return exp(-11.0*x*x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    Circle c[3];\n    c[0].pos = vec2(0.4,0.3);\n    c[0].rad = 0.1;\n    c[0].col = vec3(1.0,1.0,0.0);\n    \n    c[1].pos = vec2(0.6,0.1);\n    c[1].rad = 0.05;\n    c[1].col = vec3(1.0,0.0,0.3);\n    \n    c[2].pos = vec2(0.6,0.4);\n    c[2].rad = 0.05;\n    c[2].col = vec3(0.0,0.2,.5);\n    \n    \n    Light l;\n    l.pos = iMouse.xy/iResolution.xx;\n    l.col = vec3(1.0);\n    vec2 uv = fragCoord/iResolution.xx;\n\n    \n    vec3 col = vec3(0.0);\n    if ((distance(uv, c[0].pos) < c[0].rad) || (distance(uv, c[1].pos) < c[1].rad) ||\n           (distance(uv, c[2].pos) < c[2].rad) )\n        col = c[0].col*FadeLight(distance(uv, l.pos)*0.9);\n    else {\n        vec2 currentPos = uv;\n        vec2 direction  = normalize(l.pos - currentPos);\n        float distNearest = 1000.0f;\n        bool  br = false;\n        for (int i = 0; i < 1000; i++) {\n            for (int i = 0; i < 3; i++) {\n                distNearest = min(distNearest,distance(currentPos, c[i].pos) - c[i].rad);\n                if (distNearest < 0.0001f) {\n                        br = true;\n                        break;\n                }\n               }\n                float distToLight = distance(currentPos, l.pos);\n                if (distToLight < distNearest) {\n                    col = l.col * FadeLight(distance(uv, l.pos));\n                    br = true;\n                    break;\n                }\n\n             \n             if (br) break;\n            currentPos += direction*distNearest;\n            \n        }\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}