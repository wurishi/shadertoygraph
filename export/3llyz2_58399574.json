{"ver":"0.1","info":{"id":"3llyz2","date":"1592513262","viewed":70,"name":"First Shader - Movement","username":"Ravbug","description":"This very basic fragment shader uses the current time to move an image across the screen while blending a color on the right side.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["texture","blending","movement"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define speedDamp 5.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   //get the pixel coordinate and translate it into unitized space\n   vec2 xy = fragCoord.xy;\n    xy.x = xy.x / iResolution.x;\n    xy.y = xy.y / iResolution.y;\n    \n   //get the color of the pixel on the texture, offsetting by iTime\n   vec4 texColor = texture(iChannel0,xy+iTime/speedDamp);\n    \n    //apply the color transformation\n    texColor.r *= xy.x*2.0 * abs(sin(iTime));\n    \n    //write the pixel into the output\n    fragColor = texColor;\n}\n","name":"Image","description":"","type":"image"}]}