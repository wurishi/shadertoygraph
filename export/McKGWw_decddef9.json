{"ver":"0.1","info":{"id":"McKGWw","date":"1712856377","viewed":32,"name":"prak2.","username":"la","description":"1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 a, float angle) {\nfloat c = cos(angle);\nfloat s = sin(angle);\nreturn vec2(a.x * c - a.y * s, a.x * s + a.y * c);\n}\n\nfloat cube(vec3 p, vec3 size) {\nvec3 d = abs(p) - size;\nreturn min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n}\n\nfloat sphere(vec3 p, float r) {\nreturn length(p) - r;\n}\n\nfloat scene(vec3 p) {\nfloat d = cube(p, vec3(1.0, 2.0, 0.5));\n\nfloat sphere1 = sphere(p - vec3(1.0, 0.0, -3.0), 1.0);\nfloat sphere2 = sphere(p - vec3(0.0, 0.0, 3.0), 1.0);\nfloat sphere3 = sphere(p - vec3(0.0, 2.0, 0.0), 1.);\nfloat sphere4 = sphere(p - vec3(3.0, 3.0, -3.0), 1.0);\n\nd = min(d, sphere1);\nd = min(d, sphere2);\nd = min(d, sphere3);\nd = min(d, sphere4);\n\nreturn d;\n}\n\nfloat sphere1, sphere2, sphere3, sphere4;\n\nvoid cameraspin(inout vec3 p) {\np.yz = rotate(p.yz, 0.3);\np.xz = rotate(p.xz, iTime * 0.5);\n}\n\nvoid mainImage(out vec4 out_color, in vec2 fragCoord) {\nvec2 resolution = iResolution.xy;\nfloat time = iTime;\nvec3 backgroundColor = vec3(1. , 0.8,1.);\nvec3 finalColor = backgroundColor;\nvec2 uv = (fragCoord.yx / iResolution.yx - 0.5) * vec2(iResolution.y / iResolution.x, 1.0);\nvec3 cam = vec3(0.5, 1.0, -55.0);\nvec3 dir = normalize(vec3(uv, 4.0));\ncameraspin(cam);\ncameraspin(dir);\nfloat t;\nint i;\nvec3 color = vec3(1, 1, 1);\nfor (i = 0; i < 1000; ++i) {\nfloat k = scene(cam + dir * t);\nt += k;\nif (k < 0.1) {\nvec3 h = cam + dir * t;\nvec2 o = vec2(0.001, 1);\nvec3 n = normalize(vec3(\nscene(h + o.xyy) - scene(h - o.xyy),\nscene(h + o.yxy) - scene(h - o.yxy),\nscene(h + o.yyx) - scene(h - o.yyx)\n));\nvec3 g= vec3(.4, 0.2, 6.);\nconst vec3 lightdir = normalize(vec3(11, 3, 22));\nfloat light = dot(n, lightdir) * 1.5 + 0.1;\nout_color.rgb = finalColor + light * color * g; \n\n\nreturn;\n}\n}\nout_color.rgb = finalColor;\n}","name":"Image","description":"","type":"image"}]}