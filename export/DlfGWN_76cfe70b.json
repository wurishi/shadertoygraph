{"ver":"0.1","info":{"id":"DlfGWN","date":"1704941649","viewed":41,"name":"Quadratic Bezier Viz","username":"nrebei2","description":"Click mouse to move control point","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_LINES = 30;\n\nfloat line(vec2 p, vec2 a, vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float d = length( pa - ba*h );\n    return 1. - step(0.01, d);\n}\n\nfloat circle(vec2 p, vec2 c, float r) {\n    float d = length(p - c) - r;\n    return 1. - smoothstep(0.0, 0.02, d);\n}\n\nvec3 color(vec2 p, vec2 m) {\n    vec3 c = vec3(0.);\n    vec2 pa = vec2(-.9, -0.5);\n    vec2 pb = vec2(0., 0.4);\n    vec2 pc = m;\n    \n    float t = sin(iTime)/2. + .5;\n    \n    c += line(p, pa, pb);\n    c += line(p, pb, pc);\n    c += circle(p, pa, 0.03);\n    c += circle(p, pb, 0.03);\n    c += circle(p, pc, 0.03);\n    c += circle(p, mix(pa, pb, t), 0.05);\n    c += circle(p, mix(pb, pc, t), 0.05);\n    c += line(p, mix(pa, pb, t), mix(pb, pc, t));\n    c += circle(p, mix(mix(pa, pb, t), mix(pb, pc, t), t), 0.05);\n    \n    \n    for(int i = 0; i <= MAX_LINES; i++) {\n        float t1 = float(i)/(float(MAX_LINES)+1.);\n        float t2 = (float(i)+1.)/(float(MAX_LINES)+1.);\n        c += line(p, \n            mix(mix(pa, pb, t1), mix(pb, pc, t1), t1),\n            mix(mix(pa, pb, t2), mix(pb, pc, t2), t2));\n    }\n    \n    return c;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv*2. - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 mCoords = (2.*iMouse.xy - iResolution.xy)/iResolution.y;\n    \n    vec3 c = color(uv, mCoords);\n\n    // Output to screen\n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}