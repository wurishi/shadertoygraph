{"ver":"0.1","info":{"id":"ds3yzH","date":"1694716980","viewed":75,"name":"Cannulated glass","username":"nvassalo","description":"Turned it into a cannulated glass effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["texcoords","glass","kaleidoscope","fractured"],"hasliked":0,"parentid":"MllcD2","parentname":"window glass"},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float squares = 80.0;\nconst float amt = .03;\n\n\nfloat luma(vec4 color) {\n  return dot(color.rgb, vec3(0.25,0.35,0.35));\n}\n\nvec4 blur(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  color += texture(image, uv) * 0.1964825501511404;\n  color += texture(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n      \n    vec2 tc = uv;\n    tc.x = pow(tc.x, iResolution.x   / iResolution.y);\n    \n    vec2 tile = fract(tc * squares + iTime ) + .1;\n    float line = smoothstep( 0.8, .2, tile.x);\n    \n    //tile.x += iTime * .2;\n    \n   \n    vec4 color = blur(iChannel0, uv+(tile.x*amt), iResolution.xy, vec2(4.,4.));\n    \n    vec3 tex = mix(vec3(line), vec3(color), 0.9);\n    \n\tfragColor = vec4(vec3(tex), 1.);\n}","name":"Image","description":"","type":"image"}]}