{"ver":"0.1","info":{"id":"dllSR7","date":"1674509678","viewed":197,"name":"147k particles simulation","username":"vegardno","description":"big bang","likes":6,"published":1,"flags":32,"usePreview":1,"tags":["particles","cellularautomata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 vel = texelFetch(iChannel0, ivec2(fragCoord), 0).zw;\n    fragColor = vec4(vec3(1.) * smoothstep(0., .5, length(vel)), 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define WRAP 1\n\nconst float dt = 1.;\nconst float friction = 0.;\n\n#if WRAP\n#define fetch_offset(tex, coord, offset) \\\n    texture(tex, (coord + vec2(offset)) / iResolution.xy)\n#else\n#define fetch_offset(tex, coord, offset) \\\n    texelFetchOffset(tex, ivec2(coord), 0, ivec2(offset))\n#endif\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame < 10) {\n#if 0\n        vec2 pos = vec2(.5);\n        vec2 vel = texture(iChannel1, fragCoord / iResolution.xy).xy - vec2(.5);\n        fragColor = vec4(pos, vel);\n#else\n        vec2 pos = vec2(.5);\n        vec4 init = texture(iChannel1, fragCoord / iResolution.xy);\n        vec2 vel = init.xy - vec2(.5);\n        fragColor = vec4(pos, .3 * normalize(vel) * smoothstep(.7, 1., init.z));\n#endif\n        return;\n    }\n\n    vec4 result = vec4(0.);\n\n    {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(0, 0));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n\n        vel *= (1. - friction);\n\n        pos += vel * dt;\n        if (pos.x >= 0. && pos.x < 1. && pos.y >= 0. && pos.y < 1.)\n            result += vec4(pos, vel);\n    }\n\n    {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(-1, 0));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n        \n        pos += vel * dt;\n        if (pos.x >= 1. && pos.y >= 0. && pos.y < 1.)\n            result += vec4(pos.x - 1., pos.y, vel.x, vel.y);\n    }\n    \n    {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(1, 0));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n        \n        pos += vel * dt;\n        if (pos.x < 0. && pos.y >= 0. && pos.y < 1.)\n            result += vec4(pos.x + 1., pos.y, vel.x, vel.y);\n    }\n    \n        {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(0, -1));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n        \n        pos += vel * dt;\n        if (pos.y >= 1. && pos.x >= 0. && pos.x < 1.)\n            result += vec4(pos.x, pos.y - 1., vel.x, vel.y);\n    }\n    \n    {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(0, 1));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n        \n        pos += vel * dt;\n        if (pos.y < 0. && pos.x >= 0. && pos.x < 1.)\n            result += vec4(pos.x, pos.y + 1., vel.x, vel.y);\n    }\n\n    {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(-1, -1));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n        \n        pos += vel * dt;\n        if (pos.x >= 1. && pos.y >= 1.)\n            result += vec4(pos.x - 1., pos.y - 1., vel.x, vel.y);\n    }\n\n\n    {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(1, -1));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n        \n        pos += vel * dt;\n        if (pos.x < 0. && pos.y >= 1.)\n            result += vec4(pos.x + 1., pos.y - 1., vel.x, vel.y);\n    }\n    \n    {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(-1, 1));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n        \n        pos += vel * dt;\n        if (pos.x >= 1. && pos.y < 0.)\n            result += vec4(pos.x - 1., pos.y + 1., vel.x, vel.y);\n    }\n\n    {\n        vec4 col = fetch_offset(iChannel0, fragCoord, ivec2(1, 1));\n        vec2 pos = col.xy;\n        vec2 vel = col.zw;\n        \n        pos += vel * dt;\n        if (pos.x < 0. && pos.y < 0.)\n            result += vec4(pos.x + 1., pos.y + 1., vel.x, vel.y);\n    }\n\n    // clamp position\n    result.xy = clamp(result.xy, 0., 1.);\n    // clamp velocity\n    result.zw = clamp(result.zw, -.5, .5);\n\n    fragColor = result;\n}","name":"Buffer A","description":"","type":"buffer"}]}