{"ver":"0.1","info":{"id":"3t3XRB","date":"1581170537","viewed":128,"name":"被隔離: 武漢市 ","username":"zproxy","description":"Sub sole vanitas, Supra solem veritas","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation","loop","flag","biohazard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// either \n//WebGL2: Hardware accelerated\n// or restart browser\n//Hardware accelerated but at reduced performance\n//Unknown Error: ERROR: 0:? : '' : syntax error\n//INVALID_VALUE: shaderSource: string not ASCII\n\n\n// https://www.shadertoy.com/view/wdK3zm\n\nvec3 Star(vec2 uv,vec2 pos,float angle,float scale) \n{\n    uv -=pos;\n    uv *=mat2(sin(radians(angle) + vec4(1,0,2,1)*1.5707));\n    uv /=scale;\n    float a = mod(atan(uv.x,-uv.y),2.*0.6283185)-0.6283185;\n    vec2 preuv = length(uv) * vec2(cos(a),sin(a))*1.23606794;\n    preuv.y = abs(preuv.y);\n    preuv.x -= 0.5;\n    float value = -(0.3467647*preuv.x+preuv.y)*25.534033;//0.2467647,15.534033;\n    return vec3(clamp(value,0.,1.));\n}\n\n// https://www.shadertoy.com/view/4lVfW3\n#define S(x,r) smoothstep( 2e2/R.y, 0., length(vec2(x-l*cos(a),l*sin(a))) -r )//\n#define xmainImage( O, u )                                       \\\n    vec2  R = iResolution.xy * 0.5,                                   \\\n          U = u+u - R;                                          \\\n    float l = length(U)*30./R.y,  /* .955 = 3/pi  1.05 = pi/3 */\\\n          a = ( mod( .955*atan(U.y,U.x)-.5, 2.) - 1. ) *1.05,   \\\n          c = S(15.5,10.5);                                     \\\n    O.r = max( 0., S(12.,15.) - S(,3.) - c                      \\\n                   - max( 0., 1. - (abs(a)-.1)*R.y*.1 )         \\\n             ) + S(,14.) - S(,10.5)                             \\\n               + S(15.,9.) - c                                 \n\n// https://www.shadertoy.com/view/MtKXzV\nvec2 rot( vec2 p, float l ){\n\tvec2 r;\n\tfloat sl= sin(l), cl= cos(l);\n\tr.x= cl*p.x - sl*p.y;\n\tr.y= sl*p.x + cl*p.y;\n\treturn r;\n}\n\nvoid emainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv= 2.0 * fragCoord / iResolution.xy - vec2(1.0,1.0);\n\tuv.x *= iResolution.x / iResolution.y;\n\n\tvec2 p= uv;\n\n\tvec3 r= vec3(0.0);\n\n\tfloat at= atan(p.x,p.y);\n\n\tfloat rad= 0.8 * 0.45;\n\n\trad -= 0.06*abs(cos(at*4.0));\n\n\tvec2 ph= rot(p,0.125*3.141592);\n\tvec2 ph2= rot(p,0.375*3.141592);\n\n\tif( length(uv) < rad && \n       // border size\n       0.005 < min( min( abs(ph.x), abs(ph.y) ), min( abs(ph2.x), abs(ph2.y) ) ) ){\n\t\tif( mod( at -0.125*3.141592, 0.5*3.141592) < 0.25*3.141592 )\n\t\t\tr= vec3(0.7);\n\t\telse\n\t\t\tr= vec3(0.5,0.05,0.05);\n\t}\n\n\tfragColor = vec4(r, 1.0);\n}\n\n              \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec3 colorGold = vec3(255.0,222.0,0.0)/255.0;\n    vec3 colorRed = vec3(222.0,41.0,16.0)/255.0;\n    \n    float ratio = 1.5;\n    float bInRatio = float(fragCoord.x>0.5*(iResolution.x-iResolution.y*ratio) &&fragCoord.x<iResolution.x-0.5*(iResolution.x-iResolution.y*ratio) );//\n    float preUVx = (fragCoord.x-0.5*(iResolution.x-iResolution.y*ratio))/(iResolution.y*ratio)*30.0;\n    float preUVy = (fragCoord.y)/iResolution.y*20.0;\n    vec2 uv = vec2(preUVx,20.0-preUVy);\n    \n    //BG Color\n    vec3 colorBG = colorRed;\n    \n    //pos1,x:5/30,y:5/20\n    \n    // should we remove stars?\n    float cycle = mod( iTime  / (4.0*atan(1.0)), 18.0);\n\n    vec3 colorSTAR0 = Star(uv,vec2(5,5),180.0,6.0);\n    vec3 colorSTAR = vec3(0.0);\n\n    // big star\n    if (cycle < 14.0) colorSTAR = Star(uv,vec2(5,5),180.0,6.0);\n\n    // show 322 in this cycle?\n    if (cycle < 12.0) colorSTAR = max(Star(uv,vec2(10,2),58.0,2.0),colorSTAR);\n    if (cycle < 10.0) colorSTAR = max(Star(uv,vec2(12,4),91.0,2.0),colorSTAR);\n    if (cycle < 8.0) colorSTAR = max(Star(uv,vec2(12,7),180.0,2.0),colorSTAR);\n    // remove mid cycle/pandemic?\n    if (cycle < 6.0) colorSTAR = max(Star(uv,vec2(10,9),58.0,2.0),colorSTAR);\n    \n    float mask = float(colorSTAR.x>0.0);\n    // Output to screen\n    \n    // float cycle = (iTime - 3.14 / 4.0) / 3.14;\n    //float cycle = mod( iTime  / 3.14, 10.0);\n    \n    //if (cos(iTime * 0.5)>0.0)\n    \n    float irare = 3.5;\n    \n    if (\n        (cycle > 15.5 && cycle < (2.0 + 15.5)) || \n        (cycle > irare && cycle < (2.0 + irare)))\n    {\n        // flicker colorSTAR ?\n        \n        if (cycle > (irare + 0.5))\n        {\n        float small = 1.0/6.0;\n        float strobe = mod( cycle , small*2.0);\n        \n        if (strobe < small)\n        mask *= 0.5; // offmode\n        }\n        \n     emainImage(fragColor,fragCoord);\n    }\n    else\n    {\n     xmainImage(fragColor,fragCoord + vec2(-iResolution.x * 0.25, -iResolution.x*0.125));\n    }    \n    \n    // 5.5 should invert colors?\n    \n    fragColor =  vec4(mix(\n        \n        // 一些動畫\n        max(0.01,0.99 + sin(iTime  )) * fragColor.rgb,\n        \n        \n        //max(0.0,0.99 + sin(iTime)) *\n        colorRed*1.175,mask),1.0)*bInRatio;//*bInRatio   clamp to standard size or not\n    \n    \n}","name":"Image","description":"","type":"image"}]}