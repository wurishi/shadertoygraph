{"ver":"0.1","info":{"id":"lfGXD3","date":"1715848295","viewed":98,"name":"euler estimation prey predator","username":"coco1001coco","description":"a euler estimation over 20 sec of the evolution of population prey, preadator between 0 and 250","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["math","euler"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define K 100.\n\nfloat F(float t, float x, float y) {\n    return x*(3.*(1.-x/K)-2.*y);\n}\n\nfloat G(float t, float x, float y){\n    return y*(-4.0+x);\n}\n\nvec2 euler(float t, float dt, vec2 origine) {\n    float x = origine.x;\n    float y = origine.y;\n\n    for (float i = 0.0; i<t; i+=dt) {\n        float x_1 = x + dt*F(i,x,y);\n        float y_1 = y + dt*G(i,x,y);\n        x = x_1;\n        y = y_1;\n    }\n    return vec2(x,y);\n}\n\nfloat euclidien_divide(float a, float b) {\n    return a - floor(a/b)*b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.x;\n    float t = euclidien_divide(iTime,20.0); // iMouse.x/iResolution.x*20.0;\n    vec3 col = vec3(euler(t,0.001,uv*250.0),0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}