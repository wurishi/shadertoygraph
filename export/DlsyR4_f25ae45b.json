{"ver":"0.1","info":{"id":"DlsyR4","date":"1690461765","viewed":125,"name":"Loading with background colored","username":"Arkitu","description":"[some description]","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["loading","neon"],"hasliked":0,"parentid":"ctsyz8","parentname":"Loading black and white neon"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535897932384626433832795;\n\n//const float CIRCLE_COUNT = 10.;\nconst float GLOBAL_RADIUS = .5;\n\n/*\n\nfragColor : output (r, g, b, a)\nfragCoor : position du pixel (x, y)\niTime : timestamp actuel en secondes\niResolution : résolution de l'écran\n\n*/\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.388, 0.478, 0.500);\n    vec3 b = vec3(-0.122, -0.164, 0.355);\n    vec3 c = vec3(0.340, 0.340, 0.340);\n    vec3 d = vec3(0.000, 0.333, 0.667);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float CIRCLE_COUNT = (sin(iDate[3]/2.))*150.;\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    vec3 baseColor = palette(iTime);\n\n    vec3 color = vec3(.0);\n\n    float unitAngle = (2.*PI)/CIRCLE_COUNT;\n    for (float i = 0.; i < abs(CIRCLE_COUNT); i++) {\n        if (i == 0.) {\n            continue;\n        }\n        float angle = (1.01)*i + unitAngle * i;\n        vec2 center = vec2(\n            (\n                sin(angle)*sin(iDate[3]/2.)\n                 + \n                cos(angle)*(1.-sin(iDate[3]/2.))\n            ),\n            (\n                sin(angle)*(1.-sin(iDate[3]/2.))\n                 + \n                cos(angle)*(sin(iDate[3]/2.))\n            )\n        )*GLOBAL_RADIUS;\n        float a = (sin(50./(length(uv-center) - ((sin(iDate[3]+(1.*i)))/10.)))/2.)/CIRCLE_COUNT;\n\n        color += palette(i/CIRCLE_COUNT)*a;\n    }\n    \n    for (float i = 0.; i < abs(CIRCLE_COUNT); i++) {\n        if (i == 0.) {\n            continue;\n        }\n        float angle = (1.01)*i + unitAngle * i;\n        vec2 center = vec2(\n            (\n                sin(angle)*sin(iDate[3]/2.)\n                 + \n                cos(angle)*(1.-sin(iDate[3]/2.))\n            ),\n            (\n                sin(angle)*(1.-sin(iDate[3]/2.))\n                 + \n                cos(angle)*(sin(iDate[3]/2.))\n            )\n        )*GLOBAL_RADIUS;\n        float a = (sin(.01/(length(uv-center) - ((sin(iDate[3]+(1.*i)))/10.)))/2.);\n\n        color += palette(i/100.)*a;\n    }\n\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}