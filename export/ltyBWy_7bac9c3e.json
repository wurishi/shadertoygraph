{"ver":"0.1","info":{"id":"ltyBWy","date":"1544002029","viewed":280,"name":"var_arcs","username":"skaplun","description":"Put fullscreen for the best experience.\nOriginal gif - https://goo.gl/FffCV8\nNeed to get rid of magic numbers","likes":25,"published":1,"flags":32,"usePreview":0,"tags":["2d","sin","cos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float clr(vec2 st, vec2 cellId, float t){\n\tvec2 curPoint;\n    if(cellId.x == 0.){\n    \tcurPoint = vec2(RAD * sin(t * cellId.y), RAD * cos(t * cellId.y));\n    }else if(cellId.y == 0.){\n    \tcurPoint = vec2(RAD * sin(t * cellId.x), RAD * cos(t * cellId.x));\n    }else{\n    \tcurPoint = vec2(RAD * sin(t * cellId.x), RAD * cos(t * cellId.y));\n    }\n    float point = smoothstep(.125, .075, distance(st, curPoint));\n    float x = smoothstep(.025, .0125, distance(st.x, curPoint.x));\n    if(cellId.y == 0.)\n        return max(x * .75, point);\n    float y = smoothstep(.025, .0125, distance(st.y, curPoint.y));\n    if(cellId.x == 0.)\n        return max(y * .75, point);\n    return max(max(x, y) * .75, point);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord.xy * 2. - iResolution.xy)/iResolution.y;\n    if(abs(uv.x) > 1.){\n        fragColor = vec4(0.);\n        return;\n    }\n    vec4 modCoord = modifyCoords(uv);\n    if(modCoord.z == 0. && modCoord.w == 0.){\n        fragColor = vec4(0.);\n        return;\n    }\n    vec4 bg = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    float front = clr(modCoord.xy, modCoord.zw, iTime);\n    fragColor = mix(bg, vec4(1.), front);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define GREY .5\n\nfloat dist2Line(vec2 a,vec2 b,vec2 p) { \n    p -= a, b -= a;\n\tfloat h = clamp(dot(p, b) / dot(b, b), 0., 1.); \n\treturn length( p - b * h );                       \n}\n\n#define S(v)  smoothstep(35./iResolution.y, .0, v)\n#define CS(a) sin(a+vec2(0,1.5708))\n\n#define circle(st) S(abs(length(st)-RAD)) * GREY\n\nfloat clrAtCell(vec2 st, vec2 cellId, float t, float t0){\n\tvec2  curPoint = RAD * CS(t * cellId),\n         prevPoint = RAD * CS(t0 * cellId);\n    return S(dist2Line(curPoint, prevPoint, st)) * GREY;\n}\n\n#define T(U) texelFetch(iChannel0, ivec2(U), 0)\n\nvoid mainImage(out vec4 O, vec2 U){\n    vec2 R = iResolution.xy,\n        uv = ( 2.*U - R ) / R.y;\n    vec4 P = modifyCoords(uv);\n    float clr;\n    O = U == vec2(.5) ? R.xyxy\n        : vec4 (  abs(uv.x) > 1.  ? 0.\n                : P.zw == vec2(0) ? 0.\n                : P.z*P.w == 0. || P.z==P.w ? circle(P.xy)\n                : ( clr = clrAtCell(P.xy, P.zw, iTime, iTime - iTimeDelta),\n                    T(0).xy == R\n                        ? max(clr, T(U).r)\n                        : clr \n               ) );\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define RAD .9\n#define S(v)  smoothstep(35./iResolution.y, .0, v)\n\nvec4 modifyCoords(vec2 uv){\n    vec2 cellId = floor(uv * 6.) + 6.; cellId.y = 11. - cellId.y;\n    vec2 st = (fract(uv * 6.) - .5) * 2.;\n    return vec4(st, cellId);\n}","name":"Common","description":"","type":"common"}]}