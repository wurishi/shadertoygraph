{"ver":"0.1","info":{"id":"7lKfWG","date":"1665195346","viewed":40,"name":"Game Of Life with Fading Cells","username":"Longinus","description":"Game of Life","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//random genration style taken from Book of shaders. just added different constants\nfloat random( vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(13.5678,83.876)))*\n        67768.831122);\n}\n\nvec4 getPixel(vec2 pc){\n    return texture(iChannel0, pc);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 step = 1.0/iResolution.xy;\nvec2 pc = fragCoord.xy/iResolution.xy;\n\n    vec4 neighbours[8];\n    neighbours[0] = getPixel(pc-step);\n    neighbours[1] = getPixel(pc+vec2(0,-step.y));\n    neighbours[2] = getPixel(pc+vec2(step.x,-step.y));\n    neighbours[3] = getPixel(pc+vec2(-step.x,0.0));\n    neighbours[4] = getPixel(pc+vec2(step.x,0.0));\n    neighbours[5] = getPixel(pc+vec2(-step.x,step.y));\n    neighbours[6] = getPixel(pc+vec2(0.0,step.y));\n    neighbours[7] = getPixel(pc+step);\n\n    vec4 cell = getPixel(pc);\n    int sum =0;\n    for(int i=0; i<8; i++){\n        sum+=(neighbours[i].b>254.0/255.0)?1:0;\n    }\n    bool live = cell.b>254.0/255.0;\n    vec4 temp = ((live&&(sum ==2))||(sum ==3))?vec4(1.0,1.0,1.0,1.0):vec4(0.0,0.0,0.0,1.0);\n    if(iFrame%6000 ==0){\n        float b = random(fragCoord+float(iFrame))>0.5?1.0:0.0;\n        fragColor = vec4(0.0,0,b,1.0);\n    }else{\n        fragColor = (temp.b>254.0/255.0)?vec4(live?(cell.r-1.0/255.0):1.0,live?(cell.g-1.0/255.0):1.0,1.0,1.0):vec4(cell.r-(1.0/255.0),0.0,0.0,1.0);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}