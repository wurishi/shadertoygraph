{"ver":"0.1","info":{"id":"ftd3Dj","date":"1636760075","viewed":338,"name":"Televisionnn","username":"drone1","description":"hahahaha","likes":8,"published":1,"flags":2,"usePreview":0,"tags":["television"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NC 16.0\n\nfloat noise1( sampler3D tex, in vec3 x )\n{\n    return textureLod(tex,(x+0.5)/32.0,0.0).x;\n}\nfloat noise1( sampler2D tex, in vec2 x )\n{\n    return textureLod(tex,(x+0.5)/64.0,0.0).x;\n}\nfloat noise1f( sampler2D tex, in vec2 x )\n{\n    return texture(tex,(x+0.5)/64.0).x;\n}\n\nfloat fbm1( sampler3D tex, in vec3 x )\n{\n    float f = 0.0;\n    f += 0.5000*noise1(tex,x); x*=2.01;\n    f += 0.2500*noise1(tex,x); x*=2.01;\n    f += 0.1250*noise1(tex,x); x*=2.01;\n    f += 0.0625*noise1(tex,x);\n    f = 2.0*f-0.9375;\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n    \n    vec2 s = iResolution.xy/NC;\n    vec2 i = mod(floor(uv*NC)/NC, 1.0);\n    vec2 hi = s/2.0;\n    \n    uv = -1.0+2.0*uv;\n    float dc = length(uv);\n    \n    float tw = 1.0 + 10.0*(.5+.5*sin(iTime*0.1)); //timewarp\n    float tt = 1.0*iTime+dc*tw;\n    vec2 p = vec2(2.0+20.0*(.5+.5*sin(tt/3.14159))+pow(dc, 0.0001));\n    float pp = p.x/32.0;\n    float d = pow(abs(uv.x),p.x)+pow(abs(uv.y),p.y)+\n        .01*(-1.0+2.0*fbm1(iChannel0,10.0*vec3(uv,iTime)));\n    vec3 cc = 40.*vec3(.40*d,d*.13,d*0.25);\n    vec3 c = (1.-5.0*d)*cc;\n    \n    float d2 = fbm1(\n        iChannel0,\n        1.*vec3(uv+vec2(.05*iTime,0.0),0.1*iTime)\n    );\n    c += d2;\n    \n    tt = -10000.0*iTime;\n    p = vec2(mod(1.0+tt,30.0));\n    float f = 1.5;\n    float tf = iTime*.1;\n    float sc = .3*sin(tf+f*uv.x)*cos(tf+f*uv.y);\n    float fbm = fbm1(iChannel0,10.0*vec3(uv,iTime));\n    d = pow(abs(uv.x),p.x)+pow(abs(uv.y),p.y)+sc+\n        .01*(-1.0+2.0*fbm);\n    cc = 40.*vec3(.40*d,d*.13,d*0.25);\n    c += .1*(1.-10.0*d)*cc;\n    \n    vec3 norm = normalize(vec3(pp*d*100.*pow(uv.x,3.0-2.0*pp),\n        10.0*pow(.5+.5*uv.y,3.0-1.5*pp), -1.0));\n    vec3 ld = normalize(vec3(.5,0.5,-.5));\n    c += .75*vec3(pow(max(0.,dot(norm, ld)), 20.0));\n    \n    c.r *= 1.0 - 0.1*(0.5+0.5*sin(uv.x*1000.0)*cos(c.r*502.23));\n    \n    float ir = 0.1+2.0*(0.5+0.5*sin(iTime*0.01));\n    c += vec3(0.01, 0.13+uv.x/20.0, 0.15+uv.y/15.0) * (.5+.5*sin(uv.x*iResolution.x/ir));\n    c *= 1.0+0.1*length(0.5+.5*uv);\n    \n    c += 4.0*.125*vec3(textureLod(iChannel1,(.5+.5*pp*uv)+vec2(0.01*fbm),0.0).r);\n\n    c.r -= 0.1*dc;\n    \n    c += 0.0125*vec3(max(0.0,pow(abs(1.0-dc),2.0)));\n\n    // WHY? Using 2.0 here causes inverted colors for me\n    c = pow(c, vec3(3.0));\n    \n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}