{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define ITERATIONS 5   // フラクタルノイズの反復回数\n\n\nfloat hash12(vec2 p) {\n    float h = dot(p, vec2(127.1, 311.7));\n    return fract(sin(h) * 43758.5453);\n}\n\nfloat noise2D(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    \n    f = f * f * (3.0 - 2.0 * f);\n    \n    float a = hash12(i + vec2(0.0, 0.0));\n    float b = hash12(i + vec2(1.0, 0.0));\n    float c = hash12(i + vec2(0.0, 1.0));\n    float d = hash12(i + vec2(1.0, 1.0));\n    \n    // バイリニア補間\n    return mix(mix(a, b, f.x),\n               mix(c, d, f.x),\n               f.y);\n}\n\n\nfloat fbm(vec2 p) {\n    float value = 0.0;\n    float amp   = 0.5;  \n    vec2 shift  = vec2(10.0);\n    \n    for(int i = 0; i < ITERATIONS; i++) {\n        value += amp * noise2D(p);\n        p = p * 2.0 + shift;\n        amp *= 0.5;\n    }\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float t = iTime * 0.25;\n\n    float r = length(uv);\n    float a = atan(uv.y, uv.x);\n    \n    float swirlAmount = 0.5 * sin(r * 8.0 - t * 4.0);\n    a += swirlAmount;\n    \n    vec2 swirlUV = r * vec2(cos(a), sin(a));\n    \n    float n = fbm(swirlUV + t * 0.2);\n    \n    float rCol = 0.5 + 0.5 * sin(3.0 * n + 0.0);\n    float gCol = 0.5 + 0.5 * sin(3.0 * n + 2.0);\n    float bCol = 0.5 + 0.5 * sin(3.0 * n + 4.0);\n    \n    vec3 color = vec3(rCol, gCol, bCol);\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"X3tyDr","date":"1734949228","viewed":67,"name":"Smooth psychedelic fractal noise","username":"AoichiShisho","description":"Noise\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""}}