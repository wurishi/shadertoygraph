{"ver":"0.1","info":{"id":"fsVyWh","date":"1654790012","viewed":91,"name":"My first simple fractal","username":"TheoWU","description":"My first fractal","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define pi 3.1415926\n\nvec2 getNormal(float angle){\n    return vec2(sin(angle),cos(angle));\n}\n\nvec2 fractal(vec2 uv,int complexity,vec2 n){\n    for(int i=0;i<complexity;i++){\n        uv *= 3.;\n        uv.x -= 1.5;\n        uv.x = abs(uv.x);\n        uv.x -= 0.5;\n        uv -= n*min(0.,dot(uv,n))*2.; //reflect\n    }\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = 2.*(fragCoord-iResolution.xy*0.5)/iResolution.y;\n    vec3 col = vec3(0);\n    vec2 mouse = iMouse.xy/iResolution.xy; // 0 to 1\n    \n    uv *= 2.;\n    uv.x = abs(uv.x);\n    uv.y = abs(uv.y);\n    \n    float angle = 3./4.*pi;\n    uv.y += tan(angle)*0.5;\n    \n    vec2 n = getNormal(angle);\n    uv -= n*max(0.,dot(uv-vec2(0.5,0.),n))*2.;\n    \n    n = getNormal(mouse.y*pi);\n    uv.x += 0.5;\n\n    int complexity = 3;\n    \n    uv = fractal(uv,complexity,n);\n    \n    float scale = pow(3.,float(complexity));\n    float d = length(uv - vec2(clamp(uv.x,-1.,1.),0.));\n    //col += smoothstep(1./iResolution.y,0.0,d/scale); //boundary\n    uv /= scale;\n    col += texture(iChannel0, uv+iTime*0.03+mouse).rgb; //texture\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}