{"ver":"0.1","info":{"id":"Nsc3DN","date":"1629821592","viewed":108,"name":"Skewy Fractal","username":"104","description":"Wait for the spirally bits","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\nvoid mainImage(out vec4 o, vec2 C)\n{\n    vec2 uv = C/iResolution.xx+100.;\n    uv *= 5.;\n    float sh = 1.0;\n    float t = (iTime-9.)*.06;\n    o = vec4(0);\n    for (float i = 0.; i <24.; ++ i) {\n        vec4 h = hash42(floor(uv));\n        vec2 sh2 = min(fract(uv),1.-fract(uv));\n        sh = min(sh2.x,sh2.y);\n        o += h*sh; // accumulate color\n\n        vec2 uv2 = uv.yx - .5;// centered uv\n        uv2 -= t+t;\n        uv += (fract(uv2)-.5)*sign(fract(uv2)-.5)*.8;// skew in 2d\n        uv += t;\n    }\n    o = (sin(o*2.)*.5+.5)*sqrt(sh);\n    \n    // post\n    vec2 uvn = C/iResolution.xy-.5;\n    o = clamp(o,0.,1.);\n    o = sqrt(o);\n    o *= 1.-dot(uvn,uvn*1.9); // vignette\n}\n\n","name":"Image","description":"","type":"image"}]}