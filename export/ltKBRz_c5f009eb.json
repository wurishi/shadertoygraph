{"ver":"0.1","info":{"id":"ltKBRz","date":"1541676968","viewed":242,"name":"MyMandelbrotFractal","username":"overlord","description":"Mandelbrot fractal, wasd - movement, qe - zoom","likes":0,"published":3,"flags":48,"usePreview":0,"tags":["fractal","overlord"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R 10.\n#define ITERS 256.\n\nbool isPrime(int number){\n\n    if (number < 2)\n        return false;\n    if (number == 2)\n        return true;\n    if (number % 2 == 0)\n        return false;\n    for (int i = 3; (i*i) < number; i += 2) {\n        if (number % i == 0 )\n            return false;\n    }\n    return true;\n\n}\n\nvec3 fractal(float RE, float IM) {\n    float re = 0.;\n    float im = 0.;\n    float j = 0.;\n    for (int i = 0; i < 256; i++) {\n    \tfloat sqr = re * re + im * im;\n        if (sqr * sqr > R * R) {\n            \treturn .5 + .5 * ( sin(iTime + vec3(j/ITERS, j/ITERS, j/ITERS)));\n        \t        }\n        j++;\n        float oldRE = re;\n        re = re*re - im*im + RE;\n        im = oldRE * im * 2.0 + IM;\n    }\n\treturn vec3(1. - j/ITERS, 1. - j/ITERS, 1. - j/ITERS);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cur = 2. * fragCoord.xy / iResolution.y-1.;\n    cur.x -= 0.5;\n    vec3 xyz = texture(iChannel0, vec2(0., 0.)).xyz;\n\tif (iFrame > 0) {\n   \t\tcur = cur * xyz.z;\n    \tcur = cur - xyz.xy;\n    }\n    if (!isPrime(int(cur.x) ^ int(cur.y))) {\n        fragColor = vec4(fractal(cur.x, cur.y), 1.);\n    } else\n    \tfragColor = vec4(0., 0., 0., 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define W  87.\n#define A  65.\n#define S  83.\n#define D  68.\n#define Q  69.\n#define E  81.\n\nbool keyPressed(float key) {\n\tfloat cond = texture(iChannel0, vec2((key + .5) / 256., .25)).x;\n    return cond > .5 ? true : false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 point = fragCoord.xy / iResolution.xy;\n    float z = 2.;\n    if (iFrame > 0) {\n        vec3 vec = texture(iChannel1, vec2(0., 0.)).xyz;\n        point = vec.xy;\n        z = vec.z;\n    }\n    if (keyPressed(Q))\n    \tz = z + .05 * z;\n    if (keyPressed(E))\n    \tz = z - .05 * z;\n    if (keyPressed(A))\n    \tpoint.x = point.x + .05 * z;\n    if (keyPressed(D))\n    \tpoint.x = point.x - .05 * z;\n    if (keyPressed(S))\n    \tpoint.y = point.y + .05 * z;\n    if (keyPressed(W))\n    \tpoint.y = point.y - .05 * z;\n\n    fragColor = vec4(point, z, 0.);\n}","name":"Buffer A","description":"","type":"buffer"}]}