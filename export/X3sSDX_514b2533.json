{"ver":"0.1","info":{"id":"X3sSDX","date":"1710081331","viewed":113,"name":"SpiderWeb2","username":"tholzer","description":"Fork of a Spider Web from OursBleu at 2021-02-06\n\nImprovements are welcome !","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spider","web","spiderweb"],"hasliked":0,"parentid":"wlcfDH","parentname":"Spider web"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// SpiderWeb2.glsl  \n// Fork of a Spider Web from OursBleu at 2021-02-06.\n//  v1 2024a03-10 first version\n//  v2 2024-03-11 rearranged\n//  v3 2024-04-10 using smoothstep for anti-aliasing\n\n#define PI 3.14159265359\n\nfloat indent = 0.04;         // curvature     \nfloat freq = 16.0;           // radial silks\nfloat steps = 11.8;          // circular segments \nfloat maskSize = 0.26;       // circular limitation\n  \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // transform with origin at window center\n  vec2 R = iResolution.xy,\n  uv = (2.*fragCoord - R) / R.y;  // y: -1.0 .. 1.0\n  \n  float ang = freq * atan(uv.y, uv.x);  // polar angle\n  float r = length(uv);                 // radius\n  float col = sin(r) + (r+0.1)*abs(sin(ang*0.5) * (indent+0.02*sin(iTime)));\n  float mask = step(col, PI * maskSize);\n  col = fract(col * steps);             // silk connections\n  col = smoothstep(0.86, 0.90, col) \n      - smoothstep(0.95, 0.99, col);    // silk thickness\n\n  float col2 = smoothstep(0.94, 0.97, cos(ang) - r/20.);   // radial\n    \n  col = max(col, col2) * mask;     // merge color\n    \n  fragColor = vec4(col,col,col, 1.0);   // Output to screen\n}\n","name":"Image","description":"","type":"image"}]}