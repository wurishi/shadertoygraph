{"ver":"0.1","info":{"id":"tslyDs","date":"1585891407","viewed":267,"name":"wave superpositions","username":"matthen","description":"7 waves adding up","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WAVE_SPEED -0.005\n#define WAVE_FRONT_SPEED 0.3\n#define WAVE_FREQUENCY 500.\n#define WAVE_DELAY 0.41\n#define WAVE_WIDTH 0.2\n#define NUM_WAVES 7.\n#define TWO_PI 6.2831853\n\nvec3 gradient(in float t) {\t\n    vec3 a = vec3(.5, .5, .5);\n    vec3 b = vec3(.5, .5, .5);\n    vec3 c = vec3(1., 1., .5);\n    vec3 d = vec3(.8, .9, .3);\n    return a + b * cos(6.28318 * ( c * t + d));\n}\n\nfloat sineWave(in vec2 uv, in vec2 dir, float t) {\n    float wave = 0.;\n    if (abs(uv.x * dir.y - uv.y * dir.x) < WAVE_WIDTH) {\n        float theta = -dot(dir, uv) + WAVE_DELAY;\n        if (theta > WAVE_FRONT_SPEED * t) {\n         \ttheta = 0.;   \n        } else {\n         \ttheta += WAVE_SPEED * t;   \n        }\n        wave = 0.5 - 0.5 * cos(WAVE_FREQUENCY * theta);   \n    }\n    return wave;\n}\n\nfloat elbow(float t) {\n    if (t < 0.) {\n        return 0.;\n    }\n    if (t > 1.) {\n        return t - 0.5;\n    }\n    return .5 * (t * t);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    uv *= 1. - 0.55 * smoothstep(7., 10., iTime);\n    float waveProd = 1.;\n    float waveSum = 0.;\n    for (float i = 0.; i < NUM_WAVES; i += 1.) {\n        vec2 dir = vec2(\n            cos(TWO_PI * i / NUM_WAVES),\n            sin(TWO_PI * i / NUM_WAVES));\n        float wave = sineWave(uv, dir, elbow(iTime - i));\n\t    waveProd *= (1. - wave);   \n        waveSum += wave;\n    }\n    waveSum = 0.5 + 0.5 * tanh(0.3 * waveSum - 0.5);\n\n    vec3 rgb = gradient(waveSum);\n    \n    fragColor = vec4(rgb, 1.);\n}","name":"Image","description":"","type":"image"}]}