{"ver":"0.1","info":{"id":"wd2GW1","date":"1548778678","viewed":1033,"name":"shortest raytraced sphere (90 ch","username":"FabriceNeyret2","description":".","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["raytracing","short","onetweet","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, vec2 u) {\n    vec2 U = iResolution.xy;\n    O += .58* ( sqrt( 1. - dot( U = (u+u-U)/U.y, U ))\n               + U.x + U.y ); }                       /*\n\n\n\n\n\n\n// --- 92 chars\n\n#define mainImage(O,u)                              \\\n    vec2 R = iResolution.xy, U = ( u+u - R ) /R.y;  \\\n    O += .58* ( U.x + U.y + sqrt(1.-dot(U,U)) )    /*\n\n\n\n\n\n\n// --- 142 chars\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( u+u - R ) /R.y;\n    vec3 P = vec3( U, sqrt(1.-dot(U,U)) ), \n         L = normalize(vec3(1));\n\n    O = vec4( dot(P,L) );\n}\n\n/**/","name":"Image","description":"","type":"image"}]}