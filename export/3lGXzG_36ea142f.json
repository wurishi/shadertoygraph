{"ver":"0.1","info":{"id":"3lGXzG","date":"1582926662","viewed":270,"name":"Simple Distortion","username":"creikey","description":"A simple texture distortion shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["distortion","rocks","weird"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time (iTime/4.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x += sin(time);\n    uv.y += cos(time);\n    \n    uv.x += cos(uv.x*10.0 + iTime)*0.3;\n    uv.y += sin(uv.y*5.0 + uv.x*4.0 + iTime*1.3)*0.4;\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}