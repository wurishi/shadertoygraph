{"ver":"0.1","info":{"id":"ssG3Wc","date":"1637322807","viewed":416,"name":"Sacred Timeline Anomaly","username":"bitless","description":"Don't ruin the Sacred Timeline","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["2d","tunnel","loki","sacredtimeline","anomaly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: bitless\n// Title: Sacred Timeline Anomaly\n\n// Thanks to Patricio Gonzalez Vivo & Jen Lowe for \"The Book of Shaders\"\n// and Inigo Quilez (iq) for  https://iquilezles.org/www/index.htm\n// and Fabrice Neyret (FabriceNeyret2) for https://shadertoyunofficial.wordpress.com/\n// and whole Shadertoy community for inspiration.\n\n#define hue(v) ( .6 + .6 * cos(6.3*(v) + vec4(0,23,21,0) ) )\n#define rot(a)   mat2(cos(a + vec4(0,11,33,0)))\n#define S smoothstep\n\nfloat h21 (vec2 p) {\n    p = mod(p,8.);\n    return fract(sin(dot(p,vec2(12.9898,2.233)))*43758.5453123);\n}\n\n\nfloat N( in vec2 p ) \n{\n    vec2 i = floor( p )\n        ,f = fract( p )\n        ,u = f*f*(3.-2.*f);\n    return mix( mix( h21( i + vec2(0,0) ),h21( i + vec2(1,0) ), u.x),mix( h21( i + vec2(0,1) ), h21( i + vec2(1,1) ), u.x), u.y);\n}\n\n\n\nvoid wave (vec2 u, float n, float b, inout vec4 C)\n{\n\n     vec4 ac = hue(sin(u.x*.5-iTime+n+u.y)), //anomaly color\n          tc = vec4(vec3(N(vec2(n,iTime))),.5); //timeline color\n    float r = .8 //timeline circle radius\n        ,t = (sin(iTime*.7)+1.)*.6 //anomaly strengh timer\n        ,w = S(2.*t,0.,abs(u.x-4.)) //anomaly width\n        ,tn = N(vec2(u.x*2.,u.x+n-iTime*.7))*.04//*(1.+w*8.); //timeline noise;\n        ,an = N(vec2(u.x*2.,u.x+n+iTime*4.))*w*t //anomaly noise\n\n    ,s = 5./iResolution.y //smoothness\n    ,l = S(.001+s,.001-s,abs(u.y-r-tn)) //timeline line\n    ,a = S(.5-min(an,.3),.4-min(an,.4)-s,abs(.5 - fract(S(tn+an*.2,tn-an*.2,u.y-r)*5.))); //anomaly lines\n    \n    C = mix(C,ac,b*t*w*length(u.y*2.)*.2); //glowing\n    C = mix(C, ac,a*t); //anomaly\n    C = mix(C, tc,l); //timeline\n}\n\nvoid mainImage( out vec4 C, in vec2 g)\n{\n    vec2 r = iResolution.xy\n        ,u = (g+g-r)/r.y;\n\n\n    float rd = length(u);\n    vec2 uv = u*rot(-rd*.2);\n    float b = N(vec2(.8/rd + iTime, atan(uv.y,uv.x)/3.1415*8.)); \n    b *= N(vec2(b*5.))*rd*.5;\n    C = vec4(vec3(0.,0.3,0.6)*b,1.); //background\n\n    u = u*rot(-iTime*.25);\n    u = vec2(4.+4.*atan(u.y,u.x)/3.14,length(u));\n    for (float n = 0.; n< 10.; n++)\n        wave(u,n,b,C);\n}","name":"Image","description":"","type":"image"}]}