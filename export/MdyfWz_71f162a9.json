{"ver":"0.1","info":{"id":"MdyfWz","date":"1528288875","viewed":1015,"name":"Procedural Noise Fade","username":"k_kondrak","description":"Using one of many implementations of generated noise to create texture fading. Fancier version with burning effect: https://www.shadertoy.com/view/XsVfWz","likes":5,"published":3,"flags":0,"usePreview":1,"tags":["procedural","noise","fade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// -----------------------------------------------------\n//  \"Simple Noise Fade\" by Krzysztof Kondrak @k_kondrak\n// -----------------------------------------------------\n\nfloat r(in vec2 p)\n{\n    return fract(cos(p.x*42.98 + p.y*43.23) * 1127.53);\n}\n\n// using noise functions from: https://www.shadertoy.com/view/XtXXD8\nfloat n(in vec2 p)\n{\n    vec2 fn = floor(p);\n    vec2 sn = smoothstep(vec2(0), vec2(1), fract(p));\n    \n    float h1 = mix(r(fn), r(fn + vec2(1,0)), sn.x);\n    float h2 = mix(r(fn + vec2(0,1)), r(fn + vec2(1)), sn.x);\n    return mix(h1 ,h2, sn.y);\n}\n\nfloat noise(in vec2 p)\n{\n    return n(p/32.) * 0.58 +\n           n(p/16.) * 0.2  +\n           n(p/8.)  * 0.1  +\n           n(p/4.)  * 0.05 +\n           n(p/2.)  * 0.02 +\n           n(p)     * 0.0125;\n}\n\nvoid mainImage(out vec4 c, in vec2 p)\n{\n    vec2 uv = p/iResolution.xx;\n    float t = abs(sin(iTime));\n\n    // fade to black\n    c = mix(texture(iChannel0, uv), vec4(0), smoothstep(t + .1, t - .1, noise(p * .4)));\n}","name":"Image","description":"","type":"image"}]}