{"ver":"0.1","info":{"id":"ws33DS","date":"1569193185","viewed":458,"name":"Color Flashlight - By Dani Frank","username":"ChibiDenDen","description":"Click and drag to point the Flashlight at different locations.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["interactive","colors","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int NUM_SAMPLES = 512;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize mouse point coordinates\n    vec2 mp = (iMouse.xy-.5*iResolution.xy)/iResolution.y;\n    // Normalize mouse click point coordinates\n    vec2 mpo = (iMouse.zw-.5*iResolution.xy)/iResolution.y;\n    // if mouse is released, move click point to current point\n    if (mpo.y < -.5) {\n        mpo = mp;\n    }\n    \n\t// Normalized pixel coordinates for y (from -1 to 1), for x (from -xMin to xMax)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    // Sum intensity by creating multiple circles from mouse click pos to current mouse pos\n    float intensity = 0.;\n    for (int i = 0; i < NUM_SAMPLES; i++) {\n        float fi = float(i);\n        float d = length(uv - mix(mp, mpo, (fi/float(NUM_SAMPLES))));\n\t\td = d * mix(.1, 4., pow((fi/float(NUM_SAMPLES)),2.));\n        intensity += (1./float(NUM_SAMPLES))*step(d, 0.1);\n    }\n\n    // create a unique color for mouse click point and current mouse point\n    vec3 col = vec3(abs(mpo.xy/length(mpo)), \n                    abs(mp.x) + abs(mp.y));\n    // multiply color by flashlight intensity\n    col *= intensity;\n    \n    // Output to screen\n    fragColor = vec4(col ,1.0);\n}","name":"Image","description":"","type":"image"}]}