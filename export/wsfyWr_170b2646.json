{"ver":"0.1","info":{"id":"wsfyWr","date":"1584543223","viewed":482,"name":"Basic Glitch FX","username":"HealliesGames","description":"Just messing around what shaders are capable of.\nI recently started getting into their logic.","likes":5,"published":1,"flags":0,"usePreview":1,"tags":["basic","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Mess around with the parameters to actually understand its structure */\n/*                 I hope it will come in handy!                        */\n/*                                                                      */\n/*                       - HealliesGames -                              */\n\n\n// Random Function: https://www.shadertoy.com/view/Xt23Ry\n// Used to obtain a random number.\nfloat rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1).\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float randOfs;         \t// Determines the offset of each segment.\n    float hOfsSkip = .05;  \t// Step to determine how many segments there should be.\n    float intensity = .02; \t// Shake intensity.\n    \n\n    for(float i = 0.0; i < 1.0; i += hOfsSkip) {  // For each segment:\n        randOfs = rand(iTime + i) * intensity; \t  // Randomly calculate an offset.\n  \n        if(uv.y >= i && uv.y <= i + hOfsSkip)     // If UV coordinates are inside the segment:\n        \tuv.x += randOfs;\t\t\t\t\t  // Apply the offset.\n    }\n\n    vec4 tex = texture(iChannel0, uv);\t\t\t  // Return the texture with altered UV.\n    fragColor = tex;\t\t\t\t\t\t\t  // Show in output the texture.\n}","name":"Image","description":"","type":"image"}]}