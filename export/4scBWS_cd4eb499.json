{"ver":"0.1","info":{"id":"4scBWS","date":"1526462174","viewed":98,"name":"fnorf23","username":"dls","description":"procrastination","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["foobar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define M_PI 3.1415\n\nvec3 colorize(float t, vec3 a, vec3 b, vec3 c, vec3 d) {\n    vec3 col = 2.5 * a * b * (cos(2.0*M_PI*(c*t+d))); \n   \treturn col;\n}\n\n\nvec3 pal01(float t) {\n\tvec3 col = colorize(t,\n                        vec3(0.5, 0.5, 0.5),\n                        vec3(0.5, 0.5, 0.5),\n                        vec3(1.0, 1.0, 0.5),\n                        vec3(0.80, 0.90, 0.30));   \n    return col;\n}\n\nvec3 pal02(float t) {\n \tvec3 col = colorize(t,\n                        vec3(0.5, 0.5, 0.5),\n                        vec3(0.5, 0.5, 0.5),\n                        vec3(1.0, 1.0, 1.0),\n                        vec3(0.30, 0.20, 0.20));\n    return col;\n}\n\nvec3 pal03(float t) {\n    vec3 col = colorize(t,\n                        vec3(0.5, 0.5, 0.5),\n                        vec3(0.5, 0.5, 0.5),\n                        vec3(2.0, 1.0, 0.0),\n                        vec3(0.50, 0.20, 0.25));\n    return col;\n}\n\nvec3 pal04(float t) {\n \tvec3 col = colorize(t, \n                        vec3(0.5, 0.5, 0.5),\n                        vec3(0.5, 0.5, 0.5),\n                        vec3(1.0, 1.0, 1.0),\n                        vec3(0.30, 0.20, 0.20));\n    return col;\n        \n}\n\n\nvec2 rot(vec2 p, float a) {\n    return vec2(p.x * cos(a) - p.y * sin(a),\n                p.x * sin(a) + p.y * cos(a));\n    \n}\n\nvec2 scale(vec2 p, float v) {\n \treturn p;   \n}\n\n\nfloat p01(vec2 xy, float t) {\n    float f = 23.0;\n    return  1.0 * sin(xy.x*f) - 1.0 * cos(xy.y*f);\n}\n\nfloat p02(vec2 xy, float t) {\n   t = 2.5 + 2.0 * (0.5 + 0.5 * sin(t));\n   return p01(rot(xy, t*0.1), t) - p01(rot(xy, -t*0.1), t);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n   \t// Center\n    uv.x -= 0.5; uv.y -= 0.5;\n\n    // Aspect\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv.xy *= 1.25;\n    \n    vec3 col = pal04(p02(scale(rot(uv.xy, iTime*0.5), 1.5 + 0.2*sin(iTime)), iTime));\n        \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}