{"ver":"0.1","info":{"id":"wdKXzV","date":"1574514361","viewed":104,"name":"Planetary FirstShader","username":"PretzelPiece","description":"started with:\nhttps://www.youtube.com/watch?v=u5HAYVHsasc","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["artofcodebeginners"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MlfGWl","filepath":"https://soundcloud.com/crussen/myklebust-bootleg","previewfilepath":"https://soundcloud.com/crussen/myklebust-bootleg","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141\nfloat Circle(vec2 uv, float r, float blur) {\n    float d = length(uv);\n    return smoothstep(r, r-blur, d);\n}\nfloat Hash(in float x) {\n\tfloat hash = fract(sin(x*100.)*5574.2);\n    return fract(hash*hash);\n}\nfloat N21(vec2 p) {\n    float hash =  fract(sin(p.x*4500.+p.y*6573.)*5649.);\n    return fract(hash*hash);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.*fragCoord.xy /iResolution.xy-1.;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    \n    float fft  = texture( iChannel0, vec2(0.3,0.25) ).x;    \n    float t = iTime/10.;\n    float noise = Hash(floor(sin(uv.y+t)*5.));\n    if(noise<0.1) uv.x += noise*40.*fft*0.1;\n\n    \n    float planet = Circle(uv, 1., .005);\n    \n    fft  = texture( iChannel0, vec2(0.1,0.25) ).x; \n    t = iTime/8.+fft/10.;\n    float moon = Circle(\n        uv-vec2(sin(t*2.*PI), 0.)*1.5, \n        0.2+.05*cos(t*2.*PI), \n        .005); \n    if(fract(t-0.25)<0.5) moon = clamp(moon-planet, 0., 1.);\n       \n    fft  = texture( iChannel0, vec2(0.4,0.25) ).x;\n    float c = fft*0.25;\n    c += clamp(planet-moon, 0., 1.)*0.75;\n    c += moon*.5;\n    \n    c += N21(uv*iTime)*0.2*fft;\n\n    float g = c;\n    if(noise<0.1) g += noise*40.*fft*0.1;\n    fragColor = vec4(vec3(c,g,c), 1.0);\n}","name":"Image","description":"","type":"image"}]}