{"ver":"0.1","info":{"id":"NtBSz3","date":"1628169986","viewed":511,"name":"Dance Dance Revolution","username":"cmzw","description":"A glsl port of the \"Dance Dance Revolution\" animation I did in Blender.","likes":15,"published":3,"flags":0,"usePreview":0,"tags":["2d","animation","ddr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n#define RES 24.0\n#define SCALE 1.0\n#define SPEED_FAC 3.0\n\n#define ARROW_MASK 0\n#define ARROW_COL 1\n#define ARROW_HIT_AREA 2\n#define ARROW_HIT_AREA_MASK 3\n\nfloat sdSegment(in vec2 p, in vec2 a, in vec2 b) {\n\tvec2 pa = p - a, ba = b - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n\treturn length(pa - ba * h);\n}\n\nvec3 overlay(in vec3 a, in vec3 b) {\n\treturn vec3((b.r > .5) ? (2. * a.r * b.r) : 1. - 2. * (1. - a.r) * (1. - b.r),\n\t            (b.g > .5) ? (2. * a.g * b.g) : 1. - 2. * (1. - a.g) * (1. - b.g),\n\t            (b.b > .5) ? (2. * a.b * b.b) : 1. - 2. * (1. - a.b) * (1. - b.b));\n}\n\nfloat sstep(in float f) { return 1. - step(0.0001, f); }\n\nmat2 rot2(float a) { return mat2(cos(a), -sin(a), sin(a), cos(a)); }\n\nvec3 arrow(in vec2 p, in float scale, int mode, in vec3 acol) {\n\tp *= scale;\n\tp = vec2(round(p * RES) / RES);\n\tvec2 p1 = vec2(abs(p.x), p.y);\n\n\tfloat af = sdSegment(p1, vec2(.58, .0), vec2(.0, .58));\n\tfloat al = sdSegment(p, vec2(.0, .48), vec2(.0, -.58));\n\n\tfloat a1 = sstep(af - .08);\n\tfloat a2 = sstep(sdSegment(p, vec2(.0, .15), vec2(.0, -.05)) - .15);\n\tfloat a3 = sstep(sdSegment(p, vec2(.0, .13), vec2(.0, -.51)) - .11);\n\tfloat tp = sstep(dot(p1 + vec2(.0, -mod(iTime / .4, 1.6)) + .4, vec2(.22)));\n\tfloat ts = sstep(abs(dot(p1 - vec2(0., -.15), vec2(.21, .26))) - .01);\n\tfloat rect = sstep(length(max(abs(p - vec2(.0, .42)) - vec2(.3, .2), 0.)));\n\n\tfloat arrow =\n\t    clamp(rect * sstep(dot(p1, vec2(.22)) - .11) + a1 - a2, 0., 1.) + clamp(a3 - ts, 0., 1.);\n\tfloat region = min(af, al) - .2;\n\tfloat outline = sstep(abs(region) - .02);\n\n\tvec3 color = overlay(acol, vec3(round((p.y + 1.) * 4.) / 4.) + .5);\n\n\tcolor = mix(vec3(0.), color, sstep(region));\n\n\tfloat mask = sstep(region - .02);\n\n\tswitch ( mode ) {\n\tcase ARROW_MASK:\n\t\treturn vec3(mask);\n\tcase ARROW_COL:\n\t\treturn vec3(outline + color + arrow * tp + arrow * .2);\n\tcase ARROW_HIT_AREA:\n\t\treturn vec3(mask * .3 * mod(iTime / .5, 1.) + .5 - arrow + outline);\n\tcase ARROW_HIT_AREA_MASK:\n\t\treturn vec3(mask - arrow);\n\t}\n}\n\nvec3 hit_arrow(in vec3 col, in vec2 ha) {\n\tvec3 acol = vec3(0.);\n\treturn mix(col, arrow(ha, 2., ARROW_HIT_AREA, acol), arrow(ha, 2., ARROW_HIT_AREA_MASK, acol));\n}\n\nvec3 ca(in vec3 col, in vec3 ac, in vec2 p, in vec2 ha, in mat2 rot, in vec2 ss) {\n\tvec3 left_m = vec3(1. - step(0., abs(p.x - .25 * 3.) - .25)) * step(ss.x, mod(p.y * ss.y, 2.));\n\tvec2 a = mod((p * 2. - .5) + .5, 1.) - .5;\n\tvec2 ap = a * rot;\n\treturn mix(col, arrow(ap, 2., ARROW_COL, ac),\n\t           arrow(ap, 2., ARROW_MASK, ac) * left_m * (sstep(ha.x - a.y)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec3 col;\n\tvec2 p = (2. * fragCoord - iResolution.xy) / iResolution.y;\n\tp *= SCALE;\n\n\t// checker bg\n\tvec2 cp = floor(p * 2.);\n\tcol += mix(.13, .17, mod(cp.x + cp.y, 2.));\n\n\t// hit areas\n\tvec2 ha = (p * 2. - vec2(-1.5, 1.5)) * -rot2(PI / 2.);\n\tcol = hit_arrow(col, ha);\n\tcol = hit_arrow(col, (p * 2. - vec2(-.5, 1.5)) * rot2(PI));\n\tcol = hit_arrow(col, (p * 2. - vec2(.5, 1.5)) * -rot2(PI));\n\tcol = hit_arrow(col, (p * 2. - vec2(1.5, 1.5)) * rot2(PI / 2.));\n\n\t// colors\n\tvec3 blue = vec3(0., .1, .3);\n\tvec3 bluep = vec3(0., .202, .139);\n\tvec3 orange = vec3(.34, .045, .0);\n\tvec3 green = vec3(.0, .159, .03);\n\tvec3 red = vec3(.19, .0, .0);\n\tvec3 redp = vec3(.15, .0, .057);\n\tvec3 purple = vec3(.106, .001, .34);\n\tvec3 yellow = vec3(.202, .174, .0);\n\n\t// arrows\n\tvec2 tr = p - vec2(0., iTime * SPEED_FAC);\n\tcol = ca(col, blue, tr - vec2(-1.5, .4), ha, -rot2(PI / 2.), vec2(1.5, 1.));\n\tcol = ca(col, redp, tr - vec2(-1.5, -.2), ha, -rot2(PI / 2.), vec2(1., 2.));\n\tcol = ca(col, green, tr - vec2(-1, 1.1), ha, rot2(PI), vec2(1.5, 1.));\n\tcol = ca(col, orange, tr - vec2(-1, .1), ha, rot2(PI), vec2(1.5, 1.));\n\tcol = ca(col, purple, tr - vec2(-.5, .1), ha, -rot2(PI), vec2(1., 2.));\n\tcol = ca(col, red, tr - vec2(-.5, -.5), ha, -rot2(PI), vec2(1., 2.));\n\tcol = ca(col, yellow, tr - vec2(0., -.5), ha, rot2(PI / 2.), vec2(1.5, 1.));\n\tcol = ca(col, bluep, tr - vec2(0., .4), ha, rot2(PI / 2.), vec2(1.5, 1.));\n\n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}