{"ver":"0.1","info":{"id":"Mly3WW","date":"1474606130","viewed":231,"name":"Texture Burner","username":"rush_2112","description":"Texture burner with some ashes.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["burn","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv); // Algo\n    if (iFrame < 10) {\n    \tfragColor = texture(iChannel1, uv); // Title screen\n        if (uv.y < 0.075) {\n            fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        }\n    }        \t\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define NOT_BURNT 0.0\n#define fire_c vec4(1.0, 0.2, 0.02, 1.0)\n\nfloat rnd(vec2 inval) {\n\treturn fract(sin(dot(inval.xy ,vec2(19.2425, 87.567))) * 143758.5453);\n}\n\nvoid mainImage( out vec4 fragColor,  vec2 fragCoord ) {\n\t// Core variables\n\tvec2 reso = iResolution.xy;\n\tvec2 pix = fragCoord;\n\tvec2 uv = (pix / reso);\n\tvec4 fc;\n\tfloat tx, tx_max;\n\t//\n\tvec4 init_color;\t\t\n\tvec4 nc;\n\tfloat speed;\t\n\tvec4 self_c;\n\t\n\t// Timing(s)\n\tfloat speed_min = 0.08;\n\tfloat speed_max = 0.34;\n\tspeed = speed_min + (speed_max - speed_min) * (0.135);\t\n    \n\tfloat tx_rgen = 10.0 * (iResolution.y / 250.0);\n\ttx_max = tx_rgen + 5.6;\n    \n    \n\ttx = mod(float(iTime), tx_max);\n\t\n\t\t\t\n\t// Init\n\tif (tx < 0.10) {\t\n\t\t// Draw background\t\t\n\t\tinit_color = texture(iChannel1, uv);\n\t\tinit_color.a = NOT_BURNT; // Un-burnt\n\t\t\n\t\t// Add burn-points\t\t\n\t\tif (uv.y > 0.00 && uv.y < 0.01020) {\n\t\t\tinit_color = vec4(1.0, 0.0, 0.0, 1.0);\n\t\t}\t\t\n\t\t\n\t\tfragColor = init_color;\n\t\treturn;\n\t}\n\n\t// Burn & restore\n\tif (tx >= 0.10) {\n\t\tself_c = texture(iChannel0, uv);\n\t\tfc = self_c;\n\t\t\n\t\t// If not on fire already\n\t\tif (self_c.a == NOT_BURNT) {\n\t\t\t// Fire nearby?\t\n\t\t\tfor (int x = -1; x <= 1; x++) {\n\t\t\t\tfor (int y = -1; y <= 1; y++) {\n\t\t\t\t\tvec2 nPix = pix + vec2(x,y);\n\t\t\t\t\tvec2 n_uv = nPix / iResolution.xy;\n\t\t\t\t\tnc = texture(iChannel0, n_uv);\n\t\t\t\t\tfloat rnd_val = rnd( vec2(nPix) * (tx/444.4) );\t\t\t\t\t\n\t\t\t\t\tif (nc.a > 0.0 && (rnd_val < speed)) {\t\t\t\t\t\n\t\t\t\t\t\tfc = fire_c * 6.0;\t\t\t\n\t\t\t\t\t\tfc.a = 1.0; // Now on fire\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\t\t} else {\n\t\t\t// Is burning, lower heat over time\n\t\t\tfloat fade_fac = 0.85 + (0.10 * (0.75));\n\t\t\tfc *= fade_fac;\n\t\t\tfc.a = clamp(fc.a, 0.001, 1.0);\n\t\t\t// Ashes\n\t\t\tvec4 orig_c = texture(iChannel1, uv);\n\t\t\tfloat orig_avg = (orig_c.r + orig_c.g + orig_c.b) / 3.0;\n\t\t\torig_avg *= 0.018;\t\t\n\t\t\tfloat ashNoise = 0.024 - (0.068 * rnd(pix));\t\t\n\t\t\tfc.r += orig_avg + ashNoise;\n\t\t\tfc.g += orig_avg + ashNoise;\n\t\t\tfc.b += orig_avg + ashNoise;\t\t\n\t\t}\n\t\t// Regeneration\t\t\n\t\tif (tx >= tx_rgen) {\n\t\t\tfloat ybar = (tx - tx_rgen) * 0.20; // 0.0 -> 1.0\n\t\t\t// Re-generate\n\t\t\tif (uv.y <= ybar) {\t\t\t\t\n\t\t\t\t// Glow bar\n\t\t\t\tfloat yd = ybar - uv.y;\n\t\t\t\tfloat str = 1.0 - smoothstep(0.0, 0.006, yd);\n\t\t\t\tfc.r += str * 1.0;\n\t\t\t\tfc.g += str * 1.0;\n\t\t\t\tfc.b += str * 1.0;\n\t\t\t\t// Restore\n\t\t\t\tif (uv.y <= (ybar - 0.006)) {\n\t\t\t\t\tfc = texture(iChannel1, uv);\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\t\t\t\n\t\tfragColor = fc;\n\t\t\n\t}\n\t\n\t\n}\n\n","name":"Buf A","description":"","type":"buffer"}]}