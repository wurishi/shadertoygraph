{"ver":"0.1","info":{"id":"fscGD8","date":"1629637945","viewed":97,"name":"Fork bumpy stri haleyhalcy 501","username":"HaleyHalcyon","description":"a","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"7sc3Wr","parentname":"bumpy stripe spiral ♯"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI (3.14159265358979)\n#define STRIPECOUNT 12.\n#define DENSITY 0.4\n#define HEX(x) vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255) / 255.\n\nvec3 getColor(float r, bool i) {\n    r = fract(r);\n    float mix0 = smoothstep(0.00, 0.001, r);\n    float mix1 = smoothstep(0.25, 0.251, r);\n    float mix2 = smoothstep(0.50, 0.501, r);\n    float mix3 = smoothstep(0.75, 0.751, r);\n    \n    // works better with hex codes this wayway\n    vec3 color0 = HEX(0x009BE8);\n    vec3 color1 = HEX(0xEB0072);\n    vec3 color2 = HEX(0xfff100);\n    vec3 color3 = HEX(0x010a31);\n    if (i) {\n        vec3 temp = color0;\n        color0 = color2;\n        color2 = color1;\n        color1 = temp;\n    }\n    return (\n        color0 * (mix0 - mix1) +\n        color1 * (mix1 - mix2) +\n        color2 * (mix2 - mix3) +\n        color3 * (mix3 - mix0 + 1.)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = fract(iTime / 8.);\n    // Scales coords so that the diagonals are all dist 1 from center\n    float scale = length(iResolution.xy);\n    vec2 uv = (fragCoord / scale\n\t- (iResolution.xy / scale / 2.)) * 2.;\n    \n    // for wormhole or perspective effect\n    float r = log(length(uv)) + (1.0 + 0.02 * sin(time * 2. * PI));\n    \n    \n    // if you want the angle in range [0, 1) and not (-π, π]\n    // divide angle by 2pi and mod1 it\n    float theta = fract(atan(uv.y, uv.x) / (2. * PI));\n    \n    float ofs = mod(floor((-time + r * 0.1 + theta) * STRIPECOUNT), 2.);\n    float rings = r * DENSITY;\n\n    // Time varying pixel color\n    vec3 col =\n    mix(\n    getColor(rings + time, true), \n    getColor(-rings + time, false),\n    ofs\n    );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}