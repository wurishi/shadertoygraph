{"ver":"0.1","info":{"id":"XXlSDs","date":"1710159060","viewed":61,"name":"black_hollow","username":"lck898989","description":"a hollow","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["step","max"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BOARD 100.\n#define blur 0.01\n\nfloat myFunc(vec2 uv) {\n    float board = 100.;\n    //board += 100. * (sin(uv.y * 15. + iTime) * 0.5 + 0.5) * (cos(uv.x * 10. + iTime) * 0.5 + 0.5);\n  // Time varying pixel color\n    \n    float left = board / iResolution.x;\n    float right = (iResolution.x - board) / iResolution.x;\n    \n    float top = (iResolution.y - board) / iResolution.y;\n    float bottom = board / iResolution.y;\n    \n    \n    // (1. - smoothstep(right - blur,right,uv.x))\n    float bottomCenterX = smoothstep(left - blur,left,uv.x) * (1. - smoothstep(right - blur,right,uv.x));\n    //  (1. - smoothstep(top - blur,top,uv.y))\n    float bottomCenterY = smoothstep(bottom - blur,bottom,uv.y) * (1. - smoothstep(top - blur,top,uv.y));\n    \n    float bottomCenter = (1. - bottomCenterX * bottomCenterY);\n    return bottomCenter;\n}\n\nfloat ad(vec2 uv) {\n    //uv.x *= iResolution.x / iResolution.y;\n    float board = 100.;\n    float radius = .5 - board / iResolution.x;\n    vec2 B = smoothstep(0.,-1.5 / iResolution.x,abs(uv - .5) - radius);\n    return 1. - B.x * B.y;\n}\n\nfloat bestFunc(vec2 uv) {\n    float board = 50.;\n    float w0 = 50. / iResolution.x;\n    float w1 = 50. / iResolution.y;\n    \n    float t1 = step(1. - w0,uv.x);\n    float t2 = 1. - step(w0,uv.x);\n    \n    float t3 = step(1. - w1,uv.y);\n    float t4 = 1. - step(w1,uv.y);\n    \n    float t = max(t1,max(t2,max(t3,t4)));\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float c = ad(uv);\n    \n    vec3 col = vec3(uv.x,uv.y,0.);\n    \n    // Output to screen\n    fragColor = vec4(col * c,1.0);\n}","name":"Image","description":"","type":"image"}]}