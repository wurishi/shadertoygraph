{"ver":"0.1","info":{"id":"Ns23Wz","date":"1617243421","viewed":236,"name":"Fake turbulent flow","username":"jarble","description":"A simple fractal formula.\nFull-screen mode recommended.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["fractal","water","turbulence"],"hasliked":0,"parentid":"ss2GzW","parentname":"Seafloor fractal"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col;\n    float t = iTime/2.0/4.5;\n    float x1 = 1.0;\n    vec2 uv = (fragCoord*10.0-iResolution.xy)/iResolution.y/10.0/x1;\n    //uv += vec2(t/2.0,t/3.0)/4.0/x1;\n    for(int c=0;c<3;c++){\n        float scale = 4.5;\n        float scale1 = 1.5;\n        float s1 = scale1*scale;\n        for(int i=0;i<9;i++)\n        {\n            uv += uv.xx-t;\n            uv = fract(uv/s1)*s1;\n            uv=-fract(uv/(2.0-abs((uv.x-uv.y)/(12.0)))-(uv/(2.5+(fract(uv.x+uv.y))))/scale)*scale/scale1+s1;\n            uv /= scale1+col.yx;\n        \tuv=uv.yx+col.yx;\n            uv.x /= -scale1;\n            col = (col.yzx+col)/2.0;\n        }\n     col[c] = fract(((uv.y)+(uv.x))/2.0);\n\t}\n    \n    fragColor = vec4(vec3(col),1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}