{"ver":"0.1","info":{"id":"wstyWX","date":"1601903608","viewed":225,"name":"Dodecahedron chain","username":"gaz","description":"inspired https://twitter.com/Yugemaku/status/1312150562851364864","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["bokeh","dodecahedron"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.)\n#define pmod(p,n) (length(p)*sin(vec2(0,PI*.5)+mod(atan(p.x,p.y),PI*2./n)-PI/n))\n\nmat3 lookat(vec3 eye, vec3 target, vec3 up){\n    vec3 w=normalize(target-eye), u=normalize(cross(w,up));\n    return mat3(u,cross(u,w),w);\n}\n\nvoid rot3(inout vec3 p,vec3 a,float t){\n\ta=normalize(a);\n\tvec3 u=cross(a,p),v=cross(u,a);\n\tp=u*cos(t)+v*sin(t)+a*dot(p,a);   \n}\n\nfloat map(vec3 p){\n    rot3(p,vec3(1,2,3),iTime*.7);\n\trot3(p,vec3(5,2,3),iTime*.5);\n    float d=1e3;\n    for(int i=0;i<6;i++){\n        vec3 w=normalize(vec3(sqrt(5.)*.5+.5,(i&1)*2-1,0)); \n        w=vec3[](w,w.yzx,w.zxy)[i%3];\n        vec3 up=-sign(w.x+w.y+w.z)*sign(w)*w.zxy;\n        vec3 u=normalize(cross(w,up));\n    \tvec3 q=vec3(dot(p,u),dot(p,cross(u,w)),dot(p,w));\n    \trot3(q,vec3(0,0,1),PI/5.);\n    \tq.xy=pmod(q.xy,5.);\n    \tq.x=abs(q.x);\n    \tvec3 q0=q;\n    \tfloat r=1.;\n    \tq0.y-=r;\n    \td=min(d,length(vec2(length(q0.xy)-.15,q0.z))-.05);\n    \tq.xy=vec2(atan(q.x,abs(q.y))*r, length(q.xy)-r);\n\t    q.x-=clamp(q.x,.2,2.);\n\t    d= min(d,length(q)-.05);\n    }\n    return d;\n}\n\nvec3 calcNormal(vec3 p){\n  vec3 n=vec3(0);\n  for(int i=0; i<4; i++){\n    vec3 e=.001*(vec3(9>>i&1, i>>1&1, i&1)*2.-1.);\n    n+=e*map(p+e);\n  }\n  return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p=(2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 bg=vec3(1);\n    vec3 ro0=vec3(0,0,2.5);\n    vec3 ta=vec3(.1,.05,0);\n    vec3 rd0=normalize(vec3(p,2.));\n    vec3 sv=normalize(cross(ta-ro0,vec3(0,1,0)))*.04;\n    float b=6.;  \n\tfor (float j=0.; j<b; j++){\n        vec3 ro = ro0+sv;\n        vec3 rd = lookat(ro,ta,vec3(0,1,0)) * rd0;\n\t\tfloat z = 0., d, i, ITR=70.;\n \t\tfor( i = 0.; i < ITR; i++){\n    \t\tz += d = map(ro + rd * z);\n    \t\tif(d < .001 || z > 30.) break;\n  \t\t}\n    \tif(d < .001){\n\t  \t\tvec3 p = ro + rd * z;\n\t \t\tvec3 nor = calcNormal(p);\n    \t\tvec3 li = normalize(vec3(1));\n        \tvec3 col = vec3(1.,.9,.8)*.7;\n        \tcol *= pow(1.-i/ITR,2.); \n       \t \tcol *= clamp(dot(nor,li),.3,.8);\n        \tcol *= max(.5+.5*nor.y,0.);\n            float rimd = pow(clamp(1.-dot(reflect(-li,nor),-rd),0.,1.),2.5);\n\t\t    float frn = rimd+2.2*(1.0-rimd);\n    \t    col *= frn*.8;\n        \tcol += pow(clamp(dot(reflect(normalize(p-ro),nor),li),0.,1.),30.);\n        \tcol *= exp(-z*z*0.05);\n         \tcol = min(vec3(1),col*2.);\n        \tbg += col;\n    \t}\n        rot3(sv, normalize(ta-ro0), PI*2./b);\n\t}\n    bg = clamp(bg/b,0.,1.);\n    fragColor.xyz = pow(bg,vec3(1.8));\n}","name":"Image","description":"","type":"image"}]}