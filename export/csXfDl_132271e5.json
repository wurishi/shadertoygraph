{"ver":"0.1","info":{"id":"csXfDl","date":"1689335349","viewed":84,"name":"xAI Logo","username":"TheTurk","description":"xAI Logo ([url]https://x.ai/favicon.svg[/url])","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","logo","quad","ai","artificial","intelligence","xai"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float quad(vec2 position, vec2 point1, vec2 point2, vec2 point3, vec2 point4) {\n    vec2 position1 = position - point1;\n    vec2 p1 = point2 - point1; \n    vec2 position2 = position - point2;\n    vec2 p2 = point3 - point2; \n    vec2 position3 = position - point3;\n    vec2 p3 = point4 - point3; \n    vec2 position4 = position - point4;\n    vec2 p4 = point1 - point4;       \n    vec2 d1 = position1 - p1 * clamp(dot(position1, p1) / dot(p1, p1), 0.0, 1.0);\n    vec2 d2 = position2 - p2 * clamp(dot(position2, p2) / dot(p2, p2), 0.0, 1.0);\n    vec2 d3 = position3 - p3 * clamp(dot(position3, p3) / dot(p3, p3), 0.0, 1.0);\n    vec2 d4 = position4 - p4 * clamp(dot(position4, p4) / dot(p4, p4), 0.0, 1.0); \n    float d = sqrt(min(min(min(dot(d1, d1), dot(d2, d2)), dot(d3, d3)), dot(d4, d4)));\n    float s1 = p1.x * position1.y - p1.y * position1.x;\n    float s2 = p2.x * position2.y - p2.y * position2.x;\n    float s3 = p3.x * position3.y - p3.y * position3.x;\n    float s4 = p4.x * position4.y - p4.y * position4.x;\n    float s = max(max(max(s1, s2), s3), s4);\n    return s < 0.0 ? -d : d;\n}\n\nfloat logo(vec2 position) {\n    position.y = -position.y;\n    position -= vec2(-500.0, -500.0);\n    float d1 = quad(position, vec2(661.27, 399.72), vec2(671.27, 792.0), vec2(751.27, 792.0), vec2(761.27, 256.91));\n    float d2 = quad(position, vec2(761.27, 213.32), vec2(639.19, 213.32), vec2(447.64, 486.9), vec2(508.67, 574.07));\n    float d3 = quad(position, vec2(234.0, 792.0), vec2(356.08, 792.0), vec2(417.12, 704.83), vec2(356.08, 617.66));\n    float d4 = quad(position, vec2(234.0, 399.72), vec2(508.67, 792.0), vec2(630.75, 792.0), vec2(356.08, 399.72));\n    return min(min(min(d1, d2), d3), d4);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 position = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    float scale = 0.002;\n    float d = logo(position / scale) * scale;\n    vec3 color = mix(vec3(1.0), vec3(0.0), 1.0 - smoothstep(0.0, 3.0, d * iResolution.y));\n    if (iMouse.z > 0.0) {\n        if (d > 0.02) {\n           float d1 = 1.0 - smoothstep(0.0, 3.0, abs((mod(d + 0.15, 0.3) - 0.15) * iResolution.y) - 2.0);\n           float d2 = 1.0 - smoothstep(0.0, 3.0, abs((mod(d + 0.03, 0.06) - 0.03) * iResolution.y) - 2.0);\n           color -= max(d1 * 0.2, d2 * 0.02);\n        }\n    }\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}