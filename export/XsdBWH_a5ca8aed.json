{"ver":"0.1","info":{"id":"XsdBWH","date":"1524937442","viewed":101,"name":"Circular orbit","username":"Loeizd","description":"Testing cos and sin again, I can easily orbit in 2d, but still having trouble in 3d","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["orbit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define r vec2(16., 10.)\n\nfloat drawDot (vec2 coord, vec2 uv )\n{\n    //AA smoothstep\n    return smoothstep(0.2, .22, distance(coord * r, uv * r));\n    return floor(0.8 + distance(coord * r, uv * r));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\tfloat col = drawDot(vec2(0.5, 0.5), uv);\n    col *= drawDot(vec2(.33 / 1.77 * sin(iTime) + 0.5,.33 * cos(iTime) + 0.5), uv);\n    col *= drawDot(vec2(.17 / 1.77 * sin(iMouse.x/iResolution.x * 15.) + 0.5,.17 * cos(iMouse.x/iResolution.x * 15.) + 0.5), uv);\n    col = clamp(col, 0., 1.);\n      \n    vec2 offset = vec2(0., -0.02);\n   \tfloat shad = drawDot(vec2(0.5, 0.5)+offset, uv);\n    shad *= drawDot(vec2(.33 / 1.77 * sin(iTime) + 0.5 + offset.x,.33 * cos(iTime) + 0.5 + offset.y), uv);\n    shad *= drawDot(vec2(.17 / 1.77 * sin(iMouse.x/iResolution.x * 15.) + 0.5 + offset.x,.17 * cos(iMouse.x/iResolution.x * 15.) + 0.5 + offset.y), uv);\n    shad = shad + 1.- floor(0.1+max( shad, col ));\n    shad = clamp(shad, 0., 1.);\n\n    // Output to screen\n    float bw = (shad * clamp(col + .75, 0., 1.) ) - pow(distance( vec2(.5), uv ), .8)*0.8;\n    \n    vec4 col1 = texture(iChannel0, vec2(iTime*0.002+0.1)) * 0.25;\n    vec4 col2 = texture(iChannel0, vec2(iTime*0.002));\n    \n    fragColor = vec4(mix(col1, col2, bw));\n}","name":"Image","description":"","type":"image"}]}