{"ver":"0.1","info":{"id":"WlycDW","date":"1611064118","viewed":61,"name":"Beer Label #3 Black Field","username":"alkova06","description":"3rd label for my beer.\nImperial Stout - Чорне Поле\n10.4 ABV 50 IBUs OG. 1.097","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","field","picture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Step(float val, float edge)\n{\n    return min(max(val * 2.0 - 1.0 + edge, 0.0) * 10000.0, 1.0);\n}\n\nvec2 Rotate(vec2 val, float angle)\n{\n    float x = cos(angle) * val.x - sin(angle) * val.y;\n    float y = sin(angle) * val.x + cos(angle) * val.y;\n    return vec2(x, y);\n}\nfloat LevelRange(float val, float minInput, float maxInput, float gamma)\n{\n    return pow(min(max(val - minInput, 0.0) / (maxInput - minInput), 1.0), 1.0 / gamma);\n}\n\nfloat PerlinNoise(vec2 uv)\n{\n    vec2 uvNoise = uv * 0.1;\n    float noise = texture(iChannel1, uvNoise).r;    \n    noise += texture(iChannel1, uvNoise * 2.0).r * 0.5;\n    noise += texture(iChannel1, uvNoise * 4.0).r * 0.25;\n    noise += texture(iChannel1, uvNoise * 8.0).r * 0.125;\n    noise += texture(iChannel1, uvNoise * 16.0).r * 0.0675;\n    noise *= 0.5;\n    return noise;\n}\n\nfloat Plot(vec2 st, float pct, float width)\n{\n  return  smoothstep( pct - width, pct, st.y) -\n          smoothstep( pct, pct + width, st.y);\n}\n\nfloat Rand(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat WheatMask(vec2 uv, float scale, float wind, float density)\n{\n    float wheatScale = scale * (floor(uv.y * scale) + 1.0);\n    vec2 wheatUV0 = fract((1.0 - uv) * wheatScale);\n    wheatUV0.xy = vec2(wheatUV0.y, 1.0 - wheatUV0.x);\n    float mask = clamp((Rand(floor(uv * wheatScale)) - density) * 100.0, 0.0, 1.0);\n    \n    mask *= Plot(wheatUV0, mix(1.0, pow(cos((1.0 - wheatUV0.x) * 1.57), 1.5), wind), 0.3);\n     \n    vec2 ceilUV = abs(wheatUV0 * 2.0 - 1.0);\n    float ceilMask = max(ceilUV.x, ceilUV.y);\n    ceilMask = pow(ceilMask, 2.0);\n    ceilMask = 1.0 - max(ceilMask, pow(length(ceilUV * 0.8), 2.0));\n    mask *= ceilMask;\n    mask *= 16.0;\n    mask = clamp(mask, 0.0, 1.0);\n    \n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    float sinTime = sin(iTime);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv1 = fragCoord/iResolution.yy;    \n    float wind = abs(sin(iTime + uv.y * 0.5 + uv.x * 10.0 * (uv.y + 0.4))) * 0.3 + 0.7;\n    \n    float noise = PerlinNoise(uv1 * 0.1);\n    \n    float noise2 = PerlinNoise(uv1 + vec2(0.5, 0.0));    \n    noise2 = pow(noise2, 2.0);\n    noise2 = LevelRange(1.0 - noise2, 0.1, 0.9, 0.1);    \n     \n    float noise3 = PerlinNoise(uv * vec2(0.4, 2.0 * uv.y + 0.5));    \n    noise3 = pow(noise3, 2.0);\n    noise3 = clamp(LevelRange(1.0 - noise3, 0.1, 0.9, 0.2), 0.0, 1.0);\n    \n    float noise4 = PerlinNoise(uv1 * vec2(16.0));    \n    noise4 = pow(noise4, 2.0);\n    noise4 = LevelRange(1.0 - noise4, 0.3, 0.9, 0.1);    \n    \n     \n    float blackFillMask = clamp(iTime - 2.0 + (uv.y - 1.0) * 10.0, 0.0, 1.0);\n    blackFillMask = pow(blackFillMask * noise2 + blackFillMask, 4.0);\n    blackFillMask = clamp(blackFillMask, 0.0, 1.0);\n     \n    vec3 skyColor0 = vec3(0.63, 0.71, 0.53);\n    vec3 skyColor1 = vec3(0.44, 0.6, 0.65);\n    vec3 skyColor2 = vec3(0.37, 0.37, 0.49);\n    vec3 sunColor =  vec3(0.905, 0.82, 0.26);\n    \n    vec3 groundColor = mix(vec3(0.93, 0.675, 0.325), vec3(0.93, 0.675, 0.325) * 0.2, blackFillMask);\n    vec3 fieldColor = mix(vec3(1.0, 0.94, 0.23), vec3(1.0, 0.94, 0.23) * 0.2, blackFillMask);\n    vec3 wheatColor0 = mix(vec3(0.87, 0.63, 0.145), vec3(0.87, 0.63, 0.145) * 0.2, blackFillMask);\n    vec3 wheatColor1 = mix(vec3(0.67, 0.325, 0.18), vec3(0.67, 0.325, 0.18) * 0.2, blackFillMask);\n         \n    float mask = 1.0;\n    vec3 skyColor = mix(skyColor0, skyColor1, (length(uv1.xy - vec2(1.0, 0.4)) - 0.2) * noise + pow(noise2, 2.0) * 0.125);\n    mask = min(max((length(uv1.xy - vec2(1.0, 0.4)) - 0.8) * 5.0, 0.0), 1.0);\n    skyColor = mix(skyColor, skyColor2,  mask * (noise + 0.1) + mask * pow((1.0 - noise2), 16.0) * 0.2);\n    \n    mask = min((length(uv1.xy - vec2(1.0, 0.55)) - 0.1) * mix(8.0, 10.0, abs(sinTime)), 1.0);\n    skyColor = mix(sunColor, skyColor, mask +  (1.0 - mask) * pow(noise2, 16.0) * 0.12);   \n       \n    mask = min(max(uv.y * 2.0 - 0.8 + sin(uv.x * 3.14 + 0.8) * 0.05, 0.0) * 10.0, 1.0);\n    groundColor = mix(fieldColor, groundColor, mask + noise2 * 0.025 + noise3);\n   \n    float wheatNoise = clamp(noise4 + 0.8, 0.0, 1.0);\n    vec2 uvWheat = uv1;\n    for(int i = 0; i < 15; i++)\n    {\n        uvWheat = fract(uvWheat + vec2(0.0425 * float(i), 0.001 *  float(i)));\n        mask = WheatMask(uvWheat, 10.0, wind, 0.85) * (1.0 - uv.y * 2.0) * (noise2 + 0.5);\n        groundColor = mix(groundColor, wheatColor0, mask * wheatNoise);\n    }\n    \n    uvWheat = uv1;\n    for(int i = 0; i < 15; i++)\n    {\n        uvWheat = fract(uvWheat + vec2(0.37 * float(i), 0.01));\n        mask = WheatMask(uvWheat, 10.0, wind, 0.95) * (1.0 - uv.y * 2.0) * (noise2 + 0.5);\n        groundColor = mix(groundColor, wheatColor1, mask * wheatNoise);\n    }\n    \n    uvWheat = fract(uv1 + vec2(0.31, 0.03));\n    mask = WheatMask(uvWheat, 10.0, wind, 0.75) * (1.0 - uv.y * 2.0) * (noise2 + 0.85);\n    groundColor = mix(groundColor, wheatColor1, mask * wheatNoise);\n   \n    float horizon = min(max(uv.y * 2.0 - 1.0 + sin(uv.x * 3.14 - 3.0) * 0.05, 0.0) * 100.0, 1.0);\n    vec3 col = mix(groundColor, skyColor, horizon);    \n    \n    float testColor = blackFillMask;\n    //col = vec3(testColor);\n     \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}