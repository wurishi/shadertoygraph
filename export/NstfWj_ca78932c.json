{"ver":"0.1","info":{"id":"NstfWj","date":"1657219957","viewed":246,"name":"Signal Glitch","username":"Msama","description":"Signal Glitch","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["signalglitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec4 interlace(vec2 co, vec4 col) {\n    if (int(co.y) % 3 == 0) {\n        return col * ((sin(iTime * 4.) * 0.1) + 0.75) + (rand(vec2(iTime, iTime)) * 0.05);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    bool normal = false;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 uvneg = vec2(fragCoord.x/iResolution.x - (rand(vec2(fragCoord.y+iTime*0.0001, 0))*0.06),fragCoord.y/iResolution.y);\n    vec2 uvnegR = vec2(uvneg.x+(rand(vec2(iTime*0.005,iResolution.x))*0.1), uvneg.y);\n    vec2 uvnegG = vec2(uvneg.x+(rand(vec2(iTime*0.005,iResolution.y))*0.1), uvneg.y);\n    vec2 uvnegB = vec2(uvneg.x+(rand(vec2(iTime*0.005,iResolution.z))*0.1), uvneg.y);\n    \n    vec2 uvpos = vec2(fragCoord.x/iResolution.x + (rand(vec2(fragCoord.y+iTime*0.0001, 0))*0.03),fragCoord.y/iResolution.y);\n    vec2 uvposR = vec2(uvpos.x+(rand(vec2(iTime*0.005,iResolution.x))*0.1), uvpos.y);\n    vec2 uvposG = vec2(uvpos.x+(rand(vec2(iTime*0.005,iResolution.y))*0.1), uvpos.y);\n    vec2 uvposB = vec2(uvpos.x+(rand(vec2(iTime*0.005,iResolution.z))*0.1), uvpos.y);\n    \n    vec2 uvNormal = vec2(fragCoord.x/iResolution.x + (rand(vec2(fragCoord.y+iTime*0.001, 0))*0.006),fragCoord.y/iResolution.y);\n    \n    float displace = 0.005;\n    if (rand(vec2(iTime*0.001,iResolution.x)) > 0.8) {\n        displace = rand(vec2(iTime*0.1,iResolution.y))/10.0+(uv.y/5.0);\n    }\n    \n    vec2 uvGlitch = vec2(uv.x+(rand(vec2(iTime*0.005,iResolution.x))*displace),uv.y);\n    float startGlitch = rand(vec2(iTime*.004,iResolution.y));\n    float startGlitch2 = rand(vec2(iTime*.004,iResolution.x));        \n\n    float Pi = 6.28318530718; // multiplié par 2 jui pas bête\n\n    float dir = 16.0;\n    float qual = 10.0;\n    float size = rand(vec2(iTime,fragCoord.y))*20.0;\n   \n    vec2 Radius = size/iResolution.xy;\n    \n    vec4 Color = texture(iChannel0, uv);\n    vec4 col = texture(iChannel0, uv);\n    \n    for( float d=0.0; d<Pi; d+=Pi/dir)\n    {\n\t\tfor(float i=1.0/qual; i<=1.0; i+=1.0/qual)\n        {\n\n            if (uv.y+(float(sin(d))*Radius*i).y < startGlitch+0.02 && uv.y+(float(sin(d))*Radius*i).y > startGlitch-rand(vec2(iTime*.002,iResolution.y))/5.00) Color.r += texture( iChannel0, uvnegR+vec2(cos(d),sin(d))*Radius*i).r;\n            else if (uv.y+(float(sin(d))*Radius*i).y < startGlitch+0.04 && uv.y+(float(sin(d))*Radius*i).y > startGlitch-rand(vec2(iTime*.002,iResolution.x))/5.2) Color.r += texture( iChannel0, uvposR+vec2(cos(d),sin(d))*Radius*i).r;\n\n            \n            if (uv.y+(float(sin(d))*Radius*i).y < startGlitch && uv.y+(float(sin(d))*Radius*i).y > startGlitch-rand(vec2(iTime*.002,iResolution.y))/2.0) Color.g += texture( iChannel0, uvnegG+vec2(cos(d),sin(d))*Radius*i).g;\n            else if (uv.y+(float(sin(d))*Radius*i).y < startGlitch2 && uv.y+(float(sin(d))*Radius*i).y > startGlitch2-rand(vec2(iTime*.002,iResolution.x))/3.0) Color.g += texture( iChannel0, uvposG+vec2(cos(d),sin(d))*Radius*i).g;\n            \n            if (uv.y+(float(sin(d))*Radius*i).y < startGlitch+0.01 && uv.y+(float(sin(d))*Radius*i).y > startGlitch-rand(vec2(iTime*.002,iResolution.y))/4.0) Color.b += texture( iChannel0, uvnegB+vec2(cos(d),sin(d))*Radius*i).b;\n            else if (uv.y+(float(sin(d))*Radius*i).y < startGlitch2+0.03 && uv.y+(float(sin(d))*Radius*i).y > startGlitch2-rand(vec2(iTime*.002,iResolution.x))/5.4) Color.b += texture( iChannel0, uvposB+vec2(cos(d),sin(d))*Radius*i).b;\n            else {\n                Color.g += texture(iChannel0,vec2((uvNormal+vec2(cos(d),sin(d))*Radius*i + displace).x,uvNormal.y + rand(vec2(iTime*0.001,iResolution.y))*0.075)).g;\n                Color.b += texture(iChannel0,uvGlitch).b;\n                Color.r += texture(iChannel0,uvGlitch+vec2(cos(d),sin(d))*Radius*i).r;\n                normal = true;\n            }\n        }\n    }\n    \n    if (normal == true) {\n        Color /= qual * dir - 15.0;\n        fragColor = interlace(fragCoord, Color);\n        return;\n        }\n    Color /= qual * dir - 15.0;\n    fragColor =  interlace(fragCoord, Color);\n    fragColor =  Color;\n\n}","name":"Image","description":"","type":"image"}]}