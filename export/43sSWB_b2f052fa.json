{"ver":"0.1","info":{"id":"43sSWB","date":"1709919911","viewed":331,"name":"Parker Rotation","username":"Altoids","description":"A short and simple demonstration of using a series of skewing matrices to cause rotation, based on a Youtube video I saw this morning.","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["math","rotation","demonstration","skewing","linearalgebra","mattparker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Shader rendition of rotation via skewing,\n// based on the recent Matt Parker video: https://www.youtube.com/watch?v=1LCEiVDHJmc\n\n// A = C = -tan(þ/2)\n// B = sin(þ)\n\nconst float angle = 0.45;\nconst float A = -tan(angle/2.0);\nconst float B = sin(angle);\n\n// Remember that matrices in GLSL are column-major, instead of row-major\nconst mat2 firstMatrix = mat2(1.0,0.0,A,1.0);\nconst mat2 secondMatrix = mat2(1.0,B,0.0,1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // This next stuff constitutes the demonstration loop\n    float temps = mod(iTime,22.0);\n    mat2 matrix;\n    \n    if(temps < 5.0) { // Stage 1, apply the first matrix\n        matrix = mat2(1.0,0.0,A * smoothstep(0.0,4.0,temps),1.0);\n    } else if(temps < 10.0) { // Stage 2, apply the second one\n        matrix = firstMatrix * mat2(1.0,B * smoothstep(5.0,9.0,temps),0.0,1.0);\n    } else { // Stage 3, apply the first one again (basically)\n        matrix = firstMatrix * secondMatrix * mat2(1.0,0.0,A * smoothstep(10.0,15.0,temps),1.0);\n    }\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0,matrix * uv).rgb;\n    \n    // Simple progress bar, to better communicate that this loops indefinitely\n    if(uv.y < 0.045) {\n        if(uv.x < temps / 22.0) {\n            col = vec3(0.8,0.2,0.4);\n        } else {\n            col = vec3(0.2);\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}