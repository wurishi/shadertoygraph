{"ver":"0.1","info":{"id":"Mf3fzX","date":"1733322591","viewed":99,"name":"perlin worley noise","username":"qlyfjsid","description":":)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int p[512] = int[]( 151, 160, 137,  91,  90,  15, 131,  13, 201,  95,\n96,  53, 194, 233,   7, 225,\n                      140,  36, 103,  30,  69, 142,   8,  99,  37,\n240,  21,  10,  23, 190,   6, 148,\n                      247, 120, 234,  75,   0,  26, 197,  62,  94,\n252, 219, 203, 117,  35,  11,  32,\n                       57, 177,  33,  88, 237, 149,  56,  87, 174,\n20, 125, 136, 171, 168,  68, 175,\n                       74, 165,  71, 134, 139,  48,  27, 166,  77,\n146, 158, 231,  83, 111, 229, 122,\n                       60, 211, 133, 230, 220, 105,  92,  41,  55,\n46, 245,  40, 244, 102, 143,  54,\n                       65,  25,  63, 161,   1, 216,  80,  73, 209,\n76, 132, 187, 208,  89,  18, 169,\n                      200, 196, 135, 130, 116, 188, 159,  86, 164,\n100, 109, 198, 173, 186,   3,  64,\n                       52, 217, 226, 250, 124, 123,   5, 202,  38,\n147, 118, 126, 255,  82,  85, 212,\n                      207, 206,  59, 227,  47,  16,  58,  17, 182,\n189,  28,  42, 223, 183, 170, 213,\n                      119, 248, 152,   2,  44, 154, 163,  70, 221,\n153, 101, 155, 167,  43, 172,   9,\n                      129,  22,  39, 253,  19,  98, 108, 110,  79,\n113, 224, 232, 178, 185, 112, 104,\n                      218, 246,  97, 228, 251,  34, 242, 193, 238,\n210, 144,  12, 191, 179, 162, 241,\n                       81,  51, 145, 235, 249,  14, 239, 107,  49,\n192, 214,  31, 181, 199, 106, 157,\n                      184,  84, 204, 176, 115, 121,  50,  45, 127,\n4, 150, 254, 138, 236, 205,  93,\n                      222, 114,  67,  29,  24,  72, 243, 141, 128,\n195,  78,  66, 215,  61, 156, 180,\n                      151, 160, 137,  91,  90,  15, 131,  13, 201,\n95,  96,  53, 194, 233,   7, 225,\n                      140,  36, 103,  30,  69, 142,   8,  99,  37,\n240,  21,  10,  23, 190,   6, 148,\n                      247, 120, 234,  75,   0,  26, 197,  62,  94,\n252, 219, 203, 117,  35,  11,  32,\n                       57, 177,  33,  88, 237, 149,  56,  87, 174,\n20, 125, 136, 171, 168,  68, 175,\n                       74, 165,  71, 134, 139,  48,  27, 166,  77,\n146, 158, 231,  83, 111, 229, 122,\n                       60, 211, 133, 230, 220, 105,  92,  41,  55,\n46, 245,  40, 244, 102, 143,  54,\n                       65,  25,  63, 161,   1, 216,  80,  73, 209,\n76, 132, 187, 208,  89,  18, 169,\n                      200, 196, 135, 130, 116, 188, 159,  86, 164,\n100, 109, 198, 173, 186,   3,  64,\n                       52, 217, 226, 250, 124, 123,   5, 202,  38,\n147, 118, 126, 255,  82,  85, 212,\n                      207, 206,  59, 227,  47,  16,  58,  17, 182,\n189,  28,  42, 223, 183, 170, 213,\n                      119, 248, 152,   2,  44, 154, 163,  70, 221,\n153, 101, 155, 167,  43, 172,   9,\n                      129,  22,  39, 253,  19,  98, 108, 110,  79,\n113, 224, 232, 178, 185, 112, 104,\n                      218, 246,  97, 228, 251,  34, 242, 193, 238,\n210, 144,  12, 191, 179, 162, 241,\n                       81,  51, 145, 235, 249,  14, 239, 107,  49,\n192, 214,  31, 181, 199, 106, 157,\n                      184,  84, 204, 176, 115, 121,  50,  45, 127,\n4, 150, 254, 138, 236, 205,  93,\n                      222, 114,  67,  29,  24,  72, 243, 141, 128,\n195,  78,  66, 215,  61, 156, 180);\n\nvec2 fade(vec2 t)\n{\n    return t * t * t * (t * (t * 6.f - 15.f) + 10.f);\n}\n\nfloat randf(float x)\n{\n    return fract(sin(x) * 43758.5453123f);\n}\n\nfloat grad(vec2 v, int h)\n{\n    switch(h & 3) {\n    case 0:\n        return v.x;\n    case 1:\n        return -v.x;\n    case 2:\n        return v.y;\n    case 3:\n        return -v.y;\n    }\n}\n\nfloat perlin_noise(vec2 uv)\n{\n    ivec2 iuv = ivec2(uv) & 255;\n\n    uv = fract(uv);\n    vec2 fuv = fade(uv);\n\n    float a = mix(grad(uv, p[p[iuv.x] + iuv.y]),\n                grad(uv + vec2(-1.f, 0.f), p[p[iuv.x + 1] + iuv.y]), fuv.x);\n    float b = mix(grad(uv + vec2(0.f, -1.f), p[p[iuv.x] + iuv.y + 1]),\n                grad(uv + vec2(-1.f, -1.f), p[p[iuv.x + 1] + iuv.y + 1]), fuv.x);\n    return mix(a, b, fuv.y);\n}\n\nfloat fbm_perlin(vec2 uv, int octaves, float f)\n{\n    float t = 0.f;\n    float a = 1.f;\n    for (int i = 0; i < octaves; ++i) {\n        a *= .5f;\n        t += a * perlin_noise(f * uv);\n        f *= 2.f;\n    }\n\n    return t;\n}\n\nvec2 rand2f(vec2 st)\n{\n    st = vec2(dot(st, vec2(127.1f, 311.7f)),\n            dot(st, vec2(269.5f, 183.3f)));\n    return fract(sin(st) * 43758.5453123f);\n}\n\nfloat worley_noise(vec2 uv)\n{\n    ivec2 iuv = ivec2(uv) - 1;\n    float t = 1.f;\n    uv -= vec2(iuv);\n\n    for (int i = 0; i < 3; ++i)\n        for (int j = 0; j < 3; ++j) {\n            vec2 r = rand2f(vec2(iuv) + vec2(i, j)) + vec2(i, j);\n            t = min(t, length(uv - r));\n        }\n\n    return 1.f - t;\n}\n\nfloat fbm_worley(vec2 uv, int octaves, float f)\n{\n    float t = 0.f;\n    float a = 1.f;\n    for (int i = 0; i < octaves; ++i) {\n        a *= .5f;\n        t += a * worley_noise(f * uv);\n        f *= 2.f;\n    }\n\n    return t;\n}\n\nfloat remap(float value, float old_min, float old_max, float new_min,\nfloat new_max)\n{\n    return clamp(new_min + (value - old_min) / (old_max - old_min) *\n(new_max - new_min),\n        new_min, new_max);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    int o = 6;\n    float f = .0078125f;\n    float x = fragCoord.x  + iTime * 3.f;\n    float y = fragCoord.y  + iTime * 3.f;\n\n    float p1 = fbm_perlin(vec2(x, y), o, f * 3.f) * .5f + .5f;\n    float w1 = fbm_worley(vec2(x, y), o, f * 1.f);\n    float w2 = fbm_worley(vec2(x, y), o, f * 3.f);\n    float w3 = fbm_worley(vec2(x, y), o, f * 6.f);\n\n    float pw = remap(p1, w1, 1.f, 0.f, 1.f);\n\n    float t = p1;\n    // t = remap(t, -w1, 1.f, 0.f, 1.f);\n    // t = remap(t, -w2, 1.f, 0.f, 1.f);\n    t = remap(t, -w3, 1.f, 0.f, 1.f);\n\n    vec3 col = vec3(0.f);\n    \n    if (uv.x < 1.f && uv.x > .81f)\n        col = vec3(t);\n\n    if (uv.x < .8f && uv.x > .61f)\n        col = vec3(pw);\n\n    if (uv.x < .6f && uv.x > .41f)\n        col = vec3(w3);\n\n    if (uv.x < .4f && uv.x > .21f)\n        col = vec3(w2);\n        \n    if (uv.x < .2f)\n        col = vec3(w1);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}