{"ver":"0.1","info":{"id":"4sccz7","date":"1518144465","viewed":223,"name":"Surfing Checkerboard","username":"NEANDERTHAL","description":"a wavy checkerboard.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wave","checkerboard","sinewave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1) with a square aspect ratio and centered\n    vec2 XY = (fragCoord/iResolution.yy) + vec2(.5);\n    XY.x -= .387;\n    \n    // zoom out a bit\n    XY *= 5.0;\n    \n    // give the screen a wavy effect\n    XY.x += sin(XY.y+iTime*5.0)/3.14159;\n    \n    // this stores the precedence of leach layer. Higher have higher numbers.\n    vec4 order = vec4( 1.0, .75, .5, .25);\n    \n    // grid distortions for each layer. each can be anything. I wish I could store\n    //     them in a single, scalable data structure\n    vec2 XY1 = XY + vec2(cos(iTime), sin(iTime))*(1.0+order.x);\n    vec2 XY2 = XY + vec2(cos(iTime), sin(iTime))*(1.0+order.y);\n    vec2 XY3 = XY + vec2(cos(iTime), sin(iTime))*(1.0+order.z);\n    vec2 XY4 = XY + vec2(cos(iTime), sin(iTime))*(1.0+order.w);\n    \n    // vector storing layers. would like to find a checkerboard-drawing routine that\n    //     doesn't have as much redundancy.\n    vec4 layers = vec4(mod(floor(XY1.x) + floor(XY1.y), 2.0)*order.x,\n                       mod(floor(XY2.x) + floor(XY2.y), 2.0)*order.y,\n                       mod(floor(XY3.x) + floor(XY3.y), 2.0)*order.z,\n                       mod(floor(XY4.x) + floor(XY4.y), 2.0)*order.w);\n    \n    // set the shade to the maximun precendence layer on the pixel\n    float shade = max(max(layers.x, layers.y), max(layers.z, layers.w));\n    \n    // give a little color\n    vec3 shadea = vec3( .5, .25, .0);\n    vec3 shadeb = vec3( .0, .85, .6);\n    vec3 finshade = mix( shadea, shadeb, shade);\n    \n    // Output to screen\n    fragColor = vec4(finshade, 0.0);\n}","name":"Image","description":"","type":"image"}]}