{"ver":"0.1","info":{"id":"XtcBWH","date":"1539288528","viewed":577,"name":"striated weave","username":"xentrac","description":"This combines the weave pattern with the fractal striations to get some kind of semblance of a fabric composed of yarn. It works better at some scales (and some weaves) than others.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["textile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 striation(in vec2 uv, in vec3 color, in vec2 angle) {\n    int u = int(dot(uv, angle));\n    return float((u ^ u << 2) * 15 & 255) / 255. * color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float t = iTime / 10.;\n    vec2 r = vec2(cos(t), sin(t));\n    vec2 uvf = mat2(r, -r.y, r.x) * fragCoord/mod(t/2., 6.);\n\tivec2 uv = ivec2(floor(uvf));\n\n    int mask = 4 + (int(iTime / 2.) & 7) << 2;\n    \n    vec2 fpos = uvf/iResolution.xy;\n    float jitter = 20. * (fpos.x + fpos.y + fract(iTime));\n    jitter = .4 * fract(jitter*jitter*jitter);\n    \n    vec3 bg = vec3(.1, .1, .1),\n    \twarp = striation(vec2(float((uv.x & -2) ^ 112) + mod(uvf.x, 2.) + jitter, uvf.y),\n        \t             vec3(8. * uvf/iResolution.xy, 1.), vec2(.8, .1)),\n        weft = striation(vec2(uvf.x, float((uv.y & -2) ^ 84) + mod(uvf.y, 2.) + jitter),\n                \t     vec3(1,3,2), vec2(.1, .7));\n\n    fragColor = vec4(((uv.x^uv.y) & mask) == 0\n                     ? 1 == ((uv.x ^ uv.x >> 1) & 1) ? warp : bg\n                     : 1 == ((uv.y ^ uv.y >> 1) & 1) ? weft : bg,\n                     1.0);\n}","name":"Image","description":"","type":"image"}]}