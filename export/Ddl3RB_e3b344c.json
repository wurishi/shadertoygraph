{"ver":"0.1","info":{"id":"Ddl3RB","date":"1666522014","viewed":86,"name":"ssh' blackhole","username":"sgsgs","description":"a blackhole","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["astronomy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define step 10.0\n#define screen 600.0\n\n\n\nvec3 gravity(vec3 place,vec3 p,float M){\n    vec3 G = M\n    /(length(place-p)*length(place-p)*length(place-p))\n    *(place-p); //f=GMm/r^2\n    return G;\n}\n\nfloat GetDis(vec3 place, vec3 p){\n    return length(place-p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float M = 5.;\n    vec3 n_disk=vec3(-1.,0.,0.);\n    \n    vec3 place = vec3(400.0,225.0,300.0)+100.*vec3(1.5*sin(iTime),sin(1.31*iTime),0.);\n\n    vec3 p = vec3(fragCoord,0.0);\n    vec3 v = vec3(0.0,0.0,1.0);\n    vec3 col=vec3(0.,0.,0.);\n    int i=0;\n    while(i<MAX_STEPS){\n    \n //       if(dot(p-place,n_disk)*dot(p+v*step-place,n_disk)<0.)\n //       {\n //           col = vec3(1.,1.,1.)*smoothstep(6.*M,0.,length(p-place));\n //       }\n        \n        p = p + v * step;//light move forward\n        \n    vec3 pPosition = p -place;    \n        \n    float r2 = dot(pPosition, pPosition);\n    float r5 = pow(r2, 2.5);\n            vec3 h = cross(pPosition, v);\n        float h2 = dot(h, h);\n    vec3 f  = -1.5 * h2 * pPosition / r5;\n \n\n        \n        //vec3 f = gravity(place,p,M);\n        v = (v + f)/length(v + f); //belt the light\n        \n        \n        float dis = GetDis(place,p);\n        if(dis<M||p.z>screen) break;\n    }\n    vec2 p_2d =vec2(p.x,p.y);\n    \n    if(p.z>screen){\n    vec2 uv = p_2d/iResolution.xy;\n        col = col+texture(iChannel0,uv).xyz;\n    }\n\n    fragColor = vec4(col.xyz,1.0); // Output to screen\n}","name":"Image","description":"","type":"image"}]}