{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float timeEffect=1.0;\n\n//-----------------------------------------------------------------------------\n// Maths utils\n//-----------------------------------------------------------------------------\nmat3 m = mat3( 0.00,  0.80,  0.60,\n              -0.80,  0.36, -0.48,\n              -0.60, -0.48,  0.64 );\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res*2.0-1.0;\n}\n\nfloat fbm( vec3 p )\n{\n    float f;\n    f  = 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p );\n    return f;\n}\n\nfloat triangleWave(float value)\n{\n\tfloat hval = value*0.5;\n\treturn 2.0*abs(2.0*(hval-floor(hval+0.5)))-1.0;\n}\n\n// Mattias' drawing functions ( http://sociart.net/ )\n// Terminals\nvec4 simplex_color(vec2 p) \n{\n\tconst float offset=5.0;\n\tfloat x = p.x*1.5;\n\tfloat y = p.y*1.5;\n\tvec4 col= vec4(\n\t\tfbm(vec3(x,y, offset)),\n\t\tfbm(vec3(x,y, offset*2.0)),\n\t\tfbm(vec3(x,y, offset*3.0)),\n\t\tfbm(vec3(x,y, offset*4.0)));\n\t\n\treturn col-0.2;\n}\n\nfloat ridged( vec3 p )\n{\n   \tfloat f = abs(noise(p));\t\t\t\t  \n\tf += abs(0.5000*noise( p )); p = m*p*2.02;\n\tf += abs(0.2500*noise( p )); p = m*p*2.03;\n\tf += abs(0.1250*noise( p ));\n\treturn f;\n}\n\nvec4 ridged_color(vec2 p)\n{\n\tconst float offset=0.2;\n\tfloat x = p.x*2.5;\n\tfloat y = p.y*2.5;\n\tvec4 col= vec4(\n\t\t1.0-ridged(vec3(x,y, offset)),\n\t\t1.0-ridged(vec3(x,y, offset*2.0)),\n\t\t1.0-ridged(vec3(x,y, offset*3.0)),\n\t\t1.0-ridged(vec3(x,y, offset*4.0)));\n\t\n\treturn col-0.55;\n}\n\nvec4 y(vec2 p)\n{\t\n\tfloat val=triangleWave(p.y);\n\treturn vec4(val, val, val, val);\n}\n\nvec4 x(vec2 p)\n{\t\n\tfloat val=triangleWave(p.x);\n\treturn vec4(val, val, val, val);\n}\n\nvec2 zoom2(vec2 a, vec4 b)\n{\n\treturn vec2(a.x*b.x, a.y*b.y);\n}\n\n// Functions\nvec4 dist(vec2 pos)\n{\n\tfloat d = triangleWave(length(pos));\t\n\treturn vec4(d, d, d, d);\n}\n\nconst float pi=3.14159;\nconst float piDiv=1.0/pi;\nvec4 ang(vec2 pos)\n{\n\tfloat angle = atan(pos.y, pos.x)*piDiv;\n\tfloat val = triangleWave(angle);\n\treturn vec4(val, val, val, val);\n}\n\nvec4 triangleWave(vec4 col)\n{\n\treturn \n\t\tvec4(\n\t\t\ttriangleWave(col.x),\n\t\t\ttriangleWave(col.y),\n\t\t\ttriangleWave(col.z),\n\t\t\ttriangleWave(col.w));\n}\n\n// Warpers\nvec2 swirl(vec2 p)\n{\n\tfloat swirlFactor = 3.0+timeEffect*(sin(iTime+0.22)-1.5);\n\tfloat radius = length(p);\n\tfloat angle = atan(p.y, p.x);\n\tfloat inner = angle-cos(radius*swirlFactor);\n\treturn vec2(radius * cos(inner), radius*sin(inner));\n}\n\nvec2 horseShoe(vec2 p)\n{\n\tfloat radius = length(p);\n\tfloat angle = 2.0*atan(p.y, p.x);\n\treturn vec2(radius * cos(angle), radius*sin(angle));\n}\n\nvec2 wrap(vec2 p)\n{\n\tfloat zoomFactor = 1.5-timeEffect*(sin(iTime+0.36));\n\tfloat repeatFactor = 3.0;\n\tfloat radius = length(p)*zoomFactor;\n\tfloat angle = atan(p.y, p.x)*repeatFactor;\n\treturn vec2(radius * cos(angle), radius*sin(angle));\n}\n\nvec2 array(vec2 p)\n{\n\tconst float zoomOutFactor=1.5;\n\treturn vec2(triangleWave(p.x*zoomOutFactor), triangleWave(p.y*zoomOutFactor));\n}\n\nvec2 pan_rotate_zoom(vec2 pos, vec4 val, vec2 fragCoord)\n{\n\tvec2 pan = vec2(val.w, val.x);\n\tfloat angle= pi*val.y+timeEffect*(sin(iTime+1.2+(fragCoord.x+fragCoord.y)/iResolution.x*2.0)-1.0);\n\tfloat zoom = val.z;\n\t\n\tfloat sinAngle = sin(angle);\n\tfloat cosAngle = cos(angle);\n\t\n\t// Pan\n\tvec2 next = pos+pan;\n\t// Rotate\n\tnext = \n\t\tvec2(\n\t\t\tcosAngle*next.x-sinAngle*next.y,\n\t\t\tsinAngle*next.x+cosAngle*next.y);\n\t// Zoom\n\tnext *= 1.0+zoom;\n\treturn next;\n}\n\n\nvec2 rotate(vec2 pos, vec4 rotation)\t\n{\n\tfloat simpleSum = rotation.x + rotation.y + rotation.z + rotation.w;\n\tfloat angle = pi * simpleSum * 0.25;\n\tfloat sinAngle = sin(angle);\n\tfloat cosAngle = cos(angle);\n\treturn\n\t\tvec2(\n\t\t\tcosAngle * pos.x - sinAngle * pos.y,\n\t\t\tsinAngle * pos.x + cosAngle * pos.y);\n}\n\nvec2 rotate(vec2 pos, float angle)\t\n{\n\tangle = pi * angle;\n\tfloat sinAngle = sin(angle);\n\tfloat cosAngle = cos(angle);\n\treturn\n\t\tvec2(\n\t\t\tcosAngle * pos.x - sinAngle * pos.y,\n\t\t\tsinAngle * pos.x + cosAngle * pos.y);\n}\n\n// FUNCTION\n/* (bump\n  (pan-rotate-zoom\n    (array\n      (zoom2 ang y))\n    (normalize\n      (+ ridged-color dist)))) */\n\nvec4 inner(vec2 pos, vec2 fragCoord)\n{\n\tvec2 p2=rotate(array(pos), sin(iTime*1.2+fragCoord.x*0.03)*0.02);\t\n\tvec4 p3=y(zoom2(p2, ang(p2)));\n\tvec2 prz = pan_rotate_zoom(pos, p3,fragCoord);\n\treturn normalize(triangleWave(ridged_color(prz)+dist(prz)));\n}\n\nvec4 imageFunction(vec2 pos, vec2 fragCoord)\n{\n\tfloat bumpOffset = 0.01;//+abs(sin(iTime*1.5)*0.01);\n\tvec4 originalColor = inner(pos,fragCoord);\n\t\n\tvec2 bumpPos = pos+bumpOffset;\n\tvec4 bumpColor = inner(bumpPos,fragCoord);\n\t\t\n\tfloat dh = 1.0+ (originalColor.w-bumpColor.w)*3.0;\n\treturn originalColor*dh;\n}\n\n// RENDER\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy / iResolution.xy;\n    vec2 pos = -1.0 + 2.0*q;\n    pos.x *= iResolution.x/ iResolution.y;\t\n\tvec4 res = imageFunction(pos,fragCoord);\n\tvec4 color = imageFunction(pos,fragCoord);\n\tcolor = (color+1.0)*0.5;\t\n\tcolor.w=1.0;\n\tfragColor = color;\t\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lssGR7","date":"1366563862","viewed":1386,"name":"Glass Walls 1","username":"mfagerlund","description":"You are NOT an unique and beautiful snowflake \nhttp://sociart.net/image/21470/you-are-not-an-unique-and-beautiful-snowflake","likes":34,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d"],"hasliked":0,"parentid":"","parentname":""}}