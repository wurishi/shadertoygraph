{"ver":"0.1","info":{"id":"wtccDN","date":"1609199875","viewed":88,"name":"intractvcomp","username":"vi_ne_te","description":"interactive complex grapher","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["interactive","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265358979\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y*1.5;\n\n    // Time varying pixel color\n    vec2 m = (iMouse.xy-.5*iResolution.xy)/iResolution.y*1.5;\n    \n    float th1 = 2.*atan(uv.x,uv.y);\n    float th2 =-1.*atan(uv.x-m.x,uv.y-m.y);\n    //float th3 = 2.*atan(uv.x-.5*cos(iTime/2.),uv.y-.5*sin(iTime/2.));\n    float h = (th1+th2)/pi/2.-iTime*0.05;\n    vec3 col = hsltorgb(vec3(h,.5,1.+.0*gauss(sin(h*pi*6.)*5.)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"////math\n\nfloat gauss(float x){\n    return exp(-x*x);\n}\n\nfloat sig(float x){\n    return 1./(1.+exp(-x));\n}\n\n\nvoid rot(inout vec2 p, float a){\n    p = p*cos(a)+ sin(a)*vec2(p.y,-p.x);\n}\n\n\n\n/////colors\n\nfloat huex(float x){\n    x = fract(x);\n    if (x<1./6.){return 6.*x;}\n    if (x>=1./6. && x < 3./6.){return 1.;}\n    if (x>=3./6. && x < 4./6.){return 4.-6.*x;}\n    else {return 0.;}\n}\n\nvec3 htorgb(float h){\n    return vec3(huex(h),huex(h-1./3.),huex(h-2./3.));\n}\n\nvec3 hsltorgb(vec3 hsl){\n    return (htorgb(hsl.x)*hsl.y+(1.-hsl.y))*hsl.z;\n}","name":"Common","description":"","type":"common"}]}