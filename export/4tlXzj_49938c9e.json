{"ver":"0.1","info":{"id":"4tlXzj","date":"1438057998","viewed":256,"name":"Elevator music","username":"zeletochoy","description":"I wonder what it could be.","likes":6,"published":1,"flags":8,"usePreview":0,"tags":["music","elevator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// \"Sound in\" message, thanks to FabriceNeyret2\nfloat message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) {float c=message(fragCoord.xy/8.);if(c>=0.){fragColor=vec4(c);return;}}\n\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\n}","name":"","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define tau 6.2831853071\n#define freqcoef 1.059463094359\n\nfloat total = 0.;\n\nfloat notefreq(float n)\n{\n    return 440. * pow(freqcoef, n);\n}\n\nvec2 ding(float time, float note)\n{\n    float freq = 350.;\n    float y = 0.0;\n    \n    y += 32.*sin(4.*tau*freq*time)*exp(-0.01*freq*time);\n    y += 16.*sin(8.*tau*freq*time)*exp(-0.012*freq*time);\n    y += 8.*sin(16.*tau*freq*time)*exp(-0.014*freq*time);\n    y += 4.*sin(32.*tau*freq*time)*exp(-0.016*freq*time);\n    y += 2.*sin(128.*tau*freq*time)*exp(-0.018*freq*time);\n    y /= 30.;\n    \n    total += exp(-0.01*freq*time);\n\n\treturn vec2(y);\t\n}\n\nvec2 vibra(float t, float note)\n{\n    float f = notefreq(note);\n    \n    float v = 0.5*sin(tau*f*t);\n    v += 0.3*sin(tau*f*exp2(1.)*t);\n    v += 0.2*sin(tau*f*exp2(2.)*t);\n    \n    float env = exp(-pow(2.*t-0.5, 2.));\n    v *= env;\n    total += env;\n    return vec2(v);\n}\n\nvec2 kick(float t, float note)\n{\n    float env = 0.5 * exp(-pow(note*t-0.5, 2.));\n    total += env;\n    return vec2(sin(80.*tau*t)) * env;\n}\n\nfloat noise( float x )\n{\n    return fract(sin(1371.1*x)*43758.5453);\n}\n\nvec2 snare(float t, float note)\n{\n    float env = 0.3 * exp(-pow(note*t-0.5, 2.));\n    total += env;\n    return vec2(sin(noise(t))) * env;\n}\n\n#define PLAY(ins, st, note) if (t > st) v += ins(t - st, note);\n\nvec2 mainSound( in int samp,float time)\n{\n    vec2 v = vec2(0.);\n    total = 0.;\n    \n    float t = mod(time, 32.2);\n\n    // 1st part\n    if (t < 12.8)\n        t = mod(t, 6.4);\n    float base = 5.;\n    PLAY(vibra, 0., base);\n    PLAY(vibra, 0.2, base-3.);\n    PLAY(vibra, 0.4, base-7.);\n    PLAY(vibra, 0.6, base-8.);\n\tt -= 1.6;\n    base = 7.;\n    PLAY(vibra, 0., base);\n    PLAY(vibra, 0.2, base-3.);\n    PLAY(vibra, 0.4, base-7.);\n    PLAY(vibra, 0.6, base-8.);\n    t -= 1.6;\n    PLAY(vibra, 0., base);\n    PLAY(vibra, 0.2, base-3.);\n    PLAY(vibra, 0.4, base-7.);\n    PLAY(vibra, 0.6, base-8.);\n    t -= 1.6;\n    base = 5.;\n    PLAY(vibra, 0., base);\n    PLAY(vibra, 0.2, base-3.);\n    PLAY(vibra, 0.4, base-7.);\n    PLAY(vibra, 0.6, base-8.);\n\tt -= 1.6 + 6.4;\n    \n    //2nd part\n    if (t >= 0.)\n        t = mod(t, 9.7);\n    base = 8.;\n\tPLAY(vibra, 0., base);\n    PLAY(vibra, 0.9, base-2.);\n    PLAY(vibra, 1.1, base-4.);\n    PLAY(vibra, 1.5, base-5.);\n    PLAY(vibra, 2.3, base-7.);\n    t -= 2.9;\n\tbase = 3.;\n    PLAY(vibra, 0., base);\n    PLAY(vibra, 0.9, base-2.);\n    PLAY(vibra, 1.1, base-4.);\n    PLAY(vibra, 1.5, base-5.);\n    PLAY(vibra, 2.3, base-7.);\n    t -= 2.9;\n\tbase = 0.;\n    PLAY(vibra, 0., base);\n    PLAY(vibra, 0.9, base-2.);\n    PLAY(vibra, 1.1, base-4.);\n    PLAY(vibra, 1.5, base-5.);\n    PLAY(vibra, 2.3, base-7.);\n    PLAY(vibra, 2.8, base-5.);\n    \n    // drums\n    t = mod(time, 3.);\n    PLAY(snare, 0.02, 5.);\n    PLAY(snare, 0.52, 10.);\n    PLAY(snare, 0.72, 10.);\n    PLAY(snare, 1.3, 5.);\n    PLAY(snare, 1.7, 5.);\n    PLAY(snare, 2.1, 10.);\n    PLAY(snare, 2.3, 10.);\n    PLAY(kick, 0., 5.);\n    PLAY(kick, 0.5, 10.);\n    PLAY(kick, 0.7, 10.);\n    \n    // ding\n    t = mod(time, 5.);\n    PLAY(ding, 0., 42.);\n    \n    total = max(3., total);\n    return clamp(v/total, -1., 1.);\n}","name":"","description":"","type":"sound"}]}