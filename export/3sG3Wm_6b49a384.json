{"ver":"0.1","info":{"id":"3sG3Wm","date":"1570288253","viewed":364,"name":"Shadertober 05 - Build","username":"BackwardsCap","description":"The pharohs would be jealous","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["build","inktober","shadertober","backwardscaptain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//improved thanks to FabriceNeyret!\nfloat sq(vec2 p, float d)\n{\n    p=smoothstep(3./iResolution.y,.0,abs(p)-d-.1);\n    return  p.x*p.y;\n}\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2  p  = (2.*f-iResolution.xy)/iResolution.y;\n    float pr = fract(iTime/5.)*4.,\n    \t  z  = clamp(4.-(pr),0.0,1.0);\n    vec2  pp = vec2(0.,.4)+p+p*z/2.65-vec2(0.,-.27+z*.92);    \n    \n    float t1 = clamp(1.-(pr),0.0,1.0),\n    \t  t2 = clamp(2.-(pr),0.0,1.0),\n    \t  t3 = clamp(3.-(pr),0.0,1.0),\n    \t  d = .375,\n\t\t  t = sq(pp+vec2(0.,-2.)*t2,d) +\n        \t  sq(pp+vec2(.99,0.)+vec2(0.,-2.)*t1,d)+\n        \t  sq(pp+vec2(-.99,0.)+vec2(0.,-2.)*t3,d),    \n   \t\t  m = 1.479, v = 1.1723,h = 1.3636,\n\t \t  b = sq(pp+vec2(0.,v),d*m)+\n    \t  \t  sq(pp+vec2(h,v),d*m) +\n    \t  \t  sq(pp+vec2(-h,v),d*m);\n    \t  c = vec4(vec3(t+b),1.0);\n}","name":"Image","description":"","type":"image"}]}