{"ver":"0.1","info":{"id":"cssyDH","date":"1686775652","viewed":93,"name":"Fusion","username":"samsim","description":"#003","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["palette","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t)\n{\n\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(1,1,1);\n    vec3 d = vec3(0.263,0.416,0.557);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n\n}\n\nvec3 palette1(float t)\n{\n     vec3 a = vec3(0.5,0.5,0.5);\n     vec3 b = vec3(0.5,0.5,0.5);\n     vec3 c = vec3(1.0, 1.0, 1.0);\n     vec3 d = vec3(0.30, 0.20, 0.20);\n     return a + b * cos(6.28318 * (c * t + d));\n}\n\nconst float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n#define UV_ORIGIN 0.5\n#define ZOOM 1.0\n#define SPEED 10.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n\n    //Prevent the scaling \n    //uv.x *= iResolution.x / iResolution.y;\n    // Shift the origin into (0,0)\n    // Update the corner coordinates in order to have (1,1)\n    //uv = (uv -0.5) * 2.0;\n    \n    //in one step\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy )/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    uv0 *= rotationMatrix( SPEED * iTime ) * ZOOM;\n    //Zoom\n    float zoom = 0.5;\n    float speedi = 0.2;\n    float speedtime = 0.1;\n    //iteration for creating multiple pattern\n    for (float i = 0.0; i < 4.0; i++){\n        //add space fration and obv center it like before\n    uv = fract(uv * 1.5) - 0.5;\n    \n    float d = length(uv) * log2(length(uv0));\n    \n    vec3 col = palette1(length(uv0) + i * (speedi*zoom) + iTime * (speedtime*zoom));\n    \n    d= cos(d * 8. + iTime)/8.;\n    d = abs(d) * zoom;\n    //adding pow increase the contrast\n    d = pow(0.01/d, 1.2);\n    \n    finalColor +=  col * d;\n    zoom+=1.;\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(finalColor,1);\n}","name":"Image","description":"","type":"image"}]}