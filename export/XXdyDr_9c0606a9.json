{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"//Comet implementation taken from here:\n//https://www.shadertoy.com/view/slSGD1\n\n#define Intensity 1000\n#define Scale 1.0\n\nfloat Line(vec2 p, vec2 o, vec2 b, float sw, float ew) {\n    float d = distance(o, b);\n    vec2 n = normalize(b - o);\n    vec2 l = vec2(max(abs(dot(p - o, n.yx * vec2(-1.0, 1.0))), 0.0),\n                 max(abs(dot(p - o, n) - d * 0.5) - d * 0.5, 0.0));\n    return smoothstep(mix(sw, ew, 1. - distance(b, p) / d), 0., l.x + l.y);\n}\n\nvec3 Comet(vec2 p, float cometIndex)\n{\n    float modu = 4.;\n    float endPointY = -.1;\n\n    vec2 randomOffset = vec2(sin(cometIndex * 1.234), cos(cometIndex * 2.345));\n    float randomSpeedMod = mix(0.8, 1.2, fract(sin(cometIndex * 3.456) * 43758.5453));\n    float randomAngle = mix(-0.4, 0.4, fract(sin(cometIndex * 4.567) * 43758.5453));\n\n    vec2 baseCmtVel = vec2(2., 1.4) * .5;\n    vec2 cmtVel = (mod(iTime/modu+modu*.5 + cometIndex * (modu / float(Intensity)), 2.) > 1. ?  baseCmtVel : -baseCmtVel ) * randomSpeedMod;\n    cmtVel = mat2(cos(randomAngle), -sin(randomAngle), sin(randomAngle), cos(randomAngle)) * cmtVel;\n\n\n    vec2 cmtLen = vec2(.25) * cmtVel * Scale;\n    vec2 cmtPt = 1. - mod(iTime * cmtVel +  randomOffset , modu);\n    cmtPt.x += 1.;\n\n    vec2 cmtStartPt, cmtEndPt;\n\n    if(cmtPt.y < endPointY) {\n        cmtEndPt   = cmtPt + cmtLen;\n        if(cmtEndPt.y > endPointY)\n            cmtStartPt = vec2(cmtPt.x + cmtLen.x*((endPointY - cmtPt.y)/cmtLen.y), endPointY);\n        else\n            return vec3(.0);\n    }\n    else {\n        cmtStartPt = cmtPt;\n        cmtEndPt = cmtStartPt+cmtLen;\n    }\n\n\n    float bright = clamp(smoothstep(-.2,.65,distance(cmtStartPt, cmtEndPt)),0.,1.);\n\n    vec2 dlt = vec2(.003) * cmtVel * Scale;\n    \n    float q = clamp( (p.y+.2)*2., 0., 1.);\n\n   return  vec3(bright * .75 * (smoothstep(0.993, 0.999, 1. - length((p - cmtStartPt) / Scale)) +\n             Line(p, cmtStartPt, cmtStartPt+vec2(.06)*cmtVel,  0.009 * Scale, 0.003 * Scale)) +\n             vec3(1., .7, .2) * .33 * Line(p, cmtStartPt,         cmtEndPt,        0.003 * Scale, .0003 * Scale) +\n             vec3(1., .5, .1) * .33 * Line(p, cmtStartPt+dlt,     cmtEndPt+dlt*2., 0.002 * Scale, .0002 * Scale) +\n             vec3(1., .3, .0) * .33 * Line(p, cmtStartPt+dlt+dlt, cmtEndPt+dlt*4., 0.001 * Scale, .0001 * Scale))\n             * (bright) * q;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = vec3(0.0);\n\n    for(int i = 0; i < Intensity; ++i)\n    {\n         col += Comet(uv, float(i));\n    }\n\n    //Remove the loop if you want to use only one comet\n    //col += Comet(uv, float(0.0));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XXdyDr","date":"1734950037","viewed":151,"name":"Comets","username":"ARtronClassic","description":"I slightly improved the comet code, a pure comet without stars and other things.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["comet","comets"],"hasliked":0,"parentid":"","parentname":""}}