{"ver":"0.1","info":{"id":"DdXBWH","date":"1688672555","viewed":119,"name":"Tiny Doom Fire (453 chars)","username":"Hyeve","description":"(453 chars with the non-configurable version)\nMade because someone implemented the effect on the CPU and I was like \"that's a terrible idea\"\nGolfed it for fun afterwards. Play with the variables for lots of different effects!","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["fire","doom","pixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"M\n   o = X i/I.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\nF PIXELS = 200.;\nF WIND = -1.;\nF DECAY = 1.5;\nF NOISE = 1.1;\nF SPEED = 0.2; //SPEED IS FRAMERATE DEPENDENT\nF SPREAD = 70.;\n\nF p(vec2 x) {\n    return x.y < 0. ? 0. : X (round(x) / PIXELS * I.xx / I.xy) + 1. / I.xy).a;\n}\n\nM\n    vec2 x = floor((i / I.x) * PIXELS);\n    F v = p(x);\n\n    \n    v = x.y > 0. ? \n        iFrame % int(1. / SPEED) == 0 ? \n        p(x - vec2(r(x * T) * WIND, r(x - T) * NOISE) ) - r(x + T) * DECAY : \n        v : SPREAD;\n    \n    o = vec4(max(c( max(v / SPREAD, -.1) ),0.), v);\n}\n\n\n\n\n//Non-configurable and resolution-dependent version (for 453 chars)\n/*\n\nF p(vec2 x) {\n    return X (x / 2e2 * I.xx / I.xy) + 1. / I.xy * .5).a;\n}\n\nM\n    vec2 x = floor(i / I.x * 2e2);\n    F v = p(x);\n    v = x.y > 0. ? p(x - vec2(r(x), r(x - T) * 2.) ) - 1. : 8e1;\n    o = vec4(c( max(v / 8e1, -.1) ), v);\n}\n\n*/","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define M void mainImage(out vec4 o, in vec2 i) {\n#define I iResolution\n#define T iTime\n#define F float\n#define X texture(iChannel0,\n#define P pow(x,\n\n\nF r(vec2 p) {\n    return fract(sin(dot(p,vec2(8,3)))*9.);\n}\n\nvec3 c(F x) {\n     return vec3(P .6) -sin(x * 5.-2.5) * .1, P 1.5), P 5.)) * vec3(1.5,1.4,.9);\n}","name":"Common","description":"","type":"common"}]}