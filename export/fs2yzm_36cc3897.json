{"ver":"0.1","info":{"id":"fs2yzm","date":"1643272940","viewed":131,"name":"Smooth Shape Mixing","username":"EmmaChase","description":"Smoothly mixing shape primitives via manipulation of the sdf representation.\nMouse drag controls the yellow box.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["distancefields","primitives"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define plasticity 25.0\n\n\n#define seed 70.4\n#define noisesmooth 800.\n#define nComp 4.\n\n#define PI 3.14159\n\n// Corrects for the distortion caused by mixing the shapes by plasticity\n#define DISTORTION_CORRECTION plasticity*f*(1.0-f)\n\nfloat rand(vec2 c){\n\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p, float freq ){\n\tfloat unit = noisesmooth/freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\nfloat pNoise(vec2 p, int res){\n\tfloat persistance = .5;\n\tfloat n = 0.;\n\tfloat normK = 0.;\n\tfloat f = 4.;\n\tfloat amp = 1.;\n\tint iCount = 0;\n\tfor (int i = 0; i<50; i++){\n\t\tn+=amp*noise(p, f);\n\t\tf*=2.;\n\t\tnormK+=amp;\n\t\tamp*=persistance;\n\t\tif (iCount == res) break;\n\t\tiCount++;\n\t}\n\tfloat nf = n/normK;\n\tfloat rr = nf*nf*nf*nf;\n    return pow(rr, 1./nComp)*2.-1.;\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 CMYKtoRGB (vec3 cmyk) {\n    float c = cmyk.x;\n    float m = cmyk.y;\n    float y = cmyk.z;\n    float k = 0.;//cmyk.w;\n\n    float invK = 1.0 - k;\n    float r = 1.0 - min(1.0, c * invK + k);\n    float g = 1.0 - min(1.0, m * invK + k);\n    float b = 1.0 - min(1.0, y * invK + k);\n    return clamp(vec3(r, g, b), 0.0, 1.0);\n}\n\n\n\n\n\n\nvec2 rotate(vec2 p, float t) {\n\tfloat s = sin(t);\n\tfloat c = cos(t);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * p;\n}\n\nfloat sdfCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat sdfSquare( vec2 p, vec2 b ) {\n  vec2 q = abs(p) - b;\n  return length(max(q, 0.0)) + min(max(q.x ,q.y), 0.0) - 5.;\n}\n\n\nvec2 trans(vec2 x) {\n    return 200.*x/iResolution.x;\n}\n\nfloat mixShapeFactor(float x, float y, float attractiveness) {\n    float m = .5+clamp(((x-y)/attractiveness), -1., 1.)/2.;\n    return smoothstep(0., 1., m);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pc = trans(fragCoord);\n    float aspect = iResolution.y / iResolution.x;\n\n    vec3 col;\n    float d, f;\n    \n    float sTime = seed + iTime;\n    \n    bool isMouse = sign(iMouse.z) == 1.;\n    float x = sdfSquare(rotate(pc - (isMouse ? trans(iMouse.xy) : vec2(\n        100.+pNoise(vec2(sTime* 100., 500.), 1)*100.,\n        (100.+pNoise(vec2(sTime * 100. + 200., 0.), 1)*100.)*aspect\n    )), sTime) , vec2(15., 15.));\n    vec3 cmix = vec3(0.0, 0.0, 1.0);\n    \n    float y = sdfSquare(pc - vec2(\n        100.+pNoise(vec2(sTime* 100. + 400., 500.), 1)*100.,\n        (100.+pNoise(vec2(sTime * 100. + 600., 0.), 1)*100.)*aspect\n    ), vec2(20., 20.));\n    f = mixShapeFactor(x, y, plasticity);\n    d = mix(x, y, f) - DISTORTION_CORRECTION;\n    cmix = mix(cmix, vec3(1.0, 0.0, 0.0), f);\n    \n    float y2 = sdfCircle(pc - vec2(\n        100.+pNoise(vec2(sTime* 100. + 800., 1000.), 1)*100.,\n        (100.+pNoise(vec2(sTime * 100. + 1000., 1500.), 1)*100.)*aspect\n    ), 20.);\n    f = mixShapeFactor(d, y2, plasticity);\n    d = mix(d, y2, f) - DISTORTION_CORRECTION;\n    cmix = mix(cmix, vec3(0.0, 1.0, 0.0), f);\n    \n    col = hsv2rgb(vec3((d/25.), 0.2, 1.0));\n    col = mix(CMYKtoRGB(cmix), col, clamp(d, 0.0, 0.5));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}