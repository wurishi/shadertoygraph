{"ver":"0.1","info":{"id":"MXyXWK","date":"1720531504","viewed":53,"name":"interactive dft frequency filter","username":"sedenion","description":"Interactive Fourier transform picture frequency filter.\nHere you can draw and experiment with your own filter.\n\nAdapted from https://www.shadertoy.com/view/4s3GDs by FabriceNeyret2","likes":3,"published":1,"flags":48,"usePreview":0,"tags":["interactive","filter","frequency","fourier","dft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    - You can draw with your mouse on the left picture to create your custom filter\n    - You can change the brush size, frequency boost and picture size in the \"Common\" tab\n    - Press space to reset\n    - You can change the picture within the \"Buffer A\" tab on iChannel0\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float middle = fragCoord.y-iResolution.y/2.+SIZE/2.;\n    \n    float col = 0.;\n    col += 0.1*log(length(texture(iChannel0, vec2(fragCoord.x,middle)/iResolution.xy).rgba));\n    \n    if(fragCoord.x>SIZE){\n        col = 0.;\n        col += texture(iChannel1, vec2(fragCoord.x-SIZE,middle)/iResolution.xy).r;\n    }\n    \n\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(fragCoord.x > SIZE || fragCoord.y > SIZE) return;\n        \n    vec3 tex =  texture(iChannel0, fragCoord/iResolution.xy*iResolution.y/SIZE).rgb;\n     \n    fragColor=vec4((tex.x+tex.y+tex.z)/3.,0,0, 1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Fourier transform\n// adapted from https://www.shadertoy.com/view/4s3GDs by FabriceNeyret2\n\nvec2 cmul (vec2 a,float b) { return mat2(a,-a.y,a.x) * vec2(cos(b),sin(b)); }  \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor=vec4(0); \n    \n    if(fragCoord.x > SIZE || fragCoord.y > SIZE) return;\n        \n    for(float n = 0.; n < SIZE; n++)  {\n        vec2 xn = texture(iChannel0, vec2(n+.5, fragCoord.y) / iResolution.xy).xy,\n             yn = texture(iChannel1, vec2(fragCoord.x, n+.5) / iResolution.xy).zw,\n             a = - 6.2831853 * (fragCoord-.5 -SIZE/2.) * n/SIZE;\n        \n        fragColor.zw += cmul(xn, a.x);\n        fragColor.xy += cmul(yn, a.y);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// applying filter\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel0, uv).rgba;\n\n    vec3 mPos = iMouse.xyz;\n    \n    vec2 KeySpace = texelFetch(iChannel2, ivec2(32, 0), 0).xy;\n\n    \n    \n    \n    if(iTime>0.1)\n        col = texture(iChannel1, uv).rgba;\n    \n    if(KeySpace.x >0.1)\n        col = texture(iChannel0, uv).rgba;\n    \n    float middle = iResolution.y/2.-SIZE/2.;\n    \n    float r = length(fragCoord.xy-mPos.xy+vec2(0,middle));\n    \n    if(mPos.z > 0.5 && r<TICKNESS){\n        col *= pow(TICKNESS/r, BOOST);\n    }\n    \n    \n    fragColor = col;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"// inverse Fourier transform \n// adapted from https://www.shadertoy.com/view/4s3GDs by FabriceNeyret2\n\nvec2 cmul (vec2 a,float b) { return mat2(a,-a.y,a.x)*vec2(cos(b), sin(b)); } \n#define W(uv)   mod(uv+SIZE/2.,SIZE)                    // wrap [-1/2,1/2] to [0,1]\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0); \n    \n    if(fragCoord.x > SIZE || fragCoord.y > SIZE) return;\n\n    for(float n = 0.; n < SIZE; n++)  {\n        float m = W(n);       // W to warp 0,0 to mid-window.\n        vec2 xn = texture(iChannel0, vec2(m+.5, fragCoord.y) / iResolution.xy).xy,\n             yn = texture(iChannel1, vec2(fragCoord.x, m+.5) / iResolution.xy).zw,\n             a =  6.2831853 *  (fragCoord-.5) * n/SIZE;\n        \n        fragColor.zw += cmul(xn, a.x);\n        fragColor.xy += cmul(yn, a.y);\n    }\n    fragColor /= SIZE;\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define TICKNESS 25.\n#define BOOST -0.5\n\n#define SIZE float(iResolution.x/2.)","name":"Common","description":"","type":"common"}]}