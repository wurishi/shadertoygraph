{"ver":"0.1","info":{"id":"MtcXWM","date":"1479857719","viewed":94,"name":"2D Time","username":"tabman","description":"Press SPACE to switch between time and timeless domains.","likes":0,"published":1,"flags":16,"usePreview":0,"tags":["2d","time","perception"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define P 3.14\n#define T iTime //time flow rule\n\nvoid mainImage( out vec4 o, in vec2 u )\n{\n\tvec2 iR = iResolution.xy,         //fragment coordinates resolution\n         tR = vec2(5.,5.),            //time coordinates resolution\n         t = mod(vec2(T,T/tR.x),tR);  //apply resolution boundaries\n    u=u/iR-.5; //noramlize:[0,iR]->[0,1]->[-.5,.5]\n    t=t/tR-.5; //noramlize:[0,tR]->[0,1]->[-.5,.5]\n    \n    //SPACE key toggle state\n    bool k = texture(iChannel0,vec2(32.5/256.,5./6.)).x>.5;\n    \n    //coordinate domain instance:t-time domain, u-timeless domain\n    vec2 i = k?t:u;\n    \n    //apply transformation(rotation)\n    i*=mat2(cos(P/4.),-sin(P/4.),sin(P/4.),cos(P/4.));\n    \n    o = vec4(i,0.,1.);\n}","name":"Image","description":"","type":"image"}]}