{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define bpm 30.\n#define notes 16.\n#define tick 60./bpm\n#define tickcount ti*tick\n#define note tick/notes\n#define notecount ti*notes\n#define comp notecount/notes\n\n\n#define C  32.703\n#define CS 34.648\n#define D  36.708\n#define DS 38.891\n#define E  41.203\n#define F  43.654\n#define FS 46.249\n#define G  48.999\n#define GS 51.913\n#define A  55.0\n#define AS 58.270\n#define B  61.735\n\nfloat ti=0.;\n\nfloat noise( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\n\nfloat kick(float t, float b, float f, float o) {\n\tt=mod(t-o*tick/notes,b/60.);\n    return (sin(.3+t*f))*exp(-5.0*t);\n}\n\nfloat snare(float t, float b, float f, float o) {\n\tt=mod(t-o*tick/notes,b/60.);\n    return (sin(.1+t*f*10.)+noise(t*f))*exp(-15.0*t);\n}\n\nfloat hithat(float t, float b, float f, float o) {\n\tt=mod(t-o*tick/notes,b/60.);\n    return noise(t*f)*exp(-25.0*t);\n}\n\nfloat bass(float t, float b, float f, float o) {\n\tt=mod(t-o*tick/notes,b/60.);\n    return exp(-.3*max(0.,1.-t))*clamp((.5-mod(t*f,1.)),-.1,.1)*exp(-50.0*t*t)*5.;\n}\n\nfloat chords(float t, float b, float f, float o) {\n\tt+=noise(t*.21358)*.0002;\n    t=mod(t-o*tick/notes,b/60.);\n    float c=min(1.,sqrt(abs(t))*.5)*clamp(sin(t*f*50.+sin(t*f*50.)*10.),-.4,.4)*exp(-35.0*t*t);\n    t-=.5;\n\tc+=min(1.,sqrt(abs(t))*.5)*clamp(sin(t*f*50.+sin(t*f*50.)*10.),-.4,.4)*exp(-35.0*t*t)*.5;\n    return c*.25;\n\n}\n\nfloat lead(float t, float b, float f, float o) {\n    t=mod(t-o*tick/notes,b/60.);\n\tt*=3.2;\n\tt+=noise(ti*.25)*.002;\n    float c=(1.-mod(t*f*10.,2.))+(1.-mod(t*f*5.,2.));\n\tc=smoothstep(-.5,.5,clamp(c,-.5,.5));\n    c*=max(0.5,sin(t*note*128.));\n    return c*.2;\n\n}\n\n\n\nfloat bassnotes1(float n) {\n\n\tfloat s=0.;\n    s=C*step(0.,n)*(1.-step(2.,n));\n    s+=C*step(6.,n)*(1.-step(8.,n))*2.;\n    s+=D*step(8.,n)*(1.-step(10.,n))*2.;\n    s+=D*step(12.,n)*(1.-step(14.,n));\n    s+=D*step(14.,n)*(1.-step(15.,n))*2.;\n    return s;\n\n}\n\nfloat leadnotes(float n) {\n\n\tfloat s=0.;\n    s=D*step(0.,n)*(1.-step(2.,n));\n    s+=E*step(2.,n)*(1.-step(4.,n));\n    s+=A*.5*step(4.,n)*(1.-step(5.,n));\n    s+=G*.5*step(5.,n)*(1.-step(6.,n));\n    s+=C*step(6.,n)*(1.-step(8.,n));\n    s+=E*.5*step(8.,n)*(1.-step(16.,n));\n    s+=D*step(16.,n)*(1.-step(18.,n));\n    s+=E*step(18.,n)*(1.-step(20.,n));\n    s+=A*.5*step(20.,n)*(1.-step(21.,n));\n    s+=G*.5*step(21.,n)*(1.-step(22.,n));\n    s+=F*.5*step(22.,n)*(1.-step(26.,n));\n    s+=C*.5*step(26.,n);\n    \n    \n    return s;\n\n}\n\n\n\n\nvec2 mainSound( in int samp,float time)\n{\n    \n    \n    float basss;\n\t//time+=20.;\n    ti=time;\n    float s=0.;\n\tfloat ch=0.;\n    if (comp<21.) {\n    \tch=chords(time,bpm,D,0.);\n\t\tch+=chords(time,bpm,F,1.);\n\t\tch+=chords(time,bpm,A,2.);\n    } else if (comp>25.) {\n        ch=chords(time,bpm,F,0.);\n\t\tch+=chords(time,bpm,A,1.);\n\t\tch+=chords(time,bpm,C,2.);\n\t\tch+=chords(time,bpm,mod(comp,4.)>2.?E:D,3.);\n\t\tch*=min(1.,(comp-25.)*.1);\n    } else ch=0.;\n    if (comp>5.) kick(time,bpm,100.,0.)*2.;\n\tif (comp>7.) s+=kick(time,bpm*4.,300.,2.);\n\tif (comp>2.) s+=snare(time,bpm*2.,50.,4.)*.3;\n\tif (comp>9.) s+=snare(time,bpm*8.,80.,2.)*.2;\n\tif (comp>11.) s+=snare(time,bpm*8.,50.,6.)*.2;\n\tif (comp>0.) s+=hithat(time,bpm,50.,0.)*.15;\n\tif (comp>2.) s+=hithat(time,bpm,10.,2.)*.15;\n\tif (comp>21.) s+=hithat(time,bpm*.5,100.,1.)*.1;\n\tfloat ll=lead(time,bpm,leadnotes(comp-23.),0.)*.5\n        \t\t\t+lead(time,bpm,leadnotes(comp-24.),0.)*.3;\n\t\n    if (comp>23.) s+=ll;\n    if (comp>30.) time+=noise(ti*.15)*.002;\n    if (comp>21.) basss=bass(time,bpm*.5,bassnotes1(mod(notecount,16.)),0.)*.7; \n    \t\t\telse basss=bass(time,bpm*.5,D,0.)*min(1.,time*time*.01)*.5;\n    if (comp>4.) s+=basss;\n    if (comp>7.) s+=ch;\n    if (abs(floor(comp)-19.)<2.) s=basss*.5+sin(ti*ti*ti*1000.)*.05;\n    if (comp>52.) s=(ll+basss+sin(sin(ti*ti*.1+1.5+noise(ti*.5)*.001)*1000.)*.1)*exp(-.4*(comp-52.));\n   \n    s*=min(1.,ti*.3);\n    return vec2(sin(tickcount*4.),cos(tickcount*4.))*s;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy-.5;\n\tuv*=min(1.5,iTime);\n    if (iTime>21.3) uv*=1.15;\n    if (iTime>52.) uv/=iTime-52.;\n    vec2 ouv=uv;\n    uv.x*=iResolution.x/iResolution.y;\n    float tuvx=floor(iTime*50.)/50.+floor(uv.x/.005)*.005/15.;\n\tuv.x=abs(.0025-mod(uv.x,.005));\n\tfloat s=mainSound(int(iTime),tuvx).x;\n\tfloat vol=length(mainSound(int(iTime),iTime));\n    float c=pow(clamp(1.-length(uv)+abs(s)*.75,0.,1.),50.)*clamp(60.-iTime,0.,1.);\n\tvec3 col=vec3(c*2.,c*c,c*c*c*.7)+s*2.;\n    col=max(col,vec3(noise(floor(length(ouv*vec2(1.,1.+sin(iTime)*.5))*200.+iTime*20.))*(.4+vol*3.)));\n\tcol+=pow(max(0.,1.-length(ouv)),10.)*(.5+vol*3.);\n\tvec2 xy=ouv+vec2(sin(iTime*3.1416*2.),cos(iTime*3.1416))*.02;\n    col+=pow(length(abs(1.-mod(xy*100.,2.))),5.)*vec3(.5,.8,1.)*max(0.,.2-vol);;\n\tfloat noi=noise(uv.x*323.235+(uv.y+iTime*3.)*334.215)-.5;\n    col+=noi*.4;\n    col*=clamp(abs(1.-length(ouv)*1.7),.1,1.);\n    col=pow(col,vec3(1.3))*vec3(1.2,1.,1.);\n\txy=mod(ouv*50.,1.);\n    float volind=1.-length(max(vec2(0.),abs(xy)-.1));\n\tif (abs(ouv.x)>.7 && abs(ouv.y)>.5-vol*1.5) col+=volind*vec3(1.,.8,.3);\n\tif (abs(ouv.y)>.68 && abs(ouv.x)>.5-vol*1.5) col+=volind*vec3(1.,.8,.3);\n    if (iTime>18.3 && iTime<21.3) col=vec3(noi)*(21.3-iTime);\n    col=clamp(col,vec3(0.),vec3(1.));\n    fragColor = vec4(col,1.)*clamp(61.-iTime,0.,1.)*min(1.,iTime*.3);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"#define bpm 30.\n#define notes 16.\n#define tick 60./bpm\n#define tickcount ti*tick\n#define note tick/notes\n#define notecount ti*notes\n#define comp notecount/notes\n\n\n#define C  32.703\n#define CS 34.648\n#define D  36.708\n#define DS 38.891\n#define E  41.203\n#define F  43.654\n#define FS 46.249\n#define G  48.999\n#define GS 51.913\n#define A  55.0\n#define AS 58.270\n#define B  61.735\n\nfloat ti=0.;\n\nfloat noise( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\n\nfloat kick(float t, float b, float f, float o) {\n\tt=mod(t-o*tick/notes,b/60.);\n    return (sin(.3+t*f))*exp(-5.0*t);\n}\n\nfloat snare(float t, float b, float f, float o) {\n\tt=mod(t-o*tick/notes,b/60.);\n    return (sin(.1+t*f*10.)+noise(t*f))*exp(-15.0*t);\n}\n\nfloat hithat(float t, float b, float f, float o) {\n\tt=mod(t-o*tick/notes,b/60.);\n    return noise(t*f)*exp(-25.0*t);\n}\n\nfloat bass(float t, float b, float f, float o) {\n\tt=mod(t-o*tick/notes,b/60.);\n    return exp(-.3*max(0.,1.-t))*clamp((.5-mod(t*f,1.)),-.1,.1)*exp(-50.0*t*t)*5.;\n}\n\nfloat chords(float t, float b, float f, float o) {\n\tt+=noise(t*.21358)*.0002;\n    t=mod(t-o*tick/notes,b/60.);\n    float c=min(1.,sqrt(t)*.5)*clamp(sin(t*f*50.+sin(t*f*50.)*10.),-.4,.4)*exp(-35.0*t*t);\n    t-=.5;\n\tc+=min(1.,sqrt(t)*.5)*clamp(sin(t*f*50.+sin(t*f*50.)*10.),-.4,.4)*exp(-35.0*t*t)*.5;\n    return c*.25;\n\n}\n\nfloat lead(float t, float b, float f, float o) {\n    t=mod(t-o*tick/notes,b/60.);\n\tt*=3.2;\n\tt+=noise(ti*.25)*.002;\n    float c=(1.-mod(t*f*10.,2.))+(1.-mod(t*f*5.,2.));\n\tc=smoothstep(-.5,.5,clamp(c,-.5,.5));\n    c*=max(0.5,sin(t*note*128.));\n    return c*.2;\n\n}\n\n\n\nfloat bassnotes1(float n) {\n\n\tfloat s=0.;\n    s=C*step(0.,n)*(1.-step(2.,n));\n    s+=C*step(6.,n)*(1.-step(8.,n))*2.;\n    s+=D*step(8.,n)*(1.-step(10.,n))*2.;\n    s+=D*step(12.,n)*(1.-step(14.,n));\n    s+=D*step(14.,n)*(1.-step(15.,n))*2.;\n    return s;\n\n}\n\nfloat leadnotes(float n) {\n\n\tfloat s=0.;\n    s=D*step(0.,n)*(1.-step(2.,n));\n    s+=E*step(2.,n)*(1.-step(4.,n));\n    s+=A*.5*step(4.,n)*(1.-step(5.,n));\n    s+=G*.5*step(5.,n)*(1.-step(6.,n));\n    s+=C*step(6.,n)*(1.-step(8.,n));\n    s+=E*.5*step(8.,n)*(1.-step(16.,n));\n    s+=D*step(16.,n)*(1.-step(18.,n));\n    s+=E*step(18.,n)*(1.-step(20.,n));\n    s+=A*.5*step(20.,n)*(1.-step(21.,n));\n    s+=G*.5*step(21.,n)*(1.-step(22.,n));\n    s+=F*.5*step(22.,n)*(1.-step(26.,n));\n    s+=C*.5*step(26.,n);\n    \n    \n    return s;\n\n}\n\n\n\n\nvec2 mainSound( in int samp,float time)\n{\n    \n    \n    float basss;\n\t//time+=20.;\n    ti=time;\n    float s=0.;\n\tfloat ch=0.;\n    if (comp<21.) {\n    \tch=chords(time,bpm,D,0.);\n\t\tch+=chords(time,bpm,F,1.);\n\t\tch+=chords(time,bpm,A,2.);\n    } else if (comp>25.) {\n        ch=chords(time,bpm,F,0.);\n\t\tch+=chords(time,bpm,A,1.);\n\t\tch+=chords(time,bpm,C,2.);\n\t\tch+=chords(time,bpm,mod(comp,4.)>2.?E:D,3.);\n\t\tch*=min(1.,(comp-25.)*.1);\n    } else ch=0.;\n    if (comp>5.) kick(time,bpm,100.,0.)*2.;\n\tif (comp>7.) s+=kick(time,bpm*4.,300.,2.);\n\tif (comp>2.) s+=snare(time,bpm*2.,50.,4.)*.3;\n\tif (comp>9.) s+=snare(time,bpm*8.,80.,2.)*.2;\n\tif (comp>11.) s+=snare(time,bpm*8.,50.,6.)*.2;\n\tif (comp>0.) s+=hithat(time,bpm,50.,0.)*.15;\n\tif (comp>2.) s+=hithat(time,bpm,10.,2.)*.15;\n\tif (comp>21.) s+=hithat(time,bpm*.5,100.,1.)*.1;\n\tfloat ll=lead(time,bpm,leadnotes(comp-23.),0.)*.5\n        \t\t\t+lead(time,bpm,leadnotes(comp-24.),0.)*.3;\n\t\n    if (comp>23.) s+=ll;\n    if (comp>30.) time+=noise(ti*.15)*.002;\n    if (comp>21.) basss=bass(time,bpm*.5,bassnotes1(mod(notecount,16.)),0.)*.7; \n    \t\t\telse basss=bass(time,bpm*.5,D,0.)*min(1.,time*time*.01)*.5;\n    if (comp>4.) s+=basss;\n    if (comp>7.) s+=ch;\n    if (abs(floor(comp)-19.)<2.) s=basss*.5+sin(ti*ti*ti*1000.)*.05;\n    if (comp>52.) s=(ll+basss+sin(sin(ti*ti*.1+1.5+noise(ti*.5)*.001)*1000.)*.1)*exp(-.4*(comp-52.));\n   \n    s*=min(1.,ti*.3);\n    return vec2(sin(tickcount*4.),cos(tickcount*4.))*s;\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdsSW2","date":"1406983224","viewed":1194,"name":"Deadly Dreams","username":"Kali","description":"First experiment with procedural music.","likes":32,"published":1,"flags":8,"usePreview":0,"tags":["music","scope"],"hasliked":0,"parentid":"","parentname":""}}