{"ver":"0.1","info":{"id":"XtcyR7","date":"1531933188","viewed":561,"name":"Navier Stoked about this shader","username":"wyatt","description":"seems to work","likes":21,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 C, in vec2 U )\n{\n   \tvec4 g = texture(iChannel0,U/iResolution.xy);\n    vec3 color =\n        g.w+abs(g.xyz)*vec3(10,10,.1);\n    color = sin(color);\n    C = vec4(color*color,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// FLUID PART\n\nvec2 ur, U;\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 t (vec2 v, int a, int b) {return texture(iChannel0,fract((v+vec2(a,b))/ur));}\nvec4 t (vec2 v) {return texture(iChannel0,fract(v/ur));}\nfloat area (vec2 a, vec2 b, vec2 c) { // area formula of a triangle from edge lengths\n    float A = length(b-c), B = length(c-a), C = length(a-b), s = 0.5*(A+B+C);\n    return sqrt(s*(s-A)*(s-B)*(s-C));\n}\nvec2 perp (vec2 v) {return vec2(-v.y,v.x);}\nvoid mainImage( out vec4 Co, in vec2 uu )\n{\n    U = uu;\n    ur = iResolution.xy;\n    if (iFrame < 1) {\n        U = 30.*(U-0.5*ur)/ur.y;\n        float q = length(U);\n        float ra = exp(-1e-1*q*q);\n        Co = vec4(0.1*ra*vec2(sin(U.y),cos(U.x)),0,sin(U.x));\n    } else {\n        vec2 v = U,\n             A = v + vec2( 1, 1),\n             B = v + vec2( 1,-1),\n             C = v + vec2(-1, 1),\n             D = v + vec2(-1,-1);\n        for (int i = 0; i < 3; i++) {\n            vec2 tmp = t(v).xy;\n            v -= tmp;\n        }\n        vec4 me = t(v);\n        for (int i = 0; i < 6; i++) {\n            vec2 tmp = t(v).xy;\n            v -= tmp;\n        }\n        me.zw = t(v).zw;\n        for (int i = 0; i < 6; i++) {\n            A -= t(A).xy;\n            B -= t(B).xy;\n            C -= t(C).xy;\n            D -= t(D).xy;\n        }\n        vec4 n = t(v,0,1),\n            e = t(v,1,0),\n            s = t(v,0,-1),\n            w = t(v,-1,0);\n        vec4 ne = .25*(n+e+s+w);\n        me = mix(me,ne,vec4(0.08,0.08,1,0.0));\n        me.z  = me.z - (area(A,B,C)+area(B,C,D)-4.);\n        vec4 pr = vec4(e.z,w.z,n.z,s.z);\n        me.xy = me.xy + vec2(pr.x-pr.y, pr.z-pr.w)/ur;\n        \n        \n        vec4 mouse = texture(iChannel1,vec2(0.5));\n        float q = ln(U,mouse.xy,mouse.zw);\n        vec2 m = mouse.xy-mouse.zw;\n        float l = length(m);\n        if (l>0.) {\n            m = normalize(m)*min(l,.1);\n        \tme += exp(-q*q)*vec4(normalize(m.xy),0,20);\n        }\n        Co = me;\n        Co.xyz = clamp(Co.xyz, -40., 40.);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// MOUSE\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 p = texture(iChannel0,fragCoord/iResolution.xy);\n    if (iMouse.z>0.) {\n        if (p.z>0.) fragColor =  vec4(iMouse.xy,p.xy);\n    \telse fragColor =  vec4(iMouse.xy,iMouse.xy);\n    }\n    else fragColor = vec4(-iResolution.xy,-iResolution.xy);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// FLUID PART\n\nvec2 ur, U;\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 t (vec2 v, int a, int b) {return texture(iChannel0,fract((v+vec2(a,b))/ur));}\nvec4 t (vec2 v) {return texture(iChannel0,fract(v/ur));}\nfloat area (vec2 a, vec2 b, vec2 c) { // area formula of a triangle from edge lengths\n    float A = length(b-c), B = length(c-a), C = length(a-b), s = 0.5*(A+B+C);\n    return sqrt(s*(s-A)*(s-B)*(s-C));\n}\nvec2 perp (vec2 v) {return vec2(-v.y,v.x);}\nvoid mainImage( out vec4 Co, in vec2 uu )\n{\n    U = uu;\n    ur = iResolution.xy;\n    if (iFrame < 1) {\n        U = 30.*(U-0.5*ur)/ur.y;\n        float q = length(U);\n        float ra = exp(-1e-1*q*q);\n        Co = vec4(0.1*ra*vec2(sin(U.y),cos(U.x)),0,sin(U.x));\n    } else {\n        vec2 v = U,\n             A = v + vec2( 1, 1),\n             B = v + vec2( 1,-1),\n             C = v + vec2(-1, 1),\n             D = v + vec2(-1,-1);\n        for (int i = 0; i < 3; i++) {\n            vec2 tmp = t(v).xy;\n            v -= tmp;\n        }\n        vec4 me = t(v);\n        for (int i = 0; i < 6; i++) {\n            vec2 tmp = t(v).xy;\n            v -= tmp;\n        }\n        me.zw = t(v).zw;\n        for (int i = 0; i < 6; i++) {\n            A -= t(A).xy;\n            B -= t(B).xy;\n            C -= t(C).xy;\n            D -= t(D).xy;\n        }\n        vec4 n = t(v,0,1),\n            e = t(v,1,0),\n            s = t(v,0,-1),\n            w = t(v,-1,0);\n        vec4 ne = .25*(n+e+s+w);\n        me = mix(me,ne,vec4(0.08,0.08,1,0.0));\n        me.z  = me.z - (area(A,B,C)+area(B,C,D)-4.);\n        vec4 pr = vec4(e.z,w.z,n.z,s.z);\n        me.xy = me.xy + vec2(pr.x-pr.y, pr.z-pr.w)/ur;\n        \n        \n        Co = me;\n        Co.xyz = clamp(Co.xyz, -40., 40.);\n    }\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"// FLUID PART\n\nvec2 ur, U;\nfloat ln (vec2 p, vec2 a, vec2 b) {\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvec4 t (vec2 v, int a, int b) {return texture(iChannel0,fract((v+vec2(a,b))/ur));}\nvec4 t (vec2 v) {return texture(iChannel0,fract(v/ur));}\nfloat area (vec2 a, vec2 b, vec2 c) { // area formula of a triangle from edge lengths\n    float A = length(b-c), B = length(c-a), C = length(a-b), s = 0.5*(A+B+C);\n    return sqrt(s*(s-A)*(s-B)*(s-C));\n}\nvec2 perp (vec2 v) {return vec2(-v.y,v.x);}\nvoid mainImage( out vec4 Co, in vec2 uu )\n{\n    U = uu;\n    ur = iResolution.xy;\n    if (iFrame < 1) {\n        U = 30.*(U-0.5*ur)/ur.y;\n        float q = length(U);\n        float ra = exp(-1e-1*q*q);\n        Co = vec4(0.1*ra*vec2(sin(U.y),cos(U.x)),0,sin(U.x));\n    } else {\n        vec2 v = U,\n             A = v + vec2( 1, 1),\n             B = v + vec2( 1,-1),\n             C = v + vec2(-1, 1),\n             D = v + vec2(-1,-1);\n        for (int i = 0; i < 3; i++) {\n            vec2 tmp = t(v).xy;\n            v -= tmp;\n        }\n        vec4 me = t(v);\n        for (int i = 0; i < 6; i++) {\n            vec2 tmp = t(v).xy;\n            v -= tmp;\n        }\n        me.zw = t(v).zw;\n        for (int i = 0; i < 6; i++) {\n            A -= t(A).xy;\n            B -= t(B).xy;\n            C -= t(C).xy;\n            D -= t(D).xy;\n        }\n        vec4 n = t(v,0,1),\n            e = t(v,1,0),\n            s = t(v,0,-1),\n            w = t(v,-1,0);\n        vec4 ne = .25*(n+e+s+w);\n        me = mix(me,ne,vec4(0.08,0.08,1,0.0));\n        me.z  = me.z - (area(A,B,C)+area(B,C,D)-4.);\n        vec4 pr = vec4(e.z,w.z,n.z,s.z);\n        me.xy = me.xy + vec2(pr.x-pr.y, pr.z-pr.w)/ur;\n        \n        \n        Co = me;\n        Co.xyz = clamp(Co.xyz, -40., 40.);\n    }\n}","name":"Buffer D","description":"","type":"buffer"}]}