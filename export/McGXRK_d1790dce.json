{"ver":"0.1","info":{"id":"McGXRK","date":"1715431243","viewed":37,"name":"Just experimenting and learning","username":"CheerWizard","description":"Simple circle with background color","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 backgroundColor = vec4(0.5, 0.5, 0.5, 1);\n\nfloat aspectRatio;\nvec2  uv;\n\nstruct Circle {\n   float radius;\n   vec2 center;\n   vec4 color;\n   float smoothRadius;\n};\n\nvoid drawCircle(in Circle circle, out vec4 outColor)\n{\n    // adapt circle to aspect ratio\n    circle.center.x *= aspectRatio;\n    \n    // circle -> uv vector\n    vec2 cuv = uv - circle.center;\n    float cuvLength = length(cuv);\n    \n    // fill circle with color\n    \n    // anti-aliasing for circle pixels\n    circle.color *= smoothstep(circle.radius, circle.radius - circle.smoothRadius, cuvLength);\n    \n    // determine if the pixel is in circle and fill it with circle color\n    if (cuvLength <= circle.radius) {\n        outColor = circle.color;\n    }\n}\n\nvoid mainImage( out vec4 outColor, in vec2 fragCoord )\n{\n    uv = fragCoord / iResolution.xy;\n    aspectRatio = iResolution.x / iResolution.y;\n    uv.x *= aspectRatio;\n    outColor = backgroundColor;\n    \n    // circles \n    \n    {\n        Circle circle;\n        circle.radius = 0.1;\n        circle.center = vec2(0.1, 0.5);\n        circle.color  = vec4(1, 0, 0, 1);\n        circle.smoothRadius = 0.01;\n        drawCircle(circle, outColor);\n    }\n    \n    {\n        Circle circle;\n        circle.radius = 0.2;\n        circle.center = vec2(0.3, 0.5);\n        circle.color  = vec4(0, 1, 0, 1);\n        circle.smoothRadius = 0.01;\n        drawCircle(circle, outColor);\n    }\n    \n    {\n        Circle circle;\n        circle.radius = 0.3;\n        circle.center = vec2(0.625, 0.5);\n        circle.color  = vec4(0, 0, 1, 1);\n        circle.smoothRadius = 0.01;\n        drawCircle(circle, outColor);\n    }\n    \n    {\n        Circle circle;\n        circle.radius = 0.4;\n        circle.center = vec2(1.075, 0.5);\n        circle.color  = vec4(1, 1, 1, 1);\n        circle.smoothRadius = 0.01;\n        drawCircle(circle, outColor);\n    }\n}","name":"Image","description":"","type":"image"}]}