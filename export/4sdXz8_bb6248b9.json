{"ver":"0.1","info":{"id":"4sdXz8","date":"1457653215","viewed":898,"name":"Lightpainting","username":"piratehurrdurr","description":"Painting with light! Use your mouse!<br/>You can swipe the bottom bar to change your pen settings to have a different line style. Click in the bottom right corner to reset to default. ","likes":36,"published":1,"flags":32,"usePreview":0,"tags":["mouse","light","painting","buffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = sqrt( texture(iChannel0, uv));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec2 linePointDist(vec2 lb, vec2 le, vec2 p) {\n    float len = length(lb-le);\n    if (len==0.0) {\n        return (lb-p);\n    }\n    vec2 dir = normalize(le-lb);\n    float t = max(0.0, min(len, dot(p - lb, dir)));\n    vec2 proj = lb+t*dir;\n    return proj-p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 mouse =texture(iChannel1, vec2(0.0));\n    float mOffset=2.0;\n\tmOffset+=mouse.w*40.0;\n    vec3 mousePrev = texture(iChannel1, vec2(mOffset/iResolution.x)).rgb;\n    \n    vec4 c = vec4(0.0);\n    \n    if (mouse.z+mousePrev.z>=2.0) {\n    \tfloat aspect = iResolution.x/iResolution.y;\n        vec2 distanceVec = linePointDist(mouse.xy,mousePrev.xy, uv);\n        distanceVec.y/=aspect;\n        float dist = length(distanceVec);\n        float str = 16.0/(dist*4500.0+1.0)/(dist*200.0+length(mouse.rg-mousePrev.rg)*20.0+10.0);\n    \tc.rgb = hsv2rgb(vec3(iTime/76.0,1.0,str));\n \n    }\n    \n    vec3 old = texture(iChannel0, uv).rgb;\n    //old =rgb2hsv(old.rgb);\n                 //old = hsv2rgb(old.rgb+vec3(0.001,0.0,0.0));\n    \n    fragColor =  old.rgbr*0.9992 + c;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor.a = texture(iChannel0,uv).a;\n    float b = 0.0;\n    if (iMouse.z>0.0) {\n        b=1.0;\n        if (iMouse.y<20.0) {\n            fragColor.a = min(1.0,max(1.02*iMouse.x/iResolution.x-0.1,0.0));\n            b=0.0;\n        }\n    }\n    \n    fragColor.rgb = vec3(iMouse.x/iResolution.x,iMouse.y/iResolution.y,b);\n    if (fragCoord.x>=1.0) {\n    \tuv.x -= 1.0/iResolution.x;\n        fragColor.rgb = texture(iChannel0, uv).rgb;\n    }\n    \n}","name":"Buf B","description":"","type":"buffer"}]}