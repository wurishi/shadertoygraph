{"ver":"0.1","info":{"id":"tscGzH","date":"1567764136","viewed":212,"name":"#Maze","username":"bkpjjj","description":"Maze","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["maze"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec2 uv){\n    \n return fract(sin(uv.x * 168. + uv.y * 124.)*151.);   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n\tuv.x *= iResolution.x/iResolution.t;\n    uv.x += iTime*0.01;\n    uv *= 20.;\n    uv.xy *= sin(iTime * 0.5)*0.5+1.5;\n    uv.xy *= mat2(cos(iTime*0.2),-sin(iTime*0.2),sin(iTime*0.2),cos(iTime*0.2));\n    vec2 fuv = fract(uv)-0.5;\n    vec2 guv = floor(uv);\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    float nuv = fuv.x + fuv.y;\n    if(hash(guv) > 0.5) nuv = fuv.x - fuv.y;\n\tcol.xyz = vec3(1.-step(0.1,abs(nuv)));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}