{"ver":"0.1","info":{"id":"Xd3SDB","date":"1461145260","viewed":222,"name":"egg yolk twister","username":"tomaes","description":"...","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","minimal","style"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    float t = iTime * 0.5 + 139.7;\n\n    // moving bg texture\n    vec3 c = vec3( 0.25 + min(sqrt(sin(uv.x*200.0+t*0.5)+cos(uv.y*200.0)),0.7 ),0.5,0.2*abs(0.5-uv.y));\n    \n    float p[8];\n    \n    for(int i = 0; i < 8; i++)\n        p[i] = 0.5 + sin( float(i)*2.0*PI/8.0 + t + sin(2.0*uv.x+t)*2.0)*(0.25+0.2*sin(uv.x+t));\n\t\n    // \"yolk\"\n    for(int i = 1; i < 8; i++)\n        if ((p[i-1]-p[i]) > 0.0 && uv.y < p[i-1] && uv.y > p[i] )\n            //c += 1.5 * vec3(0.8,0.2,0.5-p[i]*2.5);\n        \tc += 1.5 * vec3(0.8,0.2,(p[i-1]-p[i])*uv.y*2.5);\n    \n    // \"arms\"\n    for(int i = 0; i < 8; i++)\n\t\tif (distance(vec2(uv.x,uv.y),vec2(uv.x,p[i])) < 0.05+sin(uv.x*4.0)*0.05)\n        if (mod(uv.x+uv.y,0.1) < 0.01+sin(uv.x+uv.y)*0.1)\n            c = vec3(1.0,1.0,1.0-p[i]*0.25);\n    \n\tfragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}