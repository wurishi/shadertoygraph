{"ver":"0.1","info":{"id":"l3ffD4","date":"1728391589","viewed":22,"name":"Mandelbrot IDAS","username":"LAZARUSTARS","description":"pupupu","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["factorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Преобразуем координаты фрагмента в нормализованные координаты\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 3.0 - 2.0;\n    \n    // Начальная точка\n    vec2 c = uv;\n    vec2 z = vec2(0.0);\n    \n    // Задаем максимальное количество итераций, которое изменяется во времени\n    int maxIterations = int(100.0 * abs(sin(iTime)));\n    maxIterations = clamp(maxIterations, 1, 100); // Ограничиваем значение от 1 до 100\n    \n    int iterations = 0;\n\n    // Итерация для вычисления Мандельброта\n    for (int i = 0; i < maxIterations; i++)\n    {\n        if (dot(z, z) >= 4.0) break;\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        iterations++;\n    }\n\n    // Цвет в зависимости от количества итераций\n    float color = float(iterations) / float(maxIterations);\n    \n    // Устанавливаем цвет пикселя\n    fragColor = vec4(vec3(color), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}