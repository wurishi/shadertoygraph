{"ver":"0.1","info":{"id":"XXSBRy","date":"1729581680","viewed":133,"name":"pattern through cubes","username":"FabriceNeyret2","description":"inspiration: https://www.facebook.com/groups/tiling/posts/1941344902955712/\nmouse controls camera","likes":16,"published":3,"flags":0,"usePreview":0,"tags":["short","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a+vec4(0,33,11,0)))                       // rotation\n#define C(a)   max( a.x, max(a.y,a.z)) -1.                        // cube\n\nvoid mainImage( out vec4 O, vec2 u ) {\n\n    vec3 R = iResolution,\n         P = 7./R, q, a,a2,                                       // P: camera pos, then sample along ray\n         D = normalize(vec3( u , -R.y ) - .5*R ),                 // D: ray direction\n         M = iMouse.z > 0. ? iMouse.xyz/R -.5 :                   // comment for no mouse cam\n                 vec3( .15,.07,0) * cos(.3*iTime + vec3(0,11,0));          \n    float t=1., i, d,d2;\n    \n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 )                // --- march scene\n        q = P, \n        q.yz *= rot(-6.*M.y),                                     // rotations\n        q.xz *= rot(-6.*M.x-1.57),\n        a = abs(q), a2 = abs(q-1.),\n        t = min( d = C(a), d2 = C(a2) ),                          // union of 2 cubes\n        P += t*D;                                                 // step along the ray\n    \n    O *= O*O ;                                                    // color scheme\n    if (t==d2) a = a2;\n    d = min( length(a.yz), min( length(a.xy), length(a.xz) )),    // 2D dist to face center\n    t = sin(31.3*d); // 10pi\n    t = d < 1.? clamp(.5-t/fwidth(t),0.,1.) : 1.;                 // strips\n    O *= a.x > max(a.y,a.z) ? 1.-t : t;                           // reverse on faces X\n}\n","name":"Image","description":"","type":"image"}]}