{"ver":"0.1","info":{"id":"Ds33R4","date":"1677006880","viewed":141,"name":"first shader rotating","username":"koe1k","description":"it's rotating and scaling for no reason","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    float dist = length(uv - vec2(0.90,0.5));\n\n    float c = dist;\n    \n    float r = cos(iTime) * 0.05 + 0.45;\n    \n    if(c > r)\n        c = 1.0;\n    else\n        c = 0.0;\n        \n        \n    fragColor = vec4(vec3(c),1.0);\n        \n    for(float i = 0.0; i < 6.0; i+=1.0)\n    {\n        if((uv.x - r * (2.0/3.0) * cos(radians(i*60.0 + iTime*15.0)) - 0.9) * (uv.x - r * (2.0/3.0) * cos(radians(i*60.0+ iTime*15.0)) - 0.9) + (uv.y - r * (2.0/3.0) * sin(radians(i*60.0+ iTime*15.0)) - 0.5) * (uv.y - r * (2.0/3.0) * sin(radians(i*60.0+ iTime*15.0)) - 0.5) < r*r/9.0)\n            {\n            fragColor.x = 0.5;\n            fragColor.y = 0.5;\n            }\n            \n    }\n    \n    \n    // Output to screen\n    \n}","name":"Image","description":"","type":"image"}]}