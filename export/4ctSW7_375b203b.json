{"ver":"0.1","info":{"id":"4ctSW7","date":"1714005228","viewed":90,"name":"Glitching Effect","username":"Data_chan","description":"A quick glitching effect that I threw together in ~15 min.","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["glitch","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Dave Hoskin's Hash Function\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 new_uv = uv;\n    \n    float resolution = 64.0;\n    float offset = 0.0;\n    offset = (hash12(vec2(fragCoord.y, iFrame))*4.0)-1.5;\n    \n    new_uv = vec2((trunc((uv.x+((offset*0.5)/resolution))*resolution)/resolution), uv.y);\n    \n    \n    vec4 out_color = texture(iChannel0, new_uv);\n    vec4 original_img = texture(iChannel0, uv);\n    \n    out_color = mix(texture(iChannel0, uv), out_color, float(lessThan(vec2(max(max(original_img.x, original_img.y), original_img.z)), vec2(0.5))));\n    \n    // Output to screen\n    fragColor = vec4(out_color);\n}","name":"Image","description":"","type":"image"}]}