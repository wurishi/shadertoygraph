{"ver":"0.1","info":{"id":"NslyDn","date":"1641966073","viewed":119,"name":"artifact static","username":"bill_l1","description":"glitch effect for a WebGL demo","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["static"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define REFRESHES_PER_SECOND 4.\n#define NOISE_AMOUNT 0.8\n#define NOISE_DENSITY 0.5\n#define ROW_SIZE 32.\n#define COL_SIZE 32.\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat timeToRefresh = 0.;\nfloat rowSize = ROW_SIZE;\nfloat colSize = COL_SIZE;\nfloat offset = 0.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n\n    offset = 0.25*floor(iTime*REFRESHES_PER_SECOND);\n    float sizeNoise = floor(iTime*REFRESHES_PER_SECOND);\n    rowSize = (rand(vec2(sizeNoise*0.23, sizeNoise*6.1))*0.5 + 0.5)*ROW_SIZE;\n    colSize = (rand(vec2(sizeNoise*4.7, sizeNoise*0.36))*0.5 + 0.5)*COL_SIZE;\n       \n    float numRows = ceil(iResolution.y/rowSize);\n    float numCols = ceil(iResolution.x/colSize);\n    \n    vec2 pos = vec2(floor(fragCoord.y / rowSize), floor(fragCoord.x / colSize));\n    vec2 rectPos = vec2(mod(fragCoord.x, colSize), mod(fragCoord.y, rowSize));\n    \n    // possibly take from nearby row or column instead\n    \n    float rowNoise = floor((rand(pos)-0.5)*10.);\n    float colNoise = floor((rand(pos*0.23)-0.5)*10.);\n    \n    float targetRow = rowNoise + pos.x;\n    float targetCol = colNoise + pos.y;\n    \n    vec2 fc = (rectPos + vec2(targetCol*colSize, targetRow*rowSize));\n    \n    if(rand(floor(fc/ROW_SIZE)) < 0.6) fc = fragCoord; //preserve some of original image\n    \n    vec2 uv = fc / iResolution.xy;\n    \n    vec4 ou = texture(iChannel0, uv);\n\n    float seed = rand(uv.xy * iTime);\n    \n    float noiseAmount = (rand(pos*0.683*offset)+0.5)*NOISE_AMOUNT;\n    float noiseDensity = rand(pos*0.152*offset)/NOISE_DENSITY;\n       \n    if(rand(fragCoord.xy * iTime) < noiseAmount &&\n       rand(pos * offset) > noiseDensity){\n       ou = vec4(seed, seed, seed, 1.0);\n    }\n    \n    // generate dead pixels\n    if(rand(uv) > 0.999) ou = vec4(0., 1., 0., 1.);\n    \n    fragColor = ou;\n}","name":"Image","description":"","type":"image"}]}