{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"mat2 z=mat2(1,1,1,-1);\nfloat m(vec2 p)\n{\n    return step(cos(1.257*(texture(iChannel0, floor(z*p*.1)/64.,-32.).r>.5?p.y:p.x)),.17);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = z * (fragCoord.xy / iResolution.y * 35. + iMouse.xy*.1 + iTime*vec2(1.8,1.08)),c = floor(p);\n    float s = step(1. - p.x + c.x, p.y - c.y), f = m(c), g = m(c + vec2(-1, 0) + s);s/=4.;\n\tfragColor.rgb = mix(vec3(1,.3,.25),vec3(1),m(c-z[1])+(g < f ? f*(.75-s) : g*(.5+s)));\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Md2XRd","date":"1415155094","viewed":1277,"name":"Isometric Maze","username":"fizzer","description":"Some more sizecoding doodling. I'm not finished with it (there are most likely more minifying transformations to be done) but I'm publishing it anyway! (p.s. I know, it's not truly isometric...)","likes":39,"published":1,"flags":0,"usePreview":0,"tags":["isometric","maze","small"],"hasliked":0,"parentid":"","parentname":""}}