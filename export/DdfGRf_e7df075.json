{"ver":"0.1","info":{"id":"DdfGRf","date":"1666507732","viewed":56,"name":"sort of stuff happening","username":"nrosquist","description":"playin","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfCircle(vec2 uv, float r, vec2 offset) {\n    float dist = length(uv+offset) - r;\n    return dist > 0. ? 0. : 1./dist;\n}\n\nfloat sdfSquare(vec2 uv, float r, vec2 offset) {\n    float dist = max(abs(uv.x + offset.x),abs(uv.y + offset.y))-r;\n    return dist >0. ? 0. : 1./dist;\n}\n\nvec2 rotate(vec2 uv, float theta) {\n    // column first!\n    return mat2(cos(theta), sin(theta), -sin(theta), cos(theta)) * uv;\n}\n\nfloat sum(float a, float b) {\n    return a+b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float rad = iResolution.x / 5.;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = vec3(uv,0);\n    float circle = sdfCircle(uv, .2, rotate(vec2(cos(iTime)*.5,sin(iTime)*.5),iTime*.5));\n    float square = sdfSquare(rotate(uv,iTime), .35, rotate(-vec2(abs(sin(iTime*.2)*.2), cos(iTime)*.2),-iTime));\n    col = cos(iTime + uv.xyx + vec3(0,2,4))*mix(circle,-square,atan(iTime,cos(iTime)));\n    float circle2 = sdfCircle(uv, .5, vec2(0))*uv.y*cos(iTime*.4);\n    float circle3 = sdfCircle(uv, .2, vec2(sin(iTime)));\n    float circle4 = sdfCircle(uv, .3, vec2(-cos(iTime*.2)));\n    col.g = mix(col.g*circle3, mix(circle2,circle4,circle3)*col.r*col.b, uv.x);\n    //col.r = e1;\n//col.g = e2;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}