{"ver":"0.1","info":{"id":"MfdyRl","date":"1731044892","viewed":71,"name":"Flying Over Landscape","username":"GarlicGraphix","description":"3D","likes":5,"published":1,"flags":0,"usePreview":1,"tags":["landscape"],"hasliked":0,"parentid":"4f3yzX","parentname":"Rainbow Truchets"},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvec2 warpCoords(vec2 uv, float fact) {\n    return uv / (1.0 + fact * (1.0 - uv.y));\n}\n\nmat2 rot2D(float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    \n    return mat2(c, -s, s, c);\n}\n\nvec3 colours[20] = vec3[](\n    vec3(0.0, 0.0, 0.5),\n    vec3(0.0, 0.0, 0.6),\n    vec3(0.0, 0.1, 0.7),\n    vec3(0.0, 0.3, 0.7),\n    vec3(0.7, 0.7, 0.0),\n    vec3(0.1, 0.6, 0.0),\n    vec3(0.2, 0.7, 0.2),\n    vec3(0.3, 0.7, 0.2),\n    vec3(0.4, 0.8, 0.1),\n    vec3(0.5, 0.7, 0.0),\n    vec3(0.6, 0.6, 0.0),\n    vec3(0.7, 0.5, 0.0),\n    vec3(0.8, 0.4, 0.1),\n    vec3(0.6, 0.3, 0.2),\n    vec3(0.5, 0.3, 0.3),\n    vec3(0.6, 0.5, 0.5),\n    vec3(0.7, 0.7, 0.7),\n    vec3(0.8, 0.8, 0.8),\n    vec3(0.9, 0.9, 0.9),\n    vec3(1.0, 1.0, 1.0)     \n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    uv.x -= (iResolution.x/2.)/iResolution.y;\n    uv.y -= (iResolution.y/2.)/iResolution.y;\n    vec3 col = vec3(0., 0.0, 0.);    \n    \n    for( int i = 0; i < 20; i++) {\n        vec2 wuv = uv;\n        float fact = 0.04;\n        wuv = warpCoords(uv, pow(float(i)*fact, 2.));\n        wuv.x += iTime*0.1;\n        wuv.y += iTime*0.01;\n        int max = int(ceil(texture(iChannel1, wuv).r*20.));\n        if (i < max) {\n            col = colours[i];\n        }\n        \n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}