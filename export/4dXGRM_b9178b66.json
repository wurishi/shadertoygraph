{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define FOV_MORPH 1\n\nfloat box(vec3 p) {\n\treturn length(max(abs(p)-vec3(.5),0.0)) - 0.15;\n}\n\nvec3 rot(vec3 p, float f) {\n\tfloat s = sin(f);\n\tfloat c = cos(f);\n\tp.xy *= mat2(c, -s, s, c);\n\tp.yz *= mat2(c, -s, s, c);\n\treturn p;\n}\n\n\nvec3 trans(vec3 p, out float rotout) {\n\tp.zx += iTime*8.0;\n\n\tvec3 b = vec3(4.);\n\tvec3 rep = floor(p/b);\n\n\tp = mod(p,b)-0.5*b;\n\t\n\trotout = iTime*1.88 + (rep.x+rep.z+rep.y)*0.3;\n\tp = rot(p, rotout);\n\treturn p;\t\n}\n\nfloat scene(vec3 p) {\n\tfloat dummy;\n\treturn box(trans(p,dummy));\n}\n\n\nvec3 normal(vec3 p, float d) {\n\tvec3 e = vec3(0.04,.0,.0);\n\treturn normalize(vec3(\n\t\tscene(p+e.xyy)-d,\n\t\tscene(p+e.yxy)-d,\n\t\tscene(p+e.yyx)-d));\n\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 xy = fragCoord.xy / iResolution.xy - vec2(0.5,0.5);\n\txy.y *= -iResolution.y / iResolution.x;\n\n\tfloat time = iTime*0.5;\n\tvec3 ro = 1.5*normalize(vec3(cos(time),cos(time)*1.2,sin(time)));\n    vec3 eyed = normalize(vec3(0.0) - ro);\n    vec3 ud = normalize(cross(vec3(0.0,1.0,0.0), eyed));\n    vec3 vd = normalize(cross(eyed,ud));\n\n#if FOV_MORPH\n\tfloat fov = 3.14 * 0.8 + sin(time*1.334)*1.45;\n#else\n\tfloat fov = 3.14 * 0.7;\n#endif\n\t\n\tfloat f = fov * length(xy);\n\tvec3 rd = normalize(normalize(xy.x*ud + xy.y*vd) + (1.0/tan(f))*eyed);\n\n\n\tvec3 p = ro + rd;\n\n\tfloat dall,d;\n\tfor(int i = 0; i < 64; i++) {\n\t\td = scene(p);\n\t\tif(d < 0.06) break;\n\t\tp += d*rd;\n\t\tdall += d;\n\t}\n\n\tvec3 bg = normalize(p).zzz + 0.1;\n\n\tif(d < 0.06) {\n\t\tvec3 n = normal(p,d); \n\t\tvec3 col = vec3(dot(vec3(0.0,0.0,1.0), n));\n\t\tfloat objrot;\n\t\tvec3 objp = trans(p,objrot);\n\t\tvec3 objn = abs(rot(n,objrot));\n\t\t\n\t\tvec2 uv = \n\t\t\t(objn.y > 0.707) ? vec2(objp.zx) : \n\t\t\t(objn.x > 0.707) ? vec2(objp.zy) :\n\t\t\t\t\t\t\t   vec2(objp.xy) ;\n\t\tvec3 tex = texture(iChannel0, uv).rgb;\n\t\tvec3 hl = smoothstep(0.6, 1.0, col);\n\t\tcol *= clamp(tex.xyz+0.3, 0.0, 1.0);\n\n\t\tcol = col + hl*.4;\n\t\tfloat fog = clamp(dall/mix(90.0,40.0,((rd.z+1.0)*0.5)), 0.0, 1.0);\n\n\t\tfragColor = vec4(mix(col, bg, fog),1.0);\n\t}\n\telse {\n\t\tfragColor = vec4(bg, 1.0);\n\t}\n\t\t\n\n\t\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dXGRM","date":"1364816057","viewed":2196,"name":"flying steel cubes","username":"kataho","description":"Cubes got light, texture and translation.\nKill fov morphing if you want less psychedelic.","likes":33,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","distancefield"],"hasliked":0,"parentid":"","parentname":""}}