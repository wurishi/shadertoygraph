{"ver":"0.1","info":{"id":"XdfyzX","date":"1489026302","viewed":106,"name":"Stingray creature","username":"mcad_30","description":"noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define TWOPI 6.2831\n\nvec3 colorGray = vec3(0.5, 0.5, 0.5);\nvec3 colorBlack = vec3(0.0, 0.0, 0.0);\n\nfloat createShape(vec2 centerPosition, float side)\n{  \n    float a = atan(centerPosition.y,centerPosition.x);\n    float r = TWOPI/side;\n    return cos(floor(.5+a/r)*r-a)*length(centerPosition.xy);\n}\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nmat2 scale2d(vec2 size)\n{\n    return mat2(size.x, 0.0, 0.0, size.y);\n}\n\nfloat rand(vec2 uv)\n{\n    //return fract(sin(dot(uv, vec2(12.9898,78.233)))*10000.*iTime);\n\t//return fract(sin(dot(uv, iMouse.xy))*10000.);\n\t//return (fract(sin(dot(uv, vec2(12., 70.)))*100000.));\n    return (fract(sin(dot(uv, vec2(12., 70.)))*43758.5453123));\n}\n\nfloat rectangleMaker(vec2 uv, vec2 size, vec2 position)\n{\n    float x = step(position.x, uv.x) - step(position.x + size.x, uv.x);\n    float y = step(position.y, uv.y) - step(position.y + size.y, uv.y);\n    \n    float rectangle = x*y;\n    \n    return rectangle;\n}\n\n// Value noise\nfloat noise(in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = f*f*(3.0-2.0*f);\n    // u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners porcentages\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float n = noise(uv * 200.0 + iTime) * .05;\n\tfloat nOfTail = noise(uv * 50.0 + iTime) * .05;\n    float nOfEyes = noise(uv * 100.0 + iTime) * .05;\n    uv += (sin(iTime) + 0.1)/10.0;\n    vec2 size = vec2(0.01, 0.3);\n    vec2 position = vec2(0.52 - nOfTail,0.25);\n    float rectangle1 = rectangleMaker(uv, size, position);\n        \n    vec2 eyeSize = vec2(0.01, 0.01);\n    vec2 eyePosition = vec2(0.51-nOfEyes,0.67);\n    float leftEye = rectangleMaker(uv, eyeSize, eyePosition);\n    \n    vec2 rightSize = vec2(0.011, 0.01);\n    vec2 rightPosition = vec2(0.54-nOfEyes,0.67);\n    float rightEye = rectangleMaker(uv, rightSize, rightPosition);\n    \n    vec2 squarePosition = vec2(0.5, 0.6);\n    vec3 square1 = vec3(1.0);\n    uv -= squarePosition;\n    uv *= rotate2d(45.0 * PI / 180.0);\n    uv *= scale2d(vec2(4.0));\n   \tuv += squarePosition;\n    square1 = vec3(step(createShape(uv - n - squarePosition, 4.0), 0.4));\n    square1 *= colorGray;\n    vec3 creature = (square1- leftEye - rightEye) + rectangle1 ;\n\tfragColor = vec4(vec3(creature),1.0);\n}","name":"Image","description":"","type":"image"}]}