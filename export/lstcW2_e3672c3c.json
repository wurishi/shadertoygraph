{"ver":"0.1","info":{"id":"lstcW2","date":"1685094960","viewed":72,"name":"Edge Distort","username":"francoestrubia","description":"porting Edge Distort that comes with ISF Editor.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["video","displacement","distortion","filter","fx"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 left_coord;\nvec2 right_coord;\nvec2 above_coord;\nvec2 below_coord;\n\nvec2 lefta_coord;\nvec2 righta_coord;\nvec2 leftb_coord;\nvec2 rightb_coord;\n\n\nfloat gray(vec4 n)\n{\n\treturn (n.r + n.g + n.b)/3.0;\n}\n\nconst float tau = 6.28318530718;\n\nbool invert_map;\nfloat intensity =0.20; //default .2 max 10\n\n\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n/*    \n//Vertex Loop\nvec2 texc = vec2(uv[0],uv[1]);    \nvec2 d = 1.0/iResolution.xy;    \n    \n\tleft_coord = clamp(vec2(texc.xy + vec2(-d.x , 0)),0.0,1.0);\n\tright_coord = clamp(vec2(texc.xy + vec2(d.x , 0)),0.0,1.0);\n\tabove_coord = clamp(vec2(texc.xy + vec2(0,d.y)),0.0,1.0);\n\tbelow_coord = clamp(vec2(texc.xy + vec2(0,-d.y)),0.0,1.0);\n\n\tlefta_coord = clamp(vec2(texc.xy + vec2(-d.x , d.x)),0.0,1.0);\n\trighta_coord = clamp(vec2(texc.xy + vec2(d.x , d.x)),0.0,1.0);\n\tleftb_coord = clamp(vec2(texc.xy + vec2(-d.x , -d.x)),0.0,1.0);\n\trightb_coord = clamp(vec2(texc.xy + vec2(d.x , -d.x)),0.0,1.0);    \n    \n //+++++++++++++++++++ */\n    \n    \n    \n    \n    \n    vec4 color = texture(iChannel0, uv);\n\tvec4 colorL = texture(iChannel0, left_coord);\n\tvec4 colorR = texture(iChannel0, right_coord);\n\tvec4 colorA = texture(iChannel0, above_coord);\n\tvec4 colorB = texture(iChannel0, below_coord);\n\n    \n\tvec4 colorLA = texture(iChannel0, lefta_coord);\n\tvec4 colorRA = texture(iChannel0, righta_coord);\n\tvec4 colorLB = texture(iChannel0, leftb_coord);\n\tvec4 colorRB = texture(iChannel0, rightb_coord);\n    \n    float gx = (-1.0 * gray(colorLA)) + (-1.0 * gray(colorL)) + (-1.0 * gray(colorLB)) + (1.0 * gray(colorRA)) + (1.0 * gray(colorR)) + (1.0 * gray(colorRB));\n\n    float gy = (1.0 * gray(colorLA)) + (1.0 * gray(colorA)) + (1.0 * gray(colorRA)) + (-1.0 * gray(colorRB)) + (-1.0 * gray(colorB)) + (-1.0 * gray(colorLB));\n    \n    \n    \n    \n\tfloat edge = pow(gx*gx + gy*gy,0.5);\n\tfloat brightness = (color.r + color.g + color.b) / 3.0;\n\n\tvec2 tc = uv; //isf_FragNormCoord; The uniform vec2 isf_FragNormCoord is automatically declared. This is a convenience variable, and repesents the normalized coordinates of the current fragment ([0,0] is the bottom-left, [1,1] is the top-right).\n    \n    \n    \n\tvec2 modifiedCenter = vec2(0.5,0.5);\n\tfloat r = distance(modifiedCenter, tc);\n\tfloat a = atan ((tc.y-modifiedCenter.y),(tc.x-modifiedCenter.x));\n\t\n\t//\tadjust the angle and radius based on the brightness and edge level\n\tif (invert_map)\t{\n\t\tedge = 1.0 - edge;\n\t}\n\tr = r + intensity * (1.0-edge) * (brightness - 0.5);\n\t//a = a + intensity * pow(1.0+edge,brightness);\n\t\n\ttc.x = r * cos(a) + 0.5;\n\ttc.y = r * sin(a) + 0.5;\n\t\n\t//vec4 final = IMG_NORM_PIXEL(inputImage, tc);\n    vec4 final = texture(iChannel0, tc);\n    \n    \n    \n    // Output to screen\n    fragColor = final;\n}\n\n\n","name":"Image","description":"","type":"image"}]}