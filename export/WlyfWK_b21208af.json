{"ver":"0.1","info":{"id":"WlyfWK","date":"1615028883","viewed":260,"name":"Old school fire!","username":"BitOfGold","description":"Old school fire effect, remember DOS navigator's fire screen saver?\n(Back in the day, I used to make this effect in a DOS com file, in 256 bytes)","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["retro","fire","old","school","dos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 fireColor(vec4 p) {\n    float t = 0.5 * p.x;\n    return vec3(t, pow(max(t,0.),2.)*0.4, pow(max(t,0.),3.)*0.15);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float level = 1.0;\n    vec2 uv = fragCoord / iResolution.xy;\n    uv *= vec2(float(XRES), float(YRES));\n    if (uv.y < 5.0) {\n        level = 0.5;\n    }\n    if (uv.y < 4.0) {\n        level = 0.18;\n    }\n    if (uv.y < 3.0) {\n        level = 0.125;\n    }\n    if (uv.y < 2.0) {\n        level = 0.0;\n    }\n    uv /= iResolution.xy;\n    vec4 p = texture(iChannel0, uv);\n    vec3 color = level * fireColor(p);\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec4 get(int x, int y) {\n    if (x >= XRES) {x -= XRES;}\n    if (x < 0) {x += XRES;}\n    return texture(iChannel0, vec2(float(x), float(y)) / iResolution.xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    int x = int(fragCoord.x);\n    int y = int(fragCoord.y);\n    if (x >= XRES || y >= YRES) {\n        discard;\n    }\n    if (iFrame % FPS_DIV != 0) {\n        fragColor = get(x+1, y+1);\n        return;\n    }\n\n    vec2 position = fragCoord.xy;\n    float xx = float(x);\n    float yy = float(y);\n    \n    vec4 p;\n    float t;\n    \n    float r = 7.0 * random(position, iTime) ;\n    t = abs(r);\n    float nlevel = clamp(1.0 - 1.5 * pow(yy / float(YRES), 0.5), 0.03, 1.0);\n    if (y < 2) {\n        nlevel *= 1.4;\n    } else {\n        nlevel *= 0.12;\n    }\n    p = vec4(nlevel * t, 0.0, 0.0, 0.0);\n    p += 0.097 * (0.15*get(x-2, y-2) + 0.7*get(x-1, y-2) + 1.5*get(x-1, y-1) + 4.0 * get(x, y-1) + 1.5*get(x+1, y-1) + 0.7 * get(x+1, y-2) + 0.15*get(x+2, y-2));\n    fragColor = p;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const int XRES = 160;\nconst int YRES = 72;\nconst int FPS_DIV = 3; // Limit to 20FPS!\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat random(vec2 p, float t) {\n    return hash12((p * 0.152 + t * 1500. + 50.0));\n}\n","name":"Common","description":"","type":"common"}]}