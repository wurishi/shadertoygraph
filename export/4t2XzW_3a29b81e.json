{"ver":"0.1","info":{"id":"4t2XzW","date":"1442018649","viewed":239,"name":"warm colors","username":"xkpe","description":"Generated object abstratac","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by Francisco Santos 2015\n\n// camera\nvec3 CAM = vec3(0., 0., -100.);\nfloat NP = 1.;\nfloat ANG = 3.14159 / 8.;\n\n// sphere\nvec3 SPH = vec3(0.);\nfloat RADIUS = 50.;\n\n// others\nvec2 RES = iResolution.xy;\n\n// calculate initial direction direction\nvoid calcVd(in vec2 c, out vec3 vo, out vec3 vd)\n{\n    vec2 co = (2.*c - RES)/RES.x;\n\n    vo = CAM + NP * vec3( co, 1.);\n    vd = normalize(vo - CAM);\n}\n\nvec3 objCol( in vec3 vo, in vec3 vd, in float time )\n{\n    vec3 col = vec3(0);\n\n    float za = sin(time*.13);\n    \n    float ani = 0.01 * (1.5-.5*sin(time*0.2));\n    \n    vec3 p = vo;\n    for(float n = 0.; n<200.; n+=1.)\n    {\n        vec2 tc = vd.yx*za;\n        \n        vec3 offset = ani * (texture(iChannel0, tc).rgb-0.5)*0.5;\n        \n        vd += offset;\n        \n        vec3 d = p-SPH;\n        if( length(d) < RADIUS) {\n            col += vd.bgr;\n            col += .1*normalize(d);\n        }\n        p += vd;\n    }\n    \n    return abs(col*.01);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c = (fragCoord - iResolution.xy*.5)/iResolution.x ;\n    float t = iTime * .2;\n    mat2 r = mat2(cos(t),sin(t),-sin(t),cos(t));\n\n    c = iResolution.xy*.5 + iResolution.x*(r * c);\n    \n    vec3 vo;\n    vec3 vd;\n    calcVd(c, vo, vd);\n    vec3 col = objCol( vo, vd, iTime );\n    \n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}