{"ver":"0.1","info":{"id":"dlXfzn","date":"1692545836","viewed":65,"name":"simple soap bubbles","username":"Efim","description":"simple soap bubbles with pseudo spectrum","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","noise","reflection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://iquilezles.org/articles/distfunctions2d/\n#define PI 3.14159265359\n\nmat3 rotateX(float f)\n{\n    return mat3(\n    vec3(1.0,    0.0,      0.0),\n    vec3(0.0,\t cos(f),  -sin(f)), \t\n\tvec3(.0, sin(f), cos(f))\n    );\n}\n\n\nmat3 rotateY(float f)\n{\n    return mat3(\n    vec3(cos(f), 0.0,  sin(f)),\n    vec3(0.0,\t 1.0,  0.0), \t\n\tvec3(-sin(f), 0.0, cos(f))\n    );\n}\n\nmat3 rotateZ(float f)\n{\n    return mat3(\n    vec3(cos(f),    -sin(f),  0.0),\n    vec3(sin(f),\t cos(f),  0.0), \t\n\tvec3(0.0, 0.0, 1.0)\n    );\n    \n}\n\n\nfloat aafi(vec2 p)\n{\n    float l = length(p);\n    float fi = asin(abs(p.y)/l);\n    float pst = step(0.0, p.y)*step(p.x, 0.0);\n    fi = fi + pst*(PI - 2.0*fi);\n    pst = step(p.y, 0.0)*step(p.x, 0.0);\n    fi = fi + pst*PI;\n    pst = step(p.y, 0.0)*step(0.0, p.x);\n    fi = fi + pst*(2.0*PI - 2.0*fi);\n    return fi;    \n}\n\n\nfloat rand(float t, float n, float shift)\n{\n    float res =  fract(sin(t + shift)*n);\n    res = -1.0 + 2.0*res;\n    return res;\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvec2 lonlat (vec3 p)\n{\n    float lon = aafi(p.xy)/2.0/PI;\n    float lat = aafi(vec2(p.z, length(p.xy)))/PI;\n    return vec2(1.0-lon, lat);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float aspect = iResolution.x/iResolution.y;\n\n    const float fl = 2.5;\n    // ray direction\n    vec3 rd = normalize( vec3(p,fl) );\n    float t = iTime/7.0;\n    mat3 rota = rotateY(t);//*rotateX(PI/2.0);\n    mat3 rota1 = rotateY(t+PI);\n    //vec2 fon = lonlat(rota*rd); //get longitude and latitude\n    vec3 col = texture(iChannel0, rota*rd).rgb;  //get color from texture\n\n\n    \n    float nn = 10.0;\n    float nshow = 0.0;\n    for (float i = 10.0; i < 30.0; i++)\n    {\n        \n        if (i > 10.0 + nn)\n            break;\n        float n1 = fract(sin(i)*213313.343)*100000.0;\n        float n2 = fract(sin(i)*907629.243)*100000.0;\n        \n        float scale1 = fract(sin(i)*34545.56243)*5.0+4.0;\n        float scale2 = fract(sin(i)*23554.243)*5.0 + 4.0;\n\n        float i1 = floor(iTime/scale1);  // integer\n        float f1 = fract(iTime/scale1);  // fraction\n\n        float i2 = floor(iTime/scale2);  // integer\n        float f2 = fract(iTime/scale2);  // fraction\n\n\n        \n\n        \n\n        \n\n        float r = 0.2*fract(sin(i)*25465.55) + 0.2;\n\n        float vis = floor(rand(i1, n1, 8.0)*20.0);\n        \n        if (vis < 2.0 && !(i == 9.0 + nn && nshow == 0.0))\n            continue;\n        nshow += 1.0;\n\n        float x = mix(rand(i1, n1, 5.0), rand(i1+1.0, n1, 5.0), smoothstep(0.,1.,f1));\n        float y = mix(rand(i2, n2, 15.0), rand(i2+1.0, n2, 15.0), smoothstep(0.,1.,f2));\n        x*=aspect;\n        y*=aspect;\n        float l = length(p - vec2(x,y));\n        if (l > r)\n            continue;\n\n        float z = r*sin(acos(l/r));\n        vec3 sp = normalize(vec3(p - vec2(x,y), z));\n        sp = reflect(vec3(0.0, 0.0, -1.0), sp);\n        //vec2 fon1 = lonlat(rota*sp); //get longitude and latitude\n        col = mix(col, texture(iChannel0, rota1*sp).rgb, 0.5);  //get color from texture\n        \n\n      \n        float f = asin(pow(l/r, 2.0));\n        f =  smoothstep(0., PI/2.0, f);\n        vec3 rad = hsb2rgb(vec3(f,1.0,1.0));\n        col = mix(col, rad, 0.1);\n        \n    }\n\n    \n    fragColor = vec4(col, 1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}