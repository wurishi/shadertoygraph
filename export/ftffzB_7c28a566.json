{"ver":"0.1","info":{"id":"ftffzB","date":"1651021702","viewed":102,"name":"Raymarcher One","username":"TheKGS","description":"An attempt at raymarching. I would like to get rid of the black contours, but I don't know how to do that without setting the iteration number really high.\n\nThanks to Carandiru for the fix to the above problem!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float df(vec3 point, vec3 sphere, float radius)\n{\n    return length(point - sphere) - radius;\n}\n\nvec3 getnormal(vec3 point, vec3 sphere)\n{\n    return normalize(point - sphere);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx;\n    //uv.y = uv.y + 0.1;\n\n    vec3 direction = vec3(uv, 1.0) - vec3(0.5, 0.5, 0.0);\n    direction = normalize(direction);\n\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    vec3 curpoint = vec3(0.0, 0.0, 0.0);\n    float d = 0.0;\n    for (int i = 0; i <= 90; i++){\n        d = df(curpoint, vec3(0.0, 0.0, 1.0), 0.3);\n        \n        if (d <= 0.001)\n        {\n            col.x = dot(getnormal(curpoint, vec3(0.0, 0.0, 4.0)), vec3(0.0, -1.0, -0.4));\n            col.y = dot(getnormal(curpoint, vec3(0.0, 0.0, 1.0)), vec3(0.0, -1.0, -0.2));\n            col.z = dot(getnormal(curpoint, vec3(0.0, 0.0, 1.0)), vec3(0.0, -1.0, 0.1));\n            col = col * float(i) / 50.0;\n            break;\n        }\n\n        //col.x = 0.01 * float(i);\n        \n        curpoint = curpoint + d * direction;\n        vec3 offs = vec3(-0.5, -0.5, 0.0);\n        curpoint = mod ((curpoint - offs), vec3(1.0, 1.0, 1.0)) + offs;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}