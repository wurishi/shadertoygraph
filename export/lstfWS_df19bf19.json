{"ver":"0.1","info":{"id":"lstfWS","date":"1526611359","viewed":93,"name":"DJANG - Smoothstep Function","username":"d_matrix","description":"build-in function","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["smoothstep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(in vec2 uv, in float y)\n{\n    const float thickness = 0.02;\n    return smoothstep(uv.y - thickness, uv.y, y) -\n           smoothstep(uv.y, uv.y + thickness, y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float y = smoothstep(0.0, 1.0, uv.x);\n    \n    const vec3 green = vec3(0.1, 0.9, 0.1);\n    const vec3 white = vec3(0.9, 0.9, 0.9);\n    \n    float pct = plot(uv, y);\n    vec3 color = pct * green +\n                 (1.0 - pct) * white * step(0.5, uv.x);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}