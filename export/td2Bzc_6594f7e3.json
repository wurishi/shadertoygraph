{"ver":"0.1","info":{"id":"td2Bzc","date":"1590711791","viewed":128,"name":"Over the Moon Pt. 1 :P","username":"hopeliz","description":"Followed The Art of Code's \"Over the Moon\" tutorial:  https://youtu.be/LLZPnh_LK8c\nCreated for Day 16 of a 100 Days of Shaders and Textures project","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["trees","movement","randomness"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\nfloat createTaperBox(vec2 point, float bottomWidth, float topWidth, float yBottom, float yTop, float blur) {\n    // Bottom edge    \n    float m = S(-blur, blur, point.y - yBottom);\n    // Top edge\n    m *= S(blur, -blur, point.y - yTop);\n    // Sides, mirrored\n    point.x = abs(point.x);\n    \n    float w = mix(bottomWidth, topWidth, (point.y - yBottom) / (yTop - yBottom));\n    m *= S(blur, -blur, point.x - w);\n    \n    return m;\n}\n\nvec4 createTree(vec2 uv, vec3 color, float blur) {\n    \n    // --- Trunk ---\n    float m = createTaperBox(uv, 0.03, 0.03, -0.05, 0.25, blur);\n    // --- Canopy 1 ---\n    m += createTaperBox(uv, 0.2, 0.1, 0.25, 0.5, blur);\n    // --- Canopy 2 ---\n    m += createTaperBox(uv, 0.15, 0.05, 0.5, 0.75, blur);\n    // --- Top ---\n    m += createTaperBox(uv, 0.1, 0.0, 0.75, 1.0, blur);\n    \n    float shadow = createTaperBox(uv - vec2(0.2, 0.0), 0.1, 0.5, 0.15, 0.25, blur);\n    shadow += createTaperBox(uv + vec2(0.25, 0.0), 0.1, 0.5, 0.45, 0.5, blur);\n    shadow += createTaperBox(uv - vec2(0.2, 0.0), 0.1, 0.5, 0.7, 0.75, blur);\n    color -= shadow * 0.8;\n    //m = 1.0;\n    \n    return vec4(color, m);\n}\n\nfloat GetHeight(float x) {\n    return sin(x * 0.435) + sin(x) * 0.3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // Move origin to the center\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    uv.x += iTime * 0.1;\n\t//uv.y += 0.5;\n    uv *= 5.0;\n    vec4 color = vec4(0.0);\n    \n    float blur = 0.005;\n    \n    float id = floor(uv.x);\n    float n = fract(sin(id * 234.12) * 3854.3) * 2.0 - 1.0;\n    float x = n * 0.3;\n    float y = GetHeight(uv.x);\n    // Ground\n    color += S(blur, -blur, uv.y + y);\n    \n    y = GetHeight(id + 0.5 + x);\n    \n    uv.x = fract(uv.x) - 0.5;\n    vec4 tree = createTree((uv - vec2(x, -y)) * vec2(1.0, 1.0 + n * 0.25), vec3(1.0), blur);\n    \n    // Visualize coords\n    //color.rb = uv;\n    \n    color = mix(color, tree, tree.a);\n    \n    float thickness = 1.0 / iResolution.y;\n    \n    // See axes\n    //if (abs(uv.x) < thickness) { color.g = 1.0; }\n    //if (abs(uv.y) < thickness) { color.r = 1.0; }\n\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}