{"ver":"0.1","info":{"id":"XlsSDj","date":"1439879544","viewed":228,"name":"shifting rainbow v2","username":"JamesHagerman","description":"Playing with some basic math and the hsv2rgb function to build some crazy color options...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sensatron"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Smooth HSV to RGB conversion \nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mv = iMouse.xy/iResolution.xy;\n    \n    uv.y = atan(uv.y-0.5-sin(iTime*0.5),uv.x)+sin(iTime*0.5);\n    \n    uv.y += atan(uv.x-0.5-cos(iTime*0.5),uv.y)+cos(iTime*0.5);\n    \n    //uv.y += log(sqrt(uv.x*uv.x+uv.y*uv.y));\n    \n    \n    vec3 outputColor = hsv2rgb_smooth(vec3(uv.y, 1.0, 1.0));\n    \n        // Use the color pallet:\n    vec3 pallet1 = pal( uv.y, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.10,0.20) );\n    vec3 pallet2 = pal( uv.y, vec3(0.8,0.5,0.4),vec3(0.2,0.4,0.2),vec3(2.0,1.0,1.0),vec3(0.0,0.25,0.25) );\n    \n    outputColor = mix(outputColor, pallet1, mv.x);\n    outputColor = mix(outputColor, pallet2, mv.y);\n    \n\tfragColor = vec4(outputColor,1.0);\n}","name":"Image","description":"","type":"image"}]}