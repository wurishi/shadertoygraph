{"ver":"0.1","info":{"id":"DlBGzc","date":"1673716157","viewed":92,"name":"Lio's Mandelbrot","username":"liobello","description":"My first shader\nIdk how to implement double precision in webgl, so if anyone knows, please comment.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 color(float i) {\n    vec3 col = vec3(0);\n    col = vec3(1,sin(i/11.0)/2.0+0.5,0.0);\n    col = mix(col, vec3(sin(i/11.0)/2.0+0.5,sin(i/17.0+iTime/5.0)/2.0+0.5,sin(i/7.0)/2.0+0.5), sin(i/31.0)/2.0+0.5);\n    if (sin(i/17.0)<-0.5 && sin(iTime-i)<-0.1) {\n        col = vec3(0);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = pow(1.6, iTime+10.0);\n    float x = 0.419;\n    float y = 0.2014756;\n    float iterations = 500.0;\n    float cR = (fragCoord.x-iResolution.x/2.0)/zoom+x;\n    float cI = (fragCoord.y-iResolution.y/2.0)/zoom+y;\n    float zR = 0.0;\n    float zI = 0.0;\n    \n    vec3 col = vec3(0.0,0.0,0.0);\n    \n    for (float i = 0.0; i < iterations; i++) {\n        float tmpZR = zR;\n        zR = zR*zR-zI*zI+cR;\n        zI = 2.0*tmpZR*zI+cI;\n        if (zR*zR+zI*zI > 100.0) {\n            col = color(i+1.0-log(log(zR*zR+zI*zI))/log(2.0));\n            break;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}