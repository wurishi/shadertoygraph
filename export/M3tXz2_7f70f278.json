{"ver":"0.1","info":{"id":"M3tXz2","date":"1719310942","viewed":51,"name":"Minecraft Moon phases","username":"MellowArpeggiation","description":"Replicates vanilla MC moon phase shading, complete with the weird squared but spherical shading. Used in the JameH2 Space Fork of HBM's Nuclear Tech Mod on 1.7.10","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["minecraft","pixelated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nvec2 quantize(vec2 inp, vec2 period) {\n\treturn floor(inp / period) * period;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = 2.25 * quantize(fragCoord.xy / iResolution.xy, vec2(0.0325, 0.0325)) - 1.1;\n    vec2 suv = 2.0 * quantize(fragCoord.xy / iResolution.xy, vec2(0.0325, 0.0325)) - 1.0;\n    \n    //float angle = (iMouse.x / iResolution.x) * 2.0 - 1.0;\n    float angle = mod(iTime * 0.1, 1.0) * 2.0 - 1.0;\n    vec3 light = vec3(sin(angle * PI), 0.0, cos(angle * PI));\n\t\n    vec3 n = vec3(uv, sqrt(1. - clamp(dot(uv, uv), 0., 1.)));\n    float brightness = dot(n, light);\n    \n    // when nearly new moon, ring glow\n    brightness = max(brightness, (abs(angle) - 0.7) * clamp(dot(suv, suv), 0.0, 1.0));\n    \n    // become full square when nearing full illumination\n    if (abs(angle) < 0.5) {\n        if (angle < 0.0) {\n            brightness = angle * 4.0 + 2.0 - uv.x;\n        } else {\n            brightness = -angle * 4.0 + 2.0 + uv.x;\n        }\n    }\n    \n    // minimum brightness\n    brightness = max(brightness, 0.1);\n\n    vec3 color = vec3(1.0) * brightness;\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}