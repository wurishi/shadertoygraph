{"ver":"0.1","info":{"id":"DdccRr","date":"1694647674","viewed":35,"name":"The Beginning!","username":"ElectrizedAdam","description":"my first ever shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["firstshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Uses Moon Shape Inigo Quilez and some functions from another resources\nvec3 palette( in float t) {\n    vec3 a = -vec3(1.938, 0.288, -0.012);\n    vec3 b = -vec3(-0.052, -3.442, 0.978);\n    vec3 c = -vec3(2.278, 1.588, 3.748);\n    vec3 d = -vec3(1.717, 2.648, 1.628);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdMoon(vec2 p, float d, float ra, float rb ) {\n    p.y = abs(p.y);\n    float a = (ra*ra - rb*rb + d*d)/(2.0*d);\n    float b = sqrt(max(ra*ra-a*a,0.0));\n    if( d*(p.x*b-p.y*a) > d*d*max(b-p.y,0.0) )\n          return length(p-vec2(a,b));\n    return max( (length(p          )-ra),\n               -(length(p-vec2(d,0))-rb));\n}\n\nmat2 rotate(float angle) {\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = ((2.0*fragCoord-iResolution.xy)/iResolution.y)*-1.;\n    p *= rotate(iTime/3.14);\n  \n    vec2 p0 = p;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 5.0; i++) {\n        //p = fract(p*11.)-0.5;\n    \n        float ra = 1.0;\n        float rb = 0.8;\n        float di = 1.2*-sin(6.5);\n\n        float d = sdMoon(p0+p, di, ra, rb )*exp(-sdMoon(p0+p, di, ra, rb ));//-iTime;\n        vec3 col = palette(d*-3.1415+iTime/3.14);\n\n        d = sin(d*2.0+iTime)/2.0;\n        d = abs(d);\n        d = pow(0.01/d,1.35);\n\n        finalColor += col * d * d;\n        fragColor = vec4(finalColor,1.0);\n        fragColor = vec4(finalColor/d,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}