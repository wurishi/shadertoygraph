{"ver":"0.1","info":{"id":"cttcDr","date":"1699074364","viewed":30,"name":"relief of B","username":"chenxianming","description":"relief of B","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n\nvec2 path1[3] = vec2[]( vec2( 0.25, 4 ), vec2( -2, 5  ), vec2( -2, -2 ) );\nvec2 path2[3] = vec2[]( vec2( 0.08999999999999997, 4 ), vec2( 1.1999999999999993, 5.96  ), vec2( 1.2000000000000002, -2.8 ) );\n\nfloat getPath( vec2[3] path, vec2 uv ){\n    return path[0].x * pow( uv.x, 2. ) + path[0].y * pow( uv.y, 2. ) + path[1].x * uv.x * uv.y + path[1].y * uv.x + path[2].x * uv.y + path[2].y;\n}\n\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\n\nfloat B( vec3 p ){\n    float d = .1;\n    \n    vec3 po = p;\n    \n    p.x += 1.;\n    p.y -= 1.;\n    \n    \n    d = smin(\n        d,\n        max(\n            max(\n                abs( p.x ) - .15,\n                abs( p.z ) - .8\n            ),\n            abs( p.y / 2. + .5 ) - 1.5\n        ),\n        .0\n    );\n\n\n    p = po;\n    p.y -= 1.6;\n    p.y -= getPath( path1, p.xy );\n    \n    d = smin(\n        d,\n        max(\n            max( abs( p.x ) - 1., abs( p.z ) - 1. ),\n            abs( p.y / 2. + .5 ) - .5\n        ),\n        .3\n    );\n    \n    \n    p = po;\n    p.y += 1.6;\n    p.y -= getPath( path2, p.xy );\n    \n    d = smin(\n        d,\n        max(\n            max( abs( p.x ) - 1., abs( p.z ) - 1. ),\n            abs( p.y / 2. + .5 ) - .5\n        ),\n        .3\n    );\n\n    return d;\n}\n\n\nfloat df(vec3 p)\n{\n    \n    float d = 1.;\n    \n    p.x += cos( iTime ) * 5.;\n    d = smin(\n        p.z - 0.,\n        B( p ),\n        .5\n    );\n\n    return d;\n}\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = ( V * 2. - I.xy ) / I.y;\n    \n    vec3 c, p, r = vec3( 0., 0., -1. ), o = vec3( u * 5., 1. );\n    float t, d, i;\n    for( ; i < 64.; i++ )\n        p = o + r * t,\n        d = df( p ),\n        t += d;\n    \n    if( d < 1e-3 )\n        c = vec3( clamp(dot(l( p ), vec3(.5, .5, -.3 )), 0.0, 1.0) ) + .3;\n\n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}