{"ver":"0.1","info":{"id":"4ctyWM","date":"1730738804","viewed":99,"name":"3-component vs spectral rainbow","username":"OscarSaharoy","description":"This compares how a rainbow is rendered with 3 rgb wavelengths (left) vs the whole spectrum (right, a bit ugly but still). I think a lot of detail can be missing from renders involving wavelength dependent effects like scattering","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rainbow","spectral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sq( float x ) {\n    return pow( x, 2. );\n}\n\nfloat ln2( float x ) {\n    return sq(log(x));\n}\n\nvec3 xyz( float l ) {\n    // cie standard observer cmfs from https://jcgt.org/published/0002/02/01/\n    float x = 0.398 * exp( -1250. * ln2(( l + 570.1 ) / 1014.) )\n            + 1.132 * exp( -234. * ln2(( 1338. - l ) / 743.5) );\n    float y = 1.011 * exp( -.5 * sq(( l - 556.1 ) / 46.14) );\n    float z = 2.060 * exp( -32. * ln2(( l - 265.8 ) / 180.4) );\n\n    return vec3( x, y, z );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = fragCoord/iResolution.xy - vec2(.5);\n    \n    mat3 Mi = mat3(\n         3.2404542, -1.5371385, -0.4985314,\n        -0.9692660,  1.8760108,  0.0415560,\n         0.0556434, -0.2040259,  1.0572252\n    );\n\n    vec3 light = vec3(0);\n\n    if( uv.x > 0. ) {\n        float l = (uv.y + 1.17) * 450.;\n        light = Mi * xyz(l) * .6;\n    } else {\n        vec3 i =\n            1. /\n            pow(vec3(2.),\n                pow(uv.y + vec3(-.1, .0, .1), vec3(2.))\n                * 100.\n            );\n        light = i;\n    }\n\n    // gamma correction\n    light = pow(light, vec3(1. / 2.2));\n\n    fragColor = vec4( light, 1. );\n}\n","name":"Image","description":"","type":"image"}]}