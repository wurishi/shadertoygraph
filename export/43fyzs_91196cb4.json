{"ver":"0.1","info":{"id":"43fyzs","date":"1726532236","viewed":10,"name":"tangled truchet (wrong)","username":"Elsio","description":"quad trouchet pattern","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["quad","trouchet"],"hasliked":0,"parentid":"X3fcRl","parentname":"Quad Trouchet "},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rnd(vec2 p) {\n    p = fract(p * vec2(123.456, 345.67));\n    p += dot(p, p + 34.345);\n    return fract(p.x * p.y);\n}\n\nfloat norm(vec2 p, float k) {\n    p = abs(p);\n    return pow(pow(p.x, k) + pow(p.y, k), 1. / k);\n}\n\nfloat trouchet(vec2 p) {\n    \n    vec2 id = floor(p), q;\n    \n    p = fract(p) - .5;\n    \n    float n = rnd(id);\n    \n    if(n < .5) p.x *= -1.; // inv x\n    \n    float s = p.x > -p.y ? 1. : -1.;\n    float dist = norm(p - vec2(.5, .5) * s, 3.);\n    \n    float edgeBlur = .01;\n    float radius = .5;\n    float thickness = .05;\n    \n    float d = abs(dist - radius) - thickness;\n    \n    \n    return d;\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy;\n    \n    u = 4. * (u - .5 * r) / r.y;\n    \n    float t = mod(iTime, 7200.);\n    \n    u.x += t;\n    \n    float t1, t2, t3, t4;\n    \n    t3 = length(\n             fract(\n                 .5 * (u + vec2(1.5, 0)) * mat2(1,-1,1,1) \n             ) - .5\n         ) - .4;\n    \n    t4 = length(\n             fract(\n                 .5 * (u + vec2(.5, 0)) * mat2(1,-1,1,1) \n             ) - .5\n         ) - .4;\n    \n    t1 = smoothstep(.05, 0., trouchet(u))       * .25 + t3 * .5;\n                   \n    t2 = smoothstep(.05, 0., trouchet(u + .5))  * .25 + t4 * .5;\n    \n    \n    o.r = dot(vec4(t1, 0, 0, 0), vec4(1));\n    o.g = dot(vec4(0, t2, 0, 0), vec4(1));\n    o.b = dot(vec4(0, 0, t3, 0), vec4(1));\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}