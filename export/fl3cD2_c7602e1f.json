{"ver":"0.1","info":{"id":"fl3cD2","date":"1660533666","viewed":149,"name":"Panorama","username":"suruochang","description":"全景镜头，将图片左右两边进行拼接。如果左右缝合得不好，接缝边会出现错位的情况，所以对原始的360°全景图要求很高。","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["panorama","fisheyelens"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float M_PI = 3.14159265358979323846264338327950288;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 samplePosion = (uv - 0.5 ) * 2.0;\n    \n    samplePosion.x *= iResolution.x/iResolution.y;\n    \n    float radius = length(samplePosion);\n    \n    float theta = atan(samplePosion.y / samplePosion.x);  // (-PI/2 ~ PI/2)\n    \n    float piece = (theta + M_PI / 2.0 ) / (M_PI * 2.0);  // (0 ~ 0.5)\n    \n    piece = (samplePosion.x >= 0.0) ? piece + 0.5 : piece; //samplePosion.x > 0 => (0.5 ~ 1.0)\n    \n    vec2 newPosition = vec2(piece, radius * (iResolution.y/iResolution.x));\n\n    // Output to screen\n    fragColor = texture(iChannel0, newPosition);\n}","name":"Image","description":"","type":"image"}]}