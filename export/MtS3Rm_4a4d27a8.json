{"ver":"0.1","info":{"id":"MtS3Rm","date":"1427645460","viewed":599,"name":"2d god rays attempt","username":"public_int_i","description":"trying to do god rays from a 2d map","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["2d","rays","god"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n#define clouds (texture(iChannel0,cuv*.1).x+texture(iChannel1,cuv*.2).x*.4 - .8)\n\nconst vec2 sunPos = vec2(.5);\nconst vec3 sunColor = vec3(1.,.95,.95)*.8;\n\nconst float sunSize = .03;\nconst float godrayReach = .3;\nconst int godrayIter = 32;\nconst float godrayIntensity = .04;\nconst float godrayStep = (sunSize/2.)/float(godrayIter);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 timeMove = vec2(iTime*.04,0.);\n    vec2 cuv = uv+timeMove;\n    \n    vec2 sunDir = sunPos-uv;\n    float sunLen = length(sunDir);\n    vec3 c;\n    if (sunLen < sunSize) {\n        c = sunColor;\n    } else {\n        c = vec3(.3,.3,.8);\n    }\n    \n    float cb;\n    float cl = clouds;\n   \tc = mix(c,vec3(.8,.8,cl),cl);\n    cl = 0.;\n    if (sunLen < godrayReach) {\n        \n        sunDir = normalize(sunDir);\n        uv += sunDir*max(0.,(sunLen-sunSize));\n        sunLen = 1.-sunLen/godrayReach;\n        int maxIter = int(sunLen*float(godrayIter));\n        \n        for (int i = 0; i < godrayIter; i++) {\n            \n            cuv = uv+timeMove;\n           \tcb = clouds;\n            cl += max(0.,1.-(floor(cb+.4)*.6+cb*.4))*sunLen;\n                \n            if (i > maxIter) {\n                break;\n            }\n            \n            uv += sunDir*godrayStep;\n        }\n        \n        cl *= godrayIntensity;\n        c += sunColor*cl;\n    }\n    \n    fragColor = vec4(c,1.);\n}","name":"Image","description":"","type":"image"}]}