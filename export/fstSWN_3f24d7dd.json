{"ver":"0.1","info":{"id":"fstSWN","date":"1633191800","viewed":55,"name":"LD49","username":"Althar","description":"A prototype idea for LD49 that didn't quite make the cut but I thought the effect & colours was pretty neat. \n\nMouse click & drag to create waves.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["synesthesia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float DISPLACEMENT_SCALE = 5.0;\n\n// Taken from : https://gist.github.com/983/e170a24ae8eba2cd174f\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 bufferA = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    // Output to screen\n    float value = clamp(bufferA.z / DISPLACEMENT_SCALE, -1.0, 1.0) * 0.5 + 0.5;\n    vec3 colour = hsv2rgb(vec3(bufferA.x, 1.0, value));\n    fragColor = vec4(colour, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Time step\n    float time_step = clamp(iTimeDelta * SIMULATION_SPEED, 0.0, 1.0);\n    \n    vec4 current_sample = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    // Spawn drop\n    if (iMouse.z > 0.0)\n    {\n        float size = 1.0;\n        float distance_to_mouse = length(fragCoord.xy - iMouse.xy);\n        float strength          = 1.0 - clamp( distance_to_mouse / size, 0.0, 1.0 );\n        \n        float hue = random(fragCoord.xy + vec2(iTime, iTimeDelta));\n        \n        current_sample = vec4(mix(current_sample.x, hue, strength), 1.0, current_sample.z, current_sample.w + STRENGTH * strength);\n    }\n    \n    // Input\n    vec4 in_samples = sample_neighbours(iChannel0, ivec2(fragCoord));\n    \n    // New spring\n    float new_spring = current_sample.w + (in_samples.z - current_sample.z * SPRING_TENSION) * time_step;\n    \n    fragColor = vec4(current_sample.x, 1.0, current_sample.z, new_spring);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 offsets[] = ivec2[](\n        ivec2(-1, -1),\n        ivec2( 0, -1),\n        ivec2( 1, -1),\n        ivec2(-1,  0),\n        //ivec2( 0,  0),\n        ivec2( 1,  0),\n        ivec2(-1,  1),\n        ivec2( 0,  1),\n        ivec2( 1,  1)\n    );\n    \n    // Time step\n    float time_step = clamp(iTimeDelta * SIMULATION_SPEED, 0.0, 1.0);\n    \n    // Current cell\n    vec4 current_sample = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    // New height\n    float new_height = (current_sample.z + current_sample.w * time_step) * DAMPER_RATE;\n    \n    // New colour\n    float new_hue = fract(current_sample.z * 0.1);\n\n    // Final\n    fragColor = vec4(new_hue, 1.0, new_height, current_sample.w);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float STRENGTH = 100.0;\nconst float SIMULATION_SPEED = 10000.0;\nconst float SPRING_TENSION = 1.0005;//1.125;//1.125;\nconst float DAMPER_RATE = 1.0;//0.999;\n\n// Common functions\nfloat random( vec2 p )\n{\n    vec2 K1 = vec2(\n        23.14069263277926, // e^pi (Gelfond's constant)\n        2.665144142690225 // 2^sqrt(2) (Gelfondâ€“Schneider constant)\n    );\n    return fract( cos( dot(p,K1) ) * 12345.6789 );\n}\n\nvec4 sample_neighbours(sampler2D sampler, ivec2 fragCoord)\n{\n    ivec2 offsets[] = ivec2[](\n        ivec2(-1, -1),\n        ivec2( 0, -1),\n        ivec2( 1, -1),\n        ivec2(-1,  0),\n        //ivec2( 0,  0),\n        ivec2( 1,  0),\n        ivec2(-1,  1),\n        ivec2( 0,  1),\n        ivec2( 1,  1)\n    );\n    \n    // Input\n    vec4 in_samples = vec4(0.0);\n    for (uint sample_index ; sample_index < 8u ; ++sample_index)\n    {\n        in_samples += texelFetch(sampler, ivec2(fragCoord) + offsets[sample_index], 0);\n    }\n    in_samples /= 8.0;\n    \n    // Done\n    return in_samples;\n}","name":"Common","description":"","type":"common"}]}