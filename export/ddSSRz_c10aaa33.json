{"ver":"0.1","info":{"id":"ddSSRz","date":"1669860199","viewed":103,"name":"LOVE XCC","username":"carsonche","description":"LOVE-thanks by https://www.shadertoy.com/view/MsfBDsï¼Œchange from this","likes":5,"published":1,"flags":32,"usePreview":1,"tags":["love"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI radians(180.0)\n#define PI2 PI*2.0\n#define R 3.5\n#define A fract(iTime / R)\n#define T sin(PI2 * A)*0.5+0.5\n\nmat2 rotate(in float a)\n{\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nmat3 lookat(in vec3 eye, in vec3 target)\n{\n\tvec3 w = normalize(eye-target);\n\tvec3 u = normalize(cross(w,vec3(0.0,1.0,0.0)));\n\tvec3 v = normalize(cross(u,w));\n    return mat3(u,v,w);\n}\n\n\n\n// http://qiita.com/muripo_life/items/f24408ca1d06eb0658e3\nfloat sdHeart(in vec3 p, in float h)\n{\n    p.y += 0.5; // position ajust\n    \n    p.z *= 1.5;\n    return ( sqrt( dot(p,p) - pow(p.x*p.x+p.z*p.z/80.0,0.45) *p.y ) - h ) / 4.0;\n      \n}\n\n\n\nfloat map(in vec3 p)\n{  \n  \n   float  scale = 1.7-0.1*sin(iTime*5.0);\n    float de = sdHeart(p,scale);\n   float de1 = sdHeart(p,scale-1.);\n    p=normalize(p);\n    vec2 uv = vec2(atan(p.x, p.y), acos(p.z));\n     \n    uv.y+=0.2*sin(iTime*1.0);\n    uv = floor(uv  * 100.0) / 100.0;\n   \n    return max(de, -2.*de - fract(sin(uv.x *uv.y *100.0) * 1e5) +0.9);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n vec3 bufferA_col = texture(iChannel0,fragCoord/iResolution.xy).rgb;\n    vec2 p = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0, 2, 3.5);\n    vec3 rd = normalize(vec3(p, -2));    \n    vec3 ta = vec3(0,0,0);\n  \n    rd = lookat(ro,ta) * rd;\n    vec3 col = vec3(0.1);\n\tconst float maxd = 10.0, precis = 0.001;\n\tfloat t = 0.0, d;\n \tfor(int i = 0; i < 32; i++)\n  \t{\n    \tt += d = map(ro + rd * t);\n    \tif(d < precis || t > maxd) break;\n  \t}\n  \tif(d < precis) col = mix(vec3(0.64,0.39,0.8), vec3(0.84,0.2,0.2), T);\n    col = max(col,bufferA_col);\n    fragColor = vec4(col, 1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define C(c) U.x-=.5; O+= char(U,64+c)\n\nvec4 char(vec2 p, int c) \n{\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel0, p/16. + fract( vec2(c, 15-c/16) / 16. ), dFdx(p/16.),dFdy(p/16.) );\n}\n\nvoid mainImage( out vec4 O, vec2 uv )\n{\n    O = vec4(0.0);\n    uv /= iResolution.y;\n    vec2 position = vec2(0.5,0.5);\n    float FontSize = 8.;\n    vec2 U = ( uv - position)*128.0/FontSize;\n    C(3);C(3);C(24);C(-32);C(12);C(15);C(22);C(5);C(-32);C(24);C(3);C(3);C(-31);\n    O = O.xxxx;\n}","name":"Buffer A","description":"","type":"buffer"}]}