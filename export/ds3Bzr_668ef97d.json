{"ver":"0.1","info":{"id":"ds3Bzr","date":"1697044310","viewed":47,"name":"Color palette - by me","username":"bluearrowx","description":"Color palette","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["color","palette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec4 getColor2(vec2 uv){\n    const int ARRAY_LEN = 6;\n    vec4 COLORS[ARRAY_LEN] = vec4[ARRAY_LEN](\n        vec4(0.20, 0.51, 0.63, 1.0),\n        vec4(0.33, 0.63, 0.66, 1.0),\n        vec4(0.98, 0.44, 0.46, 1.0),\n        vec4(0.99, 0.56, 0.49, 1.0),\n        vec4(0.95, 0.78, 0.60, 1.0),\n        vec4(0.99, 0.93, 0.75, 1.0)\n    );\n    \n    float X = 1.0/float(ARRAY_LEN);\n    float curr = 0.0;\n    \n    for (int i = 0; i < ARRAY_LEN; i++) {\n        float I = float(i);\n        if ((uv.x >= (X * I)) && (uv.x <= (X * (I + 1.0)))) { \n          return COLORS[i];\n        }\n    }\n\n    return vec4(1.0, 0.0, 0.0, 1.0);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor =  getColor2(uv); \n}","name":"Image","description":"","type":"image"}]}