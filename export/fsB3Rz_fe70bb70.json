{"ver":"0.1","info":{"id":"fsB3Rz","date":"1616793409","viewed":69,"name":"First Trippy Shader","username":"iamyou__","description":"Trying out Shadertoy with some wavy functions. Really trippy stuff!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ray marching guide (https://michaelwalczyk.com/blog-ray-marching.html) that got me started.\n// \n// Inspiration from my friend who has been doing this quite a while.\n\n\nconst float pi = 3.1415926535897932384626433832795;\n\n/// Map\nfloat map(in vec3 pos){\n    float v1 = sin(pi * (pos.z - pos.y) * (-9.2)+ 130.0);\n    float v2 = cos(pi * (pos.x + pos.z) * (-2.0) - 20.0);\n    \n    float p = v1 * v2 * sin(cos(pi * pos.x * 8.3));\n    float t = mod(iTime, 4.1);   \n    \n    float x = p - 0.3 * pos.y * 0.2;\n    return sin(pi * 0.28521235) * x * t;\n}\n\n\n/// Ray Marching function\nvec3 ray_march(in vec3 ro, in vec3 rd)\n{\n    float total_distance_traveled = 0.0;\n    const int NUMBER_OF_STEPS = 32;\n    const float MINIMUM_HIT_DISTANCE = 0.001;\n    const float MAXIMUM_TRACE_DISTANCE = 1000.0;\n    for (int i = 0; i < NUMBER_OF_STEPS; ++i)\n    {\n        vec3 current_position = ro + total_distance_traveled * rd;\n        float distance_to_closest = map(current_position);\n        if (distance_to_closest < MINIMUM_HIT_DISTANCE) \n        {\n            return current_position;\n        }\n        if (total_distance_traveled > MAXIMUM_TRACE_DISTANCE)\n        {\n            break;\n        }\n        total_distance_traveled += distance_to_closest;\n    }\n    return ro - 1.0 * rd;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    uv.x = -uv.x;\n    vec3 camera_position = vec3(278, 273, -800) * 0.001;\n    vec3 ro = camera_position;\n    vec3 rd = vec3(uv, 1.0);\n    float t = 0.0;\n    t += iTime + 0.0001;\n    \n    // Ray march here \n    vec3 current_position = ray_march(ro, rd);    \n    fragColor = vec4(current_position, 1.0);\n}","name":"Image","description":"","type":"image"}]}