{"ver":"0.1","info":{"id":"XX2SWc","date":"1711143498","viewed":128,"name":"2d animation going up","username":"jorge2017a2","description":"2d animation going up","likes":10,"published":1,"flags":8,"usePreview":0,"tags":["2d","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//2d animation going up\n//---22-marzo-2024\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nstruct TLinea\n{  vec2 A;\n   vec2 B;\n};\n\nTLinea arr[12];\nTLinea arr0[11];\n\n\n//escalera\nvec2 pt1_0[22]=vec2[](\nvec2(0.701,0.177),vec2(0.702,0.262),\nvec2(0.702,0.262),vec2(0.601,0.262),\nvec2(0.601,0.262),vec2(0.599,0.355),\nvec2(0.599,0.355),vec2(0.503,0.36),\nvec2(0.503,0.36),vec2(0.501,0.45),\nvec2(0.501,0.45),vec2(0.399,0.452),\nvec2(0.399,0.452),vec2(0.399,0.542),\nvec2(0.399,0.542),vec2(0.301,0.54),\nvec2(0.301,0.54),vec2(0.301,0.632),\nvec2(0.301,0.632),vec2(0.2,0.635),\nvec2(0.2,0.635),vec2(0.2,0.177)\n);\n\nvec2 pt1_1[24]=vec2[](\nvec2(0.799,0.54),vec2(0.799,0.506),\nvec2(0.799,0.506),vec2(0.767,0.437),\nvec2(0.767,0.437),vec2(0.762,0.347),\nvec2(0.799,0.506),vec2(0.843,0.437),\nvec2(0.843,0.437),vec2(0.845,0.344),\nvec2(0.799,0.506),vec2(0.8,0.355),\nvec2(0.8,0.355),vec2(0.773,0.265),\nvec2(0.773,0.265),vec2(0.771,0.18),\nvec2(0.771,0.18),vec2(0.743,0.18),\nvec2(0.8,0.355),vec2(0.819,0.265),\nvec2(0.819,0.265),vec2(0.828,0.18),\nvec2(0.828,0.18),vec2(0.799,0.18)\n);\n//--\n\n\nvec2 pt1_2[24]=vec2[](\nvec2(0.799,0.54),vec2(0.799,0.506),\nvec2(0.799,0.506),vec2(0.767,0.437),\nvec2(0.767,0.437),vec2(0.784,0.355),\nvec2(0.799,0.506),vec2(0.843,0.437),\nvec2(0.843,0.437),vec2(0.824,0.357),\nvec2(0.799,0.506),vec2(0.8,0.355),\nvec2(0.8,0.355),vec2(0.773,0.265),\nvec2(0.773,0.265),vec2(0.771,0.18),\nvec2(0.771,0.18),vec2(0.743,0.18),\nvec2(0.8,0.355),vec2(0.819,0.265),\nvec2(0.819,0.265),vec2(0.828,0.18),\nvec2(0.828,0.18),vec2(0.799,0.18)\n);\n//---\n\nvec2 pt1_3[24]=vec2[](\nvec2(0.799,0.54),vec2(0.799,0.506),\nvec2(0.799,0.506),vec2(0.767,0.437),\nvec2(0.767,0.437),vec2(0.784,0.355),\nvec2(0.799,0.506),vec2(0.843,0.437),\nvec2(0.843,0.437),vec2(0.824,0.357),\nvec2(0.799,0.506),vec2(0.8,0.355),\nvec2(0.8,0.355),vec2(0.773,0.265),\nvec2(0.773,0.265),vec2(0.771,0.18),\nvec2(0.771,0.18),vec2(0.743,0.18),\nvec2(0.8,0.355),vec2(0.734,0.293),\nvec2(0.734,0.293),vec2(0.743,0.208),\nvec2(0.743,0.208),vec2(0.721,0.213)\n);\n\nvec2 pt1_4[24]=vec2[](\nvec2(0.799,0.54),vec2(0.799,0.506),\nvec2(0.799,0.506),vec2(0.767,0.437),\nvec2(0.767,0.437),vec2(0.784,0.355),\nvec2(0.799,0.506),vec2(0.843,0.437),\nvec2(0.843,0.437),vec2(0.824,0.357),\nvec2(0.799,0.506),vec2(0.8,0.355),\nvec2(0.8,0.355),vec2(0.773,0.265),\nvec2(0.773,0.265),vec2(0.771,0.18),\nvec2(0.771,0.18),vec2(0.743,0.18),\nvec2(0.8,0.355),vec2(0.719,0.355),\nvec2(0.719,0.355),vec2(0.728,0.27),\nvec2(0.728,0.27),vec2(0.706,0.272)\n);\n\nvec2 pt1_5[24]=vec2[](\nvec2(0.769,0.581),vec2(0.773,0.545),\nvec2(0.773,0.545),vec2(0.732,0.478),\nvec2(0.732,0.478),vec2(0.749,0.396),\nvec2(0.773,0.545),vec2(0.824,0.491),\nvec2(0.824,0.491),vec2(0.843,0.411),\nvec2(0.773,0.545),vec2(0.773,0.393),\nvec2(0.773,0.393),vec2(0.797,0.298),\nvec2(0.797,0.298),vec2(0.83,0.224),\nvec2(0.83,0.224),vec2(0.806,0.213),\nvec2(0.773,0.393),vec2(0.68,0.362),\nvec2(0.68,0.362),vec2(0.689,0.278),\nvec2(0.689,0.278),vec2(0.671,0.27)\n);\n\n\nvec2 pt1_6[24]=vec2[](\nvec2(0.719,0.63),vec2(0.717,0.586),\nvec2(0.717,0.586),vec2(0.66,0.517),\nvec2(0.66,0.517),vec2(0.677,0.434),\nvec2(0.717,0.586),vec2(0.778,0.53),\nvec2(0.778,0.53),vec2(0.797,0.45),\nvec2(0.717,0.586),vec2(0.745,0.432),\nvec2(0.745,0.432),vec2(0.776,0.332),\nvec2(0.776,0.332),vec2(0.83,0.278),\nvec2(0.83,0.278),vec2(0.811,0.26),\nvec2(0.745,0.432),vec2(0.669,0.378),\nvec2(0.669,0.378),vec2(0.68,0.28),\nvec2(0.68,0.28),vec2(0.664,0.27)\n);\n\nvec2 pt1_7[24]=vec2[](\nvec2(0.673,0.681),vec2(0.677,0.63),\nvec2(0.677,0.63),vec2(0.61,0.594),\nvec2(0.61,0.594),vec2(0.627,0.512),\nvec2(0.677,0.63),vec2(0.749,0.602),\nvec2(0.749,0.602),vec2(0.767,0.522),\nvec2(0.677,0.63),vec2(0.678,0.483),\nvec2(0.678,0.483),vec2(0.706,0.38),\nvec2(0.706,0.38),vec2(0.76,0.326),\nvec2(0.76,0.326),vec2(0.741,0.308),\nvec2(0.678,0.483),vec2(0.66,0.378),\nvec2(0.66,0.378),vec2(0.671,0.28),\nvec2(0.671,0.28),vec2(0.652,0.267)\n);\n\nvec2 pt1_8[24]=vec2[](\nvec2(0.649,0.679),vec2(0.651,0.632),\nvec2(0.651,0.632),vec2(0.593,0.568),\nvec2(0.593,0.568),vec2(0.61,0.486),\nvec2(0.651,0.632),vec2(0.701,0.566),\nvec2(0.701,0.566),vec2(0.719,0.486),\nvec2(0.651,0.632),vec2(0.678,0.483),\nvec2(0.678,0.483),vec2(0.591,0.437),\nvec2(0.591,0.437),vec2(0.645,0.383),\nvec2(0.645,0.383),vec2(0.625,0.365),\nvec2(0.678,0.483),vec2(0.66,0.378),\nvec2(0.66,0.378),vec2(0.671,0.28),\nvec2(0.671,0.28),vec2(0.652,0.267)\n);\n\nvec2 pt1_9[24]=vec2[](\nvec2(0.612,0.676),vec2(0.616,0.625),\nvec2(0.616,0.625),vec2(0.553,0.584),\nvec2(0.553,0.584),vec2(0.569,0.501),\nvec2(0.616,0.625),vec2(0.699,0.62),\nvec2(0.699,0.62),vec2(0.717,0.54),\nvec2(0.616,0.625),vec2(0.625,0.478),\nvec2(0.625,0.478),vec2(0.536,0.463),\nvec2(0.536,0.463),vec2(0.543,0.362),\nvec2(0.543,0.362),vec2(0.519,0.362),\nvec2(0.625,0.478),vec2(0.652,0.373),\nvec2(0.652,0.373),vec2(0.664,0.275),\nvec2(0.664,0.275),vec2(0.645,0.267)\n);\n\nvec2 pt1_10[24]=vec2[](\nvec2(0.579,0.735),vec2(0.584,0.689),\nvec2(0.584,0.689),vec2(0.519,0.65),\nvec2(0.519,0.65),vec2(0.49,0.766),\nvec2(0.584,0.689),vec2(0.667,0.689),\nvec2(0.667,0.689),vec2(0.686,0.609),\nvec2(0.584,0.689),vec2(0.59,0.537),\nvec2(0.59,0.537),vec2(0.538,0.46),\nvec2(0.538,0.46),vec2(0.545,0.36),\nvec2(0.545,0.36),vec2(0.516,0.362),\nvec2(0.59,0.537),vec2(0.636,0.432),\nvec2(0.636,0.432),vec2(0.647,0.334),\nvec2(0.647,0.334),vec2(0.623,0.35)\n);\n\nvec2 pt1_11[24]=vec2[](\nvec2(0.573,0.784),vec2(0.579,0.735),\nvec2(0.579,0.735),vec2(0.503,0.789),\nvec2(0.503,0.789),vec2(0.494,0.884),\nvec2(0.579,0.735),vec2(0.656,0.817),\nvec2(0.656,0.817),vec2(0.662,0.923),\nvec2(0.579,0.735),vec2(0.586,0.596),\nvec2(0.586,0.596),vec2(0.53,0.514),\nvec2(0.53,0.514),vec2(0.538,0.414),\nvec2(0.538,0.414),vec2(0.512,0.414),\nvec2(0.586,0.596),vec2(0.588,0.488),\nvec2(0.588,0.488),vec2(0.599,0.391),\nvec2(0.599,0.391),vec2(0.584,0.36)\n);\n\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\nvec3 D2(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0)); return colOut; }\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\n\nvec3 hacerEsc(vec2 p, vec3 colout,vec3 colin,  int poc, float rc)\n{\n    vec2 a, b;\n    int k,op;\n    k=0;\n\n    op=0;\n    for(int i=0;i<22;i++)\n    { a=pt1_0[i];arr0[k].A=a;\n      b=pt1_0[i+1];arr0[k].B=b;\n      i++;k++;  \n    }\n    \n    float dfin,d1,d2;\n    dfin=9999.9;\n    bool blncol;\n    \n    blncol=false;\n    for(int i=0;i<11;i++)\n    {\n        a=arr0[i].A;\n        b=arr0[i].B;\n        d1=sdSegment(p, a,b );\n        dfin=min(dfin,d1);\n        \n    }\n\n    colout=D2(colin, colout,abs(dfin)-0.01);\n   return colout;\n    \n}\n\n\nvec3 hacerCuerpo(vec2 p, vec3 colout,vec3 colin,  int poc, float rc)\n{\n    vec2 a, b;\n    int k,op;\n    k=0;\n    op=int(mod((iTime+float(poc))*3.0,11.0));\n    \n    for(int i=0;i<24;i++)\n    {\n        \n        if(op==0)\n        {  a=pt1_1[i];arr[k].A=a;\n           b=pt1_1[i+1];arr[k].B=b;\n            i++;k++;\n        }\n        \n        \n        if(op==1)\n        {  a=pt1_2[i]; arr[k].A=a;\n           b=pt1_2[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        \n        if(op==2)\n        {  a=pt1_3[i]; arr[k].A=a;\n           b=pt1_3[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        if(op==3)\n        {  a=pt1_4[i]; arr[k].A=a;\n           b=pt1_4[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        \n        if(op==4)\n        {  a=pt1_5[i]; arr[k].A=a;\n           b=pt1_5[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        if(op==5)\n        {  a=pt1_6[i]; arr[k].A=a;\n           b=pt1_6[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        if(op==6)\n        {  a=pt1_7[i]; arr[k].A=a;\n           b=pt1_7[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        \n        if(op==7)\n        {  a=pt1_8[i]; arr[k].A=a;\n           b=pt1_8[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        if(op==8)\n        {  a=pt1_9[i]; arr[k].A=a;\n           b=pt1_9[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        if(op==9)\n        {  a=pt1_10[i]; arr[k].A=a;\n           b=pt1_10[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        if(op==10)\n        {  a=pt1_11[i]; arr[k].A=a;\n           b=pt1_11[i+1];  arr[k].B=b;\n            i++; k++;\n        }\n        \n        \n    }\n    \n    float dfin,d1,d2;\n    dfin=9999.9;\n    bool blncol;\n    \n    blncol=false;\n    for(int i=0;i<12;i++)\n    {\n        a=arr[i].A;\n        b=arr[i].B;\n        d1=sdSegment(p, a,b );\n        dfin=min(dfin,d1);\n    }\n\n    d2= sdCircle( p-arr[0].A-vec2(0.0,0.05), rc );\n   colout=D2( colin, colout,abs(d2)-0.01);\n   colout=D2(colin, colout,abs(dfin)-0.01);\n   \n   return colout;\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   //vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\t//uv.x *= iResolution.x/iResolution.y;\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    \n    uv-=vec2(-0.25,-0.75);\n    float esc=0.75;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(1.0); \n    float t=iTime;\n    col= hacerEsc(uv-vec2(-1.01,0.0),col,vec3(1.0,0.0,0.0),0,0.05);\n    col= hacerCuerpo(uv-vec2(-1.0,0.0),col,vec3(0.0),0,0.05);\n    \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float ttotal=2.0;\n//Modificado por Jorge2017a2---jorgefp\n\n//referencia Iq, gaz, reinder,ollerich\n\n#define PI acos(-1.)\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n#define TWO_PI 6.2831\n\nconst float pi = 3.1415927;\nconst float tau = 6.283185;\n\nconst float MIDIOFFSET = 69.0;\n#define PIH (PI*.5)\n\n\nstruct tditty\n{\n    float dt;\n    float bpm;\n};\n\nstruct tenv\n{\n    float value;\n};\n\n\n\n///------------\nstruct TNote2\n{\n    float note;\n    float iom;\n    float mul;\n};\n\nstruct TMetallicFm\n{\n    float t;\n    float iom;\n    float mul;\n};\n\n\n\nTNote2 objinputt;\nTMetallicFm objMetal;\n\n\n\ntditty ditty;\ntenv envv;\n\nfloat dt;\n\n\n\n// 1D hash, from https://www.shadertoy.com/view/4djSRW\nfloat random(float pp) \n{\n    float p=pp;\n\tp = fract(p * 0.2031);\n\tp *= p + 66.66;\n\tp *= p + 33.33;\n\treturn fract(p*1.1);\n}\n\n\n// MIDI note to frequency formula\nfloat noteFreq(float note) \n{\n\treturn 440.0 * exp2((note - MIDIOFFSET) / 12.0);\n}\n\n// MIDI note to frequency formula\nfloat midi_to_hz(float note) {\n\treturn 440.0 * exp2((note - MIDIOFFSET) / 12.0);\n}\n\n\nfloat envelope( float a,float d,float s,float r,float du,float t)\n{\nfloat res;\n\n if( t < a)\n {\n   // From t=0 to t=a (attack period)\n    res= t / a; // the volume increases from 0.0 to 1.0\n }\n else if( t < a + d) // From t=a to t=d (decay period)\n {\n   res= 1.0 - ((t - a) / d) * (1.0 - s); // the volume decreases from 1.0 to s (sustain)\n }  \n else if( t < du) // From t=d to t=du (sustain period)\n {\n     res=s; // the volume stays constant at s (sustain)\n }\n else if( t < du + r) // From t=du to t=du+r (release period)\n {\n    res=(1.0 - (t - du)\n    / r) * s; // release\n }\n else\n {\n  res=0.0; // After that, the volume is 0.0.\n  }\n  return res;\n} \n\n\n\nfloat tick_to_second(float t)\n{\n    return t * 60.0 / ditty.bpm;\n}\n\n\nfloat  second_to_tick(float t)\n{\n    return t * ditty.bpm / 60.0;\n}  \n\n\n\nTNote2 IniciarNota()\n{\n  TNote2 thiss; \nthiss.note = 50.0; // min=1, max=100, step=0.5\nthiss.iom = 1.; // min=1, max=100, step=0.1\nthiss.mul = 2.0; ///1.0; // min=1, max=100, step=0.1\n\n///modificado en linea\nthiss.iom= 31.1457;\nthiss.mul= 37.0;\n        \n\n    return thiss;\n}\n\n\nTMetallicFm IniciarMetallicfm(float pt)\n{\n    TMetallicFm thiss;\n    thiss.t = pt; //random(pt);\n    thiss.iom = 65.51; //input.iom; // options.iom || 65.51;\n    thiss.mul = 3.8; //input.mul; // options.mul || 3.8;\n    return thiss;\n    \n}\n\nvec2 processMetallicFM(float note,tenv penv,float tick,float options, float pt, TMetallicFm thiss  )\n{\n        // forward time\n        thiss.t += ditty.dt;\n    \n        // carrier frequency\n        float fc = midi_to_hz(note);\n        // modulator frequency\n        float fm = fc * thiss.mul;\n        float modd = sin(TAU*thiss.t*fm);\n        float osc = sin(TAU*thiss.t*fc + thiss.iom*modd) * penv.value;\n        return vec2(osc,osc);\n}\n\nvec2 mainSound( in int samp, float time )\n{ \n    float t1=mod(time, ttotal);\n   \n   float attack, decay, sustain, release, amp,duration;\n\n   objinputt=IniciarNota();\n   objMetal=IniciarMetallicfm(t1);\n   \n    duration=1.0;\n   float ds = 0.25 * duration;\n   float dt = second_to_tick(ds);\n   \n   tenv envb;\n   float tr=mod(t1,1.0);\n   float tick=1.0;\n   float options;\n   ditty.bpm = 120.0;\n    //ditty.dt=time; //tr;\n    ditty.dt=second_to_tick(tr);\n   attack= 0.01; decay= 0.5; sustain=0.00; release= 0.00;  duration= 0.5; amp= 0.5;\n   envv.value= envelope(attack, decay,sustain, release,duration,tr );\n   vec2 y= processMetallicFM(objinputt.note,envv, tick,options, tr, objMetal );\n  return y;\n}  ","name":"Sound","description":"","type":"sound"}]}