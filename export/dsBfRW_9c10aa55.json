{"ver":"0.1","info":{"id":"dsBfRW","date":"1689647737","viewed":82,"name":".004 - plasmic","username":"nord","description":"plasmic.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic"],"hasliked":0,"parentid":"mdBfRW","parentname":".003 - warpy"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float t) {\n    vec3 a = vec3(0.400, 0.200, 0.820);\n    vec3 b = vec3(0.320, 0.010, 0.700);\n    vec3 c = vec3(0.330, 0.000, 0.320);\n    vec3 d = vec3(0.900, 0.000, 0.300);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) {\n        uv = uv + i;\n        \n        uv *= cos(sin(i - length(uv)));\n\n        float d = -length(uv);\n\n        vec3 col = palette(length(uv0) - iTime*.25 + 10.);\n\n        d = sin(d*5.+iTime*.2) * .6;\n        if (i >= 1.0) d = abs(d);\n        if (i == 2.0) uv.x = -uv.x;\n        \n        d = pow(0.1/ d, 1.00000001);\n        \n        finalColor += col * d;\n    }   \n     \n    finalColor *= 0.5/length(uv0);\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}