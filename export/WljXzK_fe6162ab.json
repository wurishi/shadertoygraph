{"ver":"0.1","info":{"id":"WljXzK","date":"1566442866","viewed":93,"name":"DF to VF","username":"yuletian","description":"convert distance field to vector field","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["distancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Rec(vec2 sp, vec2 hz)\n{\n    vec2 componentWiseEdgeDistance = abs(sp) - hz;\n    float outsideDistance = length(max(componentWiseEdgeDistance, vec2(0.)));\n    float insideDistance = min(max(componentWiseEdgeDistance.x, componentWiseEdgeDistance.y), 0.);\n    return outsideDistance + insideDistance;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float recSize = 0.01;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    // Time varying pixel color\n    vec2 CentralVal = (uv - vec2(0.5))*2.0;\n    float Val = Rec(CentralVal, vec2(recSize, recSize));\n    float ValRight = Rec(CentralVal + vec2(0.01,0.), vec2(recSize, recSize));\n    float ValUp = Rec(CentralVal + vec2(0.,0.01), vec2(recSize, recSize));\n    vec2 Field = vec2((ValRight - Val)/0.01, (ValUp - Val)/0.01);\n    Field = normalize(Field) / (Val * Val);\n\tif(Val >= 0.)\n    {\n        Field = vec2(0.);\n    }\n\n    // Output to screen\n    fragColor = vec4(Val, Val, 0., 0.);\n}","name":"Image","description":"","type":"image"}]}