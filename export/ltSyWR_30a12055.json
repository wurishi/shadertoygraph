{"ver":"0.1","info":{"id":"ltSyWR","date":"1508461692","viewed":277,"name":"Noisy Coupled BZ Solitons  ","username":"FlexMonkey","description":"Here are a pair of coupled Belousov Zhabotinsky simulations with a little random noise. The interesting result is little mitosing unstable solitons that appear from the concave edges of the bigger, growing blob. Not what I was expecting at all!","likes":10,"published":1,"flags":48,"usePreview":0,"tags":["belousovzhabotinskyreactiondiffusionlaplacian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | October 2017\n*/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    \n    vec3 zero = texture(iChannel0, coord).xyz;\n    vec3 one = texture(iChannel1, coord).xyz;\n    \n    vec3 val = abs(sin((zero * one) * 3.141));\n    \n    fragColor = vec4(val, 1.0); \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | October 2017\n*/\n\nint radius = 1; \nfloat alpha = 1.1975;\nfloat beta = 2.075;\nfloat gamma = 1.1;\n\nfloat noise(vec2 co) {\n    vec2 seed = vec2(sin(co.x), cos(co.y));\n    return fract(sin(dot(seed ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n// Keyboard reset taken from https://www.shadertoy.com/view/XtcGD2\nbool reset() {\n    return texture(iChannel3, vec2(32.5/256.0, 0.5) ).x > 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec2 pixelSize = vec2(1.0 / iResolution.xy); \n\n    vec4 averageColor = vec4(0);\n   \tfloat count = 0.0;\n\n    for (int x = -radius; x <= radius; x++) {\n        for (int y = -radius; y <= radius; y++) {\n            \n            averageColor += texture(iChannel0, coord + pixelSize * vec2(x, y));\n            count++; \n        }\n    }\n    \n    averageColor /= count; \n  \n\n    if(texture(iChannel2, coord).xyz == vec3(0) || reset()) {\n        \n       fragColor = texture(iChannel1, coord) * sqrt(1.0 - length(coord - 0.5));\n        \n    } else {\n        float a = averageColor.x + averageColor.x * (alpha * gamma * averageColor.y) - averageColor.z;\n   \t\tfloat b = averageColor.y + averageColor.y * ((beta * averageColor.z) - (alpha * averageColor.x));\n    \tfloat c = averageColor.z + averageColor.z * ((gamma * averageColor.x) - (beta * averageColor.y));\n  \n        b+= noise(coord * iTime * 5.0) * -0.03; \n        c+= noise(coord * iTime * 11.0) * -0.095; \n        \n        vec3 result = texture(iChannel0, coord).xyz * 0.9 + vec3(a, b, c) * 0.1;\n        \n        fragColor = vec4(result, 1.0); \n    }\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | October 2017\n*/\n\n\nint radius = 5; \nfloat alpha = 3.03; // 2.9995;\nfloat beta = 2.174;\nfloat gamma = 2.015;\n\nfloat noise(vec2 co) {\n    vec2 seed = vec2(sin(co.x), cos(co.y));\n    return fract(sin(dot(seed ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec2 pixelSize = vec2(1.0 / iResolution.xy); \n    \n    vec4 averageColor = vec4(0);\n   \tfloat count = 0.0;\n\n    for (int x = -radius; x <= radius; x++) {\n        for (int y = -radius; y <= radius; y++) {\n            \n            averageColor += texture(iChannel0, coord + pixelSize * vec2(x, y)).zxyw;\n            count++; \n        }\n    }\n    \n    averageColor /= count; \n\n    float a = averageColor.x + averageColor.x * (alpha * gamma * averageColor.y) - averageColor.z;\n  \tfloat b = averageColor.y + averageColor.y * ((beta * averageColor.z) - (alpha * averageColor.x));\n    float c = averageColor.z + averageColor.z * ((gamma * averageColor.x) - (beta * averageColor.y));\n  \n    a+= noise(coord * iTime * 13.0) * 0.4; \n    \n   \tvec3 result = texture(iChannel0, coord).xyz * 0.895 + vec3(a, b, c) * 0.105;\n    \n    fragColor = clamp(vec4(result, 1.0), 0.0, 1.0); ;\n\n}","name":"Buf B","description":"","type":"buffer"}]}