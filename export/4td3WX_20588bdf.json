{"ver":"0.1","info":{"id":"4td3WX","date":"1472310475","viewed":225,"name":"DesaturatedBloom","username":"albertelwin","description":"An implementation of the desaturated bloom technique described in the \"A Camera Model\" chapter of http://graphicscodex.com/","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","postprocessing","bloom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define GAMMA 2.2\n\nvec3 tex2D_linear(sampler2D tex, vec2 uv, float lod) {\n \tvec3 rgb = texture(tex, uv, lod).rgb;\n    rgb = pow(rgb, vec3(GAMMA));\n    return rgb;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy / iResolution.xy);\n    \n    vec2 tex_coord = vec2(uv.x, uv.y * 0.5625 + 0.21875);\n    if(uv.x > 0.5) {\n        tex_coord.x -= 0.5;\n    }\n    \n    vec3 color = tex2D_linear(iChannel0, tex_coord, 0.0);\n    vec3 bloom = tex2D_linear(iChannel0, tex_coord, 4.0);\n    float i = (bloom.r * 0.2126 + bloom.g * 0.7152 + bloom.b * 0.0722) * 30.0;\n    color += bloom * (i * (cos(iTime) * -0.5 + 0.5));\n    color.r = 0.0;\n    \n    if(uv.x > 0.5) {\n        //NOTE: Blend high intensity colors towards white in order to maintain hue http://graphicscodex.com/\n        float v = max(max(color.r, color.g), max(color.b, 1.0));        \n        float t = clamp(v * 0.8 - 0.8, 0.0, 1.0);\n        color = color * ((1.0 / v) * (1.0 - t)) + t;\n    }\n    \n    color = pow(color, vec3(1.0 / GAMMA));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}