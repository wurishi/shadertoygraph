{"ver":"0.1","info":{"id":"flyyDc","date":"1723798746","viewed":31,"name":"TBOS_2DMatrices3","username":"nako","description":"The Book of Shades\nhttps://thebookofshaders.com/08/","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926525\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat drawCircle(float r, float w, vec2 center, vec2 st){\n    float d = distance(center, st);\n    return smoothstep(r+w,r+w/2.,d) - smoothstep(r+w/2., r, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.y*2.0 - 1.;\n    \n    vec3 col = vec3(0.0);\n     \n    vec2 rotate_st = st;\n    vec2 rotate_st1 = rotate2d(iTime)*st;\n    vec2 rotate_st2 = rotate2d(iTime*.5)*st;\n    vec2 rotate_st3 = rotate2d(iTime*2.)*st;\n    //rotate_st += vec2(0.5);\n    \n    float angle = atan(st.x, st.y);\n    float angle1 = atan(rotate_st1.x, rotate_st1.y)+PI;\n    float angle2 = atan(rotate_st2.x, rotate_st2.y)+PI;\n    float angle3 = atan(rotate_st3.x, rotate_st3.y)+PI;\n    \n    col = vec3(0.0);\n    col += vec3(smoothstep(0.0, 1.0, 1.-angle1))*vec3(.0,.7,1.);\n    col += vec3(smoothstep(0.0, 1.0, fract(sin(angle3+PI))))*vec3(.1,.1,.1);\n    col += vec3(smoothstep(0.9, 1.0, sin(-angle*60.+iTime)))*vec3(.2,.2,.35);\n    col += smoothstep(0.8, 0.8, length(st))*vec3(0.1,0.1,0.1);\n    col *= smoothstep(0.8, 0.7, sin(angle*3.))+smoothstep(0.75,0.7,length(st));\n    col *= smoothstep(0.95, 0.8, length(st));\n    col += drawCircle(sin(iTime*2.0)*0.1+0.3, 0.8, vec2(0.0), st)*vec3(.0,.1,.5);\n    col += drawCircle(sin(angle*16.)*sin(angle2*14.)*0.1+cos(angle3*15.)*0.1+0.5, 0.03, vec2(0.0), st)*0.5*vec3(.0,.5,.9);\n    col += drawCircle(0.3, 0.02, vec2(0.0), st)*vec3(.0,.25,.45);\n    col += drawCircle(0.8*fract(iTime), 0.02, vec2(0.0), st)*vec3(.0,.25,.45);\n    col += drawCircle(0.6*fract(iTime), 0.02, vec2(0.0), st)*vec3(.0,.25,.45);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}