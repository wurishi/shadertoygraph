{"ver":"0.1","info":{"id":"DlcBDN","date":"1701389211","viewed":15,"name":"Teselaciones de Truchet","username":"rubenbaca","description":"Teselación de truchet en movimiento","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p) {      //Función que genera números aleatorios en [0,1]\np=fract(p*(287.36,473.48));\np+=dot(p,p+38.86);\nreturn fract(p.x*p.y);}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy; //Normaliza las cooredenadas\n    uv-= vec2(.5);//Desplaza el cero al centro del canvas\n    uv.x*=iResolution.x/iResolution.y; //Aregla relación de aspecto\n    uv+=iTime*.2; //Animación de translación\n    \n    \n    uv*=vec2(6); //Repeticiones\n    \n    vec2 gv = fract(uv)-.5; //coordenadas locales en la retícula con el cero al centro\n    \n\n     vec3 col = vec3(0); //Color predeterminado (negro)\n     \n     vec2 id=floor(uv);//Dirección de cada cuadrado en la retícula\n     \n     float n = Hash21(id);//Aleatoriedad\n     if(n<.5) gv.x*=-1.;     \n     \n     \n     float width = .1;//Ancho\n     \n     float d= abs(abs(gv.x+gv.y)-.5); //Para teselaciones rectangulares\n     \n     vec2 Cuv = gv-sign(gv.x+gv.y+0.001)*.5; \n     \n     d=length(Cuv)-.5;\n     float mask = smoothstep(0.01,-0.01,abs(d)-width);\n             float angle =atan(Cuv.x,Cuv.y);\n     col+=sin(iTime+angle*10.)*mask;\n     \n     //col+=sign(gv.x+gv.y);\n     //if(gv.x>.48||gv.y>.48) col=vec3(1,0,0);\n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}