{"ver":"0.1","info":{"id":"MtyXzt","date":"1485403887","viewed":267,"name":"Fractal Seizure","username":"hhhzzzsss","description":"Maybe it's too late but this shader may cause epilepsy...\nUpdate: smooth shading\nUpdate: better smooth shading","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","juliaset","flashingcolors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec2 randDisplacement() {\n    return vec2(fract(sin(iTime*14237.14238)*23403.24234),\n                fract(sin(iTime*35034.24809)*23473.42303));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\t\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2.0 - 1.0;\n    uv *= 0.7+0.3*sin(iTime*14.2354);\n    uv.x *= iResolution.x / iResolution.y;\n    float theta = iTime*10.0;\n    mat2 rot = mat2 (cos(theta), sin(theta), -sin(theta), cos(theta));\n    uv *= rot;\n    uv += 0.4*randDisplacement();\n    \n    vec2 z = uv;\n    vec2 c = vec2(-0.73+0.05*cos(30.5142*iTime+0.3),0.3+0.1*sin(10.0*iTime+0.9));\n    \n    float iterations = -1.0;;\n    for (float i = 0.0; i < 200.0; i++) {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n        if (dot(z,z) > 256.0) {\n            iterations = i;\n            break;\n        }\n    }\n    \n    iterations = iterations + 2.0 - log(log(length(z)))/log(2.0);\n    \n    float hue = pow(iterations/50.0,0.4+0.2*sin(4.534243*iTime));\n    hue += iTime*10.0;\n    \n\tfragColor = vec4(hsv2rgb(vec3(hue,1.0,1.0)) ,1.0);\n    \n    if (iterations < 0.0) fragColor = vec4(vec3(0.0),1.0);\n    \n}","name":"Image","description":"","type":"image"}]}