{"ver":"0.1","info":{"id":"csscWB","date":"1687171555","viewed":192,"name":"lined Terrain","username":"gustav","description":"2d terrain that uses lines for its visual","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["contour"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159, K1 = 0.366025404, K2 = 0.211324865;\n\nvec2 hash(vec2 p) {\n    p = vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)));\n    return fract(sin(p) * 43.7585) * 2. - 1.;\n}\n\nfloat fbm4(vec2 p) {\n    vec2 i = floor(p + (p.x + p.y) * K1);\n    vec2 a = p - i + (i.x + i.y) * K2;\n    float m = step(a.y, a.x);\n    vec2 o = vec2(m, 1. - m);\n    vec2 b = a - o + K2;\n    vec2 c = a - 1. + 2. * K2;\n    vec3 h = max(.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.);\n    vec3 n = h * h * h * h * vec3(dot(a, hash(i + 0.)), dot(b, hash(i + o)), dot(c, hash(i + 1.)));\n    return dot(n, vec3(70.));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = 2. * uv - 1.;\n    p.x *= iResolution.x / iResolution.y;\n    vec3 col = vec3(0.), acc = vec3(0.);\n    float lh = -iResolution.y, off = .1 * iTime, h = 0., z = .1, zi = .05;\n    const int l = 10;\n    for (int i = 0; i < l; ++i) {\n        vec2 pOffset = vec2(p.x, z + off);\n        float n = .4 * fbm4(pOffset);\n        h = n - p.y;\n        if (h > lh) {\n            float d = abs(h);\n            col = vec3(smoothstep(1., 0., d * 192.));\n            col *= exp(-.1 * float(i));\n            lh = h;\n        }\n        acc += col;\n        z += zi;\n    }\n    col = sqrt(clamp(acc, 0., 2.));\n    vec3 b = col * col * col;\n    fragColor = vec4(b - vec3(0.0353, 0.2078, 0.6902), b);\n}\n","name":"Image","description":"","type":"image"}]}