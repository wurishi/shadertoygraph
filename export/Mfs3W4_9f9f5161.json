{"ver":"0.1","info":{"id":"Mfs3W4","date":"1703089547","viewed":38,"name":"Circles %scouttea","username":"scouttea","description":"An inverse projection of a grid of circles, which is moving\nhttps://en.wikipedia.org/wiki/Inversive_geometry#Circle_inversion","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["simple","blackandwhite","circle","animated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float function( vec2 ab )\n{    \n    ab /= dot(ab,ab);\n    ab.x += cos(iTime);\n    ab.y += sin(iTime);\n\n    ab -= round(ab);\n\n    return float( length( ab ) < .1 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // uv alternative where the coordinate grid is not stretched i.e. a square is square\n    // and (-1,-1) to (1,1) is on screen\n    vec2 ab = (2.*fragCoord - iResolution.xy )/min(iResolution.x,iResolution.y);\n\n    float s = 0.;\n    \n    // AA 25-samples\n    for( float x = -1.; x < 1.001; x+=.5)\n    for( float y = -1.; y < 1.001; y+=.5)\n        s += function(ab + vec2(x,y)/iResolution.xy );\n    \n    s/=25.;\n\n    fragColor = vec4(vec3(s),1.);\n}","name":"Image","description":"","type":"image"}]}