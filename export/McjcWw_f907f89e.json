{"ver":"0.1","info":{"id":"McjcWw","date":"1722440691","viewed":14,"name":"Colorful Julia Set","username":"Rainforest_25","description":"hw for fractal","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 complexMultiply(vec2 a, vec2 b) {\n    return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);\n}\n\nvec2 complexSquare(vec2 z) {\n    return complexMultiply(z, z);\n}\n\nfloat complexAbs(vec2 z) {\n    return sqrt(z.x * z.x + z.y * z.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec2 c = vec2(cos((iTime + 10.0) * 0.2), sin((iTime + 10.0) * 0.2));\n    vec2 z = uv;\n    int maxIterations = 100;\n    int i;\n    for (i = 0; i < maxIterations; i++) {\n        z = complexSquare(z) + c;\n        if (complexAbs(z) > 2.0) {\n            break;\n        }\n    }\n    col *= float(i) / float(maxIterations);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}