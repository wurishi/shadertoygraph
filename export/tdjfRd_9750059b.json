{"ver":"0.1","info":{"id":"tdjfRd","date":"1590644409","viewed":308,"name":"Circle_Inversion + smoothclamp","username":"FabriceNeyret2","description":"variant of lil_chickehh's  \"Circle_Inversion\"  [url]https://shadertoy.com/view/3s2fz3[/url]\nwith AA + golfing , eiffie's clamped inversion U / clamp(dot(U,U),.25,1.), changed into smoothclamp.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["geometry","2tweets","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Smoothclamp variant of \"Circle_Inversion\" by lil_chickehh. https://shadertoy.com/view/3s2fz3\n// There, I AA and golfed (sorry...) it,\n// and eiffie's suggested clamped inversion U / clamp(dot(U,U),.25,1.)\n// That I here turned to #def smoothclamp(v,a,b) ( a+(b-a)*smoothstep(a,b,v) )\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy,\n         U = ( u+u - R) / R.y;\n    U = cos(   21.*U / ( .3+smoothstep(.25,1.,dot(U,U)) )\n             + 16.*sin(iTime*.2+vec2(0,33))  );\n    U += U.y;\n    O += .5 + U.x/fwidth(U.x);\n}","name":"Image","description":"","type":"image"}]}