{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const int nBalls = 4;\n\nfloat hash(float x)\n{\n\t// Return a \"random\" number based on the \"seed\"\n    return fract(sin(x) * 43758.5453) * 2.0 - 1.0;\n}\n\nvec2 hashPosition(float x)\n{\n\t// Return a \"random\" position based on the \"seed\"\n\treturn vec2(hash(x), hash(x * 1.1))*2.0-1.0;\n}\n\nfloat metaball(vec2 r, float hashSeed) {\n\tvec2 balls[nBalls]; // Ball coordinates\n\tr *= 1.0;\n\tfloat s[nBalls]; // Ball coordinates\n\tfor(int i=0; i<nBalls; i++) {\n\t\tfloat ii = float(i)+hashSeed;\n\t\tballs[i] = hashPosition(ii)*0.1 // random position\n\t\t\t+0.8*vec2(hash(ii+0.1)*cos(iTime*hash(ii+0.2)),\n\t\t\t\t      hash(ii+0.3)*sin(iTime*hash(ii+0.4))); // random rotation around the position\n\t\ts[i] = 0.02*(hash(ii+0.5)+1.0)*0.5;\t\t\n\t}\n\tfloat mSurf = 0.0; // metaball surface value\n\tfor(int i=0; i<nBalls; i++) {\n\t\tmSurf += s[i]/pow(length(r-balls[i]),2.0);\n\t}\n\tfloat cutoff = 0.8;\n\tmSurf = smoothstep(cutoff-0.02, cutoff+0.02, mSurf);\t\n\t//mSurf = clamp(mSurf, 0.7, 5.7)-0.7; \n\treturn mSurf;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 r = (fragCoord.xy - 0.5*iResolution.xy) / iResolution.y; // pixel coordinate\n\t\n\tfragColor = (1.0-pow(abs(r.x),8.0))*vec4( 1.0, 1.0, 1.0, 1.0); // set a white background with darkened sides\n\t\n\tr += vec2(0.0, iTime*0.2);\n\tr = vec2(r.x, mod(r.y+1.0,2.0)-1.0);\n\tvec3 color = + metaball(r*1.5, 12.3)*vec3(1.0,0.0,0.0)\n  \t\t\t\t + metaball(r*1.0, 124.3)*vec3(0.0,1.0,0.0)\n\t  \t\t\t + metaball(r*0.67, 56.2)*vec3(0.0,0.0,1.0);\n\tfragColor -= 0.4*vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Ms23DG","date":"1393096457","viewed":890,"name":"Study 6: Metaballs v.2","username":"vug","description":"Learning 2D metaballs and using hash for random number generation based on seeds. Hash functions are taken from here: https://www.shadertoy.com/view/Md2GW1 Also colors are not added on black, but subtracted from white.","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}