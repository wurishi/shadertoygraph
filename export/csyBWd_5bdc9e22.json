{"ver":"0.1","info":{"id":"csyBWd","date":"1698756935","viewed":51,"name":"Morning Coffee","username":"Aleksandr73591","description":"Hello, I made this shader. Originally I wrote it on my android device in GLES (Shader Editor application).\n\nMy LinkedIn profile: https://www.linkedin.com/in/aleksandrpogosov\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["coffee","foam","steam","morning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Written by Aleksandr Pogosov,\n// 2023 All rights reserved\n// aleksandr7937937@gmail.com\n// Originally written by me on Android (GLES) via Shader Editor application\n\nvec2  pos[17];\nfloat size[17];\n\nvec2 rotate(vec2 p, float angle)\n{\n\treturn p* mat2 (\n\t\tcos(angle), - sin(angle),\n\t\tsin(angle), cos(angle)\n\t\t);\n}\n\nfloat sd_circle(vec2 point,\n\tfloat radius)\n{\n\treturn length(point)-radius;\n}\n\nvec3 table(vec2 uv, out float ratio)\n{\n\tuv.y*=6.;\n\tratio = 0.0;\n\tfloat line = fract(uv.y);\n\tif(line > 0.0 && line < 0.2)\n\treturn vec3(0.0);\n\n\treturn vec3(0.4,0.25,0.1);\n}\n\nvec3 coffe(vec2 uv, out float ratio)\n{\n\tratio = sd_circle(uv,0.15);\n\tratio*=5.;\n\tif(ratio>=0.)ratio = 1.0;\n\treturn vec3(0.3,0.2,0.0);\n}\n\nvec3 cup(vec2 uv, out float ratio)\n{\n\tratio =sd_circle(uv, 0.17);\n\tratio = step(0., ratio);\n\treturn vec3(0.8);\n}\n\nvec3 handle(vec2 uv, out float ratio)\n{\n\tuv.y*=2.;\n\tuv-= vec2(0.2,0.0);\n\tratio = max(abs(uv.x),abs(uv.y))-0.05 ;\n\tratio = step(0.0, ratio);\n\treturn vec3(0.75);\n\n}\n\nvec3 plate(vec2 point, out float ratio)\n{\n\tratio =sd_circle(point, 0.3);\n\tfloat col = 0.7;\n\tif(ratio>0.0)\n\t{\n\t\tratio =1.;\n\t\treturn vec3(col);\n\t}\n\telse if(ratio <0.0)\n\t{\n\n\t\tcol+= ratio;\n\t\tratio =0.0;\n\t\treturn vec3(col);\n\t\t}\n}\n\nvec3 foam(vec2 p,out float ratio)\n{\n\tint i=0;\n\tpos[i++]= vec2(0.14,0.008);\n\tpos[i++]= vec2(0.14,0.015);\n\tpos[i++]= vec2(0.13,0.02);\n\tpos[i++]= vec2(0.14,0.025);\n    pos[i++]= vec2(0.13,0.03);\n\n\tpos[i++]= vec2(0.12,0.01);\n\tpos[i++]= vec2(0.12,0.03);\n\tpos[i++]= vec2(0.135,0.035);\n\tpos[i++]= vec2(0.135,0.045);\n\tpos[i++]= vec2(0.12,0.045);\n\n\tpos[i++]= vec2(0.13,0.055);\n\tpos[i++]= vec2(0.12,0.06);\n\tpos[i++]= vec2(0.11,0.07);\n\tpos[i++]= vec2(0.08,0.02);\n\tpos[i++]= vec2(0.08,0.04);\n\tpos[i++]= vec2(0.09,0.09);\n\n\tpos[i++]= vec2(0.0,0.08);\n\n\tint s=0;\n\tsize[s++]=0.005;\n\tsize[s++]= 0.003;\n\tsize[s++]=0.002;\n\tsize[s++]=0.003;\n\tsize[s++]=0.001;\n\n\tsize[s++]= 0.003;\n\tsize[s++]=0.005;\n\tsize[s++]=0.002;\n\tsize[s++]=0.004;\n\tsize[s++]= 0.003;\n\n\tsize[s++]=0.002;\n\tsize[s++]= 0.003;\n\tsize[s++]=0.002;\n\tsize[s++]=0.003;\n\tsize[s++]=0.002;\n\tsize[s++]=0.004;\n\n    vec2 rotateP = rotate(p, iTime/5.0);\n\tfor( int a =0; a <15; a++)\n\t{\n\n\t\tfloat sd = sd_circle(rotateP + pos[a],size[a]);\n\t  if(sd>=0.0&& sd<=size[a]+0.001)\n\t  {\n\t  \tratio = sd;\n\t  \treturn vec3(0.7,0.6,0.4);\n\t  }\n\t}\n\tratio = 1.0;\n\treturn vec3(0.7,0.6,0.4);\n}\n\nvec3 steam(vec2 p, out float ratio)\n{\n\tratio = 1.0;\n\tvec2 p_Sq = rotate(p, 1.0);\n\tp_Sq.x +=0.3;\n\tp_Sq.x *=0.5;\n\tp_Sq.y *= 0.3;\n\tfloat sdSquare= max(abs(p_Sq.x), abs(p_Sq.y));\n\tsdSquare-= 0.05;\n\tif(sdSquare >0.1) sdSquare= 1.0;\n\telse sdSquare=0.8;\n\n\tfloat cosTime = (cos(iTime)+1.)/2.;\n\tfloat offset_1 = cosTime *0.01;\n\tfloat cosTime_new = (cosTime+1.)*2.;\n\tvec2 cir_1_Offset = vec2(0.322+offset_1,-0.3975);\n\tvec2 cir_2_Offset = vec2(0.157+offset_1,-0.34);\n\tvec2 cir_3_Offset = vec2(-0.25+offset_1,-0.15);\n\tvec2 cir_4_Offset = vec2(-0.05+offset_1,-0.15);\n\n    float circle_1 = sd_circle(\n        p+ cir_1_Offset, 0.3);\n    float circle_2 = sd_circle(\n        p+ cir_2_Offset, 0.15);\n    float circle_3 = sd_circle(\n        p+ cir_3_Offset, 0.3);\n    float circle_4 = sd_circle(\n        p+ cir_4_Offset, 0.15);\n\n    if(circle_1 >0.0&& circle_2<=0.0)\n        ratio = sdSquare;\n    if(circle_3 > 0.0&&circle_4 <=0.0)\n        ratio = sdSquare;\n\n\treturn vec3(1.0);\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n\tuv = uv*2.-1.;\n\tuv.x*=iResolution.x/iResolution.y;\n    uv*=0.5;\n\tvec3 col = vec3(0.3,0.7,0.8);\n\n\tfloat ratio=0.;\n\tcol = mix(table(uv,ratio), col, ratio);\n\tcol = mix(plate(uv,ratio), col, ratio);\n\tcol = mix(handle(uv, ratio),col, ratio);\n\tcol = mix(cup(uv,ratio), col, ratio);\n    col = mix(coffe(uv, ratio),col, ratio);\n\tcol = mix(foam(uv,ratio),col,ratio);\n\tcol = mix(steam(uv,ratio),col,ratio);\n\n\tfragColor = vec4(col,1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}