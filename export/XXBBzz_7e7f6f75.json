{"ver":"0.1","info":{"id":"XXBBzz","date":"1729097579","viewed":79,"name":"galaxy was born","username":"nayk","description":"source https://www.shadertoy.com/view/ldBXDD https://www.shadertoy.com/view/43BfzR https://www.shadertoy.com/view/XXyGzh","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal","galaxy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define A(v) mat2(cos((v)*3.1416+vec4(0, -1.5708, 1.5708, 0)))  // rotate\n#define H(a) (cos(radians(vec3(0, 90, 180))+(a)*6.2832)*.5+.5)  // hue\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float l = 9.,  // loop size\n          i = 1.,  // loop start\n          p = 1.,  // polarity\n          t = iTime/4., w;\n      // pixel position normalised to [-1, 1]\n\tvec2 cPos = -1.0 + 2.0 * U.xy / iResolution.xy;\n    \n    // distance of current pixel from center\n\tfloat cLength = length(cPos);\nvec4 o=C;\nvec2 u2=U;\n\tvec2 v = iResolution.xy;\n         u2 = .2*(u2+u2-v)/v.y;    \n         \n    vec4 z = o = vec4(1,2,3,0);\n     \n    for (float a = .5, t = iTime, i; \n         ++i < 19.; \n         o += (1. + cos(z+t)) \n            / length((1.+i*dot(v,v)) \n                   * sin(1.5*u2/(.5-dot(u2,u2)) - 9.*u2.yx + t))\n         )  \n        v = cos(++t - 7.*u2*pow(a += .03, i)) - 5.*u2,                 \n        u2 += tanh(40. * dot(u2 *= mat2(cos(i + .02*t - vec4(0,11,33,0)))\n                           ,u2)\n                      * cos(1e2*u2.yx + t)) / 2e2\n           + .2 * a * u2\n           + cos(4./exp(dot(o,o)/1e2) + t) / 3e2;\n              \n     o = 25.6 / (min(o, 13.) + 164. / o) \n       - dot(u2, u2) / 250.;\n       \n    vec2 R = iResolution.xy,\n         u = (U-R/2.)/R.y*3.;\n    u+=(cPos/cLength)*cos(cLength*12.0-iTime*1.0) * 0.53;\n    vec3 c = vec3(0), k;\n    \n    for (; i<=l; i++)\n    {\n        k = H(.3-i/l)+.3;\n        w = fwidth(u.y)*max(R.y/1e3, .1);  // point size\n        c += min(w/length(u), 1.) * k;  // points\n        //if (i > 1.) c += min(w/abs(1.-length(u)), 1.) * k * .1;  // rings\n        u *= 2.618 * A(sqrt(2.*i)*t*p);  // scale & rotate\n        p *= -1.;  // flip polarity\n        u.x -= 1.272*p*o.x*o.y;  // shift x\n    }\n      vec2 uv = ( U - .5*iResolution.xy ) / iResolution.y;\n     uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n   \n    C = vec4(c*c*o.x*o.x*vec3(0.5,.5,.5)*10., 1);\n     C*= vec4(happy_star(uv, anim) * vec3(0.35,0.2,2.15)*5., 1.0);\n}","name":"Image","description":"","type":"image"}]}