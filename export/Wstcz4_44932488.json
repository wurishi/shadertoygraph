{"ver":"0.1","info":{"id":"Wstcz4","date":"1634905803","viewed":44,"name":"SpaceToy_RevolvingCircle","username":"SpaceToy","description":"Describe a circle that revolves around the center","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["revolvingcircle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Default background color\n    vec4 color = vec4(1.0, 0.5, 0.0, 0.0); //orange\n    \n    // Define the center\n    vec2 center = vec2(0.5, 0.5);\n    \n    // Distance of a normalized pixel coordinate from the center\n    vec2 gradient = uv - center;\n    \n    // Default radius for a circle\n    float radius = 0.2;\n    \n    // Number of petals to generate from a circle\n    float numPetals = 1.0;\n    \n    // Radius of circle changed based on the cos function for which angle\n    // is defined by number of petals multiplied by angle projected by a pixel to\n    // the center of the screen defined above\n    // iTime is used to make the petals rotate, add iTime for clockwise,\n    // subtract it to get anti-clockwise rotation\n    float changingRadius = radius * cos(iTime + numPetals * atan(gradient.y, gradient.x));\n\n    // A constant value of smooth function will never give us a circle\n    // float changingSmoothValue = 1.0;\n    \n    // This is what will give us a black circle around the center of the screen\n    // The smootstep function will interpolate a value for pixels within the two edges\n    // and the source value is defined by the length of th gradient.\n    float smoothValue = smoothstep(changingRadius, changingRadius+0.001, length(gradient));\n\n\n    // Multiply smoothness with color\n    color *= smoothValue;\n    \n    // Time varying pixels, dont do this to have static color background \n    color *= 1.0 + 0.5*sin(iTime+uv.xyxx);\n    \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}