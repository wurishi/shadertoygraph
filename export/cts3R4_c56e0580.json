{"ver":"0.1","info":{"id":"cts3R4","date":"1671398117","viewed":89,"name":"learning lines","username":"Dragon3DGraff","description":"simple lines","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 horizontalLine(vec2 uv, vec3 color, float y){\n vec4 col = vec4(color, 0.0);\n float d = abs( uv.y - y*uv.x*uv.x );\n\ncol.a =  1.0 - smoothstep( 0.0, 2.0/iResolution.y, d );\n    return col;\n}\n\nvec4 verticalLine(vec2 uv, vec3 color, float x){\n vec4 col = vec4(color, 0.0);\n float d = abs( uv.x - x);\n\ncol.a =  1.0 - smoothstep( 0.0, 1.0/iResolution.y, d );\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 lineColor = vec3(uv.x/sin(fract(iTime/2.0)), uv.y, uv.x/sin(fract(iTime/2.0)));\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    //uv -= 0.5;\n   // uv.x *= iResolution.x/iResolution.y;\n    \n    \n   //  vec2  p = fragCoord.xy / iResolution.x;\n   // float my = 0.5 * iResolution.y / iResolution.x;\n   // float mx = 0.5 * iResolution.x / iResolution.y;\n\n    vec3 col = vec3(0.0);\n    float lineStep = abs(sin(iTime)-cos(iTime));\n   \n   for (float y = 0.0; y < lineStep; y+=0.05){\n   vec4 horLine = horizontalLine(uv, lineColor, y);\n   col = mix( col, horLine.xyz, horLine.a );\n   }\n   \n      for (float y = 0.0; y < lineStep; y+=0.05){\n   vec4 horLine = horizontalLine(uv.yx, lineColor, y);\n   col = mix( col, horLine.xyz, horLine.a );\n   }\n   \n   for (float x = 0.0; x < 1.0; x+=0.05){\n   vec4 vertLine = verticalLine(uv, lineColor, x);\n   col = mix( col, vertLine.xyz, vertLine.a );\n   }\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}