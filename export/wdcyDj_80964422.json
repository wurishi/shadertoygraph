{"ver":"0.1","info":{"id":"wdcyDj","date":"1601735669","viewed":165,"name":"INKTtober - Hair","username":"Flopine","description":"Second day of the Inktober challenge! For 2020 I'm using the Inkt-Tober list: https://twitter.com/Trish_Argh/status/1304878524797419525","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","animation","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n\n#define time iTime\n#define dt(speed) fract(time*speed)\n#define animloop(speed) easeOutCirc(abs(-1.+2.*floor(dt(speed)*8.)/8.))\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n#define circle(puv,r) (length(puv)-r)\n\n\nfloat easeOutCirc(float x)\n{ return sqrt(1. - (x - 1.)*(x-1.));}\n\nstruct obj\n{\n    float d;\n    int mat_id;\n    vec3 color;\n};\n\nobj min_obj (obj a, obj b)\n{\n    if (a.d < b.d) return a;\n    else return b;\n}\n\nfloat line (vec2 uv, vec2 a, vec2 b, float r)\n{\n    vec2 pa = uv - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length(pa - ba*h) - r*h;\n}\n\nfloat displace (vec2 uv)\n{\n    uv = fract(uv)-.5;\n    return cos(uv.x*PI);\n}\n\nfloat roundcyl (vec3 p, float ra, float rb, float h)\n{\n    vec2 d = vec2(length(p.xz)-2.0*ra+rb, abs(p.y) - h );\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0)) - rb;\n}\n\nfloat face (vec2 uv)\n{\n    vec2 uu = uv;\n    uv.x = abs(uv.x)-0.5;\n    float f = smoothstep(0.02,0.035,circle(uv,0.2));\n    uu.y += cos(uu.x*3.)*0.1;\n    f *= smoothstep(0.04,0.06,abs(line(uu, vec2(-.5, -.5),vec2(.5,-.5), 0.1)));\n    return f;\n}\n\nobj head (vec3 p)\n{\n    vec3 pp = p;\n    vec2 headuv = vec2(atan(p.z,p.x)+1.55,p.y);\n    float d = roundcyl(p, 0.5, 0.35 ,0.4);\n\n    p.y += 0.98;\n    d = min(d, max(-p.y,abs(roundcyl(p,0.32,0.05,0.2))-0.03));\n\n    p = pp;\n    p.y -= .9;\n    d = min(d, roundcyl(p,0.2,0.02,0.15));\n\n    return obj(d, 1, vec3(1.,0.7,0.05)*face(headuv*1.7));\n}\n\nvec3 hairp;\nobj hair (vec3 p)\n{\n    p.y -= 1.-animloop(0.4);\n    hairp = p;\n    \n    vec3 pp = p;\n    vec2 hairuv = vec2(atan(p.z,p.x),p.y);\n    p.z += 0.05;\n    float hd = roundcyl(p, .52+displace(hairuv*3.5)*0.03, 0.5, .8);\n\n    p = pp;\n    p.z += 1.;\n    p.y += 0.55;\n    hd = max(-roundcyl(p, 0.65,0.1,0.8),abs(hd)-0.05);\n\n    return obj(hd,2,vec3(0.05,0.05,0.08));\n}\n\nobj SDF (vec3 p)\n{\n    p.y += 0.3;\n    return min_obj(head(p), hair(p));\n}\n\nvec3 getnorm (vec3 p)\n{\n    vec2 eps = vec2(0.01,0.);\n    return normalize(SDF(p).d-vec3(SDF(p-eps.xyy).d,SDF(p-eps.yxy).d,SDF(p-eps.yyx).d));\n}\n\nfloat spec (vec3 rd, vec3 l, vec3 n, float specpow)\n{\n    vec3 h = normalize(l-rd);\n    return pow(max(dot(n,h),0.),specpow);\n}\n\nvec3 background (vec2 uv)\n{\n    vec2 uu = uv;\n    uv = fract(uv)-.5;\n    float m = step(0.1,abs(max(abs(uv.x), abs(uv.y)))-0.37);\n    vec3 c = (m<0.5) ? vec3(0.8):vec3(0.2,.8,1.);\n\n    uv = uu;\n    c += vec3(1.,-0.8,-1.)*step(abs(uv.x+7.),0.04);\n    return c;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n    vec3 ro = vec3(0.001,0.001,-3.), \n        rd = normalize(vec3(uv,1.)), \n        p = ro, \n        l = vec3(1.,2.,-2.), \n        l2 = vec3(3.,1.7,-5.),\n        col = background(uv*5.);\n\n    bool hit = false; obj O;\n\n    for (float i=0.; i<100.; i++)\n    {\n        O = SDF(p);\n        if (O.d < 0.001)\n        {\n            hit = true;\n            break;\n        }\n        p += O.d*rd;\n    }\n\n    if (hit)\n    {\n        vec3 n = getnorm(p);\n        float light = max(dot(n,normalize(l)),0.5);\n        float fresnel = pow(clamp(1.-dot(-rd,n),0.,1.),10.);\n        if (O.mat_id == 1) col = O.color * light + spec(rd,l2,n,20.)*0.5 + fresnel*0.3;\n        else if(O.mat_id == 2) col = O.color \n            * light \n            + smoothstep(0.01,0.90*texture(iChannel0,vec2(atan(hairp.z,hairp.x),hairp.y)*1.1).r*3.,spec(rd,l2,n,20.))*0.4 \n            + fresnel*0.3;\n            }\n\n    fragColor = vec4(sqrt(col),1.);\n}","name":"Image","description":"","type":"image"}]}