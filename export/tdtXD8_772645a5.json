{"ver":"0.1","info":{"id":"tdtXD8","date":"1571921238","viewed":675,"name":"ShaderTober - Ghost","username":"Flopine","description":"A small doodle with inktober's theme \"ghost\".\nIt's also one of the visual I used during the Fantômes à Rayures concert at kawaii cafe. Check out his music!  > https://fantome-a-rayures.bandcamp.com/ ","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","jellyfish","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, Coyhot, Alkama and YX for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n#define time iTime\n\nfloat BPM = 170./60.;\nfloat PI = acos(-1.);\n\n// taken from YX here : https://www.shadertoy.com/view/tdlXW4\n// rough shadertoy approximation of the bonzomatic noise texture\nvec4 texNoise(vec2 uv)\n{\n    float f = 0.;\n    f += texture(iChannel0, uv*.125).r*.5;\n    f += texture(iChannel0, uv*.25).r*.25;\n    f += texture(iChannel0, uv*.5).r*.125;\n    f += texture(iChannel0, uv*1.).r*.125;\n    f=pow(f,1.2);\n    return vec4(f*.45+.05);\n}\n\nfloat hash1d (vec2 x)\n{return fract(sin(dot(x,vec2(1.45,8.151)))*45485.489);}\n\nmat2 rot (float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat moda (inout vec2 p, float rep)\n{\n    float per = 2.*PI/rep;\n    float a = atan(p.y,p.x);\n    float l = length(p);\n    float id = floor(a/per);\n    a = mod(a, per) - per*.5;\n    p = vec2(cos(a),sin(a))*l;\n    if (abs(id) >= rep/2.)id = abs(id);\n    return id;\n}\n\nfloat stmin (float a, float b, float k, float n)\n{\n    float st = k/n;\n    float u = b-k;\n    return min(min(a,b),0.5*(u+a+abs(mod(u-a+st, 2.*st)-st)));\n}\n\nfloat sphe (vec3 p, float r)\n{return length(p)-r;}\n\nfloat od (vec3 p, float r)\n{return dot(p, normalize(sign(p)))-r;}\n\nfloat cyl (vec3 p, float r, float h)\n{return max(length(p.xy)-r, abs(p.z)-h);}\n\nfloat tunnel (vec3 p)\n{\n    p.x += texNoise(vec2(p.y, p.z+time*BPM*2.)*0.05).x;\n    p.y += texNoise(vec2(p.x, p.z+time*BPM*2.)*0.05).x;\n    return -cyl(p.xyz, 8., 1e10);\n}\n\nfloat g2 =0.;\nfloat jellyfish (vec3 p)\n{   \n    moda (p.xy, 3.);\n    p.x -= 4.;\n    p.xy *= rot(sin(p.z*0.5+time));\n    moda(p.xy, 3.);\n    p.x -= 2.;\n    p.yz *= rot(PI/2.);\n    \n    vec3 pp = p;\n    p.y -= 2.;\n    float o = min(sphe(p,.5),max(-sphe(p,1.2),od (p,0.8)));\n    \n    p = pp;\n    p.xz *= rot(sin(p.y+time));\n    moda(p.xz, 8.);\n    p.x -= 0.5;\n    float c = cyl(p.xzy, 0.1+p.y*0.05, 2.);\n    float d = stmin(c, o, 0.5,3.);\n    g2 += 0.1/(0.1+d*d);\n    return d;\n}\n\nfloat g1 = 0.;\nfloat strings (vec3 p)\n{\n    p.xy *= rot(p.z*0.3+time);\n    moda(p.xy, 5.);\n    p.x -= 6.;\n    float d = cyl(p, 0.3, 1e10);\n    g1 += 0.1/(0.1+d*d);\n    return d;\n}\n\nfloat SDF (vec3 p)\n{\n    float anim = exp(-fract(PI*time*BPM/2.)*6.)*8.;\n    p.x += texNoise(p.yz*anim).r*0.5;\n    return min(tunnel(p), min(strings(p),jellyfish(p)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    float dither = hash1d(uv);\n    \n    vec3 ro = vec3(0.001,0.001,-4.); vec3 p = ro;\n    vec3 rd = normalize(vec3(uv,1.));\n    vec3 col = vec3(0.);\n    \n    float shad = 0.;\n    bool hit = false;\n    \n    for (float i=0.; i<100.; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            shad = i/100.;\n            hit = true;\n            break;\n        }\n        d *= 0.9+dither*0.1;\n        p += d*rd;\n    }\n    float t = length(ro-p);    \n    if (hit)\n    {\n        col = vec3(shad);\n    }\n    col += g2*vec3(0.5,0.3,0.)*0.2;\n    col += g1*0.2;\n\n    col = mix(col, vec3(0.,0.,0.08), 1.-exp(-0.005*t*t));\n    \n    fragColor = vec4(pow(col, vec3(1.)), 1.);\n}","name":"Image","description":"","type":"image"}]}