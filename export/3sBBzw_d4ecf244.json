{"ver":"0.1","info":{"id":"3sBBzw","date":"1589667676","viewed":58,"name":"Test Camera","username":"ibragim_aghdabi","description":"work and progress","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p){\n    float d = DistLine(ro, rd, p);\n    d = smoothstep(.06, .05, d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float t = iTime; \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3 (3.*sin(t), 2.,-3.*cos(t));  // ro - Ray origin, cam up\n    \n    vec3 lookat = vec3(.5);\n    \n    float zoom = 1.;\n    \n    vec3 f = normalize(lookat-ro);   // f - forward vector\n    vec3 r = cross(vec3(0., 1., 0.), f);   // r - right vec\n    vec3 u = cross(f,r);   // u- up vector\n    \n    vec3 c = ro + f*zoom;  // c- center\n    vec3 i = c+ uv.x*r + uv.y*u;   // i - intersection\n    vec3 rd = i-ro;\n    \n  \n    \n    \n    float d = 0.;\n    \n    d += DrawPoint(ro, rd, vec3(0., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 1.));\n   \n \n\n    // Output to screen\n    fragColor = vec4(d);\n}\n","name":"Image","description":"","type":"image"}]}