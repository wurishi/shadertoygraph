{"ver":"0.1","info":{"id":"Wt2Gzd","date":"1560771046","viewed":183,"name":"Eighties style EGA cube spin.","username":"zeljkog","description":"This was one of my first graphic codes. Ran on 286/16MHz, with EGA graphics.\nIt's in 320x200 resolution, 16 colors (only 7 are used), original from EGA palette.\nAll done with emulated integers to be as close to the original.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["cube","ega","eighties"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float xres=320.0;\n    const float yres=200.0;\n    const float gamma=1.0/2.2;\n    \n    vec2 uv = fragCoord/iChannelResolution[0].xy;\n    float scx=iResolution.x/xres;\n    float scy=iResolution.y/yres;\n    float x=uv.x*xres-0.5/scx;\n    float y=yres-0.5/scy-uv.y*yres;\n    float ax=0.0,ay=0.0;\n    uv=vec2(floor(x)+0.5,floor(y)+0.5);\n    if(fract(x)>(1.0-1.0/scx)) ax=1.0-((1.0-fract(x))*scx);\n    if(fract(y)>(1.0-1.0/scy)) ay=1.0-((1.0-fract(y))*scy);\n    uv+=vec2(ax,ay);\n    \n    uv/=iResolution.xy;\n    \n    vec3 col=texture(iChannel0,uv).rgb;\n\n    fragColor=vec4(pow(col,vec3(gamma)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"struct Polygon\n{\n    vec2 a;\n    vec2 b;\n    vec2 c;\n    vec2 d;\n};\n\nPolygon polygons[6];\nint numpolys=0;\nPolygon poly1;\n\nfloat cross2d( vec2 a, vec2 b )\n{\n    return a.x*b.y - a.y*b.x;\n}\n\nint polyvis(vec2 uv)\n{\n    int i,p=0;\n    vec4 di;\n    for(i=0; i<numpolys; i++)\n    {\n        di=vec4(cross2d(polygons[i].b-polygons[i].a,uv-polygons[i].a),\n                cross2d(polygons[i].c-polygons[i].b,uv-polygons[i].b),\n                cross2d(polygons[i].d-polygons[i].c,uv-polygons[i].c),\n                cross2d(polygons[i].a-polygons[i].d,uv-polygons[i].d) );\n        if( all(greaterThanEqual(di,vec4(0.0))) )\n           p=i+1;\n    }\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=fragCoord.xy;\n\tvec3 col;\n    if(uv.x>=320.0||uv.y>=200.0)\n        col=vec3(0.0,0.0,0.0);\n    else {\n\t    float inten,r1,g1,b1;\n\t    float gx,gy,gz;\n\t    int col1,i;\n        vec3 coordo[8];\n        vec3 coordn[8];\n        vec2 coordd[8];\n        coordo[0]=vec3(-300.0,-300.0,-300.0);\n        coordo[1]=vec3( 300.0,-300.0,-300.0);\n        coordo[2]=vec3( 300.0, 300.0,-300.0);\n        coordo[3]=vec3(-300.0, 300.0,-300.0);\n        coordo[4]=vec3(-300.0,-300.0, 300.0);\n        coordo[5]=vec3( 300.0,-300.0, 300.0);\n        coordo[6]=vec3( 300.0, 300.0, 300.0);\n        coordo[7]=vec3(-300.0, 300.0, 300.0);\n        \n        gx=0.0; gy=0.0; gz=0.0;\n        float pi=3.1415926535897932384626433832795;\n        int ifr=iFrame;\n        \n        gx=mod(float(ifr/2),360.0)*pi/180.0;\n        gy=mod(float(ifr/2),360.0)*pi*2.0/180.0;\n        gz=mod(float(ifr/2),360.0)*pi*3.0/180.0;\n        float six,siy,siz,cox,coy,coz;\n        float tx,ty,tz;\n        six=sin(gx); siy=sin(gy); siz=sin(gz);\n        cox=cos(gx); coy=cos(gy); coz=cos(gz);\n        for(i=0; i<8; i++)\n        {\n            tx=(coordo[i].x*coy-coordo[i].z*siy);\n            tz=(coordo[i].z*coy+coordo[i].x*siy);\n            \n            ty=(coordo[i].y*cox-tz*six);\n            coordn[i].z=floor(tz*cox+coordo[i].y*six);\n\n            coordn[i].x=floor(tx*coz-ty*siz);\n            coordn[i].y=floor(ty*coz+tx*siz);\n            \n            tx=coordn[i].x*200.0/(coordn[i].z+1300.0);\n            tx=floor(tx)+160.0;\n            ty=coordn[i].y*200.0/(coordn[i].z+1300.0);\n            ty=floor(ty)+100.0;\n            coordd[i]=vec2(tx,ty);\n        }\n        //coordd[0]=vec2(140.0,80.0);\n        //coordd[1]=vec2(180.0,80.0);\n        //coordd[2]=vec2(180.0,120.0);\n        //coordd[3]=vec2(140.0,120.0);\n        \n        polygons[0].a=coordd[0];\n        polygons[0].b=coordd[1];\n        polygons[0].c=coordd[2];\n        polygons[0].d=coordd[3];\n\n        polygons[1].a=coordd[0];\n        polygons[1].b=coordd[4];\n        polygons[1].c=coordd[5];\n        polygons[1].d=coordd[1];\n        \n        polygons[2].a=coordd[1];\n        polygons[2].b=coordd[5];\n        polygons[2].c=coordd[6];\n        polygons[2].d=coordd[2];\n\n        polygons[3].a=coordd[2];\n        polygons[3].b=coordd[6];\n        polygons[3].c=coordd[7];\n        polygons[3].d=coordd[3];\n\t\t\n        polygons[4].a=coordd[3];\n        polygons[4].b=coordd[7];\n        polygons[4].c=coordd[4];\n        polygons[4].d=coordd[0];\n\t\t\n        polygons[5].a=coordd[5];\n        polygons[5].b=coordd[4];\n        polygons[5].c=coordd[7];\n        polygons[5].d=coordd[6];\n\t\t        \n        numpolys=6;\n\n        col1=polyvis(uv);\n        inten=float((col1&8)>>3);\n        inten/=3.0;\n        r1=float((col1&4)>>2);\n        g1=float((col1&2)>>1);\n        b1=float(col1&1);\n        col=vec3(inten+r1*2.0/3.0,inten+g1*2.0/3.0,inten+b1*2.0/3.0);\n        \n    \t//col=vec3(mod(floor(uv.x)+floor(uv.y),2.0));\n        \n    }\n    fragColor = vec4(col,0.0);\n}","name":"Buf A","description":"","type":"buffer"}]}