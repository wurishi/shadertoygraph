{"ver":"0.1","info":{"id":"7sKyzd","date":"1655427501","viewed":106,"name":"Curve bending Shape Problem","username":"Kanoba","description":"Problem with a shaping a curve I can bend","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["curvesbending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = fragCoord/iResolution.xy;\n\n\n\n\n// This Is what I currently have the bend functionality I want\n// but I want a radial curve\n\n    float bend = 1.0;\n    \n    uv.y = -uv.y;\n    uv.x = dot(uv.x,uv.x);\n    float uvx = uv.x;\n    uv.x = floor(uv.x);\n    uv.x = (uv.x * bend);\n    uvx = (uvx * bend);\n    uv.x += uvx;\n    uv.y -= uv.x;\n    uv.y = fract(uv.y);\n\n// This is the shape that I want but with the bending functionality from above\n// Is there a simpler solution im not seeing? Ideally I don't want to have to create a beizer curve\n// With points and such, just wanna keep it as simple as above if possible\n\n    float roundCurve = fract(distance(uv2,vec2(0.0, 0.0)));\n\n\n\n    // Output to screen\n    fragColor = vec4(uv.y, roundCurve,0,0);\n}","name":"Image","description":"","type":"image"}]}