{"ver":"0.1","info":{"id":"ms3XW8","date":"1679695392","viewed":78,"name":"Color Cardioid","username":"gorplex","description":"Color Cardioid","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["demo","cardioid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\n#define SPEED 0.5\n#define NUM_POINTS 100.\n#define INT_FACTOR_STEPS_ONLY false\n\n#define RADIUS 0.49\n#define POINT_R 0.0025\n\n#define SV(x) smoothstep(2./iResolution.y, 0., x)\n\n#define CIRCLE(p, r, uv) SV(length((uv)-(p))-(r))\n#define RING(p, r, uv) SV(abs(length((uv)-(p))-(r)))\n\nvec2 getPointFromIndex(float index, float numPoints) {\n    float theta = 2.*PI*index/numPoints;\n    return RADIUS*vec2(cos(theta), sin(theta));\n}\n\n//Refrence: https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b ) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-iResolution.xy/2.)/iResolution.y;\n    fragColor=vec4(vec3(0.), 1.);\n    \n    //draw ring\n    fragColor.xyz += vec3(0.,1.,0.)*RING(vec2(0.), RADIUS, uv);\n\n    //draw points\n    float factor = iTime*SPEED;\n    if (INT_FACTOR_STEPS_ONLY) factor = floor(factor);\n    \n    for(float i=0.;i<NUM_POINTS;i++) {\n        //draw points\n        fragColor.xyz += vec3(0.,1.,1.)*CIRCLE(getPointFromIndex(i, NUM_POINTS), POINT_R, uv);\n        \n        //connect points\n        fragColor.xyz += vec3(1.,0.,1.)*smoothstep(2./iResolution.y, 0., \n            sdSegment(uv, getPointFromIndex(i, NUM_POINTS), getPointFromIndex(factor*i, NUM_POINTS)));\n    }\n}","name":"Image","description":"","type":"image"}]}