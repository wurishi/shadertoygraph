{"ver":"0.1","info":{"id":"XtyBRV","date":"1543088091","viewed":126,"name":"Convex Polygon","username":"scottviteri","description":"Given coordinates in clockwise order, draws corresponding polygon. \nThe coordinates must correspond to a convex polygon,","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["polygon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 pointsToNormalVector(vec2 p1, vec2 p2) {\n    return vec2(p1[1]-p2[1], p2[0] - p1[0]);\n}\n\nvec2 pointsToOffsetVector(vec2 p1, vec2 p2){\n\tfloat t = dot(p1-p2,p1)/pow(length(p2-p1),2.0);\n    return p1 + t * (p2 - p1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 vertices[4];\n    vertices[0] = vec2(0.5,0.5);\n    vertices[1] = vec2(0.7,0.5);\n    vertices[2] = vec2(0.6,0.6);\n    vertices[3] = vec2(0.6,0.7);\n    \n    vec4 color = vec4(1.0);\n    for (int i=0; i<vertices.length(); i++){\n        vec2 p1 = vertices[i];\n        vec2 p2;\n        if (i == (vertices.length() - 1)) {\n   \t\t\tp2 = vertices[0];\n        } else {\n        \tp2 = vertices[i+1];    \n        }\n        vec2 n = pointsToNormalVector(p1, p2);\n        vec2 b = pointsToOffsetVector(p1, p2);\n        \n        bool sat = dot(uv-b, n) >= 0.;\n        if (!sat) {\n            color = vec4(0.0);\n        }       \n    }\n    \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}