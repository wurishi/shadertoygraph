{"ver":"0.1","info":{"id":"lsGfDR","date":"1528277328","viewed":124,"name":"random chess grid","username":"guowei","description":"random chess grid","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chessgrid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// got idea from https://www.shadertoy.com/view/Ml2fWd\n\nfloat generateRandomNumber(vec2 n)\n{\n  return 0.5 + 0.5 * \n     fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Variables\n    float col = 15.0;\n    float thickness = 1.15;\n    float antialiasing = 0.001;\n    float intensity = 1.0;\n    float speed = 0.9;\n    vec2 offset = vec2(1.0,1.0);\n   \tvec4 color = vec4(0.0,0.0,1.0,1.0);\n    \n    vec2 uv = (fragCoord.xy/iResolution.x) * col;\n    \n\tfloat blockPositionX = floor(uv.x) / col;\n    float blockPositionY = floor(uv.y) / col;\n    float totalBlocks = blockPositionX * col * blockPositionY * col;\n    \n   \n\t\n    //grid\n    vec2 grep = abs(fract(uv) - 0.5);\n    float grid = max(grep.x,grep.y)*thickness;\n\t\n    //antialiasing\n\tfloat a = antialiasing;\n    \n    float modedBlock = mod(totalBlocks, 5.0);\n    \n    vec4 blockColor = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    if(modedBlock < 0.01) {\n    \tblockColor = vec4(0.0, blockPositionY, blockPositionX, 1.0);\n    }\n    \n    //use block color\n    //vec4 blockColor = vec4(0.0, blockPositionY, blockPositionX, 1.0);\n    blockColor *= (1.0 - smoothstep(0.45-a,0.49+a,grid));\n    fragColor = vec4(blockColor * intensity);\n}","name":"Image","description":"","type":"image"}]}