{"ver":"0.1","info":{"id":"XcVXRw","date":"1714964794","viewed":84,"name":"bae #005 ~ Bubble Trouble","username":"BretHudson","description":"Lots of sines and circles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sin","bubble"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float bounceMod(float v, float m)\n{\n    return abs(mod(abs(v), m) - m / 2.0);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat antialias(float d)\n{\n    return smoothstep(1.0, -1.0, d / fwidth(d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float PI = 3.141592;\n    float TAU = PI * 2.0;\n    \n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.x;\n    vec2 uv0 = uv;\n\n    float d1 = 1.0;\n    float d2 = 1.0;\n    float d3 = 1.0;\n    float d4 = 1.0;\n    \n    float size = 0.05;\n    vec2 dist = vec2(0.125, 0.025);\n    float circleCount = 17.0;\n    \n    float t = mod(iTime, 1.0);\n    \n    // Red parabola (U)\n    float halfCount = floor(circleCount / 2.0);\n    for (float i = -halfCount + t - 1.0; i <= halfCount + t; ++i)\n    {\n        uv.x = uv0.x - i * dist.x;\n        uv.y = uv0.y - abs(i * i * dist.y) + 0.25;\n        float s = size * abs(i) / 3.0;\n        d1 = min(d1, sdCircle(uv, s));\n    }\n    \n    // Green parabola (^)\n    for (float i = -halfCount + t - 1.0; i <= halfCount + t; ++i)\n    {\n        uv.x = uv0.x - i * dist.x;\n        uv.y = uv0.y + abs(i * i * dist.y);\n        uv.y -= 0.25;\n        d2 = min(d2, length(uv) - size * ((1.5 + abs(i)) / 7.0));\n    }\n    \n    // Pink sin wave\n    for (float i = -halfCount + t - 1.0; i <= halfCount + t; ++i)\n    {\n        uv.x = uv0.x - i * dist.x;\n        uv.y = uv0.y + sin(i + iTime) * 0.2;\n        float s = size * (0.3 + 0.9 / (0.7 + abs(i)));\n        d3 = min(d3, length(uv) - s);\n    }\n    \n    // Orange circle of bubbles\n    t = iTime * 1.5;\n    for (float i = -halfCount + t - 1.0; i <= halfCount + t + 1.01; ++i)\n    {\n        float r = 0.65;\n        float s = abs(sin(i)) * (4.5 + abs(bounceMod(i, 70.0))) / 7.0;\n        float a = i / circleCount * TAU * 2.0;\n        uv.x = uv0.x - cos(a) * r;\n        uv.y = uv0.y - sin(a) * r;\n        d4 = min(d4, length(uv) - size * s);\n    }\n    \n    \n    d1 = antialias(d1);\n    d2 = antialias(d2);\n    d3 = antialias(d3);\n    d4 = antialias(d4);\n   \n    vec3 col = vec3(0.5 + d1 * 0.7 + d2 * 0.3 + d3 * 0.7 + d4 * 0.4,\n                    0.5 + d1 * 0.2 + d2 * 0.8 + d3 * 0.4 + d4 * 0.3,\n                    0.5 + 0.2 + d3 * 0.8 + d4 * 0.0);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}