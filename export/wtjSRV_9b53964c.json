{"ver":"0.1","info":{"id":"wtjSRV","date":"1566493528","viewed":118,"name":"Jake The Dog","username":"sfaer","description":"A 2D animation of Jake's face from Adventure Time :)\n\n(update :  just saw spolsh version which is super duper cool : https://www.shadertoy.com/view/ls2Bzy)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","face"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define AspectRatio  (iResolution.y / iResolution.x);\n\n#define SSTEP(a, b, x) smoothstep((a)-(x), (a)+(x), b)\n\n\nfloat inCircle(in vec2 pt, in float r) {\n    pt.y *= AspectRatio;\n    float dp = dot(pt, pt);\n    return SSTEP(dp, r*r, 0.0015*r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Background color;\n    vec3 bgColor = vec3(1.0, 0.7, 0.0);\n    \n    vec3 col = bgColor;\n    \n    float t = 12.0f + iTime;\n\n\t// Time variation\n    float vt1 = sin(0.25*t)*sin(-0.4*t);\n    float vt2 = 0.5*(1.0 + sin((2.5-0.05*vt1)*t));\n    float vt3 = sin(0.5*t);\n    \n    // Eyes\n    float eyeSpace = 0.17;\n    float eyeLevel = 0.7;\n    vec2 leftEyePos = uv - vec2(0.5 - eyeSpace, eyeLevel);\n    vec2 rightEyePos = uv - vec2(0.5 + eyeSpace, eyeLevel);\n    \n    vec3 backEyeColor = vec3(0.15, 0.15, 0.1);    \n    float backEyeRadius = 0.1;\n    float inLeftEye = inCircle(leftEyePos, backEyeRadius);\n    float inRightEye = inCircle(rightEyePos, backEyeRadius);\n    \n    // back (black) eyes with contour\n    col = mix(col, backEyeColor, inLeftEye + inCircle(leftEyePos, 1.05*backEyeRadius));\n    col = mix(col, backEyeColor, inRightEye + inCircle(rightEyePos, 1.05*backEyeRadius));\n    \n    // front (white) eyes\n    vec3 frontEyeColor = vec3(0.9, 0.9, 0.95);\n    float frontEyeSpace = (0.3 + mix(0.0, 0.2, vt1)) * backEyeRadius;\n    float frontEyeRadius = backEyeRadius - frontEyeSpace;\n    col = mix(col, frontEyeColor, inLeftEye * inCircle(leftEyePos - frontEyeSpace * vec2( vt1, 0.4 + vt3), frontEyeRadius));\n    col = mix(col, frontEyeColor, inRightEye * inCircle(rightEyePos - frontEyeSpace * vec2( vt1, 0.4 + vt3), frontEyeRadius));\n    \n    // shiny corner eyes\n    frontEyeSpace *= 1.5;\n    frontEyeRadius = mix(0.075, 0.75, abs(vt1)) * (backEyeRadius - frontEyeRadius);\n    col = mix(col, frontEyeColor, inLeftEye * inCircle(leftEyePos + frontEyeSpace * vec2(0.75, 1.0), frontEyeRadius));\n    col = mix(col, frontEyeColor, inRightEye * inCircle(rightEyePos + frontEyeSpace* vec2(0.75, 1.0), frontEyeRadius));\n    \n    // mouth\n    {\n        vec2 mouthPos = uv - vec2(0.5, 0.23 + 0.0125*vt2);\n        \n        vec2 pt = 2.0*mouthPos;\n        pt.y -= abs(sin(pt.x * pt.x * 2.5));\n        float d = dot(pt, pt);\n        \n        // contour\n        float insideMouth = SSTEP(d, 0.1025, 0.005);\n        col = mix( col, vec3(0.0), insideMouth);\n        // inside\n        insideMouth = SSTEP(d, 0.1, 0.005);\n        vec3 mouthColor = vec3( 0.3, 0.0, 0.05);\n        col = mix( col, mouthColor, insideMouth);\n\n    \n        // teeth\n        pt = 50.0*(mouthPos - vec2(0.0, 0.11));\n        \n        float d1 = 2.25 * (2.0*(fract(0.25*pt.x + 0.5)-0.5));\n        float d2 = 1.0 - sqrt(1.0 - 0.4*d1*d1);\n        \n        // curve teeth\n        d = d2 + 3.0*(1.0 - sqrt( 1.0 - 0.025*pt.x*pt.x ));\n        \n        float isTeeth = insideMouth * SSTEP(d, pt.y, 0.15);\n        vec3 teethColor = vec3(0.9, 0.85, 0.8);\n        col = mix(col, teethColor, isTeeth);\n     \n        // tongue\n        pt = (15.0 + 0.5*vt2)*(mouthPos - vec2(0.0, -0.125));\n        d = -pt.x * sqrt( 1.5 - 2.0*pt.x*pt.x );\n        float isTongue = insideMouth * SSTEP(pt.y, d, 0.05);\n        vec3 tongueColor = vec3(0.95, 0.4, 0.5);\n        col = mix(col, tongueColor, isTongue);\n    }\n    \n    // doodly noodle\n    {\n        vec2 doodleCenter = 1.0*(uv - vec2(0.5, 0.2));\n\n        vec2 pt = 20.0*doodleCenter;\n        float ds = 9.50 * sin(pt.x) / pt.x;\n\n        // inside\n        float ds_top = inCircle(doodleCenter, 0.28);\n        float ds_btm = 1.0 + pt.y - ds;\n        ds = min(smoothstep( 0.0, 0.15, ds_btm), ds_top);\n        col = mix( col, bgColor, ds);\n\n        // contour\n        ds_top -= inCircle(doodleCenter, 0.2788);\n        ds_btm = smoothstep(0.0, 0.05, ds_btm) - smoothstep(0.05, 0.25, ds_btm);\n\n        ds *= ds_btm + ds_top;\n        col = mix( col, 0.15 * bgColor, ds);\n\t}   \n    \n    // Truffle\n    vec3 truffleColor = vec3(0.2, 0.2, 0.15);\n    vec2 trufflePos = uv - vec2(0.5, eyeLevel - 1.5*backEyeRadius);\n    float truffleRadius = pow(abs(1.2*trufflePos.y), 14.0*trufflePos.y*trufflePos.y) * 0.08;\n    col = mix(col, truffleColor, inCircle( trufflePos, truffleRadius ));\n\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}