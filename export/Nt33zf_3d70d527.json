{"ver":"0.1","info":{"id":"Nt33zf","date":"1636411229","viewed":72,"name":"Cellular Noise :3","username":"zlynch","description":"Color Changing Noise!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(tan(vec2(dot(p,vec2(50,150)),dot(p,vec2(300,150)))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float amp = 0.15;\n    \n\n\n    float cellCount = 4.0;    \n    \n    float ampOfMove = 9.;\n    float dist = 2.;\n    \n    float seperation = 1.4;\n    vec2 mouse = vec2(iMouse)/vec2(iResolution);\n\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(1. * mouse.x, 0, 1.0 * mouse.y);\n    uv *= cellCount;\n    \n    vec2 movement = fract(uv);\n    vec2 intMove = floor(uv);\n\n\n    for (int x = 0; x <3; x++) {\n        for (int y = 0; y<3; y++)\n        {\n            vec2 neighbour = vec2(float(y), float(x));\n            \n            vec2 pt = random2(neighbour + intMove);\n            pt =  amp*(cos(iTime + ampOfMove*pt));\n            dist = min(dist, length(neighbour + pt - movement));\n        }\n    };\n\n    color += seperation*dist;\n\n    fragColor = vec4(color,3.0);\n}\n","name":"Image","description":"","type":"image"}]}