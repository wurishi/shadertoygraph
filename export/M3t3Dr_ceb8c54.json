{"ver":"0.1","info":{"id":"M3t3Dr","date":"1716373757","viewed":108,"name":"Basic How To Use Buffer Demo","username":"Patan77","description":"Simple Demonstration of how to use buffers in Shadertoy","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["simple","demo","buffer","guide"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//In ShaderToy, buffer shaders (like Buffer A, Buffer B, etc.) are  processed before the image shader. \n\n//1. **Buffer Shaders (Buffer A, Buffer B, etc.):** These shaders are executed first. Each buffer shader can render its output to a texture that can then be used as an input for subsequent shaders, including other buffer shaders and the final image shader.\n//2. **Image Shader:** This shader is processed last and can use the outputs of the buffer shaders as inputs.\n\n//To illustrate, let's consider a scenario where you have a Buffer A and an Image shader:\n//In this demo we create a simple gradient in BufferA and write it to iChannel0 that we then read in the Image shader.\n\n//### Image Shader\n//This shader uses the texture generated by Buffer A.\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Sample the texture from Buffer A\n    vec4 bufferAColor = texture(iChannel0, uv);\n    \n    // Example: Use the color from Buffer A\n    vec3 color = bufferAColor.rgb;\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//### Buffer A\n//This shader performs some initial computation and stores the result in a texture.\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Example: Create a simple gradient\n    vec3 color = vec3(uv.x, uv.y, 0.5);\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}