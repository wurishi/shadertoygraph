{"ver":"0.1","info":{"id":"4t3cRM","date":"1531909825","viewed":240,"name":"Dot pattern","username":"skaplun","description":"Shader masks input image with dot pattern and averages color inside each cell\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["led","dot","averagecolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DOT_SIZE 7.5\n\nvec4 avg_color(vec2 uv)\n{\n\tvec4 clr = vec4(0);\n    vec2 s = (uv - mod(uv, DOT_SIZE));\n    for(int i=0; i<int(DOT_SIZE); i++){\n    \tfor(int j=0; j<int(DOT_SIZE); j++){\n    \t\tclr += texture(iChannel0, (s + vec2(i, j))/iResolution.xy);\n    \t}\n    }\n    return clr/(DOT_SIZE * DOT_SIZE);\n}\n\nfloat dot_pattern(vec2 uv)\n{\n\tvec2 f = mod(uv, DOT_SIZE);\n    vec2 c = (uv - f) + DOT_SIZE/2.;\n    return smoothstep(.45, .35, distance(uv, c)/DOT_SIZE);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = avg_color(fragCoord.xy) * dot_pattern(fragCoord.xy);\n}","name":"Image","description":"","type":"image"}]}