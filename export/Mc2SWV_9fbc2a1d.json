{"ver":"0.1","info":{"id":"Mc2SWV","date":"1707120465","viewed":74,"name":"froktal","username":"eriben0628","description":"adsf","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n#define numArms 5\n#define fuckhell 0.4\n\nvec4 fractal(vec2 p) {\n    vec2 M = vec2(0.0);\n    float dst;\n    vec3 color = vec3(0.0);\n    \n    for(int i =0; i < 10; i++) {\n        dst = 100.00;\n        int index = -1;\n        float angle = 2.0*PI/float(numArms);\n        vec2 tempM;\n        for(int s = 0; s < numArms; s++) {\n            vec2 m = M + vec2(cos(float(s)*angle), sin(float(s)*angle))*pow(fuckhell, float(i))*sin(float(s)*iTime);\n            float tempDst = length(m-p);\n            \n            if(tempDst < dst) {\n                index = s;\n                dst = tempDst;\n                tempM=m;\n            }\n        }\n        if(index == 0) color += vec3(1.0,0.0,0.0);\n        if(index == 1) color += vec3(0.0,1.0,0.0);\n        if(index == 2) color += vec3(0.0,0.0,1.0);\n        M = tempM;\n    }\n    \n    \n    return vec4(dst)*1000.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv=(uv*2.0-1.0)*2.0;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(fractal(uv).xyz)*0.1;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}