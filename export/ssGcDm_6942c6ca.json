{"ver":"0.1","info":{"id":"ssGcDm","date":"1654960510","viewed":149,"name":"Simple convolved sin noise","username":"mattdeeds","description":"Assuming \"sin\" is a fast operation, this is some pretty quick noise.  To really see it go crazy change line 45 to use \"insane\".","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise3to1(in vec3 p) {\n  const mat3 m = mat3(\n    1.0, 0.0, 0.0,\n    0.5, 1.2, 0.0,\n    0.0, 0.0, 1.0);\n\n  vec3 s = m * p;\n\n  return sin(s.x) * sin(s.y) * sin(s.z);\n}\n\nvec3 noise3to3(in vec3 p) {\n  return vec3(\n    noise3to1(p.xyz + vec3(1, 2, 3) * vec3(0.9, 0.7, 1.3)),\n    noise3to1(p.zyx + vec3(7, 9, 8) * vec3(0.5, 1.2, 1.1)),\n    noise3to1(p.yxz + vec3(3, 2, 5) * vec3(0.8, 0.3, 1.5)));\n}\n\nvec3 brown(in vec3 p) {\n  return 0.5 * noise3to3(p) + 0.2 * noise3to3(p * 3.0) + 0.1 * noise3to3(p * 5.0);\n\n}\n\nvec3 grey(in vec3 p) {\n  return brown(brown(p * 0.1) * 5.0);\n}\n\n\n\nvec3 insane(in vec3 p) {\n  vec3 res = p * 0.03;\n  for (int j = 0; j < 50; j += 1) {\n    res = grey(res) * (0.3 * float(j) + 1.0);\n  }\n  return(res);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Change 'grey' to 'insane' to push your GPU a litte.\n    vec3 col = (0.5 * grey(vec3(fragCoord.xy * 3.0, iTime * 60.0) * 0.02) + 0.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}