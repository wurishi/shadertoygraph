{"ver":"0.1","info":{"id":"flSfDD","date":"1652188900","viewed":105,"name":"Paint waves","username":"fpiaggio","description":"Testing color palletes, waves and cositas que no entiendo del todo porque estoy arrancando.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Super noob here trying to learn this amazing language :D\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\nvec3 palette[7];\n\n// Thanks kali for this function ðŸ™Œ\nvec3 getsmcolor(float c, float s) \n{\n    s*=.5;\n    c=mod(c-.5,7.);\n    vec3 color1=vec3(0.0),color2=vec3(0.0);\n    for(int i=0;i<7;i++) {\n        if (float(i)-c<=.0) {\n            color1 = palette[i];\n            color2 = palette[(i+1>6)?0:i+1];\n        }\n    }\n    return mix(color1,color2,smoothstep(.5-s,.5+s,fract(c)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tpalette[6]=vec3(57, 0, 153)/255.;\n\tpalette[5]=vec3(158, 0, 89)/255.;\n\tpalette[4]=vec3(255, 0, 84)/255.;\n\tpalette[3]=vec3(255, 84, 0)/255.;\n\tpalette[2]=vec3(255, 189, 0)/255.;\n\tpalette[1]=vec3(253, 195, 220)/255.;\n\tpalette[0]=vec3(252, 176, 198)/255.;\n\n    vec2 uv = ( fragCoord -.5*iResolution.xy )/iResolution.y;\n    \n    vec2 point_center = vec2(0.5)-uv;\n\n    \n    uv.x += sin(iTime*0.2)+2.;\n    uv.y += cos(iTime*0.2)+2.;\n    \n    float radio = length(point_center);\n    float angle = atan(uv.x, uv.y);\n\n    float shape = sin(\n        radio*angle + sin(radio + uv.x + cos(uv.y*2.+iTime*0.2) + sin(uv.y*angle+iTime*0.2)\n    ) + iTime*0.1)*0.5+0.5;\n    float maxMult = map(sin(iTime*0.2), -1., 1., 8., 80.);\n    vec3 color = getsmcolor(shape*maxMult-iTime*.8, 0.1);\n    vec3 col = vec3(color);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}