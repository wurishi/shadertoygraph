{"ver":"0.1","info":{"id":"ftcXWn","date":"1638907880","viewed":66,"name":"Trippy Circles - Plotted Graph","username":"spenceryonce","description":"Simple Circles plotted on a simulated graph with uv modulation.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles","simple","graph","trippy","plot","xy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: Spencer Yonce\n// Title: Trippy Circles\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat PI = 3.14159255858;\n\n\nfloat S(float a, float b, float c){\n    return smoothstep(a,b,c);\n}\n\nfloat plot(vec2 uv, float y){\n    float blur = 0.572;\n    return S(-0.02*blur,0.02*blur,uv.x-y)-\n        S(0.02*blur,-0.02*blur,uv.x-y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    //normalize our uvs\n    vec2 uv = fragCoord.xy/iResolution.y-vec2(1.,0.5);\n\n    //change our coordinate space\n    uv.xy *= 5.204;\n    uv.x += 1.0-sin(iTime*0.5);\n    uv.y += -1.0*cos(iTime*0.5)-1.0;\n\n    //function for a circle\n    float y = uv.x*uv.x+uv.y*uv.y;\n\n    vec3 col = vec3(0.);\n\n    //plot 3 circles\n    float pct = plot(uv, y);\n    float pct2 = plot(uv+vec2(-0.420,-0.030), y*fract(y*0.816)*sin(iTime));\n    float pct3 = plot(uv+vec2(0.750,0.810), y*3.*cos(iTime*0.5)*fract(y*.3));\n\n    //add our circles to the final color\n    //col += vec3(pct,0.,0.);\n    //col += vec3(0.,pct2,0.);\n    //col -= vec3(0.,0.,pct3);\n\n    col += vec3(pct,pct2,-pct3);\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}