{"ver":"0.1","info":{"id":"7tlfz8","date":"1652453915","viewed":71,"name":"pixelizator","username":"Moloko","description":"pixelizator","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pixelizator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 block = floor((uv)*64.0); //getting 100x100 floor cells\n    vec2 uv_noise = block / vec2(64)+0.1/64.; //return dimension but with flat color cause of 0, 0.1, 0.2 ... = 0, 0.0, 0.0 ...\n    //uv_noise.y += ((iTime) ) / (100.);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec4 tex0 = texture(iChannel0, uv);\n    vec4 tex1 = texture(iChannel0, uv_noise);\n    \n\n    // Output to screen\n    fragColor = tex1;\n}","name":"Image","description":"","type":"image"}]}