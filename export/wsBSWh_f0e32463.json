{"ver":"0.1","info":{"id":"wsBSWh","date":"1553565080","viewed":116,"name":"007- Blurred from time","username":"kbooz","description":"Blurring line based on x ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["helloworld"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Band(float size, float start, float end, float blur) {\n\tfloat step1 = smoothstep(start - blur, start + blur, size);\n\tfloat step2 = smoothstep(end + blur, end - blur, size);\n\n    return step1 * step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur) {\n\tfloat band1 = Band(uv.x, left, right, blur);\n\tfloat band2 = Band(uv.y, bottom, top, blur);\n    \n    return band1 * band2;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // 0 <> 1.\n\tuv -= .5; // -0.5 <> 0.5\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float time = iTime;\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    // First Rectangle\n    vec3 color = vec3(1., 1., 0.);\n    \n    float deformer = -sin(time+x*8.)*.1;\n    y+=deformer;\n    \n    float width = .5;\n    \n    float left = -width - .2;\n    float right = width;\n    \n    float blur = (-sin(x)+.5) * .05;\n    \n    float rect = Rect(vec2(x, y), left, right, -.1, .1, blur);\n    color *= rect;\n\n    \n    fragColor = vec4(color,1.0); // [...c, 1.0]\n}","name":"Image","description":"","type":"image"}]}