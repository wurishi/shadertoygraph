{"ver":"0.1","info":{"id":"lfjcD3","date":"1723105290","viewed":46,"name":"// _Ball 9.1 ","username":"oleg304","description":"magic ball","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["magic","lightning","storm","cool","golf","thunder"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// fork https://www.shadertoy.com/view/MfBczd\n\n// HLSL -> GLSL https://anteru.net/blog/2016/mapping-between-HLSL-and-GLSL/\n#define float2   vec2\n#define float3   vec3\n#define float4   vec4\n#define lerp     mix\n#define atan2    atan\n#define frac     fract\n#define fmod     mod\n#define float2x2 mat2     \n#define mul(a, b) a*b \n#define texSampl 1.\n#define Texture2DSample(iChannel0, texSampl, uv) texture(iChannel0, uv)\n#define ddx dFdx\n#define ddy dFdy\n#define saturate(oo) clamp(oo, 0.0, 1.0)\n\n// 100% credit to SnoopethDuckDuck https://www.shadertoy.com/view/XXyGzh\n// 100% ChatGPT rewritten from lines 16 onward\n// Prompt 1:\n/*\nHow does this shaderoy GLSL code\n{{code}}\nmake a thing that looks like colorful magic spells flowing though stormclouds in many directions\n*/\n\n// Prompt 2:\n/*\nhow about rewriting it nicely with readable variable names and no weird code conventions like\nwhile (++i < 10) { ...\n*/\nfloat ball(float2 uv, float time){\n    uv *=.5;\n    float d = smoothstep(.01,2.,1.7-(length(uv)*3.4));\n    float col=1.;\n    float2 r = float2(1.,1.);     \n    float amp = .4;\n    for (int i=0; i<18; i++){\n        col+=(1.+cos(time)*.1)/length((1.+float(i)*dot(r,r))*sin(1.5*uv/(.5-dot(uv,uv))*1.-9.*uv.yx+time))*.2;\n        r = cos(++time-22.*uv*pow(amp+=.065,float(i)))-5.*uv;\n        uv+=tanh(40.*dot(uv = mul(float2x2(cos(float(i)+.02 * time - float4(0.,11.,33.,0.))),uv),uv)*cos(100.*uv.yx+time))/300.+.2*amp*uv+cos(4./exp(dot(col,col)/800.)+time)/900.;\n    }   \n    float b = 30./(min(col,30.)+164./col)-dot(uv,uv)/250.; \n    return lerp(0.,b,d);\n    //return d;\n\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    float2 uv_0 =(2.*fragCoord-iResolution.xy)/iResolution.y;\n    fragColor = ball(uv_0, iTime)*float4(.2,.3,2.,1.);\n}\n","name":"Image","description":"","type":"image"}]}