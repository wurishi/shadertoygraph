{"ver":"0.1","info":{"id":"MsdXD2","date":"1461687037","viewed":392,"name":"Warp Noise","username":"piotrekli","description":"Warped value noise.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","fractal","noise","warp","valuenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MODE // you can comment this line\n#define OCTAVES 5\n#define SCALE 0.5\n\nvec2 random(vec2 uv)\n{\n    return texture(iChannel3, uv).xy;\n}\n\nvec2 vn(vec2 uv, float persistence)\n{\n    vec2 v = vec2(0.0);\n    float m = 0.0;\n    for (int i=0; i<OCTAVES; ++i)\n    {\n        v = v*persistence+random(uv);\n        m = m*persistence+1.0;\n        uv *= SCALE;\n    }\n    return v/m;\n}\n\nvec2 texture_(vec2 uv, float q, float p)\n{\n    vec2 t = vec2(q, 0.0);\n    return vn(uv+t.yx+0.2*vn(uv-t, p), p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float a = length(texture_(uv, iTime*0.01, 0.3));\n    float b = length(texture_(uv, iTime*0.01, 0.4));\n    float c = length(texture_(uv, iTime*0.01, 0.5));\n\tfragColor = vec4(\n        #ifdef MODE\n        \tabs(vec3(b-c, a-c, a-b))*7.0\n        #else\n        \tvec3(a, b, c)\n        #endif\n        , 1.0);\n}","name":"Image","description":"","type":"image"}]}