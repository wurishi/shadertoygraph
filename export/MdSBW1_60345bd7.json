{"ver":"0.1","info":{"id":"MdSBW1","date":"1500235304","viewed":187,"name":"[SH17A]Mountains Bird's-Eye View","username":"theGiallo","description":"Reference: http://www.asergeev.com/p/xl-2014-1519-09/airplane_russia_pushkin-central_caucasus_mountains_georgia_view.jpg","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["terrain","sh17a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// grass    vec3(.46,.5 ,.235)\n// dirt     vec3(.4 ,.25,.2  )\n// sky      vec3(.77,.9 ,.91 )\n// sky dark vec3(.1 ,.4 ,.7  )\n\n// NOTE: if you get errors about gradients try to use this, by unbird\n// #define T textureLod(iChannel0, c*=.1,0. ).r\n#define T texture(iChannel0, c*=.1 ).r\nvoid mainImage( out vec4 o, vec2 c )\n{\n    float h,k=5e2;\n    vec3 p=vec3(c/k-vec2(1.5,.7),1),\n         s=vec3(.7,.9,.95),\n         S=s*s*s*s*s*s,\n         I=s/s;\n    \n    for(o.rgb = mix(s,S,.3+p.y*3.);p.y<-.02;p += h - 2. < p.y ? p/k : -p)\n        c = p.xz + iTime*.1,\n        h = T * T,\n        c*=k,\n         o.rgb = mix(\n            T*(h>.25?I: I-s),\n            s,\n            h+p.z*.01);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nvoid mainImage( out vec4 o, vec2 c )\n{\n    o-=o;\n    vec3 r = normalize( vec3(c/iResolution.y - vec2(1.3,.67),1) ),\n         p,\n         s=vec3(.77,.9 ,.91);\n    \n    //p-=p;\n    p=r;\n    o.rgb = mix(s,vec3(.1,.4,.7),.3+r.y*3.);\n    //o = pow(s,vec4(.3+r.y*3.));\n    \n    for ( int i =0;i !=1024 && r.y<-.02; ++i )\n    {\n        c = p.xz*.1 + iTime*.005;\n        float h =\n               texture( iChannel0, c      ).r\n             * texture( iChannel0, c * .1 ).r;\n        p += h - 2. < p.y ? p*.005 : r-r;\n        o.rgb = mix(\n            (.3+.7*texture(iChannel1,c).r) * (h>.1 ? h>.25?vec3(1.2): vec3(.4,.25,.2): vec3(0,.2,.3)),\n            s,\n            h+length(p)*.01);\n    }\n}\n*/\n/*\nvoid mainImage( out vec4 o, vec2 c )\n{\n    o-=o;\n    vec4 r = normalize( vec4(c/iResolution.y - vec2(1.3,.67),1,1) ),\n         p,\n         s=vec4(.4,.7,.95,1);\n    //r/=r.y-.9;\n    //p += r*1000.;\n    //o.rgb = p+2.;return;\n    \n    //for ( float Z=0.; p.y<=0. && p.y>=Z-2.; p+=r )\n    \n    //p-=p;\n    p=r;\n    //o = mix(s,vec4(.1,.4,.7,1),.3+r.y*3.);\n    o = pow(s,vec4(.3+r.y*3.));\n    \n    for ( int i =0;i !=1024 && r.y<-.011; ++i )\n    {\n        c = p.xz*.1 + iTime*.005;\n        float h =\n            max(   texture( iChannel0, c      ).r\n                 * texture( iChannel0, c * .1 ).r,\n                 .1);\n        p += h - 2. < p.y ? p*.005 : r-r;\n        // grass vec4(.46,.5 ,.235,1)\n        // dirt  vec4(.4 ,.25,.2  ,1)\n        // sky   vec4(.77,.9 ,.91 ,1)\n        // sky dark vec4(.1,.4,.7,1)\n    \to = (.3+.7*texture(iChannel1,c).r) * (h>.1 ? h>.25?vec4(1.2): vec4(.4,.25,.2,1): vec4(0,.2,.3,1));\n        o = mix(o,pow(s,vec4(.3)),h+length(p)*.01);\n    }\n}\n*/","name":"Image","description":"","type":"image"}]}