{"ver":"0.1","info":{"id":"Ns3XD7","date":"1633281589","viewed":101,"name":"Lesson-0126","username":"xlat","description":"Lesson-0126","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fragmentshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///----------------------------------------------------------------------------|\n/// XLAT\n/// www.cyberforum.ru\n///----------------------------------------------------------------------------:\n\n///----------------------------------|\n/// Координаты(верхнего левого угла) | \n/// квадрата и его размер.           |\n/// (уже нормированные)              |\n///----------------------------------:\nvec3 Q1 = vec3(0.2 , 0.5, 0.3);\nvec3 Q2 = vec3(0.51, 0.5, 0.2);\nvec3 Q3 = vec3(0.72, 0.5, 0.1);\n///----------------------------------.\n\nconst vec4  RED = vec4(0.6, 0. , 0. , 1.);\nconst float PI  = 3.14;\n\nvec4 tonsin(float minn, float maxx, float a)\n{   a = a - minn;\n    float x = PI / (maxx - minn);\n    float c  = 0.8  * sin(a * x)+0.1;\n    return vec4(0.1, c, 0.1, 0.9);\n}\n\n///----------------------------------|\n/// Пиксели фигуры.                  |\n///----------------------------------:\nvec4 colorquad(vec2 pos, vec3 q)\n{   float k = iResolution.y / iResolution.x;\n\n    if(     q.x < pos.x && pos.x < (q.x+q.z) &&\n            q.y < pos.y && pos.y < (q.y+q.z*k)  )\n    {   \n        return tonsin(q.x, q.x+q.z, pos.x);\n    }\n    return vec4(0.0);\n}\n\nvec2 get_center(vec3 q)\n{   return vec2(q[0] + q.z / 2., q[1]+q[2]/3.56);\n}\n\n///----------------------------------|\n/// Обводка.                         |\n///----------------------------------:\nvec4 colorborder(vec2 pos, vec3 q)\n{   \n    vec4 t = colorquad(pos, q);\n    if(t.a > 0.) return t;\n\n    float k = iResolution.y / iResolution.x;\n\n    vec2 center = get_center(q);\n    vec2 skyle  = (center - pos) * 0.9;\n    \n    pos = skyle + center;\n\n    if(     q.x < pos.x && pos.x < (q.x+q.z) &&\n            q.y < pos.y && pos.y < (q.y+q.z*k)  )\n    {   \n        return RED;\n    }\n    return vec4(0.0);\n}\n\n///----------------------------------------------------------------------------|\n/// Run.\n///----------------------------------------------------------------------------:\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord/iResolution.xy;\n         uv = vec2(1.- uv.y+cos(iTime)*0.1, uv.x+sin(iTime)*0.1);\n    \n    fragColor   = colorborder(uv, Q1)\n                + colorborder(uv, Q2)\n                + colorborder(uv, Q3);\n\n}\n","name":"Image","description":"","type":"image"}]}