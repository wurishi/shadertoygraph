{"ver":"0.1","info":{"id":"lXffWH","date":"1729707274","viewed":24,"name":"Ripple 05","username":"_g00se","description":"Generative Ripple 05","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ripple05"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.326,0.557);\n    \n    //Color adjustment \n\n    return a + b*cos( 3.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    //Adjust this lil guy for complexity\n    \n    for (float i = 0.0; i < 2.0; i++) {\n        uv = fract(uv * 12.13) - .5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n\n //Adjust this lil guy for speed - higher slower - lower faster\n \n        d = sin(d*12. + iTime)/33.143;\n        d = abs(d);\n\n        d = pow(0.01 / d, 4.095);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}