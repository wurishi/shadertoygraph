{"ver":"0.1","info":{"id":"ldlBDn","date":"1495770379","viewed":264,"name":"Abstract Penn","username":"mmerchante","description":"An alternative version of my Penn seal of arms, this time more minimalistic. Inspired by Joy Division's album art.","likes":7,"published":1,"flags":64,"usePreview":0,"tags":["sound","distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXSWr","filepath":"https://soundcloud.com/karmafields/karma-fields-skyline","previewfilepath":"https://soundcloud.com/karmafields/karma-fields-skyline","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define saturate(x) clamp(x, 0.0, 1.0)\n#define vmax(v) max(v.x, v.y)\n\nfloat fCircle(vec2 p, float r) { return length(p) - r; }\n\nfloat fBox2(vec2 p, vec2 b) {\n\tvec2 d = abs(p) - b;\n\tfloat box = length(max(d, vec2(0))) + vmax(min(d, vec2(0)));    \n    return box;\n}\n\nfloat shield(vec2 uv) {\n    uv *= 175.0;\n    float dist = fBox2((uv - vec2(0.0, 75.0)), vec2(125.0, 75.0));    \n    float leftQuad = saturate(fBox2((uv - vec2(-62.5, -75.0)), vec2(62.5, 75.0)));\n    dist = min(dist, max(leftQuad, fCircle((uv - vec2(52.5, 25.0)), 180.0)));    \n    uv.x *= -1.0;\n    leftQuad = saturate(fBox2((uv - vec2(-62.5, -75.0)), vec2(62.5, 75.0)));    \n    dist = min(dist, max(leftQuad, fCircle((uv - vec2(52.5, 25.0)), 180.0)));    \n    return dist;\n}\n\nfloat soundwave(vec2 uv, float sound) {\n    vec2 origUV = uv;\n    float displ = (1.0 - saturate(shield(uv * .925)));\n    uv.x += sound * .25;\n    uv.y = uv.y * .5 + .5;\n    float noise = texture(iChannel0, uv * vec2(.4, 0.5) + vec2(iTime*.2)).r * (.115 + sound * .15);    \n    float mult = (1.0 - smoothstep(0., 1.25, saturate(abs(uv.x)))) * (1.0 + uv.y * .1);    \n    origUV.y += (1.0 - pow(abs(uv.x), 2.0)) * .075;    \n    uv.y += (1.0 - pow(abs(uv.x), 2.0)) * .02 + noise * mult;\n    uv.y = pow(uv.y + .3, 2.9);\n    float y = fract(uv.y * 7.0);\n    float line = step(y, .175);    \n    line *= 1.0 - saturate(shield(origUV * .55));    \n    return line;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;    \n    vec2 rawUV = uv * .5 + vec2(.5);\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 1.75;\n    float sound = texture(iChannel1, vec2(rawUV.x, 1.0)).r * 2.0 - 1.0;\n    uv.x += pow(sin(sound * 5.0 + uv.y * 3.0 + iTime) * sound, 3.0) * smoothstep(0.9, 1.0, iTime);\n    float lineR = soundwave(uv - sound * .015, sound);\n    float lineG = soundwave(uv + sound * .035, sound);\n    float lineB = soundwave(uv + sound * .075, sound);    \n    fragColor = vec4(lineR, lineG, lineB, 1.0);\n}","name":"Image","description":"","type":"image"}]}