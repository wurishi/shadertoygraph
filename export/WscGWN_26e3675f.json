{"ver":"0.1","info":{"id":"WscGWN","date":"1604422999","viewed":65,"name":"myeloon Truchet Tiling","username":"myeloon","description":"Simple Truchet tiling","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash21(vec2 p)\n{\n    p = fract(p * vec2(234.34, 435.345));\n    p += dot(p, p + 34.24);\n    return fract(p.x * p.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    const float PI = 3.14159;\n    \n    float scale = 8.0;\n    \n    vec2 staticuv = fragCoord/iResolution.y;\n    vec2 uv = staticuv + iTime / 10.0;\n    vec2 celluv = fract(uv * scale);\n    \n   \tvec2 cellNum = floor(uv * scale);\n   \tif (hash21(cellNum) > 0.5) celluv.y = 1.0 - celluv.y;\n    \n    if (celluv.y > 1.0 - celluv.x) celluv = 1.0 - celluv;\n    \n    float radius = 0.5;\n    float thickness = sin(PI * staticuv.y) / 8.0;\n\n    float dist = length(celluv);\n    float minrad = radius - thickness;\n    float maxrad = radius + thickness;\n    \n    float vertical = (dot(celluv, vec2(0, 2.0)) + 1.0) / 2.0;\n    float horizontal = (dot(celluv, vec2(2.0, 0)) + 1.0) / 2.0;\n    float opacity = dist < maxrad && dist > minrad ? 1.0 : 0.0;\n\n    vec3 col = vec3(opacity, opacity, opacity);\n    \n    // if (celluv.x < 0.01 || celluv.y < 0.01) col = vec3(1.0, 0.0, 0.0);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}