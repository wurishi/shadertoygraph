{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define MAX_MOVEMENT_SPEED 0.02\n#define MIN_RADIUS 0.01\n#define MAX_RADIUS 0.3\n#define STAR_COUNT 200\n#define PI 3.14159265358979323\n#define TWOPI 6.283185307\n\n#define RADIUS_SEED 1337.0\n#define START_POS_SEED 2468.0\n#define THETA_SEED 1675.0\n\nconst vec3 backgroundColor = vec3(0.0, 0.0, 0.3);\nconst vec3 starColor = vec3(1.0, 1.0, 1.0);\n\nfloat rand(float s1, float s2)\n{\n\treturn fract(sin(dot(vec2(s1, s2), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat saturate(float v)\n{\n\treturn clamp(v, 0.0, 1.0);\n}\n\nvec2 cartesian(vec2 p)\n{\n\treturn vec2(p.x * cos(p.y), p.x * sin(p.y));\n}\n\nvec3 renderBackground(vec2 uv, float aspect)\n{\n\tvec2 center = vec2(0.0);\n\tfloat dist = length(uv - center);\n\tvec3 col = saturate(1.0 / (dist + 1.5)) * backgroundColor;\n\treturn col;\n}\n\nvec3 renderStars(vec2 uv, float aspect)\n{\n\tvec3 col = vec3(0.0);\n\tfloat maxDistance = aspect;\n\n\tfor (int i = 0; i < STAR_COUNT; ++i) {\n\t\t// setup radius\n\t\tfloat radiusrand = rand(float(i), RADIUS_SEED);\n\t\tfloat rad = MIN_RADIUS + radiusrand * (MAX_RADIUS - MIN_RADIUS);\n\t\t\n\t\t// compute star position\n\t\tfloat startr = rand(float(i), START_POS_SEED) * maxDistance;\n\t\tfloat speed = radiusrand * MAX_MOVEMENT_SPEED;\n\t\tfloat r = mod(startr + iTime * speed, max(1.0, maxDistance));\n\t\tfloat theta = rand(float(i), THETA_SEED) * TWOPI;\n\t\tvec2 pos = cartesian(vec2(r, theta));\n\t\tpos.x *= aspect;\n\t\t\n\t\t// blending/effects\n\t\tfloat dist = length(uv - pos);\n\t\tfloat distFromStarCenter = dist / rad;\n\t\tfloat distTraveled = r / maxDistance;\n\t\tfloat shape = saturate(1.0 / (50.0 * (1.0 / distTraveled) * distFromStarCenter) - 0.05);\n\t\t\n\t\tcol += starColor * step(dist, rad) * shape;\n\t}\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat aspect = iResolution.x / iResolution.y;\n\tvec2 uv = -1.0 + 2.0 * (fragCoord.xy / iResolution.xy);\n\tuv.x *= aspect;\n\t\n\tvec3 col = renderBackground(uv, aspect);\n\tcol += renderStars(uv, aspect);\n\t\n\tfragColor = vec4(col.xyz, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdB3Dt","date":"1395378367","viewed":1309,"name":"Expanding Starfield","username":"zanneth","description":"Expanding starfield","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["2d","space","polar"],"hasliked":0,"parentid":"","parentname":""}}