{"ver":"0.1","info":{"id":"mdcBWj","date":"1697639733","viewed":28,"name":"Fork Damaged VC Tianyi Xiao","username":"JackXTY","description":"Simulating a damaged VCR playing a video","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    \n    const float color_offset = 0.02f;\n    \n    // seperate r, g, b\n    vec2 offset_r = vec2(0.0f, 0.01f * sin(iDate.w));\n    vec2 offset_g = vec2(color_offset, 0.0f);\n    vec2 offset_b = vec2(-color_offset, 0.03f * sin(0.2f * sin(iDate.w * 40.0f) + 0.5f * iDate.w));\n    \n    // scan line effect\n    float y = clamp(fract(warpedUv.y - 0.2f * iDate.w) * 7.0f, 0.0f, 1.0f);\n    if(y > 0.01f && y < 0.99f){\n        float ny = (y + 2.0f * iDate.w) * 40.0f;\n        \n        warpedUv.x += 0.8f * sin(ny - fract(ny)) * sin(ny);\n    }\n    \n    float r = texture(iChannel0, warpedUv + offset_r).r;\n    float g = texture(iChannel0, warpedUv + offset_g).g;\n    float b = texture(iChannel0, warpedUv + offset_b).b;\n                          \n    vec3 col = vec3(r, g, b);\n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}