{"ver":"0.1","info":{"id":"stlfWB","date":"1651431356","viewed":114,"name":"2D Ripple in Water","username":"Runar","description":"2 dimensional ripple in water, spreading outwards.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2dwaterripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ripple(vec2 uv, vec2 offset, float size, float width) {\n    vec2 pos = vec2(uv.x - offset.x, uv.y - offset.y);\n    \n    // Fix aspect ratio\n    pos.x *= 8.0/4.5;\n    \n    // Make ripples bigger when far from center\n    float varwidth = sqrt(pow(pos.x,2.0) + pow(pos.y, 2.0)) / 25.0;\n    \n    // Inner and outer circle\n    float inner = sqrt(pow(pos.x, 2.0) + pow(pos.y, 2.0)) - size;\n    float outer = sqrt(pow(pos.x, 2.0) + pow(pos.y, 2.0)) - (size + varwidth);\n\n    // Draw between inner and outer\n    return step(0.0, outer) - step(0.0, inner);\n}\n\nvec3 drawripples(vec2 uv, int amount) {\n    vec3 col = vec3(0.0);\n    \n    // Draw amount of ripples\n    for (int i = 0; i < amount; i++) {\n        float ripple = ripple(uv, vec2(0.5,0.5), mod(iTime + float(i) / float(amount) * 10.0, 10.0) / 10.0, 0.01);\n        col = mix(vec3(1.0), col, step(0.0,ripple));\n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    vec3 ripples = drawripples(uv, 10);\n\n    // Output to screen\n    fragColor = vec4(ripples,1.0);\n}","name":"Image","description":"","type":"image"}]}