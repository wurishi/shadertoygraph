{"ver":"0.1","info":{"id":"7tdGzH","date":"1635742833","viewed":151,"name":"vnoise fun","username":"rockhard","description":"20 mins of time just for fun.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["vnoisesimple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//original shader\n//https://www.shadertoy.com/view/flt3zH\n\nvec2 N22(vec2 p)\n{\n    vec3 a = fract(p.xyx*vec3(363.42, 524.87, 239.66));\n    a += dot(a, a+34.51);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =fragCoord/iResolution.xy-0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    float asp=iResolution.x / iResolution.y;\n \n    float m = 0.;\n    float t = iTime*.05+10.0;\n    \n    float minD = 100.;\n    \n    for(float i=0.0; i<65.; i++)\n    {\n        vec2 n = N22(vec2(i+0.5,i-0.5));\n        vec2 p = (sin(n*t));\n        \n        float d = length(uv-p);\n        \n        m+= 0.15*d;\n        \n        if(d < minD) minD =d;       \n    }\n    \n    minD = pow(m,minD);\n    vec3 col = mix(vec3(.35, 0.25, .05),vec3(0.12,0.32,0.5),minD*sin(iTime*0.5));\n    \n    col+= texture(iChannel0, uv+vec2(minD)).xyz*(1.25/minD); \n  \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}