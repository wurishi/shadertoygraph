{"ver":"0.1","info":{"id":"MXlfRS","date":"1728564783","viewed":42,"name":"Minecraft_Mike","username":"vvvvtrt","description":"Minecraft, noise Perlin & math func\nRotate camera using arrow keys on keyboard","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["minecraft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Линейная интерполяция\nfloat Lerp(float a, float b, float t){\n    return a + (b - a) * t;\n}\n\n// Билинейная интерполяция\nfloat QunticCurve(float t)\n{\n  return t * t * t * (t * (t * 6. - 15.) + 10.);\n}\n\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\n// шум Перлина для генирации мира\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // соседних значения шума\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    float u = QunticCurve(f.x);\n    float v = QunticCurve(f.y);\n    return Lerp(Lerp(a, b, u), Lerp(c, d, u), v);\n}\n\n// Функция для генерации перлинного шума\nfloat PerlinNoise(vec2 st) {\n    st *= 2.0;\n    st += vec2(1.0);\n\n    float noiseValue = 0.0;\n    float persistence = 0.5;\n    float octave = 4.0;\n    for (int i = 0; i < int(octave); i++) {\n        noiseValue += noise(st * pow(2.0, float(i))) * pow(persistence, float(i));\n    }\n\n    noiseValue = noiseValue / octave;\n    return noiseValue;\n}\n\n\n\n// код клавиш\nconst int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\n#define FLOOR_ 0.           // 0. - трава, 10. - снег\n#define drawing_distance 12. // Дальность прорисовки\n\n\nvoid mainImage( out vec4 fragColor, in vec2 w ) {\n    vec2 uv = w / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    vec2 mouseDelta = mouse - iMouse.zw;\n    float rotationSpeed = 0.2;\n    vec4 m = iMouse / iResolution.x;\n    vec3 d = vec3(w,1)/iResolution-0.5;\n \n    vec2 coord = texelFetch(iChannel1, ivec2(KEY_LEFT,2), 0).xy;\n    \n    // поворот камеры\n    mat3 rotation = mat3(\n        cos(mouseDelta.x * rotationSpeed), 0, sin(mouseDelta.x * rotationSpeed),\n        0, 1, 0,\n        -sin(mouseDelta.x * rotationSpeed), 0, cos(mouseDelta.x * rotationSpeed)\n    );\n    //d = rotation * d; // камера (работает плохо)\n    \n    // небольшой поворот камеры на стрелочки\n    d += vec3(texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).x * vec2(-0.5, 0), 0);\n    d += vec3(texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).x * vec2(0.5, 0), 0);\n    d += vec3(texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).x * vec2(0, 0.5), 0);\n    d += vec3(texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).x * vec2(0, -0.5), 0);\n    \n    vec3 p;\n    vec3 f;\n    vec3 g = d;  \n    vec3 o;\n    vec3 y = vec3(1,2,0); \n    \n    o.x = 0.3;\n    o.z = iDate.w;\n    \n    // движение по миру с шумом\n    o.y = 3.;\n    // Движение по функции припрыгивая\n    //o.y = (fract(3.0*cos((o.x)*(o.z))) > 0.3) ? 3.0*cos((o.x)*(o.z)) + 0.2 : floor(3.0*cos((o.x)*(o.z)) + 0.2); // движение по косинусу\n    \n    for( float i = .0; i < drawing_distance; i += .01 ) {\n        o += d * i *0.015;\n        \n        f = fract(o);\n        p = floor(o)*.3;\n        \n        // условие шум перлина или функция которая задает мир \n        //if( cos(p.z) + p.x * p.x > ++p.y ) { \n        if( PerlinNoise(vec2(p.z, p.x)) * 3.5 > ++p.y ) { \n            g = (sin(f.y)>.7 ? sqrt(y + FLOOR_) : cos(f.y) * y.yxz) / i;\n            break;\n        }\n    }\n    fragColor.xyz = g;\n}\n","name":"Image","description":"","type":"image"}]}