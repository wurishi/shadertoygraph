{"ver":"0.1","info":{"id":"sdGGR3","date":"1631997633","viewed":93,"name":"space jellyfish","username":"space_sheep","description":"space jellyfish","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["spacejellyfish"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.1415926535;\n\nfloat rnd1(float seed)\n{\n    return mod( 30.*pow(seed+20., 2.)*10., 17.) / 17.;\n}\nfloat rnd2(float seed)\n{\n    return mod( 3.*pow(seed+30., 3.)*10., 217.) / 217.;\n}\nfloat rnd(float seed)\n{\n    return rnd1(rnd2(seed));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0,0,0,0);\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = max(iResolution.x, iResolution.y) / min(iResolution.x, iResolution.y);\n    if(iResolution.x > iResolution.y) uv.x *= ratio;\n    else uv.y *= ratio;\n    \n    // stars\n    {\n        vec2 uv2 = uv*20.;\n        float r = rnd((uv2.y+10.)*(uv2.x+5.));\n        float r1 = .5*cos(uv2.x*uv2.y*2.+iTime*3.)+.5;\n        float r2 = .5*cos(uv2.x*uv2.y*3.+iTime*3.)+.5;\n        float r3 = .5*cos(uv2.x*uv2.y*4.+iTime*3.)+.5;\n        if(floor(r*2.) != 0.) r = rnd((uv2.y+11.)*(uv2.x+15.));\n        if(r >.998) fragColor = vec4(r1, r2, r3, 1.);\n        \n        float tx = texture(iChannel0, (uv + vec2(iTime/150.,iTime/150.))*1.5, 0.).x;\n        if(length(uv + vec2(iTime/250.,iTime/250.)) < .8) fragColor = vec4(tx*.5+.2, .0, .0, 1.);\n        if(length(uv + vec2(iTime/300.-1.4,iTime/300.-.7)) < .1) fragColor = vec4(tx, .5, .6, 1.);\n        if(length(uv + vec2(iTime/300.-.5,iTime/300.-1.5)) < .1) fragColor = vec4(tx, .5, .6, 1.);\n    }\n    \n    uv = inverse(mat2(vec2(sin(pi/4.), -cos(pi/4.)), vec2(cos(pi/4.), sin(pi/4.)))) * uv;\n    uv *= 20.;\n    uv -= vec2(-3., 8.);\n\n    vec2 becupUV = uv;\n    vec2 C = vec2(5., 0.);\n    \n    // long tentacles\n    {        \n        float r = .4;\n        \n        vec2 IN = vec2(uv.x, sqrt( pow(r, 2.) - pow(uv.x-C.x, 2.) ) + C.y );\n        vec2 IN2 = vec2(uv.x, -sqrt( pow(r, 2.) - pow(uv.x-C.x, 2.) ) + C.y );\n    \n        vec2 N = C-IN; float rad = 0.;\n        float rad1 = acos( (C-IN).x / length(C-IN) );\n        float rad2 = 2.*pi - acos( (C-IN2).x / length(C-IN2) );\n        \n        vec2 pol1 = vec2(mod(rad1, pi), uv.y);\n        vec2 pol2 = vec2(pi + mod(rad2, pi), uv.y);\n        pol1.x = pol1.x +   cos(pol1.y*3. + iTime*8.)/14.;\n        pol2.x = pol2.x +   cos(pol2.y*3. + iTime*8.)/14.;\n\n        float f1 = abs( acos(cos(pol1.x*8. + pi)))*3. - 3.;\n        float f2 = abs( acos(cos(pol2.x*8.)))*3. - 5.;\n\n        if(pol1.y < 10.)\n        {\n            if( f1 < pol1.y && pol1.x < pi) fragColor = vec4(.4, .7, .8, 1.);\n            else if( f2 < pol2.y && pol2.x > pi) fragColor.y = .2;\n        }\n    }\n    \n    uv = becupUV;\n    \n    // middle tentacles\n    {\n        \n        float r = 0.;\n        if(uv.y<10.) r = 1.;\n        else r = 0.;\n        r += .1*cos(uv.y+ iTime*5.+50.);\n        \n        vec2 IN = vec2(uv.x, sqrt( pow(r, 2.) - pow(uv.x-C.x, 2.) ) + C.y );\n        vec2 IN2 = vec2(uv.x, -sqrt( pow(r, 2.) - pow(uv.x-C.x, 2.) ) + C.y );\n    \n        vec2 N = C-IN; float rad = 0.;\n        float rad1 = acos( (C-IN).x / length(C-IN) );\n        float rad2 = 2.*pi - acos( (C-IN2).x / length(C-IN2) );\n        \n        vec2 pol1 = vec2(mod(rad1 + 16., pi), uv.y);\n        vec2 pol2 = vec2(pi + mod(rad2 + iTime/2., pi), uv.y);\n        pol1.x = pol1.x +   cos(pol1.y*3. + iTime/8.)/20.;\n        pol2.x = pol2.x +   cos(pol2.y*3. + iTime/8.)/14.;\n    \n        float f1 = abs( acos(cos(pol1.x*pi*3. + pi)))*3.;\n        float f2 = abs( acos(cos(pol2.x*8.)))*3. - 3.;\n        \n        if(pol1.y < 10.)\n        {\n            if( f1 < pol1.y && pol1.x < pi) { fragColor.xyz = vec3(.25, 0.0, .8);}\n            else if( f2 < pol2.y && pol2.x > pi) { fragColor.z = .3; }\n        }\n    }\n    \n    uv = becupUV;\n    \n    // front body\n    {\n        uv.y += 7.;\n        \n        float r = 3. + .5*cos(uv.y+ iTime*3.);\n        \n        if(uv.y > 17.) \n        {\n            float temp = r - pow(uv.y-17., 2.);\n            if(temp > 0.) r = temp;\n            else r=0.;\n        }\n        \n        vec2 IN = vec2(uv.x, sqrt( pow(r, 2.) - pow(uv.x-C.x, 2.) ) + C.y );\n        vec2 IN2 = vec2(uv.x, -sqrt( pow(r, 2.) - pow(uv.x-C.x, 2.) ) + C.y );\n    \n        vec2 N = C-IN; float rad = 0.;\n        float rad1 = acos( (C-IN).x / length(C-IN) );\n        float rad2 = 2.*pi - acos( (C-IN2).x / length(C-IN2) );\n        \n        vec2 pol1 = vec2(mod(rad1, pi), uv.y);\n        vec2 pol2 = vec2(pi + mod(rad2, pi), uv.y);\n        pol1.x = pol1.x +   .01*cos(pol1.y*3. + iTime/8.);\n        pol2.x = pol2.x +   .01*cos(pol2.y*3. + iTime/8.);\n    \n        float f1 = abs( acos(cos(pol1.x*pi*4. + pi)))*1.5+12.;\n        float f2 = abs( acos(cos(pol2.x*8.)))*3.+7.;\n        \n        float q = texture(iChannel0, vec2(pol1.x, pow(pol1.y,.3))*5., 0.).x;\n        \n        if(pol1.y < 20.)\n        {\n            float p = .5*cos(pol1.x*2.)+.5;\n            if( f1 < pol1.y && pol1.x < pi) { fragColor.xyz = vec3(.3-p+q/8., .4-p, .9-p);}\n            else if( f2 < pol2.y && pol2.x > pi) { fragColor.z = q; }\n        }\n\n    }\n\n\n}","name":"Image","description":"","type":"image"}]}