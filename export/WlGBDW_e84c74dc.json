{"ver":"0.1","info":{"id":"WlGBDW","date":"1614293812","viewed":222,"name":"Luminance Limiter","username":"sdfgeoff","description":"Just a demo I did for a friend ages back about real time video processing.","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["webcam","toon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float delta = 0.002;\nconst float LUMINANCE_VALUES = 5.0;\n\nfloat luminance(vec3 col) {\n \tfloat l = (col.r + col.g + col.b) / 3.0;   \n    return l;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 here_col = texture(iChannel0, uv).rgb;\n    float here = luminance(here_col);\n    \n    float right = luminance(texture(iChannel0, uv + vec2(delta, 0.0)).rgb);\n    float left = luminance(texture(iChannel0, uv + vec2(-delta, 0.0)).rgb);\n    float above = luminance(texture(iChannel0, uv + vec2(0.0, delta)).rgb);\n    float below = luminance(texture(iChannel0, uv + vec2(0.0, -delta)).rgb);\n    \n    \n    float edges = here * 4.0 - right - left - above - below;\n    float blur = (right + left + above + below + here) / 5.0;\n    edges = clamp(edges*2.0, -1.0, 1.0);\n    \n    float luminance = floor((blur + edges*0.0) * LUMINANCE_VALUES) / LUMINANCE_VALUES;\n    \n    vec3 hue = (here_col - here);\n    \n    float outval = luminance + edges;\n    vec3 col = hue + vec3(outval);//vec3(luminance);\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}\n","name":"Image","description":"","type":"image"}]}