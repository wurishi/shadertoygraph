{"ver":"0.1","info":{"id":"XctBzH","date":"1732718573","viewed":67,"name":"Truchet tiles v5","username":"jorge2017a2","description":"Truchet tiles v5","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["truchet","tiles","v5"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//----------------Truchet tiles v5------\n//falta corregir detalles, por el momento no tengo tiempo\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n\n#define S3(d,b) smoothstep(6./iResolution.y, 0. , d - (b) )\n#define S2(d,b) smoothstep(6./iResolution.y, 0. , d - (b) )\n#define S(d,b) smoothstep(6./iResolution.y, 0. , d - (b) )\n\n\n#define opU2(d1, d2) ( d1.x < d2.x ? d1 : d2 )\n\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DFS(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut;\n  return colOut;\n}\n\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\n\nvec3 Fig01(vec2 p, vec3 colout,vec3 colIn)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.7705479,0.2328767)+vec2(0.1,-0.05);\nmed=vec2(0.00342466,0.3476027);\nang=45.0*PI/180.0;\npr=Rotate(p-A,med/2.0,ang);\nfloat d11=sdBox(pr,med);\ncolout= DFS( colIn, colout, d11);\n\nA=vec2(0.2636986,0.7568493)+vec2(0.1,-0.180);\n///med=vec2(0.00342466,0.3784246); //original\nmed=vec2(0.00342466,0.534784246);\n\nang=45.0*PI/180.0;\npr=Rotate(p-A,med/2.0,ang);\nfloat d12=sdBox(pr,med);\ncolout= DFS( colIn, colout, d12);\n\n    return colout;\n}\n\n\n\n\nvec3 Fig02(vec2 p, vec3 colout, vec3 colIn)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.2636986,0.2226027)+vec2(-0.15,-0.05);\n//med=vec2(0.00342466,0.3784246); //original\nmed=vec2(0.00342466,0.4184246);\n\nang=-45.0*PI/180.0;\npr=Rotate(p-A,med/2.0,ang);\nfloat d21=sdBox(pr,med);\ncolout= DFS(colIn, colout, d21);\n\nA=vec2(0.7808219,0.739726)+vec2(-0.2,-0.05);\n//med=vec2(0.00342466,0.3784246); //original\nmed=vec2(0.00342466,0.440784246);  \n\nang=-45.0*PI/180.0;\npr=Rotate(p-A,med/2.0,ang);\nfloat d22=sdBox(pr,med);\ncolout= DFS(colIn, colout, d22);\n\n    return colout;\n}\n\n\nvec3 Fig03(vec2 p, vec3 colout, vec3 colIn)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.5068493,0.8972602);\nmed=vec2(0.00342466,0.1506849);\nfloat d71=sdBox(p-A,med);\ncolout= DFS(colIn, colout, d71);\n\nA=vec2(0.760274,0.619863);\nmed=vec2(0.00342466,0.130137);\nfloat d72=sdBox(p-A,med);\ncolout= DFS(colIn, colout, d72);\n\nA=vec2(0.2534246,0.3664384);\nmed=vec2(0.00342466,0.130137);\nfloat d73=sdBox(p-A,med);\ncolout= DFS(colIn, colout, d73);\n\nA=vec2(0.5068493,0.119863);\nmed=vec2(0.00342466,0.130137);\nfloat d74=sdBox(p-A,med);\ncolout= DFS(colIn, colout, d74);\n\nA=vec2(0.630137,0.7431507);\nmed=vec2(0.130137,0.00342466);\nfloat d75=sdBox(p-A,med);\ncolout= DFS(colIn, colout, d75);\n\nA=vec2(0.3767123,0.2431507);\nmed=vec2(0.130137,0.00342466);\nfloat d76=sdBox(p-A,med);\ncolout= DFS(colIn, colout, d76);\n\nA=vec2(0.1164384,0.4931507);\nmed=vec2(0.130137,0.00342466);\nfloat d77=sdBox(p-A,med);\ncolout= DFS(colIn, colout, d77);\n\nA=vec2(0.8869863,0.4931507);\nmed=vec2(0.130137,0.00342466);\nfloat d78=sdBox(p-A,med);\ncolout= DFS(colIn, colout, d78);\n    return colout;\n}\n\nvec3 Fig04(vec2 p, vec3 colout, vec3 colIn)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.1267123,0.4931507);\nmed=vec2(0.130137,0.00342466);\nfloat d81=sdBox(p-A,med);\ncolout= DFS( colIn, colout, d81);\n\nA=vec2(0.3835616,0.7465754);\nmed=vec2(0.130137,0.00342466);\nfloat d82=sdBox(p-A,med);\ncolout= DFS( colIn, colout, d82);\n\nA=vec2(0.630137,0.239726);\nmed=vec2(0.130137,0.00342466);\nfloat d83=sdBox(p-A,med);\ncolout= DFS( colIn, colout, d83);\n\nA=vec2(0.8835617,0.4931507);\nmed=vec2(0.130137,0.00342466);\nfloat d84=sdBox(p-A,med);\ncolout= DFS( colIn, colout, d84);\n\nA=vec2(0.5068493,0.8767123);\nmed=vec2(0.00342466,0.1318493);\nfloat d85=sdBox(p-A,med);\ncolout= DFS( colIn, colout, d85);\n\nA=vec2(0.2534246,0.6164383);\nmed=vec2(0.00342466,0.1318493);\nfloat d86=sdBox(p-A,med);\ncolout= DFS( colIn, colout, d86);\n\nA=vec2(0.760274,0.3664384);\nmed=vec2(0.00342466,0.1318493);\nfloat d87=sdBox(p-A,med);\ncolout= DFS( colIn, colout, d87);\n\nA=vec2(0.5034246,0.1130137);\nmed=vec2(0.00342466,0.1318493);\nfloat d88=sdBox(p-A,med);\ncolout= DFS( colIn, colout, d88);\n    return colout;\n}\n\n\n\n\nvec3 Fig05(vec2 p, vec3 colout ,vec3 colIn)\n{\n\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.0,1.0);\nr1=0.5;\nfloat d51=sdCircle(p-A,r1);\nd51=abs(d51)-0.001;\ncolout= DFS( colIn, colout, d51);\n\nA=vec2(1.0,0.0);\nr1=0.5;\nfloat d52=sdCircle(p-A,r1);\nd52=abs(d52)-0.001;\ncolout= DFS( colIn, colout, d52);\n    return colout;\n}\n\n\nvec3 Fig06(vec2 p, vec3 colout, vec3 colIn)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(1.0,1.0);\nr1=0.5;\nfloat d61=sdCircle(p-A,r1);\nd61=abs(d61)-0.001;\ncolout= DFS( colIn, colout, d61);\n\nA=vec2(0.0,0.0);\nr1=0.5;\nfloat d62=sdCircle(p-A,r1);\nd62=abs(d62)-0.001;\ncolout= DFS( colIn, colout, d62);\n    return colout;\n}\n\n\n\n// Function to generate a random number based on tile position\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 truchet(vec2 uv, vec3 col, vec3 colIn)\n{\n     vec2 pos = uv;\n    vec2 tile = floor(uv);\n    pos = fract(uv) ;\n    \n    \n    // Generate a random number to choose \n    float choice = random(tile);\n    float dist = 0.0;\n    \n    float nopc=6.0;\n    \n     //vec3 color=vec3(0.25); \n     \n     \n         if (choice < 1.0/nopc)\n        {  col=Fig01(pos,col,colIn); }\n    else if (choice < 2.0/nopc)\n        {\n        col=Fig02(pos,col,colIn);  \n        }\n    else if (choice < 3.0/nopc) \n        { \n        col=Fig03(pos,col,colIn);  \n        }\n     else if (choice < 4.0/nopc) \n        { \n        col=Fig04(pos,col,colIn);  \n        }\n     else if (choice < 5.0/nopc) \n        { \n        col=Fig05(pos,col,colIn);\n        }\n     else if (choice < 6.0/nopc)\n        { \n        col=Fig06(pos,col,colIn);\n        }\n\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale =2.0;\n    vec2 uv =  scale * ( 2. * fragCoord - iResolution.xy ) / iResolution.y ;\n    uv+=iTime*0.25;\n     vec3 col=vec3(1.0);\n    col= truchet(uv,col, vec3(0.0,0.0,0.0));\n    col= truchet(uv*2.5+vec2(0.5,1.0),col, vec3(0.,0.0,1.0));\n    col=pow(col,  vec3(0.554545));  \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}