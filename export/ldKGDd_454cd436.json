{"ver":"0.1","info":{"id":"ldKGDd","date":"1457223220","viewed":4097,"name":"2D Parallax Starfield","username":"qmuntada","description":"Based on this shader : https://www.shadertoy.com/view/ltXSDN","likes":55,"published":3,"flags":0,"usePreview":0,"tags":["2d","parallax","star","starfield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define\tSPEED \t\t.1\n#define\tSTAR_NUMBER 300\n#define\tITER \t\t4\n\nvec3 col1 = vec3(155., 176., 255.) / 256.; // Coolest star color\nvec3 col2 = vec3(255., 204., 111.) / 256.; // Hottest star color\n\nfloat rand(float i){\n    return fract(sin(dot(vec2(i, i) ,vec2(32.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord / iResolution.y;\n    float res = iResolution.x / iResolution.y;\n    fragColor = vec4(0.0);\n    \n    // static far stars    \n   \tvec4 sStar = vec4(rand(uv.x * uv.y));\n    sStar *= pow(rand(uv.x * uv.y), 200.);\n    sStar.xyz *= mix(col1, col2, rand(uv.x + uv.y));\n    fragColor += sStar;\n    \n    // milky way\n    vec4 col = 0.5 - vec4(length(vec2(uv.x, 0.5) - uv));\n    col.xyz *= mix(col1, col2, 0.75);\n    fragColor += col * 2.;\n    float c = 0.;\n    float c2 = 0.;\n    vec2 rv = uv;\n    rv.x -= iTime * SPEED * 0.25;\n    for(int i=0;i<ITER;i++)\n\t\tc += (texture(iChannel0, rv * 0.25 + rand(float(i + 10) + uv.x * uv.y) * (16. / iResolution.y)) / float(ITER)).x;\n    fragColor -= c * 0.5;\n    fragColor = clamp(fragColor, 0.0, 1.0);\n    \n    // Dynamic Stars    \n    for (int i = 0; i < STAR_NUMBER; ++i){\n    \tfloat n = float(i);\n        \n        //position of the star\n        vec3 pos = vec3(rand(n) * res + (iTime + 100.0) * SPEED, rand(n + 1.) , rand(n + 2.));\n        \n        // parralax effect\n        pos.x = mod(pos.x * pos.z, res);\n        pos.y = (pos.y + rand(n + 10.)) * 0.5;\n\n        //drawing the star\n        vec4 col = vec4(pow(length(pos.xy - uv), -1.25) * 0.001 * pos.z * rand(n + 3.));\n        \n        //coloring the star\n        col.xyz *= mix(col1, col2, rand(n + 4.));\n        \n        //star flickering\n        col.xyz *= mix(rand(n + 5.), 1.0, abs(cos(iTime * rand(n + 6.) * 5.)));\n        \n        fragColor += vec4(col);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}