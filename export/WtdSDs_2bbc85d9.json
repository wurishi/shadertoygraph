{"ver":"0.1","info":{"id":"WtdSDs","date":"1581978652","viewed":8741,"name":"2D Rounded Rectangle","username":"amine_sebastian","description":"This was based on a number of other examples I found on this website. I required a shader for drawing a GUI and figured I'd share it with others who might be looking! The location represents the bottom left of the rectangle.","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["2d","square","rectangle","quad","rounded"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from https://iquilezles.org/articles/distfunctions\nfloat roundedBoxSDF(vec2 CenterPosition, vec2 Size, float Radius) {\n    return length(max(abs(CenterPosition)-Size+Radius,0.0))-Radius;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // The pixel space scale of the rectangle.\n    vec2 size = vec2(300.0f, 300.0f);\n    \n    // the pixel space location of the rectangle.\n    vec2 location = iMouse.xy;\n\n    // How soft the edges should be (in pixels). Higher values could be used to simulate a drop shadow.\n    float edgeSoftness  = 1.0f;\n    \n    // The radius of the corners (in pixels).\n    float radius = (sin(iTime) + 1.0f) * 30.0f;\n    \n    // Calculate distance to edge.   \n    float distance \t\t= roundedBoxSDF(fragCoord.xy - location - (size/2.0f), size / 2.0f, radius);\n    \n    // Smooth the result (free antialiasing).\n    float smoothedAlpha =  1.0f-smoothstep(0.0f, edgeSoftness * 2.0f,distance);\n    \n    // Return the resultant shape.\n    vec4 quadColor\t\t= mix(vec4(1.0f, 1.0f, 1.0f, 1.0f), vec4(0.0f, 0.2f, 1.0f, smoothedAlpha), smoothedAlpha);\n    \n    // Apply a drop shadow effect.\n    float shadowSoftness = 30.0f;\n    vec2 shadowOffset \t = vec2(0.0f, 10.0f);\n    float shadowDistance = roundedBoxSDF(fragCoord.xy - location + shadowOffset - (size/2.0f), size / 2.0f, radius);\n    float shadowAlpha \t = 1.0f-smoothstep(-shadowSoftness, shadowSoftness, shadowDistance);\n    vec4 shadowColor \t = vec4(0.4f, 0.4f, 0.4f, 1.0f);\n    fragColor \t\t\t = mix(quadColor, shadowColor, shadowAlpha - smoothedAlpha);\n}","name":"Image","description":"","type":"image"}]}