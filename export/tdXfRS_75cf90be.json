{"ver":"0.1","info":{"id":"tdXfRS","date":"1588470046","viewed":289,"name":"Paint Liquid Marble Swirl","username":"dahngeek","description":"I was searching for an effect like this everywhere, but only found \"swirl distortion effect\" by laserdog.\nThis is my first try at Shadertoy so I modified it to accomplish something like a was looking for.\n\nChange the iChannel0 buffer to an image or video","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["swirl","paint","marble","twirl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// Description has limit so I continue here:\n//    I wanted multiple swirls but couldnt achieve that here, so I loaded this shader in Natron\n//    Used a striped image in iChannel0 and passed the output to another shader with the same code just\n//    with the center position modified, notice that here is 250x144\n\n// P.s. try with the Claude Van Damme video in the iChannel0, I found it funny to watch with this effect.\n\n#define PI 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float effectRadius = .6;\n    float radii = 100.0;\n    float effectAngle = 1.9 * PI;\n    float theta = 0.3 - iTime*0.5;\n    float phi = 3.14159*0.4;//5.0*mouse.y;\n    \n    float pos_x = radii * cos(theta) * sin(phi);\n    float pos_z = radii * sin(theta) * sin(phi);\n    float pos_y = radii * sin(theta) * cos(phi);\n    \n    //vec2 center = iMouse.xy / iResolution.xy;\n    vec2 center = vec2(250.0+pos_x,144.0+pos_y) / iResolution.xy;\n    center = center == vec2(0., 0.) ? vec2(.5, .5) : center;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy - center;\n    \n    float len = length(uv * vec2(iResolution.x / iResolution.y, 1.));\n    float angle = atan(uv.y, uv.x) + effectAngle * smoothstep(effectRadius, 0., len);\n    float radius = length(uv);\n\n    fragColor = texture(iChannel0, vec2(radius * cos(angle), radius * sin(angle)) + center);\n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float sdBox(in vec2 p, in vec2 b)\n{\n    vec2 d = abs(p) - b;\n    return length(max(d, vec2(0.0))) + min(max(d.x, d.y), 0.0);\n \t   \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = 10.0*uv;\n    uv = fract(uv);\n    \n    vec2 box = uv - vec2(0.4, 0.5);\n    float distBox = sdBox(box, vec2(0.3, 0.5));\n      \n    // 1. Black disk in white background:\n    //vec3 col = vec3(1.0) * sign(distCircle);\n\n    // 2. Red disk on blue background:\n    vec3 col = vec3(0.0, 0.0, 1.0) * sign(distBox);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}