{"ver":"0.1","info":{"id":"4cscRX","date":"1721401290","viewed":79,"name":"modeling 2d face","username":"jorge2017a2","description":"modeling 2d face","likes":14,"published":1,"flags":8,"usePreview":0,"tags":["2d","sound","modeling","face","modeling2dface"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//modeling 2d face\n//---19-jul-2024--\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(1.0/antialiasing(0.5),0. , d - (b) )\n\n\n#define opU2(d1, d2) ( d1.x < d2.x ? d1 : d2 )\n\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DFS(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut;\n  return colOut;\n}\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\n\nvec3 rostro00(vec2 p, vec3 colout)\n{\n    \nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\nbool blnSolo;\nfloat re1,re2,re3,re4,re5,re6,restdo;\nint op=0;\nblnSolo=false;\n\n\nA=vec2(0.29433,0.71277);\nr1=0.27128;\nfloat d1=sdCircle(p-A,r1);\n\nA=vec2(0.42553,0.67376);\nr1=0.19504;\nfloat d2=sdCircle(p-A,r1);\n\nA=vec2(0.59397,0.55319);\nr1=0.17908;\nfloat d3=sdCircle(p-A,r1);\n\nA=vec2(0.71986,0.69149);\nr1=0.10106;\nfloat d4=sdCircle(p-A,r1);\n\nA=vec2(0.66489,0.58156);\nr1=0.02128;\nfloat d5=sdCircle(p-A,r1);\n\nA=vec2(0.68617,0.53901);\nr1=0.02482;\nfloat d6=sdCircle(p-A,r1);\n\nA=vec2(0.65248,0.50887);\nr1=0.02482;\nfloat d7=sdCircle(p-A,r1);\n\nA=vec2(0.65603,0.46809);\nr1=0.0195;\nfloat d8=sdCircle(p-A,r1);\n\nA=vec2(0.68972,0.43972);\nr1=0.02837;\nfloat d9=sdCircle(p-A,r1);\n\nA=vec2(0.64007,0.40957);\nr1=0.02837;\nfloat d10=sdCircle(p-A,r1);\n\nA=vec2(0.57447,0.26773);\nr1=0.25;\nfloat d11=sdCircle(p-A,r1);\n\nA=vec2(0.5727,0.19326);\nr1=0.17908;\nfloat d12=sdCircle(p-A,r1);\n\nA=vec2(0.69504,0.18262);\nr1=0.19681;\nfloat d13=sdCircle(p-A,r1);\n\nA=vec2(0.66135,0.43262);\nr1=0.07979;\nfloat d14=sdCircle(p-A,r1);\n\nA=vec2(0.72872,0.40071);\nr1=0.07979;\nfloat d15=sdCircle(p-A,r1);\n\nA=vec2(0.79255,0.35284);\nr1=0.04433;\nfloat d16=sdCircle(p-A,r1);\n\nA=vec2(0.79433,0.48759);\nr1=0.15957;\nfloat d17=sdCircle(p-A,r1);\n\nA=vec2(0.65248,0.55142);\nr1=0.02128;\nfloat d18=sdCircle(p-A,r1);\n\nA=vec2(0.64716,0.43794);\nr1=0.02128;\nfloat d19=sdCircle(p-A,r1);\n\n\n\nfloat d101=Sdf_D(d2,d1);\nfloat d102=Sdf_D(d3,d1);\nfloat d103=Sdf_U(d101,d102);\nfloat d104=Sdf_D(d103,d4);\nfloat d105=Sdf_U(d12,d13);\nfloat d106=Sdf_D(d11,d105);\nfloat d107=Sdf_U(d14,d15);\nfloat d108=Sdf_U(d107,d16);\nfloat d109=Sdf_D(d106,d108);\nfloat d110=Sdf_D(d104,d17);\nfloat d111=Sdf_U(d5,d18);\nfloat d112=Sdf_U(d111,d7);\nfloat d113=Sdf_U(d112,d8);\nfloat d114=Sdf_U(d113,d19);\nfloat d115=Sdf_U(d114,d10);\nfloat d116=Sdf_U(d110,d115);\nfloat d117=Sdf_D(d116,d6);\nfloat d118=Sdf_D(d117,d9);\n\n//colout= DFB(vec3(0.0), colout, d118);\ncolout=DFS(vec3(0.0), colout, d109);\ncolout=DFS(vec3(0.0), colout, d118);\n\nint j;\nj=int(floor(mod(iTime,10.0)))+1;\nfor(int i=1;i<=19;i++)\n{\n   if(j==5) colout=DFS(vec3(1.0,1.0,0.0), colout, d5);\n   if(j==6)  colout=DFS(vec3(1.0,1.0,0.0), colout,d6);\n   if(j==7)  colout=DFS(vec3(1.0,1.0,0.0), colout,d7);\n   if(j==8)  colout=DFS(vec3(1.0,1.0,0.0), colout,d8);\n   if(j==9)  colout=DFS(vec3(1.0,1.0,0.0), colout,d9);\n   if(j==10)  colout=DFS(vec3(1.0,1.0,0.0), colout,d10);\n   \n}\n\n    return colout;\n}\n\n\nvec3 rostro01(vec2 p, vec3 colout)\n{\n    \nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1 ;\nbool blnSolo;\nfloat re1,re2,re3,re4,re5,re6,restdo;\nint op=0;\nblnSolo=false;\n\n\nA=vec2(0.38904,0.61918);\nr1=0.23288;\nfloat d1=sdCircle(p-A,r1);\n\nA=vec2(0.70411,0.6137);\nr1=0.23288;\nfloat d2=sdCircle(p-A,r1);\n\nA=vec2(0.54521,0.32603);\nr1=0.23288;\nfloat d3=sdCircle(p-A,r1);\n\nA=vec2(0.70959,0.4137);\nr1=0.17808;\nfloat d4=sdCircle(p-A,r1);\n\nA=vec2(1.03014,0.62192);\nr1=0.23288;\nfloat d5=sdCircle(p-A,r1);\n\nA=vec2(0.89315,0.32877);\nr1=0.23288;\nfloat d6=sdCircle(p-A,r1);\n\nfloat r101=Sdf_I(d1,d2);\nfloat r102=Sdf_I(d3,r101);\nfloat r103=Sdf_U(d4,r102);\nfloat r104=Sdf_I(d2,d5);\nfloat r105=Sdf_I(d6,r104);\n\ncolout= DFB(vec3(0.0), colout, r103);\ncolout= DFB(vec3(0.0), colout, r105);\n\nreturn colout;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    \n    uv-=vec2(-1.0,-1.0);\n    float esc=0.5;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(0.5);\n    \n    float m=clamp(fract(iTime*0.25),0.5,1.0)+0.4;\n    col= rostro00(uv*m, col);\n    col=rostro01(uv+vec2(0.6+0.25*fract(iTime),0.0), col);\n    //col= rostro00(pr, col);\n    \n    col=pow(col,  vec3(0.554545));\n    col *= sin(uv.y * 20.0 - iTime ) * 0.2 + 0.9;\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"///---modificado por jorge2017a2----jorge.F.P.\n// 2015-04-26 jnorberg\n// mainly an interesting way of faking a resonant lowpass filter sound\n\n\nfloat pi = 3.14159265359;\nfloat tau = 2.0 * 3.14156592;\n\nfloat note( float n ) { return 440.0 * pow( 2.0, ( n-49.0) / 12.0 ); }\n\n\n\nvec2 ssaw( float t, float f )\n{\n    // super saw, super stereo :)\n    float m = fract( t * f );\n    vec2 s = vec2(\n        m + fract( t * f * 1.015 ) + 0.5 * fract( t * f * 0.98 ),\n        m + fract( t * f * 0.985 ) + 0.5 * fract( t * f * 1.02 )\n    );\n    s *= 0.08 * t;\n    return s;\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    float s16 = fract(time*8.0);\n    float s8 = fract(time*4.0);\n    float s4 = fract(time*2.0);\n    float s4_2 = fract(time*2.0+0.75);\n    float s4_3 = fract(time*2.0+0.5);\n    float s4_4 = fract(time*2.0+0.25);\n    float s2 = fract(time*1.0);\n    float s1 = fract(time*0.5);\n    float backforth = fract(time*0.125);\n\n    float backforth1 = fract(time*1.125);\n    float backforth0 = fract(time*0.125);\n\n\n    float si4 = fract(abs(1.0- 2.0*sin(time*0.25)));\n    float si5 = fract(abs(1.0- 2.0*sin(time*0.5)));\n    \n    \n    \n    float mono = 0.0;\n\n    vec2 stereo = vec2( mono );\n     vec2 stereo0=stereo;\n    \n    float t1,f1,f2, t2;\n    t1=fract(time*0.25);\n    f1= abs(sin(t1));\n    f2= abs(0.5+sin(t1*2.0+f1));\n    if(f1<0.2) f1=0.5;\n    if(f2<0.2) f2=0.5;\n    if(f2>1.0) f2=1.0;\n    \n    float c1=  0.25+f1;\n    float c2=  0.25+f2;\n    c1=clamp(c1, 0.01,1.0)+0.09;\n    \n    float m1;\n    m1= mix( 5.0, 8.0, floor( backforth1 ) ); \n    \n    float TT=0.5;\n    int secs = int(10.*TT);\n    float vari=float[](2.,1.,3.,0.5,0.3,1.5)[int(time)/secs%6];\n    \n    t2=mod(vari*pi*time, 10.0);\n    \n    float amp1;\n    amp1= 1.0*sin(fract(time*0.125));\n    \n    \n    if((t2+0.25)>7.0)\n        amp1=0.25;\n    else\n        amp1=1.0;\n     \n    \n    vec2 vf1=ssaw( t2, note( 14.0 +m1) )*amp1;\n    stereo += vf1;\n  \n    stereo *= 1.25; // louder\n    stereo = clamp( stereo, vec2(-0.99), vec2(0.99) ); // clip\n  \n    \n    return stereo;\n}","name":"Sound","description":"","type":"sound"}]}