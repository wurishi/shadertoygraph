{"ver":"0.1","info":{"id":"lX2fRR","date":"1729145123","viewed":29,"name":"BIG FXXKING FLASH","username":"HyperQuantum","description":"hahahaha","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","flash","lmao"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fade(float t){\n    float t3 = t*t*t;\n    return t3*t*t*6.f-15.f*t3*t+10.f*t3;\n\n}\n\n\nfloat frac(float t){\n    return t-floor(t);\n}\n\n\nfloat random(float x){\n    return frac(sin(x+3.1415926)*10.5);\n}\n\n\nvec4 genangle(float x){\n\n    float angle = random(x)*3.1415926535f*2.f;\n    float ca = cos(angle/2.f);\n    float sa = sin(angle/2.f);\n    vec3 axis = normalize(vec3(0,0,1));//2D\n    vec4 Q = vec4(axis*sa,ca);\n    return Q;\n}\n\n\nvec4 quatmul(vec4 P, vec4 Q){\n    vec3 vQ = Q.xyz;\n    float rQ = Q.w;\n    vec3 vP = P.xyz;\n    float rP = P.w;\n    \n    float W = rQ*rP-dot(vQ,vP);\n    vec3 V = rQ * vP + rP * vQ + cross(vQ,vP);\n    \n    return vec4(V,W);\n}\n\n\nfloat genvector(vec2 uv){\n    vec2 o;\n    //生成celluv\n    o.x= frac(uv.x);\n    o.y= frac(uv.y);\n    \n    //转为标量\n    vec2 minv = vec2(floor(uv.x),floor(uv.y));\n    vec2 maxv = vec2(ceil(uv.x),ceil(uv.y));\n    vec2 center = (minv+maxv)/2.f;\n    vec2 minmax=vec2(minv.x,maxv.y);\n    vec2 maxmin=vec2(maxv.x,minv.y);\n    \n    vec2 p1=minmax-center;\n    vec2 p2=maxv-center;\n    vec2 p3=maxmin-center;\n    vec2 p4=minv-center;\n    \n    vec4 Q = genangle(iTime);\n    p1 = quatmul(\n        vec4(-Q.xyz,Q.w),\n        quatmul(\n            vec4(p1,0,0),\n            Q)\n        ).xy;\n\n    Q = genangle(iTime);\n    p2 = quatmul(\n        vec4(-Q.xyz,Q.w),\n        quatmul(\n            vec4(p2,0,0),\n            Q)\n        ).xy;\n        \n    Q = genangle(iTime);\n    p3 = quatmul(\n        vec4(-Q.xyz,Q.w),\n        quatmul(\n            vec4(p3,0,0),\n            Q)\n        ).xy;\n\n    Q = genangle(iTime);\n    p4 = quatmul(\n        vec4(-Q.xyz,Q.w),\n        quatmul(\n            vec4(p4,0,0),\n            Q)\n        ).xy;\n    \n    float k1=dot(p1,minmax-uv);\n    float k2=dot(p2,maxv-uv);\n    float k3=dot(p3,maxmin-uv);\n    float k4=dot(p4,minv-uv);\n    \n    float lerp1=mix(k4,k1,fade(o.y));\n    float lerp2=mix(k3,k2,fade(o.y));\n    float lerp3=mix(lerp1,lerp2,fade(o.x));\n    \n    \n    return lerp3*5.;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float freq = 10.f;\n    vec2 celluv= freq*uv;\n    \n    float col=genvector(celluv);\n\n    // Output to screen\n    fragColor = vec4(col,col,col,1.0);\n}","name":"Image","description":"","type":"image"}]}