{"ver":"0.1","info":{"id":"fsSBzW","date":"1645746738","viewed":221,"name":"Kalyapun","username":"emodeman","description":"Bumped around in the dark and this is what happened.","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["kaleidoscope","lyapunov"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A lyapunov kaleidoscope\n// Based on https://www.shadertoy.com/view/WdscWH\n\n#define PI\t3.14159265359\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = 2.0 * (fragCoord / iResolution.xy) - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\tfloat wedge = PI / 9.0;\n\tfloat angle = abs(mod(atan(uv.x, uv.y), 2.0 * wedge) - wedge) - 0.785398;\n\tuv = length(uv) * vec2(cos(angle), sin(angle)) * 0.5;\n\tvec3 col = texture(iChannel0, uv).xyz;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define ANIMSPEED 0.1\n#define ITERATIONS 20\n\n// Modify sequence here, for example: AABAB => SEQLEN=5 - (0, 0, 1, 0, 1)\n#define SEQLEN 9\nint seq[] = int[SEQLEN](0, 0, 1, 0, 0, 0, 1, 1, 1);\n\nvec3 calc(vec2 p)\n{\n    float t = iTime * ANIMSPEED;\n    float w[] = float[ITERATIONS] (\n\t\t0.97 + 0.04 * sin(0.0 + 1.3 * t),\n\t\t0.97 + 0.04 * sin(1.0 + 1.7 * t),\n\t\t0.97 + 0.04 * sin(4.0 + 1.1 * t),\n\t\t0.97 + 0.04 * sin(2.0 + 1.5 * t),\n\t\t0.97 + 0.04 * sin(5.0 + 1.9 * t),\n\t\t0.97 + 0.04 * sin(6.0 + 1.8 * t),\n\t\t0.97 + 0.04 * sin(7.0 + 1.6 * t),\n\t\t0.97 + 0.04 * sin(8.0 + 1.3 * t),\n\t\t0.97 + 0.04 * sin(9.0 + 1.7 * t),\n\t\t0.97 + 0.04 * sin(10.0 + 1.1 * t),\n\t\t0.97 + 0.04 * sin(11.0 + 1.5 * t),\n\t\t0.97 + 0.04 * sin(12.0 + 1.9 * t),\n\t\t0.97 + 0.04 * sin(13.0 + 1.8 * t),\n\t\t0.97 + 0.04 * sin(14.0 + 1.6 * t),\n\t\t0.97 + 0.04 * sin(15.0 + 1.3 * t),\n\t\t0.97 + 0.04 * sin(16.0 + 1.7 * t),\n\t\t0.97 + 0.04 * sin(17.0 + 1.1 * t),\n\t\t0.97 + 0.04 * sin(18.0 + 1.5 * t),\n\t\t0.97 + 0.04 * sin(29.0 + 1.9 * t),\n\t\t0.97 + 0.04 * sin(20.0 + 1.8 * t)\n\t);\n\n\tfloat x = 0.5;\n\tfloat h = 0.0;\n\tfor (int i = 0; i < ITERATIONS; i++)\n\t{\n\t\tfor (int j = 0; j < SEQLEN; ++j)\n\t\t{\n\t\t\tx = w[j] * p[seq[j]] * x * (1.0 - x);\n\t\t\th += log2(abs(w[j] * p[seq[j]] * (1.0 - 2.0 * x)));\n\t\t}\n\t}\n\th /= float(ITERATIONS) * float(SEQLEN);\n\n\tvec3 col = vec3(0.0, 0.0, 0.0);\n\n\tif (h < 0.0)\n\t{\n\t\th = abs(h);\n\t\tcol = vec3(0.5 + 0.5 * sin(0.0 + 2.5 * h),\n\t\t\t\t   0.5 + 0.5 * sin(0.4 + 2.5 * h),\n\t\t\t\t   0.5 + 0.5 * sin(0.7 + 2.5 * h));\n\t\tcol *= vec3(1.1, 1.1, 1.1) * pow(h, 0.25);\n\t}\n\n\treturn col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 col = calc(3.0 + (fragCoord / iResolution.xy));\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}