{"ver":"0.1","info":{"id":"3dSBzw","date":"1589664883","viewed":53,"name":"My simplest 3D","username":"ibragim_aghdabi","description":"work and progress","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["death"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3 (0.,0.,-2.);  // ro - Ray origin\n    vec3 rd = vec3 (uv.x, uv.y, 0.)-ro;  /// rd - Ray direction\n    \n   \n    float t = iTime; \n    vec3 p = vec3 (sin(t), 0., 1.+cos(t));\n    float d = DistLine(ro, rd, p);\n    \n    d = smoothstep(.1, .09, d);\n\n    // Output to screen\n    fragColor = vec4(d);\n}\n","name":"Image","description":"","type":"image"}]}