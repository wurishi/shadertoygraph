{"ver":"0.1","info":{"id":"WtdXzs","date":"1581550438","viewed":117,"name":"OrbitTrap Velvet","username":"edorobek","description":"Julia set with orbit trap shading\n- current code is heavily derived from iq","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","orbit","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 4\n\n#define MAX_ITER 150\n#define BAILOUT 1024.0\n#define N_DEGREES 6\n#define PI 3.14159265\n\n\nvec2 complexMult(vec2 a, vec2 b)\n{\n    return vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n    vec2 coordinate = vec2((fragCoord.x - 200.), (fragCoord.y - 50.));\n\n\n\t// Anti-aliasing\n    for (int i = 0; i < AA; i++) {\n        for (int j = 0; j < AA; j++) {\n\n\n            vec2 p = (2.3*(coordinate+vec2(float(i),float(j))/float(AA)) - iResolution.xy) / iResolution.y;\n\n\t        float zoom = 1.0/(400.0 - 150.0*sin(0.15*iTime-0.3));\n\n\t        vec2 cc = vec2(-0.533516,0.526141) + p*zoom;\n\n\t        vec2 t2c = vec2(-0.5,2.0);\n\t        t2c += 0.5*vec2( cos(0.13*(0.0-10.0)), sin(0.13*(0.0-10.0)) );\n\n            // do the iteration\n            vec2 q = p;\n\n            vec2 dq = vec2(0.0);\n            float trap1 = 0.0;\n            float trap2 = 1e20;\n            float co2 = 0.0;\n\n\n            for (int i = 0; i < MAX_ITER; i++) {\n                if (dot(q,q) > BAILOUT) break; \n\n                q = complexMult(q,q) + vec2(0.285, sin(.07*iTime));\n                dq = 2.0*complexMult(dq, q) + vec2(1.0,0.0);\n\n                float d1 = abs(dot(q - vec2(0.0,1.0), vec2(0.07)));\n                float ff = step(d1, 1.0);\n                co2 += ff;\n                trap1 += ff*d1;\n\n                trap2 = min(trap2, dot(q - t2c, q - t2c));\n            }\n\n            float d = sqrt(dot(q, q) / dot(dq, dq)) * log(dot(q,q));\n            float c1 = pow(clamp(2.0 * d / zoom, 0.0, 1.0), 0.5);\n            float c2 = pow(clamp(1.5 * trap1 / co2, 0.0, 1.0), 1.6);\n            float c3 = pow(clamp(0.4 * trap2, 0.0, 1.0), 0.1);\n\n            vec3 col1 = 0.5 + 0.5*sin( 2.3 + 1.6*c2 + vec3(0.1569, 0.1922, 0.1647) );\n\t        vec3 col2 = 0.5 + 0.5*sin( 1.7 + 2.0*c3 + vec3(0.4549, 0.5843, 0.7804) );\n\t        col += 1.6*sqrt(c1*col1*col2);\n        }\n    }\n\t\n    col /= float(AA*AA);\n\n\tfragColor = vec4(col,1.0);\n\n}","name":"Image","description":"","type":"image"}]}