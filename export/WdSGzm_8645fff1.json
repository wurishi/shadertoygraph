{"ver":"0.1","info":{"id":"WdSGzm","date":"1548943008","viewed":103,"name":"Moving shapes bookofshader ver","username":"kayleenp","description":"Assignment 4","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kayleen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n\nfloat getTriangle(vec2 p , float size, float N){\n   // p *= vec2(iResolution.x, iResolution.y);\n   // p /= max(iResolution.x, iResolution.y);\n    \n  \n\n    vec3 color = vec3(1.0);\n    float d = 0.0;\n\n    p = p *2.-1.;\n\n \n\n    float a = atan(p.x,p.y)+PI;\n    float r =TWO_PI/float(N);\n\n    d = cos(floor(.5+a/r)*r-a)*length(p);\n\n    return 1.0-step(size,d);\n}\nfloat Band(float p, float start, float end, float blur){\n    float step1 = smoothstep(start-blur, start+blur, p); \n    float step2 = smoothstep (end+blur, end-blur, p); \n    \n    return step1*step2; \n}\n\n\nfloat square(vec2 uv, float len, float blur)\n{\n    float band1 = Band(uv.x, len, len+0.15, blur); \n    float band2 = Band(uv.y, len-0.15,len, blur);\n    \n    return (band2*band1) ;\n}\n\nmat2 rotate2d(float angle) \n{\n return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));   \n    \n}\n\nmat2 scale(vec2 scale_)\n{\n return mat2(scale_.x, 0.0, 0.0, scale_.y);    \n}\n\nfloat circle(vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv-p); \n    float c = smoothstep(r, r-blur, d); \n    return c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy; \n    st -= 0.5;\n    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -=0.5; \n    \n    vec2 ar = fragCoord.xy/iResolution.xy;\n    ar -= 0.5;\n    \n    vec2 ci = fragCoord.xy/iResolution.xy;\n    ci -=0.5;\n    \n    vec3 color = vec3(1., 1., 1.); \n    vec3 col = 0.5 + 0.5*cos(iTime+st.xyx+vec3(0,2,4));\n    \n    st.x *= iResolution.x/iResolution.y;\n    \n  \tst = scale(vec2(sin(iTime)+1.0)) *st;\n     st += vec2(0.5);\n    \n    uv.x *= iResolution.x/iResolution.y;\n  \n    ar.x *= iResolution.x/iResolution.y;\n    ci.x *= iResolution.x/iResolution.y;\n    \n   \n     \n    uv = rotate2d(sin(iTime)*PI)*uv; \n    uv+= vec2(0.6);\n    \n    vec2 translate = vec2(cos(iTime)*0.4, sin(iTime)*0.5); \n    ar +=translate*0.5; \n    \n    vec2 xTranslate = vec2(cos(iTime)*1., sin(iTime)*0.);\n    ci +=xTranslate*0.5;\n    \n    \n    \n    color -= col* vec3(getTriangle(st, 0.1, 6.0)) ;\n    color -= col*vec3(getTriangle(uv, 0.1, 3.0));\n    color -= col*vec3(square(ar, 0.,  0.001)); \n    color -= col *vec3(circle(ci, vec2(0.,0.), 0.1, 0.001));\n    \n    \n    fragColor = vec4(color, 1.0);\n       \n    \n}\n","name":"Image","description":"","type":"image"}]}