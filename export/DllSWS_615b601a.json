{"ver":"0.1","info":{"id":"DllSWS","date":"1675292411","viewed":95,"name":"Mandola facit videre evidenter","username":"blurryroots","description":"Fork of [url=https://www.shadertoy.com/view/dtlSzs]jonasfrey's \"multiplication dist point\"[/url].","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["trippy","psychodelic","vesica","piscis"],"hasliked":0,"parentid":"dtlSzs","parentname":"multiplication dist point"},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on jonasfrey's \"multiplication dist point\"\n// https://www.shadertoy.com/view/dtlSzs\n\n// Shadertoy Educational License\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n// You are free however, to incorporate this work within the Shadertoy\n// ecosystem, e.g. by forking.\n// This work may incorporate other permissivly shared, educational work,\n// which is attributed appropriatly. Please do so as well.\n// Thanks to https://www.shadertoy.com/user/iq for inspiring this license.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_fc = (fragCoord.xy - iResolution.xy*.5)/iResolution.y;\n    vec2 o_mc = (iMouse.xy - iResolution.xy*.5)/iResolution.y;\n    vec2 o_fc_nooff = (fragCoord.xy)/iResolution.xy;\n    vec2 o_mc_nooff = (iMouse.xy )/iResolution.xy;\n    \n    vec2 o_scl = vec2(1., 9.);\n    vec2 o_scl_one_nor = 1./o_scl;\n    float n_its = o_scl.x*o_scl.y;\n        \n    float n_d_sum = 0.;\n    float n_d_sum_pow = 0.;\n    float n_d_min = 1.;\n    float n_d_sum_currlast = 0.;\n    float n_d_last = 0.;\n    float n_d;\n    float n_d_prod = 1.;\n    float n_d_prod_pow = 1.5;\n    float n_it_min = 0.;\n    float n_tau = 6.2831;\n    float n_d_mouse = length(o_fc - o_mc);\n    for(float n_it = 0.; n_it < n_its; n_it+=1.){\n            float n_x = mod(n_it, o_scl.x);\n            float n_y = floor(n_it / o_scl.x);\n            float n_it_nor = n_it /n_its;\n            \n            vec2 o_p = vec2(n_x, n_y);\n            vec2 o_p_nor = (o_p / o_scl)+o_scl_one_nor*.5;\n            float n_d_mouse2 = length(o_p_nor-o_mc_nooff);\n            n_d = length(o_fc_nooff-o_p_nor);//*min(o_scl.x, o_scl.y);\n            n_d_sum += n_d;\n            n_d_prod *= (1.-n_d);\n            n_d_mouse2 = n_d_mouse2*1.2;\n            n_d_prod_pow *= pow(n_d*(6.-2.*(1.+sin(iTime*2.)*0.5)), 1.);//n_d_mouse*20.);//(sin(n_it_nor*n_tau*33.+iTime))*3.);\n            n_d_sum_pow += pow(n_d,1.);//pow(n, 1./(sin(iTime)*.5+.5+.5));\n            if(n_d < n_d_min){\n                n_d_min = n_d;\n                n_it_min = n_it;\n            }\n            n_d_sum_currlast = (n_d + n_d_last)/2.;\n            n_d_last = n_d_sum_currlast;//n_d;\n\n    }\n    float nmin = pow(n_d_min, 1./2.);\n    float n_d_sum_nor = n_d_sum / n_its;\n    float n_d_sum_pow_nor = n_d_sum_pow / n_its;\n    float inv_n_d_prod_pow = (1. - n_d_prod_pow);\n    vec4 her = texture(iChannel0, o_fc_nooff);\n    vec4 noise = texture(iChannel1, o_fc_nooff);\n    //fragColor = vec4(n_d_prod*n_its*10000000000000000000.);\n    //fragColor = vec4(pow(n_d_prod_pow,1.));//sin(iTime)*0.2));\n    //fragColor = vec4(n_d_mouse);\n    fragColor = mix (her, noise, n_d_prod_pow);\n}","name":"Image","description":"","type":"image"}]}