{"ver":"0.1","info":{"id":"WdXcz8","date":"1584090101","viewed":100,"name":"About line","username":"lzjseed","description":"just a test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","line","curve","mirror"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line(vec2 p,vec2 a,vec2 b)\n{\n    vec2  ba = b - a;\n    vec2  pa = p - a;\n   \n    vec2  c = a + ba * clamp(dot(ba,pa) / dot(ba,ba),0.0,1.0);\n    float d = length(p-c);\n    \n    return smoothstep(0.0,0.01,d);\n}\n\n#define PI (3.1415926)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    vec2 uv1 = uv * 2.0 - 1.0;\n    \n    uv1 *= 4.0;\n    \n    mat2 rot = mat2(cos(PI * 0.25),-sin(PI * 0.25),\n                    sin(PI * 0.25), cos(PI * 0.25));\n    \n    mat2 rot2 = mat2(cos(iTime),-sin(iTime),\n                    sin(iTime), cos(iTime));\n    \n    uv1 = rot * abs(rot2*uv1);\n    \n    uv1 = abs(uv1);\n    \n    uv1 = pow(uv1,vec2(mix(0.6,1.0,sin(iTime)*0.5+0.5)));\n    \n    //uv1 = pow(uv1,vec2(1));\n    \n    float m = abs(fract(iTime / 20.0) * 2.0 - 1.0);\n    \n    int k = int(m * 30.0);\n    \n    for(int i = 0;i < min(k,13);i ++)\n    {\n        if(uv1.x > 0.2)\n        {\n            uv1 -= 0.2;\n            uv1.y = abs(uv1.y);\n        }   \n    }\n    \n    float t = line(uv1,vec2(0.0,0.0),vec2(0.2,0.2));\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(mix(vec3(0),col*6.0,1.0-t),1.0);\n}","name":"Image","description":"","type":"image"}]}