{"ver":"0.1","info":{"id":"slSfDh","date":"1652223489","viewed":67,"name":"Brown'sMotion","username":"RedWool","description":"New","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float v)\n{\n    return sin(sin(v*49.14)*129.32)+1.;\n}\n\nfloat noise (float v)\n{\n    float i = floor(v);\n    return mix(random(i), random(i+1.), fract(v));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv*=10.;\n    //uv.x+=iTime;\n    \n    float v=0.,l=2.,r=0.5,a=3.,f=1.;\n    \n    for (float i = 0.; i < 5.; i++)\n    {\n        v += a*noise(f*uv.x+iTime);\n        a*=r;\n        f*=l;\n    }\n    float pct = smoothstep(v-3.,v,uv.y) - smoothstep(v,v+0.5,uv.y);\n    vec2 cake = uv + vec2(sin(uv.y+iTime),sin(uv.y*0.1+iTime)*5.);\n    vec3 top = smoothstep(v-0.1, v+0.5, uv.y)*vec3(1,0.5,1) + smoothstep(v,v+1.,uv.y)*(step(1.,mod(cake.x+cake.y,2.))*vec3(0.2)+step(1.,mod(cake.x-cake.y,2.))*vec3(-0.2));\n\n    // Time varying pixel color\n    vec3 col = vec3(0.5,0.3,0)*pct+top;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}