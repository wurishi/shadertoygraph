{"ver":"0.1","info":{"id":"fltyR7","date":"1659472163","viewed":185,"name":"Fork strange fluid (1)","username":"kinonik","description":"draw fluid with mouse","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"XdcGW2","parentname":"strange fluid"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec3 palette[] = vec3[]\n(vec3(200, 251, 166),\nvec3(209, 227, 198),\nvec3(197, 204, 227),\nvec3(165, 184, 251),\nvec3(123, 152, 251),\nvec3(80, 113, 226),\nvec3(42, 74, 181),\nvec3(19, 42, 122),\nvec3(10, 21, 58),\nvec3(0, 0, 0),\nvec3(6, 10, 4),\nvec3(32, 63, 10),\nvec3(64, 127, 21),\nvec3(102, 185, 45),\nvec3(141, 229, 82),\nvec3(177, 252, 126));\n\nvec3 magicFunction(float v) {\n    v = fract(v);\n    int discr = int(floor(v * 16.));\n    return (mix(palette[discr], palette[(discr + 1) % 16], fract(v * 16.)) / 255.).brg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float val = texture(iChannel0, fragCoord/iResolution.xy).r;\n \n   \t//{fragColor = vec4(val,val,val,1.0); return;}\n    fragColor = vec4(val, val, val, 1.0);\n        \n    vec4 color = vec4(magicFunction(val / 6.283185), 1.);\n    \n    // code below taken from\n    //https://www.shadertoy.com/view/Xsd3DB\n    \n    vec2 q = fragCoord.xy/iResolution.xy;\n    \n    vec3 e = vec3(vec2(1.0)/iResolution.xy,0.);\n    float p10 = texture(iChannel0, q-e.zy).x;\n    float p01 = texture(iChannel0, q-e.xz).x;\n    float p21 = texture(iChannel0, q+e.xz).x;\n    float p12 = texture(iChannel0, q+e.zy).x;\n        \n    vec3 grad = normalize(vec3(p21 - p01, p12 - p10, 1.));\n    vec3 light = normalize(vec3(.2,-.25,.7));\n    float diffuse = dot(grad,light);\n    float spec = pow(max(0.,-reflect(light,grad).z),32.0);\n    \n    fragColor = (color * diffuse) + spec;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float pi = 3.1415;\nconst float pi2 = pi/2.0;\n\nuint ihash2(uvec2 s) {\n\tuint s1;\n\ts1 = ((s.x & 0xFFFFu) * 0x55ECE809u) ^ ((s.y & 0xFFFFu) * 0xC0A1A67Du) ^ 0x4F320311u;\n\ts1 = (((s.x ^ s.y) & 0xFFFFu) * 0xE2739F9Fu) ^ ((s1) * 0xBC01B91Du) ^ 0x10AC8297u;\n\ts1 = ((s.x >> 16) * 0xF29F4A8Fu) ^ ((s1 & 0xFFFFu) * 0x375AB6D5u) ^ 0xF182680Bu;\n\ts1 = ((s1 >> 16) * 0xCA878023u) ^ ((s1 & 0xFFFFu) * 0x64434F71u) ^ 0xE4D01C9Du;\n\treturn uint(s1);\n}\n\nfloat random() {\n\treturn float(\n        ihash2(uvec2(gl_FragCoord.x + gl_FragCoord.y * iResolution.x,iFrame + int(iMouse.x * 10000.)))\n        ) / 4294967295.;  \n}\n\nvec4 get_pixel(float x_offset, float y_offset)\n{\n\treturn texture(iChannel0, (gl_FragCoord.xy / iResolution.xy) + (vec2(x_offset, y_offset) / iResolution.xy));\n}\n\nfloat step_simulation()\n{\n\tfloat val = get_pixel(0.0, 0.0).r;\n    \n    val += random()*val*0.15; // errosion\n    \n  \tval = get_pixel(\n    \tsin(get_pixel(val, 0.0).r  - get_pixel(-val, 0.0) + pi).r  * val * 0.06, \n        cos(get_pixel(0.0, -val).r - get_pixel(0.0 , val) - pi2).r * val * 0.06\n   \t).r;\n    \n    val *= 1.0001;\n    \n    return val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    float val = step_simulation();\n \n    if(iFrame < 10)\n        val = \n        \trandom()*length(iResolution.xy)/100.0 + \n        \tsmoothstep(length(iResolution.xy)/2.0, 0.5, length(iResolution.xy * 0.5 - fragCoord.xy))*25.0;\n    \n    if (iMouse.z > 0.0) \n        val += smoothstep(length(iResolution.xy)/10.0, 0.5, length(iMouse.xy - fragCoord.xy));\n        \n    fragColor.r = val;\n}","name":"Buffer A","description":"","type":"buffer"}]}