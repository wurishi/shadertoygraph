{"ver":"0.1","info":{"id":"3tXSD2","date":"1564239681","viewed":98,"name":"Falling Down Forever","username":"Hirai_worthless","description":"falling falling","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\n\nfloat time (float multiply){\n\treturn iTime * multiply;\n}\nmat2 genRotMat(float val){\n\treturn mat2(cos(val),-sin(val),sin(val),cos(val));\n}\nfloat wall(float z,vec3 p,float holeHeight){\n\tfloat w = \n        max(\n            max(z - p.z, - max(abs(p.x) - 0.01,abs(p.y) - holeHeight))\n               ,-(z + 0.05 - p.z)\n        );\n    for(float i = 0.0; i < 5.0; i += 1.0){\n    \tw = max(w,-(length(abs(p.xy) - vec2(0.1 * i,i * 0.1)) - 0.05));\n    }\n    return w;\n}\n\nfloat map(vec3 p){\n\tfloat beginZ = floor(time(1.0) * 1.0) - 0.5;\n    p.xy *= genRotMat(floor(time(1.0))* PI /12.0 );\n    float walls = 10000.0;\n    for(float zi = 0.5; zi < 15.0; zi += 0.5){\n        p.xy *= genRotMat(0.5 * PI /12.0 );\n    \twalls = min(walls,\n                    wall(beginZ + zi,p,\n                         pow(0.2/((beginZ + zi - time(1.0)) + 0.3),2.0)\n                        )\n                   );\n    }\n    return walls;\n}\n\nconst float EPS = 0.001;\nvec3 getNormal(vec3 p) {\n    return normalize(vec3(\n        map(p + vec3(EPS, 0.0, 0.0)) - map(p + vec3(-EPS,  0.0,  0.0)),\n        map(p + vec3(0.0, EPS, 0.0)) - map(p + vec3( 0.0, -EPS,  0.0)),\n        map(p + vec3(0.0, 0.0, EPS)) - map(p + vec3( 0.0,  0.0, -EPS))\n    ));\n}\n\nvec4 trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    vec3 p = vec3(0.0,0.0,0.0);\n    \n    for(int i = 0; i < 96; ++i){\n        p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return vec4(getNormal(p),t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.2));\n    r.xy *= genRotMat(iTime * PI/12.0);\n    vec3 o = vec3(0,0,time(1.0));\n    vec4 data = trace(o,r);\n    float t = data.w;\n    float fog = 1.0 / (1.0 + t * t * 0.2);\n    vec3 fc = mix(vec3(0.5 - data.x,0.5 -data.y,0.5-data.z),vec3(1.0),1.0 - fog);\n\t//fc = vec3(fog);\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}