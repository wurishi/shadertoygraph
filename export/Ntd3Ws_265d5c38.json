{"ver":"0.1","info":{"id":"Ntd3Ws","date":"1636965987","viewed":184,"name":"Blue sky with sunset/rise","username":"RJVB09","description":"A 2d blue sky with rayleigh scattering in mind.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sky","rayleigh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //All constants have been eyeballed, so nothing is really physically accurate.\n    \n\n    vec2 uv = fragCoord/iResolution.xy;\n    float zoom = 0.5;\n    float time = sin(iTime*0.1); //sin(uv.x*3.14); for time on the x axis.\n    float terminator = 7.0;\n    vec3 timeMult = vec3(1.0-pow(2.0,-(terminator*5.0)*time),1.0-pow(2.0,-(terminator*2.0)*time),1.0-pow(2.0,-terminator*time));\n    //    ^^ How each color should fade depending on time.\n\n    //The \"height\" of each gradient on each channel.\n    float r = pow(max(1.0-uv.y*zoom,0.0),6.0)*0.95 * timeMult.x;\n    float g = pow(max(1.0-uv.y*zoom,0.0),3.0) * timeMult.y;\n    float b = pow(max(1.0-uv.y*zoom,0.0),1.5) * timeMult.z;\n    \n    // Output to screen\n    fragColor = vec4(r,g,b,1.0);\n}","name":"Image","description":"","type":"image"}]}