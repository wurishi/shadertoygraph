{"ver":"0.1","info":{"id":"3sSGDz","date":"1548540668","viewed":600,"name":"Morphing with SDF","username":"Tup","description":"Create a morphing shape using an SDF and scaling the contribution of each channel.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = 3.14159265359;\n    vec2 uv  = abs(fragCoord/iResolution.xy - vec2(0.5, 0.5));\n    vec3 sdf = 2.*vec3( max(uv.x, uv.y), uv.x + uv.y, length(uv) );\n    // square rombus and circle do not accurately describe the shapes but they all have 6 letters...\n    float square = clamp(2.*cos(iTime)-0.5, 0., 1.);\n    float rombus = clamp(2.*cos(iTime+(2.*pi/3.))-0.5, 0., 1.);\n    float circle = clamp(2.*cos(iTime+(4.*pi/3.))-0.5, 0., 1.);\n    float len = sqrt(square*sdf.x*sdf.x + rombus*sdf.y*sdf.y + circle*sdf.z*sdf.z); \n    fragColor = vec4(len > .5 ? vec3(1) : vec3(0), 1.);\n}","name":"Image","description":"","type":"image"}]}