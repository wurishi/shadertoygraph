{"ver":"0.1","info":{"id":"lsdBD7","date":"1525536920","viewed":293,"name":"The World of Music","username":"slerpy","description":"Don't try to read the source code. It's not worth it.","likes":27,"published":1,"flags":32,"usePreview":0,"tags":["3d","raytracing","noise","sound","music","landscape","volumetric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv, texture(iChannel0, uv).w);\n    //fragColor = vec4(texture(iChannel0, uv).w);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define TAU 6.28318530718\n\nvec3 ro, rd, p;\nfloat h, n, g, t, s;\n\nmat2 r(float a)\n{\n    float s=sin(a), c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nfloat d()\n{\n    vec2 u = 5e-4 * p.xz; float k = 2.0; n = .0;\n    for(int i=0; i<6; i++)n += texture(iChannel1,u*k).r/k, k*=2.;\n    h = 4. * texture(iChannel0, vec2(n,0)).r, s += h/n;\n    return p.y + 30.*n - h;\n}\n\nfloat tr()\n{\n    t = abs(ro.y/rd.y);\n    g = float(!all(greaterThan(vec2(.48), fract(.2*(ro.xz+rd.xz*t*5.)*r(1.))-.5)));\n    for(int i=0; i<40; i++)p=ro+rd*t, t+=.5*d();\n    //g = float(!all(greaterThan(vec2(.48), fract(.2*p.xz*r(1.))-.5)));\n    return .01 * s * exp(-.02*t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    rd = normalize(vec3(2.*fragCoord.xy - iResolution.xy, iResolution.y));\n    ro = vec3(0, 5, 15.*iTime);\n    rd.yz *= r(-.65); rd.xy *= r(.2*sin(.1*iTime));\n\n    float a = 1.21*iDate.w + 1.31*sin(iDate.w);\n    vec3 col = .5 + .5 * vec3(sin(a), sin(a+TAU/3.), sin(a+TAU*2./3.));\n    fragColor = vec4(max(.6 * tr() * col + .3 * (1. - col), .3 * exp(-.01*t) * g), .05*(p.z-ro.z));\n\n    vec2 uv = 3.*(fragCoord.xy / iResolution.xy) - 1., bv = 2.*abs(uv-.5)-1.;\n    float box = max(bv.x * iResolution.x/iResolution.y, bv.y);\n    float amp = texture(iChannel0, vec2(uv.x, 0)).r;\n    if(uv.y*uv.y < amp && box < .0 || abs(box - .1) < .01)fragColor = vec4(1);\n    \n    fragColor.w = min(.5*abs(fragColor.w-1.), 5.);\n}","name":"Buffer A","description":"","type":"buffer"}]}