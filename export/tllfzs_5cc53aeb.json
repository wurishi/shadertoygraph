{"ver":"0.1","info":{"id":"tllfzs","date":"1597527797","viewed":323,"name":"Turbulent - Q1","username":"Izhido","description":"A close approximation of the algorithm used by the Quake rendering engine (1997) to create surfaces with turbulence - such as water, acid, lava - and also the black & white portals commonly seen in game.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["quake","turbulent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Shader input:\n    vec2 fragmentTexCoords;\n    float time;\n    \n    \n    // Setting shader input from shadertoy uniforms:\n    fragmentTexCoords.x = fragCoord.x / iResolution.x;\n    fragmentTexCoords.y = fragCoord.y / iResolution.y;\n\ttime = iTime;\n    \n    \n    // The proper algorithm:\n\tfloat tx = fragmentTexCoords.x + sin(mod(time + fragmentTexCoords.y * 5.0, 3.14159*2.0)) / 10.0;\n\tfloat ty = fragmentTexCoords.y + sin(mod(time + fragmentTexCoords.x * 5.0, 3.14159*2.0)) / 10.0;\n\tvec2 texCoords = vec2(tx, ty);\n    \n    \n    // Outputting the resulting color;\n    fragColor = texture(iChannel0, texCoords);\n}","name":"Image","description":"","type":"image"}]}