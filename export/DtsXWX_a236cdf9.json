{"ver":"0.1","info":{"id":"DtsXWX","date":"1675429202","viewed":196,"name":"Order & Chaos","username":"ChunderFPV","description":"Just playin with grid transforms.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","grid","transform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(a) (sin(vec3(0,1.047,2.094)+vec3((a)*6.2832))*.5+.5) // color\n#define RT(a) mat2(cos(m.a*1.571+vec4(0,-1.571,1.571,0)))      // rotate\n#define G(v) H(u.v-t+s)*grid(u.v, t) // quick grid with color\n\nfloat grid(float x, float t)\n{\n    float l = max(0., 1.-(abs(fract(x-t+.5)-.5)/fwidth(x)/1.5)), // lines\n          g = 1.-abs(sin((x-t)*3.1416)), // glow\n          d = min(1., 1./abs(x)); // darken\n    return (l+g*.3+.1)*sqrt(d);\n}\n\nvoid mainImage(out vec4 RGBA, in vec2 XY)\n{\n    vec3  u, c, v, g;\n    vec2  R = iResolution.xy,\n          m = (iMouse.xy/R*4.)-2.,\n          uv;\n    float T = iTime,\n          t = (T-10.)/5.,\n          tr = smoothstep(0., 1., sin(t)*.6+.5), // transform ratio\n          s = .1+sin(T)*.2; // hue shift with time\n    if (iMouse.z < 1.) m = vec2(sin(t/2.)*.6, sin(t)*.4); // rotate with time\n    mat2 pitch = RT(y),\n         yaw = RT(x);\n    uv = (XY-.5*R)/R.y; // 2d coords\n    for (float i = .1; i < 1.; i+=.1)\n    {\n        s += i*.2; // shift hue\n        u = normalize(vec3(uv, .6*sqrt(i)))*15.; // 3d coords\n        u.yz *= pitch;\n        u.xz *= yaw;\n        g = sin(u*i*6.3);\n        g = vec3(g.x*g.y*g.z);\n        u = u*(1.-tr)+g*tr; // transform\n        v = max(max(G(x), G(y)), G(z)); // blend grids\n        c += v*(1.-i);\n    }\n    RGBA = vec4(c*c*.3, 1);\n}","name":"Image","description":"","type":"image"}]}