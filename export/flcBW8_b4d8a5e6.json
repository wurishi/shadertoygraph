{"ver":"0.1","info":{"id":"flcBW8","date":"1662993647","viewed":59,"name":"hajimeteno shader","username":"tomo9","description":"This is my first shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hajimete"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//円を描く\nfloat sdfCircle(vec2 uv, float r, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  \n  return length(vec2(x, y)) - r;  \n}\n\n//四角を描く\nfloat sdfSquare(vec2 uv, float size, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n\n  return max(abs(x), abs(y)) - size;\n}\n\n\nvec3 drawScene(vec2 uv) {\n  vec3 col = vec3(1);\n  \n  //Sの文字\n  float circle1 = sdfCircle(uv, 0.21, vec2(0.1, 0.2));\n  float circle2 = sdfCircle(uv, 0.21, vec2(0.078, 0.21));\n  float circle3 = sdfCircle(uv, 0.21, vec2(-0.1, -0.2));\n  float circle4 = sdfCircle(uv, 0.21, vec2(-0.078, -0.21));\n  \n  float circle5 = sdfCircle(uv, 0.22, vec2(0.08, 0.2));\n  float circle6 = sdfCircle(uv, 0.22, vec2(0.058, 0.21));\n  float circle7 = sdfCircle(uv, 0.22, vec2(-0.08, -0.19));\n  float circle8 = sdfCircle(uv, 0.22, vec2(-0.058, -0.21));\n  \n  float circle9 = sdfCircle(uv, 0.22, vec2(0.12, 0.2));\n  float circle10 = sdfCircle(uv, 0.21, vec2(0.098, 0.21));\n  float circle11 = sdfCircle(uv, 0.22, vec2(-0.12, -0.2));\n  float circle12 = sdfCircle(uv, 0.21, vec2(-0.098, -0.21));\n  \n  //円と四角の差分用\n  float square13 = sdfSquare(uv, 0.35+0.02*(5.0+(abs(sin(iTime)))), vec2(0., 0.));\n  float circle14 = sdfCircle(uv, 0.48, vec2(0., 0.));\n  \n  float circle15 = sdfCircle(uv, 0.485, vec2(0., 0.));\n  float circle16 = sdfCircle(uv, 0.49, vec2(0., 0.));\n  \n  //波紋みたいなやつ\n  float circle17 = sdfCircle(uv, 0.49 * (abs(sin(0.09 * iTime)) - 0.003), vec2(0., 0.));\n  float circle18 = sdfCircle(uv, 0.49 * abs(sin(0.09 * iTime))  , vec2(0., 0.));\n  \n  float circle19 = sdfCircle(uv, 0.49 * (abs(sin(0.091 * iTime + 0.5)) - 0.003), vec2(0., 0.));\n  float circle20 = sdfCircle(uv, 0.49 * abs(sin(0.091 * iTime + 0.5))  , vec2(0., 0.));\n  \n  float circle21 = sdfCircle(uv, 0.49 * (abs(sin(0.1 * iTime + 0.8)) - 0.003), vec2(0., 0.));\n  float circle22 = sdfCircle(uv, 0.49 * abs(sin(0.1 * iTime + 0.8))  , vec2(0., 0.));\n  \n  //円の差分\n  float res1 = max(-circle1, circle2);\n  float res2 = max(-circle3, circle4);\n  float res3 = max(-circle5, circle6);\n  float res4 = max(-circle7, circle8);\n  float res5 = max(-circle9, circle10);\n  float res6 = max(-circle11, circle12);\n  float res7 = max(-square13, circle14);\n  float res8 = max(-circle15, circle16);\n  float res9 = max(-circle17, circle18);\n  float res10 = max(-circle19, circle20);\n  float res11 = max(-circle21, circle22);\n\n  col = mix(0.7+0.5*vec3(sin(iTime), 0, uv.y), col, step(0., res7));\n  col = mix(0.7+0.5*vec3(sin(iTime), 0, uv.y), col, step(0., res8));\n  col = mix(0.5+0.5*vec3(cos(iTime), 0, 1), col, step(0., res1));  \n  col = mix(0.5+0.5*vec3(cos(iTime), 0, 1), col, step(0., res2));  \n  col = mix(0.5*vec3(cos(iTime), 0, 1), col, step(0., res3));  \n  col = mix(0.5*vec3(cos(iTime), 0, 1), col, step(0., res4));\n  col = mix(vec3(cos(iTime), 0, 1), col, step(0., res5));  \n  col = mix(vec3(cos(iTime), 0, 1), col, step(0., res6));\n  col = mix(0.7+0.5*vec3(sin(iTime), 0, 1), col, step(0., res9));\n  col = mix(0.7+0.5*vec3(sin(iTime), 0, 1), col, step(0., res10));\n  col = mix(0.7+0.5*vec3(sin(iTime), 0, 1), col, step(0., res11));\n  \n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy;\n  uv -= 0.5;\n  //アスペクト比を修正\n  uv.x *= iResolution.x/iResolution.y; \n\n  vec3 col = drawScene(uv);\n\n  //出力\n  fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}