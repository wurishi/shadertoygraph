{"ver":"0.1","info":{"id":"wtsBDl","date":"1598983365","viewed":116,"name":"c64 rasters","username":"microshark","description":"c64 rasters","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["c64","rasters"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void tiles(vec2 uv, inout vec4 fragColor)\n{\n    float x = uv.x * 16. + floor(uv.y * 16.);\n    int offset = int(mod(x, 16.));\n    \n    fragColor.rgb = palette(offset);\n}\n\nvoid raster(vec2 uv, inout vec4 fragColor)\n{\n    int index = int(uv.y * 112.);\n    fragColor.rgb = raster0[index];\n}\n\nvoid sineRaster(vec2 uv, inout vec4 fragColor)\n{\n    float offs = floor(uv.x * 8.);\n    float c = .2 + sin(iTime * 1.8 + offs * .5) * .2;\n    float d = .2 + cos(120. + iTime * 1.0 + offs * .5) * .2;\n    c += d;\n    vec3 col = vec3(0.);\n    if(uv.y > c && uv.y < c + .2)\n    {  \n        int index = int(((uv.y - c) * (16. / .2)));\n        \n        if(offs == 0. || offs == 7.) fragColor.rgb = raster1(index);\n        if(offs == 1. || offs == 6.) fragColor.rgb = raster2(index);\n        if(offs == 2. || offs == 5.) fragColor.rgb = raster3(index);\n        if(offs == 3. || offs == 4.) fragColor.rgb = raster4(index);\n\t}\n}\n\nvoid tv(vec2 uv, inout vec4 fragColor)\n{\n    vec2 uvn = uv-.5;\n    \n    fragColor.rgb *= 1.1;\n    fragColor.rgb = clamp(fragColor.rgb,0.,1.);\n    fragColor.rgb *= 1.-length(uvn*1.1);\n    fragColor.rgb = clamp(fragColor.rgb,0.,1.);  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 resultColor = vec4(vec3(0.), 1.);\n     \n    if(iMouse.z > 0.)\n    {\n        if (iMouse.x > fragCoord.x)\n        \ttiles(uv, resultColor);\n        else\n            raster(uv, resultColor);\n    }\n    else\n\t    raster(uv, resultColor);\n    \t\n        \n    sineRaster(uv, resultColor);\n\n    tv(uv, resultColor);  \n     \n    fragColor = resultColor;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/**/\n#define C00 vec3(  0.,  0.,  0.) / 255.\n#define C01 vec3(255.,255.,255.) / 255.\n#define C02 vec3(152., 75., 67.) / 255.\n#define C03 vec3(121.,193.,200.) / 255.\n#define C04 vec3(155., 81.,165.) / 255.\n#define C05 vec3(104.,174., 92.) / 255.\n#define C06 vec3( 62., 49.,162.) / 255.\n#define C07 vec3(201.,214.,132.) / 255.\n#define C08 vec3(155.,103., 57.) / 255.\n#define C09 vec3(106., 84.,  0.) / 255.\n#define C0A vec3(195.,123.,117.) / 255.\n#define C0B vec3( 85., 85., 85.) / 255.\n#define C0C vec3(138.,138.,138.) / 255.\n#define C0D vec3(163.,229.,153.) / 255.\n#define C0E vec3(138.,123.,206.) / 255.\n#define C0F vec3(173.,173.,173.) / 255.\n\n/**/\n/*\n#define C00 vec3(  0.,  0.,  0.) / 255.\n#define C01 vec3(255.,255.,255.) / 255.\n#define C02 vec3(137., 64., 54.) / 255.\n#define C03 vec3(122.,191.,199.) / 255.\n#define C04 vec3(138., 70.,174.) / 255.\n#define C05 vec3(104.,169., 65.) / 255.\n#define C06 vec3( 62., 49.,162.) / 255.\n#define C07 vec3(208.,220.,113.) / 255.\n#define C08 vec3(155., 95., 37.) / 255.\n#define C09 vec3( 92., 71.,  0.) / 255.\n#define C0A vec3(187.,119.,109.) / 255.\n#define C0B vec3( 85., 85., 85.) / 255.\n#define C0C vec3(128.,128.,128.) / 255.\n#define C0D vec3(172.,234.,136.) / 255.\n#define C0E vec3(124.,112.,218.) / 255.\n#define C0F vec3(171.,171.,171.) / 255.\n\n*/\n\nvec3 palette(int i)\n{\n    i %= 16;\n    if(i ==  0) return C00;\n    if(i ==  1) return C01;\n    if(i ==  2) return C02;\n    if(i ==  3) return C03;\n    if(i ==  4) return C04;\n    if(i ==  5) return C05;\n    if(i ==  6) return C06;\n    if(i ==  7) return C07;\n    if(i ==  8) return C08;\n    if(i ==  9) return C09;\n    if(i == 10) return C0A;\n    if(i == 11) return C0B;\n    if(i == 12) return C0C;\n    if(i == 13) return C0D;\n    if(i == 14) return C0E;\n    if(i == 15) return C0F;\n}\n\n\nconst vec3 raster0[112] = vec3[](\n    C06, C06, C00, C06, C04, C04, C00, C04,\n    C0E, C0E, C00, C0E, C03, C03, C00, C03,\n    C0D, C0D, C00, C0D, C01, C01, C00, C00,\n    C09, C02, C08, C02, C09, C00, C02, C08,\n    C0A, C08, C02, C09, C08, C0A, C0F, C0A,\n    C08, C02, C0A, C0F, C07, C0F, C0A, C08,\n    C0F, C07, C01, C07, C0F, C0A, C0F, C07,\n    C07, C0F, C0A, C0F, C07, C01, C07, C0F,\n    C08, C0A, C0F, C07, C0F, C0A, C02, C08,\n    C0A, C0F, C0A, C08, C09, C02, C08, C0A,\n    C08, C02, C00, C09, C02, C08, C02, C09,\n    C00, C00, C01, C01, C0D, C00, C0D, C0D,\n    C03, C00, C03, C03, C0E, C00, C0E, C0E,\n    C04, C00, C04, C04, C06, C00, C06, C06\n);\n\nvec3 raster1(int i)\n{\n    i %= 16;\n    if(i ==  0 || i == 15) return C00;\n    if(i ==  1 || i == 14) return C09;\n    if(i ==  2 || i == 13) return C02;\n    if(i ==  3 || i == 12) return C08;\n    if(i ==  4 || i == 11) return C0A;\n    if(i ==  5 || i == 10) return C0F;\n    if(i ==  6 || i ==  9) return C07;\n    if(i ==  7 || i ==  8) return C01;\n}\n\n\nvec3 raster2(int i)\n{\n    i %= 16;\n    if(i ==  0 || i == 15) return C00;\n    if(i ==  1 || i == 14) return C06;\n    if(i ==  2 || i == 13) return C0B;\n    if(i ==  3 || i == 12) return C04;\n    if(i ==  4 || i == 11) return C0A;\n    if(i ==  5 || i == 10) return C03;\n    if(i ==  6 || i ==  9) return C0D;\n    if(i ==  7 || i ==  8) return C01;\n}\n\n\nvec3 raster3(int i)\n{\n    i %= 16;\n    if(i ==  0 || i == 15) return C00;\n    if(i ==  1 || i == 14) return C0B;\n    if(i ==  2 || i == 13) return C0C;\n    if(i ==  3 || i == 12) return C0F;\n    if(i ==  4 || i == 11) return C07;\n    if(i ==  5 || i == 10) return C0D;\n    if(i ==  6 || i ==  9) return C01;\n    if(i ==  7 || i ==  8) return C01;\n}\n\n\nvec3 raster4(int i)\n{\n    i %= 16;\n    if(i ==  0 || i == 15) return C09;\n    if(i ==  1 || i == 14) return C0B;\n    if(i ==  2 || i == 13) return C08;\n    if(i ==  3 || i == 12) return C0C;\n    if(i ==  4 || i == 11) return C0A;\n    if(i ==  5 || i == 10) return C0F;\n    if(i ==  6 || i ==  9) return C0D;\n    if(i ==  7 || i ==  8) return C01;\n}\n","name":"Common","description":"","type":"common"}]}