{"ver":"0.1","info":{"id":"ltjXRV","date":"1445139234","viewed":429,"name":"Random Lines Flowing","username":"vamoss","description":"Studying lines from the book of shaders by Patricio Gonzales.","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["lines","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nfloat random (vec2 st) { \n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))* \n        43758.5453123);\n}\n\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\n\nfloat barra(vec2 _st, float _width){\n    float pct0 = smoothstep(_st.x-_width,_st.x,_st.y);\n    pct0 *= 1.-smoothstep(_st.x,_st.x+_width,_st.y);\n\treturn pct0;\n}\n\nfloat contrabarra(vec2 _st, float _width){\n    float pct1 = smoothstep(_st.x-_width,_st.x,1.0-_st.y);\n    pct1 *= 1.-smoothstep(_st.x,_st.x+_width,1.0-_st.y);\n\treturn pct1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy / iResolution.xy;\n\t\n    vec2 centerSt = st-0.5;\n    float r = length(centerSt)*2.0;\n    float a = atan(centerSt.y,centerSt.x);\n    \n    st *= 10.0; // Scale the coordinate system by 10\n    vec2 ipos = floor(st);  // get the integer coords\n    \n    st = tile(st,1.0);\n\n    vec2 localCenterSt = st-0.5;\n    float localR = length(localCenterSt)*2.0;\n    float localA = atan(localCenterSt.y,localCenterSt.x);\n    \n    float rotating=step(PI/4.,abs(cos((localA+iTime+(r*3.0)))));\n    float randX = random( ipos+rotating)+rotating;\n    //float randX = random(ipos+iTime/2000000.);\n    \n    vec3 color = vec3(0.0); \n    \n    //colors\n    if(randX>0.75){\n        color = vec3(0.0, 0.4, 0.4) + color;\n    }else if(randX>0.5){\n        color = vec3(0.0, 0.7, 0.4) + color;\n    }else if(randX>0.25){\n        color = vec3(0.0, 0.4, 1.0) + color;\n    }else{\n        color = vec3(0.0, 0.0, 0.4) + color;\n    }\n    color.r = 1.-abs(sin(r+u_time*2.0));\n    \n    //slashes\n    if(randX>0.5){\n        color *= vec3(barra(st,0.06));\n    }else{\n        color *= vec3(contrabarra(st,0.06));\n    }\n   //color=vec3(rotating);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}