{"ver":"0.1","info":{"id":"MtcGWj","date":"1471543671","viewed":200,"name":"017 mini ray marching","username":"kakaxizhhgjh","description":"A minimum ray marching shader, works on firefox. What suprise me is that it failed at chrome and opera, report error message: X4579 NaN and infinity literals not allowed.. \nyou can test on your browser.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","bug"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float EPSI = 1e-3;\nconst float TMAX = 1e3;\n\nfloat sphere(vec3 p) {\n    return length(p) - 1.0;\n}\n\nmat3 getCamera(vec3 eye, vec3 target) {\n\tvec3 z = normalize(eye - target);\n    vec3 x = normalize(cross(vec3(0.0, 1.0, 0.0), z));\n    return mat3(x, cross(z, x), z);\n}\n\nfloat trace(vec3 ro, vec3 rd) {\n\tfloat t = 0.0;\n    for(int i = 0; i < 48; ++i) {\n    \tfloat d = sphere(ro + t * rd);\n        if(abs(d) < EPSI) return t;\n        if(t > TMAX) return TMAX;\n        t += d;\n    }\n    return TMAX;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(3.0 * sin(iTime), 0.0, 3.0 * cos(iTime));\n    vec3 rd = getCamera(ro, vec3(0.0)) * normalize(vec3(uv, -1.0));\n    \n    vec3 color = vec3(1.0);\n    float t = trace(ro, rd);\n    if(t < TMAX) color = vec3(1.0, 0.0, 0.0) * max(dot(normalize(vec3(1.0)), normalize(ro + t * rd)), 0.0); \n    fragColor = vec4(pow(color, vec3(0.45)), 1.0);\n}","name":"Image","description":"","type":"image"}]}