{"ver":"0.1","info":{"id":"dtf3R7","date":"1671493301","viewed":60,"name":"collatz","username":"ianertson","description":"collatz","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["collatz"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COLA_MAX 100000000\n\nint cola(int x) {\n    return (x % 2 == 0 ? (x / 2) : (3*x+1)) % COLA_MAX;\n}\n\nfloat cola(float v) {\n    return fract(float(cola(int(v))) / float(COLA_MAX));\n}\n\nfloat cola(inout float v, int count) {\n    \n    for (int i = 0; i < count; i++) {\n        v += cola(v+float(i*16));\n    }\n    \n    return v;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 center = iResolution.xy/2.0;\n    \n    float aspect = iResolution.x / iResolution.y;\n    \n    uv = fragCoord;\n    \n    float m = float(COLA_MAX);\n    \n    float x = cos(fragCoord.x*iTime) * m;\n    float y = sin(fragCoord.y*iTime) * m;\n    float z = atan(x,y) * m;\n\n    vec3 col = vec3(cola(x, 5), cola(y, 5), cola(z, 5));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}