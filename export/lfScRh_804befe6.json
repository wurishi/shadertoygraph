{"ver":"0.1","info":{"id":"lfScRh","date":"1721898022","viewed":153,"name":"Digits - 296 chars","username":"FabriceNeyret2","description":"WebGL2 regolfing of 361 chars https://shadertoy.com/view/llXSzj\n+ fix a bug to better imitate patriciogv shader https://www.shadertoy.com/view/XlXSz2","likes":16,"published":3,"flags":0,"usePreview":0,"tags":["random","numbers","font","digits","short","serial","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// WebGL2 regolfing of 361 chars https://shadertoy.com/view/llXSzj\n// which was a compact version inspired by patriciogv shader https://www.shadertoy.com/view/XlXSz2\n// with the help of 834144373\n\n#define H(v) mod( 4e4* sin(dot(ceil(v),R)), 10. ) // random\n\nvoid mainImage( out vec4 o, vec2 u ) {    \n    vec2 R = iResolution.xy,\n         p = 6.* fract( u *= 24./R.y );           // coords inside cells\n    u.y += ceil(iTime*2.*H(u.xx));                // cell rain\n\n    o = vec4( abs( p.x - 2. ) > 1.1 ? 0           // char font decoding https://www.shadertoy.com/view/McByR1 or older https://www.shadertoy.com/view/MlXXzH\n                : int[](0,972881535,696556137,704642687,690407533,972980223)[int(p.y)]\n                  >> 30 - 3*int(H(u)) - int(p+.5) // random digit + extract pos bit\n              &1 );                               // 1:ink 0:paper \n    H(++u) > 9.9 ? o.bg-- : u;                    // make some white red\n}\n\n","name":"Image","description":"","type":"image"}]}