{"ver":"0.1","info":{"id":"MXSSDz","date":"1710791246","viewed":139,"name":"WaveRave","username":"_TAU_","description":"Waves and Rays Rave Aestetic\nUsed for the Jungle Tekno track:\nhttps://youtu.be/_0JseJ_jSJI?si=oveYs5lipkLm00Qk","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["waveraysrave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float BLUR = .0001;\nconst float BASE = .05;\n\n//UTILS\nfloat frac(float v)\n{\n    return v - floor(v);\n}\n\n//TRANSFORMS\nvec2 rotate(vec2 pos, float theta){\n    pos.x = pos.x * cos(theta) - pos.y * sin(theta);\n    pos.y = pos.x * sin(theta) + pos.y * cos(theta);\n    return pos;\n}\n\nvoid pR(inout vec2 p, float a) {\n\tp = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\n\n//SHAPES\nfloat spiral(vec2 uv, float ecc_x, float ecc_y, float zoom_in, float thickness, float ccw){  \n    float d = length(uv);\n    float theta = atan( ecc_y * uv.y, ecc_x * uv.x) / 6.28; \n    float col = frac(d / zoom_in - theta + sign (ccw) * iTime);\n    return smoothstep(BASE-BLUR+.25,BASE+BLUR+.25,col);\n}\n\n\nfloat Rays(vec2 uv, float ray_amp, float ray_freq, float wiggle_speed, float rotation, float freq){\n    float d = length(uv);\n    float theta_rot = ray_amp * sin(ray_freq * d +  wiggle_speed * iTime);\n    theta_rot += iTime * rotation;\n    pR(uv, theta_rot);\n    float col = cos(freq * acos(uv.x / d ));\n    return smoothstep(BASE-BLUR,BASE+BLUR,col); \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //-----------------------------INIT------------------------------------------\n    // NORMALIZED PIXEL coordinates:\n    // (y in {-1 ; 1} x in { -(resolution.x/resolution.y) ; (resolution.x/resolution.y)})\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;  \n    //---------------------------------------------------------------------------\n    \n    float col = 0.0;\n    float blur = 0.05;\n    float t = iTime;\n\n    vec2 uv_r = uv;\n    \n    // uniforms for parameters previously computed by automate()\n    float ecc_x = 0.6 + 0.5 * sin(t);\n    float ecc_y = 0.6 + 0.5 * cos(t) ;\n    float zoom_in = 0.18 + 0.05 * (sin(0.1 * t) + sin(t) + sin(0.8 *t));\n    float thickness = 0.5;\n    float radial_pos = 0.3 + 0.03 * (sin(3.1 * t) + sin(t) + 0.5 * sin(9.8 *t));\n    float zoom_in_balls = 0.3;\n    float num_balls = 5.;\n    float ray_amp = 0.03;\n    float ray_freq = -22.;\n    float wiggle_speed = 8.;\n    float rotation = 0.19;\n    float freq = 13.;\n    \n    // Print Rays\n    col = Rays(uv_r, ray_amp, ray_freq, wiggle_speed, rotation, freq);\n     \n    float ecc_x_mov = ecc_x * (1. + sin(t)) + 0.2;\n    float ecc_y_mov = ecc_y * (1. + cos(t)) + 0.2;\n  \n    // Print spiral balls\n    float NUM_BALLS = floor(num_balls);\n    vec2 center = vec2(mod(0.5 * t, 5.));\n    for(float i = 0.; i< NUM_BALLS; i++){\n        float angle_div = i * ( 3.141 / NUM_BALLS);\n        center = rotate(center, angle_div + t / 10.);\n\n        float r_c = length(vec2(uv.x-center.x, uv.y-center.y));\n        if(r_c < 0.2 * length(center) + 0.03){\n            if(r_c < 0.2 * length(center)){\n                float theta = atan( ecc_y_mov * uv.y, ecc_x_mov * uv.x) / 6.28;\n                col = frac(r_c / (zoom_in_balls/length(3.*center))  + theta - 2. * t);\n                col = smoothstep(thickness-blur,thickness+blur,col);\n            }else{\n                col = 0.0;\n            }\n        }\n    }\n    \n    // print Foreground spiral\n    float r = length(vec2(uv.x, uv.y));\n    if(r < radial_pos ){\n        if(r < radial_pos - 0.05){\n          col = spiral(uv, ecc_y_mov, ecc_x_mov, zoom_in, thickness, -1.0); \n          col = smoothstep(0.3, 0.3 + blur, col);\n        }else{\n          col = 0.0;\n        }\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}