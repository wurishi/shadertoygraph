{"ver":"0.1","info":{"id":"XXXcDM","date":"1727720945","viewed":24,"name":"Molushkina HW1","username":"MolushkinaAnna","description":"Platform and sphere","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["game1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle (vec2 point, vec2 circlePos, float r) { //отрисовка круга\n    return length(point - circlePos) - r;\n}\nfloat sdRect( vec2 point, vec2 plPos, vec2 plSize ) { //отрисовка прямоугольника\n    vec2 d = abs(point - plPos) - plSize;\n    return length(max(d,0.0)) + min(max(d.x,d.y), 0.0);\n}\nfloat sdEquilateralTriangle( in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n        p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\nfloat minsdEquilateralTriangle(in vec2 p, in float r) {\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = -p.y + r / k; \n    if (p.x + k * p.y > 0.0) {\n        p = vec2(p.x - k * p.y, -k * p.x - p.y) / 2.0;\n    }\n    p.x -= clamp(p.x, -2.0 * r, 0.0);\n    return -length(p) * sign(p.y);\n}\n\nfloat opSmoothUnion( float d1, float d2, float k )\n{\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n \n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.2, 0.0);\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 offset = vec2(texelFetch( iChannel0, ivec2(0,0), 0 ).x, 0.13);\n    \n    float r = 0.1;\n    float h = texelFetch( iChannel0, ivec2(0,0), 0 ).y;\n    float xPos = texelFetch( iChannel0, ivec2(0,0), 0 ).z;\n    vec2 plSize = vec2(0.225, 0.04);\n    vec2 plPos1 = vec2(xPos, h);\n    vec2 plPos2 = vec2(xPos, h+0.15);\n    \n    float circle = sdCircle(uv, offset, r);\n    \n    float platform = sdEquilateralTriangle(uv - plPos1, r);\n    float triangle = minsdEquilateralTriangle(uv - plPos2, r);\n    \n    float clock = opSmoothUnion(platform, triangle, 0.09);\n   \n    vec4 circleColor = vec4(0.96, 0.76, 0.76, 1.0);\n    vec4 platformColor = vec4(0.6, 1.0, 1.0, 1.0);\n    \n    float alpha = step(0.0, -circle);\n    float platformAlpha = step(0.0, -clock);                   \n               \n    vec4 bgColor = texture(iChannel1, uv);\n    \n    vec4 col = vec4(bgColor);\n\n    col = mix(col, platformColor, platformAlpha);\n    col = mix(col, circleColor, alpha);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int KEY_LEFT  = 65;\nconst int KEY_RIGHT = 68;\nconst float circle_start = 0.5;\nfloat plSpeed = 0.005;\nfloat circleSpeed = 0.020;\nfloat h;\nfloat xPos;\nfloat h_start = 0.95;\nfloat xPos_start = 0.5;\n\nfloat handleKeyboard(float offset) { //offset - смещение (круга). Работа с клавиатурой\n    \n    float left = texelFetch(iChannel0, ivec2(KEY_LEFT, 0), 0).x * -1.;\n    float right = texelFetch(iChannel0, ivec2(KEY_RIGHT, 0), 0).x * 1.;\n   \n    offset += circleSpeed * (left + right);\n\n    return offset;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    float offset = texelFetch( iChannel1, ivec2(0, 0), 0).x;\n    \n    if (iFrame != 0) {\n        offset = handleKeyboard(offset);\n        h = texelFetch( iChannel1, ivec2(0, 0), 0).y;\n        xPos = texelFetch( iChannel1, ivec2(0, 0), 0).z;\n        h -= plSpeed;\n    }\n    \n    else { //при 1 запуске (Frame 0)\n        offset = circle_start; \n        h = h_start; \n        xPos = xPos_start; \n    } \n    \n    if (h < 0.0) { //если платформа достигла низа экрана\n        h = h_start;\n        xPos = mix(-0.11, 1.19, fract(sin(iTime) * 43758.5453));//рандомная позиция платформы\n    }\n    \n    else if (h <= 0.27 && (offset - 0.335) <= xPos && xPos <= (offset + 0.335)) {//если платформа столкнулась с шаром\n        xPos = xPos_start;\n        h = h_start;\n    }\n    fragColor = vec4(offset, h, xPos, 0.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}