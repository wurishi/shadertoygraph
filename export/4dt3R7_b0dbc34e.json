{"ver":"0.1","info":{"id":"4dt3R7","date":"1448655508","viewed":180,"name":"Colorful Snake","username":"twbmsp","description":"I am completely beginning please let me know if you have any advice. I should try to remove this aliasing. :/","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["random","snake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float PI = 3.14159;\n\nconst float SNAKE_NW  = 0.10;\nconst float SNAKE_DW = 0.106;\n\nconst vec4 VCOL = vec4(1.0, 0.2, 0.0, 1.0);\nconst vec4 WCOL = vec4(0.8, 0.4, 1.0, 1.0);\nconst vec4 XCOL = vec4(0.2, 0.4, 0.8, 1.0);\nconst vec4 YCOL = vec4(0.2, 0.8, 0.2, 1.0);\nconst vec4 BCOL = vec4(0.0, 0.0, 0.0, 1.0);\n\nconst vec4 BACK = vec4(1.0, 0.8, 0.4, 1.0);\n\nconst float SNAKE_STEP = 0.2;\n\n\nfloat rand(const float timeShift, const float index, const float timeStep)\n{\n    float f = floor((iTime + timeShift) / timeStep);\n    \n    vec2 v = vec2(mod(f + index, iResolution.y),\n                  mod(f - index, iResolution.x));\n    \n    return fract(sin(dot(v.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat continuousRand(const float timeShift, const float index, const float timeStep)\n{\n    float c00 = 0.5 *       rand(timeShift           , index, timeStep);\n    float c10 = 0.5 *       rand(timeShift + timeStep, index, timeStep);\n    float c01 = 2.0 * PI  * rand(timeShift           , index + 0.5, timeStep);\n    float c11 = 2.0 * PI  * rand(timeShift + timeStep, index + 0.5, timeStep);\n    \n    float t = 0.5 + 0.5 * sin(PI * (fract((iTime + timeShift) / timeStep) - 0.5));\n    \n    return (1.0 - t) * c00 * sin((iTime + timeShift) / timeStep + c01) +\n                  t  * c10 * sin((iTime + timeShift) / timeStep + c11);\n    \n}\n\nvec4 addSnakeColor(const vec4 scol, const vec4 fragColor, const float timeShift, const vec2 p)\n{\n    vec2 v = 2.0 * vec2(continuousRand(timeShift * SNAKE_STEP, 0.0, 1.0) + 0.5,\n                        continuousRand(timeShift * SNAKE_STEP, 1.0, 1.0) + 0.5);\n    \n    float l = length(p - v);\n    float x = step(l, SNAKE_NW);\n    float y = step(l, SNAKE_DW) - x;\n    \n\treturn (scol - fragColor) * x +\n           (BCOL - fragColor) * y;\n}\n\nvec4 antialiasing(const vec4 scol, const vec4 fragColor, const float timeShift, const vec2 p)\n{\n    vec2 DX = vec2(1.0 / iResolution.x, 0.0);\n    vec2 DY = vec2(0.0, 1.0 / iResolution.y);\n    \n\treturn 0.25 * addSnakeColor(scol, fragColor, timeShift, 2.0 * p) +\n           0.25 * addSnakeColor(scol, fragColor, timeShift, 2.0 * p + DX) +\n           0.25 * addSnakeColor(scol, fragColor, timeShift, 2.0 * p + DY) +\n           0.25 * addSnakeColor(scol, fragColor, timeShift, 2.0 * p + DX + DY);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = vec2(fragCoord.x / iResolution.x,\n                  fragCoord.y / iResolution.y);\n    \n    fragColor = BACK;\n    \n    fragColor += antialiasing(VCOL, fragColor, 0.0, p);\n    fragColor += antialiasing(WCOL, fragColor, 1.0, p);\n    fragColor += antialiasing(XCOL, fragColor, 2.0, p);\n    fragColor += antialiasing(YCOL, fragColor, 3.0, p);\n}","name":"Image","description":"","type":"image"}]}