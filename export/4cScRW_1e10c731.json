{"ver":"0.1","info":{"id":"4cScRW","date":"1721947770","viewed":22,"name":"RadarScreenStudy","username":"lucasrumney94","description":"a radar looking shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["radar","shapes","scanning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Draws a line given 2 points specified in uv space\nfloat line(vec2 uv, vec2 a, vec2 b, float thickness){\n    vec2 g = b - a;\n    vec2 h = uv - a;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n\treturn smoothstep(thickness, 0.5*thickness, d);\n}\n\nfloat linePolar(vec2 uv, vec2 origin, float theta, float magnitude, float thickness){\n    vec2 a = origin;\n    vec2 b = magnitude*vec2(-cos(theta), sin(theta));\n    vec2 g = b - a;\n    vec2 h = uv - a;\n    float d = length(h - g * clamp(dot(g, h) / dot(g,g), 0.0, 1.0));\n\treturn smoothstep(thickness, 0.5*thickness, d);\n}\n\nfloat circle(vec2 uv, vec2 center, float radius, float thickness)\n{\n    return 1.-smoothstep(0., thickness, abs(radius-distance(uv,center))) ;\n}\n\nfloat glowCircle(vec2 uv, vec2 center, float radius)\n{\n    return 1.-smoothstep(0., radius, distance(uv,center)) ;\n}\n\nfloat glowCircleExcite(vec2 uv, vec2 center, float radius, float currentTheta)\n{\n    float thetaToBeExcited = atan(center.y/center.x);\n    return 1.0-smoothstep(0.,glowCircle(uv, center, radius), currentTheta*thetaToBeExcited);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // center the UV\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    \n    vec2 cuv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n\n    cuv.y -= .8*sin(cuv.x)/cuv.x - .8;\n\n\n    vec3 col = vec3(0,0,0.);\n    \n    // spinning line\n    // Cartesian\n    col += line(cuv, vec2(0,0), vec2(-0.4*cos(iTime),0.4*sin(iTime)), 0.004);\n    // Polar\n    //col += linePolar(cuv, vec2(0.,0.), iTime+.1, .4, .004);\n    \n    // Static Lines\n    col += line(cuv, vec2(0,0), vec2(0.4, 0), 0.003); \n    col += line(cuv, vec2(0,0), vec2(-0.4, 0), 0.003); \n    col += line(cuv, vec2(0,0), vec2(0,.4), 0.003); \n    col += line(cuv, vec2(0,0), vec2(0,-.4), 0.003); \n    \n    // Static Circles\n    col += circle(cuv, vec2(0,0), .4, .003);\n    col += circle(cuv, vec2(0,0), .3, .003);\n    col += circle(cuv, vec2(0,0), .2, .003);\n    col += circle(cuv, vec2(0,0), .1, .003);\n    col += circle(cuv, vec2(0,0), .009, .003);\n    \n    \n    col += glowCircle(cuv, vec2(0,0), .6)/3.0f;\n    \n    // Line theta\n    float lineTheta =  atan(0.4*sin(iTime)/-0.4*cos(iTime));\n    col += glowCircleExcite(cuv, vec2(.1,.1), .03, mod(iTime+3.95, 6.28));\n\n    col += glowCircleExcite(cuv, vec2(-.1,-.1), .03, mod(iTime+.7, 6.28));\n\n\n    // green\n    col *= vec3(0.0,1.0,0.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}