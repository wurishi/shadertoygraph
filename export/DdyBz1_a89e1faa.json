{"ver":"0.1","info":{"id":"DdyBz1","date":"1697895443","viewed":40,"name":"21. Chains","username":"Ladus","description":"Inktober 2023 Day 21.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["inktober","chains"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\nfloat aa = 0.005;\n\nmat2 rotate(float a) {\n    //a *= PI * 2.;\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat chainSegment(vec2 p, float scale, bool front) {\n    float chainLength = 0.5, chainThickness = 0.15,  chainThicknessFactor = 1.4;\n    if(front) {\n        chainLength -= chainThickness*scale*1.5;\n    }\n    \n    p.y = max(0.,abs(p.y)-chainLength*scale); //stretch y to create segment middle\n    float segmentSdf = (length(p)/scale)-0.2*scale; \n    \n    float mask = 0.;\n    if(front) {\n        mask = smoothstep(0.+aa, 0.-aa, segmentSdf) + smoothstep(0.1-aa, 0.1+aa, segmentSdf);\n    }\n    else {\n        segmentSdf += chainThickness*scale;\n        mask = smoothstep(0.-aa, 0.+aa, segmentSdf);\n    }\n    \n    return 1.-clamp(mask,0.,1.);\n}\n\nfloat chain(vec2 p, vec2 start, vec2 end, float scale, float offset) {\n    float v = 0.;\n    float chainDistance = distance(start,end);\n    vec2 chainDirection = normalize(end-start);\n    start = start + (chainDirection*(fract(offset)*scale*3.2));\n    \n    bool chainSection = true;\n    for(float traveled = 0.; traveled < chainDistance; traveled += 0.3*scale) {\n        \n        start += chainDirection*(scale*0.8);\n        \n        vec2 chainSegmentP = p - start;\n        float rotation = atan(chainDirection.x,chainDirection.y);\n        chainSegmentP = chainSegmentP*rotate(rotation);\n               \n        v += chainSegment(chainSegmentP, scale, chainSection);\n        chainSection = !chainSection;\n    }\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = ((fragCoord/iResolution.xy) - vec2(0.5,0.5)) * 2.;\n    p.x *= iResolution.x / iResolution.y;\n    float aa = 0.005;\n    float loopingTime = fract(iTime/8.);\n    \n    float v = 0.;\n\n    v += chain(p, vec2(-3.5,-1.), vec2(1,sin(iTime)*0.3)-0.4, .5, iTime*1.5);\n    v += chain(p, vec2(-2.5,-0.5), vec2(0.,1.), .3, iTime);\n    v += chain(p, vec2(-2.5,1.3), vec2(1.,-1.), .2, iTime);\n    v += chain(p, vec2(2.5,-.5), vec2(-1.2,1.), .2, iTime);\n    v += chain(p, vec2(2.5,.8), vec2(-2.2,-.4), .15, iTime);\n    \n    v = clamp(v+pow((length(p)/3.)-.3,3.), 0., 1.);\n    \n    // Output to screen\n    fragColor = vec4(mix(vec3(0.05,0.01,0.05), vec3(1.,0.9,0.95), v),1.0);\n}","name":"Image","description":"","type":"image"}]}