{"ver":"0.1","info":{"id":"tdcSDS","date":"1572747194","viewed":160,"name":"An Aspect Ratio Checkerboard","username":"sux2bthatguy","description":"For school","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["school"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{      \n    vec2 uv = fragCoord/iResolution.xy; //Normalized pixel coordinates (from 0 to 1)  \n    float rows = 25.0; //The amount of rows displayed\n\tfloat columns = 40.0; //The amount of columns displayed\n\tvec4 black = vec4(0.0,0.0,0.0,1.0); //Color 1\n    vec4 white = vec4(1.0,1.0,1.0,1.0); //Color 2\n\tvec4 composite; //Name of the mixed color\n    float xHalf = (iResolution.y / rows); //\n    float yHalf = (iResolution.x / columns);\n    float squareLength; //Universal length of square\n    float boardWidth; //Universal Width of checkerboard\n   \tfloat boardHeight; //Universal Width of checkerboard\n    \n    float onOff = step(xHalf, yHalf); //A bool that determines whether or not a square is on or off the screen\n    \n    squareLength = (xHalf * onOff) + (yHalf * (1.0 - onOff)); //Finding the length of square based off of whether it's within the screen or not\n    \n    boardWidth = squareLength * columns; //Finding the length of the whole checkerboard\n    \n    boardHeight = squareLength * rows; //Finding the height of the whole drawn checkerboard\n    \n    uv.y = uv.y * rows;//Truncates the checkerboard\n    uv.x = uv.x * columns;//Truncates the checkerboard\n    \n    uv.y *= iResolution.y / iResolution.x * columns / rows * (1.0 - onOff) + onOff;\n    uv.x *= iResolution.x / iResolution.y * rows / columns * onOff + (1.0 - onOff);\n    \n    \n   \tuv = mod(floor(uv), 2.0);\n    \n    \n    float colorTile = step(uv.y,0.0) * step(uv.x,0.0) + (1.0-step(uv.y,0.0)) * (1.0-step(uv.x,0.0));\n    \n    white.a *= colorTile * step(fragCoord.x, boardWidth) * step(fragCoord.y, boardHeight);\n    \n    //Mixes the colors together\n    composite = mix(black, white, white.a);\n\n    fragColor = composite;\n}","name":"Image","description":"","type":"image"}]}