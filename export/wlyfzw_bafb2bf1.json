{"ver":"0.1","info":{"id":"wlyfzw","date":"1614069895","viewed":331,"name":"blur pyramid 2 - distance field","username":"FabriceNeyret2","description":"Paint, and display the weighted sum of MIPmaps. Curves = local grey level.\n\nWIP - test ( power-of-2 version for correct MIPmaps ).\nFinal goal is auto-built of distance field using MIPmap.\n","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["distancefield","sdf","bloom","pyramid","gpmipmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// CubeMap version of https://www.shadertoy.com/view/wtyfRw\n// CubeMap management from https://shadertoy.com/view/3tGfzW\n\nvoid mainImage( out vec4 O, vec2 u )\n{ \n    vec2 U = map( u , R );\n\n#define S(v)     smoothstep( 1.5, 0., abs(v)/fwidth(v) )\n#define sqr(v) ( (v)*(v) )\n    O-=O;\n    float L = 10.; // floor(log2(iChannelResolution[0].y));\n    for (float l = 0.; l < L; l++ )\n        O +=    (l+1.)   * T( U, l );\n     // O += sqr(l+1.)/L * T( U, l );\n         \n // O /= L;\n // O = .5+.5*sin(10.*O);\n    float  x = fract(u.x/40.),\n           y = fract(u.y/40.),\n          vx = S( x - O.x/L ),\n          vy = S( y - O.x/L ),\n           g = vx+vy<.5 ? S( min( x, y) ) : 0.; \n    O = mix( min(O,1.),  vec4(vy,vx,g,0), max(max(vx,vy),g) );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R              iResolution.xy\n#define T(U,l)         textureLod( iChannel0, vec3( 2.*(U)/1024. -1., 1 ).xzy , l+0. )\n//#define D(C,r)       smoothstep( 1.5, 0., length(C-U) - r )           // antialiased disk\n#define keyToggle(a) ( texelFetch(iChannel3,ivec2(a,2),0).x > 0.)\n#define map(U,R)     ( 1024.*( .56* ( U - .5*R ) / R.y + .5 ) )","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"void mainCubemap( out vec4 O, vec2 U, vec3 o, vec3 D )\n{\n    if (D.y > max(abs(D.x),abs(D.z))) {       // --- side 1 -------------\n    \n        vec2 s = iChannelResolution[1].xy,    // screen resolution\n             M = map( iMouse.xy , s );\n\n        O = max( T(U,) , smoothstep( 3.,0., length(U-M) ) );\n        \n        U = U/1024.*2.-1.;\n     // if ( min(U.x,U.y) > 0. ) O = .02*texture(iChannel2,U);  // cheap blur\n     // if ( min(U.x,U.y) > 0. ) O = .3*abs(texture(iChannel2,U) - texture(iChannel2,U,1.));\n     }\n}\n\n","name":"Cube A","description":"","type":"cubemap"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// guess what is the purpose of this buffer ;-)\nvoid mainImage( out vec4 O, vec2 U ) {}","name":"Buffer A","description":"","type":"buffer"}]}