{"ver":"0.1","info":{"id":"XXfSRS","date":"1709630298","viewed":144,"name":"Rounded rectangle w/ aa & shadow","username":"chapatt","description":"signed-distance function rounded rectangle (https://iquilezles.org/articles/distfunctions) with antialiasing (https://mortoray.com/antialiasing-with-a-signed-distance-field/) and drop shadow","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","antialias","roundedrectangle","dropshadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfRoundedRectangle(vec2 p, vec2 b, float r) {\n    vec2 q = abs(p) - b + r;\n    return min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r;\n}\n\nfloat cornerRadius = 40.0;\nfloat blurRadius = 80.0;\nvec3 boxPaint = vec3(0.0, 0.7, 0.7);\nvec3 shadowPaint = vec3(1.0, 0.3, 0.0);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 center = iResolution.xy / 2.0;\n    vec2 size = (iResolution.xy / 2.0) - blurRadius;\n\n    float boxDistance = sdfRoundedRectangle(fragCoord.xy - center, size, cornerRadius);\n\n    float boxAlpha = clamp(0.5 - boxDistance, 0.0, 1.0);\n    float shadowAlpha = 1.0 - smoothstep(-blurRadius, blurRadius, boxDistance);\n\n    vec3 boxColor = boxPaint * boxAlpha;\n    vec3 shadowColor = shadowPaint * shadowAlpha;\n\n    vec3 outRgb = boxColor + (shadowColor * (1.0 - boxAlpha));\n    float outAlpha = boxAlpha + (shadowAlpha * (1.0 - boxAlpha));\n    // Just use outRgb and outAlpha for premultiplied output\n    fragColor = vec4(outRgb + (vec3(1.0) * (1.0 - outAlpha)), 1.0);\n}","name":"Image","description":"","type":"image"}]}