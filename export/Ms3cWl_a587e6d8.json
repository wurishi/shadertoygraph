{"ver":"0.1","info":{"id":"Ms3cWl","date":"1520525288","viewed":166,"name":"AAed Circle & Square (+rotation)","username":"kim_schmider","description":"Drawing a circle and a square without using if-statements, thus achieving Anti-Aliasing; including rotation of square (controlled by `t`)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simple","circle","antialiasing","square","rotation","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Center = vec2(0, 0)\n    vec2 uv = fragCoord / iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n    /* const */ vec3 bgCol = .5 + .5 * sin(iDate.w + uv.xyx + vec3(0,2,4));\n    vec3 col;\n    \n    float r = .6;\n    vec2 boxpos = vec2(.8, 0);\n    vec2 circlepos = vec2(-.8, 0);\n    \n    vec2 box = uv - boxpos;\n    vec2 circle = uv - circlepos;\n    float t = atan(box.y / box.x) + 3.14159265 / 4.;\n    box = vec2(length(box) * cos(t), length(box) * sin(t));\n    \n    col = mix(vec3(1), vec3(bgCol), 1. - smoothstep(r, r + .01, abs(box.x) + abs(box.y)));\n\n    r = .4;\n    col *= mix(vec3(1), bgCol, 1. - smoothstep(r, r + .01, length(circle)));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}