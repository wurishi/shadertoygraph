{"ver":"0.1","info":{"id":"wt2czm","date":"1594046172","viewed":372,"name":"rotate box","username":"FabriceNeyret2","description":"rotation of a box around the center.\nMouse control rotation.\ngreen dot = box intersection with plane Z=0.","likes":7,"published":3,"flags":16,"usePreview":0,"tags":["mm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// extracted from https://shadertoy.com/view/WtScRm\n\n\n#define rot(a) mat2(cos(a+vec4(0,-1.5708,1.5708,0)));\n#define rotBBox()                                           \\\n    X0.yz *= rot(a0); X1.yz *= rot(a0); X2.yz *= rot(a0);   \\\n    X0.xz *= rot(a1); X1.xz *= rot(a1); X2.xz *= rot(a1);   \\\n    X0.xy *= rot(a2); X1.xy *= rot(a2); X2.xy *= rot(a2);\n\n  #define proj(P) ( (P).xy )                      // flat projection\n//#define proj(P) ( 1.5* (P).xy / (2.+(P).z) )    // perspective projection\n\n#define S(d) smoothstep( 1.5/R.y, 0., d )     // --- draw antialiased\nfloat line(vec2 p, vec3 A,vec3 B, out vec3 Z0) {      // --- segment with disc ends: seamless distance to segment\n    float l = -A.z/(B-A).z;                           // hack: also show intersection with z=0.\n    Z0 = l>=0. && l<=1. ? mix(A,B,l) : vec3(0);\n    vec2 a = proj(A), b = proj(B);                    // 3D projection\n    p -= a, b -= a;                                   // --- classical 2D draw part\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);   // proj coord on line\n    Z0.z = mix(A.z,B.z,h);                            // export current depth\n    return length(p - b * h);                         // dist to segment\n}\nvec3 z; float _d;\n#define line(u,a,b) ( _d = line(u,a,b,z), vec4(_d,z) )// hack to carry the z=0 plane information\n#define Min(v0,v1)  ( v0.x < v1.x ? v0 : v1 ) \n\n#define spot(P)  S( length( proj(P) - U ) -.01 )      // draw dot\n\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy,\n          U = u/R.y;\n    \n    vec3   P = vec3(1.1, .3, -.2),                   // bounding box at P, axis X0,X1,X2\n          X0 = vec3(.3,0,0), X1 = vec3(0,.5,0) , X2 = vec3(0,0,.4);\n    vec2  M = iMouse.xy==vec2(0) ? vec2(.5,.3) : (2.*iMouse.xy/R-1.)*3.14;\n    float a0 = .2+iTime, a1 = M.y, a2 = M.x;        // Bbox rotation\n\n    vec3 C = P + (X0+X1+X2)/2.;                      // center of the box\n    rotBBox();                                       // Bbox rotation\n    P = C - (X0+X1+X2)/2.;                           // recomputed corner\n    \n    vec4 d; d.x = 1e5;\n    vec3 p = P;\n    d = Min ( Min ( line(U,p,p+X0),  line(U,p+X0,p+X0+X1) ), // draw box\n              Min ( line(U,p,p+X1),  line(U,p+X1,p+X0+X1) ) \n            );\n    p += X2;\n    d = Min( d,\n             Min ( Min ( line(U,p,p+X0),  line(U,p+X0,p+X0+X1) ),\n                   Min ( line(U,p,p+X1),  line(U,p+X1,p+X0+X1) ) \n          )      );\n    p = P;\n    d = Min( d,\n             Min ( Min ( line(U,p+X0,p+X0+X2),  line(U,p,p+X2) ),\n                   Min ( line(U,p+X1,p+X1+X2),  line(U,p+X0+X1,p+X0+X1+X2) ) \n          )      );\n    float z = .7-d.w;                           // thickness/grey from depth\n    O = vec4( S(d.x/(z*3.)) * z);                            // draw the line\n    if (length(d.yzw)!=0.) O.g +=  spot( vec3(d.yz,0.) );    // green spot at intersection with Z=0 plane\n}","name":"Image","description":"","type":"image"}]}