{"ver":"0.1","info":{"id":"ms3BDj","date":"1697644000","viewed":20,"name":"Damaged VCR Shader","username":"Caballo","description":"lab-04 color","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9833, 78.233))) * 43758.5453);\n}\n\nfloat wave(float x, float freq, float amplitude) {\n    return (sin(x * freq * 2.0 * 3.14159) >= 0.0 ? amplitude : -amplitude);\n}\n\nfloat glitchEffect(vec2 uv, float t) {\n    float glitchRange = tan(t * 0.5);\n    if (abs(uv.y - glitchRange) < 0.08) {\n        return wave(uv.y, 190.0, 2.0) * sin(uv.y) + (0.5 * rand(uv) - 0.5) * 0.1;\n    }\n    return 0.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 y_b = vec2(0.0, 0.15) + tan(iTime);\n    if ((uv.y < y_b[1]) && (uv.y > y_b[0])) {\n        uv.x *= tan(iTime) * uv.y;\n    }\n    \n    uv.x += glitchEffect(uv, iTime);\n    \n    vec2 offset1 = vec2(0.04, 0.0);\n    vec2 offset2 = vec2(0.02, 0.0);\n    vec2 offset3 = vec2(0.03, 0.0);\n\n    vec3 col = vec3(\n        texture(iChannel0, uv + offset1).r,\n        texture(iChannel0, uv + offset2).g,\n        texture(iChannel0, uv + offset3).b\n    );\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}