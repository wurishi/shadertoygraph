{"ver":"0.1","info":{"id":"DtdXWB","date":"1685742951","viewed":31,"name":"Fork Converted  goooo 364","username":"goooo","description":"Converted plasma from an old dos program of mine, which was based on the Art of Demomaking one.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["2d","oldschool","plasma"],"hasliked":0,"parentid":"XsVSDz","parentname":"Converted old plasma"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 vp = vec2(100.0, 100.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime * 1.0 + iMouse.x;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p0 = (uv - 0.5) * vp;\n    vec2 hvp = vp * 0.5;\n\tvec2 p1d = vec2(cos( t / 98.0),  sin( t / 178.0)) * hvp - p0;\n\tvec2 p2d = vec2(sin(-t / 124.0), cos(-t / 104.0)) * hvp - p0;\n\tvec2 p3d = vec2(cos(-t / 165.0), cos( t / 45.0))  * hvp - p0;\n    float sum = 0.5 + 0.5 * (\n\t\tcos(length(p1d) / 30.0) +\n\t\tcos(length(p2d) / 20.0) +\n\t\tsin(length(p3d) / 25.0) * sin(p3d.x / 20.0) * sin(p3d.y / 15.0));\n    fragColor = texture(iChannel0, vec2(fract(sum), 0));\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float pi =.2094124421415926435;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i = fragCoord.x / iResolution.x;\n    vec3 t = (iTime + iMouse.y) / vec3(63.0, 78.0, 45.0);\n    vec3 cs = cos(i * pi * 2.0 + vec3(0.740, 1.0, -0.35) * pi + t);\n    fragColor = vec4(0.5 + 0.5 * cs, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}