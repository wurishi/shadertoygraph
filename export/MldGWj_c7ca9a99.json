{"ver":"0.1","info":{"id":"MldGWj","date":"1471772326","viewed":208,"name":"Voronoi procedural","username":"AsGreyWolf","description":"Voronoi texture procedural generation","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","voronoi","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nconst int max = 1024;\nvec2 randV(int i){\n    vec2 co1 = vec2(float(i)/float(max), 0.0);\n    vec2 co2 = vec2(co1.x, 0.5);\n    return vec2(rand(co1), rand(co2));\n}\nfloat coeff(){\n    float t = iTime/5.0;\n    t -= floor(t);\n    t *= 2.0;\n    if(t<=1.0)\n        return t;\n    return 2.0-t;\n}\nvec2 findNearest(vec2 c, int block){\n\tfloat mindist = -1.0;\n    vec2 nearest;\n    for(int i=0;i<=max;i++){\n        if(i>block) break;\n        vec2 v = randV(i);\n        float dist = distance(v, c);\n        if(mindist < 0.0 || mindist > dist){\n        \tmindist = dist;\n            nearest = v;\n        }\n    }\n    return nearest;\n}\nfloat findBorders(vec2 c, int block){\n\tfloat mindist = -1.0;\n    float mindist2 = -1.0;\n    for(int i=0;i<=max;i++){\n        if(i>block) break;\n        vec2 v = randV(i);\n        float dist = distance(v, c);\n        if(mindist < 0.0 || mindist > dist){\n            mindist2 = mindist;\n        \tmindist = dist;\n        }\n    }\n    return (mindist2-mindist)<0.002?0.0:1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y /= iResolution.x/iResolution.y;\n    float v = sin(iTime*M_PI)>0.0?\n        rand(findNearest(uv,int(coeff()*float(max)))):\n    \tfindBorders(uv,int(coeff()*float(max)));\n\tfragColor = vec4(v,v,v,1.0);\n}","name":"Image","description":"","type":"image"}]}