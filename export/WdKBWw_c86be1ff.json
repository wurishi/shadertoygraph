{"ver":"0.1","info":{"id":"WdKBWw","date":"1607285539","viewed":71,"name":"Looping morphing animation","username":"carl_vbn","description":"A rotating square becoming a holdout circle. A simple shader but I really like it. It could be used as screensaver or something.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","colors","loop","morphing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotateUV(vec2 uv, float angle) { \n    float u = cos(angle) * uv.x + -sin(angle) * uv.y; \n    float v = sin(angle) * uv.x + cos(angle) * uv.y; \n    \n    return vec2(u,v); \n} \n\n  \n\nvec3 hsv2rgb(vec3 c) { \n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0); \n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www); \n\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y); \n\n} \n\n  \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{ \n    vec2 uv = (fragCoord/iResolution.xy * 2.0 - 1.0) * vec2(iResolution.x/iResolution.y, 1.0); \n    uv = rotateUV(uv, iTime); \n\n    float squaritude = sin(iTime) * 0.5 + 0.5; \n    float cd = 1.0/length(uv); \n    float sqd = abs(uv.x) + abs(uv.y); \n    \n\n    if (cd+(sqd-cd)*squaritude < 1.0) \n        fragColor = vec4(hsv2rgb(vec3(squaritude,1.0,1.0)), 1.0); \n    else \n        fragColor = vec4(0.0); \n\n} ","name":"Image","description":"","type":"image"}]}