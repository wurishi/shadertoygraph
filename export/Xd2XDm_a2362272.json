{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// srtuss, 2014\n// A 2D effect based on repetition of boxes and and motion-blur.\n\n#define pi2 3.1415926535897932384626433832795\n\nfloat tri(float x, float s)\n{\n    return (abs(fract(x / s) - 0.5) - 0.25) * s;\n}\n\nfloat hash(float x)\n{\n    return fract(sin(x * 171.2972) * 18267.978 + 31.287);\n}\n\nvec3 pix(vec2 p, float t, float s)\n{\n    s += floor(t * 0.25);\n    float scl = (hash(s + 30.0) * 4.0);\n    scl += sin(t * 2.0) * 0.25 + sin(t) * 0.5;\n    t *= 3.0;\n    vec2 pol = vec2(atan(p.y, p.x), length(p));\n    float v;\n    float id = floor(pol.y * 2.0 * scl);\n    pol.x += t * (hash(id + s) * 2.0 - 1.0) * 0.4;\n    float si = hash(id + s * 2.0);\n    float rp = floor(hash(id + s * 4.0) * 5.0 + 4.0);\n    v = (abs(tri(pol.x, pi2 / rp)) - si * 0.1) * pol.y;\n    v = max(v, abs(tri(pol.y, 1.0 / scl)) - (1.0 - si) * 0.11);\n    v = smoothstep(0.01, 0.0, v);\n    return vec3(v);\n}\n\nvec3 pix2(vec2 p, float t, float s)\n{\n    return clamp(pix(p, t, s) - pix(p, t, s + 8.0) + pix(p * 0.1, t, s + 80.0) * 0.2, vec3(0.0), vec3(1.0));\n}\n\nvec2 hash2(in vec2 p)\n{\n\treturn fract(1965.5786 * vec2(sin(p.x * 591.32 + p.y * 154.077), cos(p.x * 391.32 + p.y * 49.077)));\n}\n\n#define globaltime (iTime - 2.555)\n\nvec3 blur(vec2 p)\n{\n    vec3 ite = vec3(0.0);\n    for(int i = 0; i < 20; i ++)\n    {\n        float tc = 0.15;\n        ite += pix2(p, globaltime * 3.0 + (hash2(p + float(i)) - 0.5).x * tc, 5.0);\n    }\n    ite /= 20.0;\n    ite += exp(fract(globaltime * 0.25 * 6.0) * -40.0) * 2.0;\n    return ite;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    uv += (vec2(hash(globaltime), hash(globaltime + 9.999)) - 0.5) * 0.03;\n    vec3 c = vec3(blur(uv + vec2(0.005, 0.0)).x, blur(uv + vec2(0.0, 0.005)).y, blur(uv).z);\n    c = pow(c, vec3(0.4, 0.6, 1.0) * 2.0) * 1.5;\n    c *= exp(length(uv) * -1.0) * 2.5;\n    c = pow(c, vec3(1.0 / 2.2));\n\tfragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xd2XDm","date":"1412781947","viewed":5418,"name":"The Eye","username":"srtuss","description":"Another interesting, trippy 2D effect, with a cool retro colorset.","likes":133,"published":1,"flags":0,"usePreview":0,"tags":["2d","blur","motion","polarcoordinates"],"hasliked":0,"parentid":"","parentname":""}}