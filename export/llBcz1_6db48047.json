{"ver":"0.1","info":{"id":"llBcz1","date":"1507485075","viewed":114,"name":"Tommy Reveal","username":"TommyMann","description":"It does a thing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sharpenandblurreveal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//radius\nfloat radius = 0.1;\n//matrices\nmat3 blur = mat3(\n0.111, 0.111, 0.111,\n0.111, 0.111, 0.111, \n0.111, 0.111, 0.111 \n);\nmat3 sharpen = mat3(\n0., -1, 0.0, \n-1, 5, -1, \n0., -1, 0.0 \n);\nmat3 leftSobel = mat3(\n 1, 2, 1,\t\n 0, 0, 0,\t\n  -1, -2, -1   \n);\n\nmat3 outline = mat3(\n -1, -1, -1,\n -1, 8, -1,\n  -1, -1, -1   \n);\n\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord, int num){\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n    if(num == 0)\n\t\treturn texture(iChannel0, uv).xyz;\n    else if(num == 1)\n        return texture(iChannel1, uv).xyz;\n}\nvec3 aFilter(in vec2 fragCoord, mat3 kernel, int num){\n\tvec3 sum;\n\n\tint n = -1;\n\tfor(int i = 0; i < 3; i++, n++){\n\t\tint m = -1;\n\t\tfor(int j = 0; j < 3; j++, m++){\n\t\t\tsum +=  aSample(n, m, fragCoord, num) * kernel[i][j]; \n\t\t}\n\t}\n\treturn sum; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 fc = fragCoord.xy;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float aspectRatio = iResolution.y/iResolution.x;\n    uv.y *= aspectRatio;\n    \n    vec4 color = vec4(aFilter(fc, sharpen, 0), 1.0);\n    vec2 pos = iMouse.xy / iResolution.xy;\n    pos.y *= aspectRatio;\n    float image = step(length(pos - uv), radius);\n    color *= image;\n    \n \tvec4 cover = vec4(aFilter(fc, blur, 1), 1.0);\n    //vec4 cover = vec4(aFilter(fc, outline, 1), 1.0);\n    //vec4 cover = vec4(aFilter(fc, leftSobel, 1), 1.0);\n    \n    vec4 composition = mix(cover, color, color.a);\n    \n    fragColor = composition;\n}","name":"Image","description":"","type":"image"}]}