{"ver":"0.1","info":{"id":"MfVXWd","date":"1715945462","viewed":71,"name":"plezier glass","username":"akr51","description":"Just playing around","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette(vec3 a, vec3 b, vec3 c, vec3 d, float t)\n{\n\n\n    return a + b * cos((c + d * t) * 3.1415 * 2.0);\n\n\n}\n\n\n\nmat2 r2(float t)\n{\n\n\n    float c = cos(t);\n    float s = sin(t);\n    return mat2(c, -s, s, c);\n    \n\n}\n\n\nvoid mainImage(out vec4 c_out, in vec2 u)\n{\n\n    vec2 rr = iResolution.xy, uv = (u + u - rr) / rr.y;\n    \n    float t = mod(iTime, 101.0) * 0.4;\n    vec2 uvv = fract(uv * 2.0) - 0.5;\n    vec3 cl = vec3(0.0);\n    \n    vec2 q = vec2(length(uv), atan(uv.y, uv.x));\n    q.y = abs(q.y);\n    \n    \n    q = fract(q * 3.0 + t * 2.0); \n    \n    \n    vec2 v1 = vec2(sin(t), 0.0);\n    vec2 v3 = vec2(cos(t), 0.0);\n    vec2 v2 = vec2(0.0, cos(t));\n    vec2 v4 = vec2(cos(q.x), sin(q.y));\n    \n    float r = length(v1 - uv + v3);\n    float s = length(v2 - uv + v4);\n    float g = sin(r * 3.0) * cos(s * 2.0);\n    float w = sin(s * 5.0 + t) - cos(r * 7.0 + t);\n    float v = atan(w + g * s + v3.x);\n    \n    vec3 a = vec3(1.0, 1.0, 1.0);\n    vec3 b = vec3(0.6, 0.6, 0.1);\n    vec3 c = vec3(0.2, 0.4, 0.7);\n    vec3 d = vec3(1.0, 1.0, 1.0);\n    \n    cl = palette(a, b, c, d, v);\n    cl = pow(cl, vec3(sin(length(uv + uvv) + t)) * 1.3);\n    \n    c_out = vec4(cl, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}