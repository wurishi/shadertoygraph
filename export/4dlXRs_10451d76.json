{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"mat2 m = mat2(0.8, 0.6, -0.6, 0.8);\n\nfloat noise( in vec2 x )\n{\n\treturn sin(1.5*x.x)*sin(1.5*x.y);\n}\n\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f/0.9375;\n}\n\nfloat pattern( in vec2 p, out vec2 q, out vec2 r )\n  {\n      q.x = fbm( p * sin(iTime/30.0) + vec2(0.0,0.0) );\n      q.y = fbm( p + vec2(5.2,1.3) );\n\n      r.x = fbm( p * cos(iTime / 4.0) + 4.0*q + vec2(1.7,9.2) );\n      r.y = fbm( p + 4.0*q + vec2(8.3,2.8) );\n\n      return fbm( p + 4.0*r );\n  }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\tvec2 q;\n\tvec2 r;\n\t\n\tfloat c = pattern(p*3.5, q, r);\n\tvec3 col = vec3(1.0);\n\n\tcol = mix(col, vec3(0.8, 0.2, 0.9), length(q)/1.5);\n\tcol = mix(col, vec3(0.3, 0.4, 0.55), length(r));\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dlXRs","date":"1405824417","viewed":262,"name":"Pretty Warped","username":"davertron","description":"Based off inigo's awesome warped tutorial here: https://iquilezles.org/articles/warp/warp.htm","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["warped"],"hasliked":0,"parentid":"","parentname":""}}