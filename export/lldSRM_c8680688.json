{"ver":"0.1","info":{"id":"lldSRM","date":"1478797469","viewed":440,"name":"FlamingThing","username":"dila","description":"Kali-inspired twisted sculpture. Oh, and the flames? Just some glow taken from the last map() evaluation.","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x)\n{\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nvec3 mpos = vec3(0.0);\nfloat mid = 0.0;\n\nfloat map(vec3 p)\n{\n    vec3 q = p;\n    \n    q.y += sin(q.z * 0.125) * 3.0;\n    \n    q.x -= (sin(q.z * 0.25) * 0.5 + 0.5) * 3.0;\n    \n    q.xy *= rot(iTime);\n    \n    float u = 0.125;\n    q.z = (fract(q.z / u) - 0.5) * u;\n    \n    vec3 s = vec3(1.0, 0.125, 0.25);\n    \n    const int n = 4;\n    for (int i = 0; i < n; ++i) {\n        q.y = abs(q.y) - 0.5;\n        q.xy *= rot(3.14159 * 0.125);\n        q = abs(q) - 0.125;\n        q.xy *= rot(p.z * 0.5);\n    }\n    \n    mpos = p;\n    mid = 0.0;\n    float d = 8.0 - p.x;\n    \n    float k = sdBox(q, s);\n    \n    if (k < d) {\n    \td = k;\n        mpos = q * 10.0;\n        mid = 1.0;\n    }\n    \n    return d;\n}\n\nvec3 normal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n\tfloat t = 0.0;\n    for (int i = 0; i < 40; ++i) {\n\t\tt += map(o + r * t) * 0.7;\n    }\n    return t;\n}\n\nvec3 texturef(sampler2D channel, vec3 p)\n{\n    vec3 ta = texture(channel, p.xy).xyz;\n    vec3 tb = texture(channel, p.xz).xyz;\n    vec3 tc = texture(channel, p.zy).xyz;\n    return (ta * ta + tb * tb + tc * tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 o = vec3(-9.0, 0.0, iTime * 10.0);\n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    r.xy *= rot(sin(iTime * 0.25) * 0.5);\n    r.xz *= rot(3.14159 * 0.5);\n    \n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    vec3 sn = normal(w);\n    float fd = map(w);\n    float ao = map(w + sn * 1.2);\n    \n    vec3 lcol1 = vec3(1.0, 0.5, 0.25) * 2.0;\n    vec3 lcol2 = vec3(0.5, 1.0, 1.0);\n    \n    vec3 tex = vec3(0.0);\n    if (mid == 0.0) {\n    \ttex = texture(iChannel0, mpos.yz * 0.03).xyz;\n        tex *= tex;\n    } else {\n        tex = texturef(iChannel1, mpos * 0.05);\n        tex *= vec3(1.0, 0.5, 0.25);\n    }\n\n    vec3 lpos = o += vec3(-1.0, 8.0, -2.0);\n    vec3 ldel = w - lpos;\n    float ldist = length(ldel);\n    ldel /= ldist;\n    float lt = trace(lpos + sn * 0.5, ldel);\n    float lm = max(dot(ldel, -sn), 0.0);\n    lm /= (1.0 + ldist * ldist * 0.001);\n    if (lt < ldist) {\n        lm *= 0.25;\n    }\n    \n    if (mid == 1.0) {\n        vec3 ref = reflect(ldel, sn);\n    \tfloat spec = max(dot(r, -ref), 0.0);\n    \tspec = pow(spec, 2.0);\n        lcol1 *= 1.0 + spec;\n    \tlcol2 *= 1.0 + spec;\n    }\n    \n    vec3 lit = vec3(lm) * lcol2 + lcol1 * (sn.y * 0.5 + 0.5);\n    \n    float edge = 1.0 - 1.0 / (1.0 + fd * 100.0);\n    \n    vec3 fc = mix(lit * tex, lcol1, edge) * ao;\n    \n\tfragColor = vec4(sqrt(fc), 1.0);\n}","name":"Image","description":"","type":"image"}]}