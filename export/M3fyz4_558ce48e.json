{"ver":"0.1","info":{"id":"M3fyz4","date":"1725901751","viewed":24,"name":"Submarine model - Nathaniel","username":"nCavallaro","description":"This is a submarine. It is under water.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["box","capsule"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n  vec3 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h ) - r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.yy;\n    \n    uv.x = uv.x - 0.5*(iResolution.x/iResolution.y);\n    uv.y = uv.y - 0.5;\n    \n    vec2 Mouseuv = iMouse.xy/iResolution.yy;\n\n    //background color/texture\n    vec3 col = vec3(0.0, 0.2, 0.55) + texture(iChannel0, uv - iTime/4.0).rrr * 0.15;\n   \n    \n    float t = 0.0;\n    float tdx = 0.0;\n    float tdy = 0.0;\n    \n    float d = 0.0001f;\n    \n    //box var\n    vec3 boxPos = vec3(9.9, -9.85,40.0);\n    vec3 boxDim = vec3(0.12, 0.08, 0.065);\n    \n    //capsule var\n    vec3 cPos = vec3(10.5, -10.0,40.0);\n    vec3 cA = vec3(-1.0, 0.0, 0.0);\n    vec3 cB = vec3(0.0, 0.0, 0.09);\n    float rad = 0.15;\n    \n    //tail var\n    vec3 box2Pos = vec3(10.6, -9.975,40.05);\n    vec3 box2Dim = vec3(0.075, 0.025, 0.175);\n    \n    vec3 box3Dim = vec3(0.075, 0.175, 0.025);\n    \n    vec3 pt = vec3(uv.x, uv.y, 0.0);\n    vec3 ptdx = vec3(uv.x+d, uv.y, 0.0);\n    vec3 ptdy = vec3(uv.x, uv.y+d, 0.0);\n    vec3 dir = normalize(vec3(0.25, -0.25, 1.0));\n    \n    vec3 lightPos = vec3(Mouseuv, 0.0);\n    \n\n    for( int i = 0; i < 50; i++){\n\n        vec3 pos = pt + dir * t;\n        vec3 posdx = ptdx + dir * tdx;\n        vec3 posdy = ptdy + dir * tdy;\n            \n\n        float dist = min(min(sdBox(pos - boxPos, boxDim), \n                                   sdCapsule(pos - cPos, cA, cB, rad)),\n                         min(sdBox(pos - box2Pos, box2Dim), \n                             sdBox(pos - box2Pos, box3Dim)));\n        float distdx = min(min(sdBox(posdx - boxPos, boxDim), \n                                     sdCapsule(posdx - cPos, cA, cB, rad)),\n                           min(sdBox(posdx - box2Pos, box2Dim), \n                               sdBox(posdx - box2Pos, box3Dim)));\n        float distdy = min(min(sdBox(posdy - boxPos, boxDim), \n                                     sdCapsule(posdy - cPos, cA, cB, rad)),\n                           min(sdBox(posdy - box2Pos, box2Dim), \n                               sdBox(posdy - box2Pos, box3Dim)));\n              \n        if(dist < 0.00001 && distdx < 0.00001 && distdy < 0.00001){ \n            \n            vec3 normal = normalize(cross(\n                    normalize(pos - posdx), \n                    normalize(posdy - pos)));\n            \n            //pattern on 3D shape\n            col = vec3(0.7, 0.7, 0.4) * dot(normal, normalize(lightPos - pos));\n            col += texture(iChannel1, uv - iTime/5.0).brr * 0.35;\n            col += texture(iChannel0, uv + iTime/10.0).brr * 0.25;\n            break; \n            \n        }\n        t += dist;\n        tdx += distdx;\n        tdy += distdy;\n    }\n    // add a noise pattern\n    col += texture(iChannel1, uv - iTime/10.0).brr * 0.5;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}