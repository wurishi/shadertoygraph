{"ver":"0.1","info":{"id":"WsKcRR","date":"1602117830","viewed":129,"name":"Sunset on a dithering ocean","username":"Ezra_Szanton","description":"I got a cool effect from using the the fractional portion of a pixel position to offset the sampling of an image, so I ran with it!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sunset","image","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat circle(vec2 uv, vec2 center, float max, float min)\n{\n    return smoothstep(max, min, length(uv - center));\n}\n\nvec3 tex(vec2 uv)\n{\n    vec3 color = vec3(0.1, 0.8, 0.8);\n    vec3 col = color * circle(uv, vec2(0.), 0.4, 0.39);\n    \n    col = mix(col, vec3(1.) - color, circle(uv, vec2(0., 0.3), 0.5, 0.49));\n    col = mix(col, vec3(0., 0., 0.), smoothstep(0.3, 0.31, uv.y));\n    \n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    vec2 pixel = floor( uv * 200. );\n    vec2 frac = fract( uv * 190. - 0.01);\n   \n    vec3 col = tex(uv + uv * frac * 20.);\n\n    vec3 top = vec3(0.07, 0.05, 0.1);\n    vec3 bottom = vec3(0.95, 0.2, uv.y + 0.5);\n    \n    if(col.r < 0.1 && col.g < 0.1 && col.b < 0.1){\n    \tcol += mix(top, bottom, 0.5);\n        col -= vec3 (smoothstep(0.01, -0.01, uv.y)) * 0.4;\n        col += vec3 (0., 0., smoothstep(0.01, -0.01, uv.y)) * 0.4;\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}