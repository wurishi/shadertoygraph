{"ver":"0.1","info":{"id":"mt3XD8","date":"1685328874","viewed":82,"name":"DB32 palette dither","username":"Slagh","description":"Hilarity hack job :D","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["video","dither","palette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://lospec.com/palette-list/dawnbringer-32\nvec3 db32(vec3 c)\n{\n    vec3 db32palette[32]=vec3[](\n        vec3(0,0,0),\n        vec3(0.1333,0.1255,0.2039),\n        vec3(0.2706,0.1569,0.2353),\n        vec3(0.4,0.2235,0.1922),\n        vec3(0.5608,0.3373,0.2314),\n        vec3(0.8745,0.4431,0.149),\n        vec3(0.851,0.6275,0.4),\n        vec3(0.9333,0.7647,0.6039),\n        vec3(0.9843,0.949,0.2118),\n        vec3(0.6,0.898,0.3137),\n        vec3(0.4157,0.7451,0.1882),\n        vec3(0.2157,0.5804,0.4314),\n        vec3(0.2941,0.4118,0.1843),\n        vec3(0.3216,0.2941,0.1412),\n        vec3(0.1961,0.2353,0.2235),\n        vec3(0.2471,0.2471,0.4549),\n        vec3(0.1882,0.3765,0.5098),\n        vec3(0.3569,0.4314,0.8824),\n        vec3(0.3882,0.6078,1),\n        vec3(0.3725,0.8039,0.8941),\n        vec3(0.7961,0.8588,0.9882),\n        vec3(1,1,1),\n        vec3(0.6078,0.6784,0.7176),\n        vec3(0.5176,0.4941,0.5294),\n        vec3(0.4118,0.4157,0.4157),\n        vec3(0.349,0.3373,0.3216),\n        vec3(0.4627,0.2588,0.5412),\n        vec3(0.6745,0.1961,0.1961),\n        vec3(0.851,0.3412,0.3882),\n        vec3(0.8431,0.4824,0.7294),\n        vec3(0.5608,0.5922,0.2902),\n        vec3(0.5412,0.4353,0.1882)\n    );\n    \n    vec3 best = vec3(9,9,9);\n    float diff = 9999.0;\n    \n    for (int i = 0; i < 32; ++i)\n    {\n        vec3 candidate = db32palette[i];\n//        float thisdiff = length(db32palette[i] - c);\n        float thisdiff = dot(abs(db32palette[i] - c), vec3(0.3,0.59,0.11));\n        if (thisdiff < diff)\n        {\n            diff = thisdiff;\n            best = candidate;\n        }\n    }\n    \n    return best;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Quantize uv\n    vec2 quant = vec2(640.0, 480.0);\n    uv = floor(uv * quant);\n    vec2 odds = mod(uv,vec2(2));\n    float odd = mod(odds.x + odds.y, 2.0);\n    uv /= quant;\n    \n    vec3 col = texture(iChannel0, uv).xyz;\n    \n    vec3 dcol = db32(col);\n    \n    if (odd > 0.5)\n    {\n        vec3 error = dcol - col;\n        dcol = db32(col - error);\n    }\n    \n    // Output to screen\n    fragColor = vec4(dcol,1.0);\n}","name":"Image","description":"","type":"image"}]}