{"ver":"0.1","info":{"id":"ttd3Rf","date":"1577115829","viewed":134,"name":"Butterfly","username":"pik33","description":"Another variation of sin/cos iterations. Added symmetry by using abs to calculate coordinates and used log to make the transform nonlinear. Smoothsteps converts the color field to lines on the black background","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Dancing pixels 2\" by pik33. https://shadertoy.com/view/WsV3Wt\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p=vec2(1.1)+0.1*log(abs((2.*fragCoord.xy-iResolution.xy))/max(iResolution.x,iResolution.y));\n\n\tfor(int i=1;i<40;i++)\n\t{\n\t\tvec2 newp=p;\n\t\tnewp.x+=(0.5/float(i))*pow(2.,cos(float(i)*p.y+iTime*0.2*11.0/37.0)+0.03*float(i))+2.;\t\t\n\t\tnewp.y+=(0.5/float(i))*pow(2.,sin(float(i)*p.x+iTime*0.2*17.0/41.0)+0.03*float(i+10))-2.;\n\t\tp=newp;\n\t}\n\n\tvec3 col=vec3(0.5*sin(3.0*p.x)+0.5,0.5*sin(3.0*p.y)+0.5,sin(1.3*p.x+1.7*p.y));\n    col=smoothstep(0.75,0.8,col)-smoothstep(0.8,0.85,col);\n\tfragColor=vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}