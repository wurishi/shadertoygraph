{"ver":"0.1","info":{"id":"ms2SRG","date":"1670552400","viewed":65,"name":"ChatGPTcirclered","username":"Gooop","description":"Generated by ChatGPT. (The prompt was \"Create a shadertoy shader that has a circle that alternates between white and black and has a red background\")","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aigenerated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Define the resolution of the output image\nconst vec2 resolution = vec2(800.0, 600.0);\n\n// Define the radius of the circle\nconst float radius = 100.0;\n\n// Define the period of the color switching\nconst float period = 2.0;\n\n// Define the main function of the shader\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  // Calculate the position of the current fragment in the output image\n  vec2 position = fragCoord / resolution;\n\n  // Calculate the distance of the current fragment from the center of the output image\n  float distance = length(position - vec2(0.5, 0.5));\n\n  // Calculate the color of the current fragment\n  float color = mod(iTime, period) < period / 2.0 ? 0.0 : 1.0;\n\n  // Check if the current fragment is within the circle\n  if (distance <= radius / min(resolution.x, resolution.y))\n  {\n    // Set the color of the current fragment to the circle color\n    fragColor = vec4(color, color, color, 1.0);\n  }\n  else\n  {\n    // Set the color of the current fragment to the background color\n    fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n  }\n}\n","name":"Image","description":"","type":"image"}]}