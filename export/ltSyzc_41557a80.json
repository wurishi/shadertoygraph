{"ver":"0.1","info":{"id":"ltSyzc","date":"1509501023","viewed":80,"name":"demo_01","username":"jzllove9","description":"一个简单的测试demo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*the begin of glsl ES personal*/\nconst float PI = 3.14159265;\nconst float step = 15.0;\n\nbool judge( float x, float y ){\n    float _x = sin( (x * 2.0 * PI * step) );\n    float _y = sin( (y * 2.0 * PI * step) );\n\n    if( _x * _y >= 0.0){\n        return true;\n    }\n\n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //fragColor = vec4(0.0,1.0,1.0,1.0);\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n\n    /*1.default*/\n    \n    /*\n    float color = 0.0;\n    color += sin(uv.x * cos(iTime / 15.0) * 80.0) + cos(uv.y * sin(iTime / 15.0) * 10.0);\n    color += sin(uv.y * sin(iTime / 10.0) * 40.0)  + cos(uv.x * sin(iTime / 25.0) * 40.0);\n    color += sin(uv.x * sin(iTime / 5.0) * 10.0)  + sin(uv.y * sin(iTime / 35.0) * 80.0);\n    color *= sin( iTime / 10.0 ) * 0.5;\n    fragColor = vec4(uv, 0.5 * sin( iTime * 2.0 ), 1.0);\n    fragColor = vec4( vec3( color, color * 0.5, sin( color + iTime / 3.0 ) * 0.75 ), 1.0 );\n    fragColor = vec4( vec3( color, color , color), 1.0 );\n\t*/\n    \n    /*2.chess*/\n   \t/*\n\tfragColor = vec4( 0.0, 0.0, 0.0, 1.0);\n    if( judge(uv.x, uv.y) ){\n    \tfragColor.rgb = vec3(1.0, 1.0, 1.0);\n    }\n\t*/\n    \n    /*3.others*/\n    /*\n     fragColor = vec4(0.0, 0.0, 0.0, 1.0);// 将默认颜色设置为黑色\n    //x坐标大于300的像素颜色设置为红色\n    if (uv.x > 0.3) {\n        fragColor.r = 1.0;\n    }\n\t*/\n    /*\n\tvec2 xy = fragCoord.xy; //We obtain our coordinates for the current pixel\n    xy.x = xy.x / iResolution.x; //We divide the coordinates by the screen size\n    xy.y = xy.y / iResolution.y;\n    // Now x is 0 for the leftmost pixel, and 1 for the rightmost pixel\n    vec4 solidRed = vec4(0,0.0,0.0,1.0); //This is actually black right now\n    solidRed.r = xy.x; //Set its red component to the normalized x value\n    fragColor = solidRed;\n\t*/\n    \n    /* 4.texture & black & white & outline*/  \n    \n    vec4 texColor = texture(iChannel0, uv);\n    float lum = (texColor.x + texColor.y + texColor.z) / 3.;\n    \n    /*此处处理成灰度图并输出*/\n    //fragColor = vec4(vec3(lum), 1.);\n    \n    /*此处从灰度图中抽取颜色比较深的像素并输出*/\n    float level = 0.2;\n    if( lum <= level && \n        lum <= level &&\n      \tlum <= level\n      ){\n    \ttexColor.r = sin(iTime);\n        texColor.g = cos(iTime);\n        texColor.b = 0.0;\n    }else{\n    \ttexColor.r = 1.0;\n        texColor.g = 1.0;\n        texColor.b = 1.0;\n    }\n    fragColor = texColor;\n\n    /* 5.texture & chess */\n    /*\n    vec4 texColor = texture(iChannel0, uv); //Get the pixel at xy from iChannel0\n    \n    if( judge(uv.x, uv.y) ){\n    \t//texColor.r = uv.x;\n        //texColor.g = uv.y;\n        texColor.b = uv.x;\n    }\n    \n    fragColor = texColor;//Set the screen pixel to that color\n\t*/\n    \n    /* 6.texture & time */\n    /*\n    vec2 xy = fragCoord.xy / iResolution.xy; // Condensing this into one line\n    vec4 texColor = texture(iChannel0,xy); // Get the pixel at xy from iChannel0\n    \n    texColor.r *= abs(sin(iTime));\n    texColor.g *= abs(cos(iTime));\n    texColor.b *= abs(sin(iTime) * cos(iTime));\n    \n    fragColor = texColor; // Set the screen pixel to that color\n\t*/\n    \n    /* 7.the green screen handle */\n    /*\n    vec4 texColor = texture(iChannel0, uv);\n    vec4 texColor_1 = texture(iChannel1, uv);\n    \n    float g_level = 0.6;\n    float o_level = 0.3;\n    \n    if(texColor.g >= 0.4 && texColor.r <= 0.4 && texColor.b <= 0.4){\n    \tfragColor = texColor_1;\n    }\n    else{\n   \t\tfragColor = texColor;\n    }\n    */\n    \n}","name":"Image","description":"","type":"image"}]}