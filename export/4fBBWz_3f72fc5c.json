{"ver":"0.1","info":{"id":"4fBBWz","date":"1724792477","viewed":51,"name":"layers of triangle square tiling","username":"jt","description":"Layers of triangle square tiling.\nUsed as building-block in [url=https://www.shadertoy.com/view/lcBfWR]dodecagon triangle square tiling[/url].\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["triangle","square","tiling","layered","stratified"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/4fBBWz layers of triangle square tiling, 2024 by jt\n\n// Layers of triangle square tiling.\n// Used as building-block in https://www.shadertoy.com/view/lcBfWR]dodecagon triangle square tiling\n\n// This article contains more interesting info related to triangle square tilings:\n// \"Square-triangle tilings: an infinite playground for soft matter\"\n// https://hal.science/hal-03411551v1/file/Soft_Matter_Square_Triangle_final.pdf\n// https://www.researchgate.net/publication/355260862_Square-triangle_tilings_An_infinite_playground_for_soft_matter\n\n// tags: triangle, square, tiling, layered, stratified\n\n// The MIT License\n// Copyright (c) 2024 Jakob Thomsen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfloat bounce(float t) // [0,1]\n{\n    return 1.0 - 2.0 * abs(t - floor(t) - 0.5);\n}\n\n#define S (sqrt(3.0)/2.0)\n// scale 2x2 square so it fits two squares and 4 triangles\n#define H (1.0+S)\n\nvec3 layers_of_triangle_square_tiling(vec2 p) // https://www.shadertoy.com/view/4fBBWz layers of triangle square tiling (jt)\n{\n    p.y /= H;\n    float d = floor(p.y);\n    p.y = fract(p.y);\n    p.x = fract(p.x/2.0)*2.0;\n    if(p.y*H > S) // square\n        return fract(p.x/2.0+d/4.0+0.25)*2.0 < 1.0 ? vec3(1,0,0) : vec3(0,1,0);\n    return bounce(p.x+d*0.5) > p.y*(1.0 + 1.0/S) ? vec3(0,0,1) : vec3(1,1,0);\n}\n\nvoid mainImage(out vec4 o, in vec2 I) // [-1,+1]\n{\n    vec2 R = iResolution.xy;\n    I = (I + I - R) / R.y; // thanks to Fabrice\n    I *= 2.0 * H; // zoom out\n    o = vec4(0);\n    o = vec4(layers_of_triangle_square_tiling(I),1);\n}\n","name":"Image","description":"","type":"image"}]}