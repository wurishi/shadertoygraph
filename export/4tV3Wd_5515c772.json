{"ver":"0.1","info":{"id":"4tV3Wd","date":"1477493458","viewed":1689,"name":"Cyclic cellular automaton","username":"zolozulman","description":"mouse supported\nnot the best implementation i think","likes":20,"published":1,"flags":32,"usePreview":1,"tags":["cellularautomaton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 getNeibor(vec2 neibor, vec2 fragCoord){\n    vec2 uv = (fragCoord+neibor) / iResolution.xy;\n    return texture( iChannel0, uv);\n}\n\nvec4 neiborhood(vec2 fragCoord){\n   \n    vec4 o = vec4(0,0,0,1);\n    \n    for(int i = -1;i<=1;i++){\n        for(int j = -1;j<=1;j++){\n            //if(i == 0 && j==0){\n            //    continue;\n            //}\n            o+=getNeibor(vec2(i,j),fragCoord);\n        }\n    }\n    \n   return o/9.0;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 col = neiborhood(fragCoord);\n    //col = vec4(col.r+col.g,0.1,col.b+col.r,1);\n    col *= vec4(0.,0.5,1.,1.);\n    col = vec4((col.r+col.g+col.b));\n    fragColor = col;//*vec4(uv,0.5+0.5*sin(iTime),1.0)*4.;//texture( iChannel0, uv );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/////////////////////////////////\n// Rules\n/////////////////////////////////\nvec4 getNeibor(vec2 neibor, vec2 fragCoord){\n    vec2 uv = (fragCoord+neibor) / iResolution.xy;\n    return texture( iChannel0, uv);\n}\n\nvec4 getDominant(vec4 n){\n     vec4 o = vec4(0,0,0,1);\n     if(n.x > n.y && n.x > n.z){\n         o=vec4(1,0,0,1);\n     }else if(n.y > n.x && n.y > n.z){\n         o=vec4(0,1,0,1);\n     }else if(n.z > n.x && n.z > n.y){\n         o=vec4(0,0,1,1);\n     }else{\n         if(n.x == n.y){\n            if(n.x > n.z){\n                o=vec4(1,0,0,1);\n            }else{\n                o=vec4(0,0,1,1);\n            }\n        }else if(n.y == n.z){\n            if(n.y > n.x){\n                o=vec4(0,1,0,1);\n            }else{\n                o=vec4(1,0,0,1);\n            }\n        }else if(n.z == n.x){\n            if(n.z > n.y){\n                o=vec4(0,0,1,1);\n            }else{\n                o=vec4(0,1,0,1);\n            }\n        }else{\n            o = vec4(0,0,0,1);\n        }\n     }\n     //o *= (n * 2.);\n     return o;\n}\n\nvec4 neiborhood(vec2 fragCoord){\n   \n    vec4 o = vec4(0,0,0,1);\n    \n    for(int i = -1;i<2;i++){\n        for(int j = -1;j<2;j++){\n            if(i == 0 && j==0){\n                continue;\n            }\n            o+=getDominant(getNeibor(vec2(i,j),fragCoord));\n        }\n    }\n    \n   return o;\n}\n\nvec4 rule(vec2 fragCoord){\n    vec4 n = neiborhood(fragCoord);\n    vec4 md = getDominant(getNeibor(vec2(0,0),fragCoord));\n\n    vec4 nd = md;\n    \n    if(md.x == 1.0){\n        if(n.y>2.0){\n            nd = vec4(0,1,0,1);\n        }\n    }\n    if(md.y == 1.0){\n        if(n.z>2.0){\n            nd = vec4(0,0,1,1);\n        }\n    }\n    if(md.z==1.0){\n        if(n.x>2.0){\n            nd = vec4(1,0,0,1);\n        }\n    }\n    \n    return nd;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = pow(iMouse.x-fragCoord.x,2.0) + pow(iMouse.y-fragCoord.y,2.0);\n    float max_r = pow(25.0,2.0);\n    vec4 c = vec4(0,0,0,1);\n    if(r <= max_r){\n        c = vec4(1,0,0,1);\n    }\n    vec2 uv = fragCoord.xy / iResolution.xy;    \n    if(iFrame == 0){\n        fragColor = texture( iChannel1, uv);\n    }else{\n        fragColor = c+rule(fragCoord);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}