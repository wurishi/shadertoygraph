{"ver":"0.1","info":{"id":"4lfBWr","date":"1511556485","viewed":117,"name":"Funky colors Moving Around","username":"JayemJigga","description":"messing around","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":2,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid circle(vec2 uv, vec2 center, float radius, vec3 color, inout vec3 pixel) \n{\n\tif(length(uv-center) < radius)\n    {\n\t\tpixel = color;\n\t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pulseSpeed \t= 0.15;\n    float zoomSpeed \t= 2.0;\n    float spinSpeedX \t= 1.0;\n    float spinSpeedY \t= 1.0;\n    float uvZoom\t    = 2.0;\n    \n    vec2 halfRes = 0.5 * iResolution.xy;\n    vec2 uv = vec2(fragCoord.xy - halfRes);\n\tuv *= uvZoom / iResolution.x;\n    \n    vec2 zeroToOneUV = fragCoord.xy / iResolution.xy;\n\n    float cosMult \t=  cos(iTime * spinSpeedX);\n    float sinMult \t=  sin(iTime * spinSpeedY);\n    vec2 rotatedUVs = uv * mat2(cosMult, sinMult, -sinMult, cosMult);\n        \n    fragColor        = texture(iChannel0,  rotatedUVs * sin(iTime));\n    vec4 otherColor  = texture(iChannel1,  uv * sin(iTime/zoomSpeed));\n    vec4 otherColor2 = texture(iChannel1,  uv * sin(iTime/-zoomSpeed));\n    vec4 bg          = texture(iChannel2,  uv);\n    \n\tfloat circleSpeed \t= 4.0;\n    float circleRadius \t= mix(0.2,0.6,abs(sin(iTime/circleSpeed)));\n    vec2 circlePos \t\t= vec2(mix(0.0,0.5,(sin(iTime/circleSpeed))), 0.0);\n\tvec2 circleCenter \t= uv - circlePos;\n    bool inCircle \t\t= length(circleCenter) < circleRadius;\n    \n    float circleRadius2 \t= mix(0.1,0.3,abs(sin(iTime/circleSpeed)));\n    vec2 circlePos2 \t\t= vec2(mix(0.0,0.5,(-sin(iTime/circleSpeed))), 0.0);\n\tvec2 circleCenter2 \t= uv - circlePos2;\n    bool inCircle2 \t\t= length(circleCenter2) < circleRadius2;\n    \n    \n    float xMax = iResolution.x/iResolution.y;\n\tbool withinLeftOrRight = uv.x <-0.95 || uv.x > 0.95 || zeroToOneUV.y > 0.95 || zeroToOneUV.y < 0.05; \n\t\n    if(inCircle || inCircle2 || withinLeftOrRight)\n    {\n        if(fragColor.r < 0.5)\n        {\n\n            fragColor = otherColor;\n            fragColor.g = fragColor.g + ((sin(iTime/pulseSpeed)));\n        }\n        else\n        {\n            fragColor = otherColor2;\n            fragColor.b = fragColor.b + ((sin(iTime/pulseSpeed)));\n        }\n    }\n    else\n    {\n        fragColor =bg;\n    }\n\n}","name":"Image","description":"","type":"image"}]}