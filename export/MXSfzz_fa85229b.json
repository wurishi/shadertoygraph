{"ver":"0.1","info":{"id":"MXSfzz","date":"1729115103","viewed":19,"name":"CIS566-lab04-03","username":"wangrp","description":"homegirl needs a rainbow!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["nyan"],"hasliked":0,"parentid":"stGBDR","parentname":"naked nyan"},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates based on iResolution.y for aspect ratio correction\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    vec2 p = fragCoord.xy / iResolution.xy;\n    \n    // Scale and translate UV coordinates\n    uv *= 2.;\n    uv -= vec2(2.5, 0.5);\n    uv = clamp(uv, 0., 1.);\n\t\n    // Frame calculation for Nyan Cat animation\n\tfloat frame = floor( mod( iTime * 10.0, 6.0 ) );\n\n    // Width of one frame in the sprite sheet\n\tfloat nyanWidthUV = 40.0 / 256.0;\n\tuv.x = (uv.x + frame) * nyanWidthUV;\n    \n    uv.y = uv.y + sin(iTime * 5.0) * 0.18;\n    \n    // Fetch the texture color\n\tvec4 nyan = texture( iChannel0, uv );\n\tvec3 col = nyan.xyz;\n    \n    if(nyan.w == (0.0)){\n        // Generate the sinusoidal wave for the rainbow tail\n        // Ref: https://www.shadertoy.com/view/lsX3Rr\n        vec3 bg = vec3(0.0, 51.0 / 255.0, 102.0 / 255.0);\n        //float a = 0.01 * sin(40.0 * p.x + 40.0 * iTime);\n        float a = 0.05 * sin( 40.0 * p.x + iTime * 5.0) ;\n        float h = (a + p.y - 0.4) / (0.5 - 0.3);\n    \n        if (p.x < 0.80 && h > 0.0 && h < 1.0)\n        {\n            h = floor(h * 6.0);\n            bg = mix(bg, vec3(1.0, 0.0, 0.0), 1.0 - smoothstep(0.0, 0.1, abs(h - 5.0))); // Red\n            bg = mix(bg, vec3(1.0, 0.6, 0.0), 1.0 - smoothstep(0.0, 0.1, abs(h - 4.0))); // Orange\n            bg = mix(bg, vec3(1.0, 1.0, 0.0), 1.0 - smoothstep(0.0, 0.1, abs(h - 3.0))); // Yellow\n            bg = mix(bg, vec3(0.2, 1.0, 0.0), 1.0 - smoothstep(0.0, 0.1, abs(h - 2.0))); // Green\n            bg = mix(bg, vec3(0.0, 0.6, 1.0), 1.0 - smoothstep(0.0, 0.1, abs(h - 1.0))); // Blue\n            bg = mix(bg, vec3(0.4, 0.2, 1.0), 1.0 - smoothstep(0.0, 0.1, abs(h - 0.0))); // Purple\n        }\n        fragColor = vec4(bg,1.0);\n    }\n    else{\n        fragColor = vec4(col,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}