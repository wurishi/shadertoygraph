{"ver":"0.1","info":{"id":"MtscWn","date":"1504449056","viewed":225,"name":"Coupled FitzHugh-Nagumo","username":"FlexMonkey","description":"A pair of FitzHugh-Nagumo systems coupled together eventually forming spiral instabilities.\n\nOddly, this doesn't render too well in Safari but works beautifully in Chrome.","likes":7,"published":1,"flags":48,"usePreview":0,"tags":["reactiondiffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | September 2017\n\n\tBased on https://github.com/GollyGang/ready/tree/gh-pages/Patterns/FitzHugh-Nagumo\n*/\n\nconst float pi = 3.14159265359;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    \n    vec3 ab = texture(iChannel0, coord).xyz;\n    vec3 cd = texture(iChannel2, coord).xyz;\n    \n    float a = abs(sin(ab.x * pi));\n    float c = abs(cos(cd.x * pi));\n\tfloat e = abs(sin((ab.y + cd.y) * pi)); \n    \n    fragColor = vec4(a, c, e, 1.0); \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | September 2017\n\n\tBased on https://github.com/GollyGang/ready/tree/gh-pages/Patterns/FitzHugh-Nagumo\n*/\n\nfloat a0 = -0.025;\nfloat a1 = 2.5;\nfloat epsilon = 0.15;\nfloat delta = 1.0;\nfloat k1 = 0.75;\nfloat k2 = 0.2;\nfloat k3 = 1.35;\n\nfloat timestep = 0.06; \n\n// Keyboard reset taken from https://www.shadertoy.com/view/XtcGD2\nbool reset() {\n    return texture(iChannel3, vec2(32.5/256.0, 0.5) ).x > 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec3 pixelSize = vec3(1.0 / iResolution.xy, 0.0); \n\n    vec3 ab = texture(iChannel0, coord).xyz;\n    vec3 cd = texture(iChannel2, coord).xyz;\n\n    vec3 laplacian = vec3(texture(iChannel0, coord - pixelSize.zy) +\n                          texture(iChannel0, coord - pixelSize.xz) -\n                          4.0 * texture(iChannel0, coord) +\n                          texture(iChannel0, coord + pixelSize.xz) +\n                          texture(iChannel0, coord + pixelSize.zy));\n\n    float a = ab.x + (cd.x * 0.101);\n    float b = ab.y - (cd.y * 0.099);\n\n    float delta_a = k1*a - k2*a*a - a*a*a - b + laplacian.x;\n    float delta_b = epsilon*(k3*a - a1*b - a0) + delta*laplacian.y; \n    \n   \tvec2 result = vec2(a + delta_a * timestep, \n                       b + delta_b * timestep);\n\n    if(ab.xyz == vec3(0) || reset()) {\n        fragColor = texture(iChannel1, coord);\n    } else {\n        fragColor = vec4(result.xyy, 1.0);\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"/*\n\tSimon Gladman | http://flexmonkey.blogspot.co.uk/ | September 2017\n\n\tBased on https://github.com/GollyGang/ready/tree/gh-pages/Patterns/FitzHugh-Nagumo\n*/\n\nfloat a0 = -0.05;\nfloat a1 = 4.0;\nfloat epsilon = 0.05;\nfloat delta = 4.0;\nfloat k1 = 1.0;\nfloat k2 = 2.0;\nfloat k3 = 1.0;\n\nfloat timestep = 0.06; \n\n// Keyboard reset taken from https://www.shadertoy.com/view/XtcGD2\nbool reset() {\n    return texture(iChannel3, vec2(32.5/256.0, 0.5) ).x > 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy / iResolution.xy;\n    vec3 pixelSize = vec3(1.0 / iResolution.xy, 0.0); \n\n    vec3 ab = texture(iChannel0, coord).xyz;\n    vec3 cd = texture(iChannel2, coord).xyz;\n\n    vec3 laplacian = vec3(texture(iChannel0, coord - pixelSize.zy) +\n                          texture(iChannel0, coord - pixelSize.xz) -\n                          4.0 * texture(iChannel0, coord) +\n                          texture(iChannel0, coord + pixelSize.xz) +\n                          texture(iChannel0, coord + pixelSize.zy));\n\n    float a = ab.x - (cd.x * 0.101);\n    float b = ab.y + (cd.y * 0.099);\n\n    float delta_a = k1*cd.x - k2*a*a - a*a*a - b + laplacian.x;\n    float delta_b = epsilon*(k3*a - a1*b - a0) + delta*laplacian.y; \n    \n   \tvec2 result = vec2(a + delta_a * timestep, \n                       b + delta_b * timestep);\n\n    if(ab.xyz == vec3(0) || reset()) {\n\n        fragColor = texture(iChannel1, coord);\n    } else {\n        fragColor = vec4(result.xyy, 1.0);\n    }\n    \n}","name":"Buf B","description":"","type":"buffer"}]}