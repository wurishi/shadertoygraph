{"ver":"0.1","info":{"id":"7syXD3","date":"1635402814","viewed":70,"name":"ray march garb","username":"gauravity","description":"ray marching","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float eps = 0.0001;\nconst vec3 epsx = vec3(eps, 0.0, 0.0);\nconst vec3 epsy = vec3(0.0, eps, 0.0);\nconst vec3 epsz = vec3(0.0, 0.0, eps);\n\n\n//r1 > r2\nfloat sdft(vec3 v, vec3 center, vec3 axis, float r1, float r2) {\n    vec3 relpos = v - center;\n    vec3 proj = dot(relpos, axis) * axis;\n    vec3 planeproj = relpos - proj;\n    vec3 circleproj = normalize(planeproj)*r1;\n    return length(circleproj - relpos) - r2;\n    \n}\n\nvec4 boxmap(vec3 v, vec3 n, float k, sampler2D tex) {\n   vec4 x = texture(tex, v.yz);\n   vec4 y = texture(tex, v.zx);\n   vec4 z = texture(tex, v.xy);\n   vec3 w = pow(abs(n), vec3(k));\n   return (x*w.x + y*w.y + z*w.z)/(w.x + w.y+ w.z);\n}\n\nfloat sdfsphere(vec3 v, vec3 center, float r) {\n    return length(v - center) - r;\n}\n\nfloat sdf(vec3 v) {\n   vec3 ct = vec3(0,0,10);\n   float cycle = cos(4.0*iTime);\n   float r = sqrt(1.0 - cycle*cycle)*2.0;\n   vec3 a = normalize(vec3(cos(.60*iTime), sin(.80*iTime), sin(iTime + 3.0)));\n   return min(sdft(v, ct, a, r+1.4, 1.0), sdfsphere(v, ct + 2.0*a*cycle, 2.0));\n   \n}\n\n\nvec3 dsdf(vec3 v) {\n return (vec3(sdf(v + epsx), sdf(v + epsy), sdf(v + epsz)) - sdf(v))/eps;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 light = normalize(vec3(sin(3.0*iTime), .5, cos(3.0*iTime)));\n    vec3 c = abs(sin(vec3(iTime, iTime*0.876 +0.6, iTime*0.57 + 2.0)));\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    vec2 xy = uv*2.0 -vec2(1.0, iResolution.y/iResolution.x);\n  \n    vec3 xyz = vec3(xy,1);\n    vec3 xyzn = normalize(xyz);\n    \n    for(int i =0; i < 100; i ++) {\n        float sdfx = sdf(xyz);\n        if (sdfx < eps) {\n           fragColor = abs(vec4(dsdf(xyz), 1));\n           vec3 n = normalize(dsdf(xyz));\n           float lightdot = dot(light, n);\n           vec4 tex = boxmap((xyz-c)/5.0, n, 9.0, iChannel0);\n           fragColor = tex*vec4(vec3(clamp(lightdot + 0.5*pow(lightdot, 5.0), 0.0, 1.0)+.2), 1);\n           return;\n        }\n        xyz = xyz + xyzn*sdfx;\n        \n    }\n    fragColor = vec4(0,0,0,1);\n}","name":"Image","description":"","type":"image"}]}