{"ver":"0.1","info":{"id":"Msc3R8","date":"1447979405","viewed":294,"name":"Cloude Tunnels","username":"bjarkeck","description":"Just playing around & learning alot from this site!\n\nNoise functions used is IQ's\nhttps://www.shadertoy.com/view/4sfGzS","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["clouds"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define PI 3.1415926\n\nvec3 hue(float h)\n{       \n    return max(cos((h + vec3(2,0,1)/3.) * 2. * PI) * .5 + .5, 0.);\n}\n\nfloat noise(in vec3 x)\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = texture( iChannel0, (uv+0.5)/256.0, -100.0 ).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\nfloat cloudnoise(in vec3 x)\n{\n \tvec3 q = x * 0.5;\n\tfloat d;\n    d  = 0.5000*noise( q ); q = q*2.02;\n    d += 0.2500*noise( q ); q = q*2.03;\n    d += 0.1875*noise( q ); q = q*2.01;\n \td += 0.1875*noise( q );\n    return d;\n}\n\nvec3 clouds(in vec3 p)\n{\n    vec3 color = hue(noise(p * 0.2));\n    float cloudeFactor = smoothstep(0.2, 1.0, cloudnoise(p)) * 2.;\n    // Curve tunnels\n    p.xy += vec2(cos(p.z * 2.0), sin(p.z * 2.0)) * 0.05;\n    // Many of them\n    p = (fract(p) - vec3(0.5)) * 30.0;\n    float tunnels = smoothstep(0.0, 0.1, length(p.xy * 0.2) - 1.5);\n    return color * cloudeFactor * tunnels;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy - vec2(0.5)) * 2.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 pos = vec3(0.1, 0.01, 0.3) * 4.0 * iTime;\n    vec3 ray = vec3(uv, 1.0);\n    // Camera movement, don't know how to do that yet, so this is a hack.\n    ray = mix(ray.xzy, ray, cos(iTime * 0.2) * 0.5 + 0.5);    \n    vec3 cloudeColor = vec3(0.0);\n    \n    for(float f = 0.0; f < 1.0; f += 0.01)\n    {\n        vec3 p = pos + ray * f * 2.0;\n        cloudeColor += clouds(p) * (1.0 - f);\n    }\n    \n    cloudeColor = cloudeColor / 70.0;\n    \n\tfragColor = vec4(cloudeColor, 1.0);\n}","name":"","description":"","type":"image"}]}