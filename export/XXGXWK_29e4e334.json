{"ver":"0.1","info":{"id":"XXGXWK","date":"1720469552","viewed":24,"name":"Simple Volume Render","username":"jollo1234","description":"Renders the volume of a bean shaped object","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["volume"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float STEP_SIZE = 0.5f;\nconst float MAX_DISTANCE = 10.f;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 ray = getRay(uv, iResolution.x / iResolution.y);\n    \n    float result = 0.f;\n    for(float d = 0.f; d <= MAX_DISTANCE; d += STEP_SIZE) {\n        // Increase result if sample point is inside the bean\n        result += getValue(ray * d, iTime) < 0.f ? STEP_SIZE : 0.f;\n    }\n\n    // Output to screen\n    fragColor = vec4(vec3(result / MAX_DISTANCE), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float EPSILON = 0.001f;\n\nconst float VERTICAL_FIELD_OF_VIEW = 1.f;\n\nvec3 getRay(in vec2 uv_position, in float aspect_ratio) {\n\n    float vertical_offset = tan(VERTICAL_FIELD_OF_VIEW / 2.f);\n    float horizontal_offset = vertical_offset * aspect_ratio;\n    \n    vec3 ray = vec3(\n        horizontal_offset * (uv_position.x * 2.f - 1.f),\n        vertical_offset * (uv_position.y * 2.f - 1.f),\n        1.f\n    );\n    \n    return normalize(ray);\n}\n\nconst float ALPHA = 2.f;\n\nfloat smoothMin(in float value_0, in float value_1) {\n    return -log(exp(-value_0 * ALPHA) + exp(-value_1 * ALPHA)) / ALPHA;\n}\n\nconst float RADIUS_0 = 1.f;\nconst float RADIUS_1 = 1.f;\n\nconst vec3 OFFSET = vec3(0.f, 0.f, -5.f);\n\nfloat getValue(in vec3 position, float time) {\n    vec3 center_0 = vec3(sin(time / 3.14f), 0.f, cos(time / 3.14f));\n    vec3 center_1 = -vec3(sin(time / 3.14f), 0.f, cos(time / 3.14f));\n    \n    return smoothMin(distance(center_0, position + OFFSET) - RADIUS_0, distance(center_1, position + OFFSET) - RADIUS_1);\n}\n","name":"Common","description":"","type":"common"}]}