{"ver":"0.1","info":{"id":"csdcWN","date":"1695080063","viewed":181,"name":"Hexagon xy","username":"Domenic3000","description":"Hexagon tiling","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["hexagon","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float HexDist(vec2 p) {\n    p = abs(p);\n    float c = dot(p, normalize(vec2(1, 1.73205080757)));\n    c= max(c, p.x);\n    \n    return c;\n}\n\nvec4 HexCoords(vec2 uv) {\n    vec2 r = vec2(1, 1.73205080757);\n    vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n\n    vec2 gv = dot(a,a)<dot(b,b) ? a : b; //check if length a < length b\n    \n    float y = mod(.5 - HexDist(gv), .08);\n    \n    //original y function\n    //float y = .5 - HexDist(gv);\n    \n    float x = atan(gv.x, gv.y);\n    \n    vec2 id = uv-gv;\n\n    return vec4(x, y, id.x, id.y);\n}\n\nvec2 edgeDist(vec2 uv) {\n    vec2 r = vec2(1, 1.73205080757);\n    vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n\n    vec2 gv = dot(a,a)<dot(b,b) ? a : b; //check if length a < length b\n    return gv;\n}\n\nvec3 NeonPalette(float t) {\n    // Interpolate between neon colors\n    vec3 col1 = vec3(1.000,0.000,0.000);\n    vec3 col2 = vec3(0.984,0.000,1.000);\n    vec3 col3 = vec3(0.000,0.984,1.000);\n\n    // Mix between col1, col2, and col3 based on 't'\n    if (t < 0.5) {\n        return mix(col1, col2, t * 2.0);\n    } else {\n        return mix(col2, col3, (t - 0.5) * 2.0);\n    }\n}\n\nfloat random(vec2 st){\n    return fract(sin(dot(st,vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    uv *= 10.;\n    uv+=16.;\n    \n    vec4 hc = HexCoords(uv);\n    \n    vec2 id= hc.zw;\n    \n    float phaseShift = id.x * id.y;\n    \n    float t = (sin(hc.w*sin(hc.z) + iTime*1.2 + phaseShift*.5) +1.0) * .5;\n    \n    float c2 = smoothstep(.02, .05, hc.y * t);\n    \n    float uvEdge = abs(length(edgeDist(uv))); //dist to edge\n    //float radial = sin(mod(hc.x, 2.1)+sin(hc.z*hc.w+iTime*.1));\n    \n    // Map 't' to a neon color from our palette\n    vec3 neonColor = NeonPalette(t)*(uvEdge*6.*((cos(hc.z*hc.w+iTime*.6)+1.0)*.5));\n    \n    //float c = smoothstep(.02, .05, hc.y*((sin(hc.z*hc.w+iTime)+1.)*.5));\n    //uvEdge *= c; \n    //col.rg += uvEdge;\n    col = clamp(mix(col, neonColor/2., c2), 0., 1.);\n   \n    //col *=radial;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}