{"ver":"0.1","info":{"id":"WlKSWw","date":"1582845229","viewed":48,"name":"Ray March 1","username":"baksej","description":"Simple Ray Marching Demo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphere(vec3 pos, float radius){\n \treturn length(pos) - radius;   \n}\n\nfloat scene(vec3 pos){\n \tfloat s1 = sphere(pos - vec3(-.3, 0., 0.0), .3);\n    float s2 = sphere(pos - vec3(.3, 0., 0.), .3);\n    \n    return min(s1, s2);\n}\n\nvec3 trace(vec3 camOrigin, vec3 dir) {\n \tvec3 ray = camOrigin;\n    float totalDist = 0.0;\n    for(int i = 0; i < 128; i++) {\n     \tfloat dist = scene(ray);\n        if (abs(dist) < .001) {\n        \treturn vec3(1.0);   \n        }\n        totalDist += dist;\n        ray += dist * dir;\n    }\n    \n    return vec3(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.y /= iResolution.x / iResolution.y;\n    \n    vec3 camOrigin = vec3(0.,0.,-1.);\n    vec3 rayOrigin = vec3(camOrigin.xy + uv, camOrigin.z + 1.0);\n    vec3 dir = normalize(rayOrigin - camOrigin);\n    vec3 color = trace(camOrigin, dir);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}