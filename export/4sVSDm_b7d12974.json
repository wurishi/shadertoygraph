{"ver":"0.1","info":{"id":"4sVSDm","date":"1464812272","viewed":1115,"name":"Pacman nvidia part 1","username":"Ippokratis","description":"pacman from nvidia show http://on-demand.gputechconf.com/gtc/2016/video/S6717.html\nMake a dot and move it around using arrow keys\nBuf A processes the input and passes it to the image as a texture.\n","likes":3,"published":3,"flags":48,"usePreview":0,"tags":["pacman","keyboard","move","nvidia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 drawPacman ( vec3 col, in vec2 fragCoord)\n{\n\t// normalize pixel coords to 0-1  : fragCoord / iResolution.y\n    // 31 is the nr of cells across the screen\n    // map pixel coords to 0 - 31 cells\n    \n    float cells = 31.0;\n    vec2 pp = cells * fragCoord / iResolution.y;\n   \n    // read pacman pos\n    vec2 pacmanPos = texture(iChannel0, vec2( 50.5/iChannelResolution[0].xy)).xy;\n    \n    // create a circle with center in pacmanPos and radius = 1 cell\n    float r = length (pp - pacmanPos);\n    // The biggest the difference between a and b in \n    // smoothstep ( a, b, r) below, the smoother the margin\n    float f = 1.0 - smoothstep(1.0, 1.5, r);\n    // paint the circle black and leave the rest as is\n    col = mix(col, vec3(0.0, 0.0, 0.0), f);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //vignette background\n    uv *=  1.0 - uv.yx;   //vec2(1.0)- uv.yx; -> 1.-u.yx; Thanks FabriceNeyret !\n    float vig = uv.x*uv.y * 15.0; // multiply with sth for intensity\n    vig = pow(vig, 0.25); // change pow for modifying the extend of the  vignette\n\t\n    vec3 col = vec3(vig);\n    \n    col = drawPacman( col, fragCoord );\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \t\n    //place the pacman at the 28th cell horizontally, 15th cell vertically\n    //this will be the starting position\n    vec2 pacmanPos = vec2(28.0, 15.0);\n    \n    \n    if(iFrame>0)\n \t//read previous state\n    pacmanPos = texture(iChannel0, vec2( 50.5/iChannelResolution[0].xy)).xy;   \n    \n    //read arrow button press and update state via changing the texture \n    if( texture(iChannel1, vec2(37.5/256.0, 0.5)).x>0.1 ) pacmanPos.x --;\n    if( texture(iChannel1, vec2(38.5/256.0, 0.5)).x>0.1 ) pacmanPos.y ++;\n    if( texture(iChannel1, vec2(39.5/256.0, 0.5)).x>0.1 ) pacmanPos.x ++;\n    if( texture(iChannel1, vec2(40.5/256.0, 0.5)).x>0.1 ) pacmanPos.y --;\n    \n    //Keep pacman within screen - cell space \n    pacmanPos.x = clamp( pacmanPos.x, 1.0, 54.0 );\n    pacmanPos.y = clamp( pacmanPos.y, 1.0, 30.0 );\n    \n    fragColor = vec4(pacmanPos, 0.0, 1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}