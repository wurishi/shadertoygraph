{"ver":"0.1","info":{"id":"3dSSWc","date":"1555033626","viewed":137,"name":"volcano","username":"leon21062000","description":"aaa","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"ShaderToy Tutorial - Ray Marching Primitives\" \n// by Martijn Steinrucken aka BigWings/CountFrolic - 2018\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//\n// This shader is part of a tutorial on YouTube\n// https://youtu.be/Ff0jJyyiVyw\n\n#define MAX_STEPS 15\n#define MAX_DIST 15.\n#define SURF_DIST .001\n\n\nfloat time;\n\n//-----------------------------------------------------------------------------\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\n//-----------------------------------------------------------------------------\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0;\n\n    float res = mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                    mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n\n    return res;\n}\n\n//-----------------------------------------------------------------------------\nfloat SmokeParticle(vec2 loc, vec2 pos, float size, float rnd)\n{\n\tloc = loc-pos;\n\tfloat d = dot(loc, loc)/size;\n\t// Outside the circle? No influence...\n\tif (d > 1.0) return 0.0;\n\n\t// Rotate the particles...\n\tfloat r= time*rnd*1.85;\n\tfloat si = sin(r);\n\tfloat co = cos(r);\n\t// Grab the rotated noise decreasing resolution due to Y position.\n\t// Also used 'rnd' as an additional noise changer.\n\td = noise(hash(rnd*828.0)*83.1+mat2(co, si, -si, co)*loc.xy*2./(pos.y*.16)) * pow((1.-d), 3.)*.7;\n\treturn d;\n}\n\n//-----------------------------------------------------------------------------\nfloat RockParticle(vec2 loc, vec2 pos, float size, float rnd)\n{\n\tloc = loc-pos;\n\tfloat d = dot(loc, loc)/size;\n\t// Outside the circle? No influence...\n\tif (d > 1.0) return 0.0;\n\tfloat r= time*1.5 * (rnd);\n\tfloat si = sin(r);\n\tfloat co = cos(r);\n\td = noise((rnd*38.0)*83.1+mat2(co, si, -si, co)*loc*143.0) * pow(1.0-d, 15.25);\n\treturn pow(d, 2.)*5.;\n\t\n}\n\n\n//Cone\nfloat sdCone(in vec3 p, in vec3 c) {\n    vec2 q = vec2( length(p.xz), p.y );\n    float d1 = -q.y-c.z;\n    float d2 = max( dot(q,c.xy), q.y);\n    \n    return length(max(vec2(d1,d2),0.5)) + min(max(d1,d2), 0.);\n}\n\n\n\nfloat GetDist(vec3 p) {\t \t\n    float planeDist = p.y;\n\n    float sc = sdCone(p-vec3(-0.75,2.0, 5), vec3(3.0));\n    \n    float d = min(sc, planeDist);\n    \n    return d;\n}\n\nfloat RayMarch(vec3 ro, vec3 rd) {\n\tfloat dO=0.;\n    for(int i=0; i<MAX_STEPS; i++) {\n    \tvec3 p = ro + rd*dO;\n        float dS = GetDist(p);\n        dO += dS;\n        if(dO>MAX_DIST || dS<SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n\tfloat d = GetDist(p);\n    vec2 e = vec2(0.3, 0.);\n    vec3 n = d - vec3(GetDist(p-e.xyy), GetDist(p-e.yxy), GetDist(p-e.yyx));\n    \n    return normalize(n);\n}\n\nfloat GetLight(vec3 p) {\n    vec3 lightPos = vec3(0, 5, 6);\n    \n    vec3 l = normalize(lightPos-p);\n    vec3 n = GetNormal(p);\n    \n    float dif = clamp(dot(n, l), 0., 1.);\n    float d = RayMarch(p+n*SURF_DIST*2., l);\n    if(d<length(lightPos-p)) dif *= .1;\n    \n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    time = (iTime+1.);\n   vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\t //vec2 uv = ((fragCoord.xy/iResolution.xy)) * 2.0- 1.0;\n    vec3 col = vec3(0);\n\n    \n    vec3 ro = vec3(0, 2, 0);\n    vec3 rd = normalize(vec3(uv.x-.15, uv.y-.2, 1));\n\n    float d = RayMarch(ro, rd);\n    \n    vec3 p = ro + rd * d;\n    \n    float dif = GetLight(p);\n    vec3 texcolor = texture(iChannel0, p.xy + p.xz).rgb;\n    col = vec3(dif) + texcolor;\n\n    \n    \n    for (float i = 0.0; i < 40.0; i+=1.0)\n\t{\n\t\tfloat t = time*1.3+i*(2.+hash(i*-1239.)*2.0);\n\t\tfloat sm = mod(t, 9.3)*.8;\n\t\tfloat rnd = floor(t / 9.3);\n\t\tvec2 pos = vec2(0.0, sm) *.5;\n\t\tpos.x += (hash(i*33.0+rnd)-.5)*.2 * sm*2.13;\n\t\t// Mechanics... a butchered d = vt + (1/2)at^2    ;)\n\t\tpos.y += (.1 - (.075+hash(i*30.0+rnd*36.7)*.15)*(sm*sm)*.8);\n\t\tfloat d = RockParticle(pos, uv, .01*hash(i*1332.23)+.001, (hash(-i*42.13*rnd)-.5)*15.0);\n\t\tif (d <= 0.0) continue;\n\t\tfloat c = max(.3+abs(hash(i*11340.0))*.8+(1.0-sm*.5), 0.0);\n\t\tcol = mix(col, vec3(c,c*.2, 0.0), min(d, 1.));\n\t}\n\n\t// Loop through smoke particles...\n\tfor (float i = 0.0; i < 120.0; i+=1.0)\n\t{\n\t\t// Lots of magic numbers? Yerp....\n\t\tfloat t=  time+i*(2.+hash(i*-1239.)*2.0);\n\t\tfloat sm = mod(t, 8.6) *.5;\n\t\tfloat rnd = floor(t / 8.6);\n\n\t\tvec2 pos = vec2(0.0, sm) *.5;\n\t\tpos.x += (hash(i)-.5)*.2 * uv.y*5.13;\n\t\tfloat d = SmokeParticle(pos, uv, .03*hash(i*1332.23+rnd)+.001+sm*0.03, hash(i*rnd*2242.13)-0.5);\n\t\tif (d <= 0.0) continue;\n\t\td = d* max((3.0-(hash(i*1127.0)*1.5) - sm*.63), 0.0);\n\t\tfloat c = abs(hash(i*4.4));\n\t\t// Black/rusty smoke...\n\t\tcol= mix(col, vec3(c*.3+.05, c*.3, c*.25), min(d, 1.0));\n\t\t// Lava gush...\n\t\tcol = mix(col, vec3(.52, .25, 0.0), max((d-1.05)*8.0, 0.0));\n\t}\n\tuv = ((fragCoord.xy/iResolution.xy));\n    //col *= pow( 45.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y), .08 );\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}