{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define moon_start vec2(0.1, 0.7)\n#define moon_size 0.05\n#define moon_speed 200.0\n#define vis_strength 4.0\n\n#define aspectRatio (iResolution.x / iResolution.y);\n\nvec2 moonPos()\n{\n    float t = mod(iTime, moon_speed);\n    vec2 moonOffset = vec2(t / moon_speed, sqrt(t) / 100.);\n    return moon_start + moonOffset;\n}\n\nvec4 moonColor(vec2 uv, float t)\n{\n    uv.x += abs(mod(iTime * 0.1, 100.0));\n    uv.x *= 0.25;\n    return vec4(0.5) + texture(iChannel0, uv);\n}\n\n\nvec4 moon(vec2 uv, vec4 col)\n{\n    float d = length(uv - moonPos());\n    \n    if (d < moon_size)\n    {\n        return moonColor(uv, d / moon_size);\n    }\n    else if (d < moon_size * 2.)\n    {\n        float t = 1.0 - (d - moon_size) / moon_size;\n        \n        t *= t;\n        uv.x += abs(mod(iTime * 0.1, 100.0));\n    \tuv.x *= 0.25;\n        return col + (texture(iChannel0, uv) * t);\n    }\n    else\n    {\n        return col;\n    }\n}\n\nvec4 clouds(vec2 uv, vec4 col)\n{\n    uv.x += abs(mod(iTime * 0.1, 100.0));\n    uv.x *= 0.25;\n    vec4 cloudColor = texture(iChannel0, uv) * texture(iChannel1, uv) * 0.1;\n    return cloudColor;\n}\n\nvec4 sky(vec2 uv, vec4 col)\n{\n    col += moon(uv, col) / vis_strength;\n    col += clouds(uv, col);\n    \n    col += 0.3 * clouds(vec2(uv.x * -2., uv.y), col);\n    \n    \n    return col;\n}\n\nvec4 waterMoon(vec2 uv, vec4 col)\n{\n    // Add lighting from the mooooooooon\n    vec2 mp = moonPos();\n\n    mp.y = 1.0 - mp.y;\n\n    float md = length(uv - mp);\n\n    if (md < moon_size * 1.0)\n    {\n        float t = 1.0 - (md / (moon_size * 1.0));\n\n        vec2 flipPos = uv;\n\n        flipPos.y = 1.0 - flipPos.y;\n        \n        // scatter uv with noise \n    \tvec2 strength = vec2(-1.0) + 2.0 * texture(iChannel1, flipPos).xy / iTime;\n    \n\t   \t//flipPos = flipPos + strength;\n        \n        //vec4 mc = col * t + vec4(t) * moonColor(flipPos, 1.0 - t);\n        vec4 mc = moonColor(flipPos, 1.0 - t);\n        //return ((mc + col) * 0.5);\n        \n        // Add sky \n        col = sky(flipPos, col);\n        \n        \n        vec4 result= mix((mc + col) * 0.5, col, 1.5 - t);// / vis_strength * 0.5;\n        \n        return result;\n    }\n    else\n    {\n        return col;\n    }\n}\n\nvec4 water(vec2 uv, vec4 col)\n{\n    vec2 orig_uv = uv;\n    \n    float waterLine = 0.5 \n        + 0.05 * ( sin(uv.x + iTime) * sin(uv.x + iTime * 0.5) );\n    \n    if (uv.y < waterLine)\n    {\n        \n        float t = 1.0 - (uv.y / 0.5);\n        //uv.x *= sin(uv.x * 6.28);\n        uv.x += 0.1 * sin(20. * uv.y + iTime);\n        uv.y += 0.1 * sin(orig_uv.x + iTime);\n        \n        vec4 waterColor = vec4(0, 0, 0.5 * t, 1.0) * texture(iChannel0, uv);\n        \n        \n        vec2 water_uv = vec2(uv.x, orig_uv.y + 0.2 * uv.y);\n        \n        //waterColor = waterMoon((orig_uv + uv) * 0.5, waterColor);\n        waterColor = waterMoon(water_uv, waterColor);\n        \n        return waterColor;\n    }\n    else        \n    {\n        return col;\n    }\n}\n\nvec4 scene(vec2 uv)\n{\n    vec4 col = vec4(0);\n    \n    col = sky(uv, col);\n    col = water(uv, col);\n    //col = water(vec2(uv.x * -2., uv.y), col);\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tuv.x *= aspectRatio;\n    \n\tvec4 col = vis_strength * scene(uv);\n    \n\tfragColor = col;\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define d3 146.83\n#define a4 440.0\n#define g2 98.0\n#define g4 392.\n#define c5 523.23\n#define d4 293.66\n#define f2 87.31\n\n#define pi 3.14159\n#define twopi 6.2831\n\nvec2 makeNote(float freq, float span, float time)\n{\n    return vec2(sin(twopi * freq * time) * exp(-span * time));\n}\n\n// main instrument\nfloat instrument( float freq, float time )\n{\n    freq = 440.0*pow(freq/440.0,1.003); // spread\n    \n    float ph = 1.0;\n    ph *= sin(twopi*freq*time);\n    ph *= 0.2+0.8*max(0.0,6.0-0.01*freq);\n    ph *= exp(-time*freq*0.2);\n    \n    float y = 0.0;\n    y += 2.0* sin(1.00*6.2831*freq*time+ph)*exp(-0.5*0.007*freq*time);\n    y += 1.0* sin(2.00*6.2831*freq*time+ph)*exp(-0.5*0.004*freq*time);\n       \n    y *= 1.0 + 1.5*exp(-8.0*time);\n    y *= clamp( time/0.004, 0.0, 1.0 );\n\n    y *= 2.5-1.5*clamp( log2(freq)/10.0,0.0,1.0);\n\treturn y;\t\n}\n\n#define D(a) b+=float(a);if(t>b)x=b;\n\n#define tint 1.3\n\nfloat bar(float t, float offset)\n{\n    float x = 0.0;\n    float y = 0.0;\n    float b = 0.0;\n    t /= tint;\n    \n    //// First\n    // d3\n    x = t; b = 0.0;\n    D(0. + offset);\n    y += instrument(d3, tint * (t - x));\n    \n    // a4\n    x = t; b = 0.0;\n    D(0.525209 + offset)D(0.7938456)D(0.9561033)D(0.4663613)D(0.5140987);\n    y += instrument(a4, tint * (t - x));\n    \n    // g4\n    x = t; b = 0.0;\n    D(1.0002644  + offset)D(0.4971807)D(1.4402629)D(0.5037278);\n    y += instrument(g4, tint * (t - x));\n    \n    // c5\n    x = t; b = 0.0;\n    D(1.8314873 + offset);\n    y += instrument(c5, tint * (t - x));\n    \n    // d4\n    x = t; b = 0.0;\n    D(3.7229489 + offset);\n    y += instrument(d4, tint * (t - x));\n    \n    return y;\n}\n\nfloat bridge(float t, float start)\n{\n    float x = 0.0;\n    float y = 0.0;\n    float b = 0.0;\n    \n    t /= tint;\n    \n    // g2\n    x = t; b = 0.0;\n    D(start);\n    y += instrument(g2, tint * (t - x));\n    \n    // a4\n    x = t; b = 0.0;\n    D(start + 0.5); D(2.0);\n    y += instrument(a4, tint * (t - x));\n    \n    // f2\n    x = t; b = 0.0;\n    D(start + 2.0);\n    y += instrument(f2, tint * (t - x));\n    \n    return y;\n}\n\nfloat melody2(float t)\n{\n    float offset = 3.9;\n    float y = 0.;\n    \n    y += bar(t, offset * 0.);\n    y += bar(t, offset * 1.);\n    y += bar(t, offset * 2.);\n    \n    y += bridge(t, (offset * 3.0) + 0.1);\n    \n    return y;\n}\n\nvec2 mainSound( in int samp, float time )\n{\t\n    time = mod( time, 20.5) ;\n    \n    vec2 y = vec2(0.0);\n    y += vec2(1.0)*melody2( time ); // main instrument\n\ty *= 0.1;\n    \n\treturn y;\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsjSDw","date":"1412842835","viewed":212,"name":"For Jess","username":"toothmang","description":"Happy birthday man! ","likes":4,"published":1,"flags":8,"usePreview":0,"tags":["procedural","2d","trig"],"hasliked":0,"parentid":"","parentname":""}}