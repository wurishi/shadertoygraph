{"ver":"0.1","info":{"id":"XsyBDD","date":"1529044908","viewed":142,"name":"Möbius transformation","username":"MikSu","description":"Applies a Möbius transformation to the input picture.\n\n\nI started coding shaders only recently and this is one of my first shaders. If you see how this code could be improved, tell me in the comments :)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["complexanalysis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 a = vec2(0.0, 0.0); // These are the coefficients of the transformation\nvec2 b = vec2(0.0, 0.0); // (az+b)/(cz+d)\nvec2 c = vec2(0.0, 0.0);\nvec2 d = vec2(0.0, 0.0);\n\nint it = 1; // Number of iterations of the transformation\n\nvec2 imt(vec2 z){ // Inverse Möbius transformation\n    vec2 v = vec2(-d.x*z.x+d.y*z.y+b.x,\n                 -d.x*z.y-d.y*z.x+b.y);\n    vec2 u = vec2(c.x*z.x-c.y*z.y-a.x,\n                 c.x*z.y+c.y*z.x-a.y);\n    \n    vec2 w = vec2(v.x*u.x+v.y*u.y,\n                 u.x*v.y+v.x*u.y);\n    w /= u.x*u.x+u.y*u.y;\n    \n\treturn w;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.y; float width = iResolution.x/iResolution.y;\n    vec2 z = uv*2. - vec2(width, 1.);\n    vec2 w = z;\n    \n    // You can commment this block out and play around with the parameters yourself\n    a.x = cos(mod(iTime, 3.14159));\n    b.x = -sin(mod(iTime, 3.14159));\n    c.x = sin(mod(iTime, 3.14159));\n    d.x = cos(mod(iTime, 3.14159));\n    \n    for(int i = 0; i < it; i++){ w = imt(w); }\n    vec2 image = (w+vec2(width, 1.))/2.;\n    image.x /= width;\n\n    fragColor = texture(iChannel0, image);\n    /* Mix multiple images. Why not?\n    switch(int(mod(image.x, 2.))){\n    \tcase 0:\n    \t\tfragColor = texture(iChannel0, image);\n        \tbreak;\n        case 1:\n    \t\tfragColor = texture(iChannel1, image);\n        \tbreak;\n    }\n\t*/\n}","name":"Image","description":"","type":"image"}]}