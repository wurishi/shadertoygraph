{"ver":"0.1","info":{"id":"3dXfRH","date":"1587656562","viewed":213,"name":"wheelofconf.","username":"nabr","description":"displacement mapping alike don't take the code too serious.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["wheel","what","me","to","it","like","you","make","does","take"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// -----------------------------------------------------\n// wheelofconf. by nabr\n// https://www.shadertoy.com/view/3dXfRH\n// License Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)\n// https://creativecommons.org/licenses/by-nc/4.0/\n// -----------------------------------------------------\n\n\n// displacement mapping alike don't take the code too serious\n\nfloat pch(vec2);\n#define t iTime\n\nfloat f(vec3 p)\n{\n    float f = 0., \n          z = .05 * t + p.z, \n          v = 1. - smoothstep(0., 2., length(p));\n    for(float i = 10.; i > 0.; --i)\n    {\n        float c = p.y * sin(i / 1.57 + z), \n              s = p.x * cos(i / 1.57 + z), \n              b = v * mod(1.57 * v, .636);\n        f += min(v, .0125 / abs(b +(fract(.05*t)>.5?2.:1.) * (c + s)));\n    }\n    return (p + normalize(smoothstep(0., f, vec3(.15, 1, .5)))).z;\n}\n\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    vec2 R = iResolution.xy, e = vec2(.001, 0);\n    U = (U - .5 * R) / R.y;\n    \n    vec3 c, p, N;\n    \n    vec3 o = vec3(0, 0, .5+(sin(.2*t)*.2+.2)), \n         d = vec3(U, -1),\n         dn = vec3(0, 0, 1.), \n         D = dot(dn, o) / dot(dn, d) * d - o;\n    \n    vec3 ld = normalize(vec3(.7 * sin(.5 * t), cos(.5 * t), 1));\n    vec3 l = -normalize(ld + d);\n    float lr = exp2(.1 * dot(l, l));\n    \n    float h; \n    for(int i = 10; i > 0; --i)\n        \th += f(p = (D * h));\n    \n    N = normalize(f(p) - vec3(f(p - e.xyy), f(p - e.yxy), f(p - e.yyx)));\n    \n    c = mix(vec3(.2, .6, .95), \n            max(dot(N, l), .05) * lr * vec3(.8), \n            fract(.05 * t + .5 + h) + .5);\n    c += vec3(.1, .2, .2) * max(0., .8 - dot(reflect(l, N), -d)) * fract(.5 * h);\n    \n    O = vec4(vec3(.4)* pch(U) + c , 1.);\n}\n\n// char by FabriceNeyret2\n#define char(_p,_C)(((_p.x<0.||_p.x>1.||_p.y<0.||_p.y>1.))?vec4(0,0,0,1e5):textureGrad(iChannel3,_p/16.+fract(vec2(_C,15-_C/16)/16.),dFdx(_p/16.),dFdy(_p/16.))).x\nint msg[]=int[](84,104,101,32,119,111,114,108,100,32,119,105,108,108,32,115,116,105,108,108,32,98,101,32,116,117,114,110,105,110,103,32,119,104,101,110,32,121,111,117,39,114,101,32,103,111,110,101,89,101,97,104,44,32,119,104,101,110,32,121,111,117,39,114,101,32,103,111,110,101,45,32,79,122,122,121);\nfloat pch(vec2 u){\n    vec2 tp=24.*vec2(u.x+.25,u.y-.3);\n    float p; \n    for(int i=(msg.length()-1);i>=0;--i){\n        p+= char(tp,msg[i]);\n        switch(i){\n        case 70:tp.x-=2.;tp.y-=.75;break;\n        case 48:tp.x-=24.;tp.y-=.75;\n        }\n        tp.x+=.5;\n    };return p*max(0., 1.-t*.1); \n}","name":"Image","description":"","type":"image"}]}