{"ver":"0.1","info":{"id":"WtyBzc","date":"1614747794","viewed":374,"name":"Blend Clock1","username":"foxic","description":"Blend Clock","likes":15,"published":3,"flags":0,"usePreview":0,"tags":["blendclock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat char(vec2 p, int C) {\n    if (p.x<0.|| p.x>1. || p.y<0.|| p.y>1.) return 1.;\n    return textureGrad( iChannel0, p/16. + fract( vec2(C, 15-C/16) / 16. ) , \n                       dFdx(p/16.),dFdy(p/16.) ).a;\n}\n\nfloat pInt(vec2 p, float Sec, float Min, float Hor) {\n    float v = 1.;\n    float offset = -.5*5.5;\n    \n        \n        \n    offset += 1.5;\n    for (float i = 1.; i>=0.; i--) \n        Hor /= 10.,\n        v = min(char(p - vec2(offset-=.5,-.5), 48+ int(fract(Hor)*10.) ), v );\n       \n    offset += 3.;\n    v = min(char(p - vec2(offset-=.5,-.5), 58 ), v );\n    \n    for (float i = 1.; i>=0.; i--) \n        Min /= 10.,\n        v = min(char(p - vec2(offset-=.5,-.5), 48+ int(fract(Min)*10.) ), v );\n        \n    v = min(char(p - vec2(offset-=.5,-.5), 58 ), v );\n    \n    offset += 3.;\n    for (float i = 1.; i>=0.; i--) \n        Sec /= 10.,\n        v = min(char(p - vec2(offset-=.5,-.5), 48+ int(fract(Sec)*10.) ), v );\n    \n    return v;\n}\n\nfloat clock (vec2 U, float time ) {\n    float mils  = fract(time);\n\tfloat secs  = mod( (time),             60.0 );\n\tfloat mins  = mod( (time/60.0),        60.0 );\n\tfloat mins2 = mod( ((time+1.)/60.0),   60.0 );\n\tfloat hors  = mod( (time/3600.0),      24.0 );\n\tfloat hors2 = mod( ((time+1.)/3600.0), 24.0 );\n    float blend_seconds = mod( time, 1.0 );\n\n    float d = 1.;\n    d = pInt(U,secs,mins,hors);\n    float O2 = pInt(U,secs+1.,mins2,hors2);\n    d = mix(d,O2,fract(blend_seconds));\n    return d;\n}\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n\n    // get time\n    float time  = iDate.w;\n    U -= iResolution.xy*0.5;\n    U /= iResolution.y;\n    U *=3.;\n    \n\tfloat d = smoothstep(.5,.49,clock(U,time));\n\td = max(  smoothstep(.6,0.5,clock(U+0.05,time)+0.07)*0.5, d  );\n    \n    vec3 col = mix( vec3(0.356,0.533,0.886), vec3(0.96,0.96,0.91), 1.-d );\n\n    O =  vec4( vec3(col ), 1. );\n    //O =  vec4( vec3( blend ), 1. );\n\n}","name":"Image","description":"","type":"image"}]}