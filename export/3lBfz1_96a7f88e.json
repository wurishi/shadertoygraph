{"ver":"0.1","info":{"id":"3lBfz1","date":"1598344344","viewed":377,"name":"fired meteor ","username":"cailuming","description":"try some fire stuffs","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["2dfire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n//color palette from iq\nvec3 getPalette(float t){\n   vec3 a = vec3(0.5,0.5,0.5);\n   vec3 b = vec3(0.5,0.5,0.5);\n   vec3 c = vec3(1.0,1.0,1.0);\n   vec3 d = vec3(0.0,0.33,0.67);\n   return a+b*cos(6.2830*(c*t+d));  \n}\n\nmat2 rot2D(float a){\n   float c = cos(a);\n   float s = sin(a);\n   return mat2(c,s,-s,c);\n}\n\nfloat hash1(vec2 p){\n  vec2 v = vec2(PI*1453.0,exp(1.)*3054.0);\n  return fract(sin(dot(p,v)*0.1)*4323.0);\n}\n\nvec2 hash2(vec2 p){\n  vec2 v = vec2(hash1(p),hash1(p*p));   \n  return v; \n}\n\nfloat fbm1(vec2 uv){\n   float amp = 1.0;\n   float freq = 1.0;\n   float ret = .0;\n   for(float i=0.0;i<4.0;i++){\n      ret+= texture(iChannel0,(uv*freq)-iTime*0.10).x*amp;\n      freq*=0.5;\n      amp*=2.0;\n   }\n   return ret;\n}\n\n//have no idea about how to make motion sky\nvoid sky(inout vec3 col,vec2 uv,vec2 c){\n   uv-=c;\n   \n   uv-= fract(iTime*2.0); \n   float r = length(uv);\n   float t = 0.1;\n    \n   float v = 0.0;\n   float tv = 0.0;\n   float tc = iTime *0.1;\n   for(float i=0.0;i<32.0;i++){\n       t+=0.01;\n       tv = pow(0.01*t/length(uv+vec2(sin(i*0.5+tc),cos(i+tc))+hash2(vec2(0.8*i,i*0.2))-hash2(vec2(0.4,i*0.1))),2.0);\n       v+=tv;\n   }\n   \n   vec3 pcol = getPalette(0.4);\n   col+= pcol*v;\n}\n\nvoid fire(inout vec3 col,vec2 uv,vec2 c,float fs){\n   uv-=c;\n   vec2 s = vec2(floor(mod(iTime*1000.0,1.5)))*0.008; \n   uv+= vec2(-s.x,s.x);\n   float a = atan(uv.y,uv.x);\n   float r = length(uv);\n  \n   float v = max(abs(uv.x),abs(uv.y));\n   float nv = max(0.0,dot(vec2(0.8),normalize(vec2(cos(a+r*1.0),sin(a-r*1.0))))); \n  \n   vec3 pcol = getPalette(0.96); \n  \n   v = pow(v*fs,2.);\n   \n   col+=pcol*pow(nv,7.0)/v;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-vec2(0.5);\n    uv.x*= iResolution.x/iResolution.y;\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    float fs = fbm1(uv);\n    sky(col,uv,vec2(0,0));\n    fire(col,uv,vec2(0.0,0),fs);\n    col = smoothstep(0.0,1.0,col);  \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}