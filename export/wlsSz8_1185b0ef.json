{"ver":"0.1","info":{"id":"wlsSz8","date":"1562126457","viewed":93,"name":"dynamic rescaling 2 ","username":"Mishka","description":"like \"dynamic rescaling\", but scale depends on 2D mouse, rather than on time","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fract_sin_dot (vec2 uv) {\n        return fract(sin(dot(\n                         uv.xy,\n                         // vec2(sin(4.*uv.x), sin(10.*uv.y)),\n                         // vec2(sin(4.*uv.x), uv.y),\n                         0.1*iMouse.xy+vec2(1.0,1.0)))*\n        4. + 0.5*iTime);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy)*(0.01*iMouse.xy+1.0);\n\n    vec3 color = vec3(fract_sin_dot( uv ),\n                      fract_sin_dot( vec2(sin(4.*uv.x), sin(10.*uv.y)) ),\n                      fract_sin_dot( vec2(sin(4.*uv.x), uv.y) ));\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}