{"ver":"0.1","info":{"id":"DdGSDd","date":"1681771131","viewed":53,"name":"Seamless animated gradient","username":"Xabier","description":"Animated gradient rotated between 6 colors\nCompatible with Pixi and GLSL 1.0","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["barycentric","interpolation"],"hasliked":0,"parentid":"WsVGDV","parentname":"Barycentric vs. Quad"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float speed = 0.0001;\n\nvec4 getColor(int index) {\n  if (index == 0) return vec4(0.152, 0.125, 0.890, 1.0); // Blue\n  if (index == 1) return vec4(0.360, 0.717, 0.619, 1.0); // Mint\n  if (index == 2) return vec4(0.909, 0.556, 0.239, 1.0); // Orange\n  if (index == 3) return vec4(0.854, 0.231, 0.525, 1.0); // Pink\n  if (index == 4) return vec4(0.384, 0.4, 0.501, 1.0);   // Grey\n  if (index == 5) return vec4(0.0, 0.0, 0.0, 1.0);   // Black\n  return vec4(0.0); // Default color\n}\n\nvec4 mixColors(float t, int offset) {\n  float interval = 1.0 / 6.0;\n\n  int leftIndex = 0;\n  int rightIndex = 0;\n  float intervalMultiplier = 0.;\n  if (t < interval) {\n    intervalMultiplier = 0.;\n    leftIndex = 0;\n    rightIndex = 1;\n  } else if (t < 2.0 * interval) {\n    intervalMultiplier = 1.;\n    leftIndex = 1;\n    rightIndex = 2;\n  } else if (t < 3.0 * interval) {\n    intervalMultiplier = 2.;\n    leftIndex = 2;\n    rightIndex = 3;\n  } else if (t < 4.0 * interval) {\n    intervalMultiplier = 3.;\n    leftIndex = 3;\n    rightIndex = 4;\n  } else if (t < 5.0 * interval) {\n    intervalMultiplier = 4.;\n    leftIndex = 4;\n    rightIndex = 5;\n  } else {\n    intervalMultiplier = 5.;\n    leftIndex = 5;\n    rightIndex = 0;\n  }\n  leftIndex = int(mod(float(leftIndex + offset), 6.0));\n  rightIndex = int(mod(float(rightIndex + offset), 6.0));\n  return mix(getColor(leftIndex), getColor(rightIndex), (t - intervalMultiplier * interval) / interval);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 UV = fragCoord/iResolution.xy;\n    // UV.t = 1.0-UV.t;\n\n    float t = mod(iTime * speed, 1.0);\n    vec4 colorA = mixColors(t, 0);\n    vec4 colorB = mixColors(t, 1);\n    vec4 colorC = mixColors(t, 2);\n    vec4 colorD = mixColors(t, 3);\n\n    vec4 colorHorizontal = mix(colorA, colorB, UV.x);\n    vec4 colorVertical = mix(colorC, colorD, UV.y);\n    vec4 color = mix(colorHorizontal, colorVertical, sin(iTime));\n\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}