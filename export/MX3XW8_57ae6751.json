{"ver":"0.1","info":{"id":"MX3XW8","date":"1718920268","viewed":80,"name":"Multibrot Fractal V1","username":"spenceryonce","description":"Here is my first implementation of the multibrot fractal set which is simply this equation (Z -> Z^d +c).\n\nComments and improvements are welcome!","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","complex","rotation","multibrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 50.0\n\n// Z -> Z^d + C\nvoid multibrot(vec2 c, vec2 z, out vec3 color, float d) {\n    float iter = 0.0;\n    for(; iter < MAX_ITER; iter++) {\n        float r = length(z);\n        float theta = atan(z.y, z.x);\n        z = pow(r, d) * vec2(cos(d * theta), sin(d * theta)) + c;\n        if (dot(z,z) > 4.0) {\n            color = vec3(0.0);\n            break;\n        }\n\n    }\n    color = vec3(iter / MAX_ITER);\n}\n\nfloat lerp(float a, float b, float t) {\n    return a + (b - a) * t;\n}\n\nvoid mainImage(out vec4 O, vec2 fc) {\n    vec2 uv = (2.0*fc.xy-iResolution.xy)/iResolution.y;\n    uv *= 1.5;\n    vec3 col = vec3(0.0);\n    vec2 z = vec2(0.001,0.001);\n    float d = lerp(2.0, 7.0, 0.5 + 0.5 * sin(iTime*0.5));\n    multibrot(uv, z, col, d);\n    col = pow(col,vec3(0.4545));\n    O = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}