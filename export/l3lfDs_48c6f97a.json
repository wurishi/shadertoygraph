{"ver":"0.1","info":{"id":"l3lfDs","date":"1729089715","viewed":16,"name":"CIS566-lab04-02","username":"wangrp","description":"Simulating a damaged VCR playing a video","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\n\nfloat sinWave(float x, float freq, float amp) {\n    return sign(sin(x * freq * 2.0 * PI)) * amp;\n}\n\nfloat squareWave(float x, float freq, float amp) {\n    return sin(x * freq * 1.0 * PI) * amp;\n}\n\nfloat distordFreq(float x, float amp) {\n    return (x - floor(x)) * amp;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float width = PI * 15.0;\n    float freq = 0.001;\n    \n    vec2 warpedUv = uv;\n    float bottom = distordFreq(iTime * 0.25, iResolution.y);\n    float top =  width + distordFreq(iTime * 0.25, iResolution.y);\n    float dist = abs(fragCoord.y - top);\n    if (fragCoord.y > bottom && fragCoord.y < top) {\n        warpedUv += freq * dist * tan(fragCoord.y * 0.5);\n    }\n    \n    // Warped UV coordinates using square wave jittering\n    vec2 offset1 = vec2(0., 2.0 * sinWave(iTime, 2.0, 0.01)); // Red channel jitter\n    vec2 offset2 = vec2(0.02, 0.);                     // Green channel stays stable\n    vec2 offset3 = vec2(-0.02, squareWave(iTime, 1.0, 0.01) - 0.02); // Blue channel jitter\n    \n    // Fetch texture color for each channel with jitter\n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    // Combine the channels\n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}