{"ver":"0.1","info":{"id":"XsGcRD","date":"1521138889","viewed":473,"name":"simple_monochrome","username":"snickerbockers","description":"a simple shader that displays a texture in monochrome (greyscale).","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["blackandwhite","monochrome","greyscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * source for these weights:\n * https://stackoverflow.com/questions/687261/converting-rgb-to-grayscale-intensity\n */\nconst vec3 weight = vec3(0.2989,  0.5870, 0.1140);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 tex_sample = texture(iChannel0, uv).rgb;\n    \n    float greyscale = dot(tex_sample, weight);\n\n    fragColor = vec4(greyscale, greyscale, greyscale, 1.0);\n}","name":"Image","description":"","type":"image"}]}