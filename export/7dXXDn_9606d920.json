{"ver":"0.1","info":{"id":"7dXXDn","date":"1618468254","viewed":225,"name":"2D Lighting - No Random Sampling","username":"oneshade","description":"Improved version of this shader: [url=https://www.shadertoy.com/view/3tsXzB]https://www.shadertoy.com/view/3tsXzB[/url]\nTodo: add shadows","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2d","light","analytic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2D area lights I've been working on\n// https://www.shadertoy.com/view/fsfXDr\nfloat lightLine(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p - a, pb = p - b;\n    return acos(dot(pa, pb) / (length(pa) * length(pb))) / 3.14;\n}\n\n// https://www.shadertoy.com/view/fsfSWn\nfloat lightDisc(in vec2 p, in float r) {\n    float dd = dot(p, p);\n    if (dd < r * r) return 1.0;\n    return 1.0 - acos(r / sqrt(dd)) / 1.57;\n}\n\n// https://www.shadertoy.com/view/ssXSDn\nfloat lightBox(in vec2 p, in vec2 b) {\n    p = abs(p);\n    if (all(lessThan(p, b))) return 1.0;\n    vec2 v1 = p - vec2(b.x * sign(b.y - p.y), b.y);\n    vec2 v2 = p - vec2(b.x, b.y * sign(b.x - p.x));\n    return acos(dot(v1, v2) / (length(v1) * length(v2))) / 3.14;\n}\n\n// SDFs\nfloat sdLine(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    return length(pa - ba * clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0));\n}\n\nfloat sdDisc(in vec2 p, in float r) {\n    return length(p) - r;\n}\n\nfloat sdBox(in vec2 p, in vec2 b) {\n    vec2 q = abs(p) - b;\n    return length(max(q, 0.0)) + min(0.0, max(q.x, q.y));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    vec3 color = vec3(0.0);\n\n    // UV relative to each light\n    vec2 bp1 = uv + vec2(1.6, -0.4);\n    vec2 bp2 = uv + vec2(0.0, sin(iTime));\n    vec2 dp = uv - vec2(1.6, 0.4);\n\n    // Solid color on the insides\n    if (sdBox(bp1, vec2(0.4)) < 0.0) color.gb += 1.0;\n    else if (sdBox(bp2, vec2(0.4, 1.5)) < 0.0) color.r += 0.8;\n    else if (sdDisc(dp, 0.2) < 0.0) color += 1.0;\n\n    // Lighting on the outsides\n    else {\n        color.gb += lightBox(bp1, vec2(0.4)) * 1.5;\n        color.r += lightBox(bp2, vec2(0.4, 1.5)) * 0.65;\n        color.rb += lightDisc(dp, 0.2) * vec2(0.5, 3.0);\n        color *= 0.6; // Tone down the brightness\n    }\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}