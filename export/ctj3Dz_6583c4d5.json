{"ver":"0.1","info":{"id":"ctj3Dz","date":"1673156260","viewed":51,"name":"circle overlay eclipse","username":"hideodaikoku","description":"A circle shader that adds and subtracts circles","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","additivemask"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur){\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 p = vec2(0.0, 0.0-0.05*cos(iTime));\n    \n    vec3 col = vec3(0.9, 0.1, 0.1);\n    \n    float c = Circle(uv, p,0.4, 0.05);\n    c -= Circle(uv, p-0.3*sin(iTime*0.6),0.4-0.1*sin(iTime*0.1), 0.05);\n    \n    for(int i=0; i<6; i++){\n        float factor = 1.0;\n        if(i%2==0) factor = -1.0;\n        \n        c += Circle(uv, p+0.1*factor, float(i)*(0.1), 0.05)*factor;\n    }\n    \n    fragColor = vec4(c*col,1.0);\n}","name":"Image","description":"","type":"image"}]}