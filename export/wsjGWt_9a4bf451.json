{"ver":"0.1","info":{"id":"wsjGWt","date":"1550322451","viewed":90,"name":"Psycospace","username":"AdrianPi","description":"A pinch/punch folding/unfolding pattern","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["psycospace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x / iResolution.y;  \n    \n    float sx = 1. / 8. / iResolution.x;\n    float sy = 1. / 8. / iResolution.y;\n \n    vec3 color;\n    \n    float a = mod(iTime*0.1, 1.) * 2. * 3.141592;\n    \n    for(int i = 0; i < 8; i++)\n    {\n        for(int j = 0; j < 8; j++)\n        {\n            vec2 uv = ((fragCoord / iResolution.xy)-0.5) * 8.;\n            uv.x *= aspect;\n                       \n            vec2 uv2;\n            uv2.x = uv.x * cos(a) + uv.y * sin(a);\n            uv2.y = uv.x * -sin(a) + uv.y * cos(a);\n\n            vec2 dir = normalize(uv2);\n\n            uv2 -= dir * sin(iTime*0.1)*18.;\n\n            int ix = (mod(uv2.x,1.) < 0.2) ? 1 : 0;\n            int iy = (mod(uv2.y,1.) < 0.2) ? 2 : 0;\n\n            vec3 col = (ix | iy) != 0 ? vec3(1,1,0) : vec3(.5,0,1);\n            color += col;\n        }\n    }\n    \n    color *= (1./64.);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}