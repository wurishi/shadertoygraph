{"ver":"0.1","info":{"id":"XsG3Ry","date":"1454966646","viewed":379,"name":"Live Earth Sunlight map","username":"dine909","description":"Predicts sunset/sunrise given a coordinate and point in time (realtime by default)\n\nSet your coordinates and timezone using the #defines at the top.\n\nKEYS:\n\nA - GLOBE or GRAPH","likes":6,"published":1,"flags":48,"usePreview":1,"tags":["2d","sunset","clock","calculator","sunrise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Check 'Buf A' for main shader.\n\n// if you want the earth map check https://www.shadertoy.com/view/4sGGR3#\n\n\n// FXAA from https://github.com/mattdesl/glsl-fxaa\n\n#define FXAA_REDUCE_MIN   (1.0/ 128.0)\n#define FXAA_REDUCE_MUL   (1.0 / 8.0)\n#define FXAA_SPAN_MAX     2.5\n\nvoid texcoords(vec2 fragCoord, vec2 resolution,\n               out vec2 v_rgbNW, out vec2 v_rgbNE,\n               out vec2 v_rgbSW, out vec2 v_rgbSE,\n               out vec2 v_rgbM) {\n    vec2 inverseVP = 1.0 / resolution.xy;\n    v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\n    v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\n    v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\n    v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\n    v_rgbM = vec2(fragCoord * inverseVP);\n}\n\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\n          vec2 v_rgbNW, vec2 v_rgbNE, \n          vec2 v_rgbSW, vec2 v_rgbSE, \n          vec2 v_rgbM) {\n    vec4 color;\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n    vec3 rgbNW = texture(tex, v_rgbNW).xyz;\n    vec3 rgbNE = texture(tex, v_rgbNE).xyz;\n    vec3 rgbSW = texture(tex, v_rgbSW).xyz;\n    vec3 rgbSE = texture(tex, v_rgbSE).xyz;\n    vec4 texColor = texture(tex, v_rgbM);\n    vec3 rgbM  = texColor.xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot(rgbM,  luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n    mediump vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                  dir * rcpDirMin)) * inverseVP;\n    vec3 rgbA = 0.5 * (\n        texture(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n        texture(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n        texture(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n        texture(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, texColor.a);\n    else\n        color = vec4(rgbB, texColor.a);\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mediump vec2 v_rgbNW;\n    mediump vec2 v_rgbNE;\n    mediump vec2 v_rgbSW;\n    mediump vec2 v_rgbSE;\n    mediump vec2 v_rgbM;\n    texcoords(fragCoord, iResolution.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\n    fragColor = fxaa( iChannel0, fragCoord, iResolution.xy, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);   \n//    fragColor = vec4(texture(iChannel1, fragCoord.xy/iResolution.xy).xyz,1.);   \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define _N \n#define _S -\n#define _E \n#define _W -\n\n\n#define USE_MAP\n\n#define hz1 (.5+0.5*sin(iTime))\n#define SSW mod(iTime*0.5,1.)>0.5?1.:0.\n\n//PUT YOUR COORDINATES HERE\n//uncomment CLOCK_OFFSET TO UTC (hours) if you are in the selected location\n\n//New York USA\n//b#define LOCATION vec2(_W 74.0059,_N 40.7127)\n//#define CLOCK_OFFSET\t 5.\n\n//London UK\n//#define LOCATION vec2(_W 0.1275, _N 51.5072 )\n//#define CLOCK_OFFSET\t 0.\n\n//Surrey UK\n#define LOCATION vec2(_W 0.5703, _N 51.2365 )\n#define CLOCK_OFFSET\t 0.\n\n//Madrid Spain\n//#define LOCATION vec2(_W 3.7167,_N 40.4000)\n//#define CLOCK_OFFSET\t -1.\n\n//Glasgow UK\n//#define LOCATION vec2(_W 4.2590,_N 55.8580)\n//#define CLOCK_OFFSET\t 0.\n\n//Equator zero\n//#define LOCATION vec2(_W 0.,_N 0.)\n//#define CLOCK_OFFSET\t 0.\n\n//Sydney Australia\n//#define LOCATION vec2(_E 151.2094,_S 33.8650)\n//#define CLOCK_OFFSET\t -11.\n\n\n//DISPLAY FLAGS\n#define SHOW_NOW \t0\n#define ANIM_YEAR \t0\n\n#define TS_MIN\t60.\n#define TS_HOUR\t60.*TS_MIN\n#define TS_DAY\t24.*TS_HOUR\n\nfloat remap(float value, float low1,float high1, float low2,float high2,bool c){float r=low2 + (value - low1) * (high2 - low2) / (high1 - low1);return c?clamp(r,min(low2,high2),max(low2,high2)):r;}\nfloat remap(float value, float low2,float high2,bool c){return remap(value,0.,1.,low2,high2,c);}\nfloat antiAlias(float x) {return (x-(1.0-2.0/iResolution.y))*(iResolution.y/2.0);}\nfloat blur(float x) {return pow(smoothstep(.945,1.0,x),10.);}\n\n#define PI 3.14159265359\n\n\nvec2 astro(vec4 pTime,vec2 location)\n{\n\n    /*\nGet the Julian day number\nhttps://en.wikipedia.org/wiki/Julian_day\n*/\n\n    float a=floor((14.-(pTime.y))/12.);\n    float y=pTime.x+4800.-a;\n    float m=(pTime.y)+(12.*a)-3.;\n    float jdn=pTime.z+floor(((153.*m)+2.)/5.)+(365.*y)+floor(y/4.)-floor(y/100.)+floor(y/400.)-32045.;\n\n    //Set the constants\n    float b4=location.y;\n    float b5=location.x;\n    float b6=0.;\n\n    /*\nDo the solar simulation\nhttps://www.esrl.noaa.gov/gmd/grad/solcalc/NOAA_Solar_Calculations_day.xls\n*/\n\n    float e3=pTime.w/86400.;\n    float f3=jdn-0.5+e3-(b6/24.);\n    float g3=(f3-2451545.)/36525.; \n    float i3=mod(280.46646+g3*(36000.76983+g3*0.0003032),360.); \n    float j3=357.52911+g3*(35999.05029-0.0001537*g3); \n    float k3=0.016708634-g3*(0.000042037+0.0000001267*g3); \n    float l3=sin(radians(j3))*(1.914602-g3*(0.004817+0.000014*g3))+sin(radians(2.*j3))*(0.019993-0.000101*g3)+sin(radians(3.*j3))*0.000289; \n    float m3=i3+l3; \n    float n3=j3+l3; \n    float o3=(1.000001018*(1.-k3*k3))/(1.+k3*cos(radians(n3))); \n    float p3=m3-0.00569-0.00478*sin(radians(125.04-1934.136*g3)); \n    float q3=23.+(26.+((21.448-g3*(46.815+g3*(0.00059-g3*0.001813))))/60.)/60.; \n    float r3=q3+0.00256*cos(radians(125.04-1934.136*g3)); \n    float s3=degrees(atan(cos(radians(p3)),cos(radians(r3))*sin(radians(p3)))); \n    float t3=degrees(asin(sin(radians(r3))*sin(radians(p3)))); \n    float u3=tan(radians(r3/2.))*tan(radians(r3/2.)); \n    float v3=4.*degrees(u3*sin(2.*radians(i3))-2.*k3*sin(radians(j3))+4.*k3*u3*sin(radians(j3))*cos(2.*radians(i3))-0.5*u3*u3*sin(4.*radians(i3))-1.25*k3*k3*sin(2.*radians(j3))); \n    float w3=degrees(acos(cos(radians(90.833))/(cos(radians(b4))*cos(radians(t3)))-tan(radians(b4))*tan(radians(t3)))); \n    float x3=(720.-4.*b5-v3+b6*60.)/1440.; \n    float y3=x3-w3*4./1440.; \n    float z3=x3+w3*4./1440.; \n    float aa3=8.*w3; \n    float ab3=mod(e3*1440.+v3+4.*b5-60.*b6,1440.); \n    float ac3=(ab3/4.<0.?ab3/4.+180.:ab3/4.-180.); \n    float ad3=degrees(acos(sin(radians(b4))*sin(radians(t3))+cos(radians(b4))*cos(radians(t3))*cos(radians(ac3)))); \n    float ae3=90.-ad3; \n    float af3=(ae3>85.?0.:(ae3>5.?58.1/tan(radians(ae3))-0.07/pow(tan(radians(ae3)),3.)+0.000086/pow(tan(radians(ae3)),5.):(ae3>-0.575?1735.+ae3*(-518.2+ae3*(103.4+ae3*(-12.79+ae3*0.711))):-20.772/tan(radians(ae3)))))/3600.; \n    float ag3=ae3+af3; \n    float ah3=(ac3>0.?mod(degrees(acos(((sin(radians(b4))*cos(radians(ad3)))-sin(radians(t3)))/(cos(radians(b4))*sin(radians(ad3)))))+180.,360.):mod(540.-degrees(acos(((sin(radians(b4))*cos(radians(ad3)))-sin(radians(t3)))/(cos(radians(b4))*sin(radians(ad3))))),360.)); \n\n    vec2 res=vec2(ag3,t3);\n    return res;\n\n}\nconst float KEY_A = 65.5/256.0;\nconst float KEY_B = 66.5/256.0;\n\nfloat isKeyPressed(float key)\n{\n    return texture( iChannel0, vec2(key, 3.5) ).x;\n}\n\nfloat plot(vec2 p,float a,float w)\n{\n    p.y-=0.5;\n    //w*=(iResolution.y/480.);\n    return w-(distance(p.y,a));\n}\n\n\nfloat graph(vec2 p)\n{\n    float res=plot(p.xy,0.,1.);\n    // p.x-=iTime*0.01;\n    res=max(res,plot(p.xy,0.0,1.001)*(1.02-mod(p.x,1./24.)));\n    return res;\n}\n\nvec3 render(vec3 incol,vec3 col,float d)\n{\n    // d*=0.991;\n    // float aares=clamp(antiAlias((d)), 0.0, 1.0);\n    float aares=smoothstep(((d)), .9980, .0);\n    return clamp(mix(incol,col,aares),0.,1.);\n}\n\n#define LINE(a,b) line(p,a,b)\n\nfloat line( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float d = length( pa - ba*h );\n\n    return (1.0 - d);\n}\n\n\nfloat getMap(vec2 p){ float res=0.;\n                     #ifdef USE_MAP\n                     res=max(res,LINE(vec2(0.233333,0.991667), vec2(0.291667,0.991667))); res=max(res,LINE(vec2(0.341667,0.991667), vec2(0.408333,0.991667))); \n                     res=max(res,LINE(vec2(0.208333,0.983333), vec2(0.283333,0.983333))); res=max(res,LINE(vec2(0.3,0.983333), vec2(0.425,0.983333))); \n                     res=max(res,LINE(vec2(0.208333,0.975), vec2(0.416667,0.975))); res=max(res,LINE(vec2(0.5,0.975), vec2(0.5,0.975))); res=max(res,LINE(vec2(0.516667,0.975), vec2(0.533333,0.975))); res=max(res,LINE(vec2(0.6,0.975), vec2(0.6,0.975))); res=max(res,LINE(vec2(0.625,0.975), vec2(0.625,0.975))); res=max(res,LINE(vec2(0.716667,0.975), vec2(0.733333,0.975))); \n                     res=max(res,LINE(vec2(0.158333,0.966667), vec2(0.166667,0.966667))); res=max(res,LINE(vec2(0.183333,0.966667), vec2(0.2,0.966667))); res=max(res,LINE(vec2(0.216667,0.966667), vec2(0.258333,0.966667))); res=max(res,LINE(vec2(0.275,0.966667), vec2(0.408333,0.966667))); res=max(res,LINE(vec2(0.5,0.966667), vec2(0.525,0.966667))); res=max(res,LINE(vec2(0.741667,0.966667), vec2(0.75,0.966667))); \n                     res=max(res,LINE(vec2(0.141667,0.958333), vec2(0.158333,0.958333))); res=max(res,LINE(vec2(0.208333,0.958333), vec2(0.208333,0.958333))); res=max(res,LINE(vec2(0.233333,0.958333), vec2(0.25,0.958333))); res=max(res,LINE(vec2(0.275,0.958333), vec2(0.416667,0.958333))); res=max(res,LINE(vec2(0.508333,0.958333), vec2(0.525,0.958333))); res=max(res,LINE(vec2(0.75,0.958333), vec2(0.75,0.958333))); \n                     res=max(res,LINE(vec2(0.133333,0.95), vec2(0.191667,0.95))); res=max(res,LINE(vec2(0.216667,0.95), vec2(0.216667,0.95))); res=max(res,LINE(vec2(0.241667,0.95), vec2(0.25,0.95))); res=max(res,LINE(vec2(0.283333,0.95), vec2(0.408333,0.95))); res=max(res,LINE(vec2(0.633333,0.95), vec2(0.65,0.95))); res=max(res,LINE(vec2(0.716667,0.95), vec2(0.775,0.95))); res=max(res,LINE(vec2(0.85,0.95), vec2(0.858333,0.95))); \n                     res=max(res,LINE(vec2(0.125,0.941667), vec2(0.141667,0.941667))); res=max(res,LINE(vec2(0.158333,0.941667), vec2(0.158333,0.941667))); res=max(res,LINE(vec2(0.208333,0.941667), vec2(0.208333,0.941667))); res=max(res,LINE(vec2(0.225,0.941667), vec2(0.241667,0.941667))); res=max(res,LINE(vec2(0.316667,0.941667), vec2(0.408333,0.941667))); res=max(res,LINE(vec2(0.625,0.941667), vec2(0.625,0.941667))); res=max(res,LINE(vec2(0.708333,0.941667), vec2(0.775,0.941667))); \n                     res=max(res,LINE(vec2(0.125,0.933333), vec2(0.15,0.933333))); res=max(res,LINE(vec2(0.175,0.933333), vec2(0.175,0.933333))); res=max(res,LINE(vec2(0.191667,0.933333), vec2(0.258333,0.933333))); res=max(res,LINE(vec2(0.316667,0.933333), vec2(0.4,0.933333))); res=max(res,LINE(vec2(0.616667,0.933333), vec2(0.616667,0.933333))); res=max(res,LINE(vec2(0.658333,0.933333), vec2(0.658333,0.933333))); res=max(res,LINE(vec2(0.691667,0.933333), vec2(0.791667,0.933333))); res=max(res,LINE(vec2(0.808333,0.933333), vec2(0.816667,0.933333))); \n                     res=max(res,LINE(vec2(0.125,0.925), vec2(0.175,0.925))); res=max(res,LINE(vec2(0.191667,0.925), vec2(0.208333,0.925))); res=max(res,LINE(vec2(0.225,0.925), vec2(0.266667,0.925))); res=max(res,LINE(vec2(0.316667,0.925), vec2(0.4,0.925))); res=max(res,LINE(vec2(0.608333,0.925), vec2(0.616667,0.925))); res=max(res,LINE(vec2(0.658333,0.925), vec2(0.658333,0.925))); res=max(res,LINE(vec2(0.683333,0.925), vec2(0.816667,0.925))); res=max(res,LINE(vec2(0.841667,0.925), vec2(0.875,0.925))); \n                     res=max(res,LINE(vec2(0.025,0.916667), vec2(0.075,0.916667))); res=max(res,LINE(vec2(0.108333,0.916667), vec2(0.125,0.916667))); res=max(res,LINE(vec2(0.15,0.916667), vec2(0.183333,0.916667))); res=max(res,LINE(vec2(0.208333,0.916667), vec2(0.208333,0.916667))); res=max(res,LINE(vec2(0.225,0.916667), vec2(0.275,0.916667))); res=max(res,LINE(vec2(0.316667,0.916667), vec2(0.4,0.916667))); res=max(res,LINE(vec2(0.533333,0.916667), vec2(0.55,0.916667))); res=max(res,LINE(vec2(0.658333,0.916667), vec2(0.658333,0.916667))); res=max(res,LINE(vec2(0.675,0.916667), vec2(0.9,0.916667))); \n                     res=max(res,LINE(vec2(0.0166667,0.908333), vec2(0.275,0.908333))); res=max(res,LINE(vec2(0.325,0.908333), vec2(0.391667,0.908333))); res=max(res,LINE(vec2(0.508333,0.908333), vec2(0.566667,0.908333))); res=max(res,LINE(vec2(0.6,0.908333), vec2(0.6,0.908333))); res=max(res,LINE(vec2(0.625,0.908333), vec2(0.958333,0.908333))); \n                     res=max(res,LINE(vec2(0.025,0.9), vec2(0.241667,0.9))); res=max(res,LINE(vec2(0.258333,0.9), vec2(0.258333,0.9))); res=max(res,LINE(vec2(0.275,0.9), vec2(0.291667,0.9))); res=max(res,LINE(vec2(0.325,0.9), vec2(0.375,0.9))); res=max(res,LINE(vec2(0.508333,0.9), vec2(0.575,0.9))); res=max(res,LINE(vec2(0.6,0.9), vec2(0.658333,0.9))); res=max(res,LINE(vec2(0.675,0.9), vec2(0.975,0.9))); \n                     res=max(res,LINE(vec2(0.0166667,0.891667), vec2(0.233333,0.891667))); res=max(res,LINE(vec2(0.266667,0.891667), vec2(0.275,0.891667))); res=max(res,LINE(vec2(0.291667,0.891667), vec2(0.291667,0.891667))); res=max(res,LINE(vec2(0.325,0.891667), vec2(0.366667,0.891667))); res=max(res,LINE(vec2(0.408333,0.891667), vec2(0.425,0.891667))); res=max(res,LINE(vec2(0.508333,0.891667), vec2(0.558333,0.891667))); res=max(res,LINE(vec2(0.583333,0.891667), vec2(0.983333,0.891667))); \n                     res=max(res,LINE(vec2(0.0166667,0.883333), vec2(0.241667,0.883333))); res=max(res,LINE(vec2(0.258333,0.883333), vec2(0.283333,0.883333))); res=max(res,LINE(vec2(0.325,0.883333), vec2(0.35,0.883333))); res=max(res,LINE(vec2(0.408333,0.883333), vec2(0.425,0.883333))); res=max(res,LINE(vec2(0.5,0.883333), vec2(0.958333,0.883333))); res=max(res,LINE(vec2(0.975,0.883333), vec2(0.975,0.883333))); \n                     res=max(res,LINE(vec2(0,0.875), vec2(0,0.875))); res=max(res,LINE(vec2(0.0166667,0.875), vec2(0.216667,0.875))); res=max(res,LINE(vec2(0.233333,0.875), vec2(0.241667,0.875))); res=max(res,LINE(vec2(0.275,0.875), vec2(0.283333,0.875))); res=max(res,LINE(vec2(0.333333,0.875), vec2(0.35,0.875))); res=max(res,LINE(vec2(0.491667,0.875), vec2(0.516667,0.875))); res=max(res,LINE(vec2(0.533333,0.875), vec2(0.958333,0.875))); \n                     res=max(res,LINE(vec2(0.0166667,0.866667), vec2(0.208333,0.866667))); res=max(res,LINE(vec2(0.258333,0.866667), vec2(0.266667,0.866667))); res=max(res,LINE(vec2(0.333333,0.866667), vec2(0.35,0.866667))); res=max(res,LINE(vec2(0.483333,0.866667), vec2(0.508333,0.866667))); res=max(res,LINE(vec2(0.533333,0.866667), vec2(0.941667,0.866667))); \n                     res=max(res,LINE(vec2(0.00833333,0.858333), vec2(0.208333,0.858333))); res=max(res,LINE(vec2(0.258333,0.858333), vec2(0.275,0.858333))); res=max(res,LINE(vec2(0.341667,0.858333), vec2(0.341667,0.858333))); res=max(res,LINE(vec2(0.483333,0.858333), vec2(0.516667,0.858333))); res=max(res,LINE(vec2(0.533333,0.858333), vec2(0.891667,0.858333))); res=max(res,LINE(vec2(0.916667,0.858333), vec2(0.933333,0.858333))); \n                     res=max(res,LINE(vec2(0.025,0.85), vec2(0.0416667,0.85))); res=max(res,LINE(vec2(0.0916667,0.85), vec2(0.208333,0.85))); res=max(res,LINE(vec2(0.258333,0.85), vec2(0.275,0.85))); res=max(res,LINE(vec2(0.291667,0.85), vec2(0.291667,0.85))); res=max(res,LINE(vec2(0.458333,0.85), vec2(0.458333,0.85))); res=max(res,LINE(vec2(0.483333,0.85), vec2(0.516667,0.85))); res=max(res,LINE(vec2(0.533333,0.85), vec2(0.85,0.85))); res=max(res,LINE(vec2(0.866667,0.85), vec2(0.891667,0.85))); res=max(res,LINE(vec2(0.908333,0.85), vec2(0.916667,0.85))); \n                     res=max(res,LINE(vec2(0.0333333,0.841667), vec2(0.0333333,0.841667))); res=max(res,LINE(vec2(0.05,0.841667), vec2(0.05,0.841667))); res=max(res,LINE(vec2(0.1,0.841667), vec2(0.208333,0.841667))); res=max(res,LINE(vec2(0.258333,0.841667), vec2(0.291667,0.841667))); res=max(res,LINE(vec2(0.45,0.841667), vec2(0.458333,0.841667))); res=max(res,LINE(vec2(0.5,0.841667), vec2(0.508333,0.841667))); res=max(res,LINE(vec2(0.533333,0.841667), vec2(0.85,0.841667))); res=max(res,LINE(vec2(0.9,0.841667), vec2(0.908333,0.841667))); \n                     res=max(res,LINE(vec2(0.0333333,0.833333), vec2(0.0333333,0.833333))); res=max(res,LINE(vec2(0.1,0.833333), vec2(0.225,0.833333))); res=max(res,LINE(vec2(0.25,0.833333), vec2(0.291667,0.833333))); res=max(res,LINE(vec2(0.45,0.833333), vec2(0.458333,0.833333))); res=max(res,LINE(vec2(0.491667,0.833333), vec2(0.508333,0.833333))); res=max(res,LINE(vec2(0.525,0.833333), vec2(0.841667,0.833333))); res=max(res,LINE(vec2(0.9,0.833333), vec2(0.908333,0.833333))); \n                     res=max(res,LINE(vec2(0.0166667,0.825), vec2(0.0166667,0.825))); res=max(res,LINE(vec2(0.108333,0.825), vec2(0.308333,0.825))); res=max(res,LINE(vec2(0.441667,0.825), vec2(0.458333,0.825))); res=max(res,LINE(vec2(0.491667,0.825), vec2(0.491667,0.825))); res=max(res,LINE(vec2(0.516667,0.825), vec2(0.841667,0.825))); res=max(res,LINE(vec2(0.9,0.825), vec2(0.908333,0.825))); \n                     res=max(res,LINE(vec2(0.00833333,0.816667), vec2(0.00833333,0.816667))); res=max(res,LINE(vec2(0.116667,0.816667), vec2(0.308333,0.816667))); res=max(res,LINE(vec2(0.441667,0.816667), vec2(0.466667,0.816667))); res=max(res,LINE(vec2(0.483333,0.816667), vec2(0.858333,0.816667))); res=max(res,LINE(vec2(0.9,0.816667), vec2(0.9,0.816667))); \n                     res=max(res,LINE(vec2(0.116667,0.808333), vec2(0.308333,0.808333))); res=max(res,LINE(vec2(0.441667,0.808333), vec2(0.441667,0.808333))); res=max(res,LINE(vec2(0.458333,0.808333), vec2(0.466667,0.808333))); res=max(res,LINE(vec2(0.483333,0.808333), vec2(0.858333,0.808333))); res=max(res,LINE(vec2(0.9,0.808333), vec2(0.9,0.808333))); res=max(res,LINE(vec2(0.966667,0.808333), vec2(0.975,0.808333))); \n                     res=max(res,LINE(vec2(0.116667,0.8), vec2(0.3,0.8))); res=max(res,LINE(vec2(0.475,0.8), vec2(0.858333,0.8))); \n                     res=max(res,LINE(vec2(0.125,0.791667), vec2(0.283333,0.791667))); res=max(res,LINE(vec2(0.308333,0.791667), vec2(0.316667,0.791667))); res=max(res,LINE(vec2(0.466667,0.791667), vec2(0.858333,0.791667))); \n                     res=max(res,LINE(vec2(0.125,0.783333), vec2(0.216667,0.783333))); res=max(res,LINE(vec2(0.233333,0.783333), vec2(0.283333,0.783333))); res=max(res,LINE(vec2(0.308333,0.783333), vec2(0.316667,0.783333))); res=max(res,LINE(vec2(0.458333,0.783333), vec2(0.841667,0.783333))); \n                     res=max(res,LINE(vec2(0.133333,0.775), vec2(0.3,0.775))); res=max(res,LINE(vec2(0.466667,0.775), vec2(0.558333,0.775))); res=max(res,LINE(vec2(0.575,0.775), vec2(0.6,0.775))); res=max(res,LINE(vec2(0.616667,0.775), vec2(0.625,0.775))); res=max(res,LINE(vec2(0.641667,0.775), vec2(0.841667,0.775))); \n                     res=max(res,LINE(vec2(0.133333,0.766667), vec2(0.233333,0.766667))); res=max(res,LINE(vec2(0.25,0.766667), vec2(0.275,0.766667))); res=max(res,LINE(vec2(0.291667,0.766667), vec2(0.291667,0.766667))); res=max(res,LINE(vec2(0.466667,0.766667), vec2(0.541667,0.766667))); res=max(res,LINE(vec2(0.558333,0.766667), vec2(0.558333,0.766667))); res=max(res,LINE(vec2(0.575,0.766667), vec2(0.591667,0.766667))); res=max(res,LINE(vec2(0.608333,0.766667), vec2(0.625,0.766667))); res=max(res,LINE(vec2(0.641667,0.766667), vec2(0.841667,0.766667))); \n                     res=max(res,LINE(vec2(0.133333,0.758333), vec2(0.233333,0.758333))); res=max(res,LINE(vec2(0.25,0.758333), vec2(0.275,0.758333))); res=max(res,LINE(vec2(0.45,0.758333), vec2(0.483333,0.758333))); res=max(res,LINE(vec2(0.5,0.758333), vec2(0.5,0.758333))); res=max(res,LINE(vec2(0.516667,0.758333), vec2(0.541667,0.758333))); res=max(res,LINE(vec2(0.583333,0.758333), vec2(0.591667,0.758333))); res=max(res,LINE(vec2(0.608333,0.758333), vec2(0.833333,0.758333))); res=max(res,LINE(vec2(0.858333,0.758333), vec2(0.866667,0.758333))); \n                     res=max(res,LINE(vec2(0.133333,0.75), vec2(0.266667,0.75))); res=max(res,LINE(vec2(0.45,0.75), vec2(0.475,0.75))); res=max(res,LINE(vec2(0.491667,0.75), vec2(0.508333,0.75))); res=max(res,LINE(vec2(0.525,0.75), vec2(0.541667,0.75))); res=max(res,LINE(vec2(0.558333,0.75), vec2(0.558333,0.75))); res=max(res,LINE(vec2(0.583333,0.75), vec2(0.6,0.75))); res=max(res,LINE(vec2(0.616667,0.75), vec2(0.825,0.75))); res=max(res,LINE(vec2(0.85,0.75), vec2(0.858333,0.75))); \n                     res=max(res,LINE(vec2(0.133333,0.741667), vec2(0.266667,0.741667))); res=max(res,LINE(vec2(0.45,0.741667), vec2(0.466667,0.741667))); res=max(res,LINE(vec2(0.491667,0.741667), vec2(0.491667,0.741667))); res=max(res,LINE(vec2(0.508333,0.741667), vec2(0.6,0.741667))); res=max(res,LINE(vec2(0.616667,0.741667), vec2(0.791667,0.741667))); res=max(res,LINE(vec2(0.808333,0.741667), vec2(0.816667,0.741667))); \n                     res=max(res,LINE(vec2(0.133333,0.733333), vec2(0.258333,0.733333))); res=max(res,LINE(vec2(0.441667,0.733333), vec2(0.475,0.733333))); res=max(res,LINE(vec2(0.491667,0.733333), vec2(0.491667,0.733333))); res=max(res,LINE(vec2(0.525,0.733333), vec2(0.6,0.733333))); res=max(res,LINE(vec2(0.616667,0.733333), vec2(0.8,0.733333))); res=max(res,LINE(vec2(0.816667,0.733333), vec2(0.816667,0.733333))); res=max(res,LINE(vec2(0.85,0.733333), vec2(0.85,0.733333))); \n                     res=max(res,LINE(vec2(0.133333,0.725), vec2(0.258333,0.725))); res=max(res,LINE(vec2(0.45,0.725), vec2(0.458333,0.725))); res=max(res,LINE(vec2(0.508333,0.725), vec2(0.508333,0.725))); res=max(res,LINE(vec2(0.525,0.725), vec2(0.525,0.725))); res=max(res,LINE(vec2(0.541667,0.725), vec2(0.6,0.725))); res=max(res,LINE(vec2(0.616667,0.725), vec2(0.791667,0.725))); res=max(res,LINE(vec2(0.816667,0.725), vec2(0.816667,0.725))); res=max(res,LINE(vec2(0.85,0.725), vec2(0.85,0.725))); \n                     res=max(res,LINE(vec2(0.133333,0.716667), vec2(0.258333,0.716667))); res=max(res,LINE(vec2(0.45,0.716667), vec2(0.45,0.716667))); res=max(res,LINE(vec2(0.475,0.716667), vec2(0.491667,0.716667))); res=max(res,LINE(vec2(0.533333,0.716667), vec2(0.533333,0.716667))); res=max(res,LINE(vec2(0.55,0.716667), vec2(0.791667,0.716667))); res=max(res,LINE(vec2(0.816667,0.716667), vec2(0.816667,0.716667))); res=max(res,LINE(vec2(0.841667,0.716667), vec2(0.85,0.716667))); \n                     res=max(res,LINE(vec2(0.141667,0.708333), vec2(0.25,0.708333))); res=max(res,LINE(vec2(0.45,0.708333), vec2(0.491667,0.708333))); res=max(res,LINE(vec2(0.533333,0.708333), vec2(0.533333,0.708333))); res=max(res,LINE(vec2(0.558333,0.708333), vec2(0.791667,0.708333))); res=max(res,LINE(vec2(0.816667,0.708333), vec2(0.816667,0.708333))); res=max(res,LINE(vec2(0.833333,0.708333), vec2(0.85,0.708333))); \n                     res=max(res,LINE(vec2(0.15,0.7), vec2(0.25,0.7))); res=max(res,LINE(vec2(0.45,0.7), vec2(0.491667,0.7))); res=max(res,LINE(vec2(0.566667,0.7), vec2(0.791667,0.7))); res=max(res,LINE(vec2(0.825,0.7), vec2(0.833333,0.7))); \n                     res=max(res,LINE(vec2(0.15,0.691667), vec2(0.241667,0.691667))); res=max(res,LINE(vec2(0.441667,0.691667), vec2(0.508333,0.691667))); res=max(res,LINE(vec2(0.525,0.691667), vec2(0.525,0.691667))); res=max(res,LINE(vec2(0.566667,0.691667), vec2(0.8,0.691667))); res=max(res,LINE(vec2(0.825,0.691667), vec2(0.825,0.691667))); \n                     res=max(res,LINE(vec2(0.15,0.683333), vec2(0.241667,0.683333))); res=max(res,LINE(vec2(0.441667,0.683333), vec2(0.8,0.683333))); \n                     res=max(res,LINE(vec2(0.158333,0.675), vec2(0.216667,0.675))); res=max(res,LINE(vec2(0.241667,0.675), vec2(0.241667,0.675))); res=max(res,LINE(vec2(0.441667,0.675), vec2(0.591667,0.675))); res=max(res,LINE(vec2(0.608333,0.675), vec2(0.8,0.675))); \n                     res=max(res,LINE(vec2(0.166667,0.666667), vec2(0.2,0.666667))); res=max(res,LINE(vec2(0.241667,0.666667), vec2(0.241667,0.666667))); res=max(res,LINE(vec2(0.425,0.666667), vec2(0.8,0.666667))); \n                     res=max(res,LINE(vec2(0.158333,0.658333), vec2(0.158333,0.658333))); res=max(res,LINE(vec2(0.175,0.658333), vec2(0.2,0.658333))); res=max(res,LINE(vec2(0.25,0.658333), vec2(0.25,0.658333))); res=max(res,LINE(vec2(0.433333,0.658333), vec2(0.6,0.658333))); res=max(res,LINE(vec2(0.616667,0.658333), vec2(0.791667,0.658333))); \n                     res=max(res,LINE(vec2(0.175,0.65), vec2(0.2,0.65))); res=max(res,LINE(vec2(0.258333,0.65), vec2(0.258333,0.65))); res=max(res,LINE(vec2(0.433333,0.65), vec2(0.558333,0.65))); res=max(res,LINE(vec2(0.575,0.65), vec2(0.608333,0.65))); res=max(res,LINE(vec2(0.633333,0.65), vec2(0.8,0.65))); \n                     res=max(res,LINE(vec2(0.166667,0.641667), vec2(0.191667,0.641667))); res=max(res,LINE(vec2(0.425,0.641667), vec2(0.558333,0.641667))); res=max(res,LINE(vec2(0.575,0.641667), vec2(0.625,0.641667))); res=max(res,LINE(vec2(0.658333,0.641667), vec2(0.783333,0.641667))); res=max(res,LINE(vec2(0.8,0.641667), vec2(0.8,0.641667))); \n                     res=max(res,LINE(vec2(0.183333,0.633333), vec2(0.191667,0.633333))); res=max(res,LINE(vec2(0.25,0.633333), vec2(0.25,0.633333))); res=max(res,LINE(vec2(0.266667,0.633333), vec2(0.266667,0.633333))); res=max(res,LINE(vec2(0.425,0.633333), vec2(0.625,0.633333))); res=max(res,LINE(vec2(0.658333,0.633333), vec2(0.775,0.633333))); \n                     res=max(res,LINE(vec2(0.183333,0.625), vec2(0.2,0.625))); res=max(res,LINE(vec2(0.225,0.625), vec2(0.225,0.625))); res=max(res,LINE(vec2(0.258333,0.625), vec2(0.266667,0.625))); res=max(res,LINE(vec2(0.425,0.625), vec2(0.625,0.625))); res=max(res,LINE(vec2(0.666667,0.625), vec2(0.7,0.625))); res=max(res,LINE(vec2(0.725,0.625), vec2(0.758333,0.625))); \n                     res=max(res,LINE(vec2(0.0416667,0.616667), vec2(0.0416667,0.616667))); res=max(res,LINE(vec2(0.183333,0.616667), vec2(0.2,0.616667))); res=max(res,LINE(vec2(0.225,0.616667), vec2(0.225,0.616667))); res=max(res,LINE(vec2(0.266667,0.616667), vec2(0.275,0.616667))); res=max(res,LINE(vec2(0.425,0.616667), vec2(0.566667,0.616667))); res=max(res,LINE(vec2(0.583333,0.616667), vec2(0.625,0.616667))); res=max(res,LINE(vec2(0.666667,0.616667), vec2(0.7,0.616667))); res=max(res,LINE(vec2(0.725,0.616667), vec2(0.75,0.616667))); res=max(res,LINE(vec2(0.766667,0.616667), vec2(0.766667,0.616667))); \n                     res=max(res,LINE(vec2(0.191667,0.608333), vec2(0.225,0.608333))); res=max(res,LINE(vec2(0.258333,0.608333), vec2(0.266667,0.608333))); res=max(res,LINE(vec2(0.283333,0.608333), vec2(0.283333,0.608333))); res=max(res,LINE(vec2(0.425,0.608333), vec2(0.566667,0.608333))); res=max(res,LINE(vec2(0.583333,0.608333), vec2(0.616667,0.608333))); res=max(res,LINE(vec2(0.675,0.608333), vec2(0.691667,0.608333))); res=max(res,LINE(vec2(0.733333,0.608333), vec2(0.766667,0.608333))); res=max(res,LINE(vec2(0.8,0.608333), vec2(0.8,0.608333))); \n                     res=max(res,LINE(vec2(0.2,0.6), vec2(0.225,0.6))); res=max(res,LINE(vec2(0.4,0.6), vec2(0.4,0.6))); res=max(res,LINE(vec2(0.425,0.6), vec2(0.566667,0.6))); res=max(res,LINE(vec2(0.591667,0.6), vec2(0.608333,0.6))); res=max(res,LINE(vec2(0.675,0.6), vec2(0.691667,0.6))); res=max(res,LINE(vec2(0.733333,0.6), vec2(0.758333,0.6))); res=max(res,LINE(vec2(0.8,0.6), vec2(0.8,0.6))); \n                     res=max(res,LINE(vec2(0.216667,0.591667), vec2(0.233333,0.591667))); res=max(res,LINE(vec2(0.425,0.591667), vec2(0.575,0.591667))); res=max(res,LINE(vec2(0.591667,0.591667), vec2(0.608333,0.591667))); res=max(res,LINE(vec2(0.675,0.591667), vec2(0.683333,0.591667))); res=max(res,LINE(vec2(0.741667,0.591667), vec2(0.758333,0.591667))); res=max(res,LINE(vec2(0.8,0.591667), vec2(0.8,0.591667))); res=max(res,LINE(vec2(0.866667,0.591667), vec2(0.866667,0.591667))); \n                     res=max(res,LINE(vec2(0.216667,0.583333), vec2(0.233333,0.583333))); res=max(res,LINE(vec2(0.3,0.583333), vec2(0.3,0.583333))); res=max(res,LINE(vec2(0.425,0.583333), vec2(0.575,0.583333))); res=max(res,LINE(vec2(0.591667,0.583333), vec2(0.6,0.583333))); res=max(res,LINE(vec2(0.675,0.583333), vec2(0.683333,0.583333))); res=max(res,LINE(vec2(0.741667,0.583333), vec2(0.766667,0.583333))); res=max(res,LINE(vec2(0.8,0.583333), vec2(0.8,0.583333))); \n                     res=max(res,LINE(vec2(0.233333,0.575), vec2(0.233333,0.575))); res=max(res,LINE(vec2(0.425,0.575), vec2(0.583333,0.575))); res=max(res,LINE(vec2(0.675,0.575), vec2(0.683333,0.575))); res=max(res,LINE(vec2(0.75,0.575), vec2(0.766667,0.575))); res=max(res,LINE(vec2(0.8,0.575), vec2(0.808333,0.575))); \n                     res=max(res,LINE(vec2(0.233333,0.566667), vec2(0.233333,0.566667))); res=max(res,LINE(vec2(0.266667,0.566667), vec2(0.275,0.566667))); res=max(res,LINE(vec2(0.291667,0.566667), vec2(0.3,0.566667))); res=max(res,LINE(vec2(0.425,0.566667), vec2(0.6,0.566667))); res=max(res,LINE(vec2(0.675,0.566667), vec2(0.683333,0.566667))); res=max(res,LINE(vec2(0.75,0.566667), vec2(0.758333,0.566667))); res=max(res,LINE(vec2(0.808333,0.566667), vec2(0.808333,0.566667))); \n                     res=max(res,LINE(vec2(0.233333,0.558333), vec2(0.233333,0.558333))); res=max(res,LINE(vec2(0.266667,0.558333), vec2(0.3,0.558333))); res=max(res,LINE(vec2(0.433333,0.558333), vec2(0.6,0.558333))); res=max(res,LINE(vec2(0.683333,0.558333), vec2(0.683333,0.558333))); res=max(res,LINE(vec2(0.741667,0.558333), vec2(0.741667,0.558333))); res=max(res,LINE(vec2(0.758333,0.558333), vec2(0.758333,0.558333))); res=max(res,LINE(vec2(0.791667,0.558333), vec2(0.791667,0.558333))); \n                     res=max(res,LINE(vec2(0.241667,0.55), vec2(0.3,0.55))); res=max(res,LINE(vec2(0.433333,0.55), vec2(0.6,0.55))); res=max(res,LINE(vec2(0.741667,0.55), vec2(0.741667,0.55))); res=max(res,LINE(vec2(0.808333,0.55), vec2(0.808333,0.55))); \n                     res=max(res,LINE(vec2(0.258333,0.541667), vec2(0.308333,0.541667))); res=max(res,LINE(vec2(0.441667,0.541667), vec2(0.6,0.541667))); res=max(res,LINE(vec2(0.691667,0.541667), vec2(0.691667,0.541667))); res=max(res,LINE(vec2(0.741667,0.541667), vec2(0.741667,0.541667))); res=max(res,LINE(vec2(0.808333,0.541667), vec2(0.808333,0.541667))); \n                     res=max(res,LINE(vec2(0.258333,0.533333), vec2(0.316667,0.533333))); res=max(res,LINE(vec2(0.441667,0.533333), vec2(0.458333,0.533333))); res=max(res,LINE(vec2(0.483333,0.533333), vec2(0.6,0.533333))); res=max(res,LINE(vec2(0.733333,0.533333), vec2(0.75,0.533333))); res=max(res,LINE(vec2(0.783333,0.533333), vec2(0.791667,0.533333))); \n                     res=max(res,LINE(vec2(0.258333,0.525), vec2(0.325,0.525))); res=max(res,LINE(vec2(0.491667,0.525), vec2(0.591667,0.525))); res=max(res,LINE(vec2(0.733333,0.525), vec2(0.733333,0.525))); res=max(res,LINE(vec2(0.75,0.525), vec2(0.75,0.525))); res=max(res,LINE(vec2(0.783333,0.525), vec2(0.791667,0.525))); \n                     res=max(res,LINE(vec2(0.258333,0.516667), vec2(0.325,0.516667))); res=max(res,LINE(vec2(0.5,0.516667), vec2(0.591667,0.516667))); res=max(res,LINE(vec2(0.741667,0.516667), vec2(0.75,0.516667))); res=max(res,LINE(vec2(0.775,0.516667), vec2(0.783333,0.516667))); \n                     res=max(res,LINE(vec2(0.25,0.508333), vec2(0.325,0.508333))); res=max(res,LINE(vec2(0.5,0.508333), vec2(0.583333,0.508333))); res=max(res,LINE(vec2(0.733333,0.508333), vec2(0.75,0.508333))); res=max(res,LINE(vec2(0.766667,0.508333), vec2(0.816667,0.508333))); \n                     res=max(res,LINE(vec2(0.216667,0.5), vec2(0.216667,0.5))); res=max(res,LINE(vec2(0.25,0.5), vec2(0.333333,0.5))); res=max(res,LINE(vec2(0.5,0.5), vec2(0.55,0.5))); res=max(res,LINE(vec2(0.566667,0.5), vec2(0.583333,0.5))); res=max(res,LINE(vec2(0.741667,0.5), vec2(0.75,0.5))); res=max(res,LINE(vec2(0.766667,0.5), vec2(0.783333,0.5))); res=max(res,LINE(vec2(0.816667,0.5), vec2(0.825,0.5))); \n                     res=max(res,LINE(vec2(0.25,0.491667), vec2(0.341667,0.491667))); res=max(res,LINE(vec2(0.5,0.491667), vec2(0.575,0.491667))); res=max(res,LINE(vec2(0.75,0.491667), vec2(0.75,0.491667))); res=max(res,LINE(vec2(0.775,0.491667), vec2(0.783333,0.491667))); res=max(res,LINE(vec2(0.8,0.491667), vec2(0.816667,0.491667))); res=max(res,LINE(vec2(0.833333,0.491667), vec2(0.841667,0.491667))); \n                     res=max(res,LINE(vec2(0.25,0.483333), vec2(0.358333,0.483333))); res=max(res,LINE(vec2(0.5,0.483333), vec2(0.575,0.483333))); res=max(res,LINE(vec2(0.75,0.483333), vec2(0.758333,0.483333))); res=max(res,LINE(vec2(0.775,0.483333), vec2(0.783333,0.483333))); res=max(res,LINE(vec2(0.8,0.483333), vec2(0.8,0.483333))); res=max(res,LINE(vec2(0.833333,0.483333), vec2(0.85,0.483333))); res=max(res,LINE(vec2(0.883333,0.483333), vec2(0.883333,0.483333))); \n                     res=max(res,LINE(vec2(0.25,0.475), vec2(0.358333,0.475))); res=max(res,LINE(vec2(0.5,0.475), vec2(0.575,0.475))); res=max(res,LINE(vec2(0.75,0.475), vec2(0.75,0.475))); res=max(res,LINE(vec2(0.8,0.475), vec2(0.8,0.475))); res=max(res,LINE(vec2(0.833333,0.475), vec2(0.858333,0.475))); res=max(res,LINE(vec2(0.883333,0.475), vec2(0.883333,0.475))); \n                     res=max(res,LINE(vec2(0.25,0.466667), vec2(0.366667,0.466667))); res=max(res,LINE(vec2(0.5,0.466667), vec2(0.575,0.466667))); res=max(res,LINE(vec2(0.758333,0.466667), vec2(0.758333,0.466667))); res=max(res,LINE(vec2(0.85,0.466667), vec2(0.875,0.466667))); res=max(res,LINE(vec2(0.891667,0.466667), vec2(0.891667,0.466667))); \n                     res=max(res,LINE(vec2(0.25,0.458333), vec2(0.366667,0.458333))); res=max(res,LINE(vec2(0.508333,0.458333), vec2(0.541667,0.458333))); res=max(res,LINE(vec2(0.558333,0.458333), vec2(0.575,0.458333))); res=max(res,LINE(vec2(0.758333,0.458333), vec2(0.775,0.458333))); res=max(res,LINE(vec2(0.85,0.458333), vec2(0.866667,0.458333))); \n                     res=max(res,LINE(vec2(0.25,0.45), vec2(0.366667,0.45))); res=max(res,LINE(vec2(0.508333,0.45), vec2(0.566667,0.45))); res=max(res,LINE(vec2(0.783333,0.45), vec2(0.8,0.45))); res=max(res,LINE(vec2(0.858333,0.45), vec2(0.858333,0.45))); res=max(res,LINE(vec2(0.908333,0.45), vec2(0.908333,0.45))); \n                     res=max(res,LINE(vec2(0.258333,0.441667), vec2(0.366667,0.441667))); res=max(res,LINE(vec2(0.508333,0.441667), vec2(0.575,0.441667))); res=max(res,LINE(vec2(0.808333,0.441667), vec2(0.808333,0.441667))); res=max(res,LINE(vec2(0.875,0.441667), vec2(0.875,0.441667))); \n                     res=max(res,LINE(vec2(0.258333,0.433333), vec2(0.358333,0.433333))); res=max(res,LINE(vec2(0.508333,0.433333), vec2(0.575,0.433333))); res=max(res,LINE(vec2(0.825,0.433333), vec2(0.825,0.433333))); res=max(res,LINE(vec2(0.841667,0.433333), vec2(0.841667,0.433333))); res=max(res,LINE(vec2(0.858333,0.433333), vec2(0.858333,0.433333))); \n                     res=max(res,LINE(vec2(0.258333,0.425), vec2(0.358333,0.425))); res=max(res,LINE(vec2(0.508333,0.425), vec2(0.575,0.425))); res=max(res,LINE(vec2(0.825,0.425), vec2(0.841667,0.425))); res=max(res,LINE(vec2(0.858333,0.425), vec2(0.858333,0.425))); \n                     res=max(res,LINE(vec2(0.0666667,0.416667), vec2(0.0666667,0.416667))); res=max(res,LINE(vec2(0.258333,0.416667), vec2(0.358333,0.416667))); res=max(res,LINE(vec2(0.5,0.416667), vec2(0.575,0.416667))); res=max(res,LINE(vec2(0.6,0.416667), vec2(0.6,0.416667))); res=max(res,LINE(vec2(0.816667,0.416667), vec2(0.841667,0.416667))); res=max(res,LINE(vec2(0.858333,0.416667), vec2(0.858333,0.416667))); res=max(res,LINE(vec2(0.983333,0.416667), vec2(0.983333,0.416667))); \n                     res=max(res,LINE(vec2(0.266667,0.408333), vec2(0.358333,0.408333))); res=max(res,LINE(vec2(0.5,0.408333), vec2(0.575,0.408333))); res=max(res,LINE(vec2(0.591667,0.408333), vec2(0.6,0.408333))); res=max(res,LINE(vec2(0.808333,0.408333), vec2(0.841667,0.408333))); res=max(res,LINE(vec2(0.858333,0.408333), vec2(0.858333,0.408333))); res=max(res,LINE(vec2(0.925,0.408333), vec2(0.925,0.408333))); \n                     res=max(res,LINE(vec2(0.275,0.4), vec2(0.358333,0.4))); res=max(res,LINE(vec2(0.5,0.4), vec2(0.566667,0.4))); res=max(res,LINE(vec2(0.591667,0.4), vec2(0.6,0.4))); res=max(res,LINE(vec2(0.808333,0.4), vec2(0.841667,0.4))); res=max(res,LINE(vec2(0.858333,0.4), vec2(0.866667,0.4))); \n                     res=max(res,LINE(vec2(0.275,0.391667), vec2(0.35,0.391667))); res=max(res,LINE(vec2(0.5,0.391667), vec2(0.566667,0.391667))); res=max(res,LINE(vec2(0.591667,0.391667), vec2(0.6,0.391667))); res=max(res,LINE(vec2(0.8,0.391667), vec2(0.866667,0.391667))); \n                     res=max(res,LINE(vec2(0.275,0.383333), vec2(0.35,0.383333))); res=max(res,LINE(vec2(0.508333,0.383333), vec2(0.558333,0.383333))); res=max(res,LINE(vec2(0.591667,0.383333), vec2(0.6,0.383333))); res=max(res,LINE(vec2(0.625,0.383333), vec2(0.625,0.383333))); res=max(res,LINE(vec2(0.8,0.383333), vec2(0.866667,0.383333))); res=max(res,LINE(vec2(0.916667,0.383333), vec2(0.916667,0.383333))); \n                     res=max(res,LINE(vec2(0.275,0.375), vec2(0.35,0.375))); res=max(res,LINE(vec2(0.508333,0.375), vec2(0.558333,0.375))); res=max(res,LINE(vec2(0.591667,0.375), vec2(0.6,0.375))); res=max(res,LINE(vec2(0.783333,0.375), vec2(0.875,0.375))); res=max(res,LINE(vec2(0.925,0.375), vec2(0.925,0.375))); \n                     res=max(res,LINE(vec2(0.275,0.366667), vec2(0.35,0.366667))); res=max(res,LINE(vec2(0.508333,0.366667), vec2(0.558333,0.366667))); res=max(res,LINE(vec2(0.591667,0.366667), vec2(0.591667,0.366667))); res=max(res,LINE(vec2(0.783333,0.366667), vec2(0.875,0.366667))); \n                     res=max(res,LINE(vec2(0.275,0.358333), vec2(0.333333,0.358333))); res=max(res,LINE(vec2(0.508333,0.358333), vec2(0.558333,0.358333))); res=max(res,LINE(vec2(0.591667,0.358333), vec2(0.591667,0.358333))); res=max(res,LINE(vec2(0.783333,0.358333), vec2(0.883333,0.358333))); \n                     res=max(res,LINE(vec2(0.275,0.35), vec2(0.333333,0.35))); res=max(res,LINE(vec2(0.508333,0.35), vec2(0.55,0.35))); res=max(res,LINE(vec2(0.591667,0.35), vec2(0.591667,0.35))); res=max(res,LINE(vec2(0.783333,0.35), vec2(0.883333,0.35))); \n                     res=max(res,LINE(vec2(0.275,0.341667), vec2(0.333333,0.341667))); res=max(res,LINE(vec2(0.508333,0.341667), vec2(0.55,0.341667))); res=max(res,LINE(vec2(0.783333,0.341667), vec2(0.883333,0.341667))); \n                     res=max(res,LINE(vec2(0.275,0.333333), vec2(0.333333,0.333333))); res=max(res,LINE(vec2(0.516667,0.333333), vec2(0.55,0.333333))); res=max(res,LINE(vec2(0.783333,0.333333), vec2(0.883333,0.333333))); \n                     res=max(res,LINE(vec2(0.275,0.325), vec2(0.325,0.325))); res=max(res,LINE(vec2(0.516667,0.325), vec2(0.55,0.325))); res=max(res,LINE(vec2(0.783333,0.325), vec2(0.883333,0.325))); \n                     res=max(res,LINE(vec2(0.275,0.316667), vec2(0.325,0.316667))); res=max(res,LINE(vec2(0.516667,0.316667), vec2(0.55,0.316667))); res=max(res,LINE(vec2(0.783333,0.316667), vec2(0.883333,0.316667))); \n                     res=max(res,LINE(vec2(0.275,0.308333), vec2(0.316667,0.308333))); res=max(res,LINE(vec2(0.516667,0.308333), vec2(0.541667,0.308333))); res=max(res,LINE(vec2(0.783333,0.308333), vec2(0.808333,0.308333))); res=max(res,LINE(vec2(0.841667,0.308333), vec2(0.883333,0.308333))); \n                     res=max(res,LINE(vec2(0.275,0.3), vec2(0.316667,0.3))); res=max(res,LINE(vec2(0.516667,0.3), vec2(0.533333,0.3))); res=max(res,LINE(vec2(0.783333,0.3), vec2(0.791667,0.3))); res=max(res,LINE(vec2(0.85,0.3), vec2(0.875,0.3))); \n                     res=max(res,LINE(vec2(0.275,0.291667), vec2(0.308333,0.291667))); res=max(res,LINE(vec2(0.841667,0.291667), vec2(0.875,0.291667))); res=max(res,LINE(vec2(0.941667,0.291667), vec2(0.941667,0.291667))); \n                     res=max(res,LINE(vec2(0.266667,0.283333), vec2(0.308333,0.283333))); res=max(res,LINE(vec2(0.85,0.283333), vec2(0.875,0.283333))); \n                     res=max(res,LINE(vec2(0.266667,0.275), vec2(0.308333,0.275))); res=max(res,LINE(vec2(0.858333,0.275), vec2(0.866667,0.275))); res=max(res,LINE(vec2(0.95,0.275), vec2(0.95,0.275))); \n                     res=max(res,LINE(vec2(0.266667,0.266667), vec2(0.291667,0.266667))); res=max(res,LINE(vec2(0.95,0.266667), vec2(0.95,0.266667))); \n                     res=max(res,LINE(vec2(0.266667,0.258333), vec2(0.291667,0.258333))); res=max(res,LINE(vec2(0.866667,0.258333), vec2(0.866667,0.258333))); res=max(res,LINE(vec2(0.941667,0.258333), vec2(0.95,0.258333))); \n                     res=max(res,LINE(vec2(0.266667,0.25), vec2(0.291667,0.25))); res=max(res,LINE(vec2(0.866667,0.25), vec2(0.866667,0.25))); res=max(res,LINE(vec2(0.941667,0.25), vec2(0.941667,0.25))); \n                     res=max(res,LINE(vec2(0.266667,0.241667), vec2(0.283333,0.241667))); res=max(res,LINE(vec2(0.933333,0.241667), vec2(0.933333,0.241667))); \n                     res=max(res,LINE(vec2(0.266667,0.233333), vec2(0.283333,0.233333))); res=max(res,LINE(vec2(0.925,0.233333), vec2(0.933333,0.233333))); \n                     res=max(res,LINE(vec2(0.266667,0.225), vec2(0.283333,0.225))); \n                     res=max(res,LINE(vec2(0.266667,0.216667), vec2(0.283333,0.216667))); \n                     res=max(res,LINE(vec2(0.266667,0.208333), vec2(0.275,0.208333))); res=max(res,LINE(vec2(0.658333,0.208333), vec2(0.658333,0.208333))); \n                     res=max(res,LINE(vec2(0.266667,0.2), vec2(0.275,0.2))); \n                     res=max(res,LINE(vec2(0.266667,0.191667), vec2(0.275,0.191667))); res=max(res,LINE(vec2(0.3,0.191667), vec2(0.3,0.191667))); \n                     res=max(res,LINE(vec2(0.266667,0.183333), vec2(0.275,0.183333))); \n                     res=max(res,LINE(vec2(0.316667,0.141667), vec2(0.316667,0.141667))); res=max(res,LINE(vec2(0.341667,0.141667), vec2(0.341667,0.141667))); \n                     res=max(res,LINE(vec2(0.3,0.133333), vec2(0.3,0.133333))); \n                     res=max(res,LINE(vec2(0.308333,0.125), vec2(0.308333,0.125))); \n                     res=max(res,LINE(vec2(0.291667,0.116667), vec2(0.3,0.116667))); res=max(res,LINE(vec2(0.75,0.116667), vec2(0.75,0.116667))); \n                     res=max(res,LINE(vec2(0.283333,0.108333), vec2(0.3,0.108333))); res=max(res,LINE(vec2(0.6,0.108333), vec2(0.616667,0.108333))); res=max(res,LINE(vec2(0.708333,0.108333), vec2(0.783333,0.108333))); res=max(res,LINE(vec2(0.8,0.108333), vec2(0.808333,0.108333))); res=max(res,LINE(vec2(0.825,0.108333), vec2(0.85,0.108333))); \n                     res=max(res,LINE(vec2(0.283333,0.1), vec2(0.283333,0.1))); res=max(res,LINE(vec2(0.591667,0.1), vec2(0.65,0.1))); res=max(res,LINE(vec2(0.691667,0.1), vec2(0.866667,0.1))); \n                     res=max(res,LINE(vec2(0.275,0.0916667), vec2(0.291667,0.0916667))); res=max(res,LINE(vec2(0.558333,0.0916667), vec2(0.566667,0.0916667))); res=max(res,LINE(vec2(0.583333,0.0916667), vec2(0.65,0.0916667))); res=max(res,LINE(vec2(0.675,0.0916667), vec2(0.9,0.0916667))); \n                     res=max(res,LINE(vec2(0.275,0.0833333), vec2(0.3,0.0833333))); res=max(res,LINE(vec2(0.45,0.0833333), vec2(0.458333,0.0833333))); res=max(res,LINE(vec2(0.475,0.0833333), vec2(0.65,0.0833333))); res=max(res,LINE(vec2(0.666667,0.0833333), vec2(0.925,0.0833333))); \n                     res=max(res,LINE(vec2(0.191667,0.075), vec2(0.2,0.075))); res=max(res,LINE(vec2(0.266667,0.075), vec2(0.3,0.075))); res=max(res,LINE(vec2(0.441667,0.075), vec2(0.933333,0.075))); \n                     res=max(res,LINE(vec2(0.125,0.0666667), vec2(0.141667,0.0666667))); res=max(res,LINE(vec2(0.191667,0.0666667), vec2(0.3,0.0666667))); res=max(res,LINE(vec2(0.425,0.0666667), vec2(0.925,0.0666667))); \n                     res=max(res,LINE(vec2(0.0916667,0.0583333), vec2(0.158333,0.0583333))); res=max(res,LINE(vec2(0.183333,0.0583333), vec2(0.291667,0.0583333))); res=max(res,LINE(vec2(0.425,0.0583333), vec2(0.916667,0.0583333))); \n                     res=max(res,LINE(vec2(0.0583333,0.05), vec2(0.283333,0.05))); res=max(res,LINE(vec2(0.391667,0.05), vec2(0.908333,0.05))); \n                     res=max(res,LINE(vec2(0.0333333,0.0416667), vec2(0.266667,0.0416667))); res=max(res,LINE(vec2(0.341667,0.0416667), vec2(0.341667,0.0416667))); res=max(res,LINE(vec2(0.375,0.0416667), vec2(0.925,0.0416667))); \n                     res=max(res,LINE(vec2(0.025,0.0333333), vec2(0.025,0.0333333))); res=max(res,LINE(vec2(0.05,0.0333333), vec2(0.25,0.0333333))); res=max(res,LINE(vec2(0.275,0.0333333), vec2(0.275,0.0333333))); res=max(res,LINE(vec2(0.333333,0.0333333), vec2(0.341667,0.0333333))); res=max(res,LINE(vec2(0.375,0.0333333), vec2(0.908333,0.0333333))); \n                     res=max(res,LINE(vec2(0.0666667,0.025), vec2(0.258333,0.025))); res=max(res,LINE(vec2(0.283333,0.025), vec2(0.3,0.025))); res=max(res,LINE(vec2(0.316667,0.025), vec2(0.341667,0.025))); res=max(res,LINE(vec2(0.383333,0.025), vec2(0.908333,0.025))); \n                     res=max(res,LINE(vec2(0.05,0.0166667), vec2(0.291667,0.0166667))); res=max(res,LINE(vec2(0.325,0.0166667), vec2(0.908333,0.0166667))); \n                     res=max(res,LINE(vec2(0.05,0.00833333), vec2(0.933333,0.00833333))); \n                     res=max(res,LINE(vec2(0.0583333,0), vec2(0.983333,0))); \n                     #endif\n                     return res;}\nfloat getGrid(vec2 uv){\n    float divs=18.;\n    float frq =PI*divs*2.;\n    vec2 pg= uv + (0.405/(divs))*8.;\n    return smoothstep(.96, 1.05, max(sin((pg.x)*frq),sin((pg.y)*frq)));\n\n}\nvec3 getLight(vec2 uv)\n{\n    float idw=iDate.w+(CLOCK_OFFSET*3600.);\n    float dayn=mod((((idw)/((86400.)))),1.);\n\n    vec2 res=astro(\n        vec4(iDate.x,(ANIM_YEAR==1?mod(iTime,12.):iDate.y)+1.,iDate.z,(86400.*dayn)+86400.),\n        vec2(remap(uv.x,0.,1.,-180.,180.,true),remap(uv.y,0.,1.,-90.,90.,true)) );\n\n    return vec3(res,dayn);\n\n}\n\nvec3 mapImage( vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    float srat=iResolution.y/iResolution.x;\n    vec3 vlight=getLight(uv);\n    float light=(vlight.x+2.5)*0.3;\n\n    uv.x/=srat;\n    vec3 col=vec3(0.);\n    vec2 wmapuv=uv;\n    wmapuv.x=mod(wmapuv.x-0.070,1./srat);\n    wmapuv.x*=srat*1.004; \n    wmapuv.y+=0.01;\n    wmapuv.y*=1.02;\n\n    col=render(vec3(0.,0.,0.5),vec3(.8,.8,.3),getMap(wmapuv)*1.003);\n\n    vec2 pcoord=vec2(remap(LOCATION.x,-180.,180.,0.,1.,true)/srat,remap(LOCATION.y,-90.,90.,0.,1.,true));\n\n\n    if(light>1.) col*=render(vec3(0.2),vec3(1.,1.,1.),light);\n    else col= 0.8 * col* pow(smoothstep(.089,1.,light),0.2)*light + col*0.2;\n\n    float gv=graph(vec2((uv.x*srat),uv.y+0.5-pcoord.y));\n\n    col=render(col,mix(col,vec3(1.,2.0,02.),0.15),gv);\n    col+=0.7*render(vec3(0.),vec3(1.,0.,0.),\n                    clamp(1.0+(0.5+0.5*sin(iTime*2.))*0.005-distance(vec2(uv.x*0.75,uv.y),vec2(pcoord.x*0.75,pcoord.y)),0.,\n                          1.));\n\n    col+=getGrid(vec2(uv.x*srat,uv.y))*0.3;\n    return col;\n}\nvec3 lightImage( vec2 uv )\n{\n\n\n    vec3 vlight=getLight(uv);\n    float light=(vlight.x+2.5)*0.3;\n\n    return vec3(light)*0.3;\n    vec3 col=vec3(0.);\n\n\n    if(light>1.) col=render(vec3(0.2),vec3(1.,1.,1.),light);\n    else col= 0.8 * col* pow(smoothstep(.089,1.,light),0.2)*light + col*0.2;\n\n\n    return col;\n}\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,-s,s,c);}\nvec3 tex(in vec2 p)\n{\n    return mapImage((p*iResolution.xy).xy);\n}\nvec3 texSS(in vec2 p)\n{\n    return texture(iChannel1,p).rrr;\n}\n\nvec3 mod289(vec3 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec2 mod289(vec2 x) {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec3 permute(vec3 x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\nfloat snoise(vec2 v)\n{\n    const vec4 C = vec4(0.211324865405187, // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439, // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626, // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n    // First corner\n    vec2 i = floor(v + dot(v, C.yy) );\n    vec2 x0 = v - i + dot(i, C.xx);\n\n    // Other corners\n    vec2 i1;\n    //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n    //i1.y = 1.0 - i1.x;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    // x0 = x0 - 0.0 + 0.0 * C.xx ;\n    // x1 = x0 - i1 + 1.0 * C.xx ;\n    // x2 = x0 - 1.0 + 2.0 * C.xx ;\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n\n    // Permutations\n    i = mod289(i); // Avoid truncation effects in permutation\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n                     + i.x + vec3(0.0, i1.x, 1.0 ));\n\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n\n    // Gradients: 41 points uniformly over a line, mapped onto a diamond.\n    // The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n\n    // Normalise gradients implicitly by scaling m\n    // Approximation of: m *= inversesqrt( a0*a0 + h*h );\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n    // Compute final noise value at P\n    vec3 g;\n    g.x = a0.x * x0.x + h.x * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\nfloat rand (in vec2 seed) {\n    seed = fract (seed * vec2 (5.3983, 5.4427));\n    seed += dot (seed.yx, seed.xy + vec2 (21.5351, 14.3137));\n    return fract (seed.x * seed.y * 95.4337);\n}\n\n#define STAR_DENS 0.15\n#define ANGLE(a,b) dot(a, b)\nvec3 texStars(vec2 p)\n{\n\n    vec2 uv = p;//.xy / iResolution.xy;\n\n    p*=iResolution.xy;\n    float n=snoise(vec2(p.x,-p.y));\n    n=n>(1.-STAR_DENS)?n:0.;\n    n=remap(n,(1.-STAR_DENS),1.,0.0,.9,true);\n\n\n    vec3 col=vec3(n);\n    // vec3 col=mix(vec3(n),vec3(.8,.9,1.),remap(day,0.7,1.,0.,1.,true));\n\n    float sunsd=.02+distance(vec2(uv.x,uv.y*0.5),vec2(0.5,0.25))*1.5;\n\n//    col=render(col,vec3(1.),sunsd);\n    \n    col+=vec3(.99,.96,0.99)*.1*(3./(sunsd*sunsd)/150.);\n     col+=getGrid(uv)*.53;\n\n    return col ;\n}\n\n\n//Sphere maping thanks to nimitz https://www.shadertoy.com/view/4sjXW1\n//Spherical coordinates, very heavy deformation on the poles\nvec2 sphproj(in vec3 p,vec2 rx)\n{\n    vec2 sph = vec2(acos(p.y/length(p)), atan(p.z,p.x));\n    vec2 tl=vec2(sph.yx*1.5915*vec2(0.4,0.2));\n    tl.x*=.25;\n    tl.x=mod(tl.x+rx.x,1.);\n    tl.y=mod(tl.y+rx.y,1.);\n    \n    return tl;\n}\n\n\nvec3 sphproj(in vec3 p,int t,vec2 rx)\n{\n    \n    vec2 tl=sphproj(p,rx);\n    vec3 col=vec3(0.); \n    if(t==0) col= tex(tl);\n    if(t==1) col= texSS(tl);\n    if(t==2) col= texStars(tl);\n    if(t==3) col= lightImage(tl);\n    if(t==4) col= vec3(1.,0.,0.);\n    return col;\n}\n\n\nfloat sdSphere( vec3 p, float s )\n{\n    return length(p)-s;\n}\nstruct Ray\n{\n    vec3 ro,rd;\n};\n\n    struct SDObject\n    {\n        vec3 pos;\n        int m;\n        float d;\n        Ray ray;\n        vec3 mpos;\n    };\n\n        SDObject noSDObject()\n    {\n        return SDObject(vec3(0.),-1,-1.,Ray(vec3(0.),vec3(0.)),vec3(0.));\n    }\nSDObject newSDObject(int m, vec3 pos)\n{\n    return SDObject(pos,m,0.,Ray(vec3(0.),vec3(0.)),vec3(0.));\n}\nSDObject SDUnion(SDObject oa ,SDObject ob)\n{\n    if(oa.d<ob.d ) return oa; else return ob;\n}\nSDObject SDOMap(in SDObject o,vec3 p)\n{\n  //  o.ray=ray;\n  //  o.ray.ro+=o.pos;\n    //o.d=iSphere(o.ray.ro,o.ray.rd);\n    o.d=sdSphere(o.mpos=p-o.pos,1.);\n    return o;\n}\nSDObject mapScene(vec3 p)\n{\n    SDObject earth=newSDObject(0,vec3(0.));\n    SDObject moon=newSDObject(4,vec3(sin(iTime),0.,cos(iTime))*10.5);\n\n        SDObject res=noSDObject();\n    //   SDObject res=SDOMap(moon,ray);\n    res= SDOMap(earth,p);\n//\tres= SDUnion(res,SDOMap(moon,p));\n\treturn res;\n}\nSDObject castRay( in Ray ray )\n{\n    //clip planes\n    float tmin = .10;\n    float tmax = 20.0;\n\n   \n    float precis =0.00001;//(state.y+1.<iTime)?0.0001:0.003;\n    float t = tmin;\n\tSDObject res;\n    vec3 p;\n    for( int i=0; i<200; i++ )\n    {\n        p=ray.ro+ray.rd*t;\n         res = mapScene( p );\n        if( res.d<precis || t>tmax ) break;\n        t += res.d;\n    }\n\n    if( t>tmax ) return noSDObject();\n\n    return res;\n}\nvec3 calcNormal( in vec3 pos )\n{\n    vec3 eps = vec3( 0.00001, 0.0, 0.0 );\n    vec3 nor = vec3(\n        mapScene(pos+eps.xyy).d - mapScene(pos-eps.xyy).d,\n        mapScene(pos+eps.yxy).d - mapScene(pos-eps.yxy).d,\n        mapScene(pos+eps.yyx).d - mapScene(pos-eps.yyx).d );\n    return normalize(nor);\n}\nfloat calcAO( in vec3 pos, in vec3 nor )\n{\n    float occ = 0.0;\n    float sca = 1.0;\n    for( int i=0; i<5; i++ )\n    {\n        float hr = 0.01 + 0.12*float(i)/4.0;\n        vec3 aopos =  nor * hr + pos;\n        float dd = mapScene( aopos ).d;\n        occ += -(dd-hr)*sca;\n        sca *= 0.95;\n    }\n    return clamp( 1.0 - 3.0*occ, 0.0, 1.0 );    \n}\nfloat softshadow( in vec3 ro, in vec3 rd, in float mint, in float tmax )\n{\n    float res = 1.0;\n    float t = mint;\n    for( int i=0; i<32*1; i++ )\n    {\n        float h = mapScene( ro + rd*t ).d;\n        res = min( res, 8.0*h/t );\n        t += clamp( h, 0.01, 0.90 );\n        if( h<(0.00001) || t>tmax ) break;\n    }\n    return clamp( res, 0.0, 1.0 );\n\n}\n\nvec3 globeImage( in vec2 fragCoord )\n{\t\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float srat=iResolution.y/iResolution.x;\n    vec2 p = fragCoord.xy/iResolution.xy-0.5;\n    p.x*=iResolution.x/iResolution.y;\n    vec2 um = iMouse.xy / iResolution.xy;\n    um.x *= iResolution.x/iResolution.y;\n    p*= 1.5;\n\n    float ibp=isKeyPressed(KEY_B);\n    float ani= ibp>0.5?0.5+0.5*sin(iTime*0.2):0.;\n    float ani2=clamp(ani*2.,0.,1.);\n\n\n    //camera\n    //    {\n    #define CENTER_CAM vec3(0.,.95,2.45)\n    vec3 cam=vec3(0.,0.99880*ani2,2.35-(ani*2.3));\n\n    vec2 pcoord=vec2(remap(LOCATION.x,-180.,180.,0.,1.,true)/srat,remap(LOCATION.y,-90.,90.,0.,1.,true));\n\n    #define CENTRE_LOC vec2(pcoord.x,pcoord.y*0.5+.409)\n    #define TOP_LOC CENTRE_LOC+vec2(0.,-0.242)\n    vec2 cr=mix(um,TOP_LOC,ani);\n\n    vec3 ro = cam*1.2;//vec3(0.,.95,.4);\n    vec3 rd = normalize(vec3(p,-1.5));\n    mat2 mz = mm2(PI*2.*(-cr.x*srat)-PI*0.5);\n    mat2 my = mm2(PI*2.*cr.y-1.); \n    ro.zy *= my;rd.zy *= my;\n    ro.zx *= mz;rd.zx *= mz;\n\n    \n    vec2 lm=um;\n    mz = mm2((PI*2.*(-lm.x*srat)-PI*0.5)*ani);\n    my = mm2((PI*lm.y-1.)*ani); \n    //if(ani>0.99)\n    {\n        rd.yx*=my;\n        rd.xz*=mz;\n    } \n    //  }\n\n    Ray ray=Ray(ro,rd);\n    float psin=(sin(iTime*0.5))*2.8;\n\n    // ro.xz*=psin; rd.xz*=psin;\n\n    #define EARTH_OPAQ 1.\n\n    vec3 res=getLight(uv);\n    float light=(res.x+2.5)*0.3;\n\n    //atmos\n//    float atmos= 1.-remap( distance(cam,vec3(0.)) ,0.,3.,0.,-.2,true) ;\n\n    float sunLong=remap(res.y,-90.,90.,0.,1.,true);\n\n    vec3 col = sphproj(rd,2,vec2(res.z+0.5,-sunLong+0.5));\n\n    SDObject hit=castRay(ray);\n\n    vec3 gtcol=vec3(0.);\n \n    if (hit.m >=0)\n    {\n        col=sphproj(hit.mpos,hit.m,vec2(0.));;\n             \n              vec3 nor = calcNormal( hit.mpos );\n        vec3 ref = reflect( ray.rd, nor );\n            \n        \n     \n        float occ = 0.;//calcAO( hit.mpos, nor );\n        vec3  lig = normalize( vec3(cos(-res.z*PI*2.), tan((0.5+-sunLong)*PI), sin(-res.z*PI*2.)) );\n        float amb = clamp( 0.5+0.5*nor.y, 0.0, 1.0 );\n        float dif = clamp( dot( nor, lig ), 0.0, 1.0 );\n        float bac = clamp( dot( nor, normalize(vec3(-lig.x,0.0,-lig.z))), 0.0, 1.0 )*clamp( 1.0-hit.mpos.y,0.0,1.0);\n        float dom = smoothstep( -0.1, 0.1, ref.y );\n        float fre = pow( clamp(1.0+dot(nor,rd),0.0,1.0), 2.0 );\n        float spe = pow(clamp( dot( ref, lig ), 0.0, 1.0 ),16.0);\n\n        // shadows\n        vec3 lin = vec3(0.0);\n       \n       \n        {\n            dif *= softshadow( hit.mpos, lig, 0.02, 2.5 );\n            dom *= softshadow( hit.mpos, ref, 0.02, 2.5 );\n        }  \n        lin += 2.0*dif*vec3(1.00,0.85,0.55);\n        lin += .80*spe*vec3(1.00,0.85,0.55)*dif;\n     //   lin += 0.30*amb*vec3(1.50,1.70,1.00)*occ;\n        lin += 0.30*dom*vec3(0.50,0.70,1.00)*occ;\n//        lin += 0.50*bac*vec3(0.25,0.25,0.25)*occ;\n   //     lin += 0.40*fre*vec3(.00,1.00,1.00)*occ;\n\n        lin+=.5;\n\n                col = max(col*0.,col*lin);\n//\tcol = mix( col, vec3(0.8,0.9,1.0), 1.0-exp( -0.002*hit.d*hit.d ) );\n\t\t\n        \n        \n \t\t//col=vec3(1.)*(1.-hit.d);\n     }\n\t\n\n\n    /*\nrd*=1.005+ani*0.1;\nfloat t = iSphere(ro,rd);\nif (t>0.)\n{ \nvec3 pos = ro+(rd)*t;\nvec3 af = clamp(sphproj(pos,3,vec3(0.)),0.,1.);\n\nro=-ro;\t\t\npos = ro+(rd)*t;\nvec3 ab=0.8*sphproj(pos,3,vec3(0.))*pow(20.,1.-t+.5);\n\ncol+=clamp(ab*vec3(.4,.7,1.2)*0.1,0.,1.);\nif(gt>0.)col=gtcol;\ncol+=af*vec3(.4,.7,1.2);\n\n\n}else{\n}\n*/\n    //if(t<0.)\n    // \tcol=max(col,gt>0.?vec3(0.):col*vec3(pow(2.,1.-t+1.5)));\n\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float iap=isKeyPressed(KEY_A);\n    // float ibp=isKeyPressed(KEY_B);\n\n    fragColor=vec4(iap<0.5?globeImage(fragCoord):mapImage(fragCoord),1.);\n\n}","name":"Buffer A","description":"","type":"buffer"}]}