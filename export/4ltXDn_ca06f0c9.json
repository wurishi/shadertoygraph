{"ver":"0.1","info":{"id":"4ltXDn","date":"1479017766","viewed":196,"name":"bp Color theory","username":"blackpolygon","description":"Experimenting with color and masks","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["colors","circle","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: blackpolygon\n// Title:  Color Theory\n\n// Experimenting with color and masks\n\n#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat circle(in vec2 st, in float radius){\n    vec2 l = st-vec2(0.5);\n    return 1.-smoothstep(radius, radius+0.002, dot(l,l));\n}\n\t\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/min(iResolution.x,iResolution.y);\n    st.x -= 0.35;\n    \n    //Calculate the color for the circle before the rotation\n    vec3 color = vec3(st.y,st.x,0.484);\n    \n    st -= vec2(0.5);\n    st = rotate2d( sin(iTime/2.)*PI) * st;\n    st+= 0.5;\n    \n    //Background color after rotation\n    vec3 bgColor = vec3(st.x,st.y,0.392);\n    \n    float mask1 = circle(st,0.1);\n    float mask2 = 1.0-mask1;  //Inverse of the circle\n    \n    \n    color *= vec3(mask1);\n    color += bgColor*vec3(mask2);\n\t \n\tfragColor = vec4(color,1);\n}","name":"Image","description":"","type":"image"}]}