{"ver":"0.1","info":{"id":"7ssXzf","date":"1619012325","viewed":155,"name":"Camera outline","username":"MaximeG","description":"camera outline","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["cameraoutline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(vec3 a, vec3 b)\n{\n    return abs(a.x - b.x) * 0.299 + abs(a.y - b.y) * 0.587 + abs(a.z - b.z) * 0.114;\n}\n\nvec3 lerp(vec3 a, vec3 b, float t)\n{\n    return a + (b - a) * t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    const float e = 0.004;\n    const float t = 0.1;\n    const float td = 0.001;\n\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 cam = texture(iChannel0, uv);\n    \n    float d = dist(cam.xyz, texture(iChannel0, uv + vec2(e, 0.)).xyz) + \n              dist(cam.xyz, texture(iChannel0, uv + vec2(0., e)).xyz) + \n              dist(cam.xyz, texture(iChannel0, uv + vec2(-e, 0.)).xyz) + \n              dist(cam.xyz, texture(iChannel0, uv + vec2(0., -e)).xyz);\n\n    float outline = smoothstep(t, t + td, d * d * d);\n    \n    vec3 col = lerp(cam.xyz, vec3(0.), outline);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}