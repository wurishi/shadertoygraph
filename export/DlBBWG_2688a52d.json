{"ver":"0.1","info":{"id":"DlBBWG","date":"1694416574","viewed":87,"name":"Hot wave","username":"shiyuelai","description":"Hot wave","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hotwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 这里的center、r 你传进来\n\nvec2 center = vec2(0.5);\nfloat radius = 0.4; // 强调一下，传的是爆炸范围宽度与屏幕宽度比。\nfloat totalTime = 1.0;\nfloat whRatio; // 画布宽高比 \nfloat currentTime;\nfloat barrelDegree = 0.3;       // 畸变量，最优范围【0.2， 0.6】, 默认0.3；\nfloat waveWidthDegree = 0.06;   // 波长控制，最优范围【0.06， 0.2】, 默认0.08；\n\n\nfloat hash(ivec2 p)  \n{                        \n    int n = p.x * 3 + p.y * 113;\n    n = n * (n * n * 15731 + 789221) + 1376312589;\n    float t = mod(float(n), 1000.0) * 0.001; \n    return -1.0+2.0 * t;\n}\n\nfloat noise(vec2 p)\n{\n    ivec2 i = ivec2(floor( p ));\n    vec2 f = fract( p );\n\t\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( hash( i + ivec2(0,0) ), \n                     hash( i + ivec2(1,0) ), u.x),\n                mix( hash( i + ivec2(0,1) ), \n                     hash( i + ivec2(1,1) ), u.x), u.y);\n}\n\nvec2 getOffset(vec2 p)\n{\n    vec2 result;\n    // 这里直接用你的uv\n    vec2 uv = p * vec2(whRatio, 1.0) + 0.4 * currentTime;\n\tfloat f = 0.0;\n    uv *= 12.0;\n    mat2 m = mat2(1.6, 1.2, -1.2, 1.6);\n\tf  = 0.5000 * noise(uv); uv = m*uv;\n\tf += 0.2500 * noise(uv); uv = m*uv;\n\tf += 0.1250 * noise(uv); uv = m*uv;\n\tf += 0.0625 * noise(uv); uv = m*uv;\n    result.x = 0.5 + 0.5 * f;\n    uv = p * vec2(whRatio,1.0) + 0.4 * currentTime;\n    f = 0.0;\n    uv *= 12.0;\n\tf  = 0.5000 * noise(uv); uv = m*uv;\n\tf += 0.2500 * noise(uv); uv = m*uv;\n\tf += 0.1250 * noise(uv); uv = m*uv;\n\tf += 0.0625 * noise(uv); uv = m*uv;\n    result.y = 0.5 + 0.5*f;\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    /*\n       与cocos的参数适配\n    */\n    currentTime = iTime;\n    whRatio = iResolution.x / iResolution.y;\n    vec4 outColor = vec4(1.0);\n    /******\n       功能主体\n    *******/\n    float progress = mod(currentTime, totalTime) / totalTime;\n    vec2 v_uv0 = fragCoord.xy / iResolution.xy;   \n    vec2 r = radius * vec2(1.0, whRatio);\n    // 波形参数计算\n    float speed = 0.2 * progress + 0.8 * sqrt(progress);\n    float wavePeakR = length(r) * 0.5 * speed;     // 波峰位置\n    float waveWidth = length(r) * waveWidthDegree; // 波的宽度\n    float centerDis = length((v_uv0 - center) / vec2(1.0, whRatio));    // 波心距离\n    \n    // 幅度计算\n    float degree = 0.0;\n    float peakOffset = abs(wavePeakR - centerDis);\n    if(peakOffset < waveWidth)\n    {\n       degree = (waveWidth - peakOffset) / waveWidth;\n    }\n    \n    float expend = 0.0;\n    if(speed < barrelDegree)\n    {\n       expend = 1.0 - abs(speed - barrelDegree * 0.5) / barrelDegree / 2.0;\n       expend = expend * expend;\n    }\n   \n    // barrel distortion\n    float runR = length(r) * 0.35;\n    float alpha = 1.0;\n    if(centerDis < runR)\n    {\n       expend = 1.0 - 0.4 * expend * expend * pow(centerDis / runR - 1.0, 2.0);\n    }\n    else\n    {\n       expend = 1.0;\n    }\n    \n    // waveDistorsion\n    vec2 waveOffset = (getOffset(v_uv0)- 0.5) * 0.15 * sqrt(degree) * (1.0 - progress);  \n    if(centerDis < runR - 0.3)\n    {\n       waveOffset = vec2(0.0);\n    }\n    \n    float waveLen = 1.0 - centerDis;\n    vec2 pos = center + expend * (v_uv0 - center);\n    pos = center + expend * (pos - center);\n    waveLen = clamp(waveLen, 0.0, 1.0);\n    vec2 uv = clamp(pos + waveOffset * waveLen, 0.0, 1.0);\n    \n    float dis = length((uv - center) / vec2(1.0, whRatio)); \n   \n \n       outColor = texture(iChannel0, uv);\n   \n    fragColor = outColor;\n}\n\n","name":"Image","description":"","type":"image"}]}