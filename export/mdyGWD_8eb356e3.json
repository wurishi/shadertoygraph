{"ver":"0.1","info":{"id":"mdyGWD","date":"1678520522","viewed":24,"name":"UV Circle","username":"JetStreamSham","description":"a circle colored with the UV coordinates withing its radius\n\n\n\nComments, questions, and criticisms are welcome :)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["uv","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    //black color for the background\n    vec3 col = vec3(0);\n   \n    // Normalized pixel coordinates on the y axis (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    //Normalize mouse coords; \n    vec2 m = iMouse.xy/iResolution.y;\n    \n    //how far is the current uv cooardinate from the mouse center\n    float dist = distance(uv,m);\n    \n    //if the uv is within radius of the circle \n    //set the color to the uv otherwise leave it black\n    col = dist <= .1 ? vec3(uv,0) : col;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}