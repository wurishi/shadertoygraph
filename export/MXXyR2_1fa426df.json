{"ver":"0.1","info":{"id":"MXXyR2","date":"1726418957","viewed":13,"name":"Old school boring zoom rotator","username":"cesio","description":"Basic space transformation: scale and rotate. Play with ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["zoomrotatoroldschool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define S 0.5\n\n// taken from thebookofshaders.com\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n// taken from thebookofshaderx.com\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // taken from thebookofshaders.com - shaping function\n    float amplitude = 2.;\n    float frequency = 1.;\n    float x = iTime;\n    float y = sin(x * frequency);\n    float t = 0.01*(-iTime*130.0);\n    y += sin(x*frequency*2.1 + t)*4.5;\n    y += sin(x*frequency*1.72 + t*1.121)*4.0;\n    y += sin(x*frequency*2.221 + t*0.437)*5.0;\n    y += sin(x*frequency*3.1122+ t*4.269)*2.5;\n    y *= amplitude*0.06;\n\n\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    float mTime = iTime * S;\n\n    // ### PLAY WITH SPACE START ### move space from the center to the vec2(0.0)\n    // Remap the space to -1. to 1 + move center to 'walk over' the texture\n    uv = uv * 2. - 1. + vec2(sin(mTime), cos(mTime));\n    \n \n    // rotate the space\n    uv = rotate2d( sin(mTime)*PI ) * uv;\n    // scale the space\n    uv = scale( vec2(sin(mTime)+y) ) * uv;\n\n    // prove texture\n    vec3 textureColor = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(textureColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}