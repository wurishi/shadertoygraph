{"ver":"0.1","info":{"id":"cdKyWd","date":"1696750655","viewed":113,"name":"KawaseBlur-test","username":"nomkcode_g","description":"对距离当前像素越来越远的地方对四个角进行采样，利用4个buffer实现5次迭代","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["kawaseblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    float pixelOffset = 0.0;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col = col * 0.25;\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    float pixelOffset = 0.0;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col = col * 0.25;\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    float pixelOffset = 0.0;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col = col * 0.25;\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    float pixelOffset = 0.0;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col = col * 0.25;\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0.0);\n    float pixelOffset = 0.0;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, pixelOffset + 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(-pixelOffset - 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col += texture(iChannel0, uv + vec2(pixelOffset + 0.5, -pixelOffset - 0.5) / iResolution.xy).rgb;\n    col = col * 0.25;\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}