{"ver":"0.1","info":{"id":"wscczH","date":"1600419822","viewed":240,"name":"Gaussian Blur 2D","username":"crucifer","description":"Gaussian Blur ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["gaussianblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int mSize = 11;\nconst int nSize = 11;\nconst float sigma = 7.;\n\nfloat normpdf(float x, float y)\n{\n\treturn (1. / (2. * 3.141593 * sigma * sigma)) * exp(-(x * x + y * y) / (2. * sigma * sigma));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float sum = 0.;\n    vec3 final_colour = vec3(0.0);\n    for\t(int i=-mSize/2; i <= mSize/2; i++)\n    {\n        for (int j=-nSize/2; j <= nSize/2; j++)\n        {\n            \n            float v = normpdf(float(j), float(i));\n\t\t\tvec2 offset = vec2(float(j),float(i))/iResolution.xy;\n            final_colour += texture(iChannel0, uv + offset).rgb*v;\n            sum += v;\n        }\n    }\n    fragColor = vec4(final_colour/sum, 1.0);\n}","name":"Image","description":"","type":"image"}]}