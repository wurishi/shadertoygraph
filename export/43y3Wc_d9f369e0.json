{"ver":"0.1","info":{"id":"43y3Wc","date":"1718295139","viewed":95,"name":"GoombasArrival","username":"Goomba00","description":"Inspiration: https://www.shadertoy.com/view/ldKyW1","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["goomba"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n\n// GLOW & SDF FROM https://www.shadertoy.com/view/ldKyW1\n\nfloat glow(float x, float str, float dist){\n    return dist / pow(x, str);\n}\n\n// Sinus Signed Distance Function (distance field)\nfloat sinSDF(vec2 st, float A, float offset, float freq, float phi){\n    return abs((st.y - offset) + sin(st.x * freq + phi) * A);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float speed = .4;\n\n    vec3 color = vec3(1.000,1.000,1.000);\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    float time = iTime/2.0;\n\n    float glowStrength = .6;\n    float glowDistance = .02;\n    float numWaves = 4.0;\n\n    float col = 0.0;\n\n    for(float i = 0.0; i< numWaves ; i++){\n    \n        float phase = (iTime * speed + i * 2.0 * pi / numWaves) * abs(.5 - uv.x)/(.5 - uv.x); // Equally spaced waves moving out from middle\n        float frequency = 5.0;\n        float amplitude = .15 * abs(uv.x - .5) * (1.0 + i); // Middle = 0, increase outward\n        float offset = .5;\n        \n        col += glow(sinSDF(uv, amplitude, offset, frequency, phase), glowStrength, glowDistance);\n    }\n    \n    //col = clamp(abs(.5 - uv.x)/(.5 - uv.x), 0.0, 1.0) + (col * -abs(.5 - uv.x)/(.5 - uv.x));\n    \n    col = 1.0-col;\n\n    // Output to screen\n    fragColor = vec4(vec3(col) * color,1.0);\n}","name":"Image","description":"","type":"image"}]}