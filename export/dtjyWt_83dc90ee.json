{"ver":"0.1","info":{"id":"dtjyWt","date":"1692526421","viewed":43,"name":"Moving Hilbert Curve","username":"rokas","description":"Test","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 magic(float x) {\n    // x ranges from 0 to 1\n    vec3 r = vec3(1., 0., 0.);\n    vec3 g = vec3(0., 1., 0.);\n    vec3 b = vec3(0., 0., 1.);\n    \n    if (x < 0.5)\n        return mix(b, g, x * 2.);\n    else\n        return mix(g, r, (x - 0.5) * 2.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x / iResolution.y;\n    uv.x *= ar;\n    uv.x -= ar / 2. - 0.5;\n    if (uv.x < 0. || uv.x > 1.) {\n        fragColor = vec4(0);\n        return;\n    }\n       \n    vec2 uv0 = uv;\n    int NUM_IT = 9;\n    \n    float res = 0.;\n    float st = 0.25;\n    \n    for (int i = 0; i < NUM_IT; ++i) {\n        if (uv.x < 0.5) {\n            if (uv.y < 0.5)\n                uv = uv.yx;\n            else\n                res += st;\n        }\n        else {\n            if (uv.y < 0.5) {\n                uv = uv.yx;\n                uv = 1. - uv;\n                res += st * 3.;\n            }\n            else\n                res += st * 2.;\n        }\n        \n        st /= 4.;\n        uv *= 2.;\n        uv = fract(uv);\n    }\n    \n    float LOOP_T = 100.;\n    float t = mod(iTime, LOOP_T) / LOOP_T;\n    \n    //vec3 col = magic(res) * (1. - mod(t - res, 1.));\n    vec3 col = (0.5 + 0.5*cos(iTime+uv0.xyx+vec3(0,2,4))) * (1. - mod(t - res, 1.));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}