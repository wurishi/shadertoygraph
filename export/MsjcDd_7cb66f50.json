{"ver":"0.1","info":{"id":"MsjcDd","date":"1494459991","viewed":210,"name":"Larvae","username":"liamegan","description":"Thanks to Patricio Gonzalez Vivo\nhttps://thebookofshaders.com/12/","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// smin courtecy of iq https://iquilezles.org/articles/smin\nfloat smin( float a, float b, float k )\n{\n    a = pow( a, k ); b = pow( b, k );\n    return pow( (a*b)/(a+b), 1.0/k );\n}\n\nvec4 cells(in vec2 uv, float speed) {\n    \n    vec2 i_uv = floor(uv);\n    vec2 f_uv = fract(uv);\n    \n    float m_dist = 2.;\n    \n    for( int y = -1; y<= 1; y++ ) {\n        for( int x = -1; x <= 1; x++ ) {\n            vec2 neighbour = vec2(float(x), float(y));\n            vec2 n = i_uv + neighbour;\n            vec2 point = random2(i_uv + neighbour);\n            point = 0.5 + 0.5*sin(iTime * speed + 6.2831*point);\n            vec2 diff = neighbour + point - f_uv;\n            m_dist = smin(m_dist, length(diff) * m_dist, 16.0);\n            //m_dist = min(m_dist, length(diff) * m_dist);\n            \n        }\n    }\n    \n    return vec4(m_dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float speed = 2.;\n\tvec2 uv = (fragCoord.xy -.5 * iResolution.xy) / iResolution.y;\n    uv.x -= iTime * (speed / 4.);\n    \n    fragColor = cells(uv * 5., speed);\n}","name":"Image","description":"","type":"image"}]}