{"ver":"0.1","info":{"id":"lXsSWj","date":"1710017510","viewed":56,"name":"Vela","username":"plyr4","description":"having fun, making the Vela logo https://go-vela.github.io/docs/ using https://iquilezles.org/articles/distfunctions2d/ shapes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["vela"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// pallete\nvec3 red=vec3(1.,0.,0.);\nvec3 yellow=vec3(1.,.7843,0.);\nvec3 green=vec3(.2,.8,.2);\nvec3 cyan=vec3(.01,1.,1.);\nvec3 lavender=vec3(.7569,.0667,.9255);\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdEquilateralTriangle(in vec2 p,in float r)\n{\n    float k=sqrt(3.);\n    p=-p;\n    p.x=abs(p.x)-r;\n    p.y=p.y-r/k;\n    if(p.x+k*p.y>0.)p=vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n    p.x-=clamp(p.x,-2.*r,0.);\n    return-length(p)*sign(p.y);\n}\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdStar5(in vec2 p,in float r,in float rf)\n{\n    const vec2 k1=vec2(.809016994375,-.587785252292);\n    const vec2 k2=vec2(-k1.x,k1.y);\n    p.x=abs(p.x);\n    p-=2.*max(dot(k1,p),0.)*k1;\n    p-=2.*max(dot(k2,p),0.)*k2;\n    p.x=abs(p.x);\n    p.y-=r;\n    vec2 ba=rf*vec2(-k1.y,k1.x)-vec2(0,1);\n    float h=clamp(dot(p,ba)/dot(ba,ba),0.,r);\n    return length(p-ba*h)*sign(p.y*ba.x-p.x*ba.y);\n}\n\n// returns pixel color for rendering the vela logo using math\nvoid vela(out vec4 fragColor,in vec2 fragCoord,vec2 resolution,float time)\n{       \n    float size = 1.25;\n    vec3 backgroundColor = lavender * 2.;\n    // oscillating variance\n    float cosWave=(.3+.25*abs(cos(.2*time+0.)))/(3./size);\n    float variance=cosWave;\n    \n    vec2 p=(2.*fragCoord-resolution.xy)/resolution.y;\n    vec3 pixelColor=backgroundColor*.1;\n    \n    // triangle\n    // for some reason if we move this variable lower, it breaks things\n    vec3 triangleColor=yellow;\n    vec2 trianglePos=vec2(p.x-0.,p.y-variance);\n    // calculate shape\n    float triangle=sdEquilateralTriangle(trianglePos,variance);\n    \n    bool inside=false;\n    if(triangle>.01){\n        inside=false;\n    }else{\n        inside=true;\n    }\n    \n    // star\n    float starSize=6.;\n    vec2 starPos=trianglePos+vec2(-1.*variance,.5*variance);\n    // calculate shape\n    float star=sdStar5(starPos,variance*(1./starSize),2.);\n    float starPulse=0.2+sin(2.*-((2./5.)*time)+(star));\n    \n    // track star pulse separate to apply to the background separately\n    float star1=star;\n    star1=star*starPulse;\n    \n    // base star color partially on triangle value\n    vec3 starColor=vec3(5.)*abs(sin(triangle))*1.;\n    if(starPulse>0.){\n        starColor=lavender*starPulse;\n        triangleColor=green;\n    }\n    \n    // mix background color based on star pulse\n    pixelColor=mix(pixelColor,vec3(.2),smoothstep(.005,.01,(star1)))*2.;\n    pixelColor*=1.-exp(-3.*abs(triangle));\n    \n    // base V pulse animation\n    float pulseSpeed=1.;\n    float vPulse=sin((pulseSpeed*-(time)+triangle))/pulseSpeed;\n    if(!inside){\n        triangle*=vPulse;\n    }\n    \n    // use this to oscillate the main V color\n    if(abs(vPulse)>.02){\n        triangleColor=cyan;\n    }\n    \n    // oscillating size of animation\n    float backgroundPulse=.8+.2*cos(50.*triangle+time*.1);\n    // outer pulse\n    if(!inside){\n        pixelColor*=backgroundPulse;\n    }\n    \n    // outer triangle\n    pixelColor=mix(pixelColor,vec3(1.)*triangleColor,1.-smoothstep(.001,.008,abs(triangle)));\n    \n    // inner triangle\n    trianglePos=vec2(p.x-0.,p.y-variance*.785);\n    triangle=sdEquilateralTriangle(trianglePos,variance*.8);\n    pixelColor=mix(pixelColor,vec3(1.),1.-smoothstep(.0025,.004 + 0.015*variance,abs(triangle)));\n    \n    // corner star\n    pixelColor=mix(pixelColor,starColor,1.-smoothstep(0.,.002,(star)))*2.;\n    \n    fragColor=vec4(pixelColor,1.);\n}\n\n// driver for shadertoy.\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n    vec2 resolution=iResolution.xy;\n    float time=iTime;\n\n    vela(fragColor,fragCoord.xy,resolution,time);\n}\n","name":"Image","description":"","type":"image"}]}