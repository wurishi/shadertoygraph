{"ver":"0.1","info":{"id":"7sG3D1","date":"1631460878","viewed":508,"name":"simple move moon","username":"huataishi","description":"just study","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["moon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"simple move  moon\" \n// \"by huataishi\"\n\n#define PI 3.1415\n#define S(x,y,z) smoothstep(x,y,z)\n#define B(x,y,z,b) S(x, x+b, z)*S(y+b, y, z)\n#define saturate(x) clamp(x,0.,1.)\n\n#define MOD3 vec3(.1031,.11369,.13787)\n\n#define MOONPOS vec2(1, .8)\n\nfloat fbm( vec2 p )\n{\n    return 0.5000*texture( iChannel1, p*1.00 ).x + \n           0.2500*texture( iChannel1, p*2.02 ).x + \n           0.1250*texture( iChannel1, p*4.03 ).x + \n           0.0625*texture( iChannel1, p*8.04 ).x;\n}\n//----------------------------------------------------------------------------------------\n\n//  1 out, 2 in...\nfloat hash(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec4 moon(vec3 col,vec2 fragCoord) {\n    float t = iTime -floor(iTime/60.)*60.;\n    vec2 p = (2.*fragCoord) / iResolution.y;\n       \n    float f = fbm( 0.002*vec2(p.x,1.0)/p.y );\n     \n   p -= (sin(t/120.)/.3);\n   p.x -= t/40.;\n    // moon\n    float d = length(p);\n    vec3 moon = vec3(0.98,0.97,0.95)*(1.0-0.1*smoothstep(0.2,0.5,f));\n    col += 0.8*moon*exp(-4.0*d)*vec3(1.1,1.0,0.8);\n    col += 0.2*moon*exp(-2.0*d);\n    moon *= 0.85+0.15*smoothstep(0.25,0.7,fbm(0.08*p+0.3));\n    col = mix( col, moon, 1.0-smoothstep(0.2,0.215,d) );\n    \n    \n    return vec4(col,1.);\n}\n\n\nfloat stars(vec2 uv, float t) {\n    \n    float n1 = hash(uv*10000.);\n    float n2 = hash(uv*11234.);\n    float alpha1 = pow(n1, 30.);\n    float alpha2 = pow(n2, 30.);\n    \n    float twinkle = sin((uv.x-t+cos(uv.y*20.+t))*10.);\n    twinkle *= cos((uv.y*.234-t*3.24+sin(uv.x*12.3+t*.243))*7.34);\n    twinkle = (twinkle + 1.)/2.;\n    return alpha1 * alpha2 * twinkle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float t = iTime/7.;\n     \n    vec4 col = vec4(.1,.15,.2,1.);\n    col += stars(uv, t);\n    col = moon(col.xyz,fragCoord);\n \n    \n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}