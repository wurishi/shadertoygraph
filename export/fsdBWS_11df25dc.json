{"ver":"0.1","info":{"id":"fsdBWS","date":"1657120286","viewed":161,"name":"endless hole","username":"alal111","description":"1","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["endless"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n#define MAX_POINTS 60.\n\n\n\nfloat detectPoint(vec3 ro, vec3 rd, vec3 p){\n    return length(cross(p - ro, rd)) / length(rd);\n}\n\nmat2 rotate(float p){\n    float c = cos(p);\n    float s = sin(p);\n    \n    return mat2(c, -s, s, c);\n}\n\nfloat hash21(vec2 p){  return fract(sin(dot(p, vec2(27.619, 57.583)))*43758.5453); }\n\nvec3 glareLayer(vec3 ro, vec3 rd, float rad, float depth){\n    \n    vec3 col = vec3(0);\n    for(float i = .0; i < MAX_POINTS; i++){\n            float curr = i/MAX_POINTS;\n            float r = mix(rad , rad+2., curr);\n            float glare = mix(.002 ,.01, curr);\n            float size = mix(.01, .2, curr);\n            vec3 color = vec3(1.-depth, 0.1, depth - .1);\n            float x = r*sin(hash21(vec2(i))*3.1415*3. + i + iTime*.05*curr);\n            float z = r*cos(hash21(vec2(i))*3.1415*3. + i + iTime*.05*curr);\n            vec3 f = vec3(x, z , 2.);\n\n            float p = glare/detectPoint(ro, rd, f);\n            \n            p += S(.0, .43, p);\n            \n           \n            float res = p+S(size, size-curr*.1, detectPoint(ro, rd, f));\n            \n            col += res*color;\n        }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.x;\n    vec3 col = vec3(0);\n    vec3 ro = vec3(0, 0, -4.);\n    vec3 lookAt = vec3(0);\n    vec3 forward = normalize(lookAt - ro);\n    vec3 right = cross(vec3(0, 1., 0), forward);\n    vec3 up = cross(forward, right);\n    vec3 c = ro+forward;\n   \n   \n    \n    \n    for(float i = 0.; i < 1.; i+=1./5.){\n        \n        float z = fract(i + iTime*.5);\n        uv *= rotate((i/5.)*iTime*1.9*sign(hash21(vec2(i))-.5 - .2));\n        vec3 ip = c + right*uv.x + up*uv.y;\n        vec3 rd = ip - ro;\n        float z1 = mix(3., .5, z);\n        col += glareLayer(ro*z1 + vec3(0, 0, i), rd, .8, z)*(z*S(1., .8, z));\n    }\n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}