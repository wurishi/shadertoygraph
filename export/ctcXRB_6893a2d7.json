{"ver":"0.1","info":{"id":"ctcXRB","date":"1685511104","viewed":131,"name":"take a breather","username":"tono","description":"take a breather","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["vj"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsc3RM","filepath":"https://soundcloud.com/tonoshake/breath","previewfilepath":"https://soundcloud.com/tonoshake/breath","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\n#define TT(x,y) floor(x)+pow(fract(x),y)\nfloat pi = acos(-1.);\n\n\nvec2 min2(vec2 a,vec2 b)\n{\n    if(a.x < b.x)\n    {\n        return a;\n    }\n    return b;\n}\n\nvec2 map(vec3 p)\n{\n    vec2 o = vec2(10.,0.);\n    \n    vec3 s = vec3(3.);\n    \n    float t = TT(iTime, 10.);\n    float span = 23.;\n    vec3 id = floor(p/span);\n    vec3 pp = p;\n    vec3 op = p;\n    p = mod(p , span)-span/2.;\n    //p.xz = sin(p.xz/10.);\n    //p = mix(p,pp,mod(floor( TT(iTime,50.)*pi  ),2.) );\n    \n    p.xz *= rot(p.y/2. * sin(t) + id.x + id.y + id.z);\n    p.yz *= rot(iTime);\n    \n    \n    p -= clamp(p,-s,s);\n    o.x = length(p) - (.1 + (sin(p.y + iTime)*.5+1.) );\n    \n    p = pp;\n    \n    p.xy *= rot(p.z/33.);\n    \n    p.yz *= rot(iTime/30.);\n    \n    p.x = abs(p.x) - 19.1;\n    for(int i = 0; i < 3;i++)\n    {\t\n    \tp.x = abs(p.x) - 8.1;\n        p.xz *= rot(0.03);\n\t\tp.z = abs(p.z) - .3;\n        \n        p.yz *= rot(0.03);\n    }\n    //p.x = mod(min(p.x,0.),3.)-1.5;\n    p.z += iTime * 10. + TT(iTime/2.,13.)*15.;\n    \n    p.z = mod(p.z , 16.) - 8.;\n    p.xz *= rot(iTime);\n    p.yz *= rot(iTime /3.);\n    p -= clamp(p,-s,s);\n    o.x = min(o.x,length(p) - 0.4);\n    o.x = length(p) - 0.4;\n    \n    op.xz *= rot(iTime);\n    op.yz *= rot(iTime);\n    float c = length(op)-15.;\n    op -= clamp(op,-vec3(10.),vec3(10.));\n    c = mix(c,length(op)-0.,sin(TT(iTime/2.,15.))*.5+1.);\n    o = min2(o,vec2(c,1.));\n    o.x *= 0.2;\n    \n    \n    return o;\n}\n\nvec2 march(vec3 cp,vec3 rd,float s)\n{\n    float depth = 0.;\n    for(int i = 0; i < 128 ;i++){\n    \tvec3 rp = cp + rd * depth;\n        vec2 d = map(rp);\n        if(d.x < .01 + s/12.)\n        {\n            return vec2(depth,d.y);\n        }\n        depth += d.x;\n    }\t\n    return vec2(-depth);\n}\nvec2 random22(vec2 st)\n{\n    st = vec2(dot(st, vec2(127.1, 311.7)),\n                dot(st, vec2(269.5, 183.3)));\n    return -1.0 + 2.0 * fract(sin(st) * 43758.5453123);\n}\nvec3 celler2D(vec2 i,vec2 sepc)\n{\n    vec2 sep = i * sepc;\n    vec2 fp = floor(sep);\n    vec2 sp = fract(sep);\n    float dist = 5.;\n    vec2 ouv = vec2(0.);\n    vec2 mp = vec2(0.);\n\tfloat t = floor(iTime/6.) + pow(fract(iTime/6.),6.);\n        for (int y = -1; y <= 1; y++)\n        {\n            for (int x = -1; x <= 1; x++)\n            {\n                vec2 neighbor = vec2(x, y );\n                vec2 rpos = vec2(random22(fp+neighbor));\n                vec2 pos = sin( (rpos*6. +t * pi * 1.3) )* 0.5 + 0.5;\n                float divs = length(neighbor + pos - sp);\n                vec2 cp = neighbor + pos - sp;\n                \n                //divs = (cp.x+cp.y);\n                if(dist > divs)\n                {\n                    ouv = rpos + neighbor + fp;\n                    mp = pos;\n                \tdist = divs;\n                }\n            }\n    }\n    return vec3(ouv,dist);\n}\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    float fine = .2;\n    vec3 cell = celler2D(p,vec2(fine));\n    \n    \n\tvec3 col = vec3(0.);\n    p.x += sin(iTime/6.);\n    //p.y += cos(iTime/31.)*10.;\n    vec3 target = vec3(0.);\n    target .y += sin(iTime/3.)*6.;\n    vec3 cp = vec3(0.,0.,-136.).zyx;\n    \n    \n    cp.xz = (cell.xy-0.5) * 150.;\n    cp.z += sin(iTime/10.)*10.;\n    //cp.z += sin(iTime/10.);\n    \n    //cp.xz *= rot(iTime/13.);\n    vec3 cd = normalize(target - cp);\n    vec3 cu = vec3(0.,1.,0.);\n    vec3 cs = normalize(cross(cd,cu));\n    \n    float fov = .5 - dot(p,p);\n    fov = mix(fov , 2.5 , step(sin(cell.x+cell.y),0. ));\n    //fov = mix(2.5,fov, sin( sin(TT(iTime,50.))*6. ) );\n   // fov = 2.5;\n    vec3 rd = normalize(cd * fov + cu * p.y + cs * p.x);\n    float s = step(sin(13.213* (cell.x+cell.y) ),0. );\n    vec2 d = march(cp,rd,s);\n    vec3 bg = vec3(0.,0.01,0.06);\n    col = bg;\n    if(d.x > 0.)\n    {\n        vec3 pos = cp + rd * d.x;\n        vec2 e = vec2(1.,-1.) * .5;\n        vec3 N = normalize(\n            e.xxy * map(pos + e.xxy).x +\n            e.yyx * map(pos + e.yyx).x +\n            e.yxy * map(pos + e.yxy).x +\n            e.xxx * map(pos + e.xxx).x\n        );\n        col = N;\n        \n        vec3 sun = normalize(vec3(3.,6.,9.));\n        //sun.xz *= rot(iTime);\n        float diff = max(0.,dot(N,-sun));\n        float rim = clamp(1. - dot(N,-rd),0.,1.);\n        rim = pow(rim , 10.);\n        //rim = 1. - rim;\n        float sp = max(0.,dot(rd,reflect(N,sun) ) );\n        \n        vec3 mat = vec3(1.,0.,0.);\n        \n        mat = mix(mat,vec3(0.,1.,0.),d.y);\n        col = mat * diff + rim * mix(vec3(0.,0.4,.8),vec3(0.,1.,0.),d.y) * 10. + sp * sp;\n        \n        float tt = 1. - exp(-.003 * d.x * d.x * d.x);\n        col = mix(bg,col,tt);\n        \n        col = mix(col , col.ggg , mod(TT(iTime/10. +cell.x + cell.y + p.x/100., 10.),2.) );\n        float ss = 2.;\n        col = floor(col * ss)/ss;\n        \n    }\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}