{"ver":"0.1","info":{"id":"7dGfDz","date":"1657982248","viewed":93,"name":"Sphere cage","username":"rodgzilla","description":"Sphere trapped in fractal cage","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time .3 * iTime\n#define ZPOS -40.\n\nfloat PI = acos(-1.);\n\nmat2 rot2d(float a){\n  float c = cos(a), s = sin(a);\n  \n  return mat2(c, s, -s, c);\n}\n\nfloat sph(vec3 p, float r){\n    return length(p) - r;\n}\n\nfloat cyl(vec3 p, vec3 c){\n  return length(p.xy - c.xy) - c.z;\n}\n\n\nvec3 kifs(vec3 p, float tmin, float tmax, float m1, float m2, float s, float r, float it) {\n  float t = floor(time) + smoothstep(tmin, tmax, fract(time));\n\n  for (float i = 0.; i < it; i++) {\n    p.xy *= rot2d(t * m1 + i);\n    p.yz *= rot2d(t * m2 - i);\n    p = abs(p);\n    p -= s;\n    s *= r;\n  }\n  \n  return p;\n}\n\n\nvec3 glow = vec3(0, 0, 0);\nfloat at = 0.;\n\nfloat map(vec3 p) {\n    float d = 1000.;\n    \n    vec3 pk1 = kifs(p, 0., .33, 0.5, 0.6, 3.5, .6, 1.);\n    vec3 pk2 = kifs(p, 0.66, 1., 0.5, 0.6, 3.5, .6, 4.);\n    float tm = floor(time) + smoothstep(.33, .66, fract(time));\n    vec3 pk = mix(pk1, pk2, .5 * sin(tm) + .5);\n\n    float r = .1;\n    d = min(d, cyl(pk, vec3(2, 0, r)));\n    d = min(d, cyl(pk, vec3(-2, 0, r)));\n    d = min(d, cyl(pk.yxz, vec3(2, 0, r)));\n    d = min(d, cyl(pk.yxz, vec3(-2, 0, r)));\n    d = min(d, cyl(pk.xzy, vec3(-2, 0, r)));\n    d = min(d, cyl(pk.zxy, vec3(-2, 0, r)));\n    d = min(d, cyl(pk.yzx, vec3(-2, 0, r)));\n    d = min(d, cyl(pk.zyx, vec3(-2, 0, r)));\n    d = min(d, cyl(pk.xzy, vec3(2, 0, r)));\n    d = min(d, cyl(pk.zxy, vec3(2, 0, r)));\n    d = min(d, cyl(pk.yzx, vec3(2, 0, r)));\n    d = min(d, cyl(pk.zyx, vec3(2, 0, r)));\n\n    d = min(d, sph(p, 5.));\n\n    at += 1. / (d * 1.5);\n    \n    return d;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n\n  vec3 col = vec3(0);\n  vec3 ro = vec3(0, 0., ZPOS);\n  vec3 rd = normalize(vec3(uv.x, uv.y, 1.));\n\n  float d = 0.;\n  vec3 glow = vec3(0);\n\n  for (int i = 0; i < 100; i++) {\n    vec3 p = ro + d * rd;\n    float ds = map(p);\n    \n    if (ds < 0.01 || ds > 100.) {\n      break;\n    }\n    d += ds * 1.;\n    glow += .01 * at * vec3(\n      .55,\n      .43, \n      .9\n    );\n  }\n  \n  vec3 p = ro + d * rd;\n  vec2 e = vec2(0.01, 0);\n  vec3 n = normalize(map(p) - \n    vec3(\n      map(p - e.xyy),\n      map(p - e.yxy),\n      map(p - e.yyx)\n    )\n  );\n\n  vec3 lp = ro;\n  vec3 tl = lp - p;\n  vec3 tln = normalize(tl);\n  float dif = dot(tln, n);\n  \n  col = vec3(dif);\n  col = dif * glow;\n  fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}