{"ver":"0.1","info":{"id":"slcGWN","date":"1636279125","viewed":73,"name":"Hipnosapo","username":"peremoya2000","description":"Simple inwards interactive bifocal circular scrolling","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["interactive","uv","psychedelic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n   \n    vec2 uv0 = uv;\n    \n    //Normalized mouse position\n    vec2 mousePos = iMouse.xy / iResolution.xy -.5;\n    mousePos.x*=iResolution.x/iResolution.y;\n    if(iMouse.z<.1) mousePos = vec2(0);\n    \n    //Set UV center to MousePos and mul by centered UVs\n    uv-=mousePos;\n    uv*=uv0; \n        \n    // Time varying pixel color    \n    float r= abs(sin(length(uv)*20.+iTime));\n    float g= abs(cos(length(uv)*21.+iTime*1.15));\n    float b= (1.f-r)*abs(cos(iTime*.6));\n    \n    \n    // Output to screen\n    fragColor = vec4(r,g,b,1.);\n}","name":"Image","description":"","type":"image"}]}