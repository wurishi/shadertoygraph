{"ver":"0.1","info":{"id":"lXjcWW","date":"1727295710","viewed":13,"name":"basic twister thing","username":"vurpo","description":"classic 2d rainbow twister effect","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["demoscene"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592;\n\nvec3 rainbow(float x) {\n  vec3 c = vec3(x, 0.6, 1.0);\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 color(vec2 uv) {\n    float twist_y = mod(iTime+uv.y+1.4*sin(uv.y*5.+cos(iTime))+0.55*sin(uv.y*2.3+cos(iTime*0.9)), PI/2.);\n    float twist_x = 0.05*sin(iTime+uv.y*5.4);\n    float twist_width = 0.12;\n    float a = sin(twist_y+PI/4.);\n    float b = sin(twist_y-PI/4.);\n    float c = -a;\n    \n    vec3 color0 = rainbow(0.1*iTime-0.1*uv.y);\n    \n    vec3 color1 = color0*pow(abs(a-b),1.2);\n    vec3 color2 = color0*pow(abs(b-c),1.2);\n    \n    float s1 = step(uv.x, 0.5+twist_x+twist_width*a)*(1.-step(uv.x, 0.5+twist_x+twist_width*b));\n    float s2 = step(uv.x, 0.5+twist_x+twist_width*b)*(1.-step(uv.x, 0.5+twist_x+twist_width*c));\n    float s3 = 1.0-s1-s2;\n    return color1*s1 + color2*s2 + 0.8*color0*s3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = vec4(color(uv),1.0);\n}","name":"Image","description":"","type":"image"}]}