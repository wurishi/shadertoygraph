{"ver":"0.1","info":{"id":"tldyzN","date":"1608620919","viewed":182,"name":"rainbowglitch [⚠️epil?]","username":"HaleyHalcyon","description":"epileptica","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["epilepsy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TAU = 3.14159265358979*2.;\nconst float TAW = TAU * 2. / 3.;\n\nuint roll(uvec2 xy, uint t) {\n    const uint a = 1664525u;\n    const uint m = 1013904223u;\n\n    uint seed = 65538u * xy.x + 782651u * xy.y + 1979u * t;\n    \n    uint x0 = (seed * a) % m;\n    uint x = (x0 * a) % m;\n    \n    return x & 65535u;\n}\n\nvec3 huey(float t) {\n    return smoothstep(0.0, 1.0, vec3(sin(t * TAU), sin(t * TAU + TAW), sin(t * TAU - TAW)) + 1. / 2.);\n}    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float Time = fract(iTime / 4.);\n    uint time = uint(iTime * 20.);\n   \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n    uv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float linDis = distance(uv, vec2(0));\n    float lolDis = 14. * log(linDis) - 6. * linDis;\n    \n    vec2 rt = vec2(\n        256. + lolDis +\n        0.5 * sin(0.4 * lolDis + Time * 2. * TAU)\n    ,\n        256. + mod(atan(uv.x, uv.y) / TAU * 64. +\n        0.3 * sin((0.2 * lolDis + 2.0 * Time) * TAU), 32.)\n    );\n    \n    float x = smoothstep(0.4,0.6,float(roll(uvec2(rt), time)) / 65536.);\n    \n    // Output to screen\n    fragColor = vec4(\n      (x)      * huey(4.0 * Time + 0.4 * linDis) +\n      (1. - x) * huey(4.0 * Time + 0.6 * linDis)\n    , 1);\n}","name":"Image","description":"","type":"image"}]}