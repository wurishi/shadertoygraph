{"ver":"0.1","info":{"id":"mt3Xzs","date":"1685712918","viewed":73,"name":"The Enigma","username":"altunenes","description":"Stop the shader and focus your gaze on the center  Over time, you will experience a vibrant and shimmering effect(?) :octopusballoon: It also may cause the perception of rotatory motion in the circles. Does the effect increase when there is a real motion?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["illusion","perception","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x) / 0.9;\n    float r = length(uv);\n    float angle = atan(uv.y, uv.x);\n    \nfloat lines = 77.0;\n    float line_width = 0.011;\n    if (iMouse.z > 0.0) {\n        line_width = 3.011;\n    }float angle_mod = mod(angle, 2.0 * PI / lines);\n//removed anim.  + iTime * 0.1\n\nfloat gradient = 0.5 + 0.5 * sin(r * PI);\n\nfloat dynamic_line_width = line_width + 0.0001 * sin(r * 5.0);\n\nfloat line_mask = smoothstep(dynamic_line_width, dynamic_line_width, abs(angle_mod - PI / lines));\nvec3 line_color = mix(vec3(gradient), vec3(0.0), line_mask);\n    // Rings\n    float r1 = step(0.25, r) - step(0.27, r); // outer_ring1\n    float r2 = step(0.27, r) - step(0.30, r); // outer_ring2\n    float r3 = step(0.44, r) - step(0.49, r); // outer_ring3\n    float r4 = step(0.49, r) - step(0.54, r); // outer_ring4\n    float r7 = step(0.14, r) - step(0.15, r); // outer_ring7 (inner ones)\n    float r8 = step(0.15, r) - step(0.17, r); // outer_ring8\n    float center_disk = 1.0 - smoothstep(0.0, 0.1, r);\n\n    // Ring colors\n    vec3 r1_c = vec3(180.0 / 255.0, 0.0, 153.0 / 255.0) * 0.7; \n    vec3 r2_c = vec3(153.0 / 255.0, 0.0, 153.0 / 255.0) * 0.7; \n    vec3 r3_c = vec3(180.0 / 255.0, 0.0, 153.0 / 255.0) * 0.7;  \n    vec3 r4_c = vec3(153.0 / 255.0, 0.0, 153.0 / 255.0) * 0.7;  \n    vec3 r7_c = vec3(180.0 / 255.0, 0.0, 153.0 / 255.0) * 0.7;  \n    vec3 r8_c = vec3(153.0 / 255.0, 0.0, 153.0 / 255.0) * 0.7;  \n    vec3 center_disk_c = vec3(255.0 / 255.0, 255.0 / 255.0, 0.0); // center_disk_color\n\n    vec3 circle_color = r1 * r1_c +\n                        r2 * r2_c +\n                        r3 * r3_c +\n                        r4 * r4_c +\n                        r7 * r7_c +\n                        r8 * r8_c +\n                        center_disk * center_disk_c;\n\n    vec3 col = mix(line_color, circle_color, max(max(max(max(max(max(r1, r2), r3), r4), r7), r8), center_disk));\n    col = pow(col, vec3(1.0 / 0.8));\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}