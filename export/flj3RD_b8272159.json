{"ver":"0.1","info":{"id":"flj3RD","date":"1623445721","viewed":322,"name":"Cubemap texture with mouse","username":"catafest","description":"simple test with cubemap texture","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["mouse","texture","cubemap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// more on https://www.shadertoy.com/view/XsjfDD\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Set background color - blue\n    //fragColor = vec4(0.0, 0.0, 1.0, 1.0);\n    \n    //Set background color - black\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n    // Normalized pixel coordinates (from 0 to 1) and camera distance\n    float distance = 3.0;\n    vec2 uv = distance * (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.xx;\n    // Get mouse position between 0 and 1 \n    float rot_x = (iMouse.x / iResolution.x) * 3.1415*2.0;\n    float rot_y = (iMouse.y / iResolution.y) * 3.1415;\n    // Set camera rotation: left - right with rot_x, up - down with rot_y\n    vec3 camera_rotation = vec3(cos(rot_x), cos(rot_y), sin(rot_x));\n\n    vec3 f = -normalize(camera_rotation);     // Camera position forward\n    vec3 r = normalize(vec3(-f.z, 0.0, f.x)); // Camera right \n    vec3 u = cross(r, f);                     // Camera to normalize image\n    vec3 rd = normalize(f + uv.x * r + uv.y * u);// Render formula for fragColor output\n\n    // Output to screen\n    fragColor += texture(iChannel0, rd);\n\n}","name":"Image","description":"","type":"image"}]}