{"ver":"0.1","info":{"id":"dtf3Ws","date":"1672662462","viewed":315,"name":"Sphere order to chaos (and back)","username":"FabriceNeyret2","description":"vaguely inspired by [url]https://twitter.com/etiennejcb/status/1609340724515901442[/url]\nReusing the base of Xor's Fibonacci sphere sampling [url]https://shadertoy.com/view/7tVSDh[/url]","likes":26,"published":3,"flags":0,"usePreview":0,"tags":["sphere","glow","sampling","fibonacci","short","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of \"Little Fibonacci Sphere\" by Xor. https://shadertoy.com/view/7tVSDh\n\nvoid mainImage( out vec4 O, vec2 u)\n{\n    vec2 R = iResolution.xy, p,\n         U = ( u+u - R ) / R.y;\n    O*=0.;    \n\n    for(float i=-1.; i<1.; i+=6e-3)\n    {\n        p = cos(i*4e2+iTime+vec2(0,11))*sqrt(1.-i*i);    // Fibonacci distrib + Rotate\n        vec3 h = 2.*fract(1e4*sin(i*vec3(1733,-7117,2913)))-1.; // 3D rand\n        h.xz *= cos(i*4e2+iTime+vec2(0,11));\n        h = mix( h, vec3(p.x,i,p.y), .9+.1*sin(iTime) ); // interpolate between both points\n        O += smoothstep(3./R.y,0.,length(U-h.xy/(h.z+2.))-.01/(h.z+2.)); // perspective + draw point\n    }\n}\n","name":"Image","description":"","type":"image"}]}