{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PI 3.1415926\n\n#define t iTime\n#define r iResolution.xy\n#define c fragCoord\n#define v vec2(0.,1.)\n\nfloat box( in vec3 _p, in vec3 _s )\n{\n    vec3 d = abs( _p ) - _s;\n    return min( max( d.x, max( d.y, d.z ) ), 0. ) + length( max( d, 0. ) );\n}\n\nfloat tube( in vec3 _p )\n{\n    vec3 p = _p+v.xyx*.05;\n    float th = p.y*( 150. );\n    p.xz = mat2( cos(th), -sin(th), sin(th), cos(th) )*p.xz;\n    float pole = length( p.xz+.01 )-.05;\n    float cut = box( p, v.yyy*.3 );\n    return max( pole, cut );\n}\n\nfloat cap( in vec3 _p )\n{\n    vec3 p = _p-v.xyx*.25;\n    float sphere = length( p*vec3( 1., 2., 1. ) )-.1;\n    float cut = box( p-v.xyx*.08, v.yyy*.1 );\n    float mountain = max( sphere, cut );\n    float cros = box( p-v.xyx*.05, vec3( .015, .015, .1 ) );\n    cros = min( cros, box( p-v.xyx*.05, vec3( .1, .015, .015 ) ) );\n    return max( mountain, -cros );\n}\n\nfloat scene( in vec3 _p )\n{\n    vec3 p = _p;\n    float th = t;\n    p.xy = mat2( cos(th), -sin(th), sin(th), cos(th) )*p.xy;\n    th = t*.73;\n    p.yz = mat2( cos(th), -sin(th), sin(th), cos(th) )*p.yz;\n    vec3 rep = vec3( .7, 1.4, .7 );\n    p += rep/2.+v.xyx*t*1.;\n    p = mod( p+rep/2., rep )-rep/2.;\n    th = -t*2.56;\n    p.zx = mat2( cos(th), -sin(th), sin(th), cos(th) )*p.zx;\n    return min( cap( p ), tube( p ) );\n}\n\nvec3 sceneNormal( in vec3 _p, in float _d )\n{\n    vec2 d = v*_d;\n    return normalize( vec3(\n        scene( _p+d.yxx ) - scene( _p-d.yxx ),\n        scene( _p+d.xyx ) - scene( _p-d.xyx ),\n        scene( _p+d.xxy ) - scene( _p-d.xxy )\n    ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (c*2.-r)/r.x;\n    \n    vec3 camPos = vec3( 0., 0., 1. );\n    vec3 camCen = v.xxx;\n    vec3 camDir = normalize( camCen - camPos );\n    vec3 camAir = v.xyx;\n    vec3 camSid = cross( camDir, camAir );\n    vec3 camTop = cross( camSid, camDir );\n    \n    vec3 rayDir = normalize( p.x*camSid + p.y*camTop + camDir );\n    \n    float dist = 1E3;\n    float rayLen = 0.;\n    vec3 rayPos = camPos;\n    for( int i=0; i<32; i++ )\n    {\n        dist = scene( rayPos )*.8;\n        rayLen += dist;\n        rayPos = camPos + rayDir*rayLen;\n        if( abs( dist ) < 1E-3 || 1E2 < rayLen ){ break; }\n    }\n    \n    vec3 col = v.xxx;\n    float dec = exp( -rayLen*.6 );\n    if( dist < 1E-1 )\n    {\n        vec3 matColor = v.yyy*6.6;\n        vec3 light = camPos;\n        vec3 normal = sceneNormal( rayPos, 1E-3 );\n        float dif = dot( normalize( rayPos-light ), -normal )*.5;\n        float amb = .2;\n        float spe = pow( dot( normalize( rayPos-light ), -normal )*1.02, 1E2 );\n        col = vec3( ( dif + amb )*matColor + spe )*dec;\n    }\n    col += vec3( 1.-dec*10. )*vec3( .4, .9, 2. );\n    \n\tfragColor = vec4( col, 1. );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MljGR1","date":"1427029155","viewed":254,"name":"20150322_screw","username":"FMS_Cat","description":"ãƒã‚¸æãã¾ã™","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching"],"hasliked":0,"parentid":"","parentname":""}}