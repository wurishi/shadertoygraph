{"ver":"0.1","info":{"id":"7sdXzM","date":"1632892458","viewed":94,"name":"interpolation go wiggly","username":"HaleyHalcyon","description":"is this bezier interpolation? probably not but meh","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["interpolation"],"hasliked":0,"parentid":"sdtXzM","parentname":"Fork Fork ㄎㄗムㄎ巾 haleyhalcy 019"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU (6.283185307)\n#define HEX(x) (vec3((x >> 16) & 255, (x >> 8) & 255, x & 255) / 255.)\n\nfloat interpIter(float t, float P1, float P2){\n    float tInv = 1. - t;\n    return(\n        //tInv*tInv*tInv*0.+\n        3.*t*tInv*tInv*P1+\n        3.*t*t*tInv*P2+\n        t*t*t*1.\n    );\n}\n\nfloat interp(float t, float P1, float P2){\n    t = clamp(0., 1., t);\n    return interpIter(\n    interpIter(t, P1, P2), P1, P2\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float time = fract(iTime);\n  // Normalized pixel coordinates (from 0 to 1)\n  vec2 uv = gl_FragCoord.xy / iResolution.xy;\n  \n  vec3 colBase = HEX(0x9B5DE5);\n  vec3 colSp   = HEX(0x00BBF9);\n  \n  float thres = interp(\n      uv.x, sin(time * TAU) * 0.5 + 0.5, cos(time * TAU) * 0.5 + 0.5\n  );\n  \n  \n  vec3 col = mix(\n      colBase, colSp, step(uv.y, thres)\n  );\n  \n  // Output to screen\n  fragColor = vec4(\n    col, 1.0\n  );\n}","name":"Image","description":"","type":"image"}]}