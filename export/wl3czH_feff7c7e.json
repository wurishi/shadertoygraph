{"ver":"0.1","info":{"id":"wl3czH","date":"1608478323","viewed":81,"name":"Diagonal Lines Pattern","username":"jorgemoag","description":"Diagonal Lines","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 tiling = vec2(8.0, 16.0);\n\n// dave haskin: https://www.shadertoy.com/view/XdXGW8\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return -1.0 + 2.0 * abs(fract((p3.x + p3.y) * p3.z));\n}\n\nfloat phase(vec2 p) {\n    vec2 x = round(p) / tiling;\n    float a = 3.0 * hash12(x) + 5.0 * hash12(x);\n    return abs(sin(0.125 * iTime + a)) > 0.5 ? 1.0 : 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = tiling * fragCoord/iResolution.y;\n    \n    float h = phase(uv);\n    float p = fract(uv.x + uv.y);\n    float q = fract(-uv.x + uv.y);\n    float d = mix(smoothstep(abs(p - 0.5), 0.175, 0.45),\n                  smoothstep(abs(q - 0.5), 0.175, 0.45), \n                  h);\n    \n    fragColor = vec4(vec3(d), 1.0);\n}","name":"Image","description":"","type":"image"}]}