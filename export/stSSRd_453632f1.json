{"ver":"0.1","info":{"id":"stSSRd","date":"1628354586","viewed":280,"name":"Depth Texture Raytracer thingy","username":"Peace","description":"input = depth texture; output = nice 3D raytraced like image, I don't know what I made is maybe it's even new idk.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 pointToUV(vec3 p, vec3 n)\n{\n    vec3 e1 = normalize(cross(n, vec3(1, 0, 0)));\n    if(e1 == vec3(0))\n    e1 = normalize(cross(n, vec3(0, 0, 1)));\n    \n    vec3 e2 = normalize(cross(n, e1));\n    return vec2(dot(e1, p), dot(e2, p));\n}\n\nfloat getShadow(vec3 p, vec2 uv, vec3 lp)\n{\n    vec3 rd = normalize(lp - p);  \n    vec2 texel = vec2(1.0) / iResolution.xy * rd.xy;\n    float currDepth = texture(iChannel1, uv).r;\n    for(float i = 0.0; i < 256.0; ++i)\n    {\n        float nextDepth = texture(iChannel1, uv + texel * i).r;\n        currDepth += rd.z;\n        if(nextDepth > currDepth)\n        {\n            return .5;\n        }\n    }\n    \n    return 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvn = (fragCoord-0.5*iResolution.xy) / iResolution.y;\n\n    float d = texture(iChannel1, uv).r;\n    vec3 rd = normalize(vec3(uvn, 1.0));\n    vec3 ro = vec3(0, 0, 0);\n    vec3 p = ro + rd * d;\n    vec3 e = vec3(fwidth(uv), 0);\n    float nx = (texture(iChannel1, uv + e.xz).r - texture(iChannel1, uv - e.xz).r) / (2.0 * e.x);\n    float ny = (texture(iChannel1, uv + e.zy).r - texture(iChannel1, uv - e.zy).r) / (2.0 * e.y);\n    vec3 n = normalize(vec3(-nx, -ny, 1.));\n    vec3 lp = vec3(cos(iTime) * 1.5, sin(iTime) * 1.5, 0.1);\n    vec3 ld = normalize(lp - p);\n    vec3 vd = normalize(ro - p);\n    float diff = max(dot(ld, n), 0.0)*2.;\n    float spec = pow(max(dot(reflect(-ld, n), vd), 0.0), 4.0) * 0.5;\n    float s = getShadow(p, uv, lp);\n    vec3 l = vec3(diff + spec + 0.5) * s;\n    l = pow(l, vec3(0.4545));\n    vec3 kd = texture(iChannel0, uv).rgb;\n    vec3 col = kd*vec3(l);\n    fragColor = vec4(col + 1. /pow(distance(ld.xy, uvn) * 2.0, 16.),1.0);\n}","name":"Image","description":"","type":"image"}]}