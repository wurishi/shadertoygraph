{"ver":"0.1","info":{"id":"4XlSRl","date":"1709834668","viewed":84,"name":"TV noise animation","username":"sarram","description":"This code snippet generates a simple animated noise pattern using Perlin noise.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n    vec3 palette(float t) {\n        vec3 a = vec3(0.5, 0.5, 0.5);\n        vec3 b = vec3(0.5, 0.5, 0.5);\n        vec3 c = vec3(1.0, 1.0, 1.0);\n        vec3 d = vec3(0.263, 0.416, 0.557);\n\n        return a + b * cos(6.28318 * (c * t + d));\n    }\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time varying pixel color\n    float time = iTime * 0.1;\n\n    // Generate noise based on 2D coordinates and time\n    float noise = fract(sin(dot(uv + time, vec2(12.9898, 78.233))) * 43758.5453);\n\n    // Function to generate color based on noise\n\n\n    // Apply the palette function to the noise value\n    vec3 col = palette(noise);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}