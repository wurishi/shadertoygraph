{"ver":"0.1","info":{"id":"Msc3zf","date":"1451322156","viewed":720,"name":"Glowing Spheres","username":"Xor","description":"Simple 3D spheres test","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["3d","glow","xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define INTENSITY 1.0 //Between 0 and 1\nfloat sphere(vec3 d,vec3 p)\n{\n \treturn smoothstep(1.0-INTENSITY,1.0,1.0/length(cross(d,p)));   \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy-0.5)*vec2(iResolution.x/iResolution.y,1.0);\n    vec3 P = vec3(cos(iTime),sin(iTime),0.0)*8.0;\n    vec3 X = normalize(-P);\n    vec3 Y = normalize(cross(X,vec3(0.0,0.0,1.0)));\n    vec3 Z = normalize(cross(X,Y));\n    \n    vec3 R = normalize(mat3(X,Y,Z)*vec3(1.0,uv));\n    \n    vec3 S1 = vec3(cos(iTime*0.5),sin(iTime*0.5),0.0)*2.0;\n    vec3 S2 = vec3(0.0,cos(iTime*0.5),sin(iTime*0.5))*2.0;\n    vec3 S3 = vec3(sin(iTime*0.5),0.0,cos(iTime*0.5))*2.0;\n    \n\tfragColor = vec4(sphere(R,S1-P),\n                     sphere(R,S2-P),\n                     sphere(R,S3-P),1.0);\n}","name":"","description":"","type":"image"}]}