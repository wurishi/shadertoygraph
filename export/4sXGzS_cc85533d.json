{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float bf(vec2 p, float r)  { return length(abs(mod(p, 10.0)) - 5.0) - r; }\nvec2  rot(vec2 p, float a) { return vec2(p.x * cos(a) - p.y * sin(a), p.x * sin(a) + p.y * cos(a)); }\n\nfloat map(vec3 p) {\n\tfloat k = 5.0 - dot(abs(p), vec3(0, 1, 0)) + (cos(p.z) + cos(p.x)) * 0.4;\n\treturn max(max(k, -bf(p.xz, 4.0)), -bf(p.zy, 3.5));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec3 dir = normalize(vec3( vec2(iResolution.x / iResolution.y, 1.0) * (-1.0 + 2.0 * (fragCoord.xy / iResolution.xy )), 1.0));\n\tfloat a = -iTime * 0.1;\n\tdir.xz = rot(dir.xz, sin(a * 4.0));\n\tdir.xy = rot(dir.xy, -a);\n\tvec3 pos = vec3(iTime * 4.0, 0, iTime * 7.0);\n\tvec3 npos = pos;\n\tfloat t  = 0.0;\n\tfor(int i = 0 ; i < 75; i++) {\n\t\tnpos = pos + dir * t;\n\t\tt += map(npos);\n\t}\n\tvec3 c1 = vec3(1, 2, 3);\n\tvec3 col = 0.1 * mix(c1, c1.yzx, t * 0.7) * map(npos * abs(vec3(8, 11, 9))) * 2.0;\n\tfragColor = vec4(1.5-abs(sqrt(3.0 - col) + t * 0.01), 1.0 );\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sXGzS","date":"1372610023","viewed":243,"name":"neg-color","username":"gyabo","description":"Fake neg color.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""}}