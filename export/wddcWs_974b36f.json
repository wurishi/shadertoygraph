{"ver":"0.1","info":{"id":"wddcWs","date":"1602037605","viewed":111,"name":"Interference Grid","username":"Ezra_Szanton","description":"Making a grid using the interference patterns of perpendicular sin waves","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["interferencepatterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 paint(vec3 current, vec3 new)\n{\n    float threshold = (sin(iTime * 3.)+.7)/2.5;\n    \n    if(new.x < threshold && new.y < threshold && new.z < threshold)\n        return current;\n    \n    return new;\n}\n\nmat2 Rot(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    \n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    uv *= 40.;\n    uv *= Rot(iTime/10.);//3.14159 / 4.);\n    \n    vec3 col = 0.5 + 0.5*cos(uv.xyx/40.+vec3(0,2,4));\n\n    vec3 baseCol = vec3(0.2, 0.6, 0.8);\n    col = paint(col, baseCol * vec3(sin(uv.x) / 2. + sin(uv.y) / 2.) + 0.01);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}