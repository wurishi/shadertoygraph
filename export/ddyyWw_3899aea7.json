{"ver":"0.1","info":{"id":"ddyyWw","date":"1696183495","viewed":33,"name":"inktober 2023 #1 - Dream","username":"Shalexder","description":"dreaming worm","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["worm","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BG .7*vec3(31, 34, 56)/255.\n\nfloat rand(vec2 p){\n  return fract(10.326*sin(p.x*24.7865+p.y*8.5703));\n}\n\nfloat equilateralTriangleSDF(vec2 p, vec2 pos, float r){\n\tconst float k = sqrt(3.0);\n\tp -= pos;\n\tp.x = abs(p.x) - r;\n\tp.y = p.y + r/k;\n\tif( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n\tp.x -= clamp( p.x, -2.0*r, 0.0 );\n\treturn -length(p)*sign(p.y);\n}\nvec2 rotate(vec2 p, float a){\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\tmat2 m = mat2(c, s, -s, c);\n\treturn m*p;\n}\nfloat starSDF(vec2 p){\n  p *= 4.;\n\tfloat eqTriangle = equilateralTriangleSDF(p, vec2(0.0, 0.5), 1.0);\n\tvec2 p_transform3 = rotate(p, 1.2566370614359172);\n\tfloat eqTriangle_transform3 = equilateralTriangleSDF(p_transform3, vec2(0.0, 0.5), 1.0);\n\tfloat unio = min(eqTriangle, eqTriangle_transform3);\n\tvec2 p_transform2 = rotate(p, 2.5132741228718345);\n\tfloat eqTriangle_transform2 = equilateralTriangleSDF(p_transform2, vec2(0.0, 0.5), 1.0);\n\tfloat unio1 = min(unio, eqTriangle_transform2);\n\tvec2 p_transform = rotate(p, 3.7699111843077517);\n\tfloat eqTriangle_transform = equilateralTriangleSDF(p_transform, vec2(0.0, 0.5), 1.0);\n\tfloat unio2 = min(unio1, eqTriangle_transform);\n\tvec2 p_transform1 = rotate(p, -1.2566370614359172);\n\tfloat eqTriangle_transform1 = equilateralTriangleSDF(p_transform1, vec2(0.0, 0.5), 1.0);\n\tfloat unio3 = min(unio2, eqTriangle_transform1);\n\treturn unio3;\n}\n\nfloat starField(vec2 p, float d, float pr){\n  p *= d*.4;\n  p += vec2(iTime/d, 0.);\n  vec2 id = floor(p);\n  float r = rand(id*d*37.35673);\n  if(r < pr) return 1.;\n  float r2 = fract(1780.*r);\n  float r3 = fract(8923.*r);\n  float r4 = fract(9638.*r);\n\n  p = fract(p);\n  p -= .5;\n  p = rotate(p, r2*2.*3.141593);\n  p += .5;\n  return starSDF((p-.5)*2.+(vec2(r3, r4)-.5));\n}\nvec2 coordToUv(vec2 c){\n  vec2 uv = (c-.5*iResolution.xy)/iResolution.y;\n  return uv;\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat circleSDF(vec2 p, vec2 pos, float r){\n\treturn length(p - pos) - r;\n}\nfloat eyeSDF(vec2 p){\n\tfloat circle = circleSDF(p, vec2(0.6, 0.), 1.0);\n\tfloat annular = abs(circle) - 0.08;\n\tfloat halfPlane = p.x;\n\tfloat intersection = max(annular, halfPlane);\n\treturn intersection;\n}\n\nfloat boxSDF(vec2 p, vec2 pos, vec2 b){\n\tvec2 d = abs(p-pos)-b/2.;\n\treturn length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat zSDF(vec2 p){\n\tfloat box = boxSDF(p, vec2(0.0, 1.0), vec2(2.0, 0.2));\n\tfloat box1 = boxSDF(p, vec2(0.0, -1.0), vec2(2.0, 0.2));\n\tfloat unio = min(box, box1);\n\tvec2 p_transform = rotate((p-vec2(0.0, 0.0))/1.0, -0.7853981633974483);\n\tfloat box2_transform = boxSDF(p_transform, vec2(0.0, 0.0), vec2(2.6, 0.2));\n\tfloat unio1 = min(unio, box2_transform);\n\tfloat rounded = unio1 - 0.1;\n\treturn rounded;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 uv = coordToUv(fragCoord.xy);\n    uv *= 10.;\n\n    vec3 col = BG;\n\n    if(\n      starField(uv, 1., .8) < 0. ||\n      starField(uv, 1.5, .8) < 0.||\n      starField(uv, 2., .8) < 0. ||\n      starField(uv, 3., .98) < 0.\n      ){\n        col = vec3(BG*2.);\n    }\n\n    float s = sin(uv.x+iTime)*.4;\n    if(sdSegment(uv+vec2(0., s), vec2(-6., 0.), vec2(5., 0.))-.3-smoothstep(4., 5., uv.x)*.3 < 0.){\n      col = vec3(205,107,108)/255.;\n      if(fract(uv.x*1.6) < .4 && uv.x > -5. && uv.x < 4.) col *= .8;\n\n      if(eyeSDF((uv+vec2(-5., s-.25))*4.) < 0.) col = vec3(0.);\n      if(eyeSDF((uv+vec2(-5., s+.25))*4.) < 0.) col = vec3(0.);\n    }\n\n\n    float t = mod(iTime*.5, 2.);\n    if(zSDF((uv-vec2(4.8, .3-s+t*1.4))*1.6/(t*.5)) < 0.){\n      col = mix(vec3(1.), col, t/2.);\n    }\n\n    t = mod(iTime*.5+1., 2.);\n    if(zSDF((uv-vec2(4.8, .3-s+t*1.4))*1.6/(t*.5)) < 0.){\n      col = mix(vec3(1.), col, t/2.);\n    }\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}