{"ver":"0.1","info":{"id":"MlGSWD","date":"1484333911","viewed":624,"name":"Deform Fly - 133 chars","username":"GregRostami","description":"This is a reduction of iq's Deform - fly shader:\n[url]https://www.shadertoy.com/view/XsX3Rn[/url]\nPlease help me get it down to one-tweet.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d","short","2tc","onetweet","codegolf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 133 chars - Replaced vec2(o.x,1) with o.xw - Fabrice helped with another char ...\n\nvoid mainImage(out vec4 o, vec2 u) {\no.xy = mat2( cos(iTime*.1 + vec4(0,33,55,0)) ) * (u/iResolution.y-.5);\no = texture( iChannel0,iTime + o.xw/abs(o.y) ) * abs(o.y); }   /*\n\n\n// 139 chars - Using #define trick + a few other tricks got it FINALLY down to one-tweet!\n\n#define mainImage(o,U)\t\t\t\t\t\t\\\no.xy = mat2( cos(iTime*.1 + vec4(0,33,55,0)) ) * (U/iResolution.y-.5);\t\\\no = texture( iChannel0,iTime+vec2(o.x,1)/(o=abs(o)).y ) * o.y\n\n    \n// 155 chars - iq used black magic to eradicate 4 chars!!\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    u = mat2(cos(iTime*.1 + .8*vec4(6,0,0,2)))*(u/iResolution.y-.5);\n    o = texture(iChannel0,iTime+vec2(u.x,1)/(u=abs(u)).y)*u.y;\n}\n\n\n// 162 chars - Original reduced shader.\n\nvoid mainImage(out vec4 o,vec2 u)\n{\n    float t = iDate.w , y;\n    u = (u/iResolution.y-.5) * mat2(cos(t*.1 + 1.6*vec4(3,0,0,1)));\n\to = texture(iChannel0,vec2(u.x,1)/(y = abs(u.y)) + t)*y;\n}\n\n    \n// 256 chars - Original shader by iq.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = -1.0+2.0*fragCoord/iResolution.y;\n    \n    float an = iTime*0.1;\n    \n    p = mat2(cos(an),-sin(an),sin(an),cos(an)) * p;\n     \n    vec2 uv = vec2(p.x,1.0)/abs(p.y) + iTime;\n\t\n\tfragColor = vec4( texture(iChannel0, 0.2*uv).xyz*abs(p.y)*0.8, 1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}