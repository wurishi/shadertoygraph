{"ver":"0.1","info":{"id":"3s3Xz2","date":"1572349933","viewed":184,"name":"2019-10-29 ripples","username":"sinclav","description":"ripples","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.1415926535;\n\nfloat rand(float seed) {\n    return fract(sin(seed * 11000000.0 + 11223.12332));\n}\n\nfloat disk(vec2 p, vec2 c, float r, float f) {\n    float d = distance(p, c);\n    float v;\n    if (d < r) {\n    \tv = 1.0 - smoothstep(r - f, r, d);\n    } else {\n        v = 0.0;\n    }\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime / 2.0;\n    vec2 r = fragCoord / iResolution.xy;\n    vec2 r2 = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    for (int i=0; i<15; i++) {\n\t    float dt = floor(t + rand(float(i)));\n    \tfloat df = fract(t + rand(float(i)));\n\t    float x = 1.7*rand(dt+float(i)*12.412)-1.0;\n        float y = 1.4*rand(dt+float(i)*18.412)-1.0;\n        vec2 c = vec2(0.0) - vec2(x, y);\n        for (int j=0; j<5; j++) {\n            float w = float(j) * 0.0671;\n          \tfloat v = (1.0-disk(r2, c, df, 0.01+w))*disk(r2, c, df, 0.01+w);\n        \tvec3 cv = vec3(0.2*v, 0.6*v, v);\n        \tcol += pow(1.0-df, 1.38) * cv;\n        }\n    }\n\n    float df = fract(-t);\n    df = (-pow(df, 2.0)) + 1.0;\n    df *= 1.1;\n    if (abs(length(r2)) < df+0.03 && abs(length(r2)) > df) col += vec3(0.9);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}