{"ver":"0.1","info":{"id":"X33GzM","date":"1716305879","viewed":85,"name":"pentagonal life heat map","username":"Boogaloo","description":"Some mostly cosmetic adjustments to ArmandB's Pentagonal Conway's game.\nMouse to paint on cells, space to toggle scale","likes":9,"published":1,"flags":48,"usePreview":0,"tags":["cellularautomata"],"hasliked":0,"parentid":"4cKXzV","parentname":"Pentagonal Conway's game"},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv( in vec3 c ){\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\trgb = rgb*rgb*(3.0-2.0*rgb);\n\treturn c.z * mix( vec3(1.0), rgb, c.y);}\n//smooth hsv from iq https://www.shadertoy.com/view/MsS3Wc\n\ngo{vec4 me=tex(C0,ivec2(I));\nO=vec4(hsv(vec3(.9-.9*me.x,1.-me.y,pow(me.x,8.)-pow(me.x,4.)+me.x)),0.);}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 uvmap(vec2 coord, vec2 res){\n    return coord/res.y*30.0*max(1.,5.*tex(C1,ivec2(32,2)).x);\n}\n\n//rule: 2,3/3,4,6 (see https://en.wikipedia.org/wiki/Life-like_cellular_automaton#Notation_for_rules)\nbool gol(int n, bool s){\n    return (s && (n == 2 || n == 3)) || (!s && (n == 3 || n == 4 || n == 6));\n}\n\n//each pixel stores 4 pentagons\ngo{\n    if (iFrame != 0){\n        \n            vec4 result = vec4(0);\n\n            //fetch surrounding pentagons\n            vec4 g0 = tex(C0,ivec2(I));\n            vec4 g1 = tex(C0,ivec2(I)+ivec2(0,-1));\n            vec4 g2 = tex(C0,ivec2(I)+ivec2(1,-1));\n            vec4 g3 = tex(C0,ivec2(I)+ivec2(1,0));\n            vec4 g4 = tex(C0,ivec2(I)+ivec2(1,1));\n            vec4 g5 = tex(C0,ivec2(I)+ivec2(0,1));\n            vec4 g6 = tex(C0,ivec2(I)+ivec2(-1,1));\n            vec4 g7 = tex(C0,ivec2(I)+ivec2(-1,0));\n            vec4 g8 = tex(C0,ivec2(I)+ivec2(-1,-1));\n\n            //run conway's game on each pentagon in this pixel\n            int neighbors = int(g0[1] + g0[2] + g0[3] + g1[2] + g1[3] + g7[1] + g8[3]);\n            result[0] = float(gol(neighbors, g0[0] == 1.0));\n\n            neighbors = int(g0[0] + g0[2] + g0[3] + g1[3] + g2[2] + g3[0] + g3[2]);\n            result[1] = float(gol(neighbors, g0[1] == 1.0));\n\n            neighbors = int(g0[0] + g0[1] + g0[3] + g5[0] + g6[1] + g7[3] + g7[1]);\n            result[2] = float(gol(neighbors, g0[2] == 1.0));\n\n            neighbors = int(g0[0] + g0[1] + g0[2] + g3[2] + g4[0] + g5[0] + g5[1]);\n            result[3] = float(gol(neighbors, g0[3] == 1.0));\n            \n            O = result;\n    } else {\n    \n    //random hash from Dave_Hoskins https://www.shadertoy.com/view/4djSRW\n    vec3 p = vec3(I,iDate[3]);    \n\tvec4 p4 = fract(vec4(p.xyzx)  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    vec4 q= fract((p4.xxyz+p4.yzzw)*p4.zywx);\n\n        O = vec4(q.x>.5,q.y>.5,q.z>.5,q.w>.5);\n    }\n    \n    if (iMouse.z > 0.0){\n        ivec3 pcoord = coordtopenta(uvmap(M.xy, R.xy));\n        ivec2 cc = abs(pcoord.xy-ivec2(I));\n        if (max(cc.x,cc.y)<2){\n            O[int(pcoord.z)] = float(tex(C0, ivec2(I))[pcoord.z] == 0.0);\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define go void mainImage( out vec4 O, in vec2 I )\n#define R iResolution\n#define M iMouse\n#define C0 iChannel0\n#define C1 iChannel1\n#define C2 iChannel2\n#define tex(x,y) texelFetch(x,y,0)\n\n#define r3 1.73205080757\n\n//gets texture coords + index of a pixel\nivec3 coordtopenta(vec2 uv){\n    uv = mat2(1,-1,1,1)*uv;\n    vec2 cuv = floor(uv);\n    uv = fract(uv) - 0.5;\n    \n    vec2 puv = cuv;\n    int idx = 0;\n    if (mod(cuv.x,2.0) == mod(cuv.y,2.0)){\n        vec2 ruv = mat2(-r3,-1,1,-r3)*uv;\n        idx = int(ruv.x < 0.0) + 2*int(ruv.y < 0.0);\n    } else {\n        vec2 ruv = mat2(r3,1,1,-r3)*uv;\n        bool a = ruv.x < 0.0;\n        bool b = ruv.y < 0.0;\n        idx = 2*int(a) + int(b);\n        puv += sign(ruv.x)*vec2(a == b, a != b);\n    }\n    puv = mat2(1,1,-1,1)*puv/2.0;\n    \n    return ivec3(puv, idx);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float val(float a, float b){\nif(a>0.){return min(b+.05,1.);}\nif(b<.01){return 0.;}\nreturn b*.98;\n}\n\ngo{\nO=vec4(0.);\nif(tex(C2,ivec2(32,1)).x>0.){return;}\nvec4 them=tex(C0,ivec2(I));\nvec4 me=tex(C1,ivec2(I));\nO=vec4(val(them.x,me.x),val(them.y,me.y),val(them.z,me.z),val(them.w,me.w));\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"vec2 uvmap(vec2 coord, vec2 res){\n    return coord/res.y*30.0*max(1.,5.*tex(C2,ivec2(32,2)).x);\n}\n\ngo{\n    O=vec4(0.);\n    vec2 uv = uvmap(I, R.xy);\n    vec4 me=tex(C1,ivec2(I));\n    ivec3 pcoord = coordtopenta(uv);\n    O.x = mix(vec4(0.), vec4(1.), tex(C0, pcoord.xy)[pcoord.z]).x;\n    O.y=me.y;\n    if(me.x>=1.){O.y+=.1;}else{O.y-=.1;}\n    O.y=clamp(O.y,0.,1.);      \n}","name":"Buffer C","description":"","type":"buffer"}]}