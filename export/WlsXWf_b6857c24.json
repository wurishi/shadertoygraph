{"ver":"0.1","info":{"id":"WlsXWf","date":"1564485152","viewed":567,"name":"Exercise 1 | XOR","username":"Blambder","description":"My attempt to understand, how to implement XOR with arithmetic operators.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle","animation","xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv.x -= .5;\n    \n    float speed = .043;\n    float waveDiff = .3;\n    \n    vec3 color = vec3(.0);\n    \n    for (float i = .0; i < .8; i+=.1) {\n        float spin = i * 4.;\n        vec2 toCenter = vec2(sin(iTime + spin) * .1 + .5, cos(iTime + spin) * .1 + .5)-uv;\n        float pct = length(toCenter);\n        \n        float waveShift = waveDiff + i * waveDiff;\n        float waveSpeed = iTime * (7. - i * waveDiff) * speed + waveShift;\n        \n        color = abs(\n            color \n            - vec3(\n                1. \n                - step(\n                    abs(\n                        sin(waveSpeed) * .015 + (.03 + i * .5)\n                    ), \n                    pct\n                )\n            )\n        );\n    }\n    \n\n\tfragColor = vec4( color * vec3(1.0, .0, .0), 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}