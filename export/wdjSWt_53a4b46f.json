{"ver":"0.1","info":{"id":"wdjSWt","date":"1555382771","viewed":159,"name":"Basics - Coordinate Rotation","username":"trevorleake","description":"Studying the basics. Now playing with rotation.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rotation","basics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nfloat box(vec2 uv, vec2 topLeft, vec2 bottomRight)\n{\n    return uv.x > topLeft.x && uv.x < bottomRight.x && uv.y < topLeft.y && uv.y > bottomRight.y ? 1. : 0.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \t\n    // Center our coordinate system    \n    vec2 uv = (fragCoord - .5*iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    // Apply rotation to coordinates\n\tuv = rotate2d(sin(iTime) * 3.1415) * uv;\n\n    // Display coordinate system as colors in the background\n    vec3 col = vec3(uv.x,uv.y,0);    \n\n    // Tack on a shape for kicks\n    col += box(uv, vec2(-.1,.1), vec2(.1,-.1));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}