{"ver":"0.1","info":{"id":"DlV3WV","date":"1684698833","viewed":66,"name":"3d Oleg","username":"Olegggggg","description":"3d Oleg","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3doleg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool isInsideTriangle(vec3 v0, vec3 v1, vec3 v2, vec2 p)\n{\n    float area = 0.5 * (-v1.y * v2.x + v0.y * (-v1.x + v2.x) + v0.x * (v1.y - v2.y) + v1.x * v2.y);\n    float s = 1.0 / (2.0 * area) * (v0.y * v2.x - v0.x * v2.y + (v2.y - v0.y) * p.x + (v0.x - v2.x) * p.y);\n    float t = 1.0 / (2.0 * area) * (v0.x * v1.y - v0.y * v1.x + (v0.y - v1.y) * p.x + (v1.x - v0.x) * p.y);\n    float w = 1.0 - s - t;\n    return (s >= 0.0 && t >= 0.0 && w >= 0.0);\n}\n\nbool IsInCyrcle(vec2 uv, float r, float offsetx, float offsety) {\n  float x = uv.x -offsetx;\n  float y = uv.y - offsety;\n  \n  float d = length(vec2(x, y)) - r;\n  \n  if(d>0.) return false; else return true;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 offset2 = vec2(sin(iTime*2.)*0.2, cos(iTime*2.)*0.2);\n    \n    float offset = (mod(iTime * .3, 2.5));\n    vec3 v0 = vec3(0.2+offset2.x, 0.4+offset2.y, -5.0);\n    vec3 v1 = vec3(0.8+offset2.x, 0.4+offset2.y, 0.0);\n    vec3 v2 = vec3(0.6+offset2.x, 0.8+offset2.y, -1.0);\n\n    vec3 v3 = vec3(0.3, 0.3, 3.);\n    vec3 v4 = vec3(0.9, 0.6, 0.8);\n    vec3 v5 = vec3(0.7, 0.8, 0.2);  \n    \n    vec3 v6 = vec3(0.8-offset2.x, 1.0-offset2.y, 0.);\n    vec3 v7 = vec3(1.9-offset2.x, 0.6-offset2.y, 0.);\n    vec3 v8 = vec3(1.2-offset2.x, 0.2-offset2.y, 0.);\n    \n    float z[5];\n    z[0] = v0.z + (v1.z - v0.z) * uv.x + (v2.z - v0.z) * uv.y;\n    z[1]= v3.z + (v4.z - v3.z) * uv.x + (v5.z - v3.z) * uv.y;\n    z[3] = 1.0 + sqrt(-((uv.x-0.3-offset)*(uv.x-0.3-offset)+(uv.y-0.5)*(uv.y-0.5)-0.04));\n    z[2] = -100.0;\n    z[4] = -200.0;\n\n    bool insideTriangle1 = isInsideTriangle(v0, v1, v2, uv);\n    bool insideTriangle2 = isInsideTriangle(v3, v4, v5, uv);\n    bool insideTriangle3 = isInsideTriangle(v6, v7, v8, uv);\n    bool isInCyrcleBool1 = IsInCyrcle(uv, .2, 0.3+offset, 0.5);\n    bool isInCyrcleBool2 = IsInCyrcle(uv, .2, .6, 0.3);\n    \n    bool arr[5];\n    \n    arr[0]=insideTriangle1;\n    arr[1]=insideTriangle2;\n    arr[2]=insideTriangle3;\n    arr[3]=isInCyrcleBool1;\n    arr[4]=isInCyrcleBool2;\n    \n    \n    vec3 col1 = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float stripe = floor(uv.x * 30.0); //watermelon\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 green = vec3(0.0, 1.0, 0.0);\n    vec3 blue = vec3(0.0, 0.0, 1.0);\n    vec3 stripeColor1 = mix(red, green, mod(stripe, 2.0));\n    vec3 stripeColor2 = mix(blue, green, mod(floor((uv.x + offset2.x )* 30.0), 2.0));\n    \n    vec4 col[5];\n    \n    col[0]=vec4(1.0, 0.0, 0.0, 1.0);\n    col[1]=vec4(0.0, 1.0, 0.0, 1.0);\n    col[2]=vec4(stripeColor2, 1.0);\n    col[3]=vec4(col1, 1.0);\n    col[4]=vec4(stripeColor1, 1.0);\n    \n    vec4 fin=vec4(0.0, 0.0, 0.0, 1.0);\n    float max=-1000.0;\n    \n    for(int i=0; i<5; i++){\n        if(arr[i]){if(z[i]>max){fin=col[i]; max=z[i];}}\n    }\n    fragColor = vec4(fin);\n\n}\n","name":"Image","description":"","type":"image"}]}