{"ver":"0.1","info":{"id":"4s3cRM","date":"1518132722","viewed":130,"name":"Atingir a meta","username":"mmutai","description":"The title is a part of a famous speech by former Brazilian president, Dilma Rousseff. Note it's usually quoted not because of any impactful meaning or emotional power... but because it makes no sense.\nThe link, of course, is the word \"meta\".","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["metaballs","metaball","2meta2fast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265;\nconst vec3 BG_COLOR = vec3(1.0);\nconst vec3 BALL_COLOR = vec3(0.1);\nconst float THRESHOLD = 3.4;\nconst float BLEND_EPSILON = 0.05;\n\nconst float DIR_LEN = 0.75;\nconst float HALF_SQRT2 = 0.70710678118;\nconst vec2 DIR1 = (vec2(+0.0, +1.0)) * DIR_LEN;\nconst vec2 DIR2 = (vec2(-HALF_SQRT2, +HALF_SQRT2)) * DIR_LEN;\nconst vec2 DIR3 = (vec2(-1.0, +0.0)) * DIR_LEN;\nconst vec2 DIR4 = (vec2(-HALF_SQRT2, -HALF_SQRT2)) * DIR_LEN;\nconst vec2 DIR5 = (vec2(+0.0, -1.0)) * DIR_LEN;\nconst vec2 DIR6 = (vec2(+HALF_SQRT2, -HALF_SQRT2)) * DIR_LEN;\nconst vec2 DIR7 = (vec2(+1.0, +0.0)) * DIR_LEN;\nconst vec2 DIR8 = (vec2(+HALF_SQRT2, +HALF_SQRT2)) * DIR_LEN;\n// some browsers don't like normalize() in const declarations?\n/*\nconst vec2 DIR1 = normalize(vec2(+0.0, +1.0)) * DIR_LEN;\nconst vec2 DIR2 = normalize(vec2(-1.0, +1.0)) * DIR_LEN;\nconst vec2 DIR3 = normalize(vec2(-1.0, +0.0)) * DIR_LEN;\nconst vec2 DIR4 = normalize(vec2(-1.0, -1.0)) * DIR_LEN;\nconst vec2 DIR5 = normalize(vec2(+0.0, -1.0)) * DIR_LEN;\nconst vec2 DIR6 = normalize(vec2(+1.0, -1.0)) * DIR_LEN;\nconst vec2 DIR7 = normalize(vec2(+1.0, +0.0)) * DIR_LEN;\nconst vec2 DIR8 = normalize(vec2(+1.0, +1.0)) * DIR_LEN;\n*/\n\nconst float TIME_OFFSET = -PI * 0.25;\n\n// can switch to fixed value for easier debugging/tweaking (a.k.a TOKI YO TOMARE)\n// can also change general speed with this\n#define U_TIME (iTime * 0.44)\n\n// don't eat uncooked metaballs\nfloat rawMetaball(vec2 p, vec2 center, float radius) {\n    return radius / distance(p, center);\n}\n\n// anime metaball, or ~metaballon animÃ©~\nfloat aniMetaball(vec2 p, vec2 dir, float radius, float timeOffset) {\n\tfloat dist = cos(U_TIME * PI + timeOffset) * 0.5 + 0.5;\n    //dist = pow(dist, 1.1);\n    vec2 center = dir * dist;\n    return rawMetaball(p, center, radius);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n        \n    vec2 p = uv * 2.0 - 1.0;\n    p.x *= iResolution.x / iResolution.y;\n\n    float metaSum = 0.0;\n    metaSum += rawMetaball(p, vec2(0.0), 0.08);\n    metaSum += aniMetaball(p, DIR1, 0.16, 0.0);\n    metaSum += aniMetaball(p, DIR2, 0.16, TIME_OFFSET);\n    metaSum += aniMetaball(p, DIR3, 0.16, TIME_OFFSET * 2.0);\n    metaSum += aniMetaball(p, DIR4, 0.16, TIME_OFFSET * 3.0);\n    metaSum += aniMetaball(p, DIR5, 0.16, TIME_OFFSET * 4.0);\n    metaSum += aniMetaball(p, DIR6, 0.16, TIME_OFFSET * 5.0);\n    metaSum += aniMetaball(p, DIR7, 0.16, TIME_OFFSET * 6.0);\n    metaSum += aniMetaball(p, DIR8, 0.16, TIME_OFFSET * 7.0);\n    \n    vec3 col = vec3(1.0);\n    \n    if (metaSum >= THRESHOLD) {\n        col = mix(BG_COLOR, BALL_COLOR, smoothstep(0.0, BLEND_EPSILON, metaSum - THRESHOLD)); \n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}