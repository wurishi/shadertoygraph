{"ver":"0.1","info":{"id":"4tdXWn","date":"1478993823","viewed":185,"name":"bp Triangles","username":"blackpolygon","description":"Experimenting with color","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["triangle","color","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: blackpolygon\n// Title: Triangles\n\n//Experimenting with color\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat shape(in vec2 st, int N, float radius){\n  // Remap the space to -1. to 1.\n  st = st *2.-1.;\n  // Angle and radius from the current pixel\n  float a = atan(st.x,st.y)+PI;\n  float r = TWO_PI/float(N);\n  // Shaping function that modulate the distance\n  return cos(floor(.5+a/r)*r-a)*length(st)*radius;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st=(fragCoord.xy-.5*iResolution.xy)/min(iResolution.x,iResolution.y) + vec2(0.5);\n    float b1a0 = (0.5+(sin(iTime)*0.5));\n    \n    vec3 color = vec3(0.,b1a0*st.y+0.2,0.658);\n    vec2 stTriangle = st;\n    stTriangle.y += 0.1;\n    float t1 = shape(stTriangle, 3, 1.);\n    stTriangle.y -= 0.0;\n    float t2 = shape(stTriangle, 3, 1.2);\n    float t3 = shape(stTriangle, 3, 1.5);\n    float t4 = shape(stTriangle, 3, 2.060);\n    \n    st -= vec2(0.5);\n    st = rotate2d( sin(iTime/2.)*PI) * st;\n    st+= 0.5;\n    \n    vec3 bgColor = vec3((0.5 + sin(st.y)*0.5)*0.920,(0.5 + sin(st.x)*0.5)*0.836,0.716);\n    \n    float triangleMask = 1.-smoothstep(.4, 0.405,t1);\n    float triangleMask2 = 1.-smoothstep(.4, 0.405,t2);\n    float triangleMask3 = 1.-smoothstep(.4, 0.405,t3);\n    float triangleMask4 = 1.-smoothstep(.4, 0.405,t4);\n    \n    vec3 triangleColor = color*vec3(triangleMask);\n    vec3 triangleColor2 = color*vec3(triangleMask2)*0.4;\n    vec3 triangleColor3 = color*vec3(triangleMask3)*0.2;\n    vec3 triangleColor4 = color*vec3(triangleMask4)*0.1;\n    \n    float mask3 = 1.0-triangleMask;\n    \n    vec3 finalColor = vec3(0.);\n    \n    finalColor += triangleColor;\n    finalColor *= 1.0-triangleMask2;\n    finalColor += triangleColor2;\n    finalColor *= 1.0-triangleMask3;\n    finalColor += triangleColor3;\n    finalColor *= 1.0-triangleMask4;\n    finalColor += triangleColor4;\n    \n    finalColor += bgColor*vec3(mask3);\n    \n\tfragColor = vec4(finalColor,1.0);\n\n}","name":"Image","description":"","type":"image"}]}