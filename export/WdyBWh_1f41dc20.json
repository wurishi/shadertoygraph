{"ver":"0.1","info":{"id":"WdyBWh","date":"1606957440","viewed":354,"name":"Minimal Buffer Example Via Fade ","username":"DEKTEN","description":"Noticed some people have been doing what appears to be a \"write to texture\". Looks like that is done using buffer objects. Which are like image objects, but pixel values persist over multiple frames. For how to replicate this example, see notes in code.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["simple","fade","minimal","simplebuffer","minimalbuffer","writetotexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//: I am new to shadertoy and was really confused about how buffers worked\n//: and found most illustrative examples too complex. And the simple\n//: examples just... not illustrative. Here is the bare basics of \n//: what I wanted to know, in this shader.\n\n//:HOW TO USE: Hold down nouse to see color fade animation.\n//:TEACHES   : Simple write to texture (buffer A)\n//:SETUP     : 1. Must put this code in new tab named \"Image\"\n//:            2. Click \"iChannel0\" image below editor. (WHILE \"Image\" tab is active)\n//:            3. Click \"Buffer A\" within misc tab of window that opens.\n//:            4. Close window by hitting \"X\" in top left.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    fragColor = vec4(col.rgb, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//: I am new to shadertoy and was really confused about how buffers worked\n//: and found most illustrative examples too complex. And the simple\n//: examples just... not illustrative. Here is the bare basics of \n//: what I wanted to know, in this shader.\n\n//:HOW TO USE: Hold down nouse to see color fade animation.\n//:TEACHES   : Simple write to texture (buffer A)\n//:SETUP     : 1. Must put this code in new tab named \"Buffer A\"\n//:            2. Click \"iChannel0\" image below editor. (While \"Buffer A\" tab is still active )\n//:            3. Click \"Buffer A\" within misc tab of window that opens.\n//:            4. Close window by hitting \"X\" in top left.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #define MOUSE_DOWN_COLOR vec3(1.0,0.0,0.0)\n    #define MOUSE_UP_COLOR   vec3(0.0,1.0,0.0)\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col;\n    vec3 rgb_current;\n    vec3 rgb_previous = texture( iChannel0 , uv ).xyz;\n    \n\tif( iMouse.z>0.0 ) // button is down\n    {\n    \t rgb_current = MOUSE_DOWN_COLOR;\n\t}else{\n         rgb_current = MOUSE_UP_COLOR;\n    };;\n\n    //:Use 95% of previous frame color so that it takes \n    //:a while for the MOUSE_DOWN_COLOR to fade in.\n    col=(  rgb_previous*0.95 \n          + rgb_current*0.05 );;\n    \n    // Output to screen\n    fragColor = (vec4(col,1.0));\n}","name":"Buffer A","description":"","type":"buffer"}]}