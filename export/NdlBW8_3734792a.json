{"ver":"0.1","info":{"id":"NdlBW8","date":"1644793056","viewed":64,"name":"Función MTF","username":"GerardoBelic","description":"Imitación de la función para identificar la sensibilidad de contraste del ojo humano","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mtf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float interpolation(float x, float x_1, float x_2, float y_1, float y_2)\n{\n    return y_1 + ((y_2 - y_1) / (x_2 - x_1)) * (x - x_1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    const float a = 7.;\n    const float b = 3.;\n    \n    float x = (-sin(pow(uv.x * a, b)) + 1.) / 2.;\n    \n    \n    const float e = 2.7182818;\n    const float c = 10.0;\n    \n    float y = pow(e, -c * uv.y);\n    \n    \n    float color = interpolation(y, 0.0, 1.0, 0.5, x);\n\n    fragColor = vec4(color, color, color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}