{"ver":"0.1","info":{"id":"4s3fzj","date":"1525844380","viewed":342,"name":"Simple 2D Triangle","username":"Rafbeam","description":"Simple 2D Triangle for 2D graphics.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangle","shader","vector","polygon","poly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 TRIANGLE(vec3 color, vec3 background, vec2 vertices[3], vec2 uv);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    vec3 color = vec3(0.0);\n    \n    vec2 VERTS[3] = vec2[]\n    (\n        vec2(0.5, 0.75),\n        vec2(0.3, 0.25),\n        vec2(0.7, 0.25)\n    );\n    \n    color = TRIANGLE(vec3(1.0), color, VERTS, uv);\n    \n    fragColor = vec4(color,1.0);\n}\n\nfloat TRIANGLE_sign(vec2 p1, vec2 p2, vec2 p3)\n{\n    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\n\nvec3 TRIANGLE(vec3 color, vec3 background, vec2 vertices[3], vec2 uv)\n{\n    bool b1 = TRIANGLE_sign(uv, vertices[0], vertices[1]) < 0.0f;\n    bool b2 = TRIANGLE_sign(uv, vertices[1], vertices[2]) < 0.0f;\n    bool b3 = TRIANGLE_sign(uv, vertices[2], vertices[0]) < 0.0f;\n    \n    if((b1 == b2) && (b2 == b3))return color;\n    return background;\n}\n","name":"Image","description":"","type":"image"}]}