{"ver":"0.1","info":{"id":"DlGGz3","date":"1684338271","viewed":41,"name":"T1","username":"shorokhova_angelina","description":"-","likes":0,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int n = 3; \nvec3 colAr[n] = vec3[n](vec3(1.0), vec3(0.0), vec3(1.0, 0.8, 0.0)); \nvec3 BGcol = vec3(0.2); \nfloat zAr[n] = float[n](1.0, 3.0, 4.0); \n\n\nbool inTriangle(in vec2 uv){ \nif ((uv.x>=uv.y)&&(uv.x<=1.0-uv.y)&&(uv.y>0.0)) return true; \n  return false;\n}\n\nbool inCircle(in vec2 uv,in vec2 move_of_center,in float r){ \nfloat d =length( uv - move_of_center - vec2(.5,.5) )-r;\n  if (d<0.0) return true; \n  return false;\n}\n\nbool inSquare(in vec2 uv,in vec2 mc){ \n  if ((uv.x+mc.x>=0.97)&&(uv.x+mc.x<=1.0)&&(uv.y>=0.3)&&(uv.y<=1.0)) return true;  \n  return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = fragCoord/iResolution.y; \n  vec2 m = vec2(cos(iTime)*0.8+0.3, sin(2.*iTime)*0.2);\n  vec2 m1 = vec2(sin(0.85*iTime),0.8);\n  vec3 col=BGcol;\n  if (inSquare(uv,m1)) col = colAr[0];\n  else if (inTriangle(uv)) col = colAr[1];\n  else if (inCircle(uv,m,0.2)) col = colAr[2];\n  fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}