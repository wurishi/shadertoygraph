{"ver":"0.1","info":{"id":"3d2yzw","date":"1586332912","viewed":96,"name":"Pertubated Julia","username":"Spongman","description":"pertubated juliia set - click+drag","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractaljulia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float MAX = 200.;\nconst vec2 P = vec2(0.001, 0.0);\n\nvec2 mul(vec2 z, vec2 w) { return vec2 (z.x*w.x - z.y*w.y, z.x*w.y + z.y*w.x); }\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat J(vec2 z, vec2 c, vec2 p)\n{\n    float i;\n    for(i = MAX; i --> 0.;)\n    {\n        float lz = dot(z, z);\n        if (lz > 4.0) {\n            return (i + log2(log2(lz))) / MAX;\n        }\n\n        vec2 z2 = vec2(z.x*z.x - z.y*z.y, 2. * z.x * z.y);\n        vec2 rz2 = vec2(z2.x, -z2.y) / dot(z2, z2);\n        \n        z = z2 + c - mul(p, rz2);\n    }\n    \n    return 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= 2.;\n    \n    vec2 m = iMouse.xy*vec2(1.,.5)/iResolution.xy - vec2(0.5,0.);\n    \n    vec2 c = vec2(-1.0, 0.0) / 100.0;\n\n    // Time varying pixel color\n    float val = J(uv, c, m /2.);\n    val = pow(val,10.);\n    vec3 col =  pal( val * 1.5, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.10,0.20) );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}