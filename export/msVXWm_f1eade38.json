{"ver":"0.1","info":{"id":"msVXWm","date":"1681222062","viewed":57,"name":"Randomly painted tiles with seed","username":"SNMetamorph","description":"Randomly painted tiles with time-based seed. Painting scheme changes every second.\nFor Aynekko's request :)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mix","random","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GRID_SIZE_X 4.0\n#define GRID_SIZE_Y 4.0\n#define SEED_CHANGING_FREQ 1.0\n#define ONLY_TWO_COLORS 0\n\nfloat randomFunction(in float seed, in vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233) * seed)) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    const vec2 gridSize = vec2(GRID_SIZE_X, GRID_SIZE_Y);\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 slicedUv = fract(uv * gridSize);\n    vec2 blockNums = floor(uv * gridSize);\n    float randomSeed = floor(iDate.w);\n    float val = randomFunction(randomSeed, blockNums);\n    \n#if ONLY_TWO_COLORS == 1\n    vec3 firstColor = vec3(0.0, 1.0, 0.0) * length(slicedUv);\n    vec3 secondColor = vec3(1.0, 0.0, 0.0) * length(slicedUv);\n    vec3 outputColor = mix(firstColor, secondColor, step(val, 0.5));\n#else\n    vec3 outputColor;\n    if (val <= 0.2)\n        outputColor = vec3(0.984, 0.313, 0.070); // tangelo\n    else if (val <= 0.4)\n        outputColor = vec3(0.003, 0.992, 0.964); // fluorescent cyan\n    else if (val <= 0.6)\n        outputColor = vec3(0.796, 0.729, 0.929); // periwinkle\n    else if (val <= 0.8)\n        outputColor = vec3(0.913, 0.874, 0.000); // aureolin\n    else\n        outputColor = vec3(0.011, 0.988, 0.729); // aquamarine\n    \n    // just a bit of visual complexity\n    outputColor *= length(slicedUv);\n#endif\n\n    outputColor = pow(outputColor, vec3(2.2)); // gamma-correction (for better colors precision)\n    fragColor = vec4(outputColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}