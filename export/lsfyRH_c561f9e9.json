{"ver":"0.1","info":{"id":"lsfyRH","date":"1486984486","viewed":94,"name":"Light on a sphere","username":"Teurkidosh","description":"Light on a sphere, using dot product.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float SPEED = 1.5;\n\nvoid drawSphere( out vec4 fragColor, in vec2 fragCoord, in vec2 center, in vec4 color, in float radius)\n{    \n    vec2 pos = fragCoord - center;\n    \n    vec3 lumVector = vec3(sin(iTime*SPEED),0.39,cos(iTime*SPEED));\n    vec3 posVector = vec3(pos.x, pos.y, sqrt(pow(radius, 2.0)-pow(pos.x, 2.0)-pow(pos.y, 2.0)));\n    \n    vec3 unitLumVector = normalize(lumVector);\n    vec3 unitPosVector = normalize(posVector);\n    \n    float lumIntensity = unitLumVector.x*unitPosVector.x+unitLumVector.y*unitPosVector.y+unitLumVector.z*unitPosVector.z;   \n    \n    if(sqrt(pow(pos.x,2.0)+pow(pos.y,2.0))<radius){\n        fragColor = color * lumIntensity;\n    }\n}\n\nvoid drawSphereDiagonal(out vec4 fragColor, in vec2 fragCoord, in vec4 beginColor, in vec4 endColor, in float nbSphere)\n{\n    vec4 deltaColor = endColor-beginColor;\n    vec4 stepColor = deltaColor / (nbSphere-1.0);\n   \n    float radius = iResolution.y/(nbSphere+5.0);\n    vec2 beginCenter = vec2(iResolution.x/(nbSphere+1.0), iResolution.y/(nbSphere+1.0));\n    \n    vec2 center;\n    vec4 color;\n    \n    for(float i = 1.0; i<=nbSphere; i += 1.0)\n    {\n        center = beginCenter * i;\n        color = beginColor + stepColor*(i-1.0);\n        \n        drawSphere(fragColor, fragCoord, center, color, radius);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 myBlue = vec4(0.1,0.65,0.9,0.0);\n    vec4 myRed = vec4(0.9,0.225,0,0.0);\n    vec4 myViolet = vec4(0.9,0.1,0.9,0.0);\n    float nbSpheres = 2.0;\n    /*\n    float radius = iResolution.y/5.0;\n    \n    fragColor = vec4(0.1,0.1,0.1,0.5);\n    \n    vec2 camCenter = vec2(iResolution.x/4.0, iResolution.y/4.0);\n    \n    \n    drawSphere(fragColor, fragCoord, camCenter, myBlue, radius);\n    \n    camCenter = vec2(3.0*iResolution.x/4.0, 3.0*iResolution.y/4.0);\n    vec4 myRed = vec4(0.9,0.225,0,0.0);\n    \n    drawSphere(fragColor, fragCoord, camCenter, myRed, radius);\n    \n    camCenter = vec2(iResolution.x/2.0, iResolution.y/2.0);\n    \n    \n    drawSphere(fragColor, fragCoord, camCenter, myViolet, radius);\n\t*/\n    \n    drawSphereDiagonal(fragColor, fragCoord, myBlue, myRed, nbSpheres);\n}","name":"Image","description":"","type":"image"}]}