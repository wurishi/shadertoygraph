{"ver":"0.1","info":{"id":"cl3yD4","date":"1699182590","viewed":59,"name":"SimpleLineClock","username":"gPlatl","description":"Simply drawing a clock with lines...\nTest frame of line distance and segment drawing functions.\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","time","line","clock","drawing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// SimpleLineClock.glsl  2023-22-05 by gPlatl\n// https://www.shadertoy.com/view/cl3yD4\n\n// return distance to endless line\nfloat LineDistance (vec2 A, vec2 B, vec2 P)\n{\n  vec2 g = B - A;   // g = A->B\n  vec2 h = P - A;   // h = A->P \n  return dot(h,g) / dot(g,g);  // d = h.g / g^2\n}\n\n// return distance to line segment\nfloat LineSegmentDistance (vec2 A, vec2 B, vec2 P)\n{\n  vec2 g = B - A;   \n  vec2 h = P - A;\n  float k = clamp(dot(h,g) / dot(g,g), 0.0, 1.0);\n  return length(h - k*g);\n}\n\n// return drawing color of line segment\nvec3 DrawLine(vec2 A, vec2 B, vec2 P, vec3 bgColor, vec3 lineColor, float t)\n{\n  float d = LineSegmentDistance (A,B,P);\n  return mix(bgColor, lineColor, smoothstep(t/iResolution.y,0.,d));\n}\n\nvec3 bgColor = vec3(0.5, 0.3, 0.7);  // background color               \nvec3 red     = vec3(1.0, 0.2, 0.2);\nvec3 green   = vec3(0.2, 0.8, 0.2);\nvec3 blue    = vec3(0.2, 0.2, 0.8);\nvec3 yellow  = vec3(1.0, 1.0, 0.1);\nvec3 white   = vec3(0.9, 0.8, 1.0);\n\n#define TAU 6.2831\n\n// get position\nvec2 Pos (float v, float len)\n{\n  return len*vec2(sin(TAU*v), cos(TAU*v));\n}\n\n// return drawing color of watch\nvec3 DrawWatch(vec2 P, float radius, vec3 bgColor)\n{\n  // 5 minute marks\t\n  float r = length(P),\n  a = atan(P.y, P.x) + 3.1415926,\n  f = abs(2.0*fract(0.5+a*60.0/TAU)-1.0),\n  g = 1.1-smoothstep(0.0, 0.1, abs(2.0*fract(0.5+a*12.0/TAU)-1.0)),\n  w = fwidth(f);\n  f = 1.1-smoothstep(0.1*g+0.05-w, 0.1*g+0.05+w, f );\n  f *= smoothstep( 0.40, 0.41, r+0.05*g ) - smoothstep(0.47, 0.48, r);\n  vec3 color = mix(bgColor, vec3(0.0), f);\n    \n  // get time\n  float mils = fract(iDate.w);\n  float secs = mod( floor(iDate.w),        60.0 ) / 60.;\n  float mins = mod( floor(iDate.w/60.0),   60.0 ) / 60.;\n  float hors = mod( floor(iDate.w/3600.0), 24.0 ) / 12.;\n  \n  vec2 M = vec2( 0, 0);\n  vec2 A = Pos (hors, 0.33);\n  vec2 B = Pos (mins, 0.39);\n  vec2 C = Pos (secs, 0.44);\n  vec2 D = Pos (mils, 0.03);\n  color = DrawLine (M,M,P,color, white, 111.);\n  color = DrawLine (M,A,P,color, red,  4.);\n  color = DrawLine (M,B,P,color, green, 3.);\n  color = DrawLine (M,C,P,color, yellow, 2.);\n  color = DrawLine (M,M,P,color, blue, 4.+mils*4.);\n  return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n  vec2 uv = ( fragCoord - .5*iResolution.xy )/iResolution.y;\n  vec2 mp = ( iMouse.xy - .5*iResolution.xy )/iResolution.y;\n  vec3 color = DrawWatch(uv, 0.45, bgColor);\n  fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}