{"ver":"0.1","info":{"id":"XcGyDh","date":"1731762499","viewed":127,"name":"att feedback","username":"altunenes","description":"A simple study to understand the feedback effect :) (for me :D )","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["abstract","feedback","clifford"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159265359\n#define S (1.5 * PI)\nfloat oscillate(float minn, float maxxi, float interval, float now) {\n    return minn + (maxxi - minn) * 0.5 * (sin(2.0 * PI * now / interval) + 1.0);\n}\nvec2 cl(vec2 p, float a, float b, float c, float d, float t) {\n    float sint = sin(t);\n    float cost = cos(t);\n    float x = sin(a * p.y + t) + c * cos(a * p.x + t) * sin(b * p.x + t);\n    float y = sin(b * p.x + t) + d * cos(b * p.y + t) * sin(a * p.y + t);\n    vec2 result = vec2(x, y);\n    result *= 1.5; \n    result = vec2(\n        result.x * cost - result.y * sint,\n        result.x * sint + result.y * cost\n    );\n    return result;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = 12.0 * (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n     float dasds = oscillate(12.0, 4.0, 20.0, iTime); \n    float radii = oscillate(4.5, 4.5, 5.0, iTime) / dasds;\n    float sizw = oscillate(0.07, 0.04, 12.0, iTime);\n    float t = iTime / 4.0;\n    float scale = 3.0;\n\n    const float a = 1.7;\n    const float b = 1.7;\n    const float c = 0.6;\n    const float d = 1.2;\n    \n    vec3 color = vec3(0.0);\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    //just magic numbers :-P\n    for (float i = 0.0; i < 155.0; i++) { \n        float Cindex = floor(i / 4.0);\n        float Pindex = i;     \n        \n        float initialT = Pindex / 44.0 * S + iTime * 0.3;\n        float Cscale = (Cindex + 1.0) * radii * 0.1;\n        \n        vec2 initialPoint = vec2(\n            cos(initialT) * Cscale,\n            sin(initialT) * Cscale\n        );\n        \n        vec2 attPo = cl(initialPoint, a, b, c, d, t);\n        vec2 circlePoint = attPo * scale;\n        float chang = oscillate(0.1, 0.5, 12.0, iTime); \n        vec3 pointColor = 0.5 + chang * cos(vec3(1.0, S/3.0, S*2.0/3.0) + Cindex * 0.99);\n        float dist = length(uv - circlePoint);\n        \n        color += pointColor * sizw / (dist + 0.0001); \n    }\n       float des = oscillate(1.5, 2.0, 12.0, iTime);\n    color = sqrt(color) * des - 1.5;\n    vec4 feedback = texture(iChannel0, fragCoord / iResolution.xy);\n    color = mix(color, feedback.rgb, 0.96);\n    fragColor = vec4(color, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 prevFrame = texture(iChannel0, uv);\n    vec4 currentFrame = texture(iChannel1, uv);\n    float decay = 0.95; \n    vec4 result = mix(prevFrame * decay, currentFrame, 0.1); \n    fragColor = result;\n}","name":"Buffer B","description":"","type":"buffer"}]}