{"ver":"0.1","info":{"id":"M3fyDj","date":"1726667397","viewed":25,"name":"Serpent-Sine (might cos nausea)","username":"MackFitz","description":"Serpentine made from a simple vertical strip that is rotated the more the farther away it is from the center. Extra wobbly on purpose, not because I'm incompetent ;)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["deformation","animation","serpentine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SE(v,s) smoothstep(s-1./iResolution.y, s, v)\n#define pi 3.1415926535897\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n  float steadyAngle = -iTime*3.; // the angle of spin\n  vec2 steadySpin = vec2(\n    uv.x * cos(steadyAngle) - uv.y * sin(steadyAngle),\n    uv.x * sin(steadyAngle)*.9 + uv.y * cos(steadyAngle) // .9 adds the wobble\n  );\n\n  float angle = 12. * sin(iTime / 5.) * pi; // the angle of twisting\n  float cosA = cos(angle * length(steadySpin));\n  float sinA = sin(angle * length(steadySpin));\n  vec2 rotatedUV = vec2(\n    steadySpin.x * cosA - steadySpin.y * sinA,\n    steadySpin.x * sinA + steadySpin.y * cosA\n  );\n\n  float mask = rotatedUV.x / .1 * length(uv);\n\n  vec3 col = vec3(.3, 0., 2.) * mask;\n\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}