{"ver":"0.1","info":{"id":"ltt3zf","date":"1470728103","viewed":120,"name":"Portal of Inversion","username":"G3Kappa","description":"Neat","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TILES 24.\n#define TILE_SPEED 2.\n#define PORTAL_OUTER_PRECISION 15.\n// Invert PORTAL_INNER_PRECISION to invert the color scheme\n#define PORTAL_INNER_PRECISION -7.5\n\nfloat fcircle(vec2 p) { return 1. - dot(p-=.5,p); }\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    vec2 uv = U.xy / iResolution.x;\n    float t = pow(cos(uv.x * TILES + iDate.w * TILE_SPEED) * sin(uv.y * TILES + iDate.w * TILE_SPEED), -1.);\n    float r = PORTAL_INNER_PRECISION * fcircle(-vec2(1., 0.33) + uv.xy * 3.);\n    \n    float c = pow(r * t + t, PORTAL_OUTER_PRECISION);\n    \n    O = vec4(c, t, r * t, 1.);\n    \n    // Black and white, distortion & inversion only\n    // O = vec4(c, c, c, 1.);\n    \n}","name":"Image","description":"","type":"image"}]}