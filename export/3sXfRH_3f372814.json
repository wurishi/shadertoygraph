{"ver":"0.1","info":{"id":"3sXfRH","date":"1587654405","viewed":256,"name":"Landscape in a tweet","username":"clepirelli","description":"Small experiment with displaying as much as I could with as little code as I could\n\nLater much improved by Fabrice Neyret","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["landscape","short","tweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//second version, by Fabrice Neyret, 220 chars (with AA)\n\n\n#define z(c) fract(4e5*sin(c*1e5))\nvoid mainImage(out vec4 o, vec2 u) {                                  \\\n    for(vec2 j = 6.* u/iResolution.xy - 2.4, c,x,f, i = j-j ;\n        i++.x < 6.;\n\t\to += smoothstep( c = fwidth(f),-c, f ).x / (2.+i).x\n       )\n       x = floor( c= j+i*iTime ), f = c-x,\n       f = j.y + 3.-i + mix( z(x),z(++x), f*f*(2.-f) );}\n\n\n\n\n\n\n\n\n\n\n\n//first version, by me, 258 chars: \n\n\n//#define z(c)fract(dot(vec3(sin(c*12.015)),vec3(84.942, 92.229, 74.298)))\n//void mainImage(out vec4 a,vec2 b){\n//\tvec2 j=(b/iResolution.xy-.4)*6.;\n//\tfor(float i; i<5.;i++){\n//\t\tfloat c=j.x+i*iTime,x=floor(c),f=c-x;\n//\t\ta+=float(j.y+3.-i+mix(z(x),z(++x),f*f*(2.-1.*f))<.5)/(3.+i);\n//\t}\n//}","name":"Image","description":"","type":"image"}]}