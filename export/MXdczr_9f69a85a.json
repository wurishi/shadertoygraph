{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float fbm( in vec2 p ){\n    float z = 0.;\n    float amplitude = 1.;\n    float frequency = 2.2;\n    \n    float t = p.x;\n    float u = p.y;\n    \n    z += sin(t*frequency*0.9375)*3.5;\n    z += sin(t*frequency*1.36)*2.7;\n    z += sin(t*frequency*3.7)*1.3;\n    z += sin(t*frequency*5.3)*0.7;\n    \n    z += sin(u*frequency*0.875)*4.0;\n    z += sin(u*frequency*2.4)*3.7;\n    z += sin(u*frequency*4.3)*1.3;\n    z += sin(u*frequency*6.2)*0.3;\n    \n    z *= 0.015;\n    z += 0.5;\n    return z;\n}\n\n\nfloat pattern( in vec2 p )\n{\n    float jTime = iTime * 0.077;\n\n    vec2 q = vec2( fbm( p + vec2(0.,0.)), fbm(p + vec2(0.2*jTime, 1.3*jTime)));\n    \n    vec2 r = vec2( fbm(p + 4.0*q + vec2(1.7*jTime, 9.2*jTime) ), fbm( p + 4.0*q + vec2(8.3*jTime, 2.8*jTime) ) );\n    \n    return fbm( p + 4.0*r );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy) - 1.;\n        \n    vec3 rgb = vec3(\n        0.9,\n        0.9,\n        0.9\n    );\n    \n    vec3 offset = vec3(\n    0.2,0.2,0.2\n    );\n\n    // Output to screen\n    fragColor = vec4(rgb * vec3(pattern(uv),pattern(uv),pattern(uv)) + offset,0.5); //RGBA\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MXdczr","date":"1734683949","viewed":36,"name":"db_Smoke","username":"drewbcodes","description":"my best attempt at following: https://iquilezles.org/articles/warp/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","smoke","iquilezles"],"hasliked":0,"parentid":"","parentname":""}}