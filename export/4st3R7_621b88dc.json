{"ver":"0.1","info":{"id":"4st3R7","date":"1448663264","viewed":509,"name":"TruchetFlip","username":"jt","description":"Another truchet-tiles shader - just playing around with flipping the configuration randomly.\nCode-golf [url=https://www.shadertoy.com/view/dsfXDs]here[/url].","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["truchettiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Truchet Tiles - written 2015 by JT\n\n/*\n// Compact version (325 chars) by FabriceNeyret2\nfloat t = iTime;\n#define R(s) texture(iChannel0, s + t/1e3).x\n#define S(v) smoothstep(.0,.05, abs(len(v)-.5)) \n\nfloat len(vec2 v) {\n    float w = 5./(1.+abs(8.*fract(t/16.)-4.));\n    v = pow(v, vec2(w));\n    return pow(v.x+v.y, 1./w);\n}\n\n\nvoid mainImage( out vec4 O,  vec2 v ) {\n    v *= 10./iResolution.y;\n    v.x *= sign( R(ceil(v)/ 128.) - .5 );\n\n    O -= S(v=fract(v))*S(1.-v) + O++;\n}\n*/\n\n#define mirror(v) abs(2. * fract(v / 2.) - 1.)\n\nfloat rnd(vec2 seed)\n{\n    return texture(iChannel0, seed + iTime*0.001).x;\n}\n\nfloat len(vec2 v)\n{\n    float w = 1.25/(.25+mirror(iTime*.125));\n    return pow(dot(pow(v, vec2(w)), vec2(1)), 1./w);\n}\n\nfloat flip(vec2 v, float w)\n{\n    v = fract(v / 2.) - .5;\n    return mix(w, 1. - w, step(0., v.x * v.y));\n}\n\nfloat tile(vec2 v)\n{\n    v = fract(v);\n    return smoothstep(.0,.05, abs(len(v)-.5)) * smoothstep(.0,.05, abs(len(1.-v)-.5));\n}\n\nfloat tile_full(vec2 v)\n{\n    v = fract(v);\n    return smoothstep(.45,.55, len(v)) * smoothstep(.45,.55, len(1.-v));\n}\n\nfloat pattern(vec2 v)\n{\n    vec2 id = floor(v);\n    return mix(\n        flip(v, rnd(id / 128.) < .5 ? 1.-tile_full(v) : tile_full(vec2(1.-v.x,v.y))),\n        1.-(rnd(id / 128.) < .5 ? tile(v) : tile(vec2(1.-v.x,v.y))),\n        mirror(iTime*.01));\n}\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n\tI /= iResolution.y;\n    float p = 1.-pattern(I*10.);\n    O = vec4(p);\n}\n","name":"Image","description":"","type":"image"}]}