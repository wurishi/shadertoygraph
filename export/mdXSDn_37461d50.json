{"ver":"0.1","info":{"id":"mdXSDn","date":"1668702266","viewed":124,"name":"breathing voxels","username":"matiasgf","description":"breathing voxels effect","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["voxels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 Translate(vec2 p, vec2 v) {\n    return p - v;\n}\n\nfloat sdSphere(vec2 p, float size) {\n    return length(p) - size;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\nfloat sdRhombus( in vec2 p, in vec2 b ) \n{\n    p = abs(p);\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\n    return d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 p )\n{\n\n    // mask params\n    vec2 center = iResolution.xy / 2.0;\n    vec2 maskCenter = center;\n    float maskMaxSize = iResolution.x / 1.7;\n    float timeScale = 1.0;\n    float maskSize = (sin(iTime * timeScale) + 1.0) * maskMaxSize;\n\n    // calculate center\n    float voxelSize = 20.0;\n    vec2 scaledP = p / voxelSize;\n    vec2 voxelCoord = (floor(scaledP) + vec2(0.5)) * voxelSize;\n    vec2 pRelaviteToVoxel = p - voxelCoord;\n    \n    // calculate mask factor at the voxel center\n    maskCenter = Translate(voxelCoord, maskCenter);\n    float maskFactor = sdRhombus(maskCenter, vec2(maskSize, maskSize)) / 250.0;\n    \n    float voxelScale = - maskFactor * voxelSize / 2.0;\n    float c = sdBox(pRelaviteToVoxel, vec2(voxelScale));\n    c = clamp(c,0.0, 1.0);\n    \n    //colors\n    vec3 colorA = vec3(255, 143, 177) / 255.0;\n    vec3 colorB = vec3(67, 44, 122) / 255.0;\n    vec3 color = mix(colorA, colorB, c);\n    \n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}