{"ver":"0.1","info":{"id":"MlKBR1","date":"1541870590","viewed":322,"name":"london under rain","username":"wazoowazoo","description":"A simple 2d rain shader, the fog does not work correctly :(","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","fog","rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CAMERA vec3(0.5, 0.5, 1) //camera position\n#define FOG vec4(0.5, 0.5, 0.5, 1) //fog color\n#define ATTENUATION 0.1 //fog attenuation\n#define RAIN vec4(0.5, 0.6, 0.7, 1) //rain color\n#define TRESHHOLD 0.5//rain amount\n\nfloat rand(vec2 n) {\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 n) {\n\tconst vec2 d = vec2(0.0, 1.0);\n  vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n\treturn mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 texCoords = fragCoord / iResolution.xy;\n    \n  float noise = noise(texCoords * vec2(800, 100) + vec2(0, iTime * 50.0));\n\n  if (noise - TRESHHOLD >= 0.0) {\n    noise = (noise - TRESHHOLD) /  (1.0 - TRESHHOLD);\n  } else {\n    noise = 0.0;\n  }\n\n  float cameraDist = distance(CAMERA, vec3(texCoords, 1.0));\n  float cameraFogIntensity = 1.0 / exp(pow(cameraDist * ATTENUATION, 0.5));\n  float rainDist = distance(CAMERA, vec3(texCoords, noise));\n  float rainFogIntensity = 1.0 / exp(pow(rainDist * ATTENUATION, 0.5));\n\n  vec4 pixel = texture(iChannel0, texCoords);\n\n  vec4 firstStep = (pixel * (1.0-noise) + RAIN * noise) * (1.0-rainFogIntensity) + FOG * (rainFogIntensity);\n\n  vec4 finalStep = (firstStep * cameraFogIntensity) + (FOG * (1.0-cameraFogIntensity));\n\n  fragColor = finalStep;\n}","name":"Image","description":"","type":"image"}]}