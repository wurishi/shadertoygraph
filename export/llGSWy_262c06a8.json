{"ver":"0.1","info":{"id":"llGSWy","date":"1501850777","viewed":107,"name":"BounceBall","username":"paulo69","description":"I have no idea of ​​description for this shader :)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation","bouncingball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cercle (vec2 uv, float h,float x,float r) {\n \treturn (smoothstep(r,r+0.9,length(vec2 (1.78,h)-uv)));   \n}\n\nfloat time (float r) {\n    float t = iTime+.4;\n    float c=pow(t,2.0);\n    return (abs(exp(-t*c*0.03*t)*cos(t*c)))*(exp(-0.5*t)+1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = .3;\n    vec3 color;\n\tvec2 uv = ((fragCoord.xy / iResolution.y)*vec2(2.0,2.0)-vec2(0.0,r));\n    vec3 couleur = vec3 (cercle(uv,time(r),time(r),r));\n    if (couleur==vec3(0.0)){\n        color=vec3(1.0,0.0,0.0);}\n        else {\n        color=vec3(0.0);\n    }\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}