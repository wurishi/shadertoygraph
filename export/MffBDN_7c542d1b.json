{"ver":"0.1","info":{"id":"MffBDN","date":"1723770096","viewed":44,"name":"Loading wheel","username":"Cynn","description":"My first shader :D","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["intersection","circle","hsv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://github.com/hughsk/glsl-hsv2rgb\nvec3 hsv_to_rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 draw_circle(vec2 uv, float time, vec3 color) {\n    float center_diameter = 0.2;\n    vec2 center = vec2(cos(-time), sin(-time)) * center_diameter;\n\n    float diameter = 0.5;\n    float dist = pow(abs(length(uv - center) - diameter), 1.75);\n    dist *= 10.;\n\n    vec3 col = dist * color;\n    return 1.0 - col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    vec3 finalColor = vec3(1.);\n\n    for (float i = 0.0; i < 5.0; i++) {\n        float time = iTime * i * 0.1;\n        vec3 inputColor = hsv_to_rgb(vec3(time, 0.6, 1.0));\n        vec3 col = draw_circle(uv, time, inputColor);\n        finalColor = min(finalColor, col);\n    }\n    \n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}