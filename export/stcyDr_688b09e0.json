{"ver":"0.1","info":{"id":"stcyDr","date":"1659571807","viewed":164,"name":"Chromatic flare","username":"KrissLaCross","description":"Random sketching in the dead of night.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nfloat Circ(in vec2 p, in float r)\n{\n    float dist = (length(p) - r);\n    float deltaDist = fwidth(dist);\n    return smoothstep(deltaDist, -deltaDist, dist);\n}\n\n//  Function from IÃ±igo Quiles\n//  www.iquilezles.org/www/articles/functions/functions.htm\nfloat cubicPulse( float c, float w, float x ){\n    x = abs(x - c);\n    if( x>w ) return 0.0;\n    x /= w;\n    return 1.0 - x * x * (3.0 - 2.0 * x);\n}\n\nfloat random (vec2 st) {\n    st.xy += mod(iTime, 1.0) * 0.1;\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy - 0.5;\n    uv.y *= iResolution.y / iResolution.x;\n \n    float ang = (atan(uv.y, uv.x) + M_PI) / (M_PI * 2.);\n\n    float a = 0.4;\n    vec2 uvR = uv / (1.0 + cubicPulse(a - 0.1 * sin(iTime * 0.5), 0.2, ang) * random(vec2(-uv.x, uv.y)) * 0.3);\n    vec2 uvG = uv / (1.0 + cubicPulse(a, 0.2,                          ang) * random(vec2(uv.x, uv.y))  * 0.3);\n    vec2 uvB = uv / (1.0 + cubicPulse(a + 0.1 * sin(iTime * 0.5), 0.2, ang) * random(vec2(uv.x, -uv.y)) * 0.3);\n\n    float r = 0.15;\n    float distR = Circ(uvR, r);\n    float distG = Circ(uvG, r);\n    float distB = Circ(uvB, r);\n\n    vec3 col = vec3(distR, distG, distB);\n\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}