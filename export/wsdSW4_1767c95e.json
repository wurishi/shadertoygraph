{"ver":"0.1","info":{"id":"wsdSW4","date":"1572017214","viewed":107,"name":"Prueba niebla ","username":"rueton","description":"Probando shaders haciendo niebla y alguna cosa m√°s.\n\nAdded (as comment) a variation which moves the colored parts  (in vec3 col)\nCommented the effect that step does in  fragColor. Now it behaves normally.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["nieblaroja"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time -iTime\n\nfloat random(vec2 coord){\n     float aux_a = (coord.x * .25 + coord.y * 0.4);\n \treturn fract(sin(aux_a*4541522.6591 + 5415528.969 )*5157.15121);\n}   \n\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n\n    // Cubic Hermine Curve.  Same as SmoothStep()\n    vec2 u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(mix(a, b, u.x) , mix(c,d, u.x), u.y) ;\n}\n\nfloat fbm(vec2 coord){\n    int iter = 4;\n\tfloat value = 0.;\n    float scale = 0.5;\n        \n        for(int  i= 0; i<iter; i++){\n           value +=  noise(coord) * scale;\n           coord*=2.;\n           scale*=0.5 ;\n               }\n    return value;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 10.*fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    \n    \n   vec2 motion = vec2(fbm(uv+iTime*0.4));\n    //vec3 col = vec3 (fbm(uv+motion -iTime*step(0.2 , noise(vec2(random(uv))))));\n\tvec3 col = vec3 (fbm(uv+motion));\n    \n    //add base color\n    vec3 base = vec3(0.70,0.3,0);\n    \n    \n    // Output to screen\n    //fragColor = vec4((col)*(-1.)*step(0.1,abs(sin(iTime + fbm(uv))))+base,1.);\n    fragColor = vec4((col)*(-1.)+base,1.);\n    \n}\n","name":"Image","description":"","type":"image"}]}