{"ver":"0.1","info":{"id":"4fGyWc","date":"1732459714","viewed":32,"name":"color triangle","username":"Iunave","description":"Did i miss any color?\nCriticism and improvements welcome!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["animated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat teeth(float x)\n{\n    float f = fract(x);\n    float s = f < 0.5 ? f : 1.0 - f;\n    return s * 2.0;\n}\n\nfloat drawTriangle(vec2 uv, float seed) \n{\n    vec2 p = uv - vec2(0.0, 0.5);\n    float a = teeth(seed);\n    vec2 tri = vec2(a / 1.5, -1.0);\n    float d = sdTriangleIsosceles(p, tri);\n    return step(0.0, -d);\n}\n\nvec3 color(float seed)\n{\n    vec3[] arr = vec3[7]\n    (\n        vec3(1.0, 0.0, 0.0),\n        vec3(1.0, 1.0, 0.0),\n        vec3(1.0, 0.0, 1.0),\n        vec3(0.0, 1.0, 0.0),\n        vec3(0.0, 1.0, 1.0),\n        vec3(0.0, 1.0, 0.0),\n        vec3(0.0, 0.0, 1.0)\n    );\n    \n    return arr[int(mod(trunc(seed), 7.0))];\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float seed = iTime / 5.0;\n    vec3 col = color(seed) * drawTriangle(uv, seed);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}