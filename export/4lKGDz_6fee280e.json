{"ver":"0.1","info":{"id":"4lKGDz","date":"1474209503","viewed":1625,"name":"Neon motion detection","username":"kloumpt","description":"Just tried some stuff during a work break\nhttps://soundcloud.com/aread/disastro-discoteca-live-in-toulouse-italo-disco-mix","likes":25,"published":1,"flags":34,"usePreview":0,"tags":["webcam","motion","quicky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //uv.y *= 0.6;\n    //uv.y += 0.4;\n    uv.x = 1.0 - uv.x;\n    \n    vec3 col = vec3(0.0);\n    vec2 off = 1.0 / iResolution.xy;\n    for (float i=-1.0; i<=1.0; i++) {\n        \n    \tfor (float j=-1.0; j<=1.0; j++) {\n        \n    \t\t col = texture(iChannel0, uv + vec2(i, j) * off).rgb;\n        }\n    }\n    \n    \n    fragColor = vec4(col / 2.0, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 color1 = texture(iChannel0, uv).rgb;\n    vec3 color2 = texture(iChannel1, uv).rgb;\n    \n    float motion = abs((0.299*color1.r + 0.587*color1.g + 0.114*color1.b) - (0.299*color2.r + 0.587*color2.g + 0.114*color2.b));\n    \n    vec3 color = 10.0 * motion * mix(vec3(112.0, 20.0, 66.0), vec3(20.0, 112.0, 66.0), 0.5 * cos(iTime) + .5) / 255.0;\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 col_0 = texture(iChannel0, uv).rgb;\n    vec3 col_1 = texture(iChannel1, uv).rgb;\n    \n    fragColor = vec4(mix(col_1, clamp(col_0, col_1 - 1.0 /255.0, col_1 + 96.0 / 255.0), 0.75), 1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}