{"ver":"0.1","info":{"id":"MtlyDX","date":"1506764365","viewed":1087,"name":"CRT Scanline","username":"josephknight","description":"combining various shaders, simplifying, and editing to get the desired retro result.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","crt","scanline","monitor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 scanline(vec2 coord, vec3 screen){\n    const float scale = .66;\n    const float amt = 0.02;// intensity of effect\n    const float spd = 1.0;//speed of scrolling rows transposed per second\n    \n\tscreen.rgb += sin((coord.y / scale - (iTime * spd * 6.28))) * amt;\n\treturn screen;\n}\n\nvec2 fisheye(vec2 uv, float str )\n{\n    vec2 neg1to1 = uv;\n    neg1to1 = (neg1to1 - 0.5) * 2.0;\t\t\n\t\t\n    vec2 offset;\n    offset.x = ( pow(neg1to1.y,2.0)) * str * (neg1to1.x);\n    offset.y = ( pow(neg1to1.x,2.0)) * str * (neg1to1.y);\n\t\n    return uv + offset;\t     \n}\n\nvec3 channelSplit(sampler2D tex, vec2 coord){\n    const float spread = 0.008;\n\tvec3 frag;\n\tfrag.r = texture(tex, vec2(coord.x - spread * sin(iTime), coord.y)).r;\n\tfrag.g = texture(tex, vec2(coord.x, \t\t\t\t\t  coord.y)).g;\n\tfrag.b = texture(tex, vec2(coord.x + spread * sin(iTime), coord.y)).b;\n\treturn frag;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 fisheyeUV = fisheye(uv, 0.03);\n\tfragColor.rgb = channelSplit(iChannel0, fisheyeUV);\n\tvec2 screenSpace = fisheyeUV * iResolution.xy;\n\tfragColor.rgb = scanline(screenSpace, fragColor.rgb);\n}\n\n","name":"Image","description":"","type":"image"}]}