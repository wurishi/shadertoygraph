{"ver":"0.1","info":{"id":"dlB3Wy","date":"1673835889","viewed":103,"name":"Draggable rotating square","username":"ianertson","description":"Drag it around using your mouse","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","square","rotation","drag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Box { vec2 min; vec2 max; float rot; vec2 uv; vec3 color;};\nvec2 rot2D(vec2 p, float angle) { angle = radians(angle); float s = sin(angle); float c = cos(angle); return p * mat2(c, s, -s, c);}\nvoid rotateBox(inout Box box, float ang) {\n    vec2 size = box.max-box.min;\n    vec2 pos = rot2D((box.min+box.max)*0.5, ang);\n    box.min = pos-size;\n    box.max = pos+size;\n    box.min = min(box.min, box.max);\n    box.max = max(box.min, box.max);\n}\nBox makeBox(vec2 pos, vec2 size, float rot) { return Box(pos-size, pos+size, rot, vec2(0.), vec3(0.)); } \nbool boxVsPoint(in Box box, in vec2 fc) { return ((fc.x < box.min.x || fc.x > box.max.x) || (fc.y < box.min.y || fc.y > box.max.y)) == false;}\nbool getBox(vec2 fc, inout Box box) {\n    float ang = box.rot;\n    rotateBox(box, ang);\n    fc = rot2D(fc, ang);\n    if (!boxVsPoint(box, fc)) return false;\n    vec2 size = box.max - box.min;\n    box.uv = ((box.max - fc)/size)*-1.0;\n    return true;\n}\nvec3 drawBox(Box box_, vec2 fc) { Box box = box_; if (!getBox(fc, box)) return vec3(0.0);\n    return texture(iChannel0, box.uv).rgb;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fc )\n{   float tscale = 0.2;\n    vec3 col = drawBox(makeBox(\n        iMouse.z > 0.001 ? iMouse.xy : iResolution.xy/2.0,\n        vec2(48.0),\n        (iTime*360.0)*tscale\n    ), fc);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}