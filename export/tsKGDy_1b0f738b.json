{"ver":"0.1","info":{"id":"tsKGDy","date":"1570909691","viewed":103,"name":"Sula","username":"evk","description":"Trying to recreate an effect I did ~25 years ago in 8086 assembler.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["twister"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getTwister(vec2 uv)\n{\n\tfloat x = uv.x;\n    \n    x += sin(uv.y*5.8+iTime*.3)*.04+sin(uv.y*3.9+iTime*5.15)*.07;\n    \n    float d = (1.+sin(uv.y*3.+iTime))*.01+(1.+sin(uv.y*4.4-iTime*1.1))*.05+.15;\n    \n    if (abs(x)<d) {\n    float n = texture(iChannel0, vec2(uv.y, sin(x/d*.2)+iTime*.1)).r*.007;\n    d+=n;\n    \n    float z = max(0., sqrt(d*d-x*x));\n    \n    z*=1.+sin(uv.y+iTime*5.)*.5;\n\n    return z;\n    }\n    else {\n        return -1.;\n    }\n}\n\nvec3 pal(float i)\n{\n    i*=i;\n    float r = i;\n    float g = i*.5 + pow(i,2.)*.5;\n    float b = i*.3 + pow(i,3.)*.7;\n    \n    return vec3(r,g,b);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    \n    float b = sin(iTime*.1)*3.14+sin(iTime*3.4)*.3+iTime*.1;\n    mat2 r = mat2(\n        cos(b),-sin(b),\n        sin(b),cos(b)\n    );\n    \n    vec2 uvr = uv * r;\n    uvr-=sin(iTime)*.2;\n    \n    float z = getTwister(uvr);\n   \n    vec3 c = vec3(0.08);\n    \n    if (z > 0.) {\n        vec3 p1 = vec3(uvr.x, uvr.y, z);\n        vec3 p2 = vec3(uvr.x - 1./iResolution.x, uvr.y, z);\n        vec3 p3 = vec3(uvr.x , uvr.y - 1./iResolution.x, z);\n\n        p2.z = getTwister(p2.xy);\n        p3.z = getTwister(p3.xy);\n        \n        vec3 tn = normalize(cross(p2-p1, p3-p1));\n\n        vec3 ln = normalize(vec3(0.) - vec3(sin(iTime), cos(iTime), -1. + abs(sin(iTime*3.4)*.3)));\n\n        float a = dot(tn, ln);\n        \n        if (a > 0.) {\n\t        c = pal(a);\n        }\n        else c = vec3(0.);\n    }\n    \n    fragColor = vec4(c,1.0);\n}\n","name":"Image","description":"","type":"image"}]}