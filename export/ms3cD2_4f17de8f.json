{"ver":"0.1","info":{"id":"ms3cD2","date":"1700598012","viewed":22,"name":"Easing Functions Colormix","username":"Peregrine","description":"Playing with mix() and https://easings.net/.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["easingscolormixing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://easings.net\n\n#define PI   3.14159265359\n#define EPSILON 0.00001\n#define FREQ 8.\n#define sat(x) clamp(x, 0., 1.)\n\nfloat easeInOutSine(float x) {\n    return (1. - cos(PI * x / FREQ)) / 2.;\n}\n\nfloat easeInOutCubic(float x) {\n    return x < .5 \n           ? 4. * pow(x, 3.)\n           : 1. - pow((-2.) * x + 2., 3.) / 2.;\n}\n\nfloat easeInOutCirc(float x) {\n    return x < 0.5 \n           ? 1. - sqrt(1. - pow(2. * x, 2.)) / 2.\n           : sqrt(1. - pow(-2. * x + 2., 2.) + 1.) / 2.;\n}\n\nfloat easeInOutElastic(float x) {\n    const float c5 = (2. * PI) / 4.5;\n\n    if (abs(x) < EPSILON || abs(x - 1.) < EPSILON)\n        return x;\n    else\n        return x < 0.5\n               ? -(pow(2., 20. * x - 10.) * sin((20. * x - 11.125) * c5)) / 2.\n               :  pow(2., -20. * x + 10.) * sin((20. * x - 11.125) * c5) / 2. + 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Colors\n    vec3 hotpink   = vec3(1., 0., .5);\n    vec3 shinbashi = vec3(0., .42, .49);\n    vec3 lavande   = vec3(0.58, 0.51, 0.92);\n    vec3 black     = vec3(0.);\n\n    // Time varying pixel color\n    vec3 color = mix(hotpink, shinbashi, easeInOutElastic(fract(iTime * 1./FREQ)));\n    color = sat(color);\n\n    // Output to screen\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}