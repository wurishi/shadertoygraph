{"ver":"0.1","info":{"id":"stcBWn","date":"1662902272","viewed":180,"name":"Inverse Lyapunov Journey","username":"GOX","description":"Based from https://www.shadertoy.com/view/Mds3R8# by inigo quilez, I inversed the colors, added some sin() breathing, made the perspective cam around and zoom in over time.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lyapunov"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on: https://www.shadertoy.com/view/Mds3R8# Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\nvec3 calc( in vec2 p )\n{\n    float breathr = (-0.5f + sin(pow(iTime, 0.65f))*-0.43f);\n    float x = 0.5;\n\tfloat h = 0.0; //+ breathr;\n\tfor( int i=0; i<150; i++ )\n\t{\n\t\tx = p.x*x*(1.0-x); h += log2(abs(p.x*(1.0-2.0*x)));\n\t\tx = p.x*x*(1.0-x); h += log2(abs(p.x*(1.0-2.0*x)));\n\t\tx = p.x*x*(1.0-x); h += log2(abs(p.x*(1.0-2.0*x)));\n\t\tx = p.x*x*(1.0-x); h += log2(abs(p.x*(1.0-2.0*x)));\n\t\tx = p.x*x*(1.0-x); h += log2(abs(p.x*(1.0-2.0*x)));\n\t\tx = p.x*x*(1.0-x); h += log2(abs(p.x*(1.0-2.0*x)));\n\n        x = p.y*x*(1.0-x); h += log2(abs(p.y*(1.0-2.0*x)));\n\t\tx = p.y*x*(1.0-x); h += log2(abs(p.y*(1.0-2.0*x)));\n\t\tx = p.y*x*(1.0-x); h += log2(abs(p.y*(1.0-2.0*x)));\n\t\tx = p.y*x*(1.0-x); h += log2(abs(p.y*(1.0-2.0*x)));\n\t\tx = p.y*x*(1.0-x); h += log2(abs(p.y*(1.0-2.0*x)));\n\t\tx = p.y*x*(1.0-x); h += log2(abs(p.y*(1.0-2.0*x)));\n\t}\n    h /= 150.0*12.0*breathr;\n\t\n\t\n\tvec3 col = vec3(0.0);\n\tif( h<0.0 )\n\t{\n\t\th = abs(h);\n\t\tcol = 0.5 + 0.5*sin( vec3(0.0,0.4,0.7) + 2.5*h );\n\t\tcol *= pow(h,0.25);\n\t}\n\t\n\n\treturn col;\n}\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    float evalResX = iResolution.x + pow(iTime, 2.0f);\n    float focusoffset = (min(iTime / 200.0f, 1.0f)*0.45f);\n\t#if 0\n\tvec3 col = calc( vec2(2.5,3.5) + 1.0*fragCoord/evalResX );\n\t#else\n\tvec3 col = calc( vec2(2.5,3.5) + 1.0*(fragCoord+vec2(0.0,0.0)) / evalResX + focusoffset ) +\n\t           calc( vec2(2.5,3.5) + 1.0*(fragCoord+vec2(0.0,0.5)) / evalResX + focusoffset ) +\n\t           calc( vec2(2.5,3.5) + 1.0*(fragCoord+vec2(0.5,0.0)) / evalResX + focusoffset ) +\n\t           calc( vec2(2.5,3.5) + 1.0*(fragCoord+vec2(0.5,0.5)) / evalResX + focusoffset );\n    col /= 4.0;\n\t#endif\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}