{"ver":"0.1","info":{"id":"mlffRs","date":"1693337190","viewed":28,"name":"another box blur","username":"Abyddon","description":"box blur","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blur","boxblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvSize = iResolution.xy;\n    float size = 1.;\n    float separation = 100.;\n    vec3 col = vec3(1.);\n    \n    for (float i = -size; i < size+1.; ++i)\n    {\n        for (float j = -size; j < size+1.; ++j)\n        {\n            col += texture(iChannel0, (fragCoord.xy + (vec2(i,j) * separation)) / uvSize).xyz;\n        }\n    }\n\n    col /= ((size * 2. + 1.)*(size * 2. + 1.));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}