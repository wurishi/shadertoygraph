{"ver":"0.1","info":{"id":"fd3SRn","date":"1641573505","viewed":234,"name":"Interference Patterns","username":"tarnith","description":"Wave interference","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    vec3 col = vec3(0.);\n    for (float i = 0.; i < 5.; i++){\n      col += createWave(uv+(hashwithoutsine21(i*.1)-vec2(.5)),iTime);\n      }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 hashwithoutsine21(float p)\n{\n\tvec3 p3 = fract(vec3(p,p,p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nfloat createWave(vec2 origin, float rate){\n  \n  origin *= 100.;\n  \n  \n  return sin(length(origin)+rate); \n}","name":"Common","description":"","type":"common"}]}