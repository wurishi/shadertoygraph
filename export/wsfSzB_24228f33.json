{"ver":"0.1","info":{"id":"wsfSzB","date":"1551541063","viewed":146,"name":"Tutorial: Smiley Face distortion","username":"Touchpadder","description":"From tutorial https://www.youtube.com/watch?v=GgGBR4z8C9o and https://www.youtube.com/watch?v=jKuXA0trQPE","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","smileyface"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 pos, float r, float width) {\n    float d = length(uv - pos);\n    float c = smoothstep(r, r - width, d);\n    return min(c + 0.01, 1.);\n}\n\nfloat Rect(vec2 uv, vec2 pos, vec2 size) {\n    uv = uv - pos;\n    if(uv.x < -size.x || uv.x > size.x || uv.y < -size.y || uv.y > size.y) {\n        return 0.;\n    }\n    return 1.;\n}\n\nfloat u = 0.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float t = iTime;\n    vec2 uv = fragCoord / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    uv -= .5;\n    uv.x *= ratio;\n    \n    float x = uv.x;\n    float m = sin(t + cos(x) * 8.) * .15;\n    \n    float y = uv.y = uv.y - m;\n\n    float mask = Circle(uv, vec2(.0, .0), .4, .05);\n   \tmask -= Circle(uv, vec2(-.13, .15), .1, .008);\n    mask -= Circle(uv, vec2(.13, .15), .1, .008);\n    \n    float mouth = Circle(uv * vec2(1.1, 1.), vec2(0., 0.1), .38, .03) - Circle(uv * vec2(0.8, 1.), vec2(0., 0.25), .4, .03);\n    \n    float rect = Rect(vec2(x, y), vec2(0.25, 0.3), vec2(.5, .2));\n\n    mask -= mouth;\n\n    vec3 col = vec3(.0);\n    col = vec3(0.7, 1., 0.5) * mask;\n    // col += rect;\n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}