{"ver":"0.1","info":{"id":"XllBz7","date":"1511450129","viewed":153,"name":"glider battle","username":"ws","description":"Game of Life glider guns","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["life"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(1.0-vec3(texture(iChannel0, uv).x), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Gold Noise https://www.shadertoy.com/view/ltB3zD\nfloat PHI = 1.61803398874989484820459 * 00000.1; // Golden Ratio   \nfloat PI  = 3.14159265358979323846264 * 00000.1; // PI\nfloat SRT = 1.41421356237309504880169 * 10000.0; // Square Root of Two\nfloat gold_noise(in vec2 coordinate, in float seed) {\n    return fract(sin(dot(coordinate*seed, vec2(PHI, PI)))*SRT);\n}\n\n// http://www.conwaylife.com/wiki/Gosper_glider_gun\n#define GOSPER_SIZE 36\nint gospery[GOSPER_SIZE] = int[](0,1,1,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,\n\t5,5,5,5,5,5,5,5,6,6,6,7,7,8,8);\nint gosperx[GOSPER_SIZE] = int[](24,22,24,12,13,20,21,34,35,11,15,20,21,34,35,\n\t0,1,10,16,20,21,0,1,10,14,16,17,22,24,10,16,24,11,15,12,13);\n\n// http://www.conwaylife.com/wiki/Simkin_glider_gun\n#define SIMKIN_SIZE 36\nint simkiny[SIMKIN_SIZE] = int[](0,0,0,0,1,1,1,1,3,3,4,4,9,9,9,9,10,10,11,11,11,11,\n\t12,12,12,12,12,12,13,17,17,18,19,19,19,20);\nint simkinx[SIMKIN_SIZE] = int[](0,1,7,8,0,1,7,8,4,5,4,5,22,23,25,26,21,27,21,28,\n\t31,32,21,22,23,27,31,32,26,20,21,20,21,22,23,23);\n\n// http://www.conwaylife.com/wiki/Bi-gun\n#define BIGUN_SIZE 44\nint biguny[BIGUN_SIZE] = int[](0,1,1,2,2,3,3,3,3,4,5,5,5,5,6,6,6,6,7,7,7,7,7,7,7,7,\n\t8,8,8,8,9,9,9,9,10,11,11,11,11,12,12,13,13,14);\nint bigunx[BIGUN_SIZE] = int[](11,10,11,9,10,10,11,14,15,38,38,39,48,49,39,40,48,49,\n\t10,11,14,15,34,35,38,39,0,1,9,10,0,1,10,11,11,34,35,38,39,39,40,38,39,38);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // I assume bounding box of at least 272x152\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    if (iFrame == 0) {\n#ifdef RANDOM_INIT\n        float v = gold_noise(fragCoord, PHI);\n        fragColor.x = (v > 0.5) ? 1.0 : 0.0;\n#else\n        ivec2 coord = ivec2(int(floor(fragCoord.x)),\n                            int(floor(fragCoord.y)));\n        ivec2 center = ivec2(int(iChannelResolution[0].x/2.0),\n                             int(iChannelResolution[0].y/2.0));\n        for (int i = 0; i < BIGUN_SIZE; i++) {\n            if (coord == ivec2(center.x-20-bigunx[i], center.y-40+biguny[i]) ||\n                coord == ivec2(center.x-10+bigunx[i], center.y+40-biguny[i])) {\n                fragColor.x = 1.0;\n            }\n\t\t}\n\t\tfor (int i = 0; i < GOSPER_SIZE; i++) {\n            if (coord == ivec2(center.x-135+gosperx[i], center.y+50-gospery[i]) ||\n                coord == ivec2(center.x-135+gosperx[i], center.y-50+gospery[i]) ||\n                coord == ivec2(center.x-10-gosperx[i], center.y+50-gospery[i]) ||\n                coord == ivec2(center.x-15+gospery[i], center.y-75+gosperx[i])) {\n                fragColor.x = 1.0;\n            }\n\t\t}\n        for (int i = 0; i < SIMKIN_SIZE; i++) {\n            if (coord == ivec2(center.x+6+simkinx[i], center.y-55-simkiny[i]) ||\n                coord == ivec2(center.x+45+simkinx[i], center.y-44-simkiny[i]) ||\n                coord == ivec2(center.x+74+simkinx[i], center.y-37-simkiny[i]) ||\n                coord == ivec2(center.x+99+simkinx[i], center.y-30-simkiny[i])) {\n                fragColor.x = 1.0;\n            }\n        }\n#endif\n    } else {\n        float neighbors = 0.0;\n        ivec2 coord = ivec2(int(floor(fragCoord.x)),int(floor(fragCoord.y)));\n        float current = texelFetch(iChannel0, coord, 0).x;\n\t\tfor (int i = -1; i < 2; i++) {\n\t\t\tfor (int j = -1; j < 2; j++) {\n                if(coord.x > 0 && coord.y > 0 && \n                   coord.x < (int(iChannelResolution[0].x)-1) &&\n                   coord.y < (int(iChannelResolution[0].y)-1)) {\n\t\t\t\t\tneighbors += texelFetch(iChannel0, coord + ivec2(i,j), 0).x;\n                }\n\t\t\t}\n        }\n\t\tif ((current < 0.5 && (neighbors > 2.5 && neighbors < 3.5)) ||\n            (current > 0.5 && (neighbors > 2.5 && neighbors < 4.5))) {\n\t\t\tfragColor.x = 1.0;\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}