{"ver":"0.1","info":{"id":"3sKSDD","date":"1574186326","viewed":307,"name":"Geometric Tiles #1","username":"Podis","description":"Another weaving 3-UV pattern using a Hexagon Grid.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["simplex","hexagon","pattern","tile","geometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Functions: hex_tile & hexagon Borrowed From: https://www.shadertoy.com/view/wtXSR4\n// Function: simplexGrid Borrowed From: https://thebookofshaders.com/11/\n// Not trying to reinvent the Wheel...\n\n// Idea Came From: https://www.sketchuptextureclub.com/textures/architecture/tiles-interior/marble-tiles/marble-geometric-patterns/geometric-marble-tiles-patterns-texture-seamless-21151\n\nfloat scale = 3.;\t\t// Scale messes with UV-Offset. Default = 3.\nfloat pi = 3.14159;\n// Colors\nvec3 white = vec3(1.0);\nvec3 grey = vec3(0.3);\nvec3 lgrey = vec3(0.8);\nvec3 black = vec3(0.0);\n\n// https://thebookofshaders.com/11/\nvec3 simplexGrid(vec2 st){\n \tvec2 r = vec2(0.0);\n    vec3 xyz = vec3(0.0);\n    \n    // Skew\n    r.x = 1.1547 * st.x;\n    r.y = st.y + .5 * r.x;\n    \n    // Simplex\n    vec2 p = fract(r);\n    if (p.x > p.y){\n        xyz.xy = 1. - vec2(p.x, p.y-p.x);\n        xyz.z = p.y;\n    } else {\n        xyz.yz = 1. - vec2(p.x-p.y, p.y);\n        xyz.x = p.x;\n    }\n       \n    return fract(xyz);\n}\n\n// https://www.shadertoy.com/view/wtXSR4\nvec2 hex_tile(vec2 uv, float rep, out vec2 id)\n{  \n    \n    uv *= rep;\n    \n    vec2 d = vec2(1.0, sqrt(3.0));\n    vec2 h = 0.5*d;\n    vec2 a = mod(uv, d) - h;\n    vec2 b = mod(uv + h, d) - h;\n    vec2 p = dot(a, a) < dot(b, b)? a: b;\n    \n    id = p - uv;\n\n    return p;\n}\n\n// https://www.shadertoy.com/view/wtXSR4\nfloat hexagon(vec2 uv, float s)\n{\n    vec2 p = abs(uv);\n    \n    float shape = smoothstep(p.x, p.x+0.01, s);\n    float hd = dot(p, normalize(vec2(1.0, 1.73)));\n    shape *= smoothstep(hd, hd+.01, s);\n    \n    return clamp(shape, 0., 1.);\n}\n\n\nvec3 tiledPattern(vec2 p){\n    \n    // UV's for Y Cut Out\n    vec2 hv2 = p;\n    hv2.x -= .57735, hv2.y += .3334;\n    vec2 hv3 = p;\n    hv3.x += .57735, hv3.y += .3334;\n    vec2 hv4 = p;\n    hv4.y -= .6667;\n    \n    // Y Cut out\n    float y1 = hexagon(hv2, .4);\n    float y2 = hexagon(hv3, .4);\n    float y3 = hexagon(hv4, .4);\n    float yco = y1 + y2 + y3;\n        \n    \n    // Hexagons\n    float h1 = hexagon(p, .502);\n    float h2 = hexagon(p, .42);\n   \tfloat hex1 = h1 - h2;\n    vec3 hex1C = hex1 * lgrey;\n    \n    float h3 = hexagon(p, .415);\n    float h4 = hexagon(p, .35);\n    float hex2 = h3 - h4;\n    vec3 hex2C = hex2 * grey;\n    \n    // Simplex Grid\n    vec2 sg = p/3.;\n    sg *= 3.*1.73;\n    vec3 sg1 = simplexGrid(sg);\n    \n    // Grid Lines\n    float g = step(sg1.x, .0225);\t\n    float h = step(sg1.y, .0225);\n    float i = step(sg1.z, .0225);\n    float gl = (g+h+i);\n    \n    // Final Shape\n    float h5 = (hex1 + hex2) * yco - gl;\n    \n    // Mix Colors with Shape\n    vec3 ret = mix(white, hex1C + hex2C, h5);\n    \n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x  *= iResolution.x / iResolution.y;\n    \n    // Hex Grid 1\n    vec2 hv = uv;\n    vec2 id;\n    vec2 hex = hex_tile(hv, scale, id);\n    \n    // Hex Grid 2\n    vec2 hv2 = uv;\n    hv2.x -= .1111*scale; //0.3334;\t// divide by 3 = .11111\n    hv2.y -= .064*scale; //0.192;\t\t// divide by 3 = .064\n    vec2 id2;\n    vec2 hex2 = hex_tile(hv2, scale, id2);\n    \n    // Hex Grid 3\n    vec2 hv3 = uv;\n    hv3.y -= .128 * scale; //.385;\n    vec2 id3;\n    vec2 hex3 = hex_tile(hv3, scale, id3);\n    \n    \n\n\t// Pattern\n    vec3 pat5 = tiledPattern(hex);\n    vec3 pat6 = tiledPattern(hex2);\n    vec3 pat7 = tiledPattern(hex3);\n\n    vec3 tst = pat5 * pat6 * pat7;\n\n    \n    \n    // Output to screen\n    fragColor = vec4(tst, 1.0);\n}","name":"Image","description":"","type":"image"}]}