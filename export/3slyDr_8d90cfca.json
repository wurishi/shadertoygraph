{"ver":"0.1","info":{"id":"3slyDr","date":"1584659724","viewed":50,"name":"hello world4737","username":"composer228","description":"my first shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["firstshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(float v){return fract(sin(v)*4343.3123);}\nfloat hash(vec2 v){return hash(dot(v,vec2(71.,313.)));}\nfloat noise(vec2 x) {\n\t// F - левый нижний узел сетки, f - вес пра\n\tvec2 F = floor(x), f = fract(x);\n\t// пятисекундка удобства\n\tvec2 e = vec2(1.,0.);\n\t\n\t// сглаживание\n\tf *= f * (3. - 2. * f);\n\t\n\t// билинейная интерполяция\n\treturn mix(\n\t\tmix(hash(F+e.yy), hash(F+e.xy), f.x),\n\t\tmix(hash(F+e.yx), hash(F+e.xx), f.x), f.y);\n}\nfloat w(vec3 p,vec2 uv){\n   return min(length(p-vec3(0.,0.,2.))-1.+.1*sin(noise(iTime)),p.y+1.);//min(p.z,min(p.y+.1*noise(uv),p.x)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    uv.x *= iResolution.x/iResolution.y; \n    \n\n    // Time varying pixel color\n    \n    vec3 pixelColor = vec3(uv.xyx*sin(iTime)+.5);\n    vec3 col=vec3(1.);\n    vec3 O = vec3(0.,0.,5.);\n    vec3 D = normalize(vec3(uv,-1));\n    const float L = 10.;\n    float l,d,i;\n    vec3 P;\n    for(i=0.;i<100.;++i)\n    {\n        P=O+D*l;\n        d=w(P,uv);\n        l+=d;\n        if(d<0.0001||l>L) break;\n    }\n    if(l<L)\n    {\n        col=normalize(P+vec3(1.,3.,1.));\n        col = vec3(l/L);\n        \n        \n        \n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}