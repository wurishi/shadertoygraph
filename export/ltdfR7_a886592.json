{"ver":"0.1","info":{"id":"ltdfR7","date":"1539119074","viewed":318,"name":"Nematomorpha","username":"PianiGiani","description":"A simplified version of another shader I posed earlier","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["line","wobble","curves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define nTime (iTime*0.5)+1000. // speed\n\nfloat DDot(vec2 p1,vec2 p2) {\n    return 1.3-(distance(p1,p2)*300.);\n}\n\n\nfloat Wobble(float i,float factor) {\n\tfloat wob1 = sin((i+nTime+i+i)*10.)/10.+sin(nTime/3.)/85.+sin(nTime/5.)/85.;\n    float wob2 = sin((i+nTime+i+i)*10.)/10.+sin((i+nTime)*3.)*0.5+sin((i+nTime)*5.)*0.4; \n    return mix(wob2,wob1,factor);\n}\n\nfloat Curv(float i,float ii) {\n\treturn(cos((nTime/3.)+ii+ii)*(sin((i*ii+i)*(i+6.))/(7.*atan(nTime/3.))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float factor = 0.3;\n    float ii=1.+(sin(nTime/20.));\n    vec3 col1=vec3(0.);\n    \n    for (float i=0.00; i<= 1.05;i+=0.004) {\n    \n   \t\tvec2 cc= vec2(i+Curv(i,i+sin(iTime+ii)),(Wobble(i,factor)+Curv(i,ii)*4.));\n        float col = DDot(uv, (cc * vec2(1.,factor)) + vec2(0.,0.5) );\n        vec3 col2 = vec3(col * ii, col*(sin(i)+.5),col*(sin(ii)+.5));\n    \tcol1 = max(col2,col1);\n\n    }\n    fragColor = vec4(col1,0.);\n}\n","name":"Image","description":"","type":"image"}]}