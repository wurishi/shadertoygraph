{"ver":"0.1","info":{"id":"mtG3Wz","date":"1694634902","viewed":66,"name":"HiveMind","username":"Trakatranks","description":"Just a simple 2D Hex grid wwith some manipulations","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["hexagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float D(vec2 p){\n    return length(p);\n}\n\nfloat HD(vec2 p){\n    p = abs(p);\n    return max(dot(p, normalize(vec2(1.0,1.73))), p.x);\n}\n\nmat2 rot(float rot)\n{\n    return mat2(cos(rot),-sin(rot),sin(rot),cos(rot));\n}\n\nvec4 HG(vec2 uv){\n    vec2 triSide = vec2(1.,1.73);\n    vec2 hSide = triSide*0.5;\n\n    vec2 gva = mod(uv,triSide) - hSide;\n    vec2 gvb = mod(uv-hSide,triSide) - hSide;\n\n    vec2 gv;\n    if(length(gva)<length(gvb))\n        gv = gva;\n    else\n        gv = gvb;\n    \n    \n    vec2 id = uv - gv;\n    \n    float hexDist = HD(gv);\n    \n    vec4 values = vec4(gv,id);\n    \n    return vec4(hexDist, 0.5-hexDist ,id);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    uv *= 7.;\n    uv +=vec2(.8*sin(iTime), 1.3*cos(iTime));\n    uv *= rot(cos(iTime * .1));\n    vec4 grid = HG(uv);\n    \n    vec2 GID = grid.zw;\n    float GIDist = HD(GID);\n    \n    vec3 col = vec3(smoothstep(0.45,0.52,grid.x));\n    \n    vec3 inv = 1.0-col;\n    \n    vec3 colA = vec3(0.1);\n    vec3 colB = vec3(0.3);\n    \n    col = mix(colA, colB, col);\n    col += 2.*cos(grid.y * 45.) * vec3(0.7,0.05,0.0);\n    col *= inv * (.1*cos(HD(GID * 0.5)) + .4);\n    \n    col += (.5*cos(iTime * 3.0)+.5) * smoothstep(0.35,0.5,grid.x) * vec3(.6,0.0,0.0);\n    //col += smoothstep(0.48,0.5,grid.x) * mix(vec3(.7,0.0,0.0),vec3(.9,.3,.3),(.5*cos(iTime * 3.0)+.5));\n    \n    // Output to screen\n    fragColor = vec4(col,0.0);\n}","name":"Image","description":"","type":"image"}]}