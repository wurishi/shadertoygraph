{"ver":"0.1","info":{"id":"sdKBRV","date":"1658528935","viewed":242,"name":"Voxel Cloud Thing","username":"uiop","description":"some voxels test","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["voxel","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rotx(vec3 p, float a){\n    float s = sin(a);\n    float c = cos(a);\n    return(vec3(p.x*c+p.y*s,-p.x*s+p.y*c,p.z));\n}\n\n\nvoid voxelMarch(in vec3 pos, in vec3 dir, out vec3 newpos, out vec3 newface){\n    float ou = (dir.x > 0.) ? (1.-pos.x)/dir.x : -1.*pos.x/dir.x;\n    if(!(0.5<abs(pos.y+ou*dir.y-0.5)) && !(0.5<abs(pos.z+ou*dir.z-0.5))){\n        newpos = pos + dir*ou;\n        newface.x = 1.;\n        newpos.x += dir.x*0.01;\n    }\n    ou = (dir.y > 0.) ? (1.-pos.y)/dir.y : -1.*pos.y/dir.y;\n    if(!(0.5<abs(pos.x+ou*dir.x-0.5)) && !(0.5<abs(pos.z+ou*dir.z-0.5))){\n        newpos = pos + dir*ou;\n        newface.y = 1.;\n                newpos.y += dir.y*0.01;\n\n    }\n    ou = (dir.z > 0.) ? (1.-pos.z)/dir.z : -1.*pos.z/dir.z;\n    if(!(0.5<abs(pos.y+ou*dir.y-0.5)) && !(0.5<abs(pos.x+ou*dir.x-0.5))){\n        newpos = pos + dir*ou;\n        newface.z = 1.;\n                newpos.z += dir.z*0.01;\n\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float speed = 0.96;\n    float time = iTime*speed+44.5;\n    int maxrays =200;\n    \n    vec2 uv = (fragCoord-0.5f*iResolution.xy)/iResolution.x;\n    vec3 colr = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    colr = vec3(0,0,0);\n    vec3 pos1 = vec3(0.0*sin(time*0.1f),50.*cos(time*0.18f),-50.*sin(time*0.18f));\n    vec3 center = vec3(5.5,5.5,5.5); \n    pos1 += center;\n    \n    vec3 pos = pos1;\n    vec3 dir = normalize(rotx(vec3(uv.x,uv.y,-0.5+0.01*sin(time*1.5)).zxy,time*0.18f).zxy);\n    bool hit = false;\n    vec3 newface = vec3(0,0,0);\n    for(int i = 0; i < maxrays; i ++){\n       vec3 col = texture(iChannel0,floor(pos)*(0.007)).rgb;\n       if((col.r > 0.9f+0.05f*sin(time*5.) || col.g > 0.9f+0.05f*sin(time*5.+2.1) || col.b > 0.9f+0.05f*sin(time*5.+4.6))){\n           colr += col * 20./length(pos-pos1);\n           if(colr.r > 1. && colr.g > 1. && colr.b > 1.){\n               i = maxrays;\n           }\n       }\n           vec3 newpos;\n           newface = vec3(0,0,0);\n           voxelMarch(mod(pos,vec3(1.,1.,1.)),dir,newpos,newface);\n           if(length(newface) == 0.){\n    \n           }else{\n               pos = floor(pos) + newpos;\n           }\n       \n    }\n    if(hit){\n        colr.r = 0.5;\n        colr.g = 0.5;\n        colr.b = 0.5;\n        colr = newface * 10./length(pos-pos1);\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(colr,1.0);\n}","name":"Image","description":"","type":"image"}]}