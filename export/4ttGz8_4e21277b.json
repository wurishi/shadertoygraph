{"ver":"0.1","info":{"id":"4ttGz8","date":"1467995742","viewed":144,"name":"[SH16A] second attempt 621","username":"lovelyH","description":"My second approach.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sh16a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C mod(b.x+b.z,2.)<.5?.4\n#define B vec3\n#define A normalize(B(\nvoid mainImage(out vec4 r,vec2 i){B c,n=iResolution,e=B(0,1,0),p=B(.851,2,-2.8768),b=A-e*.2-p)),d=A-b.z,0,b.x));d=mat3(d,cross(d,b),b)*A i-.5*n.xy,n.y));for(int j=0;j<129;j++)b=clamp(ceil(p-.5),-2.,2.),b.y=C:.25,p+=j==64?n=A p-b)),c=.06>p.y?n=e,smoothstep(0.,.5,dot(b,b)<4.?length((p-b).xz):1.)*B((b=floor(p)).y+C:.5*texture(iChannel0,.1*p.xz).x):e.yxx+floor(2.5*b.x+6.+.5*b.z)*B(-8,3,6)*.01,e=pow(max(dot(reflect(d,n),d=A-6,7,-5))),0.),16.)+c*B(1.2,1.02,.66),.01*d:d*min(length(p-b)-b.y,p.y);r.xyz=sqrt(e*B(2.<p.y)*dot(n,d)+c*++n.y*B(1,1.4,2)/8.);}\n\n///befor compression by script:\n/* \nvoid mainImage( out vec4 r, in vec2 i )\n{\n        /// camera\n        vec3  c\n                , n=iResolution\n                , e=vec3(0,1,0)\n                , p= vec3(.851,2,-2.8768)\n                , b = normalize(vec3(-e*.2-p))\n                , d = normalize(vec3(-b.z,0,b.x ) )\n        ;\n        /// WTF, why on chrome it can not be declarde together with other vec3 variables ?\n        d = mat3( d, cross(d,b), b ) * normalize(vec3(i-.5*n.xy,n.y));\n        //d = mat3( d, cross(d,b), b ) * normalize(vec3(i-.5*iResolution.xy,1080)); /// that will be correct on 1920x1080, and save 5 characters\n        //// render\n        for( int j=0; j<129; j++ )\n                /// nearest ball (idea taken from knarkowicz shader)\n                b= clamp( ceil(p-.5), -2., 2. ),\n                b.y = mod(b.x+b.z,2.)<.5?.4: .25,\n                /// move p point forward\n                p += j==64 ?\n                        /// code between screen loop and shadow loop\n                        n= normalize(vec3(p-b)),\n                        c=\n                                0.06 > p.y ?\n                                        /// floor\n                                        n= e,\n                                        smoothstep(0.,.5, dot(b,b) < 4. ? length((p-b).xz) : 1. )\n                                                * vec3(\n                                                        /// very close to 0\n                                                        (b=floor(p)).y+\n                                                        /// script will make definiotion from it\n                                                        mod(b.x+b.z,2.) < .5\n                                                        ?\n                                                                .4\n                                                        :\n                                                                .5 * texture( iChannel0, 0.1*p.xz ).x\n                                                                //.5 * texture( iChannel0, 0.1*p.xz + vec2(37,17)/256., -100. ).y\n                                                )\n                                :\n                                        /// ball\n                                        e.yxx + floor(2.5*b.x+6.+.5*b.z)*vec3( -8, 3, 6)*.01\n                        ,\n                        e= pow(max(dot(reflect( d, n ),d=normalize(vec3(-6,7,-5))), 0. ),16.) +  c*vec3(1.2,1.02,.66),\n                        /// shadow (prepare next loop)\n                        .01*d\n                :\n                        /// map function\n                        d*min(length(p-b)-b.y,p.y)\n                ;\n\n        /// final color\n        r.xyz=sqrt(\n                //e * max( p.y<2. ? 0. : dot( n, d ), 0. )\n                e * vec3( 2. < p.y ) * dot( n, d ) /// that save 8 characters, but there is 1.00% of error\n                +\n                c*++n.y*vec3(1,1.4,2)/8.\n        );\n}\n*/\n","name":"Image","description":"","type":"image"}]}