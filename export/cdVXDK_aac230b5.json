{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Author: paperu\n// Title: Plants growing from nowhere\n\nfloat t;\n#define T 6.283185307\n#define P T*.5\n\nmat2 rot(in float a) { return mat2(cos(a),sin(a),-sin(a),cos(a)); }\n\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n    \n#define orientedVec2(a) vec2(cos((a)),sin((a)))\n\nfloat petalDcp(in vec2 uv, in float w)\n{\n\tuv.x = abs(uv.x) + .25 + .25*w;\n\treturn length(uv) - .5;\n}\n\nfloat petal(in vec3 p, in float m)\n{\n\tfloat tt = mod(t, P);\n\n\tfloat ouv = m - .015;\n\tfloat w = m;\n\tfloat a = m;\n\tconst float b = .5;\n\tp.y -= .45;\n\tp.z -= b*1.;\n\tp.zy *= rot(ouv*2.);\n\tfloat pDcp = petalDcp(p.xy, w);\n\tp.x = abs(p.x);\n\tp.xz *= rot(-.25);\n\tfloat c1 = length(p.yz) - b;\n\treturn max(max(pDcp, abs(c1) - .01), p.z);\n}\n\nvec2 repRot(in vec2 p, in float aIt)\n{\n\treturn p*rot(-(T/aIt)*floor((atan(p.x, p.y)/T + .5)*aIt) - P - T/(aIt*2.));\n}\n\nfloat flower(in vec3 p, in float aIt, in float m)\n{\n\tp.xy = repRot(p.xy, aIt);\n\treturn petal(p, m);\n}\n\nint m;\nfloat df(in vec3 pp) {\n    //pp.xz *= rot(t), pp.xy *= rot(t);\n    pp.y = -pp.y;\n    pp.xz *= rot(1.016), pp.xy *= rot(-0.640);\n    \n    float dd = 10e9, ee = 10e9;\n    vec3 p = pp;\n    \n    const float fsz = .25;\n    const vec2 n = orientedVec2(P*.125);\n    \n    bool b = false;\n    for(float g = 0.; g < 3.; g++)\n    {\n        p = (b = !b) ? p.xzy : p.zxy;\n        float r = length(p.xy);\n        vec3 pp = vec3(log(r) - t*(.1+((g+1.)*.051)), atan(p.x, p.y) /*+ cos(sqrt(r))*.2*/, p.z/r);\n        float e = dot(pp.xy, n), f = dot(pp.xy, vec2(n.y,-n.x));\n        {float k = 1.2021; e = mod(e, k) - k*.5;}\n        float l = .65; f += 1.3; float i = mod(floor(f/l) + g, 3.); f = mod(f, l) - l*.5;\n        float d = (length(vec2(e, pp.z)) - 0.015/r)*r;\n        bool j = i == 0.;\n        dd = opSmoothUnion(dd, d, .1);\n        float ff = flower(vec3(e, f, pp.z + .06)/fsz, smoothstep(-1., 1., r*r)*(j ? 5. : 2.), smoothstep(1., -0., r*r))*fsz*r;\n        ee = min(ee, ff);\n        if(ee == ff) m = j ? 1 : 0;\n    }\n    \n    float ff = min(dd, ee);\n    if(ff == dd) m = 0;\n    return ff*.8;\n}\n\n#define MAX_D 30.\n#define MIN_D 0.\n#define LIM .0002\n#define MAX_IT 500\nvec3 normal(in vec3 p) { float d = df(p); vec2 u = vec2(0.,LIM); return normalize(vec3(df(p + u.yxx),df(p + u.xyx),df(p + u.xxy)) - d); }\n\nstruct rmRes { vec3 p; int i; bool h; };\nrmRes rm(in vec3 c, in vec3 r)\n{\n    rmRes s = rmRes(c + r*MIN_D, 0, false);\n    float d;\n    for(s.i = 0; s.i < MAX_IT; s.i++) {\n        d = df(s.p);\n        if(d < LIM) { s.h = true; break; }\n        if(distance(c,s.p) > MAX_D) break;\n        s.p += d*r;\n    }\n    return s;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 st = (fragCoord.xy - iResolution.xy*.5)/iResolution.x;\n    t = iTime;\n    \n    vec3 c = vec3(0.,0.,-10.), r = normalize(vec3(st,1.));\n\n    rmRes res = rm(c,r);\n    \n    vec3 sky = (vec3(0.955,0.912,0.931) - dot(st,st)*.2);\n    vec3 color = sky;\n    \n    if(res.h)\n    {\n        vec3 n = normal(res.p);\n        const vec3 ld = normalize(vec3(0.,1.,-.1));\n        float d = max(0., dot(n, ld));\n        float s = pow(max(0., dot(r, reflect(ld, n))), 1.);\n        color = mix(vec3(0.500,0.763,0.915), vec3(1.), d);\n        color *= m == 1 ? vec3(0.905,0.170,0.292) :vec3(0.885,0.882,0.945);\n        // color += pow(float(res.i)*.005,2.);\n        color = mix(color, sky, smoothstep(20., 25., distance(res.p, c)));\n        color = mix(color, sky, smoothstep(0.5, 3., dot(st,st)*10.));\n    }\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"cdVXDK","date":"1681642361","viewed":2113,"name":"Plants growing from nowhere","username":"sukupaper","description":"Basically three spiral plants using 2D Log-spherical Mapping\n\nto be fixed: some discontinuity because of poor domain repetition","likes":101,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","plant","flowers","growing"],"hasliked":0,"parentid":"","parentname":""}}