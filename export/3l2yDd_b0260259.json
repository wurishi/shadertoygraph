{"ver":"0.1","info":{"id":"3l2yDd","date":"1595736648","viewed":128,"name":"fractal cage","username":"gaz","description":"fractal","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lpNorm(vec3 p, float n)\n{\n\tp = pow(abs(p), vec3(n));\n\treturn pow(p.x+p.y+p.z, 1.0/n);\n}\n\nfloat map(vec3 p){\n\tfloat s = 1.;\n\tfor(int i = 0; i < 9; i++) {\n\t\tp=p-2.*round(p/2.);\n\t\tfloat r2=1.1/max(pow(lpNorm(p.xyz, 4.5),1.6),.15);\n    \tp*=r2;\n    \ts*=r2;\n\t}\n\treturn length(p)/s-.001;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=(2.*fragCoord-iResolution.xy)/iResolution.y;\n\tvec3 p,\n  \t\tro=vec3(1,1.5,-iTime*.3),\n  \t\tw=normalize(vec3(.2,sin(iTime*.05),-1)),\n  \t\tu=normalize(cross(w,vec3(0,1,0))),\n  \t\trd=mat3(u,cross(u,w),w)*normalize(vec3(uv,2));\n  \tfloat h=0.,d,i,zoom = 3.;\n \tro*=zoom;\n\tfor(i=1.;i<100.;i++){\n    \tp=ro+rd*h;\n    \tp/=zoom;\n\t  \td=map(p);\n    \tif(d<0.001||h>25.)break;\n    \th+=d;\n\t}\n\tfragColor.xyz=25.*vec3(cos(p*.4)*.5+.5)/i;\n}\n","name":"Image","description":"","type":"image"}]}