{"ver":"0.1","info":{"id":"Ds2SRD","date":"1669999135","viewed":149,"name":"Mandelbrot zoom on spiral","username":"olskor","description":"a zoom on the Mandelbrot set","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int max_iterations = 500;\nfloat scale = 3.0f;\nvec2 c = vec2(-0.2f, -0.7f);\nvec2 offset = vec2(-0.533660,0.526235);\n\nvec3 hsv2RgbSmooth(float hue, float saturation, float value) {\n    vec3 rgb = clamp(abs(mod(hue*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0);\n\n\trgb = rgb*rgb*(3.0-2.0*rgb);\t\n\n\treturn value * mix(vec3(1.0), rgb, saturation);\n}\n\n\nfloat fractal(vec2 z, vec2 c) {\n  for (int i = 0; i < max_iterations; i++) {\n\n    float real = z.x * z.x - z.y * z.y + c.x;\n    float imaginary = 2.0 * z.x * z.y + c.y;\n\n    z.x = real;\n    z.y = imaginary;\n\n    if (z.x * z.x + z.y * z.y > 16.0) {\n      return (float(i) + 1.0 - (log2(log2(z.x * z.x + z.y * z.y)) - 1.0));\n    }\n  }\n\n  return 0.0f;\n}\n\nvec2 fragCoordToCartesianPosition(vec2 fragCoord, float scale, vec2 offset) {\n    vec2 coordinate;\n    coordinate.x = (scale * fragCoord.x / (iResolution.x*(iResolution.y/iResolution.x)))-scale / (2.0f*(iResolution.y/iResolution.x));\n    coordinate.y = (scale * fragCoord.y / iResolution.y)-scale / 2.0f;\n    coordinate = coordinate + offset;\n\n  return coordinate;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    scale = scale/500.0f/pow(500.0f,cos(3.14+(0.1*iTime)));\n\n    vec2 coordinate = fragCoordToCartesianPosition(fragCoord, scale, offset);\n\n    vec3 col2 = vec3(1.0, 1.0, 1.0);\n\n    float mandelbrotset = fractal(coordinate, coordinate)/float(max_iterations);\n\n    if (mandelbrotset == 0.0f)\n    {\n        col2 = vec3(0.0f);\n    }else\n    col2 = hsv2RgbSmooth(mandelbrotset*10.0, 1.0, 1.0f);\n\n\tfragColor = vec4(col2, 1.0f);\n}\n","name":"Image","description":"","type":"image"}]}