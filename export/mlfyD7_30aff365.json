{"ver":"0.1","info":{"id":"mlfyD7","date":"1690821106","viewed":82,"name":"Ribbon with circles","username":"vete","description":"parametric for loop","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["ribbon","circles","sin","taper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Fabrice's version\n#define c(a) cos(a)\n#define s(a) sin(a)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 3.* ( u - R*.5 ) / R.y;  \n    O *= 0.;\n\n    for(float t = iTime/4., i=.1; i<1.5; i+=.001 )\n        O = max(O, smoothstep( 4.5/R.y, 0., \n              length( U+vec2(\n                         i*i * c(i*22.*s(t)) * s( 1.5*c(t*2.)*i+ c(i) )\n                       ,       s(i*11.*s(t)) * s( 4.*s(t*2.5)*i +i +s(c(t)+t) )\n                    )       )\n             - .03*(.5+.4*s(i*24.))));\n}\n\n\n/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    uv *=3.;\n    \n    \n    // Time varying pixel color\n    vec3 col;\n    float t = iTime/4.;\n    #define c(a) cos(a)\n    #define s(a) sin(a)\n    \n     \n   \n    for(float i=.1;i<1.5;i+=.001){\n    col += float(length(uv+vec2(\n    i*c(i*22.*s(t))*i*s(1.5*c(t*2.)*i+c(i))\n    ,\n    s(i*11.*s(t))*s(4.*s(t*2.5)*i+i+s(c(t)+t))\n    ))\n                                     \n                                     < 0.03*(.5+0.4*s(i*24.)));\n    }\n    fragColor = vec4(col,1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}