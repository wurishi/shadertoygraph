{"ver":"0.1","info":{"id":"3tSfzK","date":"1599285387","viewed":257,"name":"Automatic Saturator","username":"milesWaugh","description":"It looks terrible, but it can be used to view the hues of things. This project saturates the image, giving little to no saturation to the little saturation, loads of saturation to the mediumish saturations, and medium saturation to the largish saturations","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["saturation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0,uv).rgb;\n    float bright = (col.x+col.y+col.z)/3.0;\n    float deviance = dot(col-bright,col-bright)*10.0;\n    int maxiters = 0;\n    while(deviance<1.0&&maxiters<3){\n        col = (2.0*col-bright);\n        deviance = dot(col-bright,col-bright)*10.0;\n        maxiters++;\n    }\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}