{"ver":"0.1","info":{"id":"ftcyWX","date":"1660616985","viewed":71,"name":"Circle and Cardioid","username":"basilicon","description":"Was playing around with some math and made this.  I thought it looked pretty cool, so now it's public!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math","eye","circle","cardioid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float maxAngle = 0.781f;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.xx;\n    \n    float l = length(uv);\n    float time = l - 0.5 * iTime, c = l * sqrt(iTime);\n    \n    vec2 value = vec2(\n        uv.x * tan(round(time) + maxAngle + c),\n        uv.x * tan(round(time) - maxAngle - c)\n    );\n    \n    if (value.x > value.y) {\n        float temp = value.x;\n        value.x = value.y;\n        value.y = temp;\n    }\n    \n    vec3 col = 0.5 + 0.5*cos(iTime-round(time)+uv.xyx+vec3(0,2,4));\n    if (uv.y >= value[0] && uv.y <= value[1]) {\n        col = 1. - col;\n    } else {\n        col /= 3.;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}