{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const int maxIter = 22;\nfloat scale = 3.0;\n\nint mandel(vec2 c){\n\tvec2 z = vec2(0,0);\n    for(int i=0; i<maxIter;i++){\n    \tif( z.x*z.x + z.y*z.y >= 4.0)\n            return i;\n        z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n    }\n    return maxIter;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / (iResolution.xy);\n    float ratio = iResolution.x/iResolution.y;\n    \n    uv -= 0.5;\n    uv.x *= ratio;\n    uv *= scale;\n    \n    int m = mandel(uv);\n    \n    float color = 1.0 - float(m)/float(maxIter);\n \n    if(color == 0.0)\n    \tfragColor = vec4(0, 0, 0, 1.0);\n    else\n        fragColor = vec4(1.0-sqrt(color-1.0), 1.0-color*color*color, 1.0- color*color*color*color, 1.0);\n    \n  \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltBGRh","date":"1426786031","viewed":189,"name":"Simple Mandelbrot fractal","username":"matcap","description":"A simple version of mandelbrot","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""}}