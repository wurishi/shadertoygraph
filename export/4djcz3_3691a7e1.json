{"ver":"0.1","info":{"id":"4djcz3","date":"1493128364","viewed":129,"name":"The Shaded Sphere","username":"slerpy","description":"A shaded sphere with a terribly optimized raytracer.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","shadows"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.*fragCoord.xy-iResolution.xy) / iResolution.y;\n    \n    vec3 ray, cen = vec3(vec2(0.),2.);\n    bool col = false;\n    \n    for(ray=vec3(0.);ray.z<5.;ray+=.01*vec3(uv,1.)){\n        if(length(ray-cen)<1.){col = true;break;}\n    }\n    \n    if(col){\n        vec3 norm = normalize(ray-cen);\n        vec3 light = vec3(sin(iTime),sin(iTime)/3.,cos(iTime));\n        float brightness = dot(norm,light)/(length(norm)*length(light));\n        \n    \tfragColor = vec4( brightness );\n    }\n}\n","name":"Image","description":"","type":"image"}]}