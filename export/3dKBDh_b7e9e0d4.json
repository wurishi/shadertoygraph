{"ver":"0.1","info":{"id":"3dKBDh","date":"1607015832","viewed":64,"name":"Cubes?","username":"sebost1234","description":"Voronoi with maximum metric","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pointcount 5\n\nvec3 getPoint(int i)\n{\n\tswitch(i)\n    {\n    case 0:\n        return vec3(0,0,0);\n    case 1:\n        return vec3(cos(iTime*3.+1.),sin(iTime+1.),cos(iTime));\n    case 2:\n        return vec3(cos(iTime+2.),sin(iTime+2.),sin(iTime+2.));\n    case 3:\n        return vec3(cos(iTime+3.),sin(iTime+3.),cos(iTime+3.));\n    case 4:\n        return vec3(cos(iTime*2.+4.),sin(iTime+5.),cos(iTime-2.));\n    } \n}\n\nvec3 getPointColor(int i)\n{\n\tswitch(i)\n    {\n    case 0:\n        return vec3(1.0, 1.0, 0.0);\n    case 1:\n        return vec3(0.0, 1.0, 1.0);\n    case 2:\n        return vec3(1.0, 0.0, 0.0);\n    case 3:\n        return vec3(0.0, 1.0, 0.0);\n    case 4:\n        return vec3(0.0, 0.0, 1.0);\n    } \n}\n\n\nfloat dist(vec3 pos1, vec3 pos2)\n{\n    vec3 diff = abs(pos2-pos1);\n\t//return diff.x*diff.x+diff.y*diff.y+diff.z*diff.z;\n    //return min(min(diff.x, diff.y), diff.z);\n    return max(max(diff.x, diff.y), diff.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 uv = vec3((fragCoord/iResolution.xy-vec2(0.5,0.5))*4., sin(iTime));\n\n    int bestIndex = 0;\n    float shortestDist = dist(uv, getPoint(0));\n    for(int i = 1;i<pointcount;i++)\n    {\n    \tfloat dist = dist(uv, getPoint(i));\n        if(dist<shortestDist)\n        {\n        \tshortestDist = dist;\n            bestIndex = i;\n        }\n    }\n    vec3 pointColor = getPointColor(bestIndex);\n    vec3 color = min(pointColor/(shortestDist), pointColor);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}