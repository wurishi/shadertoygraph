{"ver":"0.1","info":{"id":"wltyzN","date":"1608619743","viewed":79,"name":"undula [mild spaz?] âš™","username":"HaleyHalcyon","description":"a","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 roll(uvec2 xy, uint t) {\n    const uint a = 1664525u;\n    const uint m = 1013904223u;\n\n    uint seed = 1818420u * xy.x + 78265178u * xy.y + 237698117u * t;\n    \n    uint x0 = (seed * a) % m;\n    uint x = (x0 * a) % m;\n    \n    vec3 xvec = vec3(x & 3u, (x >> 4u) & 3u, (x >> 8u) & 3u);\n    return xvec / 3.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float Time = fract(iTime / 4.);\n    uint time = uint(floor(iTime * 5.));\n   \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n    uv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float linDis = distance(uv, vec2(0));\n    float lolDis = 7. * log(linDis) - 3. * linDis;\n    float angle = atan(uv.x, uv.y) / 3.14159265358979 / 2.;\n    \n    vec3 x = vec3(0);\n    if (linDis < 0.15) {\n        x = vec3(abs(1. - 2. * fract(-angle + 0.1 * lolDis + 4. * Time)));\n    } else {\n        vec2 rt = vec2(256. + Time + lolDis + 0.5 * sin(0.4 * lolDis + Time * 2. * 3.14159265358979), 256. + mod(angle * 32.0 + 0.3 * sin((0.2 * lolDis+Time * 2.0) * 3.14159265358979 * 2.),32.));\n        if (distance(fract(rt), vec2(0.5)) < 0.5) {\n            x = roll(uvec2(rt), time);\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(x, 1);\n}","name":"Image","description":"","type":"image"}]}