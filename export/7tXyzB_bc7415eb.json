{"ver":"0.1","info":{"id":"7tXyzB","date":"1648230199","viewed":273,"name":"parallel grid warp","username":"Carandiru","description":"tides coming in.","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["magnetism","magnets"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    vec3 color = textureLod(iChannel0, uv, 0.0f).rgb;\n\n    fragColor = vec4(sqrt(color),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec2 line(in vec2 p, in float len, in vec2 uv, in vec2 inv_res)\n{    \n    vec2 pp = vec2(0);\n    \n    while (--len >= 0.0f) {\n    \n        vec2 ppi = mix(vec2(1.0f), vec2(0.0f), smoothstep(vec2(0.0f), vec2(0.0025f), abs(p.xy - uv.xy)));\n        pp += ppi;\n        uv -= inv_res;\n    }\n    \n    return pp;\n}\n\nvec4 noise(in vec2 uv, in float level) {\n\n    return(textureLod(iChannel0, uv, level));\n}\n\nvec3 diamond(in vec2 p, in float height, in vec2 uv, in vec2 inv_res)\n{    \n    vec2 pp0 = vec2(0), pp1 = vec2(0);\n    \n    float cheight = sqrt(height);\n\n    vec2 pp0_uv = uv;\n    vec2 pp1_uv = uv;\n    \n    while (--height >= 0.0f) {\n        \n        float level = 8.0f;\n        while (--level >= 1.0f) {\n        \n            vec4 nn = (noise(uv, level) * 2.0f - 1.0f) * length(inv_res) * 0.5f;\n            pp0 += line(p + nn.xy, cheight, pp0_uv += inv_res, inv_res);\n            pp1 += line(-p + nn.zw, cheight, pp1_uv -= inv_res, inv_res);\n            \n            \n        }\n    }\n        \n    vec3 lines;\n    lines.xyz = vec3(normalize(pp1 + pp0), dot(pp0, pp1));\n    \n    return lines;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = cartToIso(2.0f * (fragCoord/iResolution.xy) - 1.0f);\n    vec2 inv_res = 1.0f / cartToIso(iResolution.xy) * 100.0f;\n    vec3 color = vec3(0);\n    float t = iTime * 0.25f;\n    \n    color = diamond((vec2(t,0.0)), length(iResolution.xy) / 64.0, uv, inv_res);\n    \n    fragColor = vec4(normalize(color) * 0.5f + 0.5f,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord/iResolution.xy));\n\n    vec3 normal = textureLod(iChannel0, uv, 0.0f).rgb * 2.0f - 1.0f;\n    normal = normalize(normal);\n    \n    vec3 color = vec3(0);\n    \n    color.r += max(0.0f, dot(normal, normalize(vec3(1,0,0)))) - max(0.0f, dot(normal, normalize(vec3(-1,0,0))));\n    \n    color.r += 0.95f * max(0.0f, dot(normal, normalize(vec3(0,1,0)))) - max(0.0f, dot(normal, normalize(vec3(0,-1,0))));\n    \n    color.b += max(0.0f, dot(normal, normalize(vec3(0,0,1)))) - max(0.0f, dot(normal, normalize(vec3(0,0,-1))));\n    \n    color.b += textureLod(iChannel1, uv, 0.0f).b * 0.75f;\n    \n    \n    fragColor = vec4(color, 1.0f);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec2 cartToIso(in vec2 cart)\n{\n    return(vec2(cart.x - cart.y, (cart.x + cart.y) * 0.5f));\n}\n","name":"Common","description":"","type":"common"}]}