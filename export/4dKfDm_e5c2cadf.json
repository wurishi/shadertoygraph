{"ver":"0.1","info":{"id":"4dKfDm","date":"1529141373","viewed":575,"name":"old movie effect","username":"Uiharu","description":"Simulates the effects of old movies.\nIt looks like it just barely works, although the code may be a bit redundant.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","filter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define film mat3(0.393, 0.769, 0.189, 0.349, 0.686, 0.168, 0.272, 0.534, 0.131)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord/iResolution.xy;\n    //screen dither x：\n    vec2 nos_pos = pos - 0.5 + vec2(min(fract(iTime) - 0.02, 0.0), 0.0);\n    vec2 abs_n_p = vec2(abs(nos_pos));\n    //screen dither y：\n    vec2 P = pos + vec2(0.0, max(min(40.0 * fract(iTime) - 38.0, -40.0 * fract(iTime) + 40.0), 0.0));\n    vec3 Col = texture(iChannel0, P).rgb;\n    //border x：\n    if(abs_n_p.x > 0.40)\n    {\n        if(abs_n_p.x > 0.42 && abs_n_p.x < 0.48)\n        \tCol = vec3(0.7) * step(mod(10.0 * (nos_pos.y + fract(iTime)), 1.0), 0.8);\n    \telse\n            Col = vec3(0.0);\n    }\n    //border y：\n    if(abs_n_p.y > 0.40)\n \t   Col *= mix(0.0, 1.0, 5.0 - 10.0 * abs_n_p.y);\n    //dark spots：\n    Col *= 4.0 * min(0.5 * nos(8.0 * nos_pos) + 0.5, 0.25);\n    //screen scratch：\n    float coord = rand(vec2(floor(4.0 * iTime), pos.x));\n    if(abs(pos.x - coord) <= 0.001)\n        Col *= 0.5 + 0.5 * nos(vec2(20.0, 2.0) * pos);\n    //light spots：\n    if(fract(0.1 * iTime) > 0.9)\n    {\n        Col += step(nos(6.0 * (pos + vec2(floor(4.0 * fract(iTime)), 0.0))), -0.8);\n    \tif(fract(0.1 * iTime) > 0.98)\n           Col *= 1.0 + 0.25 * abs(sin(20.0 * fract(2.0 * iTime))); \n    }\n    fragColor = vec4(clamp(Col * film, 0.0, 1.0),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\nvec2 hash22(vec2 p)\n{\n\tp = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0 * fract(sin(p)*43758.5453123);\n}\nfloat nos(vec2 p)\n{\n\tconst float K1 = 0.366025404; // (sqrt(3)-1)/2;\n\tconst float K2 = 0.211324865; // (3-sqrt(3))/6;\n\tvec2 i = floor(p + (p.x + p.y) * K1);\n\tvec2 a = p - (i - (i.x + i.y) * K2);\n\tvec2 o = (a.x < a.y) ? vec2(0.0, 1.0) : vec2(1.0, 0.0);\n\tvec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0 * K2;\n\tvec3 h = max(0.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.0);\n\tvec3 n = h * h * h * h * vec3(dot(a, hash22(i)), dot(b, hash22(i + o)), dot(c, hash22(i + 1.0)));\n\treturn dot(vec3(70.0, 70.0, 70.0), n);\n}","name":"Common","description":"","type":"common"}]}