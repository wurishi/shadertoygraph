{"ver":"0.1","info":{"id":"tldfRB","date":"1613312925","viewed":152,"name":"molvania hearts","username":"psenough","description":"tunnel of love in the land untouched by modern dentistry","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distCustom(float x, float y)\n{\n    float n = -0.45 * abs(x) + y;\n    return log(\n        x * x + 1.8 * n * n\n    );\n}\n\nfloat fn(float x, float multi, float offset)\n{\n    return max(0.0, min(1.0, (sin(x * 3.14159265) + offset) * multi));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float PI = 3.14159265;\n    const float PI_3 = PI / 3.;\n    const float density = 1.5;\n    const float period = 2.;\n    float shift = sin(iTime)*0.15 + 0.15;\n    vec3 color1 = vec3(1.0, shift, shift);\n    vec3 color2 = vec3(1.0, 1.0, shift);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float dist = log(uv.x*uv.x+uv.y*uv.y) / 2.;\n    float distH = distCustom(uv.x, uv.y);\n    float angle = atan(uv.y, uv.x);\n    \n    float timeH = -iTime*0.5;\n\n    vec2 muv = vec2( cos(0.5-uv.x + sin(uv.x*uv.y + iTime)),\n                     sin(0.5+uv.y) + cos(0.5+uv.y) + 0.15*sin(sin(uv.x*20.0)*0.2));\n    vec3 col2 = floor(mod(muv.xxx + (sin(iTime*0.1)-muv.yxx)*0.8-iTime*0.25,0.15)*50.0);\n\n\n    // Time varying pixel color\n    float c1 = fn((distH + timeH) * density + 0.1, 1.1, -0.3) * col2.y;\n    float c2 = fn((distH + timeH) * density + 1.1, 1.5, -0.3) * col2.x;\n    //float c3 = fn(dist * 4.0 + angle / PI + iTime * speed + PI, 3.0, -0.8);\n    \n    \n    // Output to screen\n    fragColor = vec4(\n\t\tc1 * color1 + c2 * color2,\n        1.\n    );\n    \n}","name":"Image","description":"","type":"image"}]}