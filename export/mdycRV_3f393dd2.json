{"ver":"0.1","info":{"id":"mdycRV","date":"1696320360","viewed":21,"name":"Simple Triangle, moving","username":"iluvatar","description":"My first shader here :)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n    vec3 backgroundColor = 1.0 - col * .25;\n \n    vec2 triangle[3];\n    triangle[0] = vec2(.25, .25) + vec2(cos(iTime), sin(iTime)) * .025;\n    triangle[1] = vec2(.75, .25) + vec2(cos(iTime * .333), sin(iTime * .333)) * .025;\n    triangle[2] = vec2(.5, .75) + vec2(cos(-iTime * 5.0), sin(-iTime * 5.0)) * .0125;\n    \n    for(int i = 0; i < 3; i++)\n    {\n        int nextI = (i + 1) % 3;\n        vec2 inwards = vec2(triangle[i].y - triangle[nextI].y, triangle[nextI].x - triangle[i].x);\n        if (dot(uv - triangle[i], inwards) < 0.0)\n        {\n            fragColor = vec4(backgroundColor, 1.0);\n            return;\n        }\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}