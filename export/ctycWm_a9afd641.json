{"ver":"0.1","info":{"id":"ctycWm","date":"1703197147","viewed":41,"name":"no stunts","username":"nullivory","description":"fork from someone elses julia set shader!!\n","likes":0,"published":1,"flags":64,"usePreview":0,"tags":["fractal","julia","visualization","numbers","complex","maths"],"hasliked":0,"parentid":"fsG3Wy","parentname":"julia_set"},"renderpass":[{"inputs":[{"id":"4dt3z2","filepath":"https://soundcloud.com/nullivory/no-stunts-pt12/s-vz6aDoktKAB?si=dd7b23f1b85c4d93bfb1090718a1d7f7&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/nullivory/no-stunts-pt12/s-vz6aDoktKAB?si=dd7b23f1b85c4d93bfb1090718a1d7f7&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define PI 3.14159265359\n#define BPM 130.2\nfloat max_iter = 512.0;\nint AA = 3;\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n//#define iTime iGlobalTime\nvec2 kaleido(vec2 uv)\n{\n\tfloat th = atan(uv.y, uv.x);\n\tfloat r = pow(length(uv), 1.);\n\n    float p1 = sin(2. * PI);\n    float q = 2. * PI / ( 6. + 4. * p1);\n    th = abs(mod(th, q) - 0.5 * q);\n\treturn vec2(cos(th), sin(th)) * pow(r, 1.3 + 1.3 / (1.3 + sin(2. * PI))) * .1;\n}\n\nvec3 julia(vec2 p, vec2 comp, float depth, float kick, float spread, float clap, float bass,float hat)\n{\n    clap=-(clap*.2)+2.;\n    float th = iTime*2.*PI/180.;\n    mat2 rot = mat2(cos(th), -sin(th), sin(th), cos(th));\n    vec3 col = vec3(0.0);\n    vec2 z = (2.0*p - R.xy)/R.y;\n    z *= rot;\n    z *= pow(1.1, (-depth*100.)-bass);//(fract(-iTime*0.05+0.99));\n    z += vec2(0.560,-0.203);\n    vec2 c = comp; \n    float r = 20.;\n    float iter = 0.0;\n    vec3 jCol = vec3(0.0);\n    vec2 zP;\n    for (; iter<max_iter && dot(z,zP)<r*r; iter++)\n    {\n        zP = z;\n        z = vec2(z.x*z.x - z.y*z.y, clap*z.x*z.y) + c;\n    }\n    if (iter>max_iter) return vec3(0.0);\n    \n    float d = length(z);\n    float fIter = log2(log(d)/log(r));\n    col = vec3(smoothstep((kick-1.+iter/100.)*6.,(kick-1.+spread+iter/100.)*6.,fIter) -  smoothstep((kick-1.+spread+iter/100.)*6.,(kick-1.+(2.*spread+iter/100.))*6.,fIter),iter,z);\n    return col + vec3(hat/5.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //used instead of iTime for easy changing of start point\n    float time = iTime;\n    \n    //these go from 0.0 to 1.0 when their respective element comes in on the track\n    float bassStart = step(117., time);\n    float clapStart = step(73., time);\n    float hatStart = step(44., time);\n    \n    float depth = time/1000.; //how far zoomed in we are\n    float kick = 1.-fract((time/60.)*BPM); //pulse at speed of kick\n    float hat = max(0.,(.5-fract((time/60.)*BPM + .5))*2.)*hatStart;\n    float clap = 1.-fract((time/120.)*BPM)*clapStart; //pulse at speed of kick\n    float bass = bassStart*(sin(time*BPM*2.*PI/120.)+sin(time*BPM*2.*PI/40.)*max(0.0,sin(time*BPM*2.*PI/60.)));\n    float spread = (-cos(time*.01)+1.)*.4 + .1;\n    \n    // Normalized pixel coordinates (from 0 to 1)    \n    vec3 accCol = vec3(0.);\n    \n    //transform. time based changes become less impactful at deeper points\n    vec2 c3 = vec2(0.293,0.015);\n    vec2 pos = kaleido(fragCoord-vec2(iResolution.x*.5,iResolution.y*.5))/10.;\n    \n    for (int i=0; i<AA; i++)\n    for (int j=0; j<AA; j++)\n    {\n        vec2 dx = -0.5 + vec2(float(i), float(j))/float(AA);\n        accCol += julia((pos + dx), c3, depth, kick, spread, clap, bass+(bassStart*time/100.),hat);\n    }\n    accCol /= float(AA*AA);\n    \n    //vec3 col = vec3(accCol);\n    vec3 col = hsv2rgb(vec3(accCol.y/(10./depth), 1.0, accCol.x*2.-1.2));\n\n    // Output to screen\n    //col = pow(col, vec3(2.2));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}