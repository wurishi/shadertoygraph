{"ver":"0.1","info":{"id":"dddczj","date":"1695339448","viewed":43,"name":"Dancing Waves","username":"Domenic3000","description":"Waveforms Dancing","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fx","waveform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Wave(vec2 uv, float t, float m, float amplitude) {\n    // Generate noise-based waveform using multiple sin waves\n    float waveform = sin((uv.x + t) * 10.0*m) * (0.7*sin(t)*m)/m;\n    waveform -= sin((uv.x * 2.0 + t) * 15.0*m) * (0.28*cos(t)*m)/m;\n    waveform -= sin((uv.x * 3.0 + t) * 30.0*m) * (0.012*sin(t)*m)/m;\n    waveform -= sin((uv.x * 4.0 - t) * 5.0*m) * (0.19*cos(t)*m)/m;\n    \n    // Add some random noise\n    waveform += fract(sin(dot(uv, vec2(12.9898,82.467))) * 43758.5453) * 0.01 - 0.005;\n    \n    // Add some random noise\n    waveform += fract(sin(dot(uv, vec2(12.9898,78.233))) * 43758.5453) * 0.01 - 0.005;\n    waveform *= 4.*amplitude/m;\n    \n    \n    // Interpolate waveform at the edges towards 0.5\n    float edgeBlend = 0.02; // Adjust this for wider/narrower blending at the edges\n    waveform = mix(0.0, waveform, smoothstep(edgeBlend, 0.5 - edgeBlend, (1.-abs(uv.x-.5))-.5));\n    //waveform = clamp( 1., -1., waveform);\n    // Display the waveform\n    float lineWidth = 0.02;\n    waveform = smoothstep(lineWidth, 0., abs(uv.y - (0.5 + waveform)));\n    \n    return waveform;\n}\n\nvec3 getColor(float index) {\n    // Example: return different shades based on index\n    // You can customize this to get any color pattern you like\n    float r = fract(sin(index) * 457798.5453);\n    float g = fract(sin(index * 2.0) * 3152.23444);\n    float b = fract(sin(index * 3.0) * 4489758.5453);\n    return vec3(r, g, b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y *=1.5;\n    uv.y-=.2;\n    float t = iTime * 0.5;\n    float m = .5;\n    float waveform = 1.0;\n    vec3 coloredWave = vec3(0);\n    float dist;\n    \n    for(float i = 0.; i<6.; i++) {\n        waveform += Wave(uv, t, i*.2*sin(1004.+iTime/500000.), .05);\n        coloredWave += getColor(i);\n        dist = 0.2/(1.-abs((1.-waveform)));\n        dist = fract(dist);\n        \n        coloredWave *= vec3(dist);\n        \n    }   \n        \n    fragColor = vec4(vec3(coloredWave), 0.0);\n}\n","name":"Image","description":"","type":"image"}]}