{"ver":"0.1","info":{"id":"ll3Szs","date":"1571168062","viewed":240,"name":"CMYK Halftone Test","username":"tamasaur","description":"CMYK","likes":5,"published":1,"flags":2,"usePreview":0,"tags":["cmyk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\nconst float ANGLE_C = 15.;\nconst float ANGLE_M = 75.;\nconst float ANGLE_Y = 0.;\nconst float ANGLE_K = 45.;\nconst float INIT_FREQ = 1600.;\nconst float FREQ_SINE_FACTOR = 0.15;\nconst float FREQ_SINE_FREQ = 0.2;\nconst float ROTATION_SPEED = 0.6;\n\nconst int AA_SAMPLES = 4;\nconst float AA_WIDTH = 0.2;\n\nvec2 rotateVec(vec2 vect, float angle)\n{\n    float xr = vect.x*cos(angle) + vect.y*sin(angle);\n    float yr = vect.x*sin(angle) - vect.y*cos(angle);\n    return vec2(xr, yr);\n}\n\nvec4 rgb2cmyk(vec4 i)\n{\n   vec3 cmy = 1. - i.rgb;\n   float k;\n   k = min(cmy.x, min(cmy.y, cmy.z));\n   \n   if (k==1.) \n      cmy = vec3(0.);\n   else\n      cmy = (cmy - k)/(1. - k);\n   \n   return vec4(cmy, k);\n}\n\nfloat halftone(vec2 fragCoord, float im, float freq, float angle)\n{\n    vec2 uv = fragCoord.xy / iResolution.xx;\n    float oa = ROTATION_SPEED*iTime;\n    uv = rotateVec(uv, (angle + oa)*PI/180.);\n    float sp;\n    float v;\n    float vs = 0.;\n    for (int j=0;j<AA_SAMPLES ;j++)\n    {\n       float oy = float(j)*AA_WIDTH;\n       for (int i=0;i<AA_SAMPLES ;i++)\n       {\n          float ox = float(i)*AA_WIDTH;\n          sp=(1.+sin(freq*uv.x + ox)+1.+sin(freq*uv.y + oy))/4.;\n          vs+= im>sp?1.:0.;\n       }\n    }\n    vs/= float(AA_SAMPLES*AA_SAMPLES);\n    return vs;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float ff = 1. - FREQ_SINE_FACTOR*(1.+ sin(iTime*FREQ_SINE_FREQ));\n    float freq = INIT_FREQ*ff;\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 i = texture(iChannel0,uv);\n    vec4 ii = rgb2cmyk(i);\n    \n    float hc = halftone(fragCoord, ii.x, freq, ANGLE_C);\n    float hm = halftone(fragCoord, ii.y, freq, ANGLE_M);\n    float hy = halftone(fragCoord, ii.z, freq, ANGLE_Y);\n    float hk = halftone(fragCoord, ii.w, freq, ANGLE_K);\n    \n    fragColor = vec4(1. - (vec3(hc, hm, hy)*(1. - hk) + hk), 1.0);\n}","name":"Image","description":"","type":"image"}]}