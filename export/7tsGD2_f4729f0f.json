{"ver":"0.1","info":{"id":"7tsGD2","date":"1622919528","viewed":182,"name":"NEO","username":"EDragon","description":"Yo>\nyet another Maplestory shader\nmade one for the AWAKE update and now for the NEO update !\nthis one might seem a bit lazy but tbh, there isn't much aesthetic points that goes to that update ;;","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["maplestory","recreation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#define s smoothstep\n#define pi 3.1415\n#define res iResolution.xy\n#define t iTime\n\n\n/////////////// changeable variables ////////////////\n\nfloat num = 25.;\n#define zoom 1.1\n#define have_fun .0\n#define have_fun2 .0\n\n/////////////////////////////////////////////////////\n\n\nmat2 rot(float a){\n\tfloat s=sin(a),c=cos(a);\n\treturn mat2(c,-s,s,c);\n}\n\nfloat rand(float f){\n    return fract(sin(f*254.343)*532.327);\n}\n\nvec3 ember(vec2 uv, float brightness, float size, float num){\n    vec3 flare;\n    float d, b;\n    float a = res.x/res.y;\n    float yanker = sin(t*2.)*.1+.1;\n\n    for (float i; i<=num; i++){\n        b = (brightness*rand(i*362.123))*(sin(t*rand(i*135.13)*10.)*.5+.75);\n        d = b/length(uv-vec2(\n            sin(t*1.+i)*.1+mix(-.5*a, .5*a, rand(i+1.)),\n            fract(t*mix(.3, 1., rand(i))*.2+i*532.632)*1.5-.75)\n        );\n        flare += vec3(d)*\n        vec3(1., s(-.5+yanker, .5+yanker, uv.y)*.3+.2*rand(i*651.4134), .0);\n    }\n    return flare;\n}\n\nfloat N(vec2 uv, vec2 p){\n\tuv -= p;\n\tfloat lr = step(uv.x, .185)*step(-.185, uv.x);\n\tfloat tb = step(uv.y, .225)*step(-.225, uv.y);\n\tfloat tt = step(uv.x+uv.y-.025, .0)+step(.15, uv.x);\n\tfloat bt = step(.0, uv.x+uv.y+.025)+step(uv.x, -.15);\n\n\treturn clamp(lr*tb*tt*bt, .0, 1.);\n}\n\nfloat E(vec2 uv, vec2 p){\n\tuv -= p;\n\tfloat lr = step(uv.x, .14)*step(-.14, uv.x);\n\tfloat tb = step(uv.y, .225)*step(-.225, uv.y);\n\tfloat ts = 1.-step(.0225, uv.y)*step(uv.y, .185)*step(-.1, uv.x);\n\tfloat bs = 1.-step(-.185, uv.y)*step(uv.y, -.0225)*step(-.1, uv.x);\n\tfloat sculp = 1.-step(uv.x-uv.y,.1)*step(.06, uv.x-uv.y)*step(uv.y,-.1);\n\n\treturn lr*tb*ts*bs*sculp;\n}\n\nfloat O(vec2 uv, vec2 p){\n\tuv -= p;\n\tfloat d = s( .2275, .2225,length(uv))*s(.18, .185, length(uv));\n\tfloat sculp = 1.-step(uv.x-uv.y,.025)*step(-.025, uv.x-uv.y)*step(.0,uv.y);\n\n\treturn d*sculp;\n}\n\nuniform vec2 resolution;\nuniform float time;\n\nvoid mainImage(out vec4 color, in vec2 coord){\n\tvec2 uv = (coord.xy-.5*res)/res.y;\n\tvec2 uv2 = uv;\n\n\tuv2 *= \tzoom;\n\n    uv2 *= rot(have_fun2);\n\n\tvec3 col = vec3(.0);\n\n\tvec3 NEO_Shade = vec3(s(-.5, .3, uv2.y), s(-.2, .5, uv2.y)*.75, s(.0, -1., uv2.y));\n\n\tfloat n = clamp(N(uv2, vec2(-.5, .0)), .0, 1.);\n\tfloat e = E(uv2, vec2(.0));\n\tfloat o = O(uv2, vec2(.5, .0));\n\n\tcol += n*NEO_Shade;\n\tcol += e*NEO_Shade;\n\tcol += o*NEO_Shade;\n\n\tcol += s(.1*sin(t)+.25, 1.5, length(uv))*vec3(.5, .1, .0);\n\n    uv *= rot(have_fun);\n\n\t// holy shit I can layer stuff now????????????\n    col += clamp(ember(uv, .004, .1, num), .0, 1.-(n+e+o));\n\n\tcolor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}