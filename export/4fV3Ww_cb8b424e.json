{"ver":"0.1","info":{"id":"4fV3Ww","date":"1712848011","viewed":60,"name":"stickman dance basic","username":"jorge2017a2","description":"stickman dance basic","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","stickman","dancebasic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//stickman dance basic\n//---11-abril-2024\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(antialiasing(0.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nstruct TLinea\n{  vec2 A;\n   vec2 B;\n};\nTLinea arr[14];\n\n\nvec2 pt1_1[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.715),\nvec2(0.305,0.715),vec2(0.305,0.638),\nvec2(0.305,0.715),vec2(0.268,0.715),\nvec2(0.268,0.715),vec2(0.268,0.758),\nvec2(0.268,0.758),vec2(0.273,0.769),\nvec2(0.305,0.715),vec2(0.342,0.715),\nvec2(0.342,0.715),vec2(0.342,0.758),\nvec2(0.342,0.758),vec2(0.337,0.769),\nvec2(0.305,0.638),vec2(0.283,0.584),\nvec2(0.283,0.584),vec2(0.283,0.533),\nvec2(0.283,0.533),vec2(0.271,0.513),\nvec2(0.305,0.638),vec2(0.327,0.584),\nvec2(0.327,0.584),vec2(0.327,0.533),\nvec2(0.327,0.533),vec2(0.341,0.516)\n);\n\n\nvec2 pt1_2[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.715),\nvec2(0.305,0.715),vec2(0.305,0.638),\nvec2(0.305,0.715),vec2(0.277,0.682),\nvec2(0.277,0.682),vec2(0.277,0.725),\nvec2(0.277,0.725),vec2(0.281,0.736),\nvec2(0.305,0.715),vec2(0.333,0.748),\nvec2(0.333,0.748),vec2(0.333,0.791),\nvec2(0.333,0.791),vec2(0.329,0.803),\nvec2(0.305,0.638),vec2(0.283,0.584),\nvec2(0.283,0.584),vec2(0.283,0.533),\nvec2(0.283,0.533),vec2(0.271,0.513),\nvec2(0.305,0.638),vec2(0.327,0.584),\nvec2(0.327,0.584),vec2(0.327,0.533),\nvec2(0.327,0.533),vec2(0.341,0.516)\n);\n\nvec2 pt1_3[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.715),\nvec2(0.305,0.715),vec2(0.286,0.642),\nvec2(0.305,0.715),vec2(0.277,0.682),\nvec2(0.277,0.682),vec2(0.256,0.715),\nvec2(0.256,0.715),vec2(0.261,0.726),\nvec2(0.305,0.715),vec2(0.333,0.748),\nvec2(0.333,0.748),vec2(0.333,0.791),\nvec2(0.333,0.791),vec2(0.329,0.803),\nvec2(0.286,0.642),vec2(0.264,0.589),\nvec2(0.264,0.589),vec2(0.264,0.537),\nvec2(0.264,0.537),vec2(0.25,0.521),\nvec2(0.286,0.642),vec2(0.308,0.589),\nvec2(0.308,0.589),vec2(0.321,0.54),\nvec2(0.321,0.54),vec2(0.335,0.524)\n);\n\nvec2 pt1_4[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.715),\nvec2(0.305,0.715),vec2(0.286,0.642),\nvec2(0.305,0.715),vec2(0.277,0.682),\nvec2(0.277,0.682),vec2(0.245,0.682),\nvec2(0.245,0.682),vec2(0.241,0.693),\nvec2(0.305,0.715),vec2(0.329,0.754),\nvec2(0.329,0.754),vec2(0.329,0.798),\nvec2(0.329,0.798),vec2(0.324,0.809),\nvec2(0.286,0.642),vec2(0.264,0.589),\nvec2(0.264,0.589),vec2(0.264,0.537),\nvec2(0.264,0.537),vec2(0.25,0.521),\nvec2(0.286,0.642),vec2(0.308,0.589),\nvec2(0.308,0.589),vec2(0.321,0.54),\nvec2(0.321,0.54),vec2(0.335,0.524)\n);\n\nvec2 pt1_5[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.715),\nvec2(0.305,0.715),vec2(0.286,0.642),\nvec2(0.305,0.715),vec2(0.289,0.668),\nvec2(0.289,0.668),vec2(0.265,0.64),\nvec2(0.265,0.64),vec2(0.261,0.651),\nvec2(0.305,0.715),vec2(0.329,0.754),\nvec2(0.329,0.754),vec2(0.299,0.769),\nvec2(0.299,0.769),vec2(0.291,0.773),\nvec2(0.286,0.642),vec2(0.264,0.589),\nvec2(0.264,0.589),vec2(0.264,0.537),\nvec2(0.264,0.537),vec2(0.25,0.521),\nvec2(0.286,0.642),vec2(0.308,0.589),\nvec2(0.308,0.589),vec2(0.321,0.54),\nvec2(0.321,0.54),vec2(0.335,0.524)\n);\n\nvec2 pt1_6[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.715),\nvec2(0.305,0.715),vec2(0.286,0.642),\nvec2(0.305,0.715),vec2(0.277,0.682),\nvec2(0.277,0.682),vec2(0.245,0.682),\nvec2(0.245,0.682),vec2(0.241,0.693),\nvec2(0.305,0.715),vec2(0.337,0.74),\nvec2(0.337,0.74),vec2(0.321,0.778),\nvec2(0.321,0.778),vec2(0.313,0.783),\nvec2(0.286,0.642),vec2(0.264,0.589),\nvec2(0.264,0.589),vec2(0.264,0.537),\nvec2(0.264,0.537),vec2(0.25,0.521),\nvec2(0.286,0.642),vec2(0.308,0.589),\nvec2(0.308,0.589),vec2(0.321,0.54),\nvec2(0.321,0.54),vec2(0.335,0.524)\n);\n\nvec2 pt1_7[28]=vec2[](\nvec2(0.305,0.728),vec2(0.305,0.715),\nvec2(0.305,0.715),vec2(0.286,0.642),\nvec2(0.305,0.715),vec2(0.268,0.715),\nvec2(0.268,0.715),vec2(0.263,0.758),\nvec2(0.263,0.758),vec2(0.267,0.769),\nvec2(0.305,0.715),vec2(0.342,0.715),\nvec2(0.342,0.715),vec2(0.347,0.758),\nvec2(0.347,0.758),vec2(0.339,0.762),\nvec2(0.286,0.642),vec2(0.264,0.589),\nvec2(0.264,0.589),vec2(0.264,0.537),\nvec2(0.264,0.537),vec2(0.25,0.521),\nvec2(0.286,0.642),vec2(0.308,0.589),\nvec2(0.308,0.589),vec2(0.321,0.54),\nvec2(0.321,0.54),vec2(0.335,0.524)\n);\n\nvec2 pt1_8[28]=vec2[](\nvec2(0.286,0.732),vec2(0.286,0.719),\nvec2(0.286,0.719),vec2(0.286,0.642),\nvec2(0.286,0.719),vec2(0.249,0.719),\nvec2(0.249,0.719),vec2(0.244,0.762),\nvec2(0.244,0.762),vec2(0.248,0.773),\nvec2(0.286,0.719),vec2(0.323,0.719),\nvec2(0.323,0.719),vec2(0.328,0.762),\nvec2(0.328,0.762),vec2(0.32,0.767),\nvec2(0.286,0.642),vec2(0.264,0.589),\nvec2(0.264,0.589),vec2(0.264,0.537),\nvec2(0.264,0.537),vec2(0.25,0.521),\nvec2(0.286,0.642),vec2(0.308,0.589),\nvec2(0.308,0.589),vec2(0.321,0.54),\nvec2(0.321,0.54),vec2(0.335,0.524)\n);\n\nvec2 pt1_9[28]=vec2[](\nvec2(0.286,0.732),vec2(0.286,0.719),\nvec2(0.286,0.719),vec2(0.296,0.643),\nvec2(0.286,0.719),vec2(0.258,0.752),\nvec2(0.258,0.752),vec2(0.273,0.79),\nvec2(0.273,0.79),vec2(0.278,0.801),\nvec2(0.286,0.719),vec2(0.318,0.694),\nvec2(0.318,0.694),vec2(0.345,0.715),\nvec2(0.345,0.715),vec2(0.337,0.72),\nvec2(0.296,0.643),vec2(0.273,0.59),\nvec2(0.273,0.59),vec2(0.255,0.545),\nvec2(0.255,0.545),vec2(0.241,0.529),\nvec2(0.296,0.643),vec2(0.318,0.59),\nvec2(0.318,0.59),vec2(0.33,0.542),\nvec2(0.33,0.542),vec2(0.345,0.525)\n);\n\nvec2 pt1_10[28]=vec2[](\nvec2(0.286,0.732),vec2(0.286,0.719),\nvec2(0.286,0.719),vec2(0.296,0.643),\nvec2(0.286,0.719),vec2(0.268,0.764),\nvec2(0.268,0.764),vec2(0.283,0.802),\nvec2(0.283,0.802),vec2(0.292,0.802),\nvec2(0.286,0.719),vec2(0.299,0.671),\nvec2(0.299,0.671),vec2(0.326,0.693),\nvec2(0.326,0.693),vec2(0.331,0.704),\nvec2(0.296,0.643),vec2(0.273,0.59),\nvec2(0.273,0.59),vec2(0.255,0.545),\nvec2(0.255,0.545),vec2(0.241,0.529),\nvec2(0.296,0.643),vec2(0.318,0.59),\nvec2(0.318,0.59),vec2(0.33,0.542),\nvec2(0.33,0.542),vec2(0.345,0.525)\n);\n\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\nvec3 D2(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0)); return colOut; }\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat divf(float a, float b)\n{   //evita crash por 1/0.0 =Infinito=error, en compilar\n    if(b==0.0)\n    {b=0.00001;}\n    return a/b;\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( divf( dot(pa,ba),dot(ba,ba)), 0.0, 1.0 );\n    return length( pa - ba*h );\n    \n}\n\nfloat lineSegment(vec2 uv, vec2 p1, vec2 p2) \n{   float pixel = dFdx(uv.x);\n    float t = clamp(dot(uv - p1, normalize(p2 - p1)), 0., length(p2-p1));\n    vec2 pt = p1 + t * normalize(p2 - p1);\n    float v = length(uv - pt);\n    v = smoothstep(0.0, 30.0*pixel, v);\n    return v;\n}\n\n\nvec3 hacerCuerpo(vec2 p, vec3 colout,vec3 colin,  int poc, float rc)\n{\n    vec2 a, b;\n    int k,op;\n    k=0;\n    op=int(mod((iTime+float(poc))*4.0,11.0));\n    \n    for(int i=0;i<28;i++)\n    {\n        \n        if(op==0)\n        {  a=pt1_1[i];arr[k].A=a;b=pt1_1[i+1];arr[k].B=b;i++;k++;}\n        \n        \n        if(op==1)\n        {  a=pt1_2[i]; arr[k].A=a; b=pt1_2[i+1];  arr[k].B=b;i++; k++;}\n        \n        \n        if(op==2)\n        {  a=pt1_3[i]; arr[k].A=a; b=pt1_3[i+1];  arr[k].B=b; i++; k++;}\n        \n        \n        if(op==3)\n        {  a=pt1_4[i]; arr[k].A=a; b=pt1_4[i+1];  arr[k].B=b; i++; k++; }\n        \n        \n        if(op==4)\n        {  a=pt1_5[i]; arr[k].A=a; b=pt1_5[i+1];  arr[k].B=b; i++; k++; }\n       \n       \n        if(op==5)\n        {  a=pt1_6[i]; arr[k].A=a; b=pt1_6[i+1];  arr[k].B=b; i++; k++;}\n       \n       \n       \n        if(op==6)\n        {  a=pt1_7[i]; arr[k].A=a; b=pt1_7[i+1];  arr[k].B=b; i++; k++;}\n       \n       \n        if(op==7)\n        {  a=pt1_8[i]; arr[k].A=a; b=pt1_8[i+1];  arr[k].B=b; i++; k++; }\n       \n       \n        if(op==8)\n        {  a=pt1_9[i]; arr[k].A=a; b=pt1_9[i+1];  arr[k].B=b;i++; k++; }\n       \n        if(op==9)\n        {  a=pt1_10[i]; arr[k].A=a; b=pt1_10[i+1];  arr[k].B=b;i++; k++; }\n        \n        //regreasar datos\n        if(op==10)\n        {  a=pt1_9[i]; arr[k].A=a; b=pt1_9[i+1];  arr[k].B=b;i++; k++; }\n        \n        \n    }\n    \n \n   float d2= sdCircle( p-arr[0].A-vec2(0.0,0.035), rc );\n   colout=D2( colin, colout,abs(d2)-0.01);\n    \n    float dfin,d1;\n    dfin=9999.9;\n    bool blncol;\n    \n    blncol=false;\n    float dsum=0.0;\n   \n    for(int i=0;i<14;i++)\n    {\n        a=arr[i].A;\n        b=arr[i].B;\n        d1=sdSegment(p, a,b );\n        //d1=lineSegment(p, a,b );\n        dfin=min(dfin,d1);\n\n        \n         if(i==3)\n        {\n            colout=D2(vec3(1.0,1.0,0.0)+colin, colout,abs(d1)-0.01); }\n        else if(i==6)  //brazo der\n        {\n            colout=D2(vec3(0.0,1.0,0.0)+colin, colout,abs(d1)-0.01); }\n        else if(i==9) //rodilla izq\n        {\n            colout=D2(vec3(1.0,.0,1.0)+colin, colout,abs(d1)-0.01); }\n        else if(i==12) //rodilla der\n        {\n            colout=D2(vec3(0.0,1.0,1.0)+colin, colout,abs(d1)-0.01); }\n        else\n        {   colout=D2(colin, colout,abs(d1)-0.01); }\n          \n    }\n    \n   \n   return  colout; \n}\n\nvec3 suelo(vec2 p, vec3 colout)\n{\n    float fx=0.01*sin(p.x*20.0);\n    float d1=fx+1.15+p.y;\n    float d2=fx+1.10+p.y;\n    float d3=fx+1.05+p.y;\n    float d4=fx+1.00+p.y;\n    float d5=fx+0.95+p.y;\n    float d6=fx+0.95+p.y;    \n    d1=abs(d1)-1.7;\n    d2=abs(d2)-1.6;\n    d3=abs(d3)-1.5;\n    d4=abs(d4)-1.4;\n    d5=abs(d5)-1.3;\n    d6=abs(d6)-1.25;\n    \n    vec3 ct=colout;\n    colout=D2(vec3(0.0,1.0,0.0),colout,d1);\n    colout=D2(vec3(0.0,0.8,0.0),colout,d2);\n    colout=D2(vec3(0.0,0.7,0.0),colout,d3);\n    colout=D2(vec3(0.0,0.6,0.0),colout,d4);\n    colout=D2(vec3(0.0,0.5,0.0),colout,d5);\n    colout=D2(vec3(0.0,0.3,0.0),colout,d6);\n    \n    return colout;\n}\n\n\nvec3 lineah(vec2 p, vec3 colout)\n{   float d1;\n    d1=p.y-0.5;\n    d1=abs(d1)-0.001;\n    colout=D2(vec3(0.0),colout,d1);\n    return colout;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    uv-=vec2(0.15,-1.35);\n    float esc=0.56;\n    uv*=esc;\n    vec2 uv0=uv;\n    float t=iTime;\n    vec3 col=vec3(1.0); \n    \n    col = mix(vec3(0.5,0.6,0.0),vec3(0.0,0.2,1.0),pow(1.0-uv.y,2.0));\n    //https://www.shadertoy.com/view/MfyGW1\n    col*=1.0-texture(iChannel0,vec2(uv.x*0.5,0.05/uv.y-iTime*0.02)).r*pow(2.5-uv.y,2.0)*0.2;\n    \n    col=suelo(uv, col);\n    \n    //col= hacerCuerpo(uv-vec2(-1.0,0.0),col,vec3(0.5),0,0.015);\n    col= hacerCuerpo(uv-vec2(-0.3,0.0),col,vec3(1.0,0.0,0.0),0,0.015);\n    //col= hacerCuerpo(uv-vec2(0.5,0.0),col,vec3(0.7,0.5,0.0),0,0.015);\n    \n    fragColor = vec4(col,1.0);\n\n\n}","name":"Image","description":"","type":"image"}]}