{"ver":"0.1","info":{"id":"wsXcWn","date":"1584532207","viewed":135,"name":"Binary Digits","username":"spalmer","description":"simply draws the binary representation of a given number as ones and zeroes, for debugging.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["binary","debug"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// To the extent possible under law, the author has waived all copyright and related or neighboring rights to this work.\n// http://creativecommons.org/publicdomain/zero/1.0\n\nfloat size = 5. // radial glyph size of digits\n, thick = 1.; // stroke thickness\n\n// combined 0 and 1 glyph shape function is a \n// strangely parameterized non-uniform circle with \n// some possible space deletion at the axis, depending\n// on which digit; should just use a switch statement!\nfloat pBit(inout vec2 p, bool digit)\n{\n    float t = size - thick\n    , f = digit ? t : 0.\n    , e = t - f\n    , r = .5 + thick -\n        abs(length(max(vec2(0), abs(p - size) - vec2(0, f))) - e);                   \n    p.x -= 2.*(size+thick);\n    return clamp(r, 0., 1.);\n}\n\n// display uint as 32 binary digits\nfloat pBinary(inout vec2 p, uint n)\n{\n    float v = 0.;\n    for (int i = 0; i < 32; ++i)\n        v += pBit(p, (n & (1u<<(i-32))) != 0u); // works on chrome and angle\n    return v;\n}\n\nvoid mainImage(out vec4 o, vec2 p)\n{    \n    uint bits; // value to display\n    bits = ~0u / 7u; //613566756u; // YOUR VALUE HERE\n    // default is supposed to show 00100100100100100100100100100100â€¬\n\t\n    vec3 col = vec3(0);\n\tp -= vec2(24, iResolution.y * .49);\n    p /= max(1., iResolution.x/420.);\n    col += pBinary(p, bits);    \n    \n    col = pow(col, vec3(1.0/2.2)); // gamma\n    o = vec4(col, 1);\n}\n\n    //bits = uint(iMouse.x);\n    //bits = floatBitsToUint(float(uint(-1))+1.);\n    //bits = 0xaaaaaaaau; //0x55555555u; //1u; //0u; //~0u; //0xfu; // test values\n\n\n\n","name":"Image","description":"","type":"image"}]}