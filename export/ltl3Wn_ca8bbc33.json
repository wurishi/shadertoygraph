{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"/* this is my version of the Steam logo\n * no infringement intended :p\n *\n * CÃ©lestin Marot (yakoudbz)\n *\n *********************/\n\n// parameters (can be modified easily ! )\nconst float r0=0.5;   // radius of big circle\nconst float sr0=r0*0.6+0.06;\nconst float vsr0=r0*0.5;\nconst float L0=1.0;   // lenght of the crank\nconst float r1=0.33;   // radius of satelite\nconst float sr1=r1*0.6+0.06;\nconst float vsr1=r1*0.5;\nconst float L1=2.0;   // length of the rod\nconst float r2=0.33;   // radius of translating circle\nconst float sr2=r2*0.6+0.06;\nconst float vsr2=r2*0.5;\nconst vec2 c0=vec2(1.0,0.0); // coordinate of the big circle\nconst float zoom=0.5;\nfloat blur=8.0;      // blur = smooth edge\n\nvec2 pix; // the position of the current pixel\n\n// to draw concentrics circles (r=radius, sr=small_radius,vsr=very small radius)\nfloat circles(vec2 center, float r, float sr, float vsr){\n    float dist=distance(center,pix);\n\n    return smoothstep(dist-blur,dist,r) * smoothstep(sr-blur,sr,dist) + smoothstep(dist-blur,dist,vsr);\n}\n\n\n// to draw a triangle\n// got to pass vertex in the clockwise order, the diagonal must be bc for a rectangle\nfloat triangle(vec2 a, vec2 b, vec2 c){\n    vec2 v0=c-a;\n    vec2 v1=b-a;\n    vec2 p=pix-a;\n\n    float area=v0.x*v1.y - v0.y*v1.x;\n\n    float alpha = (v0.x*p.y - v0.y*p.x)/area;\n    float beta = (v1.y*p.x - v1.x*p.y)/area;\n    float gamma = 1.0 - alpha - beta;\n\n    return smoothstep(-2.0*blur,blur,alpha) * smoothstep(-2.0*blur,blur,beta) * step(0.0,gamma);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    blur/=iResolution.y;\n    pix=(2.0*fragCoord.xy-iResolution.xy)/(zoom*iResolution.y)-c0;\n    \n    float st=L0*sin(iTime);\n\tfloat ct=L0*cos(iTime);\n    \n    // main circle\n    float shade=circles(vec2(0.0,0.0),r0,sr0,vsr0);\n\n    // satelite circle\n    vec2 c1=vec2(ct,st);\n    shade+=circles(c1,r1,sr1,vsr1);\n\n    // translate circle\n    vec2 c2=vec2(ct-sqrt(L1*L1-st*st),0.0);\n    shade+=circles(c2,r2,sr2,vsr2);\n\n    vec2 diff=c1/L0; // is normalized that way\n    diff=vec2(-diff.y,diff.x);\n\n    shade+=2.0*triangle(-sr0*diff,sr0*diff,c1-sr1*diff) * step(r0,length(pix)) * step(r1,distance(pix,c1));\n    shade+=2.0*triangle(c1+sr1*diff,c1-sr1*diff,sr0*diff)* step(r0,length(pix)) * step(r1,distance(pix,c1));\n\n    // diff=r*||c2->c1||  (r is the radius of the interior disk c1 & c2 )\n    diff=(c1-c2)/L1;\n    \n    // we change c1 & c2's position just to make sure the blur won't go further than the circle\n    c1=c1-blur*diff;\n    c2=c2+blur*diff;\n\n    diff=vec2(-diff.y,diff.x); // vec perpendicular to c2->c1\n\n    shade+=triangle(c2-vsr2*diff,c2+vsr2*diff,c1-vsr1*diff);\n    shade+=triangle(c1+vsr1*diff,c1-vsr1*diff,c2+vsr2*diff);\n    \n    fragColor = vec4(shade,shade,shade, 1.0 );\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltl3Wn","date":"1421058735","viewed":823,"name":"Steam Logo","username":"yakoudbz","description":"fully parametrizable animated Steam logo\nEven if there already are a lot of animated Steam logo. I made this one all by myself","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["simple","fast","logo","animation","60","steam"],"hasliked":0,"parentid":"","parentname":""}}