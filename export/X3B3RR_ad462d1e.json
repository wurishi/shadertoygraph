{"ver":"0.1","info":{"id":"X3B3RR","date":"1708085595","viewed":50,"name":"Glitch test...","username":"karakure178","description":"Testing UV with glitch effects.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RATE 0.75\n#define PI 3.14159265358979323846\n\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453) * 2.0 - 1.0;\n}\n\nfloat offset(float blocks, vec2 uv) {\n  float shaderTime = iTime*RATE;\n  return rand(vec2(shaderTime, floor(uv.y * blocks)));\n}\n\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\n\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;    \n    vec2 st = fragCoord/iResolution.xy;\n    uv+= vec2(offset(64.0, uv) * 0.03,0.0); //事前に歪ませておくといい\n    \n    uv = tile(uv,30.);    \n\n\n    st = rotate2D(st, PI*0.25);\n\n    vec3 col = vec3( box( uv,vec2(0.7)) ); \n    fragColor = vec4(col,1.);\n\n}","name":"Image","description":"","type":"image"}]}