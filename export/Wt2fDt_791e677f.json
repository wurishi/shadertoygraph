{"ver":"0.1","info":{"id":"Wt2fDt","date":"1600171359","viewed":69,"name":"Mandelbrot Is Alive","username":"ShelveAndMind","description":"This shader changes the parameters on a mandelbrot set according to time, for a quite graphical result","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","color","moving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //Mandelbrot\n    uv = uv*4.0 - 2.0;\n    vec2 c = vec2(sin(iTime*.33)*.8, cos(iTime));\n    \n    vec3 col = vec3(0);\n    \n    bool mandel = true;\n    float i = 0.0;\n    float maxI = 30.0;\n    for (i=0.0; i<=maxI && mandel; i++) {\n        uv = vec2(uv.x*uv.x - uv.y*uv.y, uv.x*uv.y*2.0) + c;\n        mandel = uv.x*uv.x + uv.y*uv.y < 4.0;\n    }\n    if (!mandel) col = vec3(i/maxI, i/(maxI*maxI), 0.1);\n    else col = vec3(1, .8, .8);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}