{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nfloat distFunc(vec3 p){\n    return length(mod(p+vec3(0,0,mod(-iTime*19.,4.)),4.)-2.)-.4;\n}\n\nvec3 getNormal(vec3 p){\n\tfloat d=0.0001;\n\treturn normalize(vec3(\n\t\tdistFunc(p+vec3(  d, 0.0, 0.0))-distFunc(p+vec3( -d, 0.0, 0.0)),\n\t\tdistFunc(p+vec3(0.0,   d, 0.0))-distFunc(p+vec3(0.0,  -d, 0.0)),\n\t\tdistFunc(p+vec3(0.0, 0.0,   d))-distFunc(p+vec3(0.0, 0.0,  -d))\n\t));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p=(fragCoord.xy*2.-iResolution.xy)/iResolution.x;\n\tvec3 camP=vec3(0.,0.,1.);\n\tvec3 camC=vec3(sin(iTime*.7)*.3,0.,0.);\n\tvec3 camU=normalize(vec3(sin(iTime)*.1,1.,0.));\n\tvec3 camS=cross(normalize(camC-camP),camU);\n\tvec3 ray=normalize(camS*p.x+camU*p.y+(camC-camP));\n\t\n\tfloat dist=0.;\n\tfloat rayL=0.;\n\tvec3  rayP=camP;\n\tfor(int i=0;i<64;i++){\n\t\tdist=distFunc(rayP);\n\t\trayL+=dist;\n\t\trayP=camP+ray*rayL;\n\t}\n\t\n\tif(abs(dist)<0.001){\n\t\tfloat fragR=dot(-ray,getNormal(rayP));\n\t\tfloat fragG=.0;\n\t\tfloat fragB=dot(vec3(0,0,1),getNormal(rayP));\n\t\tfragColor=vec4(vec3(fragR,fragG,fragB)*10./rayL,1.);\n\t}else{\n\t\tfragColor=vec4(vec3(0.0), 1.0);\n\t}\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sXSWX","date":"1407133087","viewed":271,"name":"Sphere repetition","username":"FMS_Cat","description":"My first raymarching\nReference: http://wgld.org/d/glsl/g012.html","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","fractal"],"hasliked":0,"parentid":"","parentname":""}}