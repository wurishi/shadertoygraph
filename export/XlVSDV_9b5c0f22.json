{"ver":"0.1","info":{"id":"XlVSDV","date":"1485983325","viewed":629,"name":"Dithering Blur","username":"pineapplemachine","description":"Baby's second shader. Produces a dithered blur effect.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["blur","dither"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\n// More samples => effect becomes more intense (due to more samples taken)\nconst int samplecount = 128;\n// Higher sample radius => image becomes less distinct (due to samples being taken at a greater distance from the origin)\nconst float sampleradius = 0.0125;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    int samples = 1;\n    float offset = fragCoord.x + (fragCoord.y * iResolution.x);\n    for(int i = 0; i < samplecount; i++){\n        float lerp = float(samplecount) / float(i);\n        float angle = offset + lerp;\n        float radius = sampleradius * sin(lerp * PI);\n        vec2 samplefrom = vec2(uv.x + cos(angle) * radius, uv.y + sin(angle) * radius);\n        if(samplefrom.x >= 0.0 && samplefrom.x < 1.0 && samplefrom.y >= 0.0 && samplefrom.y < 1.0){\n        \tcolor += texture(iChannel0, samplefrom);\n            samples++;\n        }\n    }\n    float div = float(samples);\n\tfragColor = vec4(color.r / div, color.g / div, color.b / div, 1.0);\n}","name":"Image","description":"","type":"image"}]}