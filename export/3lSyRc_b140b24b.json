{"ver":"0.1","info":{"id":"3lSyRc","date":"1594913333","viewed":79,"name":"flow leaf","username":"inbisibler","description":"make leaf shape function","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["leaf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 circle(vec2 pos,float r,float time,vec3 col)\n{\n    vec2 center = vec2 (mod(time*0.1,3.)-1.5,sin(time)*0.1);\n    vec2 p = pos - center;\n    float th = atan(p.x,p.y)+0.1*sin(time);\n    float n1 = 7.,n2 = 3.;\n    float grade = 0.5;\n    float shape = r*abs(sin(n1/2.*th+3.14/2.))*(1.+1.*abs(cos(n1/2.*n2*th)))+r/3.;\n    shape = shape * (abs(cos(0.5*th))*grade+1.-grade);\n    return max(col,(1.+sign(length(p)-shape))/2.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.x;\n    vec2 pos = vec2 (mod(iTime*0.1,3.)-1.5,sin(iTime)*0.1);\n    \n    vec3 c1 = circle(uv,0.15,iTime,vec3(1.,0.,0.));\n    vec3 c2 = circle(uv,0.05,iTime+7.,vec3(1.,1.,0.));\n    vec3 c3 = circle(uv,0.1,iTime+14.,vec3(0.,1.,0.));\n    vec3 c4 = circle(uv,0.08,iTime+21.,vec3(1.,0.,1.));\n\n    // Output to screen\n    vec3 col = min(c4,min(c3,min(c2,c1)));\n    if (col == vec3(1.))\n    {\n    \tcol = vec3(0.8,1.,1.);\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}