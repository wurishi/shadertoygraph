{"ver":"0.1","info":{"id":"tdK3Dz","date":"1570035118","viewed":382,"name":"Basic Pixellating Shader","username":"Leasel","description":"This shaders makes any picture pixelly ;).\nSorry for my bad languages.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fast","pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Pixelator = 0.005; //float from 0 to 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    /*Remove*/ Pixelator = sin(iTime*0.3);\n    \n    float size = iResolution.x/(iResolution.x*(Pixelator)); \n    \n    vec2 uvBlocked = floor(uv/(1./size))/size;\n    uv = uvBlocked;\n    \n    vec4 col = vec4(0.);\n    \n    col = texture(iChannel0, uv);\n    //col.rb = uv;\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}