{"ver":"0.1","info":{"id":"cs2czD","date":"1687480019","viewed":54,"name":"kishimishu 11","username":"pablocieslik","description":"Ã˜","likes":3,"published":1,"flags":16,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float t){\n    vec3 a = vec3(-0.132, 0.258, 0.648);\n    vec3 b = vec3(1.713, -1.047, -0.002);\n    vec3 c = vec3(1.028, -3.142, 3.138);\n    vec3 d = vec3(2.007, 1.447, 3.417);\n\n    \n    return a+b*cos(6.28318*(c*t+d));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n   vec2 uv0=uv;\n   vec3 finalColor=vec3(0.0);\n  \n   for(float i = 0.0; i <3.0; i++){\n   uv = fract(uv*1.5)-0.5;\n   \n   float d = length(uv);\n   \n   vec3 col = palette(length(uv0)+i*.4+iTime*.4);\n   \n   d = sin(d*8. + iTime)/8.;;\n   d = abs(d);\n   \n   d = pow(0.02/d,2.0);;\n   \n   finalColor += col*d;\n   }\n   \n   fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}