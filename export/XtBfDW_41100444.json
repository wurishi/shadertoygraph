{"ver":"0.1","info":{"id":"XtBfDW","date":"1515710228","viewed":173,"name":"Voronoise Octaves","username":"tsuhre","description":"iq's voronoise function with octaves. u value shifted by time","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["noise","voronoise","ovtaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float octaves = 2.;\n\n// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// https://iquilezles.org/articles/voronoise\nvec3 hash3( vec2 p ) {\n    vec3 q = vec3( dot(p,vec2(127.1,311.7)),\n                   dot(p,vec2(269.5,183.3)),\n                   dot(p,vec2(419.2,371.9)) );\n    return abs(mod(sin(q)*43758.5453*(iTime+1000.)/50000., 2.) - 1.);\n}\n\nfloat iqnoise( in vec2 x, float u, float v ) {\n    \n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    float k = 1.0+63.0*pow(1.0-v,4.0);\n\n    float va = 0.0;\n    float wt = 0.0;\n    for (int j=-2; j<=2; j++) {\n        for (int i=-2; i<=2; i++) {\n            vec2 g = vec2(float(i),float(j));\n            vec3 o = hash3(p + g)*vec3(u,u,1.0);\n            vec2 r = g - f + o.xy;\n            float d = dot(r,r);\n            float ww = pow( 1.0-smoothstep(0.0,1.414,sqrt(d)), k );\n            va += o.z*ww;\n            wt += ww;\n        }\n    }\n\n    return va/wt;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    vec3 color = vec3(0.0);\n\n    st *= 10.;\n    st.y *= 1.;\n    float n = 0.;\n    float k = 0.;\n    \n    for(float i = 0.; i < octaves; i++){\n        \n    \tk += iqnoise((st + sin(iTime)/2.)*pow(2., i), sin(iTime)*0.5 + 0.5, .2)/pow(2., i);\n        n += iqnoise((st + sin(iTime)/2.)*pow(2., i), sin(iTime)*0.5 + 0.5, 1.)/pow(2., i);\n        //k += iqnoise(st*pow(2., i), 1., .2)/pow(2., i);\n        //n += iqnoise(st*pow(2., i), 1., 1.)/pow(2., i);\n    }\n    n /= 2.;\n    k /= 2.;\n    \n    k *= pow(n, 2.);\n    \n    fragColor = vec4(vec3(n, k, .0),1.0);\n}","name":"Image","description":"","type":"image"}]}