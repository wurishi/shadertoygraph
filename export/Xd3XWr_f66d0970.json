{"ver":"0.1","info":{"id":"Xd3XWr","date":"1458602832","viewed":545,"name":"Endless frames with custom size","username":"anastadunbar","description":"For the next upcoming shader. \nWho can do zooming into a rotated, skewed off-centered rectangle?","likes":16,"published":1,"flags":0,"usePreview":1,"tags":["2d","endless","droste","infinite","power"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool DROSTE_MODE = false;\nfloat logn(float a,float b) { return log(a)/log(b); }\n#define clamps(x) clamp(x,0.,1.)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord.xy/iResolution.xy)-.5;\n    uv.x /= iResolution.y/iResolution.x;\n    float time = iTime*.5;\n    float fracttime = fract(time);\n    float in_scale = .1; //How deep?\n    float d; vec2 zuv;\n    if (DROSTE_MODE) {\n\t\tfloat PI = 3.141592653589793238462;\n    \tfloat atans = (atan(uv.x,uv.y)+PI)/(PI*2.);\n    \tzuv = uv*pow(in_scale,fracttime+atans); //Zooming\n        d = length(zuv)*2.; //Euclidean distance\n    } else {\n        zuv = uv*pow(in_scale,fracttime); //Zooming\n    \td = (max(abs(zuv.x),abs(zuv.y))*2.); //Square dist\n    }\n    float id = floor(logn(d,in_scale));\n    vec2 uv2 = (zuv/pow(in_scale,id))+.5;\n    \n    fragColor = vec4(texture(iChannel0,uv2).rgb,1.);\n}\n\n//in_scale = 0.999 is same as ((uv/d)+1.)/2.","name":"Image","description":"","type":"image"}]}