{"ver":"0.1","info":{"id":"mdsGzr","date":"1665601421","viewed":318,"name":"Simple noisy bilateral filter","username":"Donkey","description":"Hacked a bilateral filter from a noisy gaussian.  Optional contrast enhancement.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","blur","post","gaussianbilateral"],"hasliked":0,"parentid":"NlGBWd","parentname":"Blur: Gaussian noise"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":3,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#if 1\nfloat nrand( vec2 n ) {\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453); }\nvec2 nrand2( vec2 n ) { return vec2(nrand(n), nrand(n + 1.2345)); }\n#else\nfloat nrand( vec2 n ) {\n    return texelFetch( iChannel3, (ivec2(gl_FragCoord.xy)+ivec2(vec2(81,90)*(7.0*iTime + n)))%textureSize(iChannel3,0).xy, 0 ).r;\n }\nvec2 nrand2( vec2 n ) {\n    return texelFetch( iChannel3, (ivec2(gl_FragCoord.xy)+ivec2(vec2(81,90)*(7.0*iTime + n)))%textureSize(iChannel3,0).xy, 0 ).bg;\n}\n#endif\n\n\nvec2 pdf(vec2 x) {\n#if 0\n    // pdf for s=0.1667: `sum(uniform(-.5,.5, 3)/3)`\n    return 2.39365*exp(-18. * x * x);\n#else\n    // pdf for s=0.144: `sum(uniform(-.5,.5, 4)/4)`\n    return 2.77043 * exp(-24.1126 * x * x);\n#endif\n}\n\n// Simple sRGB->Y\nfloat srgb_to_y(in vec3 colour)\n{\n    return dot(vec3(0.2126, 0.7152, 0.0722), colour);\n}\n\n// Simple polynomial weighting functions.\nfloat linear_weight(in float ref, in float val, in float threshold)\n{   \n    float dist = 1.0 - (abs(ref - val) / threshold);\n    \n    return max(dist, 0.0);\n}\n\nfloat quadratic_weight(in float ref, in float val, in float threshold)\n{\n    float lw = linear_weight(ref, val, threshold);\n    return lw * lw;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.y = 1.0-uv.y;\n   \n    float max_siz;\n    if ( iMouse.z > 0.5 )\n\t\tmax_siz = 32.0 * (1.0-iMouse.x / iResolution.x); // * (0.5+0.5*sin(iTime));\n    else\n        max_siz = 32.0 * (0.5+0.5*sin(2.0*uv.x + iTime));\n\n    const int NUM_TAPS = 64;\n\n    // reference value at centre of filter.\n    vec4 ref = textureLod( iChannel0, uv, 0.0 );\n    float ref_intensity = srgb_to_y(ref.xyz);\n\n\n    {\n        vec4 sum = vec4(0);\n        float sum_weights = 0.0;\n        \n        for (int i=0; i < NUM_TAPS; i++)\n        {\n            vec4 seed = vec4(1.2, 4.5, 6.7, 8.9) + fract(iTime) + float(i);\n            vec2 ofs = (nrand2(uv + seed.xy)\n                      + nrand2(uv + seed.yz)\n                      + nrand2(uv + seed.zw)\n                      + nrand2(uv + seed.wx)) * 0.25 - 0.5;\n\n            vec2 texcoord = uv + max_siz * ofs / iResolution.xy;\n            \n            // point sample and intensity.\n            vec4 spl = textureLod(iChannel0, texcoord, 0.0);\n            float spl_intensity = srgb_to_y(spl.xyz);\n            \n            // Weight depends on sample distance from reference intensity.\n            const float THRESHOLD = 0.4;\n            float weight = quadratic_weight(ref_intensity, spl_intensity, THRESHOLD);\n            \n            // accumulate\n            sum+= spl * weight;\n            sum_weights+= weight;\n        }\n\n        vec4 filtered = (sum_weights > 0.0)?sum / sum_weights:ref;\n        \n//#define SHOW_ENHANCED // uncomment for contrast enhancement.\n\n#ifdef SHOW_ENHANCED\n        const float ENHANCE = 3.0;\n\nvec4 detail = ref - filtered;\n        \n        fragColor = filtered + (detail * ENHANCE);\n#else\n        fragColor = filtered;\n#endif\n    }    \n}\n\n","name":"Image","description":"","type":"image"}]}