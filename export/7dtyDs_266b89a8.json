{"ver":"0.1","info":{"id":"7dtyDs","date":"1654276544","viewed":168,"name":"Fork fire","username":"Godlander","description":"pixelated","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise","fire","cineshader"],"hasliked":0,"parentid":"3tcBzH","parentname":"Perlin noise fire shader"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define resolution 64.\n#define speed 1.\n#define turbulence 1.\n\nfloat rand(vec2 co) {return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);}\nfloat hermite(float t) {return t * t * (3.0 - 2.0 * t);}\nfloat noise(vec2 co, float frequency) {\n  vec2 v = vec2(co.x * frequency, co.y * frequency);\n  float ix1 = floor(v.x);\n  float iy1 = floor(v.y);\n  float ix2 = floor(v.x + 1.0);\n  float iy2 = floor(v.y + 1.0);\n  float fx = hermite(fract(v.x));\n  float fy = hermite(fract(v.y));\n  float fade1 = mix(rand(vec2(ix1, iy1)), rand(vec2(ix2, iy1)), fx);\n  float fade2 = mix(rand(vec2(ix1, iy2)), rand(vec2(ix2, iy2)), fx);\n  return mix(fade1, fade2, fy);\n}\nfloat pnoise(vec2 co, float freq, int steps, float persistence) {\n  float value = 0.0;\n  float ampl = 1.0;\n  float sum = 0.0;\n  for(int i=0 ; i<steps ; i++) {\n    sum += ampl;\n    value += noise(co, freq) * ampl;\n    freq *= 2.0;\n    ampl *= persistence;\n  }\n  return value / sum;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    \n    vec2 pos = uv;\n    pos = floor(pos*resolution)/resolution;\n    float gradient = -pos.y - pos.x;\n    \n    pos -= vec2(0.2, 0.3)*iTime*speed;\n    \n    vec4 c1 = vec4(1.2, 0.8, 0.1, 0.25);\n    vec4 c4 = vec4(1.0, 0.0, 0.15, 0.0625);\n    vec4 c2 = mix(c1, c4, 0.33);\n    vec4 c3 = mix(c1, c4, 0.66);\n\n    float noiseTexel = pnoise(pos, 10.0, 5, 0.5)*turbulence;\n    \n    float t1 = round(smoothstep(-3.0, noiseTexel, gradient));\n    float t2 = round(smoothstep(-2.5, noiseTexel, gradient));\n    float t3 = round(smoothstep(-2.0, noiseTexel, gradient));\n    float t4 = round(smoothstep(-1.5, noiseTexel, gradient));\n    \n    vec4 color = mix(vec4(0.), c4, t1);\n    color = mix(color, c3, t2);\n    color = mix(color, c2, t3);\n    color = mix(color, c1, t4);\n\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}