{"ver":"0.1","info":{"id":"NscyR4","date":"1653043920","viewed":66,"name":"Steiner Ellipse","username":"jt","description":"Steiner Ellipse: unique ellipse outside / inside triangle.\n[url]https://mathworld.wolfram.com/SteinerEllipse.html[/url]\n[url]https://en.wikipedia.org/wiki/Steiner_ellipse[/url]\n[url]https://www.cut-the-knot.org/triangle/SteinerCircumellipse.shtml[/url]","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["triangle","barycentric","ellipse","in","steiner","steinerellipse","circum"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/NscyR4\n// Implementation of a Steiner Ellipse (in barycentric coordinates) - 2022 by Jakob Thomsen\n// See e.g. https://www.cut-the-knot.org/triangle/SteinerCircumellipse.shtml\n// and https://mathworld.wolfram.com/SteinerEllipse.html\n\n// tags: steiner, ellipse, steinerellipse, triangle, circum, in, barycentric\n\nvec3 Barycentric(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n    float d = (b.y - c.y) * (a.x - c.x) + (c.x - b.x) * (a.y - c.y);\n    float alpha = ((b.y - c.y) * (p.x - c.x)+(c.x - b.x) * (p.y - c.y)) / d;\n    float beta = ((c.y - a.y) * (p.x - c.x) + (a.x - c.x) * (p.y - c.y)) / d;\n    float gamma = 1.0 - alpha - beta;\n    return vec3(alpha, beta, gamma);\n}\n\nbool Triangle(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n    return all(greaterThan(Barycentric(a, b, c, p), vec3(0)));\n}\n\n// https://en.wikipedia.org/wiki/Steiner_ellipse\nbool SteinerCircumEllipse(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n    vec3 q = Barycentric(a, b, c, p);\n    float Q = q.x * q.y + q.y * q.z + q.z * q.x;\n   \n    return Q < 0.0;\n}\n\n// \"a Steiner inellipse of a triangle ABC is a scaled Steiner ellipse (factor 1/2, center is centroid)\" (https://en.wikipedia.org/wiki/Steiner_inellipse)\nbool SteinerInEllipse(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n    vec2 s = (a + b + c) / 3.0;\n    a = (a - s) / 2.0 + s;\n    b = (b - s) / 2.0 + s;\n    c = (c - s) / 2.0 + s;\n    return SteinerCircumEllipse(a, b, c, p);\n}\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    I /= iResolution.xy;\n\n    float t = iTime;\n    vec2 a = vec2(0.2 + 0.1 * cos(t),0.2 + 0.1 * sin(t));\n    vec2 b = vec2(0.8 + 0.1 * sin(t),0.2 + 0.1 * cos(t));\n    vec2 c = vec2(0.5 - 0.1 * cos(t),0.8 + 0.1 * sin(t));\n\n    O = vec4(Triangle(a, b, c, I));\n    O += vec4(SteinerCircumEllipse(a, b, c, I));\n    O *= vec4(SteinerInEllipse(a, b, c, I));\n}\n","name":"Image","description":"","type":"image"}]}