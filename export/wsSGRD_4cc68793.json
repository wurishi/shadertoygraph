{"ver":"0.1","info":{"id":"wsSGRD","date":"1548260302","viewed":616,"name":"Point torus lights","username":"FreeFull","description":"A sequel to lights on a cone: Lights on a torus","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["2d","torus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Tweak N and TWISTS to see various patterns\n#define N 300.0\n#define TWISTS 106.0\n\nconst float tau = atan(1.0)*8.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord - iResolution.xy) / iResolution.y * 1.2;\n    \n    vec3 col = vec3(0);\n    for(int i = 0; i < int(N); i++) {\n        float ii = tau * float(i) / N;\n        vec3 pos = vec3(\n            sin(ii + iTime/TWISTS),\n            cos(ii + iTime/TWISTS),\n            cos(ii*TWISTS + iTime) + 1.5\n        );\n        pos.xy += pos.xy*sin(ii*TWISTS + iTime)/5.0;\n        col[i%3] += smoothstep(0.0, 0.5, pos.z*0.002/length(uv-pos.xy));\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}