{"ver":"0.1","info":{"id":"dlBGRy","date":"1673465322","viewed":346,"name":"Antipod - MAGFest #05","username":"Flopine","description":"One of the piece I made for ThronoCrigger's set at MAGFest 2023! ","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","animation","isometric","hexagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n#define hr vec2(1., sqrt(3.))\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define noise(u) textureLod(iChannel0, u, 0.).x\n\n#define od(p,d) (dot(p,normalize(sign(p)))-d)\n#define box(p,c) length(max(abs(p)-c, 0.))\n\n#define BPM (170./60.)\n#define speed BPM*2.\n#define palette(t,c,d) (vec3(.5)+vec3(.5)*cos(TAU*(c*t+d)))\n#define anim(u,s) sin(length(atan(u.x, u.y)+iTime*speed*s)-length(u))\n\nstruct obj\n{\n    float d;\n    vec3 col;\n};\n\n\nobj minobj(obj a, obj b)\n{\n    if (a.d<b.d) return a;\n    else return b;\n}\n\n// from iq\n// https://iquilezles.org/articles/distfunctions/\nfloat hprism (vec3 p, vec2 h)\n{\n    const vec3 k = vec3(-0.8660254, 0.5, 0.57735);\n    p = abs(p);\n    p.xy -= 2.0*min(dot(k.xy, p.xy), 0.0)*k.xy;\n    vec2 d = vec2(\n       length(p.xy-vec2(clamp(p.x,-k.z*h.x,k.z*h.x), h.x))*sign(p.y-h.x),\n       p.z-h.y );\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nvec4 hgrid (vec2 uv)\n{\n    vec2 ga=mod(uv,hr)-hr*.5, gb=mod(uv-hr*.5, hr)-hr*.5,\n    guv=dot(ga,ga)<dot(gb,gb)?ga:gb,\n    gid = uv-guv;\n    \n    return vec4(guv, gid);\n}\n\nobj SDF (vec3 p)\n{\n    p.yz *= rot(-atan(1./sqrt(2.)));\n    p.xz *= rot(PI/4.);\n    \n    vec4 hg = hgrid(p.xz),\n    hgo = hgrid(p.xz-hr.yx*.33);\n    vec2 ohgoid = hgo.zw+.001;\n    float size = mix(.05, .18, anim(ohgoid, -1.)); \n    float p1 = mix(box(vec3(hgo.x, p.y, hgo.y), vec3(size)), od(vec3(hgo.x, p.y, hgo.y), size), .5);\n    \n    obj o1 = obj(p1,  vec3(1.));\n    \n    vec2 hid = hg.zw,\n    ohid = hid+.001,\n    pxz = hg.xy;   \n    float n = noise(hid*.24), \n    \n    r=mix(.1, .3 ,anim(ohid, 1.)), h=.4,\n    d = hprism(vec3(pxz, p.y), vec2(r, h)),\n    ogd1 = abs(abs(abs(d)-.05)-.025)-.0025,\n    ogd2 = abs((abs(d)-.05))-.015,    \n    ogd = (n < .5) ? ogd1 : ogd2;\n    d = max(abs(p.y)-.1, ogd);\n\n    obj o2 = obj( d, palette(length(hid), vec3(.1),vec3(.7, .4, .25)) );\n    \n    return minobj(o1,o2); \n}\n\nvec3 gn (vec3 p, float e)\n{\n    vec2 eps = vec2(e, 0.);\n    return normalize(SDF(p).d-vec3(SDF(p-eps.xyy).d, SDF(p-eps.yxy).d, SDF(p-eps.yyx).d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(uv*3., -20.), rd=vec3(0.,0.,1.),p=ro,\n    col=vec3(0.01), l=normalize(vec3(.1, .5, -1.));\n    \n    bool hit=false; obj O;\n    \n    for (float i=0.; i<100.; i++)\n    {\n        O = SDF(p);\n        if (O.d<.01)\n        {\n            hit = true; break;\n        }\n        p += O.d*rd*.5;\n    }\n    \n    if (hit)\n    {\n        vec3 n = gn(p,1e-3);\n        float li = max(dot(n,l), 0.);\n        col = O.col*li;\n    }\n    \n    fragColor = vec4(sqrt(col), 1.0);\n}","name":"Image","description":"","type":"image"}]}