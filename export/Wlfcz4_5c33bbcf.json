{"ver":"0.1","info":{"id":"Wlfcz4","date":"1591510760","viewed":127,"name":"Harmonic Color Picker (WIP)","username":"julianlumia","description":"I tried to figure out how to match color aesthetically according to color relationships some time ago, I tried to implement the algorithm into shader code so here go the first few steps:)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["colorpicker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//there are still some flaws in the system here and there.. but so far so good;)\n\n// set COMPILMENTARYCOLORS to 0 to turn of the complimentary relationship\n#define COMPILMENTARYCOLORS 0\n \n//color saturation amound\n#define saturation 1.\n\n//sep is this is the the harmonic seperation value of the 2nd and 3rd color in relation to the the 1st one (most left)\n//ex: sep = 0. is the comlimentary color and x=0.35 would form a triangular relation ship on the color spectrum)\n#define sep .35\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,0.0,1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n//mapping function from bigwings\nfloat map(float a, float b, float c, float d, float t) {\n\treturn ((t-a)/(b-a))*(d-c)+c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n float iTime = iTime * .6+3.;\n vec2 uv = fragCoord.xy / iResolution.xy;\n vec2 m = iMouse.xy/iResolution.xy;\n vec4 col5;\n vec2 uv2 = uv;\n \n vec3 color = vec3(0.0);\n    \n if( m.x== 0.) m.y =1.; \n else if(  m.x > 0.0 && m.x < 1. && m.y > .0)\n {\n  m.y =abs(m.y-0.5)*1.+0.;\n }\n \n    \n float h = fract(m.x);\n float s = m.y*saturation;\n float b = abs(m.y)*1.;\n\n vec4 fout;\n float uvy = .5;   \n vec3 col;\n vec3 col2;\n vec3 col3;\n col = vec3(  hsb2rgb(vec3(h,s,b)));  \n// col *= saturation;\n\n if(col.x > col.y && col.x > col.z){\n  col2= vec3(col.x-sep,col.y+sep,col.z);  \n   if(COMPILMENTARYCOLORS == 1)\n    {\n     col2 = vec3(map(0.,1.,1.,0.,col2.x),map(0.,1.,1.,0.,col2.y),map(0.,1.,1.,0.,col2.z));\n    }\n }\n  \n if(col.x > col.y && col.x > col.z){  \n  col3= vec3(col.x-sep,col.y,col.z+sep);    \n   if(COMPILMENTARYCOLORS == 1)\n    {\n     col3 = vec3(map(0.,1.,1.,0.,col3.x),map(0.,1.,1.,0.,col3.y),map(0.,1.,1.,0.,col3.z));\n    }\n }\n    \n if(col.y > col.x && col.y > col.z){\n  col2= vec3(col.x+sep,col.y-sep,col.z);  \n  if(COMPILMENTARYCOLORS == 1)\n   {\n    col2 = vec3(map(0.,1.,1.,0.,col2.x),map(0.,1.,1.,0.,col2.y),map(0.,1.,1.,0.,col2.z));\n   }  \n}\n    \n if(col.y > col.x && col.y > col.z){\n  col3= vec3(col.x,col.y-sep,col.z+sep);    \n  if(COMPILMENTARYCOLORS == 1)\n   {\n    col3 = vec3(map(0.,1.,1.,0.,col3.x),map(0.,1.,1.,0.,col3.y),map(0.,1.,1.,0.,col3.z));\n   }\n }    \n    \n if(col.z > col.x && col.z > col.y){\n  col2= vec3(col.x,col.y+sep,col.z-sep);\n  if(COMPILMENTARYCOLORS == 1)\n   {\n    col2 = vec3(map(0.,1.,1.,0.,col2.x),map(0.,1.,1.,0.,col2.y),map(0.,1.,1.,0.,col2.z));\n   }\n }\n    \n if(col.z > col.x && col.z > col.y){\n  col3= vec3(col.x+sep,col.y,col.z-sep);   \n  if(COMPILMENTARYCOLORS == 1)\n   {\n    col3 = vec3(map(0.,1.,1.,0.,col3.x),map(0.,1.,1.,0.,col3.y),map(0.,1.,1.,0.,col3.z));        \n   }\n }  \n    \n if( uv.x < 0.33 && uv.y < uvy )\n {\n  fout = vec4(col,1.);   \n }\n \n else if(  uv.x > 0.33 && uv.x < 0.66 && uv.y < uvy)\n {\n  fout = vec4(col2,1.0);   \n } \n    \n else if(  uv.x > 0.66 && uv.x < 1. && uv.y < uvy)\n {\n  fout = vec4(col3,1.0);\n }\n    \n //color pallete   \n else if(  uv.x > 0. && uv.x < 1. && uv.y < 1.)\n {\n  fout.xyz = hsb2rgb(vec3((uv.x)*1.,(uv.y)*.8-0.0 ,abs(uv.y)*1.-.5))*2.;     \n }\n\n if(iMouse.x > 0.0 && uv.y >0.5)\n \n fout = max(fout,vec4(step(length(iMouse.xy - fragCoord),5.))*1.0);   \n\n fragColor = vec4(fout);\n}","name":"Image","description":"","type":"image"}]}