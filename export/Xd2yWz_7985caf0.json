{"ver":"0.1","info":{"id":"Xd2yWz","date":"1493830935","viewed":694,"name":"Cross hatch","username":"clumsyrthanu","description":"A cross hatch shading effect","likes":10,"published":1,"flags":0,"usePreview":1,"tags":["2d","post","shading","crosshatch","pencil","processing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float timeRandom()\n{\n    float f = fract(iTime);\n    return texture(iChannel1, vec2(f, 0.0)).r;\n}\n\nfloat slash(float x, float y, float maxInterval, float offset)\n{\n    float c = x - y + offset;\n    float interval = mod(c, maxInterval);\n    return 1.0 - step((maxInterval - 2.0), interval);\n}\n\nfloat backslash(float x, float y, float maxInterval, float offset)\n{    \n    float c = x + y;\n    float interval = mod(c, maxInterval);\n    return 1.0 - step((maxInterval - 2.0), interval);\n}\n\nvec4 image(sampler2D img, float x, float y)\n{\n    vec4 color = texture(img, vec2(x / iResolution.x, y / iResolution.y));\n    return color;\n}\n\nvec4 outline(sampler2D img, float x, float y)\n{\n    vec4 result = \n        32.0 * image(img, x, y) -\n        8.0 * image(img, x + 1.0, y) -\n        8.0 * image(img, x - 1.0, y) -\n        8.0 * image(img, x, y + 1.0) -\n        8.0 * image(img, x, y - 1.0);\n    return 1.0 - result;\n}\n\nfloat grey(vec4 color)\n{\n    return (color.r + color.g + color.b) * 0.33333;\n}\n\nfloat posterize(float component, float colors)\n{\n    float temp = floor(pow(component, 0.6) * colors) / colors;\n    return pow(temp, 1.666667);\n}\n\nfloat contrast(float color, float factor)\n{\n    return (color - 0.5) * factor + 0.5;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float x = fragCoord.x;\n    float y = fragCoord.y;\n    \n    vec4 pixel = image(iChannel0, x, y);\n    \n    float component = grey(pixel);\n    component = posterize(component, 16.0);\n    component = contrast(component, 1.2);\n    \n    float maxInterval = 4.0 + floor(component * 2.0);\n    \n    float offset = timeRandom() * 2.0;\n    float slashShade = slash(x, y, maxInterval, offset);\n    float backslashShade = backslash(x, y, maxInterval, offset);\n    \n    float useBoth = 1.0 - step(0.5, component); \n    float useSlash = 1.0 - step(0.65, component) - useBoth;\n    float useBackslash = step(0.65, component);\n    \n    float shade = useBoth * (slashShade * backslashShade) + useSlash * slashShade + useBackslash * backslashShade;\n    \n    float color = mix(shade, 1.0, component);// * (component + 0.2);\n    color = contrast(color, 1.5);\n    \n    fragColor = vec4(color, color, color, 1.0);// * outline(iChannel0, x, y);\n}","name":"Image","description":"","type":"image"}]}