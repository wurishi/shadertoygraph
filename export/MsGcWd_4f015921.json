{"ver":"0.1","info":{"id":"MsGcWd","date":"1523721804","viewed":501,"name":"color clock (111 chars)","username":"FabriceNeyret2","description":".","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["clock","short","1tweet","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, vec2 u) { O.xy = u+u-iResolution.xy;\n                                    O = .6 + .6 * cos( fract( atan(O.x,O.y)/6.3 -iTime ) + iTime + vec4(0,23,21,0) ); }\n    \n        \n        \n        \n/** // 123 chars     \n\n#define mainImage(O,u)  vec2 R = iResolution.xy, U = (u+u-R)/R.y;  \\\n    O = .6 + .6 * cos( fract( atan(U.x,U.y)/6.3 -iTime ) + iTime + vec4(0,23,21,0) )\n/**/\n\n        \n        \n\n/** // 150 chars\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, U = (u+u-R)/R.y;\n    float t = iTime,                             //  / 60. if you want minutes\n    a = fract( atan(U.x,U.y) / 6.2832 -t ) + t;\n    O = .6 + .6 * cos( a + vec4(0,23,21,0)  );\n}\n\n/**/","name":"Image","description":"","type":"image"}]}