{"ver":"0.1","info":{"id":"cdcyDN","date":"1695050454","viewed":37,"name":"wip2298663515","username":"suttree","description":"wip","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float angle = 0.;\nfloat pr_angle = 0.;\n\n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime/PI;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    //uv *= .3;\n    \n    //uv *= max(0., 1.-abs(uv.x*uv.y)/PI);\n\n    // Time varying pixel color\n    vec3 col = cos(time+uv.xyx + vec3(2,2,4));\n\n    //vec2 gv = fract(uv)-.5;\n    //float test = floor(gv.y*gv.x);\n    //col += floor(test);\n    \n    pr_angle = angle;\n    angle = smoothstep(0.1,0.9,time);\n    vec2 normalizedCoord = abs(uv);\n    normalizedCoord *= mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n    \n    //col += length(normalizedCoord);\n    \n    //col += smoothstep(.5, .02, length(normalizedCoord));\n\n    vec2 gv = fract(uv)-.5; // create grid vector and offset origin to center\n    float rays = max(0., 1.-abs(gv.x * gv.y));\n    //col += rays*.06;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}