{"ver":"0.1","info":{"id":"7dXXWs","date":"1619451057","viewed":179,"name":"glitched ripple","username":"reaxt","description":"another daily for learning!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.1415926535897932384626433832795\n\nfloat rand(vec2 c){\n\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat noise1(vec2 p, float freq ){\n\tfloat unit = iResolution.x/freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\nfloat pNoise1(vec2 p, int res){\n\tfloat persistance = .5;\n\tfloat n = 0.;\n\tfloat normK = 0.;\n\tfloat f = 4.;\n\tfloat amp = 1.;\n\tint iCount = 0;\n\tfor (int i = 0; i<50; i++){\n\t\tn+=amp*noise1(p, f);\n\t\tf*=2.;\n\t\tnormK+=amp;\n\t\tamp*=persistance;\n\t\tif (iCount == res) break;\n\t\tiCount++;\n\t}\n\tfloat nf = n/normK;\n\treturn nf*nf*nf*nf;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n        float radius = 0.000001;\n        float internalRadius = 0.;\n        float amount = 2.2;\n        radius += abs(mod(iTime, amount+amount)-amount);\n        internalRadius += abs(mod(iTime, amount+2.)-2.);\n        internalRadius = radius / 2.;\n        float radiusInterval = 14.;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 video = texture(iChannel0, uv);\n    vec2 circleMid = vec2(0.5,0.5);\n\n    float norm = iResolution.x/iResolution.y;\n    vec2 circ = vec2((uv.x - circleMid.x)*norm, uv.y - circleMid.y);\n    \n    float dist = length(circ);\n    \n    \n    for(float i=0.;i<radiusInterval;++i)\n    {\n      \n        if(dist <= radius && internalRadius <= dist) {\n        circ.x *= (rand(vec2(iTime, circ.x))/1.);\n\n        video = texture(iChannel0, circ);\n        }\n        radius += 1./radiusInterval;\n        internalRadius += 1./radiusInterval;\n    }\n\n    \n    // Output to screen\n    fragColor = video;\n}","name":"Image","description":"","type":"image"}]}