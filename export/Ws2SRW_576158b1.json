{"ver":"0.1","info":{"id":"Ws2SRW","date":"1593727673","viewed":55,"name":"test00001","username":"eclypse","description":"simple test ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","circle","shader","draw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 circle(vec2 uv, vec2 p, float r){   \n    float aspect = iResolution.x / iResolution.y;\n    uv -= p;\n    uv.x *= aspect;\n    float l = 1. - step(r, length(uv));   \n    vec3 c = vec3(l);\n    \n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n         \n    vec3 c = circle(uv, vec2(.5), .3);\n    \n    c -= circle(uv, vec2(.45, .6), .05);\n    c -= circle(uv, vec2(.55, .6), .05);\n\t\n    vec3 violet = vec3(1.,0., 1.) * c;\n    // Output to screen\n    fragColor = vec4(violet, 1.0);\n}","name":"Image","description":"","type":"image"}]}