{"ver":"0.1","info":{"id":"mdV3R1","date":"1678207215","viewed":259,"name":"apollonian_fractal","username":"Deep4","description":"fly through an apollonian fractal","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["fractal","sphere","kleinian","apollonian","gasket"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Sphere(vec3 p)\n{\n    p.z += iTime;\n    float s = 1.;\n       \n    for (int i = 0; i < 4; ++i)\n    {\n        float k = 1.7 / dot(p = mod(p - 1., 2.) - 1., p);\n        p *= k;\n        s *= k;\n    }\t\n\t\n    return length(p) / s;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 uv = vec3(fragCoord / iResolution.y - .5, 1.) * .25;\n    vec3 r = vec3(1., 1., iTime * .25);\n    vec2 m = sin(vec2(.0, 1.5) + iTime * .25);\n    \n    uv.xy = mat2(m.y, -m.x, m) * uv.xy;\n    uv.xz = mat2(m.y, -m.x, m) * uv.xz;\n    \n    fragColor = vec4(.0);\n    \n    for (fragColor.w; fragColor.w < 40.; ++fragColor.w)\n    {\n        r += Sphere(r) * uv;\n    }\n   \n    fragColor += Sphere(r) * Sphere(r - uv) * 40.;\n    fragColor.bg *= 8. * uv.xz;\n}","name":"Image","description":"","type":"image"}]}