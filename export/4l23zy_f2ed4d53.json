{"ver":"0.1","info":{"id":"4l23zy","date":"1430249457","viewed":1001,"name":"SoftShadowTest","username":"dila","description":"Testing soft shadows. Use the mouse to rotate. See the code for a few hints.\nThe technique is described here http://iquilezles.org/articles/rmshadows/rmshadows.htm","likes":41,"published":1,"flags":0,"usePreview":0,"tags":["test","shadow","soft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float pi = 3.14159;\n\nmat3 xrot(float t)\n{\n\treturn mat3(1.0, 0.0, 0.0,\n                0.0, cos(t), -sin(t),\n                0.0, sin(t), cos(t));\n}\n\nmat3 yrot(float t)\n{\n\treturn mat3(cos(t), 0.0, -sin(t),\n                0.0, 1.0, 0.0,\n                sin(t), 0.0, cos(t));\n}\n\nmat3 zrot(float t)\n{\n    return mat3(cos(t), -sin(t), 0.0,\n                sin(t), cos(t), 0.0,\n                0.0, 0.0, 1.0);\n}\n\nfloat sphereDistance(vec3 pos)\n{\n\treturn length(pos) - 0.6;   \n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n    vec3 d = abs(p) - b;\n    return min(max(d.x,max(d.y,d.z)),0.0) +\n        length(max(d,0.0));\n}\n\nfloat planeDistance(vec3 pos)\n{\n\tvec3 origin = vec3(0.0, -0.5, 0.0);\n    vec3 normal = vec3(0.0, 1.0, 0.0);\n    vec3 delta = pos - origin;\n    float prod = dot(delta, normal);\n    return prod;\n}\n\nfloat map(vec3 pos)\n{\n    vec3 rpos = (pos - vec3(0.0,0.5,0.0));\n    rpos *= zrot(iTime) * xrot(pi*0.25) * yrot(pi*0.25+iTime);\n    \n    float cube = sdBox(rpos, vec3(0.5));\n    \n    float acut = sdBox(rpos, vec3(1.0, 0.25, 0.25));\n    float bcut = sdBox(rpos, vec3(0.25, 1.0, 0.25));\n    float ccut = sdBox(rpos, vec3(0.25, 0.25, 1.0));\n    \n    float carve = min(acut, min(bcut, ccut));\n    \n\tfloat x = max(-carve, cube);\n    \n\treturn min(x, planeDistance(pos));\n}\n\nvec3 normal(vec3 p)\n{\n    vec3 o = vec3(0.01, 0.0, 0.0);\n    vec3 n = vec3(0.0);\n    n.x = map(p+o) - map(p-o);\n    n.y = map(p+o.zxy) - map(p-o.zyx);\n    n.z = map(p+o.yzx) - map(p-o.yzx);\n    return normalize(n);\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 pos = o + r * t;\n        float d = map(pos);\n        t += d;\n    }\n    return t;\n}\n\nvec2 ltrace(vec3 o, vec3 r)\n{\n    /* https://iquilezles.org/articles/rmshadows */\n    float t = 0.0;\n    float md = 1000.0;\n    float lt = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 pos = o + r * t;\n        float d = map(pos);\n        md = min(md, 16.0*d/t);\n        t += min(d, 0.1); /* <-- you need to clamp the distance for it to work :) */\n    }\n    return vec2(t,clamp(md,0.0,1.0));\n}\n\nfloat light(vec3 world, vec3 sn, vec3 lpos)\n{\n    vec3 ldel = world + sn * 0.01 - lpos;\n    float ldist = length(ldel);\n    ldel /= ldist;\n    vec2 lt = ltrace(lpos, ldel);\n    float lm = 1.0;\n    if (lt.x < ldist) {\n        lm = lt.y;\n    }\n    float lp = max(dot(ldel, -sn), 0.0);\n    float fl = lp * lm / (1.0 + ldist * ldist * 0.1);\n    return fl;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 ray = normalize(vec3(uv, 1.3));\n    ray *= xrot(pi*0.27);\n    \n    mat3 rotr = mat3(1.0);//yrot(iTime);\n    if (iMouse.z >= 1.0) {\n        vec2 mp = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n\t\trotr = xrot(-mp.y) * yrot(-mp.x*3.0);\n    }\n    \n    ray *= rotr;\n    vec3 origin = vec3(0.0, 0.0, -1.4) * rotr;\n    origin.y += 2.0;\n    \n\tfloat t = trace(origin, ray);\n    vec3 world = origin + ray * t;\n    vec3 sn = normal(world);\n    float fd = map(world);\n    \n\tfloat la = light(world, sn, vec3(-1.0, 3.0, 0.0));\n    float lb = light(world, sn, vec3(1.0, 3.0, 0.0));\n\n    float fog = 1.0 / (1.0 + t * t * 0.01 + fd * 5.0);\n    \n    vec3 diff = vec3(1.0, 1.0, 1.0) * 0.1;\n    float dp = max(dot(ray,-sn),0.0);\n    \n    vec3 rc = diff * dp;\n    rc += la * vec3(1.0, 0.5, 0.3);\n    rc += lb * vec3(0.0, 0.5, 0.7);\n    rc *= fog;\n\tfragColor = vec4(rc, 1.0);\n}","name":"","description":"","type":"image"}]}