{"ver":"0.1","info":{"id":"4cSfRz","date":"1724536842","viewed":24,"name":"25.08","username":"ksastro","description":"25.08","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2508"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float ITERATION_LIMIT = 111.;\n\nvec3 paletteRainbow( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.0,0.33,0.67);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}   \n\nvec3 paletteBlueMagenta( float t ) {\n    vec3 a = vec3(0.6, 0., 0.8);\n    vec3 b = vec3(0.4, 0., 0.2);\n    vec3 c = vec3(.5, .0, .5);\n    vec3 d = vec3(.5,0.,0.);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n} \n\nstruct Ray{\n    vec3 origin;\n    vec3 direction;\n    float length;\n    vec3 position;\n};\n\nfloat sdSphere( in vec3 position, in float r)\n{\n  return length(position)-r;\n}\nfloat sdPlane( vec3 p )\n{\n\treturn p.y;\n}\nfloat sdBox( vec3 position, vec3 size )\n{\n  vec3 q = abs(position) - size;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nvec3 GetColor(vec3 position, float surfaceId){\n    vec3 color = vec3(0.4667, 0.0, 0.7137);\n    if (surfaceId == 2.) {\n        \n        color = vec3(0.0784, 0.102, 0.3373);\n        }\n    if (surfaceId == 1.) {\n        color  = paletteBlueMagenta(position.z/50.);\n        //color = vec3(0.8353, 0.0314, 0.502);\n        }\n    return color;\n}\n\nvec2 AddObjects (vec2 firstObject, vec2 secondObject){\n    if (firstObject.x < secondObject.x) {return firstObject;}\n    return secondObject;\n}\n\nvec3 Paving (vec3 position){\n    return 10.*fract(.1*(position))-vec3(5.);\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec2 map (vec3 position){\n    vec2 result;\n    vec3 rotatedPosition = vec3(rotate2d(.5*iTime)*position.xy,position.z);\n    vec3 spherePosition = Paving(rotatedPosition + vec3(5.0,5.+1.5*iTime,5.-3.*iTime)) - vec3(0.,0.,0.);\n    vec2 sphere = vec2(sdSphere(spherePosition, 1.), 1.);\n    vec3 planePosition = (position - vec3(0.,-15.,0.));\n    vec2 plane = vec2(sdPlane(planePosition), 2.);\n    vec3 boxPosition = Paving (vec3(position + vec3(5.+cos(2.*iTime),5.+sin(2.*iTime), 5.)));\n    vec2 box = vec2(sdBox(boxPosition,vec3(1.)),3.);\n    result = sphere;\n    //result = plane;\n    //result = AddObjects(result, sphere);\n    //result = AddObjects(result, box);\n\n    return result;\n}\n\nfloat softShadow( in vec3 ro, in vec3 rd, float mint, float maxt, float k )\n{\n    float res = 1.0;\n    float t = mint;\n    for( float i = 0.; (i < ITERATION_LIMIT); i++ )\n    {\n        float h = map(ro + rd*t).x;\n        if( h<0.001 )\n            return 0.0;\n        res = min( res, k*h/t );\n        t += h;\n        if (t>maxt) break;\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime * .3; //anim speed\n    vec2 uv = (fragCoord.xy * 2. - iResolution.xy)/iResolution.y;\n    //uv.x = fract((1.+2.*0.*sin(t))*uv.x)*2.-1.;    //paving\n    //uv.y = 2.*uv.y;\n    vec3 col = vec3(0.,0.,.0);\n    vec3 lightDirection = normalize(vec3(1.,1.,-1.));\n    Ray ray;\n    ray.origin = vec3(0.,0.,-3.);\n    ray.direction = normalize(vec3(uv,1.));\n    ray.length = 0.;\n    ray.position = ray.origin;\n    float surfaceId = 0.;\n\n    for(float i = 0.; i < ITERATION_LIMIT; i++){\n        vec2 d = map(ray.position);\n        if (d.x < 0.001) {surfaceId = d.y; break;}\n        ray.length += d.x;\n        ray.position = ray.origin + ray.length * ray.direction;\n        if (ray.length > 4500.) { break;}\n    }\n    col = GetColor(ray.position,surfaceId);\n\n    col *= softShadow (ray.position, lightDirection,.1,10.,4.);\n\n    //col = vec3(I);\n    //col = paletteRainbow(2.*d0 - t*.7);\n    //col = paletteRainbow(.7*sin(4.*d) - t*.3);\n    // Output to screen\n    //col *= f/4.;\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}