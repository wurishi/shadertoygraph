{"ver":"0.1","info":{"id":"ldSBzd","date":"1501683090","viewed":715,"name":"Charmap","username":"eliemichel","description":"Easy character picker inspired by https://www.shadertoy.com/view/lsSfzt\nClick on a character to display its index and check out the initial comment to see how to use it!","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["text","tool","fonts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * Click on a char to get its ascii code, then include it into your shader with:\n *\n *     fragColor += texture(iChannel0, (fract(uv/s) + vec2(i,15-i/16))/16.).x;\n *\n * where i is the char code, s is the scale of the char relatively to\n * the screen (1.0 or vec2(1.0) for full screen) and uv is the normalized\n * fragment coordinates (= fragCoord.xy / iResolution.xy).\n *\n * (Don't forget to add the character texture as Channel0)\n *\n */\n\n\nint idot(ivec2 a, ivec2 b) {\n    return a.x * b.x + a.y * b.y;\n}\nint index(vec2 uv) {\n    return idot(ivec2(uv * 16.), ivec2(1, 16));\n}\nvec2 fromIndex(int i) {\n    return vec2(i,i/16)/16.;\n}\n\n\n/*\n * If you tend to index differently, change those two functions.\n * Make sure to also adapt the texture access in your own shader.\n *\n */\nint displayIndex(vec2 uv) {\n    // option 1: from bottom-left\n    // (change vec2(i,15-i/16) into vec2(i,i/16) if you use this index)\n    //return index(uv);\n    \n    // option2: from top-left (ascii order)\n    return int(uv.x * 16.) + int((1. - uv.y) * 16.) * 16;\n}\n\n\nvec2 toWinUv(vec2 uv) {\n    return (uv - vec2(0., 1./16.)) * vec2(1., 17./16.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    vec2 wuv = toWinUv(uv);\n    vec2 wmouse = toWinUv(mouse);\n    \n\tfragColor = texture(iChannel0, wuv);\n    \n    int i = index(wmouse);\n    \n    if (index(wuv) == i) {\n        fragColor = 1. - fragColor;\n    }\n    \n    if (uv.y < .0625) {\n        if (length(iMouse) == 0.) {\n            vec2 s = vec2(0.5, 1.);\n            i = int[](179,156,153,147,155, 221, 157,149, 80)[int(uv/s*16.)];\n            fragColor = vec4(texture(iChannel0, fract(uv/s*16.)/16. + fromIndex(i)).x);\n        } else {\n            if (uv.x < .0625) {\n                fragColor = vec4(.7,.1,.7,1.) * texture(iChannel0, fract(uv*16.)/16. + fromIndex(i)).x;\n            } else if (uv.x < .0625*4.) {\n                i = displayIndex(max(wmouse, vec2(0., .0625)));\n                int d = int(pow(10., ceil(3.-uv.x*16.))+.5);\n                i = i/d%10;\n                i += 192;\n                fragColor = vec4(texture(iChannel0, fract(uv*16.)/16. + fromIndex(i)).x);\n            } else {\n                fragColor *= 0.;\n            }\n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}