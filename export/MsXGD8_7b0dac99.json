{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"/** Uses fbm / noise aparatus from iq's clouds on shadertoy, **/\n/** some digits were changed to protect the innocent **/\n\nmat3 m = mat3( 0.0,  0.8,  0.60,\n              -0.80,  0.36, -0.48,\n              -0.60, -0.48,  0.64 );\n\n\nfloat cubicPulse( float c, float w, float x )\n{\n    x = abs(x - c);\n    if(x > w) { return 0.0; }\n    x /= w;\n    return 1.0 - x*x*(3.0-2.0*x);\n}\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return 1.0 - sqrt(res);\n}\n\nfloat fbm( vec3 p )\n{\n    float f;    \n    f  = 0.6000*noise( p ); p = m*p*2.02;\n    f += 0.200*noise( p ); p = m*p*2.0130;\n    f += 0.06250*noise( p ); p = m*p*2.0370;\n    f += 0.0275*noise( p ); p = m*p*2.02;\n    f += 0.00513*noise(p * 2.2);\n    return f;\n}\n\nfloat iat(in vec2 q) {\n  return fbm(vec3(q + 0.3 * vec2(iTime, iTime), 0.626));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord.xy / iResolution.x;\n\n  vec2 n = q + vec2(0.0, 0.001);\n  vec2 e = q + vec2(0.001, 0.0);\n  vec2 s = q + vec2(0.0, -0.001);\n  vec2 w = q + vec2(-0.001, 0.0);\n\n  float ifac = 15.0;\n  float i  = iat(q * 20.0  );\n  float ni = iat(n * (20.0 - ifac + ifac  * i));\n  float ei = iat(e * 20.0);\n  float si = iat(s * 20.0);\n  float wi = iat(w * 20.0);\n  \n  vec3 no = (normalize(vec3( (ni - si), (ei - wi), sqrt((ei - wi)*(ei - wi) + (ni - si)*(ni - si)))));\n  float dif = 1.5 * dot( no, normalize(vec3(-0.13, 0.4, 0.167)));\n  vec3 col = vec3(1.8 * cubicPulse(0.6, 0.35, i), 1.1 * cubicPulse(0.45,0.35,i), 0.3 * cubicPulse(0.2,0.3,i)) / 1.0;\n  col *= dif;\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsXGD8","date":"1368397439","viewed":375,"name":"Noise experiment","username":"Underspecified","description":"Just an experiment, modulating coloiur and normals with some noise, from a beginner. Thanks for shadertoy and its contents!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fbm","perlin","bump"],"hasliked":0,"parentid":"","parentname":""}}