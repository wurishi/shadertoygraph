{"ver":"0.1","info":{"id":"wdl3Rl","date":"1547259456","viewed":93,"name":"Julia's Quilt","username":"bignobody","description":"First attempts at colouring a Julia Set fractal with orbit trapping. Thanks to iq for the articles!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["juliaset","orbittrap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    vec2 p = uv - vec2(0.5,0.5);\n    vec2 z = p * 1.5;\n    vec2 c = vec2(-0.745, 0.19);\n    float t = 0.0;\n    vec2 bo = vec2(9999.0,9999.0);\n    float bl = 99999.0;\n    vec2 wo = vec2(0.0,0.0);\n    float wl = 0.0;\n    float it = 0.0;\n    float os = 0.0;\n    for (int i = 0; i < 64; i ++)\n    {\n     \tvec2 nz = vec2(z.x*z.x - z.y*z.y, (1.5 - cos(iTime * 0.022)) * z.x * z.y) +c;\n        vec2 no = nz - p;\n        float nl = length(no);\n        os += nl;\n        it += 1.0;\n        if (nl > wl)\n        {\n        \two = no;\n            wl = nl;\n            \n        }\n        if (nl < bl)\n        {\n        \tbo = no;\n            bl = nl;\n            \n        }\n        \n        float m2 = dot(z.x,z.x);\n        if (m2 > 4.0)\n        {\n           // bl = 1.0;\n        \tbreak;   \n        }\n        z = nz;\n        t += 1.0/63.0;\n    }\n    \n\tvec3 tintb = vec3(0.3,0.6,0.8);\n    vec3 tintr = vec3(0.8,0.4,0.1);\n    float avgo = os/it;\n    \n    vec3 col = mix(mix(vec3(t) , tintb, dot(bo,wo)+avgo) , mix(vec3(t) , tintr, sqrt(avgo)) , sqrt(bl));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}