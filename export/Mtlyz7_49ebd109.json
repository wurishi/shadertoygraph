{"ver":"0.1","info":{"id":"Mtlyz7","date":"1504203097","viewed":794,"name":"Arc Shader","username":"benjaminbojko","description":"Simple arc shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.141592653589793\n#define M_TWO_PI 6.283185307179586\n\nvec4 vColor = vec4(1.0, 0, 0, 1.0);\nfloat smoothness = 4.0;\nfloat innerRadius = 0.5;\nfloat outerRadius = 1.0;\nfloat startAngle = 0.0 * M_PI;\nfloat endAngle = 1.9 * M_PI;\n\nvoid mainImage(out vec4 oFragColor, in vec2 fragCoord) {\n    startAngle = clamp(startAngle, 0.0, endAngle);\n    endAngle = clamp(endAngle, startAngle, M_TWO_PI);\n    \n    float smoothnessMult = 1.0 / length(iResolution);\n    float smoothThresh = smoothness * smoothnessMult;\n    \n    vec2 ciTexCoord0 = fragCoord / iResolution.xy;\n    vec2 centerPos = ciTexCoord0 * 2.0 - 1.0;\n\t\n    // Inspired by http://blog.lapingames.com/draw-arc-in-shader/\n\tfloat dist = length(centerPos);\n\tfloat inner = smoothstep(innerRadius, innerRadius + smoothThresh, dist);\n\tfloat outer = smoothstep(outerRadius, outerRadius - smoothThresh, dist);\n\tfloat bandAlpha = inner * outer;\n    \n    float angle = (atan(centerPos.y, centerPos.x) + M_PI);\n    float startEdge = smoothstep(angle, angle - smoothThresh * 1.0, startAngle);\n    float endEdge = smoothstep(angle, angle + smoothThresh * 1.0, endAngle);\n    float angleAlpha = startEdge * endEdge;\n    \n\t//oFragColor = vec4(vColor.rgb, bandAlpha * angleAlpha);\n    oFragColor = vec4(vColor.rgb, 1.0) * bandAlpha * angleAlpha; // shadertoy doesn't deal w alpha well\n}\n\n","name":"Image","description":"","type":"image"}]}