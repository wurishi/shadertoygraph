{"ver":"0.1","info":{"id":"7lVyR1","date":"1665890840","viewed":80,"name":"MandelbrotTest2924","username":"ReinhardtC","description":"Messing around with complex number stuff.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["complexnumbers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 oneStep(vec2 z, vec2 c) {\n    // (a+bi)^2 = (a^2-b^2)+2abi\n    return vec2((z.x * z.x - z.y * z.y), 2. * z.x * z.y) + c;\n}\n\nfloat modulus(vec2 z) {\n    return sqrt(z.x * z.x + z.y * z.y);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 getColour(float i, float f) {\n    i = i / f;\n    return hsv2rgb(vec3(i, 1, 1));\n}\n\nvec3 mandelbrotColor(vec2 c, int n) {\n    vec2 z = vec2(0, 0);\n    for (int i = 0; i < n; i++) {\n        if (modulus(z) >= 2.) return getColour(float(i), 1080.);\n        z = oneStep(z, c);\n    }\n    return vec3(0,0,0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 camCentre = vec2(-0.4, 0.585);\n    float camZoom = 1. / pow(2., (iTime - 5.));\n    float mindim = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / mindim + camCentre;\n    uv = vec2(uv.x, uv.y);\n    uv = (uv - camCentre) * camZoom + camCentre;\n\n    vec3 col = mandelbrotColor(uv.xy, 1000);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}