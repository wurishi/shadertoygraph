{"ver":"0.1","info":{"id":"tlVBRD","date":"1614013580","viewed":97,"name":"Yin and Yang.","username":"csgradle","description":"My second shader :D\n\nUses some rotation on noise\nI got the rorate2D() and random2() functions from the Book of Shaders, because I don't know anything about matrices lol.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 st = uv-0.5;\n    st.x *= iResolution.x/iResolution.y;\n    st = rotate2d(sin(iTime*length(st)*.2)) * st;\n    float val = noise(st*10. + vec2(iTime*1.4,0))+0.45;\n    //vec3 col = fract(vec3(val) * length(st)*20.);\n    vec3 col = fract(vec3(val) * 0.5*noise(st*0.1)*10.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}