{"ver":"0.1","info":{"id":"ctcSW2","date":"1685768866","viewed":59,"name":"fork my second shader! -voidbyte","username":"playersteve19","description":"with easier palette swapping and some funky offsets for the position that makes it look like runes. then some other stylistic tweaks. Cheers mate! Congrats on getting started with Shadertoy! ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","stars","shiny"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"my second shader! -voidbyte\" by Voidbyte. https://shadertoy.com/view/cl3SDj\n// 2023-06-03 04:58:57\n\n#define palettea vec3(0.086,0.506,0.851)\n#define paletteb vec3(0.906,0.651,0.064)\n#define palettec vec3(0.391,0.929,0.882)\n#define paletted vec3(4.608,3.265,1.026)\nvec3 palette(float t) {\n    return palettea + paletteb*cos(6.28318*(palettec*t*paletted));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract((1./(i+1.))+uv * 1.5) - 0.5;\n        float time = iTime+3.75;//adds an offset purely so that the title card looks cool \n        float d = length(uv) * exp(-length(uv0));\n        vec3 col = palette(length(uv0) + i*0.4 + time * 0.2);\n\n        d = i*sin(d*8. + time/2.)/i;\n        d = abs(d);\n        d = pow(0.01 / d, .99);\n\n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}