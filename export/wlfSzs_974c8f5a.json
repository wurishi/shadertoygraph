{"ver":"0.1","info":{"id":"wlfSzs","date":"1563904551","viewed":86,"name":"chromosomes","username":"anclin","description":"chromosomes","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["chromosomes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define SS01(t, count) mod(ceil((t)/PI2), count) / (count-1.)\n#define SS(t, min, max, count) mix(min, max, SS01(t,count) )\n#define S(a,b,t)  mix(a, b, sin(t) * .5 + .5)\n#define C(a,b,t)  mix(a, b, cos(t) * .5 + .5)\n#define BMP 120.\n\nconst int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\nconst int KEY_A  \t= 65;\nconst int KEY_B  \t= 66;\nconst int KEY_T  \t= 66;\n\nfloat GetKeyDown(int keyCode) {\n    return texelFetch( iChannel0, ivec2(keyCode,0), 0 ).x;\n}\n\nfloat LINE_DF(vec2 a, vec2 b, vec2 p) {\n    vec2 ab = b-a;\n    vec2 ap = p-a;\n    float t = dot(ap,ab)/dot(ab,ab);\n    t = clamp(t,0.,1.);\n    vec2 c = a + ab*t;\n    float d = length(p-c);\n    return d;\n}\n\nfloat ROT_LINE_DF(vec2 p, float deg, float l) {\n    \n    float rad = deg/180.*PI;\n    float x0 = cos(rad)*l;\n    float y0 = sin(rad)*l;\n    float x1 = cos(rad+PI)*l;\n    float y1 = sin(rad+PI)*l;\n    float d = LINE_DF(vec2(x0,y0),vec2(x1,y1),p);\n    return d;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    uv *= 10.;\n    float t = iTime * 15.;\n    \n    float TIMER_1 = max(GetKeyDown(KEY_B), SS(t/10.,0.,1.,2.));\n    \n    // mirror xy\n    uv = mix(uv, abs(uv), TIMER_1);\n    \n    float d1 = ROT_LINE_DF(uv,t+90.,2.);\n    float d2 = ROT_LINE_DF(uv,t*1.7,2.);\n\n    float d = min (d1,d2);\n    float sh = 1.-pow(2.71828,-d);\n    \n    d = fract(d);\n    \n    \n    // distort\n \tfloat sw = S(0.,1.,t/15.+uv.x*.2) * TIMER_1;\n    d = mix(d,d1,sw);\n    d = fract(d);\n    \n    \n    // rim light\n    d = pow(d, 3.);\n    \n    // shadow / light blimp\n    //d *= pow(1.-sh, S(1.2, .1, t/4.));\n    d *= mix((1.-sh)*2., pow(1.-sh, S(1.2, .1, t/4.)), TIMER_1);\n\n\n    \n    vec3 col = vec3(d+d+d) * vec3(1,.4,.35) + vec3(1,.4,.35)*(d/.1)*sw;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}