{"ver":"0.1","info":{"id":"slGBDd","date":"1665509609","viewed":121,"name":"Door Transition","username":"Sciman101","description":"Brainstorming for an effect in a video game","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14152965\n#define PI2 (PI*2.)\n#define HALF_PI (PI*0.5)\n#define QUARTER_PI (PI*0.25)\n\nconst float zoom = 1.;\nconst float door_aspect = 1.75;\nconst float spiral_rate = 1.75;\nconst float speed = 1.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord/iResolution.xy-0.5)*2.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv.y /= door_aspect;\n    float r = sqrt(uv.x*uv.x+uv.y*uv.y);\n    float theta = atan(uv.y,uv.x);\n    \n    float phi = mod(theta+QUARTER_PI,HALF_PI)-QUARTER_PI;\n    float square = r*zoom*cos(phi);\n    \n    float spiral = mod(1./(square*spiral_rate) + theta/PI2 + iTime*speed,1.0);\n    spiral = step(spiral,min(square,0.2));\n\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(r,2,4));\n    // Apply mask\n    vec3 spiralColor = col * spiral;\n    // Glow\n    vec3 glow = col + vec3(1.);\n    \n    col = mix(spiralColor,glow,clamp(1.-square*5.+(sin(iTime*0.1)+1.)*0.1,0.,1.));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}