{"ver":"0.1","info":{"id":"7sdXR8","date":"1632658507","viewed":82,"name":"24 frames per second","username":"halcaponey","description":"Visualization of 24 frames per second.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","time","clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool circle_contains_point( vec2 c, float r, vec2 p )\n{\n    return length(c - p) <= r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n    vec2 uv = fragCoord / iResolution.y;\n    float ar = iResolution.x / iResolution.y;\n\n    float rad = 0.01;\n\n    int nbPoints = 24;\n    \n    float color = 0.;\n    for ( int i = 0; i < nbPoints; i++ )\n    {\n        vec2 center = vec2( 0.5 * ar, 0.5 );\n        float ang = ( 6.28318 / float( nbPoints ) ) * float(i);\n        float dist = 4.0;\n        vec2 cirPos = center + vec2( sin( ang ) / dist, cos( ang ) / dist );\n        \n        vec2 p = vec2( uv.x, uv.y );\n        float contains = 1. - smoothstep( rad - rad / 3., rad, length(cirPos - p) );\n        float on = step( float( i ) / float( nbPoints ), ( iTime - floor( iTime ) ) );\n        \n        color += contains * ( 0.4 + 0.6 * on );\n\n    }\n    \n    fragColor = vec4( vec3( color ), 1.0 );\n}","name":"Image","description":"","type":"image"}]}