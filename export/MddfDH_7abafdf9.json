{"ver":"0.1","info":{"id":"MddfDH","date":"1525144237","viewed":251,"name":"SickBow's Lightspeed Jump","username":"sickbow","description":"starfield lightspeed jump","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265358979\n\nfloat rand(float seed){\n\treturn fract(sin(seed * 13123.1317) * 64532.6438)+.01;   \n}\n\nvec3 star(vec3 col, vec3 starCol, vec2 uv, float size, vec2 center){\n    \n    float perp = length( cross(vec3(uv,0), vec3(center,0)) )/length(center);\n    float streakLength = 15. * pow(fract(iTime/10.),10.);\n    float streakWidth = 4.* pow(fract(iTime/10.),20.);\n    \n    if (length(uv-center) <= size){\n    \tcol += smoothstep(size, 0.0, length(uv-center))*starCol;\n    }\n    \n    if (perp < streakWidth && length(uv - center) < streakLength){\n    \tcol += smoothstep(size, 0.0, perp)*starCol; \n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.);\n\t\n    for(float i = 0.; i < 70.; i+=.1){\n    \t\n        vec2 center = 100. * ( 1.-fract(iTime/10.) ) * rand(i) * vec2( i/70.*cos(i), i/70.*sin(i) );\n        \n        float shrink = length(center);\n        \n    \tcol = star(col, vec3(.5), uv, .01*shrink, center );\n       \n    }\n    \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}