{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define time (iTime/2.)\n#define Pi 3.1415926535\n#define Pi2 (Pi*2.)\n#define resolution iResolution\n\nmat2 rot(float angle) {\n\treturn mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n}\n\nfloat rand(float t) {\n\treturn sin(t*29.524)*3.5255;\n}\n\nfloat smoothnoise(float x) {\n\tx = x/Pi*2.;\n\tfloat f = sin(x);\n\tfloat f2 = sin(x+1.285);\n\tfloat f3 = sin(x*24.568);\n\tfloat res = (f+f2+f3)/3.;\n\treturn res;\n}\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.,0.33,0.67);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat poly(vec2 p, float sides){\n\treturn cos(floor(.5+p.x/(Pi2/sides)\t\t)*(Pi2/sides)-p.x)*p.y;\n}\n\nfloat ShapeLayer(vec2 uv){\n\tfloat shapes = 7.;\n\tfloat I = fract(time/8.);\n\tfloat scale = 1.;///(time/10.);//pow(1.-fract(time),2.);\n\t//if (scale <.1) scale = 1.;\n\tfloat d = 0.;\n\tfloat edges = floor((sin(time)*.5+1.)*6.);////uv.y= fract(uv.y*(edges))////uv.x = fract(uv.x*(edges/6.));\n\tfloat y = abs(((uv.y-(fract(time/5.)-.25)*2.)));\n\n\tfloat sawtooth = smoothstep(.0,.1, pow(fract(1.-uv.x*floor(edges/(Pi/2.))),2.)*.3+.1-(y));\n\tfloat rays = smoothstep(.0,.1, pow(fract(floor(1.-uv.x*edges)/3.),2.)*.3+.1-(y));\n\tfloat ring = smoothstep(.1,.0,abs(min(y,.1)));\n\tfloat flower = smoothstep(.0,.1,min(fract(uv.x*edges/2.),fract(1.-uv.x*edges/2.))*.3+.2-y);\n\tfloat diamonds = smoothstep(.0,.1,min(fract(uv.x*edges),fract(1.-uv.x*edges))*.3-abs(.2-y));\n\tfloat diamondStairs = smoothstep(.0,.1,min(fract(uv.x),fract(1.-uv.x*edges))*.3-abs(.2-y));\n\tfloat polygon = smoothstep(.3,.15,poly(vec2(uv.x, y),edges));\n\tfloat spiral = smoothstep(.3,.0,abs(abs(abs(abs(uv.x-uv.y*scale)-.5)-.5)-.5));\n\n\tif(I<=1./shapes){\n\t\td = sawtooth;\n\t}else if(I<=2./shapes){\n\t\td = ring;\n\t}else if(I<=3./shapes){\n\t\td = flower;\n\t}else if(I<=4./shapes){\n\t\td = diamonds;\n\t} else if (I<=5./shapes){\n\t\td = rays;\n\t} else if (I<=6./shapes){\n\t\td = diamondStairs;\n\t//} else {//if (I<7./shapes){\n\t\t//d = spiral;\n\t} else {\n\t\td = polygon;\n\t}\n\treturn d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy/resolution.xy)*2.-1.;\n\tuv.x *= resolution.x/resolution.y;\n\tuv/=2.;\n\tuv *= rot(time/5.*3.1415);\n\tuv = vec2(atan(uv.x,uv.y),length(uv));\n\tvec3 col = vec3(0);\n\t//col += vec3(uv,1.);\n\tuv.y = 1.-pow(abs(uv.y)-1.,8.);\n\n\n\tfloat d = abs((uv.y-time/2.)*5.+sin(smoothnoise(uv.x*5.)));\n\tcol = palette(d);\n\tfloat shapes = ShapeLayer(uv);\n\tcol *= palette(shapes*.3);\n\tfloat lines = (sin((uv.x-uv.y+time)*8.)/8.);\n\tcol /= palette(lines*.4);\n\t//col += d;\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"43cczS","date":"1735233703","viewed":60,"name":"Wavy zoom spiral polar","username":"ekaunt","description":"Wavy zoom spiral polar","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["zoom","spiral","wavy","psychedelic","polar"],"hasliked":0,"parentid":"","parentname":""}}