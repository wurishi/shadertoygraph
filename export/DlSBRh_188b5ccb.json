{"ver":"0.1","info":{"id":"DlSBRh","date":"1717794512","viewed":74,"name":"Some PRNGs","username":"Envy24","description":".","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["prng","splitmix32","xorshift32","mulberry32"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    ui32 is mine naive prng)\n    Others from here: https://stackoverflow.com/questions/17035441/looking-for-decent-quality-prng-with-only-32-bits-of-state\n    Some other usefull links:\n        https://www.shadertoy.com/view/wljXDz\n        https://www.shadertoy.com/view/WdSSRt\n        https://www.shadertoy.com/view/flXXWs\n*/\nuint state;\nuint ui32(void) // hash from here: https://www.shadertoy.com/view/7tsGzX\n{\n\t//state += 12345u;\n\tstate *= 445593459u;\n\tstate ^= 67890u;\n\n    return state * state;// * state;\n}\nuint xorshift32(void) {\n    state ^= state << 13;\n    state ^= state >> 17;\n    state ^= state << 5;\n    return state;\n}\nuint mulberry32(void) {\n    uint z = state += 0x6D2B79F5u;\n    z = (z ^ z >> 15) * (1u | z);\n    z ^= z + (z ^ z >> 7) * (61u | z);\n    return z ^ z >> 14;\n}\nuint splitmix32(void) {\n    uint z = (state += 0x9e3779b9u);\n    z ^= z >> 16; z *= 0x21f0aaadu;\n    z ^= z >> 15; z *= 0x735a2d97u;\n    z ^= z >> 15;\n    return z;\n}\n#define random() ( ui32() )\n//#define random() ( xorshift32() )\n//#define random() ( mulberry32() )\n//#define random() ( splitmix32() )\n\nfloat p_sample() { return float(random()) * 2.32830644e-10; }\nfloat s_sample() { return float(random()) * 4.6566128730773926e-10f - 1.0f; }\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    // Initialize.\n    state = uint(iFrame);\n    state += uint(SC.y * iResolution.x + SC.x);\n    \n    /* Some permutations (necessary for xorshift32) *\n    uint count = \n        (random() & 1u) |\n        ((random() & 2u)<<1) |\n        ((random() & 4u)<<2) |\n        ((random() & 8u)<<3) |\n        ((random() & 16u)<<4);\n    for (uint i = 0u; i < count; ++i) { random(); }\n    /**/\n    \n    //O = vec4(p_sample());\n    O = vec4(p_sample(),p_sample(),p_sample(),1.);\n    //O = vec4(s_sample());\n}","name":"Image","description":"","type":"image"}]}