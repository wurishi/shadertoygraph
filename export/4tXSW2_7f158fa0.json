{"ver":"0.1","info":{"id":"4tXSW2","date":"1443019988","viewed":185,"name":"Distances","username":"anastadunbar","description":"Have no idea what to do, I thought to show distance formulas that I found.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","basic","distance","functions","formulas"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float manhattan(vec2 uv) {\n    return abs(uv.x)+abs(uv.y);\n}\nfloat euclidean_dist(vec2 uv) { //Same as \"length()\" function\n    return sqrt(pow(uv.x,2.)+pow(uv.y,2.));\n}\nfloat chess_dist(vec2 uv) {\n    return max(abs(uv.x),abs(uv.y));\n}\nfloat power_dist(vec2 uv, float power) { //Spike to circle to round square\n    return length(pow(abs(uv),vec2(power)))*power;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float time = iTime;\n    float time2 = floor(mod(time,4.))+1.;\n    float time3 = fract(time);\n    float show = 0.;\n    if (time2 == 1.) {\n        show = manhattan(uv-0.5);\n    }\n    if (time2 == 2.) {\n        show = euclidean_dist(uv-0.5);\n    }\n    if (time2 == 3.) {\n        show = chess_dist(uv-0.5);\n    }\n    if (time2 == 4.) {\n        show = power_dist(uv-0.5,time3+1.);\n    }\n    float bar = (step(uv.y,0.01)*step(uv.x,time2/4.));\n\tfragColor = vec4(show-bar,show,show-bar,1.0);\n}","name":"Image","description":"","type":"image"}]}