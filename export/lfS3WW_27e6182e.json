{"ver":"0.1","info":{"id":"lfS3WW","date":"1704212567","viewed":15,"name":"RainyWindow","username":"Leabemo","description":"water drop","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st){\n    \n    float num = fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n    return num;\n}\n\nvec3 layer(vec2 uv,float t){\n// Add Wangle\n    float w = uv.y * 6.;\n    \n    \n    // Prepare parameters\n    vec2 aspect = vec2(2.0,1.0);\n    uv *= 3. * aspect;\n    uv.y += t*.25; \n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    vec2 gv = (f -.5);\n    \n    // Add Random ID\n    float n = random(i)*2.;// Increase the interval between drops\n    t += n*6.2831;// The period of the sine function is 2Ï€\n    \n    // Add Wangle\n    //float x = sin(3.*w)*pow(sin(w),6.)*.45;\n    float x = (n-.5)*.8; // -0.4 - 0.4\n    x += (0.4-abs(x)) * sin(3.*w)*pow(sin(w),6.)*0.45;\n    // Y Move Curve\n    float y = -sin(t+sin(t+sin(t)*.5))*.45;\n    //y -= 5.*gv.x*gv.x;\n    y -= (gv.x-x)*(gv.x-x);\n    \n    // Draw Water\n    //vec3 col = vec3(0.);\n    vec2 dropPos = (gv-vec2(x,y))/aspect;\n    float drop = smoothstep(.05,.03,length(dropPos));\n    //col += drop;\n    \n    // Draw Trail\n    vec2 trailPos = (gv - vec2(x,t*.25))/aspect; \n    trailPos.y = (fract(trailPos.y*8.)-.5)/8.;//copy trail point \n    float trail = smoothstep(.02,.01,length(trailPos));\n    trail *= smoothstep( .5, y, gv.y);// internal gradient\n    trail *= smoothstep(-.05,.05,dropPos.y);// Mask to remove the trail below the drop\n    //col += trail;\n    \n    // Add Fog Trail\n    float fogtrail = smoothstep(-.05,.05,dropPos.y);\n    fogtrail *= smoothstep( .5, y, gv.y);\n    fogtrail *= smoothstep(.05,.04,abs(dropPos.x));\n    //col += fogtrail*.5;\n    \n    // Add Distortion\n    vec2 offest = trail*trailPos + drop*dropPos;\n    return vec3(offest,fogtrail);\n}\n//===================================================================\n// 16x acceleration of https://www.shadertoy.com/view/4tSyzy\n// by applying gaussian at intermediate MIPmap level.\nconst int samples = 35,\n          LOD = 2,         // gaussian done on MIPmap at scale LOD\n          sLOD = 1 << LOD;\nconst float sigma = float(samples) * .25;\n\nfloat gaussian(vec2 i) {\n    return exp( -.5* dot(i/=sigma,i) ) / ( 6.28 * sigma*sigma );\n}\n\nvec3 blur(sampler2D sp, vec2 U, vec2 scale) {\n    vec4 O = vec4(0);  \n    int s = samples/sLOD;\n    \n    for ( int i = 0; i < s*s; i++ ) {\n        vec2 d = vec2(i%s, i/s)*float(sLOD) - float(samples)/2.;\n        O += gaussian(d) * textureLod( sp, U + scale * d , float(LOD) );\n    }\n    \n    return (O / O.a).rgb;\n}\n\n//====================================================================\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;    \n    vec2 uv1 = fragCoord/iResolution.xy;\n\n    uv.x*=iResolution.x/iResolution.y;\n    float t = mod(iTime,7200.);\n    \n    \n    vec3 _layer = layer(uv*1.6+2.,t);\n    _layer += layer(uv*1.9+12.,t);\n    _layer += layer(uv*2.7-7.,t);\n\n    float fogtrail = _layer.z;\n    vec2 offest = _layer.xy;\n    // Final Mix\n    float distortion = .8;\n    //float lod = 0.01*iMouse.x*(1.-fogtrail); // down sample\n    vec3 col1 = blur( iChannel0, uv1, 1./iChannelResolution[0].xy);\n    vec3 col2 = texture(iChannel0,uv1 + offest*distortion).rgb;\n    vec3 col = mix(col1,col2,fogtrail);\n    // Add Line\n    //col.r += step(f.x,0.02);    \n    //col.r += step(f.y,0.02);\n    \n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}