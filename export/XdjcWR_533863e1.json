{"ver":"0.1","info":{"id":"XdjcWR","date":"1491600435","viewed":302,"name":"Collatz Paths","username":"metabog","description":"This is inspired by mapping the Collatz Conjecture but using slightly different rules. ","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["collatz","dynamicalsystem","numbertheory"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 rval = texture(iChannel1,uv);\n\tfragColor = rval;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool iseven(int number) { return number%2==0;}\n\nconst int numcollatz = 64;\nfloat step = 1.0f/512.0f;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    int index = int(iResolution.x*(fragCoord.y) + fragCoord.x) - int(iResolution.x);\n\n    vec4 prev = texture(iChannel0,fragCoord / iResolution.xy);\n    if(iFrame%2048==0) prev = vec4(0.25 + uv.x,0.5,step*float(index + 33),step*float(index)*3.14f + iTime);\n    \n    vec4 new_data = vec4(0.25);\n    \n    if(index<numcollatz)\n    {\n        float angle = prev.w;\n        vec2 pos = prev.xy;\n        int number = int(prev.z/step);\n        if(number!=1)\n        {\n        \tif(iseven(number))\n        \t{\n                number = number/4 + number%17 + int(iTime*0.1)%8;\n                angle +=  0.07;\n        \t}\n        \telse \n        \t{   \n        \t  \tnumber = number*3 + 1 + number%7;\n                angle -= 0.04 - sin(iTime*0.1f)*0.02;\n       \t\t}\n            \n            pos+=vec2(cos(angle),sin(angle))*0.003f;\n        }\n        \n    \tnew_data = vec4(pos,float(number)*step,angle);\n    }\n    \n    fragColor = new_data;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nconst int numcollatz = 64;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 prev = texture(iChannel1,(fragCoord) / iResolution.xy)*0.99;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    if(iFrame%2048==0) prev = vec4(0.0,0.0,0.0,0.0);\n    \n    for(int i =0; i<numcollatz;i++)\n    {        \n        int x = i%int(iResolution.x);\n        int y = i/int(iResolution.x);\n        \n        vec3 col = hsv2rgb(vec3(float(i)/128.0f, 0.3f,1.0f));\n        \n        vec2 rval = texture(iChannel0,vec2(float(x),float(y)) / iResolution.xy).xy;\n        if(length(uv-rval)<0.008f) prev+=vec4(col,1.0f)*0.024f;\n    }\n    \n    fragColor = prev;\n}","name":"Buf B","description":"","type":"buffer"}]}