{"ver":"0.1","info":{"id":"7l3XWN","date":"1639118624","viewed":97,"name":"bend the uvs","username":"wnu","description":"bending the uvs, looks like teeth","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bend"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nfloat getAngle(vec2 v1)\n{\n    //return atan(v1.x,v1.y) -atan(v2.x,v2.y);\n    return mod( atan(v1.x,v1.y) -atan(1.,0.), PI*2.)/PI/2.; //0 ... TWOPI\n    //return mod( atan(v1.x,v1.y) -atan(v2.x,v2.y), TWOPI) - PI; //-pi to +pi \n}\n\nvec2 rot(vec2 uv,float a,vec2 origin){\n    \n    vec2 p = (uv - origin);\n    \n    float c = cos(a);\n    float s = sin(a);\n    \n\treturn mat2(c,-s,s,c)*p + origin;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= R.x/R.y;\n\n    float a = fract(getAngle(uv)+0.)*PI*2.;\n    \n    float r = sin(iTime)/2.;\n    \n    float ra = a*5.; \n    vec2 uvr = rot(uv,ra,vec2(0.));\n    \n    float lh = 2.*r - uvr.y;\n    uvr.y -= lh;\n    \n    float l = smoothstep(-0.03,0.03,uvr.y);\n\n    vec3 col = vec3(l);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}