{"ver":"0.1","info":{"id":"lXKSDW","date":"1719976612","viewed":70,"name":"坏了坏了","username":"lbl","description":"破碎 破碎","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["voronoibreak"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":" \n//uniform sampler2D iChannel0; //@1\nfloat width = 300.; //@0\n//uniform float width;//@1\nfloat height = 300.;//@0\n//uniform float height;//@1\nfloat time = 0.;//@0\n//uniform float time//@1\nfloat duration = 5.;//@0\n//uniform float duration;\n//uniform vec4 iResolution;//@1\n//uniform vec2 gl_FragCoord;//@1\nfloat atime = 2.;\nconst int type = 1;\n\nconst float strength = .5;\n\nfloat random(vec2 par){\n   return fract(sin(dot(par.xy,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 random2(vec2 par){\n\tfloat rand = random(par);\n\treturn vec2(rand, random(par+rand));\n}\n\n#define POINTS 40\nvec4 filte(vec2 uv) {\n    vec2 point[POINTS];\n    for(int i = 0; i< POINTS; i++) {\n        point[i] = random2(vec2(float(i)));\n    }\n    float m_dist = 10000.f;\n    float id = 0.;\n    vec4 col = vec4(0.);\n    \n    for (int i = 0; i < POINTS; i++) {\n        vec2 dir = normalize( random2(vec2(float(i),float(i) + 11.) ) );\n        float v = (1. + random(dir)*.5) *.2;\n        vec2 ofst = dir * time * v;\n        mat3 T = mat3(1.,0.,0.,  0.,1.,0., -ofst,1.);  \n        \n        vec2 U = (T * vec3(uv,1.)).xy;\n        float m_dist = distance(U, point[i]);\n        bool match = true;\n        if(U.x > 0. && U.x < 1. && U.y > 0. && U.y < 1.) {\n            for(int j = 0; j < POINTS; j++) {\n                float dist = distance(U, point[j]);\n                if(dist < m_dist) match = false;\n            }\n        }else {\n            match = false;\n        }\n \n        if(match) {\n            col = texture(iChannel0,U);\n            break;\n        }\n    }\n    return col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n  \n time = fract(iTime/duration) * duration;//@0\n    // Output to screen\n    fragColor = filte(uv);\n}","name":"Image","description":"","type":"image"}]}