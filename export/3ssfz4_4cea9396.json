{"ver":"0.1","info":{"id":"3ssfz4","date":"1587813215","viewed":864,"name":"Alpha-premultiplied","username":"FabriceNeyret2","description":"Many games either have color bleeding at leaves border or switch off MIPmap&interp.\nLeft:   interpolate or MIPmap RGBA texture , then apply transparency & blend.\nRight: alpha-premultiply colors then interpolate or MIPmap aRaGaBA texture  then blend.","likes":16,"published":3,"flags":32,"usePreview":0,"tags":["interpolation","tuto"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 Bg = vec4(0,.8,1,1);                // Background color\nvoid mainImage( out vec4 O, vec2 u) {\n    vec2 U = 4.*u/R;\n    O = textureLod(iChannel0,U,2.*floor(U.y));\n    float a = O.a;\n    O = U.x<2. ? a * O + (1.-a) * Bg     //  L: blend( back, front, a )\n               :     O + (1.-a) * Bg  ;  //  R: front was alpha-premultiplied *before* MIPmap\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// --- leaf texture\n// adapted from \"shortest heart\" https://shadertoy.com/view/wtcXR7\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2  U = (u+u-R-.5)/R.y, C = u/u - abs(U).x,\n          A = 19. -8.*C,\n          B = 6. -C-C  -8.*C*C + U*16.;\n    O.ag =    C * A*A - B*B ;\n    O.ag = clamp(O/fwidth(O), 0.,1.).gg + .01/abs(U.x); }","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy","name":"Common","description":"","type":"common"}]}