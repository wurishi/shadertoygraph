{"ver":"0.1","info":{"id":"Md3fRj","date":"1533174628","viewed":206,"name":"rain tut","username":"littlemilk","description":"rain distort shader","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\nvec2 Rain( vec2 uv, float t) {\n\n    uv *= 3.;\n    t *= 40.;\n    \n    //augment square to rect\n   \tvec2 a = vec2(3., 1.);\n    vec2 st = uv*a;\n    \n    //get id of each column\n    vec2 id = floor(st);\n    \n    st.y += t*.22;\n    \n    //psuedo-random offset grid y\n    float n = fract(sin(id.x*76.12)*768.32);\n    st.y += n;\n    uv.y += n;\n    id = floor(st);\n    st = fract(st)-.5;\n    \n    t += fract(sin(id.x*76.12+id.y*1234.5)*768.32)*6.28;\n    float y = -sin(t + sin(t+sin(t)*.5))*.4;\n    vec2 p1 = vec2(0., y);\n    vec2 o1 = (st-p1)/a;\n    float d = length(o1);\n    \n   \tfloat m1 = smoothstep(.07, .0, d);\n    \n    vec2 o2 = (fract(uv*a.x*vec2(1., 2.)) -.5)/vec2(1., 2.);\n    d = length(o2);\n    \n    float m2 = smoothstep(.3*(.5 - st.y), .0, d)*smoothstep(-.1, .1, st.y-p1.y);\n    //if(st.x > .46 || st.y > .49) m1 = 1.;\n    \n\treturn vec2(m1*o1*33.+m2*o2*10.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 m = iMouse.xy / iResolution.xy;\n    \n    float t = iTime* .05+m.x;\n\tvec2 rainDistort = Rain(uv, t);    \n\n    \n    vec3 col = vec3(uv-rainDistort, 0.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}