{"ver":"0.1","info":{"id":"wssXzM","date":"1550942222","viewed":506,"name":"RAYMARCH","username":"Teppar","description":"a simple raymarch effect","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p)\n{\n    vec3 q = fract(p) *2.0 - 1.0;\n      \n    return length(q) - 0.25;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n float t = 0.0;\n    for(int i = 0; i < 32; i++)\n    {\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n        \n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0));\n    \n    float the = iTime * 0.25;\n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    vec3 o = vec3(0.0,iTime,iTime);\n    \n    float t = trace(o,r);\n    \n    vec3 c = vec3(sin(1.0*iTime)+1.5,sin(1.0*iTime)+1.5*0.5,0.01);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.1);\n\n    vec3 col = vec3(fog);\n\n    // Output to screen\n    fragColor = vec4(col*c,1.0);\n}","name":"Image","description":"","type":"image"}]}