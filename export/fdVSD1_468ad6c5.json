{"ver":"0.1","info":{"id":"fdVSD1","date":"1634630474","viewed":88,"name":"pokeball","username":"shuckity","description":"Made a pokeball. Thanks to Xibanya for helping me fix the last bit.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pokeballpokemonshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BLACK vec3(0.000, 0.000, 0.000)\n#define GRAY33 vec3(0.333, 0.333, 0.333) \n#define GRAY67 vec3(0.667, 0.667, 0.667) \n#define WHITE vec3(1.000, 1.000, 1.000)\n#define RED vec3(1.000, 0.000, 0.000)\n#define ORANGE vec3(0.894, 0.447, 0.000) \n#define YELLOW vec3(0.894, 0.894, 0.000) \n#define GREEN vec3(0.000, 1.000, 0.000) \n#define CYAN vec3(0.000, 0.707, 0.707)\n#define AZURE vec3(0.000, 0.447, 0.894) \n#define BLUE vec3(0.000, 0.000, 1.000) \n#define VIOLET vec3(0.447, 0.000, 0.894) \n#define ROSE vec3(0.894, 0.000, 0.447)\n#define BROWN vec3(0.500, 0.250, 0.000)\n#define GOLD vec3(0.830, 0.670, 0.220)\n#define FOREST_GREEN vec3(0.250, 0.500, 0.250)\n\n\nfloat line(float a, float d, float blur){\n float l = smoothstep(length(a), length(a)-d, blur);\n return l;\n }\nfloat circle(vec2 uv, vec2 p, float r, float blur){\n     float d = length(uv-p);\n     float c = smoothstep(r, r-blur, d);\n     \n     return c;\n     \n}float Band(float t, float start, float end, float blur) {\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1*step2;\n    \n    }\n    \nfloat rectangle(vec2 uv, float up, float down, float left, float right, float blur){\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, up, down, blur);\n    \n    return band1*band2;\n    \n    }\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float x = uv.x;\n    float y = uv.y;\n    float d = ((x-.5)*(x+.5))*.4;\n    \n    float innercircleb = circle(uv, vec2(0.1, 0.05), .18, .004); // border of the inner circle\n    float s = innercircleb;\n    float innercircleborder = circle(uv, vec2(0.1, 0.05), .17, .004); // border of the inner circle\n    float ICB = innercircleb-innercircleborder; // makes the border\n    vec3 ICBorder = vec3(ICB)*(WHITE - BLACK);\n    \n    float innercirclegray = circle(uv, vec2(0.1, 0.05), .17, .004); // the gray color\n    vec3 ICBG = vec3(innercirclegray)*(WHITE-vec3(.2,.2, .2));\n\n    float innercirclewb = circle(uv, vec2(0.1, 0.05), .11, .004); // border of the inner circle outer white\n    float innercirclewhiteb = circle(uv, vec2(0.1, 0.05), .1, .004); // border of the inner circle outer white\n    float ICWB = innercirclewb-innercirclewhiteb; // makes the border\n    vec3 ICWhiteB = vec3(ICWB)*(WHITE - BLACK);\n    \n    float innercirclew = circle(uv, vec2(0.1, 0.05), .1, .004); // makes the biggest white part of the inner circles\n    vec3 ICW = vec3(innercirclew)*(vec3(1., 1., 1.));\n    \n    float innercirclefb = circle(uv, vec2(0.1, 0.05), .07, .004); // final inner black circle\n    float innercirclefinalb = circle(uv, vec2(0.1, 0.05), .065, .004); // final inner black circle\n    float ICFB = innercirclefb-innercirclefinalb; // makes the circle\n    vec3 ICFinalB = vec3(ICFB)*(WHITE - BLACK);\n    \n    float innercircle = ICB + innercirclegray + ICWB + innercirclew + ICFB;\n    \n    vec3 InnerCircle = ICBorder+ICBG+ICWhiteB-ICW+ICFinalB;\n    \n    \n    float b = circle(uv, vec2(0., 0.), .4, .0004); // body\n     \n    float m = rectangle(vec2(x, (y+d)+.075), -.06, .06, -.4, .4, .00004); // middle\n    m *= b; // makes middle stay within the circle\n    b -= m; // minuses the middle line from the circle\n    float border = circle(uv, vec2(0., 0.), .39, .0004); // body border\n    float B = b-border; // this forms the border of the pokeball minus the middle line\n    vec3 Border = vec3(B)*(WHITE - BLACK);\n    \n    float r = circle(vec2(x+.2, (y+x*-.25)-.28), vec2(0., 0.), .1, .006); // reflection\n    vec3 R = vec3(r);\n   \n    vec3 M = vec3(m)*(WHITE-vec3(0.2, 0.2, 0.2)); // colors the middle line\n\n    \n    float mb1 = rectangle(vec2(x, (y+d)+.015), -.005, .005, -.4, .4, .00008); // border of the middle thingy    \n\n    vec3 Mb1 = vec3(mb1);\n \n    \n    float mb2 = rectangle(vec2(x, (y+d*1.2)+.145), -.005, .005, -.38, .38, .00008); // second middle border\n    vec3 Mb2 = vec3(mb2);\n \n    vec3 MB = Mb1 + Mb2; // both middle borders    \n        \n    //Bottom -= vec3(border);\n    \n    float bi = circle(uv, vec2(0., 0.), .4, .0004); // inside red color \n    //bi -= ic; to be redone when make circcles\n    \n    float bottom = circle(vec2(x, y+d*.05), vec2(0., -1.244), 1.208, .00005); // the white bottom half\n\n    //bottom -= (Ic+ic); to be redone when make circles\n    vec3 Bottom1 = vec3(bottom)*vec3(1.);// KEEP BOTTOM otherwise the top half messess up\n    vec3 Bottom = Bottom1*vec3(bi);\n    \n    bi -= m;\n   //bi -= Ic; to be redone when make circles\n    bi -= bottom; // this makes bi only the top red half of the ball\n    \n    vec3 BI = vec3(bi)*(WHITE-vec3(.99, 0., 0.));\n        \n    vec3 col = BI+(B)+(MB*2.)-R+(M*2.);\n    float innerCircleMix = (ICB + innercirclegray + ICWB);\n    col = mix(col, InnerCircle, innerCircleMix);\n    fragColor = vec4((WHITE-col),1.0);\n}","name":"Image","description":"","type":"image"}]}