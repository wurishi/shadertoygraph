{"ver":"0.1","info":{"id":"fdffDs","date":"1648217703","viewed":430,"name":"Scientific Sky Simulation","username":"blackholes","description":"//Just suppose the earth is a plane in Rectangular Coordinates,and the atmosphere is a layer endlessly \n//nestle up to the ground.\n//The effect is like this.","likes":6,"published":3,"flags":0,"usePreview":1,"tags":["sunset","sun","light","sky","effect","glass","sunlight","shader","atmosphere","sunrise","atmospheric","grassland","meadow","lawn","meadowland"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfloat pi=3.1415926535;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\nfloat ax=2.0*pi*uv.x;  \nfloat ay=-pi*(0.5-uv.y); \nfloat h =1.0/8.0;\n     //Distance of observation line in atmosphere\n     float D = h/sin(ay);\nfloat sky= 1.0-exp(-0.44975*D*8.0); \n\n    vec3 col = 9.2*vec3(sky,sky,sky);\n//Latitude\n   float beta = pi/6.0; \n   //地球的自转\n   float spin = 0.2/2.0*iTime;\n   //Horizontal angle\n   float sunax;\n    if(sin(spin)<.0) sunax=-acos((cos(spin))/(sqrt(cos(spin)*cos(spin)+sin(beta)*sin(beta)*sin(spin)*sin(spin))));\n    else sunax=acos((cos(spin))/(sqrt(cos(spin)*cos(spin)+sin(beta)*sin(beta)*sin(spin)*sin(spin))));\n   //Vertical angle\nfloat sunay=asin(cos(beta)*sin(spin)); \n//The length of sunlight passing through the atmosphere\n  float d = h/sin(sunay);\nvec3 suncolor = vec3(exp(-0.1666*d),exp(-0.44975*d),exp(-1.10894776*d));\n//Given the spherical coordinates of 2 points,caculate the angle between the two points\nfloat alpha=acos(cos(ay)*cos(sunay)*cos(ax-sunax)+sin(ay)*sin(sunay));\n//Mie scattering coefficient\nfloat G1 = 0.25;\nfloat G2 = 0.55;\nfloat G3 = 0.75;\nfloat G4 = -0.5;\n//Mie scattering formula\n float mie1 = 0.95*(1.0-G1*G1)/(1.0+G1*G1-2.0*G1*cos(alpha));\n float mie2 = 0.95*(1.0-G2*G2)/(1.0+G2*G2-2.0*G2*cos(alpha));\n float mie3 = 0.95*(1.0-G3*G3)/(1.0+G3*G3-2.0*G3*cos(alpha));\n float mie4 = 0.95*(1.0-G4*G4)/(1.0+G4*G4-2.0*G4*cos(alpha));\n col = sin(sunay)*col*(1.0-suncolor);\n col+=1.3*suncolor*(0.5*mie1+2.0*mie2+0.5*mie3+0.85*mie4)/3.85*(1.0-exp(-0.225*1.5*D));\n     float n = 0.0225/2.0;\n    //Micodustamount\n    float n2 = 1.5225/2.0;\ncol= col*vec3(exp(-D*(5.0*n+0.25*n2)),exp(-D*(5.0*n+0.51*n2)),exp(-D*(5.0*n+1.17*n2)))+suncolor*sin(sunay)*vec3(1.0-exp(-D*(0.3*n+0.25*n2)),1.0-exp(-D*(0.3*n+0.51*n2)),1.0-exp(-D*(0.3*n+1.17*n2)))*1.1;\n \n if(ay<0.0)col=vec3(0);\n    // Output to screen\n    fragColor = vec4(1.2*col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}