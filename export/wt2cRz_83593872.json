{"ver":"0.1","info":{"id":"wt2cRz","date":"1593627977","viewed":98,"name":"Little Kitty's Dithered Gradient","username":"samzanemesis","description":"Just a fun experiment","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//@samzanemesis\n\nfloat sdCapsule( vec2 p, vec2 a, vec2 b )\n{\n  vec2 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 vOriginalUV = fragCoord/iResolution.y;\n    vec2 uv = vOriginalUV * 10.0;\n    if( mod(uv.y, 2.0) > 1.0 )\n        uv.x -= 0.5;\n    uv = mod(uv, vec2(2.0, 1.0));\n    \n    //We make the geometry here\n    \n    //Line\n    float fGeo = 0.0;\n    float fLine = sdCapsule( uv, vec2(0.1,0.1), vec2(0.9,0.9));\n    fLine = min(sdCapsule( uv, vec2(0.9,0.1), vec2(0.1,0.9)),fLine);\n    //Dots\n    float fDots = distance(uv, vec2(1.25,0.25));\n    fDots = min(distance(uv, vec2(1.75,0.25)), fDots);\n    fDots = min(distance(uv, vec2(1.75,0.75)), fDots);\n    fDots = min(distance(uv, vec2(1.25,0.75)), fDots);\n    \n    //And we merge them\n    fGeo = min(fLine,fDots);\n    \n    //Here we set how much we are fading from 0 to 1\n    //Obviously in code you set this to something else like depth :)\n    float fFadeAnimation = sin( iTime + vOriginalUV.y );\n    \n    float fFade = 0.0;\n    \n    if( fGeo > fFadeAnimation )\n        fFade = 1.0;\n\n    // Time varying pixel color\n    vec3 col = vec3(fFade,fFade,fFade);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}