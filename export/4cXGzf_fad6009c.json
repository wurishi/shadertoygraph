{"ver":"0.1","info":{"id":"4cXGzf","date":"1703284785","viewed":52,"name":"Trefoil de goma","username":"Elsio","description":"remake","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d","torus","colors","balls","knot","twist","hsb"],"hasliked":0,"parentid":"msBcRy","parentname":"Mol√©cula"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define cor(x) (cos(x * 6. + vec4(0, 23, 21, 0)) * .6 + .6)\n#define rotAbs(p, a) length(p) * vec2(sin(a), cos(a))\n#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define wmod(x, w) mod(x, w) - w / 2.\n#define fatia 2. * PI/nContas\n#define t(x) cos(iTime * x)\n#define nContas 25.\n#define PI 3.14\n\nvec4 col;\nfloat map(vec3 p) {\n    p.y += t(2.7) * .1;\n    p.z -= 2.2;\n    p.xz *= rot(t(.35));\n\n    vec3 q = p;\n    float sep = .1, R = .6, r = .07, s = .16,\n          v1 = t(5.), v3 = t(3.3) * .5 - .5,\n          pz = - v3, qx = - v3,\n          idr, idl, tc, m, b;\n            \n    // linear\n    pz -= p.z;\n    idl = floor((pz + s/2.) / s) * s;\n    b = (nContas - 1.) / 2.;\n    p.z =  pz - s * clamp(round(pz / s), -b, b);\n    p.yx *= rot(idl * 2.3 + v1);\n    p.y = abs(p.y) - sep;\n\n    // radial\n    qx -= atan(q.x, q.y);\n    idr = floor(qx / (fatia)) * fatia;   \n    m = wmod(qx, fatia);\n    q.xy = rotAbs(q.xy, m);\n    q.y -= R;\n    q.yz *= rot(1.5 * idr + v1);\n    q.y = abs(q.y) - sep;\n\n    length(p) < length(q)\n        ? q = p, col = cor(idl)\n        : col = cor(idr);\n    \n    return length(q) - r;\n}\n\n\nvoid mainImage(out vec4 O, vec2 u){\n    float i, d, far = 5.,\n          a = iTime, s = 1.; \n\n    vec3 R = iResolution,\n         p, q, e = vec3(0, .001, 0),\n         D = normalize(vec3(u, R.y) - .5 * R);\n\n    while(i++ < 72.  &&  d < far  &&  s > .01)\n        s = map(p),\n        d += s, \n        p += s * D;\n        \n    vec3 L = normalize(vec3(cos(2.*a),sin(a), 0) - D);\n    vec3 N = normalize(\n                 vec3(\n                     map(p + e.yxx),\n                     map(p + e),\n                     map(p + e.xxy)\n                 ) - map(p)\n             );\n\n    if (d < far)\n        O = col * (-.08 * max(0., dot(L, N)) + .5),\n        O += pow(max(0., dot(L, N)), 200.) * .8;\n\n    else // bg\n        u = u * .05 + vec2(7, 5),\n        O.xy -= step(\n                    u -= O.xy = floor(u += u.x *= .577),\n                    mod(O.x + O.y, 3.) + --u.yx),\n        O = mod(O.yyxy, .8) * (1. - length(u) * .2) * .5 + .1;\n}","name":"Image","description":"","type":"image"}]}