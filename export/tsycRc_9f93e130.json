{"ver":"0.1","info":{"id":"tsycRc","date":"1603366975","viewed":241,"name":"Shore Flood 2","username":"Leasel","description":"Uses one buffer to perform a flood","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["buffer","single"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord*dif.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Single buffer, because the states are limited for the pixels which means I could trace all possible combinations,\n//which resulted in me getting the same result on paper when I used 1 or 2 buffers. But the 2 buffer makes it possible to\n//have equal value after the simulation and before the simulation. Which the 1 buffer can not exceed.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord*dif.xy;\n   //fragColor = vec4(max(fragColor.x-0.5,0.) + ((\n   //    \t\t\t\t  fragColor.x == 0. && \n   //    texture(iChannel0, uv + dif.xz).x != 0. &&\n   //    texture(iChannel0, uv - dif.xz).x != 0. &&\n   //    texture(iChannel0, uv + dif.zy).x != 0. &&\n   //    texture(iChannel0, uv - dif.zy).x != 0.) ? 1. : 0.)) + vec4((length(fragCoord-iMouse.xy) < 1.) ? 1. : 0.);\n    \n    float State = max(texture(iChannel0, uv).x-0.5,0.) + ((\n        texture(iChannel0, uv).x == 0. &&\n        (\n        \ttexture(iChannel0, uv + dif.xz).x != 0. ||\n        \ttexture(iChannel0, uv - dif.xz).x != 0. ||\n        \ttexture(iChannel0, uv + dif.zy).x != 0. ||\n        \ttexture(iChannel0, uv - dif.zy).x != 0.\n     \t)) ? 1. : 0.);\n    float Mouse = ((length(fragCoord-iMouse.xy) < 20. && iMouse.z > 0.) || (iTime < 0.1 && length(uv-vec2(0.5)) < 0.1 ) ? 1. : 0.);\n    \n    fragColor = vec4(min(State + Mouse, 1.));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define dif vec3(1./iResolution.xy,0.)","name":"Common","description":"","type":"common"}]}