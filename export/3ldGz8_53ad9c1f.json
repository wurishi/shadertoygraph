{"ver":"0.1","info":{"id":"3ldGz8","date":"1575605951","viewed":156,"name":"Easing - bezier -","username":"gaz","description":"2d","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["easing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/wdKXDy\n// ++++++++++++++++++++++++++++\n\n#define TIME mod(iTime,3.5)\nfloat T,SAM;\n#define Q(a) T=clamp((TIME-SAM)/a, 0.0, 1.0);SAM+=a;\n\n#define PI acos(-1.0)\n#define hue(h) clamp((abs(fract(h+vec3(3,2,1)/3.0)*6.0-3.0)-1.0),0.0,1.0)\n#define hsv(h,s,v) mix(vec3(1),hue(h),s)*v\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nvec2 planeUv(vec3 ro, vec3 rd, vec3 p)\n{\n    float z = dot(p-ro,vec3(0,0,1))/dot(rd,vec3(0,0,1));\n    p-=ro+rd*z;\n    return vec2(dot(p,vec3(1,0,0)),dot(p,vec3(0,1,0)));\n}\n\nfloat aa(float d)\n{\n    return smoothstep(0.01,0.0,d);\n}\n\nfloat fog(float z)\n{\n    return exp(-z*z*0.005);\n}\n\nfloat rbox(vec2 p, float size)\n{\n    p-=clamp(p,-size,size);\n    return abs(length(p)-0.1);\n}\n\n\nfloat deLine(vec2 p, vec2 a, vec2 b)\n{\n  vec2 pa = p - a;\n  vec2 ba = b - a;\n  float h = clamp(dot(pa, ba)/dot(ba, ba), 0.0, 1.0);\n  return length(pa - ba * h);\n}\n\nvec2 bezier(vec2 a, vec2 b, vec2 c, float t)\n{\n    t=clamp(t,0.0,1.0);\n    return mix(mix(a,b,t),mix(b,c,t),t);\n}\n\nvec2 bezier(vec2 a, vec2 b, vec2 c, vec2 d, float t){\n    return mix(bezier(a,b,c,t),bezier(b,c,d,t),t);\n}\n   \nvec2 bezierCurve(float t)\n{\n    vec2 a=vec2(0.3,0.5);\n    vec2 b=vec2(0.9,0.1);\n    return bezier(vec2(0),a,b,vec2(1),t);\n}\n\n// https://www.shadertoy.com/view/3slXD8\nfloat deEase(vec2 p)\n{\n    float ITR = 50.0, pitch = 1.0, t = 0.5, de = 1e10;\n    for(int j=0; j<2; j++)\n    {\n        float t0 = t-pitch*0.5;\n        pitch /= ITR;\n        for(float i=0.0; i<=ITR; i++) \n        {\n            float de0=distance(p,bezierCurve(t0));\n            if (de0<de)\n            {\n                de = de0;\n                t=t0;\n            }       \n            t0 += pitch;\n        }\n    }\n    return de;\n}\n\nfloat deEase2(vec2 p)\n{\n    float de=2.0;\n    for(float t=0.0;t<1.0;t+=1.0/20.0)\n    {\n        vec2 a=bezierCurve(t);\n        vec2 b=bezierCurve(t+1.0/20.0);\n        de=min(de,deLine(p,a,b));\n    }\n    return de;\n}\n\nfloat ease_bezier(float p)\n{\n    float ITR=30.0, pitch=1.0, t=0.5, de=1.0;   \n    for(int j=0; j<2; j++)\n    {\n        float t0=t-pitch*0.5;\n        pitch/=ITR;\n        for(float i=0.0; i<=ITR; i++) \n        {\n            float de0=abs(p-bezierCurve(t0).x);\n            if(de0<de)\n            {\n                de=de0;\n                t=t0;\n            }\n            t0+=pitch;\n        }\n    }\n    return bezierCurve(t).y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy*2.0-iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(1,3,8);\n    ro.xz*=rot(sin(TIME)*0.5-0.5);\n    ro.y*=sin(TIME);\n    vec3 ta=vec3(0,0,0);\n    vec3 w=normalize(ta-ro);\n    vec3 u=normalize(cross(w,vec3(0,1,0)));\n    vec3 rd=normalize(u*p.x+cross(u,w)*p.y+w*2.0);\n    vec3 col=hsv(0.6,0.8,0.5);\n    \n    SAM=0.0;\n    Q(1.0)\n    Q(1.0)\n\n    float de;\n    de=rbox(p,0.5)-0.02;\n    col=mix(col,hsv(0.0,0.7,0.7),aa(de));\n    de=deEase(p+0.5)-0.02;\n    col=mix(col,hsv(0.0,0.9,1.0),aa(de));\n    de=deEase2(p+0.5)-0.005;\n    col=mix(col,hsv(0.25,0.7,1.0),aa(de));\n    float x=fract(T);\n    de=1.0;\n    de=min(de,length(p-vec2(x,0)+0.5));\n    de=min(de,length(p-vec2(0,ease_bezier(x))+0.5));\n    de=min(de,length(p-vec2(x,ease_bezier(x))+0.5));\n    col=mix(col,hsv(0.35,0.7,1.0),aa(de-0.05));\n   \n    for(float i=-1.0;i<1.1;i++)\n    {\n        vec3 coord=vec3(0,0,i*1.5);\n        vec2 uv=planeUv(ro,rd,coord);\n        uv*=rot(ease_bezier(T)*PI);\n        float de=rbox(uv,0.6+ease_bezier(T)*1.2)-0.01;\n        col=mix(col,vec3(1),aa(de)*fog(length(coord-ro)));\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}