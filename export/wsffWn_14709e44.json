{"ver":"0.1","info":{"id":"wsffWn","date":"1588010782","viewed":79,"name":"Mandlebrot Viewer","username":"berzerkey","description":"Click, tap, or mouse left to right to zoom in and out.\n\nWill work on panning functionality.\n\nLearning from the Art of Code tutorial.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Inspired by Art of Code tutorial.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    vec2 m = iMouse.xy / iResolution.xy; // Returnes normalized mouse coordinates.\n    float zoom = pow(20.,-m.x*3.);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.y;\n    \n\n    vec2 c = uv*zoom*3.;\n    c += vec2 (-.832, 0.205);\n    vec2 z = vec2(0);\n    float iter = 0.;\n    const float max_iter = 500.;\n    \n    for (float i=0.;i<max_iter;i++)\n    {\n     \t  z = vec2(z.x*z.x - z.y*z.y, 2.*z.x*z.y) + c;\n        \n        if (length(z) > 2.) break;\n        \n        iter++;\n    }\n    \n    float f = iter/max_iter;\n    \n    vec3 col = vec3 (f,f*length(z*f),length(z)*f);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}