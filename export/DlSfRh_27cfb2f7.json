{"ver":"0.1","info":{"id":"DlSfRh","date":"1694230268","viewed":33,"name":"3D Fractal - NS","username":"novastruck","description":"3D Test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","3dtest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat2 rot(float a){\n    float b = cos(a);\n    float c = sin(a);\n\n    return mat2(b , -c , c, b);\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat getDist(vec3 p){\n    \n     vec3 pC = vec3( 0 , 1 , 6);       \n     pC.y = clamp(pC.y , 1.1 , 10.);\n     vec3 pB = (pC - p);\n      pB.zy *= rot(iMouse.y * .01);\n       pB.zx *= -rot(iMouse.x * .01);\n        pB.xy *= rot(iTime * .1);\n     for(float i = 0.; i < 10.; i++){\n     pB.xy =abs(pB.xy)- 1.5;  \n     pB.xy *= rot(iTime * .1);\n    \n    \n     \n     }\n     \n    \n     pB.yx *= rot((iTime));\n     \n     \n    float box = sdBox(pB, vec3( 1 , 1 , 1));          \n    return box;\n}\n\nfloat rayMarch(vec3 ro , vec3 rd){\n    float dO = 0.;\n    for(int i = 0; i < 100; i++){\n        vec3 p = ro + rd * dO;\n        float ds = getDist(p);\n        dO += ds;\n        if(dO > 100. || ds < 0.01) break;\n}\n    return dO;\n}\n\n\nvec3 getNormal(vec3 p){\n    float d = getDist(p);\n    vec2 e = vec2( 0.01 , 0);\n    vec3 n = d - vec3(getDist(p - e.xyy), getDist(p-e.yxy) ,getDist(p-e.yyx));\n    return normalize(n);\n}\n\nfloat getLight(vec3 p){\n    vec3 lightPos = vec3( 0 , 7 ,1);\n    vec3 l = normalize(lightPos - p);\n    vec3 n = getNormal(p);\n    float dif = dot(n , l);\n    float d = rayMarch(p + n , l);\n    if( d < length(lightPos - p)) dif*= 0.1;\n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord * 2. - iResolution.xy)/iResolution.y;\n    vec3 ro = vec3( 0 , 4 , -25);\n    \n    vec3 rd = normalize(vec3( uv.x ,uv.y , 1));\n    float d = rayMarch(ro , rd);\n    vec3 p = ro + rd * d;\n    float dif = getLight(p);\n    dif = .1/dif;\n    vec3 col = vec3(0.);\n        col = mix( vec3(0.) ,vec3(sin(iTime)+ 1. , .9 , 1.4), dif);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}