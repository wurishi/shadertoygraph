{"ver":"0.1","info":{"id":"wsy3RK","date":"1570540680","viewed":381,"name":"My own Quine xD","username":"rmmcal","description":"My \"hack\" Quine xD\n\n- I didn't know the concept before ...\nInspirations:\nhttps://www.shadertoy.com/view/llcyD2 @reinder\nhttps://www.shadertoy.com/view/Mlj3zR @NBickford\nhttps://www.shadertoy.com/view/Ml3SWj @ttg\n","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["text","quine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///////////////////////                                         \n// Brasil/Amazonas/Manaus                                       \n// My own quine \"hack\" animated and formatted (comic mode on)                                     \n// Created by Rodrigo Cal (twitter: @rmmcal) - 2019/10          \n///////////////////////                                         \n                                                                \nvec2 uv; uint st(uint i);                                       \nvec4 char(vec2 p, uint v){                                      \n    vec2 v2 = clamp(p / 16., 0.0, 1./16.)    -vec2(0.,1./16.) + \n                      vec2(float(v%16u)/16., -float(v/16u)/16.);\n    return vec4(texture(iChannel0,v2,-1.));                     \n}                                                              \nfloat hash(vec2 p) {                                         \n    p  = fract( -abs(p)*vec2(0.2357111317,0.31357321) )*77.;    \n    return ((   abs(fract( p.x*p.y*(p.x+p.y) ))  *2.)-1.)*2.;   \n}                                                               \nvec2 hash2d(vec2 p) {                                                               \n   return normalize(vec2(hash(p),hash(p+.1)));            \n}                                                               \nfloat getTimeShow(float time){                                  \n    float fade = ((iTime-time)*.1);                             \n    return (fade*=fade)*(fade*=fade)*(fade*=fade);              \n}                                                               \nfloat str( vec2 pos, float ts, float te, vec2 tp, float s,        \n           float sp, int is, int ie) {                          \n    vec2 tar = hash2d(pos*100.);                               \n    float chr = 0.;                                             \n    for ( uint i = uint(is); i < uint(ie); i++){\n       float f = getTimeShow(ts+float(i-uint(is))/64.);            \n       vec2 p = pos + tar * f*1.;\n       uint v = uint(((st(i/4u)>>(8u*(3u-(i % 4u)))) % 256u));  \n       vec2 translateCh = tp+vec2(float(i-uint(is))*sp, 0.); \n       float fade =  (1. - min(1., abs(f*100.)));\n       chr = max(chr, char(p/s-translateCh,v).x * fade);           \n    }  \n    return chr;                   \n}                                                               \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {       \n    uv = fragCoord/iResolution.xy;                              \n    vec2 res = iResolution.xy;                                  \n    vec3 aspectRatio = vec3(1.,iResolution.y/iResolution.x, 0.);\n    vec2 p = (uv-.5)*aspectRatio.xy;                            \n    float t = abs(fract(iTime*.1)*2.-1.);                       \n    vec3 col = 0.1*cos(iTime+uv.yxy*1.+vec3(0,2,4));      \n    fragColor = mix(fragColor , vec4(col,1.0), .8)*1.0;         \n    const int chrForLine = 64;                                  \n    float time = max(0., iTime-15.);                            \n    int ext = int(floor(time));                                 \n    for (int i = +ext; i < 19+ext; i++) {                       \n       float it = float(i);                                    \n       vec2 tp = vec2(-20.,10.0 -(mod(it,20.))*1.1);           \n       int st = i*chrForLine;                                  \n       int et = (i+1)*chrForLine;\n       if(i<63)fragColor.rgb+=str(p,it+5.,6.,tp,.025,.62,st,et);      \n    }                                                           \n}                                                               \nuint strChar[] = uint[1008] (0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x2f2f2042u,0x72617369u,0x6c2f416du,0x617a6f6eu,0x61732f4du,0x616e6175u,0x73202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x2f2f204du,0x79206f77u,0x6e207175u,0x696e6520u,0x22686163u,0x6b222061u,0x6e696d61u,0x74656420u,0x616e6420u,0x666f726du,0x61747465u,0x64202863u,0x6f6d6963u,0x206d6f64u,0x65206f6eu,0x29202020u,0x2f2f2043u,0x72656174u,0x65642062u,0x7920526fu,0x64726967u,0x6f204361u,0x6c202874u,0x77697474u,0x65723a20u,0x40726d6du,0x63616c29u,0x202d2032u,0x3031392fu,0x31302020u,0x20202020u,0x20202020u,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x76656332u,0x2075763bu,0x2075696eu,0x74207374u,0x2875696eu,0x74206929u,0x3b202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x76656334u,0x20636861u,0x72287665u,0x63322070u,0x2c207569u,0x6e742076u,0x297b2020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x76656332u,0x20763220u,0x3d20636cu,0x616d7028u,0x70202f20u,0x31362e2cu,0x20302e30u,0x2c20312eu,0x2f31362eu,0x29202020u,0x202d7665u,0x63322830u,0x2e2c312eu,0x2f31362eu,0x29202b20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20207665u,0x63322866u,0x6c6f6174u,0x28762531u,0x3675292fu,0x31362e2cu,0x202d666cu,0x6f617428u,0x762f3136u,0x75292f31u,0x362e293bu,0x20202020u,0x72657475u,0x726e2076u,0x65633428u,0x74657874u,0x75726528u,0x69436861u,0x6e6e656cu,0x302c7632u,0x2c2d312eu,0x29293b20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666c6f61u,0x74206861u,0x73682876u,0x65633220u,0x7029207bu,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x7020203du,0x20667261u,0x63742820u,0x2d616273u,0x2870292au,0x76656332u,0x28302e32u,0x33353731u,0x31313331u,0x372c302eu,0x33313335u,0x37333231u,0x2920292au,0x37372e3bu,0x20202020u,0x20202020u,0x72657475u,0x726e2028u,0x28202020u,0x61627328u,0x66726163u,0x74282070u,0x2e782a70u,0x2e792a28u,0x702e782bu,0x702e7929u,0x20292920u,0x202a322eu,0x292d312eu,0x292a322eu,0x3b202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x76656332u,0x20686173u,0x68326428u,0x76656332u,0x20702920u,0x7b202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202072u,0x65747572u,0x6e206e6fu,0x726d616cu,0x697a6528u,0x76656332u,0x28686173u,0x68287029u,0x2c686173u,0x6828702bu,0x2e312929u,0x293b2020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666c6f61u,0x74206765u,0x7454696du,0x6553686fu,0x7728666cu,0x6f617420u,0x74696d65u,0x297b2020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666c6f61u,0x74206661u,0x6465203du,0x20282869u,0x54696d65u,0x2d74696du,0x65292a2eu,0x31293b20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x72657475u,0x726e2028u,0x66616465u,0x2a3d6661u,0x6465292au,0x28666164u,0x652a3d66u,0x61646529u,0x2a286661u,0x64652a3du,0x66616465u,0x293b2020u,0x20202020u,0x20202020u,0x20202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666c6f61u,0x74207374u,0x72282076u,0x65633220u,0x706f732cu,0x20666c6fu,0x61742074u,0x732c2066u,0x6c6f6174u,0x2074652cu,0x20766563u,0x32207470u,0x2c20666cu,0x6f617420u,0x732c2020u,0x20202020u,0x20202020u,0x20202020u,0x20202066u,0x6c6f6174u,0x2073702cu,0x20696e74u,0x2069732cu,0x20696e74u,0x20696529u,0x207b2020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x76656332u,0x20746172u,0x203d2068u,0x61736832u,0x6428706fu,0x732a3130u,0x302e293bu,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666c6f61u,0x74206368u,0x72203d20u,0x302e3b20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666f7220u,0x28207569u,0x6e742069u,0x203d2075u,0x696e7428u,0x6973293bu,0x2069203cu,0x2075696eu,0x74286965u,0x293b2069u,0x2b2b297bu,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202066u,0x6c6f6174u,0x2066203du,0x20676574u,0x54696d65u,0x53686f77u,0x2874732bu,0x666c6f61u,0x7428692du,0x75696e74u,0x28697329u,0x292f3634u,0x2e293b20u,0x20202020u,0x20202020u,0x20202020u,0x20202076u,0x65633220u,0x70203d20u,0x706f7320u,0x2b207461u,0x72202a20u,0x662a312eu,0x3b202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202075u,0x696e7420u,0x76203d20u,0x75696e74u,0x28282873u,0x7428692fu,0x3475293eu,0x3e283875u,0x2a283375u,0x2d286920u,0x25203475u,0x29292929u,0x20252032u,0x35367529u,0x293b2020u,0x20202020u,0x20202076u,0x65633220u,0x7472616eu,0x736c6174u,0x65436820u,0x3d207470u,0x2b766563u,0x3228666cu,0x6f617428u,0x692d7569u,0x6e742869u,0x7329292au,0x73702c20u,0x302e293bu,0x20202020u,0x20202020u,0x20202066u,0x6c6f6174u,0x20666164u,0x65203d20u,0x2028312eu,0x202d206du,0x696e2831u,0x2e2c2061u,0x62732866u,0x2a313030u,0x2e292929u,0x3b202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202063u,0x6872203du,0x206d6178u,0x28636872u,0x2c206368u,0x61722870u,0x2f732d74u,0x72616e73u,0x6c617465u,0x43682c76u,0x292e7820u,0x2a206661u,0x6465293bu,0x20202020u,0x20202020u,0x20202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x72657475u,0x726e2063u,0x68723b20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x766f6964u,0x206d6169u,0x6e496d61u,0x67652820u,0x6f757420u,0x76656334u,0x20667261u,0x67436f6cu,0x6f722c20u,0x696e2076u,0x65633220u,0x66726167u,0x436f6f72u,0x64202920u,0x7b202020u,0x20202020u,0x20202020u,0x7576203du,0x20667261u,0x67436f6fu,0x72642f69u,0x5265736fu,0x6c757469u,0x6f6e2e78u,0x793b2020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x76656332u,0x20726573u,0x203d2069u,0x5265736fu,0x6c757469u,0x6f6e2e78u,0x793b2020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x76656333u,0x20617370u,0x65637452u,0x6174696fu,0x203d2076u,0x65633328u,0x312e2c69u,0x5265736fu,0x6c757469u,0x6f6e2e79u,0x2f695265u,0x736f6c75u,0x74696f6eu,0x2e782c20u,0x302e293bu,0x20202020u,0x76656332u,0x2070203du,0x20287576u,0x2d2e3529u,0x2a617370u,0x65637452u,0x6174696fu,0x2e78793bu,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666c6f61u,0x74207420u,0x3d206162u,0x73286672u,0x61637428u,0x6954696du,0x652a2e31u,0x292a322eu,0x2d312e29u,0x3b202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x76656333u,0x20636f6cu,0x203d2030u,0x2e312a63u,0x6f732869u,0x54696d65u,0x2b75762eu,0x7978792au,0x312e2b76u,0x65633328u,0x302c322cu,0x3429293bu,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x66726167u,0x436f6c6fu,0x72203d20u,0x6d697828u,0x66726167u,0x436f6c6fu,0x72202c20u,0x76656334u,0x28636f6cu,0x2c312e30u,0x292c202eu,0x38292a31u,0x2e303b20u,0x20202020u,0x20202020u,0x20202020u,0x636f6e73u,0x7420696eu,0x74206368u,0x72466f72u,0x4c696e65u,0x203d2036u,0x343b2020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666c6f61u,0x74207469u,0x6d65203du,0x206d6178u,0x28302e2cu,0x20695469u,0x6d652d31u,0x352e293bu,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x696e7420u,0x65787420u,0x3d20696eu,0x7428666cu,0x6f6f7228u,0x74696d65u,0x29293b20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x666f7220u,0x28696e74u,0x2069203du,0x202b6578u,0x743b2069u,0x203c2031u,0x392b6578u,0x743b2069u,0x2b2b2920u,0x7b202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202066u,0x6c6f6174u,0x20697420u,0x3d20666cu,0x6f617428u,0x69293b20u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202076u,0x65633220u,0x7470203du,0x20766563u,0x32282d32u,0x302e2c31u,0x302e3020u,0x2d286d6fu,0x64286974u,0x2c32302eu,0x29292a31u,0x2e31293bu,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202069u,0x6e742073u,0x74203d20u,0x692a6368u,0x72466f72u,0x4c696e65u,0x3b202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202069u,0x6e742065u,0x74203d20u,0x28692b31u,0x292a6368u,0x72466f72u,0x4c696e65u,0x3b202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202069u,0x6628693cu,0x36332966u,0x72616743u,0x6f6c6f72u,0x2e726762u,0x2b3d7374u,0x7228702cu,0x69742b35u,0x2e2c362eu,0x2c74702cu,0x2e303235u,0x2c2e3632u,0x2c73742cu,0x6574293bu,0x20202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x75696e74u,0x20737472u,0x43686172u,0x5b5d203du,0x2075696eu,0x745b3130u,0x30385d20u,0x28307832u,0x66326632u,0x66326675u,0x2c307832u,0x66326632u,0x66326675u,0x2c307832u,0x66326632u,0x66326675u,0x75696e74u,0x20737428u,0x75696e74u,0x2069297bu,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x72657475u,0x726e2073u,0x74724368u,0x61725b69u,0x5d3b2020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x7d202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x20202020u,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2020u,0x20202020u,0x20202020u,0x20202020u,0x2f2f2f20u,0x454e4420u,0x434f4445u,0x202f2f2fu,0x202d2d3du,0x3e205468u,0x616e6b73u,0x20666f72u,0x20776174u,0x6368696eu,0x6720203cu,0x3d2d2d20u,0x2f2f2020u,0x20202020u,0x20202020u,0x20202020u,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2f2fu,0x2f2f2020u,0x20202020u,0x20202020u,0x20202020u);\nuint st(uint i){                                                \n    return strChar[i];                                          \n} \n//////////////////////////////////////////////////\n/// END CODE /// --=> Thanks for watching  <=-- //  \n//////////////////////////////////////////////////","name":"Image","description":"","type":"image"}]}