{"ver":"0.1","info":{"id":"msKXDD","date":"1681149543","viewed":132,"name":"Rainbow Filter!","username":"Cast_E","description":"A rainbow effect using hsv to rgb converter (saturation included)\nSource: https://gist.github.com/983/e170a24ae8eba2cd174f","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["filter","rainbow","hsv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 hsv = vec3(uv.y + -iTime, 1, 1);\n    float saturation = 1.;\n    \n    vec4 k = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(hsv.xxx + k.xyz) * 6.0 - k.www);\n    \n    vec3 rainbow = vec3(hsv.z * mix(k.xxx, clamp(p - k.xxx, 0., saturation), hsv.y));\n    \n    vec3 color = rainbow * texture(iChannel0, uv).rgb;\n    \n    fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}]}