{"ver":"0.1","info":{"id":"XdjyWV","date":"1493852886","viewed":334,"name":"Honey","username":"leon","description":"Miam","likes":10,"published":1,"flags":64,"usePreview":0,"tags":["2d","sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dlXzr","filepath":"https://soundcloud.com/sofoclemusic/milk-honey","previewfilepath":"https://soundcloud.com/sofoclemusic/milk-honey","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Honey from Leon\n\n// music from: https://soundcloud.com/sofoclemusic/milk-honey\n\n// text\n#define grid 16.\n#define cell 1./16.\nconst int kA=177,kB=178,kC=179,kD=180,kE=181,kF=182,kG=183,kH=184,kI=185,kJ=186,kK=187;\nconst int kL=188,kM=189,kN=190,kO=191,kP=160,kQ=161,kR=162,kS=163,kT=164,kU=165,kV=166;\nconst int kW=167,kX=168,kY=169,kZ=170,kSpace=80;\n\nvec2 getSymbol (int key)\n{\n\treturn vec2(mod(float(key),grid),floor(float(key)/grid));\n}\n\nvec2 getLetterUV (vec2 target, vec2 offset)\n{\n    vec2 uvLetter = target;\n    uvLetter.x = uvLetter.x * 0.45 + 0.017;\n    uvLetter += offset / grid;\n    float crop = step(target.x, cell) * step(target.y, cell);\n    crop *= step(0., target.x) * step(0., target.y);\n    return uvLetter * crop;\n}\n\nfloat getText (vec2 target)\n{\n    int symbols[] = int[] ( kH,kO,kN,kE,kY );\n    int count = symbols.length();\n    vec2 space = vec2(0.5,1);\n    vec2 textUV = vec2(0);\n    for (int i = 0; i < count; ++i) {\n        vec2 offset = vec2(i,0)/grid;\n        offset.x -= float(count)/grid/2.;\n        offset.y -= cell/2.;\n    \ttextUV += getLetterUV(target - offset, getSymbol(symbols[i]));\n    }\n    return texture(iChannel1, textUV).r;\n}\n\nfloat signal (vec2 uv, float thin, float freq1, float freq2)\n{\n    const float height = 0.2;\n    uv.y += sin(uv.x*freq1+iTime)*0.2;\n    return abs(thin/(sin(uv.x*freq2-iTime)-uv.y/height));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0);\n    float unit = 1./iResolution.y;\n    vec2 uv = 2.*(fragCoord-.5*iResolution.xy)*unit;\n    float time = iTime;\n    vec3 honey = vec3(0.9, 0.45, 0.2);\n    vec3 light = vec3(1.,0.9,0.8);\n    \n    float thin = .5;\n    float freq1 = 4.;\n    float freq2 = 3.;\n    vec2 prev = vec2(uv.x-unit, signal(uv-vec2(unit,0), thin, freq1, freq2));\n    vec2 next = vec2(uv.x+unit, signal(uv+vec2(unit,0), thin, freq1, freq2));\n    vec2 tangent = normalize(next - prev);\n    vec2 normal = vec2(tangent.y, -tangent.x);\n    vec2 soundUV = vec2(abs(atan(normal.y, normal.x)/3.1459),0.);\n    float bounce = texture(iChannel0, soundUV).r;\n    freq1 = 4.+bounce*4.;\n    \n    vec2 uvText = (fragCoord-.5*iResolution.xy)*unit;\n    uvText *= 0.1*vec2(2,1);\n    vec2 uvTexture = 0.8*fragCoord/iResolution.xy;\n    float lum = texture(iChannel2, uvTexture).r;\n    float angle = lum * 3.14159 * 2. + time;\n    vec2 offset = vec2(cos(angle), sin(angle));\n    uv += offset*0.2*getText(uvText);\n    \n    uv.xy += normal * sin(uv.y*3.);\n    float plotter1 = signal(uv, thin, freq1, freq2);\n    float shade = 0.5+0.5*dot(normal, normalize(vec2(uv.x,plotter1)-(prev+next)/2.));\n        \n    thin = .25;\n    freq1 = 4.+bounce*10.;\n    freq2 = 8.+sin(time);\n    float plotter2 = signal(uv, thin, freq1, freq2);\n    \n    color = mix(color, honey, clamp(plotter1,0.,1.));\n    color = mix(color, honey, shade);\n    color = mix(color, light, clamp(plotter2,0.,1.));\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}