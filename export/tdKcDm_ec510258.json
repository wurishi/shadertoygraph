{"ver":"0.1","info":{"id":"tdKcDm","date":"1603055441","viewed":674,"name":"video hold effect","username":"mds2","description":"as the line sweeps across the image it triggers a video hold.  Move while it's doing so to produce weird distorted blobby shapes.\n\nAs seen on TikTok.","likes":5,"published":3,"flags":34,"usePreview":0,"tags":["simple","video","fun","effect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    float sweep = get_sweep_uv(iTime);\n    sweep *= iResolution.x;\n    \n    if (abs(fragCoord.x - sweep) < 5.0) {\n    \tfragColor = vec4(1.0, 0.7, 0.0, 1.0);\n        return;\n    }\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float sweep = get_sweep_uv(iTime);\n    sweep = max(sweep, 0.0);\n    \n    vec4 hold_color = texture(iChannel0, uv);\n    vec4 vid_color = texture(iChannel1, vec2(1. - uv.x, uv.y));\n    fragColor = mix(vid_color, hold_color, step(uv.x, sweep));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float sweep_period = 20.0;\nconst float pre_sweep_pause = 2.0;\nconst float post_sweep_pause = 10.0;\n\nfloat get_sweep_uv(in float time) {\n\tfloat result = (mod(time, sweep_period + pre_sweep_pause + post_sweep_pause) -\n           pre_sweep_pause) /\n        (sweep_period);\n    result = max(0.0, min(result, 1.0));\n    return result;\n}\n","name":"Common","description":"","type":"common"}]}