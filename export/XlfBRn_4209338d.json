{"ver":"0.1","info":{"id":"XlfBRn","date":"1510687563","viewed":357,"name":"Quasicrystal","username":"pn","description":"sine waves from every angle\n\nhttp://wealoneonearth.blogspot.com/2011/10/animated-quasicrystals.html","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["2d","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float tau = 6.2831;\n\n// Feel free to change these:\nconst float magnification = 3.0;\nconst float periodTimeInSeconds = 10.0;\nconst int waveCount = 15; // odd numbers are more interesting\nconst bool stepped = false;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.y * 1000.0;\n    float totalIntensity = 0.0;\n\tfloat recipWaveCount = 1.0 / float(waveCount);\n    float angle = tau * recipWaveCount;\n    mat2 rotation = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    vec2 direction = vec2(0, 1);\n   \tfor (int i = 0; i < waveCount; i++)\n    {\n        float spacePattern = dot(uv, direction) / magnification;\n        float timePattern = tau * iTime / periodTimeInSeconds;\n       \ttotalIntensity += sin(timePattern + spacePattern);\n        direction *= rotation;\n    }\n    totalIntensity *= recipWaveCount;\n    float smoothing = 0.02;\n    float steppedIntensity = smoothstep(-smoothing, smoothing, totalIntensity);\n    vec3 finalColor = vec3(stepped ? steppedIntensity : totalIntensity);\n\tfragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}