{"ver":"0.1","info":{"id":"Xc2yDR","date":"1722168006","viewed":52,"name":"Celestial Bloom","username":"ayat0","description":"kishimisu's YouTube tutorial ... https://www.shadertoy.com/view/mtyGWy\n\nThe end result has been modified into something original.\n\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","sdf","repetition","psychedelic","youtube","creativecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ref: kishimisu's youtube tutorial ... https://youtu.be/f4s1h2YETNY\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette(float t) {\n    vec3 a = vec3(0.395, 0.353, 0.291);\n    vec3 b = vec3(0.392, 0.242, 0.474);\n    vec3 c = vec3(0.978, 1.446, 1.322);\n    vec3 d = vec3(5.995, 5.848, 1.777);\n    \n    return a + b*cos( 6.28318*(c*t+d));\n}\n\nvec2 rotateUV(vec2 uv, float rot) {\n    float cs = cos(rot), si = sin(rot);\n    uv = vec2(\n        uv.x * cs + uv.y * si,\n        uv.x * si - uv.y * cs\n    );\n    return uv;\n}\n\nfloat rect(vec2 p) {\n    return abs(p.x) + abs(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    uv = rotateUV(uv, iTime*0.178);\n    \n    float d;\n    for (int i = 0; i < 6; i++) {\n        float fi = float(i);\n        \n        uv = fract(uv * 1.5) - 0.5;\n\n        if( i % 2 == 0 ){\n            d = length(uv) * exp(-length(uv0));\n        } else {\n            d = rect(uv) * exp(-rect(uv0));\n        }\n\n        vec3 col = palette(length(uv0) + fi*.62 + iTime*.17);\n\n        d *= 1.0 - length(uv);\n        d = sin(d*12. + iTime*fi*0.15)/6.;\n        d = abs(d);\n\n        d = pow(0.0025*fi / d, 1.2);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}