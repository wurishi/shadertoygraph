{"ver":"0.1","info":{"id":"Xd3yzS","date":"1519239953","viewed":490,"name":"Discard Motion Blur","username":"slerpy","description":"I just found out the \"discard\" statement exists!","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["simple","tutorial","blur","motion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\n#define ITER 40.\n#define QUA .001\n\n#define BLUR 8\n\nmat3 rz(float a)\n{\n    float s=sin(a), c=cos(a);\n    return mat3(c,s,0.,-s,c,0.,0.,0.,1.);\n}\n\nfloat map(vec3 p)\n{\n    p *= rz(floor(p.z));\n    vec3 q = abs(p - floor(p) - .5);\n    return max(q.z, min(q.x, q.y)) - .05;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ditter = texelFetch(iChannel0, ivec2(fragCoord)%8, 0).r;\n    if((iFrame - int(ditter*float(BLUR))) % BLUR != 0)discard;\n    \n    vec2 uv = (2.*fragCoord-iResolution.xy) / iResolution.y;\n\tvec3 rd = normalize(vec3(uv, 3))*rz(iDate.w/8.);\n    vec3 ro = vec2(0, 2.*iDate.w).xxy;\n    \n    float t=.0, i, m;\n\tfor(i=.0; i<ITER; i++){\n\t\tm = map(ro+rd*t);\n\t\tif(m<QUA)break;\n\t\tt += m;\n\t}\n    \n\tfragColor = vec2(1. - i/ITER, 1).xxxy;\n}","name":"Image","description":"","type":"image"}]}