{"ver":"0.1","info":{"id":"tddBDX","date":"1606169279","viewed":219,"name":"Vhs like Chroma Blur","username":"Hakiergrzonzo","description":"An attempt to simulate chroma blur from 5th generation vhs tape","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["chroma","80s"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define color_resX 7.0\n#define bias 30.0\n\nvec3 rgb2yuv(vec3 rgb)\n{\n    return vec3(0.299 * rgb.r + 0.587 * rgb.g + 0.114 * rgb.b,\n                -0.147 * rgb.r - 0.289 * rgb.g + 0.436 * rgb.b,\n                0.615 * rgb.r - 0.515 * rgb.g - 0.100 * rgb.b);\n}\n\nvec3 yuv2rgb(vec3 yuv)\n{\n    return vec3(yuv.r + 1.140 * yuv.b, yuv.r - 0.395*yuv.g - 0.581*yuv.b, yuv.r + 2.032*yuv.g);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int color_res = int((sin(iTime + fragCoord.y / 10.0) + 1.1) * color_resX + bias);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 sampled = texture(iChannel0, uv);\n\n    float Y = 0.299 * sampled.r + 0.587 * sampled.g + 0.114 * sampled.b;\n\t\n    vec2 colorData = vec2(0.0 , 0.0);\n    int samples = 10;\n    for (int i = 0; i < color_res; i++)\n    {\n        if (int(fragCoord.x) - i > 0)\n        {\n           \tvec2 uv = vec2(fragCoord.x- float(i), fragCoord.y)/iResolution.xy;\n            vec3 sampled = rgb2yuv(vec3(texture(iChannel0, uv)));\n            if (length(sampled.gb) > 0.02)\n            {\n                colorData += sampled.gb;\n            \tsamples++;\n            }\n\n        }\n    }\n    colorData = sin(colorData / float(samples) * 1.2);\n            \n    vec3 rgb = yuv2rgb(vec3(Y, colorData.x, colorData.y));\n    fragColor = vec4(rgb,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define Cut 0.3\n#define G_cut 0.3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 sample1 = texture(iChannel0, uv);\n    if (sample1.r < Cut && sample1.b < Cut && sample1.g > G_cut)\n    \tfragColor = texture(iChannel1, uv);\n    else\n        fragColor = sample1;\n}","name":"Buffer A","description":"","type":"buffer"}]}