{"ver":"0.1","info":{"id":"3tjfRz","date":"1598226295","viewed":430,"name":"Fiery waves","username":"papademos","description":"Trying to recreate something similar to an old fieryish effect I once came up with for my Amiga.","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["burn","waves","wave","fire","interference","effect","sine","fiery"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float wave(int i, vec2 p, float offset, float t) {\n    // Get some pseudo random values for the wave.\n    vec4 r = texture(iChannel0, vec2(float(i)/256.0,0)) * vec4(5, 3, 7, 11);\n    \n    // Get the y-distance from p.y to the wave.\n    float y = abs(\n        offset + .5 * (\n        \tsin(r.x*t + r.y*p.x) *\n        \tsin(r.z*t + r.w*p.x)) - \n        p.y);\n    \n    // Modify the distance value to get something visually pleasing.\n    return asin(clamp(1. - y*10., 0., 1.));\n}\n\nvoid mainImage(out vec4 pixel, in vec2 p) {\n    // Normalize the x-position, and scale y accordingly.\n    p /= iResolution.x;\n\n    // Add the waves.\n    float t = 10. + .3 * iTime;\n    float v =\n        wave(0, p,    .2, t) + \n        wave(1, p,    .4, t) +\n        wave(3, p,    .6, t) + \n        wave(4, p,    .8, t) +\n        wave(4, p.yx, .2, t) + \n        wave(5, p.yx, .4, t) +\n        wave(6, p.yx, .6, t) + \n        wave(7, p.yx, .8, t);\n    \n    // Set the output color.\n    // (If you wanna see more of the waves, you can fiddle with vec4(2, 2.5, 3, 0) values.)\n    pixel = vec4(v, v, v, 1) - vec4(2, 2.5, 3, 0);\n}","name":"Image","description":"","type":"image"}]}