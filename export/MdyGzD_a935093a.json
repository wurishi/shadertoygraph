{"ver":"0.1","info":{"id":"MdyGzD","date":"1453457886","viewed":5115,"name":"cdak vr","username":"tuba","description":"Ported cdak, made use of multipass, added vr","likes":76,"published":1,"flags":97,"usePreview":1,"tags":["vr","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Msl3Wr","filepath":"https://soundcloud.com/nummelin/cdak-by-quite-orange-party-version","previewfilepath":"https://soundcloud.com/nummelin/cdak-by-quite-orange-party-version","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// ported from here  http://pastebin.com/9PRG1PfN\n// using MinimalEffortTM methods :)\n//\n// original 4k intro by Quite & Orange\n// http://www.pouet.net/prod.php?which=55758\n\n\n//sampler s;\n//float2 j;\n//float4 h:register(c1);\n\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float3x3 mat3\n\n#define tex2D texture\n#define sampler sampler2D\n\nfloat saturate(float s) { return clamp(s, 0.0, 1.0); }\nfloat2 saturate(float2 s) { return clamp(s, 0.0, 1.0); }\nfloat3 saturate(float3 s) { return clamp(s, 0.0, 1.0); }\nfloat4 saturate(float4 s) { return clamp(s, 0.0, 1.0); }\n//float3 pow(float3 v, float e) { return pow(v, float3(e)); }\n//float3 pow(float3 v, int e) { return pow(v, float3(e)); }\n//float3 pow(float v, float3 e) { return pow(float3(v), e); }\n//float smoothstep(int a, int b, float t) { return smoothstep(float(a), float(b), t); }\n#define frac fract\n\nfloat3 mul(float3 v, float3x3 m) { return v * m; }\n#define lerp mix\n\nfloat automation_intensity()\n{\n    return 0.02 - sin(iTime*0.1) * 0.01;\n}\n\nvec2 _j() { return iResolution.xy; }\nvec4 _h() { return  vec4(automation_intensity()/*0.02*/,0.0,iMouse.x/iResolution.x*0.01,iMouse.y/iResolution.y); }\nfloat _t() { return iTime; }\n\n#define s iChannel0\n#define j _j()\n#define h _h()\n#define t _t()\n\nfloat3 q(sampler s,float2 x) {\n    float4 c=tex2D(s,x),d=float4(3.0/pow(c.w,.15));\n    return (saturate(c.x/d)*d).xyz;\n \n}\n \nfloat3x3 r(float3 g) {\n        g*=6.283;\n        float a=cos(g.x),b=sin(g.x),c=cos(g.y),d=sin(g.y),e=cos(g.z),f=sin(g.z);\n \n        return float3x3(c*e+b*d*f,-a*f,b*c*f-d*e,c*f-b*d*e,a*e,-d*f-b*c*e,a*d,b,a*c);\n \n}\n \nfloat3x3 w() {\n        return r(float3(0,0,smoothstep(-7.,30.,t))+smoothstep(170.,300.,t)*float3(1,2,3)+sin(float3(5,6,7)*(h.z*100.0+t*.002))*.08*(2.0-sin((h.z*2222.0-h.w))));\n}\n \nfloat f1(float3 p) {\n        float3 g=(frac(mul(p+sin(p.yzx*.1)/3.0,r(sin(p.z*.07)*float3(0,0,.3)*smoothstep(150.,60.,p.z)))/6.0)-.5)*6.0;\n        float d1=2.4*smoothstep(20.,70.,t)-abs(p.x)-1.0,d2=max(abs(g.x),max(abs(g.y),abs(g.z)))-2.3,d3=length(p-float3(0,0,84))-18.0;\n \n        d1=lerp(d1,min(max(d1,-.7-d2),max(d2-.3,abs(d1-.9)-1.3)),saturate(p.z*.03-.5+sin(p.z*.1)*.1));\n        d1=max(max(d1,25.0-p.z),p.z-116.0);\n        d1=min(min(max(d1,min(11.0-abs(d3),max(-p.z+84.0,abs(length(p.xy)-1.3+sin(p.z*.9)/5.0)-.2))),max(d1+.5,abs(d3-4.0)-.5))-.3*smoothstep(60.,110.,t),max(111.0-p.z,min(7.0-length(p.xy)/2.0-sin(p.z*.3+sin(p.z*2.0)/25.0+t/5.0)*6.0,max(-p.x+(p.z-105.0)*.1,abs(p.y)-1.8))));\n        g=mul(p-float3(0,0,44),r(pow(smoothstep(36.,4.,t)*float3(1,2,3),float3(2.))*step(-p.z,-15.0)));\n       \n        if(t<44.0)\n                d1=lerp(d1,max(abs(g.x),max(abs(g.y),abs(g.z)))-4.0-15.0*smoothstep(27.,36.,t),smoothstep(44.,30.,t));\n               \n        d1=min(d1,.8*max(p.z-14.0,abs(length(p.xy)-1.5-sin(floor(p.z))/5.0)-1.0));\n       \n        return d1;\n}\n \nfloat f2(float3 p) {\n        p.z-=138.0;\n        float ln=pow(1.0/length(p+3.0*sin(t*float3(5.1,7.6,1)*.023)),2.0)+pow(1.0/length(p+3.0*sin(t*float3(4.5,2.7,2)*.033)),2.0)+pow(1.0/length(p+3.0*sin(t*float3(6.3,3.7,4)*.031)),2.0)+pow(1.0/length(p+3.0*sin(t*float3(7.5,6.3,5)*.023)),2.0),d1=1.0/sqrt(ln)-1.0;\n       \n        d1=min(lerp(d1-.7,min(abs(d1+.3)-.3,abs(d1-.7)*2.0-.3),smoothstep(150.,230.,t-p.y/9.0)),abs(d1-5.0)-1.0+4.2*smoothstep(210.,150.,t+p.y/5.0))+2.0*smoothstep(230.,270.,t+p.y);\n       \n        return d1;\n}\n \nfloat3 k() {\n        return mul(float3(0,.1,-.1-2.0*smoothstep(170.,190.,t)),w())+float3(0,0,smoothstep(-.07,1.0,t*.005)*140.0);\n}\n \nfloat f(float3 p) {\n        p+=.01;\n        float d1=95.0-length(p-k()),d2=f2(p);\n \n        if(t<280.0)\n                d1=min(d1,f1(p))+14.0*smoothstep(140.,230.,t);\n        if(t>130.0)\n                d1=min(d1,d2);\n \n        d1*=.3;\n        p*=.3;\n        for(float i=0.0; i<4.0; i++) {\n                float3 q=1.0+i*i*.18*(1.0+4.0*(1.0+.3*sin(t*.001))*sin(float3(5.7,6.4,7.3)*i*1.145+.3*sin(h.w*.015)*(3.0+i))),g=(frac(p*q)-.5)/q;\n                d1=min(d1+.03,max(d1,max(abs(g.x),max(abs(g.y),abs(g.z)))-.148));\n        }\n       \n        return d1/.28;\n}\n \nfloat3 nn(float3 p) {\n        float2 e=float2(4e-3,0);\n \n        return -normalize(float3(f(p+e.xyy),f(p+e.yxy),f(p+e.yyx)));\n}\n \nfloat u(float3 p,float3 y) {\n        float o=.8,g=f(p),d;\n       \n        for(float i=0.0;i<1.0;i+=.25) {\n                d=i*.15+.025;\n                o-=float(g<.01)*(d-f(p-y*d))*2.0*(2.0-i*1.8);\n        }\n       \n        return o;\n}\n \nfloat4 p1(float2 vp/*:vpos*/)/*:color0*/ {\n        float2 x=(vp/*+.5*/)/j;\n        float3 c=float3(tex2D(s,x).x),b=tex2D(s,x).yzw;\n        float2 w=4e-4/j*j.x/pow(b.z+.03,.5)*(pow(b.y,2.0)+.1);\n        float3 e=float3(1,-1,0),_11=q(s,x+w*e.yy),_12=q(s,x+w*e.zy),_13=q(s,x+w*e.xy),_21=q(s,x+w*e.yz),_23=q(s,x+w*e.xz),_31=q(s,x+w*e.yx),_32=q(s,x+w*e.zx),_33=q(s,x+w*e.xx),v=_13+2.0*_23+_33-(_11+2.0*_21+_31),z=_11+2.0*_12+_13-(_31+2.0*_32+_33);\n \n        c=lerp((saturate(sqrt(sqrt(v*v*float3(.5,.01,1)+z*z*float3(.02,1,1)))*.4/pow(b.z,.3))*sqrt(h.x*50.0+1.0)+b.x*b.x*12.0/pow(b.z+.5,.6))*pow(b.y,1.1)*1.04,float3(h.x*70.0+h.x*smoothstep(50.,10.,t)*2.0),saturate(b.z/110.0-.1+h.x*3.0));\n        c=pow(c+saturate(1.0-c)*b.x,1.8*float3(1.8,1.2,1.1)-1.0+9.0/t+.1/(pow(float3(h.x*20.0),float3(3,4,3))+.05))*2.0;\n       \n        return c.xyzz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = p1(fragCoord);\n}\n\nvoid mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 fragRayOri, in vec3 fragRayDir )\n{\n    fragColor = p1(gl_FragCoord.xy/*fragCoord*/);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// ported from here  http://pastebin.com/9PRG1PfN\n// using MinimalEffortTM methods :)\n//\n// original 4k intro by Quite & Orange\n// http://www.pouet.net/prod.php?which=55758\n\n//sampler s;\n//float2 j;\n//float4 h:register(c1);\n\n#define float2 vec2\n#define float3 vec3\n#define float4 vec4\n#define float3x3 mat3\n\n#define tex2D texture\n#define sampler sampler2D\n\nfloat saturate(float s) { return clamp(s, 0.0, 1.0); }\nfloat2 saturate(float2 s) { return clamp(s, 0.0, 1.0); }\nfloat3 saturate(float3 s) { return clamp(s, 0.0, 1.0); }\nfloat4 saturate(float4 s) { return clamp(s, 0.0, 1.0); }\n//float3 pow(float3 v, float e) { return pow(v, float3(e)); }\n//float3 pow(float3 v, int e) { return pow(v, float3(e)); }\n//float3 pow(float v, float3 e) { return pow(float3(v), e); }\n//float smoothstep(int a, int b, float t) { return smoothstep(float(a), float(b), t); }\n#define frac fract\n\nfloat3 mul(float3 v, float3x3 m) { return v * m; }\n#define lerp mix\n\nvec2 _j() { return iResolution.xy; }\nvec4 _h() { return  vec4(0.0,0.0,iMouse.x/iResolution.x*0.01,iMouse.y/iResolution.y); }\nfloat _t() { return iTime; }\n\n#define s iChannel0\n#define j _j()\n#define h _h()\n#define t _t()\n\nfloat3 q(sampler s,float2 x) {\n    float4 c=tex2D(s,x),d=float4(3.0/pow(c.w,.15));\n    return (saturate(c.x/d)*d).xyz;\n \n}\n \nfloat3x3 r(float3 g) {\n        g*=6.283;\n        float a=cos(g.x),b=sin(g.x),c=cos(g.y),d=sin(g.y),e=cos(g.z),f=sin(g.z);\n \n        return float3x3(c*e+b*d*f,-a*f,b*c*f-d*e,c*f-b*d*e,a*e,-d*f-b*c*e,a*d,b,a*c);\n \n}\n \nfloat3x3 w() {\n        return r(float3(0,0,smoothstep(-7.,30.,t))+smoothstep(170.,300.,t)*float3(1,2,3)+sin(float3(5,6,7)*(h.z*100.0+t*.002))*.08*(2.0-sin((h.z*2222.0-h.w))));\n}\n \nfloat f1(float3 p) {\n        float3 g=(frac(mul(p+sin(p.yzx*.1)/3.0,r(sin(p.z*.07)*float3(0,0,.3)*smoothstep(150.,60.,p.z)))/6.0)-.5)*6.0;\n        float d1=2.4*smoothstep(20.,70.,t)-abs(p.x)-1.0,d2=max(abs(g.x),max(abs(g.y),abs(g.z)))-2.3,d3=length(p-float3(0,0,84))-18.0;\n \n        d1=lerp(d1,min(max(d1,-.7-d2),max(d2-.3,abs(d1-.9)-1.3)),saturate(p.z*.03-.5+sin(p.z*.1)*.1));\n        d1=max(max(d1,25.0-p.z),p.z-116.0);\n        d1=min(min(max(d1,min(11.0-abs(d3),max(-p.z+84.0,abs(length(p.xy)-1.3+sin(p.z*.9)/5.0)-.2))),max(d1+.5,abs(d3-4.0)-.5))-.3*smoothstep(60.,110.,t),max(111.0-p.z,min(7.0-length(p.xy)/2.0-sin(p.z*.3+sin(p.z*2.0)/25.0+t/5.0)*6.0,max(-p.x+(p.z-105.0)*.1,abs(p.y)-1.8))));\n        g=mul(p-float3(0,0,44),r(pow(smoothstep(36.,4.,t)*float3(1,2,3),float3(2))*step(-p.z,-15.0)));\n       \n        if(t<44.0)\n                d1=lerp(d1,max(abs(g.x),max(abs(g.y),abs(g.z)))-4.0-15.0*smoothstep(27.,36.,t),smoothstep(44.,30.,t));\n               \n        d1=min(d1,.8*max(p.z-14.0,abs(length(p.xy)-1.5-sin(floor(p.z))/5.0)-1.0));\n       \n        return d1;\n}\n \nfloat f2(float3 p) {\n        p.z-=138.0;\n        float ln=pow(1.0/length(p+3.0*sin(t*float3(5.1,7.6,1)*.023)),2.0)+pow(1.0/length(p+3.0*sin(t*float3(4.5,2.7,2)*.033)),2.0)+pow(1.0/length(p+3.0*sin(t*float3(6.3,3.7,4)*.031)),2.0)+pow(1.0/length(p+3.0*sin(t*float3(7.5,6.3,5)*.023)),2.0),d1=1.0/sqrt(ln)-1.0;\n       \n        d1=min(lerp(d1-.7,min(abs(d1+.3)-.3,abs(d1-.7)*2.0-.3),smoothstep(150.,230.,t-p.y/9.0)),abs(d1-5.0)-1.0+4.2*smoothstep(210.,150.,t+p.y/5.0))+2.0*smoothstep(230.,270.,t+p.y);\n       \n        return d1;\n}\n \nfloat3 k() {\n        return mul(float3(0,.1,-.1-2.0*smoothstep(170.,190.,t)),w())+float3(0,0,smoothstep(-.07,1.0,t*.005)*140.0);\n}\n \nfloat f(float3 p) {\n        p+=.01;\n        float d1=95.0-length(p-k()),d2=f2(p);\n \n        if(t<280.0)\n                d1=min(d1,f1(p))+14.0*smoothstep(140.,230.,t);\n        if(t>130.0)\n                d1=min(d1,d2);\n \n        d1*=.3;\n        p*=.3;\n        for(float i=0.0; i<4.0; i++) {\n                float3 q=1.0+i*i*.18*(1.0+4.0*(1.0+.3*sin(t*.001))*sin(float3(5.7,6.4,7.3)*i*1.145+.3*sin(h.w*.015)*(3.0+i))),g=(frac(p*q)-.5)/q;\n                d1=min(d1+.03,max(d1,max(abs(g.x),max(abs(g.y),abs(g.z)))-.148));\n        }\n       \n        return d1/.28;\n}\n \nfloat3 nn(float3 p) {\n        float2 e=float2(4e-3,0);\n \n        return -normalize(float3(f(p+e.xyy),f(p+e.yxy),f(p+e.yyx)));\n}\n \nfloat u(float3 p,float3 y) {\n        float o=.8,g=f(p),d;\n       \n        for(float i=0.0;i<1.0;i+=.25) {\n                d=i*.15+.025;\n                o-=float(g<.01)*(d-f(p-y*d))*2.0*(2.0-i*1.8);\n        }\n       \n        return o;\n}\n \nfloat4 p0(float2 vp/*:vpos*/)/*:color0*/ {\n        float2 x=(vp/*+.5*/)/j;\n        float3 \n            p=k(),\n            a=p,\n            y=mul(\n                normalize(\n                    float3(\n                        2.0*sin((vp-.5-j/2.0)/j.y),\n                \t\tcos(length((vp-.5-j/2.0)/j.y/2.0)*2.0*sqrt(2.0))\n                    )\n                ),\n              \tw());\n        float g=0.0,df=f(p)+.002;\n \n        for(float i=0.0;i<90.0/*&&abs(df)>.00032*/;i++) {\n                if (abs(df)<=.00032)\n                    break;\n                g+=smoothstep(.5,.07,df)*.01*(1.0-g);\n                p+=y*(df+.000001*length(p-a));\n                df=f(p)/*.x*/;\n        }\n       \n        float3 n=nn(p);\n        float d=length(p-a),o=u(p,n),z=2.0*pow(.5+dot(n,normalize(normalize(sin(p.yzx/5.0+h.w+float3(.14,.47,.33)*t))))/2.0,.5);\n       \n        z*=float(1.0+.8/pow(d+.5,.6)*sin(floor(p*1.6+sin(floor(p.yzx*3.0))*3.0)+sin(floor(p.zxy*1.7)))+.7*sin(t*.08+4.0*length(sin(floor(p*3.0+t*.1+sin(floor(p.yzx*133.0))*.24/d*sin(t*.3+floor(p.zxy*.15)))+sin(floor(p.yzx*7.0))))+step(length(frac(p.xy*7.0)-.5)+.6*sin(length(sin(t*float2(.5,.7)+floor(p.xy*7.0)))),.5))*sin(floor(p.z)*3.0+floor(p.x+sin(floor(p.yzx*15.0)))));\n        z+=pow(.45+.45*sin(o*38.0+t),19.0);\n       \n        return float4(z,g,o,d);\n}\n\nfloat4 p0_vr(float2 vp, float3 ori, float3 dir/*:vpos*/)/*:color0*/ {\n        float2 x=(vp/*+.5*/)/j;\n        float3 \n            p=k(),\n            a=p + ori,\n            y=mul(\n                normalize(\n                    dir\n                    /*\n                    float3(\n                        2.0*sin((vp-.5-j/2.0)/j.y),\n                \t\tcos(length((vp-.5-j/2.0)/j.y/2.0)*2.0*sqrt(2.0))\n                    )*/\n                ),\n              \tw());\n        float g=0.0,df=f(p)+.002;\n \n        for(float i=0.0;i<90.0/*&&abs(df)>.00032*/;i++) {\n                if (abs(df)<=.00032)\n                    break;\n                g+=smoothstep(.5,.07,df)*.01*(1.0-g);\n                p+=y*(df+.000001*length(p-a));\n                df=f(p)/*.x*/;\n        }\n       \n        float3 n=nn(p);\n        float d=length(p-a),o=u(p,n),z=2.0*pow(.5+dot(n,normalize(normalize(sin(p.yzx/5.0+h.w+float3(.14,.47,.33)*t))))/2.0,.5);\n       \n        z*=float(1.0+.8/pow(d+.5,.6)*sin(floor(p*1.6+sin(floor(p.yzx*3.0))*3.0)+sin(floor(p.zxy*1.7)))+.7*sin(t*.08+4.0*length(sin(floor(p*3.0+t*.1+sin(floor(p.yzx*133.0))*.24/d*sin(t*.3+floor(p.zxy*.15)))+sin(floor(p.yzx*7.0))))+step(length(frac(p.xy*7.0)-.5)+.6*sin(length(sin(t*float2(.5,.7)+floor(p.xy*7.0)))),.5))*sin(floor(p.z)*3.0+floor(p.x+sin(floor(p.yzx*15.0)))));\n        z+=pow(.45+.45*sin(o*38.0+t),19.0);\n       \n        return float4(z,g,o,d);\n}\n\n#define USE_MULTI_SAMPLING 0\n\nvec2 getSampleOffset(float i)\n{\n    i = floor(mod(i, 4.0));\n    \n    if (int(i) == 0) return vec2(0.0, 0.0);\n    else if (int(i) == 1) return vec2(0.0, 0.5);\n    else if (int(i) == 2) return vec2(0.5, 0.0);\n    else if (int(i) == 3) return vec2(0.5, 0.5);\n    else return vec2(0.0, 0.0);\n}\n\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n// temporal multi sampling-ish (reuse old samples without reprojecting:)\n// + adds some nice fps-dependant motion blur ;)    \n#if USE_MULTI_SAMPLING==2\n    fragColor = tex2D(iChannel0, fragCoord.xy / iResolution.xy) +\n        p0(fragCoord + getSampleOffset(iTime*60.0));\n    fragColor *= 0.5;    \n#elif USE_MULTI_SAMPLING==1\n    fragColor += p0(fragCoord + vec2(0.0, 0.0));\n    fragColor += p0(fragCoord + vec2(0.0, 0.5));\n    fragColor += p0(fragCoord + vec2(0.5, 0.0));\n    fragColor += p0(fragCoord + vec2(0.5, 0.5));\n    fragColor *= 0.25;  \n#else\n    fragColor = p0(fragCoord);\n#endif\n}\n\nvoid mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 fragRayOri, in vec3 fragRayDir )\n{\n    fragRayDir *= -1.0;\n    fragColor = p0_vr(fragCoord, fragRayOri, fragRayDir);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}