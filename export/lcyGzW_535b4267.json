{"ver":"0.1","info":{"id":"lcyGzW","date":"1712470090","viewed":92,"name":"Bezier01","username":"kenshin","description":"Bezier","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 p, vec2 c, float r)\n{\n    float d = length(p - c) - r;\n    return smoothstep(0.009, .0, d);\n}\n\nfloat line(vec2 p, vec2 a, vec2 b)\n{\n    vec2 ap = p - a;\n    vec2 ab = b - a;\n    float t = clamp(dot(ap, ab) / dot(ab, ab), .0, 1.);\n    vec2 c = a + ab * t;\n    float d = length(p - c);\n    return smoothstep(.004, .0, d);\n}\n\nvec2 bezier(vec2 a, vec2 b, vec2 c, float t)\n{\n    return mix(mix(a, c, t), mix(c, b, t), t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5)/iResolution.y;\n    vec3 col = vec3(.0);\n    float t = sin(iTime * .5) * .5 + .5;\n    vec2 A = vec2(-.8, -.4);\n    vec2 B = vec2(0.8, 0.4);\n    vec2 C = (iMouse.xy - iResolution.xy * .5)/iResolution.y;\n    vec2 D = mix(A, C, t);\n    vec2 E = mix(C, B, t);\n    vec2 F = mix(D, E, t);\n    col += vec3(1,0,0) * circle(uv, A, .01);\n    col += vec3(0,0,1) * circle(uv, B, .01);\n    col += vec3(1,1,1) * circle(uv, C, .01);\n\n    col += vec3(1,1,0) * circle(uv, F, .01);\n    \n    float SEGMENT_NUMS = 100.;\n    vec2 p, pp = A;\n    for(float i = 0.; i <= SEGMENT_NUMS; i++)\n    {\n        t = float(i / SEGMENT_NUMS);\n        p = bezier(A, B, C, t);\n        col += vec3(sin(t) * cos(t), sin(t), cos(t)) * line(uv, pp, p);\n        pp = p;\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}