{"ver":"0.1","info":{"id":"mtlSDr","date":"1674617336","viewed":275,"name":"Crystal's Basic Hypertile","username":"Crystalize","description":"Funny, I arrived at Apollonians before I got to this point. But I've always done things in a strange manner. :D","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["hypertile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define P 4.\n#define Q 5.\n\n#define iters 100\n\n#define TWOPI 6.283185307179586476\n#define PI 3.141592653589793238\n\nvec2 cmul(vec2 z, vec2 c) {\n    return vec2(z.x * c.x - z.y * c.y, z.x * c.y + z.y * c.x);\n}\n\nvec2 cdiv(vec2 z, vec2 c) {\n    float r = dot(c, c);\n    return vec2(z.x * c.x + z.y * c.y, z.y * c.x - z.x * c.y) / r;\n}\n\nvec2 conj(vec2 z) {\n    return vec2(z.x, -z.y);\n}\n\nvec2 hypershift(vec2 z, vec2 s) {\n    return cdiv(z + s, cmul(z,conj(s))+vec2(1.0,0.0));\n}\n\nvec2 hypertile(vec2 z, float p, float q) {\n    float spq = sin(PI/2. + PI/q);\n    float spp = sin(PI/p);\n    float pshift = (1./sqrt(spq*spq / (spp*spp) - 1.)) * (spq / spp - 1.);\n    vec2 rot = vec2(cos(TWOPI/p), sin(TWOPI/p));\n    for(int i = 0; i < iters; i++) {\n        z = cmul(z, rot);\n        z = hypershift(z,vec2(pshift,0.0));\n        z.x = abs(z.x);\n        z = hypershift(z,vec2(-pshift,0.0));\n    }\n    return z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord.xy - 0.5*iResolution.xy) / -iResolution.y;\n    \n    vec2 mouse = 2.0 * (iMouse.xy - 0.5*iResolution.xy) / iResolution.y;\n    \n    uv = hypershift(uv, mouse);\n    \n    uv = cdiv(uv + vec2(1.0,0.0),-uv+vec2(1.0,0.0));\n    uv.x = abs(uv.x);\n    uv = cdiv(uv - vec2(1.0,0.0),uv+vec2(1.0,0.0));\n    \n    uv = hypertile(uv, P, Q);\n    \n    vec3 col = 1.-vec3(length(uv));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}