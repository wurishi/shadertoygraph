{"ver":"0.1","info":{"id":"wdlfWl","date":"1589296893","viewed":99,"name":"LIFE LINE","username":"os0450","description":"Day 39: LIFE LINE","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["dailycodingchallenge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://iquilezles.org/articles/distfunctions\nfloat sdCapsule( vec2 p, vec2 a, vec2 b, float r )\n{\n  vec2 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h ) - r;\n}\n\nfloat letL(vec2 p) {\n    return min(sdCapsule(p, vec2(0.2, 0.0), vec2(0.2, 1.0), 0.1),\n               sdCapsule(p, vec2(0.2, 0.0), vec2(0.856, 0.0), 0.1));\n}\n\nfloat letI(vec2 p) {\n    return min(sdCapsule(p, vec2(0.4, 0.0), vec2(0.6, 0.0), 0.1),\n        \t   min(sdCapsule(p, vec2(0.5, 0.0), vec2(0.5, 1.0), 0.1),\n                   sdCapsule(p, vec2(0.4, 1.0), vec2(0.6, 1.0), 0.1)));\n}\n\nfloat letN(vec2 p) {\n    return min(sdCapsule(p, vec2(0.856, 1.0), vec2(0.856, 0.0), 0.1),\n               min(sdCapsule(p, vec2(0.0, 0.0), vec2(0.0, 1.0), 0.1),\n                   sdCapsule(p, vec2(0.0, 0.0), vec2(0.856, 1.0), 0.1)))/2.0;\n}\n\nfloat letF(vec2 p) {\n    return min(sdCapsule(p, vec2(0.2, 1.0), vec2(0.856, 1.0), 0.1),\n               min(sdCapsule(p, vec2(0.2, 0.0), vec2(0.2, 1.0), 0.1),\n                   sdCapsule(p, vec2(0.2, 0.56), vec2(0.8, 0.56), 0.1)))/2.0;\n}\n\nfloat letE(vec2 p) {\n    return min(sdCapsule(p, vec2(0.1, 0.0), vec2(0.1, 1.0), 0.1),\n        \t   min(sdCapsule(p, vec2(0.1, 0.0), vec2(0.856, 0.0), 0.1),\n                   min(sdCapsule(p, vec2(0.1, 0.5), vec2(0.8, 0.5), 0.1),\n                       sdCapsule(p, vec2(0.1, 1.0), vec2(0.856, 1.0), 0.1))));\n}\n\nfloat rand(vec2 p) {\n    return fract(sin(dot(p, vec2(3213213.312321, 98021.321391)))*32312.31231);\n}\n\nfloat intensity(vec2 p, float ot) {\n    vec2 id = floor(p*2.6);\n    p = fract(p*2.6)*1.1-0.05;\n\n    float t = ot*1.2-id.y;\n    float ph = fract(t);\n    float cy = floor(t);\n\n    vec2 q = p;\n    q *= 2.0;\n\n    float[8] ds = float[](\n        letL(q),\n        letI(q),\n        letF(q),\n        letE(q),\n        letL(q),\n        letI(q),\n        letN(q),\n        letE(q));\n\n    int fi = int(mod(cy+id.x-id.y*4.0, 8.0));\n    int ti = (fi+1)%8;\n    float df = ds[fi], dt = ds[ti];\n    float m = 1.0/(1.0+exp(-4.0*(ph*2.0-1.0)));\n    \n    return min(1.1, 1.0/exp(mix(df, dt, m)*40.0));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(intensity(p, iTime),\n                    intensity(p, iTime-0.1),\n                    intensity(p, iTime-0.2));\n    col -= log(1.0+length(p))*0.5;\n    \n    fragColor = vec4(col,1.0);\n    return;\n}","name":"Image","description":"","type":"image"}]}