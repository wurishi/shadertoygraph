{"ver":"0.1","info":{"id":"lfXSWX","date":"1705781983","viewed":111,"name":"Ψ gabor","username":"altunenes","description":"drawing the psychology symbol (Ψ) using gabors :-)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["gabor","psychology"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535897932384626433832795;\n//based on the https://www.shadertoy.com/view/cs3BWM\nvec3 gabor(vec2 uv, float lambda, float theta, float psi, float sigma, float gamma) {\n    float xP = uv.x * cos(theta) + uv.y * sin(theta);\n    float yP = -uv.x * sin(theta) + uv.y * cos(theta);\n    float gabor = exp(-.5 * (xP * xP + gamma * gamma * yP * yP) / (sigma * sigma)) * cos(2.0 * PI * xP / lambda + psi);\n    return vec3(gabor);\n}\nfloat osc(float minValue, float maxValue, float interval, float currentTime) {\n    return minValue + (maxValue - minValue) * 0.5 * (sin(2.0 * PI * currentTime / interval) + 1.0);\n}\n//based on the https://www.shadertoy.com/view/Dl2yzV\nbool PsiShape(vec2 p, float l, float s) {\n    float mdX = p.x * abs(p.x);\n    float wingShape = asin(mdX);\n    float blnd = smoothstep(0.7, 1.0, abs(p.x));\n    wingShape = mix(wingShape, sign(p.x) * PI * 0.5, blnd);\n    float wingY = abs(wingShape * l / PI);\n    float distToWing = abs(p.y - wingY);\n    float distToStem = abs(p.x);\n    float shape = min(distToWing, distToStem);\n    if (abs(p.x) < 2.17 && abs(p.y) > s) {\n        shape = 3.1;\n    }\n    return shape < 0.1;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = 2.5 * (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float Lambda_first = 0.1; // Base wavelength\n    float theta = osc(0.0, PI, 10.0, iTime); \n    float sigma = 0.05; // Gaussian envelope sigma\n    float gamma = 1.0;  // Aspect ratio\n    vec3 col = vec3(0.5);\n    float l = 2.15;\n    float s = 2.15;\n    int pX = 25; \n    int pY = 25; \n    float sp = 0.0; \n    for (int j = 0; j < pY; ++j) {\n        for (int i = 0; i < pX; ++i) {\n            float wave = sin(iTime + float(i) * 0.2 + float(j) * 0.2); \n            float lambda = Lambda_first + wave * 0.05; \n            vec2 patchPos = vec2(float(i) / float(pX) * 2.0 - 1.0 + float(i) * sp, \n                                 float(j) / float(pY) * 2.0 - 1.0 + float(j) * sp);\n            float psi = iTime * 15.5 + float(j) * PI / 25.0 + float(i) * PI / 10.0;\n            if (PsiShape(patchPos, l, s)) {\n                col += gabor(uv - patchPos, lambda, theta, psi, sigma, gamma);\n            }\n        }\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}