{"ver":"0.1","info":{"id":"MlcyRX","date":"1533391804","viewed":142,"name":"Fractal - Julia Set","username":"matt77hias","description":"The Julia set.\n\nSee also: https://www.shadertoy.com/view/llcyDS","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 ComplexMul(in vec2 z1, in vec2 z2) {\n    return vec2(z1.x * z2.x - z1.y * z2.y, \n                z1.x * z2.y + z1.y * z2.x);\n}\n\nvec2 ComplexSqr(in vec2 z) {\n    return ComplexMul(z, z);\n}\n\nconst vec2 c = vec2(-0.8f, 0.156f);\n\nfloat Julia(in vec2 z) {\n\tvec2 a = z;\n    for (int i = 0; i < 200; ++i) {\n        a = ComplexSqr(a) + c;\n        \n        if (1000.0f < dot(a, a)) {\n            return 0.0f;\n        }\n    }\n\n    return 1.0f;\n}\n\nconst float scale = 1.5f;\n\nvoid mainImage(out vec4 color, in vec2 fragCoord) {\n    vec2  uv    = fragCoord / iResolution.xy;\n    vec2  z     = scale * (2.0f * uv - 1.0f);\n    float value = Julia(z);\n    \n    color = vec4(0.0f, 0.0f, value, 1.0f);\n}","name":"Image","description":"","type":"image"}]}