{"ver":"0.1","info":{"id":"4s33R7","date":"1448530501","viewed":364,"name":"Really median blur","username":"SichaUA","description":"median blur","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define Radius 5\n\nfloat neighborhoods[Radius*Radius];\n\nint modCalc(int a, int b)\n{\n    int c = int(floor(float(a)/float(b)));\n    return int(a - b * c);\n}\n\nvoid getNeighborhoods(vec2 coord)\n{\n    vec2 step1 = vec2(1.0)/iResolution.xy;\n    \n    for (int i = 0; i < Radius*Radius; i++)\n    {\n        vec4 color = texture(iChannel0, coord + vec2(i/Radius, modCalc(i, Radius))*step1);\n        neighborhoods[i] = (color.r + color.g + color.b)/3.0;\n    }\n}\n\nvoid sortNeighborhoods()\n{\n    for(int i = 1; i < Radius*Radius; i++)\n    {\n         for (int j=0; j < (Radius*Radius -1); j++)\n         {\n              if (neighborhoods[j+1] > neighborhoods[j])\n              { \n                    float temp = neighborhoods[j];\n                    neighborhoods[j] = neighborhoods[j+1];\n                    neighborhoods[j+1] = temp;\n              }\n          }\n     }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    getNeighborhoods(uv);\n    sortNeighborhoods();\n    \n    fragColor.rgb = vec3(neighborhoods[(Radius*Radius)/2]);\n}","name":"","description":"","type":"image"}]}