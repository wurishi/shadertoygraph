{"ver":"0.1","info":{"id":"tl23D1","date":"1559461292","viewed":857,"name":"Ragged colors","username":"avin","description":"colors experiment\nRemake of my JS context2d demo https://avin.github.io/sketches/055_ragged_canvas.html","likes":18,"published":3,"flags":32,"usePreview":0,"tags":["colors","buffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PERIOD 20.\n\n#define hue(h) clamp( abs( fract(h + vec4(3,2,1,0)/3.) * 6. - 3.) -1. , 0., 1.)\n#define rand1(p) fract(sin(p* 78.233)* 43758.5453) \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    float aspect = iResolution.x / iResolution.y;\n    \n    float phaseInVal = float(iFrame)/PERIOD;\n    float phaseId = floor(phaseInVal);\n    float phaseVal = fract(phaseInVal);\n    float phase = floor(mod(phaseId, 2.)); // vert or horiz phase\n    \n    float speedF = .05; // speed factor    \n    float val = phaseVal*speedF;\n    float iVal = 1./PERIOD*speedF;               \n        \n    uv += sin(uv.yx*(50. + (rand1(phaseId+100.)-.5)*50.))*.005; //sin break boundary  \n    \n    uv.x +=(rand1(phaseId+200.)-.5)*.5;\n    uv.y +=(rand1(phaseId+300.)-.5)*.5;       \n    \n    float a = rand1(phaseId)*.5 - .25; \n    float ca = cos(a);\n    float sa = sin(a);\n    mat2 rot = mat2(ca, -sa, sa, ca);    \n    uv*=rot;\n    \n    float m = phase == 1. ? step(abs(uv.x), val) : step(abs(uv.y), val);    \n            \n    ouv -= phase == 1. ? vec2(sign(uv.x)*iVal, 0) : vec2(0, sign(uv.y)*iVal*aspect);            \n    vec3 col = texture(iChannel0, ouv).rgb;\n        \n    vec3 innerCol = hue( fract(phaseId/7.) ).rgb;  \n    \n    innerCol *= phaseVal; // gradient shadow       \n        \n    col = mix(col, innerCol, m);    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}