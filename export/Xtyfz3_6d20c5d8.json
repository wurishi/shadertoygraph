{"ver":"0.1","info":{"id":"Xtyfz3","date":"1543322200","viewed":119,"name":"Stripe shader","username":"nicolasrannou","description":"Smoothed stripes","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["stripes","smooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://andreashackel.de/tech-art/stripes-shader-1/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float stripeWidth = 30.; //in pixels\n    float colorWidth = .6; // 20 %\n    float offset = 0.5 * (1. - colorWidth); //\n    float direction = -0.7; // 0: vertical, 1. horizontal\n    vec3 labelColor = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n \n    \n    float normalizedWidth = iResolution.x / stripeWidth;\n    float pos = mix(uv.x, uv.y, direction) * normalizedWidth;\n    float fracPos = fract(pos);\n    float smoothed = smoothstep(offset, offset + 2. / stripeWidth, fracPos) * (1. - smoothstep(1. - offset - 2. / stripeWidth, 1. - offset, fracPos));\n\n    fragColor = vec4(labelColor * smoothed, smoothed);\n}","name":"Image","description":"","type":"image"}]}