{"ver":"0.1","info":{"id":"tsBfD3","date":"1590962540","viewed":201,"name":"Cubic Bezier Curve","username":"yp3y5akh0v","description":"Cubic Bezier Curve","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","bezier","curve","cubic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 40.\n#define R iResolution.xy\n#define M iMouse.xy\n#define t iTime\n#define T (0.5 + 0.5 * sin(t))\n#define D(p) (((p) - 0.5 * R) / R.y)\n#define inf 1e32\n\nfloat distToV(vec2 p, vec2 o, vec2 v) {\n    vec2 op = p - o;\n    vec2 ep = op - v;\n    float d = length(ep - dot(ep, v) / dot(v, v) * v);\n    if (dot(op, v) < 0.) {\n        d = length(op);\n    }    \n    if (dot(ep, -v) < 0.) {\n        d = length(ep);\n    }\n    return d;\n}\n\nvec2 CubicBezier(vec2 a, vec2 b, vec2 c, vec2 d, float q) {\n    vec2 qab = mix(a, b, q);\n    vec2 qbc = mix(b, c, q);\n    vec2 qcd = mix(c, d, q);\n    vec2 qabc = mix(qab, qbc, q);\n    vec2 qbcd = mix(qbc, qcd, q);\n    return mix(qabc, qbcd, q);\n}\n\nvoid mainImage(out vec4 o, in vec2 p)\n{\n    p = D(p);\n    vec2 m = D(M);    \n    vec2 a = vec2(0., -0.3);\n    vec2 b = vec2(-2. + T, 0.5);\n    vec2 c = vec2(2. - T, 0.5);\n    vec2 d = vec2(0., -0.3);\n    float s = inf;\n    \n    for (float i = 1.; i <= N; i++) {\n        vec2 qb0 = CubicBezier(a, b, c, d, (i - 1.) / N);\n        vec2 qb1 = CubicBezier(a, b, c, d, i / N);\n        float d = distToV(p, qb0, qb1 - qb0);\n        s = min(s, d);\n    }\n    \n    vec2 tab = mix(a, b, T);\n    vec2 tbc = mix(b, c, T);\n    vec2 tcd = mix(c, d, T);\n    vec2 tabc = mix(tab, tbc, T);\n    vec2 tbcd = mix(tbc, tcd, T);\n    vec2 tr = mix(tabc, tbcd, T);\n    \n    o = vec4(0.002 / s + 0.004 / length(p - tr));\n}","name":"Image","description":"","type":"image"}]}