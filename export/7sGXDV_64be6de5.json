{"ver":"0.1","info":{"id":"7sGXDV","date":"1635301155","viewed":215,"name":"triangle_atan ","username":"yyf1994","description":"triangle","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14\n\nvec3 drawTriangle( vec2 uv , vec2 origin  ,float height , float radius  ){\n  vec2 point = uv - origin ;\n  float h = point.y ;\n  float r = abs( atan(point.x , point.y) ) ;\n  if(  h < height && r < radius ){\n        return  vec3(1.0);\n  }\n  return vec3(0.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/min(iResolution.x,iResolution.y);\n    vec3 result = drawTriangle(uv , vec2(0.5 , 0.5) , 0.2 , PI/4.0  );\n    fragColor =  vec4(result , 1.0);\n \n}","name":"Image","description":"","type":"image"}]}