{"ver":"0.1","info":{"id":"Ws2yR3","date":"1587067172","viewed":148,"name":"RivLand","username":"rivFox","description":"Land","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["land"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\n// Official HSV to RGB conversion \n// source: https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n//https://gist.github.com/ayamflow/c06bc0c8a64f985dd431bd0ac5b557cd\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.0;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat DrawCircle(vec2 uv, float pixelSize, float time, float timeOffset, float paramA, float paramB)\n{\n    time+=timeOffset;\n    vec2 center = vec2(cos(time + timeOffset) + 0.5, sin(time + timeOffset)) - 0.5;\n    float dist = distance(uv, center) * paramA;\n   \tfloat circle = 1.0 - (step(paramB, dist));\n    float circleLight = 1.0 - clamp(dist, 0.0, 1.0);\n    circle+=circleLight;\n    \n    circle = clamp(circle, 0.0, 1.0);\n    return circle;\n}\n\n\nvec4 DrawMoon(vec2 uv, float pixelSize, float worldTime)\n{\n    float circle = DrawCircle(uv, pixelSize, worldTime, M_PI * 0.5, 4.0, 0.4);\n    return vec4(circle);\n}\n\nvec4 DrawRainbow(vec2 uv, float pixelSize, float worldTime)\n{\n    pixelSize *= 10.0;\n    \n    uv *= 0.8;\n    uv.y += 0.8;\n    \n    worldTime *= 2.0;\n    float vertAlpha = step(0.4, uv.y);\n    uv = rotateUV(uv, 3.0 -worldTime);\n\n\n    \n    float dist = distance(uv, vec2(0.0));\n    vec3 rgb = hsv2rgb(vec3( pow(dist, 5.0), 1.0, 1.0));\n    float alpha = 1.0 \n                - smoothstep(dist - pixelSize, dist + pixelSize, 0.9) \n                - smoothstep(1.1 - pixelSize, 1.1 + pixelSize, dist);\n                                \n\n    float angle = (atan(uv.y, uv.x))/(M_PI*2.0) + .5;\n    angle = 0.0 + smoothstep(0.5 - pixelSize, 0.5 + pixelSize, angle)\n                + (1.0 - smoothstep(0.1 - pixelSize, 0.1 + pixelSize, angle));\n\n    return vec4(rgb, alpha * angle * 0.6 * vertAlpha);\n}\n\nvec4 DrawSun(vec2 uv, float pixelSize, float worldTime)\n{\n    float circle = DrawCircle(uv,pixelSize, worldTime, 0.0, 1.5, 0.2);\n\n    vec3 yellow = vec3(1.0, 1.0, 0);\n    vec3 organge = vec3(1.0, 0.3, 0);\n    \n    float colorTime = (cos(worldTime * 2.0) + 1.0) * 0.5;\n    vec3 color = mix(yellow, organge, colorTime);\n    \n    vec3 sun = vec3(circle);\n    sun *= 1.1 - clamp(colorTime, 0.0, 0.5);               \n    sun *= color;\n      \n    return vec4(sun, circle);\n\t//return vec4(color, 1.0);\n}\n\nvec4 DrawWave(vec2 uv, float pixelSize, float period, float amplitude, float hight, float speed, vec3 color)\n{\n    float sinus = sin(uv.x * period + iTime * speed) * amplitude + hight;\n    float landMask = (1.0 - smoothstep(sinus - pixelSize, sinus + pixelSize, uv.y));\n    return vec4(landMask * color, landMask);\n}\n\nvec4 DrawLight(vec2 uv, float worldTime)\n{\n\tfloat light = DrawCircle(uv, 0.0, worldTime, 0.0, 0.3, 0.0);\n    \n    float isDay = clamp(sin(worldTime * 1.0), 0.0, 0.75);\n    \n    light *= isDay;\n    light = clamp(light, 0.0, 0.5);\n\tvec3 color = vec3(1.0, 1.0, 0.6);\n       \n    return vec4(vec3(light*color), light);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\tfloat worldTime = iTime * 0.2;\n    float pixelSize = 2.0 / iResolution.y;\n    \n    vec4 bg = vec4(0.0071, 0, 0.10, 1.0);\n    vec4 sun = DrawSun(uv, pixelSize, worldTime);\n    vec4 moon = DrawMoon(uv, pixelSize, worldTime);\n    vec4 rainbow = DrawRainbow(uv, pixelSize, worldTime);\n    vec4 wave1 = DrawWave(uv, pixelSize, 4.0, 0.10, -0.2, 1.0, vec3(0.125, 0.266, 0.203));\n    vec4 wave2 = DrawWave(uv, pixelSize, 3.0, 0.05, -0.4, 2.0, vec3(0.180, 0.372, 0.243));\n    vec4 wave3 = DrawWave(uv, pixelSize, 1.0, 0.03, -0.6, 5.0, vec3(0.254, 0.541, 0.309));\n    vec4 light = DrawLight(uv, worldTime);\n    \n    fragColor = bg;\n    fragColor = mix(fragColor, vec4(sun), sun.a);\n    fragColor = mix(fragColor, vec4(moon), moon.a);\n    fragColor = mix(fragColor, vec4(wave1), wave1.a);\n    fragColor = mix(fragColor, vec4(rainbow), rainbow.a);\n    fragColor = mix(fragColor, vec4(wave2), wave2.a);\n    fragColor = mix(fragColor, vec4(wave3), wave3.a);\n    fragColor = mix(fragColor, vec4(light), light.a);\n\n\n\n}","name":"Image","description":"","type":"image"}]}