{"ver":"0.1","info":{"id":"7sSGzR","date":"1616805769","viewed":51,"name":"Julia Sets Over Time","username":"sweggy","description":"julia sets with various constants","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 squ(in vec2 n){\n    return vec2(n.x*n.x - n.y*n.y, 2.0*n.x*n.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    //uv -= vec2(13.0,6.0);\n    //uv /= 19.0;\n    uv *= 1.5;\n    \n    vec2 z = uv;\n    \n    float iter = 0.0;\n    \n    for (int i = 0; i<500; i++){\n        z = squ(z);\n        z += vec2(0.5+0.2*sin(iTime/10.0),0.5+0.2*cos(iTime/10.0));\n        iter++;\n        if (length(z) > 2.0) break;\n    }\n    \n    float c = 0.0;\n    \n    if (length(z) > 2.0) c = iter/30.0; else c = 0.0;\n\n    // Time varying pixel color\n    vec3 col = vec3(c);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}