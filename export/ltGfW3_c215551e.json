{"ver":"0.1","info":{"id":"ltGfW3","date":"1544216646","viewed":96,"name":"naive volumetric rendering","username":"Bitmesh","description":"i have done no research at all on this and this is a very naive implementation","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["volume"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 256\n#define STEP_DISTANCE 0.01\n#define DENSITY 16.\n#define FREQUENCY .2\n\n#define LIGHT_CENTER vec3(0,0,0)\n#define CAMERA_CENTER vec3(0,0, iTime / 2.)\n\nfloat volumeCast(vec3 origin, vec3 dir)\n{\n    float d = 0.;\n    for(int i = 0; i < MAX_STEPS; i++)\n    {\n        origin += dir * STEP_DISTANCE;\n        \n        vec3 samplePos = (origin - LIGHT_CENTER);\n        \n        float o = 0.;\n        \n        o += texture(iChannel0, samplePos  * FREQUENCY).r;\n        o += texture(iChannel0, samplePos  * FREQUENCY*2.).g;\n        o += texture(iChannel0, samplePos  * FREQUENCY*4.).b;\n        o += texture(iChannel0, samplePos  * FREQUENCY*8.).a;\n        \n\t\td += DENSITY * STEP_DISTANCE * pow(max(0., (pow(o / 4., 4.)) * (origin.y * -1. + .5)), 2.); \n    }\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    float i = volumeCast(CAMERA_CENTER, vec3(uv.x,uv.y,1));\n    vec3 col = vec3(i, i, i);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}