{"ver":"0.1","info":{"id":"wdKcRy","date":"1603175192","viewed":142,"name":"Lightning (MM gen)","username":"RodzLabs","description":"Generated with Material Maker","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","generated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//---\n\nfloat rand(vec2 x) {\n    return fract(cos(dot(x, vec2(13.9898, 8.141))) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(vec3(dot(x, vec2(13.9898, 8.141)),\n                          dot(x, vec2(3.4562, 17.398)),\n                          dot(x, vec2(13.254, 5.867)))) * 43758.5453);\n}\n\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat fbm_value(vec2 coord, vec2 size, float seed) {\n\tvec2 o = floor(coord)+rand2(vec2(float(seed), 1.0-float(seed)))+size;\n\tvec2 f = fract(coord);\n\tfloat p00 = rand(mod(o, size));\n\tfloat p01 = rand(mod(o + vec2(0.0, 1.0), size));\n\tfloat p10 = rand(mod(o + vec2(1.0, 0.0), size));\n\tfloat p11 = rand(mod(o + vec2(1.0, 1.0), size));\n\tvec2 t = f * f * (3.0 - 2.0 * f);\n\treturn mix(mix(p00, p10, t.x), mix(p01, p11, t.x), t.y);\n}\n\nfloat fbm_perlin(vec2 coord, vec2 size, float seed) {\n\tvec2 o = floor(coord)+rand2(vec2(float(seed), 1.0-float(seed)))+size;\n\tvec2 f = fract(coord);\n\tfloat a00 = rand(mod(o, size)) * 6.28318530718;\n\tfloat a01 = rand(mod(o + vec2(0.0, 1.0), size)) * 6.28318530718;\n\tfloat a10 = rand(mod(o + vec2(1.0, 0.0), size)) * 6.28318530718;\n\tfloat a11 = rand(mod(o + vec2(1.0, 1.0), size)) * 6.28318530718;\n\tvec2 v00 = vec2(cos(a00), sin(a00));\n\tvec2 v01 = vec2(cos(a01), sin(a01));\n\tvec2 v10 = vec2(cos(a10), sin(a10));\n\tvec2 v11 = vec2(cos(a11), sin(a11));\n\tfloat p00 = dot(v00, f);\n\tfloat p01 = dot(v01, f - vec2(0.0, 1.0));\n\tfloat p10 = dot(v10, f - vec2(1.0, 0.0));\n\tfloat p11 = dot(v11, f - vec2(1.0, 1.0));\n\tvec2 t = f * f * (3.0 - 2.0 * f);\n\treturn 0.5 + mix(mix(p00, p10, t.x), mix(p01, p11, t.x), t.y);\n}\n\nfloat fbm_perlinabs(vec2 coord, vec2 size, float seed) {\n\treturn abs(2.0*fbm_perlin(coord, size, seed)-1.0);\n}\n\nfloat fbm_cellular(vec2 coord, vec2 size, float seed) {\n\tvec2 o = floor(coord)+rand2(vec2(float(seed), 1.0-float(seed)))+size;\n\tvec2 f = fract(coord);\n\tfloat min_dist = 2.0;\n\tfor(float x = -1.0; x <= 1.0; x++) {\n\t\tfor(float y = -1.0; y <= 1.0; y++) {\n\t\t\tvec2 node = rand2(mod(o + vec2(x, y), size)) + vec2(x, y);\n\t\t\tfloat dist = sqrt((f - node).x * (f - node).x + (f - node).y * (f - node).y);\n\t\t\tmin_dist = min(min_dist, dist);\n\t\t}\n\t}\n\treturn min_dist;\n}\n\nfloat fbm_cellular2(vec2 coord, vec2 size, float seed) {\n\tvec2 o = floor(coord)+rand2(vec2(float(seed), 1.0-float(seed)))+size;\n\tvec2 f = fract(coord);\n\tfloat min_dist1 = 2.0;\n\tfloat min_dist2 = 2.0;\n\tfor(float x = -1.0; x <= 1.0; x++) {\n\t\tfor(float y = -1.0; y <= 1.0; y++) {\n\t\t\tvec2 node = rand2(mod(o + vec2(x, y), size)) + vec2(x, y);\n\t\t\tfloat dist = sqrt((f - node).x * (f - node).x + (f - node).y * (f - node).y);\n\t\t\tif (min_dist1 > dist) {\n\t\t\t\tmin_dist2 = min_dist1;\n\t\t\t\tmin_dist1 = dist;\n\t\t\t} else if (min_dist2 > dist) {\n\t\t\t\tmin_dist2 = dist;\n\t\t\t}\n\t\t}\n\t}\n\treturn min_dist2-min_dist1;\n}\n\nfloat fbm_cellular3(vec2 coord, vec2 size, float seed) {\n\tvec2 o = floor(coord)+rand2(vec2(float(seed), 1.0-float(seed)))+size;\n\tvec2 f = fract(coord);\n\tfloat min_dist = 2.0;\n\tfor(float x = -1.0; x <= 1.0; x++) {\n\t\tfor(float y = -1.0; y <= 1.0; y++) {\n\t\t\tvec2 node = rand2(mod(o + vec2(x, y), size))*0.5 + vec2(x, y);\n\t\t\tfloat dist = abs((f - node).x) + abs((f - node).y);\n\t\t\tmin_dist = min(min_dist, dist);\n\t\t}\n\t}\n\treturn min_dist;\n}\n\nfloat fbm_cellular4(vec2 coord, vec2 size, float seed) {\n\tvec2 o = floor(coord)+rand2(vec2(float(seed), 1.0-float(seed)))+size;\n\tvec2 f = fract(coord);\n\tfloat min_dist1 = 2.0;\n\tfloat min_dist2 = 2.0;\n\tfor(float x = -1.0; x <= 1.0; x++) {\n\t\tfor(float y = -1.0; y <= 1.0; y++) {\n\t\t\tvec2 node = rand2(mod(o + vec2(x, y), size))*0.5 + vec2(x, y);\n\t\t\tfloat dist = abs((f - node).x) + abs((f - node).y);\n\t\t\tif (min_dist1 > dist) {\n\t\t\t\tmin_dist2 = min_dist1;\n\t\t\t\tmin_dist1 = dist;\n\t\t\t} else if (min_dist2 > dist) {\n\t\t\t\tmin_dist2 = dist;\n\t\t\t}\n\t\t}\n\t}\n\treturn min_dist2-min_dist1;\n}\n\nfloat fbm_cellular5(vec2 coord, vec2 size, float seed) {\n\tvec2 o = floor(coord)+rand2(vec2(float(seed), 1.0-float(seed)))+size;\n\tvec2 f = fract(coord);\n\tfloat min_dist = 2.0;\n\tfor(float x = -1.0; x <= 1.0; x++) {\n\t\tfor(float y = -1.0; y <= 1.0; y++) {\n\t\t\tvec2 node = rand2(mod(o + vec2(x, y), size)) + vec2(x, y);\n\t\t\tfloat dist = max(abs((f - node).x), abs((f - node).y));\n\t\t\tmin_dist = min(min_dist, dist);\n\t\t}\n\t}\n\treturn min_dist;\n}\n\nfloat fbm_cellular6(vec2 coord, vec2 size, float seed) {\n\tvec2 o = floor(coord)+rand2(vec2(float(seed), 1.0-float(seed)))+size;\n\tvec2 f = fract(coord);\n\tfloat min_dist1 = 2.0;\n\tfloat min_dist2 = 2.0;\n\tfor(float x = -1.0; x <= 1.0; x++) {\n\t\tfor(float y = -1.0; y <= 1.0; y++) {\n\t\t\tvec2 node = rand2(mod(o + vec2(x, y), size)) + vec2(x, y);\n\t\t\tfloat dist = max(abs((f - node).x), abs((f - node).y));\n\t\t\tif (min_dist1 > dist) {\n\t\t\t\tmin_dist2 = min_dist1;\n\t\t\t\tmin_dist1 = dist;\n\t\t\t} else if (min_dist2 > dist) {\n\t\t\t\tmin_dist2 = dist;\n\t\t\t}\n\t\t}\n\t}\n\treturn min_dist2-min_dist1;\n}\nvec2 transform2_clamp(vec2 uv) {\n\treturn clamp(uv, vec2(0.0), vec2(1.0));\n}\n\nvec2 transform2(vec2 uv, vec2 translate, float rotate, vec2 scale) {\n \tvec2 rv;\n\tuv -= translate;\n\tuv -= vec2(0.5);\n\trv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;\n\trv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;\n\trv /= scale;\n\trv += vec2(0.5);\n\treturn rv;\t\n}vec3 blend_normal(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*c1 + (1.0-opacity)*c2;\n}\n\nvec3 blend_dissolve(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\tif (rand(uv) < opacity) {\n\t\treturn c1;\n\t} else {\n\t\treturn c2;\n\t}\n}\n\nvec3 blend_multiply(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*c1*c2 + (1.0-opacity)*c2;\n}\n\nvec3 blend_screen(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*(1.0-(1.0-c1)*(1.0-c2)) + (1.0-opacity)*c2;\n}\n\nfloat blend_overlay_f(float c1, float c2) {\n\treturn (c1 < 0.5) ? (2.0*c1*c2) : (1.0-2.0*(1.0-c1)*(1.0-c2));\n}\n\nvec3 blend_overlay(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_overlay_f(c1.x, c2.x), blend_overlay_f(c1.y, c2.y), blend_overlay_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nvec3 blend_hard_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*0.5*(c1*c2+blend_overlay(uv, c1, c2, 1.0)) + (1.0-opacity)*c2;\n}\n\nfloat blend_soft_light_f(float c1, float c2) {\n\treturn (c2 < 0.5) ? (2.0*c1*c2+c1*c1*(1.0-2.0*c2)) : 2.0*c1*(1.0-c2)+sqrt(c1)*(2.0*c2-1.0);\n}\n\nvec3 blend_soft_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_soft_light_f(c1.x, c2.x), blend_soft_light_f(c1.y, c2.y), blend_soft_light_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_burn_f(float c1, float c2) {\n\treturn (c1==0.0)?c1:max((1.0-((1.0-c2)/c1)),0.0);\n}\n\nvec3 blend_burn(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_burn_f(c1.x, c2.x), blend_burn_f(c1.y, c2.y), blend_burn_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_dodge_f(float c1, float c2) {\n\treturn (c1==1.0)?c1:min(c2/(1.0-c1),1.0);\n}\n\nvec3 blend_dodge(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_dodge_f(c1.x, c2.x), blend_dodge_f(c1.y, c2.y), blend_dodge_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nvec3 blend_lighten(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*max(c1, c2) + (1.0-opacity)*c2;\n}\n\nvec3 blend_darken(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*min(c1, c2) + (1.0-opacity)*c2;\n}\n\nvec3 blend_difference(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*clamp(c2-c1, vec3(0.0), vec3(1.0)) + (1.0-opacity)*c2;\n}\nfloat draw_profile_fill(vec2 uv, float y, float dy, float w) {\n\treturn 1.0-clamp(sin(1.57079632679-atan(dy))*(1.0-uv.y-y)/w, 0.0, 1.0);\n}\n\nfloat draw_profile_curve(vec2 uv, float y, float dy, float w) {\n\treturn 1.0-clamp(sin(1.57079632679-atan(dy))*abs(1.0-uv.y-y)/w, 0.0, 1.0);\n}const float p_o249839_gradient_0_pos = 0.000000000;\nconst float p_o249839_gradient_0_r = 0.000000000;\nconst float p_o249839_gradient_0_g = 0.000000000;\nconst float p_o249839_gradient_0_b = 0.000000000;\nconst float p_o249839_gradient_0_a = 1.000000000;\nconst float p_o249839_gradient_1_pos = 0.890909091;\nconst float p_o249839_gradient_1_r = 0.433593750;\nconst float p_o249839_gradient_1_g = 0.787597656;\nconst float p_o249839_gradient_1_b = 1.000000000;\nconst float p_o249839_gradient_1_a = 1.000000000;\nconst float p_o249839_gradient_2_pos = 1.000000000;\nconst float p_o249839_gradient_2_r = 1.000000000;\nconst float p_o249839_gradient_2_g = 1.000000000;\nconst float p_o249839_gradient_2_b = 1.000000000;\nconst float p_o249839_gradient_2_a = 1.000000000;\nvec4 o249839_gradient_gradient_fct(float x) {\n  if (x < p_o249839_gradient_0_pos) {\n    return vec4(p_o249839_gradient_0_r,p_o249839_gradient_0_g,p_o249839_gradient_0_b,p_o249839_gradient_0_a);\n  } else if (x < p_o249839_gradient_1_pos) {\n    return mix(vec4(p_o249839_gradient_0_r,p_o249839_gradient_0_g,p_o249839_gradient_0_b,p_o249839_gradient_0_a), vec4(p_o249839_gradient_1_r,p_o249839_gradient_1_g,p_o249839_gradient_1_b,p_o249839_gradient_1_a), ((x-p_o249839_gradient_0_pos)/(p_o249839_gradient_1_pos-p_o249839_gradient_0_pos)));\n  } else if (x < p_o249839_gradient_2_pos) {\n    return mix(vec4(p_o249839_gradient_1_r,p_o249839_gradient_1_g,p_o249839_gradient_1_b,p_o249839_gradient_1_a), vec4(p_o249839_gradient_2_r,p_o249839_gradient_2_g,p_o249839_gradient_2_b,p_o249839_gradient_2_a), ((x-p_o249839_gradient_1_pos)/(p_o249839_gradient_2_pos-p_o249839_gradient_1_pos)));\n  }\n  return vec4(p_o249839_gradient_2_r,p_o249839_gradient_2_g,p_o249839_gradient_2_b,p_o249839_gradient_2_a);\n}\nconst float p_o232797_amount = 1.000000000;\nconst float p_o224452_amount = 1.000000000;\nconst float p_o19407_gradient_0_pos = 0.000000000;\nconst float p_o19407_gradient_0_r = 0.000000000;\nconst float p_o19407_gradient_0_g = 0.000000000;\nconst float p_o19407_gradient_0_b = 0.000000000;\nconst float p_o19407_gradient_0_a = 1.000000000;\nconst float p_o19407_gradient_1_pos = 0.504545000;\nconst float p_o19407_gradient_1_r = 0.550000012;\nconst float p_o19407_gradient_1_g = 0.550000012;\nconst float p_o19407_gradient_1_b = 0.550000012;\nconst float p_o19407_gradient_1_a = 1.000000000;\nconst float p_o19407_gradient_2_pos = 1.000000000;\nconst float p_o19407_gradient_2_r = 1.000000000;\nconst float p_o19407_gradient_2_g = 1.000000000;\nconst float p_o19407_gradient_2_b = 1.000000000;\nconst float p_o19407_gradient_2_a = 1.000000000;\nvec4 o19407_gradient_gradient_fct(float x) {\n  if (x < p_o19407_gradient_0_pos) {\n    return vec4(p_o19407_gradient_0_r,p_o19407_gradient_0_g,p_o19407_gradient_0_b,p_o19407_gradient_0_a);\n  } else if (x < p_o19407_gradient_1_pos) {\n    return mix(vec4(p_o19407_gradient_0_r,p_o19407_gradient_0_g,p_o19407_gradient_0_b,p_o19407_gradient_0_a), vec4(p_o19407_gradient_1_r,p_o19407_gradient_1_g,p_o19407_gradient_1_b,p_o19407_gradient_1_a), 0.5-0.5*cos(3.14159265359*(x-p_o19407_gradient_0_pos)/(p_o19407_gradient_1_pos-p_o19407_gradient_0_pos)));\n  } else if (x < p_o19407_gradient_2_pos) {\n    return mix(vec4(p_o19407_gradient_1_r,p_o19407_gradient_1_g,p_o19407_gradient_1_b,p_o19407_gradient_1_a), vec4(p_o19407_gradient_2_r,p_o19407_gradient_2_g,p_o19407_gradient_2_b,p_o19407_gradient_2_a), 0.5-0.5*cos(3.14159265359*(x-p_o19407_gradient_1_pos)/(p_o19407_gradient_2_pos-p_o19407_gradient_1_pos)));\n  }\n  return vec4(p_o19407_gradient_2_r,p_o19407_gradient_2_g,p_o19407_gradient_2_b,p_o19407_gradient_2_a);\n}\nconst float p_o19407_width = 0.020000000;\nconst float p_o126525_default_in1 = 0.000000000;\nconst float p_o126525_default_in2 = 0.500000000;\nconst float p_o58378_amount = 1.000000000;\nconst float p_o107398_default_in1 = 0.000000000;\nconst float p_o107398_default_in2 = -0.290000000;\nconst float p_o47177_repeat = 1.000000000;\nconst float p_o47177_rotate = 0.000000000;\nconst float p_o47177_gradient_0_pos = 0.000000000;\nconst float p_o47177_gradient_0_r = 0.000000000;\nconst float p_o47177_gradient_0_g = 0.000000000;\nconst float p_o47177_gradient_0_b = 0.000000000;\nconst float p_o47177_gradient_0_a = 1.000000000;\nconst float p_o47177_gradient_1_pos = 0.481818182;\nconst float p_o47177_gradient_1_r = 1.000000000;\nconst float p_o47177_gradient_1_g = 1.000000000;\nconst float p_o47177_gradient_1_b = 1.000000000;\nconst float p_o47177_gradient_1_a = 1.000000000;\nconst float p_o47177_gradient_2_pos = 1.000000000;\nconst float p_o47177_gradient_2_r = 0.000000000;\nconst float p_o47177_gradient_2_g = 0.000000000;\nconst float p_o47177_gradient_2_b = 0.000000000;\nconst float p_o47177_gradient_2_a = 1.000000000;\nvec4 o47177_gradient_gradient_fct(float x) {\n  if (x < p_o47177_gradient_0_pos) {\n    return vec4(p_o47177_gradient_0_r,p_o47177_gradient_0_g,p_o47177_gradient_0_b,p_o47177_gradient_0_a);\n  } else if (x < p_o47177_gradient_1_pos) {\n    return mix(vec4(p_o47177_gradient_0_r,p_o47177_gradient_0_g,p_o47177_gradient_0_b,p_o47177_gradient_0_a), vec4(p_o47177_gradient_1_r,p_o47177_gradient_1_g,p_o47177_gradient_1_b,p_o47177_gradient_1_a), 0.5-0.5*cos(3.14159265359*(x-p_o47177_gradient_0_pos)/(p_o47177_gradient_1_pos-p_o47177_gradient_0_pos)));\n  } else if (x < p_o47177_gradient_2_pos) {\n    return mix(vec4(p_o47177_gradient_1_r,p_o47177_gradient_1_g,p_o47177_gradient_1_b,p_o47177_gradient_1_a), vec4(p_o47177_gradient_2_r,p_o47177_gradient_2_g,p_o47177_gradient_2_b,p_o47177_gradient_2_a), 0.5-0.5*cos(3.14159265359*(x-p_o47177_gradient_1_pos)/(p_o47177_gradient_2_pos-p_o47177_gradient_1_pos)));\n  }\n  return vec4(p_o47177_gradient_2_r,p_o47177_gradient_2_g,p_o47177_gradient_2_b,p_o47177_gradient_2_a);\n}\nconst float p_o32998_translate_x = 0.000000000;\nconst float p_o32998_rotate = 0.000000000;\nconst float p_o32998_scale_x = 1.000000000;\nconst float p_o32998_scale_y = 43.780000000;\nconst int seed_o7904 = 42043;\nconst float p_o7904_scale_x = 2.000000000;\nconst float p_o7904_scale_y = 2.000000000;\nconst float p_o7904_folds = 0.000000000;\nconst float p_o7904_iterations = 4.000000000;\nconst float p_o7904_persistence = 0.740000000;\nfloat o7904_fbm(vec2 coord, vec2 size, int folds, int octaves, float persistence, float seed) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfor (int i = 0; i < octaves; i++) {\n\t\tfloat noise = fbm_cellular(coord*size, size, seed);\n\t\tfor (int f = 0; f < folds; ++f) {\n\t\t\tnoise = abs(2.0*noise-1.0);\n\t\t}\n\t\tvalue += noise * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\nconst float p_o220060_gradient_0_pos = 0.000000000;\nconst float p_o220060_gradient_0_r = 0.000000000;\nconst float p_o220060_gradient_0_g = 0.000000000;\nconst float p_o220060_gradient_0_b = 0.000000000;\nconst float p_o220060_gradient_0_a = 1.000000000;\nconst float p_o220060_gradient_1_pos = 0.504545000;\nconst float p_o220060_gradient_1_r = 0.550000012;\nconst float p_o220060_gradient_1_g = 0.550000012;\nconst float p_o220060_gradient_1_b = 0.550000012;\nconst float p_o220060_gradient_1_a = 1.000000000;\nconst float p_o220060_gradient_2_pos = 1.000000000;\nconst float p_o220060_gradient_2_r = 1.000000000;\nconst float p_o220060_gradient_2_g = 1.000000000;\nconst float p_o220060_gradient_2_b = 1.000000000;\nconst float p_o220060_gradient_2_a = 1.000000000;\nvec4 o220060_gradient_gradient_fct(float x) {\n  if (x < p_o220060_gradient_0_pos) {\n    return vec4(p_o220060_gradient_0_r,p_o220060_gradient_0_g,p_o220060_gradient_0_b,p_o220060_gradient_0_a);\n  } else if (x < p_o220060_gradient_1_pos) {\n    return mix(vec4(p_o220060_gradient_0_r,p_o220060_gradient_0_g,p_o220060_gradient_0_b,p_o220060_gradient_0_a), vec4(p_o220060_gradient_1_r,p_o220060_gradient_1_g,p_o220060_gradient_1_b,p_o220060_gradient_1_a), 0.5-0.5*cos(3.14159265359*(x-p_o220060_gradient_0_pos)/(p_o220060_gradient_1_pos-p_o220060_gradient_0_pos)));\n  } else if (x < p_o220060_gradient_2_pos) {\n    return mix(vec4(p_o220060_gradient_1_r,p_o220060_gradient_1_g,p_o220060_gradient_1_b,p_o220060_gradient_1_a), vec4(p_o220060_gradient_2_r,p_o220060_gradient_2_g,p_o220060_gradient_2_b,p_o220060_gradient_2_a), 0.5-0.5*cos(3.14159265359*(x-p_o220060_gradient_1_pos)/(p_o220060_gradient_2_pos-p_o220060_gradient_1_pos)));\n  }\n  return vec4(p_o220060_gradient_2_r,p_o220060_gradient_2_g,p_o220060_gradient_2_b,p_o220060_gradient_2_a);\n}\nconst float p_o220060_width = 0.020000000;\nconst float p_o220043_default_in1 = 0.000000000;\nconst float p_o220043_default_in2 = 0.500000000;\nconst float p_o220044_amount = 1.000000000;\nconst float p_o220045_default_in1 = 0.000000000;\nconst float p_o220045_default_in2 = 0.090000000;\nconst float p_o220046_repeat = 1.000000000;\nconst float p_o220046_rotate = 0.000000000;\nconst float p_o220046_gradient_0_pos = 0.000000000;\nconst float p_o220046_gradient_0_r = 0.000000000;\nconst float p_o220046_gradient_0_g = 0.000000000;\nconst float p_o220046_gradient_0_b = 0.000000000;\nconst float p_o220046_gradient_0_a = 1.000000000;\nconst float p_o220046_gradient_1_pos = 0.481818182;\nconst float p_o220046_gradient_1_r = 1.000000000;\nconst float p_o220046_gradient_1_g = 1.000000000;\nconst float p_o220046_gradient_1_b = 1.000000000;\nconst float p_o220046_gradient_1_a = 1.000000000;\nconst float p_o220046_gradient_2_pos = 1.000000000;\nconst float p_o220046_gradient_2_r = 0.000000000;\nconst float p_o220046_gradient_2_g = 0.000000000;\nconst float p_o220046_gradient_2_b = 0.000000000;\nconst float p_o220046_gradient_2_a = 1.000000000;\nvec4 o220046_gradient_gradient_fct(float x) {\n  if (x < p_o220046_gradient_0_pos) {\n    return vec4(p_o220046_gradient_0_r,p_o220046_gradient_0_g,p_o220046_gradient_0_b,p_o220046_gradient_0_a);\n  } else if (x < p_o220046_gradient_1_pos) {\n    return mix(vec4(p_o220046_gradient_0_r,p_o220046_gradient_0_g,p_o220046_gradient_0_b,p_o220046_gradient_0_a), vec4(p_o220046_gradient_1_r,p_o220046_gradient_1_g,p_o220046_gradient_1_b,p_o220046_gradient_1_a), 0.5-0.5*cos(3.14159265359*(x-p_o220046_gradient_0_pos)/(p_o220046_gradient_1_pos-p_o220046_gradient_0_pos)));\n  } else if (x < p_o220046_gradient_2_pos) {\n    return mix(vec4(p_o220046_gradient_1_r,p_o220046_gradient_1_g,p_o220046_gradient_1_b,p_o220046_gradient_1_a), vec4(p_o220046_gradient_2_r,p_o220046_gradient_2_g,p_o220046_gradient_2_b,p_o220046_gradient_2_a), 0.5-0.5*cos(3.14159265359*(x-p_o220046_gradient_1_pos)/(p_o220046_gradient_2_pos-p_o220046_gradient_1_pos)));\n  }\n  return vec4(p_o220046_gradient_2_r,p_o220046_gradient_2_g,p_o220046_gradient_2_b,p_o220046_gradient_2_a);\n}\nconst float p_o220042_translate_x = 0.000000000;\nconst float p_o220042_rotate = 0.000000000;\nconst float p_o220042_scale_x = 1.000000000;\nconst float p_o220042_scale_y = 43.780000000;\nconst int seed_o220041 = -7647;\nconst float p_o220041_scale_x = 2.000000000;\nconst float p_o220041_scale_y = 2.000000000;\nconst float p_o220041_folds = 0.000000000;\nconst float p_o220041_iterations = 4.000000000;\nconst float p_o220041_persistence = 0.740000000;\nfloat o220041_fbm(vec2 coord, vec2 size, int folds, int octaves, float persistence, float seed) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfor (int i = 0; i < octaves; i++) {\n\t\tfloat noise = fbm_cellular(coord*size, size, seed);\n\t\tfor (int f = 0; f < folds; ++f) {\n\t\t\tnoise = abs(2.0*noise-1.0);\n\t\t}\n\t\tvalue += noise * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\nconst float p_o221299_gradient_0_pos = 0.000000000;\nconst float p_o221299_gradient_0_r = 0.000000000;\nconst float p_o221299_gradient_0_g = 0.000000000;\nconst float p_o221299_gradient_0_b = 0.000000000;\nconst float p_o221299_gradient_0_a = 1.000000000;\nconst float p_o221299_gradient_1_pos = 0.504545000;\nconst float p_o221299_gradient_1_r = 0.550000012;\nconst float p_o221299_gradient_1_g = 0.550000012;\nconst float p_o221299_gradient_1_b = 0.550000012;\nconst float p_o221299_gradient_1_a = 1.000000000;\nconst float p_o221299_gradient_2_pos = 1.000000000;\nconst float p_o221299_gradient_2_r = 1.000000000;\nconst float p_o221299_gradient_2_g = 1.000000000;\nconst float p_o221299_gradient_2_b = 1.000000000;\nconst float p_o221299_gradient_2_a = 1.000000000;\nvec4 o221299_gradient_gradient_fct(float x) {\n  if (x < p_o221299_gradient_0_pos) {\n    return vec4(p_o221299_gradient_0_r,p_o221299_gradient_0_g,p_o221299_gradient_0_b,p_o221299_gradient_0_a);\n  } else if (x < p_o221299_gradient_1_pos) {\n    return mix(vec4(p_o221299_gradient_0_r,p_o221299_gradient_0_g,p_o221299_gradient_0_b,p_o221299_gradient_0_a), vec4(p_o221299_gradient_1_r,p_o221299_gradient_1_g,p_o221299_gradient_1_b,p_o221299_gradient_1_a), 0.5-0.5*cos(3.14159265359*(x-p_o221299_gradient_0_pos)/(p_o221299_gradient_1_pos-p_o221299_gradient_0_pos)));\n  } else if (x < p_o221299_gradient_2_pos) {\n    return mix(vec4(p_o221299_gradient_1_r,p_o221299_gradient_1_g,p_o221299_gradient_1_b,p_o221299_gradient_1_a), vec4(p_o221299_gradient_2_r,p_o221299_gradient_2_g,p_o221299_gradient_2_b,p_o221299_gradient_2_a), 0.5-0.5*cos(3.14159265359*(x-p_o221299_gradient_1_pos)/(p_o221299_gradient_2_pos-p_o221299_gradient_1_pos)));\n  }\n  return vec4(p_o221299_gradient_2_r,p_o221299_gradient_2_g,p_o221299_gradient_2_b,p_o221299_gradient_2_a);\n}\nconst float p_o221299_width = 0.020000000;\nconst float p_o221282_default_in1 = 0.000000000;\nconst float p_o221282_default_in2 = 0.500000000;\nconst float p_o221283_amount = 1.000000000;\nconst float p_o221284_default_in1 = 0.000000000;\nconst float p_o221284_default_in2 = 0.230000000;\nconst float p_o221285_repeat = 1.000000000;\nconst float p_o221285_rotate = 0.000000000;\nconst float p_o221285_gradient_0_pos = 0.000000000;\nconst float p_o221285_gradient_0_r = 0.000000000;\nconst float p_o221285_gradient_0_g = 0.000000000;\nconst float p_o221285_gradient_0_b = 0.000000000;\nconst float p_o221285_gradient_0_a = 1.000000000;\nconst float p_o221285_gradient_1_pos = 0.481818182;\nconst float p_o221285_gradient_1_r = 1.000000000;\nconst float p_o221285_gradient_1_g = 1.000000000;\nconst float p_o221285_gradient_1_b = 1.000000000;\nconst float p_o221285_gradient_1_a = 1.000000000;\nconst float p_o221285_gradient_2_pos = 1.000000000;\nconst float p_o221285_gradient_2_r = 0.000000000;\nconst float p_o221285_gradient_2_g = 0.000000000;\nconst float p_o221285_gradient_2_b = 0.000000000;\nconst float p_o221285_gradient_2_a = 1.000000000;\nvec4 o221285_gradient_gradient_fct(float x) {\n  if (x < p_o221285_gradient_0_pos) {\n    return vec4(p_o221285_gradient_0_r,p_o221285_gradient_0_g,p_o221285_gradient_0_b,p_o221285_gradient_0_a);\n  } else if (x < p_o221285_gradient_1_pos) {\n    return mix(vec4(p_o221285_gradient_0_r,p_o221285_gradient_0_g,p_o221285_gradient_0_b,p_o221285_gradient_0_a), vec4(p_o221285_gradient_1_r,p_o221285_gradient_1_g,p_o221285_gradient_1_b,p_o221285_gradient_1_a), 0.5-0.5*cos(3.14159265359*(x-p_o221285_gradient_0_pos)/(p_o221285_gradient_1_pos-p_o221285_gradient_0_pos)));\n  } else if (x < p_o221285_gradient_2_pos) {\n    return mix(vec4(p_o221285_gradient_1_r,p_o221285_gradient_1_g,p_o221285_gradient_1_b,p_o221285_gradient_1_a), vec4(p_o221285_gradient_2_r,p_o221285_gradient_2_g,p_o221285_gradient_2_b,p_o221285_gradient_2_a), 0.5-0.5*cos(3.14159265359*(x-p_o221285_gradient_1_pos)/(p_o221285_gradient_2_pos-p_o221285_gradient_1_pos)));\n  }\n  return vec4(p_o221285_gradient_2_r,p_o221285_gradient_2_g,p_o221285_gradient_2_b,p_o221285_gradient_2_a);\n}\nconst float p_o221281_translate_x = 0.000000000;\nconst float p_o221281_rotate = 0.000000000;\nconst float p_o221281_scale_x = 1.000000000;\nconst float p_o221281_scale_y = 43.780000000;\nconst int seed_o221280 = 16006;\nconst float p_o221280_scale_x = 2.000000000;\nconst float p_o221280_scale_y = 2.000000000;\nconst float p_o221280_folds = 0.000000000;\nconst float p_o221280_iterations = 4.000000000;\nconst float p_o221280_persistence = 0.740000000;\nfloat o221280_fbm(vec2 coord, vec2 size, int folds, int octaves, float persistence, float seed) {\n\tfloat normalize_factor = 0.0;\n\tfloat value = 0.0;\n\tfloat scale = 1.0;\n\tfor (int i = 0; i < octaves; i++) {\n\t\tfloat noise = fbm_cellular(coord*size, size, seed);\n\t\tfor (int f = 0; f < folds; ++f) {\n\t\t\tnoise = abs(2.0*noise-1.0);\n\t\t}\n\t\tvalue += noise * scale;\n\t\tnormalize_factor += scale;\n\t\tsize *= 2.0;\n\t\tscale *= persistence;\n\t}\n\treturn value / normalize_factor;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nvec2 UV = fragCoord/iResolution.xy;\nfloat o47177_0_r = 0.5+(cos(p_o47177_rotate*0.01745329251)*((UV).x-0.5)+sin(p_o47177_rotate*0.01745329251)*((UV).y-0.5))/(cos(abs(mod(p_o47177_rotate, 90.0)-45.0)*0.01745329251)*1.41421356237);vec4 o47177_0_1_rgba = o47177_gradient_gradient_fct(fract(o47177_0_r*p_o47177_repeat));\nfloat o107398_0_clamp_false = (dot((o47177_0_1_rgba).rgb, vec3(1.0))/3.0)*p_o107398_default_in2;\nfloat o107398_0_clamp_true = clamp(o107398_0_clamp_false, 0.0, 1.0);\nfloat o107398_0_2_f = o107398_0_clamp_false;\nfloat o7904_0_1_f = o7904_fbm((fract(transform2((UV), vec2(p_o32998_translate_x*(2.0*1.0-1.0), (50.0*iTime)*(2.0*1.0-1.0)), p_o32998_rotate*0.01745329251*(2.0*1.0-1.0), vec2(p_o32998_scale_x*(2.0*1.0-1.0), p_o32998_scale_y*(2.0*1.0-1.0))))), vec2(p_o7904_scale_x, p_o7904_scale_y), int(p_o7904_folds), int(p_o7904_iterations), p_o7904_persistence, float(seed_o7904));\nvec4 o32998_0_1_rgba = vec4(vec3(o7904_0_1_f), 1.0);\nvec4 o58378_0_s1 = vec4(vec3(o107398_0_2_f), 1.0);\nvec4 o58378_0_s2 = o32998_0_1_rgba;\nfloat o58378_0_a = p_o58378_amount*1.0;\nvec4 o58378_0_2_rgba = vec4(blend_multiply((UV), o58378_0_s1.rgb, o58378_0_s2.rgb, o58378_0_a*o58378_0_s1.a), min(1.0, o58378_0_s2.a+o58378_0_a*o58378_0_s1.a));\nfloat o126525_0_clamp_false = (dot((o58378_0_2_rgba).rgb, vec3(1.0))/3.0)+p_o126525_default_in2;\nfloat o126525_0_clamp_true = clamp(o126525_0_clamp_false, 0.0, 1.0);\nfloat o126525_0_2_f = o126525_0_clamp_false;\nfloat o19407_0_1_f = draw_profile_curve((UV), o126525_0_2_f, (dot(o19407_gradient_gradient_fct((UV).x+0.001).xyz, vec3(1.0/3.0))-dot(o19407_gradient_gradient_fct((UV).x-0.001).xyz, vec3(1.0/3.0)))/0.002, max(0.0001, p_o19407_width));\nfloat o220046_0_r = 0.5+(cos(p_o220046_rotate*0.01745329251)*((UV).x-0.5)+sin(p_o220046_rotate*0.01745329251)*((UV).y-0.5))/(cos(abs(mod(p_o220046_rotate, 90.0)-45.0)*0.01745329251)*1.41421356237);vec4 o220046_0_1_rgba = o220046_gradient_gradient_fct(fract(o220046_0_r*p_o220046_repeat));\nfloat o220045_0_clamp_false = (dot((o220046_0_1_rgba).rgb, vec3(1.0))/3.0)*p_o220045_default_in2;\nfloat o220045_0_clamp_true = clamp(o220045_0_clamp_false, 0.0, 1.0);\nfloat o220045_0_2_f = o220045_0_clamp_false;\nfloat o220041_0_1_f = o220041_fbm((fract(transform2((UV), vec2(p_o220042_translate_x*(2.0*1.0-1.0), (50.0*iTime)*(2.0*1.0-1.0)), p_o220042_rotate*0.01745329251*(2.0*1.0-1.0), vec2(p_o220042_scale_x*(2.0*1.0-1.0), p_o220042_scale_y*(2.0*1.0-1.0))))), vec2(p_o220041_scale_x, p_o220041_scale_y), int(p_o220041_folds), int(p_o220041_iterations), p_o220041_persistence, float(seed_o220041));\nvec4 o220042_0_1_rgba = vec4(vec3(o220041_0_1_f), 1.0);\nvec4 o220044_0_s1 = vec4(vec3(o220045_0_2_f), 1.0);\nvec4 o220044_0_s2 = o220042_0_1_rgba;\nfloat o220044_0_a = p_o220044_amount*1.0;\nvec4 o220044_0_2_rgba = vec4(blend_multiply((UV), o220044_0_s1.rgb, o220044_0_s2.rgb, o220044_0_a*o220044_0_s1.a), min(1.0, o220044_0_s2.a+o220044_0_a*o220044_0_s1.a));\nfloat o220043_0_clamp_false = (dot((o220044_0_2_rgba).rgb, vec3(1.0))/3.0)+p_o220043_default_in2;\nfloat o220043_0_clamp_true = clamp(o220043_0_clamp_false, 0.0, 1.0);\nfloat o220043_0_2_f = o220043_0_clamp_false;\nfloat o220060_0_1_f = draw_profile_curve((UV), o220043_0_2_f, (dot(o220060_gradient_gradient_fct((UV).x+0.001).xyz, vec3(1.0/3.0))-dot(o220060_gradient_gradient_fct((UV).x-0.001).xyz, vec3(1.0/3.0)))/0.002, max(0.0001, p_o220060_width));\nvec4 o224452_0_s1 = vec4(vec3(o19407_0_1_f), 1.0);\nvec4 o224452_0_s2 = vec4(vec3(o220060_0_1_f), 1.0);\nfloat o224452_0_a = p_o224452_amount*1.0;\nvec4 o224452_0_2_rgba = vec4(blend_lighten((UV), o224452_0_s1.rgb, o224452_0_s2.rgb, o224452_0_a*o224452_0_s1.a), min(1.0, o224452_0_s2.a+o224452_0_a*o224452_0_s1.a));\nfloat o221285_0_r = 0.5+(cos(p_o221285_rotate*0.01745329251)*((UV).x-0.5)+sin(p_o221285_rotate*0.01745329251)*((UV).y-0.5))/(cos(abs(mod(p_o221285_rotate, 90.0)-45.0)*0.01745329251)*1.41421356237);vec4 o221285_0_1_rgba = o221285_gradient_gradient_fct(fract(o221285_0_r*p_o221285_repeat));\nfloat o221284_0_clamp_false = (dot((o221285_0_1_rgba).rgb, vec3(1.0))/3.0)*p_o221284_default_in2;\nfloat o221284_0_clamp_true = clamp(o221284_0_clamp_false, 0.0, 1.0);\nfloat o221284_0_2_f = o221284_0_clamp_false;\nfloat o221280_0_1_f = o221280_fbm((fract(transform2((UV), vec2(p_o221281_translate_x*(2.0*1.0-1.0), (50.0*iTime)*(2.0*1.0-1.0)), p_o221281_rotate*0.01745329251*(2.0*1.0-1.0), vec2(p_o221281_scale_x*(2.0*1.0-1.0), p_o221281_scale_y*(2.0*1.0-1.0))))), vec2(p_o221280_scale_x, p_o221280_scale_y), int(p_o221280_folds), int(p_o221280_iterations), p_o221280_persistence, float(seed_o221280));\nvec4 o221281_0_1_rgba = vec4(vec3(o221280_0_1_f), 1.0);\nvec4 o221283_0_s1 = vec4(vec3(o221284_0_2_f), 1.0);\nvec4 o221283_0_s2 = o221281_0_1_rgba;\nfloat o221283_0_a = p_o221283_amount*1.0;\nvec4 o221283_0_2_rgba = vec4(blend_multiply((UV), o221283_0_s1.rgb, o221283_0_s2.rgb, o221283_0_a*o221283_0_s1.a), min(1.0, o221283_0_s2.a+o221283_0_a*o221283_0_s1.a));\nfloat o221282_0_clamp_false = (dot((o221283_0_2_rgba).rgb, vec3(1.0))/3.0)+p_o221282_default_in2;\nfloat o221282_0_clamp_true = clamp(o221282_0_clamp_false, 0.0, 1.0);\nfloat o221282_0_2_f = o221282_0_clamp_false;\nfloat o221299_0_1_f = draw_profile_curve((UV), o221282_0_2_f, (dot(o221299_gradient_gradient_fct((UV).x+0.001).xyz, vec3(1.0/3.0))-dot(o221299_gradient_gradient_fct((UV).x-0.001).xyz, vec3(1.0/3.0)))/0.002, max(0.0001, p_o221299_width));\nvec4 o232797_0_s1 = o224452_0_2_rgba;\nvec4 o232797_0_s2 = vec4(vec3(o221299_0_1_f), 1.0);\nfloat o232797_0_a = p_o232797_amount*1.0;\nvec4 o232797_0_2_rgba = vec4(blend_lighten((UV), o232797_0_s1.rgb, o232797_0_s2.rgb, o232797_0_a*o232797_0_s1.a), min(1.0, o232797_0_s2.a+o232797_0_a*o232797_0_s1.a));\nvec4 o249839_0_1_rgba = o249839_gradient_gradient_fct((dot((o232797_0_2_rgba).rgb, vec3(1.0))/3.0));\nfragColor = o249839_0_1_rgba;\n}\n","name":"Image","description":"","type":"image"}]}