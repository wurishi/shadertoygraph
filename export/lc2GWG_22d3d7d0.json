{"ver":"0.1","info":{"id":"lc2GWG","date":"1704608113","viewed":16,"name":"Marching 1","username":"lukeriley","description":"marching","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p) {\n    p.z = mod(p.z,2.)-.5;\n   p.xy = fract(p.xy) - .5;\n    return length(p) - 0.25; \n}\n\nmat2 rot2D(float theta) {\n    float s = sin(theta);\n    float c = cos(theta);\n    return mat2(c,-s,s,c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    vec3 ro = vec3(0, 0, -3);\n    vec3 rd = normalize(vec3(uv, 1));\n    vec3 col = vec3(0);\n    \n    ro.x = 3.*sin(iTime);\n    ro.z = iTime;\n    \n\n    float t = 0.;\n\n    for (int i = 0; i < 80; i++) {\n        vec3 p = ro + rd * t;\n        \n       \n\n        float d = map(p);\n\n        t += d;\n        p.xy *= rot2D(t*.15);\n\n        if (d < .001) break;\n        if (t > 100.) break;\n    }\n    vec3 coeff = vec3(sin(iTime),cos(iTime),1.);\n\n    col = coeff*vec3(t * .2);\n    \n    fragColor = vec4(col, 1);\n}\n","name":"Image","description":"","type":"image"}]}