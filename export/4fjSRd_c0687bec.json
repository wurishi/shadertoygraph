{"ver":"0.1","info":{"id":"4fjSRd","date":"1706703339","viewed":89,"name":"Portal fire shader.","username":"Hunfiu12","description":"The iconic portal fire shader from the Portal game.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fire","shader","portal","valve","halflife","portal2","source"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 noise(vec2 uv)\n{\n    vec4 col = texture(iChannel0, uv);\n    return vec4(col.r);\n}\n\nfloat saturate(float v)\n{\n    return clamp(v, 0.0f, 1.0f);\n}\n\nfloat linearstep(float edge0, float edge1, float x)\n{\n    return saturate((x - edge0) / (edge1 - edge0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 portalSize = vec2(360, 600);\n    vec2 uv = (fragCoord - ((iResolution.xy / 2.0f) - (portalSize / 2.0f))) / portalSize;\n\n    float g_flPortalOpenAmount = 1.0f; //Portal size for creation animation\n    float g_flPortalActive = 0.0f; //Portal noise cut size for opening animation\n\n    float vflPortalOpenAmount = saturate(g_flPortalOpenAmount + 0.001f);\n\n\tfloat kFlBorderNoiseScale = 0.3f;\n\tfloat kFlNoiseUvScroll = iTime * 0.0275f;\n\tvec2 vNoiseUv = ((uv - 0.5f) / vflPortalOpenAmount) + 0.5f;\n    vec4 vNoiseTexCoord;\n\tvNoiseTexCoord.xy = (vNoiseUv * kFlBorderNoiseScale) + vec2(kFlNoiseUvScroll, 0);\n\tvNoiseTexCoord.zw = (vNoiseUv * kFlBorderNoiseScale) - vec2(kFlNoiseUvScroll, 0);\n\n    float kFlPortalOuterBorder = 0.075f;\n\tfloat kFlPortalInnerBorder = kFlPortalOuterBorder * 4.0f;\n\n\tfloat flPortalOpenAmount = smoothstep( 0.0f, 1.0f, saturate(g_flPortalOpenAmount));\n\tfloat flPortalOpenAmountSquared = flPortalOpenAmount * flPortalOpenAmount;\n\n\tvec2 vStretchVector = (uv.xy * 2.0f) - 1.0f;\n\tfloat flDistFromCenter = length(vStretchVector);\n\tvec2 vStretchVectorNormalized = normalize(vStretchVector);\n\n\tfloat flStencilCutout = step(flDistFromCenter, flPortalOpenAmountSquared);\n\n    float flOuterEffectMask = (1.0f - linearstep(flPortalOpenAmountSquared, flPortalOpenAmountSquared + kFlPortalOuterBorder, flDistFromCenter)) * (1.0f - flStencilCutout);\n\n\tfloat flInnerEffectMask = (linearstep(flPortalOpenAmountSquared - kFlPortalInnerBorder, flPortalOpenAmountSquared, flDistFromCenter)) * (flStencilCutout);\n\n    float flPortalActive = saturate(g_flPortalActive);\n\tfloat flEffectFadeIn = max(saturate(flPortalOpenAmount * 2.5f), (1.0f - flPortalActive));\n\n    float flEffectMask = (flInnerEffectMask + flOuterEffectMask) * flEffectFadeIn;\n\n    vec4 cNoiseTexel1 = noise(vNoiseTexCoord.xy);\n    vec4 cNoiseTexel2 = noise(vNoiseTexCoord.wz - cNoiseTexel1.rg * 0.02);\n    cNoiseTexel1.rgba = noise(vNoiseTexCoord.xy - cNoiseTexel2.rg * 0.02);\n\n    float flNoise = ((cNoiseTexel1.g + cNoiseTexel2.g) * 0.5f);\n    float flPortalActiveWithNoise = smoothstep(0.0f, flNoise, flPortalActive);\n\n    float kFlBorderSoftness = 0.875f;\n    float flBorderMaskWithNoise = (1.0f - smoothstep(flEffectMask - kFlBorderSoftness, flEffectMask + kFlBorderSoftness, flNoise));\n\tflNoise = flBorderMaskWithNoise;\n\tflEffectMask *= flBorderMaskWithNoise;\n\n    float flTransparancy = saturate(flEffectMask + (flStencilCutout * (1.0f - flPortalActiveWithNoise))) * 1.5f;\n\n    float flBottomToTopBrightnessShift = (pow(abs(1.0f - uv.y), 1.5f) * 0.8f) + 0.2f;\n\n    float flGradientSampleLocation = pow(flNoise, 0.5f) * flBottomToTopBrightnessShift * flTransparancy;\n\n    vec3 cFlameColor = mix(vec3(0.0f), vec3(0.008f, 0.447f, 0.824f), flGradientSampleLocation);\n\n    fragColor = vec4(cFlameColor, flTransparancy);\n}","name":"Image","description":"","type":"image"}]}