{"ver":"0.1","info":{"id":"WsyXWW","date":"1573995393","viewed":56,"name":"Artificial Heart","username":"anazli9","description":"Experimenting with theBookOfShaders code.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["glsl","general"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.)\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = vec2(0.5) - uv;\n    float r = length(uv) * 2.;\n    float theta = atan(uv.y, uv.x);\n    float t = iTime * iTime/2.;\n    float f = smoothstep(-0.5, 1., cos(theta*10.)) * abs(cos(t/150.)) + 0.5;\n    float rnd = rand(uv);\n    vec3 rc = rnd * vec3( abs( sin(t * rnd) ),\n                            abs( cos(t) ),\n                            abs( cos(t * rnd + PI/2.) ) );\n    \n    vec3 col = vec3(1. - smoothstep(f, f + abs(sin(t))*2./3., r)) * rc;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}