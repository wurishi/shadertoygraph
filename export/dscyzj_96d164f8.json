{"ver":"0.1","info":{"id":"dscyzj","date":"1695231996","viewed":94,"name":"generates maze","username":"tomcat7479","description":"Using 2D random generation of mazes","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["twodimensionrandomfunc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C 0.70710678 // sqrt(2) / 2, 单位坐标系对角线长度的一半长度\n\nvec2 fix(in vec2 fragCoord, float zoom) {\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / min(iResolution.x, iResolution.y);\n    uv *= zoom;\n    return uv;\n}\n\nfloat noise(vec2 p) {\n    return abs(fract(114514.114514 * sin(dot(p, vec2(123.0, 456.0)))));\n}\n\nfloat line(vec2 p, float dir) {\n    float d = dot(p, dir > 0.5 ? vec2(C, C) : vec2(-C, C));\n    return smoothstep(0.05, 0.01, abs(d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fix(fragCoord, 15.0);\n    vec3 col = vec3(line(fract(uv) - 0.5, noise(floor(uv))));\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}