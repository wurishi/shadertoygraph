{"ver":"0.1","info":{"id":"7s2Xzh","date":"1619682034","viewed":568,"name":"Minecraft / PS1 Texture","username":"zvodd","description":"Lifted from \"PSX rendering\" by  @TDM  -> shadertoy.com/view/Mt3Gz2","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","playstation","psx"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define BILINEAR\n\nfloat hash( vec2 p ) {\n\tfloat h = dot(p,vec2(127.1,311.7));\t\n    return fract(sin(h)*43758.5453123);\n}\n\n\nvec3 textureGround(vec2 uv) {\n    const vec2 RES = vec2(16.0, 9.0);    \n    float n = hash(floor((uv * RES)));\n    n = n * 0.2 + 0.5;\n    // return vec3(n*0.4,n*0.2,n*0.8);\n    return vec3(n*0.4,n*0.2,n*n); // make blue quadratic\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = textureGround(uv);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n}\n\n\n","name":"Image","description":"","type":"image"}]}