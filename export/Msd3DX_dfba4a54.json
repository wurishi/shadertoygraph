{"ver":"0.1","info":{"id":"Msd3DX","date":"1452589566","viewed":262,"name":"Eater","username":"gaz","description":"3d","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fold","bend"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI\t3.14159265359\n\nmat2 rotate(in float a)\n{\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec3 hsv(float h, float s, float v)\n{\n  return mix(vec3(1),clamp((abs(fract(h+vec3(3,2,1)/3.)*6.-3.)-1.),0.,1.),s)* v;\n}\n\nvec2 opFold(in vec2 p, in float a, in int t)\n{\n    p.x = abs(p.x);\n    vec2 v = vec2(cos(a), sin(a));\n    for(int i = 0; i < 10; i++)\n    {\n        if (i == t) break;\n        p -= 2.0*min(0.0,dot(p,v))*v;\n        v = normalize(vec2(v.x-1.0,v.y));\n    }\n    return p;    \n}\n\nvec2 opBend(in vec2 p, in float d) // used quadratic function\n{\n    p.y -= d*p.x*p.x;\n    p.y *= cos(atan(2.0*d*p.x));\n \treturn p;   \n}\n\nfloat smin(in float a, in float b, in float k )\n{\n    float h = clamp( 0.5 + 0.5*(b-a)/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat lengthN(in vec2 p, in float n)\n{\n\tp = pow(abs(p), vec2(n));\n\treturn pow(p.x+p.y, 1.0/n);\n}\n\nvec2 deSegment(in vec2 p, in vec2 a, in vec2 b)\n{\n\tvec2 pa=p-a,ba=b-a;\n\tfloat h=clamp(dot(pa,ba)/dot(ba,ba),0.,1.);\n\treturn vec2(length(pa-ba*h), h);\n}\n\nfloat de1(in vec3 p)\n{\n    p.y *=0.7;\n \tvec2 q = vec2(length(p.xz)-2.1,p.y);\n    float a = atan(p.z,p.x)+0.11;\n \tfloat de = lengthN(q, 3.0+2.0*sin(a*16.0))-0.3;\n    p.xz = opFold(p.xz, PI / 2.0, 4);\n\tde += texture(iChannel1, p.xy*0.2).x *  0.03;\n\treturn de;\n}\n\nfloat de2(in vec3 p)\n{\n    p.xz = opFold(p.xz, PI/2.0, 4);\n    p.z -= 2.0;\n    p.y = abs(p.y);\n    p.yz *= rotate(0.8*sin(iTime *0.6));\n    p.y -= 0.6;\n    p.yz = opBend(p.yz, -0.35);\n    vec2 d = deSegment(p.yz, vec2(1.0, 0.0), vec2(-0.1,0.0));\n \treturn lengthN(vec2(0.8*d.x, p.x), 3.0) - 0.25*d.y;   \n}\n\nvec3 transform(in vec3 p)\n{\n\tp.zx *= rotate(iTime * 0.1);\n    p.yz *= rotate(iTime * 0.2);\n    return p;\n}\n\nfloat map(in vec3 p)\n{    \n    p = transform(p);\n    return smin(de1(p),de2(p),0.08);\n}\n\nvec3 doColor(in vec3 p)\n{\n\tp = transform(p);\n    float d1 = de1(p);\n    float d2 = de2(p);\n    if (d1 < d2){\n    \treturn mix(0.6*texture(iChannel1, p.xy).xxx,\n    \t\thsv(0.35, 0.6, 0.4), 0.5);\n    } else {   \t\n        return vec3(0.7,0.8,0.9);\n    }\n}\n\nvec3 calcNormal(in vec3 pos)\n{\n    vec2 e = vec2(1.0, -1.0) * 0.002;\n    return normalize(\n        e.xyy * map(pos + e.xyy) + \n        e.yyx * map(pos + e.yyx) + \n        e.yxy * map(pos + e.yxy) +   \n        e.xxx * map(pos + e.xxx));\n}\n\nfloat softshadow(in vec3 ro, in vec3 rd)\n{\n\tfloat res = 1.0;\n    float t = 0.05;\n    for(int i = 0; i < 32; i++)\n    {\n\t\tfloat h = map(ro + rd * t);\n        res = min(res, 8.0 * h / t);\n        t += clamp(h, 0.02, 0.1);\n        if(h < 0.001 || t > 1.5) break;\n    }\n    return clamp(res, 0.0, 1.0);\n}\n\nfloat calcAO(in vec3 pos, in vec3 nor)\n{\n\tfloat occ = 0.0;\n    float sca = 1.0;\n    for( int i=0; i<5; i++ )\n    {\n        float hr = 0.01 + 0.12*float(i)/4.0;\n        vec3 aopos =  nor * hr + pos;\n        float dd = map( aopos );\n        occ += -(dd-hr)*sca;\n        sca *= 0.95;\n    }\n    return clamp( 1.0 - 3.0*occ, 0.0, 1.0 );    \n}\n\nfloat intersect(in vec3 ro, in vec3 rd)\n{\n    const float maxd = 10.0;\n    const float precis = 0.001;\n    float h = 1.0;\n    float t = 0.0;\n    for(int i = 0; i < 64; i++)\n    {\n        if(h < precis || t > maxd) break;\n        h = map(ro + rd * t);\n        t += h;\n    }\n    if( t > maxd ) t = -1.0;\n    return t;\n}\n\nvec3 bg(in vec2 p , in vec2 fragCoord)\n{   \n    vec3 col = texture(iChannel0, \n    \t3.0 * vec2(inversesqrt(length(p)), atan(p.x, p.y) * 0.2 -iTime*0.005)).xyz;\n    col = mix(col, vec3(0.25,0.2,0.3)*length(p*0.6), 0.7);  \t\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec3 col = bg(p, fragCoord);\n    vec3 ro = vec3(0.0, 0.0, 5.0);\n    vec3 rd = normalize(vec3(p, -2.0));\n    float t = intersect(ro, rd);\n    if(t > -0.001)\n    {\n        vec3 pos = ro + t * rd;\n        vec3 nor = calcNormal(pos);\n\t\tcol = doColor(pos);\n        \n        // https://www.shadertoy.com/view/Xds3zN\n        vec3 ref = reflect( rd, nor );\n        float occ = calcAO( pos, nor );\n\t\tvec3  lig = normalize( vec3(2.0, 2.0, 3.0) );\n\t\tfloat amb = clamp( 0.3+0.5*nor.y, 0.0, 1.0 );\n        float dif = clamp( dot( nor, lig ), 0.0, 1.0 );\n        float bac = clamp( dot( nor, normalize(vec3(-lig.x,0.0,-lig.z))), 0.0, 1.0 )*clamp( 1.0-pos.y,0.0,1.0);\n        float dom = smoothstep( -0.1, 0.1, ref.y );\n        float fre = pow( clamp(1.0+dot(nor,rd),0.0,1.0), 2.0 );\n\t\tfloat spe = pow(clamp( dot( ref, lig ), 0.0, 1.0 ),30.0);\n        dif *= softshadow( pos, lig);\n        dom *= softshadow( pos, ref );\n\t\tvec3 lin = vec3(0.0);\n        lin += 1.2*dif*vec3(1.0,0.8,0.5);\n\t\tlin += 1.2*spe*vec3(1.0,0.8,0.5)*dif;\n        lin += 0.2*amb*vec3(0.5,0.7,1.0)*occ;\n        lin += 0.3*dom*vec3(0.5,0.7,1.0)*occ;\n        lin += 0.3*bac*vec3(0.2,0.2,0.2)*occ;\n        lin += 0.4*fre*vec3(1.0,1.0,1.0)*occ;\n\t\tcol = col*lin;\n    \tcol = mix( col, vec3(0.0), 1.0-exp( -0.01*t*t ) );\n\t\tcol = pow(col, vec3(0.9));\n    }\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}