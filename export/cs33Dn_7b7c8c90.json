{"ver":"0.1","info":{"id":"cs33Dn","date":"1677116074","viewed":123,"name":"Random Pulsating Points","username":"sotrh","description":"Computes random points that pulsate at random intervals.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["programmingchallenge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec2 rPoint(vec2 co) {\n    float x = rand(co);\n    float y = rand(co + x);\n    vec2 p = vec2(x, y) * 0.5 + 0.25;\n    return p;\n}\n\nfloat sdfCircle(vec2 p, vec2 c, float r) {\n    return length(c - p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    uv *= 10.0;\n    uv += iTime;\n    \n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n    vec2 c = rPoint(i);\n    \n    float freq = 3.14 * rand(i + 6.1234);\n    float r = sin(iTime * freq + rand(c + i)) * 1.5;\n    r *= 0.05;\n    float d = sdfCircle(f, c, r);\n    \n    d = smoothstep(0.05, 0.1, d);\n\n    vec3 col = vec3(\n        rand(i),\n        rand(i + c),\n        rand(i + 234.3)\n    );\n    \n    col = mix(vec3(1.0), col, 1.0 - d);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}