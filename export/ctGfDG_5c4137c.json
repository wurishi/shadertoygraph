{"ver":"0.1","info":{"id":"ctGfDG","date":"1702412184","viewed":59,"name":"2d and 3d colorful paint","username":"nayk","description":"colorful paint,2d,3d,cube,rotate ,copypast\nthx for original","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","3d","cube","colorful","rotate","paint","combination"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*https://www.shadertoy.com/view/dlyfRd https://www.shadertoy.com/view/mtyGWy  https://www.shadertoy.com/view/DlycWR*/\nvec3 palette( float t  ) \n{\n    vec3 a = vec3(0.5,0.6,0.5);\n    vec3 b = vec3(0.5,0.6,0.5);\n    vec3 c = vec3(1.0,1.0,1.0);\n    vec3 d = vec3(0.263, 0.416,0557);\n\n    return a + b*cos( 6.28*(c*t+d) );\n}\n\n#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\nvec2 rotate(vec2 v, float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return vec2(v.x * c - v.y * s, v.x * s + v.y * c);\n}\nfloat cheap_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n     vec2 uv2 = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;    \n    vec3 finalColor = vec3(0.2);\n    vec4 O=fragColor;\n    vec2 C =fragCoord;\n    vec2 m = (.5 * iResolution.xy - iMouse.xy) / iResolution.x * 6.28;\n    vec3 e = vec3(cos(iTime*0.2) * cos(iTime*0.2), sin(iTime*0.2) * cos(iTime*0.2), sin(iTime*0.2));\n    vec3 u = normalize(vec3(e.y, -e.x, 0));\n    vec3 v = cross(e, u);\n   \n    vec3 d2 = e + uv.x * u + uv.y * v;\n    vec3 a = (e + .1) / d2;\n    vec3 b = (e - .1) / d2;\n    float mi = max(max(min(a.x, b.x), min(a.y, b.y)), min(a.z, b.z));\n    float ma = min(min(max(a.x, b.x), max(a.y, b.y)), max(a.z, b.z));\n    float t = mi < ma ? mi : 10.;\n    vec3 i = e - d2 * t;\n    vec3 c = (step(-.099, i) + step(.099, i) - 1.) * d2;\n  O=vec4(0);\n  uv.xy*=rotate(uv.xy,-iTime/15.-length(uv.xy)*10.5);\n    for (float i = 0.0; i < 5.0; i++) {\n     \n    uv = fract(uv * 2.2) - 0.5;\n    \n    float d = length(uv) * exp(-length(uv0));\n    \n    vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n    \n    d = sin(d*8. + (0.1 * iTime))/6.;\n    d = abs(d);\n    \n    d = pow(0.01 / d, 1.2);\n    \n    finalColor += col * d;\n    \n    }\n  \n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    \n    for(float i=0.,a,s,e,g=0.;\n        ++i<110.;\n        O.xyz+=mix(vec3(1),H(g*.1),sin(.8))*1./e/8e3\n    )\n    {\n        p=g*d2+d;\n        p.z+=iTime*2.5;\n        a=15.;\n        p=mod(p-a,a*2.)-a*c;\n        s=6.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n            \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n        \n            s*=e=1.4+sin(iTime*.234)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.+cos(iTime*.3+.5*cos(iTime*.3))*3.,\n                    50,\n                    4.+cos(iTime*.5)*5.\n                 )* finalColor;\n         }\n         g+=e=length(p.yz)/s;\n          g+=e=length(p.xz)/s;\n    }  \n      uv2 *= 2.0 * ( cos(iTime * 2.0) -2.5);\n     \n    // anim between 0.9 - 1.1\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;    \n\n    \n    fragColor = vec4(finalColor*O.xyz, 1.0);\n         fragColor+= vec4(cheap_star(uv2,anim) * vec3(0.50,0.50,0.50)*0.1, 1.0);\n}","name":"Image","description":"","type":"image"}]}