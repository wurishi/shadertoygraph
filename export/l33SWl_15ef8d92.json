{"ver":"0.1","info":{"id":"l33SWl","date":"1719766114","viewed":41,"name":"number3(circle with antialias.)","username":"filln","description":"experiments","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["experiments"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sq( float x )\n{\n    return x * x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float minRes = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord/minRes;\n    \n    vec2 shift = vec2(0);\n    shift.x = 0.5 * (iResolution.x / minRes);\n    shift.y = 0.5 * (iResolution.y / minRes);\n    uv -= shift; //move circle to center\n    //or just vec2 uv = (fragCoord - 0.5*iResolution.xy)/minRes; \n    \n    float radius = 0.333;\n    vec3 col = vec3(0);\n    vec3 circleCol = vec3(0.15, 0.65, 0.63);\n    vec3 planeCol = vec3(0.14, 0.49, 0.74);\n    \n    if ((sq(uv.x) + sq(uv.y)) > sq(radius)) //draw plane\n    {\n        col = planeCol;   \n    }\n    else //draw circle\n    {\n\n        float x = (sq(uv.x) + sq(uv.y))/sq(radius);\n        float k = pow(x, 40.0);  \n        col = mix(circleCol, planeCol, k);\n        \n        /* // with smoothstep\n        float k = pow(x, 20.0);\n        vec3 k1 = vec3(0);        \n        k1.x = smoothstep(circleCol.x, planeCol.x, k);\n        k1.y = smoothstep(circleCol.y, planeCol.y, k);\n        k1.z = smoothstep(circleCol.z, planeCol.z, k);\n        col = mix(circleCol, planeCol, k1);\n        */\n        \n        //col = circleCol; // without antialiasing\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}