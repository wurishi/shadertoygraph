{"ver":"0.1","info":{"id":"XcdcDn","date":"1730491316","viewed":37,"name":"confuzzl bezier test","username":"confuzzl","description":"bezier :3","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 P0 = vec2(50, 50);\nvec2 P1 = vec2(200, 400);\nvec2 P2 = vec2(600, 350);\nvec2 P3 = vec2(750, 100);\n\nbool within(const vec2 a, const vec2 b, const float d) {\n    vec2 c = a-b;\n    return dot(c, c) <= d*d;\n}\nbool inLine(const vec2 v, const vec2 a, const vec2 b, const float d) {\n    vec2 line = b - a;\n    vec2 diff = v - a;\n    float t = clamp(dot(diff, line)/dot(line, line), 0.0, 1.0);\n    return length(diff-line*t) <= d;\n}\n\n\n#define POINT(p, size, c) if (within(fragCoord, p, size)) { fragColor = vec4(c, 1.0); return; }\n#define LINE(p0, p1, size, c) if (inLine(fragCoord, p0, p1, size)) { fragColor = vec4(c, 1.0); return; }\n\n#define WHITE vec3(1.0, 1.0, 1.0)\n#define BLACK vec3(0.0, 0.0, 0.0)\n#define GRAY vec3(0.5, 0.5, 0.5)\n#define RED vec3(1.0, 0.0, 0.0)\n#define GREEN vec3(0.0, 1.0, 0.0)\n#define BLUE vec3(0.0, 0.0, 1.0)\n#define CYAN vec3(0.0, 1.0, 1.0)\n#define MAGENTA vec3(1.0, 0.0, 1.0)\n#define YELLOW vec3(1.0, 1.0, 0.0)\n\n#define LERP(a, b, out) POINT(a.coord, 10.0, a.color); POINT(b.coord, 10.0, b.color); out = point((1.0 - t) * a.coord + t * b.coord, mix(a.color, b.color, t)); POINT(out.coord, 10.0, out.color); LINE(a.coord, b.coord, 3.0, GRAY); \n\nstruct point {\n    vec2 coord;\n    vec3 color;\n};\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) { \n    float t = mod(iTime / 2.0, 2.0);\n    if (t > 1.0)\n        t = 2.0 - t;\n        \n    point a = point(P0, MAGENTA);\n    point b = point(P1, CYAN);\n    point c = point(P2, GREEN);\n    point d = point(P3, YELLOW);\n    \n    point ab;\n    point bc;\n    point cd;\n    \n    point abc;\n    point bcd;\n    \n    point curve;\n    \n    /*\n    POINT(P0, 10.0, MAGENTA)\n    POINT(P1, 10.0, CYAN)\n    vec2 p = (1.0 - t) * P0 + t * P1;\n    POINT(p, 10.0, mix(MAGENTA, CYAN, t));\n    LINE(P0, P1, 3.0, GRAY)\n    */\n    LERP(a, b, ab)\n    LERP(b, c, bc)\n    LERP(c, d, cd)\n    LERP(ab, bc, abc)\n    LERP(bc, cd, bcd)\n    LERP(abc, bcd, curve)\n    POINT(curve.coord, 20.0, RED);\n}","name":"Image","description":"","type":"image"}]}