{"ver":"0.1","info":{"id":"mdSSW3","date":"1670973530","viewed":102,"name":"A Peek Inside the Burning Ship","username":"Mandelbrot837","description":"What does the black in the Burning Ship look like?  Let's find out with the Orbit Trap algorithm!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COORDS vec2(-0.385,-0.055)\n\n// Palette\n\nstruct palette {\n    vec3 c0, c1, c2, c3, c4;\n};\n\nstruct locationMapping {\n    vec2 l0, l1, l2, l3, l4, l5, l6, l7,\n         l8, l9, l10,l11,l12,l13,l14,l15;\n};\n\npalette palette_electricity() {\n    palette p;\n    p.c0 = vec3(0,0,0)/255.;\n    p.c1 = vec3(0,140,140)/255.;\n    p.c2 = vec3(16,255,266)/255.;\n    p.c3 = vec3(96,255,253)/255.;\n    p.c4 = vec3(255,255,255)/255.;\n    return p;\n}\n\nlocationMapping normal() {\n    locationMapping l;\n    l.l0 = vec2(-0.385,-0.055);\n    l.l1 = vec2(-0.04,0.12);\n    l.l2 = vec2(-0.475197,-0.07752);\n    l.l3 = vec2(-0.248311,0.10107);\n    l.l4 = vec2(-0.22002,0.08983);\n    l.l5 = vec2(0.02525,-0.0837);\n    l.l6 = vec2(-0.237492,0.139458);\n    l.l7 = vec2(-0.47047,-0.076643);\n    l.l8 = vec2(-0.440987,-0.080007);\n    l.l9 = vec2(-0.27983,0.06179);\n    l.l10 = vec2(0.165503,0.288305);\n    l.l11 = vec2(-0.517405,-0.081008);\n    l.l12 = vec2(-0.415125,-0.08092);\n    l.l13 = vec2(-0.439603,-0.071672);\n    l.l14 = vec2(0.010967,0.150135);\n    l.l15 = vec2(-0.204608,0.08524);\n    return l;\n}\n\n// Random\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat randSeed = 0.;\nvec2 nextRand2() {\n    vec2 v = vec2( randSeed++, randSeed++ );\n\treturn vec2( random( v+0.34 ), random( v+0.75 ) );    \n}\n\n// Mapping\n\nvec3 cmap( float t, palette p ) {\n    vec3 col = vec3(0);\n    col = mix( p.c0,  p.c1, smoothstep(0. , .2, t));\n    col = mix( col, p.c2, smoothstep(.2, .4 , t));\n    col = mix( col, p.c3, smoothstep(.4 , .6, t));\n    col = mix( col, p.c4, smoothstep(.6,  .8, t));\n    col = mix( col, p.c0, smoothstep(.8, 1.,  t));\n    col = sqrt(sqrt(col));\n    return col;\n}\n\n// lower MAX_ITER or SAMPLES if the fps is low\n#define MAX_ITER 512.\n#define SAMPLES 6.\n#define THRESHOLD 32768.\n\nfloat bship(vec2 uv) {\n    // z = ( |Re(z)| + i|Im(z)| )^2\n    \n    float MIN_COLOR = pow(0.41*cos((0.1*iTime)) + 0.46,6.);\n    \n\tvec2 c = 4.1*(uv - vec2(.2,0)) - vec2(-1,0.333); \n    vec2 z = vec2(0); \n    float i = 0.;\n    float c0 = 0.;\n    \n    for(; ++i <= MAX_ITER ;) {\n        z = abs(z);\n        z = mat2(z, -z.y, z.x) * z + c;\n                 \n        c0 += MIN_COLOR / dot(z,z);\n    \tif( dot(z,z) > THRESHOLD ) break;\n\t}\n  \n    float l2 = log(2.);\n    return c0 - log(dot(z,z))/l2;\t\t    \n}\n\n// Main\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 R = iResolution.xy;\n        \n    palette pal = palette_electricity();\n    \n    vec3 col = vec3(0);\n\n    for(float i=0.; i < SAMPLES; i++) {\n        vec2 p = (pow(0.0015,sin((0.1*iTime)-1.5732) + 1.)*(2.*fragCoord-R+nextRand2())/R.y) + COORDS;\n        p.y = -p.y;\n        float orbit = bship(p) / MAX_ITER;\n    \tcol += cmap( orbit   , pal ); \n    }\n    \n    col /= SAMPLES;\n\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}