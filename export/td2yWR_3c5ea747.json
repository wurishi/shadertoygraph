{"ver":"0.1","info":{"id":"td2yWR","date":"1586457962","viewed":106,"name":"Shader 01 : Shapes","username":"Melokey","description":"First Shader :D","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","square","rectangle","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\n\nfloat circle( vec2 coord, float radius )\n{\n    return step(radius, length(coord));\n}\n\nfloat smoothcircle( vec2 coord, float radius, float blur )\n{\n    return smoothstep(radius*(1.-blur), radius*(1.+blur), length(coord));\n}\n\nfloat rect( vec2 coord, vec2 size )\n{\n    vec2 rect = step(abs(coord), size);\n    return 1. - rect.x * rect.y;\n}\n\nmat2 rotate2d(float angle)\n{\n    return mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n}\n\nfloat rays(vec2 uv, float nbr)\n{\n\tuv = uv * rotate2d(iTime * 0.5);\n\tfloat propeller = cos(atan(uv.y, uv.x) * nbr);\n    return smoothstep(0., 0.1, propeller);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // - Normalize Coordinate -\n    vec2 uv = -(2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    // - Set Background - \n    vec3 col = vec3(1.);\n\n    // - Useful Functions -\n    //col = vec3( length(uv) );\t\t\t\t\t\t\t\t\t// length(coord)\n    //col = vec3( step(uv.x + 0.5, sin(iTime)) );\t\t\t\t// step(edge, source_value) => if (source_value > edge)\n    //col = vec3( smoothstep(uv.x-0.2, uv.x+0.2, sin(iTime)) );\t// step(lower_edge, upper_edge, source_value)\n    \n    // - Add Shapes -\n    \n    //Coords\n    vec2 pos = uv + vec2(0.);\n    \n    //pos = uv + vec2(-0.8, 0.5);\n    //col *= vec3( circle(pos, 0.3) );\n    \n    // Rays\n    col.z = rays(uv, 10.);\n    \n    // Head\n    pos = uv + vec2(0.);\n    col *= vec3( smoothcircle(pos, 0.98, 0.005) );\n    col += 1. - vec3( smoothcircle(pos, .88, 0.005) );\n    \n    // Eyes\n    pos = uv * vec2(1.2, 1.) + vec2(0. + 0.05 * cos(4.*iTime), 0.43 + 0.05 * sin(4.*iTime));\n    vec2 new_pos = vec2(0.);\n    float delta = 0.5;\n    \n    // Eye Left\n    new_pos = pos + vec2(delta, 0.);\n    col *= vec3( smoothcircle(new_pos, 0.3, 0.015) );\n    col += 1. - vec3( smoothcircle(new_pos, 0.23, 0.015) );\n    \n    new_pos += 0.15 * vec2(cos(iTime), sin(iTime));\n    col *= vec3( smoothcircle(new_pos, 0.1, 0.05) );\n    \n    // Eye Right\n    new_pos = pos + vec2(-delta, 0.);\n    col *= vec3( smoothcircle(new_pos, 0.3, 0.015) );\n    col += 1. - vec3( smoothcircle(new_pos, 0.23, 0.015) );\n    \n    new_pos += 0.15 * vec2(cos(-iTime + PI), sin(-iTime + PI));\n    col *= vec3( smoothcircle(new_pos, 0.1, 0.05) );\n    \n    // Nose\n    pos = uv + vec2(0., -0.05);\n    col *= vec3( rect(pos, vec2(0.05, 0.2)) );\n    col *= vec3( rect(pos, vec2(0.2, 0.05)) );\n    \n    // Mouth\n    pos = uv + vec2(0., -0.45 + 0.05*cos(2.*iTime));\n    col *= vec3( rect(pos, vec2(0.2, 0.05)) );\n    \n    pos = uv + vec2(0., -0.65 + 0.05*sin(2.*iTime));\n    col *= vec3( rect(pos, vec2(0.2, 0.05)) );\n\n    // - Output -\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}