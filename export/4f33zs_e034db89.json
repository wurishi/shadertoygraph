{"ver":"0.1","info":{"id":"4f33zs","date":"1712042062","viewed":96,"name":"GaborExplorerV1","username":"berke","description":"Modify the Gabor elements used to reconstruct the image.  See also https://www.shadertoy.com/view/XfcGRs  Hold S, R, P, F, M or N then click and drag mouse.","likes":5,"published":1,"flags":16,"usePreview":0,"tags":["compression","image","gabor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Original attempt: https://www.shadertoy.com/view/4ljSRR\n// This is a completely separate implementation.\n\n#define MODE_NORMAL 0\n#define MODE_RANDOM_SUBSET 1\n#define MODE_ROTATE 2\n#define MODE_PHASE_SHIFT 3\n#define MODE_FREQ_SHIFT 4\n#define MODE_MOGRIFY 5\n#define MODE_NOISE 6\n\n#define SIGNED_PALETTE false\n\n//#define MODE 6\n\n#define N 8\n\n#define M_PI 3.14159265358979323846\n\nint MODE = MODE_MOGRIFY;\n\nfloat rnd(uint x,uint y,uint z) {\n    uint q = (x + 1664525U*y) ^ 1664525U*z;\n\tq = ((q*1664525U) % 1013904223U) ^ 0xdeadbeefU;\n    q = (q*1664525U) % 1013904223U;\n\treturn float(q) / 1013904223.0;\n}\n\nfloat unquant(uint x,int j) {\n  return QUANT[j].x + (QUANT[j].y - QUANT[j].x) * float(x)/255.0;\n}\n\nuint get_param(int i,int j) {\n  return (PARAMS_DATA[2*i + (j>>2)] >> (((j ^ 3) & 3) << 3)) & 255U;\n}\n\nconst float PARAM_NOISE[8] = float[8](\n  0.01,\n  0.01,\n  0.01,\n  0.1,\n  0.1,\n  0.1,\n  0.1,\n  0.1\n);\n\n#define TAU 1.00\n\nvec2 modifier() {\n  return iMouse.z > 0.0 ?\n    clamp( 2.0*(iMouse.xy/iResolution.xy - vec2(0.5,0.5)) + vec2(0.5,0.5),\n          0.0,1.0) : vec2(0,0);\n}\n\nfloat elem(int i,vec2 p) {\n  float params[N];\n  vec2 mu = modifier();\n\n  for (int j = 0; j < N; j++) {\n    params[j] = unquant(get_param(i,j),j);\n    if (MODE == MODE_NOISE) {\n        params[j] += 10.0 * mu.x * PARAM_NOISE[j] * ( 2.0*rnd(uint(i),uint(j),uint(1000000.0*mu.y)) - 1.0) * (QUANT[j].y - QUANT[j].x);\n    }\n  }\n  vec2 x0 = vec2(params[0],params[1]);\n  float alpha = params[2];\n  float theta = params[3];\n  float r1 = params[4];\n  float r2 = params[5];\n  float phi = params[6];\n  float k = params[7];\n  \n  if (MODE == MODE_ROTATE) {\n      theta += 2.0*M_PI*mu.x;\n  }\n  if (MODE == MODE_FREQ_SHIFT) {\n      k += 100.0*mu.x;\n      phi += 2.0*M_PI*mu.y;\n  }\n  vec2 u = vec2(cos(theta),sin(theta))/r1;\n  if (MODE == MODE_MOGRIFY) {\n      x0 += 0.1*mu.x * u;\n      theta += 2.0*M_PI*mu.y;\n  }\n  vec2 v = vec2(-sin(theta),cos(theta))/r2;\n  vec2 w = vec2(cos(phi),sin(phi));\n  vec2 dp = p - x0;\n  vec2 nn = vec2(dot(u,dp),dot(v,dp));\n  float n = dot(nn,nn);\n  float psi = dot(dp,w)*k;\n  if (MODE == MODE_PHASE_SHIFT) {\n      psi += 2.0*M_PI*mu.x;\n  }\n  float t = cos(psi);\n  float rho = t*alpha*exp(-n);\n  return rho;\n}\n\n#define NROUND 2\n\nuint h(uint x) {\n  return (x * 1797331U) & 31U;\n}\n\nuint f(uint k,uint i) {\n  uint l,r;\n  l = i & 31U;\n  r = (i >> 5) & 31U;\n  for (int j = 0; j < NROUND; j ++) {\n    l ^= h(r ^ k); k += 0xdeadbeefU;\n    r ^= h(l ^ k); k += 0xdeadbeefU;\n  }\n  return (l << 5) | r;\n}\n\nfloat glyph(vec2 fc,int c,vec2 p0,float sz) {\n    vec2 p = floor((fc - p0)/sz);\n    int i = int(p.y);\n    int j = int(p.x);\n    if (0 <= i && i < 8 && 0 <= j && j < 8) {\n        return font_glyph(c,i,j) ? 1.0:0.0;\n    } else {\n        return 0.0;\n    }\n}\n\nint message(int k) {\n  return (k/2) % 27;\n}\n\nfloat scroller(vec2 fc) {\n    vec3 col = vec3(0,0,0);\n    float f = 0.0;\n    const float sz = 4.0;\n    const float cps = 5.0;\n    int k0 = int(floor(iTime*cps));\n    float phi = mod(iTime*cps,1.0);\n    const int ncol = 20;\n    for (int j = 0; j < ncol; j ++) {\n      //int c = message(k0 + j);\n      int c = int(msg_char((k0 + j) % MSG_LEN));\n      if (c != 0) {\n          c --;\n          f += glyph(\n              fc,\n              c,\n              iResolution.xy*vec2(0.0,0.05) + (float(j) - phi)*vec2(8.0*sz,0.0),\n              sz);\n       }\n    }\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float sc = min(iResolution.x,iResolution.y);\n    vec2 fc = fragCoord - iResolution.xy/2.0;\n    vec2 p = vec2(fc.x/sc,fc.y/sc) + vec2(0.5,0.5);\n    p.y = 1.0 - p.y;\n    float s = 0.0;\n\n#define NMODE 7\n    const int MODE_KEYS[NMODE] = int[] ( 49,83,82,80,70,77,78 );\n    for (int m = 1; m < NMODE; m ++) {\n        if (texelFetch(iChannel0,ivec2(MODE_KEYS[m],0),0).x > 0.0) {\n            MODE = m;\n            break;\n        }\n    }\n\n    if (MODE == MODE_NORMAL || MODE == MODE_ROTATE || MODE == MODE_PHASE_SHIFT || MODE == MODE_FREQ_SHIFT || MODE == MODE_MOGRIFY || MODE == MODE_NOISE) {\n        for (int i = 0; i < NELEM; i ++) {\n            s += elem(i,p);\n        }\n    }\n    if (MODE == MODE_RANDOM_SUBSET) {\n        vec2 mu = modifier();\n        int nelem = int(float(NELEM)*mu.x);\n        int cnt = 0;\n        uint k = uint(1023.0*mu.y);\n        for (uint i = 0U; cnt < nelem && i < 1024U; i ++) {\n          uint j = f(k,i);\n          if (j < uint(NELEM)) {\n            s += elem(int(j),p);\n            cnt ++;\n          }\n        }\n    }\n    s += 0.1*(2.0*rnd(uint(fragCoord.x),uint(fragCoord.y),uint(iFrame))-1.0);\n    fragColor = (!SIGNED_PALETTE || s >= 0.0) ?\n      vec4(0.1+s,0.3+s,0.2*s,1.0) : vec4(0.0,0.1-s,-s,1.0);\n    fragColor = mix(fragColor,vec4(0.25,0.75,1,1),scroller(fragCoord));\n    \n    //fragColor = texture(iChannel0,fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const int NELEM = 813;\nconst uint PARAMS_DATA[1626] = uint[1626] (\n  0x8b2feb85U,0xff9ab641U,0xb7e1e2a9U,0xb298ab4fU,0x9b4bc91cU,0x59237a5bU,0xd2e8d5b5U,0x09217014U,\n  0xe3d3c9f3U,0x313dd46dU,0x42a5deecU,0x35703c35U,0x4e48c680U,0x211cff58U,0x17e7ddddU,0x227d3f03U,\n  0x3b16cbb8U,0xb00ebb3eU,0x609bd68eU,0xba9ac210U,0x57accaabU,0x1a1a6046U,0xb565d634U,0x4a5c4f04U,\n  0xac59caf3U,0x200b2862U,0xbd78d7bbU,0x6f215d11U,0xc8b6d1c7U,0xf40ad429U,0xdba0d6b0U,0x493b284eU,\n  0x8b1dd280U,0x244d782aU,0x71ccdbecU,0x4811b944U,0xd7a3e074U,0x2105cf5fU,0xc8adcb19U,0x09175a2eU,\n  0xc9e0da5dU,0x3e0a7a48U,0x8a42d85bU,0x18246e16U,0x23a8d2dbU,0x0e500956U,0xe445d1f5U,0x1133816bU,\n  0x2da3da6dU,0x4e06280fU,0x151adeb1U,0x150c961fU,0xd0ccce70U,0x27083026U,0x4f37caa9U,0x06170713U,\n  0x6656d069U,0x16089060U,0x3461d7b3U,0x18911b57U,0x5d8ecc10U,0x13045d0aU,0x7faccb5cU,0x120b1808U,\n  0x2520d20dU,0x0a821a1cU,0x6c9fdb88U,0x09237318U,0x2c99d4d2U,0x8f0cfd45U,0x463ed64fU,0xf412d92bU,\n  0xba41d5a3U,0x800c181cU,0x2869d789U,0x5e0ca311U,0xd981ce96U,0x2105a232U,0xb64ad792U,0x0e1bf44cU,\n  0xca3fd4a9U,0x13423337U,0x6bcdd585U,0x28688923U,0xb7e1d662U,0x1899606cU,0xd167d799U,0x5f085706U,\n  0xb04bd724U,0x2904be08U,0xb65ed09aU,0x1806e115U,0x3948ce12U,0x1309d316U,0xcf44d59fU,0x745ae54bU,\n  0x2f3ed91fU,0x07146b66U,0x66cfd6a2U,0x1a43d02cU,0x72bcd07bU,0x080e7502U,0x37d1d106U,0x0e109603U,\n  0x41e7daf7U,0x081f1b15U,0x58ebd1e9U,0xc3041401U,0x7bd8d875U,0x0f0f0b17U,0x71aad087U,0x0b098d4fU,\n  0xa9d0d358U,0x0988510eU,0xc3c3da7fU,0x10067f4fU,0xd4acdf84U,0x0a04131bU,0x88ead8dcU,0x20054671U,\n  0xd016d6f0U,0x430cf457U,0xeb72dab1U,0x77045507U,0xeb92d049U,0x17089616U,0xcea2d06dU,0x1a046975U,\n  0x503cd805U,0x3905c267U,0x2a31d65bU,0x096cb13cU,0x3d32d277U,0x0725da17U,0xed21d17aU,0x1307f608U,\n  0xd73fd68bU,0x0a905e36U,0xb841ce06U,0x1304db11U,0x63b4d989U,0x0718c70fU,0x50acd2c3U,0x07283117U,\n  0x7e53d628U,0x0789f575U,0x9855d292U,0x0d0f7f51U,0x2348d29fU,0x30052a79U,0xde70d2a1U,0x75041758U,\n  0xd68fdb8fU,0x0c05cb62U,0x172cd0e8U,0x0e086a53U,0x1c23d715U,0x8b041328U,0x451ad035U,0x09049831U,\n  0xd765d7f2U,0x7c077d5dU,0xc870d446U,0x0b61042fU,0xdfebd1d5U,0x0826df10U,0xe5d1d7edU,0x0b110324U,\n  0xd3bed460U,0x0745f63aU,0xde9edd31U,0x0607a72bU,0x21d9d4f5U,0xb5087b2fU,0x1e81ce88U,0x13046605U,\n  0x2368d8fdU,0x0824f422U,0x2762d564U,0xc105375aU,0x1538d6dcU,0xd604af26U,0x3f30d26cU,0x080df406U,\n  0x3941d6ceU,0x06990e7aU,0x7999d705U,0x1f049c35U,0x6a82d691U,0x21042868U,0x6892d174U,0x060aab2cU,\n  0x6370d10bU,0x070dec4cU,0x7d8bd57dU,0xd8073f52U,0x33aed656U,0xbd04ff31U,0x3bc9d33cU,0x9f04fa58U,\n  0xc5b8d723U,0x072ba763U,0xde87d28fU,0x3904db67U,0xee69dbc8U,0x0c09c255U,0x6fdad690U,0x0879c648U,\n  0xee49d759U,0x2707b11bU,0x6392d5ceU,0x9e07a747U,0x798fd0f8U,0x13046005U,0x411fd450U,0x07994552U,\n  0x0e44d978U,0x0609ca57U,0xdf82d739U,0x17047a66U,0x762dd4e0U,0x1f098c35U,0x80bcd6e7U,0x4804d47eU,\n  0x0f93d563U,0xae48e91cU,0x4438d79bU,0x0621244eU,0x593ad177U,0x0705ec7eU,0xc8dfd237U,0x0b05f45aU,\n  0xa641cfe9U,0x1a04c545U,0xb040d6e7U,0x2513f963U,0xc649d098U,0x07097233U,0xa247d875U,0x07107449U,\n  0x9a42cf7cU,0x06065654U,0x4c86d6feU,0x090dc16cU,0x4b8ad55fU,0x85087d41U,0x4c92d562U,0xcc04a52cU,\n  0x5584d20aU,0x0907eb14U,0xd4e7dbf0U,0x0605717cU,0x5088d503U,0x0890502bU,0x5b9ad5ebU,0x2f1c701dU,\n  0x47bad4a1U,0x080bf238U,0xd8acd8f0U,0x0f04dd0dU,0xd4abd4c4U,0xb7045515U,0xd5a5d54aU,0xee18a070U,\n  0xc38ad592U,0x441e892aU,0xcc93d557U,0xed069146U,0xe9a1d557U,0xdd14fd53U,0xd9a2d0a6U,0x07060827U,\n  0xa45fd35bU,0x1e053053U,0xdc9ed739U,0x080dbb7bU,0x619bd6e3U,0x61053150U,0x57a7d1eaU,0x1504bc0aU,\n  0x4ea1d87eU,0x060c3a62U,0x2da5d55fU,0x1484293cU,0x4798d44bU,0x2c042d40U,0x34b5d5cdU,0x139a0751U,\n  0x2ab5d530U,0x9f04635dU,0x5be1d21cU,0x1b059e66U,0x5aebd86eU,0x081a831cU,0x35a6d40aU,0x91045212U,\n  0x5aabd83bU,0x0c041d64U,0x69a5d869U,0x0804a423U,0x63c3d792U,0x06102f75U,0x6dced468U,0x082f192aU,\n  0x4ebdd5c3U,0x1b658560U,0x46cfd535U,0x461dca44U,0x5fcbd557U,0xe413114dU,0x6cc5d565U,0x58087765U,\n  0x62bcd319U,0x1705a935U,0xad5edaf7U,0x0a043b0cU,0x9a5dd947U,0x0a05320aU,0x9e4fd4fcU,0x1a04a740U,\n  0x9c51d56eU,0x0b996878U,0xb55dd320U,0x0c04031aU,0xaa59d5b6U,0x074c3c47U,0xaa50d378U,0x060eac7dU,\n  0xa761d3eaU,0x0807cd32U,0x4951d17aU,0x0b04a311U,0xbc66d6dcU,0x1c048326U,0xc373d55fU,0xcf098a5bU,\n  0xcf96d84cU,0x0b047944U,0x5e4bd434U,0x22047132U,0x605cd558U,0x0980724fU,0x1287d6e7U,0x07454a2fU,\n  0x1f8fd3f3U,0x061a4925U,0x8a62d5c1U,0x1026717bU,0x975ad428U,0x080d713eU,0xd067d473U,0x0d042b4fU,\n  0x1d58d483U,0x51043a2bU,0x283ed563U,0xaa1fca1aU,0x2744d5dbU,0x3096a40fU,0x0e37d9feU,0x0e06d22fU,\n  0x2849d53fU,0xf509bd44U,0x2917d36dU,0x070f091fU,0x4b89d53cU,0xb00f5174U,0x6442d7e9U,0x0f030758U,\n  0x2545d5bcU,0x2d12ca4aU,0x1448d5a4U,0x1a419647U,0x1b45d5c1U,0x66436732U,0x273cd48bU,0x0904ce01U,\n  0x3b19d5d6U,0x235b3242U,0xee67d4dbU,0x09586923U,0xdb58d6c6U,0x0d24d50cU,0xde6cd18bU,0x0704ee23U,\n  0xd76bd6a2U,0x2f05a10fU,0xd859d546U,0xd909800fU,0xd864d511U,0x8014e905U,0xe654d402U,0x0609c02dU,\n  0xca79d515U,0x0890a748U,0xdd49d5fdU,0x6f042545U,0xcab2d7a9U,0x0809ce6eU,0xd4e4d5b0U,0x4081ce28U,\n  0x116ed227U,0x060d664fU,0x1678de07U,0x04033044U,0x84a7d9a0U,0x0707cf17U,0x83adcf69U,0x0607e601U,\n  0x6a7ed611U,0x0644e836U,0x6b93d4faU,0x04152a4eU,0x708bd5dfU,0x0f786425U,0x7c84d6bdU,0x0506f855U,\n  0x768bcd0cU,0x06042b3aU,0xc8ced9edU,0x0906eb6dU,0xbebdd22eU,0x040b2149U,0xcac8d4ebU,0x0712a624U,\n  0x4f94d560U,0x109f6b76U,0x647dd408U,0x0853474dU,0x5880d5b1U,0x2cff2904U,0x657dd5a4U,0x107b8b42U,\n  0x5890d5e9U,0x0d764738U,0x658ed513U,0x0e770808U,0x5489d2eaU,0x0306e225U,0x6eb4d65aU,0x0c1edd6fU,\n  0x66add3a0U,0x070da634U,0x69b2d68bU,0x042ef358U,0x6ab0d4bcU,0x06276819U,0x9a4bd870U,0x04081d7fU,\n  0xbacad927U,0x040caa3dU,0xb4f0d783U,0x0f26a032U,0x4047d344U,0x0513c300U,0x484fd5e4U,0x51b0b95aU,\n  0xbaded5fbU,0x1dc6e722U,0xd7d6d461U,0x0d18cc77U,0xd2ccd6efU,0x050f3c3bU,0x45e1d4d8U,0x095eb87cU,\n  0x50ebd9ecU,0x0611fe70U,0x4350da67U,0x06048556U,0x384dd2c0U,0x05045b3bU,0x4f4fd25aU,0x0405ce39U,\n  0x4b47d992U,0x040e9914U,0xde8bd541U,0x08497f1fU,0xd780d41cU,0x07434b36U,0xf38ad6c0U,0x053ed277U,\n  0xe290d33dU,0x0424e80bU,0xde89d2b0U,0x03081a56U,0xe487d63eU,0x0a560830U,0xde8cd5abU,0x0d608c0eU,\n  0xf599740dU,0x031ad409U,0xdba0d9bfU,0x04045a33U,0xf48ed2b6U,0x0317436cU,0xdb8fd9b8U,0x0309bc79U,\n  0x8e59d4beU,0x082bcc63U,0xde99d4dfU,0x092ef56fU,0x0d71d6d3U,0x05369e0eU,0x5982d5aaU,0x0c6e2f38U,\n  0x5a8ed79aU,0x040b150bU,0x578ad511U,0x0c7ace28U,0x677cd512U,0x042aab1eU,0x5484d6a2U,0x07084918U,\n  0x5789d5d4U,0x0b38bf2eU,0x4f8dd5e1U,0x17c26232U,0x5d8acd7aU,0x0403291dU,0xc8b4d751U,0x0304711eU,\n  0xcfb9d440U,0x03138a7bU,0x6f9fd486U,0x052ceb53U,0x7fa1d625U,0x090f7064U,0xeaa0d610U,0x062f707eU,\n  0x7392d621U,0x0417b803U,0xc850d487U,0x0a074d5dU,0xc554d5a3U,0x0b50764cU,0x4d17d34fU,0x0311ce0aU,\n  0xa1ded432U,0x0631e22dU,0x9c3ed670U,0x06195012U,0x9345cb2aU,0x03022920U,0xac40d385U,0x04136c6dU,\n  0x1c79d2eeU,0x040bb47aU,0x9654d74fU,0x0410e51fU,0xb4e5d5aeU,0x0c6cef12U,0x75afd5f0U,0x131b7764U,\n  0xc3ddd4d9U,0x06242d03U,0xd7e4d3e2U,0x0418bc64U,0xd4e8d8d5U,0x0417fa32U,0x3cced1b3U,0x03033c6eU,\n  0x32d7d5e3U,0x10799f22U,0x3de1d1c9U,0x03050946U,0x37d5d7bfU,0x050a1608U,0x9858d263U,0x05096859U,\n  0x995dd7c9U,0x05102336U,0xd4c4d473U,0x070a2d28U,0xc9c9d6cfU,0x0527dc36U,0x553bd3b4U,0x040dcf16U,\n  0x0ceedbcfU,0x10686a59U,0x8c6bd6d0U,0x070a0467U,0x9e63d5f0U,0x0d5f4216U,0x5db1d69cU,0x042fcc56U,\n  0x63c5d69eU,0x060ea907U,0x4db9d534U,0x09456d79U,0x58bed478U,0x05138057U,0xe397db50U,0x04053313U,\n  0xe096d418U,0x100b0059U,0x60e3d477U,0x091a7474U,0x985cd720U,0x0704956fU,0x9759d358U,0x0309c969U,\n  0x7eb1d90cU,0x04033976U,0x7ab9d34bU,0x050cbe3bU,0x8bafce71U,0x05047f2dU,0x584dd7baU,0x040f8068U,\n  0x4345d2b6U,0x050b132bU,0xbb53d7a4U,0x03086941U,0xb8e6d642U,0x050bb540U,0x079dd4f0U,0x0963916bU,\n  0x7890da88U,0x0304137bU,0x3f55ce80U,0x03030868U,0xf584d7dbU,0x062e8a1bU,0xe678d1e3U,0x0505d921U,\n  0xe893d405U,0x0407056aU,0xe386d6ccU,0x0412ac39U,0x0cafd6d5U,0x083dba33U,0x14a1d457U,0x051b5366U,\n  0x2fafd7d2U,0x0424d335U,0x30aad4eaU,0x032be121U,0x33b2d49aU,0x0e09d652U,0x3194d6e9U,0x06156548U,\n  0x34f2d6c3U,0x0b15d60dU,0x3fefd9ffU,0x050d9b52U,0x543dd69aU,0x0437e63eU,0x534ed4c4U,0x0428201eU,\n  0x324dd6baU,0x052b741fU,0x0740d6ccU,0x09288235U,0x0a3bd3c4U,0x091afe77U,0x3340d413U,0x040eba7bU,\n  0x4c3dd66eU,0x0421c846U,0x402bd59aU,0x0621e630U,0x4f35d2afU,0x04096243U,0xc570d6a6U,0x06040369U,\n  0xbd7bd54cU,0x0427e367U,0xba86d518U,0x0b0b1b34U,0xb481d591U,0x1181e511U,0xc46dd5cbU,0x10a41f23U,\n  0xb081d5d5U,0x0c6dae46U,0xc674d6d5U,0x04030219U,0xc386d540U,0x063c5007U,0xc587d5f6U,0x070ee868U,\n  0xc885d566U,0x0408f931U,0xca79d518U,0x0948b57eU,0xc778d5c8U,0x0634c879U,0xb082d575U,0x0b200110U,\n  0xb47ad5b3U,0x0b5aef33U,0xaf6dd50aU,0x0b643956U,0xc080d5a8U,0x0d40997cU,0xb36cd57aU,0x08135e6dU,\n  0xc26fd571U,0x0433f148U,0xaf7dd5c6U,0x071f560fU,0xd2b0d2a9U,0x0404738dU,0xd8a8d97bU,0x01096ee7U,\n  0xcc9cd117U,0x020a9867U,0xe1b2d73bU,0x0503b946U,0xd69fcdf6U,0x0104ce32U,0xbf61d663U,0x030e416aU,\n  0xab61dc74U,0x010372eaU,0xb162cd99U,0x0101c991U,0xd387d4feU,0x0307f1d1U,0xab5cd027U,0x0202dd85U,\n  0xb15fd897U,0x020915d8U,0xbc5fce90U,0x01049faaU,0xa48cd5b5U,0x020a75fbU,0xc189d551U,0x14135275U,\n  0xae5fd736U,0x01022dceU,0xb98ed5efU,0x0207373dU,0xb360d5b8U,0x0d0ebd37U,0xd785da2aU,0x0002dc6eU,\n  0xad6bd5f9U,0x010189d0U,0xb57ed583U,0x02080f28U,0xac65ce73U,0x000395d2U,0xab60d55cU,0x0b0e9eacU,\n  0xa55fd570U,0x0c151f88U,0xb860d513U,0x0612fba2U,0xbe73c8d8U,0x0102ba47U,0xd099dbf5U,0x0107415eU,\n  0xc8bed21dU,0x0206f847U,0xd6a3cd6eU,0x02035dd1U,0x5356da5aU,0x04057b9dU,0x5f8accd2U,0x0002e607U,\n  0x5d8cd94eU,0x03060467U,0x7a89d7beU,0x02080dddU,0x64a4d9a9U,0x0206dbbaU,0x768cce77U,0x03025bd6U,\n  0x3bf3d206U,0x0616ee96U,0x40cad8b7U,0x020a0772U,0x26d7d547U,0x151f1543U,0x3bc9d1c2U,0x010438f8U,\n  0x49e4d2e3U,0x030cd762U,0x45dad274U,0x0204e7faU,0x4ce6d7e8U,0x0206da9bU,0x38c2da1fU,0x02015216U,\n  0x40dddef4U,0x0003c461U,0xa3d2d52aU,0x0a1f52eeU,0xa2e1d2b3U,0x0206a18cU,0xabbbd5eaU,0x0a11153bU,\n  0x9ddad754U,0x030a6445U,0x9cd6d26cU,0x04069f7aU,0xced7d16bU,0x05031220U,0xb6d6cf81U,0x0303b19fU,\n  0x4868d5ceU,0x050cf152U,0x6e5cd6e4U,0x07096bd3U,0x6663d425U,0x08067aceU,0x5850cdb8U,0x00048621U,\n  0x4b42d18dU,0x010865d9U,0x626dd63fU,0x0a08dc90U,0x6948d6a4U,0x0405c003U,0x674cd2e2U,0x030390e4U,\n  0x4251d8b5U,0x040484c9U,0x4256d0a4U,0x01060115U,0x5553db82U,0x0102249fU,0xc23ed6a1U,0x070d2702U,\n  0xa852dc6eU,0x020472d8U,0xc044cdbbU,0x0102796dU,0x3355d6f6U,0x0509dfa3U,0x474dd208U,0x0209e0a9U,\n  0x475bd6d2U,0x070a7c58U,0x5c39d86aU,0x020268b1U,0x564adce0U,0x0002e38aU,0x4246d762U,0x0209e015U,\n  0x5565d5cfU,0x070a1fbeU,0x6767d566U,0x02052b70U,0x5e4ed3b9U,0x020754feU,0x5250d3f6U,0x030c00daU,\n  0x3e43d370U,0x020819e8U,0x5d55d0daU,0x0104dba9U,0x6457d57dU,0x04089ae5U,0x4138d381U,0x01025632U,\n  0x3d67d512U,0x0b1f5cf8U,0x4462d58dU,0x03066fd3U,0x424bd572U,0x070ae6deU,0x4c38d79fU,0x0406fd0cU,\n  0x5545d2adU,0x0005b8feU,0x6666d506U,0x0a0f117aU,0x6a35d5f3U,0x0616a03fU,0x3c39d465U,0x0001ac01U,\n  0x694ed55aU,0x08177e51U,0x4066d5bdU,0x1026a3faU,0x3f4ad346U,0x02030d7fU,0x3f34d979U,0x010369dbU,\n  0x6934d5e0U,0x0208c569U,0x5436d29cU,0x0005ccacU,0x3e67d577U,0x080f24abU,0x393fd529U,0x1e35e171U,\n  0x5c3fd176U,0x00025e2aU,0x3f31d2a3U,0x0307f78bU,0x353cd5afU,0x0a0e58feU,0x344bd2d8U,0x04038b76U,\n  0x615ed54aU,0x050cebdbU,0x623fd6deU,0x030e10cbU,0x6563d55eU,0x0006d202U,0x6647d542U,0x0203f305U,\n  0x3a33d77bU,0x02085a1cU,0x3665d5e1U,0x0614e2bfU,0x4667d5f8U,0x0612d9f9U,0x5551da3eU,0x0102e7e7U,\n  0x594bd9b9U,0x00036a96U,0x6558d5bdU,0x081cf8d7U,0x3532d368U,0x0507bf19U,0x6957d30bU,0x010663aaU,\n  0x3a59d2d1U,0x0104481dU,0x5e4cd540U,0x07105fd8U,0x4543d58fU,0x0604f23dU,0x3662d5a7U,0x090992d5U,\n  0x5c45d57dU,0x01018ad6U,0x453bd381U,0x030246cdU,0x3a44d64dU,0x01050c56U,0x3c33d77aU,0x0106e53eU,\n  0x605dd591U,0x1428c203U,0x3264d575U,0x080b9f0bU,0x4d46db5dU,0x0201545cU,0x4a3ad587U,0x0002c588U,\n  0x3232d61aU,0x0715b5f5U,0x3637d4ddU,0x01026bbcU,0x5066d57bU,0x040d0da4U,0x3c57d8a8U,0x010288c2U,\n  0x4367d561U,0x090f2c2cU,0x3345d5c7U,0x000469bdU,0x4a3ad5b3U,0x0103ecbdU,0x5263d5d0U,0x02096293U,\n  0x6566d5e4U,0x04083c0fU,0x4639d4caU,0x00016d8bU,0x5032d7b0U,0x0105060eU,0x6445d555U,0x030465bbU,\n  0x4139d587U,0x2d4df6eeU,0x4b64d5f5U,0x040cea35U,0x5365d5c7U,0x0104a43cU,0x6a34d5f2U,0x03094999U,\n  0x3438d5f9U,0x1e27822fU,0x6a65d647U,0x070459acU,0x5e65d5d5U,0x0308d89dU,0x695cd50bU,0x0a0ac7e2U,\n  0x6066d55cU,0x0b0c0e08U,0x383bd3fcU,0x030382d9U,0x4243d585U,0x133973a1U,0x345ed5fcU,0x00000745U,\n  0x6139d571U,0x040baa5aU,0x624ed6ceU,0x01075367U,0x4a48d50aU,0x060f8d30U,0x3852d3a7U,0x0000ca2dU,\n  0x4550cfeeU,0x00039acbU,0x385ed526U,0x0003bcc3U,0x5232d57dU,0x1f2b1be3U,0x5f44d4f3U,0x0307ca6dU,\n  0x373dd5bfU,0x040de061U,0x4654dad2U,0x00028c3aU,0x3652d575U,0x060a48f2U,0x454ed89aU,0x0106f8e9U,\n  0x5c52d6c4U,0x020a6874U,0x3347d57aU,0x080dc9c5U,0x4b3fd514U,0x150e09afU,0x394ed57dU,0x1d27ce1eU,\n  0x4f50d5c0U,0x0e16aa3eU,0x644ad4c1U,0x01022ee3U,0x334fd47cU,0x01046e88U,0x3463d57bU,0x030406ebU,\n  0x654bd5d9U,0x02065d87U,0x4e54d36dU,0x02097931U,0x3a55d57bU,0x03076cc4U,0x5b33d580U,0x19344b63U,\n  0x3a35d5acU,0x2a21f5b5U,0x5c32d50aU,0x030c40a2U,0x483bd570U,0x080b9e11U,0x523ed536U,0x05080ee1U,\n  0x673fd44fU,0x040407a9U,0x3a66d512U,0x070cc0e0U,0x5236d589U,0x2b685590U,0x695cd5baU,0x0103e958U,\n  0x5f40d508U,0x030b0701U,0x6743d67aU,0x0202b859U,0x335fd5a3U,0x110e1e3fU,0x5a3ed486U,0x0208cae2U,\n  0x644ad540U,0x02048064U,0x3a33d585U,0x246182d1U,0x5a67d56bU,0x48b2b196U,0x5b41d5adU,0x0a0fadb1U,\n  0x4454d7a6U,0x01069fb5U,0x4449d34aU,0x00010035U,0x4f63d5f2U,0x0817023cU,0x5163d596U,0x02023be8U,\n  0x684fd5daU,0x1a44a938U,0x683dd50dU,0x050e45a0U,0x3236d232U,0x02021750U,0x6052d2b8U,0x00056d7eU,\n  0x5f3cd508U,0x0407483aU,0x6a5ad586U,0x03025891U,0x4d67d5edU,0x07069298U,0x3741d578U,0x040d0e81U,\n  0x635cd59aU,0x1b353fb8U,0x5f3dd5ebU,0x0204c833U,0x4751d474U,0x0304501bU,0x3e57d562U,0x03077181U,\n  0x4040d581U,0x21143333U,0x6861d502U,0x2d4de163U,0x5b4bd59aU,0x0718ab12U,0x4962d592U,0x0709efa3U,\n  0x5454d674U,0x0107accbU,0x434bd92aU,0x01016befU,0x6950d5dcU,0x05130187U,0x4550d5acU,0x030cac6aU,\n  0x3e53d515U,0x0c1f8c59U,0x414ed5f2U,0x0817ff27U,0x3b66d568U,0x030afab0U,0x5f5dd577U,0x02029667U,\n  0x3236d7adU,0x0108f50dU,0x533cd4b1U,0x01014e5eU,0x3543d55fU,0x0101c923U,0x6664d59bU,0x060f607aU,\n  0x6a5dd54aU,0x050341c7U,0x3965d543U,0x000001d7U,0x3747d5aeU,0x243b6fd2U,0x3443d5e3U,0x241e6378U,\n  0x5634d527U,0x0308786fU,0x3651d59bU,0x01076eb8U,0x4232d541U,0x0202e03bU,0x344dd5aeU,0x13141cddU,\n  0x4d66d54cU,0x05103aebU,0x3c44d578U,0x07180842U,0x6950d54bU,0x235ce07eU,0x335bd562U,0x020aae5bU,\n  0x6a4fd58cU,0x0e23e505U,0x5d32d55cU,0x3228a9c5U,0x4c57db06U,0x000047b2U,0x3a5dd5b2U,0x03077c4dU,\n  0x4166d58fU,0x01018913U,0x493ad487U,0x00026269U,0x4650d4f5U,0x0005326cU,0x3f61d55fU,0x0308d851U,\n  0x5862d5dcU,0x0608d6f1U,0x6a38d534U,0x0303f56fU,0x674ed58dU,0x112130d4U,0x5641d579U,0x0106d44dU,\n  0x5363d555U,0x06083f04U,0x694bd5d8U,0x080acc33U,0x3961d5a6U,0x0102d1e2U,0x3361d5e8U,0x040d4effU,\n  0x3663d5d1U,0x0203992aU,0x604bd58cU,0x181c5f52U,0x5364d5ebU,0x090640eeU,0x3a64d5b4U,0x04111b30U,\n  0x5e55d5eeU,0x0107f593U,0x3558d5d3U,0x0309a2e0U,0x604ed551U,0x1a2af518U,0x464ad6c9U,0x0003255aU,\n  0x5d60d56eU,0x0a0827e7U,0x5d5ad59fU,0x0005d019U,0x5e46d584U,0x020b491dU,0x323fd597U,0x101bbe86U,\n  0x3e50d796U,0x000036e0U,0x6932d586U,0x163aaa99U,0x6859d5abU,0x212a4befU,0x4640d52cU,0x030d2282U,\n  0x6559d551U,0x030223f3U,0x574dd490U,0x000006f5U,0x5d44d5c0U,0x0105996fU,0x3e59d506U,0x02035ae9U,\n  0x6163d503U,0x0406fb00U,0x6947d5eeU,0x071710f9U,0x4141d5d7U,0x0c283bccU,0x5a60d513U,0x01031375U,\n  0x6933d528U,0x00035a37U,0x5e60d5adU,0x000383fcU,0x3f3cd5b3U,0x214382deU,0x3c5fd598U,0x00019887U,\n  0x4965d5dbU,0x04053098U,0x4c63d5ceU,0x0003b287U,0x5962d594U,0x040b4bd9U,0x3865d5daU,0x0002c865U,\n  0x5d33d584U,0x1d45eddbU,0x6344d5d1U,0x0102b043U,0x5962d574U,0x0206ccbbU,0x4e4de100U,0x0000a736U,\n  0xaac8d74dU,0x03070615U,0xb7d9d6e5U,0x050f20e0U,0xa1d2d268U,0x02061737U,0xc5e7d5d3U,0x06112f05U,\n  0xcce0d682U,0x05078ff8U,0xc0dfd8a1U,0x02022a46U,0xa8ead8bcU,0x030430b8U,0xa0f1bfcdU,0x03075312U,\n  0xaecbd353U,0x030e6e2cU,0xafd7dad4U,0x010319b3U,0xa2d5d669U,0x060ae23eU,0xbdcfd164U,0x0202271cU,\n  0xb1ddce9fU,0x0103679bU,0x1e8cd195U,0x040498ddU,0x2a86d557U,0x09104e0eU,0x2064d814U,0x04073dbfU,\n  0x1c62d1eaU,0x03051b01U,0x146dd3edU,0x030b7275U,0x186dd81eU,0x0503a125U,0x227dd7e7U,0x030ab373U,\n  0x2578d4eeU,0x050fe4d0U,0x1b86dd15U,0x0201908fU,0x1884d4efU,0x04098ac4U,0x267ed568U,0x06079075U,\n  0x1472d321U,0x030667dfU,0x205dd80aU,0x0207a5b0U,0x0068d038U,0x081bc56fU,0x0561dd14U,0x0919378bU,\n  0x1c70d215U,0x0106d741U,0x1f6cd9f1U,0x0102ee7dU,0x195dd832U,0x02023774U,0x1d7acf4cU,0x01021d94U,\n  0x1767d7e9U,0x020858a9U,0x0872d431U,0x0614b46cU,0x298dd4b0U,0x070797dfU,0x3590d5caU,0x060fa904U,\n  0x1e5dd4cdU,0x020a0c59U,0x0567dc7aU,0x030cc4b3U,0x1684d473U,0x040847b8U,0x2592d7e3U,0x0208c77cU,\n  0x1878dc2dU,0x01047e50U,0xdbb2d30eU,0x030be618U,0xd3a1dc4dU,0x02027d74U,0x83b2d791U,0x02091af6U,\n  0x7093d5adU,0x0d2a11ffU,0x7abfd66eU,0x05113c16U,0xa29dd5bfU,0x0b0df823U,0x80b7d138U,0x0207b70dU,\n  0x7e93d33cU,0x030a7763U,0x97aed57cU,0x0b13b153U,0x83a7d69aU,0x04116af2U,0x85aed27dU,0x020a472aU,\n  0x8e3dd5f8U,0x1f16585aU,0x993ed76bU,0x030c5f27U,0xb152d1a3U,0x020a2908U,0xa44fd08aU,0x02077b2eU,\n  0x942ed4e7U,0x0c081e39U,0x9845cd6dU,0x00026474U,0x1969d52fU,0x323082e3U,0xa54cd889U,0x02079e8eU,\n  0x9a4ed35bU,0x04061aabU,0x9753d85fU,0x0507523bU,0x2176d7faU,0x0209c1f3U,0x1779d0c4U,0x0102a593U,\n  0x46ff225aU,0x091833b2U,0x46d4dc75U,0x0101bd23U,0x48dad1ebU,0x01046615U,0x40e8dc58U,0x01019815U,\n  0xef81d0cbU,0x020808e6U,0xca97d731U,0x03040e82U,0xef78dcc9U,0x01041bb1U,0xe8a5d562U,0x0e243a3cU,\n  0xd1a4d0d0U,0x0105f1f2U,0xd8a4d082U,0x01052d50U,0xd4a3d7f8U,0x0308d9f2U,0xc398d5e5U,0x18178604U,\n  0xe49dd323U,0x0105264cU,0xdea1de14U,0x00039cabU,0xdca8d1e7U,0x0103da3eU,0xdb9bd0cbU,0x0107ee43U,\n  0xd69ad885U,0x05052daaU,0xea7edcbcU,0x0004854cU,0xc8a1d5e2U,0x151f21f5U,0xe691d3d4U,0x0306f865U,\n  0xd8a0d904U,0x000523dfU,0xd0a7d222U,0x00049143U,0xe27fd55bU,0x051090c5U,0xe180d4b2U,0x030c1687U,\n  0xc5a7d72bU,0x010678a0U,0xce97ceb2U,0x0101f88cU,0xe295d063U,0x01016af9U,0xdb90d983U,0x0005609bU,\n  0x72a3d4afU,0x070e8013U,0xa39dd549U,0x0f099b1bU,0x8bb0d9f0U,0x0302e84dU,0x9c49d66fU,0x0410c933U,\n  0x9551d45dU,0x061175ceU,0x925bcc4dU,0x00026241U,0xa144d261U,0x01066790U,0x9b59db51U,0x0004653eU,\n  0x8b47d71fU,0x04038326U,0x9b76d559U,0x325c9c3bU,0x7f47d547U,0x07136d97U,0x895dd739U,0x0107f260U,\n  0xa143d523U,0x2f3692d1U,0x9e5ad0feU,0x010357dcU,0x7568d5e4U,0x081aee4cU,0x7552d574U,0x06050235U,\n  0x9953d820U,0x0202df7bU,0xa163d8a7U,0x01034d1cU,0xa05fd0b5U,0x0102786cU,0xa451d87dU,0x0208b558U,\n  0x944fd49bU,0x090c3b93U,0x9244d589U,0x0000532bU,0x7566d551U,0x0409e7cfU,0x9b4fd557U,0x225c91d7U,\n  0x7567d5b5U,0x061013d8U,0x7549d515U,0x030a4597U,0xa951d456U,0x0208ce30U,0xa065d0a7U,0x000359ecU,\n  0xa749d562U,0x060f5368U,0x864ad595U,0x00026d08U,0x7c5cd57eU,0x413e3269U,0x9f4fd47dU,0x0309fa46U,\n  0xa16ed5ffU,0x01021a40U,0x896dd5a5U,0x140e31d1U,0x855cd581U,0x2a540f36U,0x915fd651U,0x02094b36U,\n  0xa244d563U,0x2664eadaU,0x7276d51cU,0x06093e26U,0xa762d971U,0x010378c9U,0x7874d519U,0x02030b3dU,\n  0x8f70d5fdU,0x0404a289U,0x8b4cd661U,0x020492d1U,0xa753d57cU,0x1c514447U,0x9d5fd9c4U,0x00021f0dU,\n  0x9249d609U,0x0202af7aU,0x8d5ed006U,0x0302b8abU,0xf1b0d5c9U,0x374f55e5U,0x27b8d6ebU,0x06086efeU,\n  0x249fd0e6U,0x02094e6aU,0x279fd8e4U,0x040d24d5U,0x5989d61eU,0x040c7292U,0x638ed4bbU,0x020b2d9dU,\n  0x65a3d7b7U,0x0106e191U,0x767fd427U,0x0808b2e6U,0x638dd698U,0x0410b57fU,0x59a1d779U,0x0105b86eU,\n  0x768fd977U,0x01029570U,0x5e87ce6cU,0x0001d47fU,0x598fcf96U,0x0003f4bfU,0x5a8ad7f5U,0x0208313dU,\n  0x6b77d419U,0x050fe67dU,0x5ba2d26eU,0x0105ba31U,0x7889dab4U,0x00023bc8U,0xd695cd88U,0x0004cd70U,\n  0xeb9cd54bU,0x06107d86U,0xe39be1f4U,0x0001b575U,0x5800008dU,0x102e6e6dU,0x5b1ed5dbU,0x0512f7e3U,\n  0x392fd283U,0x010629f2U,0x3c25d763U,0x030aaa88U,0x451ada9eU,0x030264c7U,0xdf8ecff6U,0x0102fefaU,\n  0xfea2d448U,0x07138165U,0xcfabd51aU,0x03036474U,0xdb7fd85bU,0x03029d1dU,0xe08ce07eU,0x0000ae4bU,\n  0xe5aad4a8U,0x04062ba6U,0xf8afd45aU,0x0d12b08aU,0xd89ed53aU,0x08149902U,0xe482d566U,0x0b1c3067U,\n  0xf3add546U,0x081ac1f3U,0xdeabd66cU,0x0607c6f0U,0xf2aeff05U,0x030be902U,0xf0add5d1U,0x0c091d4dU,\n  0xff9cd53aU,0x1f41a5b8U,0xf7acd340U,0x0712aa4dU,0xcc8dd54bU,0x26596a1fU,0xe595e29cU,0x0000e7c0U,\n  0xc1d7d335U,0x030eeba5U\n);\n\nconst vec2 QUANT[8] = vec2[8] (\n  vec2(-0.058743894,1.0755732),\n  vec2(-0.097430155,1.0902576),\n  vec2(-11.18732,2.2068756),\n  vec2(0.0024930933,3.1348372),\n  vec2(0.003923203,0.49827805),\n  vec2(0.004502527,0.82286537),\n  vec2(-1.5654596,1.5684305),\n  vec2(0.00013225079,0.1995507)\n);\n\nconst uint FONT_DATA[53] = uint[53] (\n  0x001c2241U,0x7f414100U,0x003f413fU,0x41413f00U,0x003c4201U,0x01423c00U,0x001f2141U,0x41211f00U,\n  0x007f0101U,0x1f017f00U,0x007f0101U,0x1f010100U,0x003e4101U,0x79413e00U,0x00414141U,0x7f414100U,\n  0x003e0808U,0x08083e00U,0x00404040U,0x41221c00U,0x0041211fU,0x21418100U,0x00020202U,0x02023e00U,\n  0x00416355U,0x49494100U,0x00414345U,0x49516100U,0x001c2241U,0x41221c00U,0x003f4141U,0x3f010100U,\n  0x001c2241U,0x51225c80U,0x003f4141U,0x3f414100U,0x003e013eU,0x40413e00U,0x007f0808U,0x08080800U,\n  0x00414141U,0x41413e00U,0x00414141U,0x22140800U,0x00414949U,0x55634100U,0x00422418U,0x24428100U,\n  0x00412214U,0x08080800U,0x007f2010U,0x08047f00U,0x00000000U\n);\n\nbool font_glyph(int c,int i,int j) {\n  int k = c << 1;\n  k += i >> 2;\n  int s = i & 3;\n  s <<= 3;\n  s += j;\n  return ((FONT_DATA[k ^ 1] >> s) & 1U) != 0U;\n}\n\nconst uint MSG_DATA[13] = uint[13] (\n  0xf2558000U,0x19026004U,0xcc0d791cU,0x00a1662aU,0x0d1f2048U,0x010000b4U,0x30166144U,0x00143251U,\n  0x112c8c03U,0x050c944cU,0x8ef681a0U,0xe003264cU,0x16697b80U\n);\n\nconst int MSG_LEN = 83;\nuint msg_char(int k) {\n  k *= 5;\n  int i = k >> 5;\n  int j = k & 31;\n  uint w = MSG_DATA[i] >> j;\n  int n = min(5,32 - j);\n  if (n == 5) {\n    return w & 31U;\n  } else {\n    return ((MSG_DATA[i + 1] & ((1U << (5 - n)) - 1U)) << n) | (w & ((1U << n) - 1U));\n  }\n}\n\n\n","name":"Common","description":"","type":"common"}]}