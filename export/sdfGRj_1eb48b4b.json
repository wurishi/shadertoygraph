{"ver":"0.1","info":{"id":"sdfGRj","date":"1617526708","viewed":118,"name":"20210320_wavetable2","username":"FMS_Cat","description":"whoa\n\nit's basically an fbm phase modulated by fbm + subbass sinewave","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fbm( vec2 p ) {\n    vec2 sum = vec2( 0.0 );\n    sum += 0.5 * texture( iChannel0, p * 0.0625 ).xy;\n    sum += 0.25 * texture( iChannel0, p * 0.125 ).xy;\n    sum += 0.125 * texture( iChannel0, p * 0.25 ).xy;\n    sum += 0.0625 * texture( iChannel0, p * 0.5 ).xy;\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = ( fragCoord.xy * 2.0 - iResolution.xy ) / iResolution.y;\n    vec2 t = fbm( p );\n    fragColor = vec4( t, 0.0, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define tri(p) (1.-4.*abs(fract(p)-0.5))\n\nconst float TAU = 6.28318530718;\n\nvec2 fbm( vec2 p ) {\n    vec2 sum = vec2( 0.0 );\n    sum += 0.5 * texture( iChannel0, p * 0.0625 ).xy;\n    sum += 0.25 * texture( iChannel0, p * 0.125 ).xy;\n    sum += 0.125 * texture( iChannel0, p * 0.25 ).xy;\n    sum += 0.0625 * texture( iChannel0, p * 0.5 ).xy;\n    return sum;\n}\n\nvec2 bass( float time ) {\n    float w = fbm( 0.7 * vec2( tri( 40.0 * time ) ) ).x;\n\n    float phase = 0.1 * tri( 40.0 * time );\n    vec2 radius = vec2( 0.8 + 0.4 * w * sin( TAU * time ) );\n    vec2 offset = vec2( 0.0 );\n    vec2 uv = radius * vec2( sin( phase ), cos( phase ) ) + offset;\n    return 2.0 * fbm( uv ).xy - 1.0;\n}\n\n\nvec2 mainSound( int samp, float time ) {\n    vec2 wave = vec2( 0.0 );\n    \n    for ( int i = 0; i < 5; i ++ ) {\n        float fi = float( i );\n        float phase = time + 0.001 * fi * sin( 2.0 * time + fi );\n        wave += bass( phase ) / 5.0;\n    }\n    wave = 0.5 * clamp( 2.0 * wave, -1.0, 1.0 );\n    wave += 0.5 * sin( 40.0 * TAU * time );\n    \n    return wave;\n}\n","name":"Sound","description":"","type":"sound"}]}