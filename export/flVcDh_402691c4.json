{"ver":"0.1","info":{"id":"flVcDh","date":"1661388528","viewed":95,"name":"Radial Fractalization (01)","username":"spenceryonce","description":"Just a small shader to see what you can do in small amount. +added fractalizations to make it awesome. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","radial","shader","trippy","mini","dotproduct","small"],"hasliked":0,"parentid":"NtVcDh","parentname":"Radial Fractalization (02)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float angle = 0.2 + iTime * 0.3;\n    \n    uv = uv/dot(uv,uv)+(sin(iTime*0.1))+iTime*0.1;\n    \n    for(float i = 1.0; i < 16.0; i += 1.0){\n        uv = abs(uv);\n        uv -= 0.5;\n        uv *= 1.1;\n        uv *= mat2(\n            cos(angle), -sin(angle),\n            sin(angle), cos(angle)\n        );\n    }\n\n    fragColor = sin(9.0*uv.xyxy);\n}","name":"Image","description":"","type":"image"}]}