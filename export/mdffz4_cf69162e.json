{"ver":"0.1","info":{"id":"mdffz4","date":"1688571464","viewed":100,"name":"Twilight Zone Tunnel","username":"johnhearn","description":"Twisty tunnel effect","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["3d","tunnel","ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Md33Wr","filepath":"https://soundcloud.com/john-hearn-11/twilight-zone-intro1","previewfilepath":"https://soundcloud.com/john-hearn-11/twilight-zone-intro1","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 curve(float z) {\n    //return 0.5*vec2(cos(iTime)*sin(z/5.),\n    //             sin(iTime/4.)*sin(z/13.))*exp(z/10.);\n    return vec2(sin(iTime-1.),0.3*cos(iTime-1.))*exp(z/10.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = 2.0*(fragCoord-0.5*iResolution.xy)/iResolution.x;\n    \n    vec2 fov = asin(uv*iResolution.y/iResolution.x); // field of view\n    vec3 ray = vec3(uv, 0); // ray origin\n    vec3 delta = 0.05*normalize(vec3(tan(fov),1)); // ray direction\n    while(length(curve(ray.z) - ray.xy) < 4. && ray.z < 100.) { // march\n      ray += delta;\n    }\n\n    float stripe = sin(2.5*ray.z+6.*iTime); // adjust stripe width and speed\n    vec3 col = vec3(smoothstep(-.4,.4,stripe)); // anti-alias\n    col *= exp(-0.025*ray.z); // faint interior shadow to enhance 3d\n    col *= smoothstep(39., 35., mod(iTime, 39.)); // fade with sound track\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}