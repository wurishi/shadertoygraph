{"ver":"0.1","info":{"id":"NltBWS","date":"1663601905","viewed":124,"name":"Simple, Fractal based on Circles","username":"spenceryonce","description":"was playing around with some circles and wanted to make a fractal that was using the equation of the circle on fractalized space. Which is what I've done here. ","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","simple","math","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, float r){\n    return smoothstep(-0.01,0.01,(length(uv)-r));\n}\n\n\nvoid mainImage(out vec4 c, in vec2 fc)\n{\n    vec2 uv = (2.0*fc.xy -iResolution.xy)/iResolution.y;\n    float angle = 0.2 + sin(iTime)*0.3+cos(1./iTime);\n    \n    vec3 color = vec3(0.0);\n    \n    for(float i = 1.0;i<12.0;i+=1.0){\n        uv = abs(uv);\n    uv -= 0.5;\n    uv *= 1.1;\n    uv *= mat2(sin(angle),-sin(angle),cos(angle),sin(angle));\n    //uv += 0.5;\n    }\n    \n    float ci = circle(uv, 0.3+sin(iTime*2.)*0.1);\n    float cig = circle(uv, 0.3+cos(iTime*2.)*0.1);\n    \n    color.r = ci;\n    color.b=cig;\n    \n    c = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}