{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define M_PI 3.14159265358979323846\n#define FLT_MAX 1000000.0\n\t\nstruct line\n{\n\tvec4 line;\n\tvec3 emissive;\n};\n\nbool intersect_line(vec2 ro, vec2 rd, vec4 CD, inout float t)\n{\n\tvec2 A = ro;\n\tvec2 B = ro + rd;\n\n\tvec2 AmC = ro - CD.xy;\n\tvec2 DmC = CD.zw - CD.xy;\n\tvec2 BmA = rd;\n\t\n\tfloat denom = (BmA.x*DmC.y)-(BmA.y*DmC.x);\n\t\n\tif (denom != 0.0)\n\t{\n\t\tfloat r = ((AmC.y * DmC.x) - (AmC.x * DmC.y)) / denom;\n\t\tfloat s = ((AmC.y * BmA.x) - (AmC.x * BmA.y)) / denom;\n\t\t\n\t\tif ((r > 0.0 && r < t) && (s > 0.0 && s < 1.0))\n\t\t{\n\t\t\tt = r;\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n\t\n}\n\nbool intersect_scene(vec2 ro, vec2 rd, inout float t, out vec3 colour)\n{\n\tfloat angle = (iTime * 0.20) * 2.0 * M_PI;\n\tvec2 dir = vec2(cos(angle), sin(angle));\n    \t\n\tbool intersect = false;\n\tfloat minDist = t;\n\t\n\tvec4 lines[4];\n    vec2 normal[4];\n\t\n\tvec2 extent0 = dir * 0.1;\n    vec2 nrm0 = vec2(dir.y, -dir.x);\n\t\n    vec2 extent1 = vec2(dir.y, -dir.x) * 0.1;\n    vec2 nrm1 = dir;\n        \n\tfloat offset = 0.25;\n\t\n\tlines[0] = vec4(vec2(-offset, 0.0) + extent1, vec2(-offset, 0.0) - extent1);\n    normal[0] = nrm1;\n    \n\tlines[1] = vec4(vec2( offset, 0.0) + extent1, vec2( offset, 0.0) - extent1);\n    normal[1] = -nrm1;\n    \n\tlines[2] = vec4(vec2(0.0, -offset) + extent0, vec2(0.0, -offset) - extent0);\n    normal[2] = nrm0;\n    \n\tlines[3] = vec4(vec2(0.0,  offset) + extent0, vec2(0.0,  offset) - extent0);\n    normal[3] = -nrm0;\n\t\n\tvec3 colours[4];\n\tfloat lightComp = 1.0;\n\tfloat darkComp = 0.3;\n\t\n\tcolours[0] = vec3(lightComp, darkComp, darkComp);\n\tcolours[1] = vec3(darkComp, darkComp, lightComp);\n\t\n    colours[2] = vec3(darkComp, lightComp, darkComp);\n\tcolours[3] = vec3(darkComp, lightComp, darkComp);\n\t\n\tfor (int j = 0; j < 4; j++)\n\t{\n\t\tif (intersect_line(ro, rd, lines[j], minDist))\n\t\t{\n\t\t\tcolour = colours[j] * abs(dot(-rd, normal[j]));\n\t\t\tintersect = true;\n\t\t}\t\n\t}\n\t\n\tt = minDist;\n\treturn intersect;\n}\t\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat aspect = iResolution.y / iResolution.x;\n\tvec2 ro = -1.0 + 2.0 * (fragCoord.xy / iResolution.xy);\n\tro.y *= aspect;\n\t\n\tvec3 total = vec3(0.0);\n\t\n\tfor (int i = 0; i < 360; i++)\n\t{\n\t\tfloat angle = 2.0 * M_PI * (float(i) / 360.0);\n\t\tvec2 rd = vec2(cos(angle), sin(angle));\n\t\t\n\t\tfloat t = FLT_MAX;\n\t\tvec3 colour = vec3(0.0);\n\t\t\n\t\tif (intersect_scene(ro, rd, t, colour))\n\t\t{\n\t\t\ttotal += colour;\n\t\t}\n\t}\n\ttotal /= 360.0;\n\t\n\tfloat exposure = 1.0;\n\t\n\tfragColor = vec4(pow(total * exposure, vec3(1.0/2.2)), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsBSWW","date":"1411815623","viewed":839,"name":"Soothing","username":"pixelzealot","description":"Just a 2D lightfield visualisation experiment","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","raytrace","experiemnt"],"hasliked":0,"parentid":"","parentname":""}}