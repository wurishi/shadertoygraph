{"ver":"0.1","info":{"id":"DtlBDl","date":"1693643044","viewed":43,"name":"ufok","username":"marysia_pm","description":"1 - śledziowo-morski, 2 - limonkowo jagodowy, 3- (żółto-sraczkowaty)-chabrowy","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["ufo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0;\n\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n}\n\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n\n    f += 0.50000*noise( p ); p = m*p*2.02;\n    f += 0.25000*noise( p ); p = m*p*2.03;\n    f += 0.12500*noise( p ); p = m*p*2.01;\n    f += 0.06250*noise( p ); p = m*p*2.04;\n    f += 0.03125*noise( p );\n\n    return f/0.984375;\n}\n\nvec3 ogr( vec3 col)\n{\n    float suf = 0.9;\n    if((col.x*col.x + col.y*col.y + col.z*col.z)>3.0*suf*suf){\n    col.x /= 0.5*(col.x + col.y + col.z);\n    col.y /= 0.5*(col.x + col.y + col.z);\n    col.z /= 0.5*(col.x + col.y + col.z);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q = fragCoord/iResolution.xy;\n    vec2 p = -1.0 + 2.0*q;\n    p.x *= iResolution.x/iResolution.y;\n    float r = length(p);\n    \n    vec2 w = -0.7 + 3.0*q;\n    w.x *= iResolution.x/iResolution.y;\n    float t = length(w);\n    \n    vec2 e = vec2(-1.5, -0.5) + 2.0*q;\n    e.x*= iResolution.x/iResolution.y;\n    float y = length(e);\n  \n    // Time varying pixel color9i\n    vec3 col = 0.6 - 0.5*sin(3.0*iTime + y*60.0*vec3(0.5,-1,1)) + 0.4*cos(0.7*iTime+r*60.0*vec3(0,-0.6,0.1)) + 0.4*sin(2.0*iTime+t*80.0*vec3(0.7, -0.3, 1));\n    \n    float f = fbm( 1.0*p );\n    col = mix( col, vec3(1.0,1.0,1.0), f*0.7);\n    \n    col = ogr(col);\n    \n   \n    vec2 g = vec2(-1.0, - 0.2) + 2.0 * q;\n    g.x *= 1.2*iResolution.x/iResolution.y;\n    float glowa = length(g);\n\n    f = smoothstep( 1.5, 1.6, glowa );\n    col = mix( col, vec3(0.0), f );\n    col *= 1.0-0.1*smoothstep( 0.6,0.9, glowa );\n    \n    f = 1.0-smoothstep( 0.08, 0.15, t );\n    col = mix( col, vec3(1.0), f );\n    f = 1.0-smoothstep( 0.05, 0.1, y );\n    col = mix( col, vec3(1.0), f );\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    return vec2( sin(6.2831*440.0*time)*sin(6.2831*1.5*time)*sin(6.2831*0.05*time), sin(6.2831*440.0*time)*sin(6.2831*1.4*time)*sin(6.2831*0.05*time));\n}","name":"Sound","description":"","type":"sound"}]}