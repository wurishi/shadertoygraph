{"ver":"0.1","info":{"id":"MsjczK","date":"1492946694","viewed":129,"name":"Strobe Sphere","username":"30000fps","description":"2nd test â€“ modified simple sphere shader with light, found on shadertoy","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["test","sphere","strobe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4d2GDt","filepath":"https://soundcloud.com/logic-moon/im-in-your-veins","previewfilepath":"https://soundcloud.com/logic-moon/im-in-your-veins","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// i have no idea what i'm doing\n\n// light\nvec3 light = vec3(-1, -1, 1.6);\nvec3 light_color = vec3(.8, 1, 1);\n// sphere\nvec3 sphere = vec3(0, 0, 2);\nfloat sphere_size = 1.3;\nvec3 sphere_color = vec3(1, 1, 1);\n// strobe speed\nfloat strobe_speed = 1.1;\n\n// draw sphere\nfloat raySphere(vec3 rpos, vec3 rdir, vec3 sp, float radius, inout vec3 point, inout vec3 normal) {\n\tradius = radius * radius;\n\tfloat dt = dot(rdir, sp - rpos);\n\tif (dt < 0.0) {\n\t\treturn -1.0;\n\t}\n\tvec3 tmp = rpos - sp;\n\ttmp.x = dot(tmp, tmp);\n\ttmp.x = tmp.x - dt*dt;\n\tif (tmp.x >= radius) {\n\t\treturn -1.0;\n\t}\n\tdt = dt - sqrt(radius - tmp.x);\n\tpoint = rpos + rdir * dt;\n\tnormal = normalize(point - sp);\n\treturn dt;\n}\n\n// light, texture and color strobe \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tlight.xy = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n\tlight.y = -light.y;\n\tvec3 point; \n\tvec3 normal;\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\tuv.y = -uv.y;\n\tvec3 ray = vec3(uv.x, uv.y, 1.0);\n\tray = normalize(ray);\n    // background color   \n\tfragColor = vec4(.0,.0,.0,.0);\n\t\n\tfloat dist = raySphere(vec3(0.0), ray, sphere, sphere_size, point, normal);\n\t\n\tif (dist > 0.0) {\n\t\tvec3 tmp = normalize(light - sphere);\n\t\tfloat u = atan(normal.z, normal.x) / 3.1415*2.0 + iTime / 5.0;\n\t\tfloat v = asin(normal.y) / 3.1415*2.0 + 0.5;\n\t\t\n        // textured sphere\n        // fragColor.xyz = vec3(dot(tmp, normal)) * light_color * sphere_color * texture(iChannel0, vec2(u, v)).xyz;\n\t\t\n        //colored sphere\n        fragColor.xyz = vec3(dot(tmp, normal)) * light_color * vec3(0.2+0.5*cos(iTime*strobe_speed),0.5+0.5*sin(iTime*strobe_speed),0.6+0.5*sin(iTime*strobe_speed));\n\n    }\n}","name":"Image","description":"","type":"image"}]}