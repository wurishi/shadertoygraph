{"ver":"0.1","info":{"id":"MtGGzV","date":"1475630181","viewed":192,"name":"My Naive Raymarcher","username":"efairbanks","description":"A simplified raymarcher. Lighting is projected from the camera by way of estimating distance to the object using the number of steps it took to get to it. Fake-ish lighting, but adding diffuse lighting is pretty simple. (disclaimer: probably not simplest)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 eye = vec3(0,0,-10);\nvec3 sphere1Pos = vec3(0,0,2.);\nvec3 sphere2Pos = vec3(0,0,1.);\nvec3 torusPos = vec3(-1.,0,1.);\nconst float maxIterations = 64.;\n\nstruct ray{\n \tvec3 position;\n    vec3 direction;\n};\n\nfloat distTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n    \nfloat distSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n    \nray lookAt(in vec2 uv, in vec3 targetPoint){\n\tvec3 forward = normalize(targetPoint - eye);\n    vec3 up = vec3(0.,1.0,0.0);\n    vec3 right = cross(forward, up);\n    up = cross(forward, right);\n    vec3 ro = eye + forward * .1 + right * uv.x + up * uv.y;\n    vec3 rd = forward;\n    return ray(ro,rd);\n}\n\nvec3 rayMarch(ray marcher){\n    float epsilon = 0.00001;\n    float t = 0.;\n    for (float i = 0.; i < maxIterations; i++){\n        vec3 point = marcher.position + marcher.direction * t;\n        //float d = distSphere(point, 1.);\n        float d = distTorus(point, vec2(.75,.2));\n        if (d < epsilon){\n            return vec3(1.-i/maxIterations); \n        }\n        t+=d;\n    }\n    return vec3(0,0,0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    eye = vec3(0,sin(iTime) * 12. - 1.,-15.);\n    vec2 uv = fragCoord.xy / iResolution.xy * 2. - 1.;\n\tuv.x *= iResolution.x / iResolution.y;\n    ray eyeRay = lookAt(uv, vec3(0)); \n\tfragColor = vec4(rayMarch(eyeRay),1.0);\n}","name":"Image","description":"","type":"image"}]}