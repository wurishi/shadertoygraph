{"ver":"0.1","info":{"id":"tdsSzX","date":"1551800353","viewed":152,"name":"Kaleidoscope and Morphing","username":"Kua256","description":"Kaleidoscope and morphing shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["morphing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 circle(vec2 p)\n{\n    return vec2(length(p), 0.4);\n}\n\nvec2 square(vec2 p)\n{\n    return vec2(abs(p.x) + abs(p.y), 0.5);\n}\n\nvec2 rotate(vec2 p, float angle)\n{\n    mat2 mat = mat2(cos(angle), -sin(angle),\n                   sin(angle), cos(angle));\n    \n    p -= 0.5;\n    p *= mat;\n    p += 0.5;\n    \n    return p;\n}\n\nvec2 hogeloop(vec2 p, float loopnum)\n{\n    for(float i = 1.0; i <= loopnum; ++i)\n    {\n        p = abs(p * 1.5) - 1.0;\n        float t = iTime * 0.5 * i;\n        float c = cos(t);\n        float s = sin(t);\n        p *= mat2(c, s, -s, c);\n    }\n    return p;\n}\n\nvec3 hsv2rgb(vec3 hsv)\n{\n\tfloat r = hsv.z;\n\tfloat g = hsv.z;\n\tfloat b = hsv.z;\n\n\tfloat i = mod(floor(hsv.x / 60.0), 6.0);\n\tfloat f = hsv.x / 60.0 - i;\n\n\tfloat comS = 1.0 - hsv.y;\n\tfloat comF = 1.0 - f;\n\n\tif (i == 0.0)\n\t{\n\t\tg *= 1.0 - (hsv.y * comF);\n\t\tb *= comS;\n\t}\n\telse if (i == 1.0)\n\t{\n\t\tr *= 1.0 - (hsv.y * f);\n\t\tb *= comS;\n\t}\n\telse if (i == 2.0)\n\t{\n\t\tr *= comS;\n\t\tb *= 1.0 - (hsv.y * comF);\n\t}\n\telse if (i == 3.0)\n\t{\n\t\tr *= comS;\n\t\tg *= 1.0 - (hsv.y * f);\n\t}\n\telse if (i == 4.0)\n\t{\n\t\tr *= 1.0 - (hsv.y * comF);\n\t\tg *= comS;\n\t}\n\telse if (i == 5.0)\n\t{\n\t\tg *= comS;\n\t\tb *= 1.0 - (hsv.y * f);\n\t}\n\n\treturn vec3(r, g, b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0  - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec2 fSt = fract(uv * 1.0) - 0.5;\n\n    float a = sin(iTime * 4.0) * 0.5 + 0.5;\n    \n    fSt = hogeloop(fSt, 4.0);\n    \n    vec2 d = mix(circle(fSt), square(fSt), a);\n    vec3 color1 = clamp(vec3(mix(1.0, 0.0, smoothstep(0.78, 0.8, step(d.x, d.y))) * length(uv) + 0.4),\n                       0.0, 1.0);\n    \n    uv = rotate(uv + 0.5, abs(sin(iTime)) * 10.0) - 0.5;\n    d = mix(square(uv), circle(uv), a);\n    d = hogeloop(d, 5.0);\n    \n    vec2 axis = 1.0 - smoothstep(0.1, 0.2, abs(d));\n    vec3 color2 = clamp(vec3(mix(1.0, 0.0, smoothstep(0.78, 0.8, step(axis.x, axis.y))) * length(uv) + 0.4),\n                       0.0, 1.0);\n    color2 = 1.0 - color2;\n    \n    \n    vec3 fColor = 1.0 - (mix(color1, color2, 0.5)) * hsv2rgb(vec3(acos(cos(iTime * 0.2)) * 360.0, 0.5, 1.0));\n                        \n    \n    fragColor = vec4(fColor,1.0);\n}","name":"Image","description":"","type":"image"}]}