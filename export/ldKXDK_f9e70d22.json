{"ver":"0.1","info":{"id":"ldKXDK","date":"1466771792","viewed":393,"name":"2d Water Shader Test2","username":"Sleicreider","description":"from a noob","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","test","wave","water","shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float uFreqY = 20.;\nconst float uFreqX = 10.;\nconst float uSpeed = 3.;\nconst float uAmplitude = 0.003;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;    \n    fragColor = texture(iChannel0,uv + vec2(sin(uFreqY*uv.y + uFreqX*uv.x + uSpeed*iTime) * uAmplitude));\n}","name":"Image","description":"","type":"image"}]}