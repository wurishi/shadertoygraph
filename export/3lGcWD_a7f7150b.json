{"ver":"0.1","info":{"id":"3lGcWD","date":"1610987969","viewed":107,"name":"SDF 2D","username":"jupahe64","description":"SDF is love SDF is life","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sdf","text","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( vec2 p, vec2 b )\n{\n  vec2 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,q.y),0.0);\n}\n\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\nfloat opSmoothSubtraction( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n    return mix( d2, -d1, h ) + k*h*(1.0-h); }\n\n\n\nfloat eval(float signedDistance){\n    return clamp(-signedDistance, 0.0, 2.0);\n}\n\nfloat repeat(float value, float span){\n    return mod(value+span*0.5, span)-span*0.5;\n}\n\nfloat index(float value, float span){\n    return round(value/span)*span;\n}\n\nfloat zigzag(float value, float span){\n    return abs(mod(value, span)-span*0.5)/span*0.5;\n}\n\nfloat bounce(float t){\n    float off = 0.618;\n    \n    t = t * (1.0+off) - off;\n    \n    return t*t*t-2.0*t*t+1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float bpm = 90.0;\n    \n    float beatLength = 60.0 / bpm;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyy+vec3(0,2,4));\n\n\n    //prepare space\n    vec2 linear_space = fragCoord.xy-iResolution.xy*0.5;\n    \n    linear_space *= 1200.0/iResolution.x;\n    \n    vec2 distorted_space = linear_space;\n    \n    //fish eye + ripple effect\n    float norm_length = length(linear_space/iResolution.xy);\n    \n    float ripple = (1.0+sin(norm_length*50.0+iTime*10.0)) * 0.0625;\n    \n    distorted_space *= mix(1.0, norm_length+ripple, 0.25*bounce(fract(iTime/beatLength*0.5)));\n    \n    \n    //rotation effect\n    float a = 0.1*(1.0-norm_length);\n    \n    distorted_space = distorted_space.x * vec2(cos(a),sin(a)) + distorted_space.y * vec2(-sin(a),cos(a));\n    \n    \n    \n    vec2 space = distorted_space;\n    \n    //prepare bars (repitition, movement etc.)\n    float i = index(space.y,40.0);\n    \n    vec2 coord = vec2(\n    space.x,\n    repeat(space.y, 40.0)); //repeat in y direction\n    \n    float w = 200.0+sin(i*i*20.0)*50.0; //seemingly random width\n    \n    coord.x = repeat(clamp(coord.x, -400.0, 400.0), w*2.0+120.0); //offset \n    \n    coord.x -= zigzag(i+iTime*100.0,110.0)*50.0; //movement\n    \n    \n    //bar(s)\n    float d = sdBox(coord, vec2(w,0.0))-10.0;\n    \n    \n    //seperator line in the middle\n    d = max(d, -(abs(space.x)-((abs(space.y)>100.0)?10.0:-5.0)));\n    \n    \n    //circle mask\n    float circleD = (length(space)-500.0);\n    \n    \n    d = max(d, circleD); //interect bars with circle mask\n    \n    \n    //begin word \"SDF\"\n    \n    float wordScale = 1.5 - bounce(fract(iTime/beatLength)) * (0.5-0.25*fract(iTime/beatLength*0.5));\n    \n    vec2 inLetter = space*wordScale*vec2(1.0,1.25) + vec2(150.0,0.0);\n    \n    //S\n    float dWord = max(abs(length(inLetter+vec2(0.0,50.0)) - 50.0)-20.0, -sdBox(inLetter + vec2(54, 0), vec2(50, 50)));\n    \n    dWord = min(dWord, max(abs(length(inLetter+vec2(0.0,-50.0)) - 50.0)-20.0, -sdBox(inLetter + vec2(-54, 0), vec2(50, 50))));\n    \n    //D\n    inLetter = space*wordScale*vec2(1.0,1.25) + vec2(40.0,0.0);\n    \n    dWord = min(dWord, max(abs(length(inLetter+vec2(0.0,0.0)) - 100.0) -20.0, sdBox(inLetter + vec2(-100, 0), vec2(100, 150))));\n    \n    dWord = min(dWord, sdBox(inLetter + vec2(15, 0), vec2(20, 120.0)));\n    \n    //F\n    inLetter = space*wordScale*vec2(1.0,1.25) + vec2(-100.0,0.0);\n    \n    dWord = min(dWord, sdBox(inLetter + vec2(0, 0), vec2(20, 120.0)));\n    \n    dWord = min(dWord, sdBox(inLetter + vec2(-60.0, -100.0), vec2(50.0, 20.0)));\n    \n    dWord = min(dWord, sdBox(inLetter + vec2(-50.0, 0.0), vec2(40.0, 20.0)));\n    \n    //end word \"SDF\"\n    \n    \n    d = max(d, -dWord); //subtract word from bars\n    \n    bool even = mod(i, 100.0) >= 50.0;\n    \n    //draw bars with stripe pattern\n    fragColor = vec4(col,1.0) * min(1.0, eval(abs(repeat(d, 10.0+max(4.0,0.01+d)))-1.8) + \n    float(mod(space.x-space.y+iTime*(even?30.0:-30.0), 40.0)<20.0 && d<0.0));\n    \n    \n    \n    \n    \n    //draw circle with radial stripe pattern\n    d = abs(length(space)-550.0)-40.0;\n    \n    fragColor += vec4(col,1.0) * min(1.0, eval(abs(d)-2.0) + \n    float(mod(atan(space.x,space.y)-iTime*0.5, 0.3)<0.15 && d<0.0));\n    \n    \n    space = linear_space;\n    \n    //blends/frame:\n    space.x += space.y;\n    \n    space.y = abs(space.y)-100.0;\n    \n    //draw\n    fragColor += vec4(col,1.0) * eval(-(length(space*vec2(0.75,2.5))-600.0));\n    \n    \n    //reset space\n    space = linear_space;\n    \n    //draw more\n    fragColor += vec4(col,1.0) * eval(-(length(space*vec2(0.75,1.5))-600.0));\n    \n    \n    \n    vec3 wordFill = clamp(col * (1.0+float(space.y>0.0)), vec3(0.0), vec3(1.0));\n    \n    //draw word\n    fragColor += vec4(wordFill,1.0) * eval(dWord+10.0);\n    \n    \n    \n    \n    //radial background gradient\n    fragColor += vec4(col,1.0) * (0.125+0.25 * clamp((length(space)-350.0)/100.0, 0.0, 1.0));\n}","name":"Image","description":"","type":"image"}]}