{"ver":"0.1","info":{"id":"4dSfDh","date":"1508498430","viewed":198,"name":"Spots","username":"jfons_","description":"Render video using spots","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","video","spots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float radius = 0.005;\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n \n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec2 discrete(vec2 uv) {\n    vec2 m = mod(uv,radius*2.);\n    return uv - m + vec2(radius);\n}\n\nmat2 transform(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n\n\nfloat freqs[4];\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tfloat angle = iTime * 0.3;\n    radius = (cos(iTime * 0.4) * .5 + .5) * 0.015 + 0.005; \n    vec2 center = vec2(0.5,0.5);\n    mat2 t = transform(angle);\n    \n    vec2 ruv = fragCoord.xy / iResolution.x;\n    \n    vec2 truv = (ruv - center) * t;\n    vec2 dtruv = discrete(truv);\n\n    vec2 dtruv_uv = dtruv * inverse(t) + center;\n    dtruv_uv.y /= iResolution.y/iResolution.x;\n\n\n    vec3 rgb = texture(iChannel0,dtruv_uv).rgb;\n    \n    vec3 hsv = rgb2hsv(rgb);\n    \n    float size = min(hsv.b * 1.4 * radius, radius*1.1); \n    \n    float dist = distance(truv,dtruv);\n    float mult = 1.- smoothstep(size - radius * 0.5, size, dist);\n    fragColor = mult * vec4(hsv2rgb(vec3(hsv.rg,1)),1);\n}","name":"Image","description":"","type":"image"}]}