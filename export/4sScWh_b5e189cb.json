{"ver":"0.1","info":{"id":"4sScWh","date":"1491775054","viewed":411,"name":"Bulge warp","username":"Moghammed","description":"My first shader. Nothing fancy, but it might be a good starting point for others who are just starting out.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid","warp","bulge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * @author Mo \n */\n\n/**\n * Convert r, g, b to normalized vec3\n */\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\nconst vec3 fg = vec3(0.0, 1.0, 1.0);\n\n\nvec4 grid(vec2 uv, vec2 m, float rad, vec3 color) {\n\tfloat point = (mod(uv.x, 2.0) <= 0.5 || mod(uv.y, 2.0) <= 0.5) ? 1.0 : 0.0;\n    \n\treturn vec4(color, point);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = -vec2(0.8, 0.8) + fragCoord.xy / iResolution.xy*30.0;\n\tvec2 center = iResolution.xy * 0.5;\n\t\n    \n    \n    vec2 m = (vec2(30.0) * iMouse.xy / iResolution.xy) - 0.9;\n\n    vec2 factor = smoothstep(5.0, 0.0, distance(uv.xy,m.xy)) * normalize(m.xy - uv.xy);\n    //factor = distance(uv.xy, m.xy) < 1.0 ? smoothstep(5.0, 0.0, distance(uv.xy,m.xy)) : factor;\n    uv = distance(uv.xy, m.xy) < 5.0 ? uv + factor : uv;\n    \n    \n    // Background layer\n\tvec4 layer1 = vec4(rgb(0.0,0.0,0.0), 1.0);\n\t\n\tvec4 layer2 = grid(uv, m, 0.0, fg);\n    \n    \n    \n\t// Blend the two\n\tfragColor = mix(layer1, layer2, layer2.a);\n\n}","name":"Image","description":"","type":"image"}]}