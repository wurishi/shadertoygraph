{"ver":"0.1","info":{"id":"ltSXDR","date":"1442763668","viewed":2801,"name":"BB8","username":"germangb","description":"dirty","likes":26,"published":1,"flags":0,"usePreview":0,"tags":["test","mouse","bb8"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot (float a) {\n \treturn mat2(cos(a), sin(a), -sin(a), cos(a));   \n}\n\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r;\n}\n\nfloat sphere (vec3 p, float r) {\n \treturn length(p) - r;   \n}\n\nvec2 scene (vec3 p) {\n  \n    float plane = p.y + 1.0;\n    float body = sphere(p, 1.0);\n    \n    vec3 hp = (p);\n    hp.xy = rot(-0.3 + sin(iTime*2.0)*0.2) * hp.xy;\n    hp = hp-vec3(-0.25*0.0, 0.95, 0.0);\n    float head = sphere(hp, 0.5);\n    \n    head = min(head, sdCapsule(hp+vec3(-0.1,0.0,0.0), vec3(0.0, 0.7, 0.0), vec3(0.0), 0.025));\n    head = min(head, sdCapsule(hp+vec3(-0.1,0.0,0.1), vec3(0.0, 0.9, 0.0), vec3(0.0), 0.0125));\n    \n    float eye = sphere(hp-vec3(-0.375, 0.265, 0.0), 0.1125);\n    eye = min(eye, sphere(hp-vec3(-0.375, 0.2, -0.2), 0.06));\n    \n    if (plane < body) {\n     \tif (plane < head) return vec2(plane, 1.0);\n        if (head < eye)\n        \treturn vec2(head, 3.0);\n        else return vec2(4.0);\n    } else {\n     \tif (body < head) return vec2(body, 2.0);\n        if (head < eye)\n        \treturn vec2(head, 3.0);\n        else return vec2(eye, 4.0);\n    }\n}\n\nvec3 normal (vec3 p) {\n    vec2 eps = vec2(0.001, 0.0);\n    return normalize(vec3(\n    \tscene(p+eps.xyy).x - scene(p-eps.xyy).x,\n        scene(p+eps.yxy).x - scene(p-eps.yxy).x,\n        scene(p+eps.yyx).x - scene(p-eps.yyx).x\n    ));\n}\n\nvec4 raymarch (vec3 ro, vec3 rd) {\n    float h = 0.0;\n    for (int i = 0; i < 175; ++i) {\n        vec3 p = ro+h*rd;\n        vec2 test = scene(p);\n        h += test.x;\n        if (h < 0.01) break;\n        if (h > 64.0) break;\n        if (test.x < 0.001)\n            return vec4(p, test.y);\n    }\n    return vec4(-1.0);\n}\n\nfloat shadow (vec3 ro, vec3 rd) {\n \tfloat smax = 1.0;\n    float smin = 100.0;\n    float h = 0.0;\n    float shadow = 1.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 p = ro+h*rd;\n        float test = scene(p).x;\n        h += test;\n        if (test < 0.0001)\n            return 0.0;\n        else\n            shadow = min(2.5*test/h, shadow);\n    }\n    \n    return shadow;\n    \n}\n\nfloat ppp (float x) {\n \tif (abs(x) > 0.85) return 0.0;\n    return 1.0;\n}\n\nmat3 camera () {\n    float a =  iMouse.x*0.05 + 2.0;\n    vec3 right =\tvec3(1.0, 0.0, 0.0);\n \tvec3 up =\t\tnormalize(vec3(0.0, 1.0, 1.8 + (iMouse.y/iResolution.y*2.0-1.0)*1.5)); \n    \n    mat2 ra = rot(a);\n    right.xz *= ra;\n    up.xz *= ra;\n        \n    return mat3(right, up, cross(right, up));\n}\n\nconst float orgl = 0.5;\n\nvec4 bb8Body (vec3 raym) {\n    float a = iTime;\n    float b = 42.0;\n    raym.xy *= mat2(cos(a), sin(a), -sin(a), cos(a));\n    raym.xz *= mat2(cos(b), sin(b), -sin(b), cos(b));\n    vec4 rust = texture(iChannel1, raym.xz*0.5) + texture(iChannel1, raym.zy*0.5);\n    rust.w = 0.0;\n    vec4 wh = vec4(0.9, 0.9, 0.9, 0.0);\n    vec4 color;\n    color = vec4(1.0, 1.0, 1.0, 0.0);\n        \n    color = mix(vec4(1.0,0.8,0.4, 0.0), color, smoothstep(0.0, 0.1, length(raym.xy)-0.575));\n    color = mix(vec4(1.0,0.8,0.4, 0.0), color, smoothstep(0.0, 0.1, length(raym.zy)-0.575));\n    color = mix(vec4(1.0,0.8,0.4, 0.0), color, smoothstep(0.0, 0.1, length(raym.xz)-0.575));\n\n    color = mix(vec4(1.0,0.8,0.4, 0.0), color, smoothstep(0.0, 0.075, abs(raym.x)-0.01));\n    color = mix(vec4(1.0,0.8,0.4, 0.0), color, smoothstep(0.0, 0.075, abs(raym.y)-0.01));\n    color = mix(vec4(1.0,0.8,0.4, 0.0), color, smoothstep(0.0, 0.075, abs(raym.z)-0.01));\n    \n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.0125, abs(raym.x)-0.0075));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.0125, abs(raym.y)-0.0075));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.0125, abs(raym.z)-0.0075));\n    \n    color = mix(wh, color, smoothstep(0.0, 0.025, length(raym.xy)-0.5));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.0125, abs(length(raym.xy)-0.5)-0.095));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.025, ppp(raym.z)+abs(raym.x+raym.y)*0.1/(-abs(raym.z)+1.05)-0.1125));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.025, ppp(raym.z)+abs(raym.x-raym.y)*0.1/(-abs(raym.z)+1.05)-0.1125));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.0125, abs(length(raym.xy)-0.5)-0.07));\n    color = mix(color*0.75, color, smoothstep(0.0, 0.0125, abs(length(raym.xy)-0.5)-0.005));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.025, ppp(raym.z)+abs(raym.x+raym.y)*0.1/(-abs(raym.z)+1.05)-0.08));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.025, ppp(raym.z)+abs(raym.x-raym.y)*0.1/(-abs(raym.z)+1.05)-0.08));\n    color = mix(wh, color, smoothstep(0.0, 0.025, length(raym.xy)-0.25));\n    color = mix(vec4(0.5, 0.5, 0.5, 0.0), color, smoothstep(0.0, 0.025, length(raym.xy)-0.2));\n\n    color = mix(wh, color, smoothstep(0.0, 0.025, length(raym.zy)-0.5));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.0125, abs(length(raym.zy)-0.5)-0.095));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.025, ppp(raym.x)+abs(raym.z+raym.y)*0.1/(-abs(raym.x)+1.05)-0.1125));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.025, ppp(raym.x)+abs(raym.z-raym.y)*0.1/(-abs(raym.x)+1.05)-0.1125));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.0125, abs(length(raym.zy)-0.5)-0.07));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.0125, ppp(raym.x)+abs(raym.z+raym.y)*0.1/(-abs(raym.x)+1.05)-0.08));\n    color = mix(color*0.75, color, smoothstep(0.0, 0.0125, abs(length(raym.zy)-0.5)-0.005));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.0125, ppp(raym.x)+abs(raym.z-raym.y)*0.1/(-abs(raym.x)+1.05)-0.08));\n    color = mix(wh, color, smoothstep(0.0, 0.025, length(raym.zy)-0.25));\n    color = mix(vec4(0.5, 0.5, 0.5, 0.0), color, smoothstep(0.0, 0.025, length(raym.zy)-0.2));\n\n    color = mix(wh, color, smoothstep(0.0, 0.025, length(raym.xz)-0.5));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.0125, abs(length(raym.xz)-0.5)-0.095));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.025, ppp(raym.y)+abs(raym.x+raym.z)*0.1/(-abs(raym.y)+1.05)-0.1125));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.025, ppp(raym.y)+abs(raym.x-raym.z)*0.1/(-abs(raym.y)+1.05)-0.1125));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.0125, abs(length(raym.xz)-0.5)-0.07));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.0125, ppp(raym.y)+abs(raym.x+raym.z)*0.1/(-abs(raym.y)+1.05)-0.08));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.0125, ppp(raym.y)+abs(raym.x-raym.z)*0.1/(-abs(raym.y)+1.05)-0.08));\n    color = mix(wh, color, smoothstep(0.0, 0.025, length(raym.xz)-0.25));\n    color = mix(vec4(0.5, 0.5, 0.5, 0.0), color, smoothstep(0.0, 0.0125, length(raym.xz)-0.2));\n    if (raym.y > 0.0) color = mix(wh, color, smoothstep(0.0, 0.0125, length(raym.xz)-0.13));\n\t\n    return color*mix(rust.r*rust.r, 1.0, color.w);\n}\n\nvec4 bb8Head (vec3 p) {\n    \n    p.xy = rot(-0.3 + sin(iTime*2.0)*0.2) * p.xy;\n    vec4 rust = texture(iChannel1, p.xz*0.5) + texture(iChannel1, p.zy*0.5);\n    rust.w = 0.0;\n    vec4 color = vec4(1.0, 1.0, 1.0, 0.0);\n    \n   // color = mix(vec3(0.0), color, smoothstep(0.0, 0.0125, p.y-0.95));\n    color = mix(vec4(0.25, 0.25, 0.25, 0.0), color, smoothstep(0.0, 0.0125, abs(p.y-0.925)-0.05));\n    color = mix(vec4(0.5, 0.5, 0.5, 0.0), color, smoothstep(0.0, 0.0125, abs(p.y-0.925)-0.03));\n\n    color = mix(vec4(1.0,0.8,0.4, 0.0), color, smoothstep(0.0, 0.025, abs(p.y-1.3)-0.04));\n    color = mix(vec4(1.0,0.5,0.0, 0.0)*0.75, color, smoothstep(0.0, 0.0125, abs(p.y-1.3)-0.03));\n    color = mix(vec4(1.0,0.5,0.0, orgl), color, smoothstep(0.0, 0.0125, abs(p.y-1.3)-0.02));\n\n    float angle = atan(p.x/p.z);\n    float t = mod(angle, 3.1415/8.0);\n    color = mix(mix(vec4(0.25, 0.25, 0.25, 0.0), vec4(1.0, 1.0, 1.0, 0.0), smoothstep(0.0, 0.075, abs(t-0.2)-0.3)), color, smoothstep(0.0, 0.0075, abs(p.y-1.39)-0.025));\n    color = mix(mix(vec4(0.5, 0.5, 0.5, 0.5), vec4(0.25), smoothstep(0.0, 0.075, abs(t-0.2)-0.1)), color, smoothstep(0.0, 0.0075, abs(p.y-1.39)-0.02));\n\n    if (p.x < 0.0) {\n    \tcolor = mix(vec4(1.0, 1.0, 1.0, 0.0), color, smoothstep(0.0, 0.0125, length((p.zy-vec2(0.0, 1.225))*vec2(1.0, 1.3))-0.175));\n    \tcolor = mix(vec4(0.75, 0.75, 0.75, 0.0), color, smoothstep(0.0, 0.0125, abs(length((p.zy-vec2(0.0, 1.225))*vec2(1.0, 1.3))-0.15)));\n    }\n    \n    return color*mix(1.0, rust.r*rust.r, color.b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\t\n    mat3 cam = camera();\n    vec3 ro = cam * vec3(uv, -1.5-iMouse.y/iResolution.y);\n    vec3 rd = cam * normalize(vec3(uv, 1.0));\n    \n    vec4 raym = raymarch(ro, rd);\n    if (raym.w > 0.0) {\n        \n        vec3 light = ro+vec3(-2.0, 4.0, -1.0);\n        \n        vec3 n = normal(raym.xyz);\n        \n        float spec = 0.0;\n        vec3 droidColor = vec3(0.0);\n        if (raym.w == 1.0) {\n            spec = 0.25;\n            droidColor.rgb = texture(iChannel0, rot(1.0)*(raym.xz*0.05 + vec2(-iTime*0.05, 0.0))).rgb;\n        } else if (raym.w == 2.0) {\n            vec4 bc = bb8Body(raym.xyz);\n            droidColor.rgb = bc.rgb;\n            spec = bc.a;\n        } else if (raym.w == 3.0) {\n            vec4 bc = bb8Head(raym.xyz);\n            droidColor.rgb = bc.rgb;\n            spec = bc.a;\n            \n        } else if (raym.w == 4.0) {\n         \tdroidColor.rgb = vec3(0.0);\n            if (raym.z < -0.15 && mod(iTime, 1.0) < 0.1) {\n                droidColor.rgb = vec3(0.0, 4.1, 0.2);\n                spec = 4.0;\n            } else spec = 1.0;\n        }\n        fragColor.rgb = droidColor;\n        float shadoww = shadow(raym.xyz+n*0.01, normalize(light-raym.xyz));\n        float diff = clamp(dot(n, normalize(light-raym.xyz)/*normalize(vec3(1.0))*/), 0.0, 1.0);\n        \n        if (raym.w == 1.0) {\n         \tdiff = 1.0; \n        }\n        \n        fragColor *= mix(0.125, 1.0, shadoww);\n        fragColor *= mix(0.125, 1.0, diff);\n                \n        vec3 sur2light = normalize(light-raym.xyz);\n        vec3 sur2eye = normalize(ro - raym.xyz);\n        vec3 ref = reflect(sur2eye, n);\n        float sp = clamp(dot(ref, -sur2light), 0.0, 1.0);\n                \n        fragColor.rgb += vec3(pow(sp, 64.0) * shadoww * spec);\n        fragColor.rgb += vec3(pow(sp, 128.0) * shadoww * spec);\n        fragColor.rgb += vec3(pow(sp, 256.0) * shadoww * spec);\n        fragColor.rgb += vec3(pow(sp, 1.0) * shadoww * spec)*0.1;\n       \n        if (raym.w != 1.0) {\n  \t       /*vec3 cm = texture(iChannel2, n).rgb;\n            cm = pow(cm, vec3(2.0)) * 0.25;\n           fragColor.rgb += cm * spec * shadoww;*/\n        }\n        \n        fragColor.rgb = mix(vec3(1.0), fragColor.rgb, exp(-length(raym.xyz)*0.05));\n        \n        if (raym.w != 1.0) {\n        \tfloat asd = clamp(dot(n, sur2eye), 0.0, 1.0);\n        \tasd = smoothstep(0.25, 0.35, asd);\n        \tfragColor.rgb = mix(vec3(0), fragColor.rgb, asd);\n        }\n    } else {\n    \tfragColor = vec4(1.0);\n    }\n   \n    vec4 c = step(texture(iChannel0, fragCoord/8.), fragColor);\n    fragColor = mix(fragColor, c, 0.0);\n    fragColor.rgb = pow(fragColor.rgb, vec3(0.77));\n\n}","name":"Image","description":"","type":"image"}]}