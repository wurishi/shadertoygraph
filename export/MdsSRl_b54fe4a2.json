{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//////////////////\n// Hypnotic Disco\n\n// Noise from IQ\nvec2 hash( vec2 p )\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n\tconst float K1 = 0.366025404;\n\tconst float K2 = 0.211324865;\n\t\n\tvec2 i = floor( p + (p.x+p.y)*K1 );\n\t\n\tvec2 a = p - i + (i.x+i.y)*K2;\n\tvec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0);\n\tvec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n\t\n\tvec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\t\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\t\n\treturn dot( n, vec3(70.0) );\n}\n\n// http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 hsv2rgb(vec3 c)\n{\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n// Adapted from lensflare by Musk \nvec3 spotLight(vec2 uv,vec2 pos)\n{\n\tvec2 main = uv-pos;\n\tvec2 uvd = uv*(length(uv));\n\t\n\tfloat ang = atan(main.x/main.y);\n\tfloat dist=length(main); dist = pow(dist,.1);\n\t\n\tfloat f0 = 1.0/(length(main)*16.0+1.0);\n\tf0 = f0 + f0 * (sin(noise(vec2(0.,(pos.x+pos.y)*2.2+ang*4.0+5.954)*2.0))*.1+dist*.1+.8);\n\t\n\tvec3 c = - vec3(length(uvd)*.05);\n\tc+=vec3(f0);\n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat T = iTime;\n\tfloat T2 = 2.*iTime;\n\tfloat T3 = 3.*iTime;\n\tfloat T_20 = iTime/20.;\n\t//\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 q = 2.*uv-1.;\n\tq.y *= iResolution.y/iResolution.x;\n\t//\n\tfloat a = 360. * noise( vec2(0., T_20) );\n\tmat2 rotmat = mat2(cos(a), -sin(a), sin(a), cos(a));\n\tq = rotmat*q;\n\t//\n\tvec3 tint = vec3(fract(a),1.,1.);\n\t//\n\tconst float nbc = 128.;\n\tfloat st = sin(T_20);\n\tvec2 c = vec2(0.,0.);\n\tvec3 col = vec3(0.,0.,0.);\n\tfloat inc = 3.14159*cos(0.1*T);\n\tfloat d = 0.;\n\tfor(float i=0.; i<nbc; i+=1.)\n\t{\n\t\tc.x = cos(i*inc);\n\t\tc.y = sin(i*inc);\n\t\tc *= i/nbc;\n\t\td = length(q-c);\n\t\ttint.y = fract(T2);\n\t\ttint.z = fract(i/nbc*st+T);\n\t\tcol += clamp(exp(-64.*d),0.,1.) * hsv2rgb(tint);\n\t}\n\t// Spots\n\tvec2 pos;\n\tpos.x=sin(T2)*.5;\n\tpos.y=sin(T2*.913)*.5;\n\tvec3 colf = tint * (spotLight(q,pos) + spotLight(q,-pos));\n\t//\n\tcol = clamp(col+colf,0.,1.);\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdsSRl","date":"1405963418","viewed":2514,"name":"Hypnotic Disco","username":"xbe","description":"A simple shader, just putting together some stuff from different parts and tweaking them into something funny... There is still plenty of room for optimization so far.","likes":29,"published":1,"flags":0,"usePreview":0,"tags":["2d","oldschool","spiral"],"hasliked":0,"parentid":"","parentname":""}}