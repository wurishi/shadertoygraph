{"ver":"0.1","info":{"id":"wlXGD7","date":"1556501695","viewed":709,"name":"Surface Tension II","username":"wyatt","description":"Using a Gaussian blur to hack an electric field from a self-polarizing fluid","likes":11,"published":3,"flags":32,"usePreview":0,"tags":["fluid","physics","surface","tension"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 light;\nfloat ln (vec3 p, vec3 a, vec3 b) {return length(p-a-(b-a)*dot(p-a,b-a)/dot(b-a,b-a));}\nfloat X (vec3 a, vec3 s, vec3 n) {\n    vec3 r = reflect(light-s,n);\n\treturn 3.*exp(-.5*ln(a,s,s+r));\n}\nvoid mainImage (out vec4 Q, vec2 U) {\n    light = vec3(iMouse.xy,500.*R.y);\n    Q = vec4(0);\n    vec3 p = vec3(U,0),n,u;\n    for (int x = -2; x <= 2; x++)\n    for (int y = -2; y <= 2; y++) {\n       u = p + vec3(x,y,-17);\n       vec2 o = D(u.xy).zw;\n       n = normalize(vec3(o,.1));\n       Q.x += X(p,u,n);\n       n = normalize(vec3(o,.2));\n       Q.y += X(p,u,n);\n       n = normalize(vec3(o,.3));\n       Q.z += X(p,u,n);\n    }\n    Q = Q/40.;\n    Q.x *= 0.75-0.25*B(U).x;\n    Q *= 0.9+.5*exp(-.05*ln(light,vec3(U,0),vec3(U,0)+normalize(vec3(D(u.xy).zw,-10))));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 T (vec2 U) {\n    // sample things where they were, not where they are\n\tU -= 0.5*A(U).xy;\n\tU -= 0.5*A(U).xy;\n    return A(U);\n}\nfloat ln (vec2 p, vec2 a, vec2 b) { // returns distance to line segment for mouse input\n    return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n   C = T(U);\n   float b = B(U).x;\n   vec4 // neighborhood\n        n = T(U+vec2(0,1)),\n        e = T(U+vec2(1,0)),\n        s = T(U-vec2(0,1)),\n        w = T(U-vec2(1,0));\n   C.x -= 0.25*(e.z-w.z);\n   C.y -= 0.25*(n.z-s.z);\n   C.z  = 0.25*((s.y-n.y+w.x-e.x)+n.z+e.z+s.z+w.z);\n   C.xy = mix(C.xy,0.25*(n+e+s+w).xy,.5);\n    C.xy += b*D(U).zw;\n    \n   // boundary conditions\n    if (iFrame < 1) C = vec4(0);\n     \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec4 T (vec2 U) {\n\tU -= 0.5*A(U).xy;\n\tU -= 0.5*A(U).xy;\n    return B(U);\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n   C = T(U);\n    vec4 // neighborhood\n        n = T(U+vec2(0,1)),\n        e = T(U+vec2(1,0)),\n        s = T(U-vec2(0,1)),\n        w = T(U-vec2(1,0));\n    C.x += .01*(sign(0.25*(n+e+s+w).x)-C.x);\n    if (iFrame < 1) {\n        C = vec4(sin(60.*atan(U.x,U.y)),0,0,0);\n    }\n\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 Q, vec2 U )\n{\n    Q = 0.5*D(U);\n    for (float i = -I; i < I; i++) {\n        vec2 x = U+vec2(i,0);\n    \tQ += M*exp(-O*i*i)*B(x);\n    }\n    \n    \n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 Q, vec2 U )\n{\n    Q = vec4(0);\n    for (float i = -I; i < I; i++) {\n        vec2 x = U+vec2(0,i);\n    \tQ += M*exp(-O*i*i)*C(x);\n    }\n    vec4\n    \tn = D(U+vec2(0,1)),\n        e = D(U+vec2(1,0)),\n        s = D(U-vec2(0,1)),\n        w = D(U-vec2(1,0));\n    Q.zw = vec2(e.x-w.x,n.x-s.x)+vec2(e.y-w.y,n.y-s.y);\n    if (iMouse.z>0.) Q.x += exp(-.1*length(U-iMouse.xy));\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0, (U)/R)\n#define B(U) texture(iChannel1, (U)/R)\n#define C(U) texture(iChannel2, (U)/R)\n#define D(U) texture(iChannel3, (U)/R)\n\n#define I 6.\n#define M .03*vec4(1,-1,0,0)\n#define O .1*vec4(1,.5,0,0)\n","name":"Common","description":"","type":"common"}]}