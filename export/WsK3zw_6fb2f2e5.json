{"ver":"0.1","info":{"id":"WsK3zw","date":"1575315724","viewed":175,"name":"Grid Circles For Practice","username":"specialsaucewc","description":"Overlapping XOR circles in rotating grid.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circles","grid","kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GRIDSIZE 15.0\n#define SPEED 1.5\n#define MIN_SIZE .6\n#define MAX_SIZE 1.5\n#define RIPPLE 8.0\n#define ANGLE 45.0\n\nfloat Xor (float a, float b) {\n    return a*(1.-b) + b*(1.-a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float t = iTime * SPEED;\n    vec3 col = vec3(0.);\n    \n    float rot = mix(0., 6.28318530718, t*.01);\n    float s = sin(rot);\n    float c = cos(rot);\n    uv *= mat2(c, -s, s, c);\n    \n    vec2 gv = fract(uv*GRIDSIZE)-.5;\n    \n    \n    float m = 0.;\n    \n    for (float y=-1.; y <= 1.; y++) {\n        for (float x=-1.; x <= 1.; x++) {\n            vec2 offs = vec2(x, y);\n            \n            float d = length(gv + offs);\n            float r = mix(MIN_SIZE, MAX_SIZE, sin(t-length(uv)*RIPPLE)*.5+.5);\n            \n            m = Xor(m, smoothstep(r, r*.9, d));\n        }\n    }\n    \n    //col.rg = gv;\n    col += m;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}