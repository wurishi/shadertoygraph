{"ver":"0.1","info":{"id":"M3BXzD","date":"1710322336","viewed":50,"name":"curve_rhomb","username":"lck898989","description":"a step functioin and abs function test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mix","cos","step"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat rhomb(vec2 uv) {\n    float l = uv.y - uv.x - 0.5;\n    float r = uv.y + uv.x - 0.5;\n\n    float sl = 1. - step(0.,l);\n    float sr = 1. - step(0.,r);\n\n    float s = sl * sr;\n    return s;\n}\n\nfloat curve_rhomb(vec2 uv) {\n    float PI = 3.1415926;\n    float l = uv.y - (0.25 * cos(((uv.x + 0.5 ) / 0.5) * PI + iTime) + 0.25);\n    float r = uv.y + (0.25 * cos(((uv.x + 0.5 ) / 0.5) * PI + iTime) - 0.25);\n\n    float sl = 1. - step(0.,l);\n    float sr = 1. - step(0.,r);\n\n    float s = sl * sr;\n    return s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    \n    //uv *= 3.;\n    \n    \n    uv = abs(uv);\n    \n    //uv = fract(uv * 3.);\n    float s = curve_rhomb(uv);\n\n    // Output to screen\n    fragColor = vec4(s,0.,0.,1.0);\n}","name":"Image","description":"","type":"image"}]}