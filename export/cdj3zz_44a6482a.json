{"ver":"0.1","info":{"id":"cdj3zz","date":"1667157481","viewed":185,"name":"Dynamic Systems Plotter 2","username":"Envy24","description":"Rewrited. Not golfed)\nTo explore systems use shaders:\nhttps://www.shadertoy.com/view/DdjGRR\nhttps://www.shadertoy.com/view/fl3GW7\nor this:\nhttps://github.com/HackerPoet/Chaos-Equations\n","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["chaos","dynamic","plotter","strange","system","attractors","nonlinear"],"hasliked":0,"parentid":"fl3GW7","parentname":"Dynamic system plotter"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 SC ) { O = BACKGROUND-TEXF0(SC); }","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TEXF0(SC)                 ( texelFetch(iChannel0, ivec2(SC), 0) )\n#define BACKGROUND                ( vec4(1) )\n\n/* Returns sine modulated value in range [min, max]. */\nfloat sinOSC(in float min, in float max, in float T)\n{\n    float v = (sin(T) + 1.0) * 0.5; // map T to [0.0, 1.0];\n    return min + v * (max - min);   // map T to [min, max];\n}\n\nfloat diskSDF_L2(vec2 NDC, vec2 C, float r)\n{\n    return length(C - NDC)-r;\n}\n\n#define X ( P.x )\n#define Y ( P.y )\n#define T ( P.z )\n\n/*\n  General field formula:\n    new_x or new_y =\n        xx +- xy +- yy +- \n        yt +- tt +- tx +-\n        x  +- y  +- t;\n        \n  Flow streamlines for fields: https://www.shadertoy.com/view/ddjGzz\n  Vector fields:               https://www.shadertoy.com/view/ds2Gzz \n*/\n/* Attractors *\n#define ORIGIN   ( vec2(0.6, -0.48) )\n#define COUNT    ( 1000. )\n#define SCALE    ( 1. )\n#define RADIUS   ( 0.1 )\n#define FADE_OUT ( 0.998 )\n#define T_MIN    ( 0.46 )\n#define T_MAX    ( 0.472 )\n#define T0       ( sinOSC(T_MIN, T_MAX, iTime * 0.01 ) ) \nvec3 field(in vec3 P) // (x,y,t)\n{    \n    return \n        vec3(\n            X*X + Y*T - T*X - X,\n           -X*Y - Y*Y - Y*T - T*T - T*X - Y,\n            T);\n}\n/**\n#define ORIGIN   ( vec2(0.0, -0.1) )\n#define COUNT    ( 500. )\n#define SCALE    ( 0.5 )\n#define RADIUS   ( 0.1 )\n#define FADE_OUT ( 0.95 )\n#define T_MIN    ( -0.137 )\n#define T_MAX    ( -0.05 )\n#define T0       ( sinOSC(T_MIN, T_MAX, iTime * 0.2 ) )\nvec3 field(in vec3 P) // (x,y,t)\n{      \n    return \n        vec3(\n           -X*X + X*Y + Y*Y - Y*T - T*T + T*X - X - Y - T,\n           -X*X - X*Y + Y*Y + Y*T + T*T - T*X + T,\n            T);\n}\n/**\n#define ORIGIN   ( vec2(-0.20, 0.55) )\n#define COUNT    ( 1500. )\n#define SCALE    ( 1.4 )\n#define RADIUS   ( 0.8 )\n#define FADE_OUT ( 0.90 )\n#define T_MIN    ( -0.529 )\n#define T_MAX    ( -0.49 )\n#define T0       ( sinOSC(T_MIN, T_MAX, iTime * 0.187 ) )\nvec3 field(in vec3 P) // (x,y,t)\n{         \n    return \n        vec3(\n           -X*X - Y*Y - T*T + T*X + Y - T,\n            X*X - X*Y - Y*T - T*T,\n            T);\n}\n/**\n#define ORIGIN   ( vec2(0.6, 0.23) )\n#define COUNT    ( 200. )\n#define SCALE    ( 0.8 )\n#define RADIUS   ( 0.4 )\n#define FADE_OUT ( 0.997 )\n#define T_MIN    ( 0.3705 )//( 0.330 )\n#define T_MAX    ( 0.37 )//( 0.380 )\n#define T0       ( sinOSC(T_MIN, T_MAX, iTime) )\nvec3 field(in vec3 P) // (x,y,t)\n{       \n    return \n        vec3(\n           -X*X + T*T + T*X + X - Y + T,\n           -Y*Y - Y*T + T*X + X - Y,\n            T);\n}\n/**/\n#define ORIGIN   ( vec2(0.1, 0.06) )\n#define COUNT    ( 500. )\n#define SCALE    ( 0.6 )\n#define RADIUS   ( 0.1 )\n#define FADE_OUT ( 0.997 )\n#define T_MIN    ( -0.2852 )//( -0.410 )\n#define T_MAX    ( -0.2851 )//( -0.2851 )\n#define T0       ( sinOSC(T_MIN, T_MAX, iTime) )\nvec3 field(in vec3 P) // (x,y,t)\n{            \n    return \n        vec3(\n           -Y*T - T*X + Y,\n            X*X - T*X - X + T,\n            T);\n}\n/**\n#define ORIGIN   ( vec2(-0.26, 0.05) )\n#define COUNT    ( 1500. )\n#define SCALE    ( 0.7 )\n#define RADIUS   ( 0.1 )\n#define FADE_OUT ( 0.993 )\n#define T_MIN    ( -0.026 )\n#define T_MAX    ( -0.025 )\n#define T0       ( sinOSC(T_MIN, T_MAX, iTime) )\nvec3 field(in vec3 P) // (x,y,t)\n{            \n    return \n        vec3(\n           -X*X + X*Y - Y*Y + Y*T - T*X - X + Y + T,\n           -X*X + T*T - T*X - X - Y,\n            T);\n}\n/**\n#define ORIGIN   ( vec2(-0.2, 0.6) )\n#define COUNT    ( 2000. )\n#define SCALE    ( 0.4 )\n#define RADIUS   ( 0.1 )\n#define FADE_OUT ( 0.993 )\n#define T_MIN    ( -0.867 )\n#define T_MAX    ( -0.857 )\n#define T0       ( sinOSC(T_MIN, T_MAX, iTime*0.1) )\nvec3 field(in vec3 P) // (x,y,t)\n{            \n    return \n        vec3(\n            P.y*P.y*T + P.x*T,\n            -P.x*T -T,\n            T);\n}\n/**/","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define R                         ( iResolution )\n#define UNIT                      (  1.0 / R.y  )\n#define SMAA(x)                   ( smoothstep(UNIT, 0., x) )\n\nvec2 map_to_centered_ndc(in vec2 SC, in float scale, in vec2 origin)\n{\n    return ((2. * SC - R.xy) / R.y) * scale - origin;\n}\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 NDC = map_to_centered_ndc(SC, SCALE, -ORIGIN);\n\n    float min_dist = 9.; \n    vec3 P = vec3(T0);\n\n    for (float s = 0.; s < COUNT; s += 1.)\n    {\n        P = field(P);\n\n        min_dist = \n            min( \n                min_dist,\n                diskSDF_L2(NDC, P.xy, RADIUS * UNIT));\n    }\n      \n    O = mix( TEXF0(SC) * FADE_OUT, BACKGROUND-vec4(0), SMAA(min_dist) );    \n}","name":"Buffer A","description":"","type":"buffer"}]}