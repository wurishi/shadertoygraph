{"ver":"0.1","info":{"id":"tlK3RW","date":"1578429759","viewed":123,"name":"Palettized pixelation","username":"tiagosr","description":"This shader does palette picking, and scales pixels like nearest-neighbour sampling, but avoids hard edges between pixels when magnified","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["pixelpalette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 scale = vec2(10.37);\n    vec2 sourceSize = iChannelResolution[0].xy;\n    vec2 outputSize = sourceSize*scale;\n    vec2 texelSize = 1.0/sourceSize;\n    vec2 range = 0.4999/outputSize;\n    \n    vec2 texcoords = fragCoord/outputSize + vec2(iTime * 0.003157, 0);\n    \n    float left   = texcoords.x - range.x;\n    float top    = texcoords.y + range.y;\n    float right  = texcoords.x + range.x;\n    float bottom = texcoords.y - range.y;\n    \n    float topLeft     = texture(iChannel0, (floor(vec2(left, top)     / texelSize) + 0.5) * texelSize).r;\n    float topRight    = texture(iChannel0, (floor(vec2(right, top)    / texelSize) + 0.5) * texelSize).r;\n    float bottomLeft  = texture(iChannel0, (floor(vec2(left, bottom)  / texelSize) + 0.5) * texelSize).r;\n    float bottomRight = texture(iChannel0, (floor(vec2(right, bottom) / texelSize) + 0.5) * texelSize).r;\n    \n    vec2 border = clamp(round(texcoords/texelSize) * texelSize, vec2(left, bottom), vec2(right, top));\n    float totalArea = 4.0 * range.x * range.y;\n    \n    fragColor  = ((border.x - left)  * (top - border.y)    / totalArea) * texture(iChannel1, vec2(topLeft, 0.0));\n    fragColor += ((right - border.x) * (top - border.y)    / totalArea) * texture(iChannel1, vec2(topRight, 0.0));\n    fragColor += ((border.x - left)  * (border.y - bottom) / totalArea) * texture(iChannel1, vec2(bottomLeft, 0.0));\n    fragColor += ((right - border.x) * (border.y - bottom) / totalArea) * texture(iChannel1, vec2(bottomRight, 0.0));\n}","name":"Image","description":"","type":"image"}]}