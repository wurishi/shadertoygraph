{"ver":"0.1","info":{"id":"MfySWt","date":"1715903709","viewed":29,"name":"that julia set moment","username":"Swifter","description":"WHAT","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITERATIONS 150.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2. - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 c = vec2(0);\n    if (iMouse.z > 0.)\n    {\n        c = iMouse.xy/iResolution.xy;\n        c = c * 2. - 1.;\n    }\n    else\n    {\n        float f = sin(min(3.14, iTime * 0.5) - 1.57) * 0.5 + 0.5;\n        float t = mix(0., iTime * 0.2, min(1., f));\n   \n        c = vec2(-cos(t), sin(t));\n        c *= mix(0.6, 0.87, cos(t * 2.) * 0.5 + 0.5);\n    }\n    \n    float m = 0.;\n    float i = 0.;\n    \n    for (; i < ITERATIONS && length(uv) < 69.; i++)\n    {\n        uv = vec2(\n            uv.x*uv.x - uv.y*uv.y + c.x,\n            uv.x*uv.y + uv.x*uv.y + c.y\n        );\n    }\n\n    m = i / ITERATIONS;\n    vec3 col = 0.5 + 0.5*cos(m * ITERATIONS * 0.2 + iTime +vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}