{"ver":"0.1","info":{"id":"4fSGRt","date":"1704516214","viewed":25,"name":"A beautiful burning ship","username":"noahsk","description":"The burning ship fractal","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","math","mandelbrot","shader","complex","burningship"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= 0.5;\n    uv *= 0.15;\n    uv += 1.0 * vec2(-1.75,0.05);\n    uv.y = uv.y * iResolution.y/iResolution.x;\n\n    \n    vec2 z = vec2(0.0,0.0);\n    vec2 c = vec2(cos(iTime),sin(iTime));\n    \n    c = uv;\n    \n    float i = 0.0;\n    float max = 100.0;\n    for (i = 0.0; i < max; i++) {\n \n    z = vec2(z.x * z.x - z.y * z.y, -abs(z.x * z.y * 2.0));\n    z = z + c;\n    \n        if (z.x * z.x + z.y * z.y > 4.0) {\n        break;\n        }\n    \n    }\n    \n    vec3 col = pal(i/max, vec3(0.9,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.3,0.32,0.37) );\n    if (i == max) { col = vec3(0.0,0.0,0.0);}\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}