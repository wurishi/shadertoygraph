{"ver":"0.1","info":{"id":"4ljfDw","date":"1516059873","viewed":1111,"name":"Going through LSD","username":"Flopine","description":"I had fun :D ","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","rotation","glowy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind and Leon for teaching me :)\n\n\n#define PI 3.14\n\nmat2 rot (float angle)\n{\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2 (c,-s,s,c);\n}\n\nvec2 moda (vec2 p, float per)\n{\n    float angle = atan(p.y,p.x);\n    float l = length(p);\n    angle = mod(angle-per/2., per)-per/2.;\n    return vec2(cos(angle),sin(angle))*l;\n}\n\n\nfloat cylY (vec3 p, float r)\n{\n  return length(p.xy)-r;  \n}\n\nfloat SDF (vec3 p)\n{\n    float per = 0.7;\n    \n    p.x = abs(p.x);   \n    p.xy *= rot(p.z+iTime);\n    p.xy = moda(p.xy, (sin(iTime)+2.)*PI/4.);\n    \n    p.yz = mod(p.yz-per/2.,per)-per/2.;           \n    p.yz *= rot(p.x+iTime);\n\n    p.x -= .7;\n\t\n    return cylY(p,0.2);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.*(fragCoord.xy / iResolution.xy)-1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 pos = vec3(0.001,0.001,iTime*0.8);\n    vec3 dir = normalize(vec3(uv, 1.));\n    \n    float shad = 0.;\n    \n    \n    for (int i=0; i<100; i++)\n    {\n        float d = SDF(pos);\n        if (d<0.01)\n        {\n            shad = float(i)/60.;\n            break;\n        }\n        else shad = 0.8; \n        pos += d*0.2*dir;\n    }\n    \n    vec3 hue = vec3(abs(pos.y)*3.,1.,.5);\n\tfragColor = vec4(vec3(shad)/hue,1.0);\n}","name":"Image","description":"","type":"image"}]}