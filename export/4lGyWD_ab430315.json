{"ver":"0.1","info":{"id":"4lGyWD","date":"1536168998","viewed":168,"name":"L'oeil du Dragon Bleu","username":"hamsterNinja","description":"\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["youpi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash( float n ) {\n    return fract(sin(n)*43758.5453);\n}\n\n\nfloat noise( in vec3 x ) { // in [0,1]\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.-2.*f);\n\n    float n = p.x + p.y*57. + 113.*p.z;\n\n    return mix(mix(hash(n+  0.), hash(n+  1.),f.x),\n               mix(hash(n+ 57.), hash(n+ 58.),f.x),f.y);\n}\n\nfloat Band(float t, float start, float end, float blur){\n    return smoothstep (start-blur, start+blur, t) * smoothstep (end+blur, end-blur, t);\n}\n\nvec3 clampcolor (vec3 color, float max){ \n\tcolor.x = clamp (color.x,0.,max);\n    color.y = clamp (color.y,0.,max);\n    color.z = clamp (color.z,0.,max);\n    return color;\n}\n\nfloat circle(vec2 uv, float r, float blur){\n    float d = length(uv);\n    return smoothstep(r, r-blur, d);\n}\n\nvec3 line (vec2 uv, vec3 uv3, float tlag, float speed, float clag, float thin, float pos, float blur){        \n    float t = iTime+tlag;\n    vec3 color = 0.5*cos(t+clag+uv3) + 0.5*cos(t+clag+uv3);\n    float parable = (uv.x-0.5)*(uv.x+0.5)*4.;\n\tfloat m = sin(t*speed+uv.x)*.4;\n\tfloat mask = Band(uv.y-m*parable, pos, pos+thin, .1*abs(uv.x)*blur+0.01);\n    color *= mask;\n    return color*noise(vec3(uv*500.,(tlag)));\n}   \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 color;\n    color *= vec3 (0.9,0.7,0.7);\n    \n    for (int i = 0; i < 100; i++) {\n        color += line(uv, uv.xxy, float(i), 1., float(i), .01, -.0, .1);\n        color = clampcolor(color, 1.);\n    }\n\tcolor += color;\n    color *= circle(uv, .5, .01);\n    \n    //color = clampcolor(color, 1.);\n\tcolor += circle(uv, .10, .01)*(noise(vec3(uv*500.,iTime))*4.);\n    color.x -= 1.;\n    color.y -= 1.;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}