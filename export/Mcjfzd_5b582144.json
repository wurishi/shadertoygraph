{"ver":"0.1","info":{"id":"Mcjfzd","date":"1725403601","viewed":52,"name":"for-loop mistranslation ref","username":"jakel101","description":"This issue serves as a reference for WebGL behaviour. It is public+API so testing via other clients is possible.\nit should be a solid brownish color. If you see different halfs something might be wrong with your implementation.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["reference","error"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Apache 2.0 free for all!\n\n\n// third expression in a for loop \"loop-expression\" can contain multiple statements.\n// it's evaluated after the loop body. And the variables stay available outside the namespace.\n// OpenGL spec: https://registry.khronos.org/OpenGL/specs/gl/GLSLangSpec.4.60.pdf Chapter 6.3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float a = 1.0;\n    float b = 0.0;\n    \n    // right side\n    if (uv.x >= 0.5) {\n        // this variant has the iterator increment first and the external statements second\n        for (int i = 0; i < 50; i+=1, b+=0.01) {\n            a -= 0.01;\n        }\n    }\n    //left side\n    else {\n        // here the parts are flipped, it should be equivalent.\n        for (int i = 0; i < 50; b+=0.01, i+=1) {\n            a -= 0.01;\n        }\n    }\n\n    fragColor = vec4(a, b, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}