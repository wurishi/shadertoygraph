{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"Main \n    Q = sin(-3.+vec4(1,2,3,4)+.17*(A(U)+B(U))/float(iFrame+1));\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"#define k (.0025)\n#define k1 (.1)\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\nvec2 R;\n#define Main void mainImage(out vec4 Q, in vec2 U) {R=iResolution.xy;\n\nvec4 hash(vec4 p4)\n{\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\nfloat subtract (float a, float b) {\n    return max(a,-b);\n}\nfloat add (float a, float b) {\n    return min(a,b);\n}\nvec3 repeat (vec3 p, vec3 n) {\n    return 1./n*(fract((n*p*0.5+0.5))*2.-1.);\n}\nvec4 opElongate( in vec3 p, in vec3 h )\n{\n    vec3 q = abs(p)-h;\n    return vec4( max(q,0.0), min(max(q.x,max(q.y,q.z)),0.0) );\n}\nfloat sdCappedCylinder( vec3 p, vec2 h )\n{\n  vec2 d = abs(vec2(length(p.xy),p.z)) - .25*h;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\nfloat roundBox(vec3 p, vec3 b , float r) {\n    vec4 w = opElongate( p, .5*b );\n    return w.w+sdCappedCylinder( w.xyz, vec2(r,.5*b.z) ) ;\n}\nfloat roundBox(vec2 p, vec2 b, float r) {\n    return roundBox(vec3(p,0),vec3(b,1),r);\n}\nvec2 scene (vec2 U) {\n    float e = 1e-3;\n    float d = roundBox(U-.5*R,vec2(.5*R.y,.5*R.y),1.);\n    d = subtract(d,length(U-.5*R)-.15*R.y);\n    d = add(d,length(U-vec2(.8,.5)*R)-.05*R.y);\n    if (d < 1.) e = 1.;\n    return vec2(d,e);\n} \n","name":"Common","description":"","type":"common"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"Main \n\n    Q = A(U);\n    vec4 h = hash(vec4(U,iTime,iFrame));\n    float a = h.x*3.141592658*2.;\n    vec2 u = U;\n    vec2 v = h.y*vec2(cos(a),sin(a));\n    float w;\n    for (float i = 0.; i < 250.; i++) {\n        float ph = B(u).x/float(iFrame+1);\n        vec2 s = scene(u);\n        if (s.x < 1.) w = 1.; else w = 10.;\n        Q += s.y*ph*max(v.x*max(v.x,0.),0.)*exp(-250.*v.y*v.y);\n        u += w*v*inversesqrt(1.+dot(v,v));\n        v += w*s.y*k1*(hash(vec4(u,i,iFrame)).xy*2.-1.);\n        \n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"Main \n\n    Q = A(U);\n    vec4 h = hash(vec4(U,iTime,iFrame));\n    float a = 0.01*h.x*3.141592658*2.;\n    vec2 u = U;\n    vec2 v = vec2(cos(a),sin(a));\n    float e = 1.;\n    for (float i = 0.; i < 200.; i++) {\n        vec2 s = scene(u);\n        Q += .1*e*float(R.x-u.x<10.)*exp(-40.*length(v-vec2(1,0)));\n        s.x = 10.;\n        u += v*s.x;\n        e *= 1.-k*s.y;\n        \n    }\n}","name":"Buffer B","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"McKBzc","date":"1734309114","viewed":183,"name":" Monte Carlo II","username":"wyatt","description":"Back solving the electron flux using the photon flux as a source which is also back solved through ray tracing. Electrons are ray traced and scattered. ","likes":13,"published":3,"flags":32,"usePreview":0,"tags":["montecarlo"],"hasliked":0,"parentid":"","parentname":""}}