{"ver":"0.1","info":{"id":"fsBGzW","date":"1617000977","viewed":86,"name":"another something","username":"sullly","description":"second shader, not sure if i'm getting the hang of it","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","abstract","red","blue","idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 v, float a) { return mat2(cos(a), -sin(a), sin(a), cos(a))*v; }\nfloat remap(float v, float a, float b, float c, float d) { return (v - a) / (b - a) * (d - c) + c; }\nfloat divMod(float a, float m) { return remap(mod(a, m), 0.0, m, -1.0, 1.0); }\n\nvoid mainImage( out vec4 p, in vec2 fragCoord )\n{\n  vec2 uv = gl_FragCoord.xy / iResolution.xy;\n  uv -= 0.5;\n  float f = 0.5*sin(iTime);\n  uv.x = divMod(uv.x, exp(f));\n  uv.y = divMod(uv.y, 2.);\n  \n  for (int i = 0; i < 8; ++i){\n    uv = abs(uv) - 0.09;\n    uv = rotate(uv, 0.5*iTime);\n    uv = rotate(uv, abs(uv.y)- 0.2);\n    uv = rotate(uv, abs(uv.x) + 0.1);\n  }\n  for (int i = 0; i < 8; ++i) {\n    uv = rotate(uv, exp(abs(uv.y))- 0.2);\n    uv = rotate(uv, abs(uv.x) + 0.1);\n  }\n  float r = 0.2*uv.x/uv.y;\n  float b = 0.1 / sqrt(uv.x+uv.y);\n  p = vec4(r,0., b, 1.);\n}","name":"Image","description":"","type":"image"}]}