{"ver":"0.1","info":{"id":"XsKSRw","date":"1463497231","viewed":183,"name":"Julia - Traps 1 Time Warp","username":"MichaelPohoreski","description":"Modified i.q.'s Juliabrot animation for time warp (left = past, middle = zero, right = future)\n\nComplexity Comparison: https://www.shadertoy.com/view/4dKSRw\nExplorer: https://www.shadertoy.com/view/4dVSRw","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia","orbittrap","complex","splitscreen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// INSTRUCTIONS: \"Scrub\" from middle to right to fast-forward! (See end note)\n// Split Screen Functionality by Michael Pohoreski/2016 (borrowed from i.q.!)\n// Original version by inigo quilez - iq/2014 https://www.shadertoy.com/view/4d23WG\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// line 34: pixel coordinates\t\n// line 14: c travels around the main cardiod c(t) = Â½e^it - Â¼e^i2t\n// line 25: z = zÂ² + c\t\t\n// line 26: trap orbit\n// line 45: remap\t\n// line 46: color\t\n// line 47: split screen\n\nvec2 offset( float t )\n{\n    return 0.51*cos( vec2(0.0,1.5708) + 0.1*t )\n         - 0.25*cos( vec2(0.0,1.5708) + 0.2*t );\n}\n\nfloat orbit( vec2 z, vec2 bias )\n{\n\tfloat f = 1e20;\n\tfor( int i=0; i<128; i++ ) \n\t{\n\t\tz = vec2( z.x*z.x-z.y*z.y, 2.0*z.x*z.y ) + bias;\n\t\tf = min( f, dot(z,z) );\n\t}\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float ar = 4./3.; // aspect ratio\n\tvec2 p = ar*(-iResolution.xy+2.0*fragCoord.xy)/iResolution.y;\n\tvec2 m = ar*(-iResolution.xy+2.0*iMouse.xy   )/iResolution.y;\n    \n\tfloat f, duration = 1.0; // -100%*time (left), +100%*time (right)\n    float time = 2.0*duration*(iMouse.x / iResolution.x)-duration; // remap [0,1] -> [-d,+d]\n    // Right Half = Static, Time=0\n//    if( p.x > m.x )\n//        f = orbit( p, offset( time ));\n//    else\n        f = orbit( p, offset( iTime * time ) );\n\n    f = 1.0+log(f)/16.0;\n    vec3 color = vec3( f*f*f, f, f*f ); // changed f^3, f^1, f^2 for sick green :-)\n    color *= smoothstep( 0.006, 0.008, abs(p.x-m.x) );\n\n\tfragColor = vec4(color,1.0);\n}\n\n/*\nNotes on time:\nThe mouse left/right controls the time scaling.\n\n\n* \"Scrubbing\" (click+drag) the mouse buttin in the output window from\n   the middle to the right edge will let you \"fast forward\" time.\n* \"Scrubbing\" from the middle to the left edge will let you \"rewind\" time.\n\nDetails:\n\nThe current mouse x position is used as a time warp.\n\nLeft Edge  = -1.0 Negative current time (rewind)\nMiddle     = +0.0 Zero Time\nRigth Edge = +1.0 Positive current time (fast forward)\n\n\n*/","name":"Image","description":"","type":"image"}]}