{"ver":"0.1","info":{"id":"lljcD1","date":"1508463923","viewed":396,"name":"Flowing and Rippling Water","username":"Fading_Pixel","description":"This uses a few different textures to create an effect of thin, flowing water, and an effect of rippling water.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["distortion","water","images"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(vec2 p, float s) {\n    vec2 uv = p / iResolution.xy;\n    float tex = texture(iChannel0,uv+s).x;\n    return tex;\n}\nfloat noise2(vec2 p, float s) {\n    vec2 uv = p / iResolution.xy;\n    float tex = texture(iChannel2,uv+s).x;\n    return tex;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat tex = noise(fragCoord/2.0, iTime/10.0);\n    vec2 p = uv + tex*0.05;\n    fragColor = texture(iChannel1,vec2(p.x,-p.y));\n    if (uv.x >= 0.5) {\n        tex = noise2(fragCoord/3.0, iTime/20.0);\n    \tp = uv + tex*0.05;\n    \tfragColor = texture(iChannel3,vec2(p.x,p.y));\n    }\n}","name":"Image","description":"","type":"image"}]}