{"ver":"0.1","info":{"id":"3l3BDr","date":"1612485076","viewed":139,"name":"Art Of Code Smiley Tutorial","username":"shellshear","description":"Following along (mostly) the Art of Code youtube tutorial https://www.youtube.com/watch?v=ZlNnrpM0TRg&t=1328s and https://www.youtube.com/watch?v=vlD_KOrzGDc&t=0s","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["theartofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Remap v to be 0 at a and 1 at b and clamped to between 0 and 1\nfloat remap_simple(float a, float b, float v)\n{\n    return clamp((v-a)/(b-a), 0., 1.);\n}\n \n// Remap v so that output is linearly c at a and d at b\nfloat remap(float a, float b, float c, float d, float v)\n{\n    return (d-c)*remap_simple(a,b,v) + c;\n}\n\n// map coordinates to be within the rect, as defined by xy = top left\n// and zw = bottom right.\n// coords go from -.5 to .5\nvec2 within(vec2 uv, vec4 rect)\n{\n    return (uv-rect.xy)/(rect.zw-rect.xy)-.5;\n}\n\nvec4 Mouth(vec2 uv, float smile)\n{\n    uv.y += uv.x*uv.x * smile*2.;\n    uv.x *= mix(2., 1., smile);\n    vec4 col = vec4(.6, .2, .1, smoothstep(.5, .46, length(uv)));\n    \n    float d = length(uv);\n    \n    // Teeth\n    vec3 teethCol = vec3(1.)*smoothstep(.6,.35,d);\n\n    float td = length(uv-vec2(0., -.7));\n    float teethVal = smoothstep(.6,.55,td);\n    col.rgb = mix(col.rgb, teethCol, teethVal);\n    \n    // tongue\n    float tongued = length(uv-vec2(0.,.4));\n    float tongueval = smoothstep(.3, .15, tongued);\n    col.rgb = mix(col.rgb, vec3(1.0, .5, .5), tongueval);\n    \n    return col;\n}\n\n\nvec4 Eye(vec2 uv, float side, vec2 mousePos, float smile)\n{\n    // Flip x if we're on the left side so eyes\n    // have the same highlights/movement\n    uv.x *= side; \n    \n    vec4 col = vec4(1.);\n    float d = length(uv);\n    col.a = smoothstep(.5, .48, d);\n    vec3 irisColour = vec3(0.3, .5, .9);\n    \n    float d2 = length(uv-mousePos*.5);\n    float d3 = length(uv-mousePos*.55);\n    \n    // add shade to eyeball\n    float innereyeShade = smoothstep(.45, .47, d) * (1.0-length(uv+vec2(.5*side,.5)));\n    col.rgb = mix(col.rgb, irisColour, innereyeShade);\n    \n    float irisSize = .28;\n    float pupilSize = mix(.3, .18, smile);\n    \n    // add iris\n    float irisVal = smoothstep(irisSize, irisSize*.9, d2);\n    col.rgb = mix(col.rgb, irisColour, irisVal);\n    \n    // add pupil\n    float pupilVal = smoothstep(pupilSize, pupilSize*.8, d3);\n    pupilVal *= irisVal;\n    col.rgb = mix(col.rgb, vec3(0.), pupilVal);\n    \n    // Add highlights\n    float t = iTime * 10.;\n    uv.x+= sin(t+uv.y*20.)*.02*(1.-smile);\n    uv.y+= sin(t+uv.x*20.)*.02*(1.-smile);\n\n    col.rgb = mix(col.rgb, vec3(1.), \n        smoothstep(.1, .07, length(uv-vec2(-.1,.1))));\n    col.rgb = mix(col.rgb, vec3(1.), \n        smoothstep(.05, .03, length(uv-vec2(.1,-.1))));\n    \n    \n    return col;\n}\n\n\nvec4 Head(vec2 uv, float smile)\n{\n    vec4 col = vec4(.9, .6, .1, 1.0);\n    float d = length(uv);\n    col.a = smoothstep(0.5, .48, d);\n    \n    // Shade outside\n    float shade = remap_simple(0.35, .5, d);\n    col.rgb *= 1.-shade*shade*.5;\n    \n    // Add rim\n    vec3 rim = vec3(.8, .4, .1);\n    col.rgb = mix(col.rgb, rim, smoothstep(.47, .48, d));\n    \n    // Add highlight\n    float highlight = smoothstep(.41, .4, d);\n    highlight *= remap(.41, -.1, .75, .0, uv.y);\n    highlight *= smoothstep(.18, .2, length(uv-vec2(.21, .08)));\n    \n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    // Add cheeks\n    d = length(uv-vec2(.25,-.2));\n    float cheek = smoothstep(.2, .01, d) * .5;\n    col.rgb = mix(col.rgb, vec3(.9,.3,.1), cheek*smile);\n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv, vec2 mousePos, float smile)\n{\n    vec4 col = vec4(.0, .0, .0, 1.0);\n    float side = sign(uv.x);\n    uv.x = abs(uv.x);\n    vec4 head = Head(uv, smile);\n    vec4 eye = Eye(within(uv, vec4(.03, -.1, .37, .25)), side, mousePos, smile);\n    vec4 mouth = Mouth(within(uv, vec4(-.3, -.2, .3, -.4)), smile);\n    \n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float smile = cos(iTime)*.5+.5;\n    \n    vec2 mousePos = iMouse.xy / iResolution.xy - .5;\n\n    uv -= mousePos*(.25-dot(uv, uv))*.5;\n    // Time varying pixel color\n    fragColor = Smiley(uv, mousePos, smile);\n}","name":"Image","description":"","type":"image"}]}