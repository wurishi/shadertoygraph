{"ver":"0.1","info":{"id":"7tySW1","date":"1640592981","viewed":242,"name":"Basic mipmap blur from mouse","username":"FlightOfGrey","description":"Need to click on the output window to get mouse interaction.\n\nUsing textureLod to get a cheap real time blur, sampling smaller mipmap images to do the blurring. Only relatively new to shaders, so probably not best to use as reference.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["mouse","blur","mipmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Mapping to between 0 - -1\n    vec2 mousePos = iMouse.xy / iResolution.xy;\n    \n    // Mouse interaction multiplier to alter affected area\n    float mouseMulti = 2.0;\n    // Pixel distance from mouse position\n    float mipmapLevel = distance(uv, mousePos) * mouseMulti;\n    \n    // Upper limit of mipmap sampled\n    float mipmapLimit = 7.0 / mouseMulti;\n    \n    // Lineear from mouse position\n    //vec3 col = textureLod(iChannel0, uv, mipmapLimit * mipmapLevel).xyz;\n    \n    // log2 to have a slower falloff from mouse, arbitrary multiplier to increase rate\n    vec3 col = textureLod(iChannel0, uv, log2(mipmapLimit * mipmapLevel) * 3.0  ).xyz;\n    \n    // Output to screen\n    //fragColor = vec4(mipmapLevel, 1.0, 1.0,1.0);\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}