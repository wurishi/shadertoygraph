{"ver":"0.1","info":{"id":"4cKXzD","date":"1714884195","viewed":79,"name":"antialiased 2d grid","username":"vec3f","description":"modified from https://www.shadertoy.com/view/7tlyRN","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","antialiased"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 bg_color = vec4(0.85882352941, 0.85882352941, 0.85882352941, 1.0);\nvec4 grid_color = vec4(0,0,0,1);\nvec4 oob_color_delta = vec4(-0.1, -0.1, -0.1, 0.0);\n\nfloat blur = .4; // between 0 and .5, smaller value is more blurred\n\nconst int grid_count = 4;\nfloat uts[grid_count] = float[grid_count](10.0, 100.0, 1000.0, 10000.0);\nfloat ugbs[grid_count] = float[grid_count](1.0, 1.0, 3.0, 5.0);\n\nconst vec2 u_bmin = vec2(-10.0);\nconst vec2 u_bmax = vec2(8192.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n  float zoom = 11.0 - 10.9 * sin(iTime / 2.0);\n  fragColor = grid_color;\n\n  vec2 cam_pos = vec2(0.0);\n\n  vec2 uv = fragCoord - iResolution.xy / 2.0 + cam_pos / zoom;\n\n  vec2 bmin = u_bmin / zoom;\n  vec2 bmax = u_bmax / zoom;\n\n  vec4 final_bg_color = bg_color + max(max(step(bmax.x, uv.x), step(uv.x, bmin.x)), max(step(bmax.y, uv.y), step(uv.y, bmin.y))) * oob_color_delta;\n\n  for (int i = 0; i < grid_count; ++i) {\n    float uts_ = uts[i] / zoom;\n    float ugbs_ = ugbs[i] / zoom;\n\n    vec2 mod_uv = mod(uv, vec2(uts_));\n    mod_uv = abs(mod_uv - .5 * uts_) * 2.;\n\n    float a = clamp((uts_ - ugbs_ - max(mod_uv.x, mod_uv.y) + 1.) * blur, .0, 1.);\n    vec4 gridColor = mix(grid_color, final_bg_color, a);\n\n    fragColor = mix(fragColor, gridColor, 0.5);\n  }\n}","name":"Image","description":"","type":"image"}]}