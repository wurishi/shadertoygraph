{"ver":"0.1","info":{"id":"DlyGRD","date":"1687182877","viewed":74,"name":"centerVortex","username":"newJasper","description":"centerVortex  ,  a simple  Vortex","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float effectRadius = .5;\n    float effectAngle = 2. * PI;\n    \n    vec2 center = iMouse.xy / iResolution.xy;\n    center = center == vec2(0., 0.) ? vec2(.5, .5) : center;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy - center;\n    \n    float len = length(uv * vec2(iResolution.x / iResolution.y, 1.));\n    float angle = atan(uv.y, uv.x) + effectAngle * smoothstep(effectRadius, 0., len);\n    float radius = length(uv);\n\n    fragColor = texture(iChannel0, vec2(radius * cos(angle), radius * sin(angle)) + center);\n}","name":"Image","description":"","type":"image"}]}