{"ver":"0.1","info":{"id":"sdGBRK","date":"1658470781","viewed":87,"name":"tessellation blur","username":"Rugged","description":"Click and move to set tessellation level, while the mouse is down though its recalculating every frame so it'll slow down while doing this.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["noise","blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0.0);\n    \n    vec4 p = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    fragColor = texture(iChannel1, p.xy);\n\n    //fragColor = vec4(float(int(sin(iTime) + 1.) + 1));\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//#define row 5\n#define maxTessels 50000\n\nfloat hash3(vec2 xy){\n    xy = mod(xy, .19);\n    float h = dot(xy.yyx,vec3(.013, 27.15, 2027.3));\n    h *= h;\n    h *= fract(h);\n    \n    return fract(h);\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    \n    \n    if(iMouse.z > 0. || iFrame == 0){\n        \n        int num = int(float(maxTessels) * (iMouse.x / iResolution.x));//int(float(nTessels) * (sin(iTime) + 1.)) + 1;\n        \n        if(iFrame == 0){\n            num = maxTessels / 4;\n        }\n\n        if((floor(fragCoord.y) * iResolution.x) + floor(fragCoord.x) < float(num)){\n            fragColor = vec4(hash3(uv), hash3(uv.yx), 0., 0.);\n        }\n        else{\n            fragColor = vec4(0.0);\n        }\n    }\n    else{\n        fragColor = texture(iChannel0, uv);\n    }\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    ivec2 fragI = ivec2(int(fragCoord.x), int(fragCoord.y));\n    \n    vec4 col = texelFetch(iChannel1, fragI, 0);\n    \n\n    \n    \n    if(iMouse.z > 0. || iFrame == 0){\n        float closest = 1.5;\n        \n        int num = int(float(maxTessels) * (iMouse.x / iResolution.x));//int(float(nTessels) * (sin(iTime) + 1.)) + 1;\n        \n        if(iFrame == 0){\n            num = maxTessels / 4;\n        }\n        \n            \n        for(int i = 0; i < num; i++){\n            \n            ivec2 numCoords = ivec2(i % int(iResolution.x), int(floor(float(i) / iResolution.x)));\n\n            \n            vec4 p = texelFetch(iChannel0, numCoords, 0);\n            \n            \n            if(distance(uv, p.xy) < closest){\n                closest = distance(uv, p.xy);\n                col = p;//vec4(1. / (closest * 100.0));\n            }\n        }\n    }\n    \n    \n    fragColor = col;\n    \n    \n}","name":"Buffer B","description":"","type":"buffer"}]}