{"ver":"0.1","info":{"id":"slScRh","date":"1649150645","viewed":355,"name":"I found a hidden language","username":"Carandiru","description":"totally glitched shader accident.","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["diamond","isometric"],"hasliked":0,"parentid":"NtGXRc","parentname":"diamond sd"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color = vec3(0);\n\n    color.r = textureLod(iChannel0, uv, 0.0f).r;\n   \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define scale (1.0f/32.0f)\n#define x_max (5.0f)\n#define y_max (5.0f)\n#define z_max (5.0f)\n#define pi (3.14159265358979323846)\n\n\n// me\nfloat sdIsometricDiamond( in vec3 p )\n{\n    const float k = sqrt(2.5);  // [ 2 : 1 ] psuedo isometric\n    p.x = abs(p.x) - 1.0;\n    p.z = abs(p.z) - 1.0;\n    p = vec3(p.x-k*p.y,((-k*p.x)-(-k*p.z))-max(-p.y,p.y),p.z-k*p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 2.0 );\n    p.z -= clamp( p.z, -2.0, 2.0 );\n    return -length(p)*sign(p.y);\n}\n#define sD sdIsometricDiamond\n\n// iq - https://iquilezles.org/articles/distfunctions\nfloat opScale( in vec3 p, in float s )\n{\n    return sD((p)/s)*s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 current = vec2(iTime * 100.0f, 0);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y *= iResolution.x/iResolution.y;\n    \n    vec3 p = vec3(2.0f * uv - 1.0f, 1.0f);\n \n    p.y += (iTime) * 0.1f * (1.0f - (iTime/30.0f));\n    \n    float height = textureLod(iChannel0, uv * 0.5f, 0.0f).r * 0.25f;\n    \n    p.z -= (iTime * 30.0f) * height;\n    \n    float d = 1.0f;\n    vec3 offset = vec3(pi*0.5f,pi,pi*0.25f);\n    \n    vec3 cell;\n    for (cell.z = -z_max; cell.z <= z_max; ++cell.z) {\n    \n        for (cell.y = -y_max; cell.y <= y_max; ++cell.y) {\n\n            for (cell.x = -x_max; cell.x <= x_max; ++cell.x) {\n\n                vec3 disp = cell * offset * scale;\n\n                d = min(d, opScale(p + disp, scale));\n            }\n\n        }\n    }\n\n    float hw = 0.5f * fwidth(d);\n    \n    float s = smoothstep(-d, d, hw * 2.0f - 1.0f);\n    \n    vec3 color = vec3(0);\n\n    color = vec3(s * (1.0f/(1.0f + d*d)));\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}