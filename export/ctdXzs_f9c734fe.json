{"ver":"0.1","info":{"id":"ctdXzs","date":"1685717751","viewed":30,"name":"a slow way to get a nice noise","username":"izutionix","description":"starts as blue noise and slowly becomes brown noise","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["noise","bluenoise","synthesis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 v = texture(iChannel0, fragCoord/iResolution.xy).rgb;\n    float l = length(v);\n    v = smoothstep(0., 1., .5+.5* v / exp2(8.));\n    vec3 col = pow(v, vec3(2.));\n\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime*.1;\n\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    const float goldenAngle = radians(180.0) * (3.0 - sqrt(5.0));\n\n    vec3 v = vec3(0.);\n    if (iFrame >= 1)\n         v = texture(iChannel0, fragCoord/iResolution.xy).rgb;\n         \n    float zoom = exp2(10.)/iTime;\n    uv += iTime;\n    \n    //for (int i=0; i<ITER; i++)\n    //{\n        float a = goldenAngle*float(iFrame);\n        //if (iFrame%3==0)\n            v.rgb += sin( zoom*2.*pi*dot( uv - vec2(1./3.,0.)/iResolution.x, vec2(sin(a),cos(a)) ) );\n        //else if ((iFrame+1)%3==0)\n        //a = goldenAngle*float(iFrame+1);\n        //v.g += sin( zoom*2.*pi*dot( uv, vec2(sin(a),cos(a)) ) );\n        //else if ((iFrame+2)%3==0)\n        //a = goldenAngle*float(iFrame+2);\n        //v.b += sin( zoom*2.*pi*dot( uv + vec2(1./3.,0.)/iResolution.x, vec2(sin(a),cos(a)) ) );\n    //}\n    \n    //v = smoothstep(0., 1., .5+.5*v/float(ITER));\n    //vec3 col = vec3(v);\n    \n    if (iFrame < 60)\n        fragColor = vec4(0.);\n    else\n        fragColor = vec4(v, 1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float iphi = 0.5*sqrt(5.)-0.5;\nconst int ITER = 16;\nconst float pi = 3.14159265358979323;","name":"Common","description":"","type":"common"}]}