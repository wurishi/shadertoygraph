{"ver":"0.1","info":{"id":"ttjXRy","date":"1566325777","viewed":86,"name":"Break On Through","username":"Relssek","description":"(To The Other Side)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPSILON .001\nfloat map(vec3 p){\n \treturn length(p) - 1.0;  \n}\n\nfloat estimateNormal(vec3 p) {\n\tvec3 normed = normalize(vec3(\n    map(vec3(p.x + EPSILON, p.y, p.z)) - map(vec3(p.x - EPSILON, p.y, p.z)),\n    map(vec3(p.x, p.y + EPSILON, p.z)) - map(vec3(p.x, p.y - EPSILON, p.z)),\n    map(vec3(p.x, p.y, p.z  + EPSILON)) - map(vec3(p.x, p.y, p.z - EPSILON))\n    ));\n    return max(max(abs(normed.x), abs(normed.y)), abs(normed.z));\n}\n   \nvec3 march(vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; i++){\n        vec3 p = o + r * t;\n        float d = map(p);\n        if (mod(d, .6) < EPSILON){\n           return pow(estimateNormal(p), 6.) * vec3(0., 0., .5 + (sin(iTime*6.)+1.)/2.);\n        }\n        t += d;\n        }\n          return vec3(.75,.75, .69);\n       }\n     \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n\tvec3 o = vec3(0., 0., -6. + sin(iTime/15.)*7.5);\n    vec3 r = normalize(vec3(uv.x, uv.y, 1.0));\n    vec3 t = march(o, r);\n    fragColor = vec4(t,1.0);\n}\n    \n  ","name":"Image","description":"","type":"image"}]}