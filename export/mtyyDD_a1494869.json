{"ver":"0.1","info":{"id":"mtyyDD","date":"1701076547","viewed":34,"name":"image slider","username":"muhammadhassan","description":"slide image in and out","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["slide"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Time variable for animation\n    float time = iTime;\n\n    // Width and height of the screen\n    vec2 resolution = iResolution.xy;\n\n    // Define image size and initial position\n    float imageWidth = 150.0; // Adjust image width as needed\n    vec2 initialImagePosition = vec2(0.0, resolution.y / 2.0);\n\n    // Calculate current image position based on time for sliding animation\n    float animationTime = time * 100.0;\n    vec2 currentImagePosition = initialImagePosition;\n\n    // Check if the image is within the sliding range\n    if (animationTime < resolution.x) {\n        // Move the image to the right\n        currentImagePosition.x += animationTime;\n    } else if (animationTime < 2.0 * resolution.x) {\n        // Move the image back to the left after reaching the center\n        float reverseTime = 2.0 * resolution.x - animationTime;\n        currentImagePosition.x += reverseTime;\n    }\n\n    // Draw background image\n    vec2 uv = fragCoord.xy / resolution.xy;\n    vec4 backgroundImage = texture(iChannel0, uv);\n\n    // Draw the image on top of the background\n    float distanceToImage = distance(fragCoord, currentImagePosition);\n    if (distanceToImage <= imageWidth * 0.5) {\n        // Inside the image region, sample from the image texture\n        vec2 imageUV = (fragCoord - currentImagePosition) / imageWidth;\n        fragColor = mix(backgroundImage, texture(iChannel1, imageUV), 0.8); // Adjust mix value for transparency\n    } else {\n        // Outside the image region, show the background\n        fragColor = backgroundImage;\n    }\n}\n","name":"Image","description":"","type":"image"}]}