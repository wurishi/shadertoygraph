{"ver":"0.1","info":{"id":"4dXczl","date":"1489313227","viewed":115,"name":"360 Viewer","username":"TheDude","description":"Environment Map Viewer","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["environmentmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI=3.14159265359;\n\nmat3 getRotationMatrixX(float angle)\n{\n\tfloat a=cos(angle);\n    float b= sin(angle);\n\treturn mat3(1,0,0,\n               0,a,-b,\n               0,b,a);\n}\n\nmat3 getRotationMatrixY(float angle)\n{\n\tfloat a=cos(angle);\n    float b= sin(angle);\n\treturn mat3(a,0,b,\n               0,1,0,\n               -b,0,a);\n}\n\nvec2 calcNDC(vec2 uv)\n{\n\tuv-=vec2(0.5);\n    uv*=-1.0;\n    return uv;\n}\n\nvec3 RotateX(in vec3 vec,float angle)\n{\n\treturn getRotationMatrixX(angle)*vec;\n}\n\nvec3 RotateY(in vec3 vec,float angle)\n{\n\treturn getRotationMatrixY(angle)*vec;\n}\n\nvec2 calcAngles(in vec2 uvCoordinates)\n{\n\treturn vec2(uvCoordinates.x*2.0*PI+PI,uvCoordinates.y*PI);\n}\n\n\nvec3 calcNormal(in vec2 angles)\n{\n\treturn vec3(cos(angles.x)*sin(angles.y),cos(angles.y),sin(angles.x)*sin(angles.y));\n\n}\nvec3 calcViewRay(in vec2 uvCoordinates,float f)\n{\n    uvCoordinates=calcNDC(uvCoordinates);\n\treturn normalize(vec3(uvCoordinates,f));\n}\n\n\nvec2 calcUVCoordinates(in vec2 pixel)\n{\n\treturn pixel.xy/iResolution.xy;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \tvec2 uv=calcUVCoordinates(fragCoord);   \n  \n\tvec2 normalizedMouseCoords=calcUVCoordinates(iMouse.xy);\n    vec2 mouseAngles= calcAngles(calcNDC(normalizedMouseCoords));\n    vec3 viewRay=calcViewRay(uv,0.5);\n    viewRay=RotateX(viewRay,mouseAngles.y+PI/4.0);\n\n    viewRay=RotateY(viewRay,mouseAngles.x);\n\n    fragColor = texture(iChannel0,viewRay);\n\n}","name":"Image","description":"","type":"image"}]}