{"ver":"0.1","info":{"id":"l333D2","date":"1717016329","viewed":69,"name":"beat portal","username":"snflwrfld","description":"quick experiment, could be the basis of a cool vizualizer ....","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["flat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\n\nvec2 grad( ivec2 z )  // replace this anything that returns a random vector\n{\n\n    // Credits : Patricio Gonzalez Vivo, the Book of Shaders\n\n    // 2D to 1D  (feel free to replace by some other)\n    int n = z.x+z.y*11111;\n\n    // Hugo Elias hash (feel free to replace by another one)\n    n = (n<<13)^n;\n    n = (n*(n*n*15731+789221)+1376312589)>>16;\n\n    // simple random vectors\n    return vec2(cos(float(n)),sin(float(n)));                          \n}\n\nfloat noise( in vec2 p )\n{\n\n    // Credits : Patricio Gonzalez Vivo, the Book of Shaders\n\n    ivec2 i = ivec2(floor( p ));\n     vec2 f =       fract( p );\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( grad( i+ivec2(0,0) ), f-vec2(0.0,0.0) ), \n                     dot( grad( i+ivec2(1,0) ), f-vec2(1.0,0.0) ), u.x),\n                mix( dot( grad( i+ivec2(0,1) ), f-vec2(0.0,1.0) ), \n                     dot( grad( i+ivec2(1,1) ), f-vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.*uv - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n    float t = iTime;\n    \n    /////////////////////////\n    \n    uv *= 5.;\n    t *= 1.1;\n    \n    /////////////////////////\n    vec3 col;\n    float s;\n\n    const float N = 20.;\n    const float stripe_fact = 1.2;\n    const float stripe_width = .3; // [0..1]\n    \n    float r = length(uv);\n    float th = (atan(uv.y,uv.x)+PI)/(2.*PI); // [0..1]\n    th += .1*t;\n    float ith = mod(floor(th*N)/N,1.);\n    float fth = mod(th,1./N)*N;\n    \n    s =  step(1., r) ; // empty core\n    \n    s *= step(.35, abs(fth)*r ); // cones\n    \n    \n    s *= step(fract(r*stripe_fact), stripe_width); // stripes\n    s *= step(r , \n        floor( (\n            3. + 8.*noise(vec2(100.*ith,t)) // replace this with the \"volume\" func (depending on ith and t)\n        )*stripe_fact )/stripe_fact );\n    \n    \n    col = vec3(s);\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}