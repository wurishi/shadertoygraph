{"ver":"0.1","info":{"id":"WdlXDf","date":"1552397773","viewed":200,"name":"Seed scatter simulation","username":"codebro","description":"Mathmatical simulation various possibilities of scattering seeds.\n\nInspired by https://www.youtube.com/watch?v=sj8Sg8qnjOg (The Golden Ratio (why it is so irrational) - Numberphile)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spiral","goldenratio","seeds"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EMPTY_C vec4(0)\n#define PI 3.14159265359\n#define NUMBER_OF_DOTS 64.0\n#define GOLDEN_RATIO 1.61803398875\n\nvec4 circle(in float distance, in vec3 color) {\n  float t = smoothstep(0.0, 1.0, distance);\n  return mix(\n           vec4(\n             color,\n             1.0\n           ),\n           EMPTY_C,\n           t\n         );\n}\n\nvec3 hsv2rgb( in vec3 c ) {\n  vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\n\trgb = rgb * rgb * (3.0 - 2.0 * rgb);\n\treturn c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvec3 color(in vec2 pos, in vec2 origin) {\n  return hsv2rgb(vec3(distance(pos, origin) * 1.75, 1.0, 1.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 coord = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n  float time = (\n      GOLDEN_RATIO\n      + iTime * 0.01 // comment out this line to see the most efficient way \n      //to scatter seeds developed in nature through years of evolution\n  );\n\n  vec4 circles;\n    \n  for (float i = 0.0; i <= NUMBER_OF_DOTS; i++) {\n    float radius = 0.014 * i;\n    float radians = time * i * PI * 2.0;\n    vec2 d = coord;\n    float x = sin(radians) * radius;\n    float y = cos(radians) * radius;\n    vec2 pos = d - vec2(x, y);\n    circles += circle(\n      length(pos) * 50.0,\n      hsv2rgb(vec3(length(d) * 1.75, 1.0, 1.0))\n    );\n  }    \n  fragColor = circles;\n}\n","name":"Image","description":"","type":"image"}]}