{"ver":"0.1","info":{"id":"wssyRl","date":"1585388669","viewed":79,"name":"My Marbles","username":"joha2nes","description":"Exercise from the book The Book of Shaders","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","tiled","animation","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 tile(in vec2 uv, in float div)\n{\n\treturn fract(uv * div);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n\n\tfloat zoom = 10.0;\n\tfloat speed = 1.0;\n\tfloat time = iTime * (speed / zoom);\n\n\tvec2 offset = vec2(\n\t\ttime * sign(mod(uv.y * zoom, 2.0)*0.5 - 0.5) * (1.-step(1.0, mod(time * zoom, 2.0))),\n\t\ttime * sign(mod(uv.x * zoom, 2.0)*0.5 - 0.5) * step(1.0, mod(time * zoom, 2.0)));\n\n\tvec2 uvTiled = tile(uv + offset, zoom);\n\n\tfloat dist = length(vec2(0.5) - uvTiled);\n\n\tfloat shine = 1.2 * pow(1.-length(vec2(0.6)-uvTiled), 4.0);\n\tfloat ball = step(0.4, dist) + (1. - step(0.4, dist)) * shine ;\n\n\tvec3 color = vec3(ball);\n\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}