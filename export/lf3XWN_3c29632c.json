{"ver":"0.1","info":{"id":"lf3XWN","date":"1713936161","viewed":504,"name":"Moire falls","username":"ChunderFPV","description":".","likes":46,"published":1,"flags":32,"usePreview":0,"tags":["3d","raymarch","interference","moire","hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// blend\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec4 a = texture(iChannel0, U/R, .5)*.5, // buffer a with mipmap blur\n         b = texture(iChannel1, U/R)*.2;     // buffer b\n    C = a+b - a*b;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Fork of \"Moire 3d template\" by ChunderFPV. https://shadertoy.com/view/lc3SWN\n\n#define A(a) mat2(cos(a*6.2832 + vec4(0, -1.5708, 1.5708, 0)))  // rotate\n#define O(x,a,b) ((cos(x*6.2832)*.5+.5)*(a-b)+b)  // oscillate x between a & b\n#define H(v) O(radians(vec3(0, 45, 90))+(v), 1., 0.)  // hue\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float t = mod(2. + iTime/1e3, 6.),\n          d = 0., i = d, s, n, nt;\n    \n    vec2 //R = iResolution.xy,\n         m = (iMouse.xy-.5*R)/R.y;\n    \n    if (iMouse.z < 1.) m = .4*cos(iTime/12. + vec2(1.6, 0)); // move mouse in a circle\n    \n    vec3 o = vec3(0, 0, -50./(m.y+1.)), // camera\n         u = normalize(vec3(U-R/2., R.y*.6)),\n         c = vec3(0), p, q;\n    \n    mat2 rh = A(m.x/2.), // rotate horizontal\n         rv = A((m.y+.5)/4.);   // vertical\n    \n    for (; i++<1e2;) // raymarch loop\n    {\n        p = o+u*d;\n        p.xz *= rh;\n        p.yz *= rv;\n        \n        q = round(p/2.)*2.; // rounded coords\n        n = length(q.xy); // pattern\n        nt = n*t; // multiply with time\n        p.z -= 15. + (sin(nt*6.2832)-1.) * max(1., n*n*.002); // move & curve z\n        s = length(p-q*vec3(1,1,0)); // spheres\n        \n        if (s < 1e-3 || d > 1e3) break;\n        d += sqrt(s)*.5;\n        c += min(s, .004*sqrt(d/s)) * H(nt-.15) * O(nt, 1., .4);\n    }\n    \n    C = vec4(tanh(c*c*c), 1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// blur\n#define B(s) texture(iChannel1, mix(U/R, vec2(.5), s))*.9 + texture(iChannel0, U/R)\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    C = min(B(.004), B(-.004));\n}","name":"Buffer B","description":"","type":"buffer"}]}