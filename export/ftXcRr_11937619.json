{"ver":"0.1","info":{"id":"ftXcRr","date":"1647417738","viewed":150,"name":"synapse noise","username":"Carandiru","description":"just playing around. gets pretty amazing as zoom out.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"7dsyD7","parentname":"6_2_fdistGrad"},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash22(vec2 p){\n    return textureLod(iChannel0, p/1024.0f, 0.0f).xy;\n    \n    //uvec2 n = floatBitsToUint(p);\n    //return vec2(uhash22(n)) / vec2(UINT_MAX);\n}\n\n//end hash\nfloat fdist(vec2 p){\n    vec2 n = floor(p + 0.5);\n    float dist = sqrt(2.0);\n    for(float j = 0.0; j <= 2.0; j ++ ){\n        vec2 glid;\n        glid.y = n.y + sign(mod(j, 2.0) - 0.5) * ceil(j * 0.5);\n        if (abs(glid.y - p.y) - 0.5 > dist){\n            continue;\n        }\n        for(float i = -1.0; i <= 1.0; i ++ ){\n            glid.x = n.x + i;\n            vec2 jitter = hash22(glid) - 0.5;\n            dist = min(dist, length(glid + jitter - p));\n        }\n    }\n    return dist;\n}\nvec2 grad(vec2 p){\n    float d = iTime * 0.5f;\n    return (vec2(\n            fdist(p + vec2(d, 0.0)) - fdist(p - vec2(d, 0.0)),\n            fdist(p + vec2(0.0, d)) - fdist(p - vec2(0.0, d))\n        ));\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord.xy/iResolution.xy; \n    \n    vec3 color = vec3(grad(uv * (10.0 + iTime * 0.75f)) * 0.5f + 0.5f, 0.0);\n    vec3 r = color.rrr - abs(color.rrr - color.ggg);\n    vec3 g = color.ggg - abs(color.rrr - color.ggg);\n    \n    color.g = dot(r,g);\n    \n    vec3 background = vec3(color.r);\n    vec3 foreground = vec3(color.g);\n    float weight = foreground.r * background.r * 3.75f;\n       \n    color = foreground + vec3(0, weight * 0.1f, weight);\n    \n    fragColor = vec4(color, 1.0f);\n}\n","name":"Image","description":"","type":"image"}]}