{"ver":"0.1","info":{"id":"tltXDj","date":"1581774958","viewed":179,"name":"mirrorballs","username":"yonatan","description":"just a small reflection test","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["reflection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float EPS = 0.0001;\n    const int MAX_STEPS = 200;\n    vec2 uv = fragCoord/iResolution.xy * 2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 ro = vec3(0,cos(iTime)*2.,iTime/3.14*4.);\n    vec3 rd = normalize(vec3(uv, 1.5));\n    vec3 col;\n    vec3 p;\n    float d, t = 0.;\n    int i;\n    for(i=0; i<MAX_STEPS; i++) {\n        p = ro+rd*t;\n        p.xz = mod(p.xz + 2., 4.) - 2.;\n        float dSphere = length(p) - 1.25;\n        if(dSphere < EPS) {\n            t = EPS*2.; // so this branch isn't triggered on the next iteration\n            ro = p;\n            rd = reflect(rd, normalize(p));\n        }\n        t += dSphere;\n    }\n    fragColor = vec4((rd.y > 0. ? vec3(.5,.7,.9) : vec3(.9,.7,.5)) * (1.5 - abs(rd.y)), 1.);\n}","name":"Image","description":"","type":"image"}]}