{"ver":"0.1","info":{"id":"DtlBRr","date":"1692540026","viewed":58,"name":"Johnson rocketwave rainbow atack","username":"Pingas","description":"enjoy","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// center in (0,0)\nfloat sdCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nvec2 circle(vec2 p, float r) {\n    float d = sdCircle(p, r);\n    return vec2(d, smoothstep(0.05 * r, 0.0, d));\n}\n\n// center in (0, 0)\nconst float pi = 3.141593;\n\nvec2 funnyCircle(vec2 p, float r0, float dphi) {\n    float k = 2.0 * pi / (4.0 * dphi);\n    float phi = atan(p.x, p.y);\n    float r = length(p);\n    float dr = 0.0;\n    if (abs(phi) < dphi) {\n        dr = 0.2;\n    }\n    float a = smoothstep(0.05, 0.0, r - r0 + dr);\n    return vec2(r - r0, a);\n}\n\n// center in (0,0)\nfloat sdBox(vec2 p, vec2 b) {\n    p = abs(p) - b;\n    return length(max(p, 0.0)) + min(max(p.x, p.y), 0.0);\n}\n\nvec2 box(vec2 p, vec2 b) {\n    float d = sdBox(p, b);\n    return vec2(d, smoothstep(0.05 * min(b.x, b.y), 0.0, d));\n}\n\n\n// rot: (cosA, sinA)\nvec2 rotate(vec2 p, vec2 rot) {\n    return vec2(rot.x * p.x - rot.y * p.y, rot.y * p.x + rot.x * p.y);\n}\n\nvec2 irotate(vec2 p, vec2 rot) {\n    return rotate(p, vec2(rot.x, -rot.y));\n}\n\nvec2 itransform(vec2 p, vec2 rot, vec2 tr) {\n    return irotate(p, rot) - tr;\n}\n\n// uv from [0, 1]\nvec4 johnson(vec2 uv, float t) {\n    uv *= 5.0;\n    \n    float s = 0.8;\n    \n    vec2 rot = vec2(cos(t), sin(t));\n    \n    vec3 color1 = vec3(60.0, 34.0, 24.0) / 255.0;\n    vec3 color2 = vec3(232.0, 169.0, 169.0) / 255.0;\n    vec3 color3 = vec3(0.0, 0.0, 0.0);\n    \n    vec2 center = vec2(2.5);\n    vec2 o1 = vec2(-s * 1.0, -s * 1.5);\n    vec2 o2 = vec2(+s * 1.0, -s * 1.5);\n    vec2 o3 = vec2(+s * 0.0, +s * 1.5);\n    vec2 o4 = vec2(0.0);\n    \n    vec2 d1 = circle(itransform(uv - center, rot, o1), s);\n    vec2 d2 = circle(itransform(uv - center, rot, o2), s);\n    vec2 d3 = circle(itransform(uv - center, rot, o3), s);\n    vec2 d4 = funnyCircle(itransform(uv - center, rot, o3), s, pi * 0.02);\n    vec2 d5 = box(itransform(uv - center, rot, o4), vec2(s, s * 1.5));\n    \n    vec3 color = vec3(0.0);\n    color = mix(color, color1, d1.y);\n    color = mix(color, color1, d2.y);\n    color = mix(color, color1, d3.y);\n    color = mix(color, color2, d4.y);\n    color = mix(color, color1, d5.y);\n    \n    float d = 1e6;\n    d = min(d, d1.x);\n    d = min(d, d2.x);\n    d = min(d, d3.x);\n    d = min(d, d4.x);\n    d = min(d, d5.x);\n    return vec4(color, smoothstep(0.05, 0.0, d));\n}\n\n// I stole it\nvec4 rainbow(vec2 p, float t) {\n    p *= 2.0;\n    p *= mat2(1.0, -1.0, 0.0, sqrt(2.0));\n    \n\tfloat q = max(p.x, -0.1);\n\tfloat s = sin(p.x * 7.0 + t) * 0.08;\n    \n\tp.y += s;\n\tp.y *= 1.1;\n\t\n    vec4 colors[6] = vec4[](\n        vec4(255, 43, 14, 255) / 255.0,\n        vec4(255, 168, 6, 255) / 255.0,\n        vec4(255, 244, 0, 255) / 255.0,\n        vec4(51, 234, 5, 255) / 255.0,\n        vec4(8, 163, 255, 255) / 255.0,\n        vec4(122, 85, 255, 255) / 255.0);\n\n    int i = (int(floor(p.y * 6.0)) + 6) % 6;\n    vec4 c = colors[i];\n        \n\tc.a *= 0.8 - min(0.8, abs(p.x * 0.08));\n\tc.xyz = mix(c.xyz, vec3(length(c.xyz)), 0.15);\n    \n\treturn c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float t = iTime * 1.5;\n    float dim = min(iResolution.x, iResolution.y);\n\n    vec2 uv = fragCoord / dim;\n    vec3 bgrd = rainbow(uv - vec2(2.25, 0.1), -t).rgb;\n    \n    vec2 iuv = floor(uv * 20.0);\n    uv = fract(uv * 20.0);\n    \n    float diag = (iuv.y - iuv.x);\n    float anim = 0.25 * sin(0.25 * diag + t) + 0.75;\n    \n    float scale = anim;\n    float offset = 0.0;\n    float phase = anim;\n    \n    vec4 j = johnson(uv / scale - offset, t + phase);\n    \n    vec3 color = mix(bgrd, j.rgb, j.a);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}