{"ver":"0.1","info":{"id":"tstBR4","date":"1604522618","viewed":92,"name":"acid circle [EPILEPSY WARNING] 2","username":"Osakazaur","description":"Like previous acid circle, but it is\nrorating,\nsinis-waved,\ndnd sinus also pulsing!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","epilepsy","sinus","crazy","pulsing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float radius = .5;\nfloat pi = 3.14;\n\nfloat step2(float x){\n\treturn x*x;\n}\n\nfloat pulsing(){\n    float fi = fract(iTime)*2.*pi;\n\treturn (1. - cos(fi));\n}\n\nfloat fractured(float offset, float timeScale){\n    float _fractured = fract(iTime*timeScale + offset);\n    _fractured = distance(_fractured, 0.5) * 2.;\n    _fractured = 1. - _fractured;\n    return _fractured;\n}\n\nvec3 nowCol(){\n\treturn vec3(\n        fractured(0., 1.),\n        fractured(0.33, 1.),\n        fractured(0.67, 1.)        \t\n    );    \n}\n\nvec4 multColor(float m){\n    \n    vec3 nowCol_ = nowCol();\n\treturn vec4(nowCol_.r * m,\n               nowCol_.g * m,\n               nowCol_.b * m,\n               1.);\n}\n\n\nvec2 decToPolar(vec2 xy){\n    float x = xy.x; float y = xy.y;\n    \n    float r = sqrt(step2(x) + step2(y));\n    float fi = 0.;\n\n\tif (x > 0.){\n        if (y > 0.){fi = atan(y/x);}\n        else if (y < 0.){fi = atan(y/x) + 2.*pi;}\n        else if (y == 0.){fi = 0.;};\n    }\n    else if (x < 0.){\n        fi = atan(y/x) + pi;\n    }\n    else if (x == 0.){\n        if (y > 0.){fi = pi/2.;}\n        else if (y < 0.){fi = 3.*pi/2.;}\n        else if (y == 0.){fi = 0.;}\n    }\n    \n    return vec2(r, fi);\n}\n\n\n\nvec4 circle(vec2 center, vec2 pos, float radius){\n    float dec = 15. * pulsing() + 5.;\n    pos = vec2 ((pos.x - center.x), (pos.y - center.y));\n    vec2 rf = decToPolar(pos);\n    float amp = 15.*fractured(0., 6.);\n    radius += amp*sin(rf.y*36. + iTime*12.);\n    float mult = 1. - distance(rf.x, radius) / dec;\n    \n    \n   return multColor(mult);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 xy = fragCoord;\n    \n  \tvec2 center = vec2(iResolution.x * 0.5, iResolution.y * 0.5);\n    radius = radius * iResolution.y * 0.5;\n    fragColor = circle(center, xy, radius) * circle(center, xy, radius*1.5);\n    //fragColor = circle(center, xy, radius);\n}","name":"Image","description":"","type":"image"}]}