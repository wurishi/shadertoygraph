{"ver":"0.1","info":{"id":"NlXSDj","date":"1626509506","viewed":40,"name":"3d--Practice","username":"dionysoslai","description":"simple 3d","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p)\n{\n    return length(cross(p - ro, rd)) / length(rd);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 ro = vec3(0, 0, -2);\n    vec3 rd = vec3(uv.x, uv.y, 2.0) - ro;\n    vec3 p = vec3(0, 0, 3);\n    // Time varying pixel color\n    vec3 col = vec3(DistLine(ro, rd, p));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}