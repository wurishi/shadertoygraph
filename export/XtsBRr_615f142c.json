{"ver":"0.1","info":{"id":"XtsBRr","date":"1510793191","viewed":126,"name":"Mario theme sound test","username":"lukeamaral","description":"Experimenting with sound shader with the mario bros theme song","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["mariobros","themesong","soundexperiments"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI 3.141592653589793\n\n#define SPEED 1.5\n\n#define A 440.\n#define Bb A * pow(2., 1./12.)\n#define B A * pow(2., 1./6.)\n#define C A * pow(2., 1./4.)\n#define Db A * pow(2., 1./3.)\n#define D A * pow(2., 5./12.)\n#define Eb A * pow(2., 1./2.)\n#define E A * pow(2., 7./12.)\n#define F A * pow(2., 2./3.)\n#define Gb A * pow(2., 3./4.)\n#define G A * pow(2., 5./6.)\n#define Ab A * pow(2., 11./12.)\n\nvec2 note(float freq, inout float time, float duration) {\n    duration/=SPEED;\n    \n    if (time > 0. && time < duration*0.98) {\n        time-=duration;\n\t\treturn vec2(sin(2.0*PI*freq*time));//*(1.0-step(duration, time))*step(0., time);\n    }\n    else {\n        time-=duration;\n        return vec2(0.);\n    }\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    vec2 rlmix = vec2(0.5 + 0.5*sin(time), 0.5 + 0.5*cos(time));\n    \n    vec2 vol = vec2(0.);\n    time-=1.0;\n    \n    vol += note(E, time, .25);\n    vol += note(E, time, .5);\n    vol += note(E, time, .5);\n    vol += note(C, time, .25);\n    vol += note(E, time, .5);\n    vol += note(G, time, .5);\n    time-=.5/SPEED;\n    vol += note(G/2., time, .5);\n    time-=.5/SPEED;\n    \n    for (int i = 0; i < 2; i++) {\n        for (int j = 0; j < 2; j++) {\n            vol += note(C, time, .75);\n            vol += note(G/2., time, .75);\n            vol += note(E/2., time, .5);\n            time-=.25/SPEED;\n            vol += note(A, time, .5);\n            vol += note(B, time, .5);\n            vol += note(Bb, time, .25);\n            vol += note(A, time, .5);\n\n            vol += note(G/2., time, 1./3.);\n            vol += note(E, time, 1./3.);\n            vol += note(G, time, 1./3.);\n            vol += note(A*2., time, .5);\n            vol += note(F, time, .25);\n            vol += note(G, time, .5);\n            vol += note(E, time, .5);\n            vol += note(C, time, .25);\n            vol += note(D, time, .25);\n            vol += note(B, time, .5);\n            time-=.25/SPEED;\n        }\n\n        time-=.5/SPEED;\n        vol += note(G, time, .25);\n        vol += note(Gb, time, .25);\n        vol += note(F, time, .25);\n        vol += note(Eb, time, .5);\n        vol += note(E, time, .5);\n        vol += note(G/2., time, .25);\n        vol += note(A, time, .25);\n        vol += note(C, time, .5);\n        vol += note(A, time, .25);\n        vol += note(C, time, .25);\n        vol += note(D, time, .25);\n\n        time-=.5/SPEED;\n        vol += note(G, time, .25);\n        vol += note(Gb, time, .25);\n        vol += note(F, time, .25);\n        vol += note(Eb, time, .5);\n        vol += note(E, time, .5);\n        vol += note(C*2., time, .5);\n        vol += note(C*2., time, .25);\n        vol += note(C*2., time, .5);\n        time-=.5/SPEED;\n\n        time-=.5/SPEED;\n        vol += note(G, time, .25);\n        vol += note(Gb, time, .25);\n        vol += note(F, time, .25);\n        vol += note(Eb, time, .5);\n        vol += note(E, time, .5);\n        vol += note(G/2., time, .25);\n        vol += note(A, time, .25);\n        vol += note(C, time, .5);\n        vol += note(A, time, .25);\n        vol += note(C, time, .25);\n        vol += note(D, time, .25);\n\n        time-=.5/SPEED;\n        vol += note(Eb, time, .5);\n        time-=.25/SPEED;\n        vol += note(D, time, .5);\n        time-=.25/SPEED;\n        vol += note(C, time, .5);\n        time-=1.5/SPEED;\n    }\n    \n    return vol*rlmix;\n}","name":"Sound","description":"","type":"sound"}]}