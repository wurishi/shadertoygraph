{"ver":"0.1","info":{"id":"4st3W8","date":"1449343205","viewed":197,"name":"~{{{-{-{{{ 135 }}}-}-}}}~","username":"MrHenryBemis","description":"MANDALIC GEMATRIAD HYPERSURFACTOID","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["spheres","folding","mandala"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define iTime tan(iTime*.1)\n\n#define DTM 135.0\n\n#define D 30.0\n#define T 5.0\n#define M 100.0\n\n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy*2.0-1.0;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    float scale = (sin(iTime)*.5+.5);\n    \n    float d; \n    \n    vec3 col = vec3(.3);\n    \n    for(int i = 0; i < 4; i++)\n    {\n        vec2 p = vec2(cos(float(i)/22.0*PI*22.0+iTime), sin(float(i)/22.0*PI*2.0+iTime));\n    \n        d = length(uv-p)*0.3;\n        \n        \n    \tif(d <= 3.0)\n        {\n            col += (vec3(\n            sin(-iTime*PI*2.0+D+d*PI),\n            sin(-iTime*PI*7.0+4.0*PI/3.0+M+d*PI),\n            sin(-iTime*PI*1.0+2.0*PI/2.0+T+d*PI))*.5+.5)*sin(d*PI*DTM+iTime*DTM);\n        }\n    }\n    \n    d = length(uv)*2.2;\n    \n    col += vec3(\n    \tsin(-iTime*PI*3.0+D+d*PI),\n        sin(-iTime*PI*2.0+4.0*PI/3.0+M+d*PI),\n        sin(-iTime*PI*3.0+3.0*PI/2.0+T+d*PI));\n    \n\t\tfragColor = vec4(col, 1.0);\n}\n\n\n/*\n#define iTime iTime*.2\n\n#define DMT 134.0\n\n#define D 4.0\n#define M 40.0\n#define T 90.0\n\n#define PI 3.14159265359\n\n#define MOD3 vec3(.1031,.11369,.13787)\n\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * MOD3);\n\tp3 += dot(p3, p3.yzx + 19.19);\n\treturn fract(vec2((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y));\n}\n\n//float hash11(float p)\n{\n\tvec3 p3  = fract(vec3(p) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy*2.0-1.0;\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    float scale = (sin(iTime)*.5+.5);\n    \n    float d = length(uv)*1.2;\n    \n    vec3 col = vec3(0.0);\n    \n    for(int i = 0; i < 2; i++)\n    {\n        vec2 p = hash21(float(i))*2.0-1.0;\n    \n        d = length(uv-p)*1.5;\n        \n        \n    \tif(d <= 1.0)\n        {\n            col += (vec3(\n            sin(-iTime*PI*2.0+D+d*PI),\n            sin(-iTime*PI*2.0+4.0*PI/3.0+M+d*PI),\n            sin(-iTime*PI*2.0+2.0*PI/3.0+T+d*PI))*.5+.5)*(sin(d*PI*DMT)*.5+.5);\n        }\n    }\n    \n    col = vec3(\n            sin(col.x*2.0+D),\n            sin(col.y*2.0+4.0*PI/3.0+M),\n            sin(col.z*2.0+2.0*PI/3.0+T))*.5+.5;\n    \n\t\tfragColor = vec4(col, 1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}