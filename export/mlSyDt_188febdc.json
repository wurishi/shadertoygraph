{"ver":"0.1","info":{"id":"mlSyDt","date":"1692526124","viewed":62,"name":"Canny-LCD","username":"LCDShader","description":"Canny。","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["2dcanny"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//const float PI=3.1415926;\n#define PI acos(-1.)\n\nfloat maxGradient=0.7;\nfloat minGradient=0.3;\n\n\nbool IsStrong(vec2 uv)\n{\n   float is_max=texture(iChannel3,uv /iResolution.xy).x;\n    if(is_max>maxGradient)\n    return true;\n    if(is_max<minGradient)\n    return false;\n    return false;\n}\n\nbool  ConnectEdge(vec2 uv)\n{\n    float is_max=texture(iChannel3,uv /iResolution.xy).x;\n    \n    if(is_max<minGradient)\n    return false;\n    \n    if(is_max>maxGradient)\n    return true;\n   \n    bool is_strong=IsStrong(vec2(uv.x-1.0,uv.y-1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x,uv.y-1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x+1.0,uv.y-1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x-1.0,uv.y));\n    is_strong=is_strong||IsStrong(vec2(uv.x+1.0,uv.y));\n    is_strong=is_strong||IsStrong(vec2(uv.x-1.0,uv.y+1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x,uv.y+1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x+1.0,uv.y+1.0));\n    return is_strong;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv=fragCoord;\n   vec4 color=vec4(0.0);\n   if(ConnectEdge(uv))\n   {\n     color=vec4(1.0);\n   }\n   fragColor=color;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n//Gauss\n//\n//  1 | 2 | 1\n// ---+---+---\n//  2 | 4 | 2\n// ---+---+---\n//  1 | 2 | 1\n//\nconst float[] gaussValue=float[](1.0/16.0,2.0/16.0,1.0/16.0,2.0/16.0,4.0/16.0,2.0/16.0,1.0/16.0,2.0/16.0,1.0/16.0);\nconst float PI=3.1415926;\n\n#define tex iChannel0\n\nfloat GetGrey(vec3 color)\n{\n    //return 0.2116*color.x+0.7152*color.y+0.0722*color.z;\n     return dot(color, vec3(0.2116, 0.7152, 0.0722));\n}\n \nfloat  Gaussian(vec2 uv)//高斯模糊，去噪\n{ \n    //sampler2D tex=iChannel0;\n    vec3 color_0=texture(tex,vec2(uv.x-1.0,uv.y-1.0)/iResolution.xy).rgb; \n    vec3 color_1=texture(tex,vec2(uv.x,uv.y-1.0)/iResolution.xy).rgb; \n    vec3 color_2=texture(tex,vec2(uv.x+1.0,uv.y-1.0)/iResolution.xy).rgb; \n    vec3 color_3=texture(tex,vec2(uv.x-1.0,uv.y)/iResolution.xy).rgb; \n    vec3 color_4=texture(tex,vec2(uv.x,uv.y)/iResolution.xy).rgb; \n    vec3 color_5=texture(tex,vec2(uv.x+1.0,uv.y)/iResolution.xy).rgb;\n    vec3 color_6=texture(tex,vec2(uv.x-1.0,uv.y+1.0)/iResolution.xy).rgb;\n    vec3 color_7=texture(tex,vec2(uv.x,uv.y+1.0)/iResolution.xy).rgb;\n    vec3 color_8=texture(tex,vec2(uv.x+1.0,uv.y+1.0)/iResolution.xy).rgb;\n    float value_0=GetGrey(color_0);\n    float value_1=GetGrey(color_1);\n    float value_2=GetGrey(color_2);\n    float value_3=GetGrey(color_3);\n    float value_4=GetGrey(color_4);\n    float value_5=GetGrey(color_5);\n    float value_6=GetGrey(color_6);\n    float value_7=GetGrey(color_7);\n    float value_8=GetGrey(color_8);\n    \n    return 1.0/16.0*(1.0*value_0+2.0*value_1+1.0*value_2+\n                     2.0*value_3+4.0*value_4+2.0*value_5+\n                     1.0*value_6+2.0*value_7+1.0*value_8);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(vec3(Gaussian(fragCoord)),1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// \nvec2 GetGradientXY(vec2 uv)\n{\n    float value_0=texture(iChannel0,vec2(uv.x-1.0,uv.y-1.0)/iResolution.xy).x;\n    float value_1=texture(iChannel0,vec2(uv.x,uv.y-1.0)/iResolution.xy).x;\n    float value_2=texture(iChannel0,vec2(uv.x+1.0,uv.y-1.0)/iResolution.xy).x;\n    float value_3=texture(iChannel0,vec2(uv.x-1.0,uv.y)/iResolution.xy).x;\n    float value_4=texture(iChannel0,vec2(uv.x,uv.y)/iResolution.xy).x;\n    float value_5=texture(iChannel0,vec2(uv.x+1.0,uv.y)/iResolution.xy).x;\n    float value_6=texture(iChannel0,vec2(uv.x-1.0,uv.y+1.0)/iResolution.xy).x;\n    float value_7=texture(iChannel0,vec2(uv.x,uv.y+1.0)/iResolution.xy).x;\n    float value_8=texture(iChannel0,vec2(uv.x+1.0,uv.y+1.0)/iResolution.xy).x;\n\n    float x=(value_0*-3.0+value_2*3.0-10.0*value_3+10.0*value_5-3.0*value_6+3.0*value_8)/32.0;\n    float y=(value_0*-3.0+value_1*-10.0-3.0*value_2+3.0*value_6+10.0*value_7+3.0*value_8)/32.0;\n    return vec2(x,y);\n}\n\nvec2 GetGradient(vec2 uv)//得到梯度值和角度值\n{\n    vec2 XY=10.0*GetGradientXY(uv);\n    return vec2(sqrt(dot(XY,XY)),atan(XY.y,XY.x));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 XY=10.0*GetGradientXY(fragCoord);\n    float gradident=sqrt(dot(XY,XY));\n    float angle=atan(XY.y,XY.x);\n\n    fragColor=vec4(gradident,XY,angle);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"#define PI acos(-1.)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 dx = vec2(1. / iResolution.x, 0.);\n    vec2 dy = vec2(0., 1. / iResolution.y);\n    vec4 gradientInfo = texture(iChannel0, uv);\n     float theta = gradientInfo.w;\n    float localMax = 0.;\n    if ((theta < 0.125 * PI && theta > -0.125 * PI) ||\n        (theta > 0.875 * PI || theta < -0.875 * PI))\n    {\n        localMax = max(localMax, texture(iChannel0, uv + dx).x);\n        localMax = max(localMax, texture(iChannel0, uv - dx).x);\n    }\n    if ((theta > 0.125 * PI && theta < 0.365 * PI) ||\n       (theta > -0.875 * PI && theta < -0.625 * PI))\n    {\n        localMax = max(localMax, texture(iChannel0, uv - dx - dy).x);\n        localMax = max(localMax, texture(iChannel0, uv + dx + dy).x);\n    }\n    if ((theta > 0.375 * PI && theta < 0.625 * PI) ||\n        (theta < -0.375 * PI && theta > -0.625 * PI))\n    {\n        localMax = max(localMax, texture(iChannel0, uv - dy).x);\n        localMax = max(localMax, texture(iChannel0, uv + dy).x);\n    }\n    if ((theta > 0.625 * PI && theta < 0.875 * PI) ||\n        (theta > -0.365 * PI && theta < -0.125 * PI))\n    {\n        localMax = max(localMax, texture(iChannel0, uv + dx - dy).x);\n        localMax = max(localMax, texture(iChannel0, uv - dx + dy).x);\n    }\n    \n    if (gradientInfo.x < localMax)\n    {\n        gradientInfo.x = 0.;\n        gradientInfo.y = 0.;\n        gradientInfo.z = 0.;\n    }\n    fragColor = vec4(gradientInfo);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"//const float PI=3.1415926;\n#define PI acos(-1.)\n\nfloat maxGradient=0.7;\nfloat minGradient=0.3;\n\n\nbool IsStrong(vec2 uv)\n{\n   float is_max=texture(iChannel0,uv /iResolution.xy).x;\n    if(is_max>maxGradient)\n    return true;\n    if(is_max<minGradient)\n    return false;\n    return false;\n}\n\nbool  ConnectEdge(vec2 uv)\n{\n    float is_max=texture(iChannel3,uv /iResolution.xy).x;\n    \n    if(is_max<minGradient)\n    return false;\n    \n    if(is_max>maxGradient)\n    return true;\n   \n    bool is_strong=IsStrong(vec2(uv.x-1.0,uv.y-1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x,uv.y-1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x+1.0,uv.y-1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x-1.0,uv.y));\n    is_strong=is_strong||IsStrong(vec2(uv.x+1.0,uv.y));\n    is_strong=is_strong||IsStrong(vec2(uv.x-1.0,uv.y+1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x,uv.y+1.0));\n    is_strong=is_strong||IsStrong(vec2(uv.x+1.0,uv.y+1.0));\n    return is_strong;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv=fragCoord;\n   vec4 color=vec4(0.0);\n   if(ConnectEdge(uv))\n   {\n     color=vec4(1.0);\n   }\n   fragColor=color;\n}","name":"Buffer D","description":"","type":"buffer"}]}