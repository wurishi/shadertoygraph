{"ver":"0.1","info":{"id":"tdy3DD","date":"1570720604","viewed":194,"name":"On The Alien Operating Table","username":"104","description":"Mouse click = color","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float RINGS = 15.;\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord/R.xy-.5;\n    uv.x *= R.x/R.y;\n    vec2 N = uv;\n    uv *= .3;\n    float t = iTime*.2;\n\n    o = vec4(1);\n    for (float i = 1.;i <= RINGS; ++ i) {\n        vec4 h = hash42(vec2(i)+3e2);\n        vec4 h2 = hash42(h.zw*2e2+4e2);\n        h.y -= t * (h.z-.5);\n        h.x += h.y*(h2.w-.5)*2.;\n        h.xy = fract(h.xy-.5)-.5;// repetition\n\n        float sd = 1e3;\n        \n        // cheap variations\n        for (int s = 0; s < 4; ++ s) {\n            vec2 p = fract(h.xy+h2[s]-.5)-.5;\n            float sdextra = length(uv - p) - h2.w*h2[(s+1)%4]*.2;\n            sd = min(sd, sdextra);\n        }\n        \n        float a = .5/clamp(sd*sd*500.*h2.w, .1,1e3);\n        o = mix(o, h2, a);\n\t}\n    float sd = abs(length(uv)-.12)-.01;// center ring\n    o /= max(sd, 1e-3)*80.;\n    o += (hash42(N*1e3+t)-.5)*.2;\n    if (iMouse.z <= 0.)\n\t    o.rgb = mix(o.rgb,(o.rrr+o.g+o.b)/3.,1.);\n}\n\n","name":"Image","description":"","type":"image"}]}