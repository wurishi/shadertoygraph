{"ver":"0.1","info":{"id":"MtlcDH","date":"1504723202","viewed":107,"name":"Eye of Fractal","username":"skandix","description":"testing shadertoy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["testing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 p = gl_FragCoord.xy / iResolution.xy;\n\tvec2 q = p - vec2(.5, .5);\n    \n    vec4 col = vec4(\n        abs(cos(iTime*q.y)/sin(.2)),  \n        0.0, \n        log(sin(iTime*q.x)/cos(.2 )),\n        1.0\n    );\n    //vec4 col = vec4(abs(sin(iTime)));\n    float amp = 0.2;\n    float freq = 69./.2;\n    \n    float r = .2 + amp * cos( atan( q.y, q.x) *freq + 10.+iTime/.5 * iTime);\n    \n    col -= (sin(iTime)*log(.2)/amp)*1.;\n    \n    \n    col *= smoothstep( r, r+.01, length( q ) );\n    \n    col += PI;\n    \n    \n    r = 0.01;\n    \n    //col *= smoothstep( r, r+.01, abs( q.x )  );\n    \n    fragColor = vec4(col);\n    \n} ","name":"Image","description":"","type":"image"}]}