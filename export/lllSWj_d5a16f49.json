{"ver":"0.1","info":{"id":"lllSWj","date":"1439879506","viewed":121,"name":"playing with some colors","username":"JamesHagerman","description":"woop. colors","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sensatron"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Smooth HSV to RGB conversion \nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float time = sin(iTime*uv.x);\n    \n    vec3 hsvColor = hsv2rgb_smooth(vec3(time, 1.0, 1.0));\n    \n    fragColor = vec4(hsvColor, 1.0);\n        \n        \n        \n        \n   \t//vec2 uv = fragCoord.xy / iResolution.xy;\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    // fragColor is the MOST IMPORTANT thing in a shader\n    // vec4 = 4 dimensional vector\n    // red, green, blue, alpha\n    // values between 0.0 and 1.0\n    //fragColor = vec4(0.0, 0.0, 1.0, 1.0);\n    \n    \n    //sin(iTime); // -1.0 1.0\n    \n    //vec2 twovals = vec2(0.0, 0.0);\n    //vec3 rgbOut = vec3(abs(sin(2.0*iTime)), 0.0, abs(sin(5.0*iTime)));\n    //fragColor = vec4(twovals, 1.0, 1.0);\n    \n}","name":"","description":"","type":"image"}]}