{"ver":"0.1","info":{"id":"3tdcWS","date":"1609830934","viewed":362,"name":"Parallax Mapping study","username":"FunMaster","description":"Basic parallax effect","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["parallax","pom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 POM(vec2 uv, vec3 viewDir, float height)\n{     \n    vec2 p = viewDir.xy / viewDir.z * height * sin(iTime * 0.5) * 0.3;\n    return uv - p;    \n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 dir = vec3(1., 1., 5.);\n    fragColor = vec4(texture(iChannel0, POM(uv, dir, texture(iChannel0, uv).r)).r);\n\n    // Output to screen\n    fragColor = fragColor;\n}","name":"Image","description":"","type":"image"}]}