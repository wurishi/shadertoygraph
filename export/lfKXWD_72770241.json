{"ver":"0.1","info":{"id":"lfKXWD","date":"1715224219","viewed":31,"name":"TruchetTilesJ3D","username":"just_3d_things","description":"My first Shadertoy Project","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cools"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 animuv = uv + vec2(iTime*0.2,0.);\n    vec3 col = vec3(0);\n    animuv *= 10.;\n\n    // Time varying pixel color\n    vec2 fc = fract(animuv);\n    vec2 id = floor(animuv);\n    float wn = hash12(id);\n    if(wn>0.5){\n        fc.x = 1.-fc.x;\n    }\n    \n    float len = distance(fc,vec2(0.));\n    len = min(len,distance(fc,vec2(1)));\n    len -= 0.5;\n    len = abs(len);\n    if(len<uv.x/10.){\n        col = vec3(1);\n    }\n    else{\n        col = vec3(0);\n    }\n    \n    \n\n    // Output to screen\n    //fragColor = vec4(wn,0.0,0.0,1.0);\n    fragColor = vec4(vec3(1.-len*4.),1.0);\n    \n}\n\n","name":"Image","description":"","type":"image"}]}