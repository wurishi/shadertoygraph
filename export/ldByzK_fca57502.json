{"ver":"0.1","info":{"id":"ldByzK","date":"1492773894","viewed":93,"name":"Sketch_Template","username":"cexlearning","description":"Template,copy from https://github.com/keijiro/ShaderSketches","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 sincos(float x) { return vec2(sin(x), cos(x)); }\n\nfloat rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec2 fade(vec2 x) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }\nvec3 fade(vec3 x) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }\n\nvec2 phash(vec2 p)\n{\n    p = fract(mat2(1.2989833, 7.8233198, 6.7598192, 3.4857334) * p);\n    p = ((2384.2345 * p - 1324.3438) * p + 3884.2243) * p - 4921.2354;\n    return normalize(fract(p) * 2.0 - 1.0);\n}\n\nvec3 phash(vec3 p)\n{\n    p = fract(mat3(1.2989833, 7.8233198, 2.3562332,\n                   6.7598192, 3.4857334, 8.2837193,\n                   2.9175399, 2.9884245, 5.4987265) * p);\n    p = ((2384.2345 * p - 1324.3438) * p + 3884.2243) * p - 4921.2354;\n    return normalize(fract(p) * 2.0 - 1.0);\n}\n\nfloat noise(vec2 p)\n{\n    vec2 ip = floor(p);\n    vec2 fp = fract(p);\n    float d00 = dot(phash(ip), fp);\n    float d01 = dot(phash(ip + vec2(0, 1)), fp - vec2(0, 1));\n    float d10 = dot(phash(ip + vec2(1, 0)), fp - vec2(1, 0));\n    float d11 = dot(phash(ip + vec2(1, 1)), fp - vec2(1, 1));\n    fp = fade(fp);\n    return mix(mix(d00, d01, fp.y), mix(d10, d11, fp.y), fp.x);\n}\n\nfloat noise(vec3 p)\n{\n    vec3 ip = floor(p);\n    vec3 fp = fract(p);\n    float d000 = dot(phash(ip), fp);\n    float d001 = dot(phash(ip + vec3(0, 0, 1)), fp - vec3(0, 0, 1));\n    float d010 = dot(phash(ip + vec3(0, 1, 0)), fp - vec3(0, 1, 0));\n    float d011 = dot(phash(ip + vec3(0, 1, 1)), fp - vec3(0, 1, 1));\n    float d100 = dot(phash(ip + vec3(1, 0, 0)), fp - vec3(1, 0, 0));\n    float d101 = dot(phash(ip + vec3(1, 0, 1)), fp - vec3(1, 0, 1));\n    float d110 = dot(phash(ip + vec3(1, 1, 0)), fp - vec3(1, 1, 0));\n    float d111 = dot(phash(ip + vec3(1, 1, 1)), fp - vec3(1, 1, 1));\n    fp = fade(fp);\n    return mix(mix(mix(d000, d001, fp.z), mix(d010, d011, fp.z), fp.y),\n               mix(mix(d100, d101, fp.z), mix(d110, d111, fp.z), fp.y), fp.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy * 10.0 / iResolution.y;\n    float c = noise(vec3(p, iTime)) + 0.5;\n    vec3 rgb = vec3(c);\n    fragColor = vec4(rgb, 1);\n}","name":"Image","description":"","type":"image"}]}