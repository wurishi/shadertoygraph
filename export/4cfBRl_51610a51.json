{"ver":"0.1","info":{"id":"4cfBRl","date":"1724156512","viewed":21,"name":"Fork Elsio 🟥🟧🟨🟩🟦🟪🟦 .","username":"shadertoyjiang","description":"why this do not work properly?\n🟥🟧🟨🟩🟦🟪🟦🟩🟨🟧🟥\n@Elsio:I'm going to show this result publicly for the time being","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color","random","study","pattern"],"hasliked":0,"parentid":"4cffRf","parentname":"🟥🟧🟨🟩🟦🟪🟦 aleatory colors"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 o, vec2 u) {\n\n    vec2 R = iResolution.xy,\n         p = (u + u - R) / R.y    * .01;\n         //k;\n         \n    float k, a = p.x;\n    \n    //a = 3.8;   \n    \n    if(p.y>0.)\n         k = fract( a      ); // if a = 3.8;  now k = 0.799999606777 = 00111111 01001100 11001100 11001100\n    else\n         k = fract( a + 2. ); // if a = 3.8;  now k = 0.800009842777 = 00111111 01001100 11001100 11010000\n    \n    o = vec4(fract(k*1e6));\n    \n    // color\n    //o.x += sign(p.y)*exp(-iTime*1.);\n    \n}\n\n\n// It's a floating-point problem, \n// I've tried to get here,\n// but I still can't figure out why, \n// rounding up?\n\n\n\n// 也许找到原因了，浮点数长度有限，有些数字不能精确表达，只能存储近似值：\n\n// Maybe the reason has been found, floating-point numbers are limited in length, and some numbers cannot be expressed exactly, and only approximate values can be stored:\n\n// if set a=3.8, now a=3.799998487777\n\n// if set a=5.8, now a=5.709998047777 ？？？？？？？？？？？？？？？\n\n// if set a=0.8, now a=0.799999700777\n\n\n","name":"Image","description":"","type":"image"}]}