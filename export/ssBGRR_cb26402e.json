{"ver":"0.1","info":{"id":"ssBGRR","date":"1616802642","viewed":260,"name":"brickmod","username":"Del","description":"brick","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["bricks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// brickmod\n//#define SYMMETRIC\n\nvec4 BrickGridMod(vec2 uv, out vec2 id,float aspect)\n{\n    vec2 pos = uv * vec2(1.0,aspect);\n    pos.x += floor(uv.y*aspect)/aspect;\n    id = floor(pos);\n    id.y /= aspect;\n    pos = fract(pos);\n    vec2 uv2 = fract (pos)-0.5;\n    uv2.y /= aspect;\n    pos=abs(fract (pos + 0.5) - 0.5);\n    float d = min(pos.x,pos.y/aspect);\n    return vec4(abs(d),length(uv2),uv2);\n}\n\n// IQ's vec2 to float hash.\nfloat hash21(vec2 p){  return fract(sin(dot(p, vec2(27.619, 57.583)))*43758.5453); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = 0.0;//iTime;\n\tvec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\t\n    float zoom = 8.0;\n    if (iMouse.z>0.5)\n        zoom += sin(uv.x*3.0+iTime); // Wibble\n\t\n\tvec2 id;\n\tvec4 h = BrickGridMod(uv*zoom, id, 2.4);\n    \n    #ifdef SYMMETRIC\n    // symmetric\n    float patternVal =165.5; // 33.5\n    float blend = pow(abs(sin(length(id)*patternVal + t*0.65)), 16.0);\t// pulse mult\n    #else\n    // randomized\n    float blend = pow(abs(sin(hash21(id)*4.35 + t*0.65)), 16.0);\t// pulse mult\n    #endif\n\n\tvec3 shapecol1  = vec3(0.4,0.2,0.2);\n\tvec3 shapecol2  = vec3(0.65,0.55,0.5);\n\tshapecol1 = mix(shapecol1,shapecol2,blend);\n\tvec3 finalcol = mix(vec3(0.1),shapecol1,smoothstep(0.0, 0.035, h.x)); \n\t//finalcol = mix(vec3(1.0),finalcol,smoothstep(0.0, 0.035, h.y)); \n\tfragColor = vec4(finalcol,1.0);\n\n}","name":"Image","description":"","type":"image"}]}