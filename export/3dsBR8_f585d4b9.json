{"ver":"0.1","info":{"id":"3dsBR8","date":"1587678342","viewed":189,"name":"Transition Bubble-Out","username":"ivomontigatti","description":"A transition between slides using the \"bubble out\" effect","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["transitionbubbleout"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define HALF_PI 1.5707963267948966\n\n// colors used\nvec4 colors[3] = vec4[3](\n    vec4(0.3372, 0.8901, 0.8078, 1.0),\n    vec4(0.8156, 0.9019, 0.6470, 1.0),\n    vec4(1.0));\n\n// delay until the bubble animation start (first bubble starts at second 1.0 of the effect)\nfloat delays[3] = float[3](1.0, 1.2, 1.5);\n\n// center of the animation in UV coordinates\nvec2 center = vec2(0.5, 0.5);\n\n// time that it takes each for a bubble to completely fill the screen\nfloat duration = 0.4;\n\n// method to use for bubble expansion\nfloat easing(float t) {\n  \t// cuadOut\n  \treturn -t * (t - 2.0);\n    // sine\n    // return sin(t * HALF_PI);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // time is recalculated here so that it spans from 0 to the max duration of the transition\n    // which is calculated using the last delay + the effect duration (in this case is 2.0 seconds)\n    float time = mod(iTime, delays[2] + duration);\n    // center in px coordinates\n    vec2 centerPx = iResolution.xy * center;\n    float dist = length(fragCoord - centerPx) / length(centerPx);\n    // we'll stack the calculations on top of the fragColor, starting with full white\n    fragColor = vec4(1.0);\n    for(int i = 0; i < 3; i+=1) {\n        float progress = easing(clamp((time - delays[i]) / duration, 0.0, 1.0));\n        float mixRatio = step(dist, progress);\n    \tfragColor = mix(fragColor, colors[i], mixRatio);\n    }\n}","name":"Image","description":"","type":"image"}]}