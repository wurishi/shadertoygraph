{"ver":"0.1","info":{"id":"MsVGDK","date":"1456539269","viewed":861,"name":"Anti Aliasing Test","username":"VoidChicken","description":"My first attempt at anti aliasing.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["2d","antialiasing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 v = 1.0/iChannelResolution[0].xy;\n    vec4 a = texture(iChannel0, uv);\n    if (uv.x<0.5) {\n        fragColor = a;\n        return;\n    }\n    \n    vec4 b = texture(iChannel0, uv+vec2(v.x, 0));\n    b+= texture(iChannel0, uv-vec2(v.x, 0));\n    b+= texture(iChannel0, uv+vec2(0, v.y));\n    b+= texture(iChannel0, uv-vec2(0, v.y));\n    \n     b+= texture(iChannel0, uv+vec2(v.x, v.y));\n     b+= texture(iChannel0, uv+vec2(v.x, -v.y));\n    b+= texture(iChannel0, uv+vec2(-v.x, v.y));\n    b+= texture(iChannel0, uv+vec2(-v.x, -v.y));\n    b/=8.0;\n    a += b;\n    a/=2.0;\n    if (uv.x>0.49 && uv.x < 0.51) {\n        fragColor = a*vec4(0, 1, 0, 1);\n        return;\n    }\n    fragColor = a;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat4 rot(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 v = vec4(uv-0.5, 0, 1);\n    \n    v*=rot(vec3(0, 0, 1), iTime/10.0);\n    uv=v.xy;\n    \n\tfragColor = texture(iChannel0, uv);\n}","name":"Buf A","description":"","type":"buffer"}]}