{"ver":"0.1","info":{"id":"lcfSWN","date":"1705270484","viewed":79,"name":"True rainbow","username":"ipfedor","description":"f(x) to return a smoothed rainbow color","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"lsfBWs","parentname":"Rainbow shader"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// adapted from https://github.com/wsmind/js-pride/blob/master/shaders/rainbow.glsl\n\n#define DENT 6.\n\n// level is [0,5], assumed to be a whole number\nvec3 rainbow(float level)\n{\n\t/*\n\t\tTarget colors\n\t\t=============\n\t\t\n\t\tL  x   color\n\t\tred    0  0/7 vec4(1.0, 0.0, 0.0, 1.0);\n\t\torange 1  1/7 vec4(1.0, 0.5, 0.0, 1.0);\n\t\tyellow 2  2/7 vec4(1.0, 1.0, 0.0, 1.0);\n\t\tgreen  3  3/7 vec4(0.0, 1.0, 0.0, 1.0);\n        azure  4  4/7 vec4(0.0, 0.5, 1.0, 1.0);\n\t\tblue   5  5/7 vec4(0.0, 0.0, 1.0, 1.0);\n \t\tpurple 6  6/7 vec4(0.5, 0.0, 1.0, 1.0);\n\t*/\n\t\n\t//float r = float(level <= 2.0) + float(level > 4.0) * 0.5;\n    float r = 1.0 - sign(max(level - 3./7., 0.) * max(6./7. - level, 0.)) - sign(max(level - 6./7., 0.)) * 0.5;\n    float g = 0.5 * sign(max(level - 2./7., 0.) * max(4./7. - level, 0.)) + 0.5 * sign(max(level - 1./7., 0.) * max(5./7. - level, 0.));\n\tfloat b = sign(max(level - 4./7., 0.));\n\treturn vec3(r, g, b);\n}\n\nvec3 smoothRainbow (float x)\n{\n    float level1 = floor(x*DENT)/DENT + 0.01;\n    float level2 = min(1.0, level1 + 1./DENT);\n    \n    vec3 a = rainbow(level1);\n    vec3 b = rainbow(level2);\n    \n   \n    return mix(a, b, fract(x * DENT));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color;\n    if (uv.y<0.5) {\n       color = smoothRainbow(uv.x);\n    } else {\n       color = rainbow(uv.x);\n    }\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}