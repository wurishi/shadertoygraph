{"ver":"0.1","info":{"id":"XdSfWW","date":"1500359832","viewed":539,"name":"Holomorphic checkerboard","username":"etale_cohomology","description":"Fork of AA Grid https://www.shadertoy.com/view/Md2XWt","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["math","tutorial","checkerboard","map","checker","complex","conformal","analysis","holomorphic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of AA Grid shadertoy.com/view/Md2XWt\n\n// The complex plane, as a black & white grid, under the action of the holomorphic map f : z -> z^2\n\n// Notice how all squares intersect at right angles, even on the deformed parts!\n// A map that preserves angles like that is called a conformal map\n// I think that all conformal functions are holomorphic,\n// and that the converse holds everywhere the Jacobian is invertible\n\n#define HOLOMORPHIC_MAP  // Undefine to see a vanilla grid!\n//#define LINES  // Define to see lines, not a checkerboard!\n\n#define SCALE 4.\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = SCALE *(2. * fragCoord - iResolution.xy) / iResolution.y;  // The Fabrice map!\n\n    #ifdef HOLOMORPHIC_MAP\n    uv = vec2(uv.x * uv.x - uv.y * uv.y, 2. * uv.x * uv.y);  // Holomorphic map f : z -> z^2\n    #endif\n\n    uv.x -= .4 * iTime;  // Move the til2pes along the u-direction, just for teh lulz\n\n    // I don't understand this part at all. Someone care to explain, please?\n    vec2 sine_uv = sin(uv);\n    vec2 jacobian = fwidth(sine_uv);\n\n    #ifdef LINES\n    sine_uv = abs(sine_uv) - jacobian;\n    #endif\n\n    //vec2 uv_aa = smoothstep(-jacobian, jacobian, sine_uv);  // Original version\n    vec2 uv_aa = smoothstep(-1., 1., sine_uv / jacobian);  // Fabrice's version\n    //vec2 uv_aa = sine_uv / jacobian;  // No antialiasing version\n\n    uv_aa = 2. * uv_aa - 1.;  // Remap to [-1;1]\n    float checkerboard = .5 * uv_aa.x * uv_aa.y + .5;  // Combine sine waves and remap to [0; 1]\n    fragColor.rgb = vec3(checkerboard);\n}\n","name":"Image","description":"","type":"image"}]}