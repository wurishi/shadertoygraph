{"ver":"0.1","info":{"id":"3syfRV","date":"1607463472","viewed":161,"name":"Avant-Propos","username":"Flopine","description":"Re-worked version of a shader written during Lynn's set for Overkill festival you can watch here: https://www.twitch.tv/videos/827739581?filter=archives&sort=time\nNow animated with a 20syl music","likes":8,"published":1,"flags":64,"usePreview":0,"tags":["2d","raymarching","sound","fft","isometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4lXSz8","filepath":"https://soundcloud.com/20syl/a-avant-propos-day-136?in=20syl/sets/36-beats-types","previewfilepath":"https://soundcloud.com/20syl/a-avant-propos-day-136?in=20syl/sets/36-beats-types","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n\n\n#define TAU 6.283183\n#define PI acos(-1.)\n#define dt(sp,off) fract(iTime*sp+off)\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define mo(p,d)p=abs(p)-d;if(p.y>p.x)p=p.yx\n\n\nvoid moda (inout vec2 p , float rep)\n{\n    float per = TAU/rep;\n    float a = mod(atan(p.y,p.x),per)-per*0.5;\n    p = vec2(cos(a),sin(a))*length(p);\n}\n\nfloat box (vec3 p, vec3 c)\n{\n    vec3 q = abs(p)-c;\n    return min(0.,max(q.x,max(q.y,q.z)))+length(max(q,0.));\n}\n\nfloat sc (vec3 p, float d)\n{\n    p = abs(p);\n    p = max(p,p.yzx);\n    return min(p.x,min(p.y,p.z))-d;\n}\n\nfloat g1=0.;\nfloat SDF (vec3 p)\n{\n    p.yz *= rot(-atan(1./sqrt(2.)));\n    p.xz *= rot(PI/4.);  \n\n    vec3 pp = p;\n    float per = mix(.5,5.,clamp(texture(iChannel0,vec2(0.00001,0.0002)).x*0.5,0.,1.)),\n        l = 2.;\n    vec3 id = floor((p-per*0.5)/per);\n    p = p-per*clamp(round(p/per),-l,l);\n\n    p.xz *= rot(dt(0.2,length(id*0.2))*TAU);\n    p.yz *= rot(dt(0.5,length(id*0.5))*TAU);\n    float d = max(-sc(p,0.9),box(p,vec3(1.)));\n    p = pp;\n    mo(p.yz,vec2(2.));\n    p.y -= 1.4;\n    p.xz *= rot(sin(p.y*0.4+dt(0.5,0.)*TAU));\n    moda(p.xz,5.);\n    p.x -= .5;\n    d = min(d,length(p.xz)-0.2);\n\n    g1 += 0.01/(0.01+d*d);\n    return d;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n    vec3 ro=vec3(uv*8.,-20.),rd =vec3(0.,0.,1.);\n\n    vec2 uu = fract(uv)-.5;\n    mo(uu,vec2(.05));  \n    vec3 col = texture(iChannel0,vec2((uu.x+uu.y)*.7,0.25)).xxx;\n\n    vec3 p = ro;\n    bool hit = false; float shad = 0.;\n    for (float i=0.; i<64.;i++)\n    {\n        float d = SDF(p);\n        if (d<0.01)\n        {\n            hit = true;shad = i/64.; break;\n        }\n        p += d*rd;\n    }\n\n    if (hit)\n    {\n        col = vec3(shad);\n    }\n\n    col -= g1*0.05;\n    fragColor = vec4(sqrt(clamp(col,0.,1.))*0.8,1.);\n}","name":"Image","description":"","type":"image"}]}