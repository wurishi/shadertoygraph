{"ver":"0.1","info":{"id":"Dl3yz2","date":"1699397573","viewed":76,"name":"Mandala Style Polyrhythm","username":"GraphXDoses","description":"Trying to replicate this [url]https://www.youtube.com/watch?v=Ns1QVFlmtII&t[/url]\nPlanning to fork this and extend it with gpu sound. Sometime.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["phase","mandala","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define D(v,s)  O = mix(O, v, s)\n#define ss(v)   smoothstep(dFdx(p.x), -dFdx(p.x), (v))\n#define VL(a,d) D(C*max(.4, a ), \\\n    ss(abs(dot(p, V2(1,0)))-rW*.5)*ss(-min(l, l_))*step(.01, dot(p, V2(0,d))) );\n\nV4 A = V4(.118,.125,.141,1);\nV4 B = V4(.576,.541,.675,1);\nV4 C = V4(.804,.667,.49, 1);\n\n#define get(i) texelFetch(iChannel0, ivec2(i,0), 0)\n\nfloat Line(V2 uv, V2 p1, V2 p2)\n{\n    V2 a1 = p2 - p1;\n    V2 a2 = uv - p1; uv -= p1;\n    float h = clamp(dot(a1, a2)/dot(a1,a1), 0., 1.);\n    return length(uv-a1*h);\n}\n\nvoid mainImage( out V4 O, V2 U )\n{\n    V2\n    R  = iResolution.xy,\n    p  = (U-R*.5)/R.y;\n\n    float\n    rW  = dFdy(p.y),\n    l   = length(p)-.5+rW*1.5,\n    l_  = length(p)-.058+rW*1.5,\n    _l  = abs(l)-rW*.75,\n    _l_ = abs(l_)-rW*.75,\n    Up, Dn = Up = 0.;\n\n    O = mix(B*.4, A, (1.-step(0., l))+clamp(l*6., 0., 1.));\n    D(B*.4, ss(pow(cos((SPC*PI)*l+1.5), 2.)/sqrt(SPC*PI))*ss(-min(-l, l_)));\n    D(B, ss(min(_l, _l_)));\n    \n    V4 Q;\n    \n    for(int i=0; i<(3*int(SPC)/2)-7; i++)\n    {\n        Q  = get(i+9);\n        l  = length(p-Q.xy)-(.5-rW*2.)/SPC;\n        _l = abs(l)-rW;\n        \n        D(B, ss(_l)+.1*(1.-step(0., l)));\n        D(C*.8, ss(Line(p, Q.xy, get(i+10).xy)-rW*.5));\n        D(pow(B*1.5, V4(2)), smoothstep(1., -1., l*30.)*Q.z);\n        \n        Up = max(Up, Q.z*step(.01, Q.y));\n        Dn = max(Dn, Q.z*step(.01, -Q.y));\n    }\n    \n    VL(Up,1)\n    VL(Dn,-1)\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out V4 O, V2 U )\n{\n    int   id = int((U.x + U.y*iResolution.x) - floor(iResolution.x/2.)),\n          I  = (3*int(SPC)/2)+2;\n    float L  = (float(id / 3)-.04)/SPC;\n    if(id > 8 && id < I)\n    {\n        if(iFrame == 0)\n        {\n            O     = V4(-L, 0, 0, 0);\n            O.xy *= rot(radians(120.*float(id % 3))) * rot(radians((24.+float((I-id) / 3))*.016*.3));\n        }\n        else\n        {\n            O = texelFetch(iChannel0, ivec2(U), 0);\n            if(iTime > texelFetch(iChannel0, ivec2(0), 0).w)\n            {\n                \n                O.xy *= rot(radians(-(24.+float((I-id) / 3))*.016*.3));\n                O.z  += (1.-step(1e-3, abs(O.x))) - .015;\n                O.z   = clamp(O.z, 0., 1.);\n                \n                O.xy = (O.xy/length(O.xy)) * L;\n            }\n        }\n    }\n    if(id == 0) O = V4(iTime);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define rot(v) mat2(cos(v), -sin(v), sin(v), cos(v))\n#define PI  3.14159\n#define SPC 43.\n\n#define V2      vec2\n#define V4      vec4","name":"Common","description":"","type":"common"}]}