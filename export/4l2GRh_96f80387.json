{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"cubemap","id":"4dX3zn","filepath":"/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":3,"type":"texture","id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define R(p,a) p=p*cos(a)+vec2(-p.y,p.x)*sin(a);\n\nfloat sph(vec3 p, float r){\n    return sqrt(dot(p,p))-r;\n}\n\nfloat f(vec3 p, vec2 q){\n    vec3 mp = vec3(abs(p.x), p.y-0.38, p.z+0.24);\n    R(mp.xz,-mp.x);\n    float m = sph(mp*vec3(0.48,1.0,1.0)-vec3(0.0,mp.x*mp.x*q.x,0.0),0.02+0.001*sin(iTime*2.3));\n\n    vec3 ep = vec3(abs(p.x)-0.04, p.y-0.42, p.z+0.2);\n    \n    float l = sph(ep+vec3(0.0,0.07,0.0),0.06+q.y*cos(ep.x*333.3-iTime*13.0));\n    \n    float e = max(sph(ep,0.03),-l);\n    \n    return min(m,e);\n}\n\nfloat h(vec3 p, vec2 m){\n    p = vec3(abs(p.x)-0.15, p.y-0.24, p.z+0.1);\n    R(p.xz,m.x);\n    p.x -=0.1;\n    R(p.xy, -0.8+m.y*abs(sin(iTime*m.y)));\n    p.x*=0.4;\n    return sph(p, 0.07);\n}\n\nfloat s(vec3 p,vec4 mood){\n    R(p.yz, 0.4);\n    p.z-=0.1;\n    float s = sph(p*vec3(1.0,0.5,1.0),0.3);\n    return max(max(min(s,h(p,mood.xy)),-s),-f(p,mood.zw));\n}\n\nfloat scene(vec3 p, vec3 n){    \n    float dz = 0.0;\n    vec4 m = vec4(2.1,0.0,-4.4,0.001);\n    if(n.x>n.y && n.x>n.z){\n        R(p.xy, iTime*n.y);\n        m = vec4(0.3,1.0,4.0,0.0);\n    }\n    if(n.y>n.x && n.y>n.z){\n        R(p.xz, 3.0*n.y-1.5);\n        dz = -n.x*0.3;\n    }\n    if(n.z>n.x && n.z>n.y){\n        R(p.xy,n.y+n.x*2.0+n.z*3.0);\n        m = vec4(2.1,3.0,-4.0,0.001);\n        dz = 0.2;\n    }\n    \n    return max(s(p + vec3(0.0,0.3,dz),m),-sph(p + vec3(0.0,0.8,dz),0.6+0.04*sin(p.z*66.6-iTime*7.7)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = (fragCoord.xy-0.5*iResolution.xy) / min(iResolution.x,iResolution.y);\n    vec3 o = vec3(0.0, 0.0, -min(iResolution.x,iResolution.y)/max(iResolution.x,iResolution.y));\n    vec3 d = vec3(pos,0.0) - o;\n    vec3 p = o;\n    float l = 0.0;\n    float e = 0.001;\n    vec3 bgd = d;\n    vec3 n = texture(iChannel3,vec2(floor(iTime*0.66)/64.0,floor(iTime*0.66/64.0)/64.0)).xyz;\n    R(bgd.xy,n.x*iTime);\n    R(bgd.xz,n.y*iTime);\n    R(bgd.yz,n.z*iTime);\n    vec2 sc = vec2(acos(bgd.z/sqrt(dot(bgd,bgd))),atan(bgd.y,bgd.x));\n\tvec3 c = texture(iChannel0,bgd).xxx;//come up with better bg\n    c = texture(iChannel2,sc).zyx*pow(texture(iChannel0,bgd).xxx,vec3(8.0));\n    c += pow(texture(iChannel2,sc.yx).xyz,vec3(16.0))+pow(texture(iChannel2,sc).zyz,vec3(8.0));\n\n    //let's abuse raymarching max steps for a cheap celshading-like effect\n    for(int i = 0; i<32; i++){\n        l = scene(p,n);\n        if(l<e){\n            vec3 lg = vec3(2.0,2.0,-3.3);\n            c += vec3(1.0) * scene(p+0.1*lg,n);\n            c *= 0.5;\n            break;\n        }\n        p+=l*d;\n    }\n    \n    if(iTime*0.66-floor(iTime*0.66)<0.15){\n        c = vec3(1.0)-c;\n    }\n    \n\tfragColor = vec4(pow(c,vec3(1.0/2.2)),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4l2GRh","date":"1426871451","viewed":251,"name":"Lost Soul","username":"a13X_B","description":"Poor fellow lost deep in Space after death.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","csg","animation","ghost","nv15"],"hasliked":0,"parentid":"","parentname":""}}