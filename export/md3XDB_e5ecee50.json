{"ver":"0.1","info":{"id":"md3XDB","date":"1680346113","viewed":71,"name":"Julia fractal animation","username":"aroussel","description":"A first test of Julia fractal by iteration","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c){\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv -= .5;\n\tuv.y *= iResolution.y/iResolution.x;\n\n\tuv *= 2.5-sin(iTime*.2);\n\n\tvec2 c = vec2(sin(iTime*.2)*.15,-.6);\n\tvec2 z = uv;\n\tint steps = 100;\n\tint i = 0;\n\n\twhile(i<steps && length(z)<10.){\n\t\tz = vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y);\n\t\tz += c;\n\t\ti++;\n\t}\n\n\tfloat bw = float(i)/float(steps);\n\tbw = tanh(1.-bw);\n\tvec3 col = vec3(bw*2.,bw*1.,bw*.5);\n\tcol = hsv2rgb(vec3(bw*5.,1.,50./length(z)));\n\tcol *= float(i<steps);\n\n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}