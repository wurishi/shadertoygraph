{"ver":"0.1","info":{"id":"sdKGzK","date":"1632190196","viewed":59,"name":"Animation and Layers - CL","username":"cLaBounty","description":"GPR-200 Assignment - Animation and Layers","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["assignment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float drawCircle(vec2 uv, vec2 center, float radius)\n{\n    return step(distance(center, uv), radius);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspectRatio = iResolution.y / iResolution.x;\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.y *= aspectRatio;\n    \n    float waveFrequency = 7.5;\n    float waveAmplitude = 0.05;\n    //uv.y += waveAmplitude * sin((iTime + uv.x) * waveFrequency);\n    \n    float circleRadius = 0.09;\n    float circleOpacity = 0.5;\n    vec2 animPosition = vec2(0.5, 0.5 * aspectRatio);\n    float animFrequency = 1.0;\n    float animAmplitude = 0.18;\n    \n    float fadeMin = 0.25;\n    float fadeFrequency = 1.0;\n    float brightness = abs(cos(iTime * fadeFrequency)) + fadeMin;\n    \n    vec4 bgTexture1 = texture(iChannel0, uv);\n    vec4 bgTexture2 = texture(iChannel1, uv);\n    vec4 circleTexture = texture(iChannel2, uv);\n    \n    vec4 bgLayer = mix(bgTexture1, bgTexture2, abs(sin(iTime)));\n    vec4 layer1 = circleTexture * brightness;\n    vec4 layer2 = circleTexture * brightness;\n    vec4 layer3 = circleTexture * brightness;\n    \n    vec2 center1 = vec2(sin(iTime * animFrequency) * animAmplitude + animPosition.x, animPosition.y);\n    layer1.a = drawCircle(uv, center1, circleRadius) * circleOpacity;\n    \n    vec2 center2 = vec2(animPosition.x, cos(iTime * animFrequency) * animAmplitude + animPosition.y);\n    layer2.a = drawCircle(uv, center2, circleRadius) * circleOpacity;\n    \n    vec2 center3 = vec2(center1.x, center2.y);\n    layer3.a = drawCircle(uv, center3, circleRadius) * circleOpacity;\n\n    // Output to screen\n    vec4 composite = mix(bgLayer, layer1, layer1.a);\n    composite = mix(composite, layer2, layer2.a);\n    composite = mix(composite, layer3, layer3.a);\n    fragColor = composite;\n}","name":"Image","description":"","type":"image"}]}