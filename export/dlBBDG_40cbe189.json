{"ver":"0.1","info":{"id":"dlBBDG","date":"1694433270","viewed":70,"name":"Visuals psychedelic","username":"deadzero","description":"psychdelic shapes","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.6, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.7);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.6, 0.7, 0.8);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\n// Simple hash function\nfloat hash(float n) {\n    return fract(sin(n) * 43758.5453);\n}\n\n// 2D noise\nfloat noise(vec2 x) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f * f * (3.0 - 2.0 * f);\n    float n = p.x + p.y * 57.0;\n    return mix(mix(hash(n), hash(n + 1.0), f.x),\n               mix(hash(n + 57.0), hash(n + 58.0), f.x), f.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n    \n    float t = iTime * 0.5;\n    float n = noise(uv * 4.0 + t);\n    \n    // Get a morphing and moving effect\n    uv.x += sin(uv.y * 10.0 + t) * 0.2;\n    uv.y += sin(uv.x * 10.0 + t) * 0.2;\n    \n    float pattern = 0.5 + 0.5 * sin(15.0 * length(uv + vec2(sin(t), cos(t))) + t * 5.0 + n * 20.0);\n    \n    vec3 col = palette(pattern + n);\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}