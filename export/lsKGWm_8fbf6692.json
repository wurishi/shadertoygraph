{"ver":"0.1","info":{"id":"lsKGWm","date":"1454887115","viewed":228,"name":"Mondrian's Composition II hdd","username":"Hanley","description":"Study of Piet Mondriaan's Composition II in Red, Blue and Yellow\nhttps://en.wikipedia.org/wiki/File:Piet_Mondriaan,_1930_-_Mondrian_Composition_II_in_Red,_Blue,_and_Yellow.jpg","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rectangles","hello","mondrian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rect (in vec2 pixel_n, in float x1, in float y1, in float x2, in float y2) {\n    // float blur = 0.05;\n    vec2 bl_borders = step(vec2(x1, y1), pixel_n);\n    vec2 tr_borders = vec2(1.0) - step(vec2(x2, y2), pixel_n);\n    float brightness = bl_borders.x * bl_borders.y * tr_borders.x * tr_borders.y;\n    return brightness;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  float u_time = iTime;\n  vec2 u_mouse = iMouse.xy;\n  vec2 u_resolution = iResolution.xy; //. // Note: Could use #define u_time iTime \\n instead of this in the future.\n\n\tvec2 st = gl_FragCoord.xy/u_resolution.xy; // pixel_n\n\n    // Quick Aspect Ratio Fix\n    float aspect = u_resolution.x / u_resolution.y;\n    st.x *= aspect;\n\n    vec3 color = vec3(0.0);\n\n    // Creating Colourful Rectangles\n    float redRect = rect(st, 0.25, 0.276, 1.0, 1.0);\n    float yellowRect = rect(st, 0.921, 0.0, 1.0, 0.112);\n    float blueRect = rect(st, 0.0, 0.0, 0.217, 0.250);\n    vec3 redColor = vec3(0.9, 0.2, 0.2);\n    vec3 blueColor = vec3(0.2, 0.4, 0.8);\n    vec3 yellowColor = vec3(0.97, 0.9, 0.4);\n    color = redRect*redColor + blueRect*blueColor + yellowRect*yellowColor;\n    float whiteRect1 = rect(st, 0.0, 0.704, 0.217, 1.0);\n    float whiteRect2 = rect(st, 0.0, 0.276, 0.217, 0.645);\n    float whiteRect3 = rect(st, 0.250, 0.0, 0.888, 0.250);\n    float whiteRect4 = rect(st, 0.921, 0.151, 1.0, 0.25);\n    vec3 greyColor = vec3(0.97,0.95,0.98);\n    color = color + vec3(whiteRect1 + whiteRect2 + whiteRect3 + whiteRect4) * greyColor;\n\n    // Render Color\n    // gl_FragColor = vec4(color, 1.0);\n    \n    fragColor = vec4(color, 1.0); // .\n}","name":"Image","description":"","type":"image"}]}