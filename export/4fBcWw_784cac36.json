{"ver":"0.1","info":{"id":"4fBcWw","date":"1722376660","viewed":18,"name":"A Distorted Texture","username":"Rainforest","description":"hw for texture and noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat random (vec2 uv) {\n    return fract(sin(dot(uv.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat noise (vec2 uv) {\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nmat2 rotate2d(float a){\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.y;\n    float scale = 2.0;\n    float offset = 0.5;\n    float angle = noise( uv + iTime * 0.1 ) * PI;\n    float radius = offset;\n    uv *= scale;\n    uv += radius * vec2(cos(angle),sin(angle));\n    vec3 col = texture(iChannel0, uv * rotate2d(-iTime / 8.0)).xyz;\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}