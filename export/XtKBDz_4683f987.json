{"ver":"0.1","info":{"id":"XtKBDz","date":"1542233636","viewed":289,"name":"Concentric Rainbow Circles","username":"jangxx","description":"Concentric rainbow colored circles. Port from another project. Based on a gif I can't find anymore.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["circles","color","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat gradientFn(in float x, in float low, in float high, in float target) {\n    float b = ((low * target) - high) / (low - high);\n    float m = (1.0 - b) / low;\n    return m*x + b;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    float aspect = iResolution.x / iResolution.y;\n    \n    vec2 pos = (uv * 2.0) - vec2(1, 1);\n    pos.x *= aspect;\n    \n    float radius = length(pos);\n\n    float x = radius*1.0 - iTime/4.0;\n    float ringColor = mod(x, 1.0) * 10.0;\n\n    vec3 finalColor;\n    if (ringColor < 1.0) {\n        finalColor = vec3(230,0,63) / 255.0;\n    } else if (ringColor < 2.0) {\n        finalColor = vec3(255,0,0) / 255.0;\n    } else if (ringColor < 3.0) {\n        finalColor = vec3(255,81,0) / 255.0;\n    } else if (ringColor < 4.0) {\n        finalColor = vec3(255,138,0) / 255.0;\n    } else if (ringColor < 5.0) {\n        finalColor = vec3(255,189,0) / 255.0;\n    } else if (ringColor < 6.0) {\n        finalColor = vec3(241,236,0) / 255.0;\n    } else if (ringColor < 7.0) {\n        finalColor = vec3(0,245,138) / 255.0;\n    } else if (ringColor < 8.0) {\n        finalColor = vec3(0,206,190) / 255.0;\n    } else if (ringColor < 9.0) {\n        finalColor = vec3(0,118,252) / 255.0;\n    } else if (ringColor < 10.0) {\n        finalColor = vec3(140,24,195) / 255.0;\n    }\n\n    float gradient = mod(ringColor, 1.0);\n    if (gradient > 0.6) {\n        finalColor *= gradientFn(gradient, 0.6, 1.0, 0.3);\n    }\n\n    fragColor = vec4(finalColor, 1);\n}","name":"Image","description":"","type":"image"}]}