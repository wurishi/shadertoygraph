{"ver":"0.1","info":{"id":"WdVczh","date":"1602234573","viewed":147,"name":"Mosaic_3","username":"bigt","description":"马赛克","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mosaic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float sqrt3 = 1.7320508076;\n\n// https://blog.csdn.net/cuixiping/article/details/11716805\n\n// 中心为0,0点的单位格子内去判断\n// p点为需要判断的点的坐标,rect为外在矩形\nfloat isInHexagon(vec2 p, vec2 rect)\n{\n    // 1.由于中心点是原点,所以判断p点在六边形内部的时候和象限无关\n    //   取p的绝对值\n    p = abs(p);\n    rect -= vec2(0.0, 1.0);\n    // 2.判断是否在外矩形\n    if(p.x <= 0.0 || p.x > rect.x || p.y <= 0.0 || p.y > rect.y) return 0.0;\n    // 3.若mp < mn,则说明在六边形内部\n    float mp = p.y;\n    // 已知(rect.x/2.0, rect.y)和(rect.x,0.0)得到:\n    float k = -2.0*rect.y/rect.x;\n    float b = 2.0*rect.y;\n    // y = kx+b,将p.x代入得到mn\n    float mn = p.x * k + b;\n    float ret = smoothstep(0.0,4.0,mn - mp);\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float hexagonRadius = 16.0;\n    \n    // 划分格子(正六边形 x:y = 2:根号3)\n    vec2 mosaicSize = vec2(hexagonRadius*2.0, hexagonRadius*sqrt3);\n    vec2 mosaicCoord = floor(fragCoord / mosaicSize) * mosaicSize;\n    // 取中心点的像素为结果\n    vec2 centerCoord = mosaicCoord;// + mosaicSize / 2.0;\n    vec2 uv = centerCoord/iResolution.xy;\n    // 以每个格子为单位，判断该像素是否在六边形内\n    vec2 pixelOffset = fragCoord - mosaicCoord;\n\tfragColor = texture(iChannel0, uv);\n\n\tfloat isIn = isInHexagon(pixelOffset-mosaicSize/2.0, mosaicSize/2.0); \n    //fragColor = vec4(vec3(isIn), 1.0);\n    fragColor *= isIn;\n}","name":"Image","description":"","type":"image"}]}