{"ver":"0.1","info":{"id":"ddScDy","date":"1719333433","viewed":54,"name":"Unexplorable Maze","username":"humamabdulloh","description":"simple truchet tiles implementation","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["truchet","tesselation","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p) {\n    p = fract(p*vec2(234.34, 435.345));\n    p+= dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    uv*=20.0;\n    \n    // pixel color\n    vec3 col = vec3(0);\n    \n    // grid initialization\n    vec2 gv = fract(uv)-0.5;\n    \n    // randomize\n    vec2 id = floor(uv);\n    float n = Hash21(id);\n    if (n < 0.5) gv.x*=-1.0;\n\n    // diagonal lines\n    float width = 0.25;\n    float d = abs(abs(gv.x+gv.y)-0.5);\n    float mask = smoothstep(0.01, -0.01, d-width);\n    col += mask;\n    \n    // grid drawing\n    //if (gv.x > .48 || gv.y > .48) col = vec3(1,0,0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}