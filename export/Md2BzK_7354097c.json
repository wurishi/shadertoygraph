{"ver":"0.1","info":{"id":"Md2BzK","date":"1501259860","viewed":139,"name":"Music History Visualizer","username":"clintolibre","description":"X is intensity of freq, y scrolls to provide history equal to resolution of y :P. Made this as a building block for other visualizers but feel free to use this for your own visualizers.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    //read and display texture\n    fragColor = texture(iChannel0, uv);\n}\n\n//Also see https://www.shadertoy.com/view/XtKGzm by ttoinou for a similar effect","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    //same as usual uv but we offset by one so we grab the previous frame/texture from Buf A one frame higher;\n    vec2 ouv = vec2(fragCoord.x, fragCoord.y-1.0) / iResolution.xy;\n    \n    //conversion factor for our texture to sound texture\n    int tx = int(ouv.x*512.0);\n    \n    //grab previous frame but offset by one pixel\n    fragColor = texture(iChannel0, ouv);\n    \n    //get frequency data\n    float freq = texelFetch( iChannel1, ivec2(tx,0), 0 ).x;\n    \n    //only overwrite pixel if its the bottom one!\n    fragColor = mix(fragColor, vec4(vec3(freq), 1.0), clamp(1.0-fragCoord.y,0.0,1.0));\n    \n    //simpler code for overwriting\n    /*if (fragCoord.y < 1.0) {\n        fragColor = vec4(vec3(freq),1.0);\n    }*/\n}\n\n//Also see https://www.shadertoy.com/view/XtKGzm by ttoinou for a similar effect","name":"Buf A","description":"","type":"buffer"}]}