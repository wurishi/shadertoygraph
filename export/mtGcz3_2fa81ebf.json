{"ver":"0.1","info":{"id":"mtGcz3","date":"1700483357","viewed":52,"name":"[458ch]Atoms","username":"Feishiko","description":"-","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float g(vec3 p) {\n    float d = 1e2;\n    for(int i = 0; i < 16*4; i++) {\n        d = min(d, length(p - vec3(-1.5 + float(i%4), -1.5 + float(((i%16)/4)), 4.+float(i/16)))-.35);\n    }\n    d += cos(iTime*p.z)/20.;\n    return d;\n}\nvoid mainImage( out vec4 O, in vec2 I)\n{\n    vec2 e = vec2(.01, 0);\n    vec3 p;\n    vec2 r = iResolution.xy;\n    for (float i,d,o = 0.;i < 1e2;i = d < e.x || o > 100.?1e2:i++)\n    {\n        p = vec3((I-.5*r)/r.y, 1.)*o;\n        d = g(p);\n        o += d;\n    }\n    \n    float l = dot(-p/length(p), normalize(g(p) - vec3(g(p - e.xyy), g(p - e.yxy), g(p - e.yyx))));\n    O.rgb = vec3(smoothstep(0.2, 1.2, l));\n}","name":"Image","description":"","type":"image"}]}