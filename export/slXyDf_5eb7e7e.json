{"ver":"0.1","info":{"id":"slXyDf","date":"1648798841","viewed":479,"name":"Quick Drawing Style Filter","username":"NakedBowman","description":"Simple Cartoon Style made with blur and blending techniques","likes":1,"published":3,"flags":34,"usePreview":0,"tags":["cartoon","line","filter","edgedetection","drawing","art","comic","lineart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float bw(vec3 color){\n    return (color.r+color.g+color.b)/ 3.;\n\n}\n\nvec3 post(vec3 color){\n    return floor(color*3.+0.5)/4.;\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 og = texture(iChannel0, uv).rgb;\n    \n    vec3 inv = vec3(1.) - texture(iChannel1, uv*1.0).rgb;\n\n    float ogBW = (vec3(bw(og))).r;\n    float inBW = (vec3(bw(inv))).r;\n    \n    vec3 doge =  vec3(min(1., inBW /  (1.0 - ogBW)));\n    vec3 linear = vec3(1. - min(1., (1. - doge.r) / ogBW));\n  \n    //add colour\n    vec3 final = mix(vec3(0.5,0.2,0.3), vec3(0.6,0.8,0.9), bw(linear));\n\n    // Output to screen\n    fragColor = vec4(vec3(final),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float kernelSize = 7.;\n    vec3 col = vec3(0.);\n    for(float i = 0.; i < kernelSize; i++){\n        float pointer = i - floor(kernelSize * 0.5);\n        col += texture(iChannel0, uv + vec2(i,0.0)/iResolution.xy ).rgb;\n    }\n    col/= kernelSize;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float kernelSize = 7.;\n    vec3 col = vec3(0.);\n    for(float i = 0.; i < kernelSize; i++){\n        float pointer = i - floor(kernelSize * 0.5);\n        col += texture(iChannel0, uv + vec2(0.0,i)/iResolution.xy ).rgb;\n    }\n    col/= kernelSize;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}