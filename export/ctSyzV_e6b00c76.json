{"ver":"0.1","info":{"id":"ctSyzV","date":"1691984668","viewed":99,"name":"variable dot matrix","username":"zerovolts","description":"variable radius dot matrix","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["grid","post","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float GRID_DIVISION = 32.;\n\nvec3 tex(vec2 uv) {\n    return pow(texture(iChannel0, uv).rgb, vec3(2.2));\n}\n\nfloat color2lum(vec3 color) {\n    return color.r * 0.2126 +\n           color.g * 0.7152 +\n           color.b * 0.0722;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - .5 * iResolution.xy) * 2. / iResolution.y;\n    vec2 quantized_st = floor(uv * GRID_DIVISION) / GRID_DIVISION * vec2(iResolution.y / iResolution.x, 1.) * .5 + .5;\n    vec2 grid_uv = fract(uv * GRID_DIVISION) - .5;\n    \n    float px = 1.5 * GRID_DIVISION / iResolution.y;\n    \n    float t = iTime;\n    float d = length(uv);\n    float gd = length(grid_uv);\n    \n    // TODO: Average the cell color.\n    vec3 tex_color = tex(quantized_st);\n    float radius = color2lum(tex_color) * .5 * .8 + .05;\n    vec3 color = vec3(smoothstep(radius + px, radius - px, gd));\n    \n    vec3 srgb = pow(color, vec3(1. / 2.2));\n    fragColor = vec4(srgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}