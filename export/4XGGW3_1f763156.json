{"ver":"0.1","info":{"id":"4XGGW3","date":"1718286402","viewed":66,"name":"triple charge strings","username":"graygoose","description":"Use Shadertoy extension to make more Paint calls, but watching the rings decay slowly can be pretty interesting too.","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["field"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"triple charge exchange\" by graygoose. https://shadertoy.com/view/4XG3Rt\n// 2024-06-13 13:46:31\n\n// Fork of \"SUesque Dynamics\" by graygoose. https://shadertoy.com/view/7l2BWh\n// 2024-05-27 03:24:35\n\nvoid mainImage(out vec4 O, in vec2 U)\n{O=texture(iChannel0, U.xy/iResolution.xy);}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//#define DRAW\n\n#define MU (.05+0.1*cos(iTime*.05))\n#define NU (1.+0.5*sin(iTime*.3))\n//#define MU .1\n//#define NU .5\n#define RHO 10.\n\n#define OP(a, b, c)    ((a * sin(b)) + (a * cos(c)))\n#define BR OP(b, r, g)\n#define RG OP(r, g, b)\n#define GB OP(g, b, r)\n#define CHG vec4(dot(RG-GB*MU,RG-BR*NU),dot(GB-BR*MU,GB-RG*NU),dot(BR-RG*MU,BR-GB*NU),0)\n\nvoid mainImage( out vec4 O, in vec2 U ) {\n    vec2 uv = U/iResolution.xy;\n    vec4 col = texelFetch(iChannel0, ivec2(U.xy), 0);\n    \n    float r = col.x, g = col.y, b = col.z;\n    col += CHG;\n    col += lap(col, U, iChannel0, R) * RHO;\n     \n    if (sign(iMouse.z) == 1. || iFrame == 0) {\n        #ifdef DRAW\n        col += SOURCE(uv, iMouse.xy/iResolution.xy, 0.01, .1*vec4(abs(cos(-sin(iTime))), abs(cos(iTime)), abs(sin(iTime)), 0.));\n        #else\n        col = vec4(.0000001);\n        vec4 I = vec4(.0001,col.xyz);\n        col += SOURCE(uv, vec2(.33, .33), SRC_SIZE,I.xyyy);\n        col += SOURCE(uv, vec2(.50, .75), SRC_SIZE,I.yxyy);\n        col += SOURCE(uv, vec2(.66, .33), SRC_SIZE,I.yyxy);\n        #endif\n    }   \n    \n    O = normalize(col);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define SRC_SIZE .0001\n\n#define SOURCE(p, o, r, col) col * smoothstep(r+.1, r-.5, length(o - p))\n\n\n\nvec4 lap(in vec4 col, in vec2 p, in sampler2D tex, in vec2 res) {\n    vec4 sum = -4.0 * col;\n    sum += texelFetch(tex, ivec2(mod(p + vec2(1., 0.),res)), 0);\n    sum += texelFetch(tex, ivec2(mod(p - vec2(1., 0.),res)), 0);\n    sum += texelFetch(tex, ivec2(mod(p + vec2(0.0, 1.),res)), 0);\n    sum += texelFetch(tex, ivec2(mod(p - vec2(0.0, 1.), res)), 0);\n    return sum;\n}\n\n\n#define R iResolution.xy","name":"Common","description":"","type":"common"}]}