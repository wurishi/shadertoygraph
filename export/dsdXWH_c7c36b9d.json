{"ver":"0.1","info":{"id":"dsdXWH","date":"1679748956","viewed":108,"name":"lj-2D-Show-Mask","username":"longjun","description":"分屏裁剪","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mask"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 sharpFunc(in vec2 uv)\n{\n    // 分屏再转为4象限\n    uv.x *= iResolution.x / iResolution.y;\n    float scale = 2.0;\n    uv *= scale;\n    \n    // 造型函数\n    vec2 uv2 = fract(uv) * 2.0 - 1.0;\n    float r = length(uv2);\n    float angle = atan(uv2.y, uv2.x);\n    \n    float f = abs(cos(angle * 3.0 + iTime * floor(uv.x + 1.0)));\n    \n    return vec3(1.0 - step(f, r));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = sharpFunc(uv) * texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}