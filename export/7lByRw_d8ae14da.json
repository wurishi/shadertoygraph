{"ver":"0.1","info":{"id":"7lByRw","date":"1650199978","viewed":133,"name":"Moonlight forest","username":"Amirk","description":"you can move up and down a little with the mouse.\n","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["landscape","stars","moon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n\nfloat TaperBox(vec2 p, float wb,float wt,float yb, float yt, float blur){\n  float m= S(-blur,blur,p.y-yb);\n   m*= S(blur,-blur,p.y-yt);\n\n\np.x=abs(p.x);\nfloat w=mix(wb,wt, (p.y-yb)/(yt-yb));\n   m*= S(blur,- blur,p.x-w);\n\n  return m;\n}\n\nvec4 Tree(vec2 uv,vec3 col, float blur){\nfloat m= TaperBox(uv, .03, .03, -0.02, .25, blur);\n m+= TaperBox(uv, .2, .1, .25, .5, blur);\n m+= TaperBox(uv, .15, .05, .5, .75, blur);\n m+= TaperBox(uv, .1, .0, .75, 1., blur);\n \n float shadow= TaperBox(uv-vec2(.2,0), 0.1,0.5,.15,.25,blur);\n  shadow+= TaperBox(uv+vec2(.2,0), 0.1,0.5,.45,.5,blur);\n  shadow+= TaperBox(uv-vec2(.2,0), 0.1,0.5,.72,.75,blur);\n\n\n \n col-=shadow*.6;\n return vec4(col,m);\n\n}\n\nfloat getHeight(float x){\n\nreturn sin(x*.456)+.5*sin(x)+.1*sin(2.*x);\n}\n\nvec4 Layer(vec2 uv, vec3 color, float blur){\n\nvec4 col = vec4(color,0);\n\nfloat id=floor(uv.x);\nfloat n= fract(sin(id*345.)*456.)*2.-1.;\nfloat x=n*0.3;\nfloat y=getHeight(uv.x);\n\n\ncol+=S(blur,-blur,uv.y+ y);\n\n\nuv.x=fract(uv.x)-.5;\n\n y=getHeight(id+.5+x)+n*.2+.2;\n\nvec4 tree=Tree((uv-vec2(x,-y))*vec2(1.,1.+n*.2),vec3(1,1,1),blur);\n tree=max(tree,Tree((uv-vec2(x*sin(n*345.5),-y+.2*sin(n*34.5)-.5))*vec2(1.,1.+n*.2),vec3(1,1,1),blur));\n tree=max(tree,Tree((uv-vec2(x*sin(n*125.5),-y+.2*sin(n*14.5)-1.))*vec2(1.,1.+n*.2),vec3(1,1,1),blur));\n tree=max(tree,Tree((uv-vec2(x*sin(n*25.5),-y+.2*sin(n*96.5)-1.))*vec2(1.,1.+n*.2),vec3(1,1,1),blur));\n\ncol=max(col, tree);\nfloat a= col.a;\ncol=mix(col, tree,tree.a);\ncol.a=a;\n\nreturn col;\n\n\n}\n\nfloat Hash21(vec2 p){\np=fract(p*vec2(234.345,567.678));\np+=dot(p,p+456.234);\nreturn fract(p.x*p.y);\n}\n\nvec4 auroraBorealis(vec2 p){\nfloat t= iTime;\n\n//wave\np.y+=p.x*sin((p.x-t*.05)*5.)*.1+.02*sin((t+p.x)*1.)-.3*p.x-.1;  //sin(t+p.x*5.)*.10*(p.x+.5)+sin(2.*t+p.x*5.)*.05;\n\n float a=smoothstep(0.1,0., -p.y)-smoothstep(0.,.4,p.y);\n a+=smoothstep(0.2,0., -p.y)-smoothstep(0.,.8,p.y);\n //flickering\n p.x+=.6*sin(t*.5)+.3*sin(-t*1.);\n a*=sin(p.x*5.)*.25+.5;\n \n // p.y+=.1*sin(t*.5)+.01*sin(-t*1.);\n a*=sin(p.y*2.)*.25+.4;\n\nreturn a*vec4(0.2,.9,.1, 1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\nvec2 M= (iMouse.xy/iResolution.xy)*2.-1.;\n\n\nfloat t=iTime*.3;\n    \n\nvec4 col;\n\nfloat stars=pow(Hash21(uv),100.);\nfloat twinkle=dot(length(sin(uv*vec2(3.9,12.4)+t*1.)),length(cos(uv*vec2(12.23,3.2)-t*3.)));\ntwinkle*=sin(twinkle*1.)*.5+.01;\n\n\nfloat moon=S(.01,-.01,length((uv-vec2(.5,.2)))-.2);\nstars*=1.-moon;//no stars in front of the moon\nmoon*=S(-.01,.05,length((uv-vec2(.63,.25)))-.2)+.11;\n\nvec4 aurora= auroraBorealis(uv);\n\ncol+=stars*twinkle+moon+ aurora;\n\nvec4 layer;\n\nfor(float i=0.; i<1.; i+=1./10.){\nfloat blur= mix(.1,.0,i);\nfloat scl= mix(30.,1.,i);\n\nlayer= Layer(uv*scl+vec2(t+i*400.,2.*i) -M*3.,vec3(.0,.5,1), blur);\n\nlayer.rgb*=(0.5-i/2.);\n\ncol=mix(col,layer,layer.a);\n\n}\n\nlayer= Layer(uv+vec2(t+420.,.5) -M,vec3(.2,.5,1), .07);\nlayer.rgb*=(1.-1.)*vec3(.6,.6,1);\n\ncol=mix(col,layer,layer.a);\n\ncol *=smoothstep(1.,.6,length(uv));\n\n\nfragColor = col;\n}","name":"Image","description":"","type":"image"}]}