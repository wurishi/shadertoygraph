{"ver":"0.1","info":{"id":"3ttcRr","date":"1616914102","viewed":106,"name":"201219_Raymarch","username":"Yumuru","description":"Practice","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Reference\n// SDF for raymarching by gaz : https://neort.io/product/bvcrf5s3p9f7gigeevf0\n\n#define resolution iResolution.xy\n#define time iTime\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define TAU atan(1.)*8.\n#define sabs(x) sqrt(x*x+1e-2)\n\n\nvec2 fold(vec2 p, vec2 v) {\n    float g = dot(p,v);\n    return (p-(g-abs(g))*v)*vec2(sign(g),1);\n}\n\nvec2 spmod(vec2 p, float n) {\n    float h=floor(log2(n));\n    float a = TAU*exp2(h)/n;\n    for (int i = 0; i < int(h)+2;i++) {\n        vec2 v = vec2(-cos(a),sin(a));\n        float g = dot(p, v);\n        p-=(g-sabs(g))*v;\n        a*=0.5;\n    }\n    return p;\n}\n\nfloat map(vec3 p) {\n    p.z+=time*8.;\n    p.xy*=rot(time*0.2+length(p.xy)*0.2+p.z*0.2);\n    p.xy=spmod(p.xy,3.);\n    p.xz=spmod(p.xz,4.);\n    p = mod(p, 4.)-2.;\n    p=-.7+abs(p);\n    \n    //if(p.x<p.y)p.xy=p.yx;\n    //if(p.x<p.z)p.xz=p.zx;\n    //if(p.y<p.z)p.yz=p.zy;\n    \n    vec2 v = normalize(vec2(2,-1));\n    p.xy=fold(p.xy,v);\n    p.xz=fold(p.xz,v);\n    p.yz=fold(p.yz,v);\n    p.xy*=rot(time*.5);\n    p.xz*=rot(time*.8);\n    \n    return (length(p.xy)-.1)*1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-.5*resolution)/resolution.y;\n    vec3 rd = normalize(vec3(uv,1));\n    vec3 p = vec3(0,0,-3);\n    float d = 1.,i;\n    for(;++i<99.&&d>.001;)p+=rd*(d=map(p));\n    vec3 col = vec3(.1,0,.4);\n    if(d<.001)col+=6./i*vec3(0.0,.7,1.);\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}