{"ver":"0.1","info":{"id":"l3sfWf","date":"1729024988","viewed":43,"name":"Picking a deathstar shape","username":"DerShade","description":"Yes. Again. Intel HD 2 Gen ready. A discrete bitwise world, but with the infinte resolution. Very cheap to ride.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","fast","world","bittwise","znoise"],"hasliked":0,"parentid":"43sfz4","parentname":"the Aerogel Explorer"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// super cheap volumetric display based on density continuum.\n// improved rendering density mmore than 10 times, so now it's oneframe everywhere.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{    \n    float a,r,g,b,z,x,mx,mz,my,yy,xx,zz,y,sy,l=22.;       // l >= 2 quality/depth\n    a =iTime/5.;\n    mz = cos(a+3.14)*33.;                                          // z movement\n    mx = sin(a+3.14)*3.;                                             // x movement\n    my = sin(iTime/9.3)*4.;                                                         // y movement\n    \n    for(float f=0.;f<l;f+=1.){               \n    zz=f+(1.+sin(fragCoord.x*1223.*                                // f can be layers distance. \n           (cos(fragCoord.y/142.)*                                    // akward noise of z  \n            sin(fragCoord.x*411.))*\n            mod(iTime,3.)));                               \n    \n                 \n    xx = (fragCoord.x/iResolution.x-0.5)*                                  // coords -0.5 to 0.5\n         (iResolution.x/iResolution.y)*zz;                                 // aspect r.   \n    yy = (fragCoord.y/iResolution.y-0.5)*zz;\n      \n    // y rot\n    z =  cos(a)*(zz)-sin(a)*(xx);\n    x =  sin(a)*(zz)+cos(a)*(xx); \n    y =  yy;\n   \n       \n    x+=mx;y+=my;z+=mz;\n    \n    // universe gen.\n    sy = (float((int(x*65536.)>>3&0x110f*(int(iTime*2.)&255))|\n         (int(y*65536.)>>3&0xf1ff)^\n         (int(z*65535.)>>4&0x6a80))/(x*x+y*y+z*z)/195.);  \n    // color distrib.\n    g += float(sy>2.&&sy<6.&&f>0.);  \n    r += float(sy>3.&&sy<9.&&f>0.);\n    b += float(sy>6.&&sy<13.&&f>0.);\n    }\n    // Out\n    fragColor = vec4(r,g,b,1.0)/l;   \n}","name":"Image","description":"","type":"image"}]}