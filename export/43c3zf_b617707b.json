{"ver":"0.1","info":{"id":"43c3zf","date":"1716808449","viewed":53,"name":"Distort Filter PerlinNoise","username":"JenKaiLiu","description":"Distort Filter","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["filter"],"hasliked":0,"parentid":"X3c3zf","parentname":"Distort Filter - Random"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 GetGradient(vec2 intPos, float t) {\n    \n    // Uncomment for calculated rand\n    //float rand = fract(sin(dot(intPos, vec2(12.9898, 78.233))) * 43758.5453);;\n    \n    // Texture-based rand (a bit faster on my GPU)\n    float rand = texture(iChannel0, intPos / 64.0).r;\n    \n    // Rotate gradient: random starting rotation, random rotation rate\n    float angle = 6.283185 * rand + 4.0 * t * rand;\n    return vec2(cos(angle), sin(angle));\n}\n\n\nfloat Pseudo3dNoise(vec3 pos) {\n    vec2 i = floor(pos.xy);\n    vec2 f = pos.xy - i;\n    vec2 blend = f * f * (3.0 - 2.0 * f);\n    float noiseVal = \n        mix(\n            mix(\n                dot(GetGradient(i + vec2(0, 0), pos.z), f - vec2(0, 0)),\n                dot(GetGradient(i + vec2(1, 0), pos.z), f - vec2(1, 0)),\n                blend.x),\n            mix(\n                dot(GetGradient(i + vec2(0, 1), pos.z), f - vec2(0, 1)),\n                dot(GetGradient(i + vec2(1, 1), pos.z), f - vec2(1, 1)),\n                blend.x),\n        blend.y\n    );\n    return noiseVal / 0.7; // normalize to about [-1..1]\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) { \n\tvec2 noise_uv = fragCoord.xy/iResolution.y;\n    float noiseVal = 0.5 + 0.5 * Pseudo3dNoise(vec3(noise_uv * 10.0, iTime));\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float noiseWeight = 0.05;\n    uv.x += noiseVal * noiseWeight;\n    uv.y += noiseVal * noiseWeight;\n    vec3 col = texture(iChannel0,uv).rgb;\n    \n    fragColor.rgb = vec3(col);\n\n}","name":"Image","description":"","type":"image"}]}