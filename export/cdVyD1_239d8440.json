{"ver":"0.1","info":{"id":"cdVyD1","date":"1696066895","viewed":57,"name":"Fork sqisq•$@$@ haleyhalcy 018","username":"HaleyHalcyon","description":"asasas","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sasasasa"],"hasliked":0,"parentid":"DsVcRR","parentname":"sqisq•$@$@ haleyhalcy 331"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define HEX(x) vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255) / 255.\n\nvec3 colormap(float x){\n    const int colorCount = 8;\n    x *= float(colorCount);\n    \n    vec3[] c = vec3[](\n        HEX(0xff0000),\n        HEX(0xff7f00),\n        HEX(0xffFF00),\n        HEX(0x3fef30),\n        HEX(0x00ff00),\n        HEX(0x00ffff),\n        HEX(0x0000ff),\n        HEX(0x8000ff)\n    );\n    int lo = int(floor(x));\n    \n    return mix(\n        c[lo % colorCount],\n        c[(lo + 1) % colorCount],\n        fract(x)\n    );\n}\n/*\nvec3 colormap(float x) {\n    x = fract(floor(x) / 6.) * 3.;\n    return mix(\n       mix(vec3(1, 1, 0), vec3(0, 1, 1), x),\n       mix(vec3(1, 0, 1), vec3(1, 1, 0), x-2.),\n       x-1.\n    );\n}\n*/\nconst float TURN = 2. * acos(-1.);\n\nfloat squareInSquare(float turn) {\n    return sqrt(2.) * cos((mod(turn, 1./4.) - 1./8.) * TURN);\n}\n\nfloat rotation(int layer, float t) {\n    if (layer == 0) return 0.125;\n    \n    return 0.125 + 0.10 * sin(TURN * (\n        float(layer) / -22.7\n        + t\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime / 8.);\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float theta = atan(uv.y, uv.x);\n\n    // Time varying pixel color\n    vec4 col = vec4(0);\n    \n    const int SQUARES = 20; \n    float scale = 1.0;\n    float rot = 0.0;\n    \n    for (int i = 0; i < SQUARES; i++) {\n        float lastRot = rot;\n        float jRot = rotation(i, t);\n        scale *= squareInSquare(jRot);\n        rot += jRot;\n        \n        vec2 angleVec = vec2(\n            cos(rot * TURN),\n            sin(rot * TURN)\n        );\n        float df = 16. * max(\n            abs(dot(uv, angleVec)),\n            abs(dot(uv, vec2(\n                angleVec.y, -angleVec.x\n            )))\n        );\n        float v = step(df, scale);\n        v *= 1. - col.a;\n        col = mix(\n            col,\n            mix(\n                vec4(1),\n                vec4(colormap(\n                    //+ 0.25 * float((iFrame >> 0) & 3)\n                    + 4. * t\n                    + 0.5 * mod(round(\n                        4. * (\n                        theta / TURN\n                        - lastRot\n                        )\n                    ), 4.)\n                    + float(i) / 8.\n                ), 1),\n                float(0 < i)\n            ),\n            v\n        );\n    }\n\n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}