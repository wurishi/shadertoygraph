{"ver":"0.1","info":{"id":"MltcDs","date":"1553132631","viewed":267,"name":"Frosting window","username":"n0th1ng","description":"Fluid frosting window. Use mouse for cleaning.","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["fluid","frost"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 tex1 = texture(iChannel0,uv);\n    vec4 tex2 = texture(iChannel1,uv);\n    vec4 tex3 = texture(iChannel2,uv);\n    fragColor = mix(tex2,tex3,tex1.a);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n    fragColor.rgb+= iTimeDelta*0.5;    \n\tif( iMouse.z>0.0 )\n\t{\n        float dist = distance(iMouse.xy,fragCoord);\n        float rad = iResolution.y*0.15;\n\t\tfragColor.rgb -= iTimeDelta* max(rad-dist,0.0)*3.0;\n    }\n    float xPixel = 1.0/iResolution.x;//The size of a single pixel\n    float yPixel = 1.0/iResolution.y;\n    vec4 rightColor = texture(iChannel0,vec2(uv.x+xPixel,uv.y));\n    vec4 leftColor = texture(iChannel0,vec2(uv.x-xPixel,uv.y));\n    vec4 upColor = texture(iChannel0,vec2(uv.x,uv.y+yPixel));\n    vec4 downColor = texture(iChannel0,vec2(uv.x,uv.y-yPixel));\n    float factor = 8.0 * iTimeDelta * (leftColor.b + rightColor.b + downColor.b + upColor.b - 4.0 * fragColor.b);\n    fragColor.rgb += factor;\n    fragColor.rgb = clamp(fragColor.rgb,vec3(0.0,0.0,0.0),vec3(1.0,1.0,1.0));\n    fragColor.a = fragColor.b;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//original: https://www.shadertoy.com/view/MsySzy\n#define FROSTYNESS 3.0\n#define COLORIZE   1.0\n#define COLOR_RGB  0.7,1.0,1.0\n\nfloat rand(vec2 uv) {\n \n    float a = dot(uv, vec2(92., 80.));\n    float b = dot(uv, vec2(41., 62.));\n    \n    float x = sin(a) + cos(b) * 51.;\n    return fract(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 d = texture(iChannel1, uv);\n\tvec2 rnd = vec2(rand(uv+d.r*.05), rand(uv+d.b*.05));\n    const vec2 lensRadius \t= vec2(0.65*1.5, 0.05);\n    float dist = 0.5;\n    float vigfin = pow(1.-smoothstep(lensRadius.x, lensRadius.y, dist),2.);\n   \n    rnd *= .025*vigfin+d.rg*FROSTYNESS*vigfin;\n    uv += rnd;\n    fragColor = mix(texture(iChannel0, uv),vec4(COLOR_RGB,1.0),COLORIZE*vec4(rnd.r));\n}","name":"Buffer C","description":"","type":"buffer"}]}