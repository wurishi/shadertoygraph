{"ver":"0.1","info":{"id":"3l2cDd","date":"1595744907","viewed":138,"name":"Jungle2","username":"gaz","description":"fractal","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat hash(float x){\n    return fract(sin(x*234.123+156.2));\n}\n\nfloat lpNorm(vec3 p, float n)\n{\n\tp = pow(abs(p), vec3(n));\n\treturn pow(p.x+p.y+p.z, 1.0/n);\n}\n\nfloat map(vec3 p){\n    vec2 id=floor(p.xz);\n    p.xz=mod(p.xz,1.)-.5;\n    p.y=abs(p.y)-.5;\n    p.y=abs(p.y)-.5;\n   \tp.xy*=rot(hash(dot(id,vec2(12.3,46.7))));\n    p.yz*=rot(hash(dot(id,vec2(32.9,76.2))));\n   \tfloat s = 1.;\n\tfor(int i = 0; i < 6; i++) {\n\t\tfloat r2=1.2/pow(lpNorm(p.xyz, 5.0),1.5);\n\t\tp-=.1;\n    \tp*=r2;\n    \ts*=r2;\n\t\tp=p-2.*round(p/2.);\n\t}\n\treturn .6*dot(abs(p),normalize(vec3(1,2,3)))/s-.002;\n}\n\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<200;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<0.001) return t;\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nfloat calcShadow( vec3 light, vec3 ld, float len ) {\n\tfloat depth = march( light, ld, 0.0, len );\t\n\treturn step( len - depth, 0.01 );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord* 2.0 - iResolution.xy) / iResolution.y;\n    vec3 p,\n  \t\tro=vec3(2.-iTime*.2,1.8,-iTime*.3),\n  \t\tw=normalize(vec3(.0,-1.2,-1)),\n  \t\tu=normalize(cross(w,vec3(0,1,0))),\n  \t\trd=mat3(u,cross(u,w),w)*normalize(vec3(uv,1));\n    vec3 col;\n    vec3 bg=mix(vec3(.15,.05,.05),vec3(.1,.1,.4),uv.y*.5+.5);\n\tfloat maxd=20.0, t=march(ro,rd,0.0,maxd);\n    if(t<maxd)\n    {\n        vec3 p=ro+rd*t;\n        col=vec3(0.2,0.9,0.2)+cos(p*0.5)*0.5+0.5;\n        vec3 n = calcNormal(p);      \n\t\tvec3 lightPos=vec3(3);\n    \tvec3 li = lightPos - p;\n\t\tfloat len = length( li );\n\t\tli /= len;\n\t\tfloat dif = clamp(dot(n, li), 0.0, 1.0);\n        float sha = calcShadow( lightPos, -li, len );\n        col *= max(sha*dif, 0.2);\n        float rimd = pow(clamp(1.0 - dot(reflect(-li, n), -rd), 0.0, 1.0), 2.5);\n\t\tfloat frn = rimd+2.2*(1.0-rimd);\n    \tcol *= frn*0.8;\n        col *= max(0.5+0.5*n.y, 0.0);\n        col *= exp2(-2.*pow(max(0.0, 1.0-map(p+n*0.3)/0.3),2.0));\n        col += vec3(0.7,0.4,0.5)*pow(clamp(dot(reflect(rd, n), li), 0.0, 1.0), 20.0);\n    }\n    col=mix(bg,col,exp(-t*.2));\n    fragColor.xyz = mix(bg,col,exp(-t*.2));\n}","name":"Image","description":"","type":"image"}]}