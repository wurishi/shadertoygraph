{"ver":"0.1","info":{"id":"wsf3WB","date":"1547354410","viewed":143,"name":"day18 goko","username":"kiyoshidainagon","description":"mix, atan, sin\n\nmixはふたつのベクトルを線形補完してくれる","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shadeaday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 lightColor = vec3(0.2, 0.95, 0.7);  // 背景の後光の色\nconst vec3 backColor = vec3(0.2, 0.75, 0.5);  // 背景の下地の色\n\nvoid sunrise(vec2 p, inout vec3 i) {\n    float f = atan(p.y, p.x) + iTime;\n    float fs = sin(f * 5.0);\n    i = mix(lightColor, backColor, fs);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n\n    vec3 destColor = vec3(1.0);\n    \n    sunrise(p, destColor);\n    \n\n    // Output to screen\n    fragColor = vec4(destColor,1.0);\n}","name":"Image","description":"","type":"image"}]}