{"ver":"0.1","info":{"id":"XXXBz8","date":"1728000270","viewed":12,"name":"NM-GPR200 First","username":"NMastrangelo","description":"work in progress just having fun testing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["whatdoesthisdo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float FREQ = 1.0;        // speed of the sine, cosine, and tangent pulses.\nconst float SHAKE_SPEED = 5.0; // how to control the side to side scroll\nconst float SHATTER = 4.0;     // how to split the screen into multiple frames\nconst float SCROLL = 0.2;      // speed of how fast total scrolling goes\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // some floats that could make this eaiser to use\n    float sine = sin(iTime * FREQ); // some sine functions to use \n    float posSin = sine + 1.0; \n    float absSin = abs(sine); \n    \n    float cosine = cos(iTime * FREQ); // some cosine functions to use \n    float posCos = cosine + 1.0; \n    float absCos = abs(cosine);  \n\n    float tangent = 0.35 * tan(iTime * FREQ); // some tangent functions to use\n    float absTan = abs(tangent);\n    \n    float shake = sin(iTime * SHAKE_SPEED); // speed functions that change the pace of things\n    float speed = 20.2;\n    \n    float radius = 0.5; // size of the circle\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / (iResolution.xy/SHATTER); // divide to give the repeat squares effect // activate fract(uv)\n    \n    \n    // Scrolling code ------------------------------------------------------\n    uv.x += SCROLL * shake; // shakes side to side\n    // uv.x += iTime * SCROLL; // scrolls left to right (negative for right to left)\n    // uv.y += SCROLL * shake; // shakes up and down \n    uv.y += iTime * SCROLL; // scrolls up to down (negative for down to up)\n    \n    uv = fract(uv); // allows the screen to repeat \n    \n    // The drawing function ------------------------------------------------------\n    vec3 aTan = vec3(uv.x,absTan,uv.y); // usable tangent wave vector (pulse green)\n    vec3 aSin = vec3(uv.x,uv.y,posSin); // usable sine wave vector (pulse blue)\n    \n    vec3 colors = vec3(aTan); // for this one I will use a tangent pulse for the screen\n    \n    // This code focuses on the circle in the middle ------------------------------------------------------\n    uv = uv * 2.0 - 1.0; // centering the circle\n    float dist = length(uv); // position of the circle\n    float circle = smoothstep(radius, radius + 0.05, dist); //making the circle\n    vec3 someCircle = vec3(1.0 - circle + 0.5); // circle vector\n    \n    // Last part, mixing the circle and pulsing ------------------------------------------------------\n    colors = mix(colors,someCircle,0.5); // mixing the circle and the original \n    \n    fragColor = vec4(colors, 1.0); // final product being drawn \n}\n   // sin, cos, tan fucntions were inspired by morphogen  \n   // circle fucntion made with some help from jonobr1","name":"Image","description":"","type":"image"}]}