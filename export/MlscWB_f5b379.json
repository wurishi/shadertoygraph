{"ver":"0.1","info":{"id":"MlscWB","date":"1506311968","viewed":77,"name":"Week 5 Layered House","username":"Andy608","description":"My layered house for my modern graphics homework.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Change these values to set different opacity levels for each layer.\n// 0.0 = invisible, 1.0 = fully visible\nfloat SkyLayerOpacity = 1.0;\nfloat GrassLayerOpacity = 1.0;\nfloat ChimneyLayerOpacity = 1.0;\nfloat HouseLayerOpacity = 1.0;\nfloat WindowLayerOpacity = 1.0;\n\n//The different layers used to create the house.\nvec4 SkyLayer;\nvec4 GrassLayer;\nvec4 HouseLayer;\nvec4 WindowLayer;\nvec4 ChimneyLayer;\n\n//The colors used for the house.\nvec4 SkyColor = vec4(0.728431, 1.0, 1.0, 1.0);\nvec3 GrassColor = vec3(0.0, 1.0, 0.0);\nvec3 HouseColor = vec3(1.0, 0.870588, 0.678431);\nvec3 WindowColor = vec3(1.0, 1.0, 0.4);\nvec3 ChimneyColor = vec3(0.9, 0.3, 0.0);\n\n//The world position and radius.\nvec2 GrassPosition = vec2(0.5, -1.9);\nfloat GrassRadius = 2.0;\n\n//The house position and dimensions.\nvec2 HousePosition = vec2(0.5, 0.2);\nfloat HouseWidth = 0.2;\nfloat HouseHeight = 0.15;\n\n//The window size.\nfloat WindowSize = 0.04;\n\n//The chimney dimensions.\nfloat ChimneyWidth = 0.03;\nfloat ChimneyHeight = 0.2;\n\n/*\n* Pre: Takes in the color of the rectangle, the position, dimensions, and the uv of the screen.\n* Post: Returns the color the pixel should be whether in the rectangle or not.\n* Purpose: To draw a rectangle on the screen using step functions instead of if statements.\n*/\nvec4 createRectangle( vec3 color, vec2 position, float width, float height, vec2 uv)\n{\n    return vec4(color, 1.0 - \n                 step(width, length(position.x - uv.x) \n\t\t\t   + step(height, length(position.y - uv.y))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Get the uv coordinates and scale to ratio.\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n    \n    //Create all of the shapes and add them to their layers.\n    SkyLayer = SkyColor;\n    \n    GrassLayer = vec4(GrassColor, 1.0 - smoothstep(GrassRadius, GrassRadius + 0.002, length(GrassPosition - uv)));\n    \n    ChimneyLayer = createRectangle(ChimneyColor, HousePosition + vec2(0.2, 0.05), ChimneyWidth, ChimneyHeight, uv);\n    \n   \tHouseLayer = createRectangle(HouseColor, HousePosition, HouseWidth, HouseHeight, uv);\n    \n    vec4 window = createRectangle(WindowColor, HousePosition + vec2(-0.11, 0.06), WindowSize, WindowSize, uv);\n    WindowLayer = mix(WindowLayer, window, window.a);\n    window = createRectangle(WindowColor, HousePosition + vec2(0.11, 0.06), WindowSize, WindowSize, uv);\n    WindowLayer = mix(WindowLayer, window, window.a);\n    window = createRectangle(WindowColor, HousePosition + vec2(-0.11, -0.06), WindowSize, WindowSize, uv);\n    WindowLayer = mix(WindowLayer, window, window.a);\n    window = createRectangle(WindowColor, HousePosition + vec2(0.11, -0.06), WindowSize, WindowSize, uv);\n    WindowLayer = mix(WindowLayer, window, window.a);\n    window = createRectangle(WindowColor, HousePosition + vec2(0.0, -0.086), WindowSize, WindowSize * 1.6, uv);\n    WindowLayer = mix(WindowLayer, window, window.a);\n    \n    //Change their visibility depending on the layer opacity.\n    SkyLayer *= SkyLayerOpacity;\n    GrassLayer *= GrassLayerOpacity;\n    ChimneyLayer *= ChimneyLayerOpacity;\n    HouseLayer*= HouseLayerOpacity;\n    WindowLayer *= WindowLayerOpacity;\n    \n    //Mix all of the layers together and output!\n    vec4 Composite = SkyLayer;\n    Composite = mix(Composite, GrassLayer, GrassLayer.a);\n    Composite = mix(Composite, ChimneyLayer, ChimneyLayer.a);\n    Composite = mix(Composite, HouseLayer, HouseLayer.a);\n    Composite = mix(Composite, WindowLayer, WindowLayer.a);\n    \n\tfragColor = Composite;\n}","name":"Image","description":"","type":"image"}]}