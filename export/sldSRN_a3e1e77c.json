{"ver":"0.1","info":{"id":"sldSRN","date":"1638812014","viewed":176,"name":"Multi-resolution grid","username":"singintime","description":"Mouse x: translate, mouse y: resize","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["gridmultiresolution"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N_SUBCELLS = 5.0;\nfloat SUBCELL_SIZE = 16.0;\nfloat CELL_SIZE_INV = 1.0 / 80.0;\nfloat N_SUBCELLS_INV = 1.0 / 5.0;\nvec4 BG = vec4(0.8, 0.8, 0.8, 1.0);\nvec4 FG = vec4(0.4, 0.4, 0.4, 1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float offset = iMouse.x;\n    float scale = 4.0 * (iMouse.y + 1.0) / iResolution.y;\n    float maxScale = 4.0;\n    float multiplier = scale / maxScale;\n    float logMultiplier = log(multiplier) / log(N_SUBCELLS);\n    float adjustMultiplier = pow(N_SUBCELLS, ceil(-logMultiplier));\n\t\n    multiplier *= adjustMultiplier;\n    \n\tfloat subCellSize = SUBCELL_SIZE * multiplier;\n\tfloat cellSize = N_SUBCELLS * subCellSize;\n\tfloat subCellAlpha = clamp(subCellSize * CELL_SIZE_INV - N_SUBCELLS_INV, 0.0, 1.0);\n\n    // Output to screen\n    if (mod(fragCoord.x - offset, cellSize) < 1.0 || mod(fragCoord.y, cellSize) < 1.0) {\n      fragColor = FG;\n    } else if (mod(fragCoord.x - offset, subCellSize) < 1.0 || mod(fragCoord.y, subCellSize) < 1.0) {\n      fragColor = vec4(mix(BG.rgb, FG.rgb, subCellAlpha), 1.0);\n    } else {\n      fragColor = BG;\n    }\n}","name":"Image","description":"","type":"image"}]}