{"ver":"0.1","info":{"id":"ltlcWN","date":"1504920535","viewed":289,"name":"Color Grading","username":"heisters","description":"Shader that implements many common color adjustments.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","color","grading","adjustment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float bezier( float t, vec2 P0, vec2 P1, vec2 P2, vec2 P3 )\n{\n    float t2 = t * t;\n    float tinv = 1.0 - t;\n    float tinv2 = tinv * tinv;\n    return (P0 * tinv2 * tinv + P1 * 3.0 * t * tinv2 + P2 * 3.0 * t2 * tinv + P3 * t2 * t).y;\n}\nfloat bezier( float t, vec2 P1, vec2 P2 )\n{\n    return bezier( t, vec2( 0. ), P1, P2, vec2( 1. ) );\n}\n\n\nfloat plot(vec2 st, float pct)\n{\n  return  smoothstep( pct-0.02, pct, st.y) - \n          smoothstep( pct, pct+0.02, st.y);\n}\n\n\nvec3 rgb2hsv( in vec3 c )\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n    vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb( in vec3 c )\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 liftGammaGain( in vec3 c_in, in float lift, in float gamma, in float gain )\n{\n    return pow( ( c_in + lift * ( 1. - c_in ) ) * gain, vec3( 1. / gamma ) );\n}\n\nvec3 exposure( in vec3 c_in, in float x )\n{\n    return c_in * pow( 2., x );\n}\n\nvec3 brightness( in vec3 c_in, in float x )\n{\n    return c_in + x;\n}\n\nvec3 contrast( in vec3 c_in, in float x )\n{\n    return ( c_in - .5 ) * x + .5;\n}\n\nvec3 hsv( in vec3 c_in, in vec3 x )\n{\n    return hsv2rgb( rgb2hsv( c_in ) + x );\n}\n\nvec3 curve( in vec3 c_in, in vec2 p1, in vec2 p2 )\n{\n    vec3 o;\n    \n    o.r = bezier( c_in.r, p1, p2 );\n    o.g = bezier( c_in.g, p1, p2 );\n    o.b = bezier( c_in.b, p1, p2 );\n    \n    return o;\n}\n\n// like \"clarity\", not the same\nvec3 midToneContrast( in vec3 c_in, in float x )\n{\n    return mix( c_in, curve( c_in, vec2( .05, 1. ), vec2( .95, 0. ) ), x );\n}\n\nvec3 kelvin2rgb( in float K )\n{\n    float t = K / 100.0;\n    vec3 o1, o2;\n\n    float tg1 = t - 2.;\n    float tb1 = t - 10.;\n    float tr2 = t - 55.0;\n    float tg2 = t - 50.0;\n\n    o1.r = 1.;\n    o1.g = ( -155.25485562709179 - 0.44596950469579133 * tg1 + 104.49216199393888 * log( tg1 ) ) / 255.;\n    o1.b = ( -254.76935184120902 + 0.8274096064007395 * tb1 + 115.67994401066147 * log( tb1 ) ) / 255.;\n    o1.b = mix( 0., o1.b, step( 2001., K ) );\n\n    o2.r = ( 351.97690566805693 + 0.114206453784165 * tr2 - 40.25366309332127 * log( tr2 ) ) / 255.;\n    o2.g = ( 325.4494125711974 + 0.07943456536662342 * tg2 - 28.0852963507957 * log( tg2 ) ) / 255.;\n    o2.b = 1.;\n\n    o1 = clamp( o1, 0., 1. );\n    o2 = clamp( o2, 0., 1. );\n\n    return mix( o1, o2, step( 66., t ) );\n}\n\n\nvec3 temperature( in vec3 c_in, in float K )\n{\n    vec3 chsv_in = rgb2hsv( c_in );\n    vec3 c_temp = kelvin2rgb( K );\n    vec3 c_mult = c_temp * c_in;\n    vec3 chsv_mult = rgb2hsv( c_mult );\n\n    return hsv2rgb( vec3( chsv_mult.x, chsv_mult.y, chsv_in.z ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 c = texture( iChannel0, uv );\n\tfragColor = vec4( temperature( c.rgb, 1600. ), c.a );\n}","name":"Image","description":"","type":"image"}]}