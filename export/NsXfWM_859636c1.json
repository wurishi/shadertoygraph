{"ver":"0.1","info":{"id":"NsXfWM","date":"1644914310","viewed":383,"name":"Bandlimited Synthesis 2b","username":"FabriceNeyret2","description":"around iq's \"Bandlimited Synthesis 2\" [url]https://shadertoy.com/view/wtXfRH[/url]\n- left: exact box filter  right:  spline filter ( pseudoGaussian )\n- top: using fwidth      bottom : using L2 gradient.    blue = isovalue\n- click: see 2PI band instead PI ","likes":21,"published":3,"flags":0,"usePreview":0,"tags":["2d","cos","filtering","lod","frequency","bandlimited"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of \"Bandlimited Synthesis 2\" by iq. https://shadertoy.com/view/wtXfRH\n\n#define fwidth2(x) length(vec2(dFdx(x),dFdy(x)))\n\nvoid mainImage(out vec4 O,  vec2 U )\n{\n\tvec2  R = iResolution.xy, p = 2.*U-R;\n    float a = 400.* ( atan(p.y,p.x) + .05*iTime ),               // rays pattern\n          f = iMouse.z > 0. ? 1. : .5,                           // click = 2PI band instead of PI\n          w = p.y>0. ? fwidth(a): fwidth2(a),                    // L1 or L2 gradient\n          v = p.x<0. ?  cos(a)* sin(.5*w)/(.5*w)                 // box filter\n                      : cos(a)* smoothstep(f*6.28,0.,w);         // spline filter ( ~gauss )\n \n    O = vec4( pow( .5+.5*v , 1./2.2 ) );                         // display ( to sRGB )\n    \n    O = mix(O, vec4(0,0,1,0), smoothstep(.03,0.,abs(w-3.14) ) ); // isovalue\n    R = U-.5 - floor(R/2.); if (R.x*R.y==0.) O = vec4(1,0,0,0);  // red separators\n}","name":"Image","description":"","type":"image"}]}