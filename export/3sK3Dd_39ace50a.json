{"ver":"0.1","info":{"id":"3sK3Dd","date":"1571230536","viewed":101,"name":"Colored spiral","username":"blueneosky","description":"Don't look too long... or not, depend if you want your vision funny","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 2.*acos(0.);\nconst float doublePI = 2.*PI;\nconst float waveLength = 10.;\nconst float waveSpeed = 20.0;\n\nfloat waveAngleOffset() {\n    return iTime*waveSpeed; // loose precision arround 800sec\t(because of big number in sin/cos ???)\n    return mod(iTime*waveSpeed, doublePI);\t\n}    \n\nfloat psin(in float angle) { return .5 * (1. + sin(angle)); }\n\nvec2 polar(in vec2 p)\n{\n    float dist = length(p);\n    float teta = dist > .0 ? asin(p.y/dist) : .0;\t// -Pi/2 -> Pi/2\n    if(p.x < .0)\n    \tteta = PI - teta;\n    \n    return vec2(dist, teta);\n}    \n\nfloat spiralPol(in vec2 pol)\n{\n\treturn psin((pol.x*doublePI * waveLength) + pol.y - waveAngleOffset());\n}\n\nfloat spiralXY(in vec2 xy) { return spiralPol(polar(xy)); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord - iResolution.xy)/iResolution.y;\n\n    vec2 pol = polar(uv);\n    \n    float spiral = spiralPol(pol);\n    // smooth a bit the center\n    spiral = min(1., (pol.x*waveLength*2.)) * spiral;\n    \n\tvec3 col = spiral * (.4+ .5*vec3(uv.xyy) * psin(pol.y - waveAngleOffset()));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}