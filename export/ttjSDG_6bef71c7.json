{"ver":"0.1","info":{"id":"ttjSDG","date":"1567065312","viewed":463,"name":"Mirror ops","username":"maeln","description":"Various mirroring ops. \nChange the #define on line 2-4 to test them.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["mirror","symmetry","ops"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define VERTICAL \n#define HORIZONTAL \n//#define RADIAL \n\nvec2 to_polar(vec2 uv) {\n    return vec2(\n        length(uv),\n        atan(uv.y, uv.x)\n    );\n}\n\nvec2 to_cartesian(vec2 uv) {\n    return vec2(\n        uv.x * cos(uv.y),\n        uv.x * sin(uv.y)\n    );\n}\n\nfloat ramp(float x, float s, float e) {\n    return s + mod(x,e);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n#ifdef VERTICAL\n    // vertical mirror\n    uv.x = abs(0.5-uv.x);\n#endif\n    \n#ifdef HORIZONTAL\n    // horizontal mirror\n\tuv.y = abs(0.5-uv.y);\n#endif\n    \n#ifdef RADIAL\n    // radial mirror\n    vec2 polar = to_polar(vec2(0.5,0.5)-uv);\n    polar.y = ramp(polar.y, 0.0, PI/4.);\n    uv = to_cartesian(polar);\n#endif\n    \n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}