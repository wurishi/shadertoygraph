{"ver":"0.1","info":{"id":"DlVXRK","date":"1686212151","viewed":85,"name":"Heater shader","username":"Wither362","description":"Shader which heats the image.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["channel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + abs(1.0 / sin(iTime)) * cos(iTime+uv.yyy + texture(iChannel0, uv).xyz);\n\n    // Output to screen\n    fragColor = vec4(texture(iChannel0, uv).xyz * col,1.0);\n}","name":"Image","description":"","type":"image"}]}