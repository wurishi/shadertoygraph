{"ver":"0.1","info":{"id":"ssyyDR","date":"1654678991","viewed":179,"name":"Frost fractal pattern","username":"jarble","description":"A fractal with frost patterns.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["fractal","frost"],"hasliked":0,"parentid":"ftXczH","parentname":"Silver knots"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 16.*16.*8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n    for(int i=0;i<6;i++)\n    {\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        for(int k = 0; k < 3; k++){\n            //t2.yx /= scale; //this makes another nice pattern\n\n            uv += 1.+(t2.yx);\n            t2 = triangle_wave(uv.yx-.5,scale);\n            t3 = triangle_wave(uv,scale);\n            uv.yx = (t2-t3)/(scale);\n        }\n        col.x = (((uv.y+uv.x)+col.x))/sqrt(3.);\n        col = abs(col+vec3(col.x))/sqrt(3.);\n    }\n    fragColor = vec4((col*3.),1.0);\n}\n","name":"Image","description":"","type":"image"}]}