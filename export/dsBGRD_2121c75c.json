{"ver":"0.1","info":{"id":"dsBGRD","date":"1667298715","viewed":265,"name":"Inverse arc length","username":"gleboneloner","description":"calculate the inverse integral by solving the ODE","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["bezier","cubic","arc","length"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 K1, K2, K3, K4;\n\nvec2 curve ( float t ) {\n    \n    return t*(t*(K1*t+K2)+K3)+K4;\n\n}\n\n//////////////////\n\nvec2 E1, E2, E3;\n\nvec2 normal ( float t ) {\n\n    return t*(E1*t+E2)+E3;\n\n}\n\n//////////////////\n\nfloat line ( vec2 p, vec2 a, vec2 b ) {\n\n    vec2 u = p-a; vec2 v = b-a;\n    \n    float h = clamp( dot(u,v)/dot(v,v), 0.0, 1.0 );\n    \n    return distance( p, mix(a,b,h) );\n\n}\n\nvoid circle ( inout vec4 color, vec4 S, vec2 p, vec2 a, float s1, float s2 ) {\n\n    float D = distance(p,a);\n    \n    color = mix( color, vec4(0), clamp( s1-D, 0.0, 1.0 ) );\n    \n    color = mix( color, S, clamp( s2-D, 0.0, 1.0 ) );\n\n}\n\n//////////////////\n\nconst vec4 S1 = vec4( 0.090196, 0.611765, 0.592157, 1 );\nconst vec4 S2 = vec4( 0.968627, 0.654902, 0.172549, 1 );\nconst vec4 S3 = vec4( 0.866667, 0.070588, 0.239216, 1 );\nconst vec4 S4 = vec4( 0.321569, 0.223529, 0.549020, 1 );\nconst vec4 S5 = vec4( 0.258824, 0.541176, 0.737255, 1 );\n\n//////////////////\n\nvoid mainImage ( out vec4 color, in vec2 coords ) {\n    \n    float RX = iResolution.x;\n    float RY = iResolution.y;\n    \n    vec2 a = vec2( RX/5.0, RY/5.0 );\n    vec2 b = vec2( RX/2.0, RY/5.0 );\n    vec2 c = vec2( RX/2.0, RY-RY/5.0 );\n    vec2 d = vec2( RX-RX/5.0, RY-RY/5.0 );\n    \n    if ( iMouse.z > 0.5 ) d = iMouse.xy;\n    \n    K1 = d-3.0*c+3.0*b-a;\n    K2 = 3.0*c-6.0*b+3.0*a;\n    K3 = 3.0*b-3.0*a;\n    K4 = a;\n    \n    E1 = 3.0*K1;\n    E2 = 2.0*K2;\n    E3 = K3;\n    \n    //////////////////\n    \n    float m = min( line( coords, a, b ), line( coords, c, d ) );\n    \n    color = mix( color, S4, clamp( 1.5-m, 0.0, 1.0 ) );\n    \n    //////////////////\n    \n    float n = 1E10;\n    \n    for ( int i = 0; i < 50; i ++ ) {\n    \n        float t = float(i)/50.0;\n    \n        n = min( n, line( coords, curve(t), curve(t+0.02) ) );\n    \n    }\n    \n    color = mix( color, S5, clamp( 1.5-n, 0.0, 1.0 ) );\n    \n    //////////////////\n    \n    float t = 0.0;\n    \n    for ( int i = 0; ( i < 500 ) && ( t < 1.0 ); i ++ ) {\n    \n        circle( color, S1, coords, curve(t), 4.0, 3.0 );\n        \n        // Euler method iteration\n        \n        t += 12.0/length(normal(t));\n    \n    }\n    \n    //////////////////\n    \n    circle( color, S2, coords, a, 6.0, 5.0 );\n    circle( color, S3, coords, b, 6.0, 5.0 );\n    circle( color, S3, coords, c, 6.0, 5.0 );\n    circle( color, S2, coords, d, 6.0, 5.0 );\n    \n}","name":"Image","description":"","type":"image"}]}