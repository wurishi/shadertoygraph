{"ver":"0.1","info":{"id":"DtlGRN","date":"1671410037","viewed":356,"name":"2pass bloom","username":"ianertson","description":"simple bloom shader","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["bloom","2pass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool mouseDown() {\n    return (iMouse.z + iMouse.w) > 0.001;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 c = fragCoord.xy;\n\n    vec3 original = texture(iChannel1, uv).rgb;\n    vec3 bloomed = texture(iChannel0, uv).rgb;\n    \n    vec3 processed = max(original, bloomed);\n    processed = mix(original, processed, 0.5 * pow(luma(processed), 2.0));\n\n\n    vec2 point = mouseDown() ? iMouse.xy : ((iResolution.xy) * (0.5 + (0.5 * cos(iTime))));\n        \n    vec3 col = c.x < point.x ? original : processed;\n    col *= (abs(c.x - point.x) <= 2.0 ? 0.0 : 1.0);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define BLOOM_RADIUS 6.14\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 scalar = 1.0 / vec2(textureSize(iChannel0, 0).xy);\n\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    vec3 left = texture(iChannel0, uv + vec2(-1.0, 0.0) * scalar * BLOOM_RADIUS).rgb;\n    vec3 right = texture(iChannel0, uv + vec2(1.0, 0.0) * scalar * BLOOM_RADIUS).rgb;\n    vec3 up = texture(iChannel0, uv + vec2(0.0, 1.0) * scalar * BLOOM_RADIUS).rgb;\n    vec3 down = texture(iChannel0, uv + vec2(0.0, -1.0) * scalar * BLOOM_RADIUS).rgb;\n    \n    vec3 bloomed = max(left, max(right, max(up, max(down, col))));\n    \n    bloomed = (col + bloomed) / 2.0;\n    \n    bloomed = (col + (bloomed * luma(bloomed)));\n    \n    \n    fragColor = vec4(bloomed, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define BLUR_AMOUNT 32.1\n\nvec3 blur(vec3 pixel, sampler2D tex, vec2 uv, vec2 dir) {\n    vec2 tsize = vec2(textureSize(tex, 0).xy);\n    vec2 scalar = 1.0 / tsize;\n    \n    vec2 offset = vec2(pixel.rg + pixel.b) / 3.0;\n    \n    vec2 gdir = dir * 0.001 * BLUR_AMOUNT;\n    return textureGrad(tex, uv, gdir, gdir).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    vec3 blurred = vec3(0.0);\n    blurred += blur(col, iChannel0, uv, vec2(1, 0));\n    blurred += blur(col, iChannel0, uv, vec2(-1, 0));\n    blurred += blur(col, iChannel0, uv, vec2(0, 1));\n    blurred += blur(col, iChannel0, uv, vec2(0, -1));\n    \n    blurred /= 4.0;\n\n    \n    \n    fragColor = vec4(blurred, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\nfloat luma(vec3 color) {\n  return dot(color, vec3(0.299, 0.587, 0.114));\n}","name":"Common","description":"","type":"common"}]}