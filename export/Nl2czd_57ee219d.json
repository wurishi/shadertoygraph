{"ver":"0.1","info":{"id":"Nl2czd","date":"1661774115","viewed":69,"name":"Spotlights?","username":"rucksack","description":"made this a while ago by doing weird things to what was a sphere sdf? idk","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float delta = 0.1;\n\n// (this isn't even a sphere anymore, sorry)\nfloat sphere(vec2 p, float r) {\n    return length(p) - r + .2*sin(2.*atan(p.y, p.x) + iTime);\n}\n\nfloat scene(vec2 p) {\n    float r = .03 + .05*(sin(4.*iTime)*sin(7.*iTime)*sin(13.*iTime)+1.);\n    float d = sphere(p, r);\n    d = min(d, sphere(p-vec2(.5+.1*abs(sin(iTime)), 0.), r));\n    d = min(d, sphere(p-vec2(-.5-.1*abs(sin(iTime)), 0.), r));\n    return d;\n}\n\nvec3 plot(vec2 uv) {\n    return smoothstep(delta, -delta, scene(uv)) * vec3(.8+.1*sin(vec3(5, 0, 7)*iTime));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = plot(uv);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}