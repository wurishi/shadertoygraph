{"ver":"0.1","info":{"id":"4cKyRm","date":"1731637366","viewed":149,"name":"DrostLed","username":"Peace","description":"Inspired by shane","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["grid","light","glow","led","transform","drostle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926;\n\n#define cexp(z) (exp((z).x) * vec2(cos((z).y), sin((z).y)))\n#define clog(z) vec2(0.5 * log(dot(z, z)), atan((z).y, (z).x))\n\nfloat sfract(float x) {\n    x = fract(x);\n    return x * smoothstep(1.0, 0.0, x);\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 ruv = uv;\n  \n    uv = clog(uv);\n    uv.x = sfract(uv.x - iTime * 0.4) * 0.5;\n    float s = sqrt(sqrt(uv.x));\n    uv.y += sin(s *s * PI * 1.5 - iTime * 0.4);\n    uv = cexp(uv);\n    \n    uv *= 4.0;\n    \n    float line_width = 0.03;\n    vec4 uv_ddxy = vec4(dFdx(uv), dFdy(uv));\n    vec2 uv_deriv = vec2(length(uv_ddxy.xz), length(uv_ddxy.yw));  \n    vec2 draw_width = max(vec2(line_width), uv_deriv);  \n    vec2 grid_uv = abs(fract(uv) * 2.0 - 1.0);  \n    vec2 grid2 = smoothstep(uv_deriv * 1.5, -uv_deriv * 1.5, grid_uv - draw_width);  \n    grid2 *= min(line_width / draw_width, 1.0);  \n    grid2 = mix(grid2, vec2(line_width), clamp(uv_deriv * 2.0 - 1.0, vec2(0), vec2(1)));  \n    float grid = mix(grid2.x, 1.0, grid2.y);\n    \n    \n    vec3 col = vec3(grid);\n    vec2 fuv = abs(fract(uv - 0.5) * 2.0 - 1.0);\n    float k = length(min(line_width / draw_width, 1.0));\n    col = mix(vec3(2, 0.7, -0.4)*fuv.y*fuv.y, vec3(-0.5, 0.6, 2)*fuv.x*fuv.x, 0.5);\n    col = vec3(mix(length(fuv) * col * k, vec3(1), grid));\n    col *= s * 2.0;\n    \n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}