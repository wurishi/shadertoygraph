{"ver":"0.1","info":{"id":"Nd2XWm","date":"1620382586","viewed":168,"name":"A Simple Squircle (superellipse)","username":"bct23","description":"A squircle is the set of points within some norm (\"distance\") of the origin, using:\n   ||d|| ^ e = (d.x) ^ e + (d.y) ^ e\n\nWhen e=2 this gives is Pythagoras's equation, resulting in a normal circle. Scaling x/y produces a superellipse.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","geometry"],"hasliked":0,"parentid":"XsjGDt","parentname":"A Simple Circle"},"renderpass":[{"inputs":[],"outputs":[],"code":"/**\n * Numerically-stable squircle (superellipse) renderer.\n * (See https://en.wikipedia.org/wiki/Superellipse)\n *\n * Derived from https://www.shadertoy.com/view/XsjGDt\n * by jonobr1 / http://jonobr1.com/\n */\n\n/**\n * Convert r, g, b to normalized vec3\n */\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\n/**\n * Compute a norm (distance) using exponent `e`:\n *    norm^e = x^e + y^e\n *  e=2 gives normal Pythagorean / Euclidean distance.\n */\nfloat norm(float e, vec2 v) {\n    v = abs(v);\n    if (v.y > v.x) { v = vec2(v.y, v.x); }\n    if (v.y == 0.0) { return v.x; }\n    // For large `e`, computing a^e might overflow, so compute log(a^e) = e.log(a)\n    v = vec2(e * log(v));\n    // Calculate log(d^e) log(x^e+y^e). - see https://en.wikipedia.org/wiki/LogSumExp.\n    float logSumExp = v.x + log(1.0 + exp(v.y - v.x));\n    \n    return exp(logSumExp / e);\n}\n\n/**\n * Draw a superellipse at vec2 `pos` with radius `rad`,\n * color `color` and exponent `e`\n */\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color, float e) {\n   \n\tfloat d = norm(e, pos - uv) - rad;\n    // Attempt to \"anti-alias\" pixels on the border. Not accurate for e<1.\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(color, 1.0 - t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = fragCoord.xy;\n\tvec2 center = iResolution.xy * 0.5;\n\tfloat radius = 0.25 * iResolution.y;\n\n    // Background layer\n\tvec4 layer1 = vec4(rgb(210.0, 222.0, 228.0), 1.0);\n\t\n\t// Super-ellipse\n\tvec3 red = rgb(225.0, 95.0, 60.0);\n    float exponent = pow(8.0, 0.3 + sin(iTime));\n\tvec4 layer2 = circle(uv, center, radius, red, exponent);\n\t\n\t// Blend the two\n\tfragColor = mix(layer1, layer2, layer2.a);\n\n}","name":"Image","description":"","type":"image"}]}