{"ver":"0.1","info":{"id":"4cXBW2","date":"1724343613","viewed":20,"name":"Scan waves","username":"TomCarbon","description":"just messing around...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","sphere","normal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const uint kMaxSteps = 255u;\nconst float kMinSurface = 0.001;\n\nfloat sdSphere(vec3 p, vec4 sphere)\n{\n    return length(p - sphere.xyz) - sphere.w;\n}\n\nfloat sdScene(vec3 p)\n{\n    float sd = p.y;\n\n    sd = min(sd, sdSphere(p, vec4(0, 1, -3, 1)));\n    sd = min(sd, sdSphere(p, vec4(2.3, 1, -3, 1)));\n    sd = min(sd, sdSphere(p, vec4(-2.3, 1, -3, 1)));\n    \n    return sd;\n}\n\nvec3 getNormal(vec3 p)\n{\n    vec2 e = vec2(0, 0.01);\n\n    vec3 n = sdScene(p) - vec3(sdScene(p - e.yxx), sdScene(p - e.xyx), sdScene(p - e.xxy));\n    \n    return normalize(n);\n}\n\nfloat rayMarch(vec3 ro, vec3 rd, float min, float max)\n{\n    float d = min;\n    \n    for (uint i = 0u; i < kMaxSteps; ++i)\n    {\n        vec3 p = ro + d * rd;\n\n        float sd = sdScene(p);\n        d += sd;\n        \n        if (sd < kMinSurface || d > max)\n            break;\n    }\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime * 0.6;\n\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.x;\n\n    vec3 ro = vec3(0, 1, 1);\n    vec3 rd = normalize(vec3(uv, -1));\n\n    vec3 //color = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    color = vec3(0, 0, 0);\n    \n    float d = rayMarch(ro, rd, 0.0, 100.0);\n    if (d < 100.0)\n    {\n        vec3 p = ro + d * rd;\n        vec3 n = getNormal(p);\n\n        if (p.y < 0.1)\n            color = vec3(fract((d - t) / 1.0));\n        else\n            color = vec3(fract((d + t) / 1.3));\n            \n        vec3 light = vec3(0, 4, 2);\n        vec3 l = normalize(light - p);\n        \n        float ld = length(light - p);\n        if (rayMarch(p + n * 2.0 * kMinSurface, l, 0.0, ld) < ld)\n            color *= 0.2;\n    }\n\n    if (length(uv) < 0.4)\n        color = vec3(1.0) - color;\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}