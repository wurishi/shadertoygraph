{"ver":"0.1","info":{"id":"WdBBzD","date":"1589563811","viewed":383,"name":"Continued Fraction Ford Circles","username":"mla","description":"A nice way of drawing Ford Circles. Mouse selects zoom point.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["circles","fraction","ford","continued"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"////////////////////////////////////////////////////////////////////////////////\n// Ford Circles\n// mla, 2020\n////////////////////////////////////////////////////////////////////////////////\n\nint ford(vec2 z) {\n  float x = z.x;\n  mat2 m = mat2(1);\n  for (int i = 0; i < 20; i++) {\n    m *= mat2(floor(x),1,1,0);\n    x = 1.0/fract(x);\n    float p = m[0].x, q = m[0].y;\n    float x1 = p/q;\n    float r = 1.0/(2.0*q*q);\n    if (z.y > 2.0*r) return -1;\n    if (distance(z,vec2(x1,r)) < r) return i;\n  }\n  return -1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec3 col = vec3(0);\n  int AA = 2;\n  for (int i = 0; i < AA; i++) {\n    for (int j = 0; j < AA; j++) {\n      vec2 z = (fragCoord.xy+vec2(i,j)/float(AA))/iResolution.x;\n      float t = 0.5*sqrt(5.0)-0.5;\n      if (iMouse.x > 0.0) t = iMouse.x/iResolution.x;\n      z.x -= t;\n      z *= exp(-mod(0.5*iTime,19.0));\n      z.x += t;\n      int k = ford(z);\n      if (k >= 0) col += hsv2rgb(vec3(float(k)/6.0,0.8,1));\n    }\n  }\n  col /= float(AA*AA);\n  col = pow(col,vec3(0.4545));\n  fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 hsv2rgb(in vec3 c) {\n  vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n  rgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n  return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n","name":"Common","description":"","type":"common"}]}