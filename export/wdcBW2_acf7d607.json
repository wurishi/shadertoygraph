{"ver":"0.1","info":{"id":"wdcBW2","date":"1607375732","viewed":136,"name":"hoeled_kifs_fractal_2","username":"hoeled","description":"Playing with this https://www.youtube.com/watch?v=il_Qg9AqQkE and used one of my own shaders as a texture.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["2d","colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle) {\n\treturn vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv.y += .355;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n\tuv *= .29;\n    vec3 col = vec3(0);\n\n    uv.x = abs(uv.x);\n    uv.y += tan(((5./6.)*3.1415))*.68;\n    \n    vec2 n = N((5./6.)*3.1415);\n    float d = dot(uv-vec2(.5, 0), n);\n    uv -= n*max(0., d)*2.;\n    \n    n = N((2./3.)*3.1415);\n    float scale = 1.;\n    uv.x += .5;\n    for(int i=0; i<1; i++) {\n    \tuv *= 3.;\n        scale *= 3.;\n    \tuv.x -= 1.5;\n    \tuv.x = abs(uv.x);\n    \tuv.x -= 2.1;\n    \tuv -= n*min(0., dot(uv, n))*1.;\n    }    \n    \n    d = length(uv - vec2(clamp(uv.x, -1., 1.), 0));\n    \n    uv /= scale;\n    col += texture(iChannel1, uv*4.-iTime*.1*(1.)).rgb;\n    col += texture(iChannel1, uv*4.-iTime*.1*(1.)).rgb;\n    col += texture(iChannel1, uv*4.-iTime*.1*(1.)).rgb;\n    col += texture(iChannel1, uv*4.-iTime*.1*(1.)).rgb;\n        \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float T(float a) {\n\treturn (sin(iTime*a)+1.)/2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\t\n    vec3 col = vec3(0.);\n    \n    uv.x *= 1.;\n    \n    float width = 0.05;\n    \n    float m5 = smoothstep(width+.001, width, abs(uv.x));\n    float m6 = smoothstep(width+.001, width, abs(uv.x+.2));\n    float m4 = smoothstep(width+.001, width, abs(uv.x-.2));\n    float m7 = smoothstep(width+.001, width, abs(uv.x+.4));\n    float m3 = smoothstep(width+.001, width, abs(uv.x-.4));\n    float m8 = smoothstep(width+.001, width, abs(uv.x+.6));\n    float m2 = smoothstep(width+.001, width, abs(uv.x-.6));\n    float m9 = smoothstep(width+.001, width, abs(uv.x+.8));\n    float m1 = smoothstep(width+.001, width, abs(uv.x-.8));\n    \n    col += m1 * T(2.);\n    col += m2 * T(2.1);\n    col += m3 * T(2.2);\n    col += m4 * T(2.3);\n    col += m5 * T(2.4);\n    col += m6 * T(2.5);\n    col += m7 * T(2.6);\n    col += m8 * T(2.7);\n    col += m9 * T(2.8);\n    \n    col.r -= T(4.);\n    col.g -= T(5.);\n    col.b -= T(6.);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}