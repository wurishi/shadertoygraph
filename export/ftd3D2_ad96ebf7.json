{"ver":"0.1","info":{"id":"ftd3D2","date":"1636751848","viewed":47,"name":"fork-Persian carpet 18-jf-v2","username":"jorge2017a2","description":"fork-Persian carpet 18-jf-v2","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["forkpersiancarpet18jfv2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///fork\n//https://www.shadertoy.com/view/fl3GDB\n//Created by jarble in 2021-11-11\n///modificado por jorge2017a2\n\n\n//change these constants to get different patterns!\n#define c2 0.05\n\n#define cB1 0.0\n#define cB2 0.01\n#define cB3 0.05\n\n#define c1 vec4(3.0+c2,2.5+c2,1.5,0)\n#define cA1 vec4(3.0+cB1,2.5+cB1,1.5,0)\n#define cA2 vec4(3.0+cB2,2.5+cB2,1.5,0)\n#define cA3 vec4(3.0+cB3,2.5+cB3,1.5,0)\n\n//----------------------------------------------------------------------------------------\n//  3 out, 1 in...\nvec3 hash31(float p)\n{   //from David Hoskin's \"Hash without sine\"\n   vec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n   p3 += dot(p3, p3.yzx+33.33);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}\n\nvec2 triangle_wave(vec2 a,float scale)\n{    return abs(fract((a+c1.xy)*scale)-.5); }\n\nvec2 triangle_wavePC(vec2 a,float scale, vec4 Pc)\n{  return abs(fract((a+Pc.xy)*scale)-.5);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n\n    vec3 col;  \n    float t1 = 4.5/8.;\n\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y/t1/2.0;\n    float tfijo=8.67;\n    float ti=iTime;\n    uv += vec2(18.67/2.0+ti,18.67/3.0+ti*0.5)/t1/8.0;\n    float t2 =tfijo;\n    \n    vec3 random1 = (hash31(3.+t2)-.5)/12.;\n    vec3 random2 = (hash31(4.+t2)-.5)/12.;\n\n    float offset = .5;\n    float scale2 = 1.5;\n\n    vec2 va1;\n    vec2 va2;\n\n    for(int c=0;c<3;c++){\n        float scale = c1.z;\n        for(int i=0;i<3;i++)\n        {\n            for(int k = 0; k < 3; k++)\n            {\n                uv /= -scale2;\n                vec2 tmp1=uv.yx-offset;\n                vec2 tmp2=uv;\n                vec2 tv2= triangle_wavePC(tmp2,scale, cA3);\n                uv.yx=tv2;\n                va1=vec2(random1[k]*random1[0],random2[k]);\n                va2=vec2(random1[k],random2[k]);   \n                uv +=mix( va1, va2, sin(ti));\n            }\n\n            scale /= 1.+(scale2)*col.x/(8.);\n            scale2 -= (col.x-1.)/(4.);\n            col[c] = abs((uv.x)-(uv.y));\n         }\n\t}\n\n    fragColor = vec4(vec3(col*2.),1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}