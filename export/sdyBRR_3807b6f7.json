{"ver":"0.1","info":{"id":"sdyBRR","date":"1657535735","viewed":97,"name":"2d smellerr","username":"cxm","description":"this effect simulated from a 2d game","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["effect","smeller"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture( iChannel0, uv ).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define re iResolution\n\nfloat cv( in vec2 uv, in float t ){\n    return sin( uv.x * sin( uv.x - t ) ) * cos( uv.y  - t ) * sin( uv.y  - t ) * cos( uv.y  - t );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.yy;\n    vec2 bUv = fragCoord/iResolution.xy;\n\n    uv.x -= ( re.x - re.y ) / re.y * .5;\n    \n    \n    float p = 0.,\n          t = iTime * 2.;\n\n    // Time varying pixel color\n    vec3 col = vec3( 0. );\n    \n    vec2 c = uv - .5;\n    \n    c += cv( (c + cos(c.x) * sin(c.y) * .6 ), t );\n    \n    p = sin( atan( c.x, c.y ) * 10. - t * 5. );\n    \n    p = smoothstep( .05, p, .3 );\n    \n    col += p;\n\n    col = col * .1 + texture( iChannel0, bUv ).rgb * .9;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}