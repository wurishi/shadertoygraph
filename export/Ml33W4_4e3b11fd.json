{"ver":"0.1","info":{"id":"Ml33W4","date":"1469217522","viewed":493,"name":"Height / normal / flow","username":"bytewave","description":"Transforms height map to normal and use it as diplacement for a scrolling texture.","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["heightnormalflow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;        \n    \n    float filterSize = sin(iTime)*0.5+0.5;\n    filterSize  = 0.03;\n    float DisplacementWater = 0.2;\n    \n    \n    vec3 Origin = texture(iChannel0,uv).xyz;\n    Origin =vec3(uv.x,uv.y,Origin.x);\n    \n    \n    vec3 Right = texture(iChannel0,uv + vec2(filterSize,0.)).xyz;\n    Right =vec3(uv.x,uv.y,Right.x)  ;\n    \n    vec3 Up = texture(iChannel0,uv + vec2(0.,filterSize)).xyz;\n    Up =vec3(uv.x,uv.y,Up.x)  ;\n    \n    vec3 Binormal = (Right - Origin);\n    vec3 Tangent = (Up - Origin);\n    vec3 normal = vec3(Binormal.z,Tangent.z,0.);\n    normal.z = Origin.z * 0.5; \n    normal = normalize(normal)*DisplacementWater;\n    \n    vec2 WaterDirection = vec2(0.,iTime * 0.5);\n        \n    vec3 Water = texture(iChannel1,(uv * 8.1) + WaterDirection +normal.xy).zyx;\n    \n    vec4 Watered = vec4( Water,1.)*.4;\n    vec4 NotWatered = vec4(Origin.z);\n    \n    if(   step (uv.x , 0.5) > 0.)\n    {\n\t\tfragColor = mix(NotWatered,Watered, max(.85 - NotWatered.z *2.,0.));\n    }\n    else\n    {\n        fragColor = mix(NotWatered,Watered,1. - NotWatered.z)*0.5;\n        fragColor += vec4(normalize(normal),1.)*0.58;\n    }\n}","name":"Image","description":"","type":"image"}]}