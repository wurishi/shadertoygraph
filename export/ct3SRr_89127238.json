{"ver":"0.1","info":{"id":"ct3SRr","date":"1684922467","viewed":58,"name":"fractal-looking pattern","username":"ZeroSkyline","description":"fractal-looking pattern, Based on https://thebookofshaders.com/13/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","noise","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on https://thebookofshaders.com/13/\nfloat random(in vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\nfloat noise(in vec2 st)\n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n    \n}\nfloat fbm(in vec2 st)\n{\n    float value = 0.0;\n    float amplitude = 0.5;\n    float frequency = 1.;\n    for(int i = 0; i < 6; i++)\n    {\n        value += amplitude * noise(st * frequency);\n        st *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;    \n    st.x *= iResolution.x / iResolution.y;\n    vec3 col = vec3(0.);\n    col += fbm(st*3.);\n\n    fragColor = vec4(col, 1.f);\n}","name":"Image","description":"","type":"image"}]}