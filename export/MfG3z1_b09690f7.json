{"ver":"0.1","info":{"id":"MfG3z1","date":"1712500075","viewed":94,"name":"Separated Gaussian blur","username":"pwyr","description":"Simple implementation of a Gaussian blur using two 1D filter kernels.","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["blur","filter","gaussianblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 dir = vec2(0,1);\n    fragColor = gaussian1D(iChannel0, dir, fragCoord, iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 dir = vec2(1,0);\n    fragColor = gaussian1D(iChannel0, dir, fragCoord, iResolution.xy);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec4 gaussian1D(sampler2D tex, vec2 dir, vec2 fragCoord, vec2 res)\n{\n    // normal distribution values with standard deviation 2\n    float vals[13] = float[](\n        0.00222, 0.00876, 0.02700, 0.06476, 0.12099, 0.17603, 0.19947, \n        0.17603, 0.12099, 0.06476, 0.02700, 0.00876, 0.00222);\n\n    vec4 color = vec4(0);\n    for (int i = -6; i <= 6; ++i) {\n        color += vals[i+6] * texture(tex, (fragCoord+float(i)*dir)/res);\n    }\n    \n    return color;\n}","name":"Common","description":"","type":"common"}]}