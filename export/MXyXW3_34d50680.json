{"ver":"0.1","info":{"id":"MXyXW3","date":"1720553996","viewed":33,"name":"Cat Pouncing","username":"flaminbear","description":"whatever","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["nyan","blur","motionblur","nyancat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Where is this GLSL? WHERE IS IT.\nvec3 lerp(vec3 background, vec3 added, float alpha)\n{\n    background *= 1.0-alpha;\n    background += added * alpha;\n    return background;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // screenspace uvs\n    \n    vec2 uvStars = uv; // other uv set for future stars\n    \n    float heightGradient = 1.0-uv.y; // cool gradient white on bottom\n    float startHeightGradient = heightGradient; // save the cool gradient, we need it\n    \n    heightGradient = pow(heightGradient, 15.0); // feet height\n    \n    vec3 col = vec3(0.5, 0.6, 0.8) + startHeightGradient * 0.4; // Plain blue sky with cool gradient\n    \n    uv.x *= 0.25; // unsquish that cat\n    uv.x += 0.11; // center that cat\n    uv.x += sin(iTime)*0.01; // dynamic camera\n    uv.x = clamp(uv.x, 0.139, 0.2969); // hide other cats\n    \n    uv.y += sin(iTime*15.0)*0.05; // bounce that cat\n    uv.x += heightGradient * 0.1; // feet pouncing\n    \n    // cat goes fast starts here\n    int blurIterations = 6; // 6 for pixely look, 50 for smooth as butter\n    float blurLength = 0.02341; // some sort of magic number for pixel perfection at 6 iterations\n    float blurOpacity = 1.0;\n    \n    vec2 uvLoop = uv; // why am I commenting this\n    for(int i = 0; i < blurIterations; i++) // speed makes blur, blur needs multi-cats\n    {\n        uvLoop.x += blurLength / float(blurIterations); // arrange the transparent multi-cats\n        vec4 loopTex = texture(iChannel0, uvLoop);\n        \n        loopTex.a *= blurOpacity / float(blurIterations); // more iterations? more transparency\n        \n        float loopRatio = 1.0-(float(i)/float(blurIterations)); // the further the cat, the more transparent\n        float blurAlpha = loopTex.a*loopRatio;\n        col = lerp(col, loopTex.rgb, blurAlpha);\n    }\n    \n    // put that cat over the unworthy multi-cats\n    vec4 mainTex = texture(iChannel0, uv);\n    col = lerp(col, mainTex.rgb, mainTex.a);\n    \n    uvStars *= 0.125; // stars are too small. Make em big\n    uvStars.x *= 0.4; // elongate the stars, cat goes fast\n    uvStars.x += iTime * 0.1; // stars need to move until heat death\n    uvStars.y += 0.0038; // another magic number to align with pixel grid I guess\n    \n    float stars = texture(iChannel1, uvStars).r;\n    stars = step(stars, 0.01); // that's TOO MANY STARS. ONLY SOME PLEASE\n    stars *= 0.8; // don't hide the cat too much, make them a bit transparent\n    \n    col = lerp(col, vec3(1,1,1), stars);\n    \n    float floorAlpha = step(0.075,heightGradient); // feet gradient is now the floor\n    vec3 floorCol = startHeightGradient * vec3(0.8,1,0.6); // green pastures, also cool gradient goes here\n    \n    col = lerp(col, floorCol, floorAlpha);\n    \n    fragColor = vec4(col,1.0); // the mighty cat is shown\n}","name":"Image","description":"","type":"image"}]}