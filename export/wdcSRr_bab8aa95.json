{"ver":"0.1","info":{"id":"wdcSRr","date":"1628172696","viewed":89,"name":"Branching  Squares polar Mapping","username":"TLC123","description":"i couldn't fint it so i made it\nNow i'm obligated to make a truchet version?","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["polar","chess","specialmapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Root branching pattern\" by TLC123. https://shadertoy.com/view/tdV3Dd\n// 2019-10-17 07:28:02\n\nvec3  anytexture(vec2 uv){\nreturn vec3(0.7,1,.7)*(mod(floor(uv.x) + floor(uv.y *2. ), 2.));\n}\n\nvec3  anytextureNEW(vec2 uv){\n    uv.y *= 2.;\n    uv = sin(3.14*uv);\n    float a =uv.x*uv.y;\n    return vec3(1,.7,.7)* (.5 - .5 * a/fwidth(a));\n}\n\n\nvec3 fu(vec2 uv) {\n    float Y =  (  pow(1.56,uv.y ) ),\n          y = fract(Y),\n          o = exp2( floor(Y)),\n          x = abs( fract(   uv.x * o ) - .5 );\n        \n      vec3  p=anytexture(vec2(uv.x * o ,Y));\n         if(mod(floor(iTime),2.)==0.){   p=anytextureNEW(vec2(uv.x * o ,Y));}\n\n    //      p = 1. - abs(  x - smoothstep(0., 1., y) / 4.);\n    //p= mix( p, p * p, y * 1.333) + .15 / abs(Y - .5);\n    \n    return p;\n}\n\n\nvoid mainImage(out vec4 O, vec2 U) {\n\n    float t = iTime;\n    U = U / iResolution.x - vec2(.5, .15);\n    U *= 7. + sin(t) * 5.;\n    U += 1.* vec2( sin(t*.17) , cos(t*.13) );\n    \n    float l =  length(U);\n      vec3    v = mod(iTime, 30.) < 25. \n              ?  fu( vec2(  ( atan(U.y,U.x) + sin(t*.1) * 4. ) / 6.28 \n                           * floor( 5. + sin(t*.4) *3. ) \n                          ,  l +1.\n                    )    )\n                   /  max(1., l*l*.125)\n              :  fu(U);\n\n    //v *= .75;\n\n    O = vec4( v,1. );\n}\n\n","name":"Image","description":"","type":"image"}]}