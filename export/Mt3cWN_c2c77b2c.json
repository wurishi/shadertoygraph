{"ver":"0.1","info":{"id":"Mt3cWN","date":"1532631191","viewed":176,"name":"simple weave","username":"liamboone","description":"simple lines woven together","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat checker(vec2 uv, float size)\n{\n  return mod(floor(size * uv.x) + floor(size * uv.y), 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.* fragCoord - iResolution.xy) / iResolution.y;\n    \n    vec3 color = vec3(0.9);\n    \n    float disk = mix(0.1, 1.0, smoothstep(0.0, 0.9, max(0.0, 1.0 - length(uv))));\n    \n    float all_weaves = 0.;\n    \n    float N = 4.;\n    \n    for (float i = 0.; i < N; i += 1.)\n    {\n        float d = fract((iTime * 0.1) + (i / N));\n        float size = (1. - d) * 10.;\n        float t = d * 0.5 * 3.14159;\n        vec2 st = (uv * mat2(cos(t), sin(t),\n                            -sin(t), cos(t))) - 1. / (size * 4.);\n        \n        vec2 fuzzy_lines = sin(st * size * 2. * 3.14159) * 0.5 + 0.5;\n        vec2 lines = pow(fuzzy_lines, vec2(10.));\n        vec2 dl = fwidth(lines);\n\n        vec2 mask = smoothstep(0.2 - dl, 0.2 + dl, lines);\n\n        float squares = checker(st, size);\n\n        mask = 1.0 - (vec2(squares, 1. - squares) * min(mask.x, mask.y));\n\n        vec2 weave_comps = smoothstep(0.8 - dl, 0.8 + dl, lines) * mask;\n\n        float weave = max(weave_comps.x, weave_comps.y);\n\n        weave *= disk;\n    \tall_weaves = max(weave * exp((1.-d) * - 4.), all_weaves);\n    }\n    \n    // Output to screen\n    fragColor = vec4(all_weaves * color, 1.0);\n}","name":"Image","description":"","type":"image"}]}