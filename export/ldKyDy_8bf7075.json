{"ver":"0.1","info":{"id":"ldKyDy","date":"1523277787","viewed":106,"name":"first shader I guess","username":"siapran","description":"a circle rotating around a light source","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LIGHT_RADIUS 0.7\n#define SHAPE_RADIUS 0.1\n#define PI 3.1415\n\n\n\nfloat circle(in vec2 _st, in float _radius){\n    float dist = distance(_st, vec2(0.0));\n\treturn 1.-smoothstep(_radius-(_radius*0.01),\n                         _radius+(_radius*0.01),\n                         dist);\n}\n\n\nbool seg_cir(in vec2 A, in vec2 B, in vec2 C, in float r) {\n\tvec2 d = B - A;\n    vec2 f = A - C;\n    \n    float a = dot(d, d);\n\tfloat b = 2.0 * dot(f, d);\n\tfloat c = dot(f, f) - r * r;\n\n\tfloat discriminant = b * b - 4.0 * a * c;\n    if( discriminant < 0.0 ) {\n\t\treturn false;\n\t} else {\n\t\tdiscriminant = sqrt( discriminant );\n\t\n\t\tfloat t1 = (-b - discriminant)/(2.0*a);\n\t\tfloat t2 = (-b + discriminant)/(2.0*a);\n\t\t\n        if( t1 >= 0.0 && t1 <= 1.0 ) {\n\t\t    return true ;\n        }\n\t\t\n        if( t2 >= 0.0 && t2 <= 1.0 ) {\n    \t\treturn true ;\n\t\t}\n        \n\t\treturn false ;\n\t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/min(iResolution.x,iResolution.y);\n    vec2 mouse = iMouse.xy/min(iResolution.x,iResolution.y);\n    \n    vec3 col = vec3(0.0);\n\n    // grid\n    //vec2 grid = uv * 10.0;\n    //if (fract(grid.x) < 0.05 || fract(grid.y) < 0.05) col += 1.0;\n    \n    vec2 circle_pos = vec2(cos(iTime),sin(iTime)) * 0.25 + 0.5;\n    //vec2 circle_pos = vec2(0.5);\n    \n    // circle shape, casts shadow\n    col += circle(uv - circle_pos, SHAPE_RADIUS);\n    col -= circle(uv - circle_pos, SHAPE_RADIUS * 0.9);\n    \n    // mouse is a light source\n    col += circle(uv - mouse, 0.0005);\n    \n    // ray casting\n    vec2 ray = uv;\n    \n    float dist = distance(ray, mouse);\n    if (dist < LIGHT_RADIUS) {\n        if (!seg_cir(ray, mouse, circle_pos, SHAPE_RADIUS)) {\n            col += 1.0 - smoothstep(0.0, 1.0, dist / LIGHT_RADIUS);\n        }\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}