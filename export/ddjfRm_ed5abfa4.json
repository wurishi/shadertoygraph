{"ver":"0.1","info":{"id":"ddjfRm","date":"1689599203","viewed":119,"name":"Difference of factors","username":"H4mm3r","description":"Visualisation of different distance functions","likes":0,"published":1,"flags":8,"usePreview":0,"tags":["factor","euclidian","metricspace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float t;\nfloat euc(vec2 uv, vec2 p)\n{\n    return sqrt(pow(uv.x-p.x,2.)+pow(uv.y-p.y,2.));\n}\nfloat man(vec2 uv, vec2 p)\n{\n    return abs(uv.x - p.x) + abs(uv.y-p.y);\n}\nfloat king(vec2 uv, vec2 p)\n{\n    float x = abs(uv.x-p.x);\n    float y = abs(uv.y-p.y);\n    if (x < y)\n        return y;\n    return x;\n}\nfloat ham(vec2 uv, vec2 p) \n{\n    int a = int(floor(uv.x*uv.y*100.));\n    int b = int(floor(p.x*p.y*100.));\n    float h=0.;    \n    for (int c = 32; c >= 0; c--){\n      int ak = a >> c;\n      int bk = b >> c;\n      if ((ak & 1) != (bk & 1))\n          h++;\n    }\n    return float(h/32.);\n}\nfloat factors(vec2 uv)\n{\n    uv*=500.;\n    float n = 0.;\n    float p = abs(float(floor(uv.x*uv.y)));\n    for(int i = 2; i < int(sqrt(p));++i)\n    {\n        if(int(p)%i==0)\n        {\n            n++;\n            p/=float(i);\n            i=2;\n        }\n    }\n    return n;\n}\nfloat disF(vec2 uv,vec2 p)\n{\n    return abs(factors(uv) - factors(p));\n}\nfloat digS(vec2 uv, vec2 p)\n{\n    return 0.;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime*.5;\n    \n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 id = floor(uv);\n    \n    vec2 p = vec2(0.,0.);\n\n    vec3 col = vec3(1.);\n    \n    float d = disC(uv,p);\n    \n    if(d == float(t))\n        col = vec3(0.);\n    col = vec3(d);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly over time\n    return vec2( sin(6.2831*440.0*time)+sin(6.2831*300.*time));\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"float disC(vec2 uv, vec2 p)\n{\n    return tan(abs(uv.y-p.y)/abs(uv.x-p.x));\n}","name":"Common","description":"","type":"common"}]}