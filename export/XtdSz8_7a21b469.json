{"ver":"0.1","info":{"id":"XtdSz8","date":"1478123746","viewed":424,"name":"TumblingBox","username":"dila","description":"Box tumbles down stairs. Sorry about the sky.","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x)\n{\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat sdBoxX( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.y,d.z),0.0) + length(max(d.yz,0.0));\n}\n\nvec3 btex;\nfloat mat;\n\nvec3 bpos(vec3 p)\n{\n    float des = floor(iTime);\n    float t = fract(iTime);\n  vec3 q = vec3(-iTime, -des + 1.75, -des + 0.75);\n    float rt = t;\n    q.y += mix(t * 4.0, -1.0, rt);\n    q.z -= mix(t * 0.125, 1.0, rt);\n    p -= q;\n    p.yz *= rot(t * -3.14159 * 2.0);\n    p.xz *= rot(3.14159 * 0.25);\n    return p;\n}\n\nfloat map(vec3 p)\n{\n    mat = 0.0;\n  float d = 1000.0;\n    \n    for (int i = -1; i <= 1; ++i) {\n        float fi = float(i);\n        \n        vec3 q;\n        q.x = p.x;\n        q.z = p.z - fi;\n        q.y = p.y;\n        q.y -= floor(q.z);\n        q.z = fract(q.z) + fi;\n        \n      float k = sdBoxX(q, vec3(10.0, 0.5, 0.5));\n      d = min(d, k);\n    }\n    \n    btex = bpos(p);\n    float k = sdBox(btex, vec3(0.25));\n    \n    if (k < d) {\n        mat = 1.0;\n    }\n    \n    d = min(d, k);\n    \n    return d;\n}\n\nvec3 normal(vec3 p)\n{\n  vec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 64; ++i) {\n        t += map(o + r * t) * 0.85;\n    }\n    return t;\n}\n\nvec3 _texture(sampler2D channel, vec3 p)\n{\n    vec3 ta = texture(channel, vec2(p.x, p.z)).xyz;\n    vec3 tb = texture(channel, vec2(p.y, p.z)).xyz;\n    vec3 tc = texture(channel, vec2(p.x, p.y)).xyz;\n    return (ta*ta + tb*tb + tc*tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float des = iTime;\n    \n    vec3 o = vec3(-1.0 - des, -des + 2.0, -des);    \n    vec3 r = normalize(vec3(uv, 1.3));\n    \n    r.xy *= rot(sin(iTime) * 0.5);\n    r.xz *= rot(3.14159 * 0.2 + sin(iTime) * 0.5);\n    \n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    \n    vec3 tex = _texture(iChannel0, w * 0.5);\n    \n    if (mat == 1.0) {\n        tex = _texture(iChannel1, btex * 4.0);\n    }\n    \n    float fog = 1.0 / (1.0 + t * t * 0.01);\n    \n    vec3 lpos = o + vec3(2.0, 1.0, -1.0);\n    \n    vec3 sn = normal(w);\n    \n    vec3 ldel = lpos - w;\n    float ldist = length(ldel);\n    ldel /= ldist;\n    float lt = trace(w + sn * 0.001, ldel);\n    float lm = 1.0 / (1.0 + ldist * ldist * 0.01);\n    lm *= max(dot(ldel, sn), 0.0);\n    if (lt < ldist) {\n        lm = 0.05;\n    }\n    \n    float far = 1.0 - 1.0 / (1.0 + t * t * 0.005);\n    fog = mix(fog, far, far);\n    lm = mix(lm, far, far);\n    \n    vec2 polar = vec2(atan(r.y, r.x), acos(r.z));\n    vec3 skytex = texture(iChannel2, polar).xxx;\n    skytex = pow(skytex, vec3(4.0));\n    tex = mix(tex, skytex, far);\n    \n    vec3 fc = lm * tex * fog;\n    \n  fragColor = vec4(sqrt(fc), 1.0);\n}","name":"Image","description":"","type":"image"}]}