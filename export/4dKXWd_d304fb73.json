{"ver":"0.1","info":{"id":"4dKXWd","date":"1467449143","viewed":194,"name":"Pixelation test","username":"lukedan","description":"a simple pixelation test","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["2d","pixelation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pix_size = 20.0;\nconst int samples = 20;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float\n        pixtop = pix_size * floor(fragCoord.y / pix_size) / iResolution.y,\n        pixx = floor(fragCoord.x / pix_size) / iResolution.x;\n    vec4 sum = vec4(0.0, 0.0, 0.0, 0.0);\n    float step = pix_size / (float(samples) * iResolution.y);\n    float cur = pixtop + 0.5 * step;\n    for (int i = 0; i < samples; ++i) {\n        sum += texture(iChannel0, vec2(pixx, cur));\n        cur += step;\n    }\n    sum /= float(samples);\n    fragColor = sum;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float pix_size = 20.0;\nconst int samples = 20;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pixleft = pix_size * fragCoord.x / iResolution.x;\n    if (pixleft > fragCoord.x / pix_size) {\n        return;\n    }\n    vec4 sum = vec4(0.0, 0.0, 0.0, 0.0);\n    float step = pix_size / (float(samples) * iResolution.x);\n    float cur = pixleft + 0.5 * step;\n    for (int i = 0; i < samples; ++i) {\n        sum += texture(iChannel0, vec2(cur, fragCoord.y / iResolution.y));\n        cur += step;\n    }\n    sum /= float(samples);\n    fragColor = sum;\n}","name":"Buf A","description":"","type":"buffer"}]}