{"ver":"0.1","info":{"id":"DtcyRH","date":"1698867552","viewed":58,"name":"[TUT] Koch Snowflake Tut Fork5","username":"sarahannstarmer","description":"Inspired by The Art Of Code video tutorial on YouTube. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","curve","kifs","snowflake","koch","artofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle) {\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy; // 0 1 \n    uv*=2.;\n    vec3 col = vec3(0);\n    //start reflect around y-axis\n        uv.x = abs(uv.x);\n    //end reflect around y-axis   \n    //start move up\n        uv.y+=tan((5./6.)*3.1415)*0.5;\n    //end move up\n    //start code for reflection\n        vec2 n = N((5./6.)*3.1415);\n        float d = dot(uv-vec2(.5,0.),n);\n        uv -= n*max(0.,  d)*2.;\n    //end code for reflection\n    //  col+=smoothstep(0.01,.0,abs(d));\n    n = N((2./3.)*3.1415);\n    uv.x +=.5;\n    float scale =1.;   \n\n    // start fold iterations\n    for(int i=0; i<4; i++){ \n        uv *=3.;\n        scale*=3.;\n        uv.x -=1.5;\n        uv.x=abs(uv.x);\n        uv.x-=.5;\n        uv -= n*min(0., dot(uv, n))*2.;\n    }\n    // end fold iterations\n\n    d = length(uv - vec2(clamp(uv.x,-1., 1.), 0));\n    col += smoothstep(2./iResolution.y, .0, d/scale);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}