{"ver":"0.1","info":{"id":"wdXBD8","date":"1612492582","viewed":91,"name":"luma-based displacement","username":"NueSB","description":"recursive thing inspired by paint.net's polyglitch plugin.\nchange the offsets to move color channels independently!","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["anaglyph","recursive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define MAX_FRAMES 150\n\n// luma offset multipliers (rdir, gdir, bdir)\nconst vec2 offsets[3] = vec2[3](\n    \tvec2(0.0, 0.123),\n    \tvec2(0.0, 0.122),\n    \tvec2(0.0, 0.13)\n);\n\nfloat luma(vec3 c)\n{\n    return (0.2126*c.r + 0.7152*c.g + 0.0722*c.b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    \n    // safe texture load. adapted from https://www.shadertoy.com/view/MsVBWd\n    if (iFrame == 0 || texelFetch(iChannel1, ivec2(0.0), 0).a < 1.0)\n    {\n        fragColor = vec4(1.0, 0.0, 0.0, 0.0);\n        \n        if (iChannelResolution[0].x > 0.0) \n        {\n            fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n            fragColor.a = float(iFrame);\n        }                                             \n        return;\n    }\n        \n    if (iFrame + int(fragColor.a) >= MAX_FRAMES)\n    {\n        fragColor = texture(iChannel1, uv);\n        return;\n    }\n    \n    vec3 col = texture(iChannel1, uv).rgb;\n    \n    fragColor = vec4(\n                    vec3(\n                            texture(iChannel1, fragCoord / iResolution.xy + offsets[0] * luma(col) * 0.1).r,\n                            texture(iChannel1, fragCoord / iResolution.xy + offsets[1] * luma(col) * 0.1).g,\n                            texture(iChannel1, fragCoord / iResolution.xy + offsets[2] * luma(col) * 0.1).b\n                        ), \n                        fragColor.a\n                    );\n}","name":"Buffer A","description":"","type":"buffer"}]}