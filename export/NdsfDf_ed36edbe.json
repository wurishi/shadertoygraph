{"ver":"0.1","info":{"id":"NdsfDf","date":"1645496903","viewed":195,"name":"Fractal knots 6","username":"jarble","description":"A fractal with knot-like patterns.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["fractal","knot"],"hasliked":0,"parentid":"fssBW2","parentname":"Fractal knots 5"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//change these constants to get different patterns!\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n    //return abs(fract((a+c1.xy)*scale+iTime/500.)-.5); //morphing\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.;\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n\n    vec2 t2 = vec2(0.);\n        float p1 = 1.;\n        vec2 t3 = vec2(0.);   \n        for(int k = 0; k < 12; k++){\n\n            //uv -= (t2.yx+.5)/scale;\n            uv -= (t2.yx)/scale;\n            //uv -= (t2.yx)*(1.+uv.x-uv.y);\n\n            //uv -= (t2.yx)/(1.-uv.y-uv.x);\n            \n            //uv -= float(k%3)*float(k%2); //this makes it even more colorful\n            \n            \n            //vec2 t4 = t2/4.;\n            vec2 t4 = vec2(0.);\n            \n            t3 = p1*triangle_wave(-p1*uv,scale)-t4;\n            vec2 temp = t2;\n            t2 = p1*triangle_wave(-p1*uv.yx-.5,scale)-t4;\n            \n            //p1 *= -1.; //this makes another interesting pattern\n            \n            \n            \n            uv.yx = t3-t2;\n            //t2 /= (temp-.25);\n\n        col.x = 1.-abs(uv.x+uv.y+col.x);\n        col = col.yzx;\n        \n        uv /= scale*scale;\n      }\n    fragColor = vec4(col,1.0);   \n}\n","name":"Image","description":"","type":"image"}]}