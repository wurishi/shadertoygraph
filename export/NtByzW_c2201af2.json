{"ver":"0.1","info":{"id":"NtByzW","date":"1649225018","viewed":361,"name":"Fractal mosaic 3","username":"jarble","description":"A variant of my \"Banded mosaic\" pattern with a more interesting color palette.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["fractal","mosaic"],"hasliked":0,"parentid":"fl2yRR","parentname":"Fractal mosaic 2 (music)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define fmod(x,y) mod(floor(x),y)\n\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvec2 triangle_wave(vec2 a,float num){\n    a = rotate(a,num*radians(180.));\n    return abs(fract((a+c1.xy)*1.5)-.5);\n    //return abs(fract((a+c1.xy+num)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 36.*2.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    float scale = c1.z;\n    float p1 = 1.;\n    vec2 t2 = vec2(0.);\n    vec2 t3 = vec2(0.);\n    float num = 0.;\n    for(int k = 0; k < 12; k++){\n        //uv.x += fmod(uv.x,1.5); //lace pattern\n\n        float num = sign((uv.x+uv.y-.5))/2.;\n        //num += p1/2.;\n\n        //uv += floor(uv+vec2(1.,.5))/1.5;\n        uv += t2-float(k)/3.;\n        //uv += t2-float(k)/(3.-abs(uv.x-uv.y)/8.); //this makes an even crazier pattern\n\n        uv /= scale;\n        //float num = float(k)/3.;\n        t2 = -p1*triangle_wave(uv-p1*.5,num);\n        t3 = p1*triangle_wave(uv.yx,num);\n        \n        //t2 = (1.+t2);\n        //t3 = (1.-t3);\n        \n        uv = t2-t3;\n        //uv = max(t2-t3,t2);\n\n        p1 *= -1.;\n        //p1 *= sign(.5+uv.x);\n        //if(uv.x < uv.y) uv /= 1.5;\n\n        float multiplier = 1.125;\n        col.x = max(uv.y+uv.x-p1*col.x/multiplier,col.x/multiplier);\n        //col.x += (.5-col.x)/4.;\n        col = abs(col.yzx-vec3(1.-col.x/multiplier));\n        //uv.x += .5;\n    }\n    fragColor = vec4(col*1.5,1.0);\n}\n","name":"Image","description":"","type":"image"}]}