{"ver":"0.1","info":{"id":"MtcSDN","date":"1479578288","viewed":424,"name":"Sphere Refraction & Reflection","username":"VoidChicken","description":"A relatively little code shader. Sphere refraction and reflection with HDR. Use mouse to look around.\nVersion with less code: [url]https://www.shadertoy.com/view/XtdXW4[/url]","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","vignette","hdr","tonemapping","skybox","chicken","reflect","refract","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 rot(vec3 a, float b)\n{a = normalize(a);float s = sin(b);float c = cos(b);float d = 1.0 - c;\nreturn mat3(d * a.x * a.x + c,           d * a.x * a.y - a.z * s,  d * a.z * a.x + a.y * s, \nd * a.x * a.y + a.z * s,  d * a.y * a.y + c,           d * a.y * a.z - a.x * s,  \nd * a.z * a.x - a.y * s,  d * a.y * a.z + a.x * s,  d * a.z * a.z + c);}\nvec3 t3(vec3 x, samplerCube u){return texture(u,x).rgb;}\nfloat M(vec3 x){return length(x)-4.;}\nvec3 N(vec3 x)\n{vec2 e=vec2(.01,0);\nreturn normalize(vec3(M(x+e.xyy)-M(x-e.xyy),\nM(x+e.yxy)-M(x-e.yxy),\nM(x+e.yyx)-M(x-e.yyx)));}\nfloat e=2.3,p=atan(1.)*4.;\nvoid mainImage( out vec4 q, vec2 h ){\nvec2 R=iResolution.xy, u = h / R;\nvec4 m=iMouse/R.xyxx;\nif(iMouse.x==0.&&iMouse.y==0.){m.w=-1./R.x;m.xy=vec2(.5);}\nmat3 rmx = rot(vec3(0,1,0), clamp(-m.w*R.x,0.,1.)*iTime*3.14/10.+m.x*p*2.);\nrmx*=rot(cross(vec3(0,1,0),vec3(0,0,1)*rmx), m.y*p-p/2.);vec3 i,f,\no=vec3 (0, 0, -10.)*rmx,\nd=normalize(vec3((u*2.-1.)*vec2(iResolution.x/iResolution.y, 1),1))*rmx;\nf=t3(d,iChannel0);\nfloat t=0.;for (int i=0;i<64;++i)\n{t+=M(o+d*t);}i=o+d*t;\nif(M(i)<.02){vec3 n=normalize(N(i)*rot(N(i).yzx+N(i),texture(iChannel1,.2*(i.xz+i.xy+i.yz)).r)),\nr=refract(d,n,.9),k=reflect(d,n);f=mix(t3(k, iChannel0), t3(r, iChannel0), clamp(-dot(n,d),0.,1.))*\nvec3(.9, .8, .5);}q = vec4(1.-exp(-(f*(1.62-length(u-.5)*1.4)*vec3(1.1, 1.05, .8))*e),1);}","name":"Image","description":"","type":"image"}]}