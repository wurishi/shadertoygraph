{"ver":"0.1","info":{"id":"DlVSDc","date":"1686426851","viewed":55,"name":"Trippy refractions","username":"Gianeh","description":"Just experimenting with shadertoy","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.263, 0.416, 0.557);\n\n  return a + b * sin( cos(6.28318 * (c * t + d)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n  vec2 uv0 = uv;\n  vec3 finalColor = vec3(0.0);\n\n  for (float i = 0.0; i < 8.0; i++) {\n    uv = fract(uv * 1.8) - 0.9;\n\n    float d = length(uv) * exp(cos(-length(uv0)));\n\n    vec3 col = palette(length(uv0) + i * 0.8 + iTime * 0.4);\n\n    d = sin(d * 12.0 + iTime * 2.0) / 8.0;\n    d = abs(d);\n\n    d = pow(0.01 / d, 1.2);\n\n    finalColor += col * d;\n  }\n\n  fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}