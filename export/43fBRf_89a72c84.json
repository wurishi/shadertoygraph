{"ver":"0.1","info":{"id":"43fBRf","date":"1728810818","viewed":33,"name":"2D Interferometry Pinhole Camera","username":"rcmz","description":"Simulation of a pinhole camera by interferometry\nMouse control the position of the object point","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["camera","pinhole","interferometry","lightwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159265358979;\n\nfloat f(float x) {\n    return sin(x);\n    //return mod(x, 1.);\n    //return mod(x, 1.) > 0.5 ? 1. : 0.;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.y;\n    vec2 o = iMouse.xy / iResolution.y;\n    float l = 0.;\n    \n    const float H = 1000.;\n    for (float h = 0.; h < H; h++) {\n        vec2 p = vec2(0.88, 0.5 + (h/H - 0.5) * 0.001);\n        float d = distance(o, p) + distance(p, uv);\n        l += f(iTime * 100. - d * 1000000.);\n    }\n    l /= H;\n    \n    //fragColor.rgb = abs(l) * (l > 0. ? vec3(1,0,0) : vec3(0,0,1));\n    fragColor.rgb = vec3(pow(l, 2.));\n}","name":"Image","description":"","type":"image"}]}