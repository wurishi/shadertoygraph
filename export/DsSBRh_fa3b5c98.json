{"ver":"0.1","info":{"id":"DsSBRh","date":"1689380310","viewed":29,"name":"Simple circle screen fracturing ","username":"akr51","description":"Very basic shader illustrating fill circle function, rotation and screen fracturing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","trig","fract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 nfragCoord = fragCoord / iResolution.xy * 2.0 - 1.0;\n    float aspect_ratio = iResolution.x / iResolution.y; \n    nfragCoord.x *= aspect_ratio;\n    \n    nfragCoord.x += iTime;\n    nfragCoord.y += iTime / 2.0;\n\n    nfragCoord = fract(nfragCoord * 2.0);\n    nfragCoord -= 0.5;\n    \n    vec3 color = vec3(0.0);\n\n    float r = sin(iTime * PI / 3.0) / 1.8;\n \n    vec2 s1displace = vec2(cos(0.0 + iTime) * r, sin(0.0 + iTime) * r);\n    float s1 = step(length(nfragCoord + s1displace), 0.15);\n    \n    vec2 s2displace = vec2(cos(PI / 2.0 + iTime) * r, sin(PI / 2.0 + iTime) * r);\n    float s2 = step(length(nfragCoord + s2displace), 0.15);\n    \n    vec2 s3displace = vec2(cos(PI + iTime) * r, sin(PI + iTime) * r);\n    float s3 = step(length(nfragCoord + s3displace), 0.15);\n   \n   \n    vec2 s4displace = vec2(cos(PI * (3.0 / 2.0) + iTime) * r, sin(PI * (3.0 / 2.0) + iTime) * r);\n    float s4 = step(length(nfragCoord + s4displace), 0.15);\n    \n    color += s1 + s2 + s3 + s4;\n    \n    fragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}