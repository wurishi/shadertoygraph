{"ver":"0.1","info":{"id":"7sG3Wh","date":"1631815248","viewed":216,"name":"wallpaper_moon","username":"Antoine54652","description":".","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["moon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\nmat2 Rot(float a){\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat TaperBox(vec2 p, float wb, float wt, float yb, float yt, float blur){\n    //wb = long bas, wt = long haut, yb = espacement entre le bas et le milieu, yt = espacement entre le haut et le milieu\n    float m = S(-blur, blur, p.y - yb);\n    m *= S(blur, -blur, p.y - yt);\n    \n    p.x = abs(p.x);\n    \n    float w = mix(wb, wt, (p.y - yb) / (yt - yb));\n    m *= S(blur, -blur, p.x - w);\n    return m;\n}\n\nvec4 Tree(vec2 uv, vec3 col, float blur, float stage){\n    float m = TaperBox(uv, 0.03, 0.03, 0.0, 1.0/(stage+1.0), blur);\n    float shadow = 0.0;\n    \n    for(float i = 1.0; i < (stage+1.0); i++){\n        m += TaperBox(vec2(uv.x, uv.y-1.0/(stage+1.0)), (stage-i)*0.05+0.1, (stage-i)*0.05, 1.0/(stage+1.0)*(i-1.0), 1.0/(stage+1.0)*i, blur);\n        vec2 _uv = uv;\n        if((int(i)%2)==0){\n            _uv -= vec2(0.25, 0);\n        }\n        else{\n            _uv += vec2(0.25, 0);\n        }\n        shadow += TaperBox(_uv, 0.1, 0.5, 1.0/(stage+1.0)*i-0.05, 1.0/(stage+1.0)*i, blur);\n    }\n    \n    col -= shadow * 0.8;\n    \n    return vec4(col, m);\n}\n\nfloat GetHeight(float x){\n    return sin(x*0.494)+sin(x)*0.3;\n}\n\nvec4 Layer(vec2 uv, float blur){\n    vec4 col = vec4(0);\n    \n    float id = floor(uv.x);\n    float n = fract(sin(id*532.45)*5541.21)*2.0-1.0;\n    float x = n*0.3;\n    float y = GetHeight(uv.x);\n    float ground = S(blur, -blur, uv.y+y);\n    col += ground;\n    \n    y = GetHeight(id+0.5+x);\n    uv.x = fract(uv.x)-0.5;\n    \n    vec4 tree = Tree((uv-vec2(x, -y-0.01))*vec2(1.0, 1.0+n*0.2), vec3(1.0), blur, float(int(3.5+sin(x)*3.0)));\n    col = mix(col, tree, tree.a);\n    col.a = max(ground, col.a);\n    return col;\n}\n\nfloat Hash21(vec2 p){\n    p = fract(p*vec2(534.02, 964.547));\n    p += dot(p, p+531.154);\n    return fract(p.x*p.y);\n}\n\nfloat Stars(vec2 uv){\n    float v = TaperBox(uv * Rot(0.5) - vec2(-0.3, 0.1), 0.1, 0.1, -2.0, 0.5, 0.3);\n    return pow(Hash21(uv), 300.0/pow(v+1.0, 4.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    \n    vec2 M = (iMouse.xy/iResolution.xy)*2.0-1.0;\n    \n    float t = iTime*0.5;\n    \n    float blur;\n    \n    vec4 layer;\n    \n    vec4 col = vec4(0.0);\n    col += Stars(uv);\n    \n    float moon = S(0.01, -0.01, length(uv-vec2(0.4, 0.2))-0.15);\n    col *= 1.0-moon;\n    moon *= S(-0.01, 0.1, length(uv-vec2(0.48, 0.24))-0.15);\n    col += moon;\n    \n    for(float i = 0.0; i<1.0; i+=1.0/10.){\n        blur = mix(0.04, 0.001, i);\n        float scale = mix(30.0, 1.0, i);\n        layer = Layer(uv*scale+vec2(t+sin(i)*1354.2, i*2.0)-M, blur);\n        layer.rgb *= (1.0-i)*vec3(0.9, 0.9, 1.0);\n        \n        col = mix(col, layer, layer.a);\n    }\n    layer = Layer(uv+vec2(t, 1.5)-M, 0.07);\n\n    col = mix(col, layer*0.1, layer.a);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}