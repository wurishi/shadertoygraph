{"ver":"0.1","info":{"id":"Dstyzj","date":"1695330217","viewed":56,"name":"Aang","username":"danb","description":"It's just Aang.\n\nAlso: come to Deadline 2023 https://deadline.untergrund.net/2023/\n\nPost party update (03/10/2023): https://www.pouet.net/prod.php?which=95213","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["avatar","arrow","aang","airbender"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float aangface(vec2 uv)\n{\n    float faced = max(\n        length(uv * vec2(1.14, 1.)) - .45,\n        -(length(uv * vec2(1.17, 1.) + vec2(0., .04)) - .47)\n    );\n    \n    vec2 uvsym = vec2(abs(uv.x), uv.y);\n    \n    vec2 uvarrow = uvsym - vec2(-.2, .32);\n    float uvarrowd = max(\n        length(uvarrow * vec2(1.)) - .3,\n        -(length(uvarrow * vec2(1.) + vec2(.36, 0.)) - .65)\n    );\n    \n    vec2 uvarrow2 = uvsym - vec2(.145, .068);\n    float uvarrow2d = max(\n        length(uvarrow2 * vec2(1.)) - .15,\n        -(length(uvarrow2 * vec2(1.) + vec2(.01, .36)) - .5)\n    );\n    \n    vec2 uvarrow3 = uvsym - vec2(-.19, .39);\n    float uvarrow3d = max(\n        length(uvarrow3 * vec2(1.)) - .45,\n        -(length(uvarrow3 * vec2(1.) + vec2(.3, -.3)) - .865)\n    );\n    \n    vec2 uveyebrows = uvsym - vec2(.2, -.08);\n    float eyebrowsd = max(\n        length(uveyebrows * vec2(1.)) - .1,\n        -(length(uveyebrows * vec2(1.) + vec2(.01, .06)) - .15)\n    );\n    \n    vec2 uvnosesides = uvsym - vec2(.058, -.37);\n    float uvnosesidesd = min(\n        max(\n            length(uvnosesides * vec2(.8, 1.)) - .02,\n            -(length(uvnosesides * vec2(1., 1.) + vec2(.014, -.015)) - .04)\n        ),\n        length(uvnosesides * vec2(1., 1.8) - vec2(-.02, 0.)) - .01\n    );\n    \n    vec2 pupils = vec2(abs(uv.x - .007), uv.y);\n    \n    vec2 eyesup = uvsym - vec2(.135, -.17);\n    eyesup.y = abs(eyesup.y) + .01;\n    float eyesupd = min(\n        max(\n            max(\n                length(eyesup * vec2(1., 1.3)) - .14,\n                -(length(eyesup * vec2(1., 1.2) + vec2(.02, .05)) - .172)\n            ),\n            -(length(uvsym - vec2(.1, -.4)) - .2)\n        ),\n        min(\n            abs(length(uvsym - vec2(.14, -.175)) - .06) - .003,\n            length(pupils - vec2(.14, -.187)) - .045\n        )\n    );\n    \n    vec2 mouth = uv - vec2(.07, -.64);\n    float mouthd = max(\n        length(mouth * vec2(1.)) - .15,\n        -(length(mouth * vec2(1.) + vec2(-.055, .25)) - .4)\n    );\n    \n    float aangd = min(\n        min(\n            faced,\n            eyesupd\n        ),\n        min(\n            min(\n                eyebrowsd,\n                uvnosesidesd\n            ),\n            min(\n                min(\n                    mouthd,\n                    uvarrow3d\n                ),\n                min(\n                    uvarrowd,\n                    uvarrow2d\n                )\n            )\n        )\n    );\n    \n    return aangd;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y - .5 * vec2(iResolution.x / iResolution.y, 1);\n    uv *= 1.4;\n    \n    float eps = .005;\n    \n    float aangd = aangface(uv);\n    float facecircle = smoothstep(-eps, eps, aangd);\n\n    vec3 col = vec3(facecircle);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}