{"ver":"0.1","info":{"id":"NdX3z4","date":"1615553198","viewed":142,"name":"writing","username":"chromebanana","description":"trying to render text ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["text"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//thanks to Fabrice Neyret for algorhitm https://www.shadertoy.com/view/llySRh\n//and thanks to otaviogood for font texture\n//thanks  PrzemyslawZaworski for the hints https://www.shadertoy.com/view/4sBfRd\n\n#define C(c) U.x-=.5; O+= char(U,64+c)\n\n\nvec4 char(vec2 p, int c) \n{\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel0, p/16. + fract( vec2(c, 15-c/16) / 16. ), dFdx(p/16.),dFdy(p/16.) );\n}\n// textureGrad args are: font from iChanel1, char size?, utf mapping?, vertical position,     \n\n\n\nvoid mainImage( out vec4 O, vec2 uv )\n{\n    O = vec4(0.0);\n    uv /= iResolution.y;\n    vec2 position = vec2(.17, .40);\n    float FontSize = 14.;\n    vec2 U = ( uv - position)*64.0/FontSize; //find character position\n    C(5);C(9);C(7);C(5);C(14);C(-32);C(20);C(5);C(3);C(8); //ints -> chars, Every argument is another char\n    O = O.xxxx;\n}\n\n\n","name":"Image","description":"","type":"image"}]}