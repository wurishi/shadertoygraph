{"ver":"0.1","info":{"id":"X3fXDB","date":"1709899936","viewed":83,"name":"water plane displacement","username":"darkomtc","description":"forked to make it into watery plane","likes":2,"published":1,"flags":0,"usePreview":1,"tags":["texture","cloth","curtain","fabric","silk"],"hasliked":0,"parentid":"MffXRB","parentname":"curtain displacement texture"},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14;\n// Take this and multiply your UV by the resulting mat2 to get the rotation\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float sine = sin(angle), cosine = cos(angle);\n    return mat2( cosine, -sine,\n                 sine,    cosine );\n}\nvoid mainImage(out vec4 fragColor, vec2 fragCoord){\n    vec4 color = vec4(1.0,1.0,1.0,1.0);\n    float contrast = 0.1; //exposure\n    float brightness = 0.5; //set according to contrast\n    float zoom = 0.2;\n    float messiness = 1.0; //1.0 curtainy, 5.0 silky\n    float fall = 0.3;\n    float side = 0.5;\n    float chunks = 20.0; // 20, but adjust according to scale\n    float wave = 0.02; // 0.02\n    float waveRepeat = 8.0; // 8.0\n    \n    vec2 uvOrg = fragCoord/iResolution.xy;\n    vec3 viewDir = vec3(uvOrg.x - 1.0, uvOrg.y - 1., 0.5); // move X and Y to center and add fake Z   \n    vec2 uv = viewDir.xz / abs(viewDir.y); // drop XZ into Y: XYZ -> XY  \n    uv /= zoom;\n     \n    float t = 0.3*iTime;\n    float tsin = 0.5 * iTime * zoom;\n    \n\tuv.y += wave*sin(waveRepeat*uv.x-t);\n    float f = brightness + contrast*sin(messiness*(uv.x+uv.y+cos(3.0*uv.x+5.0*uv.y)+fall*t)+sin(chunks*(uv.x+uv.y-side*tsin)));\n    \n    \n    vec4 col = texture(iChannel0, uvOrg.xy + vec2(-1, 1) * f * 0.1);\n    fragColor = col;\n    \n}","name":"Image","description":"","type":"image"}]}