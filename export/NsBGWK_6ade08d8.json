{"ver":"0.1","info":{"id":"NsBGWK","date":"1617922495","viewed":243,"name":"Watercolor Rorschach with Perlin","username":"Ezra_Szanton","description":"Was trying to recreate this textured paper effect https://twitter.com/SkinnyShips/status/1380218534542733315?s=20, ended up with something different :) ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["perlinrorschachwatercolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//hash function taken from https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\nfloat smoothNoise(vec2 uv)\n{\n    vec2 lv = fract(uv);\n    vec2 id = floor(uv);\n    \n    lv = lv * lv * (3. - 2.*lv);\n    \n    float bl = hash12(id);\n    float br = hash12(id + vec2(1., 0.));\n    \n    float b = mix(bl, br, lv.x);\n    \n    \n    float tl = hash12(id + vec2(0., 1.));\n    float tr = hash12(id + vec2(1., 1.));\n    \n    float t = mix(tl, tr, lv.x);\n    \n    float c = mix(b,t, lv.y);\n    return c;\n}\n\nfloat perlin(vec2 uv)\n{\n    \n    float c = smoothNoise(uv * 4.* sin(1. * 0.01 + .113));\n    c += smoothNoise(uv * 8. * sin(1. * 0.12)) * 0.5;\n    c += smoothNoise(uv * 16. * sin(1. * 0.1 + 1.213)) * 0.25;\n    c += smoothNoise(uv * 32.* sin(1. * 0.042 + .213)) * 0.125;\n    c += smoothNoise(uv * 64. * sin(1. * 0.0037 + .113)) * 0.0625;\n    c /= 2.;\n    return c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n\n    uv *= 2.;\n    uv.x = abs(uv.x);\n    \n    vec3 blue = vec3(0.3, 0.35, 0.8);\n    \n    vec3 red = vec3(0.8, 0.35, 0.3);\n\n    vec3 white = vec3(0.8, 0.8, 0.7);\n\n    float slowTime = iTime / 2.;\n    \n    vec2 location = vec2(200. * perlin( vec2(floor(iTime/3.))));\n    \n    float val = smoothstep(0.26, 0.25, (perlin(uv/1. + location )) / 2.);\n    val = val * (1.5 + 0.6 * sin(slowTime) - length(uv));\n\n    vec3 col = vec3(0);\n\n    val = min(val, 1.);\n    val -= perlin(uv * 200.) * perlin(uv * 100.);\n    val = max(val, 0.);\n\n    if(val > 0.8){\n        col = blue;\n    } else {\n        col = white;\n    }\n\n    col = mix(white, blue, val);\n    col = mix(col, red, val * val * val * val * val);\n\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}