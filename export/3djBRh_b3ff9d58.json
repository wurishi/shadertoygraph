{"ver":"0.1","info":{"id":"3djBRh","date":"1589479439","viewed":68,"name":"Imagyx-Julia","username":"Imagyx","description":"Julia with Color-Palette ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n/*\n Formula by IQ, with added translation (qd) and elongation/compression (qc)\n*/\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d, in float qc, in float qd){\n    return a + b * sin(2.0 * 3.14159265359 * (c * t * qc + d  + qd));\n}\n\n/*\n   wrong z^2+c\n*/\nfloat julia(in vec2 ri, in vec2 c, in float time){\n    float zr = (ri.x-0.5)*2.25;\n    float zi = (ri.y-0.5)*2.5;\n    float r = c.x;\n    float i = c.y;\n    float max = time;\n    for(float k=0.0;k<max;k++){\n        float t = 1.35*zr*zr - zi*zi + r;\n        zi = 2.35*zr*zi + i;\n        zr = t;\n        if(zr*zr+zi*zi > 1000.0){\n            return k/max;\n        }\n    }\n    return 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float time = iTime;\n//    time = 0.0;\n    \n    // Coloring\n    float t2 = pow(uv.x, 0.5)*0.5 *-0.5*pow(uv.y,0.5);\n    vec3 col = pal(t2, vec3(0.5),vec3(0.25),vec3(0.5),vec3(0.8,0.5,0.2),3.0,time);\n    float u = 0.35+mod(time*0.25,0.75);\n    u = u*u*200.0;\n    float r= 0.4 + cos(time*0.37)*0.3;\n    vec2 c = vec2(sin(time)*r, cos(time)*r);\n    col = col*0.7 + col*vec3(julia(uv,c,u));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}