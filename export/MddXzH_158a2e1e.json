{"ver":"0.1","info":{"id":"MddXzH","date":"1457777279","viewed":307,"name":"fp nweyl tnoise","username":"MBR","description":"screen space triangle noise","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["screenspace","trianglenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// LICENSE: http://unlicense.org/\n\n// Math background: http://marc-b-reynolds.github.io/math/2016/02/24/weyl.html\n// Hash function:   http://marc-b-reynolds.github.io/math/2016/03/29/weyl_hash.html\n\n#define W0 0.5545497\n#define W1 0.308517\n#define W3 0.618034\n\n// 2D integer (offset by 0.5) -> ~triangle distribution\nfloat tnoise(in vec2 c)\n{   \n  c = c*fract(c*vec2(W0,W1));  // nested Weyl\n  float p  = c.x*c.y;          // combine 1D partial results\n  float i  = floor(p);         // integer part\n  float u0 = p-i;              // fractional part = sample 1\n  float u1 = fract(W3*i);      // simple Weyl from int part = sample 2\n  return 0.5*(u0+u1);          // combine samples\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2  p = fragCoord.xy;\n  float r = tnoise(vec2(p+0.5*vec2(iResolution.xy)));\n  vec4  c = vec4(vec3(r),1.0);\n    \n  fragColor = c;\n}","name":"Image","description":"","type":"image"}]}