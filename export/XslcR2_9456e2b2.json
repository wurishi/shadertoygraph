{"ver":"0.1","info":{"id":"XslcR2","date":"1490166454","viewed":108,"name":"SimpleSmiley","username":"NCSylvia","description":"Simple smiley face\nResource: Smiley Tutorial: Big WIngs  ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define sat(x) clamp(x, 0., 1.)\n\nvec4 createEyes(vec2 uv, vec2 mouse) {\n    \n    \n    //vec4 col = vec4(0.95,0.98,0.98,1);\n    vec4 irisCol = vec4(0.95,0.98,0.98,1);\n    vec4 col = mix(vec4(1.), irisCol, smoothstep(.1, .15, length(uv))); \n    float d = length(uv-mouse*.2);\t\t\t\t\t\t\t\t\t\n    col.rgb = mix(col.rgb, vec3(.07, .45, .18), smoothstep(.07, .06, d));\n    col.rgb = mix(col.rgb, vec3(.0), smoothstep(.04, .03, d));\n    // iris outline\n    \n    /*vec2 lookAt;\n    if(uv.x > 0.0) {\n        lookAt = -1.0*mouse+loc;\n    }\n    else {\n        lookAt = mouse+loc;\n    }*/\n    /*vec2 lookAt = mouse-loc;\n    float num = length(loc)*100.0/10.0;\n    if(length(lookAt) <.04){\n        return vec4(0,0,0,1);\n    }\n    if(length(lookAt) <.07){\n        return vec4(.08,.46,.05,1);\n    }\n    \n \treturn mix(vec4(1,1,1,1), vec4(0.95,0.98,0.98,1), num);  */\n    return col;\n\n    \n    \n}\n\n\nvec4 head(vec2 uv, vec2 mouse) {\n \n    if( length(uv) < 0.4 ){\n        if(length(uv) > 0.38) {\n             \n            return mix(vec4(0, 0, 0, 1), vec4(1.,1.,0.,1.), length(uv));\n            \n        }\n        if(length(uv-vec2(.15, .09))<.15){\n         \n           return createEyes(uv-vec2(.15, .09), mouse);\n        }\n        if(length(uv-vec2(-.15, .09))<.15){\n         \n           return createEyes(uv-vec2(-.15, .09), mouse);\n        }\n        if(length(uv-vec2(0, -.1))<.2){\n            if(uv.y < -.1) {\n            \treturn vec4(.93,.25,.25,1);\n            }\n        }\n        \n         return mix(vec4(1,1,0,1), vec4(.93,.79,.31,1), length(uv)*100.0/40.);\n        \n    }\n    else {\n        return vec4(0., 0., 0., 1.);\n    }\n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;;\n        \n        \n    vec2 mouse = iMouse.xy / iResolution.xy;\n    mouse -= .5;\n    if(mouse.x <= -0.5){\n        mouse = vec2(0,0);\n    }\n                     \n    \n    fragColor = head(uv,mouse);\n            \n            \n}","name":"Image","description":"","type":"image"}]}