{"ver":"0.1","info":{"id":"fdBBWD","date":"1646291772","viewed":60,"name":"SimpleBlackHole","username":"BadBadDog","description":"Simple black hole","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["darkspaceblackhole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat vec2deg( vec2 uv )\n{\n\treturn atan(uv.x,uv.y);\n}\n\n\n\n\nvec3 BlackHole(vec2 uv)\n{\n\tfloat scale = 2.0;\n    float tilt = -0.3;\n\n    uv = (vec2(0.5,0.5) - uv) * 2.0;\n    uv.x = distance(vec2(0.0, 0.0), uv) * sin( vec2deg(uv) + tilt );\n    uv.y = distance(vec2(0.0, 0.0), uv) * cos( vec2deg(uv) + tilt );\n    \n    \n\tvec3 col = vec3(1.0, 0.7, 0.2);\n\tfloat body = 0.0*smoothstep( 51.0, 50.0, scale * 100.0 * distance(vec2(0.0, 0.0), uv) );\n    \n    vec2 dmult = vec2(1.0,3.0);\n    float disc = smoothstep( 91.0, 90.0, scale * 100.0 * distance(vec2(0.0, 0.0), uv*dmult) ) * smoothstep( 61.0, 62.0, scale * 100.0 * distance(vec2(0.0, 0.0), uv*dmult) );\n    \n    \n    \n    \n\treturn col * max(body, disc);\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n// Time varying pixel color\n    vec3 col = BlackHole( uv );\n\n\n\n\n\n\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}