{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define HARMONICS 32.0\n\n// http://en.wikipedia.org/wiki/Triangle_wave\n\t\nfloat wave( vec2 uv, float time){\n\t\n\tfloat t = (time/16.0-uv.x) * 8.0;\n\n\tfloat x=sin(t);\n\t\n\tfor (float i = 1.0; i <= HARMONICS; i+=1.0) {\n\t\t\n\t\tfloat h = i * 2.0 + 1.0;\n\t\tfloat wave = sin(t*h)/pow(h,2.0);\n\t\t\n\t\tif (mod(i,2.0) == 0.0) x += wave;\n\t\telse x -= wave;\n\t\t\n\t}\n\n\tx = x/2.0;\n\t\n\tfloat y = uv.y*2.0-1.0;\t\n\t\t\n\treturn (x < y) ? 1.0 : 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4( vec3(wave(uv, iTime)), 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsB3RG","date":"1389908889","viewed":657,"name":" Triangle wave from harmonics","username":"aki","description":"Approximate a triangle wave with additive synthesis by adding odd harmonics of the fundamental, multiplying every (4nâˆ’1)th harmonic by âˆ’1 (or changing its phase by Ï€), and rolling off the harmonics by the inverse square of their relative [Wikipedia]","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["wave","triangle","harmonics"],"hasliked":0,"parentid":"","parentname":""}}