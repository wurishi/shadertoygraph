{"ver":"0.1","info":{"id":"DtcGzX","date":"1683284266","viewed":144,"name":"Audio oscilloscope","username":"GayaTech","description":"Simulates the glow of an oscilloscope","likes":1,"published":1,"flags":4,"usePreview":0,"tags":["oscilloscope","interactive","audio","microphone","electronics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float intensity;\n    float intensity2;\n\n    for (int i = -32; i <= +32; i++)\n    {\n        float x_a = float(i) / 4.0 + fragCoord.x;\n        float x = x_a / iResolution.x;\n        float y = 0.0;\n        y = texture(iChannel0, vec2(x * 0.5, 0.75)).x;\n        vec2 pos = vec2(x_a, y * iResolution.y);\n        float dist = distance(pos, fragCoord);\n        intensity += exp(-(dist * dist) / 16.0) / 24.0;\n    }\n\n    // Output to screen\n    fragColor = vec4(intensity2, intensity, 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}