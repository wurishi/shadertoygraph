{"ver":"0.1","info":{"id":"M3lGRS","date":"1707628991","viewed":243,"name":"Multilayer of soul substance","username":"dieku","description":"Webcam + Sound Channels \n\nWebcam is repeated by the iterations quantity ","likes":2,"published":1,"flags":6,"usePreview":0,"tags":["sound","colors","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"webcam caleidoscope\" by hamoid. https://shadertoy.com/view/ltSfWw\n// 2024-02-11 05:19:04\n\nfloat powEx(float base, float exp){\n    float x = 1.0;\n    \n    for(int i = 0; i<int(exp); ++i){\n        x *= base;\n    }\n    \n    return x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // IDK what i do man XD \n    \n    // 4 way flip of texture coords\n\tvec2 uvA = fragCoord.xy / iResolution.xy; // Get the right position.\n    \n    vec2 uvB = uvA;   uvB.x = 1.0 - uvB.x;    // Generate new position, modify his x axis, fixing position by 1.0\n    vec2 uvC = uvA;   uvC.y = 1.0 - uvC.y;    // Generate new \n    vec2 uvD = uvB;   uvD.y = 1.0 - uvD.y;\n    \n        \n    // texture(iChannel0, vec2(0, 0))+\n             \n    // combine 4 texture samples\n    vec4 c = texture(iChannel0, vec2(0, 0));\n    \n    float iterations = 30.0;\n    float someX = 1.0;\n    float someY = 1.0;\n    \n    for (float i = 0.0; i < iterations; ++i) {\n        vec2 uvIteration = uvA;\n        \n        // someX += 0.5 * pow(-1.0, i+1.0);\n        // someY += 0.5 * pow(-1.0, i+2.0);\n        \n        uvIteration.x = someX + uvA.x;\n        uvIteration.y = someY + uvA.y;\n        \n        \n        c += texture(iChannel0, uvIteration);\n    }\n             // texture(iChannel0, uvB) + \n             // texture(iChannel0, uvA) +\n             // texture(iChannel0, uvC) -\n             // texture(iChannel0, uvD) \n             ; \n             \n             // texture(iChannel0, uvB) -\n        \t // texture(iChannel0, uvC) -\n             // texture(iChannel0, uvD);\n    \n    // Get microphone amp\n    float v1 = 10.0*texture(iChannel2, vec2(0.1, 0.0)).x;\n    float v2 = 10.0*texture(iChannel2, vec2(0.2, 0.0)).x;\n    float v3 = 10.0*texture(iChannel2, vec2(0.4, 0.0)).x;\n    \n\tfragColor = vec4(\n        0.5 + 0.5 * sin(c.r*5.0+v1), \n        0.5 + 0.5 * sin(c.g*5.0+v2), \n        0.5 + 0.5 * sin(c.b*5.0+v3), \n        1.0);\n    \n    /*\n    fragColor = vec4(\n        0.5 + 0.5 * sin(c.r*5.0), \n        0.5 + 0.5 * sin(c.g*5.0), \n        0.5 + 0.5 * sin(c.b*5.0), \n        1.0); */\n}","name":"Image","description":"","type":"image"}]}