{"ver":"0.1","info":{"id":"cdBSDm","date":"1670363051","viewed":71,"name":"Simple mandelbrot 02 / Animated","username":"fpiaggio","description":"First test animating a mandelbrot\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float MAX = 128.0;\nfloat drawMandelbrot(vec2 uv){\n    vec2 c = 2.0 * uv - vec2(0.0, 0.0);\n    c = c / pow(iTime*0.5, 4.6) - vec2(0.65, 0.45);\n    vec2 z = vec2(0.0);\n    \n    for(float i; i < MAX; i++){\n        z = mat2( z, -z.y, z.x ) *z + c;\n        if(dot(z,z) > 5.0) return i / MAX;\n    }\n    \n    return 1.;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord -.5*iResolution.xy )/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    float m = drawMandelbrot(uv);\n    col += m;\n    col = pow(col, vec3(.85));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}