{"ver":"0.1","info":{"id":"XttSWs","date":"1482189505","viewed":98,"name":"The Muscles from Brussels","username":"magnanimous","description":"non-stop awesome","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["muscles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //Textures are image data that is taken as input into the shader. Below, you will see 4 \"channels\" for textures.\n    //All texture coordinates range from (0, 0) in the bottom left to (1.0, 1.0) in the top right.\n    //UV contains our normalized coordinates going from (0, 0) in the bottom left of the output to (1.0, 1.0) in the top right.\n    vec4 texture1 = texture(iChannel0, uv); \n    vec4 texture2 = texture(iChannel1, uv);\n    uv.x = (uv.x*(0.5 + 0.5*sin(iTime)))/0.1; \n    uv.y = (uv.y*(0.5 + 0.5*sin(iTime)))/0.1; \n \tvec4 vidTexture = texture(iChannel2, uv);\n    float greenChannel = vidTexture.g;\n    float grad = 0.5+0.5*sin(iTime);\n        if (vidTexture.r < 0.5 && vidTexture.g > 0.4 && vidTexture.b < 0.5 && vidTexture.a > 0.9 )\n            {\n                vidTexture = (texture1*grad + texture2*(1.0-grad));\n            }\n\n    \n    fragColor = vidTexture;\n    \n    //texture takes a channel parameter and a texture coordinate parameter.\n    //If the texture coordinates provided to this function are outside the 0..1 range, the texture wrap rules apply.\n    //Try clicking the gear on iChannel1 to change its wrapping and filtering options.\n}","name":"Image","description":"","type":"image"}]}