{"ver":"0.1","info":{"id":"WtGSWm","date":"1678239630","viewed":98,"name":"circle_pattern","username":"mirumoreem","description":"temp","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["temp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ev(float a) {\n    return step(1.0, mod(a, 2.0));\n}\nfloat od(float a) {\n    return  step(mod(a, 2.0),1.0);\n}\n\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898+floor(iTime),78.233)))*\n        4378.5453123);\n}\n\nvec2 tile(vec2 st, float s){\n    st *= s;\n    vec2 uvf = fract(st);\n    vec2 uvi = floor(st);\n    float index = uvi.x + (uvi.y * s) ;\n    vec2 uv = vec2(index) ;\n    return  uv ;\n}\n\nvec2 rot(vec2 st, float angle, float s){\n    st *= s;\n    st = fract(st);\n   \n    st -= 0.5;\n    st =  mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle)) * st;\n    st += 0.5;\n    return st;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord - iResolution.xy) / iResolution.y;\n   \n    \n    \n    \n    //uv.y *= u_resolution.y/u_resolution.x;\n    vec3 color = vec3(0.0);\n    \n    \n\n    //tile;\n    float s = 8.0;\n    vec2 uv2 = tile(uv, s);\n    float bg = (uv2.x+uv2.y) /(100.0*s);\n    \n    vec2 st = rot(uv, 3.1415*0.5* (floor(random(uv2)*10.0)), s);\n    \n    //uv *=step;\n    //vec2 uvf = fract(uv);\n    //vec2 uvi = floor(uv);\n    \n    //float index = uvi.x + (uvi.y * step) ;\n    \n    //vec2 st = vec2(uvi.x, index) ;\n    //\n    \n    vec3 colorA = vec3(random(uv2+vec2(1.0)), random(uv2), random(uv2));\n    vec3 colorD = vec3(243,85,136)/255.0;\n    vec3 colorE = vec3(25,223,215)/255.0;\n    vec3 colorB = vec3(25,223,192)/255.0;\n    vec3 colorC = vec3(255,245,145)/255.0;\n    vec3 b = vec3(0.518,0.756,0.930);\n    b = vec3(0.18,0.18,0.2730);\n    \n    vec3 cA =vec3(1.0)* step(1.0, mod(random(uv2)*15., 3.0))+ colorB * step(1.0, mod(random(uv2)*15., 2.0)) + colorC * step(mod(random(uv2)*15., 2.0), 1.0);\n    vec3 cB =colorD * step(1.0, mod(random(uv2)*10., 2.0)) + colorE * step(mod(random(uv2)*10., 2.0), 1.0);\n    vec3 cC =colorC * step(1.0, mod(random(uv2)*13., 2.0)) + colorE * step(mod(random(uv2)*13., 2.0), 1.0);\n    vec3 cD =vec3(1.0)* step(1.0, mod(random(uv2)*13., 3.0))+ colorB * step(1.0, mod(random(uv2)*13., 2.0)) + colorD * step(mod(random(uv2)*13., 2.0), 1.0);\n    vec3 cE =vec3(1.0)* step(1.0, mod(random(uv2)*14., 3.0))+ colorE * step(1.0, mod(random(uv2)*14., 2.0)) + colorB * step(mod(random(uv2)*14., 2.0), 1.0);\n    \n    float d = length(st);\n    float d1 = length(1.0-st);\n    float d2 = length(vec2(1.0,0.0)-st);\n    float d3 = distance(vec2(0.5),st);\n    \n    float c = smoothstep(0.45, 0.5, d)- smoothstep(0.5, 0.55, d);\n    float c1 =  smoothstep(0.45, 0.5, d1)- smoothstep(0.5, 0.55, d1);\n    \n    float c2 =  smoothstep(0.2, 0.15, d2);\n    c2 *= step(1.0, mod(random(uv2)*10., 2.0));\n    \n    float c4 =  smoothstep(0.2, 0.15, d1);\n    c4 *= step(1.0, mod(random(uv2)*15., 3.0));\n    \n    \n    float c3 = smoothstep(0.2, 0.15, d3) - smoothstep(0.15, 0.1, d3);\n    c3 *= step(1.0, mod(random(uv2)*10., 2.0));\n    \n    \n    float c5 = smoothstep(0.1, 0.05, d3) ;\n    c5 *= step(1.0, mod(random(uv2)*12., 2.0));\n    \n    color = vec3(c1*cE + c2*cE +c*cD + c3*cC+c4*cB+c5*cA );\n    \n    vec3 bgc = (vec3(1.0) - vec3(c1 + c2 +c+ c3+c4+c5))* b;\n    \n    \n    \n\n    // Output to screen\n    fragColor = vec4(color+bgc,1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}