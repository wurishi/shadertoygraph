{"ver":"0.1","info":{"id":"MssfDl","date":"1498924104","viewed":151,"name":"radial gradiant with focale","username":"tshirtman","description":"forked from https://www.shadertoy.com/view/ldtSzM and @FabriceNeyret2 suggestions, trying to make it more general, missing now is the ability to use an ellipse basis instead of a circle.\nUse mouse to move the focale point.\n\nnow with choice of spread algo.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","gradiant"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 r = vec2(.5, .25);\nconst vec4 yellow = vec4 (1, 1, 0, 1),\n             blue = vec4 (0, 0, 1, 1);\n\n#define PAD 1\n#define REPEAT 2\n#define REFLECT 3\n\n#define spread REFLECT\n\nvoid mainImage(out vec4 O, vec2 U ){\n    vec2 f = iMouse.xy / iResolution.xy,\n         p = U / iResolution.xy,\n         d = f - p,\n         c = vec2(\n            cos(iTime) * .5 * cos(iTime / 4.) - .5,\n            sin(iTime) * .25 - .5\n    \t ) + f;\n        \n    float l = length(d);\n    \n    d /= l;\n    c /= l;\n    r /= l;\n\n    float cd = dot(c, vec2(-d.y, d.x)),\n          cl = sqrt(r.x * r.x - cd * cd) + dot(c, d);\n\n    float a_cl = 1. / cl;\n    \n    // special case for when focale point is outside of radius\n    if (a_cl < 0.)\n        a_cl = 1.;\n\n    switch (spread) {\n        case PAD:\n            a_cl = min(1., a_cl);\n        \tbreak;\n    \n    \tcase REPEAT:\n    \t\ta_cl = mod(a_cl, 1.0);\n        \tbreak;\n    \n    \tcase REFLECT:\n    \t\tfloat n = floor(a_cl);\n    \t\tfloat r = fract(a_cl);\n    \t\tif (mod(n, 2.) >= 1.)\n       \t\t\ta_cl = 1. - r;\n            else\n       \t\t a_cl = r;\n        break;\n     }\n    \n    O = mix(yellow, blue, a_cl);\n}","name":"Image","description":"","type":"image"}]}