{"ver":"0.1","info":{"id":"tdlSz2","date":"1551718826","viewed":81,"name":"Shader10 - Unusual shape & color","username":"EmperorLem","description":"An unusual shape in with unusual colors","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 background = vec3(0.1,0.1,1.0);\nvec3 orange = vec3(1.0,0.0,0.0);\n\nfloat createCircle(vec2 uv)\n{\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float dist = length(uv);\n    float ratio = 0.3;\n    float rate = clamp(sin(20.0 * ratio * iTime)*ratio , 0.25, 0.3);\n        \n    float angle = (atan(uv.y, uv.x) + iTime * 3.0);\n        \n    float value = smoothstep( rate,ratio = 0.2 ,dist);\n    \n    float radius = 0.0;\n    radius = smoothstep(-1.0, 20.0, cos(angle * 3.0)) * 10.0 + 0.15;\n    \n    value = 1.0 - step(radius, dist) + clamp(sin(20.0 * radius * iTime) , 0.25, 0.30);\n    \n    return value * radius * 5.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    background *= sin(iTime * 1.0) * 5.0 + 1.0 /0.5;\n    \n    vec3 mixed = mix(background, orange, vec3(createCircle(uv)));\n    \n    // Output to screen\n    fragColor = vec4(mixed,1.0);\n}","name":"Image","description":"","type":"image"}]}