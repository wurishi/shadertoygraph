{"ver":"0.1","info":{"id":"Mscyzs","date":"1519814465","viewed":302,"name":"Moiré unreal","username":"BenWheatley","description":"Moiré pattern from interfering ripples; not physically realistic (no doppler shifting from motion), just a bit of fun.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["moire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * \"Moiré unreal\" by Ben Wheatley - 2018\n * License MIT License\n * Contact: github.com/BenWheatley\n */\n\nfloat wave(float x) {\n    return (1.0+sin(x))/2.0;\n}\nfloat r(vec2 coordinate, vec2 offset) {\n    float dx = coordinate.x - offset.x;\n    float dy = coordinate.y - offset.y;\n    return sqrt(dx*dx + dy*dy);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Centered pixel coordinates\n    vec2 uv = fragCoord/iResolution.xy - vec2(0.5, 0.5);\n    uv *= iResolution.xy;\n    uv /= iResolution.y; \n\t\n    // Aliases for compact notation\n    float t = iTime*0.4, t2 = iTime*2.0;\n    float r1 = r(uv, 0.7*vec2(sin(0.66*t),\t\t0.3*sin(0.5*t+0.9)));\n    float r2 = r(uv, 0.2*vec2(sin(0.24*t+1.1),\t0.4*sin(0.6*t+0.1)));\n    \n    float b = wave(30.0*r1-3.0*t2) + wave(20.0*r2-3.0*t2);\n    b += wave(30.0*uv.x)/2.0;\n    \n    // Let it oversaturate; I experimented with other values, but my first guess was the best\n    b /= 2.0;\n\t\n    \n    // Output to screen\n    fragColor = vec4(b, b, b,1.0);\n}","name":"Image","description":"","type":"image"}]}