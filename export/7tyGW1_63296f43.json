{"ver":"0.1","info":{"id":"7tyGW1","date":"1637611964","viewed":494,"name":"Waterfall 5","username":"guil","description":"Simple fluid simulation using only velocity and density (no pressure).\nAdvection has been replaced with Mykhailo Moroz reintegration algorithm.","likes":18,"published":3,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define T1(U) texture(iChannel0,U/R)\n\nvoid mainImage( out vec4 C, in vec2 U )\n{   \n\n    float m = .2*T1(U).w;//masse\n    float v = length(T1(U).xy)/10.;//velocity\n    \n    \n    C = m*vec4(1,1.2,2,1);\n    \n    if (U.x < 0.2*R.x&&U.y < 0.5*R.y) C = vec4(0.5);\n    if (U.x < 0.4*R.x&&U.y < 0.3*R.y) C = vec4(0.5);\n    \n}  ","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define dt .1\n#define dt1 .4\n#define g .4\n#define l 4.\n#define nu 0.\n#define kappa .0\n#define h 2\n#define r 1.3\n\nvec2 R;\nvec4 Mouse;\nfloat t;\nint Frame;\n\n#define T(p) texture(ch,(p)/R)\n\nvoid sim( out vec4 Q, in sampler2D ch, in vec2 U )\n{   \n    \n    vec4 a = T(U+vec2(1,0)),b = T(U+vec2(0,1)),c = T(U+vec2(-1,0)),d = T(U+vec2(0,-1)),e=.25*(a+b+c+d), dx=a-c, dy=b-d;\n    \n    Q = T(U);\n\n    vec2 gw = vec2(dx.w,dy.w);//density gradient\n    Q.xy -= dt *((Q.w-1.)*l*gw + vec2(0.,g));//forces\n    Q -= dt * vec4(nu,nu,0,kappa) * 4.*(Q-e);//diffusion\n\n    //Boundaries\n    if (Frame < 1) Q = vec4(0,0,1,0);\n    if (U.x < 1.||U.y < 1.) Q.xy *= 0.;\n    if (R.x-U.x < 1.||R.y-U.y < 1.) Q.w *= 0.;\n    if (U.x < 0.2*R.x&&U.y < 0.5*R.y) Q.xy *= 0.;\n    if (U.x < 0.4*R.x&&U.y < 0.3*R.y) Q.xy *= 0.;\n \tif (length(U-vec2(0,0.9*R.y)) < 8.) {Q.xy= Q.xy*.5+.5*vec2(1.+0.4*sin(1.5*t),0); Q.w = 1.;};\n    \n    //click mouse to add a circular obstacle\n    if(length(Mouse.xy - U) < 20. && Mouse.z > 0.5)\n        Q.xyw = vec3(0,0,1);\n    \n    Q = clamp(Q, vec4(-3,-3,0,0), vec4(3,3,0,5));\n}\n\nvoid reint( out vec4 Q, in sampler2D ch, in vec2 U )\n{ \n        Q = vec4(0);\n        for (int x = -h; x <= h; x++)\n        for (int y = -h; y <= h; y++)\n        {\n            vec2 u = vec2(x,y);\n            vec4 a = T(U+u);\n            vec2 w1 = clamp(U+u+a.xy*dt1-0.5*r,U - 0.5,U + 0.5),\n                 w2 = clamp(U+u+a.xy*dt1+0.5*r,U - 0.5,U + 0.5);\n            float m = (w2.x-w1.x)*(w2.y-w1.y)/(r*r);\n            Q.xy += m*a.w*a.xy;\n            Q.w += m*a.w;\n        }\n        if (Q.w>0.)\n            Q.xy/=Q.w;\n\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 Q, in vec2 U )\n{      \n    R = iResolution.xy; t = iTime; Mouse = iMouse; Frame = iFrame;\n    reint( Q, iChannel0, U );\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 Q, in vec2 U )\n{      \n    R = iResolution.xy; t = iTime; Mouse = iMouse; Frame = iFrame;\n    sim( Q, iChannel0, U );\n    \n}","name":"Buffer B","description":"","type":"buffer"}]}