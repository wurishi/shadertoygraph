{"ver":"0.1","info":{"id":"NdsBDj","date":"1645411139","viewed":56,"name":"Circle Shader Using Distance","username":"maxerpants","description":"Use the mouse to control the size of the circle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float rx = iResolution.x / 2.0;\n    float ry = iResolution.y / 2.0;\n    \n    vec4 m = (iMouse / iResolution.x) / 8.7;\n    \n    float radius = m.x + m.y;\n\n    // Output to screen\n    float v = 1.0 - sqrt(((rx - fragCoord.x) * (rx - fragCoord.x)) + ((ry - fragCoord.y) * (ry - fragCoord.y))) / ((iResolution.x + iResolution.y)/(1.0/radius));\n    if(v > 0.0){\n        fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n    else{\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}