{"ver":"0.1","info":{"id":"MdyyWR","date":"1521579400","viewed":290,"name":"thank-you notes (MM3 ver.)","username":"Telperion","description":"\"thankyou.frag\"\nModster Mash 3 version, 2018-03-18\n\nUsed in 偽物 to flicker between textures in a \"memory recall\" sort of way.\nThe textures in question were B/W images spelling out \"thank you\" in English, Japanese, Frumsian scripts, and goroawase.","likes":5,"published":1,"flags":32,"usePreview":1,"tags":["epilepsy","fade","warning","overlay","flash","memory","persist","recall","flashback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Pass-through layer\n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define M_PI (3.14152965359)\n#define _DEBUG (false)\n#define _INTERNALRANDOM (true)\n\n\nfloat gray( vec3 c ) {\n  return 0.299 * c.x + 0.587 * c.y + 0.114 * c.z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float persistence   = 0.95;     // Decay of frame, per frame\n    float minSize       = 0.7;      // Sprites can range from 1.0x (mostly) to this value\n    float centerizer    = 0.9;      // Scale allowable center region by this much\n    float randomizerA   = 0.5;      // [0, 1) please\n    float randomizerB   = 0.5;      // [0, 1) please\n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    \n    // i`ve pscndu rvndcm nnmbcr gay\n    // [-1, +1]\n    float prngA = mod(randomizerA*10000.0, 2.0) - 1.0;\t\t\t// float: [-1, +1)\n    float prngB = mod(randomizerA*31622.7, 2.0) - 1.0;\t\t\t// float: [-1, +1) \n    float prngC = mod(randomizerA*100000.0, 2.0) - 1.0;\t\t\t// float: [-1, +1) \n    float prngD = mod(randomizerA*316227.8, 2.0) - 1.0;\t\t\t// float: [-1, +1) \n    float texSel = mod(randomizerB * 18.0, 3.0);\t\t\t\t// texture select, \"int\": 0, 1, or 2 (0 thru 5) in simfile\n    float altern = floor(randomizerB * 3.0);\t\t\t\t\t// color channel,  \"int\": 0, 1, or 2\n\n    if (_INTERNALRANDOM)\n    {\n        // don't @ me\n        float iRandomizer = iTime;\n        prngA = mod(log(iRandomizer)*10000.0, 2.0) - 1.0;\n        prngB = mod(log(iRandomizer)*31622.7, 2.0) - 1.0;\n        prngC = mod(log(iRandomizer)*100000.0, 2.0) - 1.0;\n        prngD = mod(log(iRandomizer)*316227.8, 2.0) - 1.0;\n        texSel = mod(log(iRandomizer)*1000000.0, 6.0);\n        altern = mod(log(iRandomizer)*3162277.9, 3.0);\n    }\n\n    if (_DEBUG)\n    {\n        prngA = 0.0;\n        prngB = 0.0;\n        prngC = 0.0;\n        prngD = 0.0;\n        texSel = 0.5;\n        altern = 0.0;\n    }\n    \n    // Randomize the thank-you note's size and position with bias toward a centered image that could be full-frame or shrunk down\n    vec2 size   = vec2(sin(prngC*M_PI/2.0), sin(prngC*M_PI/2.0)) * 0.25 * (1.0-minSize) + 0.25*(1.0 + minSize);\n    vec2 center = vec2(pow(prngA,     5.0), pow(prngB,     5.0)) *  0.5 *   centerizer  +  0.5;\n\n    // Map the size/pos-transformed thank-you note coordinates to my image\n    vec2 convo  = (uv - center + size)/(2.0*size);\n    vec4 texOrig = texture(iChannel0, uv);\n    vec4 texIncl = vec4(0.0);\n    // Select one of the thank-you notes at random\n         if (texSel < 1.0) {texIncl = texture(iChannel1, convo);}\n    else if (texSel < 2.0) {texIncl = texture(iChannel2, convo);}\n    // In the simfile version, this continues up to 6 source thank-you note textures\n    else                   {texIncl = texture(iChannel3, convo);}\n    \n    // Hard crop the thank-you note texture coordinates\n    float ta = gray(texIncl.rgb);\n    if ((convo.x <= 0.0) || (convo.y <= 0.0) || (convo.x >= 1.0) || (convo.y >= 1.0))\n    {\n       ta = 0.0;\n    }    \n    \n    // Only permit R, G, or B channel (to harmonize with Ky's telephone effect in the adjacent section)\n    vec4 colorizer = vec4(0.0,0.0,0.0,1.0);\n         if (altern < 1.0)  {colorizer[0] = 1.0;}\n    else if (altern < 2.0)  {colorizer[1] = 1.0;}\n    else                    {colorizer[2] = 1.0;}\n    texIncl = texIncl * colorizer;\n    \n    // Normal-blend the thank-you note onto my own last frame (faded by value of persistence)\n    fragColor = vec4(texIncl.rgb*ta + texOrig.rgb*persistence*(1.0-ta), texOrig.a + ta*(1.0 - texOrig.a));\n}","name":"Buf A","description":"","type":"buffer"}]}