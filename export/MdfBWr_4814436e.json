{"ver":"0.1","info":{"id":"MdfBWr","date":"1495714111","viewed":1441,"name":"Menger sponge tour","username":"urbans","description":"menger","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mengersponge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float basic_box(vec3 pos, vec3 b){\n    vec3 d = abs(pos) - b;\n    return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\n\nfloat map_menger5(vec3 p){\n\n\tfloat main_width_b = 4.0;\n\tfloat inf = 50.0;\n\n    float hole_x, hole_y, hole_z;\n    float hole_width_b = main_width_b / 3.0;\n    \n    float menger = basic_box(p, vec3(main_width_b));\n    \n    for (int iter=0; iter<5; iter++){\n\n\t\tfloat hole_distance = hole_width_b * 6.0;\n \n        vec3 c = vec3(hole_distance);\n        vec3 q = mod(p + vec3(hole_width_b), c) - vec3(hole_width_b);\n\n        hole_x = basic_box(q, vec3(inf, hole_width_b, hole_width_b));\n        hole_y = basic_box(q, vec3(hole_width_b, inf, hole_width_b));\n        hole_z = basic_box(q, vec3(hole_width_b, hole_width_b, inf));\n\n        hole_width_b = hole_width_b / 3.0;        // reduce hole size for next iter\n        menger = max(max(max(menger, -hole_x), -hole_y), -hole_z); // subtract\n\n    }\n\n\treturn menger;\n\n}\n\n\nfloat trace(vec3 origin, vec3 ray){\n    \n    float t = 0.0;\n    for (int i=0; i<32; ++i){\n        vec3 p = origin + ray * t;\n        float d = map_menger5(p);\n        t += d;\n    }\n\treturn t;\n}\n\nmat2 rotate(float theta){\n    return mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    // normalize coords\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    // convert coords from 0,1 to -1,1\n    uv = uv * 2.0 - 1.0;\n    \n    // fix aspect\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ray = normalize(vec3(uv.x, uv.y, 1.0));\n    vec3 origin = vec3(0.0,0.0,-4.0 -5.2*sin(iTime * 0.20));\n\n    float theta;\n    theta = iTime / 5.0;\n    //theta -= 5.0 * iMouse.x/iResolution.x;\n    ray.yz *= rotate(theta);\n    ray.xy *= rotate(theta);\n    origin.yz *= rotate(theta);\n    origin.xy *= rotate(theta);\n    \n    float t = trace(origin, ray);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.05);\n    vec3 fc = vec3(fog) * vec3(0.8+0.2*sin(iTime * 0.1), 0.8+0.2*sin(iTime * 1.0),0.9+0.1*cos(iTime*1.0));\n\tfragColor = vec4(fc,1.0);\n\n}\n\n","name":"Image","description":"","type":"image"}]}