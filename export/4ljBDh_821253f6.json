{"ver":"0.1","info":{"id":"4ljBDh","date":"1515592529","viewed":87,"name":"Feu","username":"Simeon","description":"exercice utilisant buffer A","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["feu"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Image\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        vec2 uv = fragCoord.xy / iResolution.xy;\n        fragColor = vec4(texture(iChannel0,uv).r);\n    \tfragColor.a = 1.0;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// BufA\n// iChannel0 : Buffer A\n// iChannel1 : grey noise texture\n\nvec2 hash( vec2 p ) { p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))); return fract(sin(p)*18.5453); }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    if(uv.y <= 0.01)\n    {\n        if(iTime <= 1.0)\n            fragColor = texture(iChannel1,1.0-uv);\n        else\n        {\n            float o = hash(texture(iChannel0,uv).rr).x;\n            float noise = (sin(iTime+6.2831*o));\n            fragColor = texture(iChannel0,uv);\n            fragColor.r += noise/3.0;\n        }\n    }\n    else\n    {\n        vec2 ps = 1.0 / iResolution.xy;\n        fragColor = (  texture(iChannel0,uv+vec2(-ps.x,-ps.y))\n                     + texture(iChannel0,uv+vec2(0.0,-ps.y))\n                     + texture(iChannel0,uv+vec2(ps.x,-ps.y)))/3.0 - 3.0/255.0;\n    }\n}\n\n\n","name":"Buf A","description":"","type":"buffer"}]}