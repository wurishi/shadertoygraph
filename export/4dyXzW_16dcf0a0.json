{"ver":"0.1","info":{"id":"4dyXzW","date":"1464226473","viewed":197,"name":"SDF Name","username":"hypothete","description":"Working off of https://www.shadertoy.com/view/MsKSRh SDF visualizer by daseyb\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","displacement","sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"////////////////////////\n// Settings\n////////////////////////\n#define VIS_STEP_SIZE 10.0\n#define FALL_OFF 0.025\n#define GRADIENT_MOVEMENT_SPEED 0.0\n#define SOLID_INSIDE false\n\n\n// I recommend http://mercury.sexy/hg_sdf/ for more primitives and operations.\n////////////////////////\n// Utility Methods\n////////////////////////\nfloat vmax(vec2 v) {\n\treturn max(v.x, v.y);   \n}\n\n////////////////////////\n// Operations\n////////////////////////\nfloat opUnion(float d1, float d2) {\n    return min(d1, d2);\n}\n\nfloat opIntersection(float d1, float d2) {\n    return max(d1, -d2);\n}\n\nfloat opUnionSoft(float a, float b, float r) {\n\tfloat e = max(r - abs(a - b), 0.0);\n\treturn min(a, b) - e*e*0.25/r;\n}\n\nfloat opUnionChamfer(float a, float b, float r) {\n\treturn min(min(a, b), (a - r + b)*sqrt(0.5));\n}\n\nfloat opUnionRound(float a, float b, float r) {\n\tvec2 u = max(vec2(r - a,r - b), vec2(0));\n\treturn max(r, min (a, b)) - length(u);\n}\n\nfloat opSubtract(float a, float b){\n\treturn max(a, -b);\n}\n\nfloat displacement(vec2 p, float scale, float period, float speed){\n     return scale*sin(period*p.x+iTime*0.7*speed)*sin(0.6*period*p.y+iTime*0.8*speed);\n}\n\n////////////////////////\n// Primitives\n////////////////////////\nfloat sdBox(vec2 p, vec2 pos, vec2 e) {\n\tvec2 d = abs(p-pos)-e;\n    return length(max(d, vec2(0))) + vmax(min(d, vec2(0)));\n}\n\nfloat sdCircle (vec2 p, vec2 pos, float r) {\n\treturn length(p - pos) - r;\n}\n\n////////////////////////\n// Scene\n////////////////////////\nfloat scene(vec2 p) {\n    float cursorD = sdCircle(p, iMouse.xy, 50.0);\n    vec2 letterSize = iResolution.xy *vec2(0.04,0.08);\n    float staticD = 0.;\n    float letterH1= sdBox(p, iResolution.xy * vec2(0.1, 0.5), letterSize);\n    float letterY = sdBox(p, iResolution.xy * vec2(0.2, 0.5), letterSize);\n    float letterP = sdBox(p, iResolution.xy * vec2(0.3, 0.5), letterSize);\n    float letterO = sdBox(p, iResolution.xy * vec2(0.4, 0.5), letterSize);\n    float letterT1= sdBox(p, iResolution.xy * vec2(0.5, 0.5), letterSize);\n    float letterH2= sdBox(p, iResolution.xy * vec2(0.6, 0.5), letterSize);\n    float letterE1= sdBox(p, iResolution.xy * vec2(0.7, 0.5), letterSize);\n    float letterT2= sdBox(p, iResolution.xy * vec2(0.8, 0.5), letterSize);\n    float letterE2= sdBox(p, iResolution.xy * vec2(0.9, 0.5), letterSize);\n    \n    letterH1 = opSubtract(letterH1,sdBox(p, iResolution.xy * vec2(0.1, 0.45), letterSize.yy/2.));\n    letterH1 = opSubtract(letterH1,sdBox(p, iResolution.xy * vec2(0.1, 0.55), letterSize.yy/2.));\n    \n    letterY = opSubtract(letterY,sdBox(p, iResolution.xy * vec2(0.2, 0.57), letterSize.yy/2.));\n    letterY = opSubtract(letterY,sdBox(p, iResolution.xy * vec2(0.18, 0.48), letterSize.xy*vec2(0.75,0.5)));\n    \n    letterP = opSubtract(letterP,sdBox(p, iResolution.xy * vec2(0.3, 0.53), letterSize.xx/2.));\n    letterP = opSubtract(letterP,sdBox(p, iResolution.xy * vec2(0.33, 0.42), letterSize.yy/2.));\n    \n    letterO = opSubtract(letterO,sdBox(p, iResolution.xy * vec2(0.4, 0.5), letterSize/2.));\n    \n    letterT1 = opSubtract(letterT1,sdBox(p, iResolution.xy * vec2(0.54, 0.45), letterSize.xy*vec2(0.5,1.)));\n    letterT1 = opSubtract(letterT1,sdBox(p, iResolution.xy * vec2(0.46, 0.45), letterSize.xy*vec2(0.5,1.)));\n\n    letterH2 = opSubtract(letterH2,sdBox(p, iResolution.xy * vec2(0.6, 0.45), letterSize.yy/2.));\n    letterH2 = opSubtract(letterH2,sdBox(p, iResolution.xy * vec2(0.6, 0.55), letterSize.yy/2.));\n    \n    letterE1 = opSubtract(letterE1,sdBox(p, iResolution.xy * vec2(0.72, 0.53), letterSize.xy*vec2(0.75,0.25)));\n    letterE1 = opSubtract(letterE1,sdBox(p, iResolution.xy * vec2(0.72, 0.47), letterSize.xy*vec2(0.75,0.25)));\n\t\n    letterT2 = opSubtract(letterT2,sdBox(p, iResolution.xy * vec2(0.84, 0.45), letterSize.xy*vec2(0.5,1.)));\n    letterT2 = opSubtract(letterT2,sdBox(p, iResolution.xy * vec2(0.76, 0.45), letterSize.xy*vec2(0.5,1.)));\n\t\n    letterE2 = opSubtract(letterE2,sdBox(p, iResolution.xy * vec2(0.92, 0.53), letterSize.xy*vec2(0.75,0.25)));\n    letterE2 = opSubtract(letterE2,sdBox(p, iResolution.xy * vec2(0.92, 0.47), letterSize.xy*vec2(0.75,0.25)));\n    \n    staticD = opUnionSoft(letterH1, letterY, 20.);\n    staticD = opUnionSoft(staticD, letterP, 20.);\n    staticD = opUnionSoft(staticD, letterO, 20.);\n    staticD = opUnionSoft(staticD, letterT1, 20.);\n    staticD = opUnionSoft(staticD, letterH2, 20.);\n    staticD = opUnionSoft(staticD, letterE1, 20.);\n    staticD = opUnionSoft(staticD, letterT2, 20.);\n    staticD = opUnionSoft(staticD, letterE2, 20.);\n\n    cursorD = displacement(p, 19., 0.08, 3.) + cursorD;\n    staticD = displacement(p, 3., 0.1, 2.) + staticD;\n    staticD = opSubtract(staticD,cursorD);\n    return staticD;\n}\n\n////////////////////////\n// Visualization\n////////////////////////\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n    float dist = scene(uv);\n    \n    // Rings\n    float visDist = mod(abs(dist) - iTime * GRADIENT_MOVEMENT_SPEED, VIS_STEP_SIZE)/VIS_STEP_SIZE;\n    visDist = abs(visDist - 0.5) * 2.0;\n    \n    float visDistFac = pow(visDist, 3.0) * exp(-abs(dist) * FALL_OFF);\n    \n    vec3 white = vec3(1, 1, 1);\n    vec3 black = vec3(0, 0, 0);\n    \n    vec3 colorOutside = mix(vec3(1.,0.7,0.), vec3(0.2, 0.1, 0.3), dist * FALL_OFF); \n    vec3 colorInside = mix(vec3(0.0,0.5,0.1), vec3(1.), -dist * FALL_OFF); \n    \n    vec3 finalColor = dist < 0.0 ? (SOLID_INSIDE ? black : mix(colorInside, white, visDistFac)) : mix(colorOutside, white, visDistFac);\n    \n\tfragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}