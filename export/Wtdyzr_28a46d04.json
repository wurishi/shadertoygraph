{"ver":"0.1","info":{"id":"Wtdyzr","date":"1608382391","viewed":155,"name":"noised circles","username":"semmais","description":"Sound: https://soundcloud.com/alyson-pianist/melodia-africana-iv-excerpt-ludovico-einaudi-piano-cover\nNote: Press pause and play at iChannel0 to start sound","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["noise","circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4tsSRH","filepath":"https://soundcloud.com/alyson-pianist/melodia-africana-iv-excerpt-ludovico-einaudi-piano-cover","previewfilepath":"https://soundcloud.com/alyson-pianist/melodia-africana-iv-excerpt-ludovico-einaudi-piano-cover","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEPS 10.\n\n//Note: Press pause and play at iChannel0 to start sound\n\n\nvec3 circle(float n, vec2 uv, float scale){\n    uv=rotate(uv, iTime*.3+n*(1./STEPS)*3.14159*2.);\n    \n    float k=sin(iTime*.5)+.5;\n    \n    uv+=noise(iTime+uv*4.)*.1*scale;\n\n    float size= .3+(  n*(1./STEPS)*.1)*scale;\n    \n    float d = smoothstep(size  + .01 ,size,length(uv));\n   \n    vec3 c = pal( iTime*.1 +n*(1./STEPS) );\n    return n-1.>=STEPS?vec3(d):c*d;\n    \n    return vec3(d);\n}\n\nvec3 particles(vec2 uv, float masterVel) {\n    vec3 col=vec3(0.);\n    float w=10.;\n    uv+=.5 ; \n    uv*=vec2(w,1.);\n    float id=ceil(uv.x);\n    uv=fract(uv);\n       uv-=.5; \n    \n    float startY=fract(noise(id));\n    float vel= (fract(id*.1)*.2 + .05);\n    float size=fract(noise(id))*.5+.1;\n    float l=length((uv - vec2(0. ,  -.7 + fract(startY  + (iTime )*vel )*1.4  ))/vec2(w,1.));\n    l/=size*masterVel; \n    float d=smoothstep(0.1,0.07,l)*(masterVel)*.4;\n    \n     //col=vec3(d);\n     col=blendAdd(col, d*pal( iTime*.1 + 1. +0.1*id*(1./STEPS)  ));\n     \n     col+=pal( uv.y /6. -iTime*.1 + 1.  )*masterVel*.4;\n  \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;    \n     \n    uv.x *= iResolution.x/iResolution.y;      \n    vec3 col=vec3(0.1);\n    \n    for(float i=0.; i< STEPS; i++){\n        float fft  = texelFetch( iChannel0, ivec2(i,0), 0 ).x;\n        col=blendAdd(col,circle( i, uv, (.5+fft)), (1./STEPS)  *2.5);\n    }\n    float m = col.r;//smoothstep(0.1,1., col.r);\n    \n    vec4 t=texture(iChannel1, .5+ uv*(m)* (1. +.1*(sin(iTime)*.5+.5)) ); \n    \n    col+=particles(uv, texelFetch( iChannel0, ivec2(8,0), 0 ).x );\n    col*=t.rgb;\n    \n    col=mix(vec3(0.),col, smoothstep(0.,6.,iTime) );\n    \n    fragColor =vec4( col, 1.);\n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//\t<https://www.shadertoy.com/view/4dS3Wd>\n//\tBy Morgan McGuire @morgan3d, http://graphicscodex.com\n//\nfloat hash(float n) { return fract(sin(n) * 1e4); }\nfloat hash(vec2 p) { return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x)))); }\n\nfloat noise(float x) {\n\tfloat i = floor(x);\n\tfloat f = fract(x);\n\tfloat u = f * f * (3.0 - 2.0 * f);\n\treturn mix(hash(i), hash(i + 1.0), u);\n}\n\nfloat noise(vec2 x) {\n\tvec2 i = floor(x);\n\tvec2 f = fract(x);\n\n\t// Four corners in 2D of a tile\n\tfloat a = hash(i);\n\tfloat b = hash(i + vec2(1.0, 0.0));\n\tfloat c = hash(i + vec2(0.0, 1.0));\n\tfloat d = hash(i + vec2(1.0, 1.0));\n\n\t// Simple 2D lerp using smoothstep envelope between the values.\n\t// return vec3(mix(mix(a, b, smoothstep(0.0, 1.0, f.x)),\n\t//\t\t\tmix(c, d, smoothstep(0.0, 1.0, f.x)),\n\t//\t\t\tsmoothstep(0.0, 1.0, f.y)));\n\n\t// Same code, with the clamps in smoothstep and common subexpressions\n\t// optimized away.\n\tvec2 u = f * f * (3.0 - 2.0 * f);\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 pal(float x){\n  return palette( x, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,0.7,0.4),vec3(0.0,0.15,0.20)   );\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\n\nfloat blendAdd(float base, float blend) {\n\treturn min(base+blend,1.0);\n}\n\nvec3 blendAdd(vec3 base, vec3 blend) {\n\treturn min(base+blend,vec3(1.0));\n}\n\nvec3 blendAdd(vec3 base, vec3 blend, float opacity) {\n\treturn (blendAdd(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat blendReflect(float base, float blend) {\n\treturn (blend==1.0)?blend:min(base*base/(1.0-blend),1.0);\n}\n\nvec3 blendReflect(vec3 base, vec3 blend) {\n\treturn vec3(blendReflect(base.r,blend.r),blendReflect(base.g,blend.g),blendReflect(base.b,blend.b));\n}\n\nvec3 blendReflect(vec3 base, vec3 blend, float opacity) {\n\treturn (blendReflect(base, blend) * opacity + base * (1.0 - opacity));\n}\nvec3 blendGlow(vec3 base, vec3 blend) {\n\treturn blendReflect(blend,base);\n}\n\nvec3 blendGlow(vec3 base, vec3 blend, float opacity) {\n\treturn (blendGlow(base, blend) * opacity + base * (1.0 - opacity));\n}","name":"Common","description":"","type":"common"}]}