{"ver":"0.1","info":{"id":"sdVBWt","date":"1659269713","viewed":123,"name":"Jordi Box Blur","username":"sp33s","description":"test box blur","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur","boxblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n#define MAX_BLUR 20.0\n\nvec3 BoxBlur(const in vec2 uv, const in vec2 fragPerPixel, const in float blurSize)\n{\n    float pixelsSampled = 0.0;\n    vec2 startPos = uv - fragPerPixel * blurSize;\n    startPos = max(startPos, vec2(0.0));\n    vec3 returnColor = vec3(0);\n    \n    for (float y = 0.0; y < blurSize * 2.0; y++)\n    {\n        float uvY = startPos.y + y * fragPerPixel.y;\n        \n        if (uvY >= 1.0)\n            break;\n\n        \n        for (float x = 0.0; x < blurSize * 2.0; x++)\n        {\n            float uvX = startPos.x + x * fragPerPixel.x;\n\n            if (uvX >= 1.0)\n                break;\n            \n            vec3 pixel = texture(iChannel0, vec2(uvX, uvY)).xyz;\n            \n            returnColor += pixel;\n            \n            pixelsSampled++;\n        }\n    }\n    \n    return returnColor /= pixelsSampled;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 fragPerPixel = 1.0 / iResolution.xy;\n    \n    float blurSize = (sin(iTime * PI * 0.5) + 1.0) / 2.0 * MAX_BLUR;\n    \n    vec3 col = BoxBlur(uv, fragPerPixel, blurSize);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}