{"ver":"0.1","info":{"id":"lsccWX","date":"1520375316","viewed":102,"name":"egg","username":"kaminate","description":"egg for eric","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["egg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec2 uv;\nfloat ness;\nvec3 color;\n\n#define DRAW_YOLK 0\n\nvec3 colorYolk = vec3( 0.0, 0.6, 0.5 );\nvec3 colorShell = vec3( 0.3, 0.4, 0.0 );\n\nstruct Circle\n{\n    vec2 origin;\n    float radius;\n};\n    \n    \nfloat square( float f )\n{\n    return f * f;\n}\n    \nfloat vec2quadrance( vec2 a, vec2 b )\n{\n    float dx = a.x - b.x;\n    float dy = a.y - b.y;\n    return square( dx ) + square( dy );\n}\n\nvoid DrawCircle( Circle circle )\n{\n    vec2 circleOrigin = circle.origin;\n    float radius = circle.radius;\n    float curPixelToPoint = distance( uv, circleOrigin );\n    \n\tness += square( radius ) /  vec2quadrance( uv, circleOrigin );\n    \n    #if DRAW_YOLK\n    if( abs( curPixelToPoint - radius ) < 0.005 )\n    {\n\t\tcolor = colorYolk;\n    }\n    #endif\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uv = ( ( ( fragCoord / iResolution.xy ) * 2.0 ) - 1.0 );\n    uv.x *= iResolution.x / iResolution.y;\n    \n    Circle c0;\n    c0.origin = vec2( sin( iTime ), 0.5 * cos( iTime ) );\n    c0.radius = 0.2;\n    DrawCircle( c0 );\n    \n    Circle c1;\n    c1.origin = vec2( sin( iTime * 1.1 ), 0 );\n    c1.radius = 0.4;\n    DrawCircle( c1 );\n\n\tCircle c2;\n    c2.origin = vec2( 0, 0.1 * sin( iTime * 0.9 ) );\n    c2.radius = 0.3;\n    DrawCircle( c2 );\n    \n    color += colorShell * smoothstep( 0.8, 0.9, ness );\n    fragColor = vec4( color, 1 );\n}","name":"Image","description":"","type":"image"}]}