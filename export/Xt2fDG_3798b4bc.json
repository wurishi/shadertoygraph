{"ver":"0.1","info":{"id":"Xt2fDG","date":"1517020060","viewed":105,"name":"The New Turing Omnibus: Ch 1","username":"sjl","description":"Wallpaper algorithm from The New Turing Omnibus, chapter 1.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["turing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 corner = vec2(0.0, 0.0);\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    \n    float side = 500.0;\n    float x = corner.x + (aspect * side * uv.x);\n    float y = corner.y + (side * (1.0 - uv.y));\n    int c = int(x*x + y*y);\n   \n    if (c % 2 == 0) fragColor = black;\n    else fragColor = white;\n}","name":"Image","description":"","type":"image"}]}