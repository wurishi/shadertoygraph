{"ver":"0.1","info":{"id":"fs3GRn","date":"1628936003","viewed":166,"name":"Moon Healing Escalation","username":"kithy","description":"background inspired from the animation, \"SailorMoon\".\n\nthanks for BigWing's tutorial\nhttps://www.shadertoy.com/view/tlyGW3","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["gradient","particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n#define NUM_LAYERS 4.0\n\nvec4 firstColor = vec4(0.2,1.0,0.4,1.0);//green\nvec4 endColor = vec4(0.0,0.3,1.0,1.0);//blue\n\n//rotation matrix\nmat2 rot(float a){\n\tfloat s=sin(a);\n\tfloat c=cos(a);\n\treturn mat2(c,-s,s,c);\n}\n\n//gradient\nvec4 gradient(vec2 uv){\n    //uv*=rot(iTime*0.1);\n\tvec4 col = mix(mix(firstColor*0.9, endColor*1.2, abs(uv.x)),mix(firstColor*0.9, endColor*1.2, abs(uv.x)),uv.x);\t\n\treturn col;\n}\n\n//draw 1 circle\nfloat Circle(vec2 uv){\n\tfloat d=length(uv);\n\tfloat m=0.05/d;\n\tm*=smoothstep(1.0,0.2,d);\n\treturn m;\n}\n\n//draw 1 star\nfloat Star(vec2 uv,float flare){\n\n\t//center of star\n\tfloat d=length(uv);\n\tfloat m=0.05/d;\n\n\t//flare\n\tfloat rays=max(0.0,1.0-abs(uv.x*uv.y*1000.0));\n\tm+=rays*flare;\n\tuv*=rot(PI/4.0);\n\trays=max(0.0,1.0-abs(uv.x*uv.y*1000.0));\n\tm+=rays*flare*0.3;\n\tm*=smoothstep(1.0,0.2,d);\n\treturn m;\n}\n\n//make random value\nfloat Hash21(vec2 p){\n\tp=fract(p*vec2(123.34,456.21));\n\tp+=dot(p,p+45.32);\n\treturn fract(p.x*p.y);\n}\n\n//repetition circles \nvec3 CircleLayer(vec2 uv){\n\tvec2 gv=fract(uv)-0.5;\n\tvec2 id=floor(uv);\n\n\tvec3 col=vec3(0.0);\n\n\tfor(int y=-1;y<=1;y++){\n\t\tfor(int x=-1;x<=1;x++){\n\t\t\tvec2 offset=vec2(x,y);\n\t\t\tfloat n=Hash21(id+offset);\n\t\t\tfloat size=fract(n*345.32);\n\t\t\tfloat circle=Circle(gv-offset-vec2(n,fract(n*34.0))+0.5);\n\t\t\tcol+=circle*n*1.5;\n\t\t}\n\t}\n\treturn col;\n}\n\n//repetition stars\nvec3 StarLayer(vec2 uv){\n\tvec3 col=vec3(0.0);\n\t\n\tvec2 gv=fract(uv)-0.5;\n\tvec2 id=floor(uv);\n\t\n\tfor(int y=-1;y<=1;y++){\n\t\tfor(int x=-1;x<=1;x++){\n\t\t\tvec2 offset=vec2(x,y);\n\t\t\tfloat n=Hash21(id+offset);\n\t\t\tfloat size=fract(n*345.32);\n\t\t\tfloat star=Star(gv-offset-vec2(n,fract(n*34.0))+0.5,smoothstep(0.5,0.9,size));\n\t\t\t\n\t\t\t//blink\n\t\t\tstar*=sin(iTime*3.0+n*PI*2.0)*0.5+1.0;\n\t\t\tcol+=star*size;\n\t\t}\n\t}\n\treturn col;\n}\n\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=(fragCoord-iResolution.xy*0.5)/iResolution.y;\n\tuv*=2.0;\n\tuv.y-=iTime;\n\t\n\tvec4 background=gradient(uv);\n    vec4 circle=vec4(CircleLayer(uv),1.0);\n\n\n\tvec3 col=vec3(0.0);\n\n\tfor(float i=0.0;i<1.0;i+=1.0/NUM_LAYERS){\n\t\tfloat depth=fract(i);\n\t\tfloat scale=mix(20.0,0.5,depth);\n\t\tfloat fade=depth*smoothstep(1.0,0.9,depth);\n\t\tcol=StarLayer(uv*scale+i*453.2*fade);\t\n\t}\n\t\n\tfragColor=vec4(col,1.0)+background+circle;\n}","name":"Image","description":"","type":"image"}]}