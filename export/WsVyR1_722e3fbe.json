{"ver":"0.1","info":{"id":"WsVyR1","date":"1602235861","viewed":124,"name":"KiraShapes","username":"nanase","description":"Simple shapes.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["simple","shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(float h, float s, float v) {\n\tvec3 a = fract(h + vec3(0.0, 2.0, 1.0)/3.0) * 6.0 - 3.0;\n\ta = clamp(abs(a) - 1.0, 0.0, 1.0) - 1.0;\n\ta = a*s + 1.0;\n\treturn a*v;\n}\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 resolution = iResolution.xy;\n    float time = iTime;\n    float m = 0.5 * abs(sin(time));\n    vec2 uv = (fragCoord.xy * 2.0 - resolution.xy) / min(resolution.x, resolution.y);\n    uv *= 5.;\n\n    float xp = -uv.x + time;\n    float yp = uv.y + time;\n\n    vec2 pos = vec2(floor(xp), floor(yp));\n\n    uv = vec2(fract(xp) * 2.0 - 1.0, fract(yp) * 2.0 - 1.0);\n\n    float theta = atan(uv.y, uv.x) - time;\n    float threshold = (1.0 - 0.5) * sin(floor(rand(pos) * 15.) * theta) + 0.5;\n\n    vec4 col = vec4(hsv2rgb(sin(time * .5 * rand(pos)), 1.0, 1.0), 1.0);\n    \n    if(step(length(uv), threshold) == 1.0) {\n        fragColor = col;\n    } else {\n        fragColor = vec4(0.7,0.7,0.7,1.);\n    }\n}","name":"Image","description":"","type":"image"}]}