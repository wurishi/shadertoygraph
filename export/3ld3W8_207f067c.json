{"ver":"0.1","info":{"id":"3ld3W8","date":"1581323068","viewed":69,"name":"buffered fractal generator","username":"a1pha1","description":"simple fractal generator","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord)/iResolution.xy);\n    vec3 col = texture(iChannel0, uv).xyz;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n           \n    if(uv.x > 0.5)\n    {\n        uv.x = 1.-uv.x;\n    }\n    \n    vec2 trans = vec2((iMouse.x/iResolution.x)*2., (iMouse.y/iResolution.x)*2.);\n   \ttrans.x = 0.5+0.25*sin(iTime*0.7);\n    trans.y = 0.5+0.25*sin(iTime*0.13);\n    float scale = 0.75+0.25*sin(iTime);\n    float theta = iTime;\n    \n    float ar = iResolution.x/iResolution.y;\n    uv.x *= ar;\n    trans.x*=ar;\n    \n    vec3 col = vec3(0.);\n    mat2 rot = mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n\n    uv = (((uv-trans)/scale)*rot)+trans;\n    vec2 coord = uv;\n    coord.x /= ar;\n\n    \n    if(coord.x<1. && coord.x> 0. && coord.y<1. && coord.y > 0.)\n    {\n        col = 1.-texture(iChannel0, coord).xyz;\n    }\n    \n   \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}