{"ver":"0.1","info":{"id":"tl3fD4","date":"1612734141","viewed":211,"name":"Rainbow snowflake","username":"Tarquin","description":"Rainbow snowflake created with Von Koch fractals","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["fractals","rainbow","snowflake","vonkoch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Arthur Jacquin - 2021\n// https://www.linkedin.com/in/arthur-jacquin-631921153/\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//Inspired by https://www.youtube.com/watch?v=il_Qg9AqQkE&t=369s\n\n#define PI 3.14159265359\n\nvec2 GetDirection(float angle)\n{\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y; //UVs centré\n\n    //Pour les symetries\n    st *= 1.25;\n    st.x = abs(st.x);\n\n    float angle = 5.0 / 6.0 * PI;\n    st.y += tan(angle) * 0.5; //Centrage en hauteur\n    vec2 n = GetDirection(angle); //Direction de l'axe de symetrie\n    float axeSym = dot(st - vec2(.5, 0), n); //Axe de symetrie\n    st -= n * max(0., axeSym) * 2.; //On applique la symétrie\n\n    angle = 2.0 / 3.0 * PI;\n    n = GetDirection(angle); //Direction de l'axe de symetrie\n    \n    const int it = 4; //Nombre d'iterations\n    float scale = 1.; //scale appliqué pour décompression plus tard\n    \n    st.x += .5; //Centrage\n    for(int i = 0; i < it; i++)\n    {\n        scale *= 3.;\n        st *= 3.;\n        st.x -= 1.5;\n\n        st.x = abs(st.x); //Symetrie en X\n        st.x -= 0.5; //Aggrandissement de la ligne\n        \n        float axe = dot(st, n); //Axe de symetrie\n        st -= n * min(0., axe) * 2.; //On applique la symétrie\n\n    }\n\n    //line shape 1 pixel d'épaisseur\n    vec3 col = 0.5 + 0.5*cos(iTime - st.yyy + vec3(6,4,2));\n    float d = length(st - vec2(clamp(st.x, -1., 1.), 0));\n    col.rg += st / scale;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}