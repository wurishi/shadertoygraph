{"ver":"0.1","info":{"id":"XtsfzH","date":"1511050412","viewed":100,"name":"Codevember 2017 18 Motors","username":"zeh","description":"A very quick shader for Codevember challenge 2017. Strictly done in ~30 min.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","codevember"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cols = 7.0;\nfloat rows = 4.0;\nfloat centerRadius = 4.0;\nfloat gearRadius = 40.0;\nfloat dentRadius = 8.0;\nfloat numDents = 16.0;\nvec4 colorBackground = vec4(0.9, 0.8, 0.7, 1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 gridSize = vec2(cols, rows);\n    vec2 spacing = iResolution.xy / gridSize;\n    vec2 center = floor(fragCoord.xy / spacing) * spacing + spacing * 0.5;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pos = round((center - spacing * 0.5) / spacing);\n    \n    vec2 distanceXY = fragCoord.xy - center;\n    float distance = sqrt(distanceXY.x * distanceXY.x + distanceXY.y * distanceXY.y);\n    float angle = atan(distanceXY.y, distanceXY.x);\n    float direction = int(pos.x + pos.y) % 2 == 0 ? 1.0 : -1.0;\n    angle = mod(angle + iTime * 0.8 * direction, 6.2830);\n    float dentRadius = clamp(sin(angle * numDents) * dentRadius, -dentRadius * 0.5, dentRadius * 0.5);\n\n    vec4 colorInside = vec4(cos(center.x / iResolution.x * 5.0) * 0.25 + 0.5, sin(center.y / iResolution.y * 10.0) * 0.25 + 0.5, cos(center.x / iResolution.x * 14.0) * 0.25 + 0.5, 1.0);\n    \n    if (distance < centerRadius || distance > gearRadius + dentRadius) {\n\t\tfragColor = colorBackground;\n    } else {\n        fragColor = colorInside;\n    }\n        \n}","name":"Image","description":"","type":"image"}]}