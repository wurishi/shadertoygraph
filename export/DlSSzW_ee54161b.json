{"ver":"0.1","info":{"id":"DlSSzW","date":"1675712294","viewed":42,"name":"Julia sets done quickly","username":"Taektiek","description":"A simple shader of the Julia sets, also the first real shader I ever wrote.\n\nHold down the mouse to control.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["julia","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 mandelbrotMap(vec2 z, vec2 c) {\n    vec2 zSquared = vec2(pow(z.x,2.0) - pow(z.y, 2.0), 2.0 * z.x * z.y);\n    return vec2(zSquared.x + c.x, zSquared.y + c.y);\n}\n\nint mandelbrot(vec2 c, vec2 z, int iterations) {\n    for (int i = 0; i < iterations; i++) {\n        z = mandelbrotMap(z, c);\n        if(max(z.x, z.y) > 1.0) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 50.0/(iTime+10.0)*((fragCoord/iResolution.xy)-vec2(0.5, 0.5));\n    \n    vec3 col;\n    \n    vec2 mouse = 2.0*((iMouse.xy/iResolution.xy)-vec2(0.5, 0.5));\n    \n    int iterations = mandelbrot(mouse, uv, 200);\n\n    if (iterations<0) {\n        fragColor = vec4(1, 1, 1, 1);\n    } else if (iterations > 0) {\n        fragColor = vec4(float(iterations)/25.0, float(iterations)/25.0, 0, 1);\n    } else {\n        fragColor = vec4(0, 0, 0, 1);\n    }\n}","name":"Image","description":"","type":"image"}]}