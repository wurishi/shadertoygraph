{"ver":"0.1","info":{"id":"XXKSD1","date":"1719923664","viewed":35,"name":"homework2_7_2","username":"prosumer","description":"hw2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The MIT License\n// Copyright Â© 2024 prosumer\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n#define PI 3.14159265359\n\nvec3 color_sky = vec3(0.95,0.95,0.95);\nvec3 color_blue = vec3(0.100,0.300,0.800);\nvec3 color_sun = vec3(1.0, 0.7, 0.0);\nvec3 colorSun = vec3(1.0, 0.4, 0.0);\nvec3 color_water = vec3(0.007,0.115,0.300);\nvec3 color_ship = vec3(0.1, 0.1, 0.3);\n\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n    color.r *= abs(0.95+0.05*sin(iTime/PI));\n\tfloat d = length(uv-pos) - rad*abs(0.95+0.05*sin(iTime/PI));\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(color, 1.0 - t);\n}\n\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.3, pct, st.y) -\n          smoothstep( pct, pct+0.3, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = gl_FragCoord.xy;\n\tvec2 center = vec2(iResolution.x * 0.85, iResolution.y * 0.55);\n\tfloat radius = 0.03 * iResolution.y;\n    vec4 layer2 = circle(uv, center, radius, colorSun);\n\n\n    uv = fragCoord/iResolution.xy;\n     // uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n\n    vec3 color = vec3(0.0);\n\n    vec3 pct = vec3(uv.x);\n    pct = vec3(1.2-uv.y);\n    color = mix(color_sky, color_blue, pct);\n    \n    pct = vec3(1.5*(uv.x+0.3)*(uv.x+0.3)*(uv.y-0.29));\n    color = mix(color, color_sun, pct* abs(0.75+0.25*sin(iTime/PI)));\n    pct = vec3(0.7*(uv.x+0.4)*(uv.x+0.3)*(0.5-uv.y));\n    color = mix(color, color_sun, pct* abs(0.8+0.1*sin(iTime/PI)));\n        \n    pct = vec3(plot(uv, 0.15) * 0.3);\n    color = mix(color, color_water/2.0, pct* abs(0.75+0.25*sin(iTime/PI)));\n    \n    vec4 layer1 = vec4(color, 1.0);\n    fragColor = mix(layer1, layer2, layer2.a);\n\n}","name":"Image","description":"","type":"image"}]}