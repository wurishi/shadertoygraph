{"ver":"0.1","info":{"id":"3tBczR","date":"1593522157","viewed":96,"name":"Wrapping zone","username":"gaz","description":"fractal","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat map(vec3 p){\n    p.xy *= rot(iTime*0.2);\n    p.yz *= rot(iTime*0.3);\n    vec3 q=p;\n    float S,R=1.;\n    for(int j=0;j<10;j++)\n    {\n        p-=clamp(p,-.9,.9)*2.;\n        S=9.*clamp(.1/min(dot(p,p),1.),0.,1.);\n        p=p*S+q;\n        R=R*S+1.;\n    }\n    return .7*length(p)/R;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor=vec4(0);\n    vec2 uv = (fragCoord* 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0,1,mix(2.0,3.5,clamp(sin(iTime*.7+3.*sin(iTime*.3))*2.0,0.0,1.0)));\n    vec3 ta = vec3(0.5,mix(0.0,1.0,clamp(sin(iTime*.4+5.*sin(iTime*.7))*4.0,0.0,1.0)),0.5);\n    vec3 w = normalize(ta-ro),u=normalize(cross(w,vec3(0,1,0))),v=cross(w,u);\n    vec3 rd=mat3(u,v,w)*normalize(vec3(uv,2.0));\n    vec3 col = vec3(0,0,0.1);  \n    float i,d,t=0.;\n    vec3 p;\n    for(i=0.;i<99.;i++)\n    {\n        p=ro+rd*t;\n        t+=d=map(p);\n        if (d<0.001) break;\n    }\n    fragColor.xyz +=9.*(cos(p*2.)*.5+.5)/i;;\n}","name":"Image","description":"","type":"image"}]}