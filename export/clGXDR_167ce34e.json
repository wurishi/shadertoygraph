{"ver":"0.1","info":{"id":"clGXDR","date":"1686156374","viewed":81,"name":"2d wave simulation","username":"tedjosephson","description":"simulate maxwell's equations in 2d. left click and drag to draw walls","likes":7,"published":1,"flags":48,"usePreview":0,"tags":["waves","maxwellsequations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    float e = texture(iChannel0, uv).x;\n    float r = texture(iChannel0, uv).y;\n    \n    float red = -1.0 * clamp(e, -1.0, 0.0);\n    float blue = clamp(e, 0.0, 1.0);\n    \n    // Output to screen\n    fragColor = vec4(red, r, blue, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//E field (iChannel0)\nconst int KEY_UP    = 38;\nfloat v = 0.7;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 xy = fragCoord.xy / iResolution.y;\n    float e = texture(iChannel0, uv).x;\n    \n    float r = 0.0;\n     \n     e = e - v * v * texture(iChannel1, uv).x;\n     r = texture(iChannel2, uv).y;\n     \n     //wall\n     //if (abs(xy.x - 0.5) < 0.01 && abs(xy.y - 0.5) > 0.05) {\n     //       e = 0.0;\n     //       r = 1.0;\n     //       }\n     \n     //Source     \n         if(length(xy - vec2(0.05 + 0.5, 0.5)) < 0.005) {\n            e += cos(iTime * 6.28 * 10.0);\n            }\n\n     e = e * (1.0 - r);\n     //attenuation\n     //e = e * (1.0 - 1e-3);\n    \n        \n    fragColor = vec4(e, r, 0.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// H field (iChannel1)\nconst int conv_length = 9,\n           conv_width = 3;\nconst float conv[conv_length] = float[conv_length](\n    -0.,-1.,-0.,\n    -1., 4.,-1.,\n    -0.,-1.,-0.\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 ps = 1.0 / iResolution.xy; // pixel size\n    \n    float curl = 0.0;\n    \n    for (int i = 0; i < conv_length; i++){\n        vec2 d = vec2(i % conv_width, i / conv_width) - vec2(conv_width / 2);\n    \tcurl += conv[i] * texture(iChannel0, uv + d * ps).x;\n    }\n    \n    float h = texture(iChannel1, uv).x + curl;\n    \n    fragColor = vec4(vec3(h), 1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float w = texture(iChannel2, uv).y;\n    \n    if(length(iMouse.xy/iResolution.xy - uv.xy) < 0.005) {\n        w =1.0;\n        }\n        \n    fragColor = vec4(0.0, w, 0.0, 0.0);\n}","name":"Buffer C","description":"","type":"buffer"}]}