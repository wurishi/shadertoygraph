{"ver":"0.1","info":{"id":"4lXfR7","date":"1511318360","viewed":1551,"name":"magma rocks","username":"laserdog","description":"cracked rocks with lava underneath","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","magma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// random2 function by Patricio Gonzalez\nvec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\n// Value Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvec3 magmaFunc(vec3 color, vec2 uv, float detail, float power,\n              float colorMul, float glowRate, bool animate, float noiseAmount)\n{\n    vec3 rockColor = vec3(0.09 + abs(sin(iTime * .75)) * .03, 0.02, .02);\n    float minDistance = 1.;\n    uv *= detail;\n    \n    vec2 cell = floor(uv);\n    vec2 frac = fract(uv);\n    \n    for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n        \tvec2 cellDir = vec2(float(i), float(j));\n            vec2 randPoint = random2(cell + cellDir);\n            randPoint += noise(uv) * noiseAmount;\n            randPoint = animate ? 0.5 + 0.5 * sin(iTime * .35 + 6.2831 * randPoint) : randPoint;\n            minDistance = min(minDistance, length(cellDir + randPoint - frac));\n        }\n    }\n    \t\n    float powAdd = sin(uv.x * 2. + iTime * glowRate) + sin(uv.y * 2. + iTime * glowRate);\n\tvec3 outColor = vec3(color * pow(minDistance, power + powAdd * .95) * colorMul);\n    outColor.rgb = mix(rockColor, outColor.rgb, minDistance);\n    return outColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n\tvec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x += iTime * .01;\n    fragColor = vec4(0.);\n    fragColor.rgb += magmaFunc(vec3(1.5, .45, 0.), uv, 3.,  2.5, 1.15, 1.5, false, 1.5);\n    fragColor.rgb += magmaFunc(vec3(1.5, 0., 0.), uv, 6., 3., .4, 1., false, 0.);\n    fragColor.rgb += magmaFunc(vec3(1.2, .4, 0.), uv, 8., 4., .2, 1.9, true, 0.5);\n}","name":"Image","description":"","type":"image"}]}