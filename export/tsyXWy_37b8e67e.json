{"ver":"0.1","info":{"id":"tsyXWy","date":"1574863555","viewed":113,"name":"Antialiased Hole by Dmitry","username":"dmitrykolesnikovich","description":"Hole.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RADIUS 1.0\n#define HOLE_RADIUS 0.75\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {   \n    // 1. layout UV from [0..1] to [-1..1]\t    \n\tvec2 uv = (2.* fragCoord - iResolution.xy) / iResolution.y;\n\n    // 2. anti-aliased circle\n    float d = length(uv);\n    float wd = fwidth(d);\n    float circle = smoothstep(RADIUS + wd, RADIUS - wd, d);\n    \n    // 3. anti-aliased hole\n    float thickness = (RADIUS - HOLE_RADIUS) / RADIUS;\n    float inner = RADIUS - thickness;\n    circle -= smoothstep(inner + wd, inner - wd, d);   \n\n    // 4. output color\n    fragColor = vec4(vec3(circle), 1.0);\n}","name":"Image","description":"","type":"image"}]}