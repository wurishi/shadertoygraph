{"ver":"0.1","info":{"id":"sdGXDy","date":"1682352998","viewed":87,"name":"morphtest -","username":"schzna","description":"morphing polygon","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["morph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\n\nfloat atan2(in float y, in float x){\n    return x == 0.0 ? sign(y)*PI/2.0 : atan(y, x);\n}\n\nmat2 rot2d(float angle){\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\nfloat cross2d(vec2 v1, vec2 v2){\n    return v1.x * v2.y - v1.y * v2.x;\n}\n\nfloat border(vec2 v, vec2 from, vec2 to){\n    return step(0.0, cross2d(to - from,v - from));\n}\n\nfloat regular_polygon(vec2 v, int n, vec2 pos, float size, float angle){\n    float mask = 1.0;\n    vec2 prev = rot2d(angle) * vec2(size, 0.0);\n    vec2 current = prev;\n    for(int i=0;i<n;i++){\n        current = rot2d(-2.0 * PI / float(n)) * prev;\n        mask *= border(v, prev, current);\n        prev = current;\n    }\n    return mask;\n}\n\nfloat morphing_polygon(vec2 v, float n, vec2 pos, float size, float angle){\n    float mask = 1.0;\n    vec2 prev = rot2d(angle) * vec2(size, 0.0);\n    vec2 current = prev;\n    for(int i=0;i< int(ceil(n)) ;i++){\n        current = rot2d(-2.0 * PI / float(n)) * prev;\n        mask *= border(v - pos, prev, current);\n        prev = current;\n    }\n    return mask;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.yy;\n    float time = iTime * 1.0;\n    float ptime = 8.0 * abs(time / 3.0 - floor(time / 3.0 + 0.5));\n    \n    float n = floor(ptime);\n    float ease = n + smoothstep(0.0, 1.0, ptime-n);\n    \n    float mask = morphing_polygon(uv, 3.0 + ease, vec2(0.0, 0.0), 0.3, time);\n    vec3 col = normalize(vec3(0.0, 0.4, 1.0));\n    vec3 ocol = vec3(\n        mix(1.0, col.x, mask),\n        mix(1.0, col.y, mask),\n        mix(1.0, col.z, mask)\n    );\n    \n    // Output to screen\n    fragColor = vec4(ocol,1.0);\n}","name":"Image","description":"","type":"image"}]}