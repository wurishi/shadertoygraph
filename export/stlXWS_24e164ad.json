{"ver":"0.1","info":{"id":"stlXWS","date":"1626468943","viewed":62,"name":"Multicolor Game of Life","username":"CharmingSalmon","description":"Game of life in Shader form, now with more colors!","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["gameoflife"],"hasliked":0,"parentid":"slXXzl","parentname":"My Game Of Life Shader Attempt"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Output to screen\n    fragColor = texelFetch(iChannel1, ivec2(fragCoord.xy),0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int life(int value, int neighborCount);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n //Pause if mouse is down\n  if(iMouse.z > 0.) {\n  fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n  return;}\n  \n  //Count neighbors\n  ivec3 neighborCount = ivec3(0);\n  for(int adj_col = -1; adj_col <= 1; adj_col++){\n    for(int adj_row = -1; adj_row <= 1; adj_row++){\n            if(adj_col == 0 && adj_row==0 && texelFetch(iChannel0,ivec2(fragCoord),0).rgb == vec3(0)) continue;\n             neighborCount += ivec3(texelFetch(iChannel0, ivec2(fragCoord.xy - vec2(adj_col,adj_row)),0).rgb);\n    }\n  }\nivec4 prevPixel = ivec4(texelFetch(iChannel0,ivec2(fragCoord),0));\nfragColor = vec4(life(prevPixel.r, neighborCount.r), life(prevPixel.g, neighborCount.g), life(prevPixel.b, neighborCount.b),1.);\n}\n\nint life(int value, int neighborCount){\n //Adjust state as appropriate\n  switch(neighborCount){\n  case 3:\n      return 1;\n  break;\n  case 2:\n      return value;\n  break;\n  default:\n      return 0;\n  }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  if( iTime < 1.5) {\n  vec2 size = vec2(textureSize(iChannel1,0));\n  if(rand(fragCoord + iMouse.xy) > 0.5) {\n  fragColor = vec4(round(rand(fragCoord)), round(rand(fragCoord + vec2(1.))), round(rand(fragCoord + vec2(2.))),1.);\n  }\n  //fragColor = vec4(texelFetch(iChannel1, ivec2(mod(fragCoord.xy/2.,size.xy)), 0).r);\n  return;\n  }\n  \n \n  \n  ivec2 dist = ivec2(abs(fragCoord.xy - iMouse.xy));\n  if(dist.x <= 1 && dist.y <= 1){\n      fragColor = vec4(1);\n  } else {\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord.xy),0);\n    }\n}\n\n\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    //Gravity warp\n       vec2 gravity = vec2(0.,0.);\n  //Gravity Calculation\n for(int adj_col = -3; adj_col <= 3; adj_col++){\n    for(int adj_row = -3; adj_row <= 3; adj_row++){\n    if(adj_col == 0 && adj_row==0) continue;\n    if(texelFetch(iChannel0,ivec2(fragCoord+vec2(adj_col,adj_row)),0) == vec4(1.))\n       gravity += vec2(adj_col,adj_row) * 1e5;\n    }\n  }\n  if(1./gravity.x < 1e-6 || 1./gravity.y < 1e-6) {\n  fragColor = texelFetch(iChannel0,ivec2(fragCoord),0); return;\n  }\n  //fragColor = vec4(ceil(1./gravity.x),ceil(1./gravity.y),1,1) * texelFetch(iChannel0,ivec2(fragCoord),0);\n  fragColor = texelFetch(iChannel0,ivec2(fragCoord-ceil(1./gravity)),0);\n}","name":"Buffer C","description":"","type":"buffer"}]}