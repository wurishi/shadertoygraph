{"ver":"0.1","info":{"id":"lldGz8","date":"1468014675","viewed":147,"name":"Twister++","username":"Kastor","description":"Based on https://www.shadertoy.com/view/lsX3WM ... just improved it a bit","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["twister","oldshkool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t#define M_PI 3.1415926535897932384626433832795\n\t#define thick 0.003\n\t#define twister_thick 0.20\n    #define glow_strength 0.5\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 white = vec4(1.0,1.0,1.0,1.0);\n\t\n\tfloat twist = (M_PI / 360.0 * (iTime * 150.0 + \n\t\t\t\t(uv.y * 240.0) * sin((((iTime * 150.0 / 2.0) + \n\t\t\t\t(uv.y * 240.0)) * 3.0 / 4.0) * M_PI / 220.0) ));\n\t\n\tfloat x0 = 0.5 + (cos(twist) * twister_thick);\n\tfloat x1 = 0.5 + (cos(0.5 * M_PI + twist) * twister_thick);\n\tfloat x2 = 0.5 + (cos(1.0 * M_PI + twist) * twister_thick);\n\tfloat x3 = 0.5 + (cos(1.5 * M_PI + twist) * twister_thick);\n\t\n\tfragColor = vec4(0.0,0.0,0.0,1.0);\n\n\tif (x0 < x1) {\n\t\tif ((abs(uv.x - x0) < thick) || (abs(uv.x - x1) < thick)) {\n\t\t\tfragColor = white;\n\t\t} else {\n\t\t\tif ((uv.x > x0) && (uv.x < x1)) {\n            \tfragColor =  vec4(1.0,0.0,0.0,1.0) * glow_strength + (x1 - x0);\n \t\t\t}\n\t\t}\n\t}\n\tif (x1 < x2) {\n\t\tif ((abs(uv.x - x1) < thick) || (abs(uv.x - x2) < thick)) {\n\t\t\tfragColor = white;\n\t\t} else {\n\t\t\tif ((uv.x > x1) && (uv.x < x2)) {\n              fragColor =  vec4(0.0,1.0,1.0,1.0) * glow_strength + (x2 - x1);\n\t\t\t}\n\t\t}\n\t}\n\tif (x2 < x3) {\n\t\tif ((abs(uv.x - x2) < thick) || (abs(uv.x - x3) < thick)) {\n\t\t\tfragColor = white;\n\t\t} else {\n\t\t\tif ((uv.x > x2) && (uv.x < x3)) {\n              fragColor =  vec4(0.5,0.5,0.0,1.0) * glow_strength + (x3 - x2);\n\t\t\t}\n\t\t}\n\t}\n\tif (x3 < x0) {\n\t\tif ((abs(uv.x - x3) < thick) || (abs(uv.x - x0) < thick)) {\n\t\t\tfragColor = white;\n\t\t} else {\n\t\t\tif ((uv.x > x3) && (uv.x < x0)) {\n              fragColor =  vec4(0.5,0.0,0.5,1.0) * glow_strength + (x0 - x3);\n\t\t\t}\n\t\t}\n\t}\n}","name":"Image","description":"","type":"image"}]}