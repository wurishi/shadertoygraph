{"ver":"0.1","info":{"id":"WsByDt","date":"1587483353","viewed":625,"name":"Storing Values in a Buffer","username":"MarvelousBilly","description":"I am trying to learn how storing values in a buffer works and I got this to work so I figured I might as well share it!","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["howto","storage"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(texelFetch(iChannel0, ivec2(2,0), 0).xy,0.);   \n    //collect the stored value in (1,0) of buffer A\n\n    if(distance(iMouse.xy,fragCoord)<3.){\n    \tcol = vec3(0.,0.,1.); //mouse position\n    }\n    if(distance(col.xy*iResolution.xy,fragCoord)<3.){\n    \tcol = vec3(1.,1.,1.); //color \"position\"\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void prevMouse(out vec4 fragColor) {//mouse position\n    vec4 v = vec4(iMouse.xy/iChannelResolution[0].xy,0.,0.); \n    fragColor = v; //update value stored (mouse position normalized)\n}\n\nvoid deltaMouse(out vec4 fragColor) {//color stored\n    vec4 val = texelFetch(iChannel0, ivec2(2,0), 0);\n    //grab current delta mouse position\n    vec4 oldMouse = texelFetch(iChannel0, ivec2(1,0), 0);\n    //grab previous mouse position (last frame)\n    if(iMouse.z > 0.5 && val.w >= 0.5){ //if mouse was not pressed on prev frame, do not update delta\n        //this means it only changes when the mouse is down and does not warp colors.\n        vec2 deltaM = (iMouse.xy/iChannelResolution[0].xy)-oldMouse.xy;\n        //set delta to be the change in mouse positions between frames\n    \tval.xy+=deltaM;\n        //add the delta to val\n    }\n    val.xy = max(min(val.xy,1.),0.); //clamp between 0 and 1\n    val.w = iMouse.z; //update click state\n    fragColor = val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (ivec2(fragCoord.xy) == ivec2(1, 0)) {\n        //if pixel that is being checked is 0,0\n        //update the stored value\n    \tprevMouse(fragColor);\n    }\n    if (ivec2(fragCoord.xy) == ivec2(2, 0)) {\n        //if pixel that is being checked is 1,0\n        //update the stored value\n    \tdeltaMouse(fragColor);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}