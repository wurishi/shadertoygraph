{"ver":"0.1","info":{"id":"Mljfzm","date":"1515194198","viewed":113,"name":"bouncy circle","username":"vantreeseba","description":"bouncy circle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 drawCircle(vec2 center, float radius) {    \n\tfloat d = length(center - gl_FragCoord.xy);    \n\tfloat c = 1. - smoothstep(radius - 1., radius + 1., d);\n    \n    vec3 col = vec3(1., 1., 0.5) * c;\n    \n    return vec4(col,  c);\n}\n\nvec3 drawRectangle(vec4 coords) {\n    vec3 color = vec3(0);\n    vec2 fc = gl_FragCoord.xy;\n    \n    if(fc.x > coords.x && fc.x < coords.z && fc.y > coords.y && fc.y < coords.w) {\n        color = vec3(1., 0, 0);\n    }\n    \n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{    \n\tfloat st = (1. + sin(iTime));\n    float ct = (1. + cos(iTime * 2.));\n    vec2 uv = fragCoord.xy / iResolution.xy;\t        \n    \n    vec4 color = vec4(0, 0, 0, 1.);\n    \n    \n    vec4 circle = drawCircle(vec2(iResolution.x / 2.  * st, 150. + 100. * ct), 100.);\n    color += circle;\n    \n    vec3 rect = drawRectangle(vec4(50., 50., 100., 100.));\n    color += vec4(rect, 1.0);\n    \n   \n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}