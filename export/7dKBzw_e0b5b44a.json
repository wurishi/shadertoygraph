{"ver":"0.1","info":{"id":"7dKBzw","date":"1657893834","viewed":59,"name":"Grille standard","username":"rid","description":"Exemple de grille standard","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["moire","grille"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 bgd_color  = vec3(1.);          // background color\nvec3 grid_color = vec3(.9, .65, .1); // grid color\nfloat period     = 10.0;             // grid period in pixels\nfloat ratio     = 0.4;               // grid ratio (between 0 and 1.0)\nfloat delta     = 0.0;               // grid delta (between 0 and 1.0)\n\nfloat angle = 0.57;\n\nfloat Bar(float t, float width, float blur) {\n   \n    float ca = cos(angle);\n    float sa = sin(angle);\n\n    float start = 1.0 - width;\n    float end = 1.0;\n    ;\n    float mask = smoothstep(start - blur, start + blur, t);\n    mask *= smoothstep(end, end - 2.0*blur, t);\n    \n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/period;\n    \n    float ca = cos(angle);\n    float sa = sin(angle);\n    \n    // rotate (don't forget to translate uv to origin before rotating)\n    uv = vec2(uv.x*ca - uv.y*sa, uv.x*sa + uv.y*ca);\n    \n    float x = fract(uv.x + delta);\n    \n    float mask = Bar(x, 1.0 - ratio, 1.5/period);\n    vec3 col = mix(bgd_color, grid_color, mask);\n    \n    \n    // Output to screen\n    fragColor = vec4(col, mask);\n}","name":"Image","description":"","type":"image"}]}