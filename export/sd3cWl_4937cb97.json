{"ver":"0.1","info":{"id":"sd3cWl","date":"1654218812","viewed":74,"name":"30 Minutes 6/2","username":"scry","description":"two lights!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","light","dual"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"////////////////////////////////////////////////////\n#define time iTime*1.\n#define pi 3.14159265\n#define deg pi/180.\n\nmat2 r2d(float a) { \n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec3 lpos(float a) {\n    vec3 l = vec3(0.,0.,3.);\n    l.xz += vec2(sin(time/1.+a*pi),cos(time/1.+a*pi));\n    return l;\n}\n\nvec4 map(vec3 p) {\n    vec3 o = p;\n    p.z -= 3.;\n    p.xz *= r2d(time*0.2);\n    float d = -abs(p.y)+2.;\n    float m = 0.1;\n    for (int i=0;i<5;i++) {\n        p += sin(p*sin(time*0.1-m*4.)*m*300.)*m;\n        m *= 0.15;\n    }\n    d = min(d,length(p)-0.3);\n    return vec4(p,d);\n}\n\nvec2 RM(vec3 ro, vec3 rd, float s) {\n    float dO = 0.;\n    float ii = 0.;\n    for (int i=0;i<120;i++) {\n        vec3 p = ro+rd*dO;\n        float dS = map(p).w*s;\n        dO += dS*0.2;\n        ii += 0.01;\n        if (dO > 100. || dS < 0.001) {break;}\n    }\n    return vec2(dO,ii);\n}\n\nvec3 calcNorm(vec3 p) {\n    vec2 h = vec2(0.001,0.);\n    return normalize(vec3(\n        map(p-h.xyy).w-map(p+h.xyy).w,\n        map(p-h.yxy).w-map(p+h.yxy).w,\n        map(p-h.yyx).w-map(p+h.yyx).w\n    ));\n}\n\n\nvec3 sh(vec3 p, vec3 n, float a) {\n    vec3 l = lpos(a);\n    vec3 rd = normalize(l-p);\n    vec2 d = RM(p-n*0.003,rd,1.);\n    float  s = 0.;\n    float dif = clamp(dot(rd,n),0.,1.);\n    if (length(l-p) > d.x) {\n        s = 1.;\n    }\n    return vec3(s,dif,d.x);\n}\n\nfloat pl(vec3 p, vec3 n, vec3 rd, float a) {\n    vec3 ly = lpos(a);\n    float r = 0.;\n    vec3 s = sh(p,n,a);\n    float ly1 = clamp(length(ly-p)*0.5,0.,1.);\n    float ly2 = clamp(pow(1.-length(ly.xy-rd.xy*ly.z),3.),0.,1.);\n    r = clamp(r,0.,1.);\n    r += ly1*ly2*step(ly.z-p.z,0.);\n    r -= s.x*0.2;\n    r -= s.y;\n    //r = clamp(r,0.,1.);\n    return r;\n}\n\nvec3 colo(vec3 p, vec3 n, vec2 d, vec3 rd) {\n    vec3 col = 1.-d.xxx/8.;\n    vec3 l = lpos(0.);\n    col += n*0.1;\n    \n    vec3 s = sh(p,n,0.);\n    float l1 = clamp(length(l-p)*0.5,0.,1.);\n    float l2 = clamp(pow(1.-length(l.xy-rd.xy*l.z),3.),0.,1.);\n    col = clamp(col,0.,1.);\n    vec3 ocol = col;\n    col.b += l1*l2*step(l.z-p.z,0.);\n    col.b -= s.x*0.2;\n    col.b -= s.y;\n    vec3 ly = lpos(1.);\n    s = sh(p,n,1.);\n    float ly1 = clamp(length(ly-p)*0.5,0.,1.);\n    float ly2 = clamp(pow(1.-length(ly.xy-rd.xy*ly.z),3.),0.,1.);\n    col = clamp(col,0.,1.);\n    col.rg += ly1*ly2*step(ly.z-p.z,0.);\n    col.rg -= s.x*0.2;\n    col.rg -= s.y;\n    col = ocol;\n    float yl = pl(p,n,rd,0.);\n    float bl = pl(p,n,rd,1.);\n    col.b += yl;\n    col.rg += bl;\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 R = iResolution.xy;\n    float ar = R.x/R.y;\n    uv -= 0.5;\n    uv.x *= ar;\n    vec3 col = vec3(0.);\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv,1.));\n    vec2 d = RM(ro,rd,1.);\n    vec3 p = ro+rd*d.x;\n    vec3 n = calcNorm(p);\n    col += colo(p,n,d,rd);\n    float ior = 1.;\n    for (int i=0;i<1;i++) {\n        ro = p+n*0.003;\n        rd = refract(rd,-n,1./ior);\n        d = RM(ro,rd,-1.);\n        p = ro+rd*d.x;\n        n = -calcNorm(p);\n        col += colo(p,n,d,rd)/3.;\n    }\n    col *= .6;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}