{"ver":"0.1","info":{"id":"fdSBDt","date":"1647326498","viewed":95,"name":"Iteration-controlled Mandelbrot","username":"nerdynardy","description":"Control the number of iterations of the fractal by clicking!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 complex_multi(vec2 i1, vec2 i2) {\n    return vec2(i1.x * i2.x - i1.y * i2.y, i1.x * i2.y + i1.y * i2.x);\n}\n\nvec2 map(in vec2 z, in vec2 c) {\n    vec2 o;\n    o = complex_multi(z, z) + c;\n    return o;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float NUM = iMouse.x > 0. ? iMouse.x : floor(((-cos(iTime / 10.) + 1.) / 2.) * iResolution.x);\n\n    vec2 uv = (fragCoord/iResolution.xy - 0.5 - vec2(+.15, 0.)) * 3.;\n    vec3 col = vec3(0., 0., 0.);\n    \n    vec2 c = uv;\n    vec2 z = vec2(0, 0);\n    uv = map(z, c);\n    float iters = 0.;\n    for(float i = 0.; i < NUM; i++) {\n        uv = map(uv, c);\n        iters += 1.;\n        if(uv.x * uv.x + uv.y * uv.y > 2.*2.) {\n            float itersfrac = iters / NUM;\n            col = vec3(itersfrac, sin(itersfrac * 3.), sin(itersfrac * 5.));\n            uv = vec2(0., 0.);\n            break;\n        }\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}