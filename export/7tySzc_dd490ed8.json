{"ver":"0.1","info":{"id":"7tySzc","date":"1641144683","viewed":145,"name":"Celular Noise","username":"yabadabu","description":"Playing with voronoi 3dnnoise.\nAssign a random center to each integer coord. Visit the 9 cells and get the min distance","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","noise","voronoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Taken from https://www.shadertoy.com/view/Msf3WH\nfloat hash(vec3 p) { // replace this by something better\n  p  = fract( p*0.2183099+.1);\n  p *= 17.0;\n  return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\n\nvec3 cellCenter( vec3 ic ) {\n  return vec3(hash(ic.xyz), hash(ic.yxz * 153.), hash(ic.zxy));\n}\n\nfloat distanceToCenter( vec3 c0, vec3 ic) {\n  vec3 fc = c0 - ic;\n  vec3 center = cellCenter(ic.xyz);\n  vec3 delta = center - fc;\n  float r = dot( delta, delta );\n  return r;\n}\n\nfloat voronoise3D(vec3 c) {\n  float r = 10.;\n  vec3 ic = floor(c);\n  for( int x=-1; x<=1; x+=1 ) {\n      for( int y=-1; y<=1; y+=1 ) {\n        for( int z=-1; z<=1; z+=1 ) {\n          float r0 = distanceToCenter(c, ic + vec3(x,y,z));\n          r = min( r, r0 );\n         }\n      }\n  }\n  return clamp( 1.0 - pow(1. * r, 0.5), 0., 1.0);\n}\n\nfloat doNoise( vec3 uv ) {\n  float r = voronoise3D( uv );\n  return r;\n  float r1 = voronoise3D( uv * 2. + vec3(0.5) ) * 0.5;\n  return ( r + r1 * r1 );\n  float r2 = voronoise3D( uv * 4. ) * 0.25;\n  return (r + r1 * r1 + r2 * r2 );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * vec2( iResolution.x / iResolution.y, 1 );\n\n    float n = doNoise( vec3( uv * 8., iTime * 0.1 )); //mod( iTime, 32.0)) );\n  \n    // Output to screen\n    fragColor = vec4(n,n,n,1.0);\n}","name":"Image","description":"","type":"image"}]}