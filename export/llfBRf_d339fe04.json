{"ver":"0.1","info":{"id":"llfBRf","date":"1512658518","viewed":817,"name":"Nearest vs Linear filter","username":"robobo1221","description":"A comparison between nearest downscaling and linear downscaling","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["linear","soft","downscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//right is linear filtered left is unfiltered\n\nconst float scaleFactor = 50.0;\nconst float invScaleFactor = 1.0 / scaleFactor;\n\nvec3 getTexture(vec2 uv){\n\treturn texture(iChannel0, uv).rgb;\n}\n\nvec3 downScale(vec2 uv)\n{\n    vec2 g = floor(uv * scaleFactor) * invScaleFactor;\n\tvec2 p = fract(uv * scaleFactor);\n    \n\tvec3 c = getTexture(g);\n\tvec3 c2 = getTexture(g + vec2(invScaleFactor, 0.0));\n\tvec3 c3 = getTexture(g + vec2(invScaleFactor, invScaleFactor));\n\tvec3 c4 = getTexture(g + vec2(0.0, invScaleFactor));\n    \n    if (uv.x > 0.5) c = mix(mix(c, c2, p.x), mix(c4, c3, p.x), p.y); //Smooths it out\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(downScale(uv),1.0);\n}","name":"Image","description":"","type":"image"}]}