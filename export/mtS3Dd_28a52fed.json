{"ver":"0.1","info":{"id":"mtS3Dd","date":"1674122072","viewed":63,"name":"raymarching in 13 lines","username":"ZeroSkyline","description":"Simple raymarching in 13 lines.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sd_sphere(vec3 p, vec3 c, float r) { return length(p-c)-r; }\nvec3 pixel_dir(float fov, vec2 fragCoord) {return normalize(vec3(fragCoord-iResolution.xy*.5,-iResolution.y*.5/tan(radians(fov)*.5)));} \nfloat marching(vec3 p, vec3 d) {\n    float t = 0.; \n    for(int i = 0; i != 256; i++) { \n        float sd = sd_sphere(p + vec3(t) * d, vec3(0,0,1.f), .5); \n        if(sd < .0001) { return t; } \n        t += sd; \n    } return 0.; \n} \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = vec4(marching(vec3(0.,0.,2.), pixel_dir(60., fragCoord))); \n}","name":"Image","description":"","type":"image"}]}