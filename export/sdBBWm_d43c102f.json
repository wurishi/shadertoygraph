{"ver":"0.1","info":{"id":"sdBBWm","date":"1646752302","viewed":1489,"name":"part of the wall base","username":"cxm","description":"part of the wall base","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["animations","cineshader","wallcover"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define scale 1.\n#define count 20\n\nmat2 _rot1(float a) {\n  float s = sin(a), c = cos(a);\n  return mat2(c,s,-s,c);\n}\n\n\n\nfloat getPrint( in vec2 uv, float rot, float size ){\n\n    float p = 0.;\n    \n    uv -= .5;\n    uv *= _rot1( rot * .5 );\n    uv += .5;\n    \n    \n    p += abs( uv.x - .5 );\n    \n    p = mix(\n        p,\n        0.1,\n        smoothstep( 0., .5 * size, distance( vec2( uv.x, uv.y / 2. + .25 ), vec2( .5 + cos( rot ) * size * .1, .5 + sin( rot ) * size * .001 ) ) )\n    );\n\n    p *= size * .3;\n    \n    return p;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.yy;\n    // uv *= 2.;\n    vec2 bUv = fragCoord.xy/iResolution.xy;\n    \n    float resRa = ( iResolution.x / iResolution.y );\n    uv.x -= ( iResolution.x - iResolution.y ) / iResolution.y * .5;\n\n\n    // Time varying pixel color\n    vec3 col = vec3( 0. );\n    \n    float p = .0;\n    \n    vec3 colors[ 10 ];\n    \n    colors[0] = vec3( .91, .16, .74 );\n    colors[1] = vec3( .38, .75, .49 );\n    colors[2] = vec3( .55, .43, .91 );\n    colors[3] = vec3( .15, .29, .40 );\n    colors[4] = vec3( .11, .49, .39 );\n    colors[5] = vec3( .74, .2, .36 );\n    colors[6] = vec3( .1, .23, .64 );\n    colors[7] = vec3( .56, .12, .23 );\n    \n    \n    float t = iTime * 2.;\n    \n    \n    col = colors[ int( mod( float( t ) * .2, 7.) ) ];\n    \n    \n    col = mix(\n        colors[ int( mod( float( t ) * .2, 7.) ) ],\n        colors[ int( mod( float( t ) * .2 - 1., 7.) ) ],\n        1. - mod( t, 5. ) * .2\n    );\n\n\n    for( int i = 0; i < count; i++ ){\n    \n        p = mix(\n            p,\n            float( i ) / float( count ),\n            abs( p - getPrint( uv, .1 + float( i ) - ( iTime + 4. ), .5 + float( i ) / float( count ) * scale * .9 ) )\n        );\n        \n        col = mix(\n            col,\n            vec3(\n                p * atan( uv.y, uv.x ),\n                p * sin( iTime ),\n                p * cos( iTime * 2. ) * sin( iTime )\n            ),\n            p\n        );\n        \n    }\n    \n    // transitions blur\n    // col = col * .05 + texture( iChannel0, bUv ).rgb * .95;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}