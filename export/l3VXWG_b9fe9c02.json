{"ver":"0.1","info":{"id":"l3VXWG","date":"1720461998","viewed":32,"name":"1234512","username":"jamielobban","description":"Testing spirals out","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","cloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 dark = vec4(0.2, 0.2, 0.2, 0.2);\nconst vec4 blue = vec4(0.5, 0.9, 0.8, 1.0);\nconst vec4 green = vec4(0.0, 0.8, 0.5, 1.0);\nconst vec4 red = vec4(0.3, 0.2, 0.2, 1.0);\nconst vec4 yellow = vec4(0.4, 0.8, 0.2, 1.0);\nconst vec4 purple = vec4(0.5, 0.2, 0.8, 1.0); \nconst vec4 cosmicBlue = vec4(0.1, 0.2, 0.3, 1.0); \n\nconst float sizeVariation = 1.0;\n#define PI 3.14159265358979323846\n\nfloat random(float n) {\n    return fract(sin(n) * 1e4);\n}\n\nfloat noise(float x) {\n    float i = floor(x);\n    float f = fract(x);\n    \n    return mix(random(i), random(i + 1.0), smoothstep(0.0, 1.0, f));\n}\n\nfloat star(vec2 uv, float size) {\n    uv *= iResolution.xy / max(iResolution.x, iResolution.y);\n    vec2 grid = fract(uv / size) - 0.5;\n    float d = length(grid);\n\n    float sizeVariation = 0.6 + 0.5 * sin(iTime * 0.6 + uv.x * 100.0 + uv.y * 50.0);\n\n    float starShape = smoothstep(0.02 * sizeVariation, 0.04 * sizeVariation, 0.04 - d);\n\n    return starShape;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy / iResolution.xy) - 0.5;\n    float angle = atan(uv.x, uv.y) * 2.0; \n    float l = length(uv);\n    float shear = 2.0 * log(l) * 0.4;\n    angle -= iTime / 8.0;\n    angle += log(l);\n    float n = noise(iTime);\n    float g = floor(cos(angle * 2.0));\n    \n    vec4 finalColor = abs(dark * g - shear / 2.0) + min(sin(1.0 - angle * 2.0),\n    cos(2.0 - angle * 2.0));\n\n    float intensity = 1.0 - length(finalColor.rgb);\n    \n\n    vec4 colorMix = mix(blue, cosmicBlue, smoothstep(0.0, 1.0, l)); \n    colorMix = mix(colorMix, green, smoothstep(0.1, 0.6, abs(sin(angle)))); \n    \n    //colorMix = mix(colorMix, purple, smoothstep(0.2, 0.7, abs(cos(angle)))); \n    //colorMix = mix(colorMix, red, smoothstep(0.3, 0.8, abs(cos(angle * 2.0)))); \n    //colorMix = mix(colorMix, yellow, smoothstep(0.4, 0.9, abs(sin(angle * 2.0))));\n    \n    fragColor = mix(finalColor, colorMix, intensity);\n\n\n    vec4 starColor = vec4(0.0);\n    float numStars = 5.0; \n    \n    for (float i = 0.0; i < numStars; i++) {\n        float starSize = (50.0 + random(i) * 5000.0) * .001;\n        vec2 starPos = vec2(random(i * 5080.0), random(i * 70880.0)); \n        starColor += star(fragCoord.xy + starPos * iResolution.xy, starSize);\n    }\n    \n    //fragColor = max(mixedColor, starColor);\n}\n","name":"Image","description":"","type":"image"}]}