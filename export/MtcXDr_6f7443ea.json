{"ver":"0.1","info":{"id":"MtcXDr","date":"1479139108","viewed":2581,"name":"Pretty Colors","username":"anprogrammer","description":"Pretty colors, inspired by IQ's fbm warp article","likes":49,"published":1,"flags":0,"usePreview":1,"tags":["colorsfbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N_DELTA 0.015625\nfloat rand(vec3 n) { \n    return fract(sin(dot(n, vec3(95.43583, 93.323197, 94.993431))) * 65536.32);\n}\n\nfloat perlin2(vec3 n)\n{\n    vec3 base = floor(n / N_DELTA) * N_DELTA;\n    vec3 dd = vec3(N_DELTA, 0.0, 0.0);\n    float\n        tl = rand(base + dd.yyy),\n        tr = rand(base + dd.xyy),\n        bl = rand(base + dd.yxy),\n        br = rand(base + dd.xxy);\n    vec3 p = (n - base) / dd.xxx;\n    float t = mix(tl, tr, p.x);\n    float b = mix(bl, br, p.x);\n    return mix(t, b, p.y);\n}\n\nfloat perlin3(vec3 n)\n{\n    vec3 base = vec3(n.x, n.y, floor(n.z / N_DELTA) * N_DELTA);\n    vec3 dd = vec3(N_DELTA, 0.0, 0.0);\n    vec3 p = (n - base) / dd.xxx;\n    float front = perlin2(base + dd.yyy);\n    float back = perlin2(base + dd.yyx);\n    return mix(front, back, p.z);\n}\n\nfloat fbm(vec3 n)\n{\n    float total = 0.0;\n    float m1 = 1.0;\n    float m2 = 0.1;\n    for (int i = 0; i < 5; i++)\n    {\n        total += perlin3(n * m1) * m2;\n        m2 *= 2.0;\n        m1 *= 0.5;\n    }\n    return total;\n}\n\nfloat nebula1(vec3 uv)\n{\n    float n1 = fbm(uv * 2.9 - 1000.0);\n    float n2 = fbm(uv + n1 * 0.05);   \n    return n2;\n}\n\nfloat nebula2(vec3 uv)\n{\n    float n1 = fbm(uv * 1.3 + 115.0);\n    float n2 = fbm(uv + n1 * 0.35);   \n    return fbm(uv + n2 * 0.17);\n}\n\nfloat nebula3(vec3 uv)\n{\n    float n1 = fbm(uv * 3.0);\n    float n2 = fbm(uv + n1 * 0.15);   \n    return n2;\n}\n\nvec3 nebula(vec3 uv)\n{\n    uv *= 10.0;\n\treturn nebula1(uv * 0.5) * vec3(1.0, 0.0, 0.0) +\n        \tnebula2(uv * 0.4) * vec3(0.0, 1.0, 0.0) +\n        \tnebula3(uv * 0.6) * vec3(0.0, 0.0, 1.0);\n        \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float size = max(iResolution.x, iResolution.y);\n\tvec2 xy = (fragCoord.xy - iResolution.xy * 0.5)  / size * 2.0;\n    vec3 rayDir = normalize(vec3(xy, 1.0));\n    vec2 uv = xy * 0.5 + 0.5;\n    \n    fragColor = vec4(vec3((nebula(vec3(uv * 5.1, iTime * 0.1) * 0.1) - 1.0)), 1.0);\n\n}","name":"Image","description":"","type":"image"}]}