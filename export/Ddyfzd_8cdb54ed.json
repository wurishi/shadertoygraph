{"ver":"0.1","info":{"id":"Ddyfzd","date":"1698511161","viewed":60,"name":"ebru","username":"gboyraz","description":"https://twitter.com/nasana_x","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["waves","marbling","ebru"],"hasliked":0,"parentid":"WtdXR8","parentname":"glowingMarblingBlack"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalize the fragment coordinates\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    // Determine the time scaling factor\n    float timeScale = 1.0;\n    \n    // Apply the time scaling factor to iTime\n    float scaledTime = iTime / 12.0 * timeScale;\n    \n    // Determine the base color\n    vec3 baseColor = vec3(0.4627, 0.051, 0.051) ;\n    \n    // Determine the number of iterations, default to 12 if not set\n    float iteration = 12.0;\n    \n    // Main loop to generate the wavy pattern\n    for(float i = 1.0; i < iteration; i++) {\n        uv.x += 0.6 / i * cos(i * 2.5 * uv.y + scaledTime);\n        uv.y += 0.6 / i * cos(i * 1.5 * uv.x + scaledTime);\n    }\n    \n    // Calculate the final fragment color\n    fragColor = vec4(baseColor * abs(sin(scaledTime - uv.x - uv.y)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}