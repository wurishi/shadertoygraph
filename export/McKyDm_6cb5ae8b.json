{"ver":"0.1","info":{"id":"McKyDm","date":"1731976665","viewed":150,"name":"2D voronoi water ","username":"Xu","description":"Voronoi water 2d\nfork from https://www.shadertoy.com/view/ldB3zc","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","water"],"hasliked":0,"parentid":"ldB3zc","parentname":"Voronoi - smooth"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash1( float n ) { return fract(sin(n)*43758.5453); }\nvec2  hash2( vec2  p ) { p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) ); return fract(sin(p)*43758.5453); }\n\n// The parameter w controls the smoothness\nvec4 voronoi( in vec2 x, float w ,float di)\n{\n    vec2 n = floor( x );\n    vec2 f = fract( x );\n\tvec4 m = vec4( 8.0, 0.0, 0.0, 0.0 );\n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2 g = vec2( float(i),float(j) );\n        vec2 o = hash2( n + g );\t\n\t\t// animate\n        o =0.5*sin( iTime + 6.2831*o );\n        // distance to cell\t\t\n\t\tfloat d = 1.2*length(g - f + o);\n\t\t\n        // cell color\n\t\tvec3 col = 0.2*vec3(1,2,7)-0.2*vec3(1,0,0);\n        // in linear space\n        col = col;\n        \n        // do the smooth min for colors and distances\t\t\n\t\tfloat h = smoothstep( -1.5, 0.3, (m.x-di*d)/w );\n\t    m.x   = mix( m.x,     d, h ) - h*(1.0-h)*w/(1.0+3.0*w); // distance\n\t\tm.yzw = mix( m.yzw, col, h ) + h*(1.0-h)*w/(1.0+3.0*w); // color\n    }\n\t\n\treturn m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  p = fragCoord/iResolution.y;\n    float c = 0.5*iResolution.x/iResolution.y;\n\tfloat scale = 4.0;\n    vec4 v1 = voronoi( 0.7*scale*p, 0.3,1.5 );\n    vec4 v2 = voronoi( 2.*scale*p, 0.3,0.8 );\n    vec4 v3 = voronoi( 4.*scale*p, 0.3,0.4 );\n    vec4 v = (2.*v1+0.5*v2+ 0.5*v3)/3.;\n    // gamma\n    vec3 col = sqrt(v.yzw);\n\t// reinforce white \n    if ((col.g > 0.64) && (col.g < 0.655))\n        col = 1.0*vec3( 0.239, 0.714, 0.984);\n    else if (col.g >= 0.655) \n        col = 1.45*vec3( 0.239, 0.714, 0.984);    \n\t\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}