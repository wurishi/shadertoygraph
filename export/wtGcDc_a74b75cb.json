{"ver":"0.1","info":{"id":"wtGcDc","date":"1611867036","viewed":92,"name":"A new way to plot Mandelbrot Set","username":"rsiqueira","description":"A new way to plot Mandelbrot Set fractal","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsl2rgb( in vec3 c ) {\n  vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n  return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n   vec2 uv = fragCoord/iResolution.xy;\n\n\tuv.x = uv.x/122.;\n\tuv.y = uv.y/32. - 0.015;\n\n    float pixel_y = uv.y * 100.;\n    float pixel_x = uv.x * 550. - 3.;\n\n    float X = pixel_x;\n    float Y = pixel_y;\n    float n = 120.;\n\n\tfor (float k=17.;k>0.;k-=1.) {\n\n\t\tfloat X_new = X*X - Y*Y + pixel_x;\n\t\tfloat Y_new = 2.*X*Y    + pixel_y;\n        X = X_new;\n        Y = Y_new;\n\n        n=n-1.;\n\n\t\tif (tan(sin(X_new+iTime)+sin(Y_new))<-4.) {\n          fragColor = vec4(hsl2rgb( \n                              vec3(.2+k/20. -iTime*0.1, 0.8, 0.6+ sin(n/5.)*cos(n/15.+iTime/2.)*n/280.)\n                      ),1.0);\n        }\n\t}\n}","name":"Image","description":"","type":"image"}]}