{"ver":"0.1","info":{"id":"XtB3Wc","date":"1432899084","viewed":446,"name":"glowing 2D Metaballs","username":"the23","description":"same colored metaballs, using the \"expensive\" metaballs function.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","metaballs","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float speed = 10.0;\n\nconst float radius = 2.7;\nconst float thresholdFactor = 0.008;\nconst int ballCount = 6;\n\nconst vec3 backgroundColor = vec3(0.0);\nconst vec3 metaballColor = vec3(1.0, 0.3, 0.02);\n\nfloat dstMetaball(vec2 pos, vec2 center, float radius)\n{\n  vec2 diff = pos - center;\n  return radius / dot(diff, diff);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{ \n  // create centered local positions\n  float aspect = iResolution.x / iResolution.y;\n  vec2 tex = fragCoord.xy / iResolution.xy;\n  tex.x *= aspect;\n  tex -= clamp(vec2(aspect, 1.0 / aspect) - 1.0, 0.0, 1.0)  * 0.5;\n    \n  vec3 color = backgroundColor;\n\n    \n  float dst = 0.0;\n  // add the first ball in the middle\n  dst += dstMetaball(tex, vec2(0.5, 0.5), radius);\n\n  // init the vars for the other balls\n  vec2 ballPos = vec2(0.25, 0.0);\n  float angle = radians(60.0 + iTime * speed);\n  mat2 matRotate = mat2(cos(angle), -sin(angle),\n                        sin(angle),  cos(angle));\n\n  // iterate over the balls, sum up the distance, rotate the ball position\n  for (int i=0; i < ballCount; ++i)\n  {\n    dst += dstMetaball(tex, ballPos + 0.5/*center*/, radius);\n    ballPos = matRotate * ballPos;\n  }\n    \n  // normalize the distance\n  dst /= float(ballCount) + 1.0;\n  \n  // blend between colors\n  color = mix(backgroundColor, metaballColor, dst * thresholdFactor);\n\n  fragColor = vec4(color, 1.0);\n}\n","name":"","description":"","type":"image"}]}