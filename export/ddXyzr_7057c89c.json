{"ver":"0.1","info":{"id":"ddXyzr","date":"1686512755","viewed":55,"name":"Psychedelic Circles","username":"laminator42","description":"Test project of mine, inspired by kishimisu's video about shaders https://www.youtube.com/watch?v=f4s1h2YETNY&list=FLXsilG2qQjUSRG1__dhA_sg&index=1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","circles","psychedelic","circular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat smoothedCircles( float d, float period, float smoothing ) {\n    // introduce oscillation of ring pattern\n    // NOTE: the sign of iTime component will change inwards to outwards motion\n    d = sin(period*d - iTime)/period;\n    // flip negative (black) values\n    d = abs(d);\n\n    // smooth circles with 1/x instead of smoothstep\n    // d = smoothstep(0.0, 0.1, d);\n    d = smoothing / d;\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // normalize window to (-1,-1) to (1,1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 2.0; i++) {\n        uv = fract(4.0 * uv) - 0.5;\n\n        float d = length(uv);\n\n        // sprinkle in some color\n        vec3 col = palette(length(uv0) + 0.5*iTime);\n\n        // smoothed circles as baseshape\n        d = smoothedCircles(d, 16., 0.01);\n\n        finalColor += col * d;\n\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}