{"ver":"0.1","info":{"id":"XtKcRW","date":"1535333802","viewed":173,"name":"Some Notes","username":"Veggiebob","description":"Some music notes made with an equation","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, vec2(\n        uv.x/25. - 4.81/16.,\n        uv.y/20. - 1.0/16.\n    )).rrg;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define s 1.059463 //the magical sound constant (the twelth root of 2)\n//https://pages.mtu.edu/~suits/NoteFreqCalcs.html\nfloat a (float o) {\n    return -3.+12.*o;\n}\nfloat b (float o) {\n    return -1.+12.*o;\n}\nfloat c (float o) {\n    return 0.+12.*o;\n}\nfloat d (float o) {\n    return 2.+12.*o;\n}\nfloat e (float o) {\n    return 4.+12.*o;\n}\nfloat f (float o) {\n    return 5.+12.*o;\n}\nfloat g (float o) {\n    return 7.+12.*o;\n}\nvec2 mainSound( in int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    float note = c(1.);\n    float pitch = 440.*pow(s, note);\n    return vec2( sin(6.2831*pitch*time) ) * pow(0.5, time);\n}","name":"Sound","description":"","type":"sound"}]}