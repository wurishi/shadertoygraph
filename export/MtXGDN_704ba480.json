{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// /*\n\n// Copyleft {c} 2015 Michael Pohoreski\n// For the minified < 280 characters version see: https://www.shadertoy.com/view/Mls3DH\n//  \n// ShaderToy ~has~ HAD a bug with C style comments and incorrectly counts them. :-(\n// Looks fixed as of Jan 23, 2015 !\n// However the minifier is confused and thinks this shader has 0 characters !\n\n// This stub will let you run with ShaderToy\n#define uvResolution iResolution\n#define vvTexCoord   fragCoord.xy / iResolution.xy\n#define unTime       iTime\n#define utDiffuse1   iChannel0\n\n// Original WebGL\n// Leave the sahder unforms and varyings commented out ...\n//precision mediump float;                      \n//uniform mediump float     unTime;             \n//uniform mediump float     unDuration;         \n//uniform         sampler2D utDiffuse1;         \n//uniform         sampler2D utDiffuse2;         \n//uniform lowp    vec2      uvResolution;       \n//varying lowp    vec2      vvTexCoord;         \n//\nconst float speed = 0.2;                      \nconst float frequency = 8.0;                  \n\nvec2 shift( vec2 p ) {                        \n   float x = frequency * (p.x + unTime*speed);\n   float y = frequency * (p.y + unTime*speed);\n   vec2 q = cos( vec2(                        \n       cos(x-y)*cos(y),                       \n       sin(x+y)*sin(y) ) );                   \n   return q;                                  \n}                                             \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {                                 \n    vec2 r = vvTexCoord;                      \n    vec2 p = shift( r );             \n    r += 1.0;                                 \n    vec2 q = shift(r);                        \n    float amplitude = 2.0 / uvResolution.x;   \n    vec2 s = vvTexCoord + amplitude * (p - q);\n    s.y = 1. - s.y; // flip Y axis for ShaderToy\n    fragColor = texture( utDiffuse1, s );\n}\n// */\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MtXGDN","date":"1422046368","viewed":229,"name":"BUG: 0 Chars!","username":"MichaelPohoreski","description":"Nested multi-line C++ and C style comments confuse the minifier count :-)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}