{"ver":"0.1","info":{"id":"ldVfDK","date":"1530633707","viewed":84,"name":"First reflection","username":"Veggiebob","description":"Reflects 1 sphere. Yay! (not reallly; I can't figure out why there are 2 reflections?)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["reflection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float groundHeight = 0.;\nvec4 traceGround (vec3 o, vec3 r){\n    if(r.y>0.){\n        return vec4(100000., 1000000., 1000000., 0.);\n    } else {\n        float steps = (groundHeight-o.y)/r.y;\n        vec3 p = o+r*steps;\n        return vec4(p.x, p.z, length(p-o), 1.);\n    }\n}\nvec4 sphere (vec3 o, vec3 r, vec3 pos, float radius){\n    vec3 p = o;\n    float t = 0.;\n    for(int i = 0; i<32; i++){\n        p = o+r*t;\n        float d = length(p-pos)-radius;\n        t+=d*0.5;\n    }\n    float hit = 0.;\n    if(abs(length(p-pos)-radius)<0.01){\n        hit = 1.;\n    }\n    return vec4(p.xy, length(p-o), hit);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( -iResolution.xy + 2.0 * fragCoord ) / iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    if( mouse.x <= 0.0 ) mouse = vec2( -0.0, 0.3 );\n    mouse-=0.5;\n    mouse.x*=10.;\n    mouse.y*=5.;\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    vec3 camera = vec3(0., .1, 0.);\n    vec3 ray = vec3(cos(mouse.x+uv.x), uv.y+mouse.y, sin(mouse.x+uv.x));\n    ray = normalize(ray);\n\tfloat td = 0.;\n    vec3 rSpherePos = vec3(sin(iTime)+1.5, 0.5, 0.);\n    float rSphereRad = 0.2;\n    vec4 no = traceGround(camera, ray);\n    td+=no.z;\n    float fog = 1./(1.+td*td*0.2);\n    vec3 tex = texture(iChannel1, no.xy).rgb;\n    col+=tex*fog;\n    if(no.w==1.){\n        float r1 = texture(iChannel0, no.xy).r;\n        float r2 = texture(iChannel0, no.xy+.34).r;\n        vec3 randomRay = vec3(r1-0.5, 0., r2-0.5);\n        vec3 newRay = reflect(ray, vec3(0., 1., 0.));\n\t\tnewRay += ray* 0.01 + randomRay * 0.05; \n\t\tvec3 newOrigin = newRay;\n        vec4 s = sphere(newOrigin, newRay, rSpherePos, rSphereRad);\n        td+=s.z;\n        fog = 1./(1.+td*td*0.2);\n        if(s.w==1.&&s.z>0.){\n            col*=0.5*fog;\n        \tcol+=texture(iChannel2, s.xy-rSpherePos.xz).rgb*fog*0.8;\n        }\n    }\n    vec4 spf = sphere(camera, ray, rSpherePos, rSphereRad);\n    fog = 1./(1.+spf.z*spf.z*0.2);\n    if(spf.w>0.){\n    \tcol=texture(iChannel2, spf.xy-rSpherePos.xz).rgb*fog;\n    }\n    //col*=fog;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}