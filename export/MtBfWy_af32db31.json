{"ver":"0.1","info":{"id":"MtBfWy","date":"1517149785","viewed":331,"name":"Circulos - Circles","username":"jamque","description":"A circle of circles moving around.\nThis is my first shader on ShaderToy.\nI like the result :-)\nPlease send me comments in order to learn how to write more efficient shaders.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","geometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_CIRCLES 16\n\nfloat aspectScreen = 1.0;\nvec2  pixels = vec2(0.0, 0.0);\nfloat radTime = 0.0;\n\nvec3 circle (vec2 center, float radio, vec3 color){\n\n    vec2 pos = pixels - center;\n    pos.y *= aspectScreen; \n        \n    color *= step (length(pos),radio);\n    return color;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tpixels = fragCoord.xy / iResolution.xy;\n    aspectScreen = iResolution.y / iResolution.x;\n    radTime = radians(iTime);\n    \n    radTime *=60.0; // Rotaion Velocity\n\n    vec2 circlePos;\n\n    // Values declaration\n    float sizeSin = 0.07 * sin(iTime) + 0.1;\n\tfloat sizeCos = 0.05 * cos(iTime) + 0.1;\n    float phase   = 0.0; \t\t\t\t\t// In radians\n    vec3  color   = vec3(0.0,0.0,0.0); \t\t// Black Background\n\n    for (int i=0; i< MAX_CIRCLES; i++){\n        \n\t    // Position of circles\n    \tcirclePos = vec2 (aspectScreen * 0.25*sin(radTime+phase)+0.5,\n                             0.25*cos(radTime+phase) + 0.5);\n    \tphase = float(i+1) * (3.14159 * 2.0) / float(MAX_CIRCLES);\n\n        // Color Construction\n        float blueColor = float(i) * 0.1;\n        float redColor = 1.0 - blueColor;\n        if (color == vec3 (0.0,0.0,0.0)){ // Protection for no add Blending\n\t\t\tcolor += circle(circlePos, 0.4*(bool(i % 2) ? sizeSin : sizeCos), vec3 (redColor,float(i % 2),blueColor));\n        }\n    }\n    \n\tfragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}