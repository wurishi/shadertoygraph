{"ver":"0.1","info":{"id":"wlcXWM","date":"1581039797","viewed":181,"name":"Smooth gradation with falloff","username":"saki7","description":"Two-point based, 'perceptually linear' gradation; features compensation for Chevreul Illusion and Mach bands.\n\nBase interpolation algo could be any function which returns value in range [0.0-1.0].\n\nhttps://www.desmos.com/calculator/h514fpsc8v","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["gradient","hermite","gradation","lanczos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License: CC0\n\nconst float PI = 3.1415926535897932384626433832795;\n\nconst vec2 pt_a = vec2(0.3 * 640.0, 0.3 * 360.0);\nconst vec2 pt_b = vec2(0.6 * 640.0, 0.75 * 360.0);\n\nconst vec3 col_a = vec3(0.0, 1.0, 0.0);\nconst vec3 col_b = vec3(0.0, 0.0, 1.0);\n\n\nvec4 from_linear(vec4 rgb_l)\n{\n    bvec4 cutoff = lessThan(rgb_l, vec4(0.0031308));\n    vec4 higher = vec4(1.055) * pow(rgb_l, vec4(1.0/2.4)) - vec4(0.055);\n    vec4 lower = rgb_l * vec4(12.92);\n\n    return mix(higher, lower, cutoff);\n}\n\n// sinc, normalized\nfloat sincn(float x)\n{\n    return sin(PI * x) / (PI * x);\n}\n\nfloat lanczos(float x, float n)\n{\n    return sincn(x) * sincn(x / n);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 direction = pt_b - pt_a; // constant\n    float len2 = dot(direction, direction); // constant; length(direction)^2\n\n    float t = dot(fragCoord - pt_a, direction) / len2;\n    \n    float falloff = abs(mod(iTime, 2.0) - 1.0);\n    float perc = pow(t, pow(1.0 - falloff + 0.5, 2.0));\n\n    //perc = smoothstep(0.0, 1.0, perc);\n    perc = clamp(1.0 - pow(lanczos(clamp(perc, 0.001, 1.0), 1.0), 1.2), 0.0, 1.0);\n    \n    fragColor = from_linear(vec4(mix(col_a, col_b, perc), 1.0));\n}","name":"Image","description":"","type":"image"}]}