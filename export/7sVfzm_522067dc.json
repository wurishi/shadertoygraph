{"ver":"0.1","info":{"id":"7sVfzm","date":"1659372108","viewed":306,"name":"illan","username":"dyla","description":"grow, dance, fade, repeat","likes":11,"published":1,"flags":96,"usePreview":0,"tags":["noise","visualization","music","perlin","curl","particles","bubbles","flow","chaos","dance","warped","chaotic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/min(iResolution.x, iResolution.y);\n    vec2 wrp = uv+0.85*perlin(uv, 2, iTime);\n\n    vec4 col = \n      (mix(perlin(wrp, 5, iTime),\n           length(curl(wrp, 5, iTime))*0.05,\n            0.5)\n       -0.5)\n       * vec4(0.01, 0.1, 0.4, 1.0)*1.8\n       + vec4(0.01, 0.1, 0.4, 1.0)*1.5;\n    \n    for (int i=0; i<cnt; i++) {\n      vec4 part = getParticle(i, iChannel0);\n      float r = part.z * 0.035;\n      float d = distance(uv, part.xy);\n      vec4 clr = mix(vec4(0.1,0.2,0.7,1.0),vec4(0.7,0.7,0.9,1.0),prand(vec2(float(i), float(i+1)))); \n      float intn = (1.0-(smoothstep(0.0, r, d)))\n      * (1.0 - smoothstep(0.5, life, part.z))\n      * smoothstep(0.1, 0.3, part.z);\n      col = mix(col, clr, intn);  \n    }\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"llBSRw","filepath":"https://soundcloud.com/microcosmos/panda-on-the-bamboo-tree-6?in=microcosmos/sets/panda-on-the-bamboo-tree-xtradimensional-motions&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/microcosmos/panda-on-the-bamboo-tree-6?in=microcosmos/sets/panda-on-the-bamboo-tree-xtradimensional-motions&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    int index = getIndex(ivec2(fragCoord));\n    if (index==-1) discard;\n    \n    float rez = min(iResolution.x, iResolution.y);\n    vec2 maxCoords = iResolution.xy / rez;\n   \n    vec2 uv = fragCoord/iResolution.xy;\n    if (iFrame<5) {\n      fragColor = prand4(uv);\n      fragColor.xy *= maxCoords; \n      return;\n    }\n    \n    float dt = min(iTimeDelta, 0.1);\n    \n    vec4 c = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    if (c.z>life || c.x<-0.1 || c.x>maxCoords.x+0.1 || c.y<-0.1 || c.y>maxCoords.y+0.1) {\n      c = prand4(uv+iTime);\n      c.xy *= maxCoords;\n      c.z = 0.1;\n    } else {\n      float freq = float(index)/float(cnt);//prand(fragCoord);\n      float speed = texture(iChannel1, vec2(freq, 0.0)).x*2.5+0.1;\n      int octavesOfNoise = int(ceil(4.0*freq))+2;\n      c.xy += speed*curl(c.xy, octavesOfNoise, iTime)*dt*0.065;\n      c.z = c.z*(1.0 + c.w*0.0125 + dt*0.125);\n    }\n    fragColor = c;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"int cnt = 300;\nfloat life = 3.0;\n\nvec4 getParticle(int i, sampler2D ch) {\n  ivec2 p = ivec2(i % 200, i / 200);\n  return texelFetch(ch, p, 0);\n}\n\nint getIndex(ivec2 p) {\n  if (p.x>=200) return -1;\n  int i = p.y*200+p.x;\n  return (i>=cnt) ? -1 : i;\n}\n\nfloat prand(vec2 uv) {\n    return fract(sin(dot(mod(uv,153.789),vec2(12.9898,78.233)))*43758.5453) ;\n}\n\nvec4 prand4(vec2 uv) {\n    return vec4(prand(uv), prand(uv+0.2), prand(uv+0.3), prand(uv+0.4));\n}\n\nfloat fprand(vec2 p, float f) {\n    vec2 x = p*f;\n    vec2 i = floor(x);\n    vec2 r = fract(x);\n    vec2 a = vec2(1.0, 0.0);\n    \n    float v1 = mix(prand(i+a.yy), prand(i+a.xy), smoothstep(0.0,1.0,r.x));\n    float v2 = mix(prand(i+a.yx), prand(i+a.xx), smoothstep(0.0,1.0,r.x));\n    \n    return mix(v1, v2, smoothstep(0.0,1.0,r.y));\n}\n\n#define v0 1.125\n#define f0 2.0\n#define vmul 0.5\n#define fmul 1.9\n\nfloat perlin(vec2 uv, int octaves, float t) {\n    float f = f0;\n    float v = v0;\n    float r = 0.0;\n    vec2 wind = vec2(0.0, 0.0125);\n    for (int i=0; i<octaves; i++){\n        r += (fprand(uv+float(-i)*t*wind, f)-0.5)*v;\n        v *= vmul;\n        f *= fmul;\n    }\n    return r;\n}\n\n\n#define EPS 0.000175\nvec2 curl(vec2 uv, int octaves, float t) {\n    vec2 eps = vec2(EPS,0.0);\n    return vec2(\n         ((perlin(uv-eps.yx, octaves, t)) - (perlin(uv+eps.yx, octaves, t))),\n        -((perlin(uv-eps.xy, octaves, t)) - (perlin(uv+eps.xy, octaves, t)))\n    )/(2.0*EPS);\n}","name":"Common","description":"","type":"common"}]}