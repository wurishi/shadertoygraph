{"ver":"0.1","info":{"id":"msyfWz","date":"1698121617","viewed":19,"name":"fosfenos - variations","username":"davidmachadosf","description":"patterns repeats at many different scales...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fosfenos"],"hasliked":0,"parentid":"cdBfR1","parentname":"fosfenos - linear"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI  =  3.141592;\nconst float DOIS_PI = 2.*PI;\n\n\nconst float pot  =   2.5;\nconst float freq =  5.;\n\n\nconst vec3 a = vec3(  .086,   .086,   .09); // bgcolor: eigengrau\n\n\nconst vec3 b = vec3(  .051,  .553, .350); \nconst vec3 c = vec3(  .052,  .161, .064);\nconst vec3 d = vec3(  .053,  .103, .013);\n\n\nvec3 palette( float t ) {\n    return a/10. + b*cos(t*t+t) + c*sin(t*t) + d*sin(t)*cos(t);// + cos( 1.28318*(c*t+d+b*t*t) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float xRat = 30.*(iResolution.x/pow(iResolution.y+iResolution.x,iResolution.x));\n    float yRat = 20.*(iResolution.y/pow(iResolution.x,iResolution.y));\n    \n    vec2 uv = (fragCoord/iResolution.x + vec2(xRat,yRat));\n    \n    float x = uv.x;\n    float y = uv.y;\n\n\n    //float valxy = \n    //    1. -\n    //     pow( (1.+sin((2.*PI)*freq*sin(.00001*iTime*iTime*iTime)*(x+y)))/2., pot) * \n    //     pow( (1.+cos((2.*PI)*freq*sin(.00001*iTime*iTime*iTime)*(y-x)))/2., pot);\n    \n    \n    \n    float valxy = \n         -iTime/500.\n         +\n         ((1.+cos(freq*x*y*iTime/2.)) / (iTime*iTime/1000.)) \n         * \n         ((1.+sin(freq*y/x*iTime/5.)) / (iTime*iTime/1000.)) \n         ;\n    \n    //vec3 col = vec3(valxy);\n    vec3 col = palette(valxy);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}