{"ver":"0.1","info":{"id":"3slyW4","date":"1584804201","viewed":94,"name":"Interaction of colors","username":"rrrzzz","description":"from Josef Albers' book Interaction of Color","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["color","abstract","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid drawRectangle(float startX, float startY, float h, float w, vec2 uv, vec3 bcol, out vec3 col)\n{\n\tif(distance(uv.x, startX) < w && distance(uv.y, startY) < h/2.){\n        \tcol = bcol;\n        }\n}\n\nfloat getSmooth(float threshold, float deviation, float fragCoord){\n\treturn smoothstep(threshold - deviation, threshold + deviation, fragCoord);\n}\n\nvoid GetShape(int shape, vec2 uv, out vec3 col)\n{\n    vec3 l;\n    vec3 r;\n    vec3 brickCol;\n    float s;\n\n    \n    float aspect = iResolution.x / iResolution.y;\n\n    float w;\n    float h;\n    \n   \n    \tif (shape == 0){\n       brickCol = vec3(0.8,0.8,0.7);\n        w = .04;\n    \th = .45;\n\n    \t\t    \n    \tl = vec3(.6, 0.8, 0.9);\n        r = vec3(.9, .5, .0);\n        \n        float s = getSmooth(0.5, 0.0005, uv.x);\n        col = mix(l,r,s);\n        drawRectangle(.25, .5, h, w, uv, brickCol, col);\n        drawRectangle(.75, .5, h, w, uv, brickCol, col);    \n        }\n        \n        if (shape == 1){\n        brickCol = vec3(147./255.,112./255.,178./255.);\n        w = .04;\n    \th = .45;\n\n    \t\t    \n    \tl = vec3(81./255., 43./255., 93./255.);\n        r = vec3(160./255., 134./255., 198./255.);\n        \n         s = getSmooth(0.5, 0.0005, uv.x);\n        col = mix(l,r,s);\n        drawRectangle(.25, .5, h, w, uv, brickCol, col);\n        drawRectangle(.75, .5, h, w, uv, brickCol, col);\n        }\n        \n        if (shape == 2){\n        brickCol = vec3(107./255., 187./255., 199./255.);\n        w = 1.0;\n    \th = 0.5;\n        drawRectangle(0.0, 0.75, h, w, uv, brickCol, col);\n        \n        brickCol = vec3(250./255., 154./255., 22./255.);\n\t\tdrawRectangle(0.0, 0.25, h, w, uv, brickCol, col);\n        \n        w = 0.04;\n        h = .66;\n        brickCol = vec3(190./255., 177./255., 136./255.);\n        drawRectangle(.5, .5, h, w, uv, brickCol, col);\n        \n        brickCol = vec3(17./255., 17./255., 74./255.);\n        w = 1.0;\n    \th = 0.16666;\n        drawRectangle(0.0, 0.57, h, w, uv, brickCol, col);       \n        \n        brickCol = vec3(221./255., 215./255., 41./255.);\n        w = 1.0;\n    \th = 0.16666;\n        drawRectangle(0.0, 0.41, h, w, uv, brickCol, col);\n        }\n        \n        if (shape == 3){\n        vec3 lower = vec3(79./255., 79./255., 79./255.);\n        vec3 higher = vec3(237./255., 248./255., 253./255.);\n        col = mix(lower, higher, uv.y); \n        \n        \n        brickCol = vec3(140./255., 144./255., 138./255.);\n        w = 0.04;\n    \th = 0.66;\n        drawRectangle(0.5, 0.5, h, w, uv, brickCol, col);\n        }\n    \t    \n    \tvec3 lower;\t\n    \tvec3 higher; \n        if (shape == 4){\n        lower = vec3(14./255., 14./255., 14./255.);\n        higher = vec3(237./255., 248./255., 253./255.);\n        col = mix(lower, higher, uv.y); \n        \n        \n        brickCol = vec3(140./255., 144./255., 138./255.);\n        w = 0.04;\n    \th = 0.66;\n        drawRectangle(0.25, 0.5, h, w, uv, brickCol, col);\n        \n        brickCol = vec3(140./255., 144./255., 138./255.);\n     \n        drawRectangle(0.5, 0.5, h, w, uv, brickCol, col);\n        \n        brickCol = vec3(140./255., 144./255., 138./255.);\n    \n        drawRectangle(0.75, 0.5, h, w, uv, brickCol, col);\n        }\n        \n        if (shape == 5){\n        higher = vec3(127./255., 45./255., 168./255.);\n        lower = vec3(83./255., 71./255., 53./255.);          \n        \n        w = 1.0;\n    \th = 0.5;\n        drawRectangle(0.0, 0.75, h, w, uv, higher, col);\n        drawRectangle(0.0, 0.25, h, w, uv, lower, col);\n        \n        brickCol == vec3(131./255., 111./255., 106./255.);\n        \n        w = 0.03;\n        h = w * aspect * 2.;\n        \n     \tdrawRectangle(0.5, 0.75, h, w, uv, brickCol, col);\n        drawRectangle(0.5, 0.25, h, w, uv, brickCol, col);\n        }\n        \n        if (shape == 6){\n        higher = vec3(250./255., 248./255., 228./255.);\n        lower = vec3(9./255., 184./255., 201./255.);          \n        \n        w = 1.0;\n    \th = 0.5;\n        drawRectangle(0.0, 0.75, h, w, uv, higher, col);\n        drawRectangle(0.0, 0.25, h, w, uv, lower, col);\n        \n        brickCol = vec3(224./255., 202./255., 148./255.);\n        \n        w = 0.03;\n        h = w * aspect * 2.;\n        w = 0.03 * 1.75;\n        \n     \tdrawRectangle(0.5, 0.75, h, w, uv, brickCol, col);\n        \n        brickCol = vec3(167./255., 194./255., 147./255.);\n        \n        drawRectangle(0.5, 0.25, h, w, uv, brickCol, col);\n        }     \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;    \n\tint shape = int(floor(mod(iTime/2.0, 7.0)));\n    vec3 col;\n    vec3 col1;\n    vec3 col2;\n    \n    GetShape(shape, uv, col1);\n    \n    shape++;\n    shape = shape > 6 ? 0 : shape;\n\tGetShape(shape, uv, col2);\n    \n    col = mix(col1, col2, smoothstep(0.0, 1.0,mod(iTime/2.0, 1.0)));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}