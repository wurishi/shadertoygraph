{"ver":"0.1","info":{"id":"7dcSzX","date":"1634473271","viewed":225,"name":"Cloudy Crags","username":"spalmer","description":"golfing Mountains at dawn by guil","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["clouds","mountains","golf"],"hasliked":0,"parentid":"sdtSz2","parentname":"Mountains at dawn"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by S. Guillitte 2021\n// golfed by spalmer\n\n// this is only 555 characters,\n// was 561 before dean_the_coder's helpful suggestions.\n\n// FabriceNeyret2 style\n#define R(a) mat2(cos(a+vec4(0,11,33,0)))\n/* */\n#define S(A,B) += abs(dot(sin(s*p A),B)/s)\n#define N normalize\n\nvoid mainImage(out vec4 c, vec2 q)\n{\n    vec2 r = iResolution.xy;\n    q = (q + q - r)/r.y; // viewport\n\tfloat t = iTime, k = .0015, x;\n    vec3 o = vec3(2);\n    o.xz *= R(.1 * t);    \n    vec3 w = N(-o) // camera\n    //, u = N(cross(w, vec3(0,1,0)))\n    , u = N(vec3(-w.z,0,w.x)) // thx dean_the_coder!\n    , v = N(cross(u, w))\n    , d = N(q.x*u + q.y*v + 4.*w)\n    , a = vec3(0), p;\n    o.x -= .2*t;\n    t = 3.5; // now trace len, skip empty space at start\n    for (int i = 99; i-- > 0; k *= 1.025) {      \n        p = t * d + o;\n        float s = 2., z = 1., e, f;\t// Yonatan combined field\n        for (e = f = p.y; s < 1e2; s *= 1.6)\n            p.xz *= R(s),\n            e S(, vec3(.4)), // fog\n            f S(.xz*.5, vec2(1)); // hill\n        z += f > .001 ? e : -exp(-f*f);\n        x = max(z, 0.);\n        t += 2.5 * k * x * x;\n        a = .95 * a + .07 * x * vec3(x * x, x, 1);\n    }    \n    c = vec4(.5 * log(1. + a), 1); // tonemap\n}\n/* */\n\n// guil's is 948 ch.\n\n/* * /\n// but see Yonatan Mountains revisited https://shadertoy.com/view/ss3Sz2  !! \n// was only 442 and now golfed even more, down to 397 ch\n// still some golfing to be had there!  it doesn't spin the camera.  Has snow?!\nvoid mainImage(out vec4 C, vec2 Q)\n{\n    float o,c,i,e,f,s,g,k=.01;\n    vec2 r = iResolution.xy;\n    float t = iTime;\n    for(o=c=1.;i++<1e2;g+=min(f,max(.03,e))*.7) {\n        s=2.;vec3 p=vec3((Q.xy-r/s)/r.y*g,g-s);\n        p.yz*=R(-.8);\n        p.z+=t;\n        for(e=f=p.y;s<2e2;s/=.6)\n            p.xz*=R(s),\n            e+=abs(dot(sin(p*s)/s,p-p+.3)),\n            f+=abs(dot(sin(p.xz*s*.6)/s,r/r));\n        o+=(f>k*k?e:-exp(-f*f))*o*k;\n    }\n    c+=e;    \n    C = vec4(o);\n    C.rg -= c*.04;    \n}\n/* */\n\n// original tweet https://twitter.com/User2E32/status/1443544969847918593\n// but code in pastebin is gone, try https://gist.github.com/yonatan/f1793265416354f1229a41352d4bb115\n\n/* // saved from gist\n// r = probably screen resolution, o = output color, g = ray depth into the scene\n// FC.xy = which pixel we are on\nfloat i,e,f,s,g,k=.01;\nfor(o++;i++<100;){// go upto 100 steps with the ray\n    s=2.;\n    vec3 p = vec3((FC.xy-r/s)/r.y*g, g-s); // defining ray direction\n    p.yz *= rotate2D(-.8); // rotate the camera/ray downwards\n    p.z += t;// fly forward over time\n    e=f=p.y\n    // compute the terrain height and fog density at this xz coordinate\n    for(;s<200;s*=1.0/0.6){\n        // the position also serves as a source for the seed: higher octaves just use a more-quickly changing noise function\n        p.xz *= rotate2D(s);\n        // generate two random numbers: fog density, and terrain height\n        e+=abs(dot(sin(p*s)/s,p-p+.4));// fog density, because it contains y\n        f+=abs(dot(sin(p.xz*s*.6)/s, vec2(1.0)));// terrain height\n    }\n    o += (f > k*k ? e : -exp(-f*f))*o*k;// when the terrain is hit, add terrain color, otherwise add fog color\n    g += min(f,max(.03,e))*.3 // go deeper, but at max go to the terrain\n}\n*/","name":"Image","description":"","type":"image"}]}