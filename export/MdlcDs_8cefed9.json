{"ver":"0.1","info":{"id":"MdlcDs","date":"1490465789","viewed":586,"name":"cycles in permutations","username":"FabriceNeyret2","description":"Generates a random permutation table (restart for new seed)\nthen iterates it: patterns correspond to the various different cycles (pattern length=cycle length).\nMore analytic display on [url]https://www.shadertoy.com/view/Ml3GWl[/url]","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["cycles","orbits","permutations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// buf A: generate a permutation table using https://www.shadertoy.com/view/Ml3GWl\n// buf B: iterate the permutation\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    \n    if (iFrame <= 200) {  // --- display the permutation matrix\n        vec2 P = floor((U-.5)/R*8.);\n        O = texture(iChannel0,(.5+P)/iChannelResolution[0].xy);\n    }\n    else { // --- display the itered permutation (cycles should be obvious)\n        float v = texture(iChannel1, (.5+floor(U*vec2(1,64./R.y)))/R).x;\n        v = floor(v *63.+.5);\n        O = mod(floor(vec4(v,v/4.,v/16.,1)),4.)/4.;\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// generates a permutation table using https://www.shadertoy.com/view/Ml3GWl\n\n#define N 8.\n\n//#define t float(iFrame)          // deterministic seed\n#define t (60.*iTime)        // time-random seed\n\n#define rnd2(x,y) fract(4563.*sin(1e4*((x)+.017*(y))-17.53*t))\n#define T(U) texture(iChannel0, mod(.5+U,N)/iResolution.xy)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    U -= .5;                               // we want integer index\n    if (iFrame<1) {\n        O +=  ( U.x + N*U.y +.0*.5 ) / (N*N-1.) -O; // start with ordered list\n        return;\n    }\n    \n    O = T(U);\n    \n    if (iFrame > 150) return;  \n    \n    float n = mod(float(iFrame),3.);      // alternate 3 phases in time\n    \n    if (n==0.) O = T(U+1.);               // offset\n    \n    if (n==1. &&\n        rnd2(floor(U.x/2.),U.y) < .5 )    // random twin-lines permutations\n           O = T(U-vec2(2.*mod(U.x,2.)-1., 0));\n    \n    if (n==2. &&\n        rnd2(U.x,floor(U.y/2.)) < .5 )    // random twin-columns permutations\n           O = T(U-vec2(0, 2.*mod(U.y,2.)-1.));\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// iterate the permutation choosen in bufA\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    if (iFrame<150) { O = vec4(U.y-.5)/64.; return; }\n    \n \tvec2 R = iResolution.xy;\n    float v;\n    \n    if (U.x==.5) v = texture(iChannel0,U/R).x, v = floor(v *63.+.5),\n                 O = texture(iChannel1,(.5+vec2(mod(v,8.),floor(v/8.)))/R);\n    else         O = texture(iChannel0,(U-vec2(1,0))/R);\n}","name":"Buf B","description":"","type":"buffer"}]}