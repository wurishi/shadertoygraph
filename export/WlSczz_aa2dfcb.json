{"ver":"0.1","info":{"id":"WlSczz","date":"1593537992","viewed":242,"name":"Mandelbrot disco","username":"Ausfragezeichen","description":"My fun first try on implementing z = zÂ² + c","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    uv *= 3.; //zoom\n    \n    vec2 c = uv;\n    \n    float i2 = 0.;\n    \n    float maxI = 25. + iTime;\n    \n    for( float i = 0.; i < maxI; i++) //iterations\n    {\n        //complex multiplication: c.x = real, c.y = imaginary;\n        float a = c.x * c.x - c.y * c.y;\n        float b = 2. * c.x * c.y;\n        c = vec2( a, b) + uv;\n        \n        //first time it is sure to escape (real | imaginary > 2)\n        if( i2 == 0. && (abs(c.x) > 2. || abs(c.y) > 2.))\n        {\n            i2 = i;\n        }\n    }\n    \n    //red = real, green = imaginary\n    vec3 col = vec3(abs(c.x), abs(c.y), 0.);\n    \n    if( abs(c.x) > 2. || abs(c.y) > 2.)\n    {\n        col = vec3(0.);\n    }\n\t\n    //blue = iterations\n    col += vec3(0.,0.,i2/maxI);\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}