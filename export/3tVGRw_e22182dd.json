{"ver":"0.1","info":{"id":"3tVGRw","date":"1579872958","viewed":120,"name":"Experiment with ids","username":"Axioplase","description":"I'm trying to rederive a way to give an ID to each square on the image, so that they can have their own colour. I know there are much better solutions in recent videos by iq and artofcode, so I'll study them later. For now, that's good enough.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Where I have no idea what I'm doing but it still looks a little bit cool.\nvec3 box(vec2 uv, float zoomOut) {\n   \n    uv -= vec2(2.,2.);\n    uv *= zoomOut;\n       \n    float i = 1.+abs(round(uv.x));\n    float j = 1.+abs(round(uv.y));\n    float id = round(100.*fract(sin(542.234*i*j + 471.012*j)));\n    float k = .5+.5*sin(iTime/100.*float(id)); \n\n    vec3 col;\n    if (int(id) % 2 == 0) {\n        col = 0.5+0.5*vec3(cos(15.97*id+iTime/3.), sin(3.234*id+iTime/2.), k);\n    } else {\n  \t    col = 0.5+0.5*vec3(-sin(2.762*id+iTime/2.), cos(12.198*id+iTime/3.), exp(1.-k));\n    }\n    return col;\n}\n\n\n// Also, kudos to the other magician on shadertoy. He'll recognize himself :)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = box(uv, 5.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}