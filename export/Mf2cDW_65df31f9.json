{"ver":"0.1","info":{"id":"Mf2cDW","date":"1722413099","viewed":55,"name":"HW3_Update[SH17A] Matrix rain","username":"RoosterWho","description":"Matrix rain. View in full screen.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["matrixrain","sh17a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"[SH17A] Matrix rain\" by reinder. https://shadertoy.com/view/ldjBW1\n// 2024-07-30 18:21:52\n\n// [SH17A] Matrix rain. Created by Reinder Nijhoff 2017\n// Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\n// @reindernijhoff\n//\n// https://www.shadertoy.com/view/ldjBW1\n//\n\nfloat random(float seed) {\n    return fract(sin(seed) * 437.5453123);\n}\n\n// 生成指定范围内的随机数\nfloat randomRange(float min, float max, float seed) {\n    return min + (max - min) * random(seed);\n}\n\n#define R fract(1e2*sin(p.x*8.+p.y))\nvoid mainImage(out vec4 o,vec2 u) {\n\n\n    float t = iTime;\n    float rd = randomRange(0.,1.,t);\n\n\n\n    vec3 v=vec3(u,1)/iResolution-.5,\n        s=(0.2 + 0.1*cos(t))/abs(v),\n        i=ceil(8e2*(s.z=min(s.y,s.x))*(s.y<s.x?v.xzz:v.zyz)),\n        j=fract(i*=.1),\n        p=vec3(9,int(iTime*(10.+8.*sin(i-=j).x)),0)+i;\n   o-=o,o.g=R/s.z;p*=j;o*=R>.9*(sin(.5*t))&&j.x<(.9*(sin(t*0.5)) + .9)&&j.y<.7?1.:0.;\n}","name":"Image","description":"","type":"image"}]}