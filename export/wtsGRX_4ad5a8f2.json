{"ver":"0.1","info":{"id":"wtsGRX","date":"1557163642","viewed":222,"name":"Webcam Fun With Colors!","username":"chaz303","description":"Some colors, some inversion, lots of fun.","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Chaz Wilson\n\nfloat restrict0to1 (float sig) {\n    return max(-1.0, min(1.0, sig));\n}\n\n\nfloat rgba_blend (float src, float alpha){\n\talpha = restrict0to1(alpha);\n    float blend = -src+1.0;\n    return (blend * alpha) + (src * (-alpha + 1.0));\n}\n\nvec4 filterMod(float[3] compAlphas, vec4 video1){ \n\tvec4 pixel;\n    for (int i = 0; i < 4; i++) {\n        pixel[i] = rgba_blend(video1[i], compAlphas[i]);\n    }\n\treturn pixel;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 uvStore = uv;\n    vec4 video1 = texture(iChannel0,uv);\n    vec4 pixel;\n        float alpha = 1.0;\n        float rAlpha = (sin(uv.x*uv.y+iTime*0.9)*0.5+0.5);\n        float gAlpha = (sin(uv.x*uv.y+iTime*0.75)*0.5+0.5);\n        float bAlpha = (sin(uv.x*uv.y+iTime*1.5)*0.7+0.5);\n        float[3] compAlphas = float[3](rAlpha, gAlpha, bAlpha);\n    \tpixel = filterMod(compAlphas, video1);\n\tfragColor = pixel;\n}","name":"Image","description":"","type":"image"}]}