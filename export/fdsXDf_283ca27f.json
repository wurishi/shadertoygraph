{"ver":"0.1","info":{"id":"fdsXDf","date":"1619379174","viewed":70,"name":"Smiley Faces Colour Experiment","username":"Williams3DWorld","description":"Colour animated smiley faces.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dshapes","smileyfaces"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv - p);\n    return smoothstep(r, r - blur, d);\n}\n\nfloat Band(float t, float start, float end, float blur) {\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1 * step2;\n}\n\nfloat Rectangle(vec2 uv,  vec2 p, float size, float left, float right, float bottom, float top, float blur) {\n    uv -= p;\n    uv /= size;\n    \n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n\n    return band1 * band2;\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size) {\n    float blur = 0.05;\n    uv -= p; // translating coord system\n    uv /= size;\n\n    float mask = Circle(uv, vec2(0, 0), .5, blur);\n    mask -= Circle(uv, vec2(-.2, .2), .12, blur);\n    mask -= Circle(uv, vec2(.2, .2), .12, blur); \n    \n    float mouth = Circle(uv, vec2(0, 0), .38, blur);\n    mouth -= Circle(uv, vec2(0, .1), .38, blur);\n    mouth = max(mouth, 0.);\n    \n    mask -= mouth;\n    \n    return mask;\n}\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // 0 <> 1\n    \n    uv -= vec2(0.04, .934); // -0.5 <> 0.5\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col = vec3(0.);\n\n    float mask = .0;\n    \n    for (float i = .0; i < 16.; i++) {\n        for (float j = .0; j < 9.; j++) {\n             mask += Smiley(uv, vec2(i * .11, j * .11), 0.08);\n        }\n    }\n\n    vec3 c = vec3(1., 0.5 + 0.5 * sin(iTime * 4.), 0.5 - 0.5 * sin(iTime * 4.));\n\n    col =  c * mask;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}