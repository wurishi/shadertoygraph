{"ver":"0.1","info":{"id":"wlSyDh","date":"1594682537","viewed":122,"name":"perspective pixel waves","username":"dtsmio","description":"pixel waves","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["waves","pixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float easeOutQuint(float x) {\n    return 1. - pow(1. - x, 4.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = (gl_FragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\n    float scale = 40.;\n    float w = length(uv + vec2(0., 3.));\n    w = pow(w, 4.) / scale;\n    \n    float a_time = iTime;\n    float a1 = smoothstep(0., 1., a_time);\n    float a2 = smoothstep(2., 3., a_time);\n    float a3 = smoothstep(4., 4., a_time);\n    float a4 = smoothstep(6., 8., a_time);\n\n    uv = mix (uv, uv/w, a2);\n\n    float p_scale = 100.;\n\n    float time = 1. * iTime;\n    float prog = clamp(time + 0.8, 0., 1.);\n    prog = 1. - easeOutQuint(1. - prog);\n\n    float p_start = -0.4;\n    float p_end = 0.3;\n\n    float p_size = (uv.y - p_start) / (p_end - p_start);\n    p_size = 1. - p_size;\n    p_size += a1 - 1.;\n    float o_size = p_size;\n\n    float s = smoothstep(max(0., p_size - 0.05), p_size, prog);\n\n    p_size = mix(0., 0.75, smoothstep(0., 0.4, s));\n    p_size = mix(p_size, o_size, smoothstep(0.4, 0.85, s));\n\n    float clp = 0.9;\n    p_size = mix(p_size, clp, step(clp, p_size) - step(1., p_size));\n    p_size = clamp((1. - p_size) / 2., 0., 0.5);\n\n    float pixel_speed = a3 * 4. * iTime;\n    vec2 fv = vec2(fract(uv.x * p_scale), fract(uv.y * p_scale - pixel_speed));\n    float mp = step(p_size, fv.x) - step(1. - p_size, fv.x);\n    mp = min(mp, step(p_size, fv.y) - step(1. - p_size, fv.y));\n\n    float wave_speed = 1. * iTime;\n    vec2 wv = vec2(uv.x * scale * 0.7, uv.y * scale * 0.5);\n    wv.x += a4 * 2. * sin(wv.y - wave_speed);\n    float wave = sin(wv.x);\n    wave = pow(wave, 6.);\n    wave = smoothstep(0.4, 1., wave);\n    wave *= step(p_start, uv.y) * mp;\n    wave = clamp(wave, 0., 1.);\n    vec3 col = vec3(0.1059, 0.0275, 0.0863);\n\n    vec2 pv = floor(uv * p_scale) / p_scale;\n    vec3 c1 = vec3(0.1608, 0.0196, 0.5882);\n    vec3 c2 = vec3(0.5765, 0.1333, 0.6157);\n    vec3 c3 = vec3(0.1059, 0.0275, 0.0863);\n    //vec3 c12 = mix(c1, c2, step(0.5, fract(sin(pv.x * 123. + pv.y * 100.) * 123.)));\n    vec3 c12 = mix(c1, c2, smoothstep(-0.5, 0.5, sin(-wv.x * 6. + wv.y * 6. - a3 * 12. * iTime)));\n\n    col = mix(col, c12, wave);\n    // col += fract(w * 2.)/4.;\n    col = mix(c3, col, smoothstep(p_start, p_start + 0.2, uv.y));\n    //col += c12/12.;\n    \n\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}