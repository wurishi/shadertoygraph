{"ver":"0.1","info":{"id":"Ms3GD2","date":"1452180680","viewed":584,"name":"Sound Experiment 6","username":"aiekick","description":"MB 3","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["mb3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 f, in vec2 g )\n{\n    vec2 s = iResolution.xy;\n    vec2 q = g/s;\n    f = texture(iChannel0, g / s);\n   \tf *= 0.5 + 0.5*pow( 10.* q.x * q.y * (1.0-q.x) * (1.0-q.y), 0.5 ); \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 f, in vec2 g )\n{\n    vec2 s = iResolution.xy;\n    \n    // central uv\n\tvec2 uv = 1.5*(2. * g - s)/s.y;\n    \n    // time\n    float t = iTime;\n    \n    // radius piloted by sound\n    vec3 soundRadius;\n    soundRadius.x = texture(iChannel1, vec2(0.15,0.25)).r;\n    soundRadius.y = texture(iChannel1, vec2(0.25,0.25)).r;\n    soundRadius.z = texture(iChannel1, vec2(0.35,0.25)).r;\n    soundRadius = (soundRadius - 0.5) / 0.5 + 1.5;\n    //soundRadius = min(soundRadius, vec3(0.7));\n    \n    // path\n    vec2 d0 = uv - vec2(cos(t), sin(t)) * soundRadius.x;\n    vec2 d1 = uv - vec2(cos(t+2.09439), sin(t+2.09439)) * soundRadius.y;\n    vec2 d2 = uv - vec2(cos(t+4.18879), sin(t+4.18879)) * soundRadius.z;\n    \n    \n    // metaballs\n    vec3 m = 0.01 / vec3(dot(d0,d0),dot(d1,d1),dot(d2,d2))/3.;\n    m = 1. - (normalize(m) - dot(m,m) * m);\n    \n    // current color\n\tvec4 col = vec4(m,1);\n    \n    // last color\n    vec4 bufA = texture(iChannel0, g / s);\n    \n    // simple blending of new and last color\n    f = col * 0.02 + bufA * 0.98;\n    \n    // add some colored aura to the metaballs\n    f += smoothstep(bufA, bufA+0.01, vec4(.8,.2,.5,1))*0.01;\n}","name":"Buf A","description":"","type":"buffer"}]}