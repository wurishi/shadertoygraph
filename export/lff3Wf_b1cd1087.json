{"ver":"0.1","info":{"id":"lff3Wf","date":"1703613739","viewed":57,"name":"Basic Truchet Tiles","username":"chronos","description":"My first truchet tile attempt. Nothing special :)\nYeah, I know, I'm late to the party :P","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["simple","basic","truchet","rotation","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265;\n\nfloat sRGBencode(float C_linear) { return C_linear > 0.0031308 ? (1.055 * pow(C_linear, 1./2.4) - 0.055) : (12.92 * C_linear); }\nvec3 sRGBencode(vec3 C_linear) { C_linear = clamp(C_linear, 0., 1.); return vec3(sRGBencode(C_linear.x), sRGBencode(C_linear.y), sRGBencode(C_linear.z)); }\nfloat sRGBdecode(float C_sRGB) { return C_sRGB > 0.04045 ? (pow((C_sRGB + 0.055)/1.055, 2.4) ) : (C_sRGB / 12.92); }\nvec3 sRGBdecode(vec3 C_sRGB) { return vec3(sRGBdecode(C_sRGB.x), sRGBdecode(C_sRGB.y), sRGBdecode(C_sRGB.z)); }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pix_coord = floor(fragCoord.xy);\n\n    {\n        float t = .5 * PI * (\n        floor(iTime/10.)\n        +smoothstep(0.875, 1., fract(iTime/10.))\n        );\n    \n        float c = cos(t), s = sin(t);\n        pix_coord = (mat2(c, -s, s, c) * (pix_coord -iResolution.xy/2.) + iResolution.xy/2.);\n    }\n        \n    pix_coord += iTime*10.;\n    \n    float cell_size_in_pix = 150.;\n\n    float pix_size = 2. / cell_size_in_pix;\n\n    vec2 cell_index = floor(pix_coord/cell_size_in_pix);\n    vec2 cell_coord = (fract(pix_coord/cell_size_in_pix) * cell_size_in_pix + 0.5) / cell_size_in_pix;\n    vec2 cell_coord_centered = 2. * cell_coord - 1.;\n\n    ivec2 size = textureSize(iChannel0, 0);\n    vec3 rnd = texelFetch(iChannel0, ivec2(cell_index)%size, 0).rgb;\n\n    float sgn = rnd[0] > 0.5 ? -1. : 1.;\n\n    float t = .5 * PI * (\n        floor(sgn*iTime+rnd[1])\n        +smoothstep(0.75, 1., fract(sgn*iTime+rnd[1]))\n        );\n    \n    float c = cos(t), s = sin(t);\n    cell_coord_centered = mat2(c, -s, s, c) * cell_coord_centered;\n    cell_coord = cell_coord_centered*.25 +.5;\n\n    vec2 corner = vec2(  1.,  sgn);\n\n    vec2 annulus_dists = \n        vec2(\n            length(cell_coord_centered - corner),\n            length(cell_coord_centered + corner)\n            ) - 1.;\n    \n    float halfwidth = 0.1;\n    vec2 annulus_masks = \n        smoothstep(halfwidth + pix_size, halfwidth - pix_size, annulus_dists)\n        *\n        smoothstep(-halfwidth - pix_size, -halfwidth + pix_size, annulus_dists)\n        ;\n        \n    float halfwidth2 = halfwidth * .7;\n    vec2 annulus_masks2 = \n        smoothstep(halfwidth2 + pix_size, halfwidth2 - pix_size, annulus_dists)\n        *\n        smoothstep(-halfwidth2 - pix_size, -halfwidth2 + pix_size, annulus_dists)\n        ;\n\n    float circle_dist = length(cell_coord_centered) - (1.+ 0.1*pix_size);\n    float circle_mask = smoothstep(2. * pix_size, 0., circle_dist);\n    vec3 disc_color = sRGBdecode(texture(iChannel1, cell_coord).rgb);\n    \n    vec3 color = vec3( disc_color * circle_mask * (1.-length(cell_coord_centered)) ) * (1.-annulus_masks.x) * (1.-annulus_masks.y);\n    \n    color += vec3(.0,0.0,.0) * (annulus_masks.x + annulus_masks.y) * circle_mask;\n\n    color += (annulus_masks2.x + annulus_masks2.y) * circle_mask;\n\n    color = sRGBencode(clamp(color, 0., 1.));\n    fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}]}