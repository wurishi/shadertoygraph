{"ver":"0.1","info":{"id":"Ns3cWn","date":"1653241353","viewed":399,"name":"Elden Rings","username":"antonOTI","description":"It has been a while since I've done a fan art.\nI've sunk too much time into elden ring lately.\nIf I have the time, I'll split the central column so I can make a define for each great runes","likes":9,"published":3,"flags":64,"usePreview":0,"tags":["2d","sdf","fanart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ltSSz1","filepath":"https://soundcloud.com/samuelkimmusic/elden-ring-main-theme-the-final-battle-epic-version","previewfilepath":"https://soundcloud.com/samuelkimmusic/elden-ring-main-theme-the-final-battle-epic-version","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define FULL 255\n#define GODRICK 15\n#define MORGOT 17\n\nint GLYPHS = FULL;\n\n// ------------------------\n// FROM :  https://www.shadertoy.com/view/ldlXRS\n// BY : nimitz\n\n#define time iTime*0.0125\n#define tau 6.2831853\n\nmat2 makem2(in float theta){float c = cos(theta);float s = sin(theta);return mat2(c,-s,s,c);}\nfloat noise( in vec2 x ){return texture(iChannel0, x*.01).x;}\n\nfloat fbm(in vec2 p)\n{\t\n\tfloat z=2.;\n\tfloat rz = 0.;\n\tvec2 bp = p;\n    \n\tfor (float i= 1.;i < 6.;i++)\n\t{\n        float soundBias = texture(iChannel1, vec2(1. - (i / 6.), 0.)).x;\n        rz+= abs((noise(p) * (1. - soundBias*.2)-0.5)*2.)/z + soundBias * .02;\n        soundBias = soundBias * soundBias;\n        soundBias = 1.2 - soundBias;\n\t\tz = z*2. * soundBias;\n\t\tp = p*2.;\n\t}\n\treturn rz;\n}\n\n// ------------------------\n\n#define _smoothFactor 1. / iResolution.y\n#define _smooth(p,r,s) smoothstep(-s, s, p-(r))\n#define _smooths(p,r,sf) _smooth(p,r,_smoothFactor * sf)\n\n#define _circle(p, r, s, sf) (1. - _smooths(abs(length(p) - r), s/2., sf))\n\n#define _poly(p,x1,x2) (x1 + x2 * p * p)\n\nfloat eldenRing(vec2 uv)\n{\n    float fontSize = .015;\n    float circleSep = .05;\n    float sf = 4.;\n    float f = 0.;\n    \n     if((GLYPHS & 1) != 0)\n        f = max(f, _circle(uv, .155, fontSize * .25, sf));\n     if((GLYPHS & 2) != 0)\n        f = max(f, _circle(uv - vec2(0, circleSep), .14, fontSize, sf));\n    if((GLYPHS & 4) != 0)\n        f = max(f, _circle(uv - vec2(circleSep * -0.86602, circleSep * -0.49999), .14, fontSize, sf));\n    if((GLYPHS & 8) != 0)\n        f = max(f, _circle(uv - vec2(circleSep * 0.86602, circleSep * -0.49999), .14, fontSize, sf));\n    \n    if((GLYPHS & 16) != 0)\n        f = max(f, (1. - _smooths(abs(uv.x), fontSize * .5, sf)) * step(abs(uv.y) , .25));\n    \n    float parSize = fontSize * 2.6;\n    \n    if((GLYPHS & 32) != 0)\n        f = max(f, 1. - _smooths(abs(_poly(abs(uv.x), .25, 1.3) - uv.y), parSize  * (.0125 * sf-abs(uv.x * iResolution.y/iResolution.x)), sf));\n        \n    if((GLYPHS & 64) != 0)\n        f = max(f, 1. - _smooths(abs(_poly(abs(uv.x), -.09, 1.3) - uv.y), parSize * 1.2 * (.0125 * sf-abs(uv.x * iResolution.y/iResolution.x)), sf));\n    \n    if((GLYPHS & 128) != 0)\n        f = max(f, 1. - _smooths(abs(_poly(abs(uv.x), -.25, 1.2) - uv.y), parSize * (.025 * sf-abs(uv.x * iResolution.y/iResolution.x)), sf));\n    \n    return f;\n}\n\nfloat radagon(vec2 uv)\n{\n    uv = vec2(uv.x * 0.7071 - uv.y * 0.7071, uv.x * 0.7071 + uv.y * 0.7071);\n    uv = abs(mod(uv * 12., 1.) - .5);\n    return (.25 - pow(max(uv.x * uv.y, 0.0001), .75)) * 4.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.y - vec2(iResolution.x / iResolution.y * .5, .5);\n    vec2 disp = vec2(fbm(uv),fbm(uv * .7 - time));\n    disp = pow(disp, vec2(2.)) * .025;\n    uv += disp;\n    float f = eldenRing(uv);\n    f += radagon(uv) * pow(max(.7 - length(uv), .0001), 2.2) * 3.5 * fbm(uv * .8 - .5);\n    f *= (1. + length(disp) * 400.) / 2.;\n    // fiery colors from https://www.shadertoy.com/view/MdKfDh\n    fragColor = vec4(2.*f, 2. *f*f*f, f*f*f*f, 1.);\n    fragColor = pow(fragColor, vec4(2.2));\n}","name":"Image","description":"","type":"image"}]}