{"ver":"0.1","info":{"id":"4tSXzd","date":"1445766827","viewed":257,"name":"Chroma Circles ","username":"StanRee","description":"Fun little circle drawing shader. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"mat2 rotate(float a){\n    return mat2(cos(a),-sin(a),\n                sin(a), cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfloat t = iTime * .5 ; \n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= 16./9.;\n    uv.x -= 16./9./4.;\n    float l = 0.; \n    vec3 col; \n    float size = 10.; \n    for(int x = 0; x < 20; x++)\n    {\n        for(int y = 0; y < 20; y++)\n        {\n            float radius = 1./size*(sin(t+float(x)*0.)+1.)*.5*.05+.1;\n            float width = .0051*(sin(t+1.)*.5)+.01;\n            vec2 pos = vec2(float(x)/size+(sin(t+float(x))+.1)*.5, float(y)/size +(cos(t+float(y)+1.)*.5));\n            \n            // pos = pos * rotate2d(t); \n            pos.x += -.5; \n            \n            float d = length(pos - uv);    \n            float var1 = uv.x + uv.y;\n            var1 = pos.x - uv.x + pos.y - uv.y;    \n            col = vec3(sin(var1+t)+1., cos(var1+t)+1., cos(var1+t+3.14159));     \n            l += smoothstep(radius-width, radius, d) - smoothstep(radius, radius+width, d);\n            col = vec3(sin(var1+t)+1., cos(var1+t)+1., cos(var1+t+3.14159)) * l;     \n        }  \n    }\n    \n\tfragColor = vec4(col.x, col.y, col.z, 1.0);\n}\n","name":"","description":"","type":"image"}]}