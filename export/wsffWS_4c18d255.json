{"ver":"0.1","info":{"id":"wsffWS","date":"1588955073","viewed":71,"name":"Kali Set Shader","username":"alati","description":"Simple kali set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractalorganicsymnetricgeometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int max_iterations = 63;\n\nvec2 kali_func( vec2 v ) {\n    float x=abs(v.x);\n    float y=abs(v.y);\n    float m=x*x+y*y;\n    x=x/m;\n    y=y/m;\n\n\treturn vec2(x,y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat zoom = 3.;\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5)/iResolution.y;\n\tuv *= zoom;\n\n\tvec2 center = -vec2( 2.*abs(sin(0.2*iTime +1.))-0.2, 3.*abs(cos(0.3*iTime+2.))-0.2 );\t\n\tfloat scale = 0.1;\n\n\t\n\tint count = max_iterations;\n\tvec2 v = uv;\n\tfor ( int i = 0 ; i < max_iterations; i++ ) {\n\t\tv = center + kali_func( v );\n\t\tif ( dot( v, v ) > 10.0 ) {\n\t\t\tcount = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfragColor = vec4( float( count ) * scale );\n}","name":"Image","description":"","type":"image"}]}