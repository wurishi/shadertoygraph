{"ver":"0.1","info":{"id":"NdtyRX","date":"1653834736","viewed":123,"name":"Attempt Flares","username":"mehow_one","description":"Trying to figure out how to accumulate light perpendicular from lightest point","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["light","flare","optic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float level = .25;\n    \n    vec3 hdr = texture(iChannel0, uv).rgb;\n    vec3 img = hdr;\n    hdr = vec3(floor(level+pow(hdr.r, 8.)));\n    \n    float it = 60.;\n  \tvec2 r = iResolution.xy * .75;\n    float c = it;\n    float p = 64.;\n    while(it > -1.)\n    {\n        float texL = texture(iChannel0, uv+vec2(it/r.x, 0.)).r;\n        float texR = texture(iChannel0, uv-vec2(it/r.x, 0.)).r;\n        hdr += floor(level+pow(max(texL,texR), p))*(1.-it/c);\n        float texU = texture(iChannel0, uv+vec2(0., it/r.y)).r;\n        float texD = texture(iChannel0, uv-vec2(0., it/r.y)).r;\n        hdr += floor(level+pow(max(texU,texD), p))*(1.-it/c);\n        hdr += pow(smoothstep(0.5,0.75,length(vec2(it/r.x, it/r.y)))/c,1./1.8);\n        it--;\n    }\n    \n    \n\tfragColor = vec4(pow(hdr*.05,vec3(1./1.333)),1.0);\n}","name":"Image","description":"","type":"image"}]}