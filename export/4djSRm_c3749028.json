{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"vec4 texture_blurred(in sampler2D tex, vec2 uv);\nvec4 texture_blurred_quantized(in sampler2D tex, vec2 uv, vec3 q);\nvec4 texture_blurred2_quantized(in sampler2D tex, vec2 uv, vec3 q);\nvec4 texture_denoise(in sampler2D tex, vec2 uv, float threshold, vec3 q);\nvec4 quantize(vec4 vec, vec3 q);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Vertically flip coord to right-way-around\n    vec2 xy = vec2(fragCoord.x, iResolution.y - fragCoord.y);\n    vec2 uv = xy/iResolution.xy;\n    \n    float dx = 1.0/iResolution.x;\n    float dy = 1.0/iResolution.y;\n\t\n    float offset = 1.0+mod(iTime*1.0, 16.0);\n    vec3 quant = vec3(offset, offset, offset);\n    // vec4 col = texture(iChannel0, uv);\n    // vec4 col = texture_blurred_quantized(iChannel0, uv, quant);\n    // vec4 col = texture_denoise(iChannel0, uv, 0.1, quant);\n    vec4 col = quantize(texture(iChannel0, uv), quant);\n    \n    fragColor = col;\n}\n\nvec4 texture_blurred(in sampler2D tex, vec2 uv)\n{\n    return (texture(iChannel0, uv)\n\t\t+ texture(iChannel0, vec2(uv.x+1.0, uv.y))\n\t\t+ texture(iChannel0, vec2(uv.x-1.0, uv.y))\n\t\t+ texture(iChannel0, vec2(uv.x, uv.y+1.0))\n\t\t+ texture(iChannel0, vec2(uv.x, uv.y-1.0)))/5.0;\n}\n\nvec4 texture_blurred_quantized(in sampler2D tex, vec2 uv, vec3 q)\n{\n    return (quantize(texture(iChannel0, uv), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x+1.0, uv.y)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x-1.0, uv.y)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x, uv.y+1.0)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x, uv.y-1.0)), q))/5.0;\n}\n\nvec4 texture_blurred2_quantized(in sampler2D tex, vec2 uv, vec3 q)\n{\n    return (quantize(texture(iChannel0, uv), q)\n        + quantize(texture(iChannel0, vec2(uv.x+1.0, uv.y+1.0)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x+1.0, uv.y-1.0)), q)\n        + quantize(texture(iChannel0, vec2(uv.x-1.0, uv.y+1.0)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x-1.0, uv.y-1.0)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x+1.0, uv.y)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x-1.0, uv.y)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x, uv.y+1.0)), q)\n\t\t+ quantize(texture(iChannel0, vec2(uv.x, uv.y-1.0)), q))/9.0;\n}\n        \nvec4 texture_denoise(in sampler2D tex, vec2 uv, float threshold, vec3 q)\n{\n    vec4 col = texture(tex, uv),\n        blurred = texture_blurred_quantized(tex, uv, q);\n    \n    if (length(col-blurred) <= threshold)\n        return blurred;\n    else\n        return col;\n}\n\nvec4 quantize(vec4 vec, vec3 q)\n{\n    vec.r = floor(vec.r*q.r)/q.r;\n    vec.g = floor(vec.g*q.g)/q.g;\n    vec.b = floor(vec.b*q.b)/q.b;\n    return vec;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4djSRm","date":"1410366830","viewed":565,"name":"Quantization transition","username":"Spaceoff","description":"Again just messing about and getting accustomed to GLSL.  Best viewed in full screen.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["animation","compression","quantization","image"],"hasliked":0,"parentid":"","parentname":""}}