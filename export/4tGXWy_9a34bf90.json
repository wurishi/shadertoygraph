{"ver":"0.1","info":{"id":"4tGXWy","date":"1485913317","viewed":92,"name":"Blur w/ Mouse Over Reveal","username":"soneb27","description":"Takes in a Texture and blurs it, which is then revealed with mouse over around a radius.\nHold down LMB over the texture and it will sharpen in a radius defined in the code.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Originally by Nikos Papadopoulos, 4rknova / 2015\n// Heavily modified by Dr. Sajid Farooq, 2016\n// The blur matrix. Since there are 9 pixels, each weight is 1/9 = 0.111 \n//to ensure that each pixel is averaged properly\n\n// Further Modified by Sone Berrios 2017\n\nfloat Radius = 0.1;\nfloat outlineThickness = 0.002;\n\nmat3 boxBlur = mat3(\n\t0.111, 0.111, 0.111, // first column (not row!)\n \t0.111, 0.111, 0.111, // second column\n\t0.111, 0.111, 0.111 // third column\n);\n\nmat3 edgeDetect3 = mat3(\n\t-1, -1, -1,\n    -1,  8, -1,\n    -1, -1, -1\n);\n\nmat3 sharpen = mat3(\n    0, -1,  0,\n   -1,  5, -1,\n    0, -1,  0\n);\n\nmat3 gausBlur = mat3( \n    0.0625, 0.125, 0.0625,\n    0.125,  0.25,  0.125,\n    0.0625, 0.125, 0.0625\n);\n        \nvec3 sample(const int x, const int y, in vec2 fragCoord)\n{\n     vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n     \n     uv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n    \n     return texture(iChannel0, uv).xyz;\n}\n\nvec3 filter(in vec2 fragCoord, mat3 kernel)\n{\n     vec3 sum = sample(-1, -1, fragCoord) * kernel[0][0]\n     + sample(-1, 0, fragCoord) * kernel[0][1]\n     + sample(-1, 1, fragCoord) * kernel[0][2]\n     + sample( 0, -1, fragCoord) * kernel[1][0]\n     + sample( 0, 0, fragCoord) * kernel[1][1]\n     + sample( 0, 1, fragCoord) * kernel[1][2]\n     + sample( 1, -1, fragCoord) * kernel[2][0]\n     + sample( 1, 0, fragCoord) * kernel[2][1]\n     + sample( 1, 1, fragCoord) * kernel[2][2];\n\n     return sum;\n}\n\nvec3 revealCircle(in vec2 fragCoord, vec2 loc)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n    vec3 cf;\n\n    //\"Reveal\" Blurred texture\n    if(length(loc - uv) < Radius)\n        cf = filter(fragCoord, sharpen);\n    else if(length(loc-uv) <= Radius + outlineThickness && length(loc-uv) >= Radius - outlineThickness)\n        cf = vec3(0.0,0.0,0.0); //make the circle radius more visible\n    else\n        cf = filter(fragCoord, gausBlur);\n    return cf;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 fc = fragCoord.xy;\n \tvec4 Location = iMouse / iResolution.xxxx;\n    \n \tvec3 cf = revealCircle(fc, Location.xy);\n \tfragColor = vec4(cf, 1);\n}","name":"Image","description":"","type":"image"}]}