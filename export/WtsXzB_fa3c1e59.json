{"ver":"0.1","info":{"id":"WtsXzB","date":"1563455869","viewed":208,"name":"Rotation webcam","username":"rekvin","description":"Rotation image","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 rotationZ( in float angle ) {\n\treturn mat3(\tcos(angle),\t\t-sin(angle),\t0,\n\t\t\t \t\tsin(angle),\t\tcos(angle),\t\t0,\n\t\t\t\t\t\t\t0,\t\t\t\t0,\t\t1 );\n}\n\nmat3 trans2d( in vec2 v ) {\n\treturn mat3(1,0,v.x,\n                0,1,v.y,\n                0,0,1);\n                \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    \n    float a = iResolution.x/iResolution.y;\n    float b = iResolution.y/iResolution.x;\n\n    \n    float zoom = (sin(iTime)+1.01)*3.0;\n    \n    vec2 center = vec2(uv.x/2.0, uv.y/2.0)/zoom;\n    \n    vec2 c= vec2(-0.5,-0.5*b);\n    mat3 r = rotationZ(iTime/6.0);\n    \n    mat3 p =trans2d(uv)*trans2d(c)*r * (trans2d(c));\n    \n    vec2  aVec3 =vec2(mod( p[0][2],1.0),mod(p[1][2]*a,1.0));\n    \n    fragColor = texture(iChannel0, aVec3);\n}","name":"Image","description":"","type":"image"}]}