{"ver":"0.1","info":{"id":"ddGGRD","date":"1678599704","viewed":72,"name":"2 spirals ","username":"RandoMissilannya","description":"2 Archimedean spirals with 2 atan overloads\nThese two combine nicely for a variety of effects through time","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["spiral","atan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI2 6.283186\n#define PI 3.141592\n#define HALF_PI 1.570796327\n\n//mucho inpration and copy and paste\n//https://www.shadertoy.com/view/DdsGRM\n//https://www.shadertoy.com/view/4sXXR7\n\n   \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -6 to 6)\n    vec2 st = (2.*fragCoord-iResolution.xy)/iResolution.xy;\n    st*=6.;   \n    \n\n    \n    float angle=fract(iTime*0.954929553 );\n    float angle1=fract(iTime*0.954929553 *.25);\n    float arm=mod(iTime*.5,PI2)+HALF_PI;\n    \n    arm=cos(arm);\n    arm=.35;\n    \n    // distance of point from the center\n    float d=length(st);\n    \n    //spiral 1 \n    //angle of point relative to the center\n    float f1=(atan(st.y/st.x)/PI)+ angle1;\n    //arm size and color adjustment\n    float col1=(fract(f1 + arm*d) -.225); \n    \n    //spiral 2 \n    //angle of point relative to the center\n    float f2 = atan(st.y, st.x)/PI2 + angle;\n    //const arm size and color adjustment\n    float col2 =abs(fract(f2 + 1.5*d) -.5);\n      \n    float color_component=(col1*abs(arm)+col2)*.75;\n    \n    \n    \n    //vec3 color = vec3(col1,color_component,col2);\n    //col1=smoothstep(col2,col1,col2*.6);\n    vec3 color = vec3(col1,color_component,col2);\n    \n    //color.g=mix(col1,col2,col2)*1.2;\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n    \n    \n    \n    \n    \n ","name":"Image","description":"","type":"image"}]}