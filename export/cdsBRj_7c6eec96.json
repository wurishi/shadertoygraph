{"ver":"0.1","info":{"id":"cdsBRj","date":"1688999926","viewed":63,"name":"GrayScale_LCD","username":"LCDShader","description":"探究灰度值","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float screen_step_y;\nfloat screen_step_x;\n\n//取RGB的最大分量\nfloat MaxGrey(vec3 color)\n{\n    float R=color.x;\n    float G=color.y;\n    float B=color.z;\n    float m=R;\n    if(G>m)\n    {\n       m=G;\n    }\n    if(B>m)\n    {\n      m=B;\n    }\n    return m;\n}\n//取平均值平均\nfloat AverageGrey(vec3 color)\n{\n    float R=color.x;\n    float G=color.y;\n    float B=color.z;\n    float m=(R+G+B)/3.0;\n    return m;\n}\n//按权重分配\nfloat WeightGrey(vec3 color)\n{\n   \n    return 0.3*color.x+0.59*color.y+0.11*color.z;\n}\n\nbool GrayValue(vec3 color,int num)\n{\n float value=MaxGrey(color);\n switch(num)\n {\n   case 0: value=MaxGrey(color);break;\n   case 1: value=AverageGrey(color);break;\n   case 2: value=WeightGrey(color);break;\n }\n if(value>0.5)\n {\n    return true;\n }\n return false;\n}\n\nvec3 Grayscale(vec3 color)\n{\n   if( GrayValue(color,2))\n    return vec3(1.0,1.0,1.0);\n    return vec3(0.0,0.0,0.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 color=texture(iChannel0,uv);  \n        fragColor=vec4(Grayscale(color.xyz),color.w);\n    \n}","name":"Image","description":"","type":"image"}]}