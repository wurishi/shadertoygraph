{"ver":"0.1","info":{"id":"wstXDs","date":"1573179090","viewed":267,"name":"five-pointed star","username":"leixinyue","description":"five-pointed star.\nLearning notes of Texturing and modeling.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["texturingandmodeling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getPosByAngle(float angle)\n{\n    return vec3(cos(angle), sin(angle), 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv = fragCoord / iResolution.y;\n    float npoints = 5.0;\n    //float npoints = 100.0;\n    float PI = 3.1415926;\n    float radiusMax = 0.2;\n    float radiusMin = 0.07;\n    vec3 starcolor = vec3(1.0000,1.,0.0000);\n    vec3 backgroundColor = vec3(1., 0., 0.);\n    float starangle = 2.0*PI / npoints;\n    vec3 p0 = radiusMax * getPosByAngle(0.0);\n    vec3 p1 = radiusMin * getPosByAngle(starangle);\n    vec2 center = vec2(0.5, 0.5);\n    vec2 curPosuv = uv - center;\n    float curRadius = length(curPosuv);\n    float curPosAngle = atan(curPosuv.x, curPosuv.y);\n    //float a = mod(curPosAngle, starangle)/starangle;\n    float a =  fract(curPosAngle/ starangle); // the percentage or ratio\n\tif (a >= 0.5)\n        a = 1.0 - a;\n    // a = a * starangle / 2.;\n    //a = a * starangle; // the real angle of cur pos\n    a = a * starangle * (1.2 - sin(iTime)*.8);\n    vec3 curPos = curRadius * getPosByAngle(a); \n    vec3 dir0 = p1 - p0;\n    vec3 dir1 = curPos - p0;\n    //float inOut = step(0., cross(dir0, dir1).z);\n    // antialiasing \n    //float inOut = smoothstep(0., 0.001, cross(dir0, dir1).z);\n    float pixwidth = 1.5 * curRadius / iResolution.y;\n    float inOut = smoothstep(-pixwidth, pixwidth, cross(dir0, dir1).z);\n    vec3 ct = mix(backgroundColor, starcolor, inOut);\n    \n    fragColor = vec4(ct, 0.);\n}","name":"Image","description":"","type":"image"}]}