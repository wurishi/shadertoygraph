{"ver":"0.1","info":{"id":"csG3zd","date":"1678995673","viewed":170,"name":"Spiral of Lerp","username":"incre_ment","description":"A beesandbombs style spiral using finite repetition and lerp-ing between SDFs (circle and box).","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["spiral","repetition","lerp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float TAU = 2.0*3.14159256;\n\n// Finite Repetition -  https://iquilezles.org/articles/distfunctions\nvec2 opRepLim( in vec2 p, in float s, in vec2 lima, in vec2 limb )\n{\n    return p-s*clamp(round(p/s),lima,limb);\n}\n\n// SDF Functions from IQ\nfloat circleSDF(vec2 coords, float rad, vec2 offset){\n  return (length(coords-offset) - rad);\n}\n\nfloat boxSDF(vec2 coords, in vec2 b )\n{\n    vec2 d = abs(coords)-b;\n    return (length(max(d,0.)) + min(max(d.x,d.y),0.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   vec2 uv = ( fragCoord - .5* iResolution.xy ) /iResolution.y;\n   \n   // Discretrize the coordinates into discrete cells\n   // Studied Bleuje's shader, here: https://www.shadertoy.com/view/dds3RS\n   float cellSize = .04;\n   vec2 cellDiscrete = floor((uv-cellSize/2.0)/cellSize);\n   \n   // Calculate offset parameters\n   float a = atan(cellDiscrete.y,cellDiscrete.x);\n   float l = length(cellDiscrete);\n\n   // Finite Repetition\n   vec2 r = opRepLim(uv, cellSize, vec2(-20,-10),vec2(20,10));\n   \n   // Lerp (mix) control using offset parameters\n   float t = .5 + .5*sin(-TAU*iTime/2.0 - a + l);\n   \n   // SDFs + lerping between circle and box\n   float cSDF = circleSDF(r, .009, vec2(0.,0.));   \n   float bSDF = boxSDF(r, vec2(.015,.015));\n   float lerpSDF = mix(cSDF, bSDF, 1.-t); \n\n   // Paint to screen\n   vec3 col = vec3(0.);\n   col += smoothstep(1.0/iResolution.y, -1.0/iResolution.y, lerpSDF);\n   \n   fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}