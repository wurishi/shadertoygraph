{"ver":"0.1","info":{"id":"tlXGDf","date":"1557862913","viewed":82,"name":"First 3D !","username":"JUMANJI","description":"First 3D ever thanks to \"The Art of Code\"","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p)\n{\n    return length(cross(p-ro, rd))/length(rd);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(0.,0.,-2.);\n    vec3 rd = vec3(uv.x,uv.y,0.)-ro;\n    \n    float t = iTime;\n    vec3 p = vec3(sin(t),0., 1.+cos(t));\n    float d = DistLine(ro,rd,p);\n    \n    d = smoothstep(.1, .09, d);\n    \n   \n\n    // Output to screen\n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}