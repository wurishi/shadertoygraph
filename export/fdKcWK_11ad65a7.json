{"ver":"0.1","info":{"id":"fdKcWK","date":"1655638290","viewed":80,"name":"Radial Array","username":"henrmota","description":"Training radial array to learn blender shading following https://www.youtube.com/watch?v=YWbs0vdvMEg&list=PLVm7O9OzjT6Fu8aDrP3N1Ni1ATbUH926s&index=6","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["radialarray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float radialGradient(vec2 uv) {\n    float angle = atan(uv.y, uv.x);\n    angle/=3.143;\n    angle *= 0.5;\n    angle += 0.5;\n    \n    return angle;\n}\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n   \n    float sectors = mod(iTime * 0.5, 5.);\n    \n    float angle = radialGradient(uv);\n   \n    angle = floor(angle * sectors);\n    angle += 0.5;\n    angle *= 6.283/sectors;\n   \n    uv += vec2( cos(angle), sin(angle)) * 0.3;\n   \n    // Time varying pixel color\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    uv = rotate(uv, angle - 3.143/2.);\n    uv.x = abs(uv.x * 1.3);\n    uv.x -= uv.y;\n    \n    \n    col += mix(vec3(1., 1., 1.), vec3(1., 0.2, 0.), smoothstep(0.1+0.001,0.1 - 0.001, length(uv)));\n    //col.rg = uv.xy;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}