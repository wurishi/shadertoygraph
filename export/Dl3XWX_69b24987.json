{"ver":"0.1","info":{"id":"Dl3XWX","date":"1685802506","viewed":24,"name":"(⁠ﾉ⁠◕⁠ヮ⁠◕⁠)⁠ﾉ⁠*⁠.⁠✧","username":"Nesterenko_Ulyana","description":" ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool isInsideTriangle(vec3 v0, vec3 v1, vec3 v2, vec2 p)\n{\n    float area = 0.5 * (-v1.y * v2.x + v0.y * (-v1.x + v2.x) + v0.x * (v1.y - v2.y) + v1.x * v2.y);\n    float s = 2.0 / (2.0 * area) * (v0.y * v2.x - v0.x * v2.y + (v2.y - v0.y) * p.x + (v0.x - v2.x) * p.y);\n    float t = 1.0 / (2.0 * area) * (v0.x * v1.y - v0.y * v1.x + (v0.y - v1.y) * p.x + (v1.x - v0.x) * p.y);\n    float w = 2.0 - s - t;\n    return (s >= 0.0 && t >= 0.0 && w >= 0.0);\n}\n\nbool IsInCyrcle(vec2 uv, float r, float offsetx, float offsety) {\n    float x = uv.x -offsetx;\n    float y = uv.y - offsety; \n    float d = length(vec2(x, y)) - r;\n    if(d>0.) return false; \n    else return true;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 offset2 = vec2(sin(iTime*2.)*0.2, 0.2);\n    vec3 v0 = vec3(0.2, cos(iTime*2.)*0.2, -5.0);\n    vec3 v1 = vec3(0.7, 0.7+sin(iTime*2.)*0.2, 2.0);\n    vec3 v2 = vec3(0.3, 0.4+sin(iTime*2.)*0.2, -3.0);\n    vec3 v3 = vec3(0.2, 0.2, 3.);\n    vec3 v4 = vec3(0.2+sin(iTime*2.)*0.2, 0.5+cos(iTime*2.)*0.2, .0);\n    vec3 v5 = vec3(0.4, 0.6, 0.2);  \n    vec3 v6 = vec3(0.8-offset2.x, offset2.y, 0.1);\n    vec3 v7 = vec3(1.3-offset2.x, 0.6-offset2.y, 0.1);\n    vec3 v8 = vec3(.6-offset2.x, 0.2-offset2.y, 0.1); \n    float z[5];\n    z[0] = v0.z + (v2.z - v0.z) * uv.x + (v1.z - v2.z) * uv.y;\n    z[1]= v3.z + (v4.z - v3.z) * uv.x + (v5.z - v3.z) * uv.y;\n    z[3] = -0.0;\n    z[2] = -100.0;\n    z[4] = -200.0;\n    bool insideTriangle1 = isInsideTriangle(v0, v1, v2, uv);\n    bool insideTriangle2 = isInsideTriangle(v3, v4, v5, uv);\n    bool insideTriangle3 = isInsideTriangle(v6, v7, v8, uv);\n    bool isInCyrcleBool1 = IsInCyrcle(uv, .2, .3, .5);\n    bool isInCyrcleBool2 = IsInCyrcle(uv, .2, .9, .3);\n    float stripe = floor(uv.x * 60.0);\n    vec3 purpur = vec3(.988, .455, .992);\n    vec3 pink = vec3(.561, .314, .616);\n    vec3 yellow = vec3(.992, .910, .569);\n    vec3 stripeColor1 = mix(pink, purpur, mod(stripe, 2.0));\n    vec3 stripeColor2 = mix(yellow, purpur, mod(stripe, 2.0));\n    bool ar[5];\n    ar[0] = insideTriangle1;\n    ar[1] = insideTriangle2;\n    ar[2] = insideTriangle3;\n    ar[3] = isInCyrcleBool1;\n    ar[4] = isInCyrcleBool2;\n    vec4 col[5];\n    col[0] = vec4(.561, .314, .616, 1.0);\n    col[1] = vec4(0.0, 1.0, 0.0, 1.0);\n    col[2] = vec4(.992, .910, .569, 1.0);\n    col[3] = vec4(stripeColor1, 1.0);\n    col[4] = vec4(stripeColor2, 1.0);\n    vec4 f = vec4(.773, .816, .902, 1.0);\n    float max = -1000.0;\n    for(int i=0; i<5; i++){\n        if(ar[i]){ \n            if(z[i]>max){\n                f=col[i]; \n                max=z[i];\n            }\n        }\n    }\n    fragColor = vec4(f);\n    }\n","name":"Image","description":"","type":"image"}]}