{"ver":"0.1","info":{"id":"csVXzc","date":"1681400548","viewed":128,"name":"Opera logo","username":"supah","description":"Created purely for enjoyment, this shader replicates the visual style of Opera's iconic logo.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["logo","gradient","geometry","browser","opera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n\nfloat C (vec2 uv) {\n    return smoothstep(fwidth(uv.x) + fwidth(uv.y), 0., length(uv) - .5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 1.5 * (fragCoord-.5*R.xy)/R.y;\n    vec3 col1 = vec3(1., .1, .13);\n    vec3 col2 = vec3(.65, 0., .1);\n    \n    float h = C(uv * vec2(2., 1.35));\n    float c1 = C(uv) - C(uv * vec2(1.275, 1.16) - vec2(.175, 0.));\n    float c2 = C(uv) - c1;\n\n    vec3 l = c1 * vec3(mix(col2, col1, uv.y + .5))\n              + c2 * vec3(mix(col1 + .1, col2 - .1, uv.y + .5));\n    fragColor = vec4(mix(vec3(1.), l, c1 + c2 - h), 1.);\n}","name":"Image","description":"","type":"image"}]}