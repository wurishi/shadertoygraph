{"ver":"0.1","info":{"id":"Ntt3DN","date":"1636138815","viewed":158,"name":"Equalizer by Osa","username":"Osakazaur","description":"Colorful simple equalizer","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["basic","music","equalizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    int lines = 24;\n    float max_heigh = 0.7;\n    \n    vec3 base_red = vec3(255., 29., 19.) / 255.;\n    vec3 base_org = vec3(255., 199., 19.) / 255.;\n    float smooth_ = fract(iTime / 258.)*.5;\n    vec3 base_col = mix(base_org, base_red, smoothstep(-0.3 + smooth_, 0.7 + smooth_, uv.y));\n    \n    vec3 eq_bot = vec3(0., 129., 150.) / 255.;\n    vec3 eq_top = vec3(0., 255., 255.) / 255.;\n    vec3 eq_col = mix(eq_bot, eq_top, smoothstep(0., max_heigh*.8, uv.y));\n    \n    float index = uv.x * float(lines);\n    float f = texelFetch(iChannel0, ivec2(int(index) * 512/ lines,.1), 0).x;\n    \n    bool mask_x = (abs(fract(index) - .5) < .4) ? true : false;\n    bool mask_y = (uv.y < f) ? true : false; \n\n    fragColor = mask_x && mask_y ? vec4(eq_col, 1.) : vec4(base_col,1.);\n\n}\n","name":"Image","description":"","type":"image"}]}