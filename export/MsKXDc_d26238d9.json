{"ver":"0.1","info":{"id":"MsKXDc","date":"1467228200","viewed":335,"name":"Cave of infinity","username":"stduhpf","description":"a test for raymarching 3D noise.\nThe normals seems broken.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["procedural","3d","raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float seed=0.; // seed used for the pseudo random number generator\n\nfloat interpol(float val){return smoothstep(0.,1.,val);}\n\n\nfloat rand01(vec2 co)\n{\n    return fract(seed+sin(seed+co.y*co.x*seed+dot(co,vec2(12.9898,78.233)))*43758.5453);\n}\n\nfloat rand55(vec2 co){return rand01(co)-.5;}\n\nvec3 getGrad(vec3 co){\n    return vec3(rand55(vec2(co.y*co.z,co.x)),rand55(vec2(co.y,co.x*co.z)),rand55(vec2(co.z,co.x*co.y)));}\n\nfloat perlin3D(vec3 uv)\n{\n             vec3 relco = fract(uv);\n         vec3 chco = floor(uv);\n        \n        vec3 grad1 = getGrad(chco);\n        vec3 grad2 = getGrad(chco+vec3(1,0,0));\n        vec3 grad3 = getGrad(chco+vec3(1,1,0));\n        vec3 grad4 = getGrad(chco+vec3(0,1,0));\n     \t\n    \tvec3 grad1t = getGrad(chco+vec3(0,0,1));\n        vec3 grad2t = getGrad(chco+vec3(1,0,1));\n        vec3 grad3t = getGrad(chco+vec3(1,1,1));\n        vec3 grad4t = getGrad(chco+vec3(0,1,1));\n        \n    \tfloat a = dot(grad1,relco);\n        float b = dot(grad2,relco-vec3(1,0,0));\n        float c = dot(grad3,relco-vec3(1,1,0));\n        float d = dot(grad4,relco-vec3(0,1,0));\n    \n    \tfloat a2 = dot(grad1t,relco-vec3(0,0,1));\n        float b2 = dot(grad2t,relco-vec3(1,0,1));\n        float c2 = dot(grad3t,relco-1.);\n        float d2 = dot(grad4t,relco-vec3(0,1,1));\n    \n            float noisea = mix(a,b,interpol(relco.x));\n        float noiseb = mix(d,c,interpol(relco.x));\n    float noise1 = mix(noisea,noiseb,interpol(relco.y));\n     \t\tfloat noiseat = mix(a2,b2,interpol(relco.x));\n        float noisebt = mix(d2,c2,interpol(relco.x));\n    float noise2 = mix(noiseat,noisebt,interpol(relco.y));\n        return  mix(noise1,noise2,interpol(relco.z));\n}\n\nvec2 map(vec3 p)\n{\n    float n = perlin3D(p)+.25*perlin3D(4.*p)+.1*perlin3D(15.*p);\n    return vec2(n*min(1.,length(p.xy))+.05,1);\n}\n\n\n\nvec2 intersect(vec3 ro, vec3 rd,float n)\n{\n    float f=0.;\n    for(int i = 0; i <200; i++)\n    {\n        vec2 h = map(ro+f*rd);\n            if(h.x<0.01)\n                return vec2(f,h.y);\n               \tif(f > n)\n           break;\n        \n            f+=.8*h.x;\n    }\n    return vec2(0);\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e = vec2(.0001,0);\n    vec3 n=  vec3 (map(p+e.xyy).x-map(p-e.xyy).x,map(p+e.yxy).x-map(p-e.yxy).x,map(p+e.yyx).x-map(p-e.yyx).x);\n    return normalize(n);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.x- vec2(.5,.5+(iResolution.y-iResolution.x)/(2.*iResolution.x));\n    \n       vec2 mse =iMouse.xy/iResolution.x-vec2(.5,.5+(iResolution.y-iResolution.x)/(2.*iResolution.x));\n    mse*=8.;\n    if(iMouse.xy==vec2(0))\n        mse*=0.;\n    mat3 rdroty = mat3(1,0,0,0,cos(mse.y),sin(mse.y),0,-sin(mse.y),cos(mse.y));\n    mat3 rdrotx = mat3(cos(mse.x),0,sin(mse.x),0,1,0,-sin(mse.x),0,cos(mse.x));\n    #define bg vec4(.12,.1,.15,.1)\n    vec3 ro = vec3(0,0,iTime*.5);\n    vec3 rd = normalize(vec3(2.*(uv),1.)*rdroty*rdrotx);\n    vec3 ld=normalize(vec3(0,.3,1));\n    vec2 i = intersect(ro,rd,10.);\n    vec4 col = bg;\n    if(i.y>0.)\n    {\n        col*=0.;\n        vec3 pos = i.x*rd+ro;\n        vec3 nor = normal(pos);\n        col+=.6+dot(nor,rd)/2.;\n        //col.rgb*=nor;\n        col*=texture(iChannel0,vec2(atan(pos.x,pos.y),pos.z));\n        col=mix(bg,col,min(1.,1./exp(.5*i.x)));\n    }\n    \n    \n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}]}