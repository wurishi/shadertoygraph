{"ver":"0.1","info":{"id":"MltcRN","date":"1531875277","viewed":185,"name":"Flower RAVE","username":"rohtie","description":"It's a fun party!","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["rave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xd2XRd","filepath":"https://soundcloud.com/capsadmin/bill","previewfilepath":"https://soundcloud.com/capsadmin/bill","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define resolution iResolution\n#define channel0 iChannel0\n\nfloat caps(vec2 p, vec2 a, vec2 b, float r) {\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float h = clamp(dot(pa,ba)/dot(ba,ba), 0., 1.);\n    return length(pa - ba*h) - r;\n}\n\nfloat rmin(float a, float b, float r) {\n    vec2 rarb = vec2(r-a,r-b);\n    vec2 u = max(rarb, vec2(0.));\n    return max(r, min(a,b)) - length(u);\n}\n\nvec4 pixel(vec2 p) {\n    p /= resolution.xy;\n    p -= .5;\n    p.x *= resolution.x / resolution.y;\n\n    vec2 q = p;\n    \n    float a = atan(p.x, p.y);\n    float r = sqrt(dot(p, p));\n    \n    p.x += time * 0.2;\n\t\n    float rep = 0.8;\n    float px = floor(p.x / rep);\n    p.y -= mod(px, 1.5) * 0.15;\n    p.x = mod(p.x, rep);\n    p.x -= rep * 0.5;\n    \n    p.y += sin(time * 6. + acos(-1.) * 0.5) * 0.055;\n\n    float zoid_radius = 0.01;\n\n    float radius = 0.15 + mod(px, 3.) * 0.015;\n    radius += cos(atan(p.x, p.y) * (5. + mod(px, 5.)) + time * mod(px, 5.) + px) * 0.05;\n    radius += sin(atan(p.x, p.y) * 10. + time * 8. - px) * 0.01;\n\n    radius = mix(radius, texture(channel0, vec2(radius, 0.0)).r, 0.1);\n    \n    \n    float circle = length(p) - radius;\n    circle = max(circle, -max(p.y + sin(time) * 0.005, length(p) - 0.075 - sin(time * 4. + px) * 0.005));\n    circle = max(circle, -(length(vec2(abs(p.x), p.y) - vec2(0.05, 0.01)) - 0.025 - sin(time * 4. + px + 0.15) * 0.005));\n    circle = 1. - smoothstep(0., 0.03, circle);\n\n    float circle_shadow = length(p * 2.) - radius;\n    circle_shadow = 1. - smoothstep(0., 0.6, circle_shadow);\n\n    vec2 offset = vec2(sin(time + px), cos(time + px)) * (zoid_radius * 10. + radius);\n\n    float zoid = length(p - offset) - zoid_radius;\n    zoid = 1. - smoothstep(0., 0.01, zoid);\n\n    vec2 center = vec2(0., -0.1);\n    float body = caps(p, center, vec2(0., -2.), 0.025);\n\n\n    center.y -= 0.1;\n\n    vec2 elbow = center + vec2(sin(1.5 + sin(time * 2. + px)), cos(1.5 + sin(time * 2. + px))) * 0.2;\n    body = rmin(body, caps(vec2(abs(p.x), p.y), center, elbow, 0.015), 0.055);\n\n    vec2 hand = elbow + vec2(sin(0.5 + sin(time * 3.5) * 0.15), cos(0.5 + sin(time * 3.5) * 0.15)) * 0.15;\n    body = rmin(body, caps(vec2(abs(p.x), p.y), elbow, hand, 0.015), 0.02);\n    body = rmin(body, caps(vec2(abs(p.x), p.y), vec2(0., -0.7), vec2(0., -1.5), 0.25), 0.05);\n\n    body = min(body, length(p) - 0.1);\n    \n    body = smoothstep(0., 0.005, body);\n\n    p = q;\n    \n    return (\n        vec4(circle * circle_shadow + zoid) +\n        vec4(circle_shadow * 0.5, circle_shadow * 0.5, 0., 0.) +\n        vec4(p.y + length(p * 0.9) + sin(time * 2.) * 0.25 + tan(time * 8. + 0.25), 0.15 + length(p * 0.4), 0.1 + length(p * 2.5) * 0.4 + sin(time * 0.2 + 2.) + tan(time * 8.), 0.) * (1. - circle) * body * p.y * 20.\n    );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    fragColor = pixel(fragCoord);\n}","name":"Image","description":"","type":"image"}]}