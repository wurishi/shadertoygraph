{"ver":"0.1","info":{"id":"DssSR4","date":"1668571118","viewed":82,"name":"circle Animation","username":"lck898989","description":"circle Animation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circleanimation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x = abs(uv.x);\n    uv.y = abs(uv.y);\n    float d = uv.x + uv.y * uv.y + tan(iTime * 2.);\n    d *= uv.x*uv.x+uv.y*uv.y;\n\n    float blur = 0.2;\n    float start = 0.1;\n    float end = 0.5;\n    \n    if(d > start && d < end) {\n        if(d < (end - start) / 2.) {\n            d = smoothstep(start,start + blur,d);\n        } else {\n            d = smoothstep(end,end - blur,d);\n        }\n      \n    } else {\n        d = 0.;\n     }\n\n    // Output to screen\n    fragColor = vec4(vec3(d),1.0);\n}","name":"Image","description":"","type":"image"}]}