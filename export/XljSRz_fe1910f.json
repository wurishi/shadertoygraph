{"ver":"0.1","info":{"id":"XljSRz","date":"1441072658","viewed":137,"name":"Red Cogs","username":"twernmilt","description":"Inspired by https://www.shadertoy.com/view/4t23RR","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float inCog(vec2 uv, float boxSize, float time) {\n  float inBoxX = step(0.2, mod(uv.x + time, boxSize));\n  float inBoxY1 = 1.0 - step(boxSize, uv.y);\n  float inBoxY2 = 1.0 - step(boxSize - 0.1, uv.y);\n  return (inBoxX * inBoxY1) + ((1.0 - inBoxX) * inBoxY2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv          = fragCoord.xy / iResolution.xy;\n    vec3  boxColor   = vec3(0.0, 0.15, 0.15);\n    float time       = iTime / 4.0;\n    vec3  finalColor = vec3(1.0, 1.0, 1.0);\n    \n    for(int i = 0; i < 6; i++) {\n      float direction = ((step(1.0, mod(float(i), 2.0)) - 1.0) + 0.5) * 2.0;\n      finalColor -= (boxColor * inCog(uv, 0.25 + (float(i) * 0.15), (time * direction) / float(i)));\n    }\n    \n\tfragColor = vec4(finalColor, 1.0);\n}","name":"","description":"","type":"image"}]}