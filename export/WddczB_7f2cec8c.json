{"ver":"0.1","info":{"id":"WddczB","date":"1601200559","viewed":54,"name":"circle move","username":"lck898989","description":"a demo of circle move used by sin and cos","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circlemove"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\tuv: position of picture\n\tpos: circle position\n\n**/\nfloat circle(vec2 uv,vec2 pos,float radius,float blurDis) {\n    float c;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float dis = length(uv - pos);\n    \n    c = smoothstep(radius,radius - blurDis,dis);\n    return c;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    float radius = 0.3;\n    \n    \n    float y = 0.5 * sin(uv.y + iTime);\n    float x = 0.5 * cos(uv.x + iTime);\n    \n    vec2 p = vec2(x,-y);\n    \n    float c = circle(uv,p,radius,0.1);\n    \n    \n    // Output to screen\n    fragColor = vec4(vec3(c),1.);\n}\n","name":"Image","description":"","type":"image"}]}