{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"////////////////////////////\n////////////////////////////\n\nconst float SAMPLES = 10.; \n\nfloat decay = 0.97; \nfloat density = 0.15;\n\nfloat threshold = 0.7;\n\n////////////////////////////\n////////////////////////////\n\n\nfloat hash( vec2 p ){ return fract(sin(dot(p, vec2(41, 289)))*45758.5453); }\nvec3 lOff(){ return vec3(0., 0., 0.); }\n\t\n\nvec3 rainbow_1(float x) {    \n    return vec3(\n        (tanh(-10.*x + 2.) + 1.) * 0.5 + (tanh(10.*x - 7.) + 1.) * 0.5,\n        (tanh(-10.*x + 3.) + 1.) * 0.5,\n        (tanh(-10.*x + 6.) + 1.) * 0.5\n    );\n}\nvec3 rainbow_2(float x) {\n    return vec3(\n        1.,\n        (tanh(-10.*x + 6.) + 1.) * 0.5,\n        (tanh(-10.*x + 3.) + 1.) * 0.5\n    );\n}\nvec3 rainbow_3(float x) {\n    return vec3(\n        (tanh(-10.*x + 3.) + 1.) * 0.5,\n        (tanh(-10.*x + 6.) + 1.) * 0.5,\n        1.\n    );\n}\n\n\n\nvec3 shine(vec2 original_uv, vec2 tuv) {\n    vec2 dTuv = tuv*density/SAMPLES;\n    vec4 currentColor;\n    vec3 result = vec3(0.);\n    \n    float weight = 0.05;\n    vec2 uv = original_uv;\n    uv += dTuv*(hash(uv.xy)*2. - 1.);\n    \n    for(float i=0.; i < SAMPLES; i++){\n        uv -= dTuv;\n        currentColor = texture(iChannel0, uv);\n        result += (\n            step(threshold, length(currentColor.rgb)/sqrt(3.)) *\n            currentColor.rgb * \n            rainbow_2(i/SAMPLES) * \n            weight\n        );\n        weight *= decay;\n    }\n    \n    ////////////////////////////////\n    ////////////////////////////////\n    \n    dTuv *= -1.;\n    weight = 0.05;\n    uv = original_uv;\n    uv += dTuv*(hash(uv.xy)*2. - 1.);\n\n    for(float i=0.; i < SAMPLES; i++){\n        uv -= dTuv;\n        currentColor = texture(iChannel0, uv);\n        result += (\n            step(threshold, length(currentColor.rgb)/sqrt(3.)) *\n            currentColor.rgb * \n            rainbow_3(i/SAMPLES) * \n            weight\n        );\n        weight *= decay;\n    }\n    \n    return result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 tuv;\n    vec4 col = texture(iChannel0, uv.xy)*0.8;\n    \n    float x = 0.5;\n    float y = 0.5;\n    \n    tuv = vec2(x, y);\n    col.rgb += shine(uv, tuv);\n    \n    \n    tuv = vec2(x, -y);\n    col.rgb += shine(uv, tuv);\n    \n    fragColor = sqrt(smoothstep(0., 1., col));\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"tsdyWf","date":"1734426959","viewed":174,"name":"Stellar.No.4","username":"avartation","description":"X-shaped shines","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["anotherstellar"],"hasliked":0,"parentid":"","parentname":""}}