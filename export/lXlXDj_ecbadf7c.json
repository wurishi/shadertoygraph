{"ver":"0.1","info":{"id":"lXlXDj","date":"1710026128","viewed":78,"name":"Voronoi 103","username":"kukovisuals","description":"voronoi ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Hash function to generate pseudo-random but consistent positions\nvec2 hash2( vec2 p ) {\n    p = vec2( dot(p, vec2(127.1,191.7)), dot(p, vec2(269.5,183.3)) );\n    return -1.0 + 2.0 * fract(sin(p) * 43758.5453123);\n}\n\nfloat voronoiFragment(vec2 uv, float cellCount, float minDist){\n    vec2 grid = floor(uv * cellCount);\n    for (int x = -1; x <= 1; x++) {\n        for (int y = -1; y <= 1; y++) {\n            // Neighbor cell ID\n            vec2 cell = grid + vec2(float(x), float(y));\n            // Get pseudo-random position for the cell\n            vec2 cellPos = hash2(cell);\n            cellPos =  0.5 + 0.5 * sin(iTime + 2.213 * cellPos);\n            // Cell position in normalized space\n            vec2 pos = cell / cellCount + cellPos / cellCount;\n            // Compute distance to the cell's point\n            float dist = length(uv - pos);\n            // Update minimum distance if necessary\n            minDist = min(minDist, dist);\n        }\n    }\n    return minDist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.y;// * 2.0 - 1.0;\n    float minDist = 1.0; // Start with a large number outside of expected range\n\n    // Determine the grid cell the fragment is in\n    float cellCount = 3.0;\n    minDist = voronoiFragment(uv, cellCount, minDist);\n    \n    vec3 colorA = vec3(0.996,0.345,0.345);\n    vec3 colorB = vec3(0.000,0.000,0.000);\n    float interpolateAB = minDist;\n    vec3 mixedColor = mix(colorA, colorB, interpolateAB);\n    \n    vec3 smoothStep = smoothstep(0.36, 0.2, mixedColor);\n    // Use the distance for coloring: closer to cell center is darker\n    fragColor = vec4(smoothStep, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}