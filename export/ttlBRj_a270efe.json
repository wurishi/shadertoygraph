{"ver":"0.1","info":{"id":"ttlBRj","date":"1597204715","viewed":97,"name":"several Anti-aliasing ","username":"Hopepdm","description":"抗锯齿测试","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float linearstep(float edge0, float edge1, float x) {\n    float t = (x - edge0)/(edge1 - edge0);\n    return clamp(t, 0.0, 1.0);\n}\n\nfloat smootherstep(float edge0, float edge1, float x) {\n    float t = (x - edge0)/(edge1 - edge0);\n    float t1 = t*t*t*(t*(t*6. - 15.) + 10.);\n    return clamp(t1, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // uv扩展2倍\n    vec2 r =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    vec3 bgcol = vec3(1.0,0.3,0.5);//bg color\n    vec3 col1 = vec3(0.4,0.2,0.5);//circle\n    vec2 center1 = vec2(-1.35,0);\n    vec2 center2 = vec2(-0.45,0);\n    vec2 center3 = vec2(0.45,0);\n    vec2 center4 = vec2(1.35,0);\n    vec3 pixel = bgcol;\n    float m=0.4;\n    \n    pixel = bgcol; \n    \n    \n    //circle 1\n    //step处理，等同于未经任何处理的circle 0 \n    if(r.x<-0.9){\n        m =  step(m,length(r-center1));\n        pixel = mix(col1,bgcol,m);\n    } \n    \n    //circle 2\n    //linearstep处理\n    else if(r.x<-0.0){\n        m =  linearstep(m-0.005,m+0.005,length(r-center2));\n        pixel = mix(col1,bgcol,m);\n    }\n    \n    //circle 3\n    //smoothstep处理\n    else if(r.x<0.9){\n           m =  smoothstep(m-0.005,m+0.005,length(r-center3));\n        pixel = mix(col1,bgcol,m);\n    }\n    \n    //circle 4\n    //自定义smootherstep处理\n    else if(r.x<1.8){\n           m =  smootherstep(m-0.005,m+0.005,length(r-center4));\n        pixel = mix(col1,bgcol,m);\n    }\n \n    //区域分解线\n    for(float i=-0.9;i<3.0;i += 0.9){\n        if(r.x<i+0.008 && r.x > i)\n            pixel = vec3(1.0);\n    }\n    \n    fragColor = vec4(pixel,1.0);\n}","name":"Image","description":"","type":"image"}]}