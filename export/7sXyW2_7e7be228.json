{"ver":"0.1","info":{"id":"7sXyW2","date":"1642699862","viewed":123,"name":"Random Number Generator with LCG","username":"Pilo","description":"Trying to have a working RNG in GLSL","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","rng"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// comes from Noise-Based RNG at GDC17 (Squirrel3)\n// I don't know enough about hash to tweak that much\n// https://www.youtube.com/watch?v=LWFzPP8ZbdU\nuint hash2(uint x) {\n\tx *= uint(0xB5297A4D);\n    x ^= (x >> uint(8));\n    x *= uint(0x68E31DA4);\n    x ^= (x << uint(8));\n    x *= uint(0x1B56C4E9);\n    x ^= (x >> uint(8));\n\treturn x;\n}\n\n// return a random number in 0..1 and update the seed with an LCG\n// https://rosettacode.org/wiki/Linear_congruential_generator\nfloat rand(inout uint seed) {\n    seed = (uint(1103515245) * seed + uint(12345)) % uint(65536);\n\treturn float(seed) / 65535.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //vec2 uv = fragCoord/iResolution.xy;\n    \n    uint scale = uint(8);\n    \n    uint x = uint(fragCoord.x) / scale;\n    uint y = uint(fragCoord.y) / scale;\n    uint w = uint(iResolution.x) / scale;\n    uint h = uint(iResolution.y) / scale;\n    \n    uint seed = hash2(uint(iTime * 60.0) * (x + y * w));\n    float v = rand(seed);\n    \n    vec2 uv = vec2(float(x), float(y)) / vec2(float(w), float(h));\n    vec4 img = texture(iChannel0, uv);\n    \n    v = v * 2.0 - 1.0;\n    \n    fragColor = vec4(img.rgb + v*iMouse.x/iResolution.x, 1.0);\n}","name":"Image","description":"","type":"image"}]}