{"ver":"0.1","info":{"id":"4s2fDW","date":"1500546199","viewed":276,"name":"[SH17B] Interlude","username":"unbird","description":"Not a serious contribution. I ... just ... couldn't resist. The original shader needed text :P :D","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["fun","challenge","interlude"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXXDB","filepath":"https://soundcloud.com/mf10421/john-williams-starwars-main-theme","previewfilepath":"https://soundcloud.com/mf10421/john-williams-starwars-main-theme","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint hash1( uint n ) \n{\n    // hash by Hugo Elias\n\tn = (n << 13U) ^ n;\n    return n * (n * n * 15731U + 789221U) + 1376312589U;\n}\n\nconst ivec2 letterOffsets[] = ivec2[]( ivec2(3,10), ivec2(8,11), ivec2(1,11), ivec2(4,11),\n                                       ivec2(5,11), ivec2(2,10), \n                                       ivec2(0, 13), \n                                       ivec2(7,10), ivec2(1,11), ivec2(2,10), ivec2(3,10) );\n\nconst int text[] = int[]\n(\n  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x45, 0x70, 0x69, 0x73, 0x6F, 0x64, 0x65\n, 0x20, 0x31, 0x37, 0x2C, 0x20, 0x41, 0x63, 0x74, 0x20, 0x49, 0x49, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x41, 0x66, 0x74, 0x65, 0x72, 0x20, 0x68, 0x61, 0x76, 0x69, 0x6E, 0x67, 0x20, 0x66\n, 0x6F, 0x75, 0x6E, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x62, 0x65, 0x6C, 0x73, 0x27\n, 0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x65, 0x6D, 0x70, 0x69, 0x72\n, 0x65, 0x20, 0x6C, 0x61, 0x75, 0x6E, 0x63, 0x68, 0x65, 0x64, 0x20, 0x61, 0x20, 0x6C, 0x61, 0x72\n, 0x67, 0x65, 0x20, 0x73, 0x63, 0x61, 0x6C, 0x65, 0x20, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6B, 0x3A\n, 0x20, 0x20, 0x54, 0x68, 0x65, 0x20, 0x72, 0x65, 0x62, 0x65, 0x6C, 0x73, 0x20, 0x77\n, 0x65, 0x72, 0x65, 0x20, 0x63, 0x61, 0x75, 0x67, 0x68, 0x74, 0x20, 0x6F, 0x66, 0x66, 0x20, 0x67\n, 0x75, 0x61, 0x72, 0x64, 0x2E, 0x20, 0x49, 0x6E, 0x20, 0x61, 0x6E, 0x61, 0x63, 0x74\n, 0x20, 0x6F, 0x66, 0x20, 0x64, 0x65, 0x73, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20\n, 0x74, 0x68, 0x65, 0x20, 0x53, 0x68, 0x61, 0x64, 0x79, 0x20, 0x4B, 0x6E, 0x69, 0x67, 0x68, 0x74\n, 0x73, 0x20, 0x20, 0x20, 0x6F, 0x70, 0x65, 0x6E, 0x65, 0x64, 0x20, 0x61, 0x20, 0x70\n, 0x6F, 0x72, 0x74, 0x61, 0x6C, 0x20, 0x74, 0x6F, 0x20, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x2E\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x55\n, 0x6E, 0x66, 0x6F, 0x72, 0x74, 0x75, 0x6E, 0x61, 0x74, 0x65, 0x6C, 0x79, 0x20, 0x6F, 0x6E, 0x6C\n, 0x79, 0x20, 0x73, 0x68, 0x69, 0x70, 0x73, 0x20, 0x73, 0x6D, 0x61, 0x6C, 0x6C, 0x65, 0x72, 0x20\n, 0x74, 0x68, 0x61, 0x6E, 0x20, 0x20, 0x32, 0x38, 0x30, 0x20, 0x75, 0x6E, 0x69, 0x74\n, 0x73, 0x20, 0x63, 0x6F, 0x75, 0x6C, 0x64, 0x20, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6C, 0x6C, 0x79\n, 0x20, 0x75, 0x73, 0x65, 0x20, 0x69, 0x74, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x20, 0x20, 0x20, \n0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x62, 0x65, 0x6C, 0x6C, 0x69, 0x6F, 0x6E, 0x20, 0x68\n, 0x61, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x75, 0x66, 0x66, 0x65, 0x72, 0x20, 0x68, 0x65, 0x61\n, 0x76, 0x79, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6C, 0x6F, 0x73, 0x73, 0x65, 0x73\n, 0x2E, 0x20, 0x4D, 0x6F, 0x73, 0x74, 0x20, 0x63, 0x61, 0x73, 0x75, 0x61, 0x6C, 0x74, 0x69, 0x65\n, 0x73, 0x20, 0x77, 0x65, 0x72, 0x65, 0x20, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6E, 0x69, 0x6E, 0x67\n, 0x20, 0x6F, 0x6E, 0x20, 0x74, 0x68, 0x65, 0x20, 0x4D, 0x6F, 0x6F, 0x6E, 0x20, 0x49\n, 0x6F, 0x73, 0x20, 0x74, 0x68, 0x6F, 0x75, 0x67, 0x68, 0x20, 0x64, 0x75, 0x65, 0x20, 0x74, 0x6F\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x6E, 0x65, 0x78\n, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20, 0x74, 0x65, 0x63, 0x68, 0x6E, 0x69, 0x63, 0x61, 0x6C\n, 0x20, 0x70, 0x72, 0x6F, 0x62, 0x6C, 0x65, 0x6D, 0x73, 0x2E, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4C, 0x75\n, 0x63, 0x6B, 0x69, 0x6C, 0x79, 0x20, 0x64, 0x75, 0x72, 0x69, 0x6E, 0x67, 0x20, 0x74, 0x68, 0x65\n, 0x20, 0x62, 0x61, 0x74, 0x74, 0x6C, 0x65, 0x20, 0x61, 0x20, 0x68, 0x61, 0x6E, 0x64, 0x66, 0x75\n, 0x6C, 0x20, 0x20, 0x20, 0x20, 0x6F, 0x66, 0x20, 0x73, 0x65, 0x6C, 0x65, 0x63, 0x74\n, 0x65, 0x64, 0x20, 0x53, 0x68, 0x61, 0x64, 0x79, 0x20, 0x4B, 0x6E, 0x69, 0x67, 0x68, 0x74, 0x73\n, 0x20, 0x2D, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x20, 0x20\n, 0x68, 0x65, 0x6C, 0x70, 0x20, 0x6F, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x22, 0x74, 0x72, 0x61\n, 0x69, 0x74, 0x6F, 0x72, 0x6F, 0x75, 0x73, 0x22, 0x20, 0x70, 0x72, 0x69, 0x6E, 0x63, 0x65, 0x73\n, 0x73, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x4C, 0x61, 0x6E, 0x67, 0x2D, 0x59, 0x61\n, 0x20, 0x43, 0x6F, 0x64, 0x65, 0x77, 0x61, 0x6C, 0x6B, 0x65, 0x72, 0x20, 0x2D, 0x20, 0x77, 0x65\n, 0x72, 0x65, 0x20, 0x61, 0x62, 0x6C, 0x65, 0x20, 0x74, 0x6F, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x73, 0x74, 0x65, 0x61, 0x6C, 0x20, 0x6D, 0x6F, 0x73, 0x74, 0x20, 0x6F, 0x66, 0x20\n, 0x44, 0x61, 0x72, 0x74, 0x68, 0x20, 0x43, 0x6F, 0x6D, 0x70, 0x69, 0x6C, 0x65, 0x72, 0x27, 0x73\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62, 0x6C, 0x75, 0x65, 0x70\n, 0x72, 0x69, 0x6E, 0x74, 0x73, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x73, 0x6D, 0x75, 0x67, 0x67, 0x6C\n, 0x65, 0x20, 0x69, 0x74, 0x20, 0x6F, 0x75, 0x74, 0x20, 0x75, 0x73, 0x69, 0x6E, 0x67, 0x20, 0x61\n, 0x20, 0x20, 0x72, 0x65, 0x66, 0x61, 0x63, 0x74, 0x6F, 0x72, 0x20, 0x64, 0x72, 0x6F\n, 0x69, 0x64, 0x2E, 0x20, 0x57, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x6F, 0x73, 0x65, 0x20, 0x69\n, 0x6E, 0x20, 0x68, 0x61, 0x6E, 0x64, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72, 0x65, 0x62\n, 0x65, 0x6C, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6E, 0x6F, 0x77, 0x20, 0x63, 0x61, 0x70, 0x61\n, 0x62, 0x6C, 0x65, 0x20, 0x6F, 0x66, 0x20, 0x62, 0x75, 0x69, 0x6C, 0x64, 0x69, 0x6E, 0x67, 0x20\n, 0x6D, 0x75, 0x63, 0x68, 0x6C, 0x61, 0x72, 0x67, 0x65, 0x72, 0x20, 0x73, 0x68, 0x69\n, 0x70, 0x73, 0x20, 0x66, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2E, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20\n, 0x6D, 0x69, 0x67, 0x68, 0x74, 0x20, 0x61, 0x73, 0x20, 0x77, 0x65, 0x6C, 0x6C, 0x62\n, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x75, 0x72, 0x6E, 0x69, 0x6E, 0x67, 0x20, 0x70, 0x6F\n, 0x69, 0x6E, 0x74, 0x20, 0x69, 0x6E, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x61, 0x72, 0x2E, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, \n0x53\n, 0x65, 0x74, 0x74, 0x69, 0x6E, 0x67, 0x20, 0x75, 0x70, 0x20, 0x61, 0x20, 0x6E, 0x65, 0x77, 0x20\n, 0x62, 0x61, 0x73, 0x65, 0x20, 0x6F, 0x6E, 0x20, 0x47, 0x27, 0x50, 0x79, 0x75, 0x20, 0x81, 0x20\n, 0x28, 0x6A, 0x75, 0x73, 0x74, 0x20, 0x74, 0x75, 0x72, 0x6E, 0x20, 0x6C, 0x65, 0x66\n, 0x74, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x20, 0x53, 0x61\n, 0x6D, 0x27, 0x73, 0x20, 0x68, 0x75, 0x74, 0x29, 0x20, 0x74, 0x68, 0x65, 0x20, 0x20, 0x20, \n0x72, 0x65, 0x62, 0x65, 0x6C, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x6E, 0x6F, 0x77, 0x20\n, 0x6C, 0x69, 0x63, 0x6B, 0x69, 0x6E, 0x67, 0x20, 0x74, 0x68, 0x65, 0x69, 0x72, 0x20, 0x77, 0x6F\n, 0x75, 0x6E, 0x64, 0x73, 0x20, 0x20, 0x20, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x6D, 0x6F\n, 0x75, 0x72, 0x6E, 0x69, 0x6E, 0x67, 0x20, 0x74, 0x68, 0x65, 0x69, 0x72, 0x20, 0x6C, 0x6F, 0x73\n, 0x73, 0x65, 0x73, 0x2E, 0x20, 0x4E, 0x6F, 0x6E, 0x65, 0x74, 0x68, 0x65, 0x6C, 0x65, 0x73, 0x73\n, 0x20, 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x65, 0x20, 0x69, 0x6E, 0x20, 0x67, 0x6F\n, 0x6F, 0x64, 0x20, 0x6D, 0x6F, 0x6F, 0x64, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x72, 0x65, 0x61, 0x64\n, 0x79, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x68, 0x65, 0x20\n, 0x6E, 0x65, 0x78, 0x74, 0x20, 0x61, 0x64, 0x76, 0x65, 0x6E, 0x74, 0x75, 0x72, 0x65, 0x2E, 0x20\n, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20\n, 0x20, 0x20, 0x20\n);   \n\n\n/*\n         Episode 17, Act II            \n                                       \nAfter having found the rebels' base the\nempire launched a large scale attack:  \nThe rebels were caught off guard. In an\nact of desperation the Shady Knights   \nopened a portal to escape.             \nUnfortunately only ships smaller than  \n280 units could actually use it and    \nthe rebellion had to suffer heavy      \nlosses. Most casualties were happening \non the Moon Ios though due to          \nunexpected technical problems.         \n                                       \nLuckily during the battle a handful    \nof selected Shady Knights - with the   \nhelp of the \"traitorous\" princess      \nLang-Ya Codewalker - were able to      \nsteal most of Darth Compiler's         \nblueprints and smuggle it out using a  \nrefactor droid. With those in hand the \nrebels are now capable of building much\nlarger ships faster. This might as well\nbe the turning point in the war.       \n                                       \n                                       \nSetting up a new base on G'Pyu @ (just \nturn left right after Sam's hut) the   \nrebels are now licking their wounds    \nand mourning their losses. Nonetheless \nall are in good mood and ready for     \nthe next adventure.                    \n\n/* */\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n    \n    // background\n    vec3 col = vec3(0.0);\n    \n    // stars\n    uint r = hash1( uint(fragCoord.x) + 1920U*uint(fragCoord.y) );\n    col += 0.5* ((r>0xfff00000U)?1.0:0.0);\n\n    float time = iTime;\n    //time = 60.;\n    // scrolling text\n    if( uv.y>-0.6 && uv.y<0.4 )\n    {\n        vec2 uv2 = vec2(uv.x,0.7-uv.y);\n        // jitter\n        uv2 += 0.0012*sin( 9.0*time+ vec2(0.0,1.0))*(0.5+sin(1.3*time));\n        // project\n        vec2 st = vec2(0.5,1.0)*vec2( uv2.x/uv2.y, 1.0/uv2.y - (0.25 + time*0.03 ));\n\n        vec2 textResolution = vec2(34., 20.);\n        vec2 tex = fract(st * textResolution);\n        vec2 index2 = st * textResolution - tex;\n        \n        int index = int(index2.x - 2. - (textResolution.x + 5.) * index2.y)-int(textResolution.x / 2.);\n        \n        index += 156;;\n        \n        int char = text[index];\n        \n        if(index < 0 || index > 1300)\n            char = 32;\n        //char = 65;\n        //tex = st;\n        tex.x = (tex.x - 0.5) * .5 + 0.5;\n        tex = clamp(tex, 0.02, 0.98);\n        tex += vec2(char % 16, 15-char / 16);\n        tex += 0.01;\n        \n        tex /=16.;\n        \n        float lod = uv.y*2.+2.2;\n        float f = textureLod( iChannel1, tex, lod).x;        \n        \n        \n        // clip\n        f *= step( abs(st.x+0.014)-0.57, 0.0 );\n\t\tf *= uv2.y;\n        f *= step( st.y, 0.5 );\n        \n        // composit\n        col = mix( col, vec3(1.0,0.8,0.0), clamp(f,0.0,1.0) );\n        //col.b = lod;\n        \n        //vec3 debug = vec3(index < 0, 0., 0.);\n        //col += debug;\n    }\n\n    // Shadertoy\n    {\n        float sc = 1.0 - exp(-0.3*time);\n        float al = 1.0 - smoothstep( 3.0, 12.0, time );\n        uv = uv*sc*10.0 + vec2(5.5,0.5);\n\n        ivec2 iuv = ivec2(floor(uv));\n        vec2 fuv = fract(uv);\n\n        if( iuv.x>=0 && iuv.x<=10 && iuv.y==0 )\n        {\n            fuv = 0.5 + vec2(0.5,1.0)*(fuv-0.5);\n            float te = textureLod( iChannel1, ( vec2(letterOffsets[iuv.x]*64) + fuv*64.0 )/1024.0, 0.0 ).w;\n            te = 1.0 - smoothstep( 0.0, 0.02, abs(te-0.5) );\n            col += vec3(1.0,0.8,0.0)*al*te;\n        }\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}