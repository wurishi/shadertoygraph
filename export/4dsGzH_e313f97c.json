{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec3 COLOR1 = vec3(0.0, 0.0, 0.3);\nvec3 COLOR2 = vec3(0.5, 0.0, 0.0);\nfloat BLOCK_WIDTH = 0.01;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t// To create the BG pattern\n\tvec3 final_color = vec3(1.0);\n\tvec3 bg_color = vec3(0.0);\n\tvec3 wave_color = vec3(0.0);\n\t\n\tfloat c1 = mod(uv.x, 2.0 * BLOCK_WIDTH);\n\tc1 = step(BLOCK_WIDTH, c1);\n\t\n\tfloat c2 = mod(uv.y, 2.0 * BLOCK_WIDTH);\n\tc2 = step(BLOCK_WIDTH, c2);\n\t\n\tbg_color = mix(uv.x * COLOR1, uv.y * COLOR2, c1 * c2);\n\t\n\t\n\t// To create the waves\n\tfloat wave_width = 0.01;\n\tuv  = -1.0 + 2.0 * uv;\n\tuv.y += 0.1;\n\tfor(float i = 0.0; i < 10.0; i++) {\n\t\t\n\t\tuv.y += (0.07 * sin(uv.x + i/7.0 + iTime ));\n\t\twave_width = abs(1.0 / (150.0 * uv.y));\n\t\twave_color += vec3(wave_width * 1.9, wave_width, wave_width * 1.5);\n\t}\n\t\n\tfinal_color = bg_color + wave_color;\n\t\n\t\n\tfragColor = vec4(final_color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dsGzH","date":"1362633914","viewed":18905,"name":"Waves","username":"bonniem","description":"A simple live wallpaper :)","likes":231,"published":1,"flags":0,"usePreview":0,"tags":["2d","waves"],"hasliked":0,"parentid":"","parentname":""}}