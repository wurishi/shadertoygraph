{"ver":"0.1","info":{"id":"4tt3DB","date":"1471383106","viewed":161,"name":"Color Wheel","username":"StrongJoshua","description":"Loading color wheel","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void wheel(out vec4 color, in float maxTime, in vec2 coord) {\n    float pi = 3.14159265358;\n    \n    float time = iTime;\n    float dir = 0.0;\n    int pass = 0;\n    \n    if(time > maxTime) {\n        pass = int(time / maxTime);\n        dir = mod((float(pass)), 2.0);\n        time = mod(time, maxTime);\n    }\n    \n    float ratio = time / maxTime * 2.0 * pi;\n    float angle = atan(coord.y, coord.x);\n    color.r = 0.0;\n    color.g = 0.0;\n    color.b = 0.0;\n    angle = pi - angle;\n    float buffer = 0.05;\n    \n    float angle2;\n    if(angle > ratio && pass > 0) dir = abs(dir - 1.0);\n    if(angle < ratio || pass > 0) {\n        angle2 = abs(angle - dir * pi);\n\n        color.r = (0.5 + angle2 / pi);\n        color.b = (angle2 / (pi));\n        color.g = (0.2 + angle2 / (10.0 * pi));\n    }\n    \n    if(angle > ratio - buffer && angle < ratio + buffer)  {\n        float distRatio = 1.0 - abs(angle - ratio) / buffer;\n        vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\n        color = color - (color - white) * distRatio;\n        color.a = 1.0;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float maxTime = 5.0;\n    \n\tvec2 xy = fragCoord.xy;\n\tvec2 center = iResolution.xy / 2.0;\n    float radius = iResolution.y / 2.0;\n    \n    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\n    vec2 dif = xy - center;\n    \n    if(dif.x*dif.x+dif.y*dif.y < radius*radius) wheel(color, maxTime, dif);\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}