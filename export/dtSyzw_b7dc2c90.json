{"ver":"0.1","info":{"id":"dtSyzw","date":"1691587073","viewed":62,"name":"Magnify part of scene (fork)","username":"Envy24","description":"Source: https://www.shadertoy.com/view/DtfyWl\nRewrited, added support of other shapes, if you know sdf.\nHold LMB to see magnification effect.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["glass","magnifying","part","minifying"],"hasliked":0,"parentid":"DtfyWl","parentname":"photochromic  magnifying glass"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCENE_SCALE               ( 1.0 )\n#define UNIT                      ( (SCENE_SCALE*4.0) / iResolution.y  )\n#define SMAA(d)                   ( smoothstep(UNIT, 0., d) )\n\n/* https://www.shadertoy.com/view/DdsGDj */\n#define MOUSE_OFFSET ( iMouse.z > 0. ? iMouse.xy - iResolution.xy * 0.5 : vec2(0) )\nvec2 map_to_centered_ndc(in vec2 SC, in float scale, in vec2 origin, in bool mouse_drag)\n{\n    vec2 M = MOUSE_OFFSET * (mouse_drag == true ? 1. : 0.);\n    return ((2. * (SC - M) - iResolution.xy) / iResolution.y) * scale + origin;\n}\n\nfloat rhombusSDF(in vec2 NDC, in vec2 C, in float r) \n{ \n    vec2 P = abs(C - NDC);\n    return P.x + P.y - r; \n}\nfloat diskSDF(in vec2 NDC, in vec2 C, in float r) { return length(C - NDC)-r; }\nfloat squareSDF(in vec2 NDC, in vec2 C, in float r) \n{ \n    NDC -= C;\n    NDC = abs(NDC) - vec2(r); \n    return length(max(NDC,vec2(0.))) + min(max(NDC.x, NDC.y),0.0);\n}\nvec3 scene(vec2 NDC)\n{\n    if (NDC.x > 0.)\n        // Some generated scene.\n        return mix(vec3(1), vec3(0.3), SMAA(diskSDF(NDC, vec2(0), 0.5))) * fract(NDC.xyx);\n    else\n        // And texture look up.\n        return texture(iChannel1, NDC).xyz;\n}\n\nvec3 mag_scene(vec2 NDC, vec2 pos, float mag, inout vec3 color)\n{\n    float r = 0.3, s = 0.1;\n    \n    //color = mix(color, scene((NDC-pos)/mag + pos), SMAA(diskSDF(NDC, pos, r))); // L2-disk\n    color = mix(color, scene((NDC-pos)/mag + pos), SMAA(squareSDF(NDC, pos, r) - s)); // L2-square\n    //color = mix(color, scene((NDC-pos)/mag + pos), SMAA(rhombusSDF(NDC, pos, r))); // L1-disk, rhombus\n    // Try another shapes.\n    \n    return color;\n}\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 NDC = map_to_centered_ndc(SC, SCENE_SCALE, vec2(0), false),\n         MP = map_to_centered_ndc(iMouse.xy, SCENE_SCALE, vec2(0), false);\n    \n    vec3 color = vec3(1);\n         color = scene(NDC);\n         \n    if (iMouse.z > 0.)\n        color = mag_scene(NDC, MP, 5., color);\n\n    O = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}]}