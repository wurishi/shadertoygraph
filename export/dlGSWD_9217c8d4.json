{"ver":"0.1","info":{"id":"dlGSWD","date":"1686093267","viewed":51,"name":"My First Shader // kishimisu","username":"Rheaven","description":"I followed the introduction tutorial of kishimisu. It's amazing !!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","firstshader","kishimisu"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t, vec3 a, vec3 b, vec3 c, vec3 d ) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    //Normalisation\n    vec2 uv = (fragCoord *2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    //Colorisation\n    vec3 c1 = vec3(0.5, 0.5, 0.5);\n    vec3 c2 = vec3(0.5, 0.5, 0.5);\n    vec3 c3 = vec3(1.0, 1.0, 1.0);\n    vec3 c4 = vec3(0.263, 0.416, 0.557);\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) { \n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4+ iTime*.4, c1, c2, c3, c4);\n\n        //Distance calculation\n        d = sin(d*8. +iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 2.0);\n\n        finalColor += col * d;\n        //col *= d;\n    }\n    \n    //Application\n    fragColor = vec4(finalColor, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}