{"ver":"0.1","info":{"id":"DsVcRh","date":"1695782195","viewed":44,"name":"Mood Gradient","username":"drichman","description":"Gradient emanating from bottom corner","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized UV coordinates\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time-based rotation\n    float angle = iTime * 0.1;\n    vec2 rotatedUV = mat2(cos(angle), -sin(angle), sin(angle), cos(angle)) * uv;\n\n    // UV manipulation with sine waves\n    rotatedUV.x += sin(rotatedUV.y * 5.0 + iTime * 0.2) * 0.1;\n    rotatedUV.y += sin(rotatedUV.x * 4.0 + iTime * 0.15) * 0.1;\n\n    // Warp effect using Perlin noise\n    float frequency = 2.0;\n    float amplitude = 0.1;\n    float warpStrength = 0.5;\n    vec2 warpedUV = rotatedUV + vec2(\n        sin(rotatedUV.y * frequency) * amplitude * warpStrength,\n        cos(rotatedUV.x * frequency) * amplitude * warpStrength\n    );\n\n    // Create a mesmerizing color gradient\n    vec3 gradientColor = vec3(\n        0.5 + 0.5 * sin(iTime * 0.1),\n        0.5 + 0.5 * cos(iTime * 0.05),\n        0.5 + 0.5 * sin(iTime * 0.03)\n    );\n\n    // Apply color gradient to the warped UV\n    vec3 finalColor = gradientColor * (1.0 - length(warpedUV));\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}