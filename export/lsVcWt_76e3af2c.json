{"ver":"0.1","info":{"id":"lsVcWt","date":"1523849905","viewed":132,"name":"twitchy iterative displacement","username":"chao_mu","description":"An exploration of the technique showed in https://www.shadertoy.com/view/lljSzz","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["forks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// An exploration of https://www.shadertoy.com/view/lljSzz\n\n#define LAYERS 5.\n#define STEP_LOW 0.3\n#define STEP_HIGH 0.7\n\nfloat sinDisplace(vec2 uv, int channel, float xCoeff, float yCoeff) {\n  \tfloat c = 0.0;\n    \n    for (float i = 0.; i < LAYERS; i++) {\n        float x = uv.x + sin(i)*xCoeff;\n        float y = uv.y + sin(i)*yCoeff;\n        float tex = texture(iChannel0, vec2(x, y))[channel];\n        c += smoothstep(STEP_LOW, STEP_HIGH, tex);\n    }\n    \n    return c / LAYERS;\n}\n\nvoid mainImage( out vec4 col, in vec2 p ) {\n\tfloat t = iTime;\n    p /= iResolution.xy;\n\n    float r = sinDisplace(p, 0, 0.03, fract(iTime) / 10.);\n    float g = sinDisplace(p, 1, 0.02, 0.04);\n    float b = sinDisplace(p, 2, 0.05, 0.01);\n    \n    col.rgb = vec3(r, g, b);\n}","name":"Image","description":"","type":"image"}]}