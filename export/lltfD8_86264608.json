{"ver":"0.1","info":{"id":"lltfD8","date":"1539527623","viewed":167,"name":"oscillina","username":"liju","description":" ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["oscilloscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, float radius)\n{\n\tvec2 dist = uv-vec2(0.5);\n\treturn 1.0-smoothstep(radius-(radius*1.0),\n                          radius+(radius*1.0),\n\t\t\t\t\t\t  dot(dist,dist)*4.0);\n}\n\nfloat plotline(vec2 uv, float line)\n{\n    float pixelSize = 9.0/iResolution.y;\n    return\tsmoothstep( line-pixelSize, line, uv.y ) - \n        \tsmoothstep( line, line+pixelSize, uv.y );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 bg = vec4(0.6,0.6,0.6,1.0);\n    float ratio = iResolution.x/ iResolution.y;\n    vec2 center = uv - vec2(0.5,0.5);\n    \n    // Grid\n    float lineWidth = 1.0 - 0.02;\n    float gridSize = 10.0;\n    float xPos = fract(ratio * center.x * gridSize);\n    float yPos = fract(center.y * gridSize);\n    \n    if(xPos > lineWidth || yPos > lineWidth)\n    {\n        bg = vec4(0.5);\n    }\n    \n    // Axis\n    if(\tuv.x > 0.4975 && uv.x < 0.5025 || uv.y > 0.495 && uv.y < 0.505)\n    {\n        bg = vec4(0.65);\n    }\n    \n    // Vignette\n    vec4 vignette = vec4(circle(uv, 0.9));\n    vignette = vignette * 0.3;\n    \n    bg = bg+vignette;\n    \n    bg = mix(vec4(0.0,0.0,0.0,0.0),vec4(0.309, 0.768, 0.690,1.0),bg.r);\n\n    // Sine waves\n    if( uv.x < 0.5)\n    {\n        float x = uv.x;\n        \n        uv.x = uv.x*6.0;\n        uv.y = uv.y*4.0;\n        \n    \tfloat lineA = 2.0+sin(4.0*sin(2.0*iTime+uv.x));\n    \tfloat lineB = 2.0+sin(2.0*iTime+uv.x);\n        \n    \tlineA = plotline(uv,lineA) * x*2.0;\n    \tlineB = plotline(uv,lineB) * x*2.0;\n    \n    \tbg = mix(bg,vec4(0.443, 0.956, 0.882,1.0),lineA);\n    \tbg = mix(bg,vec4(0.443, 0.956, 0.882,1.0),lineB);  \n    }\n    \n    fragColor = bg; \n}","name":"Image","description":"","type":"image"}]}