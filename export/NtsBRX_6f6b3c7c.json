{"ver":"0.1","info":{"id":"NtsBRX","date":"1651219620","viewed":82,"name":"Just circles idk","username":"LiukRast","description":"I made a circles loop using a normal looping system x - floor(x) and the equation of a cirle x^2+y^2=radius^2 then ijust started making random stuff and made so the center of the whole sprite moves on x+ while the radius changes based on a cosine.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void createLoop(inout float value, float radius) {\n    float base = 2.0 * floor( (value/radius - 1.0)/2.0 );\n    value = radius * (value/radius - 2.0 - base);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float PI = 3.141592653589;\n    float x = fragCoord.x;\n    float y = fragCoord.y;\n\n\tfloat cx = iTime * 10.0;\n    float cy = 1080.0/2.0;\n    \n    float radius = 100.0 * (1.0 + cos(iTime/10.0));\n    \n    float finalx = x - cx;\n    float finaly = y - cy;\n    \n    float equationx = finalx;\n    createLoop(equationx, radius);\n    \n    float equationy = finaly;\n    createLoop(equationy, radius);\n    \n    float scaler = finaly / 20.0;\n    vec3 color = vec3(fragCoord.x/iResolution.x, 0.0, 1.0-fragCoord.x/iResolution.x);\n    float vig = (sin(fragCoord.x * PI/iResolution.x) * sin(fragCoord.y * PI/iResolution.y))/3.0;\n    vec3 bg = vec3(vig, vig, vig);\n    vec3 result = bg;\n\tif(equationx * equationx + equationy * equationy < (radius * radius)/2.0) {\n\t\tresult = color;\n\t}\n    fragColor = vec4(result, 1.0);\n}","name":"Image","description":"","type":"image"}]}