{"ver":"0.1","info":{"id":"msyBW3","date":"1698696751","viewed":108,"name":"golf_wheels","username":"chenxianming","description":"golf_wheels","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["golfwheels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define I iResolution\n#define PI 3.1415\n#define TAU 2. * PI\n#define rot( r ) mat2(cos(r), sin(r), -sin(r), cos(r) )\n#define T( s ) fract( iTime * s ) * PI * 4.\n\nfloat rep(inout vec2 p, float rep) \n{\n\n    float an = TAU/rep;\n    \n    float fa = (atan(p.y,p.x)+an*0.5)/an;\n    float ia = floor( fa );\n    \n    float sym = an*ia;\n    \n    p *= rot(sym);\n\n    return ia;\n}\n\nfloat u( vec3 p, float s, float i ){\n\n    p.xz = abs( p.yz ) - .01 * ( ( i + 1. ) / 6. );\n    \n    p.y -= pow( p.x, 2. ) * 6.;\n    p.x += pow( p.z, 2. ) * 10. * cos( iTime ) * ( i + 1. );\n    p.z -= pow( p.x, 2. ) * 10. * cos( iTime ) * ( i + 1. );\n    \n    p.yz *= rot( PI * ( (i == 2.) ? .3 : .15 + ( i / 6. ) * .05 ) );\n    \n    return max(\n        max(\n            length( p.xz * vec2( 1. - s, 1. ) + vec2( -.1, 0. - (s*.1) ) ) - s,\n            length( p.xz * vec2( 1. - s, 1. ) + vec2( .1, 0. ) ) - s\n        ),\n        abs( p.y ) - .001\n    );\n}\n\nfloat df( vec3 p ){\n    \n    p.xy *= rot( iTime );\n    p.zy *= rot( iTime );\n    p.yz *= rot( PI * -.25 );\n    \n    vec3 q = p;\n    float k = .05;\n    \n    for( float j = 1.; j < 5.; j++ ){\n        q.y = abs( q.y ) - k;\n        q.yz *= rot( k );\n        k /= .95;\n    }\n    \n    rep( q.xz, 21. );\n    q.x -= .2;\n\n    return min(\n        .1,\n        u( q, .15, 0. )\n    );\n}\nvec3 ACESFilm(vec3 x){\n    float a = 2.51;\n    float b = 0.03;\n    float c = 2.43;\n    float d = 0.59;\n    float e = 0.14;\n    return (x*(a*x+b))/(x*(c*x+d)+e);\n}\n\n// IQ\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nvec3 lc( vec3 p ){\n    p.xz *= rot( T( .025 ) );\n    \n    for( float i = 0.; i < 3.; i++ ){\n        p.yz *= rot( T( .05 ) * i );\n        p.xy *= rot( T( .075 ) * i );\n        p.x = abs( p.x ) - i * .07;\n        p.xz *= rot( T( -.075 ) * i );\n        p.z = abs( p.z ) - i * .07;\n    }\n    \n    p.y -= .05;\n    return p;\n}\n\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = ( V * 2. - I.xy ) / I.y;\n\n    vec3 c, p, o = vec3( 0., 0., -1.5 ), r = vec3( u * .3, 1. );\n    float t, d, i, dp, e = sqrt( 1e-6 );\n    for( ; i < 64.; i++ )\n        p = o + r * t,\n        d = df( p ),\n        dp = ( 1. - abs( d ) / e ),\n        c += dp > 0. ? lc( reflect( l(p), r ) ) * (2. - cos( vec3( .1, p.x, abs(r.z) ) )) * ( i / 640. * dp) / t : vec3(0),\n        t += max( abs( d ) * .6667, e );\n    \n    c = ACESFilm( c );\n\n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}