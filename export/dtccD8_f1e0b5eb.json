{"ver":"0.1","info":{"id":"dtccD8","date":"1699132202","viewed":105,"name":"flower equations","username":"middle","description":"What is the fastest way to calculate such parametric equations?","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["mathtrigonometricfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    fragColor = texture(iChannel0,fragCoord/iResolution.xy);\n    \n}\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define Msin(t) sin(t)*0.5+0.5\n\nfloat VIEW_SCALE = 0.03;\n\nfloat Line(vec2 a, vec2 b, vec2 U)    // --- Distance to a line segment https://www.shadertoy.com/view/llySRh\n{   \n    U -= a, b -= a;\n\tfloat h = dot( U, b ) / dot(b,b),\n          c = clamp(h, 0., 1.);\n    //return h==c ? length( U - b * c ) : 1e5;   // dist to strict segment\n  return        length( U - b * c );         // dist to segment with round ends\n}\n\nvec4 ParametricEquations(float time,float dt)\n{\n    //uv.x = 8.0*cos(t);\n    //uv.y = 8.0*sin(t);\n    \n    \n    //uv.x = 7.0*sin(iTime*0.7)*sin(t)+11.0*cos(7.0*t/3.0);\n    //uv.y = 7.0*cos(iTime*0.9)*cos(t)+11.0*sin(7.0*t/3.0);\n    \n    return vec4(8.0*cos(time)-6.0*cos(8.0*time/3.0),\n                8.0*sin(time)-6.0*sin(8.0*time/3.0),\n                8.0*cos(time+dt)-6.0*cos(8.0*(time+dt)/3.0),\n                8.0*sin(time+dt)-6.0*sin(8.0*(time+dt)/3.0)\n    );\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  fragCoord/iResolution.y+vec2((iResolution.y-iResolution.x)/(2.0*iResolution.y),0.0)-vec2(0.5,0.5);\n    \n    \n    float pix = 2. / iResolution.y / VIEW_SCALE;\n    \n    uv /= VIEW_SCALE;\n    vec4 pos = ParametricEquations(iTime*3.,3./iFrameRate);\n    float dline = Line(pos.xy,pos.zw,uv);\n    dline =1.0-smoothstep( 0.0, pix+1.58, sqrt(sqrt(abs(dline)))) ;\n    vec4 col = dline*vec4(normalize(vec3(Msin(iTime*1.5),Msin(iTime*3.7),Msin(iTime*5.))),0.0);\n    float Xaxi = 1.-smoothstep( 0.0, pix, abs(uv.x));\n    float xgrid = 1.0-smoothstep( 0.0, pix, abs(fract(uv.x*0.5)));\n    float ygrid = 1.0-smoothstep( 0.0, pix, abs(fract(uv.y*0.5)));\n    float Yaxi = 1.0-smoothstep( 0.0, pix, abs(uv.y));\n    \n    //dLine = smoothstep(1.0,0.,dLine);\n    //float Line = max(Xaxi,dLine);\n    \n    col =  max(texture(iChannel0,fragCoord/iResolution.xy)*0.999,col);\n    \n    col =  max(col, vec4(0.2,0.8,0.3,.0)*(Xaxi+Yaxi));\n    \n    col =  max(col,vec4(0.05,0.06,0.05,0.0));\n    \n    col =  max(col,(xgrid+ygrid)*vec4(0.07,0.15,0.07,.0));\n    \n    fragColor = vec4(col);\n}","name":"Buffer A","description":"","type":"buffer"}]}