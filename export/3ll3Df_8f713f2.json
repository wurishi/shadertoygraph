{"ver":"0.1","info":{"id":"3ll3Df","date":"1558003929","viewed":285,"name":"Psychedelic RayMarching","username":"tomon9086","description":"2019-05-15","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["raymarching","tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphere_sdf(vec3 coord, float r) {\n    return length(coord) - r;\n}\n\nvec3 getEyeDirection(vec2 uv, float fovy) {\n    uv = 2.0 * uv - vec2(1.0);\n    vec3 direction = vec3(uv, 1.0 / tan(fovy));\n    return normalize(direction);\n}\n\nfloat sdf(vec3 coord) {\n    // return sphere_sdf(coord, 5.);\n\treturn sphere_sdf(mod(coord, 4.) - 2., 1.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/vec2(iResolution.y, iResolution.y) - vec2((iResolution.y / iResolution.x * .7), 0);\n    // なんでセンタリングするのに x - 0.7 なの？？？\n    \n    vec3 eyePos = vec3(0, 5. * sin(iTime), iTime * 4.);\n    vec3 ray = eyePos;\n    \n    float i, repeat = 64.0;\n    \n    for(i = 0.0; i < repeat; i++) {\n        float l = sdf(ray);\n        if(l < 0.001)\n            break;\n        ray += l * getEyeDirection(uv, 1.);\n    }\n    \n    fragColor = vec4(\n        (.5 * sin(iTime - 60.) + .5) - (i * 1.5 / repeat),\n        (.5 * sin(iTime) + .5) - (i * 1.5 / repeat),\n        (.5 * sin(iTime + 60.) + .5) - (i * 1.5 / repeat),\n        1\n    );\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\nvec2 mainSound( in int samp,float time) {\n    // A 440 Hz wave that attenuates quickly overt time\n    // return vec2(sin(6.2831*440.0*time)*exp(-1.0*time));\n    // return vec2(sin(6.2831*440.0*time)*exp(-1.0*mod(time, 1.)));\n}\n","name":"Sound","description":"","type":"sound"}]}