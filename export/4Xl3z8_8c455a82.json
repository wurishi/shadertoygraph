{"ver":"0.1","info":{"id":"4Xl3z8","date":"1707500199","viewed":38,"name":"2D RoundRect","username":"joyo","description":"RoundRect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["roundrect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pointInRoundRect(vec2 center, vec2 harfsize, float radius, vec2 p){\n\n    //return length( max( abs(center-p)-harfsize, 0.0) );\n    //return length ( max(abs(center-p-harfsize+radius) -radius, 0.0) );\n    //return length( max(abs( p-(center+harfsize-radius) ) - vec2(radius,radius), 0.0) );\n    //return length( p-(center+harfsize-radius) ) - radius;\n    return length( max(p-(center+harfsize-radius),0.0) ) - radius;\n}\n\n\nfloat pointInRect(vec2 center, vec2 harfsize, vec2 p){\n\n    //vec2 d = abs(center-p)-harfsize;\n    //return d.x<=0.0&&d.y<=0.0;\n    return length( max( abs(center-p)-harfsize, 0.0) );\n}\n\n// https://www.shadertoy.com/view/4tGGRm\nfloat sdRoundRect(vec2 p, vec2 b, vec4 r) {\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rect_c = vec2(400.0, 400.0);\n    vec2 rect_s = vec2(100.0, 200.0);\n    vec4 rect_color = vec4(1.0, 0, 0, 0.8);\n    /*if( pointInRect(rect_c, rect_s/2.0, fragCoord) ){\n        fragColor = vec4(1.0, 0, 0, 1.0);\n    }else{\n        fragColor = vec4(0);\n    }*/\n    \n    //float d = pointInRect(rect_c, rect_s/2.0, fragCoord);\n    float d = pointInRoundRect(rect_c, rect_s/2.0, 50.0, fragCoord);\n    fragColor = mix(rect_color, vec4(0) , d+(1.0-rect_color.w));\n    fragColor = mix(rect_color, vec4(0) , d);\n    \n    float d2 = sdRoundRect(rect_c - fragCoord, rect_s/2.0, vec4(50.));\n    fragColor = mix(rect_color, vec4(0) , d2);\n}","name":"Image","description":"","type":"image"}]}