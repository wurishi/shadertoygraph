{"ver":"0.1","info":{"id":"tsc3WN","date":"1568533987","viewed":167,"name":"abstractTown","username":"foran","description":"abstractTown","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["abstracttown"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime*.51\n\nfloat box(vec3 p, vec3 s) {\n  p=abs(p)-s;\nreturn max(p.x, max(p.y,p.z));\n}\n\nmat2 rot(float a) {\n  float ca=cos(a);\n  float sa=sin(a);\n  return mat2(ca,sa,-sa,ca);\n}\n\nfloat rnd(float t) {\n  return fract(sin(t*457.332)*584.321);\n\n}\nfloat curve(float t, float d) {\n  float g=t/d;\n  return mix(floor(g), floor(g+1.), pow(smoothstep(0.,1.,fract(g)), 10.));\n}\n\nfloat at=0.;\nfloat map(vec3 p) {\n  //vec3 bp=p;\n  float t3=time*0.2;\n  p.xz *= rot(sin(p.y * 0.02 + t3)*1.1);\n  p.xy *= rot(sin(p.z * 0.04 + t3)*.1);\n  vec3 bp=p;\n  float dist = 150.;\n  p = (fract(p/dist-0.5)-0.5)*dist;\n  for(float i=0.; i<5.; ++i) {\n    float t = curve(time, 550.8+0.05*i);\n    p.xy *= rot(t*0.3);\n    p.xz *= rot(t*0.2+i);\n    p=abs(p);\n    p-= 5.;\n    p.z-=2.;//  расстояние между кривыми\n  }\n  float d = box(p, vec3(.51,10,5.2));//  длина блоков по x y z\n  d = min(d, length(p.zy)-0.2);\n  vec3 bp2 = bp;\n  bp2 = (fract(bp2/20.-0.5)-0.5)*50.;//  отражение в блоках 20.\n  float k = box(bp2, vec3(10.,0.2,0.2));\n  k = min(k, box(bp2, vec3(0.2,10,0.2)));\n  k = min(k, box(bp2, vec3(0.2,0.2,10)));\n  at += 0.2/(0.2+k);\n  d = min(d, k);\n  d = max(d, -(length(bp)-30.));//  высота блоков\n  d *= 0.97;//  глубина .7\n  return d;\n}\n\nvoid cam(inout vec3 p) {\n\n  float t = time + curve(time, 11.5)*0.9 + curve(time, 14.7)*2.9;//  кривая камеры обзора  1.5 4.7\n  p.yz *= rot(t*0.2);// .2\n  p.xz *= rot(t*0.5);// .5\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n  vec2 uv=vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n  uv-=.5;\n  uv/=vec2(iResolution.y/iResolution.x,1.);\n  vec3 s=vec3(0.,0.,-110.);\n  vec3 r=normalize(vec3(-uv,1.));\n  cam(s);\n  cam(r);\n  float maxdist = 1000.;// .200\n  vec3 p=s;\nfloat i=0.;\n  float dd=0.;\n  for(i=0.; i<128.; ++i) {// глубина\n    float d=map(p);\n    if(d<0.001) {//  epsilon\n      i+=d/0.001;\n      break;\n    }\n    if(dd>maxdist) { dd=maxdist; break; }\n    p+=d*r;\n    dd+=d;\n  }\n  vec2 off=vec2(0.01,0);\n  vec3 n=normalize(map(p)-vec3(map(p-off.xyy), map(p-off.yxy), map(p-off.yyx)));\n  vec3 col=vec3(0.);\n  vec3 l = normalize(-vec3(1.,3.,2.));\n  float fog = 1.-clamp(dd/maxdist,0.,1.);\n  vec3 sky = mix(vec3(0.5,0.3,2.2), vec3(2.5,0.3,0.2), pow(abs(r.y),2.));\n  float ao= clamp(map(p+n),0.,1.) * clamp(map(p+n*4.)/4.,0.,1.);\n  col += max(dot(n,l),0.);\n  col += pow(1.-abs(dot(n,r)), 5.) * sky * 2.;\n  col *= fog * ao;\n  col += pow(at * 0.04,0.5) * vec3(2.,1.1,0.5);\n  col += sky * pow((1.-fog)*1.2, 3.);\n  float tt=time*0.93 - dd*0.02;//  радуга блоков .3  .01\n  col.xy *= rot(tt);\n  col.yz *= rot(tt*5.3);\n  col=abs(col);\n  col *= .89;\n  col *= 1.32-length(uv);\n  vec4 out_color=vec4(1.);\n  out_color = vec4(col, 1.);\n  fragColor=vec4(out_color);\n}","name":"Image","description":"","type":"image"}]}