{"ver":"0.1","info":{"id":"l3SfDd","date":"1730083898","viewed":23,"name":"step_","username":"rntrn","description":"#4","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["step"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int channel;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3[4] colors = vec3[](\n        vec3(1.0, 0.266, 0.0),    // (255, 68, 0) normalized\n        vec3(1.0, 0.388, 0.278),  // (255, 99, 71) normalized\n        vec3(1.0, 0.502, 0.321),  // (255, 128, 82) normalized\n        vec3(1.0, 0.851, 0.0)     // (255, 217, 0) normalized\n    );\n    vec3 col = vec3(0.,0.,0.);\n    float n = 4.0;\n    uv*=n;\n    channel = int(2.0 * fragCoord.x/iResolution.x);\n    if(channel == 0){\n        uv = floor(uv) + step(0.5, fract(uv));\n    }\n    else{\n        float thr = 0.25 * sin(iTime);\n        uv = floor(uv) + smoothstep(0.25 + thr, 0.75 - thr, fract(uv));\n    }\n    // Output to screen\n    uv/=n;\n    col = mix(mix(colors[0],colors[1], uv.x),\n                    mix(colors[2],colors[3], uv.x)\n                    ,uv.y);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}