{"ver":"0.1","info":{"id":"MtSfR1","date":"1514726801","viewed":88,"name":"pattern03","username":"edapx","description":"patterns, daisy","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nmat2 rotateMatrix2D(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    mat2 rot = rotateMatrix2D(_angle);\n    _st =  rot * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec3 daisy(vec2 st, vec2 orig, float resize, float smoothness, float nPale){\n    vec2 toCenter = vec2(orig)-st;\n    float angle = atan(toCenter.y,toCenter.x);\n    float radius = length(toCenter)*resize;\n\n    float f = abs(cos(angle*nPale));\n    return vec3( 1.-smoothstep(f,f+smoothness,radius) );;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 colorA = vec3(0.149,0.141,0.912);\n    vec3 colorB = vec3(1.000,0.833,0.224);\n    \n    vec2 st = fragCoord/iResolution.y;\n    vec2 originalSt = st;\n\n    // Divide the space\n    st = tile(st,3.);\n    st = rotate2D(st,(sin(iTime)*PI/16.0) );\n    vec2 rotDaisyA = rotate2D(st,(sin(iTime)*PI/16.0) );\n    \n    // divide the space again\n    st = tile(st,2.);\n    vec2 rotDaisyB = rotate2D(st,(fract(iTime)) );\n\n    // Draw a square\n    //color = vec3(box(st,vec2(0.7),0.01));\n    colorA *= daisy(rotDaisyA, vec2(0.5), -abs(sin(iTime)*PI/2.0)+2.3, 1.9, 8.0);\n    colorB *= daisy(rotDaisyB, vec2(0.5), (abs(sin(iTime)) + 2.0)*7.0, 2.9, 3.0);\n    fragColor = vec4((colorA+colorB),1.0);    \n    \n}","name":"Image","description":"","type":"image"}]}