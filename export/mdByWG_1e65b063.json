{"ver":"0.1","info":{"id":"mdByWG","date":"1688094986","viewed":47,"name":"Squary Triangle Field","username":"MrBlackCat","description":"SQAATRII","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["triangle","square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat triangle( in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy *2. - 1.;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 fColor = vec3(1.0);\n    float d = cos(sdBox(uv*16., vec2(8.))+iTime)*20.;\n    fColor += iTime*3. /vec3(d);\n    \n    fColor += tan(vec3(triangle(uv*16.,8.))+iTime)*20.;\n    \n    fColor = smoothstep(.0,3., fColor);\n    fColor = .2 / fColor;\n    fragColor = vec4(fColor,1.0);\n}","name":"Image","description":"","type":"image"}]}