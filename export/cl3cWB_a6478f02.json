{"ver":"0.1","info":{"id":"cl3cWB","date":"1699568776","viewed":24,"name":"Rotating Worley Noise","username":"Chroma_Crash","description":"Stupid simple worley noise. I'm at my job so I can't write this on my home pc but I want to write shaders so I'm doing this.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","worley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\n#define COLUMNS 19\n#define ROWS 10\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\nfloat worley(vec2 position) {\n    vec2 cell = floor(position * vec2(COLUMNS, ROWS));\n    \n    float min_dist = 1000.0;\n    \n    for (int y = -2; y < 3; y++) {\n        for (int x = -2; x < 3; x++) {\n            vec2 i = cell + vec2(x, y);\n            \n            float angle = rand(i) * 2.0 * PI + iTime;\n            \n            vec2 center = vec2(cos(angle), sin(angle)) * 0.4;\n            \n            vec2 transform = center + i;\n            \n            float d = distance(position * vec2(COLUMNS, ROWS), transform);\n            \n            min_dist = min(min_dist, d);\n        }\n    }\n    \n    return 1.0 - min_dist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float noise = worley(uv);\n\n    vec3 col = vec3(noise);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}