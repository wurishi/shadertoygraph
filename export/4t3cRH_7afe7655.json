{"ver":"0.1","info":{"id":"4t3cRH","date":"1531431289","viewed":192,"name":"Another Piet Mondrian - Tableau","username":"darkeclipz","description":"Piet Mondrian - Tableau;\nhttps://thebookofshaders.com/07/\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["mondrian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define OCTAVES 4\nfloat fbm (in vec2 st) {\n    // Initial values\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    //\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(st);\n        st *= 1.5;\n        amplitude *= .5;\n    }\n    return value;\n}\n// From FabriceNeyret2\n#define step(a,x) smoothstep(0.,1.5/iResolution.y,x-a)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord/iResolution.y;\n\n    vec3 col = vec3(0.9);\n    float t = iTime/4.;\n    \n    float p = 0.1*fbm(uv+t);\n    float q = fbm(uv+5.*p+t);\n    float r = fbm(uv+10.*q+t);\n    \n    r = r*.5-.5;\n    \n    uv = uv - (0.1+0.2*t)*r;\n    \n    col = mix(col, vec3(.7,.1,.1), step(0.6, uv.y) * (1. - step(0.4, uv.x)) );\n    col = mix(col, vec3(.95,.75,0), step(0.6, uv.y) * step(1.6, uv.x) );\n    col = mix(col, vec3(.2,.4,.9), (1.-step(0.2, uv.y)) * step(1.4, uv.x) );\n    \n    col = mix(col, vec3(.15), step(0.78, uv.y) - step(0.82, uv.y));\n    col = mix(col, vec3(.15), step(0.58, uv.y) - step(0.62, uv.y));\n    col = mix(col, vec3(.15), step(0.38, uv.x) - step(0.42, uv.x));\n    col = mix(col, vec3(.15), (step(0.18, uv.x) - step(0.22, uv.x))*step(0.58, uv.y));\n    col = mix(col, vec3(.15), step(1.58, uv.x) - step(1.62, uv.x));\n    col = mix(col, vec3(.15), step(1.38, uv.x) - step(1.42, uv.x));\n    col = mix(col, vec3(.15), (step(0.18, uv.y) - step(0.22, uv.y)) * step(0.38, uv.x) );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}