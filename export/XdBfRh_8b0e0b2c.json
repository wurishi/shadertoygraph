{"ver":"0.1","info":{"id":"XdBfRh","date":"1499292115","viewed":219,"name":"Please, don't eat me","username":"lsdlive","description":"Experimenting with raymarching: tentacular monster.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nmat2 r2d(float a) {\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\nfloat map(vec3 p) {\n\n\tfloat c1 = .05;\n\tp.xz *= r2d(c1*cos(iTime));\n\tp.xy *= r2d(c1*sin(iTime));\n\n\n\tfloat t = 4.;\n\tp.x = mod(p.x + t*.5, t) - t * .5;\n\n\tt = 6.;\n\tp.y = mod(p.y + t*.5, t) - t * .5;\n\n\n\tvec3 pos = vec3(0., cos(sin(iTime) * p.z * .19), 0.);\n\n\n\tvec3 b = vec3(.3, .2, 1e7) * .01;\n\t\n    float d = length(max(abs(p - pos) - b, 0.)) - .2;\n    \n\treturn d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - .5;\n\tuv.x *= iResolution.x / iResolution.y;\n\n\tvec3 ro = vec3(2., 2., 10.), p;\n\tvec3 rd = normalize(vec3(uv, -1));\n\tp = ro;\n\n\tint ri;\n\tfor (int i=0; i < 50; i++) {\n\t\tri = i;\n        float d = map(p);\n\t\tif (d < .001) break;\n\t\tp += rd * d;\n\t}\n\n\tfragColor = vec4(mix(vec3(0.8, .8, .7), vec3(.3, 0.1, 0.2), float(ri) / 50.), 1.);\n}","name":"Image","description":"","type":"image"}]}