{"ver":"0.1","info":{"id":"dl2BDV","date":"1694538552","viewed":298,"name":"White light interference","username":"Nguyen2007","description":"Just curious .-.","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["2d","light","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Tone Mapping\n\n// Simplified version of AgX by bwrensch https://www.shadertoy.com/view/cd3XWr\nvec3 tone(vec3 v)\n{\n    mat3 m = mat3(.842479062253094,  .0423282422610123, .0423756549057051,\n                  .0784335999999992, .878468636469772,  .0784336,\n                  .0792237451477643, .0791661274605434, .879142973793104);\n\n    v = clamp((log2(m * v) + 12.47393) / 16.5, 0., 1.);\n  \n    vec3 v2 = v * v,\n         v4 = v2 * v2;\n  \n    v =   15.5  * v4 * v2\n        - 40.14 * v4 * v\n        + 31.96 * v4\n        - 6.868 * v2 * v\n        + .4298 * v2\n        + .1191 * v\n        - .00232;\n    \n    v = inverse(m) * mix(vec3(dot(v, vec3(0.2126, 0.7152, 0.0722))), pow(v, vec3(1.35)), 1.4);\n    \n    return mix(pow((v + .055) / 1.055, vec3(2.4)), v / 12.92, lessThan(v, vec3(.04045)));\n}\n\n// Wavelength To RGB\nvec3 WaveToRGB(float w)\n{\n    #define g(m, s1, s2) exp(-.5 * pow((w - m) / ((w < m) ? s1 : s2), 2.))\n    \n    return max(vec3(  1.056 * g(599.8, 37.9, 31.)\n                     + .362 * g(442. , 16. , 26.7)\n                     - .065 * g(501.1, 20.4, 26.2),\n                      \n                       .821 * g(568.8, 46.9, 40.5)\n                     + .286 * g(530.9, 16.3, 31.1),\n                      \n                      1.217 * g(437. , 11.8, 36.)\n                     + .681 * g(459. , 26. , 13.8) )\n              \n             * mat3( 3.2405, -1.5372, - .4986,\n                    - .9689,  1.8758,   .0415,\n                      .0557, -  .204,   1.057), 0.);\n}\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    #define S smoothstep\n    \n    vec2 uv = abs(U - .5 * iResolution.xy) / iResolution.y;\n    uv.x /= 2.;\n    \n    float res = 50.;\n    \n    vec3 col = vec3(0);\n    \n    for(float i = 380.; i < 780.; i += 400. / res)\n    {\n        float a = 1e-4 * i;\n        \n        col += 10. * S(.5, 0., uv.x) * S(.1, 0., uv.y)\n                   * WaveToRGB(i) * max(cos(6.28 * (uv.x) / a), 0.);\n        \n        for(float x = a * ceil(-.5 / a); x < .5; x += a)\n        \n        col += S(.5, 0., abs(x)) * WaveToRGB(i) / (1e3 * pow(length(uv * vec2(1, .3) - vec2(x, 0)), 2.) + .15);\n    }\n\n    O = vec4(tone(col / res), 1);\n}","name":"Image","description":"","type":"image"}]}