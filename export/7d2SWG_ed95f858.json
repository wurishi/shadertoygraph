{"ver":"0.1","info":{"id":"7d2SWG","date":"1620949831","viewed":187,"name":"Rito's Julia Fractal","username":"ritobanrc","description":"This is a Julia Fractal\n","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 z = fragCoord/iResolution.xy;\n    z *= 2.;\n    z -= 1.;\n    vec2 c = (iMouse.xy / iResolution.xy) * 2. - 1.;\n    bool val = false;\n\n    // Time varying pixel color\n    int i = 0;\n    for (;i < 10000; i++) {\n        z = vec2(z.x * z.x - z.y * z.y, 2.*z.x*z.y) + c;\n        if (length(z) > 100.) {\n            val = true;\n            break;\n        }\n    }\n\n    // Output to screen\n    fragColor = val ? vec4(i / 8, 1., 1.,1.0) : vec4(0., 0., 0., 1.);\n}","name":"Image","description":"","type":"image"}]}