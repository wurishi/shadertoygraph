{"ver":"0.1","info":{"id":"4ct3Wn","date":"1711644771","viewed":101,"name":"Circle Pattern Tutorial","username":"AgateDragon","description":"Circle pattern background tutorial\nhttps://agatedragon.blog/2024/03/28/shadertoy-circle-pattern/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","circle","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// RGB\nconst vec3 BACKGROUND = vec3(0.04);\nconst vec3 FOREGROUND = vec3(0.8, 0.12, 0.12);\n\n// Total number of rows of circles\nconst float ROWS = 18.0;\n\n// Circle edge smoothing\nconst float SMOOTHING = 24.0;\n\nfloat Circle(vec2 pos, float radius)\n{\n    return length(pos) - radius;\n}\n\nvoid mainImage( out vec4 fragColour, in vec2 fragCoord )\n{\n    // Normalised pixel coordinates (from 0 to 1)\n    vec2 texCoord = fragCoord / iResolution.xy;\n    \n    // Calculate aspect ratio\n    float w = 1.0 / min(iResolution.x, iResolution.y);\n    \n    // Aspect ratio corrected UV coordinates\n    vec2 uv = fragCoord * w;\n    \n    // Position and number of circles\n    vec2 pos = fract(uv * ROWS);\n    pos -= 0.5;\n    \n    // Get the distance to the circle centre\n    float radius = 0.03 + 0.25 * (1.0 - texCoord.y);\n    float c = Circle(pos, radius);\n    \n    // Smoothing\n    float s = SMOOTHING * w;\n    c = smoothstep(s, -s, c);\n    \n    // Output\n    fragColour.rgb = mix(BACKGROUND, FOREGROUND, c);\n    fragColour.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}