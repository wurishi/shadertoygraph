{"ver":"0.1","info":{"id":"7lKcD3","date":"1662424921","viewed":275,"name":"dissection flower 1(sound)","username":"grom12345","description":"My first Shadertoy with sound!","likes":5,"published":1,"flags":8,"usePreview":0,"tags":["sdf","circle","pattern","dissection"],"hasliked":0,"parentid":"flKcDc","parentname":"dissection flower"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n    float r = .3;\n    float maxDis = .01;//(sin(iTime-pi*.5)*.5+.5)*.05;\n    float maxShift = 0.2;\n    vec2 shift = vec2(0);\n    float dLine = 100000.;\n    \n    float t = iTime*speed;\n    float m = floor(mod(t, maxN*2.));\n    float dir = floor(m/maxN);\n    float fr = fract(t);\n    //fr = dir==0. ? fr : 1.-fr;\n    float ii = dir==0. ? m : maxN*2.-m;\n    ii+=1.-dir;\n    if(ii>0.){\n        for(float i=0.;i<ii;i++){\n            //vec2 h = N(i*cos(iTime*pi*2.)*.05)*vec2(.05, .001);//hash(vec2(i));\n            float dis = maxDis*(i<ii-1. ? 1.: dir==0. ? fr : 1.-fr);\n            vec2 d = vec2(-dis, sin(t*pi)*maxShift)/ii;\n            float a1 = ii-1.+dir;\n            float a2 = ii-dir;\n            float a = mix(a1==0. ? 0. : i*pi/(a1), a2==0. ? 0. : i*pi/(a2), fr);\n            mat2 rot = Rot(a);\n            mat2 rot1 = Rot(-a);\n            d*=rot1;\n            vec2 uv1 = uv;\n            //uv1 += (2.*(i+.5)*r/ii-r)*.5;//hash1(vec2(i))*.1;\n            uv1+=sin(t*pi*.25)*vec2(N(t*.25))*.05;\n            uv1*=rot;\n\n            dLine = min(dLine, abs(uv1.x)-dis);\n            shift += uv1.x<.0 ? -d : d;\n        }\n    }\n    uv += shift;\n    vec3 col = vec3(0);\n    float d = circle(uv, r);\n    \n    d = max(d, -dLine);\n    col+=vec3(.2+(abs(shift))*10.,1.-+length(shift)*10.);\n    col*=col*smoothstep(.01,.0, d);\n    col = pow(abs(col)+.0, vec3(.2));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pi 3.1415926535\n#define speed 2.\n#define maxN 4.\n\nfloat smin(float a, float b, float k) {\n    float h = clamp(0.5 + 0.5*(a-b)/k, 0.0, 1.0);\n    return mix(a, b, h) - k*h*(1.0-h);\n}\n\nfloat circle(vec2 p, float r){\n   return length(p)-r;\n}\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvec2 N(float angle) {\n// angle to vector\n    return vec2(sin(angle), cos(angle));\n}\n\nvec2 hash( vec2 p ) // replace this by something better\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\nvec2 hash1( vec2 p )\n{\n    //p = mod(p, 4.0); // tile\n    p = vec2(dot(p,vec2(127.1,311.7)),\n             dot(p,vec2(269.5,183.3)));\n    return fract(sin(p)*18.5453);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n   float freq = 42.;\n   float x = 0.;\n   float voices = 20.;\n   for(float i=1.;i<=voices;i++){\n     float k = i*(1.+i*(pow(sin(pi*time*speed/maxN-pi*.5)*.5+.5, 2.))*.002);\n     x+= (pow((voices-i+1.)/voices, 5.))*(.5-pow(abs(sin(k*pi*2.*(freq+sin(mod(time, 2.)*pi*speed*sin(speed*pi*mod(time,2.)*.2)))*mod(time, 2.))),sin(time*pi*speed)*(1.+sin(time*pi*speed))*2000.)*pow(abs(sin(time*pi*speed)),1.-abs(sin(time*pi*speed))*15. ));\n   }\n\n   return vec2(x/voices);\n}","name":"Sound","description":"","type":"sound"}]}