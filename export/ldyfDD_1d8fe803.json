{"ver":"0.1","info":{"id":"ldyfDD","date":"1528867420","viewed":267,"name":"curvature average","username":"mikoval","description":"curvature average","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["fractalmandlebrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iteration_holder 300\n#define escape_holder 100.0\nfloat zoom = 8000.463325567321 ;\nvec2 focusPoint = vec2(-0.3160039610412624, -0.6428171368132422);\n\nvec3 image1(float v, float l){\n\tvec3 col;\n    \n \n    col.r =  0.5 + 0.5 * sin(3.0 * iTime + l / 3.0) ;\n    \n  \n    col.g = 0.5 + 0.5 * sin( 6.0 * sin(iTime) + 10.0 * cos(v * 10.0 / log(l)));\n    \n    col.b = 0.5 + 0.5 * sin(4.0 * sin(iTime) + 10.0 * cos(v * v * 10.0 / log(l)));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float izoom = pow(1.001, zoom + 4000.0 * sin(iTime/2.0) );\n\n    vec2 z = vec2(0.0);\n\n    vec2 c = focusPoint + (uv * 4.0 - 2.0)  * 1.0 / izoom ;\n\n    c.x *= iResolution.x / iResolution.y;\n\n    vec2 p = z;\n\n\n\n    float l;\n    float sum = 0.0;\n    float sum2 = 0.0;\n\n    float sum3 = 0.0;\n    float sum4 = 0.0;\n\n    int skip = 0;\n\n    float min_dist = 10000.0;\n    for( int i=0; i<iteration_holder; i++ )\n    {\n        l++; \n        if( length(z)>escape_holder) break;\n        p = z;\n        vec2 t = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y );\n        z = t + c;\n\n        min_dist = min(min_dist, length(z-vec2(-0.8181290, -0.198848)));\n        sum2 = sum;\n        sum4 = sum3;\n        if ((i>skip)&&(i!=00-1)) {\n\n            float mp=length(t);\n            float m = abs(mp  - length(c)  );\n            float M = mp + length(c);\n\n            float curve1 = 0.5 + 0.5 * sin(10.0 * sin(iTime/20.0) + 4.0  * atan(z.x, z.y));\n            float curve2 = 0.5 + 0.5 * sin(10.0 * sin(iTime) * atan(z.x, z.y));\n            sum += 1.0 * curve1;\n            sum3 +=  1.0 * curve2;\n        }\n\n    }\n\n    sum = sum / (l );\n    sum2 = sum2 / (l - 1.0);\n\n    sum3 = sum3 / (l );\n    sum4 = sum4 / (l - 1.0);\n\n    \n    \n    \n    l = l + 1.0 + 1.0/log(2.0) * log(log(100.0)/ log(sqrt(dot(z,z))));\n    float d = l - floor(l);\n\n\n    float r = sum * d + sum2 * (1.0 - d);\n\n\n\n\n    \n\t\n\n\n    vec3 finalColor = image1(r, l);\n\n    \n\n\n    if(l > (float(iteration_holder) - 1.0)){\n         fragColor = vec4(vec3(0.0), 1.0);\n    }\n    else{\n         fragColor = vec4(finalColor, 1.0);\n    }\n\n\n\n\n}","name":"Image","description":"","type":"image"}]}