{"ver":"0.1","info":{"id":"NlVfDz","date":"1664369049","viewed":61,"name":"A Simple Julia Set","username":"Jayou","description":"A Simple Julia Set plot, learning from https://complex-analysis.com/content/julia_set.html","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    float x = 2.0*fragCoord.x/iResolution.y-2.0;\n    float y = 2.0*fragCoord.y/iResolution.y-1.0;\n\n    float zx = 0.0;\n    float zy = 0.0;\n    \n    float cx = 4.0*iMouse.x/iResolution.y-4.0;\n    float cy = 4.0*iMouse.y/iResolution.y-2.0;\n    \n    int iteration = 0;\n    int max_iteration = 1000;\n    \n    // f(z) = z^2 + c, z and c are complex number.\n    while ((x*x + y*y) <= 256.0 && iteration < max_iteration)\n    {\n        zx = x*x - y*y;\n        zy = 2.0*x*y;\n        \n        x = zx + cx;\n        y = zy + cy;\n        \n        iteration++;\n    }\n    \n    if (iteration == max_iteration)\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    else\n    {\n        float smooth_iteration = float(iteration);\n        \n        // Smooth iteration use https://iquilezles.org/articles/msetsmooth/\n        // |Zn| = x*x + y*y, B = 256.0, d = 2.0\n        //smooth_iteration -= log(log(x*x + y*y)/log(256.0))/log(2.0);\n        smooth_iteration -= log2(log2(x*x + y*y)) - 3.0; // Simplified with log2.\n        \n        fragColor = vec4(smooth_iteration/25.0, (smooth_iteration-25.0)/25.0, (smooth_iteration-50.0)/25.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}