{"ver":"0.1","info":{"id":"sddXWr","date":"1632989389","viewed":194,"name":"Dotmatrix LCD sim.","username":"tak0294","description":"dotmatrix like shader.\n","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["dotmatrixlcd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// === draw a circle (p,r) ===\n\nfloat circle(vec2 p, float r, float padding) {\n\t\n    p -= vec2(r + (padding*.5-r));\n    r = length(p)/r - 1.;\n\n\t//return step(0.,r);\n\treturn smoothstep(-.1,.1,r);\n}\n\nfloat getNearNumber2(float num, float step){\n\n    return ceil(num/step)*step;\n}\n\n vec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz),\n                 vec4(c.gb, K.xy),\n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r),\n                 vec4(c.r, p.yzx),\n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n                d / (q.x + e),\n                q.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float padding = 20.0;\n    vec2 pos = mod(fragCoord, padding);\n    \n    vec2 pos2;\n    pos2.x = getNearNumber2(fragCoord.x, padding);\n    pos2.y = getNearNumber2(fragCoord.y, padding);\n    \n    vec2 new_uv = pos2/iResolution.xy;\n    \n    vec4 color = texture(iChannel1, new_uv);\n    vec3 hueColor = rgb2hsb(color.rgb);\n    \n    // Output to screen\n    //fragColor = vec4(1.0-circle(pos, 15.0));\n    fragColor = texture(iChannel1, new_uv);\n    fragColor *= 1.0-circle(pos, 1.0 + hueColor[2]*9.0, padding);\n\n}","name":"Image","description":"","type":"image"}]}