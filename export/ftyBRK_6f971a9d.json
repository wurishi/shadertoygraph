{"ver":"0.1","info":{"id":"ftyBRK","date":"1664874866","viewed":60,"name":"Shader1_galaxie","username":"Lomio","description":"CM1","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle","galaxie","cm1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool circle(vec2 p, float R, vec2 center){\n    if (sqrt(pow(p.x+center.x, 2.0) + pow(p.y+center.y, 2.0)) < R){\n        return true;\n    } else return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0*fragCoord/iResolution.xy - 1.0;\n    uv.x = uv.x / iResolution.y * iResolution.x;\n    /*\n    // Time varying pixel color\n    vec3 col = vec3(0,0.3,1);\n    \n    if (uv.x < 0.0) {\n        col = vec3(0,1,0.5);\n    }\n    if (uv.y < 0.0){\n        col = vec3(1.0, 0.0, 1.0);\n    }\n    */\n    \n    // Circle\n    /*\n    vec2 myCenter = vec2(0.0,0.0);\n    if (circle(uv, 1.0, myCenter) ) col = vec3(1, 1, 0.7);\n    if (circle(uv, 0.5, myCenter) ) col = vec3(0.5, 1, 1);\n    \n    vec2 centerList[6];\n    centerList[0] = vec2(-0.5,-0.5);\n    centerList[1] = vec2(-0.3,-0.3);\n    centerList[2] = vec2(-0.1,-0.1);\n    centerList[3] = vec2(0.1,0.1);\n    centerList[4] = vec2(0.3,0.3);\n    centerList[5] = vec2(0.5,0.5);\n    \n    vec3 colorList[6];\n    colorList[0] = vec3(1, 0.8, 0.7);\n    colorList[1] = vec3(0.8, 0.7, 0.7);\n    colorList[2] = vec3(0.7, 0.6, 0.7);\n    colorList[3] = vec3(0.6, 0.5, 0.7);\n    colorList[4] = vec3(0.5, 0.2, 0.7);\n    colorList[5] = vec3(0.4, 0.1, 0.7);\n    \n    for (int i = 0 ; i < 6; i++){\n        if (circle(uv, 0.2, centerList[i]) ) col = colorList[i];\n    }\n    \n    mat2 m = mat2(1, 3, 4, 5);\n    */\n    \n    // BLACK\n    vec3 col = vec3(0,0,0);\n    \n    // SUN\n    vec2 myCenter = vec2(0.0,0.0);\n    if (circle(uv, 0.2, myCenter) ) col = vec3(1, 1, 0.7);\n    /*\n    // Planet BLUE\n    vec2 centerPlanetBlue = vec2(sin(iTime)*0.5, cos(iTime)*0.5);\n    if (circle(uv, 0.1, centerPlanetBlue) ) col = vec3(0,1,1);\n    \n    // Planet blue satellite RED\n    vec2 centerSatelite1;\n    centerSatelite1.x = sin(centerPlanetBlue.x)*1.35;\n    centerSatelite1.y = sin(centerPlanetBlue.y)*1.35;\n    if (circle(uv, 0.02, centerSatelite1) ) col = vec3(1,0,0);\n\n    // Planet GREEN\n    vec2 centerPlanetGreen = vec2(sin(iTime)*0.9, cos(iTime)*0.9);\n    if (circle(uv, 0.15, centerPlanetGreen) ) col = vec3(0,1,0);\n    \n    // Planet green satellite RED\n    vec2 centerSatelite2;\n    centerSatelite2.x = sin(centerPlanetGreen.x)*1.5;\n    centerSatelite2.y = sin(centerPlanetGreen.y)*1.5;\n    if (circle(uv, 0.02, centerSatelite2) ) col = vec3(1,0,0);\n    */\n    // Avec matrices\n    float angle = 2.0*iTime;\n    mat2 rotation1 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    angle = 3.0*iTime;\n    mat2 rotation2 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    angle = 4.0*iTime;\n    mat2 rotation3 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    angle = 5.0*iTime;\n    mat2 rotation4 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    angle = 6.0*iTime;\n    mat2 rotation5 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    \n    angle = -3.0*iTime;\n    mat2 rotation7 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    angle = -4.0*iTime;\n    mat2 rotation8 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    angle = -5.0*iTime;\n    mat2 rotation9 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    angle = -6.0*iTime;\n    mat2 rotation10 = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    \n    vec2 c1 = vec2(0.0, 0.5);\n    vec2 planet1 = c1*rotation1;\n    if (circle(uv, 0.12, planet1) ) col = vec3(1,1,0);\n\n    vec2 c2 = vec2(0.0, 0.4);\n    vec2 planet2 = c1*rotation1 + c2*rotation2;\n    if (circle(uv, 0.06, planet2) ) col = vec3(1,0,0);\n    \n    vec2 c3 = vec2(0.0, 0.4);\n    vec2 planet3 = c1*rotation1 + c2*rotation2 + c3*rotation3;\n    if (circle(uv, 0.06, planet3) ) col = vec3(0,1,0);\n    \n    vec2 c4 = vec2(0.0, 0.4);\n    vec2 planet4 = c1*rotation1 + c2*rotation2 + c3*rotation3 + c4*rotation4;\n    if (circle(uv, 0.06, planet4) ) col = vec3(0,0,1);\n    \n    vec2 c5 = vec2(0.0, 0.4);\n    vec2 planet5 = c1*rotation1 + c2*rotation2 + c3*rotation3 + c4*rotation4 + c5*rotation5;\n    if (circle(uv, 0.06, planet5) ) col = vec3(0,1,1);\n    \n\n    vec2 c6 = vec2(0, -0.5);\n    vec2 planet6 = c6*rotation1;\n    if (circle(uv, 0.15, planet6) ) col = vec3(1,1,0);\n    \n    vec2 c7 = vec2(0.0, 0.4);\n    vec2 planet7 = planet6 + c7*rotation7;\n    if (circle(uv, 0.06, planet7) ) col = vec3(1,0,0);\n    \n    vec2 c8 = vec2(0.0, 0.4);\n    vec2 planet8 = planet7 + c8*rotation8;\n    if (circle(uv, 0.06, planet8) ) col = vec3(0,1,0);\n    \n    vec2 c9 = vec2(0.0, 0.4);\n    vec2 planet9 = planet8 + c9*rotation9;\n    if (circle(uv, 0.06, planet9) ) col = vec3(0,0,1);\n    \n    vec2 c10 = vec2(0.0, 0.4);\n    vec2 planet10 = planet9 + c10*rotation10;\n    if (circle(uv, 0.06, planet10) ) col = vec3(0,1,1);\n\n\n\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}