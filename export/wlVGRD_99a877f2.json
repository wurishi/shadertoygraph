{"ver":"0.1","info":{"id":"wlVGRD","date":"1578442555","viewed":410,"name":"Bursting bubble","username":"michael0884","description":"2 wave fluid with different densities interacting ","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["waves","fluid","nonlinear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Oil and water\" by michael0884. https://shadertoy.com/view/wtVGzW\n// 2020-01-08 00:13:19\n\nvoid mainImage( out vec4 fragColor, in vec2 p )\n{\n    vec4 Q = pixel(ch0, p);\n    vec4 Qv = pixel(ch1, p);\n    \n    //fluid 1 amplitude\n    float fd1 = 1.*dot(Q.xy,Q.xy)/sq(a1);\n    //fluid 2 amplitude\n    float fd2 = 1.*dot(Q.zw,Q.zw)/sq(a2);\n\n    // Output to screen\n    fragColor.xyz = sin(vec3(1., 1., 0.2)*fd1) + 0.5*sin(vec3(0.3, 0.3, 1.)*fd2);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pixel(a, p) texture(a, p/vec2(textureSize(a,0)))\n#define texel(a, p) texelFetch(a, ivec2(p),0)\n#define s2d iResolution.xy\n#define ch0 iChannel0\n#define ch1 iChannel1\n#define ch2 iChannel2\n#define ch3 iChannel3\n\n#define dt 0.45\n\n\nconst float scale = .45;\n//fluid 1 density \nconst float a1 = 1.;\n//fluid 2 density\nconst float a2 = 0.74;\n\n//set to 0 if you want a gas-like behaviour\n//fluid 1 fluid-like/gas-like regulator \nconst float b1 = 0.9;\n//fluid 2 fluid-like/gas-like regulator \nconst float b2 = 0.0;\n\n//interaction energy cost\nconst float ie = 0.7;\n\n//initial conditions for amplitudes\nconst float amp = 1.4;\nconst vec4 fluid1_Q = amp*vec4(a1,0,0,0);\nconst vec4 fluid1_Qv = amp*vec4(0,a1,0,0); //minus for antifluid\nconst vec4 fluid2_Q = amp*vec4(0,0,a2,0);\nconst vec4 fluid2_Qv = amp*vec4(0,0,0,a2);\nconst float mouser = 25.;\nconst float initr =130.;\n\n\nfloat sq(float x){ return x*x; }\nfloat cb(float x){ return x*x*x; }\nfloat sq(vec2 x){ return dot(x,x); }\n\nconst float pressure = 0.001;\n\n//wave potential\nfloat P(vec4 Q, vec2 p)\n{\n    //fluid 1 amplitude\n    float fd1 = 5.*tanh(length(Q.xy)/5.);\n    //fluid 2 amplitude\n    float fd2 = 5.*tanh(length(Q.zw)/5.);\n    \n    //liquifier term 1\n    float liq1 = 1. - b1*exp(-4.*sq(fd1-a1));      \n    //liquifier term 2\n    float liq2 = 1. - b2*exp(-4.*sq(fd2-a2));     \n    float grav = 0.000*p.y;\n        \n    return scale*(1.*cb(fd1)*liq1 + cb(fd2)*liq2) + ie*sq(fd1)*sq(fd2) +  (sq(fd1)+sq(fd2))*grav;\n}\n\n//force\n#define d 0.001\nvec4 F(vec4 Q, vec2 p)\n{\n    vec3 dx = 0.5*vec3(-d,0.,d);\n    return vec4(P(Q + dx.zyyy, p) - P(Q + dx.xyyy, p),\n                P(Q + dx.yzyy, p) - P(Q + dx.yxyy, p),\n                P(Q + dx.yyzy, p) - P(Q + dx.yyxy, p),\n                P(Q + dx.yyyz, p) - P(Q + dx.yyyx, p))/d;\n}\n\n//Laplacian operator\nvec4 Laplace(sampler2D ch, vec2 p)\n{\n    vec3 dx = vec3(-1,0.,1);\n    return texel(ch, p+dx.xy)+texel(ch, p+dx.yx)+texel(ch, p+dx.zy)+texel(ch, p+dx.yz)-4.*texel(ch, p);\n}\n\nfloat ring(vec2 p, vec2 c, float r, float dd)\n{\n    return exp(-0.5*sq((length(p-c)-r)/dd));\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mouse(inout vec4 Q, inout vec4 Qv, vec2 p)\n{\n    if(iMouse.z > 0.)\n    {\n        float f1 = exp(-sq((p-iMouse.xy)/mouser));\n        Q += 0.3*fluid1_Q*f1;\n        Qv += 0.3*fluid1_Qv*f1;\n    }\n}\n\nvoid mainImage( out vec4 Q, in vec2 p )\n{\n    //get old value\n    Q = texel(ch0, p);\n    vec4 Qv = texel(ch1, p);\n    \n    Q += Qv*dt + 0.0005*Laplace(ch0, p);\n   \n    mouse(Q,Qv,p);\n    \n    if(iFrame < 1) \n    {\n     float f1 = ring(p,s2d*0.5,initr,4.);\n       float f2 = ring(p,s2d*0.5,0.5*initr,0.5*initr);\n        //Q = fluid1_Q*f1*(1.-f2) + fluid2_Q*f2*(1.-f1);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mouse(inout vec4 Q, inout vec4 Qv, vec2 p)\n{\n    if(iMouse.z > 0.)\n    {\n        float f1 = exp(-sq((p-iMouse.xy)/mouser));\n        Q += 0.3*fluid1_Q*f1;\n        Qv += 0.3*fluid1_Qv*f1;\n    }\n}\n\n\nvoid mainImage( out vec4 Qv, in vec2 p )\n{\n    //get old value\n    vec4 Q = texel(ch0, p);\n    Qv = texel(ch1, p);\n    \n   \tQv += dt*(Laplace(ch0, p) - F(Q, p));\n    \n    mouse(Q,Qv,p);\n    \n    if(iFrame < 1) \n    {\n         float f1 = ring(p,s2d*0.5,initr,2.);\n       float f2 = ring(p,s2d*0.5,0.5*initr,0.5*initr);\n      //  Qv = fluid1_Qv*f1*(1.-f2) + fluid2_Qv*f2*(1.-f1);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mouse(inout vec4 Q, inout vec4 Qv, vec2 p)\n{\n    if(iMouse.z > 0.)\n    {\n        float f1 = exp(-sq((p-iMouse.xy)/mouser));\n        Q += 0.3*fluid1_Q*f1;\n        Qv += 0.3*fluid1_Qv*f1;\n    }\n}\n\nvoid mainImage( out vec4 Q, in vec2 p )\n{\n    //get old value\n    Q = texel(ch0, p);\n    vec4 Qv = texel(ch1, p);\n    \n    Q += Qv*dt + 0.0005*Laplace(ch0, p);\n   \n    mouse(Q,Qv,p);\n    \n    if(iFrame < 1) \n    {\n         float f1 = ring(p,s2d*0.5,initr,2.);\n        float f2 =ring(p,s2d*0.5,50.*initr,50.*initr);\n        Q = fluid1_Q*f1 + fluid2_Q*f2*(1.-f1);\n    }\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mouse(inout vec4 Q, inout vec4 Qv, vec2 p)\n{\n    if(iMouse.z > 0.)\n    {\n        float f1 = exp(-sq((p-iMouse.xy)/mouser));\n        Q += 0.3*fluid1_Q*f1;\n        Qv += 0.3*fluid1_Qv*f1;\n    }\n}\n\n\nvoid mainImage( out vec4 Qv, in vec2 p )\n{\n    //get old value\n    vec4 Q = texel(ch0, p);\n    Qv = texel(ch1, p);\n    \n   \tQv += dt*(Laplace(ch0, p) - F(Q, p));\n    \n    mouse(Q,Qv,p);\n    \n    if(iFrame < 1) \n    {\n       float f1 = ring(p,s2d*0.5,initr,2.);\n        float f2 = ring(p,s2d*0.5,50.*initr,50.*initr);\n        Qv = fluid1_Qv*f1 + fluid2_Qv*f2*(1.-f1);\n    }\n}","name":"Buffer D","description":"","type":"buffer"}]}