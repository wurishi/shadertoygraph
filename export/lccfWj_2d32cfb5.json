{"ver":"0.1","info":{"id":"lccfWj","date":"1733493028","viewed":101,"name":"emblem of","username":"nayk","description":"combination of 3 shaders from glslsand box ","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["emblem"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define resolution iResolution.xy\nfloat happy_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 r = resolution,o = gl_FragCoord.xy - r / 2.00;\n\t   vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n       \n        float t2 = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + 0.07)) * 2.2;\n\tfloat si = sin(t2);\n\tfloat co = cos(t2);\n\tmat2 ma = mat2(co, si, -si, co);\n    uv*=ma;\n     o*=ma;\n    o = vec2(max(abs(o.x) * 0.8996 + o.y * 0.5, -o.y) * 2.0 / r.y - 0.25, atan(o.y,o.x));    \n    vec4 s = (sin(time) * .03 + 0.07) * sin(1.5 * vec4(sin(time)*4.1,32,33,14) + 42.0 * time / 90.0 + o.y + (time) * 1.75),\n   \n    e = s.yzwx, \n    f = max(o.x - s-0.1, e-o.x);\n    \n    vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n\tvec3 color = vec3(0.0, 0.3, 0.5);\n\t\n\tfloat f3 = 0.0;\n\tfloat PI = 3.141592;\n\tfor(float i = 0.0; i < 20.0; i++){\n\t\t\n\t\tfloat s = sin(time + i * PI / 10.0) * 0.8;\n\t\tfloat c = cos(time + i * PI / 10.0) * 0.8;\n \n\t\tf3 += 0.001 / (abs(p.x + c) * abs(p.y + s));\n\t}\n\t\n     vec2 r2 = resolution,\n    o2 = gl_FragCoord.xy - r2/2.;\n    o2 = vec2(length(o2) / r2.y - .3, atan(o2.y,o2.x));    \n    vec4 s2 = .1*cos(1.6*vec4(0,1,2,3) + time + o2.y + asin(sin(o2.x)) * cos(sin(time)*2.)),\n    e2 = s2.yzwx, \n    f2 = (o2.x-s2,e2-o2.x);\n    vec4 fc = dot(clamp(f2*r2.y,0.,1.), 40.*(s2-e2)) * (s2-.1) - f2;\n    \n    \n    \n   fragColor = dot(clamp(f*r.y,0.,1.), 82.*(s-e)) * (s-.1)*2.5+fc*f3 ;\n     uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1 \n    fragColor+= vec4(happy_star(uv, anim) * vec3(0.35,0.2,0.55)*0.5, 1.0);\n}","name":"Image","description":"","type":"image"}]}