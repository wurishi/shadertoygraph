{"ver":"0.1","info":{"id":"wsdyRf","date":"1601454163","viewed":216,"name":"Dungeon Crawl Hatching 2","username":"ozeg","description":"inspired by old DnD Maps\nvoronoi approach","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["hatching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PHI 1.618033988749895\n#define PHI_I 0.618033988749895\n#define PI 3.141592653589793\n#define TWO_PI 6.283185307179586\n#define CELL 12.\n\n\nvec2 noise(vec2 x)\n{\n    return fract(cos(dot(x,vec2(134.,1.61034)))*vec2(416418.0,1265.7486));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/CELL;\n    vec2 uv00 = vec2(0,0)+floor(uv);\n    vec2 uv01 = vec2(0,1)+floor(uv);\n    vec2 uv10 = vec2(1,0)+floor(uv);\n    vec2 uv11 = vec2(1,1)+floor(uv);\n\n    vec3 col = vec3(0);\n    vec2 n00 = noise(uv00);\n    vec2 n01 = noise(uv01);\n    vec2 n10 = noise(uv10);\n    vec2 n11 = noise(uv11);\n    uv00 = ceil(uv00) + n00-.5;\n    uv01 = ceil(uv01) + n01-.5;\n    uv10 = ceil(uv10) + n10-.5;\n    uv11 = ceil(uv11) + n11-.5;\n\n    vec2 uv0 = mix(uv00,uv01, float(distance(uv00,uv)>distance(uv01,uv)));\n    vec2 uv1 = mix(uv10,uv11, float(distance(uv10,uv)>distance(uv11,uv)));\n    vec2 uvC = mix(uv0,uv1,   float(distance(uv0,uv) >distance(uv1,uv)));\n    vec2 uvL = uv-uvC;\n    vec2 vn = noise(uvC)-.5;\n    float g = dot(uvL,normalize(vn));\n    // float s = dot(fragCoord.xy/CELL,vn);\n    float size = 1.+.5*sin(iTime);\n    float so = .4+1./(16.+size);\n    col = vec3(smoothstep(-so+.25,so+.25,sin((6.+size*12.)*g)));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}