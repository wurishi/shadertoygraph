{"ver":"0.1","info":{"id":"M323W3","date":"1708970719","viewed":66,"name":"graph of sine waves","username":"MeatMaker","description":"forked from graph of x^2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner","maths"],"hasliked":0,"parentid":"DtccRH","parentname":"Graph: f(x) = x^2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv.x -= 0.5;\n    //uv.x *= 2.0;\n    \n    //vec3 col  = vec3(abs(uv.x * uv.x - uv.y) < 0.01);\n    \n    const float lineWidth = 0.01;\n    vec3 col = vec3(smoothstep(2.0 / iResolution.y, 0.0, abs(.5+.1*sin(uv.x*16.0)-uv.y) - lineWidth))+\n               vec3(smoothstep(2.0 / iResolution.y, 0.0, abs(.7+.1*sin(uv.x*16.0)-uv.y) - lineWidth))+\n               vec3(smoothstep(2.0 / iResolution.y, 0.0, abs(.3+.1*sin(uv.x*16.0)-uv.y) - lineWidth))+\n               vec3(smoothstep(2.0 / iResolution.y, 0.0, abs(.9+.1*sin(uv.x*16.0)-uv.y) - lineWidth))+\n               vec3(smoothstep(2.0 / iResolution.y, 0.0, abs(.1+.1*sin(uv.x*16.0)-uv.y) - lineWidth));\n          \n    \n    //float f   = uv.x * uv.x - uv.y;\n    //vec4 col = vec4( 1. - abs(f) / fwidth(f) );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}