{"ver":"0.1","info":{"id":"4ffcDs","date":"1721746748","viewed":59,"name":"Climate","username":"Elsio","description":"pera, t√¥ invocando um shader aqui... ","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["fire","trident","terror","fogo","tripod","pentagrama"],"hasliked":0,"parentid":"clGcRh","parentname":"Encandeia 2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define t iTime\n\nvoid mainImage(out vec4 o, vec2 u) {    \n    vec2 r = iResolution.xy; \n         u = (u - r.xy / 2.) / r.y;\n            \n    o -= o;\n    vec3 D = normalize(vec3(u, 2)), f, q, \n         p = vec3(cos(t * .2), sin(t * .3) * .5, -7);\n    float x, i, j, d = 1., s;\n    \n    while(i++ < 120. && d > .004){\n        q = p;\n        \n        d = length(q * .8) - .1;\n        d *= .04;\n        q.zx *= rot(t);\n        \n        j = 1.;\n        while(j < 19.)\n            f = q * j * 2.,\n            f.y -= 4. * t, \n            d += abs(dot(sin(f), vec3(.8 - i/120.))) / j * -.04,\n            j += j;\n\n        s = d;\n        d = abs(d) - .02;\n        d = max(d, length(q + vec3(1,0,0)) - 3.);\n        //d = max(d, q.z - .5);\n        \n        s < .05\n            ? o += (vec4(8, 4, 1, 0) * .002)\n            : o += (vec4(3, 3, 3, 0) * .0015);\n        \n        p += d * D;\n    }\n    o = o * o * o;\n}","name":"Image","description":"","type":"image"}]}