{"ver":"0.1","info":{"id":"wljcDD","date":"1594443081","viewed":70,"name":"starzzzz","username":"notchris","description":"space","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["space"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// a messy, but common, random function\nfloat rand(in vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat noise(in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // corners of a tile at st\n    float a = rand(i);\n    float b = rand(i + vec2(1.0, 0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n    \n    // average the random value\n    float avg = (a + b + c + d) / 4.0;    \n    return smoothstep(0., 1., avg);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy;\n    vec3 spaceColor = vec3(0.0, 0.0, 0.0);\n    vec3 color = vec3(spaceColor);\n    \n    //first layer of stars\n    float speed = iResolution.x / 10.0;\n    vec2 direction = vec2(1.0, 0.0);\n    vec2 layer1Offset = st + direction * speed * iTime;\n    float strength = step(0.98, noise(layer1Offset));\n    vec3 starColor = vec3(1.0, 1.0, 0.9) * strength;\n    color += starColor;\n\n    //second layer of stars\n    speed = iResolution.x / 30.0;\n    float scale = 1.25;\n    vec2 layer2Offset = (vec2(st.x, st.y) + direction * speed * iTime)/scale;\n    strength = step(0.96,noise(layer2Offset));\n    starColor = vec3(1.0, 0.8, 0.9) * strength;\n    color += starColor;\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}