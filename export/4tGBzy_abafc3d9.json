{"ver":"0.1","info":{"id":"4tGBzy","date":"1618115266","viewed":312,"name":"Simple half-tone","username":"Zavie","description":"A quick half-tone example.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["halftone","postprocess"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nA very simple half-tone pattern.\n\n--\nZavie\n\n*/\n\n\n#define GRID_SIZE (iResolution.x/9.)\n#define PI acos(-1.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float angle = PI/6.;\n    float sine = sin(angle);\n    float cosine = cos(angle);\n    mat2 rotation = mat2(cosine, -sine, sine, cosine);\n    mat2 invRotation = mat2(cosine, sine, -sine, cosine);\n\n    vec2 grid = fract(rotation*GRID_SIZE * fragCoord/iResolution.x);\n    vec2 gridSize = GRID_SIZE * vec2(1., iResolution.y / iResolution.x);\n    vec2 uv = invRotation*floor(rotation*fragCoord/iResolution.xy * gridSize) / gridSize;\n\n    float inputColor = texture(iChannel0, uv).x;\n\n    float dist = length(grid-0.5);\n    float dd = fwidth(dist);\n    float dotPattern = 1.-dist;\n    float outputColor = clamp((inputColor - 4./PI*dotPattern*dotPattern+dd)/dd, 0., 1.);\n\n    fragColor = vec4(vec3(outputColor),1.0);\n}\n","name":"Image","description":"","type":"image"}]}