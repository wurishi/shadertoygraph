{"ver":"0.1","info":{"id":"4tBcDt","date":"1510498294","viewed":173,"name":"Glimmer","username":"pn","description":"layers upon layers, twisting and turning","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Try changing these:\nconst int layerCount = 6;\nconst float layerAlpha = 0.3;\nconst float spatialFrequency = 50.0;\nconst float fisheyeFactor = 4.0;\nconst float baseMagnification = 1.1;\nconst float speed = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 position = (fragCoord.xy - iResolution.xy / 2.0) / iResolution.y;\n    \n    float time = (iTime + 256.0) * 0.01 * speed;\n    \n    float totalIntensity = 0.0;\n    float angle = time;\n    mat2 rotation = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n    for (int i = 0; i < layerCount; ++i)\n    {\n        position *= rotation;\n        position *= pow((sin(time * 50.0)*0.01 + baseMagnification), - fisheyeFactor * length(position));\n        \n    \tvec2 fromGrid = fract(position * spatialFrequency) * 2.0 - 1.0;\n        float distanceFromGrid = length(fromGrid);\n    \tfloat circles = smoothstep(0.5, 0.6, distanceFromGrid);\n        totalIntensity += circles * layerAlpha;\n        \n        \n    }\n    fragColor = vec4(vec3(1.0 - totalIntensity), 1.0);\n}","name":"Image","description":"","type":"image"}]}