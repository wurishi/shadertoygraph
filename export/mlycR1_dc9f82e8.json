{"ver":"0.1","info":{"id":"mlycR1","date":"1700467241","viewed":19,"name":"cameratest111","username":"wangqiuyan","description":"test101","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test101"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.283185\n#define PI 3.141592\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\nstruct ray{\n    vec3 o,d;\n};\n\n\nray GetRay(vec2 uv, vec3 camPos, vec3 lookat, float zoom){\n    ray a;\n    a.o=camPos;\n    \n    vec3 f=normalize(lookat-camPos);\n    vec3 r=cross(vec3(0,1,0),f);\n    vec3 u=cross(f,r);\n    \n    vec3 c=a.o+f*zoom;\n    vec3 i=c+uv.x*r+uv.y*u;\n    \n    a.d=normalize(i-a.o);\n    \n    return a;\n}\n\nfloat DistLine(vec3 ro,vec3 rd,vec3 p){  \n    return length(cross(p-ro,rd))/length(rd);\n}\n\nfloat DrawPoint(vec3 ro,vec3 rd,vec3 p){\n    float d=DistLine(ro,rd,p);\n    d=smoothstep(.1,.09,d);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    uv -= .5;\n    \n    uv.x *=iResolution.x/iResolution.y;\n    \n    vec3 camPos=vec3(0.5);\n    float t=iTime*2.;\n   \n    camPos+=vec3(3.*sin(t),2.,3.*cos(t));\n    /* cameraPos change by mouse\n    vec2 m = iMouse.xy/iResolution.xy;\n    camPos=vec3(0,3,-3);  \n    camPos.yz = vec2(3,-3)*Rot(-m.y*TAU-1.);\n    camPos.xz = vec2(0,3)*Rot(-m.x*TAU);\n    camPos+=0.5;\n    */\n    \n    vec3 lookat=vec3(0.5);\n    \n    ray r=GetRay(uv,camPos,lookat, 1.);\n    \n  // vec3 p=vec3(0,0,2.5);\n  // p.x=sin(iTime);\n  // p.z=2.5+cos(iTime);\n   \n    float d=0.;\n    \n    d+=DrawPoint(r.o,r.d,vec3(0,0,0));\n    d+=DrawPoint(r.o,r.d,vec3(0,0,1));\n    d+=DrawPoint(r.o,r.d,vec3(0,1,0));\n    d+=DrawPoint(r.o,r.d,vec3(0,1,1));\n    d+=DrawPoint(r.o,r.d,vec3(1,0,0));\n    d+=DrawPoint(r.o,r.d,vec3(1,0,1));\n    d+=DrawPoint(r.o,r.d,vec3(1,1,0));\n    d+=DrawPoint(r.o,r.d,vec3(1,1,1));\n   \n    // Time varying pixel color\n    vec3 col = vec3(d);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}