{"ver":"0.1","info":{"id":"lfyXRd","date":"1715635611","viewed":86,"name":"Infinite Truchets","username":"GarlicGraphix","description":"Getting the zoom to be relatively seamless was awful, I pretty much guessed what values to put into the equation to get a constant zoom. Anyone know a better way to do this?","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["zoom","truchet","infinite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod(-iTime, 2.0);\n    \n    float sizeFactor = 0.875/8.0 + pow(0.875/8.0+time*3.275/8.0, 2.0);\n    \n    vec2 umTileDimensions = vec2(2.0, 1.125);\n    vec2 mTileDimensions = umTileDimensions*8.0;\n    vec2 tileDimensions = mTileDimensions*8.0;\n    vec2 tinyDimensions = tileDimensions*8.0;\n    \n    vec2 tileMetaRatio = tileDimensions/mTileDimensions;\n    vec2 uMetaRatio = mTileDimensions/umTileDimensions;\n\n    vec2 absUV = fragCoord/iResolution.xy;\n    vec2 uv = fragCoord*sizeFactor/iResolution.xy;\n    vec2 tinyTile = floor(uv*tinyDimensions);\n    vec2 tile = floor(uv*tileDimensions);\n    vec2 metaTile = floor(uv*mTileDimensions);\n    vec2 uMetaTile = floor(uv*umTileDimensions);\n    \n    vec2 tinyUV = vec2(mod(uv.x*tinyDimensions.x, 1.0), mod(uv.y*tinyDimensions.y, 1.0));\n    vec2 localUV = vec2(mod(uv.x*tileDimensions.x, 1.0), mod(uv.y*tileDimensions.y, 1.0));\n    vec2 localTile = vec2(mod(uv.x*mTileDimensions.x, 1.0), mod(uv.y*mTileDimensions.y, 1.0));\n    vec2 localMetaTile = vec2(mod(uv.x*umTileDimensions.x, 1.0), mod(uv.y*umTileDimensions.y, 1.0));  \n    \n    vec3 col = vec3(1.0);\n    vec3 lineCol = 0.5 + 0.5*cos(iTime+absUV.xyx+vec3(0,2,4));\n    \n    if (random(uMetaTile) <= 0.5) {\n        localMetaTile.x = 1.0-localMetaTile.x;\n    }\n    if (random(metaTile) <= 0.5) {\n        localTile.x = 1.0-localTile.x;\n    }\n    if (random(tile) <= 0.5) {\n        localUV.x = 1.0-localUV.x;\n    }\n    if (random(tinyTile) <= 0.5) {\n        tinyUV.x = 1.0-tinyUV.x;\n    }\n    if (abs(localMetaTile.x - localMetaTile.y) <= 0.25 || abs(localMetaTile.x - localMetaTile.y) >= 0.75 \n        && (metaTile.x > 2.0 || metaTile.y > 2.0)) {\n        lineCol *= 0.75+0.25*(1.0-smoothstep(0.0, 2.0, time));\n    } else if (abs(localTile.x - localTile.y) <= 0.25 || abs(localTile.x - localTile.y) >= 0.75 \n        && (tile.x > 2.0 || tile.y > 2.0)) {\n        lineCol *= 0.5+0.25*(1.0-smoothstep(0.0, 2.0, time));\n    } else if ((abs(localUV.x - localUV.y) <= 0.25 || (abs(localUV.x - localUV.y) >= 0.75) \n        && (uv.x >= 0.002 || uv.y >= 0.004))) {\n        lineCol *= 0.25+0.25*(1.0-smoothstep(0.0, 2.0, time));\n    } else if ((abs(tinyUV.x - tinyUV.y) <= 0.25 || (abs(tinyUV.x - tinyUV.y) >= 0.75) \n        && (uv.x >= 0.0002 || uv.y >= 0.0004))) {\n        lineCol *= 0.25*(1.0-smoothstep(0.0, 2.0, time));;\n    } else {\n        lineCol *= 0.0;\n    }\n    col = lineCol;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}