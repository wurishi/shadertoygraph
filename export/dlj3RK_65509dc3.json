{"ver":"0.1","info":{"id":"dlj3RK","date":"1673572199","viewed":110,"name":"M1 branching bug?","username":"Vectornaut","description":"This shader should always show a light circle on a dark background. On an Apple M1 GPU, however, Firefox 109.0.5414.87 and Chrome 109.0.5414.87 show a light circle on a light background. The loop, the conditional, and the sine call all seem important.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["testing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// get unexpected behavior if both STEPS and MAGIC are defined from this block\n#define STEPS 30\n// #define COLOR_B 0.2\n#define COLOR_B 0.35\n// #define COLOR_B 0.8\n\n// get ordinary behavior if either STEPS or MAGIC is defined from this block\n// #define STEPS 29\n// #define COLOR_B 0.36\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float small_dim = min(iResolution.x, iResolution.y);\n    vec2 screen_pt = (2.*fragCoord - iResolution.xy)/small_dim;\n    vec3 dir = normalize(vec3(screen_pt, -3.5));\n    \n    float r = 0.;\n    vec3 color = vec3(0.);\n    for (int cnt = 0; cnt < STEPS; cnt++) {\n        // find ray position\n        vec3 p = vec3(0., 0., 9.) + r*dir;\n        \n        // find scene distance\n        float dist = length(p) - 1.;\n        \n        // march\n        if (dist < 0.001) {\n            // get unexpected behavior using this line\n            color = vec3(1., 0.7 + 0.2*sin(r), 0.);\n            \n            // get expected behavior using any of these lines instead\n            // color = vec3(1., exp(-0.1*r), 0.);\n            // color = vec3(1., 0.5, 0.);\n            break;\n        } else if (r > 11.) {\n            color = vec3(0.36, 0.1, COLOR_B);\n            break;\n        } else {\n            r += 9.;\n        }\n    }\n    \n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}