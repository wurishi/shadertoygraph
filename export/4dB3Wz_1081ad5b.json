{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// For performance, because I didn't need the extra precision\nprecision lowp float;\n\nstruct Ray\n{\n\tvec3 origin;\n\tvec3 direction; // assumed to be a unit vector\n};\n\t\nconst float MARCHES = 300.0;\n\n// max terrain height\nconst float MAX_H = 0.5; // i'm lopping a little off the top for efficiency's sake\n\n// camera\nconst float CAMERA_HEIGHT = MAX_H;\nconst float CAMERA_PITCH_DEG = 5.0;\n\n// sky color\nconst vec4 SKY = vec4(0.5,0.5,1.0,0.0);\n\n// terrain texture scale\nconst float SCALE = 10.0;\n\n\n// calcuations\nconst vec4 RED = vec4(1.0, 0.0, 0.0, 1.0);\nconst float INF = 1000000.0; // arbitrarily large number\nfloat CAMERA_PITCH_COS_RAD = 0.9961946980917455;\nfloat CAMERA_PITCH_SIN_RAD = 0.08715574274765817;\nfloat NEG_CAMERA_PITCH_SIN_RAD = -0.08715574274765817;\nconst float INV_SCALE = 1.0 / SCALE;\nconst float FD = 2.1583468527305348600363230610125;\n\n// codez...\n\nbool TerrainMiss(Ray ray)\n{\n\treturn \n\t\t(ray.origin.z >= MAX_H && ray.direction.z >= 0.0) ||\n\t\t(ray.origin.z <= 0.0 && ray.direction.z <= 0.0);\n}\n\nRay CastRay(Ray ray, float dist)\n{\n\treturn Ray(ray.origin + ray.direction * dist, ray.direction);\n}\n\nfloat TerrainHeight(sampler2D sampler, vec3 pos)\n{\n\treturn length(texture(sampler, INV_SCALE * pos.xy))/3.0 * MAX_H;\n}\n\nvec4 TerrainColor(sampler2D sampler, vec3 pos)\n{\n\treturn texture(sampler, INV_SCALE * pos.xy);\n}\n\nfloat MixedTerrainHeight(vec3 pos)\n{\n\treturn mix(TerrainHeight(iChannel0, pos), TerrainHeight(iChannel1, pos), 0.5 + 0.5 * sin(iTime));\n}\n\nvec4 MixedTerrainColor(vec3 pos)\n{\n\treturn mix(TerrainColor(iChannel0, pos), TerrainColor(iChannel1, pos), 0.5 + 0.5 * sin(iTime));\t\n}\n\nvec4 RayMarch(Ray initialRay)\n{\n\tif (TerrainMiss(initialRay))\n\t{\n\t\treturn SKY;\n\t}\n\t\n\t// raycast directly to MAX_H if above MAX_H and casting downwards\n\tif (initialRay.origin.z > MAX_H && initialRay.direction.z < 0.0)\n\t{\n\t\tinitialRay = CastRay(initialRay, (initialRay.origin.z - MAX_H) / abs(initialRay.direction.z));\n\t}\n\t\n\tfloat delt = MAX_H / MARCHES / abs(initialRay.direction.z);\n\t\n\tfor(float t = 0.0; t <= MARCHES;  t++)\n\t{\t\t\t\t\n\t\tfloat dist = delt * t;\n\t\tRay ray = CastRay(initialRay, dist);\n\t\t\n\t\t// We marched our way right out of the terrain bounds...\n\t\tif (TerrainMiss(ray))\n\t\t{\n\t\t\treturn SKY;\n\t\t}\n\t\t\n        float depthBelowTerrain = MixedTerrainHeight(ray.origin) - ray.origin.z;\n        \n\t\tif (depthBelowTerrain >= 0.1)\n\t\t{\n            // ray backtracking\n            ray = CastRay(initialRay, dist - (depthBelowTerrain / ray.direction.z));\n            \n\t\t\treturn MixedTerrainColor(ray.origin);\n\t\t}\n\t}\n\t\n\treturn RED;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// change pixel coordinate into world coordinates\n\tvec3 uv = vec3(fragCoord.xy / iResolution.xx, FD) - vec3(0.5, 0.5 * iResolution.y / iResolution.x, 0.0);\n\t\n\t// swizzle into standard coordinate system, so that z is up\n\tuv = uv.xzy;\n\t\n\tvec3 dir = normalize(mat3(1.0, 0.0, 0.0, 0.0, CAMERA_PITCH_COS_RAD, NEG_CAMERA_PITCH_SIN_RAD, 0.0, CAMERA_PITCH_SIN_RAD, CAMERA_PITCH_COS_RAD) * uv);\n\t\n\t// animate the camera\n\tvec3 pos = uv + vec3(1.0, 1.0 * iTime, CAMERA_HEIGHT);\n\t\n\t// raymarch the terrain\n\tfragColor = RayMarch(Ray(pos,dir));\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dB3Wz","date":"1385707230","viewed":228,"name":"Morphing Terrain","username":"kp1197","description":"Demonstrates morphing terrain with my optimized terrain raymarcher","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["terrain","raymarch","optimized","morph"],"hasliked":0,"parentid":"","parentname":""}}