{"ver":"0.1","info":{"id":"4sfBzN","date":"1494972349","viewed":298,"name":"Liquid Techno","username":"DonKarlssonSan","description":"Music: https://soundcloud.com/drumcode/sam-paganini-rave-drumcode\nGreen is controlled by lows\nBlue is controlled by highs\nUsing the noise(uv + noise(uv + noise(uv))) trick inspired by https://iquilezles.org/articles/warp/warp.htm","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["noise","liquid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfSRN","filepath":"https://soundcloud.com/drumcode/sam-paganini-rave-drumcode","previewfilepath":"https://soundcloud.com/drumcode/sam-paganini-rave-drumcode","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Simplex 2D noise\n// from https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n    const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n                        -0.577350269189626, 0.024390243902439);\n    vec2 i  = floor(v + dot(v, C.yy) );\n    vec2 x0 = v -   i + dot(i, C.xx);\n    vec2 i1;\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n    vec4 x12 = x0.xyxy + C.xxzz;\n    x12.xy -= i1;\n    i = mod(i, 289.0);\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n                     + i.x + vec3(0.0, i1.x, 1.0 ));\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n                            dot(x12.zw,x12.zw)), 0.0);\n    m = m*m ;\n    m = m*m ;\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n    vec3 h = abs(x) - 0.5;\n    vec3 ox = floor(x + 0.5);\n    vec3 a0 = x - ox;\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n    vec3 g;\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n    return 130.0 * dot(m, g);\n}\n\n////// My code below\n\n\nfloat getAverage(float start, float end) {\n    float sum = 0.0;\n    int count = 0;\n    for(float i = start; i < end; i += 1.0/512.0) {\n        sum += texture(iChannel0, vec2(i, 0.25)).x;\n        count++;\n    }\n    float average = sum/float(count);\n    return average;\n}\n\nvec2 liquid(vec2 uv) {\n    float bass = getAverage(0.001, 0.04);\n    float highs = getAverage(0.8, 1.0);  \n    float t = iTime;\n    float s1 = snoise(uv + t / 2.0 + snoise(uv + snoise(uv + (t + highs) / 4.0) / 10.0));\n    float s2 = snoise(uv + s1 + bass);\n    return vec2(s1, s2);\n}\n\nbool wave(vec2 uv) {\n    float lineWidth = 0.04;\n    float data = texture(iChannel0, vec2(uv.x, 0.75)).x;\n    return uv.y > data-lineWidth && uv.y < data+lineWidth;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 liq = liquid(uv);\n    float w = float(wave(uv)) / 2.0;\n\tfragColor = vec4(w, liq, 1.0);\n}","name":"Image","description":"","type":"image"}]}