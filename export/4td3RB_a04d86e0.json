{"ver":"0.1","info":{"id":"4td3RB","date":"1470007425","viewed":130,"name":"Simplest Lit Raymarcher","username":"Incin","description":"Lol, I'm bored. (Also the lighting is 100% faked)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarcher","lit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int STEPS = 256;\n//const vec3 LIGHT_POS = vec3(2,4,7);\n\nbool sphere(vec3 p) {\n    return length(vec3(0,0,6) - p) < 2.;\n}\n\nbool lit(vec3 p) {\n    return length(vec3(sin(iTime)*2.,4,7) - p) < 0.5;\n}\n\nvec3 spherec() {\n    return vec3(0.2,0.5,0.6);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    vec3 cp = vec3(uv.x + (-iMouse.x/iResolution.x), (uv.y/aspect) + ((-iMouse.y/iResolution.y) * 0.8) + 0.1, 1);\n    vec3 LIGHT_POS = vec3(sin(iTime)*2.,4,7);\n    vec3 dir = vec3(cp.xyz)*0.05;\n    \n    vec3 I = vec3(0.);\n    int c = 0;\n    for (int i=0; i < STEPS; ++i) {\n        c++;\n\t\tcp += dir;\n        if (sphere(cp)) {\n            I += ((5. / distance(cp, LIGHT_POS)) * spherec());\n            break;\n        }\n        if (lit(cp)) {\n         \tI = vec3(1.);\n            break;\n        }\n    }\n    \n\tfragColor = vec4(I.xyz, 1.);\n}","name":"Image","description":"","type":"image"}]}