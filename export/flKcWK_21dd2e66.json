{"ver":"0.1","info":{"id":"flKcWK","date":"1685930615","viewed":78,"name":"Menger Sphere","username":"swindesr","description":"raymarched menger sponge ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float inf = 3.402823466e+38;\nvec3 pink = vec3(1.0, 0.78, 0.86);\nvec3 blue = vec3(0.74, 0.88, 0.99);\n\nmat2 rot( in float a )\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat sdSphere( in vec3 p, in float r )\n{\n    return length(p) - r;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdCross( in vec3 p )\n{\n    float da = sdBox(p.xyz, vec3(inf, 1.0, 1.0));\n    float db = sdBox(p.yzx, vec3(1.0, inf, 1.0));\n    float dc = sdBox(p.zxy, vec3(1.0, 1.0, inf));\n    return min(da, min(db, dc));\n}\n\nfloat map( in vec3 p )\n{\n    p.xz *= rot(iTime*.5);\n    p.yz *= rot(iTime*.2);\n    float d = sdBox(p, vec3(5.0));\n    d = max(d, -sdSphere(p, 7.0));\n    d = min(d, sdSphere(p, 2.0 + abs(sin(iTime * .5)) * 4.0));\n\n    \n    float s = 1.0;\n    for (float i = 0.0; i < 3.0; i++)\n    {\n    \n        p += vec3(i + 5.0);\n        //p.xz *= rot(iTime*0.2);\n         \n        vec3 a = mod(p*s, 2.0) - 1.0;\n        s *= 3.0;\n        vec3 r = abs(1.0 - 3.0 * abs(a));\n        \n       \n        float da = max(r.x,r.y);\n        float db = max(r.y,r.z);\n        float dc = max(r.z,r.x);\n        float c = (min(da,min(db,dc))-1.0)/s;\n        \n        d = max(d, c);\n    }\n    \n    return d;\n}\n\nvec4 trace( in vec3 ro, in vec3 rd ) \n{\n    float td = 0.0;\n    for (int i = 0; i < 100; i++)\n    {\n        vec3 p = ro + rd * td;\n        float d = map(p);\n        if (d < 0.0001) return vec4(p, i);\n        if (d > 100.0) return vec4(0.0, 0.0, 0.0, 0.0);\n        td += d;\n    }\n    \n    return vec4(0.0, 0.0, 0.0, 0.0);\n}\n\nvec3 calcNormal( in vec3 p )\n{\n    vec2 e = vec2(0.01, 0.0);\n    return normalize(vec3(map(p + e.xyy) - map(p - e.xyy),\n                          map(p + e.yxy) - map(p - e.yxy),\n                          map(p + e.yyx) - map(p - e.yyx)));\n}\n\nvec3 paint( in vec3 p, float ao )\n{\n    return ao / 100.0 * blue;\n    \n    vec3 col = vec3(1.0, 0.7, 0.5);\n    vec3 nor = calcNormal(p);\n       \n    vec3 lig = vec3(10.0, 10.0, 10.0);\n    vec3 ld = normalize(lig - p);\n    float dif = clamp(dot(nor, ld), 0.0, 1.0);\n        \n   // return nor;\n    return col * dif; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    vec4 hit = trace(vec3(0.0, 0.0, 10.0), normalize(vec3(uv, -1.0)));\n   \n    vec3 col = hit.w > 0.0 ? paint(hit.xyz, hit.w) : vec3(0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}