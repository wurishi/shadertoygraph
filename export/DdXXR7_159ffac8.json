{"ver":"0.1","info":{"id":"DdXXR7","date":"1668614797","viewed":211,"name":"8 bit from natron plugins","username":"axiomgraph","description":"gamerboy nes natron","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["nes","8bit","natron","gamerboy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_lowfi Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_lowfi Matchbox for Autodesk Flame\n\n\n// iChannel0: Source, filter=nearest, wrap=clamp\n// iChannel1: Mask, filter=nearest, wrap=clamp\n// BBox: iChannel0\n\n// https://www.shadertoy.com/view/MdfXDH#\n\nfloat brightness = 1.0 ; // Brightness : (brightness), min =0.0, max=10.0\n\nint graphicMode = 1; // Graphic mode : (graphic mode), min=0, max=2\n\n\n\n\nvec3 find_closest_nes (vec3 ref) {\t\n\tvec3 old_nes = vec3 (100.0 *255.0);\t\t\n\t#define TRY_COLOR(new) old_nes = mix (new, old_nes, step (length (old_nes-ref), length (new-ref)));\t\n\tTRY_COLOR (vec3 (0.0, 88.0, 0.0));\n\tTRY_COLOR (vec3 (80.0, 48.0, 0.0));\n\tTRY_COLOR (vec3 (0.0, 104.0, 0.0));\n\tTRY_COLOR (vec3 (0.0, 64.0, 88.0));\n\tTRY_COLOR (vec3 (0.0, 120.0, 0.0));\n\tTRY_COLOR (vec3 (136.0, 020.0, 0.0));\n\tTRY_COLOR (vec3 (0.0, 168.0, 0.0));\n\tTRY_COLOR (vec3 (168.0, 16.0, 0.0));\n\tTRY_COLOR (vec3 (168.0, 0.0, 32.0));\n\tTRY_COLOR (vec3 (0.0, 168.0, 68.0));\n\tTRY_COLOR (vec3 (0.0, 184.0, 0.0));\n\tTRY_COLOR (vec3 (0.0, 0.0, 188.0));\n\tTRY_COLOR (vec3 (0.0, 136.0, 136.0));\n\tTRY_COLOR (vec3 (148.0, 0.0, 132.0));\n\tTRY_COLOR (vec3 (68.0, 40.0, 188.0));\n\tTRY_COLOR (vec3 (120.0, 120.0, 120.0));\n\tTRY_COLOR (vec3 (172.0, 124.0, 0.0));\n\tTRY_COLOR (vec3 (124.0, 124.0, 124.0));\n\tTRY_COLOR (vec3 (228.0, 0.0, 88.0));\n\tTRY_COLOR (vec3 (228.0, 92.0, 16.0));\n\tTRY_COLOR (vec3 (88.0, 216.0, 84.0));\n\tTRY_COLOR (vec3 (0.0, 0.0, 252.0));\n\tTRY_COLOR (vec3 (248.0, 56.0, 0.0));\n\tTRY_COLOR (vec3 (0.0, 88.0, 248.0));\n\tTRY_COLOR (vec3 (0.0, 120.0, 248.0));\n\tTRY_COLOR (vec3 (104.0, 68.0, 252.0));\n\tTRY_COLOR (vec3 (248.0, 120.0, 88.0));\n\tTRY_COLOR (vec3 (216.0, 0.0, 204.0));\n\tTRY_COLOR (vec3 (88.0, 248.0, 152.0));\n\tTRY_COLOR (vec3 (248.0, 88.0, 152.0));\n\tTRY_COLOR (vec3 (104.0, 136.0, 252.0));\n\tTRY_COLOR (vec3 (252.0, 160.0, 68.0));\n\tTRY_COLOR (vec3 (248.0, 184.0, 0.0));\n\tTRY_COLOR (vec3 (184.0, 248.0, 24.0));\n\tTRY_COLOR (vec3 (152.0, 120.0, 248.0));\n\tTRY_COLOR (vec3 (0.0, 232.0, 216.0));\n\tTRY_COLOR (vec3 (60.0, 188.0, 252.0));\n\tTRY_COLOR (vec3 (188.0, 188.0, 188.0));\n\tTRY_COLOR (vec3 (216.0, 248.0, 120.0));\n\tTRY_COLOR (vec3 (248.0, 216.0, 120.0));\n\tTRY_COLOR (vec3 (248.0, 164.0, 192.0));\n\tTRY_COLOR (vec3 (0.0, 252.0, 252.0));\n\tTRY_COLOR (vec3 (184.0, 184.0, 248.0));\n\tTRY_COLOR (vec3 (184.0, 248.0, 184.0));\n\tTRY_COLOR (vec3 (240.0, 208.0, 176.0));\n\tTRY_COLOR (vec3 (248.0, 120.0, 248.0));\n\tTRY_COLOR (vec3 (252.0, 224.0, 168.0));\n\tTRY_COLOR (vec3 (184.0, 248.0, 216.0));\n\tTRY_COLOR (vec3 (216.0, 184.0, 248.0));\n\tTRY_COLOR (vec3 (164.0, 228.0, 252.0));\n\tTRY_COLOR (vec3 (248.0, 184.0, 248.0));\n\tTRY_COLOR (vec3 (248.0, 216.0, 248.0));\n\tTRY_COLOR (vec3 (248.0, 248.0, 248.0));\n\tTRY_COLOR (vec3 (252.0, 252.0, 252.0));\t\n\n\treturn old_nes ;\n}\n\nvec3 find_closest_gb (vec3 ref_gb) {\t\n\tvec3 old_gb = vec3 (100.0 *255.0);\t\t\n\t#define TRY_COLOR_gb(new) old_gb = mix (new, old_gb, step (length (old_gb-ref_gb), length (new-ref_gb)));\t\n\tTRY_COLOR_gb (vec3 (156.0, 189.0, 15.0));\n\tTRY_COLOR_gb (vec3 (140.0, 173.0, 15.0));\n\tTRY_COLOR_gb (vec3 (48.0, 98.0, 48.0));\n\tTRY_COLOR_gb (vec3 (15.0, 56.0, 15.0));\n\t\n\treturn old_gb ;\n}\n\nvec3 find_closest_ega (vec3 ref_ega) {\t\n\tvec3 old_ega = vec3 (100.0 *255.0);\t\t\n\t#define TRY_COLOR_ega(new) old_ega = mix (new, old_ega, step (length (old_ega-ref_ega), length (new-ref_ega)));\t\n    TRY_COLOR_ega (vec3 (0.0, 0.0, 0.0)); \n    TRY_COLOR_ega (vec3 (255.0,255.0,255.0)); \n    TRY_COLOR_ega (vec3 (255.0,  0.0,  0.0)); \n    TRY_COLOR_ega (vec3 (  0.0,255.0,  0.0)); \n    TRY_COLOR_ega (vec3 (  0.0,  0.0,255.0)); \n    TRY_COLOR_ega (vec3 (255.0,255.0,  0.0)); \n    TRY_COLOR_ega (vec3 (  0.0,255.0,255.0)); \n    TRY_COLOR_ega (vec3 (255.0,  0.0,255.0)); \n    TRY_COLOR_ega (vec3 (128.0,  0.0,  0.0)); \n    TRY_COLOR_ega (vec3 (  0.0,128.0,  0.0)); \n    TRY_COLOR_ega (vec3 (  0.0,  0.0,128.0)); \n    TRY_COLOR_ega (vec3 (128.0,128.0,  0.0)); \n    TRY_COLOR_ega (vec3 (  0.0,128.0,128.0)); \n    TRY_COLOR_ega (vec3 (128.0,  0.0,128.0)); \n    TRY_COLOR_ega (vec3 (128.0,128.0,128.0)); \n    TRY_COLOR_ega (vec3 (255.0,128.0,128.0)); \n\n\treturn old_ega ;\n}\n\n\nfloat dither_matrix (float x, float y) {\n\treturn mix(mix(mix(mix(mix(mix(0.0,32.0,step(1.0,y)),mix(8.0,40.0,step(3.0,y)),step(2.0,y)),mix(mix(2.0,34.0,step(5.0,y)),mix(10.0,42.0,step(7.0,y)),step(6.0,y)),step(4.0,y)),mix(mix(mix(48.0,16.0,step(1.0,y)),mix(56.0,24.0,step(3.0,y)),step(2.0,y)),mix(mix(50.0,18.0,step(5.0,y)),mix(58.0,26.0,step(7.0,y)),step(6.0,y)),step(4.0,y)),step(1.0,x)),mix(mix(mix(mix(12.0,44.0,step(1.0,y)),mix(4.0,36.0,step(3.0,y)),step(2.0,y)),mix(mix(14.0,46.0,step(5.0,y)),mix(6.0,38.0,step(7.0,y)),step(6.0,y)),step(4.0,y)),mix(mix(mix(60.0,28.0,step(1.0,y)),mix(52.0,20.0,step(3.0,y)),step(2.0,y)),mix(mix(62.0,30.0,step(5.0,y)),mix(54.0,22.0,step(7.0,y)),step(6.0,y)),step(4.0,y)),step(3.0,x)),step(2.0,x)),mix(mix(mix(mix(mix(3.0,35.0,step(1.0,y)),mix(11.0,43.0,step(3.0,y)),step(2.0,y)),mix(mix(1.0,33.0,step(5.0,y)),mix(9.0,41.0,step(7.0,y)),step(6.0,y)),step(4.0,y)),mix(mix(mix(51.0,19.0,step(1.0,y)),mix(59.0,27.0,step(3.0,y)),step(2.0,y)),mix(mix(49.0,17.0,step(5.0,y)),mix(57.0,25.0,step(7.0,y)),step(6.0,y)),step(4.0,y)),step(5.0,x)),mix(mix(mix(mix(15.0,47.0,step(1.0,y)),mix(7.0,39.0,step(3.0,y)),step(2.0,y)),mix(mix(13.0,45.0,step(5.0,y)),mix(5.0,37.0,step(7.0,y)),step(6.0,y)),step(4.0,y)),mix(mix(mix(63.0,31.0,step(1.0,y)),mix(55.0,23.0,step(3.0,y)),step(2.0,y)),mix(mix(61.0,29.0,step(5.0,y)),mix(53.0,21.0,step(7.0,y)),step(6.0,y)),step(4.0,y)),step(7.0,x)),step(6.0,x)),step(4.0,x));\n}\n\nvec3 dither (vec3 color, vec2 uv) {\t\n\n\t\n\tif ( graphicMode==1 )\n\t{\n\t\tcolor *= 255.0 * 0.8* brightness;\t\n\t\tcolor += dither_matrix (mod (uv.x, 8.0), mod (uv.y, 8.0 )) ;\n\t\tcolor = find_closest_nes (clamp (color, 0.0, 255.0));\n\t\treturn color / 255.0;\n}\n\n\tif ( graphicMode==2 )\n\t{\n\t\tcolor *= 255.0 * 0.55* brightness;\n\t\tcolor += dither_matrix (mod (uv.x, 8.0), mod (uv.y, 8.0 )) ;\n\t\tcolor = find_closest_gb (clamp (color, 0.0, 255.0));\n\t\treturn color / 255.0;\n\t}\n\n\tif ( graphicMode==3 )\n\t{\n\t\tcolor *= 255.0 * 0.9* brightness;\n\t\tcolor += dither_matrix (mod (uv.x, 8.0), mod (uv.y, 8.0 )) ;\n\t\tcolor = find_closest_ega (clamp (color, 0.0, 255.0));\n\t\treturn color / 255.0;\n\t}\n\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 tc = texture(iChannel0, uv);\n\t\n\tvec4 result = texture(iChannel0, uv);\n\n\t\n\tif (graphicMode == 0){\n    \n    fragColor = texture(iChannel0,uv);\n    }\n    else\n\t{\n\t\tfragColor = vec4 (dither (tc.rgb, fragCoord.xy),tc.a);\n\t}\n}","name":"Image","description":"","type":"image"}]}