{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"//philip.bertani@gmail.com\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy,\n        uv = u/R;\n\n    O *= 0.;\n\n    float[] gk1s = float[](\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.023792, 0.094907, 0.150342, 0.094907, 0.023792,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765\n    );\n\n    //golfed by fabriceneyret2\n    for (int k; k < 25; k++)      \n        O += gk1s[k] * texture(iChannel0, uv + ( vec2(k%5,k/5) - 2. ) / R );\n\n}\n\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[],"code":"#define P  8.\n#define rot(a)  mat2(cos(a+vec4(0,11,33,0)))\nfloat sc;\nvec4 oo;\n\n#define T   10. + 10.3/100.\n#define T2  0.  //*13./100. \n#define T3  8./100.\n#define T4  mod(iTime,30.)/200.\n\nfloat juliabulb(vec4 z) {\n\n  //this ugly \n  z.xw *= rot(1.+T/5.+T2/5.+T3/5.+T4/5.); \n  z.xz *= rot(T*3.+T2*3.+T3*3.+T4*3.);\n  z.xy *= rot(T/3.+T2/3.+T3/3.+T4/3.);\n  \n  vec4 julia = z  + vec4(.2,0,0,.1);\n  float r, theta, phi=0. , phi2=0., dr=1., dotp, t1=0.;\n  for(float i = 0.; i < 5.; ++i) {\n    r = length(z);\n    if(r > 2.) break;\n    theta = acos(z.w/r);\n    phi = atan(z.y, z.x); \n    phi2 = atan(z.z, z.x);\n    dr = pow(r, P - 1.0) * dr * P + 1.0;\n    r = pow(r, P);\n    theta = theta * P; phi = phi * P; phi2 = phi2 * P;\n   \n    z = r*vec4(cos(theta),sin(theta)*cos(phi),\n        sin(theta)*sin(phi)*cos(phi2),sin(theta)*sin(phi)*sin(phi2)) \n        + julia;\n      \n    float nn = .63;\n    z = abs(z)*nn ;\n    dr *= nn;\n\n  }\n  \n  sc = dr;\n  oo =  log(z*z);\n  \n  return  .5 * log(r) * r / dr ;\n}\n\nvoid mainImage( out vec4 O, vec2 U) {       \n    O *= 0.;\n    vec2 R = iResolution.xy;\n    vec4 D = normalize( vec4( U+U-R, .7*R.y, 1.5*R.y) ),\n         p = vec4(-.19,.05,-.97,0); \n    float td=0.;\n    for (float d,i ; ++i<50.; ) {\n        d = juliabulb(p)/5. + 3e-5 ;\n        p += d * D * 6.;  \n        td += d;  \n        p.xw *= rot(p.z*8e-1);\n        O += .1*cos( log(1.+sc)/2. + oo/3. ) *exp(-i*i*1e-3);   \n    }\n\n    O = 1. - exp(-O*O);  \n  \n \n}\n\n","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"XcKBz3","date":"1734374727","viewed":82,"name":"4djuliabulbflow","username":"pb","description":"who needs fluid dynamics when we have mashed up fractal distance fields?","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["fractal","juliabulb"],"hasliked":0,"parentid":"XfKBRy","parentname":"4djuliabulbtiedye"}}