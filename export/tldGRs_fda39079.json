{"ver":"0.1","info":{"id":"tldGRs","date":"1577679677","viewed":269,"name":"Hexagonal Texture Sampling","username":"onetimetwotimes","description":"Samples one pixel from a texture to fill a full hexagon based on that hexagon's location.\nMakes use of hexagonal tiling example: https://www.shadertoy.com/view/wdlXD8","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","hexagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S3 1.73205080757\n#define HEXSIZE 10\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float zoom = iResolution.x/float(HEXSIZE);\n    \n    float ar = iResolution.x/iResolution.y;\n    \n    vec2 uv = ((fragCoord-.5*iResolution.xy)/iResolution.x);\n    uv*=zoom;\n    uv.x +=.5*zoom;\n    uv.y += .5*zoom/S3;\n    float minRes = min(iResolution.x,iResolution.y);\n    float eps    = zoom/minRes;\n    \n    vec2 tv = fragCoord/iResolution.xy;\n    tv.x *= ar;\n    \n    //r are the bounds of the hexagons\n    vec2 r = vec2(1, S3);\n    vec2 h = r*.5;\n    \n   \t//grid A & B are congruent but shifted versions of each other.\n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    \n    vec2 c = dot(a,a)<dot(b,b)?a:b;\n    vec2 id = vec2(uv-c)/h;\n    vec2 tvid = id/zoom +iTime/150.;\n    tvid.y *= S3;\n  \n    \n    \n    //color hexagons corresponding to their position relative to the texture\n    \n    vec3 col = texture(iChannel0, tvid).rgb;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}