{"ver":"0.1","info":{"id":"XcXfRN","date":"1723415588","viewed":30,"name":"MOROCCO raymarched flag","username":"Lost_Sky404","description":"this is the flag that most of you know. and yeah !! it's my country that am where from, have fun. : )","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","noise","terrain","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES \nprecision mediump float;\n#endif\n// for glsl canvas extension\n// check line 48\n// you have to reset it every 30s bcz still learning :)\n\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform vec2 u_mouse;\n\n#define MAX_DIST 100.\n#define MAX_STEPS 100\n#define SURF_DIST .01\n#define t iTime\n\nfloat random2d(vec2 coord){\n    return fract(sin(dot(coord.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n\n  vec3 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h ) - r;\n}\n\nfloat sdBox(vec3 p, vec3 b){\n    //p.yz *= rotate(u_time*.3);\n    vec3 q = abs(p) -b;\n    \n    q *= vec3(1, 1,1 );\n    return  length(max(q,0. )) + min(max(q.y,max(q.y,q.z )),0. )  ;\n}\nfloat star(vec3 p){\n    float star =1.;\n    float thick = .08;\n    float m = (t*.07);\n    float z_idx = 1.3-m;\n    // move effect + rotation\n\n    p.x = abs(p.x); // mirroring \n   \n    // check FWA logo shader . i used mirror technique to maintain the performance\n    star = min(star,sdCapsule(p,vec3(0,6,z_idx),vec3(1,4,z_idx),thick));\n    star = min(star,sdCapsule(p,vec3(-.1,5.2,z_idx),vec3(1.4,5.2,z_idx),thick));\n    star = min(star,sdCapsule(p,vec3(1.4,5.2,z_idx),vec3(-1,3.8,z_idx),thick));\n    star = min(star,sdCapsule(p,vec3(1,4,z_idx),vec3(0,4.4,z_idx),thick));\n    star *=m;// here the effect made still don't know how it works but it gives an awsome effect\n    //if u know how i can implement the star disappear effect and also at the begennin let me know\n    // i learned it from big wings but i need to enhance it for further projects\n    \n    return star;\n\n}\nvec2 map(vec3 p){\n    vec3 e = p;\n    float star = star(p);\n    \n    float box = sdBox(e-vec3(0,5,1),vec3(5,2.5,.1))+sin(e.x*5.+(t*2.))*.05;\n    float plane = e.y+1.;\n    vec2 id = floor(e.xz);\n    plane += mix(plane,id.x+id.y,.1);\n    \n    //float flag = min(box,star);\n    if(box > plane) return vec2(plane,1.0);\n    if(box > star) return vec2(star,3.0);\n    else return vec2(box,2.0);\n\n}\n// this raymarch function is modified as same as iq did\n// check happy jumping  live coding by inigo quilez in youtube\nvec2 Raymarch(vec3 ro , vec3 rd ) {\n    float dO = 0.;\n    float m = -1.;\n    for(int i=0; i< MAX_STEPS ; i++) {\n        vec3 p = ro + rd * dO;\n        \n        vec2 ds = map(p);\n        m = ds.y;\n        dO += ds.x;\n        if(ds.x < SURF_DIST || dO > MAX_DIST)   break;  \n    }\n    return vec2(dO,m);\n}\nvec3 GetNormal(vec3 p){\n    float d = map(p).x;\n    vec2 e = vec2(.01 , 0);\n    vec3 n = d  - vec3(map(p-e.xyy).x,map(p-e.yxy).x ,map(p-e.yyx).x );\n    return normalize(n);\n}\n\nfloat GetLight (vec3 p) {\n    \n    vec3 lightPos = vec3(0,20,-15);\n    \n    vec3 l = normalize(lightPos - p);\n    vec3 n = GetNormal(p);\n    float dif = clamp(dot(n , l),0.,1.);\n    float d = Raymarch(p + n * SURF_DIST *2., l).x;\n    if(d < length(lightPos - p) ) dif *= .4;\n    \n    \n    return dif;//return min(dif,dp);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord.xy * 2. - iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0.0);\n    // camera \n    vec3 ro = vec3(1,4 ,-5 );\n    vec3 rd = normalize(vec3( uv,1.));\n\n    vec2 tm = Raymarch(ro , rd);\n    if(tm.y > 0.0){\n\n        float d = tm.x;\n        vec3 p = ro +rd * d;\n        float l = GetLight(p);\n        float rand = random2d(p.xy);\n\n        float dpth = map(p).x;\n        col+= dpth+l*.6;\n        if(tm.y ==1.0){\n            col += vec3(0.1843, 0.1922, 0.0745);\n        }\n        else if(tm.y ==2.0){\n            col += vec3(0.8078, 0.1529, 0.0667);\n        }\n        else if(tm.y ==3.0){\n            col += vec3(0.0627, 0.8784, 0.1294)*.001/(dpth*.5)*rand;\n        }\n        if(d> 70.) col = vec3(0.1333, 0.3098, 0.5725);\n\n        fragColor = vec4(pow(col,vec3(2.)) , 1.0);   \n    }\n}\n","name":"Image","description":"","type":"image"}]}