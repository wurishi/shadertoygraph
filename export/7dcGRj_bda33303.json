{"ver":"0.1","info":{"id":"7dcGRj","date":"1630170136","viewed":73,"name":"Experiments with Perlin Noise","username":"Sprocket","description":"Trying to learn how perlin noise works\nusing:\nhttps://en.wikipedia.org/wiki/Perlin_noise\nhttps://www.shadertoy.com/view/MdGSzt\nhttps://www.shadertoy.com/view/4sc3z2\nhttps://www.shadertoy.com/view/4djSRW","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  https://www.shadertoy.com/view/4djSRW\n///  2 out, 2 in...\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvec2 randomGradient(vec2 point)\n{\n    return -1.0 + 2.0 * hash22(point);\n}\n\nfloat perlin_noise(vec2 position)\n{\n    vec2 gridCell = floor(position);\n    vec2 local = position - gridCell;\n    \n    vec2 weight = local * local * (3.0 - 2.0 * local);\n    \n    return mix(\n                mix(\n                    dot(local - vec2(0,0), randomGradient(gridCell + vec2(0,0))),\n                    dot(local - vec2(1,0), randomGradient(gridCell + vec2(1,0))),\n                    weight.x),\n                mix(\n                    dot(local - vec2(0,1), randomGradient(gridCell + vec2(0,1))),\n                    dot(local - vec2(1,1), randomGradient(gridCell + vec2(1,1))),\n                    weight.x),\n                weight.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    \n    uv += iTime * 0.2;\n    uv *= 8.0;\n    \n    // Time varying pixel color\n    vec3 col = vec3(perlin_noise(uv));\n    \n    col += 1.0;\n    col /= 2.0;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}