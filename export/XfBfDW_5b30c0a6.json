{"ver":"0.1","info":{"id":"XfBfDW","date":"1724903228","viewed":17,"name":"Standing Wave Demo","username":"DecCatBurner","description":"This is a digital demonstration of standing waves and the concepts surrounding them.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 Lerp(vec3 start_value, vec3 end_value, float pct)\n{\n    return (start_value + (end_value - start_value) * pct);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -0.5 to 0.5)\n    vec2 uv = (fragCoord/iResolution.xy) - vec2(0.,0.5);\n    uv *= vec2(30.,2.5); // Stretch\n\n    float p = 0.05; // Percition\n    float a = 1.5; // Amplitude\n    float pi2 = 1.570796327;\n\n    vec3 col;\n    \n    // Lines\n    if (abs(uv.y) < 0.01) { // Mid-Line\n        col = vec3(0.,0.,0.);\n    } else if (abs(uv.y) < 0.15 && mod(uv.x+0.1, pi2*2.) < 0.2) { // Nodes\n        col = vec3(0.,0.7,.7);\n    } else if (abs(uv.y) < 0.1 && mod(uv.x+0.1, pi2) < 0.2) { // Anti-Nodes\n        col = vec3(.7,0.,0.);\n    } else if (abs(abs(uv.y)-(a/2.)) < 0.01) { // Top and Bottom bounding lines\n        col = vec3(1.,0.,0.);\n    } else { // Sine Wave\n    \n        // Sine wave math\n        float i = iTime;\n        col = vec3(step(abs(0.5*sin(-i+uv.x)-uv.y*a), p), \n        step(abs(0.5*sin(i+uv.x)-uv.y*a), p), \n        step(abs(0.5*sin(i+uv.x)+0.5*sin(-i+uv.x)-uv.y*a), p));\n\n        // Overlaps\n        if (col == vec3(1.,1.,0.)) { col = vec3(0.,1.,0.); }\n        else if (col == vec3(0.,1.,1.)) { col = vec3(0.,1.,0.); }\n        else if (col == vec3(1.,0.,1.)) { col = vec3(1.,0.,0.); }\n        else if (col == vec3(0.,0.,0.)) { col = vec3(1.); }\n        \n        // Optional color flopping\n        //col = Lerp(col, 1.-col, 0.5*sin(iTime/4.)+0.5);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}