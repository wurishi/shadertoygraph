{"ver":"0.1","info":{"id":"wdtXWn","date":"1571806620","viewed":100,"name":"mod_motionblur_rotate","username":"Fogrex","description":"mod motionblur rotation matrix","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotate(vec2 uv,float rot)\n{\n    // rotation matrix\n    float s = sin(-rot);\n    float c = cos(-rot);\n    return mat2x2(c,s,-s,c)*uv;\n}\n\nvec3 calcColor(vec2 uv, float t)\n{\n    vec2 uv2 = rotate(uv, sin(t*0.2)*6.28);\n    float d;\n    // mod\n    vec2 uv3 = mod(uv2, 0.3) / 0.3;\n    // lattice\n    if(uv3.x < 0.1 || uv3.y < 0.1)\n    {\n        return vec3(1.0,1.0,1.0);\n    }\n    return vec3(abs(uv3.x),abs(uv3.y),sin(t)*0.5+0.5);\n}\n\nvec4 motionBlur(vec2 uv, float Freq)\n{\n    float doubleFreq = Freq * Freq;\n    vec3 col = vec3(.0,.0,.0);\n    for(float i=0.0;i<Freq;i++)\n    {\n        // âˆ«x dx = (1/2)x^2 + C\n        col += calcColor(uv, iTime - i / Freq * 0.1 )*((Freq - i) * 2.0 / doubleFreq);\n    }\n    \n    return vec4(col,1.0);\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n     vec2 uv = (2.0*fragCoord - iResolution.xy ) / iResolution.y;\n    \n    // Output to screen\n    fragColor = motionBlur(uv,20.0);\n}","name":"Image","description":"","type":"image"}]}