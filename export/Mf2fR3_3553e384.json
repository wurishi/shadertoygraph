{"ver":"0.1","info":{"id":"Mf2fR3","date":"1725303688","viewed":24,"name":"Video Sludge 2","username":"4LT","description":"More feedback effects","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = linear2srgb(texelFetch(iChannel0, ivec2(fragCoord), 0).xyz);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"struct Sample {\n    vec3 current;\n    vec4 last;\n    float d;\n};\n\nconst float SPEED = 0.001;\nconst float THRESHOLD = 0.1;\n\nSample getSample(vec2 coord) {\n    Sample s;\n    vec2 coordNorm = coord/iResolution.xy;\n    s.current = srgb2linear(textureLod(iChannel1, coordNorm, 0.).xyz);\n    //s.last = texelFetch(iChannel0, clamp(ivec2(coord), ivec2(0,0), ivec2(iResolution)), 0).xyz;\n    s.last = textureLod(iChannel0, coordNorm, 0.);\n    s.d = colorDiff(s.current, s.last.xyz);\n    return s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    Sample center = getSample(fragCoord);\n    Sample up = getSample(fragCoord + vec2(0., 1.));\n    Sample down = getSample(fragCoord + vec2(0., -1.));\n    Sample left = getSample(fragCoord + vec2(-1., 0.));\n    Sample right = getSample(fragCoord + vec2(1., 0.));\n    \n    float age = center.last.w;\n    \n    vec2 vel = normalize(vec2(\n        (right.d - left.d),\n        (up.d - down.d)\n    )) * iResolution.y * SPEED;\n    \n    vel*= 1. + pow(age*2.,1.3)*100.;\n    \n    vec3 col = center.current;\n    \n    Sample offsetSample = getSample(fragCoord - vel);\n    float colDot = dot(col, WEIGHTS);\n    float greenFrac = clamp(col.y*WEIGHTS.y / colDot, 0., 1.);\n    greenFrac = pow(greenFrac, 4.);\n    greenFrac = 1.0-pow(1.0-greenFrac, 4.);\n    greenFrac = pow(greenFrac, 2.);\n    greenFrac = min(max(greenFrac-0.04,0.) * 8.0, 1.0);\n    float newGreen = col.y * (1.0 - greenFrac);\n    col.y = newGreen;\n    \n    float alpha = greenFrac * 0.985;\n    \n    col = mix(col, offsetSample.last.xyz, alpha);\n    \n    if (alpha > 0.8) {\n        age = offsetSample.last.w + 0.001;\n    } else {\n        age = 0.;\n    }\n    \n    fragColor = vec4(col, age);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float GAMMA = 0.4545;\nconst vec3 WEIGHTS = vec3(0.7, 1.0, 0.4);\nconst float WEIGHT_SUM = WEIGHTS.x + WEIGHTS.y + WEIGHTS.z;\n\nvec3 linear2srgb(vec3 inCol) {\n    return pow(inCol, vec3(1./GAMMA));\n}\n\nvec3 srgb2linear(vec3 inCol) {\n    return pow(inCol, vec3(GAMMA));\n}\n\nfloat colorDiff(vec3 c1, vec3 c2) {\n    vec3 delta = (c1-c2) * WEIGHTS;\n    return length(delta)/length(WEIGHTS);\n}","name":"Common","description":"","type":"common"}]}