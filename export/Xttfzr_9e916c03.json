{"ver":"0.1","info":{"id":"Xttfzr","date":"1538504073","viewed":335,"name":"Iterated Median Filtering","username":"vchizhov","description":"Iterated median filtering. WS - control filter size & iterations.","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["medianfilter","iterated","denoising"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0,uv).xyz;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uint seed = uint(iFrame) + uint(float(1<<23)*texture(iChannel2,fragCoord.xy/iChannelResolution[2].xy).x);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 c = vec3(0.0);\n    float t1 = 0.3;\n    float t2 = 0.9;\n    float choice = fRand(seed);\n    float pK = 0.1;\n    float pR = 0.1;\n    float pG = 0.1;\n    float pB = 0.1;\n    \n    if(choice<pK)\n    {\n        c = vec3(0.0);\n    }\n    else\n    {\n        if(fRand(seed)<pR)\n        {\n            c += vec3(1.0, 0.0, 0.0);\n        }\n        if(fRand(seed)<pG)\n        {\n            c += vec3(0.0, 1.0, 0.0);\n        }\n        if(fRand(seed)<pB)\n        {\n            c += vec3(0.0, 0.0, 1.0);\n        }\n        if(all(equal(c,vec3(0.0)))) c = texture(iChannel1, uv).xyz;\n    }\n    \n    \n    fragColor = vec4(c,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    int d = clamp(int(texture(iChannel3, uv).w) + int(keyHit(KEY_W, iChannel2)) - int(keyHit(KEY_S, iChannel2)), 2, SZ+SZ-2);\n    vec3 col = d>2 ? medianFilter(uv, iChannel0, min(d,SZ), iResolution.xy) : texture(iChannel0, uv).xyz;\n    fragColor = vec4(col,float(d));\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define SZ 5\n\n// http://www.reedbeta.com/blog/quick-and-easy-gpu-random-numbers-in-d3d11/\n// http://web.archive.org/web/20071223173210/http://www.concentric.net/%7ETtwang/tech/inthash.htm\nuint wangHash( uint a )\n{\n\ta = (a ^ 61u) ^ (a >> 16u);\n\ta += (a << 3u);\n\ta = a ^ (a >> 4u);\n\ta = a * 0x27d4eb2du;\n\ta = a ^ (a >> 15u);\n\treturn a;\n}\n\nuint rand( inout uint seed )\n{\n    seed += 13u;\n    return wangHash( seed );\n}\n\nfloat fRand( inout uint seed )\n{\n    uint urand = rand( seed );    \n    const uint mantissaMask = (0xffffffffu) >> ( 32u - 23u );\n    return fract(float(urand & mantissaMask) / float(mantissaMask)); \n}\n\nvec2 fRand2(inout uint seed)\n{\n    return vec2(fRand(seed), fRand(seed));\n}\n\n\n// bubble sort horror\nvoid sort(inout vec3 arr[SZ*SZ], int d)\n{\n    vec3 temp;\n    for(int i=0;i<d*d-1;++i)\n    {\n        for(int j=i+1;j<d*d;++j)\n        {\n            // my super multicomponent branchless arithmetic swap\n            // based on: a <- a+b, b <- a - b, a <- a - b\n            vec3 g = vec3(greaterThan(arr[i],arr[j]));\n            arr[i] += arr[j];\n            arr[j] = g*arr[i] - (2.0*g-vec3(1.0))*arr[j];\n            arr[i] -= arr[j];\n        }\n    }\n}\n\n// note, there are O(n) algorithms for median\nvec3 medianFilter(vec2 uv, sampler2D sampler, int d, vec2 res)\n{\n    vec2 scale = 1.0/res;\n    vec3 arr[SZ*SZ];\n    for(int x=-d+2;x<d-1;++x)\n    {\n        for(int y=-d+2;y<d-1;++y)\n        {\n            vec2 offset = vec2(float(x), vec2(y));\n            int index = x+d-2 + (y+d-2)*d;\n\t\t\tarr[index] = texture(sampler, uv + offset*scale).xyz;\n        }\n    }\n    \n    sort(arr, d);\n    return d*d%2==0? 0.5*(arr[d*d/2]+arr[d*d/2-1]) : arr[d*d/2];\n}\n\nfloat keyDown(int ascii, in sampler2D sampler) {\n\treturn float(texture(sampler,vec2((.5+float(ascii))/256.,0.25)).x > 0.0);\n}\n\nbool keyHit(int ascii, in sampler2D sampler) {\n\treturn texture(sampler,vec2((.5+float(ascii))/256.,1.5/3.)).x == 1.0;\n}\n\nconst int KEY_W = 87;\nconst int KEY_S = 83;\nconst int KEY_SPACE = 32;\nconst int KEY_RETURN = 13;\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    int d = clamp(int(texture(iChannel3, uv).w) + int(keyHit(KEY_W, iChannel2)) - int(keyHit(KEY_S, iChannel2)), 2, SZ + SZ-2);\n    vec3 col = d>SZ ? medianFilter(uv, iChannel0, min(2+d-SZ,SZ), iResolution.xy) : texture(iChannel0, uv).xyz;\n    fragColor = vec4(col,float(d));\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    int d = clamp(int(texture(iChannel3, uv).w) + int(keyHit(KEY_W, iChannel2)) - int(keyHit(KEY_S, iChannel2)), 2, SZ + SZ-2 + SZ - 2);\n    vec3 col = d>SZ+SZ-2 ? medianFilter(uv, iChannel0, 4+d-2*SZ, iResolution.xy) : texture(iChannel0, uv).xyz;\n    fragColor = vec4(col,float(d));\n}","name":"Buffer D","description":"","type":"buffer"}]}