{"ver":"0.1","info":{"id":"dltBD8","date":"1701733177","viewed":7,"name":"100816723 - Quadrilateral","username":"St0ven_","description":"a simple quad renderer","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["quad"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    uv = (uv - 0.5) * 2.;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 color = vec3(0., 0., 0.);\n    \n    if(uv.x > -0.5 && uv.x < 0.5){\n        if(uv.y > -0.5 && uv.y < 0.5){\n            color.x = 1.;\n        }\n        \n    }\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}