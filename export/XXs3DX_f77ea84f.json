{"ver":"0.1","info":{"id":"XXs3DX","date":"1707994400","viewed":38,"name":"Mathijssie SDF","username":"roosen5","description":"Narcisism","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float AddCircle(in vec2 inPosition, in vec2 fragCoord, in float inRadius)\n{\n    return length(fragCoord-inPosition) - inRadius;\n}\n\nfloat AddBox(in vec2 inPosition, in vec2 inSize)\n{\n    vec2 d = abs(inPosition)-inSize;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat AddTriangle( in vec2 inCenterPos, in vec2 inPos0, in vec2 inPos1, in vec2 inPos2 )\n{\n    vec2 e0 = inPos1-inPos0, e1 = inPos2-inPos1, e2 = inPos0-inPos2;\n    vec2 v0 = inCenterPos -inPos0, v1 = inCenterPos -inPos1, v2 = inCenterPos -inPos2;\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min(min(vec2(dot(pq0,pq0), s*(v0.x*e0.y-v0.y*e0.x)),\n                     vec2(dot(pq1,pq1), s*(v1.x*e1.y-v1.y*e1.x))),\n                     vec2(dot(pq2,pq2), s*(v2.x*e2.y-v2.y*e2.x)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\n\nvec2 GetPoint( in float inValue )\n{\n    vec2 point = vec2(cos(inValue), sin(inValue));\n\treturn point*100.0;\n}\n\nfloat AddLine( in vec2 inCenter, in vec2 inPos1, in vec2 inPos2 )\n{\n    vec2 pa = inCenter-inPos1, ba = inPos2-inPos1;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - 1.0;\n}\nfloat AddS( in vec2 inCenter, in vec2 inPos1, in vec2 inPos2 )\n{\ninCenter.x-= 25.0 * sin( inCenter.y/16.5);\n    vec2 pa = inCenter-inPos1, ba = inPos2-inPos1;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    // Time varying pixel color\n\tvec2 center = iResolution.xy/2.0;\n\n\tfloat _distance = AddCircle(center  + vec2(0.0, 0.0), fragCoord, 180.0) / 180.0;\n    _distance = max(_distance, -AddTriangle(fragCoord-center,vec2(0.0, 0.0), GetPoint(iTime + 3.14*0.5) , GetPoint(iTime)));\n    \n    \n    // Draw M\n    float thickness = 10.0 * (sin(iTime) + 1.0);\n    float pos = -300.0;\n    _distance =  AddLine(fragCoord - center- vec2(pos , 0.0), vec2(0.0,0.0), vec2(25.0,100.0)) - thickness ;\n    _distance =  min(_distance, AddLine(fragCoord - center- vec2(pos , 0.0), vec2(25.0,100.0), vec2(50.0,0.0)) - thickness);\n    _distance =  min(_distance, AddLine(fragCoord - center- vec2(pos , 0.0), vec2(50.0,0.0), vec2(75.0,100.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center- vec2(pos , 0.0), vec2(75.0,100.0), vec2(100.0,0.0)) - thickness );\n\n    pos+=100.0;\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(0.0,0.0), vec2(50.0,100.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(50.0,100.0), vec2(100.0,0.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(25.0,50.0), vec2(75.0,50.0)) - thickness );\n\n    pos+=100.0;\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(50.0,0.0), vec2(50.0,100.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(0.0,100.0), vec2(100.0,100.0)) - thickness );\n\n    pos+=100.0;\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(0.0, 0.0), vec2(0.0,100.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(75.0, 0.0), vec2(75.0,100.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(0.0, 50.0), vec2(75.0,50.0)) - thickness );\n\n    pos+=70.0;\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(50.0, 0.0), vec2(50.0,70.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(50.0, 90.0), vec2(50.0,100.0)) - thickness );\n\n    pos+=70.0;\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(0.0, 0.0), vec2(50.0,0.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(50.0, 90.0), vec2(50.0,100.0)) - thickness );\n    _distance =  min(_distance, AddLine(fragCoord - center - vec2(pos, 0.0), vec2(50.0, 0.0), vec2(50.0,70.0)) - thickness );\n\n\n    pos+=100.0;\n    _distance =  min(_distance, AddS(fragCoord - center - vec2(pos, 0.0), vec2(0.0, 0.0), vec2(0.0,100.0)) - thickness );\n    \n\n\n\n\tfragColor = vec4(-_distance, -_distance,-_distance,1);\n    if(pow(_distance, 2.0)>40.0)\n\tfragColor = vec4(0.5,0.5,0.5,1);\n //   else\n  //  fragColor = vec4(0.0,0.0,0.0,1);\n\n}","name":"Image","description":"","type":"image"}]}