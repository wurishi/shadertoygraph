{"ver":"0.1","info":{"id":"mdByWw","date":"1687767003","viewed":66,"name":"3.2 - Circles pt. 2","username":"retonym","description":"exercises done while going through thebookofshaders.com\nhttps://thebookofshaders.com/07/","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["thebookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// palette\nconst vec3 darkblue = vec3(0.0, 0.0, 0.2);\nconst vec3 orange = vec3(0.8, 0.6, 0.2);\nconst vec3 black = vec3(0.0);\nconst vec3 white = vec3(1.0);\n\nvec3 featheredRing(vec2 center, float radius, float ringWidth, float featherAmt, vec3 color, vec2 uv)\n{\n    vec2 toCenter = center-uv;\n    float outerCircle = smoothstep(radius, radius - featherAmt, length(toCenter));\n    float innerCircle = smoothstep(radius - ringWidth, radius - ringWidth - featherAmt, length(toCenter)); \n    float ring = outerCircle - innerCircle;\n    \n    vec3 coloredRing = vec3(ring) * (1.0 - color);\n    coloredRing = 1.0 - coloredRing;\n\n    return coloredRing;\n}\n\nvec3 raindrop(vec2 center, float timeOffset, vec2 uv)\n{ \n    float speed = .8;\n    float raindropLifetime = pow(fract(iTime + timeOffset), 0.4);\n    \n    float radius = .3;\n    radius *= raindropLifetime;\n    \n    vec3 fadingColor = mix(orange, black, raindropLifetime); \n    \n    float ringWidth = 0.1;\n    ringWidth = mix(ringWidth, 0.0, raindropLifetime);\n    \n    float featherAmt = .14;\n    featherAmt = mix(featherAmt, featherAmt - .1, raindropLifetime);\n    \n    \n    vec3 raindrop = featheredRing(center, radius, ringWidth, featherAmt, fadingColor, uv);    \n    \n    return 1.0 - raindrop;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // trying to set up a square uv space similar to the bookofshaders tutorial setup\n    vec2 uv = vec2(0.0, 0.0);\n    float screenRatio = iResolution.x/iResolution.y;\n    uv.x = (fragCoord.x/iResolution.x) * screenRatio;\n    uv.y = fragCoord.y/iResolution.y;\n    \n    \n    // included demo of combining distance fields\n    float pct = 0.0;\n    //pct = distance(uv,vec2(0.4)) + distance(uv,vec2(0.6));\n    pct = distance(uv,vec2(0.2)) * distance(uv,vec2(0.7));\n    //pct = min(distance(uv,vec2(0.4)),distance(uv,vec2(0.6)));\n    //pct = max(distance(uv,vec2(0.4)),distance(uv,vec2(0.6)));\n    //pct = pow(distance(uv,vec2(0.4)),distance(uv,vec2(0.6)));\n    \n    // exercise 1 - make a composition of some kind using this method (include animation)\n    \n    // raindrops could be fun...\n    // can get a feathered ring by subtracting a feathered circle from another feathered circle.\n    // write a function to do that.\n    \n\n    // raindrops\n\n    // \"array\" of preset positions bc i don't know how to do randomization :')\n    vec2 pos1 = vec2(.2, .5);\n    vec2 pos2 = vec2(.5, .2);\n    vec2 pos3 = vec2(.8, .1);\n    vec2 pos4 = vec2(.45, .64);\n    vec2 pos5 = vec2( .8, .74);\n    vec2 pos6 = vec2(.94, .56);\n    vec2 pos7 = vec2(1.3, .28);\n    vec2 pos8 = vec2(1.5, .1);\n    vec2 pos9 = vec2(1.45, .84);\n    vec2 pos10 = vec2(1.15, .7);\n\n  \n    vec3 rain = raindrop(pos1, .5, uv) + darkblue;\n    rain += raindrop(pos2, .14, uv);\n    rain += raindrop(pos3, .86, uv);\n    rain += raindrop(pos4, .33, uv);\n    rain += raindrop(pos5, .02, uv);\n    rain += raindrop(pos6, .55, uv);\n    rain += raindrop(pos7, .65, uv);\n    rain += raindrop(pos8, .18, uv);\n    rain += raindrop(pos9, .39, uv);\n    rain += raindrop(pos10, .5, uv);\n    \n    fragColor = vec4(rain, 1.0);             \n}","name":"Image","description":"","type":"image"}]}