{"ver":"0.1","info":{"id":"7d23Dc","date":"1618073283","viewed":69,"name":"conway's game of life 44326462h6","username":"jy483752","description":"i might have done smth wrong, i dont see any stable forms, like the 2 by 2 square or the 3 by 1 rod that keeps rotating.\n-works now, thanks fabriceneyret2\nAdjust zoom variable in Common to, well, zoom","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["w"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = tf(fragCoord/zoom);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int me = int(tf(fragCoord).r);\n    \n    int sum = 0;\n    for(int i=-1; i<=1; i++){\n        for(int j=-1; j<=1; j++){\n            if(i==0&&j==0) continue;\n            sum+=int(tf(fragCoord+vec2(float(i), float(j))).r);\n        }\n    }\n\n    int life = 0;\n    \n    if(me==1){\n        if(sum==2||sum==3){\n            life = 1;\n        }\n    }\n    else{\n        if(sum==3){\n            life = 1;\n        }\n    }\n    \n    vec2 uv = fragCoord/iResolution.y;\n    vec2 mouseUv = iMouse.xy/iResolution.y;\n    mouseUv /= zoom;\n    if(iMouse.z>0.){\n        life += int(\n            (1.-step(0.05/zoom,length(uv-mouseUv)))*\n            step(0.5, rand(uv, iTime))\n        );\n    }\n    \n    fragColor = vec4(vec3(int(life)),1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define tf(uv) texelFetch(iChannel0, ivec2(uv), 0)\n#define zoom 1.\n\nfloat rand(vec2 co, float d){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453+d);\n}","name":"Common","description":"","type":"common"}]}