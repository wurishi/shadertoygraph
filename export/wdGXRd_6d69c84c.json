{"ver":"0.1","info":{"id":"wdGXRd","date":"1574733203","viewed":52,"name":"The Checker-Board","username":"RoWoCha","description":"Using ShaderToy, write a shader that creates a black-and-white chess style checker-board pattern. The number of rows and columns should be variable, i.e, I should be able to change them by changing the value of a variable defined at the top of the shader.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["introtographicsprogramming"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int nRow = 8, nCol = 8;  //changable number of rows and columns\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Define UV\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Define colors for tiles\n    vec4 col1 = texture(iChannel0, uv);\n    vec4 col2 = texture(iChannel1, uv);\n    vec4 resultCol;\n    \n    // Multiply uv-s by the amount or rows and columns\n    // to figure out what tile is it in the future\n    float thisRow = floor(uv.y * float(nRow));\n    float thisCol = floor(uv.x * float(nCol));\n    \n    // If even row\n    if(mod(thisRow, 2.0) == 0.0)\n    {\n        // And even column\n        if(mod(thisCol, 2.0) == 0.0)\n        {\n            resultCol = col1;\n        }\n        // And odd column\n        else\n        {\n            resultCol = col2;\n        }\n    }\n    // If odd row and even column\n    else if(mod(thisCol, 2.0) == 0.0)\n    {\n    \tresultCol = col2; \n    }\n    // If odd row and odd column\n    else\n    {\n    \tresultCol = col1;\n    }\n    \n    fragColor = resultCol;\n}","name":"Image","description":"","type":"image"}]}