{"ver":"0.1","info":{"id":"msXSzs","date":"1669389607","viewed":170,"name":"circular blur without for loop","username":"axiomgraph","description":"this shader is for those who want to know how this circular blur works. this can be converted into for loop.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["circularblur","rotationalblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 pivot = vec2(0.0);\n\n\nvec2 rotate(vec2 uv, vec2 p, float angle)\n{\n\tmat2 rotation = mat2(vec2(cos(angle), -sin(angle)),\n\t\t\t\t\t\tvec2(sin(angle), cos(angle)));\n\tuv -= p;\n\tuv = uv * rotation;\n\tuv += p;\n\treturn uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n  \n    \n    vec4 COLOR = vec4(0.0);    \n\t\n\t\t\n\t\n\t\tCOLOR = texture(iChannel0, rotate(uv, pivot + 0.5, 0.01))+\n                texture(iChannel0, rotate(uv, pivot + 0.5, 0.02))+\n                texture(iChannel0, rotate(uv, pivot + 0.5, .03)) +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .04)) +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .05)) +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .06)) +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .07)) +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .08)) +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .09)) +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .1))  +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .2))  +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .3))  +\n                texture(iChannel0, rotate(uv, pivot + 0.5, .4))\n        \n        ;\n        \n        fragColor = vec4(COLOR/12.0); // Output to screen\n}\n","name":"Image","description":"","type":"image"}]}