{"ver":"0.1","info":{"id":"flSGzd","date":"1624461945","viewed":170,"name":"Blinn-Phong Phase Demo","username":"yunhai","description":"you can drag mouse.x to change the position of camera","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3zn","filepath":"/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","previewfilepath":"/media/ap/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SS(a,b,t) smoothstep(a,b,t)\nconst float PI=3.14159265;\nconst vec3 MatColor=vec3(.5,.4,.3);\n//---------------------------\nconst float AmbientIntensity=.3;\nconst vec3 AmbientColor=vec3(1.,.5,.5);\nconst float LambertExtension=1.;\nconst float LambertPow=3.;\nconst float SpecularPow=30.;\n//---------------------------\nconst float LightIntensity=10.;\nstruct SpotLight\n{\n    vec3 pos;\n    float intensity;\n}lit;\nvec3 ambient()\n{\n    float coefficient=AmbientIntensity;\n    vec3 col=vec3(1.);\n    return coefficient*AmbientColor;\n}\nvec3 diffuse(vec3 pos,vec3 nml)\n{\n    vec3 ld=normalize(lit.pos-pos);\n    float r=length(lit.pos-pos);\n    float lambert=pow(max(0.,(dot(nml,ld)+LambertExtension)/(1.+LambertExtension)),LambertPow);//lambert's cosine law\n    float dim=lit.intensity/(r*r);//conservation of energy\n    return MatColor*dim*lambert;\n}\nvec3 specular(vec3 pos,vec3 nml,vec3 viewDir)\n{\n    vec3 ld=normalize(lit.pos-pos);\n    float r=length(lit.pos-pos);\n    float h=pow(max(0.,dot(nml,(-viewDir+ld)*.5)),SpecularPow);//specular is depend on dot(viewDir,reflectLightDir)\n    //float h=pow(max(0.,dot(ld,reflect(viewDir,nml))),SpecularPow);//specular is depend on dot(viewDir,reflectLightDir)\n    float dim=lit.intensity/(r*r);//conservation of energy\n    vec3 specFactor=vec3(1.,.8,.8);\n    return vec3(specFactor)*dim*h;\n}\nfloat iS(vec3 ro,vec3 rd,vec4 s)\n{\n    vec3 co=ro-s.xyz;\n    float b=2.*dot(rd,co),\n          c=dot(co,co)-s.w*s.w,\n          delta=b*b-4.*c;\n    return delta>0.?(-b-sqrt(delta))/2.:-1.;\n}\nvoid mainImage( out vec4 O, in vec2 C )\n{\n    vec2 iR=iResolution.xy;\n    vec2 uv = 2.*C/iR;\n    vec2 id=floor(uv);\n    uv=(fract(uv)-.5);\n    uv.x*=iR.x/iR.y;\n    O-=O;\n    \n    //cam\n    float m=iMouse.x/iR.x*4.*PI;\n    vec3 ro=vec3(sin(m),0,-cos(m))*2.,\n         camf=normalize(-ro),\n         camr=cross(vec3(0,1,0),camf),\n         camu=cross(camf,camr),\n         rd=normalize(uv.x*camr+uv.y*camu+camf);\n    \n    //only spot light:\n    float t=iTime*.7;\n    lit.pos=vec3(cos(t),.3,-sin(t)*sin(t))*4.+vec3(0,0,1);\n    lit.intensity=LightIntensity;\n    \n    vec4 s=vec4(0,0,0,.8);\n    float d=iS(ro,rd,s);\n    vec3 p=ro+d*rd;\n    vec3 n=(p-s.xyz)/s.w;\n    if(id.y>.5)\n    {\n        if(id.x<.5)\n        {\n            //ambient\n            vec3 amb=ambient();\n            O.rgb+=step(0.,d)*amb;\n        }\n        else\n        {\n            //diffuse\n            vec3 diff=diffuse(p,n);\n            O.rgb+=step(0.,d)*diff;\n        }\n    }\n    else \n    {\n        if(id.x>.5)\n        {\n            //specular\n            vec3 spec=specular(p,n,rd);\n            O.rgb+=step(0.,d)*spec;\n        }\n        else\n        {\n            //Blinn-Phong\n            vec3 amb=ambient();\n            vec3 diff=diffuse(p,n);\n            vec3 spec=specular(p,n,rd);\n            O.rgb+=step(0.,d)*(diff+spec+amb);\n        }\n    }\n    O.rgb=d<0.?texture(iChannel0,normalize(rd-camf*.2)).rgb:O.rgb;\n}","name":"Image","description":"","type":"image"}]}