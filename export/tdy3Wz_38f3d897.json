{"ver":"0.1","info":{"id":"tdy3Wz","date":"1603062520","viewed":206,"name":"grid - woz","username":"woz","description":"grid test","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(vec2 uv)\n{\n    float x = uv.x;\n    float l = length(uv - vec2(x, x * x + sin(iTime * 1.)));\n    \n    return l;\n    return min(l, length(uv - vec2(x, sin(x + iTime * 10.))));\n}\n\nfloat grid(vec2 fragCoord)\n{\n    ivec2 coord = ivec2(fragCoord);\n    coord -= ivec2(iResolution.xy) / 2;\n    return float(1 - clamp(abs(coord.x) * abs(coord.y), 0, 1));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    uv *= 10.;\n\n    float d = smoothstep(.2, .1, f(uv));\n    \n    d += grid(fragCoord);\n    \n    vec3 col = vec3(d);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}