{"ver":"0.1","info":{"id":"XsXyD2","date":"1489895537","viewed":1385,"name":"test curl fluid","username":"wachel","description":"test curl particle\n","likes":25,"published":3,"flags":32,"usePreview":0,"tags":["curl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 color = texture(iChannel0, uv).rgb;\n    \n\tfragColor = vec4(pow(color,vec3(1.0/2.0)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float seed = 1.0;\n\n#ifdef NOISE_0\n    vec2 hash( vec2 p ) // replace this by something better\n    {\n        p = vec2( dot(p,vec2(127.1,311.7)),\n                  dot(p,vec2(269.5,183.3)) );\n\n        return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n    }\n\n    float noise( in vec2 p )\n    {\n        const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n        const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n        vec2 i = floor( p + (p.x+p.y)*K1 );\n\n        vec2 a = p - i + (i.x+i.y)*K2;\n        vec2 o = step(a.yx,a.xy);    \n        vec2 b = a - o + K2;\n        vec2 c = a - 1.0 + 2.0*K2;\n\n        vec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\n        vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n\n        return dot( n, vec3(70.0) );\n\n    }\n    float field(in vec2 p)\n    {\n        return noise(p) * 0.5 + 0.5;\n    }\n\n#else\n\t#define MOD3 vec3(.1031,.11369,.13787)\n    vec3 hash33(vec3 p3)\n    {\n        p3 = fract(p3 * MOD3);\n        p3 += dot(p3, p3.yxz+19.19);\n        return -1.0 + 2.0 * fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n    }\n\n\n    float simplex_noise(vec3 p)\n    {\n        const float K1 = 0.333333333;\n        const float K2 = 0.166666667;\n\n        vec3 i = floor(p + (p.x + p.y + p.z) * K1);\n        vec3 d0 = p - (i - (i.x + i.y + i.z) * K2);\n\n        // thx nikita: https://www.shadertoy.com/view/XsX3zB\n        vec3 e = step(vec3(0.0), d0 - d0.yzx);\n        vec3 i1 = e * (1.0 - e.zxy);\n        vec3 i2 = 1.0 - e.zxy * (1.0 - e);\n\n        vec3 d1 = d0 - (i1 - 1.0 * K2);\n        vec3 d2 = d0 - (i2 - 2.0 * K2);\n        vec3 d3 = d0 - (1.0 - 3.0 * K2);\n\n        vec4 h = max(0.6 - vec4(dot(d0, d0), dot(d1, d1), dot(d2, d2), dot(d3, d3)), 0.0);\n        vec4 n = h * h * h * h * vec4(dot(d0, hash33(i)), dot(d1, hash33(i + i1)), dot(d2, hash33(i + i2)), dot(d3, hash33(i + 1.0)));\n\n        return dot(vec4(31.316), n);\n    }\n\n    float field(in vec2 p)\n    {\n        float f0 = simplex_noise(vec3(p,iTime * 0.2)) * 0.5 + 0.5;\n        float f1 = simplex_noise(vec3(p * 2.3,iTime * 0.2)) * 0.5 + 0.5;\n        return f0 * 0.8 + f1 * 0.2;\n    }\n#endif\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 pos = uv * 3.0 * vec2(1.0,iResolution.y/iResolution.x);\n    float f = field(pos);\n    \n    vec2 eps = vec2(0.0001,0);\n    \n    float dx = (field(pos - eps.xy) - field(pos + eps.xy))/(2.0 * eps.x);\n    float dy = (field(pos - eps.yx) - field(pos + eps.yx))/(2.0 * eps.x);\n    \n    vec2 v = vec2(dy,-dx);\n    vec4 c0 = texture(iChannel0, uv + v * 0.01) * 0.95 + pow(texture(iChannel1,uv * 0.1 + iTime * 0.02),vec4(2.0)) * 0.05;\n    \n    vec2 emissionRed = vec2(simplex_noise(vec3(iTime * 0.5,0,0)),simplex_noise(vec3(0,iTime * 0.5,0))) * 0.5 +0.5;\n    vec2 emissionYellow = vec2(simplex_noise(vec3(iTime * 0.5 + 3.5,0,0)),simplex_noise(vec3(0,iTime * 0.5 + 3.5,0))) * 0.5 +0.5;\n    \n    \n    if(length(uv - emissionRed) < 0.01){\n        c0 = vec4(0.0,2.0,2,0);\n    }\n    \n    if(length(uv - emissionYellow) < 0.01){\n        c0 = vec4(2.0,2,0,0);\n    }\n\tfragColor = vec4(c0);\n}","name":"Buf A","description":"","type":"buffer"}]}