{"ver":"0.1","info":{"id":"DsSXRm","date":"1670021674","viewed":76,"name":"Shader HW","username":"ecsaur","description":"cs 4450","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["assignment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}*/\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y *= (iResolution.y/iResolution.x);\n    float dist = sdCircle(uv-vec2(0.55,0.3),0.1);\n    vec3 col = mix(vec3(1.0,0.0,0.0),vec3(0.0,0.0,1.0),step(0.0,dist));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}