{"ver":"0.1","info":{"id":"msf3DB","date":"1666731574","viewed":454,"name":"Quiet Storm","username":"leon","description":"finding calm and peace in noise and chaos","likes":34,"published":3,"flags":0,"usePreview":1,"tags":["noise","cloud","abstract","gyroid","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Quiet Storm\n// Another gyroid noise that looks like hell\n// variation of Evil Membrane https://www.shadertoy.com/view/ddX3WB\n\n#define R iResolution.xy\n\n// sinful maths\nfloat gyroid (vec3 seed)\n{\n    return dot(sin(seed),cos(seed.yzx));\n}\n\nfloat noise (vec3 seed)\n{\n    float result = 0., a = .5;\n    for (int i = 0; i < 6; ++i, a/=2.)\n    {\n        // twist and animate\n        seed.z += result*.5 - iTime*.03;\n        \n        // bounces it with an abs\n        result += abs(gyroid(seed/a))*a;\n    }\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // sweet noise\n    vec3 blu = texture(iChannel0, fragCoord/1024.).xyz;\n    \n    // cocoordinates\n    vec3 p = vec3(2.*(2.*fragCoord-R)/R.y,0);\n    p.z = length(p);\n    \n    // noise grayscale\n    float shade = noise(p);\n    \n    // normal gradient with weighted range to fake volume and perspective\n    float range = abs(p.y+1.) * 0.5 * blu.z + 0.02;\n    vec3 normal = normalize(vec3(shade-vec2(noise(p+vec3(range,0,0)), noise(p+vec3(0,range,0))), .3));\n    \n    // simple lighting from up and sides\n    float light = max(0.,normal.y) + abs(normal.x)*.33;\n    \n    fragColor = vec4(light*shade);\n}","name":"Image","description":"","type":"image"}]}