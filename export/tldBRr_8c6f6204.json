{"ver":"0.1","info":{"id":"tldBRr","date":"1612144918","viewed":63,"name":"Pacman chasing","username":"DanielGomez","description":"Paku paku paku paku paku paku paku paku paku","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["pacman"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nfloat PaintCircle(float radius, vec2 pos, vec2 uv, float sm)\n{\n    float distance = length(uv - pos);\n    \n    float p = smoothstep(radius, radius-sm, distance);\n    return p;\n}\n\nfloat PaintRectangle(float h, float w, vec2 pos, vec2 uv, float sm)\n{\n    vec2 p = uv-pos;\n    p = abs(p);\n    \n    float a = smoothstep(h, h-sm, p.y);\n    float b = smoothstep(w, w-sm, p.x);\n    return a * b;\n}\n\nfloat PaintPacman(float radius, vec2 pos, vec2 uv, float sm, float mouthangle, float xdir)\n{\n    vec2 line = uv - pos;\n    \n    vec2 polar = vec2(length(line), atan(abs(line.y), line.x * xdir)); //polar coordinates\n     if (polar.x > radius || polar.y < mouthangle)\n        return 0.0;  \n        \n    float p = PaintCircle(radius, pos, uv, sm);\n\n        //float m = smoothstep(mouthangle, mouthangle-sm, polar.y);\n        //p -= m;\n\n    return p;\n}\n\nfloat PaintGhost(float radius, vec2 pos, vec2 uv, float sm)\n{\n    float p = PaintCircle(radius, pos, uv, sm);\n    p += PaintRectangle(radius/2.0, radius, vec2(pos.x,pos.y -radius/2.0), uv, sm);\n    \n    float m = .2*radius*sin(2.0 / radius *PI*uv.x);\n    float y = uv.y - m;\n    p -= 2.0 * PaintRectangle(radius*.3, radius, vec2(pos.x, pos.y-radius), vec2(uv.x,y), sm);\n    \n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=0.5; // 0..1 --> -0.5..0.5\n    uv.x *= iResolution.x / iResolution.y; //normalize\n    \n    vec3 col = vec3(0.0); //background color\n    \n    float t = mod (iTime, 11.5); //to loop every 11.5 seconds\n    \n    float s = .005; //smoothing value\n    float r = .1; //ghost and little pacman size (radius)\n    vec2 v = vec2(t * .5,.0); //speed\n    //pacman\n    vec2 posini = vec2(-1.5,0);\n    //float mouthangle = PI/4.0 * sin(PI * fract(t)); //sinusoidal movement\n    float mouthangle =  PI/2.0 * abs(0.5-fract(t * 3.0)); //lineal movement\n    col += PaintPacman(r, posini + v, uv, s, mouthangle , 1.0) * vec3(1,1,0);\n    \n    //ghost1\n    v.x = t * .55;\n    posini = vec2(-2.0,0); //initial pos\n    col += PaintGhost(r, posini + v, uv, s) * vec3(1,0,0);\n    float y = uv.y * .8; //elliptic eyes\n    col += PaintCircle(r*.3, vec2(posini.x+r*.5, posini.y+r*.2) + v, vec2(uv.x, y), s);\n    col += PaintCircle(r*.3, vec2(posini.x-r*.2, posini.y+r*.2) + v, vec2(uv.x, y), s);\n    col -= PaintCircle(r*.15, vec2(posini.x-r*.05, posini.y+r*.2) + v, uv, s) * vec3(2,1,0);\n    col -= PaintCircle(r*.15, vec2(posini.x+r*.65, posini.y+r*.2) + v, uv, s) * vec3(2,1,0);\n    \n    //ghost2\n    v.x = -t * .5;\n    posini = vec2(4.0,0); //initial pos\n    col += PaintGhost(r, posini + v, uv, s) * vec3(0,0,1);\n    col += PaintCircle(r*.15, vec2(posini.x+r*.3, posini.y+r*.2) + v, uv, s);\n    col += PaintCircle(r*.15, vec2(posini.x-r*.3, posini.y+r*.2) + v, uv, s);\n    \n    float m = .1*r*sin( 4.5 * PI / r * (uv.x - (posini.x + v.x)) + r*16.0);\n    float yy = uv.y - m;\n    col += PaintRectangle(r*.1, r*.65, vec2(posini.x, posini.y - r*.2) + v, vec2(uv.x , yy), s); \n    \n    //big pacman\n    v.x = -t * .55;\n    posini = vec2(4.9,0);\n    //mouthangle = PI/4.0 * sin(PI * fract(t)); //sinusoidal movement\n    mouthangle =  PI/2.0 * abs(0.5-fract(t * 3.0)); //lineal movement\n    col += PaintPacman(r*3.0, vec2(posini.x, posini.y) + v, uv, s, mouthangle , -1.0) * vec3(1,1,0);\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}