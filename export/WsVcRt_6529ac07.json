{"ver":"0.1","info":{"id":"WsVcRt","date":"1603567820","viewed":329,"name":"Motion tracing","username":"Khrebtov_M","description":"Traces moving parts of your body","likes":5,"published":1,"flags":34,"usePreview":0,"tags":["tracing","webcam","motion","movement"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// this shader traces moving objects. Check buffers for more info\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x = 1.0-uv.x;\n\tvec2 pos = textureLod(iChannel1,vec2(0.0),0.0).xy;\n\tfragColor=textureLod(iChannel0,uv,0.0).xxxw+texture(iChannel2,uv);\n\tif(distance(uv,pos)<0.03)   fragColor +=vec4(1.0);\n\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/* Buffer b stores camera image from the previous frame, and this buffer outputs \ndifference between previous frame and current frame, so,for pixels that moved\nthe output pixel is bright*/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n\n\nfragColor = textureLod( iChannel0, uv,1.0 )-textureLod( iChannel1, uv,1.0);    \n}\n\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//Thit is the buffer that stores current image from the camera\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n \n\n    fragColor = texture( iChannel1, uv);\n}\n\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"\n/*this buffer is used to calculate the center of pixels from \nbuffer A  that are  bright enough  (those are the pixels that moved)\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //we want pixel(0;0) to output position of the center of bright pixels\n    \n    if( fragCoord.x>0.5) return;\n    if( fragCoord.y>0.5) return;\n    \n  /*we will calculate the sum of bright pixels'coordinates \n  and then divide it by the number of these pixels*/\n    \n    vec2 sum=vec2(0.0);\n    float g=0.0;\n    float threshold = 0.15;\n    for(float i=0.0;i<1.0;i+=0.01) for(float j=0.0;j<1.0;j+=0.01)\n \t    {\n            vec3 diff = textureLod(iChannel0,vec2(i,j)  ,3.0).xyz;\n            if(diff.r >= threshold || diff.g >= threshold || diff.b >= threshold)\n            {\n\t\t\t\tsum+=vec2(i,j);\n \t  \t        g++;\n \t        }\n  \t     \n\t   }\n    float  td= iTimeDelta;\n    \n    /*camera is not  a precise tool for tracking movement, so, if we just output\n     calculated center, it will be jittery. Instead, we can move cursor towards\n    the calculated center buy calculating the difference between this position\n   and previous position, and multiply this difference by some constant value*/\n\n\tvec4 te =texture(iChannel1,vec2(0.0,0.0));//xy-current coordinates;zw-desired coordinates;\n    vec2 delta = te.zw-te.xy;\n\tif(g<15.0) fragColor = te+vec4(3.0*delta*td,0.0,0.0);\n    else\n    {\n        te.zw =sum/g;\n    \tdelta = te.zw-te.xy;\n     \tfragColor =  te+vec4(3.0*delta*td,0.0,0.0);\n    }\n   \n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//this buffer if for the line that cursor traces \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor=0.97*texture(iChannel0,uv);\n   \n    vec2 pos = textureLod(iChannel1,vec2(0.0),0.0).xy;\n    if(distance(uv,pos)<0.02)   fragColor =vec4(1.0);\n    \n    \n\n}","name":"Buffer C","description":"","type":"buffer"}]}