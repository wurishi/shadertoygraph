{"ver":"0.1","info":{"id":"XsySW3","date":"1466852204","viewed":750,"name":"Unoptimized edge detector","username":"josemorval","description":"Simple edge detector based on first derivatives (central differences, O(h^2)) along x and y axis","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["edge","bw","derivative","silhouette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Simple and unoptimized edge detector\n\nvoid mainImage( out vec4 c , vec2 u ) {\n   \n    u /= iResolution.xy;\n    \n    float step = 0.00001;\n    \n    //Evaluation of image on x axis\n    vec4 cc00 = texture(iChannel0,u+vec2(step,0.0));\n    //vec4 cc01 = texture(iChannel0,u+vec2(0.0,0.0));\n    vec4 cc02 = texture(iChannel0,u+vec2(-step,0.0));\n\n   //Evaluation of image on y axis\n    vec4 cc10 = texture(iChannel0,u+vec2(0.0,step));\n    //vec4 cc11 = texture(iChannel0,u+vec2(0.0,0.0));\n    vec4 cc12 = texture(iChannel0,u+vec2(0.0,-step));\n    \n    //Derivate in x\n    float f0 = (cc00.x-cc02.x)/(2.0*0.001);\n    \n    //Derivate in y\n    float f1 = (cc10.x-cc12.x)/(2.0*0.001);\n\t\n    //Visualization (abs(dy)+abs(dx))\n\tc=vec4(smoothstep(0.0,1.0,f1)+smoothstep(0.0,1.0,f0));\n}","name":"Image","description":"","type":"image"}]}