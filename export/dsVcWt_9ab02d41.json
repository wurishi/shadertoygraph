{"ver":"0.1","info":{"id":"dsVcWt","date":"1696789842","viewed":31,"name":"08. Toad","username":"Ladus","description":"Inktober 2023 Day 8. Just a trippy toadstool.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["toad","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  Function from Iñigo Quiles - https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n// Function from Iñigo Quiles - https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\nfloat sdCircle(vec2 uv, float radius) {\n    return length(uv) - radius;\n}\n\nvec2 normalizeScreenSpace(vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.x -= 1.-(iResolution.y/iResolution.x);\n    uv = (uv - vec2(0.5))*2.;\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = normalizeScreenSpace(fragCoord);\n    float loopingTime = fract(iTime/5.);\n    \n    // Create mushroom sdf\n    float stemScale = 0.7 + (sin(loopingTime*3.1415)*0.3); // stem\n    vec2 mushroomS = uv + vec2(0.,0.5*stemScale);\n    float stem = sdSegment(mushroomS, vec2(0.,0.), vec2(0.,0.4*stemScale))-0.2*stemScale;\n    \n    float capScale = 1. + (sin(loopingTime*3.1415)*0.3); // cap\n    vec2 capS = (uv * capScale) + vec2(0.,0.5);\n    float cap = sdCircle(capS + vec2(0.,-2.2*capScale), 1.9*capScale);\n    cap = max(cap, sdCircle(capS + vec2(0.,-0.4), .6));\n    float mushsdf = min(cap,stem);\n    \n    vec3 col = vec3(0.);\n    \n    float range = 0.05;\n    float v = 0.;\n    for(float start = 0.0; start < 2.0; start += 0.075){\n        //v += step(start, abs(mushsdf+animatedOffset)) * (1.-step(start+range*(start*5.), mushsdf+animatedOffset));\n        \n        \n        float id = (floor((max(mushsdf, 0.) + loopingTime) * 10.)/30.);\n        v = fract((max(mushsdf, 0.) + loopingTime) * 10.);\n        \n        col = vec3(id,id,id);\n        \n        col = hsb2rgb(vec3(fract(id+loopingTime)*5.33,1.,1.));\n        //col = hsb2rgb(vec3(v+(loopingTime)+id/0.1,1.,1.));\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}