{"ver":"0.1","info":{"id":"XlKcWz","date":"1535804660","viewed":80,"name":"Animation128349278942","username":"fodiz","description":"An animation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926535897932384626433832795;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 backgroundColor = vec3(0.50, 0.44, 0.47);\n    vec3 sparkColorRed = vec3(0.86, 0.18, 0.17);\n    vec3 sparkColorYellow = vec3(0.93, 0.84, 0.17);\n    int sparksCount = 20;\n    vec2 uv = fragCoord / iResolution.xy; // iTime\n    // float c = texture(iChannel0, uv / vec2(10.0, 100.0) + vec2(0.0, -mod(iTime, 30.0) / 30.0)).r;\n    // float d = (c - 0.9) * 10.0;\n    vec3 color = backgroundColor;\n    \n    float d = 0.0;\n    for (int i = 0; i < sparksCount; i++) {\n        // vec2 h = texture(iChannel0, vec2(float(i) / float(sparksCount), mod(iTime, 500.0) / 500.0)).xy * 2.0 - 1.0;\n        // vec2 h = vec2(0, cos(mod(iTime, 500.0) / 500.0));\n        vec2 k = vec2(texture(iChannel0, vec2(float(i) / float(sparksCount), 0.0)).x * 2.0 - 1.0, 0.0);\n        float speed = 0.5 + float(i) / float(sparksCount) * 2.0;\n        vec2 c = mod(k + vec2(0.5 + cos(iTime / 3.0 + float(i) / float(sparksCount)) * 0.5, mod(iTime, speed) / speed + float(i) / float(sparksCount)), 1.0);\n        // float skew = 0.7 + texture(iChannel0, vec2(float(i) / float(sparksCount), 0.0)).z * 0.3;\n        // float skew = -c.x * 2.0 + 1.0;\n        // float angle = 2.3;\n        // float skew = \n        // d += 1.0 - clamp(distance(c * vec2(10.0, 1.0), uv * vec2(10.0, 1.0)), 0.0, 0.03) / 0.03;\n        // d += 1.0 - clamp(distance(c, uv), 0.0, 0.03) / 0.03;\n        vec2 mul = vec2(iResolution.x / iResolution.y, 1.0);\n        vec2 pos = c * mul - uv * mul;\n        float angle = (c.x * -2.0 + 1.0) * 0.3 + cos(iTime + float(i) / float(sparksCount)) * 0.3;\n        mat2 mat = mat2(\n            cos(angle), -sin(angle),\n            sin(angle), cos(angle)\n        );\n        vec2 rotated = mat * pos;\n        vec2 scaled = rotated / vec2(0.2 - float((i + sparksCount / 2) % sparksCount) / float(sparksCount) * 0.15, 1.0);\n        // d += distance(scaled, vec2(0.0, 0.0)) < 0.02 ? 1.0 : 0.0;\n        // d += distance(c * mul, vec2(uv.x - uv.y * skew, uv.y) * mul) < 0.03 ? 1.0 : 0.0;\n        float d = clamp(0.04 - distance(scaled, vec2(0.0, 0.0)), 0.0, 0.03) / 0.03;\n        color = mix(color, mix(sparkColorRed, sparkColorYellow, float(i) / float(sparksCount)), d);\n    }\n   \n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen (cos(iTime) + 1.0) / 2.0\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}