{"ver":"0.1","info":{"id":"sst3Rj","date":"1630248341","viewed":495,"name":"Smaller 2D Rotation","username":"KilledByAPixel","description":"This is a demo of the smallest known way to apply a rotation in shader.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["2d","texture","rotate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 o, vec2 p)\n{\n    // normalize uv around 0\n    p = ( p - .5 * iResolution.xy ) / iResolution.y;\n    \n    // angle to rotate by\n    float a = iTime*.1;\n    \n    // rotate uv by the angle\n    p = p*cos(a) + vec2(-p.y,p)*sin(a);\n\n    // set out color\n    o = texture(iChannel0, p - .5);\n    \n    // rotate the normal way\n    //float s = sin(a), c = cos(a);\n    //p *= mat2(c, -s, s, c);\n    \n    // this also works if you trust the optimizer\n    //p *= mat2(cos(a), -sin(a), sin(a), cos(a));\n    \n    // another small way with some precision loss\n    //p *= mat2(cos(a - vec4(0, 11, 33, 0)));\n}","name":"Image","description":"","type":"image"}]}