{"ver":"0.1","info":{"id":"mtj3Rt","date":"1673941624","viewed":95,"name":"FanCounter","username":"Feishiko","description":"-","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Thanks to FabriceNeyret2's Code Support!\n\nconst float PI = 3.1415926;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    \n    uv += vec2(0.0, 0.22);\n\n    vec2 toCenter = vec2(.5) - uv;\n    float angle = atan(toCenter.y, toCenter.x);\n    float radius = length(toCenter)*2.0;\n    //vec3 col = vec3(0.);\n    float hp = 100.*abs(sin(iTime));\n    \n    //vec3 gray = vec3(step(-0.01, -abs(0.49-radius)-abs(0.5-radius)));\n    \n    //vec3 gray = vec3(step(abs(0.495-radius), .01));\n    \n    //vec3 gray = vec3(smoothstep(4./iResolution.x, 0., abs(0.495-radius) - .01));\n    \n    vec3 gray = vec3(step(radius, .5)) - vec3(step(radius, .48));\n    \n    vec3 col = gray * vec3(.3);\n    \n    if(angle <= PI - ((100. - hp)/50.)*PI) {\n        col += gray*vec3(.8, .1, .1);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}