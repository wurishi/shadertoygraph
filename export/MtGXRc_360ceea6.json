{"ver":"0.1","info":{"id":"MtGXRc","date":"1485324631","viewed":116,"name":"Pulsing Circle Tiles","username":"hvillalobos","description":"I've been going through the Book of Shaders over the last few days and this is the result of playing with different shapes and ideas","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circletiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat filledCircle(vec2 st,vec2 center, float radius) {\n    return 1. - smoothstep(radius,radius + 0.01, dot(center - st, center - st) * 4.0);\n}\nfloat circle(vec2 st,vec2 center, float radius, float boundary) {\n    return smoothstep(radius,radius + 0.1, dot(center - st, center - st) * 4.0) \n        - smoothstep(radius,radius + 5., dot(center - st, center - st) * (4.0 - boundary));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat R = iResolution.y;\n    vec2 uv = (2.* fragCoord - R) / iResolution.x;\n    vec3 color2 = vec3(abs(uv.x), abs(uv.y) + 0.1 ,1.0);\n    uv = fract(uv * 4.);\n    uv.x -= .5;\n    uv.y -= 0.5;\n    float pulse = 15.*(0.5+(sin(iTime/2.0) * cos(iTime/2.0)));\n    vec2 center = vec2(0, 0.);\n    \n    vec3 color = color2 * filledCircle(uv, center, 0.05);\n    for (float i = 0.; i < .5; i += .0375) {\n        float a=circle(uv, center, abs(pulse * i), 0.055);\n        float b = filledCircle(uv, center, abs(pulse * (i + .025)));\n        color += mix(vec3(0.0), color2, (b)) * a;\n    }   \n\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}