{"ver":"0.1","info":{"id":"ttX3WN","date":"1556334489","viewed":122,"name":"Deinterleave 2","username":"Sgeo","description":"Deinterleave interleaved 3D textures.\n\nThis would be a lot more useful with custom textures.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sbs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    ivec2 coords = ivec2(uv * vec2(textureSize(iChannel0, 0)));\n    coords.x *= 2;\n    coords.y = coords.y/2*2; // Round down to even y coordinate.\n    \n    coords = coords%textureSize(iChannel0, 0);\n    \n    // 0 being bottom means 0 and all even pixel rows are the right size of the image.\n    // So if we're on the left, offset by 1 to get odd pixels.\n    \n    coords.y += 1 - int(step(0.5, uv.x));\n\n    // Output to screen\n    fragColor = texelFetch(iChannel0, coords, 0);\n}","name":"Image","description":"","type":"image"}]}