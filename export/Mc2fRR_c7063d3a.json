{"ver":"0.1","info":{"id":"Mc2fRR","date":"1724599485","viewed":63,"name":"SET game - just the cards","username":"FabriceNeyret2","description":"reference: https://en.wikipedia.org/wiki/Set_(card_game)\nhttps://www.gamesforyoungminds.com/blog/2018/1/4/set\nClick or Rewind to regenerate.","likes":7,"published":3,"flags":32,"usePreview":0,"tags":["permutations","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/Xc2Bzz\n// show the 81 permutations as SET game cards:\n// 4 parameters ( number, shape, color, filling ) with 3 value seach.\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, \n         U = 9.*u/R.y, A;\n    if ( U.x > 9. ) return;\n    O = T(vec2(int(U) + 9*int(U.y),0));    // read permutation\n    \n    U = fract(U)*2.-1.;                    // card coordinates\n    U *= 1.03;\n    float  d = 1.;\n    A = abs(U); \n    if ( max(A.x,A.y) < 1. ) {\n        U *=  vec2(2,1);\n        U.x =   O.w<1. ? U.x                      // amount\n              : O.w<2. ? mod(U.x,2.) - 1.\n              :          mod(U.x+.65,1.3) - .65;\n        A = abs( U + vec2(-U.y,U.x) )*.7;\n        d =  (  O.x<1. ? length(U)                // shape\n              : O.x<2. ? length(U-vec2(.2*sin(3.14/.4*U.y)-.8*U.y,0))\n              :          max(A.x,A.y)\n             ) - .4;\n        d =   O.y<1. ? abs(d)                     // filling\n            : O.y<2. ? min(abs(d),max(d,mod(u.y-.5,2.))) \n            :          d;\n        O = mix( vec4(.7),\n                 vec4(O.z==0.,O.z==1.,O.z==2.,1), // color\n                 smoothstep(54./R.y,0.,d - .01 )\n               );  \n    } else O-=O;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// permutations use https://www.shadertoy.com/view/Xc2Bzz\n\n#define shuffle0(i) ( int( mod(iTime*1e3,83.) +1. )*++i*i*i ) % 83\n\nint shuffle(int i) {    // --- shuffle integers in 0..80 range\n    i = shuffle0(i);\n    if ( i < 81 ) return i; // compress the extra range\n    i = shuffle0(i);\n    if ( i < 81 ) return i;\n    i = shuffle0(i); \n}\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    if ( u.y > 1. || u.x > 81. ) return;\n    \n    if ( iFrame < 1 || iMouse.w > 0. ) { // generate\n        int h = shuffle(int(u)); \n        O = vec4( h%3, h/3%3, h/9%3, h/27%3 );\n        return; \n     }\n     \n    O = T(u);                            // keep state\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(U) texelFetch( iChannel0, ivec2(U), 0 )\n","name":"Common","description":"","type":"common"}]}