{"ver":"0.1","info":{"id":"4lKGWy","date":"1476472931","viewed":186,"name":"Live coding session #1","username":"rohtie","description":"Coded live at Kunstnernes hus in Oslo. At a group improvisation performance. \n\nChannel 0 was originally linked to a microphone. So that the effects would react to the live music.\n\nThe session lasted approximately an hour. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":3,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat e(vec2 p) {\n    p.y /= tan(iTime);\n\n    return smoothstep(length(p), 0.0, 1.0);\n}\n\nvoid mainImage(out vec4 col, in vec2 p) {\n    p /= iResolution.xy;\n    p -= 0.5;\n    p.x *= iResolution.x / iResolution.y;\n\n    vec2 q = p;\n\n    float time = mod(iTime * 0.5, 15.0);\n\n    if (time < 2.0) {\n\n        float b = iTime;\n\n        p *= mat2(-sin(b), cos(b),\n                    cos(b), sin(b));\n\n\n        p.x /= abs(0.5 - texture(iChannel0, p.yy + cos(iTime)).r * 5.0 );\n\n            float a = iTime * 6.0;\n\n\n        p *= mat2(-sin(a), cos(a),\n                    cos(a), sin(a));\n\n\n        col.rgb = vec3(p.y + 0.25, 0.0, 0.0) + smoothstep(0.3985, 0.4, length(p));\n        col.r -= sin(iTime* 10.0);\n\n    \tcol.rgb -= e(p);\n\n\t    col.br -= texture(iChannel1, p).b * 3.0;\n\n        col.rgb += texture(iChannel2, p).rgb;\n\n\n    } else if (time < 4.0) {\n        p.x *= texture(iChannel0, p).r + tan(iTime);\n\n\n        col.rgb = vec3(0.0 + texture(iChannel2, p + iTime * 0.5).r);\n\n        col.r += texture(iChannel2, p + iTime * 0.5).r;\n\n        p += iTime;\n\n        col.gr += texture(iChannel1, p + iTime).r;\n\n        col.b *= texture(iChannel0, vec2(0.5)).r * 3.0;\n\n\n        q.x += 0.4 - texture(iChannel0, q.xx).r;\n        col.rgb *= smoothstep(0.5, 0.25, length(q));\n\n        col.g /= sin(iTime);\n\n            }\n        else if (time < 7.0) {\n\n\n\n        p.x /=  abs(0.5 - texture(iChannel0, p.yy + 0.5).r) * 0.15;\n\n        p.x = mod(p.x, sin(iTime));\n\n\n        float r = length(p);\n\n\n        r = smoothstep(0.5, 0.6, r);\n        col.rgb = vec3(r);\n\n        col.rgb += texture(iChannel1, p).rgb;\n\n    } else if (time < 10.0) {\n        float a = iTime * 20.0;\n\n        p *= mat2(-sin(a), cos(a),\n                   cos(a), sin(a));\n\n\n        p *= sin(iTime * 1.25) * 5.0;\n        p.x += sin(iTime * 200.0) * 0.25;\n        col.rgb = texture(iChannel1, p).rgb;\n\n        p.y *= tan(iTime);\n\n        col.rgb *= 5.0;\n        col.rgb -= texture(iChannel2, p).rgb;\n        col.r += 5.0;\n\n        col.rgb *= mod(iTime, 0.5);\n\n        col.rgb += smoothstep(0.5, 0.4 + mod(iTime, 0.75), length(q));\n\n    } else {\n        \n        p /= p.y;\n        col.rgb = vec3(texture(iChannel3, vec2(p.x + iTime * 0.1, p.y)).r);\n\n        q.x += sin(iTime * 2.0) * 0.15;\n        q.y += cos(iTime) * 0.15;\n\n        col.rgb += vec3(q.y * 5.0, q.y + 0.25, 0.0);\n\n        q *= sin(iTime) * 5.0;\n\n        col.rgb -= smoothstep(0.07, 0.065, length(q));\n\n    }\n\n}\n\n\n","name":"Image","description":"","type":"image"}]}