{"ver":"0.1","info":{"id":"NlSXRd","date":"1628396174","viewed":180,"name":"practice on mutiplepass","username":"jcyuan","description":"simulate particle movement with a vectorfield","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["vectorfield","mutiplepass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 p = texture(iChannel0, uv);\n    float s = length(p.gb / SPEED * .5 + .5);\n    vec3 col = clamp(mix(vec3(5., 1., 0.), vec3(1., 1., 0.), s) * p.x, vec3(0), vec3(1));\n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define SPEED 2.6\n\n// hash functions author: https://www.shadertoy.com/view/4djSRW\n\nfloat hash13(vec3 p3)\n{\n\tp3 = fract(p3 * .1031);\n    p3 += dot(p3, p3.zyx + 31.32);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define _TIME (iTime + 2000.)\n\nvec2 map_11(vec2 p) {\n    return p * 2. - 1.;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 pos = texture(iChannel0, uv).rg;\n    vec2 vec = map_11(texture(iChannel1, uv * .13 * sin(_TIME * .03) + cos(-_TIME * .07) * .1).rg) * SPEED;\n    float pb = step(hash13(vec3(uv, iFrame)), .0001);\n    vec2 op = step(pos, vec2(0.));\n    \n    fragColor = vec4(mix(\n        pos + vec,\n        (fragCoord + map_11(hash21(_TIME))) * pb,\n        op)\n    , vec);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    fragColor = vec4(0.);\n    \n    for (int i = -3; i <= 3; i++) {\n        for (int j = -3; j <= 3; j++) {\n            vec2 off = vec2(i, j) / iResolution.xy;\n            vec4 p = texture(iChannel0, uv + off);\n            vec2 v = step(abs(p.rg - fragCoord), vec2(.72));\n            if (v.x * v.y == 1.) {\n                fragColor = p;\n                break;\n            }\n        }\n    }\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 v = texture(iChannel0, uv);\n    fragColor = vec4(mix(1., .96 * texture(iChannel1, uv).x, step(v.x, 0.)), v.ba, 1.);\n}","name":"Buffer C","description":"","type":"buffer"}]}