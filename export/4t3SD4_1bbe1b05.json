{"ver":"0.1","info":{"id":"4t3SD4","date":"1479789147","viewed":319,"name":"Stepped Twist","username":"flaffol","description":"Stepped twisting effect applied to some radial stripes.","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","spiral","radial","twist"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COLOR_A vec4(0.400, 0.466, 0.533, 1.0)\n#define COLOR_B vec4(0.800, 0.800, 0.800, 1.0)\n\n#define STRIPES 5.0\n#define STEP_SIZE 0.02\n\n#define SPEED 0.80\n\nfloat getValue (in vec2 position)\n{\n    // Calculate vector from center, then correct for aspect ratio\n    vec2 radial_vector = (position.xy / iResolution.xy) - vec2(0.5, 0.5);\n    radial_vector.x *= iResolution.x / iResolution.y;\n    \n    // Calculate and adjust angle of this vector\n    float angle = atan(radial_vector.y, radial_vector.x);\n    angle += (1.0 - STEP_SIZE * floor(length(radial_vector) / STEP_SIZE)) * (iTime * SPEED);\n    \n    // Return the color of the stripe at the adjusted angle\n    return step(0.0, sin(angle * STRIPES));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Average 4 values for some lazy antialiasing\n    float value = getValue(fragCoord + vec2(-0.25, -0.25));\n    value += getValue(fragCoord + vec2(-0.25, 0.25));\n    value += getValue(fragCoord + vec2(0.25, 0.25));\n    value += getValue(fragCoord + vec2(0.25, -0.25));\n    value /= 4.0;\n    \n    // Apply averaged value to color gradient\n    fragColor = mix(COLOR_A, COLOR_B, value);\n}\n","name":"Image","description":"","type":"image"}]}