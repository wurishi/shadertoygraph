{"ver":"0.1","info":{"id":"WlBBRG","date":"1599153025","viewed":191,"name":"FFT Chaos Game","username":"rory618","description":"Interactive drawing of the Chaos game fractal, use the mouse to move around vertices, use the left and right arrows to add and remove points, and use the up and down arrows to change brightness.","likes":7,"published":1,"flags":48,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"FFT\" by rory618. https://shadertoy.com/view/4dGyWD\n// 2019-02-07 18:55:18\n\nvec3 col(float x){\n    return .5-.5*cos(.3*vec3(2,3,4)*x);\n}\n\nvoid mainImage( out vec4 O, in vec2 I ) {\n\t\n\n    vec2 t;\n    if(texelFetch(iChannel2,ivec2(32,2),0).x>0.){\n        t = texture(iChannel0, fract(I/R.xy+0.5)).xy;\n    } else {\n        t = texture(iChannel1, fract(I/R.xy+0.5)).xy;\n    }\n    O.xyz = vec3(.2*max(0.,1.+log(length( t ))));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pi 3.14159\n#define W(i,n) cexp(vec2(0,2.*pi*float(i)/float(n)))\n#define R iResolution\n#define fradix float(radix)\n#define T(c,x,y) texelFetch(c, ivec2(x,y), 0)\n#define SUM(expr, ind, len) \\\n    sum = vec2(0);\\\n    for(int ind = 0; ind < 80; ind++){\\\n        if (ind >= len) break;\\\n        sum += expr;\\\n    }\nvec2 sum;\n\nint x_N0;\nint y_N0;\nint x_N1;\nint y_N1;\n\nfloat factor(float x){\n    x = floor(x);\n    float f = floor(sqrt(x));\n    while(fract(x/f)>.5/x){f--;}\n    return x/f;\n}\n\n//#define auto_1080p\n\nvoid setRadix(vec3 R){\n    \n\t#ifdef auto_1080p\n    \tx_N0 = 40;\n    \tx_N1 = 48;\n        y_N0 = 30;\n        y_N1 = 36; \n    #else\n        x_N0 = int(R.x/factor(R.x));\n        y_N0 = int(R.y/factor(R.y));\n        x_N1 = int(R.x)/x_N0;\n        y_N1 = int(R.y)/y_N0;\n    #endif\n    \n}\n\nvec2 cprod(vec2 a, vec2 b){\n    return mat2(a,-a.y,a.x) * b;\n}\n\nvec2 cis(float t){\n    return cos(t - vec2(0,pi/2.));\n}\nvec2 cexp(vec2 z) {\n    return exp(z.x)*cis(z.y);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    if(iFrame<3){\n        if(floor(I)==vec2(0)){\n            O.x = 3.;\n            O.y = 1.;\n        } else if(floor(I)==vec2(1,0)){\n            O.xy = vec2(-1);\n        } else if(floor(I)==vec2(2,0)){\n            O.xy = vec2(1,-1);\n        } else if(floor(I)==vec2(3,0)){\n            O.xy = vec2(-1,1);\n        }\n    } else {\n        O.xy = texelFetch(iChannel0, ivec2(I), 0).xy;\n        vec2 m = (iMouse.xy-R.xy/2.)/R.y*2.3333333;\n        if(iMouse.z>0.){\n    \t\tint N = int(texelFetch(iChannel0, ivec2(0),0).x);\n            float md = 1e2;\n            int selected = 0;\n            for(int k = 0; k < N; k++){\n                vec2 v = texelFetch(iChannel0, ivec2(1+k,0),0).xy;\n                if(length(v-m) < md){\n                    md = length(v-m);\n                    selected = k;\n                }\n            }\n            if(floor(I)==vec2(1+selected,0)){\n                O.xy = m;\n            }\n        }\n        if(floor(I)==vec2(0) && texelFetch(iChannel1, ivec2(37,1),0).x>.5){\n            O.x--;\n        }\n        if(floor(I)==vec2(0) && texelFetch(iChannel1, ivec2(39,1),0).x>.5){\n            O.x++;\n        }\n        if(floor(I)==vec2(0) && texelFetch(iChannel1, ivec2(40,1),0).x>.5){\n            O.y/=1.5;\n        }\n        if(floor(I)==vec2(0) && texelFetch(iChannel1, ivec2(38,1),0).x>.5){\n            O.y*=1.5;\n        }\n    }\n    \n    \n    \n    setRadix(R);\n    O.zw = vec2(0);\n    int x = int(I.x);\n    int y = int(I.y);\n    \n    int n = (x/x_N1);\n    SUM( cprod(T(iChannel2, x%x_N1+i*x_N1, y).xy,W(-i*n,x_N0)),i,x_N0 );\n    O.zw = cprod(sum, W(-(x%x_N1)*n,int(R.x)));\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\n\n\nvec2 spectrum( vec2 f, int iters)\n{\n    \n    int N = int(texelFetch(iChannel0, ivec2(0),0).x);\n    float A = texelFetch(iChannel0, ivec2(0),0).y;\n    \n    \n    vec2 spec = vec2(1,0);\n    float d = 1.;\n    \n    \n    for(int i = 0; i < iters; i++){\n        vec2 sum = vec2(0);\n        \n        for(int k = 0; k < N; k++){\n            vec2 v = texelFetch(iChannel0, ivec2(1+k,0),0).xy;\n            float a = mix(1./float(N),1.,smoothstep(1./R.y, 5./R.y, d));\n            sum += a*cos(dot(f,v.xy*d) + vec2(0,-1.5707));\n        }\n        d /= 2.;\n        spec = mat2(sum,-sum.y,sum.x)*spec;\n    }\n    return spec/30.*A;\n}\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 f= (mod(I-.5+R.xy/2.,R.xy)*2.-R.xy)/R.xy*R.y/1.5;\n    O.xy = spectrum(f,17);\n    \n    O.xy *= exp(-3./R.y/R.y*dot(f,f));\n    \n    \n    \n    \n    setRadix(R);\n    O.zw = vec2(0);\n    int x = int(I.x);\n    int y = int(I.y);\n    \n    int n = (x/x_N0);\n    SUM( cprod(T(iChannel0, (x%x_N0)*x_N1+i, y).zw,W(-i*n,x_N1)),i,x_N1 );\n    O.zw = sum;\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 O, in vec2 I )\n{\n\tsetRadix(R);\n    O = vec4(0);\n    int x = int(I.x);\n    int y = int(I.y);\n    \n    int n = (y/y_N1);\n    SUM( cprod(T(iChannel0, x, y%y_N1+i*y_N1).zw,W(-i*n,y_N0)),i,y_N0 );\n    O.xy = cprod(sum, W(-(y%y_N1)*n,int(R.y)));\n}\n","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    setRadix(R);\n    O = vec4(0);\n    int x = int(I.x);\n    int y = int(I.y);\n        \n    \n    int n = (y/y_N0);\n    SUM( cprod(T(iChannel0, x, (y%y_N0)*y_N1+i).xy,W(-i*n,y_N1)),i,y_N1 );\n    O.xy = sum/sqrt(R.x*R.y);\n}\n","name":"Buffer D","description":"","type":"buffer"}]}