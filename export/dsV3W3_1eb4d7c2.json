{"ver":"0.1","info":{"id":"dsV3W3","date":"1679144721","viewed":160,"name":"Hello world SDF","username":"akifotti","description":"a very basic approach to write something with sdfs. There is probably better ways to do it but hey it works","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nfloat sdCircle(in vec2 p, in float r )\n{\n    return length(p) - r;\n}\n\nfloat circle(in vec2 p, in vec2 c, in float s )\n{\n    p -= c;\n    float r = .01;\n    return smoothstep(r, r - 0.005, abs(sdCircle(p, s)));\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\nfloat segment( in vec2 p, in vec2 a, in vec2 b )\n{\n    float r = .01;\n    return smoothstep(r, r - 0.005, sdSegment(p, a, b));\n}\n\n\nfloat letterH(in vec2 p, in vec2 c, in float s)\n{\n    float dc = circle(p, c, s);\n    dc *= p.y < c.y ? 0.0 : 1.0;\n    float ds = segment(p, c - vec2(s, s), c + vec2(-s, 0.25));\n    float ds2 = segment(p, c - vec2(-s, s), c + vec2(s, 0));\n    float d = dc + ds + ds2;\n    return d;\n}\n\nfloat letterE(in vec2 p, in vec2 c, in float s)\n{\n    float dc = circle(p, c, s);\n    float ds = segment(p, c + vec2(-.02, 0.007), c + vec2(s, 0.007));\n    float d = dc + ds;\n    return (p.y < c.y && p.x > c.x + .08) ? 0.0 : d;\n    \n}\n\nfloat letterL(in vec2 p, in vec2 c, in float s)\n{\n    float d = segment(p, c + vec2(0, -s), c + vec2(0, 0.25));\n    return d;\n}\n\nfloat letterO(in vec2 p, in vec2 c, in float s)\n{\n    return circle(p, c, s);\n}\n\nfloat letterW(in vec2 p, in vec2 c, in float s)\n{\n    float d1 = segment(p, c, c + vec2(-0.05, -0.1));\n    float d2 = segment(p, c, c + vec2(0.05, -0.1));\n    float d3 = segment(p, c + vec2(-0.05, -0.1), c + vec2(-0.1, 0.1));\n    float d4 = segment(p, c + vec2(0.05, -0.1), c + vec2(0.1, 0.1));\n    return d1 + d2 + d3 + d4;\n}\n\nfloat letterR(in vec2 p, in vec2 c, in float s)\n{\n    float dc = circle(p, c, s);\n    dc *= p.y < c.y + .045 ? 0.0 : 1.0;\n    float ds = segment(p, c + vec2(-s + .01, -s), c + vec2(-s + .01, s));\n    return dc + ds;\n}\n\nfloat letterD(in vec2 p, in vec2 c, in float s)\n{\n    float dc = circle(p, c, s);\n    dc *= p.x > c.x + .075 ? 0.0 : 1.0;\n    float ds = segment(p, c + vec2(s - .025, -s), c + vec2(s - .025, 2.5*s));\n    return dc + ds;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    vec2 p = uv - 0.5;\n    p.x *= iResolution.x / iResolution.y;\n\n    float upY = .1;\n    float downY = -.2;\n    float d = letterH(p, vec2(-.6, upY), 0.1);\n    d += letterE(p, vec2(-.35, upY), 0.1);\n    d += letterL(p, vec2(-.2, upY), 0.1);\n    d += letterL(p, vec2(-.1, upY), 0.1);\n    d += letterO(p, vec2(0.05, upY), 0.1);\n    d += letterW(p, vec2(-.2, downY), 0.1);\n    d += letterO(p, vec2(.05, downY), 0.1);\n    d += letterR(p, vec2(.3, downY), 0.1);\n    d += letterL(p, vec2(.45, downY), 0.1);    \n    d += letterD(p, vec2(.6, downY), 0.1);    \n\n    // Output to screen\n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}