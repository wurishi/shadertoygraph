{"ver":"0.1","info":{"id":"DtBBWK","date":"1694467969","viewed":80,"name":"Sound Ornaments ","username":"altunenes","description":"from my daily reading :) :\nClifford A Pickover - The Pattern Book Fractals, Art and Nature-World Scientific\npage:370 chapter \nWilfried Weber - Sound Ornaments ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["soundornaments"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// first version:\nconst float TAU = 6.2831855\n;\n\nfloat implicit(float x, float y, float a1, float a2, float b1, float b2) \n{ \n    return b1 * sin(a1 * TAU * x) * sin(a2 * TAU * y) + b2 * sin(a2 * TAU * x) * sin(a1 * TAU * y);\n}\nfloat delf_delx(float x, float y, float a1, float a2, float b1, float b2) \n{ \n    const float dx=0.001;\n    return ( implicit(x+dx, y, a1, a2, b1, b2) - implicit(x-dx, y, a1, a2, b1, b2) ) / (2.*dx);\n}\nfloat delf_dely(float x, float y, float a1, float a2, float b1, float b2) \n{ \n    const float dy=0.001;\n    return ( implicit(x, y+dy, a1, a2, b1, b2) - implicit(x, y-dy, a1, a2, b1, b2) ) / (2.*dy);\n}\nvec2 gradient(float x, float y, float a1, float a2, float b1, float b2) \n{ \n    return vec2(delf_delx(x, y, a1, a2, b1, b2), delf_dely(x, y, a1, a2, b1, b2)); \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{          \n\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n    float t = iTime / 4.0;\n    float a1 = 3.0 + sin(t);\n    float a2 = 5.0 + cos(t);\n    float b1 = tanh(2.0 * t);\n    float b2 = tanh(2.0 * t);\n    vec2 g = gradient(uv.x, uv.y, a1, a2, b1, b2);\n    float unit = 25./iResolution.y;\n    float sharpVal = smoothstep(-unit, unit, abs(implicit(uv.x, uv.y, a1, a2, b1, b2)) / sqrt(g.x*g.x + g.y*g.y));\n    vec3 col = 0.5 + 0.5 * cos(iTime + vec3(0.6, 0.8, 1.0) + 2.0 * TAU * vec3(sharpVal));\n    fragColor = vec4(col,1.0);\n}\n\n//v2, and thanks again @Envy24 for derivatives\n\n/*\nconst float PI = 3.2831855;\n\nfloat implicit(float x, float y, float a1, float a2, float b1, float b2, float a3, float a4, float b3, float b4) \n{ \n    float n = b1 * sin(a1 * PI * x) * sin(a2 * PI * y);\n    float u = b2 * sin(a2 * PI * x) * sin(a1 * PI * y);\n    float r = b3 * sin(a3 * PI * x) * sin(a4 * PI * y);\n    float o = b4 * sin(a4 * PI * x) * sin(a3 * PI * y);\n    return n + u + r + o;\n}\n\nfloat delf_delx(float x, float y, float a1, float a2, float b1, float b2, float a3, float a4, float b3, float b4) \n{ \n    const float dx=0.001;\n    return ( implicit(x+dx, y, a1, a2, b1, b2, a3, a4, b3, b4) - implicit(x-dx, y, a1, a2, b1, b2, a3, a4, b3, b4) ) / (2.*dx);\n}\n\nfloat delf_dely(float x, float y, float a1, float a2, float b1, float b2, float a3, float a4, float b3, float b4) \n{ \n    const float dy=0.001;\n    return ( implicit(x, y+dy, a1, a2, b1, b2, a3, a4, b3, b4) - implicit(x, y-dy, a1, a2, b1, b2, a3, a4, b3, b4) ) / (2.*dy);\n}\n\nvec2 gradient(float x, float y, float a1, float a2, float b1, float b2, float a3, float a4, float b3, float b4) \n{ \n    return vec2(delf_delx(x, y, a1, a2, b1, b2, a3, a4, b3, b4), delf_dely(x, y, a1, a2, b1, b2, a3, a4, b3, b4)); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n    \n    float t = iTime / 4.0;\n\n    float a1 = 3.0 + 2.0 * sin(t);\n    float a2 = 5.0 + 2.0 * cos(t);\n    float a3 = 9.0 + 2.0 * sin(1.5 * t);\n    float a4 = 13.0 + 2.0 * cos(1.5 * t);\n    \n    float b1 = sin(2.0 * t); //dont forget to play with these values =)))\n    float b2 = cos(2.0 * t);\n    float b3 = sin(3.0 * t);\n    float b4 = cos(3.0 * t);\n    \n    vec2 g = gradient(uv.x, uv.y, a1, a2, b1, b2, a3, a4, b3, b4);\n    float unit = 25./iResolution.y;\n    float sharpVal = smoothstep(-unit, unit, abs(implicit(uv.x, uv.y, a1, a2, b1, b2, a3, a4, b3, b4)) / sqrt(g.x * g.x + g.y * g.y));\n    \n    vec3 col = 0.5 + 0.5 * cos(iTime + vec3(0.6, 0.8, 1.0) + 2.0 * PI * vec3(sharpVal));\n    fragColor = vec4(col,1.0);\n}*/","name":"Image","description":"","type":"image"}]}