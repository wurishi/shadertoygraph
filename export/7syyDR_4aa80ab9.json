{"ver":"0.1","info":{"id":"7syyDR","date":"1654673224","viewed":194,"name":"Web of Lights","username":"jarble","description":"An interconnected web of glowing rings.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["fractal","web"],"hasliked":0,"parentid":"ssyyDR","parentname":"Frost fractal pattern"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define c1 vec3(1.,0.5,1.5)\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n    for(int i=0;i<6;i++)\n    {\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        for(int k = 0; k < 2; k++){\n            uv += 1.+(t2.yx);\n            t2 = triangle_wave(uv.yx-.5,scale);\n            \n            //float num = 4.;\n            //t2.x += floor((fract(uv.x)*num))/num;\n            \n            t3 = triangle_wave(uv,scale);\n            //t3 *= -1.; //makes a star pattern\n            uv.yx = (t2-t3)/(scale);\n        }\n        col.x = min(((uv.y-uv.x)+col.x),col.x)/sqrt(2.);\n        col = (col+vec3(col.x))/sqrt(2.);\n    }\n    fragColor = vec4(-vec3(col),1.0);\n}\n","name":"Image","description":"","type":"image"}]}