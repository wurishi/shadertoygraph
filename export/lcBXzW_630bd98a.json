{"ver":"0.1","info":{"id":"lcBXzW","date":"1706086750","viewed":100,"name":"Dots on video","username":"ReavenTehDerg","description":"i did a thing i guess x)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["greenscreen","dot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define OFFSET_X 1\n#define OFFSET_Y 1\n#define DEPTH\t 5.\nvec3 texsample(const int x, const int y, in vec2 fragCoord)\n{\n    //copied from 4rknova because i am lazy\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy;\n\treturn texture(iChannel0, uv).xyz;\n}\n\n\nvec3 normal(in vec2 fragCoord)\n{\n    //copied from 4rknova because i am lazy\n\tfloat R = length(texsample( OFFSET_X,0, fragCoord));\n\tfloat L = length(texsample(-OFFSET_X,0, fragCoord));\n\tfloat D = length(texsample(0, OFFSET_Y, fragCoord));\n\tfloat U = length(texsample(0,-OFFSET_Y, fragCoord));\n\t\t\t\t \n\tfloat X = (L-R) * .5;\n\tfloat Y = (U-D) * .5;\n\n\treturn normalize(vec3(X, Y, 1. / DEPTH));\n}\n\nfloat circleMask(vec2 uv, float radius)\n{\n    float vL = length(uv);\n    float circle = smoothstep(radius, radius - 0.01, vL);\n    return circle;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 n = normal(fragCoord);\n    \n    vec2 uvCenter = ( fragCoord - .5* iResolution.xy ) / iResolution.y;  \n    \n    vec2 grid = (fract(uvCenter * 30.0) - 0.5);\n    grid = refract(grid, n.xy, 0.78);\n        \n    vec3 c = vec3(circleMask(grid, 0.3)) - circleMask(grid, 0.25) * vec3(0.3);\n    vec3 removeGreen = texture(iChannel0, uv).rgb - vec3(0.0, 0.6, 0.0);\n    float grayVideo = length(removeGreen);\n    float terminateBg = max(grayVideo - 0.2, 0.0);\n    float contrast = min(terminateBg * 5.0, 1.0);    \n    fragColor = vec4(contrast * c, 1.0);\n}","name":"Image","description":"","type":"image"}]}