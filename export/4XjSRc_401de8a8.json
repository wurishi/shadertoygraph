{"ver":"0.1","info":{"id":"4XjSRc","date":"1710879262","viewed":98,"name":"Texture Streaming","username":"Firepal","description":"Wait for it","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["loading","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fabrice Neyret's 196 chars golf\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2  R = iResolution.xy;\n          U -= .5*R;\n    float y = round( atan(U.y,U.x)/6.28 *8.)/8.;      \n    O =    mix( 1., .2, fract(y+iTime) )\n         * min(1.- length( U - .11*R.y * cos(y*6.28+vec2(0,11))) +.03*R ,1.).yyyy; \n}\n\n\n\n\n\n\n// Original version\n/*\nmat2 rotation2d(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n\n  return mat2(\n    c, -s,\n    s, c\n  );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    \n    float x = 1e20;\n    float y = -1.0;\n    int th = 8;\n    for (int i=0;i<th;i++) {\n        float yes = float(i)/float(th);\n        \n        vec2 fs = rotation2d(yes*3.1415*2.0) * uv;\n        fs = fs-vec2(0.0,0.11);\n        float test = length(fs*30.0);\n        if (test < 1.0) { y = yes; }\n        x = min(x,test);\n    }\n    \n    float bgshade = 0.1;\n    y = 1.0-y;\n    y += 0.99;\n    \n    float flippy = mix(bgshade*0.9+0.1,1.0,fract(y-iTime));\n    float pxw = 45./iResolution.y;\n    if (y >= -1.0) { flippy = mix(flippy,bgshade,smoothstep(1.0-pxw,1.0,x)); }\n    else { flippy = bgshade; }\n    \n    fragColor = vec4(vec3(flippy),1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}