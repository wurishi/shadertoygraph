{"ver":"0.1","info":{"id":"tlsXWf","date":"1564524448","viewed":195,"name":"bonzomatic test run #8","username":"Exca","description":"Testing bonzomatic for asm19 shader showdown.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["bonzomatic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 noise(vec2 p, vec3 bcol)\n{\n  \n  float t = iTime*0.2;\n  vec2 off1 = vec2( 0.3, 0.4)*t;\n  vec2 off2 = vec2( 0.2, -0.3)*t;\n  vec2 off3 = vec2( 0.1, 0.2)*t;\n  vec2 off4 = vec2( -0.1, 0.1)*t;\n  \n  \n  float n1 = texture(iChannel0, p+off1).r;\n  float n2 = texture(iChannel0, p+off2).r*0.75;\n  float n3 = texture(iChannel0, p+off3).r*0.5;\n  float n4 = texture(iChannel0, p+off4).r*0.25;\n  \n  float n = smoothstep( 0.15, 0.5, (n1+n2+n3+n4)/5.0);\n  return n * bcol;\n  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy;\n  vec2 ouv = uv;\n  uv *=2.;\n  uv -=1.;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  \n  vec3 col = vec3(0.);\n  \n  float b = texture(iChannel1, vec2(0.,0.1)).r*10.;\n  \n  vec3 bcol = mix( vec3(1., 0.6, 0.), vec3(0., 0.6, 1.), abs(sin(cos(iTime)+uv.y* uv.x + iTime+b)));\n  \n  float t = iTime;\n  \n  float n1 = sin(  uv.x +t)*0.5 + cos(uv.x*31.)*texture(iChannel1, ouv/3.+iTime).r*0.02;\n  float n2 = sin(  uv.x*2.0+t*1.0 )*0.4 + cos(uv.x*31.)*texture(iChannel1, ouv/3.+iTime).r*.03;\n  float n3 = sin(  uv.x*3.0+t*1.0 )*0.3 + cos(uv.x*31.)*texture(iChannel1, ouv/3.+iTime).r*.04;\n  float n4 = sin(  uv.x*4.0+t*1.0 )*0.2 + cos(uv.x*31.)*texture(iChannel1, ouv/3.+iTime).r*.05;\n  float n5 = sin(  uv.x*5.+t*1.0 )*0.1 + cos(uv.x*31.)*texture(iChannel1, ouv/3.+iTime).r*.06;\n  \n  n1 = uv.y > n1 ? length(uv.y-n1)*40. : 3.5 *length(uv.y-n1);\n  n2 = uv.y > n2 ? length(uv.y-n2)*60. : 3.5 *length(uv.y-n1);\n  n3 = uv.y > n3 ? length(uv.y-n3)*80. : 3.5 *length(uv.y-n1);\n  n4 = uv.y > n4 ? length(uv.y-n4)*100. : 3.5 *length(uv.y-n1);\n  n5 = uv.y > n5 ? length(uv.y-n5)*120. : 3.5 *length(uv.y-n1);\n  \n  col += bcol*0.5/n1+vec3(1.)*6./n1 * noise(uv*0.05,bcol);\n  col += bcol*0.5/n2+vec3(1.)*6./n2 * noise(uv*0.15,bcol);\n  col += bcol*0.5/n3+vec3(1.)*6./n3 * noise(uv*0.3,bcol);\n  col += bcol*0.5/n4+vec3(1.)*6./n4 * noise(uv*0.5,bcol);\n  col += bcol*0.5/n5+vec3(1.)*6./n5 * noise(uv*0.7,bcol);\n  \n  \n  \n  fragColor = vec4(col, 1.);\n}\n\n","name":"Image","description":"","type":"image"}]}