{"ver":"0.1","info":{"id":"ctyyWz","date":"1700073369","viewed":80,"name":"Matrix Angelcam","username":"Problematicar","description":"Following the \"Shader Art Coding Introduction\" Tutorial by Kishimisu.\n\nMy first shader, now with Webcam support!","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["tutorial","matrix","firstshader"],"hasliked":0,"parentid":"mtGyRw","parentname":"Matrix Angel"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv00 = fragCoord / iResolution.xy; //Original UV\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y; //Fractal Circle UV\n    vec2 uv0 = uv; //Circle UV\n    vec3 finalcol = vec3(0.0);\n    float time = iTime; //Animation Speed\n\n    // Access webcam texture\n    vec3 camcol = texture(iChannel0, uv00).rgb;\n    \n    for (float i = 0.0; i < 4.0; i++) {\n    \n        uv = fract(uv * 1.5) - 0.5;\n        float d = length(uv) * exp(-length(uv0 * 1.5));\n        float d0 = length(uv0);\n        d = sin(d * (i + abs(cos(time)) - time * 0.5) + time) / 8.0;\n        d = smoothstep(0.01 / d, 1.5, d);\n        \n        float colr = sin(time * 2.0) * 0.3 + (uv.x * sin(time) * 0.1);\n        float colg = 0.4 / d0 * 0.1 - (uv.y * sin(time) * 0.1);\n        float colb = cos(time * 2.0) * cos(time) * (d0 * sin(time) * 0.2);\n        if (i >= 3.0) colb = colr;\n        vec3 col = vec3(colr, colg, colb);\n        finalcol += col * (d + abs(cos(time) * 0.1));\n        \n        camcol = smoothstep(-.1,.9,camcol);\n    }\n    // Combine final color with webcam texture\n    camcol-= finalcol*2.;\n    finalcol -= camcol*finalcol;\n\n    fragColor = vec4(finalcol, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}