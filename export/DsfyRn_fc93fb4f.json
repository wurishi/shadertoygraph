{"ver":"0.1","info":{"id":"DsfyRn","date":"1698060778","viewed":29,"name":"Chromatic motion (playground)","username":"Konod","description":"Just a playground to test the mechanisms of the following shader by Xor:\nhttps://www.shadertoy.com/view/dlKSW3","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["chromalatency"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nJust a playground to test the mechanism of the following shader by Xor:\nhttps://www.shadertoy.com/view/dlKSW3\n*/\n//#define ALPHA_MIXING\n#define COLOR_MIX_NORMALIZATION\n\nvec4 colorMix[4] = vec4[4](\n    vec4(0.8f, 0.15f, 0.f, 0.f),\n    vec4(0.7f, 0.8f, 0.0f, 0.f),\n    vec4(0.6f, 0.6f, 0.1f, 0.f),\n    vec4(0.45f, 0.45f, 0.1f, 0.f)\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 texMotion = texture(iChannel0, uv);\n    \n    fragColor = texMotion.r * colorMix[0]\n                + texMotion.g * colorMix[1]\n                + texMotion.b * colorMix[2]\n                + texMotion.a * colorMix[3];\n\n    #ifdef COLOR_MIX_NORMALIZATION\n    vec4 colorMixSum = colorMix[0] + colorMix[1] + colorMix[2] + colorMix[3];\n    \n    //The next line is just a security, on glsl there is no risk of error with a division by 0, so you can erase it.\n    colorMixSum = max(colorMixSum, vec4(0.001f, 0.001f, 0.001f, 0.001f));\n    \n    fragColor /= colorMixSum;\n    #endif\n    \n    #ifndef ALPHA_MIXING\n    fragColor.a = 1.f;\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define CIRCLE(R, P) max(R*res.y - length(fragCoord - res*0.5 + res*P), 0.0)\n\n#define MOTION_NOISE 3.f\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    \n    float noise = fract(cos(dot(fragCoord, vec2(50., 37.)) + iTime) * 4e3);\n    float time = iTime + iTimeDelta * noise * MOTION_NOISE;\n    \n    float background = pow(texture(iChannel1, fragCoord/res.y + cos(fragCoord.yx/res + time) + time*vec2(1,4)).r, 4.)*0.8;\n        \n    float gray = background + CIRCLE(.07, .4*cos(time*vec2(3.9, 5)));\n    gray = min(1.f, gray);\n    \n    fragColor = vec4(gray, texture(iChannel0, fragCoord/res).r, texture(iChannel0, fragCoord/res).g, texture(iChannel0, fragCoord/res).b);\n}","name":"Buffer A","description":"","type":"buffer"}]}