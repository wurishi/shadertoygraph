{"ver":"0.1","info":{"id":"WdlXDS","date":"1552055577","viewed":410,"name":"Animated Sine Vornoi","username":"arthurstammet","description":"Animated Sine Vornoi - Inspired by https://www.youtube.com/watch?v=l-07BXzNdPw\nmy step by step tutorial\n","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["animation","vornoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Animated Sine Vornoi\n// my step by step tutorial\n// Inspired by https://www.youtube.com/watch?v=l-07BXzNdPw\n\n// create random numbers for x and y\nvec2 N22(vec2 p) {\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34,345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y; // -1 <> 1\n    \n    // Change values here ------------------------------------------------------\n    \n    float window = 0.9;\n    float t = (iTime+160.)*.1;\n    const float density = 100.;\n    float minDist = 50.;\n    \n    // -------------------------------------------------------------------------\n    \n\tfloat xFactor = (iResolution.x/iResolution.y)*window;\n    float m = 0.;\n    float cellIndex = 0.;\n    float Greyscale = 1.;\n\n    for(float i=0.; i<density; i++) {\n        vec2 n = N22(vec2(i));\n        vec2 p = sin(n*t);\n\t\tp.x *= xFactor;\n\t\tp.y *= window;\n        \n        float d = length(uv-p);\n        m += smoothstep(.02,.001,d);\n\n        if(d<minDist) {\n\t    \tminDist = d;\n            cellIndex = i;\n\t\t}\n    }\n\n    vec3 col = vec3(minDist);\t\n\n    fragColor = vec4(col*Greyscale, 1.0);\n}","name":"Image","description":"","type":"image"}]}