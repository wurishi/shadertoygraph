{"ver":"0.1","info":{"id":"3s3XRH","date":"1571597455","viewed":477,"name":"outrun","username":"psedge","description":"~a retro aesthetic concept NOW WITH MIC INPUT~","likes":4,"published":1,"flags":4,"usePreview":0,"tags":["outrun","vaporwave","synthwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 fade(vec3 fg, vec3 bg, float alpha) {\n    return mix(bg, fg, alpha);\n    return bg*(1.0-alpha) + fg*(min(1.0,alpha));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a = 0.0;\n    float h = iResolution.y;\n    float w = iResolution.x;\n    float distort = abs(sin(iTime/10.0));\n    float scale = h/450.0;\n\t\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat mic = texture( iChannel0, vec2(uv.x,1.0)).x;\n    vec3 col = vec3(0.15,0.0,0.15)*(uv.y+0.05)*distort;\n    \n    //sun drop\n    float distSun = distance(fragCoord, iResolution.xy*0.5-vec2(0.0,(-50.0)));\n    if (distSun < h*(2.5) && distSun > h*0.0) {\n        col = fade(col, vec3(0.4,0.24,0.4), distSun/h*(distort*6.0));\n    }\n    \n    //sun\n    if (distance(fragCoord, iResolution.xy*0.5-vec2(0.0,10.0)) < h*max(0.25+(distort/4.0), 0.1)) {\n        if (fragCoord.y < h/2.0 - 1.5*scale || fragCoord.y > h/2.0 + 3.0*scale) {\n            if (fragCoord.y < h/2.0 + 5.0*scale || fragCoord.y > h/2.0 + 22.0*scale) {\n                if (fragCoord.y < h/2.0 + 25.5*scale || fragCoord.y > h/2.0 + 35.5*scale) {\n                    if (fragCoord.y < h/2.0 + 42.0*scale || fragCoord.y > h/2.0 + 47.0*scale) {\n                        if (fragCoord.y < h/2.0 + 53.0*scale || fragCoord.y > h/2.0 + 55.5*scale) {\n                            if (fragCoord.y < h/2.0 + 62.0*scale || fragCoord.y > h/2.0 + 64.5*scale) {\n                                float maxSun = max(distort, 0.25);\n                                col = vec3(maxSun, maxSun, maxSun-0.2)*(uv[1]*5.0);\n                                \n                            }\n                        }\n                    }\n                }\n            }\n        }\n   \t}\n    \n    // waves\n    if (fragCoord.y*0.5 < cos(fragCoord.x*0.01)+h*(max(0.25, 0.225+mic/10.0))) {\n        col = vec3((1.0-distort)*0.3, 0.0, (1.0-distort)*0.3);\n\t\t//vec3 lineCol = 0.9-(uv.y*(min(0.6, max(0.5, distort)))*2.0)-vec3(distort, 0.85, 0.2);\n        vec3 lineCol = 0.7-(1.0*uv.y*(min(0.5, max(0.3, distort/2.0))))-vec3(distort/5.0, 0.65, 0.1);\n        float roadMod = 0.7 + (mic*2.0);\n        \n        // fg vert\n        //if (uv.x > (0.498+uv.y/250.0) && uv.x < (0.503-uv.y/250.0) && mod(uv.y+mod(iTime/5.0, 0.4), 0.15) > 0.1) {\n        if (uv.x > (0.498+uv.y/250.0) && uv.x < (0.503-uv.y/250.0)) {\n\t\t\tcol = lineCol * roadMod;\n        } else if (mod(fragCoord.x-w/2.0, h/1.89-fragCoord.y) < 2.25 && (uv.x < 0.25+uv.y/2.0 || uv.x > 0.79-uv.y/1.76)) {\n            col = lineCol;\n        }\n        \n\t\t// fg hoz\n        float c = 0.5*pow(0.5, (uv.y-0.1)*10.0);\n        float s = 0.625*pow(2.0, (uv.y-0.1)*10.0);\n        float d = min(0.02, c/8.0);\n        if (mod(uv.y+mod(iTime/s, c), c) < d && (uv.x < 0.2+uv.y/1.75 || uv.x > 0.8-uv.y/1.76)) {\n        \tcol = lineCol;\n        }\n        if (mod(uv.y+mod(iTime/s, c), c) < d && uv.x > 0.2+uv.y/1.75 && uv.x < 0.8-uv.y/1.76) {\n            col = lineCol * roadMod;\n        }\n        \n    }\n\n    fragColor = vec4(col,a);\n}\n","name":"Image","description":"","type":"image"}]}