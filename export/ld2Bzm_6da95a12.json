{"ver":"0.1","info":{"id":"ld2Bzm","date":"1499965536","viewed":144,"name":"Playing with fog","username":"Zibe","description":"My first ever attempt at Raymarching","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat map(vec3 p)\n{\n    return length(p) - 0.10;\n}\n\nfloat opRep( vec3 p, vec3 c )\n{\n    vec3 q = mod(p,c)-0.5*c;\n    return map( q );\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    \n    for(int i = 0; i < 32; ++i)\n    {\n        vec3 p = o + r * t;\n        float d = opRep(p, vec3(1., 0.5, 1.));\n        t += d * 0.5;\n    }\n    \n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 1.0));\n    vec3 o = vec3(sin(iTime) /2. , cos(iTime), iTime);\n    float t = trace(o, r);\n    \n    float fog = 1.0 / t;\n    \n    vec3 color = vec3(0., 0., (sin(iTime) + 2. ) / 2.) * fog;\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}