{"ver":"0.1","info":{"id":"wdlSWB","date":"1552195914","viewed":99,"name":"Rain fountain","username":"japoneris","description":"Rain pattern","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raining"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123);\n}\n\nfloat lining(vec2 uv, vec2 sc, float speed) {\n \tvec2 rescaled = uv.xy * sc.xy;\n    vec2 pos = vec2(floor(rescaled.x));\n    vec2 pos1 = vec2(floor(2.*rescaled.x));\n    \n    float pp = rescaled.y + 127. * (1. + 0.4*cos(iTime*random(pos1)))*random(pos1) + random(pos);\n    \n    return (floor(pp) /sc.y *0.01)  * fract(rescaled.y + speed*iTime*random(pos1) + random(pos));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.1, 0.1, lining(uv, vec2(40., 0.9), 1.));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}