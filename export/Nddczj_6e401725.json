{"ver":"0.1","info":{"id":"Nddczj","date":"1653754956","viewed":206,"name":"Backfisch point cloud","username":"Ossitech","description":"Point cloud reacting to music","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["sound","points"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define POINT_DISTANCE 75\n#define POINT_SIZE 20\n\nint points(vec2 pos, vec2 d)\n{\n    vec2 uv = (pos + d) / iResolution.xy;\n    uv *= 3.0;\n    \n    if(int(pos.x + d.x) % POINT_DISTANCE < POINT_SIZE && int(pos.y + d.y) % POINT_DISTANCE < POINT_SIZE)\n    {\n\nreturn 1;\n}\n\n\n    \n    return 0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    int mask = 0;\n    \n    mask += points(fragCoord, vec2(iTime * 300.0, 0.0));\n    //mask += points(fragCoord, vec2(iTime * 120.0, 30.0));\n    \n    if (mask > 0)\n    {\n        fragColor = texture(iChannel0, uv);\n    }\n    else\n    {\n        fragColor = vec4(0.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}