{"ver":"0.1","info":{"id":"NssSWN","date":"1618680983","viewed":487,"name":"Clouds by Darko","username":"omegasbk","description":"Quickly made some fog/clouds for my youtube lesson","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["clouds","valuenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Made by Darko Supe (omegasbk)\n\nfloat noise(vec2 uv)\n{\n    return fract(sin(uv.x * 113. + uv.y * 412.) * 6339.);\n}\n\nvec3 noiseSmooth(vec2 uv)\n{\n    vec2 index = floor(uv);\n    \n    vec2 pq = fract(uv);\n    pq = smoothstep(0., 1., pq);\n     \n    float topLeft = noise(index);\n    float topRight = noise(index + vec2(1, 0.));\n    float top = mix(topLeft, topRight, pq.x);\n    \n    float bottomLeft = noise(index + vec2(0, 1));\n    float bottomRight = noise(index + vec2(1, 1));\n    float bottom = mix(bottomLeft, bottomRight, pq.x);\n    \n    return vec3(mix(top, bottom, pq.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 sky = vec3(0.5, 0.7, 0.85) * ((1. - uv.y) + 1.5) / 2.;\n\n    \n    uv += iMouse.xy / 20.;\n    \n    uv.x += iTime / 40.;\n    \n    vec2 uv2 = uv;\n    uv2.x += iTime / 10.;\n    \n    vec2 uv3 = uv;\n    uv3.x += iTime / 30.;\n        \n    vec3 col = noiseSmooth(uv * 4.);\n    \n    col += noiseSmooth(uv * 8.) * 0.5;\n    col += noiseSmooth(uv2 * 16.) * 0.25;\n    col += noiseSmooth(uv3 * 32.) * 0.125;\n    col += noiseSmooth(uv3 * 64.) * 0.0625;\n    \n    \n    col /= 2.;   \n    \n    col *= smoothstep(0.2, .6, col);   \n    \n    col = mix(1. - (col / 7.), sky, 1. - col);    \n    \n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}