{"ver":"0.1","info":{"id":"NlB3z1","date":"1623316956","viewed":111,"name":"kbjh","username":"brackets1","description":"hvjkvj","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["nb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//---\nprecision highp float;\nfloat rand(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(mod(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t      dot(x, vec2(3.4562, 17.398))), vec2(3.14))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(mod(vec3(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)),\n                              dot(x, vec2(13.254, 5.867))), vec3(3.14))) * 43758.5453);\n}\n\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat perlin(vec2 uv, vec2 size, int iterations, float persistence, int seed) {\n\tvec2 seed2 = rand2(vec2(float(seed), 1.0-float(seed)));\n    float rv = 0.0;\n    float coef = 1.0;\n    float acc = 0.0;\n    for (int i = 0; i < iterations; ++i) {\n    \tvec2 step = vec2(1.0)/size;\n\t\tvec2 xy = floor(uv*size);\n        float f0 = rand(seed2+mod(xy, size));\n        float f1 = rand(seed2+mod(xy+vec2(1.0, 0.0), size));\n        float f2 = rand(seed2+mod(xy+vec2(0.0, 1.0), size));\n        float f3 = rand(seed2+mod(xy+vec2(1.0, 1.0), size));\n        vec2 mixval = smoothstep(0.0, 1.0, fract(uv*size));\n        rv += coef * mix(mix(f0, f1, mixval.x), mix(f2, f3, mixval.x), mixval.y);\n        acc += coef;\n        size *= 2.0;\n        coef *= persistence;\n    }\n    \n    return rv / acc;\n}\nvec2 transform(vec2 uv, vec2 translate, float rotate, vec2 scale, bool repeat) {\n \tvec2 rv;\n\tuv -= translate;\n\tuv -= vec2(0.5);\n\trv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;\n\trv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;\n\trv /= scale;\n\trv += vec2(0.5);\n    if (repeat) {\n\t\treturn fract(rv);\n\t} else {\n\t\treturn clamp(rv, vec2(0.0), vec2(1.0));\n\t}\t\n}float draw_profile_fill(vec2 uv, float y, float dy, float w) {\n\treturn 1.0-clamp(sin(1.57079632679-atan(dy))*(1.0-uv.y-y)/w, 0.0, 1.0);\n}\n\nfloat draw_profile_curve(vec2 uv, float y, float dy, float w) {\n\treturn 1.0-clamp(sin(1.57079632679-atan(dy))*abs(1.0-uv.y-y)/w, 0.0, 1.0);\n}vec3 blend_normal(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*c1 + (1.0-opacity)*c2;\n}\n\nvec3 blend_dissolve(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\tif (rand(uv) < opacity) {\n\t\treturn c1;\n\t} else {\n\t\treturn c2;\n\t}\n}\n\nvec3 blend_multiply(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*c1*c2 + (1.0-opacity)*c2;\n}\n\nvec3 blend_screen(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*(1.0-(1.0-c1)*(1.0-c2)) + (1.0-opacity)*c2;\n}\n\nfloat blend_overlay_f(float c1, float c2) {\n\treturn (c1 < 0.5) ? (2.0*c1*c2) : (1.0-2.0*(1.0-c1)*(1.0-c2));\n}\n\nvec3 blend_overlay(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_overlay_f(c1.x, c2.x), blend_overlay_f(c1.y, c2.y), blend_overlay_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nvec3 blend_hard_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*0.5*(c1*c2+blend_overlay(uv, c1, c2, 1.0)) + (1.0-opacity)*c2;\n}\n\nfloat blend_soft_light_f(float c1, float c2) {\n\treturn (c2 < 0.5) ? (2.0*c1*c2+c1*c1*(1.0-2.0*c2)) : 2.0*c1*(1.0-c2)+sqrt(c1)*(2.0*c2-1.0);\n}\n\nvec3 blend_soft_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_soft_light_f(c1.x, c2.x), blend_soft_light_f(c1.y, c2.y), blend_soft_light_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_burn_f(float c1, float c2) {\n\treturn (c1==0.0)?c1:max((1.0-((1.0-c2)/c1)),0.0);\n}\n\nvec3 blend_burn(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_burn_f(c1.x, c2.x), blend_burn_f(c1.y, c2.y), blend_burn_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_dodge_f(float c1, float c2) {\n\treturn (c1==1.0)?c1:min(c2/(1.0-c1),1.0);\n}\n\nvec3 blend_dodge(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_dodge_f(c1.x, c2.x), blend_dodge_f(c1.y, c2.y), blend_dodge_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nvec3 blend_lighten(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*max(c1, c2) + (1.0-opacity)*c2;\n}\n\nvec3 blend_darken(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*min(c1, c2) + (1.0-opacity)*c2;\n}\n\nvec3 blend_difference(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*clamp(c2-c1, vec3(0.0), vec3(1.0)) + (1.0-opacity)*c2;\n}\nvec3 fill_to_uv_stretch(vec2 coord, vec4 bb, float seed) {\n\tvec2 uv_islands = fract(coord-bb.xy)/bb.zw;\n\tfloat random_value = rand(vec2(seed)+bb.xy+bb.zw);\n\treturn vec3(uv_islands, random_value);\n}\n\nvec3 fill_to_uv_square(vec2 coord, vec4 bb, float seed) {\n\tvec2 uv_islands;\n\tif (bb.z > bb.w) {\n\t\tvec2 adjusted_coord = coord + vec2(0.0, (bb.z - bb.w) / 2.0);\n\t\tuv_islands = fract(adjusted_coord-bb.xy)/bb.zz;\n\t} else {\n\t\tvec2 adjusted_coord = coord + vec2((bb.w - bb.z) / 2.0, 0.0);\n\t\tuv_islands = fract(adjusted_coord-bb.xy)/bb.ww;\n\t}\n\tfloat random_value = rand(vec2(seed)+bb.xy+bb.zw);\n\treturn vec3(uv_islands, random_value);\n}const int seed_o8173 = 55079;\nconst float p_o8193_amount = 0.690000000;\nconst float p_o8174_radius = 2.190000000;\nconst float p_o8174_repeat = 4.000000000;\nconst float p_o8176_gradient_0_pos = 0.000000000;\nconst float p_o8176_gradient_0_r = 0.000000000;\nconst float p_o8176_gradient_0_g = 0.000000000;\nconst float p_o8176_gradient_0_b = 0.000000000;\nconst float p_o8176_gradient_0_a = 1.000000000;\nconst float p_o8176_gradient_1_pos = 0.442993000;\nconst float p_o8176_gradient_1_r = 0.550000012;\nconst float p_o8176_gradient_1_g = 0.550000012;\nconst float p_o8176_gradient_1_b = 0.550000012;\nconst float p_o8176_gradient_1_a = 1.000000000;\nconst float p_o8176_gradient_2_pos = 1.000000000;\nconst float p_o8176_gradient_2_r = 1.000000000;\nconst float p_o8176_gradient_2_g = 1.000000000;\nconst float p_o8176_gradient_2_b = 1.000000000;\nconst float p_o8176_gradient_2_a = 1.000000000;\nvec4 o8176_gradient_gradient_fct(float x) {\n  if (x < p_o8176_gradient_0_pos) {\n    return vec4(p_o8176_gradient_0_r,p_o8176_gradient_0_g,p_o8176_gradient_0_b,p_o8176_gradient_0_a);\n  } else if (x < p_o8176_gradient_1_pos) {\n    return mix(vec4(p_o8176_gradient_0_r,p_o8176_gradient_0_g,p_o8176_gradient_0_b,p_o8176_gradient_0_a), vec4(p_o8176_gradient_1_r,p_o8176_gradient_1_g,p_o8176_gradient_1_b,p_o8176_gradient_1_a), ((x-p_o8176_gradient_0_pos)/(p_o8176_gradient_1_pos-p_o8176_gradient_0_pos)));\n  } else if (x < p_o8176_gradient_2_pos) {\n    return mix(vec4(p_o8176_gradient_1_r,p_o8176_gradient_1_g,p_o8176_gradient_1_b,p_o8176_gradient_1_a), vec4(p_o8176_gradient_2_r,p_o8176_gradient_2_g,p_o8176_gradient_2_b,p_o8176_gradient_2_a), ((x-p_o8176_gradient_1_pos)/(p_o8176_gradient_2_pos-p_o8176_gradient_1_pos)));\n  }\n  return vec4(p_o8176_gradient_2_r,p_o8176_gradient_2_g,p_o8176_gradient_2_b,p_o8176_gradient_2_a);\n}\nconst float p_o8176_width = 0.300000000;\nconst float p_o8161_translate_x = 0.500000000;\nconst float p_o8161_translate_y = 0.500000000;\nconst float p_o8161_rotate = 0.000000000;\nconst float p_o8161_scale_x = 1.000000000;\nconst float p_o8161_scale_y = 1.000000000;\nconst int seed_o8162 = -56953;\nconst float p_o8162_scale_x = 4.000000000;\nconst float p_o8162_scale_y = 4.000000000;\nconst float p_o8162_iterations = 3.000000000;\nconst float p_o8162_persistence = 0.500000000;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nvec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (fragCoord-0.5*(iResolution.xy-vec2(minSize)))/minSize;\nfloat o8162_0_1_f = perlin((vec2(fract(p_o8174_repeat*atan((UV).y-0.5, (UV).x-0.5)*0.15915494309), min(0.99999, 2.0/p_o8174_radius*length((UV)-vec2(0.5))))), vec2(p_o8162_scale_x, p_o8162_scale_y), int(p_o8162_iterations), p_o8162_persistence, seed_o8162);\nfloat o8162_0_3_f = perlin((transform((vec2(fract(p_o8174_repeat*atan((UV).y-0.5, (UV).x-0.5)*0.15915494309), min(0.99999, 2.0/p_o8174_radius*length((UV)-vec2(0.5))))), vec2(p_o8161_translate_x*(2.0*o8162_0_1_f-1.0), p_o8161_translate_y*(2.0*o8162_0_1_f-1.0)), p_o8161_rotate*0.01745329251*(2.0*1.0-1.0), vec2(p_o8161_scale_x*(2.0*1.0-1.0), p_o8161_scale_y*(2.0*1.0-1.0)), true)), vec2(p_o8162_scale_x, p_o8162_scale_y), int(p_o8162_iterations), p_o8162_persistence, seed_o8162);\nvec4 o8161_0_1_rgba = vec4(vec3(o8162_0_3_f), 1.0);\nfloat o8176_0_1_f = draw_profile_curve((vec2(fract(p_o8174_repeat*atan((UV).y-0.5, (UV).x-0.5)*0.15915494309), min(0.99999, 2.0/p_o8174_radius*length((UV)-vec2(0.5))))), (dot((o8161_0_1_rgba).rgb, vec3(1.0))/3.0), (dot(o8176_gradient_gradient_fct((vec2(fract(p_o8174_repeat*atan((UV).y-0.5, (UV).x-0.5)*0.15915494309), min(0.99999, 2.0/p_o8174_radius*length((UV)-vec2(0.5))))).x+0.001).xyz, vec3(1.0/3.0))-dot(o8176_gradient_gradient_fct((vec2(fract(p_o8174_repeat*atan((UV).y-0.5, (UV).x-0.5)*0.15915494309), min(0.99999, 2.0/p_o8174_radius*length((UV)-vec2(0.5))))).x-0.001).xyz, vec3(1.0/3.0)))/0.002, max(0.0001, p_o8176_width));\nvec4 o8174_0_1_rgba = vec4(vec3(o8176_0_1_f), 1.0);\nfloat o8191_0_1_f = o8174_0_1_rgba.r;\nfloat o8191_1_2_f = o8174_0_1_rgba.g;\nvec4 o8193_0_s1 = vec4(vec3(o8191_0_1_f), 1.0);\nvec4 o8193_0_s2 = vec4(vec3(o8191_1_2_f), 1.0);\nfloat o8193_0_a = p_o8193_amount*1.0;\nvec4 o8193_0_2_rgba = vec4(blend_hard_light((UV), o8193_0_s1.rgb, o8193_0_s2.rgb, o8193_0_a*o8193_0_s1.a), min(1.0, o8193_0_s2.a+o8193_0_a*o8193_0_s1.a));\nvec4 o8173_0_bb = o8193_0_2_rgba;vec3 o8173_0_1_rgb = fill_to_uv_stretch((UV), o8173_0_bb, float(seed_o8173));\nfragColor = vec4(o8173_0_1_rgb, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}