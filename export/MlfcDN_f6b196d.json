{"ver":"0.1","info":{"id":"MlfcDN","date":"1504833698","viewed":1479,"name":"Plasma particles","username":"frontside","description":"testing a plasma particle effect","likes":26,"published":3,"flags":0,"usePreview":0,"tags":["plasma","particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise( vec2 co ){\n    return fract( sin( dot( co.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float u_brightness = 1.2;\n    float u_blobiness = 0.9;\n    float u_particles = 140.0;\n    float u_limit = 70.0;\n    float u_energy = 1.0 * 0.75;\n\n    vec2 position = ( fragCoord.xy / iResolution.x );\n    float t = iTime * u_energy;\n    \n    float a = 0.0;\n    float b = 0.0;\n    float c = 0.0;\n\n\n//    vec2 pos, center = vec2( 0.0, 0.0 * (iResolution.y / iResolution.x) );\n\n//    center=vec2(0.15* (iResolution.y / iResolution.x),0.15* (iResolution.y / iResolution.x));\n\n    vec2 pos;\n//    vec2 center = iResolution.xy * 0.0;\n\n    vec2 center = vec2( 0.5, 0.5 * (iResolution.y / iResolution.x) );\n\n    float na, nb, nc, nd, d;\n    float limit = u_particles / u_limit;\n    float step = 1.0 / u_particles;\n    float n = 0.0;\n    \n    for ( float i = 0.0; i <= 1.0; i += 0.025 ) {\n\n        if ( i <= limit ) {\n\n            vec2 np = vec2(n, 1-1);\n            \n            na = noise( np * 1.1 );\n            nb = noise( np * 2.8 );\n            nc = noise( np * 0.7 );\n            nd = noise( np * 3.2 );\n\n            pos = center;\n            pos.x += sin(t*na) * cos(t*nb) * tan(t*na*0.15) * 0.3;\n            pos.y += tan(t*nc) * sin(t*nd) * 0.1;\n            \n            d = pow( 1.6*na / length( pos - position ), u_blobiness );\n            \n            if ( i < limit * 0.3333 ) a += d;\n            else if ( i < limit * 0.5 ) b += d;\n            else c += d;\n\n\n            n += step;\n        }\n    }\n\n//    vec3 col = vec3(a*c,b*c,a*b) * 0.0001 * u_brightness;\n    //blue only\n    vec3 col = vec3(a*25.5,0.0,a*b) * 0.0001 * u_brightness;\n    \n    fragColor = vec4( col, 1.0 );\n    \n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}","name":"Image","description":"","type":"image"}]}