{"ver":"0.1","info":{"id":"XslfWl","date":"1498839812","viewed":710,"name":"Bubble sort visualization","username":"Zabidon","description":"This is just a proof of concept. Nothing more...","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["bubble","sort"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License: Do What The F**k You Want To But It's Not My Fault Public License v1 (WTFNMFPL-1.0)\n// Created by Osipov Kirill --- zabidon, KirillD503\n\n#define ARRAY_SIZE 100\n\n#define SORT_TYPE 1\n\n// SORT_TYPE == 0 --- bubble sort\n// SORT_TYPE == 1 --- \"optimized\" bubble sort\n#if SORT_TYPE == 0\n# define PARAM_COUNT 2\n#elif SORT_TYPE == 1\n# define PARAM_COUNT 4\n#endif\n\n#define DEBUG_DATA 0\n\nint rgba_to_val(vec4 rgba) {\n    return int(rgba.r * 256.);\n}\n\nvec4 val_to_rgba(int val) {\n    return vec4(float(val) / 256., 0, 0, 1);\n}\n\nint get_param_value(int id) {\n    vec2 place = vec2(float(id) / float(PARAM_COUNT) + 1. / iResolution.x, 0.25);\n    return rgba_to_val(texture(iChannel0, place));\n}\n\nint get_array_value(int id) {\n    vec2 place = vec2(float(id) / float(ARRAY_SIZE) + 1. / iResolution.x, 0.75);\n\treturn rgba_to_val(texture(iChannel0, place));\n}\n\nint get_array_value(int id, sampler2D sampler) {\n    vec2 place = vec2(float(id) / float(ARRAY_SIZE) + 1. / iResolution.x, 0.75);\n\treturn rgba_to_val(texture(sampler, place));\n}\n\nint get_array_index(vec2 uv) {\n    return int(floor(uv.x * float(ARRAY_SIZE)));\n}\n\nint get_param_index(vec2 uv) {\n    return int(floor(uv.x * float(PARAM_COUNT)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n#if DEBUG_DATA\n\tfragColor = texture(iChannel0, uv);\n#else \n    int id = int(floor(uv.x * float(ARRAY_SIZE)));\n    int value = get_array_value(id, iChannel0);\n    if (uv.y < float(value) / 256.) {\n        int swapped = get_param_value(0);\n        int index = get_param_value(1);\n# if SORT_TYPE == 1\n        int max_ind = get_param_value(3);\n# endif\n        if (id == index) {\n            fragColor = vec4(1, 0, 0, 1);\n# if SORT_TYPE == 1\n        } else if (id == max_ind + 1) {\n             fragColor = vec4(0, 0, 1, 1);\n#endif\n        } else {\n            fragColor = vec4(1);\n        }\n    } else {\n    \tfragColor = vec4(0);\n    }\n#endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SORT_TYPE 1\n#define ARRAY_SIZE 100\n#define DEBUG_DATA 0\n\n#if DEBUG_DATA\n\n# define PARAM_COUNT 5\n\n#else\n\n// SORT_TYPE == 0 --- bubble sort\n// SORT_TYPE == 1 --- \"optimized\" bubble sort\n# if SORT_TYPE == 0\n#  define PARAM_COUNT 2\n# elif SORT_TYPE == 1\n#  define PARAM_COUNT 4\n# endif\n#endif\n\nint rgba_to_val(vec4 rgba) {\n    return int(rgba.r * 256.);\n}\n\nvec4 val_to_rgba(int val) {\n    return vec4(float(val) / 256., 0, 0, 1);\n}\n\nint get_param_value(int id) {\n    vec2 place = vec2(float(id) / float(PARAM_COUNT) + 1. / iResolution.x, 0.25);\n    return rgba_to_val(texture(iChannel1, place));\n}\n\nint get_array_value(int id) {\n    vec2 place = vec2(float(id) / float(ARRAY_SIZE) + 1. / iResolution.x, 0.75);\n\treturn rgba_to_val(texture(iChannel1, place));\n}\n\nint get_array_value(int id, sampler2D sampler) {\n    vec2 place = vec2(float(id) / float(ARRAY_SIZE) + 1. / iResolution.x, 0.75);\n\treturn rgba_to_val(texture(sampler, place));\n}\n\nint get_array_index(vec2 uv) {\n    return int(floor(uv.x * float(ARRAY_SIZE)));\n}\n\nint get_param_index(vec2 uv) {\n    return int(floor(uv.x * float(PARAM_COUNT)));\n}\n\n//==================================================\n// BEGIN BUBBLE SORT\n//==================================================\nvoid init_bubble_sort(out vec4 fragColor, vec2 uv) {\n    if (uv.y > 0.5) {\n        int id = get_array_index(uv);\n        int value = get_array_value(id, iChannel0);\n        fragColor = val_to_rgba(value);\n    } else {\n        int param_index = get_param_index(uv);\n        if (param_index == 0) {\n            fragColor = val_to_rgba(0);\n#if SORT_TYPE == 1\n        } else if (param_index == 2) {\n            fragColor = val_to_rgba(0);\n        } else if (param_index == 3) {\n            fragColor = val_to_rgba(ARRAY_SIZE);\n#endif\n        } else {\n        \tfragColor = val_to_rgba(0);\n        }\n    }\n}\n\nvoid iterate_bubble_sort(out vec4 fragColor, vec2 uv) {\n    int swapped = get_param_value(0);\n    int index = get_param_value(1);\n\n#if SORT_TYPE == 0\n    if (index < ARRAY_SIZE - 1) {\n#else\n    // SORT_TYPE == 1\n    int max_n = get_param_value(2);\n\t\n    if (index < get_param_value(3)) {\n#endif\n        int cur_value = get_array_value(index);\n        int next_value = get_array_value(index + 1);\n        if (cur_value > next_value) {\n            // swap\n            if (uv.y > 0.5) {\n                int id = get_array_index(uv);\n                if (index == id) {\n                    fragColor = val_to_rgba(next_value);\n                } else if (index + 1 == id) {\n                    fragColor = val_to_rgba(cur_value);\n                } else {\n                    fragColor = texture(iChannel1, uv);\n                }\n            } else {\n                int param_index = get_param_index(uv);\n                if (param_index == 0) {\n                    fragColor = val_to_rgba(1);\n#if SORT_TYPE == 1\n                } else if (param_index == 2) {\n                    if (max_n < index) {\n                    \tfragColor = val_to_rgba(index);\n                    } else {\n                        fragColor = texture(iChannel1, uv);\n                    }\n                } else if (param_index == 3) {\n                    fragColor = texture(iChannel1, uv);\n#endif\n                } else {\n                    fragColor = val_to_rgba(index + 1);\n               \t}\n            }\n        } else {\n            // don't swap\n            if (uv.y > 0.5) {\n                fragColor = texture(iChannel1, uv);\n            } else {\n                int param_index = get_param_index(uv);\n                if (param_index == 0) {\n                    fragColor = texture(iChannel1, uv);\n#if SORT_TYPE == 1\n                } else if (param_index == 2 || param_index == 3) {\n                    fragColor = texture(iChannel1, uv);\n#endif\n                } else {\n                    fragColor = val_to_rgba(index + 1);\n               \t}\n            }\n        }\n    } else {\n        if (uv.y > 0.5) {\n            fragColor = texture(iChannel1, uv);\n        } else {\n        \tint param_index = get_param_index(uv);\n            if (param_index == 0) {\n                fragColor = val_to_rgba(0);\n#if SORT_TYPE == 1\n            } else if (param_index == 2) {\n                fragColor = val_to_rgba(0);\n            } else if (param_index == 3) {\n                fragColor = val_to_rgba(max_n);\n#endif\n            } else {\n                if (swapped > 0) {\n                    fragColor = val_to_rgba(0);\n                } else {\n                    fragColor = texture(iChannel1, uv);\n                }\n            }\n        }\n    }\n}\n//==================================================\n// END BUBBLE SORT\n//==================================================\n\n//==================================================\n// BEGIN DEBUG\n//==================================================\nvoid init_debug(out vec4 fragColor, vec2 uv) {\n\tif (uv.y > 0.5) {\n        int id = get_array_index(uv);\n        int value = get_array_value(id, iChannel0);\n        fragColor = val_to_rgba(value);\n    } else {\n        fragColor = vec4(floor(uv.x * float(PARAM_COUNT)) / float(PARAM_COUNT), 0,0,1);\n    }\n}\n\nvoid iterate_debug(out vec4 fragColor, vec2 uv) {\n    if (uv.y > 0.5) {\n        int id = get_array_index(uv);\n        int value = get_array_value(id, iChannel1);\n        fragColor = val_to_rgba(value);\n    } else {\n        int id = get_param_index(uv);\n        int param = get_param_value(id);\n        fragColor = val_to_rgba(param);\n    }\n}\n//==================================================\n// END DEBUG\n//==================================================\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pixel_size = 1. / iResolution.xy;\n\n#if DEBUG_DATA\n    if (iTime < 1.) {\n    \tinit_debug(fragColor, uv);\n    } else {\n        iterate_debug(fragColor, uv);\n    }\n#else\n# if SORT_TYPE == 0 || SORT_TYPE == 1\n    if (iTime < 1.) {\n        init_bubble_sort(fragColor, uv);\n    } else {\n        iterate_bubble_sort(fragColor, uv);\n    }\n# endif\n#endif\n}\n","name":"Buf A","description":"","type":"buffer"}]}