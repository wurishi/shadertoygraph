{"ver":"0.1","info":{"id":"3lSBRm","date":"1599585935","viewed":93,"name":"Twister test #1 meh","username":"dub","description":"Twister test #1 meh","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["twister"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define PQ 3.14159265359*0.5\n\nconst vec3[] colors = vec3[](\n\tvec3(1.0, 0.0, 0.0),\n\tvec3(0.0, 1.0, 0.0),\n\tvec3(0.0, 0.0, 1.0),\n\tvec3(1.0, 1.0, 0.0)\n);\n\nconst vec2 light = vec2(3.0, 2.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord*2.0/iResolution.y - vec2(iResolution.x/iResolution.y, 1.0);\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    \n    float p = iTime*sin(-iTime*0.5+uv.y)*0.1+uv.y*0.5+0.2+iTime*0.5;\n    \n    vec2 s = vec2(sin(p), cos(p));\n    for (int i=0;i<4;i++)\n    {\n    \tint j=(i+1)%4;\n        p+=PQ;\n    \tvec2 e = vec2(sin(p), cos(p));\n        \n        if(!(s.y<0.&&e.y<0.)&&uv.x>s.x&&uv.x<e.x)\n        {\n            // vec2 n = normalize(s+e);\n            float p = dot(normalize(s+e),normalize(light));\n            col = mix(colors[i],vec3(1.),p*0.7);\n            break;\n        }\n        s = e;\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}