{"ver":"0.1","info":{"id":"fsKSDh","date":"1634602180","viewed":138,"name":"Twisting Gears","username":"LoganLang","description":"Twisting Gears","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","pattern","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\n\nfloat sdCircle(vec2 st, float r) { \nreturn length(st) - r; \n} \n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat stroke(float x, float w){ \n    w *= .5; \n    return 1.-smoothstep(w-.01,w+.01,abs(x)); \n} \n\nfloat fill(float sdf){\n    return 1.-smoothstep(-.01,.01,sdf);\n}\n\nmat2 rotate2d(float angle){ \n    mat2 rot = mat2(cos(angle),-sin(angle), sin(angle),cos(angle)); \n    return rot; \n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(.4);\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv = (uv-vec2(1.,.5)) * rotate2d(iTime * .25);\n    uv = fract(uv);\n    float zoomMod = 6.;\n    uv *= zoomMod;\n    \n    float timeIndex = mod(iTime * 1.5, zoomMod);\n    for (int i = 0; i < 6; i++){\n        float j = float(i);\n        float rowIndex = step(j,uv.y) * 1.-step(j+1.,uv.y);\n        float colIndex = step(j,uv.x) * 1.-step(j+1.,uv.x);\n        \n        if (floor(timeIndex) < 3.) {\n            if (j == floor(timeIndex)) {\n                uv.x += rowIndex * -mod(timeIndex,1.);\n            }\n            if (mod(j+2.,zoomMod) == floor(timeIndex)) {\n                uv.x += rowIndex * mod(timeIndex,1.);\n            }\n        } else {\n            if (j == floor(timeIndex)) {\n                uv.y += colIndex * -mod(timeIndex,1.);\n            }\n            if (mod(j+2.,zoomMod) == floor(timeIndex)) {\n                uv.y += colIndex * mod(timeIndex,1.);\n            }\n        }\n    }\n    \n    vec2 st = (fract(uv)-.5)*2.;\n    \n    float turnMod = PI * .5;\n    for (int i = 0; i < 6; i++){\n        float j = float(i);\n        float rowIndex = step(j,uv.y) * 1.-step(j+1.,uv.y);\n        float colIndex = step(j,uv.x) * 1.-step(j+1.,uv.x);\n    \n        if (floor(timeIndex) < 3.) {\n            if (j == floor(timeIndex)) {\n                st = st * rotate2d(mod(timeIndex,1.) * turnMod * rowIndex);\n            }\n            if (mod(j+2.,zoomMod) == floor(timeIndex)) {\n                st = st * rotate2d(-mod(timeIndex,1.) * turnMod * rowIndex);\n            }\n        } else {\n            if (j == floor(timeIndex)) {\n                st = st * rotate2d(mod(timeIndex,1.) * turnMod * colIndex);\n            }\n            if (mod(j+2.,zoomMod) == floor(timeIndex)) {\n                st = st * rotate2d(-mod(timeIndex,1.) * turnMod * colIndex);\n            }\n        }\n    }\n    \n    float ring = abs(sdCircle(st, .4))-.12;\n    for(int i = 0; i < 8; i++){\n        float j = float(i);\n        st = st * rotate2d(PI*.25);\n        float square = sdBox(st-vec2(0.,.48),vec2(.07,.1))-.1;\n        ring = min(ring, square);\n    }\n    \n    col += fill(ring);\n    col = mix(col,vec3(.05),stroke(ring,.1));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}