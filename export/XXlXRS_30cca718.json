{"ver":"0.1","info":{"id":"XXlXRS","date":"1709665299","viewed":75,"name":"infinited arc loading","username":"chenxianming","description":"inspired from somewhere forgotten and dump to shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["loading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t atan(u.y, u.x)\n#define rot( a ) mat2( cos(a), sin(a), -sin(a), cos(a) )\n#define s 1. // size\n\nfloat arc( vec2 u ){\n    u *= rot( iTime * 2.2 );\n    \n    float b = 2.5 + cos( iTime ) * .65,\n          a = t < -b ? t : ( t > -b && t < -b + .1 ) ? -b : -3.14;\n\n    u *= rot( a );\n    \n    u.x -= s;\n\n    return smoothstep( .01, -.01, length(u) - s * .1 );\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    vec2 I = iResolution.xy, u = ( V * 4. - I.xy * 2. ) / I.y;\n    \n    U = vec4( arc(u) + arc( u * rot( 2.09 ) ) + arc( u * rot( 4.18 ) ) );\n}","name":"Image","description":"","type":"image"}]}