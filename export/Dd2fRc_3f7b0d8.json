{"ver":"0.1","info":{"id":"Dd2fRc","date":"1689960421","viewed":376,"name":"The Network","username":"srlechuga18","description":"Im just learning dont be rude.","likes":12,"published":1,"flags":64,"usePreview":0,"tags":["learning","net"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MstGWr","filepath":"https://soundcloud.com/lofi_girl/4-am-studysession?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/lofi_girl/4-am-studysession?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\nfloat DistLine(vec2 p,vec2 a, vec2 b){\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    float t = clamp(dot(pa,ba)/dot(ba, ba), 0., 1.);\n    return length(pa-ba*t);\n}\n\nfloat N21(vec2 p){\n    p = fract(p*vec2(123.43,456.43));\n    p += dot(p, p+23.34);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p){\n    float n = N21(p);\n    return vec2(n, N21(p+n));\n}\n\nvec2 GetPos(vec2 id, vec2 off){\n    vec2 n = N22(id + off) * iTime;\n    return off + sin(n) * .4;\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b){\n    float d = DistLine(p, a, b);\n    float m = S(.03, .01, d);\n    float d2 = length(a-b);\n    m *= S(1.2, .8, d2) * .5 + S(.05, .03, abs(d2 - .75));\n    return m;\n}\n\nfloat Layer(vec2 uv){\n    vec2 gv = fract(uv) - .5;\n    vec2 id = floor(uv);\n\n    float m = 0.;\n    \n    vec2 p[9];\n    int i = 0;\n    \n    for(float y = -1.; y <= 1.; y++){\n        for(float x = -1.; x <= 1.; x++){\n            p[i++] = GetPos(id, vec2(x,y));\n        }\n    }\n    \n    float t = iTime * 10.;\n    for(int i = 0; i < 9; i++){\n        m += Line(gv, p[4], p[i]);\n        vec2 j = (p[i] - gv) * 15.;\n        float sparkle = 1./dot(j,j);\n        \n        m += sparkle * (sin(t + fract(p[i].x) * 10.) * .5 + .5);\n    }\n    \n    m+= Line(gv, p[1], p[3]);\n    m+= Line(gv, p[1], p[5]);\n    m+= Line(gv, p[7], p[3]);\n    m+= Line(gv, p[7], p[5]);\n    \n    return m;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    vec2 mouse = (iMouse.xy / iResolution.xy)-.5;\n    \n    float grad = uv.y;\n    \n    float m = 0.;\n    float t = iTime * .1;\n    \n    float s = sin(t);\n    float c = cos(t);\n    mat2 rot = mat2(c, -s, s, c);\n    \n    uv *= rot;\n    mouse *= rot;\n    \n    for(float i = 0.; i < 1.; i+=1./4.){\n        float z = fract(i+t);\n        float size = mix(10., .5, z);\n        float fade = S(0.,.5, z) * S(1., .8, z);\n        m += Layer(uv * size + i * 20. - mouse) * fade;\n    }\n    \n    vec3 base = sin(t*10.*vec3(.345, .453, .123)) *.4 +.6 ;\n    vec3 col = m*base;\n    \n    float fft = texelFetch( iChannel0, ivec2(.7,0), 0 ).x;\n    grad *= fft * 1.;\n    \n    col -= grad * base;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}