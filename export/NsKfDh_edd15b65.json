{"ver":"0.1","info":{"id":"NsKfDh","date":"1659112458","viewed":90,"name":"Iterated Affine Transform","username":"Sent","description":"Sum repeated affine transform of coords.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N_ITER  5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    uv *= 1.5;\n    \n    float phi = .5 * 3.1415 + .1*iTime;\n    float cp = cos(phi);\n    float sp = sin(phi);\n    float a = 1.;\n    //a = 100.; // Old screen noise type effect\n    vec2 s = a*vec2(.8, .8+.1*cos(.1*iTime));\n    mat2 A = mat2(s.x*cp, -s.y*sp, s.x*sp, s.y*cp);\n    //mat2 A = mat2(1., -1., 1., 1.);\n    vec2 b = vec2(0.);\n    \n    vec3 col = vec3(0.);\n    col.rg += sin(10.*3.1415*uv.xy);\n    for (int i = 0; i < N_ITER; ++i) {\n        uv = A*uv + b;\n        col.rg += sin(10.*3.1415*uv.xy);\n    }\n    col /= float(N_ITER);\n\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}