{"ver":"0.1","info":{"id":"stfGWn","date":"1621866581","viewed":274,"name":"Pokemon \"Gose\"","username":"kithy","description":"Pokemon No.092 \"Gose\".\nhttps://zukan.pokemon.co.jp/detail/092","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["raymarching","texture","volumetric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 64\n#define EPS 0.01\n#define PI 3.141592\n#define TWO_PI 6.28318\n\nmat2 rot(float a){\n\tfloat s=sin(a);\n\tfloat c=cos(a);\n\treturn mat2(c,-s,s,c);\n}\n\nfloat Circle(vec2 uv,vec2 p,float r,float blur){\n\tfloat d=length(uv-p);\n\tfloat c=smoothstep(r,r-blur,d);\n\treturn c;\n}\n\nfloat Oval(vec2 uv,vec2 p,float r,float blur){\n\tfloat d=length(uv-p);\n\tfloat c=smoothstep(r,r-blur,d);\n\treturn c;\n}\n\nfloat Eye(vec2 uv,vec2 p,float r,float blur){\n\tvec2 st=vec2(0.0,0.4);\n\tfloat rect=step(max(abs(uv-p).x*0.4,abs(uv-st).y),0.2);\n\tfloat circle=length(uv-p);\n\tfloat c=max(rect,circle);\n\tc=smoothstep(r,r-blur,c);\n\treturn c;\n}\n\nfloat Mouth(vec2 uv,vec2 p,float r,float blur){\n\tvec2 st=vec2(0.0,0.1);\n\tuv*=rot(PI);\n\tfloat rect=step(max(abs(uv-p).x*0.2,abs(uv-st).y),0.2);\n\tfloat circle=length(uv-p);\n\tfloat c=max(rect,circle);\n\tc=smoothstep(r,r-blur,c);\n\treturn c;\n}\n\nfloat sdSphere(vec3 p){\n\treturn length(p)-1.0;\n}\n\nvec3 getNormal(vec3 p){\n\treturn normalize(vec3(\n\t\tsdSphere(p+vec3(EPS,0.0,0.0))-sdSphere(p+vec3(-EPS,0.0,0.0)),\n\t\tsdSphere(p+vec3(0.0,EPS,0.0))-sdSphere(p+vec3(0.0,-EPS,0.0)),\n\t\tsdSphere(p+vec3(0.0,0.0,EPS))-sdSphere(p+vec3(0.0,0.0,-EPS))\n\t));\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec3 ro=vec3(0.0,0.0,-8.0);\n\tvec3 lookat=vec3(0.0,0.0,0.0);\n\tfloat zoom=5.0;\n\n\tvec3 f=normalize(lookat-ro);\n\tvec3 r=normalize(cross(vec3(0.0,1.0,0.0),f));\n\tvec3 u=cross(f,r);\n\tvec3 c=ro+f*zoom;\n\tvec3 i=c+uv.x*r+uv.y*u;\n\tvec3 rd=normalize(i-ro);\n\n\tvec3 p,normal;\n\tfloat dS;\n\tfloat dO;\n\n\tfor(int i=0;i<MAX_STEPS;i++){\t\n\n\t\tp=ro+rd*dO;\t\n\t\tdS=sdSphere(p);\n\t\tnormal=getNormal(p);\n\t\tif(dS<EPS)break;\t\n\t\tdO+=dS;\n\t}\n    \n    vec4 volumetric=texture(iChannel0,vec2(uv.x*0.2+0.5,uv.y*0.4+0.5));\n\t\n\tvec3 pokemon;\n\tp.y+=sin(iTime)*0.1;\n\tvec2 st=vec2(atan(p.x+TWO_PI,p.y)/PI*2.0,length(p));\n    \n\n\tif(dS<EPS){\n\t\tpokemon=vec3(0.6,0.1,0.5);\n\t\tfloat eye,blackEye,mouth;\n\n\t\teye+=Eye(st*p.xy*rot(PI*0.1),vec2(-0.43,0.1),0.3,0.01);//left eye\n\t\teye+=Eye(st*p.xy*rot(PI*-0.1),vec2(0.43,0.1),0.3,0.01);//right eye\n\n\t\tblackEye+=Oval(st*p.xy,vec2(-0.33,0.15),0.05,0.01);//left black eye\n\t\tblackEye+=Oval(st*p.xy,vec2(0.33,0.15),0.05,0.01);//left black eye\n\n\t\tmouth+=Mouth(st*p.xy,vec2(0.0,0.3),0.3,0.01);//mouth\n\n\t\tpokemon+=vec3(1.0)*eye+vec3(0.9,0.1,0.1)*mouth-vec3(1.0)*blackEye;\n\t\n\t}\n\t\n\tfloat diff=max(dot(normal,vec3(1.0,1.0,-1.0)),0.1);\n\n\tpokemon.x*=diff;\n\tpokemon.y*=diff;\n\tpokemon.z*=diff;\n\n\tfragColor=vec4(pokemon,1.0)+volumetric;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 m(float a){\n\tfloat s=sin(a);\n\tfloat c=cos(a);\n\treturn mat2(c,s,-s,c);\n}\n\nfloat hash(float n){\n\treturn fract(sin(n)*43758.5453);\n}\n\nfloat noise(in vec3 x){\n\tvec3 p=floor(x);\n\tvec3 f=fract(x);\n\n\tf=f*f*(3.0-2.0*f);\n\n\tfloat n=p.x+p.y*57.0+113.0*p.z;\n\n\tfloat res=mix(mix(mix(hash(n+0.0),hash(n+1.0),f.x),\n\t\t\tmix(hash(n+57.0),hash(n+58.0),f.x),f.y),\n\t\t\tmix(mix(hash(n+113.0),hash(n+114.0),f.x),\n\t\t\tmix(hash(n+170.0),hash(n+171.0),f.x),f.y),f.z);\n\n\treturn res;\n}\n\nfloat fbm(vec3 p){\n\tfloat f;\n\tf=0.500000*noise(p);\n\tp.xy*=m(iTime)*2.02;\n\tf+=0.25000*noise(p);\n\tp.yz*=m(iTime)*2.03;\n\tf+=0.1250*noise(p);\n\treturn f;\n}\n\nfloat scene(vec3 p){\n\treturn 0.1-length(p)*0.05+fbm(p*0.3);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec3 ro=vec3(0.0,0.0,-30.0);\n\tvec3 ta=vec3(0.0);\n\tvec3 ww=normalize(ta-ro);\n\tvec3 uu=normalize(cross(vec3(0.0,1.0,0.0),ww));\n\tvec3 vv=normalize(cross(ww,uu));\n\tvec3 dir=normalize(uv.x*uu+uv.y*vv+1.5*ww);\n\tvec4 color=vec4(0.0);\n\n\tconst int nbSample=64;\n\tconst int nbSampleLight=6;\n\n\tfloat zMax=40.0;\n\tfloat step=zMax/float(nbSample);\n\tfloat zMaxl=20.0;\n\tfloat stepl=zMaxl/float(nbSampleLight);\n\tvec3 p=ro;\n\tfloat t=1.0;\n\tfloat absorption=100.0;\n\tvec3 sun_direction=normalize(vec3(0.0,1.0,0.0));\n\n\tfor(int i=0;i<nbSample;i++)\n\t{\n\t\tfloat density=scene(p);\n\t\tif(density>0.0)\n\t\t{\n\t\t\tfloat tmp=density/float(nbSample);\n\t\t\tt*=1.0-tmp*absorption;\n\t\t\tif(t<=0.01)\n\t\t\t\tbreak;\n\n\t\t\t\tfloat tl=1.0;\n\t\t\t\tfor(int j=0;j<nbSampleLight;j++){\n\t\t\t\t\tfloat densityLight=scene(p+normalize(sun_direction)*float(j)*stepl);\n\t\t\t\t\tif(densityLight>0.0)\n\t\t\t\t\t\ttl*=1.0-densityLight*absorption/float(nbSample);\n\t\t\t\t\tif(tl<=0.01)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcolor+=vec4(0.5)*50.0*tmp*t+vec4(0.6,0.1,0.8,0.2)*60.0*tmp*t*tl;\n\t\t\t}\n\t\t\tp+=dir*step;\n\t\t}\n\t\tfragColor=color;\n}","name":"Buffer A","description":"","type":"buffer"}]}