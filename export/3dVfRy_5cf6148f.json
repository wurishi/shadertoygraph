{"ver":"0.1","info":{"id":"3dVfRy","date":"1608668491","viewed":76,"name":"distortion_pt2_23","username":"edwardbraed","description":"UV distortion.\nPress 1,2,3,4,5,6,7,8,9 for select gradient.\nHold 'space' for view gradient.","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["uvdistortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define m_p 3.14155\n#define norm(a) (a + 1.0) * 0.5\n\nvec2 calcAspect(vec2 iRes)\n{\n    vec2 aspect = vec2(float(iRes.x < iRes.y) * iRes.x / iRes.y,\n\t\t\t\t\t   float(iRes.y < iRes.x) * iRes.y / iRes.x);\n    aspect.x += float(aspect.x == 0.0);\n    aspect.y += float(aspect.y == 0.0);\n    return aspect;\n}\n\n//gradients from: https://www.shadertoy.com/view/tscBW2\n//------------------------------------------------------------\nfloat waves(vec2 p, vec2 s, float t)\n{\n    p *= s * m_p;\n    return norm(sin(sin(p.x - t) - p.y));\n}\n\n//------------------------------------------------------------\nfloat radial(vec2 p, float s, float t)\n{\n\treturn norm(sin(length(p) / s - t));\n}\n\n//------------------------------------------------------------\nfloat spiral(vec2 p, float s, float t)\n{\n    float e = exp(length(p)); /*can also try pow(l,l) or sqrt(l)*/\n    return norm(sin((exp(length(p)) - s * atan(p.y, p.x) - t) / s));\n}\n\n//------------------------------------------------------------\nfloat windmill(vec2 p, float c, float w, float t)\n{\n    float sl = sin(length(p)) * w;\n    return norm(sin((atan(p.x, p.y) / (1.0 / c) - sl) + t));\n}\n\n//------------------------------------------------------------\nfloat angles(vec2 p, float s, float t)\n{\n    return norm(sin(p.x * p.y / s - t));\n}\n\n//------------------------------------------------------------\nfloat radial_waves(vec2 p, float s, vec2 w, float t)\n{\n    float a = atan(p.x, p.y) / (1.0 / w.x);\n    return norm(sin(length(p) / s / norm(sin(a) + w.y) - t));\n}\n\n//------------------------------------------------------------\nfloat windmill_waves(vec2 p, float c, float w, float t)\n{\n    float sl = sin(length(p) * w - t);\n    return norm(sin((atan(p.x, p.y) / (1.0 / c) - sl) + t));\n}\n\n//------------------------------------------------------------\nfloat spiral_waves(vec2 p, float s, float w, float t)\n{\n    float l = exp(sin(length(p)));\n    float a = atan(p.y, p.x);\n    \n    return norm(sin((l - s * (a - sin(a * w - t) + t)) / s));\n}\n\n//------------------------------------------------------------\nfloat double_waves(vec2 p, vec2 s, float w, float t)\n{\n    p *= s * m_p;\n    p += norm(sin(p.y * w - t));\n    return norm(sin(sin(p.x - t)  - p.y));\n}\n//------------------------------------------------------------\n\n//thanks: https://www.shadertoy.com/view/XsXGD4\nvec2 dist2(vec2 uv, vec2 f, float rad, float power)\n{\n\tvec2 vf = f - uv;\n\tfloat d = length(vf);\n\treturn uv + (power * step(d, rad) * vf);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 aspect = calcAspect(iResolution.xy);\n    vec2 auv = uv * aspect  - aspect * 0.5;\n    \n    float g = 0.0;\n    float k = texelFetch(iChannel1, ivec2(0), 0).x;\n    if     (k == 0.0) g = waves(auv, vec2(8.0, 16.0), iTime);\n    else if(k == 1.0) g = radial(auv, 0.02, iTime);\n    else if(k == 2.0) g = windmill(auv, 8.0, 20.0, iTime);\n    else if(k == 3.0) g = spiral(auv, 0.02, iTime * 0.04);\n    else if(k == 4.0) g = angles(auv, 0.004, iTime);\n    else if(k == 5.0) g = radial_waves(auv, 0.001, vec2(8.0, 10.0), iTime);\n    else if(k == 6.0) g = double_waves(auv, vec2(8.0, 16.0), 1.2, iTime);\n    else if(k == 7.0) g = spiral_waves(auv, 0.02, 8.0, iTime); \n    else if(k == 8.0) g = windmill_waves(auv, 8.0, 40.0, iTime);\n    \n    //-============ uv distortion ==================-\n    vec2 rf = vec2(sin(iTime), cos(iTime)) * 0.15;\n    vec2 rpos = dist2(uv, uv - rf * 0.5, 1.5, g * 0.2);\n    //-=============================================-\n    \n    vec3 color = texture(iChannel0, rpos).xyz + pow(g * 0.68, 5.0);\n    color = mix(color, vec3(g), texelFetch(iChannel2, ivec2(32, 0), 0).x);\n    \n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float k = texelFetch(iChannel0, ivec2(0), 0).x;\n    //- Input process ------------------------------------------\n    if     (texelFetch(iChannel1, ivec2(49, 0), 0).x > 0.0) k = 0.0;\n    else if(texelFetch(iChannel1, ivec2(50, 0), 0).x > 0.0) k = 1.0;\n    else if(texelFetch(iChannel1, ivec2(51, 0), 0).x > 0.0) k = 2.0;\n    else if(texelFetch(iChannel1, ivec2(52, 0), 0).x > 0.0) k = 3.0;\n    else if(texelFetch(iChannel1, ivec2(53, 0), 0).x > 0.0) k = 4.0;\n    else if(texelFetch(iChannel1, ivec2(54, 0), 0).x > 0.0) k = 5.0;\n    else if(texelFetch(iChannel1, ivec2(55, 0), 0).x > 0.0) k = 6.0;\n    else if(texelFetch(iChannel1, ivec2(56, 0), 0).x > 0.0) k = 7.0;\n    else if(texelFetch(iChannel1, ivec2(57, 0), 0).x > 0.0) k = 8.0;\n    \n    fragColor = vec4(k);\n}","name":"Buffer A","description":"","type":"buffer"}]}