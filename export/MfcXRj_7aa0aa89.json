{"ver":"0.1","info":{"id":"MfcXRj","date":"1714141942","viewed":40,"name":"ex.08","username":"opqa","description":"keeping on patternizing","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["distortion","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define M_PI 3.1415926535897932384626433832795\n#define M_PI2 6.2831853071795864769252867675590\nprecision highp float;\n\n\nconst float k = sqrt(3.0);\nconst float tdt = 2. / 3.;\n\nfloat sdTriangle( in vec2 p, in float r )\n{\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat printTriangles( in vec2 p, in float divs, in vec2 patt, inout float a, inout float b)\n{\n    float f = fract((divs * .5)) * tdt;\n    vec2 np = mod(p - vec2(0., patt.y * (tdt - f)), patt);\n    np = mod(np, patt);\n    float d = abs(np.y);\n    b = np.y - patt.y  * .5;\n    np.y = abs(b);\n    d = min(d, np.y);\n    np.x = abs(np.x - patt.x * .5);\n    a = atan(np.y, np.x);\n    return min(d, sdSegment(np, vec2(0., 0), patt));\n}\n\nfloat BTw = .4;\nfloat divs = 3.;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.);\n\n    vec2 p = fragCoord.xy / iResolution.x - vec2(.5) * vec2(1., iResolution.y / iResolution.x);\n\n    float osc = sin(iTime * .5) * .5 + .5;\n\n    float BTr = BTw * .5;\n    float BTh = k * BTr;\n    float BTd = sdTriangle(p, BTr);\n    float d = 99.;//abs(BTd);\n    divs += abs(BTd) * .1 + osc;\n    float ang = atan(p.y, p.x) + sin(iTime * .3) + BTd * .01;\n    p = vec2(cos(ang), sin(ang)) * length(p);\n\n\n    float omp = (1.4 - length(p)) * 5.;\n\n    if (divs > 1.) {\n    //if (BTd < 0. && divs > 1.) {\n        vec2 patt = vec2(\n            BTw / pow(2., divs - 1.),\n            BTh / pow(2., divs - 2.)\n        );\n        float ompF = abs(BTd - .1) * (sin(iTime * .2) * 2.5 - 1.3333);\n        p = mix(p, p * omp , ompF);\n\n\n\n        float a = 0.;\n        float b = 0.;\n        float ba = atan(patt.y, patt.x);\n        d = min(d, printTriangles(p, divs, patt, a, b));\n        if (a < ba) {\n            col = b > 0.? vec3(.9,.9, abs(p.y) ) : vec3(.9,abs(p.x),.9);\n        } else {\n            col = b > 0.? vec3(abs(p.x),.9,.9) : vec3(.9,abs(p.y) ,abs(p.x));\n        }\n    }\n\n\n\n\n    fragColor = vec4(vec3(smoothstep(-.0, 0.001 * omp, d)) / omp + col * 1.2 - BTd  , 1.);\n}","name":"Image","description":"","type":"image"}]}