{"ver":"0.1","info":{"id":"fdGGRW","date":"1631129118","viewed":58,"name":"Basics of Fragment Shaders NT1","username":"yogo503","description":"For class","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 number1(vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    return vec4(uv.y,0,1,0);\n    \n}\n\nvec4 number2(vec2 fragCoord)\n{\n   vec2 uv = fragCoord/iResolution.xy;\n   vec4 val;\n   if (uv.x >.5)\n   {\n        val.r=1.0;\n   }\n    if (uv.x <.5)\n   {\n        val.g=.5;\n   }\n    if (uv.y >.5)\n   {\n        val.b=.5;\n   }\n    if (uv.y <.5)\n   {\n        val.b=.25;\n   }\n   return val;\n    \n}\n\nvec4 number3(vec3 color)\n{\n   float x = 0.5;\n   float magnitude = sqrt(color.r*color.r+color.g*color.g+color.b*color.b);\n    if (magnitude >= x)\n        return vec4(1,0,0,1.0);\n    else \n        return vec4(color,1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(.3,.2,.25);\n    //fragColor = number1(fragCoord);\n    fragColor = number2(fragCoord);\n    //fragColor = number3(color);\n}","name":"Image","description":"","type":"image"}]}