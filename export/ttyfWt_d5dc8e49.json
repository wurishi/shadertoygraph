{"ver":"0.1","info":{"id":"ttyfWt","date":"1615449609","viewed":70,"name":"shiyuelai的图像roll旋转","username":"shiyuelai","description":"图像roll旋转","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["roll"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.1415926;\n\nvec2 roll(vec2 currentPos, float angle)\n{\n     float Z = 1.0 / tan(15.0 * PI / 3.1415926);\n     float x = currentPos.x - 0.5;\n     float y = currentPos.y - 0.5;\n     y = y * iResolution.y / iResolution.x;\n     float z = 0.0;\n     vec2 offset;\n     offset.x = x * (Z - y * sin(angle) * cos(angle)) / Z ;\n     offset.y = y * Z / (Z * cos(angle) + y * sin(angle) * cos(angle));\n     float len = length(currentPos);\n     offset.y = offset.y * iResolution.x / iResolution.y;\n     return offset + vec2(0.5, 0.5);\n}\n\nfloat insideBox(vec2 v, vec2 bottomLeft, vec2 topRight) \n{\n    vec2 s = step(bottomLeft, v) - step(topRight, v);\n    return s.x * s.y;   \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // calculate new position\n    float angle = fract(iTime * 0.25) * PI* 2.0;\n    vec2 newPos = roll(uv, angle);\n  \n    // Output to screen\n    if(insideBox(newPos.xy, vec2(0.0), vec2(1.0)) == 1.0)\n    {\n       fragColor = texture(iChannel0, newPos);\n    }\n    else\n    {\n       fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}