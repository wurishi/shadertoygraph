{"ver":"0.1","info":{"id":"DlVyzV","date":"1700455182","viewed":51,"name":"mercator projection","username":"ylegall","description":"conformal, trippy, projection","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["projection","trippy","conformal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define TAU 6.28318530718\n#define PI 3.14159265359\n\nmat2 rot2D(float angle) {\n\t// angle *= PI / 180.0;\n    float s = sin(angle), c = cos(angle);\n    return mat2( c, -s, \n                 s,  c);\n}\n\nfloat grid(vec2 uv, vec2 scale) {\n    uv = sin(PI * uv * scale); \n    float v = uv.x * uv.y;\n    return smoothstep(1.,-1., v/fwidth(v));\n}\n\nvec3 spherical(vec2 uv, float r) {\n    float theta = -PI + TAU * uv.x;\n    float phi = mix(uv.y, -PI, PI);\n    float sp = sin(phi);\n    return vec3(\n        r * cos(theta) * sp,\n        r * sin(theta) * sp,\n        r * cos(phi)\n    );\n}\n\nvec2 mercator(vec3 xyz, float r) {\n    float lat = asin(xyz.z);\n    float lon = atan(xyz.y, xyz.x);\n    \n    return vec2(\n        r * lon,\n        r * log(tan(PI/4. + lat/2.))\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 grid_size = iResolution.xy / 256.;\n\n    vec3 xyz = spherical(uv, 1.);   \n    xyz.yz *= rot2D(0.5 * iTime);\n    xyz.xz *= rot2D(0.5 * iTime);\n\n    vec2 uv2 = mercator(xyz, 1.);\n\n    // grid\n    float c = grid(uv2, grid_size);\n\n    // Output to screen\n    fragColor = vec4(c, c, c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}