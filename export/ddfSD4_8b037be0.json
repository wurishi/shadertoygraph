{"ver":"0.1","info":{"id":"ddfSD4","date":"1668883277","viewed":48,"name":"First time using GLSL","username":"dingus","description":"random test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 maze(vec2 uv, float cx, float cy) {\n    vec4 r = vec4(0.0, 0.0, 0.0, 0.0);\n    vec4 w = vec4(1., 1., 1., 1.);\n    bool m1 = (uv.x+50.0 < 10.0+cx && uv.x+50.0 > iResolution.x-(10.0+cx)\n              && uv.y+60.0 < 30.0+cy && uv.y+60.0 > iResolution.y-(30.0+cy));\n    bool m2 = (uv.x+1040.0 < 1000.0+cx && uv.x+1040.0 > iResolution.x-(1000.0+cx)\n              && uv.y+100.0 < 30.0+cy && uv.y+60.0 > iResolution.y-(30.0+cy));\n    bool m3 = (uv.x+-20.0 < 10.0+cx && uv.x+-20.0 > iResolution.x-(10.0+cx)\n              && uv.y+60.0 < 30.0+cy && uv.y+60.0 > iResolution.y-(30.0+cy));\n    bool m4 = (uv.x+-70.0 < 50.0+cx && uv.x+-70.0 > iResolution.x-(50.0+cx)\n              && uv.y+40.0 < 10.0+cy && uv.y+40.0 > iResolution.y-(10.0+cy));\n    bool m5 = (uv.x+100.0 < 50.0+cx && uv.x+100.0 > iResolution.x-(50.0+cx)\n              && uv.y+40.0 < 10.0+cy && uv.y+40.0 > iResolution.y-(10.0+cy));\n    bool m6 = (uv.x+-1010.0 < 1000.0+cx && uv.x+-1010.0 > iResolution.x-(1000.0+cx)\n              && uv.y+100.0 < 30.0+cy && uv.y+60.0 > iResolution.y-(30.0+cy));\n    if (m1 || m2 || m3 || m4 || m5 || m6) {\n        r = w;\n    }\n    \n    return r;\n}\n\nvec4 player(vec2 uv, vec2 sc, vec2 pos, float cx, float cy) {\n    vec4 r = vec4(0.0, 0.0, 0.0, 0.0);\n    bool rect = (uv.x+pos.x < sc.x+cx && uv.x+pos.x > iResolution.x-(sc.x+cx)\n              && uv.y+pos.y < sc.y+cy && uv.y+pos.y > iResolution.y-(sc.y+cy));\n    if (rect) {\n        r = vec4(0.7, 0.7, 0.75, 0.0);\n    } else {\n        r = vec4(0.2, 0.2, 0.25, 0.0);\n    }\n    return r;\n}\n\nvec4 game(vec4 maze, vec4 player, vec2 pos) {\n    if (vec4(min(maze, player)) == vec4(0.7, 0.7, 0.75, 0.0)) {\n        return vec4(1.0, 0.0, 0.0, 0.0);\n    } else {\n        return vec4(maze+player);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy;\n    float cx = iResolution.x/2.0;\n    float cy = iResolution.y/2.0;\n    vec2 sc = vec2((sin(iTime*2.0)*10.0)+20.0, (cos(iTime*2.0)*10.0)+20.0);\n    vec2 pos = vec2(cx, cy)-iMouse.xy;\n    fragColor = game(maze(uv, cx, cy), player(uv, sc, pos, cx, cy), pos);\n}             ","name":"Image","description":"","type":"image"}]}