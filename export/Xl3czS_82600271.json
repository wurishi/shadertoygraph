{"ver":"0.1","info":{"id":"Xl3czS","date":"1532955923","viewed":674,"name":"cheap blue point distribution","username":"FabriceNeyret2","description":"loopless even random point distribution (like Poisson-disc) using the new bluenoise texture (left).\nRight:  whitenoise, for comparison.\ntry fullscreen.\n\nNB: trick valid only for low density (or grid appears), small shapes, and has poor dynamics control.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["noise","texture","shadertoy","bluenoise","short","poissondisc","bluenoisetexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cheap Poisson-disc approximation ( loopless ! )\n// Better than jittered-grid (as used in Voronoi shaders)\n\n// NB: Trick valid only for low density (or grid appears), small shapes, and has poor dynamics control.\n//     Improved here: https://www.shadertoy.com/view/4lcyRB\n\nfloat r = 8.,       // shape size. Trick: defines cell = shape BBox + trigger seed\n      d = 15./255.; // shape density. Keep small or you'll see grid structure.\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    O-=O;\n    if (U.x-.5 == R.x/2.) O.r++;                             // separator\n    float t = U.x < R.x/2.\n                  ? texelFetch(iChannel0,ivec2(U/r),0).x     // left: blue noise\n                  : texelFetch(iChannel1,ivec2(U/r),0).x;    // right: white noise\n    \n    if ( t< d ) O += smoothstep(1.,1.-4./r,length(2.*fract(U/r)-1.))    // disc shape\n                     *( .6 + .6 * cos( 6.28*t/d  + vec4(0,23,21,0) ) ); // hue: https://www.shadertoy.com/view/ll2cDc\n}","name":"Image","description":"","type":"image"}]}