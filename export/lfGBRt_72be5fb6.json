{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\nstruct color0 {\n \n   vec3 color;\n   float bw;\n  \n};\n\ncolor0 color;\n\nvec3 goldFilter(vec3 Color , float amout, bool goldMap) {\n  \n      float bw = (Color.r+Color.g+Color.b)/(3.0f); \n     \n     float b1 = 1.0f - bw;\n        \n        const float coeffDegree = 1.2123456789f;\n        \n         b1 = pow(b1,coeffDegree);\n         float b2 = bw;\n         b2 = pow(b2,1.0/coeffDegree);\n         \n         vec3 loColor = vec3(1,(2.0f*coeffDegree)/10.0f,0); \n         vec3 hiColor = vec3(1.0,1.0,0);\n      \n        vec3 product = (b1*loColor)+(b2*hiColor);\n          \n        Color = mix(Color,Color * product,amout); \n  \n  if(goldMap) {\n  return product;\n}\n  \n  \n  return vec3(Color);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).rgb;\n            \n      col = goldFilter(col , 0.3f, false);\n      \n        \n        \n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lfGBRt","date":"1734336434","viewed":31,"name":"Cooked Gold Filter","username":"sadekguerrah2","description":"Changed the coeffDegree to get other types of gold","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorgrading"],"hasliked":0,"parentid":"","parentname":""}}