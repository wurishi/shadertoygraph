{"ver":"0.1","info":{"id":"tljcDy","date":"1595322343","viewed":155,"name":"radial blur_x","username":"xrealm","description":"radial blur","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 center = vec2(0.5, 0.5);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float strength = sin(iTime)/10.0;\n    vec2 dir = center - uv;\n    vec2 blurVector = dir * 0.02;\n    vec4 accumulateColor = vec4(0.0);\n    for (int i = 0; i < 10; i++) {\n    \taccumulateColor += texture(iChannel0, uv);\n\t\tuv.xy += blurVector.xy;\n    }\n   \n\n    // Output to screen\n    vec4 result = accumulateColor/10.0;\n    fragColor = result;\n}","name":"Image","description":"","type":"image"}]}