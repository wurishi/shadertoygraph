{"ver":"0.1","info":{"id":"ft2GW3","date":"1624854765","viewed":92,"name":"Bicomplex Mandelbrot","username":"kibitz9","description":"Bicomplex Mandelbrot","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bicomplexmandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//a bicomplex mandelbrot\n\nvec4 square(vec4 B){\n    //Bicomplex square\n    return vec4(\n         B.x* B.x- B.y* B.y- B.z* B.z+ B.w* B.w\n        ,2.* B.x* B.y-2.* B.z* B.w\n        ,2.* B.x* B.z-2.* B.y* B.w\n        ,2.* B.x* B.w+2.* B.y* B.z\n     );\n}\nfloat biComplexMB(in vec4 c, int itr){\n    vec4 z=vec4(0);\n    //ye old z=z^2+c\n    for (int a=0;a<itr;a++){\n        z=square(z);\n        z=z+c;\n        float sqrd = dot(z,z);\n        if (sqrd>4.){\n            return float(a)/float(itr);\n        }\n        \n    }\n    return 0.;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv-=vec2(.6,.5);\n    uv *=2.5;\n    uv.x *=iResolution.x/iResolution.y;\n    \n    float aaLevel = 4.;\n    \n    float px = 1./iResolution.x;\n    float hp = px/aaLevel;\n    \n    float i=0.;\n    for (float aa=0.;aa<px;aa+=hp){\n        for (float bb=0.;bb<px;bb+=hp){\n            //2 coords are screen coords, 2 coords based on time...\n            \n            \n            i+=biComplexMB(vec4(uv.x+aa,uv.y+bb,sin(iTime/13.)*.6,sin(iTime/17.)*.6),75);\n            \n            \n           \n        }\n    }\n    i/=(aaLevel*aaLevel);\n    i=pow(i,.6);\n    \n    fragColor = vec4(i,pow(i,.5),pow(i,.25),1.0);\n    \n}","name":"Image","description":"","type":"image"}]}