{"ver":"0.1","info":{"id":"Mc2XWK","date":"1706849839","viewed":49,"name":"Rolling Around","username":"GreatBorealis","description":"Simple shader comprised of several sets of rotating circles rotating about a central axis. Made to practice while I work through Book of Shaders","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 0.7, 0.4);\n    vec3 d = vec3(0.0, 0.15, 0.20);\n    return a + b * cos( 6.28318*(c*t+d) );\n}\n\nvec3 spinningCircle(vec2 uv, float time, float radiusMod, float sizeMod) {\n    for (float i = 0.0; i > -6.4; i -= 0.7) {\n        vec2 circlePoint = vec2(cos(time - i), sin(time - i)) + vec2(cos(time), sin(time)) * radiusMod;\n        float dist = distance(uv, circlePoint);\n        if (dist < sizeMod) {\n            return vec3(0.25);  \n        };\n    };\n    return vec3(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.0);\n    // Time varying pixel color\n    //col = palette(cos(iTime)) + 0.25 * fragCoord.x / 1000.0;\n    \n    for (float i = -2.0; i < 2.0; i += 0.4){\n        col += palette(iTime) * spinningCircle(uv - vec2(i), iTime, 0.75, 0.25);\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}