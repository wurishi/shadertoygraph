{"ver":"0.1","info":{"id":"ctGSWt","date":"1686436849","viewed":121,"name":"Rainbow flolwer","username":"Prosta40k","description":"flower","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["flower","somthing","mathpalette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.638,0.568,0.580);\n    vec3 b = vec3(0.678,0.628,-0.392);\n    vec3 c = vec3(1.031,-1.303,3.138);\n    vec3 d = vec3(-2.642,-1.582,-1.585);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 fincol = vec3(0.0);\n    \n    \n    float startRadius = 0.0;\n    float endRadius = 1.0;\n    float angle = 1.0;\n    for(float i=1.0; i<4.0;i++){\n        //uv = fract(uv*1.5)-0.5;\n        float d = length(uv);\n        \n        float pixelAngle = atan(uv.y, uv.x)+iTime;\n\n        float radius = mix(startRadius, endRadius, d);\n        float rotatedAngle = pixelAngle+angle* radius+i;\n        d *= cos(rotatedAngle)*sin(rotatedAngle)+radius;\n        \n        vec3 col = palette(length(uv0)+iTime*0.5);\n        d = sin(d*2.-iTime)/2.;\n        d = abs(d);\n        d = pow(0.02/d,1.2);\n\n        fincol += col*d;\n    }\n    // Output to screen\n    fragColor = vec4(fincol,1.0);\n}","name":"Image","description":"","type":"image"}]}