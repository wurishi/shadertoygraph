{"ver":"0.1","info":{"id":"Mcy3Wt","date":"1713412195","viewed":115,"name":"simple fog of war","username":"yanmaoyuan","description":"This shader is an show case that how to use signed distance field(sdf) to calculate fog of war.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sd","fogofwar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EDGE_BLUR 0.03\n\nint  u_EntityCount = 3;\nvec3 u_Entity[3] = vec3[3](\n    vec3(0.15, 0.2, 0.15),// x, y, radius\n    vec3(0.33, 0.3, 0.12),\n    vec3(0.23, 0.1, 0.13)\n);\n\nfloat fog(vec2 pos) {\n\n\n    float color = 1.0;\n    for (int i = 0; i < u_EntityCount; i++) {\n        vec3 entity = u_Entity[i];\n        float r = entity.z;\n        float dist = length(pos - entity.xy);\n        float inCircle = smoothstep(r-EDGE_BLUR, r, dist);\n        color *= inCircle;\n    }\n    return 1.0-color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/min(iResolution.x, iResolution.y);\n\n    vec3 col = vec3(fog(uv));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}