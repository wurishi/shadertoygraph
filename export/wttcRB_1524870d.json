{"ver":"0.1","info":{"id":"wttcRB","date":"1609415183","viewed":67,"name":"Marteloire","username":"d3p7h1","description":"marteloire / my first shader :3","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["marteloire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat drawPoint( in vec2 pt, in vec2 uv ) {\n     return smoothstep(0.02, 0.0, abs(pt.x-uv.x)+abs(pt.y-uv.y));\n}\n\nfloat drawSegment( in vec2 a, in vec2 b, in vec2 p, in float t ) {\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float idk = length(pa-ba*h);\n    return (1.0-smoothstep(0.002, t, idk));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = (-iResolution.xy +2.0*fragCoord.xy) / iResolution.y;\n    vec3 col = vec3(0.);\n\n    // center\n    float cx = 0.;\n    float cy = 0.;\n    \n    // radius\n    float r = 0.8;\n    \n    // numbers of pts\n    float n = 24.;\n    \n    float ci = 2.*PI;\n    \n    // Points\n    vec2 a;\n    vec2 b;\n    \n    for(int i = 0; i < int(n); i++){\n        a.x = cx + r * cos((ci/n)*float(i)+iTime/50.);\n        a.y = cy + r * sin((ci/n)*float(i)+iTime/50.);\n               \n        for(int j = 0; j < int(n); j++){\n                b.x = cx + r * cos((ci/n)*float(j)+iTime/50.);\n                b.y = cy + r * -sin((ci/n)*float(j)+iTime/50.);\n                float color = drawSegment(a, b, uv, 0.003);\n                col += vec3(color*0.05, color*0.2, color*0.3);    \n\n        }\n        \n    }\n    \n     // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}