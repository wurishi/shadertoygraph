{"ver":"0.1","info":{"id":"MXsGz2","date":"1714039545","viewed":58,"name":"Simple heat gradient","username":"Fewes","description":"Basic color gradient for use when debugging quantities","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float saturate(float x) { return clamp(x,0.,1.); }\nfloat _smooth(float x) { return x * x * (3.0 - 2.0 * x); }\nvec3 GetHeatColorBand(vec3 col, float x, float y)\n{\n    return col * _smooth(saturate(1.0 - abs(x - y) * 4.0));\n}\nvec3 GetHeatColor(float x)\n{\n    return GetHeatColorBand(vec3(1,0,0), x, 1.0) +\n        GetHeatColorBand(vec3(1,1,0), x, 0.75) +\n        GetHeatColorBand(vec3(0,1,0), x, 0.5) +\n        GetHeatColorBand(vec3(0,1,1), x, 0.25) +\n        GetHeatColorBand(vec3(0,0,1), x, 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 color = GetHeatColor(uv.x);\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}