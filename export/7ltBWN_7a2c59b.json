{"ver":"0.1","info":{"id":"7ltBWN","date":"1663208840","viewed":93,"name":"Analogue Feedback","username":"jahnertz","description":"Experimentation for work","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.1459\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 tc = fragCoord.xy / res;\n    vec2 uv = tc;\n    \n    int subframes = 100;\n    vec4 sum = texture(iChannel1, uv);\n\n    for (int i; i < subframes; i++) {\n        float s = 1.0 - smoothstep(-0.2, 0.8, uv.x); // left edge speed\n        s += smoothstep(0.2,1.2, uv.x); // right edge speed\n        \n        float p = sin(iTime * PI * 0.05) * 0.5 + 0.5; // bender\n        s += (smoothstep(p, p + 0.25, uv.x) - smoothstep(p - 0.25, p, uv.x)) * 0.25;\n        \n        uv.y -= s * 0.00005; // overall speed\n        sum = texture(iChannel1, uv);\n        vec4 src = texture(iChannel0, tc);\n        sum.rgb = src.rgb + sum.rgb * 0.99;\n    }\n    fragColor = sum;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define PI 3.1459\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 tc = fragCoord.xy / res;\n    float wave = smoothstep(0.0, 0.2, tc.x) *\n                 smoothstep(0.1, 1.0, tc.y);\n    //vec3 c1 = (sin(tc.x + iTime * 0.5 * PI) * 2.0 + 1.0) * vec3(-1.0, 1.0, 1.0);\n    vec3 c2 = (cos(tc.x + iTime * 101.0 * PI) * 2.0 + 0.05) * vec3(0.4, 0.2, 1.0);\n    vec3 c3 = sin(tc.x + iTime * 104.0 * PI) * vec3(0.1, 0.0, 1.0);\n    tc.y -= (sin(iTime + tc.x * PI * 2.0) * 0.5) * 0.01;\n    fragColor = vec4((1.0 - smoothstep(0.001,0.010,tc.y)) * (c2 + c3), 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}