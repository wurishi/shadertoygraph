{"ver":"0.1","info":{"id":"MXlyW8","date":"1726123605","viewed":51,"name":"Simple Fast Zoom Blur Implmentat","username":"anthofoxo","description":"zoom blur using a jitter to hide fixed samples","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["postprocessing","blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float uStrength = 1.0;\nconst int kNumIterations = 12;\n#define USE_JITTER\n\nfloat hash12(vec2 p) {\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 vUv = fragCoord/iResolution.xy;\n\n    vec2 toCenter = ((iMouse.xy / iResolution.xy) - vUv) * iResolution.xy;\n\n#ifdef USE_JITTER\n    float jitter = hash12(gl_FragCoord.xy + iTime);\n#endif\n\n    vec3 color = vec3(0.0);\n\tfloat total = 0.0;\n\n\tfor (int t = 0; t < kNumIterations; t++) {\n        #ifdef USE_JITTER\n\t\tfloat percent = (float(t) + jitter) / float(kNumIterations);\n        #else\n        float percent = float(t) / float(kNumIterations);\n        #endif\n\t\tfloat weight = 4.0 * (percent - percent * percent);\n\t\tvec3 _sample = texture(iChannel0, vUv + toCenter * percent / iResolution.xy).rgb;\n\n\t\t_sample.rgb *= uStrength;\n\t\tcolor += _sample.rgb * weight;\n\t\ttotal += weight;\n\t}\n\n    fragColor = vec4(color / total, 1.0);\n}","name":"Image","description":"","type":"image"}]}