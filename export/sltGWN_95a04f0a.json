{"ver":"0.1","info":{"id":"sltGWN","date":"1636198795","viewed":60,"name":"Fork Equalizer  ZRoksiRela 963","username":"ZRoksiRelay","description":"Colorful simple equalizer","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["basic","music","equalizer"],"hasliked":0,"parentid":"Ntt3DN","parentname":"Equalizer by Osa"},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 PeakColor =  vec3(240., 78., 55.) / 255.;\nvec3 MiddleColor =  vec3(116., 242., 144.) / 255.;\nvec3 BaseColor =  vec3(36., 185., 200.) / 255.;\n\nvec3 BackColor =  vec3(140., 108., 86.) / 255.;\n\nint Naturals(int n){\n    return (n*(n+1))/2;\n}\nfloat MusicAverage(){\n    float res = 0.;\n    int TexSize =  textureSize(iChannel0, 0).x;\n    for(ivec2 i = ivec2(0,0); i.x < TexSize; i.x ++){\n        res += texelFetch(iChannel0, i, 0).x * float(TexSize - i.x);\n    }\n    return res/float(Naturals(textureSize(iChannel0, 0).x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    int lines = int(iResolution.x)/2;\n    float max_heigh = 0.7;\n    \n    float smooth_ =1.- MusicAverage();\n    vec3 base_col = mix(BackColor, BackColor*(MusicAverage()+1.)*2., smoothstep(-0.3 + smooth_, 0.7 + smooth_, uv.y));\n\n\n    vec3 eq_col = uv.y < .5? mix(BaseColor,MiddleColor, uv.y*2.):mix(MiddleColor, PeakColor, (uv.y-0.5)*2.);\n\n    \n\n    \n    float index = uv.x * float(lines);\n    float fft = texelFetch(iChannel0, ivec2(int(index) * 512/ lines,.1), 0).x;\n\n    bool mask_y = (uv.y < fft) ? true : false; \n\n    fragColor = mask_y ? vec4(eq_col, 1.) : vec4(base_col,1.);\n\n}\n","name":"Image","description":"","type":"image"}]}