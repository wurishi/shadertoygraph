{"ver":"0.1","info":{"id":"4dXfz8","date":"1494737618","viewed":130,"name":"sin(x * y) moire","username":"f06","description":"If you wait until the end, floating-point error takes over and the shapes get all mashed up and skewed. The end starts after 100s with altitudeMultiplier=100.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","aliasing","moire","zoomout"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 color = vec4(uv.x,0.5+0.5*sin(iTime*0.7),uv.y,1.0);\n\n    // origin at 0,0 and the initial extent for iTime=0 at [-1,1] in x and y\n    float altitudeMultiplier = 100.0;\n    float extent = floor(iTime)*altitudeMultiplier*min(1.0+0.5*sin(iTime),1.0);\n    float quadrant = 0.5*extent;\n    vec2 offset = vec2(quadrant,quadrant);\n\tvec2 window = extent * uv - offset;\n    // pattern makes a brightness pattern given the viewport expressed by window\n    float pattern = sin(window.x * window.y);\n\t// mix the pattern with black/color for great good\n    fragColor = mix(vec4(0), color, pattern);\n}\n","name":"Image","description":"","type":"image"}]}