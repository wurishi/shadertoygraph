{"ver":"0.1","info":{"id":"7sd3RM","date":"1629440755","viewed":50,"name":"动画","username":"tangyuan","description":"fs里实现分段动画","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\nfloat sdBox(in vec2 p, in vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x,d.y), 0.0);\n}\n\nmat2 rot(float a) {\n    float cs = cos(a);\n    float ss = sin(a);\n    return mat2(cs, ss, -ss, cs);\n}\n\nmat2 scale(float sx, float sy) {\n    return mat2(sx, 0., 0., sy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy)/iResolution.y;\n\n    float fac = fract(iTime * 0.5);\n    \n    float size = 0.1;\n    float trans = smoothstep(0., 0.5, fac);\n    float sc = smoothstep(0., 0.6, fac);\n    mat2 scmat = scale(1.+sc, 1.+sc);\n    float r = smoothstep(0.6, 1., fac);\n    mat2 rmat = rot(PI * r);\n    float d = sdBox(((uv + 1.) - trans) * rmat, vec2(size) * scmat);\n    \n    vec3 col = vec3(0.);\n    col += (1. - smoothstep(-.001, .001, d)) * vec3(1., 0., 0.);;\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}