{"ver":"0.1","info":{"id":"dtGXRD","date":"1685968530","viewed":50,"name":"worley shirley","username":"Elise","description":"Worley noise","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["worleynoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec2 random2( vec2 p )\n{\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n\n    st *= 3.;\n\n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n\n    float d = 1.;\n    float min_d;\n    for (int y= -1; y <= 1; y++) {\n        for (int x= -1; x <= 1; x++) {\n            vec2 neighbour = vec2(x,y);\n            vec2 p = random2( i_st + neighbour);\n            p = 0.5 + 0.5 * sin(iTime*p);\n            min_d = length(neighbour + p - f_st);\n\n            if (min_d < d){\n                d = min_d;\n            }\n        }\n    }\n\n    vec3 color = vec3(0.);\n    // Draw grid\n    // color.r += step(.98, f_st.x) + step(.98, f_st.y);\n\n    // Draw points\n    // color += 1. - step(0.02, sqrt(dot(d,d)));\n\n\n    // color += d;\n\n    // Inverted worley noise\n    color += 1. - d;\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}