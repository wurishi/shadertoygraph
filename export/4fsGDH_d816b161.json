{"ver":"0.1","info":{"id":"4fsGDH","date":"1703021052","viewed":65,"name":"Turbilh√£o","username":"Sumar","description":"tentando fazer algo com fbm, com base em [ https://thebookofshaders.com/13/ ].","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand( vec2 p ) {\n    return fract(sin( dot(p,vec2(3217.1,1341.7)))*95.53);\n}\n\nfloat noise(vec2 p){\n    vec2 fr = fract(p);\n    vec2 fl = floor(p);\n    \n    float r1 = rand(fl);\n    float r2 = rand(fl + vec2(1., 0.));\n    float r3 = rand(fl + vec2(0., 1.));\n    float r4 = rand(fl + vec2(1., 1.));\n    \n    vec2 t = smoothstep(0.,1.,fr);\n    \n    return mix(mix(r1, r2, t.x), mix(r3, r4, t.x), t.y);\n}\n\nmat2 rotate(float a){\n    float ca=cos(a), sa=sin(a);\n    return mat2(\n        ca, -sa,\n        sa,  ca\n    );\n}\n\nvec3 randCol(float i){\n    return fract(cos(vec3(13.32, 38.76, 31.83)*45.14*i))+vec3(.1, .2, .8);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    float t = .8*iTime;\n    \n    uv *= rotate(.5*t - log(20.*length(uv)));\n    \n    float lacunarity = 2.0;\n    float gain = .6;\n     \n    float amplitude = 0.4;\n    float frequency = 1.;\n    \n    float n = 0.;\n    \n    for(int i =0; i<6; i++){\n        n += amplitude * noise(frequency*uv);\n        frequency *= lacunarity;\n        amplitude *= gain;\n    }\n    \n    float val = 20.*n + .9*t;\n    \n    fragColor = vec4(randCol(floor(val)) - .3*(1. - fract(val)),1.0);\n}","name":"Image","description":"","type":"image"}]}