{"ver":"0.1","info":{"id":"dsBSRh","date":"1669886570","viewed":80,"name":"plasma - part 2","username":"Kolya142","description":"~ 2","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["plasma"],"hasliked":0,"parentid":"msSSRh","parentname":"plasma - part 1"},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos( a+ vec4(0,33,11,0) ))\nmat3 pl(float t, vec2 u) {\n    return cos(t)*mat3(u.x, u.y, tan(t), .5, .4, max(vec2(.2), cos(u)), .2, cos(sin(t)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    vec3 col = texture(iChannel1, uv).rgb;\n    col *= pl(iTime, uv);\n    col += vec3(cos(uv), sin(iTime)) * .7;\n    col /= texture(iChannel0, cos(uv)).rgb;\n    col = clamp(col, .2, .7);\n    if (col == vec3(.2) || col == vec3(.7)) {\n        col *= texture(iChannel0, cos(uv)).rgb * vec3(cos(uv), uv.y);\n    }    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n/*\n    col *= pl(iTime, uv);\n    col += vec3(cos(uv), sin(iTime)) * .7;\n    col /= texture(iChannel0, cos(uv)).rgb;\n    col = clamp(col, .2, .7);\n    if (col == vec3(.2) || col == vec3(.7)) {\n        col *= texture(iChannel0, cos(uv)).rgb * vec3(cos(uv), uv.y);\n    }\n*/","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = uv+(iDate.w/3.);\n    float n = noise(p*3.);\n    vec3 col;\n    col = vec3(clamp(n, .3, .7));\n    // Time varying pixel color\n\n    // Output to screen\n    fragColor = vec4(col,n);\n}","name":"Buffer A","description":"","type":"buffer"}]}