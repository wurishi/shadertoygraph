{"ver":"0.1","info":{"id":"3sSfzh","date":"1589436044","viewed":111,"name":"the sun","username":"Aman","description":"the sun","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["the","mirage"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n \tfragColor = texture(iChannel0, fragCoord / iResolution.xy);   \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nfloat sdf(vec3 p) {\n    vec2 polar = vec2(length(p) - iTime, atan(p.y, p.x));\n    polar.y /= 3.14159;\n    polar.y = polar.y * 0.5 + 0.5;\n    float s = texture(iChannel1, polar).r;\n    s *= s;\n    \n    s *= s;\n    float f = 1.0 - abs(p.z);\n    if(p.z < 0.0) s = mix(0.0, s,  f * f * f * f);\n    \n    return length(p) - 1.0 - s;\n}\n\nbool march(vec3 ro, vec3 rd, out vec3 hitPos) {\n    for(int i = 0; i < 30; i++) {\n        float d = sdf(ro);\n        if(d < 0.001) {\n            hitPos = ro + rd * d;\n            return true;\n        }\n        ro += rd * d;\n    }\n    return false;\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 auv = -1. + 2. * (fragCoord/ iResolution.xy);\n    vec2 uv = auv;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 ro = vec3(0.0, 0.0, -2.0);\n    vec3 rd = normalize(vec3(uv, 1.0));\n    vec3 hitPos = vec3(0);\n    \n    \n    vec3 col =  palette(length(uv) * 0.5 + 0.5, vec3(0.5, 0.5, 0.5), \n        vec3(0.5, 0.5, 0.5), vec3(1.0, 1.0, 1.0), vec3(0.00, 0.33, 0.67));\n    \n    if(march(ro, rd, hitPos)) {\n        col =  palette(length(hitPos.z) * 0.5 + 0.5, vec3(0.5, 0.5, 0.5), \n            vec3(0.5, 0.5, 0.5), vec3(1.0, 1.0, 1.0), vec3(0.00, 0.33, 0.67));\n   //     col *= 1.3 - length(col.rb);\n    } \n    vec2 sample_at_fractal = mod(auv, 1.0);\n    vec2 sample_at_flag = auv;\n    \n    vec2 sample_at = sample_at_flag;\n    col = mix(texture(iChannel0, sample_at).rgb, col, col.g);\n    \n    if(abs(auv.x) > 0.99 || abs(auv.y) > 0.99) {\n     \tcol = vec3(0.0);   \n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}