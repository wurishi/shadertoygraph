{"ver":"0.1","info":{"id":"4tBcDW","date":"1508500488","viewed":447,"name":"Invisible webcam","username":"sephirot47","description":"Invisibility with camera","likes":2,"published":1,"flags":34,"usePreview":0,"tags":["invisible"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lum(vec3 rgb)\n{\n    return length(rgb);\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgb, W);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uvStep = 1.0 / iResolution.xy;\n\tvec2 uv = fragCoord.xy * uvStep;\n    \n    vec3 lightDir = normalize( vec3(sin(iTime), -cos(iTime), 0) );\n    vec2 delta = vec2( 0.125f * lum(texture(iChannel0, uv + uvStep * vec2(-1, -1)).rgb) +\n        \t\t\t    0.25f * lum(texture(iChannel0, uv + uvStep * vec2(-1,  0)).rgb) +\n                       0.125f * lum(texture(iChannel0, uv + uvStep * vec2(-1,  1)).rgb) -\n                       0.125f * lum(texture(iChannel0, uv + uvStep * vec2( 1, -1)).rgb) -\n                        0.25f * lum(texture(iChannel0, uv + uvStep * vec2( 1,  0)).rgb) -\n                       0.125f * lum(texture(iChannel0, uv + uvStep * vec2( 1,  1)).rgb)\n                       ,\n                       0.125f * lum(texture(iChannel0, uv + uvStep * vec2(-1, -1)).rgb) +\n        \t\t\t    0.25f * lum(texture(iChannel0, uv + uvStep * vec2( 0, -1)).rgb) +\n                       0.125f * lum(texture(iChannel0, uv + uvStep * vec2( 1, -1)).rgb) -\n                       0.125f * lum(texture(iChannel0, uv + uvStep * vec2(-1,  1)).rgb) -\n                        0.25f * lum(texture(iChannel0, uv + uvStep * vec2( 0,  1)).rgb) -\n                       0.125f * lum(texture(iChannel0, uv + uvStep * vec2( 1,  1)).rgb));\n    vec3 normal = normalize( vec3(delta.xy, 0.05) );\n    \n    float light = clamp(dot(-lightDir, normal), 0.0f, 1.0f);\n    vec3 r = refract(vec3(0,0,-1), -normal, 0.9f);\n    float h = 0.06f;\n    vec2 refractedUv = uv +vec2(r.x, r.y) * (-h/r.z);\n    vec4 imgColor = texture(iChannel1, refractedUv);\n    fragColor = vec4(imgColor.rgb, 1.0);\n    // fragColor = vec4(refractedUv, 0, 1.0);\n\t// fragColor = vec4(vec3(light), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float lum(vec3 rgb)\n{\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    return dot(rgb, W);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uvStep = 1.0 / iResolution.xy;\n\tvec2 uv = fragCoord.xy * uvStep;\n    \n    vec3 lightDir = normalize( vec3(sin(iTime), -cos(iTime), 0) );\n    vec2 delta = vec2( lum(texture(iChannel0, uv + uvStep * vec2(-1, 0)).rgb) -\n                       lum(texture(iChannel0, uv + uvStep * vec2( 1, 0)).rgb),\n                       lum(texture(iChannel0, uv + uvStep * vec2( 0,-1)).rgb) -\n                       lum(texture(iChannel0, uv + uvStep * vec2( 0, 1)).rgb));\n    vec3 normal = normalize( vec3(delta.xy, 0.05) );\n    \n    float light = clamp(dot(-lightDir, normal), 0.0f, 1.0f);\n    vec4 imgColor = texture(iChannel0, uv);\n    vec4 imgColorLighted = imgColor * (light + 0.3f);\n\tfragColor = vec4(normal, 1.0);\n\tfragColor = vec4(imgColorLighted.rgb, 1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}