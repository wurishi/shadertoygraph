{"ver":"0.1","info":{"id":"ftKyzz","date":"1660891164","viewed":97,"name":"autogen 95","username":"asynth","description":"Generated by a program written in Rust.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return abs(b) < 1e5 ? a : floor(a/b) * b;\n}\n\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        abs(b.x) < 1e5 ? a.x : floor(a.x/b.x) * b.x,\n        abs(b.y) < 1e5 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        abs(b.x) < 1e5 ? a.x : floor(a.x/b.x) * b.x,\n        abs(b.y) < 1e5 ? a.y : floor(a.y/b.y) * b.y,\n        abs(b.z) < 1e5 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 hsv_to_rgb(vec3 hsv){\n\thsv = fract(hsv);\n    float C = hsv.y * hsv.z;\n    float X = C * (1. - abs(mod(6.*hsv.x, 2.)-1.));\n    float m = hsv.z - C;\n    float H = hsv.x;\n    vec3 rgb;\n    if (H < 0.16667){\n\t\trgb = vec3(C,X,0.);\n    } else if(H < 0.33333){\n\t\trgb = vec3(X,C,0.);\n    } else if(H < 0.5){\n\t\trgb = vec3(0.,C,X);\n    } else if(H < 0.66667){\n\t\trgb = vec3(0.,X,C);\n    } else if(H < 0.83333){\n\t\trgb = vec3(X,0.,C);\n    } else{\n\t\trgb = vec3(C,0.,X);\n    }\n\treturn rgb + m;\n}\n\nvec3 node_1(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = mix2(uv, vec3(0.7654, 0.1278, 0.7499), vec3(0.8701, 0.0836, 0.3194), vec3(0.1832, 0.7426, 0.9020), vec3(0.1144, 0.6190, 0.5572));\n\tvec3 a2 = noise(uv, vec2(0.513458, 1.570606), 0.571047);\n\treturn pthresh(0.8367, a1, vec3(uv.x), a2);\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = repeat_1(uv, 0.5974);\n\tvec3 a1 = noise(uv, vec2(0.30845454, 0.37234947), 0.111498);\n\tvec3 a2 = mix2(uv, vec3(0.3872, 0.7064, 0.5479), vec3(0.4902, 0.8929, 0.0950), vec3(0.6344, 0.9039, 0.0713), vec3(0.0315, 0.6511, 0.3615));\n\treturn max(a1, a2);\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn node_2(uv);\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = (mat2(1.3327,-0.9650,0.9866,1.2537)*(uv-vec2(-0.4578,0.1807)));\n\tvec3 a1 = noise(uv, vec2(2.04092, 2.0579283), 0.071379);\n\tvec3 a2 = mix2(uv, vec3(0.6998, 0.1653, 0.3107), vec3(0.3729, 0.9348, 0.6245), vec3(0.3114, 0.8630, 0.2376), vec3(0.4298, 0.8144, 0.6448));\n\tvec3 a3 = mix2(uv, vec3(0.4437, 0.8457, 0.1290), vec3(0.5402, 0.7175, 0.9330), vec3(0.8784, 0.1345, 0.1077), vec3(0.8411, 0.4615, 0.5539));\n\treturn min(quant(mix(vec3(atan(uv.y, uv.x)), a1, a2), vec3(uv.x)), a3);\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = repeat_0(uv, 0.2500);\n\tvec3 a1 = mix2(uv, vec3(0.9135, 0.4123, 0.8255), vec3(0.3666, 0.6200, 0.3771), vec3(0.8729, 0.1314, 0.9249), vec3(0.0607, 0.6562, 0.6959));\n\treturn a1;\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.6126, 0.0069), vec3(uv.x).xy);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = (mat2(0.7576,-0.9917,-0.7700,-0.8195)*(uv-vec2(-0.0736,0.5220)));\n\tvec3 a1 = mix2(uv, vec3(0.5880, 0.4204, 0.4126), vec3(0.9776, 0.7835, 0.9808), vec3(0.2119, 0.7611, 0.8737), vec3(0.6745, 0.6635, 0.6939));\n\treturn (a1 + vec3(uv.x));\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = repeat_4(uv, 0.3105);\n\tvec3 a1 = vec3(0.8975, 0.6418, 0.8534);\n\treturn a1;\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = (mat2(1.1500,-1.0093,-1.2123,-1.3635)*(uv-vec2(-0.8328,-0.9333)));\n\tvec3 a1 = vec3(0.9347, 0.1637, 0.5610);\n\treturn mix(node_7(uv), node_8(uv), a1);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = (mat2(1.3127,1.3933,-0.9293,1.0495)*(uv-vec2(-0.7439,0.4619)));\n\tvec3 a1 = vec3(0.6100, 0.3805, 0.9110);\n\tvec3 a2 = mix2(uv, vec3(0.8328, 0.4646, 0.6351), vec3(0.6834, 0.0063, 0.4470), vec3(0.2033, 0.8700, 0.3437), vec3(0.5795, 0.2935, 0.1296));\n\tvec3 a3 = tri((min(vec3(uv.x), a1) - min((node_6(uv) * node_9(uv)), sigmoid(min(vec3(atan(uv.y, uv.x)), uni(a2)))))*5.3180 + 0.3831 + iTime*0.2817);\n\treturn a3;\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = reflect_1(uv);\n\tvec3 a1 = noise(uv, vec2(1.1304941, 0.17552781), 0.264492);\n\tvec3 a2 = well(vec3(uv.x)*3.2381 + 0.7794 + iTime*0.0815);\n\treturn (-mod(abs(a1), a2));\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.5995, -0.5367), min(vec3(atan(uv.y, uv.x)), vec3(atan(uv.y, uv.x))).xy);\n\treturn vec3(uv.x);\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = (mat2(0.7407,0.7670,-1.3668,1.4041)*(uv-vec2(-0.1722,-0.2011)));\n\tvec3 a1 = noise(uv, vec2(3.9251761, 1.2335918), 0.252432);\n\tvec3 a2 = vec3(0.4219, 0.7271, 0.8312);\n\treturn (a1 - a2);\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = (mat2(0.9251,0.9334,-1.3780,1.4103)*(uv-vec2(-0.7553,0.0434)));\n\treturn node_13(uv);\n}\n\nvec3 node_15(vec2 uv) {\n\tvec3 a1 = noise(uv, vec2(2.3702474, 0.3244007), 0.311078);\n\tvec3 a2 = mix2(uv, vec3(0.9022, 0.2426, 0.2992), vec3(0.2387, 0.6913, 0.3726), vec3(0.6517, 0.6347, 0.2643), vec3(0.9224, 0.0306, 0.5298));\n\tuv = xywarp(uv, vec2(0.7217, -0.6719), (a1 + a2).xy);\n\tvec3 b1 = vec3(0.9724, 0.2863, 0.9509);\n\tvec3 b2 = noise(uv, vec2(0.6968987, 0.14094596), 0.903256);\n\tvec3 b3 = noise(uv, vec2(0.19275497, 1.0544752), 0.163971);\n\treturn sigmoid(mix((vec3(atan(uv.y, uv.x)) - b1), uni(node_14(uv)), abs(mix(b2, b3, vec3(uv.x)))));\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = repeat_0(uv, 0.2971);\n\tvec3 a1 = tri(node_15(uv)*1.4005 + 0.6778 + iTime*0.2537);\n\treturn a1;\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = repeat_4(uv, 0.5566);\n\tvec3 a1 = mix2(uv, vec3(0.0953, 0.6357, 0.3028), vec3(0.3144, 0.5844, 0.9746), vec3(0.0554, 0.5938, 0.6170), vec3(0.6011, 0.4466, 0.0338));\n\treturn abs((a1 * vec3(atan(uv.y, uv.x))));\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = reflect_0(uv);\n\tvec3 a1 = mix2(uv, vec3(0.8111, 0.5874, 0.7725), vec3(0.2460, 0.7394, 0.2384), vec3(0.6234, 0.4015, 0.2259), vec3(0.0074, 0.0096, 0.2986));\n\treturn max(a1, vec3(atan(uv.y, uv.x)));\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = well(vec3(uv.x)*1.1413 + 0.8040 + iTime*0.1892);\n\tvec3 a2 = vec3(0.2056, 0.0310, 0.0431);\n\tvec3 a3 = mix2(uv, vec3(0.5032, 0.2804, 0.0405), vec3(0.5663, 0.9887, 0.6023), vec3(0.8876, 0.2423, 0.9894), vec3(0.4733, 0.1477, 0.6931));\n\tvec3 a4 = tri(sigmoid(a3)*3.2250 + 0.5981 + iTime*0.1187);\n\tvec3 a5 = tri(a4*5.0363 + 0.3916 + iTime*0.1612);\n\tvec3 a6 = mix2(uv, vec3(0.7847, 0.3042, 0.9003), vec3(0.2166, 0.1935, 0.6986), vec3(0.3330, 0.4694, 0.3525), vec3(0.3713, 0.5312, 0.6749));\n\tvec3 a7 = tri(uni(max(vec3(uv.x), a6))*2.8813 + 0.1240 + iTime*0.2984);\n\treturn min(uni(quant(a1, node_17(uv))), min(mix(sigmoid(a2), node_18(uv), a5), a7));\n}\n\nvec3 node_20(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.1481, 0.0837, 0.2189), vec3(0.4387, 0.7399, 0.7442), vec3(0.3733, 0.0175, 0.3597), vec3(0.4882, 0.2545, 0.0401));\n\tvec3 a2 = noise(uv, vec2(0.43291733, 0.61832124), 0.588070);\n\tvec3 a3 = mix2(uv, vec3(0.8150, 0.7051, 0.2387), vec3(0.3947, 0.8926, 0.9889), vec3(0.9935, 0.7587, 0.7711), vec3(0.9323, 0.2319, 0.3308));\n\tuv = xywarp(uv, vec2(-0.4044, -0.8871), mix(a1, a2, a3).xy);\n\treturn vec3(uv.x);\n}\n\nvec3 node_21(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = mix2(uv, vec3(0.2862, 0.6486, 0.7800), vec3(0.2725, 0.3703, 0.6089), vec3(0.1570, 0.2173, 0.5041), vec3(0.9624, 0.3495, 0.2346));\n\treturn a1;\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = reflect_4(uv);\n\tvec3 a1 = vec3(0.7072, 0.9128, 0.0003);\n\tvec3 a2 = mix2(uv, vec3(0.5398, 0.2008, 0.4011), vec3(0.9281, 0.5992, 0.1846), vec3(0.1108, 0.7645, 0.1752), vec3(0.0196, 0.4665, 0.6847));\n\treturn (mix(a1, a2, node_20(uv)) + uni(node_21(uv)));\n}\n\nvec3 node_23(vec2 uv) {\n\tuv = (mat2(1.3209,-1.1809,-1.2010,1.2332)*(uv-vec2(-0.5151,0.4385)));\n\tvec3 a1 = vec3(0.1799, 0.0783, 0.8526);\n\tvec3 a2 = mix2(uv, vec3(0.8260, 0.3519, 0.3211), vec3(0.8179, 0.8437, 0.3804), vec3(0.5664, 0.1893, 0.4269), vec3(0.7629, 0.5453, 0.6387));\n\treturn (a1 - a2);\n}\n\nvec3 node_24(vec2 uv) {\n\tuv = repeat_5(uv, 0.2297);\n\treturn vec3(uv.x);\n}\n\nvec3 node_25(vec2 uv) {\n\tuv = repeat_2(uv, 0.6350);\n\treturn node_24(uv);\n}\n\nvec3 node_26(vec2 uv) {\n\tuv = repeat_0(uv, 0.7504);\n\tvec3 a1 = vec3(0.1731, 0.2919, 0.1688);\n\treturn a1;\n}\n\nvec3 node_27(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_28(vec2 uv) {\n\tuv = (mat2(1.3197,1.0941,-1.3349,-1.3769)*(uv-vec2(0.1955,0.4937)));\n\tvec3 a1 = noise(uv, vec2(0.37275273, 0.22268459), 0.277131);\n\treturn (-min(a1, vec3(uv.x)));\n}\n\nvec3 node_29(vec2 uv) {\n\tuv = (mat2(0.9546,1.2569,0.8062,-1.1331)*(uv-vec2(0.4419,0.6466)));\n\tvec3 a1 = tri(node_16(uv)*4.5652 + 0.0259 + iTime*0.2181);\n\tvec3 a2 = vec3(0.7581, 0.1403, 0.2563);\n\tvec3 a3 = mix2(uv, vec3(0.4788, 0.4359, 0.9637), vec3(0.4623, 0.6205, 0.6556), vec3(0.8122, 0.8176, 0.6033), vec3(0.8811, 0.5298, 0.7633));\n\tvec3 a4 = noise(uv, vec2(3.3897712, 0.27769786), 0.677709);\n\tvec3 a5 = well(vec3(uv.x)*2.0638 + 0.0160 + iTime*0.2167);\n\tvec3 a6 = tri(bi(abs((min(a2, a3) * mix(vec3(uv.x), a4, a5))))*1.4327 + 0.0194 + iTime*0.1352);\n\treturn quant(a1, (node_19(uv) + quant(sigmoid(node_22(uv)), bi(quant((node_23(uv) - bi(abs(min((-node_25(uv)), uni(sigmoid(mix(quant(node_26(uv), node_27(uv)), vec3(atan(uv.y, uv.x)), a6))))))), node_28(uv))))));\n}\n\nvec3 top(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.5951, 0.4999, 0.3740), vec3(0.0654, 0.3010, 0.7234), vec3(0.9617, 0.4422, 0.2829), vec3(0.8890, 0.1382, 0.8155));\n\tvec3 a2 = noise(uv, vec2(0.96383417, 0.09107505), 0.231152);\n\tvec3 a3 = tri(a2*5.5200 + 0.7992 + iTime*0.1548);\n\tvec3 a4 = vec3(0.7197, 0.7559, 0.6299);\n\tvec3 a5 = noise(uv, vec2(0.42026484, 0.11983287), 0.130505);\n\tvec3 a6 = noise(uv, vec2(0.7731776, 3.5530074), 0.109518);\n\tvec3 a7 = mix2(uv, vec3(0.8406, 0.8939, 0.2447), vec3(0.4486, 0.4780, 0.3422), vec3(0.5514, 0.0910, 0.9350), vec3(0.8409, 0.4544, 0.5112));\n\tvec3 a8 = noise(uv, vec2(0.7310213, 1.874063), 0.255476);\n\tvec3 a9 = mix2(uv, vec3(0.0058, 0.9824, 0.5878), vec3(0.1175, 0.9125, 0.2268), vec3(0.7089, 0.2107, 0.3471), vec3(0.0467, 0.2098, 0.4398));\n\tvec3 a10 = mix2(uv, vec3(0.3373, 0.4582, 0.7545), vec3(0.2957, 0.0159, 0.1947), vec3(0.8357, 0.4545, 0.0883), vec3(0.8070, 0.6170, 0.6697));\n\tvec3 a11 = noise(uv, vec2(0.618652, 2.8365233), 0.078556);\n\tvec3 a12 = well((pthresh(0.2830, mix(vec3(uv.x), a6, a7), mod(a8, mix(a9, vec3(uv.x), a10)), a11) - node_5(uv))*5.3184 + 0.0436 + iTime*0.2229);\n\tvec3 a13 = well(a12*1.7603 + 0.5840 + iTime*0.3157);\n\tvec3 a14 = noise(uv, vec2(0.7331482, 0.32941893), 0.455909);\n\tvec3 a15 = noise(uv, vec2(0.8963318, 2.5133083), 0.701771);\n\tvec3 a16 = tri(mod(max(a14, uni(a15)), vec3(uv.x))*3.7049 + 0.8187 + iTime*0.3847);\n\tvec3 a17 = tri(a16*1.7116 + 0.7575 + iTime*0.0952);\n\treturn mod(((a1 - a3) * (max(abs((quant((a4 * vec3(uv.x)), uni(sigmoid(node_1(uv)))) - quant(sigmoid(node_3(uv)), max(vec3(uv.x), vec3(uv.x))))), (node_4(uv) * a5)) - bi(a13))), mod(sigmoid(quant((-min(node_10(uv), (node_11(uv) + node_12(uv)))), a17)), abs(node_29(uv))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = hsv_to_rgb(abs(sin(top(uv))));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}