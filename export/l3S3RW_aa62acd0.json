{"ver":"0.1","info":{"id":"l3S3RW","date":"1708245461","viewed":52,"name":"texture based bad TV","username":"jyn","description":"Sketching with interference, this visualizes the tangent function in the zones that are more clear","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MOD_AMOUNT 44\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = float(int(iTime * 10.0) % 64);\n    \n    int modulo = int(time) % MOD_AMOUNT;\n    bool evenodd = modulo < (MOD_AMOUNT / 2);\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 constant_noise_offset = vec2(time * 0.02, time * 0.01);\n    vec2 noise_uv = (fragCoord.xy / iChannelResolution[0].xy) + constant_noise_offset;\n    noise_uv += evenodd\n        ? 0.002 * vec2(\n            tan(noise_uv.y * time * 0.06) * 512.0, // clears noise inside high tangent due to texture interpolation\n            sin(cos((noise_uv.x) * time * 0.2))\n          )\n        : 0.002 * vec2(\n            tan(noise_uv.y * time * 0.04) * 256.0, // above, different constants\n            sin(cos(noise_uv.x * time * 0.1))\n          );\n\n    vec3 noise = 0.99 - texture(iChannel0, noise_uv).rrr * 0.5;\n    \n    vec3 color = texture(iChannel1, uv).rgb;\n    \n    color = color * 0.3 * noise + noise;\n    color = pow(color, vec3(8.0));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}