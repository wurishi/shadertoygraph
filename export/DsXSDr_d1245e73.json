{"ver":"0.1","info":{"id":"DsXSDr","date":"1668718152","viewed":133,"name":"Mandelbrot.","username":"cp1","description":"Mandelbrot.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec2 add(vec2 comp1, vec2 comp2) {\n    return vec2(\n        (comp1[0] + comp2[0]),\n        (comp1[1] + comp2[1])\n    );\n}\n\nvec2 mul(vec2 comp1, vec2 comp2) {\n    return vec2(\n        (comp1[0] * comp2[0] - comp1[1] * comp2[1]),\n        (comp1[0] * comp2[1] + comp1[1] * comp2[0])\n    );\n}\n\nfloat norm(vec2 number) {\n    return dot(number, number);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\n    int ITERATIONS;\n   \n    \n    float zm = float(1.5 / pow(-2.0, iTime));\n    ITERATIONS = 1000 + int(pow(iTime, 3.0));\n\n    \n    //float zm = 0.5;\n    \n    // X:[-2.0, 1.0]\n    // Y:[-1.0, 1.0]\n    vec2 uv = vec2(\n        (fragCoord.x / iResolution.x * (3.5 * zm) - (2.0 * zm) + 0.3007953),\n        (fragCoord.y / iResolution.y * (2.0 * zm) - (1.0 * zm) - 0.0201099));\n\n\n\n    vec2 z = vec2(0);\n    vec2 c = uv;\n    \n    int i = 0;\n    \n    while (i < ITERATIONS && norm(z) <= 5.0) {\n        z = add(mul(z, z), c);\n        \n        i++;\n    }\n\n    float v = float(i) / float(ITERATIONS);\n    \n    float mixingFactor = sqrt(float(i) / float(ITERATIONS) * (zm + 10.0));\n    \n    if (v == 1.0) {\n        vec4 col = vec4(1);\n        fragColor = col;\n    } else if (v != 0.0) {\n        vec4 col = vec4((mixingFactor + 0.1), mixingFactor, (mixingFactor + 0.2), 0.0);\n        fragColor = col;\n    } else {\n        fragColor = vec4(0);\n    }\n\n  \n    \n    \n\n\n}","name":"Image","description":"","type":"image"}]}