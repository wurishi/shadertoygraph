{"ver":"0.1","info":{"id":"Mcsyz4","date":"1720885197","viewed":52,"name":"Stateless 2D pcgHash","username":"Teknologicus","description":"Stateless pcg hash function of 2D coordinates","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["pcghash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint pcgHash(uint x) {\n  uint state = (x * 0x2C9277B5u) + 0xAC564B05u,\n       word  = ((state >> ((state >> 28) + 4u)) ^ state) * 0x108EF2D9u;\n  return word ^ (word >> 22);\n}\n\n#if 1\nuint pcgHash(uint x, uint y) {\n  return pcgHash(pcgHash(y) + x);\n}\n#else\nuint pcgHash(uint x, uint y) {\n  uint h = pcgHash(x) + pcgHash(y);\n  return h ^ (h >> ((x % 15u) + 1u));\n}\n#endif\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float offset = iTime * 60.0,\n        h   = float(pcgHash(uint(fragCoord.x + offset), uint(fragCoord.y + offset)) % 256u) / 255.0;\n  fragColor = vec4(h, h, h, 1);\n}\n","name":"Image","description":"","type":"image"}]}