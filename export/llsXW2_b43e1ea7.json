{"ver":"0.1","info":{"id":"llsXW2","date":"1439957145","viewed":226,"name":"gold wave","username":"pixelbeast","description":"Iterate rotate 2d sample positions (x,y) starting from uv, scale same positions by product of 2 samples at x and y.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","music","viz"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Iain Melvin, Aug 2015\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float rot=0.1*sin(iTime*0.1); // rot step, animated\n    float m=-0.1; // size of kick\n    \n    vec2 av = vec2(-1.0,-1.0) + uv * vec2(2.0,2.0);  // center\n    \n    float s = 0.0; // accumulate\n    const int N=25;\n    for (int i=0;i<N;i++){\n        // get some samples based on uv\n        float t1 = texture(iChannel0, vec2(abs(av.x),0.75) )[0]-0.5;\n        float t2 = texture(iChannel0, vec2(abs(av.y),0.75) )[0]-0.5;\n        s+=(t1*t2);\n        av.x=av.x*cos(rot)-av.y*sin(rot);  // rotate to different samples\n        av.y=av.x*sin(rot)+av.y*cos(rot);\n        av += vec2(m*s,m*s); // a little push from samples\n    }\n    s/=float(N);\n    \n    s=0.8*log(10.0*abs(s)+1.0);\n    fragColor = vec4( sin(s*3.141*2.5), sin(s*3.141*2.0),sin(s*3.141*1.0),1.0);\n}","name":"","description":"","type":"image"}]}