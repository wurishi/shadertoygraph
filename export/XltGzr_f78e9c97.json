{"ver":"0.1","info":{"id":"XltGzr","date":"1467699509","viewed":389,"name":"Blur for image","username":"Fizzzzz","description":"Just simple blur a image with special threshold.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur","image"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define THRESHOLD 0.005\n#define GRANULARITY 10\n#define STEPS (GRANULARITY * 2 + 1)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 origin = texture(iChannel0, uv);\n\n    float scope = THRESHOLD * float(GRANULARITY);\n    vec4 result = vec4(0, 0, 0, origin.w);\n    int total = 0;\n    for (int i = 0; i < STEPS; ++i) {\n        for (int j = 0; j < STEPS; ++j) {\n        \tfloat x = uv.x - scope + THRESHOLD * float(i);\n            float y = uv.y - scope + THRESHOLD * float(j);\n            vec4 col = texture(iChannel0, vec2(x, y));\n            if (x < 0.0 || x > 1.0 || y < 0.0 || y > 1.0) continue;\n            result.x += col.x;\n            result.y += col.y;\n            result.z += col.z;\n            ++total;\n        }\n    }\n    result.x = result.x / float(total);\n    result.y = result.y / float(total);\n    result.z = result.z / float(total);\n    fragColor = result;\n}","name":"Image","description":"","type":"image"}]}