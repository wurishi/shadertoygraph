{"ver":"0.1","info":{"id":"wdVXzK","date":"1574491614","viewed":54,"name":"Voronoi Grit","username":"souren","description":"voronoi girt","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 u_position = vec2(0.);\nfloat u_radius = 160.;\n\nfloat variations = 10.;\nfloat speed = 10.;\n\nvec2 random2(vec2 p) {\n    return fract(sin(vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)))) * 43758.5453);\n}\nfloat random(vec2 st) { return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.153); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 frag_coord = fragCoord.xy;\n    vec2 coord_trans = vec2(frag_coord.x, frag_coord.y - iResolution.y);\n    coord_trans += vec2(-u_position.x, u_position.y);\n    vec2 st = coord_trans / iResolution.xy;\n\n    st *= iResolution.xy / (u_radius * 2.);\n    st = fract(st);\n\n    vec3 color = vec3(.0);\n\n    // Cell colors\n    const int COLOR_COUNT = 4;\n    vec3 color_pool[COLOR_COUNT];\n    color_pool[0] = vec3(66. / 255., 118. / 255., 118. / 255.);\n    color_pool[1] = vec3(63. / 255., 157. / 255., 130. / 255.);\n    color_pool[2] = vec3(161. / 255., 205. / 255., 115. / 255.);\n    color_pool[3] = vec3(236. / 255., 219. / 255., 96. / 255.);\n\n    vec3 white = vec3(1.);\n\n    // Cell count\n    const int MAX_CELL_COUNT = 100;\n    const int CELL_COUNT = 3;\n\n    // Cell positions\n    vec2 point[MAX_CELL_COUNT];\n    for (int i = 0; i < CELL_COUNT; i++) {\n        point[i] = random2(vec2(float(i), 1.0));\n    }\n\n    // Cell colors\n    vec3 point_color[MAX_CELL_COUNT];\n    for (int i = 0; i < CELL_COUNT; i++) {\n        int color_index = int(mod(float(i), float(COLOR_COUNT)));\n        point_color[i] = color_pool[color_index];\n    }\n\n    float m_dist = 1.; // minimun distance\n    vec2 m_point;      // minimum position\n    vec3 m_point_color;\n\n    // Iterate through the points positions\n    for (int i = 0; i < CELL_COUNT; i++) {\n        // Animate the point\n        // point[i] = 0.5 + 0.5 * sin(u_time + 6.2831 * point[i]);\n\n        float dist = distance(st, point[i]);\n        if (dist < m_dist) {\n            // Keep the closer distance\n            m_dist = dist;\n\n            // Keep the position of the closer point\n            m_point = point[i];\n            m_point_color = point_color[i];\n        }\n    }\n\n    // set color to closest point color\n    float w = m_dist;\n    w = 1. * -log(w);\n    w = float(w < random(st));\n\n    color = mix(m_point_color, vec3(1.), step(1.0, w));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}