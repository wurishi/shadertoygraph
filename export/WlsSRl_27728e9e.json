{"ver":"0.1","info":{"id":"WlsSRl","date":"1563969154","viewed":90,"name":"simple madlebrot","username":"Bridgy","description":"Mandlebrot","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["mandlebrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int ITERATIONS = 25;\nconst float DIST = 2.0f;\nconst float SCALE = 1.0f;\n\nint IsInMandlebrotSet(float real, float imaginary)\n{\n    //f(X) = x^2 + C\n \t\n    float f = real * real;\n    float o = real * imaginary;\n    float i = imaginary * real;\n    float l = imaginary * imaginary * -1.0;\n    \n    float newReal = f + l + real;\n    float newImaginary = o + i + imaginary;\n    \n    if(sqrt(newReal * newReal + newImaginary * newImaginary) > DIST)\n        return 0;\n    \n\tfor(int itr = 0; itr < ITERATIONS; ++itr)\n    {\n        f = newReal * newReal;\n        o = newReal * newImaginary;\n        i = newImaginary * newReal;\n        l = newImaginary * newImaginary * -1.0;\n\n        newReal = f + l + real;\n        newImaginary = o + i + imaginary;\n        \n        if(sqrt(newReal * newReal + newImaginary * newImaginary) > DIST)\n        \treturn itr;\n    }\n    \n    return ITERATIONS;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy) * 2.0 - 1.0;\n    uv.x -= 0.5f;\n    \n\tuv *= SCALE;\n    \n    float aspectRatio = iResolution.x / iResolution.y;\n    uv.x *= aspectRatio;\n    \n    int itr = IsInMandlebrotSet(uv.x, uv.y);\n    \n    float col = 0.0f;\n    \n    if(itr == ITERATIONS)\n    {\n    \tfragColor = vec4(1.0,0.4,0.1,1.0f);\n    }\n    else\n    {\n    \tcol = 1.0f - (float(itr) / float(ITERATIONS));\n        fragColor = vec4(col / 1.5f,0.0,0.0,1.0f);\n    }\n}","name":"Image","description":"","type":"image"}]}