{"ver":"0.1","info":{"id":"mtlGzB","date":"1671987967","viewed":158,"name":"Stylized Edge Post Processing","username":"Rorybabory","description":"A simple outline shader, blur function from the user existical","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["stylized"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 blur(vec2 uv, vec4 Color, float directions, float quality, float size) {\n    float Pi = 6.28318530718;\n    vec2 Radius = size/iResolution.xy;\n    for ( float d=0.0; d<Pi; d+=Pi/directions)\n    {\n\t\tfor(float i=1.0/quality; i<=1.0; i+=1.0/quality)\n        {\n\t\t\tColor += texture( iChannel0, uv+vec2(cos(d),sin(d))*Radius*i);\t\t\n        }\n    }\n    Color /= quality * directions;\n    return Color;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n    vec3 blur1 = blur(uv, vec4(col,1.0), 16.0, 3.0, 1.0).rgb;\n    vec3 blur2 = blur(uv, vec4(col,1.0), 16.0, 3.0, 2.0).rgb;\n    float val = 0.0;\n    val = ((blur1.x + blur1.y + blur1.z)/3.0)-((blur2.x + blur2.y + blur2.z)/3.0);\n    float thresh = 0.2;\n    float tanmod = 2.0;\n    if (val > thresh) {\n        //val = 1.0;\n    } else {\n        \n    }\n    val *= 12.;\n    val = 1.0-val;\n    //val = 1.0 + tanh(tanmod*(val-thresh));\n    //if ((col.x+col.y+col.z)/3.0 > 0.4) {\n    //    col = vec3(1.0);\n    //}else {\n    //    col = vec3(0.2);\n    //}\n    \n    //col -= vec3(val);\n    col *= val;\n    // Output to screen\n    fragColor = vec4(vec3(val),1.0);\n}","name":"Image","description":"","type":"image"}]}