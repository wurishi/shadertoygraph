{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"music","id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"/*by mu6k, Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n just playing around with some more rays...\n\n 10/05/2013:\n - published\n\n 24/05/2013:\n - added the compatibility fix as suggested by reinder\n\n muuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuusk!*/\n\nfloat hash(vec2 x)\n{\n\treturn fract(cos(dot(x.xy,vec2(2.31,53.21))*124.123)*412.0);\n}\n\nfloat hash(float x)\n{\n\treturn fract(sin(cos(x)*124.123)*421.321);\n}\n\nfloat noise(vec2 p) \n{\n\tvec2 pm = mod(p,1.0);\n\tvec2 pd = p-pm;\n\tfloat v0=hash(pd.x+pd.y*41.0);\n\tfloat v1=hash(pd.x+1.0+pd.y*41.0);\n\tfloat v2=hash(pd.x+pd.y*41.0+41.0);\n\tfloat v3=hash(pd.x+pd.y*41.0+42.0);\n\tv0 = mix(v0,v1,smoothstep(0.0,1.0,pm.x));\n\tv2 = mix(v2,v3,smoothstep(0.0,1.0,pm.x));\n\treturn mix(v0,v2,smoothstep(0.0,1.0,pm.y));\n}\n\nfloat dist(vec3 p) // distance function for the terrain, 2 layers of texture\n{\n\tvec3 ps = p;\n\t\n\tp = ps;\n\n\tfloat d1 = p.y+2.0;\n\t\n\tp.x+=p.z*0.25;p.z-=p.x*0.25; //rotate\n\td1-=textureLod(iChannel0,p.xz*0.01,0.0).r*0.7-5.5;;\n\tp.x+=p.z*0.25;p.z-=p.x*0.25; //rotate\n\td1-=textureLod(iChannel0,p.xz*0.001,0.0).r*14.0-5.5;;\t\n\n\treturn d1;\n}\n\nfloat dist_smooth(vec3 p) //smoother version of the dist for the camera\n{\n\tvec3 ps = p;\n\t\n\tp = ps;\n\n\t//p.z+=iTime*2.0+10.0; \n\tfloat d1 = p.y+2.0;\n\t\n\tp.x+=p.z*0.25;p.z-=p.x*0.25;\n\t//d1-=texture(iChannel0,p.xz*0.01)*0.7-5.5;;\n\tp.x+=p.z*0.25;p.z-=p.x*0.25; \n\td1-=texture(iChannel0,p.xz*0.001).r*14.0-5.5;;\t\n\n\treturn d1;\n}\n\nvec3 normal(vec3 p) //returns the normal at a given position\n{\n\tfloat e=0.1;\n\tfloat d=dist(p);\n\treturn normalize(vec3(dist(p+vec3(e,0,0))-d,dist(p+vec3(0,e,0))-d,dist(p+vec3(0,0,e))-d));\n}\n\n//the sun has gone wild and is moving around like crazy...\n//l is the light direction\n\nvec3 l;\n\nfloat shadow(vec3 p) //generates some really long shadows...\n{\n\tfloat s = 0.0;\n\tfor (int i=0; i<100; i++)\n\t{\n\t\tfloat d = dist(p);\n\t\tp+=l*(0.01+d*0.5);\n\t\t//float ss=clamp(0.0,d,1.0)*0.01;\n\t\tfloat ss = d; if (ss<0.0) ss = 0.0; if (ss>1.0) ss = 1.0;\n\t\tss*=0.01;\n\t\ts+=ss;\n\t\tif (ss<0.0)\n\t\t{\n\t\t\ts=0.0;\n\t\t\tbreak;\n\t\t}\n\t\tif (p.y>150.0)\n\t\t{\n\t\t\ts+=float(99-i)*0.01; break;\n\t\t}\n\t}\n\treturn pow(s,4.0);\n}\n\nfloat ao(vec3 p) //ambient occlusion\n{\n\tvec3 n = normal(p);\n\treturn (dist(p+n*0.5)/0.5+dist(p+n*4.33)*0.25)*0.5;\n}\n\nvec3 sky(vec3 dir) //atmospere\n{\n\tdir.y = clamp(0.0,dir.y,1.0);\n\tfloat atmos = ((sin(l.y*3.14159+1.0))*pow((2.0-dir.y),4.0))*(dot(dir,l)*0.2+0.2);\n\tfloat atmos2 = ((l.y*0.5)*pow((2.0-dir.y),1.5));\n\tvec3 atmosc; atmosc.r = atmos*0.2; \n\tatmosc.g=atmosc.r-0.5;atmosc.b=atmosc.g-0.3;\n\tatmosc = clamp(vec3(0.0),atmosc,vec3(2.0));\n\t\n\tvec3 atmos2c; atmos2c.b = atmos2*0.5; \n\tatmos2c.g=atmos2c.b-0.2;atmos2c.r=atmos2c.g-0.2;\n\tatmos2c = clamp(vec3(0.0),atmos2c,vec3(2.0));\n\tvec3 final = atmosc*0.5+atmos2c;\n\t\n\tfinal += vec3(0.1,0.13,0.2);\n\t\n\tfinal = max(vec3(.0),final);\n\treturn final;\n}\n\n\nfloat stars(vec3 dir) //stars are generated using 2d noise on a UV sphere\n{\n\tvec2 staruv = vec2(atan(dir.x/dir.z)*88.0+iTime*0.1,dir.y*64.0);\n\tfloat st = (noise(staruv)+noise(staruv*5.1)+noise(staruv*2.7))*0.3633;\n\tif (st<0.0) st = 0.0;\n\tst = pow(st,25.0);\n\tst*=1.0-abs(dir.y);\n\treturn st;\n}\t\n\nvec3 sun(vec3 dir) //makes that bright spot on the sky\n{\n\tfloat sun = dot(dir,l);\n\tsun+=1.0; sun*=0.5; sun= pow(sun,127.0);\n\treturn vec3(sun);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    l =normalize(vec3(sin(iTime*0.41),sin(iTime*0.1)*0.27+0.30,cos(iTime*0.512)));\n\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 m = iMouse.xy / iResolution.xy - 0.5;\n\tm+=vec2(0.0,0.1);\n\t\n\t//move the camera forward!\n\tvec3 pos = vec3(sin(iTime*0.013)*10.0,-1.0,cos(iTime*0.01)+iTime*3.0);\n\t//move the camera up based on the distance from the heightmap\n\tpos = vec3(pos.x,-5.0-dist_smooth(pos),pos.z);\n\t//camera direction\n\tvec3 dir = vec3((uv.x-0.5)*iResolution.x/iResolution.y,uv.y-0.5,1.0);\n\tdir.xy+=m*0.1;\n\t//dir.z += sin(iTime*0.35117)*0.1;\n\tdir.z = (1.0-length(dir)*0.5);\n\tdir = normalize(dir);\n\t\n\tvec3 color,skycolor=sky(dir),suncolor=vec3(sun(dir)),starscolor=vec3(stars(dir));\n\tfloat t = iTime;\n\tfloat totald = 0.0; //distance travelled, used for fog\n\t\n\tfloat visp = (dir.x+dir.z*0.5+0.95-dir.y*0.5); visp=abs(visp); visp=pow(visp,0.8)*0.19;\n\tfloat vis= texture(iChannel1,vec2(visp,0.0)).y;\n\tvis = min(1.0,vis*1.2*(0.92+visp*0.6));\n\tvis=pow(vis,20.0)*2.5*dir.y;\n\n\tcolor = skycolor+suncolor+starscolor+vec3(vis)*vec3(0.4,0.7,0.2);; //first do the sky\n\t\n\tfor (int i=0; i<150; i++) //now raymarch\n\t{\n\t\tfloat d = dist(pos);\n\t\tpos += dir * d*0.5;\n\t\ttotald+=d;\n\t\t\n\t\tif (pos.y>10.0)\n\t\t{\n\t\t\tbreak; //ray is in the sky and will never hit anything else\n\t\t}\n\t\tif (d<totald*0.001) //hit\n\t\t{\n\t\t\tvec3 n = normal(pos); //get normal\n\t\t\t\n\t\t\tfloat diffuse = dot(normal(pos),l); //direct sun light\n\t\t\tif (diffuse<0.0) diffuse = 0.0;\n\n\t\n\t\t\tvec3 ambientc = (sky(n));\n\t\t\t\n\t\t\tcolor= mix(ambientc*.7*(0.5+n.y*0.5),(ambientc+vec3(0.8,0.6,0.4)),diffuse*ao(pos)*shadow(pos));\n\n\t\t\tcolor = mix(skycolor+suncolor*.2,color,1.0/(1.0+totald*0.05)); //fog\n\t\t\t\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tcolor = color*vec3(1.5,1.5,1.5);\n\tcolor -= length(uv.xy-0.5)*0.3;\n\tcolor+=(hash(uv.xy+color.xy)-0.5)*0.015;\n\t\n\t\n\tfloat w=color.x+color.y+color.z;\n\tcolor = mix(color,vec3(w,w,w)*0.3,w*0.35);\n\t\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xss3z4","date":"1368189887","viewed":2130,"name":"Terrain + Sun","username":"mu6k","description":"just playing around with some more rays...","likes":37,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","shadow","audio","heightmap"],"hasliked":0,"parentid":"","parentname":""}}