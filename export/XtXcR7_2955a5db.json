{"ver":"0.1","info":{"id":"XtXcR7","date":"1503968919","viewed":105,"name":"Another Sinus","username":"smogon","description":"My interpretation of a sinus shader.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","sinus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// correct sinus from -1,+1 to 0,1\nfloat correct(float val)\n{\n    return (val + 1.0) / 2.0;\n}\n\n// correct vec2 from -1,+1 to 0,1\nvec2 correct(vec2 val)\n{\n    return (val + 1.0) / 2.0;\n}\n\n// from 0,1 to -1,1\nvec2 mapUV(vec2 val) \n{\n    return (val * 2.0) - 1.0;\n}\n\n// from 0,1 to -1,1\nfloat mapUV(float val) \n{\n    return (val * 2.0) - 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy; // from 0 to 1\n    vec2 uvM = iMouse.xy / iResolution.xy;\n    // background\n    vec4 img1 = texture(iChannel0, uv); \n    vec4 img2 = texture(iChannel1, uv); \n    //vec3 col = vec3(uv,0.5+0.5*sin(iTime));\n    vec3 col = vec3(img1.r,img1.b,img1.g);\n    \n    \n    \n    // sinus painting\n    float xval = correct(sin(uv.x*360.0-180.0));\n    float yval = uv.y;\n    float thickness = max(uvM.y*4.0,0.01);\n    float moveSin = mapUV(uv.x)*sin(iTime);\n    float yStart = correct(sin(moveSin * max(uvM.x,0.0) * 120.0) - thickness/2.0);\n    float yEnd = yStart + thickness/2.0;\n    \n    //if(uv.x >= uvStart.x && uv.x <= uvEnd.x && uv.y >= uvStart.y && uv.y <= uvEnd.y)\n    if(uv.y >= yStart && uv.y <= yEnd)\n        col = vec3(img2.r,img2.b,img2.g);\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}