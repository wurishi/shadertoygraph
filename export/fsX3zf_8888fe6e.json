{"ver":"0.1","info":{"id":"fsX3zf","date":"1616347817","viewed":110,"name":"Neon cube","username":"longshot","description":"Plain old retro wirecube with a distance field twist.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//--------------------------------------------------------\n// Plain old retro wirecube with a distance field twist  \n// \n// v1.0 - 2021-03-21 - Initial version\n// Thanks to mrange for improvements\n//--------------------------------------------------------\n\nmat4 model = mat4(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1);\n\nvec2 Project(vec3 p0) {\n  vec3 viewport = vec3(0.0,-2.0,0.0);\n  p0 -= viewport;\n  return length(viewport) * p0.xz / p0.y;\n}\n\nmat4 Scale(vec3 v) {\n  return mat4(vec4(v.x,0,0,0), vec4(0,v.y,0,0), vec4(0,0,v.z,0), vec4(0,0,0,1));\n}\n\nmat4 Rotate(vec3 u, float a) {\n  float c = cos(a);\n  float s = sin(a);\n  vec3 c0 = vec3(c + (u.x*u.x) * (1.0-c), (u.y*u.x) * (1.0-c) + (u.z*s), (u.z*u.x) * (1.0-c) - (u.y*s));    \n  vec3 c1 = vec3((u.x*u.y) * (1.0-c) - (u.z*s), c + (u.y*u.y) * (1.0-c), (u.z*u.y) * (1.0-c) + (u.x*s)); \n  vec3 c2 = vec3((u.x*u.z) * (1.0-c) + (u.y*s), (u.y*u.z) * (1.0-c) - (u.x*s), c + (u.z*u.z) * (1.0-c));\n  return mat4(mat3(c0,c1,c2));\n}\n \nmat4 Translate(vec3 v) {\n  return mat4(vec4(1.0,0,0,v.x), vec4(0,1.0,0,v.y), vec4(0,0,1.0,v.z), vec4(0,0,0,1.0));\n}\n\n\nfloat DistanceToLine(vec3 p0,vec3 p1,vec2 uv) {\n  p0 = (vec4(p0,1.0) * model).xyz;\n  p1 = (vec4(p1,1.0) * model).xyz;    \n  p0.xy = Project(p0);\n  p1.xy = Project(p1);    \n  vec2 d = normalize(p1.xy - p0.xy);    \n  uv = (uv - p0.xy) * mat2(d.x, d.y, -d.y, d.x);  \n  float dist = distance(uv, clamp(uv, vec2(0.0), vec2(distance(p0.xy, p1.xy), 0.0)));\n  return dist;\n}\n\nfloat pmin(float a, float b, float k) {\n  float h = clamp( 0.5+0.7*(b-a)/k, 0.0, 1.0);\n  return mix(b,a,h) - k*h*(1.0-h);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 res = iResolution.xy/iResolution.y;\n  vec2 uv = (fragCoord.xy/iResolution.y) - (res/2.0);\n  uv *= 3.0;     \n  float time = iTime;\n    \n  model *= Scale(vec3(0.3));\n  model *= Rotate(vec3(1.0, 0, 0.0), 1.2*time);\n  model *= Rotate(vec3(0.0, 1.0, 0.0), 1.2*time);\n  model *= Rotate(vec3(0.0, 0, 1.0), 1.2*time);\n  model *= Translate(vec3(0.6*sin(time), 0.2*cos(time)-0.73, 0.18*cos(time)+0.1));\n    \n  vec3 cube[8];\n  cube[0] = vec3(-1,-1,-1);\n  cube[1] = vec3( 1,-1,-1);\n  cube[2] = vec3(-1, 1,-1);\n  cube[3] = vec3( 1, 1,-1);\n  cube[4] = vec3(-1,-1, 1);\n  cube[5] = vec3( 1,-1, 1);\n  cube[6] = vec3(-1, 1, 1);\n  cube[7] = vec3( 1, 1, 1);\n   \n  float dist = 1E6;\n  const float sm = 0.3;\n  dist = pmin(dist, DistanceToLine(cube[0],cube[1], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[1],cube[3], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[3],cube[2], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[2],cube[0], uv), sm);\n\n  dist = pmin(dist, DistanceToLine(cube[4],cube[5], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[5],cube[7], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[7],cube[6], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[6],cube[4], uv), sm);\n\n  dist = pmin(dist, DistanceToLine(cube[0],cube[4], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[5],cube[1], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[2],cube[6], uv), sm);\n  dist = pmin(dist, DistanceToLine(cube[7],cube[3], uv), sm);\n\n  vec3 linecube = vec3(0);     \n  linecube = mix(linecube, vec3(0,0,1), smoothstep(5.0/iResolution.y, 0.0, dist));\n  linecube += sin(0.5*dist*vec3(290.0, 0.0, 3.0));\n  fragColor = vec4(linecube,0.0);\n}\n\n","name":"Image","description":"","type":"image"}]}