{"ver":"0.1","info":{"id":"MtccR8","date":"1531474045","viewed":129,"name":"Polar and randomness","username":"darkeclipz","description":"Polar coordinates and random","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPS 0.0001\nfloat random(vec2 st) {\n\treturn fract(sin(dot(st, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat random2dtile(vec2 st) {\n    return random(floor(st+EPS));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 R = iResolution.xy;\n    vec2 uv = (2.*fragCoord-R)/iResolution.y;\n    float t = iTime/2.;\n    \n    float d = length(uv)*3.;\n    mat2 rot = mat2(cos(d), -sin(d), sin(d), cos(d));\n    uv*=rot; // Bend\n    \n    float r = length(uv) * 2.0;\n    float a = atan(uv.y, uv.x);\n    float f = abs(cos(a*12.)*sin(a*3.))*.8+.1;\n    \n    vec3 tile = vec3(random2dtile(33.*uv));\n    vec3 cp = mix(vec3(1,0,0), tile, 0.33);\n    vec3 col = mix(cp, vec3(0), smoothstep(f, f+1., r) );\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}