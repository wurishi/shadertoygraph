{"ver":"0.1","info":{"id":"fdfXRl","date":"1619020233","viewed":127,"name":"voronoi with wall and stuff 4561","username":"jy483752","description":"wwwwwwwwwww","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"fsfSRl","parentname":"Fork voronoi 41 jy483752 397"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2d( in vec2 s){\n    return vec2(\n        fract(sin(dot(s, vec2(55.4793, 67.2135)))*12345.567), \n        fract(sin(dot(s, vec2(23.3718, 69.4201)))*987.655)\n    );\n}\n\nvec2 floating( in vec2 st){\n    return 0.5 + 0.5*sin(iTime*0.4 + 6.2831*st);\n}\n\nvec3 saturate( in vec3 orig, in float amt){\n    amt = -amt;\n    \n    float sum = orig.r+orig.g+orig.b;\n    float m = max(max(orig.r, orig.g), orig.b);\n    \n    return vec3(\n        orig.r + (m-orig.r)*amt, \n        orig.g + (m-orig.g)*amt,\n        orig.b + (m-orig.b)*amt\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    \n    vec2 i_uv = floor(uv * 9.0);\n    vec2 f_uv = fract(uv * 9.0);\n    \n    vec2 m_dists = vec2(8.0, 8.0);\n    ivec2 cell_pos;\n    vec2 m_point;\n    vec2 n_point;\n    \n    for (int y= -1; y <= 1; y++) {\n        for (int x= -1; x <= 1; x++) {\n            // Neighbor place in the grid\n            vec2 neighbor = vec2(float(x),float(y));\n            \n            vec2 point = random2d(i_uv+neighbor);\n            point = floating(point);\n            point = neighbor - f_uv + point;\n            \n            float dist = sqrt(dot(point, point));\n            \n            if( dist < m_dists.x ){\n                n_point = point + f_uv - neighbor;\n                m_point = point;\n                m_dists.x = dist;\n                cell_pos = ivec2(x, y);\n            }\n        }\n    }\n    \n    for (int y= -2; y <= 2; y++) {\n        for (int x= -2; x <= 2; x++) {\n            if(ivec2(x,y)==cell_pos) {continue;}\n            // Neighbor place in the grid\n            vec2 neighbor = vec2(ivec2(x, y)+cell_pos);\n            \n            vec2 point = random2d(i_uv+neighbor);\n            point = floating(point);\n            point = neighbor - f_uv + point;\n\n            float dist = dot(0.5*(m_point+point), normalize(point-m_point));\n            \n            if( dist < m_dists.y){\n                m_dists.y = dist;\n            }\n        }\n    }\n    \n    vec3 col = mix( \n            vec3(0.1),\n            saturate(vec3(n_point, 0.4), -.35),\n            step(0.1, m_dists.y)\n            );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}