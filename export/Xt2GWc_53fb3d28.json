{"ver":"0.1","info":{"id":"Xt2GWc","date":"1433152612","viewed":3111,"name":"Brush Smear","username":"104","description":"I want to experiment a bit with brush strokes and calligraphy. Here i am modulating distance field falloff to create the illusion of smearing, and simulating some bleeding into the paper grain. It's very basic.","likes":52,"published":1,"flags":0,"usePreview":0,"tags":["2d","brushstroke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec3 saturate(vec3 a){return clamp(a,0.,1.);}\nfloat opS( float d2, float d1 ){return max(-d1,d2);}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat rand(float n){\n \treturn fract(cos(n*89.42)*343.42);\n}\n\nfloat dtoa(float d, float amount)\n{\n    return clamp(1.0 / (clamp(d, 1.0/amount, 1.0)*amount), 0.,1.);\n}\nfloat sdColumn(vec2 uv, float xmin, float xmax)\n{\n\treturn max(xmin-uv.x, uv.x-xmax);\n}\nfloat sdAxisAlignedRect(vec2 uv, vec2 tl, vec2 br)\n{\n    vec2 d = max(tl-uv, uv-br);\n    return length(max(vec2(0.0), d)) + min(0.0, max(d.x, d.y));\n}\n\n// 0-1 1-0\nfloat smoothstep4(float e1, float e2, float e3, float e4, float val)\n{\n    return min(smoothstep(e1,e2,val), 1.-smoothstep(e3,e4,val));\n}\n\nconst float left = 1.82;\nconst float right = 2.08;\n\nvec3 texturize(vec2 uv, vec3 inpColor, float dist)\n{\n    float falloffY = 1.0 - smoothstep4(-0.5, 0.1, 0.4, 1., uv.y);\n    float falloffX = (smoothstep(left, right, uv.x)) * 0.6;\n    dist -= falloffX * pow(falloffY, 0.6) * 0.09;\n    \n\n    float amt = 13. + (max(falloffX, falloffY) * 600.);\n\n    return mix(inpColor, vec3(0.), dtoa(dist, amt));\n}\n\nfloat map(vec2 uv)\n{\n    uv.x += rand(uv.y) * 0.006;// some distortion in x axis\n    return sdColumn(uv, left, right);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n\tuv = (uv / iResolution.y * 2.0) - 1.;\n    uv.x += cos(uv.y* (uv.x+1.) * 3.) * 0.003;\n    uv.y += cos(uv.x * 6.) * 0.00007;\n\n    vec3 col = vec3(1.,1.,0.86);// bg\n    \n    // black stroke\n    float dist = map(uv);\n    col = texturize(uv, col, dist);// ok this is a stupid way to organize this effect. WIP.\n    \n    // red-orangeish square.\n    dist = sdAxisAlignedRect(uv, vec2(-0.68), vec2(-0.55));\n    float amt = 90. + (rand(uv.y) * 100.) + (rand(uv.x / 4.) * 90.);\n    float vary = sin(uv.x*uv.y*50.)*0.0047;\n    dist = opS(dist-0.028+vary, dist-0.019-vary);// round edges, and hollow it out\n    col = mix(col, vec3(0.99,.4, 0.0), dtoa(dist, amt) * 0.7);\n    col = mix(col, vec3(0.85,0.,0.), dtoa(dist, 700.));\n\n    uv -= 1.0;// vignette\n\tfloat vignetteAmt = 1.-dot(uv*0.5,uv* 0.12);\n    col *= vignetteAmt;\n    \n    // grain\n    col.rgb += (rand(uv)-.5)*.07;\n    col.rgb = saturate(col.rgb);\n\n    \n    fragColor = vec4(col, 1.);\n}\n\n","name":"","description":"","type":"image"}]}