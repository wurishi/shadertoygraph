{"ver":"0.1","info":{"id":"WsffWB","date":"1588942634","viewed":261,"name":"halftweet Rainbow (68/82 ch)","username":"izutionix","description":" ","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["rainbow","short","onetweet","halftweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//68 chars, sacrificing resolution independency\n//#define mainImage(O, U) O = pow( cos( U.y/2e2-vec4(.5, .75, 1, 0) ), vec4(16) )\n\n//82 chars\nvoid mainImage(out vec4 O, vec2 U) { O = pow( cos( 1.5*U.y/iResolution.y-vec4(.5, .75, 1, 0) ), vec4(16) ); }\n\n/*\n//98 chars\nvoid mainImage(out vec4 O, vec2 U)\n{\n    O = pow(cos( 1.5*U.y/iResolution.y-vec4(.5, .75, 1, 0) ), vec4(16) );\n}\n\n//172 chars\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float R = iResolution.y;\n    float g = (2.5*fragCoord.y-R)/R;\n    \n    vec3 col = cos(g-vec3(0,.25,.5));\n\n    fragColor = vec4(pow(col, vec3(8)),1);\n}\n*/","name":"Image","description":"","type":"image"}]}