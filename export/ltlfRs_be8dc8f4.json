{"ver":"0.1","info":{"id":"ltlfRs","date":"1513018681","viewed":137,"name":"Casino Wall","username":"slerpy","description":"Inspiration: [url]https://www.youtube.com/watch?v=EmsyaThSx7s[/url] (don't ask)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","simple","map","ao"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3zn","filepath":"/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","previewfilepath":"/media/ap/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\nmat3 rx(float a){ float sa=sin(a), ca=cos(a); return mat3(1.,0.,0.,0.,ca,sa,0.,-sa,ca); }\nmat3 ry(float a){ float sa=sin(a), ca=cos(a); return mat3(ca,0.,sa,0.,1.,0.,-sa,0.,ca); }\nmat3 rz(float a){ float sa=sin(a), ca=cos(a); return mat3(ca,sa,0.,-sa,ca,0.,0.,0.,1.); }\n\nfloat map(vec3 p)\n{\n    float d = -p.z;\n    p.xy = -abs(p.xy-round(p.xy));\n    \n    for(int tx=0; tx<2; tx++)\n    {\n        for(int ty=0; ty<2; ty++)\n        {\n    \t\tvec3 q = vec3(tx, ty, 0) + p;\n            float l = length(q.xy);\n            d = min(d, max(l-1., -p.z-(l*l)/12.));\n        }\n    }\n    \n    return d;\n}\n\nvec3 normal(vec3 p, float k)\n{\n\tvec2 e = vec2(.0,k);\n\treturn normalize(vec3(\n\t\tmap(p + e.yxx) - map(p - e.yxx),\n\t\tmap(p + e.xyx) - map(p - e.xyx),\n\t\tmap(p + e.xxy) - map(p - e.xxy)\n\t));\n}\n\nfloat tracer(vec3 ro, vec3 rd)\n{   \n    float t = -(ro.z+.1) / rd.z;\n    for(int i=0; i<8; i++){\n        t += map(ro + rd*t);\n    }\n    return t;\n}\n\nfloat ao(vec3 pos, vec3 nor )\n{\n\tfloat occ = 1.;\n    float sca = 1.;\n    for( int i=0; i<4; i++ )\n    {\n        float t = .03*float(i) + .01;\n        float m = map(nor * t + pos);\n        occ -= (t-m) * sca;\n        //sca *= 0.95;\n    }\n    return clamp(occ, .0, 1.);    \n}\n\nvec4 tex(vec3 p)\n{\n    vec4 col = vec4(255, 210, 0, 255) / 255.;\n    col += vec4(texture(iChannel0, p).r + .1);\n    return col / 2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec3 ro = vec3(iTime/4., .5, -5.+2.*exp(-iTime/16.));\n    vec3 rd = normalize(vec3(uv, 3.)) * rx(.1) * ry(.5);\n    \n    float t = tracer(ro,rd);\n\tvec3 sp = ro + rd*t;\n\tvec3 sn = normal(sp, 4e-6);\n    \n\tfragColor = tex(sn * ry(1.45 + iTime/24.)) * ao(sp, sn);\n}","name":"Image","description":"","type":"image"}]}