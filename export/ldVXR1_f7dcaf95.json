{"ver":"0.1","info":{"id":"ldVXR1","date":"1462997759","viewed":167,"name":"When raytracing goes wrong...","username":"ivcoar","description":"I was doing a simple raytracer, changed some things and this thing appeared. I think it looks cool but I have no idea how it works.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","sphere","bug","wtf","cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 100\n#define MAX_DIST 20.0\n#define EPSILON 0.001\n\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\nfloat map(vec3 p)\n{\n    float d = sdSphere(p, 10.);\n    d = max(d, -sdSphere(p, 10.));\n    \n\treturn d; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    vec3 camera = vec3(0., 0., sin(iTime * 3.));\n    vec3 target = vec3(sin(iTime), cos(iTime), 0.);\n    vec3 up = vec3(0., 1., 0.);\n    \n    vec3 cameraDir = normalize(target - camera);\n    vec3 cameraRight = cross(up, cameraDir);\n    vec3 cameraUp = cross(cameraDir, cameraRight);\n    \n    vec2 screenPos = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    screenPos.x *= iResolution.x / iResolution.y;\n    \n    vec3 ray = normalize(cameraRight * screenPos.x + cameraUp * screenPos.y + cameraDir);\n    \n    float totalDist = 0.0;\n    vec3 pos = camera;\n    float dist = EPSILON;\n    \n    for (int i = 0; i < MAX_ITER; i++)\n    {\n    \t\n        if (dist < EPSILON || totalDist > MAX_DIST)\n            break;\n        \n        dist = map(pos);\n        totalDist += dist;\n        pos += dist * ray;\n        \n    }\n    \n    vec3 color = vec3(0.0, 0.0, 0.0);\n    \n    if (dist < EPSILON)\n    {\n        \n        vec2 eps = vec2(0.0, EPSILON);\n        vec3 normal = normalize(vec3(\n            map(pos + eps.yxx) - map(pos - eps.yxx),\n            map(pos + eps.xyx) - map(pos - eps.xyx),\n            map(pos + eps.xxy) - map(pos - eps.xxy)));\n        \n        color = vec3(1.0, 1.0, 1.0) * step(0.5, max(0.0, length(cross(ray, normal))));\n    }\n    \n    fragColor = vec4(color, 1.);\n    \n}","name":"Image","description":"","type":"image"}]}