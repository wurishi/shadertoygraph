{"ver":"0.1","info":{"id":"msscRs","date":"1687800871","viewed":102,"name":"Phased Antenna Array","username":"ThiagoHg","description":"Simulating a phased array of antennas to create a directional beam.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["antenna"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float v = 0.05;\nconst float f = 1.0;\nconst float w = 2.0*3.1415926*f;\nconst float k = w/v;\nconst float lambda = v/f;\nconst float d = lambda/2.0;\n\nstruct EMW {\n    vec2 origin;\n    float w;\n    float k;\n    float p;\n};\n\nconst int count = 32;\nEMW W[count];\n\nfloat sdWave(EMW w,vec2 p,float t) {\n    return cos(w.w*t - w.k*length(p-w.origin) + w.p);\n}\n\nfloat radiation(EMW w,vec2 p) {\n    vec2 d = p - w.origin;\n    float rad = (2.0*3.1415926/length(d))*cos(atan(d.y/d.x));\n    return rad;\n}\n\nfloat triangleWave(in float x) {\n    return 0.8105694*(sin(3.1415926*x) - sin(3.0*3.1415926*x)/9.0 + sin(5.0*3.1415926*x)/25.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 1.5;\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= zoom;\n    vec3 col = vec3(0.3,0.3,0.3);\n    vec3 grad = vec3(0.02,0.01,0.01);\n    \n    float theta = triangleWave(iTime/4.0)*(3.1415926/4.0);\n    float psi = 2.0*3.1415926*d*sin(theta)/lambda;\n    \n    float wave;\n    for(int i = 0; i < count; i++){\n        W[i] = EMW(vec2(-1.75*zoom,(float(i) - float(count)/2.0)*d),w,k,float(i)*psi);\n        wave += radiation(W[i],uv)*sdWave(W[i],uv,iTime);\n    }\n    wave = (32.0/float(count))*wave;\n    col += grad*wave;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}