{"ver":"0.1","info":{"id":"ssSBRG","date":"1646506581","viewed":151,"name":"infinite donuts!!!","username":"Gravechest","description":"epic","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","torus","infinite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint hash( uint x ) {\n    x += ( x << 10u );\n    x ^= ( x >>  6u );\n    x += ( x <<  3u );\n    x ^= ( x >> 11u );\n    x += ( x << 15u );\n    return x;\n}\nuint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }\nuint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }\nuint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }\nfloat floatConstruct( uint m ) {\n    const uint ieeeMantissa = 0x007FFFFFu;\n    const uint ieeeOne      = 0x3F800000u;\n\n    m &= ieeeMantissa;                 \n    m |= ieeeOne;                    \n\n    float  f = uintBitsToFloat( m );  \n    return f - 1.0;                       \n}\nfloat random( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }\nfloat random( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat random( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat random( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 angle = vec2(0.5,-0.5);\n    vec3 pos   = vec3(0.0,iTime/3.0,1.0);\n    vec4 dir = vec4(cos(angle.x),sin(angle.x),sin(angle.y),cos(angle.y));\n    vec2 pixelOffset = fragCoord.xy/iResolution.xy*2.0-1.0;\n    pixelOffset.x *= 1.69;\n    vec3 vec;\n    vec.x = (dir.x * dir.w - dir.x * dir.z * pixelOffset.y) - dir.y * pixelOffset.x;\n    vec.y = (dir.y * dir.w - dir.y * dir.z * pixelOffset.y) + dir.x * pixelOffset.x;\n    vec.z = dir.z + dir.w * pixelOffset.y;\n    vec3 ang = normalize(vec);\n    int sid;\n    for(int i = 0;i < 80;i++){\n        float dst = length(vec2(length(fract(pos.xy)-0.5)-0.25,fract(pos.z)-0.5))-0.1;\n        if(abs(dst) < 0.001){\n            fragColor.rgb = vec3(random(floor(pos)),random(floor(pos)+0.1),random(floor(pos)+0.2));\n            fragColor.rgb *= fract(pos.z) * fract(pos.z) * fract(pos.z) * 4.0;\n            fragColor.rgb *= 1.0 - float(i)/80.0;\n            return;\n        }\n        pos += ang * dst;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}