{"ver":"0.1","info":{"id":"XXj3Rd","date":"1708737831","viewed":66,"name":"Flowing circle","username":"wangg","description":"Flowing circle","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"     float noise(in vec3 p) {\n          p = fract(p * 10.831 - p.x * 0.567);\n          p += dot(p + p, p.yzx + 133.33);\n          return fract((p.x + p.y) * p.z);\n      }\n\n    \n      float snoise(in vec3 p) {\n          vec3 cell = floor(p);\n          vec3 local = fract(p);\n          local *= local * (3.0 - 2.0 * local);\n      \n          float ldb = noise(cell);\n          float rdb = noise(cell + vec3(1.0, 0.0, 0.0));\n          float ldf = noise(cell + vec3(0.0, 0.0, 1.0));\n          float rdf = noise(cell + vec3(1.0, 0.0, 1.0));\n          float lub = noise(cell + vec3(0.0, 1.0, 0.0));\n          float rub = noise(cell + vec3(1.0, 1.0, 0.0));\n          float luf = noise(cell + vec3(0.0, 1.0, 1.0));\n          float ruf = noise(cell + 1.0);\n      \n          return mix(mix(mix(ldb, rdb, local.x), mix(ldf, rdf, local.x), local.z),\n                     mix(mix(lub, rub, local.x), mix(luf, ruf, local.x), local.z), local.y);\n      }\n      \n      float fnoise(in vec3 p, in float scale) {\n          p *= scale;\n      \n          float value = 0.0;\n          float nscale = 10.0;\n          float tscale = 0.0;\n      \n          for (int i=0; i < 5; i++) {\n              value += snoise(p) * nscale;\n              tscale += nscale;\n              nscale *= 0.5;\n              p *= 2.0;\n          }\n      \n          return value / tscale;\n      }\n\n   \n    \n      void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n        float time = 0.1 * iTime;\n        vec2 uv = (fragCoord - 1.5 * iResolution.xy) / 200.0+2.9;\n   \n        vec2 uvs = uv;\n        uvs.x += 1.1;\n        uvs.y -=0.7;\n        float warp = 0.0;\n        float color = 0.0;\n        color += abs(abs(length(uvs))-0.5);\n        for (int i=0; i < 15; i++){\n            warp = fnoise(vec3(vec2(uv.x-time*3.0,uv.y), 0.25 * time +0.1/color) + warp, 2.0);\n        };\n    \n        float pow2 = warp * warp;\n        float  pow4 = pow2 * pow2; \n        float  pow8 = pow4 * pow4;\n        // *vec3(0.1)\n\n        vec3 c  = vec3(pow4, pow4 + pow8, pow4)+0.1/color*vec3(0.2,0.1,0.1);\n        fragColor =  vec4(c, 1.0);\n      }","name":"Image","description":"","type":"image"}]}