{"ver":"0.1","info":{"id":"XljBDy","date":"1533267896","viewed":371,"name":"Purple Plasma","username":"rodolphito","description":"Volumetric Voronoi test.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["purple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FAR 1000.0\n#define SKIN 0.0001\n#define STEPS 64\n#define POS vec3(0.0)\n\nfloat map(vec3 v)\n{\n    return length(v - POS) - 1.0;\n}\n\nfloat noise(vec3 x)\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = textureLod( iChannel0, (uv+0.5)/256.0, 0.0).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\nfloat combonoise(vec3 x, float lac)\n{\n    float r = 0.0;\n    float s = 1.0;\n    for (int i = 0; i < 5; i++)\n    {\n        r += noise(x * s) / s;\n        s *= lac;\n    }\n    return r;\n}\nfloat drawObject(in vec3 p)\n{\n    p = fract(p)-0.5;\n    return dot(p,p);\n    //p = abs(fract(p)-.5);\n    //return dot(p, vec3(.5));\n}\nfloat voro(vec3 p)\n{\n    vec4 v, d;\n    d.x = drawObject(p - vec3(.81, .62, .53));\n    p.xy = vec2(p.y-p.x, p.y + p.x)*.7071;\n    d.y = drawObject(p - vec3(.39, .2, .11));\n    p.yz = vec2(p.z-p.y, p.z + p.y)*.7071;\n    d.z = drawObject(p - vec3(.62, .24, .06));\n    p.xz = vec2(p.z-p.x, p.z + p.x)*.7071;\n    d.w = drawObject(p - vec3(.2, .82, .64));\n\n    v.xy = min(d.xz, d.yw);\n    v.z = min(max(d.x, d.y), max(d.z, d.w));\n    v.w = max(v.x, v.y); \n   \n    d.x = min(v.z, v.w) - min(v.x, v.y);\n    return d.x;\n}\n\nvec3 col(vec3 v)\n{\n    float f = length(v - POS) - 1.0;\n    //if (f < SKIN) return vec3(1.0,1.0,1.0);\n    //f += combonoise(v + vec3(0.0,0.0,iTime), 2.1);\n    f += voro(v) * 6.0;\n    return pow(vec3(0.25,0.05,0.4), vec3(f)) * 0.1;\n}\n\nvec3 rot(vec3 v, vec2 r)\n{\n\tvec4 t = sin(vec4(r, r + 1.5707963268));\n    vec4 g = vec4(v, dot(v.yz, t.yw));\n    return vec3(g.x * t.z - g.w * t.x,\n                g.y * t.w - g.z * t.y,\n                g.x * t.x + g.w * t.z);\n}\n\nvec3 rotmap(vec3 v)\n{\n    return v;\n}\n\nvoid mainImage(out vec4 c, vec2 u)\n{\n    vec2 s = iResolution.xy * 0.5f;\n    vec2 m = iMouse.xy * 0.01;\n    vec3 r = rot(normalize(vec3((u - s) / s.y, 1.0)),m);\n    vec3 o = rot(vec3(0.0,0.0,-5.0), m);\n    vec3 l = vec3(0.0,0.0,0.0);\n    float t = 0.0;\n    for (int i = 0; i < STEPS; i++)\n    {\n        //float d = map(o + r * t);\n        //t += d;\n        t += 0.1;\n    \tl += col(o + r * t);\n        if (t > FAR) break;\n    }\n    c = vec4(sqrt(l), 0.0);\n}","name":"Image","description":"","type":"image"}]}