{"ver":"0.1","info":{"id":"Wlf3RN","date":"1555706763","viewed":456,"name":"Event Horizon","username":"oemfoe","description":"A simulation of falling into a black hole where a completely alternative universe resides. Thanks to iq for his noise functions.\n\nFeatured in RBBS-Minus-03: Singularity\nhttp://www.pouet.net/prod.php?which=81031","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["eventhorizonsingularityrbbs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash(vec2 x)\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n\tuv.y = -uv.y;\n    uv.y /= aspect;\n    \n    //vec2 sing = iMouse.xy / iResolution.xy;\n    vec2 sing = vec2(0.5, 0.5 / aspect);\n    sing.y = -sing.y;\n    \n    uv -= sing;\n    uv *= pow(0.1, (iTime - 10.0) * 0.05);\n    uv += sing;\n    \n\tvec2 warp = 1. * normalize(sing - uv) * pow(distance(sing, uv) * 1000.0, -1.0);\n\tuv = uv + warp;\n    \n    uv = fract(uv - iTime / 8.0);\n    \n    float n = smoothstep(0.4, 0.5, noise(uv * 100.) + noise(uv * 25.) / 2.0);\n\t\n\tfloat light = clamp(distance(sing, uv), 0.0, 1.0);\n\t\n\t//vec4 color = texture(iChannel1, fract(uv - iTime / 8.0));\n    vec4 color = vec4(n);\n\tfragColor = color;// * light;\n}\n","name":"Image","description":"","type":"image"}]}