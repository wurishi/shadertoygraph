{"ver":"0.1","info":{"id":"WsXXRB","date":"1551496356","viewed":200,"name":"Crosshairs Pixels without If","username":"drichardson","description":"Like Crosshairs Pixels but without the conditional statement.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["crosshairs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 backgroundColor = vec4(0.18,0.18,0.18,1);\nconst vec4 crosshairsColor = vec4(1,0,0,1);\nconst vec2 centerUV = vec2(0.5, 0.5);\nconst float thickness = 1.;\nconst float length = 20.;\n\n// Boolean like functions as described here:\n// http://theorangeduck.com/page/avoiding-shader-conditionals\n\n// return 1 if x > y, 0 otherwise.\nfloat gt(float x, float y)\n{\n    return max(sign(x-y), 0.0);\n}\n\n// x and y must be either 0 or 1.\nfloat and(float x, float y)\n{\n\treturn x * y;\n}\n\n// x and y must be 0 or 1.\nfloat or(float x, float y)\n{\n    return min(x + y, 1.0);\n}\n\n// x must be 0 or 1\nfloat not_(float x)\n{\n    return 1.0 - x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 center = iResolution.xy * centerUV;\n    vec2 d = abs(center - fragCoord);\n    \n    float crosshairMask = or(and(gt(thickness, d.x), gt(length, d.y)),\n                             and(gt(thickness, d.y), gt(length, d.x)));\n    \n    float backgroundMask = not_(crosshairMask);\n    \n    fragColor = crosshairMask * crosshairsColor + backgroundMask * backgroundColor;    \n}","name":"Image","description":"","type":"image"}]}