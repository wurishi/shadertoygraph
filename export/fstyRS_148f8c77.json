{"ver":"0.1","info":{"id":"fstyRS","date":"1653628280","viewed":160,"name":"bad vhs shader AAAAAAAAAAAAAAAAA","username":"int_45h","description":"i made this as a proof of concept, all it does is shift the red and blue channels by a percentage of the screen resolution","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// first parameter is texture coordinates, second is a percentage of how much to shift each channel\n// (best to keep shift_amount_x by a small amount, i find that .01 looks nice enough)\nvec3 cheap_VHS(in vec2 fragCoord, float shift_amount_x)\n{\n    // Convert shift amount to PX\n    float shift_uvX = iResolution.x * clamp(shift_amount_x, 0.f, 1.f);\n\n    vec2    red_UV = vec2(fragCoord.x - shift_uvX, fragCoord.y) / iResolution.xy,\n            blu_UV = vec2(fragCoord.x + shift_uvX, fragCoord.y) / iResolution.xy,\n            UV     = fragCoord / iResolution.xy;\n\n    // Sample the texture\n    return vec3\n    (\n        texture(iChannel0, red_UV).x,\n        texture(iChannel0, UV).y,\n        texture(iChannel0, blu_UV).z\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Output to screen\n    fragColor = vec4(cheap_VHS(fragCoord, 0.003f),1.0);\n}","name":"Image","description":"","type":"image"}]}