{"ver":"0.1","info":{"id":"Xd33W8","date":"1449156886","viewed":378,"name":"AbsPlanes","username":"jt","description":"Simple abs-planes with perspective - intended as building-block for more complex effects.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["perspective","checkers","abs","planes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Abs Planes - written 2015 by JT\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// my original, verbose (195chars) version, kept for readability as building-block for other shaders\nfloat C(vec2 v)\n{\n    v.y += iTime;\n    //float t = iTime;\n    //v += vec2(cos(t),sin(t));\n    v = fract(v)-.5;\n    return step(0.,v.x*v.y);\n}\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n\tvec2 R = iResolution.xy;\n    I = (I+I-R)/R.y;\n    //I = (I+I-(I=iResolution.xy))/I.y; // NOT COMPATIBLE\n    //float d = step(I.y,.0);\n    I /= vec2(2., I.y) * abs(I.y);\n    O -= O;\n    O += C(I*2.)/I.y/I.y;\n    //O += 1.- d*C(I*2.)/I.y/I.y;\n}\n\n/*\n// FabriceNeyret2's codegolfed version (144chars)\nvoid mainImage( out vec4 O, vec2 I )\n{\n\tvec2 R = iResolution.xy;\n    float a = abs(I=(I+I-R)/R.y).y;\n\tR = sin( 6.* vec2( I.x/a, 2./a+iDate.w ) );\n    O -= O- sign(R.x*R.y)*a*a;\n}\n*/\n","name":"","description":"","type":"image"}]}