{"ver":"0.1","info":{"id":"WsXBz2","date":"1588585650","viewed":85,"name":"VoronoiNosie","username":"nowera","description":"The Base nosie generated","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoinosieperlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash( vec2 x )  // replace this by something better\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\nfloat rand(ivec2 co){\n return fract(sin(dot(vec2(co.x,co.y), vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat voronoi( vec2 x )\n{\n    ivec2 p = ivec2(floor( x ).x,floor( x ).y);\n    vec2  f = fract( x );\n\n    int minx;\n    int miny;\n    float res = 8.0;\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        ivec2 b = ivec2( i, j );\n        vec2  r = vec2( b )- f  + rand(  p+b  );\n        float d = dot( r, r );\n\n        res = min( res, d );\n    }\n    return sqrt( res );\n}\nvec3 voronoiTexture( vec2 x )\n{\n    float rati=iMouse.x/20.;\n    vec2 per=x*rati;\n    ivec2 p = ivec2(floor( per ).x,floor( per ).y);\n    vec2  f = fract( per );\n\n    ivec2 minxy;\n    float res = 8.0;\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        ivec2 b = ivec2( i, j );\n        vec2  r = vec2( b )- f  + rand(  p+b  );\n        float d = dot( r, r );\n        if(d<=res){\n            res=d;\n            minxy= p+b;\n        }\n        else if(d==res){\n            //return (texture(iChannel0,minxy/rati).rgb+texture(iChannel0,vec2(b)/rati).rgb)/2.0;\n            return vec3(1.,0.,0.);\n       }\n    }\n    return texture(iChannel0,vec2(minxy)/rati).rgb;\n}\nfloat smoothVoronoi( in vec2 x )\n{\n    ivec2 p = ivec2(floor( x ).x,floor( x ).y);\n    vec2  f = fract( x );\n    float falloff =64.0;\n    falloff*=iMouse.y/iResolution.y;\n    float res = 0.0;\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        ivec2 b = ivec2( i, j );\n        vec2  r = vec2( b ) - f + rand(  p+b  );\n        float d = length( r );\n\n        res += exp( -falloff*d );\n    }\n    return -(1.0/falloff)*log( res );\n}\n// -----------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);\n\t\n\tfloat f = 0.0;\n    // left: noise\t\n\tif( p.x<0.6 )\n\t{\n        //show the cellular effect\n        fragColor = vec4( voronoiTexture(uv), 1.0 );\n        \n        //show the voronoiNosie\n\t\t//f = smoothVoronoi( iMouse.x/50.*uv );\n       // fragColor = vec4( f, f, f, 1.0 );\n\t}\n    // right: fractal noise (4 octaves)\n    else\t\n\t{\n\t\tuv *= 8.0;\n        mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\t\tf  = 0.5000*voronoi( uv ); uv = m*uv;\n\t\tf += 0.2500*voronoi( uv ); uv = m*uv;\n\t\tf += 0.1250*voronoi( uv ); uv = m*uv;\n\t\tf += 0.0625*voronoi( uv ); uv = m*uv;\n\t    f *= smoothstep( 0.0, 0.005, abs(p.x-0.6) );\t\n\t\tfragColor = vec4( f, f, f, 1.0 );\n\t}\n\n\t//f = 0.5 + 0.5*f;\n}","name":"Image","description":"","type":"image"}]}