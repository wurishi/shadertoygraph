{"ver":"0.1","info":{"id":"tssGD8","date":"1546083328","viewed":136,"name":"Voronoi Cells Video","username":"Elyxian","description":"Also see https://www.shadertoy.com/view/4sy3W3 for a different approach","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","video","cells"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.141592;\n\n// Hash functions by Dave Hoskins: https://www.shadertoy.com/view/4djSRW\n\nvec2 hash22(vec2 p) {\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(443.897, 441.423, 437.195));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\n// Returns the position of the closest voronoi point\n\nvec2 voronoiCells2D(vec2 p) {\n\t\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    \n    float minDist = 5.0;\n    vec2 closestPoint = vec2(0.0, 0.0);\n    \n    for (int j = -1; j <= 1; j++) {\n        for (int k = -1; k <= 1; k++) {\n        \tvec2 relativeCell = vec2(float(j), float(k));\n            vec2 voroPoint = hash22(i + relativeCell);\n            float dist = distance(f, relativeCell + voroPoint);\n            if (dist < minDist) {\n            \tminDist = dist;\n                closestPoint = i + relativeCell + voroPoint;\n            }\n        }\n    }\n    \n    return closestPoint;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // Normalises the fragCoord\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Gets the position of the closest voronoi point\n    float voronoiScale = 80.0;\n    // float voronoiScale = 100.0 + 50.0 * sin(iTime);\n    vec2 voroPoint = voronoiCells2D(uv * voronoiScale) / voronoiScale;\n    \n    vec4 col = texture(iChannel0, voroPoint);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}