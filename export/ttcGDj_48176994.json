{"ver":"0.1","info":{"id":"ttcGDj","date":"1577644248","viewed":89,"name":"Psychédélique Mandelbrot ","username":"IvanK","description":"ref : art of code\nensemble de Mandelbrot (set) + distribution des minimas de la partie réelle de Zn de l'ensemble de Mandelbrot\nuse texture iChannel0 comme palette 2D de couleur pour coloriser le résultat.\nuse iTime pour décaler la palette et l'effet psy.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","test","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define C vec2(-.69489, .36999)\n#define C vec2(-.69689, .37999)\n#define MULZOOM 3.\n\nvec2 IterZn( vec2 zn1, vec2 c )\n{\t// Zn = (Zn-1)^2 + c;\n    vec2 zn = vec2(zn1.x*zn1.x-zn1.y*zn1.y, 2.*zn1.x*zn1.y)+c;\n    return zn;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n    \n{\n    // constantes\n    const float maxIter = 250.;\n    const vec2 cStart = C;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord -.5*iResolution.xy)/iResolution.y;\n    // zoom souris\n    vec2 m = iMouse.xy/iResolution.xy;\n    float zoom = pow(10., -m.x*MULZOOM-.25);\n    // calcul c\n    vec2 c = uv*MULZOOM*(zoom);\n    c += cStart;\n    // init var\n    vec2 z = vec2(0.);\n    float iter = 0.;\n    float ma = 100.;\n    \n    // calcul iteration\n    for(float i= 0.; i< maxIter; i++)\n    {\n        z = IterZn(z, c);\n        ma = min(ma, abs(z.x));\n        if(length(z)>2.) break;// \n//        if(dot(z, z*c)>2.) break;// \n        iter++;\n    }\n    // calcul ratio iteration\n    float f = iter/maxIter;\n    f = pow(f, 1./3.);\n\t//f = ma+pow(f, 1./3.)*.25;\n    // Set grey level with iter ratio\n    //vec3 col = texture(iChannel0, vec2(f+.125*((sin(iTime*.2)+1.)/2.), .432*((cos(iTime*.8)+1.)/2.))).rgb;\n\t//vec3 col = vec3(0.25, ma*.5, 1.-f);\n\t//vec3 col = vec3(f);\n\t//vec3 col = vec3(ma);\n\tvec3 col = texture(iChannel0, vec2(ma+.125*((sin(iTime*.2)+1.)/2.), f+.332*((cos(iTime*.8)+1.)/2.))).rgb;\n\t\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}