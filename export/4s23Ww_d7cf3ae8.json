{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec4 DecodePalette(int n)\n{\n\treturn float(n > 0) * vec4(1.0, 1.0, 1.0, 0.0);\n}\n\nint ExtractBit(inout int data)\n{\t\n\tint result = int(mod(float(data), 2.0));\n\tdata /= 2;\n\t\n\treturn result;\n}\n\nbool Rect(vec2 p, vec2 topLeft, vec2 bottomRight)\n{\n\treturn \n\t\t(p.x >= topLeft.x && p.y >= topLeft.y) &&\n\t\t(p.x <= bottomRight.x && p.y <= bottomRight.y);\n\t\t\n}\n\nvec4 DrawData(vec2 p, int data, vec2 origin, vec2 pixelSize, float mirror)\n{\n\tvec4 pixelValue = vec4(0.0);\n\tint dataCopy = data;\n\tint cutOff = 0;\n\tfloat x = origin.x;\n\tfor (int cutOff = 0; cutOff < 10; cutOff++)\n\t{\n\t\tint color = ExtractBit(dataCopy);\n\t\t\n\t\tpixelValue += \n\t\t\tfloat(Rect(p, vec2(x, origin.y), vec2(x, origin.y) + pixelSize)) *\n\t\t\tDecodePalette(color);\n\t\t\n\t\tx += mirror * pixelSize.x;\n\t\t\n\t\tif (dataCopy <= 0)\n\t\t{\n\t\t\treturn pixelValue;\n\t\t}\n\t\t\t\t  \n\t}\n\treturn pixelValue;\n}\n\nint GetRowByTime(int offset)\n{\n\tint index = int(mod(floor(iTime * 10.0 + float(offset)), 9.0));\n\tint result = 0;\n\t\n\tresult += int(index == 8) * 8;\n\tresult += int(index == 7) * 4;\n\tresult += int(index == 6) * 15;\n\tresult += int(index == 5) * 27;\n\tresult += int(index == 4) * 63;\n\tresult += int(index == 3) * 47;\n\tresult += int(index == 2) * 40;\n\tresult += int(index == 1) * 6;\n\tresult += int(index == 0) * 0;\n\t\n\treturn result;\n}\n\nvec4 Tile(vec2 p, vec2 origin, float mirror)\n{\n\tvec4 result = vec4(0.0);\n\tresult += DrawData(p, GetRowByTime(0), origin + vec2(0.0), vec2(16.0), mirror);\n\tresult += DrawData(p, GetRowByTime(1), origin + vec2(0.0, 16.0), vec2(16.0), mirror);\n\tresult += DrawData(p, GetRowByTime(2), origin + vec2(0.0, 32.0), vec2(16.0), mirror);\n\tresult += DrawData(p, GetRowByTime(3), origin + vec2(0.0, 48.0), vec2(16.0), mirror);\n\tresult += DrawData(p, GetRowByTime(4), origin + vec2(0.0, 64.0), vec2(16.0), mirror);\n\tresult += DrawData(p, GetRowByTime(5), origin + vec2(0.0, 80.0), vec2(16.0), mirror);\n\tresult += DrawData(p, GetRowByTime(6), origin + vec2(0.0, 96.0), vec2(16.0), mirror);\n\tresult += DrawData(p, GetRowByTime(7), origin + vec2(0.0, 112.0), vec2(16.0), mirror);\n\tresult += DrawData(p, GetRowByTime(8), origin + vec2(0.0, 128.0), vec2(16.0), mirror);\n\treturn result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n\t\n\t\n\tfragColor = \n\t\tTile(mod(uv, vec2(192.0 + 16.0, 144.0)), vec2(96.0, 0.0), 1.0) +\n\t\tTile(mod(uv, vec2(192.0 + 16.0, 144.0)), vec2(96.0, 0.0), -1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4s23Ww","date":"1389299169","viewed":665,"name":"Invasion!!","username":"Protarget","description":"They're here to steal your quarters","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["spaceinvaders","sprites"],"hasliked":0,"parentid":"","parentname":""}}