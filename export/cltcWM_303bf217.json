{"ver":"0.1","info":{"id":"cltcWM","date":"1699287697","viewed":421,"name":"LiveCoding VJ 2023-11-04","username":"FoRenard","description":"25min Bonzomatic\nLivecoding at a movie theater in Hokkaido lol","likes":32,"published":1,"flags":32,"usePreview":0,"tags":["livecoding","vj"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col=texture(iChannel0,fragCoord.xy/iResolution.xy).rgb;\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float PI=acos(-1.);\nconst float TAU=2.*PI;\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define sat(x) clamp(x,0.,1.)\n#define norm(x) normalize(x)\nfloat box(vec3 p, vec3 b)\n{\n  vec3 q = abs(p) - b;return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\n}\nvec3 hash(vec3 x)\n{\n  uvec3 v = floatBitsToUint(x);v = v * 1664525u + 1013904223u;v.x += v.y * v.z;v.y += v.z * v.x;v.z += v.x * v.y;v ^= v >> 16u;v.x += v.y * v.z;v.y += v.z * v.x;v.z += v.x * v.y;return vec3(v) / float(-1u);\n}\nmat3 bnt(vec3 T)\n{\n  T = norm(T);vec3 N = vec3(0, 1, 0);vec3 B = norm(cross(N, T));N = norm(cross(T, B));return mat3(B, N, T);\n}\nmat2 rot(float a)\n{\n  float s=sin(a),c=cos(a);\n  return mat2(c,s,-s,c);\n}\n\nfloat alt,lt;\nint bt;\nfloat tr;\n#define sc hash(vec3(bt))\nfloat sdf(vec3 p)\n{\n  float d=1e9;\n  \n  float m=sat(dot(vec3(1),smoothstep(.05,.0,abs(fract(p*4.)-.5))))*.01;\n  \n  int b=bt%4;\n  if(b==0){\n  p.z=mod(p.z,4.)-2.;\n  p.y=mod(p.y+2.5,5.)-2.5;\n  p.x=abs(p.x);\n  d=abs(box(p,vec3(2,2,10)))-.1;\n  d=max(d,-box(p-vec3(2,0,0),vec3(1,1.5,1)));\n  }else if(b==1){\n    d=p.y+1.8;\n    p.xz=mod(p.xz,6.)-3.;\n    d=min(d,box(p,vec3(0,1e9,0))-1.);\n  }else if(b==2){\n    p.z=mod(p.z,4.)-2.;\n    d=min(d,box(p,vec3(4,4,1)));\n    d=max(d,-box(p,vec3(3,3,1.5)));\n  }else if(b==3){\n    p=mod(p,4.)-2.;\n    vec3 s=vec3(.1,.1,1);\n    d=min(d,box(p,s));\n    d=min(d,box(p,s.yzx));\n    d=min(d,box(p,s.zxy));\n  }\n  \n  d+=m;\n\n  return d*.5;\n}\n\nvec3 normal(vec3 p)\n{\n  vec2 k=vec2(1,-1);\n  float e=1e-3;\n  return norm(k.xyy*sdf(p+e*k.xyy)+k.yxy*sdf(p+e*k.yxy)+k.yyx*sdf(p+e*k.yyx)+k.xxx*sdf(p+e*k.xxx));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 col=vec3(0);\n\tvec2 fc = gl_FragCoord.xy,res=iResolution.xy,asp=res/min(res.x,res.y);\n  vec2 uv=fc/res;\n  float bpm=240./140.;\n  alt=lt=iTime/bpm;\n  tr=pow(fract(lt),.3);\n  bt=int(lt);\n  lt=(tr+float(bt))*bpm;\n  vec2 suv=(uv*2.-1.)*asp;\n  \n  if(hash(sc).x<.3)suv=abs(suv)*rot(tr*PI);\n  else bt+=dot(suv,vec2(0,1)*rot(tr*TAU))<.0?4:0;\n\n  vec3 ro=vec3(0,0,lt*5.);\n  vec3 dir=vec3(0,0,1);\n  if(sc.x<.5)\n  {\n    ro=vec3(10.*sin(lt),0,lt*5.);\n    dir=vec3(-sin(lt),sin(lt)*.3+.3,1);\n  }\n  vec3 rd=norm(bnt(dir)*vec3(suv,mix(.3,3.,tr)));\n  \n  float l=0.,d;\n  vec3 rp;\n  rep(i,256)\n  {\n    rp=rd*l+ro;\n    if(sc.z<.5)\n    {\n      rp.xy*=rot(l*.05);\n    }\n    l+=d=sdf(rp);\n    if(d<1e-3||l>1000.)break;\n  }\n  \n  vec3 ld=norm(vec3(-1,1,1));\n  vec3 n=normal(rp);\n  vec3 sro=rp+n*.1;\n  float sl=0.,vi=1.;\n  rep(i,64)\n  {\n    vec3 srp=sro+ld*sl;\n    sl+=d=sdf(srp);\n    vi=min(vi,exp2(4.+4.*hash(srp).x)*d/sl);\n    if(d<1e-3){vi=0.;break;}\n  }\n  float ao=sqrt(sat(sdf(rp+n*.2)/.2));\n  \n  col=vec3(vi+ao);\n  if(sc.y<.5)\n  {\n  col*=hash(floor(rp*4.+.5)).x<.1?vec3(1,.4,.1):vec3(1);\n  }else{\n    ivec3 x=ivec3(rp*20.)+1000;\n    col*=(x.x^x.y^x.z)%109%64<8?vec3(.3,.3,.8):vec3(1);\n  }\n  \n  col=sat(col);\n  vec3 sk=vec3(.5,.6,.7)*pow(sat(rd.y+.9),2.);\n  col=mix(sk,col,exp(-l*.04));\n  \n  uv=fc/res;\n  suv=(uv*2.-1.)*asp;\n  \n  vec2 ruv=suv*8.;\n  vec2 auv=abs(fract(ruv)-.5);\n  col+=hash(ceil(vec3(ruv,alt*16.))).x<.1?float(any(lessThan(auv,vec2(.02)))&&all(lessThan(auv,vec2(.3)))):.0;\n  col+=step(abs(uv.y-.1),.03)*step(abs(uv.x-.5),.5*fract(alt))*step(fract(dot(vec2(1),suv)*20.+10.*alt),.5);\n  \n  col*=smoothstep(.8,.4,length(uv-.5));\n  col+=hash(vec3(fc,alt))*.05;\n  col.r=smoothstep(.0,1.,col.r);\n  \n  \n  col=mix(col,texture(iChannel0,uv).rgb,.5);\n\n\tfragColor = vec4(col,1);\n}","name":"Buffer A","description":"","type":"buffer"}]}