{"ver":"0.1","info":{"id":"43f3RM","date":"1707972999","viewed":75,"name":"分形测试","username":"LogSpiral","description":"fractalTest","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.500,0.750,4.000);\n    vec3 b = vec3(0.500,0.750,4.000);\n    vec3 c = vec3(0.500,0.500,0.500);\n    vec3 d = vec3(0.500,0.500,0.500);\n\n    return a + b*cos( 6.28318*(c*t+d));\n}\nvec2 invereive(vec2 v,float r)\n{return v*r*r/dot(v,v);}\nvec2 CplxDiv( vec2 a, vec2 b )  { float d = dot(b,b); return vec2( dot(a,b), a.y*b.x - a.x*b.y ) / d; }\nvec2 CplxPow( vec2 z, float n ) { float r = length( z ); float a = atan( z.y, z.x ); return pow( r, n )*vec2( cos(a*n), sin(a*n) ); }\nvec2 CplxSqrt( vec2 z )         { float m = length(z); return sqrt( 0.5*vec2(m+z.x, m-z.x) ) * vec2( 1.0, sign(z.y) ); }\nvec2 CplxConj( vec2 z )         { return vec2(z.x,-z.y); }\nvec2 CplxEXP(vec2 z){return exp(z.x)*vec2(cos(z.y),sin(z.y));}\nvec2 CplxMul(vec2 z1,vec2 z2)\n{\n    return vec2(z1.x*z2.x-z1.y*z2.y,z1.x*z2.y+z1.y*z2.x);\n}\nvec2 CplxCos(vec2 z){return (CplxEXP(z)+CplxEXP(-z))*0.5f;}\nfloat GetFac()\n{\nreturn 0.5+0.5*cos(iTime);\n}\nvec2 UpdateCplx(vec2 z,vec2 z0)\n{\n    return CplxPow(z,2.0)+z0;\n    return CplxEXP(CplxPow(z,2.0))-z*2.0+z0;//z*CplxEXP(vec2(0,iTime))//+vec2(cos(iTime),sin(iTime))*.5\n}\nfloat lerp(float from,float to,float t)\n{\nreturn from + (to-from)*t;\n}\nvec2 lerp(vec2 from,vec2 to,vec2 t)\n{\n    return vec2(lerp(from.x,to.x,t.x),lerp(from.y,to.y,t.y));\n    \n}\nvec3 lerp(vec3 from,vec3 to,float t)\n{\n    return vec3(lerp(from.x,to.x,t),lerp(from.y,to.y,t),lerp(from.z,to.z,t));\n    \n}\n\nbool StopCondition(vec2 z)\n{\nreturn length(z)>=16.0f;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec4 MouseData = texture(iChannel0,vec2(.0));\n    vec2 mouse = MouseData.xy;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;//iResolution.xy\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col=vec3(0,0,1);\n    uv-=vec2(0.5);\n    uv.x*=iResolution.x/iResolution.y;\n    uv+=vec2(0.5);\n    \n    uv-=mouse;\n    uv*=pow(0.5,iTime);\n    uv+=mouse;\n    \n    //vec2 z0 = lerp(vec2(-1,0.5f),vec2(1,2.5f),uv);\n    vec2 z0 = lerp(vec2(-2,-2),vec2(2,2),uv);\n    /*vec2 q = CplxEXP(vec2(0.0,iTime))*.5+vec2(.5,0);\n    q = 2.0*q-CplxMul(q,q);\n    if(length(z0-q*0.85)<0.01)\n    {\n    fragColor = vec4(1,0,0,1);\n    return;\n    }*/\n    /*vec2 cz2 = vec2(1.0,0.0)-CplxSqrt(vec2(4.0,0.0)-z0*4.0);\n    float l2 = dot(cz2,cz2);\n    if(((l2>0.99&&l2<1.01))&&true)\n    {\n        fragColor = vec4(1,0,0,1);\n    }\n    else\n    {*/\n    \n    //z0=CplxMul(z0,vec2(0,-1));\n    //z0=CplxEXP(z0);\n    float m = 300.0f;\n    float n;\n    vec2 z=z0;\n\tfor (n = 0.0f; n < m; n++)\n\t{\n\t\tz = UpdateCplx(z,z0);\n\t\tif (StopCondition(z))\n\t\t\tbreak;\n\t}\n    if(n<m)\n    n-=log(log(dot(z,z))/log(10.0)*.5)/log(2.0);\n    float factor = n/m;\n    factor = pow(factor,0.5f);\n    fragColor = vec4(palette(factor)/(1.0-factor),1);\n    //if(length(uv-mouse)<=0.005*pow(0.5,iTime))fragColor=vec4(1.0,0,0,1.0);\n    //if(factor<0.33)\n    //    fragColor=vec4(lerp(vec3(0,0,0),col,factor*2.0f),1);\n    //else\n    //    fragColor=vec4(lerp(col,vec3(1,1,1),factor*2.0f-1.0f),1);\n    \n    /*uv-=0.5f;\n    float l = length(uv);\n    const float r = 0.02f;\n    if(l < r&&l>r-0.01f)\n    fragColor=vec4(1,0,0,1);*/\n    \n    //}\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 data = texture(iChannel0,vec2(.0));\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    vec2 mouseOld = data.xy;\n    mouse.x-=0.5;\n    mouse.x*=iResolution.x/iResolution.y;\n    mouse.x+=0.5;\n    //变换得到当前鼠标位置\n    mouse-=mouseOld;\n    mouse*=pow(0.5,iTime-iTimeDelta);\n    mouse+=mouseOld;\n    mouse=mix(mouse,mouseOld,0.95);\n    fragColor.xy=mouse;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 data = texture(iChannel0,vec2(.0));\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    vec2 mouseOld = data.xy;\n    mouse.x-=0.5;\n    mouse.x*=iResolution.x/iResolution.y;\n    mouse.x+=0.5;\n    //变换得到当前鼠标位置\n    mouse-=mouseOld;\n    mouse*=pow(0.5,iTime-iTimeDelta);\n    mouse+=mouseOld;\n    mouse=mix(mouse,mouseOld,0.95);\n    fragColor.xy=mouse;\n}","name":"Buffer B","description":"","type":"buffer"}]}