{"ver":"0.1","info":{"id":"wt3fzH","date":"1612220259","viewed":71,"name":"diza","username":"suwa","description":"dithering test\n\ni dont know how to draw polygons lmao","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["dither"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// dithering lookup table\nconst int pattern_lut[16] = int[16](\n    0x8000,0x8020,0xA020,0xA0A0,\n    0xA4A0,0xA4A1,0xA5A1,0xA5A5,\n    0xE5A5,0xE5B5,0xF5B5,0xF5F5,\n    0xFDF5,0xFDF7,0xFFF7,0xFFFF\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    int diza_x = int(fragCoord.x);\n    int diza_y = int(fragCoord.y)&3;\n    int diza = (diza_x&3) + (diza_y*4);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //float alpha = 30.0 * + float(abs(cos(iTime+(uv.x*4.321f+uv.y*2.031f))));\n    float alpha = length(vec2(.5,.5) - uv)*17.0 + iTime*5.0;\n    int indx = abs(int(alpha))&31;\n    if(indx>16) indx = (32-indx)&15;\n    bool is_diza = (pattern_lut[indx]>>diza)%2 == 1;\n\n    // Time varying pixel color\n    vec4 col_empty = vec4(0,0,0,1);\n    vec4 col = 0.5 + 0.5*cos(iTime+uv.xyxy+vec4(0,2,4,1)) * vec4(1,1,1,1);\n    if(is_diza) col *= col_empty;\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}