{"ver":"0.1","info":{"id":"7lBGRm","date":"1623549566","viewed":172,"name":"Distort based on HCV value","username":"asteriskman","description":"Distort pixel position based on HCV value of texture. Shake it around over time. Looks trippy.","likes":6,"published":1,"flags":0,"usePreview":1,"tags":["simple","texture","distort","trippy","hcv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float EPSILON = 1e-10;\n\nvec3 RGBtoHCV(in vec3 rgb)\n{\n    // RGB [0..1] to Hue-Chroma-Value [0..1]\n    // Based on work by Sam Hocevar and Emil Persson\n    vec4 p = (rgb.g < rgb.b) ? vec4(rgb.bg, -1., 2. / 3.) : vec4(rgb.gb, 0., -1. / 3.);\n    vec4 q = (rgb.r < p.x) ? vec4(p.xyw, rgb.r) : vec4(rgb.r, p.yzx);\n    float c = q.x - min(q.w, q.y);\n    float h = abs((q.w - q.y) / (6. * c + EPSILON) + q.z);\n    return vec3(h, c, q.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = texture(iChannel0, uv).rgb;\n    float h = RGBtoHCV(col).z;\n    float scale = 0.02;\n    vec3 col2 = texture(iChannel0, vec2(uv.x+h*sin(iTime)*scale, uv.y+(1.-h)*cos(iTime*0.75)*scale)).rgb;\n\n    // Output to screen\n    fragColor = vec4(col2,1.0);\n}","name":"Image","description":"","type":"image"}]}