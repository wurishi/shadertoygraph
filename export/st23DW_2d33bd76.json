{"ver":"0.1","info":{"id":"st23DW","date":"1623956279","viewed":91,"name":"- Tower of Squares -","username":"Mihaha","description":"Just a bunch of Spinning Squares","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["lines","vignette","rotation","figures","recs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n> by MihasGames, 17.06.2021 <\n(https://mihas-games.itch.io/)\n\n*/\n\nfloat sum(vec2 v) { return v.x + v.y; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(1);\n    float map = 3., \n          t = iTime;\n    \n    // Pixel Normalizations //\n    vec2 uv101 = fragCoord.xy/iResolution.xy - 0.5,\n         uv = uv101*map * vec2(iResolution.x / iResolution.y, 1);\n    \n    if (cos(sum(uv*20. + vec2(-t*4., 0))) > 0.98) col = vec3(0.85); // Lines //\n    \n    // Tower //\n    int rCount = 30;\n    for (int i = -rCount/2; i < rCount; i++) {\n        float r = t*3. + float(i)/float(rCount) * pow(sin(t), 2.)*5.; // Angle of Rotation\n        vec2 rectUv = ((uv+vec2(0, float(i)/float(rCount)*2.5-0.45))/vec2(1, cos(45.))) * mat2( cos(r), -sin(r), sin(r), cos(r) );\n\n        if (sum(abs(rectUv)) < 1. && sum(abs(rectUv)) > 0.9) col = vec3(uv101*vec2(5., 2.), 1.); // Filling the Contours of Squares\n        if (sum(abs(rectUv)) < 0.9) col = vec3(1.); // Filling inside\n    }\n    \n    col *= (1. - length(uv101/2.))*1.15; // Vignette //\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}