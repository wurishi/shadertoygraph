{"ver":"0.1","info":{"id":"lctcRM","date":"1730421400","viewed":74,"name":"butterfly effect","username":"pb","description":"interesting shape and colors for juliabulb of certain parameters","likes":11,"published":1,"flags":32,"usePreview":0,"tags":["fractal","juliabulb"],"hasliked":0,"parentid":"X3Sfzw","parentname":"chiaroscuro"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//philip.bertani@gmail.com\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy,\n        uv = u/R;\n\n    O *= 0.;\n\n    float[] gk1s = float[](\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.023792, 0.094907, 0.150342, 0.094907, 0.023792,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765\n    );\n\n    //golfed by fabriceneyret2\n    for (int k; k < 25; k++)      \n        O += gk1s[k] * texture(iChannel0, uv + ( vec2(k%5,k/5) - 2. ) / R );\n\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//philip.bertani@gmail.com\n\n#define P 6.\n#define rot(a)  mat2(cos(a+vec4(0,11,33,0)))\nfloat sc;\nfloat juliabulb(vec3 z) {\n  z.xz *= rot(1./5.); z.xy *= rot(iTime/5.);\n  vec3 julia = vec3(-.2,.2,.5);\n  float r, theta, phi=0., dr=1.;\n  for(float i = 0.; i < 5.; ++i) {\n    r = length(z);\n    if(r > 2.) break;\n    phi = atan(z.y, z.x); theta = acos(z.z/r);\n    dr = pow(r, P - 1.0) * dr * P + 1.0;\n    r = pow(r, P);\n    theta = theta * P; phi = phi * P;\n    z = r * vec3(cos(theta)*cos(phi), sin(theta)*cos(phi), sin(phi)) + julia;\n  }\n  sc = dr;\n  return  .5 * log(r) * r / dr ;\n}\n\nvoid mainImage( out vec4 O, vec2 U) {       \n    O *= 0.;\n    vec2 R = iResolution.xy;\n    vec3 D = normalize( vec3( U+U-R, R.y) )*2. ,\n         p = vec3(-.1,0,1.3); \n    p.xz *= rot(3.14);\n    for (float d,i ; ++i<50.; ) \n        d = juliabulb(p.xyz)/8.,\n        p += d * D,       \n        O += .07*cos( log(1.+sc) + vec4(1,2,3,0) ) / exp(i*i*i*i*d*d);\n\n    O = 1. - exp(-O*O);  \n}","name":"Buffer A","description":"","type":"buffer"}]}