{"ver":"0.1","info":{"id":"csScWt","date":"1688304902","viewed":262,"name":"ᵛᵉʳʸ ˢᵐᵃˡˡ ˢʰᵃᵈᵉʳˢ [85 Chars]","username":"SnoopethDuckDuck","description":"This was an attempt to get something cool with as few characters possible","likes":18,"published":3,"flags":0,"usePreview":0,"tags":["tiny","small","tweet","golf","100chars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Abstract fractal [85] \n// >>> DON'T PLAY WITH THIS OR YOUR WEBGL WILL CRASH <<<\nvoid mainImage( out vec4 O, vec2 I )\n{ \n   for(O-=O; O.x<0.4;)\n       O += .05/length(tan(O.x-(I*=.5)));\n}\n// >>> DON'T PLAY WITH THIS OR YOUR WEBGL WILL CRASH <<<\n\n/*\n\n// Stars [85]\nvoid mainImage( out vec4 O, vec2 I )\n{ \n    for(O-=O; O.w++ < 9.;)\n    O += atan(2.-length(tan(I*=.5)));\n}\n\n// 2^n fractal [85]\nvoid mainImage( out vec4 O, vec2 I )\n{ \n    for(int i; i++ < 8;)\n    O = 0.*O + cos(O/length(cos(I*=.5)));\n}\n\n// Grid [93]\nvoid mainImage( out vec4 O, vec2 I )\n{ \n    O *= 0.;\n    //I += 100. * iTime;\n    for(int i; i++ < 9;)\n    O += .1*atan(2.-length(tan(I*=.25)));\n}\n\n//*/\n","name":"Image","description":"","type":"image"}]}