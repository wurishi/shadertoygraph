{"ver":"0.1","info":{"id":"DdjcR1","date":"1687425250","viewed":92,"name":"Outline generator","username":"ToglivvilgoT","description":"Gets the outlines of an image","likes":1,"published":1,"flags":0,"usePreview":1,"tags":["lines","outlines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//note: only works well with some resolutions\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy + iTime / 1000.;\n    vec4 samp = vec4(0., 0., 0., 1.); \n    vec3 color = vec3(1., 1., 1.);\n        \n    for (float x = -2.; x <= 2.; x += 2.)\n    {\n        for (float y = -2.; y <= 2.; y += 2.)\n        {\n            samp = texture(iChannel0, uv + vec2(x / iResolution.x, y / iResolution.y));\n            samp *= x;\n            \n            color -= samp.xyz;\n            \n            samp = texture(iChannel0, uv + vec2(x / iResolution.x, y / iResolution.y));\n            samp *= y;\n            \n            color -= samp.xyz;\n        }\n    }\n    \n    float gray = (color.x + color.y + color.z) / 3.;\n    gray = step(0.4, gray);\n    color = vec3(gray, gray, gray);\n    color *= texture(iChannel0, uv).xyz;\n    color = floor(color * 8.) / 8.;\n    \n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}