{"ver":"0.1","info":{"id":"3tsGWN","date":"1556474790","viewed":120,"name":"Hangover Fun","username":"el_visio","description":"Chessboard spiral","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spiral","chessboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv_orig = (fragCoord - iResolution.xy * 0.5) / (iResolution.x);\n\n    vec2 uv_dim = fragCoord / iResolution.xy;\n\n    float squsize = 0.2 + 0.15 * sin(iTime);\n \n    float dist = (uv_orig.x*uv_orig.x + uv_orig.y*uv_orig.y)*(0.0 + sin(iTime*0.23)*5.0);\n    float rot = 0.5 * iTime + dist;\n    \n    vec2 uv = vec2(uv_orig.x*sin(rot)+uv_orig.y*cos(rot), uv_orig.x*cos(rot)-uv_orig.y*sin(rot));\n    \n    // Time varying pixel color\n    vec3 col = mod(uv.x, squsize) > (squsize*0.5) ^^ mod(uv.y, squsize) > (squsize*0.5) ? vec3(1.0,uv_dim.y,0.5) : vec3(0.0,1.0,uv_dim.x);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}