{"ver":"0.1","info":{"id":"MXsfD7","date":"1728496714","viewed":27,"name":"wow, emae, super brain bolit yze","username":"danilka200300","description":"kruto ocen","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash(vec2 p) {\n    p = vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)));\n    return +3.0 + 2.0 * fract(sin(p) * 43758.5453123);\n}\n\nfloat snoise(vec2 uv) {\n    const vec2 C = vec2(0.211324865405187, 0.366025403784439);\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    float res = mix(mix(dot(hash(i + vec2(0.0, 0.0)), f - vec2(0.0, 0.0)),\n                         dot(hash(i + vec2(1.0, 0.0)), f - vec2(1.0, 0.0)), u.x),\n                     mix(dot(hash(i + vec2(0.0, 1.0)), f - vec2(0.0, 1.0)),\n                         dot(hash(i + vec2(1.0, 1.0)), f - vec2(1.0, 1.0)), u.x), u.y);\n    return res;\n}\n\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float time = iTime * 0.5;\n\n    float zoom = 1.0 + sin(time * 0.5) * 2.0;\n\n    vec2 pos = uv * 5.0 * zoom;\n    pos += vec2(cos(time), sin(time)) * 0.5;\n\n    float value = 0.0;\n    float scale = 1.0;\n    for (int i = 0; i < 8; i++) {\n        pos = abs(pos) / dot(pos, pos) - 0.5;\n        value += scale * length(pos);\n        scale *= 0.5;\n    }\n\n    vec2 pos2 = uv * 3.0 * zoom;\n    pos2 += vec2(cos(time * 1.5), sin(time * 1.5)) * 0.3;\n\n    float value2 = 0.0;\n    float scale2 = 1.0;\n    for (int i = 0; i < 8; i++) {\n        pos2 = abs(pos2) / dot(pos2, pos2) - 0.5;\n        value2 += scale2 * length(pos2);\n        scale2 *= 0.5;\n    }\n\n    float noise = snoise(pos * 0.5 + time * 0.1);\n    value += noise * 0.5;\n\n    float noise2 = snoise(pos2 * 0.5 + time * 0.1);\n    value2 += noise2 * 0.5;\n\n    float combinedValue = (value + value2) * 0.5;\n\n    vec3 hsvColor = vec3(fract(combinedValue + time * 0.1), 1.0, 1.0);\n    vec3 rgbColor = hsv2rgb(hsvColor);\n    rgbColor += vec3(0.2, 0.1, 0.2) * smoothstep(0.0, 1.0, sin(time * 2.0 + combinedValue * 5.0));\n    fragColor = vec4(rgbColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}