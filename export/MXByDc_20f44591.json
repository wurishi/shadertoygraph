{"ver":"0.1","info":{"id":"MXByDc","date":"1728001643","viewed":16,"name":"Square Checkerboard W/ Circles","username":"zebenbrown","description":"School","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles","checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float SQUARE_COUNT_MODIFIER = 4.0;\nconst vec3 SQUARE_COLOR = vec3(1.0, 0.0, 0.0);\nconst float CIRCLE_OFFSET = 0.2;\nvoid Background(out vec4 fragColor, in vec2 fragCoord)\n{\n// Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    //Gives scrolling effect across x-axis\n    uv.x += iTime*.25;\n    //Gives scrolling effect across y-axis\n    uv.y += iTime*.25;\n    uv *= SQUARE_COUNT_MODIFIER;\n    uv = (fract(uv));\n    \n    //Color for the 1 value of step\n    vec3 color = sin(SQUARE_COLOR);\n    //step checks uv.x's values and splits it by 0.5 depending on if the value is 1 or 0\n    float t = (step(0.5, uv.x));\n    //step checks uv.y's values and splits it by 0.5 depending on if the value is 1 or 0\n    float t2 = (step(0.5, uv.y));\n    \n    //Rotates circles\n    vec2 center = vec2(abs(cos(iTime)), abs(cos(iTime)));\n    //Grabbed this from one of the examples done in class, don't exactly remember what it does \n    //but I know it relates to the rotating circles\n    float dist_x = distance(uv, center);\n    \n    //Creates the effect of circles within the squares\n    float smooth_x = (smoothstep(0.10, 0.11, dist_x));\n    //fragColor = vec4(uv, 0.0, 1.0);\n    fragColor = vec4(t * t2 * color * smooth_x, 1.0);\n    //fragColor = vec4(uv, 0.0, 1.0);\n    // Output to screen\n    //fragColor = vec4(color * t, t, t,1.0);\n    }\n    \n   \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    Background(fragColor, fragCoord);\n}","name":"Image","description":"","type":"image"}]}