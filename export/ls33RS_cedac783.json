{"ver":"0.1","info":{"id":"ls33RS","date":"1450389882","viewed":378,"name":"Tamby's Gears","username":"TambakoJaguar","description":"I wanted to draw stars, but I created gears instead, very easily. Then I improved it with textures and this is the result","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["test","gears","shading","metal","rotating","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"/*\n\"Tamby's gears\" by Emmanuel Keller aka Tambako - December 2015\nLicense Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\nContact: tamby@tambako.ch\n*/\n\nconst float pi = 3.14159;\nconst float bs = 0.0015;\nconst float e = 0.07;\nconst float speed = 22.;\nconst float rc = 0.025;\n\nconst float aawidth = 0.9;\nconst int aasamples = 2;\n\nvec2 rotateVec(vec2 vect, float angle)\n{\n    vec2 rv;\n    rv.x = vect.x*cos(angle) + vect.y*sin(angle);\n    rv.y = vect.x*sin(angle) - vect.y*cos(angle);\n    return rv;\n}\n\nvec3 overlay(vec3 col, float v)\n{\n   return mix(mix(vec3(0.), col, clamp(v*2., 0., 1.)), vec3(1.), clamp(v*2. - 1., 0., 1.));\n}\n\nvec4 gear(vec2 uv, vec2 center, float r, float nb, float t, float rs, float ph)\n{\n    // Basic contours\n\tuv-= center + vec2(0., 0.5*(0.55 - (iResolution.x-iResolution.y)/iResolution.x)); \n    float angle = atan(uv.x, uv.y);\n    float rot = rs*iTime;\n    float v = length(uv) + r*t*(smoothstep(e, 1.-e, sin(ph + angle*nb + rot)*0.5 + 0.5));    \n    float v1 = smoothstep(r, r+bs, v);  \n    float v2 = smoothstep(e, 1.-e, cos(ph + angle*nb + rot)*0.5 + 0.5); \n    \n    // Metal texture\n    vec2 uvr = rotateVec(uv*3.2, rot/nb) - center;\n    vec2 uv2 = uv*3.2 - center;\n    vec4 txt = texture(iChannel0,uvr);\n    \n    // Metallic reflection gradient\n    vec3 grad = vec3(0.2 + .3*smoothstep(-1.0, 0.5, uv2.y+0.5) -0.3*smoothstep(0.12, 0.31, uv2.y+1.1) + 0.6*smoothstep(0.15, 0.57, uv2.y+1.7) + 0.3*smoothstep(0.35, 0.55, uv2.y+1.) - 0.6*smoothstep(0.6, 0.95, uv2.y+1.1));\n    vec3 i = mix(mix(grad, txt.rgb, 0.28 + grad.x*0.2), vec3(1.), v1);\n    float v3 = 0.3 + 0.5*v2*smoothstep(r+0.005, r-0.005, v)*smoothstep(r-0.008, r-0.004, v) + 0.2*smoothstep(r, r-bs, v+0.008); \n    i = mix(overlay(i, v3), vec3(1.), v1);\n    \n    // Shadow\n    float vs = length(uv + (0.02, 0.02)) + 0.3*r*t*(smoothstep(e, 1.-e, sin(ph + atan(uv.x + 0.02, uv.y + 0.02)*nb + rot)*0.5 + 0.5));  \n    float sh = mix(1., 1. - 0.5*smoothstep(r, r-0.05, vs-0.008), v1);\n    \n    return vec4(i*vec3(sh), v1);\n}\n\nvec3 gears(vec2 fragCoord, vec2 of)\n{\n    vec2 uv = (fragCoord.xy + of) / iResolution.xx;\n    \n    // We have five gears\n    vec4 v = gear(uv, vec2(0.22, 0.34), 0.2, 20., 0.15, speed, 0.);\n    v*= gear(uv, vec2(0.498, 0.34), 0.1, 9., 0.3, -speed, 1.9);\n    v*= gear(uv, vec2(0.777, 0.34), 0.2, 20., 0.15, speed, 2.5);\n    v*= gear(uv, vec2(0.38, 0.14), 0.08, 7., 0.35, -speed, -0.8);\n    v*= gear(uv, vec2(0.64, 0.04), 0.15, 14., 0.22, -speed, 2.2);\n    \n    // Background\n    float v1 = v.a;\n    vec3 bg = mix(vec3(1.0), mix(vec3(1., 0.95, 0.9), 0.4+texture(iChannel1,uv*4.).rgb, 0.5), clamp(v1, 0., 1.));\n\n    return v.rgb*bg;    \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{  \n    // Antialiasing\n    vec3 vs = vec3(0.);\n    for (int j=0;j<aasamples ;j++)\n    {\n       float oy = float(j)*aawidth/max(float(aasamples-1), 1.);\n       for (int i=0;i<aasamples ;i++)\n       {\n          float ox = float(i)*aawidth/max(float(aasamples-1), 1.);\n          vs+= gears(fragCoord, vec2(ox, oy));\n       }\n    }\n    vec3 i = vs/vec3(aasamples*aasamples);\n    \n    fragColor.xyz = i;\n\n}","name":"Image","description":"","type":"image"}]}