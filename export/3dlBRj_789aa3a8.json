{"ver":"0.1","info":{"id":"3dlBRj","date":"1588617070","viewed":138,"name":"Portals #PixelMaynia 4","username":"jaszunio15","description":"4th day of pixelmaynia. I decided to create a pixelated shader instead of drawing :)\nCreated in about 30 minutes - this code is quite messy xD\n\nShader License: CC BY 3.0\nAuthor: Jan Mróz (jaszunio15)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["portals","pixelart","pixelmaynia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Shader License: CC BY 3.0\n//Author: Jan Mróz (jaszunio15)\n\n#define FIRST_COLOR vec4(0.5, 1.0, 1.0, 0.0)\n#define SECOND_COLOR vec4(1.0, 0.8, 0.4, 0.0)\n\nvec4 drawPortal(vec2 uv)\n{\n    uv.y *= 4.0;\n    \n    vec4 noise = texture(iChannel0, uv * 0.1 + iTime * 0.01) - 0.5;\n   \n    uv.y -= smoothstep(1.0, 0.0, length(uv)) * 0.6;\n    \n    float angle = atan(uv.y, uv.x);\n    angle += pow(length(uv), 1.4);\n    \n    uv.xy += (noise.xy) * 0.5;\n    \n    float arms = sin((angle * 7.0) + iTime * 0.5) * 0.5 + 0.5;\n    arms *= sin((angle * 18.0) + iTime * 2.0) * 0.2 + 0.8;\n    float bloom = smoothstep(1.0, 0.0, length(uv));\n    float mask = smoothstep(2.0, 1.0, length(uv));\n    float outline = smoothstep(0.2, 0.0, abs(length(uv) - 1.6));\n   \t\n    vec4 portal = (vec4(arms) + bloom * 2.0) * mask + outline;\n    portal -= mod(portal, vec4(1.0 / 8.0));\n    \n    return portal;\n}\n\nfloat drawParticles(vec2 uv, float speed)\n{\n\tvec2 particleUV = (uv * 7.0 + vec2(0.0, iTime * speed));\n    particleUV = vec2(particleUV.x, fract(particleUV.y + iTime) - 0.5);\n    \n    float particle = smoothstep(0.2, 0.0, length(particleUV));\n    \n    return particle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\tuv -= mod(uv, 0.03);\n    \n    vec4 portal1 = drawPortal((uv - vec2(0.0, 0.6)) * vec2(1.5, -1.5)) * FIRST_COLOR;\n    vec4 portal2 = drawPortal((uv - vec2(0.0, -0.6)) * vec2(1.5, 1.5)) * SECOND_COLOR;\n    \n    float particles = 0.0;\n    particles += drawParticles(uv, 0.1);\n    \n    vec4 noise = texture(iChannel0, uv) + 0.01;\n    float stars = pow(noise.z, 32.0) * 0.4;\n    \n    float line = smoothstep(0.14, 0.0, abs(uv.x));\n\n    vec4 particleCol = mix(FIRST_COLOR, SECOND_COLOR, smoothstep(0.4, -0.4, uv.y));\n    float particleMask = smoothstep(0.6, 0.55, abs(uv.y));\n    \n    fragColor = portal1 + portal2 + (particles + line) * particleCol * particleMask;\n    fragColor += stars;\n    fragColor -= mod(fragColor, vec4(1.0 / 8.0));\n    fragColor = pow(fragColor, vec4(0.8));\n}","name":"Image","description":"","type":"image"}]}