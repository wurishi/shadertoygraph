{"ver":"0.1","info":{"id":"sdKyR1","date":"1705372456","viewed":30,"name":"Steps","username":"Nieb","description":"step","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["step"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n//   INPUT: (0..1, ANY, ANY)\n//  OUTPUT:  0..1\nfloat LinearStep(float x, float min, float max) {\n    return clamp( (x-min)/(max-min), 0.0,1.0);\n}\n\n//==============================================================================\n//   INPUT: (0..1, ANY, ANY)\n//  OUTPUT:  0..1\nfloat SmoothStep(float x, float min, float max) {\n    return smoothstep(min, max, x);\n}\n\n//==============================================================================\n//   INPUT: (0..1, Param, Param)\n//  OUTPUT:  0..1\nfloat ExpStep(float x, float Bias, float Slope) {\n    x = clamp(x, 0.0, 1.0);\n    float p = 2.0/(1.0-Slope) - 1.0;\n    return (x < Bias) ? (       pow(    x, p) / pow(    Bias, p-1.0) ) :\n                        ( 1.0 - pow(1.0-x, p) / pow(1.0-Bias, p-1.0) );\n}\n\n//==============================================================================\n//   INPUT: (0..1, Param)\n//  OUTPUT:  0..1\nfloat SigStep(float x, float Slope) {\n    x = clamp(x, 0.0, 1.0);\n    return (x < 0.5) ? ( ( Slope)*2.0*(x    ) - 2.0*(x    ) )/( 2.0*( Slope)*2.0*(x    ) - Slope - 1.0 ) * 0.5 :\n                       ( (-Slope)*2.0*(x-0.5) - 2.0*(x-0.5) )/( 2.0*(-Slope)*2.0*(x-0.5) + Slope - 1.0 ) * 0.5 + 0.5;\n}\n\n\n////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\nvoid mainImage( out vec4 FragColor, in vec2 FragCoord ) {\n    vec2 ScreenUV = FragCoord/iResolution.xy;\n\n    float Bias  = 0.33;\n    float Slope = 0.50;\n    if (iMouse.x > 0.0001) { Slope = iMouse.x/iResolution.x*2.0 - 1.0; }\n    else                   { Slope = sin(iTime) * 0.98; }\n\n    float Grey;\n    if      (ScreenUV.y > 0.75) { Grey = LinearStep(ScreenUV.x, 0.0, 1.0); }\n    else if (ScreenUV.y > 0.50) { Grey = SmoothStep(ScreenUV.x, 0.0, 1.0); }\n    else if (ScreenUV.y > 0.25) { Grey = ExpStep(ScreenUV.x, Bias, Slope); }\n    else                        { Grey = SigStep(ScreenUV.x, Slope); }\n\n    FragColor = vec4(vec3(Grey),1.0);\n}\n","name":"Image","description":"","type":"image"}]}