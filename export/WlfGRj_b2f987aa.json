{"ver":"0.1","info":{"id":"WlfGRj","date":"1556830865","viewed":106,"name":"mandellost","username":"Pyramid","description":"i don't even any more","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Real-Imaginary multiplication\nvec2 rIMult(vec2 complex, vec2 other)\n{\n    float r=complex.x;\n    float i=complex.y;\n    \n    float or=other.x;\n    float oi=other.y;\n    \n    return vec2(r*or-i*oi,r*oi+i*or);\n}\n\n//Real-Imaginary addition\nvec2 rIAdd(vec2 complex, vec2 other)\n{\n\tfloat r=complex.x;\n    float i=complex.y;\n    \n    float or=other.x;\n    float oi=other.y;\n    \n    return vec2(r+or, i+oi);\n}\n\n//Real-Imaginary square magnitude\nfloat SqrMagnitude(vec2 complex)\n{\n    float r=complex.x;\n    float i=complex.y;\n    \n    return r*r+i*i;\n}\n\n//Get stability\nint steps(vec2 complex, int iterations)\n{\n    int n=0;\n    vec2 z=vec2(0);\n    while(n<iterations && SqrMagnitude(z)<=5.)\n    {\n        z=rIMult(z,z);\n        z=rIAdd(z,complex);\n        ++n;\n    }\n    \n    if(n==iterations)\n    {\n        return iterations;\n    }else{\n        return n;\n    }\n}\n\n#define hue(h) abs(fract(h + vec3(3,2,1)/3.) * 6. - 3.) -1.\n#define eel(h) abs(fract(h + vec3(3,2,1)/6.) * 7. - 3.) -1.4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t=iTime/2.;\n    vec2 target=vec2(-.60992,.464297);\n    //float zoom=mix(10.,.,abs(sin(t)));\n    float zoom=mix(1000.,12480.,abs(sin(t)));\n    //float zoom=40.;\n    int maxIt=40000;\n    float magic=float(maxIt/8);\n    \n    \n    \n    vec2 uv;\n    float sRatio=iResolution.x/iResolution.y;\n    uv.x=sRatio * (fragCoord.x / iResolution.x -.5);\n    uv.y=sRatio * (fragCoord.y / iResolution.y -.5);\n    uv/=zoom;\n    uv+=target;\n    \n    \n    \n    int amSteps=steps(uv, maxIt);\n    //float fSteps=mix(0.,1.,float(amSteps)/float(maxIt));\n    float fSteps=mix(.1,1.6,float(amSteps)/float(maxIt/8));\n    vec3 c=vec3(amSteps==maxIt?vec3(0):hue(fSteps*magic));\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}