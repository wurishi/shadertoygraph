{"ver":"0.1","info":{"id":"NdKfRc","date":"1658606443","viewed":81,"name":"antialiasing movement","username":"tskj","description":"Bottom is unantialiased, middle is box filter (straight line), top is convolution with triangle filter. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aliasing","antialiasing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float grad(float x) {\n    x = 3. * x - .5*3.;\n\n    if (x <= -3.) {\n        return 0.;\n    }\n    \n    if (x >= 0.) {\n        return 1.;\n    }\n    \n    float y = (x-3.) * (x-3.) * (-sign(x-3.)) + 3. * (x-1.)*(x-1.)*sign(x-1.) - 3. * (x+1.)*(x+1.)*sign(x+1.) + (x+3.)*(x+3.)*sign(x+3.);\n    \n    return y / 12.;\n}\n\n\nfloat linee(float x) {\n    return min(1.0, max(0.0, x+0.5));\n}\n\nfloat steep(float x) {\n    return 0.5 + 0.5*sign(x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float t = iTime * 5.;\n    \n    float scale = 1.0; // try something between 1.0 and 10.0\n    \n    float x = floor(uv.x * 100.0 * scale);\n\n    vec3 col;\n    if (uv.y > 0.66) {\n        col = vec3(1.0-grad(x-100.0*scale + t));\n    } else if (uv.y > 0.33) {\n        col = vec3(1.0-linee(x-100.0*scale + t));\n    } else {\n        col = vec3(1.0-steep(x-100.0*scale + t));\n    }\n\n    // Output to screen\n    fragColor = vec4(pow(col, vec3(1./2.2)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}