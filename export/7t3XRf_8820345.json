{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":2,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":3,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"const float ITER = 3.0;\nconst float POWER = 0.03;\n\n\nfloat rand(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898,12.1414))) * 83758.5453);\n}\n\nvec4 blur(vec2 uv, float strength) {\n    vec4 result = vec4(0.);\n    for (float i=-ITER; i <= ITER; ++i) {\n        float noise = rand(uv + i/ITER) - 0.5;\n        result += texture(iChannel2, uv + vec2(0, i + noise) * strength);\n    }\n    result /= (2.0 * ITER + 1.0);\n    return result;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 forground = texture(iChannel0, uv);\n    vec4 background = texture(iChannel3, uv);\n    \n    vec4 flame = texture(iChannel1, uv);\n    vec4 flame_blur = blur(uv, POWER);\n    \n    \n    flame = mix(flame, vec4(1.2*flame_blur.r,0,0,flame_blur.a), 1.0 - flame.a);\n    \n    vec4 col = mix(forground, flame, 1.0 - forground.a);\n    col = mix(background, col, col.a);\n    \n    fragColor = col;\n}\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"video","id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"float th = 20.0; // threshold\nfloat a2 = 1.2;\n\nfloat getAlpha(vec4 c){\n\treturn 1.0 - th*(c.g-a2*(max(c.r,c.b)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 fg = texture(iChannel0,uv);\n    \n    float alpha = step(0.5, getAlpha(fg));\n    \n\tfragColor = vec4(fg.rgb, alpha);\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"const float density = 8.0;\nconst float distortion = 0.1;\n\nconst float speed_1 = 5.0;\nconst float speed_2 = 5.0;\n\n\n\nfloat rand(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898,12.1414))) * 83758.5453);\n}\nfloat noise(vec2 n) {\n    const vec2 d = vec2(0.0, 1.0);\n    vec2 b = floor(n);\n    vec2 f = mix(vec2(0.0), vec2(1.0), fract(n));\n    return 0.5 * mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n}\nfloat fire(vec2 n) {\n    return noise(n) + noise(n * 2.1) * .6 + noise(n * 5.4) * .42;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 forground = texture(iChannel0, uv);\t\n    vec4 background = texture(iChannel1, uv);\n\n    \n    vec2 hold_uv = fragCoord * density / iResolution.y;\n    \n    float noise1 = fire(hold_uv - vec2(0.0, speed_1 * iTime));\n    float noise2 = fire(hold_uv + 0.43 - vec2(0.4, speed_2 * iTime));\n    \n    uv += distortion * vec2(noise1-0.5, noise2-0.5);\n    \n    fragColor = vec4(texture(iChannel0, uv).a);\n}\n\n\n\n\n\n\n\n\n\n","name":"Buffer B","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"4sXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"const float ITER = 3.0;\nconst float POWER = 0.03;\n\n\nfloat rand(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898,12.1414))) * 83758.5453);\n}\n\nvec4 blur(vec2 uv, float strength) {\n    vec4 result = vec4(0.);\n    for (float i=-ITER; i <= ITER; ++i) {\n        float noise = rand(uv + i/ITER) - 0.5;\n        result += texture(iChannel0, uv + vec2(i + noise, 0) * strength);\n    }\n    result /= (2.0 * ITER + 1.0);\n    return result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = blur(uv, POWER);\n}","name":"Buffer C","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"7t3XRf","date":"1734426929","viewed":19,"name":"Special__Veffecto_Flam_1","username":"avartation","description":"asdfcx","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["sdfcx"],"hasliked":0,"parentid":"","parentname":""}}