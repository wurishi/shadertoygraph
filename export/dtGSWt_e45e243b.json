{"ver":"0.1","info":{"id":"dtGSWt","date":"1686450809","viewed":88,"name":"truchet tiles-03","username":"jorge2017a2","description":"truchet tiles-03","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["truchettiles03"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(10.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat Hash21(vec2 p)\n{   p=fract(p*vec2(234.34,435.345));\n    p+=dot(p,p+34.26);\n    return fract(p.x*p.y);\n}\n\n\nvec3 figuraA0(vec2 p, vec3 col)\n{   float d0= sdBox( p, vec2(1.0,1.0) );\n    \n    float d1= sdSegment(p-vec2(-0.75,-1.0), vec2(0.0,0.0), vec2(-0.25,0.25) );\n    float d2= sdSegment(p-vec2(-0.5,-1.0), vec2(0.0,0.0), vec2(-0.5,0.5) );\n    float d3= sdSegment(p-vec2(-0.25,-1.0), vec2(0.0,0.0), vec2(-0.75,0.75) );\n    float d4= sdSegment(p-vec2(0.0,-1.0), vec2(0.0,0.0), vec2(-1.,1.0) );\n    float d5= sdSegment(p-vec2(0.25,-1.0), vec2(0.0,0.0), vec2(-1.25,1.25) );\n    float d6= sdSegment(p-vec2(0.5,-1.0), vec2(0.0,0.0), vec2(-1.5,1.5) );\n    float d7= sdSegment(p-vec2(0.75,-1.0), vec2(0.0,0.0), vec2(-1.75,1.75) );\n    float d8= sdSegment(p-vec2(1.0,-1.0), vec2(0.0,0.0), vec2(-2.0,2.0) );\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, abs(d0)-0.01);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d1);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d2);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d3);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d4);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d5);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d6);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d7);\n    col= DrawFigBorde(vec3(0.0,0.0,0.0), col, d8);    \n    return col;\n}\n\n\n\n//FabriceNeyret2, 2023-06-11\nvec3 figuraA(vec2 pp, vec3 col)\n{\n    vec2 p= rotatev2(pp, radians(45.0));\n    p = abs(p);\n    float d = max(p.x,p.y);\n    d =  mod(d+.1,.2)-.1;\n    //return vec3( smoothstep(6./iResolution.y, 0., abs(d) ) );\n     //final color\n    float width=0.5;\n    float  mask=smoothstep(0.01,-0.01, d-width);\n    float r = pow(1.0-sqrt( d),1.5 );\n    float g = pow(1.0-sqrt( d),1.5 );\n    float b = 1.0*(r+g);\n    col*=vec3(r,g,b)*mask;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,0.0);\n    float esc=3.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    \n    vec2 gv=fract(uv)-0.5;\n    vec2 id=floor(uv);\n    \n    float n=Hash21(id); //rango 0.0 a 1.0\n    float n2=Hash21(id+vec2(1.0,-1.0)); //rango 0.0 a 1.0\n    \n    float width=0.1;\n    if(n<0.5) gv.x*=-1.0;\n    \n    vec3 col=vec3(1.0);\n    gv = abs(gv*2.0) - .5; // Corners.\n\n    if(sin(iTime*3.0)>0.0)\n    {\n     if(n2<0.5)\n      {col= figuraA(gv*2.0,col);}\n     else\n     { vec2 pp= rotatev2(gv*2.0, radians(45.0));  col= figuraA(pp,col);  }\n    }\n    else\n    {\n     if(n2<0.5)\n      { col=figuraA0(gv*2.0,col);}\n     else\n      {vec2 pp= rotatev2(gv*2.0, radians(45.0)); col=figuraA0(pp,col);}\n    }\n    \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}