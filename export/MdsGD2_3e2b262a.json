{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"precision highp float;\n\n// Hardcoded parameters\nconst int points = 48;\nconst vec2 center = vec2(0.5, 0.5);\nconst vec3 radii = vec3(0.133, 0.133, 0.1);\nconst float omega = 0.05;\nconst vec2 initial_p_ref = vec2(0.46, 0.6);\nconst vec3 axo_x = vec3(0.984808, 0.173648, 0.);\nconst vec3 axo_y = vec3(-0.0868241, 0.492404, 0.866025);\n// --------------------\nconst float pi = 3.141592653589793;\nconst float dphi = 2.0 * pi / float(points);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p_ref = (iMouse.x + iMouse.y == 0.0 ? initial_p_ref *  iResolution.xy: iMouse.xy);\n\tfloat phi = omega * iTime;\n\tfloat gray = 1.0;\n\tfor (int i = 0; i < points; i++) {\n\t\tvec3 p3d = vec3(sin(phi), cos(phi), 0.0);\n\t\tp3d.z = 2.0 * p3d.x * p3d.y;\n\t\tp3d *= radii;\n\t\tvec2 p = center + vec2(dot(axo_x, p3d), dot(axo_y, p3d));\n\t\tp *= iResolution.xy;\n\t\tvec2 dr = p - fragCoord.xy;\n\t\tvec2 dr_ref = p - p_ref;\n\t\tfloat dist2_ref = dot(dr_ref, dr_ref);\n\t\tfloat delta_dist2 = 0.7 * 2.0 * max(abs(dr_ref.x), abs(dr_ref.y));\n\t\tfloat covered = 1. - smoothstep(dist2_ref - delta_dist2, dist2_ref + delta_dist2, dot(dr, dr));\n\t\tgray = gray + covered - 2.0 * gray * covered;\n\t\tphi += dphi;\n\t}\n\tfragColor = vec4(gray, gray, gray, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdsGD2","date":"1380052712","viewed":211,"name":"Willy","username":"daniel_flassig","description":"op-art inspired shapes","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d"],"hasliked":0,"parentid":"","parentname":""}}