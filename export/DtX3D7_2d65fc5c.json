{"ver":"0.1","info":{"id":"DtX3D7","date":"1671827574","viewed":462,"name":"Pixel Art Night Sky","username":"Spheya","description":"wanted to make this idk","likes":44,"published":1,"flags":0,"usePreview":1,"tags":["sky","night","pixelart","nightsky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 lerp(vec4 a, vec4 b, float t) {\n    return a * (1.0 - t) + b * t;\n}\n\nfloat noise(vec2 uv, mat3 transform) {\n    uv = (transform * vec3(uv, 1.0)).xy;\n    return 0.5 * (texture(iChannel0, uv + iTime * 0.0025).r + texture(iChannel0, vec2(0.0, 0.5) + uv - iTime * 0.0025).r);\n}\n\nbool tree(vec2 uv) {\n    vec2 warpedUv = vec2(uv.x + texture(iChannel0, vec2(0.3, uv.y * 0.1)).r * 0.2, uv.y);\n    \n    const vec2 center = vec2(0.83, 0.35);\n    vec2 direction = uv - center;\n    float dist = texture(iChannel0, normalize(direction) * 0.1).r;\n    dist += texture(iChannel0, normalize(direction)).r * 0.4;\n\n    return (warpedUv.x  > 0.91 + uv.y * 0.05 && warpedUv.x < 0.96 - uv.y * 0.05) || (distance(uv, center) < dist * 0.07 + 0.1);\n}\n\nbool star(vec2 uv, bool glow) {\n    ivec2 pixelCoords = ivec2(floor(uv.xy));\n    \n    bool isStar = false;\n    int stars = 0;\n    for(int x = -1; x <= 1; x++) {\n        for(int y = -1; y <= 1; y++) {\n            // random number generator is from https://www.shadertoy.com/view/Nsf3Ws\n            uint seed = uint(((pixelCoords.x + x) << 16) | (pixelCoords.y + y));\n            seed ^= 2747636419u;\n            seed *= 2654435769u;\n            seed ^= seed >> 16;\n            seed *= 2654435769u;\n            seed ^= seed >> 16;\n            seed *= 2654435769u;\n            \n            if((seed % 160u) == 1u) {\n                if(x == 0 && y == 0) {\n                    if((seed % 320u) == 1u && glow)\n                        isStar = true;\n                    else if(!glow)\n                        isStar = true;\n                }else{\n                    ++stars;\n                }\n            }\n        }\n    }\n    \n    return isStar && stars == 0;\n}\n\nfloat starIntensity(vec2 uv) {\n    if(star(uv, false)) {\n        return 1.0;\n    }\n    \n    if(star(uv + vec2(0.0, 1.0), true) || star(uv - vec2(0.0, 1.0), true) || star(uv + vec2(1.0, 0.0), true) || star(uv - vec2(1.0, 0.0), true)) {\n        return 0.25;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int height = 96;\n    float pixelSize = iResolution.y / float(height);\n    vec2 actualHeight = iResolution.xy / (fract(pixelSize) < 0.5 ? ceil(pixelSize) : floor(pixelSize));\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = floor(uv * actualHeight) / actualHeight;\n    \n    float cloud1 = noise(uv, mat3(\n        1.0, 0.5, 0,\n        0.2, 3.0, 0,\n        0.0, 0.0, 1\n    ) * 0.4);\n    cloud1 -= (uv.y - 0.33) * 1.6;\n    cloud1 -= uv.x * 0.5;\n    \n    float cloud2 = noise(uv, mat3(\n        1.0, 0.5, 0,\n        0.2, 2.2, 0,\n        0.5, 0.2, 1\n    ) * 0.6);\n    cloud2 -= (uv.y - 0.33) * 0.8;\n    cloud2 -= uv.x * 0.2;\n\n    float cloud3 = noise(uv, mat3(\n        1.0, 0.5, 0,\n        0.25, 2.2, 0,\n        0.47, 0.2, 1\n    ) * 0.6);\n    cloud3 -= (uv.y - 0.33) * 1.0;\n    cloud3 -= uv.x * 0.2;\n    \n    float cloud4 = noise(uv, mat3(\n        1.0, 0.5, 0,\n        0.25, 2.2, 0,\n        0.47, 0.2, 1\n    ) * 0.4);\n    cloud4 -= (uv.y - 0.33) * 0.9;\n    cloud4 -= uv.x * 0.2;\n    \n    float terrainHeight = (texture(iChannel0, vec2(uv.x * 0.3 + 0.5, 0.0)).r * 0.2 + uv.x * 0.1 - 0.05);\n    \n    if(texture(iChannel0, vec2(uv.x + 0.8, 0.0)).r > 0.4)\n        terrainHeight += float(int(uv.x * actualHeight) & 0x1) / 96.0;\n\n    if(uv.y < terrainHeight || tree(uv)) {\n        fragColor = vec4(0.075, 0.063, 0.137, 1.0);\n    } else if(cloud1 > 0.4) {\n        fragColor = vec4(1.0, 0.91, 0.706, 1.0);\n    } else if(cloud1 > 0.3) { \n        fragColor = vec4(0.93, 0.74, 0.536, 1.0);\n    } else if(cloud2 > 0.28) {\n        fragColor = vec4(0.753, 0.459, 0.329, 1.0);\n    } else if(cloud3 > 0.1) {\n        fragColor = vec4(0.435, 0.29, 0.396, 1.0);\n    } else if(cloud4 > -0.01) {\n        fragColor = lerp(vec4(0.255, 0.208, 0.322, 1.0), vec4(0.435, 0.29, 0.396, 1.0), starIntensity(uv * actualHeight));\n    } else{\n        fragColor = lerp(vec4(0.075, 0.063, 0.137, 1.0), vec4(1.0, 0.91, 0.706, 1.0), starIntensity(uv * actualHeight));\n    }\n}","name":"Image","description":"","type":"image"}]}