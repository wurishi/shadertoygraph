{"ver":"0.1","info":{"id":"lf3fRN","date":"1732766790","viewed":128,"name":"Rotating Tree","username":"hendos43","description":"// https://x.com/zozuar/status/1861521606390018548\n// yonatan's work, remade for shadertoy\n","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://x.com/zozuar/status/1861521606390018548\n// yonatan's work, remade for shadertoy\n\n\nmat2 rotate2D(float a){float c=cos(a),s=sin(a);return mat2(c,-s,s,c);}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{    \n    vec3 o = vec3(0);\n    float t = iTime;\n    vec2 r = iResolution.xy;\n    \n    // Offset the coordinates slightly right to center the view\n    vec3 FC = vec3(fragCoord.xy + vec2(r.x * -0.2, 0.0), 0.0);\n    FC.xy += vec2(sin(t*0.1), cos(t*0.1)) * 0.1;\n\n    float j,i,e,v,u,S;\n    vec3 w,p,q;\n    \n    for(q.yz+=.6;\n        p=q+=(FC.rgb/r.y-.5)*e,\n        e=v=3.,\n        p.xz*=rotate2D(t),\n        w=p/e,\n        i++<1e2;\n        e=min(e,(w.x+w.z)/S),\n        o+=.01/exp(e*S))\n        for(j=S=.7;\n            j++<9.;\n            e=min(e,max(length(p.xz=abs(p.xz)-.4),p.y=2.-p.y)/v))\n            w.y-=2.5,\n            S/=u=min(dot(w,w),.5)+.02,\n            w=abs(w)/u-.4,\n            v/=u=dot(p,p),\n            p/=u;\n            \n    fragColor = vec4(sqrt(o), 1.0);\n}","name":"Image","description":"","type":"image"}]}