{"ver":"0.1","info":{"id":"4tGXzW","date":"1483299251","viewed":192,"name":"modified 2d Blocky Dissolve","username":"electricity256","description":"original shader: https://www.shadertoy.com/view/Xl2SRd\ni modified it a bit","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","effect","transition","dissolve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst float resolution = 5.0;\n    \nfloat rand2(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(rand2(co.xy)*13.0,78.233))) * 43758.5453);\n}\n\n//float getRight(vec2 a){\n    \n//}\n\nfloat dist(vec2 a){\n    return pow(pow(a.x,2.0)+pow(a.y,2.0),0.5);\n}\n\nfloat closestEmptyDist(vec2 fc,float t){\n    float closestdist=resolution;\n    \n    for(float k=0.0;k<resolution*2.0;k++){\n        if(k>=resolution*2.0*(t)+2.0){\n        \tcontinue;   \n        }\n    \tfor(float v=0.0;v<resolution*2.0;v++){\n            if(v>=resolution*2.0*(t)+2.0){\n                continue;   \n            }\n            vec2 tmp2=vec2(\n                floor((fc.x+(v-resolution)*(t)+(1.0-t)) / resolution),\n                floor((fc.y+(k-resolution)*(t)+(1.0-t)) / resolution)\n            );\n            vec2 tmp3=vec2(\n                (v-resolution),\n                (k-resolution)\n            );\n        \tfloat tmp = rand(tmp2);\n            if(t < tmp){\n                float tmpdist=dist(tmp3);\n                if(closestdist>tmpdist){\n\t            \tclosestdist=tmpdist;\n                    \n                }\n            }else{\n             //   closestdist=0.0;\n            }\n        }\n    }\n    return (resolution-closestdist)/resolution;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 lowresxy = vec2(\n    \tfloor(fragCoord.x / resolution),\n    \tfloor(fragCoord.y / resolution)\n    );\n    \n    \n    float right = rand(vec2(\n    \tfloor((fragCoord.x+1.0) / resolution),\n    \tfloor(fragCoord.y / resolution)\n    ));\n    float left = rand(vec2(\n    \tfloor((fragCoord.x-1.0) / resolution),\n    \tfloor(fragCoord.y / resolution)\n    ));\n    float upper = rand(vec2(\n    \tfloor((fragCoord.x) / resolution),\n    \tfloor((fragCoord.y-1.0) / resolution)\n    ));\n    float lower = rand(vec2(\n    \tfloor((fragCoord.x) / resolution),\n    \tfloor((fragCoord.y+1.0) / resolution)\n    ));\n    \n    float curstage=(sin(iTime/7.0)+1.0)/2.0;\n    \n    if(curstage > rand(lowresxy)){\n        float bCurrent=0.999+floor((1.0+sin(1.0 * (fragCoord.x+fragCoord.y))/2.0));\n        float gCurrent=0.0;\n        float rCurrent=closestEmptyDist(fragCoord,curstage);\n            \n        /*if(curstage<right ){\n            gCurrent=1.0;\n        }\n        if(curstage<left ){\n            gCurrent=1.0;\n        }\n        if(curstage<upper ){\n            gCurrent=1.0;\n        }\n        if(curstage<lower ){\n            gCurrent=1.0;\n        }\n        \n        if(gCurrent!=1.0){\n            \n        }*/\n        \n\t\tfragColor = vec4(rCurrent,gCurrent,bCurrent,1.0);\n    }else{\n\t\tfragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}