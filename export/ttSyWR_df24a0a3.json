{"ver":"0.1","info":{"id":"ttSyWR","date":"1594075422","viewed":123,"name":"Scalable grid 2","username":"opexu","description":"Another grid variant to threejs","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nmat2 scale(vec2 _scale){return mat2(_scale.x,0.0, 0.0,_scale.y);}\nfloat grid(vec2 _uv, float _width){\n\tvec2 bl = step(vec2(_width), _uv);\n    vec2 tr = step(vec2(_width), 1.-_uv);\n    return 1. - bl.x * bl.y * tr.x * tr.y;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fCoord ){\n    float width1 = 0.003;\n\tfloat width2 = 0.003;\n\tfloat zoom = 17.976;\n\tvec3 cam = vec3(0.520,.0,zoom);\n    float minSize = min(iResolution.x, iResolution.y);\n    float fzoom = mod(zoom, 2.)+2.;\n    vec2 uv = (fCoord.xy - .5 * iResolution.xy) / minSize;\n    uv *= scale(vec2(fzoom));\n    uv = uv - cam.xy;\n    uv = fract(uv);\n    \n    vec3 col1 = vec3(grid(uv, width1*fzoom));\n    vec3 col2 = vec3(grid(fract(uv*10.), width2*10.*fzoom)*0.1);\n    \n    vec3 col = col1+col2;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}