{"ver":"0.1","info":{"id":"stXyRn","date":"1647420263","viewed":203,"name":"7_2_varyDist","username":"tomoe","description":"sample code\nepsilon-neighborhood in Manhattan, Euclid, and chessboard distance","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["ch7"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\nfloat length2(vec2 p){\n    float t = mod(iTime, 3.0);\n    p = abs(p);\n        return t < 1.0 ? length(p)://Euclid\n            t < 2.0 ? dot(p, vec2(1.0))://Manhattan\n        max(p.x, p.y);//chessboard\n}\nfloat circle(vec2 p, vec2 c, float r){\n    return length2(p - c) - r;\n}\nvec3 contour(float v, float interval){\n    return abs(v) < 0.01 ? vec3(0.0):\n    mod(v, interval) < 0.01 ? vec3(1.0):\n    mix(vec3(0, 0, 1), vec3(1, 0, 0), atan(v) / PI + 0.5);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 pos = (2.0 * fragCoord.xy -iResolution.xy)/ min(iResolution.x, iResolution.y);\n    fragColor.rgb = vec3(contour(circle(pos, vec2(0.0), 1.0), 0.1));\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}