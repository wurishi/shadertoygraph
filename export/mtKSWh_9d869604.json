{"ver":"0.1","info":{"id":"mtKSWh","date":"1686073433","viewed":52,"name":"yooo squaress","username":"Duck_in_Big_Red_Shoes","description":"square\nupdate: now aliased, but now the functions are complicated :","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nfloat blur(float x)\n{\n    float aliasRadius = 0.01;\n    return smoothstep(1.-aliasRadius, 1.+aliasRadius, x) - step(1.,x)\n    - smoothstep(0.-aliasRadius, 0.+aliasRadius, x)+1.\n    - smoothstep(2.-aliasRadius, 2.+aliasRadius, x);\n}\n\nfloat smoothstep2(float x, float a, float shift, float doshift)\n{\n    float c = float(shift<1.);\n    shift = mod(shift,1.0);\n    float b = doshift*float(a<1.-shift) + (1.-doshift)*(1.-float(a<shift));\n    b = c*b + (1.-c)*(1.-b);\n    return step(1.,x) + b * blur(x);\n}\n\nfloat f(float x, float y, vec2 shift, float doshift)\n{\n    // vec2 sq = smoothstep(1.-aliasRadius, 1.+aliasRadius, mod(vec2(x,y),2.0));\n    // return mod(sq.x+sq.y,2.0);\n    // vec2 shift = vec2(0.,0.);\n    float sx1 = smoothstep2(mod(-x,2.0), mod(y,1.0), shift.y, doshift);\n    float sy1 = smoothstep2(mod(-y,2.0), mod(x,1.0), shift.x, doshift);\n    float sx2 = smoothstep2(mod( x,2.0), mod(y,1.0), shift.y, doshift);\n    float sy2 = smoothstep2(mod( y,2.0), mod(x,1.0), shift.x, doshift);\n    return sx1 * sy1 + sx2 * sy2;    \n}\n\nmat2 rotate2D(float theta)\n{\n    return mat2(cos(theta),-sin(theta), sin(theta),cos(theta));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aliasRadius = 0.1;\n\n    vec3 col = vec3(0.0);\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float zoom = 5.0;\n    float T = 1.5;\n    float rotT = 20.0;\n    float theta = PI * iTime/rotT;\n    uv = rotate2D(-theta) * uv;\n    uv *= zoom;\n    int i = int(iTime/T) % 2;\n    vec2 shift = vec2(0., 0.);\n    shift[i] = mod(2.0 * fract(iTime/T),2.0);\n    float doshift = mod(floor(mod(uv[1-i],2.0)),2.0);\n    vec2 uvshift = uv - doshift * shift;\n        \n    float weight = f(uvshift.x, uvshift.y, shift, doshift);\n    col += weight;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}