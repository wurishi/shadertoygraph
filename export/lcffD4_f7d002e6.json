{"ver":"0.1","info":{"id":"lcffD4","date":"1723753340","viewed":30,"name":"Boring Sand","username":"OetkenPurveyorOfCode","description":"sand","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sand"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float angle) {\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\nfloat noise(vec2 uv) {\n    return sin(cos(uv.x) + sin(uv.y)+iTime);\n}\n\nvec2 hash22(vec2 uv) {\n    uv = vec2(dot(uv, vec2(127.1,311.7)),\n              dot(uv, vec2(269.5,183.3)));\n    return 2.0 * fract(sin(uv) * 43758.5453123) - 1.0;\n}\n\nfloat pnoise(vec2 uv) {\n    vec2 iuv = floor(uv);\n    vec2 fuv = fract(uv);\n    vec2 blur = smoothstep(0.0, 1.0, fuv);\n    return mix(mix(dot(hash22(iuv + vec2(0.0,0.0)), fuv - vec2(0.0,0.0)),\n                   dot(hash22(iuv + vec2(1.0,0.0)), fuv - vec2(1.0,0.0)), blur.x),\n               mix(dot(hash22(iuv + vec2(0.0,1.0)), fuv - vec2(0.0,1.0)),\n                   dot(hash22(iuv + vec2(1.0,1.0)), fuv - vec2(1.0,1.0)), blur.x), blur.y) + 0.5;\n}\n\nfloat hash12(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43759.5453);\n}\n\n\n\nfloat fbm(vec2 uv, int octaves, float amp_start, float freq_coeff, float amp_coeff) {\n    float fbm = 0.0;\n    float amplitude = amp_start;\n    vec2 shift = vec2(0.0);\n    vec2 warped_uv = vec2(0.0);\n    float zoom = 1.0;\n    mat2 rotation = rotate(0.5);\n    for (int i = 0; i <octaves; i++) {\n        warped_uv = uv * zoom + float(i) + shift +iTime;\n        fbm += amplitude * pnoise(warped_uv);\n        uv *= freq_coeff;\n        shift += sin(warped_uv);\n        zoom *= 1.5;\n        amplitude *= amp_coeff;\n    }\n    return fbm;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    int octaves = 8;\n    float amp_start = 1.3;\n    float amp_coeff = 0.9;\n    float freq_coeff = 2.0;\n    vec3 effect_color = vec3(0.7, 0.6, 0.1);\n    uv += 2.0 * fbm(uv, octaves, amp_start, freq_coeff, amp_coeff) -1.0;\n    float dist = abs(sin(5.0*uv.x)*cos(3.0*uv.y));\n    vec3 color = effect_color * 0.2 / dist;\n    fragColor = vec4(color, 1);\n}\n","name":"Image","description":"","type":"image"}]}