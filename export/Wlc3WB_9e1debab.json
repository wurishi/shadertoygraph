{"ver":"0.1","info":{"id":"Wlc3WB","date":"1577380577","viewed":113,"name":"Directions animated - v0.0","username":"maz","description":"Generate smoothly varying direction vectors using a texture (bi-linear interpolation on 2D grid)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["abstract","interpolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define normal(c) normalize(c*2. - 1.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int cellsize = 8;\n\n    ivec2 cell = ivec2(floor(fragCoord.xy/float(cellsize)));\n    ivec2 size = ivec2(textureSize(iChannel0, 0));\n            \n    vec3 sw = texelFetch(iChannel0, (cell + ivec2(0., 0.))%(size/cellsize), 0).xyz;\n    vec3 nw = texelFetch(iChannel0, (cell + ivec2(0., 1.))%(size/cellsize), 0).xyz;\n    vec3 ne = texelFetch(iChannel0, (cell + ivec2(1., 1.))%(size/cellsize), 0).xyz;\n    vec3 se = texelFetch(iChannel0, (cell + ivec2(1., 0.))%(size/cellsize), 0).xyz;\n    \n    vec2 delta = fract(fragCoord.xy/float(cellsize));\n    vec3 dirx1 = mix(sw, se, delta.x);\n    vec3 dirx2 = mix(nw, ne, delta.x);\n    vec3 dir = mix(dirx1, dirx2, delta.y);\n    \n    // visualize direction with diffuse lighting\n    vec3 vdir = normalize(abs(vec3(cos(iTime*0.6),sin(iTime*0.6),0.))); \n    fragColor.xyz = dot(abs(normal(dir)), vdir) * vec3(1.,1.,dir.z);\n}","name":"Image","description":"","type":"image"}]}