{"ver":"0.1","info":{"id":"MfjyD3","date":"1723393069","viewed":22,"name":"Intro to Shader","username":"WilliamWang","description":"This is my first shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float emiss = 0.01;\n\nvec3 palette (float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1., 1., 1.);\n    vec3 d = vec3(0.028, 0.333, 0.667);\n    \n    return a + b*cos(6.29318*(c*t+d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;    \n    vec2 uv0 = uv;    \n    vec3 finalColor = vec3 (0.0);\n    \n    for (float i = 0.0; i < 4.0; i++){\n    \n        uv = fract(uv * 1.5)-0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(emiss / d, 1.2);\n\n        finalColor += col * d;\n        \n     }\n    \n    fragColor = vec4 (finalColor, 1.0); \n    \n}","name":"Image","description":"","type":"image"}]}