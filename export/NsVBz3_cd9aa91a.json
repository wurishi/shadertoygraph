{"ver":"0.1","info":{"id":"NsVBz3","date":"1706397853","viewed":152,"name":"Neon squares","username":"goneval","description":"Based on \"Neon love\" [url]https://www.shadertoy.com/view/WdK3Dz[/url]","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","glow","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getDistanceFromHollowSquare(vec2 pos) {\n    float s = 0.08;\n    float r = 0.02;\n    \n    pos = abs(pos);\n    \n    bool isOutside = pos.x > s || pos.y > s;\n    \n    if (isOutside) return abs(length(max(pos - s,vec2(0)))-r);\n    \n    // Handle inside of square\n    \n    // This line prevented sharp diagonal lines, uncomment this line to get the shortest distance\n    return 1.0 / dot(1.0 / abs(pos - s),vec2(1))+r;\n    return min(abs(pos.x - r), abs(pos.y - r));\n    \n}\n\n//https://www.shadertoy.com/view/3s3GDn\nfloat getGlow(float dist, float radius, float intensity){\n    return pow(radius/dist, intensity);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float intensity = 1.3;\n    float radius = 0.015;\n    vec2 uv = fragCoord/iResolution.xy;\n    float widthHeightRatio = iResolution.x/iResolution.y;\n    vec2 centre = vec2(0.5, 0.5);\n    vec2 pos = uv- centre;\n    pos.y /= widthHeightRatio;\n\t\n    \n    //Get first segment\n    float dist1 = getDistanceFromHollowSquare(pos - vec2(0.0, +0.11));\n    float dist2 = getDistanceFromHollowSquare(pos - vec2(0.0, -0.11));\n    float dist3 = getDistanceFromHollowSquare(pos - vec2(-0.22, +0.11));\n    float dist4 = getDistanceFromHollowSquare(pos - vec2(+0.22, +0.11));\n    \n    //https://www.shadertoy.com/view/3s3GDn\n    float glow1 = getGlow(dist1, radius, intensity);\n    float glow2 = getGlow(dist2, radius, intensity);\n    float glow3 = getGlow(dist3, radius, intensity);\n    float glow4 = getGlow(dist4, radius, intensity);\n    \n    vec3 col = \n      + glow1 * clamp(vec3(1.0,0.0,0.0), 0.05, 1.0)\n      + glow2 * clamp(vec3(0.0,1.0,0.0), 0.05, 1.0)\n      + glow3 * clamp(vec3(0.0,0.0,1.0), 0.05, 1.0)\n      + glow4 * clamp(vec3(0.0,0.6,0.6), 0.05, 1.0);\n    \n    //Tone mapping\n    col = 1.0 - exp(-col);\n    \n    //Gamma\n    col = pow(col, vec3(0.888));\n\n    //Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}