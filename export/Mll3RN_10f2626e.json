{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Merry Christmas Everyone!\n// By: Brandon Fogerty\n// bfogerty at gmail dot com\n\n// \"â€œGlory to God in the highest, and on earth peace among those with whom He is pleased!â€ - Luke 2:14\n// \"But he was pierced for our transgressions,\n//  he was crushed for our iniquities;\n//  the punishment that brought us peace was on him,\n//  and by his wounds we are healed.\" - Isaiah 53:5-6\n\n// Special Thanks to my Beautiful Wife, Naomi, for the design!\n\n\n#define Resolution\t\t\t\tiResolution\n#define Time\t\t\t\t\tiTime\n\n#define GloryGlowColor\t\t\t\tvec3(0.26, 0.16, 0.06)\n#define VerticalBarWidth\t\t\t0.09\n#define VerticalBarHeight\t\t\t0.9\n#define HorizontalBarWidth\t\t\t0.7\n#define HorizontalBarHeight\t\t\t0.07\n#define HorizontalBarVerticalOffset\t\t0.4\n\n#define ChristsCrossColor\t\t\tvec3( 1.0, 1.0, 1.0 )\n#define UnrepentantThiefsCrossColor\t\tvec3( 0.45, 0.45, 0.45 )\n#define RepentantThiefsCrossColor\t\tvec3( 0.90, 0.90, 0.90 )\n\n#define CrossGlowScale\t\t\t\t0.02\n#define CrossGloryGlowMin\t\t\t0.35\n#define CrossGloryGlowMax\t\t\t1.00\n\n\nfloat hash( float x )\n{\n    return fract( sin( x ) * 43758.5453 );\n}\n\nfloat noise( vec2 uv )  // Thanks Inigo Quilez\n{\n    vec3 x = vec3( uv.xy, 0.0 );\n    \n    vec3 p = floor( x );\n    vec3 f = fract( x );\n    \n    f = f*f*(3.0 - 2.0*f);\n    \n    float offset = 57.0;\n    \n    float n = dot( p, vec3(1.0, offset, offset*2.0) );\n    \n    return mix(\tmix(\tmix( hash( n + 0.0 ), \t\thash( n + 1.0 ), f.x ),\n        \t\t\t\tmix( hash( n + offset), \thash( n + offset+1.0), f.x ), f.y ),\n\t\t\t\tmix(\tmix( hash( n + offset*2.0), hash( n + offset*2.0+1.0), f.x),\n                    \tmix( hash( n + offset*3.0), hash( n + offset*3.0+1.0), f.x), f.y), f.z);\n}\n\nfloat snoise( vec2 uv )\n{\n    return noise( uv ) * 2.0 - 1.0;\n}\n\n\nfloat perlinNoise( vec2 uv )\n{   \n    float n = \t\tnoise( uv * 1.0 ) \t* 128.0 +\n        \t\tnoise( uv * 2.0 ) \t* 64.0 +\n        \t\tnoise( uv * 4.0 ) \t* 32.0 +\n        \t\tnoise( uv * 8.0 ) \t* 16.0 +\n        \t\tnoise( uv * 16.0 ) \t* 8.0 +\n        \t\tnoise( uv * 32.0 ) \t* 4.0 +\n        \t\tnoise( uv * 64.0 ) \t* 2.0 +\n        \t\tnoise( uv * 128.0 ) * 1.0;\n    \n    float noiseVal = n / ( 1.0 + 2.0 + 4.0 + 8.0 + 16.0 + 32.0 + 64.0 + 128.0 );\n    noiseVal = abs(noiseVal * 2.0 - 1.0);\n    \n    return \tnoiseVal;\n}\n\nfloat fBm( vec2 uv, float lacunarity, float gain )\n{\n    float sum = 0.0;\n    float amp = 1.0;\n    \n    for( int i = 0; i < 10; ++i )\n    {\n        sum += ( perlinNoise( uv ) ) * amp;\n        amp *= gain;\n        uv *= lacunarity;\n    }\n    \n    return sum;\n}\n\nfloat pulse( float value, float minValue, float maxValue )\n{\n\tfloat t = step( minValue, value ) - step( maxValue, value );\n\t\n\treturn t;\n}\n\nvec3 m_cross( \tvec2 uv,\n\t\tfloat verticalBarWidth, \n\t    \tfloat verticalBarHeight, \n\t    \tfloat horizontalBarWidth, \n\t    \tfloat horizontalBarHeight,\n\t    \tfloat horizontalBarVerticalOffset,\n\t   \tvec2 position,\n\t   \tfloat scale,\n\t  \tvec3 color )\n{\n\tverticalBarWidth \t\t*= scale;\n\tverticalBarHeight \t\t*= scale;\n\thorizontalBarWidth \t\t*= scale;\n\thorizontalBarHeight \t\t*= scale;\n\thorizontalBarVerticalOffset \t*= scale;\n\t\n\tfloat verticleBar = pulse( uv.x, -verticalBarWidth + position.x, verticalBarWidth + position.x );\n\tverticleBar *= pulse( uv.y, -verticalBarHeight + position.y, verticalBarHeight + position.y );\n\t\n\tfloat horizontalBar = pulse( uv.x, -horizontalBarWidth + position.x, horizontalBarWidth + position.x );\n\thorizontalBar *= pulse( uv.y, -horizontalBarHeight  + horizontalBarVerticalOffset + position.y, horizontalBarHeight + horizontalBarVerticalOffset + position.y );\n\t\n\tfloat intensity = clamp(verticleBar + horizontalBar, 0.0, 1.0);\n\t\n\tvec3 finalColor = (color * intensity);\n\t\n\treturn  finalColor;\n}\n\nvec3 gloryGlow( vec2 uv, vec3 glowColor, float minGlow, float maxGlow, float noiseFactor, float speed )\n{\n\tfloat t = sin( Time ) * 0.50 + 0.50;\n\tfloat glowAmount = mix( minGlow, maxGlow, t );\n\tvec2 glowUV = uv + vec2( 0.0, 0.0 );\n\tfloat glowPulse = sin( glowUV.x * glowAmount );\n\tvec3 color = glowColor * abs( 1.0 / glowPulse ) * noiseFactor;\n\treturn color;\n}\n\nvec3 beam( vec2 uv, vec3 glowColor, float noiseFactor, float offset, float speed )\n{\n\tfloat t = sin( Time * speed ) * 0.50 + 0.50;\n\tfloat glowAmount = mix( 0.20, 1.0, t );\n\tvec2 glowUV = uv + vec2( 0.0, 0.0 );\n\tfloat glowPulse = sin( glowUV.x * glowAmount );\n\tfloat t2 = sin( Time * 0.50 ) * 0.50 + 0.50;\n\tfloat lengthOfBeam = mix( -1.0, 0.70, 1.0 - t2 );\n\tglowUV = uv + vec2( -1.24 - sin(offset + Time + uv.y * speed) * 0.10, 0.0 );\n\tglowPulse = sin( glowUV.x * 0.7  );\n\tfloat glowFactor = (( abs( 0.2 / glowPulse  ) * noiseFactor)) * (sin(uv.y + lengthOfBeam) * 1.0);\n\tvec3 color = clamp( glowColor *  glowFactor, 0.0, 1.50);\n\treturn color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\n\tvec2 uv = ( fragCoord.xy / Resolution.xy ) * 2.0 - 1.0;\n\tuv.x *= ( Resolution.x / Resolution.y );\n\t\n\tvec3 finalColor = vec3( 0.0, 0.0, 0.0 );\n\t\n\tfloat noiseFactor = fBm( uv * 1.0, 2.0, 0.9 );\n\t\n\tfinalColor += gloryGlow( uv, GloryGlowColor, CrossGloryGlowMin, CrossGloryGlowMax, noiseFactor, 1.0 );\n\t\n\tvec3 beamColor = vec3( 0.0, 0.0, 0.0 );\n\tbeamColor += beam( uv, vec3( 0.03, 0.03, 0.13), noiseFactor, 0.0, 2.4 );\n\tbeamColor += beam( uv, vec3( 0.03, 0.13, 0.03), noiseFactor, 0.2, 3.5 );\n\tbeamColor += beam( uv, vec3( 0.13, 0.13, 0.03), noiseFactor, 0.4, 4.6 );\n\tbeamColor += beam( uv, vec3( 0.13, 0.03, 0.03), noiseFactor, 1.0, 6.7 );\n\tbeamColor += beam( uv, vec3( 0.13, 0.03, 0.13), noiseFactor, 2.7, 8.7 );\n\t\n\tfloat t = sin( Time + (uv.y / 2.0) ) * 0.5 + 0.5;\n\tfinalColor += (beamColor * t);\n\t\n\tfinalColor += m_cross( \tuv, \n\t\t\t    \tVerticalBarWidth, \n\t\t\t    \tVerticalBarHeight, \n\t\t\t    \tHorizontalBarWidth + 0.05, \n\t\t\t    \tHorizontalBarHeight, \n\t\t\t    \tHorizontalBarVerticalOffset,\n\t\t\t    \tvec2( 0.0, 0.0 ),\n\t\t\t    \t1.0,\n\t\t\t   \tChristsCrossColor );\n\t\n\tfinalColor += m_cross( \tuv, \n\t\t\t    \tVerticalBarWidth, \n\t\t\t    \tVerticalBarHeight, \n\t\t\t    \tHorizontalBarWidth, \n\t\t\t    \tHorizontalBarHeight, \n\t\t\t    \tHorizontalBarVerticalOffset,\n\t\t\t    \tvec2( -1.2, -0.5 ),\n\t\t\t    \t0.2,\n\t\t\t   \tUnrepentantThiefsCrossColor );\n\t\n\tfinalColor += m_cross( \tuv, \n\t\t\t    \tVerticalBarWidth, \n\t\t\t    \tVerticalBarHeight, \n\t\t\t    \tHorizontalBarWidth, \n\t\t\t    \tHorizontalBarHeight, \n\t\t\t    \tHorizontalBarVerticalOffset,\n\t\t\t    \tvec2( 1.2, -0.5 ),\n\t\t\t    \t0.2,\n\t\t\t   \tRepentantThiefsCrossColor );\n\t\n\tfinalColor *= mix( 0.7, 1.0, uv.y );\n\tfinalColor *= mix( 0.7, 1.0, -abs(uv.x));\n\t\n\tfragColor = vec4( finalColor, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mll3RN","date":"1419532238","viewed":228,"name":"Cross ","username":"akaitora","description":"Merry Christmas Everyone!  Have a Happy New Year!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["christmas","cross","merrychristmas"],"hasliked":0,"parentid":"","parentname":""}}