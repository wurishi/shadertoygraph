{"ver":"0.1","info":{"id":"Wl3XDH","date":"1580833519","viewed":76,"name":"mandelbrot thingy","username":"BrianDeLange","description":"I don't know what I have created","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define amt 4.\n\nvec2 rot(vec2 v, float a){\n\tfloat c = cos(a);\n    float s = sin(a);\n    return vec2(v.x*c-v.y*s, v.x*s+v.y*c);\n}\n\nvec3 thingy(vec2 uv)\n{\n        vec3 col;\n\n    for(float j = 0.; j < amt; j++)\n    {\n        float angle = atan(uv.y, uv.x);\n        float dist = length(uv);\n\n        angle += sin(iTime*4.)*dist/4.;\n\n        angle = angle*j;\n\n        vec2 c = vec2(cos(angle), sin(angle))*dist;\n\n        vec2 z = c;\n\n        float itteration = 0.;\n\n        while(length(z) < 2.*2. && itteration < 200.)\n        {\n            float nx = z.x*z.x-z.y*z.y;\n            float ny = z.x*z.y*2.;\n            z = vec2(nx, ny)+c;\n            itteration += 1.;\n        }\n    \n    \n        col += vec3(itteration/200.)/amt;\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord-0.5*iResolution.xy)/iResolution.y)*.5;\n\tuv*=4.;\n    vec3 col;\n    \n    uv = rot(uv, iTime);\n    uv *= 2.;\n    uv.x -= cos(iTime);\n    col = thingy(uv);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}