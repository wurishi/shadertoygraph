{"ver":"0.1","info":{"id":"7s33WM","date":"1629939421","viewed":269,"name":"Persian carpet 5","username":"jarble","description":"A slightly simpler formula, with a much nicer range of colors.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["fractal","carpet","rug"],"hasliked":0,"parentid":"7st3DH","parentname":"Persian carpet 4"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//change these constants to get different patterns!\n#define c2 0.0\n\n#define c1 vec4(3.0+c2,2.5+c2,1.5,0)\n//#define c1 vec4(2.0+c2,1.5+c2,1.4,0)\n//#define c1 vec4(1.0,1.5,1.4,0)\n//#define c1 vec4(7.0,5.0,1.4,0)\n//#define c1 vec4(7.0,9.0,1.4,0)\n//#define c1 vec4(5.0,5.5,1.4,0)\n\n//to do: drag and drop using https://www.shadertoy.com/view/WdGGWh\n\n//----------------------------------------------------------------------------------------\n//  3 out, 1 in...\nvec3 hash31(float p)\n{\n   //from David Hoskins' \"Hash without sine\"\n   vec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n   p3 += dot(p3, p3.yzx+33.33);\n   return fract((p3.xxy+p3.yzz)*p3.zyx); \n}\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    \n    \n\n    \n    vec3 col;  \n    float t1 = 4.5*3./2.;\n\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    //vec3 random1 = hash31(floor((iTime)/10.0+uv.x))*10.*.0;\n    float t2 = floor((iTime+4.)/20.0+uv.x);\n    //vec3 random2 = hash31(1.+t2);\n    \n    \n    float offset = .25;\n    \n    for(int c=0;c<3;c++){\n        float scale = c1.z;\n        float t3 = float(c)+t2;\n        vec3 random2 = hash31(1.+t3);\n        float scale2 = 1.+random2.x;\n        //vec3 col_prev = 0.0;\n        for(int i=0;i<3;i++)\n        {\n            vec3 col_prev = col;\n            float factor = -1.1;\n            \n            uv = triangle_wave(uv.yx+1.5,scale)+triangle_wave(uv,scale);\n            for(int j = 0; j < 3;j++){\n                uv = triangle_wave((uv+offset),scale);\n            }\n            uv.x /= factor;\n            \n            //uv.x *= -1.0;\n            //uv = triangle_wave(uv+c1.y,scale);\n            scale /= 1.+scale2*col.x;\n            //offset *= scale2/(1.+random4.x);\n            \n            //uv = -uv.yx;\n            //uv = uv.yx;\n            scale2 += col.x/8.;\n            if(i>0) col = (col.yzx*random2.x + col_prev*random2.y)/(random2.x+random2.y);\n            col[c] = fract((uv.x)-(uv.y));\n\n            \n\n        }\n\n            //random3 = (hash31(2.+t3)-vec3(.5))/4.;\n            //random4 = (hash31(3.+t3)-vec3(.5))/4.;\n\t}\n    \n    fragColor = vec4(vec3(col),1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}