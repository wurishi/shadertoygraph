{"ver":"0.1","info":{"id":"cs2cRy","date":"1687851859","viewed":61,"name":"taichi2","username":"think3r","description":"太极图 V2","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["taichi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// center 圆心, R 半径\nfloat circle(vec2 uv,vec2 center, float R) {\n    // uv中的点 - 圆心点\n    vec2 offset = uv - center;\n    // 半径\n    float len = length(offset);\n    // return len > R ? 0.0 : 1.0;\n     return smoothstep(R + 1.5/iResolution.y, R, len); // 平滑圆形边缘\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // move to center && true scaling\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n \n    float time = iTime * -1.0;\n    uv = mat2(cos(time), sin(time),\n             -sin(time), cos(time)) * uv;    // rotate\n \n \n    const vec3 fixColor = vec3(1.0, 1.0, 1.0);\n   \n    float alpha = circle(uv, vec2(0.0, 0.0), 0.5);   // 大的圆形\n\n\n    float alpha1 = 1.0 - circle(uv, vec2(0.0, 0.25), 0.25); //右上方 + 左侧的黑色\n    if (uv.x > 0.0) {    // 阴阳鱼左右OR上下控制\n        alpha1 = 0.0;\n    }\n    vec3 outColor = fixColor;\n    outColor *= (alpha * alpha1);\n\n    float alpha2 = circle(uv, vec2(0.0, -0.25), 0.25);    // 左下方的白色半圆\n    if (alpha2 > 0.0) {\n       outColor = fixColor;\n    }\n\n    float alpha3 = circle(uv, vec2(0.0, 0.25), 0.08);    // 黑中白\n    if (alpha3 > 0.0) {\n        outColor = fixColor;\n    }\n    \n    float alpha4 = circle(uv, vec2(0.0, -0.25), 0.08);    // 白中黑\n    if (alpha4 > 0.0) {\n        outColor = 1.0 - fixColor;\n    }\n    \n    \n    float alpha5 = 1.0 - circle(uv, vec2(0.0, 0.0), 0.5 - 1.5/iResolution.y);\n    vec3 tmpColor = fixColor * (alpha5 * alpha); // 圆框\n    outColor += tmpColor;\n   \n   \n    fragColor = vec4(outColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}