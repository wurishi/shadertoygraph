{"ver":"0.1","info":{"id":"llcGDs","date":"1472384183","viewed":127,"name":"greenscreentest","username":"scripty","description":"simple greenscreen testing","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["2dvandammenoob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Md23R1","filepath":"https://soundcloud.com/sander-hansma/exercise-one-mathew-jonson-lost-forever-in-a-happy-crowd","previewfilepath":"https://soundcloud.com/sander-hansma/exercise-one-mathew-jonson-lost-forever-in-a-happy-crowd","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  //vec2 uv = fragCoord.xy / iResolution.xy;\n  //fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    vec2 xy = fragCoord.xy; //We obtain our coordinates for the current pixel\n    xy.x = xy.x / iResolution.x; //We divide the coordinates by the screen size\n    xy.y = xy.y / iResolution.y;\n    // Now x is 0 for the leftmost pixel, and 1 for the rightmost pixel\n    vec4 solidRed = vec4(0,0.0,0.0,1.0); //This is actually black right now\n    //if(xy.x > 0.5){\n    //    solidRed.r = 1.0; //Set its red component to 1.0\n    //}\n    solidRed.r = xy.x;\n    \n    \n    //xy.y = 1.0 - xy.y;\n    /*\n    vec4 texColor = texture(iChannel0,xy);//Get the pixel at xy from iChannel0\n    texColor.r *= sin(iTime);\n    texColor.g *= cos(iTime);\n    texColor.b *= sin(iTime);//* cos(iTime);\n    */\n    vec4 texColorBgr = texture(iChannel1,xy);\n    vec4 texColor = texture(iChannel0,xy);//Get the pixel at xy from iChannel0\n    if (texColor.g > 0.2 && texColor.r < 0.2 && texColor.b < 0.2) {\n      texColor.g = 0.0;\n      texColor.rgb = texColorBgr.rgb;\n      //texColor.a = texColorBgr.a;\n    }\n    \n    //fragColor = solidRed;\n    vec4 snd = texture(iChannel2,xy);\n    texColor.r = snd.r;\n    fragColor = texColor;\n    //fragColor.a = 0.9;\n}","name":"Image","description":"","type":"image"}]}