{"ver":"0.1","info":{"id":"tlBXWc","date":"1571927627","viewed":343,"name":"feedback fractal","username":"unnick","description":"a thing i made while eating beans at *2* AM, not 3 AM, big difference.","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["2d","fractal","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = sin(texelFetch(iChannel0, ivec2(fragCoord), 0).x * TAU * vec3(1.,1.1,1.2)).xyzz * .5 + .5;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TAU 6.283184\n\nmat2 rotMat2d(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec2 r2smpl(int i) {\n    return fract(vec2(1.6180339, 1.3247179) * float(i));\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //yeah, good luck trying to understand this.\n    vec2 pos = ((fragCoord + r2smpl(iFrame+int(dot(fragCoord, vec2(34., 43.)))) * 2. - 1.)*2. - iResolution.xy) / iResolution.y;\n    vec2 mpos = (iMouse.xy*2. - iResolution.xy) / iResolution.y;\n    pos = abs(pos);\n    if(pos.x < pos.y) pos.xy = pos.yx;\n    if(dot(pos,pos) < .1) pos /= dot(pos,pos) * (1. / .1);\n    pos.x -= .01;\n    pos.y += mpos.y * .5;\n    pos = vec2(pos.x*pos.x - pos.y*pos.y, 2.*pos.x*pos.y);\n    if(dot(pos,pos) < .2) pos /= dot(pos,pos) * (1. / .2);\n    pos *= rotMat2d(mpos.x) * 1.1;\n    vec2 uv = pos * iResolution.y / iResolution.xy * .5 + .5;\n    float tmp = texelFetch(iChannel0, ivec2(fragCoord), 0).x * .7;\n    tmp += (texture(iChannel0, uv) + .03).x * .3;\n    tmp = min(tmp, 3.);\n    tmp *= (uv.x >= 0. && uv.x < 1. ? 1. : 0.);\n    tmp *= (uv.y >= 0. && uv.y < 1. ? 1. : 0.);\n    fragColor = vec4(tmp);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}