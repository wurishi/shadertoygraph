{"ver":"0.1","info":{"id":"stXGRr","date":"1621407854","viewed":102,"name":"Venn Diagram","username":"ashishkingdom","description":"The shader generates a simple venn diagram","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colors","circle","learning","beginners"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    @Title : Venn Diagram\n    @Author : AshishKingdom aka Ashish Kushwaha\n*/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 r = fragCoord.xy / iResolution.y; //diving both comp. by y to maintain aspect ratio\n    vec2 pos[3] = vec2[](vec2(0.6,0.6), vec2(0.9,0.4), vec2(1.1,0.6));\n    \n    vec3 bg = vec3(0.1,0.1,0.1);\n    vec3 clr[3] = vec3[](vec3(1.0,0.0,0.0), vec3(0.0,1.0,0.0), vec3(0.0,0.0,1.0));\n    float rgb[3] = float[](0.0,0.0,0.0);\n    \n    bool found = false;\n    \n    for(int i=0;i<3;i++){\n        if(length(r-pos[i])<0.35){\n            found = true;\n            rgb[i] = 1.0;\n        }\n    }\n    if(found) {\n        fragColor = vec4(rgb[0],rgb[1], rgb[2], 1.0);\n    }\n    else {\n        fragColor = vec4(bg, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}