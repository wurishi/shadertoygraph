{"ver":"0.1","info":{"id":"MdK3zy","date":"1455626788","viewed":384,"name":"Curl 2D","username":"nsweb","description":"Experiment with the curl operator in 2D.\n\n","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["curl","vectorfield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// 2D curl operator visualization \n#define SHOW_VECTORFIELD\n#define SHOW_ARROW\n\nconst float TILE_SIZE = 0.045;\n\nvec2 sdCapsule(vec3 p, vec3 p0, vec3 p1, float r)\n{\n    vec3 v = vec3( p1 - p0 );\n\tvec3 w = vec3( p - p0 );\n\tfloat t_seg = max( dot( v, w ), 0.0 );\n\n\tfloat v2 = dot( v, v );\n\tt_seg = min( t_seg, v2 );\n\tt_seg = t_seg / v2;\n\tw += v*(-t_seg);\n\n\treturn vec2( sqrt( dot( w, w) ) - r, t_seg );\n}\n\n// computes arrow center location from given pos\nvec3 arrowTilePos(vec3 p) \n{\n\treturn (floor(p / TILE_SIZE) + 0.5) * TILE_SIZE;\n}\n\n// the vector field on which we'll apply the curl operator\n// in 2d, it's just a scalar field\nfloat field2d(vec3 p)\n{\n    float f = cos(10.0*p.x+iTime)* sin(10.0*p.y+iTime);\n    return f;\n}\n\n// the curl operator in 2d\nvec3 curl2d(vec3 p)\n{\n    vec3 e = vec3(0.001,-0.001,0.0);\n    float fxp = field2d(p + e.xzz);\n    float fxm = field2d(p + e.yzz);\n    float fyp = field2d(p + e.zxz);\n    float fym = field2d(p + e.zyz);\n\n    vec3 c = vec3( \t(fyp - fym) / (2.*e.x),\n                 \t(-fxp + fxm) / (2.*e.x),\n                 \t0.0 );\n\treturn c;   \n}\n\n// get the arrow color under pos (transparent if no hit)\nvec4 arrowColor(vec3 p, vec3 arrow_center, vec3 arrow_vec) \n{\n    float scale = TILE_SIZE;\n    arrow_vec = normalize( arrow_vec );\n\tvec2 darrow = sdCapsule(p, arrow_center - arrow_vec*scale, arrow_center + arrow_vec*scale, (TILE_SIZE*1.005)*0.5 );\n\tif( darrow.x > 0.0 )\n        return vec4(0.0);\n    \n    return vec4( mix(vec3(0.2,0.0,0.0), vec3(0.5,1.0,0.5), darrow.y), 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 p = vec3( (fragCoord.xy / iResolution.xx - 0.5) * 2.0, 0.0 );\n    \n    vec4 col = vec4(0.0);\n#ifdef SHOW_ARROW\n    col = arrowColor( p, arrowTilePos(p), curl2d( arrowTilePos(p) ) );\n#endif\n#ifdef SHOW_VECTORFIELD\n\tvec3 vf = vec3(field2d( p ));\n    col = mix( vec4(vf*0.5+0.5,1.0), col, col.a );\n#endif\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}