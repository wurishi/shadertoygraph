{"ver":"0.1","info":{"id":"WsdXWr","date":"1571972090","viewed":1254,"name":"Greek Sunset","username":"morgan3d","description":"Example of building up island terrain from noise functions.","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","wave","islands"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Color vec4\n#define Point vec2\n#define lerp mix\n\n\n// Pseudo-random number from an arbitrary float.  Result is on [0, 1]\nfloat hash(float n) { return fract(sin(n) * 1e4); }\n\n// Smooth, cubic value noise from an arbitrary float.\n// Result is on [-1, 1]. Control values are at integers.\nfloat noise(float x) {\n    float i = floor(x), f = fract(x);\n    float u =         \n        // 0.5; // Constant\n        // f; // Linear\n        f * f * (3.0 - 2.0 * f); // Cubic\n    \n    return 2.0 * mix(hash(i), hash(i + 1.0), u) - 1.0;\n}\n\n/////////////////////////////////////////////////////////////\n//\n//                Rules of the Universe\n\n\n// Sky is dark blue at the top and red in the center, and\n// yellow at the at the horizon\nvoid getSkyColor(float x, float y, inout Color color) {\n\tfloat h = max(0.0, 1.4 - y - pow(abs(x - 0.5), 3.0));\n    color.r = pow(h, 3.0);\n    color.g = pow(h, 7.0);\n    color.b = 0.2 + pow(max(0.0, h - 0.1), 10.0);\n}\n\n// Returns the height of the terrain\nfloat terrain(float x) {\n    float y = 0.0;\n    \n    for (int octave = 0; octave < 10; ++octave) {\n        float k = float(1 << octave);\n        y += noise(x * k) / k;\n    }\n    return y * 0.3 + 0.36;\n}\n\n// Height of waves\nfloat water(float x) {\n\treturn (sin(x * 71.0 - iTime * 7.0) * 0.5 + sin(200.0 * x - iTime * 8.0)) * 0.002 + 0.25;\n}\n\n// Height of trees above terrain\nfloat tree(float x, float y) {\n    if (y < 0.5) { \n        return 0.0;\n    } else {\n\t    return 0.2 * max(0.0, max(max(\n                           \t   abs(sin(x * 109.0)),\n                               abs(sin(x * 150.0))), \n                           abs(sin(x * 117.0))) +\n\t\t              noise(37.0 * x) +\n                      noise(64.0 * x + 100.0) - 1.6);\n    }\n}\n\nvoid mainImage(out Color color, in Point pixel) {    \n    // 1st quadrant relative coordinate. (0, 0) in lower left, (1, 1) in upper right.\n    float x = pixel.x / iResolution.x;\n    float y = pixel.y / iResolution.y; \n    \n    getSkyColor(x, y, color);\n    \n    float shift = 0.09 * iTime + 0.2;\n\tx += shift;\n    \n    float h = max(water(x), terrain(x));\n    h += tree(x, h);\n\n    if (y < h) { color = Color(0.0); }\n}","name":"Image","description":"","type":"image"}]}