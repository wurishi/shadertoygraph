{"ver":"0.1","info":{"id":"lc3BRr","date":"1732621776","viewed":36,"name":"2 waves of increasing frequency","username":"anisometropie","description":"2 waves of increasing frequency","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\n// (0,0) in the center of the screen\n// [-ratio;ratio] Ã— [-1;1]\n// ratio = width/height\nvec2 changeCoordinates(vec2 xy) {\n    return (2.0 * xy - iResolution.xy) / iResolution.y;\n}\n\nfloat neon(float d) {\n    return (0.12 / d);\n}\n\nfloat contrast(float d) {\n    return pow(d, 3.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = changeCoordinates(fragCoord);\n    vec2 uv0 = vec2(uv.x - 0.5, uv.y);\n    vec2 uv1 = vec2(uv.x + 0.5, uv.y);\n    vec3 finalColor = vec3(0.0);\n    \n    float l0 = abs(sin(length(uv0) * 12.0 * (0.2 + iTime/10.) + iTime)) / 2.0;\n    float l1 = abs(sin(length(uv1) * 12.0* (0.2 + iTime/10.) + iTime)) / 2.0;\n    l0 = min(neon(l0), 0.8);\n    l1 = min(neon(l1), 0.8);\n    l0 = contrast(l0);\n    l1 = contrast(l1);\n    finalColor += vec3(l0);\n    finalColor += vec3(l1);\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}