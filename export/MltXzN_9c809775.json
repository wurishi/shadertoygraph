{"ver":"0.1","info":{"id":"MltXzN","date":"1478555625","viewed":26361,"name":"BuckleUp","username":"dila","description":"What the hell.","likes":95,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x)\n{\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat mat = 0.0;\nfloat ss = 0.5;\n\nfloat map(vec3 p)\n{\n    p.x += sin(p.z * ss);\n    p.y += cos(p.z * ss);\n    \n    float sc = (sin(p.z) * 0.5 + 1.0) * 0.5;\n    \n    vec3 r = p;\n    \n    r.xy = vec2(atan(r.x, r.y) / 3.14159265359 * 2.0, length(r.xy));\n    \n    r.x += r.z * 0.125;\n    r.x = (fract(r.x) - 0.5) * 4.0;\n    \n    r.y -= 3.0;\n    \n    r.z = fract(r.z) - 0.5;\n    \n    vec3 q = r;\n    float d = 1000.0;\n    \n    vec3 s = vec3(0.5, 0.125, 0.125);\n    vec3 as = vec3(1.0, 0.0, 0.0);\n    float u = 1.0;\n    \n    const int n = 4;\n    for (int i = 0; i < n; ++i) {\n        float fi = float(i) / float(n - 1);\n        \n        q = abs(q) - 0.3;\n\n        q.xy *= rot(3.14159 * 0.125);\n        \n        float k = sdBox(q, s);\n        \n        if (k < d) {\n            d = k;\n            mat = float(i);\n        }\n        \n        s = s.yzx * 0.75;\n        as = as.yzx;\n        u *= 0.5;\n    }\n    \n    float c = 1.0 + r.y;\n    \n    d = max(d, -c);\n    \n\treturn d;\n}\n\nvec3 normal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        t += map(o + r * t) * 0.6;\n    }\n    return t;\n}\n\nvec3 textex(sampler2D channel, vec3 p)\n{\n    vec3 ta = texture(channel, p.xy).xyz;\n    vec3 tb = texture(channel, p.xz).xyz;\n    vec3 tc = texture(channel, p.yz).xyz;\n    return (ta * ta + tb * tb + tc * tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 o = vec3(0.0, 0.0, iTime * 4.0);\n    o.x -= sin(o.z * ss);\n    o.y -= cos(o.z * ss);\n    \n    vec3 r = normalize(vec3(uv, 1.0 - dot(uv, uv) * 0.33));\n\n    r.xy *= rot(sin(o.z * ss * 0.5) * 3.14159 * 0.5);\n    r.xz *= rot(sin(o.z * ss) * 3.14159 * 0.25);\n    r.yz *= rot(cos(o.z * ss) * 3.14159 * 0.25);\n    \n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    float fd = map(w);\n    vec3 sn = normal(w);\n    \n    vec3 tex = textex(iChannel0, w);\n    if (mat < 3.0) {\n        tex *= 0.25;\n    }\n    \n    vec3 sk = vec3(0.0);\n    const int n = 8;\n    for (int i = 0; i < n; ++i) {\n        float fi = float(i + 1) / float(n + 1);\n        float fr = o.z + fi * 4.0;\n\t\tvec3 sp = vec3(0.0, 0.0, floor(fr));\n        fr = fract(fr);\n        fr = 4.0 * fr * (1.0 - fr);\n        float st = 0.0;\n        for (int i = 0; i < 4; ++i) {\n            vec3 sq = o + r * st - sp;\n            st += 5.0 - length(sq);\n        }\n        vec3 sw = o + r * st - sp;\n        sw.xz *= rot(3.14159 * 2.0 * fi);\n        vec3 stex = textex(iChannel1, sw * 0.5);\n        sk += stex * fr * 0.25;\n    }\n    \n    vec3 ldir = normalize(vec3(1.0, 1.0, 1.0));\n    vec3 ref = reflect(-ldir, sn);\n    float prod = max(dot(r, ref), 0.0);\n    prod = pow(prod, 4.0);\n    vec3 pcol = textex(iChannel2, w * 0.1) * prod;\n    \n    float fog = 1.0 / (1.0 + t * t * 0.01);\n    float edge = 1.0 / (1.0 + fd * 100.0);\n    vec3 fc = (tex * fog + pcol) * edge;\n    \n    fc = mix(fc, sk, 1.0 - fog);\n    \n    vec3 nfc = vec3(dot(fc, vec3(0.299, 0.587, 0.114)));\n    nfc.y += fc.y * 0.25;\n    nfc.x += fc.z * 0.5;\n    nfc.z += fc.x * 0.75;\n    nfc *= 2.0;\n    \n\tfragColor = vec4(sqrt(nfc), 1.0);\n}","name":"Image","description":"","type":"image"}]}