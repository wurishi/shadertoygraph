{"ver":"0.1","info":{"id":"lcd3RN","date":"1711466172","viewed":29,"name":" \"Creature\" Ex.","username":"billrockx","description":"The Book of Shader exercise cap 11.\nOnce you have your \"creature\", try to develop it further into a character by assigning it a particular movement.\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tbos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand (in float _x) {\n    return fract(sin(_x)*1e4);\n}\n\nfloat noise(float x) {\n    float i = floor(x);\n    float f = fract(x);\n    float u = f * f * (3.0 - 2.0 * f );\n    return mix(rand(i), rand(i + 1.0), u);\n}\n\nfloat circle( vec2 st,  float r){\n    float w =  4.5/iResolution.y;\n    r =  sqrt(r)/2.;\n    return smoothstep( w, 0.0, length(st - 0.5) - r ) -\n        smoothstep( w, 0.0, length(st - 0.5) - r + w );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.y;\n    vec3 color = vec3(0.);\n    float y = 0.0;\n    float f = 0.0;\n    vec3 color_v = vec3(0.0);\n    \n    st.x -= 0.3;\n    f = 1.0 - sin(iTime)*0.5;\n    for (int i = 0; i < 100; i++) {\n        y = (noise(st.x * 3.0)*f - noise(st.x * 0.1 * float(i))) * noise(st.x * 1.0 * float(i));\n        color_v = vec3(noise(st[int(mod(float(i), 2.0))]*-(noise(float(i) * iTime * 0.05))));\n        color_v.r *= (1.0-noise(iTime)*0.9) * float(i)*0.01;\n        color_v.b *= (noise(iTime/3.0)) * float(i)*0.01;\n        color_v.b *= (1.0-noise(iTime/5.0)*0.5) * float(i)*0.01;\n        color += vec3(circle(st, y)) * color_v;\n    }\n    \n    color = 1.0 - color;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}