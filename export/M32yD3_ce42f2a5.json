{"ver":"0.1","info":{"id":"M32yD3","date":"1727821105","viewed":51,"name":"Octaedro","username":"Elsio","description":"desc","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["tag"],"hasliked":0,"parentid":"DdVyR3","parentname":"Elementos teste 2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define t iTime\n#define pardo vec4(10, 4, 0, 0)\n#define elast vec4(7, 5, 12, 0) / 1.2\n#define phi (1. + sqrt(5.)) / 2.\n#define k vec3(0, 1, phi + 1.)\n#define s vec2(1, -1)\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy;\n         u = (u - r / 2.) / r.y;\n         \n    float i, dd, d = 1., a;\n    vec3 p = vec3(0, 0, -5), q, D;\n    vec4 cor;\n    \n    D = normalize(vec3(u, 3));\n    \n    while(i++ < 50. && d > 1e-2) {\n        cor = elast;\n        \n        q = p;\n        \n        q.zx *= rot(t * .8);\n        q.yz *= rot(t * .7);\n        \n        dd = d = dot(abs(q), vec3(.4)) - .5;\n        \n        d = max(\n                d - .01, \n                min(\n                    min(\n                        abs(dot(q, k.yzx * s.yxx)),\n                        abs(dot(q, k.zxy * s.yxx))\n                    ),\n                    min(\n                        min(\n                            abs(dot(q, k.zxy)),\n                            abs(dot(q, k.yzx))\n                        ),\n                        min(\n                            abs(dot(q, k * s.xxy)),\n                            abs(dot(q, k))\n                        )\n                    )\n                ) - .06\n            );\n        \n        1.8 * dd < d\n            ? cor = pardo,\n              d = 1.8 * dd\n            : d;\n            \n        p += D * d * .4;\n    }\n    \n    o = 1. - exp(\n                  -1.5 * cor / i \n                  + i / 70. - .5\n             );\n}","name":"Image","description":"","type":"image"}]}