{"ver":"0.1","info":{"id":"dt2fRt","date":"1694398593","viewed":40,"name":"Peace of Mind","username":"Bison_3","description":"This is my first shot at a 2D shader art. It is heavily inspired by the introduction to shader art coding by kishimisu : https://www.youtube.com/watch?v=f4s1h2YETNY","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\nvec3 a = vec3(0.125, 0.880, 0.847);\nvec3 b = vec3(0.299, 0.230, 0.264);\nvec3 c = vec3(0.641, 0.656, 0.909);\nvec3 d = vec3(1.974, 3.248, 2.783);\n\nreturn a + b * cos(6.28318 * (c * t + d));\n}\n\n\n// source : https://iquilezles.org/articles/distfunctions2d/\nfloat sdBlobbyCross( in vec2 pos, float he )\n{\n    pos = abs(pos);\n    pos = vec2(abs(pos.x-pos.y),1.0-pos.x-pos.y)/sqrt(2.0);\n\n    float p = (he-pos.y-0.25/he)/(6.0*he);\n    float q = pos.x/(he*he*16.0);\n    float h = q*q - p*p*p;\n    \n    float x;\n    if( h>0.0 ) { float r = sqrt(h); x = pow(q+r,1.0/3.0)-pow(abs(q-r),1.0/3.0)*sign(r-q); }\n    else        { float r = sqrt(p); x = 2.0*r*cos(acos(q/(p*r))/3.0); }\n    x = min(x,sqrt(2.0)/2.0);\n    \n    vec2 z = vec2(x,he*(1.0-2.0*x*x)) - pos;\n    return length(z) * sign(z.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 2.0; i++) {\n        uv = fract(uv * 1.75) - 0.5;\n    \n        float d = sdBlobbyCross(uv, 1.15) * exp(-length(uv0));\n    \n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n   \n        d = pow(0.01 / abs(cos(d*12. + iTime)/12.), 1.6);\n\n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}