{"ver":"0.1","info":{"id":"msfyzN","date":"1686615120","viewed":125,"name":"Inverted Checkerboard","username":"Goki","description":"I've finally created something all on my own. This is my first ever shader where I didn't get any help along the way. I'm very happy with the results. Big thanks to The Art Of Code and Inigo Quilez for their tutorials . They're the reason I got into this!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard","inversion","disc"],"hasliked":0,"parentid":"dsfyzN","parentname":"checkerboard stretch"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 3.0*(2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    vec2 offset = vec2(2.0*iTime, sin(iTime*2.0)*.4);\n    vec2 id = floor( (uv+offset)*vec2(1.0,(abs(sin(iTime+14.2)*0.7)+0.3)) );\n    float e = 25.0/iResolution.y;\n    \n    float d0 = mod(id.x+id.y, 2.0);\n//    float d0 = mod(floor(mod((uv.y+offset.y)*(abs(sin(iTime+14.2)*0.7)+0.3), 2.0)) + \n//                   floor(mod((uv.x+offset.x), 2.0)), 2.0);\n    col += d0;\n    \n    float size = (2.0-sin(iTime*1.5))*0.35;\n    vec2 p = vec2(cos(iTime*1.754+10.3)*3.8, sin(iTime*2.159+2.3));\n    float d1 = length(uv+p)*size;\n    //d1 = ;\n    //col = (col*-1.+1.)*d1;\n    //col = mix( mod(col+1.0, 2.0),col, smoothstep( e,-e,d1*.3 ) );\n    \n\n    //col = (col == vec3(1))?vec3(0.9,0.9,0.3):vec3(0.35,0.45,0.9);\n    col = mix( col,(col*-1.+1.)*d1, smoothstep(0.9, 0.91, d1) );\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}