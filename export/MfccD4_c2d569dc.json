{"ver":"0.1","info":{"id":"MfccD4","date":"1730643405","viewed":95,"name":"Pulsing Rainbow Mandelbrot","username":"Rex109","description":"Fun","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["mandelbrot","rainbow","pulsing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 1000.\n#define ZOOM 2.\n\nvec3 rainbow(float level)\n{\n\tfloat r = float(level <= 2.0) + float(level > 4.0) * 0.5;\n\tfloat g = max(1.0 - abs(level - 2.0) * 0.5, 0.0);\n\tfloat b = (1.0 - (level - 4.0) * 0.5) * float(level >= 4.0);\n\treturn vec3(r, g, b);\n}\n\n//Courtesy of https://www.shadertoy.com/view/lsfBWs\nvec3 smoothRainbow (float x)\n{\n    float level1 = floor(x*6.0);\n    float level2 = min(6.0, floor(x*6.0) + 1.0);\n    \n    vec3 a = rainbow(level1);\n    vec3 b = rainbow(level2);\n    \n    return mix(a, b, fract(x*6.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    c *= ZOOM * (iMouse.z > 1.0 ? 0.2 : 1.0);\n    c.x -= .5;\n    c += iMouse.z > 1.0 ? (iMouse.xy/iResolution.xy)-.5 : vec2(0.0);\n\n    vec2 z = vec2(0.0);\n    bool inf = false;\n    float i;\n    for(i = 0.; i < MAX_ITER; i++)\n    {\n        z = vec2(pow(z.x, 2.) - pow(z.y, 2.), 2. * z.x * z.y) + c;\n\n        if(length(z) > 2.0)\n        {\n            inf = true;\n            break;\n        }\n    }\n\n    vec3 color = inf ? smoothRainbow(i/MAX_ITER*25.0*(cos(iTime*4.)+2.0)) : vec3(0.0);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}