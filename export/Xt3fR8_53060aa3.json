{"ver":"0.1","info":{"id":"Xt3fR8","date":"1538950224","viewed":64,"name":"Layered House HW assignment","username":"cmack17144","description":"layered house","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["house"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// on/of switch 1.0 (on) or 0.0 (off)\nfloat houseVisible = 1.0;\nfloat chimneyVisible = 1.0;\nfloat windowsVisible = 1.0;\n\nvec2 housePos = vec2(0.05,0.0);\nvec2 chimneyPos = vec2(0.8,0.8);\nvec2 windowPos1 = vec2(0.1,0.2);\nvec2 windowPos2 = vec2(0.7,0.2);\nvec2 windowPos3 = vec2(0.4,0.2);\nvec3 houseColor = vec3(0.7,0.3,0.0);\nvec3 chimneyColor = vec3(1.0,0.0,0.3);\nvec3 windowColor = vec3(0.2,0.7,1.0);\nvec2 houseDim = vec2 (0.5,0.8);\nvec2 chimneyDim = vec2 (0.05,0.1);\nvec2 windowDim = vec2 (0.1,0.4);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // aspectRatio correction\n    float aspectRatio = iResolution.y / iResolution.x;\n    \n    uv.x *= aspectRatio;\n    housePos.x *= aspectRatio;\n    chimneyPos.x *= aspectRatio;\n    windowPos1.x *= aspectRatio;\n    windowPos2.x *= aspectRatio;\n    windowPos3.x *= aspectRatio;\n\t//layer creation\n    vec4 Layer1 = vec4(1.0,1.0,1.0,1.0);\n    vec4 Layer2 = vec4(houseColor, 1.0);\n    vec4 Layer3 = vec4(chimneyColor, 1.0);\n    vec4 Layer4 = vec4(windowColor, 1.0);\n    \n    //shape creation without conditionals\n    float houseX = step(housePos.x, uv.x) - step(housePos.x + houseDim.x, uv.x);\n    float houseY = step(housePos.y, uv.y) - step(housePos.y + houseDim.y, uv.y);\n    \n    float chimneyX = step(chimneyPos.x, uv.x) - step(chimneyPos.x + chimneyDim.x, uv.x);\n    float chimneyY = step(chimneyPos.y, uv.y) - step(chimneyPos.y + chimneyDim.y, uv.y);\n    \n    float window1X = step(windowPos1.x, uv.x) - step(windowPos1.x + windowDim.x, uv.x);\n    float window1Y = step(windowPos1.y, uv.y) - step(windowPos1.y + windowDim.y, uv.y);\n    \n    float window2X = step(windowPos2.x, uv.x) - step(windowPos2.x + windowDim.x, uv.x);\n    float window2Y = step(windowPos2.y, uv.y) - step(windowPos2.y + windowDim.y, uv.y);\n    \n    float window3X = step(windowPos3.x, uv.x) - step(windowPos3.x + windowDim.x, uv.x);\n    float window3Y = step(windowPos3.y, uv.y) - step(windowPos3.y + windowDim.y, uv.y);\n    \n    //on/off switches\n    Layer2.a = (houseX * houseY) * houseVisible;\n    \n    Layer3.a = (chimneyX * chimneyY) * chimneyVisible;\n    \n    Layer4.a = ((window1X * window1Y) * windowsVisible) + ((window2X * window2Y) * windowsVisible) + ((window3X * window3Y) * windowsVisible);\n    \n    vec4 Composite = mix(Layer1, Layer2, Layer2.a);\n    Composite = mix(Composite, Layer4, Layer4.a);\n    Composite = mix(Composite, Layer3, Layer3.a);\n    \n    // Output to screen\n    fragColor = Composite;\n}","name":"Image","description":"","type":"image"}]}