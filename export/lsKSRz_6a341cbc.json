{"ver":"0.1","info":{"id":"lsKSRz","date":"1462638107","viewed":3238,"name":"BoxConstruction","username":"dila","description":"This is way to slow, so I just gave up. Sorry, no colours.","likes":50,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float t)\n{\n    return mat2(cos(t), sin(t), -sin(t), cos(t));\n}\n\nfloat udBox( vec3 p, vec3 b )\n{\n  return length(max(abs(p)-b,0.0));\n}\n\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r;\n}\n\nfloat go = 0.0;\nfloat anim(float t)\n{\n    float gt = fract((iTime + go) * 0.125) * 10.0;\n    float it = clamp(gt - t, 0.0, 1.0);\n    it = smoothstep(0.0, 1.0, it);\n    return it;\n}\n\nfloat face(vec3 p, float t)\n{\n    vec3 join = vec3(3.0, 0.0, 0.0);\n    mat2 jr = rot((1.0-anim(t + 1.0)) * 1.57 * sign(p.x));\n    \n    vec2 bs = vec2(0.05, 1.0);\n\tvec3 bx = vec3(abs(p.x), p.y, p.z);\n    bx.z -= (1.0 - anim(t)) * 10.0 * sign(p.x);\n    bx -= join;\n    bx.xz *= jr;\n    bx.yz *= rot(anim(t+1.0) * 3.14);\n    bx += join;\n    float ho = anim(t + 2.0);\n    bx.x += -2.0 - bs.x + ho;\n    float d = udBox(bx, bs.xyy);\n    vec3 ax = vec3(abs(p.x), p.y, p.z);\n    ax.z -= (1.0 - anim(t)) * 10.0 * sign(p.x);\n\tax.x -= anim(t + 3.0) * 10.0;\n    \n    ax.x += ho;\n    vec3 rax = ax;\n    rax -= join;\n    rax.xz *= jr;\n    rax += join;\n    \n    vec3 g = vec3(rax.x, rax.y, rax.z);\n    vec3 end = vec3(2.0+0.1, 0.0, 0.0);    \n    float aa = sdCapsule(g, end, join, 0.1);\n    float aj = length(ax - join) - 0.25;\n    vec3 ep = vec3(3.0, 0.0, 1.0 * sign(p.x));\n    ax -= join;\n    ax.yz *= rot(anim(t+2.0)*6.28*5.0);\n    ax += join;\n    float ab = sdCapsule(ax, join, ep, 0.1);\n    float a = min(min(aa, ab), aj);\n    \n    return min(d, a);\n}\n\nfloat map(vec3 p)\n{\n\tfloat fx = face(p, 0.0);\n    float fy = face(p.zxy, 1.0);\n    float fz = face(p.yzx, 2.0);\n    return min(min(fx, fy), fz);\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 fc = vec3(0.0);\n    float gt = 1000.0;\n    \n    for (int i = 0; i < 3; ++i) {\n        float fi = float(i);\n    \n        go = fi * 12.0;\n        \n        vec3 r = normalize(vec3(uv, 1.0 - anim(5.0) * 0.5));\n        r.xz *= rot(iTime);\n        r.xy *= rot(1.57 * 0.5);\n\n        vec3 o = vec3(0.0, 0.0, -5.0);\n        o.xz *= rot(iTime);\n        o.xy *= rot(1.57 * 0.5);\n\n        float t = trace(o, r);\n\n        float fog = 1.0 / (1.0 + t * t * 0.1);\n        \n        if (t < gt) {\n            gt = t;\n            fc = vec3(fog);\n        }\n    }\n    \n\tfragColor = vec4(fc, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}