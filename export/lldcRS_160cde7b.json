{"ver":"0.1","info":{"id":"lldcRS","date":"1533065569","viewed":600,"name":"Warpy Octahedron","username":"yx","description":"quick commuting shader jam","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 a, float b)\n{\n    float c = cos(b);\n    float s = sin(b);\n    return vec2(\n        a.x * c - a.y * s,\n        a.x * s + a.y * c\n    );\n}\n\nfloat scene(vec3 p)\n{\n    p = abs(p);\n    return (p.x+p.y+p.z)-1.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n   \tvec3 cam = vec3(0,0,-3);\n    vec3 dir = normalize(vec3(uv, 1));\n    \n    cam.xz = rotate(cam.xz, iTime*3. + uv.y);\n    dir.xz = rotate(dir.xz, iTime*3. + uv.y);\n    cam.xy = rotate(cam.xy, iTime*2. + uv.y);\n    dir.xy = rotate(dir.xy, iTime*2. + uv.y);\n   \n    float t = 0.;\n    bool hit = false;\n    for(int i=0;i<64;++i)\n    {\n        float k = scene(cam+dir*t);\n        t += k*.5;\n        if (k < .0001)\n            hit=true;\n    }\n    \n    vec3 h = cam+dir*t;\n    vec3 n = normalize(cross(dFdy(h),dFdx(h)));\n    \n\tvec3 col = hit ? vec3(dot(n, vec3(.7))*.5+.5) : vec3(0);\n       \n    col = vec3(lessThan(fract(texture(iChannel0, fragCoord/16.).rrr), col));\n    \n    vec3 c0 = vec3(196,207,161)/255.;\n    vec3 c1 = vec3(77,83,60)/255.;\n    \n    // Output to screen\n    fragColor = vec4(mix(c0,c1,1.-col),1);\n}","name":"Image","description":"","type":"image"}]}