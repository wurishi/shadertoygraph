{"ver":"0.1","info":{"id":"fdfcW8","date":"1642177965","viewed":339,"name":"PixelBytes","username":"eiffie","description":"bytebeats applied to pixel coords","likes":9,"published":3,"flags":8,"usePreview":0,"tags":["bytebeats","pixelbytes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rez iResolution\nvoid mainImage( out vec4 O, in vec2 U )\n{//an idea from https://fractalforums.org/index.php?topic=4561.0\n    vec2 u=(2.*U-iResolution.xy)/rez.x;\n    ivec2 v=ivec2(atan(u.x,u.y)/3.14159*512.,dot(u,u)*256.-pow(iTime,1.5)*16.);\n    int t=int(iTime*8.);\n    O=vec4(1)-vec4(abs(v.x&v.y)%t,(v.x^v.y)&t,(v.x&v.y)&t,0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{//bytebeats\n    float tym=time+sin(time*3.14*4.41*time)*.0005;\n    int t=int(tym*44100.+.5);\n    int t1=t*(t>>7 & t>>12);\n    t*=(t>>9 & t>>14);\n    return vec2( ivec2(t,t1)%256)/256. -.5;\n}","name":"Sound","description":"","type":"sound"}]}