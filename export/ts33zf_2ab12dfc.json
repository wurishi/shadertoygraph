{"ver":"0.1","info":{"id":"ts33zf","date":"1568977745","viewed":165,"name":"Aquamarine Effect","username":"Nurutomo","description":"Top-Left = No Effect\nTop-Right = Sqrt(texture)\nBottom-Left = 50% Saturated SQRT\nBottom-Right = Aquamarine (Saturated SQRT + SQRT)","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["aquamarine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Density = 0.6;\nvec3 tex5;\n\nfloat rgbMean(vec4 tex) {\n\treturn (tex.r + tex.g + tex.b) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec3 tex = texture(iChannel0, mod(2.0 * uv, 1.0)).rgb;\n\tvec3 tex2 = sqrt(tex);\n\tvec3 tex3 = clamp(tex2 - Density*(tex2), 0.0, 1.0);\n\tvec3 tex4 = (vec3(rgbMean(vec4(tex2, 1.0))) + tex2) / 2.0;\n\n\tif (uv.y > 0.5) {\n\t\tif (uv.x < 0.5) {\n\t\t\ttex5 = tex;\n\t\t} else {\n\t\t\ttex5 = tex2;\n\t\t}\n\t} else {\n\t\tif (uv.x < 0.5) {\n\t\t\ttex5 = tex3;\n\t\t} else {\n\t\t\ttex5 = tex4;\n\t\t}\n\t}\n\n\tfragColor = vec4(\n\t\ttex5,\n\t\t1.0);\n}","name":"Image","description":"","type":"image"}]}