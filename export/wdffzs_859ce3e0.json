{"ver":"0.1","info":{"id":"wdffzs","date":"1686187105","viewed":47,"name":"smoothstep metaball_","username":"MartinRGB","description":"smoothstep method metaball effect","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(in vec2 _st, in float _radius,in vec2 offset){\n    vec2 dist = _st - offset;\n\treturn 1.-smoothstep(_radius-(_radius*1.01),\n                         _radius+(_radius*0.01),\n                         dot(dist,dist)*4.0);\n}\n\n\n\nfloat smoothedge(float v) {\n    return smoothstep(0.0, 1.0 / iResolution.x, v);\n}\n\nfloat ringRoundRect(vec2 p, vec2 size, float radius,float thickness) {\n  vec2 d = abs(p) - size;\n  return  abs(length(max(d,0.0))- radius) -  min(max(d.x, d.y), 0.0) + thickness;\n}\n\n\nvec3 brightnessContrast(in vec3 value, in float brightness,in float contrast)\n{\n    value = ( value - 0.5 ) * contrast + 0.5 + brightness;\n\n    return value;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec2 stx = fragCoord.xy/iResolution.xx;\n    //st.x *= iResolution.x/iResolution.y;\n\n\tvec3 color = vec3(1. - smoothedge(ringRoundRect(stx - vec2(0.5, 0.27), vec2(0.25, 0.2), 0.02, -0.004)));\n    vec4 texCol = texture(iChannel0,st);\n    if(color.rgb == vec3(1.) ){\n        fragColor.a = 0.;\n    }\n    else{\n        fragColor = vec4(texCol.rgb  ,1.);\n   \n    }\n    \n    vec3 mColor = vec3(1. - smoothedge(ringRoundRect(stx - vec2(0.5, 0.27), vec2(0.25, 0.2), 0.02, -0.004)));\n    //fragColor = vec4(color.rgb ,1.);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float circle(in vec2 _st, in float _radius,in vec2 offset){\n    vec2 dist = _st - offset;\n\treturn 1.-smoothstep(_radius-(_radius*1.01),\n                         _radius+(_radius*0.01),\n                         dot(dist,dist)*4.0);\n}\n\n\n\nfloat smoothedge(float v) {\n    return smoothstep(0.024, 1.0 / iResolution.x, v);\n}\n\nfloat ringRoundRect(vec2 p, vec2 size, float radius,float thickness) {\n  vec2 d = abs(p) - size;\n  return  abs(length(max(d,0.0))- radius) -  min(max(d.x, d.y), 0.0) + thickness;\n}\n\n\nvec3 brightnessContrast(in vec3 value, in float brightness,in float contrast)\n{\n    value = ( value - 0.5 ) * contrast + 0.5 + brightness;\n\n    return value;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xx;\n    //st.x *= iResolution.x/iResolution.y;\n    bool mousePressed = iMouse.z > 0.0;\n    vec2 pos;\n    if(mousePressed)\n    {\n        pos = iMouse.xy;\n    }\n    else{\n        pos = vec2(iResolution.x*((0.23+(sin(iTime)+1.)/2.*0.55)),iResolution.y*(0.09+(cos(iTime)+1.)/2.*0.91));\n    }\n\n\tvec3 color = vec3(circle(st,0.02,vec2(pos.x/iResolution.x,pos.y/iResolution.y*360./640.)));\n\n    \n    color += vec3(smoothedge(ringRoundRect(st - vec2(0.5, 0.27), vec2(0.25, 0.2), 0.02,0.01)));\n    \n\tfragColor = vec4(color,1.);\n    \n    fragColor.rgb = brightnessContrast(color,0.,100.5);\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}