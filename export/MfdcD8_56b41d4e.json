{"ver":"0.1","info":{"id":"MfdcD8","date":"1730600971","viewed":113,"name":"Fake interleaving","username":"copperbotte","description":"this is a demo of using a half frame time skip to simulate interleaving.  This same technique can be used for other temporal dithering techniques, like halftoning.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["dither","interleaving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float pi = 3.141592;\nconst float tau = 2.0*pi;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    float scale = 2.0; // resolution scale\n    vec2 fc = floor(fragCoord / scale);\n    vec2 iRes = floor(iResolution.xy / scale);\n    vec2 uv = fc/iRes;\n    \n    // Correct for aspect ratio, convert so 0 is the center\n    vec2 xy = uv*2.0-1.0;\n    xy.x *= iRes.x/iRes.y;\n    \n    float Time = iTime;\n    if(int(fc.y) % 2 == 0) Time += iTimeDelta/2.0;\n    //if(int(fc.x) % 2 == 0) Time += iTimeDelta/4.0; // four pixel \"interleaving\"\n    \n    vec3 xyz = vec3(xy, 1.0);\n    xyz /= length(xy); // project to cylinder\n    \n    // convert to cylidrical coords\n    vec2 zth = vec2(xyz.z, 0.0);\n    zth.y = 0.5 + atan(xyz.y, xyz.x)/tau; // [0, 1)\n    \n    // move and rotate\n    zth += Time*vec2(5.0, 1.0/8.0);\n    \n    vec2 zth2 = zth * tau;// [0, 2pi)\n    vec3 col = 0.5 + 0.5*cos(zth2.xyx+vec3(0,2,4));\n    \n    // \"wireframe\" sdf\n    vec2 zth3 = zth*vec2(1.0, 8.0);\n    zth3 = fract(zth3 + vec2(0.5)) - vec2(0.5);\n    float sdf = min(abs(zth3.x), abs(zth3.y));\n    if(sdf < 0.025) col /= 10.0;\n    \n    // Output to screen\n    col = pow(col, vec3(1.0/2.2));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}