{"ver":"0.1","info":{"id":"dsKfDy","date":"1698635211","viewed":51,"name":"ghost etching","username":"chenxianming","description":"type this code without calcutorware","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","tex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define PI 3.1415\n#define T( s ) fract( iTime * s ) * PI * 4.\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = ( V * 2. - I.xy ) / I.y;\n    \n    // Time varying pixel color\n    vec3 c;\n    float p, i, a = 5.;\n    \n    while( i++ < a ){\n        u.x += cos( u.y * atan( u.x, u.y ) ) * .5 - cos( i - T( .125 ) );\n        u.y += cos( u.x * atan( u.x, u.y ) ) * .2 + cos( i - T( .125 ) );\n    }\n    \n    p = dot( cos( u.x ), sin( u.y ) ) / a;\n    \n    p = smoothstep( 0.1, p, 0.11 );\n    \n    c += p;\n\n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}