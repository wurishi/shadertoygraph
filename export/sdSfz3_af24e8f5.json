{"ver":"0.1","info":{"id":"sdSfz3","date":"1647027181","viewed":102,"name":"MyMazeOfDoomdeadltdeath","username":"RedWool","description":"mario's tunnel of doom","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["maze"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(in float x, float t)\n{\n    return fract(sin(x+t));\n}\n\nfloat random(in vec2 uv, float t)\n{\n    return fract(sin(dot(uv, vec2(933.29, 3947.39)))*29373.201 + t);\n}\n\nmat2 rotate(float a)\n{\n    return mat2(cos(a), -sin(a),\n                sin(a), cos(a));\n}\n\nfloat diagonal(vec2 uv, int time)\n{\n    uv -= vec2(0.5);\n    uv *= rotate(float(time) * 1.5708);\n    uv += vec2(0.5);\n    return step(uv.x - 0.1, uv.y) - step(uv.x + 0.1, uv.y);\n}\n\nfloat tri(vec2 uv, int time)\n{\n    uv -= vec2(0.5);\n    uv *= rotate(float(time) * 1.5708);\n    uv += vec2(0.5);\n    return step(uv.x, uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 30.0;\n    vec2 uvI = floor(uv);\n    vec2 uvF = fract(uv);\n    \n    float pct = tri(uvF, int(random(uvI, iTime * 0.01)*10.));\n    if (random(uvI, iTime) > (sin(iTime * 0.3)+1.)*0.5)\n    {\n        pct = diagonal(uvF, int(random(uvI, iTime * 0.01) * 10.));\n    }\n\n    // Time varying pixel color\n    vec3 col = pct * (0.9*cos(iTime+uvI.xyx * ((sin(iTime*0.2)+1.)*0.3)+vec3(5,1.+iTime,9.-iTime)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}