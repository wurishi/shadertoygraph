{"ver":"0.1","info":{"id":"3s3fz8","date":"1604302058","viewed":113,"name":"Asymmetric speed of light","username":"CoolerZ","description":"Different spatial periods caused by asymmetric speed of light.\nThe speed of light is different in different directions.\nThe direction in which speed of light is faster has larger spatial period.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["waves","physics","asymmetry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEP .2\n#define XLIM 1.\n#define YLIM 1.\n#define LIGHTSPEED .2\n#define TIMEVARYING 0\n\nfloat circ(vec2 p) {\n    const float r = .1;\n    return length(p)-r;\n}\n\nfloat oracle(vec2 p, float t) {\n    float dist = circ(p+vec2(sin(t),0.));\n    return smoothstep(0.1, 0., dist);\n}\n\nfloat electricfield(vec2 p, float t) {\n    float acc = 0.;\n    int count = 0;\n    for(float y = -YLIM; y <= YLIM; y+=STEP) {\n        for(float x = -XLIM; x <= XLIM; x+=STEP) {\n            vec2 q = vec2(x, y);\n            float d = length(p - q);\n            vec2 direction = normalize(p - q);\n            float angle = atan(direction.y, direction.x);\n            #if TIMEVARYING\n            float speed = (.6+.4*sin(angle+.5*t))* LIGHTSPEED;\n            #else\n            float speed = (.6+.4*sin(angle))* LIGHTSPEED;\n            #endif\n            float delay = d/speed;\n            acc += oracle(q, t-delay);\n            count++;\n        }\n    }\n    return acc*10./float(count);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    float foreground = oracle(uv, iTime);\n    float background = electricfield(uv, iTime);\n\n    vec3 col = vec3(foreground + background);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}