{"ver":"0.1","info":{"id":"cstBRB","date":"1697313576","viewed":42,"name":"Triangle fractal","username":"Shcherbakov","description":"Triangle fractal","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.x * 4.0;\n\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame == 0) {\n        fragColor = vec4(0, 0, 0, 0);\n        return;\n    }\n    vec2 prev_pos = texelFetch(iChannel1, ivec2(0, 0), 0).rg;\n    uint randIdx = uint(texelFetch(iChannel0, ivec2(iFrame, iFrame / 1024) % 1024, 0).r * 255.0) % 3u;\n    vec2 pos = randIdx == 0u ? A : randIdx == 1u ? B : C;\n    fragColor = vec4((prev_pos + pos) * 0.5, 1.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec2 A = vec2(-1.85, -0.5);\nvec2 B = vec2(1.85, -0.5);\nvec2 C = vec2(-0.1, 0.9);\n\nvec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.x * 4.0;\n    \n    const float radius = 100.0;\n\n    if (iFrame == 0)\n    {\n        vec2 points[3] = vec2[3](A, B, C);\n\n        vec3 color = vec3(0);\n        for (int i = 0; i < 3; ++i)\n        {\n            color += vec3(max((1.0 - length(uv - points[i]) * radius), 0.0));\n        }\n\n        // Output to screen\n        fragColor = vec4(color,1.0);\n        return;\n    }\n    fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    vec2 pos = texelFetch(iChannel0, ivec2(0, 0), 0).rg;\n    fragColor += vec4(max((1.0 - length(uv - pos) * radius), 0.0));\n}","name":"Buffer B","description":"","type":"buffer"}]}