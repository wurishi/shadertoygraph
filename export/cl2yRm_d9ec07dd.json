{"ver":"0.1","info":{"id":"cl2yRm","date":"1691595445","viewed":59,"name":"Japan Flag Moving","username":"nakanzaki","description":"aaa","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["japan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool circle(vec2 pos, vec2 center, float radius) {\n    return distance(pos, center) < radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Back and Forth\n    \n    //float time = mod(iTime, 1.0);\n    //if(sin(iTime * radians(180.0)) > 0.0) time = 1.0 - time;\n    \n    //if(time > uv.x) fragColor = vec4(1.0);\n    //else fragColor = vec4(0.0);\n    \n    // Ondulation\n    \n    float time = sin(radians(180.0) * 2.0 *(iTime + uv.y))*0.5;\n    //fragColor = vec4((time * 0.25) + uv.x);\n    fragCoord = fragCoord + vec2(time * 10.0, 0.0);\n    \n    // Flag Setup\n    \n    vec2 center = vec2(iResolution.x / 2.0, iResolution.y / 2.0);\n    if(circle(center, fragCoord, iResolution.y / 4.0)) fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    else fragColor = vec4(1.0);\n    \n    \n    //fragColor = vec4(sin(mod((sin(radians(180.0) * uv.y) + 0.25) * 2.0, 1.0)));\n    //if(time + 0.5 > uv.x) fragColor = vec4(1.0) - fragColor;\n    \n    //if(time + 0.333 > uv.x) fragColor = vec4(1.0);\n    //else if(time + 0.667 > uv.x) fragColor = vec4(0.5);\n    //else fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}]}