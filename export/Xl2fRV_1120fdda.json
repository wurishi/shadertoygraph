{"ver":"0.1","info":{"id":"Xl2fRV","date":"1516565574","viewed":361,"name":"My Shitty Pathtracer","username":"slerpy","description":"Space to reset","likes":16,"published":1,"flags":48,"usePreview":0,"tags":["3d","pathtracer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 col = texelFetch(iChannel0,ivec2(fragCoord.xy),0);\n    //fragColor = (tanh(col.w/200.)) * min(col / col.w, vec4(1));\n    fragColor = col / col.w;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define TAU 6.28318530718\n\n#define FAR 20.\n#define ITER 80\n#define NORK 5e-3\n\n#define RITER 4\n#define RRFB .001\n\nmat3 rx(float a){ float sa= sin(a), ca= cos(a); return mat3(1.,0.,0.,0.,ca,sa,0.,-sa,ca); }\nmat3 ry(float a){ float sa= sin(a), ca= cos(a); return mat3(ca,0.,sa,0.,1.,0.,-sa,0.,ca); }\nmat3 rz(float a){ float sa= sin(a), ca= cos(a); return mat3(ca,sa,0.,-sa,ca,0.,0.,0.,1.); }\n\nfloat box(vec3 p){ p= abs(p); return max(max(p.x, p.y), p.z); }\nfloat box(vec2 p){ p= abs(p); return max(p.x, p.y); }\n\nvec2 amod(vec2 p, float m)\n{\n    float a= mod(atan(p.x, p.y), m) - m/2.;\n    return vec2(cos(a),sin(a)) * length(p);\n}\n\nvec3 hsRand( vec3 n, uint seed )\n{\n    float a= (float((seed*0x73493U)&0xfffffU)/float(0x100000))*2.-1.;\n    float b= 6.283*(float((seed*0xAF71fU)&0xfffffU)/float(0x100000));\n    float c= sqrt(1.-a*a);\n    vec3 r= vec3(c*cos(b),a,c*sin(b));\n    return dot(r,n)>0.?r:-r;\n}\n\nfloat map(vec3 p)\n{\n    float d = 1e+31;\n    \n    d = min(d, p.y + .5);\n    d = min(d, box(p) - .499);\n    \n    p.xz = amod(p.xz, TAU/8.);\n    d = min(d, length(p - vec2(0, 2).yxx) - .5);\n    \n\treturn d;\n}\n\nvec3 color(vec3 p, vec3 n)\n{\n    return 4. * step(.0, .5-box(p.xz)) * (1.-p.xyz);\n}\n\nvec3 normal(vec3 p, float k)\n{\n\tvec2 e = vec2(0,k);\n\treturn normalize(vec3(\n\t\tmap(p + e.yxx) - map(p - e.yxx),\n\t\tmap(p + e.xyx) - map(p - e.xyx),\n\t\tmap(p + e.xxy) - map(p - e.xxy)\n\t));\n}\n\nfloat tracer(vec3 ro, vec3 rd)\n{    \n    float t=.0, m;\n    for(int i=0; i < ITER; i++)\n    {\n        m = map(ro + rd*t);\n        if(t > FAR)break;\n        t += m;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    uint uvSeed = uint(fragCoord) | uint(fragCoord.y);\n    \n    mat3 rm = ry(.6) * rx(.4);\n\tvec3 ro = rm * vec2(0, -4).xxy;\n    vec3 rd = rm * normalize(vec3(uv, 3));\n    \n    float t = tracer(ro, rd);\n    \n\tvec3 sp = ro + rd*t;\n\tvec3 sn = normal(sp,NORK);\n    \n    vec3 col = vec3(0);\n    \n    for(int i=0; i<RITER && t < FAR; i++)\n    {   \n        col += color(sp, sn);\n        \n        uint seed = uvSeed ^ ( uint(iFrame) / uint(i+1) );\n        rd = hsRand(sn, seed);\n        ro = sp + rd * RRFB;\n        t = tracer(ro, rd) - RRFB;\n        \n        sp = ro + rd * t;\n\t\tsn = normal(sp,NORK);\n    }\n    \n    fragColor = vec4(col, 1);\n    \n    if(iFrame > 0 && texelFetch(iChannel1, ivec2(0x20, 0), 0).r < .5)\n\t\tfragColor += texelFetch(iChannel0, ivec2(fragCoord.xy), 0);\n}","name":"Buf A","description":"","type":"buffer"}]}