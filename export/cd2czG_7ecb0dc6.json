{"ver":"0.1","info":{"id":"cd2czG","date":"1690683534","viewed":79,"name":"grant_fluid","username":"gmduffy","description":"My attempt at a fluid simulation. Try drawing on the screen","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define saturate(v) clamp(v,0.,1.)\n\nvec3 hsv2rgb(vec3 c){\n\tvec4 K=vec4(1.,2./3.,1./3.,3.);\n\treturn c.z*mix(K.xxx,saturate(abs(fract(c.x+K.xyz)*6.-K.w)-K.x),c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 U = texture(iChannel0, fragCoord.xy / iResolution.xy);\n    vec2 uv = U.xy;\n    float p = U.z;\n    float ink = U.w;\n    float vel = length(uv);\n    float dir = atan(uv.y, uv.x);\n    \n    //fragColor = vec4(hsv2rgb(vec3(dir / 2.0 / 3.14159265359, 1.0, vel)), 1.0);\n    //fragColor = vec4(p + 0.5);\n    fragColor = vec4(ink);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define pen_size 20.\n\nvoid mainImage( out vec4 fragColor, in vec2 loc )\n{\n\n    vec2 uv = texture(iChannel0, loc / iResolution.xy).xy;\n    vec4 U, U_nw, U_w, U_sw, U_n, U_s, U_ne, U_e, U_se;\n    U    = texture(iChannel0, (loc - uv) / iResolution.xy);\n    U_nw = texture(iChannel0, (loc + vec2(-1.,  1.) - uv) / iResolution.xy);\n    U_w  = texture(iChannel0, (loc + vec2(-1.,  0.) - uv) / iResolution.xy);\n    U_sw = texture(iChannel0, (loc + vec2(-1., -1.) - uv) / iResolution.xy);\n    U_n  = texture(iChannel0, (loc + vec2( 0.,  1.) - uv) / iResolution.xy);\n    U_s  = texture(iChannel0, (loc + vec2( 0., -1.) - uv) / iResolution.xy);\n    U_ne = texture(iChannel0, (loc + vec2( 1.,  1.) - uv) / iResolution.xy);\n    U_e  = texture(iChannel0, (loc + vec2( 1.,  0.) - uv) / iResolution.xy);\n    U_se = texture(iChannel0, (loc + vec2( 1., -1.) - uv) / iResolution.xy);\n    \n    U.z += 0.5 * U_w.x + 0.25 * U_nw.x + 0.25 * U_sw.x - 0.5 * U_e.x - 0.25 * U_ne.x - 0.25 * U_se.x\n         + 0.5 * U_s.y + 0.25 * U_sw.y + 0.25 * U_se.y - 0.5 * U_n.y - 0.25 * U_nw.y - 0.25 * U_ne.y;\n    U.xy += 1.0 * vec2(U_w.z - U_e.z, U_s.z - U_n.z);\n    \n    //U.z = U.z / 8. + U_nw.z / 16. + U_w.z / 8. + U_sw.z / 16. + U_n.z / 8. + U_s.z / 8. + U_ne.z / 16. + U_e.z / 8. + U_se.z / 16.;\n    U.z = U.z / 9. + U_nw.z / 9. + U_w.z / 9. + U_sw.z / 9. + U_n.z / 9. + U_s.z / 9. + U_ne.z / 9. + U_e.z / 9. + U_se.z / 9.;\n    //U.z = 0.0 * U.z + U_nw.z / 8. + U_w.z / 8. + U_sw.z / 8. + U_n.z / 8. + U_s.z / 8. + U_ne.z / 8. + U_e.z / 8. + U_se.z / 8.;\n    \n    \n    if (loc.x <= 5.){\n        U.xy = vec2(1.0, 0.);\n        if (loc.y / iResolution.y > 0.25 && loc.y / iResolution.y < 0.75){\n            U.w = 0.5;\n        } else {\n            U.w = 0.0;\n        }\n    }\n    if (loc.y < 1.0 || loc.y >= iResolution.y - 1.){\n        U.xy = vec2(0., 0.);\n    }\n    if (iFrame == 0){\n        U.xy = vec2(1.0, 0.);\n    }\n    if (length(loc - iResolution.xy / 2. - vec2(-400., 0.)) < 15.){\n        U.xyw = vec3(0.);\n    }\n    \n    if (length(iMouse.xy - loc) < pen_size && iMouse.z > 0.0){\n        fragColor = vec4(0., 0., U.z, 1.0);\n    } else {\n        fragColor = U;\n    }\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"}]}