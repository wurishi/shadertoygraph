{"ver":"0.1","info":{"id":"ttB3Dd","date":"1561524768","viewed":828,"name":"Rule 30 + Game of Life","username":"badjano","description":"Based on this video made in python:\nhttps://www.reddit.com/r/generative/comments/c2ntj2/cellular_automata_rule_30_fed_as_input_to_conways/","likes":23,"published":1,"flags":32,"usePreview":0,"tags":["gameoflife","rule30"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float middle = 0.1;\nconst vec4 color1 = vec4(1,0.,0.75,1);\nconst vec4 color2 = vec4(0,0.75,1,1);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float blur = texture(iChannel1,uv).x;\n    vec4 col = mix(color2,color1,smoothstep(middle,1.,blur));\n    col = mix(vec4(0),col,pow(smoothstep(0.,middle,blur),.1));\n    fragColor = texture(iChannel0,uv) + col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define MOD3 vec3(.1031,.11369,.13787)\n\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * MOD3);\n    p3 += dot(p3, p3.yxz+19.19);\n    return -1.0 + 2.0 * fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float current = texture(iChannel0,fragCoord/iResolution.xy).x;\n    if ( iFrame < 1 ){\n        vec2 r = iResolution.xy*0.5;\n        r.y = 0.;\n        if ( distance(fragCoord,r) < 1. ){\n\t\t    fragColor = vec4(1);\n        } else {\n            fragColor = vec4(0);\n        }\n    } else if ( int(fragCoord.y) < 1 ){\n\t    float a = texture(iChannel0,(fragCoord+vec2(-1,0))/iResolution.xy).x;\n\t    float b = texture(iChannel0,(fragCoord+vec2(0,0))/iResolution.xy).x;\n\t    float c = texture(iChannel0,(fragCoord+vec2(1,0))/iResolution.xy).x;\n        if (\n            (a>0.5 && b<0.5 && c<0.5) ||\n            (a<0.5 && b>0.5 && c>0.5) || // RULE 30\n            (a<0.5 && b>0.5 && c<0.5) ||\n            (a<0.5 && b<0.5 && c>0.5)\n        ) {\n            fragColor = vec4(1);\n        } else {\n            fragColor = vec4(0);\n        }\n    } else if (iMouse.z > 0.) {\n        if ( fragCoord.y > iResolution.y*0.5 ){\n            fragColor.rgb = hash33(vec3(fragCoord.xy, iTime));\n        } else {\n            fragColor = texture(iChannel0,(fragCoord+vec2(0,-1))/iResolution.xy);\n        }\n\n    } else {\n        \n        if ( fragCoord.y > iResolution.y*0.5 ){\n            float count;\n            for (int x=-1; x<=1; x++ )\n            for (int y=-1; y<=1; y++ ){\n                if ( !(x == 0 && y == 0) )\n                {\n                    vec2 xy = vec2(x,y);\n                    count += texture(iChannel0,(fragCoord+xy)/iResolution.xy).x;\n                }\n            }\n            if ( current > 0.5 ){\n\t            fragColor = count > 3. || count < 2. ? vec4(0) : vec4(1);\n            } else {\n\t            fragColor = count == 3. ? vec4(1) : vec4(0);\n            }\n        } else {\n            fragColor = texture(iChannel0,(fragCoord+vec2(0,-1))/iResolution.xy);\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = clamp(pow(texture(iChannel1,uv)*0.98,vec4(.999)) + texture(iChannel0,uv),0.,1.);\n}","name":"Buffer B","description":"","type":"buffer"}]}