{"ver":"0.1","info":{"id":"DtGyR3","date":"1700457707","viewed":44,"name":"Magen David","username":"jeffpeck","description":"The Star of David, animated","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\n// from here, modified for glsl:\n// https://github.com/zranger1/PixelblazePatterns/blob/master/Toolkit/sdf2d.md\nfloat hexStar(float x, float y, float r) {\n  // rescale to pointy parts of star\n  x = abs(x * 1.73205); y = abs(y * 1.73205); \n  float dot = 2. * min(-0.5 * x + 0.866025 * y, 0.);\n  x -= dot * -0.5; y -= dot * 0.866025;\n  \n  dot = 2. * min(0.866025 * x + -0.5 * y, 0.);\n  x -= dot * 0.866025; y -= dot * -0.5;\n  \n  x -= clamp(x, r * 0.57735, r * 1.73205);\n  y -= r;\n  return sign(y) * length(vec2(x,y)) / 1.73205;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float d1 = hexStar(uv.x, uv.y, .02 + sin(iTime) * .1);\n    float d2 = hexStar(uv.x, uv.y, .06 - sin(iTime) * .2);\n    float d3 = hexStar(uv.x, uv.y, .12 + sin(iTime) * .3);\n    float d4 = hexStar(uv.x, uv.y, .18 - sin(iTime) * .2);\n    float d5 = hexStar(uv.x, uv.y, .24 + sin(iTime) * .1);\n    \n\n    vec3 color = mix(vec3(0., 0., 1.), vec3(0.), smoothstep(d1, 0., .01));\n    color = mix(vec3(0., .5, 1.), color, smoothstep(d2, 0., .01));\n    color = mix(vec3(.5, 0.8, 1.), color, smoothstep(d3, 0., .01));\n    color = mix(vec3(0.8, 1., 1.), color, smoothstep(d4, 0., .01));\n    color = mix(vec3(1., 1., 1.), color, smoothstep(d5, 0., .01));\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}