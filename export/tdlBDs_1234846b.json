{"ver":"0.1","info":{"id":"tdlBDs","date":"1589314357","viewed":443,"name":"Simple Voxel Cone Tracing","username":"jojendersie","description":"This is a brute force demonstration of voxel cone tracing. It is not exactly meant to look beautyful.\nThe important point is that the input in channel 0 is interpreted as some kind of density and has to provide mip-maped texture access.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voxelconetracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float LIGHT_RADIUS = 0.05;\n    const float DENSITY_SCALE = 5.0;\n    const float BRIGHTNESS = 1.0;\n    const float START_OFFSET = 0.0025; // Should be smaller than light size\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / float(iResolution.y);\n    \n    vec2 center = (uv - 0.5);\n    \n    if (dot(center, center) < LIGHT_RADIUS * LIGHT_RADIUS) {\n        fragColor = vec4(BRIGHTNESS, BRIGHTNESS, 0.0, 1.0);\n        return;\n    }\n    \n    vec2 tracingDir = -normalize(center);\n    float dist = length(center);\n    float coneTan = LIGHT_RADIUS / dist;\n    \n    float transmittance = 1.0;\n    float t = texture(iChannel0, uv * 23.52167).x * START_OFFSET + START_OFFSET;\n    float st = START_OFFSET;\n    vec2 currentPos = uv + tracingDir * t;\n    while (t < dist) {\n        float level = log(st * dot(vec2(iChannelResolution[0]), tracingDir) + 1.0);\n        float visibility = textureLod(iChannel0, currentPos, level).x;\n        transmittance *= exp(-st * (1.0 - visibility) * DENSITY_SCALE);\n        \n        st = t * coneTan * 0.5;\n        t += st;\n        currentPos = uv + tracingDir * t;\n    }\n        \n    // Output to screen\n    fragColor = vec4(transmittance * BRIGHTNESS, transmittance * BRIGHTNESS, 0.0 ,1.0);\n}","name":"Image","description":"","type":"image"}]}