{"ver":"0.1","info":{"id":"XcGcRy","date":"1732055546","viewed":74,"name":"2D Water Reflection Shader","username":"BipedPotato","description":"water idk","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","reflection","water","outline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float surface = iMouse.y/iResolution.y;\n\n    if(iMouse.y == 0.0){\n        surface = 0.3;\n    }\n    float reflection_stretch = 2.0;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 amplitude = 1.2/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    float frequency = 5.0;\n    float stroke_thickness = 2.0/iResolution.y;\n    vec4 stroke_color = vec4(1.0,1.0,1.0,1.0);\n    vec2 scale = vec2(100.0,100.0);\n    vec2 displaced_uv = vec2(uv.x,uv.y);\n    displaced_uv.x +=amplitude.x*cos(frequency*iTime+uv.y*scale.x)/ratio;\n       \n    displaced_uv.y+=amplitude.y*sin(frequency*iTime+uv.x*scale.y);\n   \n    vec4 water_color = vec4(1.0,1.0,1.0,1.0);\n   \n    if (displaced_uv.y < surface) {\n       uv = displaced_uv;\n       float dist_to_surface = surface - uv.y;\n       if(dist_to_surface <= stroke_thickness){\n           fragColor = mix(stroke_color,texture(iChannel0,uv),0.5);\n       }\n       else{\n           uv.y = surface+(dist_to_surface)*(reflection_stretch);\n           water_color = vec4(0.3,0.3,1.0,1.0);\n           fragColor = mix(water_color,texture(iChannel0,uv),0.7);\n       }\n       \n    }\n    else{\n        fragColor = texture(iChannel0,uv);\n    }\n}","name":"Image","description":"","type":"image"}]}