{"ver":"0.1","info":{"id":"4fSSWD","date":"1706304458","viewed":93,"name":"Box trick","username":"BCFlavin","description":"boxes and boxes. floating boxes","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// built from Raymarching Base\n\nfloat sdBoxFrame( vec3 p, vec3 b, float e )\n{\n       p = abs(p  )-b;\n  vec3 q = abs(p+e)-e;\n  return min(min(\n      length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n      length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n      length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n}\n\nmat2 rot2d(float angle) {\n    float c = sin(angle);\n    float s = cos(angle);\n    return mat2(c, s, -s, c);\n}\n\n// Scene distance\nfloat map(vec3 p) {\n\n    vec3 q = p;\n    \n\n    q = fract(p) - 0.5;\n    \n    q.xz *= rot2d(iTime);\n    q.yx *= rot2d(-iTime);\n    \n    float box = sdBoxFrame(q, vec3(0.1), 0.01);\n\n    \n   \n    return box;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    // Initialization\n    vec3 ro = vec3(0, 0, -3);         // ray origin\n    vec3 rd = normalize(vec3(uv, 1)); // ray direction\n    vec3 col = vec3(0);               // final pixel color\n\n    float t = 0.; // total distance travelled\n\n    // Raymarching\n    for (int i = 0; i < 50; i++) {\n        vec3 p = ro + rd * t;     // position along the ray\n        p.zy *= rot2d(iTime * 0.5);     // rotate camera\n        p.xy *= rot2d(iTime * 0.5);\n\n        float d = map(p);         // current distance to the scene\n\n        t += d * 0.6;             // \"march\" the ray\n\n        if (d < .001) break;      // early stop if close enough\n        if (t > 100.) break;      // early stop if too far\n    }\n\n    // Coloring\n    col = vec3(t * .1 + 0.0,t * .1 + 0.0,t * .1 + 0.0);  // color based on distance\n\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}