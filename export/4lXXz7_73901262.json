{"ver":"0.1","info":{"id":"4lXXz7","date":"1436905722","viewed":394,"name":"quick raymarch sketch piinntt","username":"public_int_i","description":"work in progress","likes":5,"published":1,"flags":4,"usePreview":0,"tags":["3d","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define FOV_SCALE .3\n#define ITER 180\n#define EPSILON .005\n#define NORMAL_EPSILON .001\n#define CAMERA_SPEED .1\n\nconst vec3 BEND = vec3(0.3,0.,0.);\n\nvec3 SAMP_A;// = floor(texture(iChannel0,vec2(0.03,0.0)).xyz*10.)/10.;\n\n\n\nfloat df(in vec3 rp) {\n    vec3 lp = cos(rp);\n    vec3 crp = cos(rp);\n    \n    return max(-(length(mod(rp,vec3(.4))-vec3(.2))-.1),\n        \t   length(lp)-1.1+cos((crp.x+crp.y+crp.z+cos(SAMP_A.x+rp.z))*4.6)*.1);\n}\n\nconst vec3 ne = vec3(NORMAL_EPSILON,0.,0.);\nvec3 normal(in vec3 rp) {\n    return normalize(vec3(df(rp+ne)-df(rp-ne),\n                          df(rp+ne.yxz)-df(rp-ne.yxz),\n                          df(rp+ne.yzx)-df(rp-ne.yzx)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(.5);\n    uv.y *= iResolution.y/iResolution.x;\n\n    float cst = mod(iTime*CAMERA_SPEED,6.);\n    vec3 rp = vec3(0.,iTime,0.);\n    vec3 rd = normalize(vec3(sin(cst*1.04719),0.,cos(cst*1.04719)));\n    vec3 rr = cross(vec3(0.,1.,0.),rd);\n    rd = normalize(rd*FOV_SCALE + uv.x*rr + uv.y*cross(rd,rr));\n    rr = rp;\n    \n    SAMP_A = floor(texture(iChannel0,vec2(0.03,0.0)).xyz*10.)/10.;\n    \n    float d;\n    for (int i = 0; i < ITER; i++) {\n        if ((d = df(rp)) < EPSILON) break;\n        \n\t\trp += d*rd;\n        rd = normalize(rd+BEND*d);\n    }\n\n\tif (d > EPSILON) {\n       fragColor =vec4(0.);\n    \treturn;\n\t}\n    \n    d = length(rp-rr);\n    \n    vec3 c = vec3(.52);\n    vec3 n = normal(rp);\n    c = .4*c+max(0.,dot(normalize(vec3(.2,.5,.5)),n))*c;\n    c *= max(0.,1.-(d/26.));\n \n    vec3 e = vec3(max(0.,1.-(length((mod(rp,vec3(.4))-vec3(.2))*.75)-.04)*20.));\n    c += e;\n    \n    fragColor = vec4(c,1.);\n}","name":"","description":"","type":"image"}]}