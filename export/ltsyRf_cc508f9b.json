{"ver":"0.1","info":{"id":"ltsyRf","date":"1505919627","viewed":364,"name":"The PI Fractal Zoom","username":"rory618","description":"See https://friendlyfieldsandopenmaps.com/2017/09/18/the-pi-fractal/","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["fractal","pi","greyscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    vec2 R = iResolution.xy;\n    float z = pow(3.,float(iFrame%40)/40.);\n    vec4 a = texelFetch(iChannel0, ivec2(.33*(i-R/2.)/z+R/2.),0)/32., \n         b = texelFetch(iChannel1, ivec2(.33*(i-R/2.)/z*3.+R/2.),0)/32.;\n    \n    if((iFrame/40)%2==0){\n        a = 1.-a;\n    } else {\n        b = 1.-b;\n    }\n    \n    o = mix(a,b,float(iFrame%40)/40.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n    o = texelFetch(iChannel1,ivec2(i),0);\n    if((iFrame)%40>0) o = texelFetch(iChannel0,ivec2(i),0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec2 hash23(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    vec2 R = iResolution.xy;\n    o = vec4(texelFetch(iChannel2,ivec2(\n        int(texelFetch(iChannel1,ivec2(i)/3+ivec2(R)/3,0)),\n        (2-int(i.y)%3)*3+int(i.x)%3),0));\n    if(iFrame%40>0) o = texelFetch(iChannel1,ivec2(i),0);\n    if(iFrame==0) o = vec4(0);\n    /*vec2 rnd = hash23(vec3(i,iFrame));\n    if(iFrame%40==0 && rnd.x>0.999){\n        o *= rnd.y;\n    }*/\n    //randomness to prevent looping and keep things interesting\n    \n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n    if(iFrame==0){\n        o = vec4(int[](\n        11, 25, 25, 3, 6, 12, 16, 15, 11,\n        26, 26, 28, 25, 27, 29, 28, 29, 29,\n        28, 28, 29, 22, 26, 26, 29, 29, 28,\n        22, 29, 24, 29, 29, 24, 29, 22, 21,\n        28, 29, 24, 28, 26, 29, 29, 26, 17,\n        0, 0, 2, 8, 2, 2, 1, 3, 2,\n        23, 7, 8, 18, 29, 12, 16, 22, 12,\n        2, 2, 1, 2, 1, 2, 1, 3, 1,\n        19, 13, 22, 24, 18, 22, 1, 27, 29,\n        0, 8, 23, 11, 7, 28, 1, 5, 2,\n        22, 29, 26, 27, 15, 19, 25, 21, 10,\n        16, 17, 1, 1, 21, 10, 13, 5, 29,\n        23, 29, 29, 23, 29, 29, 18, 29, 29,\n        27, 27, 29, 26, 22, 15, 24, 12, 24,\n        14, 28, 29, 28, 28, 14, 29, 23, 19,\n        16, 7, 12, 7, 7, 24, 29, 7, 29,\n        22, 8, 21, 29, 21, 21, 29, 13, 10,\n        4, 23, 23, 2, 24, 13, 23, 0, 16,\n        5, 17, 1, 27, 8, 2, 5, 25, 1,\n        25, 25, 15, 19, 29, 29, 19, 28, 21,\n        1, 5, 0, 1, 6, 2, 3, 0, 2,\n        27, 27, 20, 22, 22, 27, 29, 22, 28,\n        1, 1, 1, 4, 3, 2, 3, 2, 2,\n        29, 27, 24, 29, 28, 24, 29, 26, 24,\n        21, 25, 27, 23, 28, 27, 19, 28, 29,\n        28, 28, 28, 21, 13, 26, 3, 7, 27,\n        5, 22, 20, 15, 22, 15, 24, 14, 22,\n        1, 3, 2, 2, 1, 7, 3, 2, 0,\n        3, 15, 10, 22, 7, 29, 5, 22, 7,\n        1, 1, 3, 1, 1, 2, 1, 1, 3)\n                 [int(i.x)*9+int(i.y)]);\n    } else {\n        o = texelFetch(iChannel0,ivec2(i),0);\n    }\n}","name":"Buffer C","description":"","type":"buffer"}]}