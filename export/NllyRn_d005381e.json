{"ver":"0.1","info":{"id":"NllyRn","date":"1647439261","viewed":77,"name":"Mint Stew","username":"uiop","description":"This is my test of how buffers are saved between frames. I like how it turned out. IDK how fast it normally looks because my machine is 300fps.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["reactiondiffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    fragColor = texture(iChannel0,uv);\n\n    // Output to screen\n    //fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float state(ivec2 p, float speed){\n    float r = texelFetch(iChannel0, p, 0).r;\n    float sum = 0.;\n    for(int i = -1; i < 2; i++){\n        for(int j = -1; j < 2; j++){\n            sum += texelFetch(iChannel0, p + ivec2(i,j),0).r;\n        }\n    }\n    float l = r;\n    if(r > 0.99){\n        l = 0.0;\n    }else if(r > 0.5){\n        l += (0.001f + sum/9.f - l)*speed;\n    }else if(r >= 0.01) {\n        l += 0.01f*speed;\n    }else{\n        l += 0.;\n        if(sum > 0.25){\n            l = 0.01;\n        }\n    }\n    return l;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float SPEED = 1.f;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel0,uv);\n    if(iFrame<10){\n        //col = vec4(round(sin(fragCoord.x*0.213234*sin(fragCoord.y*1.2421)+fragCoord.y*2.52531*sin(fragCoord.x*10.2105))),0.0,1.0,1.0);\n        col = vec4(0,0,0,0);\n        if(length(uv-0.5) < 0.01){\n            col = vec4(1,1,1,1);\n        }\n    }else{\n        float s = state(ivec2(fragCoord),SPEED);\n        col = vec4(s,0.5+s*0.5,s*2.-1.,0);\n    }\n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}