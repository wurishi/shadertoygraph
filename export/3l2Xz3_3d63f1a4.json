{"ver":"0.1","info":{"id":"3l2Xz3","date":"1568276529","viewed":325,"name":"Deep-ish mandelbrot zoom","username":"Zombye","description":"Gets to a bit under 10^20x zoom before precision issues become noticeable, though it does vary a bit.\nI think that could be improved a bit without making it much slower, but probably not by much.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 2\n\n#define complexMul(a, b) vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x)\n\nfloat mandelbrot(vec2 c, vec4 pc, int iterations) {\n    vec2 z = vec2(0.0);\n    int i = 0;\n\n    vec2 zlo = vec2(0.0);\n    vec2 zhi = vec2(0.0);\n    do {\n        /* standard method\n        vec2 zn;\n        zn.x = z.x * z.x - z.y * z.y;\n        zn.y = 2.0 * z.x * z.y;\n        z = zn + c;\n\n\t\tif (dot(z, z) >= exp2(8.0)) {\n            break;\n        }\n\t\t//*/\n        //* splitting z into two parts like this helps precision a lot\n        vec2 add = 2.0 * complexMul(zhi, zlo);\n        zhi = complexMul(zhi, zhi)       + pc.xy;\n        zlo = complexMul(zlo, zlo) + add + pc.zw;\n        z = zhi + zlo;\n        \n        if (dot(z, z) >= exp2(8.0)) {\n            break;\n        }\n        \n\t\t// this avoids some issues with the way z is split so you can zoom in further\n        // sometimes changing 0.5 to something else seems to help precision a bit\n        if (dot(zlo, zlo) / dot(zhi, zhi) > 0.5) {\n            zlo = vec2(0.0);\n            zhi = z;\n        }\n\t\t//*/\n    } while (++i < iterations);\n    \n    float nu = log2(log2(dot(z, z))) - 1.0;\n    return float(i) + 1.0 - nu;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = exp2(iTime);\n    //const float zoom = exp2(60.0);\n    //const float zoom = exp2(65.0);\n    //const float zoom = exp2(70.0);\n    \n    vec3 col = vec3(0.0);\n    for (int x = 0; x < AA; ++x) {\n        for (int y = 0; y < AA; ++y) {\n            vec2 o = (vec2(x, y) + 0.5) / float(AA);\n            \n            vec2 fc = fragCoord + o - 0.5;\n    \t\tvec2 c = (2.0 * fc - iResolution.xy) / iResolution.y;\n                 c = c / zoom;\n            \n            vec4 pc = vec4(vec2(-0.05026782, 0.6721055), vec2(0.7e-16, 0.0) + c);\n                 c += pc.xy;\n\n            const float tau = radians(360.0);\n            float t = mandelbrot(c, pc, 2000);\n            vec3 s = 0.5 - 0.5 * vec3(cos(t), cos(t/tau), cos(t/(tau*tau)));\n            col += s;\n        }\n    }\n    col /= float(AA * AA);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}