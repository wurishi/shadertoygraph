{"ver":"0.1","info":{"id":"wl2SzR","date":"1564860912","viewed":1086,"name":"Caustic Amoebas","username":"Mipmap","description":"Another riff on Flow of cells ([url]https://www.shadertoy.com/view/MlsGWX[/url]), with more of a caustics effect.\n","likes":18,"published":3,"flags":0,"usePreview":0,"tags":["2d","animation","curve","organic","cell","art","caustic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Tweak #2 of sben's 'Flow of cells' (https://www.shadertoy.com/view/MlsGWX)\n#define FIELD 10.0\n#define HEIGHT 0.7\n#define ITERATION 2.0\n#define TONE vec4(.2,.4,.8,0)\n#define SPEED 0.5\n\nfloat eq(vec2 p,float t){\n\tfloat x = sin( p.y-t +cos(t+p.x*.8) ) * cos(p.x-t);\n\tx *= acos(x);\n\treturn - x * abs(x-.05) * p.x/p.y*4.9;\n}\n\nvoid mainImage( out vec4 O, vec2 U ) {\n    vec4 X=O;\n\tvec2  p = FIELD*(U / iResolution.xy  +.9);\n\tfloat t = iTime*SPEED,\n          hs = FIELD*(HEIGHT+cos(t)*1.9),\n\t      x = eq(p,t), \n          y = p.y-x*0.1;\n    \n\tfor(float i=0.; i<ITERATION; ++i)\n\t\tp.x *= 1.5,\n        X = x + vec4(0, eq(p,t+i+1.), eq(p,t+i+2.) ,0),\n        x = X.z += X.y,\n        O += TONE / abs(y-X-hs);\n}","name":"Image","description":"","type":"image"}]}