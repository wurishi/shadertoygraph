{"ver":"0.1","info":{"id":"XclBzl","date":"1724456858","viewed":40,"name":"ada129690_mandelbrot","username":"ada129690","description":"Mandelbrot set. Zoom gets fuzzy after a certain point because of floating point inaccuracy.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["ada129690mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nconst vec3 black = vec3(0.);\nconst vec3 white = vec3(1.);\n\nconst vec3 a = vec3(.5);\nconst vec3 b = vec3(.5);\nconst vec3 c = vec3(1.);\nconst vec3 d = vec3(.0, .33, .67);\nvec3 palette(float t) {\n    return a + b * cos(2. * PI * (c * t + d));\n}\n\nmat2 rot2D(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvec2 imul(vec2 a, vec2 b) {\n    return vec2(\n        a.x * b.x - a.y * b.y,\n        a.x * b.y + a.y * b.x\n    );\n}\n\nvec3 mandelbrot(vec2 uv) {\n    vec2 z = vec2(0.);\n    vec2 c = uv;\n    \n    float i = 0.;\n    const float N = 100.;\n    for (; i < N; i++) {\n        z = imul(z, z) + c;\n        if (abs(dot(z, z)) > 4.) break;\n    }\n\n    if (i >= N) return black;\n    else return palette(i/N*5.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv *= rot2D(-PI / 2.);\n    uv.x -= .5;\n    uv = uv / vec2(exp(iTime * .3)) + vec2(.3, .0174962);\n\n    vec3 col = mandelbrot(uv);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}