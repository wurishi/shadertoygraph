{"ver":"0.1","info":{"id":"slGcRG","date":"1661690521","viewed":143,"name":"Truchet v2","username":"gena","description":"Truchet patterns based on The Art of Code tutorial. mouse: x - zoom, y - squareness of the red curve","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on tutorial of https://www.youtube.com/watch?v=pmS-F6RJhAk\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(123.234, 214.364));\n    p += dot(p, p+345.345);\n    return fract(p.x*p.y);\n}\n\n// Chebyshev length\nfloat Length(vec2 p, float k) {\n    p = abs(p);\n    return pow(pow(p.x, k) + pow(p.y, k), 1.0/k);\n}\n\nvec4 Truchet(vec2 p, vec3 col, float k, float w, float pattern) {\n    vec2 id = floor(p);\n\n    float n = Hash21(id); // random 0 to 1 per box\n\n    p = fract(p)-.5;\n    \n    if(n < 0.5)\n        p.x *= -1.0; // flip randomly\n\n\n    float s = p.x > -p.y ? 1.0 : -1.0; // corner selection\n    \n    \n    vec2 cp = p - vec2(0.5,0.5) * s; // circle coordinates\n    float cd = Length(cp, k); // distance to center\n\n    float e = 0.005; // bluur edge size\n    float r = 0.5; // radius\n    float ed = abs(cd-r) - w; // edge distance\n    float contour = smoothstep(e, -e, ed);\n    \n    //col += s * 0.5;\n    //col += n;\n    \n    float a = atan(cp.x, cp.y); // polar angle from -pi to pi\n    \n    // edges between tiles\n    //if(p.x > .44 || p.y > .44) col += 1.0;\n    \n    float d = 1. + cos(a*2.)*.5; // depth\n\n    col *= mix(0., 1., d); // shading (along curves)\n\n    float checker = mod(id.x+id.y, 2.0)*2.-1.; // checker board, alternate x and y\n\n    col *= 1. + sin(checker*a*30. + ed * 100. - 5.0*iTime)*.3*pattern;\n    \n    return vec4(col, d) * contour;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    float cd = length(uv); // distance to the screen center\n    \n    uv *= 5. + (iMouse.x - 300.) / 100.;\n    \n    float w = mix(.1, 0.02, smoothstep(0., .5, cd));\n \n    float k1 = 1. + iMouse.y / 100.0;    \n    //float k1 = 1.0;\n    vec4 t1 = Truchet(uv, vec3(0,91./255.,187./255.)*0.9, k1, 0.06, 0.0);\n\n    //float k2 = k1;\n    float k2 = 2.0;\n    vec4 t2 = Truchet(uv + 0.5, vec3(254./255.,213./255.,0)*0.7, k2, w, 1.0);\n\n \n    col = t1.a > t2.a ? t1.rgb : vec3(0.);\n    col += t2.a > t1.a ? t2.rgb : vec3(0.);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}