{"ver":"0.1","info":{"id":"7dtXz4","date":"1632782026","viewed":84,"name":"ninofiliu/worley-noise-3d","username":"ninofiliu","description":"2D slicing of a 3D Worley noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand1(in float x) {\n    return fract(158789.0*sin(x));\n}\n\nfloat worley_3d(vec3 current, vec3 sizes, int nb_x, int nb_y, int nb_z) {    \n    float min_dist = sizes.x+sizes.y+sizes.z;\n    int current_xi = int(current.x/sizes.x);\n    int current_yi = int(current.y/sizes.y);\n    int current_zi = int(current.z/sizes.z);\n    \n    for (int xi = current_xi-1; xi < current_xi+2; xi++) {\n    for (int yi = current_yi-1; yi < current_yi+2; yi++) {\n    for (int zi = current_zi-1; zi < current_zi+2; zi++) {\n        vec3 point = vec3(\n            sizes.x/float(nb_x)*(float(xi)+rand1(float(xi+yi+zi))),\n            sizes.y/float(nb_y)*(float(yi)+rand1(0.789*float(xi+yi+zi))),\n            sizes.z/float(nb_z)*(float(zi)+rand1(0.456*float(xi+yi+zi)))\n        );\n        float dist = distance(current, point);\n        if (dist < min_dist) {\n            min_dist = dist;\n        }\n    }\n    }\n    }\n    \n    return min_dist;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float depth = min(iResolution.x, iResolution.y);\n    vec3 current = vec3(fragCoord.x, fragCoord.y, depth*mod(iTime*0.2, 1.0));\n    vec3 sizes = vec3(iResolution.x, iResolution.y, depth);\n    float w = worley_3d(current, sizes, 5, 5, 5);\n    float light = atan(w/depth)/1.58;\n    fragColor = vec4(vec3(light), 1.0);\n}","name":"Image","description":"","type":"image"}]}