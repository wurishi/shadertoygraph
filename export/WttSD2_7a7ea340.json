{"ver":"0.1","info":{"id":"WttSD2","date":"1581725959","viewed":69,"name":"Laughing smile","username":"henrmota","description":"A basic shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["smile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float drawRectangle(vec2 uv, vec2 p, float width, float height) {\n    float halfWidth = width / 2.0;\n    float halfHeight = height/2.0;\n    p.x -= halfWidth;\n    p.y -= halfHeight;\n    \n\tfloat horizontal = smoothstep(p.x, p.x+0.01, uv.x) - smoothstep(p.x + width, p.x + width + 0.01, uv.x); \n    float vertical = smoothstep(p.y, p.y+0.01, uv.y) - smoothstep(p.y + height, p.y + height + 0.01, uv.y); \n      \n    \n    return horizontal * vertical;\n    \n}\n\nfloat drawCircle(vec2 uv, vec2 p, float radius, bool onHalf) {\n    float dist = length(p - uv);\n    \n    float circle = smoothstep(radius, radius - 0.01, dist);\n    if(onHalf) {\n      p.y -= radius/2.0;\n      return circle * drawRectangle(uv, p, radius * 2., radius);\n    }\n    \n    return circle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n    uv.x *= iResolution.x /iResolution.y;\n    float eye1 = drawCircle(uv, vec2(0.1, 0.1), 0.05, false);\n    float eye2 = drawCircle(uv, vec2(-0.1, 0.1), 0.05, false);\n    float mouth = drawCircle(uv, vec2(0., -0.05), 0.1 + 0.1 * abs(cos(iTime)), true);\n    float circle = drawCircle(uv, vec2(0, 0), 0.3, false);\n    circle = max(0., circle - eye1 - eye2 - mouth);\n    \n    // Time varying pixel color\n    vec3 col = vec3(1., 1., 0.) * circle;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}