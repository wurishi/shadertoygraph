{"ver":"0.1","info":{"id":"3dGyRc","date":"1603314566","viewed":721,"name":"Distress Flare","username":"athibaul","description":"A simple 2D shader inspired by a shot from [url=https://youtu.be/Jw2XwhMxPqU?t=161]Woodkid's music video for \"In Your Likeness\".[/url]","likes":30,"published":1,"flags":0,"usePreview":1,"tags":["2d","light","smoke","flare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Distress Flare\n// by athibaul\n\n// Inspired by a shot from Woodkid's music video \"In Your Likeness\"\n// https://youtu.be/Jw2XwhMxPqU?t=161\n\nvec3 flareCol = vec3(0.15, 1.0, 0.4);\nconst float SPEED = 2.5;\n\nfloat noise(float x)\n{\n    return 2.*textureLod(iChannel0, vec2(x+0.5,0)/256., 0.).r-1.;\n}\n\nfloat fbm1D(float x)\n{\n    return noise(x)*0.5 + noise(2.*x)*0.25 + noise(4.*x)*0.125;\n}\n\n\nfloat noise2D(vec2 p)\n{\n    p = floor(p) + smoothstep(0.,1.,fract(p));\n    return textureLod(iChannel0, (p+0.5)/256., 0.).r;\n}\nfloat fbm2D(vec2 p)\n{\n    return 0.5*noise2D(p)+0.25*noise2D(2.*p)+0.125*noise2D(4.*p)+0.0625*noise2D(8.*p);\n}\n\n\nfloat intensityAtTime(float t)\n{\n    return fbm1D(t*3.)*0.5 + 0.5;\n}\n\nfloat ligIntensity(float t)\n{\n    return exp(5.*(intensityAtTime(t)-0.5));\n}\n\n\nvec3 flareColor(vec2 p, float time, float dmin)\n{\n    // Hexagonal shape\n    vec2 q = abs(p);\n    vec2 n = vec2(-sqrt(3.)/2., 0.5);\n    q = dot(q,n) > 0. ? reflect(q,n) : q;\n    float d = dot(q,n*vec2(-1,1));\n    float intensity = ligIntensity(time) / (1.+abs(p.y));\n    return flareCol * pow(d+dmin, -2.) * 0.005 * intensity;\n}\n\nvec3 bokeh(vec2 p, float t, float smoo)\n{\n    float bok = smoothstep(0.5+smoo,0.5-smoo,length(p))\n        * (0.5+smoothstep(0.0,0.5, length(p)));\n    return bok * 0.01 * flareCol * ligIntensity(t);\n}\n\nvec3 bokeh2(vec2 p, float t, float smoo)\n{\n    float bok = smoothstep(0.5+smoo,0.5-smoo,length(p));\n    return bok * 0.01 * flareCol * ligIntensity(t);\n}\n\nconst vec2 vSmoke = normalize(vec2(1,-3)); // Velocity of smoke rel. to flare\nfloat smokeDensity(vec2 p, float time)\n{\n    vec2 v = vSmoke;\n    vec2 q = mat2(v.x,-v.y,v.y,v.x) * p;\n   \tq.y += fbm1D((q.x-time)*6.)*0.03*q.x;\n    float density = intensityAtTime(time-0.9*q.x);\n    density = smoothstep(0.2,0.6, density);\n    float width = 0.01 + 0.06*q.x;\n    return smoothstep(0.,0.01,q.x) * smoothstep(width,0.0,abs(q.y)) * density;\n}\n\nvec3 smokeColor(vec2 p, float time)\n{\n    float den1 = smokeDensity(p, time);\n    float eps = 0.1;\n    float den2 = smokeDensity(p*(1.-eps), time);\n    float lig = max((den1-den2)/eps+0.1, 0.0);\n    return vec3(lig*den1*flareCol) * pow(length(p)+0.5, -2.) * 0.15;\n}\n\nfloat cloudsDen(vec2 p)\n{\n    vec2 q = p;\n    q += fbm2D(3.*q)*0.5;\n    q *= mat2(0.6,0.8,-0.8,0.6);\n    float den = fbm2D(5.*q);\n    return den;\n}\n\nvec4 midCloudsCol(vec2 p, float time)\n{\n    float den1 = cloudsDen(p - time*vSmoke);\n    float den2 = cloudsDen(p*0.5 - time*vSmoke);\n    float lig = max(den1-den2, 0.);\n    float intensity = pow(2.+length(p), -2.) * 2.;\n    return vec4(flareCol * lig * intensity, den1);\n}\n\nvec3 backCloudsCol(vec2 p, float time)\n{\n    // Depth is faked by moving the background slower, and the foreground faster\n    float den = cloudsDen(1.3*(p - 0.6*time*vSmoke));\n    return flareCol * den * pow(1.+length(p), -2.)*0.2;\n}\n\nfloat frontCloudsDen(vec2 p, float time)\n{\n    float den = cloudsDen(0.5*(p-2.*time*vSmoke));\n    return den;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = (fragCoord*2.-iResolution.xy)/iResolution.y;\n\n    \n    float time = iTime*SPEED;\n    \n    float camTime = time*2.;\n    vec2 q = p + vec2(fbm1D(camTime+50.), fbm1D(camTime+20.))*0.1 - vec2(0.7,0.1);\n    vec3 col = vec3(0.);\n    \n    col += backCloudsCol(q, time);\n    vec4 midClouds = midCloudsCol(q, time);\n    col = mix(col, midClouds.rgb, midClouds.a);\n    \n\tcol += flareColor(q, time, 0.);\n    col += smokeColor(q, time);\n    \n    col = mix(col, vec3(0.), 0.5*frontCloudsDen(q, time));\n    \n    // Lens flare\n    \n    col += bokeh(5.*q, time, 0.5) * 10.;\n    \n    col += flareColor(2.*p-q, time, 0.1) * 0.15;\n    col += bokeh(2.*p-q, time, 0.05) * 0.5;\n    col += bokeh2(3.*(4.*p-q), time, 0.2) * 0.5;\n    col += bokeh2(3.*(p-2.*q), time, 0.2) * 0.5;\n    col += bokeh2(5.*(3.*p-2.*q), time, 0.1) * 0.3;\n    col += bokeh2(5.*(q+p), time, 0.2) * 0.5;\n    col += flareColor(5.*(p+0.33*q), time, 0.2)*0.5;\n    \n    \n    //col = mix(col, 1.-4./27./(col*col), step(2./3.,col));\n    col = 1.-exp(-col);\n\n    col = sqrt(col);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}