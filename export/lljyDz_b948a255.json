{"ver":"0.1","info":{"id":"lljyDz","date":"1508287659","viewed":196,"name":"Amiga logo","username":"gigatron","description":"Fast draw... so no math or else here :)\nSure there is a fast way ... Fast and really logic code done by Fabrice ; ","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["oldschool","logo","amiga","demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fabrice alien code  \n#define Hue(h) vec4( .5+cos(6.28*(h)+vec3(0,-2,2)) , 1 )\n\n#define S(v,c,a) smoothstep( 2./iResolution.y, 0., abs(v-c)-a)\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 p = U / iResolution.xy - vec2(.15,0),\n         q = p*mat2(1,.5,1,-.5);\n    \n    O-=O;\n    \n    if (p.y>.1) {\n        if (p.y<.75)\n            O =  ( S(q.y,.14,.04) + S(q.y,.24,.04) )\n                  * Hue(   p.y *1.5 + iTime/1.5);\n        if (p.y<.35) \n            O += (1.-O.a)\n                  * ( S(q.x,.24,.04 )+S(q.x,.34,.04) )\n                  *  Hue(1.+p.y *1.5 - iTime/1.5);\n       }\n}\n\n\n\n/*\n\n// gigatron France ; basix human code !\nvec3 Hue(float hue){\n\tvec3 rgb = fract(hue + vec3(0.0, 2.0 / 3.0, 1.0 / 3.0));\n\trgb = abs(rgb * 2.0 - 1.0);\n\treturn clamp(rgb * 3.0 - 1.0, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n  \n    \n     p = p -vec2(0.15,0.0);\n    \n    \n     if (p.y>0.1 && p.y<0.35)\t{\n     if((p.x+p.y/2.)>0.20 && (p.x+p.y/2.)<0.28  || (p.x+p.y/2.)>0.30 && (p.x+p.y/2.)<0.38)\n         \n       fragColor = vec4(Hue(1.0+p.y *1.5 - iTime/2.), 1.0); // error here !!\n         \n         \n      }\n\t\n   if (p.y>0.1 && p.y<0.75)\t{\n\t\n   if((p.x-p.y/2.) >0.10 && (p.x-p.y/2.) <0.18  || (p.x-p.y/2.)>0.20 && (p.x-p.y/2.)<0.28)\n       \n     fragColor = vec4(Hue(p.y *1.5 + iTime/2.), 1.0);\n    \n   \n   }\n    \n   \n}\n*/","name":"Image","description":"","type":"image"}]}