{"ver":"0.1","info":{"id":"ddGBDw","date":"1698315962","viewed":65,"name":"CSSBattle#007 Leafy Trail","username":"Beowolve","description":"[url]https://cssbattle.dev/play/7[/url]\n\nThe shape of the rounded square couldn't be done with the rounded box function from iq, so I had to invent this new function to replicate the border-radius:x%0 behavior from CSS.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cssbattle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(v) smoothstep(ss,-ss,v)\n\n/**\n * p: position of the shape\n * size: length of one side of the underlaying box\n * radius: radius is 0 - 1.0 and will round the corners just like border-radius:<value>% 0 in html/css\n */\nfloat shape(vec2 p, float size, float radius) {   \n    vec2 d = abs(p)-size;\n    float box = length(max(d,0.)) + min(max(d.x,d.y),0.);\n\n    // radius of the circle depends on size and radius in %\n    float r = radius * size * 2.;\n\n    // simplified\n    vec2 discPos = (p.x < p.y ? p : -p) - vec2(r - size, size - r);\n    float disk = length(discPos) - r;   \n    disk = discPos.x<0. && discPos.y>0. ? disk : -1.;\n\n    // combine all parts\n    return max(box, disk);\n    \n    /*\n    // 1. top left of shape\n    vec2 discPos = p - vec2(r - size, size - r);\n    float disk1 = length(discPos) - r;   \n    disk1 = discPos.x<0. && discPos.y>0. ? disk1 : -1.;\n\n    // 2. bottom right of shape\n    vec2 discPos2 = p - vec2(size - r, r - size);\n    float disk2 = length(discPos2) - r;\n    disk2 = discPos2.x>0. && discPos2.y<0. ? disk2 : -1.;\n\n    // 3. combine all parts\n    return max(max(box, disk1), disk2);\n    */\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy) / iResolution.y;\n    vec2 p = uv;\n    float ss = .75/iResolution.y;\n    float size = .25;\n    float radius = .67;\n      \n    vec3 bg = vec3(.043,.14,.16);\n    vec3 c1 = vec3(.95,.68,.24);\n    vec3 c2 = vec3(.6,.51,.21);\n    vec3 c3 = vec3(.102,.263,.255);\n    \n    vec3 col = bg;\n    \n    col = mix(col, c3, S(shape(p + vec2(.16, 0), size, radius)));\n    col = mix(col, c2, S(shape(p, size, radius)));\n    col = mix(col, c1, S(shape(p + vec2(-.16, 0), size, radius)));\n       \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}