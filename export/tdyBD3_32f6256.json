{"ver":"0.1","info":{"id":"tdyBD3","date":"1608070958","viewed":70,"name":"quick julia","username":"tripzilch","description":"julia fractal in red and  blue","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["juliafractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord.xy - iResolution.xy)/iResolution.y;\n    vec2 mm = (2. * iMouse.xy - iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(1.);\n    vec2 Z = .8 * uv - vec2(.8, 0.);\n    //vec2 C = vec2(0.3, -1.2) + vec2(0.2, 0) * rot(iTime * 0.6);\n    vec2 C = 2. * mm;\n    float i;\n    for (i = 0.; i < 64.; i += 1.0) {\n        Z = vec2(Z.x * Z.x - Z.y * Z.y, 2. * Z.x * Z.y);\n        Z += C;\n        if (length(Z) > 2.) break;\n    }\n    \n    float a = .02 * (i + 4.);\n    col.gb -= max(0., Z.x) * a;\n    col.rg -= max(0., Z.y) * a;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}