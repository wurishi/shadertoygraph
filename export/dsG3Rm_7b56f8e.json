{"ver":"0.1","info":{"id":"dsG3Rm","date":"1678394220","viewed":178,"name":"Swirlpool","username":"incre_ment","description":"Just another experiment with modulo based repetition, rotation, and looping.\n\nGIF made at smoothstep.io","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["learning","vortex","whirlpool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rotation(angle) mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n\nfloat PI = 3.14159256;\nfloat TAU = 2.0*3.14159256;\n\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat circleSDF(vec2 coords, float rad, vec2 offset){\n  return (length(coords-offset) - rad)-.00;\n}\n\nfloat circleSDF2(vec2 coords, float rad, vec2 offset){\n  return abs(length(coords-offset) - rad)-.001;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   vec2 uv = ( fragCoord - .5* iResolution.xy ) /iResolution.y;\n   float a = (PI)*pow((1.4-pow(length(uv),.5)),3.5);\n   uv *= rotation(PI/3. + a*a/2.);   \n  \n   float d = pow(length(uv),1.5);\n   float modVal = .1;\n   \n   uv += vec2(-iTime*modVal, 0.);\n   uv = mod(uv,modVal);\n   \n   vec3 col = vec3(0.);\n   \n   float dd = map(d, 0., 1.25, .015, 0.);  \n   \n   float cSDF = circleSDF(uv, .04-pow(dd,.95), vec2(modVal/2.0,modVal/2.0));\n   col += 1.5*d*smoothstep(.006,-.006,cSDF);  \n   \n   float cSDF2 = circleSDF2(uv, .05-pow(dd,.95), vec2(modVal/2.0,modVal/2.0));\n   col += 1.5*d*smoothstep(.006,-.006,cSDF2); \n   fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}