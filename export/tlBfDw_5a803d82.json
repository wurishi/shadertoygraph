{"ver":"0.1","info":{"id":"tlBfDw","date":"1599065897","viewed":265,"name":"Color Hue Picker","username":"Patate1er","description":"A 2d color picker\nMaybe the beginning of a long journey for me","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","colorpicker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\n// Official HSV to RGB conversion \nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy/2.)/iResolution.y;\n    \n    //distance of center\n    float d = length(uv);\n    \n    //circle radius\n    float r1 = .5;\n    float w = .15;\n    float r2 = .15;\n    \n\t//circles\n    float c1 = 0.;\n    c1 = smoothstep(r1,r1-0.01,d) - smoothstep(r1-w, r1-w-0.01,d);\n    \n    float c2 = 0.;\n    c2 = smoothstep(r2,r2-0.01,d);\n    \n    //colors\n    float h = atan(-uv.x,-uv.y)/(PI*2.)+.5;\n    vec3 col_out = hsv2rgb(vec3(h,.7,.95));\n    \n    vec2 mouse = (iMouse.xy-iResolution.xy/2.)/iResolution.y;\n    float h2 = atan(-mouse.x,-mouse.y)/(PI*2.)+.5;\n    vec3 col_in = hsv2rgb(vec3(h2,.7,.95));\n    \n    //picker\n    float p = smoothstep(0.003 / d,0.002 / d,min(min(abs(h2-h),abs(h2-h+1.)),abs(h2-h-1.)));\n    p = max(p-c1,0.);\n    p *= d<r1-0.01?1.:0.;\n    \n    // Output to screen\n    fragColor = vec4(c1 * col_out + min(c2+p,1.) * col_in,1.0);\n}","name":"Image","description":"","type":"image"}]}