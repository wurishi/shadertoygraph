{"ver":"0.1","info":{"id":"wtS3Rw","date":"1558828601","viewed":141,"name":"TyeDie","username":"gilesruscoe","description":"Code is a mess but who caressssss","likes":3,"published":1,"flags":96,"usePreview":0,"tags":["circleofstuff"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4lXGRj","filepath":"https://soundcloud.com/holasoynetobaby/dimatik-monik-carroch-giratina-mandragora-remix-on-acid","previewfilepath":"https://soundcloud.com/holasoynetobaby/dimatik-monik-carroch-giratina-mandragora-remix-on-acid","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// All components are in the range [0…1], including hue.\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n// All components are in the range [0…1], including hue.\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 buf = texture(iChannel1, uv) * 0.8;\n    \n    uv = uv * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n    vec2 circleuv = uv;\n\n    uv = vec2(atan(uv.y, uv.x) * 3.14159265 * 2.0, length(uv));\n\tvec2 origUv = uv;\n\torigUv.y += origUv.x;\n    uv = uv * 0.5 + 0.5;\n    uv = fract(uv * 3.141592);\n    uv.y = fract(uv.y + iTime);\n    uv = uv * 2.0 - 1.0;\n    //polar\n    \n    float sound = texelFetch(iChannel0, ivec2(((origUv.x * 0.25) + 25.0) * 3.0, 0.0), 0).x * 0.5;\n    float sound2 = texelFetch(iChannel0, ivec2(12.0, 0.0), 0).x *0.75;\n    sound += sound2;\n\tsound = pow(sound, 5.0) * 3.0;\n    float triPattern = (uv.y * sign(uv.y)) + abs( uv.x * sound * sin(origUv.y * 1.0 + iTime)) * 0.5 + 0.5;\n    \n    \n    vec3 col = vec3(1.0, 1.0, 0.0);\n    col = rgb2hsv(col);\n    col.x *= origUv.x / 3.25;\n    col = hsv2rgb(col);\n    \n\tcol *= triPattern;\n    \n    float lc = length(circleuv + sin(origUv.x + iTime + sound * 2.0) * 0.025);\n    float circleMask = 1.0-smoothstep(lc - 0.2, lc + 0.2, 0.7);\n    col = mix(vec3(0.0), col, circleMask)* 0.25 + ((pow(sound2, 1.0) - (abs(sin(iTime * 3.8)) + 0.2) * 1.35) * 0.35);\n    float lc2 = length(circleuv);\n    float glowMask = 1.0-smoothstep(lc2 - 0.01, lc2 + 0.01 + sin(triPattern *5.0), 0.55);\n    col = mix(vec3(1.0), col, glowMask);\n    \n    // Output to screen\n    buf += vec4(col, 1.0) * 0.25 + ((pow(sound2, 1.0) - (abs(sin(iTime * 3.8)) + 0.2) * 1.35) * 0.15);\n    fragColor = buf;\n}","name":"Buffer A","description":"","type":"buffer"}]}