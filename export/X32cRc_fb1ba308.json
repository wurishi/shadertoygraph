{"ver":"0.1","info":{"id":"X32cRc","date":"1727515820","viewed":21,"name":"Simple Hexagon Function","username":"g_Bloxy","description":"A simple SDF function that renders a hexagon based on the central position, and the radius along the x-axis.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","hexagon","function"],"hasliked":0,"parentid":"MsVBWt","parentname":"single hexagon demonstration"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 s = vec2(1, 1.7320508);\n\nfloat hex(vec2 p, vec2 center, float radius, vec2 ratio){\n    p = abs((p - center) / ratio / (radius * 2.));\n    return max(dot(p, s*.5), p.x) - 1.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 ratio = vec2(iResolution.y / iResolution.x, 1.);\n    vec2 center = vec2(0.5);\n    float radius = 0.15;\n    \n    fragColor.r = smoothstep(.01, 0., hex(uv, center, radius, ratio));\n}","name":"Image","description":"","type":"image"}]}