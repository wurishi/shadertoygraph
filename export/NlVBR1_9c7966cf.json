{"ver":"0.1","info":{"id":"NlVBR1","date":"1664061168","viewed":120,"name":"SDFLess 3D?","username":"MrHAX00","description":"I did some tinkering around and made this without using any sdfs or ray marching!\nIt also can do boolean operations just like ray marching but I didn't bother making much just yet.\nI wanna get the basics sorted before making anything fancy.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","axistracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Apparently this is what raytracing is im a dum dum ignore the comments reffering to this as if it was something new lol\n\n//Everything gets mirrored from the origin so you'll have to get rid of the mirror you\n//dont want according to which side of the object you're at which will require you to multiply\n//axises by -1\n\n#define GroundHeight 0.\n#define MaxLightDistance 75.\n#define CamPos vec3(cos(iTime * 1.4), cos(iTime), iTime * 10.)//cos(iTime * 1.8))\n\nvec4 Ground(vec3 Ray)\n{\n    //Create 2 planes mirrored from the origin point\n    float AbsHeight = GroundHeight - CamPos.y;\n    vec3 Hit = Ray / abs(Ray.y) * AbsHeight;\n    //Flip axises depending on which side of the ground you're\n    Hit *= sign(AbsHeight);\n    //Add CamPos\n    Hit.xz += CamPos.xz; //y was used to create the plane so its skipped here\n    \n    //Send the mirrored version to strartosphere\n    if (sign(Ray.y) != sign(AbsHeight)) Hit *= 9999.;\n    \n    return vec4(Hit, 0); //.w is for material checks i'll add later on\n}\n\n//Textures\nvec3 GroundTexture(vec3 Hit)\n{\n    return vec3((.5 + mod(floor(Hit.x) + floor(Hit.z), 2.) * .4) * (1. - length(Hit - CamPos) / MaxLightDistance));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    \n    vec3 Ray = normalize(vec3(uv, 1.));\n    \n    vec4 HitData = Ground(Ray);\n    vec3 Hit = HitData.xyz;\n    float Material = HitData.w;\n    \n    vec3 col = GroundTexture(Hit);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}