{"ver":"0.1","info":{"id":"Xl2GD3","date":"1433111212","viewed":141,"name":"RayCastingTest","username":"tyleeer","description":"First Attempt at RayCasting","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// simple testing of ray marching\n\nfloat distanceToSphere(vec3 p, float r) {\n    return length(p)-r;   \n}\n\nfloat distanceToGroundPlane(vec3 p) {\n     return p.y+0.5;   \n}\n\nfloat distanceToObjects(vec3 p) {\n    float d1 = distanceToSphere(p,0.5*max(0.0,sin(3.1415*iTime)));\n\tfloat d2 = distanceToGroundPlane(p);\n    \n    return min(d1,d2);\n}\n\nvec4 rayCast(vec3 ro, vec3 rd) {\n    \n    vec4 color = vec4(1.0,1.0,1.0,1.0);\n \tvec4 color1 = vec4(0.0,1.0,0.2,1.0);\n    vec4 color2 = vec4(0.0,0.2,1.0,1.0);\n        \n    float t = 0.0;\n    const int N = 80; // iteration number\n    for (int i = 0; i < N; i++) {\n        vec3 p = ro+t*rd;\n     \tfloat d = distanceToObjects(p);\n        if (d < 0.01) {\n        \tcolor = mix(color1,color2,float(i)/float(N));\n            break;\n        }\n        else {\n            t += d;\n        }\n    }\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // convert pixel space to UV[0,1]x[0,1] space \n\tvec2 uv = 2.0*(fragCoord.xy/iResolution.xy)-1.0;\n    // this will preserve the aspect ratio in U\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //camera coordinate system\n    vec3 C_o = vec3(0.0,0.0,0.0);\n    vec3 C_x = vec3(1.0,0.0,0.0);\n    vec3 C_y = vec3(0.0,1.0,0.0);\n    vec3 C_z = vec3(0.0,0.0,1.0);\n    float f = 2.0;\n    \n    // camera Transformation\n    vec3 T = vec3(0,0,4);\n    mat3 R = mat3(1.0,0.0,0.0, // first column\n                  0.0,1.0,0.0, // second column\n                  0.0,0.0,1.0); // third column\n    \n    // Shoot a ray\n    vec3 ray_o = (uv[0]*C_x+uv[1]*C_y-f*C_z);\n    vec3 ray_dir = (normalize(ray_o));\n    \n    vec3 ray_o_g = R*ray_o+T;\n    vec3 ray_dir_g = R*ray_dir;\n    \n    fragColor = rayCast(ray_o_g,ray_dir_g);\n}","name":"","description":"","type":"image"}]}