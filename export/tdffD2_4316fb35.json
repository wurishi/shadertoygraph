{"ver":"0.1","info":{"id":"tdffD2","date":"1589090324","viewed":115,"name":"static emergence ","username":"gurudevbk","description":"bzzzzzt","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random","static","tangent","emergent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    float thickness = 0.1;\n    float t_usec = (iTime) * .0001;\n    vec2 origin = vec2(.2)+t_usec;\n    const float pi = 3.14159265;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y - 0.4;\n    uv.x -= .29;\n    \n    // rotation matrix for funzies\n    mat2 rot = mat2(sin(t_usec*10.), cos(t_usec*10.),\n                    -cos(t_usec*10.), sin(t_usec*10.));\n    \n    uv = rot * uv;\n    uv *= length(uv-origin);\n   \n    //uv = mat2(sin(t_usec), cos(t_usec), sin(t_usec), -cos(t_usec)) * uv;\n    float radius = .07*atan(uv.x*uv.y,pow(t_usec,3.))/pow(sin(t_usec),2.4);\n    \n    vec3 col = vec3(t_usec+.1, .5*(cos(iTime)*.5+.5),.5); //color \n    vec3 color_scale = length(uv-radius)*col.rgb;\n    \n    col.rgb = 0.5*sin(length(uv*radius)+col.rgb);\n    \n    col *= length(uv*origin)*color_scale;\n    \n    // Time varying pixel color\n  \t//col += 0.4*cos(iTime)+col;\n   \tcol.g += sin(iTime*.02);\n    col.r -= .2*cos(iTime*.02);\n    col.g += pow(sin(iTime*.2),2.);\n\n\n    col.g += atan(sin(iTime),abs(cos(iTime)));\n    \n    col.rgb += mix(col.rbg, col.bgr, length(uv-origin)/2.);\n    \n   // col.g *= 0.05;\n\n    // Output to screen\n    fragColor = vec4(col,1.-length(uv-origin));\n}","name":"Image","description":"","type":"image"}]}