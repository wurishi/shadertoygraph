{"ver":"0.1","info":{"id":"4tjXWc","date":"1446950560","viewed":212,"name":"Rotary Sander","username":"mplanck","description":"Wait 5 seconds for the sander to warm up.  Then start sanding... \nInspired by a day at TechShop","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["discard","sander"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"float g_time = 0.;\n\nvec2 polarize(vec2 uv)\n{\n    return vec2(length(uv), atan(uv.y, uv.x));\n}\n\nmat2 rot_mat2(float s, float o)\n{\n    return mat2(cos(s * g_time + o), sin(s * g_time + o), \n                    -sin(s * g_time + o), cos(s * g_time + o));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    g_time = iTime;\n    // for the preview thumbnail case - thanks to FabriceNeyret2\n    if (iResolution.y < 256.)\n    {\n        g_time -= 10.;\n    }\n    \n    vec2 center = vec2(0.5 * (iResolution.x/iResolution.y), -0.02);\n    vec2 uv = fragCoord.xy / iResolution.yy;\n    uv -= center;\n\n    vec2 nm = iMouse.xy / iResolution.yy;\n    nm -= center;\n    \n    vec2 pol_uv = polarize(uv);\n\n    // speed of rotary\n    float s = -100. * min(1., pow(g_time/5., 4.));\n    \n    if (pol_uv.x > 1.)\n    {\n        fragColor.rgb = 1. * vec3(exp(-3. * uv.y + .3));\n    }    \n    else if (g_time < 5.)\n    {        \n\t    // first wind up the rotary sander\n        vec3 scol = vec3(0.);        \n        float samples = 0.;\n        for (float i = 0.; i < .06283; i += .06283 * .1)\n        {\n            samples += 1.;\n            vec2 ruv = rot_mat2(s, s * i) * uv;\n\t\t    vec2 pol_ruv = polarize(ruv);\n    \t    scol += texture(iChannel0, vec2(1., .02) * pol_ruv).rgb;\n        }\n        \n        scol /= samples;\n        \n        vec3 spcol = texture(iChannel0, vec2(1., .0) * pol_uv).rgb;\n\t    fragColor.rgb = .6 * mix(scol, spcol, smoothstep(4., 5., g_time));\n        fragColor.a = 1.;\n    }\n    else \n    {\n        vec2 pol_nm = polarize(nm);\n        float r = abs(pol_uv.x - pol_nm.x);\n        float rs = max(.01, pol_nm.x * .05);\n        if (r < rs)\n        {\n\n            vec2 ruv = rot_mat2(s, 0.) * uv;    \n\t\t    vec2 pol_ruv = polarize(ruv);\n\n            vec2 texuv = vec2(1., .0) * pol_ruv + vec2(0., .1 * g_time);\n            // fade between two textures every 5 seconds\n         \tvec3 scol1 = texture(iChannel1, texuv).rgb;\n            vec3 scol2 = texture(iChannel0, texuv).rgb;\n            float t = mod(g_time, 10.);\n            vec3 scol = .8 * mix(scol1, scol2, smoothstep(4., 5., t) * smoothstep(10., 9., t));\n          \tfragColor.rgb = scol;\n        }\n        else\n        {\n            discard;\n        }\n    }\n\n}","name":"Image","description":"","type":"image"}]}