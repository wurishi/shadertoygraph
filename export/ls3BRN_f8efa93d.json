{"ver":"0.1","info":{"id":"ls3BRN","date":"1652784779","viewed":99,"name":"Outline Stuff","username":"Hoyong","description":"outline thing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265\n#define width 3. \n//It's looking good when width is 1 ~ 8\n//I know it's kinda straight dumb way\n\nfloat removeGreen(vec4 col)\n{\n    if ( col.r+0.01 + col.b+0.01 < col.g )\n    {\n        return 0.;\n    }else{return 1.;}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 apix = 1./iResolution.xy;\n    \n\tvec4 final = texture(iChannel0,uv);\n    final.rgb *= removeGreen(final);\n    \n    vec4 outline;\n    for ( int i = 0; i < 4; i ++ )\n    {\n        vec4 samplet = texture(iChannel0,uv + apix*width*vec2(cos(pi/2.0*float(i)),sin(pi/2.0*float(i))));\n        outline += samplet*removeGreen(samplet);\n    }\n    if ( final.rgb == vec3(0.0) )\n    {\n        vec3 colour = vec3(cos(iTime) + uv.y*uv.x,sin(iTime)+uv.y,0.5) * step(1.0, outline.a);\n        final.xyz = mix(final.xyz,colour,outline.a);\n    }\n    \n    // Output to screen\n    fragColor = final;\n}","name":"Image","description":"","type":"image"}]}