{"ver":"0.1","info":{"id":"fsSSz1","date":"1619616481","viewed":86,"name":"Triangle Pixel Filter","username":"NakedBowman","description":"My first actually useful shader, it creates a pixelated triangles effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pixel","filter","triangule","triangulate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n   //Vars to Export\n   float triangSize = 80.;\n   float distorsion = 3.;\n   float outline = 0.13;\n   bool mirror = true;//CHANGES TRIANGULE ANGLE\n   triangSize = (iResolution.y)/triangSize;\n   \n   //setup\n   vec2 uv = fragCoord/iResolution.xy;\n   vec2 triang = uv;\n   triang.x *= iResolution.x/iResolution.y;\n   \n \n   //Get the pixelSize \n   float pixelSize = iResolution.y / triangSize;\n   vec2 pixel = pixelSize/iResolution.xy;\n \n\n   triang*=triangSize;\n   triang = fract(triang);\n   \n   float border;\n          border = step(outline,triang.y)-step(1.-outline,triang.y);\n      border = (step(outline,triang.x)-step(1.-outline,triang.x))*border;\n   float d;\n   if(mirror){\n\n      border -= step(-outline*1.5,triang.x - triang.y) -  step(outline*1.5,triang.x - triang.y);\n       d = step((0.),(triang.x - triang.y));\n   }\n   else{\n   \n      border -= step(1.-outline*1.5,triang.x + triang.y) -  step(1.+outline*1.5,triang.x + triang.y);\n       d = step((0.5),(triang.x + triang.y)*0.5); \n   }\n   float f = 1. - d;\n \n   vec2 coord = pixel * floor(uv/pixel);\n  \n   //Triangle distorsion\n   vec2 top = vec2(coord.x,coord.y+distorsion/iResolution.y);\n   vec2 bot = vec2(coord.x,coord.y-distorsion/iResolution.y);\n\n    \n   //Pick color from pixel\n   vec4 fragColorTop = texture(iChannel0, vec2(clamp(top,0.,1.)));\n   vec4 fragColorBot = texture(iChannel0, vec2(clamp(bot,0.,1.)));\n   \n   \n   fragColorTop *= f*border;\n   fragColorBot *= d*border;\n   fragColor = fragColorTop + fragColorBot;\n\n}\n\n","name":"Image","description":"","type":"image"}]}