{"ver":"0.1","info":{"id":"4fjXWh","date":"1706267125","viewed":82,"name":"GreyFlower","username":"AlreadyTaken","description":":)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["math","gray","spirograph","hypocycloid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI=3.14159265\n\nbool isInsideHypocycloid(vec2 p, float r, float k, float angle, vec2 hui) {\n    // Shift the point to center the hypocycloid\n    p -= hui; //vec2(0.5);\n\n\n    // Rotate the point\n    float cosAngle = cos(angle);\n    float sinAngle = sin(angle);\n    p = vec2(p.x * cosAngle - p.y * sinAngle, p.x * sinAngle + p.y * cosAngle);\n\n    // Convert the point to polar coordinates\n    float theta = atan(p.y, p.x);\n    float ro = length(p);\n    \n\n\n    // Calculate the radius of the hypocycloid at the given angle\n    float r_hypocycloid = r * (k + cos((k) * theta));\n\n    // The point is inside the hypocycloid if its radial distance is less than\n    // the radius of the hypocycloid at the given angle\n    return ro <= r_hypocycloid;\n}\n\n\n//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float slowTime = iTime *0.5;\n    vec2 hui = vec2( ((sin(slowTime*0.125)+1.)/2.), ((cos(slowTime*0.5)+1.)/2.) );\n    vec2 ho = abs(hui.yx)/2.;\n    vec2 hey = vec2(ho.x-0.25*cos(slowTime), ho.y - (sin(slowTime)*0.125));\n    hui *= 0.75;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n// Define the colors\nvec3 black = palette(slowTime*0.125);\nblack.z = black.z < 0.5 ? 0.5 : black.z;\nblack.y = black.x = black.z;\nvec3 white = vec3(1.0, 1.0, 1.0);\nvec3 bluegrey = vec3((cos(iTime)+1.)/2., black.z, black.x);\nvec2 uv_reflected = vec2(uv.x*0.5+0.1 ,uv.y*0.5+0.1);\nvec2 uv_trace =vec2(uv.x-0.25, uv.y+cos(slowTime)*0.125);\nfloat k = 10.;\nfloat kk = 7.;\nfloat mk = 5.;\nvec3 curcol = white;\nint amnt =12;\nint cur = 1;\nfor(int ii=0; ii <=amnt; ii++){\n    float r= float(ii)/200.;\n    // Cycle between black, white, and red\n    vec3 color = black;\n    float time = ii%2 == 0 ? slowTime*0.25 : 0.25*slowTime*-1.;\n    \n\n        //vec2 uv_used = (ii % 2 == 0) ? uv : uv_reflected;\n    \n    if (isInsideHypocycloid(uv,r, k, time, hui) || \n        isInsideHypocycloid(uv_reflected,r, kk, time, ho) ||\n        isInsideHypocycloid(uv_trace, r, mk, time, hey)) {\n        curcol += color;\n        cur++;     \n    }\n    \n}\ncurcol /= float(amnt);// Output to screen\n\ncurcol = vec3(1.) -curcol;\n\nfragColor =  vec4(curcol,1.);\nif(int(fragCoord.y) % 2 == 0){\nfragColor = vec4(0.,0.,0.,1.);\n}\n\n\n\n\n}","name":"Image","description":"","type":"image"}]}