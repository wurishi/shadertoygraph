{"ver":"0.1","info":{"id":"mstSRN","date":"1679501007","viewed":80,"name":"static Circle pattern","username":"Gardner","description":"A pattern made from the intersection of two arrays of circles offset from each other.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circledimondarraypattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// circle sdf    \nfloat sdfCircle(vec2 uv, float r, vec2 offset) {\n    return length(uv) - r;\n}\n\n//limiterd array\nfloat oprepLim(vec2 p, float r, float c, vec2 l) {\n    vec2 q = p-c*clamp(round(p/c),-l,l);\n    return sdfCircle(q, r, vec2(.0));\n}\n\n//draw shapes\nvec3 drawScene(vec2 uv) {\n    vec3 col = vec3(0, 0, 1);\n    vec3 shapeCol = vec3(1, 0, 0);\n    float circle = sdfCircle(uv, 0.1, vec2(0));\n    float res; //result\n    float eps = 2.0 / iResolution.y;\n    \n    //Array of circles \n    float cArray1;\n    cArray1 = oprepLim(uv, 0.1, 0.2, vec2(4, 2));\n    cArray1 = smoothstep(-eps, eps, cArray1);\n    //second array of circles that is offset\n    float cArray2;\n    cArray2 = oprepLim(uv - .1, 0.1, 0.2, vec2(5, 3));\n    cArray2 = smoothstep(-eps, eps, cArray2);\n    \n    res = max(cArray1, cArray2);\n    \n    col = mix(shapeCol, col, res);\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = vec2(fragCoord-.5*iResolution.xy)/ iResolution.y;\n\n    vec3 col = drawScene(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}