{"ver":"0.1","info":{"id":"3ttSRB","date":"1581223846","viewed":70,"name":"MandelBrot and JuliaSet","username":"DaMastaCoda","description":"MandelBrot and JuliaSet","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rgf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy/2.0f)/iResolution.x*4.0f;\n    vec2 z = uv;\n    for(int i = 0; i < 1000; i++) {\n        z.xy = vec2(z.x*z.x-z.y*z.y,z.x*z.y*2.0f) + (iMouse.xy - iResolution.xy/2.0f)/iResolution.x*4.0f;\n    }\n    \n    \n    vec2 z2 = uv;\n    for(int i = 0; i < 1000; i++) {\n        z2.xy = vec2(z2.x*z2.x-z2.y*z2.y,z2.x*z2.y*2.0f) + uv;\n    }\n\n    // Time varying pixel color\n\tvec3 col = vec2(0.0f,0.0f).xxx;\n    \n    if(length(z) < 1000.0f) {\n        col.r = 1.0f;\n    }\n    if(length(z2) < 1000.0f) {\n        col.g = 1.0f;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}