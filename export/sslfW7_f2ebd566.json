{"ver":"0.1","info":{"id":"sslfW7","date":"1644959914","viewed":124,"name":"Simple Health Bar","username":"CFusion","description":"A really simple health bar","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["healthbar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//lerp from c1 to c2 based upon the hp percentage\n\nvec3 lerp(vec3 c1, vec3 c2, float value)\n{\n\treturn (c1 + value*(c2-c1));\n}\n\nvec3 barColorFromHP(float hp, vec2 uv, vec3 background) {\n    \n    //some variables or readibility\n    vec3 c1 = vec3(1,0,0); //RED\n    vec3 c2 = vec3(0,1,0); //GREEN\n\n    //the entire bar color is determined by the current hp percentage\n    vec3 healthColor = lerp(c1,c2,hp);\n\n    //visualize the hp with the x parameter\n    if(uv.x < hp) return healthColor;\n    \n    //otherwise it is the background\n    return background;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Adjust health by time and slow it down by a factor of 10\n    float hp = fract((iTime+8.0)/10.0); //start at 80% hp\n    vec3 black = vec3(0,0,0);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Derive the bar color from the health and use background=black\n    vec3 color3 = barColorFromHP(hp, uv, black);\n\n    // Output to screen\n    fragColor = vec4(color3,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}