{"ver":"0.1","info":{"id":"4l2SR3","date":"1518966863","viewed":105,"name":"test shapes ggg","username":"germangb","description":"hello world","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) +\n         length(max(d,0.0));\n}\n\nfloat sdTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat sdHexPrism( vec3 p, vec2 h )\n{\n    vec3 q = abs(p);\n    return max(q.z-h.y,max((q.x*0.866025+q.y*0.5),q.y)-h.x);\n}\n\nfloat field (vec3 p)\n{\n    float a = iTime*0.25;\n    float b = iTime*0.5;\n    mat2 rot = mat2(cos(a), sin(a), -sin(a), cos(a));\n    mat2 rot2 = mat2(cos(b), sin(b), -sin(b), cos(b));\n    p.xz *= rot;\n    p.zy *= rot2;\n    \n    float f0 = sdBox(p, vec3(0.8));\n    float f1 = length(p)-1.0;//sdTorus(p, vec2(1.0, 0.5));\n    float f2 = sdHexPrism(p, vec2(1.0, 0.25)) + sin(p.y*5.0)*0.25;\n\tfloat f3 = length(p.xy)-1.0;\n    float t = 8.0;\n    float f = mix(f0, mix(f2, f1, sin(a*4.)*0.5+0.5), cos(a*4.0)*0.5+0.5);\n    f = mix(f0, mix(f3, f2, 0.5), 0.75);\n    \n    return f;\n}\n\nvec3 grad (vec3 p)\n{\n \tvec2 eps = vec2(0.0001, 0.0);\n    return vec3(\n        field(p+eps.xyy) - field(p-eps.xyy),\n        field(p+eps.yxy) - field(p-eps.yxy),\n    \tfield(p+eps.yyx) - field(p-eps.yyx));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = vec4(sqrt(uv.y));\n    uv = uv*2.-1.;\n    uv.x *= iResolution.x/iResolution.y;\n\t\n    vec3 ro = vec3(uv, -1.75);\n    vec3 rd = normalize(vec3(uv, 1.0));\n    \n    float h = 0.0;\n    for (int i = 0; i < 128; ++i) {\n        vec3 p = ro+h*rd;\n        float eval = field(p);\n        \n        h += eval;\n        \n        if (eval < 0.001) {\n            vec3 normal = normalize(grad(p));\n            float dif = clamp(dot(normal, normalize(vec3(1.0, 1.0, -1.0))), 0.0, 1.0);\n            dif = mix(0.1, 1.0, dif);\n            fragColor = vec4(vec4(1.0, 0.6, 0.4, 1.0)*dif);\n            break;\n        }\n    }\n    \n    fragColor = sqrt(fragColor);\n}","name":"Image","description":"","type":"image"}]}