{"ver":"0.1","info":{"id":"X3X3Wf","date":"1707981520","viewed":74,"name":"OK Lab space visualizer","username":"StarlightSource","description":"LC projection of OK Lab","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["template"],"hasliked":0,"parentid":"WlGyDG","parentname":"oklab space visualizer 2"},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cbrt(float x) {\n    return x;\n}\n\nvec3 cbrt(vec3 v) {\n    return vec3(cbrt(v.x), cbrt(v.y), cbrt(v.z));\n}\n\nvec3 RGB_to_XYZ(vec3 RGB) {\n    mat3 M = mat3(\n        0.6369580483012914, 0.14461690358620832,  0.1688809751641721,\n        0.2627002120112671, 0.6779980715188708,   0.05930171646986196,\n        0.000000000000000,  0.028072693049087428, 1.060985057710791);\n    return RGB * M;\n}\n\nvec3 XYZ_to_RGB(vec3 XYZ) {\n    mat3 M = mat3(\n         1.716651187971268,  -0.355670783776392, -0.253366281373660,\n        -0.666684351832489,   1.616481236634939,  0.0157685458139111,\n         0.017639857445311,  -0.042770613257809,  0.942103121235474);\n    return XYZ * M;\n}\n\nvec3 XYZ_to_LMS(vec3 XYZ) {\n    mat3 M = mat3(\n        0.8190224379967030, 0.3619062600528904, -0.1288737815209879,\n        0.0329836539323885, 0.9292868615863434,  0.0361446663506424,\n        0.0481771893596242, 0.2642395317527308,  0.6335478284694309);\n    return XYZ * M;\n}\n\nvec3 LMS_to_XYZ(vec3 LMS) {\n    mat3 M = mat3(\n         1.2268798758459243, -0.5578149944602171,  0.2813910456659647,\n        -0.0405757452148008,  1.1122868032803170, -0.0717110580655164,\n        -0.0763729366746601, -0.4214933324022432,  1.5869240198367816);\n    return LMS * M;\n}\n\nvec3 LMS_to_Lab(vec3 LMS) {\n    mat3 M = mat3(\n        0.2104542683093140,  0.7936177747023054, -0.0040720430116193,\n        1.9779985324311684, -2.4285922420485799,  0.4505937096174110,\n        0.0259040424655478,  0.7827717124575296, -0.8086757549230774);\n\n    LMS = cbrt(LMS);\n\n    return LMS * M;\n}\n\nvec3 Lab_to_LMS(vec3 Lab) {\n    mat3 M = mat3(\n        1.0000000000000000,  0.3963377773761749,  0.2158037573099136,\n        1.0000000000000000, -0.1055613458156586, -0.0638541728258133,\n        1.0000000000000000, -0.0894841775298119, -1.2914855480194092);\n\n    Lab = Lab * M;\n\n    return pow(Lab, vec3(3.0));\n}\n\nvec3 RGB_to_Lab(vec3 color) {\n    color = RGB_to_XYZ(color);\n    color = XYZ_to_LMS(color);\n    color = LMS_to_Lab(color);\n    return color;\n}\n\nvec3 Lab_to_RGB(vec3 color) {\n    color = Lab_to_LMS(color);\n    color = LMS_to_XYZ(color);\n    color = XYZ_to_RGB(color);\n    return color;\n}\n\nconst float pi = 3.141592653589793;\nconst float epsilon = 1e-6;\n\nvec3 Lab_to_LCH(vec3 Lab) {\n    float a = Lab.y;\n    float b = Lab.z;\n\n    float C = length(vec2(a, b));\n    float H = 0.0;\n\n    if (!(abs(a) < epsilon && abs(b) < epsilon)) {\n        H = atan(b, a);\n        H = H * 180.0 / pi;\n        H = mod((mod(H, 360.0) + 360.0), 360.0);\n    }\n\n    return vec3(Lab.x, C, H);\n}\n\nvec3 LCH_to_Lab(vec3 LCH) {\n    // float C = max(LCH.y, 0.0);\n    float C = LCH.y;\n    float H = LCH.z * pi / 180.0;\n\n    float a = C * cos(H);\n    float b = C * sin(H);\n\n    return vec3(LCH.x, a, b);\n}\n\nmat3 BT2020_to_BT709 = mat3(\n     1.66049100210843540, -0.58764113878854950,  -0.072849863319884740,\n    -0.12455047452159074,  1.13289989712595960,  -0.008349422604369515,\n    -0.01815076335490526, -0.10057889800800737,   1.118729661362913000\n);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 lch = vec3(\n        fragCoord.y / iResolution.y,\n        (fragCoord.x / iResolution.x) - 0.5,\n        iMouse.x / iResolution.x * 360.0\n    );\n    bool inGamut;\n\n    fragColor = vec4(0.5, 0.5, 0.5, 1.0);\n\n    vec3 bt2020 = pow(Lab_to_RGB(LCH_to_Lab(lch)), vec3(1.0 / 2.4));\n    inGamut = bt2020 == clamp(bt2020, 0.0, 1.0);\n    if(inGamut) fragColor = vec4(bt2020, 1.0);\n\n    vec3 bt709 = pow(Lab_to_RGB(LCH_to_Lab(lch)) * BT2020_to_BT709, vec3(1.0 / 2.4));\n    inGamut = bt709 == clamp(bt709, 0.0, 1.0);\n    if(inGamut) fragColor = vec4(bt709, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}