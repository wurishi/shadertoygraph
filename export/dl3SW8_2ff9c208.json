{"ver":"0.1","info":{"id":"dl3SW8","date":"1685318780","viewed":88,"name":"Firepaper","username":"Quazi","description":"Messed up wave equation makes a cool effect that looks like burning paper. Click to light on fire. It's really just burning your GPU to make NaNs","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["fire","vfx"],"hasliked":0,"parentid":"wlGBR3","parentname":"wave pool"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 getColor(vec4 buff)\n{\n    vec4 col = vec4(0.0,0.0,0.0,0.0);\n    if(buff.r<0.){\n    col.b = (1.0-exp(0.01*buff.r));\n    col.g = (1.0-exp(1.0*buff.r));\n    col.r = (1.0-exp(0.00000001*buff.r));\n    }else{\n    col.b = (1.0-exp(-1.0*buff.r));\n    col.g = (1.0-exp(-0.01*buff.r));\n    col.r = (1.0-exp(-0.0000001*buff.r));\n    }\n    // Output to screen\n    return vec4(1.0,1.0,1.0, 0.0)-col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 uv = fragCoord;\n    // sample texture and output to screen\n    vec4 buffA = texture(iChannel0, (uv+vec2( 0, 0))/res);\n\n    // Time varying pixel color\n    // Output to screen\n    fragColor = getColor(buffA);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 p = fragCoord.xy;\n    vec2 res = iResolution.xy;\n    vec4 col = vec4(0.0,0.0,0.0,0.0);\n    vec4 pc = texture(iChannel0, p/res);\n    float v = (pc.r-pc.g)*(1.0/(1.0+0.05*pc.r));\n    vec4 L = -4.0*pc;\n    L += texture(iChannel0, (p+vec2( 1, 0))/res);\n    L += texture(iChannel0, (p+vec2(-1, 0))/res);\n    L += texture(iChannel0, (p+vec2( 0, 1))/res);\n    L += texture(iChannel0, (p+vec2( 0, -1))/res);   \n    col.r = pc.r+v*0.99+0.5*0.5*L.r; //max wave speed is 0.5 cell per step (0.5^2 in wave eq)\n    col.g = pc.r;//store prev state\n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float freq = 10.0;\n    vec2 p = fragCoord.xy;\n    vec2 res = iResolution.xy;\n    vec4 col = texture(iChannel0, p/res);\n    if(iMouse.z>0.){\n        vec2 m_p = p-iMouse.xy;\n        if(length(m_p) < 1.0){\n            col.r = -100.0;\n            col.g = 0.0;\n        }\n    }\n    if(iFrame%30 == 0){\n        vec2 m_p = p-iMouse.xy;\n        if(length(m_p) < 2.0){\n            col.r = -1.0;\n            col.g = 0.0;\n        }\n    }\n    fragColor = col;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"","name":"Common","description":"","type":"common"}]}