{"ver":"0.1","info":{"id":"WtfGzX","date":"1557046978","viewed":548,"name":"Hmmmmm Swirl (PewDiePie)","username":"benw","description":"Based on the classic effect by PewDiePie when he says hmmmm and his face swirls.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["swirl","spiral","hmmm","pewdiepie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265359;\n\nfloat time2Ramp(float durationSec, float startSec, float speedUp, float speedDown, bool loop);\n\n// WORKS IN NATRON\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  // Parameters\n  float effectOuterRadius = .6;\n  float effectInnerRadius = .3;\n  float speedWindUp = .4;\n  float speedWindDown = 1.0;\n  float durationSec = 3.0;\n  float startSec = 1.0;\n  float maxDegrees = 270.0;\n  bool loop = true;\n\n  // Calculated Values\n  float currentTwist = time2Ramp(durationSec, startSec, speedWindUp, speedWindDown, loop);\n   \n  float effectAngle = currentTwist * maxDegrees * PI / 180.0;\n  \n  vec2 center = iMouse.xy / iResolution.xy;\n  center = center == vec2(0., 0.) ? vec2(.5, .5) : center;\n  \n  vec2 uv = fragCoord.xy / iResolution.xy - center;\n  \n  float len = length(uv * vec2(iResolution.x / iResolution.y, 1.));\n  float angle = atan(uv.y, uv.x) \n  + effectAngle * smoothstep(effectOuterRadius, effectInnerRadius, len);\n  float radius = length(uv);\n\n  fragColor = texture(iChannel0, vec2(radius * cos(angle), radius * sin(angle)) + center);\n}\n\nfloat time2Ramp(float durationSec, float startSec, float speedUp, float speedDown, bool loop) {\n  // Calculated Values\n  float x = iTime - startSec;\n  if (loop) {\n    int timeMs = int(iTime * 1000.0);\n    int durationMs = int((startSec + durationSec) * 1000.0);\n    float timeLimitedSec = mod(float(timeMs),float(durationMs)) / 1000.0;\n    x = timeLimitedSec - startSec;\n  }\n    \n  float durationUp = 1.0 / speedUp;\n  float durationDown = 1.0 / speedDown;\n\n  float value = 0.0;\n  if (x <= 0.0) {\n    return 0.0;\n  } else if (x < durationUp) {\n    return sin(x*PI*speedUp - PI*0.5)*0.5 + 0.5;\n  } else if (x < (durationSec-durationDown)) {\n    return 1.0;\n  } else if (x < durationSec) {\n    return sin((x-durationSec)*PI*speedDown + PI*1.5)*0.5 + 0.5;\n  } else {\n    return 0.0;\n  }\n}\n","name":"Image","description":"","type":"image"}]}