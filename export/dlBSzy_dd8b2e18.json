{"ver":"0.1","info":{"id":"dlBSzy","date":"1676848916","viewed":82,"name":"Balls!","username":"AleDev","description":"Balls. (The shader is incomplete, but it still looks good)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["balls"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(vec3 p)\n{\n    float c = cos(length(p)*2.0);\n    float d = (p.y + 2.0);\n    d += (sin((c*0.15)+iTime) * 0.5 + 0.5);\n    d -= (sin(p.x*.2+iTime)+(cos(p.z*1.0+iTime))/1.25);\n    \n    vec3 w = vec3(mod(p.x,0.5)-0.25,d,mod(p.z,0.5)-0.25);\n    float sph = length(w) - 0.15;\n    \n\treturn sph;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 q = vec3((2.0*fragCoord-iResolution.xy)/iResolution.y,1.0),\n    o = vec3(0),\n    d = normalize(vec3(q.xy,4)); \n    \n    vec4 res = vec4(o+d,0);\n    for(float I=0.;I<1e2;I++)\n    {\n    \tfloat m = dist(res.xyz);\n        res += vec4(o+d,1)*m;\n        if(m < 1e-2 || res.w > 100.0) break;\n    }\n    \n    vec3 col = vec3(1,0.25,0.2);\n    float dif = max(dist(res.xyz+normalize(vec3(1,4,2))*1e-2) - dist(res.xyz),0.0)/1e-2;\n    col *= dif + vec3(0.2,0.2,0.76);\n    fragColor = vec4(mix(exp(-vec3(1,2,1)*q.y*q.y), col, 1.-smoothstep(100.0*.4, 100.0, res.w)),1);\n}","name":"Image","description":"","type":"image"}]}