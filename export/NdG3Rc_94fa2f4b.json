{"ver":"0.1","info":{"id":"NdG3Rc","date":"1631833364","viewed":440,"name":"Cosine Rainbow","username":"Krischan","description":"A single line function creates a nice RGB rainbow by just taking a value from 0...1\nOriginal by keyuliang https://www.shadertoy.com/view/Nt2XWc\n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["color","gradient","rgb","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rainbow(u) .5 + .5 * cos( atan(u.x,u.y) + 6.3 * iTime + vec3(0,23,21) )\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    U -= .5* iResolution.xy;\n    O = vec4(rainbow(U),1.0);\n}\n\n// original version\n/*\n#define rainbow(a) .5 + .5 * cos(6.283 * (a + vec3(0.,.33,.66)))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv.x+=length(uv);\n    \n    fragColor = vec4(rainbow(fract(atan(uv.x, uv.y) / 3.1415 + iTime)),1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}