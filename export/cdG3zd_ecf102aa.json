{"ver":"0.1","info":{"id":"cdG3zd","date":"1678974276","viewed":97,"name":"3D-isco","username":"GeoffL","description":"extended and partially corrected, added colour and 6 more points","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["3d","tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Adapted from:\n// \"ShaderToy Tutorial - CameraSystem\" \n// by Martijn Steinrucken aka BigWings/CountFrolic - 2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//\n// This shader is part of my ongoing tutorial series on how to ShaderToy\n// For an explanation go here: \n// https://www.youtube.com/watch?v=PBxuVlp7nuM\n\nfloat DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p, vec3 lookat) {\n\tfloat d = DistLine(ro, rd, p-lookat);\n    d = smoothstep(.1, .001, d/2.);\n    //d = smoothstep(.01, .0, d-.1);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime;\n\n    vec3 lookat = vec3(.5, .5, .5);\n\n    vec2 uv = (fragCoord -.5 * iResolution.xy)/iResolution.y;\n    \n\n    //vec3 ro = vec3(0., 3.*sin(t), -3.*cos(t));\n    //vec3 ro = vec3( 2.5*sin(t*2.), 2.*sin(t*2.), 2.*cos(t*2.));\n    vec3 ro = vec3( 3.*sin(t*4.), 1.5*sin(t), 2.*cos(t*4.));\n    \n    float zoom = 1.;\n    \n    vec3 f = normalize(ro);\n    vec3 r = normalize(cross(vec3(0., 1., 0.), f));\n    vec3 u = cross(f, r);\n    \n    vec3 c = ro + f*zoom;\n    vec3 i = c + uv.x*r + uv.y*u;\n    vec3 rd = i-ro;\n    \n    vec3 col = vec3 (0.);\n    \n    vec3 p = vec3(0., 0., 0.);\n    col += DrawPoint(ro, rd, p, lookat)*(p+.5);\n    p = vec3(0., 0., 1.);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(0., 1., 0.);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(0., 1., 1.);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(1., 0., 0.);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(1., 0., 1.);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(1., 1., 0.);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(1., 1., 1.);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(.5, .5, -.25);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(.5, .5, 1.25);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(.5, -.25, .5);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(.5, 1.25, .5);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(-.25, .5, .5);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n    p = vec3(1.25, .5, .5);\n    col += DrawPoint(ro, rd, p, lookat)*p;\n        \n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}