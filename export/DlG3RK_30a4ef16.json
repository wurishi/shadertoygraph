{"ver":"0.1","info":{"id":"DlG3RK","date":"1684247905","viewed":86,"name":"Supersampled Bayer Dithering","username":"Cesium_137","description":"kind of defeats the point of dithering, but at least you can get 256 colors from 4","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["dither","bayer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float n = 4.;\nmat4 colors = mat4(0.,8.,2.,10.,\n                   12.,4.,14.,6.,\n                   3.,11.,1.,9.,\n                   15.,7.,13.,5.) * (1./16.);\nfloat nearestColor(float color){\n    return round(color * n) / n;\n}\n\nfloat dither(float color, float range, float x, float y){\n    return nearestColor(color + range * (colors[int(mod(x,n))][int(mod(y,n))]-.5));\n}\n\nfloat supersamplex2(float color, float range, float x, float y){\n    return (dither(color, range, 2.*x, 2.*y) + dither(color, range, 2.*x + 1., 2.*y) + dither(color, range, 2.*x, 2.*y + 1.) + dither(color, range, 2.*x + 1., 2.*y + 1.)) / 4.;\n}\n\nfloat supersamplex4(float color, float range, float x, float y){\n    return (supersamplex2(color, range, 2.*x, 2.*y) + supersamplex2(color, range, 2.*x + 1., 2.*y) + supersamplex2(color, range, 2.*x, 2.*y + 1.) + supersamplex2(color, range, 2.*x + 1., 2.*y + 1.)) / 4.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float col = uv.x;\n    float r = 1./n;\n    float dithered = supersamplex4(col, r, fragCoord.x, fragCoord.y);\n    fragColor = vec4(vec3(dithered),1.0);\n}","name":"Image","description":"","type":"image"}]}