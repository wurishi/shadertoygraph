{"ver":"0.1","info":{"id":"Xst3zN","date":"1448408285","viewed":1322,"name":"Plasma Effect","username":"emilysquid","description":"Used a few tutorials and combined them","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test","plasma","water","fakereflection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//This was an experiment so I could learn some GLSL.\n//Thanks to vug for his tutorial!  I also referenced swellbastion to use a texture for noise. Thank you!\n\n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = vec2(fragCoord.xy / iResolution.xy); \n\t//aspect ratio\n    vec2 r =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    //coordinates [0,1]  origin is the bottom left\n    \n\t//animate\n    float t = iTime;\n    r = r * 8.0;\n\t\n //https://www.shadertoy.com/view/Md23DV   \n    //vertical lines\n    float v1 = sin(r.x +t);\n    //vertical waves\n    float v2 = sin(r.y +t);\n    //diagonal\n    float v3 = sin(r.x+r.y +t);\n    //rings\n    float v4 = sin(sqrt(r.x*r.x+r.y*r.y) +5.0*t);\n    //blobs\n\tfloat v = v1+v2+v3+v4;\n\t\n\tvec3 ret;\t\n\t// mix colors\n\tv *= 1.0;\n\tret = vec3(sin(v), sin(v+(.5+t)*PI), sin(v+1.0*PI)-.5);\n\t\t\t\n\tret = 0.5 + 0.5*ret;\n\t\n    vec3 pixel = ret;\n      \n    \n    if (p.y > 0.5) { // if top half of screen\n        p.y -= 0.5;\n        fragColor = vec4(pixel, 1.0);\n    }\n //https://www.shadertoy.com/view/ld33RN#   \n    else { // if bottom half of screen\n                p.y = 0.5 - p.y;\n        \n        vec2 noiseStretch = vec2(10000.0, 1500.0);\n        float distanceRiverTraveled = t * -0.02;\n        \n        vec2 noisePosition = fragCoord / noiseStretch;\n        noisePosition.x += distanceRiverTraveled;\n        \n    \tfloat noise = texture(iChannel0, noisePosition).r;\n    \n    \tfloat xMove = noise * 0.15 - 0.075;\n    \n    \tvec2 imagePosition = vec2(\n    \t\tp.x + xMove,\n        \tp.y\n    \t);\n        \n        pixel.x += noise;\n        pixel.y +=  noise;\n        pixel.z += v1 *noise;\n        vec4 image = vec4(pixel, imagePosition);\n\n    \n        float waterBrightness = 0.95;\n\t\tfragColor = image * waterBrightness;\n\n        \n    }\n\n}","name":"","description":"","type":"image"}]}