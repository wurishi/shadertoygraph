{"ver":"0.1","info":{"id":"M3jSW1","date":"1710650426","viewed":50,"name":"Simple Clouds + Simple Water","username":"UnknownRori","description":"Kurai Project Stage 1 background","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","cloud","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Scale for the cloud\nconst float SCALE = 2.;\n\n// https://www.shadertoy.com/view/lsf3WH\n// -----------------------------------\n\n\nfloat hash(vec2 p)  // replace this by something better\n{\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n    vec2 u = f*f*f*(f*(f*6.0-15.0)+10.0);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// -----------------------------------------------\n\n// Using noise coming from\n// https://www.shadertoy.com/view/lsf3WH\nvec3 clouds(vec2 uv, vec2 intensity) {\n    uv.y += iTime * 0.25;\n\t\n\tfloat f = 0.0;\n\n\n    uv *= SCALE;\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n    f  = 0.5000*noise( uv ); uv = m*uv;\n    f += 0.2500*noise( uv ); uv = m*uv;\n    f += 0.1250*noise( uv ); uv = m*uv;\n    f += 0.0625*noise( uv ); uv = m*uv;\n\n\tf = 0.2 + 0.5*f;\n    return vec3(f);\n}\n\nvec4 gaussianBlur(sampler2D image, lowp vec2 uv, lowp vec2 resolution, lowp vec2 direction) {\n    vec4 color = vec4(0.0);\n    vec2 off1 = vec2(1.3846153846) * direction;\n    vec2 off2 = vec2(3.2307692308) * direction;\n    color += texture(image, uv) * 0.2270270270;\n    color += texture(image, uv + (off1 / resolution)) * 0.3162162162;\n    color += texture(image, uv - (off1 / resolution)) * 0.3162162162;\n    color += texture(image, uv + (off2 / resolution)) * 0.0702702703;\n    color += texture(image, uv - (off2 / resolution)) * 0.0702702703;\n    return color;\n}\n\n// Thank you for the one who made this\n// https://www.shadertoy.com/view/wt2GRt\nvec4 water(vec4 texture_color, vec2 uv) {    \n    vec4 k = vec4(iTime)*0.8;\n\tk.xy = uv * 7.0;\n    float val1 = length(0.5-fract(k.xyw*=mat3(vec3(-2.0,-1.0,0.0), vec3(3.0,-1.0,1.0), vec3(1.0,-1.0,-1.0))*0.5));\n    float val2 = length(0.5-fract(k.xyw*=mat3(vec3(-2.0,-1.0,0.0), vec3(3.0,-1.0,1.0), vec3(1.0,-1.0,-1.0))*0.2));\n    float val3 = length(0.5-fract(k.xyw*=mat3(vec3(-2.0,-1.0,0.0), vec3(3.0,-1.0,1.0), vec3(1.0,-1.0,-1.0))*0.5));\n    vec4 color = vec4 ( pow(min(min(val1,val2),val3), 7.0) * 3.0)+texture_color;\n    \n    return color;\n}\n\nfloat snow(vec2 uv,float scale)\n{\n\tfloat w=smoothstep(1.,0.,-uv.y*(scale/10.));if(w<.1)return 0.;\n\tuv+=iTime/scale;uv.y+=iTime*2./scale;uv.x+=sin(uv.y+iTime*.5)/scale;\n\tuv*=scale;vec2 s=floor(uv),f=fract(uv),p;float k=3.,d;\n\tp=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(7,3,6,5))*5.))-f;d=length(p);k=min(d,k);\n\tk=smoothstep(0.,k,sin(f.x+f.y)*0.01);\n    \treturn k*w;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n    vec2 uvSnow = (gl_FragCoord.xy * 2.-iResolution.xy)/min(iResolution.x,iResolution.y);\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1);\n    vec4 water_color = vec4(0.002156862745098, 0.2627450980392157, 0.5333333333333333, 1.0);\n    \n    vec4 waterFloor = gaussianBlur(iChannel0, uv, iResolution.xy, vec2(3.5));\n    vec4 waterTexture = mix(water_color, waterFloor, vec4(0.25));\n    \n    vec4 final;\n    // final =  * 0.4;\n    final += water(waterTexture, uv);\n    final += vec4(clouds(-uv, vec2(0.3, 0.5)), 1.);\n    final += vec4(clouds(-uv + 6., vec2(0.3, 0.5)), 1.);\n    final += vec4(clouds(-uv + 12., vec2(0.3, 0.5)), 1.);\n    final += vec4(vec3(snow(uvSnow, 4.)), 1.); // It's a bit too slow\n    final += vec4(vec3(snow(uvSnow + 1., 3.)), 1.); // It's a bit too slow\n    final = mix(final, vec4(0.), vec4(0.7));\n\t\n\tfragColor = final;\n}","name":"Image","description":"","type":"image"}]}