{"ver":"0.1","info":{"id":"wltGRl","date":"1577290194","viewed":357,"name":"Oled display filter","username":"alegr37","description":"This is created to see how the look some images on small oled's display.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["oled"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    fragColor = texture(iChannel0, uv);\n}\n\n// FILTER CODE STARTS HERE\n// FEEL FREE TO COPY IT TO THE END OF ANOTHER SHADERTOYS.\n// 0 or 1\n#define OLED_BILINEAR 0\n// rgb, bgr etc...\n#define OLED_COLOR_DIRECTION bgr\n// x or y\n#define OLED_DIRECTION x\n// Display size\n#define OLED_DISPLAY vec2(96., 64.)\nvoid OledFilter(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 display = OLED_DISPLAY;\n    vec2 display_coord = display * fragCoord / iResolution.xy;\n    vec2 uv = floor(display_coord);\n    vec2 upscale = iResolution.xy / display;\n\n#if OLED_BILINEAR\n    vec4 ltc, rtc, rbc, lbc, w = vec4(.5);\n    mainImage(ltc, uv * upscale);\n    mainImage(rtc, (uv + vec2(0., 1.)) * upscale);\n    mainImage(rbc, (uv + vec2(1., 0.)) * upscale);\n    mainImage(lbc, (uv + vec2(1., 1.)) * upscale);\n    vec4 color = mix(mix(ltc, rtc, w), mix(rbc, lbc, w), w);\n#else\n    vec4 color;\n    mainImage(color, (uv + vec2(0.5)) * upscale);\n#endif\n    float pixel = fract(display_coord.OLED_DIRECTION);\n    vec3 rgb_f = vec3(1./3., 2./3., 1.);\n    rgb_f = rgb_f.OLED_COLOR_DIRECTION;\n    if (pixel < rgb_f.r && pixel >= rgb_f.r - 1./3.) {\n        color = vec4(color.r, .0, .0, color.a);\n    } else if (pixel < rgb_f.g && pixel >= rgb_f.g - 1./3.) {\n        color = vec4(.0, color.g, .0, color.a);\n    } else if (pixel < rgb_f.b && pixel >= rgb_f.b - 1./3.) {\n        color = vec4(.0, .0, color.b, color.a);\n    }\n    fragColor = color;\n}\n\n #define mainImage OledFilter\n// END OF FILTER","name":"Image","description":"","type":"image"}]}