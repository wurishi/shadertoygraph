{"ver":"0.1","info":{"id":"dty3DG","date":"1684596099","viewed":127,"name":"trees.","username":"_sphinx","description":"https://www.youtube.com/watch?v=LLZPnh_LK8c&list=PLGmrMu-IwbgsVjE7SAtFaWyhZXyBjJNnO&index=4","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["trees"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n\nfloat taperBox(vec2 p, float wb, float wt, float yb, float yt, float blur)\n{\n    float m = S(-blur, blur, p.y-yb);\n    m *= S(blur, -blur, p.y-yt);\n    \n    p.x = abs(p.x);\n    float w = mix(wb, wt, (p.y-yb)/(yt-yb));\n    m *= S(blur, -blur, p.x-w);\n    return m;\n}\n\nvec4 Tree(vec2 uv, float x, float y, vec3 col, float blur)\n{\n    uv -= vec2(x,y);\n    \n    float m = taperBox(uv, 0.03, 0.03, -0.125, 0.25, blur); // trunk\n    m += taperBox(uv, 0.2, 0.1, 0.25, 0.5, blur); // bottom\n    m += taperBox(uv, 0.15, 0.05, 0.5, 0.75, blur); // middle\n    m += taperBox(uv, 0.1, 0., 0.75, 1., blur); // top\n    \n    float shadow = taperBox(uv-vec2(0.2,0.), 0.1, 0.5, 0.15, 0.25, blur);\n    shadow += taperBox(uv+vec2(0.3,0.), 0.1, 0.5, 0.4, 0.5, blur);\n    shadow += taperBox(uv-vec2(0.4,0.), 0.1, 0.5, 0.65, 0.75, blur);\n    col -= shadow*0.8;\n\n    return vec4(col, m);\n}\n\nfloat getHeight(float x)\n{\n    return sin(x*1.7182818284)+sin(x);\n}\n\nvec4 Layer(vec2 uv, float blur)\n{\n    vec4 col = vec4(0);\n    \n    float id = floor(uv.x);\n    float n = fract(sin(dot(vec2(id, 1), vec2(12.9898,78.233)))*46758.5453123);\n    float x = n*.3;\n    float y = getHeight(uv.x)*0.4;\n    \n    float ground = S(blur, -blur, uv.y+y);\n    col += ground;\n    y = getHeight(id+.5+x)*0.4;\n    \n    uv.x = fract(uv.x)-0.5;\n    vec4 tree = Tree(uv*vec2(1., 1.+n*.2), x, -y, vec3(1), blur);\n    \n    col = mix(col, tree, tree.a);\n    col.a = max(ground, tree.a); \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float t = iTime*.2;\n    vec2 M = iMouse.xy/iResolution.xy*2.-1.;\n    // uv *= 5.;\n    \n    float blur = 0.01;\n    vec4 col = vec4(0);\n    \n    float stars = fract(sin(dot(uv, vec2(12.9898,78.233)))*46758.5453123);\n    col += pow(stars,200.);\n    \n    float moon = S(0.005, -0.005, length(uv-vec2(0,0.1))-0.2);\n    col *= 1.-moon;\n    moon *= S(0.2, -0.2, length(uv-vec2(-0.1,0.1))-0.2);\n    col = mix(col, vec4(.631, .2, .08, moon), moon);\n    \n    vec4 layer;\n    \n    for (float i; i<1.; i+= 1./20.)\n    {\n        float scale = mix(30., 1., i);\n        blur = mix(.1, .005, i);\n        layer=Layer(uv*scale+vec2(t+i*100.,i)-M, blur);\n        layer.rgb *= vec3(1.,.8,.8)*(1.-i);\n        \n        col = mix(col, layer, layer.a);\n    }\n    layer=Layer(uv+vec2(t,0.5)-M, 0.07);\n    col = mix(col, layer*.1, layer.a);\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}