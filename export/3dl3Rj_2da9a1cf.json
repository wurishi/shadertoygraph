{"ver":"0.1","info":{"id":"3dl3Rj","date":"1546890172","viewed":683,"name":"Voxels from volume texture","username":"jolle","description":"Tracing cubes from 3d texture with timed bias.\n\nCan use mouse to add rotation offset.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["3d","volume","raymarch","voxel","cubes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define MULTISAMPLES 2 // Max 4\n\nconst float pi = 3.1415926536;\nconst float texture_size = 32.0;\n\nvec3 light_dir;\nvec3 eye;\nfloat threshold;\n\nfloat sq(vec3 x) { return dot(x, x); }\n\nvec3 background(vec3 d)\n{\n    return vec3(mix(0.8, 1.0, d.y * 0.5 + 0.5));\n}\n\nbool voxel(vec3 vp)\n{\n    if (vp.y < texture_size && sq(vp - eye) > 4.0)\n\t\treturn textureLod(iChannel0, (vp + 0.5) / texture_size, 0.0).x > threshold;\n    return false;\n}\n\nstruct TraceResult\n{\n    vec3 p;\n    vec3 n;\n    bool hit;\n};\n\nTraceResult traceVoxel(vec3 p, vec3 d, float dist)\n{\n    vec3 id = 1.0 / d;\n    vec3 sd = sign(d);\n    vec3 nd = max(-sd, 0.0);\n    vec3 vp = floor(p) - nd * vec3(equal(floor(p), p));\n\n    TraceResult r;\n\n    for (int i = 0; i < 96 && dist > 0.0; ++i)\n    {\n        if (voxel(vp))\n        {\n\t\t\tr.p = p;\n\t\t\tr.hit = true;\n\t\t\treturn r;\n        }\n\n        vec3 n = mix(floor(p + 1.0), ceil(p - 1.0), nd);\n\t\tvec3 ls = (n - p) * id;\n\t\tfloat l = min(min(ls.x, ls.y), ls.z);\n\t\tvec3 a = vec3(equal(vec3(l), ls));\n\n        p = mix(p + d * l, n, a);\n        vp += sd * a;\n        r.n = -sd * a;\n        dist -= l;\n    }\n\n    r.hit = false;\n    return r;\n}\n\nvec3 ray(vec3 p, vec3 d)\n{\n    float distance = 65.0;\n    TraceResult r = traceVoxel(p, d, distance);\n    if (r.hit)\n    {\n        float lf = max(0.0, dot(r.n, light_dir));\n        if (lf > 0.0)\n        {            \n        \tTraceResult rl = traceVoxel(r.p, light_dir, 60.0);\n            if (rl.hit)\n            {\n                lf = 0.0;\n            }\n        }\n        vec3 lc = vec3(lf * 0.5 + 0.5);\n        vec3 nc = (r.n * 0.5 + 1.0);\n        vec3 fc = background(d);\n        float ff = length(r.p - p) / distance;\n        return mix(lc * nc, fc, ff);\n    }\n    return background(d);\n}\n\nfloat bias(float base)\n{\n    return 0.975 + 0.02 * cos(base + 1.2 + iTime * 0.17);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    threshold = bias(0.0);\n    light_dir = normalize(vec3(cos(iTime * 0.35), 2.0, sin(iTime * 0.35)));\n\n    float eyedistance = 30.0;\n    float zoom = 2.2;\n\n    float ry = -iMouse.x / iResolution.x * pi * 2.0 + iTime * 0.2 + 0.4;\n    float rx = pi * (1.1 + 0.4 * cos(3.7 + iTime * 0.07)) + iMouse.y / iResolution.y * pi;\n\n    vec4 cs = cos(vec4(ry, rx, ry - pi * 0.5, rx - pi * 0.5));\n    vec3 forward = -vec3(cs.x * cs.y, cs.w, cs.z * cs.y);\n\tvec3 up = vec3(cs.x * cs.w, -cs.y, cs.z * cs.w);\n\tvec3 left = cross(up, forward);\n    eye = -forward * eyedistance + vec3(0.01);\n\n\tvec2 uv = zoom * (fragCoord.xy - iResolution.xy * 0.5) / iResolution.x;\n    vec3 dir = normalize(vec3(forward + uv.y * up + uv.x * left));    \n    vec3 color = ray(eye, dir);\n#if MULTISAMPLES > 1\n    vec2 uvh = zoom * vec2(0.5) / iResolution.x;\n    threshold = bias(0.01);\n    color += ray(eye, normalize(forward + (uv.y + uvh.y) * up + (uv.x + uvh.x) * left));\n#if MULTISAMPLES > 2\n    threshold = bias(0.005);\n    color += ray(eye, normalize(forward + (uv.y + uvh.y) * up  + uv.x * left));\n#if MULTISAMPLES > 3\n    threshold = bias(0.015);\n    color += ray(eye, normalize(forward + uv.y * up + (uv.x + uvh.x) * left));\n#endif\n#endif\n    color /= float(MULTISAMPLES);\n#endif\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}