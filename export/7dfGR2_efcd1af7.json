{"ver":"0.1","info":{"id":"7dfGR2","date":"1616253939","viewed":113,"name":"koch curve image","username":"Angramme","description":"A simple koch curve using uv coordinates with image sampling","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["curve","koch","kochcurve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\n#define PI 3.14159265359\n\n#define R .001\n#define EPS .001\n\n#define IT 5\n#define A (PI/2.8)\n\n#define B ((PI-A)*.5)\n#define L (.5/(cos(A)+1.))\n\n#define R_s (R*pow(1./L, float(IT)))\n#define EPS_s (EPS*pow(1./L, float(IT)))\n\n#define ROT mat2(cos(A), sin(A), -sin(A), cos(A))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy*2.-iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    uv *= .4;\n    \n    uv.xy = abs(uv.xy);\n\n    for(int i=0; i<IT; i++){\n\n        uv.x = abs(uv.x);\n\n        if(uv.y > uv.x*tan(B)-L*cos(A)*tan(B)){\n            uv.xy -= vec2(.5*L*cos(A), .5*L*sin(A));\n            uv.xy = ROT*uv.xy;\n            uv.xy *= 1./L;\n        }else{\n            uv.x -= L*cos(A)+.5*L;\n            uv.xy *= 1./L;\n        }\n    }\n\n    //col.r += smoothstep(R_s+EPS_s, R_s-EPS_s, distance(uv.xy, vec2(clamp(uv.x, -.5, .5), 0.)));\n\n    col.rgb += texture(iChannel0, .04*(uv.xy-.5+vec2(0, iTime*1.5))).rgb;\n    if(uv.y < 0.){\n        col *= .4;\n    }else{\n        col *= max(0., 25.-abs(uv.y))/25.+.3;\n    }\n    //col *= uv.y < 0. ? .4 : 1.;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}