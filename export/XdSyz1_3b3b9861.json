{"ver":"0.1","info":{"id":"XdSyz1","date":"1490829414","viewed":306,"name":"Abstract paintings","username":"LukeRissacher","description":"A statement about form, texture and the human condition.","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","fineart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The result of some late-night noodling based on Shane's intriguing One Tweet Celluar Pattern: \n// https://www.shadertoy.com/view/MdKXDD\n// Plus IQ's cosine palette tricks: https://iquilezles.org/articles/palettes\n\n// Fabrice's rot2() transposed for p *= mat2 usage\nmat2 Rot2T(float a){ vec2 v = sin(vec2(1.570796, 0) + a); return mat2(v.x, -v.y, v.y, v.x); }\n\n// No-longer-one-tweet cellular pattern.\nfloat Cells(vec2 p) {\n    float len = 99.0;\n    for (int i = 0; i < 3; i++) {\n    \tp *= Rot2T(0.43);\n    \tlen = min(len, length(fract(p) - 0.5));\n        p *= 0.85;\n    }\n    return 2.0 * len;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    const float INTERVAL = 3.5;\n    float t = iTime / INTERVAL;\n    float seed = 8.2 + 0.8 * floor(t);\n    //seed = 1000000.0 + 0.8 * floor(t); // precision-error Mondrian version :)  \n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    \n    // Border region: white with janky drop shadow\n    const vec2 EDGE = vec2(1.45, 0.85);\n    if (abs(uv.x) > EDGE.x || abs(uv.y) > EDGE.y) {\n        vec2 delta = 6.0 * clamp(abs(vec2(1.06, 1.1) * uv + vec2(-0.04, 0.02)) - EDGE, 0.0, 1.0);\n        float shadow = mix(0.55, 1.0, pow(length(delta), 0.7));\n        fragColor.rgb = vec3(shadow);\n    }\n    // Otherwise: colored voronoi FBM\n    else {\n        vec2 p = uv + vec2(10.0 * seed, 0.0);\n        float val = 0.56 * Cells(p) + 0.44 * Cells(1.3 * p + vec2(10.0, 0.0));\n        uv *= Rot2T(0.3);\n        val += 0.05 * texture(iChannel0, uv).r;\n        fragColor.rgb = 0.5 + 0.5 * cos(6.28 * (seed * vec3(1.0, 0.12, 1.08) + val));\n    }\n    \n    // Fade to white between \"slides\"\n    const float TRANSITION = 0.1;\n    float galleryPos = fract(t);\n    float blend = smoothstep(0.0, TRANSITION, galleryPos) * smoothstep(0.0, TRANSITION, 1.0 - galleryPos);\n    fragColor.rgb = mix(vec3(1.0), fragColor.rgb, blend);\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}