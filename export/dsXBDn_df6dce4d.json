{"ver":"0.1","info":{"id":"dsXBDn","date":"1688612235","viewed":57,"name":"voromoire","username":"graygoose","description":"playing with voronoi stuff","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","voronoi","interference","frequency"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash2(vec2 p) {\n    return fract(sin(vec2(dot(p, vec2(1352.1, 2352.53)), \n                          dot(p, vec2(1242.35, 5531.3))))\n                                        * 43758.5453123);\n}\n\nvec4 voronoi(vec2 x) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    vec4 res = 4.*vec4(vec2(abs(sin(iTime*.1))), vec2(abs(cos(iTime*.15))));\n\n    for (int j = -1; j <= 1; j++) {\n        for (int i = -1; i <= 1; i++) {\n            vec2 b = vec2(i, j);\n            vec2 r = vec2(b) - f + hash2(p + b); // change - to * for menagerie\n            float d = dot(r, r);\n\n            if (d < res.x)\n                res.y = res.x,\n                res.x = d;\n            else if (d < res.y)\n                res.y = d;\n        }\n    }\n    return res / sqrt(res);\n}\n\nvoid mainImage(out vec4 O, in vec2 U) {\n    vec2 p = (1. + (U / iResolution.xy - 1.) * 4.0);\n    vec4 w = vec4(p, 0.0, 0.0), d;\n\n    for (int i = 0; i < 128; i++) {\n        d = voronoi(p);\n        w += vec4(p * (d.x - d.y) * sin(d.z) * cos(d.w), d.xy);\n    }\n\n    O = vec4(0.5 + 0.5 * cos(w.y - 0.0023 * sin(w.x + w.z)),\n             0.5 + 0.5 * sin(w.x + 0.0035 * cos(w.y + w.w)),\n             0.5 + 0.5 * cos(w.x + w.z) * sin(w.y + w.w),\n             1.0);\n}\n","name":"Image","description":"","type":"image"}]}