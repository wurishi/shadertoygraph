{"ver":"0.1","info":{"id":"wdySDV","date":"1574999846","viewed":186,"name":"CircleShadowCast2D","username":"yp3y5akh0v","description":"Casting shadows with circles","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["glsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_RAY_TRACE_STEPS 20\n#define EPS 0.0001\n#define N 5\n\nstruct Circle {\n    vec2 pos;\n    float r;\n    vec3 color;\n};\n\nCircle obstacles[N];\nCircle light;\n    \nfloat CircleSDF(vec2 pos, Circle c) {\n    return length(pos - c.pos) - c.r;\n}\n\nfloat SceneSDF(vec2 pos) {\n    float result = CircleSDF(pos, obstacles[0]);\n    for (int i = 1; i < N; i++) {\n        result = min(result, CircleSDF(pos, obstacles[i]));\n    }\n    return result;\n}\n\nfloat ShadowCasting(vec2 pos) {\n    vec2 resultPos = pos;\n    float resultDist = 0.;\n    vec2 dir = normalize(light.pos - pos);\n    for (int i = 0; i < MAX_RAY_TRACE_STEPS; i++) {\n        float d = SceneSDF(resultPos);\n        if (abs(d) < EPS) {\n            break;\n        }\n        resultPos += d * dir;\n        resultDist += abs(d);\n    }\n    return resultDist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.y;\n    vec3 c = vec3(0.);\n\n    light = Circle(vec2(0.5), 0.05, vec3(1.));\n    light.pos.x += cos(iTime) / 2.5;\n\n    vec2 lightToUV = uv - light.pos;\n    c += light.r / pow(length(lightToUV), 0.8);\n\n    obstacles[0] = Circle(iMouse.xy / iResolution.y, 0.03, vec3(1., 0, 0));\n    obstacles[1] = Circle(vec2(0.3, 0.3), 0.04, vec3(0.4, 0.3, 0.7));\n    obstacles[2] = Circle(vec2(0.7, 0.2), 0.1, vec3(1., 0.7, 0));\n    obstacles[3] = Circle(vec2(0.6, 0.7), 0.02, vec3(1., 0, 1));\n    obstacles[4] = Circle(vec2(0.2, 0.7), 0.06, vec3(0., 0.5, 1.));\n    \n    for (int i = 0; i < N; i++) {\n        c += length(uv - obstacles[i].pos) < obstacles[i].r ? \n            obstacles[i].color :\n            vec3(0);\n    }\n\n    float surfDist = ShadowCasting(uv);\n    if (surfDist < length(lightToUV) - EPS) {\n        c *= 0.5;\n    }\n\n    fragColor = vec4(c, 1.);    \n}","name":"Image","description":"","type":"image"}]}