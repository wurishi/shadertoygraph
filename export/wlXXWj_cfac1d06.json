{"ver":"0.1","info":{"id":"wlXXWj","date":"1564265759","viewed":154,"name":"Color Grid + Grayscale","username":"elChris","description":"Exercise for image manipulation. Just tried to replicate a grid and use basic transformations.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["texture","grayscale","color","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float greyscale(vec3 c){\n    return c.r * 0.2126 +\n        c.g * 0.7152 +\n        c.b * 0.0722;\n}\n\nfloat grid(vec2 coord, float sqSize, float lnSize){\n    vec2 modulo =  mod(coord, sqSize);\n    return clamp(max(lnSize - modulo.x, lnSize - modulo.y), 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Shader properties\n    // Matrix for rotating grid\n    float tCos = cos(iTime / 2.);\n    float tSin = sin(iTime / 2.);\n    mat2 rot = mat2( tCos, -tSin,\n                    tSin, tCos);\n    // Grid square size\n    float squareSize = 20.;\n    // Grid line size\n    float lineSize = 5.;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    // Get greyscale value\n    float grey = greyscale(col);\n    // Get grid value\n    float grid = grid(rot *(fragCoord - iResolution.xy / 2.), squareSize, lineSize);\n\n    // Output to screen\n    fragColor = vec4(grid * col, 1.) + (1. - grid) * vec4(grey, grey, grey, 1.) ; // Greyscale image + Color grid\n    //fragColor = vec4(grey, grey, grey, 1.0); // Greyscale image\n    //fragColor = vec4(grid * col, 1.0); // Grid with color\n    //fragColor = vec4(grid, grid, grid, 1.0); // Pure grid\n}","name":"Image","description":"","type":"image"}]}