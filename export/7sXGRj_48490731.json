{"ver":"0.1","info":{"id":"7sXGRj","date":"1616228126","viewed":114,"name":"sha Ocean","username":"sha","description":"this is Just my first Shadertoy","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["ocean"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MARCH_STEP = 35;\nconst int FBM_STEP = 5;\n\nfloat hash(vec2 uv){\n    float a = dot(uv, vec2(231.02384, 339.23918));\n    return fract(sin(a)*3039.39482);\n}\n\nfloat noise(vec2 uv){\n    vec2 pf = floor(uv);\n    vec2 pr = fract(uv);\n    vec2 s = pr*pr*(3.0 - 2.0*pr);\n    float a = hash(pf);\n    float b = hash(pf + vec2(1.0, 0.0));\n    float c = hash(pf + vec2(0.0, 1.0));\n    float d = hash(pf + vec2(1.0, 1.0));\n    return mix(mix(a,b,s.x), mix(c,d,s.x), s.y);\n}\n\nfloat fbm(vec2 p){\n    float res = 0.0;\n    float amp = 1.0;\n    p += vec2(noise(p+iTime), noise(p+3.0))*0.2;\n    for(int i=0; i<FBM_STEP; i++){\n        vec2 v = vec2(1.0, 0.45)*iTime*2.0;\n        res += amp * abs((2.0*noise(p+v))-1.0);\n        amp *= 0.5;\n        p *= 2.0;\n    }\n    res = min(res*0.6, 1.0);\n    return 1.0 - res;\n}\n\nfloat GetDist(vec3 p){\n    vec2 uv = p.xz + vec2(0.3, 0.0)*iTime;\n    vec2 uv2 = p.xz + vec2(-0.4, -0.15)*iTime;\n    float a = fbm(uv*0.5)*0.3 + fbm(uv2)*0.2;\n    return max(p.y - a, 0.0);\n}\n\nvec3 GetNormal(vec3 p){\n    vec2 d = vec2(0.001, 0.0);\n    vec3 n = vec3(GetDist(p + d.xyy) - GetDist(p - d.xyy),\n                    GetDist(p + d.yxy) - GetDist(p - d.yxy),\n                        GetDist(p + d.yyx) - GetDist(p - d.yyx));\n    return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0 - iResolution.xy)/max(iResolution.x, iResolution.y);\n    vec3 cp = vec3(sin(iTime*0.34), 4.5 + sin(iTime)*0.8, -5.0);\n    vec3 dir = vec3(uv.x, uv.y -0.34 + cos(iTime*0.89)*0.056, 1.0);\n    \n    vec3 ray = cp;\n    float hit=0.0;\n    float dist = 100.0;\n    vec3 normal = vec3(0.0, 0.0, 0.0);\n    float alpha = 0.0;\n    float z = 0.0;\n    \n    for(int i=0; i<MARCH_STEP; i++){\n        dist = GetDist(ray);\n        if(dist < 0.001){\n            alpha = 1.0;\n            normal = GetNormal(ray);\n            break;\n        }\n        z += dist;\n        ray += dist*dir;\n    }\n    \n    z = min(z*0.01, 1.0);\n    vec3 zColor = z*vec3(0.6, 0.8, 1.0) + uv.y*0.5;\n    \n    normal = normalize(normal);\n    \n    float fre = 1.0 - dot(normal, normalize(cp));\n    fre = max(pow(fre, 2.0),0.0);\n    \n    //なんかしらんけど上手くいかなくて誤魔化した\n    fre = clamp(fre, 0.0, 1.0);\n    if(fre==1.0) fre = 0.0;\n    //-----------------------------------------------\n    \n    \n    float diff = dot(normal, vec3(0.0, 1.0, 0.0))*0.4 + 0.6;\n    diff = max(diff, 0.0);\n    \n    \n    vec3 col = mix(vec3(0.01, 0.35, 0.7), vec3(0.05, 0.68, 1.0), diff) + zColor + fre;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}