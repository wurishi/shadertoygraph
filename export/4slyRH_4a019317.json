{"ver":"0.1","info":{"id":"4slyRH","date":"1487032630","viewed":130,"name":"Hearts","username":"monkeyscience","description":"A heart shader.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["barf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float point(vec2 base, float x, float y, float grid) {\n    float f = mod(base.x + x, grid) * mod(base.y + y, grid);\n    return 1.0 - min(1.0,f);\n}\n\nvec4 heart(vec2 fragCoord, float time, float spread) {\n\tvec4 result = vec4(0.0,0.0,0.0,0.0);\n\tvec2 base = fragCoord.xy;\n    \n    float invSpread = 1.0 / spread;\n    float halfSpread = spread * 0.5;\n    \n    float everyOther = floor(base.y * invSpread);\n    base.x += everyOther * halfSpread;\n        \n    float t = iTime;\n    t += 0.5 * everyOther;\n    t += 0.25 * floor((base.x + halfSpread) * invSpread);\n    t += 0.25 * floor((base.x + halfSpread) * invSpread);\n    float frame = 1.0;\n    \n    base.x += floor(0.5 * halfSpread * sin(t) + 0.5);\n    \n    frame = mod(t*4.0, 4.0);\n    frame = min(1.0, (frame));\n    \n    result.r += frame * point(base,  0.0,\t0.0,\tspread);\n    result.r += frame * point(base,  1.0,\t-1.0,\tspread);\n    result.r += frame * point(base, -1.0,\t-1.0,\tspread);\n    \n    frame = mod(t*3.0, 3.0);\n    frame = min(1.0, (frame));\n    \n    result.r += frame * point(base,  0.0,\t-1.0,\tspread);\n    result.r += frame * point(base,  1.0,\t-2.0,\tspread);\n    result.r += frame * point(base, -1.0,\t-2.0,\tspread);    \n    result.r += frame * point(base,  2.0,\t-2.0,\tspread);\n    result.r += frame * point(base, -2.0,\t-2.0,\tspread);\n    \n    frame = mod(t*2.0, 2.0);\n    frame = min(1.0, (frame));\n    \n    result.r += frame * point(base,  0.0,\t-2.0,\tspread);\n    result.r += frame * point(base,  1.0,\t-3.0,\tspread);\n    result.r += frame * point(base, -1.0,\t-3.0,\tspread);    \n    result.r += frame * point(base,  2.0,\t-3.0,\tspread);\n    result.r += frame * point(base, -2.0,\t-3.0,\tspread);\n    \n    result.r = min(1.0,result.r);\n    result.b = 0.25*result.r;\n    \n    frame = mod(t*2.5, 2.5);\n    frame = min(1.0, (frame));\n    frame *= 0.5;\n    result.b += frame * point(base,  0.0,\t-1.0,\tspread);\n    result.b += frame * point(base,  0.0,\t-2.0,\tspread);\n    result.b += frame * point(base,  1.0,\t-2.0,\tspread);\n    result.b += frame * point(base, -1.0,\t-2.0,\tspread);\n    result.a = min(1.0,result.r);\n    \n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = heart(fragCoord, iTime, 20.0);\n}","name":"Image","description":"","type":"image"}]}