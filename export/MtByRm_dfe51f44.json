{"ver":"0.1","info":{"id":"MtByRm","date":"1507889952","viewed":127,"name":"mandelbrot shader","username":"unnick","description":"renders an image of the mandelbrot set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\n//set the pallete\nconst vec4 pallete[] = vec4[](\n    vec4(0.2, 0.5, 0.0, 1.0),\n    vec4(0.5, 0.5, 0.0, 1.0),\n    vec4(1.0, 0.5, 0.0, 1.0));\n\n//set maxiters\nconst int maxiters = 100;\n\n//set the center and zoom\nvec2 center = vec2(0.0, 0.0);\nfloat zoom = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    /*figure out the pos\n     *sorry for sort of spaghetti code :/\n     *this is my first shader i shared btw\n     */\n\tvec2 pos = (fragCoord.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y) * 2.0;\n    \n    //set the c\n    vec2 c = pos * zoom - center;\n    \n    //set the z\n    vec2 z = vec2(0.0);\n    \n    //iterate z=z^2+c until you reach maxiters or escape the bounding circle\n    for(int iters = 0; iters < maxiters; iters++){\n        //square z (z=z^2)\n        z = vec2(z.x*z.x - z.y*z.y, z.x*z.y * 2.0);\n        \n        //negate the real part of z (optional)\n        //z = vec2(-z.x, z.y);\n        //negate the imaginary part of z (optional)\n        //z = vec2(z.x, -z.y);\n        \n        //make the real part of z absolute (optional)\n        //z.x = abs(z.x);\n        //make the imagnary part of z absolute (optional)\n        //z.y = abs(z.y);\n        \n        //add c to z (z=z^2+c)\n        z += c;\n        \n        //check if outside the bounding circle\n        if(z.x*z.x + z.y*z.y > 4.0){\n            //if its outside the bounding circle, return the corresponding color in the pallete.\n            fragColor = pallete[iters % pallete.length()];\n            return;\n        }\n    }\n    \n    //if it passed the test, return black.\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    return;\n}","name":"Image","description":"","type":"image"}]}