{"ver":"0.1","info":{"id":"MdByzK","date":"1492774174","viewed":181,"name":"RandomPattern","username":"gilesruscoe","description":"Send help","likes":2,"published":1,"flags":96,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//From Sam Hocevar: http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//Aspect ratio of screen\n    float aspect = iResolution.y / iResolution.x;\n    //Uv coord\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n   \tfragColor = texture(iChannel0, uv);\n    \n    vec3 hsv = rgb2hsv(fragColor.rgb);\n    hsv.x = fract(iTime * 0.25 + uv.x * 0.25);\n    fragColor.rgb = hsv2rgb(hsv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4d2GWt","filepath":"https://soundcloud.com/gutterrecords/bone-n-skin-swesh?in=gutterrecords/sets/gutter-records-releases","previewfilepath":"https://soundcloud.com/gutterrecords/bone-n-skin-swesh?in=gutterrecords/sets/gutter-records-releases","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//Aspect ratio of screen\n    float aspect = iResolution.y / iResolution.x;\n    //Uv coord\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float decay = 0.21;\n    vec4 tex = texture(iChannel0, uv);\n    float p = 1.0 / iResolution.x;\n    tex += texture(iChannel0, uv + vec2(p, 0.0));\n    tex += texture(iChannel0, uv + vec2(p));\n    tex += texture(iChannel0, uv + vec2(0.0, p));\n    tex *=  decay;\n\n    \n    //Centered\n    uv = uv * 2.f - 1.f;\n    //Aspect ratio fix\n    uv.y *= aspect;\n    float theta = iTime * 0.5;\n    float sT = sin(theta);\n    float cT = cos(theta);\n    mat2 rotMat = mat2(cT, -sT, sT, cT);\n    float fft = texture(iChannel1, vec2(0.05)).x * 1.5;\n    float fft2 = texture(iChannel1, vec2(length(uv) * 0.2)).x * 0.5;\n    fft += fft2 * 0.01;\n    uv.xy *= fft;\n    uv *= cos((1.0-length(uv * vec2(fft))) * sin(iTime * 0.25) * 5.0);\n    uv *= rotMat;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    float pattern = sin(iTime + uv.x * 5.0);\n    pattern *= tan(iTime + uv.y * 30.0 + cos(iTime - uv.y * 50.0));\n    pattern *= tan(uv.y * 2.0 + iTime * 1.5);\n    \n    vec4 c1 = vec4(0.10, 0.15, 0.10, 1.0);\n    vec4 c2 = mix(vec4(0.35, 0.75, 0.95, 1.0), vec4(0.0, 1.0, 0.0, 1.0), fft2);\n    fragColor = tex + mix(c1,c2,clamp(pattern, 0.0, 1.0)) * 0.3;\n}","name":"Buf A","description":"","type":"buffer"}]}