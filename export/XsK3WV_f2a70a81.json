{"ver":"0.1","info":{"id":"XsK3WV","date":"1456518700","viewed":437,"name":"Rhythm Lines","username":"vamoss","description":"Original work: http://57.media.tumblr.com/5ca79532ad296fcdc07bb48209c16dea/tumblr_o32r02CWzb1tcuj64o1_400.gif","likes":29,"published":1,"flags":0,"usePreview":0,"tags":["lines","rhythm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nOriginal work\nhttp://57.media.tumblr.com/5ca79532ad296fcdc07bb48209c16dea/tumblr_o32r02CWzb1tcuj64o1_400.gif\n*/\n\n#define PI 3.14159265359\n\nfloat easeInOutExpo(float t, float b, float c, float d) {\n\tt /= d/2.0;\n\tif (t < 1.0) return c/2.0 * pow( 2.0, 10.0 * (t - 1.0) ) + b;\n\tt--;\n\treturn c/2.0 * ( -pow( 2.0, -10.0 * t) + 2.0 ) + b;\n}\n\n/**\n * Draw a rectangle at vec2 `pos` with width `width`, height `height` and color `color`.\n * @author jonobr1 / http://jonobr1.com/\n */\nvec4 rectangle(vec2 uv, vec2 pos, float width, float height, vec3 color) {\n\tfloat t = 0.0;\n\tif ((uv.x > pos.x) && (uv.x < pos.x + width)\n\t\t&& (uv.y > pos.y) && (uv.y < pos.y + height)) {\n\t\tt = 1.0;\n\t}\n\treturn vec4(color, t);\n}\n\nvec3 getColor(float frame, float frequency) {\n    vec3 color1 = vec3(0.86, 0.86, 0.82);\n    vec3 color2 = vec3(0.15, 0.15, 0.15);\n    \n    if(cos(frame*2.0+frequency+PI/2.0)>0.0) return color1;\n    return color2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 center = vec2(0.5, 0.1);\n    const int total = 8;//number of lines\n    \n    float frame = iTime;\n    if(iMouse.x>0.0) frame *= 5.0 * (iMouse.x / iResolution.x);//velocity\n    \n    \n    vec4 color = vec4(getColor(frame, PI), 1.0);//bg\n    vec3 rectColor = getColor(frame, 0.0);\n    \n    float freqDecay = 2.0;\n        \n    float space = 0.05;\n    float size = 0.7;\n//*Vertical Lines\n    for(int i=0; i<total; i++){\n        float freq = (1.0-float(i)/float(total))/freqDecay;\n        float x = center.x + space*float(i-total/2);\n    \tfloat y = center.y;\n        float height = size * easeInOutExpo(((cos((frame+freq)*2.0)+1.0)/2.0), 0.0, 1.0, 1.0);\n    \tif(cos(frame+freq+PI/2.0)<0.0) y += size-height;;\n        height += 0.035;\n        float width = 0.02;\n\t    \n        vec4 rect = rectangle(uv, vec2(x, y), width, height, rectColor);\n\t    color = mix(color, rect, rect.a);\n    }\n/**/\n//*Horizontal Lines\n    frame += PI/2.0;\n    space = 0.08;\n\tcenter = vec2(0.25, 0.5);\n    size = 0.45;\n    for(int i=0; i<total; i++){\n        float freq = (1.0-float(i)/float(total))/freqDecay;\n        float x = center.x;\n        float width = size * easeInOutExpo(((cos((frame+freq)*2.0)+1.0)/2.0), 0.0, 1.0, 1.0);\n\t    if(cos(frame+freq+PI/2.0)<0.0) x += size - width;\n    \tfloat y = center.y + space*float(i-total/2);\n        float height = 0.035;\n    \twidth += 0.021;\n        \n        vec4 rect = rectangle(uv, vec2(x, y), width, height, rectColor);\n\t    color = mix(color, rect, rect.a);\n    }\n/**/\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}