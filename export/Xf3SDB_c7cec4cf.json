{"ver":"0.1","info":{"id":"Xf3SDB","date":"1714366270","viewed":68,"name":"Marijuana Mirage","username":"hailrakes","description":"Some experiments.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","effect","drugs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.0\n#define EPSILON 0.01\n\nfloat scene(vec3 p) {\n    float x = sin(p.x * 5.0 + iTime * 0.5);\n    float y = cos(p.y * 5.0 + iTime * 0.3);\n    float z = sin(p.z * 5.0 + iTime * 0.7);\n    return length(vec3(x, y, z)) - 0.5;\n}\n\nvec3 rayMarch(vec3 origin, vec3 direction) {\n    float totalDist = 0.0;\n    for (int i = 0; i < MAX_STEPS; i++) {\n        vec3 p = origin + direction * totalDist;\n        float dist = scene(p);\n        totalDist += dist;\n        if (dist < EPSILON || totalDist > MAX_DIST) break;\n    }\n    return origin + direction * totalDist;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 camPos = vec3(0, 0, -3);\n    vec3 camTarget = vec3(0, 0, 0);\n    vec3 camDir = normalize(camTarget - camPos);\n    vec3 camRight = normalize(cross(vec3(0, 1, 0), camDir));\n    vec3 camUp = cross(camDir, camRight);\n\n    vec3 rayDir = normalize(uv.x * camRight + uv.y * camUp + 2.0 * camDir);\n\n    vec3 hitPoint = rayMarch(camPos, rayDir);\n    \n    vec3 color = vec3(\n        sin(hitPoint.x * 0.5 + iTime * 0.5),\n        cos(hitPoint.y * 0.5 + iTime * 0.3),\n        sin(hitPoint.z * 0.5 + iTime * 0.7)\n    );\n\n    float effect = 0.5 + 0.5 * cos(iTime * 5.0 + dot(hitPoint, vec3(0.1, 0.2, 0.3)));\n    \n    fragColor = vec4(color * effect, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}