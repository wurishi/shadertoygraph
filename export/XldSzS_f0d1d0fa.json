{"ver":"0.1","info":{"id":"XldSzS","date":"1481512118","viewed":1057,"name":"Convolutional Neural Network AA","username":"rory618","description":"Here is a convolutional neural network composed of 5 3x3 convolutional layers with tanh activation functions.\nUse mouse x to show aliased or neural screen space antialiased.\nChange around the channel inputs to make some cool feedback too.","likes":17,"published":1,"flags":32,"usePreview":0,"tags":["antialias","ai","neuralnetwork"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 im(vec2 uv) {\n    \n    vec2 p = vec2(1, 0) * iResolution.x / iResolution.y * (2.0*(uv-vec2(.5))).x + vec2(0,1) * (2.0*(uv-vec2(.5))).y;\n    vec3 f = vec3(0);\n    vec2 z = vec2(0);\n    for(int i = 0; i < 1000; i++) {\n        z = vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y) + p;\n        if (length(z) > 16.0) {\n        \tf= vec3(z, i);\n            break;\n        }\n    }\n    f.xy=z;    \n    if(f.z==0.){ return vec4(0,0,0,1); }\n    float c = f.z + 1. - log(log(length(z)))/log(2.0);\n    return vec4(\n        .5+.5*sin(5.1*log(c)),\n        .5+.5*sin(5.2*log(c)),\n        .5+.5*sin(5.3*log(c)),1);\n}\nvec4 conv3x3(vec2 fragCoord) {\n\tvec4 res = vec4(0);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,-1)) / iChannelResolution[0].xy)*mat4(-0.14736180007457733,-0.28961727023124695,0.15179617702960968,0.483257919549942,-0.0009752403711900115,-0.17173106968402863,-0.01258739735931158,0.16343647241592407,0.15175621211528778,-0.029136555269360542,-0.11655416339635849,-0.13662824034690857,-0.014743603765964508,0.0018880541902035475,0.01794065348803997,-0.00237668096087873);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,0)) / iChannelResolution[0].xy)*mat4(0.37615540623664856,-0.09981029480695724,0.019925812259316444,0.08982086926698685,0.24126045405864716,-0.15705128014087677,0.09364377707242966,0.028712904080748558,0.12965671718120575,-0.1420648843050003,0.12735815346240997,-0.08256369084119797,0.01193623710423708,0.020441671833395958,0.041999153792858124,-0.008777906186878681);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,1)) / iChannelResolution[0].xy)*mat4(0.061883796006441116,-0.013484076596796513,-0.1674850881099701,-0.2816179394721985,0.10721281170845032,-0.08120279759168625,0.0698636993765831,-0.2352030724287033,0.11919616162776947,-0.1563737541437149,0.23964163661003113,-0.1663552075624466,0.03148532286286354,-0.02931448258459568,-0.0396769680082798,-0.0017509745666757226);\n\tres += texture(iChannel0,(fragCoord + vec2(0,-1)) / iChannelResolution[0].xy)*mat4(0.08720245957374573,-0.06436968594789505,-0.03229707479476929,-0.4250425100326538,0.08924373984336853,0.044978562742471695,-0.062265507876873016,-0.2516106963157654,0.06057775765657425,0.07693586498498917,-0.15738780796527863,-0.09516365081071854,-0.010799385607242584,-0.021315909922122955,0.02868560515344143,0.024020902812480927);\n\tres += texture(iChannel0,(fragCoord + vec2(0,0)) / iChannelResolution[0].xy)*mat4(-0.15802302956581116,0.4095153510570526,0.1949986219406128,0.10044480860233307,0.10178562253713608,0.4041203558444977,-0.016503578051924706,0.2155785858631134,0.27088189125061035,0.22541622817516327,-0.26907339692115784,0.32739681005477905,-0.02365700714290142,0.028715161606669426,0.012146210297942162,-0.016920149326324463);\n\tres += texture(iChannel0,(fragCoord + vec2(0,1)) / iChannelResolution[0].xy)*mat4(-0.47878140211105347,0.012430870905518532,-0.0002930631744675338,-0.15603052079677582,-0.6185171008110046,0.13382670283317566,-0.08011100441217422,-0.08352714031934738,-0.7527486085891724,0.3131777346134186,0.019398188218474388,0.01216063555330038,-0.006894497200846672,-0.02855641022324562,-0.07175160199403763,-0.007452541030943394);\n\tres += texture(iChannel0,(fragCoord + vec2(1,-1)) / iChannelResolution[0].xy)*mat4(0.2301149070262909,0.29919761419296265,-0.06142471358180046,-0.12654981017112732,0.16715355217456818,0.0814104750752449,-0.051028598099946976,-0.0008414446492679417,0.08659181743860245,-0.11612498015165329,-0.04280852898955345,0.10127168148756027,-0.002854669466614723,-0.015828412026166916,0.008625690825283527,0.028466761112213135);\n\tres += texture(iChannel0,(fragCoord + vec2(1,0)) / iChannelResolution[0].xy)*mat4(0.10399066656827927,-0.24734672904014587,0.030747011303901672,-0.19049072265625,0.0007859296747483313,-0.18527750670909882,0.15156348049640656,-0.21563875675201416,-0.08277872204780579,-0.06594233959913254,0.23992647230625153,-0.19955234229564667,0.00383635051548481,0.050127942115068436,0.04766717553138733,-0.005640612915158272);\n\tres += texture(iChannel0,(fragCoord + vec2(1,1)) / iChannelResolution[0].xy)*mat4(-0.23213081061840057,-0.05638055130839348,-0.1698312610387802,0.09438759833574295,-0.2380019724369049,-0.018692662939429283,-0.2917642295360565,0.11893999576568604,-0.17391309142112732,0.04965909942984581,-0.32951217889785767,0.10734729468822479,0.005280869081616402,-0.0029540008399635553,-0.009762221947312355,0.007270758040249348);\n\treturn res;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = im(uv);\n    if(fragCoord.x>iMouse.x){\n    \tfragColor += tanh(conv3x3(fragCoord)+vec4(-0.009121924638748169,-0.0038858859334141016,-0.0005756877362728119,-0.00016817072173580527));\n    }\n}\n\n/* Python source code - Rory McHenry\n\nimport tensorflow as tf\nimport numpy as np\nfrom PIL import Image\nimport os\n\nlearning_rate = 0.1\ntraining_iters = 50\nbatch_size = 1\ndisplay_step = 5\nW = 799\nH = 449\n\nim = Image.open('min.png')\ntarget = Image.open('mout.png')\n\nx = np.ones( [1, H,W,4] )\nx[0,:,:,0:3] = np.array(im)[:,:,0:3].astype(np.float32)/255\ny = np.ones( [1, H,W,4] )\ny[0,:,:,0:3] = np.array(target)[:,:,0:3].astype(np.float32)/255\n\nx=tf.constant(x,dtype=tf.float32,shape=[1, H,W,4])\ny=tf.constant(y,dtype=tf.float32,shape=[1, H,W,4])\n\nkeep_prob = tf.placeholder(tf.float32)\n\ndef conv2d(x, W, b, strides=1):\n    x = tf.nn.conv2d(x, W, strides=[1, strides, strides, 1], padding='SAME')\n    x = tf.nn.bias_add(x, b)\n    return tf.tanh(x)\n\ndef shaderNet(x, weights, biases, dropout):\n\n    conv1 = conv2d(x    , weights['wc1'], biases['bc1'])\n    conv2 = conv2d(conv1, weights['wc2'], biases['bc2'])\n    conv3 = conv2d(conv2, weights['wc3'], biases['bc3'])\n    conv4 = conv2d(conv3, weights['wc4'], biases['bc4'])\n    \n    return x + conv2d(conv4, weights['out'], biases['out']);\n\n\n\nweights = {\n    'wc1': tf.Variable(tf.random_normal([3, 3, 4, 4], stddev=.1)),\n    'wc2': tf.Variable(tf.random_normal([3, 3, 4, 4], stddev=.1)),\n    'wc3': tf.Variable(tf.random_normal([3, 3, 4, 4], stddev=.1)),\n    'wc4': tf.Variable(tf.random_normal([3, 3, 4, 4], stddev=.1)),\n    'out': tf.Variable(tf.random_normal([3, 3, 4, 4], stddev=.1))\n}\n\nbiases = {\n    'bc1': tf.Variable(tf.random_normal([4], stddev=.01)),\n    'bc2': tf.Variable(tf.random_normal([4], stddev=.01)),\n    'bc3': tf.Variable(tf.random_normal([4], stddev=.01)),\n    'bc4': tf.Variable(tf.random_normal([4], stddev=.01)),\n    'out': tf.Variable(tf.random_normal([4], stddev=.01))\n}\n\npred = shaderNet(x, weights, biases, keep_prob)\n\n\ncost = tf.reduce_mean(tf.contrib.losses.mean_squared_error(pred , y ))\noptimizer = tf.train.ProximalGradientDescentOptimizer(learning_rate=learning_rate).minimize(cost)\n\ncorrect_pred = tf.equal(tf.argmax(pred, 1), tf.argmax(y, 1))\naccuracy = tf.reduce_mean(tf.cast(correct_pred, tf.float32))\n\ninit = tf.global_variables_initializer()\n\nsaver = tf.train.Saver()\n\nwith tf.Session() as sess:\n\n    \n    saver.restore(sess, 'C:/Users/rory/py/modelaa.ckpt')\n    \n    #sess.run(init)\n    \n    step = 1\n    while step * batch_size < training_iters:\n        sess.run(optimizer)\n        if step % display_step == 0:\n            loss, acc = sess.run([cost, accuracy])\n            print(\"Iter \" + str(step*batch_size) + \", Minibatch Loss= \" + \\\n                  \"{:.6f}\".format(loss) + \", Training Accuracy= \" + \\\n                  \"{:.5f}\".format(acc))\n            \n            img = np.clip(sess.run(pred),0,1)\n            img = Image.fromarray((img[0,:,:,0:3]*255).astype(np.uint8), \"RGB\")\n            img.save(os.path.join(os.getcwd(),\"out.png\"))\n           \n        step += 1\n    print(\"Optimization Finished!\")\n    print(\"Testing Accuracy:\", \\\n        sess.run(accuracy))\n    \n    save_path = saver.save(sess, 'C:/Users/rory/py/modelaa.ckpt')\n\n    w = sess.run(weights['wc1'])\n    b = sess.run(biases['bc1'])\n\n    print( 'vec4 conv3x3(vec2 fragCoord) {')\n    print( 'vec4 res = vec4(0);')\n    for x in range(-1,2):\n        for y in range(-1,2):\n            print('res += im((fragCoord + vec2('+str(x)+','+str(y)+')) / iChannelResolution[0].xy)*mat4('+\",\".join(np.transpose(w[x+1,y+1]).reshape(16).astype(str))+');')\n    print( 'return res;')\n    print( '}')\n\n    print( 'vec4 ReLU(vec4 i) {')\n    print('    return max(vec4(0),i);')\n    print('}')\n\n    print('vec4 sigmoid(vec4 i) {')\n    print('    return 1./(1.+exp(-i));')\n    print('}')\n\n    \n    print('vec4 tanh(vec4 i) {')\n    print('    return (exp(2.*i)-1.)/(exp(2.*i)+1.);')\n    print('}')\n\n    print( 'void mainImage( out vec4 fragColor, in vec2 fragCoord )')\n    print('{')\n    print('    fragColor = tanh(conv3x3(fragCoord)+vec4('+\",\".join(b.astype(str))+'));')\n    print('}')\n    w = sess.run(weights['wc2'])\n    b = sess.run(biases['bc2'])\n\n    print( 'vec4 conv3x3(vec2 fragCoord) {')\n    print( 'vec4 res = vec4(0);')\n    for x in range(-1,2):\n        for y in range(-1,2):\n            print('res += texture(iChannel0,(fragCoord + vec2('+str(x)+','+str(y)+')) / iChannelResolution[0].xy)*mat4('+\",\".join(np.transpose(w[x+1,y+1]).reshape(16).astype(str))+');')\n    print( 'return res;')\n    print( '}')\n\n    print( 'vec4 ReLU(vec4 i) {')\n    print('    return max(vec4(0),i);')\n    print('}')\n\n    print('vec4 sigmoid(vec4 i) {')\n    print('    return 1./(1.+exp(-i));')\n    print('}')\n\n    \n    print('vec4 tanh(vec4 i) {')\n    print('    return (exp(2.*i)-1.)/(exp(2.*i)+1.);')\n    print('}')\n\n    print( 'void mainImage( out vec4 fragColor, in vec2 fragCoord )')\n    print('{')\n    print('    fragColor = tanh(conv3x3(fragCoord)+vec4('+\",\".join(b.astype(str))+'));')\n    print('}')\n    w = sess.run(weights['wc3'])\n    b = sess.run(biases['bc3'])\n\n    print( 'vec4 conv3x3(vec2 fragCoord) {')\n    print( 'vec4 res = vec4(0);')\n    for x in range(-1,2):\n        for y in range(-1,2):\n            print('res += texture(iChannel0,(fragCoord + vec2('+str(x)+','+str(y)+')) / iChannelResolution[0].xy)*mat4('+\",\".join(np.transpose(w[x+1,y+1]).reshape(16).astype(str))+');')\n    print( 'return res;')\n    print( '}')\n\n    print( 'vec4 ReLU(vec4 i) {')\n    print('    return max(vec4(0),i);')\n    print('}')\n\n    print('vec4 sigmoid(vec4 i) {')\n    print('    return 1./(1.+exp(-i));')\n    print('}')\n\n    \n    print('vec4 tanh(vec4 i) {')\n    print('    return (exp(2.*i)-1.)/(exp(2.*i)+1.);')\n    print('}')\n\n    print( 'void mainImage( out vec4 fragColor, in vec2 fragCoord )')\n    print('{')\n    print('    fragColor = tanh(conv3x3(fragCoord)+vec4('+\",\".join(b.astype(str))+'));')\n    print('}')\n    w = sess.run(weights['wc4'])\n    b = sess.run(biases['bc4'])\n\n    print( 'vec4 conv3x3(vec2 fragCoord) {')\n    print( 'vec4 res = vec4(0);')\n    for x in range(-1,2):\n        for y in range(-1,2):\n            print('res += texture(iChannel0,(fragCoord + vec2('+str(x)+','+str(y)+')) / iChannelResolution[0].xy)*mat4('+\",\".join(np.transpose(w[x+1,y+1]).reshape(16).astype(str))+');')\n    print( 'return res;')\n    print( '}')\n\n    print( 'vec4 ReLU(vec4 i) {')\n    print('    return max(vec4(0),i);')\n    print('}')\n\n    print('vec4 sigmoid(vec4 i) {')\n    print('    return 1./(1.+exp(-i));')\n    print('}')\n\n    \n    print('vec4 tanh(vec4 i) {')\n    print('    return (exp(2.*i)-1.)/(exp(2.*i)+1.);')\n    print('}')\n\n    print( 'void mainImage( out vec4 fragColor, in vec2 fragCoord )')\n    print('{')\n    print('    fragColor = tanh(conv3x3(fragCoord)+vec4('+\",\".join(b.astype(str))+'));')\n    print('}')\n    \n    w = sess.run(weights['out'])\n    b = sess.run(biases['out'])\n\n    print( 'vec4 conv3x3(vec2 fragCoord) {')\n    print( 'vec4 res = vec4(0);')\n    for x in range(-1,2):\n        for y in range(-1,2):\n            print('res += texture(iChannel0,(fragCoord + vec2('+str(x)+','+str(y)+')) / iChannelResolution[0].xy)*mat4('+\",\".join(np.transpose(w[x+1,y+1]).reshape(16).astype(str))+');')\n    print( 'return res;')\n    print( '}')\n\n    print( 'vec4 ReLU(vec4 i) {')\n    print('    return max(vec4(0),i);')\n    print('}')\n\n    print('vec4 sigmoid(vec4 i) {')\n    print('    return 1./(1.+exp(-i));')\n    print('}')\n\n    \n    print('vec4 tanh(vec4 i) {')\n    print('    return (exp(2.*i)-1.)/(exp(2.*i)+1.);')\n    print('}')\n\n    print( 'void mainImage( out vec4 fragColor, in vec2 fragCoord )')\n    print('{')\n    print('    fragColor = im(uv);')\n    print('    if(fragCoord.x>iMouse.x){')\n    print('        fragColor = tanh(conv3x3(fragCoord)+vec4('+\",\".join(b.astype(str))+'));')\n    print('    }')\n    print('}')\n*/","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 im(vec2 uv) {\n    \n    vec2 p = vec2(1, 0) * iResolution.x / iResolution.y * (2.0*(uv-vec2(.5))).x + vec2(0,1) * (2.0*(uv-vec2(.5))).y;\n    vec3 f = vec3(0);\n    vec2 z = vec2(0);\n    for(int i = 0; i < 1000; i++) {\n        z = vec2(z.x*z.x-z.y*z.y,2.*z.x*z.y) + p;\n        if (length(z) > 16.0) {\n        \tf= vec3(z, i);\n            break;\n        }\n    }\n    f.xy=z;    \n    if(f.z==0.){ return vec4(0,0,0,1); }\n    float c = f.z + 1. - log(log(length(z)))/log(2.0);\n    return vec4(\n        .5+.5*sin(5.1*log(c)),\n        .5+.5*sin(5.2*log(c)),\n        .5+.5*sin(5.3*log(c)),1);\n}\n\n\n\nvec4 conv3x3(vec2 fragCoord) {\n\tvec4 res = vec4(0);\n\tres += im((fragCoord + vec2(-1,-1)) / iResolution.xy)*mat4(-0.45206254720687866,0.9171078205108643,-0.18149974942207336,-0.03528536111116409,-0.2342090606689453,0.17719538509845734,-0.1418752670288086,0.13829827308654785,-0.06623413413763046,0.19554154574871063,0.0033279345370829105,-0.03881428390741348,0.0069897472858428955,-0.11260417848825455,0.05338335409760475,-0.04841788858175278);\n\tres += im((fragCoord + vec2(-1,0)) / iResolution.xy)*mat4(-0.038148608058691025,0.3082307279109955,-0.19679538905620575,0.04576268047094345,0.057029351592063904,0.09648028016090393,-0.07311814278364182,0.002072906354442239,0.008644563145935535,-0.16055168211460114,0.25126704573631287,0.04930800572037697,0.0647440105676651,-0.32887694239616394,0.2016953080892563,-0.04019874706864357);\n\tres += im((fragCoord + vec2(-1,1)) / iResolution.xy)*mat4(0.17420484125614166,-0.04517412558197975,-0.10871002823114395,-0.25758567452430725,-0.12977619469165802,-0.2253919541835785,0.25467154383659363,0.1112910658121109,-0.01440789457410574,0.023662440478801727,0.03405406326055527,-0.03580956533551216,0.031618814915418625,0.0732223242521286,-0.11916113644838333,0.10615453124046326);\n\tres += im((fragCoord + vec2(0,-1)) / iResolution.xy)*mat4(0.07233982533216476,0.04827802628278732,-0.10436250269412994,-0.0031517785973846912,-0.12539009749889374,0.05688194930553436,-0.053666021674871445,0.015515272505581379,-0.016311051324009895,0.06442002952098846,-0.030502131208777428,0.00040389891364611685,-0.13738496601581573,0.11103509366512299,-0.12858811020851135,-0.012361448258161545);\n\tres += im((fragCoord + vec2(0,0)) / iResolution.xy)*mat4(-0.01672402396798134,-0.012262831442058086,0.10036903619766235,0.07586667686700821,-0.23638640344142914,-0.0769120380282402,0.1348387897014618,0.023076096549630165,0.019877586513757706,-0.010441041551530361,0.14844048023223877,-0.05089119076728821,-0.06071319058537483,-0.2330702543258667,0.0005538323894143105,0.12814806401729584);\n\tres += im((fragCoord + vec2(0,1)) / iResolution.xy)*mat4(0.10493236780166626,-0.02297147363424301,-0.014292462728917599,0.021011747419834137,0.14975383877754211,-0.17833060026168823,0.09068942815065384,-0.07260581105947495,-0.2520047724246979,-0.1489490121603012,0.3614390194416046,-0.09083060920238495,-0.1686791032552719,0.17115621268749237,0.031349796801805496,0.13617968559265137);\n\tres += im((fragCoord + vec2(1,-1)) / iResolution.xy)*mat4(0.11917692422866821,-0.03367998078465462,-0.012341964058578014,-0.014496282674372196,-0.02079911343753338,-0.06719783693552017,0.01882299594581127,-0.08138509094715118,0.0343191996216774,-0.11287260800600052,0.015797056257724762,0.12687766551971436,0.04389521852135658,0.026848405599594116,-0.07566612213850021,0.0268710870295763);\n\tres += im((fragCoord + vec2(1,0)) / iResolution.xy)*mat4(0.0005754083395004272,-0.07146646082401276,0.15052208304405212,-0.09069401770830154,-0.03374388813972473,-0.15247569978237152,0.05128427967429161,0.00902304332703352,0.1817702203989029,-0.018231172114610672,-0.09706419706344604,-0.022639580070972443,0.04073035717010498,-0.055733971297740936,-0.0584493950009346,-0.01831468939781189);\n\tres += im((fragCoord + vec2(1,1)) / iResolution.xy)*mat4(-0.021621111780405045,-0.07639315724372864,0.14114509522914886,0.03049737587571144,0.055599894374608994,-0.2673715651035309,0.09946796298027039,0.1361626833677292,0.16404227912425995,0.08752212673425674,-0.17530755698680878,-0.1151016503572464,-0.16439782083034515,-0.024611467495560646,0.14580340683460236,0.01105180662125349);\n\treturn res;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = tanh(conv3x3(fragCoord)+vec4(-0.06953410804271698,0.013979931361973286,0.023649899289011955,-0.019183514639735222));\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec4 conv3x3(vec2 fragCoord) {\n\tvec4 res = vec4(0);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,-1)) / iChannelResolution[0].xy)*mat4(-0.22058571875095367,-0.0025178513024002314,-0.02137291617691517,0.0755973681807518,-0.07658655941486359,-0.15938608348369598,0.039643868803977966,-0.012259022332727909,-0.015218861401081085,-0.050223562866449356,-0.07961801439523697,0.11616108566522598,0.13200008869171143,0.03162014111876488,0.032535750418901443,-0.10636500269174576);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,0)) / iChannelResolution[0].xy)*mat4(-0.28930965065956116,-0.11228568106889725,-0.08608853071928024,0.11449871212244034,0.12511080503463745,-0.10040754824876785,0.17461593449115753,-0.15175022184848785,0.03787801042199135,0.20102104544639587,-0.024612706154584885,0.02710619568824768,-0.06153976172208786,-0.10482363402843475,-0.014178688637912273,0.023371122777462006);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,1)) / iChannelResolution[0].xy)*mat4(-0.1525852084159851,0.012323809787631035,-0.04394780099391937,-0.07254716753959656,0.18465806543827057,0.14453156292438507,-0.07343120872974396,0.2724604606628418,0.03352152556180954,0.04368482530117035,-0.0542469397187233,0.1053997203707695,-0.04070863872766495,0.0843065083026886,-0.042356643825769424,0.17000557482242584);\n\tres += texture(iChannel0,(fragCoord + vec2(0,-1)) / iChannelResolution[0].xy)*mat4(-0.13294945657253265,-0.1913488656282425,0.17023856937885284,0.25633060932159424,-0.10361425578594208,-0.10409805923700333,-0.02211007848381996,0.19673652946949005,0.1772589534521103,0.1924116164445877,0.08171508461236954,0.033589430153369904,-0.3019593060016632,-0.4145629405975342,-0.2238256186246872,-0.033089861273765564);\n\tres += texture(iChannel0,(fragCoord + vec2(0,0)) / iChannelResolution[0].xy)*mat4(-0.10532718896865845,-0.009120185859501362,0.1831541657447815,-0.11598552763462067,-0.10732044279575348,-0.1422705501317978,-0.2938171923160553,0.08497025817632675,0.07730063796043396,-0.0065005188807845116,0.06287281960248947,-0.09081853181123734,-0.2506500482559204,0.007432099897414446,-0.05117560178041458,-0.12751594185829163);\n\tres += texture(iChannel0,(fragCoord + vec2(0,1)) / iChannelResolution[0].xy)*mat4(-0.031646713614463806,0.03424060717225075,0.02292831800878048,-0.013373860158026218,0.2722923159599304,0.15562108159065247,0.08641268312931061,0.013247879222035408,0.2955344021320343,0.2007416933774948,-0.03226592391729355,0.0658501535654068,0.11414589732885361,0.152848482131958,0.12652148306369781,0.0672551840543747);\n\tres += texture(iChannel0,(fragCoord + vec2(1,-1)) / iChannelResolution[0].xy)*mat4(0.22747460007667542,-0.03772164508700371,0.30145782232284546,0.04817598685622215,0.16727609932422638,-0.02036409080028534,0.1638275533914566,0.1533416360616684,0.2211352437734604,-0.02886020578444004,-0.08635003119707108,0.025351224467158318,-0.35834380984306335,0.01970680058002472,-0.013621831312775612,0.14156390726566315);\n\tres += texture(iChannel0,(fragCoord + vec2(1,0)) / iChannelResolution[0].xy)*mat4(-0.296324759721756,0.17407724261283875,-0.04902844503521919,0.023473504930734634,-0.26604920625686646,-0.1855679303407669,0.3079718053340912,-0.049569256603717804,-0.30711254477500916,0.05227816477417946,-0.1393774002790451,0.12021080404520035,0.21768616139888763,0.2681339681148529,-0.09689617156982422,-0.21676960587501526);\n\tres += texture(iChannel0,(fragCoord + vec2(1,1)) / iChannelResolution[0].xy)*mat4(0.13681215047836304,-0.05690794438123703,0.07499313354492188,0.1611005961894989,-0.18945586681365967,0.011663767509162426,0.10834614187479019,-0.04871741682291031,-0.38159874081611633,-0.15830495953559875,0.22751332819461823,0.170019268989563,-0.1293516904115677,-0.021397801116108894,0.24992097914218903,0.03157894313335419);\n\treturn res;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = tanh(conv3x3(fragCoord)+vec4(-0.04889335483312607,-0.05943099409341812,0.014945696108043194,0.0038716429844498634));\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"vec4 conv3x3(vec2 fragCoord) {\n\tvec4 res = vec4(0);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,-1)) / iChannelResolution[0].xy)*mat4(-0.08978403359651566,0.021472692489624023,0.15968655049800873,0.07255090773105621,-0.03019520454108715,-0.046309832483530045,-0.11464473605155945,-0.12372057139873505,0.12268779426813126,0.1131003350019455,0.07819749414920807,0.08106256276369095,0.11546918004751205,-0.20342066884040833,-0.15408927202224731,-0.10763927549123764);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,0)) / iChannelResolution[0].xy)*mat4(0.05881292745471001,0.2588099539279938,0.020158760249614716,-0.19001264870166779,0.0153447100892663,-0.19566024839878082,-0.07261296361684799,-0.1857142150402069,-0.037708256393671036,0.09824070334434509,0.07282908260822296,-0.17792820930480957,-0.2981567978858948,-0.04305162653326988,0.03757955878973007,0.38111481070518494);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,1)) / iChannelResolution[0].xy)*mat4(-0.06786806136369705,-0.21825657784938812,-0.09133756160736084,0.07036688178777695,0.04332439601421356,0.005440023727715015,0.04358324781060219,-0.01924920827150345,0.18002276122570038,0.2569921314716339,0.10064590722322464,-0.218774676322937,0.14492428302764893,0.13694322109222412,0.03337694704532623,-0.10000505298376083);\n\tres += texture(iChannel0,(fragCoord + vec2(0,-1)) / iChannelResolution[0].xy)*mat4(-0.049205414950847626,-0.2797788679599762,-0.2516476809978485,-0.17896977066993713,0.23606492578983307,-0.005560352932661772,0.19867542386054993,0.09474251419305801,-0.11219213157892227,-0.2857312262058258,-0.018932504579424858,0.12833693623542786,-0.11900380253791809,0.1620607227087021,-0.15382073819637299,-0.03432201221585274);\n\tres += texture(iChannel0,(fragCoord + vec2(0,0)) / iChannelResolution[0].xy)*mat4(0.23013946413993835,-0.06970289349555969,0.07704326510429382,0.16451290249824524,-0.2959217429161072,-0.044969186186790466,0.225532665848732,0.220137819647789,-0.14775611460208893,-0.35321909189224243,0.12842556834220886,-0.2816961109638214,0.16345417499542236,0.284789502620697,0.22735965251922607,0.05396560579538345);\n\tres += texture(iChannel0,(fragCoord + vec2(0,1)) / iChannelResolution[0].xy)*mat4(0.0068993777967989445,0.1691904515028,-0.14055974781513214,0.12286286056041718,0.03135419264435768,-0.0774572342634201,0.08660665154457092,-0.03381737694144249,0.09170042723417282,0.004986317362636328,-0.14398443698883057,0.060076888650655746,-0.1988099068403244,-0.169999897480011,-0.02355487458407879,-0.02444865182042122);\n\tres += texture(iChannel0,(fragCoord + vec2(1,-1)) / iChannelResolution[0].xy)*mat4(0.03762165829539299,-0.2552367150783539,-0.1088627278804779,-0.09448361396789551,-0.11977219581604004,0.2723424732685089,-0.1578056365251541,-0.013628855347633362,-0.28111928701400757,-0.08922215551137924,-0.08248984813690186,-0.22600284218788147,-0.033031802624464035,-0.14480002224445343,-0.1778317093849182,-0.18681208789348602);\n\tres += texture(iChannel0,(fragCoord + vec2(1,0)) / iChannelResolution[0].xy)*mat4(0.16965699195861816,-0.11669538170099258,-0.20756669342517853,0.007002888713032007,-0.2476048469543457,-0.2304615080356598,-0.2703227996826172,0.35086485743522644,-0.1254262924194336,0.0676352009177208,-0.09162922203540802,0.20074421167373657,-0.050330571830272675,0.11595618724822998,-0.008984344080090523,0.06534546613693237);\n\tres += texture(iChannel0,(fragCoord + vec2(1,1)) / iChannelResolution[0].xy)*mat4(-0.03008907474577427,-0.05446238070726395,-0.034129973500967026,-0.16535024344921112,-0.031803060322999954,0.008321567438542843,-0.027802329510450363,-0.08984126895666122,0.04516381025314331,-0.20657335221767426,-0.19448401033878326,0.2576199173927307,-0.17567895352840424,-0.12017142027616501,-0.050650279968976974,0.041436370462179184);\n\treturn res;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = tanh(conv3x3(fragCoord)+vec4(0.001061500166542828,-0.004918119870126247,0.019722601398825645,0.0029325440991669893));\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"vec4 conv3x3(vec2 fragCoord) {\n\tvec4 res = vec4(0);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,-1)) / iChannelResolution[0].xy)*mat4(0.09011204540729523,0.06983630359172821,-0.04772785305976868,0.10994818061590195,-0.18469920754432678,0.01749175600707531,0.1397622674703598,0.017534825950860977,-0.06179238483309746,-0.024345414713025093,0.011585460044443607,0.034084439277648926,-0.005748442839831114,-0.13514895737171173,0.06545190513134003,-0.24524229764938354);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,0)) / iChannelResolution[0].xy)*mat4(-0.0490124374628067,0.3004658818244934,0.1205262690782547,-0.051727503538131714,-0.05265210196375847,-0.2672884166240692,-0.07060319930315018,0.19020642340183258,-0.10713931173086166,0.09529717266559601,-0.08091404289007187,-0.20944371819496155,0.09151960909366608,-0.13999469578266144,0.17339584231376648,-0.14241506159305573);\n\tres += texture(iChannel0,(fragCoord + vec2(-1,1)) / iChannelResolution[0].xy)*mat4(-0.07889489084482193,-0.3198389708995819,0.05701001361012459,-0.21924571692943573,-0.11916869878768921,-0.07734379917383194,0.009964751079678535,-0.2632012963294983,0.1557345986366272,-0.15719886124134064,0.05423840135335922,0.22116316854953766,0.07484763115644455,0.06030179187655449,0.1808764636516571,-0.15427134931087494);\n\tres += texture(iChannel0,(fragCoord + vec2(0,-1)) / iChannelResolution[0].xy)*mat4(-0.20943711698055267,-0.05786419287323952,-0.299853652715683,-0.03954584151506424,0.23858612775802612,-0.0056121028028428555,0.15826180577278137,0.11343149840831757,-0.09697981178760529,-0.061145491898059845,0.045529041439294815,0.08827266842126846,0.14690682291984558,0.11925963312387466,0.022689472883939743,-0.0013491156278178096);\n\tres += texture(iChannel0,(fragCoord + vec2(0,0)) / iChannelResolution[0].xy)*mat4(-0.18122880160808563,0.053457245230674744,0.10014229267835617,-0.2016288787126541,0.04332445561885834,0.07107426971197128,-0.05409463122487068,-0.0065416088327765465,-0.2816433906555176,0.014486351050436497,0.17874690890312195,0.002971012843772769,-0.25554072856903076,0.19703586399555206,-0.3428994119167328,-0.03495112806558609);\n\tres += texture(iChannel0,(fragCoord + vec2(0,1)) / iChannelResolution[0].xy)*mat4(0.016626715660095215,-0.26354968547821045,0.4630204141139984,0.17862950265407562,-0.03960767760872841,0.16517086327075958,0.3110690116882324,-0.03290378674864769,0.11987622827291489,0.15100479125976562,0.05966734141111374,-0.18691499531269073,-0.032591626048088074,-0.21278762817382812,-0.2560683786869049,0.5263775587081909);\n\tres += texture(iChannel0,(fragCoord + vec2(1,-1)) / iChannelResolution[0].xy)*mat4(0.13240636885166168,0.0438266396522522,-0.05677022784948349,0.16301089525222778,-0.06593888252973557,-0.02868473529815674,0.0859839990735054,0.06740499287843704,0.027300996705889702,-0.013346847146749496,-0.04667648300528526,0.16857929527759552,-0.035699762403964996,0.10163594037294388,0.0357818529009819,0.23417621850967407);\n\tres += texture(iChannel0,(fragCoord + vec2(1,0)) / iChannelResolution[0].xy)*mat4(-0.39087119698524475,0.2967837452888489,0.27070629596710205,0.2570211887359619,0.21208006143569946,-0.2203509360551834,0.15642626583576202,-0.03390040993690491,-0.08819909393787384,0.005854228511452675,-0.1006210595369339,0.024046065285801888,-0.03363000601530075,0.002043970162048936,-0.034858979284763336,-0.03231789544224739);\n\tres += texture(iChannel0,(fragCoord + vec2(1,1)) / iChannelResolution[0].xy)*mat4(0.10357069224119186,0.22435441613197327,0.16284796595573425,-0.24325409531593323,0.35877615213394165,-0.16665273904800415,-0.3044176697731018,-0.06759944558143616,-0.045644693076610565,0.15152288973331451,0.046719640493392944,-0.010262105613946915,0.10164515674114227,-0.026613028720021248,-0.2703046500682831,-0.041773293167352676);\n\treturn res;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = tanh(conv3x3(fragCoord)+vec4(-0.0567379929125309,-0.04329123720526695,-0.0006866533658467233,0.006831263191998005));\n}","name":"Buf D","description":"","type":"buffer"}]}