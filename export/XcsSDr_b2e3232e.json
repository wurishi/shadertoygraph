{"ver":"0.1","info":{"id":"XcsSDr","date":"1705179653","viewed":87,"name":"nyan cat progress bar","username":"rucksack","description":"aaaa","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["genuary","genuary2024","genuary7"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float is_in_rect(vec2 uv, vec2 corner, vec2 size)\n{\n    return float(uv.x < corner.x + size.x && uv.x > corner.x\n              && uv.y > corner.y && uv.y < corner.y + size.y);\n}\n\n// Commodore colors, source https://www.c64-wiki.com/wiki/Color\nconst vec3 background_color = vec3(0, 0, 170) / 255.;\nconst vec3 red = vec3(136, 0, 0) / 255. * 1.4;\nconst vec3 orange = vec3(221, 136, 85) / 255.;\nconst vec3 yellow = vec3(238, 238, 119) / 255.;\nconst vec3 green = vec3(170, 255, 102) / 255.;\nconst vec3 blue = vec3(0, 136, 255) / 255.;\nconst vec3 purple = vec3(204, 68, 204) / 255.;\n\n// thank you for finding the correct size, VoidChicken\nconst vec2 nyan_pixels = vec2(40., 32.);\nconst float nyan_texture_width = 256.;\nconst vec2 pixel = nyan_texture_width / nyan_pixels;\nconst float nyan_scale = 3.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    uv *= 10.;\n    uv.x += 2.; // offset for actual reasonable look\n    \n    vec2 progress_size = vec2(12., 1.);\n    \n    float progress = min(mod(iTime*3., progress_size.x + 6.), progress_size.x);\n    float animation_time = iTime*5.;\n    \n    vec2 nyan_size = vec2(nyan_scale*nyan_pixels.x/nyan_pixels.y, nyan_scale);\n    vec2 nyan_pos = vec2(nyan_size.x*.5 + progress - progress_size.x * .5, 0);\n    vec2 nyan_corner = nyan_pos - nyan_size*.5;\n    vec2 nyan_uv = (uv - nyan_corner) / nyan_size;\n    nyan_uv.x /= 6.;\n    nyan_uv.x += nyan_pixels.x/nyan_texture_width*float(int(animation_time) % 6);\n    vec4 nyan_color = texture(iChannel0, nyan_uv);\n    // test w/safety margin to avoid tail clipping due to rounding errors (?)\n    float is_nyan = is_in_rect(uv, nyan_corner, vec2(nyan_size.x * .9, nyan_size.y));\n    is_nyan = float(is_nyan > 0. && nyan_color.a > 0.);\n\n    if (!(is_nyan > 0.))\n    {\n        float t = sin(uv.x*2. + floor(animation_time));\n        float wave_steps = 4.;\n        //uv.y += sin(uv.x + floor(animation_time)) * .2;\n        uv.y += nyan_size.x/nyan_pixels.x*floor(mod((t + 1.)*wave_steps / 2., wave_steps));\n    }\n\n    vec2 current_progress = vec2(progress_size.x*.5 + nyan_pos.x, progress_size.y);\n    vec2 progress_corner = vec2(-progress_size.x*.5, -progress_size.y*.5);\n    float is_progress = is_in_rect(uv, progress_corner, current_progress);\n    \n\n    vec3 col;\n    vec3 background = background_color * sqrt(progress) * .4;\n    \n    if (is_nyan > 0.)\n    {\n        col = nyan_color.rgb;\n    }\n    else if (is_progress > 0.)\n    {\n        float d = uv.y - progress_corner.y;\n        // aaaaaaaaaaa\n        if (d > 5./6.)\n        {\n            col = red;\n        }\n        else if (d > 4./6.)\n        {\n            col = orange;\n        }\n        else if (d > 3./6.)\n        {\n            col = yellow;\n        }\n        else if (d > 2./6.)\n        {\n            col = green;\n        }\n        else if (d > 1./6.)\n        {\n            col = blue;\n        }\n        else\n        {\n            col = purple;\n        }\n        col = mix(background, col, min(1., (uv.x - progress_corner.x)*(uv.x - progress_corner.x)));\n    }\n    else\n    {\n        col = background;\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}