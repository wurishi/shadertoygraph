{"ver":"0.1","info":{"id":"MclBDj","date":"1724401144","viewed":32,"name":"Light Procedural Carpet Texture","username":"rikr","description":"Just something I wanted to make while thinking of ways to only use low energy gates on hardware... Made by Rik Riesmeijer, 2024 - Copyright released to the public domain (cc0 license).","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["procedural","grid","texture","diamond","pattern","generator","carpet","detail","fabric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 p, vec2 v) {                    // Procedural Carpet Texture.\n    float s = 4096.0;                                   // Scale setting is 4k size.\n    v /= iResolution.xy / s;                            // Scale and adjust ratio.\n    ivec4 i = ivec4(s, s, v + v) >> 1;                  // Set up integer lattice.\n    i = abs(abs(i - i.zwxy) - (i >> 1)) << 11;          // Fold canvas in half twice.\n    p = fract(vec4(i ^ i.y) * (0.24 + sin(iTime / s))); // Draw colors by logic and time.\n}                                                       // By Rik Riesmeijer.\n                                                        // No rights reserved (cc0).","name":"Image","description":"","type":"image"}]}