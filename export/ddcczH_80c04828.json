{"ver":"0.1","info":{"id":"ddcczH","date":"1694720167","viewed":122,"name":"Noise in circle(GDSMBCZY)","username":"GDSMBCZY","description":"IDK","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["public"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat Circle(vec2 uv, float r, float blur){\n    float d = length(uv);\n    d = smoothstep(r, r-blur, d);\n   \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // EDIT STUFF HERE\n    //how large the circle is\n    const float Size = .88;\n    //how close the circle is to white, does nothing past 1.0\n    const float Brightness = .8;\n    //takes values from 0.0 to 1.0, is in RGB\n    const vec3 Color = vec3(0.1, 0.4, 0.3);\n   \n   \n    // THE CODE\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 uv0 = uv;\n    vec3 col = Color;\n    float d = 0.;\n\n    d = Circle(uv, Size, Size);\n   \n    float t = iTime;\n\n    d -= rand(vec2(d+t*uv.y, d+t*uv.x));\n\n    d = smoothstep(d+1., 1.4, d);\n   \n    col += vec3(d*Brightness);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}