{"ver":"0.1","info":{"id":"ssKBRm","date":"1657902118","viewed":48,"name":"Neon Screw 3","username":"murf","description":"Happy accidents","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot (float a) { float c=cos(a),s=sin(a); return mat2(c,-s,s,c); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    float t = iTime * .2;\n    \n    //uv *= mat2(-cos(t),-sin(t),-sin(t),-cos(t));\n    \n    vec3 col = vec3(0);\n    //vec3 light = vec3(cos(iTime),3,sin(iTime));\n    vec3 light = vec3(0.,5.,5.);\n    \n    vec3 ro = vec3(0,0,-1.2);\n    vec3 lookat = vec3(0);\n    \n    vec3 fw = normalize(lookat-ro),\n        r = normalize(cross(vec3(0,1,0),fw)),\n        up = cross(fw,r),\n        c = ro + fw,\n        i = c + uv.x * r + uv.y * up,\n        rd = normalize(i-ro);\n                \n    float ds, d0;\n    vec3 p;\n    \n    vec3 center = vec3(0);\n    float radius = .5; //mix(.2, .5, (sin(uv.y)*.5+.5));\n    vec3 normal = vec3(0);\n    \n    for(int i=0;i<100;i++) {\n        p = ro + rd * d0;\n        p.yz*=rot(t);\n        //radius = mix(.4, .5, (sin(p.y*p.x*100.)*.5+.5));\n        radius = mix(.4, .5, (sin(p.y*p.x*277.)*.5+.5));\n        ds = length(p-center) - radius;        \n        if(ds<0.001) break;\n        d0 += ds;\n    }\n    \n    //col.rb += sin(uv*100.);\n    \n    if(ds<0.001){\n        normal = normalize(p+.5);\n        normal = fwidth(normal)*111.;\n        \n        vec3 lDir = normalize(light-center);\n        col += vec3(0.2,0.,0.);\n        col += vec3(1,0,0)*dot(normal,lDir);\n        //col += vec3(1)*dot(reflect(lDir, normal),rd);\n        col = clamp(vec3(0),vec3(1),col);\n        \n        col = normal;\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}