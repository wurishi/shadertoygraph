{"ver":"0.1","info":{"id":"XtBSz3","date":"1445275971","viewed":210,"name":"Comic Terrain","username":"maximilian4990","description":"terrain ray marcher, weird coloring","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","terrain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//by maximilian4990\n//creative commons by-nc\n//thanks to iq for his great article about terrain raymarching\n#define DELTA 0.005//use 0.0005 for higher quality\n#define minIt 0.1\n#define maxIt 5.0\n#define EPS 0.025\nfloat noise(vec2 uv){\n\treturn length(texture(iChannel0,uv))-1.0;\n}\nfloat fbm(vec2 uv){\n    float n = 8.0*noise(uv); uv *= 2.01;\n    n += 4.0*noise(uv); uv *= 2.03;\n    n += 2.0*noise(uv); uv *= 1.98;\n    n += 1.0*noise(uv);\n    return n/15.0;\n}\nfloat terrain(vec2 p){\n    return fbm(0.008*p);\n}\nbool intersect(vec3 ro, vec3 rd, out float T){\n    float h = 0.0;\n    vec3 p = vec3(0.0);\n    float t = 0.0;\n    for(float t=minIt; t<maxIt; t+=DELTA){\n        p = ro+rd*t;\n        h = terrain(p.xz);\n        if(p.y < h){\n        \tT = t-0.5*DELTA;\n            return true;\n        }\n    }\n    return false;\n}\nvec4 shade(vec3 p, float T){\n\tif(p.y<0.2){\n    \treturn vec4(0.0,0.0,1.0,1.0);\n    }\n    vec4 col = vec4(terrain(p.xz));\n    float x = (terrain(vec2(p.x-EPS,p.z))-terrain(vec2(p.x+EPS,p.z)))/EPS;\n    bool nw=true;\n    if(p.y>0.6){\n    \tcol = vec4(1.0);\n        nw = false;\n    }\n    if(x<-0.7067){\n    \t col*=vec4(0.0,0.0,0.0,1.0);\n    }\n    if(x>-0.7067 && nw){\n      \t col*=vec4(0.0,0.3,0.3,1.0);\n    }\n    return col;\n}\nvec4 fog(vec4 col, float T){\n\treturn mix(col, vec4(0.4,0.0,0.6,1.0), T/maxIt);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0+2.0*fragCoord.xy / iResolution.xy;\n\tvec3 ro = vec3(0.0,1.0,-iTime);\n    vec3 rd = vec3(uv,-1.0);\n    float T = 0.0;\n    fragColor = vec4(0.4,0.0,0.6,1.0);\n    if(intersect(ro,rd, T))\n    {\n        fragColor = fog(shade(ro+rd*T, T), T);\n    }\n}","name":"","description":"","type":"image"}]}