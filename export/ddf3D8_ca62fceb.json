{"ver":"0.1","info":{"id":"ddf3D8","date":"1666043900","viewed":100,"name":"Some fractal business","username":"Apaksi","description":"Some fractal experimentation","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float x=uv.s, y=uv.t, time=iTime;\n    \n    \n    vec2 cen = 2.0*vec2(0.080,0.519);\n    x -= cen.x;\n    y -= cen.y;\n    float zoom = 32.248 + 154.0 * (0.5 + 0.5 * sin(time * 0.2));\n    x += cen.x/2.0;\n    y += cen.y/2.0;\n    x /= zoom;\n    y /= zoom;\n    x *= (iResolution.x / iResolution.y - 1.0) / 2.0 + 1.0;\n    x -= cen.x;\n    y -= cen.y;\n    vec3 color0 = vec3(0.);\n    vec3 color1 = vec3(0.);\n    \n    vec2 z = vec2(x, y);\n    int j=49;\n    for (int i=0; i<50; i++) {\n        vec2 z2;\n        z2.x = z.x*z.x - z.y*z.y;\n        z2.y = z.x*z.y * 2.0;\n        z = z2;\n        z += vec2(x, y);\n        x += 0.001 * sin(time*0.2 + x * 0.1);\n        //y += 0.001 * cos(time);\n        vec2 z3 = z;\n        z3.x += 2.0 + 4.0*sin(time);\n        z3.y += 1.0 + 3.0*sin(time*1.2+0.4);\n        if (length(z) > 2.0) {\n            color0.r = cos(atan(z3.y, z3.x) * 0.672);\n            color0.g = cos((length(z3) - 2.0) * -0.156 + atan(z3.y, z3.x) * 1.0);\n            color0.b = 0.252 * cos((length(z3) - 2.120) * 0.864);\n            j=i;\n            break;\n        }\n        color1.r = cos(atan(z.y, z.x) * 1000.672 * y);\n        color1.b = cos(atan(z.y, z.x) * 1000.672 * y + 1.3);\n        color1.g += 0.444 * cos((length(z) - 20.104) * 1.872);\n    }\n    \n    vec3 color = mix(color0, color1, pow(float(j) / 49.0, 10.0));\n\n    \n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}