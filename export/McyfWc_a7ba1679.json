{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// https://github.com/Experience-Monks/glsl-fast-gaussian-blur/blob/master/5.glsl\nvec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3333333333333333) * direction;\n  color += texture(image, uv) * 0.29411764705882354;\n  color += texture(image, uv + (off1 / resolution)) * 0.35294117647058826;\n  color += texture(image, uv - (off1 / resolution)) * 0.35294117647058826;\n  return color; \n}\n\nvec4 rgba(int r, int g, int b, int a)\n{\n    vec4 result;\n    result.r = float(r) / 255.0;\n    result.g = float(g) / 255.0;\n    result.b = float(b) / 255.0;\n    result.a = float(a) / 255.0;\n    return result;\n}\n\n// https://www.w3schools.com/colors/colors_picker.asp\n#define rgb(r, g, b) rgba((r), (g), (b), 255)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 scope = rgb(128, 196, 255);\n    float radius = 4.0;\n\n    // Simulation stutters sometimes and makes\n    // sincos figures jump over segments\n    float time = float(iFrame) / 480.0;\n\n    if(iMouse.z > 0.0) {\n        if(distance(fragCoord, iMouse.xy) <= radius) {\n            fragColor = scope;\n            return;\n        }\n    }\n    else {\n        float sv = iResolution.x * (0.5 + 0.4 * sin(4.0 * time));\n        float cv = iResolution.y * (0.5 + 0.4 * cos(3.0 * time));\n    \n        if(distance(fragCoord, vec2(sv, cv)) <= radius) {\n            fragColor = scope;\n            return;\n        }\n    }\n\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 bx = blur5(iChannel0, uv, iResolution.xy, vec2(0.25, 0.0000));\n    vec4 by = blur5(iChannel0, uv, iResolution.xy, vec2(0.0000, 0.25));\n    \n    float falloff = 0.99;\n    float falloffRed = 0.9999;\n    \n    fragColor = 0.5 * (bx + by);\n    fragColor.r *= falloffRed;\n    fragColor.gba *= falloff;\n    \n    \n}\n","name":"Buffer A","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"McyfWc","date":"1734516905","viewed":73,"name":"Lissajous Curves with a blur","username":"untodesu","description":"https://en.wikipedia.org/wiki/Lissajous_curve","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["oscilloscope","math","lissajous"],"hasliked":0,"parentid":"","parentname":""}}