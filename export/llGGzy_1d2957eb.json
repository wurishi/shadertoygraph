{"ver":"0.1","info":{"id":"llGGzy","date":"1475174968","viewed":94,"name":"RayTracer","username":"Tacoa","description":"dsadas","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 eyePos = vec3(0.0,0.0,-5.0);\nvec3 spherePos = vec3(0.0, 0.0, 10.0 * cos(iTime*3.0)+10.0);\nfloat r = 1.0;\n\nvec3 lightPos = vec3(-5.0, 5.0, -5.0);\nfloat lightIntensity = 1.0;\nfloat ambientIntensity = 0.1;\n\n//phong parameter\nfloat ka = 0.01;\nfloat kd = 0.69;\nfloat ks = 0.3;\nfloat alpha = 8.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 pw = vec3(p,0.0);\n\n    //ray direction\n    vec3 eyeDir = pw - eyePos; //pw-eyePos\n\t\n    vec3 tmp = eyePos - spherePos;\n\n    float a = dot(eyeDir, eyeDir);\t// dot\n    float b = 2.0 * dot(eyeDir, tmp);\n    float c = dot(tmp, tmp) - r * r;\n\n    float d = b * b - 4.0 * a * c;\n    \n    float t = -1.0;\n\n    if (d == 0.0) {\n        t = -b / 2.0 * a;\n    } else if (d > 0.0) {\n        float t1 = (-b - sqrt(d)) / (2.0*a);\n        float t2 = (-b + sqrt(d)) / (2.0*a);\n        \n        t = t1 > 0.0 && t2 > 0.0 ? min(t1, t2) : max(t1, t2);\n    }\n\n    if (t > 0.0) {\n        //ambient\n        float radianceAmb = ka * ambientIntensity;\n\n        //diffuse\n        vec3 intPos = eyePos + t*eyeDir;\t// mult\n        vec3 lightDir = lightPos - intPos;\n        lightDir = normalize(lightDir);\n        vec3 sphereN = intPos - spherePos;\n        sphereN = normalize(sphereN);\n\n        float nlDot = clamp(dot(sphereN,lightDir), 0.0, 1.0);\n\n        float radianceDif = kd * lightIntensity * nlDot;\n\n        //specular\n        float radianceSpe = 0.0;\n\n        if (nlDot > 0.0) {\n            vec3 refDir = sphereN * nlDot * 2.0 - lightDir;\n            vec3 invEyeDir = eyeDir * -1.0;\n            invEyeDir = normalize(invEyeDir);\n\n            float vrDot = clamp(dot(invEyeDir,refDir), 0.0, 1.0);\n\n            radianceSpe = ks * lightIntensity * pow(vrDot, alpha);\n        }\n\n        float radiance = clamp(radianceAmb + radianceDif + radianceSpe, 0.0, 1.0);\n        float colorVal = radiance;\n        fragColor = vec4(colorVal, 0.0, 0.0, 1.0);\n    } else{\n    \tfragColor = vec4(0.0, 0.0, 0.1, 1.0);\n    }\n\n}","name":"Image","description":"","type":"image"}]}