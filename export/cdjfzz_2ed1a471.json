{"ver":"0.1","info":{"id":"cdjfzz","date":"1689360908","viewed":117,"name":"Simple fractal tree","username":"SnackEater","description":"cool fractal tree","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){\n    return mat2(cos(a),-sin(a),sin(a),cos(a));\n}\nfloat branch(vec2 uv,float height,float size){\nvec2 branch = vec2(0,clamp(uv.y,0.,height));\n    float d = length(uv - branch);\n    return size/d;\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - vec2(.5,0);\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 col;\n    float size = .0005;\n    float height = .3;\n    uv *= 3.;\n    float d = branch(uv,height,size);\n   \n    for(float i =0.;i<mod(5. * iTime,100.);i++){\n    uv.x = abs(uv.x);\n    uv.y -= height;\n   \n    height/=1.1;\n    uv *= rot(.2);\n    float d2 = branch(uv,height,size);\n    d = max(d,d2);\n    }\n    col+= d;\n    float D = branch(uv,height,size);\n\n    col+= D;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}