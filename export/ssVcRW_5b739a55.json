{"ver":"0.1","info":{"id":"ssVcRW","date":"1654550210","viewed":22,"name":"square vs disk distribution","username":"stb","description":"Demo showing distribution of points on a square versus a disk.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random","disc","disk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Disk or disc? That is the question...\n\n// hash without sine: https://www.shadertoy.com/view/4djSRW\n#define MOD3 vec3(.1031, .11369, .13787)\nvec2 hash21(float p) {\n\tvec3 p3 = fract(vec3(p) * MOD3);\n\tp3 += dot(p3, p3.yzx + 19.19);\n\treturn fract(vec2((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y));\n}\n\n// produce a point on a disc with radius p.x and angle p.y\nvec2 diskPt(vec2 p) {\n    return sqrt(p.x) * vec2(sin(6.2832*p.y), cos(6.2832*p.y));\n}\n\nvoid mainImage( out vec4 fo, in vec2 fc )\n{\n    vec2 res = iResolution.xy;\n    vec2 p = 2.5*(fc-res/2.)/res.y;\n    vec2 offs = vec2(1.075, 0);\n    float f = 1.;\n    \n    for(float i=0.; i<4096.; i++) {\n        vec2 rnd = hash21(i);\n        if(p.x<0.)\n            // square distribution\n            f = min(f, 50.*length(p-2.*rnd+1.+offs));\n        else\n            // disk distribution\n            f = min(f, 50.*length(p-diskPt(rnd)-offs));\n    }\n    \n    fo = vec4(vec3(f), 1.);\n}","name":"Image","description":"","type":"image"}]}