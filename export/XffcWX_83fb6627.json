{"ver":"0.1","info":{"id":"XffcWX","date":"1721647141","viewed":24,"name":"Psychedelic fractal yeah","username":"ReasonMaster","description":"Psychedelic fractal yeah man","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t ) {\n    vec3 a = vec3(0.9, 0.6, 0.5);\n    vec3 b = vec3(0.7, 0.5, 0.);\n    vec3 c = vec3(1.0, 1.0, 0.5);\n    vec3 d = vec3(0.80, 0.90, 0.30);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n    float d0 = length(uv);\n    d0 -= 1.;\n    d0 = abs(d0);\n\n    \n    for (float i = .0; i < 50.; i++) {\n        uv = abs(uv);\n        uv -= .5f;\n        uv *= 1.1;\n        float angle = (d0 * .1) + ((sin(iTime) + 6.5) * .15);\n        uv *= mat2(\n            cos(angle), -sin(angle + .1),\n            sin(angle + .2), cos(angle)\n        );\n    }\n    \n    float d = length(uv);\n    d -= .2;\n    d = abs(d);\n    d = .1 / d;\n    \n    d = length(fract(uv - 1.));\n    \n    \n    \n    // Time varying pixel color\n    vec3 col = vec3(palette((d + (iTime * .1)) - .5));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}