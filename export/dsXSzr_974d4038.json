{"ver":"0.1","info":{"id":"dsXSzr","date":"1668428909","viewed":114,"name":"3 color gradient linear and srgb","username":"nebbul","description":"Comparison of two 3 color gradients\n- make photoshop gradient with 3 keys\n- convert each key color to linear pow(x, 2.2)\n- input linear values here\n- compare resulting gradients\n- conclusion is that LINEAR_TO_SRGB first before doing the gradient is better","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["color","gradient"],"hasliked":0,"parentid":"ttB3Rh","parentname":"3 color gradient"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// main shader forked from:\n// https://www.shadertoy.com/view/ttB3Rh\n\n// macro from https://www.shadertoy.com/view/lscGDr\n#define LINEAR_TO_SRGB(c) pow((c), vec3(1.0 / 2.2))\n\nvec3 gradient(float u, vec3 a, vec3 b, vec3 c, float midpoint)\n{\n    return mix(mix(a, b, u/midpoint), mix(b, c, (u - midpoint)/(1.0 - midpoint)), step(midpoint, u));\n}\n\nvec3 power(vec3 x, float exponent)\n{\n    return vec3(pow(x.x, 2.2), pow(x.y, 2.2), pow(x.z, 2.2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy / iResolution.xy;\n    float u = xy.x;\n    float v = xy.y;\n    \n    float midpoint = 0.5; // adjust position of middleColor\n    \n    // top gradient is linear color without correction\n    // values from a photoshop gradient's color picker should have an applied pow(x, 2.2) to them\n    //vec3 firstColor = vec3(1., 0.4, 0.04);\n    //vec3 middleColor = vec3(0.54, 0.001, 1.);\n    //vec3 endColor = vec3(0.0001, 0.001, 0.2); \n    \n    \n    vec3 firstColor = vec3(255., 225, 158.);//power(vec3(255., 202., 136.), 2.2);\n    vec3 middleColor = vec3(255., 133., 52.);//power(vec3(242., 74., 20.), 2.2);\n    vec3 endColor = vec3(255., 84., 40.);//power(vec3(118., 0., 255.), 2.2); \n    \n    firstColor /= 255.;\n    middleColor /= 255.;\n    endColor /= 255.;\n    \n    firstColor = power(firstColor, 2.2);\n    middleColor = power(middleColor, 2.2);\n    endColor = power(endColor, 2.2);\n    \n    vec3 col;\n\n    // first gradient in linear format without any sRGB conversion\n    if( v > 0.66)\n    {\n        col = gradient(u, firstColor, middleColor, endColor, midpoint);\n    }\n\n    // (worse) convert linear color to srgb AFTER doing the gradient math\n    if( v < 0.66 && v > 0.33)\n    {\n        vec3 gradient = gradient(u, firstColor, middleColor, endColor, midpoint);\n        col = LINEAR_TO_SRGB(gradient);\n    }\n    \n    // (better) convert linear color to srgb BEFORE doing the gradient \n    // this should match closer to the gradient in photoshop\n    if(v < 0.33)\n    {\n        \n        firstColor = LINEAR_TO_SRGB(firstColor);\n        middleColor = LINEAR_TO_SRGB(middleColor);\n        endColor = LINEAR_TO_SRGB(endColor);\n\n        col = gradient(u, firstColor, middleColor, endColor, midpoint);\n    }\n    \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}