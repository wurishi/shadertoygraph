{"ver":"0.1","info":{"id":"NlGBWd","date":"1665422894","viewed":235,"name":"Blur: Gaussian noise","username":"sh1boot","description":"Not a regular gaussian blur.\n(bottom picking from mipmap instead)","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","blur","post","gaussian"],"hasliked":0,"parentid":"lsfGWn","parentname":"Blur: Poisson Disc"},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":3,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#if 1\nfloat nrand( vec2 n ) {\treturn fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453); }\nvec2 nrand2( vec2 n ) { return vec2(nrand(n), nrand(n + 1.2345)); }\n#else\nfloat nrand( vec2 n ) {\n    return texelFetch( iChannel3, (ivec2(gl_FragCoord.xy)+ivec2(vec2(81,90)*(7.0*iTime + n)))%textureSize(iChannel3,0).xy, 0 ).r;\n }\nvec2 nrand2( vec2 n ) {\n    return texelFetch( iChannel3, (ivec2(gl_FragCoord.xy)+ivec2(vec2(81,90)*(7.0*iTime + n)))%textureSize(iChannel3,0).xy, 0 ).bg;\n}\n#endif\n\n\nvec2 pdf(vec2 x) {\n#if 0\n    // pdf for s=0.1667: `sum(uniform(-.5,.5, 3)/3)`\n    return 2.39365*exp(-18. * x * x);\n#else\n    // pdf for s=0.144: `sum(uniform(-.5,.5, 4)/4)`\n    return 2.77043 * exp(-24.1126 * x * x);\n#endif\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tuv.y = 1.0-uv.y;\n   \n    float max_siz;\n    if ( iMouse.z > 0.5 )\n\t\tmax_siz = 32.0 * (1.0-iMouse.x / iResolution.x); // * (0.5+0.5*sin(iTime));\n    else\n        max_siz = 32.0 * (0.5+0.5*sin(2.0*uv.x + iTime));\n\n    const int NUM_TAPS = 18;\n\n    if ( uv.y > 0.5 )\n    {\n        fragColor = texture( iChannel0, uv, log2(max_siz) );\n    }\n    else\n    {\n        vec4 sum = vec4(0);\n        \n        for (int i=0; i < NUM_TAPS; i++)\n        {\n            vec4 seed = vec4(1.2, 4.5, 6.7, 8.9) + fract(iTime) + float(i);\n            vec2 ofs = (nrand2(uv + seed.xy)\n                      + nrand2(uv + seed.yz)\n                      + nrand2(uv + seed.zw)\n                      + nrand2(uv + seed.wx)) * 0.25 - 0.5;\n\n            vec2 texcoord = uv + max_siz * ofs / iResolution.xy;\n            vec3 fiddle = iChannelResolution[0] / iResolution;\n            float lod = 0. + log2(length(max_siz / pdf(ofs) * fiddle.xy));\n            sum += textureLod(iChannel0, texcoord, lod);\n        }\n\n        fragColor = sum / float(NUM_TAPS);\n    }    \n}\n","name":"Image","description":"","type":"image"}]}