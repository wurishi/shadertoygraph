{"ver":"0.1","info":{"id":"dlVBWd","date":"1702668075","viewed":47,"name":"Smooth gradient background","username":"Rahiche","description":"a smooth gradient background from a texture","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient","background","player"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Simplex noise function or any other noise function\nfloat noise(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Define padding and scale factor\n    float padding = 0.2; // Adjust this value for more or less padding\n    float scale = 1.0 - 2.0 * padding;\n\n    // Adjust uv coordinates to draw the image in the center with padding\n    vec2 centeredUV = (uv - vec2(padding, padding)) / scale;\n    bool isInside = all(greaterThanEqual(centeredUV, vec2(0.0))) && all(lessThanEqual(centeredUV, vec2(1.0)));\n\n    if (isInside) {\n        // Sample the texture using centered and scaled UV coordinates\n        vec3 imageColor = texture(iChannel0, centeredUV).rgb;\n        fragColor = vec4(imageColor, 1.0);\n    } else {\n        vec2 uv = fragCoord.xy / iResolution.xy;\n\n        // Time-based variable to shift texture coordinates\n        float time = iTime * 0.1; // Adjust the multiplier to control the speed of change\n\n        // Define an array of colors with time-dependent texture coordinates\n        vec3 colors[4];\n        colors[0] = texture(iChannel0, vec2(0.4 , 0.5)).rgb; // color1\n        colors[1] = texture(iChannel0, vec2(0.3 , 0.7)).rgb; // color2\n        colors[2] = texture(iChannel0, vec2(0.5 , 0.2)).rgb; // color3\n        colors[3] = texture(iChannel0, vec2(0.7 , 0.9)).rgb; // color4\n\n        // Create a horizontal gradient\n        vec3 gradientColor = mix(colors[0], colors[1], uv.x);\n        gradientColor = mix(gradientColor, colors[2], uv.y);\n        gradientColor = mix(gradientColor, colors[3], smoothstep(0.0, 1.0, uv.x + uv.y));\n\n        fragColor = vec4(gradientColor, 1.0);\n    }\n} \n","name":"Image","description":"","type":"image"}]}