{"ver":"0.1","info":{"id":"7tlyD7","date":"1648139385","viewed":74,"name":"eval2","username":"dalyyyn","description":"building","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["building"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Remerciement à Jérémy Tapia (:\n\nfloat Union(float d1, float d2){ return min(d1, d2);}\nfloat Sub(float d1, float d2){ return max(-d1, d2);}\n\nfloat SUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n    \nfloat OpSubstraction( float d1, float d2) {return max(-d1,d2);}\n\nvec3 opRep (in vec3 p, in vec3 c)\n{\n    return mod(p+0.5*c,c)-0.5*c;\n}\n\nvec3 palette (in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d)\n{\n    return a +b*cos(6.28318*(c*t+d));\n}\n     \n\nvec2 OpUnion(vec2 d1, vec2 d2){\n    return(d1.x < d2.x) ? d1 : d2;\n}\n\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n  \n\nvec2 map(vec3 pos)\n{\n    \n    vec2 volume = vec2(.0);        \n    vec2 floor = vec2(sdBox(pos/2.0, vec3(-1.2,4.0,10.1)),1.0);     \n    vec2 box3 = vec2(sdBox(pos+vec3(10.9,8.0,10.5),vec3(5.1,20.0,10.1)),1.0);\n    vec2 box4 = vec2(sdBox(pos+vec3(-10.1,0.0,10.5),vec3(0.1,80.0,10.1)),2.0);\n    vec2 box5 = vec2(sdBox(pos+vec3(-10.9,-8.0,-10.5),vec3(5.1,30.0,0.5)),1.0);\n    \n    volume = vec2 (sdBox(pos,vec3(1.0)),1.0);           \n        \n    \n    volume = OpUnion(floor, box3);\n    volume = OpUnion(volume, box3);\n    volume = OpUnion(volume, box4);\n    volume = OpUnion(volume, box5);\n        \n    for(int rung = 0; rung < 30; rung++){\n        vec2 rungBox = vec2(sdBox(pos + vec3(2.0, 0.1 + float(rung) - 1.0/50. + float(rung) * 0.2,6.0),vec3(5.0,0.5,3.2)),1.0);\n        \n        volume = OpUnion(volume, rungBox);\n        volume = OpUnion(volume, rungBox);\n    }\n    \n    for(int rung = 0; rung < 30; rung++){\n        vec2 rungBox2 = vec2(sdBox(pos + vec3(20.0, 1. + float(rung) - 80.0/9. + float(rung) * 0.2,10.0),vec3(10.0,0.2,20.2)),1.0);\n        \n        volume = OpUnion(volume, rungBox2);\n        volume = OpUnion(volume, rungBox2);\n    }\n    \n    for(int rung = 0; rung < 30; rung++){\n        vec2 rungBox3 = vec2(sdBox(pos + vec3(20.0, 1. + float(rung) - 5.0/5. + float(rung) * 0.2,5.0),vec3(-10.0,10.2,10.2)),1.0);\n        \n        volume = OpUnion(volume, rungBox3);\n        volume = OpUnion(volume, rungBox3);\n    }\n    \n    \n           \n    \n    return volume;\n}\n\nfloat CastRay(vec3 ro, vec3 rd) \n{\n    float contact = 0.0;\n    \n    for(int marche = 0; marche < 64 ; marche++)\n    {\n        vec2 ray = map(ro + rd * contact);\n        \n        if(ray.x < (0.0002*contact))\n        {\n           return float(marche)/32.;\n        }\n        \n        contact += ray.x;\n    }\n\n    return -1.0;\n}\n\nvec3 render(vec3 ro, vec3 rd)\n{\n    float contact = CastRay(ro, rd);\n    \n    vec3 col = vec3(0.0);\n    \n    //col = palette (vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67));\n    \n    if(contact == -1.0)\n    {\n        col = vec3(0.0);\n    }\n    else\n    {\n       \n        col = vec3(1.0 - contact);\n        \n    }\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * fragCoord/iResolution.xy - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float t = 0.1;iTime * 2.0;\n        \n    vec3 cameraPos = vec3(1.2+cos(iTime)*8.0, -1.5, 6.0 + sin(iTime)*2.0);\n    vec3 cameraTar = vec3(0.0, 0.0, 0.0);\n    \n    vec3 forward = normalize(cameraTar - cameraPos);\n    vec3 right = normalize(cross(vec3(0.0, -1.0, 0.0), forward));\n    vec3 up = normalize(cross(right, forward));\n    vec3 viewDir = normalize(uv.x * right + uv.y * up + 2.0 * forward);\n    \n    vec3 col = render(cameraPos, viewDir);\n    \n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}