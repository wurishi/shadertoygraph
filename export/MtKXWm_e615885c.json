{"ver":"0.1","info":{"id":"MtKXWm","date":"1484689463","viewed":136,"name":"Color LERPing","username":"sandsfish","description":"A reference sketch for linear interpolation and mixing of colors.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","color","lerp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Normalized fragment location\n    vec2 st = fragCoord.xy / iResolution.xy;\n\n    // Colors\n    vec3 red = vec3(1.0, 0.0, 0.0);\n    vec3 blue = vec3(0.0, 0.0, 1.0);\n    vec3 half_blue = vec3(0.0, 0.0, 0.5);\n    vec3 half_red = vec3(0.5, 0.0, 0.0);\n    vec3 black = vec3(0.0, 0.0, 0.0);\n    \n    // One way to mix colors is to use a percentage:\n    //vec3 color = mix(red, blue, st.s);\n    \n    // This can be accomplished by multiplying one side\n    // by the percentage value and the other by the \n    // inverse of the percentage.\n    vec3 color = black * (1.0 - st.s) + red * st.s;\n    \n    // Center Line\n    if(fragCoord.x-0.5 == iResolution.x/2.0) {\n        fragColor = vec4(0.,0.,0.,1.0);\n    } else {\n    \tfragColor = vec4(color,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}