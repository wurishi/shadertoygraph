{"ver":"0.1","info":{"id":"XdBBzV","date":"1501079625","viewed":182,"name":"Domain warping","username":"lordjone","description":"Dirty candies paint :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","domain","warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\nmat2 m = mat2( vec2 (2.1, 1.0), vec2(-1.0, 2.1) );\n\nfloat noise_f(vec2 p)\n{\n    return sin(1.66*p.x)*sin(1.66*p.y);\n}\n\nfloat domain_pattern(vec2 p)\n{\n    float f = 0.0;\n    float amp = 2.0; \n    float kAmp = 0.5;\n    float freq = 2.63;\n    float kFreq = 0.53;\n    \n    f += amp*noise_f(p); \tp = m*p*freq; amp *=kAmp; freq *=kFreq;\n    f += amp*noise_f(p);  \tp = m*p*freq; amp *=kAmp; freq *=kFreq;\n    f += amp*noise_f(p);   \tp = m*p*freq; amp *=kAmp; freq *=kFreq;\n    f += amp*noise_f(p);\n    \n    f = fract(f);\n    \n    return f;\n}\n\nfloat domain_pattern_2(vec2 p)\n{\n    float f = 0.0;\n    float amp = 1.43; \n    float kAmp = 0.25;\n    float freq = 6.23;\n    float kFreq = 0.03;\n    \n    f += amp*noise_f(p); \tp = m*p*freq; amp *=kAmp; freq *=kFreq;\n    f += amp*noise_f(p);  \tp = m*p*freq; amp *=kAmp; freq *=kFreq;\n    f += amp*noise_f(p);   \tp = m*p*freq; amp *=kAmp; freq *=kFreq;\n    f += amp*noise_f(p);\n    \n    f = fract(f);\n    \n    return f;\n}\n\nfloat domain_pattern_3(vec2 p)\n{\n    return domain_pattern_2(p);\n}\n\nvec3 colorize(float hp, float gp, float fp)\n{\n   vec3 color = vec3(0.0);\n      \n    vec3 ch = mix(vec3(0.0, 1.0, 0.97), vec3(1.0, 0.0, 0.66), hp);\n    vec3 cg = mix(vec3(1.0, 1.0, 0.27), vec3(0.0, 1.0, 0.96), gp);\n    vec3 cf = mix(vec3(0.0, 1.0, 0.47), vec3(0.0, 0.3, 1.0), fp);\n    \n    //color = ch;\n    //color = cg;\n    //color = cf;\n    \n    // Colorize 1\n    //color = mix( cf, mix(cg, ch, gp), fp);\n    \n    // Colorize 2\n    color = mix(cg, ch, gp);\n    color += vec3(hp, gp, fp)*vec3(0.66,0.26,0.13)*(0.5 + 0.5*sin(iTime));\n    \n    //color = vec3(hp);\n    //color = vec3(gp);\n    //color = vec3(fp);\n    return color;\n}\n\nvec3 domain_warp(vec2 p)\n{\n\t// f(p) = f(g(p)) = f( p + h(p) ) = fbm( p + fbm(p) )\n    // g(p) = p + h(p) = p + fbm(p)\n    \n    float hp = domain_pattern(p);\n    float gp = domain_pattern_2(p + hp);\n \tfloat fp = domain_pattern_3(p + gp);\n    \n    return colorize(hp, gp, fp);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Uvs mapping\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.0*uv -1.0;\n    \n    // Update rotation matrix\n    const float kSpeed = 0.002;\n    const float period = 2.0*PI;\n    const float gamma = kSpeed*period;\n    float alpha = gamma*iTime;\n    const float zoom = 1.9;\n    float sine = sin(alpha)*zoom;\n    float cose = cos(alpha)*zoom;\n    \n    m = mat2( vec2(cose, -sine), \n              vec2(sine, cose) );\n    \n    // Output color\n    fragColor = vec4(vec3(domain_warp(uv)), 1.0);\n}","name":"Image","description":"","type":"image"}]}