{"ver":"0.1","info":{"id":"4ltcRN","date":"1531828903","viewed":169,"name":"Funky road","username":"Firzen_","description":"Just playing around with color compositions.","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["visualization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sjXRd","filepath":"https://soundcloud.com/renelavice/dont-look-down-feat-bullysongs","previewfilepath":"https://soundcloud.com/renelavice/dont-look-down-feat-bullysongs","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi (acos(-1.))\n\nvec3 color (float t)\n{\n    vec3 a,b,c,d;\n    a = vec3(0.5);\n    b = vec3(0.5);\n    c = vec3(1.);\n    d = vec3(0., 0.33, 0.66);\n    return a+b*cos(2.*pi*(t*c+d));\n}\n\nvec3 roadCol (float t)\n{\n    vec3 a,b,c,d;\n    a = vec3(0.5);\n    b = vec3(0.5);\n    c = vec3(6.,6.03,6.);\n    d = vec3(0.0, 0.1, 0.);\n    return a+b*cos(2.*pi*(t*c+d));\n}\n\nvec3 offroadCol (vec2 uv, float t)\n{\n    t += cos(uv.x*7.) + sin(0.2+7.*(uv.y+t));\n    vec3 a,b,c,d;\n    a = vec3(0.5, 0.7, 0.5);\n    b = vec3(0.5, 0.8, 0.5);\n    c = vec3(3.,5.,2.);\n    d = vec3(0.25, 0., 0.5);\n    return a+b*cos(2.*pi*(t*c+d));\n}\n\nvec4 rainbow(vec2 uv, float t)\n{\n    uv.x -= 0.8;\n    float dist = pow(uv.x, 2.)+pow(uv.y,2.) + 0.1*t;\n    float brightness = smoothstep(0.3,0.5, dist) * smoothstep(1.3,1.1, dist);\n    return vec4(color(dist), (0.3+t)*brightness);\n}\n\nfloat roadPos(float t)\n{\n    return 0.8 + 0.2*cos(2.1*t) + 0.1*sin(0.2+t);\n}\n\nvec3 road(vec2 uv, float t)\n{\n    float medDist = uv.x - roadPos(t+uv.y);\n    medDist *= (uv.y+0.2);\n    float onRoad = smoothstep(-0.1,-0.09, medDist) * smoothstep(0.1,0.09, medDist);\n    return  mix(offroadCol(vec2(medDist, uv.y), t), roadCol(t+uv.y), onRoad);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    float f = texture(iChannel0, vec2(0.001, 0.)).r;\n    float dx = 0.1*f*texture(iChannel0, vec2(uv.y, 0.)).r;\n    \n    float t = iTime + 0.2*f;\n    //periodic acceleration term\n    t = t+cos(0.3*t);\n\n    vec4 rb = rainbow(uv, f);\n    vec3 rd = road(uv + vec2(dx, 0.), t);\n    vec3 col = rb.rgb*rb.a + rd*(1.-rb.a);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}