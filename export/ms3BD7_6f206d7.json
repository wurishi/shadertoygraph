{"ver":"0.1","info":{"id":"ms3BD7","date":"1697228408","viewed":188,"name":"Code Golfer's Tonemap: tanh","username":"Xor","description":"Here's a tiny function that can serve as a simple tonemap.\n    tanh(x) maps  the range [-∞, +∞] to the range [-1, +1].\n    This works pretty good for the size of the code.","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"Code Golfer's Tonemap: tanh\" by @XorDev\n\n    Here's a tiny function that can serve as a simple tonemap.\n    tanh(x) maps  the range [-∞, +∞] to the range [-1, +1].\n    This works pretty good for the size of the code.\n    \n    If you don't care about code size, there are many better approaches:\n    shadertoy.com/view/WdjSW3\n\n    X: x.com/XorDev/status/1712919724885958885\n*/\nvoid mainImage( out vec4 O, vec2 I )\n{\n    O.xy=iResolution.xy;\n    //Radial gradient for demo\n    O = vec4(1,.5,.2,1) / dot(I+=I-O.xy,I)*O.y*O.y;\n    //Tonemap right side\n    I.x<0.? O : O=tanh(O);\n}","name":"Image","description":"","type":"image"}]}