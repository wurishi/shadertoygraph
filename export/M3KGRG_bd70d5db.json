{"ver":"0.1","info":{"id":"M3KGRG","date":"1717844568","viewed":51,"name":"Simple Grain Filter","username":"emperor_luffy","description":"Grain Filter.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://godotshaders.com\n\nfloat rand(vec2 uv){\n    return fract(sin(dot(uv, vec2(21.9132, 87.435))) * 51816.9134);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //texture Color\n    vec3 color = texture(iChannel0, uv).rgb;\n    \n    // rand() generates noise values between [-1.0,1.0[ and takes their fractional part\n    float noise = (rand(uv+fract(iTime)) - 0.5) * 2.0;\n    \n    float grain_amount = 0.1;\n    float grain_size = 1.5;\n    \n    color += noise * grain_amount * grain_size;\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}