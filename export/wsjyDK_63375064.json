{"ver":"0.1","info":{"id":"wsjyDK","date":"1587372364","viewed":337,"name":"simple 2d distance functions","username":"benhardy","description":"just an experiment with distance functions in 2d, will be using in a tutorial on raymarching as a preface to showing it in 3d","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926536\n\nfloat d_circle(vec2 point, vec2 center, float radius) {\n    return length(point - center) - radius;\n}\n\nfloat d_box(vec2 point, vec2 size, float rounding) {\n    return length(max(vec2(0.0),abs(point) - size)) - rounding;\n}\n\nvec2 radial_symmetry(vec2 point, float ways) {\n    vec2 prad = vec2(length(point), atan(point.x, point.y) + PI);\n    prad.y = mod(prad.y, PI*2.0/ways) - PI/ways;\n    return prad.x*vec2(cos(prad.y), sin(prad.y));\n}\n\nvec2 rotate(vec2 point, float angle) {\n    return vec2(point.x * cos(angle) + point.y * sin(angle),\n                point.x * sin(angle) - point.y * cos(angle));\n}\n\nvec3 color_rings(float d) {\n    float level = floor(d) / 5.0;\n    if (fract(d) < 0.1 && d<=5.2) {\n        return vec3(level) * 0.75;\n    } else {\n        return vec3(level) * 0.5 + 0.5;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float range = 30.0;\n    \n    vec2 point  = (fragCoord/iResolution.xy - vec2(0.5,0.5))\n        * vec2(1.0, iResolution.y / iResolution.x) * range\n        ;\n    vec2 cpoint = radial_symmetry(point, 5.0);\n    \n    vec2 center = vec2(5,0);\n    float circ = d_circle(cpoint, center, 2.0);\n    vec2 boxp = rotate(point, iTime*0.2) + \n        vec2(8.0*sin(iTime*0.19), 7.0*cos(iTime*0.17));\n    float box = d_box(boxp, vec2(6, 1.2), 0.10);\n//    float bevel = (box + circ) -0.5;\n    float cornerbit = max(box,circ) - 0.5;\n    float d = min(min(box,circ), cornerbit);\n    // Time varying pixel color\n    vec3 col = vec3(1);\n    if (d < 0.0) {\n        col = vec3(0.7,0.2,0.2);\n    } else {\n        col = color_rings(d);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}