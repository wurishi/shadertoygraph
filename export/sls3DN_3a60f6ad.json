{"ver":"0.1","info":{"id":"sls3DN","date":"1622479525","viewed":116,"name":"fleshy voronoi","username":"schobbejack","description":"fleshy polar voronoi","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint hash2(uint x)\n{\n    x ^= x >> 16;\n    x *= 0x7feb352dU;\n    x ^= x >> 15;\n    x *= 0x846ca68bU;\n    x ^= x >> 16;\n    return x;\n}\n\nfloat rand(vec2 uv)\n{\n    uint fb = floatBitsToUint(uv.y)^hash2(floatBitsToUint(uv.x));\n\n    fb = hash2(fb) & 0x007fffffu | 0x3f800000u;\n    float f = uintBitsToFloat(fb) - 1.0;\n\n    return f;\n}\n\nvec2 polar(vec2 uv)\n{\n    return vec2(length(uv),(atan(uv.x,uv.y))*1.);\n}\n\nfloat v(vec2 uv)\n{\n    float grid_size = 6.;\n    uv = (polar(uv)-vec2(iTime*0.2,0.)) * grid_size;\n    uv.y =abs(uv.y*0.12);\n    vec2 i_uv = floor(uv);\n    vec2 f_uv = fract(uv);\n        \n    const float m = sqrt(2.);\n    float r = m;\n    \n    for(float y = -1.; y <= 1.; y++)\n    {\n        for(float x = -1.; x <= 1.; x++)\n        {\n            vec2 n = vec2(x,y);\n            vec2 p = vec2(rand(i_uv+n));\n            p = vec2(sin(p.x*(4.+iTime)*0.5),cos(p.y*iTime*1.5))*0.5+0.5;\n            vec2 d = (n + p - f_uv);\n            r = min(r,length(d));\n        }\n    }\n    \n    return 1.0-pow(r*(0.5*m),0.1);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(pow(length(uv*.4),2.))*vec3(0.31,0.13,.2)*v(uv)*40.;\n    \n    fragColor = vec4(pow(col,vec3(1.0/2.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}