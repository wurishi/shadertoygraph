{"ver":"0.1","info":{"id":"XtdBW8","date":"1539407072","viewed":94,"name":"Bouncy line thing.","username":"scratch13764","description":"IT WORKS YEASS\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["line","distance","point"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= 0.5; //Puts the origin at the center of the screen\n\n    float col;\n        \n    float lm = sin(iTime); //slope\n    float lb = sin(iTime*0.8)/3.0; //intercept\n    \n//Slope/intercept declarations manipulate line\n    //second line\n    float lmp = 0.0-(1.0/lm); //calculates the slope of the perpendicular line\n    float lbp = uv.y-lmp*uv.x; //and the intercept\n    \n    //Intersection\n    float ix = (lbp-lb)/(lm-lmp); //Intersection Y\n    float iy = lm*(ix)+lb; //Intersection X based off of the first equation\n    //distance\n    float dist = sqrt(pow((uv.x - ix),2.0)+pow((uv.y - iy),2.0));\n    \n    col = smoothstep(0.1,0.0,dist);\n                     \n    fragColor = vec4(vec3(col),1.0); //OOH shiny\n}","name":"Image","description":"","type":"image"}]}