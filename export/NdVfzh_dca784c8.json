{"ver":"0.1","info":{"id":"NdVfzh","date":"1657663414","viewed":117,"name":"Bary ray triangle intersection","username":"jozxyqk","description":"Simple glsl function to compute barycentric coordinates for a ray-triangle intersection.\n\nBased on:\nhttps://cadxfem.org/inf/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["triangle","intersection","barycentric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nbool intersectTriangle(vec3 start, vec3 dir, vec3 a, vec3 b, vec3 c, out vec3 baryCoord)\n{\n  vec3 d = dir;\n  vec3 t = start - a;\n  vec3 e1 = b - a;\n  vec3 e2 = c - a;\n  vec3 p = cross(d, e2);\n  vec3 q = cross(t, e1);\n  float det = dot(p, e1);\n\n  // negative det = backface\n  if (det < 0.0)\n      return false;\n\n  // zero det = coplanar\n  if (abs(det) < 1e-6)\n      return false;\n\n  vec2 bary2 = vec2(dot(p, t), dot(q, d)) / det;\n  // hitTime = dot(q, e2) / det;\n  \n  baryCoord = vec3(1.0 - bary2.x - bary2.y, bary2);\n\n  return !any(lessThan(baryCoord, vec3(0.0))) && !any(greaterThan(baryCoord, vec3(1.0)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 start = vec3(0.0);\n    vec3 dirPoint = vec3(uv * 2.0 - 1.0, 1.0);\n    vec3 dir = dirPoint - start;\n    \n    vec3 a = vec3(-0.5, -0.5, 1.0);\n    vec3 b = vec3(-0.5, 0.5, 1.0);\n    vec3 c = vec3(0.5, -0.5, 1.0);\n\n    vec3 baryCoord;\n    if (!intersectTriangle(start, dir, a, b, c, baryCoord))\n        baryCoord = vec3(0.0);\n\n    vec2 at = vec2(1.0, 0.8);\n    vec2 bt = vec2(0.4, 0.7);\n    vec2 ct = vec2(0.7, 1.0);\n    \n    vec2 texCoord = baryCoord.x * at + baryCoord.y * bt + baryCoord.z * ct;\n    vec4 color = texture(iChannel0, texCoord);\n    fragColor = color;\n\n    // Mix in false color to show baryCoord\n    fragColor = mix(fragColor, vec4(baryCoord, 1.0), 0.5);\n}","name":"Image","description":"","type":"image"}]}