{"ver":"0.1","info":{"id":"lcccDB","date":"1732410105","viewed":38,"name":"15-362 Reci Shaders","username":"kngcore","description":"yay","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["yay"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette(in float t)\n{\n    vec3 a = vec3(0.5);\n    vec3 b = vec3(0.5);\n    vec3 c = vec3(1.0);\n    vec3 d = vec3(0.0, 0.1, 0.2);\n    \n    return a + b*cos( 6.283185*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y * 2.0 - iResolution.xy/iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0,0.0,0.0);\n    float NUM_ITERATIONS = 3.0;\n    \n    for (float i = 0.0; i < NUM_ITERATIONS; i++) {\n    \n        uv = fract(uv*1.5)-0.5;\n\n        vec3 col = palette(length(uv0) + 0.4*iTime + 0.7*i);\n\n        float d = length(uv) * exp(-length(uv0));\n        d = sin(d * 8.0 + iTime)/8.0;\n        d = abs(d);\n        d = 0.01 / d;\n        \n        d = pow(d, 1.3);\n\n        col *= d;\n        finalColor += col;\n    }\n    \n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}