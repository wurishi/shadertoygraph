{"ver":"0.1","info":{"id":"ddVczW","date":"1695857733","viewed":130,"name":"Corre!","username":"Elsio","description":"Olha o bicho vino! ","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","fire","cave","fireball","tunel","run","caverna"],"hasliked":0,"parentid":"dsKczW","parentname":"Neve"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(r) mat2(cos(r), sin(r), -sin(r), cos(r))\n#define t iTime\n#define r iResolution\n\n/*\n    mais uma variação de https://www.shadertoy.com/view/dsKczW\n    \n    (follow the forked link)\n    \n*/ \n\nvoid mainImage(out vec4 o, vec2 u) {    \n    o -= o;\n    u = (u - r.xy / 2.) / r.y;\n    \n    vec2 q; \n    vec3 D = normalize(vec3(u, 1) * r.y),\n         p = vec3(sin(t * .78), cos(t) * .2, -t),\n         k = p, f;     \n    \n    k += vec3( cos(3.*t), sin(2.*t), \n               sin(4.*t) + 10.) * .2;\n    \n    float a, i, d = 1.;\n    D.zy *= rot(sin(t) * .4);\n    D.zx *= rot(cos(t) * .7);\n    \n    while(i++ < 400. && d > .01){\n        q = fract(p.xz) - .5;\n        d = min(length(q) - .2, -abs(p.y) + .2);\n        d = min(d, length(p - k) - .35);\n\n        int j; a = 1.; \n        while(j++ < 15) \n            f = p * a * 8., \n            f.yz *= rot(a),\n            d += abs(dot(sin(f), vec3(1))) / a * .05,\n            a += a;\n        \n        p += D * d * .3;\n    }\n    o += 4. / i + vec4(12, 8, 7, 0) / length(p - k) * .03 - 30.*d; \n}","name":"Image","description":"","type":"image"}]}