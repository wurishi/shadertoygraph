{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define ONE 0.00390625\n#define ONEHALF 0.001953125\n\n\n#define rgb(r,g,b) vec4(float(r) / 255.0, float(g) / 255.0, float(b) / 255.0, 1.0)\n\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\n// Perlin simplex noise\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n\t\t\t\t\t -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n//  i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n//  i1.y = 1.0 - i1.x;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 innerColor = rgb(244, 207, 4);\nvec4 middleColor = rgb(227, 210, 225);\nvec4 outerColor = rgb(203, 78, 187);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n\t\n\tuv = (uv + (snoise(uv * vec2(4.0, 14.0)) * 0.06) - vec2(.02, .02));\n\n\tfloat split = .6;\n\t\n\tvec4 color;\n\tif(uv.x < split) {\n\t\tcolor = (innerColor * ((split - uv.x) * (4.0*split))) + (middleColor * (uv.x * 2.0));\n\t} else {\n\t\tcolor = (middleColor * ((split * 2.0) - uv.x) * 2.0) + (outerColor * ((uv.x - split) * 2.0));\n\t}\n\t\n\tfloat fromCenter = abs(uv.y - .5) * 1.75;\n\tcolor = (color * (1.0 - sin(fromCenter))) + (outerColor * sin(fromCenter + .5));\n\t\n\n\tfragColor = color;\n\t//float c = snoise(uv * vec2(12.0, 14.0));\n\t//fragColor = vec4(c, c, c, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xss3R4","date":"1363994414","viewed":505,"name":"Flower shader","username":"nitelite","description":"Color of the flower petals","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["flowercolor"],"hasliked":0,"parentid":"","parentname":""}}