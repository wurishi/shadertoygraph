{"ver":"0.1","info":{"id":"mdKXDh","date":"1681062018","viewed":74,"name":"Fork rgb noise","username":"mehow_one","description":"simple rgb noise shift put into a function for reausability","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","rgb"],"hasliked":0,"parentid":"DddGzX","parentname":"rgb noise in movement"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rand(vec2 uv, float t) {\n    float r = fract(sin(dot(uv, vec2(1225.6548, 321.8942))) * 4251.4865 + t);\n    float g = fract(sin(dot(uv + 0.1, vec2(1225.6548, 321.8942))) * 4251.4865 + t);\n    float b = fract(sin(dot(uv + 0.2, vec2(1225.6548, 321.8942))) * 4251.4865 + t);\n    return vec3(r,g,b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    vec3 col = rand(uv,iTime);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}