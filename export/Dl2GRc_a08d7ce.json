{"ver":"0.1","info":{"id":"Dl2GRc","date":"1673627768","viewed":83,"name":"Rendering integers","username":"ianertson","description":"Can't seem to figure out how to get the text smaller so that I could fit more than 2 digits.\nAny suggestions would be cool!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["numbers","integers","ints"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n*  Can't seem to figure out how to get the text smaller,\n   so that I could fit more than 2 digits.\n   \n   Any suggestions or help would be cool! :)\n*/\n\n#define NUM_X 16\n#define NUM_Y 16\n#define STACK_SIZE 6\n\nvec3 getNum(vec2 uv, inout float n, inout int[STACK_SIZE] stack, inout int stackIdx) {\n   if (uv.x < 1.0) return vec3(0.0);\n    uv.y -= 3.0;\n    uv.x -= 1.0;\n    int rem = int(n)%10;\n    n /= 10.0;\n    int k = stackIdx > -1 ? stack[stackIdx] : int(n);\n    uv.x += float(k);\n    stack[stackIdx++] = rem;\n    return textureGrad( iChannel0, uv/16., dFdx(uv/16.),dFdy(uv/16.) ).rgb;\n}\n\nvec3 renderNumber(vec2 uv, float num) {\n    vec3 col = vec3(0.0);\n    \n    uv.x += 0.25;\n\n    int stack[STACK_SIZE];\n    int stackIdx = -1;\n    \n    for (int i = 0; i < 3; i++) {\n        vec3 nextCol = getNum(uv, num, stack, stackIdx);\n        if (length(nextCol) <= 0.001) break;\n        col += nextCol;\n        uv.x -= 0.5;\n    }\n\n    return vec3(col.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 fc  = fragCoord;\n    vec2 uv = (fc-vec2(-res.x, res.y))/res;\n    \n    float num = clamp(fract(1.0+cos(iTime*0.1))*99.0, 1.1, 100.0);\n\n    vec3 col = renderNumber(uv, num);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}