{"ver":"0.1","info":{"id":"MfXfW4","date":"1723745356","viewed":21,"name":"color circle + distortion","username":"jedikoops","description":"yep","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float number = 2.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + number*cos(iTime+uv.xyx+vec3(0,2,4));\n\n   float radius = 150.0;\n   float amp = 10.0;\n   float distortionFactor = 10.0;\n   vec2 center = iMouse.xy;\n   \n   radius = amp * sin(iTime) + radius - amp;\n   \n   if(length(fragCoord - center) < radius){\n       fragColor = vec4(col, 1.0);\n       return;\n}\n    vec2 centerD = center - fragCoord;\n    vec2 mappedC = fragCoord + centerD *\n    (distortionFactor / (radius - length(centerD)));\n   \n   // Output to screen\n   fragColor = texture(iChannel0, mappedC/ iResolution.xy);\n}","name":"Image","description":"","type":"image"}]}