{"ver":"0.1","info":{"id":"cl33WB","date":"1683084889","viewed":46,"name":"Fractal Ripple Interference","username":"Bhar","description":"simple CA","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["neural"],"hasliked":0,"parentid":"mtc3Rl","parentname":"Pulsing diamond on fire"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = 0.5*texture(iChannel0,uv);\n    col.r+=0.5;\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\n\nfloat tanhAct(float x){\n    return (exp(x)-exp(-x))/(exp(x)+exp(-x));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n        vec2 uv = fragCoord/iResolution.xy;\n        \n        vec4 prevColLeft = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(-1,0),0);\n        vec4 prevColCenter = texelFetch(iChannel0,ivec2(fragCoord),0);\n        vec4 prevColRight = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(1,0),0);\n        vec4 prevColDown = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(0,-1),0);\n        vec4 prevColUp = texelFetch(iChannel0,ivec2(fragCoord)+ivec2(0,1),0);\n        float keyUp = texelFetch(iChannel2,ivec2(KEY_UP,0),0).x;\n\n        vec4 col = prevColCenter;\n        \n        if(fragCoord.x<220.0 && fragCoord.x>200.0 && fragCoord.y<120.0 &&fragCoord.y>100.0){\n            //col.r +=(prevColLeft.r*3.0*prevColRight.r-2.0*prevColUp.r*prevColDown.r)*iTimeDelta;\n            //col.b +=(-prevColCenter.b+prevColLeft.r)*iTimeDelta;\n            //col.g +=(prevColCenter.r*prevColDown.g)*iTimeDelta;\n            \n        }\n        else if(fragCoord.x<250.0 && fragCoord.x>230.0 && fragCoord.y<120.0 &&fragCoord.y>100.0){\n            //col.r +=(prevColLeft.r-2.0*prevColUp.r*prevColLeft.r)*iTimeDelta;\n            //col.b +=(-prevColCenter.b+prevColLeft.r)*iTimeDelta;\n            //col.g +=(prevColCenter.r*prevColDown.g)*iTimeDelta;\n            \n        }\n        else{\n            //col*=0.99;\n        }\n       \n        col.r +=(prevColLeft.r*prevColDown.r-prevColUp.r*prevColRight.r)*iTimeDelta*5.0;\n        //col.g +=(0.3*prevColLeft.r-0.7*prevColUp.g+prevColCenter.b)*iTimeDelta*4.0;\n        //col.b +=(prevColDown.g*prevColLeft.r)*iTimeDelta*4.0;\n        \n        \n        \n        \n       \n\n        col.r = clamp(col.r,-1.0,1.0);\n        col.g = clamp(col.g,-1.0,1.0);\n        col.b = clamp(col.b,-1.0,1.0);\n        \n        \n        \n        \n        fragColor = col;\n        if (iFrame==1){\n        //fragColor.rgb = vec3(sin(10.0*fragCoord.x/iResolution.x)+cos(10.0*fragCoord.y/iResolution.y),cos(20.0*fragCoord.y/iResolution.y),0);\n        fragColor.r = sin(20.0*fragCoord.x/iResolution.x)+cos(6.0*fragCoord.y/iResolution.y);\n        }\n\n\n    \n}\n\n//home-cooked\n//col.r += (col.r*col.z*0.5)*iTimeDelta;\n//col.g += (0.3*col.b)*iTimeDelta;\n//col.b += (-0.4*col.g)*iTimeDelta;\n\n//lifelike\n//col.r +=(prevColLeft.r*3.0*prevColRight.r-2.0*prevColUp.r*prevColDown.r)*iTimeDelta;","name":"Buffer B","description":"","type":"buffer"}]}