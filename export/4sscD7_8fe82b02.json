{"ver":"0.1","info":{"id":"4sscD7","date":"1488502614","viewed":241,"name":"Testing Illumination","username":"SalikSyed","description":"A simple strobing horizontal fluorescent light.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat computeIllumination(vec2 start, float len, vec2 uv) {\n    vec2 p0 = vec2(start.x, start.y);\n    vec2 p1 = vec2(start.x + len, start.y);\n\t// compute illumination based on equation:\n\treturn log(p1.x-uv.x + length(uv - p1)) - log(p0.x-uv.x + length(uv-p0));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // testing out \n    // contribution to O=(0,0) of 1 edge, \n    // assumed horizontal from P0=(x0,y) to P1=(x1,y): ln(x1 + ||OP1||) - ln(x0+||OP0||)\n\t\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n   \t\n    \n    float illumination = 0.0;\n    vec2 start = vec2(0.2, 0.5);\n    illumination += 0.25*(0.5*sin(iTime)+0.5) * computeIllumination(start, 0.4, uv);\n    \n\tfragColor = vec4(vec3(sqrt(illumination)), 1.);\n}","name":"Image","description":"","type":"image"}]}