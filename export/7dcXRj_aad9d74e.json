{"ver":"0.1","info":{"id":"7dcXRj","date":"1633510367","viewed":409,"name":"Lazy edge detection","username":"iY0Yi","description":"I want Canny, but I've been lazy.\nThere is no correct algorithm here.","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["edge","sobebe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float thre = .025;\n\nfloat sobebe(vec2 fragCoord, vec2 xoff, vec2 yoff){\n    float gxn = texture(iChannel0, (fragCoord+xoff)/iResolution.xy).r;\n    float gxp = texture(iChannel0, (fragCoord-xoff)/iResolution.xy).r;\n    float gyn = texture(iChannel0, (fragCoord+yoff)/iResolution.xy).r;\n    float gyp = texture(iChannel0, (fragCoord-yoff)/iResolution.xy).r;\n    float gx = gxn-gxp;\n    float gy = gyn-gyp;\n    float grad = sqrt(gx*gx + gy*gy);\n    return grad;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float edge = sobebe(fragCoord, vec2(1,0), vec2(0,1));\n    float a = sobebe(fragCoord, vec2(1,1), vec2(-1,1));\n\n    if(edge<a) edge *= 0.6;\n    if(edge<thre) edge = .0;\n    edge = smoothstep(.0, .1, edge);\n    \n    vec3 col = mix(vec3(0.875,0.835,0.749), vec3(0.102,0.082,0.039), 1.-edge);    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}