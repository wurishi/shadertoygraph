{"ver":"0.1","info":{"id":"Nljfzy","date":"1652379672","viewed":996,"name":"pencil sketch filter","username":"JoeyTheGreat","description":"each pixel based on total color difference with 8 surrounding pixels","likes":8,"published":1,"flags":2,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"fl2BzG","parentname":"hsv/rgb demo"},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgbToHsv(vec3 rgb){\n    vec3 hsv = vec3(0.);\n    float cmax = max(max(rgb.x, rgb.y), rgb.z);\n    float delta = cmax - min(min(rgb.x, rgb.y), rgb.z);\n    if(delta != 0.){\n        if(cmax == rgb.x)\n            hsv.x = mod((rgb.y - rgb.z) / delta , 6.);\n        if(cmax == rgb.y)\n            hsv.x = (rgb.z - rgb.x) / delta + 2.;\n        if(cmax == rgb.z)\n            hsv.x = (rgb.x - rgb.y) / delta + 4.;\n    }\n    hsv.x /= 6.;\n    if(cmax != 0.)\n        hsv.y = delta / cmax;\n    hsv.z = cmax;\n    return hsv;\n}\nvec3 hsvToRgb(vec3 hsv){\n    vec3 rgb = vec3(0.);\n    vec3 t = vec3(hsv.y * hsv.z, 0., 0.);\n    t.y = t.x * (1. - abs(mod(hsv.x * 6., 2.) - 1.));\n    switch (int(floor(hsv.x * 6.))){\n    case 0:\n        rgb = t;\n        break;\n    case 1:\n        rgb = t.yxz;\n        break;\n    case 2:\n        rgb = t.zxy;\n        break;\n    case 3:\n        rgb = t.zyx;\n        break;\n    case 4:\n        rgb = t.yzx;\n        break;\n    case 5:\n        rgb = t.xzy;\n    }\n    rgb += hsv.z - t.x;\n    return rgb;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).xyz;\n    float noise = 0.;\n    int range = 1;\n    for(int i = int(fragCoord.x) - range; i <= int(fragCoord.x) + range; i++){\n        for(int j = int(fragCoord.y) - range; j <= int(fragCoord.y) + range; j++){\n            vec3 p = texture(iChannel0, vec2(i, j) / iResolution.xy).xyz;\n            noise += pow(col.x - p.x, 2.) + pow(col.y - p.y, 2.) + pow(col.z - p.z, 2.);\n        }\n    }\n    /*\n    if(noise > .5)\n        fragColor = vec4(0.);\n    else\n        fragColor = vec4(1.);\n    */\n    fragColor = vec4(1.-(2.*vec3(noise)), 1.);\n}","name":"Image","description":"","type":"image"}]}