{"ver":"0.1","info":{"id":"MdKGDy","date":"1456284630","viewed":191,"name":"simple eyeball tut from iq","username":"amdbcg","description":"This is the result from this tutorial: <br/>https://www.youtube.com/watch?v=emjuqqyq_qc&feature=youtu.be&t=18 <br/>in order to follow along, you will need a noise function. you can copy mine or make your own. <br/>","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","eyeball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//alternative noise implementation\nfloat hash( float n ) {\n    return fract(sin(n)*43758.5453123);\n}\nmat2 m = mat2 (0.8 ,0.6,-0.6,0.8);\n\nfloat noise( in vec2 x ) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0;\n\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x), mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n}\n\nfloat fbm (vec2 p)\n{\n\n\tfloat f = 0.0;\n    f += 0.5000*noise( p ); p*=m*2.02;\n    f += 0.2500*noise( p ); p*=m*2.03;\n    f += 0.1250*noise( p ); p*=m*2.01;\n    f += 0.0625*noise( p ); p*=m*2.04;\n    f /= 0.9375;\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q  = fragCoord.xy / iResolution.xy;\n\tvec2 uv = q;\n    vec2 p = -1.0 +2.0*q;\n    p.x *= iResolution.x / iResolution.y;\n    float r = sqrt(dot(p,p));\n    \n    float ss = 0.5 + 0.5*sin(3.0*iTime);\n    float anim = 1.0 + 0.1*ss*clamp(1.0-r,0.0,1.0);\n    r *= anim;\n    float a = atan(p.y, p.x);\n\t//float f = fbm( 4.0*p);\n\t vec3 col = vec3(1.0);\n    if (r < 0.8){\n    \tcol = vec3(0.0, 0.3, 0.4);\n    \t\n        float f = fbm (7.0*p);\n        col = mix(col, vec3 (.2, .4, .5), f);\n        \n        f =1.0- smoothstep( 0.2, 0.5, r ); \n        col = mix(col,vec3(0.9, 0.8,0.2), f);\n        a += 0.05*fbm(5.0*p);\n        f = smoothstep(0.3, 1.0, fbm( vec2(6.0*r,20.0*a) )  );\n        col = mix(col, vec3(1.0), f);\n        \n        f = smoothstep(0.4, 0.9, fbm( vec2(8.00*r,10.0*a) )  );\n        col *= 1.0- f;              \n        \n        f = smoothstep(0.5, 0.8, r);\n        col *= 1.0-0.5*f;              \n        \n        f = smoothstep(0.6 ,0.8, r );\n        col *=1.0- f;\n        \n        f = 1.0- smoothstep(0.0 , 0.5, length (p - vec2(0.24, 0.2) ) ) ;\n        col += vec3(1.0,0.9,0.8)*f*0.9; \n        \n         f = smoothstep( 0.2, 0.5, r ); \n        col *= f;\n    }\n   // col *= length(uv - vec2(sin(iTime),0.5));\n   // col *= distance(uv, vec2(2.0,1.0));\n     col *= 1.0 - smoothstep( 0.4, .4, abs(uv.y-0.5) );\n    \n    //col *= cross(col,vec3(1.0,1.0,1.0));\n\tfragColor = vec4(col,1.0);\n    \t\n    \n}","name":"Image","description":"","type":"image"}]}