{"ver":"0.1","info":{"id":"ddVyz3","date":"1696416508","viewed":45,"name":"Noughts and Crosses","username":"Squigglesdev","description":"Noughts and Crosses, X's and O's, you get the picture.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 rotate(float a)\n{\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\nfloat sdBox(vec2 uv, vec2 b)\n{\n    vec2 d = abs(uv)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord-iResolution.xy)/iResolution.y;\n    \n    //Image\n    vec3 finalImage;  \n    \n    if(fragCoord.x < iMouse.x) {\n        float sdf = length(uv) - 0.5;\n        float ring = abs(sdf);\n        float thicknessSubtract = ring - 0.1;\n        float sharpEdge = smoothstep(0.0, 0.005, thicknessSubtract);\n        finalImage = vec3(1.0 - sharpEdge);\n    }\n    else {\n        vec2 ruv = rotate(PI/4.)*uv;\n        float box = sdBox(ruv,vec2(0.6));\n        box = smoothstep(0.0, 0.005, box);\n    \n        uv = abs(uv);\n        float sdf = length(uv-min(uv.x+uv.y,0.9)*0.5);\n        float thicknessSubtract = sdf - 0.1;\n        float sharpEdge = smoothstep(0.0, 0.005, thicknessSubtract);\n        \n        finalImage = mix(vec3(sharpEdge), vec3(1.), box);\n    }\n\n    // Output to screen\n    fragColor = vec4(finalImage,1.0);\n}","name":"Image","description":"","type":"image"}]}