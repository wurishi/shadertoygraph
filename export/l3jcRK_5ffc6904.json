{"ver":"0.1","info":{"id":"l3jcRK","date":"1727455651","viewed":33,"name":"Pulling","username":"LeSpeti","description":"Lines converging into the centre","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["zoom","radial","infinite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 c){\n    return fract(sin(dot(c, vec2(12.9898, 78.233))) * 43758.5453) * 2. - 1.;\n}\n\nvoid mainImage( out vec4 c, vec2 C )\n{\n    vec3 R = iResolution;\n    vec2 U = (C * 2. - R.xy) / R.y;\n    \n    \n    float r = length(U);\n    float theta = atan(U.y, U.x);\n    \n    \n    float nthPhase = floor(theta * 40.);\n    \n    float val = 1. - fract(r * 2. + iTime * 2. + rand(vec2(nthPhase, 0.)));\n     \n    vec3 col = val * vec3(1., 0.8 + rand(vec2(nthPhase, 1.)) * 0.1, 0.);\n\n\n    c = vec4(col,1.0);\n}\n\n/*\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n    \n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n    \n    \n    float space = 3.1415926535 / 120.;\n    float phase = mod(theta, space) / space;\n    float nthPhase = floor(theta / space);\n    float nRand = cos(nthPhase * (nthPhase + sin(nthPhase * (nthPhase + 1.) + 1.) * 2.));\n    \n    float val = 1. - fract(r * 2. + iTime * 2. + nRand);\n     \n    vec3 col = val * vec3(1., 0.8 + nRand * 0.1, 0.);\n\n\n    fragColor = vec4(col,1.0);\n}\n\n*/","name":"Image","description":"","type":"image"}]}