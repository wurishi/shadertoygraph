{"ver":"0.1","info":{"id":"3sycRR","date":"1602059692","viewed":72,"name":"Bounding Balls Test","username":"beherca","description":"Bounding balls Test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["balls"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.youtube.com/watch?v=l-07BXzNdPw&t=129s\n\nvec2 N22(vec2 p){\n    vec3 a = fract(p.xyx * vec3(123.34,234.34,345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float m = 0.;\n\n    for(float i=0.;i<150.;i++){\n        vec2 nv = N22(vec2(i));\n        vec2 p = sin(nv * 10. * iTime);\n        float d = length(uv -p);\n        m+= smoothstep(0.02, 0.019, d);\n    }\n    \n    vec3 col = vec3(m);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}