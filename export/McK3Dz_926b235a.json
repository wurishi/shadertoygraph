{"ver":"0.1","info":{"id":"McK3Dz","date":"1712653227","viewed":98,"name":"Solar eclipse 2024","username":"vegardno","description":"Inspired by https://mastodon.social/@geerlingguy/112238089370141062\n\nThis can be improved in so many ways but I don't have time to play more right now.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 gamma = vec3(2.5);\n\nconst float sunr = .6;\nconst vec3 sun0 = pow(vec3(99., 56., 0.) / 100., gamma);\nconst vec3 sun1 = pow(vec3(89., 38., 0.) / 100., gamma);\nconst vec3 halo = pow(vec3(40., 15., 0.) / 100., gamma);\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdMoon(vec2 p, float d, float ra, float rb )\n{\n    p.y = abs(p.y);\n    float a = (ra*ra - rb*rb + d*d)/(2.0*d);\n    float b = sqrt(max(ra*ra-a*a,0.0));\n    if( d*(p.x*b-p.y*a) > d*d*max(b-p.y,0.0) )\n          return length(p-vec2(a,b));\n    return max( (length(p          )-ra),\n               -(length(p-vec2(d,0))-rb));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    {\n        const float a = radians(10.);\n        uv = mat2(cos(a), sin(a), -sin(a), cos(a)) * uv;\n    }\n    \n    float t = mod(-.03 * iTime, 1.);\n    float moon_pos = 3. * (t - .5);\n\n    float d = sdMoon(uv, moon_pos, sunr, sunr);\n\n    float v = pow(1. - 2. * abs(t - .5), 3.);\n\n    //vec3 halo = halo / (20. * (length(uv) - sunr + .1));\n    vec3 halo = halo\n        * smoothstep(1.5, -1.5, d * iResolution.y / mix(10., 350., abs(t - .5)))\n        * length(uv - vec2(moon_pos, 0));\n    vec3 sunc = (1. - v) * mix(sun1, sun0, cos(radians(90.) * ((length(uv) - 0.) / sunr))\n        - 2. * smoothstep(.8, 1., texture(iChannel0, vec2(-.5, .6) * uv - vec2(-.1, .2)).r)\n        + .2 * (texture(iChannel1, uv).r - .5));\n\n    vec3 col = mix(halo, sunc, smoothstep(1.5, -1.5, d * iResolution.y));\n\n    // corona, I guess?\n    //col += smoothstep(vec3(.2, .1, .0), vec3(1.2, 1.1, 1.0), vec3(1. - 3. * abs(t - .5) - length(uv)))\n    float a = atan(uv.y, uv.x) / radians(360.);\n    //float v = (sin(radians(180.) * clamp(5. * (t - .5) + .5, 0., 1.)));\n    col += smoothstep(vec3(.2, .1, .0), vec3(1.2, 1.1, 1.0),\n                vec3(v + .5 - 2. * (length(uv)) + 1. * (texture(iChannel0, vec2(a, .5)).r - .5)))\n        * smoothstep(-1.5, 1.5, (length(uv) - sunr) * iResolution.y)\n        * smoothstep(-1.5, 1.5, (length(uv - vec2(moon_pos, 0.)) - sunr) * iResolution.y)\n        * v;\n\n    col = pow(col, 1. / gamma);\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}