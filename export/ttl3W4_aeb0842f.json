{"ver":"0.1","info":{"id":"ttl3W4","date":"1556382965","viewed":122,"name":"test-噪音","username":"dayufei","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//shader学习 1  -- by 邱毅\n//噪音参考：https://thebookofshaders.com/10/\n//噪音参考：https://blog.csdn.net/panda1234lee/article/details/52085375\n\n//随机\nfloat random(float x){\n    return fract(sin(x)*43758.5453);\n}\n//随机\nfloat random(vec2 st){\n    return fract(sin(dot(st.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n//噪音\nfloat noise (vec2 st) {\n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n\n   float A = random(i_st);\n   float B = random(i_st+vec2(1., 0.));\n   float C = random(i_st+vec2(0., 1.));\n   float D = random(i_st+vec2(1., 1.));\n\n   f_st = smoothstep(vec2(0.), vec2(1.), f_st);\n\n   return  mix(A, B, f_st.x)+\n              (C-A)*f_st.y*(1.-f_st.x)+\n              (D-B)*f_st.x*f_st.y;\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 cs = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.);\n\n    //画布放大，取最近整数\n    cs *= 50.;\n    vec2 i_cs = floor(cs);\n\n\n    //随时间向下移动\n    i_cs += vec2(.0,floor(iTime*30.*random(i_cs.x)));\n\n    //添加噪音效果,混合\n    float pone = noise(i_cs);\n    float ptwo = noise(i_cs);\n    color = vec3(pone*ptwo);\n\n    //蓝色和黑色交错\n    color += vec3(0., 0., 1.)-1.;\n\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}