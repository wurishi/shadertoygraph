{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float hash( float n )\n{\n    return fract(sqrt(abs(n))*3734.421891);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n\tvec2 uv = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n    float x = uv.x;\n    float y = uv.y;\n    uv = floor(uv*20.);\n    float value = hash(fract(hash(.213*uv.x+.5*uv.y)+hash(.73*uv.y+7.)));\n    value = abs(fract(10.*mix(x,y,value)+.5*value)*2.-1.);\n\tfragColor = vec4(value,value,value,1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dBXWK","date":"1415749857","viewed":305,"name":"gradient noise","username":"dzira","description":"Just a quick idea I had for a gradient noise based on hash noise. With smoothing it could be sort of like a cheap perlin.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise","gradient"],"hasliked":0,"parentid":"","parentname":""}}