{"ver":"0.1","info":{"id":"Mt3BRn","date":"1538349109","viewed":97,"name":"Smiley :))","username":"cake7914","description":"emoji smiley face, the art of code tutorial","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0., 1.)\n\nfloat remap01(float a, float b, float t)\n{\n    return sat((t-a)/(b-a));\n}\n\nfloat remap(float a, float b, float c, float d, float t)\n{\n    return sat((t-a)/(b-a)) * (d-c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect)\n{\n\treturn (uv-rect.xy) / (rect.zw-rect.xy);\n}\nvec4 Eye(vec2 uv)\n{\n    uv -= .5;\n    float d = length(uv);\n    \n    vec4 irisCol = vec4(.3, .5, 1., 1.);\n    vec4 col = mix(vec4(1.), irisCol, S(.1, .7, d)*.5);\n    \n    col.rgb *= 1. - S(.45, .5, d)*.5*sat(-uv.y-uv.x); //eye shadow\n    col.rgb = mix(col.rgb, vec3(0.), S(.3, .28, d)); // iris outline\n    \n    irisCol.rgb *= 1. + S(.3, .05, d);\n    col.rgb = mix(col.rgb, irisCol.rgb, S(.28, .25, d));\n    \n    col.rgb = mix(col.rgb, vec3(0.), S(.16, .14, d));\n    \n    float highlight = S(.1, .09, length(uv-vec2(-.15, .15)));\n    highlight += S(.07, .05, length(uv+vec2(-.08, .08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    col.a = S(.5, .48, d);\n    return col;\n    \n}\n\nvec4 Mouth(vec2 uv)      \n{\n    uv -= .5;\n    vec4 col = vec4(.5, .18, .05, 1.);\n    \n    uv.y *= 1.5;\n    uv.y -= uv.x*uv.x*2.;\n    \n    float d = length(uv);\n    col.a = S(.5, .48, d);\n    \n    float td = length(uv-vec2(0., .6));\n    \n    vec3 toothCol = vec3(1.)*S(.6, .35, d);\n    \n    col.rgb = mix(col.rgb, toothCol, S(.4, .37, td));\n    \n    td = length(uv+vec2(0., .5));\n    col.rgb = mix(col.rgb, vec3(1., .5, .5), S(.5, .2, td));\n    \n    return col;\n    \n}\n\n\nvec4 Head(vec2 uv)\n{\n    vec4 col = vec4(.9, .65, .1, 1.);\n    \n    float d = length(uv);\n    \n    col.a = S(.5, .49, d);           \n    \n    float edgeShade = remap01(.35, .5, d);    \n    edgeShade *= edgeShade;\n    col.rgb *= 1. -edgeShade*.5;\n    \n    col.rgb = mix(col.rgb, vec3(.6, .3, .1), S(.47, .48, d));\n    \n    float highlight = S(.41, .405, d);\n    highlight *= remap(.41, -.1, .75, 0., uv.y);\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    \n    d = length(uv-vec2(.25, -.2));\n    float cheek = S(.2, .03, d)*.4;\n    cheek *= S(.17, .16, d);\n    col.rgb = mix(col.rgb, vec3(1., .1, .1), cheek);\n    \n    return col;\n    \n}\n\n\nvec4 Smiley(vec2 uv)              \n{\n    vec4 col = vec4(0.);\n    \n    uv.x = abs(uv.x);\n    \n    vec4 head = Head(uv);\n    \n    vec4 eye = Eye(within(uv, vec4(.03, -.1, .37, .25)));\n    \n    vec4 mouth = Mouth(within(uv, vec4(-.3, -.4, .3, -.1)));\n    \n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n\tcol = mix(col, mouth, mouth.a);\n    \n    return col;                          \n    \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \t\n \tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    \n    fragColor = Smiley(uv);\n}","name":"Image","description":"","type":"image"}]}