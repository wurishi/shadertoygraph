{"ver":"0.1","info":{"id":"ts3BDB","date":"1605879998","viewed":104,"name":"Caramel Goop","username":"Poobslag","description":"A goopy caramel texture which oozes and moves across the screen. A variation of my 'Oozing Rainbow' shader useful for some goopy monochrome frosting rendered in an isometric environment.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise","perlin","animated","goop","ooze"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 base_color = vec3(0.922, 0.725, 0.569);\nvec3 bright_color = vec3(0.973, 0.898, 0.843);\n\nvec2 hash22(vec2 p)\n{\n    p = vec2( dot(p,vec2(127.1,311.7)),\n\t\t\t  dot(p,vec2(269.5,183.3)));\n  \n    return -1.0 + 2.0 * fract(sin(p)*43758.5453123);\n}\n\n\nfloat perlin_noise(vec2 p)\n{\n\tvec2 pi = floor(p);\n    vec2 pf = p-pi;\n    \n    vec2 w = pf*pf*(3.-2.*pf);\n    \n    float f00 = dot(hash22(pi+vec2(.0,.0)),pf-vec2(.0,.0));\n    float f01 = dot(hash22(pi+vec2(.0,1.)),pf-vec2(.0,1.));\n    float f10 = dot(hash22(pi+vec2(1.0,0.)),pf-vec2(1.0,0.));\n    float f11 = dot(hash22(pi+vec2(1.0,1.)),pf-vec2(1.0,1.));\n    \n    float xm1 = mix(f00,f10,w.x);\n    float xm2 = mix(f01,f11,w.x);\n    \n    return mix(xm1,xm2,w.y);\n}\n\n// Official HSV to RGB conversion \nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv + perlin_noise(4.8 * vec2(uv.x + 38.913 + iTime * 0.01, uv.y + 81.975 + iTime * 0.01));\n    // Squash it vertically, so it looks OK in isometric\n    uv2 *= vec2(1.0, 2.0);\n    uv2 = uv2 + vec2(iTime * 0.05, 0.0);\n\n    // Time varying pixel color\n    float f = perlin_noise(0.3 * uv2);\n\n    // Output to screen\n    f = (f + iTime * .01) * 8.0;\n    f = f - floor(f);\n    \n    float mix_amount = smoothstep(0.25, 0.26, f);\n    mix_amount = min(mix_amount, 1.0 - smoothstep(0.45, 0.50, f));\n    \n    vec3 col2 = mix(base_color, bright_color, mix_amount);\n    \n    fragColor = vec4(col2, 1.0);\n}","name":"Image","description":"","type":"image"}]}