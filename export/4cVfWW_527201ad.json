{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"const float tau = 6.28318530717958647692;\n\n\n#define GAMMA (2.2)\n\nvec3 ToLinear(in vec3 col) {\n    return pow(col, vec3(GAMMA));\n}\n\nvec3 ToGamma(in vec3 col) {\n    return pow(col, vec3(1.0 / GAMMA));\n}\n\nvec4 Noise(in ivec2 x) {\n    return texture(iChannel0, (vec2(x) + 0.5) / 256.0, -100.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 ray;\n    ray.xy = 2.0 * (fragCoord.xy - iResolution.xy * 0.5) / iResolution.x;\n    ray.z = 1.0;\n\n    float offset = iTime * 0.5;\n    float rainSpeed = 5.0;\n    float rainIntensity = clamp(iTime * 0.1, 0.1, 1.0); \n\n    vec3 col = vec3(0.3, 0.35, 0.4); \n\n    vec3 stp = ray / max(abs(ray.x), abs(ray.y));\n    vec3 pos = 2.0 * stp + 0.5;\n\n    for (int i = 0; i < 20; i++) {\n        float z = Noise(ivec2(pos.xy)).x;\n        z = fract(z - offset);\n        float d = 50.0 * z - pos.z;\n        float w = pow(max(0.0, 1.0 - 8.0 * length(fract(pos.xy) - 0.5)), 2.0);\n        vec3 dropColor = vec3(0.2 + 0.8 * rainIntensity, 0.5 + 0.3 * z, 1.0); \n        col += 1.5 * (1.0 - z) * dropColor * w;\n        pos += stp * rainSpeed * rainIntensity;\n    }\n\n    fragColor = vec4(ToGamma(col), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4cVfWW","date":"1734048810","viewed":67,"name":"dazzling","username":"zhuo1","description":"8","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["graphic"],"hasliked":0,"parentid":"","parentname":""}}