{"ver":"0.1","info":{"id":"mlXcWs","date":"1691340490","viewed":26,"name":"Dancing dots","username":"rnd","description":"test","likes":0,"published":1,"flags":16,"usePreview":0,"tags":["new"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - vec2(0.5,0.5);\n    \n    // not normalized shifted\n    vec2 centerCircle = fragCoord -iResolution.xy/2.0;\n    \n    \n    // my pattern\n    float factoring = 0.01; //clamp( 0.5 +sin(iTime)/2.0, -.05, .01) ;\n        vec3 col = cos(uv.y/factoring+ mod(iTime*1.0,100.0)*10.0)*sin(uv.x/factoring + iTime*50.0)*vec3(0,0,1);\n\n\n    // circle 1\n    vec2 uv2 = uv - vec2(0.5); \n    float distSq = pow(uv2.x, 2.0) + pow(uv2.y, 2.0);\n    \n    if(distSq < 0.0) // 0 so its not there\n        col = vec3( 1.0, 1.0, 1.0);\n        \n        \n    // circle2\n    float distSq2 = pow(centerCircle.x, 2.0) + pow(centerCircle.y, 2.0);\n    \n    if(distSq2 < pow(sin(iTime)*50.0,2.0))\n        col = vec3( 1.0, 1.0, 1.0);\n\n        \n        \n    //col = vec3(1.0, 1.0,1.0);\n    ///if( sin(uv.x*10.0) - uv.y*10.0 < 0.0001)\n     //   col = vec3(0.0,0.0,0.0);\n    // Output to screen\n    fragColor = vec4(col,0);\n}","name":"Image","description":"","type":"image"}]}