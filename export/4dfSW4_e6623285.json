{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define MAX_SAMPLES 200\n#define THICKNESS\t0.1\n#define BLUR\t\t20.0\n#define FREQ\t\t200.0\n#define PI\t\t\t3.14159265359\n\n\nvec2 fBezier2 (vec2 p0, vec2 p1, vec2 p2, float t) {\n\treturn mix (\n\t\tmix (p0, p1, t), \n\t\tmix (p1, p2, t),t);\t\n}\n\nvec2 fBezier3 (vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t) {\n\treturn fBezier2 (\n\t\tmix (p0, p1, t),\n\t\tmix (p1, p2, t),\n\t\tmix (p2, p3, t),t);\t\t\n}\n\t\n\nfloat fGetDistance (vec2 p, vec2 p0, vec2 p1, vec2 p2, vec2 p3) {\n\tfloat d0 = distance (p, p0) ;\n\tfor (int i = 0;i < MAX_SAMPLES;++i) {\n\t\tfloat d = distance (p, fBezier3 (p0, p1, p2, p3, float (i)/float (MAX_SAMPLES)));\n\t\td0 = min (d0, d);\t\t\t\n\t}\n\treturn d0;\n}\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat t = iTime;\n\tvec2 uv = (2.0 * fragCoord.xy - iResolution.xy)/ min (iResolution.x, iResolution.y);\n\t\n\tvec2 p1 = vec2 (-0.5, 0.0);\n\tvec2 p2 = vec2 (0.5, 0.0);\n\tvec2 p0 = vec2 (sin (t), cos (t))*0.5 + p1;\n\tvec2 p3 = vec2 (cos (t), sin (t))*0.5 + p2;\n\t\n\tfloat d = fGetDistance (uv, p0, p1, p2, p3);\n\tfloat s = smoothstep (THICKNESS*(1.0 - BLUR), THICKNESS*(1.0 + BLUR), d);\n\t\n\tfragColor = mix (vec4 (0.0), vec4 (1.0), 0.5 + 0.5*sin (s*PI*FREQ) );\n\t\t\t\t\t\t\t\n\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dfSW4","date":"1400662676","viewed":334,"name":"Bezier","username":"Coldberg","description":"bezier","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""}}