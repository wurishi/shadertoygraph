{"ver":"0.1","info":{"id":"MlsfWN","date":"1511972234","viewed":241,"name":"Distortion and Color Math","username":"tague","description":"Just a test :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["video","distortion","experiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    vec2 click = iMouse.zw / iResolution.xy;\n    \n    float clickDistance = distance(sin(iMouse.zw / 10.), cos(fragCoord.xy * iTime));\n    \n    // Crazy sine-based offset to distort texture coordinates.\n    float sinOffset = sin((fragCoord.x / 5.f) / 7.f + iTime) * cos(iTime);\n    bool isOnSine = sinOffset >= uv.y;\n    vec2 realOffset = isOnSine ? vec2(-sinOffset / 5.f, 0) : vec2(0, -sinOffset / 3.f);\n    \n    // Video sources, mangled horribly.\n    vec4 chromeVid = texture(iChannel0, uv + sin(mouse)/2.f * realOffset);\n    vec4 oldVid = texture(iChannel1, (uv + (0.25 - 0.5*(mouse))) / 1.5 + 0.15 * vec2(sin(fragCoord.y / 17. + iTime * 10.) / 10., 1));\n\n    // Texture sources\n    vec4 starField = texture(iChannel2, uv + vec2(sin(iTime / 5.f), cos(iTime / 7.5f)) / tan(iTime)) / 2.f;\n\n    // Time and mouse-dependent Colors\n    vec4 timeChange = vec4(uv,0.5+0.5*sin(iTime),0.5+0.5*cos(iTime));\n    vec4 mouseMove = vec4(mouse, 0, 1) / 2.;\n    \n    // Switches\n    vec4 oldChromeSwitch = clickDistance < 0.5 ? (chromeVid * oldVid) : oldVid;\n    \n    vec4 result = (timeChange - starField) / chromeVid * (oldChromeSwitch + mouseMove);\n\tfragColor = result;\n}","name":"Image","description":"","type":"image"}]}