{"ver":"0.1","info":{"id":"XsGfWw","date":"1528958307","viewed":1700,"name":"moving circle with iTime","username":"guowei","description":"moving circle with iTime","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circle","moving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//get great idea of smoothstep AA from @ABizard\nvec2 calPolar(vec2 uv){\n\tfloat TWOPI = 3.1415926 * 2.0;\n    \n    float angleUv = atan(uv.x, uv.y) / TWOPI;\n    float lengthUv = length(uv);\n    \n    return vec2(angleUv, lengthUv);\n}\n\nfloat circle(float radius, vec2 center, vec2 uv) {\n\tfloat d = distance(center, uv);\n    //return 1.0 - step(radius, d);\n    //return 1.0 - smoothstep(radius-0.002, radius+0.002, d); //no magic number\n    return 1.0 - smoothstep(radius-1./iResolution.y, radius+1./iResolution.y, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    \n\tfloat radius = 0.1;\n    float speed = 1.0;\n    \n    //vec2 center = vec2(.0, .0);\n    vec2 center = vec2(sin(iTime * speed) / 2.0, cos(iTime * speed) / 4.0);\n    float c = circle(radius, center, uv);\n    \n    vec3 col = vec3(c);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}