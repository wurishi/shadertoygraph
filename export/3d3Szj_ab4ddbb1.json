{"ver":"0.1","info":{"id":"3d3Szj","date":"1572307119","viewed":93,"name":"CheckerBoard_Machina","username":"olli_machina","description":"write a shader that creates a black-and-white chess style checker-board pattern.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["homework"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float numRows = 9.0; //number of rows\nfloat numColumn = 16.0; //number of columns\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspectRatio = iResolution.y/iResolution.x; //adjust aspect ratio\n\n    vec4 image1 = texture(iChannel0,uv); //declare both textures\n\tvec4 image2 = texture(iChannel1,uv);\n      \n    float squareSizeX = (iResolution.x / numColumn); //make the coluns and rows the correct size\n\tfloat squareSizeY = (iResolution.y / numRows);\n    \n    vec2 squareSize = vec2(squareSizeX, squareSizeY); //the pixel size of the squares\n    \n    vec2 squares = floor(fragCoord / squareSize);\n    \n    vec4 layer1 = vec4(image1); //make the layers the images\n    vec4 layer2 = vec4(image2);\n    \n    layer1.a = mod(squares.x + mod(squares.y, 2.0),2.0); //make the even ones layer1\n    \n    vec4 composite = vec4(mix(layer1, layer2, layer1.a)); //mix all of the layers\n\n    // Output to screen\n    fragColor = composite;\n}","name":"Image","description":"","type":"image"}]}