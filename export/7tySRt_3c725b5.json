{"ver":"0.1","info":{"id":"7tySRt","date":"1641310722","viewed":88,"name":"Correction sc1","username":"schreck","description":"shperes","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spheres"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nbool circle(vec2 p, float R, vec2 center) {\n\n    vec2 d = p - center;\n    float l = d.x*d.x + d.y*d.y;\n    return (l < R*R);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0*fragCoord/iResolution.xy - 1.0;\n    uv.x /= iResolution.y/iResolution.x;\n\n    vec3 col = vec3(0,0,0);\n    \n    float a = iTime;\n    mat2 rot = mat2(cos(a), sin(a), \n                    -sin(a), cos(a));\n    vec2 center = rot*vec2(0.9, 0.0);\n    float r = 0.1;\n    \n    float r2 = 0.03;\n    float a2 = 2.0*iTime;\n    \n    mat2 rot2 = mat2(cos(a2), sin(a2), \n                    -sin(a2), cos(a2));\n    vec2 center2 = center + rot2*vec2(0.2, 0); \n \n    if (circle(uv, r, center)) {\n        col = vec3(0, 1, 1);\n    }\n    if (circle(uv, 0.5, vec2(0.0, 0.0))) {\n        col = vec3(1, 1, 0);\n    }\n    if (circle(uv, r2, center2)) {\n        col = vec3(1.0, 0, 0);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}