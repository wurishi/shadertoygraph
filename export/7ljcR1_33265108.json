{"ver":"0.1","info":{"id":"7ljcR1","date":"1649205715","viewed":371,"name":"contour play","username":"mds2","description":"playing around with stuff.  Doesn't work the way I'd like.  Too noisy.","likes":4,"published":3,"flags":34,"usePreview":0,"tags":["experiment","effect","contour"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 uvFromXy(in vec2 xy) {\n  return xy/iResolution.xy;\n}\n\nfloat getVal(in vec2 xy) {\n  return dot(texture(iChannel0, uvFromXy(xy)).rgb, vec3(1.0));\n}\n\nvec2 getGrad(in vec2 xy) {\n  const float h = 3.0;\n  float f = getVal(xy);\n  return vec2(getVal(xy + vec2(h, 0.0)) - f,\n              getVal(xy + vec2(0.0, h)) - f) / h;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float stepSize = 0.2;\n    const float lineWidth = 3.0;\n    float f = getVal(fragCoord);\n    vec2 grad = getGrad(fragCoord);\n    float gradMag = length(grad);\n    \n    float nearest = floor((f + 0.5 * stepSize)/stepSize) * stepSize;\n    \n    float pixToLine = abs(f - nearest)/gradMag;\n    \n    float lineNess = 1.0 - max(0.0, min(1.0, pixToLine - lineWidth * 0.5));\n    \n    // lineNess *= min(1.0, max(3.0 - f, 0.0) / 3.0);\n    lineNess *= step(0.0125, gradMag);\n    \n    vec3 col = vec3(1.0 - lineNess);\n    \n    vec3 rgbCol = texture(iChannel0, fragCoord/iResolution.xy).rgb;\n    rgbCol = rgbCol + vec3(0.2) - mod(rgbCol, vec3(0.2));\n    \n    rgbCol = 0.4 + 0.6 * rgbCol;\n\n    // Output to screen\n    fragColor = vec4(col * rgbCol,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 getColor(in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 color = 0.2 * ( getColor(fragCoord) +\n    getColor(fragCoord + vec2(1.0, 0.0)) +\n    getColor(fragCoord + vec2(0.0, 1.0)) +\n    getColor(fragCoord - vec2(1.0, 0.0)) +\n    getColor(fragCoord - vec2(0.0, 1.0)));\n    \n  fragColor = vec4(color,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec3 getColor(in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 color = 0.2 * ( getColor(fragCoord) +\n    getColor(fragCoord + vec2(1.0, 0.0)) +\n    getColor(fragCoord + vec2(0.0, 1.0)) +\n    getColor(fragCoord - vec2(1.0, 0.0)) +\n    getColor(fragCoord - vec2(0.0, 1.0)));\n    \n  fragColor = vec4(color,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"vec3 getColor(in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 color = 0.2 * ( getColor(fragCoord) +\n    getColor(fragCoord + vec2(1.0, 0.0)) +\n    getColor(fragCoord + vec2(0.0, 1.0)) +\n    getColor(fragCoord - vec2(1.0, 0.0)) +\n    getColor(fragCoord - vec2(0.0, 1.0)));\n    \n  fragColor = vec4(color,1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"vec3 getColor(in vec2 fragCoord) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  return texture(iChannel0, uv).rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec3 color = 0.2 * ( getColor(fragCoord) +\n    getColor(fragCoord + vec2(1.0, 0.0)) +\n    getColor(fragCoord + vec2(0.0, 1.0)) +\n    getColor(fragCoord - vec2(1.0, 0.0)) +\n    getColor(fragCoord - vec2(0.0, 1.0)));\n    \n  fragColor = vec4(color,1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}