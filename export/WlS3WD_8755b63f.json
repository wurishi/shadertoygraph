{"ver":"0.1","info":{"id":"WlS3WD","date":"1559502027","viewed":870,"name":"Enzyme Reaction","username":"wyatt","description":"Reaction diffusion experiment using 4 \"enzymes\". The enzymes diffuse. The dominant enzyme in a region converts the other enzymes in the region into itself as long as all the other 3 types are present. My 100th Shadertoy :)","likes":19,"published":3,"flags":32,"usePreview":0,"tags":["reactiondiffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 ro (float x) {\n\tfloat s = sin(x), c = cos(x);\n    return mat2(c,-s,s,c);\n}\nvoid mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    mat2 m = ro(2.6);\n    Q.xy *= m;\n    Q.yz *= m;\n    Q.zw *= m;\n    Q.wx *= m;\n    Q = abs(Q);\n    float \n        n = length(A(U+vec2(0,1))),\n        e = length(A(U+vec2(1,0))),\n        s = length(A(U-vec2(0,1))),\n        w = length(A(U-vec2(1,0)));\n    vec3 \n        v = normalize(vec3(e-w,n-s,1)),\n        l = normalize(vec3(1,1,.5));\n    float a = max(dot(v,l),0.);\n   Q *= (exp(-100.*a)+exp(-10.*a)+exp(-1.*a));\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 Q, in vec2 U )\n{\n    Q = A(U);\n    vec4 \n        N = A(U+vec2(0,1)),\n        E = A(U+vec2(1,0)),\n        S = A(U-vec2(0,1)),\n        W = A(U-vec2(1,0)),\n        m = 0.25*(N+E+S+W);\n    Q = mix(Q,m,.3);\n    float n = .25*min(min(Q.x,Q.y),min(Q.z,Q.w));\n    float x = max(max(Q.x,Q.y),max(Q.z,Q.w));\n    #define p vec4(1,2,3,4)\n    #define e dot(p,vec4(1))\n    if (Q.x == x) {\n    \tQ.x += e*n;\n        Q.xyzw -= n*p;\n    } else if (Q.y == x) {\n    \tQ.y += e*n;\n        Q.yzwx -= n*p;\n    } else if (Q.z == x) {\n    \tQ.z += e*n;\n        Q.zwxy -= n*p;\n    } else if (Q.w == x) {\n    \tQ.w += e*n;\n        Q.wxyz -= n*p;\n    }\n    Q = max(Q,0.);\n    if(iFrame<1||(iMouse.z>0.&&length(iMouse.xy-U)<20.)) \n    \tQ = hash(.1*(U.x+U.y*R.x+dot(iDate.wzyx,vec4(1))));\n   }","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0, (U)/R)\n#define B(U) texture(iChannel1, (U)/R)\n#define C(U) texture(iChannel2, (U)/R)\n#define D(U) texture(iChannel3, (U)/R)\n\nvec4 hash (float p) // Dave Hoskins\n{\n\tvec4 p4 = fract(vec4(p) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+19.19);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n    \n}","name":"Common","description":"","type":"common"}]}