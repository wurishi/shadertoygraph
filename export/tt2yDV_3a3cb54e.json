{"ver":"0.1","info":{"id":"tt2yDV","date":"1595445099","viewed":288,"name":"Saketoba","username":"tatsunoru","description":"Saketoba Magic Circle","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["magiccircle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define M_PI 3.1415926535897932384626433832795\n#define M_PI05 (M_PI * 0.5)\n\nvec2 rotate(vec2 v, float c, float s){\n\treturn vec2(v.x*c - v.y*s, v.x*s + v.y*c);\n}\n\nvec2 rotate(vec2 v, float r){\n\treturn rotate(v, cos(r), sin(r));\n}\n\nfloat boxLength(vec2 pos) {\n\tvec2 q = abs(pos);\n\treturn max(q.x, q.y);\n}\n\nfloat capsuleLength(vec2 pos, vec2 dir) {\n\tvec2 ba = -dir;\n\tvec2 pa = pos + ba;\n\tba *= 2.0;\n\treturn length(pa - ba * clamp(dot(pa, ba) / dot(ba, ba), -1.0, 1.0));\n} \n\nfloat triangleLength(vec2 p) {\n    p.y += 0.32;\n\treturn max(abs(p.x * 1.8) + p.y, 1.0 - p.y * 1.8) * 0.75;\n}\n\nvec2 fracOrigin(vec2 v){\n\treturn (fract(v) - 0.5) * 2.0;\n}\n\nfloat Sa(vec2 pos){\n \tfloat a = capsuleLength(pos + vec2(0.0, -0.7), vec2(0.5, 0.0));   \n \tfloat b = capsuleLength(pos + vec2(-0.3, -0.3), vec2(0.3, 1.3));  \n    float c = capsuleLength(pos + vec2(0.3, -0.5), vec2(0, 0.5)); \n    return min(min(a, b), c);\n}\n\nfloat Ke(vec2 pos){\n \tfloat a = capsuleLength(pos + vec2(0.0, -0.3), vec2(0.4, 0.0));   \n \tfloat b = capsuleLength(pos + vec2(0.7, -0.3), vec2(0.5, 0.6));  \n    float c = capsuleLength(pos + vec2(0.1, 0.7), vec2(0.3, 0.3));  \n    return min(min(a, b), c);\n}\n\nfloat To(vec2 pos){\n \tfloat a = capsuleLength(pos + vec2(0.6, 0.0), vec2(0.4, 1.0));   \n \tfloat b = capsuleLength(pos + vec2(0.0, 0.0), vec2(1.0, -0.8) * 0.4);    \n    return min(a, b);\n}\n\nfloat Ba(vec2 pos){\n \tfloat a = capsuleLength(pos + vec2(0.8, 0.0), vec2(0.2, 1.0));   \n \tfloat b = capsuleLength(pos + vec2(-0.8, 0.0), vec2(-0.2, 1.0));     \n    float c = length(pos + vec2(-1.0, -1.3));\n    float d = length(pos + vec2(-1.2, -0.8));\n    return min(min(min(a, b), c), d);\n}\n\nfloat Saketoba(vec2 pos, float power){\n    return dot(vec4(1.0), power / (0.01 + vec4(Sa(pos), Ke(pos + vec2(-3.0, 0.0)), To(pos + vec2(-6.0, 0.0)), Ba(pos + vec2(-9.0, 0.0)))));\n}\n\nfloat smoothstepLine(float lower, float upper, float value, float width){\n    width *= 0.5;\n    return smoothstep(lower - width, lower, value) * (1.0 - smoothstep(upper, upper + width, value));\n}\n\nfloat smoothLine(float value, float target, float width){\n    return width / abs(value - target);\n}\n\nvec2 smoothLine2(float value, float target, float width){\n    return vec2(step(0.0, value - target), width / abs(value - target));\n}\n\nfloat circleTriangle(vec2 pos){\n    float circle = length(pos * 0.5);\n    float triangle = triangleLength(pos * 0.3);    \n    return smoothLine(circle, 1.0, 0.025) + smoothLine(triangle, 1.0, 0.025);\n}\n\nvec2 circleTriangle2(vec2 pos){\n    float circle2 = length(pos * 0.35);\n    vec2 ret = smoothLine2(circle2, 1.0, 0.025);\n    ret.y += circleTriangle(pos);\n    return ret;\n}\n\nfloat atan2(in float y, in float x)\n{\n    return x == 0.0 ? sign(y) * M_PI05 : atan(y, x);\n}\n\nvec2 polar(vec2 uv) {\n\tfloat r = length(uv);\n\tfloat s = atan2(uv.y, uv.x) / M_PI;\n\treturn vec2(r, s);\n}\n\nfloat SakeobaCircle(vec2 pos){\n    vec2 pp = polar(rotate(pos, -iTime) * 0.75);\n    vec2 md = mod(rotate(pp * vec2(2.0, 32.0), M_PI05), vec2(16.0, 4.0));\n    return Saketoba(md - vec2(3.5, 1.5), 0.05) * smoothstepLine(6.5, 7.5, pp.x, 1.5) * min(min(1.0, md.x), 16.0 - md.x);\n}\n\nfloat SakeobaCircle2(vec2 pos, float scale, float x, float y, float x2, float y2, float lower, float upper, float r){\n    vec2 pp = polar(rotate(pos, r) * scale);\n    return Saketoba(mod(rotate(pp * vec2(x, y), M_PI05), vec2(x2, y2)) - 1.5, 0.03) * smoothstepLine(lower, upper, pp.x, 0.2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.yy * 20.0;     \n      \n    uv *= clamp(iTime * 0.25, 0.0, 1.0) * 1.1;\n        \n    uv = rotate(uv, iTime * 0.3);\n    \n    vec2 uv2 = fragCoord.xy / iResolution.xy;\n    \n    float len = length(uv);\n    \n    float fft = texture(iChannel0, vec2(len * 0.05, 0)).x;\n    float fft2 = texture(iChannel0, vec2(0.0, 0.0)).x;\n    float fft3 = fft2 + texture(iChannel0, vec2(0.5, 0.0)).x + texture(iChannel0, vec2(1.0, 0.0)).x;\n    fft3 = pow(fft3, 2.0);\n    \n    vec2 c2 = circleTriangle2(uv * 1.4 + vec2(0.0, 8.0));\n    vec2 c3 = circleTriangle2(uv * 1.4 + rotate(vec2(0.0, 8.0), M_PI * 2.0 * 0.3333));\n    vec2 c4 = circleTriangle2(uv * 1.4 + rotate(vec2(0.0, 8.0), M_PI * 2.0 * 0.6666));\n   \n    float mask = clamp(c2.x * c3.x * c4.x, 0.0, 1.0);  \n        \n    float color1 = SakeobaCircle(uv) * 4.0\n  \t\t\n        + (SakeobaCircle2(uv, 0.995, 8.0, 64.0, 12.0, 4.0, 7.5, 8.0, 5.0 + iTime * 0.2)\n        + smoothLine(len, 11.2, 0.1)\n        + smoothLine(len, 10.8, 0.1)\n        + smoothLine(len, 8.2, 0.01)\n        + smoothLine(len, 8.0, 0.02)\n        + smoothLine(len, 7.5, 0.01)\n        + smoothLine(len, 7.3, 0.01)\n        \n        + SakeobaCircle2(uv, 1.1, 8.0, 64.0, 12.0, 4.0, 7.5, 7.9, 5.0 + iTime * 0.8) * -1.0\n        + 0.0 * SakeobaCircle2(uv, 1.2, 8.0, 64.0, 12.0, 4.0, 7.5, 7.9, 15.0 + iTime * 0.1564)\n        + smoothLine(len, 6.7, 0.02)\n           \n        + SakeobaCircle2(uv, 1.45, 8.0, 64.0, 12.0, 4.0, 7.5, 7.9, 15.0 + iTime * 0.2418654) * -1.0\n        + smoothLine(len, 5.0, 0.02)\n        + smoothLine(len, 5.5, 0.02)\n        \n        + SakeobaCircle2(uv, 2.15, 8.0, 64.0, 12.0, 4.0, 7.5, 7.9, 35.0 + iTime * 0.34685) * -1.0\n        + SakeobaCircle2(uv, 2.25, 8.0, 64.0, 12.0, 4.0, 7.5, 7.9, 135.0 + iTime * 0.114)\n        + SakeobaCircle2(uv, 1.8, 8.0, 64.0, 12.0, 4.0, 7.5, 7.9, 532.0 + iTime * 0.54158)\n        + 0.015 / abs(boxLength(rotate(uv, M_PI05 * 0.0 - iTime * 0.5)) - 4.5)\n        + 0.005 / abs(boxLength(rotate(uv, M_PI05 * 0.25 - iTime * 0.5)) - 4.5) * -1.0\n        + 0.015 / abs(boxLength(rotate(uv, M_PI05 * 0.5 - iTime * 0.5)) - 4.5)\n        + 0.005 / abs(boxLength(rotate(uv, M_PI05 * 0.75 - iTime * 0.5)) - 4.5) * -1.0\n           \n          ) * mask\n      \n        + circleTriangle(uv)\n        ;\n    \n    float core = fft3 * 0.0 + pow(fft3 * 0.5, 3.0);\n    float core2 = 0.3;\n  \n    float color2 =   \n        + core2 * c2.y\n    \t+ core2 * c3.y\n     \t+ core2 * c4.y\n        + core / abs(boxLength(uv * vec2(8.0, 0.5) - vec2(0.0, 2.9)) - 1.0)\n        + core / abs(boxLength(rotate(uv, M_PI * 2.0 * 0.3333) * vec2(8.0, 0.5) - vec2(0.0, 2.9)) - 1.0)\n        + core / abs(boxLength(rotate(uv, M_PI * 2.0 * 0.6666) * vec2(8.0, 0.5) - vec2(0.0, 2.9)) - 1.0)\n\t;\n    \n    vec3 col = vec3(\n        (color1 + color2 * (1.0 + fft3)) * 1.5,\n    \tcolor1 + color2,\n        color1 * 0.2\n    ) * (fft2 * mask + 1.0);\n  \n    col += (floor(fft * 4.0) - 2.0) * smoothstep(8.0, 8.1, len) * 0.5;\n    \n    //col *= clamp(fft2 * 2.0, 0.0, 1.0);\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}