{"ver":"0.1","info":{"id":"Xl2Gzc","date":"1433273144","viewed":173,"name":"Glassy Rings","username":"Justaway","description":"Rings","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rings"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define PI 3.14159265359\nvec3 direction_vector;\nvec3 direction_vector_r;\nvec3 direction_vector_b;\nvec3 horizontal_vector;\nvec3 eye_point;\nvec3 vertical_vector;\nfloat minimum_distance=0.01;\nfloat maximum_distance=100.0;\nfloat sample_radius=0.001;\nfloat transmittance=0.0;\nfloat reflectance=0.0;\nfloat reflectance_inner=0.0;\nvec4 transmit_color=vec4(0.0);\nvec4 reflection_color=vec4(0.0);\nvec3 light_point=vec3(0.0,4.0,0.0);\nvec4 light_color=vec4(0.5);\nbool inside_object=false;\nbool object_entered=false;\nfloat refraction_amount=0.2;\nfloat field_of_view=0.75;\nfloat time=iTime/10.0;\nmat3 rot_x(float a){\n\tfloat c=cos(a);\n\tfloat s=sin(a);\n\treturn mat3(\n\t\t1.0,0.0,0.0,\n\t\t0.0,c,-s,\n\t\t0.0,s,c);\n}\nmat3 rot_y(float a){\n\tfloat c=cos(a);\n\tfloat s=sin(a);\n\treturn mat3(\n\t\tc,0.0,s,\n\t\t0.0,1.0,0.0,\n\t\t-s,0.0,c);\n}\nmat3 rot_z(float a){\n\tfloat c=cos(a);\n\tfloat s=sin(a);\n\treturn mat3(\n\t\tc,-s,0.0,\n\t\ts,c,0.0,\n\t\t0.0,0.0,1.0);\n}\nmat3 rot(vec3 z,float a){\n\tfloat c=cos(a);\n\tfloat s=sin(a);\n\tfloat ic=1.0-c;\n\treturn mat3(\n\t\tic*z.x*z.x+c,ic*z.x*z.y-z.z*s,ic*z.z*z.x+z.y*s,\n\t\tic*z.x*z.y+z.z*s,ic*z.y*z.y+c,ic*z.y*z.z-z.x*s,\n\t\tic*z.z*z.x-z.y*s,ic*z.y*z.z+z.x*s,ic*z.z*z.z+c);\n}\nfloat diamond_distance(vec3 point){\n    float temp=maximum_distance;    \n    for(int i=0;i<6;i++){\n        vec3 temppoint = point;\n        temppoint *= rot_x(time*0.5*float(i));\n        temppoint *= rot_z(time*0.75*float(i));\n        vec2 t = vec2(0.2*float(i)+0.2,0.1);\n\t    vec2 q = vec2(length(temppoint.xz)-t.x,temppoint.y);\n        temp=min(temp,length(q)-t.y);\n    }\n    return temp;\n}\nfloat diamond(in vec3 point){\n\tfloat dist=diamond_distance(point);\n\tif((dist<0.0&&!inside_object)||(dist>0.0&&inside_object)){\n\t\tvec3 sample=vec3(sample_radius,0.0,0.0);\n\t\tvec3 normal=normalize(\n\t\t\tvec3(\n\t\t\tdiamond_distance(point+sample.xyy)-dist,\n\t\t\tdiamond_distance(point+sample.yxy)-dist,\n\t\t\tdiamond_distance(point+sample.yyx)-dist)\n\t\t);\n\t\tif(!inside_object&&!object_entered){\n\t\t\t#define DISPERSION 0.1\n\t\t\tobject_entered=true;\n\t\t\tinside_object=!inside_object;\n\t\t\tdirection_vector_r=normalize(direction_vector_r-normal*(1.0-DISPERSION));\n\t\t\tdirection_vector=normalize(direction_vector-normal);\n\t\t\tdirection_vector_b=normalize(direction_vector_b-normal*(1.0+DISPERSION));\n\t\t\ttransmittance=dot(direction_vector,-normal);\n\t\t\treflectance=1.0-transmittance;\n\t\t\tvec3 reflection_direction=reflect(direction_vector,normal);\n\t\t\treflection_color=texture(iChannel0,reflection_direction);\n\t\t}else{\n\t\t\tfloat transmit_0=dot(direction_vector,normal);\n\t\t\tfloat transmit_1=transmittance*transmit_0;\n\t\t\tvec4 temp_color=vec4(0.0);\n\t\t\ttemp_color.r=texture(iChannel0,direction_vector_r+normal*(1.0-DISPERSION)).r;\n\t\t\ttemp_color.g=texture(iChannel0,direction_vector+normal).g;\n\t\t\ttemp_color.b=texture(iChannel0,direction_vector_b+normal*(1.0+DISPERSION)).b;\n\t\t\ttransmit_color+=transmit_1*temp_color;\n\t\t\ttransmittance-=transmit_1;\n\t\t\tdirection_vector=reflect(direction_vector,-normal);\n\t\t}\n\t}\n\treturn abs(dist);\n}\nvec4 trace_ray(){\n\tfloat dist;\n\tvec4 color=vec4(0.0);\n\tvec3 point=eye_point;\n\tfor(int i=0;i<60;i++){\n\t\tdist=max(minimum_distance,diamond(point));\n\t\tif(length(point)>10.0){\n\t\t\tcolor=texture(iChannel0,direction_vector);\n\t\t\tbreak;\n\t\t}\n\t\tpoint+=direction_vector*dist;\n\t}\n\treturn color+transmit_color+reflection_color*reflectance;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfloat ratio=iResolution.x/iResolution.y;\n\tvec2 mouse=vec2((iMouse.x-iResolution.x/2.0)/iResolution.x*ratio,(iMouse.y-iResolution.y/2.0)/iResolution.y);\n\tvec2 screen_point=vec2((fragCoord.x-iResolution.x/2.0)/iResolution.x*ratio,(fragCoord.y-iResolution.y/2.0)/iResolution.y);\n\tfloat view_radius=3.0;\n\teye_point=vec3(0.0,0.0,view_radius);\n\teye_point*=rot_x(PI*mouse.y+0.25*PI*sin(time));\n\teye_point*=rot_y(2.0*PI*mouse.x+time);\n\tvec3 look_point=vec3(0.0,0.0,0.0);\n\tvec3 up_vector=vec3(0.0,1.0,0.0);\n\tdirection_vector=normalize(look_point-eye_point);\n\thorizontal_vector=normalize(cross(direction_vector,up_vector));\n\tvertical_vector=normalize(cross(horizontal_vector,direction_vector));\n\tdirection_vector*=rot(vertical_vector,field_of_view*screen_point.x);\n\tdirection_vector*=rot(horizontal_vector,field_of_view*screen_point.y);\n\tdirection_vector_r=direction_vector;\n\tdirection_vector_b=direction_vector;\n\tfragColor=trace_ray();\n}\n","name":"","description":"","type":"image"}]}