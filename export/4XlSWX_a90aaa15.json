{"ver":"0.1","info":{"id":"4XlSWX","date":"1710076175","viewed":79,"name":"SDF Curl Level Set Traversal","username":"chronos","description":"SDF Curl Level Set Traversal","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","gradient","descent"],"hasliked":0,"parentid":"M3fXDf","parentname":"SDF Gradient Descent 2D"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n/*\n\n    SDF Curl Level Set Traversal 2D by chronos\n    \n    Just a little math doodle :)\n\n*/\n\nfloat seg(vec2 a, vec2 b, vec2 p)\n{\n    p-=a; b-=a;\n    return length(clamp(dot(p,b)/dot(b,b), 0., 1.) * b- p);\n}\n\nfloat map(vec2 p)\n{\n    float sdf = 9e9;\n    \n    sdf = min(sdf, length(p-vec2(-.25, -.25))-0.65);\n    \n    sdf = min(sdf, length(p-vec2(0.25, 0.25))-0.65);\n    return sdf;\n}\n\nvec2 gradient(vec2 p)\n{\n    float eps = 0.001;\n    return normalize(vec2(\n        (map(p+vec2(1,0)*eps)-map(p+vec2(-1,0)*eps)),\n        (map(p+vec2(0,1)*eps)-map(p+vec2( 0,-1)*eps))\n    ))\n    ;\n}\n\nvec2 curl(vec2 p)\n{\n    return gradient(p).yx * vec2(-1,1);\n}\n\nconst float PI = 3.14150265;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec2 mouse = (2.*iMouse.xy-iResolution.xy)/iResolution.y;\n    \n    if(length(iMouse.xy) < 10.) mouse = sin(vec2(iTime, iTime + PI/2.)) * (.5+.75*sin(iTime*.2)) + .25*cos(vec2(iTime, iTime + PI/2.) + 1.);\n    \n    float ps = 2./iResolution.y;\n\n    vec3 color = vec3(0);\n    \n    int max_steps = 80;\n    \n    vec2 g = gradient(uv);\n    vec3 grad_col = vec3(g, 1.-g.x-g.y)*.5+.5;\n    color = .5*grad_col;\n    \n    color *= 1.-.85*pow(.5+(.5*cos(50. * map(uv))),4.);\n    \n    color = mix(color, vec3(1), smoothstep(ps, -ps, abs(map(uv))-0.01));\n        \n    vec2 p = mouse;\n    \n    for(int i = 0; i < max_steps; i++)\n    {\n        \n        vec2 grad = curl(p);\n        float dist = map(p);\n        \n        vec2 q = p-0.1*grad;\n        \n        q += (dist - map(q)) * gradient(q);\n        \n        color=mix(color, vec3(1), .5*smoothstep(ps, -ps, seg(p,q,uv)-0.005));\n        color=mix(color, vec3(max_steps-1-i,0,i)/float(max_steps), .75*smoothstep(ps, -ps, length(p-uv)-0.025));\n        color=mix(color, vec3(0), smoothstep(ps, -ps, abs(length(p-uv)-0.025)-0.005));\n        \n        p = q;\n    }\n    \n    color=mix(color, vec3(1), .75*smoothstep(ps, -ps, length(mouse-uv)-0.025));\n    color=mix(color, vec3(0), smoothstep(ps, -ps, abs(length(mouse-uv)-0.025)-0.005));\n\n    color= pow(color, vec3(1./2.2));\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}