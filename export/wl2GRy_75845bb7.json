{"ver":"0.1","info":{"id":"wl2GRy","date":"1560092673","viewed":587,"name":"RGB MetaBall Trail","username":"takumifukasawa","description":"RGB MetaBall with Buffer","likes":13,"published":1,"flags":32,"usePreview":0,"tags":["metaball","rgb","feedback","buffer","trail"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat3 m = mat3( 0.00,  0.80,  0.60,\n              -0.20,  0.36, -0.48,\n              -0.60, -0.48,  0.64);\n\nfloat hash(float n)\n{\n    return fract(sin(n) * 43758.5453);\n}\n\nfloat noise(in vec3 x)\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    \n    f = f * f * (3.0 - 2.0 * f);\n    \n    float n = p.x + p.y * 57.0 + 113.0 * p.z;\n    \n    float res = mix(mix(mix(hash(n +   0.0), hash(n +   1.0), f.x),\n                        mix(hash(n +  57.0), hash(n +  58.0), f.x), f.y),\n                    mix(mix(hash(n + 113.0), hash(n + 114.0), f.x),\n                        mix(hash(n + 170.0), hash(n + 171.0), f.x), f.y), f.z);\n    return res;\n}\n\nfloat fbm(vec3 p)\n{\n    float f;\n    p = m * p * .9 + iTime * .4;\n    f  = 0.5 * noise(p);\n    p = m * p * 2. + iTime * .6;\n    f += 0.25 * noise(p);\n    p = m * p * 2.1 + iTime * .8;\n    f += 0.125 * noise(p);\n    return f;\n}\n\nfloat metaBall(vec2 st, vec2 aspect, vec3 t) {\n    vec2 p = vec2(\n        .7 * cos(iTime * 1.2 + .5),\n        .7 * sin(iTime * 1.6 + .9)\n    ) * aspect * fbm(t);\n    float d = length(vec2(p) - st);\n    \n    vec2 s = vec2(\n        .06 + sin(iTime * 2.4) * .02,\n        .18 + cos(iTime * 3.2) * .04\n    ) * (1. + fbm(t) * .2);\n    float c = (1. - smoothstep(s.x, s.y, d)) * .08;\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.);\n    vec2 st = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    vec2 mouse = (iMouse.xy / iResolution.xy - .5) / iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    col.x += metaBall(st, aspect, vec3(.1, .2, .3));\n    col.y += metaBall(st, aspect, vec3(.4, .5, .6));\n    col.z += metaBall(st, aspect, vec3(.7, .8, .9));\n\n    vec4 buffer = texture(iChannel0, fragCoord.xy / iResolution.xy);\n    col = (buffer.xyz * .99) + col;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}