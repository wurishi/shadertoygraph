{"ver":"0.1","info":{"id":"wtlGzN","date":"1555812357","viewed":63,"name":"Mandelbrot Test [lvachon]","username":"lvachon","description":"I wanted to see how much faster this was on the GPU.  ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 z = vec2(0,0);\n    vec2 nz = vec2(0,0);\n    float timeStuffC = (1.0/(iTime*iTime*iTime));\n    vec2 c = (0.0000001+2.0 * timeStuffC) * (uv-vec2(0.5,0.50))+vec2(-0.761574*(1.0-timeStuffC),-0.0847596 *(1.0-timeStuffC)).xy;\n\tfloat iter=0.0;\n    for(iter=0.0; iter<1.0 && z.x < 2.0 && z.x > -2.0 && z.y < 2.0 && z.y > -2.0 ; iter+=0.0025){\n       nz.x = (z.x*z.x) - (z.y*z.y);// + c.x;\n       nz.y = (z.x*z.y) + (z.y*z.x);// + c.y;\n       z.x = nz.x+c.x;\n       z.y = nz.y+c.y;\n        //z=z+c;\n    }\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(1.0-cos(6.28*iter),sin(6.28*iter),1.0-iter,1.0);\n}","name":"Image","description":"","type":"image"}]}