{"ver":"0.1","info":{"id":"ms3yDM","date":"1695121266","viewed":69,"name":"2D Underwater Shader 2.0.","username":"xzripper1","description":"2D Underwater Shader 2.0.","likes":4,"published":1,"flags":0,"usePreview":1,"tags":["underwater","shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 f, in vec2 c) {\n    vec2 u = c / iResolution.xy;\n    float fr = 9.0, a = 0.008, ws = 2.5;\n    int br = 7;\n    float wx = a * sin(u.y * fr + iTime * ws);\n    float wy = a * cos(u.x * fr + iTime * ws);\n    vec3 b = vec3(0.0);\n    float bw = 1.0 / float((2 * int(br) + 1) * (2 * int(br) + 1));\n    vec2 pd = u;\n    pd.t += iTime * 0.5;\n    vec4 d = texture(iChannel0, pd);\n    vec2 doff = d.xy * 2.0 - vec2(1.0, 1.0);\n    doff *= 0.01;\n    u += doff;\n    for (int i = -int(br); i <= int(br); i++) { for (int j = -int(br); j <= int(br); j++) { b += texture(iChannel0, u + vec2(float(i), float(j)) / iResolution.xy + vec2(wx, wy)).rgb; } }\n    vec3 tc = b * bw;\n    vec3 fc = mix(tc, tc * vec3(0.0, 0.5, 0.91), 0.35);\n    f = vec4(fc, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}