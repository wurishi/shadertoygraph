{"ver":"0.1","info":{"id":"wdVXzD","date":"1573572389","viewed":787,"name":"Spherize Distortion","username":"hypnothalamus","description":"Spherize or Fish Eye lens distortion.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["eye","fish","spherize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"Spherize Distortion\" by Lucian Stanculescu - 2019\n// Free to use, credit if you want/can.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 hRes = iResolution.xy * 0.5;\n    \n    vec2 xy = fragCoord - hRes;\n    \n    // \"f\" controls the distortion - small f = big distortion\n    \n#if 0\n    float f = hRes.x;\n#else    \n    float f = hRes.x * mix(0.3, 10.0, 0.5 + 0.5 * sin(iTime * 3.0)); // animated distortion\n#endif\n    \n    float R2 = dot(hRes, hRes);\n    \n    float z = sqrt(R2 - dot(xy, xy));\n    \n    z /= f + z;\n    \n    xy -= xy * z;\n    \n    xy += hRes;\n\n    fragColor = texture(iChannel0, xy / iResolution.xy);\n    \n    // uncomment to see undistorted image\n//\tfragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Image","description":"","type":"image"}]}