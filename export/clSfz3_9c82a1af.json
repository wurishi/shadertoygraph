{"ver":"0.1","info":{"id":"clSfz3","date":"1694280238","viewed":66,"name":"Trippy circular waves","username":"fancellu","description":"Trippy waves of circles","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n vec3 a=vec3(0.5, 0.5,0.5);\n vec3 b=vec3(0.5, 0.5,0.5);\n vec3 c=vec3(1.0, 1.0,1.0);\n vec3 d=vec3(0.263, .416,0.557);\n \n return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // normalize x&y to 0-1\n    vec2 uv = fragCoord/iResolution.xy;\n        \n    uv=uv * 2.0 - 1.0; // centre pixel is 0,0 now \n    // handle aspect ratio\n    uv.x *= iResolution.x/iResolution.y;\n        \n     // take a copy of uv before we fractionalize it   \n    vec2 uv0=uv;\n    \n    vec3 finalColor=vec3(0.0);\n        \n    for (float i=0.0; i < 5.0; i++) {\n        uv*=1.95;\n\n        // removes digits >1.0\n        uv=fract(uv);\n        \n        uv -=0.5;\n\n        float d = length(uv) * exp(-length(uv0)); // distance from centre            \n\n        vec3 col=palette(length(uv0) + i*.4+ iTime*.6);    \n\n        d=pow(0.007/abs(sin(d*8.+ iTime)/8.),1.2);    \n\n\n        finalColor += col*d;\n\n    }\n        \n    \n    fragColor = vec4(finalColor,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}