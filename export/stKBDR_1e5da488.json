{"ver":"0.1","info":{"id":"stKBDR","date":"1664377790","viewed":42,"name":"Fork color puzz sona1111 947","username":"sona1111","description":"Simple colored line effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"flyfWR","parentname":"color puzzle"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Green screen function from @iq \n\n// :D :D :D\nvec4 compositeGreenScreenTexture(vec2 uv, vec4 background)\n{\n\n     vec4 tex = texture(iChannel0, uv);\n        \n     float maxrb = max( tex.r, tex.b );\n     float k = clamp( (tex.g-maxrb)*5.0, 0.0, 1.0 );\n\n     float ll = length( tex );\n     tex.g = min( tex.g, maxrb*0.8 );\n     tex = ll*normalize(tex);\n\n     return mix(tex, background, k);\n\n}\n\nconst float PI = 3.14159;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float r = max(0.0, cos(atan(uv.y/uv.x) * 30.0)+0.1);\n    float g = max(0.0, cos(atan(uv.y/uv.x) * 30.0 + PI/2.0 + iTime)+0.4);\n    float b = max(0.0, cos(atan(uv.y/uv.x) * 30.0 - PI/2.0 - iTime)+0.4);\n    vec4 col = vec4(r, g, b, 1.0);\n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}