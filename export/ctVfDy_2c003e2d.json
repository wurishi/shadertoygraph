{"ver":"0.1","info":{"id":"ctVfDy","date":"1702478270","viewed":24,"name":"Space /w raymarching ","username":"ZoldLeo","description":"Spheres","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec3 co) { return fract(sin(dot(co, vec3(12.9898, 78.233, 46.9831))) * 43758.5453); }\n\nvec4 scene(vec3 p) {\n    float r = rand(floor(p/20.));\n    if (r>.01) return vec4(0,0,0,20); // Skip to the next star (a bit broken)\n    vec3 oldp = p;\n    p = mod(p,20.)-10.; // Make infinite stars\n    return vec4(1,1,r*1000.,length(p)-1.); // Vary the color between yellow and white\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0,0,0,1);\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.x;\n    vec3 rd = normalize(vec3(uv,1));\n    vec3 ro;\n    for (int i=0;i<100;i++) {\n        vec4 d = scene(ro);\n        if (d.w<.001) {\n            fragColor = vec4(d.xyz,1);\n            return;\n        }\n        ro += rd*d.w;\n    }\n}","name":"Image","description":"","type":"image"}]}