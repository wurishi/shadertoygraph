{"ver":"0.1","info":{"id":"4fsXRf","date":"1705533189","viewed":124,"name":"Mandelbox 2D","username":"MisterSirCode","description":"Really been wanting to do this one for a while\n\nPart of my Simple Fractals playlist: [URL]https://www.shadertoy.com/playlist/NfSGW3[/URL]","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"fscyzB","parentname":"10 Line Mandelbrot"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA 4\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float ttlr;\n    float ttlr2;\n    \n    for (int m = 0; m < AA; m++)\n    for (int n = 0; n < AA; n++) {\n    \n        #if AA>1\n        vec2 o = vec2(float(m),float(n)) / float(AA) - 0.5;\n        vec3 z = vec3(((2.0 * (fragCoord + o) - iResolution.xy) / iResolution.y) * 6.5, \n                      abs(mod(iTime / 50.0 + 1.0, 4.0) - 2.0) - 1.0);\n        #else\n        vec3 z = vec3(((2.0 * fragCoord - iResolution.xy) / iResolution.y) * 6.5, \n                      abs(mod(iTime / 50.0 + 1.0, 4.0) - 2.0) - 1.0);\n        #endif\n        float scale = 2.0;\n        vec3 offset = z;\n        float dr = 1.0;\n        float r2 = 0.0;\n\n        for (int n = 0; n < 8; n++) {\n            z = clamp(z, -1.0, 1.0) * 2.0 - z;\t\n            r2 = dot(z,z);\n            if (r2 < 0.5) { \n                float temp = 2.0;\n                z *= temp;\n                dr *= temp;\n            } else if (r2 < 1.0) { \n                float temp = 1.0 / r2;\n                z *= temp;\n                dr *= temp;\n            }\n            z = scale * z + offset;\n            dr = dr * abs(scale) + 1.0;\n        }\n\n        ttlr += length(z) / abs(dr);\n        ttlr2 += r2;\n    }    \n    \n    #if AA>1\n    float saa = float(AA*AA);\n    ttlr /= saa;\n    ttlr2 /= saa;\n    #endif\n    \n    fragColor = vec4(vec3(sqrt(ttlr / ttlr2) * 10.0) * vec3(0.3, 1.0, 0.2), 1.0);\n}","name":"Image","description":"","type":"image"}]}