{"ver":"0.1","info":{"id":"ss3cWr","date":"1653572468","viewed":97,"name":"CircleRing","username":"gPlatl","description":"ring of circles without a loop\nmouse.x = circle size, \nmouse.y = circle count","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circles","antialiasing","ring","loop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// shader:  CircleRing.glsl  \n\n// v1 2022-05-26\n// v2 2022-05-28 colorized\n\n// ring of circles without a loop\n\n// circles, ring, loop, rotate, antialiasing\n\nfloat circles = 14.;   // number of circles in the ring\n\nvec2 mp = vec2(0.5);   // mouse position\n\nfloat circle(vec2 uv, vec2 p)  \n{ \n  return smoothstep(1.0, 0.8, (8.+0.1*iMouse.x)*length(uv - p)); \n}\n\nfloat theta = 0.0;\nvec2 cc = vec2(0);\n\nfloat ring(float circles, vec2 uv)\n{\n  float period = 3.14159 / circles;\n  float radius = length(uv);\n  theta  = atan(uv.y, uv.x);\n  theta = mod(theta +iTime*0.1 +period, 2.0*period) - period;\n  cc = vec2(cos(theta), sin(theta)) * radius;    \n  return 1.0 - circle(cc, vec2(0.22, 0.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord - 0.5*iResolution.xy) / iResolution.x;\n  mp = (                          iMouse.xy) / iResolution.x;\n  circles = 8. + floor(mp.y*20.);\n  float c = ring(circles, uv);\n  fragColor = vec4(11.*theta, c*0.5+mod(cc.x*6.5,1.), c+cc.y*11.5, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}