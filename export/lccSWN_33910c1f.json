{"ver":"0.1","info":{"id":"lccSWN","date":"1713924469","viewed":128,"name":"GraphAnything","username":"eerop","description":"Graph any function on a [-5,5] range. Fun to play around with random functions.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["graph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nfloat f(vec2 uv) {\n\n    float x = uv.x;\n    float y = uv.y;\n    \n    return dot(vec2(x,x),vec2(y,y));\n    return dot(vec2(x,x),vec2(y,y));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = uv;\n    \n    vec2 mappedUV = 10.*uv - 5.0;\n    \n    uv *= 10.0;\n    uv.x = fract(uv.x);\n    uv.y = fract(uv.y);\n\n    \n    vec3 col = vec3(1.0);\n    \n    \n   \n    \n    // we map (0,1) to [-5,5]\n    // we run the f for that\n    // we then use that to decide where to draw graph.\n    \n    // we need to draw a [-5,5] grid. so, 0,...,4\n    // so that's 5 boxes left right\n    \n\n    \n    float val = f(mappedUV);\n    \n\n    // here we check based on the\n    if (abs(mappedUV.y - val) < 0.1) {\n       col = vec3(0.0); \n    } else {\n      col = vec3(1.0);\n    }\n    \n    // Draw grid\n    \n    if (abs(uv.x - 1.) < .05) {\n        col = vec3(0.0); \n    }\n   \n    if (abs(uv.y - 1.) < .05) {\n        col = vec3(0.0);\n    }\n    \n   fragColor = vec4(col,1.0);\n   return;\n \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}