{"ver":"0.1","info":{"id":"dttXD4","date":"1685426908","viewed":27,"name":"Neon Spirals","username":"chronosis","description":"Neon Spirals ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple","vortex","spirals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI          3.14159265358979323846264\n#define TWO_PI      6.28318530717958647692528\n\n#define scaleSize   5.0\n#define swirlSpeed  -6.0\n#define swirlSpeed2 -1.0\n#define swirlScale  1.0\n#define swirlBend   3.0\n#define swirlBands  3.0\n#define timeScale   0.05\n\nvec3 tint_x = vec3(0.75, 0.5, 1.0);\nvec3 tint_y = vec3(0.25, 0.5, 0.75);\nvec2 center = vec2(0.5, 0.5);\nvec2 zero_vec = vec2(0.0, 0.0);\nvec2 right = vec2(1.0, 0.0);\nvec2 left = vec2(-1.0, 0.0);\n\nfloat speed = swirlSpeed;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime * speed;\n    float cosTime = 1.0 + abs(cos(time * timeScale));\n      \t\n    // Normalized pixel coordinates (from 0 to 1)\n    float mn = min(iResolution.x, iResolution.y);\n    vec2 res = iResolution.xy / mn;\n    vec2 uv = fragCoord / mn;\n    uv -= (center * res);\n    uv *= (scaleSize * cosTime);\n\n    // Calculate Polar Coordinates\n    float r = distance(uv, zero_vec);\n    float theta;\n    if (uv.y < 0.0) {\n      theta = acos(dot(normalize(uv), right));\n    } else {\n      theta = PI + acos(dot(normalize(uv), left));\n    }   \n       \n    vec2 swirl_uv = vec2(r * swirlBend + (theta * swirlScale), swirlSpeed2 * theta - r * swirlBend);\n\n    float swirl_level_x = (1.0 + cos(((time * 0.5) + swirl_uv.x) * swirlScale)) * 0.5;\n    swirl_level_x = round(swirl_level_x * swirlBands) / swirlBands;\n\n    float swirl_level_y = (1.0 + cos((time + swirl_uv.y) * swirlBend)) * 0.5;\n    swirl_level_y = round(swirl_level_y * swirlBands) / swirlBands;\n\n    // Time varying pixel color\n    vec3 col = clamp((swirl_level_y * tint_y) + (swirl_level_x * tint_x), 0.0, 1.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}