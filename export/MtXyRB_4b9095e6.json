{"ver":"0.1","info":{"id":"MtXyRB","date":"1505237860","viewed":169,"name":"Square Distance Foo","username":"isak","description":"Square Distance Foo based on line distance foo","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["distancefunction","square","proper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define bg_color vec4(0.0)\n#define red vec4(1,0,0,1)\n#define blue vec4(0,0,1,1)\n#define green vec4(0,1,0,1)\n#define white vec4(1,1,1,1)\n#define d_pix (1.0/iResolution.y)\n\nfloat d_square(vec2 uv, float a, float b){\n    float px  = 0.5*a; float py = 0.5*b;  \n    float d = length(uv - vec2(clamp(uv.x,-px,px), clamp(uv.y, -py, py)) );\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0*(fragCoord.xy / iResolution.xy) - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 2.0;\n    \n    float size = 1.0 + sin(iTime);\n    float dist = d_square(uv, size, size);\n    \n    fragColor = bg_color;\n    fragColor += vec4(tanh(dist), 0.5, 0,1) * sin(50.0 * dist);\n    fragColor += 0.8*white * smoothstep(4.0*d_pix, 0.0, dist );\n\n    \n}","name":"Image","description":"","type":"image"}]}