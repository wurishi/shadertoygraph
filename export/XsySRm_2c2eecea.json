{"ver":"0.1","info":{"id":"XsySRm","date":"1463402446","viewed":145,"name":"Perlin noise fun","username":"metric","description":" ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin","fun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fade(float t) { return t * t * t * (t * (t * 6. - 15.) + 10.); }\nvec2 _smooth(vec2 x) { return vec2(fade(x.x), fade(x.y)); }\n\nvec2 hash(vec2 co) {\n    float m = dot(co, vec2(12.9898, 78.233));\n    return fract(vec2(sin(m),cos(m))* 43758.5453*(iTime+50.)*.000003) * 2. - 1.;\n}\n\nfloat perlinNoise(vec2 uv) {\n    vec2 PT  = floor(uv);\n    vec2 pt  = fract(uv);\n    vec2 mmpt= _smooth(pt);\n    \n    vec4 grads = vec4(\n    \tdot(hash(PT + vec2(.0, 1.)), pt-vec2(.0, 1.)),   dot(hash(PT + vec2(1., 1.)), pt-vec2(1., 1.)),\n        dot(hash(PT + vec2(.0, .0)), pt-vec2(.0, .0)),   dot(hash(PT + vec2(1., .0)), pt-vec2(1., 0.))\n    );\n\n    return 1.*mix (mix (grads.z, grads.w, mmpt.x), mix (grads.x, grads.y, mmpt.x), mmpt.y);\n}\n\n\nfloat fbm(vec2 uv) {\n    float finalNoise = 0.;\n\tfinalNoise += .50000*perlinNoise(2.*uv);\n    finalNoise += .25000*perlinNoise(4.*uv);\n    finalNoise += .12500*perlinNoise(8.*uv);\n    finalNoise += .06250*perlinNoise(16.*uv);\n    finalNoise += .03125*perlinNoise(32.*uv);\n    \n    return finalNoise;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n\n    float noiseSample = fbm(2.*uv)+.5;\n    float x = fbm(2.*uv*(.5-noiseSample))+.5;\n    \n    if (x > -1.)\n        fragColor = vec4(0.4, .1, .4, 1.);\n    \n    if (x > .3)\n        fragColor = vec4(0.1, .7, .3, 1.);\n    \n    if (x > .4)\n        fragColor = vec4(0.9, .9, .3, 1.);\n    \n    if (x > clamp(abs(sin(.5*iTime)), .45, 1.) )\n        fragColor = vec4(0.8, .1, .3, 1.);\n\n}","name":"Image","description":"","type":"image"}]}