{"ver":"0.1","info":{"id":"7tKczc","date":"1722701453","viewed":12,"name":"TBOS_Shapes1","username":"nako","description":"The Book of Shades Algorithmic drawing\nhttps://thebookofshaders.com/07/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 fillRect(float bb, float tb, float lb, float rb, vec2 st)\n{\n    float b = step(bb, st.y);\n    float t = step(tb, 1.0 - st.y);\n    float l = step(lb, st.x);\n    float r = step(rb, 1.0 - st.x);\n    \n    return vec3(b * t * l * r);\n}\n\nvec3 drawRect(float bb, float tb, float lb, float rb, vec2 st)\n{\n    float w = 0.02;\n    vec3 col = fillRect(bb, tb, lb, rb, st);    \n    return col - fillRect(bb+w, tb+w, lb+w, rb+w, st);   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    float bl_ratio = 0.8;\n    float tr_ratio = 0.8;\n    //vec2 bl = step(vec2(1.0-bl_ratio), st);\n    //vec2 tr = step(vec2(1.0-tr_ratio), 1.0 - st);\n    \n    //use smoothstep\n    //vec2 bl = smoothstep(vec2(0.2), vec2(0.4), st);\n    //vec2 tr = smoothstep(vec2(0.2), vec2(0.4), 1.0 - st);\n    \n    vec2 bl = floor(st + vec2(bl_ratio));\n    vec2 tr = floor(st - vec2(tr_ratio));\n    \n    col = vec3(bl.x * bl.y * tr.x * tr.y);\n    col = drawRect(0.1, 0.2, 0.3, 0.0, st);\n    \n    \n    if(1.0 < st.x){\n        col = vec3(0.0, 0.0, 0.0);\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}