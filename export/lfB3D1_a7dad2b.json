{"ver":"0.1","info":{"id":"lfB3D1","date":"1704156726","viewed":21,"name":"practice #3 - box blur","username":"davidkimighty","description":"box blur","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 boxBlur(vec2 uv, float kernel)\n{\n    vec3 color = vec3(0);\n    for (float i = -kernel; i <= kernel; i++)\n    {\n        for (float j = -kernel; j <= kernel; j++)\n        {\n            vec2 offset = vec2(i, j) / iResolution.xy;\n            color += texture(iChannel0, uv + offset).rgb;\n        }\n    }\n    color /= pow(2.0 * kernel + 1.0, 2.0);\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    const float kernelSize = 10.0;\n    \n    vec3 color = boxBlur(uv, kernelSize);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}