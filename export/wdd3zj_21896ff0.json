{"ver":"0.1","info":{"id":"wdd3zj","date":"1568905037","viewed":142,"name":"nicenicenice","username":"av0dimed","description":"yo","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["opengl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//пикселизация + палитра\n\nvec2 texel_size = vec2(6.0,6.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    fragCoord = floor(fragCoord/texel_size);\t// Pixelify\n    fragCoord /= iResolution.xy / texel_size;\t// Correct scale\n\n    float reaction_coordinate = texture(iChannel1, fragCoord).r;\t// Use red channel\n    \n    float mixval = (((reaction_coordinate - 0.55) * 10.0 + 0.5) * 2.0);\n    \n    fragColor = vec4(mix(vec3(1.0, 0.58, 0.0), \n                         vec3(1.0, 0.7, 0.4),\n                         mixval),\n                \t reaction_coordinate);\n    \n    fragColor.rgb = vec3(1.0, 0.2, 0.0);\t// Red\n    if (fragColor.a > 0.65) fragColor.rgb = vec3(1.0, 1.0, 1.0);\t// White\n    else if (fragColor.a > 0.37) fragColor.rgb = vec3(1.4, 0.8, 0.0);\t// Yellow\n    fragColor.a = float(fragColor.a > 0.1);\n}\n\n\n//сел-шейдинг типа\n/*\n#define FILTER_SIZE 3\n#define COLOR_LEVELS 7.0\n#define EDGE_FILTER_SIZE 10\n#define EDGE_THRESHOLD 0.05\n\nvec4 edgeFilter(in int px, in int py, in vec2 fragCoord)\n{\n\tvec4 color = vec4(0.0);\n\t\n\tfor (int y = -EDGE_FILTER_SIZE; y <= EDGE_FILTER_SIZE; ++y)\n\t{\n\t\tfor (int x = -EDGE_FILTER_SIZE; x <= EDGE_FILTER_SIZE; ++x)\n\t\t{\n\t\t\tcolor += texture(iChannel0, (fragCoord.xy + vec2(px + x, py + y)) / iResolution.xy);\n\t\t}\n\t}\n\n\tcolor /= float((2 * EDGE_FILTER_SIZE + 1) * (2 * EDGE_FILTER_SIZE + 1));\n\t\n\treturn color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n\t// Shade\n\tvec4 color = vec4(0.0);\n\t\n\tfor (int y = -FILTER_SIZE; y <= FILTER_SIZE; ++y)\n\t{\n\t\tfor (int x = -FILTER_SIZE; x <= FILTER_SIZE; ++x)\n\t\t{\n\t\t\tcolor += texture(iChannel0, (fragCoord.xy + vec2(x, y)) / iResolution.xy);\n\t\t}\n\t}\n\n\tcolor /= float((2 * FILTER_SIZE + 1) * (2 * FILTER_SIZE + 1));\n\t\n\tfor (int c = 0; c < 3; ++c)\n\t{\n\t\tcolor[c] = floor(COLOR_LEVELS * color[c]) / COLOR_LEVELS;\n\t}\n\t\n\t// Highlight edges\n\tvec4 sum = abs(edgeFilter(0, 1, fragCoord) - edgeFilter(0, -1, fragCoord));\n\tsum += abs(edgeFilter(1, 0, fragCoord) - edgeFilter(-1, 0,fragCoord));\n\tsum /= 2.0;\t\n\n\tif (length(sum) > EDGE_THRESHOLD)\n\t{\n\t\tcolor.rgb = vec3(0.0);\t\n\t}\n\t\n\tfragColor = color;\n}\n*/","name":"Image","description":"","type":"image"}]}