{"ver":"0.1","info":{"id":"dtl3Rj","date":"1672071008","viewed":194,"name":"Unsharp Mask (LOD)","username":"MysteryPancake","description":"Unsharpen mask is faster using LOD levels. Left is result, right is mask.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["sharp","image","mask","photoshop","sharpen","unsharp","unsharpen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    // Optional sharpness boost\n    float amount = 1.0;\n    // Modulate blur over time\n    float radius = abs(mod(iTime * 8.0, 16.0) - 8.0);\n    \n    // Sample original and blurred image\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 original = texture(iChannel0, uv);\n    vec4 blurred = textureLod(iChannel0, uv, radius);\n    \n    // Produce mask\n    blurred = original - blurred;\n    original += blurred * amount;\n    \n    // Sharpened image on the left, mask on the right\n    fragColor = uv.x > 0.5 ? blurred : original;\n}","name":"Image","description":"","type":"image"}]}