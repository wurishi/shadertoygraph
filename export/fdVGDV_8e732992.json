{"ver":"0.1","info":{"id":"fdVGDV","date":"1632310045","viewed":33,"name":"loka：【故障5-1】扫描线抖动故障","username":"LokaHer","description":" 1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define _DIR 0  //方向\n#define _ScanLineJitter_Y (sin(iTime))  //效果程度\n#define _ScanLineJitter_X (1. / iResolution.x * 10.)  //偏移程度\n\nfloat randomNoise(float x, float y)\n{\n\treturn fract(sin(dot(vec2(x, y), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 ScanLineJitter(vec2 uv)\n{\n    #if _DIR\n        float jitter = randomNoise(uv.x, iTime) * 2. - 1.;\n    #else\n        float jitter = randomNoise(uv.y, iTime) * 2. - 1.;\n    #endif\n    \n    jitter *= step(_ScanLineJitter_Y, abs(jitter)) * _ScanLineJitter_X;\n    \n    vec3 col = texture(iChannel0, fract(uv + vec2(jitter, 0))).xyz;\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = ScanLineJitter(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}