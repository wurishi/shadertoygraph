{"ver":"0.1","info":{"id":"NllSzr","date":"1625075379","viewed":40,"name":"Self-portrait1","username":"alina_yezhkova","description":"self-portrait","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["digitalization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float _(float a, float b, float c){\n                  return max(a,max(b,c));\n        }\n             \n        float L(vec2 p, vec2 P0, vec2 P1){\n                float a = -(P1.y-P0.y);\n                float b =  (P1.x-P0.x);\n                float d =  P0.x*P1.y- P0.y*P1.x; \n                float x = p.x;\n                float y = p.y;\n                \n                 return a*x + b*y + d;\n        }\n    \n    float T(vec2 p, vec2 P0, vec2 P1, vec2 P2){\n          return  _(\n                     L(p, P0, P1),\n                     L(p, P1, P2), \n                     L(p, P2, P0)\n                   );   \n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//  digitalized Pi profile                      \n vec2 P[38];\n           P[ 0] = vec2(0.99658 ,    0.098375);\n           P[ 1] = vec2(0.93098  ,   0.055603);\n           P[ 2] = vec2(0.83457 ,    0.030796);\n           P[ 3] = vec2(0.75927 ,    0.035928);\n           P[ 4] = vec2(0.75927  ,    0.035928);\n           P[ 5] = vec2(0.67655,    0.064157);\n           P[ 6] = vec2( 0.56132  ,   0.057742);\n           P[ 7] = vec2( 0.47176  ,   0.066296);\n           P[ 8] = vec2( 0.38163 ,   0.10265);\n           P[ 9] = vec2( 0.31204  ,   0.15526);\n           P[10] = vec2( 0.28294  ,   0.21642);\n           P[11] = vec2( 0.27553  ,   0.27673);\n           P[12] = vec2( 0.2664  ,  0.31565);\n           P[13] = vec2( 0.26412   ,  0.36441);\n           P[14] = vec2( 0.24073 ,  0.38452);\n           P[15] = vec2( 0.19452  , 0.41146);\n           P[16] = vec2( 0.15573  ,  0.43328);\n           P[17] = vec2( 0.14775  ,  0.45081);\n           P[18] = vec2( 0.15687,  0.46920);\n           P[19] = vec2( 0.17342 ,  0.48332);\n           P[20] = vec2( 0.19852,  0.49316);\n           P[21] = vec2( 0.20821  ,   0.50128);\n           P[22] = vec2( 0.20936  ,   0.52566);\n           P[23] = vec2(0.19738 ,    0.54063);\n           P[24] = vec2(0.19795 ,   0.55261);\n           P[25] = vec2(0.21791  ,   0.56630);\n           P[26] = vec2(0.21791 ,   0.56630);\n           P[27] = vec2(0.20308 ,   0.57742);\n           P[28] = vec2(0.2008 ,   0.59495);\n           P[29] = vec2(0.22191 ,   0.61634);\n           P[30] = vec2(0.20308 ,  0.66039);\n           P[31] = vec2(0.21221 ,    0.69333);\n           P[32] = vec2(0.23503 ,    0.71300);\n           P[33] = vec2(0.27096 ,    0.72840);\n           P[34] = vec2(0.32345  ,    0.72926);\n           P[35] = vec2(0.43183 ,   0.74594);\n           P[36] = vec2(0.4575 ,    0.80411);\n           P[37] = vec2(0.56874, 0.97006);\n       \n   \n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 p = 1.0 - 2.0* fragCoord/iResolution.xy;\n    vec2 m = 1.0 - 2.0* iMouse.xy/iResolution.xy;\n\n     float x = p.x * iResolution.x/iResolution.y;\n     float y = p.y ;\n     \n     float mx = m.x * iResolution.x/iResolution.y;\n     float my = m.y ;\n           \n            x/=mx;\n            y/=my;\n            \n            p.x=x;\n            p.y=y;\n   \n\n      float  z = 1.0e25; //infinity?\n              for(int i=0;i<37-3;i++)\n                z = min(z, T(p,  P[i],P[i+1], P[i+3]) );   \n       float     f = 1.25/z; \n\n    // Time varying pixel color\n               vec3 col = vec3(1.0, 1.0, 1.0);\n                if(f >= 0.0)col.g = sin(iTime/10.0);\n                   else     col.r = f;\n                \n\n    // Output to screen\n                 fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}