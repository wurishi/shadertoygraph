{"ver":"0.1","info":{"id":"llS3W1","date":"1428520610","viewed":328,"name":"polkaDot","username":"DimitryK","description":"Take on a polka dot shader with a smoothstep antialiasing and some coloring based on quadrants","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","polkadot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float nr = 6.0;\nconst vec2 mid = vec2(0.5);\nconst float radius = 0.25;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv.y *= iResolution.y/iResolution.x;\n    \n    // we shift by 0.5 to fill the corners\n    vec2 uv_offset = (uv) * nr;\n    \n    vec2 local = vec2( fract(uv_offset.x), fract(uv_offset.y) );\n    \n    vec3 col = vec3(1.0);\n    float quadrantX = floor(abs(uv_offset.x));\n    float quadrantY = floor(abs(uv_offset.y));\n    col.x = cos(quadrantX*5.0) + sin(iTime);\n    col.y = sin(quadrantY*2.0) + cos(iTime);\n    //col.z = sin(col.x) + cos(col.y);\n    \n    vec2 distFM = local - mid;\n    \n    float dist = length(distFM);\n    \n    float circ = smoothstep(0.0, 0.02, radius-dist);\n    col *= circ;\n\tfragColor = vec4(col, 1.0);\n}","name":"","description":"","type":"image"}]}