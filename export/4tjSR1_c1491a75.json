{"ver":"0.1","info":{"id":"4tjSR1","date":"1441627534","viewed":343,"name":"Google' New Logo","username":"tatsunoru","description":"Google' New Logo","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["googlelogo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nvec2 pixpos;\nvec4 background;\n\nvec2 rotate(vec2 v, float degree){\n    float c = cos(degree/180.0*3.415);\n    float s = sin(degree/180.0*3.415);\n\treturn vec2(v.x*c - v.y*s, v.x*s + v.y*c);\n}\n\nfloat box(vec2 pos, vec2 size){\n    size -= vec2(0.01);\n    vec2 q = abs(pos - pixpos);\n    return length(max(q - size, 0.0)) - 0.01;\n}\n\nfloat boxrot(vec2 pos, vec2 size, float r){\n    size -= vec2(0.01);\n    vec2 q = abs(rotate(pos - pixpos, r));\n    return length(max(q - size, 0.0)) - 0.01;\n}\n\n\nfloat sphere(vec2 pos, float radius){\n    return length(pos - pixpos) - radius;\n}\n\nfloat add(float a, float b){\n    return min(a, b);\n}\n\nfloat subtract(float a, float b){\n    return max(a, -b);\n}\n\nvec4 select(float a, vec4 inner, vec4 outer){\n    //return a > 0.0 ? outer : inner;\n    return mix(inner, outer, smoothstep(0.0, 0.01, a));\n}\n    \nvec4 select(float a, vec4 inner){\n    return select(a, inner, vec4(0, 0, 0, 0));\n}\n\nvec2 supershapes(vec4 n, float phi){\n\tfloat m = n.x * phi * 0.25;\n\tfloat t1 = pow(abs(cos(m)), n.z);\n\tfloat t2 = pow(abs(sin(m)), n.w);\n\tfloat radius = 1.0 / pow(t1 + t2, 1.0 / n.y);\n\treturn vec2(cos(phi), sin(phi)) * radius;\n}\n\nvec2 gbase;\n\nvec4 G(){\n    vec2 base = vec2(0.1, 0.5) + gbase;\n    \n    float gcircle = sphere(base, 0.5);\n    float ginnercircle = sphere(base, 0.4);\n    float gbox = box(base+vec2(0.25, 0.0), vec2(0.24, 0.05));\n    float grotbox = boxrot(base+vec2(0.37, 0.2), vec2(0.2, 0.2), -40.0);\n\n    float g = gcircle;\n    g = subtract(g, ginnercircle);\n    g = subtract(g, grotbox);\n    g = add(g, gbox);\n\treturn select(g, vec4(0.3, 0.5, 1, 1));\t\n}\n\nvec4 o(){\n    vec2 base = vec2(1.0, 0.3) + gbase;\n    \n    float circle = sphere(base, 0.3);\n    float innercircle = sphere(base, 0.2);\n \n    float g = circle;\n    g = subtract(g, innercircle);\n\treturn select(g, vec4(1, 0.2, 0.0, 1));\t\n}\n\nvec4 o2(){\n    vec2 base = vec2(1.7, 0.3) + gbase;\n    \n    float circle = sphere(base, 0.3);\n    float innercircle = sphere(base, 0.2);\n \n    float g = circle;\n    g = subtract(g, innercircle);\n\treturn select(g, vec4(0.9, 1.0, 0.0, 1));\t\n}\n\nvec4 g(){\n    vec2 base = vec2(2.4, 0.3) + gbase;\n    \n    float circle = sphere(base, 0.3);\n    float innercircle = sphere(base, 0.2);\n    float rbox = box(base+vec2(0.25, 0.0), vec2(0.05, 0.3));\n    \n    float circle2 = sphere(base+vec2(0, -0.3), 0.3);\n    float innercircle2 = sphere(base+vec2(0, -0.3), 0.2);\n    \n    float vbox = boxrot(base+vec2(-0.2, -0.2), vec2(0.2, 0.6), 60.0);\n \n    float g = circle;\n    g = subtract(g, innercircle);\n    g = add(g, rbox);\n    g = add(g, subtract(subtract(circle2, innercircle2), vbox));\n\treturn select(g, vec4(0.3, 0.5, 1, 1));\t\n}\n\nvec4 l(){\n    vec2 base = vec2(2.9, 0.45) + gbase;\n    \n    float lbox = box(base, vec2(0.05, 0.4));\n\n    float g = lbox;\n\treturn select(g, vec4(0.4, 1.0, 0.0, 1));\t\n}\n\nvec4 e(){\n    vec2 base = vec2(3.4, 0.3) + gbase;\n    \n    float circle = sphere(base, 0.3);\n    float innercircle = sphere(base, 0.2);\n    \n    float nbox = boxrot(base+vec2(0.012, 0.0), vec2(0.287, 0.05), -15.0);\n    float sbox = boxrot(base+vec2(0.29, -0.07), vec2(0.15, 0.13), 30.0);\n \n    float g = circle;\n    g = subtract(g, innercircle);\n    g = subtract(g, sbox);    \n    g = add(g, nbox);\n\treturn select(g, vec4(1, 0.2, 0.0, 1));\t\n}\n\nvec4 bg(vec2 fragCoord )\n{\n    gbase = vec2(1, 0);\n    pixpos = fragCoord.xy / iResolution.yy;\n    pixpos -= vec2(1.0, 0.2);\n    pixpos = supershapes(vec4(length(pixpos)*10.0, 1, 1, 1), atan(pixpos.y, pixpos.x)) + (fragCoord.xy / iResolution.yy) * 1.0;\n    pixpos = pixpos * (9.0 + sin(iTime)*4.0) - vec2(0.5, 0.5);\n    pixpos = mod(pixpos, vec2(5.0, 2.0));\n\treturn G() + o() + o2() + g() + l() + e();\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    gbase = vec2(1, 0);\n    pixpos = (fragCoord.xy / iResolution.yy) * 1.5 + vec2(0.0, -0.3);\n    pixpos -= vec2(sin(iTime*0.5)*3.0, 0.0);\n\tfragColor = G() + o() + o2() + g() + l() + e() + bg(fragCoord);\n}\n\n    \n    ","name":"","description":"","type":"image"}]}