{"ver":"0.1","info":{"id":"ftGcDm","date":"1661540133","viewed":67,"name":"Fractalizing Distance Fields","username":"spenceryonce","description":"Fractalizing Distance Fields. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","math","distance","trippy","geometry","fields","theory","fractalizing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.0-1.0;\n    float p = 0.0;\n    float angle = -0.2-iTime*0.1;\n    \n    p = distance(uv*1.5,vec2(0.4)) + distance(uv,vec2(0.6));\n    for(float i = 1.0; i < 16.0; i += 1.0){\n        uv = abs(uv);\n        uv -= 0.5;\n        uv *= 1.11;\n        uv = uv;\n        uv *= mat2(\n            cos(angle), -sin(angle),\n            sin(angle), cos(angle)\n        );\n        uv += 0.4;\n        p *= distance(uv*1.6,vec2(1.1)) + distance(uv,vec2(0.7));\n    }\n    \n    \n    p = p*fract(p*1.0);\n    \n    vec3 c = vec3(0.0);\n    vec3 color = c+vec3(\n        length(p+vec2(-0.2,0.5)),\n        p,\n        length(p+vec2(-0.2,0.7)));\n\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}