{"ver":"0.1","info":{"id":"Mcd3W8","date":"1711756425","viewed":38,"name":"dot test 1","username":"clydagnathus","description":"guh","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dotgrid(in vec2 uv){\n    vec2 screenuv = uv;\n    uv.x += 0.5;\n    uv *= 50.;\n    uv.y *= sin(uv.x/20. + iTime*0.1)*0.2 + 0.5;\n    uv.x *= cos(uv.y/20. + iTime*0.3)*0.2 + 0.5;\n\n    vec2 fuv = fract(uv);\n    vec2 ssuv = floor(uv + 0.5);\n    ssuv.x /= cos(ssuv.y/20. + iTime*0.3)*0.2 + 0.5;\n    ssuv.y /= sin(ssuv.x/20. + iTime*0.1)*0.2 + 0.5;\n    ssuv /= 50.;\n    ssuv.x -= 0.5;\n\n    float size = 0.001;\n    \n    // to get desired center point of the dot we just floor the warped dot and then\n    // find the screenspace location of that by undoing our previous calculations\n    float f = smoothstep(size + 0.0005, size, distance(screenuv, ssuv));\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv.y -= iMouse.y/iResolution.y*0.1;\n    uv.x -= iMouse.x/iResolution.x*0.1;\n    \n    float r = dotgrid(vec2(uv.x + 0.002*sin(iTime), uv.y));\n    float g = dotgrid(uv);\n    float b = dotgrid(vec2(uv.x, uv.y + 0.002*sin(iTime)));\n    vec3 col = vec3(r,g,b);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}