{"ver":"0.1","info":{"id":"tdGXzR","date":"1573214659","viewed":116,"name":"Flower power","username":"rrrzzz","description":"first attempt at writing shaders","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//initial code taken from shadertoy tutorial https://www.shadertoy.com/view/Md23DV\n\nfloat smootherstep(float edge0, float edge1, float x) {\n\tfloat t = (x - edge0)/(edge1 - edge0);\n\tfloat t1 = t*t*t*(t*(t*6. - 15.) + 10.);\n\treturn clamp(t1, 0.0, 1.0);\n}\n\nfloat antialiasCircle(float dstFromCenter, float radius){\n\treturn smootherstep(radius-1.5*2./iResolution.y, radius+1.5*2./iResolution.y, dstFromCenter);   \n}\n\n#define M_PI 3.1415926535897932384626433832795\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 r =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n\t\n\tvec3 bgCol = vec3(0.3);\n\tvec3 col1 = vec3(0.216, 0.471, 0.698); // blue\n\tvec3 col2 = vec3(1.00, 0.329, 0.298); // yellow\n\tvec3 col3 = vec3(0.867, 0.910, 0.247); // red\n\n\tvec3 pixel = bgCol;\n    \n    float rModifier = 0.1 * iTime;\n    rModifier = mod(floor(rModifier / 0.45), 2.0) == .0 ? rModifier : - rModifier;\n    \n     \n    float radius = mod(rModifier, 0.45) + 0.2;\n\tfloat t = antialiasCircle(length(r), radius);\n\tpixel = mix(col2, pixel, t);\n\t\n    \n    float offset = 2.0*M_PI / 8.0;\n    float defY = 0.8;\n    float defX = 0.8;\n    \n    vec2[8] genCenters; \n    float dFromCenter = .8;\n    \n    float currentOffset = iTime*-.3;\n    for(int q = 0; q < 8; q++)\n    {\n    \tgenCenters[q] = \n            vec2(cos(currentOffset), sin(currentOffset)) * dFromCenter;\t\t\t\t\t\t\t\t\t\t\n    \tcurrentOffset += offset;\n    }    \n       \n    float modifier = 0.09 * iTime;\n    modifier = mod(floor(modifier / 0.4), 2.0) == .0 ? modifier : - modifier;\n    radius = mod(modifier, 0.4);\n    \n    for (int i = 0; i < genCenters.length(); i++){\n        vec2 d = r - genCenters[i];  \n        t = antialiasCircle(length(d), radius);\n  \n    \tpixel = mix(col1, pixel, t); \t\t\n    }\n\t\n\tfragColor = vec4(pixel, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}