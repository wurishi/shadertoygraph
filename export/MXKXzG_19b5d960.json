{"ver":"0.1","info":{"id":"MXKXzG","date":"1720125088","viewed":36,"name":"First Try Swinging Geometry","username":"salie","description":"first try with distance functions","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//from IQ\nfloat sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\n\n// from IQ\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    float dimension = abs(sin(iTime*1.5))-0.2;\n    float dimension2 = abs(cos(iTime*1.5))-0.2;\n    \n    float d = sdBox(p,vec2 (dimension,dimension));\n    float d2 = sdCircle(p,dimension2);\n\n    vec3 col = vec3 (0.1,smoothstep(0.1,0.12,d),smoothstep(0.1,0.12,d2));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}