{"ver":"0.1","info":{"id":"NtlBDl","date":"1651659149","viewed":204,"name":"Simple Hexagon tiling","username":"anemolo","description":"Code piece taken from https://thecodetherapy.com/edit/60aacf0e681ce30028b7c529 :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst vec2 h = vec2(1.0, sqrt(3.0));\n\nfloat hexDist(vec2 uv) {\n  uv = abs(uv);\n  return max(dot(uv, h * 0.5), uv.x);\n}\n\nvec4 hexCoord(vec2 uv) {\n  vec4 center = floor(vec4(uv, uv - vec2(0.5, 1.0)) / h.xyxy) + 0.5;\n  vec4 offset = vec4(uv - center.xy * h, uv - (center.zw + 0.5) * h);\n  return (\n    dot(offset.xy, offset.xy) < dot(offset.zw, offset.zw)\n    ? vec4(offset.xy, center.xy)\n    : vec4(offset.zw, center.zw)\n  );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    col = vec3(fract(hexDist(hexCoord(uv * 10.).xy) ));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}