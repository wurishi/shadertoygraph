{"ver":"0.1","info":{"id":"lcScz3","date":"1722695694","viewed":47,"name":"3 houses","username":"jorge2017a2","description":"3 houses","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["3houses"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//3 houses\n//---3-agos-2024\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///https://www.shadertoy.com/view/XfSczV  //montes\n\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(1.0/antialiasing(0.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DFS(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut;\n  return colOut;\n}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\nvec3 casaA(vec2 p, vec3 colout)\n{vec2 A,B,med,pr;\nfloat dfin;\nfloat r1,ang,he;\n\nA=vec2(0.5103093,0.3505155);\nmed=vec2(0.2010309,0.1701031);\nfloat d1=sdBox(p-A,med);\n\nA=vec2(0.4381443,0.3298969);\nmed=vec2(0.07731958,0.06958763);\nfloat d2=sdBox(p-A,med);\n\n\nA=vec2(0.6134021,0.314433);\nmed=vec2(0.04639175,0.06958763);\nfloat d3=sdBox(p-A,med);\n\n\nA=vec2(0.6134021,0.4175258);\nmed=vec2(0.07216495,0.02319588);\nfloat d4=sdBox(p-A,med);\n\n\nA=vec2(0.5979381,0.2061856);\nmed=vec2(0.07731958,0.02319588);\nfloat d5=sdBox(p-A,med);\n\n\nA=vec2(0.5,0.6752577-0.07);\nmed=vec2(0.5309278/2.0,0.3350515/2.0);\nhe=7.474227E-02;\nfloat d6= sdTrapezoid(p-A, med.x, med.y, he);\n\n\nA=vec2(0.4175258,0.6082474);\nmed=vec2(0.05154639,0.03865979);\nfloat d7=sdBox(p-A,med);\n\n\nA=vec2(0.6134021-0.15,0.5257732);\nmed=vec2(0.1546392,0.1030928*2.0);\n ang=180.000 * PI / 180.0;\n pr = Rotate(p-A, med/2.0, ang);\nfloat d8=sdTriangleIsosceles(pr,med);\n\n\nA=vec2(0.7010309,0.6546392);\nmed=vec2(0.02835052,0.07731958);\nfloat d9=sdBox(p-A,med);\n\n\n//color de cada objeto\nvec3 c1= vec3(0.76045,0.02637,0.04538);\nvec3 c2= vec3(0.48701,0.45312,0.87142);\nvec3 c3= vec3(0.77692,0.6497,0.10976);\nvec3 c4= vec3(0.19665,0.06552,0.5611);\nvec3 c5= vec3(0.18355,0.07922,0.3031);\nvec3 c6= vec3(0.61402,0.10414,0.61759);\nvec3 c7= vec3(0.35172,0.09121,0.49284);\nvec3 c8= vec3(0.20153,0.33573,0.25434);\nvec3 c9= vec3(0.95323,0.30718,0.06032);\nvec3 c10= vec3(0.26987,0.30624,0.86436);\nvec3 c11= vec3(0.47333,0.02081,0.66043);\nvec3 c12= vec3(0.0276,0.06345,0.54062);\nvec3 c13= vec3(0.32118,0.44781,0.62973);\n\nfloat d100=Sdf_D(d6,d7);\n\n    \ncolout= DFB( c1, colout, d1);\ncolout= DFB( c2, colout, d2);\ncolout= DFB( c3, colout, d3);\ncolout= DFB( c4, colout, d4);\ncolout= DFB( c5, colout, d5);\n//colout= DFB( c6, colout, d6); //techo\n//colout= DFB( c7, colout, d7); //ventana\ncolout= DFB( c6, colout,d100); //techo\ncolout= DFB( c9, colout, d9);\ncolout= DFB( c8, colout, d8);\n  \n    return colout;\n}\n\n\n\nvec3 casaB(vec2 p, vec3 colout)\n{ \nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.5412371,0.371134);\nmed=vec2(0.1804124,0.1701031);\nfloat d1=sdBox(p-A,med);\n\n\nA=vec2(0.5515464,0.3762887);\nmed=vec2(0.1185567,0.08247422);\nfloat d2=sdBox(p-A,med);\n\n\nA=vec2(0.2577319,0.4175258);\nB=vec2(0.3556701,0.4948454);\nfloat d3=sdSegment(p,A,B);\n\n\nA=vec2(0.3556701,0.4226804);\nB=vec2(0.2577319,0.4123711);\nfloat d4=sdSegment(p,A,B);\n\n\nA=vec2(0.3556701,0.3350515);\nB=vec2(0.2783505,0.4175258);\nfloat d5=sdSegment(p,A,B);\n\n\nA=vec2(0.3556701,0.371134);\nB=vec2(0.3092783,0.4072165);\nfloat d6=sdSegment(p,A,B);\n\n\nA=vec2(0.5412371,0.2216495);\nmed=vec2(0.1804124,0.02319588);\nfloat d7=sdBox(p-A,med);\n\n\nA=vec2(0.2783505,0.2268041);\nmed=vec2(0.0257732,0.02061856);\nfloat d8=sdBox(p-A,med);\n\n\nA=vec2(0.3247423,0.2319588);\nmed=vec2(0.0257732,0.03608247);\nfloat d9=sdBox(p-A,med);\n\n\nA=vec2(0.5051546,0.314433);\nB=vec2(0.4948454,0.4587629);\nfloat d10=sdSegment(p,A,B);\n\n\nA=vec2(0.5927835,0.3247423);\nB=vec2(0.5876288,0.4484536);\nfloat d11=sdSegment(p,A,B);\n\n\nA=vec2(0.6752577,0.4020618);\nB=vec2(0.4381443,0.4175258);\nfloat d12=sdSegment(p,A,B);\n\n\nA=vec2(0.5412371,0.7164949-0.1);\nmed=vec2(0.4690722/2.0,0.3608247/2.0);\nhe=0.0798969;\nfloat d13= sdTrapezoid(p-A, med.x, med.y, he);\n\n\nA=vec2(0.4536082,0.6958763);\nmed=vec2(0.02319588,0.07216495);\nfloat d14=sdBox(p-A,med);\n\nA=vec2(0.4484536,0.7628866);\nmed=vec2(0.04639175,0.01030928);\nfloat d15=sdBox(p-A,med);\n\nA=vec2(0.6546392-0.1,0.5927835);\nmed=vec2(0.04639175*2.0,0.03608247*2.0);\nang=180.000 * PI / 180.0;\npr = Rotate(p-A, med/2.0, ang);\nfloat d16=sdTriangleIsosceles(pr,med);\n\nA=vec2(0.7835051,0.2680412);\nmed=vec2(0.07216495,0.07474227);\nfloat d17=sdBox(p-A,med);\n\nA=vec2(0.7731959,0.4329897-0.040);\nmed=vec2(0.2164948/2.0,0.1494845/2.0);\nhe=4.381443E-02;\nfloat d18= sdTrapezoid(p-A, med.x, med.y, he);\n\nA=vec2(0.8505155,0.4329897);\nB=vec2(0.8453608,0.5);\nfloat d19=sdSegment(p,A,B);\n\nA=vec2(0.8762887,0.4587629);\nB=vec2(0.8041237,0.4690722);\nfloat d20=sdSegment(p,A,B);\n\n//color de cada objeto\nvec3 c1= vec3(0.49611,0.74302,0.16631);\nvec3 c2= vec3(0.25019,0.51771,0.41327);\nvec3 c3= vec3(0.45871,0.28895,0.58368);\nvec3 c4= vec3(0.46989,0.51448,0.82362);\nvec3 c5= vec3(0.72353,0.3078,0.19125);\nvec3 c6= vec3(0.64975,0.61576,0.65326);\nvec3 c7= vec3(0.98012,0.05417,0.41649);\nvec3 c8= vec3(0.80763,0.46039,0.85865);\nvec3 c9= vec3(0.39354,0.6161,0.99448);\nvec3 c10= vec3(0.64894,0.30798,0.77176);\nvec3 c11= vec3(0.92901,0.99392,0.03614);\nvec3 c12= vec3(0.73304,0.39793,0.14775);\nvec3 c13= vec3(0.91815,0.21222,0.28402);\nvec3 c14= vec3(0.57542,0.57733,0.81268);\nvec3 c15= vec3(0.5121,0.11284,0.61386);\nvec3 c16= vec3(0.44222,0.79972,0.8023);\nvec3 c17= vec3(0.49076,0.94919,0.04315);\nvec3 c18= vec3(0.97811,0.69975,0.36979);\nvec3 c19= vec3(0.10271,0.57219,0.10403);\nvec3 c20= vec3(0.54372,0.98421,0.82718);\n\ncolout= DFB( c18, colout, d18);\ncolout= DFB( c17, colout, d17);\ncolout= DFB( c1, colout, d1);\ncolout= DFB( c2, colout, d2);\ncolout= DFB( c3, colout, d3);\ncolout= DFB( c4, colout, d4);\ncolout= DFB( c5, colout, d5);\ncolout= DFB( c6, colout, d6);\ncolout= DFB( c7, colout, d7);\ncolout= DFB( c8, colout, d8);\ncolout= DFB( c9, colout, d9);\ncolout= DFB( c10, colout, d10);\ncolout= DFB( c11, colout, d11);\ncolout= DFB( c12, colout, d12);\ncolout= DFB( c13, colout, d13); //grande\ncolout= DFB( c14, colout, d14);\ncolout= DFB( c15, colout, d15);\ncolout= DFB( c16, colout, d16);\n\ncolout= DFB( c19, colout, d19);\ncolout= DFB( c20, colout, d20);\n\n\n    return colout;\n}\n\n\n\nvec3 casac(vec2 p, vec3 colout)\n{\nvec2 A,B, med,pr;\nfloat dfin;\nfloat  r1,ang, he ;\n\nA=vec2(0.4787234,0.3457447);\nmed=vec2(0.1702128,0.1223404);\nfloat d1=sdBox(p-A,med);\n\nA=vec2(0.4361702,0.2765957);\nmed=vec2(0.05319149,0.05585106);\nfloat d2=sdBox(p-A,med);\n\nA=vec2(0.5265958,0.2765957);\nmed=vec2(0.05319149,0.05585106);\nfloat d3=sdBox(p-A,med);\n\nA=vec2(0.4255319,0.2765957);\nmed=vec2(0.02925532,0.0212766);\nfloat d4=sdBox(p-A,med);\n\nA=vec2(0.5319149,0.2819149);\nmed=vec2(0.02925532,0.0212766);\nfloat d5=sdBox(p-A,med);\n\nA=vec2(0.4946809,0.3989362);\nr1=0.04255319;\nfloat d6=sdCircle(p-A,r1);\n\nA=vec2(0.4893617,0.3670213);\nB=vec2(0.5,0.4361702);\nfloat d7=sdSegment(p,A,B);\n\nA=vec2(0.5212766,0.393617);\nB=vec2(0.4680851,0.4042553);\nfloat d8=sdSegment(p,A,B);\nA=vec2(0.3882979+0.06,0.643617-0.02);\nmed=vec2(0.02659575,0.2579787);\n\nang=30.000 * PI / 180.0;\npr = Rotate(p-A, med/2.0, ang);\nfloat d9=sdBox(pr,med);\nA=vec2(0.569149-0.06,0.643617); //izq\nmed=vec2(0.02659575,0.2579787);\nang=-30.000 * PI / 180.0;\npr = Rotate(p-A, med/2.0, ang);\nfloat d10=sdBox(pr,med);\n\nA=vec2(0.4840426-0.2,0.4734043-0.01); \nmed=vec2(0.2925532-0.1,0.3031915);\nang=180.000 * PI / 180.0;\npr = Rotate(p-A, med/2.0, ang);\nfloat d11=sdTriangleIsosceles(pr,med);\n\nA=vec2(0.4840426-0.326,0.3989362-0.01);\nmed=vec2(0.5265958-0.2,0.4574468+0.03);\nang=180.000 * PI / 180.0;\npr = Rotate(p-A, med/2.0, ang);\nfloat d12=sdTriangleIsosceles(pr,med);  //grande\n\n//color de cada objeto\nvec3 c1= vec3(0.49611,0.74302,0.16631);\nvec3 c2= vec3(0.25019,0.51771,0.41327);\nvec3 c3= vec3(0.45871,0.28895,0.58368);\nvec3 c4= vec3(0.46989,0.51448,0.82362);\nvec3 c5= vec3(0.72353,0.3078,0.19125);\nvec3 c6= vec3(0.64975,0.61576,0.65326);\nvec3 c7= vec3(0.98012,0.05417,0.41649);\nvec3 c8= vec3(0.80763,0.46039,0.85865);\nvec3 c9= vec3(0.39354,0.6161,0.99448);\nvec3 c10= vec3(0.64894,0.30798,0.77176);\nvec3 c11= vec3(0.92901,0.99392,0.03614);\nvec3 c12= vec3(0.73304,0.39793,0.14775);\n\n\ncolout= DFB( c1, colout, d1);\ncolout= DFB( c2, colout, d2);\ncolout= DFB( c3, colout, d3);\ncolout= DFB( c4, colout, d4);\ncolout= DFB( c5, colout, d5);\ncolout= DFB( c6, colout, d6);\ncolout= DFB( c11, colout, d11);//interior tri\ncolout= DFB( c7, colout, d7);\ncolout= DFB( c8, colout, d8);\nfloat d113=Sdf_U(d9,d10);\nfloat d114=Sdf_I(d113,d12);\ncolout= DFB( c10, colout, d114);\n    return colout;\n\n}\n\n\n\n\n//https://www.shadertoy.com/view/XfSczV\nvec4 montes(vec2 u)\n{\n    vec4 o;\n    u /= iResolution.y;\n    \n    \n    for(float l = 3., d = 1., x, a, b, f, i = 0.; i < 1. && l > 1.0; i += .1)\n    {\n        x = u.x / d + .4 * iTime + 71. * i;\n        for(a = 0., b = .5; b > .001; b *= .5)\n        {\n            f = fract(x);\n            a += mix(fract((x - f) * .37), fract((x - f + 1.) * .37), f) * b;\n            x *= 2.;\n        }\n        if(u.y < d * a + i - .2)\n        l = i + .3;\n        \n        d *= .8;\n        if(-u.y <-(d*a-i+1.5))\n            o=vec4(.1, .2, .7, 0);\n        else\n        //o=vec4(.15, .3, .2, 0) * l;\n        o = vec4(.2, .3, .4, 0) * l;\n        \n        \n    }\n   \n   return o;\n}\n\n\nvec3 tres(vec2 p, vec3 col)\n{\n    p.y+=0.8;\n    \n    float d1=p.y-0.4;\n    col= DFB(vec3(0.0,0.5,0.0), col, d1);\n    \n    col=casaB(p-vec2(0.2,0.0),col);\n    col=casaA(p+vec2(0.8,0.0),col);\n    col=casac(p+vec2(1.8,0.0),col);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    uv-=vec2(0.0,-0.15);\n    float esc=1.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(1.0);\n    vec4 c4= montes(fragCoord);\n    col=c4.xyz;\n    col= tres(uv,col);\n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//iq\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\n\nfloat sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n    float co;\n    if( d<0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\n\n\n\n\n//Quadratic Bezier - exact   (https://www.shadertoy.com/view/MlKcDD)\n\nfloat sdBezier( in vec2 pos, in vec2 A, in vec2 B, in vec2 C )\n{    \n    vec2 a = B - A;\n    vec2 b = A - 2.0*B + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n    float kk = 1.0/dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n    float kz = kk * dot(d,a);      \n    float res = 0.0;\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx-3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n    if( h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h,-h)-q)/2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        float t = clamp( uv.x+uv.y-kx, 0.0, 1.0 );\n        res = dot2(d + (c + b*t)*t);\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3  t = clamp(vec3(m+m,-n-m,n-m)*z-kx,0.0,1.0);\n        res = min( dot2(d+(c+b*t.x)*t.x),\n                   dot2(d+(c+b*t.y)*t.y) );\n        // the third root cannot be the closest\n        // res = min(res,dot2(d+(c+b*t.z)*t.z));\n    }\n    return sqrt( res );\n}\n\n\n\nfloat sdTrapezoid( in vec2 p, in float r1, float r2, float he )\n{\n    vec2 k1 = vec2(r2,he);\n    vec2 k2 = vec2(r2-r1,2.0*he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x,(p.y<0.0)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2*clamp( dot(k1-p,k2)/dot2(k2), 0.0, 1.0 );\n    float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(dot2(ca),dot2(cb)) );\n}\n\nfloat sdTriangleIsosceles( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n    return -sqrt(d.x)*sign(d.y);\n}\n\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat divf(float a, float b)\n{\n    //evita crash por 1/0.0 =Infinito=error, en compilar\n    if(b==0.0)\n    {b=0.00001;}\n    return a/b;\n}\n\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( divf( dot(pa,ba),dot(ba,ba)), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\n","name":"Common","description":"","type":"common"}]}