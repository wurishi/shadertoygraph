{"ver":"0.1","info":{"id":"cdS3Dm","date":"1667665464","viewed":396,"name":"Multigrain flowmap","username":"matigekunstintelligentie","description":"Multigrain flowmap. flow_mix function is incorrect for grains>2. flow_mix does not sum to 1, resulting in a fluctuating saturated image","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["flowmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float strength = 0.02;\nfloat speed = 0.2;\nint grains = 2;\nfloat fgrains; \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Some convenient variables\n    fgrains = float(grains);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Flow from channel 0s RG channels between -1 and 1\n    vec2 flow = (texture(iChannel0,uv).rb-0.5)*2.;\n    \n    // Original phase saw tooth wave\n    float phase = fract(iTime*speed);\n    vec2 uv1 = uv + (flow*phase*strength);\n    \n    // Triangle wave that determines mixture \n    float flow_mix = 1.-abs((fgrains*phase - (0.5*fgrains))/(0.5*fgrains));\n    \n    //Initialise color with first term\n    vec4 color = texture(iChannel1, uv1)*flow_mix;\n    \n    for(int i=1;i<grains;i++){\n        // Calculate next sawtooth wave with offset\n        float phase_tmp = fract(phase + 1./fgrains);\n        vec2 uv2 = uv + (flow*phase_tmp*strength);\n        \n        phase = phase_tmp;\n        flow_mix = 1.-abs(2.*phase - 1.);\n        color += texture(iChannel1, uv2)*flow_mix;\n    }\n\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}