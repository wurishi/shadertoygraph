{"ver":"0.1","info":{"id":"ssSczc","date":"1643856819","viewed":102,"name":"ying&yang","username":"natnatnat","description":"Almost ying&yang","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle","learning"],"hasliked":0,"parentid":"7dByRc","parentname":"squaree"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nconst float e = 2.71;\nconst float PI = 3.14;\nconst float R = e/PI;\n\nvec2 rotZ(vec2 point, float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    vec2 finalPoint = mat2(c, -s, s, c) * point;\n    return finalPoint;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    float angle = 0. * iTime/2. + PI/2.;\n    uv = rotZ(uv, 0.5 * PI * sin(angle));\n    float yy = min(exp(-(2. * R * uv.x - (R/2.) * sin((PI/R) * uv.y) * cos(iTime + PI))/0.05), 1.);\n    float mask = 1. - step(R, length(uv));\n    float r = exp((-(abs(length(uv) - R)) + 0.01)/0.05);\n    vec3 color = vec3(yy * mask + r);\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}