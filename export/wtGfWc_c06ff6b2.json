{"ver":"0.1","info":{"id":"wtGfWc","date":"1615174767","viewed":112,"name":"Fractal Julia set","username":"matlabman","description":"fractal test...\nJulia set. Change const r and i to get different set.\nSource code from taichi examples.\nTaichi forum: https://forum.taichi.graphics/","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float r = 0.355;\nconst float i = 0.355;\n\nvec2 Complex_sqr( vec2 z )\n{\n    return vec2( z.x * z.x - z.y * z.y, 2.0 * z.x * z.y);\n}\n\nfloat getNorm ( vec2 z )\n{\n    return sqrt(dot(z, z));\n}\n\nfloat GetColor( float t, vec2 pixels )\n{\n    vec2 c = vec2(r, cos(t) * i);\n    vec2 z = pixels;\n    float iterations = 0.0;\n    while ( getNorm(z) < 20.0 && iterations < 300.0 )\n    {\n        z = Complex_sqr(z) + c;\n        iterations += 1.0;\n    }\n    return 1.0 - iterations * 0.004; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspectRatio = iResolution.x / iResolution.y;\n    vec2 pixel = vec2((fragCoord/iResolution.xy) * 2.0 - 1.0) * 1.2;\n    pixel.x *= aspectRatio;\n    float color = GetColor(iTime, pixel);\n    // Output to screen\n    //fragColor = vec4(vec3(color), 1.0);\n    fragColor = vec4(color);\n}","name":"Image","description":"","type":"image"}]}