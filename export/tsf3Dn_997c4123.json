{"ver":"0.1","info":{"id":"tsf3Dn","date":"1545762211","viewed":6170,"name":"Random number generator","username":"zeh","description":"A random number generator using xorshift.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","rng"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int MIN = -2147483648;\nint MAX = 2147483647;\n\nint xorshift(in int value) {\n    // Xorshift*32\n    // Based on George Marsaglia's work: http://www.jstatsoft.org/v08/i14/paper\n    value ^= value << 13;\n    value ^= value >> 17;\n    value ^= value << 5;\n    return value;\n}\n\nint nextInt(inout int seed) {\n    seed = xorshift(seed);\n    return seed;\n}\n\nfloat nextFloat(inout int seed) {\n    seed = xorshift(seed);\n    // FIXME: This should have been a seed mapped from MIN..MAX to 0..1 instead\n    return abs(fract(float(seed) / 3141.592653));\n}\n\nfloat nextFloat(inout int seed, in float max) {\n    return nextFloat(seed) * max;\n}\n\nprecision lowp    float;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    int rngSeed = int(fragCoord.x) + int(fragCoord.y) * int(iResolution.x);\n    float gray = nextFloat(rngSeed);\n    fragColor = vec4(gray, gray, gray, 1.0);\n}","name":"Image","description":"","type":"image"}]}