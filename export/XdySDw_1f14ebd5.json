{"ver":"0.1","info":{"id":"XdySDw","date":"1464636150","viewed":422,"name":"Monitor subpixel test","username":"Andre","description":"Test to see how monitors handle subpixels. Screen is divided in 8 parts every odd part is normal for comparison. See documentation for the other parts. PRESS PAUSE to see difference in monitor latency handling. On my monitor 2/8 turns red on play.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["test","rgb","subpixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Capitals mean an used subpixel lowchar means off\n// Normal means half brigness no subpixel manipulation\n// Left half of screen:\n//            1/8      2/8               3/8      4/8\n// Frame n+0: Normal - Rgb rGb rgB rgb - Normal - Rgb rGb rgB \n// Frame n+1: Normal - rGb rgB rgb Rgb - Normal - rGb rgB Rgb\n// Frame n+2: Normal - rgB rgb Rgb rGb - Normal - rgB Rgb rGb\n// Frame n+3: Normal - rgb Rgb rGb rgB - Normal - goto n+0\n//\n// Right half of screen:\n//            5/8      6/8               7/8      8/8\n// Frame n+0: Normal - Rgb rGb rgB rgb - Normal - Rgb rGb rgB \n// Frame n+1: Normal - rgB rgb Rgb rGb - Normal - rgB Rgb rGb\n// Frame n+2: Normal - Rgb rGb rgB rgb - Normal - Rgb rGb rgB \n// Frame n+3: Normal - rgB rgb Rgb rGb - Normal - goto n+0\n//\n// Every second row is shifted by 2\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 t = texture(iChannel0,uv);\n    int frame = iFrame;\n    if (uv.y<.5)\n        frame = -iFrame;\n    if (mod(uv.x,.25)<.125) {\n        fragColor = t*.5;\n    } else {\n        float m = uv.x<0.50?1.0:2.0;\n        float f = mod(uv.x,0.5)<0.25?4.0:3.0;\n        t *= (f+2.)/6.; // brightness compensaion for using 3 or 4 subpixels.\n    \tint xm = int(mod(fragCoord.x+fragCoord.y*2.+float(frame)*m,f));\n\t    fragColor = vec4(0.);\n\t\tif (xm==0) fragColor.r =  t.r;\n\t\tif (xm==1) fragColor.g =  t.g;\n\t\tif (xm==2) fragColor.b =  t.b;\n    }\n}","name":"Image","description":"","type":"image"}]}