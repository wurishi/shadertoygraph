{"ver":"0.1","info":{"id":"3sKXRz","date":"1573251689","viewed":104,"name":"plot using edge detection","username":"novogrammer","description":"plot using edge detection","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["edge","plot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define DRAW(f,lineWidth,lineColor) \\\n{\\\n    float u=1./iResolution.y*lineWidth;\\\n    \\\n    float value0=f(pos+vec2(-u,0.));\\\n    float value1=f(pos+vec2(+u,0.));\\\n    float value2=f(pos+vec2(0.,-u));\\\n    float value3=f(pos+vec2(0.,+u));\\\n    \\\n    float minValue=min(min(value0,value1),min(value2,value3));\\\n    float maxValue=max(max(value0,value1),max(value2,value3));\\\n    if(minValue<0. &&0.<maxValue){\\\n        col=lineColor;\\\n    }\\\n}\n\n\nfloat f1(vec2 pos){\n    return 3.*pos.x*pos.x-0.5-pos.y;\n}\nfloat f2(vec2 pos){\n    return sin(pos.x*10.)-pos.y;\n}\nfloat f3(vec2 pos){\n    return length(pos)-.75;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //from -1 to 1\n    vec2 pos=( 2.*fragCoord - iResolution.xy )/iResolution.y;\n    \n    float lineWidth=1.;\n    vec3 col=vec3(1.);\n    \n    DRAW(f1,lineWidth,vec3(1.,0.,0.));\n    DRAW(f2,lineWidth,vec3(0.,1.,0.));\n    DRAW(f3,lineWidth,vec3(0.,0.,1.));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}