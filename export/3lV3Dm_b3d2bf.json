{"ver":"0.1","info":{"id":"3lV3Dm","date":"1586338800","viewed":53,"name":"Circl","username":"Calimer0","description":"This is a circle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 diskcenter = vec2(0., 0.);\nconst float largeur = .2;\nconst float diskRadius = 1.;\nconst float diskRadius2 = diskRadius - largeur;\nconst float diskRadius3 = diskRadius2 - largeur;\nconst float diskRadius4 = diskRadius3 - largeur;\nconst float speed = 2.;\n\nconst vec2 a = vec2(0., diskRadius4);\nconst vec2 b = vec2(diskRadius4*cos(radians(18.)), diskRadius4*sin(radians(18.)));\nconst vec2 c = vec2(diskRadius4*cos(radians(-54.)), diskRadius4*sin(radians(-54.)));\nconst vec2 d = vec2(-diskRadius4*cos(radians(-54.)), diskRadius4*sin(radians(-54.)));\nconst vec2 e = vec2(-diskRadius4*cos(radians(18.)), diskRadius4*sin(radians(18.)));\n\nconst vec2 d1 = vec2((c.y - a.y)/(c.x - a.x), diskRadius4);\nconst vec2 d2 = vec2((a.y - d.y)/(a.x - d.x), diskRadius4);\nconst vec2 d3 = vec2(0., b.y);\nconst vec2 d4 = vec2((c.y - e.y)/(c.x - e.x),(-e.x * (c.y - e.y))/(c.x - e.x) + e.y); \nconst vec2 d5 = vec2((b.y - d.y)/(b.x - d.x),(-d.x * (b.y - d.y))/(b.x - d.x) + d.y); \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = iResolution.xy/2.;\n    float aspect = min(iResolution.x, iResolution.y)/2.;\n    float r,g,b = 0.;\n    \n    vec2 point = (fragCoord - center) / aspect;\n    if (distance(point, diskcenter) <= diskRadius4) {\n        if (((point.x * d1.x - point.y + d1.y > 0.) && \n             (point.x * d2.x - point.y + d2.y > 0.) &&\n             ((point.x * d4.x - point.y + d4.y < 0.) || (point.x * d5.x - point.y + d5.y < 0.))) ||\n            ((point.x * d3.x - point.y + d3.y > 0.) &&\n             (point.x * d4.x - point.y + d4.y < 0.) &&\n             (point.x * d5.x - point.y + d5.y < 0.))) {\n\n            r = 1.;\n            g = (0.5 + 0.5*cos(speed*iTime));\n            b = (0.5 + 0.5*cos(speed*iTime));\n        } else {\n            r = 1. - (0.5 + 0.5*cos(speed*iTime));\n            g = 0.;\n            b = (0.5 + 0.5*cos(speed*iTime));\n        }\n    }\n    else if (distance(point, diskcenter) <= diskRadius3){\n        r = 1.;\n        g = 0.;\n        b = 0.;\n    }\n    else if (distance(point, diskcenter) <= diskRadius2){\n        r = 1.;\n        g = (0.5 + 0.5*cos(speed*iTime));\n        b = (0.5 + 0.5*cos(speed*iTime));\n    }\n    else if (distance(point, diskcenter) <= diskRadius){\n        r = 1.;\n        g = 0.;\n        b = 0.;\n    }\n    // Output to screen\n    fragColor = vec4(r, g, b, 1.);\n   \n}","name":"Image","description":"","type":"image"}]}