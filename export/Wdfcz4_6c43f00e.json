{"ver":"0.1","info":{"id":"Wdfcz4","date":"1584218872","viewed":141,"name":"Agnes Flower.","username":"Logos","description":"Flower for my Wife.\n","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["2d","2d","flower","field","pong","ping","forcefield","force","gforce","gforce","deltafield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Robert Śmietana (Logos) - 14.03.2020\n// Bielsko-Biała, Poland, UE, Earth, Sol, Milky Way, Local Group, Laniakea :)\n\n// Dedicated to my wife, Agnes.\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    \n    //--- get pixel color ---//\n    \n    vec2 uv    = fragCoord.xy / iResolution.xy;\n    vec3 color = texture(iChannel0, uv).xyz;\n   \n    \n    //--- perform vignette filter ---//\n    \n    uv\t\t  *= 1.0 - uv.yx;\n    float vig  = pow(uv.x*uv.y * 30.0, 0.21);\n    \n    fragColor  = vec4(vig*color, 1.0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//--- source shapes generator ---//\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    \n    //--- create two discs, changing their size in time ---//\n    \n    vec2 d1 = vec2(0.5 + 0.45*cos(1.876*iTime), 0.5+0.45*sin(1.513*iTime));\n    vec2 d2 = vec2(0.5 + 0.45*cos(1.176*iTime), 0.5+0.45*sin(1.413*iTime));\n    \n    \n    //--- draw first disc ---//\n    \n    if (distance(uv, d1) < 0.03 + 0.02*sin(0.4*iTime))\n    {\n        vec3 c = vec3(\n            \n            0.6+0.4*sin(0.41*iTime),\n            0.6+0.4*sin(0.34*iTime),\n            0.6+0.4*sin(0.55*iTime)\n            \n            );\n        \n        fragColor = vec4(c, 1.0);\n    }\n    \n    \n    //--- draw second disc ---//\n    \n    else if (distance(uv, d2) < 0.03 + 0.02*sin(0.4*iTime))\n    {\n        vec3 c = vec3(\n            \n            0.7+0.3*sin(0.34*iTime),\n            0.7-0.3*sin(0.44*iTime),\n            0.7-0.3*sin(0.63*iTime)\n            \n            );\n        \n        fragColor = vec4(c, 1.0);\n    }\n    \n    \n    //--- or copy color ---//\n    \n    else\n    {\n        fragColor = texture(iChannel0, uv);\n    }\n    \n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//--- flower renderer ---//\n\n\nvec3 blur(vec2 uv)\n{\n    float ox = 1.0 / iResolution.x;\n    float oy = 1.0 / iResolution.y;\n    \n    vec4 c  = texture(iChannel0, uv + vec2(-ox, -oy));\n    c\t   += texture(iChannel0, uv + vec2(0.0, -oy));\n    c\t   += texture(iChannel0, uv + vec2(+ox, -oy));\n    c\t   += texture(iChannel0, uv + vec2(-ox, 0.0));\n    c      += texture(iChannel0, uv\t\t\t\t\t);\n    c\t   += texture(iChannel0, uv + vec2(+ox, 0.0));\n    c\t   += texture(iChannel0, uv + vec2(-ox, +oy));\n    c\t   += texture(iChannel0, uv + vec2(0.0, +oy));\n    c \t   += texture(iChannel0, uv + vec2(+ox, +oy));\n\n    return (1.0 / 9.0) * c.rgb;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    \n    //--- transform to polar coordinates ---//\n\n    uv     -= vec2(0.5);\n    float a = atan(uv.y, uv.x);\n    float r = length(uv);\n\n\n    //--- do the flower function (try your own formulas here) ---//\n\n    float sa = a + 0.045*r;\n    float sr = r*1.01 - 0.01*sin(5.0*a);\n\n\n    //--- transform to cartesian coordinates ---//\n\n    uv = vec2(sr*cos(sa), sr*sin(sa));\n    uv += vec2(0.5);\n    \n    \n    //--- do blur ---//\n\n    fragColor = vec4(blur(uv), 1.0);\n    \n}\n","name":"Buffer B","description":"","type":"buffer"}]}