{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"//remix of https://www.shadertoy.com/view/DtycDc\n\nconst vec3 scales = vec3(\n   4.,4.,8.\n   //2.,2.,8.\n   //4.,2.,8.\n   //2.,2.,4.\n);\n\n#define triwave(p) abs(fract(.5+p/scales[0])-.5)*2.\n#define triwave1(p) (abs(fract(p/scales[1])-.5)-abs(fract(p/scales[2])-.5)/2.)\n\nvec4 t1(vec2 c, vec2 p){\n    return triwave((.5 - length( min(p=fract(p*sign(triwave1(c*c.y))), 1.-p.yx) )) * vec4(22,7,5,0));\n}\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    vec2 p = (I/1e2+iTime);\n    vec4 t_ = t1(ceil(p),p);\n    vec4 t1_ = vec4(0.),\n    t3_ = vec4(0.);\n    float scale = 2.;\n    \n    for(int i = 0; i < 3;i++){\n        //p += mod((p+4.),8.);\n        t1_ = t1(ceil(p/scale+.5),p/scale);\n        \n        //crazy psychedelic animation\n        //t1_ += triwave(iTime/8.+t3_);\n\n        scale *= 2.;\n        t3_ =\n            1.-min(t_,t1_);\n            //1.-abs(t_-t1_);\n            //1.-min(t_.yzxw,t1_)\n        \n            //crazy psychedelic animation\n            //1.-min(t3_,t1(ceil(p/(scale)+t1_.y),p/(scale)+t1_.y-iTime));\n            //1.-min(t_,t1(ceil(p/(scale)+t1_.y-iTime),p/(scale)+t1_.y-iTime));\n        ;\n        \n\n        if(\n            //Lots of interesting patterns here!\n            //t3_.y>t1_.y\n            //t3_.y-triwave1(iTime-p.x)>t1_.y-triwave1(iTime-p.y)\n            //t_.y>t_.x\n            //t1_.y>t1_.z\n            //1.-t_.z>t1_.y||1.-t_.y>t1_.x||1.-t_.x>t1_.z\n\n            //t1_.y>t_.y||t1_.z>t_.z||t1_.x>t_.x\n            t_.y<t1_.y\n\n            //t_.x>t1_.x&&t_.y<t1_.x\n            //t_.z>.5||t_.y>.5||t_.z>.5\n            //t1_.z>t_.z||t1_.y>t_.y||t1_.z>t_.z\n        ) t_ =\n            1.-t1_\n            //t1_.yzxw\n        ;\n        //else scale /= 2.;\n    }\n    O = t3_;\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"//remix of https://www.shadertoy.com/view/lcS3zy\n\nfloat fmod(float a, float b, float tempo){\n    float\n    t1 = mod(floor(b/2.),2.),\n    a1 =\n        floor(a+t1),\n    a2 = mod(a1+1.,3.),\n    a3 =\n        mod(a1+mod(a1/8.,3.)*8.,4.)\n    ;\n    return\n        mod(a1-a2-a3,b)\n    ;\n}\n\nfloat fmod(float a, float b){\n    return fmod(a,b,1.);\n}\n\nfloat prime_rhythm(float time){\n    return (1.+fmod(time/2.,2.))/(1.+fmod(time/4.,2.));\n}\n\n#define fract1(a) (1.-pow(fract(-a),2.))\n\nvec2 sitar6(vec2 a, vec2 nb){\n    return a*a/16./2.*abs((.5*abs(1./8.-abs(.5-vec2(fract1(nb.x*4.*.998),fract1(nb.y*4.)))/2.))\n      -(a/4.*abs(1./4.-abs(.5-vec2(fract1(nb.x*2.*.998),fract1(nb.y*2.)))/2.))) \n    ;\n}\n\n#define overtone(instrument,a,b) (instrument(a,b) +instrument(a,b*2.)/2./4.)\n\nfloat m1(float time,float m){\n    return (.5-.5*sign(mod(time,m)));\n}\n\nvec2 mainSound1(int samp, float time,float scale,float duration){\n  float s1 =\n      8.,\n  tempo1 =\n      prime_rhythm(time)*prime_rhythm(time/2.)*2.\n  ,t = s1*time/4./tempo1,\n  t7 =\n      (1.+fmod(t/8.,2.))\n  ,\n  t4 = t/prime_rhythm(time+11.)/t7,\n  t1 =\n       fmod(t4,2.)\n  ,\n  t5 = t*2./prime_rhythm(time+7.),\n  t3 =\n      (1.+fmod(t5,2.))\n      //(1.+fmod(min(t5,t4),2.))\n      //(1.+fmod(t4,2.))\n  ,\n  t6 = time*8./t3,\n  m3 =\n      floor(fmod(t6,s1/2.)/2.)\n  ,\n  m2 =\n      1. + fmod(t/t3/2.,s1/2.)\n  ,note = (\n      (m3+m2-t1*4.)\n  )/7.\n  ;\n  vec2 a=\n      //duration/2.*(-vec2((log(1./64.+fract1(t/prime_rhythm(time+7.))/4.))))\n      duration/2.*(-vec2((log(1./64.*4.+fract1(t6/4./duration)/2.))))\n  ,\n  nb =\n      t*vec2(pow(2.,note+scale),pow(2.,note+scale))*tempo1\n  ;\n  return\n      sitar6(a,nb)-sitar6(a*a/2.,nb)\n      +sitar6(a*a*2.,nb)-sitar6(a*a,nb)\n      \n      //sounds like violin\n      //abs(sitar6(a,nb)-sitar6(a*a/2.,nb))\n      \n      //(sitar6(a/2.,nb)+sitar6(a*a/2.,nb*2.)/2.)\n\n      \n      //sitar6(a,nb)-sitar6(a/2.,nb/2.)/2.-sitar6(a/4.,nb/4.)/4.\n  ;\n  \n}\n\nvec2 mainSound(int a,float b){\n    float scale = 5.;\n    return\n        //mainSound1(a,b,scale,1./2.)*64.\n        +mainSound1(a,b,scale,1./4.)*64.*4.\n    ;\n}\n","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4fGBWd","date":"1734556775","viewed":166,"name":"Tabla drum synthesizer","username":"jarble","description":"A tabla drum synthesizer.","likes":3,"published":3,"flags":8,"usePreview":0,"tags":["maze","dungeon","bitwise","labyrinth","roguelike"],"hasliked":0,"parentid":"4fVyzt","parentname":"Infinite maze 9"}}