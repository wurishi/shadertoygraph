{"ver":"0.1","info":{"id":"ldVXD1","date":"1464216032","viewed":363,"name":"Complex exponentiation map","username":"ale93111","description":"Iteration on the complex plane of the function f(z)=z^z^z^z^z^z...ecc&amp;amp;lt;br/&amp;amp;gt;Discontinuity animation between even and odd exponentiation for complex numbers with distance coloring","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","dynamics","complex","exponentiation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Alessandro Marzo - ale93111/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//supersampling\n#define  AA 2\n\n//I don't remember if there is an error in the formula of the complex exponentiation\n//but i like this way better\n\n//POSSIBLE FIX: \n//1. use length(Z) instead of dot(Z,Z) which might be wrong (?)\n//2. use atan with 2 arguments\n\nconst int max_iterations = 10;\n\nfloat izoom = 1.0/3.0; \t\t\t\t//increase denominator to increase zoom\nvec2 ioffset = vec2( 0.0, -0.11); \t//offset to center the picture\nvec3 color = vec3(0.0); \t\t\t//RGB\n\n//Complex Exponentiation - Source: http://mathworld.wolfram.com/ComplexExponentiation.html\nvec2 powC( vec2 Z, vec2 W)\n{\n    float arg = atan(Z.y / Z.x);\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t//press mouse to remove scale animation\n    float a = exp( -W.y*arg )*pow( dot(Z,Z), W.x/(3.0 + ((iMouse.w>0.0)? -1.0 :cos(0.2*iTime)))); \n    //float a = exp( -W.y*arg )*pow( dot(Z,Z), W.x/2.0 ); \t//this is wihtout scaling animation\n    float b = W.x*arg + 0.5*W.y*log( dot(Z,Z) );\n    \n    return a*vec2(cos(b), sin(b));    \n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    for( int jj=0; jj<AA; jj++ )\n    for( int ii=0; ii<AA; ii++ )  \n\t{\n        vec2 Z = (((fragCoord.yx - iResolution.xy*0.3 + vec2(float(ii),float(jj))/float(AA)) / iResolution.x) * izoom) + ioffset;\n    \n\t\tvec3 col = vec3(0.0);\n    \n    \tfloat k = abs(cos(0.05*iTime));\n    \t//float k = 1.0; \t\t//wihtout exponentiation animation\n        //float k = 1.6180339;  //beware the golden ratio will anger the gods\n    \n        \n   \t\tfor(int i=0; i<max_iterations; i++) \n    \t{\n       \t\t//ugly real numbers version\n        \t//Z = pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,pow(Z,k*pow(Z,Z)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));\n\t\t\n        \t// beautiful complex numbers\n        \t//Z = powC(Z,Z);\n        \n        \t// Z^Z^Z...20-21 times animated between odd and even exponentiation\n        \tZ = powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,k*powC(Z,Z))))))))))))))))))));\n        \n        \t// Z^Z^Z...64-65 times animated between odd and even exponentiation\n        \t//Z = powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,powC(Z,k*powC(Z,Z))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));\n        \n        \tif( dot(Z,Z)> 0.1) break;\n    \t}\n    \n    \tcol = vec3(smoothstep( 0.0, sqrt(3.0),  sqrt(min(3.0, abs(dot(Z,Z))) )),\n                   smoothstep( 0.0, sqrt(50.0), sqrt(min(50.0,abs(dot(Z,Z))) )),\n                   smoothstep( 0.0, sqrt(5e10), sqrt(min(5e10,abs(dot(Z,Z))) )) );\n        color += col;\n    }\n    color /= float(AA*AA);\n\tfragColor = vec4( color, 1.0);\n}","name":"Image","description":"","type":"image"}]}