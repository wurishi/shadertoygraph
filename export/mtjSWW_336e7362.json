{"ver":"0.1","info":{"id":"mtjSWW","date":"1676142380","viewed":95,"name":"sdguage","username":"mAmaro","description":"sdf guage","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI32 3.14159274\n\n//IQ -> https://www.shadertoy.com/view/llGSzw\nfloat hash1( uint n ) \n{\n    // integer hash copied from Hugo Elias\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    return float( n & uint(0x7fffffffU))/float(0x7fffffff);\n}\nvec3 sdguage(vec2 st, float lvl, float r, float thickness)\n{\n    vec2 pv = vec2(atan(st.x,st.y), length(st));\n    float sdsphere = max((abs(length(st)-r)-thickness),(atan(st.x,st.y))-2.0*PI32*lvl+PI32);\n    vec3 col = vec3(smoothstep(0.0,0.01, sdsphere));\n    col.g += lvl;\n    col.b += (pv.y/PI32*2.0);\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = (2.0f*fragCoord.xy-iResolution.xy)/iResolution.y;\n    vec2 uv = fragCoord.xy/iResolution.y;\n    vec2 ogst = st;\n    float r = 1.0+7.0*(0.5+0.5*cos(iTime*0.3));\n    uv *= r;\n    st *= r;\n    vec3 col = mix(vec3(smoothstep(1.8,0.0, log(length(ogst)))), vec3(.5,.1,.1), 0.1);\n    \n    for(int i=0; i<8*200;i++)\n    {\n        float lvl = (0.5+0.5*cos(iTime+float(i)/20.0*hash1(uint(i))));\n        col = min(col, sdguage(st, lvl, r, 0.02));\n        r -= 0.05;\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}