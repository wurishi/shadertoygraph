{"ver":"0.1","info":{"id":"DllSRX","date":"1675115119","viewed":98,"name":"Night Vision -Over The Moon Fork","username":"tve","description":"Hack of \"over the moon\" shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2dprocedural"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//shader is from this tutorial https://www.youtube.com/watch?v=LLZPnh_LK8c from Art Of Code\n//I added a simple \"night vision\" modification that uses mouse drag movements\n//just getting started with shaders.\n\n\n#define S(a,b,t) smoothstep(a,b,t)\nint NIGHT_VISION=0;\n\nfloat TaperBox( vec2 p, float wb, float wt, float yb, float yt, float blur) {\n    float m = S(-blur, blur, p.y-yb);\n    m *= S(blur, -blur, p.y-yt);\n    p.x = abs(p.x);\n\n    float w = mix( wb, wt, (p.y-yb) / (yt-yb));\n    m *= S(blur, -blur, p.x-w);\n    return m;\n}\n\nvec4 Tree(vec2 uv, vec3 col, float blur) {\n\n    float m = TaperBox(uv, 0.03, 0.03, -1.25, 0.25, blur); //trunk\n    m += TaperBox(uv, 0.2, 0.1,0.25,0.5, blur); //canopy1\n    m += TaperBox(uv, 0.15, 0.05,0.5,0.75, blur); //canopy2\n    m += TaperBox(uv, 0.1, 0.0,0.75,1.0, blur); //top\n\n    float shadow = TaperBox(uv-vec2(0.2,0.0), 0.1, 0.5, 0.15, 0.25, blur);\n    shadow += TaperBox(uv+vec2(0.25,0.0), 0.1, 0.5, 0.45, 0.5, blur);\n    shadow += TaperBox(uv-vec2(0.25,0.0), 0.1, 0.5, 0.7, 0.75, blur);\n    col -= shadow*0.8;\n    //m = 1.0;\n    return vec4( col, m);\n}\n\nfloat getHeight(float x) {\n    return sin(x*0.423)+sin(x)*0.3;\n}\n\nvec4 Layer(vec2 uv, float blur) {\n    vec4 col = vec4(0.0);\n\n\n    float id = floor(uv.x);\n    float n = fract(sin(id*234.12)*5463.3)*2.0-1.0;\n    float x = n*0.3;\n    float y = getHeight(uv.x);\n\n\n    float ground = S(blur,-blur, uv.y+y); //ground\n    col += ground;\n\n    y = getHeight(id+0.5+x);\n\n    uv.x = fract(uv.x)-0.5;\n    vec4 tree = Tree(uv-vec2(x,-y)*vec2(1,1.+n*0.2), vec3(1.), blur);\n\n    //col.rg = uv;\n    col =  mix(col, tree, tree.a);\n    col.a = max(ground, tree.a);\n    return col;\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(234.45, 765.34));\n    p += dot(p,p+547.123);\n    return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 M = vec2(0);\n    \n    float t = iTime*0.3;\n    \n    if( cos(iTime)>0.0 || ((iMouse.xy/iResolution.xy)*2.0).y>0.01) NIGHT_VISION=1;\n        else NIGHT_VISION=0;\n    \n   if(NIGHT_VISION>0) {\n    M = (iMouse.xy/iResolution.xy)*2.0-1.0;\n    if( (M.y+1.0)<0.01 ) {\n        M = vec2(0.0,0.0);\n    }\n    else {\n        t = 0.0;\n    }\n    M *= 16.0;\n    M.xy *= -1.0;\n    \n   }\n    \n    \n    float blur = 0.005;\n\n\n    float twinkle = dot( length(sin(uv+t)), length(cos(uv*vec2(22,6.7)-t*3.0)));\n    twinkle = sin(twinkle*10.0)*0.5+0.5;\n\n    float stars = pow( Hash21(uv), 100.0)*twinkle;\n    vec4 col = vec4(stars);\n\n    float moon = S(0.01, -0.01, length(uv-vec2(0.4,0.2))-0.15);\n    col *= 1.0-moon;\n    moon *= S(-0.01, 0.1, length(uv-vec2(0.5,0.25))-0.15);\n    col += moon;\n\n    vec4 layer;\n    for(float i=0.0; i<1.0; i+=1.0/10.0) {\n      float scale = mix(30.0, 1.0, i);\n      blur = mix(0.1, 0.005, i);\n      layer = Layer(uv*scale+vec2(t+i*100.0,i)-M, blur);\n      layer.rgb *= (1.0-i*1.0)*vec3(0.9, 0.9, 1.0);\n      col = mix(col,layer,layer.a);\n    }\n    layer = Layer(uv+vec2(t,1.5)-M, 0.07); //move front layer with mouse\n    col = mix(col,layer*0.1,layer.a);\n    //night vision\n    float thickness = 1.0/iResolution.y;\n    \n   if(NIGHT_VISION>0) {\n    float green = 0.5;\n    if( abs(uv.x) < thickness ) col.g = green;\n    if( abs(uv.y) < thickness ) col.g = green;\n    \n    if( length(abs(uv.xy) - vec2(0.0,0.0)) < 0.15 &&\n        length(abs(uv.xy) - vec2(0.0,0.0)) > 0.148 \n        ) col.g=green;\n       \n    col.g *= 2.0;\n    col.rgb *= 0.5;\n    \n    float d = length( abs(uv - vec2(0.0,0.0)) );\n    float ids = (0.6/d*d*d*d);\n    \n    if(iResolution.x>800.0) col.rgb -= ids*5.0;\n    \n   }\n    \n    // Output to screen\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}