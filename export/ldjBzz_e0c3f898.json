{"ver":"0.1","info":{"id":"ldjBzz","date":"1499253275","viewed":294,"name":"Chaotic disturbance","username":"lsdlive","description":"Raymarching inspired by LJ's early geometry at Revision 's shader showdown (cross + amod).\n\nNo colour because I like white-fake ambient occlusion.\n\nNot yet a demoscene hacker, but still progressing.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat cheapFFT(float m) {\n\treturn texture(iChannel0, vec2(m, 0.)).r;\n}\n\nfloat smin(float a, float b)\n{\n\tfloat k = 8.;\n\tfloat res = exp(-k*a) + exp(-k*b);\n\treturn -log(res) / k;\n}\n\nmat2 r2d(float a) {\n\tfloat c = cos(a), s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\nvec2 amod(vec2 p, float m) {\n\tfloat a = mod(atan(p.x, p.y), m) - m * .5;\n\treturn vec2(cos(a), sin(a)) * length(p);\n}\n\nfloat sc(vec3 p) {\n\tp = abs(p);\n\treturn smin(min(max(p.x, p.y), max(p.y, p.z)), max(p.z, p.x));\n}\n\nfloat map(vec3 p) {\n\tmat2 r = r2d(iTime);\n\tp.xz *= r; p.xy *= r;\n\n\tp.xz = amod(p.xz, .785);\n\n\tp.x = mod(p.x, 8.) - 4.;\n\n\tfloat c1 = 8. * sin(iTime*.2);\n\tp.z = mod(p.z, c1) - c1 * .5;\n\n\n\treturn sc(p) - .5 + smoothstep(.1, .9, cheapFFT(iTime));\n\treturn length(max(abs(p) - vec3(.7), 0.));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - .5;\n\tuv.x *= iResolution.x / iResolution.y;\n\n\tvec3 ro = vec3(1., 2., 10.), p;\n\tvec3 rd = normalize(vec3(uv, -1.));\n\tp = ro;\n\n\tint it;\n\tfor (int i=0; i < 50; i++) {\n        it = i;\n\t\tfloat d = map(p);\n\t\tif (d < .01) break;\n\t\tp += rd * d;\n\t}\n\n\tfragColor = vec4(1. - float(it) / 50.);\n}","name":"Image","description":"","type":"image"}]}