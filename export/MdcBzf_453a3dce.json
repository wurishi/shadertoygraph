{"ver":"0.1","info":{"id":"MdcBzf","date":"1526140039","viewed":286,"name":"Time travel","username":"Flopine","description":"Shader made in 25 minutes during Outline 2018","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","modeling","25mins"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine, for Outline 2018 shader showdown\n// Thanks to wsmind, leon, lsdlive, XT95, lamogui for teaching me :) <3\n\n#define time iTime\n#define PI 3.141592\n#define ITER 65.\n\n\nfloat  mid  = 0.;\n\nfloat tiktak(float period)\n{\n    float tik = floor(time)+pow(fract(time),3.);\n    tik *= 3.*period;\n    return tik;\n}\n\nmat2 rot (float a)\n{\n\treturn mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec2 moda (vec2 p, float per)\n{\n    float a = atan(p.y,p.x);\n    float l = length(p);\n    a = mod(a-per/2.,per)-per/2.;\n    return vec2(cos(a),sin(a))*l;\n}\n\nfloat stmin(float a, float b, float k, float n)\n{\n    float st = k/n;\n    float u = b-k;\n    return min(min(a,b) , 0.5 * (u+a+abs(mod(u-a+st,2.*st)-st)));\n}\n\nfloat od (vec3 p, float d)\n{\n\treturn dot(p,normalize(sign(p)))-d;\n}\n\nfloat box (vec3 p, vec3 c)\n{\n\treturn length(max(abs(p)-c,0.));\n}\n\nfloat cylY(vec3 p, float r, float h)\n{\n\treturn max(length(p.xz)-r, abs(p.y)-h);\n}\n\nfloat cylZ(vec3 p, float r, float h)\n{\n\treturn max(length(p.xy)-r, abs(p.z)-h);\n}\n\nfloat prim1 (vec3 p, float h)\n{\n    p.xz *= rot(p.y);\n    p.xz = moda(p.xz, 2.*PI/5.);\n    p.x -= .6;\n    return cylY(p,0.07,h);\n}\n\nfloat prim2 (vec3 p, float h)\n{\n\treturn min(cylY(vec3(p.x,p.y+h,p.z),1.,0.2), cylY(vec3(p.x,p.y-h,p.z),1.,0.2));\n}\n\nfloat sablier (vec3 p)\n{\n    float h = 1.8;\n    float s1 = stmin(prim1(p,h), prim2(p,h),0.3,5.);\n    p.xz *= rot(time);\n    p.xy *= rot(time);\n    return min(s1,od(p,0.3));\n}\n\nfloat ring (vec3 p)\n{\n    p *= 1.2;\n    float s1 = max(-cylZ(p,0.6,1.), cylZ(p,1.,0.3));\n    p.xy = moda(p.xy, 2.*PI/8.);\n    p.x -= 1.2;\n    return stmin(box(p,vec3(0.4,0.2,0.2)), s1,0.3,5.);\n}\n\nfloat SDF (vec3 p)\n{\n    float per = 6.;\n    float d = 0.;\n\n    p.z = mod(p.z-per/2.,per)-per/2.;\n\n    vec3 pp = p;\n    p.xy *=rot(tiktak(0.5));\n    float r1 = ring (p);\n\n    p = pp;\n\n    p.xy *=rot(-tiktak(0.5));\n    p.xy = moda(p.xy,2.*PI/5.);\n    p.x -= 5.;\n    float s = sablier(p);\n\n    if (d<r1)\n    {\n        mid = 1.;\n        d = r1;\n    }\n\n    if (d>s)\n    {\n        mid = 2.;\n        d = s;\n    }\n\n\treturn d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n  \tvec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n\n    vec3 ro = vec3(0.001,0.001,time*3.); vec3 p = ro;\n    vec3 dir = normalize(vec3(uv,1.));\n    float shad = 0.;\n\n    for (float i = 0.; i<ITER; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            shad = i/ITER;\n            break;\n        }\n        p+=d*dir*0.35;\n    }\n\n    float t = length(ro-p);\n\n    vec3 col = vec3(0.);\n\n    if (mid == 1.) col = vec3(1.-shad)/vec3(0.3,0.8,0.)*0.8;\n    if (mid == 2.) col = mix(vec3(shad), vec3(0.1,0.5,0.7), 1.-abs(p.y)+2.);\n\n\tcol = mix(col,length(uv)* vec3(0.,0.,0.1),1.-exp(-0.001*t*t));\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}