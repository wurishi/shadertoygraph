{"ver":"0.1","info":{"id":"mtfGRf","date":"1672144686","viewed":61,"name":"dosusang heart","username":"dosusang","description":":)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dot2( in vec2 v ) { return dot(v,v); }\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\nfloat inner(in vec2 p)\n{\n    float d = sdHeart(p);\n    d = (1.-smoothstep(0.0,0.03,d)) * smoothstep(-0.2,0.0,d);\n    return d;\n}\n\nfloat hash(vec2 p)  // replace this by something better\n{\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 p = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    p.y += 0.5;\n    p*=0.3;\n    \n    float t = 1. - length(fragCoord / iResolution.xy - 0.5);\n    t = (t * abs(sin(iTime*3.)) * 0.2 + 0.8) * 0.3;\n\n    float d = inner(p/t) * noise(p*(10000. + sin(iTime*3000.) * 300.));\n    \n    vec3 color = d * vec3(1.,0.15,0.3) * 2.;\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}