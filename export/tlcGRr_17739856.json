{"ver":"0.1","info":{"id":"tlcGRr","date":"1575447166","viewed":321,"name":"Blue-ish Noise","username":"JohnShadow","description":"Realized I could fake some blue noise with this pretty easy.\nSome rotation values work better than others.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","bluenoise","faked"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265359\n#define o2pi 0.159154943092\n#define pi2 1.57079632679\n#define phi 1.61803398875\nvec2 Rotate2d(vec2 position, float theta)\n{\n    float dx = position.x * cos(theta) - position.y * sin(theta);\n    float dy = position.x * sin(theta) + position.y * cos(theta);\n\treturn vec2(dx, dy);\n}\nfloat wave(vec2 uv, int n, float w)\n{\n    float sum = 0.0;\n    vec2 q = vec2(0.0);\n    float m = 0.0;\n    float noise = sin(w);\n    for(int i = 0; i < n; ++i)\n    {\n\t\t++m;\n        noise = sin(noise * 23.123456789);\n        vec2 rotated = Rotate2d(uv, pi * noise);\n        float value = cos(rotated.x - 1.0 * m) + sin(rotated.y - 2.0 * m);\n        sum += value * value;\n    }\n    sum /= 2.0 * m;\n    return sum;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n    // Time varying pixel color\n    vec3 col = vec3(wave(uv*100.0, 10, iTime));\n\t\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}