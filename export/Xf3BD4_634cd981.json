{"ver":"0.1","info":{"id":"Xf3BD4","date":"1733083479","viewed":41,"name":"Mandelbrot-Julia Set","username":"Amita","description":"the Mandelbrot and Julia sets are both defined by whether repeatedly doing the operation z_{n+1} = z_nÂ²+c will converge or diverge. We can create a continuum between the two by varying both c and z_0.\n\nInspired by: https://youtu.be/Ed1gsyxxwM0","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","juliaset","complex","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITERATIONS 96\n#define PI 3.1415923565\nvec4 map(vec2 coor,vec2 mouse, float time) {\n\n    mat4 coordTransform = mat4(\n    3.5*cos(.1*time) ,0                ,4.0*sin(.1*time),0,\n    0                ,2.0*cos(.1*time) ,0               ,4.0*sin(.1*time),\n    -1.0*sin(.1*time),0                ,1.0*cos(.1*time),0,\n    0                ,-1.0*sin(.1*time),0               ,1.0*cos(.1*time)\n    );\n    \n    return coordTransform*vec4(coor,mouse) + vec4(-0.5,0.605*sin(.1*time),0,0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int i;\n    vec4 pos = map((fragCoord-iResolution.xy/2.0)/iResolution.xy,(iMouse.xy)/iResolution.xy,iTime);\n    vec2 cte = pos.xy;\n    vec2 now = pos.zw;\n    for (i=0; i<ITERATIONS; i++) {\n        now = iterate(now,cte);\n        if (length(now) > 3.0) break;\n    }\n    if (i == ITERATIONS) fragColor = vec4(0,0,0,1);\n    else {\n        float a = 1.0 + float(i)/32.0;//1.0 - log(1.0 + pow(float(i)/float(ITERATIONS),1.0))/0.693;\n        fragColor = vec4(pow(cos(2.0*PI*a),1.0/2.2),pow(cos(2.0*PI*a-PI*2.0/3.0),1.0/2.2),pow(cos(2.0*PI*a+PI*2.0/3.0),1.0/2.2),1.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 iterate(vec2 prev, vec2 constant) {\n    return vec2(prev.x*prev.x - prev.y*prev.y,2.0*prev.x*prev.y) + constant;\n}","name":"Common","description":"","type":"common"}]}