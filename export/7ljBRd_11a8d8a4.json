{"ver":"0.1","info":{"id":"7ljBRd","date":"1653723620","viewed":216,"name":"Cranks","username":"kamilzidek","description":"A sort of randomized l system fractal that looks a lot like electricity. Using voroni with some random jitter to choose what branch to go down. Harder to find branches then show up dimmer.","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["2d","lsystem","greyscale","stochastic"],"hasliked":0,"parentid":"3sl3WH","parentname":"Lichtenberg figure"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 o, in vec2 i )\n{\n    o = texture(iChannel0, i/iResolution.xy)/vec4(iFrame);\n    o = log(o*1000.+1.)/7.;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define R iResolution\n#define R iResolution\nint IHash(int a){\n\ta = (a ^ 61) ^ (a >> 16);\n\ta = a + (a << 3);\n\ta = a ^ (a >> 4);\n\ta = a * 0x27d4eb2d;\n\ta = a ^ (a >> 15);\n\treturn a;\n}\n\nfloat Hash(int a){\n\ta = (a ^ 61) ^ (a >> 16);\n\ta = a + (a << 3);\n\ta = a ^ (a >> 4);\n\ta = a * 0x27d4eb2d;\n\ta = a ^ (a >> 15);\n\treturn float(a) / float(0x7FFFFFFF);\n}\nvec4 rand4(int seed){\n    return vec4(Hash(seed^0x348593),\n                Hash(seed^0x8593D5),\n                Hash(seed^0x625384),\n                Hash(seed^0x253625));\n}\nvec3 rand3(int seed){\n    return vec3(Hash(seed^0x348593),\n                Hash(seed^0x8593D5),\n                Hash(seed^0x625384));\n}\nvec2 rand2(int seed){\n    return vec2(Hash(seed^0x348593),\n                Hash(seed^0x8593D5));\n}\n\n\nvec2 randn(vec2 randuniform){\n    vec2 r = randuniform;\n    r.x = sqrt(-2.*log(1e-9+abs(r.x)));\n    r.y *= 6.28318;\n    r = r.x*vec2(cos(r.y),sin(r.y));\n    return r;\n}\nvec2 randc(vec3 randuniform){\n    float t = 6.28318*randuniform.x;\n\tfloat u = randuniform.y+randuniform.z;\n\tfloat r = u>1.?2.-u:u;\n\treturn vec2(r*cos(t), r*sin(t));\n}\nfloat lineDist(vec2 a, vec2 b,vec2 uv){\n    return length(uv-(a+normalize(b-a)*min(length(b-a),max(0.,dot(normalize(b-a),(uv-a))))));\n}\n/*fc dc 96 d4 8a 96 92 e9 a0 46 d5 6e 13 cd 20 61 \nb4 95 af a9 73 ec 81 59 58 78 5b 6d ff d2 df 70 \n6a 46 ce 5e 85 49 6f 21 6f 66 cd 8c 96 86 0a 71 \n62 02 60 33 9d 99 ba ff 52 a5 c8 f6 \ndb 33 c8 93 40 4b 5d a8 d7 da ef 8c 59 90 7b d8 \ne9 d8 c0 5b    */\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    vec2 uv = (i*2.-R.xy)/R.y;\n\tfloat ds = 1e4;\n    for (int q = 0; q < 1; q++){\n        int f = iFrame+0x1F55FAAF*(q+1);\n        int seed = 3;//+f/100;\n\n        vec2 a = vec2(0,-1);\n        vec2 b = vec2(0,-.7)+.4*randn(rand2(seed^0x8593F4D5))/8.;\n        \n        //vec2 a = vec2(0);\n        //vec2 b = .05*normalize(randc(rand3(seed)));//+vec2(0,float(f%100)/400.);\n\t\tvec2 c,d,e;\n        for(int k=0; k<30;k++){\n            int v = (200/(k+1));\n            //seed += f/v;\n            float l = length(b-a);\n\n\n            c = (a+b)/2.+l*randn(rand2(seed^0x8593F4D5))/8.;\n            d = b*1.9-a*.9+l*randn(rand2(seed^0x93D35DE5))/4.;\n            e = b*1.9-a*.9+l*randn(rand2(seed^0xa8d7daef))/4.;\n\n            //d.y += float(iFrame%v)/float(v)*l/10.;\n            //c.y += float(iFrame%v)/float(v)*l/10.;\n\t\t\tvec4 j = 1.+.5*rand4(seed^IHash((iFrame*0x5da8d7da)^q));\n            float d0 = lineDist(a,c,uv)*j.x;\n            float d1 = lineDist(c,b,uv)*j.y;\n            float d2 = lineDist(b,d,uv)*j.z;\n            float d3 = lineDist(b,e,uv)*j.w;\n            if(d0<min(d1,min(d2,d3))){\n                b=c;\n                seed = IHash(seed^0x7d964ba9);\n            } else if(d1<min(d2,d3)){\n                a=c;\n                seed = IHash(seed^0xb7798235);\n            } else if(d2<d3){\n                a=b;\n                b=d;\n                seed = IHash(seed^0x5b2a74f5);\n            } else {\n                a=b;\n                b=e;\n                seed = IHash(seed^0xca306058);\n                \n            }\n\n            /*float r = Hash(seed);\n\n            if(r<.3){\n\n            } else if (r<.66) {\n\n            } else {\n\n            }*/\n        }\n        \t/*ds = min(ds,lineDist(a,c,uv));\n        \tds = min(ds,lineDist(c,b,uv));\n        \tds = min(ds,lineDist(b,d,uv));\n        \tds = min(ds,lineDist(b,e,uv));*/\n        ds = min(ds,lineDist(a,b,uv));\n\n\n\n    }\n    \n    o = vec4(max(0.,1.-ds*R.y/2.));\n    o +=texture(iChannel0, i/R.xy);\n}","name":"Buffer A","description":"","type":"buffer"}]}