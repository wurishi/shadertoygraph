{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n \n    // Output to screen\n    vec4 data=texture(iChannel0,uv);\n    float mid=data.b;\n    vec2 grad=vec2(mid-texture(iChannel0,uv+vec2(1.0,0.0)/iResolution.x).b,mid-texture(iChannel0,uv+vec2(0.0,1.0)/iResolution.y).b);\n    vec3 norm=vec3(grad,0.2);\n    norm=normalize(norm);\n    fragColor.rgb=vec3(0.0);\n   \n \n    \n    fragColor.rgb=vec3(data.b);//fragColor.rgb+=dat;\n    \n    fragColor.rgb+=mid*0.9;\nfragColor.rgb*=0.8;\nvec3 toV2=normalize(vec3(uv,1.0));\nvec3 toV=normalize(vec3(uv,0.0)-vec3(iMouse.xy/iResolution.xy,1.0));\n\nfragColor.rgb=mix(vec3(1.0,0.4,0.2),vec3(0.2,0.4,1.0),(1.0-data.b));\nfragColor.rgb*=abs(data.b-0.5)*2.0;\nfragColor.rgb+=(1.0-data.a);\n    fragColor.a=1.0;\n    \n}","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":" uint hash( uint x ) {\n    x += ( x << 10u );\n    x ^= ( x >>  6u );\n    x += ( x <<  3u );\n    x ^= ( x >> 11u );\n    x += ( x << 15u );\n    return x;\n}     \nfloat hash( float f ) {\n    const uint mantissaMask = 0x007FFFFFu;\n    const uint one          = 0x3F800000u;\n   \n    uint h = hash( floatBitsToUint( f ) );\n    h &= mantissaMask;\n    h |= one;\n    \n    float  r2 = uintBitsToFloat( h );\n    return r2 - 1.0;\n}\nvec2 hash(float seed, vec2 uv){\n    return vec2(hash(uv.y+hash(1.0+uv.x+seed++)),hash(uv.x+hash(uv.y+seed++)));\n}\nvec4 sampleTex(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod)*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\nvec2 uv = fragCoord/iResolution.xy;\n\nif(iFrame==0){\n vec2 off=fragCoord.xy;\n fragColor.rg=vec2(0.0);\n fragColor.b=0.0;\n fragColor.b-=(off.y-iResolution.y*0.5)*0.01;\n fragColor.a=1.0;\n if(off.x<10.0||off.x>iResolution.x-10.0||off.y<10.0||off.y>iResolution.y-10.0||length(off-iResolution.xy*0.5)<100.0){\nfragColor=vec4(0.0,0.0,0.0,0.0);\n}\n}else{\n\nvec4 curDat=sampleTex(fragCoord.xy,0.0);\nvec2 curVel=curDat.rg;\n//if(mod(float(iFrame),2.0)==0.0){\n\nfragColor=curDat;\nvec2 off=fragCoord.xy-curVel*3.5;\n\nvec4 dat=sampleTex(off,0.0);\nif(dat.a>=1.0&&curDat.a>=1.0){\n\n    fragColor = dat;\n    \n  \n}\n\n\n\n  \n \n }\n \n vec2 off=fragCoord.xy;\n \n \n\n fragColor.b-=(off.y-iResolution.y*0.5)*0.00001;\n \n//fragColor.b*=1.01;\n fragColor.b=clamp(fragColor.b,-1.0,1.0);\nfragColor.g+=fragColor.b*0.1;\nfragColor.rg+=(hash(iTime,uv).rg-0.5)*3.0;\nfragColor.rg*=fragColor.a;\n//fragColor.rg*=(((-fragColor.b)+1.0)/2.0)*0.2+0.8;\nfragColor=(fragColor+1.0)/2.0;\n\n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec4 sampleTex(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod)*2.0-1.0;\n}\nvec2 sampleVels(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod).xy*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\nvec2 uv = fragCoord/iResolution.xy;\n\n\nvec4 curDat=sampleTex(fragCoord.xy,0.0);\nvec2 curVel=curDat.rg;\nvec2 p=fragCoord.xy;\nfragColor=curDat*vec4(0.0,0.0,1.0,1.0);\nfor(float i=0.0;i<7.0;i++){\nfloat mip=i;\nfloat siz=exp(mip);\nfloat samp=1.0*siz;\n\nfragColor.rg+=sampleVels(p,mip) + (dot(sampleVels(p-vec2(samp),mip) + sampleVels(p+vec2(samp),mip), vec2(1.0)) + dot(sampleVels(p+vec2(-samp,samp),mip) + sampleVels(p+vec2(samp,-samp),mip), vec2(1.0,-1.0)) * vec2(1.0,-1.0) + (sampleVels(p+vec2(-samp,0.0),mip) + sampleVels(p+vec2(samp,0.0),mip) - sampleVels(p+vec2(0.0,-samp),mip) - sampleVels(p+vec2(0.0,samp),mip)) * vec2(2.0,-2.0) + sampleVels(p,mip) * -4.0) * 0.125;\n}\nfragColor.rg/=7.0;\n vec2 off=fragCoord.xy;\n \n fragColor.rg*=fragColor.a;\nfragColor=(fragColor+1.0)/2.0;\n\n}","name":"Buffer B","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"4sXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec4 sampleTex(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod)*2.0-1.0;\n}\nvec2 sampleVels(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod).xy*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\nvec2 uv = fragCoord/iResolution.xy;\n\n\nvec4 curDat=sampleTex(fragCoord.xy,0.0);\nvec2 curVel=curDat.rg;\nvec2 p=fragCoord.xy;\nfragColor=curDat*vec4(0.0,0.0,1.0,1.0);\nfor(float i=0.0;i<4.0;i++){\nfloat mip=i;\nfloat siz=exp(mip);\nfloat samp=1.0*siz;\n\nfragColor.rg+=sampleVels(p,mip) + (dot(sampleVels(p-vec2(samp),mip) + sampleVels(p+vec2(samp),mip), vec2(1.0)) + dot(sampleVels(p+vec2(-samp,samp),mip) + sampleVels(p+vec2(samp,-samp),mip), vec2(1.0,-1.0)) * vec2(1.0,-1.0) + (sampleVels(p+vec2(-samp,0.0),mip) + sampleVels(p+vec2(samp,0.0),mip) - sampleVels(p+vec2(0.0,-samp),mip) - sampleVels(p+vec2(0.0,samp),mip)) * vec2(2.0,-2.0) + sampleVels(p,mip) * -4.0) * 0.125;\n}\nfragColor.rg/=4.0;\n vec2 off=fragCoord.xy;\n \n fragColor.rg*=fragColor.a;\nfragColor=(fragColor+1.0)/2.0;\n\n}","name":"Buffer C","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XdfGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"vec4 sampleTex(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod)*2.0-1.0;\n}\nvec2 sampleVels(vec2 p,float lod){\nreturn texture(iChannel0,p/iResolution.xy,lod).xy*2.0-1.0;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfragColor=vec4(1.0);\nvec2 uv = fragCoord/iResolution.xy;\n\n\nvec4 curDat=sampleTex(fragCoord.xy,0.0);\nvec2 curVel=curDat.rg;\nvec2 p=fragCoord.xy;\nfragColor=curDat*vec4(0.0,0.0,1.0,1.0);\nfor(float i=0.0;i<1.0;i++){\nfloat mip=i;\nfloat siz=exp(mip);\nfloat samp=1.0*siz;\n\nfragColor.rg+=sampleVels(p,mip) + (dot(sampleVels(p-vec2(samp),mip) + sampleVels(p+vec2(samp),mip), vec2(1.0)) + dot(sampleVels(p+vec2(-samp,samp),mip) + sampleVels(p+vec2(samp,-samp),mip), vec2(1.0,-1.0)) * vec2(1.0,-1.0) + (sampleVels(p+vec2(-samp,0.0),mip) + sampleVels(p+vec2(samp,0.0),mip) - sampleVels(p+vec2(0.0,-samp),mip) - sampleVels(p+vec2(0.0,samp),mip)) * vec2(2.0,-2.0) + sampleVels(p,mip) * -4.0) * 0.125;\n}\nfragColor.rg/=1.0;\n vec2 off=fragCoord.xy;\n \n fragColor.rg*=fragColor.a;\nfragColor=(fragColor+1.0)/2.0;\n\n}","name":"Buffer D","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"4cGBzt","date":"1734326116","viewed":59,"name":"Fork sickly goo Bearkirb 615","username":"BearKirb","description":"sfasfdasdfas","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["afasdf"],"hasliked":0,"parentid":"McKfzV","parentname":"sickly goo"}}