{"ver":"0.1","info":{"id":"ldyfRw","date":"1527965610","viewed":87,"name":"My 1st fractal Mandelbrot","username":"Loeizd","description":"http://nuclear.mutantstargoat.com/articles/sdr_fract/\nfollowing this tutorial","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define ITER 3000\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    int ITER = int(fract(iTime*0.13)*30.);\n    \n    float scale = sin(iTime*.5)*2. + 4.;\n    vec2 center = vec2(0.5, 0.);\n    vec2 z, c = vec2(1.3*(uv.x - 0.5) * scale - center.x, (uv.y - 0.5) * scale - center.y);\n    \n    int i;\n    for (i=0; i<ITER; ++i){\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.y * z.x + z.x * z.y) + c.y;\n        \n        if((x*x + y*y) > 4.0) break;\n        z.x = x;\n        z.y = y;\n        \n    }\n    \n\tfloat a = i == ITER ?0. :1.;\n    \n    // Output to screen\n    fragColor = vec4(a, 0.5*(abs(z) - a),1.0);\n}","name":"Image","description":"","type":"image"}]}