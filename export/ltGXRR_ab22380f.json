{"ver":"0.1","info":{"id":"ltGXRR","date":"1482421796","viewed":187,"name":"Quasiperiodic","username":"dougbinks","description":"A simple sum of regularly rotated waves of the same period produces a quasiperiodic pattern for more than 3 waves.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI      = 3.14159265359;\nconst float INVSIZE = 0.3;\nconst int   WAVES   = 4;  // >=4 for quasiperiodic, try 4, 5, 6 etc.\nconst float DA      = 1.0 / float(WAVES);\n\n\n// gradient from https://www.shadertoy.com/view/4dsSzr morgan3d\nfloat square(float s) { return s * s; }\nvec3 rainbowGradient(float t) {\n\tvec3 c = 1.0 - pow(abs(vec3(t) - vec3(0.65, 0.5, 0.2)) * vec3(3.0, 3.0, 5.0), vec3(1.5, 1.3, 1.7));\n\tc.r = max((0.15 - square(abs(t - 0.04) * 5.0)), c.r);\n\tc.g = (t < 0.5) ? smoothstep(0.04, 0.45, t) : c.g;\n\treturn clamp(c, 0.0, 1.0);\n}\n\n\n\n// angledWave generates a 0-1 sin wave at angle PI*a.\nfloat angledWave( in vec2 fragCoord, in float a )\n{\n    float angle = a * PI;\n    float phi = sin( angle ) * fragCoord.x + cos( angle ) * fragCoord.y;\n    return 0.5 + 0.5*sin( phi * INVSIZE );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float amp = 0.0;\n    for( int w = 0; w < WAVES; ++w )\n    {\n\t\tamp += angledWave( fragCoord, float(w) * DA );\n    }\n        \n\tfragColor = vec4( rainbowGradient( amp * DA ), 1.0 );\n}","name":"Image","description":"","type":"image"}]}