{"ver":"0.1","info":{"id":"XcKSzc","date":"1715548689","viewed":75,"name":"Mandelsetbrot","username":"kr","description":"Mandelbrot set","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot2D(float angle)\n{\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec2 complex_sqr(vec2 z)\n{\n    float r = z.x * z.x - z.y * z.y;\n    float c = 2. * z.x * z.y;\n    return vec2(r, c);\n}\n\nfloat mandelbrot(vec2 c, int maxn, float maxlen)\n{\n    vec2 z = vec2(0);\n    int n = 0;\n    while (n < maxn && length(z) < maxlen)\n    {\n        z = complex_sqr(z) + c;\n        n++;\n    }\n    \n    return float(n) / float(maxn);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= rot2D(iTime * 0.08);\n    \n    vec2 center = vec2(-0.593607, 0.620131);\n    float zoom = pow(1.3, iTime-4.);\n    vec2 c = uv / zoom + center;\n    int maxn = int(iTime*20.)+130;\n    float maxlen = 10.;\n    \n\n    float b = 1. - mandelbrot(c, maxn, maxlen);\n   \n\n    vec3 col = palette(b, vec3(0.5, 0.5, 0.5), vec3(0.5, 0.5, 0.5), vec3(1.0, 1.0, 0.5), vec3(0.80, 0.90, 0.30));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}