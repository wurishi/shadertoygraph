{"ver":"0.1","info":{"id":"dld3z7","date":"1682170532","viewed":332,"name":"Broken Screen Simulation","username":"summer_lemo","description":"Broken Screen","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["screen","broken"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Define the center of the radial gradient\n    vec2 center = vec2(0.5, 0.5);\n    \n    // Calculate the distance from the center to the current fragment\n    float dist = length(fragCoord.xy - center);\n    \n    // Create a gradient using the distance and a color palette\n    vec3 gradient = vec3(\n        0.5 + 0.5 * cos(dist * 8.0),\n        0.5 + 0.5 * sin(dist * 6.0),\n        0.5 + 0.5 * sin(dist * 4.0)\n    );\n    \n    // Add noise to the gradient by animating the noise function over time\n    float noise = 0.1 * texture(iChannel0, 0.01 * fragCoord.xy + vec2(0.9, 0.90) * iTime).r;\n    gradient += noise;\n    \n    // Output the final color\n    fragColor = vec4(gradient, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}