{"ver":"0.1","info":{"id":"NsBcW3","date":"1644995228","viewed":26,"name":"Temp_234","username":"Kemsekov","description":"t","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["game"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4( texelFetch( iChannel0, ivec2(fragCoord), 0 ).xxx, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n//x is a existence(-1,0,1)\n//yz is a move vector\nvec4 getBufferAValue(vec2 fragCoord){\n    vec4 value = texture(iChannel0,fragCoord/iResolution.xy);\n    return value;\n}\n\nfloat rand(vec2 fragCoord){\n    vec2 pos = fragCoord/iResolution.xy;\n    pos = vec2(pos.x+sin(iTime),pos.y+cos(iTime));\n    return texture(iChannel2,mod(pos,1.0)).x;\n}\n\nvec2 GetMoveVector(vec2 fragCoord){\n    vec2 result = vec2(0,0);\n    for(int i = 0;i<8;i++){\n        result += points[i]*getBufferAValue(fragCoord+points[i]).x;\n    }\n    return result*getBufferAValue(fragCoord).xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //vec2 move = GetMoveVector(fragCoord);\n    if(drawCircleMouse(fragColor,fragCoord,iMouse)) return;\n    fragColor = getBufferAValue(fragCoord);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define resetKey 82\n#define brushSize 20.0\n#define resetColor 0.5\n\nvec2 points[8] = vec2[](\n        vec2(-1,1),\n        vec2(0,1),\n        vec2(1,1),\n        vec2(-1,0),\n        vec2(1,0),\n        vec2(-1,-1),\n        vec2(0,-1),\n        vec2(1,-1)\n    );\n\nbool drawCircleMouse(out vec4 fragColor,vec2 fragCoord,vec4 mouse){\n    // draw a circle if the mouse is clicked\n    if(distance(mouse.xy, fragCoord) < brushSize && mouse.z > .0)\n    {\n        fragColor = vec4(1.0);\n        return true;\n    }\n    return false;\n}\n\n/*\nbool ReadKey( int key)//, bool toggle )\n{\n\tbool toggle = false;\n\tfloat keyVal = texture( channel, vec2( (float(key)+.5)/256.0, toggle?.75:.25 ) ).x;\n\treturn (keyVal>.5)?true:false;\n}\n*/\n\n","name":"Common","description":"","type":"common"}]}