{"ver":"0.1","info":{"id":"clsfWS","date":"1693409741","viewed":122,"name":"diamboy's very simple raymarcher","username":"Diamboy","description":"just some simple math","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf(vec3 p)\n{\n    p.z -= 2.3;\n    float c1 = cos(iTime);\n    float s1 = sin(iTime);\n    float c2 = cos(iTime*2.0);\n    float s2 = sin(iTime*2.0);\n    vec3 q = vec3(c2*p.x+s2*p.z, s1*s2*p.x+c1*p.y-c2*s1*p.z, -c1*s2*p.x+s1*p.y+c1*c2*p.z);\n    \n    vec2 r = vec2(length(q.xz) - 1.0, q.y);\n    return length(r) - 0.25;\n}\n\nvec3 ray_march(vec3 rd)\n{\n    vec3 o = vec3(0.0);\n    for (int i = 0; i < 20; i++)\n        o += sdf(o) * rd;\n    return o;\n}\n\nfloat get_color(vec2 uv)\n{\n    vec3 rd = normalize(vec3(uv, 1.0));\n    vec3 d = ray_march(rd);\n    return 1.0 / dot(d,d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    float col = get_color(uv);\n    fragColor = vec4(col,col,col,1.0);\n}","name":"Image","description":"","type":"image"}]}