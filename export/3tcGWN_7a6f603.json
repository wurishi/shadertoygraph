{"ver":"0.1","info":{"id":"3tcGWN","date":"1576799772","viewed":55,"name":"Gdts","username":"lunar","description":"All kinds of wanted types","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["oof"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float inv_2pi = .1591549;\nfloat radius = .8;\nvec2 center = vec2(.5, 1.);\nvec3 c1 = vec3(.1098039, .8862745, 1.);\nvec3 c2 = vec3(.9882352, 0., .9176471);\n\nvec3 ConicalGradient(vec2 uv)\n{\n    float len = length(uv);\n\tvec3 color = c1;\n    if(abs(len) > 1e-7)\n    {   \n        if (uv.y >= 0.) color = mix(c1, c2 , acos(uv.x/len) * inv_2pi);\n        else color = mix(c1, c2 , 1. - acos(uv.x/len) * inv_2pi);\n    }\n    return color;\n}\n\nvec3 RadialGradient(vec2 uv)\n{\n    float len = clamp(0., radius, length(uv) * 0.7071067) / radius;\n\t// Might look better? float t = smoothstep(0., radius, len);\n    return mix(c1, c2, len);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (with offset of center)\n    vec2 uv = fragCoord/iResolution.xy - center;\n    uv *= vec2(iResolution.x / iResolution.y, 1.);\n\n   \n    // Output to screen\n    fragColor = vec4(RadialGradient(uv), 1.);\n}","name":"Image","description":"","type":"image"}]}