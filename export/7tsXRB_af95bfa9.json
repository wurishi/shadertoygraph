{"ver":"0.1","info":{"id":"7tsXRB","date":"1625998596","viewed":66,"name":"Forkpsychedelic.toby","username":"toby80","description":"Another play on IQ's tunnel","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"stsXRS","parentname":"psychedelictunnelx"},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"psychedelic tunnel\" by None. https://shadertoy.com/view/-1\n// 2021-07-11 09:06:41\n\n// Fork of \"psychedelic tunnel\" by None. https://shadertoy.com/view/-1\n// 2021-07-11 08:51:50\n\n// Fork of \"psychedelic tunnel\" by StanRee. https://shadertoy.com/view/4lX3W7\n// 2021-07-11 07:56:38\n\n\n// Deform - square tunnel : REDUX\n// Modifications by Stanley Hayes\n// Original Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n//Hsv conversion from http://ploobs.com.br/?p=1499\n\nvec3 Hue(float a){\nvec3 K = vec3(3,2,1)/3.;\nreturn clamp(abs(fract(vec3(a)+K)*6. - vec3(3.)) - K.xxx, 0., 1.);\n}\n\n\n#define Time (iTime * .06) \n\nvec3 HSVtoRGB(vec3 HSV)\n{\n    return vec3(((Hue(HSV.x) - 1.0) * HSV.y + 1.0) * HSV.z);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized coordinates (-1 to 1 vertically)\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy)/iResolution.y;\n\n    // angle of each pixel to the center of the screen\n    \n    \n    // modified distance metric. Usually distance = (xÂ² + yÂ²)^(1/2). By replacing all the \"2\" numbers\n    // by 32 in that formula we can create distance metrics other than the euclidean. The higher the\n    // exponent, then more square the metric becomes. More information here:\n    \n    // http://en.wikipedia.org/wiki/Minkowski_distance\n    \n    float exp = 1.0;\n    float crayStationsCoef = 1.01; \n    p.x +=  sin(pow(Time,.5))*crayStationsCoef*2.0;\n   //p.y +=  cos(Time)*crayStationsCoef*10.0;\n    float a = atan(p.y,p.x) + Time * sin(Time)*.002 + iMouse.x * .0001;\n    float r = pow( pow(p.x*p.x,exp) + pow(p.y*p.y,exp), 1.0/(exp * 2.0) ) + sin(Time)*crayStationsCoef;\n    a += pow(r,.50); \n    \n       \n    // index texture by angle and radious, and animate along radius    \n    vec2 uv = vec2( 0.5/r + 0.5*Time + iMouse.y,                    a/3.1416 );\n\n    r -= sin(Time)*.05;\n    // fecth color and darken in the center\n    vec3 col =  texture( iChannel0, uv ).xyz * r;\n    col = HSVtoRGB(vec3(col.r, 1.0, 1.0)); \n\t\n    col.r *= (sin(uv.x*5.0)*.7 + 1.0) * .9;\n    \n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}