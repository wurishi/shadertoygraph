{"ver":"0.1","info":{"id":"3sc3D2","date":"1569287586","viewed":62,"name":"mera pyara gola","username":"pratikone","description":"learning to create a circle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float X = fragCoord.x/iResolution.x;\n    float Y = fragCoord.y/iResolution.y;\n    uv -= 0.5; // shift base to center\n\tfloat aspect_ratio = iResolution.x/iResolution.y;\n    uv.x *= aspect_ratio; // fix for widescreen\n\n    // Output to screen\n    const float R = 0.4;\n    const float R2 = pow(R, 2.09);\n    float sign = sin(iTime);\n    vec4 innerColor = vec4(\n        \t\t\t\t\tclamp(0., 1.,\n                                  sin(fragCoord.y + abs(sin(10.*iTime)))), // only take 0-1 sin values and ignore -1,0 values\n        \t\t\t\t\t0., 0., 1.);\n    vec3 changingColor = 1. + 0.5*sin(iTime+uv.xyx+vec3(0,2,4));\n    innerColor = mix(vec4(changingColor, 1.), innerColor, 0.6);\n\n    const vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    float sum = length(uv);\n    if (sum < R )\n    {\n        fragColor = innerColor;\n    }\n    else\n    {\n        fragColor = black;\n    }\n    \n}","name":"Image","description":"","type":"image"}]}