{"ver":"0.1","info":{"id":"llKfWw","date":"1542805732","viewed":635,"name":"Gameboy 2bpp","username":"CelestialAmber","description":"Gameboy 2bpp graphics format shader. Adapted from http://www.huderlem.com/demos/gameboy2bpp.html","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["gameboy","graphics","2bpp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float gameboy2bpp(int bytes[16], vec2 uv){\nint x = int(floor(uv.x * 8.0));\nint y = 8-int(ceil(uv.y * 8.0));\n    \n\tint hiBit = (bytes[y*2 + 1] >> (7-x)) & 1;\n    int loBit = (bytes[y*2] >> (7-x)) & 1;\nreturn 1. - float(loBit + 2*hiBit)/3.;\n\nreturn 1.0;\t\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y + vec2(0.5,0.5);\n    vec3 col = vec3(gameboy2bpp(int[](0xFF,0x00,0x7E,0xFF,0x85,0x81,0x89,0x83,0x93,0x85,0xA5,0x8B,0xC9,0x97,0x7E,0xFF),uv));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}