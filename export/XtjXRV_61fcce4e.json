{"ver":"0.1","info":{"id":"XtjXRV","date":"1445022335","viewed":133,"name":"Blinding Circles","username":"ChazMeister","description":"I was playing around with this: https://www.shadertoy.com/view/4tl3W8 shader by nimitz and this happened... click and move your mouse around and see what happens, in both the x and y dimensions.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","generated","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Original https://www.shadertoy.com/view/4tl3W8 by nimitz\n\n// This mouse responsive monstrocity by ChazMeister\n\nfloat squared(float value) { return value * value; }\n\nfloat getAmp(float frequency) { return texture(iChannel0, vec2(frequency / 512.0, 0)).x; }\n\nfloat getWeight(float f) {\n    return (+ getAmp(f-2.0) + getAmp(f-1.0) + getAmp(f+2.0) + getAmp(f+1.0) + getAmp(f)) / 5.0; }\n\n\nvoid mainImage( out vec4 f, in vec2 w ){\n\tvec4 p = vec4(w,0.,1.)/iResolution.y - vec4(.9,.5,0,0), c=p-p;\n\tfloat t=iTime,r=length(p.xy+=sin(t+sin(t*.8))*.4),a=atan(p.y,p.x);\n\tfor (float i = 0.;i<60.;i++)\n        c = c * ((getWeight(i * 20.0) * iMouse.x / iResolution.x * 5.0) * 1.1) + (sin(i+vec4(5,3,2,1))*.5 + 0.5 * (getWeight(squared(i) * 20.0) * 2.5))*smoothstep(.99, 1., sin(log(r+i*.05)-t-i+sin(a +=t*.01) * iMouse.y / 200.0));\n    f = c*r;\n}","name":"","description":"","type":"image"}]}