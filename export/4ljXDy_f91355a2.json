{"ver":"0.1","info":{"id":"4ljXDy","date":"1446214156","viewed":4243,"name":"RainScreen","username":"jt","description":"First try to let water-drops slide down the window.\n","likes":127,"published":1,"flags":0,"usePreview":0,"tags":["distortion","particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// RainScreen - written 2015 by Jakob Thomsen\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat T;\n\n#define pi 3.1415926\n\n// iq's hash function from https://www.shadertoy.com/view/MslGD8\nvec2 hash( vec2 p ) { p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))); return fract(sin(p)*18.5453); }\n\nfloat simplegridnoise(vec2 v)\n{\n    float s = 1. / 256.;\n    vec2 fl = floor(v), fr = fract(v);\n    float mindist = 1e9;\n    for(int y = -1; y <= 1; y++)\n        for(int x = -1; x <= 1; x++)\n        {\n            vec2 offset = vec2(x, y);\n            vec2 pos = .5 + .5 * cos(2. * pi * (T*.1 + hash(fl+offset)) + vec2(0,1.6));\n            mindist = min(mindist, length(pos+offset -fr));\n        }\n    \n    return mindist;\n}\n\nfloat blobnoise(vec2 v, float s)\n{\n    return pow(.5 + .5 * cos(pi * clamp(simplegridnoise(v)*2., 0., 1.)), s);\n}\n\nvec3 blobnoisenrm(vec2 v, float s)\n{\n    vec2 e = vec2(.01,0);\n    return normalize(\n           vec3(blobnoise(v + e.xy, s) - blobnoise(v -e.xy, s),\n                blobnoise(v + e.yx, s) - blobnoise(v -e.yx, s),\n                1.0));\n}\n\nfloat blobnoises(vec2 uv, float s)\n{\n    float h = 0.0;\n    const float n = 3.0;\n    for(float i = 0.0; i < n; i++)\n    {\n        vec2 p = vec2(0.0, 1.0 * iTime * (i + 1.0) / n) + 1.0 * uv;\n    \th += pow(0.5 + 0.5 * cos(pi * clamp(simplegridnoise(p * (i + 1.0)) * 2.0, 0.0, 1.0)), s);\n    }\n    \n    return h / n;\n}\n\nvec3 blobnoisenrms(vec2 uv, float s)\n{\n    float d = 0.01;\n    return normalize(\n           vec3(blobnoises(uv + vec2(  d, 0.0), s) - blobnoises(uv + vec2( -d, 0.0), s),\n                blobnoises(uv + vec2(0.0,   d), s) - blobnoises(uv + vec2(0.0,  -d), s),\n                d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    T = iTime;\n\n    vec2 r = vec2(1.0, iResolution.y / iResolution.x);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 n = blobnoisenrms(25.0 * uv * r, 1.);\n    fragColor = texture(iChannel0, uv + 0.05 * n.xy);\n}\n\n/*\nvec2 drop(vec2 uv, vec2 pos, float r)\n{\n    pos.y = fract(pos.y);\n    if(length(uv - pos) > r)\n        return vec2(0.0, 0.0);\n    \n    vec3 n = normalize(vec3(uv - pos, r));\n    \n    return n.xy;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv2 = vec2(uv.x * iResolution.x / iResolution.y, uv.y);\n    \n    vec2 d = vec2(0.0, 0.0);\n    const int n = 10000; // NOTE: simpler but MUCH SLOWER version!\n    for(int i = 0; i < n; i++)\n    {\n        vec4 r = texture(iChannel1, vec2(float(i) / float(n), 0.5));\n        vec2 pos = r.xy;\n        pos.x *= iResolution.x / iResolution.y;\n        pos.y -= 10.0 * iTime * 0.02 * r.a;\n        //pos.x += sin(t + r.z);\n    \td += 0.01 * drop(uv2.xy, pos, 0.03); // * step(fract(pos.y), r.z);\n    }\n\n\tfragColor = texture(iChannel0, -uv.xy + d);\n    //if(length(d) > 0.0) fragColor.rgb *= 0.5;\n    \n}\n*/\n","name":"Image","description":"","type":"image"}]}