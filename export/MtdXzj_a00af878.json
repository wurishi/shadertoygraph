{"ver":"0.1","info":{"id":"MtdXzj","date":"1480687265","viewed":214,"name":"Space debris","username":"gloinart","description":"Fake-3d space debris shader. To tell the truth, I was aiming for some kind of water-effect, but it turned out to look more like space debris.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["spacefake3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// reinterval\nfloat reinterval(float inVal, float oldMin, float oldMax, float newMin, float newMax) {\n\tinVal -= oldMin;\n\tinVal *= (newMax - newMin);\n\tinVal /= (oldMax - oldMin);\n\tinVal += newMin;\n\treturn inVal;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec4 color0;\n    {\n        float time = iTime;\n        vec2 uv = fragCoord.xy / iResolution.xy;  \n        uv.x += sin(time*0.45)*0.15;\n        uv.x += sin(time*0.25)*0.15;\n        float zoom = reinterval(sin(time * 0.6), -1.0, 1.0, 0.8, 1.3);\n        uv = mix(vec2(0.5, 0.5), uv, zoom);\n\n        vec2 offset = texture(iChannel0, uv).rr;\n        offset.x *= sin(time*3.0+uv.x);\n        offset.y *= sin(time*4.0+uv.x);\n        offset*=0.045;\n\n        color0 = texture(iChannel0, uv+offset);\n        // colorize\n        color0.rgb += vec3(0.01, 0.02, 0.05) * texture(iChannel0, uv).r * 4.0; \n    }\n    \n\n    vec4 color1;\n    {\n        float time = iTime + 0.1;\n        vec2 uv = fragCoord.xy / iResolution.xy;  \n        uv.x += sin(time*0.45)*0.15;\n        uv.x += sin(time*0.25)*0.15;\n        float zoom = reinterval(sin(iTime * 0.6),  -1.0, 1.0, 0.8, 1.3);\n        uv = mix(vec2(0.5, 0.5), uv, zoom);\n\n        vec2 offset = texture(iChannel0, uv).rr;\n        offset.x *= sin(time*3.0+uv.x);\n        offset.y *= sin(time*4.0+uv.x);\n        offset*=0.045;\n\n        color1 = texture(iChannel0, uv+offset);\n        // colorize\n        color1.rgb += vec3(0.005, 0.03, 0.02) * texture(iChannel0, uv).r * 4.0; \n    }\n    \n    // mix and de-gamma\n    float t = reinterval(sin(iTime*0.1), -1.0, 1.0, 0.2, 0.8);\n    vec4 color = mix(color0, color1, t);\n    color = pow(color, vec4(1.0/0.8)); \n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}