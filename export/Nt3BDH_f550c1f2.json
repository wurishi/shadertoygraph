{"ver":"0.1","info":{"id":"Nt3BDH","date":"1663077988","viewed":33,"name":"sunmoondance","username":"dashcorning","description":"sghader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float radius = .1;\nfloat sunBorder = .02;\nvec2 sunPos = vec2(0.5 ,0.);\nfloat sunMoveSpeed = 1.;\nvec3 sunCol = vec3(1.0, .9, .83);\nvec3 dayCol = vec3(1.,0.,0.);\nvec3 dayColTop = vec3(1.,1.,1.);\nvec3 nightCol = vec3(0.1,0.1,.4);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float aspectRatio = iResolution.x / iResolution.y;   \n        \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //background\n    //vec3 currentCol = mix(dayCol,nightCol,-sin(iTime * sunMoveSpeed));\n    vec3 currentCol = mix(nightCol,dayCol,clamp((uv.y *2.),0.,2.) +sin(iTime) - .7);\n    vec3 col = sin(currentCol);\n    \n    //sun\n    sunPos.x *= aspectRatio;\n    //float scaledTime = \n    //vec2 sunCenter = sunPos + vec2((cos(iTime)/5.), sin(iTime)/5.);\n    vec2 sunCenter = sunPos + vec2((cos(iTime * sunMoveSpeed)/.9), sin(iTime * sunMoveSpeed)/1.2);\n    float pixelDist = (distance(sunCenter, vec2(uv.x * aspectRatio,uv.y)));\n    pixelDist = 1.-pixelDist;\n    float roundedDist = smoothstep(pixelDist,1.-radius,1.-radius - sunBorder);\n    \n    roundedDist *= step(pixelDist,1.-radius);\n    sunCol *= (1.-roundedDist);\n    \n    col *= roundedDist;\n    col += sunCol;\n    \n    //waves\n    \n    float y = uv.y + sin((uv.x - (iTime * 0.3))*8.0)*0.1;\n    float t = step(y,0.5);\n    \n    col = mix(col, vec3(0.), t);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}