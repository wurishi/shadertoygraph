{"ver":"0.1","info":{"id":"ttsBzM","date":"1596377428","viewed":370,"name":"Aerial corridor","username":"gaz","description":"fractal","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Scale;\n\nfloat map(vec3 p){\n    p=mod(p,2.)-1.;\n    p=abs(p)-1.;\n    if(p.x<p.z)p.xz=p.zx;\n    if(p.y<p.z)p.yz=p.zy;\n    if(p.x<p.y)p.xy=p.yx;\n    float s=1.;\n    for(int i=0;i<10;i++)\n    {\n      float r2=2./clamp(dot(p,p),.1,1.);\n      p=abs(p)*r2-vec3(.6,.6,3.5);\n      s*=r2;\n    }\n    Scale=log2(s);\n    return length(p)/s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=(2.*fragCoord-iResolution.xy)/iResolution.y;\n\tvec3 p,\n  \t\tro=vec3(.5+.2*sin(iTime*.03),.05*cos(iTime*.03),-.1*iTime),\n  \t\tw=normalize(vec3(.2,sin(iTime*.1),-1)),\n  \t\tu=normalize(cross(w,vec3(0,1,0))),\n  \t\trd=mat3(u,cross(u,w),w)*normalize(vec3(uv,2));\n  \tfloat h=.4,d,i;\n \tfor(i=1.;i<100.;i++)\n    {\n    \tp=ro+rd*h;\n    \td=map(p);\n    \tif(d<.001||h>10.)break;\n    \th+=d;\n\t}\n\tfragColor.xyz=mix(vec3(1),vec3(cos(Scale*2.5+p*1.8)*.5+.5),0.5)*10./i;\n    if(i<5.)fragColor.xyz=vec3(.5,.2,.1)*(5.-i);\n}\n","name":"Image","description":"","type":"image"}]}