{"ver":"0.1","info":{"id":"DdKcDK","date":"1696623542","viewed":125,"name":"Distortion Shockwave","username":"welches","description":"A distortion shockwave with chromatic aberration. Tweak the parameters defined at the top of the file to change the shockwave's appearance.","likes":7,"published":1,"flags":0,"usePreview":1,"tags":["distortion","shockwave","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CENTER vec2(0.5, 0.5)\n#define PI 3.1415926\n\n#define force 0.08\n#define thickness 0.075\n#define feathering 0.1\n#define aberrationOffset 0.006\n#define flashIntensity 3.0\n\n// Scale UV from the screen's center by a factor\nvec2 centerScaleUV(vec2 UV, vec2 factor) {\n    return (UV - vec2(0.5)) * factor + vec2(0.5);\n}\n\nfloat easeOutSine(float t) {\n  return sin((t * PI) / 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 screenUV = fragCoord / iResolution.xy;\n    float pos = easeOutSine(iTime - floor(iTime));\n    \n    float aspectRatio = iResolution.x / iResolution.y;\n    // Perform various scalings to allow the screen to be inscribed on the inner\n    // bound of a shockwave of diameter 1:\n    //  * Multiply by aspect ratio to remove stretching\n    vec2 scalingFactor = vec2(aspectRatio, 1.0);\n    //  * Convert from diameter to radius\n    scalingFactor *= 2.0;\n    //  * Subtract thickness and feathering to change perspective to inside bound\n    //    of shockwave\n    scalingFactor *= 1.0 - thickness - feathering;\n    //  * Causes inside bound to be tangent to screen edge at corners rather than\n    //    at the middle of top and bottom edge.\n    scalingFactor /= sqrt(pow(aspectRatio, 2.0) + 1.0);\n    vec2 scaledUV = centerScaleUV(screenUV, scalingFactor);\n\n    vec2 displacement = normalize(scaledUV - CENTER) * force;\n    float distance = distance(scaledUV, CENTER);\n\n    float innerBound = smoothstep(\n        pos - thickness - feathering,\n        pos - thickness,\n        distance\n    );\n    float outerBound = smoothstep(\n        pos - feathering,\n        pos,\n        distance\n    );\n    float shapeMask = innerBound - outerBound;\n\n    float rChannel = texture(iChannel0, screenUV - (displacement - aberrationOffset) * shapeMask).x;\n    float bChannel = texture(iChannel0, screenUV - displacement * shapeMask).y;\n    float gChannel = texture(iChannel0, screenUV - (displacement + aberrationOffset) * shapeMask).z;\n\n    vec3 color = vec3(rChannel, bChannel, gChannel);\n\n    // f(0) = 1, f(1) = 0, f'(1) = 0, and decreases fast\n    float flashOpacity = pow(1.0 - pos, 4.0);\n    // Flash is shown only inside the shockwave\n    float flashMask = 1.0 - innerBound;\n    color += flashIntensity * color * flashMask * flashOpacity;\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}