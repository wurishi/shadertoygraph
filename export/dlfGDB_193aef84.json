{"ver":"0.1","info":{"id":"dlfGDB","date":"1672420692","viewed":239,"name":"Claude after the LSD hits","username":"MysteryPancake","description":"My proudest work yet\nMove mouse to change shrink factor :)","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["2d","chroma","distort","greenscreen","chromakey","matte","compositing","weird","drugs","funny","weed"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TAU = 6.28318530;\n\nfloat getAlpha(vec3 col) {\n    const vec3 green = vec3(0.0, 1.0, 0.0);\n    return smoothstep(0.6, 0.7, distance(col, green));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    const float dirSteps = 32.0;\n    \n    // Shrink factor, change with mouse\n    float radius = iMouse.z > 0.0 ? length(iMouse.xy / iResolution.xy - 0.5) * 500.0 : 30.0;\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 bg = vec3(uv.x, 1.0 - uv.y, 1.0) + smoothstep(0.4, 0.6, length(uv - 0.5));\n    \n    fragColor = texture(iChannel0, uv);\n    float alpha = getAlpha(fragColor.rgb);\n    \n    // Correct aspect ratio\n    vec2 aspect = 1.0 / vec2(textureSize(iChannel0, 0));\n    \n    // STEP 1: Find average direction away from edge\n    \n    vec2 dirAvg = vec2(0.0);\n    for (float i = 0.0; i < TAU; i += TAU / dirSteps) {\n        // Move in a circle to find edges within radius\n        vec2 dir = vec2(sin(i), cos(i));\n        vec4 col = texture(iChannel0, uv + dir * aspect * radius);\n        // Edge was found, accumulate for average\n        if (alpha > getAlpha(col.rgb)) dirAvg += dir;\n    }\n    \n    // No edges within radius\n    if (length(dirAvg) <= 0.0) {\n        fragColor.rgb = mix(bg, fragColor.rgb, alpha);\n        return;\n    }\n    \n    // Calculate average direction\n    dirAvg = normalize(dirAvg);\n\n    // STEP 2: Raycast in average direction until an edge is hit\n    \n    float d = radius * 0.5;\n    float move = d * 0.5;\n    // Binary search works better than linear search\n    for (int i = 0; i < 8; i++, move *= 0.5) {\n        vec4 col = texture(iChannel0, uv + dirAvg * aspect * d);\n        d += alpha > getAlpha(col.rgb) ? -move : move;\n    }\n    \n    // Distort the image\n    fragColor = texture(iChannel0, uv + dirAvg * aspect * (radius - d));\n    fragColor.rgb = mix(bg, fragColor.rgb, getAlpha(fragColor.rgb));\n}","name":"Image","description":"","type":"image"}]}