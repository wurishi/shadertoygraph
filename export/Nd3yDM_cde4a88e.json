{"ver":"0.1","info":{"id":"Nd3yDM","date":"1653501318","viewed":45,"name":"scalable squares","username":"gazdovsky","description":"scales","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 drawRect(vec2 uv, vec2 coords, float side, vec3 col, float normAspect){\n\n  if (uv.x > coords.x && uv.x < coords.x + side && uv.y >coords.y*normAspect && uv.y < (coords.y + side)*normAspect) {\n        col.r = atan(uv.x, uv.y);\n    }\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n\n    float normAspect = iResolution.x / iResolution.y;\n    vec2 coords = vec2(0.0,0.0);\n    float side = 1.0 / float( int(iTime) % 100);\n    int i = 0;\n    int j = 0;\n    while(j++<100){\n  i = 0;\n  coords.x = 0.0;\n  while(i++<100){ \n     col = drawRect(uv, coords, side, col, normAspect);\n     coords.x+=side+0.005;\n  }\n  \n  coords.y = coords.y  + (side + 0.005);\n  }\n //   if (int(sin(uv.x) * 100.0) % 5 == 0){\n  //  col.r += 0.1;\n   // }\n   // if (int(cos(uv.y) * 100.0) % 5 == 0){\n   // col.g -= 0.1;\n   // }\n   // if (int(tan(uv.x) * 100.0) % 4 == 0){\n   // col.g += cos(uv.y + uv.x);\n   // }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}