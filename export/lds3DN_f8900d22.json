{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define TIME iTime\n#define EPS 0.001\n\nfloat subs(float a, float b) { return max(a,-b); }\nfloat inte(float a, float b) { return max(a,b); }\nfloat unio(float a, float b) { return min(a,b); }\n\nfloat rect(vec2 o, vec2 b) {\n\tvec2 d = abs(o) - b;\n \treturn min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\nfloat elip(vec2 o, float r) { return length(o)-r; }\nfloat donu(vec2 o, float ro, float ri) { return subs(elip(o,ro),elip(o,ri)); }\nfloat isObject(float o) { return o<=0.0?1.0:0.0; }\n\nmat2 rotate2D(float a) { return mat2(cos(a),sin(a),-sin(a),cos(a)); }\n\nfloat C(vec2 p) { return subs(donu(p,5.,2.5),100.0*rect(p-vec2(7.,0.),vec2(7.))); }\n\nfloat S(vec2 p) {\n\tfloat d = rect(p,vec2(2.,1.25));\n\n\tp += vec2(2.0,-3.75);\n\td = unio(d,C(p));\n\td = unio(d,rect(p-vec2(3.75,3.75),vec2(3.75,1.25)));\n\t\n\tp.x -= 4.;\n\td = unio(d,C(p*rotate2D(acos(-1.))-vec2(0.0,7.5)));\n\td = unio(d,rect(p+vec2(3.75,11.25),vec2(3.75,1.25)));\n\treturn d;\n}\n\nfloat L(vec2 p) {\n\tfloat d = rect(p+vec2(0.,7.5),vec2(5.0,1.25));\n\td = unio(d,rect(p+vec2(3.75,0.),vec2(1.25,8.75)));\n\treturn d;\n}\n\nfloat X(vec2 p) {\n\tp.x /= 1.1;\n\tfloat d = rect(p+vec2(p.y*0.65,0.),vec2(1.25,8.75));\n\td = unio(d,rect(p-vec2(p.y*0.65,0.),vec2(1.25,8.75)));\n\treturn d;\n}\n\n\nfloat scene(vec2 p) {\n\tp.x += 8.;\n\tfloat d = S(p+vec2(8.,0.));\n\td = unio(d,L(p-vec2(8.,0.)));\n\td = unio(d,X(p-vec2(24.,0.)));\n\treturn d;\n}\n\nfloat heightmap(vec2 p) { return smoothstep(0.0,0.75,scene(p)); }\nvec3 getNormal(vec2 p) {\n\treturn normalize(vec3(\n\t\theightmap(p+vec2(EPS,0.))-heightmap(p-vec2(EPS,0.)),\n\t\theightmap(p+vec2(0.,EPS))-heightmap(p-vec2(0.,EPS)),\n\t\tsmoothstep(0.75,0.0,scene(p))*EPS));\n}\n\nfloat pattern(float d, float pOffset) { return sin(d*10.+pOffset); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\tvec3 eye = normalize(vec3(p.xy+vec2(1.5,0.0),2.));\t\n\t\n\tp*=16.0;\n\t\t\n\tvec3 n = getNormal(p);\n\tvec3 rn = reflect(getNormal(p),eye);\n\t\n\tfloat d = scene(p);\n\t\t\n\tp += rn.xy*4.;\n\tfloat sd = smoothstep(1.0,0.0,d);\n\tvec3 cmy = vec3(abs(p.x),abs(p.y-p.x),abs(p.y));\n\tvec3 col = mix(cmy,vec3(0),sd)*pattern(d,-TIME*10.0)*sd;\n\t\t\t\t\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lds3DN","date":"1371282480","viewed":1575,"name":"80's Typography","username":"Danguafer","description":"80's <3","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["oldschool","80s","silexars","typography"],"hasliked":0,"parentid":"","parentname":""}}