{"ver":"0.1","info":{"id":"ftXSWS","date":"1626383846","viewed":63,"name":"Mandelbrot_layer","username":"Donald","description":"Yet another rendering of the mandelbrot set. This time I tried to display the behaviour of the points that don't fly off to infinity. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float measure(in vec2 v){return length(v);/*\nif (mod(iTime,2.)>1.){\n\nreturn -v.x;\n}else{\nreturn v.x;}*/\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 c = (fragCoord/iResolution.xy-vec2(.75,.5))*2.;\n    vec2 v=vec2(0.);\n    vec3 col = vec3(0.);\n    bool inn=true;\n    for (int i=0;i<100;i++){\n        v=vec2(v.x*v.x-v.y*v.y,2.*v.x*v.y)+c;\n        if (abs(v.x)+abs(v.y)>4.){\n        //col=vec3(1.);\n        inn=false;\n        break;\n        }\n    }\n    vec2 v2=v;\n    float m2=measure(v2);\n    float m;\n    if (inn){\n        for (int i=0;i<5;i++){\n            v=vec2(v.x*v.x-v.y*v.y,2.*v.x*v.y)+c;\n            m=measure(v);\n            if (m<m2){m2=m;v2=v;}\n        }\n        \n        vec3 cc=vec3(v2,0.1);//v2 show, c debug\n    cc/=length(cc);\n    float r3=sqrt(3.)/2.;\n    // Time varying pixel color\n    float ccx=cc.x*.5;\n    float ccy=cc.y*r3;\n    col=vec3(cc.x,-ccx-ccy,-ccx+ccy)*.5+1.-.5*length(cc.xy);\n    }\n    \n    \n    vec2 mc = (iMouse.xy/iResolution.xy-vec2(.75,.5))*2.;\n    v=vec2(0.);\n    for (int i=0;i<100;i++){\n        v=vec2(v.x*v.x-v.y*v.y,2.*v.x*v.y)+mc;\n        if (abs(v.x)+abs(v.y)>4.){\n        break;\n        }\n        if (length(c-v)<0.01){\n        col=vec3(.5)+.5*col;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}