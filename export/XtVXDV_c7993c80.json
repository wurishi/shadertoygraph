{"ver":"0.1","info":{"id":"XtVXDV","date":"1485985738","viewed":619,"name":"Rotating Rectangle","username":"pineapplemachine","description":"Render a rectangle at the origin which rotates with time.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["square","rectangle","shape","primitive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float width = 0.25; // Width of rectangle to draw\nconst float height = 0.25; // Height of rectangle to draw\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tvec2 uv = vec2(0.5, 0.5) - (fragCoord.xy / iResolution.xy); // Get coord relative to center\n    uv.x *= iResolution.x / iResolution.y; // Correct for aspect ratio\n    float hypot = sqrt(uv.x * uv.x + uv.y * uv.y);\n    float uvang = atan(uv.y, uv.x);\n    float newang = uvang + iTime;\n    vec2 rot = vec2(hypot * cos(newang), hypot * sin(newang));\n    if(rot.x <= width && rot.x >= -width && rot.y <= height && rot.y >= -height){\n    \tfragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }else{\n        fragColor = vec4(0.25, 0.25, 0.25, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}