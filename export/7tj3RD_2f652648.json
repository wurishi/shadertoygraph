{"ver":"0.1","info":{"id":"7tj3RD","date":"1637091861","viewed":147,"name":"Twinkle Twinkle little star","username":"eurigilberto","description":"Testing sigmoid functions","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sigmoid(float x, float k){\n    return (x - k*x)/(k - 2.*k*abs(x) + 1.);\n}\n\nvec4 twinkleStar(vec2 uv, vec2 offset, float scale, float timeOffset){\n    uv += offset;\n    \n    uv -= 0.5;\n    uv *= 2.;\n    uv *= scale;\n    \n    vec2 normalUV  = uv;\n    \n    uv.x = abs(uv.x);\n    uv.y = abs(uv.y);\n    \n    float limit = step(1.0, step(1.0, uv.x) + step(1.0, uv.y));\n    \n    limit = 1. - limit;\n    \n    uv.x = 1.-uv.x;\n    \n    float currentTime = iTime + timeOffset;\n    float animTime = sin(currentTime * 3.14 * 2.)*0.5 + 0.5;\n    float value = 1. - step(sigmoid(uv.x - 0.005, 0.9 + animTime*0.1) - 0.005, uv.y);\n    \n    float animTime2 = sin(currentTime * 5.)*0.5 + 0.5;\n    float ring = sigmoid(1.-length(normalUV), 0.8);\n    value *= sigmoid(1.-length(normalUV), 0.1) * 1.5;\n    value = min(1., value);\n    \n    return vec4(1.,1.,1.,1.0)*value*limit;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/(iResolution.y/2.);\n    \n    fragColor = twinkleStar(uv, vec2(-0.5,-0.5), 3.0, 1.0) + \n    twinkleStar(uv, vec2(-1.2,-0.8), 2.0, 0.25) + \n    twinkleStar(uv, vec2(-1.5,0.3), 1.5, 0.4) +\n    twinkleStar(uv, vec2(-2.1,-0.5), 1.75, 0.15);\n}","name":"Image","description":"","type":"image"}]}