{"ver":"0.1","info":{"id":"dsGfz3","date":"1698439148","viewed":64,"name":"Can you see the music ?","username":"NPWR","description":"A lot more can be extracted out of these iterations of rotate(), feel free to tweak the parameters !\nPlease credit me if you share it ❤️\n","likes":7,"published":1,"flags":64,"usePreview":0,"tags":["procedural","2d","music","psychedelic","visualizer","trippy","soundvisualizer","musicvizualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4s33zj","filepath":"https://soundcloud.com/virtual-riot/virtual-riot-mittens-is-angry?in=chris360-38205059/sets/virtual-riot-binge","previewfilepath":"https://soundcloud.com/virtual-riot/virtual-riot-mittens-is-angry?in=chris360-38205059/sets/virtual-riot-binge","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fold = vec2(-0.5, -0.5);\nvec2 translate = vec2(1.5);\nfloat scale = 1.15;\n\nvec3 hsv(float h,float s,float v) {\n\treturn mix(vec3(3.1),clamp((abs(fract(h+vec3(3.,2.,1.)/3.)*6.-3.)-1.),0.,1.),s)*v;\n}\n\nvec2 rotate(vec2 p, float a){\n\treturn vec2(p.x*cos(a)-p.y*sin(a), p.x*sin(a)+p.y*cos(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 ndc = -1.0 + 2.0*fragCoord.xy/iResolution.xy; // coordinates centered on screen center (-1, 1)\n\tvec2 result = -1.0 + 2.0*fragCoord.xy/iResolution.xy; // to ndc\n\tresult.x *= iResolution.x/iResolution.y; // adjust to ratio\n\tresult *= 0.182;\n\tfloat x = result.y;\n\tresult = abs(mod(result, 4.0) - 2.0);\n    \n    float music_speed_low = texture(iChannel0, vec2(0.1, 0.00)).x;\n    float music_speed_mid = texture(iChannel0, vec2(0.3, 0.2)).x;\n    float music_speed_high = texture(iChannel0, vec2(0.5, 0.4)).x;\n    float ms = max(max(music_speed_low, music_speed_mid), music_speed_high);\n    float music_speed_combined = pow((music_speed_low + music_speed_mid + music_speed_high) / 3.0, 0.9) * 4.0;\n    float rotate_scale = music_speed_combined + ms * iTime / 100.0;\n    \n\tfor(int i = 39; i > 0; i--){\n\t\tresult = abs(result - fold) + fold;\n\t\tresult = result*scale - translate;\n\t\tresult = rotate(result, 3.14159/(0.10+sin((rotate_scale)*0.0005+float(i)*0.50000001)*0.499997+0.5) + iTime/10.0);\n\t}\n\tfloat i = x*x + atan(result.y, result.x) + iTime*0.02;\n\tfloat h = floor(i*4.0)/8.0 + 1.107;\n\th += smoothstep(-0.1, 0.8, mod(i*2.0/5.0, 1.0/4.0)*900.0)/0.010 - 0.5;\n\tfragColor=vec4(hsv(h, 1.0, smoothstep(-3.0, 3.0, length(result)*1.0)), 2);\n}","name":"Image","description":"","type":"image"}]}