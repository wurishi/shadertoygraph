{"ver":"0.1","info":{"id":"sld3zB","date":"1636329173","viewed":304,"name":"depth of field focus study","username":"morisil","description":"Testing something out","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["chromaticaberration","study","depthoffield","focus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float SHAPE_SIZE = .5;\nconst float CHROMATIC_ABBERATION = .02;\n\nfloat getColorComponent(in vec2 st, in float modScale) {\n    vec2 modSt = mod(st, 1. / modScale) * modScale * 2. - 1.;\n    float dist = length(modSt);\n    float blur = .2 * (sin(iTime * 3.) + 1.1);\n    float shapeMap = smoothstep(SHAPE_SIZE + blur, SHAPE_SIZE - blur, dist);\n    return shapeMap;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 st =\n        (2.* fragCoord - iResolution.xy)\n        / min(iResolution.x, iResolution.y);\n\n    float modScale = (sin(iTime) + 1.) * 2.;\n\n    vec3 color = vec3(\n        getColorComponent(st - st * CHROMATIC_ABBERATION, modScale),\n        getColorComponent(st, modScale),\n        getColorComponent(st + st * CHROMATIC_ABBERATION, modScale)        \n    );\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}