{"ver":"0.1","info":{"id":"Ndc3D2","date":"1630799532","viewed":36,"name":"Fragment Shaders (Maria)","username":"ma_ria","description":"Assignment submission for GPR-200","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["graphics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n}\n\n/*\nQUESTION 1: Create a gradient in the reverse direction\n    \n    void mainImage(out vec4 fragColor, in vec2 fragCoord)\n    {\n        vec2 uv = fragCoord / iResolution.xy;\n        vec3 col = vec3(uv.y, 0.0, 1.0);\n        \n        fragColor = vec4(col, 1.0);\n    }\n\n\nQUESTION 2: Create a split-screen of four quadrants. Choose four colors\n    \n    void mainImage(out vec4 fragColor, in vec2 fragCoord)\n    {\n        vec2 uv = fragCoord / iResolution.xy;\n        vec3 col = vec3(uv.y, 0.8, 1.0);\n        vec3 red = vec3(1, 0, 0);\n        vec3 green = vec3(0, 1, 0);\n        vec3 black = vec3(0, 0, 0);\n        vec3 white = vec3(1, 1, 1);\n        \n        if(uv.x < 0.5 && uv.y < 0.5)\n        {\n            col = red;\n        }\n        \n        else if(uv.x > 0.5 && uv.y > 0.5)\n        {\n            col = green;\n        }\n        \n        else if(uv.x > 0.5 && uv.y < 0.5)\n        {\n            col = black;\n        }\n        \n        else\n        {\n            col = white;\n        }\n        \n        fragColor = vec4(col, 1.0);\n        \n        \nQUESTION 3: Create a \"heat\" finder. Basically if the magnitude/brightness of any color is greater than X then turn it red. X\n            should be a variable. By default, set it to 0.5\n            \n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        float heatX = 1.5;\n        vec2 uv = fragCoord / iResolution.xy;\n        vec4 red = vec4(0.0, 1.0, 0.0, 1.0);\n\n        vec4 theNewColor = texture(iChannel0, uv);\n        fragColor = theNewColor;\n\n        if (length(fragColor) > heatX)\n        {\n            fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        }\n\n        else\n        {\n            fragColor = theNewColor * red;\n        }\n    }       \n\n\nQUESTION 4: \n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        vec2 uv = fragCoord / iResolution.xy;\n        vec3 col = vec3(uv.y, 0.8, 1.0);\n        vec3 red = vec3(1, 0, 0);\n        vec3 black = vec3(0, 0, 0);\n\n        float stripes = 10.0 * uv.x;\n        float rounded = floor(stripes);\n\n        if(mod(rounded, 2.0) == 0.0)\n        {\n           col = red; \n        }\n\n        else\n        {\n            col = black;\n        }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    }\n\n*/","name":"Image","description":"","type":"image"}]}