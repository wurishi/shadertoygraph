{"ver":"0.1","info":{"id":"7lGcDw","date":"1661553074","viewed":77,"name":"Distance Fields Fractalized","username":"spenceryonce","description":"Simple distance fields added together and had their space warped around themselves so that they appear to be in a fractal-like form.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","math","distance","geometry","easy","fields"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n    float d = 0.0;\n    float a = 0.2 * iTime * 0.2;\n\n    // Remap the space to -1. to 1.\n    vec2 st = uv *2.-1.;\n    \n    //rotate the space and turn into fractal\n    for(float i = 1.0;i<6.0;i+=1.0){\n        st = abs(st);\n        st -= 0.5;\n        st *= 1.1;\n        st *= mat2(\n            cos(a), -sin(a),\n            sin(a), cos(a)\n        );\n    }\n\n    // Make the distance field\n    d = length( abs(st)-0.332 );\n    d *= length( min(abs(st)-0.700,0.) );\n    d += length( max(abs(st)-0.580,0.) );\n    \n    d = fract(d*8.744);\n    \n    color = color + vec3(\n        length(d+vec2(-0.1,0.0)),\n        length(d+vec2(-0.3,0.0)),\n        length(d+vec2(-0.5,0.0))\n    );\n\n    // Visualize the distance field\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}