{"ver":"0.1","info":{"id":"stB3WK","date":"1624699969","viewed":616,"name":"SDF for Archimedean Spiral","username":"sylvain69780","description":"Archimedian Spiral distance, with coordinates.\nNot exact. ","likes":19,"published":1,"flags":0,"usePreview":1,"tags":["2d","sdf","spiral","arithmetic","archimedean"],"hasliked":0,"parentid":"lsS3WV","parentname":"Nyarchimedes Spiral"},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"/*\n    SDF for Archimedean Spiral\n    --------------------------\n\n    Spirals are commonly use in art, and we may find this figure frequently in the nature.\n    Of course there is several kinds of spirals. For example, the Logarithmic Spiral that IQ  \n    used in his awesome Snail shader and the ones built using arc of circles (multiple center spirals).\n    \n    Related references:    \n    \n    On the salt lake - iapafoto (sdSpiral SDF)\n    https://www.shadertoy.com/view/fsXcR8\n    \n    Basic Archimede Spiral - iapafoto\n    https://www.shadertoy.com/view/NdlyD4\n    \n    Archimedean spiral\n    https://en.wikipedia.org/wiki/Archimedean_spiral\n\n    Nyarchimedes Spiral - kibble\n    https://www.shadertoy.com/view/lsS3WV\n    \n    IQ Distance functions\n    https://iquilezles.org/articles/distfunctions2d\n    \n    filtering the checkerboard pattern - IQ\n    https://iquilezles.org/articles/checkerfiltering\n*/\n\n#define PI acos(-1.0)\n#define TAU (PI*2.0)\n// comment out for rounded ends\n#define SQUARE \n\n// arc length of archimedes spiral\nfloat spiralLength(float b, float a) {\n  // https://en.wikipedia.org/wiki/Archimedean_spiral\n  // return 0.5*b*(a*sqrt(1.0+a*a)+log(a+sqrt(1.0+a*a)));\n  return 0.5*b*(a*sqrt(1.0+a*a)+asinh(a));\n}\n\nfloat spiralLengthPrime(float b, float a) {\n  return b*sqrt(1.0+a*a);\n}\n\n// gives Theta for a given spiral length\n// Newton-Raphson method\nfloat spiralTheta(float b,float d)\n{\n    float x = sqrt(d);\n    for (int i = 0;i<8;i++)\n    {\n        float df = (spiralLength(b,x)-d);\n        if ( abs(df) < 0.001) break;\n        x = max(0.0, x - df/spiralLengthPrime(b,x));\n    }\n    return x;\n}\n\nmat2 rot(in float a) { float c = cos(a); float s = sin(a); return mat2(c, s, -s, c); }\n\nfloat dBorderSquare(vec2 p, float b, float a, float w)\n{\n        vec2 q = p*rot(a)-vec2(a*b,0.);\n        return length(q-vec2(clamp(q.x,-w,w),0.0));\n}\n\nfloat dBorderRound(vec2 p, float b, float a, float w)\n{\n        vec2 q = p*rot(a)-vec2(a*b,0.);\n        return length(q)-w;\n}\n\n// equation for this spiral is r = ba , a1 and a2 are the inner and outer a values, w is the width\nfloat spiralUV(vec2 p,float b, float a1,float a2, float w, out vec2 uv) {\n    float atn = atan(p.y, p.x)/TAU; // sector from -.5 to .5\n    float bn = b*TAU;\n    float r = length(p)/bn;\n\tfloat grad = r - atn; // radial distance gradien used for domain repetition using \"round\"\n    float d = 1e9;\n    float an1 = a1/TAU, an2 = a2/TAU; // predivide by TAU allows to use fract for modulo TAU computations\n    if (an2-an1 >= fract(atn-an1)) // computes distance to borders only if p is not in the opening of the sprial\n        d=bn*abs(grad-round(min(max(r,an1+.5),an2-.5)-atn))-w; // Finite repetition\n    #ifdef SQUARE\n    float db = min(dBorderSquare(p,b,a1,w),dBorderSquare(p,b,a2,w));\n    d = d > 0. ? min(d, db) : max(d,-db);\n    #else\n    float db = min(dBorderRound(p,b,a1,w),dBorderRound(p,b,a2,w));\n    d = d > 0. ? min(d, db) : d;    \n    #endif\n    // UV calculations\n    float turn = round(grad); \n    float a = TAU*(turn + atn); \n    uv.x = spiralLength(b,a)-spiralLength(b,a1);\n    uv.y = bn*(grad-round(grad));\n\treturn d;\n}\n\n// https://iquilezles.org/articles/checkerfiltering\n\nfloat checker( in vec2 p )\n{\n    // filter kernel\n    vec2 w = fwidth(p) + 0.01;  \n    // analytical integral (box filter)\n    vec2 i = 2.0*(abs(fract((p-0.5*w)/2.0)-0.5)-abs(fract((p+0.5*w)/2.0)-0.5))/w;\n    // xor pattern\n    return 0.5 - 0.5*i.x*i.y;                  \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    float zoom = 10.;\n    uv*=zoom;\n    \n    vec2 suv = vec2(0);\n    // size, spacing, start turn, end turn\n    float w = 1.0;\n    float bn = mix(2.1,20.,0.5+0.5*sin(iTime));\n    // float off = spiralLength(w/TAU,PI); \n    // https://www.desmos.com/calculator/fs6pl2zlf9\n    float b = bn/TAU;\n    float off = b*5.9875562273; // offset for start position\n    float start=mix(0.0,20.0,0.5+0.5*sin(iTime)); // end if fixed and we move the start, unrolling the spiral !\n    float l = 30.0;\n    float a1 = spiralTheta(b,start+off);\n    float a2 = spiralTheta(b,start+l+off);\n    vec2 p = uv;\n    p.x -= b*a2-10.0;\n    p.y -= -6.0;\n    p=rot(a2+PI)*p;    \n    float d = spiralUV(p,b,a1,a2,w,suv);\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d/5.0));\n\tcol *= 0.8 + 0.2*cos(128.0*abs(d)/5.0);\n    if ( d<0.0) {\n        if ( mod(iTime,10.) > 5.) col = checker(suv.xy*2.0)*vec3(1);\n        col *= mix(vec3(0,0.6,1),vec3(1,1,0),suv.y+.5);\n        //col = sqrt(texture(iChannel0,suv).xyz);\n    }\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.015*5.0,abs(d)) );\n    // IQ \n    if( iMouse.z>0.001 )\n    {\n        vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n        m *= zoom;\n        m.x -= b*a2-10.0;\n        m.y -= -6.0;\n        m=rot(a2+PI)*m;    \n        float d = spiralUV(m,b,a1,a2,w,suv);\n        col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, abs(length(p-m)-abs(d))/zoom-0.0025));\n        col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, length(p-m)/zoom-0.015));\n    }\n\n\tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}