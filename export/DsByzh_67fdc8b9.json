{"ver":"0.1","info":{"id":"DsByzh","date":"1687384338","viewed":87,"name":"RGB Julia set explorer","username":"DeltaT","description":"Click and drag to morph the fractal","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 500\n\nvec2 complexSquare(vec2 z) {\n    vec2 z2 = vec2(0);\n    z2.x = z.x*z.x - z.y*z.y;\n    z2.y = 2.*(z.x*z.y);\n    return z2;\n}\n\nvec3 colorMap(float p) {  \n    // https://www.desmos.com/calculator/tox6hpgflr\n    float r = clamp(abs(6.*p-3.)-1., 0., 1.);\n    float g = clamp(-abs(6.*p-2.)+2., 0., 1.);\n    float b = clamp(-abs(6.*p-4.)+2., 0., 1.);\n    \n    return vec3(r, g, b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec2 mouse = (iMouse.xy * 2. - iResolution.xy) / iResolution.y;\n    \n    vec2 c = mouse*1.5;\n    vec2 z = uv*1.5;\n    if (iMouse.xy == vec2(0)) { c = vec2(-0.753, 0.044); }\n    \n    int iter = clamp(int(iTime*20.), 0, MAX_ITER);\n    const float threshold = 2.;\n    \n    vec3 col = vec3(0);\n    // float brightness = 0.;\n    \n    for (int i = 0; i <= iter; i++) {\n        z = complexSquare(z) + c;\n        if (length(z) < threshold) {\n            col = vec3(0);\n        } else {\n            // brightness = clamp(float(i)/clamp(float(iter), 0., 20.), 0., 1.);\n            // col = vec3(colorMap(fract(float(i)/50. + iTime/10.))) * brightness; break;\n            col = vec3(colorMap(fract(float(i)/50. + iTime/15.))); break;\n        }\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}