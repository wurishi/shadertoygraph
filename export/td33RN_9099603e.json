{"ver":"0.1","info":{"id":"td33RN","date":"1567911707","viewed":431,"name":"Gingham Vortex","username":"isohedral","description":"Rotating gingham vortices. A first experiment in using stream functions from stable fluid flow in complex analysis. See for example https://math.mit.edu/~jorloff/18.04/notes/topic6.pdf.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["flow","geometry","tiling","complexanalysis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TWOPI = 2.0*3.14159265358979;\nconst float fac = 10.0 / TWOPI;\n\n// 240, 23, 24\n// 246, 128, 126\n// 255, 255, 255\n\nvec2 eval( vec2 p, vec2 c, float strength )\n{\n    p -= c;\n    float l = log( length( p ) );\n    float ang = atan( p.y, p.x );\n    return strength * vec2( l, ang );\n}\n\nvec4 getColour( vec2 sp )\n{\n    vec2 p = 3.*(2.*sp - iResolution.xy) / iResolution.x;\n\n    vec2 ep = eval( p, vec2( -1.5, 1 ), 1.0 ) \n        + eval( p, vec2( 1.5, -1 ), 1.0 )\n        + eval( p, vec2( -1.5, -1 ), -1.0 )\n        + eval( p, vec2( 1.5, 1 ), -1.0 );\n    float d = fwidth(ep).x * 4.*fac;\n    ep = ep + 4.*vec2(-ep.y,ep.x);\n\tvec2 si = smoothstep(-.5*d,.5*d,abs(mod(fac*ep + iTime*0.75,2.)-1.)-.5);  \n\n    return 1.- (1.-vec4(1,.5,.5,0)) * (si.x+si.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    fragColor = getColour( fragCoord );\n}","name":"Image","description":"","type":"image"}]}