{"ver":"0.1","info":{"id":"lflSzl","date":"1705610317","viewed":38,"name":"fractal noise test","username":"wainggan","description":"stupid simple, probably slow","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"MclSzl","parentname":"im not sure exactly what i did"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define OCTAVES 6\n\nfloat random(vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat noise(vec2 p) {\n    \n    vec2 s = floor(p);\n    \n    float a = random(s);\n    float b = random(s + vec2(1.0, 0.0));\n    float c = random(s + vec2(0.0, 1.0));\n    float d = random(s + vec2(1.0, 1.0));\n    \n    vec2 f = smoothstep(0.0, 1.0, fract(p));\n    \n    float ab = mix(a, b, f.x);\n    float cd = mix(c, d, f.x);\n    \n    float o = mix(ab, cd, f.y);\n    \n    return o;\n    \n}\n\nfloat fractal(vec2 p) {\n\n    float o = 0.0;\n    float strength = 0.5;\n    vec2 position = p;\n    \n    for (int i = 0; i < OCTAVES; i++) {\n        \n        o += noise(position) * strength;\n        position *= 2.0;\n        strength *= 0.5;\n        \n    }\n    \n    // attempt to fix darkness issues\n    o /= 1.0 - 0.5 * pow(0.5, float(OCTAVES - 1));\n    \n    return o;\n    \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float n = fractal(uv * 10.0);\n    \n    vec3 col = vec3(n);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}