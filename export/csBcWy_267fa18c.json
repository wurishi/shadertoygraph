{"ver":"0.1","info":{"id":"csBcWy","date":"1688089095","viewed":50,"name":"laplacian = 0?","username":"boytoy","description":"trying to play with discretization of pde's. Not sure if this is the correct way... but let's find out!","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["simulation","experimentation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvo = uv;\n    uv *= 2.;\n    uv -= 1.;\n\n    // Output to screen\n    fragColor = texture(iChannel0,uvo);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float l = 0.999;\nconst float PI = 3.141592;\nconst float N = 20.;\nconst float d = 0.005;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv  = fragCoord/iResolution.xy;\n    vec2 uvo = uv;\n    uv *= 2.;\n    uv -= 1.;\n    \n    vec2 mouse =iMouse.xy/iResolution.xy;\n    mouse *=2.; mouse-= 1.;\n    \n    \n    // calculate mean value. Forcing \"mean value property\".\n    vec4 last_time = vec4(0.);\n    for(float i = 0.;i < N;i++){\n        float c = cos((2.*PI*i)/N);\n        float s = sin((2.*PI*i)/N);\n        vec2 duv = d*vec2(c,s);\n        last_time += texture(iChannel0,uvo+duv)/N;\n    }\n        \n    // border conditions\n    if(abs(uv.x) + abs(uv.y) <0.1){\n        fragColor = vec4(2.) + 2.*cos(iTime);\n    }else if(length(uv-mouse)<0.01){\n        fragColor = vec4(4.,1.,4.,1.);             // i am mouse color\n    }else{\n        fragColor = +last_time;\n    }\n    if(iFrame <= 10){\n       fragColor = vec4(0.);\n   }\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}