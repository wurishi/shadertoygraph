{"ver":"0.1","info":{"id":"MlfcRS","date":"1505227486","viewed":212,"name":"A Viscous Wave Hello","username":"TheGrego","description":"A mendala of ripples and undulating trigonometry of viscosity.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","wave","sin","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float z = iTime;\n    \n    // set centered uv\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0;\n    uv -= 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\t\n    // multiple and twist uv\n    uv *= sin(length(uv) * 2.0) * 7.0;\n\t\n    // calculate morphing central blobs\n    float val1 = length(uv);\n    val1 = 1.0 - fract(length(uv + sin(iTime + uv.x) * cos(iTime + uv.y) ));\n\t\n    // calculate rotating radial wave pattern\n    float val2 = length(uv * 0.1) * \n        cos( pow(sin(iTime + atan(uv.y, uv.x) * 10.0) + uv.x * length(uv * 0.1), 2.0 ));\n\n\t// combine values\n    float val = mix(val1, val2, sin(atan(uv.y, uv.x) * 10.0) );\n   \n    // colors\n    float r = pow(val, 5.0) * 3.0;\n    float g = val;\n    float b = val + 0.05;\n    fragColor = vec4(r, g, b, 1);\n}","name":"Image","description":"","type":"image"}]}