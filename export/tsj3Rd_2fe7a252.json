{"ver":"0.1","info":{"id":"tsj3Rd","date":"1549816436","viewed":416,"name":"line understanding","username":"yashgugale","description":"understanding line 2d distance function","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdLine(in vec2 p,in vec2 a,in vec2 b)\n{\n    // Find vectors pa and ba:\n    vec2 pa = p-a, ba = b-a;\n    // Compute the dot product of vectors and divide to get the ratio\n    // Clamp the ratio between 0.0 and 1.0\n\tfloat h = clamp(dot(pa, ba)/dot(ba, ba), 0.0, 1.0);\n    // Return the distance from the given point to the nearest point on line ab\n    return length(pa - ba*h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // a = (x1, y1) and b = (x2, y2)\n    vec2 a = vec2(0.2, 0.5);\t// Two points that will be fed to the sdLine function\n    vec2 b = vec2(0.8, 0.5);\t// Line ab will be formed using these 2 points\n    \n    vec2 p1 = vec2(0.2, 0.2);\t// Point outside line ab, thus, yellow\n    vec2 p2 = vec2(0.5, 0.4);\t// Point ON line ab, ie here dist less than 0.002, thus, red\n    vec2 p3 = vec2(0.5, 0.6);\t// Point outside line ab, thus, yellow\n    vec2 p4 = vec2(0.7, 0.6);\t// Point outside line ab, thus, yellow\n    \n    // Compute the distance of the points from uv to the nearest point on line ab:\n    // If this distance is below a particular threshold (here 0.002), then color the pixel with \n    // a particular color (here, red) otherwise color it with another color (here, yello)\n    float dist = sdLine(uv, a, b);\n    \n    // Default black color to the variable 'col'\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    \n    // The step function will return 0.0 if the dist is less than the edge i.e. 0.002, \n    // and 1.0 otherwise. Uncomment the following line to see the effect\n    //col = vec3(step(0.002, dist), 0.0, 0.0);\n    \n    // Similarly, if the distance between the uv coordinate and the line formed by points a and b\n    // is less than 0.002, color the pixel at position given by 'uv' as red, otherwise color it yellow\n    if(dist < 0.002)\n        col = vec3(1.0, 0.0, 0.0);\n    else\n        col = vec3(1.0, 1.0, 0.0);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}