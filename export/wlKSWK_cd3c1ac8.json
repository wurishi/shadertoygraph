{"ver":"0.1","info":{"id":"wlKSWK","date":"1584749725","viewed":178,"name":"Bar Tiles","username":"Xor","description":"Another quick background shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash1(vec2 p)\n{\n \treturn fract(sin(p.x*91.5-p.y*82.6)*377.4); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float aa = 4.;\n    \n    vec3 n = vec3(0);\n    \n    for(float x = 0.;x<aa;x++)\n    for(float y = 0.;y<aa;y++)\n    {\n        vec2 uv = (fragCoord+vec2(x,y)/aa)/iResolution.y;\n        vec2 ang = sqrt(vec2(.9,.1));\n        uv *= mat2(ang,-ang.y,ang.x);\n\n        float h1 = floor(hash1(floor(uv*8.))+.5);\n        float h2 = hash1(floor(uv*vec2(8.+120.*h1,120.-120.*h1))+.9);\n        float h3 = pow(hash1(floor(uv*8.)+.1),.2);\n        n += pow(vec3(h2*h3),vec3(3,2,1));\n    }\n    float v = length(fragCoord/iResolution.xy-.5);\n    n /= aa*aa;\n    n /= 1.+4.*v*v;\n    fragColor = vec4(n,1);\n}","name":"Image","description":"","type":"image"}]}