{"ver":"0.1","info":{"id":"3tsXzB","date":"1563411558","viewed":3087,"name":"Simple 2D Lighting","username":"mfbaranow","description":"casting random rays and hitting objects to simulate 2d lighting","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphereSDF(vec2 p, float size) {\n\treturn length(p) - size;\n}\n\nfloat boxSDF(vec2 p, vec2 size) {\n\tvec2 r = abs(p) - size;\n    return min(max(r.x, r.y),0.) + length(max(r,vec2(0,0)));\n}\n\nvoid addObj(inout float dist, inout vec3 color, float d, vec3 c) {\n    if (dist > d) {\n        dist = d;\n        color = c;\n    }\n}\n\nvoid scene(in vec2 pos, out vec3 color, out float dist) {\n    dist = 1e9; color = vec3(0,0,0);\n    addObj(dist, color, boxSDF(pos - vec2(-4,1), vec2(1,1)), \tvec3(-.6,.8,1.0));\n    addObj(dist, color, sphereSDF(pos - vec2(4,1), 0.5), \t\tvec3(1, 0.9, 2.8));\n    addObj(dist, color, boxSDF(pos - vec2(0,3.0*sin(iTime)), \tvec2(1.0, 3.5)), vec3(.4,.1,.1));\n}\n\nvoid trace(vec2 p, vec2 dir, out vec3 c) {\n    for (int j = 0; j < 20; j++) {\n        float d;\n        scene(p, c, d);\n        if (d < 1e-3) {\n            //c = vec3(0,.1,0);\n            return;\n        }\n        if (d > 1e1) break;\n        p -= dir * d;\n    }\n    c = vec3(0,0,0);\n}\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n        vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n\n#define SAMPLES 128\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv = (gl_FragCoord.xy-(iResolution.xy/2.0))/iResolution.y*10.0;\n    \n    vec3 col = vec3(0,0,0);\n    for (int i = 0; i < SAMPLES; i++) {\n        float t = (float(i) + random(uv+float(i))) / float(SAMPLES) * 2. * 3.1415;\n        vec3 c;\n        trace(uv, vec2(cos(t), sin(t)), c);\n        col += c;\n    }\n    col /= float(SAMPLES);\n\n    // Output to screen\n    fragColor = vec4(col*2.0,3.0);\n}","name":"Image","description":"","type":"image"}]}