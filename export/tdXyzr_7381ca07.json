{"ver":"0.1","info":{"id":"tdXyzr","date":"1584026138","viewed":137,"name":"GridExploration","username":"antoinefortin","description":"Grid Exploration","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["crossbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\n\n\nfloat simpleShape(vec3 pos)\n{\n\t\n    vec3 q = pos;\n\t\n    q.xz = mod(q.xz + .3, .6) -.3;\n    \n    q.y = mod(q.y + .64, 1.28) -.64;\n    \n    \n    q.y -= 0.15;\n\tfloat d = sdBox(q, vec3(0.25));\n    float r = 0.;\n   \n    \n    \n\tfloat d2 = sdBox(q, vec3(0.295, 0.295 , .0125 ));\n\tfloat d3 =  sdBox(q, vec3(0.295 , .0125 ,0.295 ));\n    q.x += .125;\n    float d4 = sdBox(q , vec3(.0125, 0.295,0.295 ));\n    \n    \n    \n    \n   \n    \n    float d5 = sdBox(q, vec3(.0125, 0.295,0.295 ));\n    \n    \n    float d6 = sdBox(q , vec3(.0125, 0.295,0.295 ));\n    \n    \n    //q.x = mod(q.x+ 0.0125, .25) - 0.0125;\n    \n    \n    \n    \n    \n\tr += max(-d, min(d2,min(d3, min(d4, min(d5, d6)))));\n    \n        \n    \n    \n    \n\n    \n\treturn r * .5;\n}\n\nfloat map(vec3 pos)\n{\n    vec3 q = pos;\n    \n\tfloat d =simpleShape(q);\n    float d2 = pos.y - (-0.25);\n    \n    return min(d, d2);\n}\n\nfloat castRay(vec3 ro, vec3 rd)\n{\n    float t = 0.0;\n    for(int i = 0; i < 100; i++)\n    {\n    \tvec3 pos = ro + t * rd;\n        \n        float h = map(pos);\n        if(h < 0.001)\n        {\n        \tbreak;\n        }\n        t += h;\n        \n        if(t > 100.0) break;\n        \n    }\n    \n    if(t > 100.0) t = -1.0;\n    \n    return t;\n}\n\nvec3 calcNormal(vec3 pos)\n{\n    vec2 e = vec2(0.0001, 0.0);\n    \n\treturn normalize(vec3(\n        \t\t\t\t\tmap(pos+e.xyy) - map(pos-e.xyy),\n        \t\t\t\t\tmap(pos+e.yxy) - map(pos-e.yxy),\n        \t\t\t\t\tmap(pos+e.yyx) - map(pos-e.yyx)\n    \t\t\t\t));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 p = (2.0 * fragCoord- iResolution.xy) / iResolution.y;\n\n\t/*\nvec3 ro = vec3(0.0,0.0,1.0);\n   vec3 rd = normalize(vec3(p, -1.5));\n\t*/\n \n\n\n    \n    // Camera Look at\n    \n    float an = iTime * .05 ;\n    vec3 ro = vec3((2. + iTime) + sin(an), 0.75, -1. + cos(an * 8.));\n    \n\tfloat cameraZoom = 2.5;\n\tvec3 target = vec3(1., 12., 11.);\n\t\n\tvec3 ww = normalize(target - ro);\n\tvec3 uu = normalize(cross(ww, vec3(0.,1.,0.)));\n\tvec3 vv = normalize(cross(uu, ww));\n    \n\tvec3 rd = normalize(p.x * uu + p.y * vv + cameraZoom * ww);\n\n    // Rendering part\n\tfloat t = castRay(ro, rd);\n    \n    \tvec3 col = vec3(0.4, 0.75, 1.0) - 0.7 * rd.y;\n    \n    if(t > 0.)\n    {\n        \n        vec3 baseMat = vec3(0.001, 0.015, .092) - 0.7 * rd.y;\n            vec3 pos = ro + t * rd;\n            vec3 nor = calcNormal(pos);\n            vec3 sunPosition = vec3(abs(sin(iTime)) * 2.,  1. + abs(cos(iTime)),.9);\n            vec3 sundir = normalize(sunPosition);\n            vec3 mate = vec3(.29);\n// From IQ live stream in the yellow jumping guy\n\n            float sundif = clamp(dot(nor, sundir), 0.0, 1.0);\n            float sun_sha = smoothstep(castRay(pos + nor * 0.001, sundir), 0.0, 1.0);\n            float sky_dif = clamp(0.5 + 0.5 * dot(nor,vec3(0.0,1.0,0.0)), 0.0, 1.0);\n            float bou_dif = clamp(0.5 + 0.5 *dot(nor,vec3(0.0,-1.0,0.0)), 0.0, 1.0);\n\n            col = mate * vec3(t * 0.5, t * 0.25, 1.0) * sundif * sun_sha;\n            col += mate * vec3(0.75, 0.8, 0.9) * sky_dif;\n            col += mate * vec3(0.75, 0.3, 0.2) * bou_dif;\n        \t//col -= baseMat;\n        \n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}