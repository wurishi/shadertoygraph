{"ver":"0.1","info":{"id":"sd3cD2","date":"1654067497","viewed":62,"name":"cg2 value-noise","username":"cgcostume","description":"didactic example for the introduction of value noise (not optimized, from live coding during lecture)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["random","valuenoise","basics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float; \n\nfloat rand(vec2 uv) {\n    return fract(sin(\n         dot(uv, vec2(12.9898, 78.2333))) * 43758.5453123);\n}\n\nconst float scale = 64.0;\nconst float parts = 3.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    \n    // move the noise a little around \n\n    vec2 uv_scaled = (uv * vec2(aspect, 1.0));\n    uv_scaled -= 0.5;\n    uv_scaled *= 1.0 + sin(iTime * sqrt(2.0)) * 0.1;\n    uv_scaled += 0.5;\n    uv_scaled = uv_scaled * scale + scale / 16.0 * vec2(sin(iTime), cos(iTime));\n    \n    // get the fractional and the integer part of the grid position\n    vec2 i = floor(uv_scaled);\n    vec2 f = fract(uv_scaled);\n    \n    // create 4 pseudo-random values for the adjacent grid coordinates\n    vec4 r = vec4(\n        rand(i + vec2(0.0, 0.0)),\n        rand(i + vec2(1.0, 0.0)),\n        rand(i + vec2(0.0, 1.0)),\n        rand(i + vec2(1.0, 1.0)));\n\n    vec2 fm; // fractional part, modified\n\n    if (uv.x < 1.0 / parts) {         // no interpolation\n        fm = vec2(0.0); \n    } else if (uv.x < 2.0 / parts) {\n        fm = f;\n    } else {\n        fm = smoothstep(0.0, 1.0, f);\n    }\n      \n    float n = mix(\n        mix(r[0], r[1], fm[0]), \n        mix(r[2], r[3], fm[0]), fm[1]);\n\n    fragColor = vec4(vec3(n), 1.0);\n\n\n    // add split lines for the different variants\n\n    float aa = dFdx(uv.x * parts * 2.0);\n    float ll = abs(mod(uv.x * parts * 2.0, 2.0) - 1.0);\n    ll = smoothstep(1.0 - aa, 1.0, ll);\n    \n    fragColor.rgb = mix(fragColor.rgb, vec3(0.0), ll);\n}\n","name":"Image","description":"","type":"image"}]}