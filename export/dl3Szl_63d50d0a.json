{"ver":"0.1","info":{"id":"dl3Szl","date":"1685703332","viewed":41,"name":"Fractal drop","username":"Simonoob","description":"Evolved from https://www.youtube.com/watch?v=f4s1h2YETNY&t=202s&ab_channel=kishimisu","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    \n    \n    vec3 a = vec3(0.868, 0.496, 0.224);\n    vec3 b = vec3(0.907, 0.954, 0.377);\n    vec3 c = vec3(0.878, 0.981, 1.254);\n    vec3 d = vec3(2.855, 1.376, 5.708);\n    \n    return a + b+cos( 6.28318*(c*t*d) );\n}\n\n\n\nfloat sdEquilateralTriangle( in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n\n    \n    \n    //______ACTUAL SHADER CODE BELOW______\n  \n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    \n    for(float i=0.0; i<4.0; i++){\n    \n        // repeat circles with fractals\n        uv=fract(uv * 1.5) - 0.5;\n\n\n        //circle SDF\n        //float d = length(uv) * exp(-length(uv0));\n        \n        // triangle SDF\n        float d = sdEquilateralTriangle( uv0 +\n        (cos((uv0.x-uv0.y)+iTime)*.05) +\n        (sin((uv0.x-uv0.y)+iTime)*.05),\n        \n        (-length(uv0) * exp(-length(uv))));\n       \n        float frequency = 8.0;\n        \n\n        // create tint\n        vec3 col=palette(length(uv0) + i*0.4 + iTime*0.4);\n\n        d=sin(d*frequency + iTime)/frequency;\n        d=abs(d);\n        \n        \n        \n        \n        //adjust contrast\n        d=pow(0.005/d, 1.2) *(sin(iTime * 0.5)-1.0+(length(uv0)+length(uv)));\n\n        // tint cicrles with color palette\n        finalColor += col * d;\n        \n    }\n    \n    \n  \n    \n   \n    \n\n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}