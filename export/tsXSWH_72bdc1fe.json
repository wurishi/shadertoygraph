{"ver":"0.1","info":{"id":"tsXSWH","date":"1551231587","viewed":167,"name":"Multipass FFT experiment","username":"rory618","description":"Doodling with fft feedback to get a reaction diffusion like system with some extra dynamics.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["fft","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"FFT the entire screen\" by rory618. https://shadertoy.com/view/wd2GR3\n// 2019-02-26 05:31:13\n\n\nvoid mainImage( out vec4 O, in vec2 I ) {\n\t\n    //if(iFrame%5!=0) discard;\n    setRadix(R);\n    O=vec4(texture(iChannel1, I/R.xy).xyyy);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define saw(x,y) (x - (y+y)*floor((y+x)/(y+y)))\n#define pi 3.14159\n#define W(i,n) cexp(vec2(0,2.*pi*float(i)/float(n)))\n#define R iResolution\n#define dot2(x) dot(x,x)\n#define fradix float(radix)\n#define T(c,x,y) texelFetch(c, ivec2(x,y), 0)\n#define SUM(expr, ind, len) \\\n    sum = vec2(0);\\\n    for(int ind = 0; ind < 64; ind++){\\\n        if (ind >= len) break;\\\n        sum += expr;\\\n    }\nvec2 sum;\n\nint x_N0;\nint y_N0;\nint x_N1;\nint y_N1;\n\n\n\nfloat factor(float x){\n    x = floor(x);\n    float f = floor(sqrt(x));\n    while(fract(x/f)>.5/x){f--;}\n    return x/f;\n}\n\nvoid setRadix(vec3 R){\n    \n    x_N0 = int(R.x/factor(R.x));\n    y_N0 = int(R.y/factor(R.y));\n    x_N1 = int(R.x)/x_N0;\n    y_N1 = int(R.y)/y_N0;\n    \n}\n\nvec2 cprod(vec2 a, vec2 b){\n    return mat2(a,-a.y,a.x) * b;\n}\n\nvec2 cis(float t){\n    return cos(t - vec2(0,pi/2.));\n}\nvec2 cexp(vec2 z) {\n    return exp(z.x)*cis(z.y);\n}\nint IHash(int a){\n\ta = (a ^ 61) ^ (a >> 16);\n\ta = a + (a << 3);\n\ta = a ^ (a >> 4);\n\ta = a * 0x27d4eb2d;\n\ta = a ^ (a >> 15);\n\treturn a;\n}\n\nfloat Hash(int a){\n\ta = (a ^ 61) ^ (a >> 16);\n\ta = a + (a << 3);\n\ta = a ^ (a >> 4);\n\ta = a * 0x27d4eb2d;\n\ta = a ^ (a >> 15);\n\treturn float(a) / float(0x7FFFFFFF);\n}\nvec4 rand4(int seed){\n    return vec4(Hash(seed^0x34F85A93),\n                Hash(seed^0x85FB93D5),\n                Hash(seed^0x6253DF84),\n                Hash(seed^0x25FC3625));\n}\nvec3 rand3(int seed){\n    return vec3(Hash(seed^0x348CD593),\n                Hash(seed^0x8593FD5),\n                Hash(seed^0x62A5D384));\n}\nvec2 rand2(int seed){\n    return vec2(Hash(seed^0x348C5F93),\n                Hash(seed^0x8593D5BB));\n}\n\n\nvec2 randn(vec2 randuniform){\n    vec2 r = randuniform;\n    r.x = sqrt(-2.*log(1e-9+abs(r.x)));\n    r.y *= 6.28318;\n    r = r.x*vec2(cos(r.y),sin(r.y));\n    return r;\n}\n\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec2 inp(int x, int y){\n    if(iFrame<30){\n    \treturn vec2(texture(iChannel0, (vec2(x,y)+.5)/(R.xy)).x,0);\n    } else {\n    \treturn vec2(texture(iChannel2, (vec2(x,y)+.5)/(R.xy)).xy);\n    }\n}\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    setRadix(R);\n    O = vec4(0);\n    int x = int(I.x);\n    int y = int(I.y);\n    \n    int n = (x/x_N1);\n    //SUM( cprod(T(iChannel0, x%x_N1+i*x_N1, y).xy,W(i*n,x_N0)),i,x_N0 );\n    SUM( cprod(inp(x%x_N1+i*x_N1, y),W(i*n,x_N0)),i,x_N0 );\n    O.xy = cprod(sum, W((x%x_N1)*n,int(R.x)));\n    \n    \n    n = (x/x_N0);\n    SUM( cprod(T(iChannel1, (x%x_N0)*x_N1+i, y).xy,W(i*n,x_N1)),i,x_N1 );\n    O.zw = sum;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    setRadix(R);\n    O = vec4(0);\n    int x = int(I.x);\n    int y = int(I.y);\n    \n    int n = (y/y_N1);\n    SUM( cprod(T(iChannel0, x, y%y_N1+i*y_N1).zw,W(i*n,y_N0)),i,y_N0 );\n    O.zw = cprod(sum, W((y%y_N1)*n,int(R.y)));\n    \n    \n    n = (y/y_N0);\n    SUM( cprod(T(iChannel1, x, (y%y_N0)*y_N1+i).zw,W(i*n,y_N1)),i,y_N1 );\n    O.xy = sum/sqrt(R.x*R.y);\n    //A little diffusion\n    O.xy *= exp(-dot2(saw(I,R.xy/2.)*.01));\n    //O.xy *= 1.-smoothstep(0.,22.,-dot2(saw(I,R.xy/2.)*.1));\n    //mess with phase\n    if(dot2(I)>3.)\n    //\tO.xy = cprod(O.xy,W(20./(dot2(I)+2.),13));\n    \n    if(floor(I)==vec2(0)) O.xy=iMouse.xy;\n    \n   // O.xy = mix(O.xy,T(iChannel1,I.x,I.y).xy,.5);\n    \n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    setRadix(R);\n    O = vec4(0);\n    int x = int(I.x);\n    int y = int(I.y);\n    \n    int n = (x/x_N1);\n    SUM( cprod(ivec2(x%x_N1+i*x_N1, y)==ivec2(0)?vec2(0):T(iChannel0, x%x_N1+i*x_N1, y).xy,W(-i*n,x_N0)),i,x_N0 );\n    O.xy = cprod(sum, W(-(x%x_N1)*n,int(R.x)));\n    \n    \n    n = (x/x_N0);\n    SUM( cprod(T(iChannel1, (x%x_N0)*x_N1+i, y).xy,W(-i*n,x_N1)),i,x_N1 );\n    O.zw = sum;\n    \n    \n    \n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    setRadix(R);\n    O = vec4(0);\n    int x = int(I.x);\n    int y = int(I.y);\n    \n    int n = (y/y_N1);\n    SUM( cprod(T(iChannel0, x, y%y_N1+i*y_N1).zw,W(-i*n,y_N0)),i,y_N0 );\n    O.zw = cprod(sum, W(-(y%y_N1)*n,int(R.y)));\n    \n    \n    n = (y/y_N0);\n    SUM( cprod(T(iChannel1, x, (y%y_N0)*y_N1+i).zw,W(-i*n,y_N1)),i,y_N1 );\n    O.xy = sum/sqrt(R.x*R.y);\n    \n    \n    if(iMouse.z>0.)\n    \tO.xy = mix(O.xy,2.+cos(iTime*vec2(3,4)*.1),exp(-dot2((I-iMouse.xy)*.01)));\n    \n    vec2 P = T(iChannel1,I.x,I.y).xy+.1*T(iChannel1,I.x,I.y+1.).xy+.1*T(iChannel1,I.x,I.y-1.).xy+.1*T(iChannel1,I.x+1.,I.y).xy+.1*T(iChannel1,I.x-1.,I.y).xy;\n    P/=1.4;\n    //Parameter space set by I, so simmilar locations have simmilar behavior. If you like one spot you can set\n    //a and b to values closer to what they come out to at that spot. Just like what Karl Sims came up with\n    //to make reaction diffusion images that show all behavior like http://www.karlsims.com/rd-map-crescent.png\n    float a = I.x/R.x*.81+.7;\n    float b = I.y/R.y*.31+.77;\n    \n    //Apply some nonlinearity\n    O.xy = -O.xy*a*.1+P*b+O.yx*P*b-O.xy*O.yx*P*a-O.xy*P.yx*P*b;\n    //Another nonlinearity to clamp values\n    O.xy=.92*sin(1.5*O.xy);\n   // O.xy = clamp(O.xy,vec2(-1),vec2(1));\n    \n}","name":"Buffer D","description":"","type":"buffer"}]}