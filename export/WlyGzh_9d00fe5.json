{"ver":"0.1","info":{"id":"WlyGzh","date":"1578215580","viewed":143,"name":"pink backbuffer fractal","username":"sasha_sortai","description":"having fun with buffers, still can't get the hang of color coordination though :/","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["recursive","backbuffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(texture(iChannel0, fragCoord/iResolution.xy).rgb,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-.5*iResolution.xy)*2./min(iResolution.x,iResolution.y);\n    \n    \n\n    vec3 col = vec3(1);\n    vec2 cent = vec2(cos(iTime*3.),sin(iTime*3.))*.5;\n    if (0.48<length(p) && length(p)<0.52) col = vec3(.1,.9,1);\n    if (abs(dot(p, normalize(cent)))<.5) col = vec3(1,.1,.9);\n    if (distance(p, cent)<.1) col = vec3(.9,1,.1);\n    \n    if (distance(p,vec2(sin(cos(iTime)*1578.+cent.y*123.),cos(cos(iTime)*1578.+cent.x*1000.)))<.07) col=1.-col;\n    if (distance(p,vec2(sin(cos(iTime)*1578.+cent.y*123.),cos(cos(iTime)*1578.+cent.x*1000.)))<.1) col=1.-col;\n    \n    \n    vec2 off = (sign(p)+1.)*.5;\n    vec2 q = fragCoord/iResolution.xy;\n    vec2 q1 = 2.*q-off;\n    \n    /*\n    q1 = (q1-.5)*iResolution.xy*2./min(iResolution.x,iResolution.y);\n    q1 /= p.x*10.; q1 /= dot(q1,q1)+1.; q1*=p.x*10.;\n    q1 = q1*min(iResolution.x,iResolution.y)/(iResolution.xy*2.)+.5;\n    */\n\n    col = mix(min(col,texture(iChannel0,q).rgb), col, .05);\n    col = mix(min(col,texture(iChannel0,q1).rgb), col, .001);\n    \n    \n    col = pow(col, vec3(.7));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}