{"ver":"0.1","info":{"id":"XcfSRS","date":"1705364587","viewed":58,"name":"some tiling patterns","username":"Zokalyx","description":"just learning with the book of shaders.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["animated","pattern","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: zokalyx\n// Title: some tiling patterns\n// Comment: just learning :3\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\nfloat weirdTiling( in float amount, in float length, in float offset, in vec2 uv ) {\n\n    // Quantize the rows\n    uv.y = floor(uv.y * amount);\n    \n    // Extend the range in x too\n    uv.x *= amount;\n    \n    // Translate based on current row\n    uv.x = uv.x - uv.y + offset;\n    \n    // Wrap around\n    uv.x = mod(uv.x, amount);\n    \n    // Paint LENGTH squares\n    float mask = step(0.0, uv.x) * step(uv.x, length);\n    \n    return smoothstep(0.0, 0.25, uv.x) * smoothstep(uv.x, uv.x + 0.25, length);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x / iResolution.y;\n    \n    st *= 10.0;\n    st += 0.5;\n    \n    // Only draw in odd tiles\n    vec3 colorHorizontal = mod(floor(st.y), 2.0) * weirdTiling(10.000, floor(st.y), 2.0 * iTime * floor(st.y), st) * vec3(0.209,0.543,1.000);\n    \n    // Rotate everything 90Â°\n    st = mat2(0, 1, 1, 0) * st;\n    vec3 colorVertical = mod(floor(st.y), 2.0) * weirdTiling(10.000, floor(st.y), 2.0 * iTime * floor(st.y), st) * vec3(0.0, 0.0, 1.0);\n    \n    vec3 color = mix(colorHorizontal, colorVertical, 0.5);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}