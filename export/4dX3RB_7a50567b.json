{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const vec2 Center = vec2(-0.07,-0.09);\nconst float Zoom = 28.0;\nconst int Iterations = 128;\nconst float xoffset_speed = -0.01;\n\nfloat rand(int t)\n{\n\treturn abs(cos(float(t)*123.45));\n}\n\n//complex power\nvec2 cpow(vec2 a, vec2 b)\n{\n\tfloat a2 = dot(a,a);\n       if (a2 == 0.0) { return vec2(0.0, 0.0); }\n\tfloat atn = atan(a.y, a.x);\n\tfloat x = pow(a2, (b.x / 2.0)) * exp(-b.y * atn);\n\tfloat fi = b.x * atn + b.y / 2.0 * log(a2);\n\treturn vec2(x * cos(fi), x * sin(fi));\n}\n\nvec3 color(vec2 c) {\n\tvec2 z = vec2(0.0,0.0);\n\tvec2 power = vec2(2.0,0.0);\n\tfloat offset = 0.3 + 0.3 * sin(iTime/10.0);\n\tfloat speed = 100.0 + 50.0 * cos(iTime/100.0);\n\tc.x += xoffset_speed * cos(iTime/10.0);\n\tvec2 cc = vec2(c.y,c.x);\n\tint i = 0;\n\tbool iterate = true;\n\tfor (int ii = 0; ii < Iterations; ii++) {\n\t\tif(iterate) {\n\t\t\tz = cpow(z, power) + cc;\n\t\t\tfloat add = sin(offset + float(i) * 2.0 * 3.14159265 / speed);\n\t\t\tpower = power + vec2(add,add);\n\t\t\ti = ii;\n\t\t\tif (dot(z,z)> 4.0) iterate = false;\n\t\t}\n\t}\n\tif (i < Iterations-1) {\n\t\t//wave color\n\t\tfloat cr, cg, cb, cmax, cmin;\n\t\titerate = true;\n\t\tfor (int ii = 0; ii < 10; ii++) {\n\t\t\tif(iterate) {\n\t\t\t\tcr = rand(i);\n\t\t\t\tcg = rand(i+1);\n\t\t\t\tcb = rand(i+2);\n\t\t\t\tcmax = max(cr, max(cg, cb));\n\t\t\t\tcmin = min(cr, min(cg, cb));\n\t\t\t\tif (cmin < 0.125 || ((cmax - cmin) < 0.25 && cmin < 0.78)) {\n\t\t\t\t\ti = i + Iterations;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\titerate = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn vec3( cmin, cmin, cmax );\n\t}  else {\n\t\t//sky\n\t\treturn vec3(0.26, 0.59, 0.87);\n\t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 pixelSize = vec2(1.0 / iResolution.x, 1.0 / iResolution.y);\n\tvec2 coord = ( fragCoord.xy * pixelSize ) / Zoom + Center;\n\tvec2 scale = 0.5 * pixelSize / Zoom;\n\tvec2 c = coord.xy + scale* 2.0;\n\t\n\tvec3 col = color(c);\n\t//col = col + color(vec2(c.x + scale.x, c.y));\n\t//col = col + color(vec2(c.x, c.y + scale.y));\n\t//col = col + color(c + scale);\n\tfragColor = vec4(col / 1.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dX3RB","date":"1372715564","viewed":215,"name":"Mandelbrot waves","username":"phtolo","description":"Complex mandelbrot waves animation.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""}}