{"ver":"0.1","info":{"id":"cty3Ww","date":"1684075533","viewed":164,"name":"Sine wave visualizer","username":"B1azA","description":"A sine wave visualizer.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math","sin","sinewave","trigonometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Coordinates from -1 to 1\n    float thickness = iMouse.x / iResolution.x;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x = uv.x * 2.0 - 1.0;\n    \n    // Adds thickness so the wave fits into the window\n    uv.y = uv.y * (2.0 + thickness * 2.0) - (1.0 + thickness);\n\n    vec3 col = vec3(0.0);\n    \n    // Distance \n    float dist = abs(uv.y - sin(uv.x + iTime));\n    float fade = 0.005;\n    \n\n    col = vec3(smoothstep(thickness + fade, thickness, dist));\n        \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}