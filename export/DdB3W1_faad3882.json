{"ver":"0.1","info":{"id":"DdB3W1","date":"1667591622","viewed":52,"name":"test212322","username":"tempdeltavalue","description":"gravity","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 distance2d(vec2 p1, vec2 p2){\n   return vec2(p1[0] - p2[0], p1[1] - p2[1]);\n}\n\nfloat Circle(vec2 uv, vec2 pos) {\n    float circle_pos = length(uv - pos);\n    \n    float radius = 0.2;\n    float circle = smoothstep(radius, radius - 0.2, circle_pos);\n    \n    return circle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n\n\tvec3 col;\n\n\n    // Time varying pixel color\n    float spr = cos(iTime * 5.) * 0.5;\n    \n    vec2 center_pos = vec2(0., spr);\n    float c = Circle(uv, center_pos);\n    col[0] += c;\n    vec2 other_pos = vec2(0.5, 0.);\n    col[0] += Circle(uv, vec2(0.5, 0.));\n    \n    \n    vec2 dist = distance2d(center_pos, other_pos);\n    col[2]=dist[1];\n    \n    float m1 = 40.;\n    \n    float m2 = 1.;\n    \n    float copy_m = m1 * m2;\n \n    float force_x = copy_m / pow(dist[0], 2.);\n    float force_y = copy_m / pow(dist[1], 2.);\n    \n    float a_x = force_x / m2;\n    float a_y = force_y / m2;\n    \n    other_pos[0] += a_x;\n    other_pos[1] += a_y;\n\n\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}