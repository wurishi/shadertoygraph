{"ver":"0.1","info":{"id":"7sGBzW","date":"1657728668","viewed":660,"name":"procedural pseudo-bluenoise","username":"FabriceNeyret2","description":"cheap highpass of white noise using LOD1 - LOD0 (texture or procedural) produces somewhat blueish noise.\n\nPower spectrum shown here: https://www.shadertoy.com/view/7dyfzW\nHistogram shown here: https://www.shadertoy.com/view/7syfRd","likes":19,"published":3,"flags":0,"usePreview":0,"tags":["procedural","random","hash","bluenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// see ready-to-use version in Common\n\n#define hash(p)  H(p) // fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2  U = u + float(iFrame);\n    float m = iResolution.x/2.,\n          v = hash(U);                           // white noise\n    if (int(u) == int(m)) {  O= vec4(1,0,0,1); return; } // red separator\n    if (u.x < m ) { O = vec4(v); return; }       // left: white noise\n    \n    v *= -9.;                                    // high-pass: LOD1 - LOD0\n    for (int k=0; k<9; k++ )\n        v += hash(U+vec2(k%3-1,k/3-1));\n    \n    v = .5+.5*v/9. *2.1;\n // v = v < 0. ? -v : v > 1. ? 2.-v : v ;        // folding values out of [0,1] (better histogram, visually still blue, spectrum less blue)\n // v = fract(v);                                // wrapping values out of [0,1] (no longer blue)\n    O = vec4(v);                                 // draw\n    \n#if 0                                            // show over/under shoot\n    if (O.x>1.) O = vec4(0,1,0,1);\n    else if (O.x<0.) O = vec4(1,0,0,1);\n#endif\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n#define H(p)  fract(sin(mod(dot(p, vec2(12.9898, 78.233)),6.283)) * 43758.5453)\n\n#define blue(p) (  \\\n          (  H(p+vec2(-1,-1)) + H(p+vec2(0,-1)) + H(p+vec2(1,-1))  \\\n           + H(p+vec2(-1, 0)) - 8.* H( p )      + H(p+vec2(1, 0))  \\\n           + H(p+vec2(-1, 1)) + H(p+vec2(0, 1)) + H(p+vec2(1, 1))  \\\n          ) *.5/9. *2.1 +.5 )","name":"Common","description":"","type":"common"}]}