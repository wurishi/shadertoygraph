{"ver":"0.1","info":{"id":"4ljfRD","date":"1514864187","viewed":8534,"name":"Draw Line","username":"Loeizd","description":"testing an idea for draw line function","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["line","draw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265\n\nfloat drawLine (vec2 p1, vec2 p2, vec2 uv, float a)\n{\n    float r = 0.;\n    float one_px = 1. / iResolution.x; //not really one px\n    \n    // get dist between points\n    float d = distance(p1, p2);\n    \n    // get dist between current pixel and p1\n    float duv = distance(p1, uv);\n\n    //if point is on line, according to dist, it should match current uv \n    r = 1.-floor(1.-(a*one_px)+distance (mix(p1, p2, clamp(duv/d, 0., 1.)),  uv));\n        \n    return r;\n}\n\nfloat drawCircle(vec2 p, float d, vec2 uv)\n{\n    return (distance(p, uv) <= d) ? 1. : 0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float t = iTime*1.5; //Pro Tipâ„¢: multipluy time to go faster!\n    \n    //in uv space\n    vec2 p1 = vec2(0.5 + sin(t)*.2, 0.25 + cos(t+pi)*.1);\n    vec2 p2 = vec2(0.5 + sin(t+pi)*.2, 0.25 + cos(t)*.1);\n    vec2 p3 = vec2(0.5 + sin(t+pi/2.)*.2, 0.25 + cos(t-.5*pi)*.1);\n    vec2 p4 = vec2(0.5 + sin(t-pi/2.)*.2, 0.25 + cos(t+.5*pi)*.1);\n    vec2 p5 = vec2(0.5 + sin(t)*.2, 0.75 + cos(t+pi)*.1);\n    vec2 p6 = vec2(0.5 + sin(t+pi)*.2, 0.75 + cos(t)*.1);\n    vec2 p7 = vec2(0.5 + sin(t+pi/2.)*.2, 0.75 + cos(t-.5*pi)*.1);\n    vec2 p8 = vec2(0.5 + sin(t-pi/2.)*.2, 0.75 + cos(t+.5*pi)*.1);\n    \n    \n    float lines = drawLine(p1, p5, uv, 1.)\n        \t\t  + drawLine(p2, p6, uv, 1.)\n        \t\t  + drawLine(p1, p3, uv, 1.)\n        \t\t  + drawLine(p3, p2, uv, 1.)\n        \t\t  + drawLine(p1, p4, uv, 1.)\n        \t\t  + drawLine(p4, p2, uv, 1.)\n        \t\t  + drawLine(p5, p7, uv, 1.)\n        \t\t  + drawLine(p7, p6, uv, 1.)\n        \t\t  + drawLine(p6, p8, uv, 1.)\n        \t\t  + drawLine(p8, p5, uv, 1.)\n        \t\t  + drawLine(p3, p7, uv, 1.)\n        \t\t  + drawLine(p4, p8, uv, 1.);\n    \n    float d = 0.003;\n    float dots = drawCircle(p1, d, uv)\n\t\t\t\t + drawCircle(p2, d, uv)\n        \t\t + drawCircle(p3, d, uv)\n\t\t\t\t + drawCircle(p4, d, uv)\n        \t\t + drawCircle(p5, d, uv)\n\t\t\t\t + drawCircle(p6, d, uv)\n        \t\t + drawCircle(p7, d, uv)\n\t\t\t\t + drawCircle(p8, d, uv);\n    \n\tfragColor = vec4(lines*.6-dots, dots, dots, 1.);\n}","name":"Image","description":"","type":"image"}]}