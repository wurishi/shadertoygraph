{"ver":"0.1","info":{"id":"ftS3WG","date":"1624555516","viewed":631,"name":"20210625_CLUB-CAVE-06","username":"FMS_Cat","description":"Originally written in Bonzomatic, in 45 minutes. Slightly modified afterward\n\nhttps://twitter.com/CLUBCAVE_/status/1406826707324051457?s=20","likes":36,"published":1,"flags":0,"usePreview":1,"tags":["3d","pathtracer","livecoding","quadtree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// CAVE 06\n// 2021-06-24\n//\n// It's a pleasant rainy day.\n//\n// DJ: LateFair\n//\n// ENTER THE CAVE\n\n#define lofi(i,j) (floor((i)/(j))*(j))\n#define fs(i) (fract(sin((i)*114.514)*1919.810))\n\nconst float PI=3.14159265;\nconst float EPSILON=1E-3;\nconst float TAU=PI*2.;\nconst float FAR=1E2;\n\nfloat time;\nfloat seed;\n\nfloat random(){\n  seed++;\n  return fs(seed);\n}\n\nmat3 orthBas(vec3 z){\n  z=normalize(z);\n  vec3 up=abs(z.y)>.99?vec3(0,0,1):vec3(0,1,0);\n  vec3 x=normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\nvec3 randomSphere(){\n  float phi=TAU*random();\n  float theta=acos(2.0*random()-1.);\n  return vec3(cos(phi)*sin(theta),sin(phi)*sin(theta),cos(theta));\n}\n\nvec3 randomLambert(vec3 n){\n  float phi=TAU*random();\n  float cosTheta=sqrt(random());\n  float sinTheta=sqrt(1.0-cosTheta*cosTheta);\n  return orthBas(n)*vec3(cos(phi)*sinTheta,sin(phi)*sinTheta,cosTheta);\n}\n\nfloat quadTree(vec2 p){\n  float mul=0.5;\n  for(int i=0;i<4;i++){\n    vec2 pt=lofi(p,mul);\n    float s=dot(vec2(11.2,22.3),pt);\n    s=fs(s)-0.1;\n    if(s>mul){\n      return mul;\n    }\n    mul*=0.5;\n  }\n  return mul;\n}\n\nfloat isectPlane(vec3 ro,vec3 rd,vec3 n){\n  float d=dot(ro,n)/dot(-rd,n);\n  return d<0.?FAR:d;\n}\n\nfloat drawPattern(vec2 p){\n  float hcell=lofi(p.x,0.5);\n  float phase=time+hcell;\n  p.y+=(cos(phase)+phase)/PI*cos(hcell*PI*2.0);\n  float q=quadTree(p);\n  vec2 cell=lofi(p,q);\n\n  p/=q;\n  p=fract(p);\n  p-=0.5;\n  p/=1.0-0.01/q;\n  \n  float r1=fs(dot(cell,vec2(12.3,44.5)));\n  float r2=fs(dot(cell,vec2(33.3,55.5)));\n\n  float sub=0.002/q;\n  \n  float ptn=1.0;\n  \n  if(r1<.3){\n    ptn*=smoothstep(0.5,0.5-sub,length(p));\n    ptn*=smoothstep(0.5-3.*sub,0.5-2.*sub,length(p));\n  }else if(r1<.6){\n    p=abs(p);\n    ptn*=smoothstep(0.5,0.5-sub,max(p.x,p.y));\n    ptn*=smoothstep(0.5-3.*sub,0.5-2.*sub,max(p.x,p.y));\n  }else if(r1<.8){\n    p=abs(p);\n    ptn*=smoothstep(0.5,0.5-sub,max(p.x,p.y));\n    ptn*=smoothstep(2.1*sub,1.4*sub,abs(p.x-p.y));\n  }else{\n    ptn*=0.0;\n  }\n  \n  float haha=0.5+0.5*sin(cell.x/4.0-2.0*time+4.0*r2);\n  ptn*=0.01+0.99*pow(haha,3.);\n  \n  return ptn;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=fragCoord.xy/iResolution.xy;\n  vec2 p=uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n  \n  time=iTime;\n  \n  seed=texture(iChannel0,8.0*uv).x;\n  seed+=fract(time);\n  \n  vec3 col=vec3(0);\n  vec3 colRem=vec3(1.);\n  vec3 ro0=vec3(0,1,2);\n  \n  vec3 rd0=orthBas(vec3(0.05*sin(time)+0.5*sin(time/7.),0.05*cos(time),1.))*normalize(vec3(p,-1));\n  \n  for(int iS=0;iS<100;iS++){\n    colRem=vec3(1.);\n    vec3 ro=ro0;\n    vec3 rd=rd0;\n    rd.xy+=(vec2(random(),random())-.5)/iResolution.y*2.0;\n    vec3 fp=ro+mix(2.0,4.0,smoothstep(-0.5,0.5,sin(time/1.2)))*rd;\n    ro.xy+=0.05*randomSphere().xy;\n    rd=normalize(fp-ro);\n    \n    for(int iR=0;iR<4;iR++){\n      float dWall=isectPlane(ro,rd,vec3(0,0,1));\n      float dFloor=isectPlane(ro,rd,vec3(0,1,0));\n      float d=min(dWall,dFloor);\n      \n      if(d<FAR){\n        if(dWall<dFloor){\n          vec3 n=vec3(0,0,1);\n          ro=ro+rd*d+n*EPSILON;\n          rd=randomLambert(n);\n          float pattern=drawPattern(ro.xy);\n          col+=colRem*10.0*pattern;\n        }else{\n          vec3 n=vec3(0,1,0);\n          ro=ro+rd*d+n*EPSILON;\n          if(random()<0.04){\n            rd=reflect(rd,normalize(n+0.05*random()*randomSphere()));\n          }else{\n            rd=randomLambert(n);\n          }\n        }\n      }\n    }\n  }\n  \n  col/=100.;\n  col=pow(col,vec3(.4545));\n  col*=1.0-0.2*length(p);\n  col=vec3(\n    smoothstep(0.2,0.8,col.x),\n    smoothstep(0.0,1.0,col.y),\n    smoothstep(-0.2,1.2,col.z)\n  );\n\n  fragColor = vec4(col,1);\n}\n","name":"Image","description":"","type":"image"}]}