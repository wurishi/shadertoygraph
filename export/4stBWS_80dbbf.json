{"ver":"0.1","info":{"id":"4stBWS","date":"1564460342","viewed":179,"name":"radarr","username":"lebek","description":"....","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["polarradar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 pos = uv - vec2(0.5, 0.5);\n    \n    float r = length(pos);\n    //float a = (atan(pos.y, pos.x) + PI)/(2.0*PI);\n    \n    float t = atan(pos.y, pos.x) - iTime*2.5;\n    float a = (atan(sin(t), cos(t)) + PI)/(2.0*PI);\n    \n    // Output to screen\n    //a = sin(a*2.0+iTime*3.0)*0.5+0.5;\n    float ta = 0.5;\n    float v = smoothstep(ta-0.05,ta+0.05,a) * smoothstep(ta+0.05,ta-0.05,a);\n    vec3 col = vec3(0, v, 0);\n    float blink = pow(sin(iTime*1.5)*0.5+0.5, 0.8);\n    //col = vec3(0.0, pow(a, 20.0/r)*(0.5+.5*blink), 0.0);\n    col = vec3(0.0, pow(a, 8.0*(.2+blink))*(sin(r*500.0)*.5+.5), 0.0);\n    col = col*pow(r, 0.4);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}