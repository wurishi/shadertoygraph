{"ver":"0.1","info":{"id":"ctB3Wy","date":"1673819230","viewed":129,"name":"Sine shade","username":"phatcat","description":"Sine wave shade(r) for the #genuary15 prompt","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["wave","sinus","shade","genuary","genuary2023","genuary15"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592635\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Scale the coordinates\n    uv *= 2.4;\n    uv -= vec2(1.2);\n\n    // Create the sine wave \n    float y = 0.5*sin(-0.2+2.0*(uv.x-0.2*iTime) * PI);\n\n    // Add a shade to the wave \n    float c = smoothstep(y, uv.y, uv.y+ max(0.03*sin(0.6*uv.x * PI + PI/2.0), 0.0));\n\n    // Cap end parts (can this be clamped?)\n    if( uv.x < -1.0 || uv.x > 1.0 ) {\n        c = 1.0;\n    }\n        \n    // Output color\n    fragColor = vec4(vec3(c), 1.0);\n}","name":"Image","description":"","type":"image"}]}