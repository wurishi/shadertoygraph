{"ver":"0.1","info":{"id":"ms2BW1","date":"1689686125","viewed":61,"name":"improved neon plasma","username":"satorielectronics","description":"ripped this all off http://www.bidouille.org/prog/plasma","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["plasma"],"hasliked":0,"parentid":"mtdSW4","parentname":"enter the mirror"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = acos(-1.);\n\n\nvoid mainImage( out vec4 O, in vec2 F )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 R = iResolution.xy,\n         u = (F+F-R) / R.y;\n         \n    float l = length(u);\n    float v1 = sin(u.x * 10.0 + iTime);\n    float v2 = sin(5.0 *( u.x * sin(iTime/2.0)+u.y * cos(iTime/3.0))+iTime);\n    vec2  c = u + sin(iTime / vec2(5,3))*.75;\n    float v3 = sin( 5.*length(c)+iTime);\n   \n    float vf = v1 + v2 + v3;\n    \n    //float r  = cos(vf*pi),\n    //      g  = sin(vf*pi + 2.*pi),\n    //      b  = cos(vf*pi + 4.0*pi/3.0);\n          \n    vec3 rgb = cos(vf*pi + vec3(cos(vf*pi), sin(vf*pi + 2.*pi), cos(vf*pi + 4.0*pi/3.0)));     \n    O = vf + pow(.16 /  ( vf = fract( vf * 6.5) - .55) / exp(l), 1.2)//pow\n    //palette\n    * vec4(rgb, 1.0)* 1.7; //* (1. + cos(6. * ( l + (i + iTime)*.4 + vec4(.26,.4,.56,0) )));\n\n        \n}\n","name":"Image","description":"","type":"image"}]}