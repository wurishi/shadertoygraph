{"ver":"0.1","info":{"id":"ds3SDl","date":"1680551892","viewed":98,"name":"Mirror Tile+Scroll on X and Y","username":"conc2304","description":"mirror tile and scroll an image so that it infinitely and seamlessly tiles and repeats on the x and y axis\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mirror","tile","infinitescroll"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Calculate the scroll amounts\n    float scrollX = iTime * 0.05;\n    float scrollY = iTime * 0.1;\n    \n    // Calculate the x and y coordinates with infinite tiling and scrolling\n    float x = mod(uv.x + scrollX, 2.0);\n    if (x > 1.0) {\n        x = 2.0 - x;\n    }\n    float y = mod(uv.y + scrollY, 2.0);\n    if (y > 1.0) {\n        y = 2.0 - y;\n    }\n    \n    // Sample the texture at the transformed UV coordinates\n    fragColor = texture(iChannel0, vec2(x, y));\n}","name":"Image","description":"","type":"image"}]}