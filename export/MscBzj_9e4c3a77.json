{"ver":"0.1","info":{"id":"MscBzj","date":"1525882974","viewed":190,"name":"ripplesBlurBuff","username":"gilesruscoe","description":"ripples test","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["ripples"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    const vec2 size = vec2(1.0,0.0);\n    const ivec3 off = ivec3(-1,0,1);\n\n    float s11 = texture(iChannel0, uv).x;\n    float s01 = textureOffset(iChannel0, uv, off.xy).x;\n    float s21 = textureOffset(iChannel0, uv, off.zy).x;\n    float s10 = textureOffset(iChannel0, uv, off.yx).x;\n    float s12 = textureOffset(iChannel0, uv, off.yz).x;\n    \n    float rippleFreq = 0.4;\n    float t = iTime * 3.0;\n    s11 = sin(t - s11 * rippleFreq);\n    s01 = sin(t - s01 * rippleFreq);\n    s21 = sin(t - s21 * rippleFreq);\n    s10 = sin(t - s10 * rippleFreq);\n    s12 = sin(t - s12 * rippleFreq);\n    \n    \n    vec3 va = normalize(vec3(size.xy,s21-s01));\n    vec3 vb = normalize(vec3(size.yx,s12-s10));\n    vec4 bump = vec4( cross(va,vb), s11 );\n    \n    vec3 tex = texture(iChannel1, uv * 3.0 + bump.xy * 0.3).xxx;\n    vec3 refl = texture(iChannel2, bump.xyz).xyz;\n    vec3 lightDir = normalize(vec3( 0.5, 0.8, 1.0));\n    fragColor.xyz = tex + refl;\n    fragColor *= vec4(dot(bump.xyz, lightDir));\n    //fragColor = vec4(bump * 0.5 + 0.5);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 blur(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * direction * 2.5;\n  vec2 off2 = vec2(3.2307692308) * direction * 2.5;\n  color += texture(image, uv) * 0.2270270270;\n  color += texture(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    vec4 prevBlurred = blur(iChannel0, uv, iResolution.xy, vec2(0.0, 1.0));\n    prevBlurred += blur(iChannel0, uv, iResolution.xy, vec2(1.0, 0.0));\n    prevBlurred *= 0.495;\n\n    float ar = iResolution.y / iResolution.x;\n    uv = uv * 2.0 - 1.0;\n    uv.y *= ar;\n\t\n    \n    vec2 pos = vec2(sin(iTime) * sin(iTime * 1.523 + 3.12312), cos(iTime) + cos(iTime * 0.87 + 7.21));\n    pos *= vec2(0.8, 0.4);\n    float luv = length(uv - pos);\n    float dot = 1.0-smoothstep(luv, luv + 0.025, 0.075);\n    dot *= 1.6;\n    fragColor = vec4(dot + prevBlurred);\n}","name":"Buf A","description":"","type":"buffer"}]}