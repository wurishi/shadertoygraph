{"ver":"0.1","info":{"id":"MtyGRt","date":"1476119073","viewed":174,"name":"Dancing Julia Sets","username":"decrooks","description":"A Julia set evolves as its parameter moves around the complex plane. The complex parameter orbits around a point that orbits around the origin. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 complexSquare(vec2 z){ \n   return vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y); \n}\n\nvec2 complexParameter() {\n    float fastTime = 3.0*iTime;\n    float slowTime = 0.2*iTime;\n\treturn  vec2(cos(slowTime),sin(slowTime)) + 0.25*vec2(cos(fastTime),sin(fastTime));\n}\n\nfloat julia(vec2 z){\n \n  vec2 c = complexParameter();\n                                                                          \n  int n=1;\n  const int   maxitn = 100;                              \n  \n    for( int i = 0;i<maxitn;i++){\n        z = complexSquare(z) + c;\n        \n        if(length(z) >= 2.0) {\n            return float(i)/float(maxitn);\n        }\n    }\n   \n   return 0.0;\n}\n\n                                   \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspectRatio = iResolution.x/iResolution.y;\n    vec2 z = 2.0*uv - vec2(1.0);\n    z.x = z.x*aspectRatio;\n    \n    float t = julia(z);\n\n    t = pow(t,0.8);\n    \n\tfragColor = vec4(vec3(t),1.0);\n}\n                                                                                       ","name":"Image","description":"","type":"image"}]}