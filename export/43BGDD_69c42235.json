{"ver":"0.1","info":{"id":"43BGDD","date":"1708441070","viewed":48,"name":"DJ.Studio basic example","username":"noahfk","description":"dj studio basic demo ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Background color alternates between black and white\n    vec3 backgroundColor = mod(floor(fragCoord.x / 100.0) + floor(fragCoord.y / 100.0), 2.0) > 0.0 ? vec3(1.0) : vec3(0.0);\n    \n    // Center coordinates\n    vec2 center = iResolution.xy / 2.0;\n    \n    // Calculate normalized coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Calculate distance from the center\n    float dist = length(uv - 0.5);\n    \n    // Rotate the coordinates\n    vec2 rotatedUV = vec2(cos(iTime) * (uv.x - 0.5) + sin(iTime) * (uv.y - 0.5) + 0.5,\n                           -sin(iTime) * (uv.x - 0.5) + cos(iTime) * (uv.y - 0.5) + 0.5);\n    \n    // Create the square\n    float size = 0.3;\n    float square = max(abs(rotatedUV.x - 0.5), abs(rotatedUV.y - 0.5));\n    float squareBorder = 0.01;\n    float squareSmooth = smoothstep(size, size + squareBorder, square);\n    \n    // Square color\n    vec3 squareColor = vec3(0.0, 0.0, 1.0); // Blue\n    \n    // Mix square color and background color\n    vec3 finalColor = mix(backgroundColor, squareColor, squareSmooth);\n    \n    // Output final color\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}