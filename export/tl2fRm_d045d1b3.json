{"ver":"0.1","info":{"id":"tl2fRm","date":"1598586319","viewed":169,"name":"Germany Flag 6031055321","username":"enwee1998","description":"Germany Flag\n2110479 Computer Graphics Exercise\n6031055321 Weerayut Thinchamlong","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n A very lazy and quick doodle of the Indian flag on this year's Indian Republic Day.\n Not the most efficient code, but I think it still looks cool. \n*/\n\n#define PI 3.1415926535\n\n#define ROT(x) mat2(cos(x), -sin(x), sin(x), cos(x))\n\n#define ORANGE vec3(255., 154., 48.) / 255.\n#define GREEN vec3(9., 137, 1.) / 255.\n#define NAVY_BLUE vec3(0., 0., 137.) / 255.\n#define BLACK vec3(0., 0., 0.) / 255.\n#define RED vec3(204., 43., 29.) / 255.\n#define YELLOW vec3(248., 207., 70.) / 255.\n\n#define RADIUS .7\n#define HALF_RADIUS RADIUS * .5\n\n// Hash by Dave_Hoskins\nfloat hash(vec2 p)\n{\n    uvec2 q = uvec2(ivec2(p)) * uvec2(1597334673U, 3812015801U);\n    uint n = (q.x ^ q.y) * 1597334673U;\n    return float(n) / float(0xffffffffU);\n}\n\n// iq's 2d sdf for iscosceles triangles (https://www.shadertoy.com/view/MldcD7)\nfloat isoscelesTriangle(in vec2 q, in vec2 p)\n{\n    p.y -= .5;\n    p.x = abs(p.x);\n    \n    vec2 a = p - q * clamp(dot(p, q) / dot(q, q), 0., 1.);\n    vec2 b = p - q * vec2(clamp(p.x / q.x, 0., 1.), 1.);\n    \n    float s = -sign(q.y);\n\n    vec2 d = min(vec2(dot(a, a), s * (p.x * q.y - p.y * q.x)),\n                  vec2(dot(b, b), s * (p.y - q.y)));\n\n    return -sqrt(d.x) * sign(d.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec2 st = fragCoord / iResolution.xy;\n    float w = sin((uv.x + uv.y - iTime * .75 + sin(1.5 * uv.x + 4.5 * uv.y) * PI * .3)\n                  * PI * .6); // fake waviness factor\n    \n    uv *= 1. + (.036 - .036 * w);\n    vec3 col = vec3(0.);\n    \n    // flag colors\n    col += RED;\n    col = mix(col, BLACK, smoothstep(.35, .36, uv.y));\n    col = mix(col, RED, smoothstep(.35, -.35, uv.y));\n    col = mix(col, YELLOW, smoothstep(-.35, -.36, uv.y));\n    col += w * .225;\n    \n    float v = 16. * st.x * (1. - st.x) * st.y * (1. - st.y); // vignette\n    col *= 1. - .6 * exp2(-1.75 * v);\n    col = clamp(col - hash(fragCoord) * .004, 0., 1.);\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}