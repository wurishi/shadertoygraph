{"ver":"0.1","info":{"id":"ssySDh","date":"1634549590","viewed":116,"name":"Mean filters","username":"Envy24","description":"T - harmonic,\nM - arithmetic,\nB - geometric","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","filter","harmonic","geometric","arithmetic","reduction","mean"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define CH iChannel0\n\nvec4 arithmeticMeanFilter(in vec2 P, float w, float h)\n{\n   vec2 invR = 1.0 / R.xy;\n   vec4 sum = vec4(1.0);\n\n   for (float y = -h*0.5; y <h*0.5; y += 1.0)\n   {\n       for (float x = -w*0.5; x <w*0.5; x += 1.0)\n       {\n            sum += texture(CH, (P + vec2(x, y)) * invR);\n       }\n   }\n   \n   return vec4(sum.xyz / (w*h), 1.0);\n}\n\nvec4 geometricMeanFilter(in vec2 P, float w, float h)\n{\n   vec2 invR = 1.0 / R.xy;\n   vec4 product = vec4(1.0);\n\n   for (float y = -h*0.5; y <h*0.5; y += 1.0)\n   {\n       for (float x = -w*0.5; x <w*0.5; x += 1.0)\n       {\n            product *= texture(CH, (P + vec2(x, y)) * invR);\n       }\n   }\n   \n   return vec4(\n        pow(product.x, 1.0 / float(w*h)),\n        pow(product.y, 1.0 / float(w*h)),\n        pow(product.z, 1.0 / float(w*h)),\n        1.0);\n}\n\nvec4 harmonicMeanFilter(in vec2 P, float w, float h)\n{\n   vec2 invR = 1.0 / R.xy;\n   vec4 sum = vec4(1.0);\n\n   for (float y = -h*0.5; y <h*0.5; y += 1.0)\n   {\n       for (float x = -w*0.5; x <w*0.5; x += 1.0)\n       {\n            sum += 1.0 / texture(CH, (P + vec2(x, y)) * invR);\n       }\n   }\n   \n   return vec4((w*h) / sum.xyz, 1.0);\n}\n\nvoid mainImage( out vec4 O, in vec2 P )\n{\n    float w = 7.0;\n    float h = 7.0;\n\n    // Output to screen\n    if (P.x < R.x * 0.33) { O = texture(CH, P/R.xy); }\n    else\n    {\n        if (P.y < R.y * 0.33) { O = geometricMeanFilter(P, w, h); }\n        else if (P.y > R.y * 0.66) { O = arithmeticMeanFilter(P, w, h); }\n        else { O = harmonicMeanFilter(P, w, h); }\n    }   \n}","name":"Image","description":"","type":"image"}]}