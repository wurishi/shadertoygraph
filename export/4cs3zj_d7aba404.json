{"ver":"0.1","info":{"id":"4cs3zj","date":"1703268335","viewed":43,"name":"CyberStorm Aurora","username":"brunorealities","description":"A neon spiral pattern that makes into an energy tunnel which feeds into a cosmic entity. This is a fragment shader uses polar coordinates to distort the pattern","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["spiral","pattern","scifi","neon","futuristic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n\nvec3 pal(in float t) {\n    vec3 a =  vec3(0.184,0.776,0.737);// Updated color 1\n    vec3 b = vec3(0.702,0.702,0.702); // Updated color 2\n    vec3 c = vec3(0.788,0.188,0.910); // Updated color 3\n    vec3 d = vec3(0.510,0.510,0.510);  // Updated color 4\n  \n \n    // Return the color by applying a cosine function to create smooth transitions between colors\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nfloat pattern(vec2 uv, float l)\n{\n\n    vec2 st = vec2(atan(uv.x, uv.y), vec2(length(uv*.8)));\n    \n     float k_sine = 0.01 * sin(.1 * iTime * .2);\n    float sine = k_sine * sin(50.0 * (pow(st.y, 0.9) - 0.8 * iTime*0.05));\n    \n    uv = vec2(st.x/TWO_PI + sine + .5 + iTime * .1 + st.y, st.y);\n    \n    float x =(l * uv.x);\n    float m = pow(min(fract(x - sine), fract(1. - x)), 1. - sine );\n    float c = smoothstep(0.2,.5, m*.5 + .3 - uv.y );\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n     vec2 uv0 = uv;\n    float t = iTime;\n    vec3 col = vec3(0.0);\n    float f;\n    for(float i = 0.; i < 6.; i++)\n    {\n     \n     float d = length(uv*pow(.1 * t * 0.01,i/2.)) + exp(length(uv0));\n     d = sin(d * .8);\n     \n      float f0 = pattern(uv, 4.);\n      f = pattern(fract(uv * i * d)-.5, 8.);\n      \n       d = max(cos(d * 8. + t)/8.,sin(d * 2. + t * i * .2))/2.;\n    d = abs(d);\n    d= pow(0.1/d,.5);\n      \n    col += vec3(pal(max(f, f0) * d));\n    \n    }\n    \n    fragColor = vec4(col, 1.);\n    \n   // fragColor = vec4(f);\n}","name":"Image","description":"","type":"image"}]}