{"ver":"0.1","info":{"id":"Xsy3RV","date":"1455278373","viewed":497,"name":"I want to learn shaders","username":"Krumons","description":"I am experimenting with basic things","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 calculateCenter(){\n    float iTime2 = iTime+500.0;\n        return vec2((sin(iTime2+cos(iTime2*3.2))+1.0)/2.0,(sin((iTime2+sin(iTime2*3.2))*3.0)+1.0)/2.0);\n}\n\nfloat rand(vec2 co){\n    float iTime2 = iTime+500.0;\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rand2(vec2 co){\n    float iTime2 = iTime+500.0;\n    return fract(sin(dot(co.xy ,vec2(0.06*rand(vec2(iTime2/100.0,iTime2/200.0)),0.32*iTime2/50.0))) * (sin(iTime2/2.0)+1.0)*20.0);\n}\n\nfloat rand3(vec2 co){\n    float iTime2 = iTime+500.0;\n    return fract(cos(dot(co.xy ,vec2(0.453,0.12*iTime2/255.0))) * (sin(iTime2/8.0)+1.0)*23.5);\n}\n\nfloat rand4(vec2 co){\n    float iTime2 = iTime+500.0;\n    return fract(sin(dot(co.xy ,vec2(0.9858*iTime2/20.0,0.661*iTime2/6.0))) * (sin(iTime2/3.0)+1.0)*1.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    float iTime2 = iTime+500.0;\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n    vec4 color = vec4(0,0,0,1.0);\n    float speed = 1.0;\n    float size = 0.2;\n\t\n    vec2 position = calculateCenter();\n    \n    fragColor = color;\n\t\n    color = vec4(rand2(uv.xy),rand3(uv.xy),rand4(uv.xy),1);\n    \n    if (((uv.x > position.x - (size+sin(iTime2/0.7)/10.0 +sin(iTime2/0.3)/9.0)) && (uv.x < position.x + (size+sin(sin(iTime2)/0.3)/10.0)+sin(iTime2/0.3)/9.0)) && ((uv.y > position.y - (size+sin(iTime2/0.98)/12.0)*2.5) && (uv.y < position.y + (size+cos(iTime2/0.8)/10.0)*1.3))){\n    \tcolor = vec4(rand2(uv.xy),rand2(uv.xy),rand3(uv.xy),1);\n    }\n    \n    \n    fragColor = color;\n\n\n}\n\n","name":"Image","description":"","type":"image"}]}