{"ver":"0.1","info":{"id":"MsGSR3","date":"1465605664","viewed":1042,"name":"Correct color blending","username":"cubby208","description":"As I understand it light works on an exponential scale. Thus just using the mix function is not physically sound. As I understand it the two strips on the top blend the two colors correctly, while the bottom two are incorrect.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["light","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 correct(vec4 col1, vec4 col2, float p)\n{\n \tvec4 temp = col1 * col1;\n    vec4 temp2 = col2 * col2;\n    return sqrt(mix(temp, temp2, p));\n}\nvec4 incorrect(vec4 col1, vec4 col2, float p)\n{\n\treturn mix(col1, col2, p);\n}\nvec4 strip1Incorrect(float x)\n{\n    vec4 col1 = vec4(1.0, 0.0, 0.0, 1.0);\n    vec4 col2 = vec4(0.0, 1.0, 0.0, 1.0);\n    \n    return incorrect(col1, col2, x);\n}\nvec4 strip1correct(float x)\n{\n    vec4 col1 = vec4(1.0, 0.0, 0.0, 1.0);\n    vec4 col2 = vec4(0.0, 1.0, 0.0, 1.0);\n    return correct(col1, col2, x);\n}\nvec4 strip2Incorrect(float x)\n{\n    vec4 col2 = vec4(0.0, 0.0, 1.0, 1.0);\n    vec4 col1 = vec4(0.0, 1.0, 0.0, 1.0);\n    \n    return incorrect(col1, col2, x);\n}\nvec4 strip2correct(float x)\n{\n    vec4 col2 = vec4(0.0, 0.0, 1.0, 1.0);\n    vec4 col1 = vec4(0.0, 1.0, 0.0, 1.0);\n    return correct(col1, col2, x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    if (uv.y < 1.0 / 4.0)\n    {\n\t\tfragColor = strip1Incorrect(uv.x);\n    }\n    else if (uv.y < 0.5)\n    {\n\t\tfragColor = strip2Incorrect(uv.x);\n    }\n    else if (uv.y < 0.75)\n    {\n        fragColor = strip1correct(uv.x);\n    }\n    else\n    {\n\t\tfragColor = strip2correct(uv.x);\n    }\n    \n    if (abs(uv.y - 0.5) < 0.01)\n    {\n     \tfragColor = vec4(0.0);   \n    }\n}\n\n","name":"Image","description":"","type":"image"}]}