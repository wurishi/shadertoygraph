{"ver":"0.1","info":{"id":"cd2BR3","date":"1702570003","viewed":88,"name":"Tyler macht mandelbrot","username":"Falafel","description":"mandelbrot, coole stelle","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 misiurewicz_point = vec2(-0.34852764148007233, -0.6065922085831237) * iTime;\n    vec2 uv = ((fragCoord * 2.0 - iResolution.xy) / iResolution.y / (pow(0.1*iTime, 8.)) + misiurewicz_point / iTime);\n\n    vec2 z = uv;\n    \n    vec3 finalColor = vec3(0.,0.,0.);\n    \n    float iter = 0.;\n    for (int i=0; i<1500; i++) {\n        float len = length(z);\n        iter += .01;\n        // (a + ib) (c + id) = (ac - bd) + i(ad + bc)\n        z = vec2( uv.x + z.x*z.x - z.y*z.y, uv.y + z.x*z.y + z.x*z.y);\n        if (len > 2048.) {\n            finalColor = palette(iter);\n            break;\n        }\n        if (len < .01) {\n            finalColor = palette(iter);\n            break;\n        }\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}