{"ver":"0.1","info":{"id":"wt3GRj","date":"1576834957","viewed":179,"name":"Find Smile","username":"lzjseed","description":"Find Smile","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["cartoon","smile","funny"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat line(vec2 p,vec2 a,vec2 b,float r,float k)\n{\n    vec2 pa = p - a;\n    vec2 ba = b - a;\n    \n    float lba = length(ba);\n    vec2  nba = normalize(ba);\n    \n    float t = dot(pa,nba);\n   \n    float tt = t / lba * 2.0 - 1.0;\n\n    tt = cos(tt * 3.1415926 * k);\n\n    vec2 projd = a + t * nba;\n\n    vec2 hd = normalize(p - projd);\n\n    vec2 npa = normalize(pa);\n\n    float cro = sign(nba.x * npa.y - nba.y * npa.x);\n\n    vec2 curp = projd - hd * tt * r*cro;\n\n    float h = length(curp - p);\n\n    return ((t >= 0.0 && t <= lba)) ? smoothstep(r - 4./iResolution.y,r , h) : 1.0;\n}\n\nvoid calcAnchorInfo(vec2 p,vec2 a,float r,float b,float t,out vec2 c,out vec2 d,out float fb,out float h)\n{\n\tvec2 pa = p - a;\n    vec2 up = normalize(vec2(0.0,1.0));\n    vec2 right = normalize(vec2(1.0,0.0));\n\n    if(abs(t) < 1.1e-3)\n    {\n        d = a - up * b,\n    \tc = a + up * b;\n    \n        h = abs(pa.x);\n        float l = abs(pa.y);\n\n        fb = l - b;\n    }\n    else\n    {\n        t = clamp(t,-3.1415 / 2.0,3.1415 / 2.0);\n        vec2 up0 = vec2(sin(t),cos(t));\n        right = t >= 0.0 ? right : -right;\n        t = abs(t);\n\n        float e = b * sin(t) / t;\n        d = a - up * b;\n        c = d + up0 * 2.0 * e;\n        vec2 m = d + up0 * e;\n        vec2 pm = p - m;\n\n        vec2 s0 = d + right * (b / t);\n\n        vec2 ps0 = p - s0;\n        \n        ps0 = ps0 - 2.0 * max(dot(ps0,up0),0.0) * up0;\n        \n        float lps0 = length(ps0);\n\n        h = abs(lps0 - (b / t));\n        fb = -ps0.y;\n    }\n}\n\nfloat[] offset1 = float[](0.0,0.01,-0.01,0.03,-0.03);\nfloat[] offset2 = float[](0.0,0.05,-0.05,0.07,-0.07);\nfloat[] offset3 = float[](0.06,0.04,0.04,0.03,0.03);\nfloat[] kt = float[](3.3,2.4,2.0,3.5,4.2);\n\nfloat hair(vec2 p,vec2 c,vec2 d,float r,mat2 rot,int k)\n{\n    float t1 = 1.0;\n    \n    \n    for(int i = 0;i < 5;i ++)\n    {\n        if(i >= k) break;\n        vec2 o1 = rot * vec2(offset1[i],r) + c;\n    \tvec2 o2 = rot * vec2(offset2[i],r + offset3[i]) + c;\n    \n    \tt1 *= line(p,o1,o2,0.005,kt[i]);\n    }\n    \n    return t1;\n}\n\nfloat smileface(vec2 p,vec2 c,vec2 d,float r,float t,float size,float k)\n{\n    float oldt = clamp(t,-3.1415 / 2.0,3.1415 / 2.0);\n    float h = -0.07;\n    float ml = 0.01;\n    float t2 = oldt * 2.0;\n    float cs = cos(t2);\n    float ss = sin(t2);\n    mat2 rot = mat2(cs,-ss,ss,cs);\n\n    vec2 reye = rot * vec2(r * 0.5,0.0) + c;\n    vec2 leye = rot * vec2(-r * 0.5,0.0) + c;\n\n    vec2 rmo = rot * vec2(-r * 0.5,h) + c;\n    vec2 lmo = rot * vec2(r * 0.5,h) + c;\n\n    return hair(p,c,d,r,rot,int(mod(k,6.0)*2.0 - 1.0)) * line(p,rmo,lmo,ml,k) * smoothstep(0.0,r*size,length(reye - p)) * smoothstep(0.0,r*size,length(leye - p));\n}\n\n\nfloat body(vec2 p,vec2 c,vec2 d,float fb,float h,float r,float size)\n{\n    return smoothstep(r - 4./iResolution.y,r + size,(fb >= 0.0 ? min(length(p - c),length(p - d)) : h));\n}\n    \nmat2 rot2(float r)\n{\n    float s = sin(r),c = cos(r);\n    return mat2(c,-s,s,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ncd = fragCoord / iResolution.y;\n    \n    vec2 inc = floor(ncd * 4.0);\n    \n    vec2 nc = fract(ncd * 4.0);\n    \n    float r = 0.02 + nc.y*0.1;\n    float b = 0.27;\n    vec2  a = vec2(0.5,0.1 + b);\n    float t = sin(iTime+inc.x+inc.y) * 3.1415 * (0.1 + 0.05 * inc.x);\n    \n    vec2 c,d;\n    float fb,h;\n    \n    calcAnchorInfo(nc,a,r,b,t,c,d,fb,h);\n    \n    vec3 bgcolor = mix(vec3(0.25,0.22,0.6),vec3(0.0,0.82,0.6),(sin(ncd.x*ncd.y+iTime) * 0.5 + 0.5));\n   \n    vec3 outline = mix(vec3(0.0),bgcolor,body(nc,c,d,fb,h,r,0.03));\n    \n    vec3 color = mix(vec3((inc.x + 1.5) / 4.0,(inc.y + 1.5) / 4.0,0.0),outline,body(nc,c,d,fb,h,r,0.0));\n    \n    color = mix(vec3(0.),color,smileface(nc,c,d,r,t,0.3,mod(inc.x+inc.y,5.0)));\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}