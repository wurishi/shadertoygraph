{"ver":"0.1","info":{"id":"wt2XW1","date":"1565804674","viewed":163,"name":"Smooth blendy shape","username":"cyaoeu","description":"First shader on Shadertoy (modified from book of shaders example)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blending","smoothstep","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float size = 0.2*abs(sin(0.5*iTime));\n\tfloat size2 = 1.35*abs(sin(1.0*iTime))+size;\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n\n    // Each result will return 1.0 (white) or 0.0 (black).\n    vec2 bl = smoothstep(vec2(size), vec2(size2),st);   // Similar to ( X greater than 0.1 )\n    vec2 tr = smoothstep(vec2(size), vec2(size2), 1.0-st);\n    //float bottom = step(0.1,st.y); // Similar to ( Y greater than 0.1 )\n\n    // The multiplication of left*bottom will be similar to the logical AND.\n    color = vec3( bl.x * bl.y );\n    color *= tr.x * tr.y;\n    color.r = color.r*1000.0-1.0;\n    color.g = color.g*1000.0-1.0;\n    color.b = color.b*1000.0-1.0;\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}