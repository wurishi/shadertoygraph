{"ver":"0.1","info":{"id":"MfSfWG","date":"1725437617","viewed":71,"name":"Fork simple page","username":"Raindrips","description":"Just a simple-ass page curl. Nothin' fancy here. Click and drag to curl the page.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["curl","page"],"hasliked":0,"parentid":"ls3cDB","parentname":"simple page curl effect"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265359\n#define radius .1\n\nfloat getAspect(in vec3 iResolution){\n    return iResolution.x / iResolution.y;\n}\n\nvec4 printPixel(in vec2 uv, in vec2 pos, in vec4 color) {\n  float dis = length(uv - pos) - 0.1;\n  color += step(dis, 0.0);\n  return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = getAspect(iResolution);\n\n    vec2 uv = fragCoord * vec2(aspect, 1.) / iResolution.xy;\n    \n    vec2 mouse = iMouse.xy  * vec2(aspect, 1.) / iResolution.xy;\n    \n    vec2 mouseDir = normalize(abs(iMouse.zw) - iMouse.xy);\n    \n    vec2 origin=vec2(0,clamp(mouse.y,0.,1.));\n    float mouseDist = clamp(\n        length(mouse - origin) + \n        (aspect - (abs(iMouse.z) / iResolution.x) * aspect) / mouseDir.x, \n        0., \n        aspect / mouseDir.x);\n    \n    if (mouseDir.x < 0.)\n    {\n        mouseDist = distance(mouse, vec2(0.0,0.5);\n    }\n  \n    float proj = dot(uv, mouseDir);\n    float dist = proj - mouseDist;\n    \n    vec2 linePoint = uv - dist * mouseDir;\n    \n    if (dist > radius) \n    {\n        fragColor = texture(iChannel1, uv * vec2(1. / aspect, 1.));\n        fragColor.rgb *= pow(clamp(dist - radius, 0., 1.) * 1.5, .2);\n    }\n    else if (dist >= 0.)\n    {\n        // map to cylinder point\n        float theta = asin(dist / radius);\n        vec2 p2 = linePoint + mouseDir * (pi - theta) * radius;\n        vec2 p1 = linePoint + mouseDir * theta * radius;\n        uv = (p2.x <= aspect && p2.y <= 1. && p2.x > 0. && p2.y > 0.) ? p2 : p1;\n        fragColor = texture(iChannel0, uv * vec2(1. / aspect, 1.));\n        fragColor.rgb *= pow(clamp((radius - dist) / radius, 0., 1.), .2);\n    }\n    else \n    {\n        vec2 p = linePoint + mouseDir * (abs(dist) + pi * radius);\n        uv = (p.x <= aspect && p.y <= 1. && p.x > 0. && p.y > 0.) ? p : uv;\n        fragColor = texture(iChannel0, uv * vec2(1. / aspect, 1.));\n    }\n}","name":"Image","description":"","type":"image"}]}