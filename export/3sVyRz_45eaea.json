{"ver":"0.1","info":{"id":"3sVyRz","date":"1602132470","viewed":202,"name":"some simple subtractive plasma","username":"netgrind","description":"some waves","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["plasma","colorful","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord -= iResolution.xy*.5;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    \n    float d = length(uv);\n    float a = atan(uv.x, uv.y);\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx*20.+vec3(0,2,4)+d*20.+sin(a*3.));\n    \n    float s = mix(sin(a*16.+iTime*.5+cos(d*20.+iTime*.125)), cos(a*7.-iTime*.66), cos(d*60.+iTime*.25)*.5+.5)*sin(d*30.-iTime*.33);\n    s *= smoothstep(.1, .2, d);\n    s *= smoothstep(.5, .4, d);\n    s = max(s, 0.);\n    s = pow(s, 2.);\n    \n    col *= s;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}