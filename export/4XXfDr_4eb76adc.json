{"ver":"0.1","info":{"id":"4XXfDr","date":"1728319713","viewed":17,"name":"vinyl spin","username":"secondthumb","description":"viny","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["vinyl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y; // Correct aspect ratio\n\n    // Time variable for animation\n    float t = iTime;\n\n    // Vinyl record parameters\n    float outerRadius = 0.5;\n    float innerRadius = 0.02; // Small hole in the center\n    float labelRadius = 0.15; // Central label radius\n\n    // Apply rotation to simulate vinyl spinning\n    float rotationSpeed = 1.0; // Adjust rotation speed\n    float angle = t * rotationSpeed;\n\n    // Create a rotation matrix\n    mat2 rot = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n\n    // Slight movement to simulate the vinyl being moved by an invisible hand\n    vec2 movement = vec2(sin(t * 0.4) * 0.02, cos(t * 0.3) * 0.02);\n\n    // Apply rotation and movement to UV coordinates\n    vec2 p = uv - movement;\n    p = rot * p;\n\n    // Distance from the center\n    float r = length(p);\n\n    // Determine if the current point is within the vinyl record\n    float disk = smoothstep(outerRadius, outerRadius - 0.005, r) - smoothstep(innerRadius, innerRadius + 0.005, r);\n\n    // Simulate the grooves on the vinyl record\n    float grooveFrequency = 1000.0;\n    float groovePattern = sin(r * grooveFrequency);\n\n    // Set the vinyl color to black\n    vec3 baseColor = vec3(0.0, 0.0, 0.0);\n\n    // Modulate base color with groove pattern (slight variation)\n    float grooveModulation = 1.0 + groovePattern * 0.02;\n    vec3 color = baseColor * grooveModulation;\n\n    // Add a central label\n    float labelMask = smoothstep(labelRadius, labelRadius + 0.005, r);\n    vec3 labelColor = vec3(0.8, 0.2, 0.2); // For example, a red label\n    color = mix(color, labelColor, 1.0 - labelMask);\n\n    // Compute normal vector with groove perturbation\n    vec3 normal = normalize(vec3(p, sqrt(1.0 - dot(p, p))));\n    float grooveHeight = 0.005; // Small value representing groove depth\n    vec2 grooveGradient = normalize(p) * grooveFrequency * cos(r * grooveFrequency);\n    vec3 grooveNormal = normal + vec3(grooveGradient * grooveHeight, 0.0);\n    grooveNormal = normalize(grooveNormal);\n\n    // Add a specular highlight to simulate lighting\n    vec3 lightDir = normalize(vec3(-0.5, 0.5, 1.0));\n    float specular = pow(max(dot(reflect(-lightDir, grooveNormal), vec3(0.0, 0.0, 1.0)), 0.0), 50.0);\n    color += vec3(specular);\n\n    // Apply disk mask to confine the color within the vinyl shape\n    color *= disk;\n\n    vec3 bgColor = vec3(0.0); // Pure black background\n\n    // Combine vinyl record and background, keeping the vinyl as a solid black circle\n    vec3 finalColor = mix(bgColor, color, disk);\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}