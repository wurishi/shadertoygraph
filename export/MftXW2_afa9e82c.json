{"ver":"0.1","info":{"id":"MftXW2","date":"1714680048","viewed":63,"name":"noodles","username":"Tegalize","description":"First shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.278,0.122,0.122);\n    vec3 b = vec3(0.769,0.800,0.761);\n    vec3 c = vec3(0.718,0.620,0.620);\n    vec3 d = vec3(0., .667, .5);\n    \n    return a + b*cos(6.28318*(c*t*d));\n}\n\n\nfloat sdfSphere(vec3 p, float s){\n    return length(p) - s;\n}\n\nfloat sdfBox(vec3 p, vec3 b){\n    vec3 q = abs(p) -b;\n    return length(max(q, 0.)) + min(max(q.x, max(q.y, q.z)), 0.);\n}\n\nfloat smin(float a, float b, float k){\n    float h = max(k-abs(a-b), .0) / k;\n    return min(a, b) - h*h*h*k*(1. / 6.);\n}\n\nmat2 rot2D(float angle){\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nfloat map(vec3 p){\n    p.y += iTime * .4;\n    p.xy = fract(p.xy) - .5;\n    p.z = mod(p.z, .25) - 0.125;\n    \n    float box = sdfBox(p, vec3(.15)); //SDF Box\n    \n    return box;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy)/ iResolution.y;\n    vec2 m = (iMouse.xy * 2. - iResolution.xy)/ iResolution.y *.4;\n    \n    //Initilization\n    vec3 ro = vec3(0., 0., -3.);               //ray origin\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.)); //ray direction\n    vec3 col = vec3(0.);\n\n    float t = 0.;\n    \n    //Vertical camera rotation\n    ro.yz *= rot2D(-m.y);\n    rd.yz *= rot2D(-m.y);\n    \n    //Horizoltal camera rotation\n    ro.xz *= rot2D(-m.x);\n    rd.xz *= rot2D(-m.x);\n    \n    if(iMouse.z < 0.) m = vec2(cos(iTime*.2), sin(iTime));\n    \n    //Raymarching\n    int i;\n    for(i = 0; i < 80; i++){\n        vec3 p = ro + rd * t;\n        \n        p.xy *= rot2D(sin(t*2.)*.3)/2.3;\n        \n        p.y += sin(t*(m.y+1.)*.5)*.35;\n        p.x += sin(t)*.2;\n  \n        \n        float d = map(p);\n        \n        t += d;\n        \n        if(d < .001 || t > 10.) break;\n    }\n    \n    //Coloring\n    col = palette(t * .05 + float(i)*.003);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}