{"ver":"0.1","info":{"id":"WlSyz3","date":"1600054027","viewed":374,"name":"Motion Trail","username":"ivomontigatti","description":"Motion Blur","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur","motionblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 white = vec4(1.0);\nconst vec4 ballColor = vec4(1.0, 81.0 / 255.0, 113.0 / 255.0, 1.0);\nconst vec2 center = vec2(0.5, 0.5);\nconst float radius = 0.05;\nconst float timeDelta = 0.05;\n\nfloat nsin(float t, float from, float to){\n    return ((sin(t) + 1.0) / 2.0) * (to - from) + from;\n}\n\n// compute height using heron's formula\nfloat height(vec2 v1, vec2 v2) {\n    vec2 v3 = v2 - v1;\n    float a = length(v1);\n    float b = length(v2);\n    float c = length(v3);\n    float s = (a + b + c) / 2.0;\n\tfloat area = sqrt(s*(s-a)*(s-b)*(s-c));\n    float h = (2.0 * area) / b;\n    return h;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float currentTime = iTime;\n    float previousTime = currentTime - timeDelta;\n    vec2 currentPosition = vec2(\n        nsin(currentTime * 5.0, 0.2, 0.8),\n        nsin((currentTime + 0.5) * 5.0, 0.2, 0.8)) * iResolution.xy;\n    vec2 previousPosition = vec2(\n    \tnsin(previousTime * 5.0, 0.2, 0.8),\n        nsin((previousTime + 0.5) * 5.0, 0.2, 0.8)) * iResolution.xy;\n    \n    vec2 delta = fragCoord - currentPosition;\n    float deltaLength = length(delta);\n    vec2 speedVec = previousPosition - currentPosition;\n    float maxTrail = length(speedVec / iResolution.y);\n    vec2 trail = normalize(speedVec);\n    \n    float h = height(delta, speedVec);\n    float hn = h / (radius * iResolution.y);\n    \n    float dh = dot(delta, trail);\n    float dhn = dh / (maxTrail * iResolution.y);\n    \n    float ndl = deltaLength / (radius * iResolution.y);\n    float pdl = length(fragCoord - previousPosition) / (radius * iResolution.y);\n    float inOut = step(1.0, step(hn, 1.0) * step(dhn, 1.0) * step(0.0, dh) + step(ndl, 1.0) + step(pdl, 1.0));\n    // float grad = 1.0 - (deltaLength / (radius * 5.0 * iResolution.y));\n    // Output to screen\n    fragColor = mix(white, ballColor , inOut);\n}","name":"Image","description":"","type":"image"}]}