{"ver":"0.1","info":{"id":"3lXBz8","date":"1595930806","viewed":293,"name":"glow and gear","username":"zhengxiangkui","description":"glow and gear","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","glow","gear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592657\n#define NUM 15.\nfloat rect(vec2 p, vec2 size) {\n    return max(smoothstep(size.x, size.x+0.01, abs(p.x)),\n        smoothstep(size.y, size.y+0.01, abs(p.y)));\n\n}\n\nmat2 rotate2D(float theta) {\n    float s = sin(theta);\n    float c = cos(theta);\n\treturn mat2(s, -c,\n               \tc, s\n               );\n\n}\n\nfloat gear(vec2 p, float r, float angle) {\n    float res = 1.;\n    for(float i = 1.; i <= NUM; i++) {\n    \tfloat currAngle = i/NUM * 2. * PI;\n        vec2 rp = rotate2D(currAngle+angle) * p;\n        rp.y -= r;\n        res *= rect(rp, vec2(0.05, 0.06));\n    }\n    res *= smoothstep(r, r+0.01, length(p)) + smoothstep(0.11,0.1, length(p));\n    return res;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = 3.*(fragCoord-0.5*iResolution.xy)/iResolution.y;\n\tvec2 glowUv = uv - vec2(2.*sin(iTime),1.);\n    vec3 col = vec3(1.,0.5,0.25);\n\tfloat over = 1./length(glowUv);\n    float dist = pow(over, 0.8);\n    col *= dist;\n    \n    col = 1. - exp(-col);\n    \n    float v1 = gear(uv, 0.5, iTime * 0.5);\n    float v2 = gear(uv - vec2(0.72,0.8), 0.5, -iTime * 0.5);\n    float v = min(v1 , v2);\n    // Output to screen\n    fragColor = vec4(col*v,1.0);\n}","name":"Image","description":"","type":"image"}]}