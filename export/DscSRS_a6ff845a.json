{"ver":"0.1","info":{"id":"DscSRS","date":"1679974945","viewed":104,"name":"edge detection filter","username":"odid2730","description":"edge detection","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple","filter","edge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float filter1[9] = float[9](-1., -1., -1.,\n                             0.,  0.,  0.,\n                             1.,  1.,  1.);\n                             \nfloat filter2[9] = float[9](-1.,  0.,  1.,\n                            -1.,  0.,  1.,\n                            -1.,  0.,  1.);\n                            \nfloat filter3[9] = float[9]( 0.,  1.,  0.,\n                            -1.,  0.,  1.,\n                             0., -1.,  0.);\n                             \nfloat filter4[9] = float[9]( 0., -1.,  0.,\n                            -1.,  0.,  1.,\n                             0.,  1.,  0.);\n\n\nvec4 edge_detection( vec2 fragCoord, float kernel_size )\n{\n    vec4 col = vec4(0.);\n    float conv_size = kernel_size * kernel_size;\n    for (float i = -(kernel_size - 1.) / 2.; i <= (kernel_size - 1.) / 2.; i+=1.)\n    {\n        for (float j=-(kernel_size - 1.) / 2.;j<= (kernel_size - 1.) / 2.;j+=1.)\n        {\n            col += texture( iChannel0, ( fragCoord + vec2(i, j) ) / iResolution.xy) * filter1[int((i+1.)*3.+j+1.)];\n            col += texture( iChannel0, ( fragCoord + vec2(i, j) ) / iResolution.xy) * filter2[int((i+1.)*3.+j+1.)];\n            col += texture( iChannel0, ( fragCoord + vec2(i, j) ) / iResolution.xy) * filter3[int((i+1.)*3.+j+1.)];\n            col += texture( iChannel0, ( fragCoord + vec2(i, j) ) / iResolution.xy) * filter4[int((i+1.)*3.+j+1.)];\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float kernel_size = 3.;\n    fragColor = edge_detection( fragCoord, kernel_size );\n}","name":"Image","description":"","type":"image"}]}