{"ver":"0.1","info":{"id":"XsyfDK","date":"1530409221","viewed":104,"name":"Distorted rectangle zoom ","username":"JohanFlod","description":"Doing \"blur\" with a smoothstep function. Not correct but it is fast :) ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["zoom","rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 uv;\nvec3 color;\nfloat speed = 10.;\n#define PI 3.14159265359\n\nvec3 rectangle(in vec2 size,in vec3 colour)\n{\n\tsize = 2.5 - size;\n    float dist = (distance(uv,vec2(2.5)))/2.5; \n    dist/=2.5;\n    \n    vec2 bl = smoothstep(size-dist,size+dist,uv);\n    vec2 tr = smoothstep(size-dist,size+dist,5.0-uv);\n  \n    return vec3(bl.x * bl.y * tr.x * tr.y*colour);\n\t\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    uv = fragCoord.xy/iResolution.xy;\n    uv*=5.0;\n\t\n    vec2 size;\n    vec2 size2;\n    vec2 size3;\n    vec3 grey = vec3(0.5);\n    \n    size.y = 2.5*fract(iTime/5.0);\n    size.x = 2.5*fract(iTime/5.0);\n    \n    size2.y = 2.5*fract(iTime/5.+.33);\n    size2.x = 2.5*fract(iTime/5.+.33);\n    \n    size3.y = 2.5*fract(iTime/5.+.66);\n    size3.x = 2.5*fract(iTime/5.+.66);\n    \n    // move space from the center to the vec2(0.0)\n    uv -= vec2(1.8);\n    // rotate the space\n    \n   \n    \n    float dist = distance(uv,vec2(2.5)); \n    dist/=2.5;\n    uv = rotate2d((iTime))  * uv;\n    uv = rotate2d((0.5*dist))  * uv;\n    \n    // move it back to the original place\n    uv += vec2(1.8);\n    \n    vec3 red = vec3((2.5-size.y)/2.5,0.,0.0);\n\tvec3 red_rectangle = rectangle(size, red);\n\t\n    vec3 green = vec3(0.0,(2.5-size2.y)/2.5,0.0);\n    vec3 green_rectangle = rectangle(size2, green);\n    \n    vec3 blue = vec3(0.0,0.0,(2.5-size3.y)/2.5);\n    vec3 blue_rectangle = rectangle(size3, blue);\n    \n    fragColor = vec4(grey+red_rectangle+blue_rectangle+green_rectangle,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}