{"ver":"0.1","info":{"id":"lcfGzH","date":"1702731310","viewed":53,"name":"domainWraping_learn","username":"yufengjie","description":"good evening","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","domainwraping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n\nfloat random(vec2 uv) {\n  return fract((sin(dot(uv.xy, vec2(12.9898, 78.233)))) * 43758.5453123);\n}\n\nfloat noise(vec2 uv) {\n  vec2 i = floor(uv);\n  vec2 f = fract(uv);\n\n  float a = random(i);\n  float b = random(i + vec2(1., 0));\n  float c = random(i + vec2(0., 1.));\n  float d = random(i + vec2(1.));\n\n  vec2 u = f * f * (3. - 2. * f);\n  // vec2 u = smoothstep(0., 1., f);\n\n  float v1 = mix(a, b, u.x);\n  float v2 = mix(c, d, u.x);\n  return mix(v1, v2, u.y);\n}\n\nvec3 palette(float t) {\n  // vec3 a = vec3(1.000, 0.500, 0.500);\n  // vec3 b = vec3(0.500, 0.500, 0.500);\n  // vec3 c = vec3(0.750, 1.000, 0.667);\n  // vec3 d = vec3(0.800, 1.000, 0.333);\n\n  vec3 a = vec3(0.000, 0.500, 0.500);\n  vec3 b = vec3(0.000, 0.500, 0.500);\n  vec3 c = vec3(0.000, 0.500, 0.333);\n  vec3 d = vec3(0.000, 0.500, 0.667);\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\n#define octaves 6\nfloat fbm(vec2 uv) {\n  float lacunarity = 2.;\n  float gain = 0.5;\n\n  float amplitude = 0.5;\n  float frequency = 1.;\n\n  float result = 0.;\n\n  for(int i = 0; i < octaves; i++) {\n    result += amplitude * noise(frequency * uv);\n    frequency *= lacunarity;\n    amplitude *= gain;\n  }\n  return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.y * 10.;\n  vec3 color_fin = vec3(0.0);\n\n  float uvt = sin(length(uv) - iTime);\n  vec2 uv2 = uv * fbm(uv) * uvt;\n\n  vec3 col = palette(fbm(uv2));\n\n  color_fin += col;\n\n  fragColor = vec4(color_fin, 1.);\n}\n\n","name":"Image","description":"","type":"image"}]}