{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"keyboard","id":"4dXGRr","filepath":"/presets/tex00.jpg","sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Base values\n#define COMPRESSION 400.0\n#define OUTER_SIZE 0.75\n#define INNER_HEIGHT 0.425\n#define INNER_ASPECT 1.0\n#define OUTER_ASPECT 1.0\n\nconst int Key_A = 65; // anger\nconst int Key_S = 83; // anger\nconst int Key_D = 68; // anger\n\nconst int Key_Q = 81; // pupil contraction\nconst int Key_W = 87; // pupil contraction\nconst int Key_E = 69; // pupil contraction\n\nconst int Key_Z = 90; // eyebrow angle\nconst int Key_X = 88; // eyebrow angle\nconst int Key_C = 67; // eyebrow angle\nconst int Key_V = 86; // eyebrow angle\nconst int Key_B = 66; // eyebrow angle\n\nconst int Key_P = 80; // jimmy two-eyes\n\nconst int Key_L = 76; // noisy eyebrow toggle\n\nconst vec3 irisOuterTint = vec3(120.0 / 255.0, 15.0 / 255.0, 0.0 / 255.0);\nconst vec3 irisInnerTint = vec3(255.0 / 255.0, 125.0 / 255.0, 50.0 / 255.0);\nconst vec3 pupilTint = vec3(0.0, 0.0, 0.0);\nconst vec3 glintTint = vec3(0.75, 0.75, 0.75);\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\t\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = texture( iChannel0, (uv+0.5)/256.0, -100.0 ).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\n                    -0.80,  0.36, -0.48,\n                    -0.60, -0.48,  0.64 );\n\nfloat fbm(vec3 pos)\n{\n\tfloat f = 0.0;\n\tvec3 q = 8.0*pos;\n\tf  = 0.5000*noise( q ); q = m*q*2.01;\n\tf += 0.2500*noise( q ); q = m*q*2.02;\n\tf += 0.1250*noise( q ); q = m*q*2.03;\n\tf += 0.0625*noise( q ); q = m*q*2.01;\n\treturn f;\n}\n\n// key is javascript keycode: http://www.webonweboff.com/tips/js/event_key_codes.aspx\nbool ReadKey( int key, bool toggle )\n{\n\tfloat keyVal = texture( iChannel1, vec2( (float(key)+.5)/256.0, toggle?.75:.25 ) ).x;\n\treturn (keyVal>.5)?true:false;\n}\n\nfloat cutoff(vec2 uv, vec2 centerOffset, float angle, float height, float compression )\n{\n\t//angle += iTime * 0.1;\n\t//angle += 3.141592654 / 2.0;\n\t\n\t//angle = mod(angle, 3.141592654 / 2.1) + 3.141592654 / 2.0 - 0.2;\n\tangle += 3.141592654 / 2.0 - 0.2;\n\t\n\tcenterOffset.y -= height;\n\tuv -= vec2(0.5) - centerOffset / 2.0;\n\t\n\tvec2 vector = vec2(cos(angle), sin(angle));\n\tfloat below = (uv.y * vector.y + uv.x * vector.x) * compression;\n\t\n\treturn below;\n}\n\nvec2 circle(vec2 uv, float squint, vec2 pupilCenter, float aspect, float radius, float outerRadius, float compression)\n{\n\taspect *= iResolution.y / iResolution.x;\n\t\n\tfloat dist = length((uv - vec2(0.5, 0.5) + pupilCenter) / vec2(aspect, squint));\n\tfloat ret = clamp(pow(dist / (radius / 2.0), compression), 0.0, 1.0);\n\t\n\tfloat edgeShading = max(dist - radius/2.0, 0.0) / (outerRadius/2.0 - radius/2.0);\n\t//edgeShading = 1.0 - (0.5 + clamp(pow((uv.y - 0.5) * 5.0 - 1.75, 2.0), 0.0, 1.0) * 0.5);\n\t\n\treturn vec2(1.0 - ret, edgeShading);\n\t//return vec2(0.0, edgeShading);\n}\n\nvec3 eye(vec2 uv, float squintiness, float pupilAspect, float anger, float pulsatingPupil, float timeOffset, float pupilSize, float eyeId)\n{\n\tfloat time = iTime/2.0 + timeOffset;\n\ttime += noise(vec3(0,time,0));\n\t\n\t//float lookFlick = noise11(time * 1.0, 0.2) * 2.0 - 1.0;\n\tfloat lookFlick = floor(time)+smoothstep(0.0,0.05,fract(time));\n\tvec2 angles = (texture( iChannel0, vec2((lookFlick+.5)/256.0,.5), -100.0 ).rb-.5) * 0.5;\n\tangles += texture(iChannel0, vec2(iTime*.01)).xy*.001;\n\t\n\t// manual control\n\tif (iMouse.w > .00001)\n\t\tangles.xy = -(iMouse.xy / iResolution.xy - vec2(0.5, 0.5));\n\t\n\tangles.y *= 1.0 - squintiness;\n\tangles *= 0.025 + 0.1 * (1.2 - pupilSize);\n\t\n\tfloat blink = smoothstep(.0,.02,abs(noise(vec3(iTime*.2,0,0))-.5 ));\t\n\t//float squint = clamp(blink, 0.0, 1.0);\n\tfloat squint = 1.0;\n\t\n\tsquint *= 1.0 - squintiness;\n\t\n\tfloat innerHeight = INNER_HEIGHT;\n\tfloat innerAspect = pupilAspect;\n\t\n\t//innerHeight = innerHeight * mix(0.825, 1.0, mix(0.0, abs(sin(iTime * anger * 40.0)), pow(pulsatingPupil, 2.0)));\n\t//innerHeight = mix(innerHeight, innerHeight * 0.875, anger);\t\n\tinnerHeight *= pupilSize;\n\t\n\tvec2 outer = circle(uv, \n\t\t\t\t\t\tsquint + abs(angles.y) * 0.25, \n\t\t\t\t\t\tangles * vec2(0.01, 0.05), \n\t\t\t\t\t\t1.0 + abs(angles.x) * 0.075,\n\t\t\t\t\t\tOUTER_SIZE,\n\t\t\t\t\t    0.0,\n\t\t\t\t\t   \t200.0);\n\t\n\tvec2 inner = circle(uv, \n\t\t\t\t\t\tmix(0.75, 1.0, squint), \n\t\t\t\t\t\tangles, \n\t\t\t\t\t\tinnerAspect, \n\t\t\t\t\t\tinnerHeight,\n\t\t\t\t\t    OUTER_SIZE,\n\t\t\t\t\t   \t50.0);\n\t\n\tvec2 mascara = circle(uv, \n\t\t\t\t\t\tmix(0.75, 1.0, squint), \n\t\t\t\t\t\tangles * 0.01, \n\t\t\t\t\t\tinnerAspect, \n\t\t\t\t\t\tOUTER_SIZE,\n\t\t\t\t\t    OUTER_SIZE + 0.1,\n\t\t\t\t\t   \t50.0);\n\t\n/*\t\n\tvec2 glint = circle(uv + vec2(-0.025 * innerAspect, -0.15), \n\t\t\t\t\t\tmix(0.75, 1.0, squint),\n\t\t\t\t\t\tangles, \n\t\t\t\t\t\tinnerAspect,\n\t\t\t\t\t\tinnerHeight * 0.5,\n\t\t\t\t\t\tOUTER_SIZE,\n\t\t\t\t\t   \t10.0);\n*/\n\tfloat pitch = uv.x + angles.x * 0.5 + 0.5;\n\tfloat yaw = uv.y + angles.y * 0.5 + 2.5;\n\t\n\tpitch *= 3.0;\n\tyaw *= 2.0;\n\t\n\tpitch *= 1.0 + clamp(inner.y * 0.05, 0.0, 1.0);\n\tyaw *= 1.0 + clamp(inner.y * 0.05, 0.0, 1.0);\n\t\n\t/*\n\tvec3 glint = pow(texture(iChannel2, \n\t\t\t\t\t\t\t vec3(cos(pitch) * cos(yaw), cos(pitch) * sin(yaw), sin(pitch))).rgb * 2.0, vec3(1.1)) / 1.8;\n\t*/\n\tvec3 glint = vec3(0.0);\n\t\n\tvec3 color = vec3(1.0);\n\t\n\tvec3 irisColor = mix(irisInnerTint, irisOuterTint, inner.y);\n\t//irisColor *= mix(texture(iChannel3, uv * 4.0 * mix(inner.y, 1.0, 0.2)).rgb, vec3(2.0), 0.2);\n\tirisColor *= (fbm(vec3(uv.x * inner.y, uv.y * inner.y, iTime / 20.0)) - 0.5) * 0.5 + 1.0;\n\t\t\n\tcolor = mix(irisColor, pupilTint, inner.x);\n\tcolor *= 1.0 + pow(glintTint * glint.xyz, vec3(12.0)) * pow(inner.y, 1.0) * 1.5;\n\t//color += 0.1 * pow(glintTint * glint.xyz, vec3(12.0)) * pow(inner.y, 1.0);\n\t\n\tcolor = mix(vec3(0.0), color, mascara.x);\n\t\n\tfloat foggyBorderValue;\n\tfloat foggyBorderUVmod;\n\tif (ReadKey(Key_L, true))\n\t{\n\t\tfoggyBorderValue = fbm(vec3(uv.x * 0.825, uv.y * 0.75, iTime / 50.0));\n\t\tfoggyBorderUVmod = foggyBorderValue - 0.5;\n\t}\n\telse\n\t{\n\t\tfoggyBorderValue = 0.0;\n\t\tfoggyBorderUVmod = 0.0;\n\t}\n\n\t// angled eyebrow\n\t{\t\n\t\tfloat angle = 0.0;\n\t\tfloat additionalXOffset = 0.0;\n\t\tif (ReadKey(Key_Z, false))\n\t\t\tangle = 0.0;\n\t\tif (ReadKey(Key_X, false))\n\t\t\tangle = 0.175;\n\t\tif (ReadKey(Key_C, false))\n\t\t\tangle = 0.5;\n\t\tif (ReadKey(Key_V, false))\n\t\t\tangle = 1.1;\n\t\tif (ReadKey(Key_B, false))\n\t\t{\n\t\t\tangle = 1.3;\t\n\t\t\tadditionalXOffset = 0.15;\n\t\t}\n\t\t\n\t\tif (eyeId == 1.0)\n\t\t\tuv.x = 1.0 - uv.x;\n\t\t\n\t\tfloat co = cutoff(uv + foggyBorderUVmod * 0.25,\n\t\t\t\t\t\t  vec2(OUTER_SIZE * (1.0 - angle * 0.25) - additionalXOffset, OUTER_SIZE * (0.9 + angle * 0.625)),\n\t\t\t\t\t\t  angle, 0.75, 35.0) * (1.0 - foggyBorderValue);\n\t\tif (angle != 0.0)\n\t\t\tcolor = mix(color, vec3(0.0 + pow(foggyBorderValue, 4.0) * 0.2), clamp(co, 0.0, 1.0));\n\t}\n\t\n\t// upper lid\n\t{\t\t\n\t\tfloat angle = 0.0;\n\t\tif (ReadKey(Key_Z, false))\n\t\t\tangle = 0.05;\n\t\tif (ReadKey(Key_X, false))\n\t\t\tangle = -0.05;\n\t\tif (ReadKey(Key_C, false))\n\t\t\tangle = -0.1;\n\t\tif (ReadKey(Key_V, false))\n\t\t\tangle = -0.15;\n\t\tif (ReadKey(Key_B, false))\n\t\t\tangle = -0.01;\t\t\n\t\t\n\t\tfloat co = cutoff(uv + foggyBorderUVmod * 0.25,\n\t\t\t\t\t\t  vec2(OUTER_SIZE * (1.0 - angle * 0.25), 0.1),\n\t\t\t\t\t\t  angle, 0.75, 35.0) * (1.0 - foggyBorderValue);\n\t\tif (angle != 0.0)\n\t\t\tcolor = mix(color, vec3(0.0 + pow(foggyBorderValue, 4.0) * 0.2), clamp(co, 0.0, 1.0));\n\t}\n\t\n\t\n\t//color = mix(vec3(1.0, 1.0, 1.0), color, outer.x);\t\n\n\treturn color * 1.2;\n\t//return vec3(foggyBorder);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n\t// MODIFIERS\n\tfloat squintiness = 0.0;\n\tfloat pulsatingPupil = 0.0;\t\n\tfloat pupilAspect = INNER_ASPECT;\n\tfloat pupilSize = 1.0;\n\t\n\t// STATES\n\t//float anger = ReadKey(Key_A, false) ? 0.3 : 0.0;\t\n\t//anger = ReadKey(Key_S, false) ? 0.6 : anger;\t\n\t//anger = ReadKey(Key_D, false) ? 1.0 : anger;\t\n\tfloat anger = 0.0;\n\t\n\tfloat focus = ReadKey(Key_Q, false) ? 1.2 : 1.0;\t\n\tfocus = ReadKey(Key_W, false) ? 0.75 : focus;\t\n\tfocus = ReadKey(Key_E, false) ? 0.45 : focus;\t\t\n\n\t// STATE INFLUENCE\n\tif (anger > 0.0)\n\t{\n\t\tanger = clamp(anger, 0.0, 1.0);\n\t\t\n\t\tsquintiness = mix(squintiness, 0.75, anger);\n\t\tpulsatingPupil = mix(pulsatingPupil, 1.0, anger);\n\t\tpupilAspect = mix(pupilAspect, 0.15, anger);\n\t}\n\t\n\tpupilSize = focus;\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec3 color = vec3(1.0);\n\t\n\tif (ReadKey(Key_P, true))\n\t{\n\t\tcolor = vec3(0.0);\n\t\t\n\t\tcolor += eye(vec2(uv.x - 0.05, uv.y - 0.25) * 2.0, squintiness, pupilAspect, anger, pulsatingPupil, 0.0, pupilSize, 1.0);\t\n\t\tcolor += eye(vec2(uv.x - 0.45, uv.y - 0.25) * 2.0, squintiness, pupilAspect, anger, pulsatingPupil, 0.0, pupilSize, -1.0);\t\n\t}\n\telse\n\t{\n\t\tcolor *= eye(uv, squintiness, pupilAspect, anger, pulsatingPupil, 0.0, pupilSize, 1.0);\n\t}\n\t\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":true,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldB3zy","date":"1390001230","viewed":140,"name":"Circle eye tests","username":"renaudbedard","description":"Owl-style eye tests","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["2d","eye"],"hasliked":0,"parentid":"","parentname":""}}