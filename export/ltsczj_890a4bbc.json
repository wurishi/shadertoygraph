{"ver":"0.1","info":{"id":"ltsczj","date":"1505593089","viewed":161,"name":"Tesla Logo","username":"g4b0r","description":"Procedural Tesla Logo","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","logo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Gabor Nagy (gabor.nagy@me.com)\n// September 16, 2017\n//\n// Procedural Tesla Logo\n\n#define S(v)       smoothstep(0., 4./R.y, v)         // antialiasing\n#define C(U,P,r)   S ( r - length(U-(P)) )           // circle\n\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R = iResolution.xy;\n    U = ( U+U - R ) / R.y;\n    \n    U.x = abs(U.x);\n    U.y -= .1;\n\n    vec2 P = vec2(.0, -.8);\n    float n =  S( .5 - length(vec2(.7 * U.x, U.y - .5)) )\n            -  C(U, P, 1.9)\n            +  C(U, P, 1.25)\n            -  C(U, P, 1.18)\n            +  C(U, P, 1.18-.04)\n            -  S( -U.x*1.3 + U.y-.2) * step(U.y-.2, .15)\n            -  S( -pow(U.x*2.,10.) - (U.y-.18));\n    \n    n = max(n, 0.) \n            +  S( -U.x + (U.y+.70)/5.5) * step(0., .2 - U.y);\n\n    O = mix( vec4(.75,.2,.2,1), vec4(1), n);\n}\n\n/*\nOld code for reference:\n\nfloat circle(vec2 uv, vec2 p, float r) {\n    return smoothstep(r, r-0.005, length(uv - p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy) - 0.5;\n    float ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    uv.y -= 0.05;\n    \n    uv *= 2.;\n    \n    float t = iTime;\n    float n = 0.;\n\t\n    n += smoothstep(.5, .5-.005, length(vec2(0.7 * (uv.x - .0), uv.y - .5)));\n    n -= circle(uv, vec2(.0, -.8), 1.9); \n    n += circle(uv, vec2(.0, -.8), 1.25);\n    n -= circle(uv, vec2(.0, -.8), 1.18);\n    n += circle(uv, vec2(.0, -.8), 1.18-0.04);\n    \n\t// Cut small triangle\n    n -= smoothstep(.0, .005, -abs(uv.x*1.3)+(uv.y-0.2)) * step(0., 0.15 - (uv.y-0.2));\n    \n\t// Bottom of the T curve\n    n -= smoothstep(.0, 5., -pow(uv.x*4.,10.) - (uv.y-0.18)*1200.);\n    \n    // Get rid of negative values\n    n = max(n, 0.);\n\n    // Large triangle\n    n += smoothstep(.0, .025, -abs(uv.x*5.) + (uv.y+0.65)) * step(0., .2 - uv.y);\n\n    // Mix red and white\n    fragColor = mix(vec4(.75,.2,.2,1.), vec4(1.,1.,1.,1.), n);\n}\n*/","name":"Image","description":"","type":"image"}]}