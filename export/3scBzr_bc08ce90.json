{"ver":"0.1","info":{"id":"3scBzr","date":"1605181282","viewed":66,"name":"learn(7)","username":"saltlemon","description":"learn from: https://www.youtube.com/channel/UCcAlTqd9zID6aNX3TzwxJXg The Art of Code","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N22(vec2 p){\n \tfloat x=fract(sin(p.x*100.+p.y*168.)*2368.);\n    float y=fract(sin(p.x*156.+p.y*196.)*2586.);\n    return vec2(x,y);\n}\nfloat smin(float a,float b,float k){\n    float h=clamp((b-a)/k+0.5,0.,1.);\n\treturn mix(b,a,h)-h*(1.-h)*k*.5;   \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    uv.x*=iResolution.x/iResolution.y;\n    \n    float cellIndex=0.;\n    float mindis=100.;\n    float m=0.;\n    float t=iTime+10.;\n    \n\n \n    uv*=10.;\n    vec2 suv=fract(uv);\n    vec2 id=floor(uv);\n    vec2 cellId;\n    float res2 = 10.;\n    for(float x=-1.;x<=1.;x++){\n    \tfor(float y=-1.;y<=1.;y++){\n    \t\tvec2 b = vec2( x, y );\n            vec2  r = vec2( b ) - suv + N22( id + b );\n            float d = dot( r, r );\n\n            res2 = min(res2,d);\n            if(res2 ==d)\n            cellId = id + b;\n        }\n            \n    }\n    // Time varying pixel color\n    vec3 col = vec3(N22(cellId).x);\n    //col.rg=cellId*.1;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}