{"ver":"0.1","info":{"id":"MfyczV","date":"1732097541","viewed":20,"name":"Moving Eyeball","username":"matwhytle","description":"graphics first project","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rulerofcakes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec2 x )\n{\n    vec2 i = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\n    float n = i.x + i.y*57.0;\n    return mix( mix(hash(n+ 0.0), hash(n+ 1.0),f.x), mix( hash(n+57.0), hash(n+58.0),f.x), f.y);\n}\n\nconst mat2 m = mat2( 0.80, 0.60, -0.60, 0.80 );\n\n// Fractional Brownian Motion\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n    f += 0.50000*noise( p ); p = m*p*2.02;\n    f += 0.25000*noise( p ); p = m*p*2.03;\n    f += 0.12500*noise( p ); p = m*p*2.01;\n    f += 0.06250*noise( p ); p = m*p*2.04;\n    f += 0.03125*noise( p );\n    return f/0.984375;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    // fragColor = vec4(col,1.0);\n\n    vec2 p = -1. + 2. * fragCoord/iResolution.xy;\n    p.x *= iResolution.x / iResolution.y;\n    \n    p.x += 0.3*cos(iTime*3.);\n    \n    vec3 col = 0.5 + 0.5 * cos(iTime + p.xyx + vec3(0, 2, 4));\n    \n    float r = sqrt(dot(p,p));\n    float a = atan(p.y, p.x);\n    a += 0.05*fbm(15.*p);\n    \n    if(r < 0.8){\n        col = vec3(0.2, 0.6, 0.5);\n        float f = fbm(5.*p);\n        col = mix(col, vec3(0.2, 0.3, 0.2), f);\n        \n        f = 1. - smoothstep(0.2, 0.5, r);\n        col = mix(col, vec3(0.4, 0.3, 0.3), f);\n        \n        f = fbm(vec2(5.*r, 20.*a));\n        col = mix(col, vec3(1.), f);\n        \n        f = smoothstep(0.2, 1.0, fbm(vec2(5.*r, 20.*a)));\n        col = mix(col, vec3(1.), f);\n        \n        f = smoothstep(0.5, 0.9, fbm(vec2(10.*r, 15.*a)));\n        col *= 1.-f;\n        \n        f = smoothstep(0.5, 0.8, r);\n        col *= 1.0-0.5*f;\n        \n        f = smoothstep(0.78, 0.8, r);\n        col = mix(col, vec3(0.0), f);\n    \n        f = smoothstep(0.2, 0.3, r);\n        col *=f;\n        \n    }\n    \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}