{"ver":"0.1","info":{"id":"flBSWR","date":"1627382257","viewed":61,"name":"Mandelbrot set animation by gera","username":"geranyan","description":"I am trying to create shader for drawing mandelbrotset","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrotanimation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float RE_START = -2.2;\nconst float RE_END = 1.2;\nconst float IM_START = -1.2;\nconst float IM_END = 1.2;\n\n\n\nvec3 mandelbrot(in vec2 C){\n    vec2 z = vec2(0.0 , 0.0);\n    float n = .0;\n    while (length(z) <= 25.0 * abs(sin(iChannelTime[1] * 0.3)) + 2.0 && n < 25.0 * abs(sin(iChannelTime[1] * 0.3)) + 2.0){\n        z = vec2(z.x * z.x -  z.y * z.y,  2.0 * z.x * z.y) + C;\n        n += 0.95;\n    }\n    return vec3(n, z);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord;\n \n    vec2 C = vec2(RE_START + (uv.x / iResolution.x) * (RE_END - RE_START),\n                  IM_START + (uv.y / iResolution.y) * (IM_END - IM_START));\n    \n    vec3 n = mandelbrot(C);\n    \n    float y = n.x / (25.0 * abs(sin(iChannelTime[1] * 0.3))) + n.x * n.y * 0.01 + pow((n.x - pow(n.x, 1.0 / 3.0)), 0.2);\n    float z = n.x / (25.0 * abs(sin(iChannelTime[1] * 0.3))) + n.x * n.y + pow((n.x - pow(n.x, 0.5)), sqrt(2.0));\n    \n    /*\n    if (20.0 * abs(sin(iTime * 0.5)) > 15.5) {\n        n.x += (5.0 / (1.0 + exp(-20.0 * abs(sin(iTime * 0.5)) + 17.5))) * exp(25.0 * abs(sin(iTime* 0.5)) - 15.0) * 0.1;\n        y +=  n.x * (0.05 / (1.0 + exp(-20.0 * abs(sin(iTime* 0.5)) + 17.5)) )*exp(25.0 * abs(sin(iTime* 0.5)) - 15.0)* 0.1 ;\n        z +=  n.x * (0.05 / (1.0 + exp(-20.0 * abs(sin(iTime * 0.5)) + 17.5)) )*exp(25.0 * abs(sin(iTime* 0.5)) - 15.0)* 0.1;\n        \n       \n    }*/\n    \n    uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(y,n.x / (25.0 * abs(sin(iChannelTime[1] * 0.3))),z) * (0.5 - 0.5*cos(iTime+uv.xyx+vec3(0.0, 2.0, 4.0))) * 0.001 \n        ;\n\n   \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}