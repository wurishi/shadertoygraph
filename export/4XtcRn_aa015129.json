{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float hash(vec2 p) {\n    float h = dot(p, vec2(127.1, 311.7));\n    return fract(sin(h)*43758.5453123);\n}\n\nfloat noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    \n    float a = hash(i);\n    float b = hash(i + vec2(1.0, 0.0));\n    float c = hash(i + vec2(0.0, 1.0));\n    float d = hash(i + vec2(1.0, 1.0));\n    \n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\nvec2 magneticField(vec2 pos) {\n    float angle = iTime * 0.5;\n    vec2 m = vec2(cos(angle), sin(angle));\n    vec2 dipolePos = vec2(0.0, 0.0);\n    \n    vec2 r = pos - dipolePos;\n    float rMag = length(r);\n    vec2 rHat = r / rMag;\n    \n    float mu0Over4Pi = 0.01;\n    float mDotR = dot(m, rHat);\n    vec2 term1 = rHat * (3.0 * mDotR);\n    vec2 term2 = m;\n    vec2 B = mu0Over4Pi * (term1 - term2) / (rMag * rMag * rMag);\n    \n    return B;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    const float steps = 25.0;\n    const float stepSize = 0.02;\n    float totalWeight = 0.0;\n    float sum = 0.0;\n\n    for (float dir = -1.0; dir <= 1.0; dir += 2.0) {\n        vec2 pos = uv;\n        float weight = 1.0;\n        \n        for (float i = 0.0; i < steps; ++i) {\n            float noiseVal = noise(pos * 30.0);\n            \n            sum += noiseVal * weight;\n            totalWeight += weight;\n            \n            vec2 B = magneticField(pos);\n            vec2 flowDir = normalize(B);\n            pos += flowDir * stepSize * dir;\n            \n            weight *= 0.95;\n        }\n    }\n    \n    float licValue = sum / totalWeight;\n    \n    vec2 B = magneticField(uv);\n    float Bmag = length(B);\n\n    vec3 color = vec3(licValue);\n    color *= smoothstep(0.0, 0.1, Bmag);\n\n    float dipoleSize = 0.05;\n    if (length(uv) < dipoleSize) {\n        color = vec3(0.5);\n    }\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4XtcRn","date":"1734645952","viewed":120,"name":"dipole 1","username":"neocubism","description":"Visualization of magnetic field induced by magnetic dipoles using Line Integral Convolution (LIC).","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["dipole","magnet"],"hasliked":0,"parentid":"","parentname":""}}