{"ver":"0.1","info":{"id":"4dXyRH","date":"1486914053","viewed":893,"name":"Perlin noise with fBm","username":"JackSH3","description":"A study of Perlin noise with fBm.\n\nreference:\nhttps://iquilezles.org/articles/warp/warp.htm\nhttps://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nhttps://en.wikipedia.org/wiki/Perlin_noise\n","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nfloat rand(vec2 c){\n    return fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n// パカパカ変わってしまい何か違う\n#if 0 \nfloat rand(vec2 c, float t) {\n    //return rand(vec2(rand(c),t));\n    return fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * t/*43758.5453*/);\n}\n#endif\n\nfloat noise(vec2 p, float freq ){\n    //float unit = iResolution.x/freq;\n    float unit = 600.0/freq; // 固定にした\n    vec2 ij = floor(p/unit);\n    vec2 xy = mod(p,unit)/unit;\n    //xy = 3.*xy*xy-2.*xy*xy*xy;\n    xy = .5*(1.-cos(PI*xy));\n    float a = rand((ij+vec2(0.,0.)));\n    float b = rand((ij+vec2(1.,0.)));\n    float c = rand((ij+vec2(0.,1.)));\n    float d = rand((ij+vec2(1.,1.)));\n    float x1 = mix(a, b, xy.x);\n    float x2 = mix(c, d, xy.x);\n    return mix(x1, x2, xy.y);\n}\n\n// p スクリーンピクセル座標\n// res 重ねるノイズ(周波数)の数、多いほど高周波が重なる\nfloat perlin(vec2 p, int res){\n    float persistance = .5; // 高周波の振幅を弱める倍率\n    float n = 0.; // ノイズの累積\n    float normK = 0.; // 累積したノイズの正規化項\n    float f = 8.; // 最大周波数\n    float amp = 1.; // 振幅\n    int iCount = 0;\n    for (int i = 0; i<50; i++){\n        n+=amp*noise(p, f);\n        f*=2.;\n        normK+=amp;\n        amp*=persistance;\n        if (iCount == res) break;\n        iCount++;\n    }\n    float nf = n/normK;\n    //return nf*nf*nf*nf;\n    return nf;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    int res = 5;\n#if 0\n    // シンプル版\n    vec2 p = fragCoord.xy;\n    vec2 q = vec2(\n        perlin(p, res),\n        perlin(p + vec2(153.1, 259.3), res));\n    float f = perlin(p+q, res);\n    fragColor.rgb = vec3(f, f, f);\n#else\n    float t = iTime * 0.2;\n    vec2 p = fragCoord.xy;\n    vec2 q = vec2(\n        perlin(p, res),\n        perlin(p + vec2(153.1,259.3), res));\n    vec2 r = vec2(\n        perlin(p+256.0*q + vec2(88.1*t,97.6*t), res),\n        perlin(p+256.0*q + vec2(23.8*t,37.0*t), res));\n    float f = perlin(p+512.0*r, res);\n\n    vec2 s = vec2(\n        perlin(p+256.0*r + vec2(88.1*t,97.6*t), res),\n        perlin(p+256.0*r + vec2(23.8*-t,37.0*-t), res));\n\n    vec3 color = vec3(0.0,0.0,0.0);\n    color = mix(color, vec3(0.6,0.7,0.3), dot(r,r));\n    vec3 tmp = vec3(0.9,0.2,0.9) * dot(s,s);\n    tmp = tmp*tmp;\n    color += tmp;\n    color += vec3(0.2,0.2,0.0) * dot(q,q);\n    color = mix(color, vec3(0.15, 0.2, 0.5), f);\n    color *= (1.0/0.8); // 明暗調整\n    \n    // f, q, r, s 個別\n    //color = mix(vec3(0.6, 0.4, 0.2), vec3(0.1, 0.1, 0.3), f);\n    //color = mix(vec3(0.6, 0.4, 0.2), vec3(0.1, 0.1, 0.3), dot(q,q));\n    //color = mix(vec3(0.6, 0.4, 0.2), vec3(0.1, 0.1, 0.3), dot(r,r));\n    //color = mix(vec3(0.6, 0.4, 0.2), vec3(0.1, 0.1, 0.3), dot(s,s));\n    fragColor.rgb = color;\n#endif\n}\n","name":"Image","description":"","type":"image"}]}