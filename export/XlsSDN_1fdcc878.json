{"ver":"0.1","info":{"id":"XlsSDN","date":"1436916125","viewed":850,"name":"Circular Reveal","username":"scienceprodigy","description":"I'm trying to reveal the image on Channel0 using the image in Channel1 as a backdrop. I want to do this based on time where after 100 seconds the full image is revealed. I'm trying to reveal it radially from 0 to 360 degrees based on increments of time.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const float PI     = 3.1415926;\nconst float TWO_PI = 6.2831852;\n\nfloat magnitude(vec2 vec)\n{\n    return sqrt((vec.x * vec.x) + (vec.y * vec.y));\n}\n\nfloat angleBetween(vec2 v1, vec2 v2)\n{\n    return atan( v1.x - v2.x, v1.y - v2.y ) + PI;\n}\n\nfloat getTargetAngle() \n{\n    return clamp( iTime, 0.0, TWO_PI );\n}\n\n// OpenGL uses upper left as origin by default\nbool shouldDrawFragment(vec2 fragCoord)\n{\n    float targetAngle = getTargetAngle();\n\n    float centerX = iResolution.x / 2.0;\n    float centerY = iResolution.y / 2.0;\n    vec2 center = vec2(centerX, centerY);\n\n    float a = angleBetween(center, fragCoord );\n\n    return a <= targetAngle;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  if (shouldDrawFragment(fragCoord)) {\n    fragColor = texture(iChannel0, vec2(uv.x, -uv.y));\n  } else {\n    fragColor = texture(iChannel1, vec2(uv.x, -uv.y));\n  }\n}","name":"","description":"","type":"image"}]}