{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Fork of \"Bubble popping\" by wyatt. https://shadertoy.com/view/XfVfDt\n// 2024-12-19 15:05:58\n\n// Fork of \"Rasterize particles test\" by wyatt. https://shadertoy.com/view/lfGBDt\n// 2024-12-19 01:49:13\n\n\nvoid mainImage(out vec4 Q, in vec2 U) {\n    if (iFrame%4>0) discard;\n    R = iResolution.xy;\n    if (iFrame%1>0) discard;\n    vec3 p = vec3(.5*R3.xy,-3.*R3.x);\n    vec3 d = normalize(vec3(2.*(U-.5*R)/R.y,9));\n    p -= .5*R3;\n    p.yz *= ei(-.08);\n    d.yz *= ei(-.08);\n    if (iMouse.z>0.) {\n    p.yz *= ei(-iMouse.y/R.x);\n    d.yz *= ei(-iMouse.y/R.x);\n    p.xz *= ei(iMouse.x/R.x*6.2);\n    d.xz *= ei(iMouse.x/R.x*6.2);\n    } else {\n    p.xz *= ei(-.5+.2*sin(.2*iTime));\n    d.xz *= ei(-.5+.2*sin(.2*iTime));\n    }\n    p += .5*R3;\n    p += d*1.001*cube(p,d,vec3(0),R3);\n    \n    vec3 no = vec3(0);\n    Q = vec4(0,0,0,0);\n    for (float i = 0.; i < 220.; i++) {\n    \n        if (length(p-clamp(p,vec3(0),R3))>1e-3) break;\n        float k = 1e9;\n        for (float x = 0.; x <= 1.; x++)\n        for (float y = 0.; y <= 1.; y++)\n        for (float z = 0.; z <= 1.; z++)\n        {\n            vec3 w = floor(p)+vec3(x,y,z);\n            if (length(w-clamp(w,vec3(0),R3))>1e-3) continue;\n            vec4 q = A(w);\n            vec4 v = B(w);\n            vec3 c = w+(q.xyz)-.5;\n            float j = sphere(p-c,d,clamp(1.5*q.w-.3,0.,1.)).x;\n            if (j > 0. && j < k) {\n                vec3 no = normalize(p+d*j-c);\n                Q.xyz += .05*q.w*exp(-Q.w)*(.5-.5*no.zyx);\n                d = normalize(d+.1*normalize(2.*R3-p)+.03*no);\n                p += d;\n                Q.w += .02*q.w;\n                \n            }\n        }\n        p += d*1.2*cube(fract(p),d,vec3(0),vec3(1));\n    }\n    if (Q.w<.001) Q = .9+0.*texture(iChannel0,gl_FragCoord.xy/R).wwww;\n    else Q =(1.-Q);\n\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"// 3D utilities \n#define N 10.\nvec2 R;\nvec3 vel (vec3 v) {return v*inversesqrt(1.+dot(v,v));}\n//  [ [0,R/N]; [0,N*N]  ] < -- > [0,R]\n#define Main void mainImage (out vec4 Q, in vec2 _U) {R = iResolution.xy;vec3 U = d3(floor(_U));\n#define A(U) s3d(iChannel0,U)\n#define B(U) s3d(iChannel1,U)\n#define R3 vec3(R/N,N*N)\nvec4 hash(vec4 p4) {\n    p4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nvec2 d2 (vec3 U) {\n    //U = clamp(U,vec3(0),R3);\n\tU = mod(U,R3);\n    return U.xy+vec2(mod(U.z,N),floor(U.z/N))*R/N;\n}\nvec3 d3 (vec2 u) {\n    vec2 o = floor(u/R*N);\n\treturn vec3(mod(u,R/N),o.x+o.y*N);\n}\n\nvec4 s3d (sampler2D T,vec3 U) {\n    return texelFetch(T,ivec2(d2(U)),0);\n}\nfloat absmin(float a, float b) {\n    if (a<0.||(b>0.&&b<a)) return b;\n    else return a;\n}\nvec2 sphere (vec3 oc, vec3 direction, float sphereRadius) {\n    float a = dot(direction, direction);\n    float b = 2.0 * dot(oc, direction);\n    float c = dot(oc, oc) - sphereRadius * sphereRadius;\n    float discriminant = b * b - 4.0 * a * c;\n    if (discriminant < 0.0) return vec2(-1); \n    float t1 = (-b - sqrt(discriminant)) / (2.0 * a);\n    float t2 = (-b + sqrt(discriminant)) / (2.0 * a);\n    return vec2(t1, t2); \n}\n\nfloat cube(vec3 p, vec3 d, vec3 lo, vec3 hi) {\n    vec3 tLo = (lo - p) / d;\n    vec3 tHi = (hi - p) / d;\n    vec3 tMin = min(tLo, tHi);\n    vec3 tMax = max(tLo, tHi);\n    float tEntry = max(tMin.x, max(tMin.y, tMin.z));\n    float tExit = min(tMax.x, min(tMax.y, tMax.z));\n    if (tEntry > tExit || tExit < 0.0) return -1.0; \n    return tEntry > 0.0 ? tEntry : tExit;\n}","name":"Common","description":"","type":"common"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\nMain \n    Q = s3d(iChannel0,U);\n    vec4 V = s3d(iChannel1,U);\n    if (iFrame < 1) {\n        Q = vec4(0.5,.5,.5,U.y>.4*R3.y?0.:1.);\n        \n    }\n    //if (iFrame % 400 == 0) if (length(U-vec3(.5,.35,.5)*R3)<.2*R3.y) Q.w = 2.;\n    \n    if (U.y < 1.)Q.xyz = vec3(.5);\n    if (U.x < 2.) Q.xyz = vec3(.5);\n    if (R3.x-U.x < 3.) Q.xyz = vec3(.5);\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4sXGR8","filepath":"/media/previz/buffer02.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XdfGR8","filepath":"/media/previz/buffer03.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// force\nMain \n    Q = s3d(iChannel0,U);\n    vec4 V = s3d(iChannel1,U);\n    \n    for (float x = -1.; x <= 1.; x++)\n    for (float y = -1.; y <= 1.; y++)\n    for (float z = -1.; z <= 1.; z++)\n    if (x!=0.||y!=0.||z!=0.)\n    {\n        vec3 u = vec3(x,y,z);\n        \n        if (length(U+u-clamp(U+u,vec3(2),R3-3.))>1e-3) {\n            V.xyz -= .003*u;\n            //continue;\n        }\n        \n        vec4 q = A(U+u);\n        V.xyz += .005*q.w*(.8-q.w)*u/dot(u,u);\n    }\n    V.y -= .0012;\n    //V.x -= .0003*(U.z-.5*R3.z)/R3.z*sin(.2*iTime);\n    //V.z += .0003*(U.x-.5*R3.x)/R3.z*sin(.2*iTime);\n    if (length(V.xyz)>3.) V.xyz = 3.*normalize(V.xyz);\n    if (iFrame < 1) {\n        Q = vec4(0.5,.5,.5,U.y>.4*R3.y?0.:.5);//exp(-.1*length(U-.5*R3)));\n        if (U.y<.4*R3.y) V.x = -.3;\n    }\n    Q = V;\n    \n    if (U.y < 1.)Q.xyz = vec3(0);\n    if (U.x < 2.) Q.xyz = vec3(0);\n    if (R3.x-U.x < 3.) Q.xyz = vec3(0);\n}","name":"Buffer B","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"4sXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// advect\nMain \n    Q = vec4(0);//s3d(iChannel0,U);\n    vec4 V = vec4(0);//s3d(iChannel1,U);\n    \n    for (float x = -1.; x <= 1.; x++)\n    for (float y = -1.; y <= 1.; y++)\n    for (float z = -1.; z <= 1.; z++)\n    {\n        vec3 u = vec3(x,y,z);\n        vec4 q = A(U+u);\n        vec4 v = B(U+u);\n        float k = 1.05;\n        vec3 ol = clamp(clamp(U+vel(v.xyz)+q.xyz+u.xyz,vec3(2.5,2.5,1.5)*k,R3-vec3(2.5,2.5,.5)*k)-U+k*vec3(-.5),0.,1.);\n        vec3 oh = clamp(clamp(U+vel(v.xyz)+q.xyz+u.xyz,vec3(2.5,2.5,1.5)*k,R3-vec3(2.5,2.5,.5)*k)-U+k*vec3(+.5),0.,1.);\n        float w = (oh.x-ol.x)*(oh.y-ol.y)*(oh.z-ol.z)/k/k/k;\n        \n        Q.xyz += 0.5*(ol+oh)*q.w*w;\n        V.xyz += v.xyz*q.w*w;\n        Q.w += q.w*w;\n    }\n    if (Q.w>0.) {\n        Q.xyz/=Q.w;\n        V.xyz/=Q.w;\n    }\n    //Q = V;\n}","name":"Buffer C","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XdfGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// advect\nMain \n    Q = vec4(0);//s3d(iChannel0,U);\n    vec4 V = vec4(0);//s3d(iChannel1,U);\n    \n    for (float x = -1.; x <= 1.; x++)\n    for (float y = -1.; y <= 1.; y++)\n    for (float z = -1.; z <= 1.; z++)\n    {\n        vec3 u = vec3(x,y,z);\n        vec4 q = A(U+u);\n        vec4 v = B(U+u);\n        float k = 1.05;\n        vec3 ol = clamp(clamp(U+vel(v.xyz)+q.xyz+u.xyz,vec3(2.5,2.5,.5)*k,R3-vec3(2.5,2.5,1.5)*k)-U+k*vec3(-.5),0.,1.);\n        vec3 oh = clamp(clamp(U+vel(v.xyz)+q.xyz+u.xyz,vec3(2.5,2.5,.5)*k,R3-vec3(2.5,2.5,1.5)*k)-U+k*vec3(+.5),0.,1.);\n        float w = (oh.x-ol.x)*(oh.y-ol.y)*(oh.z-ol.z)/k/k/k;\n        \n        Q.xyz += 0.5*(ol+oh)*q.w*w;\n        V.xyz += v.xyz*q.w*w;\n        Q.w += q.w*w;\n    }\n    if (Q.w>0.) {\n        Q.xyz/=Q.w;\n        V.xyz/=Q.w;\n    }\n    Q = V;\n}","name":"Buffer D","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"433yzr","date":"1734621055","viewed":400,"name":"3D Wave","username":"wyatt","description":"3D fluid sim","likes":34,"published":3,"flags":32,"usePreview":0,"tags":["3d","fluid","physics","vorticity"],"hasliked":0,"parentid":"","parentname":""}}