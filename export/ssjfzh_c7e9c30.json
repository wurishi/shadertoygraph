{"ver":"0.1","info":{"id":"ssjfzh","date":"1645716785","viewed":112,"name":"Distance field distortion","username":"Roffle","description":"Distortion by distance fields","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["distancefields","distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdUnevenCapsule( vec2 p, float r1, float r2, float h )\n{\n    p.x = abs(p.x);\n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(p,vec2(-b,a));\n    if( k < 0.0 ) return length(p) - r1;\n    if( k > a*h ) return length(p-vec2(0.0,h)) - r2;\n    return dot(p, vec2(a,b) ) - r1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //adjust for aspect ratio\n    uv.y /= iResolution.x/iResolution.y;\n    \n    //adjust uv.y to be in the middle of the screen\n    uv.y += 0.18;\n    \n    //adjust uv coordinates to be in the middle of the screen\n    uv = uv * 2.0 - 1.0;\n    \n    float distortionStrength = 3.0;\n    float distortionThickness = 0.2;\n    \n    //Create capsule\n    float outerCapsule = sdUnevenCapsule(uv - vec2(sin(iTime/2.0)/2.0, -0.3), 0.4, 0.4, 0.4);\n    \n    //Offset distance field to create smaller capsule in which there is no ditortion\n    float innerCapsule = distortionThickness + outerCapsule;\n    \n    //Calculate amount of distortion by the distance field of the innerCapsule\n    float distortionFactor = 1.0 + max(0.0, innerCapsule*distortionStrength) * max(0.0, innerCapsule*distortionStrength);\n    \n    //Distort the UVs\n    uv = uv * distortionFactor;\n\n    //Distortion is done by the uv\n    fragColor = texture(iChannel0, uv);\n    \n    //outline for inner capsule\n    //inner capsule is not distorted\n    if(innerCapsule < 0.0 && innerCapsule > -0.005){\n        fragColor = vec4(1);\n    }\n\n}","name":"Image","description":"","type":"image"}]}