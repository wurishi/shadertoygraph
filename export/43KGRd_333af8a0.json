{"ver":"0.1","info":{"id":"43KGRd","date":"1718209647","viewed":132,"name":"Waving tunnel","username":"uk0141","description":"Noise practice","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","noise","tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPS 0.001\n#define TMAX 2000.\n#define TMIN 0.001\n#define ID_NONE -1.\n#define ID_SPHERE 1.\n#define ID_FLOOR 1.1\n#define ID_LIGHT 1.2\n#define mouseX 360.*iMouse.x/iResolution.x\n\n#define lightPos vec3(0., 0., 15.-iTime*6.)\n\nmat2 rotate(float angle){\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\nfloat random(vec3 st){\n    return fract(sin(dot(st, vec3(12.9898,78.233, 155.)))*43758.5453123);\n}\n\nfloat noise(vec3 st){\n    vec3 i = floor(st);\n    vec3 fr = fract(st);\n    \n    float a = random(i);\n    float b = random(i+vec3(1., 0., 0.));\n    float c = random(i+vec3(0., 1., 0.));\n    float d = random(i+vec3(1., 1., 0.));\n    float e = random(i+vec3(0., 0., 1.));\n    float f = random(i+vec3(1., 0., 1.));\n    float g = random(i+vec3(0., 1., 1.));\n    float h = random(i+vec3(1., 1., 1.));\n    \n    vec3 u = fr*fr*(3.-2.*fr);\n    \n    return mix(\n    mix(mix(a, b, u.x), mix(c, d, u.x), u.y), \n    mix(mix(e, f, u.x), mix(g, h, u.x), u.y),\n    u.z\n    );\n}\n\n\nfloat sdBox(in vec3 p, in vec3 box) {\n   vec3 d = abs(p) - box;\n   return -min(max(d.x, d.y), 0.0) - length(max(d.xy, 0.0));\n}\n\nfloat sdSphere(vec3 p, float r){\n    return length(p) - r;\n}\n\nvec2 intersect(vec3 p){\n    vec2 res = vec2(ID_NONE, 20.);\n    vec2 obj;\n    \n    obj = vec2(ID_FLOOR, sdBox(p, vec3(5.+(noise(p/3.+iTime)-.5), 2.5+noise(p/3.+iTime), 3.)));\n    if(obj.y < res.y)res = obj;\n    \n    obj = vec2(ID_LIGHT, sdSphere(p - lightPos, .01));\n    if(obj.y < res.y)res = obj;\n    \n    return res;\n}\n\nvec2 rayMarching(vec3 ro, vec3 rd){\n    vec3 ray;\n    vec2 obj;\n    float t = TMIN;\n    int i;\n    for(i = 0;i < 256;i++){\n        ray = ro + rd*t;\n        obj = intersect(ray);\n        if(obj.y < EPS || t > TMAX){\n            break;\n        }\n        t += 0.7*obj.y;\n    }\n    if(i > 255 || t>TMAX)obj.x=ID_NONE, t = -1.;\n    return vec2(obj.x, t);\n}\n\nvec3 genNormal(vec3 p){\n    vec2 e = vec2(EPS, 0.);\n    return normalize(vec3(\n        intersect(p+e.xyy).y - intersect(p-e.xyy).y,\n        intersect(p+e.yxy).y - intersect(p-e.yxy).y,\n        intersect(p+e.yyx).y - intersect(p-e.yyx).y\n    ));\n}\n\nvec3 lighting(vec2 obj, vec3 pos, vec3 rd, vec3 nor){\n    float tile = 10.;\n    vec3 mate = mod(pos.x, tile) < tile/2. ? mod(pos.z, tile) < tile/2. ? vec3(0.01) : vec3(0.1) : mod(pos.z, tile) < tile/2. ? vec3(0.1) : vec3(0.01);\n    vec3 mainDir = normalize(lightPos-pos);\n    \n    float mainDif = clamp(dot(mainDir, nor), 0., 1.);\n    float mainSha = rayMarching(pos+EPS*nor, mainDir).x == ID_LIGHT ? 1.:0.;\n    float subDif = clamp(dot(normalize(vec3(-1., 0., 0.)), nor), 0., 1.);\n    float bounceDif = clamp(dot(normalize(vec3(0., -1., 0.)), nor), 0., 1.);\n    \n    vec3 col = 3.*mate*vec3(1.6, 1.6, 1.6)*mainDif*mainSha;\n    col += 2.*mate*vec3(.6, .8, 1.2)*subDif;\n    col += 2.*mate*vec3(.8)*bounceDif;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 p = (fragCoord*2.-iResolution.xy)/min(iResolution.x, iResolution.y);\n    \n    vec3 ro = vec3(0., 0., 20.-iTime*6.);\n    vec3 rd = vec3(p, -1.5);\n    rd.zy = rotate(.1*(noise(ro/2.)-1.))*rd.zy;\n    rd.xz = rotate(radians(mouseX))*rd.xz;\n    rd = normalize(rd);\n    \n    vec2 obj = rayMarching(ro, rd);\n    vec3 pos = ro+rd*obj.y;\n    vec3 nor = genNormal(pos);\n    vec3 col = .5*vec3(.4, .75, 1.) - .7*rd.y;\n    col = mix(col, .5*vec3(.7, .75, .8), exp(-10.*rd.y));\n    col = vec3(0.);\n\n    if(obj.x == ID_FLOOR)col = lighting(obj, pos ,rd, nor);\n    else if(obj.x == ID_LIGHT)col = vec3(1.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}