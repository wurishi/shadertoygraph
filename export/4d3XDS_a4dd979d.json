{"ver":"0.1","info":{"id":"4d3XDS","date":"1461096186","viewed":366,"name":"Together we shine","username":"Andre","description":"I'm still multiplying with distance fields :)","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","distancefields","numbers","digits"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float heart(vec2 i) {\n    // From: https://www.shadertoy.com/view/ldVGzt by coyote & Fabrice\n    i.y += .034;\n    i *= 1.1;\n    return sqrt(dot(i, i) - abs(i.x)*i.y);\n}\n\nfloat diamond(vec2 i) {\n    i = abs(i);\n    return (i.x+i.y);\n}\n\nfloat square(vec2 i) {\n    i = abs(i);\n    return max(i.x,i.y);\n}\n\nfloat circle(vec2 i) {\n    return length(i);\n}\n\nfloat honeycomb(vec2 i) {\n    i.x*=.866;\n    i = abs(i);\n    return max(i.x+i.y*.5,i.y);\n}\n\nfloat segment(vec2 uv)\n{\n    uv = abs(uv);\n\tfloat f = max(0.45+uv.x,0.225+uv.y+uv.x);\n    return f;\n}\n\nfloat m(float a, float b)\n{\n    return min(a,b);\n    //return 1./(1./a+1./b);\n    //return length(vec2(a,b));\n}\n\nfloat sevenSegment(vec2 uv,int num)\n{\n\tfloat seg= 5.0;\n\tseg = (num!=-1 && num!=1 && num!=4                    ?m(segment(uv.yx+vec2(-0.450, 0.000)),seg):seg);\n\tseg = (num!=-1 && num!=1 && num!=2 && num!=3 && num!=7?m(segment(uv.xy+vec2( 0.225,-0.225)),seg):seg);\n\tseg = (num!=-1 && num!=5 && num!=6                    ?m(segment(uv.xy+vec2(-0.225,-0.225)),seg):seg);\n\tseg = (num!=-1 && num!=0 && num!=1 && num!=7          ?m(segment(uv.yx+vec2( 0.000, 0.000)),seg):seg);\n\tseg = (num==0 || num==2 || num==6 || num==8           ?m(segment(uv.xy+vec2( 0.225, 0.225)),seg):seg);\n\tseg = (num!=-1 && num!=2                              ?m(segment(uv.xy+vec2(-0.225, 0.225)),seg):seg);\n\tseg = (num!=-1 && num!=1 && num!=4 && num!=7          ?m(segment(uv.yx+vec2( 0.450, 0.000)),seg):seg);\n\t\n\treturn seg;\n}\n\nvec2 rotate(vec2 i,float a) {\n   return i *mat2(cos(a), -sin(a),\n                  sin(a), cos(a));\n}\n\nfloat getShape(int nr, vec2 uv) {\n    \n    //return circle2(uv);\n        \n    bool outline = false;\n    if (nr<10)\n        return sevenSegment(uv,nr)-.3;\n    else {\n        outline = (nr>=15);\n        nr = int(mod(float(nr),5.));\n    }\n\n    float x = 0.0;\n    if (nr==0) x = heart    (uv); else\n    if (nr==1) x = diamond  (uv); else\n    if (nr==2) x = square   (uv); else\n    if (nr==3) x = circle   (uv); else\n               x = honeycomb(uv);\n        \n    return outline ? 0.15+abs(x-.1) : x;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv1 = (fragCoord.xy-iResolution.xy*.5) / iResolution.y;\n    vec2 uv = uv1*5.0;\n    \n    float c = 1.0;\n    if (iMouse.w>0.5)\n        c = texture(iChannel1,uv-iMouse.xy*5.0/iResolution.xy).r*1.2-.1;\n    float gt = iTime*.5;\n    for (float i = 0.0; i< 20.0; i++) {\n      gt += i*1.72;\n      c *= clamp(getShape(int(i),1.6*(uv+\n                            vec2(sin(gt*0.9)*2.+cos(gt*(i/37.))\n                                ,sin(gt*0.7)+cos(gt*(i/23.)))))-.18,0.0,1.7);\n    }\n    \n\tfragColor = vec4(clamp(\n                       mix( vec3(1.7),\n                            vec3(.7,.7,1.)\n                           *(0.5+texture(iChannel0,vec2(uv1.y*4.,uv.x)+uv1*vec2(7.0,.13)).rgr),\n                            smoothstep(.0,10.,sqrt(c))\n                       *.15*max(-.2,6.-length(uv1)))\n                       *.18*(5.-length(uv))\n                       ,0.0,1.0)\n                     ,1.0);\n}","name":"Image","description":"","type":"image"}]}