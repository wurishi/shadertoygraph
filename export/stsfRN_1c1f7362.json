{"ver":"0.1","info":{"id":"stsfRN","date":"1650605278","viewed":103,"name":"Conway's Shader of Life","username":"komrad36","description":"SPACE to pause\nCLICK to paint cells\nCLICK WHILE HOLDING E to erase cells\nR to randomize all\nC to clear all","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["game","conway","gameoflife","cellularautomata","gol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    fragColor = vec4(vec3(0.82), 1.0);\n    int size = min(int(iResolution.x) / kCols, int(iResolution.y) / kRows);\n    ivec2 xy = ivec2(fragCoord.x, iResolution.y - fragCoord.y);\n    if (any(greaterThanEqual(xy, size * ivec2(kCols, kRows))))\n        return;\n    ivec2 cell = xy / size;\n    ivec2 border = xy % size;\n    border = min(border, size - border);\n    float b = float(min(border.x, border.y));\n    float f = texelFetch(iChannel0, cell, 0).x;\n    vec3 c = mix(vec3(0.3, 0.88, 0.4), vec3(0.8, 0.25, 0.3), min(1.0, 1.3 * f));\n    c = f > 1.1 ? mix(vec3(0.8, 0.25, 0.3), vec3(0.5), min(1.0, 0.65 * (f - 1.1))) : c;\n    c = f == 0.0 || b <= 0.02 * float(size) ? vec3(0.0) : c;\n    fragColor.xyz = c;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const int kRows = 90;\nconst int kCols = 160;\nconst float kStep = 1.0/20.0;","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int CheckNeighbor(int x, int y)\n{\n    x = x < 0 ? x + kCols : x >= kCols ? x - kCols : x;\n    y = y < 0 ? y + kRows : y >= kRows ? y - kRows : y;\n    float age = texelFetch(iChannel0, ivec2(x, y), 0).x;\n    return int(age > 0.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    ivec2 xy = ivec2(fragCoord);\n    if (any(greaterThanEqual(xy, ivec2(kCols, kRows))))\n        return;\n    vec4 f = texelFetch(iChannel0, xy, 0);\n    int size = min(int(iResolution.x) / kCols, int(iResolution.y) / kRows);\n    ivec2 mouseCell = ivec2(iMouse.x, iResolution.y - iMouse.y) / size;\n    bool mouseDown = iMouse.z > 0.0 && all(equal(mouseCell, xy));\n    bool turnOff = mouseDown && texelFetch(iChannel1, ivec2(69, 0), 0).x != 0.0;\n    float age = f.x;\n    bool paused = iFrame != 0 && bool(f.y);\n    float nextTime = iFrame != 0 ? f.z : 0.0;\n    paused = bool(int(paused) ^ int(texelFetch(iChannel1, ivec2(32, 1), 0).x != 0.0));\n    if (!paused && iTime >= nextTime)\n    {\n        int c = CheckNeighbor(xy.x - 1, xy.y - 1);\n        c += CheckNeighbor(xy.x - 1, xy.y    );\n        c += CheckNeighbor(xy.x - 1, xy.y + 1);\n        c += CheckNeighbor(xy.x    , xy.y - 1);\n        c += CheckNeighbor(xy.x    , xy.y + 1);\n        c += CheckNeighbor(xy.x + 1, xy.y - 1);\n        c += CheckNeighbor(xy.x + 1, xy.y    );\n        c += CheckNeighbor(xy.x + 1, xy.y + 1);\n        age = c == 3 || (age > 0.0 && c == 2) ? age > 0.0 ? age + kStep : 1e-7 : 0.0;\n        nextTime = nextTime + kStep < iTime ? iTime + kStep : nextTime + kStep;\n    }\n    if (iFrame == 0 || texelFetch(iChannel1, ivec2(82, 1), 0).x != 0.0)\n    {\n        float t = mod(iTime, 83.10928) + 1e-3 * float(xy.y * kCols + xy.x);\n        age = fract(sin(mod(91.3458 * t, 6.28318530718)) * 47453.5453) > 0.8 ? 1e-7 : 0.0;\n    }\n    age = turnOff || texelFetch(iChannel1, ivec2(67, 1), 0).x != 0.0 ? 0.0 : age;\n    age = mouseDown && !turnOff && age == 0.0 ? 1e-7 : age;\n    fragColor = vec4(age, float(paused), nextTime, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}