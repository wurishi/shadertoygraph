{"ver":"0.1","info":{"id":"slX3z4","date":"1621608041","viewed":55,"name":"Polar Checker","username":"kithy","description":"mapping checker texture to raymarching sphere","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","polarcoordinate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITR 64\n#define EPS 0.001\n#define SCALE 5.0\n#define PI 3.141592\n#define TWO_PI 6.2831\n\nmat2 rot(float a){\n\tfloat s=sin(a);\n\tfloat c=cos(a);\n\treturn mat2(c,-s,s,c);\n}\n\nfloat sdSphere(vec3 p){\n\treturn length(p)-0.8;\n}\n\nvec3 genNormal(vec3 p){\n\tvec3 normal=vec3(\n\t\tsdSphere(p+vec3(EPS,0.0,0.0))-sdSphere(p+vec3(-EPS,0.0,0.0)),\n\t\tsdSphere(p+vec3(0.0,EPS,0.0))-sdSphere(p+vec3(0.0,-EPS,0.0)),\n\t\tsdSphere(p+vec3(0.0,0.0,EPS))-sdSphere(p+vec3(0.0,0.0,-EPS))\n\t\t);\n\treturn normalize(normal);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec3 ro=vec3(0.0,0.0,-6.0);\n\tvec3 lookat=vec3(0.0,0.0,0.0);\n\tfloat zoom=5.0;\n\n\tvec3 f=normalize(lookat-ro);\n\tvec3 r=normalize(cross(vec3(0.0,1.0,0.0),f));\n\tvec3 u=cross(f,r);\n\tvec3 c=ro+f*zoom;\n\tvec3 i=c+uv.x*r+uv.y*u;\n\tvec3 rd=normalize(i-ro);\n\n\tfloat dS,dO;\n\tvec3 p,normal;\n\n\t\n\n\t//Raymarching\n\tfor(int i=0;i<ITR;i++){\n\t\tp=ro+rd*dO;\n\t\tdS=sdSphere(p);\n\t\tnormal=genNormal(p);\n\t\tif(dS<EPS)break;\n\t\tdO+=dS;\n\n\t}\n\t\n\tp.xz*=rot(iTime);\n\tp.xy*=rot(iTime);\n\tvec3 col=vec3(0.0);\n\n\tvec2 checker;\n\n\t//Polar Coordinate\n\tif(dS<EPS){\n\t\tfloat x=atan(p.x*TWO_PI,p.y);\n\t\tfloat y=length(p);\n\n\t\t//2D checker pattern\n\t\tchecker=floor(SCALE*p.xy*vec2(x,y));\n\t\tcol=vec3(mod(checker.x+checker.y,2.0));\n\t}\n\t\n\tfragColor=vec4(col+normal,1.0);\n}","name":"Image","description":"","type":"image"}]}