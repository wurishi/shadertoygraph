{"ver":"0.1","info":{"id":"MdVBRD","date":"1528018737","viewed":391,"name":"Steps..","username":"asis5528","description":"Made a small 2d scene by combining shapes........","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["shapes","steps"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Md2XzV","filepath":"https://soundcloud.com/sergio-sergio-815961212/baby-animals-sleeping-short-bedtime-lullaby-brahms-lullaby-lullaby-and-goodnight","previewfilepath":"https://soundcloud.com/sergio-sergio-815961212/baby-animals-sleeping-short-bedtime-lullaby-brahms-lullaby-lullaby-and-goodnight","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n#define asp 1920./1080.\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5,0.49) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.01),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.02),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat star(vec2 uv1){\n   \n    float time = iTime;\n    vec2 lst = uv1-vec2(0.5*asp,0.5);\n    float r =0.1+0.025*cos(atan(lst.y,lst.x)*6.+0.);\n\tfloat c1 = smoothstep(r,r-0.1,length(uv1-vec2(0.5*asp,0.5)));\n\treturn c1;\n}\t\n\n\n\nfloat circle(vec2 uv,float radius){\n    float k = 0.0;\n     uv.x/=1.9*1.3; \n    if (uv.y<0.0){\n       \n        k= smoothstep(radius,radius-0.01,length(uv));\n    }\t\n    return k; }\n    \nfloat circle3(vec2 uv,float radius){\n    float k = 0.0;\n     uv.x/=2.56*1.3; \n    if (uv.y<0.0){\n       \n        k= smoothstep(radius,radius-0.01,length(uv));\n    }\t\n    return k; }    \nfloat cir(vec2 uv,float radius,float blur){\n\tfloat c = smoothstep(radius,radius-blur,length(uv));\n    return c;\n}\n\nfloat box2(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5,0.49) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.005),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.02),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat box3(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5,0.49) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.005),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.02),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\n\n\nfloat circle2(vec2 uv,float radius){\n    \tfloat k = 0.0;\n     uv.x/=1.1; \n    if (uv.y>0.0){\n       \n        k= smoothstep(radius,radius-0.01,length(uv));\n    }\t\n    return k; }\n\nfloat box1(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5,0.49) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\n\nfloat box4(in vec2 _st, in vec2 _size){\n    _st = _st-vec2(0.2185*asp,0.0);\n    _size = vec2(0.5,0.49) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.01),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.01),\n                    vec2(1.0,1.)-_st);\n    return uv.x*uv.y;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    \n    vec2 uv = fragCoord/vec2(iResolution.x,iResolution.y);\n\tfloat gradient = length(uv.y);\n    vec2 cuv = uv;\n    vec4 background = vec4(0.7,0.5,0.1,1.)*length(uv.x*2.);\n    background=background/2.+ box(uv-vec2(-0.2,0.3),vec2(0.2,0.2))*texture(iChannel0,(uv+vec2(0.32,0.15))*vec2(2.8,2.8)).z;\n    float bb = box1(uv-vec2(-0.2,0.3),vec2(0.22,0.23))-box1(uv-vec2(-0.2,0.3),vec2(0.2,0.2));\n    background += bb/2.;\n    uv *= 1.9;\n    \n    \n    //ladder sticks,i don't know what that's called\n    \n    vec4 b = vec4(box(uv+vec2(0.43,0.0),vec2(0.03,0.6)));\n    b+= vec4(box(uv+vec2(0.23,-0.2),vec2(0.03,0.6)));\n    b+= vec4(box(uv+vec2(0.0,-0.4),vec2(0.03,0.6)));\n    b+= vec4(box(uv+vec2(-0.2,-0.6),vec2(0.03,0.6)));\n    b+= vec4(box(uv+vec2(-0.4,-0.78),vec2(0.03,0.56)));\n    b+= vec4(box(uv+vec2(-0.6,-0.98),vec2(0.03,0.56)));\n    b+= vec4(box(uv+vec2(-0.8,-1.18),vec2(0.03,0.56)));\n    b+= vec4(box(uv+vec2(-1.,-1.38),vec2(0.03,0.56)));\n    b+= vec4(box(uv+vec2(-1.2,-1.58),vec2(0.03,0.56)));\n    \n    \n    \n    \n    vec2 st = uv;\n    st.x*=1920./1080.;\n    st -= vec2(0.5)-vec2(0.17,-0.27);\n    // rotate the space\n    st = rotate2d( cos(44.4/5.)*3.12 ) * st;\n    // move it back to the original place\n    st += vec2(0.5)+vec2(-0.17,0.27);\n    \n    b=vec4(clamp(clamp(b,0.0,1.)+clamp(box(st-vec2(-0.9,0.14),vec2(3.9,0.06)),0.0,1.),0.0,1.));\n    \n    b*=vec4(0.811, 0.670, 0.388,1.);\n    \n    \n    \n    \n    ////////////////////////sticks finished\n    \n    \n    vec2 Frag = fract(uv*1.);\n    vec2 id = floor(uv*5.);\n \t//////////stairs steps ..........\n    float stairs = id.y-id.x;\n    float k = length((uv.y+(1.-iMouse.y)/100.)*1.2);\n    // Output to screen\n    \n    stairs = clamp(stairs,0.,1.);\n    float gra = 1.-k;\n    float proc = clamp((1.-stairs),0.0,0.7)*(1.-st.x)/2.;\n    \n    \n    \n    \n    \n    \n    b = clamp(b,0.0,1.);\n    \n    fragColor = clamp(clamp(background*(1.-proc*22222.),0.0,1.)*clamp((1.-b*4.),0.0,1.),0.0,1.);\n    fragColor = clamp(fragColor,0.,1.); \n    b*=stairs;\n    fragColor += clamp(clamp(vec4(proc/2.,proc/1.5,proc/2.,1.),0.0,1.)+clamp(b*k*0.8,0.,1.),0.0,1.);\n    \n    vec2 off = vec2(-0.4,0.225);\n    \n\tvec4 c;\n    cuv.x*=asp;\n    cuv -= vec2(0.5,0.5-0.11*2.)-off;\n    cuv = rotate2d(sin(iTime*2.)/8.)*cuv;\n    cuv+= vec2(0.5,0.5-0.11*2.)-off;\n    c =clamp(c+ box2(cuv+off,vec2(0.17,0.03)),0.0,1.);\n    \n    \n    \n    c =clamp(c+ box2(cuv+vec2(0.0,0.2)+off,vec2(0.2,0.005)),0.0,1.);\n    \n    \n    \n    \n    \n    \n    \n    \n    vec2 luv = cuv;\n    luv -= vec2(0.5-0.07,0.5-0.08/4.)-off;\n    luv = rotate2d(6.08)*luv;\n    luv += vec2(0.5-0.07,0.5-0.08/4.)-off;\n    \n    c =clamp(c+ box3(luv+vec2(0.07,0.11)+off,vec2(0.04,0.25)),0.0,1.);\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    vec2 ruv = cuv;\n    ruv -= vec2(0.5+0.07,0.5-0.08/4.)-off;\n    ruv = rotate2d(12.7)*ruv;\n    ruv += vec2(0.5+0.07,0.5-0.08/4.)-off;\n    \n    c =clamp(c+ box3(ruv+vec2(-0.07,0.11)+off,vec2(0.04,0.25)),0.0,1.);\n\t\n    \n    float ring = circle(cuv-vec2(0.505*asp,0.087),0.087*1.02)-circle3(vec2(cuv.x,cuv.y)-vec2(0.505*asp,0.087),0.067*1.02);\n    \n    \n    \n    c+=ring;\n    float ring2 = circle2(cuv-vec2(0.51*asp,0.29),0.082)-circle2(cuv-vec2(0.51*asp,0.29),0.068);\n    c+=ring2;\n    cuv -= vec2(0.5+0.07,0.5-0.08/4.)-off;\n    cuv = rotate2d(100.15)*cuv;\n    cuv += vec2(0.5+0.07,0.5-0.08/4.)-off;\n    c = clamp(c+box2(cuv-vec2(0.07,0.09)+off,vec2(0.03,0.2)),0.0,1.);\n   \t\n    uv + vec2(0.5);\n   \tuv = rotate2d( sin(iTime/2.)*3.12 ) * st;\n \tuv - vec2(0.5);\n    uv+=vec2(1.8);\n   k = clamp(k,0.0,1.);\n     fragColor= clamp(fragColor*(1.-c*2.),0.0,1.);\n    fragColor += clamp(clamp(c,0.0,1.)*gradient/1.5,0.0,1.)*texture(iChannel1,cuv*33.)*exp(2.2);\n    fragColor = clamp(fragColor+clamp(c.x,0.0,0.2),0.0,1.);\n vec2 uv1 = fragCoord/iResolution.xy;\n\t uv1.x*=asp;\n    uv1 -= vec2(0.5*asp,0.5+0.5);\n   \tuv1 = rotate2d(sin( iTime*2.)/6. ) * uv1;\n \tuv1 +=vec2(0.5*asp,0.5+0.5);\n    \n    fragColor+=star(uv1)+box4(uv1-vec2(0.0,0.3),vec2(0.01,0.6));\n    vec2 uv2 = fragCoord/iResolution.xy;\n\t uv2.x*=asp;\n    uv2 -= vec2(0.6*asp,0.5+0.5);\n   \tuv2 = rotate2d(sin( iTime*2.+30.)/3. ) * uv2;\n \tuv2 +=vec2(0.6*asp,0.5+0.5);\n    \n    fragColor+=(star(uv2-vec2(0.2,0.0))+box4(uv2-vec2(0.2,0.3),vec2(0.01,0.6)))*vec4(0.7,0.5,1.2,1.);\n    \n    vec2 uv3 = fragCoord/iResolution.xy;\n    vec2 bu = uv3;\n    vec2 uv4 = uv3;\n    \n    vec2 uv5 = uv3;\n   \t\n    //cat body\n    uv3-=vec2(0.5);\n    uv3.x*=asp;\n    uv3*=0.9;\n    uv3.y*=1.1-uv3.y/2.;\n    uv3.y*=1.1;\n    float cat_body = cir(uv3,0.2,0.01);\n    \n    //cat head\n    uv4-=vec2(0.36,0.45);\n    uv4.x*=asp;\n    uv4 = rotate2d(5.69)*uv4;\n    uv4.x*=1.0;\n    uv4.y-=abs(uv4.x)*0.17;\n    float cat_head = cir(uv4,0.13,0.01);\n    \n    //cat ears\n    uv5-=vec2(0.35,0.52);\n    \n    uv5.x*=asp;\n   \t\n    uv5 = rotate2d(12.80)*uv5;\n    \t\n    float ear_base = cir(uv5,0.13,0.01);\n    float box_cut = box(uv5+vec2(0.4,0.5),vec2(0.1,0.22));\n    float box_cut_1 = box(uv5+vec2(0.4,0.55),vec2(1.22,0.20));\n    uv5.x*=1.2;\n    float cir_cut = cir(uv5-vec2(-0.09,0.15),0.15,0.02);\n    //uv5.y-=(uv5.x*2.+0.06)*0.3;\n    float cat_ears = clamp(((ear_base-box_cut)-cir_cut)-box_cut_1,0.0,1.);\n    \n    \n    \n    float cat =clamp(cat_ears+cat_head+cat_body,0.0,1.);\n    \n     uv3 = fragCoord/iResolution.xy;\n   \n     bu = uv3;\n     uv4 = uv3;\n    \n     uv5 = uv3;\n   \t\n    //cat body\n    uv3-=vec2(0.5);\n    uv3*=1.1;\n    uv3.x*=asp;\n    uv3*=0.9;\n    uv3.y*=1.1-uv3.y/2.;\n    uv3.y*=1.1;\n     cat_body = cir(uv3,0.2,0.01);\n    \n    //cat head\n    uv4-=vec2(0.36,0.45);\n    uv4*=1.1;\n    uv4.x*=asp;\n    uv4 = rotate2d(5.69)*uv4;\n    uv4.x*=1.0;\n    uv4.y-=abs(uv4.x)*0.17;\n     cat_head = cir(uv4,0.13,0.01);\n    \n    //cat ears\n    uv5-=vec2(0.35,0.52);\n    uv5*=1.1;\n    uv5.x*=asp;\n   \t\n    uv5 = rotate2d(12.80)*uv5;\n    \t\n     ear_base = cir(uv5,0.13,0.01);\n     box_cut = box(uv5+vec2(0.4,0.5),vec2(0.1,0.22));\n     box_cut_1 = box(uv5+vec2(0.4,0.55),vec2(1.22,0.20));\n    uv5.x*=1.1;\n     cir_cut = cir(uv5-vec2(-0.09,0.15),0.15,0.02);\n    //uv5.y-=(uv5.x*2.+0.06)*0.3;\n     cat_ears = clamp((ear_base-box_cut-box_cut_1)-cir_cut,0.0,1.);\n    \n    \n    \n     float cat_1 =cat_ears+cat_head+cat_body;\n    float cat_2 = clamp(cat,0.0,1.)-clamp(cat_1,0.0,1.);\t\n   \tfloat cat_3 = mix(cat,cat_2,0.5);\n    vec2 uv6 = bu;\n    uv6 -= 0.5;\n    uv6+=vec2(0.16,0.05);\n    uv6.x*=asp;\n    uv6 = rotate2d(12.80)*uv6;\n    float cat_eye = clamp(cir(uv6,0.04,0.01)-cir(uv6-vec2(0.0,0.006),0.04,0.01),0.0,1.0);\n    uv6.x*=0.7;\n    uv6+=vec2(-0.05,0.13);\n     uv6 = rotate2d(31.36)*uv6;\n    float cat_m = clamp(cir(uv6,0.08,0.01)-cir(uv6+vec2(0.001,0.003),0.08,0.01)-(box(uv6+vec2(0.5),vec2(1.2,0.07))+box(uv6+vec2(0.44,0.5),vec2(0.1,0.3))),0.0,1.);\n     uv6 = rotate2d(43.71)*uv6; \n    uv6+=vec2(0.00,0.025);\n    cat_m += clamp(cir(uv6,0.08,0.01)-cir(uv6+vec2(0.001,0.003),0.08,0.01)-(box(uv6+vec2(0.5),vec2(1.2,0.07))+box(uv6+vec2(0.44,0.5),vec2(0.1,0.3))),0.0,1.);\n    \n    //fragColor = vec4(cat_eye+cat_3+cat_m);\n    //fragColor =mix(vec4(clamp(cat,0.0,1.0)),fragColor,0.6);\n \n    //fragColor = vec4(gradient);\n    //fragColor = *vec4(background);\n}","name":"Image","description":"","type":"image"}]}