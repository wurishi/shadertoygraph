{"ver":"0.1","info":{"id":"XlSfzm","date":"1548809638","viewed":413,"name":"My First Audio Processing Shader","username":"Vil","description":"Learning how to work with audio textures...","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d","audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Sound texture is 512x2.\n// Row 1 is the raw audio waveform (mono, not stereo)\n// Row 0 is the FFT of the waveform\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int ROWS = 2;\n    float MAX_AMPLITUDE = 1.0;\n    float MIN_AMPLITUDE = 0.0;\n    \n    vec3 ROW_COLORS[3];\n    ROW_COLORS[0] = vec3(1.0, 0.0, 0.0);\n    ROW_COLORS[1] = vec3(0.0, 1.0, 0.0);\n    ROW_COLORS[2] = vec3(0.0, 0.0, 1.0);\n    \n    float row_height = iResolution.y / float(ROWS);\n    float row_f = fragCoord.y / row_height;\n    float amplitude = texelFetch(iChannel0, ivec2(int(fragCoord.x), int(floor(row_f))), 0).r;\n    float y = floor(row_f) * row_height + (amplitude - MIN_AMPLITUDE) / (MAX_AMPLITUDE - MIN_AMPLITUDE) * row_height;\n    \n    vec3 color = vec3(0.0);\n    // Waveform color\n    color = mix(ROW_COLORS[int(floor(row_f))], color, smoothstep(7.0, 10.0, abs(fragCoord.y - y)));\n    // Grid lines\n    color = mix(vec3(0.2), color, smoothstep(0.0, 3.0, fract(row_f) * row_height));\n    \n    if (fragCoord.x > 512.0) {\n        color = vec3(0.1);\n    }\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}