{"ver":"0.1","info":{"id":"Dd3SW2","date":"1680411783","viewed":120,"name":"EAN13 barcode generator","username":"icantcomeupwithausername","description":"generates a leading 0 EAN13 barcode","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["barcode","ean13"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv *= 0.2;\n    uv.x += 50.0 / iResolution.x;\n    uv.y -= 0.04;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define BARCODE_LINES 95\n#define BARCODE_HALF_SIZE 42\n#define BARCODE_DATA_HEIGHT 40\n#define GUARD_HEIGHT 45\n\n//code must be 11 digits, last digit is a check digit\nint barcodeNumber[12] = int[12](0, 7, 1, 6, 6, 2, 0, 4, 0, 2, 4, 0);\n\n//all patterns have odd parity\nconst int leftSidePatterns[7 * 10] = int[7 * 10](\n     0, 0, 0, 1, 1, 0, 1,\n     0, 0, 1, 1, 0, 0, 1,\n     0, 0, 1, 0, 0, 1, 1,\n     0, 1, 1, 1, 1, 0, 1,\n     0, 1, 0, 0, 0, 1, 1,\n     0, 1, 1, 0, 0, 0, 1,\n     0, 1, 0, 1, 1, 1, 1,\n     0, 1, 1, 1, 0, 1, 1,\n     0, 1, 1, 0, 1, 1, 1,\n     0, 0, 0, 1, 0, 1, 1\n);\n\nconst int rightSidePatterns[7 * 10] = int[7 * 10](\n     1, 1, 1, 0, 0, 1, 0,\n     1, 1, 0, 0, 1, 1, 0,\n     1, 1, 0, 1, 1, 0, 0,\n     1, 0, 0, 0, 0, 1, 0,\n     1, 0, 1, 1, 1, 0, 0,\n     1, 0, 0, 1, 1, 1, 0,\n     1, 0, 1, 0, 0, 0, 0,\n     1, 0, 0, 0, 1, 0, 0,\n     1, 0, 0, 1, 0, 0, 0,\n     1, 1, 1, 0, 1, 0, 0\n);\n\nint calculateCheckDigit() {\n    int odd = 0;\n    int even = 0;\n    \n    for(int i = 0; i < barcodeNumber.length(); i++) {\n        if((i + 1) % 2 == 0) {\n            odd += barcodeNumber[i];\n        } else {\n            even += barcodeNumber[i];\n        }\n    }\n    \n    even *= 3;\n    \n    int sum = odd + even;\n    sum %= 10;\n    \n    return 10 - sum;\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//draw bars\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 uv = ivec2(fragCoord);\n    fragColor = vec4(1.0);\n    \n    barcodeNumber[barcodeNumber.length() - 1] = calculateCheckDigit();\n    \n    if(uv.x <= BARCODE_LINES) {\n        //draw left half of barcode\n        if(uv.x - 3 < BARCODE_HALF_SIZE) {\n            //draw first guard \n            if(uv.x < 3 && uv.y > int(iResolution.y) - GUARD_HEIGHT) {\n                fragColor = vec4(float(uv.x % 2));\n            //draw data\n            } else if(uv.y > int(iResolution.y) - BARCODE_DATA_HEIGHT) {\n                int bit = 1 - leftSidePatterns[((uv.x - 3) % 7) + 7 * barcodeNumber[(uv.x - 3) / 7]];\n                fragColor = vec4(float(bit));\n            }\n        //draw right half\n        } else {\n            uv.x -= BARCODE_HALF_SIZE + 2;\n            \n            //draw second guard\n            if((uv.x < 6 || uv.x > BARCODE_HALF_SIZE + 4) && uv.y > int(iResolution.y) - GUARD_HEIGHT) {\n                fragColor = vec4(float(uv.x % 2));\n            //draw data\n            } else if(uv.y > int(iResolution.y) - BARCODE_DATA_HEIGHT) {\n                uv.x -= 1;\n                int bit = 1 - rightSidePatterns[((uv.x - 5) % 7) + 7 * barcodeNumber[(uv.x - 4) / 7 + 6]];\n                fragColor = vec4(float(bit));\n            }\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}