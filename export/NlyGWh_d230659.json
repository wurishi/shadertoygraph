{"ver":"0.1","info":{"id":"NlyGWh","date":"1637553156","viewed":112,"name":"A Simple Swirl","username":"dissonant","description":"Attempting some kind of swirl effect.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["swirl","vortex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(\n      c, -s,\n      s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates with 0,0 in the center of the screen\n    vec2 uv = (fragCoord-.5*iResolution.xy) / iResolution.y;\n    \n    // Possible inputs    \n\tfloat maxSpinRadians = 3.14159;\n    float spinDistance = 0.25;\n    vec2 origin = vec2(.5, 0.);\n\n\t// Calculate spin/rotation. Spin should intensify closer to origin.\n    float currentSpin = sin(iTime) * maxSpinRadians;\n    float d = length(uv - origin);       \n    float spinAmount = max(0., 1. - (d / spinDistance))\n        * currentSpin;\n\t\n\t// rotate.\n\tuv = rotate(uv - origin, spinAmount);\n\t\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    /*\n    float axisWidth = 0.005;\n    if(abs(uv.x) < axisWidth || abs(uv.y) < axisWidth)\n        col = vec3(1., .0, .0);\n    */\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}