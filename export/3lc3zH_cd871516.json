{"ver":"0.1","info":{"id":"3lc3zH","date":"1575554057","viewed":492,"name":"Infinite Cube Zoom","username":"bitless","description":"Another experiment with hexagons.\nPrevious was https://www.shadertoy.com/view/wdVSDy","likes":42,"published":1,"flags":0,"usePreview":0,"tags":["2d","cube","zoom","hexagon","infinte"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: bitless\n// Title: Infinite Cube Zoom\n// Thanks to Patricio Gonzalez Vivo & Jen Lowe for \"The Book of Shaders\"\n// and Fabrice Neyret (FabriceNeyret2) for https://shadertoyunofficial.wordpress.com/\n// and Inigo Quilez (iq) for  https://iquilezles.org/www/index.htm\n// and whole Shadertoy community for inspiration.\n\n#define PI 3.1415926\n#define hash1( n ) fract(sin(n)*43758.5453)\n#define hue(v) ( .6 + .6 * cos( 6.3*(v) + vec4(0,23,21,0) ) )\n\nfloat grad(float a) {\n    float  sm = .005;\n    float f = 1./3.;\n    a = mod(a+1.,2.);\n    return mix(\n                    mix(.45 //SIDE1\n                       ,.65 //SIDE2\n                       , smoothstep (sm,-sm,abs(1.+f-a)-f)) \n                    ,.95 // BOTTOM-TOP\n                    , smoothstep (f+sm, f-sm, 1.-abs(1.-a))); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 g)\n{\n    vec2 r = iResolution.xy\n        ,st = (g+g-r)/r.y;\n    st += st * length(st)*.1;\n\n    float a = atan(st.x,st.y)/PI\n\t\t,T = iTime;\n\n    float g1  = grad(a)\n        ,g2 = grad(a+1.);\n\n    float l = dot(abs(st),normalize(vec2(1.,1.73)));\n    l = log2(max(l,abs(st.x)))-T;\n    float fl = fract(l);\n    \n    float sm = fwidth(l)*1.5;\n\n    vec4 c = hue(a+T*.1)\n        ,c2 = mix(hue(hash1(floor(l)-1.)),c,.3)\n        ,c3 = mix(hue(hash1(floor(l)+1.)),c,.3);\n    c = mix(hue(hash1(floor(l))),c,.3);\n\n    if (mod(l,2.)<1.) {\n        c *= g1;\n        c2 *= g2;\n        c = mix(\n                mix(c2,c,smoothstep(-sm,sm,fl-.005))\n                ,c2*.75\n                ,smoothstep (.4, 0., fl)*0.25)\n           * (1.-smoothstep(.1,0.,abs(mod(a+1.,2./3.)-1./3.))*.25);}\n    else {\n        c *= g2;\n        c2 *= g1;\n        c3 *= g1;\n        c = mix(\n                mix(c2,c,smoothstep(-sm,sm,fl-.005))\n                ,c3*.5\n                ,smoothstep (.7, 1., fl)*.2);}\n\n    fragColor = c;\n}","name":"Image","description":"","type":"image"}]}