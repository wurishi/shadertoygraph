{"ver":"0.1","info":{"id":"csjczm","date":"1687535293","viewed":52,"name":"Test_Fractal_01","username":"GorDiv","description":"First test of the shadertoy. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandala"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t) {\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(1.0,1.0,1.0);\n    vec3 d = vec3(0.263,0.416,0.577);\n    \n    return a + b*cos( 6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 finalCol = vec3(0.0);\n    \n    vec2 uv0 = uv;\n    \n    for (float i = 0.0; i < 5.40; i++) {\n        uv *= 1.7;\n        uv = fract(uv);\n        uv -= 0.5;\n        \n        float d = length(uv) * exp(-length(uv0));\n        \n        vec3 col = palette(length(uv0) + i*.4 + iTime);\n        \n        d = sin(d*8.0 + iTime*0.4)/8.0;\n        d = abs(d);\n        //d = smoothstep(0.0, 0.2, d);\n        d = 0.01/d;\n        finalCol += col * d;\n    }\n\n\n    fragColor = vec4(finalCol*0.5,1.0);\n}","name":"Image","description":"","type":"image"}]}