{"ver":"0.1","info":{"id":"7scfzN","date":"1668020470","viewed":62,"name":"Blinds","username":"Sent","description":"Blinds","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sinRand (float x) {\n    return fract(sin(x*\n        43758.5453123));\n}\n\nfloat sinRand (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec2 vec2ar(float ar, float x, float y) {return vec2(ar*x, y);}\n\nfloat rect(vec2 st, vec2 bl, vec2 tr) {\n    bl = step(bl,st);       // bottom-left\n\ttr = step(vec2(1.)-tr,1.-st);   // top-right\n\treturn (bl.x * bl.y * tr.x * tr.y);\n}\n\nvec2 rot(vec2 st, float phi)\n{\n    float c = cos(phi);\n    float s = sin(phi);\n    mat2 M = mat2(s, -c, c, s);\n    return M*st;\n}\n\nfloat rect(vec2 st, vec2 bl, vec2 tr, float blur) {\n    if (blur <= 0.) {\n        return rect(st, bl, tr);\n    }\n    \n    float b = blur/2.;\n    bl = smoothstep(bl-b, bl+b, st);       // bottom-left\n\ttr = smoothstep(tr+b, tr-b, st);   // top-right\n\treturn (bl.x * bl.y * tr.x * tr.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float PI = 3.14159265359;\n    vec2 st = fragCoord.xy/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n\n    //st.x *= aspect;\n\n    vec2 max_pos = vec2(40., 2.);\n    st *= max_pos; // Scale the coordinate system by 10\n    vec2 ipos = floor(st);  // get the integer coords\n    vec2 fpos = fract(st);  // get the fractional coords\n\n    // color\n    vec3 color = vec3(.8);\n//==== Top Half ==========================================================\n    // in each cell\n    color *= pow(sinRand(ipos.x), .2);\n    color *= rect(fpos, vec2(.25, 0.), vec2(.45, 1.), .05);\n    \n    // Frame\n    color *= rect(ipos, vec2(0., max_pos.y/2.), \n                  vec2(max_pos.x, max_pos.y));\n    \n//==== Bot half =========================================================\n    vec3 colbot = vec3(.8);\n    // in each cell\n    colbot *= pow(sinRand(ipos.x), .2);\n    float phi =  PI/3.;\n    vec2 uv = rot( (fpos-vec2(.5)), phi );\n    colbot *= rect(uv, vec2(.25, 0.), vec2(.45, 1.), .05);\n    \n    // Frame    \n    colbot *= rect(ipos, vec2(0., 0.), vec2(max_pos.x, max_pos.y/4.));\n    \n    color += colbot;\n    \n    // filters\n    //color = smoothstep(0., 1., color);\n    \n    // output\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}