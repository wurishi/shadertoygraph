{"ver":"0.1","info":{"id":"DttXRl","date":"1685713182","viewed":75,"name":"VR MATH - POSTHELIOS 169","username":"POSTHELIOS","description":"value changes","likes":0,"published":1,"flags":64,"usePreview":0,"tags":["fractal","sdf","tutorial","intro","repetition","code","youtube","tuto","creative"],"hasliked":0,"parentid":"dl3Szs","parentname":"VR LINES 2 - POSTHELIOS"},"renderpass":[{"inputs":[{"id":"lsd3R4","filepath":"https://soundcloud.com/forescapedigital/razor-crest-basil-oglue-nomas?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/forescapedigital/razor-crest-basil-oglue-nomas?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n//TEST https://soundcloud.com/ethereios/floating-in-the-tranquil\n//https://soundcloud.com/forescapedigital/sets/facade-razor-crest-incl-basil-oglue-nomas-slam-duck-remixes\n// https://iquilezles.org/articles/palettes/\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    vec4 finalColorX = vec4(0.0);\n\n    for (float i = 0.0; i < 9.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n        float xx = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i * 0.004 + iTime * 0.004);\n\n        d = atan(d * 8.0 + iTime) / 7.0;\n        xx = tan(xx * 4.0 + iTime) / 3.5;\n        \n        d = abs(d);\n        xx = abs(xx);\n        \n\n        d = pow(0.005 / d, .9);\n        xx = pow(0.005 / xx, .9);\n\n        finalColor += col * xx;\n      //  finalColor += col * d;\n        //finalColor += col * d * xx;\n        //finalColorX += col * xx;\n    }\n\n    // Apply audio-reactivity\n    \n    float audioLevel = texture(iChannel1, vec2(0.5)).r;  // Fetch audio level from iChannel1\n\n   \n   //  float audioLevel2 = texture(iChannel1, vec2(2.5)).r;  // Fetch audio level from iChannel1\n    \n    finalColor *= audioLevel;\n    \n  //  finalColor *= audioLevel2;\n\n    // Enhance psychedelic colors\n    finalColor = pow(finalColor, vec3(1.2, 1.5, 1.8));\n    //finalColorX = pow(finalColorX, vec3(1.2, 1.5, 1.8));\n    \n    \n    // Enhance kaleidoscope effect\n    finalColor *= pow(1.9, abs(cos(iTime*audioLevel)));\n\n  \n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}