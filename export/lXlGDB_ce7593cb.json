{"ver":"0.1","info":{"id":"lXlGDB","date":"1707905370","viewed":128,"name":"simple retro grid","username":"woksan","description":"simple retro grid","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["retro"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float calc_light(vec2 frag_coord)\n{\n  vec2 pos = frag_coord/iResolution.xy * 2.0 - 1.0;\n  \n  float z_depth = abs(7.0 / pos.y);\n  float x_depth = pos.x * z_depth;\n  \n  float light = 0.0;\n  \n  if (pos.y < 0.0) {\n    float xd = x_depth;\n    float zd = z_depth;\n    \n    float c = cos(xd);\n    float s = sin(zd + iTime * 10.0);\n    \n    float d = abs(pos.y - 0.1);\n    float alpha = 8.0 * max(pow(c * c, 120.0), pow(s * s, 120.0)) * (d * d * d);\n    \n    light += alpha;\n  }\n  \n  float dx = length(pos * vec2(1.0, 10.0));\n  float dy = length(pos * vec2(1.0, 0.8));\n  light += (5.0 / dx + 1.0 / dy) * 0.05;\n  \n  return light;\n}\n\n\nvoid mainImage(out vec4 frag_color, in vec2 frag_coord)\n{\n  float light = calc_light(frag_coord);\n  frag_color = vec4(vec3(1.0, 0.3, 1.0) * light, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}