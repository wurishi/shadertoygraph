{"ver":"0.1","info":{"id":"NslSWX","date":"1619365614","viewed":33,"name":"surprise0009","username":"tangerine","description":"juuust learning this stuff","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur){\n    uv.x += sin(iTime/20.)/2. +.2;     \n    uv.y += sin(iTime/10.)/8. -.1;\n    float d = length(uv-p); \n    float c = smoothstep(r, r-blur, d); \n    return c;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //vec3 col = vec3(0.0);\n    float c = Circle(uv, vec2(.2,-.1), .4, .1);\n    c -= Circle(uv, vec2(.33,.08), .1, .05);\n    c -= Circle(uv, vec2(.07,.08), .1, .05);\n    c -= Circle(uv, vec2(.2,-.2), .2, .05);\n\n    col *= c;    \n    vec4 cola = vec4(.4);     \n    cola = vec4(col,1.0) + cola;\n    cola = smoothstep(.4, .6, cola) -.4;\n\n    // Output to screen\n    fragColor = cola;\n}","name":"Image","description":"","type":"image"}]}