{"ver":"0.1","info":{"id":"ttjGzR","date":"1558336279","viewed":272,"name":"fibonacci flower","username":"Derzo","description":"simple implementation of the fibonacci sequence","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fibonaccisequence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat fibonacci(in vec2 uv)\n{\n    for (int n=0; n<512; n++)\n    {\n        vec2 center = vec2(0.5, 0.5);\n        float numb = float(n);\n        vec2 circlePos = center;\n        \n        float angle = float(n)*radians(137.51);\n        float r = 0.02*sqrt(float(n));\n        circlePos.x += r*cos(angle);\n        circlePos.y += r*sin(angle);\n        \n        if( length(circlePos - uv) < 0.01)\n            return 1.-r;\n    }\n    return 0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3( fibonacci(uv));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}