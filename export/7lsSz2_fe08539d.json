{"ver":"0.1","info":{"id":"7lsSz2","date":"1626145600","viewed":272,"name":"Fire ball","username":"Vinicius_Jesus","description":"simple flame shape","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["fire","flames"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FLAMECOLOR vec3(50.0, 5.0, 1.0)\n#define PI 3.14159\n\nfloat FlameShape(vec2 uv) {\n    /*play with these values\n\n    try:\n        float flameControl1 = 4.5;\n        float flameControl2 = .5;\n    */\n    float flameControl1 = 5.;\n    float flameControl2 = 1.5;\n    \n    float a = mod(atan(uv.x,uv.y+2.),PI*2. )/flameControl1-PI/flameControl1;\n    float angle = PI-(.5+.25);\n    float d = length(uv-vec2(0., -2.)) * sin(angle+abs(a));\n    return smoothstep(0., flameControl2, d);\n}\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat R21 (vec2 p) {\n    return fract(sin(dot(p.xy, vec2(2.3245,5.234)))*123.5632145);\n}\n\nfloat NoiseValue (vec2 uv) {\n    vec2 gv = fract(uv);\n    vec2 id = floor(uv);\n    \n    gv = gv * gv * (3. - 2. * gv);\n\n    float a = R21(id);\n    float b = R21(id + vec2(1., 0.));\n    float c = R21(id + vec2(0., 1.));\n    float d = R21(id + vec2(1., 1.));\n\n    return mix(a, b, gv.x) + (c - a)* gv.y * (1. - gv.x) + (d - b) * gv.x * gv.y;\n}\n\nfloat SmoothNoise (vec2 uv) {\n    float value = 0.;\n    float amplitude = .5;\n\n    for (int i = 0; i < 8; i++) {\n        value += NoiseValue(uv) * amplitude;\n        uv *= 2.;\n        amplitude *= .5;\n    }\n\n    return value;\n}\n\nvec3 Flame(vec2 uv) {\n    uv *= 6.;\n    \n    vec3 col = vec3(0.);\n    float shape = FlameShape(uv);//smoothstep(0., 6.5, abs(uv.x)+abs(uv.y));\n\n    uv *= Rot(2.5);\n    \n    vec2 rn = vec2(0.);\n    rn.x = SmoothNoise(uv + 1.984 + 4.5*iTime);\n    rn.y = SmoothNoise(uv + 1. + 4.5*iTime);\n    \n    col += SmoothNoise(uv+rn*2.5);\n    col -= shape;\n    \n    col = col / (1.5+col);\n    col = pow(col, vec3(3./2.2));\n    \n    //background white\n    //col = clamp(col, 0., 1.);\n    \n    col *= FLAMECOLOR;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = Flame(uv);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}