{"ver":"0.1","info":{"id":"wtG3DD","date":"1578947565","viewed":85,"name":"checkerboard_1234","username":"nh_cham","description":"It's a checkerboard","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ANTI_ALIASING\n#define MOTION_BLUR\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float sum = 0.0;\n    float i = 0.0;\n    float x = 0.0;\n    float y = 0.0;\n\n#ifdef MOTION_BLUR\n    for (float i = 0.0; i < 8.0; i++)\n#endif\n#ifdef ANTI_ALIASING\n    for (float y = -1.0; y <= 1.0; y++)\n    for (float x = -1.0; x <= 1.0; x++)\n#endif\n    {\n        // Normalized pixel coordinates (from 0 to 1)\n        vec2 uv = ((fragCoord + vec2(x, y) / 3.0)/ iResolution.xy - vec2(0.5)) * 3.0;\n        uv.x /= iResolution.y / iResolution.x;\n\n        float t = (iTime - iTimeDelta / 8.0 * i) * 0.3;\n        float s = sin(t);\n        float c = cos(t);\n\n        uv.xy = mat2(c, -s, s, c) * uv.xy;\n        float r = sqrt(dot(uv.xy, uv.xy));\n        float phi = atan(uv.y, uv.x);\n        \n        r = pow(r, (sin(t * 5.0) + 2.0));\n        uv.x = r * cos(phi);\n        uv.y = r * sin(phi);\n\n        bool flag = false;\n        float mx = mod(uv.x, 1.0);\n        float my = mod(uv.y, 1.0);\n        \n        if (mx > 0.47 && mx < 0.53)\n          flag = true;\n        if (my > 0.47 && my < 0.53)\n          flag = true;\n        float col = flag ? 1.0 : 0.0;\n        sum += col;\n\n    }\n#ifdef ANTI_ALIASING\n    sum /= 9.0;\n#endif\n#ifdef MOTION_BLUR\n    sum /= 8.0;\n#endif\n    // Output to screen\n    fragColor = vec4(vec3(sum), 1.0);\n}","name":"Image","description":"","type":"image"}]}