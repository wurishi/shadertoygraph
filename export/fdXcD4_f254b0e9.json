{"ver":"0.1","info":{"id":"fdXcD4","date":"1677580691","viewed":89,"name":"Fork Rectangle Test on mouse","username":"Good_ok","description":"test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rectangletest"],"hasliked":0,"parentid":"Xlc3Dj","parentname":"Rectangle test"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float RoundRect(in vec2 distFromCenter, in vec2 halfSize, in float radius)\n{\n    float t = length(max(abs(distFromCenter) - (halfSize - radius), vec2(0.0))) - radius;\n    //return clamp(t, 0.0, 1.0);\n    return smoothstep(-1.0, 1.0,t);\n\n}\nfloat RectAngle(vec2 center, vec2 size, vec2 coord){\n    vec2 b = coord-center; \n    b = size*size -b*b; \n    return sqrt( b.x + b.y + dot(b,b) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n\n    vec2 size = vec2(smoothstep(0.0, 1.0, cos(abs(iTime*2.0)))*200.0+50.0, smoothstep(0.0, 1.0, sin(abs(iTime*2.0)))*90.0+50.0);\n\n    if (iMouse.xy != vec2(0)) size = vec2(abs(iMouse.xy-iResolution.xy*0.5));\n\n\tfloat radius = 11.0;\n    \n\tfloat pct = RoundRect(fragCoord.xy-0.5*iResolution.xy, size, radius);\n\t\n    vec4 rectColor = vec4(uv.x, uv.y, 0.37, 1.0);\n    \n\tfragColor = mix(rectColor, vec4(0.0), pct);\n}","name":"Image","description":"","type":"image"}]}