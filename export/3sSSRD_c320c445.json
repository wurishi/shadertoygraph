{"ver":"0.1","info":{"id":"3sSSRD","date":"1553043525","viewed":92,"name":"Basic2DGyroid","username":"bignobody","description":"Gyroid experiments. Simple repeating 2D mapping with colour cycling.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gyroid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 cgyroid(vec3 p)\n{\n    \n  float g = (cos(p.x) * sin(p.y) + cos(p.y) * sin(p.z) + cos(p.z) * sin(p.x));\n\treturn vec3(g);\n // return vec3(g+p.x,g+p.y,g+p.z) * cos(atan(p.x,p.y));\n  //  return vec3(g+p.x,g+p.y,g+p.z) * cos(length(p));\n    \n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0*fragCoord/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n    uv.x *= aspect;\n    vec2 dc = uv -.5;\n    dc *= 8.0;\n\n    vec3 col = cgyroid(vec3(dc.x,dc.y,cos(iTime)*5.0));\n    col += vec3(sin(iTime), sin(iTime * 0.5), sin(iTime*0.15));\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}