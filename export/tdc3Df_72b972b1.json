{"ver":"0.1","info":{"id":"tdc3Df","date":"1571293474","viewed":144,"name":"Linear Gaussian ","username":"Canysway","description":"gaussian\n","likes":2,"published":1,"flags":34,"usePreview":0,"tags":["linear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int blur_size = 20;\nconst float blur_width = 2.;\nuniform float t;\n\nfloat gauss(float x, float e){\n    return exp(-pow(x, 2.)/e);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   vec2 pos = fragCoord.xy / iResolution.xy;\n   vec4 pixval = vec4(0.);\n   float tot = 0.;\n\n   const int nb = 2*blur_size+1;\n\n   for (int x=0; x<nb; x++)\n   {\n       float x2 = blur_width*float(x-blur_size);\n       vec2 ipos = pos + vec2(x2/iResolution.x, 0.);\n       float g = gauss(x2, float(20*blur_size)*(0.5+0.5));\n       pixval+= g*texture(iChannel0, ipos);\n       tot+= g;\n   }\n   fragColor = pixval/tot;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int blur_size = 20;\nconst float blur_width = 2.;\nuniform float t;\n\nfloat gauss(float x, float e){\n    return exp(-pow(x, 2.)/e);\n}\n\n// Vertical \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   vec2 pos = fragCoord.xy / iResolution.xy;\n   vec4 pixval = vec4(0.);\n   float tot = 0.;\n\n   const int nb = 2*blur_size+1;\n\n   for (int x=0; x<nb; x++)\n   {\n       float x2 = blur_width*float(x-blur_size);\n       vec2 ipos = pos + vec2(0., x2/iResolution.x);\n       float g = gauss(x2, float(20*blur_size)*(0.5*0.5));\n       pixval+= g*texture(iChannel0, ipos);\n       tot+= g;\n   }\n   fragColor = pixval/tot;\n}\n","name":"Buffer A","description":"","type":"buffer"}]}