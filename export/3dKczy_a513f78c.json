{"ver":"0.1","info":{"id":"3dKczy","date":"1603146126","viewed":428,"name":"Curvature map from height map","username":"elci","description":".","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["map","height","curvature"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float HeightMap( vec2 p ){\n\treturn texture(iChannel0, p).x;\n}\nfloat Curve( vec2 p, vec2 o ){\n\tfloat a = HeightMap(p+o);\n\tfloat b = HeightMap(p-o);\n\treturn -a - b;\n}\nfloat CurvatureMap( vec2 p, float r ){\n\tconst float q = 4.0; // sample quality\n\tfloat s = r/q;\n\tfloat H = HeightMap(p)*2.0;\n\tfloat v = 0.0;\n\tvec2 o;\n\tfor( o.x = -q; o.x < q; o.x++ )\n\tfor( o.y = -q; o.y < q; o.y++ ){\n\t\tfloat c = Curve(p, o*s);\n\t\tv += (H + c) * ((r-length(o*s)) / r);\n\t}\n\treturn v/(q*q);\n}\n\nvoid mainImage( out vec4 oFragColor, in vec2 fragCoord ){\n    vec2 uv = (gl_FragCoord.xy-iResolution.xy*0.5)/iResolution.x;\n\tfloat c;\n\tc += CurvatureMap(uv-0.5, 0.005)*8.0; // sharp curvature\n\tc += CurvatureMap(uv-0.5, 0.015)*3.0; // medium\n\tc += CurvatureMap(uv-0.5, 0.030)*1.5; // smooth curvature\n    oFragColor.rgb = vec3( 0.5 + c );\n\toFragColor.a = 1.0;\n}\n","name":"Image","description":"","type":"image"}]}