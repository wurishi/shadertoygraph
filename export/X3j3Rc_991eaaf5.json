{"ver":"0.1","info":{"id":"X3j3Rc","date":"1708690169","viewed":59,"name":"Square Drops","username":"PGRacer","description":"Rand function is poor for golf's sake, but works well enough here.  Takes a few seconds for things to fall nicely out of sync.\n\nI had to at least try to golf this for once since I know Fabrice is coming for me... D:\n\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float n(vec2 p){\n    return fract(sin(p.x * 2.4 + p.y * 8.3) * 57.2);\n}\n\nvoid mainImage(out vec4 o, vec2 f )\n{\n    vec2 u = f / iResolution.y, a;\n    for (float i = 0., b; ++i < 8.;)\n    {\n        b = pow(2., 8. - i);\n        if (n((a = u * b - fract(u * b))) > .7) i=9.;\n    }\n    o = vec4(sqrt(sin((n(a)) * iTime * 2.) * .5 + .5));\n}","name":"Image","description":"","type":"image"}]}