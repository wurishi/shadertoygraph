{"ver":"0.1","info":{"id":"wlXyD8","date":"1591936167","viewed":55,"name":"Moving Globule","username":"Mogster","description":"meh","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["time","circle","globule"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Generic random function\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n     // Find coordinate, flexible to different resolutions\n    float maxSize = max(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord.xy / maxSize;\n    \n// Find center, flexible to different resolutions\n    vec2 center = iResolution.xy / maxSize / 2.;\n    \tconst float radius = 0.2;\n\n    #define SPEED 0.0025\n    float timeMod = (sin(iTime) + 1.0) * 2.5;\n\n    float randX = sin(uv.x * timeMod * 10.0);\n    float randY = sin(uv.y * timeMod * 5.0);\n    //float rand2 = sin(rand(uv) * iTime * SPEED);;\n    vec2 disp = vec2(randX, randY);\n    disp.x += cos(iTime) * 3.0;\n    disp.y += sin(iTime) * 3.0;\n    uv.xy -= disp.xy * 0.025;\n    \n        float dist = length(uv - center);\n    \tfloat strength = step(dist, radius); \n    \tvec3 col = vec3(strength);\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}