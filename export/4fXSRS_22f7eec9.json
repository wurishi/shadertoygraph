{"ver":"0.1","info":{"id":"4fXSRS","date":"1705364315","viewed":106,"name":"Layers of love","username":"retronyme","description":"I stole some concepts from kishimisu tutorial: https://www.shadertoy.com/view/mtyGWy","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define HEART_SIZE 1.3\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n    \n    // re center the shape\n    p.y += 0.6;\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n        \n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 final_color = vec3(0.0);\n    \n    for (float i = 0.0; i < 5.0; i++) {        \n        float heart_size = .1 + HEART_SIZE * sin(iTime)/20. + .3;\n        float d = sdHeart(uv * 1./heart_size) * exp(-length(uv0));\n        \n        vec3 col;\n        if(d > 0.) {        \n            uv = fract(uv * 2.0 + iTime * .1) - 0.5;\n\n            float d = length(5. * uv0);\n\n            vec3 col = palette(length(uv0) + iTime*.4);\n\n            d = sin(d*2. - iTime*1.5)/20.;\n            d = abs(d);\n\n            d = pow(0.01 / d, 1.2);\n            \n            final_color += col * d * 0.1;\n            \n        } else {\n            col = vec3(1.000,0.290,0.290);\n            if(d / exp(-length(uv0)) < -0.05){\n                col = col * 0.0;\n            }\n            \n            final_color = col * (0.2 + (1.0 + cos(i * 3.* iTime)/2.) /  (pow(i, 2.)*0.3+1.));\n            \n            break;\n        }\n    }\n    \n    // vignette\n    uv = fragCoord.xy / iResolution.xy;\n    uv *=  1. - uv.yx;\n    final_color *= pow(uv.x*uv.y * 20.0, 0.25);\n    \n    fragColor = vec4(final_color, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}