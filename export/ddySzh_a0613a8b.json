{"ver":"0.1","info":{"id":"ddySzh","date":"1680702589","viewed":88,"name":"Coupling","username":"KingHashish","description":"coils","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["domain","coloring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323\n#define hue(a) (.6 + .6*cos(2.*PI*a + vec3(0,-2.*PI/3.,2.*PI/3.)))\n\n#define ZOOM (0.55*iResolution.y)\n\nvec2 cmul(vec2 z1, vec2 z2)\n{\n    return mat2(z1, -z1.y, z1.x)*z2;\n}\nvec2 cdiv(vec2 z1, vec2 z2)\n{\n    return z1*mat2(z2, -z2.y, z2.x)/dot(z2, z2);\n}\n\nvec2 clog(vec2 z)\n{\n    return vec2(0.5*log(dot(z,z)), atan(z.y, z.x));\n}\n\nvec2 csin(vec2 z)\n{\n    return vec2(sin(z.x)*cosh(z.y), cos(z.x)*sinh(z.y));\n}\n\nvec2 ccos(vec2 z)\n{\n    return vec2(cos(z.x)*cosh(z.y), -sin(z.x)*sinh(z.y));\n}\n\nvec2 cexp(vec2 z, vec2 c)\n{\n    float argz, m, a;\n    float lnz = dot(z,z);\n    \n    if (lnz == 0.) return vec2(0., 0.);\n    else {\n        lnz = 0.5*log(lnz);\n        argz = atan(z.y, z.x);\n        \n        m = exp(c.x*lnz - c.y*argz);\n        a = c.x*argz + c.y*lnz;\n        \n        return m*vec2(cos(a), sin(a));\n    }\n}\n\n\nvec3 hrgb(vec2 w)\n{\n    float a = atan(w.y, w.x); \n    \n    \n    if (true) { //polar\n        vec2 v;\n        v.x = atan(w.y, w.x)/(PI/4.) /*+ iTime*/;\n        v.y = length(w);\n        v.y = log(v.y);\n        \n        \n        //v.y -= fract(iTime);\n        w = v;\n    }\n\n    \n    \n      \n    float c1;\n    c1 = 1. - 1.0*pow(abs(sin(2.*PI*w.x))*abs(sin(2.*PI*w.y)), 0.15);\n\n\n    vec3 c;\n    c.r = c1;\n    c.g = c1;\n    c.b = c1;\n    \n\n    \n    if (false) { //checkerboard\n        int b = (abs(int(2.*fract(w.x)))) \n              ^ (abs(int(2.*fract(w.y))));\n\n        if (b == 0)\n            //4color\n            if (abs(a) > PI/2.) \n                if (a > 0.) c = vec3(1.,0.,0.); else c = vec3(0.,1.,0.);\n            else \n                if (a > 0.) c = vec3(1.,1.,1.); else c = vec3(0.,0.,1.);\n\n        else {\n            c = vec3(0.,0.,0.);\n        }\n    }\n       \n    return c;\n}\n\nvec2 f(vec2 z)\n{\n    vec2 p, h, g;\n    \n    p = vec2(1., 0.);\n    \n    h = vec2(-0.3, 0.);\n    \n    for (int j=-1; j<2; j++) {\n        g = vec2( 0., 0.2*float(j));\n        \n        //p = cdiv( p, (z - g) );\n        //p = cmul( p, (z - g - vec2(0.2, 0.05)) );\n        \n        \n        p = cmul( p, cexp( (z - h - g), vec2(-sin(iTime), 0.) ));\n        p = cmul( p, cexp( (z - h - g - vec2(0.2, 0.1)), vec2(sin(iTime), 0.) ));\n          \n    }\n    \n    h = vec2(0.3, 0.);\n    \n    for (int j=-2; j<3; j++) {\n        g = vec2( 0., 0.1*float(j));\n        \n        //p = cmul( p, (z - h - g));\n        //p = cdiv( p, (z - h - g - vec2(0.2, 0.05)));\n        \n        p = cmul( p, cexp( (z - h - g), vec2(-cos(iTime), 0.) ));\n        p = cmul( p, cexp( (z - h - g - vec2(0.2, 0.05)), vec2(cos(iTime), 0.) ));\n        \n    }\n    \n    \n    return p;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 z, w, w1, w2, w3, w4;\n    \n    z = fragCoord - iResolution.xy/2.;\n\n    if (iMouse.xy != vec2(0., 0.)) //to center at origin\n        z -= iMouse.xy - iResolution.xy/2.;\n    \n        \n    w  = f( z/ZOOM );\n    \n    /*\n    w1 = f( (z + vec2(-.25,-.25))/ZOOM );\n    w2 = f( (z + vec2(-.25, .25))/ZOOM );\n    w3 = f( (z + vec2( .25,-.25))/ZOOM );\n    w4 = f( (z + vec2( .25, .25))/ZOOM );\n    \n    fragColor = vec4(0.2*(hrgb(w) +\n                          hrgb(w1) + hrgb(w2) + \n                          hrgb(w3) + hrgb(w4)), 1.0);*/\n                          \n    fragColor = vec4(hrgb(w), 1.0);\n}","name":"Image","description":"","type":"image"}]}