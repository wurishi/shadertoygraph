{"ver":"0.1","info":{"id":"4ct3WB","date":"1712083276","viewed":67,"name":"ADS_task1","username":"Krinpis","description":"?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265\nstruct Triangle{\n    vec2 a;\n    vec2 b;\n    vec2 c;\n};\n\nstruct Heart{\n    vec2 center;\n    float size;\n};\n\nstruct Circle{\n     vec2 center;\n     float radius;\n};\n\nbool pix_in_circle(vec2 pix, Circle circle){\n    float x = pix.x - circle.center.x;\n    float y = pix.y - circle.center.y;\n    if (x*x + y*y < circle.radius*circle.radius) return true;\n    return false;\n}\n\nbool pix_in_heart(vec2 pix, Heart heart){\n    float x = (pix.x - heart.center.x)/heart.size;\n    float y = (pix.y - heart.center.y)/heart.size;\n    if (pow(x*x + y*y - .6, 3.) - x*x*y*y*y < .0) return true;\n    return false;\n}\n\nbool right_side(vec2 pix, vec2 a, vec2 b, vec2 c){\n    float x = pix.x, y = pix.y;\n    if (((x-a.x)*(b.y-a.y)-(y-a.y)*(b.x-a.x))*((c.x-a.x)*(b.y-a.y)-(c.y-a.y)*(b.x-a.x)) > .0)\n        return true;\n    return false;\n}\n\nbool pix_in_triangle(vec2 pix, Triangle triangle){\n    vec2 a = triangle.a, b = triangle.b, c = triangle.c;\n    if(right_side(pix, a, b, c) && right_side(pix, b, c, a) && right_side(pix, a, c, b)) return true;\n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 pix )\n{\n    float n = iResolution.y;\n    float m = iResolution.x;\n    float min_res = min(n, m);\n    float max_res = max(n, m);\n    vec3 col = vec3(1.);\n    \n    Heart heart;\n    heart.size = min_res*.3;\n    heart.center = vec2(m/2., n/2.);\n    \n    Circle circle;\n    circle.radius = min_res/5.;\n    circle.center = vec2(m*.3, abs(sin(iTime*4.)*(n - circle.radius*2.)) + circle.radius);\n    \n    Triangle triangle;\n    triangle.a = vec2(cos(iTime*3.)*min_res/5.+ m*4./5., sin(iTime*3.)*min_res/5.+n*.5);\n    triangle.b = vec2(cos(iTime*3. + pi)*min_res/5. + m*4./5., sin(iTime*3. + pi)*min_res/5. + n*.5);\n    if (iMouse.x != .0 && iMouse.y != .0)\n        triangle.c = vec2(iMouse.x, iMouse.y);\n    else\n        triangle.c = vec2(m*.2, n*.5);\n    \n    \n    \n    if (pix_in_triangle(pix, triangle)) col = vec3(0., 2., 4.);\n    else if (pix_in_heart(pix, heart)) col = vec3(1., .1, .2);\n    else if (pix_in_circle(pix, circle)) col = 0.5 + 0.5*cos(iTime+vec3(4,2,4));\n    \n    fragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}