{"ver":"0.1","info":{"id":"XXjSz1","date":"1710267895","viewed":63,"name":"RGB Image To Display Shader","username":"GameWin221","description":"RGB Shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 screen_size = vec2(16, 9) * 16.0;\nconst vec2 pixel_smoothstep = vec2(0.9, 1.0);\nconst vec2 channel_smoothstep = vec2(0.6, 1.00);\n\n// Uncomment one\n#define VERTICAL_BARS\n//#define HORIZONTAL_BARS\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n       \n    vec2 px_smooth = uv * screen_size;\n    vec2 px = trunc(px_smooth);\n    vec2 px_uv = px / screen_size;\n        \n    vec3 tex_col = texture(iChannel0, px_uv).rgb;\n\n    float center_x = abs(fract(px_smooth.x) - 0.5) * 2.0;\n    float center_y = abs(fract(px_smooth.y) - 0.5) * 2.0;\n    float center = 1.0 - smoothstep(pixel_smoothstep.x, pixel_smoothstep.y, max(center_x, center_y));\n\n#ifdef VERTICAL_BARS\n    float channel_bar = floor(fract(px_smooth.y) * 3.0) / 2.0;\n    \n    float channel_center_y = abs(fract(px_smooth.y * 3.0) - 0.5) * 2.0;\n    float channel_distance = smoothstep(channel_smoothstep.x, channel_smoothstep.y, channel_center_y);\n    float channel_center = 1.0 - channel_distance;\n#endif\n#ifdef HORIZONTAL_BARS\n    float channel_bar = floor(fract(px_smooth.x) * 3.0) / 2.0;\n    \n    float channel_center_x = abs(fract(px_smooth.x * 3.0) - 0.5) * 2.0;\n    float channel_distance = smoothstep(channel_smoothstep.x, channel_smoothstep.y, channel_center_x);\n    float channel_center = 1.0 - channel_distance;\n#endif\n\n    vec3 color_channel = vec3(\n        tex_col.r * max(channel_bar - 0.5, 0.0) * 2.0, // 1 only for channel_bar = 1.0\n        tex_col.g * (0.5 - abs(0.5 - channel_bar)) * 2.0, // 1 only for channel_bar = 0.5\n        tex_col.b * max(0.5 - channel_bar, 0.0) * 2.0 // 1 only for channel_bar = 0.0\n    );\n\n    vec3 col = mix(vec3(0.0, 0.0, 0.0), color_channel, center * channel_center);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}