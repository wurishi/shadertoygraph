{"ver":"0.1","info":{"id":"dttcW4","date":"1699230094","viewed":90,"name":"\"kishimisu\" Introduction","username":"todyscau","description":"I followed the steps from kishimisu's - \"An introduction to Shader Art Coding\" YouTube Video. I customized a few settings to fit my liking. Thank You.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","colorful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pallete( float t ) {\n\n    vec3 a = vec3 (0.368, 0.560, 0.560);\n    vec3 b = vec3 (0.388, 0.265, 0.265);\n    vec3 c = vec3 (-0.302, 1.433, -0.194);\n    vec3 d = vec3 (0.397, -0.103, -0.052); \n    \n    return a + b*cos( 6.28318*(c*t*d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;    \n    vec2 uv0 = uv;    \n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) {\n    \n        uv = fract(uv * 1.9) - 0.5;    \n        float d = length(uv) * exp(-length(uv0));\n    \n        vec3 col = pallete(length(uv0) + i*.4 + iTime*.4);\n    \n        d = sin(d*12. + iTime)/8.;\n        d = abs(d);\n        d = pow(0.02 / d, 1.1);\n    \n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}