{"ver":"0.1","info":{"id":"XXX3Rr","date":"1707041275","viewed":72,"name":"Sound Check #2","username":"kiyamada96","description":"trance music visual","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["phytrance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Ms33WS","filepath":"https://soundcloud.com/nbarket/barket-cocotte-style?si=3d36f3738ac14fb1b8224c08b285b314&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/nbarket/barket-cocotte-style?si=3d36f3738ac14fb1b8224c08b285b314&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 画面解像度によるピクセル座標の正規化\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // 波形データの取得に使用するテクスチャ座標のX成分を計算\n    int tx = int(uv.x * 512.0); // 512は波形データテクスチャの幅\n\n    // 波形データの取得（テクスチャの第二行から）\n    float wave = texelFetch(iChannel0, ivec2(tx, 1), 0).x;\n\n    // 波形データを画面の中心に配置\n    float wavePosition = 0.0; // 波形を表示する画面上の位置（Y座標）\n    float waveHeight = 1.; // 波形の高さを調整するための係数\n    float centeredWave = wavePosition + wave * waveHeight; // 波形データを中心に配置し、高さを調整\n\n    // 現在のピクセルのY座標が波形データに近い場合に色を設定\n    //float waveWidth = 0.003; // 波形の描画幅\n    float waveWidth = 0.002 + 0.002 * sin(iTime * 3.0); // 時間に応じて波形の描画幅を変化させる\n\n    float alpha = 1.0 - smoothstep(0.0, waveWidth, abs(centeredWave - uv.y));\n\n    // 最終的な色を出力（波形に基づいて白色を使用）\n    vec3 color = vec3(alpha); // RGBの各成分をalphaで設定して白色に\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}