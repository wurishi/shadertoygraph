{"ver":"0.1","info":{"id":"7lsSz8","date":"1625161570","viewed":567,"name":"Dr Greeble's spawn filter","username":"evvvvil","description":"Dr Greeble's spawn filter - Result of an improvised live coding session on Twitch\nLIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 21:00 Uk time:\nhttps://www.twitch.tv/evvvvil_\n","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["displacement","demoscene","glow","blend","material","control","greeble","shrine","detail","birth","contraception"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Dr Greeble's spawn filter - Result of an improvised live coding session on Twitch\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 21:00 Uk time: \n// https://www.twitch.tv/evvvvil_\n\n// \"Gimme a clamp and a sin, son, and watch how it's done, yeah?\" - Dr Greeble\n\nvec2 z,v,e=vec2(.00035,-.00035);float t,tt,bb,g,gg,r=0.;vec3 np,bp,pp,po,no,al,ld,lp,op,cp,rd;\nfloat smin(float a,float b,float k){  float h=max(0.,k-abs(a-b));return min(a,b)-h*h*.25/k;}\nfloat smax(float a,float b,float k){  float h=max(0.,k-abs(-a-b));return max(-a,b)+h*h*.25/k;}\nvec2 smin( vec2 a, vec2 b,float k ){ float h=clamp(.5+.5*(b.x-a.x)/k,.0,1.);return mix(b,a,h)-k*h*(1.0-h);}\nfloat bo(vec3 p,vec3 r){p=abs(p)-r;return max(max(p.x,p.y),p.z);}\nfloat cz(vec3 p,vec3 r){return max(abs(length(p.xy)-r.x)-r.y,abs(p.z)-r.z);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nvec4 texNoise(vec2 uv,sampler2D tex ){ float f = 0.; f+=texture(tex, uv*.125).r*.5; f+=texture(tex,uv*.25).r*.25; //Funciton simulating the perlin noise texture we have in Bonzomatic shader editor, written by yx\n                       f+=texture(tex,uv*.5).r*.125; f+=texture(tex,uv*1.).r*.125; f=pow(f,1.2);return vec4(f*.45+.05);}\nconst mat2 deg45=mat2(0.70738827,0.706825,-0.706825,0.70738827);\nvec2 mp( vec3 p,float ga )\n{ \n  op=pp=p;   \n  pp=abs(pp)-vec3(0,0,3.5-cos(p.y*.2)*2.); // SPLINES POS  \n  pp.xy*=r2(-.785);  \n  float tn=texNoise(op.xz*.03,iChannel0).r; //Tex noise sample\n  r=1.0; vec4 np=vec4(pp,1);\n  for(int i=0;i<4;i++){ //Greeble Displacement KIFS\n    np.x=abs(np.x)-1.4;\n    np.xy*=deg45;\n    np*=2.;\n    r=min(r,clamp(sin(np.y)*sin(np.x*3.),-.3,.3)/np.w);\n  }\n  r/=2.;\n  vec2 h,t=vec2(.8*(length(pp.xz)-.2+r),0);  // SPLINES\n  vec3 sp=pp;//sp.xz*=r2(cos(sp.y)*.3+tt);\n  sp.xz=abs(sp.xz)-.4-cos(sp.y*.5)*.5-sp.y*.05;\n  vec3 pinch=cos(p*2.5)*.2; \n  t.x=smin(t.x,.6*(length(p)-3.+pinch.x+pinch.y+r),.5); //SYNAPSE SPHERE\n  t.x=smin(t.x,.7*(cz(p,vec3(4.+(pinch.x+pinch.y)*.5,.15,.2))),1.3); //SYNAPSE CYL  \n  t.x=smax((length(p.xy)-1.-r)*.8,t.x,.5);\n  float synapse=t.x-.2; //BLACK SYNAPSE     \n  h=vec2(synapse,1);\n  h.x=max(h.x,.7*abs(abs(abs(pp.y-4.9)-1.5-r)-1.5)-.5);   //CUT BLACK OUTTER  \n  h.x=smin(h.x,max(.7*(cz(p,vec3(3.2,1.5-r,.2-r))),-(abs(p.z)-.2)),.5); //BLACK CYL AROUND  \n  h.x=smin(h.x,max(.7*(length(sp.xz)-.15-r),-(abs(sp.y)-1.7)),.2); //SMALLER SPLINES\n  h.x=min(h.x,bo(abs(op)-11.-r,vec3(1,100,2))); //OUTTER BOXES\n  vec3 rp=op+vec3(0,5,0);rp.x=abs(rp.x)-17.;\n  h.x=min(h.x,bo(rp-r,vec3(1,7,2))); //OUTTER BOXES\n  h.x=smin(h.x,(op.y+7.+tn*2.+r)*.6,.5); //TERRAIN  \n  pp=p*.5; pp.y-=tt;                    //PARTICLES\n  bb=cos(clamp(op.y*.9-.9+tn*3.,-10.,1.));\n  pp.xz*=r2(bb*.7);  \n  float bro=max((.7-abs(bb)*.5)*(length(sin(pp))+clamp(p.y-1.,0.,2.)*.05),length(p.xz)-10.);\n  gg+=0.1/(0.1*bro*bro*(2000.-1940.*bb))*ga;   \n  t=smin(t,h,.1);    \n  float cylglo=max(length(p.xy)-4.7,abs(p.z)-.05); //GLOW CYL AROUND    \n  v=sin((p.xy-tt*vec2(-1,.5))*15.)*0.03;\n  vec3 ep=abs(p)-vec3(1.7-cos(p.y*.5-2.5)-v.x+v.y,0.,0.); //VERTICAL GLOW LINES POS\n  ep.x=abs(ep.x)-.3;\n  cylglo=min(cylglo,0.7*length(ep.xz));   //VERTICAL GLOW LINES\n  gg+=0.1/(0.1*cylglo*cylglo*200.)*ga*max(0.,1.-p.y*.1);  //GLOW VERTICAL LINES + CYL GLO\n  h=vec2(cylglo,6);  \n  h.x=smin(h.x,bro,.4); //PARTICLES ADDED AT END\n  t=t.x<h.x?t:h; \n  return t;\n}\nvec2 tr( vec3 ro,vec3 rd )\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x,1.);\n    if(h.x<.0001||t.x>30.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>30.) t.y=-1.;\n\treturn t;\n}\n#define a(d) clamp(mp(po+no*d,0.).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d,0.).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1); \n  tt=7.86+mod(iTime,62.82);\n  vec3 ro=mix(vec3(cos(tt*.1)*10.,cos(tt*.2)*5.,sin(tt*.1)*10.),\n          vec3(cos(tt*.4)*5.,-3,cos(tt*.2)*10.),ceil(sin(tt*.4))),\n  cw=normalize(vec3(0)-ro),cu=normalize(cross(cw,vec3(0,1,0))),cv=normalize(cross(cu,cw)),\n  rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo;  \n  co=fo=clamp(vec3(.1,.12,.13)-length(uv)*.12-rd.y*.1,0.,1.);\n  z=tr(ro,rd);t=z.x;\n  if(z.y>-1.){\n    po=ro+rd*t;\n    no=normalize(e.xyy*mp(e.xyy+po,0.).x+e.yyx*mp(e.yyx+po,0.).x+e.yxy*mp(e.yxy+po,0.).x+e.xxx*mp(e.xxx+po,0.).x);\n    al=clamp(mix(mix(vec3(.4,.6,.8),vec3(1,1,1),abs(r*20.)-1.5),vec3(-1)-sin(r*50.)*2.,z.y),0.,1.);\n    if(z.y>5.) al=vec3(1);    \n    lp=ro; ld=normalize(lp-po);\n    float dif=max(0.,dot(no,ld)),\n    fr=pow(1.+dot(no,rd),4.),   \n    attn=1.-pow(min(1.,length(lp-po)/15.),4.0),\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),30.);\n    co=attn*mix(.5*sp+al*(a(.15)*a(.3)+.2)*(dif+s(1.)*.5),fo,fr);    \n    co=mix(fo,co,exp(-.0001*t*t*t));\n  }\t\n  fragColor = vec4(pow(co+g*.2+gg*.2*vec3(.1,.2,.7),vec3(.55)),1);\n}","name":"Image","description":"","type":"image"}]}