{"ver":"0.1","info":{"id":"ttcyRX","date":"1609598497","viewed":50,"name":"problem noise","username":"lumixraku","description":"I try to implement https://www.youtube.com/watch?v=zXsWftRdsvU, but failed.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["failed"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float scale = 5.;\n\n\n// N stands for noise\n// 2 means tow for two dimension input, 1 for one dimension output\nfloat N21(vec2 uv) {\n\n    float random = fract(sin((uv.x* 100. + uv.y* 2142.212)* 542.));\n\n    return random;\n}\n\nfloat SmoothNoise(vec2 uv){\n    vec2 localUV = fract(uv );\n    vec2 localID = floor(uv );\n    \n    float randomBL = N21(localID);\n    float randomBR = N21(localID + vec2(1, 0));\n    float randomTL = N21(localID + vec2(0, 1));\n    float randomTR = N21(localID + vec2(1, 1));\n    // float random = mix(randomBL, randomBR, localID.x);\n    // localUV = smoothstep(0., 1., localUV); \n    \n\n    localUV = localUV * localUV * (3. - 2. * localUV);\n\n    float t = mix(randomTL, randomTR, localUV.x);\n    float b = mix(randomBL, randomBR, localUV.x);\n    float random = mix(b, t, localUV.y);\n    return random;\n\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 \nfragCoord)\n{\n\n    vec2 uv =(fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv = uv + iTime;\n\n    \n    vec3 col=vec3(SmoothNoise(uv * 4.));\n    col += vec3(SmoothNoise(uv* 8.1)) * .5;\n    col += vec3(SmoothNoise(uv * 16.1) )* .25;\n    col += vec3(SmoothNoise(uv * 32.1)) * .125;\n    col += vec3(SmoothNoise(uv * 64.1)) * .0625;\n\n    col /= 2.;\n\n    fragColor=vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}