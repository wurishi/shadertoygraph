{"ver":"0.1","info":{"id":"lllyz8","date":"1503487534","viewed":121,"name":"TangentCirclePair","username":"jt","description":"A circle tangent to two other circles - originally [url]https://www.shadertoy.com/view/Mdc3Dn[/url] but copied because the original now behaves differently due to applying fix for concentric circles.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle","tangent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Tangent Circle Pair - written 2015 by JT\n// url of this shader: https://www.shadertoy.com/view/lllyz8\n// see variation https://www.shadertoy.com/view/Mdc3Dn for enclosing circle\n\nvec3 EnclosingCircle(vec2 m, float r, vec2 n, float s)\n{\n    float d = length(n - m);\n    float t = (r + d + s) / 2.;\n\n    return vec3(mix(m, n, (t - r) / d), t);\n}\n\n//#define draw(q) O *= smoothstep(0.0, 0.01, abs(q))\n// antialiased variant suggested by Fabrice\n#define draw(q) O *= smoothstep(0., 4./R.y, abs(q))\n#define drawC(P,r) draw(r - length(P-I))\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    vec2 R = iResolution.xy; \n    I = (I+I-R)/R.y;\n\n    vec2 m = vec2(0.1,0.2);\n    float r = 0.5;\n    \n    vec2 n = length(iMouse.xy) > 0. ? (2. * iMouse.xy - R) / R.y : vec2(-0.2,-0.55);\n    float s = 0.3;\n\n    O = vec4(1);\n    /*\n    draw(length(I - m) - r); // circle\n    draw(length(I - m)-.01); // center\n    draw(length(I - n) - s); // circle\n    draw(length(I - n)-.01); // center\n    vec3 q = EnclosingCircle(m, r, n, s);\n    draw(length(I - q.xy) - q.z); // circle\n    draw(length(I - q.xy)-.01); // center\n    */\n    drawC(m, r); // circle\n    drawC(m, .01); // center\n    drawC(n, s); // circle\n    drawC(n, .01); // center\n    vec3 q = EnclosingCircle(m, r, n, s);\n    drawC(q.xy, q.z); // circle\n    drawC(q.xy, .01); // center\n}\n","name":"Image","description":"","type":"image"}]}