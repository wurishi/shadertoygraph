{"ver":"0.1","info":{"id":"WsX3WX","date":"1547585031","viewed":150,"name":"Mandelbrot Smooth Iteration","username":"darkeclipz","description":"Mandelbrot with a smooth iteration count and color palette.\n\n - https://iquilezles.org/articles/palettes/palettes.htm\n - http://dev.thi.ng/gradients/\n - // smooth iteration count: https://iquilezles.org/articles/mset_smooth/mset_smooth.htm","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 64.\n#define B 4.\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d ) {\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat iterate(vec2 p) {\n    \n    vec2 z = vec2(0), c = p;\n    float i;\n    \n    for(i=0.; i < N; i++) {\n        z = mat2(z, -z.y, z.x) * z + c;\n        if(dot(z, z) > B*B) break;\n\t}\n\t\n    if(p.y < 0.) return i;\n    return i - log(log(dot(z, z)) / log(B)) / log(2.);;\t    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 R = iResolution.xy;\n    vec2 uv = 1.2 * (2. * fragCoord - R - 1.) / R.y - vec2(.4, 0.);\n    float sn = iterate(uv) / N;   \n    \n    vec3 col = pal(fract(sn + 0.5), vec3(.5), vec3(.5), \n                   vec3(1), vec3(.0, .1, .2));\n    \n    fragColor = vec4(sn == 1. ? vec3(0) : col, 1.0);\n}","name":"Image","description":"","type":"image"}]}