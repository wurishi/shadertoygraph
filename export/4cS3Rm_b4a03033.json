{"ver":"0.1","info":{"id":"4cS3Rm","date":"1703949496","viewed":37,"name":"distor√ßao angular","username":"cals","description":"feito pra gamedev","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["angular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distortion = 0.93;\nfloat angle_offset = -2.51;\nfloat len_coefficient = 8.325;\nfloat qtd = 25.1;\nvec3 colorA = vec3(0.1, 0., 1.);\nvec3 colorB = vec3(0.2, 1., 0.2);\nvec3 colorC = vec3(1., 0.3, 1.);\nfloat offsetA = 200.;\nfloat offsetB = -120.;\nfloat offsetC = 70.;\nconst float PI = 3.14;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    offsetA += iTime*0.1;\n    offsetB += iTime*-0.8;\n    offsetC += iTime*2.5;\n    \n    distortion = cos(iTime*0.1)*30.;\n    len_coefficient = sin(iTime*0.01)*5.;\n    angle_offset = sin(iTime)*5.;\n;\n    vec2 UV = fragCoord/iResolution.xy;\n    vec2 pixel = UV - 0.5;\n    float angle = (atan(pixel.y, pixel.x)) / PI * qtd + angle_offset;\n    float len = length(pixel);\n    angle = angle + cos(len_coefficient*len) * (distortion * (len_coefficient-len));\n\n    vec3 color = vec3(1, 0, 1);\n    color = color * cos(angle);\n    // Output to screen\n\tvec3 cA = colorA * cos(angle + offsetA);\n\tvec3 cB = colorB * cos(angle + offsetB);\n\tvec3 cC = colorC * cos(angle + offsetC);\n    fragColor = vec4(cA + cB + cC ,1.0);\n}\n","name":"Image","description":"","type":"image"}]}