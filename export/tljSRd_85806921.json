{"ver":"0.1","info":{"id":"tljSRd","date":"1566890952","viewed":86,"name":"MandelBruth","username":"DanielPettersso","description":"Just a simple mandelbrot","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float maxIterations = 150.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float t = .9995 + sin(iTime * .2);\n    \n    uv *= 2. - t;\n    uv += vec2(-1.5 + t * 0.9, -1. + t * 0.789);\n    \n    float realComponentOfResult = uv.x;\n    float imaginaryComponentOfResult = uv.y;\n\tfloat tempRealComponent = 0.;\n\tfloat tempImaginaryComponent = 0.;\n    \n    fragColor =  texture(iChannel0, uv * 3.);\n   \t\n    for(float i = 0.; i < maxIterations; i++) {\n        \n         tempRealComponent = realComponentOfResult * realComponentOfResult\n                                 - imaginaryComponentOfResult * imaginaryComponentOfResult\n                                 + uv.x;\n         tempImaginaryComponent = 2. * realComponentOfResult * imaginaryComponentOfResult\n                                 + uv.y;\n         realComponentOfResult = tempRealComponent;\n         imaginaryComponentOfResult = tempImaginaryComponent;\n\n        if(realComponentOfResult * imaginaryComponentOfResult > 2.) {\n            float a = sqrt(i/maxIterations);\n            fragColor = vec4(a, 0., a, 1.0);\n            break;\n        }\n    }\n   \n    \n}\n","name":"Image","description":"","type":"image"}]}