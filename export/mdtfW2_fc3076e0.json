{"ver":"0.1","info":{"id":"mdtfW2","date":"1697665110","viewed":40,"name":"Old school twister","username":"EvilCowX","description":"first shader :D","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["twister","evilcowx"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    float amp = 0.3;\n    float freq = 2.6*sin(iTime*0.2) + 2.4*(sin(iTime*0.4)) + 1.2*(sin(iTime*1.4));\n    float angle = (1.0+uv.y)*freq+iTime;\n    float x1 = 0.5*amp*sin(angle) + 0.5;\n    float x2 = 0.5*amp*sin(angle+1.57) + 0.5;\n    float x3 = 0.5*amp*sin(angle+3.14) + 0.5;\n    float x4 = 0.5*amp*sin(angle+3.14+1.57) + 0.5;\n\n    float x_min = min(min(x1, x2), min(x3, x4));\n    vec3 x_values;\n    vec3 col1;\n    vec3 col2;\n    if(x_min == x1) {\n        x_values = vec3(x1, x2, x3);\n        col1 = vec3(1.0, 0.0, 0.0);\n        col2 = vec3(0.0, 1.0, 0.0);\n    } else if(x_min == x2) {\n        x_values = vec3(x2, x3, x4);\n        col1 = vec3(0.0, 1.0, 0.0);\n        col2 = vec3(0.0, 0.0, 1.0);\n    } else if(x_min == x3) {\n        x_values = vec3(x3, x4, x1);\n        col1 = vec3(0.0, 0.0, 1.0);\n        col2 = vec3(1.0, 1.0, 0.0);\n    } else {\n        x_values = vec3(x4, x1, x2);\n        col1 = vec3(1.0, 1.0, 0.0);\n        col2 = vec3(1.0, 0.0, 0.0);\n    }\n    \n    vec3 col;\n    float shade;\n    if(uv.x >= x_values.x && uv.x < x_values.y){\n        col = col1;\n        shade = amp*0.5/abs(x_values.x-x_values.y);\n        vec2 tex = vec2(abs(x_values.x-uv.x)/abs(x_values.x-x_values.y), uv.y);\n        col = mix(col, texture(iChannel0, tex).rgb, 0.5);\n        col = col / shade;\n    } else if(uv.x >= x_values.y && uv.x < x_values.z){\n        col = col2;\n        shade = amp*0.5/abs(x_values.y-x_values.z);\n        vec2 tex = vec2(abs(x_values.y-uv.x)/abs(x_values.y-x_values.z), uv.y);\n        col = mix(col, texture(iChannel0, tex).rgb, 0.5);\n        col = col / shade;\n    } else {\n        col = vec3(0, 0, 0);\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}