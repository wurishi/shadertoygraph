{"ver":"0.1","info":{"id":"tdtBR7","date":"1604712270","viewed":250,"name":"Simple Stateful Variables","username":"efairbanks","description":"WASD to move. An example of maintaining state in GLSL. I wanted a simple example to reference. Here it is!","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["state"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A simple example of persistent variable in a shader\n// \n// Use W,A,S,D keys to move sprite around\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 xy = (fragCoord.xy-iResolution.xy/2.)/iResolution.x;\n\tvec2 camera = vec2(GETVAL(CAMERA_X),GETVAL(CAMERA_Y))-0.5;\n    \n    xy-=camera*2.;\n    \n    float val = length(xy)>0.1?1.:0.;\n\n    fragColor = vec4(vec3(val),1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SETVAL(INDEX,VAL) if(int(fragCoord.x)==INDEX) fragColor=vec4(VAL)\n\n#define CAMERA_INC 0.01\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tfragColor=texelFetch(iChannel0,ivec2(fragCoord),0);\n    if(iTime<0.1) {\n    \tSETVAL(CAMERA_Y,0.5);\n        SETVAL(CAMERA_X,0.5);\n    }\n\tif(GETKEY(KEY_UP))\n        SETVAL(CAMERA_Y,mod(GETVAL(CAMERA_Y)+CAMERA_INC,1.));\n    if(GETKEY(KEY_DOWN))\n        SETVAL(CAMERA_Y,mod(GETVAL(CAMERA_Y)-CAMERA_INC,1.));\n    if(GETKEY(KEY_LEFT))\n        SETVAL(CAMERA_X,mod(GETVAL(CAMERA_X)-CAMERA_INC,1.));\n    if(GETKEY(KEY_RIGHT))\n        SETVAL(CAMERA_X,mod(GETVAL(CAMERA_X)+CAMERA_INC,1.));\n}\n","name":"Buffer @","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define GETVAL(INDEX) texelFetch(iChannel0,ivec2(INDEX,0),0).x\n#define GETKEY(INDEX) (texelFetch(iChannel1,ivec2(INDEX,0),0).x>0.5)\n\n#define KEY_UP\t\t87\n#define KEY_DOWN\t83\n#define KEY_LEFT\t65\n#define KEY_RIGHT\t68\n\n#define CAMERA_X\t0\n#define CAMERA_Y\t1\n#define CAMERA_Z\t2","name":"Common","description":"","type":"common"}]}