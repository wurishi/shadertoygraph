{"ver":"0.1","info":{"id":"ssGfRR","date":"1657538849","viewed":290,"name":"Blazing Sky Ocean","username":"Hyeve","description":"First time I've really done so much sdf modelling rather than just using fractal-ly stuff and calling it a day. Inspired by the visuals of the game Neon White.","likes":17,"published":1,"flags":32,"usePreview":1,"tags":["3d","raymarching","water","ocean","glass","reflections"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//See the common tab for fps control.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define DTR 0.01745329\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define vmin(a, b) (a.x < b.x ? a : b)\n#define pi 3.1415926535\n\nvec2 uv=vec2(0);\nvec3 cp,cn,cr,ss,oc,gl=vec3(0),vb,ro,rd,so,ld;\nvec4 fc=vec4(0),cc=vec4(0);\nfloat tt,cd,sd,md,io,oa,td=0.,li;\nint es=0,ec=0,fi=1;\n\nfloat bx(vec3 p,vec3 s){vec3 q=abs(p)-s;return min(max(q.x,max(q.y,q.z)),0.)+length(max(q,0.));}\nfloat gy(vec3 p, vec3 s){return (abs(dot(sin(p*s.x),cos((p*s.y).zxy)))-s.z)/(max(s.x,s.y)*1.8);}\n\nfloat h11 (float a){return fract(sin((a)*12.9898)*43758.5453123);}\n\n\nfloat fcy(vec3 p, vec2 s)\n{\n\tvec2 w = vec2(length(p.xy) - s.x, abs(p.z) - s.y);\n\treturn min(max(w.x,w.y),0.0) + length(max(w,0.0));\n}\n\nfloat hcy(vec3 p, vec3 s)\n{\n\tvec2 w = vec2(abs(length(p.xy) - s.x + s.z) - s.z, abs(p.z) - s.y);\n\treturn min(max(w.x,w.y),0.0) + length(max(w,0.0));\n}\n\nfloat gnoise( in float p )\n{\n    int   i = int(floor(p));\n    float f = fract(p);\n    float u = f*f*(3.0-2.0*f);\n    return mix( h11(float(i))*(f-0.0), \n                h11(float(i+1))*(f-1.0), u);\n}\n\nfloat fbm(float x, float h, float n, float o)\n{    \n    vec2 g = vec2(2,exp2(-h));\n\t\tvec3 f = vec3(1,1,0);\n\t\tx -= o * 0.5;\n    for(float i=0.; i<n; i++){f=vec3(f.xy*g,f.z+f.y*sin(f.x*x+o));}\n    return f.z;\n}\n\n\nfloat surface(vec3 p, vec3 o)\n{\n\tfloat v = length(p.y);\n\tv -= fbm(p.z * 0.5, 1., 3., o.x)*o.z+0.5;\n\tv -= fbm(p.x * 0.5, 1., 3., o.y)*o.z+0.5;\n\treturn abs(v);\n}\n\nfloat sqpl(vec3 p, vec3 s, float e)\n{\t\t\n\t\tfloat b = bx(p, s-e/2.);\n\t\tp.xz = abs(p.xz) - s.xz;\n\t\tb=min(b, bx(p,vec3(e,s.y,e)));\n\t\treturn b;\n}\n\nvec2 rnpl(vec3 p, vec2 s, vec3 e)\n{\n\tfloat pl = fcy(p.xzy, s);\n\tp.y=abs(p.y)-(s.y-e.x*2.);\n\tfloat ct=hcy(p.xzy,vec3(s.x+0.01,e));\n\tpl=max(pl,-ct);\n\tfloat nb=bx(p,vec3(s.x/2.,e.z,s.x/2.));\n\tpl=min(pl,nb);\n\treturn vec2(pl,(ct<pl||pl==nb)?3:2);\n}\n\nfloat arch(vec3 p, vec3 s, float e)\n{\n\tfloat b = bx(p,s);\n\tfloat c = length(p.xy + s.xy)-s.x*(2.-e);\n\tc = fcy(p + vec3(s.xy,0.),vec2(s.x*(2.-e),s.z+0.05));\n\tfloat c2 = fcy(p + vec3(s.xy,0.),vec2(s.x*2.,s.z*0.8));\n\tc=min(c,c2);\n\tb = max(b,-c);\n\treturn b;\n}\n\nfloat tmap(vec3 p)\n{\n\tvec4 a = texture(iChannel1, p.xy);\n\ta += texture(iChannel1, p.yz);\n\ta += texture(iChannel1, p.zx);\n\treturn a.x/3.;\n}\n\nfloat mp(vec3 p)\n{\t\t\n\t\tp.y = -abs(p.y) + 25.;\n\t\n\t\tp.x = mod(p.x,76.) - 38.;\n\t\n\t\tvec3 pp = p;\n\n\t\tvec2 sr;\n\t\t\n\t\tvec3 san=vec3(tt,-tt, 0.1);\n\t\tvec2 refr = vec2(surface(p + vec3(0,4,0), san),0);\n\t\tvec2 refl = vec2(surface(p + vec3(0,4.3,0), san-0.09),1);\n\t\t\n\t\tsr=vmin(refr,refl);\n\t\n\t\t\n\t\tp.x=abs(p.x)-20.;\n\t\tp.z = mod(p.z, 24.) - 12.;\n\t\tvec2 cpy = rnpl(p-vec3(18,9,0), vec2(2,12),vec3(0.2,0.05,1.5));\n\t\tp.z = mod(p.z, 12.) - 6.;\n\t\tp.x = abs(p.x) - 7.;\n\t\tcpy = vmin(cpy,rnpl(p, vec2(1,6),vec3(0.2,0.05,1.5)));\n\t\n\n\t\tp=pp;\n\t\t\n\t\tp.z=mod(p.z,20.)-10.;\n\t\tp.x=abs(p.x)-2.;\n\t\tfloat pc = sqpl(p.yzx-vec3(7,0,18), vec3(0.5,12,9.),0.1); -vec3(7,0,0);\n\t\tpc = min(pc, sqpl(p-vec3(10,16.2,0), vec3(1,9,3.), 0.1));\n\t\tvec2 py = vec2(pc,2);\n\t\tpy=vmin(py, vec2(bx(p-vec3(0,15,0),vec3(10,0.2,2.2)),3));\n\t\tp.y=-abs(p.y-15.)+4.;\n\t\tvec2 ar = vec2(arch(p-vec3(5.05,0,0),vec3(4,4,2.),0.05),2);\n\t\n\t\n\t\tsr=vmin(sr,cpy);\n\t\tsr=vmin(sr,py);\n\t\tsr=vmin(sr,ar);\n\t\tif(sr.y==3. && fi==1) gl+= exp(-sr.x*2.) * vec3(1,0.4,0) * 0.05;\n\t\t\n\t\t\n\t\t\n\t\tfloat sp = gy(p+tt*vec3(0.5,0.4,0.3),vec3(0.05,0.1,0.1));\n\t\tif(sp < 0.01 && sr.y != 0.) sr.y = 1.;\n\t\t\n\t\n\t\tsd = sr.x;\n\t\n\t\n\t\tsd=abs(sd)-0.001;\n\t\t\n\t\tif(sd<0.05)\n\t\t{\t\n\t\t\tio=sr.y == 0. ? 1. : -1.;\n\t\t\toc=sr.y < 2. ? vec3(0.,0.5,1.) : sr.y < 3. ? vec3(1,1,1.1)+tmap(p*0.5)*0.1 : vec3(1.3,0.9,0.1)+tmap(p)*0.1;\n\t\t\toa=sr.y < 2. ? 0.3 : 1.;\n\t\t\tss=vec3(0);\n\t\t\tec=2;\t\n\n\t\t}\n\t\treturn sd;\n}\n\nvec3 path()\n{\n\tfloat a = mod(tt, 20.);\n\tif(a < 10.) return vec3(38.+sin(tt*0.4)*2.,-20,tt*5.);\n\tif(a < 20.) return vec3(15, -15, tt*5.);\n}\n\nvec3 cpath()\n{\n\tfloat a = mod(tt, 30.);\n    vec3 lp;\n\tif(a < 10.) lp = vec3(0.+cos(a*0.3)*0.1,0,1);\n\telse if(a < 20.) lp = vec3(1,0.1,-0.2);\n\telse if(a < 30.) lp = vec3((0.2*cos(a*0.15))*(mod(tt,60.)<30.?1.:-1.), 0.5+sin(a*0.2)*0.2, 0.3);\n    //now with mouse control\nif(iMouse.z>0.){\n    lp.yz*=rot(2.0*(iMouse.y/iResolution.y-0.5)); \n    lp.zx*=rot(-5.0*(iMouse.x/iResolution.x-0.5));\n}\nreturn lp;\n    \n}\n\nvoid nm(){mat3 k=mat3(cp,cp,cp)-mat3(.001);cn=normalize(mp(cp)-vec3(mp(k[0]),mp(k[1]),mp(k[2])));cn=normalize(cn);}\nvoid shtr(){fi=0;so=cp+cn*0.05;md=64.;for(li=cd=0.;cd<64.;li++,cd+=mp(cp=ro+cn*0.05-ld*cd)){if(sd<md&&sd<cd)md=sd;if(sd<0.001||li>64.)break;}fi=1;}\nvoid tr(){for(li=cd=0.;cd<128.;){li++;cd+=mp(cp=ro+rd*cd);td+=sd;if(sd<0.0001||li>256.)break;}cp-=rd*0.005;nm();}\n\nvoid px(vec3 rd)\n{\n  vec3 bg=cc.rgb=vec3(0.1,0.65,1.)-pow(length(uv),3.) + texture(iChannel1, uv+tt*0.01).rrr*0.05;\n\tif(cd<128.){cc.a=oa;ld=normalize(cp-vec3(-10,20,-50)-path());\n\tfloat df=max(dot(cn,-ld),0.7),sp=max(1.-length(cross(rd+ld,cn)),0.)*(1.2-oa),\n\tfo = exp(-pow(0.015*td,2.)),ao=1.-clamp(mp(cp+cn*.1)/.1,0.,1.);\n\tvec3 fr=pow(1.-abs(dot(rd,-cn)),3.)*mix(cc.rgb,oc,0.);\n  cc.rgb=(oc*df+fr+sp+ss)-ao*0.2;\n\tshtr();float sh=(1.-clamp(md/0.05,0.,1.));if(sh>0.7)cc.rgb-=sh*0.2;\n\tcc.rgb = mix(bg, cc.rgb, fo);}\n\telse cc.a=1.;cc.rgb+=gl;\n\tcc.rgb*=max(max(cc.r,max(cc.g,cc.b)),1.);\n}\n\nvoid render(vec2 frag, vec2 res, float time, out vec4 col)\n{\n  uv=vec2(frag.x/res.x,frag.y/res.y);\n  uv-=0.5;uv/=vec2(res.y/res.x,1);\n\ttt=mod(time,100.);\n\t\n\t\n  ro=path();\n\tvec3 f = normalize(cpath());\n  vec3 r = normalize(cross(vec3(0,1,0),f));\n  rd = normalize(f*(0.99)+uv.x*r+uv.y*cross(f,r));    \n\t\n\tfor(int i=0;i<6;i++)\n  {\n\t\ttr();ro=cp-cn*(io<0.?-0.01:0.01);\n\t\tcr=refract(rd,cn,i%2==0?1./io:io);\n    if((length(cr)==0.&&es<=0)||io<0.)\n\t\t{i++;cr=reflect(rd,cn);es=(io<0.?es:ec);}\n\t\tpx(rd);if(max(es,0)%3==0) rd=cr;\n\t\tes--;fc=fc+vec4(cc.rgb*cc.a,cc.a)*(1.-fc.a);\n\t\tif(fc.a>=1.)break;\n  }\n  col=fc/fc.a;\n  col.rgb=pow(col.rgb,vec3(0.7));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(mod(float(iFrame), 60./FPS) < 1. || iFrame < 5) render(fragCoord.xy,iResolution.xy,iTime,fragColor);\n    else fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//fps control for performance. Assumes the refresh rate of your monitor is 60hz\n//(120hz monitor set to 30 here will actually run at 60fps)\n#define FPS 60.","name":"Common","description":"","type":"common"}]}