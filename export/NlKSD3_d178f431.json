{"ver":"0.1","info":{"id":"NlKSD3","date":"1642116329","viewed":85,"name":"Perlin Noise.SV","username":"turtlelover891","description":"I attempt to make Perlin Noise\nhttps://en.wikipedia.org/wiki/Perlin_noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi acos(-1.)\n#define T iTime*2.5\n\nfloat random(vec2 a){\n    float seed = 36.258;\n    for(float i=0.; i<3.; i++){\n        seed = fract(sin(a.x*seed*2572.9258)*2634.252 + \n                     sin(a.y*seed*2498.5194)*4209.194);\n    }return fract(seed);\n}\n\nvec2 Ray(vec2 nuv){\n    vec2 id = floor(nuv);\n    float angle = random(id)*pi*2.;\n    angle += random(id)*T+T/2.;\n    return vec2(sin(angle), cos(angle));\n}\n\nfloat octave(vec2 nuv){\n    vec2 id = floor(nuv);\n    vec2 luv = fract(nuv);\n    float bl = dot(Ray(nuv), luv);\n    float br = dot(Ray(nuv+vec2(1., 0.)), luv-vec2(1., 0.));\n    float tl = dot(Ray(nuv+vec2(0., 1.)), luv-vec2(0., 1.));\n    float tr = dot(Ray(nuv+1.), luv-1.);\n    luv = smoothstep(0., 1., luv);\n    float b = mix((bl), (br), luv.x);\n    float t = mix((tl), (tr), luv.x);\n    return mix(b, t, luv.y)+.5;\n}\n\nfloat perlinNoise(vec2 uv, float octaves){\n    float col;\n    for(float i=1.; i<octaves+1.; i++){\n    col += octave(uv*i+i*i)/pow(2., i-1.);\n    }col /= 2.-1./pow(2., octaves);\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord;\n    vec2 nuv = fragCoord/R.x;\n    float col = 0.;\n    \n    int octaves = 4;\n    float size = 10.;\n    \n    col += perlinNoise(nuv*size, float(octaves));\n\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}