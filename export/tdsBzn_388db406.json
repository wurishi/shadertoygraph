{"ver":"0.1","info":{"id":"tdsBzn","date":"1587622897","viewed":62,"name":"Mandelbrot Iteration Points","username":"Zanthra","description":"Click a position on the Mandelbrot fractal to show a point for each iteration of the series.\n\nBased on code from matthen https://www.shadertoy.com/view/tdsBzn","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 square(in vec2 z) {\n\treturn vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y);   \n}\n\n\nvec2 map(in vec2 julia, in vec2 uv, in float t) {\n    vec2 z = julia; \n    vec2 newZ = julia;\n    \n    vec2 z2 = uv;\n    vec2 newZ2 = uv;\n    \n    bool dark = false;\n    \n    float i;\n    for (i = 0.; i < t; i += 1.) {\n        if(length(z2) > 100.) {\n            dark = true;\n        }\n        \n        z = newZ;\n        if(length(z - uv) < 0.012)\n        {\n            return vec2(2.,0.);\n        }\n        \n        newZ = square(z) + julia;\n\n        z2 = newZ2;\n        newZ2 = square(z2) + uv;\n        \n    }\n    \n    i -= 1.;\n    \n    z = mix(z, newZ, smoothstep(0.,1.,t-i));\n    if(length(z - uv) < 0.016)\n    {\n        return vec2(2.,0.);\n    }\n    \n    z2 = mix(z2, newZ2, smoothstep(0.,1.,t-i));\n    \n    if(dark){\n        return vec2 ( 100., 0.);\n    }\n    return z2;\n}\n\n\nvec3 palette(in vec2 z) {\t\n    \n    float r = length(z);\n    if (r == 2.)\n    {\n        return vec3(1.,1.,0.);\n    }\n    else if (r > 2.)\n    {\n        return vec3(0.,0.,0.);\n    }else\n    {\n        return vec3(0.2,0.2,1.);\n    }\n}\n\n\nvec3 gradient(in vec2 z) {\t\n    float r = length(z);\n    r /= 3.;\n    r = pow(r, 0.6);\n    vec3 rainbow = 0.5 + 0.5 * cos((5.5 * r + vec3(0.2, 0.45, 0.8)*6.));\n    rainbow *= (1. - smoothstep(1., 1.03, r));\n    rainbow *= (smoothstep(0.0, 0.03, abs(r-0.4)));\n    return rainbow;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n    //To use the timing or coloring of the original by matthen, change these to true.\n    bool originalTiming = false;\n    bool originalColoring = false;\n    \n    vec2 julia = (iMouse.xy - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n    \n    \n    float t = iTime;\n    \n    if(originalTiming)\n    {\n    \tt = mod(t, 14.);\n    \tt = 0.1 * t * t;\n    \tt = min(t, 16.);\n    }else\n    {\n        t = mod(t, 20.);\n    \tt = t * t;\n    }\n    \n    uv *= 4.;\n    julia *= 4.;\n\t\n    uv = map(julia, uv, t);\n    \n    vec3 rgb;\n    \n    if(originalColoring)\n    {\n        rgb =  gradient(uv);\n    }\n    else\n    {\n    \trgb = palette(uv);\n    }\n    fragColor = vec4(rgb, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}