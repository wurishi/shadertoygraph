{"ver":"0.1","info":{"id":"fdt3Dl","date":"1630876467","viewed":38,"name":"Overlapping Ripples Effect","username":"flarn2006","description":"No, I don't want to describe my shader.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float offset = sin(1.5*iTime) * 0.2;\n    vec2 uv2 = uv + vec2(-offset, offset);\n    vec2 uv3 = uv - vec2(-offset, offset);\n\n    // Output to screen\n    fragColor = vec4(texture(iChannel0, uv).r, texture(iChannel0, uv2).r, texture(iChannel0, uv3).r, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy - vec2(0.5, 0.5);\n    float r = sqrt(uv.x*uv.x + uv.y*uv.y);\n    float val = fract(16.0 * (sin(3.0*iTime) + 1.2) * r);\n    fragColor = vec4(val, val, val, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}