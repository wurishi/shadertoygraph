{"ver":"0.1","info":{"id":"7tdyD4","date":"1659934036","viewed":75,"name":"autogen 46","username":"asynth","description":"Generated by a program written in Rust.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.3653, 0.5335), 0.2555);\n\tvec3 a1 = tri(vec3(uv.y)*2.6860 + 0.1219 + iTime*0.3864);\n\treturn (-sq(a1));\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.4440, 0.0879), 0.1344);\n\tvec3 a1 = mix2(uv, vec3(0.9846, 0.6800, 0.0861), vec3(0.4103, 0.5214, 0.7677), vec3(0.5378, 0.5420, 0.7894), vec3(0.1945, 0.8316, 0.3276));\n\tvec3 a2 = mix2(uv, vec3(0.7309, 0.6027, 0.3884), vec3(0.5304, 0.3157, 0.6779), vec3(0.8550, 0.6201, 0.9187), vec3(0.0688, 0.4647, 0.3170));\n\tvec3 a3 = well(sq((vec3(uv.x) / mod(bi(a1), a2)))*3.1861 + 0.9862 + iTime*0.2367);\n\treturn bi(a3);\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = (mat2(-1.0860,-1.0030,0.9976,-0.9087)*(uv-vec2(-0.4777,-0.7061)+vec2(-0.4777,-0.7061)));\n\treturn vec3(uv.x);\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\tvec3 a1 = mix2(uv, vec3(0.6209, 0.9991, 0.0514), vec3(0.3403, 0.6600, 0.8610), vec3(0.3676, 0.0937, 0.3044), vec3(0.2403, 0.3440, 0.2560));\n\tvec3 a2 = tri(pthresh(0.9534, node_1(uv), node_2(uv), (-mod(abs(a1), node_3(uv))))*3.5380 + 0.0122 + iTime*0.3217);\n\treturn a2;\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn vec3(length(uv));\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.0470, -0.5489), 0.4410);\n\tvec3 a1 = sin(node_5(uv)*2.6811 + 0.9953 + iTime*0.1343);\n\treturn (-bi(bi(a1)));\n}\n\nvec3 node_7(vec2 uv) {\n\tvec3 a1 = noise(uv, vec2(2.638727, 0.12072913), 0.211625);\n\tuv = xywarp(uv, vec2(0.4376, 0.2934), (a1 * vec3(uv.y)).xy);\n\treturn vec3(uv.x);\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\tvec3 a1 = tri((vec3(atan(uv.y, uv.x)) / vec3(uv.y))*2.6977 + 0.8700 + iTime*0.2295);\n\treturn a1;\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = (mat2(-0.9060,-1.4020,1.0677,1.3771)*(uv-vec2(0.6189,-0.5579)+vec2(0.6189,-0.5579)));\n\treturn vec3(uv.y);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.1313, -0.1195), 0.4807);\n\treturn node_9(uv);\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\tvec3 a1 = sin((vec3(length(uv)) * node_10(uv))*1.5215 + 0.2663 + iTime*0.3247);\n\treturn mix(a1, abs(vec3(uv.x)), vec3(uv.x));\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn bi(vec3(uv.y));\n}\n\nvec3 node_13(vec2 uv) {\n\tvec3 a1 = vec3(0.8635, 0.6379, 0.4442);\n\tvec3 a2 = mix2(uv, vec3(0.5337, 0.6627, 0.0982), vec3(0.8091, 0.9939, 0.6027), vec3(0.9637, 0.4484, 0.0822), vec3(0.1654, 0.0919, 0.9289));\n\tvec3 a3 = mix2(uv, vec3(0.0955, 0.3671, 0.2518), vec3(0.0205, 0.7643, 0.1086), vec3(0.3501, 0.1639, 0.3240), vec3(0.9452, 0.1025, 0.7976));\n\tvec3 a4 = sin(a3*2.2676 + 0.2988 + iTime*0.3791);\n\tvec3 a5 = well(mix(node_6(uv), sigmoid((vec3(uv.y) * min(a1, a2))), a4)*2.8976 + 0.9118 + iTime*0.3772);\n\tvec3 a6 = tri((node_7(uv) * node_8(uv))*3.7652 + 0.9541 + iTime*0.0858);\n\tvec3 a7 = well((quant(abs(abs(a5)), bi(uni(a6))) / bi(vec3(uv.y)))*2.7592 + 0.5239 + iTime*0.2802);\n\tuv = xywarp(uv, vec2(0.3976, -0.6529), a7.xy);\n\tvec3 b1 = noise(uv, vec2(0.15078852, 0.8332107), 0.286423);\n\tvec3 b2 = mix2(uv, vec3(0.5245, 0.9408, 0.1314), vec3(0.6052, 0.0475, 0.7824), vec3(0.9060, 0.1092, 0.6803), vec3(0.0834, 0.4712, 0.9853));\n\tvec3 b3 = vec3(0.8834, 0.7026, 0.0519);\n\treturn mix(max(bi(((b1 * sigmoid(node_11(uv))) + quant(vec3(uv.y), b2))), vec3(atan(uv.y, uv.x))), node_12(uv), (-mix(vec3(length(uv)), vec3(atan(uv.y, uv.x)), b3)));\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = (mat2(1.4050,1.3630,1.3089,0.7618)*(uv-vec2(0.2396,0.5265)+vec2(0.2396,0.5265)));\n\tvec3 a1 = noise(uv, vec2(2.0358298, 2.829641), 0.415395);\n\tvec3 a2 = tri(abs(sq((node_13(uv) + a1)))*3.8111 + 0.9876 + iTime*0.1840);\n\treturn abs(a2);\n}\n\nvec3 node_15(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn vec3(uv.y);\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.2598, 0.4657), 0.2343);\n\treturn node_15(uv);\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = (mat2(1.0921,-1.2096,-1.3462,0.9356)*(uv-vec2(0.9913,-0.5290)+vec2(0.9913,-0.5290)));\n\tvec3 a1 = sin(sigmoid(node_16(uv))*3.8378 + 0.8786 + iTime*0.2884);\n\treturn (sigmoid(a1) * bi(bi(uni(vec3(uv.x)))));\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\treturn sq(vec3(uv.x));\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.0045, 0.3437), 0.2413);\n\tvec3 a1 = noise(uv, vec2(1.2333401, 2.0574954), 0.485021);\n\tvec3 a2 = well(mix(vec3(uv.y), vec3(uv.x), a1)*4.2721 + 0.2915 + iTime*0.2200);\n\treturn a2;\n}\n\nvec3 node_20(vec2 uv) {\n\tuv = (mat2(-0.8532,1.0125,-1.3696,1.2526)*(uv-vec2(-0.2284,0.4622)+vec2(-0.2284,0.4622)));\n\tvec3 a1 = vec3(0.8317, 0.5099, 0.3492);\n\tvec3 a2 = noise(uv, vec2(0.9284158, 2.9861429), 0.469162);\n\tvec3 a3 = mix2(uv, vec3(0.6228, 0.8951, 0.8965), vec3(0.7683, 0.8459, 0.4558), vec3(0.9798, 0.2401, 0.2729), vec3(0.8303, 0.7448, 0.6131));\n\tvec3 a4 = tri(mod(vec3(uv.x), a3)*2.2670 + 0.3233 + iTime*0.1236);\n\tvec3 a5 = mix2(uv, vec3(0.8416, 0.9456, 0.0021), vec3(0.7169, 0.7471, 0.5881), vec3(0.9295, 0.1391, 0.1615), vec3(0.4897, 0.1274, 0.5042));\n\tvec3 a6 = tri(((vec3(uv.x) * vec3(atan(uv.y, uv.x))) * vec3(uv.y))*1.9464 + 0.5427 + iTime*0.1941);\n\tvec3 a7 = sin(a6*1.1205 + 0.0482 + iTime*0.0877);\n\treturn (pthresh(0.7434, mod(a1, a2), a4, (pthresh(0.0020, vec3(atan(uv.y, uv.x)), (vec3(atan(uv.y, uv.x)) / vec3(atan(uv.y, uv.x))), a5) / vec3(uv.x))) * (vec3(atan(uv.y, uv.x)) + (node_19(uv) - a7)));\n}\n\nvec3 node_21(vec2 uv) {\n\tuv = reflect_2(uv);\n\treturn vec3(length(uv));\n}\n\nvec3 node_22(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\treturn vec3(uv.y);\n}\n\nvec3 node_23(vec2 uv) {\n\tuv = reflect_2(uv);\n\tvec3 a1 = well((sq(node_21(uv)) / vec3(uv.y))*2.0092 + 0.5657 + iTime*0.3199);\n\tvec3 a2 = vec3(0.1974, 0.8329, 0.5346);\n\tvec3 a3 = noise(uv, vec2(0.25591257, 3.846959), 0.076030);\n\tvec3 a4 = noise(uv, vec2(0.12574787, 0.5214987), 0.639064);\n\tvec3 a5 = sin(((a2 - a3) + quant(a4, uni(node_22(uv))))*2.8503 + 0.8400 + iTime*0.1342);\n\tvec3 a6 = tri(vec3(uv.y)*5.5715 + 0.6584 + iTime*0.2476);\n\tvec3 a7 = mix2(uv, vec3(0.5887, 0.8484, 0.5702), vec3(0.7281, 0.2922, 0.0733), vec3(0.8994, 0.9401, 0.7504), vec3(0.1529, 0.3334, 0.5723));\n\tvec3 a8 = well(a7*2.3875 + 0.8024 + iTime*0.3473);\n\tvec3 a9 = noise(uv, vec2(3.7690868, 3.5438957), 0.605667);\n\treturn uni(pthresh(0.4912, (sigmoid(uni(a1)) - a5), (-(vec3(length(uv)) - a6)), pthresh(0.4995, a8, a9, mix(vec3(uv.x), vec3(uv.x), vec3(atan(uv.y, uv.x))))));\n}\n\nvec3 node_24(vec2 uv) {\n\tuv = (mat2(-1.0727,-0.9286,-1.1897,0.9547)*(uv-vec2(0.1141,0.0803)+vec2(0.1141,0.0803)));\n\treturn (node_20(uv) / node_23(uv));\n}\n\nvec3 node_25(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.6460, 0.5825, 0.6339), vec3(0.7781, 0.2943, 0.4276), vec3(0.4892, 0.8829, 0.5460), vec3(0.5650, 0.3184, 0.9681));\n\tuv = xywarp(uv, vec2(0.4068, -0.6789), (vec3(uv.y) / a1).xy);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_26(vec2 uv) {\n\tuv = circ_inv(uv, vec2(-0.2187, -0.0166), 0.1738);\n\tvec3 a1 = well(vec3(length(uv))*4.1511 + 0.8450 + iTime*0.3628);\n\treturn sq((a1 + vec3(uv.x)));\n}\n\nvec3 node_27(vec2 uv) {\n\tuv = polar_to_rect(uv);\n\treturn bi(node_26(uv));\n}\n\nvec3 node_28(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.0590, 0.5751, 0.4478), vec3(0.3078, 0.7821, 0.9655), vec3(0.9238, 0.8688, 0.1330), vec3(0.1026, 0.3086, 0.7523));\n\tuv = xywarp(uv, vec2(0.9284, 0.0099), max(mod(((-node_4(uv)) + node_14(uv)), ((node_17(uv) + (-node_18(uv))) - a1)), node_24(uv)).xy);\n\tvec3 b1 = sin(node_27(uv)*4.9009 + 0.3072 + iTime*0.2553);\n\treturn max(node_25(uv), b1);\n}\n\nvec3 top(vec2 uv) {\n\treturn abs(node_28(uv));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}