{"ver":"0.1","info":{"id":"tsVXzG","date":"1574344055","viewed":206,"name":"Torus slice","username":"gaz","description":"3D","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.0)\n#define TAU PI*2.0\n#define rot(a) mat2(cos(a), sin(a), -sin(a), cos(a))\n#define hue(t) (cos((vec3(0,2,-2)/3.0+t)*TAU)*0.5+0.5)\n#define hsv(h,s,v) mix(vec3(1),hue(h),s)*v\n\n\nvec3 rot3D(vec3 p,vec3 a,float t) \n{\n\ta=normalize(a);\n\tvec3 v=cross(a,p),u=cross(v,a);\n\treturn u*cos(t)+v*sin(t)+a*dot(p, a);   \n}\n\nvec2 billboardUv(vec3 ro,vec3 rd, vec3 a)\n{\n    a-=ro;\n    vec3 g= cross(a, rd);\n    vec3 up=normalize(cross(a,cross(a,vec3(0,1,0))));\n    return vec2(dot(g,up),dot(g,cross(up,normalize(a))));\n}\n\nfloat hash(float n)\n{\n    return fract(sin(n)*5555.0);\n}\n\nvec3 randVec(float n)\n{\n\tvec3 v=vec3(1,0,0);\n    v.xy*=rot(asin(hash(n)*2.0-1.0));\n    v.xz*=rot((hash(n+215.3)*2.0-1.0)*PI);\n\treturn v;\n}\n\nvec2 map(vec3 p)\n{   \n    p.z-=iTime*6.0;\n    vec3 id=floor(p/6.0);\n    p=mod(p,6.0)-3.0;\n    if(hash(dot((id+236.0)*236.55,id.xzy+123.0))>0.5)return vec2(2,0);\n    float c=hash(dot((id+1236.0)*26.7,id.xzy+123.023));\n    p=rot3D(p,randVec(dot(id*236.5,id.xzy+123.0)),iTime+hash(dot((id+236.0)*236.33,id.xzy+123.0))*3.0);\n    p.xy*=rot(iTime*0.8);\n\tp.xz*=rot(iTime*0.5);\n\tvec2 q =vec2(abs(length(p)-2.0),p.z);\n    float de=abs(length(q)-0.5);\n    return  vec2(de,c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(1,10,30);\n    ro.yz*=rot((iMouse.y-0.5)*0.002);\n    ro.xz*=rot(iMouse.x*0.005);\n    vec3 ta=vec3(0,5,1);\n    ta.xy+=sin(iTime);\n    ta.xy*=rot(iTime*0.3);\n    vec3 w=normalize(ta-ro);\n    vec3 u=normalize(cross(w,vec3(0,1,0)));\n\tvec3 v=cross(w,u);\n    vec3 rd=normalize(u*p.x+v*p.y+w*2.0);\n    vec3 col = vec3(0);\n    for(float i=-20.0; i<20.0;i+=0.5)\n    {\n        //vec2 uv=billboardUv(ro,rd,vec3(0,0,i));\n \t\t//vec3 p = vec3(uv,i);\n        // fixed camera control\n        vec3 p=ta+w*i;\n        vec2 uv=billboardUv(ro,rd,p);\n\t\tp+=u*uv.x+v*uv.y; \n        \n        vec2 de=map(p);\n        float z=length(p-ro);\n        col+=hsv(de.y,0.7,0.5)*exp(-z*z*0.0005)*exp(-de.x*10.0);\n    }\n    col=min(vec3(1),col);\n    fragColor=vec4(col,1);\n}\n","name":"Image","description":"","type":"image"}]}