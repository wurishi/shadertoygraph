{"ver":"0.1","info":{"id":"dds3RS","date":"1666353838","viewed":256,"name":"spiral grid gif reproduction","username":"Bleuje","description":"Just reproducing a gif by beesandbombs\nIt's here : https://twitter.com/beesandbombs/status/1582508948262834177","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["2d","loop","gif","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define time (0.3*iTime)\n\n// reproducing https://twitter.com/beesandbombs/status/1582508948262834177\n// (gif by beesandbombs)\n\n\n// https://www.shadertoy.com/view/ll2GD3\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n// https://www.shadertoy.com/view/ll2GD3\nvec3 palette(float p)\n{\n    p = fract(p);\n    float limit = 0.45;\n    if(p>limit) return vec3(0.);\n    return 1.3*sqrt(1.0-p/limit)*pal( 2.35*p-0.2, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,0.7,0.4),vec3(0.5)+vec3(0.0,0.15,0.20) );\n}\n\n// Rotation 2D matrix\nmat2 rot(float a) { float c = cos(a), s = sin(a); return mat2(c,-s,s,c); }\n\n// found in tdhooper shader : https://www.shadertoy.com/view/fdSGRy\nvec3 aces(vec3 x) {\n  const float a = 2.51;\n  const float b = 0.03;\n  const float c = 2.43;\n  const float d = 0.59;\n  const float e = 0.14;\n  return clamp((x * (a * x + b)) / (x * (c * x + d) + e), 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    \n    float cellSize = 0.05;\n    vec2 cellId = floor(uv/cellSize);\n    vec2 localUV = uv/cellSize-cellId;\n    \n    float type = mod(cellId.x+cellId.y,2.0);\n    \n    cellId += 0.5;\n    \n    if(max(abs(cellId.x),abs(cellId.y))>8.)\n    {\n        fragColor = vec4(vec3(0.),1.0);\n        return;\n    }\n    \n    float offset = -atan(cellId.y,cellId.x)/PI/2.0 +0.07*length(cellId);\n    \n    float tt = time-offset;\n\n    vec3 col = vec3(0.);\n    float offset2;\n    \n    float of = 0.07;\n    \n    localUV *= rot(type*0.5*PI); \n    \n    offset2 = (1.0*localUV.x+2.0*localUV.y)*of;\n    col += palette(tt-offset2);\n    offset2 = (1.0*localUV.x-2.0*localUV.y)*of+0.65;\n    col += palette(tt-offset2);\n    \n    col = aces(col);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}