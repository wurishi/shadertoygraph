{"ver":"0.1","info":{"id":"ttjBWR","date":"1598702081","viewed":90,"name":"Fractal try","username":"sariug","description":"fractal trial ","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4tB3WK","filepath":"https://soundcloud.com/fish-tales/fisher-losing-it","previewfilepath":"https://soundcloud.com/fish-tales/fisher-losing-it","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec2 mnormal(float angle)\n{\n    return vec2(sin(angle),cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    // Pixel color\n    vec3 col = vec3(0);\n    uv *=iTime+2.;//*mat2(cos(iTime), sin(iTime),-sin(iTime),cos(iTime))*uv;\n    \n\tvec2 n;\n    float angle = 0.645;\n    for(int i = 0;i<3;i++){\n        uv.x = abs(uv.x);\n        if(i == 0)uv.y += .5* tan(3.1415*.64);\n        n = mnormal(3.1415*angle); // vector to point\n        float dd =  dot(n,uv-vec2(.5,0));\n        uv-=n*max(0.,dd)*2.; // Reflection\n    }\n\n\t\n    float scale = 1.0;\n    n = mnormal(1./3.*3.1415);\n    uv.x+=.5;\n    for(int i = 0;i<int(iTime/1.5)+1;i++  )  {\n        scale*=3.0;\n        uv *= 3.;\n        uv.x-=1.5;\n\n        uv.x = abs(uv.x); // mirroring\n        uv.x-=.5; \n        uv-=n*min(0., dot(n,uv))*2.; // Reflection\n    }\n\n    float d = length(uv-vec2(clamp(uv.x, -1., 1.), 0));\n    col+= smoothstep(3./iResolution.y,.0,d/scale); \n\tuv /=scale;\n\n    float time = -abs(cos(iTime));\n    uv *=  time;\n    float fft  = texelFetch( iChannel1, ivec2(uv.y,0), 0 ).x; \n    if(uv.y>0.)\n    col += texture(iChannel0, uv).rgb;\n    else\n        col+= texture(iChannel2, uv.xy).bgr+fft/10.;\n \tif(time>0.)\n        col = vec3(1.);\n\n    col+=fft/5.;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}