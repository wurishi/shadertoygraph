{"ver":"0.1","info":{"id":"wtKfWW","date":"1614355705","viewed":68,"name":"Dither fractal, scalable, no rng","username":"danielsturk","description":"Predictable noise","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n    uv /= 10.;\n    \n    float weight = 1.;\n    float value = .5;\n    mat2 rotate = mat2(0, -1, 1, 0);\n    for(int i = 0; i < 3; i++) {\n        vec2 xy = vec2(greaterThan(fract(uv * .5), vec2(.5, .5)));\n        xy = rotate * (xy - vec2(.5)) + vec2(.5);\n        xy.y = xy.x * (1. - xy.y) +  (1. - xy.x) * xy.y; //if(xy.x) xy.y = !xy.y;\n        float delta = dot(\n            xy,\n            vec2(.25, .5)\n        ) - (3. / 8.);\n        delta *= weight;\n        \n        value += delta;\n        weight *= .25;\n        \n        uv *= .5;\n        rotate *= rotate;\n    }\n    \n    // value = fract(value + iTime * .01);\n    fragColor = vec4(vec3(value),1);\n}","name":"Image","description":"","type":"image"}]}