{"ver":"0.1","info":{"id":"4lBBRc","date":"1516633092","viewed":104,"name":"isometric view","username":"unnick","description":"experimenting with isometric view.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rand(v) fract( sin( dot( v, vec2(12.9898,78.233 )) ) * 43758.5453 )\n\nconst mat2 tmat = inverse(mat2(1.0, -1.0, 0.5, 0.5));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = (fragCoord.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y) * 2.0;\n    pos += iTime;\n    vec2 mpos = (iMouse.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y) * 2.0;\n    vec2 trfpos = pos * 2.0 * tmat;\n    vec2 tileid = floor(trfpos);\n    vec2 tilepos = mod(trfpos, 1.0);\n    fragColor = vec4(\n      normalize(vec2(\n        (int(tileid.x)&1)==0?tilepos.x:1.0-tilepos.x,\n        (int(tileid.y)&1)==0?tilepos.y:1.0-tilepos.y\n      )), 0.0, 1.0\n    );\n    if(rand(tileid)>0.5){\n        tilepos.xy = tilepos.yx*vec2(1.0, -1.0);\n        tilepos.y += 1.0;\n    }\n    if(length(1.0-tilepos)<1.0/3.0 || length(tilepos)<1.0/3.0) fragColor = vec4(1.0);\n    if(length(1.0-tilepos)>2.0/3.0 && length(tilepos)>2.0/3.0) fragColor = vec4(1.0);\n    if(tilepos.x > 0.95) fragColor = vec4(0.0);\n    if(tilepos.x < 0.05) fragColor = vec4(0.0);\n    if(tilepos.y > 0.95) fragColor = vec4(0.0);\n    if(tilepos.y < 0.05) fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}]}