{"ver":"0.1","info":{"id":"ltlXRf","date":"1438678826","viewed":447,"name":"Cartesian to Polar coordinates ","username":"strimbob","description":"from https://gist.github.com/KeyMaster-/70c13961a6ed65b6677d","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//To be used on shadertoy.com\n//Uses the image at iChannel0 and warps it into polar coordinates\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 relativePos = fragCoord.xy - (iResolution.xy / 2.0);\n    vec2 polar;\n    polar.y = sqrt(relativePos.x * relativePos.x + relativePos.y * relativePos.y);\n    polar.y /= iResolution.x / 2.0;\n    polar.y = 1.0 - polar.y;\n\n    polar.x = atan(relativePos.y, relativePos.x);\n    polar.x -= 1.57079632679;\n    if(polar.x < 0.0){\n\t\tpolar.x += 6.28318530718;\n    }\n    polar.x /= 6.28318530718;\n    polar.x = 1.0 - polar.x;\n    \n    vec4 c = texture(iChannel0, polar);\n\tfragColor = vec4(c);\n}","name":"","description":"","type":"image"}]}