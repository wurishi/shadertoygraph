{"ver":"0.1","info":{"id":"NtB3zW","date":"1623404372","viewed":94,"name":"Audio Visualizer I Guess...","username":"TrevallionJ","description":"First off, this is dumb...\nThis started off as a test for using buffers to store previous bass levels so you could normalize and get greater changes in bass value...\nCheck my previous version to understand what this is kinda...\nfull screen causes lag","likes":2,"published":1,"flags":96,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  This might as well be magic as even i dont understand it and im the one who wrote it...\nfloat average_B()\n{\n    float result = 0.0;\n    for(float i = 0.0; i < iResolution.x; i++){\n        result = result + texture(iChannel0, vec2(i/iResolution.x, 0.0))[0];\n    }\n    return result/iResolution.x;\n}\n\n//\tGets average of frequency spectrum range\nfloat average(float start, float end)\n{\n    float total = 0.0;\n    for(float i = start; i < end; i++){\n        total += texture(iChannel0, vec2(i / 512.0, 0.0))[0];\n    }\n    return total / (end - start);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.y;\n    uv.x = uv.x - ((iResolution.x / 2.0) / iResolution.y);\n    uv.y = uv.y - 0.5;\n    \n    float bass = (pow(average_B(), 3.0)*2.0) + 0.05;\n    fragColor = vec4(bass * (2.0 - length(uv) * 1.5), 0.0, bass * (length(uv) * 2.0), 1.0);\n    \n    uv = fragCoord / iResolution.xy;\n    if (distance(uv, vec2(uv.x, texture(iChannel0, vec2(uv.x, 1.0)))) < bass*0.2){\n        fragColor = vec4(0.0, (average(0.0, 512.0) - 0.5) * 5.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XlfXRl","filepath":"https://soundcloud.com/f-777/f-777-deadlocked-full-version","previewfilepath":"https://soundcloud.com/f-777/f-777-deadlocked-full-version","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Make audio input GLOBAL\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//\tGets average of frequency spectrum range\nfloat average(float start, float end)\n{\n    float total = 0.0;\n    for(float i = start; i < end; i++){\n        total += texture(iChannel0, vec2(i / 512.0, 0.0))[0];\n    }\n    return total / (end - start);\n}\n\n//  Uses buffer as memory to store average amplitude\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord.x < 1.0){\n        fragColor = vec4(average(0.0, 16.0));\n    } else {\n        fragColor = texture(iChannel1, vec2((fragCoord.x-1.0)/iResolution.x, 0.0));\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}