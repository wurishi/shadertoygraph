{"ver":"0.1","info":{"id":"tdfXWS","date":"1551993724","viewed":349,"name":"Hypno spiral","username":"JScotty","description":"My very first Shadertoy shader :)\n\nI wanted to put some research in spirals and came up to this project while playing around with my research. :)\n\nHope you like it, and if you have any remarks or tips please let me know.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["spiral","hypno"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED 0.1 // speed over simulated z axis\n#define ROTATION_SPEED 4.0 // rotation speed of the spirals\n#define DISTANCE 20.0 // start distance of the spiral\n#define SIZE 10.0 // layer size ( put it 100+ for fun ;) )\n#define LAYERS 4.0 // amount of layers\n#define LAYER_ALPHA 0.4 // alpha of layer spiral\n#define SPIRALS 4.0 // alpha of layer spiral\n#define SPIRALS_STRENGTH 0.1 // strength of spiral edge fade\n\nfloat Spiral(vec2 uv){\n    // creating spiral\n\tfloat x = uv.x;\n\tfloat y = uv.y;\n    \n    float dis = length(uv);\n   \tfloat angle = atan(y, x) * SPIRALS;\n    \n    float c = sin(dis * DISTANCE + (angle + iTime * ROTATION_SPEED));\n\t\n    // make sure the spiral value can not be less than 0 so it won't affect layers.\n    if(c < 0.0) c *= 1.0;\n    c = smoothstep(0.0, SPIRALS_STRENGTH, c);\n\t\n    return c * LAYER_ALPHA;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // spiral value called c because it will represend color\n    float c = 0.0;\n    \n    // correcting uv coords to center of the screen\n   \tvec2 uv = fragCoord/iResolution.xy;\n   \tuv -= vec2(0.5, 0.5);\n   \tuv *= 2.0;\n    \n   \tfor(float i = 0.0; i <= 1.0; i+=1.0/LAYERS){\n        // calculating simulated z axis\n   \t   \tfloat z = fract((i) + (iTime * SPEED));\n       \tfloat size = mix(SIZE, 0.1, z);\n        \n        // fade on base of simulated z axis (to fade layer in and out)\n       \tfloat fade = smoothstep(0.0, 0.1, z) * smoothstep(1.0, 0.9, z);\n    \n        //apply new spiral\n       \tc += fade * Spiral(uv * size);\n   \t}\n    \n    // loop through color over time\n   \tvec3 colorChange = sin(iTime * 5.0 * vec3(0.3, 0.5, 0.6)) * 0.4 + 0.6;\n\tfragColor = vec4(c,c,c,c) * vec4(colorChange, 1);\n}","name":"Image","description":"","type":"image"}]}