{"ver":"0.1","info":{"id":"tsdfWN","date":"1605174422","viewed":67,"name":"Capped cone - 2D distance","username":"M_cgode","description":"Interactive 2D distance field for capped cone.\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Y 0.0\n#define HEIGHT 2.0\n\n\n// Based off iq's 3D SDFs article: https://iquilezles.org/articles/distfunctions\nfloat sdCappedCone(vec3 p, vec3 a, vec3 b, float ra, float rb)\n{\n    float rba  = rb-ra;\n    float baba = dot(b-a,b-a);\n    float papa = dot(p-a,p-a);\n    float paba = dot(p-a,b-a)/baba;\n    float x = sqrt( papa - paba*paba*baba );\n    float cax = max(0.0,x-((paba<0.5)?ra:rb));\n    float cay = abs(paba-0.5)-0.5;\n    float k = rba*rba + baba;\n    float f = clamp( (rba*(x-ra)+paba*baba)/k, 0.0, 1.0 );\n    float cbx = x-ra - f*rba;\n    float cby = paba - f;\n    float s = (cbx < 0.0 && cay < 0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(cax*cax + cay*cay*baba,\n                       cbx*cbx + cby*cby*baba) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float ratio = iResolution.x / iResolution.y;\n    vec2 coordinates = (2.0 * uv - 1.0) * vec2( ratio, 1.0 ) * HEIGHT / 2.0;\n    \n    vec3 b = vec3( 0.5, Y, 0.5 );\n    if ( length(iMouse.xy) > 0. ) \n    \tb.xz = (2.0 * (iMouse.xy / iResolution.xy) - 1.0) * vec2( ratio, 1.0 ) * HEIGHT / 2.0;\n    \n    vec3 p = vec3( coordinates.x, Y, coordinates.y);\n    float d = sdCappedCone(\n        p,\n        vec3(-0.5, Y, -0.5),\n        b,\n        0.5,\n        0.2\n    );\n    \n    // Reuse color compute from iq's shader: https://www.shadertoy.com/view/MlKcDD\n    vec3 col = vec3(1.0) - vec3(0.1,0.4,0.7)*sign(d);\n\tcol *= 1.0 - exp(-4.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(140.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.015,abs(d)) );\n\n    // Output to screen\n    fragColor = vec4(col ,1.0);\n}","name":"Image","description":"","type":"image"}]}