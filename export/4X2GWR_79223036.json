{"ver":"0.1","info":{"id":"4X2GWR","date":"1708361588","viewed":78,"name":"Fork blob world tubeman 229","username":"tubeman","description":"adapted from https://www.shadertoy.com/view/DtyXDR","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"XX2GWR","parentname":"blob world"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float scene(vec3 p) {\n  return dot(asin(sin(p)*.95),vec3(1))/sqrt(3.) - 1.1;\n}\n\nvec3 norm(vec3 p) {\n  mat3 k = mat3(p,p,p) - mat3(0.01);\n  return normalize(scene(p) - vec3(scene(k[0]),scene(k[1]),scene(k[2])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n  float t = iTime;\n  \n  vec3 cam = normalize( vec3( 1., uv ).xzy );\n  vec3 init = vec3(-t*.8,0,0);\n  \n  vec3 p = init;\n  bool hit = false;\n  for ( int i = 0; i < 100 && !hit; i++) {\n    if (distance(p,init) > 60.) break;\n    float d = scene(p);\n    if (d*d < 0.00001) hit = true;\n    p += cam*d;\n  }\n  vec3 n = norm(p);\n  \n  float ao = smoothstep(-.75,.75,scene(p+n*.6))\n           * smoothstep(-3.,3.,scene(p+n*1.));\n  float fres = pow(1.-abs(dot(cam,n)), 3.);  \n  float stripes = asin(sin(t*2.+dot(p,vec3(8))));\n  \n  vec3 col =  1.-vec3(0.01,1.,0.3)*smoothstep(-0.1,0.1,stripes);\n  col = (vec3(fres)+col)*ao;\n  col = mix(col, vec3(1.), !hit ? 1. : smoothstep(0.,60.,distance(p,init)));\n  fragColor.xyz = smoothstep(0.,1.,0.6*col + 0.4*sqrt(col));\n}\n","name":"Image","description":"","type":"image"}]}