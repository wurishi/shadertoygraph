{"ver":"0.1","info":{"id":"cljcWG","date":"1692227040","viewed":71,"name":"whirlwind radial","username":"akr51","description":"using radial repetition and trig and some neon effects ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["radial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 clipCoords(vec2 fragCoord, vec3 iResolution)\n{\n\n\n    vec2 nfragCoord = fragCoord / iResolution.xy * 2.0 - 1.0;\n    nfragCoord.x *= (iResolution.x / iResolution.y);\n    return nfragCoord;\n\n}\n\n\nfloat fneon(float amount, float channel)\n{\n    amount = clamp(amount, 0.0, 0.99999);\n    return (1.0 - amount) / channel;\n\n}\n\n\n\n\n\nfloat repeatRadial(float channel, float coefficient, float t)\n{\n\n\n    float s = sin(channel * coefficient + t) / coefficient;\n    return abs(s);\n\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n   \n    vec2 nfragCoord = clipCoords(fragCoord, iResolution);\n    \n    vec3 rgb = vec3(0.0);\n    \n    float iterations = 100.0;\n    float intensity  = 98.0;\n    \n    for (float i = 0.0; i < iterations; ++i)\n    {\n        \n    \n        float shade = abs(length(nfragCoord + vec2(cos(i + iTime), sin(i + iTime)) * 0.75));\n       \n    \n        rgb.r += repeatRadial(shade, 5.0, iTime);\n        rgb.g += repeatRadial(shade, 2.0, iTime / 2.0);\n        rgb.b += repeatRadial(shade, 3.0, iTime / 3.0);\n        \n        rgb.r = fneon(0.9, rgb.r);\n        rgb.g = fneon(0.9, rgb.g);\n        rgb.b = fneon(0.9, rgb.b);\n        \n    }\n    \n    rgb /= (iterations / intensity);\n    \n    \n    fragColor = vec4(rgb, 1.0);\n  \n}","name":"Image","description":"","type":"image"}]}