{"ver":"0.1","info":{"id":"NljfWK","date":"1653023666","viewed":61,"name":"grey 2022-05-18","username":"asym","description":"gray","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grey"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TAU = 6.283185307179586;\n\nconst vec3 col0 = vec3(0, 4, 4) / 5.;\nconst vec3 col1 = vec3(4, 4, 4) / 5.;\nconst vec3 col2 = vec3(4, 5, 5) / 5.;\nconst vec3 col3 = col0;\n\nfloat crush(float a, float b) {\n  return round(a / b) * b;\n}\n\nfloat am(float x) {\n  return 0.5 - 0.5 * cos(TAU * x);\n}\n\nfloat th = 1.6;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  float t = mod(crush(iTime, 1. / 8.), 12.);\n  vec2 pos = (fragCoord - iResolution.xy / 2.) / iResolution.y * 2.;\n  vec2 p = pos;\n  p.x = p.x + mod(crush(p.y, 1. / 256.), 1. / 51.);\n  p = vec2(crush(p.x, 1. / 32.), crush(p.y, 1. / 256.));\n  float d0 = distance(vec2(0, 0), p);\n  float d1 = distance(0.04 * vec2(+cos(TAU * t / 3.), +sin(TAU * t / 12.)), p);\n  float d2 = distance(0.03 * vec2(-cos(TAU * t / 6.), -sin(TAU * t / +4.)), p);\n  float b0 = am(1.5 * d0 + t / 12.);\n  float b1 = am(2.0 * d1 - t / +6.);\n  float b2 = am(2.5 * d2 + t / +4.);\n  float r = fract(sin(dot(p + t / 1e7, vec2(12.9898, 78.233))) * 43758.5453);\n  float b = b0 + b1 + b2 + 0.7 * r - 0.7;\n  b = b > th ? th : b > 1. ? 1. : crush(max(0., b), 1. / 3.);\n  vec3 c = b == th ? col2 : mix(col0, col1, b);\n  // c = abs(pos.y) > .9 || abs(pos.x) > .9 ? col3 : c; // frame\n  fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}