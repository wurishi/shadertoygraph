{"ver":"0.1","info":{"id":"XlsXRj","date":"1438034922","viewed":296,"name":"Rotating world","username":"farious","description":"Testing out several things, focused on the lambertian shading.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["3d","sphere","lambertian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec4 sphere(vec2 uv, vec2 pos, float r, vec3 light)\n{\n    vec2 p = uv - pos;\n    float d = length(p) - r;\n    float z = sqrt(abs(r*r - dot(p, p)));\n    vec3 pP = normalize(vec3(p, z));\n    float i = dot(pP, light);\n    \n    return vec4(i,i,i,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n    vec3 light = normalize(vec3(cos(iTime) * 10.0, sin(iTime) * 15.0, sin(iTime)*10.0 + cos(iTime + 11.0)*5.0));\n    vec2 center = iResolution.xy * 0.5 + vec2(sin(iTime), cos(iTime)) * 160.0;\n\tfloat radius = 0.25 * iResolution.y;    \n    fragColor = sphere(uv, center, radius, light);\n}","name":"","description":"","type":"image"}]}