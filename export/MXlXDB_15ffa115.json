{"ver":"0.1","info":{"id":"MXlXDB","date":"1709944656","viewed":59,"name":"Mandelbrot Set 030624","username":"kukovisuals","description":"Mandelbrot 030624","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Mandelbrot set rendering\n\nfloat calculateMandelbrotSet(vec2 complexPoint) {\n    const float escapeRadius = 256.0;\n    float iterationCount = 0.0;\n    vec2 z = vec2(0.0);\n    \n    for (int i = 0; i < 512; i++) {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + complexPoint;\n        if (dot(z, z) > (escapeRadius * escapeRadius)) break;\n        iterationCount += 1.0;\n    }\n\n    if (iterationCount > 511.0) return 0.0;\n\n    // Smooth iteration count\n    float smoothIterationCount = iterationCount - log2(log2(dot(z, z))) + 4.0;\n\n    return smoothIterationCount;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 color = vec3(0.0);\n    vec2 normalizedCoords = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    float zoomFactor = 0.0007;\n    vec2 complexPoint = vec2(-0.741, 0.186) + normalizedCoords * zoomFactor;\n\n    float iteration = calculateMandelbrotSet(complexPoint);\n    color += 0.5 + 0.5 * cos(0.0 + iteration * 0.04 + vec3(0.0, 0.0, 0.0));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}