{"ver":"0.1","info":{"id":"clGyDG","date":"1700596005","viewed":14,"name":"Army Logo","username":"brendandegryse","description":"Be All That You Can Be","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["army"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C(c) U.x-=.5; fragColor+= char(U,64+c)\n\nvec4 char(vec2 p, int c) \n{\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel0, p/16. + fract( vec2(c, 15-c/16) / 16. ), dFdx(p/16.),dFdy(p/16.) );\n}\n\nfloat sdStar5(in vec2 p, in float r, in float rf)\n{\n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x,k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p),0.0)*k1;\n    p -= 2.0*max(dot(k2,p),0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n    float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nfloat sdRoundedBox( in vec2 p, in vec2 b, in vec4 r )\n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\nvec2 rotate(in vec2 uv, in float degrees)\n{\n    float x = uv.x*cos(degrees)-uv.y*sin(degrees);\n    float y = uv.x*sin(degrees)+uv.y*cos(degrees);\n    return vec2(x,y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    fragColor = vec4(0.0);\n    //Time varying pixel color\n    float d = smoothstep(0.0, 0.05*abs(sin(iTime)), sdStar5(rotate(uv,0.5*(iTime)), 0.7, 0.4)+sin(uv.x*uv.y+iTime)*0.01);\n    d = 1.0-d;\n    vec3 col = vec3(d,d,0.0);\n    col -= 1.0-step(0.0, sdStar5(rotate(uv,0.5*(iTime)), 0.6, 0.4));\n    col += (1.0-step(0.0, sdStar5(uv, 0.1*abs(sin(iTime))+0.5, 0.4)))*2.0;\n    col -= (step(0.0, sdRoundedBox(vec2((uv.x),uv.y), vec2(0.8), vec4(0.1,0.1,0.1,0.1)))-step(0.0, sdRoundedBox(vec2(uv.x,uv.y), vec2(0.75), vec4(0.1,0.1,0.1,0.1))))*vec3(1.0,1.0,0.0);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}