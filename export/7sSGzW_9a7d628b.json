{"ver":"0.1","info":{"id":"7sSGzW","date":"1617023778","viewed":128,"name":"Live Coding - VCL Lab Hour","username":"tripzilch","description":"Final result of my 30 minute live coding session for the Virtual Care Lab / #LAB HOUR anniversary, 2021/03/28.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["plasma","livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.283185307179586 // 2 * PI\nuniform vec2 u_resolution;\nuniform float u_time;\nconst vec3 gamma = vec3(2.2);\nconst vec3 igamma = 1.0 / gamma;\n\nconst vec4 H0 = vec4(0.5138670813222691, 0.5431834938989584, 0.5741724246765705, 0.6069292917805363);\nconst vec4 H1 = vec4(0.6415549569952288, 0.678156036327837, 0.7168452282900885, 0.7577416609086309);\nconst vec4 H2 = vec4(0.8009712585325574, 0.846667129567511, 0.8949699763302439, 0.9460285282856136);\nconst vec4 R = vec4(0.632006, 0.128123, 0.223201, 0.988116);\n\nfloat wobbly(vec2 uv, float t, float seed) {\n  vec4 f = (fract(H0 * seed + R) - .5) * 4.0 + 1.0;\n  vec4 g = (fract(H1 * seed + R) - .5) * 2.0;\n  vec4 p = (fract(H2 * seed + R) - .5) * 2.0;\n  const float ma = 0.25;\n\n  vec2 a = sin((f.xy * uv + g.xy * t + p.xy) * TAU);\n  vec2 b = sin((f.zw * uv + g.zw * t + p.zw + ma * a.yx) * TAU);\n\n  return 0.5 * (b.x + b.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  // this is how to get the pixels straight\n  vec2 aspect = iResolution.xy / iResolution.y;\n  vec2 uv = (fragCoord.xy / iResolution.xy - 0.5) * aspect;\n  uv *= 0.6;\n\n  float t = iTime * 0.1;\n  const float seedA = 562.0;\n  const float seedB = 845.0;\n  const float seedC = 173.0;\n\n  vec2 d = vec2(wobbly(uv, t, seedA), wobbly(uv, t, seedB));\n  float L = length(d);\n  d /= mix(1.0, L, smoothstep(.45, .4, L));\n\n  vec3 col = vec3(\n    .5 + .5 * wobbly(uv + 0.1 * d, t,  seedC),\n    .5 + .5 * wobbly(uv + 0.14 * d, t, seedC),\n    .5 + .5 * wobbly(uv + 0.18 * d, t, seedC)\n  );\n\n  float cm = (col.x + col.y + col.z) / 3.0;\n\n  col = smoothstep(0.0, 1.0, (col - cm) * 2.0 + cm);\n  float smokiness = 1.;//(.5 + .5 * sin(t * 0.5)) * 12.0 + 1.0;\n  float border = smoothstep(0.015 * smokiness,0.03 * smokiness, abs(L - 0.425));\n  col *= border;\n\n  // Output to screen\n  fragColor = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}