{"ver":"0.1","info":{"id":"ltlyRM","date":"1504125538","viewed":1544,"name":"Linear vs Logarithmic FFT","username":"airtight","description":"Top is regular FFT using linear sampling.\nBottom uses logarithmic sampling, showing musical frequencies more clearly. Also cropping frequency range and boosting contrast.\n","likes":23,"published":1,"flags":64,"usePreview":0,"tags":["fft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"ltSSRh","filepath":"https://soundcloud.com/firetonez/shape-of-you-marimba-remix-free-download","previewfilepath":"https://soundcloud.com/firetonez/shape-of-you-marimba-remix-free-download","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n\tLinear vs Logarithmic FFT\n\n\tsome good test songs:\n\n\thttps://soundcloud.com/kraddy/winning\n\thttps://soundcloud.com/grey-houston/soothing-piano-melody\n\thttps://soundcloud.com/pointpoint/life-in-gr\n\n*/\n\n//from https://stackoverflow.com/questions/35799286\nfloat toLog(float value, float min, float max){\n\tfloat exp = (value-min) / (max-min);\n\treturn min * pow(max/min, exp);\n}\n\nfloat getLevel(float samplePos){\n    // the sound texture is 512x2\n\tint tx = int(samplePos*512.0);\n\t// first row is frequency data (48Khz/4 in 512 texels, meaning 23 Hz per texel)\n\treturn texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    float xPos;\n    float fft;\n    \n    if (uv.y > 0.5){\n          \n        //linear sampling\n        xPos = uv.x;\n        fft = getLevel(xPos);\n        \n    }else{\n        \n        //crop bottom and top of range\n        uv.x = mix(0.3,0.7, uv.x);\n        \n        //logarithmic sampling\n        xPos = toLog(uv.x, 0.01, 1.0);\n\n        fft = getLevel(xPos);\n        \n        //boost contrast\n        fft = pow(fft,3.0);\n        \n        //boost gain\n        fft *= 1.5;\n        \n        //contrast / brightness\n        float contrast = 1.4;\n        float brightness = 0.;\n        fft = (fft - 0.5) * contrast + 0.5 + brightness;\n        \n    }\n    \n    fragColor = vec4(vec3(fft),1.0);\n       \n}","name":"Image","description":"","type":"image"}]}