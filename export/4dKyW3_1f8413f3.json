{"ver":"0.1","info":{"id":"4dKyW3","date":"1523543632","viewed":74,"name":"Grayscale Time Mode Image","username":"vextarelos","description":"Takes an image and watches grayscale on and off based on time.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grayscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 color = texture(iChannel0, uv);\n    \n    //Scale to grayscale\n    float scale = (color.x + color.y + color.z)/3.0;\n    \n    //Assign percentage of grayscale to apply based on time and location.\n    float grayScalePerc = abs(sin(iTime));\n    float colorPerc = 1.0-grayScalePerc;\n    color.r = (color.r * colorPerc) + (grayScalePerc * scale);\n    color.g = (color.g * colorPerc) + (grayScalePerc * scale);\n    color.b = (color.b * colorPerc) + (grayScalePerc * scale);\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}