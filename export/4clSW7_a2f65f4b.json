{"ver":"0.1","info":{"id":"4clSW7","date":"1705344266","viewed":78,"name":"Papel de parede","username":"Elsio","description":"Que feio! trocando dois par√¢metros e mostrando como um shader novo... ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","tunnel","nyan","displacement","wall","camera","cat","path"],"hasliked":0,"parentid":"ddycDd","parentname":"Tunel textura"},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define blue vec4(1, 4, 8, 0) / 30.\n#define white vec4(.3)\n\nconst float freqA = .21;\nconst float freqB = .17;\nconst float ampA = 2.1;\nconst float ampB = 1.9;\nfloat tun, bal, id;\n\nvec3 path(float z) {\n    return vec3(\n        ampA * sin(z * freqA), \n        ampB * cos(z * freqB),\n        z\n    );\n}\n\nvec3 path2(float z) {\n    return vec3(\n        ampB * sin(z * freqB * .27), \n        ampA * cos(z * freqA * .31),\n        z\n    );\n}\n\n\nfloat textura(vec3 p) {\n    float dd, d = 0., a = 1.;\n    while(a < 64.)\n        d += abs(dot(sin(p * a * 1.9) * .1, p / p)) / a,\n        a += a;\n    \n    return d;\n}\n\nfloat map(vec3 p) {\n    vec3 t1 = p - path(p.z);\n    vec3 t2 = p - path2(p.z);\n    \n    tun = length(t2) - length(t1);\n    \n    t1.z = p.z;\n    \n    \n    float a = iTime * 4. + floor(p.z),\n          balls1 = length(mod(t1, 2.) - 1.) - .2,\n          balls2 = length(mod(t1 + .22 * vec3(cos(a), sin(a), 0), 2.) - 1.) - .05,\n          balls = min(balls1, balls2),\n          tunel = 1.5 - min(length(t1.xy), length(t2.xy)) + textura(p);\n    \n    id = step(balls, tunel);\n    bal = step(balls1, balls2);\n    return min(balls, tunel);\n}\n\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec3 col, p, lookAt, fw, rt, up, rd, q;\n    float s = 1., d, i, t = iTime * 2.; \n    u = (u + u - R) / R.y;\n\n    p      = path(t - .1);\n    lookAt = path(t);\n\n    fw = normalize(lookAt - p);\n    rt = vec3(fw.z, 0., -fw.x);\n    up = cross(fw, rt);\n    rd = fw + (u.x * rt + u.y * up) / 1.8;\n    \n    while(i++ < 120. && s > .001)\n        s = map(p) * .5, \n        p += s * rd;\n\n    o = mix(blue, white, smoothstep(-.5, .5, tun));\n   \n    o += 5. / i;\n    \n    q = p - path(p.z);\n    o *= id < .5\n         ? texture(iChannel0, vec2(\n             atan(q.x, q.y) / 6.28,\n             fract(p.z)\n         ))\n         : bal > .5\n             ? vec4(1,0,0,0)\n             : vec4(0,0,1,0)\n      ;\n}","name":"Image","description":"","type":"image"}]}