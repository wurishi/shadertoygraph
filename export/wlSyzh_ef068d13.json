{"ver":"0.1","info":{"id":"wlSyzh","date":"1595363850","viewed":180,"name":"Abstract Background","username":"lewdoo","description":"Just playing with shapes, not really trying for optimisation","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define P vec3(1., 0.75, 0.95)\n#define B vec3(.7, 0.95, 0.95)\n#define O vec3(1., 0.6, 0.4)\n#define R vec3(1., 0.4, 0.2)\n#define Y vec3(1., 1., .5)\n\nfloat backBubbleSize = .5;\nfloat backBubbleCount = 5.;\n\nfloat circ(float s, vec2 uv){\n\tfloat c = clamp(floor(1. - distance(uv, vec2(0.5, 0.5)) + 0.1 * s), 0., 1.);\n\treturn c;\n}\n\nfloat ribbon(float s, vec2 uv, float offset){\n    s = 1. - s;\n    uv.y += (sin(uv.x * 3. + iTime * 2. + offset) * 0.2 \n            + sin(iTime) * 0.2 + sin(-iTime + uv.x) * 0.1)\n        * 0.5 * (uv.x + 0.25);\n    \n    float g = abs(sin(uv.x * 0.5 + iTime + offset)) * 0.05 * uv.x;\n    \n \tfloat r = smoothstep(s, s + .005, 1. - abs(uv.y - .5) + g);\n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ratio = iResolution.x / iResolution.y;\n\tvec2 uv = vec2(ratio, 1.) * (fragCoord.xy / iResolution.xy);\n    \n    \n    vec3 bg = vec3(1., 0.99, 0.95);\n    bg = bg * (1. - (uv.y - 0.1)) + uv.y * P;\n    bg += (1. - uv.y - 0.5) * O;\n    \n    bg = bg * uv.y + (bg + Y) * (1. - uv.y) * 0.5;\n    \n    vec3 col = bg;\n    \n    //ribbons\n    float r1 = ribbon(0.04, uv, 1.);\n    \n    float r2 = ribbon(0.02, uv + vec2(0., 0.05), 2.);\n    \n    float r3 = ribbon(0.02, uv + vec2(0., -0.04), 9.78342);\n    //--------------\n    \n    //circles\n    float circlesA = 0.;\n    for(float i = 6.; i < 10.; i++){\n        float offset = 1. + abs(sin(i * 1.3));\n    \tcirclesA += circ(0.5 + abs(sin(i) * 0.6), \n                         uv + vec2(sin(iTime * offset + i) * 1.2 + 2. - 0.2 * i, \n                                       cos(iTime * offset + i)) * 0.4 + 0.525);\n    }\n    circlesA = clamp(0., 1., circlesA); \n    \n    float circlesB = 0.;\n    for(float i = 6.; i < 15.; i++){\n        float offset = 1. + abs(sin(i * 1.5));\n    \tcirclesB += circ(0.5 + abs(sin(i) * 0.6), \n                         uv + vec2(sin(iTime * offset + i) * 1.4 + 2. - 0.2 * i, \n                                       cos(iTime * offset + i)) * 0.4 + 0.525);\n    }\n    circlesB = clamp(0., 1., circlesB); \n    //--------------------------\n    \n    \n    //back bubbles----------\\/\n    vec2 st = uv * backBubbleCount;\n    \n    float offset = (floor(st.x) * 0.1);\n    offset = abs(sin((offset + 1.634) * 5.24928 + sin(offset * 5.141 + 0.6346) + sqrt(offset * 2.436268) + offset));\n    \n    st.y -= fract(iTime * 0.35 + offset) * 8. - .5;\n    \n    st.x = fract(st.x);\n    st.x += sin(uv.y * 4. + offset) * (1. / backBubbleCount);\n    float bb = circ(backBubbleSize + offset * 0.75, st); \n    \n    //----------------------/\\\n    \n    \n    //applying the effects\n    col = bg;\n    \n    col = col * (1. - r1) + r1 * B;\n    col = vec3(1. - circlesB) * col + circlesB * O * Y;\n    col = col * (1. - r2) + r2 * R;\n    col = bb * (P + vec3(1.)) * 0.5 + (1. - bb) * col;\n    col = vec3(1. - circlesA) * col + circlesA * P * Y;\n    col = col * (1. - r3) + r3 * Y;\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}