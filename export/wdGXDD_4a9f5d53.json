{"ver":"0.1","info":{"id":"wdGXDD","date":"1574065389","viewed":111,"name":"Waves on waves","username":"fordacious","description":"Waves","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat hash( float n ){return fract( sin( n ) * 458.5453 );}\n\nfloat noise( in vec3 x ){\n\tvec3 p = floor( x );vec3 q = fract( x );\n\tq = q * q * (3.0 - 2.0 * q);\n\tfloat n = p.x + p.y * 57.0 + p.z * 113.0;\n\tfloat a = hash( n );float b = hash( n + 1.0 );float c = hash( n + 57.0 );float d = hash( n + 58.0 );\n\tfloat e = hash( n + 113.0 );float f = hash( n + 114.0 );float g = hash( n + 170.0 );float h = hash( n + 171.0 );\n\tfloat result = mix( mix( mix( a, b, q.x ), mix( c, d, q.x ), q.y ), mix( mix( e, f, q.x ), mix( g, h, q.x ), q.y ), q.z );\n\treturn result;\n}\n\n// rotation matrix, propotional to a right triangle, rotates octaves ~36Â°\nconst mat2 m = mat2( 0.8, 0.6, -0.6, 0.8 );\n\nfloat fbm( in vec2 point )\n{\n\tvec2 p = point;float f = 0.0;\n\t//amplitude * noise( frequency )\n\t//f += 0.5000 * noise( vec3( p, 1.0 ) );\n\tp *= m * 2.02; // octaves...\n\tf += 0.2500 * noise( vec3( p, 1.0 ) );\n\tp *= m * 2.03;\n\tf += 0.1250 * noise( vec3( p, 1.0 ) ); p *= m * 2.01;\n\tf += 0.0625 * noise( vec3( p, 1.0 ) ); p *= m * 2.005;\n\tf += 0.03125 * noise( vec3( p, 1.0 ) ); p *= m * 2.00;\n\tf += 0.015625 * noise( vec3( p, 1.0 ) );\n\tf /= 0.984375-.5;\n\treturn f;\n}\nfloat fbm(in float x, in float y){return fbm(vec2(x,y));}\n\nfloat calc(float f, vec2 uPos, float ttime) {             \n\t                                                                            \n\tuPos.y += sin( ttime + uPos.x * 9.0) * 0.1;                                                             \n\tuPos.x += sin( ttime + uPos.y * 10.0) + 0.8;                                                             \n\tfloat value = sin((uPos.x) * 4.0) + sin(uPos.y * 40.0);                                              \n\treturn 15.0/sqrt(abs(value))/5.0 * pow(f, 2.);                                                      \n}                                                                                                      \n                                                                                                        \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    float iTime = iTime * 0.3;\n\n\tfloat freqs[4];\n\tfreqs[0] = texture( iChannel0, vec2( 0.01, 0.0 ) ).x * 0.5;\n\tfreqs[1] = texture( iChannel0, vec2( 0.07, 0.0 ) ).x * 0.5;\n\tfreqs[2] = texture( iChannel0, vec2( 0.15, 0.0 ) ).x * 0.5;\n\tfreqs[3] = texture( iChannel0, vec2( 0.30, 0.0 ) ).x * 0.5;\n    \n\tvec2 pos = ( gl_FragCoord.xy / iResolution.xy );    \n\tpos.y += 0.05;\n\tvec2 uv = pos;\n\tpos-=.5;\n\tpos*=2.;\n\tvec4 col;\n\n\tcol=vec4(.1,.3,.2,1.)*5.;\n\tfloat f = mix(0.0,fbm(pos.x*10.,iTime-pos.y/100.0),1.);\n\n\tf=mix(0.0,f,1.-abs(pos.y));\n\t//f=smoothstep(0.0,1.0)\n\t//f+=.1-abs(pos.y/10.);\n//\tf=smoothstep(0.,1.,f);\n\tcol*=f + 0.05;//smoothstep(.0,1.0,f);\n\n\tcol.a = 1.;\n\tcol.b *= 1.2;\n    \n    int mode = 0;\n    if (mode == 0) {\n        vec2 p = ( gl_FragCoord.xy / 500.0 );\n        p.y -= ((col.r + col.g + col.b) / 20.0);\n        p.x = p.x+(4.0/2.0);\t\t                                                \n        p.y = p.y+(2.0/2.0);\t\t                                                \n        float vertColor = calc(p.y > 0.5 ? (.1 - (p.y - .2)) * .2 : p.y * 2., p, iTime) + 0.23456;                                  \n        vec4 col2 = vec4(vertColor, vertColor , vertColor , 1.0)*vec4(0.1,0.3,0.5,1.0)+vec4(0.2,0.1,0.2,1.0);     \n\n        fragColor = (col * col * 2.0) * col2;\n} else if (mode == 1) {\n        vec2 p = ( gl_FragCoord.xy / 200.0 ) * (col.b);\t\t                                                \n        p.x = p.x+(4.0/2.0);\t\t                                                \n        p.y = p.y+(2.0/2.0);\t\t                                                \n        float vertColor = calc(p.y > 0.5 ? (.1 - (p.y - .2)) * .2 : p.y * 2., p, iTime) + 0.23456;                                  \n        vec4 col2 = vec4(vertColor, vertColor , vertColor , 1.0)*vec4(0.1,0.3,0.5,1.0)+vec4(0.2,0.1,0.2,1.0);     \n\n        fragColor = col * col2;\n    } else if (mode == 2) {\n        vec2 p = ( gl_FragCoord.xy / 300.0 );\t\t                                                \n        p.x = p.x+(4.0/2.0);\t\t                                                \n        p.y = p.y+(2.0/2.0);\t\t                                                \n        float vertColor = calc(p.y > 0.5 ? (.1 - (p.y - .2)) * .2 : p.y * 2., p, iTime) + 0.23456;                                  \n        vec4 col2 = vec4(vertColor, vertColor , vertColor , 1.0)*vec4(0.1,0.3,0.5,1.0)+vec4(0.2,0.1,0.2,1.0);     \n\n        fragColor = col * col2 + (col * 0.2 * pos.y);\n    }\n\n}\n","name":"Image","description":"","type":"image"}]}