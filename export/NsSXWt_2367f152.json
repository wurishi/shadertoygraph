{"ver":"0.1","info":{"id":"NsSXWt","date":"1621246626","viewed":64,"name":"Streamer01","username":"intrometa","description":"streamer with lines which supports positive and negative slope","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["streamer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DEBUG 0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    vec2 clickUV = iMouse.xy / iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    \n    float k = 1.0;\n    float b = 0.0;\n    float b1 = b;\n    float kSign = 1.0;\n    float width = 0.1;\n    if (k < 0.0) kSign = -1.0;\n    float b2 = b1 - width * kSign;\n    \n    float leftBound = abs((1.0 - b2) / k);\n    float totalLength = 1.0 * ratio + leftBound;; // 这个域映射时，考虑 ratio.\n    if (k < 0.0) totalLength = 1.0 * ratio + leftBound + width * 2.0;\n\n    float speed = 1.0;\n    float driver = fract(iTime / speed);\n#if DEBUG == 1\n    driver += clickUV.x; \n#endif\n    float x = uv.x + leftBound - driver * totalLength;\n    if (k < 0.0) x = uv.x - driver * totalLength + width;\n    float y = uv.y;\n    float y1 = k * x + b1;\n    float y2 = k * x + b2;\n    if (kSign > 0.0 && y < y1 && y > y2 || kSign < 0.0 && y < y2 && y > y1) col = vec3(1.0);\n    else col = vec3(0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}