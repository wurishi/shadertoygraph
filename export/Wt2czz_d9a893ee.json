{"ver":"0.1","info":{"id":"Wt2czz","date":"1593608509","viewed":114,"name":"Cross of Light 2","username":"GabrieleGiuseppini","description":"This shader simulates the flash of light that typically accompanies spaceships exploding in space. It is centered with the mouse. This shader is cheaper than my other \"Cross of Light\" shader.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["explosionflash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float vertexProgress = mod(iTime, 1.0); // 0.0 -> 1.0\n    // Map vertexProgress to -0.48 -> 1.48\n    float progress = -0.48 + vertexProgress/(2. * .48);\n\n    // Calculate fragment's coordinates in the NDC space\n    vec2 centeredFragCoord = fragCoord.xy - iResolution.xy / 2.0;\n    vec2 ndc = vec2(\n        centeredFragCoord.x / iResolution.x,\n        centeredFragCoord.y / iResolution.y) * 2.0;\n\n    vec2 centerPosition = iMouse.xy - iResolution.xy / 2.0;\n    vec2 centerNdc = vec2(\n        centerPosition.x / iResolution.x,\n        centerPosition.y / iResolution.y) * 2.0;\n    \n    // Center\n    ndc = vec2(ndc.x - centerNdc.x, centerNdc.y - ndc.y);\n\n    // ------------------    \n    \n    vec2 rotNdc = ndc;\n    \n    progress = pow(1. - abs(progress), 9.0);\n    \n    float alpha = 1.0 - smoothstep(0.0, progress, sqrt(abs(rotNdc.x * rotNdc.y)));\n\n    fragColor = vec4(alpha, alpha, alpha, 1.0);\n}","name":"Image","description":"","type":"image"}]}