{"ver":"0.1","info":{"id":"4fyGD3","date":"1713323663","viewed":348,"name":"Dark Pulsar","username":"Oztaquio","description":"A piece of shader art, learning to polarize coordinates","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2d","wave","repetition","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 ray(vec2 uv, float t, float d, float n, vec3 c){\n    float p = atan(uv.x, uv.y);\n    for(float i = 0.0; i < 5.0; i++){\n        p = sin(iTime*t + (p*n + length(uv))*d);\n    }\n    p = abs(p);\n    p = 0.033/p;\n    c*=p;\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspect = iResolution.x/iResolution.y;\n    \n    vec2 uv = fragCoord/iResolution.xy*2.0 - 1.0;\n    uv.x *= aspect;\n    uv = uv*6.0;\n    \n    float pulsar = length(uv);\n\n    vec3 ray = ray(uv, 0.25, -1.0, 2.0, vec3(1.0, 0.0, 0.0))\n              +ray(uv, 0.5, 1.0, 2.0, vec3(0.0, 0.0, 1.0));\n    \n    ray = ray/pulsar;\n    ray *= 10.0;\n    \n    fragColor = vec4(ray,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}