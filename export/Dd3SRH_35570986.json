{"ver":"0.1","info":{"id":"Dd3SRH","date":"1679352324","viewed":254,"name":"Can it be a vector field?","username":"nuudl3","description":"Line segments pointing to the mouse location","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["lines","primitives"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line(vec2 p, vec2 a, vec2 b)\n{\n    \n    float h = min(1.f, max(0.f, dot(p-a, b-a) / dot(b-a, b-a) ));\n    float d = distance((p-a), h * (b-a)); \n    if(/*h > 0.f &&*/ h < 0.07f && d < 0.008)\n        return d;\n    return 1.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 normMouse = vec2(0.5) + 0.2 * vec2(cos(iTime), sin(iTime));\n    if(iMouse.z > 0.1f)\n    {\n        normMouse = iMouse.xy / iResolution.xy;\n    }\n    vec3 col = vec3(0.f);\n    int x = 32;\n    int y = 18;\n    float px= 2./iResolution.y;\n    for(int i = 1; i < x; i++)\n    {\n        for(int k = 1; k < y; k++)\n        {\n            vec2 start = vec2(0.f + (float(i) * (1.f / float(x))), 0.f + (float(k) * (1.f / float(y))));\n            float d = line(\n            uv,\n            start, \n            normMouse);\n            float distToMouse = distance(start, normMouse) * (16. / 9.);\n            col = mix(vec3(1.f - distToMouse, distToMouse, 0.5 + 0.5 * cos(iTime)), col, smoothstep(0., px, d));\n         }\n    }\n    fragColor = vec4(col, 1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}