{"ver":"0.1","info":{"id":"llBGWm","date":"1429467204","viewed":180,"name":"Stonespheres","username":"maximilian4990","description":"unoptimized version","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","softshadows"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//author maximilian4990\n//Creative Commons 3.0 by-nc\nstruct intersection{\n\tint id;\n    float t;\n};\nvec4 sph1 = vec4(0.0,0.7,-3.0,1.25);\nvec4 sph2 = vec4(1.0,00.5,-1.5,0.5);\nfloat iSphere(vec3 ro, vec3 rd, vec4 sph){\n\tvec3 oc = ro - sph.xyz;\n\tfloat a = dot(rd,rd);\n\tfloat b = 2.0*dot(rd,oc);\n\tfloat c = dot(oc,oc)-sph.w*sph.w;\n\tfloat h = b*b - 4.0*a*c;\n\tif(h < 0.0) return -1.0;\n\tfloat t0 = (-b-sqrt(h))/(2.0*a);\n\tfloat t1 = (-b+sqrt(h))/(2.0*a);\n\tfloat t = -1.0;\n\tt = t0;\n    if(t1 > 0.0 && t1 < t0){\n    \tt = t = t1;\n    }\n   \treturn t;\n}\nfloat iPlane(vec3 ro, vec3 rd){\n\treturn dot(vec3(0.0,-1.0,0.0)-ro,vec3(0.0,1.0,0.0))/dot(rd,vec3(0.0,1.0,0.0));\n}\nintersection intersect(vec3 ro, vec3 rd,int id){\n\tfloat sd1 = iSphere(ro, rd, sph1);\n    float sd2 = iSphere(ro, rd, sph2);\n    float pd1 = iPlane(ro, rd);\n    intersection i;\n    if(id == -1){\n        i.t = 9000.0;\n    \ti.id = 9000;\n    \tif(sd1 > 0.0){\n    \t    i.t = sd1;\n    \t \ti.id = 1;   \n    \t}\n    \tif(sd2 > 0.0 && sd2 < i.t){\n    \t\ti.t = sd2;\n    \t    i.id = 2; \n    \t}\n    \tif(pd1 > 0.0 && pd1 < i.t){\n    \t\ti.t = pd1;\n        \ti.id = 4;\n    \t}\n        return i;\n    }else{\n    \ti.t = 9000.0;\n    \ti.id = 9000;\n    \tif(sd1 > 0.0 && 1 != id){\n    \t    i.t = sd1;\n    \t \ti.id = 1;   \n    \t}\n    \tif(sd2 > 0.0 && sd2 < i.t && 2 != id){\n    \t\ti.t = sd2;\n    \t    i.id = 2; \n    \t}\n    \tif(pd1 > 0.0 && pd1 < i.t && 4 != id){\n    \t\ti.t = pd1;\n        \ti.id = 4;\n    \t}\n        return i;\n    }\n}\nvec4 tex0Col(vec3 n){\n\treturn texture(iChannel0, vec2(atan(n.z,n.x)/3.14159*2.0,asin(n.y)/3.14159*2.0));\n}\nvec4 tex1Col(vec3 n){\n\treturn texture(iChannel1, vec2(atan(n.z,n.x)/3.14159*2.0,asin(n.y)/3.14159*2.0));\n}\nvec2 noise(vec2 p)\n{\n    vec2 n = vec2(0.0);\n    for (float i = 0.0; i < 6.0; i++)\n    {\n        float j = pow(2.0, i);\n        n += (texture(iChannel2, p*j*0.0004).xy-vec2(0.5)) / j;\n    }\n    return n;\n}\n\nvec2 fbm(vec2 p){\n\tvec2 n = vec2(0.0);\n    n += 0.5000*noise(p);p*= 2.02;\n    n += 0.2500*noise(p);p*= 2.01;\n    n += 0.1250*noise(p);p*=1.98;\n    n += 0.0625*noise(p);\n    n /= 0.9375;\n    return n;\n}\nvec4 shade(vec3 p,int id, vec2 uv){\n\tvec4 ma;\n    vec4 la = vec4(vec3(0.1),1.0);\n    vec4 md;\n    vec4 ld = vec4(1.0);\n    vec3 l = vec3(1.0,1.5,0.0);\n    vec3 n;\n    if(id == 1){\n\t\tma = vec4(0.4,0.4,0.4,1.0);\n        n = normalize(p-sph1.xyz);\n        md = tex0Col(n);\n        ma *= tex0Col(n);\n    }else if(id == 2){\n       \tma = vec4(0.3,0.3,0.3,1.0);\n        n = normalize(p-sph2.xyz);\n        md = tex1Col(n);\n        ma *=md;\n    }else if(id == 4){\n    \tn = vec3(0.0,1.0,0.0);\n        ma = vec4(0.1);\n        md = vec4(fbm(p.xz).x+0.3,0.0,0.3,1.0);\n    }else{\n        vec4 skybackground = vec4(0.0,0.0,sin(0.5*uv.x+1.5)*sin(uv.y+0.3),1.0);\n        vec4 sun = vec4(vec2(sin(uv.x-0.1)*sin(uv.y-0.1)),0.0,1.0);\n        vec4 clouds = vec4(vec3((sin(uv.x-0.7)-0.35)*sin(uv.y)),1.0)*vec4(fbm(3.0*uv),fbm(3.0*uv));\n        \n            return skybackground + smoothstep(0.0,1.0,7.0*clouds) + smoothstep(0.0,1.0,sun);\n    }\n    intersection shadow = intersect(p,l,id);\n    if(shadow.id == 1 || shadow.id == 2){\n    \tvec3 pop1 = sph1.xyz + iPlane(sph1.xyz,l)*l;\n        vec3 distonpl1 = p - pop1;\n        float r1 = sph1.w;\n        float smooth1 = clamp(smoothstep(0.5,sph1.w, length(cross(normalize(l),distonpl1))),0.0,1.0);\n      \tvec3 pop2 = sph2.xyz + iPlane(sph2.xyz,l)*l;\n        vec3 distonpl2 = p - pop2;\n        float r2 = sph2.w;\n        float smooth2 = clamp(smoothstep(0.25,sph2.w, length(cross(normalize(l),distonpl2))),0.0,1.0);\n    \treturn min(smooth1,smooth2)*(max(dot(normalize(l),n),0.0)*md*ld + ma*la);\n    }\n    return max(dot(normalize(l),n),0.0)*md*ld + ma*la;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0 + 2.0*(fragCoord.xy / iResolution.xy);\n\tuv.x *= iResolution.x/iResolution.y;\n    vec3 ro = vec3(0.0,0.0,1.0);\n    vec3 rd = vec3(uv,0.0) - ro;\n    intersection i = intersect(ro, normalize(rd), -1);\n    fragColor = shade(ro + rd*i.t, i.id, uv);\n}","name":"","description":"","type":"image"}]}