{"ver":"0.1","info":{"id":"tdyyDc","date":"1603895555","viewed":99,"name":"Raycast experiment 6","username":"alexijohansen","description":"Trying to get some kind of volumetric thing going...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raycast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FAKEFOV 0.95\n\n#define SPEEDY 0.047\n#define SPEEDZ 0.095\n\n#define STEPS 256\n#define STEPSIZE 0.5\n\n#define SOFTFRONT 0.25\n#define SOFTTOP 0.125\n#define SOFTSIDE 0.5\n\nfloat treshold(float v, float softness, float treshold)\n{\n \tfloat f = softness/2.0;\n\tfloat a = treshold - f;\n\tfloat b = treshold + f;\n\t\n\treturn smoothstep(a, b, v);\n}\n\nvec4 raycast(vec3 p, vec2 uv)\n{\n    vec3 uvw = vec3(uv.x * FAKEFOV, uv.y * FAKEFOV, 1.0) / (float(STEPS) * STEPSIZE);\n    \n\tfloat v = 0.0;\n    \n\tfor( int i = 0; i < STEPS ; i++ )\n    {\n\t\tvec3 newP = p + ( uvw * float(i) );\n\n        //float tx = texture(iChannel0,vec2(newP.x,newP.y)).x;\n    \t//tx *= texture(iChannel1,vec2(newP.z,newP.y)).x;\n    \t//tx *= texture(iChannel2,vec2(newP.x,newP.z)).x;\n\n        float tx = treshold(texture(iChannel0,vec2(newP.x,newP.y)).x,SOFTFRONT,0.5);\n    \ttx *= treshold(texture(iChannel1,vec2(newP.z,newP.y)).x,SOFTSIDE,0.5);\n    \ttx *= treshold(texture(iChannel2,vec2(newP.x,newP.z)).x,SOFTTOP,0.5);\n\n    \tv += tx * 10.0;\n    }\n\n    v = (v/float(STEPS));\n    \n    return vec4(v,v,v,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n\t\n    fragColor = raycast(vec3(0.0,iTime * SPEEDY, iTime * SPEEDZ), uv);\n}","name":"Image","description":"","type":"image"}]}