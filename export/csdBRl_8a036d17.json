{"ver":"0.1","info":{"id":"csdBRl","date":"1697535467","viewed":104,"name":"crt with noise, webcam","username":"CreatorsLight","description":"crt shader","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["crt","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// You may use the shader in any way you like.\nvec3 pal(float t){\n    \n    vec3 a = vec3(0.978, 0.618, 1.148);\n    vec3 b = vec3(0.000, -0.292, 0.108);\n    vec3 c = vec3(0.164, 0.833, 0.673);\n    vec3 d = vec3(-1.273, -1.940, -1.433);\n    \n    return a + b*cos(3.8318*(c*t+d));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float brightness = 1.3;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.*uv -1.;\n    vec2 uvA =uv;\n    uvA.x *= iResolution.x/iResolution.y; // adjusted uv\n    \n    float curvature = 5.;\n    vec2 offset = uv.yx/curvature;\n    uv = uv + uv *offset*offset;\n    uv = uv *0.5 +0.5;\n    \n    // image\n    vec4 img = texture(iChannel0, vec2(uv.x + 0.0065 // adjust to change the shift\n                                                ,uv.y));\n    vec4 img2 = texture(iChannel0, vec2(uv.x + 0.0\n                                                ,uv.y));\n    vec4 img3 = texture(iChannel0, vec2(uv.x - 0.0065\n                                                , uv.y));\n                                                \n    //Noise                                            \n    vec4 noise  = texture(iChannel1, vec2(uv.x+20.*iTime,uv.y));\n    noise.xyz = clamp(noise.xyz,0.35,.5);\n    vec4 noise2  = texture(iChannel1, vec2(uv.x,uv.y-20.*iTime));\n    noise2.xyz = clamp(noise.xyz,0.35,.5);\n    \n    \n    \n    //image colors\n    img.xyz *= vec3(1.,0.,0.); // red\n    img2.xyz *= vec3(0.,1.,0.); // green\n    img3.xyz *= vec3(0.,0.,1.); // blue\n    vec3 col = img.xyz+img2.xyz+img3.xyz;\n    if (uv.x <= 0.0f || 1.0 <= uv.x || uv.y <= 0.0 || 1.0 <= uv.y){\n        col = vec3(0.);\n    }\n    //added color\n    \n    //col.y *= pal(24.7).y;\n    //vignette\n    col -= smoothstep(0.,2.4,length(uvA));\n    col *= dot(noise.xyz,noise2.xyz)*3.;\n    \n    //horizontal lines\n    float lines = abs(sin(300.*uv.y +2.*iTime)) *brightness;\n    col*= lines;\n    \n    // Output to screen\n    fragColor = vec4( col,1.0);\n}","name":"Image","description":"","type":"image"}]}