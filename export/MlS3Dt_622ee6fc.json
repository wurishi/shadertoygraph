{"ver":"0.1","info":{"id":"MlS3Dt","date":"1433527806","viewed":137,"name":"150606NyokiNyoki","username":"chimanaco","description":"My first Ray Tracing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float radius = 100.8;\n\nvec3 trans(vec3 p)\n{\n  return mod(p, 8.0)-4.0;\n}\n\nfloat lengthN(vec3 v, float n)\n{\n  vec3 tmp = pow(abs(v), vec3(n));\n  return pow(tmp.x+tmp.y+tmp.z, 1.0/n);\n}\n \nfloat distanceFunction(vec3 pos)\n{\n  return length(trans(pos)) - 1.0;\n}\n\n\nvec3 getNormal(vec3 p) {\n    const float d = 0.0001;\n    return\n        normalize\n        (\n            vec3\n            (\n                distanceFunction(p + vec3(d, 0., 0.)) - distanceFunction(p + vec3(-d, 0., 0.)),\n                distanceFunction(p + vec3(0., d, 0.)) - distanceFunction(p + vec3(0., -d, 0.)),\n                distanceFunction(p + vec3(0., 0., d)) - distanceFunction(p + vec3(0., 0., -d))\n            )\n         );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;    \n    //vec3 camPos = vec3(cos(iTime * 0.01) * radius, 0.0, sin(iTime * 0.01) * radius);\n    //vec3 camPos = vec3(0., 0., smoothstep(uv.x, uv.y, cos(iTime * 10.1)));\n\tvec3 camPos = vec3(10., 10., smoothstep(0.01, uv.x, sin(iTime * 1.1)));\n\n    //vec3 camDir = vec3(0.0, 0.0, -1.0);\n    vec3 camDir = vec3(cos(iTime * 0.1) * 30., sin(iTime * 0.1) * 10., abs(sin(iTime * 0.1) * 10.));\n    //vec3 camUp = vec3(0.0, 1.0, 0.0);\n    vec3 camUp = vec3(0.0, 1.0, 0.0);\n    //vec3 camUp = vec3( pow(cos(iTime * 0.01) , 112.0), cos(iTime) * 10., sin(iTime) * 10.);\n    vec3 camSide = cross(camDir, camUp);\n    float focus = 1.8 + dot(uv.x, uv.y) * dot(uv.x, uv.y);\n    \n    vec3 rayDir = normalize(camSide * uv.x + camUp * uv.y + camDir * focus);\n    \n    float t = 0.0, d;\n    vec3 posOnRay = camPos;\n    \n    for(int i = 0; i < 50; ++i) {\n        d = distanceFunction(posOnRay);\n        t += d;\n        posOnRay = camPos + t * rayDir;\n    }\n    \n    vec3 normal = getNormal(posOnRay);\n    if(abs(d) < 0.01) {\n        fragColor = vec4(normal, 1.0);\n    } else {\n        fragColor = vec4(0.0);\n    }\n }","name":"","description":"","type":"image"}]}