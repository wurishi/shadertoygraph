{"ver":"0.1","info":{"id":"WslyWH","date":"1584710201","viewed":87,"name":"UI_RoundedRect","username":"calx","description":"A rounded Rect","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["roundedrect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Constants\n\n#define PI \t\t3.14159265359\n#define TWO_PI  6.28318530718\n\n//Simple defines so I can write HLSL in GLSL\n\n#define float2 \tvec2 \n#define float3 \tvec3 \n#define float4 \tvec4\n#define mix \tlerp\n#define frac\tfract\n\n\n//Main function for Unreal Engine.\n\nfloat4 round_rect(float2 UV, float RADIUS, float TRIM_SIZE, float4 BG, float4 TRIM)\n{\n    //START UE4 CUSTOM EXP\nfloat SMOOTH = 0.005;\nfloat4    \ttrim_colour\t= \tfloat4(TRIM.r, TRIM.g, TRIM.b, 1.0);\n\nfloat2     \tuv   \t\t=\tabs(UV * 2.0 - 1.0)- float2(1.0, 1.0) + RADIUS;\nfloat     \td      \t\t=\tlength(max(float2(0.0, 0.0), uv)) / RADIUS;\nfloat \t\trect \t\t= \tsmoothstep(1.0+SMOOTH, 1.0-SMOOTH, d);\nfloat4     \tbackground \t=\tfloat4(0.0, 0.0, 0.0, 0.0);\nfloat4\t\tTRIM_COLOUR = \tstep(TRIM_SIZE, UV.y)==0.0 ? trim_colour : BG;\nfloat4     \tui \t\t\t=\tbackground + (rect * TRIM_COLOUR);\n    \n    return ui;\n    \n    //END UE4 CUSTOM EXP\n}\n\n//ShaderToy Main Function\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float2 uv = fragCoord.xy/iResolution.xy;\n    \n    uv.x /= 9.0/16.0;\n    \n    float\tcorner_radius = 0.2;\n    float4 \tpanel = float4(1.0, 1.0, 1.0, 1.0);\n    float3\tblend = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float4 \ttrim = float4(blend.r, blend.g, blend.b, 1.0);\n    float\ttrim_size = 0.1;\n    \n    fragColor = round_rect(uv, corner_radius, trim_size, panel, trim);\n}\n\n","name":"Image","description":"","type":"image"}]}