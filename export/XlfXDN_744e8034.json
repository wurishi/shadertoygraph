{"ver":"0.1","info":{"id":"XlfXDN","date":"1436733736","viewed":126,"name":"Miles blobs age 14","username":"djmkultra","description":"My young associate just learned the joy of mathgraphicshackingfun.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["firstshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nfloat blob(vec2 pos, float number) {\n    // point is the blob location.\n    vec2 point = iResolution.xy * .5 + sin(vec2(iTime) + vec2(13. * number, 20.) + number * 27.) * 100.;\n    vec2 dist = pos - point;\n    float len = length(dist);\n    dist = abs(dist);\n    float blend = (1. + sin(iTime + number * 991.)) * .5;\n    len = blend * max(dist.x, dist.y) + (1. - blend) * len;\n    float sizeJiggle = (1. + sin(iTime * number * .1 + number * 661.) * .8);\n    float d = 1. - .04 * len * sizeJiggle;    \n\treturn clamp(d, 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    float invert = (1. + sin(iTime)) * .5;\n\n    float d1 = blob(fragCoord, 17.);\n    float inside = 1.;\n    if ( d1 == 0. )\n        inside = 0.;\n    d1 = invert * d1 + (1. - invert) * (1. - d1) * inside;\n    float d2 = blob(fragCoord, 13.);\n    float d3 = blob(fragCoord, 18.);\n\n    \n\tfragColor = vec4(.7, .4, .2, 1.) * d1 + vec4(.9, .1, .8, 1.) * d2 + vec4(1., .1, .1, 1.) * d3;\n}","name":"","description":"","type":"image"}]}