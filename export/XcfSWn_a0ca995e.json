{"ver":"0.1","info":{"id":"XcfSWn","date":"1705108539","viewed":93,"name":"Ray tracing- humble beginnings","username":"UsamagorQ","description":"The first things I made while trying to start ray tracing\nI forgot to publish this until about an hour ago","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["raytracing","ray","sphere"],"hasliked":0,"parentid":"XclSR4","parentname":"Ray tracing- many Balls."},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint seed;\nfloat random() {\n    seed = seed * 747796405u + 2891336453u;\n    uint result = ((seed >> ((seed >> 28) + 4U)) ^ seed) *277803737u;\n    result = (result >> 22) ^ result;\n    return float(result) / 4294967295.0;\n}\nstruct Ray{\n\nvec3 origin;\nvec3 dir;\n\n};\nstruct Material\n{\nvec3 color;\n};\nstruct Sphere {\nvec3 position;\nfloat radius;\nvec3 color;\n};\nstruct hitInfo {\nbool didHit;\nfloat dst;\nvec3 hitPoint;\nvec3 normal;\n};\n\nhitInfo RaySphere(Ray ray, vec3 sphereCenter, float sphereRadius)\n{\nhitInfo hitinfo;\nvec3 offsetRayOrigin = ray.origin - sphereCenter;\n\nfloat a = dot(ray.dir,ray.dir);\nfloat b = 2. * dot(offsetRayOrigin, ray.dir);\nfloat c = dot(offsetRayOrigin,offsetRayOrigin) - sphereRadius * sphereRadius;\nfloat discriminant = b*b - 4. *a * c;\n\n if(discriminant >= 0.)\n {\n float dst = (-b - sqrt(discriminant)) / (2. * a);\n \n \n \n if(dst >= 0.)\n {\n hitinfo.didHit = true;\n hitinfo.dst = dst;\n hitinfo.hitPoint = ray.origin + ray.dir * dst;\n hitinfo.normal = normalize(hitinfo.hitPoint - sphereCenter);\n }\n }\n\n    return hitinfo;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    Ray ray;\n    ray.origin = vec3(0,0,5);\n    seed =\n    floatBitsToUint(texture(iChannel0,\n    fragCoord/iResolution.xy).x + iTime);\n    vec2 of = -0.5 + vec2(random(),random());\n    vec2 p = \n    (2.0*(fragCoord+of)-iResolution.xy)/iResolution.y;\n  float sphereRadius = 1.;\n  vec3 viewPoint = vec3(p,  1.);\n  ray.dir = normalize(viewPoint-ray.origin);\n  fragColor = vec4(RaySphere(ray, vec3(sin(iTime),0.,0.), 1.).didHit,0.,0.,1.0);\n}","name":"Image","description":"","type":"image"}]}