{"ver":"0.1","info":{"id":"7tfSDn","date":"1625445206","viewed":93,"name":"bitfield horizon","username":"vivavolt","description":"based on https://twitter.com/aemkei/status/1378106731386040322?s=20","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["alien","xor","bitfield"],"hasliked":0,"parentid":"stfSDn","parentname":"alien bitfield"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T (0.0 * iTime)\n\nvec2 deform( in vec2 p)\n{\n    float r = length(p)*5.0;\n    float a = atan(p.y,p.x);\n    \n    return vec2(r, a);\n}\n\nvec3 getColorB( in float t )\n{\n    vec3 col = vec3(0.6,0.1,0.4);\n    col += 0.2*cos(6.28318*t*  1.0+vec3(0.0,0.2,1.1));\n    col += 0.11*cos(6.28318*t*  3.1+vec3(0.3,1.4,0.1));\n    col += 0.50*cos(6.28318*t*  5.1+vec3(0.1,0.7,1.1));\n    col += 0.09*cos(6.28318*t*  9.1+vec3(0.2,0.8,1.4));\n    return col;\n}\n\nfloat factor(in float t)\n{\n    if (t < 0.1) {\n        return 219.;\n    }\n\n    if (t < 0.2) {\n        return 9.;\n    }\n    \n    if (t < 0.3) {\n        return 99.;\n    }\n    \n    if (t < 0.4) {\n        return 17.;\n    }\n    \n    if (t < 0.5) {\n        return 27.;\n    }\n    \n    if (t < 0.6) {\n        return 33.;\n    }\n    \n    if (t < 0.7) {\n        return 111.;\n    }\n    \n    if (t < 0.8) {\n        return 97.;\n    }\n    \n    return 11.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // pixellate\n    float d = iResolution.x / 256.;\n    //fragCoord = floor(fragCoord / d)*d;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    int a = int(iResolution.x / 8.);\n    int b = int(iResolution.x / 16.);\n    int c = int(iResolution.y / 8.);\n    \n    int x = int(fragCoord.x + T);\n    int y = int(fragCoord.y + T);\n    //float z = mod(float(x | y), factor(abs(mod(iTime / 10., 1.0))));\n    float z= mod(float(((x/4-a) * b)), float((y/4-c)));\n\n    vec3 bwCol = vec3((1. - z), (1. - z), (1. - z));\n\n    // Output to screen\n    fragColor = vec4(getColorB(z*abs(sin(iTime / 100.0))), 1.0);\n}","name":"Image","description":"","type":"image"}]}