{"ver":"0.1","info":{"id":"DtfyzB","date":"1690868706","viewed":21,"name":"圆角矩形的SDF","username":"Leslie","description":"首先，感谢https://www.shadertoy.com/user/elenzil老哥的推荐。\n本例是根据IQ大佬的文章实现的圆角矩形SDF，和大多数编程大佬一样，IQ大佬的代码不是很亲民，我对其代码做了一些亲民向的改进，希望不会弄巧成拙。\nIQ大佬文章中还有很多其它图形的SDF，后续会一一奉上。","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 clrDist(float dist)\n{\n    vec3 col = (dist>0.0) ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n    col *= 1. - exp(-6.*abs(dist));\n    col *= 1. + 0.2*sin(150.*abs(dist));\n    col = mix(col, vec3(1.), smoothstep(0.01, 0., abs(dist)));\n    return col;\n}\n\n\nfloat sdRoundBox( in vec2 p, in vec2 b, vec4 r ) \n{\n    r.zw=p.x>0.0?r.zw:r.yx;\n    r.w=p.y>0.0?r.w:r.z;\n    r.w=clamp(r.w, 0., min(b.x, b.y));\n    \n    vec2 q = abs(p)-(b-r.w);\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.w;\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    float scale=min(iResolution.x, iResolution.y);\n    vec2 res=iResolution.xy/scale;\n\n    vec2 p=(2.*fragCoord-iResolution.xy)/scale;\n    vec2 b=vec2(0.5*res.x, 0.5*res.y);\n    \n    float chg=abs(sin(iTime/2.))-0.5;\n    vec4 r=vec4(.1+chg, .23+chg, .36+chg, .5+chg);\n    \n    float d=sdRoundBox(p, b, r);\n    vec3 clr=clrDist(d);\n    \n    fragColor=vec4(clr, 1.);\n}\n","name":"Image","description":"","type":"image"}]}