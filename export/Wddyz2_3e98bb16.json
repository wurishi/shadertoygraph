{"ver":"0.1","info":{"id":"Wddyz2","date":"1601306224","viewed":382,"name":"Smooth Winding Number","username":"Ultraviolet","description":"Inspired by Robust Inside-Outside Segmentation using Generalized Winding Numbers ( https://igl.ethz.ch/projects/winding-number/ ).","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["number","smooth","winding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926536;\n\n\n// vec2 p[] = vec2[](vec2(-1.,-1.), vec2(1.,1.));\n\n\nfloat angle(vec2 p) {\n    return atan(p.y, p.x);\n}\n\nfloat angle(vec2 p0, vec2 p1) {\n    float a =  angle(p1) - angle(p0);\n    a = mod(a-PI, 2.*PI)-PI;\n    \n    return a;\n}\n\n// stolen here: https://www.shadertoy.com/view/3lBXR3\nvec3 turbo(float t) {\n\n    const vec3 c0 = vec3(0.1140890109226559, 0.06288340699912215, 0.2248337216805064);\n    const vec3 c1 = vec3(6.716419496985708, 3.182286745507602, 7.571581586103393);\n    const vec3 c2 = vec3(-66.09402360453038, -4.9279827041226, -10.09439367561635);\n    const vec3 c3 = vec3(228.7660791526501, 25.04986699771073, -91.54105330182436);\n    const vec3 c4 = vec3(-334.8351565777451, -69.31749712757485, 288.5858850615712);\n    const vec3 c5 = vec3(218.7637218434795, 67.52150567819112, -305.2045772184957);\n    const vec3 c6 = vec3(-52.88903478218835, -21.54527364654712, 110.5174647748972);\n\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n}\n\nvec2 circleVert(float n, float N) {\n    return vec2(cos(PI*2.*n/N), sin(PI*2.*n/N));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y * 3.;\n    \n    float alpha = 0.;\n    \n    // for(int i=0; i<p.length()-1; ++i) {\n    //     alpha += angle(p[i]-uv, p[i+1]-uv);\n    // }\n    \n    float N = 50.;\n    float N_min = floor(max(0.,fract(iTime*.2)*N*2.-N));\n    float N_max = floor(min(N ,fract(iTime*.2)*N*2.));\n    float phase = 10.*iTime;\n    for(float i=N_min; i<N_max; ++i) {\n        alpha += angle(circleVert(i+phase,N)-uv, circleVert(i+1.+phase,N)-uv);\n    }\n    \n    alpha = (alpha/PI+1.)*.5;\n    \n    vec3 col = turbo(alpha);\n    \n    //vec3 col = mix(vec3(0.), vec3(1.), alpha<0.9 ? 0. : 1.);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}