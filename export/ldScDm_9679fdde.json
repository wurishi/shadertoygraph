{"ver":"0.1","info":{"id":"ldScDm","date":"1492342058","viewed":81,"name":"2d distance field clock","username":"ostkaka","description":"2d distance field clock","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2ddistancefieldost"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nvec4 smin(vec4 a, vec4 b, float k) {\n    float h = clamp(0.5+0.5*(b.w-a.w)/k, 0., 1.);\n    return mix(b, a, h)-k*h*(1.-h);\n}\n\nvec4 circle(vec2 pos, float r, vec3 color) {\n    return vec4(color, length(pos) - r);\n}\n\nvec4 ring(vec2 pos, float r, float w, vec3 color) {\n    return vec4(color, abs(length(pos) - r) - w);\n}\n\nvec4 rect(vec2 pos, vec2 size, vec3 color) {\n\tvec2 d = abs(pos) - size;\n  \treturn vec4(color, min(max(d.x, d.y),0.0) + length(max(d,0.0)));\n}\n\nvec4 map(vec2 pos) {\n    vec2 mouse = 2. * iMouse.xy / iResolution.yy - iResolution.xy / iResolution.yy;\n\tvec4 dis = vec4(0., 0., 0., 1e3);\n    \n    // Blue ring\n    dis = smin(dis, ring(0.6 * vec2(sin(iTime), cos(iTime)) - pos, 0.1, 0.01, vec3(0., 0., 1.)), 0.1);\n    \n    // Clock:\n    for (int i = 0; i < 60; i++) {\n    \tdis = smin(dis, circle(0.4 * vec2(cos(float(i)/60.*2.*PI), sin(float(i)/60.*2.*PI)) - pos, 0.01, vec3(1., 1., 1.)), 0.001);   \n    }\n    \n    for (int i = 0; i < 12; i++) {\n    \tdis = smin(dis, circle(0.35 * vec2(cos(float(i)/12.*2.*PI), sin(float(i)/12.*2.*PI)) - pos, 0.02, vec3(1., 1., 1.)), 0.001);   \n    }\n    for (int i = 0; i < 120; i++) {\n    \tdis = smin(dis, circle((0.8 + float(i) / 500.) * vec2(cos(float(i)/30.*2.*PI), sin(float(i)/30.*2.*PI)) - pos, 0.0001 + 0.02 * float(i) / 60., vec3(0.25, 0.25, 0.25)), 0.1);   \n    }\n    // Blue ring Noise:\n    dis.w += -0.005 + 0.01 * texture(iChannel0, pos).r;\n    // Red ring:\n    dis = smin(dis, ring(vec2(0., 0.) - pos, 0.6, 0.02, vec3(1., 0., 0.)), 0.1);\n    \n    // Bubbles!\n    dis += 0.01 * sin(50. * pos.x + 8. * iTime) * sin(50. * pos.y + 4. * iTime);\n    \n    // Second\n    vec2 secondPos = pos;\n    secondPos = vec2(cos(-1./60. * floor(iDate.w) * 2.*PI) * secondPos.x + sin(-1./60. * floor(iDate.w) * 2.*PI) * secondPos.y, cos(-1./60. * floor(iDate.w) * 2.*PI) * secondPos.y - sin(-1./60. * floor(iDate.w) * 2.*PI) * secondPos.x);\n    secondPos = vec2(0., 0.20) - secondPos;\n    dis = smin(dis, rect(secondPos, vec2(0.005, 0.20), vec3(1., 1., 0.)), 0.01);\n    // Minutes\n    secondPos = pos;\n    secondPos = vec2(cos(-1./60. * floor(iDate.w/60.) * 2.*PI) * secondPos.x + sin(-1./60. * floor(iDate.w/60.) * 2.*PI) * secondPos.y, cos(-1./60. * floor(iDate.w/60.) * 2.*PI) * secondPos.y - sin(-1./60. * floor(iDate.w/60.) * 2.*PI) * secondPos.x);\n    secondPos = vec2(0., 0.18) - secondPos;\n    dis = smin(dis, rect(secondPos, vec2(0.01, 0.18), vec3(0.0, 0.25, 0.8)), 0.01);\n    // Hours\n    secondPos = pos;\n    secondPos = vec2(cos(-1./60. * floor(iDate.w/3600.) * 2.*PI) * secondPos.x + sin(-1./60. * floor(iDate.w/3600.) * 2.*PI) * secondPos.y, cos(-1./60. * floor(iDate.w/3600.) * 2.*PI) * secondPos.y - sin(-1./60. * floor(iDate.w/3600.) * 2.*PI) * secondPos.x);\n    secondPos = vec2(0., 0.14) - secondPos;\n    dis = smin(dis, rect(secondPos, vec2(0.015, 0.14), vec3(0.3, 0.5, 0.3)), 0.01);\n    \n    \n    // Cursor:\n    dis = smin(dis, circle(mouse - pos + 0.01 * vec2(sin(20.0*iTime), cos(20.0*iTime)), 0.05, vec3(0., 1., 0.)), 0.01);\n    dis = smin(dis, circle(mouse - pos - 0.01 * vec2(sin(20.0*iTime), cos(20.0*iTime)), 0.05, vec3(0.5, 0.25, 0.)), 0.01);\n    \n    \n    return dis;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2. * fragCoord.xy / iResolution.yy - iResolution.xy / iResolution.yy;\n    vec4 point = map(uv);\n    float density = clamp(.5 - 0.5 * point.w * iResolution.y, 0., 1.);\n\tfragColor = vec4(vec3(0.5 - density) * point.rgb * 0.025 + density * point.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}