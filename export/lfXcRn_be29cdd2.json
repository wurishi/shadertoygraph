{"ver":"0.1","info":{"id":"lfXcRn","date":"1720691050","viewed":27,"name":"Infinite Sierpinksi Carpet","username":"steelannelida","description":"My first shader ever. ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","sierpinksicarpet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3[7] colors = vec3[7](\n    vec3(0., 0., 0.),\n    vec3(0.0, 0.9843, 0.1961),\n    vec3(0.9686, 0.0, 1.0),\n    vec3(1.0, 1.0, 0.0),\n    vec3(0.251, 1.0, 0.0),\n    vec3(1.0, 0.6157, 0.0),\n    vec3(0.0, 0.2824, 1.0)\n);\n\n\nvec3 fracSquare(vec2 pos, int iters) {\n    float D = 3.;\n    vec3 res = vec3(1., 1., 1.);\n    for (int i = 0; i < iters; ++i) {\n        vec2 sector = trunc(pos * D);\n        if (sector == vec2(1., 1.)) {\n            res =colors[iters - i - 1];\n        }\n    \n        pos = fract(pos * D);\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float t = 1. - fract(iTime / 2.);\n    vec2 pos = fract(fragCoord  / (iResolution.x * (exp(t * log(3.)))));\n    float a = 3.1415926 * t / 2.;\n    float y = pos.y;\n    mat2 rot = mat2(\n        cos(a), sin(a),\n        -sin(a), cos(a)\n    );\n    pos = pos * rot;\n    //pos = vec2(pos.x + 0.1 * sin(y * 2. * 3.1415 +  2. * t * 3.1415926), pos.y);\n    vec3 col1 = fracSquare(pos, 5);\n    vec3 col2 = fracSquare(pos, 6);\n    vec3 col = mix(col1, col2, t);\n\tfragColor = vec4(vec3(col), 1.);\n}\t\n","name":"Image","description":"","type":"image"}]}