{"ver":"0.1","info":{"id":"cssSWX","date":"1669724244","viewed":119,"name":"julia set explorer","username":"mikeyaboy","description":"click and drag on the screen to explore the different julia sets!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["juliaset","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi acos(0.0)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float shift = 5.5;\n   \n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 m = iMouse.xy/iResolution.xy;\n    m-=.5;\n    m.x *= iResolution.x/iResolution.y;\n   \n   \n    float zoom = 2.5;\n    uv*=zoom;\n    m*=zoom;\n    \n   \n    vec2 offset = vec2(0.0, 0.0); //the x and y camera offset (changable)\n    \n    \n    m+=offset;\n   \n    vec2 z = vec2(uv.x+offset.x, uv.y+offset.y);\n    vec2 c = vec2(0.0, 0.0);\n    if (sign(iMouse.z)>0.0){\n        c = m;\n    }\n    else{\n        c = z;\n    }\n    \n   \n    int iterations = 5000; //the number of iterations per pixel (changable)\n    \n   \n    int iteration = 0;\n    for(int i = 0; i<iterations; i++){\n        if (sqrt((z.x*z.x)+(z.y*z.y))<2.0){\n        vec2 oldz = z;\n        z.x = ((oldz.x*oldz.x)-(oldz.y*oldz.y))+c.x;\n        z.y = (2.0*oldz.x*oldz.y)+c.y;\n        iteration += 1;\n        }\n       \n    }\n    \n    \n    \n    float col = float(iteration)/25.0;\n   \n\n    // Time varying pixel color\n    if(iteration!=iterations){\n        fragColor = vec4(sin((col*pi)+shift), sin(((col*pi)+(pi/3.0))+shift), cos((col*pi)+shift), 1.0);\n    }\n    else{\n        fragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n\n    // Output to screen\n} \n","name":"Image","description":"","type":"image"}]}