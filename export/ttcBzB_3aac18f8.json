{"ver":"0.1","info":{"id":"ttcBzB","date":"1612960459","viewed":192,"name":"test10022021","username":"logicaldesign","description":"test","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    // fragColor = vec4(col,1.0);\n    \n\n    \n     vec2 xy = fragCoord.xy; //We obtain our coordinates for the current pixel\n    xy.x = xy.x / iResolution.x; //We divide the coordinates by the screen size\n    xy.y = xy.y / iResolution.y;\n    // Now x is 0 for the leftmost pixel, and 1 for the rightmost pixel\n    //vec4 solidRed = vec4(0,0.0,0.0,1.0); //This is actually black right now\n    // solidRed.r = xy.x; //Set its red component to the normalized x value\n    vec4 solidRed =  texture(iChannel0,xy);\n    solidRed.r = abs(sin(iTime));\n    solidRed.g *= abs(cos(iTime));\n    solidRed.b *= abs(sin(iTime) * cos(iTime));\n    fragColor = solidRed;  \n}","name":"Image","description":"","type":"image"}]}