{"ver":"0.1","info":{"id":"XsVyzc","date":"1522793474","viewed":568,"name":"Spinning Square - Antialias","username":"DonKarlssonSan","description":"You must give a description to your shader","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["square","smoothstep","spin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rotate(a)  mat2(cos(a), -sin(a), sin(a), cos(a))\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    /*\n    vec2 uv = (fragCoord.xy -0.5 * iResolution.xy) / iResolution.x * rotate(iTime / 3.0);\n\n    float smoothness = 2.0 / iResolution.x;\n    float size = 0.18;\n    float left = smoothstep(-size, -size + smoothness, uv.x); \n    float bottom = smoothstep(-size, -size + smoothness, uv.y);\n    float top = smoothstep(1.0 - size - smoothness, 1.0 - size, 1.0 - uv.x);\n    float right = smoothstep(1.0 - size -smoothness, 1.0 - size, 1.0 - uv.y);   \n    \n    vec3 color = vec3(left * top * right * bottom);\n    \n    fragColor = vec4(color, 1.0);\n    */\n    \n    \n    float size = 0.18;\n    float smoothness = 2.0 / iResolution.x;\n    vec2 uv = (fragCoord.xy -0.5 * iResolution.xy) / iResolution.x * rotate(iTime / 3.0);\n\n    // Thanks to FabriceNeyret2 for this clever snippet!\n    uv = abs(uv);\n    float d = max(uv.x, uv.y);\n    fragColor = vec4(smoothstep(size, size - smoothness, d));\n\n}","name":"Image","description":"","type":"image"}]}