{"ver":"0.1","info":{"id":"l3lSzX","date":"1709794564","viewed":119,"name":"Chaos Game Ngon","username":"ThibaultTricard","description":"Chaos Game Ngon : \nhttps://en.wikipedia.org/wiki/Chaos_game\n\nN defined in the common File\nAfter Changing N the shader needs to be reset \n","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["chaosgamengon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 hsv2rgb(vec3 c){\n\tvec4 K=vec4(1.,2./3.,1./3.,3.);\n\treturn c.z*mix(K.xxx, clamp( abs(fract(c.x+K.xyz)*6.-K.w)-K.x,0.,1.),c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    uv.x = uv.x - (iResolution.x - iResolution.y)/iResolution.x/2.0;\n    \n    \n    \n    if(uv.x < 0. || uv.y < 0.0){\n        fragColor = vec4(0.0);\n        return;\n    }\n\n    vec4 value = texture(iChannel0, uv);\n    \n    vec3 col = vec3(0.0);\n    if(value.x >0.0){\n        col = hsv2rgb(vec3(value.z/float(nb_point)  , 0.4,0.9));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n#define nb_point 8\n\nfloat pi =  3.14159265;\n\nvec2 begin_pos = vec2(0.5,0.5);\n\n\nfloat interpolationWeight(){\n    float a = 0.0;\n    float theta = pi*float((nb_point-2)) / float(nb_point);\n    for(int i = 1; i <= nb_point/4; i ++){\n        a+= cos(float(i) * (pi - theta));\n    }\n    \n    float r = (1.+2.*a)/(2.+2.*a);\n    return r;\n}\n\n\nfloat hash11(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if( iFrame == 1 ){\n        if(int(fragCoord.x) == 0 && int(fragCoord.y) == 0){\n            fragColor = vec4(begin_pos,3,1);\n        }else{\n            fragColor = vec4(0);\n        }\n    }else{\n        vec4 lastPoint = texelFetch(iChannel0,ivec2(0,0) ,0);\n        if(int(fragCoord.x) == 0 && int(fragCoord.y) == 0){\n            int rnd = int((hash11(float(iFrame)) * float(nb_point)));\n            \n            vec2 vertice = vec2(\n            cos(float(rnd) * 2.0*pi/float(nb_point) + pi/2.),\n            sin(float(rnd) * 2.0*pi/float(nb_point) + pi/2.)\n            ) * 0.5 + 0.5;\n            \n            float t = interpolationWeight();\n            \n            vec2 newPoint = t * vertice + (1.-t) * lastPoint.xy;\n            \n            fragColor = vec4(newPoint,float(rnd),1);\n        \n        }else{\n            ivec2 coord = ivec2(lastPoint.xy * iResolution.y);\n            if(coord.x == int(fragCoord.x) && coord.y == int(fragCoord.y)) {\n                fragColor = vec4(1,1,lastPoint.z,1);\n            }\n            else{\n                vec4 old = texelFetch(iChannel0,ivec2(fragCoord) ,0);\n                fragColor = old;\n            }\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}