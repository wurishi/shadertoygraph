{"ver":"0.1","info":{"id":"lstfR4","date":"1524317026","viewed":70,"name":"kangya's first","username":"kangya","description":" a tutorial for shader in the site named \"Shadertoy\"","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) {\n\n   float d = length(uv - p);\n   float c = smoothstep(r, r - blur, d);\n   \n   return c;\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size) {\n\tuv -= p;  // translating coordinate system\n    uv *= size;  // scaling coordinate system\n    \n    float mask = Circle(uv, vec2(0.), .4, .01);\n    \n    mask -= Circle(uv, vec2(-.13, .2), .07, .01);\n    mask -= Circle(uv, vec2(.13, .2), .07, .01);\n    \n    float mouth = Circle(uv, vec2(0., 0.), .3, .02);\n    mouth -= Circle(uv, vec2(0. , 0.1), .3, .02);\n    \n    mask -= mouth;\n    \n    \n    return mask;\n}\n\nfloat band(float source, float lower, float higher, float blur) {\n  float mask = smoothstep(lower, lower + blur, source) - smoothstep(higher, higher + blur, source);  \n  return mask;\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur) {\n\t\n    float bandx = band(uv.x, left, right, blur);\n    float bandy = band(uv.y, bottom, top, blur);\n    \n    float result = bandx * bandy;\n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n   \t// -0.5 < > 0.5\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // float mask = Circle(uv, vec2(0., 0.), .4, .05);\n    \n    // mask -= Circle(uv, vec2(.13, .2), .07, .01);\n\t// mask -= Circle(uv, vec2(-.13,.2), .07, .01);\n    \n    // float mouth = Circle(uv, vec2(0., 0.), .3, .02);\n    // mouth -= Circle(uv, vec2(0., 0.1), .3, .02);\n    // Output to screen\n    \n    // mask -= mouth;\n    \n    float mask = 0.;\n    \n    \n    float x = uv.x;\n    \n    float m = -(x - 0.5) * (x + 0.5);\n    m = m * m * .5;\n    float y = uv.y - m;\n    \n    \n    mask = Rect(vec2(x, y), -.5, .5, -.1, .1, 0.02);\n    \n    vec3 col = mix(vec3(.2, .8, .2), vec3(1.0, 1.0, 1.0), .9)  * mask; \n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}