{"ver":"0.1","info":{"id":"4ssBWX","date":"1498503831","viewed":284,"name":"DCT vs CCT","username":"MichaelPohoreski","description":"Visualization of Discrete Cosine Transform (Left) vs Continuous Cosine Transform (Right)\nClick and Drag mouse left and right to change number of subdivisions: 8 to 64.\nEach row is 1D DCT; 0 is bottom, 1 is top\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fft","discrete","dct"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat fft(vec2 uv, float SIZE )\n{\n    return cos( uv.y * PI * (2.0 * uv.x + 1.0) / (2.0*SIZE) ); // v*Pi*(2u+1)/16\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 st )\n{\n    st /= iResolution.xy;\n    vec2 uv = st;\n    \n    if( st.x >=  0.5 )\n        uv.x += -0.5; // Right = CCT (Continuous)\n        \n    uv.x *= 2.0; // Common to both\n    \n    float SIZE = 8.0; // Sub-divide into 8x8: 0 .. 7\n    if( iMouse.z > 1.0 )\n        SIZE = max( 8.0, 64.0 * (iMouse.x / iResolution.x));\n    \n    vec2 pq = (SIZE * uv);\n\n    if (st.x < 0.5 )\n        pq = floor( pq ); // Left = DCT (Discrete)\n           \n    float y      = (1.0 + fft( pq, SIZE )) * 0.5;\n    vec3  color  = vec3( y ); // TODO: Gamma correct\n    fragColor    = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}