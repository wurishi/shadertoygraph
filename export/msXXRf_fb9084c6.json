{"ver":"0.1","info":{"id":"msXXRf","date":"1669295712","viewed":92,"name":"Sample Pixelization","username":"valdis","description":"create pixelisation effect ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 PixelsSizeRange =  vec2(5.,300.);\n\nvec3 GetColor(vec2 uv)\n{\n    uv = clamp(vec2(0.0),vec2(1.0), uv);\n    return texture(iChannel0, uv).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float pixelSizeF = mix(PixelsSizeRange.x, PixelsSizeRange.y, 0.5 + 0.5*sin(iTime /2.));\n    \n    vec2 pixelSize = vec2(pixelSizeF * iResolution.x / iResolution.y ,pixelSizeF); // fix aspect ratio in cells\n    \n    vec2 pixelindex = floor(uv * pixelSize); \n    \n    vec2 bottom = pixelindex / pixelSize;\n    vec2 top = (pixelindex + vec2(0.,1.)) / pixelSize;\n    vec2 right = (pixelindex + vec2(1.,0.)) / pixelSize;\n    vec2 topRight = (pixelindex + vec2(1.,1.)) / pixelSize;\n    \n    \n    vec3 color = GetColor(bottom) + GetColor(top) + GetColor(right) + GetColor(topRight);\n    color *= 0.25;\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}