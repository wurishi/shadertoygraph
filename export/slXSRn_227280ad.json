{"ver":"0.1","info":{"id":"slXSRn","date":"1625080298","viewed":56,"name":"Self-portrait. Profile","username":"korkhova","description":"profile","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["profile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    //Максимум от трех переменных\n    float max3(float a, float b, float c){  \n      return max(a,max(b,c));\n    }\n    //Прямая\n    float L(vec2 p, vec2 P0, vec2 P1){  \n      float a = -(P1.y-P0.y);\n      float b =  (P1.x-P0.x);\n      float d =  P0.x*P1.y- P0.y*P1.x; \n      float x = p.x;\n      float y = p.y;              \n       return a*x + b*y + d;\n    }\n        //Треугольник\n        float T(vec2 p, vec2 P0, vec2 P1, vec2 P2){  \n          return  max3(\n                     L(p, P0, P1),\n                     L(p, P1, P2), \n                     L(p, P2, P0)\n                   );   \n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n// my digitalized profile\n    vec2 P[45];\n        P[ 0] = vec2(-0.55927,     \t0.23060); \n        P[ 1] = vec2(-0.78489,     \t0.35345);\n        P[ 2] = vec2(-0.93021,     \t0.32830);\n        P[ 3] = vec2(-1      ,      0.30172);\n        P[ 4] = vec2(-0.99618,     \t0.34770);\n        P[ 5] = vec2(-0.82218,     \t0.73851);\n        P[ 6] = vec2(-0.70459,     \t0.81466);\n        P[ 7] = vec2(-0.59751,     \t0.83333);\n        P[ 8] = vec2(-0.46367,     \t0.81322);\n        P[ 9] = vec2(-0.413  ,     \t0.75647);\n        P[10] = vec2(-0.4044 ,    \t0.74425);\n        P[11] = vec2(-0.39388,     \t0.72270);\n        P[12] = vec2(-0.37954,     \t0.69253);\n        P[13] = vec2(-0.39484,     \t0.66882);\n        P[14] = vec2(-0.38337,     \t0.65445);\n        P[15] = vec2(-0.36042,     \t0.63793);\n        P[16] = vec2(-0.33843,     \t0.62069);\n        P[17] = vec2(-0.32505,     \t0.60704);\n        P[18] = vec2(-0.31931,     \t0.59770);\n        P[19] = vec2(-0.32409,     \t0.58621);\n        P[20] = vec2(-0.33939,     \t0.57974);\n        P[21] = vec2(-0.35468,     \t0.57399);\n        P[22] = vec2(-0.36042,     \t0.56753);\n        P[23] = vec2(-0.36138,     \t0.55891);\n        P[24] = vec2(-0.35755,     \t0.54813);\n        P[25] = vec2(-0.36233,     \t0.53951);\n        P[26] = vec2(-0.36902,     \t0.53089);\n        P[27] = vec2(-0.36042,     \t0.52514);\n        P[28] = vec2(-0.36042,     \t0.51652);\n        P[29] = vec2(-0.3652 ,    \t0.51221);\n        P[30] = vec2(-0.37189,     \t0.50575);\n        P[31] = vec2(-0.37285,     \t0.49713);\n        P[32] = vec2(-0.36998,     \t0.49066);\n        P[33] = vec2(-0.36329,     \t0.47414);\n        P[34] = vec2(-0.36711,     \t0.46336);\n        P[35] = vec2(-0.38241,     \t0.45043);\n        P[36] = vec2(-0.413  ,      0.44325);\n        P[37] = vec2(-0.43786,     \t0.43966);\n        P[38] = vec2(-0.4675 ,    \t0.44109);\n        P[39] = vec2(-0.4847 ,    \t0.43606);\n        P[40] = vec2(-0.51338,     \t0.41810);\n        P[41] = vec2(-0.54207,     \t0.36925);\n        P[42] = vec2(-0.56501,     \t0.31322);\n        P[43] = vec2(-0.56883,     \t0.27514);\n        P[44] = vec2(-0.56023,     \t0.23060);\n    \n    vec2 p = 1.0 - 2.0* fragCoord/iResolution.xy;\n    vec2 m = 1.0 - 2.0* iMouse.xy/iResolution.xy;\n\n     float x = p.x * iResolution.x/iResolution.y;\n     float y = p.y ;\n     \n     float mx = m.x * iResolution.x/iResolution.y;\n     float my = m.y ;\n           \n      x/=mx;\n      y/=my;\n      p.x=x;\n      p.y=y;\n   \n      float z = 1.0e25;\n        for(int i=0; i<45-4; i++)\n            z = min(z, T(p,P[i],P[i+1],P[i+3]) );   \n       float f = 1.25/z; \n    \n    \n            vec3 col = vec3(1.0, 1.0, 1.0);\n              if(f >= 0.0)col.b = sin(iTime/10.0);\n                 else     col.r = f;\n                \n                     fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}