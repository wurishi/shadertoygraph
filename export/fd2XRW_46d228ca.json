{"ver":"0.1","info":{"id":"fd2XRW","date":"1620298047","viewed":81,"name":"learn(11)","username":"saltlemon","description":"learn from https://www.youtube.com/channel/UCcAlTqd9zID6aNX3TzwxJXg The Art of Code","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//float n21(vec2 p){\n//    return fract(sin(p.x*100.+p.y*168.)*2368.);\n//}\nfloat xor(float a,float b){\n    return a*(1.-b)+b*(1.-a);\n}\nmat2 rot(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    //uv-=.5;\n    //uv.x*=iResolution.x/iResolution.y;\n    \n    uv*=rot(fract(iTime/20.)*3.14159*2.);\n    uv*=15.;\n    vec2 duv=fract(uv)-.5;\n    vec2 id=floor(uv);\n    float t=iTime*2.;\n    \n    float m=0.;\n    for(int x=-1;x<=1;x++)\n        for(int y=-1;y<=1;y++)\n        {\n            vec2 offset=vec2(x,y);\n            float d=length(duv-offset);\n            float randnum=length(id+offset)*.3;\n            float r=mix(.3,1.5,.5*sin(randnum-t)+.5);\n            m=xor(smoothstep(r,r*.9,d),m);\n        }\n    // Time varying pixel color\n    vec3 col =vec3(0.);\n    \n    //col.rg=duv;\n    col+=m;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}