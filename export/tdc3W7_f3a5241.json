{"ver":"0.1","info":{"id":"tdc3W7","date":"1568661592","viewed":216,"name":"Julia Set Hipercomplex 3D","username":"aaraomelo","description":"Julia Set  Hipercomplex 3D ray march","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","hipercomplex3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//vec3 multiply(vec3 a,vec3 b){\n//    float r1 = sqrt(a.x*a.x+a.y*a.y);\n//    float r2 = sqrt(b.x*b.x+b.y*b.y);\n//    if(r1==0.){\n//        if(r2==0.)\n//            return vec3(-a.z*b.z,0.,0.);\n//        else\n//            return vec3(-a.z*b.z*b.x/r2,-a.z*b.z*b.y/r2,a.z*r2);\n//    }\n//    else{\n//        if(r2==0.)\n//            return vec3(-a.z*b.z*a.x/r1,-a.z*b.z*a.y/r1,b.z*r1);\n//        else{\n//            float gamma = 1.-a.z*b.z/(r1*r2);\n//            return vec3((a.x*b.x-a.y*b.y)*gamma,(a.x*b.y+b.x*a.y)*gamma,a.z*r2+b.z*r1);\n//        }\n//    }\n//}\n\nvec3 multiply(vec3 a,vec3 b){\n    \n\treturn vec3(a.x*b.x-a.y*b.y-a.z*b.z,a.x*b.y+b.x*a.y,a.x*b.x+b.z*a.z);\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    mat3 rotz = mat3(\n        vec3(1., 0., 0.),\n        vec3(0.,cos(iTime), sin(iTime)),\n        vec3(0.,-sin(iTime), cos(iTime))\n    );\n    mat3 rotx = mat3(\n        vec3(cos(iTime), sin(iTime),0.),\n        vec3(-sin(iTime), cos(iTime),0.),\n        vec3(0., 0., 1.)\n    );\n    mat3 rot= rotz*rotx;\n    vec2 uv = (-1.0 + 2.0*fragCoord.xy / iResolution.xy) * \n\t\tvec2(iResolution.x/iResolution.y, 1.0);\n    vec3 rd = normalize(vec3(uv, 1.0));\n    vec3 color = vec3(0.);\n    vec3 ro = vec3(0.0,0.0,2);\n    \n    // modify ///\n    vec3 c = vec3(-0.2,0.3,-0.85);\n    \n    for(int i = 0; i<100; i++){\n    // March\n    \tvec3 point = rot*(rd*(float(i)/100.*3.)-ro); \n    \tbool flag = false;\n        for(int j = 0;j<30;j++){\n           point = multiply(point,point)+c;\n           float mq = dot(point,point);\n           if( mq > 4.){\n               flag = true;\n               break;\n           }\n        }\n        if(!flag){          \n            color += vec3(2.*float(i)/4000., float(i)/4000.,0.0);\n        }\n    }\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}