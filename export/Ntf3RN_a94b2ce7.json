{"ver":"0.1","info":{"id":"Ntf3RN","date":"1621592348","viewed":54,"name":"cosine threecolor gradation","username":"uynet","description":"ation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\n\nfloat tri(float t){\n    float ct = t+0.5*PI;\n    return sin(ct)-sin(3.0*ct)/9.0;\n}\n\n// triangle(N=2)\nfloat f1(float x){\n    return (tri(PI*x)*0.9+1.0)/2.0;\n}\n//cosine\nfloat f2(float x){\n    return (cos(PI*x)+1.0)/2.0;\n}\n//cosine ^0.7\nfloat f3(float x){\n    return pow((cos(PI*x)+1.0)/2.0,0.7);\n}\n\nfloat lc(float t, float a){\n    float mt = mod(t-a,4.0);\n    if(1.0<mt && mt<3.0) return 0.0;\n    \n    //switch here!\n    else return f3(mt);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = uv.x*2.0 + iTime;\n    float c1 = lc(t,0.0);\n    float c2 = lc(t,1.0);\n    float c3 = lc(t,2.0);\n    float c4 = lc(t,3.0);\n    \n    vec3 start = vec3(1,0,0);\n    vec3 mid = vec3(0,1,0);\n    vec3 end = vec3(0,0,1);\n\n    // Time varying pixel color\n    vec3 col = start*c1 + mid*c2 + end*c3 + mid*c4;\n    \n    //to visualize func\n    /*\n    float w = 0.005;\n    if(length(uv-vec2(uv.x,c1))<w)col = start;\n    if(length(uv-vec2(uv.x,c2))<w)col = mid;\n    if(length(uv-vec2(uv.x,c3))<w)col = end;\n    if(length(uv-vec2(uv.x,c4))<w)col = mid;\n    */\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}