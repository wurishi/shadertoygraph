{"ver":"0.1","info":{"id":"ltdyR4","date":"1531850728","viewed":204,"name":"random sdf rings","username":"aardappel","description":"somehow inspired by http://www.thisiscolossal.com/2018/06/unique-weathering-chain-link-fence/","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Tweakables, in this order:\nconst int num_circles = 200;\nconst float ring_amount = 80.0;\nconst float color_scale = 3.0;\nconst float smin_sharpness = 0.005;\nconst float rad_scale = 0.08;\nconst float rad_anim_scale = 50.0;\nconst float rad_anim_speed = 3.0;\nconst float ring_border_width = 2.0;\nconst float random_seed = 0.7;\nconst vec3 color1 = vec3(0.3, 1.0, 0.6);\nconst vec3 color2 = vec3(0.3, 0.6, 1.0);\n\nfloat smin(float a, float b, float k) {\n  \tfloat h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n  \treturn mix(b, a, h) - k * h * (1.0 - h);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.y;\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.0);\n    float d = 10000.0;\n    vec2 pos = vec2(0.5, 0.5);\n    for (int i = 0; i < num_circles; i++) {\n        pos = vec2(rand(pos), rand(pos + random_seed)) * aspect;\n        float rad = rand(pos) * rad_scale + sin(iTime / rad_anim_speed) / rad_anim_scale;\n    \td = smin(d, distance(uv, pos) - rad, smin_sharpness);\n    }\n    float sd = d * ring_amount;\n    vec3 pc = mix(color1, color2, float(int(sd)) / color_scale);\n    vec3 col = vec3(1.0 - pow(abs(fract(sd) * 2.0 - 1.0), ring_border_width)) * pc;\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}