{"ver":"0.1","info":{"id":"NtVyWR","date":"1661260954","viewed":74,"name":"WhirlieGig","username":"Loshie","description":"Two whirling forms that interact when you move the mouse. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","abstract","geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvec3 color1 = vec3(0.3, 0.4, 1.0);\nvec3 color2 = vec3(0.7, 0.4, 0.6);\n\nconst float w = 26000.0;         // 2D space width\n\nfloat idleWhirl() {\n    return sin(iTime) * 5. + 7.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2  R = iResolution.xy ,\n       st = ( fragCoord -.5 * R ) / R.y,\n       st2 = st,\n       offs = vec2(.5,-.2),\n       scaling = vec2(w/R.y);\n       \n  st  += offs; \n  st  *= scaling;\n  st2 -= offs; \n  st2 *= scaling;\n \n  float arms, whirls;\n  \n  if (iMouse.x ==0.0){\n      arms = 10.;\n      whirls = idleWhirl();\n  } else {\n      vec2 mouseS = 10.* iMouse.xy/R;\n      arms = mouseS.x;\n      whirls = floor(mouseS.y);\n  }\n  \n  \n  float r1 = length(st);    // Convert cartesian to polar\n  float theta1 = atan(st.x, st.y);\n  float val1 = sin(whirls *cos(r1) + arms  * theta1);\n  \n  float r2 = length(st2);    // Convert cartesian to polar\n  float theta2 = atan(st2.x, st2.y);\n  float val2 = sin(whirls * cos(r2) + arms * theta2);      \n\n  float val = (val1 + val2 + 2.0) / 4.0;\n  \n  vec3 newColor = mix(color1, color2, val);\n\n  fragColor = vec4(newColor, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}