{"ver":"0.1","info":{"id":"DltBzj","date":"1701417154","viewed":16,"name":"Mars like","username":"daiki","description":"作っていたらだんだん火星に見えてきたので、そのように見えるように色を試行錯誤した。","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["celestial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n    \n    uv -= vec2(0.5, 0.5) * iResolution.xy;\n\n    vec3 col = vec3(0, 0, 0);\n    \n    float r = 130.0;\n    if(uv.x * uv.x + uv.y * uv.y < r * r){\n        float z = sqrt(r * r -uv.x * uv.x - uv.y * uv.y);\n        vec3 normal = normalize(vec3(z, uv.y, uv.x));\n        vec3 light = normalize(vec3(1.0, 1.0, 1.0));\n        float diffuse =clamp(dot(normal, light), 0.0, 1.0);\n        float I = diffuse * 0.9 + 0.3;\n        col = vec3(I, diffuse, diffuse);\n        \n        vec3 d = vec3 (0.0, 0.0, 1.0);\n        vec3 reflection = reflect(d, normal);\n        I += pow(clamp(dot(reflection,light), 0.0, 1.0), 20.0);\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}