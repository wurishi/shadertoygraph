{"ver":"0.1","info":{"id":"MtBcz1","date":"1507402070","viewed":1036,"name":"Very fast approximate atmosphere","username":"afl_ext","description":"Enjoy, mouse to move","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["sky","scattering","atmosphere","atmospheric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 extra_cheap_atmosphere(vec3 raydir, vec3 sundir){\n\tsundir.y = max(sundir.y, -0.07);\n\tfloat special_trick = 1.0 / (raydir.y * 1.0 + 0.1);\n\tfloat special_trick2 = 1.0 / (sundir.y * 11.0 + 1.0);\n\tfloat raysundt = pow(abs(dot(sundir, raydir)), 2.0);\n\tfloat sundt = pow(max(0.0, dot(sundir, raydir)), 8.0);\n\tfloat mymie = sundt * special_trick * 0.2;\n\tvec3 suncolor = mix(vec3(1.0), max(vec3(0.0), vec3(1.0) - vec3(5.5, 13.0, 22.4) / 22.4), special_trick2);\n\tvec3 bluesky= vec3(5.5, 13.0, 22.4) / 22.4 * suncolor;\n\tvec3 bluesky2 = max(vec3(0.0), bluesky - vec3(5.5, 13.0, 22.4) * 0.004 * (special_trick + -6.0 * sundir.y * sundir.y));\n\tbluesky2 *= special_trick * (0.24 + raysundt * 0.24);\n\treturn bluesky2 + mymie * suncolor;\n} \n\n// some helpers for visualization\nmat3 rotationMatrix(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n\n    return mat3(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s,\n        oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s,\n        oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c);\n}\n\nfloat rand2s(vec2 co){\n    return fract(sin(dot(co.xy,vec2(12.9898,78.233))) * 43758.5453);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position = fragCoord.xy / iResolution.xy;\n    \n    vec2 mouse = iMouse.xy / iResolution.xy;\n\n    if(mouse.x == 0.0) mouse += vec2(-1.8, 0.76);\n    \n \tmat3 roty = rotationMatrix(vec3(0.0, 1.0, 0.0), -mouse.x * 3.1415 * 2.0);\n \tmat3 rotx = rotationMatrix(vec3(1.0, 0.0, 0.0), (mouse.y * 2.0 - 1.0) * 3.1415 * 0.5);\n\tvec3 ray = roty * rotx * normalize(vec3(position.x * 2.0-1.0, position.y * 2.0-1.0, 1.0));\n\tvec3 sd = normalize(mix(vec3(1.0, -0.07, 0.0), vec3(0.0, 1.0, 0.0), sin(iTime * 0.5 + 0.5) * 0.5 + 0.5));\n\t\n\tvec3 atm = extra_cheap_atmosphere(ray, sd);\n\t//atm = normalize(atm) * sqrt(length(atm)); // tonemap if you want\n\tatm += smoothstep(0.998, 0.999, dot(ray, sd));\n\t\n\tfragColor = ray.y <= 0.0 ? vec4(0.3) : vec4(atm + vec3(1.0 / 128.0) * vec3(rand2s(position), rand2s(position + 100.0), rand2s(position + 200.0)), 1.0 );\n\n}","name":"Image","description":"","type":"image"}]}