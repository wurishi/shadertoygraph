{"ver":"0.1","info":{"id":"M33Xz8","date":"1718674867","viewed":104,"name":"simple windswept grass field","username":"Amita","description":"just watched that Acerola video and wanted to see how much stuff can be done with this simple idea\n\nsimulated all the grass as one mass and spring, and the grass's curve is just xÂ²\n\nthe normal vector (N) isn't quite right but I kinda like it this way","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["3d","shelltexturing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n#define NUMLVLS 128.0\n#define HEIGHT 0.4\n\nconst vec2 texSize = vec2(12,8);\nconst vec3 lightDir = vec3(3,12,4)/13.0;\n\nmat3 curRot() {\n    vec2 mouse = (iMouse.zw == vec2(0.0) ? vec2(0.5) : iMouse.xy);\n    vec2 angle = -PI*vec2(2.0*mouse.x/iResolution.x - 1.0, mouse.y/iResolution.y - 0.5);\n    return mat3(\n        1.0,      0.0    ,    0.0     ,\n        0.0,cos(angle.y),-sin(angle.y),\n        0.0,sin(angle.y), cos(angle.y))\n    *mat3(\n        cos(angle.x),0.0,-sin(angle.x),\n            0.0     ,1.0,       0.0   ,\n        sin(angle.x),0.0, cos(angle.x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 origin = vec3(0.0,1.0,0.0);//texelFetch(iChannel3, ivec2(0,0), 0).xyz*1e3;\n    vec3 dir = vec3((fragCoord - iResolution.xy/2.0)/iResolution.y,1.0)*curRot();\n    vec3 pos = dir + origin;\n    \n    if (dir.y > 0.0) {\n        // the sun\n        float asd = pow(dot(dir,lightDir)/length(dir)/2.0 + 0.5,15.0);\n        fragColor = vec4(0.3 + 0.77*asd,0.7 + 0.33*asd,0.8 + 0.22*asd,1.0);\n    } else {\n        if (dir.y != 0.0) dir /= abs(dir.y);\n        vec3 target;\n        vec2 grass;\n        float len, diffuse;\n        vec3 N;\n        vec2 wind = texelFetch(iChannel1, ivec2(0,0), 0).rg*2.0*texSize/iChannelResolution[0].xy;\n\n        for (float i = 1.0; i > 0.0; i-= 1.0/NUMLVLS) {    // to curve it more at the top I squared it\n            target = pos - dir*(HEIGHT*i - pos.y) + vec3(wind.x,0,wind.y)*i*i;\n            len = texelFetch(iChannel0, ivec2(modulo(target.xz,texSize)*iChannelResolution[0].xy/texSize), 0).r;\n            grass = modulo(target.xz*iChannelResolution[0].xy*2.0/texSize,vec2(2.0))-vec2(1.0);\n            if (len > i && length(grass)/1.4 < 1.0-i/len) {\n                vec2 horiz = 1.4*grass + 2.0*i*wind;\n                N = vec3(horiz.x,dot(horiz,horiz)/(1.0-i),horiz.y);\n                diffuse = pow(0.5*dot(N,lightDir)/length(N)+0.5,1.8);\n                \n                fragColor = vec4(vec3(0,1.2,0)*diffuse*i,1);\n                return;\n            }\n        }\n        fragColor = vec4(0,0,0,1);\n        /*/\n        target = pos + dir*pos.y;\n        fragColor = texelFetch(iChannel0, ivec2(modulo(target.xz,texSize)*iChannelResolution[0].xy/texSize), 0);\n        //*/\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float windStrength = 1.4;\nconst float k = 0.10;\nconst float m = 0.01;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame < 1) fragColor = vec4(0);\n    else if (dot(fragCoord,vec2(1,0.5)) < 0.5) {\n        // tip position = last position + velocity * iTimeDelta\n        fragColor = texelFetch(iChannel0, ivec2(0,0), 0) + texelFetch(iChannel0, ivec2(0,1), 0)*iTimeDelta;\n        \n    } else if (dot(fragCoord,vec2(1,0.5)) < 1.0){\n        // tip velocity\n        vec2 windF = windStrength*(texelFetch(iChannel1, ivec2(modulo(vec2(iFrame,float(iFrame)/iChannelResolution[1].x),iChannelResolution[1].xy)), 0).rg - vec2(0.5));\n        // For a good wind effect the wind should be random but somewhat smooth\n        // a buffer with uncorrelated smooth rg values would make it better\n        vec2 x = texelFetch(iChannel0, ivec2(0,0), 0).rg;\n        vec2 v = texelFetch(iChannel0, ivec2(0,1), 0).rg;\n        fragColor = vec4(v + (windF - k*x)*iTimeDelta/m,0,0);\n    } else\n        fragColor = vec4(0,0,0,1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec2 modulo(vec2 x, vec2 y) {\n    return mod(mod(x,y)+y,y);\n}","name":"Common","description":"","type":"common"}]}