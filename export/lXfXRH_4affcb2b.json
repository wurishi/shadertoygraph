{"ver":"0.1","info":{"id":"lXfXRH","date":"1709135467","viewed":55,"name":"Holographic Ocean Installation","username":"PG_TG","description":"Description","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*--------------------------------\n  HOLOGRAPHIC OCEAN INSTALLATION\n--------------------------------*/\n\n#define PI 3.1415926535897932384626433832795\n\n// WAVE DRAWING FUNCTION\nvec4 wave(vec2 uv, float thic, float xoff, float yoff, float freq, float amp, float blur, float speed, vec3 colour) {\n    return vec4(\n        colour, \n        smoothstep(\n            .001 / iResolution.y, \n            -abs(uv.x * blur), \n            abs(yoff + (amp/2. * cos(uv.x * freq * PI + (iTime * speed) + xoff)) - uv.y) - thic)\n    );\n}\n\n// CIRCLE FUNCTION\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 col, bool edg, float smt) {\n    float value = distance(pos, uv);\n\n    if (edg) // Smooth edges mode\n        value = smoothstep(value, value + smt, rad);\n    else     // Hard edges mode\n        value = step(value, rad);\n    \n    return vec4(col, value);\n}\n\n// ROTATION FUNCTION\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle), -sin(_angle),\n                sin(_angle), cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Aspect Ratio Fix\n    uv = uv * 2. - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // UV Rotation\n    uv *= rotate2d(sin(iTime * PI/2.)/10.);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // Black background\n    vec4 background = vec4(0., 0., 0., 0.);\n    vec4 foreground;\n    \n    // Draw waves\n    int waveCount = 100;\n    for(int i = 1; i < waveCount; i++) {\n        float j = float(i);\n        \n        // Shine layer\n        col = 0.5 + 0.5 * cos(iTime + (0.05 * j) + uv.xyx + vec3(0, 2, 4));\n        foreground = wave(\n            uv, \n            0.005 * (sin(iTime) + 1.5),   // Thickness\n            0.05 * j,                     // X Offset\n            0.66 - (0.0125 * j),          // Y Offset\n            1.0 - (0.02 * j),             // Frequency\n            0.25,                         // Amplitude\n            0.05,                         // Edge Blur\n            2.0,                          // Animation Speed\n            vec3(1., 1., 1.)\n        );\n        background = mix(background, foreground, foreground.a);\n        \n        // Floating Ball\n        if(i >= (waveCount/2 - 1)) {\n            foreground = circle(\n                uv,\n                vec2(\n                    0.,\n                    i < waveCount/2 ?\n                        0.15 * sin(iTime) - 0.1:\n                        0.15 * sin(iTime) - 0.05\n                ),\n                i > waveCount/2 ?\n                    0.45 - (0.02 * (j - float(waveCount)/2.)) :\n                    0.4 - (0.02 * (j - float(waveCount)/2.)),\n                i < waveCount/2 ?\n                    col :\n                    vec3(0., 0., 0.),\n                i == waveCount/2 ? \n                    false : \n                    true,\n                0.1\n            );\n            background = mix(background, foreground, foreground.a);\n        }\n        \n        // Colour wave\n        foreground = wave(\n            uv, \n            0.005 * (sin(iTime)/2. + 1.5),   // Thickness\n            0.05 * j,                        // X Offset\n            0.65 - (0.0125 * j),             // Y Offset\n            1.0 - (0.02 * j),                // Frequency\n            0.25,                            // Amplitude\n            0.015,                           // Edge Blur\n            2.0,                             // Animation Speed\n            col\n        );\n        background = mix(background, foreground, foreground.a);\n    }\n\n    // Output to screen\n    fragColor = mix(background, foreground, foreground.a);\n}","name":"Image","description":"","type":"image"}]}