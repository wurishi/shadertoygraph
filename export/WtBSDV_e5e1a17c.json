{"ver":"0.1","info":{"id":"WtBSDV","date":"1567068578","viewed":294,"name":"Milk Metaballs","username":"holtsetio","description":"Quick sketch to demonstrate raymarching to a coworker","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPSILON 0.0001\n#define MAXDIST 10.0\n#define SPHERENUM 20\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat noise(float p, float id) {\n\tfloat t = iTime*0.3 + p*id*33.1293;\n\tfloat s = floor(t);\n    float phase = t-s;\n    vec2 rs = vec2(23.1917,12.3777);\n    return mix(rand(rs*s),rand(rs*(s+1.0)),sin((phase-0.5)*3.14159)*0.5+0.5);\n}\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nfloat voxelRes = 0.01;\n\nfloat map(vec3 p) {\n    float d = 1e9,d0;\n    for (int i=0; i<SPHERENUM;i++) {\n        float r = noise(float(i),1.0)*0.7;\n        float x = noise(float(i),2.0)*2.0-1.0;\n        float y = noise(float(i),3.0)*2.0-1.0;\n        float z = noise(float(i),4.0)*2.0-1.0;  \n   \t\td0 = length(vec3(x,y,z)-p)-r;\n        d = opSmoothUnion(d,d0,0.5);\n    }\n\n    return d;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.xy-0.5)*2.0;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 rd = normalize(vec3(uv,1.8));\n    vec3 p = vec3(0.0,0.0,-4.0);\n    float c = 0.0;\n    float d = 1.0, td = 0.0;\n    while (td <= MAXDIST && d > EPSILON*td) {\n      \td = map(p);\n        c += max(0.0,1.0-d) * 0.01;\n      \ttd += d;\n        p += rd*d;\n    }\n    fragColor = vec4(vec3(1.0-c),1.0);\n}","name":"Image","description":"","type":"image"}]}