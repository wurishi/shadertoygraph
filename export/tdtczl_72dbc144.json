{"ver":"0.1","info":{"id":"tdtczl","date":"1601571211","viewed":396,"name":"translation rotation & scaling","username":"Cewein","description":"BIMA example","likes":3,"published":1,"flags":0,"usePreview":1,"tags":["image","rotation","translation","scaling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// exemple of the BIMA course\n// rotation and scaling goes well together\n// but translation isn't going so well with it\n//\n// uncomment the translation part if you want to see the translation\n\n//return a 2D rotation matrix in radians\nmat2 rot(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c,s,-s,c);\n}\n\n//return a 2D scale matrix\nmat2 scale(float a)\n{\n    return mat2(a,0,0,a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //pixel coordinate\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n\n    //perform rotation and the scaling\n    uv *= rot(iTime/5.0) * scale(1.0 - sin(iTime/5.0));\n    \n    //perform translation\n    //uv.x += sin(iTime/5.0);\n    //uv.y += cos(iTime/5.0);\n\n    //uv is the coordonnate of the pixel we are\n    //going to display\n    fragColor = vec4(texture(iChannel0,uv + 0.5));\n}","name":"Image","description":"","type":"image"}]}