{"ver":"0.1","info":{"id":"4fyyWt","date":"1732509144","viewed":28,"name":"pyramid-wave-test","username":"adras","description":"pyramid-wave-test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n// Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5, 0.5);\n    // *5 instead of *2 for better visual scale\n    uv *= 5.0;\n\n    // Parameters for the wave packets\n    float freqMultiplier = 20.0;\n    float timeMultiplier = 2.0;\n    float time = iTime;\n\n    // Pyramid dimensions and scaling\n    float pyramidHeight = 1.0; // Height of the pyramid\n    float baseSize = 1.5;      // Base width\n    float depthPerspective = 1.2; // Perspective scaling\n\n    // Four wave packet positions, forming pyramid sides\n    vec2 wavePos[4];\n    wavePos[0] = vec2(-baseSize, 0.0);   // Bottom-left\n    wavePos[1] = vec2(baseSize, 0.0);    // Bottom-right\n    wavePos[2] = vec2(0.0, pyramidHeight); // Top-center (pyramid apex)\n    wavePos[3] = vec2(0.0, -pyramidHeight); // Bottom-center (inverted apex)\n\n    // Oscillators at each vertex\n    float waves[4];\n    for (int i = 0; i < 4; i++) {\n        float distance = length(uv - wavePos[i]);\n        waves[i] = (sin(freqMultiplier * distance + timeMultiplier * time)) / (distance + 0.1);\n    }\n\n    // Composite wave interaction at central point\n    float compositeWave = 0.0;\n    for (int i = 0; i < 4; i++) {\n        compositeWave += waves[i];\n    }\n\n    compositeWave /= 4.0; // Normalize\n\n    // Coloring: composite wave is mapped to color\n    float intensity = abs(compositeWave);\n    fragColor = vec4(intensity, intensity * 0.5, 1.0 - intensity, 1.0);\n}","name":"Image","description":"","type":"image"}]}