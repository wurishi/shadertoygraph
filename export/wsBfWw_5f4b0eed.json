{"ver":"0.1","info":{"id":"wsBfWw","date":"1590147387","viewed":105,"name":"ShATI - Danger","username":"Flopine","description":"My former school named ATI decided to launch an everyday challenge from 4th may to 24th may, here is the 17th subject: danger :)\nInspired by some famous movie you'll recognize ;) ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","logo","ghostbuster"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n// Shader made for Everyday ATI challenge\n\n\n#define TAU 6.2831853071\n\nmat2 rot(float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat caps (vec3 p, vec3 a, vec3 b, float r)\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r;\n}\n\nfloat cyl (vec3 p, float r, float h)\n{return max(length(p.xy)-r,abs(p.z)-h);}\n\nfloat box (vec3 p, vec3 c)\n{\n    vec3 q = abs(p)-c;\n    return min(0.,max(q.x,max(q.y,q.z)))+length(max(q,0.));\n}\n\nvec2 panneau (vec3 p)\n{\n    float r = 2.;\n    float d = max(-cyl(p, r*0.76, 0.5),cyl(p, r, 0.1));\n    p.xy *= rot(-TAU/8.);\n    d = min(d, box(p,vec3(0.2,r*0.9,0.1)));\n    return vec2(d,1.);\n}\n\nvec2 fantome (vec3 p)\n{\n    float r = 1.2;\n    vec3 pp = p;\n    p.xy *= rot(TAU/12.);\n    p.z -= 0.95+sin((p.y+TAU/4.)*TAU/4.)*0.5;   \n    float d = caps(p,vec3(0.,-.9,0.),vec3(0.,.6,0.),r);\n    \n    p = pp;\n    p -= vec3(-0.5,1.7, -0.2);\n    float r2 = 0.5-sin(p.y*TAU)*0.13;\n    d = smin(d, caps(p,vec3(0.,-0.05,0.),vec3(0.,.05,0.),r2), 0.2);\n    \n    return vec2(d,2.);\n}\n\nvec2 face (vec3 p)\n{\n    p += vec3(0.5,-1.65,0.75);\n    vec3 pp = p;\n    p.x = abs(p.x)-0.15;\n    float d = length(p)-0.05;\n    \n    p = pp;\n    p.y += 0.3;\n    d = min(d, length(p*vec3(1.3,1.,1.))-0.1);\n    return vec2(d,3.);\n}\n\nvec2 mat_min (vec2 a, vec2 b)\n{\n    if (a.x<b.x) return a;\n    else return b;\n}\n\nvec2 SDF (vec3 p)\n{\n    p.xz *= rot(sin(iTime*0.5)*0.1);\n    p.yz *= rot(sin(iTime)*0.05);\n    \n    return mat_min(face(p),mat_min(fantome(p),panneau(p)));\n}\n\nvec3 getnorm(vec3 p)\n{\n    vec2 eps = vec2(0.0001,0.);\n    return normalize(SDF(p).x-vec3(SDF(p-eps.xyy).x,SDF(p-eps.yxy).x,SDF(p-eps.yyx).x));\n}\n\nfloat spec (vec3 n, vec3 l, vec3 rd)\n{\n    vec3 h = normalize(l-rd);\n    return pow(max(dot(n,h),0.),30.);\n}\n\nvec3 background (vec2 uv)\n{\n    uv.x = fract(uv.x*5.)-0.5;\n    float mask = smoothstep(0.15,0.25,abs(uv.x));\n    return mix(vec3(0.1,0.2,0.1),vec3(0.,0.8,0.2),mask);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 ro = vec3(0.,0.2,-3.),\n        rd= normalize(vec3(uv,1.)),\n        p = ro,\n        l = normalize(vec3(0.,2.,-5.)),\n        col = background(uv);\n    \n    float shad; \n    vec2 d = vec2(0.);\n    bool hit = false;\n    \n   \tfor (float i=0.; i<64.;i++)\n    {\n    \td = SDF(p);\n        if (d.x<0.001)\n        {\n            hit = true;\n            shad = i/64.;\n            break;\n        }\n        p += d.x*rd;\n    }\n    \n    if(hit)\n    {\n        vec3 n =getnorm(p);\n        float light = max(dot(n,l),0.);\n        if (d.y == 1.)\n        {\n            col = mix(vec3(0.1,0.,0.),vec3(0.8,0.,0.),light);\n        \tcol += spec(n,l,rd);\n        }\n        if (d.y == 2.)\n        {\n            col = mix(vec3(0.1),vec3(1.),light);\n        }\n        if (d.y == 3.)\n        {\n            col = vec3(0.);\n        }      \n    }\n   \n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}