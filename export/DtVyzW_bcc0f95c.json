{"ver":"0.1","info":{"id":"DtVyzW","date":"1699991141","viewed":133,"name":"Conway's Game of Life Nov2023","username":"amaxwell","description":"Conway's Game of Life","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["conwaylife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// I learned from https://www.shadertoy.com/view/Xd33WS\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// takes a coordinate and returns a random float\nfloat random(vec2 co) {\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n// takes a coordinate and returns if it was alive before\nbool getWasAlive (vec2 co) {\n    return texture(iChannel0, co / iResolution.xy).r > 0.5;\n}\n\n// takes a coordinate and returns the number of living neighbors it has\nint countLivingNeighbors (vec2 fragCoord) {\n    int n = 0;\n    for (int dx = -1; dx <= 1; dx++) {\n        for (int dy = -1; dy <= 1; dy++) {\n            if (dx == 0 && dy == 0) continue;\n            if (getWasAlive(fragCoord + vec2(dx, dy))) n++;\n        }\n    }\n    return n;\n}\n\n// takes a coordinate and returns if it should be alive\nbool isNextAlive (vec2 fragCoord) {\n    if (iFrame == 0 || length(iMouse.xy - fragCoord) < 5.0) {\n        return random(fragCoord) > 0.5;\n    }\n    \n    int n = countLivingNeighbors(fragCoord);\n    return n == 3 || (n == 2 && getWasAlive(fragCoord));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    bool v = isNextAlive(fragCoord);\n    fragColor = vec4(v, v, v, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}