{"ver":"0.1","info":{"id":"mdsGRn","date":"1665580711","viewed":53,"name":"edoandcode_00","username":"edoandcode","description":"A simple Circle function with smoothed edges","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 pt, vec2 center, float radius, float blur){\n    pt = pt- center;\n    float dist = length(pt);\n    return 1.0 - smoothstep(radius-blur, radius, dist);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect =  iResolution.y/iResolution.x;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float c = circle(uv * vec2(1.0, aspect), vec2(0.5)  * vec2(1.0, aspect), 0.2, 0.1);\n\n    // Output to screen\n    fragColor = vec4(col * c,1.0);\n}","name":"Image","description":"","type":"image"}]}