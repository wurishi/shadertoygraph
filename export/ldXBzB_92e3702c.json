{"ver":"0.1","info":{"id":"ldXBzB","date":"1496704367","viewed":2643,"name":"Circle Bokeh Blur","username":"luluco250","description":"Simple circle blur effect\nYou can click and move the mouse to change the scale/aspect ratio of the blur.","likes":46,"published":3,"flags":32,"usePreview":1,"tags":["2d","blur","filter","circle","bokeh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SAMPLES 12\n\n#define ANGLE_SAMPLES (3 * SAMPLES)\n#define OFFSET_SAMPLES (1 * SAMPLES)\n\n#define HDR_CURVE 4.0\n\nfloat degs2rads(float degrees) {\n    return degrees * 0.01745329251994329576923690768489;\n}\n\nvec2 rot2D(float offset, float angle) {\n    angle = degs2rads(angle);\n    return vec2(cos(angle) * offset, sin(angle) * offset);\n}\n\nvec3 circle_blur(sampler2D sp, vec2 uv, vec2 scale) {\n    vec2 ps = (1.0 / iResolution.xy) * scale;\n    vec3 col = vec3(0.0);\n    float accum = 0.0;\n    \n    for (int a = 0; a < 360; a += 360 / ANGLE_SAMPLES) {\n        for (int o = 0; o < OFFSET_SAMPLES; ++o) {\n\t\t\tcol += texture(sp, uv + ps * rot2D(float(o), float(a))).rgb * float(o * o);\n            accum += float(o * o);\n        }\n    }\n    \n    return col / accum;\n}\n\nvec3 pseudo_tonemap(vec3 col, float exposure) {\n    col = pow(col, vec3(1.0 / HDR_CURVE));\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n\tvec2 uv = fragCoord / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    vec3 col = circle_blur(iChannel0, uv, iMouse.z > 0.0 ? mouse : vec2(1.0));\n    col = pseudo_tonemap(col, 1.0);\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define HDR_CURVE 4.0\n\n#define BG_SPEED vec2( -0.03, 0.05)\n#define FG_SPEED vec2( 0.0, -0.02)\n\nvec3 make_hdr(vec3 col) {\n    col = pow(col, vec3(HDR_CURVE));\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n\tvec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 uv_bg = uv + iTime * BG_SPEED;\n    vec2 uv_fg = (1.0 - uv) + iTime * FG_SPEED;\n    \n    vec3 bg = texture(iChannel0, uv_bg).rgb;\n    vec3 fg = texture(iChannel0, uv_fg).rgb;\n    \n    vec3 col = bg + fg;\n    col = col * col;\n    col = make_hdr(col);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}