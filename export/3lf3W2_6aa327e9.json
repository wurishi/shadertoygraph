{"ver":"0.1","info":{"id":"3lf3W2","date":"1557606340","viewed":159,"name":"[00005] spheres+\"volumetric fog\"","username":"samel","description":"[00005] spheres+\"volumetric fog\"","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","basic","fog","diffusa","volumetricy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rnd1(vec2 p)\n{\n return fract(sin(dot(p,vec2(13.0,170.0)))*2100.0);\n}\n\nvec2 rnd2(vec2 p)\n{\n vec2 r=vec2(0.29,0.37);\n return 1.0-2.0*vec2(rnd1(p),rnd1(p*r));\n}\n\nfloat noise(vec2 p)\n{\n vec2 i=floor(p);\n vec2 f=fract(p);\n vec2 u=f*f*(3.0-2.0*f);\n return mix(\n  mix(\n   dot(rnd2(i+vec2(0.0,0.0)),f-vec2(0.0,0.0)),\n   dot(rnd2(i+vec2(1.0,0.0)),f-vec2(1.0,0.0)),\n   u.x),\n  mix(\n   dot(rnd2(i+vec2(0.0,1.0)),f-vec2(0.0,1.0)),\n   dot(rnd2(i+vec2(1.0,1.0)),f-vec2(1.0,1.0)),\n   u.x),\n  u.y);\n}\n\nfloat scene(vec3 p)\n{\n p=mod(p,5.0)-2.5;\n vec3 sPos=vec3(0.0,0.0,0.0);\n return length(p-sPos)-1.0;\n}\n\nvec3 normalAt(vec3 p)\n{\n float s=scene(p);\n vec2 e=vec2(0.01,0.0);\n return normalize(vec3(s-scene(p-e.xyy),\n                  s-scene(p-e.yxy),\n                  s-scene(p-e.yyx)));\n}\n\nfloat diffuse(vec3 p)\n{\n vec3 lp=vec3(0.0,3.0,-3.0);\n vec3 ld=normalize(lp-p);\n vec3 n=normalAt(p);\n return dot(ld,n);\n}\n\nvec3 pixelColor(vec2 uv)\n{\n vec3 c=vec3(0.0,0.0,0.0);\n vec3 o=vec3(0.0,0.0,-5.0);\n vec3 d=vec3(uv,1.0);\n vec3 p;\n float t=0.0;\n for(int i=0;i<100;i++)\n {\n  p=o+t*d;\n  float s=scene(p);\n  if(s<0.01 || t>50.0)\n  {\n   c=vec3(1.0,0.0,0.0)*diffuse(p);\n   break;\n  }\n  t+=s;\n }\n float td=length(p);\n for(float l=0.0;l>-1.0;l+=0.1)\n {\n  if(l>td)\n  {\n   break;\n  }\n  p=o+l*d;\n  float n=abs(noise(p.xy*0.2+iTime*0.2));\n  float f=1.0-exp(-length(p)*n);\n  c=mix(c,vec3(0.1,0.1,0.5),f/10.0);\n }\n return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n\n    // Output to screen\n    fragColor = vec4(pixelColor(uv),1.0);\n}","name":"Image","description":"","type":"image"}]}