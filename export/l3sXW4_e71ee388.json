{"ver":"0.1","info":{"id":"l3sXW4","date":"1709909354","viewed":110,"name":"VitalRiverFlames VFX","username":"Eboman","description":"Mouse x = FX amount\nMouse y = FX parameter control\nPress key 1 to 8 on keyboard = FX parameter on/off\nFX parameter descriptions in top shader comment","likes":4,"published":1,"flags":16,"usePreview":0,"tags":["vfx","twist","flames"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n/*\n\nCONTROLS_________________:\n\nMouse x = FX amount\nMouse y = FX parameter control\nPress key 1 to 8 on keyboard = FX parameter on/off\n\nFX parameters:\n1 = Flames\n2 = Flames size\n3 = Sky/fog color\n4 = Rotation follows 3D objects on/off\n5 = Zoom in on texture\n6 = Tile texture\n7 = Z cloning speed\n8 = Liquidness\n\n\nCREDITS__________________:\n\nBased on the Double-mod Twisterooney shader by evvvvil  \nhttps://www.shadertoy.com/view/3dsGzS\n\nRemixed into video effect by:\nwww.eboman.com\n\n*/\n\n#define uMacro0 (1.-(iMouse.x/iResolution.x))\n#define uMacro1 ((iMouse.y/iResolution.y) * kp(49) + (0.17 *(1.-kp(49)))) \n#define uMacro2 ((iMouse.y/iResolution.y) * kp(50) + (0.17 *(1.-kp(50))))\n#define uMacro3 (iMouse.y/iResolution.y) * kp(51) + (0. *(1.-kp(51)))\n#define uMacro4 (iMouse.y/iResolution.y) * kp(52) + (0. *(1.-kp(52)))\n#define uMacro5 (iMouse.y/iResolution.y) * kp(53) + (1. *(1.-kp(53)))\n#define uMacro6 (iMouse.y/iResolution.y) * kp(54) + (0. *(1.-kp(54)))\n#define uMacro7 (iMouse.y/iResolution.y) * kp(55) + (0. *(1.-kp(55)))\n#define uMacro8 (iMouse.y/iResolution.y) * kp(56) + (0. *(1.-kp(56)))\n#define PI 3.14159\n\nfloat kp(int k){\n    float kp = texelFetch( iChannel1, ivec2(k,2), 0 ).x;\n    return kp;\n}\n\nvec2 sc,e=vec2(.00035,-.00035);float t,tt; vec3 newPos;\n\nfloat mx(vec3 p){return max(max(p.x,p.y),p.z);}\nfloat bo(vec3 p,vec3 r){return mx(abs(p)-r);}\n\nvec2 fb( vec3 p)\n{\n  vec2 h,t=vec2(.8*bo(p,vec3(1,.5,6)),5);\n  t.x=min(t.x,.8*bo(p-vec3(1,0,0),vec3(.2,1,1.5)));\n  t.x=min(t.x,.8*bo(p+vec3(1,0,0),vec3(.2,1,1.5)));\n  h=vec2(.8*bo(abs(p)-vec3(.25,0,1.7),vec3(.15,1,1.4)),3);\n  t=(t.x<h.x)?t:h;\n  return t;\n}\n\n\nmat2 r2(float r){ return mat2(cos(r),sin(r),-sin(r),cos(r));}\n\nvec2 mp( vec3 p)\n{\n  vec2 t;\n  p.z=mod(p.z+tt*10.,50.)-25.;//clones it along z\n  p.yx*=r2(sin(p.z*0.05+tt)*2.*(10.*(uMacro7)+1.));//rotate it along z\n  newPos=p;\n  newPos.z=mod(p.z+tt*10.,25.)-12.5;\n  float att=clamp(length(p)-1.5,3.,13.);\n  for(int i=0;i<4;i++){\n    newPos=abs(newPos)-vec3(0.5+att*0.3,0.5+att*0.1,2);\n    newPos.yx*=r2(abs(cos(p.z*0.05*float(i))));\n  }\n  t=fb(newPos);\n  t.x=max(t.x,bo(p,vec3(15,15,23)));\n  return t;\n}\n\nvec2 tr( vec3 ro,vec3 rd )\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    vec2 sc1=vec3(ro+rd*t.x).xy;\n    vec2 sc2=mp(ro+rd*t.x);\n    h= mix(sc1+vec2(-10.,0.), sc2, pow(uMacro0, 0.1));\n    if(h.x<.0001||t.x>60.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>60.) t.x=0.;\n  return t;\n}\n\nfloat noise(vec3 p){\n    vec3 ip=floor(p);p-=ip; \n    vec3 s=vec3(7,157,113);\n    vec4 h=vec4(0.,s.yz,s.y+s.z)+dot(ip,s);\n    p=p*p*(3.-2.*p); \n    h=mix(fract(sin(h)*43758.5),fract(sin(h+s.x)*43758.5),p.x);\n    h.xy=mix(h.xz,h.yw,p.y);\n    return mix(h.x,h.y,p.z); \n}\n\nvec3 sky(vec3 rd)\n{\n    vec3 s = mix(vec3(0.,0.,0.), clamp(vec3(.4,.4,.5)-rd.y*.3,0.,1.), uMacro3);\n    return s; \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float mx = iMouse.x/iResolution.x;\n    float my = pow(iMouse.y/iResolution.y, 0.5);\n    \n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n\n  tt=mod(iTime,100.);\n  vec3 ro=vec3(0,0,-10),\n  cw=normalize(vec3(sin(tt)*10.,0,cos(tt)*3.)-ro),\n  cu=normalize(cross(cw,vec3(0,1,0))),\n  cv=normalize(cross(cu,cw)),\n  rd=normalize(mat3(cu,cv,cw)*vec3(uv,.5)),\n  co,fo,ld=normalize(vec3(-.3,0,.3));co=fo=sky(rd);\n  \n  sc=tr(ro,rd)*(7.*(uMacro8)+1.);\n\n  t=sc.x;\n\n  if(t>0.){\n    vec3 po=ro+rd*t,\n    no=normalize(e.xyy*mp(po+e.xyy).x+\n    e.yyx*mp(po+e.yyx).x+\n    e.yxy*mp(po+e.yxy).x+\n    e.xxx*mp(po+e.xxx).x),al=vec3(.5);\n\n    vec3 po1 = po;\n    po1.yx*=r2(sin(po.z*0.05+tt)*2.);\n\n    vec3 po2 = mix(po, po1, 1.-uMacro4);\n\n    uv*=vec2(iResolution.y / iResolution.x, 1);\n    vec4 video=texture(iChannel0, mix\n    (\n      uv+0.5,  \n              fract(po2.xy*0.05*mix(1., 35., pow(uMacro6, 4.))*pow(uMacro5, 2.) +0.5), \n                                                                                       pow(uMacro0, 2.)\n    ));\n\n    if(sc.y<5.) al=vec3(0.,0.,0.);\n\n    //LIGHTING MICRO ENGINE\n    float dif=max(0.,dot(no,ld)),\n    aor=t/50.,\n    ao=exp2(-2.*pow(max(0.,1.-mp(po+no*aor).x/aor),2.)),\n    spo= exp2(5.0+3.0*noise(newPos/vec3(.2,.4,.6))),\n\n    fresnel=pow(1.+dot(no,rd),4.);\n    vec3 sss=vec3(.5)*smoothstep(0.,1.,mp(po+ld*0.4).x/0.4),\n    spec=vec3(2)*pow(max(0.,dot(no,normalize(ld-rd))),spo)*spo/32.;\n\n    //co=mix(video.rgb+al*(0.8*ao+.2)*(dif+sss), sky(rd), 0.);\n\n    co=video.rgb / pow(abs(mix(1., po.z, (uMacro1)*uMacro0)*(1.+(10.*(uMacro1)*uMacro0))), max(0.4, floor(1.-(uMacro2)*uMacro0))) * 1.+(pow((uMacro2)*uMacro0, 2.)/5.);\n\n    //co=clamp(co,0.,1.);\n    //co=mix(co,fo,1.-exp(-.00002*t*t*t));\n    //co = mix(video.rgb, co, uMacro2);\n  }\n\n\n   // Interface\n   \n    vec2 uvif = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n    uvif -= 0.5; \n    uvif /= vec2(iResolution.y / iResolution.x, 1);\n    \n    vec3 fcolif = mix(vec4(co,1), vec4(pow(co,vec3(0.45)),1), uMacro3*pow(uMacro0, 0.1)).rgb;\n    \n    fcolif = mix( fcolif, vec3(0.,1.,1.), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.45))*15.))*(1.-mx) );\n    fcolif = mix( fcolif, vec3(0.,1.,1.), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.45))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.38))*15.))*kp(49)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(49)+0.5,1.0*(kp(49)*-1.5)+0.5,1.0*(kp(49)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.38))*15.-0.3))));\n\n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.31))*15.))*kp(50)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(50)+0.5,1.0*(kp(50)*-1.5)+0.5,1.0*(kp(50)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.31))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.24))*15.))*kp(51)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(51)+0.5,1.0*(kp(51)*-1.5)+0.5,1.0*(kp(51)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.24))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.17))*15.))*kp(52)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(52)+0.5,1.0*(kp(52)*-1.5)+0.5,1.0*(kp(52)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.17))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.10))*15.))*kp(53)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(53)+0.5,1.0*(kp(53)*-1.5)+0.5,1.0*(kp(53)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.10))*15.-0.3))));\n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,0.03))*15.))*kp(54)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(54)+0.5,1.0*(kp(54)*-1.5)+0.5,1.0*(kp(54)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,0.03))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,-0.04))*15.))*kp(55)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(55)+0.5,1.0*(kp(55)*-1.5)+0.5,1.0*(kp(55)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,-0.04))*15.-0.3))));\n        \n    fcolif = mix( fcolif, vec3(1.0*my,0.0,0.0), \n        (1.-smoothstep(0.3,0.31,length(uvif-vec2(-0.84,-0.11))*15.))*kp(56)*my );\n    fcolif = mix( fcolif, vec3(1.0*kp(56)+0.5,1.0*(kp(56)*-1.5)+0.5,1.0*(kp(56)*-1.5)+0.5), \n        (1.0-smoothstep(0.0,0.06,abs(length(uvif-vec2(-0.84,-0.11))*15.-0.3))));\n    \n    // Final output\n  \n    fragColor = vec4(fcolif, 1.);\n}\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}