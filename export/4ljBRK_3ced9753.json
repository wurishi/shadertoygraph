{"ver":"0.1","info":{"id":"4ljBRK","date":"1516499912","viewed":322,"name":"Mouse position memory","username":"Scoo","description":"Learning how to use shadertoy's multipass rendering.\n\nDrag across the screen with mouse / touch input.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["drawing","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Draw based on the state tracked in `Buf A`.\n\nconst vec4 BACKGROUND_COLOR = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec4 GRADIENT_COLOR1 = vec4(0.0, 1.0, 0.0, 1.0);\nconst vec4 GRADIENT_COLOR2 = vec4(1.0, 0.0, 0.0, 1.0);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Sample the state at the current fragment and just draw it to the screen.\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 stateValues = vec4(texture(iChannel0, uv));\n    \n    // Lerp from background -> gradient 1 -> gradient 2.\n    if (stateValues.x < 0.5) {\n        fragColor = mix(BACKGROUND_COLOR, GRADIENT_COLOR1, stateValues.x);\n    } else {\n    \tfragColor = mix(GRADIENT_COLOR1, GRADIENT_COLOR2, stateValues.x);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Track and update state.\n\n// State is stored in the output texture as rgba colors.\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {    \n    if (distance(fragCoord, iMouse.xy) < 5.0) {\n        // Overwrite saved value around where the mouse is.\n        fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    } else {\n        // Decay all other values towards the default state (0.0).\n        vec2 uv = fragCoord.xy / iResolution.xy;\n        vec4 previousColor = texture(iChannel0, uv);\n        \n        float mixFactor = iTimeDelta * 2.0;\n    \tfragColor = mix(previousColor, vec4(0.0), mixFactor);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}