{"ver":"0.1","info":{"id":"WtG3Wd","date":"1580135752","viewed":84,"name":"v0Musicboxv3","username":"jorge2017a1","description":"v0Musicbox","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["v0musicbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nSound text copied from\nhttps://www.shadertoy.com/view/MtyXRW\n*/\n\n\n// --- access to the image of ascii code c\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): texture( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.))\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureLod( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), \\\n//                                                                               log2(length(fwidth(U/16.*iResolution.xy))) )\n  #define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U)\n{ \n    // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);\n    C(111);\n    C(117);\n    C(110);\n    C(100);\n    C(32);\n    C(105);\n    C(110); // message \"Sound in\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) \n    {\n        float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);\n        if(c>=0.1)\n        {\n            fragColor=vec4(c);return;\n        }\n    }\n\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Created by ztri in 2014-08-02 \n//modificado por jorge2017a1\n\n\n//Referencia :\n//https://www.shadertoy.com/view/XdsXD2\n//https://www.shadertoy.com/view/MdfXW2\n\n\n\n\n#define C  32.703\n#define CS 34.648\n#define D  36.708\n#define DS 38.891\n#define E  41.203\n#define F  43.654\n#define FS 46.249\n#define G  48.999\n#define GS 51.913\n#define A  55.0\n#define AS 58.270\n#define B  61.735\n#define _  0.0\n#define X  200.0\n\n\n#define PI 3.14159265358979323846\n#define TAU PI*2.\n\n///------------------------------------------------------------\n///-------------------------------------------------------------------\n//---------------------------Instruments-----------------------------\n//-------------------------------------------------------------------\n\n//Basic waveforms with note and octave input\nfloat sn(float t, float note, float octave)\n{\n\treturn sin(t*note*exp2(octave)*PI);\n}\n\nfloat saw(float t, float note, float octave)\n{\n\treturn fract(t*note*exp2(octave-1.))-0.5;\n}\n\nfloat tri(float t, float note, float octave)\n{\n\treturn (abs(fract(t*note*exp2(octave-1.))-0.5)*2.-0.5)*2.;\n}\n\nfloat sqr(float t, float note, float octave)\n{\n\treturn step(fract(t*note*exp2(octave-1.)), 0.5)-0.5;\n}\n\n//simple frequency modulation (3->1)\nfloat fmsq(float t, float note, float octave)\n{\n\tfloat fm = sn(t,note,octave-1.)*0.0008;\n\tfloat fm2 = sn(t,note,octave+1.)*0.0007;\n\tfloat fm3 = sn(t,note,octave+2.)*0.00055;\n    \n    float fm4 = saw(t,note,octave+2.)*0.00055;\n    \n\treturn sqr(t+fm+fm2+fm3*fm4,note,octave);\n    //return sqr(t+fm+fm2+fm3,note,octave);\n}\n///------------------------------------------------------------\n\nfloat cycle(float time,float duration){\n\tfloat t = duration-mod(time,duration);\n    t = t*(1.0/duration);\n    return clamp(t,0.0,1.0); \n} \n\n\n\nfloat tb303(float time, float note){\n\n    float s = abs(sin(time*2.0)+1.0)*0.2;\n \tfloat a = pow(cycle(time,1.0/4.0),0.3);   \n    \n    //float osc = sin(note*4.40*time);  //original\n    float octave;\n    octave=1.0;\n    float osc = fmsq(time,  note*4.40, octave);\n    \n    \n    osc = pow(osc,pow(1000.0,s+(a*0.5)));\n  \tosc = clamp(osc*a,-1.0,1.0);    \n    return pow(osc,1.0); \n}\n\n\nfloat tb304(float time, float note){\n\n    float s = abs(sin(time*0.3+6.0)+1.0)*0.5;\n \tfloat a = cycle(time,1.0/4.0);   \n    \n    //float osc = sin(note*4.40*time);\n    \n    float octave;\n    octave=1.0;\n    float osc = fmsq(time,  note*4.40, octave);\n    \n    osc = pow(osc,pow(10000.0,clamp(s+(a*0.2),0.001,100.0)));\n  \tosc = clamp(osc*a,-1.0,1.0);    \n    return osc; \n}\n\n\nfloat pad(float time, float note){\n    float osc = smoothstep(-0.1,0.8,sin(note*4.35*time*6.0) * sin(note*4.40*time*4.0) * sin(note*4.40*time*6.0));\n  \tosc = smoothstep(-0.5,1.0,pow(osc,2.0));    \n    return osc; \n}\n\n\n\n\nfloat kick(float time, float note){\n    float a = clamp(1.0-time,0.0,1.0);\n    float osc = sin(pow(a,5.0)*1.0*note);\n    return osc*pow(a,2.0); \n}\n\n\nfloat hat(float time, float note){\n    float n = fract(sin(time * 110.082) * 19871.8972);\n    float a = clamp(1.0-time,0.0,1.0);\n  \tfloat osc = clamp(pow(n,1.0),-1.0,1.0)*pow(a,5.0+note);    \n    return osc; \n}\n\n\nfloat clap(float time, float note){\n    float n = fract(sin(time * 110.082 * note) * 19871.8972);\n    float a = clamp(1.0-time*0.5,0.0,1.0);\n  \tfloat osc = n*pow(a,3.0);\n    \t  osc *= (sin(a*a*note*10.0)*pow(a,3.0));\n    return clamp(osc,-1.0,1.0); \n}\n\n\n\n\n\nfloat pat(float time,float p1,float p2,float p3,float p4,float p5,float p6,float p7,float p8){\n    float t = mod(time,8.0);\n\tif(t>7.0) return p8;    \n\tif(t>6.0) return p7;    \n\tif(t>5.0) return p6;    \n\tif(t>4.0) return p5;    \n\tif(t>3.0) return p4;    \n\tif(t>2.0) return p3;    \n\tif(t>1.0) return p2;    \n\tif(t>0.0) return p1;    \n\treturn 0.0;\n}\n\n\nvec2 mainSound( in int samp,float time)\n{  \n\n    // Bass\n    float trans = pat(time*0.25,0.0,0.0,1.0,1.0,1.0,1.0,2.0,2.0);\n    float note  = pat(time,C,_,G,A,C,_,D,F);    \n    float bass  = tb303(time,note*trans);\n\n    // Pad\n    float trans1 = pat(time*0.25,1.0,1.0,0.5,0.5,1.0,1.0,2.0,2.0);\n    //float note1  = pat(time,C,C,G,G,C,C,A,F);    \n    float note1  = pat(time,A,C,G,G,A,F,A,E);    \n    float pads    = pad(time,note1*trans1);\n\n    \n    // Synth\n    float trans2 = pat(time*0.25,1.0,1.34,1.0,1.0,2.0,2.0,1.0,1.0);\n    float note2  = pat(time*4.0,C,D,G,A,C*2.0,D*2.0,A*2.0,C*2.0);    \n    float synth  = tb304(time*2.0,note2*trans2)*0.2*sin(time);\n\n    \n\t// Drums    \n    float t16   = time*4.0;\n    float hats  = hat( mod(t16,1.0),pat(t16,C,C,_,X,X,A,_,X));\n    float kicks = kick(mod(t16,1.0),pat(t16,C,C,_,_,_,C,_,_));\n    float claps = clap(mod(t16,1.0),pat(t16,_,_,C,_,_,_,C,X));\n\n       \n    // Mix\n    vec2 drums = vec2(0.7,0.5)*hats + vec2(0.6,0.6)*kicks + vec2(0.2,0.5)*claps + vec2(0.1,0.2)*pads;\n    drums = smoothstep(-0.8,0.8,drums);\n    vec2 sound = vec2(0.3,0.3)*drums + vec2(0.7,0.5)*synth + vec2(0.3,0.4)*bass;\n    //vec2 sound = vec2(0.3,0.3)*drums + vec2(0.7,0.5)*synth + vec2(0.3,0.4)*bass+ pads*vec2(0.5,0.3);\n    //vec2 sound = vec2(0.3,0.3)*drums + vec2(0.7,0.5)*synth + pads*vec2(0.5,0.3);\n    //vec2 sound = vec2(0.7,0.5)*synth + pads*vec2(0.5,0.3);\n    //vec2 sound =  pads*vec2(0.5,0.3)+synth*vec2(0.4,0.6);\n    //vec2 sound =  pads*vec2(0.5,0.3);\n    \n    \n    float vol = smoothstep(0.0,3.0,time)*smoothstep(60.0,50.0,time);;\n    return vec2(smoothstep(-1.0,1.0,sound))*vol;\n    \n}\n","name":"Sound","description":"","type":"sound"}]}