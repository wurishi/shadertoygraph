{"ver":"0.1","info":{"id":"lldfzr","date":"1538946094","viewed":69,"name":"Layered House - GM","username":"gradymayo","description":"creating a house with layers","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["layers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//House values\nvec2 hDimensions = vec2(0.5,0.35);\nvec2 hPos = vec2(0.25,0.0);\n\n//Chimney values\nvec2 cDimensions = vec2(0.035,0.065);\nvec2 cPos = vec2(0.6,0.623);\n\n//Window values\nvec2 wDimensions = vec2(0.1,0.1);\nvec2 wPos1 = vec2(0.3,0.2);\nvec2 wPos2 = vec2(0.6,0.2);\n\n//Background and colors\nvec3 BG = vec3(0.0,0.8,1.0);\nvec3 hColor = vec3(0.0,0.0,1.0);\nvec3 cColor = vec3(0.85,0.25,0.0);\nvec3 wColor = vec3(1.0,1.0,1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //aspect ratio and correction\n    float aspectRatio = iResolution.y/iResolution.x;\n    uv.y *= aspectRatio;\n    hPos.y *= aspectRatio;\n    cPos.y *= aspectRatio;\n    wPos1.y *= aspectRatio;\n    wPos2.y *= aspectRatio;\n    \n    vec4 Layer0 = vec4(BG,1.0);\n    \n    //house step functions\n    float hInterpX = step(hPos.x, uv.x) - step(hPos.x + hDimensions.x, uv.x);\n    float hInterpY = step(hPos.y, uv.y) - step(hPos.y + hDimensions.y, uv.y);\n    float hAlpha = hInterpX * hInterpY;\n    vec4 Layer1 = vec4(hColor,hAlpha);\n    \n    //chimney step functions\n    float cInterpX = step(cPos.x, uv.x) - step(cPos.x + cDimensions.x, uv.x);\n    float cInterpY = step(cPos.y, uv.y) - step(cPos.y + cDimensions.y, uv.y);\n    float cAlpha = cInterpX * cInterpY;\n    vec4 Layer2 = vec4(cColor,cAlpha);\n    \n    //window step functions\n    float w1InterpX = step(wPos1.x, uv.x) - step(wPos1.x + wDimensions.x, uv.x);\n    float w1InterpY = step(wPos1.y, uv.y) - step(wPos1.y + wDimensions.y, uv.y);\n    float w2InterpX = step(wPos2.x, uv.x) - step(wPos2.x + wDimensions.x, uv.x);\n    float w2InterpY = step(wPos2.y, uv.y) - step(wPos2.y + wDimensions.y, uv.y);\n    float w1Alpha = w1InterpX * w1InterpY;\n    vec4 Layer3 = vec4(wColor,w1Alpha);\n    float w2Alpha = w2InterpX * w2InterpY;\n    vec4 Layer4 = vec4(wColor,w2Alpha);\n    \n    //Combine layers\n    vec4 composite = mix(Layer0, Layer1, Layer1.a);\n    composite = mix(composite, Layer2, Layer2.a);\n    composite = mix(composite, Layer3, Layer3.a);\n    composite = mix(composite, Layer4, Layer4.a);\n    \n    fragColor = composite;\n    \n}","name":"Image","description":"","type":"image"}]}