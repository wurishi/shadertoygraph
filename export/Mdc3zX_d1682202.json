{"ver":"0.1","info":{"id":"Mdc3zX","date":"1451272750","viewed":704,"name":"facemorpher","username":"nshelton","description":"displacement map with fbm displacement","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["2d","displacement","fbm","camera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat noise( in vec2 x )\n\n{\n\treturn texture(iChannel1, x ).r;\n}\n\nfloat fbm4( vec2 p )\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f/0.9375;\n}\n\nfloat fbm6( vec2 p )\n{\n    float f = 0.0;\n    f += 0.500000*(0.5+0.5*noise( p )); p = m*p*2.02;\n    f += 0.250000*(0.5+0.5*noise( p )); p = m*p*2.03;\n    f += 0.125000*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.062500*(0.5+0.5*noise( p )); p = m*p*2.04;\n    f += 0.031250*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.015625*(0.5+0.5*noise( p ));\n    return f/0.96875;\n}\n\n\n\nvec3 luma(vec3 color) {\n  return vec3(dot(color, vec3(0.299, 0.587, 0.114)));\n}\nvec3 fetch(int i, int j, vec2 fragCoord) {\n    vec2 coord = fragCoord.xy * 0.6  + vec2(180., 70.);\n    \n    coord /= iResolution.xy;\n    float rho = 2. ;// abs(sin(length(coord - 0.5) * 10.) * 3.) +3.;\n    \n    return (texture(iChannel0,coord + rho * vec2(i-1,j-1)/iResolution.xy).rgb);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 c[9];\n\tfor (int i=0; i < 3; ++i)\n\t{\n\t\tfor (int j=0; j < 3; ++j)\n\t\t{\n            vec2 x = 10. * fragCoord / iResolution.x  ;\n            \n            float dx =  sin(x.y); // pow(sin(x.y), 2.)+ sin(x.y/2.) ;;\n            float dy = cos(x.x); //pow(sin(x.x), 2.)+ sin(x.y/2.) ;; //0. ;// sin(x.x * 2.) * 0.1 + cos(x.x * 1.) * 0.7;\n \t\t\t//dy *=0.1;\n            dy = fbm4(x/400. * (3.+ sin(iTime)) ) * length(x - 0.5);\n            vec2 d = vec2(dx, dy) * 0.1 *  iResolution.x ;\n\n            vec2 loc = fragCoord +  d; //vec2(dx, dy)/20.;\n\t\t\tc[3*i+j] = fetch(i, j, loc) ;\n\t\t} \n\t}\n    \n\t\n\tvec3 Lx = 8.0*(c[7]-c[1]) + c[6] + c[8] - c[2] - c[0];\n\tvec3 Ly = 8.0*(c[3]-c[5]) + c[6] + c[0] - c[2] - c[8];\n\tvec3 G =   sqrt(Lx*Lx+Ly*Ly );\n\t\n\tfragColor = vec4( luma(c[4]), 1.0);\n}","name":"Image","description":"","type":"image"}]}