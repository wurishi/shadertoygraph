{"ver":"0.1","info":{"id":"wdjczh","date":"1586129846","viewed":67,"name":"Julia/Mandelbrot Fractal","username":"bstrong43","description":"Graphics Midterm","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getMandelValue(vec2 coord) {\n  vec2 c = vec2(coord.x, coord.y);\n  vec2 z = vec2(0.0, 0.0);\n\n  for (float iteration = 0.0; iteration < 512.0; iteration++) {\n\n    float real = z.x * z.x - z.y * z.y + c.x;\n    float imaginary = 2.0 * z.x * z.y + c.y;\n\n    z.x = real;\n    z.y = imaginary;\n\n    if (z.x * z.x + z.y * z.y > 4.0) {\n      return iteration;\n    }\n  }\n\n  return 0.0;\n}\n\nfloat getJuliaValue(vec2 coord, vec2 offset) {\n  vec2 c = vec2(offset.x, offset.y);\n  vec2 z = vec2(coord.x, coord.y);\n  for (float iteration = 0.0; iteration < 512.0; iteration++) {\n\n    float real = z.x * z.x - z.y * z.y + c.x;\n    float imaginary = 2.0 * z.x * z.y + c.y;\n\n    z.x = real;\n    z.y = imaginary;\n\n    if (z.x * z.x + z.y * z.y > 4.0) {\n      return iteration;\n    }\n  }\n\n  return 0.0;\n}\n\nvec2 fragToXY(vec2 fragCoord) {\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  float aspectRatio = iResolution.x / iResolution.y;\n\n  vec2 gridPos = (uv - 0.5) * 2.0;\n  gridPos.x *= aspectRatio;\n\n  return gridPos;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 coord    = fragToXY(fragCoord);\n  vec2 inputPos = iMouse.xy;\n    \n  vec2 juliaInput = fragToXY(inputPos);\n\n  float juliaValue = getJuliaValue(coord, juliaInput);\n  float mandelbrotValue = getMandelValue(coord);\n    \n  float juliaColor      = 5.0 * juliaValue / 512.0;\n  float mandelbrotColor = 5.0 * mandelbrotValue / 512.0;\n\n  float color = mandelbrotColor + juliaColor;\n  fragColor = vec4(color, color, color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}