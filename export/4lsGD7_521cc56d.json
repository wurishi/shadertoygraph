{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec2 rotate(in vec2 p, in float t)\n{\n\treturn p * cos(-t) + vec2(p.y, -p.x) * sin(-t);\n}\n\nfloat dePig(in vec3 p)\n{   \n    p.y +=   0.3 * smoothstep( 0.2, 0.0, length(abs(p.zx) - vec2(0.4, 0.4))) * (1.0 - step(0.0, p.y));\n    p.y +=  -0.2 * smoothstep(0.15, 0.0, length(abs(p.zx - vec2(0.4,0.0)) - vec2(0.0, 0.4))) * step(0.0, p.y);    \n    p.z += -0.15 * smoothstep( 0.4, 0.3, length(p.yx)) * step(0.0, p.z);\n    p.z +=  0.15 * smoothstep( 0.1, 0.0, length(abs(p.yx) - vec2(0.0, 0.15))) * step(0.0, p.z);\n    p.z +=   0.1 * smoothstep( 0.1, 0.0, length(abs(p.yx - vec2(0.4,0.0)) - vec2(0.0, 0.3))) * step(0.0, p.z);\n    p.z +=  0.15 * smoothstep( 0.1, 0.0, length(p.yx - vec2(0.35,0.0))) * (1.0 - step(0.0, p.z));\n    return 0.6 * (length(p) - 1.0);\n}\n\nfloat map1(in vec3 p)\n{   \n    p.z -= iTime*2.0;\n    p.xy = rotate(p.xy, p.z * 0.1);\n    p.xy = rotate(p.xy, iTime * 0.2);\n    p.z = mod(p.z, 4.0) - 2.0;\n    p.xy = rotate(p.xy, iTime * 0.2);\n    p.xy = abs(p.xy) - vec2(2.0);\n    p.xy = rotate(p.xy, iTime * -0.5);\n    return dePig(p);\n}\n\nfloat map2(in vec3 p)\n{\n \treturn length(p - vec3(0.0, 0.0, -50.0)) - 20.0;\n}\n\nfloat map(in vec3 p)\n{\n    return min(map1(p), map2(p));\n}\n\nvec3 calcNormal(in vec3 p)\n{\n\tconst vec2 e = vec2(0.0001, 0.0);\n\treturn normalize(vec3(\n\t\tmap(p + e.xyy) - map(p - e.xyy),\n\t\tmap(p + e.yxy) - map(p - e.yxy),\n\t\tmap(p + e.yyx) - map(p - e.yyx)));\n}\n\nfloat march(in vec3 ro, in vec3 rd)\n{\n\tconst float maxd = 50.0;\n\tconst float precis = 0.001;\n    float h = precis * 2.0;\n    float t = 0.0;\n\tfloat res = -1.0;\n    for(int i = 0; i <256; i++)\n    {\n        if(h < precis || t > maxd) break;\n\t    h = map(ro + rd * t);\n        t += h;\n    }\n    if(t < maxd) res = t;\n    return res;\n}\n\nvec3 transform(in vec3 p)\n{\n    p.yz = rotate(p.yz, cos(iTime * 0.05)*0.3);\n    p.zx = rotate(p.zx, sin(iTime * 0.1)*0.2);\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\tvec3 col = vec3(0.0,0.0,0.2)*(1.0+p.y);\n   \tvec3 rd = normalize(vec3(p, -1.8));\n\tvec3 ro = vec3(0.0, 0.0, 5.0);\n    vec3 li = normalize(vec3(0.5, 0.8, 3.0));\n    ro = transform(ro);\n\trd = transform(rd);\n    float t = march(ro, rd);\n    if(t > -0.001)\n    {\n        vec3 pos = ro + t * rd;\n        vec3 n = calcNormal(pos);\n\t\tfloat dif = clamp((dot(n, li) + 0.5) * 0.7, 0.3, 1.0);\n        float dep = exp(-0.001 * pos.z * pos.z);\n        if (map1(pos) < map2(pos))\n        {\n            col = vec3(0.8, 0.5, 0.5) * dif * dep;\n        } else {\n            col = vec3(1.0, 0.9, 0.2) * dif * dif * dif;\n        }\n\t}\n   \tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lsGD7","date":"1422542377","viewed":324,"name":"Pigs attack","username":"gaz","description":"3d","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""}}