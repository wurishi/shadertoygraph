{"ver":"0.1","info":{"id":"NlGBRd","date":"1665001210","viewed":77,"name":"Smiley tut - The Art of Code","username":"eklavya_1","description":"Smiley face from Shadertoy tutorial by \"The Art of Code\" - https://www.youtube.com/watch?v=u5HAYVHsasc","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","beginner","smiley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    return c;   \n}\n\nfloat Smiley (vec2 uv, vec2 p, float size){\n    \n    uv -= p; //translaten coordinate system\n    uv/= size; // scaling cordinate system\n    float mask = Circle(uv, vec2(0.), .4, .01);\n    mask -= Circle(uv, vec2(-.13, .2), .07, .01);\n    mask -= Circle(uv, vec2(.13, .2), .07, .01);\n    \n    float mouth = Circle(uv, vec2(0., 0.), .3, .02);\n    mouth -= Circle(uv, vec2(0., 0.1), .3, .02);\n    \n    mask -= mouth;\n    return mask;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n \n    vec3 col = vec3(0.);\n    \n    float mask = Smiley(uv, vec2 (0.), 0.8);\n    col = vec3 (1., 1., 0.) * mask;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}