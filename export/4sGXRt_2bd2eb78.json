{"ver":"0.1","info":{"id":"4sGXRt","date":"1465894081","viewed":173,"name":"Automatic Julia Fractal","username":"Uriopass","description":"This is a julia fractal visualisator. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","fractal","julia","iteration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float time = iTime;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    // TO control with mouse, uncomment this line\n\t//vec2 c = vec2(-1.+2.*mouse.x, -1.+2.*mouse.y);\n\t// and comment the next line :\n    vec2 c = cos(time)*vec2(cos(time*2.), sin(time));\n\tvec2 z = 3.*(uv-.5);\n\tfloat iter = 0.0;\n\tconst int max_iter = 150;\n\tfor(int i = 0 ; i < max_iter ; i++)\n\t{\n        z = mat2(z, -z.y, z.x)*z + c;\n\t\tif(dot(z, z) > 4.0)\n\t\t{\n\t\t\titer = float(i);\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tconst float max2 = float(max_iter);\n    fragColor = vec4(0);\n\tif(iter <= max2)\n\t\tfragColor += sqrt(iter/max2)*vec4(0, .3, iter, 1);\n}","name":"Image","description":"","type":"image"}]}