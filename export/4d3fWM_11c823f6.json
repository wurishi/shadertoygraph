{"ver":"0.1","info":{"id":"4d3fWM","date":"1525289108","viewed":104,"name":"sine wave","username":"yasirtug","description":"{}","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define invFrequency 80.0\n#define amplitude 60.0\n#define speed 100.0\n#define pi 3.1415\n#define space 10.0\n#define red vec3(1.0,0.0,0.0)\n#define green vec3(0.0,1.0,0.0)\n#define blue vec3(0.0,0.0,1.0)\n\nfloat plotx(float y, vec2 coord, float thickness)\n{\t\n   \tfloat diff = abs(coord.y - y);\n    return 1.0 - smoothstep(thickness * 0.5, thickness, diff);\n}\nfloat ploty(float x, vec2 coord, float thickness)\n{\t\n   \tfloat diff = abs(coord.x - x);\n    return 1.0 - smoothstep(thickness - thickness/2.0, thickness, diff);\n}\nfloat plot2(vec2 xy, vec2 coord)\n{\n    float diff = length(xy - coord);\n    return 1.0 - smoothstep(1.0, 3.0, diff);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 col;\n   \t\n    fragCoord.x -= iResolution.x - (amplitude + space);\n    fragCoord.y -= iResolution.y / 2.0;\n    \n   \tfloat floatingX = fragCoord.x + (amplitude + space);\n    float modi = mod(iTime * speed, invFrequency * pi * 2.0);\n    float degree = modi / invFrequency;\n    floatingX += modi;\n    //col += green * plotx(cos(floatingX/invFrequency)*amplitude, fragCoord,1.0);\n    \n    float lenFrag = length(fragCoord);\n    \n    //circle\n    col += blue * smoothstep(amplitude - 2.0, amplitude, lenFrag)\n        - blue * smoothstep(amplitude, amplitude + 2.0, lenFrag);\n    \n    vec2 whiteDot = vec2(cos(degree), sin(degree)) * amplitude;\n   \tvec2 redDot = vec2(-(amplitude + space), whiteDot.y);\n    //-invFrequency * pi * 2.0\n    col += plot2(whiteDot, fragCoord);\n    col += plot2(redDot, fragCoord);\n    col += plot2(vec2(0.0), fragCoord);\n\t\n    //sine wave\n    if(fragCoord.x < -(amplitude + space))\n    {\n    \tcol += red * plotx(sin(floatingX / invFrequency) * amplitude, fragCoord, 3.4);\n    }\n    //white line\n    else if(fragCoord.x < whiteDot.x)\n    {\n        col += plotx(whiteDot.y,fragCoord, 1.4);\n    }\n    //inner circle line\n    mat2 rotator = mat2(cos(degree),sin(degree),\n                        -sin(degree),cos(degree));\n    if(length(fragCoord) < amplitude)\n    {\n        fragCoord *= rotator;\n        if(fragCoord.x > 0.5)\n        col += plotx(0.0, fragCoord, 1.4);\n    }\n    //seperator line\n    if(abs(fragCoord.y) < amplitude + space * 2.0)\n    col += vec3(1.0) * ploty(-(amplitude + space),fragCoord,1.0);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}