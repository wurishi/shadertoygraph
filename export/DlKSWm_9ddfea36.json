{"ver":"0.1","info":{"id":"DlKSWm","date":"1686139792","viewed":49,"name":"Beakerwimp's First Ever Shader","username":"beakerwimp","description":"Beakerwimp's First Ever Shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    // center coordinates\n    uv = (uv - 0.5) * 2.0;\n    // eliminate canvas stretching distortion\n    uv.x *= iResolution.x / iResolution.y;\n    // store the original distance to center of canvas\n    vec2 uv0 = uv;\n    // repeat the pattern\n    uv = fract(uv * 1.5) - 0.5;\n    \n    // create concentric circles\n    float s = 11.5; // higher = more circles\n    float d = length(uv);\n    d = abs(sin(d * s + iTime) / s);\n    d = smoothstep(0.0, 0.07, d);\n\n    // Output to screen\n    fragColor = vec4(d, d, d, 1.0);\n}","name":"Image","description":"","type":"image"}]}