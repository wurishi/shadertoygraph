{"ver":"0.1","info":{"id":"mscSDB","date":"1680345354","viewed":116,"name":"GR Schwarzschild black hole","username":"aroussel","description":"Scientifically accurate raytraced gravitational lensing by a static black hole","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["blackhole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nfloat checkerAA(vec2 p) {\n\tvec2 q = sin(PI*p*vec2(20,10)); \n    float m = q.x*q.y; \n    return .5 - m/fwidth(m);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    vec2 uv = (2.*fragCoord - iResolution.xy ) / iResolution.x;\n    float hfov = 2.3;\n    float dist = 5.;  \n\n    vec3 vel = normalize(vec3( 1, -uv*tan(hfov/2.) ));\n\n    vec3 pos = vec3(-dist,0.,0.);\n    float r = length(pos);\n    float dtau = 0.2;\n\n    while(r < dist*2. && r > 1.){\n    \tfloat ddtau = dtau*r;\n        pos += vel*ddtau;\n        r = length(pos);\n        vec3 er = pos/r;\n        vec3 c = cross(vel,er);\n        vel -= ddtau*dot(c,c)*er/r/r;\n    }\n\n    float phi1 = 1.-atan(vel.y,vel.x)/(2.*PI);\n    float theta1 = 1.-atan(length(vel.xy),vel.z)/PI;\n    vec2 UV = vec2(phi1,theta1)+vec2(iTime*0.01,0.);\n    vec3 rgb = vec3(checkerAA(UV*180./PI/30.));\n    rgb *= float(r>1.);\n\n    fragColor = vec4(rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}