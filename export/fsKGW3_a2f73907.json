{"ver":"0.1","info":{"id":"fsKGW3","date":"1632319658","viewed":72,"name":"waves109012","username":"OscarSaharoy","description":"its wavy","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wavy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat hash11(float p) {\n\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n\nvec2 hash( vec2 p ) // replace this by something better\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nfloat noise( in vec2 p )\n{\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n\tvec2  i = floor( p + (p.x+p.y)*K1 );\n    vec2  a = p - i + (i.x+i.y)*K2;\n    float m = step(a.y,a.x); \n    vec2  o = vec2(m,1.0-m);\n    vec2  b = a - o + K2;\n\tvec2  c = a - 1.0 + 2.0*K2;\n    vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot( n, vec3(70.0) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    \n    float te = 0.0;\n    \n    for( int i = -5; i < 35; ++i ) {\n    \n        float height = float(i)/40.0;\n\n        vec2  auv = vec2( uv.x+height*1.7, height*1.8 ); \n        float s = height + noise((auv + iTime*0.032)*5.0) * 0.02 + noise(auv + iTime*0.05) * 0.02;\n        float d = (uv.y - s) * 100.0;\n\n        float e = (10.3*d / ( 0.2 + abs(d) ) + d) * pow(4.0, -abs(d)) * 0.1;\n        te += e;\n    }\n    \n    vec3 c = vec3( 0.64, 0.65, 0.6 ) + te;\n    fragColor += vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}