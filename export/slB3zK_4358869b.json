{"ver":"0.1","info":{"id":"slB3zK","date":"1631001495","viewed":103,"name":"learn(13)","username":"saltlemon","description":"raymarch\nlearn from https://www.youtube.com/channel/UCcAlTqd9zID6aNX3TzwxJXg The Art of Code","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["light3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SAFE_DIST 0.001\nstruct ray{\n    vec3 o,d;\n};\nfloat smax(float a,float b,float k){\n    float h=clamp((b-a)/k+0.5,0.,1.);\n\treturn mix(a,b,h)+h*(1.-h)*k*.5;   \n}\nfloat smin(float a,float b,float k){\n    float h=clamp((b-a)/k+0.5,0.,1.);\n\treturn mix(b,a,h)-h*(1.-h)*k*.5;   \n}\nray getRay(vec2 uv,vec3 camPos,vec3 lookat,float zoom){\n    ray a;\n    a.o=camPos;\n    vec3 f=normalize(lookat-a.o);\n    vec3 r=cross(vec3(0.,1.,0.),f);\n    vec3 u=cross(f,r);\n    vec3 c=a.o+zoom*f;\n    vec3 i=c+uv.x*r+uv.y*u;\n    a.d=normalize(i-a.o);\n    return a;\n}\nmat2 rot(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat getDist(vec3 p){\n    float dPlane=p.y;\n    float c=cos(3.14/5.),s=sqrt(0.75-c*c);\n    vec3 n=vec3(-0.5,-c,s);\n    p=abs(p);\n    p-=2.*min(0.,dot(p,n))*n;\n    float d=p.z-1.;\n    \n    p=abs(p);\n    p-=2.*min(0.,dot(p,n))*n;\n    d=p.z-1.;\n    \n\tp=abs(p);\n    p-=2.*min(0.,dot(p,n))*n;\n    d=p.z-1.;\n    \n    return d;//min(dBox*.6,dPlane);\n}\nvec3 getNormal(vec3 p){\n \tfloat d=getDist(p);\n    vec2 e=vec2(.01,0.);\n    vec3 n=normalize(vec3(\n        d-getDist(p-e.xyy),\n        d-getDist(p-e.yxy),\n        d-getDist(p-e.yyx)\n    ));\n        return normalize(n);\n}\n\nfloat RayMarch(vec3 ro,vec3 rd,float side){\n\tfloat d_o=0.;\n    for(int i=0;i<MAX_STEPS;i++){\n     \tvec3 p=ro+d_o*rd;\n        float dS=getDist(p)*side;\n        d_o+=dS;\n        if(d_o>MAX_DIST||abs(dS)<SAFE_DIST) break;\n    }\n    \n    return d_o;\n}\nvec3 getLight(vec3 p,vec3 dir){\n    vec3 n=getNormal(p);\n    vec3 reflectDir=reflect(dir,n);\n    float IOR=1.45;//折射率\n    vec3 refractDir=refract(dir,n,1./IOR);\n    vec3 col=texture(iChannel0,refractDir).rgb;\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n\tuv.x*=iResolution.x/iResolution.y;\n    \n\t\n    vec2 m=iMouse.xy/iResolution.xy;\n    vec3 camPos=vec3(0,3,-3);\n    camPos.yz*=rot(-m.y*3.14+.1);\n    camPos.xz*=rot(-m.x*6.28);\n    vec3 lookat=vec3(0,0,0);\n    ray myray=getRay(uv,camPos,lookat,1.3);\n    vec3 col = texture(iChannel0,myray.d).rgb;\n   \tvec3 dif;\n    float d=RayMarch(myray.o,myray.d,1.0);\n    if(d<MAX_DIST){\n        vec3 p=myray.o+d*myray.d;\n        vec3 dir=myray.d;\n        vec3 n=getNormal(p);\n        vec3 reflectDir=reflect(dir,n);\n        float IOR=1.45;//折射率\n        vec3 refractDir=refract(dir,n,1./IOR);\n        \n        ray myray2;\n        myray2.o=p-n*SAFE_DIST*3.;\n        myray2.d=refractDir;\n        float d2=RayMarch(myray2.o,myray2.d,-1.0);\n        \n        vec3 p2=myray2.o+d2*myray2.d;\n        vec3 n2=-getNormal(p2);\n        vec3 dirout;\n        float umm=0.01;\n        dirout=refract(myray2.d,n2,IOR-umm);\n        if(dot(dirout,dirout)==0.)dirout=reflect(myray2.d,n2);\n        col.r=texture(iChannel0,dirout).r;\n        \n        dirout=refract(myray2.d,n2,IOR);\n        if(dot(dirout,dirout)==0.)dirout=reflect(myray2.d,n2);\n        col.g=texture(iChannel0,dirout).g;\n        \n        dirout=refract(myray2.d,n2,IOR+umm);\n        if(dot(dirout,dirout)==0.)dirout=reflect(myray2.d,n2);\n        col.b=texture(iChannel0,dirout).b;\n        \n        float dens=0.1;\n        float optDist=exp(-d2*dens);\n        col=col*optDist;//*vec3(1.0,.05,.2);\n        //col=n*0.5+0.5;\n        \n        float flag=pow(1.+dot(dir,n),5.);\n        col=mix(col,texture(iChannel0,reflectDir).rgb,flag);\n        //col=vec3(flag);\n    }\n    //col=pow(col,vec3(.4545));\n    //col=getNormal(p);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}