{"ver":"0.1","info":{"id":"M3Byzt","date":"1727566595","viewed":20,"name":"Ouah","username":"alex_","description":"Exploring","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["textures"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Plot a line on Y using a value between 0.0-1.0\nfloat plot(vec2 st) {    \n    //return smoothstep(0.02, 0.0, abs(st.y - st.x));\n    \n    //float line2 = smoothstep(0.002, 0., abs(mod(st.y, 0.1000) - mod(-st.x, 0.1000)));\n    //return smoothstep(0.001, 0., abs(mod(st.y, 0.1000) - mod(st.x, 0.1000))) + line2;\n    \n    \n    return  smoothstep( 0.01, 0.002, abs(mod(st.y, 0.2) - mod(pow(st.x, 3.) + abs(cos(iTime / 10.)/4.), 0.1)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    // Time varying pixel color\n    // vec3 col = vec3(cos(smoothstep(0., 0.03, uv.x)), 0.5, 0.5);\n    \n    \n    float plotValue = plot(uv);\n    \n    \n    // vec3 line = (1. - plot(uv)) * vec3(abs(cos(iTime * 4. + uv.x) + 0.7) * 3., (cos(0.4 + uv.y + iTime) + 0.3) * 3., 0.8);\n    vec3 line = (1. - plotValue) * vec3(0.7, 0.9, 0.7);\n    \n    \n    vec3 col = line;\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}