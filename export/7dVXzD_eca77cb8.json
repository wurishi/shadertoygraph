{"ver":"0.1","info":{"id":"7dVXzD","date":"1634376833","viewed":369,"name":"Fab16 #inktober2021 \"compass\"","username":"FabriceNeyret2","description":"[url]https://inktober.com/[/url]\n#inktober2021 themes: [img]https://i.imgur.com/QjhAdpd.png[/img]\n\nmouse controls camera\nsee reference at bottom","likes":19,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","glints","reproduction","inktober2021"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3zn","filepath":"/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","previewfilepath":"/media/ap/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// --- font utils from https://www.shadertoy.com/view/llySRh ---------------------\n\nvec4 char(vec2 p, int c) {\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel1, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx, dFdy );\n}\nvec4 pInt(vec2 p, float n) {  \n    vec4 v = vec4(0);\n    for (int i = int(n); i>0; i/=10, p.x += .5 )\n        v += char(p, 48+ i%10 );\n    return v;\n}\n// ------------------------------------------------------------------------ \n \n#define rot(a)  mat2(cos(a+vec4(0,11,33,0)))                       // rotation\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.,y,a,c,n;                                            // c,n: hit object id \n    vec3  R = iResolution, C, N,\n          D = normalize(vec3(U+U, -3.5*R.y) - R),                  // ray direction\n          p = 5./R, q,                                             // marching point along ray \n          M = iMouse.z > 0. ? iMouse.xyz/R -.5: vec3(1,0,0),       // mouse camera rot\n          A = vec3(.7,.3,0)*cos(iTime+vec3(0,11,0)) - vec3(-.5,0,0);\n    M = vec3(2,.5,0)-6.*M;\n    for (O=vec4(1); O.x > 0. && t > .01; O-=.01)\n        q = p, \n        q.yz *= rot(M.y),                                          // compass rotations\n        q.xz *= rot(M.x), \n        t = c = max( length(q)-1., q.y - .3 ), C=q,                // compass shape\n        t = min(t, n = length(q/vec3(1,30,1))-.02), \n        q.yz *= rot(A.y),                                          // box rotations\n        q.xz *= rot(A.x), \n        t = min( t, max( abs( length(q)-1.2)-.1  , -length(q.yz-vec2(1,-1))+1.1 ) ), // box shape\n       \n        p += .5*t*D;                                               // step forward = dist to obj\n\n    if(O.a<0.) O.rgb+= .5;                                         // background\n    else\n                                            // --- texturing & shading -----------------\n    if (t==n) O *= vec4(.2,0,0,1);                                 // needle\n    else if (t==c)                                                 // --- compass\n              y = abs(C.y), a = mod(atan(C.z,-C.x),6.283), c = floor(a*12./6.283+.2)*30.,\n              O *= length(C)>.99 \n                  ? y < .2\n                        ? t = cos( a *( y < .05 ? 72. : y < .1 ? 12. : 8.) ),  // ticks\n                           clamp(.5 + .5*(t- ( y < .05 ? .5  : y < .1 ? .98 : .99 ))/fwidth(t), 0.,1.)\n                        + pInt(vec2((a-c*6.283/360.)*8.,C.y*10.-1.),c).x       // numbers\n                        : ( c = floor(a*8./6.283+.2),                          // letters\n                            char( vec2( (a-c*6.283/8.)*5.+.5 , C.y*6.-1.1 ) * (mod(c,2.)<1.?1.:1.3) ,\n                                  64+int[](14,14,5,19,19,19,23,14)[int(c)]).x \n                          + char( vec2( (a-c*6.283/8.)*5.+.1 , C.y*6.-1.1 ) * 1.3 , // opt second letter\n                                  64+int[](-32,5,-32,5,-32,23,-32,23)[int(c)]).x \n                          )\n                  : .5* smoothstep( 50./R.y,0., abs(fract(5.*length(C))-.5))   // compass center pattern\n                      * (.5+.5*sin(72.*a) );\n    else                                                           // --- box\n         N = -normalize(q + texture(iChannel2,q*5.).rgb),\n         N.xz *= rot(-A.x),   \n         N.yz *= rot(-A.y),                                        // back to camera frame\n         N.xz *= rot(-M.x),   \n         N.yz *= rot(-M.y),                                        \n      // O *= .3 + pow( max(0., dot(normalize(D+vec3(0,-.95,.3)),N)), 6.); // BUG on windows !\n         O *= .3 + pow( vec4(max(0., dot(normalize(D+vec3(0,-.95,.3)),N))), vec4(6)); // glints\n                             // -N.y\n    q = p, p = 5./R; a = dot(p,D), c = dot(p,p)-1.2, t = a*a-c;    // --- RT box glass\n    p += (-a-sqrt(t)) * D;\n    if (t>0. && p.z > q.z )                                        // reflect\n              O += .5*texture(iChannel0, reflect(D,-normalize(p))).r*vec4(.8,.9,1,1),\n              p.yz *= rot(M.y),                                    // camera rotations\n              p.xz *= rot(M.x), \n              p.yz *= rot(A.y),                                    // box rotations\n              p.xz *= rot(A.x), \n              a = atan(p.z,p.x),                                   // ticks on box glass\n              O.rg +=  abs(p.y)<.5 ? t = cos(8.*a), clamp(.5 + .5*(t-.995)/fwidth(t),0.,1.) : 0.;\n}\n","name":"Image","description":"","type":"image"}]}