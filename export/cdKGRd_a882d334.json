{"ver":"0.1","info":{"id":"cdKGRd","date":"1678957125","viewed":105,"name":"blend Colors gpt","username":"tsengkweiming","description":"color blending based on uvs","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colorblending"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 u_positions[5] = vec2[5](vec2(0,0), vec2(1,0), vec2(0,1), vec2(1,1),vec2(0.5,0.5));\nvec4 u_colors[5] = vec4[5](vec4(0,0,0,1), vec4(1,0,0,1), vec4(0,1,0,1), vec4(1,1,0,1),vec4(0,0,1,1));\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) \n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 blendedColor = vec4(0.0);\n    float totalWeight = 0.0;\n\n    for (int i = 0; i < 5; i++) {\n        if (u_colors[i].a == 0.0) continue;\n\n        float distance = length(u_positions[i] - uv);\n        float weight = 1.0 / (distance+0.001);\n        blendedColor += u_colors[i] * weight;\n        //float weight = 1.0 - (distance / 1.0);\n        //blendedColor = mix(blendedColor, u_colors[i], weight);\n        totalWeight += weight;\n    }\n    \n    blendedColor /= totalWeight;\n    \n    fragColor = blendedColor;\n}","name":"Image","description":"","type":"image"}]}