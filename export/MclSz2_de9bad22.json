{"ver":"0.1","info":{"id":"MclSz2","date":"1705543897","viewed":118,"name":"DesertMountain","username":"banni","description":"Using a texture to move fog around in the screen space","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["raymarched","fakefog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsd3zs","filepath":"https://soundcloud.com/jroomy/wind-sound","previewfilepath":"https://soundcloud.com/jroomy/wind-sound","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBoxFrame( vec3 p, vec3 b, float e )\n{\n       p = abs(p  )-b;\n  vec3 q = abs(p+e)-e;\n  return min(min(\n      length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n      length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n      length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n}\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\nfloat sdPlane(vec3 p, float h)\n{\n    return p.y - h;\n}\nfloat sdSphere(vec3 p, float r)\n{\n    return length(p) - r;\n}\nfloat map(vec3 p)\n{\n    vec3 q = p;\n    float angle = iTime;\n    //q.xz *= mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    q.xz = mod(q.xz, 16.) - 8.;\n    float d = sdBoxFrame(q, vec3(2,3,7), .5);\n    d = min(d, sdPlane(p, -1.3));\n    return d;\n}\n\nvec3 calcNormal(vec3 p)\n{\n    vec2 e = vec2(.001, .0);\n    \n    return normalize(\n        vec3(\n            map(p + e.xyy) - map(p - e.xyy),\n            map(p + e.yxy) - map(p - e.yxy),\n            map(p + e.yyx) - map(p - e.yyx)\n        )\n    );\n}\n\nfloat softShadow(vec3 p, vec3 light_pos)\n{\n    float o = .1;\n    vec3 ro = p;\n    vec3 rd = normalize(light_pos - ro);\n    float res = 1.;\n    float t = .1;\n    for(int i = 0; i < 100; i++)\n    {\n        vec3 p2 = ro + rd * t;\n        \n        float d = map(p2);\n        res = min(res, d/t);\n        if (d < .001)\n        {\n            return o;\n        }\n        t += d;\n    }\n    \n    return min(1., o + res);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    vec3 vtex = texture(iChannel1, vec3(uv,iTime)).xxx;\n    vec3 col = vec3(0);\n    vec3 ro = vec3(0,0,-1) + vec3(0,0,iTime * 22.);\n    vec3 rd = normalize(vec3(uv, 2.));\n    \n    float t = 0.1;\n    \n    for(t = .1; t < 200.;)\n    {\n        vec3 p = ro + rd * t;\n        p.x += (t * t) * .0003;\n        p.y -= (t * t) * .0009;\n        float d = map(p);\n        if (d < .001)\n        {\n            vec3 sun_pos = vec3(1000,500, -400);\n            vec3 sun_dir = normalize(sun_pos - p);\n            vec3 sun_int = vec3(2,2,.3) * .3;\n            vec3 n = calcNormal(p);\n            float shadow = softShadow(p, sun_pos);\n            float diff = max(0., dot(n,sun_dir) * .5 + .5);\n            col = diff * sun_int * shadow;\n            //col = abs(n.zxz);\n            break;\n        }\n        t += d;\n    }\n    float ep = -0.0001;\n    float ep2 = texture(iChannel0, uv * .02 + vec2(iTime * .1, sin(iTime) * .003)).y;\n    ep2 += texture(iChannel1, vec3((uv + iTime * .02) * .03, t * .001 + iTime * .2)).x;\n    ep = mix(-0.0001, -0.0002, ep2);\n    col = mix( col, vec3(5.3, .5, .1), 1.0-exp( ep*t*t ) );\n    col /= col + 1.;\n    col = pow(col, vec3(.4545));\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}