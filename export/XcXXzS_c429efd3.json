{"ver":"0.1","info":{"id":"XcXXzS","date":"1705369628","viewed":17223,"name":"Full Spectrum Cyber","username":"Kali","description":"Made for Genuary 2024 day 10 - prompt: Hexagonal - title by Piter Pasma based on the meme","likes":239,"published":1,"flags":0,"usePreview":1,"tags":["raymarching","hexagons","genuary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int hexid;\nvec3 hpos, point, pt;\nfloat tcol, bcol, hitbol, hexpos, fparam=0.;\n\nmat2 rot(float a) {\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec3 path(float t) {\n    return vec3(sin(t*.3+cos(t*.2)*.5)*4.,cos(t*.2)*3.,t);\n}\n\nfloat hexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nfloat hex(vec2 p) {\n    p.x *= 0.57735*2.0;\n\tp.y+=mod(floor(p.x),2.0)*0.5;\n\tp=abs((mod(p,1.0)-0.5));\n\treturn abs(max(p.x*1.5 + p.y, p.y*2.0) - 1.0);\n}\n\nmat3 lookat(vec3 dir) {\n    vec3 up=vec3(0.,1.,0.);\n    vec3 rt=normalize(cross(dir,up));\n    return mat3(rt, cross(rt,dir), dir);\n}\n\nfloat hash12(vec2 p)\n{\n\tp*=1000.;\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat de(vec3 p) {\n    pt=vec3(p.xy-path(p.z).xy,p.z);\n    float h=abs(hexagon(pt.xy,3.+fparam));\n    hexpos=hex(pt.yz);\n    tcol=smoothstep(.0,.15,hexpos);\n    h-=tcol*.1;\n    vec3 pp=p-hpos;\n    pp=lookat(point)*pp;\n    pp.y-=abs(sin(iTime))*3.+(fparam-(2.-fparam));\n    pp.yz*=rot(-iTime);\n    float bola=length(pp)-1.;\n    bcol=smoothstep(0.,.5,hex(pp.xy*3.));\n    bola-=bcol*.1;\n    vec3 pr=p;\n    pr.z=mod(p.z,6.)-3.;\n    float d=min(h,bola);\n    if (d==bola) {\n        tcol=1.;\n        hitbol=1.;\n    }\n    else {\n        hitbol=0.;\n        bcol=1.;\n    }\n    return d*.5;\n}\n\nvec3 normal(vec3 p) {\n    vec2 e=vec2(0.,.005);\n    return normalize(vec3(de(p+e.yxx),de(p+e.xyx),de(p+e.xxy))-de(p));\n}\n\nvec3 march(vec3 from, vec3 dir) {\n    vec3 odir=dir;\n    vec3 p=from,col=vec3(0.);\n    float d,td=0.;\n    vec3 g=vec3(0.);\n    for (int i=0; i<200; i++) {\n        d=de(p);\n        if (d<.001||td>200.) break;\n        p+=dir*d;\n        td+=d;\n        g+=.1/(.1+d)*hitbol*abs(normalize(point));\n    }\n    float hp=hexpos*(1.-hitbol);\n    p-=dir*.01;\n    vec3 n=normal(p);\n    if (d<.001) {\n        col=pow(max(0.,dot(-dir,n)),2.)*vec3(.6,.7,.8)*tcol*bcol;\n    }\n    col+=float(hexid);\n    vec3 pr=pt;\n    dir=reflect(dir,n);\n    td=0.;\n    for (int i=0; i<200; i++) {\n        d=de(p);\n        if (d<.001||td>200.) break;\n        p+=dir*d;\n        td+=d;\n        g+=.1/(.1+d)*abs(normalize(point));\n    }\n    float zz=p.z;\n    if (d<.001) {\n        vec3 refcol=pow(max(0.,dot(-odir,n)),2.)*vec3(.6,.7,.8)*tcol*bcol;\n        p=pr;\n        p=abs(.5-fract(p*.1));\n        float m=100.;\n        for (int i=0; i<10; i++) {\n            p=abs(p)/dot(p,p)-.8;\n            m=min(m,length(p));\n        }\n        col=mix(col,refcol,m)-m*.3;\n        col+=step(.3,hp)*step(.9,fract(pr.z*.05+iTime*.5+hp*.1))*.7;\n        col+=step(.3,hexpos)*step(.9,fract(zz*.05+iTime+hexpos*.1))*.3;\n    }\n    col+=g*.03;\n\tcol.rb*=rot(odir.y*.5);\n\treturn col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy-.5;\n    uv.x*=iResolution.x/iResolution.y;\n    float t=iTime*2.;\n    vec3 from=path(t);\n    if (mod(iTime-10.,20.)>10.) {\n        from=path(floor(t/20.)*20.+10.);\n        from.x+=2.;\n    }\n    hpos=path(t+3.);\n    vec3 adv=path(t+2.);\n    vec3 dir=normalize(vec3(uv,.7));\n    vec3 dd=normalize(adv-from);\n    point=normalize(adv-hpos);\n    point.xz*=rot(sin(iTime)*.2);\n    dir=lookat(dd)*dir;\n    vec3 col = march(from, dir);\n\tcol*=vec3(1.,.9,.8);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}