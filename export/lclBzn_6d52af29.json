{"ver":"0.1","info":{"id":"lclBzn","date":"1723270166","viewed":56,"name":"Eletric veins","username":"akr51","description":"simple shader using trig and glow effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["trig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 pal(vec3 a, vec3 b, vec3 c, vec3 d, float t)\n{\n\n\n\n    return a + b * cos((c * t) + d);\n\n}\n\n\nmat2 rt(float t)\n{\n\n\n    float c = cos(t);\n    float s = sin(t);\n    return mat2(c, -s, s, c);\n    \n\n}\n\n\nvoid mainImage(out vec4 c_out, in vec2 u)\n{\n    \n    \n    vec2 rr = iResolution.xy, uv = (u + u - rr) / rr.y;\n    \n    uv.x += cos(uv.x * 4.0 + iTime) * 0.2;\n    vec2 uvr = uv * rt(iTime);\n    \n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.5, 1.5, 1.5);\n    vec3 d = vec3(0.1, 0.2, 0.3);\n    \n    vec3 color = vec3(0.0);\n    \n    float w = pow(length(uv), 1.0) + iTime;\n    \n    for (float f = 0.0; f < 3.0; f += 0.25)\n    {\n    \n    \n        uvr = uvr * rt(f * 3.141592) + vec2(cos(w), sin(w)) * (0.01 / 1.0 * (6.4 * f));\n        float i = (0.0025 * (f + sin(w * 4.0))) / min(abs(uvr.y + sin(uv.x)), abs(uvr.x + cos(uv.y)));\n        color += i * pal(a, b, c, d, f * 2.0 * sin(w));\n        \n    \n    }\n   \n \n    c_out = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}