{"ver":"0.1","info":{"id":"msKyRh","date":"1695803413","viewed":94,"name":"weather_rainy","username":"RainStar","description":"high efficiency\nwet from: https://www.shadertoy.com/view/llcBDs\nRain from: https://www.shadertoy.com/view/Mstczs\nRain ripples from: https://www.shadertoy.com/view/dtt3Dl","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","weather","rainy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float f_Rain_Change_Interval = 5.0;\n\n#define MAX_SCALE 3.0\n#define MIN_SCALE 2.0\n\n#define PI 3.14159265359\n#define TAU 6.283185307\n\nfloat hash21(vec2 p) \n{\n\tp = fract(p*vec2(1.34, 435.345));\n\tp += dot(p, p+34.23);\n  return fract(p.x*p.y);\n}\n\nvec2 hash22(vec2 p)\n{\n    return fract(\n    sin(vec2(dot(p,vec2(127.1,311.7)),\n    dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat ripplesLayer(vec2 baseUVs, float scale)\n{\n    float time = iTime+100.0*scale;\n    vec2 scaledUVs = baseUVs*scale;\n    vec2 tile = floor(scaledUVs);\n    vec3 fr = vec3(fract(scaledUVs),0.0);\n \n    vec2 point = hash22(tile+scale);\n    point = 0.5 + 0.5*sin(iTime*0.5 + TAU*point);\n    \n    float size = hash21(tile+scale)*0.45;\n    vec2 toPoint = point - fr.xy;\n    fr.z=length(fr.xy-vec2(.5)+toPoint*.15)/(size*.4+.1);\n    \n    float speed = (4.+cos(point.x+time*.6)*.001+(1.-size));\n    float circles=smoothstep(.5, 1., sin(speed*time-fr.z));\n    circles*=(1.0-min(fr.z,1.0));\n    return circles;\n}\n\nfloat rnd(float t) {\n  return fract(sin(t*745.523)*7894.552);\n}\n\nfloat curve(float r, float p) {\n  float g = iTime/r;\n  return mix(step(rnd(floor(g)), p), step(rnd(floor(g)+1.0), p), fract(g));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 u=fragCoord/iResolution.x*2.0-1.0;\n    u/=(u.y+=.8)-1.;\n    \n\tvec3 dryAlbedo = texture(iChannel0, u).rgb;\n\tvec3 wetAlbedo = (dryAlbedo+dryAlbedo*dryAlbedo)/2.0;\n    \n    float step = fract(iTime/(f_Rain_Change_Interval*6.0))*6.0;\n    float f_Rain_Transition_1 = 0.0;\n    float f_Rain_Transition_2 = 0.0;\n    if(step < 1.0)\n    {\n        f_Rain_Transition_2 = step;\n        f_Rain_Transition_1 = step*0.5;\n    }\n    else if(step < 2.0)\n    {\n        f_Rain_Transition_2 = 1.0;\n        f_Rain_Transition_1 = step*0.5;\n    }else if(step < 3.0)\n    {\n        f_Rain_Transition_1 = 1.0;\n        f_Rain_Transition_2 = 1.0;\n    }else if(step < 4.0)\n    {\n        f_Rain_Transition_1 = (5.0-step)*0.5;\n        f_Rain_Transition_2 = 4.0-step;\n    }\n    else if(step < 5.0)\n    {\n        f_Rain_Transition_1 = (5.0-step)*0.5;\n        f_Rain_Transition_2 = 0.0;\n    }\n    \n     \n    vec3 baseColor = mix(dryAlbedo, wetAlbedo, f_Rain_Transition_1);\n    \n    float circles = 0.0;    \n\tfor(float i = MIN_SCALE; i<MAX_SCALE; i+=1.5)\n\t{\n        circles=max(circles,ripplesLayer(u*4.0, i));\n\t}\n    baseColor = baseColor+mix(vec3(0.0,0.0,0.0),vec3(0.15,0.15,0.15),circles*f_Rain_Transition_2);\n    \n    vec3 col = vec3(0.0);\n    for (int i = 0; i < 3; i++)\n\t{\n\t\tfloat f = 1.0;\n\t\tvec2 st =  f * (uv * vec2(-3.5, 0.05)+vec2(-iTime*0.1+uv.y*0.41, iTime*0.07));//y*.2 wind\n\t\tvec2 noise = texture(iChannel1, st * 0.5).rg;\n\t\tf = noise.r + noise.g;\n\t\tf = clamp(pow(abs(f)*0.5, 25.0) * 10.0, 0.00, uv.y*0.4+0.05); // Y alpha\n\n\t\tvec3 bri = vec3(0.15);//bright\n\t\tcol += bri*f;\n\t}\n    col *= f_Rain_Transition_2;\n    float lightning = curve(0.2, 0.01);\n    col += lightning * f_Rain_Transition_2;\n    \n    fragColor = vec4(baseColor+col, 1.0);\n}","name":"Image","description":"","type":"image"}]}