{"ver":"0.1","info":{"id":"WlSXzm","date":"1565349406","viewed":273,"name":"ColorFulRayMarchTest001","username":"Hirai_worthless","description":"aaa","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nmat2 genRot(float val){\n\treturn mat2(cos(val),-sin(val),sin(val),cos(val));\n}\n\nfloat pipeWidth(float t){\n\treturn floor((2. + 0.5 * sin(t * 2. * PI))*2.) / 4.;\n}\n\nfloat mapR(vec3 p){\n    p += 1.5;\n    p = fract(p / 3.0) * 3.0;\n    p -= 1.5;\n    float a = length(p.xy) - 0.15 * pipeWidth(p.z);\n    float b = length(p.yz) - 0.15 * pipeWidth(p.x);\n    float c = length(p.zx) - 0.15 * pipeWidth(p.y);\n    return min(a,min(b,c));\n}\nfloat mapB(vec3 p){\n    p += 1.5;\n    p = fract(p / 3.0) * 3.0;\n    p -= 1.5;\n    float a = length(p.xy - vec2(1.,1.)) - 0.15 * pipeWidth(p.z);\n    float b = length(p.yz - vec2(1.,1.)) - 0.15 * pipeWidth(p.x);\n    float c = length(p.zx - vec2(1.,1.)) - 0.15 * pipeWidth(p.y);\n    return min(a,min(b,c));\n}\nfloat mapG(vec3 p){\n    p += 1.5;\n    p = fract(p / 3.0) * 3.0;\n    p -= 1.5;\n    float a = length(p.xy - vec2(-1.,-1.)) - 0.15 * pipeWidth(p.z);\n    float b = length(p.yz - vec2(-1.,-1.)) - 0.15 * pipeWidth(p.x);\n    float c = length(p.zx - vec2(-1.,-1.)) - 0.15 * pipeWidth(p.y);\n    return min(a,min(b,c));\n}\nvec3 trace (vec3 o, vec3 r){\n\tfloat tR = 0.0;\n    for(int i = 0; i < 256; ++i){\n        vec3 pR = o + r * tR;\n        float dR = mapR(pR);\n        tR += dR * 0.25;\n    }\n    float tB = 0.0;\n    for(int i = 0; i < 256; ++i){\n        vec3 pB = o + r * tB;\n        float dB = mapB(pB);\n        tB += dB * 0.25;\n    }\n    float tG = 0.0;\n    for(int i = 0; i < 256; ++i){\n        vec3 pG = o + r * tG;\n        float dG = mapG(pG);\n        tG += dG * 0.25;\n    }\n    return vec3(tR,tB,tG);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.0)); \n    r.yz *= genRot(- PI / 3.);\n    r.xy *= genRot(iTime * PI / 4.);\n    vec3 o = vec3(1.75 * cos((iTime / 4.) * PI),1.75 * sin((iTime / 4.) * PI), 0.6 + iTime * 9. / 8.);\n    vec3 t = trace(o,r);\n    vec3 colX = vec3(250,209,106) / 255.;\n    vec3 colY = vec3(102,197,222) / 255.;\n    vec3 colZ = vec3(230,86,141) / 255.;\n    vec3 fc = t.x < min(t.y,t.z) ? colX :\n    \t\t\tt.y < t.z ? colY : colZ;\n    float fogT = min(t.x,min(t.y,t.z));\n    float fog = 1.0 / (1.0 + fogT * fogT * 0.05);\n    fc = mix(vec3(255,235,238)/255.,fc,fog);\n\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}