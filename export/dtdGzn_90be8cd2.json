{"ver":"0.1","info":{"id":"dtdGzn","date":"1682261718","viewed":73,"name":"Crystalizing Sand Cell","username":"tomachi","description":"Not sure why 3.4 has this effect. Also this appears fully determinisic.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["sandpiles"],"hasliked":0,"parentid":"MtGXRK","parentname":"Basic : Sandpiles Fast"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 color(vec2 p){\n    return vec4(.5)+vec4(.5)*cos(6.28*(texture(iChannel0,p/iResolution.xy)*.25+vec4(0,.1,.2,.4)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\t\n    \n    fragColor += color(fragCoord);\n    fragColor += color(fragCoord+vec2( .5, 0));\n    fragColor += color(fragCoord+vec2(-.5, 0));\n    fragColor += color(fragCoord+vec2( 0, .5));\n    fragColor += color(fragCoord+vec2( 0,-.5));\n    \n    fragColor *= .2;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t\n    float s = texture(iChannel0,fragCoord/iResolution.xy).r; \n    float t = texture(iChannel0,fragCoord/iResolution.xy).g; \n    s = mod(s,magnitude);\n \n\ts -= floor(texture(iChannel0,(fragCoord+vec2( 0.0,-1.0))/iResolution.xy).r/fragCoord.y); \n  \ts += floor(texture(iChannel0,(fragCoord+vec2(-1.0, 0.0))/iResolution.xy).r/4.); \n  \ts += floor(texture(iChannel0,(fragCoord+vec2( 1.0, 0.0))/iResolution.xy).r/4.); \n    s += floor(texture(iChannel0,(fragCoord+vec2( 0.0, 1.0))/iResolution.xy).r/4.); \n    \n    if(iMouse.z>0. && distance(fragCoord,iMouse.xy)<128.) s += distance(fragCoord,iMouse.xy) *iMouse.y;\n    \n    if(iFrame<=10 && distance(fragCoord,.5+iResolution.xy/2.)<3.3) s = 1600000.;\n    if(iFrame<=10 && distance(fragCoord,.5+iResolution.xy/2.)<80.) s = distance(fragCoord,vec2(64.5,64.5))*200.;\n    \n    fragColor = vec4(s);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t\n    float s = texture(iChannel0,fragCoord/iResolution.xy).r; \n    float t = texture(iChannel0,fragCoord/iResolution.xy).g; \n    s = mod(s,magnitude);\n   \n\ts += floor(texture(iChannel0,(fragCoord+vec2( 0.0,-1.0))/iResolution.xy).r/4.); \n  \ts += floor(texture(iChannel0,(fragCoord+vec2(-1.0, 0.0))/iResolution.xy).r/4.); \n  \ts += floor(texture(iChannel0,(fragCoord+vec2( 1.0, 0.0))/iResolution.xy).r/4.); \n    s += floor(texture(iChannel0,(fragCoord+vec2( 0.0, 1.0))/iResolution.xy).r/4.); \n    \n    fragColor = vec4(s);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t\n    float s = texture(iChannel0,fragCoord/iResolution.xy).r; \n    float t = texture(iChannel0,fragCoord/iResolution.xy).g; \n    s = mod(s,magnitude);\n      //  s = mod(s,fragCoord.y*4.0);\n\n\ts += floor(texture(iChannel0,(fragCoord+vec2( 0.0,-1.0))/iResolution.xy).r/4.); \n  \ts += floor(texture(iChannel0,(fragCoord+vec2(-0.75, 0.0))/iResolution.xy).r/80.); \n  \ts += floor(texture(iChannel0,(fragCoord+vec2( 0.75, 0.0))/iResolution.xy).r/80.); \n    s += floor(texture(iChannel0,(fragCoord+vec2( 0.0, 1.0))/iResolution.xy).r/4.); \n    \n    fragColor = vec4(s, t, s, 1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\t\n    float s = texture(iChannel0,fragCoord/iResolution.xy).r; \n    float t = texture(iChannel0,fragCoord/iResolution.xy).g; \n    s = mod(s,magnitude);\n\n\ts += floor(texture(iChannel0,(fragCoord+vec2( 0.0,-1.0))/iResolution.xy).r/4.); \n  \ts += floor(texture(iChannel0,(fragCoord+vec2(-1.0, 0.0))/iResolution.xy).r/4.); \n  \ts += floor(texture(iChannel0,(fragCoord+vec2( 1.0, 0.0))/iResolution.xy).r/4.); \n    s += floor(texture(iChannel0,(fragCoord+vec2( 0.0, 1.0))/iResolution.xy).r/4.); \n    \n    fragColor = vec4(s);\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define magnitude 3.4\n\nvec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}","name":"Common","description":"","type":"common"}]}