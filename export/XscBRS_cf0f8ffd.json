{"ver":"0.1","info":{"id":"XscBRS","date":"1525554050","viewed":90,"name":"Default RGB color visualization","username":"ivanlesko","description":"Simple shader that displays what the hell is going on with that default project.  For the noobs (like myself).","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Plot a line on Y using a value between 0.0-1.0\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.01, pct, st.y) -\n          smoothstep( pct, pct+0.01, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 color = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    color = mix(color, vec3(1., 0., 0.), plot(uv, color.r));\n    color = mix(color, vec3(0., 1., 0.), plot(uv, color.g));\n    color = mix(color, vec3(0., 0., 1.), plot(uv, color.b));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}