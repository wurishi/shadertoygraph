{"ver":"0.1","info":{"id":"sdt3Wr","date":"1629610301","viewed":79,"name":"textured swirl thingyâš™","username":"HaleyHalcyon","description":"a","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Debug feature:\n// Toggle this to 1 if you want to see the coordinates used by the texture\n#define DISABLE_TEXTURES 0\n// How many times should the textusre repeat as the angle makes 1 complete turn?\n// For square textures, I recommend 4ish\n#define TEXTURE_HLOOPS 4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalizes coords so that center is (0,0) and diagonals are length 1\n    vec2 uv = (fragCoord / length(iResolution.xy)\n\t- (iResolution.xy / length(iResolution.xy) / 2.)) * 2.;\n    // weird hybrid distance function\n    float r = length(uv);\n    r = log(r) * 0.3 + r * 0.5;\n    // angle from 0 to 1\n    float angle = atan(uv.y, uv.x) / (2. * 3.1415927);\n    float t = fract(iTime / 10.0);\n    \n    // the texture X and Y coords\n    float spiral1 = r * 1.0 + angle * 1. + t * 0.;\n    float spiral2 = r * 0.2 + angle * -float(TEXTURE_HLOOPS) + t * 2.;\n    \n    vec2 txUV = vec2(spiral2, spiral1);\n    \n    // Time varying pixel color\n    #if DISABLE_TEXTURES\n    vec3 col = vec3(fract(txUV).xy, 0.0);\n    #else\n    vec3 col = texture(iChannel0, txUV).rrr + 0.4 * fract(vec3(0.0, spiral1, spiral2));\n    #endif\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}