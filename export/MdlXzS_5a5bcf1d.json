{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nfloat _sd (vec2 p1, vec2 p2, vec2 p3) {\n\treturn \n\t(p1.x - p3.x) * (p2.y - p3.y)- \n\t(p2.x - p3.x) * (p1.y - p3.y);\n}\n\nfloat _istri (vec2 pt, vec2 p1, vec2 p2, vec2 p3) {\n\tfloat v = length (vec3 (\n\t\tstep (0.0, _sd (pt, p1, p2)),\n\t\tstep (0.0, _sd (pt, p2, p3)),\n\t\tstep (0.0, _sd (pt, p3, p1))));\n\treturn 1.0 - step (1.0, v) + step (1.5, v);\n}\n\nfloat _isquad (vec2 pt, vec2 p1, vec2 p2, vec2 p3, vec2 p4) {\n\treturn step (1.0, \n\t\t_istri (pt, p1, p2, p3)+\n\t\t_istri (pt, p3, p4, p1));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / min (iResolution.x, iResolution.y);\n\t\n\tfloat cfi = cos (iTime);\n\tfloat sfi = sin (iTime);\n\tuv *= mat2 (-sfi, cfi, cfi, sfi);\n\t\n\tfragColor = vec4 (1.0) * _isquad (uv, \n\t\tvec2 (-0.5, -0.5),\n\t\tvec2 (+0.5, -0.5),\n\t\tvec2 (+0.5, +0.5),\n\t\tvec2 (-0.5, +0.5)) ;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdlXzS","date":"1403550129","viewed":363,"name":"Point within triangle or quad","username":"Coldberg","description":"Check if point within triangle or quad","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2dpointtrianglequad"],"hasliked":0,"parentid":"","parentname":""}}