{"ver":"0.1","info":{"id":"ctjyWc","date":"1692367846","viewed":66,"name":"Psychodelic Kaleidoscope","username":"BrunoDG","description":"My first shader on ShaderToy! at last!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dkaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    \n    return a + b * cos(6.28318 * (c * t + d ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 3.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n    \n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette((length(uv0) + (i + iTime)* .4));\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        /**\n            Before, I was using Smooth step to make a nice infinite transition.\n            But I've changed to sin function to make it negative and work as a\n            glowing function.\n        */\n        //d = smoothstep(0.0, 0.1, d);\n\n        d = 0.005/d;\n\n        finalColor += (col * d);\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}