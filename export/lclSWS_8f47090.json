{"ver":"0.1","info":{"id":"lclSWS","date":"1705667387","viewed":111,"name":"interference pattern art","username":"Dalmador","description":"Based on my top down wave shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["interferencepatterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n\n// generated with http://dev.thi.ng/gradients/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.000,0.500,0.500);\n    vec3 b = vec3(0.000,0.500,0.500);\n    vec3 c = vec3(0.000,0.500,0.333);\n    vec3 d = vec3(0.000,0.500,0.667);\n\n    return (a + b*cos( 6.28318*(c*t+d) ));\n}\n\n// rotate coordinate around (0, 0)\nvec2 rotated(vec2 coords, float angle){\n    vec2 result;\n    angle = angle * pi / 180.;\n    result.x = coords.x * cos(angle) + coords.y * sin(angle);\n    result.y = -coords.x * sin(angle) + coords.y * cos(angle);\n    return result;\n}\n\n// get height of wave depending on the speed of the wave and the distance to the center\nfloat gh(float dist, float speed){\n    dist = dist * -7.;\n    return sin(dist + iTime * (2.+ 2.* speed)) -.1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    // zoom\n    uv *= 30.;\n    \n    // distance to five Points around the center\n    const float radius = 5.;     \n    float a = length(uv - rotated(vec2(0, radius), 72. * 0.));\n    float b = length(uv - rotated(vec2(0, radius), 72. * 1.));\n    float c = length(uv - rotated(vec2(0, radius), 72. * 2.));\n    float d = length(uv - rotated(vec2(0, radius), 72. * 3.));\n    float e = length(uv - rotated(vec2(0, radius), 72. * 4.));\n    \n    // get summ of heights of the waves comming from the Points\n    float height = (gh(a, 0.) + gh(b, .4) + gh(c, .8) + gh(d, .2) + gh(e, .6)) / 5.;\n    \n    // scale from 0 to 1\n    height += 1.;\n    height /= 2.;\n    \n    if (height > 0.8){\n        fragColor = vec4(1, 1, 1, 0);\n    }\n    else \n    {\n        fragColor = vec4(0, 0, 0, 0);\n    }\n}","name":"Image","description":"","type":"image"}]}