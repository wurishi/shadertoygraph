{"ver":"0.1","info":{"id":"X3XXzS","date":"1710401410","viewed":115,"name":"Chromatic Aberration simulation","username":"silvarna","description":"Chromatic aberration by proportion.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["camera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 ChannelPick(vec3 biasRGB, int cn)\n{\n    switch(cn) {\n        case 1:\n            return biasRGB / biasRGB.r;\n        case 2:\n            return biasRGB / biasRGB.g;\n        case 3:\n            return biasRGB / biasRGB.b;\n        default:\n            return vec3(1., 1., 1.); \n    }\n}\n\nvec2 ChromaticAberration(vec2 alpha, vec2 uv)\n{\n    return alpha*(uv-vec2(.5, .5)) + vec2(.5, .5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 biasR = vec3(1.,   1.01, 1.02);//r\n    vec3 biasG = vec3(0.99, 1.,   1.01);//g\n    vec3 biasB = vec3(0.98, 0.99, 1.0); //b\n    vec3 biasW = vec3(1., 1., 1.);      //w\n    vec3 idx = ChannelPick(biasB, 3);\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 idxR = ChromaticAberration(idx.rr, uv);\n    vec2 idxG = ChromaticAberration(idx.gg, uv);\n    vec2 idxB = ChromaticAberration(idx.bb, uv);\n\n    vec4 col = texture(iChannel0, uv);\n    vec4 col_off = col;\n\n    col_off.r = texture(iChannel0, idxR).r;\n    col_off.g = texture(iChannel0, idxG).g;\n    col_off.b = texture(iChannel0, idxB).b;\n\n    fragColor = col_off;\n    //fragColor = col;\n}","name":"Image","description":"","type":"image"}]}