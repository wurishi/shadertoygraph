{"ver":"0.1","info":{"id":"7s2fzw","date":"1646622994","viewed":57,"name":"zzzpupil","username":"natnatnat","description":"zzz","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circle","stars","neuron"],"hasliked":0,"parentid":"ssffWB","parentname":"circular neuron"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14,\n     PHI = 1.61,\n     R = .2,\n       n = 7.,\n       m = 3.;\n       \nmat3 centers = mat3(-1., 0.3, 0., 1, 0.3, 0., 0., -0.3, 0.);\n\nfloat drawCircles(vec2 U, float RE, float RI, vec3 center, float n) {\n\n    float r = length(U), c = 0.;\n \n    for(float r=0.,i=0.,a=0.; i++ < n; a += 2.*PI/n)\n        r = distance(U, RE * vec2( -sin(a), cos(a)) + center.xy ),\n        c += min(exp((-r + RI)/.02), 1.) * 0.2;\n\n    return c;\n}\n\nvoid mainImage( out vec4 O, vec2 u ) {\n    vec2 Res = iResolution.xy, \n        U = ( 2. * u - Res ) / Res.y;   \n    O = vec4(0.);\n    for(float i=0.,p=1.; i++ < m; p*=1.2) {\n        float f = i + 1.;\n        float s = max(0.5 + 0.8 * sin(f * iTime + PI/2.), 0.);\n        O += drawCircles(U, s * R * p, R * p, centers[int(i-1.)], n) * vec4(1,1,1,0);\n    }\n    O = 1. - O;\n}","name":"Image","description":"","type":"image"}]}