{"ver":"0.1","info":{"id":"dlX3Rn","date":"1671158655","viewed":136,"name":"Sin-cos-tan domain coloring","username":"zenzicubic","description":"test","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["domain","complex","coloring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.283187\n#define PI 3.14159265358\n#define T 0.1\n\nvec2 sc(vec2 z) \n{\n    float r = sin(z.x) * cosh(z.y);\n    float i = cos(z.x) * sinh(z.y);\n    return vec2(r, i);\n}\n\nvec2 cc(vec2 z) \n{\n    float r = cos(z.x) * cosh(z.y);\n    float i = -sin(z.x) * sinh(z.y);\n    return vec2(r, i);\n}\n\nvec2 cdiv(vec2 a, vec2 b)\n{\n    float d = dot(b, b);\n    float n1 = a.x*b.x + a.y*b.y;\n    float n2 = a.y*b.x - a.x*b.y;\n    return vec2(n1/d, n2/d);\n}\n\nvec2 tc(vec2 z)\n{\n    return cdiv(cc(z), sc(z));\n}\n\nvec2 f(vec2 z) \n{\n    return sc(cc(tc(z)));\n}\n\nvec3 col(float t)\n{\n    vec3 a = vec3(0.5);\n    vec3 b = vec3(0.5);\n    vec3 c = vec3(1.);\n    vec3 d = vec3(0., 0.33, 0.67);\n    \n    return a + b * cos(TAU * (c * t + d));\n}\n\nvec3 coord(vec2 pos)\n{\n    vec2 v = f(pos);\n    float vl = length(v);\n    float t = (PI + atan(v.y, v.x)) / TAU;\n    \n    float b = abs(sin(PI * v.x) * sin(PI * v.y));\n    float l = 0.5 + 0.5 * (vl - floor(vl));\n    \n    return col(t) * (0.5 + 0.5 * b) * l;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = coord(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}