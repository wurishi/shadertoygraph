{"ver":"0.1","info":{"id":"wsGBzK","date":"1607489613","viewed":165,"name":"To the Light","username":"Inityx","description":"A bright tunnel","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float CRUSH = -0.1;\nconst float ABBERATE = 0.01;\nconst float DITHER_STR = 1.0/128.0;\n\nvec2 zoom(vec2 uv, float strength) {\n    return (uv - 0.5) / ( 1.0 + strength) + 0.5;\n}\n\nvec3 chromatic(sampler2D source, vec2 uv, float strength) {\n    return vec3(\n        texture(source, zoom(uv, strength)).r,\n        texture(source, uv).g,\n        texture(source, zoom(uv, -strength)).b\n    );\n}\n\nvec3 dither(vec3 color, vec2 uv) {\n    vec3 noise = texture(iChannel1, uv).rgb - 0.5;\n    return color + noise * DITHER_STR;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 dispersed = chromatic(iChannel0, uv, ABBERATE);\n    fragColor = vec4(dither(dispersed + CRUSH, uv), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float PI = 3.14159;\nconst float PIPE_RADIUS = 1.0;\nconst float FOV = PI/3.0;\n\nconst vec3 CLOUD_COLOR = vec3(1.0, 0.88, 0.8);\nconst vec3 FOG_COLOR = vec3(0.6, 0.7, 1.0);\nconst vec3 GLARE_COLOR = vec3(0.6, 0.6, 1.0);\n\nconst float FOG_AMNT = 1.0 / 6.0;\nconst float GLARE_AMNT = 0.15;\nconst float BUMP_AMNT = 0.12;\n\nconst vec2 TEXTURE_SCALE_1 = vec2(0.25, 0.5);\nconst vec2 TEXTURE_SCALE_2 = vec2(0.5, 0.75);\nconst float TIME_SCALE = 0.1;\nconst float GLARE_WIDTH = 0.2;\n\nfloat incident(vec2 uv) {\n    return length(uv) * (FOV / 2.0);\n}\n\nvec2 texture_space(vec2 uv) {\n\tfloat y = PIPE_RADIUS / tan(incident(uv)) / (2.0 * PI * PIPE_RADIUS);\n    float x = abs(atan(uv.y, uv.x)) / (2.0 * PI);\n    return vec2(x, y);\n}\n\nfloat noise(vec2 uv) {\n    return\n        texture(iChannel0, texture_space(uv.xy) * TEXTURE_SCALE_1 + vec2(0,  iTime * TIME_SCALE)).r +\n        texture(iChannel0, texture_space(uv.yx) * TEXTURE_SCALE_2 + vec2(PI, iTime * TIME_SCALE)).r;\n}\n\nfloat fog(vec2 uv) {\n    float dist = PIPE_RADIUS / sin(incident(uv));\n    return log2(dist) * FOG_AMNT;\n}\n\nfloat glare(vec2 uv) {\n\tfloat raw = max(1.0 - abs(uv.y / GLARE_WIDTH), 0.0);\n    return smoothstep(0.0, 1.0, raw * raw) * GLARE_AMNT;\n}\n\nfloat cloud(vec2 uv) {\n    float angle = incident(uv) + (noise(uv) - 0.5) * BUMP_AMNT;\n    return pow(1.0 - angle, 5.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float aspect = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord/iResolution.y - vec2(aspect / 2.0, 0.5);\n    \n    vec3 col =\n        cloud(uv) * CLOUD_COLOR +\n        fog(uv) * FOG_COLOR +\n        glare(uv) * GLARE_COLOR;\n\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}