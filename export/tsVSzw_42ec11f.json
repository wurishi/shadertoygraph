{"ver":"0.1","info":{"id":"tsVSzw","date":"1574262597","viewed":306,"name":"splatmap test","username":"dukesoft_official","description":"splatmap test","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["splatmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Execute in console: \n// gShaderToy.SetTexture(0, {mSrc:'https://dukesoft.nl/terrtex.png', mType:'texture', mID:1, mSampler:{ filter: 'linear', wrap: 'clamp', vflip:'false', srgb:'false', internal:'byte' }});\n// gShaderToy.SetTexture(1, {mSrc:'https://dukesoft.nl/diffuse.png', mType:'texture', mID:1, mSampler:{ filter: 'linear', wrap: 'clamp', vflip:'false', srgb:'false', internal:'byte' }});\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float texSize = 1024.0;\n    float individualSize = 32.0;\n    \n    float texRes = individualSize/texSize;\n    float multiply = texSize/individualSize;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n\n    vec4 splatMap = texture(iChannel0, uv);\n\n    vec2 uvNew = vec2(mod(uv.x, texRes), mod(uv.y, texRes));\n    vec2 uv2New = vec2(texRes+mod(uv.x, texRes), mod(uv.y, texRes));\n    vec2 uv3New = vec2(texRes*3.0+mod(uv.x, texRes), mod(uv.y, texRes));\n    \n    // Output to screen\n    //fragColor = vec4(uvNew.x, uvNew.y, 0.0, 1.0);\n    fragColor = texture(iChannel1, uvNew)* splatMap.r;\n    fragColor += texture(iChannel1, uv2New)* splatMap.g;\n    fragColor += texture(iChannel1, uv3New)* splatMap.b;\n    //fragColor += texture(iChannel1, uv3New)* splatMap.a;\n    //fragColor = terrainTexture;\n}\n","name":"Image","description":"","type":"image"}]}