{"ver":"0.1","info":{"id":"McX3zn","date":"1702675984","viewed":14,"name":"burning eyes","username":"NikoAnimation","description":"mandel brot set edition","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"ctGBDz","parentname":"how to make your eyes bleed"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int iterations = 5000;\nfloat threshold = 1000.0;\nfloat baseScale = 5.0;\nvec2 centerPos = vec2(-1.73030, 0.0638);\nfloat colourConstant = 10.0;\n\nvec3 get_col(float iter) {\n    vec3 col;\n\n    float val = mod(iter, colourConstant)/colourConstant;\n    int val2 = int(floor(mod(iter, colourConstant*3.0)/colourConstant));\n    switch (val2) {\n        case 0: col = vec3(val, 0.0, 1.2-val); break;\n        case 1: col = vec3(1.2-val, val, 0.0); break;\n        case 2: col = vec3(0.0, 1.2-val, val); break;\n    }\n    \n    return col;\n}\n\nvec3 get_mandelbrot(vec2 c) {\n    vec2 z = c;\n    bool check = true;\n    float iter = 0.0;\n    for(int i; i<iterations; i++) {\n        vec2 m = z;\n        m.x = (z.x * z.x) - (z.y * z.y) + c.x;\n        m.y = abs(2.0 * z.x * z.y) + c.y;\n        z = m;\n        if (abs(z.x) > float(threshold) || abs(z.y) > float(threshold)) {\n            check = false;\n            break;\n        } iter = float(i);\n    }\n    \n    vec3 col;\n    if (check) {\n        col = vec3(0.0, 0.0, 0.0);\n    } else {\n        col = get_col(iter);\n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime+6.0;\n    float scale = baseScale / pow(t/10.0, t);\n    vec2 uv = (fragCoord/iResolution.xy*scale)-(scale/2.0) + centerPos;\n    uv.y /= iResolution.x / iResolution.y;\n    uv.y = -uv.y;\n    vec3 col = get_mandelbrot(uv);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}