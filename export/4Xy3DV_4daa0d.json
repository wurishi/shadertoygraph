{"ver":"0.1","info":{"id":"4Xy3DV","date":"1718216384","viewed":83,"name":"Ising model, measure M","username":"Abarvg","description":"Ising model of 2d ferromagnetic material.\nhttps://en.wikipedia.org/wiki/Ising_model\nUsr mouse to change temperature. Slider on the right side tells about average color of the picture.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["physics","ising","magnetism"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 tex_res = vec2(textureSize(iChannel0, 0));\n    float lowest_mip = log(min(tex_res.x, tex_res.y)) / log(2.0) + 1.0;\n    float M = textureLod( iChannel0, uv, lowest_mip).x;\n    if(uv.x < 0.97)\n        fragColor = vec4( texelFetch( iChannel0, ivec2(fragCoord), 0 ).xy, 0.5, 1.0 );\n    else if (uv.y - M < 0.01 && uv.y - M > -0.01 )\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    else\n        fragColor = vec4( 0.0, 0.0, uv.y, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nint cell( in ivec2 p )\n{\n    ivec2 r = ivec2(iResolution.x, iResolution.y);\n    p.x = (p.x+r.x) % r.x;\n    p.y = (p.y+r.y) % r.y;\n    return (texelFetch(iChannel0, p, 0 ).x > 0.5 ) ? 1 : -1;\n}\n\n\nfloat hash1( float n )\n{\n    return fract((sin(n))*138.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 px = ivec2( fragCoord );\n    \n    float J = 0.00000000000001+16.0*smoothstep(0.0,float(iResolution.x),float(iMouse.x));\n\n    int deltaE =  2*(cell(px+ivec2( 0,-1)) + cell(px+ivec2(-1, 0))\n                   + cell(px+ivec2( 0, 1)) + cell(px+ivec2( 1, 0))\n                   + cell(px+ivec2( 1, 1)) + cell(px+ivec2( 1, -1)) \n                   + cell(px+ivec2(-1, 1)) + cell(px+ivec2(-1, -1)) \n                )*cell(px);\n    int e = cell(px);\n    float f = (e == 1) ? 1.0 : 0.0;\n    float g = 0.0;\n    float b = 0.0;\n    \n    if( iFrame == 0 ) \n    {\n        f = step(0.5, hash1(float(fragCoord.x)*float(iTimeDelta)+hash1(float(fragCoord.y)*71.1)));\n        fragColor = vec4( f, g, b, 0.0 );\n    }\n  else if (hash1(float(uint((fract((sin(float(px.y)*float(iTime)+1.0)*513.0+cos(float(px.x)+1.0)*517.0)/61.0))*float(iTime)*122.0+40.0))) > 0.5)\n    {\n        fragColor = vec4( f, 0.0, 0.0, 0.0 );\n\n    }\n    else\n    {\n        if (deltaE <= 0)\n        {\n            f = (e == 1) ? 0.0 : 1.0;\n            g = 0.0;\n            b = 0.0;\n\n        }\n        else\n        {\n            if (hash1(float( sin(float(px.x)*173.0+17.0)*157.0 + cos(float(px.y)*148.0+17.0)*171.0)) <= float(exp(-float(deltaE)/J)))\n            {\n                f = (e == 1) ? 0.0 : 1.0;\n                b = 0.0;\n                g = 0.0;\n            }   \n        }\n\n        fragColor = vec4( f, g, b, 0.0 );\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}