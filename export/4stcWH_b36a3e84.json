{"ver":"0.1","info":{"id":"4stcWH","date":"1518713685","viewed":524,"name":"how does this effect work?","username":"laserdog","description":"This is the sphere mapping code pulled out of this shader: https://www.shadertoy.com/view/MslXD4. I've been wracking my brain and can't understand how this mapping is working. My geometry has gotten very rusty. Any help would be greatly appreciated.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sphere","fake3d","question"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SIZE = 0.6;\n#define PI 3.141592\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.y) * 2.0 - (iResolution.xy / iResolution.y);\n\tfloat d = sqrt(uv.x*uv.x + uv.y*uv.y);\n    \n    // what is this?\n    float cng = asin(d/SIZE);\n    // ?\n\tfloat lambda = atan(uv.x*sin(cng) , d*cos(cng));\n    // ?\n\tfloat phi = asin(uv.y*sin(cng) / d);\n\t\t\n\tvec2 duv = vec2(lambda * 2. / PI , phi * 2.0 / PI);\n\tduv.x = duv.x*(1.0 - 0.5*abs(duv.y)*(abs(duv.y))) + iTime*0.25;\n    \n    fragColor = texture(iChannel0, duv);\n    \n    \n}","name":"Image","description":"","type":"image"}]}