{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const mat2 axes = mat2(2., 2., 1., -1);\nconst vec3 bfreq = vec3(-0.618, 1.618, 2.618) * 0.3; \nconst mat2 bamp = mat2(1., 1., 1., -1.) * 0.1;\nconst vec3 mfreq = vec3(2.618, 0.618, 1.618) * 0.3; \nconst mat2 mamp = mat2(1., 0., 0., 1.) * 0.1;\nconst mat4 palette = mat4(4.,1.,5.,5.,\n                          5.,1.,4.,5.,\n                          1.,2.,5.,5., \n                          2.,1.,5.,5.\n                          )/5.;\n\nvec2 grid(vec2 uv, int repeat) {\n return floor(vec2(mod(axes * uv * float(repeat), float(repeat))));\n}\n\nvec2 wave(vec2 base, vec3 freq, mat2 amplitude) {\n    float z = dot(vec3(base, iTime), freq);\n    return vec2(sin(z), cos(z)) * amplitude + base;\n}\n\nvec4 plaid(vec2 uv) {\n \tbvec2 col = bvec2(grid(uv, 2));\n\tbool margin = any(bvec2(step(grid(uv*2., 6), vec2(2))));\n    if (margin)\n        return vec4(0);\n    else \n        if (col.x)\n        if (col.y) return palette[0];\n        else return palette[1];\n        else if (col.y)\n            return palette[2];\n            else return palette[3];\n}\n\nfloat mask(vec2 uv) {\n \tbvec2 x = bvec2(grid(uv, 3));\n    return float(!any(x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / min(iResolution.x, iResolution.y) * 10.;\n    vec4 back = plaid(wave(uv, bfreq, bamp));\n\tfloat mask = mask(wave(uv, mfreq, mamp));\n    fragColor = back * mask;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MlX3D8","date":"1421743205","viewed":332,"name":"purple under mesh","username":"crowding","description":"I had an idea for a fabric print to put under a mesh jersey and wrote this as a test.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","moire","motion"],"hasliked":0,"parentid":"","parentname":""}}