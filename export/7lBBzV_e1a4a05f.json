{"ver":"0.1","info":{"id":"7lBBzV","date":"1652436627","viewed":52,"name":"bouncing circle","username":"Desdby","description":"â—‰","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","bouncing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float e   = 0.577215664901532;\nconst float pi  = 3.141592653589793;\nconst float tau = 6.283185307179586;\n\nfloat circle (vec2 p , vec2 pos){\n    return distance(p,pos)*1.16; \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    //Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float factor = iResolution.y/iResolution.x;\n    \n    uv = vec2 (uv.x , uv.y*factor);\n    float x = uv.x, y = uv.y;\n    float t = iTime;\n    \n    vec2  c0pos = vec2(0.5 , abs(0.5*factor*sin(t)));\n    \n    float c0 = circle(uv,c0pos);\n    float c = sqrt(c0);\n    vec3 col = vec3(c,c,c) + 0.1*cos(t+uv.xyx + vec3(1.1,2.2,3.3))*tanh(pi*sin(t)+cos(x+y));\n     \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}