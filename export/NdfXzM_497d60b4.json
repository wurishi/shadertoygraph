{"ver":"0.1","info":{"id":"NdfXzM","date":"1618374308","viewed":112,"name":"Burning Paper with Smoke ","username":"xiaodi1043","description":"Burning paper with fbm","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["fbm","noise2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MOUNT=8;\n\nconst int FOGNUMBER=2;\n\nvec2 random(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\nfloat noise2D(vec2 v){\n    vec2 scaledV=v*1.;\n    vec2 fl=floor(scaledV);\n    vec2 fr=fract(scaledV);\n    vec2 ratio=fr*fr*(3.-2.*fr);\n    vec2 p=random(fl);\n    vec2 pr=random(fl+vec2(1.,0.));\n    vec2 pd=random(fl+vec2(0.,1.));\n    vec2 pdr=random(fl+vec2(1.,1.));\n\n    float nUp=dot(p,fr)*(1.-ratio.x)+dot(pr,vec2(fr.x-1.,fr.y))*ratio.x;\n   // float nUp=mix(dot(p,fr),dot(pr,vec2(fr.x-1.,fr.y)),ratio.x);\n   // float nDown=mix(dot(pd,vec2(fr.x,fr.y-1.)),dot(pdr,vec2(fr.x-1.,fr.y-1.)),ratio.x);\n    float nDown=dot(pd,vec2(fr.x,fr.y-1.))*(1.-ratio.x)+dot(pdr,vec2(fr.x-1.,fr.y-1.))*ratio.x;\n    return mix(nUp,nDown,ratio.y);\n}\n\nfloat fbm(vec2 st){\n   float height=0.8;\n   float frequency=2.;\n   float offset=1.3;\n   float add=0.;\n   for(int i=0;i<MOUNT;i++){\n       add+=height*noise2D(frequency*st+offset);\n       offset*=1.1;\n       height*=0.9;\n       frequency*=1.2;\n   }\n   return add; \n}\n\nfloat drawHole(float cR,float noise,float radius,vec2 st){\n    float color = smoothstep(cR,cR+0.1,radius+noise);\n    return color;\n}\nfloat drawRound(float cR,float noise,float radius,vec2 st){\n    float outNoise=0.1*noise2D(3.*st);\n    float color = smoothstep(cR,cR+0.2+0.2*cR,radius+outNoise);\n    return color;\n}\n\nfloat drawSmoke(vec2 st,vec2 uv,float radius){\n    float value=0.;\n    float len=length(uv);\n    float k=st.y/st.x;\n\n    for(int i=0;i<FOGNUMBER;i++){\n        float cK=3.14159/(float(FOGNUMBER)+1.)*float(i);\n        cK=tan(cK);\n        value+=(smoothstep(cK-0.5,cK,k)-smoothstep(cK,cK+0.5,k));\n    }\n    return clamp(0.,1.,value)*(1.-smoothstep(radius+0.1,radius+0.8,len));\n\n}\n\nfloat fbmRotate( vec2 st){\n    float add=0.;\n    float height=1.2;\n    float frequency=2.;\n    float offset=1.3;\n    for(int i=0;i<MOUNT;i++){\n        mat2 rotate=mat2(\n            cos(0.5),sin(0.5),\n            -sin(0.5),cos(0.5)\n        );\n        add+=height*noise2D(frequency*st+offset);\n        st=rotate*st+offset;\n        offset*=1.1;\n        height*=0.8;\n        frequency*=1.2;\n    }\n    return add;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.y*=iResolution.y/iResolution.x;\n\n    vec4 data=texture(iChannel0,uv);\n    vec3 color=data.rgb/data.a;\n    uv-=vec2(0.5,iResolution.y/iResolution.x/2.);\n    uv*=5.;\n    float radius=length(uv);\n\n    float currentRadius=.7;\n    float noise=0.05*fbm(6.*uv+iTime);\n    vec3 grey=vec3(0.5216, 0.302, 0.0157);\n    float hole=drawHole(currentRadius,noise,radius,uv);\n    \n    color*=hole;\n    float ratio=drawRound(currentRadius,noise,radius,uv);\n    color*=mix(color,grey,1.-ratio);\n\n    vec3 fireColor=vec3(0.8, 0.3647, 0.149);;\n    color+=fireColor*(smoothstep(0.,0.02,hole)-step(0.3,hole));\n    \n    vec2 q=vec2(\n        0.32*fbmRotate(\n            vec2(0.55*uv.x+iTime*.23,1.52*uv.y+0.22*iTime)\n        ),\n        0.43*fbmRotate(\n            vec2(0.63*uv.y+iTime*0.43,1.64*uv.x+0.11*iTime)\n        )\n    );\n    float fog=drawSmoke(q,uv,currentRadius);\n    vec3 fogColor=vec3(0.5059, 0.4667, 0.4667);\n    color*=mix(color,fogColor,fog);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(1.0,1.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}