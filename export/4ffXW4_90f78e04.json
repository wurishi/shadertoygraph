{"ver":"0.1","info":{"id":"4ffXW4","date":"1705243757","viewed":120,"name":"1kb Artwork - #genuary14","username":"Auratyk","description":"Refraction shader for genuary\nModify the wi value to change the wave intensity","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["refraction","genuary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat rand(vec2 n)\n{\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\n\nfloat noise(vec2 p)\n{\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u * u * (3.0 - 2.0 * u);\n\n    float res = mix(\n        mix(rand(ip), rand(ip + vec2(1.0, 0.0)), u.x),\n        mix(rand(ip + vec2(0.0, 1.0)), rand(ip + vec2(1.0, 1.0)), u.x),\n        u.y\n    );\n    return res * res;\n}\n\n\nfloat fbm(vec2 x)\n{\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n    for (int i = 0; i < 5; ++i)\n    {\n        v += a * noise(x);\n        x = rot * x * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float x = fragCoord.x / iResolution.x;\n\n    vec4 color = vec4(vec3(mix(1.0, 1.0, x)), 1.0);\n    uv.y = 1.0 - uv.y;\n\n    float st = smoothstep(0.0, 1.0, uv.y);\n    //Modify this value!!\n    float wi = 1.0;\n    vec2 surface = st * vec2(\n        mix(-0.3, 0.3, fbm(wi * uv + iTime * 0.1)),\n        mix(-0.3, 0.3, fbm(wi * uv + iTime * 0.1))\n    );\n\n    uv = refract(vec2(sin(uv.x), sin(cos(uv.y))), surface, 1.0 / 1.333);\n    color *= texture(iChannel0, uv);\n\n    fragColor = color;\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}