{"ver":"0.1","info":{"id":"flVSRz","date":"1640086214","viewed":153,"name":"diamond-cmyk","username":"HaleyHalcyon","description":"a","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI (3.14159265358979)\n#define HEX(x) (vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255)/255.)\n\n#define SMOOTHNESS 0.02\nvec3 getColor(float r) {\n    r = fract(r);\n    float mix0 = smoothstep(0.00, 0.00 + SMOOTHNESS, r);\n    float mix1 = smoothstep(0.25, 0.25 + SMOOTHNESS, r);\n    float mix2 = smoothstep(0.50, 0.50 + SMOOTHNESS, r);\n    float mix3 = smoothstep(0.75, 0.75 + SMOOTHNESS, r);\n    \n    // works better with hex codes this way\n    vec3 color0 = HEX(0x009BE8);\n    vec3 color1 = HEX(0xEB0072);\n    vec3 color2 = HEX(0xfff100);\n    vec3 color3 = HEX(0x000000);\n    \n    return (\n        color0 * (mix0 - mix1) +\n        color1 * (mix1 - mix2) +\n        color2 * (mix2 - mix3) +\n        color3 * (mix3 - mix0 + 1.)\n    );\n}\n\nfloat zigzag(float x) {\n    return 1. - abs(1. - fract(x) * 2.);\n}\n\n\n#define SPOKES 8.\n#define COLORSCALE 0.4\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = fract(iTime / 2.);\n    // Scales coords so that the diagonals are all dist 1 from center\n    float scale = length(iResolution.xy);\n    vec2 uv = (fragCoord / scale\n\t- (iResolution.xy / scale / 2.)) * 2.;\n    \n    // for wormhole or perspective effect\n    float r = log(length(uv)) + (1.0 + 0.02 * sin(time * 2. * PI));\n    \n    float theta = fract(atan(uv.y, uv.x) / (2. * PI));\n    \n    float val = fract(\n      COLORSCALE * (\n        zigzag(r + 2. * time + 0.3 *  sin(time * PI * 2.)) +\n        zigzag(0.2 * r + SPOKES * theta + 1. * time)\n      ) +\n      -0.1 * r + time\n    );\n    \n    vec3 col = getColor(val);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}