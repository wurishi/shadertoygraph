{"ver":"0.1","info":{"id":"XsffD8","date":"1495806426","viewed":208,"name":"Gridlines","username":"mv","description":"gridlines","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gridlines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 20.0*fragCoord.xy / iResolution.xx;\n    \n    // partitions the grid into 1x1 cells, \n    // moving center half a unit to the right and up\n    vec2 uv2 = floor(uv) + 0.5; \n    \n    // controls the sharpness/roundedness of the corners\n    float k = 12.0; \n    \n    // calculates the distance from the center of each cell, \n    // using |x|^k + |y|^k = r^|k| as the distance function\n    vec2 p = abs(uv2 - uv);\n    float d = pow(pow(p.x, k) + pow(p.y, k), 1.0/k); \n    \n    float a = 0.45;            // controls the thickness of the lines\n    float b = 17.0;            // controls the falloff\n    float c = 1.0 - (a - d)*b; // calculates brightness\n    fragColor = vec4(0, c/1.5, c, 1.0);\n}","name":"Image","description":"","type":"image"}]}