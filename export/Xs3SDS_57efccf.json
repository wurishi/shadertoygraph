{"ver":"0.1","info":{"id":"Xs3SDS","date":"1461084998","viewed":264,"name":"fibonacci fractal","username":"Equations","description":"Fractal generated using: \n- start with a block(black) at the bottom left.\n- repeat: copy the existing structure, rotate it anticlockwise by 90 degrees, and append it to the right of the existing structure","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","fibonacci"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//cc by-nc-sharealike\nconst float PI = 3.1415926535;\n\nconst int MAX = 23;\nconst float fibMAX = 46368.0;\n\n#define PIXELS 8.0 * exp(3.3 * (1.0 - cos(iTime / 3.3 )))\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //I chose the not so closed form here, thought it easier\n\tfloat fib[MAX + 1];\n    fib[0] = fib[1] = 1.0;\n    \n    for(int i = 1; i < MAX; ++i)\n        fib[i + 1] = fib[i] + fib[i - 1];\n        \n    vec2 uv = fragCoord.xy / iResolution.x *  PIXELS;\n    \n    fragColor = vec4(0.0);\n    \n    for(int n = MAX; n > 0; --n){\n        if(uv.y > fib[n-1])\n        {\n            fragColor = vec4(1.0);\n            return;\n        }\n        if(uv.x > fib[n-1])\n        {\n            uv = vec2(uv.y, fib[n] - uv.x);\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}