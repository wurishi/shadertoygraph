{"ver":"0.1","info":{"id":"DtsyR7","date":"1692209848","viewed":45,"name":"Fractal Shader Test","username":"gsm041039","description":"Fractal shader test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 30.\n#define SCALE 0.2\n#define POSX -1.3\n#define POSY -0.014\n#define PI 3.141592654\n\n//Function from Iñigo Quílez\nvec3 Palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 2.* PI * (c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col;\n    float m = iMouse.x / iResolution.x;\n    float t = (sin(iTime ) * 0.5 + 0.5) * 0.5;\n    if(iMouse.z <= 0.)\n    {\n        m = 0.;\n    }else\n    {\n        t = 0.;\n    }\n    \n    float repeatTime = t + m;\n    vec2 uv = ((fragCoord - 0.5 * iResolution.xy) / iResolution.y) * SCALE + vec2(POSX , POSY );\n    uv += (vec2(iMouse.x / iResolution.x, iMouse.y / iResolution.y) *2. - 1.) * 00.1;\n\n    vec2 c = (uv) ;\n    vec2 z = vec2(0., 0.); \n\n    float d = 0.;\n    float step = mix(MAX_STEPS, 20.0, sin(iTime)* 0.5 + 0.5);\n\n    for(float i = 0.; i < step; i++)\n    {\n        vec2 z1 = vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y);\n        vec2 z2 = vec2(pow(z.x, 4.) + pow(z.y, 4.), 4. * pow(z.x, 3.) * z.y - 4. * z.x * pow(z.y, 3.));\n        z = mix(z1, z2, repeatTime * 0.3 + 0.2) + c;\n\n        if(length(z) > 2.) break;\n \n        d++;\n    }\n    float f = abs((d /step));\n    col = Palette( smoothstep(0., 1.0,f ) + 0.3 + iTime * 0.1, \n            vec3(0.500  , 0.500 , 0.500),\n             vec3(0.500, 0.500, 0.500),\n             vec3(0.800 , 0.800 , 1.000),\n             vec3(2.820, 3.026, -0.273));\n\n\n\n    fragColor = vec4(col , 1.0);  \n\n}\n\n","name":"Image","description":"","type":"image"}]}