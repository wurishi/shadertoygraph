{"ver":"0.1","info":{"id":"MctyWN","date":"1730689623","viewed":23,"name":"Bloobs ","username":"kevinreidelas","description":"Projeto 2 Computação Gráfica 2024/2","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bloobs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\n\nvec3 getCellColor(vec2 cellPos, float time)\n{\n    float seed = random(cellPos);\n    \n    return vec3(\n        0.7 + 0.5 * cos(seed * 4.0 + time * 0.3),\n        0.3 +0.6 * sin(2.0*(4.2+ seed * 4.0 + time * 0.3)),\n        1.0 + 1.0 * sin((2.1 + seed * 4.0 + time * 0.3))\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    vec2 uv = (fragCoord.xy - iResolution.xy/2.0)/iResolution.y;\n    uv -= 2.1;\n    uv.y -= 0.15;\n\n    vec2 cellSize = vec2(0.25);\n    vec2 cellPos = floor(uv / cellSize);\n    vec2 cellUV = fract(uv / cellSize);\n\n    vec3 cellColor = getCellColor(cellPos, iTime) + vec3(sin(iTime * random(cellPos)), cos(random(cellPos)*iTime), -sin(iTime*random(cellPos)));\n\n    float cellTimeOffset = random(cellPos) * 10.0;\n\n\n    float opacityTotal = 0.0;\n    int numBlobs = 6;\n\n    for (int i = 1; i < numBlobs; i++) {\n\n        float seed2 = random(cellPos*3.0-float(i))+cos(10.0)*0.5;\n        float ir = random(cellUV);\n        float angle = float(i) * 20.00 / float(numBlobs) + (iTime + cellTimeOffset) * 0.6*seed2;\n        float radius = 0.025*abs(sin(cellTimeOffset*iTime)*seed2) - 0.025 * cellTimeOffset*cos(seed2 * 3.0 + (iTime + cellTimeOffset)); \n        vec2 pos = vec2(cos(cellTimeOffset*iTime)*cos((angle - iTime+seed2)*20.0)*radius*cellTimeOffset*2.15, cos(cellTimeOffset*iTime)*sin(10.0*(angle + iTime -seed2))*cellTimeOffset) * radius * cellTimeOffset*cellTimeOffset*0.0015*seed2;\n\n\n        pos += vec2(0.5, 0.5) + 0.25 * vec2(sin(iTime + cellTimeOffset + float(i))- cos(iTime)*seed2*0.01*ir, cos(iTime + cellTimeOffset + float(i) * 1.5)- cellTimeOffset*sin(iTime)*seed2*ir*0.05);\n\n\n        float dist = length(cellUV - pos);\n        \n\n        float edgeWidth = 0.05 + 0.045 * sin((iTime + cellTimeOffset) * 2.0 * float(i) * 0.5);\n        float blobEdge = smoothstep(edgeWidth, 0.0, dist - 0.1);\n\n\n        float opacity = smoothstep(0.0, 0.2, dist*2.0);\n\n        float blob = blobEdge * opacity;\n\n\n        opacityTotal += blob;\n    }\n\n\n    fragColor = vec4(cellColor * (opacityTotal / max(opacityTotal, 1.0)), min(opacityTotal * 0.8, 1.0));\n}","name":"Image","description":"","type":"image"}]}