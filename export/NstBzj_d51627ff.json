{"ver":"0.1","info":{"id":"NstBzj","date":"1656881117","viewed":50,"name":"Buratino123","username":"Shumskiy","description":"sadf","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["buratino"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    bool ellipse (vec2 center, vec2 point, vec2 coefficient, float r){\n      float scaleY = iResolution.y / iResolution.x;\n       return ((coefficient.x * (point.x - center.x) * (point.x - center.x) + coefficient.y * (point.y - center.y) * (point.y - center.y) * (scaleY * scaleY)) <= r);\n    }\n\n    bool circle(vec2 p, vec2 c, float r){\n      // нормализируем экран для того, чтоб круг был кругом, а не элипсом \n      float scaleY = iResolution.y / iResolution.x;\n       return (p.x - c.x) * (p.x - c.x) + (p.y   - c.y) * (p.y - c.y) * (scaleY * scaleY) < r*r; \n    }\n\n    bool triangle (vec2 a, vec2 b, vec2 c, vec2 point){\n      //данное условие определяет принадлежит ли точка треугольнику \n      float z1 = (a.x - point.x) * (b.y - a.y) - (b.x - a.x) * (a.y - point.y);\n      float z2 = (b.x - point.x) * (c.y - b.y) - (c.x - b.x) * (b.y - point.y);\n      float z3 = (c.x - point.x) * (a.y - c.y) - (a.x - c.x) * (c.y - point.y);\n       return((z1 >= 0. && z2 >=0. && z3 >= 0.) || (z1 <= 0. && z2 <= 0. && z3 <= 0.));  \n    } \n\n    bool rectangle(vec2 a, vec2 b, vec2 point){\n      return((point.x > a.x && point.x < b.x) && (point.y < a.y && point.y > b.y));//a – верхний правый угол, b – нижний левый угол \n    }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //ставим диапазон от 0 до 1\n    vec2 crd = fragCoord/iResolution.xy;\n     \n    fragColor = vec4(0.900,0.847,0.542,1.000);//color of background\n     //head\n     if(circle(crd, vec2(0.4, 0.575), 0.081))\n       fragColor = vec4(1.0, 0.75, 0.5, 1.0);\n     //eye  \n     if(circle(crd, vec2(0.43, 0.618), 0.02))\n       fragColor = vec4(0.020,0.019,0.019,1.000); \n     if(circle(crd, vec2(0.429, 0.626), 0.02))\n       fragColor = vec4(1.0, 0.75, 0.5, 1.0);\n     //tear\n     if(circle(crd, vec2(0.435, 0.557), 0.0062))\n       fragColor = vec4(0.123,0.622,0.995,0.9);\n     if(triangle(vec2(0.43, 0.555),vec2(0.44,0.555),vec2(0.435, 0.58),crd))\n       fragColor = vec4(0.123,0.622,0.995,0.9);\n     //nose\n     if(triangle(vec2(0.46, 0.592),vec2(0.46,0.542),vec2(0.76, 0.567),crd))\n       fragColor = vec4(1.0, 0.75, 0.5, 1.0);\n     //mouth\n     if(triangle(vec2(0.453, 0.466),vec2(0.458,0.475),vec2(0.432, 0.491),crd))\n       fragColor = vec4(0.020,0.019,0.019,1.000);\n     //cheek\n     if(circle(crd, vec2(0.4185, 0.522), 0.018))\n       fragColor = vec4(1.000,0.418,0.323,1.000);\n     //hat\n     if(circle(crd, vec2(0.4, 0.958), 0.022))\n       fragColor = vec4(0.895,0.060,0.120,1.000);\n     if(triangle(vec2(0.33, 0.7),vec2(0.47,0.7),vec2(0.4, 0.965),crd))\n       fragColor = vec4(0.895,0.060,0.120,1.000);\n     if(ellipse(vec2(0.4,0.7), crd, vec2(0.08,3.6), 0.0006))\n       fragColor = vec4(0.850,0.057,0.114,1.000);\n     //neck\n     if(rectangle(vec2(0.38, 0.45), vec2(0.42, 0.3), crd))\n       fragColor = vec4(1.0, 0.75, 0.5, 1.0);\n     //torso\n     if(ellipse(vec2(0.4,0.2), crd, vec2(0.18,0.08), 0.001))\n       fragColor = vec4(0.915,0.068,0.007,1.000);\n     if(ellipse(vec2(0.4,0.36), crd, vec2(0.2,0.88), 0.0004))\n       fragColor = vec4(1.0,1.0,1.0,1.0);\n     //arm\n     if(ellipse(vec2(0.4,0.2), crd, vec2(0.5,0.07), 0.0004))\n       fragColor = vec4(0.745,0.059,0.080,1.000);\n     //buttons\n     if(circle(crd, vec2(0.45, 0.3), 0.014))\n       fragColor = vec4(1.0,1.0,1.0,1.0);\n     if(circle(crd, vec2(0.4593, 0.22), 0.014))\n       fragColor = vec4(1.0,1.0,1.0,1.0);\n     if(circle(crd, vec2(0.455, 0.135), 0.014))\n       fragColor = vec4(1.0,1.0,1.0,1.0);  \n}","name":"Image","description":"","type":"image"}]}