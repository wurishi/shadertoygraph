{"ver":"0.1","info":{"id":"M3sGR4","date":"1707218562","viewed":62,"name":"color gradients (linear)","username":"thomThalas","description":"It interpolates between colors.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    Ramp[colorRamps] ramps = Ramp[colorRamps]\n    (\n        Ramp(vec3(0.),         0.),\n        Ramp(vec3(1.),         0.25),\n        Ramp(vec3(0., 1., 0.), 0.5),\n        Ramp(vec3(1., 0., 0.), 0.75),\n        Ramp(vec3(0., 0., 1.), 1.)\n    );\n    \n    vec3 color = colorRamp(ramps, uv.x);\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define colorRamps 5\n\nfloat interp(float a, float b, float x)\n{\n    return 1./(b-a)*x+a/(a-b);\n}\n\nstruct Ramp\n{\n    vec3 color;\n    float pos;\n};\n\nvec3 colorRamp(Ramp[colorRamps] ramps, float t)\n{\n    if(t < ramps[0].pos)\n    {\n        return ramps[0].color;\n    }\n    else if(t > ramps[ramps.length()-1].pos)\n    {\n        return ramps[ramps.length()-1].color;\n    }\n    int index = -1;\n    for(int i = 0; i < ramps.length()-1; i++)\n    {\n        if(ramps[i].pos < t && ramps[i+1].pos > t)\n        {\n            index = i;\n            break;\n        }\n    }\n    \n    if(index != -1)\n    {\n        float intrp = interp(ramps[index].pos, ramps[index+1].pos, t);\n        return mix(ramps[index].color, ramps[index+1].color, intrp);\n    }\n    return vec3(0.);\n    \n}","name":"Common","description":"","type":"common"}]}