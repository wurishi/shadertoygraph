{"ver":"0.1","info":{"id":"st23Dz","date":"1623767823","viewed":320,"name":"Distort climber","username":"MarioMey","description":"I was looking for a nice distorter and I take code from \"valuenoise perturb\" and from \"Raining On Your Screen\". I made my own.","likes":6,"published":1,"flags":2,"usePreview":1,"tags":["distort","deform","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on \"valuenoise perturb\", by blepfo\n// https://www.shadertoy.com/view/WdfBWN\n// and  \"Raining On Your Screen\", by TomoAlien\n// https://www.shadertoy.com/view/4dXSzB\n\n#define RAND_SEED (283846.698)\n\nfloat globalScale = 10.; // from 0. to whatever you want\nfloat deformation = .1; // from 0. to .5\nfloat velocity = 10.0; // accept negative numbers\nfloat amplitude = 0.; // noise has a oscilator, play with it\n\nvec2 translate(vec2 uv, vec2 t) {\n    return uv - t;\n}\n\nmat2 rotate2d(float theta) {\n    return mat2(cos(theta), -sin(theta),\n                sin(theta), cos(theta));\n}\n\n\nfloat random2(vec2 uv) {\n    return fract(\n        RAND_SEED\n        * (sin(dot(uv, vec2(21.12, 17.23)))\n        \t+ cos(dot(uv, vec2(12.2241, 22.433)))\n        )\n    );\n}\n\n\nfloat smoothRand(float x, vec2 blur) {\n    float i = floor(x);\n    return mix(random2(vec2(i)), random2(vec2(i+1.)), smoothstep(blur[0], blur[1], fract(x)));\n}\n\n\nfloat valueNoise(vec2 uv) {\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    float a = random2(i);\n    float b = random2(i + vec2(1., 0));\n    float c = random2(i + vec2(0., 1.));\n    float d = random2(i + vec2(1., 1.));\n\tvec2 u = smoothstep(0., 1., f);\n    // Bilinear\n    float ab = mix(a, b, u.x);\n    float cd = mix(c, d, u.x);\n    return mix(ab, cd, u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = gl_FragCoord.xy/iResolution.xy;\n\n    uv = translate(uv, vec2(0.5));\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec2 scaleLayer = uv*globalScale;\n    \n    float noiseScale = 1.;\n    vec2 noiseLayer = translate(scaleLayer*noiseScale, vec2(2.848*sin(iTime*amplitude),velocity*iTime));\n    float vNoise = (2. * valueNoise(noiseLayer)) - 1.;\n\n    vec3 raintex = vec3(vNoise * deformation);\n\n    uv.x /= iResolution.x/iResolution.y;\n    uv = translate(uv, vec2(-0.5));\n\n    vec2 where = uv.xy - raintex.xy;\n    vec4 fg = texture(iChannel0,vec2(where.x,where.y)).rgba;\n \n    fragColor = vec4(fg);\n    \n}","name":"Image","description":"","type":"image"}]}