{"ver":"0.1","info":{"id":"mtj3RV","date":"1673563272","viewed":122,"name":"Illusion of motion via time offs","username":"AnonN10","description":"...et of the colormap based on the cosine between flow direction towards the border and desired flow direction.\nUse mouse to control desired flow direction (hold and drag).","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["atleastonetag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sqr(float x) {return x*x;}\n\nvec3 colormap(float time)\n{\n    return 0.5 + 0.5*cos(time+vec3(0,2,4));\n}\n\nvec2 frag2view(vec2 fragcoord)\n{\n    vec2 uv = fragcoord/iResolution.x;\n    vec2 coord = (uv*2.0-1.0)*3.0;\n    coord.y += 1.33333;\n    return coord;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = frag2view(fragCoord);\n    vec2 mousecoord = frag2view(iMouse.xy);\n    \n    float circle = 1.0-clamp(pow(sqr(coord.x)+sqr(coord.y)-1.0, 7.0), 0.0, 1.0);\n    vec2 flow_vector = normalize(coord);\n    //signed\n    float flow_time_offset_mask = circle*dot(flow_vector, normalize(mousecoord-coord)*(1.0-circle));\n\n    vec3 col = colormap(iTime*10.0+flow_time_offset_mask*10.0)*circle;\n    \n    //debug display\n    //col = vec3(circle);\n    //col = vec3(flow_vector, 0.0);\n    //col = vec3(flow_time_offset_mask, -flow_time_offset_mask, 0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}