{"ver":"0.1","info":{"id":"ctdyWX","date":"1699744146","viewed":76,"name":"Fractal shrinking star","username":"Ukonhattu","description":"Learning about shaders, did some nonsense!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","palette","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 paletteA (in float t) {\n    vec3 a = vec3(0.137, 0.354, 0.071);\n    vec3 b = vec3(0.686, 0.478, 0.149);\n    vec3 c = vec3(0.945, 1.564, 0.030);\n    vec3 d = vec3(4.684, 5.160, 3.920);\n    return palette(t, a, b, c, d);\n}\n\nfloat sdStar( in vec2 p, in float r )\n{\n    const vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n    p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n    return length(p)*sign(p.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n            // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord*2.0 - iResolution.xy) / iResolution.y;\n    \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.);\n    \n    for (float i = 1.; i<3.;i++) {\n    \n        uv = fract(uv * 1.5) - .5;\n\n        float d = sdStar(uv, .3)\n        * exp(-sdStar(uv, .7));\n\n        vec3 col = paletteA(sdStar(uv0, .5)+ i*.1 + iTime*.1);\n\n        d = (cos(d*80. + iTime*.01)/80.) + sin(d*333. + iTime*.01)/300.\n        + tan (d*160. + iTime*.01)/160.;\n        d = abs(d);\n        d = pow(0.01 / d, 1.3);\n        d = 0.01 / d;\n\n        finalColor += col*d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n\n\n}","name":"Image","description":"","type":"image"}]}