{"ver":"0.1","info":{"id":"3sjyDK","date":"1587347044","viewed":83,"name":"TORUSEVIL","username":"cherkesgiller","description":"inspired by : https://www.shadertoy.com/view/ts2XDw","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","torus","uvmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CAM_HEIGHT 0.\n#define CAM_DEPTH -1.\n#define MAX_STEPS 100\n#define O_RADIUS 1.\n#define I_RADIUS .75\n#define SURF_DIST 0.001\n\n// TESTING PURPOSES ONLY !\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    uv.x = abs(uv.x);\n    \n    // Camera setup\n    vec3 ro = vec3(.0, CAM_HEIGHT, CAM_DEPTH);\n    vec3 lookAt = vec3(.0);\n    vec3 worldUp = vec3(.0,1.,.0);\n    float zoom = 0.5;\n    \n    vec3 f  = normalize(lookAt - ro);\n    vec3 r  = normalize(cross(worldUp, f));\n    vec3 u  = cross(f,r);\n    vec3 c  = ro + f * zoom;\n    vec3 i  = c + uv.x * r + uv.y * u;\n    vec3 rd = normalize(i - ro);\n    \n    // RayMarching\n    float dS,dO;\n    vec3 p;\n    \n    for (int i = 0; i < MAX_STEPS; ++i) {\n    \tp = ro + rd * dO;\n        dS = -(length(vec2(length(p.xz) - O_RADIUS,p.y)) - I_RADIUS);\n        if (dS < SURF_DIST) break;\n        dO += dS;\n    }\n    \n    vec3 col = vec3(0.);\n    if (dS < SURF_DIST) {\n    \tfloat x = atan(p.x,p.z);\n        float y = atan(length(p.xz) - O_RADIUS, p.y);\n        \n        float gau = sin(x*y);\n        float bands = sin(iTime + y * 20.0 + x * 20.);\n        \n        float b1 = smoothstep(-.2,.2,bands);\n        float g1 = smoothstep(-.2,.2,gau - 0.5);\n        \n        \n        float p =  b1;\n\n        col = vec3(p);\n    }\n    \n\t\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}