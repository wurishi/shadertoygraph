{"ver":"0.1","info":{"id":"fslfWn","date":"1644762675","viewed":47,"name":"First wave test WIP","username":"zommuter","description":"WIP","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    //fragColor = vec4(col,1.0);\n    \n    /*\n    if(uv.x < .5)\n        fragColor = texture(iChannel0, vec2(2.,1.)*uv);\n    else\n        fragColor = texture(iChannel1, vec2(2.,1.)*(uv - vec2(0.5, 0.0)));\n    */\n    \n    fragColor = vec4(texture(iChannel0, uv).r, texture(iChannel1, uv).g, .0*length(uv - vec2(.5,.5)), 1.0);\n    //fragColor = vec4(fract(texture(iChannel0, uv).r), fract(texture(iChannel1, uv).g), .0*length(uv - vec2(.5,.5)), 1.0);\n    //fragColor = vec4((1.+tanh(texture(iChannel0, uv).r))/2., (1.+tanh(texture(iChannel1, uv).g))/2., .0*length(uv - vec2(.5,.5)), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// f(x,y,t)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if(iFrame == 0) {\n        //fragColor = vec4(sin(30.*uv.x), cos(150.*uv.y), 0.0, 0.0); \n        //fragColor = vec4(0.0);\n        fragColor = .5 + 1.9*vec4(smoothstep(.25, .0, length(uv - vec2(.5, .5))));\n        //fragColor = .5 + .5*tanh(1.9*vec4(smoothstep(.25, .0, length(uv - vec2(.5, .5)))));\n    } else {\n        //vec4 f = 2.*atanh(texture(iChannel0, uv))-1.;\n        //vec4 ft = 2.*atanh(texture(iChannel1, uv))-1.;\n        vec4 f = texture(iChannel0, uv);\n        vec4 ft = texture(iChannel1, uv);\n        f += ft*dt; //+ sin(iTime);\n        //fragColor = .5+ .5*tanh(f + smoothstep(.1, .0, length(uv - vec2(.5)))*sin(2.*3.1415926*1.*iTime*dt));\n        fragColor = f + smoothstep(.1, .0, length(uv - vec2(.5)))*sin(2.*3.1415926*1.*iTime*dt);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// \\dot{f}(t)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if(iFrame == 0) {\n        fragColor = vec4(0.0);\n        //fragColor = vec4(sin(30.*uv.y), cos(150.*uv.x), 0.0, 0.0); \n    } else {\n        //vec4 f = texture(iChannel0, fragCoord);\n        //vec4 ft = 2.*atanh(texture(iChannel1, uv))+1.;\n        vec4 ft = texture(iChannel1, uv);\n        ft += c*c*laplace2(iChannel0, uv, iResolution)*dt;\n        //ft *= .999;\n        fragColor = ft;\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float dt = 1e-1;\nconst float dx = 1e-1;\nconst float c = 1e-2;\n\n// f(x + dx) = f(x) + f'(x)dx + f''(x) dx^2/2 + ...\n// => f''(x) = (f(x+h) - 2*f(x) + f(x-h)) / h^2\nvec4 laplace2(sampler2D channel, vec2 uv, vec3 iResolution) {\n    float dy = iResolution.y/iResolution.x * dx;\n    return (\n     texture(channel, uv + vec2(-dx, 0.0)) - 2.0 * texture(channel, uv) + texture(channel, uv + vec2(+dx, 0.0))\n    +texture(channel, uv + vec2(0.0, -dy)) - 2.0 * texture(channel, uv) + texture(channel, uv + vec2(0.0, +dy))\n    ) / dx / dx;\n}","name":"Common","description":"","type":"common"}]}