{"ver":"0.1","info":{"id":"msXSRM","date":"1668622143","viewed":58,"name":"Tutorial_2_rectangle","username":"enzzz","description":"rectangle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float border(float axis, float s, float e, float blur)\n{\n    float b1 = smoothstep(s+blur*.5, s-blur*.5, axis);\n    float b2 = smoothstep(e+blur*.5, e-blur*.5, axis);\n    return b2 - b1;\n}\n\n\nfloat rect(vec2 uv, float l, float b, float w, float h, float blur)\n{\n    float vertical = border(uv.x, l, l + w, blur);\n    float horizontal = border(uv.y, b, b + h, blur);\n    return clamp(vertical + horizontal - 1., 0.0, 1.0);\n}\n\n\nfloat remap(float e0, float e1, float v0, float v1, float in_v)\n{\n     // as input increase from e0 to e1, the return valur increase from v0 to v1\n     float coefficient = (in_v - e0) / (e1 - e0);\n     return v0 + (v1 - v0) * coefficient;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord -.5*iResolution.xy )/ iResolution.y;    \n    float x, y, l, b, w, h, blur, red, green, blue;\n    vec3 col = vec3(0.0);\n   \n    \n    x = uv.x;\n    y = uv.y;\n    l = -0.7 + y * 0.3;\n    b = -0.45;\n    w = 0.1 - y * 0.6;\n    h = 0.3;\n    blur = 1.0/iResolution.y;\n    float rect1 = rect(vec2(x, y ),l, b, w, h, blur);\n    //col += vec3(rect1);\n        \n    x = uv.x - .2;\n    float m = -(x -.5) * (x + .5);\n    float mm = m * m * 4.0 -.4;\n    y = uv.y + mm * -1.;\n    l = -.6;\n    b = 0.0;\n    w = 1.2;\n    h = 0.03;\n    float rect2 = rect(vec2(x, y), l, b, w, h, blur);\n    //col += vec3(rect2);\n    \n    \n    x = uv.x;\n    y = uv.y + sin(x * 5.0 - iTime)*.1 - .15;\n    l = -0.9;\n    b = 0.0;\n    w = 2.0;\n    red = remap(l, l+w, .0, 1., x);\n    green = remap(l, l+w, .5, .7, x);\n    blue = remap(l, l+w, .3, .9, x);\n    h = remap(l, l+w, 0.0, .2, x);\n    blur = remap(l, l+w, 1.0 / iResolution.y, 0.5, x);\n    blur = pow(blur * 1.5, 2.);\n    float rect3 = rect(vec2(x,y), l, b, w, h, blur);\n    col += rect3 * vec3(red, green, blue);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}