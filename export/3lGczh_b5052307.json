{"ver":"0.1","info":{"id":"3lGczh","date":"1610420913","viewed":128,"name":"Intersection capsule test","username":"gaz","description":"3d","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raycast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nmat3 lookat(vec3 eye, vec3 target, vec3 up)\n{\n    vec3 w = normalize(target-eye), u = normalize(cross(w,up));\n    return mat3(u,cross(u,w),w);\n}\n\nvec2 intersect(vec3 ro, vec3 rd, inout vec3 a, vec3 b,float r)\n{\n    vec3 ab=b-a,ao = a-ro;\n    float len=length(ab);\n    if(len>0.)ab/=len;\n\tfloat d0=dot(rd, ab);\n\tfloat d1=dot(rd, ao);\n\tfloat d2=dot(ab, ao);\n    a+=ab*clamp((d0*d1-d2)/(1.-d0*d0),0.,len);;\n    vec3 u=cross(a-ro,rd);\n    float h=r*r-dot(u,u);\n    return h>=0.?vec2(-1,1)*sqrt(h)+dot(a-ro,rd):vec2(-1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor=vec4(0);\n    vec2 uv=(fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 rd=normalize(vec3(uv,1));\n    vec3 ro=vec3(0,0,3);\n    vec3 ta=vec3(0);\n    ro.xz*=rot(iTime);\n    rd=lookat(ro,ta,vec3(0,1,0))*rd;\n    vec3 a=vec3(.5);\n    vec3 b=vec3(-.5);\n    float g=intersect(ro,rd,a,b,.3).x;\n    if(g>=0.)\n    {\n        vec3 p=ro+g*rd;\n        vec3 n=normalize(p-a);\n        fragColor.xyz+=n;\n    }\n}","name":"Image","description":"","type":"image"}]}