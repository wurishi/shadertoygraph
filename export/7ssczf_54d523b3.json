{"ver":"0.1","info":{"id":"7ssczf","date":"1663775818","viewed":143,"name":"guitat","username":"elirockenbeck","description":"basic edge detection using central differences.","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["basic","detection","edge"],"hasliked":0,"parentid":"td2yDm","parentname":"Shader : Edge Detection"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define blur 1\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float blur = .5;\n    float brightness = 10.;\n    \n    \n\tvec4 n = texture(iChannel0, (fragCoord+vec2(0,blur))/iResolution.xy);\n    vec4 e = texture(iChannel0, (fragCoord+vec2(blur,0))/iResolution.xy);\n    vec4 s = texture(iChannel0, (fragCoord+vec2(0,-blur))/iResolution.xy);\n    vec4 w = texture(iChannel0, (fragCoord+vec2(-blur,0))/iResolution.xy);\n\n    vec4 dy = (n - s)*.5;\n    vec4 dx = (e - w)*.5;\n    \n    vec4 edge = sqrt(dx*dx + dy*dy);\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    int tx = int(uv.x*512.0);\n    float fft  = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n    vec4 col =  texture(iChannel1, uv);\n    fragColor.xyz = mix( (brightness / 4.0) * edge.xyz, col.xyz, vec3(0.5,.5,.5))  * brightness;\n \n}","name":"Image","description":"","type":"image"}]}