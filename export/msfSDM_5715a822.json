{"ver":"0.1","info":{"id":"msfSDM","date":"1669608696","viewed":62,"name":"rainbow polybrot for varying z","username":"janpitokiala","description":"rainbow mandelbrot set for varying powers, with z starting at mouse cursor","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","rainbow","tribrot"],"hasliked":0,"parentid":"DdsSR7","parentname":"rainbow polybrot"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 square(in vec2 num, in int power) {\n    vec2 final = vec2(1.,0.);\n    for(int i = 0;i<power;i=i+1) {\n        final=vec2(num.x*final.x-num.y*final.y,num.x*final.y+num.y*final.x);\n    }\n    return final;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    int power = int(floor(iTime/5.))+2;\n    vec2 muv = iMouse.xy/iResolution.xy;\n    muv += iMouse.xy==vec2(0.,0.)?.5:0.;\n    uv.x = 5.*uv.x - 2.5;\n    muv.x = 5.*muv.x - 2.5;\n    uv.y = 3.*uv.y - 1.5;\n    muv.y = 3.*muv.y - 1.5;\n    vec2 z = muv;\n    vec3 col = vec3(0.,0.,0.);\n    for(int i = 0;i < 255; i = i + 1) {\n        z = square(z, power) + uv;\n        if (length(z) > 2.) {\n            float tint = float(i)/16.0;\n            col = tint*sin(iTime+vec3(0.,2.,4.));\n            break;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}