{"ver":"0.1","info":{"id":"dl2cDd","date":"1692735541","viewed":93,"name":"Hilbert curve sound to image","username":"rokas","description":"Inspired by https://www.shadertoy.com/view/fddXRj","likes":1,"published":1,"flags":4,"usePreview":0,"tags":["hilbercurve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 magic(float x) {\n    // x ranges from 0 to 1\n    vec3 r = vec3(1., 0., 0.);\n    vec3 g = vec3(0., 1., 0.);\n    vec3 b = vec3(0., 0., 1.);\n    \n    if (x < 0.5)\n        return mix(b, g, x * 2.);\n    else\n        return mix(g, r, (x - 0.5) * 2.);\n}\n\nvec3 hsv2rgb(in vec3 c){\n    vec3 rgb=clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z*mix(vec3(1.0),rgb,c.y);\n}\n    \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x / iResolution.y;\n    uv.x *= ar;\n    uv.x -= ar / 2. - 0.5;\n    if (uv.x < 0. || uv.x > 1.) {\n        fragColor = vec4(0);\n        return;\n    }\n       \n    vec2 uv0 = uv;\n    int NUM_IT = 9;\n    \n    float res = 0.;\n    float st = 0.25;\n    \n    for (int i = 0; i < NUM_IT; ++i) {\n        if (uv.x < 0.5) {\n            if (uv.y < 0.5)\n                uv = uv.yx;\n            else\n                res += st;\n        }\n        else {\n            if (uv.y < 0.5) {\n                uv = uv.yx;\n                uv = 1. - uv;\n                res += st * 3.;\n            }\n            else\n                res += st * 2.;\n        }\n        \n        st /= 4.;\n        uv *= 2.;\n        uv = fract(uv);\n    }\n    \n    float LOOP_T = 100.;\n    float t = mod(iTime, LOOP_T) / LOOP_T;\n    \n    float vol = textureLod( iChannel0, vec2(res,0.25), 0.0 ).x;\n    //vec3 col = magic(res) * (1. - mod(t - res, 1.));\n    \n    // vec3 col = vol * (0.5 + 0.5*cos(5.+uv0.xyx+vec3(0,2,4)));\n    float hue = (2. / 3. - vol * 2./3.);\n    vec3 col = hsv2rgb(vec3(hue, 1., vol));\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}