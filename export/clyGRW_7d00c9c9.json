{"ver":"0.1","info":{"id":"clyGRW","date":"1683600929","viewed":56,"name":"线性渐变 多段实现","username":"lvyerose","description":"线性渐变-多段实现，理论可以无限加点，其中 a , b , c ...n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradual"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SRGB_TO_LINEAR(c) pow((c), vec3(2.2))\n#define LINEAR_TO_SRGB(c) pow((c), vec3(1.0 / 2.2))\n#define SRGB(r, g, b) SRGB_TO_LINEAR(vec3(float(r), float(g), float(b)) / 255.0)\n\nconst vec3 COLOR0 = SRGB(255, 0, 114);\nconst vec3 COLOR1 = SRGB(0, 255, 200);\nconst vec3 COLOR2 = SRGB(197, 255, 80);\n\nfloat gradientNoise(in vec2 uv)\n{\n    const vec3 magic = vec3(0.06711056, 0.00583715, 52.9829189);\n    return fract(magic.z * fract(dot(uv, magic.xy)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 a; // First gradient point.\n    vec2 b; // Second gradient point.\n    vec2 c;\n    if (iMouse == vec4(0.0)) {\n        a = 0.1 * iResolution.xy;\n        b = iResolution.xy;\n    } else {\n        a = abs(iMouse.zw);\n        c = iMouse.xy;\n        b = vec2((a.x + c.x) / 2.0 , (a.y + c.y) / 2.0);\n    }\n    vec3 startColor = COLOR0;\n    vec3 endColor = COLOR1;\n    // Calculate interpolation factor with vector projection.\n    vec2 ba = b - a;\n    float t = dot(fragCoord - a, ba) / dot(ba, ba);\n    if(t > 1.0) {\n        vec2 cb = c - b;\n        t = dot(fragCoord - b, cb) / dot(cb, cb);\n        startColor = COLOR1;\n        endColor = COLOR2;\n    \n    }\n    // Saturate and apply smoothstep to the factor.\n    t = smoothstep(0.0, 1.0, clamp(t, 0.0, 1.0));\n    // Interpolate.\n    vec3 color = mix(startColor, endColor, t);\n\n    // Convert color from linear to sRGB color space (=gamma encode).\n    color = LINEAR_TO_SRGB(color);\n\n    // Add gradient noise to reduce banding.\n    color += (1.0/255.0) * gradientNoise(fragCoord) - (0.5/255.0);\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}