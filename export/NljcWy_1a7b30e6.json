{"ver":"0.1","info":{"id":"NljcWy","date":"1650214343","viewed":72,"name":"sin stuff","username":"ph04","description":"that's a sine wave, what did you expect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sin","curves","sine","ball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float customSin(float x) {\n    return 0.3 * sin(sin(iTime * 2.0) * 15.0 * x - iTime * 4.0);\n}\n\nvec4 drawSinWave(vec4 sinColor, vec4 originalColor, vec2 uv, float thickness) {\n    if (abs(customSin(uv.x) - uv.y) < thickness) {\n        return sinColor;\n    } else {\n        return originalColor;\n    }\n}\n\nvec4 drawSinCircle(vec4 circleColor, vec4 originalColor, vec2 uv, float x, float r) {\n    vec2 center = vec2(x, customSin(x));\n    \n    vec2 stretch = vec2(iResolution.x / iResolution.y, 1);\n    \n    if (length(stretch * (center - uv)) < r) {\n        return circleColor;\n    } else {\n        return originalColor;\n    }\n}\n\nfloat derivativeCustomSin(float x) {\n    float f = sin(iTime * 2.0) * 15.0;\n    \n    return 0.3 * cos(f * x - iTime * 4.0) * f;\n}\n\nvec4 drawSinTangent(vec4 lineColor, vec4 originalColor, vec2 uv, float x, float thickness) {\n    float m = derivativeCustomSin(x);\n    float q = customSin(x) - m * x;\n    \n    if (abs(m * uv.x + q - uv.y) < thickness) {\n        return lineColor;\n    } else {\n        return originalColor;\n    }\n}\n\nvec2 rotateVector(vec2 inputVec, float k, vec2 offset) {\n    float c = cos(iTime);\n    float s = sin(iTime);\n\n    return k * mat2(c, s, -s, c) * (inputVec - offset);\n}\n\nvec4 evaluateBackground(vec2 uv) {\n    return 0.5 + 0.3 * cos(iTime + uv.xyxy + vec4(0, 2, 4, 0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragCoord = rotateVector(fragCoord, 2.5, iResolution.xy * 0.5);\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec4 bgColor = evaluateBackground(uv);\n    \n    fragColor = drawSinWave(vec4(0, 0, 0, 0), bgColor, uv, 0.005);\n    \n    fragColor = drawSinTangent(vec4(0, 0, 1, 1), fragColor, uv, 0.5, 0.008);\n    \n    fragColor = drawSinCircle(vec4(1, 0.5, 1, 1), fragColor, uv, 0.5, 0.05);\n}","name":"Image","description":"","type":"image"}]}