{"ver":"0.1","info":{"id":"4ct3RB","date":"1711837033","viewed":162,"name":"20240331_revision jam","username":"0b5vr","description":"My live coded shader @ Revision Shader Jam w/ h0ffman x Teo\nCoded in 120min. not planned at all.\nWanted to try the Leon Denise's \"gyroid\" fbm function. It's pretty much same as Cyclic Noise but tastes slightly different.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d","noise","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define saturate(x) clamp(x,0.,1.)\n#define linearstep(a,b,t) saturate( ( (t)-(a) ) / ( (b)-(a) ) )\n#define lofi(i,j) (floor((i)/(j))*(j))\n#define repeat(i,n) for(int i=0;i<n;i++)\n\nconst vec3 PURPLE=vec3(.1,.02,1);\n\nfloat time;\n\nvec3 ponky(vec3 p,float pers){\n  vec4 sum=vec4(1E-4);\n  repeat(i,4){\n    p=2.*p.yzx+sin(p)+sum.xyz/sum.w;\n    sum=(sum+vec4(cross(sin(p.zxy),cos(p)),1))/pers;\n  }\n  return sum.xyz/sum.w;\n}\n\nvec2 cis(float t){\n  return vec2(cos(t),sin(t));\n}\n\nvec4 smin(vec4 a,vec4 b,float k){\n  vec4 h=max(k-abs(a-b),0.0)/k;\n  return min(a,b)-h*h*h*k/6.;\n}\n\nvec3 smin(vec3 a,vec3 b,float k){\n  return smin(vec4(a,0),vec4(b,0),k).xyz;\n}\n\nvec2 smin(vec2 a,vec2 b,float k){\n  return smin(vec4(a,0,0),vec4(b,0,0),k).xy;\n}\n\nfloat smin(float a,float b,float k){\n  return smin(vec4(a,0,0,0),vec4(b,0,0,0),k).x;\n}\n\nfloat sdbox(vec3 p,vec3 s){\n  vec3 d=abs(p)-s;\n  return min(max(max(d.x,d.y),d.z),0.)+length(max(d,0.));\n}\n\nvec4 map(vec3 p){\n  vec3 pt=smin(p,-p,.5);\n  pt+=.2*ponky(2.*pt+vec3(5.0*cis(time/20.0),0),.5);\n  float d=abs(sdbox(pt,vec3(1.3,.3,.2)));\n  d+=.1*ponky(3.*pt+vec3(8.0*cis(2.+time/20.0),0),.5).x;\n  d-=.05;\n  d=-smin(-d,length(p)-.5,.2);\n  \n  pt.y+=0.8;\n  float d2=abs(sdbox(pt,vec3(5,.0,.2)));\n  d2+=.1*ponky(3.*pt+vec3(8.0*cis(4.+time/20.0),0),.5).x;\n  d2-=.1;\n  d=smin(d,d2,.2);\n  \n  d=-smin(-d,length(p)-.5,.2);\n  \n  pt=smin(p,-p,.1);\n  pt+=.1*ponky(pt+vec3(5.0*cis(2.+time/10.0),0),.5);\n  d=smin(d,length(pt)-.3,.1);\n  \n  pt=p;\n  pt.xy=abs(pt.xy);\n  d=min(\n    d,\n    sdbox(pt-vec3(0,1.9,1),vec3(100,1,1))\n  );\n  d=min(\n    d,\n    sdbox(pt-vec3(2.6,0,1),vec3(1,100,1))\n  );\n  \n  return vec4(.5*d,0,0,0);\n}\n\nvec3 nmap(vec3 p){\n  vec2 d=vec2(0,1E-4);\n  return normalize(vec3(\n    map(p+d.yxx).x-map(p-d.yxx).x,\n    map(p+d.xyx).x-map(p-d.xyx).x,\n    map(p+d.xxy).x-map(p-d.xxy).x\n  ));\n}\n\nvec3 bg(vec2 p){\n  float shape=max(\n    smoothstep(.98,.99,cos(p.x*40.0)),\n    smoothstep(.98,.99,cos(p.y*40.0+10.0*time))\n  );\n  return saturate(PURPLE*shape);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  time=iTime;\n  \n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec2 p=uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n  \n  if(abs(p.x)>1.62||abs(p.y)>.92){\n    p=lofi(p,.01);\n    p=smin(p,-p,.1);\n    vec3 n=sin(9.0*ponky(vec3(4.0*p,time),.5));\n    fragColor=vec4(.2*PURPLE * step(.5,n.x),0);\n    fragColor.xyz=pow(fragColor.xyz,vec3(.4545));\n    return;\n  }\n  if(abs(p.x)>1.6||abs(p.y)>.9){\n    fragColor=vec4(PURPLE,0);\n    fragColor.xyz=pow(fragColor.xyz,vec3(.4545));\n    return;\n  }\n\n  vec3 col=bg(p);\n  \n  // shadow\n  {\n    vec3 ro=vec3(p,-1);\n    vec3 rd=normalize(vec3(0,.2,1));\n    float rl;\n    float shadow=1.;\n    repeat(i,50){\n      float dist=map(ro+rd*rl).x;\n      if(dist<1E-4){\n        shadow=0.;\n        break;\n      }\n      shadow=min(shadow,4.*dist/rl);\n      rl+=dist;\n    }\n    col*=mix(1.,shadow,.99);\n  }\n  \n  vec3 ro=vec3(0,0,2);\n  vec3 rd=normalize(vec3(p,-2));\n  float rl;\n  vec3 rp;\n  vec4 isect;\n  \n  repeat(i,100){\n    isect=map(rp);\n    rl+=isect.x;\n    rp=ro+rd*rl;\n  }\n  \n  if(isect.x<1E-4){\n    vec3 l=normalize(vec3(1));\n    vec3 n=nmap(rp);\n    vec3 h=normalize(l-rd);\n    col=vec3(.0)*(.5+.5*dot(n,l));\n    \n    vec3 refl=reflect(rd,n);\n    col+=pow(.5+.5*ponky(2.*refl+time,.5).x,5.);\n    // col+=bg(.1*refl.xy);\n  }\n  \n  col=pow(col,vec3(.4545));\n\n\tfragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}