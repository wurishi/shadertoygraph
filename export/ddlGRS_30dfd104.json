{"ver":"0.1","info":{"id":"ddlGRS","date":"1666347330","viewed":299,"name":"Tubular trails","username":"z0rg","description":"Inspired by https://www.shadertoy.com/view/csXGzS","likes":10,"published":3,"flags":32,"usePreview":0,"tags":["particles","abstract","dots","tube","trails","tubular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 ouv = fragCoord/iResolution.xy;\n   vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xx;\n\n    ouv -= vec2(.5);\n    ouv *= .8; // To avoid seeing clamping on texture border\n    ouv *= r2d(.1*sin(length(uv)*20.+iTime));\n        ouv += vec2(.5);\n    vec3 col = texture(iChannel0, ouv).xyz;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 ouv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xx;\n    float sharp = iResolution.x;\n    vec3 col = texture(iChannel0, ouv).xyz;\n    float time = iTime;\n    float stp = .05;\n    time = floor(time/stp)*stp;\n    for (float i = 0.; i < 8.; ++i)\n    {\n        vec2 pos = uv*r2d((i/8.)*2.*PI)+vec2((sin(time*10.))*.02, pow(time*.1, .75));\n\n        float shape = length(pos)-mix(0.05, .02, sin(time*5.)*.5+.5);\n        float outline = abs(shape)-0.00005;\n        vec3 color = mix(vec3(.2,.4,.5), vec3(.2,.4,.5).zxy, sin(time*20.)*.5+.5);\n        vec3 rgb = mix(color*2., vec3(1.), sin(time*10.)*.5+.5);\n        col = mix(col, vec3(0.), 1.-sat(shape*sharp));\n        col = mix(col, rgb, 1.-sat(outline*sharp));\n        col += rgb *(1.-sat(outline*20.))*.01;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\n#define sat(a) clamp(a, 0., 1.)\n#define PI 3.14159265\nfloat hash11(float seed)\n{\n    return fract(sin(seed*123.456)*123.456);\n}\nmat2 r2d(float a) { float c = cos(a),s=sin(a);return mat2(c, -s, s, c);}\n","name":"Common","description":"","type":"common"}]}