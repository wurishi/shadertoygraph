{"ver":"0.1","info":{"id":"MccXR8","date":"1713549812","viewed":76,"name":"scenefx blur + effects shader","username":"ossian","description":"dual kawase blur (2 passes, radius 3)\ncolor transformations\nsimple prng noise","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["noise","blur","prng","kawase"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat4 brightnessMatrix() {\n\tfloat b = brightness - 1.0;\n\treturn mat4(1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tb, b, b, 1);\n}\n\nmat4 contrastMatrix() {\n\tfloat t = (1.0 - contrast) / 2.0;\n\treturn mat4(contrast, 0, 0, 0,\n\t\t\t\t0, contrast, 0, 0,\n\t\t\t\t0, 0, contrast, 0,\n\t\t\t\tt, t, t, 1);\n}\n\nmat4 saturationMatrix() {\n\tvec3 luminance = vec3(0.3086, 0.6094, 0.0820) * (1.0 - saturation);\n\tvec3 red = vec3(luminance.x);\n\tred.x += saturation;\n\tvec3 green = vec3(luminance.y);\n\tgreen.y += saturation;\n\tvec3 blue = vec3(luminance.z);\n\tblue.z += saturation;\n\treturn mat4(red, 0,\n\t\t\t\tgreen, 0,\n\t\t\t\tblue, 0,\n\t\t\t\t0, 0, 0, 1);\n}\n\nfloat noiseAmount(vec2 p) {\n\tvec3 p3 = fract(vec3(p.xyx) * 1689.1984);\n\tp3 += dot(p3, p3.yzx + 33.33);\n\tfloat hash = fract((p3.x + p3.y) * p3.z);\n\treturn (mod(hash, 1.0) - 0.5) * noise;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float noiseLevel = 0.05;\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    fragColor = brightnessMatrix() \n                * contrastMatrix() \n                * saturationMatrix()\n                * texture(iChannel0, uv);\n    fragColor.xyz += noiseAmount(uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// dual kawase blur downsample pass 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.xy / (iResolution.xy / 2.0));\n    vec2 halfpixel = 0.5 / (iResolution.xy / 2.0);\n\n    vec4 sum = texture(iChannel0, uv) * 4.0;\n    sum += texture(iChannel0, uv - halfpixel.xy * radius);\n    sum += texture(iChannel0, uv + halfpixel.xy * radius);\n    sum += texture(iChannel0, uv + vec2(halfpixel.x, -halfpixel.y) * radius);\n    sum += texture(iChannel0, uv - vec2(halfpixel.x, -halfpixel.y) * radius);\n\n    fragColor = sum / 8.0;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// dual kawase blur downsample pass 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.xy / (iResolution.xy / 2.0));\n    vec2 halfpixel = 0.5 / (iResolution.xy / 2.0);\n\n    vec4 sum = texture(iChannel0, uv) * 4.0;\n    sum += texture(iChannel0, uv - halfpixel.xy * radius);\n    sum += texture(iChannel0, uv + halfpixel.xy * radius);\n    sum += texture(iChannel0, uv + vec2(halfpixel.x, -halfpixel.y) * radius);\n    sum += texture(iChannel0, uv - vec2(halfpixel.x, -halfpixel.y) * radius);\n\n    fragColor = sum / 8.0;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// dual kawase blur upsample pass 1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.xy / (iResolution.xy * 2.0));\n    vec2 halfpixel = 0.5 / (iResolution.xy * 2.0);\n\n    vec4 sum = texture(iChannel0, uv +vec2(-halfpixel.x * 2.0, 0.0) * radius);\n    \n    sum += texture(iChannel0, uv + vec2(-halfpixel.x, halfpixel.y) * radius) * 2.0;\n    sum += texture(iChannel0, uv + vec2(0.0, halfpixel.y * 2.0) * radius);\n    sum += texture(iChannel0, uv + vec2(halfpixel.x, halfpixel.y) * radius) * 2.0;\n    sum += texture(iChannel0, uv + vec2(halfpixel.x * 2.0, 0.0) * radius);\n    sum += texture(iChannel0, uv + vec2(halfpixel.x, -halfpixel.y) * radius) * 2.0;\n    sum += texture(iChannel0, uv + vec2(0.0, -halfpixel.y * 2.0) * radius);\n    sum += texture(iChannel0, uv + vec2(-halfpixel.x, -halfpixel.y) * radius) * 2.0;\n\n    fragColor = sum / 12.0;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"// dual kawase blur upsample pass 2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.xy / (iResolution.xy * 2.0));\n    vec2 halfpixel = 0.5 / (iResolution.xy * 2.0);\n\n    vec4 sum = texture(iChannel0, uv +vec2(-halfpixel.x * 2.0, 0.0) * radius);\n    \n    sum += texture(iChannel0, uv + vec2(-halfpixel.x, halfpixel.y) * radius) * 2.0;\n    sum += texture(iChannel0, uv + vec2(0.0, halfpixel.y * 2.0) * radius);\n    sum += texture(iChannel0, uv + vec2(halfpixel.x, halfpixel.y) * radius) * 2.0;\n    sum += texture(iChannel0, uv + vec2(halfpixel.x * 2.0, 0.0) * radius);\n    sum += texture(iChannel0, uv + vec2(halfpixel.x, -halfpixel.y) * radius) * 2.0;\n    sum += texture(iChannel0, uv + vec2(0.0, -halfpixel.y * 2.0) * radius);\n    sum += texture(iChannel0, uv + vec2(-halfpixel.x, -halfpixel.y) * radius) * 2.0;\n\n    fragColor = sum / 12.0;\n}","name":"Buffer D","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":" // How many pixels away from the center to sample blur from when up/downscaling\nfloat radius = 3.0;\n\n// Post effects\nfloat brightness = 1.0;\nfloat contrast = 1.0;\nfloat saturation = 0.5;\nfloat noise = 0.05;","name":"Common","description":"","type":"common"}]}