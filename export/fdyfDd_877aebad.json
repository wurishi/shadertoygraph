{"ver":"0.1","info":{"id":"fdyfDd","date":"1658994108","viewed":368,"name":"delayed video","username":"FabriceNeyret2","description":"stores 96 video frames in the cubeMap ( 4x4 per face ).\nIn black & white we could store 384 frames ( = 6.4 \" )","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["video","cubemap","storage"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cubeMap utils inspired from https://www.shadertoy.com/view/3tGBDz\n\nvoid mainImage( out vec4 O, vec2 u )\n{ \n    vec2 R = iResolution.xy,\n         U = 4.*vec2(3,2)*u/R, \n         F = fract(U);                       // tileCoord\n    int  n = int(U.x) + 12*int(U.y);         // tileId\n    O = T((F+vec2(n%4,(n%16)/4))/4., n/16 ); // convert to faceCoord & faceId\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dX3Rr","channel":0}],"code":" void mainCubemap( out vec4 O, vec2 U, vec3 o, vec3 D )\n{\n    vec3 A = abs(D);\n    int n = A.x > A.y ? A.x > A.z ? 0 : 2 : A.y > A.z ? 1 : 2; // faceID\n    if (D[n]<0.) n += 3;\n      \n    vec2 I = floor(U/=256.);\n    if ( n==5 && I==vec2(3) ) O = texture(iChannel1, fract(U) );\n    else if    ( I!=vec2(3) ) O = T((I.x<3.? U+vec2(1,0) : U+vec2(-3,1))/4., n);\n    else                      O = T((U-3.)/4., n+1);\n    \n/*   // --- doesn't compile correctly on Windows Angle !\n    O = n==5 && I==vec2(3) ? texture(iChannel1, fract(U) )\n        :       I!=vec2(3) ? T((I.x<3.? U+vec2(1,0) : U+vec2(-3,1))/4., n)\n        :                    T((U-3.)/4., n+1);\n*/\n}\n\n","name":"Cube A","description":"","type":"cubemap"},{"inputs":[],"outputs":[],"code":"vec3 E; // mimic access to a set on n textures.\n#define T(U,n) ( E = vec3( 2.*fract(U) -1., 1 )                                 \\\n                   * vec3( n==0||n==5 ?-1:1 , n!=1 ?-1:1 , n>2 ?-1:1 ),         \\\n                 E = (n)%3 != 2 ? E.yzx : E.xzy,                                \\\n                 texture( iChannel0, vec3( E[(n+1)%3], E[(n)%3], E[(n+2)%3] ) ) \\\n               )\n\n","name":"Common","description":"","type":"common"}]}