{"ver":"0.1","info":{"id":"Xft3Rl","date":"1712021144","viewed":24,"name":"Medium Shader Project 3","username":"Markas09","description":"Medium ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["education"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Center coordinates\n    vec2 center = vec2(0.5);\n\n    // Distance from the center\n    float distance = distance(uv, center);\n\n    // Time\n    float time = iTime * 1.0;\n\n    // Speed of the ripples\n    float speed = 2.0;\n\n    // Amplitude of the ripples\n    float amplitude = 5.0;\n\n    // Frequency of the ripples\n    float frequency = 20.0;\n\n    // Ripple animation\n    float ripple = amplitude * sin(distance * frequency + time * speed);\n\n    // Calculate ripple effect\n    float rippleEffect = smoothstep(0.0, amplitude * 1.0, abs(ripple));\n\n    \n    vec3 waterColor = vec3(0.9, 0.9, 0.2);\n\n    // Apply inverted ripple effect to color\n    vec3 color = waterColor * rippleEffect;\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}