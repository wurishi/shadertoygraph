{"ver":"0.1","info":{"id":"Xt3GD8","date":"1468955997","viewed":98,"name":"MappingFunctionTestShader","username":"Jwebb4191","description":"Shader to demonstrate some wave functions","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// !!!! Don't change this, bad !!!!\n#define PI 3.14159\n\n\n\n\n// Change this to increase frequency of function\n#define FREQUENCY 2.0\n\n// Change this to increase how quickly we scroll\n#define TIME_SCALE 2.0\n\n// Change this to incease how broad the stroke is\n#define RANGE 0.5\n\n// Set which function you want to use to 1\n#define USE_COS 1\n#define USE_SIN 0\n#define USE_TAN 0\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime * TIME_SCALE;\n    \n   \tfloat x = (fragCoord.x / iResolution.x) * 2.0 - 1.0;\n    float y = (fragCoord.y / iResolution.y) * 2.0 - 1.0;\n    \n#if USE_COS == 1\n    float val = cos(x * PI * FREQUENCY + time);\n#elif USE_SIN == 1\n    float val = sin(x * PI * FREQUENCY + time);\n#elif USE_TAN == 1\n    float val = tan(x * PI * FREQUENCY + time);\n#endif\n    \n    vec2 idealPosition = vec2(x, val);\n    vec2 currentPosition = vec2(x, y);\n    \n    float dist = distance(idealPosition, currentPosition);\n    \n    float color = mix(0.0, 1.0, max(0.0, RANGE - dist) / RANGE);\n\n    fragColor = vec4(color, 0, 0, 1);\n}\n","name":"Image","description":"","type":"image"}]}