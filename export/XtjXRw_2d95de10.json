{"ver":"0.1","info":{"id":"XtjXRw","date":"1442466043","viewed":133,"name":"Ball Shader","username":"reymakes","description":"I think I understand this one better","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy)/vec2(1,1.7);\n\t\n    \n    //Kind of chooses where it is.\n    vec2 ballPos = vec2(abs(sin(iTime/2.)),abs(sin(iTime*2.)));\n    \n    //creates the circle around the place\n    //that length stuff is how you make a circle\n    float ball = 1. - clamp((length(uv - ballPos)-.1)*1000.,0.,1.);\n    \n    //chooses how it works so here is the color controlled by where it will be so its basically \n    //frame animations\n    vec3 color = vec3(ball *ball, ball*ballPos);\n    \n    //shows it by its fragColor\n    fragColor = vec4(color, 1.0);\n    \n}","name":"","description":"","type":"image"}]}