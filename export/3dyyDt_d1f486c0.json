{"ver":"0.1","info":{"id":"3dyyDt","date":"1603968932","viewed":104,"name":"NoisyTiles","username":"Kaeylos","description":"#6 Tiles\nmade during the Ink-MAC-tober 2020","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise","tiles","imac"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hermiteInter(t) t * t * (3.0 - 2.0 * t)\nfloat mult(vec2 v) { return v.x*v.y; }\n\n// ----- Noise stuff ----- //\n// Based on Morgan McGuire and David Hoskins\n// https://www.shadertoy.com/view/4dS3Wd\n// https://www.shadertoy.com/view/4djSRW\nfloat hash1(float p) {\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\nfloat perlinNoise(vec3 x) {\n    const vec3 step = vec3(110., 241., 171.);\n    vec3 id = floor(x);\n    vec3 f = fract(x);\n    float n = dot(id, step);\n\n    vec3 u = hermiteInter(f);\n    return mix(mix(mix( hash1(n + dot(step, vec3(0, 0, 0))), hash1(n + dot(step, vec3(1, 0, 0))), u.x),\n                   mix( hash1(n + dot(step, vec3(0, 1, 0))), hash1(n + dot(step, vec3(1, 1, 0))), u.x), u.y),\n               mix(mix( hash1(n + dot(step, vec3(0, 0, 1))), hash1(n + dot(step, vec3(1, 0, 1))), u.x),\n                   mix( hash1(n + dot(step, vec3(0, 1, 1))), hash1(n + dot(step, vec3(1, 1, 1))), u.x), u.y), u.z);\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord ) {\n\tvec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y *10.; // zoom \n    vec2 f = fract(uv);\n    vec2 id = floor(uv);\n    \n    float delay = 12.; // loop delay in s\n    float t = mod(iTime, delay) / delay;\n    if (t > 0.5) t = 1.-t;\n    \n    float scale = perlinNoise(vec3(id, t*15.)/1.5); // noise scale and speed\n\tscale = pow(scale*1.1, 2.);\n\tfloat col = mult(smoothstep(0.98,1.,1.-abs(f-.5)+scale/2.)); // B&W\n    fragColor = vec4(vec3(col), 1.);\n }","name":"Image","description":"","type":"image"}]}