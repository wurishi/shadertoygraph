{"ver":"0.1","info":{"id":"ct2XRR","date":"1675619199","viewed":55,"name":"Psycadelics by V","username":"Vazpera","description":"A little something","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["illusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdEquilateralTriangle( in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat rand(float co) { return sin(cos(co*(91.44134533)));}\n\nfloat dist(vec2 point, vec2 samplePoint) {\n    return sqrt(\n        (samplePoint.x - point.x)*(samplePoint.x - point.x)+\n        (samplePoint.y - point.y)*(samplePoint.y - point.y)\n    );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 layer1;\n    // Time varying pixel color\n    \n    //Layer 1\n    {\n        float r = 0.;\n        float g = 0.;\n        float b = 0.;\n        layer1 = vec4(r,g,b,1.0);\n    }\n        \n\n    fragColor = layer1;\n}","name":"Image","description":"","type":"image"}]}