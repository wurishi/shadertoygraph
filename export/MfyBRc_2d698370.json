{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .0005\n#define Rot(a)  mat2(cos(a - vec4(0,11,33,0)))\n#define S(d) 1.-smoothstep(-1.2,1.2, (d)*iResolution.y )\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define deg45 .707\n#define R45(p) (( p + vec2(p.y,-p.x) ) *deg45)\n#define Tri(p,s) max(R45(p).x,max(R45(p).y,B(p,s)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define ZERO (min(iFrame,0))\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(234.56,789.34));\n    p+=dot(p,p+34.56);\n    return fract(p.x+p.y);\n}\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\nfloat getTime(float t, float duration){\n    return clamp(t,0.0,duration)/duration;\n}\n\nfloat getAnimationValue(){\n    float easeValue = 0.0;\n    float frame = mod(iTime,10.0);\n    float time = frame;\n    \n    float duration = 1.;\n    if(frame>=4. && frame<5.){\n        time = getTime(time-4.,duration);\n        easeValue = cubicInOut(time);\n    } else if(frame>=5. && frame<9.){\n        easeValue = 1.;\n    } else if(frame>=9. && frame<10.){\n        time = getTime(time-9.,duration);\n        easeValue = 1.0-cubicInOut(time);\n    } else {\n        easeValue = 0.0;\n    }\n    \n    return easeValue;\n}\n\nfloat layer1_1(vec3 p, float anim){\n    float thick = 0.001+(0.05*anim);  \n    \n    p.xy*=Rot(radians(30.*iTime));\n    vec3 prevP = p;\n   \n    float d = abs(length(p.xy)-0.4)-0.05;\n    \n    float d2 = abs(length(p.xy)-0.33)-0.05;\n    p.xy*=Rot(radians(20.));\n    p.x = abs(p.x)-0.23;\n    p.y = abs(p.y);\n    p.xy*=Rot(radians(-20.));\n    d2 = max(p.x,d2);\n    d2 = max(-p.y,d2);\n    d = max(-d2,d);\n    \n    p = prevP;\n    p.xy*=Rot(radians(10.));\n    d2 = abs(length(p.xy)-0.33)-0.05;\n    p.x = abs(p.x);\n    p.y = abs(p.y)-0.23;\n    p.xy*=Rot(radians(20.));\n    d2 = max(p.y,d2);\n    d2 = max(-p.x,d2);\n    d = max(-d2,d);\n    \n    p = prevP;\n    p.xy*=Rot(radians(20.));\n    p.x = abs(p.x);\n    p.x *= -1.;\n    d2 = abs(length(p.xy)-0.47)-0.05;\n    p.y = abs(p.y)+0.25;\n    p.xy*=Rot(radians(45.));\n    d2 = max(p.y,d2);\n    d = max(-d2,d);\n\n    p = prevP;\n    p.xy*=Rot(radians(-50.));\n    p.x = abs(p.x);\n    p.x *= -1.;\n    d2 = abs(length(p.xy)-0.47)-0.05;\n    p.y = abs(p.y)+0.25;\n    p.xy*=Rot(radians(45.));\n    d2 = max(p.y,d2);\n    d = max(-d2,d);\n\n    p = prevP;\n    p.xy*=Rot(radians(-25.));\n    d2 = abs(length(p.xy)-0.39)-0.008;\n    d2 = max(abs(p.x)-0.12,d2);\n    d = max(-d2,d);\n     \n    p = prevP;\n    p.xy*=Rot(radians(60.));\n    d2 = abs(length(p.xy)-0.38)-0.008;\n    d2 = max(abs(p.x)-0.1,d2);\n    d = max(-d2,d);     \n     \n    d = max(abs(p.z)-thick,d);\n     \n    return d;\n}\n\nfloat layer1_2(vec3 p, float anim){\n    float thick = 0.001+(0.02*anim);  \n   \n    \n    p.xy*=Rot(radians(-20.*iTime));\n    vec3 prevP = p;\n    \n    p.xy = DF(p.xy,vec2(18.));\n    p.xy -= 0.215;\n    p.xy*=Rot(radians(45.));\n    float d = B(p.xy,vec2(0.006,0.025));\n    \n    p = prevP;\n    float a = radians(54.);\n    p.x = abs(p.x);\n    d = max(-dot(p.xy,vec2(cos(a),sin(a))),d);\n    a = radians(-54.);\n    d = max(-dot(p.xy,vec2(cos(a),sin(a))),d);\n    \n    d = max(abs(p.z)-thick,d);\n    return d;\n}\n\nfloat layer1_3(vec3 p, float anim){\n    float thick = 0.001+(0.2*anim);  \n    \n    p.xy*=Rot(radians(50.*iTime));\n    vec3 prevP = p;\n    \n    float d = abs(length(p.xy)-0.22)-0.03;\n    \n    p = prevP;\n    p.xy*=Rot(radians(80.));\n    float a = radians(60.);\n    p.x = abs(p.x);\n    d = max(-dot(p.xy,vec2(cos(a),sin(a))),d);\n    a = radians(-60.);\n    d = max(-dot(p.xy,vec2(cos(a),sin(a))),d);\n    \n    d = max(abs(p.z)-thick,d);\n    return d;\n}\n\nfloat layer1_4(vec3 p, float anim){\n    float thick = 0.001+(0.03*anim);  \n    \n    p.xy*=Rot(radians(-10.*iTime));\n    vec3 prevP = p;\n    \n    p.xy = DF(p.xy,vec2(4.));\n    p.xy -= 0.12;\n    p.xy*=Rot(radians(45.));\n    float d = B(p.xy,vec2(0.005));\n    \n    d = max(abs(p.z)-thick,d);\n    return d;\n}\n\n\nfloat layer1_5(vec3 p, float anim){\n    float thick = 0.001+(0.02*anim);  \n    \n    p.xy*=Rot(radians(40.*iTime));\n    vec3 prevP = p;\n    \n    float d = abs(length(p.xy)-0.12)-0.02;\n    \n    p = prevP;\n    p.xy*=Rot(radians(-20.));\n    float a = radians(60.);\n    p.x = abs(p.x);\n    d = max(-dot(p.xy,vec2(cos(a),sin(a))),d);\n    a = radians(-60.);\n    d = max(-dot(p.xy,vec2(cos(a),sin(a))),d);\n    \n    \n    p = prevP;\n    p.xy*=Rot(radians(-20.));\n    float d2 = abs(length(p.xy)-0.1)-0.012;\n    p.x = abs(p.x);\n    p.y = abs(p.y)-0.085;\n    p.xy*=Rot(radians(26.));\n    d2 = max(p.y,d2);\n    d2 = max(-p.x,d2);\n    d = max(-d2,d);\n    \n    d = max(abs(p.z)-thick,d);\n    return d;\n}\n\nfloat layer1(vec3 p){\n\n    \n    vec3 prevP = p;\n    float anim = getAnimationValue();\n    \n    float d = layer1_1(p,anim);\n    float d2= layer1_2(p,anim);\n    d = min(d,d2);\n    d2= layer1_3(p,anim);\n    d = min(d,d2);\n    d2= layer1_4(p,anim);\n    d = min(d,d2);\n    d2= layer1_5(p,anim);\n    d = min(d,d2);\n    return d;\n}\n\nfloat arrow_item1(vec2 p){\n    vec2 prevP = p;\n    float d = B(p,vec2(0.1,0.015));\n    p.x-=0.025;\n    p.y+=0.02;\n    float d2 = B(p,vec2(0.05,0.015));\n    float a = radians(45.);\n    p.x = abs(p.x)-0.04;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    d = max(-d2,d);\n    p = prevP;\n    \n    p.x+=0.025;\n    p.y-=0.02;\n    d2 = B(p,vec2(0.05,0.015));\n    a = radians(-45.);\n    p.x = abs(p.x)-0.04;\n    d2 = max(dot(p,vec2(cos(a),sin(a))),d2);\n    d = max(-d2,d);\n    p = prevP;\n    \n    a = radians(45.);\n    d = max(-dot(p-vec2(-0.1,0.0),vec2(cos(a),sin(a))),d);\n\n    d = max(dot(p-vec2(0.1,0.0),vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat layer2_1(vec3 p){\n    float thick = 0.001;\n    vec3 prevP = p;\n    p.x-=iTime*0.1;\n    \n    p.x = mod(p.x,0.06)-0.03;\n    float d = abs(p.x)-0.01;\n    \n    p = prevP;\n    p.x-=iTime*0.1;\n    p.x += 0.025;\n    p.x = mod(p.x,0.06)-0.03;\n    float d2 = abs(p.x)-0.005;\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x-=0.05;\n    d = max(abs(p.x)-0.4,d);\n    d = max(abs(p.y)-0.03,d);\n\n    d = max(abs(p.z)-thick,d);\n    return d;\n}\n\nfloat layer2_2(vec3 p){\n    float thick = 0.001;\n    p.y = abs(p.y)-0.18;\n    p.xy *=Rot(radians(90.));\n    vec3 prevP = p;\n\n    float d = B(p,vec2(0.03,0.4));\n    \n    float d2 = B(p,vec2(0.04,0.42));\n    \n    float a = radians(45.);\n    p.y+=0.19;\n    d2 = max(-dot(p.xy,vec2(cos(a),sin(a))),d2);\n    p = prevP;\n    d2 = max(-p.x-0.02,d2);\n    d = max(-d2,d);\n    \n    p = prevP;\n    p.y+=0.23;\n    d = max(-dot(p.xy,vec2(cos(a),sin(a))),d);\n    \n    p = prevP;\n    p.xy*=Rot(radians(45.));\n    p.y+=iTime*0.05;\n    p.y = mod(p.y,0.03)-0.015;\n    d2 = B(p.xy,vec2(0.4,0.005));\n    p = prevP;\n    p.x-=0.03;\n    p.y+=0.16;\n    d2 = max(abs(p.x)-0.02,d2);\n    d2 = max(-dot(p.xy,vec2(cos(a),sin(a))),d2);\n    d2 = max(abs(p.y)-0.6,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y+=iTime*0.05;\n    p.x-=0.1;\n    p.y = mod(p.y,0.2)-0.1;\n    d2 = B(p.xy,vec2(0.003,0.08));\n    p = prevP;\n    p.y-=0.1;\n    d2 = max(abs(p.y)-0.4,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y-=iTime*0.1;\n    p.x+=0.1;\n    p.y-=0.05;\n    p.y = mod(p.y,0.22)-0.11;\n    p.xy*=Rot(radians(90.));\n    d2 = arrow_item1(p.xy);\n    p = prevP;\n    p.y-=0.15;\n    d2 = max(abs(p.y)-0.35,d2);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.x+=0.17;\n    p.xy*=Rot(radians(45.));\n    d2 = abs(Tri(p.xy,vec2(0.12)))-0.01;\n    float d3 = abs(Tri(p.xy,vec2(0.12)))-0.002;\n    p.y+=0.085;\n    p.xy*=Rot(radians(30.*iTime+45.));\n    d2 = max(-(abs(p.x)-0.02),d2);\n    d2 = min(d2,d3);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y-=0.06;\n    p.x+=0.17;\n    p.xy*=Rot(radians(135.));\n    d2 = abs(Tri(p.xy,vec2(0.17)))-0.01;\n    d3 = abs(Tri(p.xy,vec2(0.17)))-0.002;\n    p.y+=0.1;\n    p.xy*=Rot(radians(30.*iTime+45.));\n    d2 = max(-(abs(p.x)-0.02),d2);\n    d2 = min(d2,d3);\n    d = min(d,d2);\n    \n    p = prevP;\n    p.y-=0.35;\n    p.x+=0.2;\n    p.xy*=Rot(radians(90.));\n    d2 = abs(Tri(p.xy,vec2(0.25)))-0.01;\n    d3 = abs(Tri(p.xy,vec2(0.25)))-0.002;\n    p.y+=0.23;\n    p.xy*=Rot(radians(30.*iTime+45.));\n    d2 = max(-(abs(p.x)-0.02),d2);\n    d2 = min(d2,d3);\n    d = min(d,d2);    \n    \n    p = prevP;\n    p.y+=0.29;\n    p.x+=0.06;\n    p.xy*=Rot(radians(45.));\n    p.x = abs(abs(p.x)-0.025)-0.025;\n    d2 = length(p.xy)-0.01;\n    d = min(d,d2); \n    d2 = abs(length(p.xy)-0.019)-0.001;\n    d = min(d,d2); \n    \n    d = max(abs(p.z)-thick,d);\n    return d;\n}\n\nfloat arrow1(vec2 p){\n    vec2 prevP = p;\n    p.y-=iTime*0.1;\n    p.x = abs(p.x)-0.05;\n    p.y = mod(p.y,0.16)-0.08;\n    p *= Rot(radians(45.));\n    float d = arrow_item1(p.xy);\n    p = prevP;\n    p.y-=0.2;\n    d = max(abs(p.y)-0.5,d);\n    return d;\n}\n\nfloat layer2_3(vec3 p){\n    float thick = 0.001;\n    vec3 prevP = p;\n    p.xy = DF(p.xy,vec2(1.));\n    p.xy -=0.5;\n    p.xy *=Rot(radians(45.));\n    float d = arrow1(p.xy);\n    d = max(abs(p.z)-thick,d);\n    return d;\n}\n\nfloat layer2(vec3 p){\n    vec3 prevP = p;\n    \n    p.xy *=Rot(radians(45.));\n    p.xy = DF(p.xy,vec2(1.));\n    p.xy -=0.55;\n    p.xy *=Rot(radians(-45.));\n    float d = layer2_1(p);\n    float d2 = layer2_2(p);\n    d = min(d,d2);\n    p = prevP;\n    d2 = layer2_3(p);\n    d = min(d,d2);\n    \n    return d;\n}\n\nvec2 GetDist(vec3 p) {\n    vec3 prevP = p;\n    float anim = getAnimationValue();\n    float r = 1.;\n    p.z+=iTime*0.5;\n    p.z = mod(p.z,r)-(r*0.5);\n    \n    float d = layer1(p);\n    p = prevP;\n    float d2 = layer1(p);\n    d = mix(d2,d,anim);\n    \n    p = prevP;\n    d = max(-(p.z+1.2),d);\n    d = max((p.z-1.5),d);\n    //d = d2;\n    return vec2(d,0);\n}\n\nvec2 RayMarch(vec3 ro, vec3 rd, float side, int stepnum) {\n    vec2 dO = vec2(0.0);\n    \n    for(int i=0; i<stepnum; i++) {\n        vec3 p = ro + rd*dO.x;\n        vec2 dS = GetDist(p);\n        dO.x += dS.x*side;\n        dO.y = dS.y;\n        \n        if(dO.x>MAX_DIST || abs(dS.x)<SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n    float d = GetDist(p).x;\n    vec2 e = vec2(.001, 0);\n    \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy).x,\n        GetDist(p-e.yxy).x,\n        GetDist(p-e.yyx).x);\n    \n    return normalize(n);\n}\n\nvec3 R(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f,r),\n        c = p+f*z,\n        i = c + uv.x*r + uv.y*u,\n        d = normalize(i-p);\n    return d;\n}\n\n// https://www.shadertoy.com/view/3lsSzf\nfloat calcOcclusion( in vec3 pos, in vec3 nor )\n{\n    float occ = 0.0;\n    float sca = 1.0;\n    for( int i=ZERO; i<4; i++ )\n    {\n        float h = 0.01 + 0.15*float(i)/4.0;\n        vec3 opos = pos + h*nor;\n        float d = GetDist( opos ).x;\n        occ += (h-d)*sca;\n        sca *= 0.95;\n    }\n    return clamp( 1.0 - 2.0*occ, 0.0, 1.0 );\n}\n\nvec3 diffuseMaterial(vec3 n, vec3 rd, vec3 p, vec3 col) {\n    vec3 diffCol = vec3(0.0);\n    vec3 lightDir = normalize(vec3(1,10,-10));\n    float diff = clamp(dot(n,lightDir),0.0,1.0);\n    float skyDiff = clamp(0.5+0.5*dot(n,vec3(0,1,0)),0.0,1.0);\n    float bounceDiff = clamp(0.5+0.5*dot(n,vec3(0,-1,0)),0.0,1.0);\n    diffCol = col*vec3(-0.5)*diff;\n    diffCol += col*vec3(1.)*skyDiff;\n    diffCol += col*vec3(0.95)*bounceDiff;\n    diffCol += col*pow(max(dot(rd, reflect(lightDir, n)), 0.0), 60.); // spec\n        \n    return diffCol;\n}\n\nvec3 materials(int mat, vec3 n, vec3 rd, vec3 p, vec3 col){\n    col = diffuseMaterial(n,rd,p,vec3(1.6));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    \n    vec3 ro = vec3(0, 0, -1.35);    \n    vec3 rd = R(uv, ro, vec3(0,0.0,0), 1.0);\n    vec2 d = RayMarch(ro, rd, 1.,MAX_STEPS);\n    vec3 col = vec3(.0);\n    \n    if(d.x<MAX_DIST) {\n        vec3 p = ro + rd * d.x;\n        vec3 n = GetNormal(p);\n        int mat = int(d.y);\n        col = materials(mat,n,rd,p,col);\n        col*=exp( -0.1*d.x*d.x*d.x*d.x );\n    } else {\n        uv*=1.35;\n        float d2 = layer1(vec3(uv,0.0));\n        float d3 = layer2(vec3(uv,0.0));\n        vec3 uicol = mix(vec3(0.),vec3(0.7),S(d2));\n        float anim = getAnimationValue();\n        col = mix(uicol,col,anim);\n        col = mix(col,vec3(0.7),S(d3));\n    }\n\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfyBRc","date":"1734271485","viewed":393,"name":"Graphic Design Experiment 18","username":"yasuo","description":"Graphic Design Experiment 18","likes":16,"published":3,"flags":0,"usePreview":0,"tags":["graphicdesign","cineshader"],"hasliked":0,"parentid":"","parentname":""}}