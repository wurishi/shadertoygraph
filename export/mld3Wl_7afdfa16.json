{"ver":"0.1","info":{"id":"mld3Wl","date":"1683535325","viewed":106,"name":"Learn 2D SDF","username":"Little_Ki","description":"Beginning of shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform sampler2D tex;\n\nfloat sdfCircle(vec2 coord, vec2 center, float r, float s) {\n    vec2 d = (coord - center);\n    return length(d) - r * s;\n}\n\nvec2 rotate(vec2 vec, float angle) {\n    return mat2(cos(angle), sin(angle), -sin(angle), cos(angle)) * vec;\n}\n\nfloat sdfSquare(vec2 coord, vec2 center, float size, float r, float s) {\n    vec2  v = rotate(coord - center, r);\n    float d = max(abs(v.x), abs(v.y));\n    \n    return d - size * s;\n}\n\nfloat sdfTraingle(vec2 coord, vec2 center, vec2 p0, vec2 p1, vec2 p2) {\n    vec2 offset = coord - center;\n    vec2 v0 = p1 - p0;\n    vec2 v1 = p2 - p1;\n    vec2 v2 = p0 - p2;\n    vec2 n0 = normalize(vec2(-v0.y, v0.x));\n    vec2 n1 = normalize(vec2(-v1.y, v1.x));\n    vec2 n2 = normalize(vec2(-v2.y, v2.x));\n    \n    return max(dot(offset - p0, n0), max(dot((offset - p1), n1), dot((offset - p2), n2)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; // <0,1>\n  \n  uv -= 0.5;\n  uv.x *= iResolution.x/iResolution.y;\n  \n  float d0 = sdfCircle(uv, vec2(cos(iTime), sin(iTime)) * 0.1, 0.15, 1.0 + cos(iTime) * 0.2); \n  float a0 = smoothstep(0.003, -0.003, d0);\n  \n  float d1 = sdfSquare(uv, vec2(cos(iTime), sin(iTime)) * - 0.1, 0.15, iTime * 0.5, 1.0 + sin(iTime) * 0.2);\n  float a1 = smoothstep(0.003, -0.003, d1);\n  \n  float d2 = sdfTraingle(uv, vec2(cos(iTime), sin(iTime)) * - 0.2, vec2(-0.15, -0.1), vec2(0, 0.10), vec2(0.15, -0.1));\n  float a2 = smoothstep(0.055, 0.050, d2);\n\n  vec3 col0 = 0.5 + cos(uv.xyx + iTime + vec3(0, 2, 4));\n  vec3 col1 = 0.5 + cos(uv.xyx + iTime + vec3(4, 2, 0));\n  vec3 col2 = 0.5 + cos(uv.xyx + iTime + vec3(1, 2, 3));\n  \n  float a = min(max(a0, a1), abs(a0 - a1));\n  \n  vec4 back = vec4(0.5, 0.1, 0.3, 0.0);\n  \n  fragColor = back;\n  \n  fragColor = mix(fragColor, vec4(col0, 0.0),a2);\n  fragColor = mix(fragColor, vec4(col0, 0.0), min(a, a0));\n  fragColor = mix(fragColor, vec4(col1, 0.0), min(a, a1));\n  fragColor = mix(fragColor, vec4(col2, 0.0), a2);\n  \n  //fragColor = mix(fragColor, vec4(col1, 0.0), a1);\n}","name":"Image","description":"","type":"image"}]}