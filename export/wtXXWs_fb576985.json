{"ver":"0.1","info":{"id":"wtXXWs","date":"1564600535","viewed":169,"name":"Spherical reflection starfield","username":"theepicsnail","description":"reflecting a ray around inside a sphere","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hitSphere(vec3 ro, vec3 rd) {\n    float a = dot(rd, rd);\n    float b = 2.*dot(ro, rd);\n    float c = dot(ro,ro) - 1.;\n    float d = b*b-4.*a*c;\n    if(d < 0.) return -1.;\n    return (-b + sqrt(d))/(2.*a);\n}\n\nmat2x2 rot(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2x2(c, -s, s, c);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    vec2 muv = (iMouse.xy*2.-iResolution.xy)/iResolution.y;\n   \n\t\n    vec3 rd = normalize(vec3(uv,2));\n    \n    //vec3 ro = vec3(muv,-2.9);\n    vec3 ro = vec3(0,0,-2.5);\n    \n    mat2x2 rotx = rot(muv.x*1.5);\n    mat2x2 roty = rot(muv.y*3.1);\n    ro.yz *= roty;\n    rd.yz *= roty;\n    \n    ro.xz *= rotx;\n    rd.xz *= rotx;\n    vec3 ord = rd;\n    \n    \n    \n    \n    float d =hitSphere(ro,rd);\n    if(d==-1.) {\n        vec3 x = clamp(1.-abs(2.*sin(-rd*6.283*2.+ iTime*.1)),0.,1.);\n        x *= min(x.x, min(x.y,x.z));\n        fragColor.rgb=x;\n        return;\n    }\n    \n    float brightness = 1.;\n    for(int i = 0 ; i < 20 ; i ++) {\n    \td = hitSphere(ro,rd);\n    \tro = rd*d+ro;\n    \trd = reflect(rd, -normalize(ro));\n        brightness *= .7;\n        \n        \n        vec3 x = clamp(1.-abs(2.*sin(ro*6.283*2. + iTime*.1)),0.,1.);\n        x *= min(x.x, min(x.y,x.z));\n        x=max(x, ord.x*.15*dot(ord,rd));\n        //x = normalize(rd);\n        vec3 c = x * brightness;\n        c = clamp(c,0.,1.);\n        fragColor.rgb += c;\n        if(d < 0.) return;\n        if(length(fragColor.rgb)>1.) return;\n    }\n    \n}","name":"Image","description":"","type":"image"}]}