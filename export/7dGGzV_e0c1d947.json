{"ver":"0.1","info":{"id":"7dGGzV","date":"1631802551","viewed":76,"name":"sw triangle","username":"Pac85","description":"A simple software rasterizer","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["swrast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Triangle2D {\n    vec2 v[3];\n};\n\nTriangle2D triangle2d(vec2 v1, vec2 v2, vec2 v3) {\n    Triangle2D t;\n    t.v[0] = v1;\n    t.v[1] = v2;\n    t.v[2] = v3;\n    return t;\n}\n\nfloat triangle_double_area(Triangle2D t) {\n    vec3 v1 = vec3(t.v[1] - t.v[0], 0.0);\n    vec3 v2 = vec3(t.v[2] - t.v[0], 0.0);\n    return length(cross(v1, v2));\n}\n\nvec3 p_triangle2d(vec2 p, Triangle2D t) {\n   float a = triangle_double_area(t);\n   Triangle2D t1 = triangle2d(t.v[0], t.v[1], p);\n   float a1 = triangle_double_area(t1);\n   Triangle2D t2 = triangle2d(t.v[1], t.v[2], p);\n   float a2 = triangle_double_area(t2);\n   Triangle2D t3 = triangle2d(t.v[0], t.v[2], p);\n   float a3 = triangle_double_area(t3);\n   \n   if (a < a1 + a2 + a3 - 1e-4) {\n       return vec3(-1.0);\n   }\n   \n   return vec3(a1/a, a2/a, a3/a);\n   \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    \n    Triangle2D t = triangle2d(vec2(0.5, 0.9), vec2(0.9, 0.1), vec2(0.1, 0.1));\n    vec3 col = p_triangle2d(uv, t);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}