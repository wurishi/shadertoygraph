{"ver":"0.1","info":{"id":"MstGW2","date":"1452293846","viewed":9502,"name":"mesh edit","username":"FabriceNeyret2","description":"drag nodes with mouse to edit the mesh. ","likes":102,"published":3,"flags":32,"usePreview":0,"tags":["mesh","modeler"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n#define S 40.\n                                                               // draw segment [a,b]\n#define L(a,b)  O.g+= 2e-1 / length( clamp( dot(U-a,v=b-a)/dot(v,v), 0.,1.) *v - U+a )\n#define T(i,j) texture(iChannel0,(.5+S*vec2(i,j))/iResolution.xy).xy\n    \nvoid mainImage( out vec4 O,  vec2 U )\n{   \n    O -= O; \n    \n    for (int j=0; j<10; j++) \n    {\n        vec2 v, P00, P01, P10 = T(0,j), P11 = T(0,j+1);\n        \n        for (int i=0; i<17; i++) \n        {\n            P00=P10, P01=P11, P10 = T(i+1,j), P11=T(i+1,j+1);\n            if (j<9 ) L(P00,P01);   // draw one vertical segment\n            if (i<16) L(P00,P10);   // draw one horizontal segment\n            O += smoothstep(5.,3.,length(U-T(i,j)));  // draw points\n        }\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// each pixel of BufA encodes a pair of vertex coordinates.\n// It's Image shader responsability to pick and connect some of these.\n\n\nvoid mainImage( out vec4 O,  vec2 uv )\n{\n    vec2 U = uv/iResolution.xy;\n    \n    O = texture(iChannel0,U);\n  //if (iFrame==0) {\n    if (length(O.xy)==0.) {   // better if further increase of window size\n        O.xy = uv + 10.*(2.*texture(iChannel1,U).xy-1.);  // initial jittered coords\n        return;\n    }\n    else  {\n        float a = 10.*iTime + uv.x+117.1*uv.y; // decorelates rotation angle\n        O.xy += .2* vec2(cos(a),sin(a));       // shake coords\n    }\n    \n    if ( length(iMouse.xy-O.xy) < 10. )        // edit coords\n        O.xy = iMouse.xy;\n}","name":"Buf A","description":"","type":"buffer"}]}