{"ver":"0.1","info":{"id":"ldlcRN","date":"1487328285","viewed":108,"name":"Ball of pixels hit by light","username":"Void_Scroll","description":"A GLSL ball hit by a vector that determines it's light level\nSupposed to look like a planet.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","draft","isartdigital"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 pixColor, in vec2 pixCoords)\n{\n    // =============================================== //\n    // Parameters\n    \t// How intense is the light emitted by the sun ?\n    \t// Warning: High intensities will fry all life on the surface\n    \tfloat sunIntensity = 2.00;\n    \n    \t// The passive lightning of space\n    \tfloat latentLightning = 0.05;\n   \t// End of parameters\n    // =============================================== //\n    \n    \n    vec2 posCenter = vec2 (0.5 * iResolution.x, 0.5 * iResolution.y);\n    \n    vec2 newCoords = pixCoords - posCenter;\n    \n    float ballRadius = iResolution.x / 6.0;\n    \n    vec3 sunDot = vec3(cos(iTime) / 4.0, -sin(iTime * 0.5) / 1.0, sin(iTime));\n    \n    vec4 baseColor = vec4(0.025, 0.35, 0.025, 1.0);\n    //vec4 baseColor = vec4(max(0.8, cos(iTime * 5.0)), max(0.2, sin(iTime * 5.0)), max(0.5, cos(iTime * 10.0)), 1.0);\n    \n    vec3 centerPointDot = vec3(newCoords.x, newCoords.y, sqrt(pow(ballRadius, 2.0) - pow(newCoords.x, 2.0) - pow(newCoords.y, 2.5)));\n    \n    vec3 planetDot = centerPointDot / ballRadius;\n    \n    float lumRatio = max(latentLightning, dot(planetDot, sunDot) * sunIntensity);\n\tvec4 planetColor = baseColor * max(0.05, lumRatio);\n    \n    \n\tif (sqrt(pow(newCoords.x, 2.0) + pow(newCoords.y, 2.0)) < ballRadius)\n    {\n       \tpixColor = planetColor;\n    } \n}","name":"Image","description":"","type":"image"}]}