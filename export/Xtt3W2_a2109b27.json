{"ver":"0.1","info":{"id":"Xtt3W2","date":"1471711086","viewed":117,"name":"Rotating Crosses","username":"Beta_Alf","description":"A perfect looping tesselation of space","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["loop","perfectloop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ANIMATIONLENGTH 600.0\n#define PI 3.1415926\n#define SIZE 100.0\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nfloat drawCross(vec2 center, float scale, float rotation, vec2 fragCoord)\n{\n    vec2 distVec = abs(rotate2d(rotation) * (fragCoord - center));\n    \n    float dist = dot(distVec,vec2(1.0));\n    float minDist = min(distVec.x,distVec.y);\n    float ret = 1.0;\n    if(dist < scale && minDist < 0.2*scale)\n        ret = 0.0;\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float normalTime = mod(float(iFrame),ANIMATIONLENGTH)/ANIMATIONLENGTH;\n    \n    float worldRotate = smoothstep(0.7,0.8, normalTime)*PI*0.25;\n    \n    float worldScale = 1.0 + smoothstep(0.9,1.0, normalTime) * .41421356237;\n    \n    vec2 worldTranslate = smoothstep(0.9,1.0, normalTime) * vec2(0,-0.5);\n    \n    \n    vec2 uv = fragCoord.xy;\n\n    uv /= vec2(SIZE);\n    \n    uv = uv + worldTranslate;\n    uv = rotate2d(worldRotate) * uv * worldScale;\n    \n    \n    float even = step(1.0,mod(uv.x,2.0));\n    even += step(1., mod(uv.y,2.0));\n    even = mod(even,2.);\n    \n    //even = clamp(0., 1.0, even) *2.-1.;\n    \n    uv = fract(uv) * SIZE;\n    \n    \n    float rot = smoothstep(0.1,0.2,normalTime)*PI*0.25;\n    \n    float scale = 51. * (1.0 + smoothstep(0.3,0.4,normalTime) * .41421356237);\n    \n    float fade = smoothstep(0.5,0.6,normalTime) * even;\n    \n\n    \n    \n    \n    float cro = 1.0;\n\n    cro = min(cro,drawCross(vec2(000, 000), scale, rot, uv));\n    cro = min(cro,drawCross(vec2(100, 000), scale, rot, uv));\n\tcro = min(cro,drawCross(vec2(100, 100), scale, rot, uv));\n    cro = min(cro,drawCross(vec2(000, 100), scale, rot, uv));\n    \n    fragColor = vec4(vec3(cro + fade),1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}