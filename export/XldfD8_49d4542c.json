{"ver":"0.1","info":{"id":"XldfD8","date":"1539450722","viewed":712,"name":"leproshader","username":"dots19","description":"Yarr!","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n#define PI2 6.28318530\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvec2 scale(vec2 v, vec2 s)\n{\n    mat2 m = mat2(s.x, 0.0, 0.0, s.y);\n    return m * v;\n}\n\nfloat astroid(vec2 p, float n, float coeff,\n              float a, float b, float c)\n{\n    float phi=atan(p.y, p.x);\n    float r = length(p);\n    float xmax = sqrt(-log(2.0*exp(-a*a)-1.0)/(b*b));\n    float r0 = xmax*coeff;\n    float eq=r0+(1.0/c)*sqrt(-log(2.0*exp(-a*a)-\n          exp(-b*b*xmax*xmax*sin((phi-PI/2.0)*\n          (n/2.0))*sin((phi-PI/2.0)*(n/2.0)))));\n    return r-eq;\n}\n\nfloat sdEllipse( in vec2 p, in vec2 ab )\n{\n    p = abs(p); if( p.x > p.y ) {p=p.yx;ab=ab.yx;}\n    float l = ab.y*ab.y - ab.x*ab.x;\n\t\n    float m = ab.x*p.x/l;      float m2 = m*m; \n    float n = ab.y*p.y/l;      float n2 = n*n; \n    float c = (m2+n2-1.0)/3.0; float c3 = c*c*c;\n\t\n    float q = c3 + m2*n2*2.0;\n    float d = c3 + m2*n2;\n    float g = m + m*n2;\n\n    float co;\n    if( d < 0.0 )\n    {\n        float h = acos(q/c3)/3.0;\n        float s = cos(h);\n        float t = sin(h)*sqrt(3.0);\n        float rx = sqrt( -c*(s + t + 2.0) + m2 );\n        float ry = sqrt( -c*(s - t + 2.0) + m2 );\n        co = (ry+sign(l)*rx+abs(g)/(rx*ry)- m)/2.0;\n    }\n    else\n    {\n        float h = 2.0*m*n*sqrt( d );\n        float s = sign(q+h)*pow(abs(q+h), 1.0/3.0);\n        float u = sign(q-h)*pow(abs(q-h), 1.0/3.0);\n        float rx = -s - u - c*4.0 + 2.0*m2;\n        float ry = (s - u)*sqrt(3.0);\n        float rm = sqrt( rx*rx + ry*ry );\n        co = (ry/sqrt(rm-rx)+2.0*g/rm-m)/2.0;\n    }\n\n    vec2 r = ab * vec2(co, sqrt(1.0-co*co));\n    return length(r-p) * sign(p.y-r.y);\n}\n\nfloat sdCaps( vec2 p, float r1, float r2, float h )\n{\n    p.x = abs(p.x);\n    \n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(p,vec2(-b,a));\n    \n    if( k < 0.0 ) return length(p) - r1;\n    if( k > a*h ) return length(p-vec2(0.0,h)) - r2;\n        \n    return dot(p, vec2(a,b) ) - r1;\n}\n\nfloat sdTri( in vec2 p, in vec2 q )\n{\n    p.x = abs(p.x);\n    \n    vec2 a = p - q*clamp( dot(p,q)/dot(q,q), 0.0, 1.0 );\n    vec2 b = p - q*vec2( clamp( p.x/q.x, 0.0, 1.0 ), 1.0 );\n    float s = -sign( q.y );\n    vec2 d = min( vec2( dot(a,a), s*(p.x*q.y-p.y*q.x) ),\n                  vec2( dot(b,b), s*(p.y-q.y)  ));\n\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n  return length(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = 2.0*(fragCoord.xy-0.5*iResolution.xy)/iResolution.y;\n    vec2 norm = fragCoord.xy/iResolution.xy;\n    vec2 pnorm = 2.0*(fragCoord.xy-0.5*iResolution.xy)/iResolution.xy;\n    \n    vec2 starscale = scale(p, vec2(1.0, 1.0));\n    \n    //red star\n    float star1_raw = astroid(starscale*3.5, 5.0, 0.09, 0.80, 0.13, 1.0);\n    float star1 = smoothstep(0.01, 0.06, star1_raw);\n    \n    //black star\n    float star2_raw = astroid(rotate(starscale*4.0, radians(180.0)), 5.0, 0.09, 0.79, 0.13, 1.0);\n    float star2 = smoothstep(0.01, 0.06, star2_raw);\n    \n    //outline1\n    float staroutline1 = 1.0-smoothstep(0.12, 0.15, star1_raw);\n    float staroutline2 = 1.0-smoothstep(0.12, 0.15, star2_raw);\n    float staroutline = clamp(staroutline1+staroutline2, 0.0, 1.0);\n    \n    //face\n    float face_raw = sdEllipse(p, vec2(0.43, 0.57));\n    face_raw = clamp(face_raw ,0.0, 1.0);\n    float face = smoothstep(0.01, 0.02, face_raw);\n    \n    //outline2\n    float commonoutline = (1.0-smoothstep(-1., 1.0, star1_raw))+\n        \t\t\t\t  (1.0-smoothstep(-1., 1.0, star2_raw))+\n        \t\t\t\t  (1.0-smoothstep(-0.05, 0.5, face_raw));\n    commonoutline = clamp(commonoutline, 0.0, 1.0);\n    \n    //eyes\n    vec2 eyepos = vec2(-0.25, -0.08);\n    vec2 mirror = p;\n    mirror.x=abs(mirror.x);\n    vec2 eyecd = rotate(mirror+eyepos, radians(113.0));\n    float eye = sdCaps(eyecd, 0.06, 0.09, 0.08);\n    eye=smoothstep(0.01, 0.021, eye);\n    \n    //top triangles\n    vec2 tri1pos = vec2(-0.2, -0.24);\n    vec2 tri1cd = rotate(mirror+tri1pos, radians(110.0));\n    float tri1 = sdTri(tri1cd, vec2 (0.04, 0.3));\n    tri1=smoothstep(0.0, 0.01, tri1);\n    \n    //bottom triangles\n    vec2 tri2pos = vec2(-0.1, 0.1);\n    vec2 tri2cd = rotate(mirror+tri2pos, radians(210.0));\n    float tri2 = sdTri(tri2cd, vec2 (0.02, 0.3));\n    tri2=smoothstep(0.0, 0.01, tri2);\n    \n    //pulps\n    \n    float blink = (cos(iTime*3.0)*0.5+0.5)*0.3+0.5;\n    vec2 pulppos = vec2(-0.15, -0.05);\n    vec2 pulpcd = rotate(mirror+pulppos, radians(210.0));\n    float pulp = sdCircle(pulpcd, 0.01);\n    pulp = clamp(pulp, 0.0, 1.0);\n    pulp = pow(pulp, 0.25);\n    pulp = smoothstep(0.00, blink, pulp);\n    \n    //background\n    \n    float rnorm = clamp(length(pnorm), 0.0, 1.0);\n    float r = atan(p.y, p.x);\n    r += -iTime*0.1;\n    float a = length(p);\n    float strips = cos((r+a*2.)*8.0)*0.5+0.5;\n    strips = smoothstep(0.47, 0.53, strips);\n    float bgmixfact = pow(rnorm*0.8, 1.5);\n    \n    //mixing\n    vec3 bg1 = vec3(0.447,0.680,0.700);\n    vec3 bg2 = vec3(0.249,0.379,0.390);\n    vec3 bgcolor = mix(bg1, bg2, strips)*1.0;\n    vec3 bgmask = vec3(0.049,0.055,0.049);\n    vec3 back = bgcolor;\n    vec3 outlinecolor = vec3(0.137,0.155,0.142);\n    vec3 staroutcolor = vec3(0.936,0.950,0.921);\n    vec3 star1_color = vec3(0.855,0.324,0.316);\n    vec3 star2_color = vec3(0.137,0.155,0.142);\n    vec3 facecolor1 = vec3(0.950,0.920,0.881);\n    vec3 facecolor2 = vec3(0.830,0.719,0.637);\n    vec3 eyecolor = star2_color;\n    vec3 tricolor = star1_color;\n    vec3 facecolor = mix(facecolor1, facecolor2, pow(norm.x,3.));\n    vec3 pulpcolor = vec3(0.960,0.230,0.138);\n    vec3 lay0 = mix(back, outlinecolor, commonoutline);\n    vec3 lay1 = mix(lay0, staroutcolor, staroutline);\n    vec3 lay2 = mix(star1_color, lay1, star1);\n    vec3 lay3 = mix(star2_color, lay2, star2);\n    vec3 lay4 = mix(facecolor, lay3, face);\n    vec3 lay5 = mix(eyecolor, lay4, eye);\n    vec3 lay6 = mix(tricolor, lay5, tri1);\n    vec3 lay7 = mix(tricolor, lay6, tri2);\n    vec3 lay8 = mix(pulpcolor, lay7, pulp);\n    vec3 lay9 = mix(lay8, bgmask, bgmixfact);\n    vec3 col = vec3(lay9);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}