{"ver":"0.1","info":{"id":"tttfRH","date":"1612276845","viewed":45,"name":"2d-breath.frag","username":"jorge2017a1","description":"2d-breath.frag","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dbreathfrag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// Breath of the Compassionate\n//\n\n//https://github.com/isohedral/frag/blob/master/Examples/breath.frag\n\nfloat hr2 ;\nvec2 o ;\nvec2 l45 ;\nvec2 l22 ;\n\n\n\n\n// Force P to lie on the right side of the line from A to B, reflecting\n// across the line if necessary.\nvec2 forceRight( vec2 P, vec2 A, vec2 B )\n{\n    mat3 M = mat3(\n        B.x-A.x, B.y-A.y, 0.0,\n        A.y-B.y, B.x-A.x, 0.0,\n        A.x, A.y, 1.0 );\n    mat3 Mi = inverse( M );\n\n    vec3 p = Mi * vec3(P,1.0);\n    return vec2( M * vec3(p.x, -abs(p.y), 1.0) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n     vec2 uv = fragCoord/iResolution.xy;\n    \n     hr2 = 0.5*sqrt(2.0);\n     o = vec2(0.0, 0.0);\n     l45 = vec2(hr2, hr2);\n     l22 = vec2(0.5*(l45.x+1.0), 0.5*l45.y);\n    vec4 col;\n\n    \n    \n   \n   //vec2 wpos=fragCoord*(2.0*sin(iTime*0.25)+0.5);\n    vec2 wpos=uv*10.;\n    //\n    \n    vec2 p = abs(mod(wpos,2.0) - 1.0);\n    p = forceRight( p, o, l45 );\n    p = forceRight( p, l22, o );\n    float d = abs(p.x - hr2);\n\n    if( d < 0.05 )\n    {\n        col = vec4(0,0,0,1);\n    } else if( p.x < hr2 ) {\n        col = vec4(121.0/255.0, 86.0/255.0, 163.0/255.0, 1.0);\n    } else {\n        col = vec4(1,1,1,1);\n    }\n    \n    fragColor = col;\n}\n\n","name":"Image","description":"","type":"image"}]}