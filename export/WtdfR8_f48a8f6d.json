{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Stateless smoke by nimitz 2022 (twitter: @stormoid)\n// https://www.shadertoy.com/view/WtdfR8\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n// Contact the author for other licensing options\n\nmat3 rot_x(float a){float sa = sin(a); float ca = cos(a); return mat3(1.,.0,.0,    .0,ca,sa,   .0,-sa,ca);}\nmat3 rot_y(float a){float sa = sin(a); float ca = cos(a); return mat3(ca,.0,sa,    .0,1.,.0,   -sa,.0,ca);}\nmat3 rot_z(float a){float sa = sin(a); float ca = cos(a); return mat3(ca,sa,.0,    -sa,ca,.0,  .0,.0,1.);}\n\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,s,-s,c);}\nconst mat4 m4 = mat4(-0.164, -0.223, -0.455, 0.846, \n                     -0.714, 0.576, 0.344, 0.198, \n                     -0.526, -0.782, 0.301, -0.146,\n                     -0.431, 0.084, -0.764, -0.473)*1.93;\n\nfloat map(vec3 p)\n{\n    float d = 0.;\n    float lp = length(p.xz);\n    p.xz *= mm2(p.y*.05 - iTime*0.015);\n    p.y *= .58;\n    vec4 q = vec4(p, iTime*0.4 - p.y*.55);\n    q.y -= iTime*0.16;\n    float cl = dot(p.xz,p.xz);\n    vec3 bp = p;\n    q *= .85;\n    float z = 1.15;\n    float trk = 1.;\n    \n    for(int i = 0; i < 6; i++)\n    {\n        d += .75-abs(dot(cos(q*.85), sin(q.yzwx)) - .9)*z;   \n        z *= 0.65;\n        q *= m4;\n        q += (sin(q.zxwy*trk) + (cos(q*1.5 - 2.5)*0.3))*0.3;\n        trk *= 1.4;\n    }\n    return d*1.2 - cl*0.2 + .0;\n}\n\nvec4 render( in vec3 ro, in vec3 rd )\n{\n    const vec3 lpos = vec3(0.5, 1, 1.);\n\tvec4 rez = vec4(0);\n\tfloat t = 6.5;\n\tfor(int i=0; i<70; i++)\n\t{\n\t\tif(rez.a > 0.97 || t > 18.)break;\n\n\t\tvec3 pos = ro + t*rd;\n        float dn = map(pos);\n\t\tfloat den = clamp(dn, .0, 1.);\n        \n        if (dn < 0.0) \n        {\n            t += .2;\n            continue;\n        }\n        vec4 col = vec4(1.3*vec3(0.105,0.105,0.11)*smoothstep(-12.,5., pos.y),0.08)*den;\n        float dif =  clamp((dn - map(pos*vec3(1.2) + .3))/8., 0.01, 1. );\n        float dif2 =  clamp((dn - map(pos*vec3(1.1) + .7))/6., 0.01, 1. );\n        col.xyz *= vec3(0.01,0.01,0.01) + vec3(0.14,0.12,0.1)*dif + vec3(0.15,0.12,0.1)*dif2;\n        \n        rez = rez + col*(1. - rez.a);\n        t += clamp(0.12 - den*.1, 0.05, 0.15);\n        \n\t}\n\treturn clamp(rez, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n\tvec2 q = fragCoord.xy / iResolution.xy;\n    vec2 p = q - 0.5;\n\tp.x*=iResolution.x/iResolution.y;\n\tvec2 mo = iMouse.xy / iResolution.xy-.5;\n    mo = (mo==vec2(-.5))?mo=vec2(0.12,0.15):mo;\n\tmo.x *= iResolution.x/iResolution.y;\n    mo*=4.14;\n\tmo.y = clamp(mo.y*0.6-.5,-4. ,.15 );\n\t\n    vec3 ro = vec3(0.,-0.0,12.);\n    vec3 rd = normalize(vec3(p,-1.5));\n    \n    mat3 cam = rot_x(-mo.y)*rot_y(-mo.x);\n\trd *= cam;\n    ro *= cam;\n    \n    vec4 scn = render(ro, rd);\n    vec3 col = vec3(0.1, 0.1, 0.11)*smoothstep(-1.,1.,rd.y)*7.;\n    \n    col = col*(1.0-scn.w) + scn.xyz;\n\n    col = pow(col, vec3(0.45));\n    col *= pow( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.1)*0.9+0.1; //Vign\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"WtdfR8","date":"1666976341","viewed":787,"name":"Stateless smoke","username":"nimitz","description":"Trying to get somewhat realistic smoke animation, once again based on my periodic noise with deformation, but this time using a 4-dimensional space to add more believable rotational forces.","likes":73,"published":1,"flags":0,"usePreview":0,"tags":["volumetric","smoke"],"hasliked":0,"parentid":"","parentname":""}}