{"ver":"0.1","info":{"id":"lcjXWm","date":"1706442475","viewed":76,"name":"Fork White hole L3gion 447","username":"L3gion","description":"Modification of black hole for white hole from : https://www.shadertoy.com/view/MdBSDc","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["space"],"hasliked":0,"parentid":"Mf2SWm","parentname":"White hole"},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// White Hole Shader Adaptation\n\nconst float RETICULATION = 3.;  // Strength of dust texture\nconst float NB_ARMS = 5.;       // Number of arms\nconst float COMPR = .1;         // Compression in arms, suggesting outward motion\nconst float SPEED = -.1;        // Negative speed for outward motion\nconst float GALAXY_R = 1./2.;\nconst float BULB_R = 1./2.5;\nconst vec3 GALAXY_COL = vec3(1., .9, .8);  // Brighter galaxy color\nconst vec3 BULB_COL   = vec3(1., 1., 0.8); // Brighter bulb color\nconst float BULB_WHITE_R = 0.;          // Radius for the white core\nconst vec3 BULB_WHITE_COL   = vec3(1, 1, 1); // Bright white core\nconst vec3 SKY_COL    = .5*vec3(.2, .4, .7); // Slightly brighter sky color\n\n#define Pi 3.1415927\n#define t iTime\n\n// Base noise function remains the same\nfloat tex(vec2 uv) {\n    float n = texture(iChannel0,uv).r;\n    #define MODE 3\n    #if MODE==3\n        #define A 1.5\n        return 1.-abs(2.*n-1.);\n    #endif\n}\n\n// Noise function with reversed SPEED for outward motion\nfloat noise(vec2 uv) {\n    float v=0.;\n    float a=-SPEED*t, co=cos(a), si=sin(a);\n    mat2 M = mat2(co, -si, si, co);\n    const int L = 7;\n    float s=1.;\n    for (int i=0; i<L; i++) {\n        uv = M*uv;\n        float b = tex(uv*s);\n        v += 1./s * pow(b, RETICULATION);\n        s *= 2.;\n    }\n    return v/2.;\n}\n\n// Main image function adapted for white hole representation\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy/iResolution.y-vec2(.8,.5);\n    vec3 col;\n\n\n    // Spiral stretching with distance adapted for outward motion\n    float rho = length(uv);\n    float ang = atan(uv.y,uv.x);\n    float shear = 2.*log(rho);\n    float c = cos(shear), s = sin(shear);\n    mat2 R = mat2(c, -s, s, c);\n\n    // Galaxy profile adjustments for white hole\n    float r;\n    r = rho/GALAXY_R; float dens = exp(-r*r);\n    r = rho/BULB_R;   float bulb = exp(-r*r);\n    r = rho/BULB_WHITE_R; float bulb_white = exp(-r*r);\n    float phase = NB_ARMS*(ang+shear);  // '+' for outward spiral\n    ang = ang+COMPR*cos(phase)-SPEED*t;  // '+' for outward motion\n    uv = rho*vec2(cos(ang),sin(ang));\n    float spires = 1.+NB_ARMS*COMPR*sin(phase);\n    dens *= .7*spires;\n\n    // Gaz texture and stars remain the same\n    float gaz = noise(.09*1.2*R*uv);\n    float gaz_trsp = pow((1.-gaz*dens),2.);\n    float ratio = .8*iResolution.y/iChannelResolution[0].y;\n    float stars1 = texture(iChannel1,ratio*uv+.5).r,\n          stars2 = texture(iChannel0,ratio*uv+.5).r,\n          stars = pow(1.-(1.-stars1)*(1.-stars2),5.);\n\n    // Mixing colors for the white hole\n    col = mix(SKY_COL,\n              gaz_trsp*(1.7*GALAXY_COL) + 1.2*stars, \n              dens);\n    col = mix(col, 2.*BULB_COL, 1.2*bulb);\n    col = mix(col, 1.2*BULB_WHITE_COL, 2.0*bulb_white);\n\n    fragColor = vec4(col,1.);\n}\n","name":"Image","description":"","type":"image"}]}