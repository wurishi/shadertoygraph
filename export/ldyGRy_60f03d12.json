{"ver":"0.1","info":{"id":"ldyGRy","date":"1455163973","viewed":307,"name":"SGI cube","username":"thaga","description":"my first raymarching shader.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","sgi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 segment(vec3 p, vec3 start, vec3 dir, float len, vec4 normal_dist)\n{\n    vec3 np = start + clamp(dot(p - start, dir), 0.0, len) * dir;\n    vec3 normal = p - np;\n    float dist = length(normal) - 0.1;\n    if (dist < normal_dist.w) {\n        normal_dist.xyz = normalize(normal);\n        normal_dist.w = dist;\n    }\n\treturn normal_dist;\n}\n\nvec4 cube(vec3 p)\n{\n\tvec3 X = vec3( 0.7071068, -0.4082483, 0.5773503);\n\tvec3 Y = vec3( 0.0000000,  0.8164966, 0.5773503);\n\tvec3 Z = vec3(-0.7071068, -0.4082483, 0.5773503);\n\t\n\tfloat a = 0.2;\n\tfloat h = 0.3;\n    \n\tfloat h2 = h + a;\n\tfloat l = h * 2.0;\n\tfloat l2 = l + a;\n\t\n\treturn\n\t\tsegment(p,  h*X +h2*Y  +h*Z, -Z, l2,\n\t\tsegment(p,  h*X +h2*Y -h2*Z, -X,  l,\n\t\tsegment(p, -h*X +h2*Y -h2*Z, -Y, l2,\n\t\tsegment(p, -h*X  -h*Y -h2*Z,  X, l2,\n\t\tsegment(p, h2*X  -h*Y -h2*Z,  Y,  l,\n\t\tsegment(p, h2*X  +h*Y -h2*Z,  Z, l2,\n\t\tsegment(p, h2*X  +h*Y  +h*Z, -Y, l2,\n\t\tsegment(p, h2*X -h2*Y  +h*Z, -Z,  l,\n\t\tsegment(p, h2*X -h2*Y  -h*Z, -X, l2,\n\t\tsegment(p, -h*X -h2*Y  -h*Z,  Z, l2,\n\t\tsegment(p, -h*X -h2*Y +h2*Z,  X,  l,\n\t\tsegment(p,  h*X -h2*Y +h2*Z,  Y, l2,\n\t\tsegment(p,  h*X  +h*Y +h2*Z, -X, l2,\n\t\tsegment(p,-h2*X  +h*Y +h2*Z, -Y,  l,\n\t\tsegment(p,-h2*X  -h*Y +h2*Z, -Z, l2,\n\t\tsegment(p,-h2*X  -h*Y  -h*Z,  Y, l2,\n\t\tsegment(p,-h2*X +h2*Y  -h*Z,  Z,  l,\n\t\tsegment(p,-h2*X +h2*Y  +h*Z,  X, l2,\n\t\tvec4(0,0,0, 1000) ))))))))))))))))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    if (mouse == vec2(0,0)) mouse.xy = vec2(0.5, 0.5);\n    \n    float view_r = 6.0 * (mouse.y + 0.01);\n\t\n\tfloat t = 0.1 * iTime + 5.0 * (mouse.x - 0.5) - 0.2;\n\tmat3 rot = mat3(vec3(cos(t),0,sin(t)), vec3(0,1,0), vec3(-sin(t),0,cos(t)));\n    \n\tvec3 pos = rot * vec3(0, 0, view_r);\n\tvec3 dir = rot * normalize(vec3((uv.x-0.5)*iResolution.x/iResolution.y, uv.y-0.5, -1.5));\n\tfloat s = max(view_r - 1.0, 0.01);\n\tfor (int i = 0; i < 64; ++i) {\n\t\tpos += s * dir;\n        if (length(pos) > 1.5) break;\n        \n\t\tvec4 nd = cube(pos);\n        if (nd.w < 0.0001) {\n            pos += nd.w * dir + 0.0001 * nd.xyz;\n\t        dir = reflect(dir, nd.xyz);\n            //break;\n        }\n        s = nd.w;\n\t}\n\tfragColor = texture(iChannel0, -dir);\n}\n","name":"Image","description":"","type":"image"}]}