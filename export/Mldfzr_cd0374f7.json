{"ver":"0.1","info":{"id":"Mldfzr","date":"1538676875","viewed":80,"name":"my house","username":"rdcorning","description":"this is a house","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["egp200"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//house data\nvec2 housePos = vec2(0.5, 0.4);\nfloat houseLengthX = 0.3;\nfloat houseLengthY = 0.2;\nvec3 houseColor = vec3(0.9, 0.9, 0.0);\n//window1 data\nvec2 windowPos = vec2(0.35, 0.35);\nvec3 windowColor = vec3(0.2, 0.5, 1.0);\nfloat windowLength = 0.07;\n//window2 data\nvec2 window2Pos = vec2(0.65, 0.35);\nvec3 window2Color = vec3(0.2, 0.5, 1.0);\nfloat window2Length = 0.07;\n//chimny data\nvec2 chimnyPos = vec2(.35, 0.8);\nvec3 chimneyColor = vec3(0.8, 0.4, 0.0);\nfloat chimnyLengthX = 0.05;\nfloat chimnyLengthY = 0.075;\n//sunset\nfloat brightness = 1.0;\n\nvec4 BG = vec4(0.0);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //list to do\n    \n    //1. make rectange for house\n    //2. make 2 square for windows\n    //3. make square for chimny\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aRatio = iResolution.y / iResolution.x;\n    uv.y *= aRatio;\n    \n    //----------------------------------------------------------------------------------------------------------------------\n    //create house\n    vec4 houseLayer = vec4(0.0);\n    housePos.y *= aRatio;\n    if((length(housePos.x - uv.x) < houseLengthX) && (length(housePos.y - uv.y) < houseLengthY))\n    {\n        houseLayer = vec4(houseColor, 1.0);\n    }\n    //----------------------------------------------------------------------------------------------------------------------\n    //create window1\n    vec4 windowLayer = vec4(0.0);\n    windowPos.y *= aRatio;\n    if((length(windowPos.x - uv.x) < windowLength) && (length(windowPos.y - uv.y) < windowLength))\n    {\n        windowLayer = vec4(windowColor, 0.7);\n    }\n    //----------------------------------------------------------------------------------------------------------------------\n    //create window2\n    vec4 window2Layer = vec4(0.0);\n    window2Pos.y *= aRatio;\n    if((length(window2Pos.x - uv.x) < window2Length) && (length(window2Pos.y - uv.y) < window2Length))\n    {\n        window2Layer = vec4(window2Color, 0.7);\n    }\n    //----------------------------------------------------------------------------------------------------------------------\n    //create chinmey\n    chimnyPos.y *= aRatio;\n    vec4 chinmeyLayer = vec4(0.0);\n    if((length(chimnyPos.x - uv.x) < chimnyLengthX) && (length(chimnyPos.y - uv.y) < chimnyLengthY))\n    {\n        chinmeyLayer = vec4(chimneyColor, 1.0);\n    }\n    //----------------------------------------------------------------------------------------------------------------------\n    //create sunset\n    vec4 sunSet = vec4(1.0, uv.y, 0.3, 1.0);\n   \tsunSet.rg *= abs(cos(iTime) * brightness);\n\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec4 Comp = mix(BG, sunSet, sunSet.a);\n    Comp = mix (Comp, houseLayer, houseLayer.a);\n    Comp = mix (Comp, windowLayer, windowLayer.a);\n    Comp = mix (Comp, window2Layer, window2Layer.a);\n    Comp = mix (Comp, chinmeyLayer, chinmeyLayer.a);\n\n\n\n\n    \n   \tfragColor = Comp;\n}","name":"Image","description":"","type":"image"}]}