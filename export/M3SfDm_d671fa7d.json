{"ver":"0.1","info":{"id":"M3SfDm","date":"1729531282","viewed":96,"name":"cosmic way","username":"nayk","description":"originals https://www.shadertoy.com/view/wdtczM https://www.shadertoy.com/view/MdXSzS","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fractal","stars","universe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define resolution iResolution.xy\n\nfloat snow(vec2 uv,float scale)\n{\n\tfloat w=smoothstep(1.,0.,-uv.y*(scale/10.));if(w<.0)return 0.;\n\t\n\tuv*=scale;vec2 s=floor(uv),f=fract(uv),p;float k=40.,d;\n\tp=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(7,3,6,5))*5.))-f;d=length(p);k=min(d,k);\n\tk=smoothstep(0.,k,sin(f.x+f.y)*0.003);\n    \treturn k*w;\n}\nconst float tau = 6.28318530717958647692;\n\n// Gamma correction\n#define GAMMA (2.2)\n\nvec3 ToLinear( in vec3 col )\n{\n\t// simulate a monitor, converting colour values into light values\n\treturn pow( col, vec3(GAMMA) );\n}\n\nvec3 ToGamma( in vec3 col )\n{\n\t// convert back into colour values, so the correct light will come out of the monitor\n\treturn pow( col, vec3(1.0/GAMMA) );\n}\n\nvec4 Noise( in ivec2 x )\n{\n\treturn texture( iChannel0, (vec2(x)+0.5)/256.0, -100.0 );\n}\n\nvec4 Rand( in int x )\n{\n\tvec2 uv;\n\tuv.x = (float(x)+0.5)/256.0;\n\tuv.y = (floor(uv.x)+0.5)/256.0;\n\treturn texture( iChannel0, uv, -100.0 );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) - .5;\n    vec2 uv3=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y); \n  vec4 o =fragColor;\n  vec2 F =fragCoord;\n  vec2 R = iResolution.xy; \n    o-=o;\n    for(float d,t = -iTime*.1, i = 0. ; i > -1.; i -= .06 )          \t\n    {   d = fract( i -3.*t );                                          \t\n        vec4 c = vec4( ( F - R *.5 ) / R.y *d ,i,0 ) * 28.;            \t\n        for (int j=0 ; j++ <27; )                                      \t\n            c.xzyw = abs( c / dot(c,c)                                 \t\n                    -vec4( 7.-.2*sin(t) , 6.3 , .7 , 1.-cos(t/.8))/7.);\t\n       o -= c * c.yzww  * d--*d  / vec4(3,5,1,1);                     \n    }\n    \n\tfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n    vec3 finalColor=vec3(0);\n    float c=smoothstep(0.1,0.0,clamp(uv3.x*.01+.99,0.,.99));\n    mat2 ma = mat2(co, si, -si, co);\n\tc+=snow(uv3*ma,3.)*.8;\n\tc+=snow(uv3,5.)*.7;\n\tc+=snow(uv3,7.)*.6;\n\t\n\tc+=snow(uv3,9.)*.5;\n\t\n\tc+=snow(uv3,11.)*.4;\n\t\n\tc+=snow(uv3,13.)*.3;\n\t\n\tc+=snow(uv3,15.)*.2;\n\t\n\tc+=snow(uv3,17.)*.1;\n\tvec3 ray;\n\tray.xy = 2.0*(fragCoord.xy-iResolution.xy*.5)/iResolution.x;\n\tray.z = 1.0;\n\n\tfloat offset = -iTime*.05;\t\n\tfloat speed2 = (cos(offset)+1.0)*2.0;\n\tfloat speed = speed2+.1;\n\toffset += sin(offset)*.96;\n\toffset *= 2.0;\n\t\n\t\n\tvec3 col3 = vec3(0);\n\t\n\tvec3 stp = ray/max(abs(ray.x),abs(ray.y));\n\t\n\tvec3 pos = 1.0*stp+.5;\n\tfor ( int i=0; i < 33; i++ )\n\t{\n\t\tfloat z = Noise(ivec2(pos.xy)).x;\n\t\tz = fract(z-offset);\n\t\tfloat d = 100.0*z-pos.z;\n\t\tfloat w = pow(max(0.0,1.0-10.0*length(fract(pos.xy)-.5)),2.0);\n\t\tvec3 c = max(vec3(0),vec3(1.0-abs(d+speed2*.05)/speed,1.0-abs(d)/speed,1.0-abs(d-speed2*.5)/speed));\n\t\tcol3 += 0.5*(1.0-z)*c*w;\n\t\tpos += stp;\n\t}\n\t\n\tvec4 fr4 = vec4(ToGamma(col3),1.0)+o;\n \n\tfinalColor=(vec3(c*1.0,c*0.8,c*01.9));\n\tvec4 ragColor23 = vec4(finalColor,1)*81.0;\n    \n\t\nvec2 uv2 = (fragCoord.xy / iResolution.xy);\n    float r = length(vec2(0.5) - uv2);\n    float red = sin(r * 140.0 - time * 40.0);\n    float green = sin(r * 144.0 - time * 40.0 - 1.0);\n    float blue = sin(r * 146.0 - time * 40.0 - 2.0);\n    vec4 ragColor2 = vec4(vec3(red, green, blue),1.0); \n    \n    \n\tfloat v,v1,v2,v3;\n    v1 = v2 = v3 = 0.0;\n\t\n\tfloat s = 0.0;\n\tfor (int i = 0; i < 30; i++)\n\t{\n\t\tvec3 p = s * vec3(uv, 0.0);\n\t\n\t\tp += vec3(.22, .3, s - 1.5 - sin(iTime * .13) * .1)+fr4.xyz;\n\t\tfor (int i = 0; i < 8; i++)\tp = abs(p) / dot(p,p) - 0.659;\n\t\tv1 += dot(p,p) * .0015 * (1.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\n\t\tv2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\n\t\tv3 += length(p.xy*10.) * .0003;\n\t\ts  += .035;\n\t}\n\t\n\tfloat len = length(uv);\n\tv1 *= smoothstep(.7, .0, len);\n\tv2 *= smoothstep(.5, .0, len);\n\tv3 *= smoothstep(.9, .0, len);\n\t\n\tvec3 col = vec3( v3 * (1.5 + sin(iTime * .2) * .4),\n\t\t\t\t\t(v1 + v3) * .3,\n\t\t\t\t\t v2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3) * .3+ragColor23.xyz;\n\n\tfragColor=vec4(min(pow(abs(col) , vec3(1.2)), 1.0), 1.0)+fr4*vec4(vec3(0.1,0.5,1.),1.);\n}","name":"Image","description":"","type":"image"}]}