{"ver":"0.1","info":{"id":"dsffzl","date":"1689065177","viewed":104,"name":"Lemniscate distance I","username":"gleboneloner","description":"Numerical approximation of the shortest distance to Bernoulli lemniscate.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["sdf","bisection","lemniscate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float segment ( vec2 p, vec2 a, vec2 b ) {\n    \n    float h; b = b-a; a = p-a;\n    h = clamp( dot(a,b)/dot(b,b), 0.0, 1.0 );\n    return distance( a, h*b );\n    \n}\n\nfloat lemniscate ( vec2 p ) {\n\n    p = abs(p); float a = 0.0, b = 1.0;\n    \n    float H1 = p.x+p.y; float H3 = 3.0*H1;\n    float H2 = p.x-p.y; float H4 = 3.0*H2;\n    \n    for ( int i = 0; i < 6; i ++ ) {\n    \n        float t = (a+b)/2.0;\n        \n        float E = t*(t*(t*t*(t*(t*H2-2.0)+H3)-H4)+2.0)-H1;\n    \n        ( E < 0.0 ) ? a = t : b = t;\n    \n    }; float u = a*a*a, v = b*b*b;\n    \n    vec2 q1 = vec2(a+u,a-u)/(a*u+1.0);\n    vec2 q2 = vec2(b+v,b-v)/(b*v+1.0);\n    \n    return segment(p,q1,q2);\n\n}\n\nvoid mainImage ( out vec4 color, vec2 coords ) {\n    \n    const float SCALE = 0.65;\n    \n    vec2 uv = (coords-iResolution.xy/2.0)/iResolution.y/SCALE;\n    \n    float D = lemniscate(uv) * iResolution.y * SCALE;\n    \n    float n = clamp( abs(mod(D,8.0)-4.0)-0.8, 0.0, 1.0 );\n    \n    color = mix( vec4(0.55), vec4(0.8), n );\n    \n    color *= 1.0-0.8/exp(D/20.0);\n    \n    float s = clamp( 1.2-D/1.5, 0.0, 1.0 );\n    \n    color = mix( color, vec4(1), s );\n    \n}","name":"Image","description":"","type":"image"}]}