{"ver":"0.1","info":{"id":"stdyWs","date":"1661017082","viewed":199,"name":"MurMur3 hash","username":"chemaguerra","description":"My 1st Shadertoy. Simple implementation of the venerable MurMur3 hash. The goal is to visualize the nice hashing properties of MurMur3 specifically. Not to build a generic GPU-efficient pixel-coloring shader.\nRef: https://en.wikipedia.org/wiki/MurmurHash","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hash","murmur3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// The MIT License\n//\n// Copyright (c) 2022 Chema Guerra\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nvoid mainImage( out vec4 o, in vec2 uv )\n{\n  uvec2 ij = uvec2( uv / 8. );  // Fat 8x8 pixels.\n\n  uint  h  = murmur3_cellhash( ij.x, ij.y, uint( iTime * 4. ) );  // i,j,k->h.\n\n  o.rgb = ( vec3( ( uvec3( h ) >> uvec3( 0u, 8u, 16u ) ) & 0xFFu ) / 255. );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//\n// The MIT License\n//\n// Copyright (c) 2022 Chema Guerra\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\n//----------//\n// Murmur3. //\n//----------//\n\n// https://en.wikipedia.org/wiki/MurmurHash\n\nuint murmur3_scramble( in uint x, in uint key )\n{\n  const uint c1 = 0xCC9E2D51u;\n  const uint c2 = 0x1B873593u;\n  const uint m  = 0x00000005u;\n  const uint n  = 0xE6546B64u;\n\n                                                           key *= c1;\n  key = (   ( ( key << 15 ) | ( key >> 17 ) )           ); key *= c2; x ^= key;\n  x   = ( ( ( ( x   << 13 ) | ( x   >> 19 ) ) * m ) + n );\n\n  return x;\n}\n\n// Avalanche test: https://www.shadertoy.com/view/NtVczW\n  \nuint murmur3_finalize( in uint x )\n{\n  x ^= ( x >> 16 ); x *= 0x85EBCA6Bu;\n  x ^= ( x >> 13 ); x *= 0xC2B2AE35u;\n  x ^= ( x >> 16 );\n\n  return x;\n}\n\nuint murmur3_cellhash( const uint i, const uint j, in uint hash )\n{\n  hash = murmur3_scramble( hash, i );\n  hash = murmur3_scramble( hash, j );\n\n  return murmur3_finalize( hash ^ ( 2u * 4u ) );\n}\n\nuint murmur3_cellhash( const uint i, const uint j, const uint k, in uint hash )\n{\n  hash = murmur3_scramble( hash, i );\n  hash = murmur3_scramble( hash, j );\n  hash = murmur3_scramble( hash, k );\n\n  return murmur3_finalize( hash ^ ( 3u * 4u ) );\n}","name":"Common","description":"","type":"common"}]}