{"ver":"0.1","info":{"id":"NdcBDN","date":"1656449690","viewed":714,"name":"Mosaic Shuffle 2","username":"leon","description":"A weird mosaic","likes":24,"published":3,"flags":32,"usePreview":0,"tags":["glitch","weird"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n// (main code is Buffer A)\n// Mosaic Shuffle 2 by Leon Denise 2022-06-28\n// using code from Dave Hoskins\n// Fork of \"Mosaic Shuffle\" by leon. https://shadertoy.com/view/Nd3BWN\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // coordinates\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = (fragCoord-iResolution.xy/2.)/iResolution.y;\n    float unit = 1./iResolution.y;\n    \n    // timing\n    float time = iTime*10.;\n    float anim = fract(time);\n    float index = floor(time);\n    \n    // displace\n    vec2 rnd1 = hash21(index)*2.-1.;\n    vec2 target = p + rnd1;\n    float mask = hash12(floor(uv*hash11(index+78.)*32.)+index);\n    float a = 6.283*floor(hash11(index*72.)*4.)/4.;\n    vec2 dir = vec2(cos(a),sin(a));\n    vec2 offset = (mask) * dir * unit * 10. * hash12(floor(uv*16.));\n    \n    // spawn frame\n    bool spawn = hash12(floor(uv*hash11(index+78.)*8.)+index) > 0.9;\n    if (iFrame < 1 || spawn)\n    {\n        fragColor = texture(iChannel1, uv);\n    }\n    else\n    {\n        // frame buffer\n        fragColor = texture(iChannel0, uv-offset);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define ss(a,b,t) smoothstep(a,b,t)\n\n\nmat2 rot (float a) { return mat2(cos(a),-sin(a),sin(a),cos(a)); }\n\n// Dave Hoskins\n// https://www.shadertoy.com/view/4djSRW\nfloat hash11(float p){\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\nvec2 hash21(float p)\n{\n\tvec3 p3 = fract(vec3(p) * vec3(.1031, .1030, .0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}","name":"Common","description":"","type":"common"}]}