{"ver":"0.1","info":{"id":"DlscD7","date":"1709639331","viewed":64,"name":"Traveling Voronoi","username":"moziz","description":"Simple voronoi visualization","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat noise(float p){\n\tfloat fl = floor(p);\n  float fc = fract(p);\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\nconst int voros_count = 64;\nconst float blob_size = 32.;\n\nvec2 voro_point(float i) {\n    return vec2(\n        noise(iTime / 9. + i) * blob_size - blob_size/2.,\n        noise(iTime / 8. + i) * blob_size - blob_size/2.\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - vec2(.5, .5);\n    uv *= 32.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float dist_p_closest = 1e6;\n    vec2 p_closest = vec2(1e6, 1e6);\n    for (int i = 0; i < voros_count; ++i) {\n        vec2 voro = voro_point(float(i));\n\n        float dist = length(voro - uv);\n        if (dist < dist_p_closest) {\n            dist_p_closest = dist;\n            p_closest = voro;\n        }\n    }\n    \n    float dist_neighbor = 1e6;\n    for (int i = 0; i < voros_count; ++i) {\n        vec2 voro = voro_point(float(i));\n        \n        float dist = length(voro - p_closest);\n        if (dist > 0.0001 && dist < dist_neighbor) {\n            dist_neighbor = dist;\n        }\n    }\n    \n\n    float asd = 0.;\n    if (dist_neighbor / 2. - 0.05 < dist_p_closest) {\n        asd = 1.;\n    }\n\n    fragColor = vec4(\n        vec2(\n            noise(p_closest.x),\n            noise(p_closest.y)\n        ) * 0.3,\n        asd,\n        1.0\n    );\n}","name":"Image","description":"","type":"image"}]}