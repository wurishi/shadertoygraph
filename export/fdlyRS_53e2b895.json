{"ver":"0.1","info":{"id":"fdlyRS","date":"1642433174","viewed":50,"name":"Biohazard","username":"JustLewis","description":"just shaping innit","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shapingpractice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 radcolour = vec3(1.0,1.0,0.0);\n\n//Radioactive.\nvec3 Radioactive(float angle, vec2 CircleCentre)\n{\n    float rad = cos(angle * 3.0);\n    rad = step(0.9,1.0 - rad);\n    rad = max(step(0.35,length(CircleCentre)),rad);\n    rad = max(1.0 - step(0.125,length(CircleCentre)),rad);\n    rad = min(step(0.1,length(CircleCentre) * 2.0),rad);\n    \n    return mix(vec3(0.0),radcolour,vec3(rad));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n\n    vec3 col = smoothstep(vec3(0.0,0.0,0.0),vec3(1.3,1.3,1.3),vec3(uv.y));\n    \n    vec2 circlepos = vec2(0.5) - uv;\n    float rad = length(circlepos) * 5.0;\n    float angle = atan(circlepos.y,circlepos.x);\n    \n    if (2.0 - rad > 0.0)\n    {    \n    col = Radioactive(angle,circlepos);\n    //col = Biohazard(angle,circlepos);\n    \n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}