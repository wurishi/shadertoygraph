{"ver":"0.1","info":{"id":"3dBGWG","date":"1549810604","viewed":197,"name":"Line Boxes","username":"gaz","description":"3d","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  inspired : https://www.shadertoy.com/view/ll2SRy\n\nvec3 rotate(vec3 p,vec3 axis,float theta)\n{\n    vec3 v = cross(p, axis), u = cross(v, axis);\n    return u * cos(theta) + v * sin(theta) + axis * dot(p, axis);   \n}\n\nvec2 rotate(vec2 p, float theta)\n{\n    return p * cos(theta) + vec2(-p.y, p.x) * sin(theta);\n}\n\nfloat deLineBox(vec3 p)\n{\n    p=mod(p,4.0)-2.0;\n    float de = 1e5;\n    for(float j=1.0; j<4.0;j++)\n    {\n        p = abs(p)-1.0;\n        for(int i=0; i<3;i++)\n        {\n            vec3 q =p / j;\n            q[i]=max(0.0,q[i]);\n            de= min(de,length(q));\n        }\n        p*=2.0;\n    }\n    return de;\n}\n\nfloat map(vec3 p)\n{   \n    float t = floor(iTime/5.5)*3.5 + min(9.0, mod(iTime,10.0));\n    p =  rotate(p,normalize(vec3(rotate(vec2(1,2),sin(t/3.)),3)),t*0.35);\n    return deLineBox(p);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy*2.0-iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(1,2,3)*sin(iTime*0.02+ 0.2*sin(iTime*0.2));\n    vec3 rd0 = normalize(vec3(uv, -1.0));\n    vec3 rd1 = normalize(vec3(uv, (1.0-dot(uv, uv)*0.5)*0.5));\n    vec3 rd = mix(rd0, rd1, step(6.0,mod(iTime,12.0)));\n\n    float g=0.0,z = 0.05, d;\n \tfor(int i = 0; i < 100; i++)\n \t{\n    \tz += d = 0.2*map(ro + rd * z);\n        if(d < 0.001 || d > 10.0) break;\n        g += smoothstep(0.006,0.0,d);\n        //g += exp(-d *500.0)*exp(-z*z*0.2);\n  \t}\n    g = min(1.0,g);\n    vec3 col = mix(vec3(0.9,0.3,0.1),vec3(1,1,0.8), smoothstep(0.01,0.003,d));  \n    col = mix (vec3(0.05,0.05,0.07)*dot(uv,uv),col,g);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}