{"ver":"0.1","info":{"id":"mdGcW1","date":"1696042307","viewed":232,"name":"Line Integral Convolution test","username":"Zi7ar21","description":"I got this idea after talking to a Computational Astrophysicist who specializes in MHD, basically just advect noise over a vector field (typically related to an image) and then combine the texture back with the image, useful for visualizing magnetic lines","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["visualization","magnetism"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float g(float x, float sigma, float mu) {\n    x -= mu;\n    sigma = sigma != 0.0 ? 1.0/sigma : 1.0;\n    x *= sigma;\n    x *= x;\n    return sigma*0.3989422804014326779399460599343818684758586311649346576659258297*exp(-0.5*x);\n}\n\n/*\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    //fragCoord += vec2(0.3,0.3)*iResolution.xy;\n    //fragCoord *= 0.1*sin(iTime)+0.3;\n    //fragCoord -= vec2(0.3,0.3)*iResolution.xy;\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    //fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    //fragColor = texelFetch(iChannel2, ivec2(fragCoord), 0);\n    //fragColor -= 2.0*texelFetch(iChannel3, ivec2(fragCoord), 0);\n    fragColor = fragColor*(1.0-texture(iChannel3, fragCoord/iResolution.xy));\n    //fragColor = texelFetch(iChannel3, ivec2(fragCoord), 0);\n\n    fragColor = vec4(clamp(fragColor.rgb,0.0,1.0),1.0);\n}\n*/\n\nfloat noise(vec2 x) {\nx *=2.0; // scale the noise\n    float fx = fract(x.x);\n    float fy = fract(x.y);\n    x = floor(x);\n    return mix(\n    mix(texelFetch_repeat(iChannel2, ivec2(x)+ivec2(0,0), 0).r>0.9?1.0:0.0,texelFetch_repeat(iChannel2, ivec2(x)+ivec2(1,0), 0).r>0.9?1.0:0.0,fx),\n    mix(texelFetch_repeat(iChannel2, ivec2(x)+ivec2(0,1), 0).r>0.9?1.0:0.0,texelFetch_repeat(iChannel2, ivec2(x)+ivec2(1,1), 0).r>0.9?1.0:0.0,fx),\n    fy);\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    //fragCoord *= 0.3*sin(iTime)+0.6;\n    //float scale = sin(iTime)+2.0;\n    float scale = 4.0;\n    fragCoord += scale*iMouse.xy;\n    fragCoord *= 1.0/(scale+1.0);\n    fragColor = vec4(0);\n\n    vec2 x;\n    const float dt = 0.25;\n    const float sig = 10.0;\n    x=vec2(0);\n    for(int i = 0; i < 99; i++) {\n        x += dt*texture(iChannel1, (fragCoord+x)/iResolution.xy).xy;\n        fragColor += g(dt*float(i), sig, 0.0)*vec4(vec3(noise(fragCoord+x)), 1.0);\n    }\n    x=vec2(0);\n    for(int i = 0; i < 99; i++) {\n        x -= dt*texture(iChannel1, (fragCoord+x)/iResolution.xy).xy;\n        if(i == 0) continue;\n        fragColor += g(dt*float(i), sig, 0.0)*vec4(vec3(noise(fragCoord+x)), 1.0);\n    }\n\n    fragColor = vec4(fragColor.a != 0.0 ? fragColor.rgb / fragColor.a : fragColor.rgb, 1.0);\n    //fragColor = vec4(texture(iChannel0, fragCoord/iResolution.xy).rgb*(1.0-5.0*fragColor.rgb), 1.0);\n    fragColor = vec4(texture(iChannel3, fragCoord/iResolution.xy).rgb*(1.0-2.0*fragColor.rgb), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec4 texelFetch_repeat(sampler2D _sampler, ivec2 _coord, int _lod) {\n    // no idea why the -1 is neccesary but the pressure is slightly wrong without it\n    // maybe textureSize() is wrong?\n    ivec2 _textureSize = textureSize(_sampler, _lod) - 1;\n\n    // :sob: in GLSL, the % operator is undefined if one or both input integers are negative\n    // so we blasphemously convert our integers to floats and back and use the float modulo\n    //_coord.x = int(mod(float(_coord.x), float(_textureSize.x)));\n    //_coord.y = int(mod(float(_coord.y), float(_textureSize.y)));\n    //return texelFetch(_sampler, _coord, _lod);\n\n    // fixed! https://www.alecjacobson.com/weblog/?p=1140\n    return texelFetch(_sampler, ((_coord % _textureSize) + _textureSize) % _textureSize, _lod);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Buffer A: Original Image\nfloat textureMix(sampler2D sampler, vec2 x) {\n    vec3 col =  texture(iChannel0, x).rgb;\n    return col.r+col.g+col.b;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    //fragCoord *= 0.1*sin(iTime)+0.3;\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n\n    fragColor = vec4(\n     0.0035714285714285714285714285714285714285714285714285714285714286 * textureMix(iChannel0, (fragCoord - vec2(4, 0))/iResolution.xy)+\n    -0.0380952380952380952380952380952380952380952380952380952380952381 * textureMix(iChannel0, (fragCoord - vec2(3, 0))/iResolution.xy)+\n     0.2000000000000000000000000000000000000000000000000000000000000000 * textureMix(iChannel0, (fragCoord - vec2(2, 0))/iResolution.xy)+\n    -0.8000000000000000000000000000000000000000000000000000000000000000 * textureMix(iChannel0, (fragCoord - vec2(1, 0))/iResolution.xy)+\n     0.8000000000000000000000000000000000000000000000000000000000000000 * textureMix(iChannel0, (fragCoord + vec2(1, 0))/iResolution.xy)+\n    -0.2000000000000000000000000000000000000000000000000000000000000000 * textureMix(iChannel0, (fragCoord + vec2(2, 0))/iResolution.xy)+\n     0.0380952380952380952380952380952380952380952380952380952380952381 * textureMix(iChannel0, (fragCoord + vec2(3, 0))/iResolution.xy)+\n    -0.0035714285714285714285714285714285714285714285714285714285714286 * textureMix(iChannel0, (fragCoord + vec2(4, 0))/iResolution.xy),\n     0.0035714285714285714285714285714285714285714285714285714285714286 * textureMix(iChannel0, (fragCoord - vec2(0, 4))/iResolution.xy)+\n    -0.0380952380952380952380952380952380952380952380952380952380952381 * textureMix(iChannel0, (fragCoord - vec2(0, 3))/iResolution.xy)+\n     0.2000000000000000000000000000000000000000000000000000000000000000 * textureMix(iChannel0, (fragCoord - vec2(0, 2))/iResolution.xy)+\n    -0.8000000000000000000000000000000000000000000000000000000000000000 * textureMix(iChannel0, (fragCoord - vec2(0, 1))/iResolution.xy)+\n     0.8000000000000000000000000000000000000000000000000000000000000000 * textureMix(iChannel0, (fragCoord + vec2(0, 1))/iResolution.xy)+\n    -0.2000000000000000000000000000000000000000000000000000000000000000 * textureMix(iChannel0, (fragCoord + vec2(0, 2))/iResolution.xy)+\n     0.0380952380952380952380952380952380952380952380952380952380952381 * textureMix(iChannel0, (fragCoord + vec2(0, 3))/iResolution.xy)+\n    -0.0035714285714285714285714285714285714285714285714285714285714286 * textureMix(iChannel0, (fragCoord + vec2(0, 4))/iResolution.xy),\n    0.0,\n    0.0);\n\n    float t = 0.31234754256*3.1415926535;\n    fragColor.xy = mat2(cos(t),sin(t),-sin(t),cos(t))*fragColor.xy;\n    fragColor *= 3.0;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Buffer B: Divergence of Vector Field\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    //if((iFrame % STEP_INTERVAL) != 0) {\n    //    fragColor = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    //\n    //    return;\n    //}\n\n    /*\n    float x0 = texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(1, 0), 0).x;\n    float x1 = texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(1, 0), 0).x;\n    float y0 = texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(0, 1), 0).y;\n    float y1 = texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(0, 1), 0).y;\n\n    fragColor = vec4(0.5 * ((x1 - x0) + (y1 - y0)), 0.0, 0.0, 0.0); // divergence\n    */\n\n    /*\n    fragColor = vec4(\n     0.08333333333 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(2, 0), 0).x +\n    -0.66666666666 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(1, 0), 0).x +\n     0.66666666666 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(1, 0), 0).x +\n    -0.08333333333 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(2, 0), 0).x +\n     0.08333333333 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(0, 2), 0).y +\n    -0.66666666666 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(0, 1), 0).y +\n     0.66666666666 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(0, 1), 0).y +\n    -0.08333333333 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(0, 2), 0).y,\n    0.0, 0.0, 0.0); // divergence\n    */\n\n    fragColor = vec4(\n     0.0035714285714285714285714285714285714285714285714285714285714286 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(4, 0), 0).x +\n    -0.0380952380952380952380952380952380952380952380952380952380952381 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(3, 0), 0).x +\n     0.2000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(2, 0), 0).x +\n    -0.8000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(1, 0), 0).x +\n     0.8000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(1, 0), 0).x +\n    -0.2000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(2, 0), 0).x +\n     0.0380952380952380952380952380952380952380952380952380952380952381 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(3, 0), 0).x +\n    -0.0035714285714285714285714285714285714285714285714285714285714286 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(4, 0), 0).x +\n     0.0035714285714285714285714285714285714285714285714285714285714286 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(0, 4), 0).y +\n    -0.0380952380952380952380952380952380952380952380952380952380952381 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(0, 3), 0).y +\n     0.2000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(0, 2), 0).y +\n    -0.8000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel0, ivec2(fragCoord) - ivec2(0, 1), 0).y +\n     0.8000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(0, 1), 0).y +\n    -0.2000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(0, 2), 0).y +\n     0.0380952380952380952380952380952380952380952380952380952380952381 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(0, 3), 0).y +\n    -0.0035714285714285714285714285714285714285714285714285714285714286 * texelFetch_repeat(iChannel0, ivec2(fragCoord) + ivec2(0, 4), 0).y,\n    0.0,\n    0.0,\n    0.0); // divergence\n\n    /*\n    fragColor = vec4(\n     1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1,  1), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0,  1), 0).x +\n    -1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1,  1), 0).x +\n    -2.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1,  0), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0,  0), 0).x +\n    -2.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1,  0), 0).x +\n     1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1, -1), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0, -1), 0).x +\n    -1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1, -1), 0).x+\n\n    -1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1,  1), 0).y +\n    -2.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0,  1), 0).y +\n    -1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1,  1), 0).y +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1,  0), 0).y +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0,  0), 0).y +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1,  0), 0).y +\n     1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1, -1), 0).y +\n     2.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0, -1), 0).y +\n     1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1, -1), 0).y,\n     0.0,\n     0.0,\n     0.0);\n     */\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// Buffer C:\n//void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n//    fragColor = vec4(texture(iChannel0, 0.0009765625*fragCoord).r > 0.9 ? 1.0 : 0.0, 0.0, 0.0, 0.0);\n//}\n/*\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float divergence = texelFetch(iChannel1, ivec2(fragCoord), 0).x;\n\n    float x0 = texelFetch_repeat(iChannel2, ivec2(fragCoord) - ivec2(1, 0), 0).x;\n    float x1 = texelFetch_repeat(iChannel2, ivec2(fragCoord) + ivec2(1, 0), 0).x;\n    float y0 = texelFetch_repeat(iChannel2, ivec2(fragCoord) - ivec2(0, 1), 0).x;\n    float y1 = texelFetch_repeat(iChannel2, ivec2(fragCoord) + ivec2(0, 1), 0).x;\n\n    if(iFrame < 1) {\n        x0 = 0.0;\n        x1 = 0.0;\n        y0 = 0.0;\n        y1 = 0.0;\n    }\n\n   \tfragColor = vec4((x0 + x1 + y0 + y1 - divergence) * 0.25, 0.0, 0.0, 0.0);\n}\n*/\n\n/* */\n#define Pressure iChannel1\n#define Divergence iChannel0\nfloat ComputePressure4( vec2 fragCoord )\n{\n    float pressure = 0.0;\n    float divergence = 0.0;\n    \n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-4,  0), 0).x * 1.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-2,  0), 0).x * 16.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-3, -1), 0).x * 4.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-3,  1), 0).x * 4.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 0,  0), 0).x * 36.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-1, -1), 0).x * 24.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-1,  1), 0).x * 24.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-2, -2), 0).x * 6.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-2,  2), 0).x * 6.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 2,  0), 0).x * 16.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 1, -1), 0).x * 24.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 1,  1), 0).x * 24.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 0, -2), 0).x * 16.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 0,  2), 0).x * 16.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-1, -3), 0).x * 4.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2(-1,  3), 0).x * 4.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 4,  0), 0).x * 1.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 3, -1), 0).x * 4.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 3,  1), 0).x * 4.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 2, -2), 0).x * 6.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 2,  2), 0).x * 6.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 1, -3), 0).x * 4.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 1,  3), 0).x * 4.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 0, -4), 0).x * 1.0;\n    pressure += texelFetch_repeat(Pressure, ivec2(fragCoord) + ivec2( 0,  4), 0).x * 1.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-3,  0), 0).x * 1.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-1,  0), 0).x * 9.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-2, -1), 0).x * 3.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-2,  1), 0).x * 3.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-2,  0), 0).x * 4.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 1,  0), 0).x * 25.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 0, -1), 0).x * 25.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 0,  1), 0).x * 25.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 0,  0), 0).x * 16.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-1, -2), 0).x * 3.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-1, -1), 0).x * 8.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-1,  2), 0).x * 3.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-1,  1), 0).x * 8.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2(-1,  0), 0).x * 16.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 3,  0), 0).x * 1.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 2, -1), 0).x * 3.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 2,  1), 0).x * 3.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 2,  0), 0).x * 4.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 1, -2), 0).x * 3.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 1, -1), 0).x * 8.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 1,  2), 0).x * 3.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 1,  1), 0).x * 8.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 0, -3), 0).x * 1.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 0, -2), 0).x * 4.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 0,  3), 0).x * 1.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 0,  2), 0).x * 4.0;\n    divergence += texelFetch_repeat(Divergence, ivec2(fragCoord) + ivec2( 0,  0), 0).x * 64.0;\n\n    return (pressure - divergence) / 256.0;\n}\n/* */\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(ComputePressure4(fragCoord), 0.0, 0.0, 0.0);\n    //fragColor.r *= 0.9;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"// Buffer D:\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    /*\n    float x0 = texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(1, 0), 0).x;\n    float x1 = texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(1, 0), 0).x;\n    float y0 = texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(0, 1), 0).x;\n    float y1 = texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(0, 1), 0).x;\n    vec2 pressure_gradient = 0.5 * (vec2(x1, y1) - vec2(x0, y0));\n    */\n    /*\n    vec2 pressure_gradient = vec2(\n     0.08333333333 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(2, 0), 0).x +\n    -0.66666666666 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(1, 0), 0).x +\n     0.66666666666 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(1, 0), 0).x +\n    -0.08333333333 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(2, 0), 0).x,\n     0.08333333333 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(0, 2), 0).x +\n    -0.66666666666 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(0, 1), 0).x +\n     0.66666666666 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(0, 1), 0).x +\n    -0.08333333333 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(0, 2), 0).x);\n    */\n\n    vec2 pressure_gradient = vec2(\n     0.0035714285714285714285714285714285714285714285714285714285714286 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(4, 0), 0).x +\n    -0.0380952380952380952380952380952380952380952380952380952380952381 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(3, 0), 0).x +\n     0.2000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(2, 0), 0).x +\n    -0.8000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(1, 0), 0).x +\n     0.8000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(1, 0), 0).x +\n    -0.2000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(2, 0), 0).x +\n     0.0380952380952380952380952380952380952380952380952380952380952381 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(3, 0), 0).x +\n    -0.0035714285714285714285714285714285714285714285714285714285714286 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(4, 0), 0).x,\n     0.0035714285714285714285714285714285714285714285714285714285714286 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(0, 4), 0).x +\n    -0.0380952380952380952380952380952380952380952380952380952380952381 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(0, 3), 0).x +\n     0.2000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(0, 2), 0).x +\n    -0.8000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel1, ivec2(fragCoord) - ivec2(0, 1), 0).x +\n     0.8000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(0, 1), 0).x +\n    -0.2000000000000000000000000000000000000000000000000000000000000000 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(0, 2), 0).x +\n     0.0380952380952380952380952380952380952380952380952380952380952381 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(0, 3), 0).x +\n    -0.0035714285714285714285714285714285714285714285714285714285714286 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(0, 4), 0).x);\n\n    /*\n    pressure_gradient = vec2(\n     1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1,  1), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0,  1), 0).x +\n    -1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1,  1), 0).x +\n    -2.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1,  0), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0,  0), 0).x +\n    -2.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1,  0), 0).x +\n     1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1, -1), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0, -1), 0).x +\n    -1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1, -1), 0).x,\n\n    -1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1,  1), 0).x +\n    -2.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0,  1), 0).x +\n    -1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1,  1), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1,  0), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0,  0), 0).x +\n     0.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1,  0), 0).x +\n     1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2(-1, -1), 0).x +\n     2.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 0, -1), 0).x +\n     1.0 * texelFetch_repeat(iChannel1, ivec2(fragCoord) + ivec2( 1, -1), 0).x);\n    */\n\n    fragColor = vec4(texelFetch(iChannel0, ivec2(fragCoord), 0).xy - pressure_gradient, texelFetch(iChannel0, ivec2(fragCoord), 0).zw);\n}","name":"Buffer D","description":"","type":"buffer"}]}