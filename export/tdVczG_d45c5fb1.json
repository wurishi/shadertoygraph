{"ver":"0.1","info":{"id":"tdVczG","date":"1603168511","viewed":58,"name":"TruchetShader","username":"madoodia","description":"truchet\nsource: https://www.youtube.com/channel/UCcAlTqd9zID6aNX3TzwxJXg","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["glsl","truchet","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash21(vec2 p)\n{\n  p = fract(p*vec2(234.34, 435.345));\n  p += dot(p, p+34.23);\n  return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  vec2 vUV = gl_FragCoord.xy/iResolution.xy;\n\n  uv *= 20.0;\n  // uv += uTime * 2.; // animate shader\n\n  vec2 gv = fract(uv)-.5;\n  vec2 id = floor(uv);\n\n  vec3 color = vec3(0.0);\n\n  float n = hash21(id); // retuen random number between 0 and 1\n  float width = .3*vUV.y;\n\n  if(n<.5) gv.x *= -1.;\n  vec2 cUV = gv-sign(gv.x+gv.y+.001)*.5;\n  float dist = length(cUV);\n  float mask = smoothstep(.01, -.01, abs(dist-.5) - width);\n  float angle = atan(cUV.x, cUV.y); // -pi to pi\n  float checker = mod(id.x+id.y, 2.) * 2.- 1.;\n  float flow = sin(iTime*10.+checker*angle*10.);\n  // color += flow * mask; // animate based on a checker\n\n  float x = fract(angle/1.57);\n  float y = (dist-(.5-width))/(2.*width);\n  y = abs(y-.5)*2.;\n  vec2 tUV = vec2(x, y);\n  color.rg += tUV * mask;\n  color *= tUV.y;\n\n  // if(gv.x>.48 || gv.y>.48) color = vec3(1, 0, 0); // boundries\n  fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}