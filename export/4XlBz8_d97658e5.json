{"ver":"0.1","info":{"id":"4XlBz8","date":"1728021672","viewed":31,"name":"rotating gradients","username":"355113","description":"Implementation of 2D vector rotation where the rotation angle changes over time. Achieves a pretty gradient effect.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math","rotation","pretty"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 v, float rad)\n{\n    return vec2(v.x * cos(rad) + v.y * sin(rad), v.y * cos(rad) - v.x * sin(rad));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    float d     = length(uv);\n    \n    vec2 uv0 = rotate(uv, 3. * cos(iTime));\n    float theta0 = abs(atan(uv0.y, uv0.x)) / 6.28 + 0.5;\n    \n    vec2 uv1 = rotate(uv, iTime);\n    float theta1 = abs(atan(uv1.y, uv1.x)) / 6.28 + 0.5;\n    \n    vec2 uv2 = rotate(uv, -5. * sin(iTime));\n    float theta2 = abs(atan(uv2.y, uv2.x)) / 6.28 + 0.5;\n    \n    \n    fragColor = vec4(theta0, theta1, theta2, 1);\n}","name":"Image","description":"","type":"image"}]}