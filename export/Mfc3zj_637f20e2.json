{"ver":"0.1","info":{"id":"Mfc3zj","date":"1711892683","viewed":50,"name":"1.5 prak","username":"la","description":"zxcadad","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["la"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 resolution = iResolution.xy;\n    \n    float time = iTime;\n\n    vec2 circle1 = vec2(0.5 + 0.3 * cos(time), 0.5 + 0.3 * sin(time)); \n    vec2 circle2 = vec2(0.8 + 0.2 * cos(2.0 * time), 0.8 + 0.2 * sin(2.0 * time)); \n    vec2 circle3 = vec2(0.5, 0.7);\n\n    vec3 color1 = vec3(circle1.x, circle1.y, 1.); \n    vec3 color2 = vec3(circle2.y, circle2.x, 1.);\n    vec3 color3 = vec3(0.1, 0.8, 0.2); \n\n    vec3 backgroundColor = 0.2 + 0.1 * cos(time + fragCoord.xxx *.1);\n    \n    float distance3 = length(fragCoord - resolution * circle3);\n    float distance1 = length(fragCoord - resolution * circle1);  \n    float distance2 = length(fragCoord - resolution * circle2);\n    \n    float circleRadius = .1 * resolution.x;\n\n    vec3 finalColor = backgroundColor;\n\n    if (distance1 < circleRadius) {\n        finalColor = color1;\n    }\n\n    if (distance2 < circleRadius) {\n        finalColor = color2;\n    }\n\n    if (distance3 < circleRadius) {\n        finalColor = color3;\n    }\n\n    fragColor = vec4(finalColor, 4.0);\n}","name":"Image","description":"","type":"image"}]}