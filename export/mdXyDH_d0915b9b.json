{"ver":"0.1","info":{"id":"mdXyDH","date":"1686763060","viewed":235,"name":"tube nest","username":"FabriceNeyret2","description":"mouse controls camera\ninspiration: https://twitter.com/Yugemaku/status/1668965718279467009\n\nhow it looks from outside ;-) : https://www.shadertoy.com/view/ddfyDH","likes":18,"published":3,"flags":0,"usePreview":0,"tags":["short","golf","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define rot(a)      mat2(cos(a+vec4(0,11,33,0)))                    // rotation\n//#define L(q)      max( abs(q.z)-1., length(abs(q.xy)-1.) ) - .1   // cube\n#define L(q)        max( q.z, length(q.xy) ) - .1                   // tripod ( or cube, with  q = abs(q) - 1. )\n\nvoid mainImage(out vec4 O, vec2 U)\n{\n    float t=9.,r,i;\n    vec3  R = iResolution,\n          D = normalize(vec3(U+U, -R.y) - R),                       // ray direction\n          p, q, P,                                                  // marching point along ray \n          C = iMouse.z > -0. ? 6.* iMouse.xyz/R -3.                 // camera control\n                             : 3.* cos(.3*iTime + vec3(0,11,0));\n\n    for ( O=vec4(1); O.x > 0. && t > .01; O-=.01 ) {                // march scene\n        P = p, \n        P.yz *= rot(-C.y),                                          // rotations\n        P.xz *= rot(-C.x);\n        for ( i=0.; i++ < 5. ; P.xy *= rot(1.26) )                  // 2pi/5 rotational symmetry\n            q = P,\n            q.x-=.7, q.xz *= rot(.4), q.yz*=rot(.4),                // offset and tilt\n            q = abs(q) - 1.,\n            t = min( min(t,L(q)), min(L(q.yzx),L(q.zxy)) );         // 3 ortho cylinders\n        \n        p += .3*t*D;                                                // step forward = dist to obj  \n    }\n    \n   O *= O*O*O*2.;                                                   // color scheme \n}\n\n","name":"Image","description":"","type":"image"}]}