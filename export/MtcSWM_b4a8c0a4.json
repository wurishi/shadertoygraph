{"ver":"0.1","info":{"id":"MtcSWM","date":"1479945602","viewed":316,"name":"Corrupt Data","username":"flaffol","description":"Distorted noise with a colored interlacing effect.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","distort","interlace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE vec2(32.0, 18.0)\n#define OFFSET_AMOUNT 64.0\n#define SHIFT_SPEED 48.0\n\n#define COLOR_EVEN vec3(0.133, 0.866, 0.533)\n#define COLOR_ODD vec3(0.866, 0.133, 0.266)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Scale channel0's resolution to make a grid\n    vec2 scaled_resolution = SCALE * iChannelResolution[0].xy;\n    \n    // Get uv coords in scaled resolution\n    vec2 uv = fragCoord.xy / scaled_resolution;\n    \n    // Get offset from texture and adjust for current time\n    vec2 offset = texture(iChannel0, uv).gb * (OFFSET_AMOUNT / scaled_resolution.x);\n    offset -= (SHIFT_SPEED / scaled_resolution.x) * iTime;\n    \n    // Is this an even or odd row?\n    float row = mod(floor(fragCoord.y), 2.0);\n\n    // Get values from texture at offset positions\n    float value_even = (1.0 - row) * texture(iChannel0, vec2(uv.x + offset.x, uv.y)).r;\n    float value_odd = row * texture(iChannel0, vec2(uv.x + offset.y, uv.y)).r;\n\n    // Add the values together for the final color\n    fragColor.rgb = value_even * COLOR_EVEN + value_odd * COLOR_ODD;\n}","name":"Image","description":"","type":"image"}]}