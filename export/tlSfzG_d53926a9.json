{"ver":"0.1","info":{"id":"tlSfzG","date":"1599190499","viewed":99,"name":"Equation Viewer, nickak","username":"nickak","description":"In the function, equation, you experiment with, equations on x and y. the result is like a third dimensional color value. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 expandColor( int c ){\n    \n    //normalize? \n    uint uc=0u;\n    if( c < 0 )\n        uc =  65536u - (65536u - uint( abs(c)));\n    else\n        uc = uint(c) + 65536u;\n    \n    uint blueMask = uint(0xFF0000), greenMask = uint(0xFF00), redMask = uint(0xFF);\n\n    vec3 cout;\n    \n    cout.r = float(uc & redMask) /255.0f;\n    cout.g = float((uc & greenMask) >> 8) /255.0f;\n    cout.b = float((uc & blueMask) >> 16) /255.0f; \n\n    return cout;\n}\n\nint equation(float x, float y){\n\n    //example equations\n    \n    float outValue =0.0;\n    \n\toutValue = pow(x,4.0)/pow(y,3.0)* sin(x/y)/cos(x*y);\n   //outValue =  y/(x-y) * (x+1.0) * (y-1.0) + pow( (x / 2.0) ,3.0)/ pow(y/3.0, 2.0) ;\n   outValue =  outValue - (y/(x-y) * (x+1.0) * (y-1.0) + pow( (x / 2.0) ,2.0) );\n   // outValue = pow(x,3.0) - pow(y,2.0) + pow(x,2.0) - y ;\n  // outValue = x*y;\n    //outValue =  x*x+y*y;;\n\t//outValue = sqrt(x*x+y*y);\n    //outValue = (y*x) / (y-x) * x/(y+x);\n    \n    return int(outValue);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float zoom =  50.0*cos(iTime/20.0);\n   \n    float x = fragCoord.x*zoom;\n    float y = fragCoord.y*zoom;\n    \n    float w = iResolution.x*zoom;\n    float h = iResolution.y*zoom;\n    \n    x=x-w/2.0;\n    y=y-h/2.0;\n    \n    // Time varying pixel color\n    vec3 col = expandColor(equation(x, y));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}