{"ver":"0.1","info":{"id":"NtjyDR","date":"1649519138","viewed":178,"name":"Game of Life shader","username":"Amirk","description":"buffer practice","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel1,uv/ZOOM).rgb;\n    \n    vec2 gv=fract(fragCoord/ZOOM)-.5;\n    \n    float d= length(gv);\n    \n    col*=smoothstep(.1,.0,d-.4);\n    \n  //  col.rg=gv;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int getNeighbors(ivec2 p){\n  int num=0;\n\n for(int y=-1;y<=1;y++ ){\n  for(int x=-1;x<=1;x++ ){\n   if(x==0&&y==0)continue;\n   \n   num+=texelFetch(iChannel1, p+ivec2(x,y),0).r >.5 ? 1 : 0;\n  }\n\n}\n\nreturn num;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = vec4(0);\n    \n    if(iFrame<10) col.rgb=vec3(texture(iChannel0,uv).r); //initial population from noise\n    \n    else if(iFrame %PERIOD !=0)\n        col= texture(iChannel1,uv); //if we're not updating, we just draw the same\n    \n    else{\n    \n      bool alive=texelFetch(iChannel1, ivec2(fragCoord),0).r>.5;\n    \n      int num=getNeighbors(ivec2(fragCoord));\n    \n      int next = alive && num==2 || num==3 ? 1:0;  //the survival rules in one line\n       \n     \n      col=vec4(next);\n    }\n    \n    if(iMouse.z>.5&&distance(iMouse.xy/ZOOM,fragCoord.xy)<BRUSH_SIZE)  col=vec4(1);\n\n\n\n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define ZOOM 20. \n#define BRUSH_SIZE 1.\n#define PERIOD 20\n\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n\nvec4 old= texture(iChannel1, uv)*vec4(1,0,0,1)*.95; //red ones are dead\nvec4 new= texture(iChannel0, uv);\n\n\n\n    fragColor = max(old, new);\n}","name":"Buffer B","description":"","type":"buffer"}]}