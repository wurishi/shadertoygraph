{"ver":"0.1","info":{"id":"Mf3yDj","date":"1731161770","viewed":31,"name":"Spiral pulse ","username":"Secretstar","description":"A mesmerizing spiral shader based distortion, glowing pulses, and dynamic color transitions.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pulse","spiral","glow","dynamic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Dimensioni dello schermo\n    vec2 resolution = iResolution.xy;\n\n    // Coordinate normalizzate (da -1 a 1)\n    vec2 uv = (fragCoord.xy / resolution.xy) * 2.0 - 1.0;\n    uv.x *= resolution.x / resolution.y; // Cor1ezione per l'aspect ratio\n\n    // Calcolo del tempo per animazione\n    float time = iTime;\n\n    // Calcolo dell'angolo e della distanza\n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n\n    // Animazione: rotazione e zoom continuo\n    angle += time * 0.5;                // Rotazione accelerata\n    radius -= time * 0.4;               // Rimpicciolimento continuo per avvicinarsi\n\n    // Riporta il raggio a un ciclo continuo per mantenere l'effetto\n    radius = fract(radius);\n\n    // Colore spirale: alternanza basata su seno\n    float spiral = 0.7 + 6.9 * sin(4.0 * angle - 5.0 * radius);\n\n    // Mappa il colore basato sulla spirale\n    vec3 color = mix(vec3(2.8, 0.0, 0.7), vec3(1.8, 1.3, 5.7), spiral);\n\n    // Output finale\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}