{"ver":"0.1","info":{"id":"Md3czn","date":"1517739202","viewed":793,"name":"Trippy Plasma","username":"Optimus","description":"Trippy plasma where I zoom out and recalculate. Simple effect I originally wrote at glsl sandbox site and decided to transfer here.","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["plasma","colors","colorful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A trippy zooming feedback plasma I first made at http://glslsandbox.com/e#45069.2 (I just mention this to avoid someone thinking I just ripped it, although can't prove it. For some reason, I still hang around the old glslsandbox)\n// I have been doing few other lame tests, but since I liked this particular one, I decided to transfer it here.\n\nfloat plasma(vec2 p, float iso, float fade)\n{\n\tfloat c = 0.0;\n\tfor (float i=1.0; i<10.0; ++i) {\n\t\tfloat f1 = i / 0.6;\n\t\tfloat f2 = i / 0.3;\n\t\tfloat f3 = i / 0.7;\n\t\tfloat f4 = i / 0.5;\n\t\tfloat s1 = i / 2.0;\n\t\tfloat s2 = i / 4.0;\n\t\tfloat s3 = i / 3.0;\n\t\tc += sin(p.x * f1 + iTime) * s1 + sin(p.y * f2 + 0.5 * iTime) * s2 + sin(p.x * f3 + p.y * f4 - 1.5 * iTime) * s3;\n\t}\n\n\tc = mod(c, 16.0) * 0.5 - 7.0;\n\tif (c < iso) {\n\t\treturn 0.0;\n\t}\n\telse {\n\t\tif (c > 0.5) c = 1.0 - c;\n\t\tc *= 2.0;\n\t\treturn c * fade;\n\t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = (( fragCoord / iResolution.xy ) - vec2(0.5)) * vec2(iResolution.x / iResolution.y, 1.0);\n\n\tfloat c = 0.0;\n\tfor (float i=0.0; i<64.0; ++i) {\n\t\tfloat zoom = 1.0 + i * 0.05 + sin(iTime * 0.3) * 0.5;\n\t\tvec2 trans = vec2(sin(iTime * 0.3) * 0.5, sin(iTime * 0.4) * 0.3);\n\t\tc = plasma(pos * zoom + trans, 0.0, 2.0 / (1.0 + i));\n\t\tif (c> 0.001) break;\n\t}\n\tfragColor = vec4(c * pos.x, c * pos.y, c * abs(pos.x + pos.y), 0.5) * 2.0;\n}","name":"Image","description":"","type":"image"}]}