{"ver":"0.1","info":{"id":"DdsGRn","date":"1665552023","viewed":215,"name":"[grosgg] Beach Waves","username":"grosgg","description":"First shader experiment while reading the Book of Shaders.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["waves","beach"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat plotFoam(vec2 st, float pct){\n  return step(pct+0.06, st.y) - step(pct+0.08+abs(sin(iTime*0.25)*0.3), st.y);\n}\n\nfloat plotSand(vec2 st, float pct){\n  return step(pct+0.08, st.y);\n}\n\nfloat plotSea(vec2 st, float pct){\n  return step(pct-0.7, st.y) - step(pct+0.06, st.y);\n}\n\nfloat plotDeepSea(vec2 st, float pct){\n  return 1.0 - step(pct-0.7, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy / vec2(iResolution.x,iResolution.y);\n    float y = sin(iTime* 0.5) * 0.4 + sin(PI * 8.0 * st.x) * 0.02 + st.x - 0.2;\n\n    vec3 color = vec3(y);\n\n    float foam = plotFoam(st, y);\n    float sand = plotSand(st, y);\n    float sea = plotSea(st, y);\n    float deepSea = plotDeepSea(st, y);\n    color = sea*vec3(0.0, 0.8, 1.0) + foam*vec3(1.0) + sand*vec3(1.0,0.8,0.2) + deepSea*vec3(0.2,0.3,0.8);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}