{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"//#define SHARPNESS 6.0\n//#define BLENDORIGINAL 0.1\n//#define STARRADIUS 0.005\n\n#define SHARPNESS 16.0\n#define BLENDORIGINAL 0.1\n#define STARRADIUS 0.002\n\n//#define SHARPNESS 100.0\n//#define BLENDORIGINAL 0.7\n//#define STARRADIUS 0.003\n\n\nvec2 uvOffsets[5];    \nfloat weights[25];\n\nvec4 rodilius(vec2 uv, float angle)\n{\n\t// do angular blur\n    vec4 col[5];\n    for (int i=0; i<5; i++) col[i] = vec4(0);\n\n    for (int x=0; x<25; x++) {\n\t\tfloat x1 = (float(x)-12.)*STARRADIUS;\n\t\tvec2 rot = vec2(x1 * sin(angle), x1 * cos(angle));\n        for (int i=0; i<5; i++) {\n       \t\tcol[i] += texture( iChannel0, uv + uvOffsets[i] + rot ) * weights[x];\n        }\n    }\n      \n    // do sharpen    \n\treturn col[2] * (4.0 * SHARPNESS + 1.0) - col[0]*SHARPNESS - col[1]*SHARPNESS - col[3]*SHARPNESS - col[4]*SHARPNESS;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 uv = fragCoord.xy / vec2(iResolution.x, iResolution.y);\n    \n    float U = 0.5/iResolution.x;\n    float V = 0.5/iResolution.y;\n\n    uvOffsets[0] = vec2( 0,-V);\n    uvOffsets[1] = vec2(-U, 0);\n    uvOffsets[2] = vec2( 0, 0);\n    uvOffsets[3] = vec2( U, 0);\n    uvOffsets[4] = vec2( 0, V);\n    \n    weights[0] = 0.014480060914890769; \n    weights[1] = 0.018224604811260897; \n    weights[2] = 0.02248329510703459;\n    weights[3] = 0.02718791556219074;\n    weights[4] = 0.03222596821315306;\n    weights[5] = 0.03744123337511432;\n    weights[6] = 0.04263913927426121;\n    weights[7] = 0.047597136115099296;\n    weights[8] = 0.0520795623151580;\n    weights[9] = 0.055855756659145765;\n    weights[10] = 0.05871954254197253;\n    weights[11] = 0.06050781884405198;\n    weights[12] = 0.061115932533333264;\n    weights[13] = 0.06050781884405198;\n    weights[14] = 0.05871954254197253;\n    weights[15] = 0.055855756659145765;\n    weights[16] = 0.05207956231515809;\n    weights[17] = 0.047597136115099296;\n    weights[18] = 0.04263913927426121;\n    weights[19] = 0.03744123337511432;\n    weights[20] = 0.03222596821315306;\n    weights[21] = 0.02718791556219074;\n    weights[22] = 0.02248329510703459;\n    weights[23] = 0.018224604811260897;\n    weights[24] = 0.014480060914890769;    \n    \n\tvec4 c = vec4(0);\n    \n    for (int a=0; a<5; a++)\n    \tc = max(c, rodilius(uv, 0.2 + 0.62 * float(a)));\n    \n\tfragColor = mix(c, texture(iChannel0, uv), BLENDORIGINAL);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lts3DM","date":"1422617546","viewed":210,"name":"Rodilius","username":"Voltage","description":"Based on the rodilius filter from gimp","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["filter"],"hasliked":0,"parentid":"","parentname":""}}