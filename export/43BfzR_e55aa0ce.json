{"ver":"0.1","info":{"id":"43BfzR","date":"1729093986","viewed":168,"name":"Orbit trace","username":"ChunderFPV","description":"Repurposing code from an older shader (Magic Bubbles).  Each point orbits around it's parent.","likes":17,"published":1,"flags":32,"usePreview":0,"tags":["blur","rotation","points","buffer","orbits"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// blend\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec4 a = texture(iChannel0, U/iResolution.xy),  // Buffer A\n         b = texture(iChannel1, U/iResolution.xy);  // Buffer B\n    C = tanh(a + b*.7 + b*b); // a bit of contrast\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define A(v) mat2(cos((v)*3.1416+vec4(0, -1.5708, 1.5708, 0)))  // rotate\n#define H(a) (cos(radians(vec3(0, 90, 180))+(a)*6.2832)*.5+.5)  // hue\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 R = iResolution.xy,\n         u = (U-R/2.)/R.y*3.;\n    \n    float l = 9.,  // loop size\n          i = 1.,  // loop start\n          p = 1.,  // polarity (used for alternating rotations)\n          w = max(R.y/1e3, .1), // point size\n          t = iTime/4.;\n    \n    vec3 c = vec3(0), k;\n    \n    for (; i<=l; i++)\n    {\n        k = H(.3-i/l)+.3;  // colors | add +t in H() function for shifting colors\n        c += min(fwidth(u.y)*w/length(u), 1.) * k;  // points\n        //if (i > 1.) c += min(fwidth(u.y)*w/abs(1.-length(u)), 1.) * k * .1;  // rings\n        u *= 1.618 * A(sqrt(2.*i)*t*p);  // scale & rotate\n        p *= -1.;  // flip polarity\n        u.x -= 1.272*p;  // shift x\n    }\n    \n    C = vec4(c*c, 1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// frame blur (TAA)\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    C = texture(iChannel0, U/iResolution.xy)*.07    // Buffer A\n      + texture(iChannel1, U/iResolution.xy)*.999;  // Buffer B\n}","name":"Buffer B","description":"","type":"buffer"}]}