{"ver":"0.1","info":{"id":"lXcGzM","date":"1716233599","viewed":41,"name":"Wavz","username":"piet_inator","description":"my first shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hypnosis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float loop(in float speed, in float offset)\n{\n     return(1.0+cos(iTime * speed + offset))/2.0;\n}\nbool isring(in float radius, in float interval, in float thickness)\n{\n    return mod(radius, interval) <= thickness;\n}\nfloat interpolate(float a, float b, float t)\n{\n    return a + (b-a) * t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 point = vec2(interpolate(0.0,1.0,loop(1.0, 2.0)),interpolate(0.0,1.0,loop(1.2, 0.0)));\n    vec2 uv = fragCoord / iResolution.xy;\n    float posOffset = distance(point, uv);\n    vec3 rgb = vec3(loop(1.0,0.0 + posOffset),loop(1.0,1.0 + posOffset),loop(1.0,2.0 + posOffset));\n    if(isring(posOffset - iTime * 0.3, 0.1, interpolate(0.025, 0.05, loop(2.0, 1.0))))\n    {\n        rgb = vec3(0,0,0);\n    }\n    fragColor = vec4(rgb,1);\n}","name":"Image","description":"","type":"image"}]}