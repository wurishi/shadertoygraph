{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define maxSteps 96.0\n#define treshold 0.001\n#define maxdist 20.0\n#define pi acos(-1.)\n#define oid1 1.0\n#define oid2 2.0\n#define shadowsteps 30.0\n#define screenRatio vec2(iResolution.x/iResolution.y, 1.0)\n\n#define numleafs 8.0\n\n\nvec2 rot(vec2 k, float t) {\n\treturn vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n\t}\n\nfloat perlin(vec3 p) {\n\tvec3 i = floor(p);\n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\n\tvec3 f = cos((p-i)*pi)*(-.5)+.5;\n\ta = mix(sin(cos(a)*a),sin(cos(1.+a)*(1.+a)), f.x);\n\ta.xy = mix(a.xz, a.yw, f.y);\n\treturn mix(a.x, a.y, f.z);\n\t}\n\nvec3 leaftex(vec3 p) {\n\tfloat q=perlin(p);\n\tvec3 col=vec3(0.9,0.1,0.1)+q*0.8;\n\treturn col;\n\t}\n\nvec3 pettex(vec3 p) {\n\tfloat q=perlin(p);\n\tvec3 col=vec3(0.5,0.4,0.0)+q*0.5;\n\treturn col;\n\t}\n\nvec2 opU( vec2 d1, vec2 d2 ){\n\treturn (d1.x<d2.x) ? d1 : d2;\n\t}\n\nfloat leaf( vec3 p, vec3 t, vec3 r ) {\n\tvec3 q=p;\n\tq.xy=rot(q.xy,r.x);\t\t//rotate\n\tq.xz=rot(q.xz,r.y);\t\t//rotate\n\tq.zy=rot(q.zy,r.z);\t\t//rotate\n\tq= (q-t);\t\t\t//translate\n\tq*=mat3( (cos(q.x)+1.60), 0.0, 0.0, sin(q.x)*1.3, 1.0, -cos(q.z)*0.8, 0.0, 0.0, 1.0);\t//model\n\t\n\tfloat d=(sin(q.x*6.0)*sin(q.y*10.0)*sin(q.z*2.0))*0.04;\t//distort\n\t\n\treturn max( length(q.xz)-1.0,  abs(q.y)-0.001 )  *0.5 -d;\n\t}\n\nvec2 map(vec3 p ) {\n\n\tfloat d=(sin(p.x*80.0)*sin(p.y*80.0)*sin(p.z*80.0))*0.008;\n\tvec2 ret= vec2( length(p) -0.5 -d , oid1);\n\t\n\tfloat ro=0.0;\n\tfor (float i=0.0; i<numleafs; i++) {\n\t\tret=opU(ret, vec2( leaf(p, vec3(0.0,0.3,1.4), vec3(radians(180.0),radians(ro),radians(-10.0)) ), oid2));\n\t\tret=opU(ret, vec2( leaf(p, vec3(0.0,0.393,1.4), vec3(radians(180.0),radians(ro+360.0/numleafs/2.0),radians(11.0)) ), oid2 ));\n\t\tro+=360.0/numleafs;\n\t}\n\t\n\treturn ret;\n\t}\n\nvec3 cNor(vec3 p ) {\n\tvec3 e=vec3(0.001,0.0,0.0);\n\treturn normalize(vec3( map(p+e.xyy).x - map(p-e.xyy).x, map(p+e.yxy).x - map(p-e.yxy).x, map(p+e.yyx).x - map(p-e.yyx).x ));\n\t}\n\nfloat calcAO(vec3 pos, vec3 nor ){\n\tfloat totao = 0.0;\n    float sca = 1.0;\n    for( float aoi=0.0; aoi<5.0; aoi+=1.0 ) {\n        float hr = 0.01 + 0.05*aoi;\n        vec3 aopos =  nor * hr + pos;\n        float dd = map( aopos ).x;\n        totao += -(dd-hr)*sca;\n        sca *= 0.75;\n    }\n    return clamp( 1.0 - 4.0*totao, 0.0, 1.0 );\n}\n\n\nfloat cShd(vec3 ro, vec3 rd, float k ) {\n\tfloat res = 1.0;\n\tfor(float i=1.0; i<shadowsteps; i+=1.0){\n\t\tfloat f=shadowsteps/i;\n        float h = map(ro + rd*f).x;\n        if( h<0.001 ) { res=0.0; break; }\n        res = min( res, k*h/f );\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\t{\n\tvec2 ps=(fragCoord.xy/iResolution.xy);\n\tvec3 rd=normalize( vec3( (-1.0+2.0*ps)*screenRatio, 1.0));\n\tvec3 ro=vec3(0.0, 0.0, -3.0);\n\tvec3 lig=vec3(1.0,1.0,-1.0);\n\t\n\tfloat r=radians(70.0)+sin(iTime)*.8;\n\tfloat k=radians(40.0);\n\t\n\tvec4 m=iMouse*0.01;\n\tlig.xz=rot(lig.xz, m.x+r);\n\tlig.xy=rot(lig.xy, m.y+k);\n\tro.xz=rot(ro.xz, m.x+r);\n\tro.xy=rot(ro.xy, m.y+k);\n\trd.xz=rot(rd.xz, m.x+r);\n\trd.xy=rot(rd.xy, m.y+k);\t\n\t\n\tfloat f=0.0;\n\tvec2 t=vec2(treshold,f);\n\tfor(float i=0.0; i<1.0; i+=1.0/maxSteps){\n        t= map(ro + rd*t.x);\n\t\tf+=t.x;\n\t\tt.x=f;\n\t\tif( abs(t.x)<treshold || t.x>maxdist ) { t.y=0.0; break; }\n\t\t}\n\n\tvec3 col = vec3(0.0);\n\tif (t.y>0.5) {\n\t\t\n\t\tlig=normalize(lig);\n\t\tvec3 pos = ro + rd*t.x;\n\t\tvec3 nor = cNor(pos);\n\t\tfloat ao = calcAO( pos, nor );\n\t\t\n\t\tfloat amb = clamp( 0.5+0.5*nor.y, 0.0, 1.0 );\t\t\t\t\t\n\t\tfloat dif = clamp( dot( nor, lig ), 0.0, 1.0 );\t\t\t\t\t\n\t\tfloat bac = clamp( dot( nor, vec3(-lig.x,lig.y,-lig.z)), 0.0, 1.0 );\t\t\n\n\t\tfloat sh = cShd( pos, lig, 1.0 );\t\n\n\t\tcol = 0.20*amb*vec3(0.10,0.10,0.10)*ao;\t\t\t\t\t\t\n\t\tcol += 0.20*bac*vec3(0.15,0.15,0.15)*ao;\t\t\t\t\t\n\t\tcol += 1.90*dif*vec3(0.80,0.80,0.80);\t\t\t\t\t\t\n\n\t\tfloat spe = sh*pow(clamp( dot( lig, reflect(rd,nor) ), 0.0, 1.0 ) ,16.0 );\t\n\t\tfloat rim = ao*pow(clamp( 1.0+dot(nor,rd),0.0,1.0), 2.0 );\t\t\t\n\n\t\tvec3 oc;\n\t\tif (t.y == oid1) oc=pettex(pos*nor);\n\t\tif (t.y == oid2) oc=leaftex(pos*nor);\n\n\t\tcol =oc*col + vec3(1.0)*col*spe + 0.2*rim*(0.5+0.5*col);\t\t\n\n\t} \n\t\t\n\tfragColor=vec4( col, 1.0);\n\t}\n\t\n\t","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsj3DD","date":"1388676764","viewed":216,"name":"Daisy","username":"avix","description":"first try to model a red daisy\n\nneed to remove artefacts on leaves etc...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""}}