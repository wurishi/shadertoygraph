{"ver":"0.1","info":{"id":"lfVGRR","date":"1713206020","viewed":109,"name":"Yet another flame","username":"EisernSchild","description":"Simple approach on a platform game style flame","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["flame","cartoon","fire","comic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Yet another flame\n// Copyright (c) 2024 by Denis Reischl\n//\n// SPDX-License-Identifier: MIT\n//\n// Simple approach on a platform game style flame\n//\n\n// set to 3 for a more toon style flame\n#define BNOISE_IT float(6)\n\n// blue noise by leon.. https://www.shadertoy.com/view/lcGGzK\nfloat gyroid (vec3 p) { return dot(sin(p),cos(p.yzx)); }\nfloat bnoise (vec3 p)\n{\n    float result = 0., a = .5;\n    for (float i = 0.; i < BNOISE_IT; ++i, a/=2.)\n    {\n        p.z += result*.5;\n        result += abs(atan(gyroid(p/a)))*a;\n    }\n    return result;\n}\n\nvoid mainImage(out vec4 o, in vec2 FC)\n{\n    // get UV, scale\n    vec2 vUv = (FC/iResolution.xy - .5) * vec2(iResolution.x/iResolution.y, 1.);\n    float fL = vUv.y + .5f;\n    vec3 cBack = mix(vec3(1.f), vec3(.5f, .5f, 1.f), fL);\n    vUv *= vec2(4.2f, 2.4f);\n\n    // get blue noise\n    float fN = bnoise(vec3(vUv.x, vUv.y - iTime * 1.4f, iTime * .01f));\n    float fA = mix(fN * fL, fL, fL * .8f);\n    float fFog = fA - .25f;\n\n    // set color\n    vec3 cCol = (fFog > 0.f) ? \n        mix(vec3((0.1 * exp(fFog * 10.1f))), cBack, min(fFog * 5.f, 1.f)) :\n        sqrt(exp(-(vec3(0.5, 2, 5) * max(fA - .02f, 0.) - fA * .5) * 8.));\n    if (fA < .05f)\n        cCol = mix(vec3(.7f, .8f, min(1.f, exp(fN) * .6f)), cCol, fA * 20.f);\n                    \n    o = vec4(cCol, 1.);    \n}","name":"Image","description":"","type":"image"}]}