{"ver":"0.1","info":{"id":"4ltBRM","date":"1539035731","viewed":634,"name":"Random color replacement (RGB)","username":"chao_mu","description":"Divide the color space into X regions, then produce a random color for each region.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["simple","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Higher number, more colors.\n#define COLORS 10.0\n\nfloat rand(float n){\n    return fract(sin(n) * 43758.5453123);\n}\n\nfloat hash_channel(vec4 color, int i)\n{\n\treturn rand(floor(color[i] * COLORS) + float(i));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 col = texture(iChannel0, uv);\n    \n    col.r = hash_channel(col, 0);\n    col.g = hash_channel(col, 1);\n    col.b = hash_channel(col, 2);\n    \n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}