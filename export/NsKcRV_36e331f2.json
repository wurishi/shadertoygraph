{"ver":"0.1","info":{"id":"NsKcRV","date":"1655399958","viewed":63,"name":"Test proj001","username":"varLexone","description":"Simple shader for test ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"XsfGDn","parentname":"Texture - Better Filtering"},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2  window  = fragCoord.xy/iResolution.xy;\n    \n    vec2  window1 = window;\n    vec2  window2 = window;\n    vec2  window3 = window;\n\n    float t = fract( iTime );\n    \n    window1.x -= (sin((window.x*10.0)+(iTime)))/10.0;\n    window2.x += (cos((window.x*10.0)+(iTime)))/10.0;\n    window3.x += (sin((window.x*10.0)+(iTime)))/10.0;\n    \n\tvec3  video   = texture(iChannel0, window).xyz;\n    \n    vec3  video1  = texture(iChannel0, window1).xyz;\n    vec3  video2  = texture(iChannel0, window2).xyz;\n    vec3  video3  = texture(iChannel0, window3).xyz;\n    \n\tfloat motion  = sin(2.5*window.y + 0.7*iTime);\n\n    \n    vec3 line1 = video1 * (smoothstep(0.01, 2.0, (video1 / (abs(motion)/0.007))));\n    vec3 line2 = video2 * (smoothstep(0.01, 2.5, (video2 / (abs(motion-0.01)/0.006))));\n    vec3 line3 = video3 * (smoothstep(0.01, 3.0, (video3 / (abs(motion+0.01)/0.009))));\n    \n    line1.x *= 0.3;\n    line1.y *= 0.3;\n    line1.z *= 0.3;\n    \n    line2.x *= 0.3;\n    line2.y *= 0.3;\n    line2.z *= 0.3;\n    \n    line3.x *= 0.3;\n    line3.y *= 0.3;\n    line3.z *= 0.3;\n    \n    video += line1 + line2 + line3;\n\n    fragColor = vec4(video, 1.0);\n}","name":"Image","description":"","type":"image"}]}