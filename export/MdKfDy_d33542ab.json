{"ver":"0.1","info":{"id":"MdKfDy","date":"1530369245","viewed":141,"name":"Falling circles","username":"luka712","description":"Just playing around and trying to figure out shader toy.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 CircleColor (vec2 uv, vec2 pos, vec3 color, float radius)\n{\n    float l = length(pos - uv);\n    \n    // if radius is less then lenght, draw\n    // use smoothstep for nicer edges\n    if(l < radius){\n         return color * smoothstep(radius, l - 0.01, l);   \n    }\n    return vec3(0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 videoCoords = uv;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float speed = iTime / 10.;\n    \n \n    // tan function used to loop circles\n    vec3 color = CircleColor(uv, vec2(-.4 + sin(speed * 5.), - tan( speed * 4.)), vec3(1., 0., 0.), .2);\n    color += CircleColor(uv, vec2(-.45 + sin(speed * 5.4), .2 - tan(speed * 3.)), vec3(0., 1., 0.), .2); \n    color += CircleColor(uv, vec2(-.3 + sin(speed * 5.2) , .2 - tan(speed * 3.1)), vec3(0., 1., 1.), .2); \n    color += CircleColor(uv, vec2(.25 + sin(speed * 4.) , .2 - tan(speed * 3.2)), vec3(0.5, 1., 1.), .2); \n    color += CircleColor(uv, vec2(-.1 + sin(speed * 4.4) , .2 - tan(speed * 3.4)), vec3(0.2, 0., 1.), .2); \n    color += CircleColor(uv, vec2(0. + sin(speed * 3.) , .2 - tan(speed * 3.5)), vec3(0.5, 0., 1.), .2); \n    color += CircleColor(uv, vec2(.5 + sin(speed * 4.6) , .2 - tan(speed * 3.6)), vec3(0., .2, 0.5), .2); \n    color += CircleColor(uv, vec2(.45 + sin(speed * 5.1), .2 - tan(speed * 3.7)), vec3(0.7, 1., 0.5), .2);  \n    color += CircleColor(uv, vec2(-.2 + sin(speed * 5.24), .2 - tan(speed)), vec3(0., 1., 0.), .2); \n    color += CircleColor(uv, vec2(.3 + sin(speed * 1.), .2 - tan(speed * 3.8)), vec3(0., 1., 0.), .2); \n    color += CircleColor(uv, vec2(-.2 + sin(speed * 2.7), .2 - tan(speed * 3.9)), vec3(0., 1., 0.5), .2); \n    color += CircleColor(uv, vec2(-.15 + sin(speed * 2.), .2 - tan(speed * 3.9)), vec3(0.5, 1., 0.), .2); \n\n    \n   \t// invert colors\n    fragColor = texture(iChannel0, videoCoords) *  vec4(color, 1.);\n\n}","name":"Image","description":"","type":"image"}]}