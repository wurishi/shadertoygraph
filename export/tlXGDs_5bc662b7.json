{"ver":"0.1","info":{"id":"tlXGDs","date":"1558037853","viewed":114,"name":"Dancing Moire","username":"Peregrine","description":"Simple moir√© interference pattern, with the two foci dancing on time-parametrized Lissajous curves.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","interference","moire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 moire(in vec2 p) {\n    float t = iTime;\n    const int ringwidth = 4;\n    const float a = 0.6, b = 0.5;\n\tvec2 focus1 = vec2(a*cos(t/2.)+b, a*sin(t/4.)+b);\n    vec2 focus2 = vec2(a*cos(t/3.)+b, a*sin(t)+b);\n\n\tint interf = int(100.*distance(p,focus1)) ^ int(100.*distance(p,focus2));\n    interf /= ringwidth;\n    interf %= 2;\n    \n    if (interf == 0)\n        return vec4(vec3(0.),1.);\n    else\n        return vec4(1.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = 2.*fragCoord.xy/iResolution.xy - 0.5;\n    \n    fragColor = moire(p);\n}\n","name":"Image","description":"","type":"image"}]}