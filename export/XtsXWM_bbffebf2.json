{"ver":"0.1","info":{"id":"XtsXWM","date":"1437118423","viewed":352,"name":"OSC Sound Waves","username":"anastadunbar","description":"I wish I was better at plotting waves.","likes":6,"published":1,"flags":8,"usePreview":0,"tags":["2d","sound","oscillator","generated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float PI = 3.14159265358979323;\n\nfloat fade(float value, float start, float end)\n{\n    return (clamp(value,start,end)-start)/(end-start);\n}\nfloat tri(float x) {\n    return asin(sin(x))/(PI/2.);\n}\nfloat puls(float x) {\n    return (floor(sin(x))+0.5)*2.;\n}\nfloat saw(float x) {\n    return (fract((x/2.)/PI)-0.5)*2.;\n}\nfloat noise(float x) {\n    return (fract(sin((x*2.) *(12.9898+78.233)) * 43758.5453)-0.5)*2.;\n}\n\nfloat get_x(vec2 uv, float tone, float time, float time2) {\n    float x = 0.;\n    if (time2 > 0.) {\n    x = sin((uv.x*tone)-(time*3.));\n    }\n    if (time2 > 1.) {\n    x = tri((uv.x*tone)-(time*3.));\n    }\n    if (time2 > 2.) {\n    x = puls((uv.x*tone)-(time*3.));\n    }\n    if (time2 > 3.) {\n    x = saw((uv.x*tone)-(time*3.));\n    }\n    if (time2 > 4.) {\n    x = noise((uv.x*30.)-(time*3.));\n    }\n    x *= 0.8;\n    return x;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float lines = 0.;\n    float time2 = mod((iTime*0.6)-0.1,5.); //Used -0.1, it doesn't really sync to the sound here.\n    float x = get_x(uv,10.,iTime, time2);\n    lines = (sin((uv.y*PI)+x)-0.9996)*4000.;\n    \n    fragColor = vec4(vec3(lines),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float PI = 3.14159265358979323;\n\nfloat fade(float value, float start, float end)\n{\n    return (clamp(value,start,end)-start)/(end-start);\n}\nfloat tri(float x) {\n    return asin(sin(x))/(PI/2.);\n}\nfloat puls(float x) {\n    return (floor(sin(x))+0.5)*2.;\n}\nfloat saw(float x) {\n    return (fract((x/2.)/PI)-0.5)*2.;\n}\nfloat noise(float x) {\n    return (fract(sin((x*2.) *(12.9898+78.233)) * 43758.5453)-0.5)*2.;\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    float x = 0.;\n    float tone = 900.;\n    float time2 = mod(time*0.6,5.);\n    if (time2 > 0.) {\n    x = sin(time*tone);\n    }\n    if (time2 > 1.) {\n    x = tri(time*tone);\n    }\n    if (time2 > 2.) {\n    x = puls(time*tone);\n    }\n    if (time2 > 3.) {\n    x = saw(time*tone);\n    }\n    if (time2 > 4.) {\n    x = noise(time*30.);\n    }\n    x *= 1.-fade(time,50.,60.);\n    return vec2( x );\n}","name":"Sound","description":"","type":"sound"}]}