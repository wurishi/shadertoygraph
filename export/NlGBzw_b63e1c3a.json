{"ver":"0.1","info":{"id":"NlGBzw","date":"1664210488","viewed":109,"name":"Plasma OldSchool Shader","username":"rge15","description":"Plasma like shader, researching for Demoscene effects.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["oldschool","plasma","demoscene"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14151692\n#define PI2 6.28303984\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(2.*fragCoord-iResolution.xy)/iResolution.xy;\n\n    float lenght = uv.x*uv.x+uv.y*uv.y;\n\n    float final = sin(uv.x * 5. + iTime );\n    final += sin(uv.y * 1.5 + iTime );\n      \n    float cx = uv.x * sin(iTime/5.);\n    float cy = uv.y * 0.5 * cos(iTime/3.);\n\n    final += sin(sqrt(50.*(cx*cx+cy*cy)+iTime));\n    final += sin(sqrt(lenght)-iTime);\n    \n    float grad = final * PI;\n    \n    float sinF = sin(grad);\n    float cosF = cos(grad);\n    \n    final += cx*cx+cy*cy;\n    \n    vec3 col = vec3(sinF,cosF,0.);\n    //vec3 col = vec3(final,0.,0.);\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}