{"ver":"0.1","info":{"id":"4XtGRS","date":"1716732281","viewed":257,"name":"Cosmic web","username":"ukeshet","description":"Demo of the cosmic web, in particular its surrounding virial-shock manifold.\nBased on filamentary, multi-octave fractal noise; mouseable.\nCouldn't golf the Universe (+navigation) below 1000... ","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["procedural","fractalnoise","cosmology","cosmicweb","virialshocks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Navigate an infinite filamentary network mimicking the virial-shock \n// manifold surrounding the cosmic web of large-scale structure. (Linear \n// structures surround galaxy filaments; nodes surround galaxy clusters.) \n// Distant structure is redshifted, neglecting peculiar+camera Doppler.\n//\n// Generated by fractal noise with a uniform (for simplicity) large-scale\n// cutoff on the power spectrum. Play with Q initialization/incrementation \n// values (2.4,1.9) below. Or challenge: remain within filament boundaries. \n//\n// By ukeshet, for ICP + Astro 1 courses.\n//\n// Golfed below 700(!) chars thanks to FabriceNeyret2 and SnoopethDuckDuck.\n\nI;\n    for (O*=i; j++<52. && f<1.;\n         u -= .05*Q*(3.+texture(iChannel1, 9.*C/R.y).x)) {\n        r = u*normalize(vec3(R.xy-C-C,R.y)); \n        P;                           // rotate r and add p\n        Q = 2.4;\n        for (i=n=0.; i++<9.; Q*=1.9) // accumulate fractal noise in n\n            m = cos(Q*r)/Q,\n            n += abs(m.x-m.y-m.z),\n            r *= .1*mat3( 5, -7, 5,\n                          5,  7, 5,\n                         -7,  0, 7);\n        Q = .09+abs(.3-.9*n);\n        Q<.1 ?\n            f = .9*f + .2,\n            O += f * (W(.7, 1, s) - f*W(.4, s))\n            : O;\n        f += .02;\n    }\n    O *= (5.-4.*min(O,1.))*O;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define W vec4//\n#define I void mainImage( out W O, vec2 C ) {                 \\\n          vec3 R = iResolution,                               \\\n               m = iMouse.xyz/R - .5,                         \\\n               r,                                             \\\n               s = r+.9,                                      \\\n               a = vec3( Q*round( O=texture(iChannel0,C) ).x, \\\n                         fract(O)/.1-Z ),                     \\\n               p = O.yzw;              // init + load buffer A\n#define S(k) mat2(cos(a.k+W(0,Z,-Z,0)))\n#define P r.yz *= S(y); r.xz *= S(x); r += p// rotate r and add p\nfloat Z=1.57, // pi/2, \n      Q=.001, // data packing precision\n      n, f, u, i, j; \n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Buffer A - camera control.\n\nI;                                // load\n    m.z > Q ? a += .04*m : a;     // mouse input     \n    r.z = -.2 * iTimeDelta;\n    P;                            // rotate r and add p\n    O = W(.1*Z + (iFrame > 1 ?    // update theta,phi\n            round(a.x/Q)+.1*clamp(a.y,-Z,Z)  \n            : Q),                 // init theta=pi/2, phi=0\n          r);\n}","name":"Buffer A","description":"","type":"buffer"}]}