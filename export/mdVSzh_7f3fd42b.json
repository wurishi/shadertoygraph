{"ver":"0.1","info":{"id":"mdVSzh","date":"1680731591","viewed":42,"name":"Arithmetic XOR 2 ","username":"jpupper","description":"thanks to chatGPT","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["xor","pattern","bitwise","arithmetic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//modified from https://www.shadertoy.com/view/wtlcR8\nint arithmeticXOR(int a, int b) {\n    return a + b - 2 * (a * b);\n}\n\nvec3 getColor(float value) {\n    return vec3(sin(value * 0.05) * 0.5 + 0.5, sin(value * 0.1) * 0.5 + 0.5, sin(value * 0.15) * 0.5 + 0.5);\n}\n\nvoid mainImage(out vec4 O, vec2 U) {\n    float zoom = 0.2;\n    float frequency = 0.1;\n    float threshold = 0.3;\n    \n    vec2 zoomedU = U * zoom;\n    \n    int x = int(zoomedU.x),\n        y = int(zoomedU.y + 30.0 * iTime);\n    int r = arithmeticXOR(x, y);\n    \n    float value = sin(float(r) * frequency) * 0.5 + 0.5;\n    \n\n    if (value > threshold) {\n        O = vec4(getColor(value * 1000.0), 1.0);\n    } else {\n        O = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}