{"ver":"0.1","info":{"id":"lfjBRy","date":"1725138314","viewed":31,"name":"Hexturing 2","username":"slembcke","description":"A sorta simpler hexagonal texture sampling shader?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sampling","hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float clip_axis(vec2 fuv, vec2 axis){\n    return step(dot(vec2(0.5, 1.0), axis), dot(fuv, axis));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/64.0;\n    \n    // scale the texel grid, and offseat each row by half a texel\n    uv.x = uv.x*0.7 - 0.5*floor(uv.y);\n    \n    vec2 huv = floor(uv);\n    vec2 fuv = fract(uv);\n    // clip the top-left, and top-right corners of each texel and push their coords into their neighbors.\n    huv += vec2(-1.0, 1.0)*clip_axis(fuv, vec2(-1, 1.5));\n    huv += vec2( 0.0, 1.0)*clip_axis(fuv, vec2( 1, 1.5));\n    \n    float texSize = 1024.0;\n    fragColor = texture(iChannel0, (huv + 0.5)/texSize);\n}","name":"Image","description":"","type":"image"}]}