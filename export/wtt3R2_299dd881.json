{"ver":"0.1","info":{"id":"wtt3R2","date":"1576946305","viewed":405,"name":"remainder: floats are approx :-)","username":"FabriceNeyret2","description":"This supposedly displays 0, as fract(1), as fract(U/U). \nBut in floating points U/U is not always exactly 1: it can be epsilon more or less. \nWhich makes totally different fract() ;-)\n","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["glsl","approximation","ieeefloat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// #define mainImage(O,U)  O.rg = fract( U / U )\nvoid mainImage(out vec4 O, vec2 U) {  O.rg = fract( max(U,0.) / U ); }  // to fool the optimizer\n","name":"Image","description":"","type":"image"}]}