{"ver":"0.1","info":{"id":"4tXSWB","date":"1439231569","viewed":283,"name":"FuzzyPostProcess","username":"martin","description":"Applies per pixel fuzzing as a post process","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["postprocess"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//RNG (See https://www.shadertoy.com/view/XlfGDS)\nfloat Rand(vec2 uv, float seed)\n{\n    float fixedSeed = abs(seed) + 1.0;\n\tfloat x = dot(uv, vec2(12.9898,78.233) * fixedSeed);\n\treturn fract(sin(x) * 43758.5453);\n}\n\n//What percentage of pixels have fuzzing applied?\nconst float chance = 0.75;\n\n//How many pixels will the offset be (max)?\nconst float scale = 15.0;\n\n//How much of a difference do we tolerate from fuzzing?\nconst float tolerance = 0.15;\n\nfloat Fuzz(vec2 uv, float seed)\n{\n    vec2 texel = vec2(1, 1) / iResolution.xy;\n    \n    float offset = (Rand(uv, seed) * 2.0 - 1.0);\n    offset = pow(offset, 3.0);\n        \n    return offset * scale;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Where we want to sample (no fuzzing)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //Generate some randomness\n    vec2 rnd = vec2(Rand(uv, 17.0), Rand(uv, 19.0));\n    \n    //Width of a single texel\n    vec2 texel = vec2(1, 1) / iResolution.xy;\n    \n    //Apply offsets for fuzzing\n    vec2 fuzzUv = uv;\n    if (rnd.x < chance) {\n        fuzzUv.x += texel.x * Fuzz(uv, uv.x);\n    }\n    if (rnd.y < chance) {\n       \tfuzzUv.y += texel.y * Fuzz(uv, uv.y);\n    }\n    \n    //Sample input (in this case just a video)\n    vec4 actualColor = texture(iChannel0, uv);\n    vec4 fuzzColor = texture(iChannel0, fuzzUv);\n    \n    //Take the fizzed sample, if the difference is sufficiently small\n    float diff = length(actualColor - fuzzColor);\n    if (diff < tolerance) {\n        fragColor = fuzzColor;\n    } else {\n        fragColor = actualColor;\n    }\n}","name":"","description":"","type":"image"}]}