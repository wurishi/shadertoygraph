{"ver":"0.1","info":{"id":"fs2GWV","date":"1617984120","viewed":43,"name":"Evil Otto HD","username":"IMLXH","description":"we are cursed","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle( vec2 uv, vec2 p, float r, float blur )\n{\n    float d = length(uv-p); // distance from origin\n    float c = smoothstep(r, r-blur, d); // BLUR OUT THE PIXELS I TOLD YOU TO MAKE GOOD GRAPHICS\n    \n    return c;\n}\n\nfloat smiley( vec2 uv, vec2 p, float size)\n{\n    uv -= p; // translating coordinate system\n    uv /= size; // scaling cooridinate system\n    float mask = circle(uv, vec2(0., 0.), .4, .01);\n    \n    // mouth\n    mask -= circle(uv, vec2(0., 0.), .3, .01);\n    mask += circle(uv, vec2(0., 0.1), .3, .01);\n    \n    // eyes\n    mask -= circle(uv, vec2(-.15, .15), .05, .01);\n    mask -= circle(uv, vec2(.15, .15), .05, .01);\n    \n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv-=0.5; // centers origin\n    uv.x *= iResolution.x/iResolution.y; // correcting aspect ratio\n    \n    float mask = \n        smiley(uv, vec2(0.), 1.);\n    \n    vec3 col = vec3(0.);\n    \n    col = vec3(1., 1., 0.) * mask; // image drawn in black and white, then multiplied by color\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}