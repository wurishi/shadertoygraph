{"ver":"0.1","info":{"id":"llXSWX","date":"1440152375","viewed":124,"name":"Learning 01","username":"Albatros","description":"Using sin and cos & colors","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define PI 3.14159265359\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.1, pct, st.y) - \n          smoothstep( pct, pct+0.1, st.y);\n}\n\nvec3 colorA = vec3(0.149,0.141,0.912);\nvec3 colorB = vec3(1.000,0.833,0.224);\n\n\nvec3 rgb2hsb( in vec3 c ){\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), \n                 vec4(c.gb, K.xy), \n                 step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), \n                 vec4(c.r, p.yzx), \n                 step(p.x, c.r));\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), \n                d / (q.x + e), \n                q.x);\n}\n\n//  Function from IÃ±igo Quiles \n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0, \n                     0.0, \n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n    vec2 st = fragCoord.xy/ iResolution.xy;\n\n    st -= 0.25;\n    st /= 0.2;\n    // Smooth interpolation between 0.1 and 0.9\n    //float y = floor(st.x);\n    float y = (fract(sin(st.x + iTime) * 10000.)) + (fract(cos(st.x + iTime) * 10000.)) * 2.5 - 0.5;\n\n    vec3 color = vec3(0.2);\n    \n    float pct = plot(st,y);\n    //color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n\n    vec3 multipleColor = hsb2rgb(vec3(sin(st.x + iTime * 5.),1.0,st.y));\n    \n    \n    color = mix(color,multipleColor,plot(st,y));\n    \n    fragColor = vec4(color,1.0);\n}","name":"","description":"","type":"image"}]}