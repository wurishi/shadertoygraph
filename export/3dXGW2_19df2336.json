{"ver":"0.1","info":{"id":"3dXGW2","date":"1547478023","viewed":383,"name":"Pawsies","username":"ReavenTehDerg","description":"Inspired from Hyper Potions electronic music group.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["colorful","paw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 RotateVec2(vec2 vec);\nfloat N21(vec2 p);\nvec2 N22(vec2 p);\nfloat circleMask(vec2 uv, float radius);\nvec2 GetPos(vec2 id);\nfloat map(float value, float fromSource, float toSource, float fromTarget, float toTarget);\n\nvec3 GradientBackground();\nfloat Shines(vec2 uv);\nfloat Paw(vec2 uv);\nfloat PawMap(vec2 uv);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec3 col = GradientBackground();//vec3(0.2, 0.8, 0.9);\n    col += PawMap(uv);\n    col += Shines(uv);\n    fragColor = vec4(col, 1.0);\n}\n\n//Helpers\nvec2 RotateVec2(vec2 vec, float angle)\n{\n    float s = sin(angle);\n    float c = cos(angle);\n    mat2 rot = mat2(c, s, -s, c);\n    return vec * rot;\n}\nfloat N21(vec2 p)\n{\n    p = fract(p * vec2(8356.655414, 645.8778));\n    p += dot(p, p + 72.724);\n    return fract(p.x * p.y);\n}\nvec2 N22(vec2 p)\n{\n    float x = N21(p);\n    float y = N21(p + x);\n    return vec2(x, y);\n}\nfloat circleMask(vec2 uv, float radius)\n{\n    float vL = length(uv);\n    float circle = smoothstep(radius, radius - 0.04, vL);\n    return circle;\n}\nvec2 GetPos(vec2 id)\n{\n    vec2 n = N22(id) * iTime * 0.6;\n    return sin(n) * .4;\n}\nfloat map(float value, float fromSource, float toSource, float fromTarget, float toTarget)\n{\n    return (value - fromSource) / (toSource - fromSource) * (toTarget - fromTarget) + fromTarget;\n}\n//end helpers\n\nvec3 GradientBackground()\n{\n    \n    vec2 uv = (gl_FragCoord.xy / iResolution.xy);\n    float angle = 0.6;\n    \n    float s = sin(angle);\n    float c = cos(angle);\n    mat2 rot = mat2(c, s, -s, c);\n    uv *= rot;\n\n    vec3 start = vec3(0.0, 0.0, 1.0);\n    vec3 end = vec3(0.65, 1.0, 0.0);\n    vec3 val = vec3(uv, 0.20);\n\n    vec3 col = mix(start, end, val);\n    uv *= rot;\n    return col;\n}\nfloat Shines(vec2 uv)\n{\n    uv *= 1.5;\n    uv.y -= iTime * 0.2;\n    vec2 gv = fract(uv) - 0.5;\n    vec2 id = floor(uv);\n    float shineRate = map(abs(sin(iTime * N21(id))), -1.0, 1.0, 0.06, 0.2);\n    vec2 p = GetPos(id);\n    float d = length(gv - p);\n    float m = smoothstep(0.1, 0.01, d) * shineRate;\n    return m;\n}\nfloat Paw(vec2 uv)\n{\n    float mask;\n    vec2 saveUV = uv;\n\n    //digital pad 1\n    uv.x += 0.1;\n    uv.y += 0.03;\n    uv = RotateVec2(uv, 0.3);\n    uv.y += sin(uv.x) * 0.1;\n    uv.y *= 0.6;\n    mask += circleMask(uv, 0.05);\n    uv = saveUV;//revert to priginal\n\n    //digital pad 2\n    uv.y += sin(uv.x) * 0.1;\n    uv.y *= 0.6;\n    mask += circleMask(uv, 0.05);\n    uv = saveUV;//revert to priginal\n\n    //digital pad 3\n    uv.x -= 0.1;\n    uv = RotateVec2(uv, -0.2);\n    uv.y += sin(uv.x) * 0.1;\n    uv.y *= 0.6;\n    mask += circleMask(uv, 0.05);\n    uv = saveUV;//revert to priginal\n\n    //digital pad 4\n    uv.x -= 0.2;\n    uv.y += 0.05;\n    uv = RotateVec2(uv, -0.5);\n    uv.y += sin(uv.x) * 0.1;\n    uv.y *= 0.6;\n    mask += circleMask(uv, 0.05);\n    uv = saveUV;//revert to priginal\n\n    //metacarpal pad\n    uv.x -= 0.05;\n    uv.y += 0.25;\n    uv.y -= abs(uv.x) * 0.3;\n    mask += circleMask(uv, 0.15);\n\n    return mask;\n}\nfloat PawMap(vec2 uv)\n{\n    vec2 rotUV = uv;\n\n    rotUV *= 6.;\n    rotUV = RotateVec2(rotUV, -0.4);\n    rotUV.y -= iTime * 0.6;\n\n    vec2 gv = fract(rotUV * 0.5) - 0.5;\n\n    float mask;\n    rotUV.x += 0.4;\n    rotUV.y += 0.8;\n    vec2 id = floor(rotUV);\n    gv = RotateVec2(gv, sin(iTime * N21(id)));\n\n    float shine = abs(sin(iTime * N21(id)));\n     mask += Paw(gv / 0.5) * shine;\n\n    return mask; \n}","name":"Image","description":"","type":"image"}]}