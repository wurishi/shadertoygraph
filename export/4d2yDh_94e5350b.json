{"ver":"0.1","info":{"id":"4d2yDh","date":"1492175608","viewed":138,"name":"Sketch_Discs3","username":"cexlearning","description":"Discs3ï¼Œ copy from https://github.com/keijiro/ShaderSketches","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sketch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float saturate(float x) { return clamp(x, 0.0, 1.0); }\nvec3 saturate(vec3 x) { return clamp(x, 0.0, 1.0); }\n\nfloat rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 palette(float z)\n{\n    vec3 a = vec3(0.90, 0.60, 0.69);\n    vec3 b = vec3(0.17, 0.41, 0.41);\n    return saturate(a + b * sin(z * 9.0 + iTime * 2.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    float scale = iResolution.y / (6.0 + sin(iTime * 0.4) * 3.0);\n    vec2 p = (fragCoord.xy - iResolution.xy / 2.0) / scale;\n    vec2 p1 = fract(p) - 0.5;\n    vec2 p2 = fract(p - 0.5) - 0.5;\n\n    float z1 = rand(0.19 * floor(p));\n    float z2 = rand(0.31 * floor(p - 0.5));\n\n    vec3 c1 = palette(z1);\n    vec3 c2 = palette(z2);\n\n    c1 *= saturate((0.25 - abs(0.5 - fract(length(p1) * 10.0 + 0.26))) * scale / 10.0);\n    c2 *= saturate((0.25 - abs(0.5 - fract(length(p2) * 10.0 + 0.26))) * scale / 10.0);\n\n    float a1 = saturate((0.5 - length(p1)) * scale);\n    float a2 = saturate((0.5 - length(p2)) * scale);\n\n    vec3 c = mix(\n        mix(mix(vec3(0), c1, a1), c2, a2),\n        mix(mix(vec3(0), c2, a2), c1, a1),\n        step(z1, z2)\n    );\n\n    fragColor = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}