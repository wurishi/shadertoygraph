{"ver":"0.1","info":{"id":"XccXzN","date":"1713703808","viewed":102,"name":"Frostfire","username":"steinklo","description":"Its frostfire!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 iceColor = vec3(0.0, 0.5, 1.0);\nconst vec3 blendColor = vec3(0.0, 1.0, 0.0);\nconst vec3 fireColor = vec3(1.0, 0.3, 0.0);\nfloat hexDist(vec2 p) {\n    p = abs(p);\n    \n    float c = dot(p, normalize(vec2(1.0,1.73)));\n    \n    return max(c, p.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float numberGain = 30.0;\n    float colorGain = 0.1;\n    float heightGain = 0.65;\n    float colorBlendGain = 0.7;\n    float sizeGain = 0.3;\n    \n    \n    float timeGain = iTime * 2.0;\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    \n    \n    uv *= numberGain;\n    \n    vec2 r = vec2(1.0,1.73);\n    vec2 h = r * 0.5;    \n    vec2 a = mod(uv, r) - h;\n    vec2 b = mod(uv - h, r) - h;   \n    vec2 gv = b;\n    if (length(a) < length(b)) {\n        gv = a;\n    }\n    \n    float size = 0.5 - hexDist(gv);\n    vec2 id = (uv - gv);\n    size *= (1.0 - sizeGain) - abs(sin(id.x * id.y + timeGain)) * sizeGain;\n    \n    id /= numberGain;   \n    id.x = id.x * 0.5 + 0.5;\n    id.y = id.y * 0.5 + 0.5;\n    id.x = smoothstep(0.0, 1.0, id.x);\n    id.y = smoothstep(0.0, 1.0, id.y);\n\n    \n    float audio = texture(iChannel0, vec2(id.x, 0.0)).x;\n    float audioInv = texture(iChannel0, vec2(1.0-id.x, 0.0)).x;\n    \n    audio *= heightGain;\n    audioInv = 1.0 - audioInv * heightGain;\n    \n\n    bool audioHit = false;\n    bool audioInverseHit = false;\n\n    vec3 fireSideColor = mix(blendColor, fireColor, id.x * colorBlendGain + 1.0 - colorBlendGain);\n    vec3 iceSideColor = mix(blendColor, iceColor, 1.0 - id.x * colorBlendGain);\n    vec3 col = mix(iceSideColor, fireSideColor, smoothstep(0.3, 0.7, id.y));\n\n    \n    if (audio > id.y) {\n        colorGain = max(audio, 0.5);\n        col = iceSideColor;\n        audioHit = true;\n    }\n    if (audioInv < id.y) {\n        colorGain = max(audioInv, 0.5);\n        col = fireSideColor;\n        audioInverseHit = true;\n\n    }\n    if (audioHit && audioInverseHit) {\n        col = mix(iceSideColor, fireSideColor, smoothstep(0.3, 0.7, id.y));\n    }\n    float c = smoothstep(0.01, 0.03, size) * colorGain;\n    col *= c;\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}