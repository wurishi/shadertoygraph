{"ver":"0.1","info":{"id":"Wdj3zV","date":"1549387810","viewed":1298,"name":"Old Film","username":"jfranmp","description":"film noise","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["film"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SEQUENCE_LENGTH 24.0\n#define FPS 12.\n\nvec4 vignette(vec2 uv, float time) \n{\n    uv *=  1.0 - uv.yx;   \n    float vig = uv.x*uv.y * 15.0;\n    float t = sin(time * 23.) * cos(time * 8. + .5);\n    vig = pow(vig, 0.4 + t * .05);\n    return vec4(vig);\n}\n\nfloat easeIn(float t0, float t1, float t) \n{\n\treturn 2.0*smoothstep(t0,2.*t1-t0,t);\n}\n\nvec4 blackAndWhite(vec4 color) \n{\n    return vec4(dot(color.xyz, vec3(.299, .587, .114)));\n}\n\nfloat filmDirt(vec2 pp, float time) \n{\n\tfloat aaRad = 0.1;\n\tvec2 nseLookup2 = pp + vec2(.5,.9) + time*100.;\n\tvec3 nse2 =\n\t\ttextureLod(iChannel0,.1*nseLookup2.xy,0.).xyz +\n\t\ttextureLod(iChannel0,.01*nseLookup2.xy,0.).xyz +\n\t\ttextureLod(iChannel0,.004*nseLookup2.xy+0.4,0.).xyz;\n\tfloat thresh = .6;\n\tfloat mul1 = smoothstep(thresh-aaRad,thresh+aaRad,nse2.x);\n\tfloat mul2 = smoothstep(thresh-aaRad,thresh+aaRad,nse2.y);\n\tfloat mul3 = smoothstep(thresh-aaRad,thresh+aaRad,nse2.z);\n\t\n\tfloat seed = textureLod(iChannel0,vec2(time*.35,time),0.).x;\n\t\n\tfloat result = clamp(0.,1.,seed+.7) + .3*smoothstep(0.,SEQUENCE_LENGTH,time);\n\t\n\tresult += .06*easeIn(19.2,19.4,time);\n\n\tfloat band = .05;\n\tif( 0.3 < seed && .3+band > seed )\n\t\treturn mul1 * result;\n\tif( 0.6 < seed && .6+band > seed )\n\t\treturn mul2 * result;\n\tif( 0.9 < seed && .9+band > seed )\n\t\treturn mul3 * result;\n\treturn result;\n}\n\nvec4 jumpCut(float seqTime) \n{\n\tfloat toffset = 0.;\n\tvec3 camoffset = vec3(0.);\n\t\n\tfloat jct = seqTime;\n\tfloat jct1 = 7.7;\n\tfloat jct2 = 8.2;\n\tfloat jc1 = step( jct1, jct );\n\tfloat jc2 = step( jct2, jct );\n\t\n\tcamoffset += vec3(.8,.0,.0) * jc1;\n\tcamoffset += vec3(-.8,0.,.0) * jc2;\n\t\n\ttoffset += 0.8 * jc1;\n\ttoffset -= (jc2-jc1)*(jct-jct1);\n\ttoffset -= 0.9 * jc2;\n\t\n\treturn vec4(camoffset, toffset);\n}\n\nfloat limitFPS(float time, float fps) \n{\n    time = mod(time, SEQUENCE_LENGTH);\n    return float(int(time * fps)) / fps;\n}\n\nvec2 moveImage(vec2 uv, float time) \n{\n    uv.x += .002 * (cos(time * 3.) * sin(time * 12. + .25));\n    uv.y += .002 * (sin(time * 1. + .5) * cos(time * 15. + .25));\n    return uv;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 qq = -1.0 + 2.0*uv;\n    qq.x *= iResolution.x / iResolution.y;\n    \n\tfloat time = limitFPS(iTime, FPS);\n\n\tvec4 jumpCutData = jumpCut(time);\n    vec4 dirt = vec4(filmDirt(qq, time + jumpCutData.w));     \n    vec4 image = texture(iChannel1, moveImage(uv, time));   \n    vec4 vig = vignette(uv, time);\n    \n    fragColor = image * dirt * vig;\n    fragColor = blackAndWhite(fragColor);\n}","name":"Image","description":"","type":"image"}]}