{"ver":"0.1","info":{"id":"XtdXW4","date":"1479606247","viewed":183,"name":"Obfuscated Sphere Effects 1070 C","username":"VoidChicken","description":"The shader might not fit in a Tweet, but this will. Mouse to move camera. Original version: [url]https://www.shadertoy.com/view/MtcSDN[/url]","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","skybox","character","chicken","short","char","1070char","1070"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"                                       //By VoidChicken Creative Commons Attribution\\\\\n\t\t\t\t\t\t\t\t\t\t  //Non-Commercial Share Alike License 4.0\\\\\n\t\t\t\t\t\t\t\t\t\t     //Sphere Refraction Reflection 1070\\\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t   /*\\CHARACTERS\\*/\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t#define P vec3\n\t\t\t\t\t\t\t\t\t\t\t\t\t#define   V \t  vec2\n\t\t\t\t\t\t\t\t\t\t\t\t#define S(x) clamp(x,0.,1.)\n\t\t\t\t\t\t\t\t\t\t\tmat3 Q(P a, float b){a = normalize(a);\n                     \t\t\t\t\tfloat s = sin(b);float c = cos(b);float d = 1.-c;\n                        \t\t\treturn mat3(d * a.x * a.x + c,d * a.x * a.y - a.z * s, \n                                    d * a.z * a.x + a.y * s, d * a.x * a.y + a.z * s,  d * a.y\n                                   * a.y + c,d * a.y * a.z - a.x * s,  d * a.z * a.x - a.y * s,\n                                 d * a.y * a.z + a.x * s,  d * a.z * a.z + c);}P L(P x){return \n                                texture(iChannel0,x).rgb;}float M(P x){return length(x)-4.;}\n\t\t\t\t\t\t\t    P N(P x){V e=V(.01,0);return normalize(P(M(x+e.xyy)-M(x-e.xyy),M(x\n                               +e.yxy)-M(x-e.yxy),M(x+e.yyx)-M(x-e.yyx)));}float e=2.3,p=acos(-1.);\n\t\t\t\t\t\t\t void mainImage(out vec4 q,V h){V R=iResolution.xy, u = h/R;      vec4 m=\n                            iMouse/R.xyxx;if(iMouse.xy==V(0)){m.w=-1./R.x;m.xy=V(.5);}mat3 x=Q(P(0,1,0),\n                            S(-m.w*R.x)*iDate.w*3.14/10.+m.x*p*2.);x*=Q(cross(P(0,1,0),P(0,0,1)*x), m.y*\n                             p-p/2.);P i,f,o=P (0, 0, -10.)*x,d=normalize(P((u*2.-1.)*V(R.x/R.y, 1),1)\n                              )*x;f=L(d);float t=0.;for (int i=0;i<9;++i){t+=M(o+d*t);}i=o+d*t;if(M(i)<\n                              .1){P W=N(i),n=normalize(W*Q(W.yzx+W,texture(iChannel1,.2*(i.xz+i.xy+\n                                  i.yz)).r)),r=refract(d,n,.9),k=reflect(d,n);f=mix(L(k),L(r),S(-dot\n                                    (n,d)))*P(.9, .8, .5);}q = vec4(1.-exp(-f*(1.4-length(u-.5)*\n                                       \t\t\t\t1.4)*P(1.1, 1.05, .8)*e),1);}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t","name":"Image","description":"","type":"image"}]}