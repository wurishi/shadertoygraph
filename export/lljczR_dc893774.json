{"ver":"0.1","info":{"id":"lljczR","date":"1507238520","viewed":110,"name":"SAquino_EGP-200-03_Reveal","username":"ScottAquino","description":"Create a blurred background with a sharpened reveal circle centered on the mouse location. Other effects have also been implemented and can be chosen along with the intensity of the blur.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["matrix","layers","kernels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nAuthor: Scott Aquino\nClass: EGP 200-03\nAssignment: Reveal\nDate Due: October 8, 2017\n\nDescription: Create a background layer that is blurred with a reveal that is sharpened based on mouse location.\n\t\t\t Other effects are also availible and blur intensity is adjustable\n\nCertification of Authenticity: I certify that this is entirely my own work, except where I have given\nfully‐documented references to the work of others. I understand the definition and\nconsequences of plagiarism and acknowledge that the assessor of this assignment\nmay, for the purpose of assessing this assignment:\n‐ Reproduce this assignment and provide a copy to another member of academic\n‐ staff; and/or Communicate a copy of this assignment to a plagiarism checking\n‐ service (which may then retain a copy of this assignment on its database for the\n‐ purpose of future plagiarism checking)\n*/\n\n//--------Variables---------//\n//Adjust this variable to increase reveal size\nfloat rad = 0.1;\n//Adjust this to choose an effect (0,1,2,3 or 4)\nint choice1 = 1;\nint choice2 = 1;\n//Adjust this to choose the intensity of the blur\nint intensity = 2;\n\n//Blur matrix\nmat3 blur = mat3(\n\t0.111, 0.111, 0.111,\n\t0.111, 0.111, 0.111,\n\t0.111, 0.111, 0.111 \n\t);\n\n//Sobel matrix\nmat3 sobel = mat3(\n\t-1.0, -2.0, -1.0,\n\t0.0, 0.0, 0.0,\n\t1.0, 2.0, 1.0 \n\t);\n\n//Identity matrix\nmat3 identity = mat3(\n\t0.0, 0.0, 0.0,\n\t0.0, 1.0, 0.0,\n\t0.0, 0.0, 0.0 \n\t);\n\n//Sharpen matrix\nmat3 sharpen = mat3(\n\t0.0, -1, 0.0,\n\t-1, 5, -1, \n\t0.0, -1, 0.0 \n\t);\n\n//Emboss matrix\nmat3 emboss = mat3(\n\t-2, -1, 0, \n\t-1, 1, 1, \n\t0, 1, 2 \n\t);\n\n//Edge detection matrix\nmat3 edge = mat3(\n\t-1, -1, -1, \n\t-1, 8, -1, \n\t-1, -1, -1 \n\t);\n\n//-----------Functions---------//\n//Sample the background texture\nvec3 aSampleBackground(const int x, const int y, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x * intensity, y * intensity)) / iChannelResolution[0].xy ;\n\treturn texture(iChannel0, uv).xyz;\n}\n\n//Apply blur to the background image\nvec3 aFilterBackground(in vec2 fragCoord, mat3 kernel)\n{\n\tvec3 sum = vec3(0.0,0.0,0.0);\n\t\n    //Loop through matrix\n\tfor(int i = 0; i < 3; i ++)\n\t{\n\t\tfor(int j = 0; j < 3; j++)\n\t\t{\n            //Apply effect to the image\n\t\t\tsum += aSampleBackground(i-1, j-1, fragCoord) * kernel[i][j];\n\t\t}    \n\t}\nreturn sum;\n}\n\n//Sample revealed texture\nvec3 aSample(const int x, const int y, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n\treturn texture(iChannel1, uv).xyz;\n}\n\n//Apply effect chosen below to the reveal\nvec3 aFilter(in vec2 fragCoord, mat3 kernel)\n{\n\tvec3 sum = vec3(0.0,0.0,0.0);\n\n    //Loop through matrix\n\tfor(int i = 0; i < 3; i ++)\n\t{\n\t\tfor(int j = 0; j < 3; j++)\n\t\t{\n        \t//Apply effect to the image\n\t\t\tsum += aSample(i-1, j-1, fragCoord) * kernel[i][j];\n\t\t}    \n\t}\nreturn sum;\n}\n\n//--------Main Function----------//\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Set variables for location within the function\n    vec2 fc = fragCoord.xy;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //Set mouse position and apply aspect ratio to mouse position and uv\n    float aspectRatio = iResolution.y / iResolution.x;\n    vec4 m = iMouse / iResolution.xyxy;\n    m.y *= aspectRatio;\n    uv.y *= aspectRatio;\n    \n    vec3 color1 = vec3(0.0,0.0,0.0);\n    vec3 color2 = vec3(0.0,0.0,0.0);\n    \n    //You can change the images in the channels if you wish\n    switch(choice1)\n    {\n     case 0:\n        color1 = aFilterBackground(fc, identity);\n        break;\n     case 1:\n        color1 = aFilterBackground(fc, blur);\n        break;\n     case 2:\n        color1 = aFilterBackground(fc, emboss);\n        break;\n     case 3:\n        color1 = aFilterBackground(fc, edge);\n        break;\n     case 4:\n        color1 = aFilterBackground(fc, sobel);\n        break;\n    }\n    \n    //Choose one line using the variable defined above for which effect you would like\n    switch(choice2)\n    {\n     case 0:\n        color2 = aFilter(fc, identity);\n        break;\n     case 1:\n        color2 = aFilter(fc, sharpen);\n        break;\n     case 2:\n        color2 = aFilter(fc, emboss);\n        break;\n     case 3:\n        color2 = aFilter(fc, edge);\n        break;\n     case 4:\n        color2 = aFilter(fc, sobel);\n        break;\n    }\n    \n    //Set layers to proper images\n    vec4 Layer1 = vec4(color1, 1.0);\n    vec4 Layer2 = vec4(color2, 1.0)  * step(length(uv.xy - m.xy), rad);\n    \n    //Combine and output\n    vec4 Composite = mix(Layer1, Layer2, Layer2.a);\n\tfragColor = Composite;\n}","name":"Image","description":"","type":"image"}]}