{"ver":"0.1","info":{"id":"lXBXWz","date":"1710447505","viewed":157,"name":"8-bit Blue Noise Dithering","username":"beans_please","description":"dithering","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["noise","dither","gamma","dithering","bluenoise","srgb","oetf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragcol, in vec2 fragcoord)\n{\n    // UV (0 to 1 stretched)\n    vec2 uv = fragcoord / iResolution.xy;\n\n    // linear gradient\n    vec3 col = vec3(uv.x * .3 + .05);\n\n    // OETF (Linear BT.709 I-D65 --> sRGB 2.2)\n    col = pow(col, vec3(1. / 2.2));\n    \n    // alternate dither mode\n    bool dither = mod(iTime, 2.) < 1.;\n    \n    // dither\n    if (dither)\n    {\n        float bn = texelFetch(\n            iChannel0,\n            ivec2(fragcoord) % textureSize(iChannel0, 0),\n            0\n        ).x;\n        col += 2. * (bn - .5) / 254.9;\n    }\n    \n    // indicator at the corner\n    if (uv.x > .97 && uv.y < .05)\n    {\n        col = dither ? vec3(0, 1, 0) : vec3(1, 0, 0);\n    }\n    \n    // output\n    fragcol = vec4(col, 1);\n}\n","name":"Image","description":"","type":"image"}]}