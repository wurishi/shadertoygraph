{"ver":"0.1","info":{"id":"NtSXDd","date":"1628844706","viewed":93,"name":"snow tape noise","username":"zyc","description":"snow tape noise","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define t iTime\n\n//random hash\nvec4 hash42(vec2 p){\n    \n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(443.8975,397.2973, 491.1871, 470.7827));\n    p4 += dot(p4.wzxy, p4+19.19);\n    return fract(vec4(p4.x * p4.y, p4.x*p4.z, p4.y*p4.w, p4.x*p4.w));\n}\n\n\nfloat hash( float n ){\n    return fract(sin(n)*43758.5453123);\n}\n\n// 3d noise function (iq's)\nfloat n( in vec3 x ){\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\n//tape noise\nfloat nn(vec2 p){\n    float y = p.y;\n    float s = t*2.;\n    \n    float v = (n( vec3(y*.01 +s, \t\t\t1., 1.0) ) + .0)\n          \t *(n( vec3(y*.011+1000.0+s, \t1., 1.0) ) + .0) \n          \t *(n( vec3(y*.51+421.0+s, \t1., 1.0) ) + .0)   \n        ;\n    //v*= n( vec3( (fragCoord.xy + vec2(s,0.))*100.,1.0) );\n   \tv*= hash42(   vec2(p.x +t*0.01, p.y) ).x +.3 ;\n    \n    v = pow(v+.3, 1.);\n\tif(v<.7) v = 0.;  //threshold\n    return v;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float linesN = 240.; //fields per seconds\n    float one_y = iResolution.y / linesN; //field line\n    vec2 uv2 = floor(uv*iResolution.xy/one_y)*one_y;\n\tfloat col =  nn(uv2);\n    \n    vec4 noiseColor = vec4(vec3(col), step(0.05, col));\n    vec4 texColor = texture(iChannel0, uv);\n    \n    // Output to screen\n\tfragColor = mix(texColor, noiseColor, noiseColor.a);\n}","name":"Image","description":"","type":"image"}]}