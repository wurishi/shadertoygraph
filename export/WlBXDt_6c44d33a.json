{"ver":"0.1","info":{"id":"WlBXDt","date":"1567445780","viewed":337,"name":"CMY-revealing circles","username":"clepirelli","description":"Simple RGB-revealing circles","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["circle","rgb","reveal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct circle\n{\n\tfloat radius;\n    vec2 center;\n};\n\n//ASCII defines\n#define Y 89\n#define C 67\n#define M 77\n#define K 75\n\n#define glyphDimensions vec2(.1)\nstruct glyph\n{\n\tvec2 position;\n    int letter;\n};\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \n    vec3 texCol = texture(iChannel0, fragCoord/iResolution.xy).rgb;\n    vec3 col = vec3(max(max(texCol.r, texCol.g), texCol.b));\n    \n    circle circles[3];\n    glyph glyphs[4];\n    for(int i = 0; i <3; i++)\n    {\n    \tcircles[i].radius = (abs(sin(iTime*.33333))*.5+.1)*.66666;\n    }\n    \n    circles[0].center = vec2(sin(iTime), cos(iTime))*.2;\n    circles[1].center = vec2(cos(iTime), cos(iTime*.1))*.1;\n    circles[2].center = vec2(cos(iTime*2.0), sin(iTime))*.3;\n    \n    bool edge = false;\n    \n    \n    \n    for(int i = 0; i < 3; i++)\n    {\n        circle c = circles[i];\n        float distToCenter = distance(uv, c.center);\n    \tif(distToCenter < c.radius)\n    \t{\n        \tcol[i] = texCol[i];\n    \t}\n    \telse if(distToCenter < c.radius+c.radius*.075)\n    \t{\n    \t\tedge = true;\n            break;\n    \t}\n    }\n    \n    if(edge) col = vec3(.0);\n    \n    \n    for(int i = 0; i < 3; i++)\n    {\n    \tglyphs[i].position = circles[i].center - glyphDimensions*.5;\n    }\n    \n    glyphs[0].letter = C;\n    glyphs[1].letter = M;\n    glyphs[2].letter = Y;\n    glyphs[3].letter = K;\n    glyphs[3].position = vec2(.52, -.3);\n    \n    \n    for(int i = 0; i < 4; i++)\n    {\n        glyph g = glyphs[i];\n        \n        if(uv.x < g.position.x \n           || uv.x > g.position.x + glyphDimensions.x \n           || uv.y < g.position.y \n           || uv.y > g.position.y + glyphDimensions.y) continue;\n    \t\n        \n        vec2 guv = vec2(float(g.letter % 16), float(15-(g.letter/16)))/16.;\n        guv = mix(guv, guv+1./16.,(uv-g.position)/glyphDimensions);\n        col = mix(col, vec3(.0),texture(iChannel1, guv).r);\n    }\n    \n    \n    \n    fragColor = vec4(col, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}