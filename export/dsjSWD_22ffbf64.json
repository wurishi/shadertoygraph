{"ver":"0.1","info":{"id":"dsjSWD","date":"1670343763","viewed":146,"name":"Texture Skew","username":"Did","description":"Skew the top corners of a texture.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Parameters\n    float topLeftSkew = 0.1;  // Strength of the top left skew\n    float topRightSkew = 0.1; // Strength of the top right skew\n    float preventRepeat = 0.; // 1 to prevent the texture from repeating itself on the edges\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv;\n\n    // Apply a sine wave to add motion\n    float tl = (0.5 + sin(iTime) * 0.5) * topLeftSkew;\n    float tr = (0.5 + cos(iTime) * 0.5) * topRightSkew;\n\n    // Warp X\n    float dxl = tl * uv.y;\n    float dxr = tr * uv.y;\n    uv2.x = uv2.x * (1. + dxr) * (1. + dxl) - dxl;\n    \n    // Warp Y\n    float dyl = tl * (1. - uv.x);\n    float dyr = tr * uv.x;\n    uv2.y = uv2.y * (1. + dyl) * (1. + dyr);\n    \n    // Clamp (optional)\n    uv2 = preventRepeat * clamp(uv2, 0.0, 1.0) + (1. - preventRepeat) * uv2;\n\n    // Pixel color\n\tvec3 texture = texture(iChannel0, uv2).rgb;\n\n    // Output to screen\n    fragColor = vec4(texture, 1.0);\n}","name":"Image","description":"","type":"image"}]}