{"ver":"0.1","info":{"id":"tllSz8","date":"1700544742","viewed":15,"name":"Test zone plat","username":"caorenxxy","description":"Test zone plat","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["zoneplat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int fs(float t)\n{\n    if(t - float(int(t)) < 0.5) return 0;\n    else return 1;\n}\n\nfloat rand2(float n){return fract(sin(n) * 43758.5453123);}\n\nfloat rand(vec2 v)\n{\n    return fract(sin(dot(v, v)));\n}\n\nfloat rand3(float n) {return 0.5;}\n\nfloat gaussian_filter(float dx, float dy)\n{\n    float std_dev = 0.5;\n    float radius = std_dev * 4.0;\n    float alpha = -1.0f / (2.0f * std_dev * std_dev);\n\tfloat expr = exp(alpha * radius * radius);\n    \n    return max(0.0f, exp(alpha * dx * dx) - expr) * max(0.0f, exp(alpha * dy * dy) - expr);\n}\n\nfloat box_filter(float dx, float dy)\n{\n    return 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int sppx = 4, sppy = 4;\n    float width = 1.0;\n    vec2 orig = vec2(0, iResolution.y * 0.5);\n    vec3 color = vec3(0, 0, 0);\n    float dx = 2.0 * width / float(sppx);\n    float dy = 2.0 * width / float(sppy);\n    float weight = 0.0;\n    \n    vec2 fragCoordLL = fragCoord - vec2(width, width);\n    for(int i = 0; i < sppx; ++i)\n    {\n        for(int j = 0; j < sppy; ++j)\n        {\n            \n            float u = dx * float(i) + rand3(fragCoordLL.x + dx * float(i)) / float(sppx);\n            float v = dy * float(j) + rand3(fragCoordLL.y + dy * float(j)) / float(sppy);\n            vec2 pixelCoord = fragCoordLL + vec2(u, v);\n            float weight_ij = gaussian_filter(abs(pixelCoord.x - fragCoord.x - 0.5), abs(pixelCoord.y - fragCoord.y - 0.5));\n            //float weight_ij = box_filter(abs(pixelCoord.x - fragCoord.x - 0.5), abs(pixelCoord.y - fragCoord.y - 0.5));\n        \tfloat r2 = dot((pixelCoord - orig), (pixelCoord - orig));\n        \tfloat col = float(fs(sin(r2 / 900.0)));\n        \tcolor += vec3(col, col, col) * weight_ij;\n            weight += weight_ij;\n        }\n        \n    }\n\tcolor /= weight;\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}