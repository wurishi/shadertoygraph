{"ver":"0.1","info":{"id":"dlcSWl","date":"1685854895","viewed":145,"name":"Rainbow Grid Warp","username":"isaacchurchill","description":"Cool swirly pattern","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["2d","grid","warp","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SAMPLES_X 4\n#define SAMPLES_Y 4\n\n#define PI 3.14159265\n\nvec3 palette(float x)\n{\n    return 0.5 + 0.5 * cos(x * PI * 2.0 + vec3(0,2,4));\n}\n\n\nvec2 distort(vec2 p)\n{\n    return p * (1.0 + 1.0 * pow(dot(p,p), sin(iTime)));\n}\n\nvec3 getCol(vec2 p)\n{\n    vec2 distorted = distort(p);\n    float a = 3.0;\n    float b = 10.0;\n    vec3 col = palette((floor(distorted.x * a) + floor(distorted.y * a) + iTime * 3.0) / b);\n    col *= float(abs(distorted.x * a - round(distorted.x * a)) > 0.02);\n    col *= float(abs(distorted.y * a - round(distorted.y * a)) > 0.02);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0 * fragCoord - iResolution.xy ) / iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    for (int i = 0; i < SAMPLES_X; i++) {\n        for (int j = 0; j < SAMPLES_Y; j++) {\n            vec2 offs = vec2(float(i) / float(SAMPLES_X - 1),\n                             float(j) / float(SAMPLES_Y - 1)) * 2.0 - 1.0;\n            offs /= iResolution.y;\n            col += getCol(p + offs);\n        }\n    }\n    col /= float(SAMPLES_X * SAMPLES_Y);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}