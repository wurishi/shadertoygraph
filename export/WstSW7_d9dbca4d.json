{"ver":"0.1","info":{"id":"WstSW7","date":"1572145281","viewed":119,"name":"Arch Linux Logo","username":"mat44","description":"very basic but whatever","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","logo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b ) {\n    vec2 d = abs(p)-b;\n    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdRoundedBox(vec2 p, vec2 b, float r) {\n    return sdBox(p, b) - r;\n}\n\nfloat sdLine( in vec2 p, in vec2 a, in vec2 b ) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat sdEqTriangle( in vec2 p ) {\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat sdCircle( vec2 p, float r ){\n    return length(p) - r;\n}\n\nfloat getDist(vec2 uv) {\n    float finalD, d;\n\n    d = sdEqTriangle(uv * vec2(1.0, 0.9) - vec2(0.0, -0.1)) - length(uv) * 0.1 + 0.37;\n    finalD = d;\n\n    d = sdCircle(uv - vec2(0.0, -1.15), 0.9);\n    finalD = -min(d, -finalD);\n    \n    d = sdCircle(uv * vec2(0.9, 0.5) - vec2(0.0, -0.1), 0.1);\n    finalD = -min(d, -finalD);\n\n    float angle = -2.8;\n    mat2 rot = mat2(cos(angle), sin(angle),\n                   -sin(angle), cos(angle));\n    vec2 rotUv = uv * rot;\n    d = sdEqTriangle(rotUv * vec2(2.0, 0.5) - vec2(sin(-rotUv.y * 4.) * 0.5 - 0.25, -0.13)) + 0.53;\n    finalD = -min(d, -finalD);\n\n    angle = 1.015;\n    rot = mat2(cos(angle), sin(angle),\n              -sin(angle), cos(angle));\n    rotUv = uv * rot;\n    d = sdEqTriangle(rotUv * vec2(3.0, 0.5) - vec2(sin(-rotUv.y * 4.) * 0.5 - 0.50, -0.22)) + 0.53;\n    finalD = -min(d, -finalD);\n\n    return finalD;\n}\n\nvec3 getColor(vec2 uv) {\n    float d = sign(getDist(uv)) * 0.5 + 0.5;\n    vec3 col = mix(vec3(0.2), vec3(0.09, 0.57, 0.81), 1.0 - d);\n    \n    float dt = 0.01;\n    float shadow = sign(getDist(uv + vec2(-dt, dt))) * 0.5 + 0.5;\n    col *= 1.0 - (d - shadow) * 0.3;\n    return col;\n}\n\nvec3 aa(vec2 uv, float d) {\n    vec3 e = vec3(d, -d, 0.0);\n    vec3 total;\n    total += getColor(uv+e.yx) + getColor(uv+e.zx) + getColor(uv+e.xx);\n    total += getColor(uv+e.yz) + getColor(uv+e.zz) + getColor(uv+e.xz);\n    total += getColor(uv+e.yy) + getColor(uv+e.zy) + getColor(uv+e.xy);\n    \n    return total / 9.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec3 col = aa(uv, 0.001);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}