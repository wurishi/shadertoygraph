{"ver":"0.1","info":{"id":"ttKSRR","date":"1582084065","viewed":90,"name":"MandlebrotSet","username":"scvarious","description":"Another Mandlebrot set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandlebrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Set this to 0 to see the whole set.\n#define PLACE_TO_VIEW 2\n\n// Choose place to view. Add more!\n#if PLACE_TO_VIEW == 1\n    vec2 center = vec2(-0.72995, 0.18845);\n    float windowSize = 0.0005;\n#elif PLACE_TO_VIEW == 2\n    vec2 center = vec2(0.405, -0.222);\n    float windowSize = 0.065;\n#elif PLACE_TO_VIEW == 3\n    vec2 center = vec2(-1.39545, 0.0184);\n    float windowSize = 0.0005;\n#else\n    vec2 center = vec2(-1.2, 0.0);\n    float windowSize = 2.4;\n#endif\n   \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspectWarp = 3.0 / 2.0;\n    vec2 normFragCoord = fragCoord.xy / iResolution.xy;\n    \n    vec2 lowerLeftCorner = center - vec2(windowSize/2.0, windowSize/2.0);\n    vec2 widthHeight = vec2(aspectWarp * windowSize, windowSize);\n    \n    // Run Mandlebrot iterations\n    vec2 c = lowerLeftCorner + widthHeight * normFragCoord;    \n    vec2 z = vec2(0.0, 0.0);\n    float nMax = 35.0 / sqrt(windowSize); // ..just looks good\n    float n = 0.0;\n    while ( (z.x*z.x + z.y*z.y <= 4.0) && (n < nMax) )\n    {\n\t    z = vec2(z.x*z.x - z.y*z.y, 2.0 * z.x * z.y) + c;\n        n += 1.0;\n    }\n\n    // Choose fragment color\n    fragColor = vec4(0.0, 0.0, 0.0,1.0);\n    if (n < nMax)\n    {\n\t    float nn = n / nMax;\n        float r = clamp( 2.0 * nn - 1.0, 0.0, 1.0 );\n        float g = 1.0 - 2.0 * abs( nn - 0.5 );\n        float b = clamp( 2.0 * (1.0-nn) - 1.0, 0.0, 1.0);\n\t    fragColor = vec4(r, g, b, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}