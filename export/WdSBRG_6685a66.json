{"ver":"0.1","info":{"id":"WdSBRG","date":"1590228885","viewed":675,"name":"images as bar charts of RGB","username":"matthen","description":"images as bar charts of red, green, and blue.  underlying animation by Flyguy https://www.shadertoy.com/view/XsSfW1","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["rgb","pixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 rainbowDisk(vec2 o) {\n    // the underlying image\n    // source: https://www.shadertoy.com/view/XsSfW1 by Flyguy\n    o *= max(iResolution.x, iResolution.y);\n    o += .5 * iResolution.xy;\n    vec4 c;\n    vec2 r = iResolution.xy;\n    o = vec2(length(o -= r/2.) / r.y - .3, atan(o.y,o.x));    \n    vec4 s = c.yzwx = .1*cos(1.6*vec4(0,1,2,3) + iTime + o.y + sin(o.y) * sin(iTime)*2.),\n    f = min(o.x-s, c-o.x);\n    return dot(40.*(s-c), clamp(f*r.y, 0., 1.)) * (s-.1) - f;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    float t = iTime;\n    t = mod(t, 30.);\n    float res = max(iResolution.x, iResolution.y);\n    float maxScale = res / 9.;\n    // zoom in and out\n    float scale = mix(\n        4.,  maxScale,\n    \tsmoothstep(2., 15., t) - smoothstep(20., 30., t)\n    );\n    vec2 off = vec2(-.2, .1);\n    vec2 uv = scale * ((fragCoord - .5 * iResolution.xy) / res - off);\n    float pixel = scale / res;\n\n    vec2 pixeluv = fract(uv);\n    vec2 imguv = (floor(uv)) / maxScale + off;\n    \n    vec3 colImg = rainbowDisk(imguv).rgb;\n    // make the loop seemless\n    colImg = mix(\n        // just something to pseudo random\n        fract(vec3(\n            sin(300.123 * imguv.x + 300.123 * imguv.y),\n            sin(100.521 * imguv.y - 250.2 * imguv.x),\n            0.4)),\n\t\tcolImg, smoothstep(0., .1, t) - smoothstep(29.9, 30., t));\n    colImg = clamp(colImg, .1, .9);\n\n    vec3 col = vec3(0.);\n    col.r = smoothstep(\n        pixel, 0.,\n        max(\n            pixeluv.y - colImg.r,\n            pixeluv.x - 0.3333333 + pixel\n        )\n    );\n    col.g = smoothstep(\n        pixel, 0.,\n        max(\n            pixeluv.y - colImg.g,\n            max(pixeluv.x - 0.666666 + pixel,\n                0.333333 - pixeluv.x + pixel)\n        )\n    );\n    col.b = smoothstep(\n        pixel, 0.,\n        max(\n            pixeluv.y - colImg.b,\n            0.666 - pixeluv.x + pixel\n        )\n    );\n    col *= smoothstep(\n        0., 4. * pixel * smoothstep(10., 1., scale),\n        min(\n            min(pixeluv.y, 1. - pixeluv.y),\n            min(pixeluv.x, 1. - pixeluv.x)\n        )\n    );\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}