{"ver":"0.1","info":{"id":"dsVczK","date":"1696348475","viewed":130,"name":"Alt colour chromatic aboration","username":"AnastasiaB","description":"shader taht produces a chromatic aboration effect with colours other than your standard red green blue, with changable colours\nA generates a mask, B generates a new colour space, image moves that colour space and then remaps it back to image space","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["effect","glitchy","vhs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define a1 1.\n#define a2 1.\n#define a3 -1.\n#define b1 -1.\n#define b2 1.\n#define b3 1.\n#define c1 1.\n#define c2 -1.\n#define c3 1.\n#define rpos ivec2(5,5)\n#define gpos ivec2(-6,2)\n#define bpos ivec2(7,-3)\n\n//these must be the inverse of the shit in buffer b\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nivec2 a= ivec2(fragCoord);\n   vec4 newcol = vec4(0,0,0,1);\n   float oldr = texelFetch(iChannel0,a+rpos,0).r*texelFetch(iChannel1,a+rpos,0).r;\n   float oldg = texelFetch(iChannel0,a+gpos,0).g*texelFetch(iChannel1,a+gpos,0).r;\n   float oldb = texelFetch(iChannel0,a+bpos,0).b*texelFetch(iChannel1,a+bpos,0).r;\n   newcol.r = oldr*a1 + oldg*b1 + oldb*c1;\n   newcol.g = oldr*a2 + oldg*b2 + oldb*c2;\n   newcol.b = oldr*a3 + oldg*b3 + oldb*c3;\n   newcol.rgb = newcol.rgb + texelFetch(iChannel2, a,0).rgb*(1.-texelFetch(iChannel1,a,0).r);\n   //newcol.r  = texelFetch(iChannel0,ivec2(fragCoord),0).r*a1 + texelFetch(iChannel0,ivec2(fragCoord),0).g*b1 + texelFetch(iChannel0,ivec2(fragCoord),0).b*c1;\n   //newcol.g  = texelFetch(iChannel0,ivec2(fragCoord),0).r*a2 + texelFetch(iChannel0,ivec2(fragCoord),0).g*b2 + texelFetch(iChannel0,ivec2(fragCoord),0).b*c2;\n   //newcol.b  = texelFetch(iChannel0,ivec2(fragCoord),0).r*a3 + texelFetch(iChannel0,ivec2(fragCoord),0).g*b3 + texelFetch(iChannel0,ivec2(fragCoord),0).b*c3;\nfragColor = newcol;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define a1 0.5\n#define a2 0.\n#define a3 0.5\n#define b1 0.5\n#define b2 0.5\n#define b3 0.\n#define c1 0.\n#define c2 0.5\n#define c3 0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 BaseC = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    vec4 NewC = vec4(a1*BaseC.r +b1*BaseC.g+ c1*BaseC.b,a2*BaseC.r +b2*BaseC.g+ c2*BaseC.b, a3*BaseC.r +b3*BaseC.g+ c3*BaseC.b,1.0);\n    fragColor = NewC;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n //float BaseC = 0.;\n  float BaseC =  smoothstep(1.1,1.9, length(texelFetch(iChannel0, ivec2(fragCoord), 0).rgb));\n    fragColor = vec4(BaseC,1.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}