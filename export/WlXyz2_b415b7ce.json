{"ver":"0.1","info":{"id":"WlXyz2","date":"1592447408","viewed":295,"name":"fast Surface blur","username":"indere","description":"Surface blur","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["surfaceblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    if(fragCoord.x < mod(iTime * 150.0, iResolution.x) - 0.5)\n        fragColor = texture(iChannel0,uv);\n    else if(fragCoord.x > mod(iTime * 150.0, iResolution.x) + 0.5)\n        fragColor = texture(iChannel1,uv);\n    else \n        fragColor = vec4(1.0 ,0.0 ,0.0, 1.0);\n    \n    \n  \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//sbole border detection\n\nvoid makeKernel(out vec3 n[9], sampler2D tex, in vec2 uv){\n\tfloat offset_x = 1.0 / iResolution.x;\n    float offset_y = 1.0 / iResolution.y;\n    n[0] = texture(tex, uv + vec2(-offset_x, -offset_y)).rgb;\n    n[1] = texture(tex, uv + vec2(0.0, \t\t -offset_y)).rgb;\n    n[2] = texture(tex, uv + vec2(offset_x,  -offset_y)).rgb;\n    \n    n[3] = texture(tex, uv + vec2(-offset_x, 0.0)).rgb;\n    n[4] = texture(tex, uv + vec2(0.0, \t\t 0.0)).rgb;\n    n[5] = texture(tex, uv + vec2(offset_x,  0.0)).rgb;\n    \n    n[6] = texture(tex, uv + vec2(-offset_x, offset_y)).rgb;\n    n[7] = texture(tex, uv + vec2(0.0, \t\t offset_y)).rgb;\n    n[8] = texture(tex, uv + vec2(offset_x,  offset_y)).rgb;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 n[9];\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    makeKernel(n, iChannel0, uv);\n    \n    vec3 Gx = (n[2] + 2.*n[5] + n[8]) - (n[0] + 2.*n[3] + n[6]);\n    vec3 Gy = (n[0] + 2.*n[1] + n[2]) - (n[6] + 2.*n[7] + n[8]);\n    \n    vec3 sobleG = sqrt(Gx * Gx + Gy * Gy);\n    \n    fragColor = vec4(clamp(sobleG, 0.0, 1.0), 1.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//bulr \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 c = fastSurfaceBlur(iChannel0, iChannel1, uv, vec2(1.0 / iResolution.x, 0.0));\n    \n    fragColor = vec4(c, 1.0);\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//blur\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 blur_c = fastSurfaceBlur(iChannel0, iChannel1, uv, vec2(0.0, 1.0 / iResolution.y));\n    vec3 edge_c = texture(iChannel0,uv).rgb;\n    vec3 origin_c = texture(iChannel2,uv).rgb;\n    float edge = edge_c.r;\n    edge = pow(edge,2.0);\n    blur_c = mix(blur_c,origin_c,edge);\n    \n    fragColor = vec4(blur_c, 1.0);\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define kernelSize 20\nconst float weight[kernelSize] = float[]( 0.12238567125008,\n        0.11682268619326,\n        0.10158494451587,\n        0.080421414408401,\n        0.057903418374049,\n        0.037859927398416,\n        0.022435512532395,\n        0.012019024570926,\n        0.0058022877238952,\n        0.0025143246803546,\n        0.00097328697304049,\n        0.00033456739698267,\n        0.00010138405969172,\n        2.6836956977219e-05,\n        6.134161594793e-06,\n        1.192753643432e-06,\n        1.9341950974573e-07,\n        2.5449935492859e-08,\n        2.6102497941393e-09,\n        1.9576873456045e-10);\n\nvec3 fastSurfaceBlur(sampler2D sobleTex, sampler2D OriginTex, in vec2 uv, in vec2 sstep){\n\tvec3 sum_c = texture(OriginTex, uv).rgb * weight[0];\n    vec3 norm = vec3(weight[0]);\n    \n    float threshold = 1.0;\n    float soble_c = texture(sobleTex, uv).r;\n    vec3 para = vec3(threshold);\n    \n    for(int i = 1; i < kernelSize; i++){\n    \tvec2 uv1 = uv + float(i) * sstep;\n        float offset_c = texture(sobleTex, uv1).r;\n        para -= abs(offset_c - soble_c);\n        para.r = clamp(para.r, 0.0, 1.0);\n        para.g = clamp(para.g, 0.0, 1.0);\n        para.b = clamp(para.b, 0.0, 1.0);\n        float max_edge = max(para.r, max(para.g, para.b));\n        if(max_edge < 0.2) continue;\n        sum_c += texture(OriginTex, uv1).rgb * weight[i] * para;\n        norm += weight[i] * para; \n    }\n    \n     para = vec3(threshold);\n     for(int i = 1; i < kernelSize; i++){\n    \tvec2 uv1 = uv + float(i) * sstep;\n        float offset_c = texture(sobleTex, uv1).r;\n       \tpara -= abs(offset_c - soble_c);\n        para.r = clamp(para.r, 0.0, 1.0);\n        para.g = clamp(para.g, 0.0, 1.0);\n        para.b = clamp(para.b, 0.0, 1.0);\n        float max_edge = max(para.r, max(para.g, para.b));\n        if(max_edge < 0.2) continue;\n        sum_c += texture(OriginTex, uv1).rgb * weight[i] * para;\n        norm += weight[i] * para; \n    }\n    \n    return sum_c / norm;\n}","name":"Common","description":"","type":"common"}]}