{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define pi 3.14159265359\n\nmat2 get_rotation_matirx(float rot) {\n    return mat2(\n        cos(rot), -sin(rot), \n        sin(rot), cos(rot)\n    );\n}\n\nvec2 rotate_uv(vec2 uv, vec2 center, vec3 iResolution, mat2 rotation) {\n    uv -= center;\n    uv.x = uv.x * iResolution.x / iResolution.y;\n    uv = rotation * uv;    \n    uv.x = uv.x / iResolution.x * iResolution.y;\n    uv += center;\n    uv = abs(uv);\n    uv = step(1., uv) * 2. + sign(1.-uv) * uv;\n    return uv;\n}\n\n/////////////////////////////////////\n/////////////////////////////////////\n\n\n\nconst float rotation_count = 3.;\nconst float speed = 3.;\nconst float side = 0.19;\nconst vec2 move = vec2(-0.02, 0.1);\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float rotation_ratio = 2. * rotation_count * pi;\n    float time = mod(speed * iTime, 2.*pi) - pi;\n    time *= step(0., time);\n    \n    float rot = rotation_ratio * (-(cos(time)-1.)/2.);\n    mat2 rotation = get_rotation_matirx(rot);\n    \n    vec2 uv = fragCoord/iResolution.x;\n    vec2 center = side * round((uv + move)/side);\n    center -= move;\n    center.y = center.y * iResolution.x / iResolution.y;\n    \n    uv = fragCoord/iResolution.xy;\n    uv = rotate_uv(uv, center, iResolution, rotation);\n    \n    \n    bool change_scene = int((speed*iTime+pi/2.)/(2.*pi)) % 2 == 0;\n    vec3 col = (change_scene) \n        ? texture(iChannel0, uv).rgb \n        : texture(iChannel1, uv).rgb;\n    \n    //////////////////////////\n    ///    Spining blur    ///\n    //////////////////////////\n    \n    float numSteps = float(int(10. * (-(cos(2.*time)-1.)/2.)));\n    float sigma = 0.01;\n    for (float i=1.; i<numSteps; i++)\n    {\n        rotation = get_rotation_matirx(i*sigma);\n        uv = rotate_uv(uv, center, iResolution, rotation);\n        col += (change_scene) \n            ? texture(iChannel0, uv).rgb \n            : texture(iChannel1, uv).rgb;\n    }\n    if (numSteps != 0.)\n        col /= numSteps;\n    \n    //////////////////////////\n    //////////////////////////\n    \n    \n    fragColor = vec4(col,1.0);\n}\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"wdKyDt","date":"1734427232","viewed":43,"name":"Transition.TileSpin.No.1","username":"avartation","description":"zscxlkn","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["dackjnad"],"hasliked":0,"parentid":"","parentname":""}}