{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PI2 3.1415927410125732421875*2.0\n#define speed 8.0\n#define trunc(a) float(int(a))\n\nvec2 RandomTune(float time)\n{\n    float ts = time*speed;\n    float decay = 1.0-mod(ts,1.0);\n    ts = trunc(ts);\n    \n    float note = trunc(\n        sin(0.25*ts)\n        *4.0+\n        cos(0.375*ts)\n        *4.0\n            );\n    \n    // Filter black keys\n    float nt = mod(note,12.0);\n    if (nt<5.0)\n      nt -= 1.0;\n    if (mod(nt,2.0)==0.0)\n      return vec2(0.0,-1234.0);\n    \n    return vec2(note,decay*1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x = uv.x*24.0-12.0;\n    uv.y *= 3.0;\n        \n\tfragColor = vec4(\n        1.0-distance(uv,RandomTune(iTime)),\n        1.0-distance(uv,RandomTune(iTime-1.0)),\n        0.0,1.0);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"#define PI2 6.28318530718\n#define speed 8.0\n#define trunc(a) float(int(a))\n\nvec2 RandomTune(float time)\n{\n    float ts = time*speed;\n    float decay = 1.0-mod(ts,1.0);\n    ts = trunc(ts);\n    \n    float note = trunc(\n        sin(0.25*ts)\n        *4.0+\n        cos(0.375*ts)\n        *4.0\n            );\n    \n    // Filter black keys\n    float nt = mod(note,12.0);\n    if (nt<5.0)\n      nt -= 1.0;\n    if (mod(nt,2.0)==0.0)\n      return vec2(0.0);\n    \n        \n    float freq = 440.0*pow(2.0,note/12.0);\n       \n    float wav = sin(freq*PI2*time+  // base freq\n                    PI2*sin(time/PI2) //FM modulation amount\n                    *sin(3.0*freq*PI2*time)// FM Modulation\n                   )*decay; //Fade nod\n    return vec2(wav*sin(time),wav*cos(time));\n}\n\nvec2 mainSound( in int samp,float time)\n{\n  return 0.25*(\n            RandomTune(time)+ \n            RandomTune(time-0.040).yx*0.5+ \n            RandomTune(time-1.000)+\n            RandomTune(time-1.040).yx*0.5);\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sXSWf","date":"1407182835","viewed":446,"name":"Calipso time","username":"Andre","description":"Trying to create music from a formula","likes":10,"published":1,"flags":8,"usePreview":0,"tags":["procedural","sound","music","fmsynth"],"hasliked":0,"parentid":"","parentname":""}}