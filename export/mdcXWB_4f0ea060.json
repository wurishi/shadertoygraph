{"ver":"0.1","info":{"id":"mdcXWB","date":"1680341977","viewed":81,"name":"Noisy texture","username":"marvpaul","description":"License: CC0\nResult after playing around with warped FBMs for a few hours\nBased on: https://iquilezles.org/articles/warp/warp.htm\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","fbm","warp"],"hasliked":0,"parentid":"td2yzR","parentname":"Icecream warped FBM"},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License: CC0\n//   Result after playing around with warped FBMs for a few hours\n//   Based on: https://iquilezles.org/articles/warp\n\n#define PI    3.141592654\n#define TAU   (2.0*PI)\n#define TTIME (iTime*TAU)\n\nconst mat2 frot = mat2(0.80, 0.60, -0.60, 0.80);\n\nvoid rot(inout vec2 p, float a) {\n  float c = cos(a);\n  float s = sin(a);\n  p = vec2(c*p.x + s*p.y, -s*p.x + c*p.y);\n}\n\nfloat noise(vec2 p) {\n  float a = sin(p.x);\n  float b = sin(p.y);\n  float c = 0.5 + 0.5*cos(p.x + p.y);\n  float d = mix(a, b, c);\n  return d;\n}\n\nfloat fbm(vec2 p) {    \n  float f = 0.0;\n  float a = 1.0;\n  float s = 0.0;\n  float m = 2.0;\n  for (int x = 0; x < 4; ++x) {\n    f += a*noise(p); p = frot*p*m;\n    m += 0.01;\n    s += a;\n    a *= 0.5;\n  }\n  return f/s;\n}\n\nvoid warp(vec2 p, out vec2 v, out vec2 w) {\n\n  vec2 vx = vec2(0.0, 0.0);\n  vec2 vy = vec2(3.2, 1.3);\n\n  vec2 wx = vec2(1.7, 9.2);\n  vec2 wy = vec2(8.3, 2.8);\n\n  rot(vx, TTIME/1000.0);\n  rot(vy, TTIME/900.0);\n\n  rot(wx, TTIME/800.0);\n  rot(wy, TTIME/700.0);\n\n  v = vec2(fbm(p + vx), fbm(p + vy));\n  \n  \n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/iResolution.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= iResolution.x/iResolution.y;\n\n  p += TTIME*0.01;\n  p *= 2.;\n  vec3 col = vec3(1.0);\n \n  vec2 v;\n  vec2 w;\n \n  warp(p, v, w);\n  fragColor = texture(iChannel0, v);\n}\n","name":"Image","description":"","type":"image"}]}