{"ver":"0.1","info":{"id":"XtK3zz","date":"1472807495","viewed":4754,"name":"Rhythm Doctor wave final","username":"giacomo","description":"Rhythm Doctor dynamic wave. This is part of a tutorial that you can find here:\nEnglish: http://kyrie.pe/rhythm_doctor_wave/\nEspañol: http://kyrie.pe/rhythm_doctor_wave/index_esp.html","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["rhythm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Custom wave curve for Rhythm Doctor\n// Play demo on: rhythmdr.com\n\n// This is part of a tutorial that you can find here:\n// English: http://kyrie.pe/rhythm_doctor_wave/\n// Español: http://kyrie.pe/rhythm_doctor_wave/index_esp.html\n\n// Giacomo Preciado\n\n\nfloat triangle(float x)\n{\n    // Triangle wave\n    return abs(mod(x * 0.2, 2.0) - 1.0) - 0.5;\n}\n\nfloat truncSine(float x)\n{\n    // Half sine wave\n    const float height = 40.0;\n    const float sineWidth = 40.0;\n    const float pi = 3.1415;\n    \n    if(x < 0.0 || x > sineWidth) \n        return 0.0;\n    else\n    \treturn sin(x * pi/sineWidth) * height;\n}\n\nfloat rdWave(float x, float t)\n{\n    return truncSine(x - t) * triangle(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float yOffset = 140.0;\n    \n\tfloat x = floor(fragCoord.x);\n    float y = floor(fragCoord.y) - yOffset;\n\tfloat t = iTime * 40.0;\n    \n    t = mod(t, 500.0); // loops animation\n\n\tbool center = rdWave(x      , t) >  y;\n    bool right  = rdWave(x - 1.0, t) >  y; \n    bool left   = rdWave(x + 1.0, t) >  y; \n    bool up     = rdWave(x      , t) >  y + 1.0;\n    bool down   = rdWave(x      , t) >  y - 1.0;\n\n    if(center && !(right && left && up && down))\n        fragColor = vec4(0.0, 1.0, 0.0, 1.0);\n    else\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0); \n}\n\n\n","name":"Image","description":"","type":"image"}]}