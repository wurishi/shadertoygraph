{"ver":"0.1","info":{"id":"Nl2GWy","date":"1624629631","viewed":259,"name":"Spherical Shell with Slits (3)","username":"FabriceNeyret2","description":"variant of [url]https://shadertoy.com/view/Nt2GWy[/url]\nantialiased + ray-traced + golfed variant of \"Spherical Shell with Slits\" by Kamoshika. [url]https://shadertoy.com/view/Nt2GWG[/url]","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sphere","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/Nt2GWy\n// antialiased + ray-traced + golfed variant of \"Spherical Shell with Slits\" by Kamoshika. https://shadertoy.com/view/Nt2GWG\n\n\n                                      // distance to strips + AA blending\n#define S(s) P = vec3(0, 0, 5) + ( s sqrt(r) - b ) * D,                    \\\n             a = acos(P.y/2.) - sign(P.z)* acos(P.x/length(P.zx)) - iTime, \\\n             d = sin(a/.1),   d =  1.- d/fwidth(d),                        \\\n             O += ( clamp(1.+ s abs(d-1.),0.,1.) -O ) * clamp( d, 0.,1. )\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec3  P = iResolution,\n          D =  normalize( vec3( ( u+u - P.xy ) / P.y, -2 ) );\n    float b = 5.*D.z, r = b*b-21., a,d;\n    O-=O;\n    r > 0. ? S( ), // *(1.+P.z/3.),   // back sphere  \n             S(-)                     // front sphere\n           : O;\n}","name":"Image","description":"","type":"image"}]}