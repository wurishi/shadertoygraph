{"ver":"0.1","info":{"id":"DtjcWV","date":"1692366733","viewed":13,"name":"cena","username":"ViniciusNatal","description":"cena","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cena"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void DrawSquare(in vec3 color, in vec2 uv, out vec4 result, in vec2 pos, vec2 size)\n{\n float finalPosX = pos.x / iResolution.x;\n float finalPosY = pos.y / iResolution.y;\n \n float finalSizeX = size.x / iResolution.x;\n float finalSizeY = size.y / iResolution.y;\n \n float movment = (cos(iTime + uv.y*2.0) + 3.0)*0.2;\n \n\n if (uv.x > finalPosX - finalSizeX && uv.x < finalPosX + finalSizeX && \n     uv.y > finalPosY - finalSizeY && uv.y < finalPosY + finalSizeY)\n {\n  result = vec4(color,1);\n }\n \n}\n\nvoid DrawCircle(in vec3 color, in vec2 uv, out vec4 result, in vec2 pos,in float size)\n{\n vec2 posn = pos/iResolution.xy;\n float distanceFromCenter = distance(uv, posn);\n if (size>distanceFromCenter)\n {\n  result = vec4(color,1);\n }\n}\nvoid DrawTriangle(in vec3 color, in vec2 uv, out vec4 result, in vec2 pos,in float size){\n    \n}\nvoid DrawScene(in vec2 uv, out vec4 scene)\n{   \n   vec3 carColor = vec3(1,0,0);\n   vec3 wheelColor = vec3(0,1,0); \n   vec3 lightPoleColor = vec3(0,0,0);\n   vec2 lightPolePos = vec2(400, 112);\n   float speed = 5.0;\n   vec2 poleMovment = vec2(uv.x + speed *fract(iTime) -1.0, uv.y);\n   vec2 carMovment = vec2(uv.x, uv.y + .01 * sin(iTime * 8.0));\n   \n   //drawing lightpost\n     DrawSquare(lightPoleColor, poleMovment, scene, lightPolePos, vec2(10, 80));\n     DrawCircle(vec3(1,1,0), poleMovment, scene, lightPolePos + vec2(0,100), .05);\n     \n     DrawSquare(lightPoleColor, poleMovment, scene, lightPolePos + vec2(800, 0), vec2(10, 80));\n     DrawCircle(vec3(1,1,0), poleMovment, scene, lightPolePos + vec2(800,100), .05);\n     \n     DrawSquare(lightPoleColor, poleMovment, scene, lightPolePos+ vec2(1600, 0), vec2(10, 80));\n     DrawCircle(vec3(1,1,0), poleMovment, scene, lightPolePos + vec2(1600,100), .05);\n   \n   //drawing car\n   DrawSquare(carColor, carMovment, scene, vec2 (200, 80), vec2(80, 20));\n   DrawSquare(carColor, carMovment, scene, vec2 (200, 120), vec2(40, 20));\n   DrawCircle(wheelColor, carMovment, scene, vec2 (150, 50), .03);\n   DrawCircle(wheelColor, carMovment, scene, vec2 (260, 50), .03);  \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    fragColor = vec4(col, 1);\n      \n    //DrawCircle(col, uv, fragColor, iMouse.xy, 0.05);\n    //DrawSquare(col, uv, fragColor, vec2(iMouse.x, iMouse.y), vec2(17,70));\n    DrawScene(uv, fragColor);\n}","name":"Image","description":"","type":"image"}]}