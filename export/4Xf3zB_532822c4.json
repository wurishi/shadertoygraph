{"ver":"0.1","info":{"id":"4Xf3zB","date":"1708302097","viewed":70,"name":"Daniel Dalzell engines lab 3","username":"imjusttoasty","description":"I could not really figure out how to retract the circle after a certain point, or match the same color as yours","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["danieldalzell"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette ( float t ) \n{\n    vec3 a = vec3(0.370, 0.500, 0.550);\n    vec3 b = vec3(0.500, 0.500, 0.400);\n    vec3 c = vec3(0.500, 0.500, 0.333);\n    vec3 d = vec3(0.000, 0.500, 0.667);\n    \n    return a + b*cos(5.467*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    // 0 towards centre, 1 towards edges\n    float d = length(uv);\n    \n    // remap from [0, 1] to [-0.5, 0.5] (makes black centre larger)\n    d -= 0.5;\n    d = sin(d - iTime);\n    \n    // [-0.5, 0.5] -> [0.0, 0.5]\n    d = abs(d);\n    \n    // Cut-off everything with a distance less than 0.1 (makes a solid ring)\n    //d = step(0.1, d);\n    \n    // Same as above, but a smooth blend instead of a cutoff\n    d = smoothstep(0.01, 0.2, d);\n    \n    vec3 color = palette(d + iTime);\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}