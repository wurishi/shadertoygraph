{"ver":"0.1","info":{"id":"fdcyz4","date":"1653050155","viewed":159,"name":"Cheap UV Spherize approx","username":"OctopusX","description":"This is an approximation, not a fair spherization. Because 'a' is not really a circular/spherical curve.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["warp","spherize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DoAnimate\n#define AnimateSpeed 0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n    \n    uv = uv * 2.0 - 1.0; // to [-1:1] range\n    uv.x *= aspect;\n    \n    float a = 1.0 - length(uv);\n    \n#ifdef DoAnimate\n    float t = sin(iTime * AnimateSpeed) *0.5 + 0.5;\n    float spherizeAmount = mix(0.5, 0.9, t);\n#else\n    float spherizeAmount = 0.7;\n#endif\n    \n    //do spherize approximation\n    a = pow(a, spherizeAmount);\n    uv *= a;\n    \n    vec4 col = texture(iChannel0, uv);\n    fragColor = vec4(col.rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}