{"ver":"0.1","info":{"id":"MlSGzd","date":"1431384474","viewed":695,"name":"Music in my blood","username":"pixelzealot","description":"Playing around with noise and voronoi. Rough thinking/inspiration was blood cells flowing and reacting to a heart beat. Thanks as always to iq for lots of great sources of inspiration and code.","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","metaballs","reactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Enable debug and click in the window to see all the control points being considered\n#define DEBUG 0\n\n// Does what it says on the tin, increase to zoom out\n#define ZOOM 12.0\n\nvec2 hash( vec2 p ) \n{ \n    return texture( iChannel0, (p+0.5)/256.0, -100.0 ).xy;\n}\n\nmat2 rotate2D(float angle)\n{\n   \tfloat c = cos(angle);\n    float s = sin(angle);\n    return mat2(vec2(c, s), vec2(-s, c));\n}\n\nfloat line(vec2 p, vec2 a, vec2 b)\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\t\n\treturn length( pa - ba*h );\n}\n\n// Thanks to iq for the voronoi shader (https://www.shadertoy.com/view/MslGD8) some great stuff in there.\nvec3 voronoi(in vec2 uv, inout vec3 col)\n{\n    vec2 x = uv + vec2(1.0, 0.0) * iTime;\n    \n    vec2 n = floor(x);\n    vec2 f = x - n;\n\n\tfloat md = ZOOM;\n    float td = 0.0;\n    \n    #if DEBUG\n\tfloat aspectAdjust = max(iResolution.x, iResolution.y);\n    vec2 click = iMouse.xy / aspectAdjust * ZOOM;\n    click += vec2(1.0, 0.0) * iTime;\n    #endif\n    \n    mat2 rot = rotate2D(iTime);\n    \n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2  g = vec2( float(i), float(j) );\n        vec2 h = hash(n + g);\n        vec2 lo = h - 0.5;\n        lo = rot * lo;\n        \n        vec2  o = vec2(0.5) + lo;\n      \tvec2  r = g - f + o;\n\t\tfloat d = dot( r, r );\n        float potential = 1.0 / d;\n        \n        if (d < md)\n            md = d;\n        \n        td += potential;\n        \n        #if DEBUG\n        {\n            vec2 n = floor(click);\n            vec2 f = click - n;\n            \n\t\t\tvec2 h = hash(n + g);\n        \tvec2 lo = h - 0.5;\n        \tlo = rot * lo;      \n            \n\t\t\tvec2  o = vec2(0.5) + lo;\n      \t\tvec2  r = g - f + o;            \n            float d = dot( r, r );\n            \n            float t = line(x, click, n + g + o);\n            \n            vec3 lineCol = vec3(1.0/d);\n            col = mix(col, lineCol, 1.0-smoothstep(0.0, 25.0/aspectAdjust, abs(t)));\n        }\n        #endif\n    }\n    return vec3(td, sqrt(md), hash(n));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy/max(iResolution.x,iResolution.y);\n    vec3 col = vec3(0.0);\n\n    float n = texture(iChannel1, vec2(0.00, 0.25)).x;\n    float sizeAdjust = n * 4.0;\n    float cellAdjust = 0.5 + n*0.5;\n    \n   \tvec3 c = voronoi(p * ZOOM, col);\n    \n    vec3 cellCol = vec3(\n        sin(c.y * c.y * 8.0 * cellAdjust) * 0.5 + 0.5, \n        0.0, \n        0.0);\n    \n    cellCol = mix(vec3(0.5, 0.0, 0.0), cellCol, (c.x > 14.0 + sizeAdjust) ? 1.0 : 0.0);\n    \n    // computer voronoi pattern\n    col += mix(\n        cellCol,\n        vec3(0.1, 0.1, 0.1), \n        1.0 - smoothstep(14.0 + sizeAdjust, 22.0 + sizeAdjust, c.x));\n\n    fragColor = vec4(col, 1.0);\n}","name":"","description":"","type":"image"}]}