{"ver":"0.1","info":{"id":"XtXBW8","date":"1511668950","viewed":213,"name":"[WST1] Wroclaw - my city","username":"hania_gregorowicz","description":"It's my first project, I made it for a Wroclaw Shader Competition. :)","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["wroclawwst1firstproject"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Title: \"Wroclaw - my city\", Author: Hanna Gregorowicz\n// This shader is prepared for the first Wroclaw Shader Competition \n// organized by Faculty of Physics and Astronomy, Khronos Chapter and SIggraph Chapter from Wroclaw\n\n\nfloat time = 0.0;\nvec2 pos = vec2(0);\nvec2 uv  = vec2(0);\nvec2 tp  = vec2(0);  \n\t\n\n#define FONT_SIZE 0.18\n#define SIN_FREQ 1.15\n#define SIN_SPEED 5.0\n#define FONT_SPACE 0.45\n\n\n#define S(a) c+=char(float(a)); tp.x-=FONT_SPACE;\n\n#define _note  S(10);\n#define _star  S(28);\n#define _smily S(29);\n#define _    S(32);\n#define _exc S(33);\n#define _add S(43);\n#define _dot S(46);\n\n#define _A S(65);\n#define _B S(66);\n#define _C S(67);\n#define _D S(68);\n#define _E S(69);\n#define _F S(70);\n#define _G S(71);\n#define _H S(72);\n#define _I S(73);\n#define _J S(74);\n#define _K S(75);\n#define _L S(76);\n#define _M S(77);\n#define _N S(78);\n#define _O S(79);\n#define _P S(80);\n#define _Q S(81);\n#define _R S(82);\n#define _S S(83);\n#define _T S(84);\n#define _U S(85);\n#define _V S(86);\n#define _W S(87);\n#define _X S(88);\n#define _Y S(89);\n#define _Z S(90);\n\n#define _a S(97);\n#define _b S(98);\n#define _c S(99);\n#define _d S(100);\n#define _e S(101);\n#define _f S(102);\n#define _g S(103);\n#define _h S(104);\n#define _i S(105);\n#define _j S(106);\n#define _k S(107);\n#define _l S(108);\n#define _m S(109);\n#define _n S(110);\n#define _o S(111);\n#define _p S(112);\n#define _q S(113);\n#define _r S(114);\n#define _s S(115);\n#define _t S(116);\n#define _u S(117);\n#define _v S(118);\n#define _w S(119);\n#define _x S(120);\n#define _y S(121);\n#define _z S(122);\n\n#define _0 S(48);\n#define _1 S(49);\n#define _2 S(50);\n#define _3 S(51);\n#define _4 S(52);\n#define _5 S(53);\n#define _6 S(54);\n#define _7 S(55);\n#define _8 S(56);\n#define _9 S(57);\n   \nfloat char(float ch)\n{\n    float i = 16.0;\n\n   \tvec4 f = texture(iChannel0,clamp(tp,0.,1.)/16.+fract(floor(vec2(ch,15.999-float(ch)/16.))/16.0));\n\n    return f.x;   // 2d \n\n}            \n\n\nvec4 ScrollText1()\n{\n  \ttp = uv / FONT_SIZE+1.0;  // set font size\n\n   \ttp.x = 1.0*(tp.x +3.5);\n\n    float SIN_AMP = 1.0/ iResolution.y  *iTime*1.5;\n  \ttp.y = tp.y+SIN_AMP*sin(tp.x*SIN_FREQ+iTime*SIN_SPEED); \n\n\n  \tfloat c = 0.0;\n     _ _ _ _ _ _ _W _r _o _c _l _a _w\n\n \tvec3 col = vec3(1.0,0.0,0.0);\n  \treturn c * vec4(col,1.0);\n}\n\nvec4 ScrollText2()\n{\n  \ttp = uv / FONT_SIZE+1.0;  // set font size\n\n   \ttp.x = 1.0*(tp.x +3.5);\n\n    float SIN_AMP = 1.0/ iResolution.y  *iTime*1.5;\n  \ttp.y = tp.y+SIN_AMP*sin(tp.x*SIN_FREQ+iTime*SIN_SPEED); \n\n\n  \tfloat c = 0.0;\n    \n     _ _ _ _ _ _ _ _ _M _y \n        \n \tvec3 col = vec3(1.0,0.0,0.0);\n  \treturn c * vec4(col,1.0);\n}\n   \nvec4 ScrollText3()\n{\n  \ttp = uv / FONT_SIZE+1.0;  // set font size\n\n  \ttp.x = 1.0*(tp.x +3.5);\n\n    float SIN_AMP = 1.0/ iResolution.y  *iTime*1.5;\n  \ttp.y = tp.y+SIN_AMP*sin(tp.x*SIN_FREQ+iTime*SIN_SPEED); \n\n\n  \tfloat c = 0.0;\n    \n     _ _ _ _ _ _ _ _C _i _t _y\n         \n \tvec3 col = vec3(1.0,0.0,0.0);\n  \treturn c * vec4(col,1.0);\n}\n\nvec4 ScrollText4()\n{\n  \ttp = uv / FONT_SIZE+1.0;  // set font size\n\n   \ttp.x = 1.0*(tp.x +3.5);\n\n    float SIN_AMP = 1.0/ iResolution.y  *iTime*1.5;\n  \ttp.y = tp.y+SIN_AMP*sin(tp.x*SIN_FREQ+iTime*SIN_SPEED); \n\n\n  \tfloat c = 0.0;\n    \n     _ _ _ _ _ _ _T _h _a _n _k _s \n        \n \tvec3 col = vec3(1.0,0.0,0.0);\n  \treturn c * vec4(col,1.0);\n}\n\nvec4 ScrollText5()\n{\n  \ttp = uv / FONT_SIZE+1.0;  // set font size\n\n   \ttp.x = 1.0*(tp.x +3.5);\n\n    float SIN_AMP = 1.0/ iResolution.y  *iTime*1.5;\n  \ttp.y = tp.y+SIN_AMP*sin(tp.x*SIN_FREQ+iTime*SIN_SPEED); \n\n\n  \tfloat c = 0.0;\n    \n     _ _ _ _f _o _r _ _w _a _t _c _h _i _n _g\n        \n \tvec3 col = vec3(1.0,0.0,0.0);\n  \treturn c * vec4(col,1.0);\n}\n\n\n   void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 xv = fragCoord.xy / iResolution.xy;\n  \tpos = fragCoord.xy / iResolution.xy; \n    vec2 q = fragCoord.xy / iResolution.xy;\n    \n    if (iTime<4.5)\n    {    \n        uv = pos -0.5;    \n        fragColor  = ScrollText1();\n    }\n    if (iTime>= 4.5 && iTime <9.0)\n    {\n        uv = pos -0.5;    \n        fragColor  = ScrollText2();\n    }\n\tif (iTime>=9.0 && iTime <13.5)\n    {\n        uv = pos -0.5;    \n        fragColor  = ScrollText3();\n    }\n    if (iTime >=13.5 && iTime < 18.0)\n    { \t\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*0.65;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=18.0 && iTime < 20.0)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=20.0 && iTime < 22.2)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.75;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=22.2 && iTime < 22.8)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=22.8 && iTime < 23.4)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n   \t\td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=23.4 && iTime < 24.0)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n   \t \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=24.0 && iTime < 24.6)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=24.6 && iTime < 25.2)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=25.2 && iTime < 25.7)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=25.7 && iTime < 26.3)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=26.3 && iTime < 26.9)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=26.9 && iTime < 27.7)\n    {\n        vec2 p = (-1.0+1.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.75;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=27.7 && iTime < 28.4)\n    {\n        vec2 p = (-1.0+0.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.75;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=28.4 && iTime < 29.1)\n    {\n        vec2 p = (-1.0+1.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.75;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=29.1 && iTime < 30.4)\n    {\n        vec2 p = (-1.0+0.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.75;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=30.4 && iTime < 31.0)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d*0.8,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=31.0 && iTime < 31.5)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n   \t\td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d*0.8,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=31.5 && iTime < 32.1)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n   \t \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d*0.8,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=32.1 && iTime < 32.7)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d*0.8,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=32.7 && iTime < 33.3)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d*0.8,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=33.3 && iTime < 33.9)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d*0.8,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=33.9 && iTime < 34.5)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d*0.8,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=34.5 && iTime < 35.2)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*1.15;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d*0.8,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=35.2 && iTime < 40.0)\n    { \t\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n        float d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.7,d);\n        float phi = atan(p.y/p.x)+iTime*0.65;\n        d+=sin(phi*10.0);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    \n    //Tu konczy sie 1 czesc muzyki\n    \n    if (iTime >=40.0 && iTime < 40.6)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d*0.1,d*0.9,d*0.1);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=40.8 && iTime < 41.0)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d*0.1,d*0.9,d*0.1);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=41.0 && iTime < 41.4)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.3,0.33,d);\n    \tvec3 col = vec3(d*0.1,d*0.9,d*0.1);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=41.4 && iTime < 41.8)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d*0.1,d*0.9,d*0.1);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=41.8 && iTime < 42.3)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.55,d);\n    \tvec3 col = vec3(d*0.1,d*0.9,d*0.1);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=42.3 && iTime < 43.1)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.6,0.66,d);\n    \tvec3 col = vec3(d*0.1,d*0.9,d*0.1);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=43.1 && iTime < 44.2)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.7,0.77,d);\n    \tvec3 col = vec3(d*0.1,d*0.9,d*0.1);\n    \tfragColor = vec4( col, 1.0);\n    }\n    //\n    if (iTime >=44.2 && iTime < 44.8)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=45.0 && iTime < 45.2)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=45.2 && iTime < 45.6)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.3,0.33,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=45.6 && iTime < 46.0)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=46.0 && iTime < 46.5)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.55,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=46.5 && iTime < 47.0)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.6,0.66,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=47.0 && iTime < 47.4)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.55,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=47.4 && iTime < 47.9)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.6,0.66,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=47.9 && iTime < 48.8)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.7,0.77,d);\n    \tvec3 col = vec3(d,d,d*0.3);\n    \tfragColor = vec4( col, 1.0);\n    }\n    //\n    if (iTime >=48.8 && iTime < 49.5)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=49.7 && iTime < 49.8)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=49.8 && iTime < 50.2)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.3,0.33,d);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=50.2 && iTime < 50.6)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=50.6 && iTime < 51.1)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.55,d);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=51.1 && iTime < 51.9)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.6,0.66,d);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=51.9 && iTime < 53.0)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.7,0.77,d);\n    \tvec3 col = vec3(d,d*0.1,d*0.2);\n    \tfragColor = vec4( col, 1.0);\n    }\n    //\n    if (iTime >=53.0 && iTime < 53.6)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=53.8 && iTime < 54.0)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=54.0 && iTime < 54.4)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.3,0.33,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=54.4 && iTime < 54.8)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=54.8 && iTime < 55.3)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.55,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=55.3 && iTime < 55.8)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.6,0.66,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=55.8 && iTime < 56.2)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.55,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=56.2 && iTime < 56.7)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.6,0.66,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=56.7 && iTime < 57.6)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.7,0.77,d);\n    \tvec3 col = vec3(d*0.2,d*0.1,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    //\n    if (iTime >=57.6 && iTime < 57.85)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.2,0.22,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=57.85 && iTime < 58.1)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.3,0.33,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=58.1 && iTime < 58.35)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=58.35 && iTime < 58.6)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.55,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=58.6 && iTime < 58.85)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.6,0.66,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=58.85 && iTime < 59.1)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.7,0.77,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=59.1 && iTime < 59.35)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.8,0.88,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=59.35 && iTime < 59.60)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.9,0.99,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    //\n    if (iTime >=59.6 && iTime < 59.85)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.8,0.88,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=59.85 && iTime < 60.1)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.7,0.77,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=60.1 && iTime < 60.35)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.6,0.66,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=60.35 && iTime < 60.6)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.5,0.55,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=60.6 && iTime < 60.85)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.4,0.44,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=60.85 && iTime < 61.1)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.3,0.33,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=61.1 && iTime < 61.35)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.2,0.22,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime >=61.35 && iTime < 61.60)\n    {\n        vec2 p = (-1.0+2.0*q)*vec2(iResolution.x/iResolution.y,1.0);\n    \tfloat d = length(p - vec2(0.0,0.0));\n    \td = 1.0-d;\n    \td=smoothstep(0.1,0.11,d);\n    \tvec3 col = vec3(d,d,d);\n    \tfragColor = vec4( col, 1.0);\n    }\n    if (iTime>=61.7 && iTime <66.0)\n    {    \n        uv = pos -0.5;    \n        fragColor  = ScrollText4();\n    }\n    if (iTime>=66.0)\n    {\n        uv = pos -0.5;    \n        fragColor  = ScrollText5();\n    }\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp, float time )\n{\n  time = mod( time, 39.5 );\n\n  // do 3 echo/reverb bounces\n  vec2 tot = vec2(0.0);\n  for( int i=0; i<2; i++ )\n  {\n    float h = float(i);\n\n    // compute note\t\n    float t = (time - 0.57*h)/0.18;\n    float n = 0.0, b = 0.0, x = 0.0;\n    #define D(u,v)   b+=float(u);if(t>b){x=b;n=float(v);}\n    D(1,50)D(4.5,50)D(1.50,53)D(2.1,50)D( 2.5,48)D( 1.7,46)D(5.9,45)\n    D(5.9,50)D(4.5,50)D(1.50,53)D(2.1,50)D( 2.5,48)D( 1.65,46)D( 2.35,48)D( 2.25,46)D(1.85,45)\n    D(5.9,50)D(4.5,50)D(1.50,53)D(2.1,50)D( 2.5,48)D( 1.7,46)D(5.9,45)\n    D(5.9,50)D(4.5,50)D(1.50,53)D(2.1,50)D( 2.5,48)D( 1.65,46)D( 2.35,48)D( 2.25,46)D(1.85,45)\n        \n    D(5.9,43) D(1.5,43) D(1.5,43) D(1.5,43) D(1.5,43) D(1.5,43) D(1.5,43) D(1.5,43)\n    D(1.5,45) D(1.5,45) D(1.5,45) D(1.5,45) D(1.5,45) D(1.5,45) D(1.5,45) D(1.5,45)\n        \n    D(1.5,55)D(4.5,55)D(1.50,58)D(2.1,55)D( 2.5,53)D( 1.7,51)D(5.9,50)\n    D(5.9,55)D(4.5,55)D(1.50,58)D(2.1,55)D( 2.5,53)D( 1.65,51)D( 2.35,53)D( 2.25,51)D(1.85,50)\n    D(5.9,55)D(4.5,55)D(1.50,58)D(2.1,55)D( 2.5,53)D( 1.7,51)D(5.9,50)\n    D(5.9,55)D(4.5,55)D(1.50,58)D(2.1,55)D( 2.5,53)D( 1.65,51)D( 2.35,53)D( 2.25,51)D(1.85,50)\n   \n    // calc frequency and time for note\t  \n    float noteFreq = 440.0*pow( 2.0, (n-69.0)/12.0 );\n    float noteTime = 0.18*(t-x);\n\t\n    // compute instrument\t\n      float y  = 0.5*sin(6.2831*1.00*noteFreq*noteTime)*exp(-0.0015*1.0*noteFreq*noteTime);\n\t        y += 0.6*sin(5.2831*2.01*noteFreq*noteTime)*exp(-0.0015*2.0*noteFreq*noteTime);\n\t        y += 0.4*sin(6.2831*4.01*noteFreq*noteTime)*exp(-0.0015*4.0*noteFreq*noteTime);\n            y += 0.1*y*y*y;\t  \n            y *= 0.9 + 0.1*cos(40.0*noteTime);\n\t        y *= smoothstep(0.0,0.03,noteTime);\n          \n    // accumulate echo\t  \n    tot += y * vec2(0.5+0.2*h,0.5-0.2*h) * (1.0-sqrt(h)*0.85);\n      \n  }\n\t\n  return tot;\n}\n","name":"Sound","description":"","type":"sound"}]}