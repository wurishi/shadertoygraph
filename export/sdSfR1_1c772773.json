{"ver":"0.1","info":{"id":"sdSfR1","date":"1645789003","viewed":80,"name":"Sine wave mbdev","username":"mbdev","description":"Imitate The Book of Shaders","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.141592654\n#define thickness 1. / iResolution.x / 0.2\n\nfloat drawLine(vec2 p1, vec2 p2, vec2 uv)\n{\n    float d = distance(p1, p2);\n    float duv = distance(p1, uv);\n    float r = 1.-floor(1. - thickness * 0.5 + distance(mix(p1, p2, clamp(duv/d, 0., 1.)),  uv));\n    return r;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy-0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    float r = 0.;\n\n    r += step(0.1, uv.y) - step(0.1+thickness, uv.y);\n    r += step(-0.1-thickness, uv.y) - step(-0.1, uv.y);\n\n    vec2 cuv = uv;\n    cuv.x -= 0.3;\n    float d = length(cuv);\n    r += step(d, 0.1+thickness) - step(d, 0.1);\n\n    vec2 p1 = vec2(0.3, 0.);\n    vec2 p2 = vec2(p1.x + 0.1*cos(iTime), p1.y + 0.1*sin(iTime));\n    float g = drawLine(p1, p2, uv);\n    \n    vec2 wuv = uv;\n    wuv *= 10.0;\n    float a = sin(wuv.x+iTime);\n    float b = step(a, wuv.y) - step(a+thickness*10., wuv.y);\n    b *= step(uv.x, 0.);\n    \n    a = sin(iTime);\n    p1 = vec2(0., p2.y);\n    g += drawLine(p1, p2, uv);\n    \n    fragColor.rgb = vec3(r,g,b);\n}","name":"Image","description":"","type":"image"}]}