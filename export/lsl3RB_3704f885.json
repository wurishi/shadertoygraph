{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define iterations 100\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t//set the coordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy * 3.0 - 1.5;\n\tuv.x -= .7;\n\tvec2 z = uv;\n\tvec2 c = z;\n\tfloat i = 0.0;\n\t//iterate the pixel\n\tfor (int j = 0; j < iterations; ++j) {\n\t\t//if you're leaving, break\n\t\tif (length(c) > 2.0) break;\n\t\t//square the complex number\n\t\tc = vec2(c.x * c.x - c.y * c.y, c.x * c.y * 2.0);\n\t\tc += z;\n\t\ti += 1.0;\n\t}\n\t//color the pixel based on the escape time\n\tvec3 col;\n\tif (length(c) > 2.0) {\n\t\tcol = mix(vec3(.1, 0, 0), vec3(1, .3, 0), i/float(iterations));\n\t} else {\n\t\tcol = vec3(0);\n\t}\n\tfragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsl3RB","date":"1373768163","viewed":210,"name":"My Mandelbrot Set","username":"porglezomp","description":"Mandelbrot set.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""}}