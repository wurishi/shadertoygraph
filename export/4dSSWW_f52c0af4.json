{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float s = 2.;\nfloat t = 1.;\nfloat gt;\n\nmat4 a;\nmat4 b;\nmat4 c;\nmat4 d;\n\nfloat df(vec3 p3) {\n    //p3 = mod(p3, 4.0)-2.0;\n    float mind;\n    vec4 p = vec4(p3, 1.0);\n    float m=1.0;\n    for(int i=0; i<8; i++) {\n        vec4 pa = p * a;\n        vec4 pb = p * b;\n        vec4 pc = p * c;\n        vec4 pd = p * d;\n        float la = dot(pa,pa);\n        float lb = dot(pb,pb);\n        float lc = dot(pc,pc);\n        float ld = dot(pd,pd);\n        p = pa;\n        mind = la;\n        if(lb < mind) { p = pb; mind = lb; }\n        if(lc < mind) { p = pc; mind = lc; }\n        if(ld < mind) { p = pd; mind = ld; }\n        mind=sqrt(mind);\n        m *= s;\n        if(mind > 1.8 + 0.2*cos(gt)) break;\n    }\n    return mind/m-1.0/m*(1.5 + 0.5 * sin(gt));\n    return (mind-1.0)/m*0.618;\n}\n\n// camera rotation : pitch, yaw\nmat4 rotationXY( vec2 angle ) {\n\tvec2 c = cos( angle );\n\tvec2 s = sin( angle );\n\t\n\treturn mat4(\n\t\tc.y      ,  0.0, -s.y      , 0.0,\n\t\ts.y * s.x,  c.x,  c.y * s.x, 0.0,\n\t\ts.y * c.x, -s.x,  c.y * c.x, 0.0,\n        0.0      ,  0.0,        0.0, 1.0\n\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\t{\n gt = iTime*0.5 + 9.1;\n\n a = mat4(s,0.0,0.0,-t,\n              0.0,s,0.0,-t,\n              0.0,0.0,s,t,\n              0.0,0.0,0.0,1.0);\n b = mat4(s,0.0,0.0,t,\n              0.0,s,0.0,t,\n              0.0,0.0,s,t,\n              0.0,0.0,0.0,1.0);\n c = mat4(s,0.0,0.0,-t,\n              0.0,s,0.0,t,\n              0.0,0.0,s,-t,\n              0.0,0.0,0.0,1.0);\n d = mat4(s,0.0,0.0,t,\n              0.0,s,0.0,-t,\n              0.0,0.0,s,-t,\n              0.0,0.0,0.0,1.0);\n              \n    float mink = 0.001;\n\tvec2 p2=(fragCoord.xy/iResolution.xy)*2.0-1.0;\n\tvec3 dir=normalize(vec3(p2*vec2(1.77,1.0),1.0));\t\t// screen ratio (x,y) fov (z)\n    mat4 rot = rotationXY(vec2(.1*gt,-.3*gt));\n\tvec3 o=vec3(0.0, 0.0, -1. + .3*sin(gt))* mat3(rot);\n    dir *= mat3(rot);\n    a *= rot;\n    c *= rot * rot;\n\tvec3 hit;\n\tfloat t=.3, k;\n\tfor(int i=0;i<12;i++) {\n        hit=o+dir*t;\n\t\tk=df(hit);\n\t\tt+=k;\n        if(k<mink) break;\n\t}\n    vec2 e=vec2(-0.001, 0.0);\n    vec3 n = normalize(vec3(k-df(hit+e.xyy), k-df(hit+e.yxy), k-df(hit+e.yyx)));\n    n = n*0.5+0.5;\n    vec3 c = mix(n.yyy/length(o-hit), n, sin(gt)*.5+.5);\n    c = clamp(c,0.0,1.0);\n    //c *= 1.0-max(0.0,(k-mink));\n    \n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dSSWW","date":"1411913547","viewed":156,"name":"gasket thing","username":"yonatan","description":"gasket thing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""}}