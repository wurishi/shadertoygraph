{"ver":"0.1","info":{"id":"7lcXD8","date":"1639006425","viewed":117,"name":"Zoom Scroll (flumble)","username":"rtsonneveld","description":"zoom scroll","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["zoom","scroll"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float speed = 0.5;\nconst float smear = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mid = vec2(0.5);\n\n    float dt = mod(speed*iTime, 1.0); // make sure the time won't affect precision of log2(r) below\n    vec2 dp = uv-mid;\n    float r = length(dp);\n    vec2 dir = dp/r;\n\n    // make self-similar circles where the texture repeats for r = 1, 2, 4, 8...\n    // => if r in [1/4, 1/2, 1, 2, 4, 8]: x = 0\n    // => if log(r) in [-2, -1, 0, 1, 2, 3]: x = 0\n    // => if mod(log(r), 1) == 0: x = 0\n    float x = mod(dt+log2(r)/smear, 1.0);\n\n    x *= 0.5; //distance from center should be at most 0.5\n\n    x = 2.0*abs(x-0.25); //go back to the outer edge halfway \n\n    x = pow(2.0, x); //correct for distortion\n\n\n    // Output to screen\n    fragColor = vec4(texture(iChannel0, mid+x*dir));\n    fragColor.b = fragColor.g = fragColor.r;\n    // check just one band\n//    if (log2(r) < -2.0 || log2(r) > -1.0)\n//        fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"}]}