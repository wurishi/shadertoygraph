{"ver":"0.1","info":{"id":"Nd23Wt","date":"1618138132","viewed":42,"name":"test_sin_dist","username":"NinjaPhillipe","description":"4 point","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["dist"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat get_fact(float d)\n{\n    return abs(sin(d*30.0)) + 0.3;\n}\n\nvec2 get_sin_pos(float x,float y)\n{\n    float a = 10.0;\n    return vec2(x+sin(iTime)/10.0,y+cos(iTime)/10.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n \n       \n    vec3 blue = vec3(0.239,0.553,0.808);\n    float gamma = sin(iTime)/20.0 + 0.15;\n    \n    // Source pos\n    vec2 pos0 = get_sin_pos(0.25,0.5);\n    vec2 pos1 = get_sin_pos(0.75,0.5);\n    vec2 pos2 = get_sin_pos(0.5,0.25);\n    vec2 pos3 = get_sin_pos(0.5,0.75);\n    \n\n    // distance \n    float d0 = length(pos0-uv) - (iTime/10.0);\n    float d1 = length(pos1-uv) - (iTime/10.0);\n    float d2 = length(pos2-uv) - (iTime/10.0);\n    float d3 = length(pos3-uv) - (iTime/10.0);\n    \n    // normalize dist \n    vec4 norm_dist = normalize(vec4(d0,d1,d2,d3));\n    \n    // \n    float fact = ( norm_dist[0]*get_fact(d0) ) +\n                ( norm_dist[1]*get_fact(d1) ) +\n                ( norm_dist[2]*get_fact(d2) ) +\n                ( norm_dist[3]*get_fact(d3) );\n    \n    \n    \n    vec3 color = (1.0-gamma)*blue + gamma*vec3(0.12,0.53,0.76)*fact;\n\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}