{"ver":"0.1","info":{"id":"4tGXzK","date":"1485220186","viewed":135,"name":"graphics assignment 1 - checkers","username":"xombifier","description":"submission for assignment 1 for graphics class","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard","graphics","egp200","assignment1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    //the two colors of the checkers, plus a third color for testing purposes\n    vec4 color1 = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 color2 = vec4(1.0, 1.0, 1.0, 1.0);\n    vec4 color3 = vec4(0.5, 0.5, 0.5, 1.0);\n    \n    \n    //the two textures, for the bonus\n    vec4 texture1 = texture(iChannel0, uv);\n    vec4 texture2 = texture(iChannel1, uv);\n    \n    \n    \n    ////////////////////////////////////////////////////////////////////\n    const int numRows = 5;\t\t\t//number of rows\n    const int numCols = 5;\t\t\t//number of columns\n    const bool USE_BONUS = false;\t//switch to true to see the bonus\n    ////////////////////////////////////////////////////////////////////\n    \n    \n    //if using bonus, use textures instead of colors\n    if (USE_BONUS)\n    {\n        color1 = texture1;\n        color2 = texture2;\n    }\n    \n    \n    \n    //two-dimensional for loop, one for rows and one for columns\n    for (int i = 0; i < numRows; i++)\n    {\n        for (int j = 0; j < numCols; j++)\n        {\n            //conversion from int to float. for now i know of no better way to handle this\n            float x = float(i);\n            float y = float(j);\n\n            //defining the regions which each checker square will take up\n            //based off of the iterators in the for loops\n            float leftBound = 1.0 * (x / float(numRows));\n            float rightBound = 1.0 * (x / float(numRows)) + 1.0 / float(numRows);\n            float upBound = 1.0 * (y / float(numCols));\n            float downBound = 1.0 * (y / float(numCols)) + 1.0 / float(numCols);\n\n            //pixels within the regions will be colored accordingly\n            //if both the row and column number (both iterators, in other words) are even, then color it color1\n            //otherwise, color it color2\n            if (uv.x > leftBound && uv.x < rightBound)\n            {\n                if (uv.y > upBound && uv.y < downBound)\n                {\n                    if (mod(float(i), float(2)) == 0.0)\n                    {\n                        if (mod(float(j), float(2)) == 0.0)\n                        {\n                            fragColor = color1;\n                            break;\n                        }\n                        else\n                        {\n                            fragColor = color2;\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        if (mod(float(j), float(2)) == 0.0)\n                        {\n                            fragColor = color2;\n                            break;\n                        }\n                        else\n                        {\n                            fragColor = color1;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}