{"ver":"0.1","info":{"id":"McGyDK","date":"1732425590","viewed":20,"name":"CoordinateGrid_DrawMathFunction","username":"miyu","description":"Draw mathematical functions.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","coordinate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define grid_subdivision 7.\n\nvec2 UV(vec2 uv)\n{\n    return grid_subdivision*(uv-.5*iResolution.xy)/min(iResolution.x,iResolution.y);\n}\n\nvec3 CoordinateGrid(vec2 uv)\n{\n    vec3 col=vec3(0.);   \n    vec2 grid = abs(fract(uv+.5)-.5);\n    \n    col+=smoothstep(fwidth(uv.x),0.,grid.x);\n    col+=smoothstep(fwidth(uv.y),0.,grid.y);\n    col.rb*=smoothstep(0.99*fwidth(uv.x),fwidth(uv.x),abs(uv.x));\n    col.gb*=smoothstep(0.99*fwidth(uv.y),fwidth(uv.y),abs(uv.y));\n    \n    return col;\n}\n\nfloat segment(vec2 currentPoint,vec2 point1,vec2 point2,float width)\n{\n    vec2 p12 = point2-point1;\n    vec2 c1 = currentPoint-point1;\n    float proj = dot(p12,c1);\n    float dis = length(proj*p12-c1);\n    return smoothstep(width,0.95*width,dis);\n}\n\nfloat func(float x)\n{\n    return sin(x);\n}\n\nfloat draw_func(vec2 uv)\n{\n    float f=0.;\n    for(float x=0.;x<=iResolution.x;x+=1.)\n    {\n        vec2 currentPoint = UV(vec2(x,0.));\n        vec2 nextPoint=UV(vec2(x+1.,0.));\n        f+= segment(uv,vec2(currentPoint.x,func(currentPoint.x)),vec2(nextPoint.x,func(nextPoint.x)),fwidth(uv.x));\n    }\n    return clamp(f,0.,1.);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=UV(fragCoord);\n    \n    vec3 col = vec3(0.);\n    \n    col =CoordinateGrid(uv);\n\n    float se = draw_func(uv);\n    col=mix(col,vec3(0.,1.,1.0),se);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}