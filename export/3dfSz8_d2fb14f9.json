{"ver":"0.1","info":{"id":"3dfSz8","date":"1550571352","viewed":393,"name":"Sine_Rainbow_Tile","username":"noriben","description":"Rainbow by sine curve x3.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// remap\nfloat remap(float In, vec2 InMinMax, vec2 OutMinMax)\n{\nreturn OutMinMax.x + (In - InMinMax.x) * (OutMinMax.y - OutMinMax.x) / (InMinMax.y - InMinMax.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (center)\n    vec2 uv = (fragCoord.xy *2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    //Divide Screen\n\tuv = mix(uv, fract(uv * 2.0 * sin(iTime * 0.2)), cos(iTime)); \n    \n    // period and move\n    float level = mix(uv.x, uv.y, 0.5 * sin(iTime)) * 2.0 * 3.1415 * tan(iTime * 0.1);  \n\n    float offset = 1.0;\n    \n    // remap function Test\n    float r = remap(sin(level + offset), vec2(-1.0, 1.0), vec2(0.0, 1.0));\n    // -1 to 1 remap 0 to 1 with simple\n    float g = (sin(level - 2. + offset) + 1.0) / 2.0;\n    float b = (sin(level - 4. + offset) + 1.0) / 2.0;\n    \n    vec3 rainbow = vec3(r, g, b) * 0.5 * (sin(iTime * 1.0) + 2.5) / 2.0;\n    \n    // Output to screen\n    fragColor = vec4(rainbow, 1.0);\n}","name":"Image","description":"","type":"image"}]}