{"ver":"0.1","info":{"id":"XdGGRW","date":"1453354011","viewed":220,"name":"wooded dance cube","username":"mds2","description":"stupid shiny cube dancing in the woods to some electronic music.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["reflection","music","cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3zn","filepath":"/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","previewfilepath":"/media/ap/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst vec3 diffuse_color = 0.9 * vec3(1.0, 1.0, 0.7);\nconst vec3 specular_color = 0.2 * vec3 (0.7, 0.7, 1.0);\n\nvec3 cube_normal(in highp vec3 point) {\n\tfloat x = step(max(abs(point.y), abs(point.z)), point.x) - step(max (abs(point.y), abs(point.z)), -point.x);\n\tfloat y = step(max(abs(point.z), abs(point.x)), point.y) - step(max (abs(point.z), abs(point.x)), -point.y);\n\tfloat z = step(max(abs(point.x), abs(point.y)), point.z) - step(max (abs(point.x), abs(point.y)), -point.z);\n\treturn normalize(vec3(x,y,z));\n}\n\nfloat cube_dist(in highp vec3 point) {\n    return length(max(abs(point) - 1.0, 0.0)) - 1.0;\n}\n\nvec3 cube_grad(in highp vec3 point) {\n    float d = cube_dist(point);\n\treturn normalize(vec3(cube_dist(point + vec3(0.1, 0.0, 0.0)) - d,\n                          cube_dist(point + vec3(0.0, 0.1, 0.0)) - d,\n                          cube_dist(point + vec3(0.0, 0.0, 0.1)) - d));\n    \n}\n\nfloat cube_isect(in highp vec3 ray_orig, in highp vec3 ray_dir) {\n\tfloat dist_sum = 0.0;\n    highp vec3 point = ray_orig;\n    for (int i = 0; i < 64; ++i) {\n    \tfloat d = cube_dist(point);\n        dist_sum += d;\n        point = point + d * ray_dir;\n    }\n    return dist_sum;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\thighp mat3 twist = mat3(0.6, 0.48, 0.64,\n\t\t\t  -0.8, 0.36, 0.48,\n\t\t\t  0.0, -0.8, 0.6);\n    highp mat3 twistInv = mat3(0.6, -0.8, 0.0,\n\t\t\t  0.48, 0.36, -0.8,\n\t\t\t  0.64, 0.48, 0.6);\n\thighp float ct = cos(0.5 * iTime);\n\thighp float st = sin(0.5 * iTime);\n    \n    highp vec3 scales;\n    scales.x = texture(iChannel2, vec2(0.2, 0.0)).x;\n    scales.y = texture(iChannel2, vec2(0.5, 0.0)).x;\n    scales.z = texture(iChannel2, vec2(0.8, 0.0)).x;\n    \n    scales = 0.75 + 1.5 * smoothstep(0.25, 1.0, scales);\n    highp vec3 invScales = 1.0 / scales;\n    // scales = vec3(1.0);\n\ttwist = twist *\n         mat3 (invScales.x, 0.0, 0.0,\n              0.0, invScales.y, 0.0,\n              0.0, 0.0, invScales.z) *\n         mat3(ct, 0.0, st, 0.0, 1.0, 0.0, -st, 0.0, ct);\n    twistInv = mat3(ct, 0.0, -st, 0.0, 1.0, 0.0, st, 0.0, ct) * \n        mat3 (scales.x, 0.0, 0.0,\n              0.0, scales.y, 0.0,\n              0.0, 0.0, scales.z) * twistInv;\n    \n    highp float cyaw = cos(6.0 * iMouse.x / iResolution.x + 0.05 * iTime);\n    highp float syaw = sin(6.0 * iMouse.x / iResolution.x + 0.05 * iTime);\n    \n    \n    twist = twist * mat3(cyaw, 0.0, syaw, 0.0, 1.0, 0.0, -syaw, 0.0, cyaw);\n\tvec2 position = ( fragCoord.xy / iResolution.y ) - 0.5 * iResolution.xy / iResolution.y;\n\tvec3 dir = twist * normalize(vec3(position, -0.25));\n\tvec3 orig = twist * vec3(0.0, 0.0, 5.0);\n\tvec3 light_dir = twist * normalize(vec3 (iMouse.xy - 0.5, 1.0));\n\t\n\tvec3 color = texture(iChannel0, twistInv * dir).xyz;\n\t\n\thighp float along_ray = cube_isect(orig, dir);\n\t\n\tif (along_ray <= 50.0) {\n\t\tvec3 hit_point = orig + dir * along_ray;\n\t\tvec3 surface_normal = cube_grad(hit_point);\n\t\tvec3 reflection = reflect(dir, surface_normal);\n\t\tcolor = texture(iChannel0, twistInv * reflection).xyz;\n        vec3 diffuse = texture(iChannel1, twistInv * surface_normal).xyz;\n        color = specular_color * color * color + diffuse_color * diffuse;\n    }\n\n\tfragColor = vec4(color, 1.0 );\n\n}","name":"Image","description":"","type":"image"}]}