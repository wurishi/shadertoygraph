{"ver":"0.1","info":{"id":"7lXyDM","date":"1648184103","viewed":126,"name":"learnshader006-创建直线","username":"hi347","description":"这是离散直线，而非线性直线。所谓离散就是一个区域范围，每个点的位置不固定；而传统的直线位置都是清晰。","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["learn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//我们独创的功能\nfloat draw(vec2 uv) {    \n    return smoothstep(0.0, 0.02, abs(uv.y - uv.x));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // fragColor = vec4(1.0 ,0.0 ,0.0,1.0);                     //红色\n     fragColor = vec4(1.0 *draw(uv) ,0.0 ,0.0,1.0);           //黑线（基础）\n    // fragColor = vec4(uv.x *draw(uv) ,0.0 ,0.0,1.0);          //黑线（改良）\n    // fragColor = vec4(uv.x *(1.0 -draw(uv)) ,0.0 ,0.0,1.0);   //黑线（改良）\n    // fragColor = vec4(uv.x +(1.0 -draw(uv)) ,0.0 ,0.0,1.0);   //黑线（改良）\n    \n    \n     /*\n    smoothstep(0.0, 0.02, abs(v2.y - v2.x)）\n    画布的宽和高不相等，但范围都是0~1，所以高度 - 宽度 = 有三种情况\n    \n    高度 - 宽度 <= 0时，返回0。 \n    此时红色1.0 * 0  = 0， 此时显示黑色 \n    \n    0.02 <= 高度 - 宽度时，返回1。 \n    此时红色1.0 * 1  = 1， 此时显示红色  \n    \n    当 0 <= 高度 - 宽度 <= 0.02时，返回一个0~0.02范围内的数字。 \n    此时红色1.0 * 0.01  = 0.01， 此时显示淡红色，模糊了黑色和红色的界限 \n    */\n}\n\n","name":"Image","description":"","type":"image"}]}