{"ver":"0.1","info":{"id":"dlVfDK","date":"1702518806","viewed":56,"name":"MathLollipop","username":"ahsan2649","description":"by combining tangents with radius and angles, we get a lollipop pattern. ","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["circular","lollipopblackandwhite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n      \n    uv = rotate2d((iTime * 0.25)) * uv;\n    \n    float r = sqrt(uv.x*uv.x + uv.y*uv.y);\n    float th = atan(uv.y/uv.x);\n    \n    float f = .25/tan(r*8. - iTime * 1.) + tan(10. * th);\n    f += sin(-iTime * .5);\n    \n    f *= 0.5;\n    f = abs(f);\n    f = smoothstep(0.7,0.9,f);\n    // Output to screen\n    fragColor = vec4(vec3(f),1.0);\n}","name":"Image","description":"","type":"image"}]}