{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"float mapWall( vec2 uv )\n{\n\tfloat sp = texture( iChannel0, vec2( iTime + uv.y * 0.1, 0.0 ) ).x\n\t\t- max( 0.0, ( sin( iTime * 3.0 + uv.y / 3.14 ) + 1.0 ) * 0.4 );\n\tsp *= max( 4.0 - abs( uv.x ), 0.0 ) * .5;\n\t\n\tfloat zshift = -iTime * 4.0;\n\treturn min( \n\t\t( 1.0 - abs( mod( uv.x, 2.0 ) - 1.0 ) ), ( 1.0 - abs( mod( uv.y + zshift, 2.0 ) - 1.0 ) ) ) *\n\t\t( 1.0 + sp * 2.0 );\n}\n\nvec3 calcLighting( vec3 pos, vec3 norm, vec3 light, vec3 amb )\n{\n\tvec3 dirL = normalize( light - pos );\n\tfloat dotL = abs( dot( dirL, norm ) );\n\tvec3 R = reflect( dirL, norm );\n\tfloat spec = pow( abs( dot( R, normalize( -pos ) ) ), 10.0 );\n\treturn vec3( dotL * 0.2 ) + vec3( spec * .3 ) + amb + abs( pos * 0.05 );\n}\n\nvec3 getPlaneVPos( vec3 pt, float pos )\n{\n\treturn pt + vec3( sign( pos ) * mapWall( pt.yz ), 0.0, 0.0 );\n}\nvec3 getPlaneHPos( vec3 pt, float pos )\n{\n\treturn pt + vec3( 0.0, sign( pos ) * mapWall( pt.xz ), 0.0 );\n}\n\nvec3 planeVColor( float t, vec3 ro, vec3 rd, float pos, vec3 light, vec3 amb )\n{\n\tvec3 pt = ro + t * rd;\n\t\n\tvec3 norm = normalize( cross( \n\t\tgetPlaneVPos( pt + vec3( 0.0, 0.0, 0.1 ), pos ) - getPlaneVPos( pt, pos ), \n\t\tgetPlaneVPos( pt + vec3( 0.0, sign(pos) * 0.1, 0.0 ), pos ) - getPlaneVPos( pt, pos ) ) );\n\t\n\treturn calcLighting( pt, norm, light, amb );\n}\n\nvec3 planeHColor( float t, vec3 ro, vec3 rd, float pos, vec3 light, vec3 amb )\n{\n\tvec3 pt = ro + t * rd;\n\t\n\tvec3 norm = normalize( cross( \n\t\tgetPlaneHPos( pt + vec3( 0.0, 0.0, 0.1 ), pos ) - getPlaneHPos( pt, pos ), \n\t\tgetPlaneHPos( pt + vec3( sign(pos) * 0.1, 0.0, 0.0 ), pos ) - getPlaneHPos( pt, pos ) ) );\n\t\n\treturn calcLighting( pt, norm, light, amb );\n}\n\nfloat planeV( vec3 ro, vec3 rd, float pos ) // vertical\n{\n\tfloat t = 0.0;\n\tfloat h = 0.0;\n\tfor( int i = 0; i < 50; i++ )\n\t{\n\t\tvec3 pt = ro + t * rd;\n\t\th = abs( pos - getPlaneVPos( pt, pos ).x );\n\t\tif ( h <  0.1 )\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tt += h * 0.32;\n\t}\n\treturn t;\n}\nfloat planeH( vec3 ro, vec3 rd, float pos ) // horizontal\n{\n\tfloat t = 0.0;\n\tfloat h = 0.0;\n\tfor( int i = 0; i < 50; i++ )\n\t{\n\t\tvec3 pt = ro + t * rd;\n\t\th = abs( pos - getPlaneHPos( pt, pos ).y );\n\t\tif ( h <  0.1 )\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tt += h * 0.32;\n\t}\n\treturn t;\n}\n\nvec3 colorize( vec2 uv )\n{\n\tvec3 ro = vec3( 0.0, 0.0, 0.0 );\n\tvec3 rd = normalize( vec3( uv.x - 0.5, uv.y - 0.5, 1.0 ) );\n\trd.x *= 1.5;\n\t\n\tvec3 c1, c2, c3, c4;\n\t\n\tvec3 light = vec3( 0.0, 0.0, 10.0 );\n\tvec3 amb = vec3( 0.2 );\n\t\n\tfloat t1 = planeV( ro, rd, -6.0 );\n\tfloat t2 = planeV( ro, rd,  6.0 );\n\tfloat t3 = planeH( ro, rd, -6.0 );\n\tfloat t4 = planeH( ro, rd,  6.0 );\n\t\n\tfloat t = 0.0;\n\tvec3 c = vec3( 0.0, 0.0, 0.0 );\n\n\tif ( t1 < t2 && t1 < t3 && t1 < t4 )\n\t{\n\t\tt = t1;\n\t\tc = planeVColor( t, ro, rd, -6.0, light, amb );\n\t}\n\telse if ( t2 < t3 && t2 < t4 )\n\t{\n\t\tt = t2;\n\t\tc = planeVColor( t, ro, rd,  6.0, light, amb );\n\t}\n\telse if ( t3 < t4 )\n\t{\n\t\tt = t3;\n\t\tc = planeHColor( t, ro, rd, -6.0, light, amb );\n\t}\n\telse\n\t{\n\t\tt = t4;\n\t\tc = planeHColor( t, ro, rd,  6.0, light, amb );\n\t}\n\n\tfloat mult = clamp( 4.0 - t * 0.05 , 0.0, 4.0 ) * 0.25;\n\treturn c * mult + vec3( 1.0 - mult );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n\tvec3 color = colorize( uv );\t\n\t\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Msl3Wj","date":"1379970049","viewed":787,"name":"Chlast #2","username":"mi_ku","description":"Just experimenting with raymarching. I will try to optimize it later.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","vizualisation","pyramids"],"hasliked":0,"parentid":"","parentname":""}}