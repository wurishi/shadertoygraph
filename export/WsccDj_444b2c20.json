{"ver":"0.1","info":{"id":"WsccDj","date":"1601690247","viewed":180,"name":"#inktober2020 d2: macos spiral","username":"zaiyugi","description":"Day 2 for Inktober 2020. Spiral from polar curves. Looks a bit like a MacOS screensaver","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["spiral","polar","inktober"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define nSteps 64\n#define PI 3.141592\n#define dog 0.25\n\n#define cm_A vec3(0.5, 0.5, 0.5)\n#define cm_B vec3(0.5, 0.5, 0.5)\n#define cm_C vec3(1.0, 1.0, 0.5)\n#define cm_D vec3(0.8, 0.9, 0.3)\n\nvec2 rotate2D(vec2 _st, float _angle)\n{\n\t_st -= 0.5;\n    _st = mat2(\n        cos(_angle),-sin(_angle),\n        sin(_angle),cos(_angle)\n    ) * _st;\n    _st += 0.5;\n    \n    return _st;\n}\n\nfloat ring(float e0, float d, float f)\n{\n    return smoothstep(e0, e0 + d, f) - smoothstep(e0 + d, e0 + 2. * d, f);\n}\n\nvec3 colormap(float t)\n{\n    return cm_A + cm_B * cos(2.0 * PI * (cm_C * t + cm_D));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize uv and account for aspect ratio\n    vec2 uv = fragCoord / iResolution.xy;\n    float ar = iResolution.x / iResolution.y;\n    uv.x = (uv.x - 0.5) * ar + 0.5;\n\n    // Preserve original uv\n    vec2 p = uv;\n    float t = iTime;\n    vec3 col = vec3(0.0);\n    \n    float cos_t = cos(t * .35);\n    cos_t *= 64.0;\n    \n    p = p - 0.5;\n    p *= 1.35;\n    \n    vec2 polar;\n    polar.x = length(dot(p, p));\n    polar.y = atan(p.y, p.x) + PI;\n    \n    float rads = polar.y;\n    \n    for(int i = 0; i < nSteps; ++i)\n    {\n        float rd = float(i+1) / float(nSteps);\n        float ring_x = sin(rads * 3.0 + rd * cos_t) - 2.0;\n        float f = ring(0.01, 0.5, polar.x + ring_x);\n        \n        col += vec3(f) * colormap(rd * 2. + t * .3);\n        \n        polar.x *= 1.2;\n    }\n    col *= .5;\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}