{"ver":"0.1","info":{"id":"Nd3yD8","date":"1653341009","viewed":139,"name":"Algues marines","username":"Flopine","description":"A Truchet experiment based on that article  https://chalkdustmagazine.com/features/when-truchet-met-chladni/","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","truchet","hexagones"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n// Truchet experiment based on that article \n// https://chalkdustmagazine.com/features/when-truchet-met-chladni/\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define hr normalize(vec2(sqrt(3.),1.))\n#define xor(a,b) ((1.-a)*b+(1.-b)*a)\n#define AAstep(thre, val) smoothstep(-.5,.5,(val-thre)/min(0.03,fwidth(val-thre)))\n\n\nvec4 hexgrid (vec2 uv)\n{\n    vec2 ga=mod(uv,hr)-hr*.5,\n    gb=mod(uv-hr*.5,hr)-hr*.5,\n    guv=(dot(ga,ga)<dot(gb,gb))? ga:gb,\n    gid = uv-guv;\n    return vec4(guv, gid);    \n}\n\nfloat size_sphere = .15;\nfloat pattern1 (vec2 uv)\n{\n    float diag = step(0., uv.x+uv.y*sqrt(3.));\n    vec2 pos_s = (diag <= 0.) ? vec2(size_sphere,size_sphere*sqrt(3.)) : -vec2(size_sphere,size_sphere*sqrt(3.));\n    float s1 = 1.-AAstep(size_sphere, length(uv+pos_s));\n    \n    return xor(s1,diag);\n}\n\nfloat pattern2 (vec2 uv)\n{\n    return xor( AAstep(0.,uv.x), AAstep(size_sphere,length(vec2(abs(uv.x)-size_sphere*2., uv.y))) );\n}\n\nfloat pattern3 (vec2 uv)\n{\n    float diag = AAstep(0.,uv.x-uv.y*sqrt(3.));\n    vec2 pos_s = (diag <= 0.) ? vec2(size_sphere,-size_sphere*sqrt(3.)) : -vec2(size_sphere,-size_sphere*sqrt(3.));\n    float s1 = 1.-AAstep(size_sphere,length(uv+pos_s));\n    \n    return xor(diag,s1);\n}\n\nfloat pattern4 (vec2 uv)\n{\n    float a = mod(atan(uv.y,uv.x)-TAU/6.,TAU/3.)-TAU/6.;\n    vec2 p = vec2(cos(a),sin(a))*length(uv);\n    p.x -= 0.3;\n    \n    return 1.-AAstep(size_sphere, length(p));\n}\n\nfloat pattern5 (vec2 uv)\n{\n    float a = mod(atan(uv.y,uv.x),TAU/3.)-TAU/6.;\n    vec2 p = vec2(cos(a),sin(a))*length(uv);\n    p.x -= 0.3;\n\n    return AAstep(size_sphere, length(p)); \n}\n\nfloat frame (vec2 uv)\n{\n    vec4 hg = hexgrid(uv);\n    vec2 hid = hg.zw, sp_off = vec2(0.7, length(hid*0.1));\n    float noise = texture(iChannel0, hg.zw*0.1).x*5., \n    pat, \n    anim = (TAU/3.)*(floor((iTime-sp_off.y)*sp_off.x)+pow(fract((iTime-sp_off.y)*sp_off.x),8.) );\n    vec2 new_uv = hg.xy;  \n    new_uv *= rot(anim); \n    \n    if (noise >= 0. && noise < 1.) pat = pattern1(new_uv);\n    if (noise >= 1. && noise < 2.) pat = pattern2(new_uv);\n    if (noise >= 2. && noise < 3.) pat = pattern3(new_uv);\n    if (noise >= 3. && noise < 4.) pat = pattern4(new_uv);\n    if (noise >= 4. && noise < 5.) pat = pattern5(new_uv);\n\n    return pat;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 col = mix(vec3(0.5,0.7,0.9),vec3(0.99,0.9,0.75),frame(uv*2.));\n    \n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}