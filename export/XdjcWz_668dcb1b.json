{"ver":"0.1","info":{"id":"XdjcWz","date":"1491645326","viewed":337,"name":"Simple pattern music visualizer","username":"Ruzzyr","description":"Some simple experimentation with patterns and music. Feedback is always welcome :)","likes":11,"published":1,"flags":64,"usePreview":0,"tags":["simple","music","sine","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdSGWt","filepath":"https://soundcloud.com/playstation/transistor-we-all-become","previewfilepath":"https://soundcloud.com/playstation/transistor-we-all-become","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 color1 = vec3(20,30,48)/255.;\nvec3 color2 = vec3(36,59,85)/255.;\n\nvec3 color11 = vec3(255,95,109)/255.;\nvec3 color12 = vec3(255,195,113)/255.;\n\nmat2 rotateAroundZ(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 aspect = vec2(iResolution.x/iResolution.y, 1.0);\n    vec2 tUv = fragCoord.xy / iResolution.xy*aspect;\n    vec2 uv;\n\tuv.y = (fragCoord.y / iResolution.y)*4. - 2.;\n    uv.y = 1.0 - pow(abs(uv.y), 1.0);\n    //uv.y = 1.0 - pow(abs(sin(3.14*uv.y)), 1.5);\n\n    uv.x = fragCoord.x / iResolution.x * aspect.x*4. - 3.5;\n        uv.x = 1.0 - pow(abs(uv.x), 1.0);\n\n    fragColor = vec4(mix(color1, color2, sin(tUv.y)), 0.);\n    float audio = texture(iChannel0, vec2(0.25,tUv.y)).x;\n    for( int i = 0; i < 20; i++)\n    {\n        float pos = float(i+1);\n        vec2 locUv = uv*rotateAroundZ(.314*pos);\n\t\tlocUv.y += iTime/4.;\n        locUv.x += abs(sin(iTime/4.))*0.1;\n\n        float offset = audio;\n        //float offset = cos(locUv.y*iTime/160.)*audio;\n        float mainTrunk = sin(locUv.y*3.)*abs(cos(locUv.y*2.))*0.5;\n        float func = \n            smoothstep(mainTrunk, mainTrunk +0.03, locUv.x - offset + 0.4*(1.- tUv.y)) - \n            smoothstep(mainTrunk, mainTrunk +0.03, locUv.x - offset);\n        fragColor.a += func*0.2;\n        \n    }\n    vec4 color = vec4(mix(color1, color2, tUv.y), 1.0);\n    vec4 color1 = vec4(mix(color12, color11, length(uv*3.)), 1.0);\n    fragColor = mix(color,color1,fragColor.a);\n\n}","name":"Image","description":"","type":"image"}]}