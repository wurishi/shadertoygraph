{"ver":"0.1","info":{"id":"7s3SDn","date":"1696599152","viewed":39,"name":"Sigmoid function","username":"Julek","description":"From -6, 6 and 0, 1. The mouse coord can adjust the offset and scale.\nThe sigmoid approximates the step function.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["maths"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 vFontSize = vec2(16.0, 30.0);\n    vec2 vPixelCoord1 = vec2(86.0, 15.0);\n    \n    vec2 xymin = vec2(-6.0, 0.0);\n    vec2 xymax = vec2(6.0, 1.0);\n    vec2 scvec = xymax - xymin;\n    \n    // transform coords to xy:\n    vec2 p = xymin + scvec*uv;\n    \n    // mat in col order in glsl\n    mat3 T = transpose(mat3(scvec.x,     0.0, xymin.x,\n                                0.0, scvec.y, xymin.y,\n                                0.0,     0.0,     1.0));\n                            \n    vec3 uvw = vec3(uv, 1.0);\n    vec3 pw = T * uvw;\n    \n    vec2 mp = iMouse.xy/iResolution.xy;\n    vec3 mpw = T * vec3(mp, 1.0);\n    \n    p = pw.xy;\n    // float fmsg = PrintValue((fragCoord - vPixelCoord1) / vFontSize, pw.z, 1.0, 3.0);\n    \n    // Sigmoid function\n    float x = p.x;\n    float y = p.y;\n    float sig = 1.0 / (1.0 + exp(-(1e1*(mpw.y-0.5)*(x-mpw.x))));\n    float fx = sig;\n    //float fx = x;\n    \n    const float eps = 1e-2;\n    float d2 = (fx-y)*(fx-y);\n    \n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    float mask = float(d2 < eps*eps);\n    vec3 col = mask*vec3(1.0, 1.0, 1.0);\n\n    // Output to screen\n    //fragColor = vec4(mix(col, vec3(1.0, 1.0, 0.0), 1.0), 1.0);\n    fragColor.xyz = col;\n}","name":"Image","description":"","type":"image"}]}