{"ver":"0.1","info":{"id":"XXVXzd","date":"1720377164","viewed":81,"name":"stellated","username":"pb","description":"lots of intersecting planes visible here","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","4d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(x) mat2(cos(x+vec4(0,11,33,0)))\n\n//Rodrigues-Euler axis angle rotation\n#define ROT(p,axis,t) mix(axis*dot(p,axis),p,cos(t))+sin(t)*cross(p,axis)\n\n//formula for creating colors;\n#define H(h)  (  cos(  h + vec3(60,10,2)   )*.6 + .5 )\n\n#define H2(h)  (  cos(  h*h/2. + vec3(10,17,2)   )*.7 + .2 )\n\n//formula for mapping scale factor \n#define M(c)  log(1.+c)\n\n#define R iResolution\n\n\nvoid mainImage( out vec4 O, vec2 U) {\n  \n    O = vec4(0);\n    \n    vec3 c=vec3(0);\n    vec4 rd = normalize( vec4(U-.5*R.xy, R.y, R.y*2.))*100.;\n    \n    float sc,dotp,totdist=0., tt=iTime, t=0.;\n    \n    for (float i=0.; i<100.; i++) {\n        \n        vec4 p = vec4( rd*totdist);\n            \n        float dd = 100.;\n        vec4 id = round(p/dd);\n        //p -= dd*id;\n        \n        p.xyz += vec3(0,0,-20);\n        \n        p.xz *= rot(tt);\n           \n        p.yzw = ROT(p.xyz, normalize( vec3(sin(t/2.), cos(t/3.), 0. )  ),t);\n\n        sc = 1.; \n        \n        p.zw *= rot(tt);\n  \n        \n        vec4 w = p;\n        \n        for (float j=0.; j<8.; j++) {\n          \n            p = abs(p)*.9;\n       \n            float lp = length(p);\n            \n            dotp = max(1./dot(w,w),.1);\n            sc *= dotp; \n            \n            p = p * dotp - .4 ;\n            \n            w = .8*log(1.+p) - .02 ;\n            \n     \n        }\n         \n        float dist = abs( length(p)-.1)/sc ;  //funky distance estimate\n        float stepsize = dist/25. ;     \n        totdist += stepsize;              //move the distance along rd\n        \n        //accumulate color, fading with distance and iteration count\n        c +=\n             //7e-3* H2(  atan( p.w, p.z )) + \n             + mix( vec3(1), H(M(sc)),.95) *.03*  exp(-i*i*stepsize*stepsize*1e1);\n    }\n    \n    c = 1. - exp(-c*c);\n    O = ( vec4(c,0) );\n               \n}","name":"Image","description":"","type":"image"}]}