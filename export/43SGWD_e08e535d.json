{"ver":"0.1","info":{"id":"43SGWD","date":"1708438502","viewed":125,"name":"Distance Function Drawing","username":"AShaderBeginner","description":"press to draw :)\nthis is a gimmick, still nice though","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["mouse","distance","drawing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Distance Function Drawing\n// each buffer pixel stores the point closest to it; updates accordingly with neighbours\n// obviously, this method is not instantaneous\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c = max(texture(iChannel0, fragCoord / iResolution.xy).xy, vec2(0.));\n    \n    // Not \"signed\"\n    float sd = sqrt(dot(c - fragCoord, c - fragCoord))/iResolution.y;\n\n    // coloring\n    // Inspired by https://www.shadertoy.com/playlist/MXdSRf\n    float sdm = mod(sd - iTime * .2, .1) / .1;\n    vec3 col = sd > 0. ? vec3(.3, 1., .3) : vec3(1., .3, .3);\n    col *= mix(0.7, 1., smoothstep(0.4, 0.45, sdm) * smoothstep(0.55, 0.6, sdm));\n    col = mix(vec3(1.), col, smoothstep(0.01, 0.02, abs(sd)));\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void update(inout vec2 p, in vec2 sCoord, in vec2 dCoord ){\n    vec2 p1 = max(p, vec2(0.));\n    vec2 p2 = texture(iChannel0, (sCoord + dCoord)/iResolution.xy).xy;\n    if(dot(p2-sCoord,p2-sCoord) < dot(p1-sCoord,p1-sCoord)){\n        p = p2;\n    }\n}\n\n// fragColor.xy: point closest to it\n// fragColor.z:  has-been-pressed flag\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // initialization\n    if(iTime <= 0.1){\n        fragColor = vec4(100000., 100000., 0., 0.);\n        return;\n    }\n    \n    // check if it's already pressed by mouse before\n    vec3 _acc = texture(iChannel0, fragCoord / iResolution.xy).xyz;\n    if(_acc.z > 0. || dot(fragCoord - iMouse.xy, fragCoord - iMouse.xy) < 1.0){\n        fragColor = vec4(fragCoord, 1., 0.);\n        return;\n    }\n    \n    // update\n    vec2 acc = _acc.xy;\n    update(acc, fragCoord, vec2(-1., -1.));\n    update(acc, fragCoord, vec2(-1., 0.));\n    update(acc, fragCoord, vec2(-1., 1.));\n    update(acc, fragCoord, vec2(0., -1.));\n    update(acc, fragCoord, vec2(0., 1.));\n    update(acc, fragCoord, vec2(1., -1.));\n    update(acc, fragCoord, vec2(1., 0.));\n    update(acc, fragCoord, vec2(1., 1.));\n    fragColor = vec4(acc, 0., 0.);\n}","name":"Buffer A","description":"","type":"buffer"}]}