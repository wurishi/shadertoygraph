{"ver":"0.1","info":{"id":"fsGGWy","date":"1632033500","viewed":211,"name":"Pulsar Neutron Star","username":"DLC","description":"Simple Pulsar star using smoothstep func for rays","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["pulsar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2D rotation matrix\nvec2 rotate(vec2 v, float a) {\n    float s = sin(a);\n    float c = cos(a);\n    mat2 m = mat2(c, -s, s, c);\n    return m * v;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0.0);\n//star\n    col.b += 0.15 * sin(14.0*iTime);\n    col.b += mix(0.05, 1.0, 0.06 / length(uv));\n//rotate uv\n    uv = rotate(uv, 3.0*iTime);\n//rays\n    float m = smoothstep(0.25 * smoothstep(-0.5, 0.5, (abs(uv.y) - 0.4)), 0.0, abs(uv.x));\n    col.b += m * abs(sin(5.0*iTime));\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}