{"ver":"0.1","info":{"id":"4cdGWs","date":"1712262040","viewed":71,"name":"VideoThumbnailConsoleScrollerV1","username":"berke","description":"Display thumbnails from a video source, scrolling console style.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["video","thumbnails"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int k = iFrame / nevery + 1;\n    int irow = nrow - 1 - (k / ncol) % nrow;\n    vec2 sz = iResolution.xy/vec2(ncol,nrow);\n    vec2 fc = vec2(fragCoord.x,\n                   mod(fragCoord.y +\n                         (k < ncol*nrow ?\n                             0.0 : float(irow)*sz.y),\n                       iResolution.y));\n    vec2 p = fc/iResolution.xy;\n    vec4 col = texture(iChannel0,p);\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 fc = fragCoord.xy;\n    \n    vec4 col_prev = texelFetch(iChannel0,ivec2(fc),0);\n    vec4 col = col_prev;\n\n    int k = (iFrame / nevery) % (nrow * ncol);\n\n    int irow = (k / ncol) % nrow;\n    int icol = k % ncol;\n    \n    vec2 sz = iResolution.xy/vec2(ncol,nrow);\n    vec2 p0 = vec2(icol,nrow - 1 - irow)*sz;\n\n    ivec2 ifc = ivec2(fc/sz);\n    ifc.y = nrow - 1 - ifc.y;\n    \n    int kfc = (ifc.y * ncol) + ifc.x;\n    \n    if (k == kfc) {\n        if (iFrame % nevery == 0) {\n            col = texture(iChannel1,(fc - p0)/sz);\n        }\n    } else if ((ifc.y == irow && icol + 1 == ifc.x)\n            || (ifc.y == irow + 1 && icol == ncol - 1 && ifc.x == 0)) {\n        col = vec4(1,0.5,0.2,1);\n    } else if ((ifc.y == irow && icol <= ifc.x) ||\n               (ifc.y == irow + 1 && icol == ncol - 1 && ifc.x > 0)) {\n        col = vec4(0,0,0,1);\n    }\n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const int ncol = 16;\nconst int nrow = 12;\nconst int nevery = 6;\nconst int nblink = 30;\n","name":"Common","description":"","type":"common"}]}