{"ver":"0.1","info":{"id":"msjBWd","date":"1690299893","viewed":43,"name":"Sobel's edge detection","username":"Sheldier","description":"...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["algorithms"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float SOBEL_INTENSITY = 0.93;\nconst float NOISE_INTENSITY = 1.0;\nconst vec3 BACKGROUND_COLOR = vec3(0.66, 0.65, 0.6);\n\nfloat ToBW(vec3 col)\n{\n    return col.r * 0.3 + col.g * 0.59 + col.b * 0.11;\n}\n\nfloat GetNoise(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat GetSobelValue(vec2 uv, vec2 offset, float mul)\n{\n    vec4 col = texture(iChannel0, uv + offset);\n    float v = ToBW(col.rgb) * 0.11;\n    return v * mul;\n}\n\nfloat Sobel(vec2 uv)\n{\n    float x = 0.0;\n    float y = 0.0;\n    \n    float oneResX = 1.0 / iChannelResolution[0].x;\n    float oneResY = 1.0 / iChannelResolution[0].y;\n    \n    x += GetSobelValue(uv, vec2(-oneResX, -oneResY), -1.0);\n    x += GetSobelValue(uv, vec2(-oneResX, 0.0), -2.0);\n    x += GetSobelValue(uv, vec2(-oneResX, oneResY), -1.0);\n    x += GetSobelValue(uv, vec2(oneResX, -oneResY), 1.0);\n    x += GetSobelValue(uv, vec2(oneResX, 0.0), 2.0);\n    x += GetSobelValue(uv, vec2(oneResX, oneResY), 1.0);\n    \n    y += GetSobelValue(uv, vec2(-oneResX, -oneResY), 1.0);\n    y += GetSobelValue(uv, vec2(0.0, -oneResY), 2.0);\n    y += GetSobelValue(uv, vec2(oneResX, -oneResY), 1.0);\n    y += GetSobelValue(uv, vec2(-oneResX, oneResY), -1.0);\n    y += GetSobelValue(uv, vec2(0.0, oneResY), -2.0);\n    y += GetSobelValue(uv, vec2(oneResX, oneResY), -1.0);\n    \n    return sqrt(x * x + y * y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 col = texture(iChannel0, uv).xyz;\n    float bwCol = ToBW(col);\n    \n    float sob = Sobel(uv);\n    sob = step(0.975 * SOBEL_INTENSITY, 1.0 - sob);\n    \n    float noiseVal = GetNoise(uv);\n    noiseVal =  step(bwCol * 1.7, noiseVal * NOISE_INTENSITY);\n    noiseVal = 1.0 - noiseVal;\n\n    vec3 totalColor = BACKGROUND_COLOR;\n    totalColor *= sob;\n    totalColor *= noiseVal;\n    \n    fragColor = vec4(totalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}