{"ver":"0.1","info":{"id":"MfjBDz","date":"1724834005","viewed":34,"name":"Northern Lights FBM","username":"bendh","description":"Modified fractal brownian motion function with interactivity","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 u_colorA = vec3(1.0, 0.0, 0.0);\nconst vec3 u_colorB = vec3(0.0, 1.0, 0.0);\nconst vec3 u_colorC = vec3(0.0, 0.0, 1.0);\n\n/**\n * Fractal Brownian Motion\n *\n * Reference: https://thebookofshaders.com/13/\n * \n * See also: https://iquilezles.org/articles/morenoise\n *         : https://iquilezles.org/articles/warp\n */\n\n#define NUM_OCTAVES 10\n\n// Get random value\nfloat random(in vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\n// Get noise\nfloat noise(in vec2 st)\n{\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    \n    float a = random(i + vec2(0.0, 0.0));\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    \n    vec2 u = f * f * (3.0 - 2.0 * f);\n    \n    return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n// Fractal Brownian Motion\n//\nfloat fbm(in vec2 st)\n{\n\tfloat v = 0.0;\n    float a = 0.5;\n    \n    for (int i = 0; i < NUM_OCTAVES; i++)\n    {\n    \tv += a * noise(st);\n        st = st * 0.99;\n        a *= 0.69;\n    }\n    \n    return v;\n}\n// End of Fractal Brownian Motion Code\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord / iResolution.xy;\n    \n    vec3 color = vec3(0.0);\n        \n    vec2 q = vec2(0.0);\n    q.x = fbm(st + vec2(0.0) + (0.15 * iTime));\n    q.y = fbm(st + vec2(1.0) + (0.15 * iTime));\n    \n    vec2 r = vec2(0.0);\n    r.y = fbm(st + (4.0 * q) + vec2(2.3, 2.8) + (0.15 * iTime) * (sin(iMouse.y * 0.0005)));\n    \n    vec2 s = vec2(0.0);\n    s.x = fbm(st + (4.0 * q) + vec2(1.7, 2.2) + (0.15 * iTime) * (sin(iMouse.x * 0.0005)));\n    \n    color = mix(color, u_colorA, clamp(length(q), 0.0, 1.0));\n    color = mix(color, u_colorB, clamp(length(r), 0.0, 1.0));\n    color = mix(color, u_colorC, clamp(length(s), 0.0, 1.0));\n\n    float f = fbm(st + 4.0 * r);\n    \n    float coef = (f * f * f + (0.6 * f * f) + (0.5 * f));\n    color *= coef;\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}