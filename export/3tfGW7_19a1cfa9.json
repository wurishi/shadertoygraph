{"ver":"0.1","info":{"id":"3tfGW7","date":"1556458772","viewed":246,"name":"Rotating Squares Tiling","username":"fizzer","description":"Fitting rotated squares together in a grid. The result is a bit similar to Cairo tilings: [url]https://www.shadertoy.com/view/MlSfRd[/url].","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi = acos(-1.);\n    float zoom = 5.;\n    vec2 p = fragCoord / iResolution.y * zoom;\n\n    float th = mod(iTime * pi / 5., pi * 2.);\n    float gridsize = (.5 + abs(sin(th * 2.)) * (sqrt(2.) / 2. - .5)) * 2.;\n\n    bool flip = false;\n\n    if(fract(th / pi + .25) > .5)\n    {\n        p -= .5;\n        flip = true;\n    }\n\n    p *= gridsize;\n\n    vec2 cp = floor(p / gridsize);\n\n    p = mod(p, gridsize) - gridsize / 2.;\n\n    p *= mod(cp, 2.) * 2. - 1.;\n\n    p *= mat2(cos(th), sin(th), -sin(th), cos(th));\n\n    float w = zoom / iResolution.y * 1.5;\n    \n    float a = smoothstep(-w, +w, max(abs(p.x), abs(p.y)) - .5);\n\n    if(flip)\n        a = 1. - a;\n\n    if(flip && a < .5 && (abs(p.x) - abs(p.y)) * sign(fract(th / pi) - .5) > 0.)\n        a = .4;\n\n    if(!flip && a < .5 && (mod(cp.x + cp.y, 2.) - .5) > 0.)\n        a = .4;\n\n    fragColor.rgb = pow(vec3(a), vec3(1. / 2.2));\n    fragColor.a = 1.;\n}\n\n","name":"Image","description":"","type":"image"}]}