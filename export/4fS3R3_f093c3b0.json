{"ver":"0.1","info":{"id":"4fS3R3","date":"1704446095","viewed":18,"name":"sine visualization","username":"kywi","description":"uwu","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2. - 1.;\n    uv *= 4.;\n    uv.x *= iResolution.x/iResolution.y;\n    // Time varying pixel color\n    \n    float d = uv.y > sin(uv.x * iTime) * (cos(iTime) + 1.) - .02 && uv.y < sin(uv.x * iTime) * (cos(iTime) + 1.) + .02 ? 1. : 0.;\n    \n    float e = uv.x > -0.02 && uv.x < 0.02 || uv.y > -0.02 && uv.y < 0.02 ? .5 : 0.;\n    \n    \n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,4,4));\n    vec3 col = d * vec3(tan(iTime) * 5.0,4.5,.0) + e * vec3(.5, .5, .5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}