{"ver":"0.1","info":{"id":"sltSzB","date":"1639384768","viewed":54,"name":"Matt Parker Cirare","username":"OlafDoschke","description":"Cirare after Matt Parkers definition in https://www.youtube.com/watch?v=gjtTcyWL0NA (end of video)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dcircle","square","cirare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Cirare(vec2 uv, float r, float n, float blur)\n{\n    float c = pow(abs(uv.x),n)+pow(abs(uv.y),n);\n    \n    return smoothstep(r+blur,r-blur,c);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 vu = 1.2*(2.*fragCoord/iResolution.xy-vec2(1.));\n    \n    // Aspect ratio fix\n    vu.x *=iResolution.x/iResolution.y;\n    \n    vec2 uv = sqrt(2.)*vec2(vu.x+vu.y, vu.x-vu.y);\n\n    // Time varying pixel color\n    fragColor = vec4(Cirare(uv, sqrt(2.), 1.5, .01));\n}","name":"Image","description":"","type":"image"}]}