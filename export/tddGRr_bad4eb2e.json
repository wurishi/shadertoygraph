{"ver":"0.1","info":{"id":"tddGRr","date":"1567688306","viewed":153,"name":"trippy breathing exercise","username":"1nsignia","description":"breathe\n\n15min shader exercise meant for a minigame and discarded in favour of visual coherency of the game","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["trippy","breathing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1416\n\nvec3 bg(vec2 uv) {\n    return 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n}\n\nvoid fold(inout float dist, float w) {\n    dist = abs(dist) - w;\n}\n\nvoid foldall(inout float dist, float w, float o) {\n    if (dist <= 0.)\n    \tdist = abs(mod(dist - w/2. + o*w, 2.*w) - w) - w/2.;   \n}\n\nfloat mixsin(float a, float b, float speed) {\n    return mix(a, b, sin(iTime * speed)/2.+.5);\n}\n\nfloat tri(in vec2 p)\n{\n    // https://iquilezles.org/articles/distfunctions2d\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nfloat dist(vec2 uv) {\n    float ang = atan(uv.x, uv.y);\n    \n    float o = sin(abs(abs(ang) * 5. + iTime*4.));\n    float s = mixsin(1.1, 8., 1.4);\n    \n    float d = length(uv) - mixsin(.3, .9, 1.) + o * 0.03; //  mixsin(0.03, 0.3, .89);// 0.03;\n    float dd = tri(uv * s) / s;\n    \n    d = max(min(d, dd), -max(d, dd));\n    \n    foldall(d, .05, iTime*5.);\n    \n    return d;\n}\n\nvec3 viz(float d, float r) {\n\tvec3 c = vec3(0);\n    \n    if (d < 0.)\n        c.r = 1. - fract(d * r);\n    else if (d > 0.)\n        c.g = fract(d * r);\n    else\n        c.b = 1.;\n    return c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord/iResolution.xy - .5) * 2.;\n    uv *= vec2(iResolution.x/iResolution.y,1);\n\n    vec3 col = bg(uv);\n    \n    float d = dist(uv);\n    col = mix(col, vec3(.9), smoothstep(0.005, 0., d));\n    \n    // col = viz(d, 8.);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}