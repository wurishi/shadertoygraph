{"ver":"0.1","info":{"id":"ttfSDl","date":"1564584597","viewed":1689,"name":"Shadows (2D)","username":"newbie2718","description":"Implemented 2D shadows using radial-blur.\nYou can move the lights with your mouse.","likes":24,"published":1,"flags":32,"usePreview":1,"tags":["2d","blur","shadow","radial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int   SAMPLES = 24;\nconst float DECAY   = 0.1;\nconst vec3  SHADOW_COL = vec3(0.0);\n\nfloat rand(vec2 seed) { return fract(sin(dot(seed.xy ,vec2(12.9898, 78.233)))*43758.5453); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 texc = texture(iChannel0, uv);\n    \n    vec2 lightp = iMouse.xy/iResolution.xy;\n    vec2 pc = (lightp-uv)*(1.0+(rand(uv+fract(iTime))*2.0-1.0)*0.1);\n    \n    float range = (sin(iTime*0.5)*0.5+0.5)*7.0;\n    float power = (1.0+range)/float(SAMPLES);\n    \n    float shadoww = 0.0;\n    for(int i = 0; i < SAMPLES; ++i)\n    {\n\t\tshadoww += texture(iChannel0, uv+float(i)*DECAY/float(SAMPLES)*pc).a*power; \n    }\n    \n    float mask = 1.0-texc.a;\n    vec3 col = mix(texc.rgb, SHADOW_COL, shadoww*mask);\n\n    float light = max(1.0-length(uv-lightp), 0.0);\n    col *= light;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy*2.0-iResolution.xy)/min(iResolution.x, iResolution.y)*0.5;\n    vec2 odd = mod(floor(uv.yx*16.0), 2.0)*2.0-1.0;\n    vec2 m = mod(abs(odd)*iTime*0.075, vec2(2.0, 2.0));\n    uv = uv+vec2(min(1.0, m.x)-1.0, max(1.0, m.y)-1.0)*odd;\n    \n    float d = smoothstep(0.525, 0.5, texture(iChannel0, uv).a);\n    \n    vec3 col = mix(vec3(0.2, 0.2, 0.2), vec3(.6, 0.1, 0.1), d);\n   \n    fragColor = vec4(col, d);\n}","name":"Buffer A","description":"","type":"buffer"}]}