{"ver":"0.1","info":{"id":"msyXWw","date":"1683690950","viewed":118,"name":"3D Quotient Grid","username":"ChunderFPV","description":"Simple 3D grid using quotient transforms ( x/y, y/z, z/x )","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d","grid","transform","division","quotient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define A(a) mat2(cos(m.a*1.57+vec4(0,-1.57,1.57,0))) // rotate\nvoid mainImage( out vec4 C, in vec2 O )\n{\n    vec2 R = iResolution.xy,\n         m = (iMouse.xy/R*4.)-2.; // mouse coords\n    vec3 u = vec3((O-.5*R)/R.y, 1), c;\n    u.yz *= A(y), // pitch\n    u.xz *= A(x); // yaw\n    u /= u.yzx; // transform coords\n    u = max(abs(u), 1./abs(u)); // reciprocals\n    c = max(vec3(0), 1.-abs(fract(u+.5)-.5)/fwidth(u)/2.); // grids\n    c *= min(vec3(1), 1./abs(u)); // darken\n    C = vec4(c+c*c*4., 1);\n}","name":"Image","description":"","type":"image"}]}