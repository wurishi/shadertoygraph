{"ver":"0.1","info":{"id":"ctVczc","date":"1700507161","viewed":38,"name":"Simple thought bubble","username":"jeremyabel","description":"thonking","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define NUM_BUBBLES 9.\n#define SEED 10.\n#define TWO_PI 6.28318530718\n\n// via Dave Hoskins\nfloat hash11(float p)\n{\n    p = fract(p * 0.1031);\n    p *= p + 33.33;\n    p *= p + p;\n    p = fract(p);\n    return p * 2. - 1.;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n\n\tfloat c = 0.;\n    float r = 1.; //sin(iTime) * 0.5 + 0.5;\n    \n    // center circle\n    c = 1. - (length(uv) - (0.5 * r));\n\n    // edge circles\t\n\tfor (float i = 0.; i < NUM_BUBBLES; i++)\n\t{\n        float rnd = hash11((i / NUM_BUBBLES) + SEED);\n        \n        float th = (i / NUM_BUBBLES) + rnd * 0.02;\n        float x = cos(th * TWO_PI) * r;\n        float y = sin(th * TWO_PI) * r;\n       \n\t\tfloat size = abs(rnd) + sin(500. * rnd + iTime * 3.5) * 0.3;\n\t\tfloat rad = (0.2 + 0.5 * size * 0.25) * r;\n\t\tvec2  pos = vec2(x, y) * 0.5 * r;\n\t\tfloat dis = length(uv - pos);\n\t\t\n\t\tc = max(c, 1. - (dis - rad));\n\t}\n    \n    c = smoothstep(0.99, 1., c); \n\tfragColor = vec4(vec3(c), 1.);\n}","name":"Image","description":"","type":"image"}]}