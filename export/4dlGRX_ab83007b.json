{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"video","id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Change these to see how the blend looks at different resolutions\nint numRows = 8;\nint numCols = 8;\n\n// How quickly should the blend occur\nfloat period = 3.0;\n#define dt (mod(iTime, period) / (period * 0.5))\n\n// Alternate which parts of the board get moved\n#define moveEvens (int(mod(iTime, period * 2.0) > period))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat dx = iResolution.x / float(numRows);\n\tfloat dy = iResolution.y / float(numCols);\n\t\n\tfloat x = fragCoord.x;\n\tfloat y = fragCoord.y;\n\t\n\tx *= iResolution.x/iResolution.y;\n\t\n\tint rowx = int(x / dx);\n\tint rowy = int(y / dy);\n\t\n\tint xeven = int(mod(float(rowx), 2.0));\n\tint yeven = int(mod(float(rowy), 2.0));\n\t\n\tfloat dtx = dx * dt;\n\tfloat dty = dy * dt;\n\t\n\tif (moveEvens == 1)\n\t{\n\t\tif (xeven == 1)\n\t\t{\n\t\t\ty = y + dty;\n\t\t\trowy = int(y / dy);\n\t\t}\n\t\tif (yeven == 1)\n\t\t{\n\t\t\tx = x + dtx;\n\t\t\trowx = int(x / dx);\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (xeven == 0)\n\t\t{\n\t\t\ty = y + dty;\n\t\t\trowy = int(y / dy);\n\t\t}\n\t\tif (yeven == 1)\n\t\t{\n\t\t\tx = x + dtx;\n\t\t\trowx = int(x / dx);\n\t\t}\n\t}\n\n\txeven = int(mod(float(rowx), 2.0));\n\tyeven = int(mod(float(rowy), 2.0));\n\n\tif (xeven == yeven)\n\t{\n\t\tvec4 c = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\t\t\n\t\tif (c.x == 0.0 && c.y == 0.0 && c.z == 0.0)\n\t\t{\n\t\t\tc = vec4(1.0, 1.0, 1.0, 1.0);\n\t\t}\n\n\t\tfragColor = c;\n\t}\n\telse\n\t{\n\t\tvec4 c = texture(iChannel1, fragCoord.xy / iResolution.xy);\n\t\tfragColor = c;\n\t\t\n\t}\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dlGRX","date":"1376038293","viewed":234,"name":"Checkerboard blender","username":"toothmang","description":"just a really simple blend effect","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d"],"hasliked":0,"parentid":"","parentname":""}}