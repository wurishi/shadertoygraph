{"ver":"0.1","info":{"id":"XtGcWh","date":"1535946283","viewed":112,"name":"ASMR Crawler","username":"Janitorhell","description":"Started with the Circle Tutorial, then added the Rectangle and finally wound up here.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["meditation","asmr","calming"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) \n{\n\n   float d = length(uv-p);\n   float c = smoothstep(r, r-blur, d);\n   return c;\n    \n}\n\nfloat Band(float t, float start, float end, float blur)\n{\n \n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1*=step2;\n\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur)\n{\n \n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    return band1*=band2;\n\n}\n\n\nfloat Smiley(vec2 uv, vec2 p, float size, float bluramt)\n{\n    \n    uv -= p; //translating coordinate system\n    uv /= size; //scaling coordinate\n    \n    float mask1 = Circle(uv, vec2(0.), .41, bluramt);\n    //Top Bottom Center\n    mask1 -= Circle(uv, vec2(0., .310), .085, bluramt);\n    mask1 -= Circle(uv, vec2(0., -.310), .085, bluramt);\n    //Top Quarters\n    mask1 -= Circle(uv, vec2(-.22, -.22), .085, bluramt);\n    mask1 -= Circle(uv, vec2(.22, -.22), .085, bluramt);\n     //Bottom Quarters\n    mask1 -= Circle(uv, vec2(-.22, .22), .085, bluramt);\n    mask1 -= Circle(uv, vec2(.22, .22), .085, bluramt);\n    //Right left center\n    //mask1 -= Circle(uv, vec2(-.310, 0.), .085, bluramt);\n    //mask1 -= Circle(uv, vec2(.310, 0.), .085, bluramt);\n    \n    float mouth = Circle(uv, vec2(0., 0.), .33, bluramt); // outer edge of Black circle\n    //mouth -= Circle(uv, vec2(0., 0.), .25, bluramt); // inner edge of Black circle    \n    mouth += Circle(uv, vec2(0., 0.), .23, bluramt); //inner circle yellow\n    \n    mask1 -= mouth;\n    \n    return mask1;\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime;\n    float ix = iResolution.x;\n    float iy = iResolution.y;\n    float bluramt = 0.2;\n\n    uv -= .5;\n    uv.x *= ix/iy;\n   \n    vec3 col = vec3(0.);\n    vec3 col1 = vec3(0.);\n    \n    float mask = 0.;\n    float mask1 = 0.;\n        \n        //Smiley(uv, vec2(.0, .0), .75, bluramt);\n    t = t * 3.;\n    \n    float x = uv.x;\n    float m =sin(t + x*40.)*.09;\n    float y = uv.y-m;\n   \n    \n    mask = Smiley(vec2(x, y), vec2(.0, .0), .90, .04);\n    mask1 = Rect(vec2(x, y), -.99, .99, -.3, .3, .02);\n        \n    col1 = vec3(.5, .5, 1.)*mask1;\n    col = vec3(1., .5, .5)*mask;\n    \n    \n    fragColor = vec4(col1, 2.)/+vec4(col, 2.);\n   \n}\n","name":"Image","description":"","type":"image"}]}